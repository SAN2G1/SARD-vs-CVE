command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	810581	File	data/converged/CVE-2019-16718~_radare2/cmd_anal.c								
ANR	810582	DeclStmt									
ANR	810583	Decl							const char	const char * [ ]	help_msg_a
ANR	810584	DeclStmt									
ANR	810585	Decl							const char	const char * [ ]	help_msg_aa
ANR	810586	DeclStmt									
ANR	810587	Decl							const char	const char * [ ]	help_msg_afls
ANR	810588	DeclStmt									
ANR	810589	Decl							const char	const char * [ ]	help_msg_ai
ANR	810590	DeclStmt									
ANR	810591	Decl							const char	const char * [ ]	help_msg_aar
ANR	810592	DeclStmt									
ANR	810593	Decl							const char	const char * [ ]	help_msg_ab
ANR	810594	DeclStmt									
ANR	810595	Decl							const char	const char * [ ]	help_msg_abt
ANR	810596	DeclStmt									
ANR	810597	Decl							const char	const char * [ ]	help_msg_ac
ANR	810598	DeclStmt									
ANR	810599	Decl							const char	const char * [ ]	help_msg_ad
ANR	810600	DeclStmt									
ANR	810601	Decl							const char	const char * [ ]	help_msg_ae
ANR	810602	DeclStmt									
ANR	810603	Decl							const char	const char * [ ]	help_detail_ae
ANR	810604	DeclStmt									
ANR	810605	Decl							const char	const char * [ ]	help_msg_aea
ANR	810606	DeclStmt									
ANR	810607	Decl							const char	const char * [ ]	help_msg_aec
ANR	810608	DeclStmt									
ANR	810609	Decl							const char	const char * [ ]	help_msg_aeC
ANR	810610	DeclStmt									
ANR	810611	Decl							const char	const char * [ ]	help_msg_aep
ANR	810612	DeclStmt									
ANR	810613	Decl							const char	const char * [ ]	help_msg_aets
ANR	810614	DeclStmt									
ANR	810615	Decl							const char	const char * [ ]	help_msg_af
ANR	810616	DeclStmt									
ANR	810617	Decl							const char	const char * [ ]	help_msg_afb
ANR	810618	DeclStmt									
ANR	810619	Decl							const char	const char * [ ]	help_msg_afc
ANR	810620	DeclStmt									
ANR	810621	Decl							const char	const char * [ ]	help_msg_afC
ANR	810622	DeclStmt									
ANR	810623	Decl							const char	const char * [ ]	help_msg_afi
ANR	810624	DeclStmt									
ANR	810625	Decl							const char	const char * [ ]	help_msg_afl
ANR	810626	DeclStmt									
ANR	810627	Decl							const char	const char * [ ]	help_msg_afll
ANR	810628	DeclStmt									
ANR	810629	Decl							const char	const char * [ ]	help_msg_afn
ANR	810630	DeclStmt									
ANR	810631	Decl							const char	const char * [ ]	help_msg_afs
ANR	810632	DeclStmt									
ANR	810633	Decl							const char	const char * [ ]	help_msg_aft
ANR	810634	DeclStmt									
ANR	810635	Decl							const char	const char * [ ]	help_msg_afv
ANR	810636	DeclStmt									
ANR	810637	Decl							const char	const char * [ ]	help_msg_afvb
ANR	810638	DeclStmt									
ANR	810639	Decl							const char	const char * [ ]	help_msg_afvr
ANR	810640	DeclStmt									
ANR	810641	Decl							const char	const char * [ ]	help_msg_afvs
ANR	810642	DeclStmt									
ANR	810643	Decl							const char	const char * [ ]	help_msg_ag
ANR	810644	DeclStmt									
ANR	810645	Decl							const char	const char * [ ]	help_msg_age
ANR	810646	DeclStmt									
ANR	810647	Decl							const char	const char * [ ]	help_msg_agn
ANR	810648	DeclStmt									
ANR	810649	Decl							const char	const char * [ ]	help_msg_ah
ANR	810650	DeclStmt									
ANR	810651	Decl							const char	const char * [ ]	help_msg_ahi
ANR	810652	DeclStmt									
ANR	810653	Decl							const char	const char * [ ]	help_msg_ao
ANR	810654	DeclStmt									
ANR	810655	Decl							const char	const char * [ ]	help_msg_ar
ANR	810656	DeclStmt									
ANR	810657	Decl							const char	const char * [ ]	help_msg_ara
ANR	810658	DeclStmt									
ANR	810659	Decl							const char	const char * [ ]	help_msg_arw
ANR	810660	DeclStmt									
ANR	810661	Decl							const char	const char * [ ]	help_msg_as
ANR	810662	DeclStmt									
ANR	810663	Decl							const char	const char * [ ]	help_msg_av
ANR	810664	DeclStmt									
ANR	810665	Decl							const char	const char * [ ]	help_msg_ax
ANR	810666	Function	cmd_anal_init	689:0:29720:30975							
ANR	810667	FunctionDef	cmd_anal_init (RCore * core)		810666	0					
ANR	810668	CompoundStatement		689:39:29759:30975	810666	0					
ANR	810669	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , a )"	690:1:29762:29793	810666	0	True				
ANR	810670	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , a )"		810666	0					
ANR	810671	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810672	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810673	ArgumentList	core		810666	1					
ANR	810674	Argument	core		810666	0					
ANR	810675	Identifier	core		810666	0					
ANR	810676	Argument	a		810666	1					
ANR	810677	Identifier	a		810666	0					
ANR	810678	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , aa )"	691:1:29796:29828	810666	1	True				
ANR	810679	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , aa )"		810666	0					
ANR	810680	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810681	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810682	ArgumentList	core		810666	1					
ANR	810683	Argument	core		810666	0					
ANR	810684	Identifier	core		810666	0					
ANR	810685	Argument	aa		810666	1					
ANR	810686	Identifier	aa		810666	0					
ANR	810687	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , aar )"	692:1:29831:29864	810666	2	True				
ANR	810688	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , aar )"		810666	0					
ANR	810689	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810690	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810691	ArgumentList	core		810666	1					
ANR	810692	Argument	core		810666	0					
ANR	810693	Identifier	core		810666	0					
ANR	810694	Argument	aar		810666	1					
ANR	810695	Identifier	aar		810666	0					
ANR	810696	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ab )"	693:1:29867:29899	810666	3	True				
ANR	810697	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ab )"		810666	0					
ANR	810698	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810699	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810700	ArgumentList	core		810666	1					
ANR	810701	Argument	core		810666	0					
ANR	810702	Identifier	core		810666	0					
ANR	810703	Argument	ab		810666	1					
ANR	810704	Identifier	ab		810666	0					
ANR	810705	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ac )"	694:1:29902:29934	810666	4	True				
ANR	810706	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ac )"		810666	0					
ANR	810707	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810708	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810709	ArgumentList	core		810666	1					
ANR	810710	Argument	core		810666	0					
ANR	810711	Identifier	core		810666	0					
ANR	810712	Argument	ac		810666	1					
ANR	810713	Identifier	ac		810666	0					
ANR	810714	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ad )"	695:1:29937:29969	810666	5	True				
ANR	810715	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ad )"		810666	0					
ANR	810716	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810717	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810718	ArgumentList	core		810666	1					
ANR	810719	Argument	core		810666	0					
ANR	810720	Identifier	core		810666	0					
ANR	810721	Argument	ad		810666	1					
ANR	810722	Identifier	ad		810666	0					
ANR	810723	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ae )"	696:1:29972:30004	810666	6	True				
ANR	810724	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ae )"		810666	0					
ANR	810725	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810726	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810727	ArgumentList	core		810666	1					
ANR	810728	Argument	core		810666	0					
ANR	810729	Identifier	core		810666	0					
ANR	810730	Argument	ae		810666	1					
ANR	810731	Identifier	ae		810666	0					
ANR	810732	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , aea )"	697:1:30007:30040	810666	7	True				
ANR	810733	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , aea )"		810666	0					
ANR	810734	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810735	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810736	ArgumentList	core		810666	1					
ANR	810737	Argument	core		810666	0					
ANR	810738	Identifier	core		810666	0					
ANR	810739	Argument	aea		810666	1					
ANR	810740	Identifier	aea		810666	0					
ANR	810741	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , aec )"	698:1:30043:30076	810666	8	True				
ANR	810742	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , aec )"		810666	0					
ANR	810743	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810744	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810745	ArgumentList	core		810666	1					
ANR	810746	Argument	core		810666	0					
ANR	810747	Identifier	core		810666	0					
ANR	810748	Argument	aec		810666	1					
ANR	810749	Identifier	aec		810666	0					
ANR	810750	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , aep )"	699:1:30079:30112	810666	9	True				
ANR	810751	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , aep )"		810666	0					
ANR	810752	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810753	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810754	ArgumentList	core		810666	1					
ANR	810755	Argument	core		810666	0					
ANR	810756	Identifier	core		810666	0					
ANR	810757	Argument	aep		810666	1					
ANR	810758	Identifier	aep		810666	0					
ANR	810759	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , af )"	700:1:30115:30147	810666	10	True				
ANR	810760	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , af )"		810666	0					
ANR	810761	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810762	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810763	ArgumentList	core		810666	1					
ANR	810764	Argument	core		810666	0					
ANR	810765	Identifier	core		810666	0					
ANR	810766	Argument	af		810666	1					
ANR	810767	Identifier	af		810666	0					
ANR	810768	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , afb )"	701:1:30150:30183	810666	11	True				
ANR	810769	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , afb )"		810666	0					
ANR	810770	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810771	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810772	ArgumentList	core		810666	1					
ANR	810773	Argument	core		810666	0					
ANR	810774	Identifier	core		810666	0					
ANR	810775	Argument	afb		810666	1					
ANR	810776	Identifier	afb		810666	0					
ANR	810777	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , afc )"	702:1:30186:30219	810666	12	True				
ANR	810778	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , afc )"		810666	0					
ANR	810779	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810780	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810781	ArgumentList	core		810666	1					
ANR	810782	Argument	core		810666	0					
ANR	810783	Identifier	core		810666	0					
ANR	810784	Argument	afc		810666	1					
ANR	810785	Identifier	afc		810666	0					
ANR	810786	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , afC )"	703:1:30222:30255	810666	13	True				
ANR	810787	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , afC )"		810666	0					
ANR	810788	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810789	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810790	ArgumentList	core		810666	1					
ANR	810791	Argument	core		810666	0					
ANR	810792	Identifier	core		810666	0					
ANR	810793	Argument	afC		810666	1					
ANR	810794	Identifier	afC		810666	0					
ANR	810795	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , afi )"	704:1:30258:30291	810666	14	True				
ANR	810796	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , afi )"		810666	0					
ANR	810797	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810798	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810799	ArgumentList	core		810666	1					
ANR	810800	Argument	core		810666	0					
ANR	810801	Identifier	core		810666	0					
ANR	810802	Argument	afi		810666	1					
ANR	810803	Identifier	afi		810666	0					
ANR	810804	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , afl )"	705:1:30294:30327	810666	15	True				
ANR	810805	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , afl )"		810666	0					
ANR	810806	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810807	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810808	ArgumentList	core		810666	1					
ANR	810809	Argument	core		810666	0					
ANR	810810	Identifier	core		810666	0					
ANR	810811	Argument	afl		810666	1					
ANR	810812	Identifier	afl		810666	0					
ANR	810813	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , afll )"	706:1:30330:30364	810666	16	True				
ANR	810814	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , afll )"		810666	0					
ANR	810815	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810816	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810817	ArgumentList	core		810666	1					
ANR	810818	Argument	core		810666	0					
ANR	810819	Identifier	core		810666	0					
ANR	810820	Argument	afll		810666	1					
ANR	810821	Identifier	afll		810666	0					
ANR	810822	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , afn )"	707:1:30367:30400	810666	17	True				
ANR	810823	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , afn )"		810666	0					
ANR	810824	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810825	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810826	ArgumentList	core		810666	1					
ANR	810827	Argument	core		810666	0					
ANR	810828	Identifier	core		810666	0					
ANR	810829	Argument	afn		810666	1					
ANR	810830	Identifier	afn		810666	0					
ANR	810831	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , aft )"	708:1:30403:30436	810666	18	True				
ANR	810832	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , aft )"		810666	0					
ANR	810833	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810834	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810835	ArgumentList	core		810666	1					
ANR	810836	Argument	core		810666	0					
ANR	810837	Identifier	core		810666	0					
ANR	810838	Argument	aft		810666	1					
ANR	810839	Identifier	aft		810666	0					
ANR	810840	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , afv )"	709:1:30439:30472	810666	19	True				
ANR	810841	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , afv )"		810666	0					
ANR	810842	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810843	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810844	ArgumentList	core		810666	1					
ANR	810845	Argument	core		810666	0					
ANR	810846	Identifier	core		810666	0					
ANR	810847	Argument	afv		810666	1					
ANR	810848	Identifier	afv		810666	0					
ANR	810849	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , afvb )"	710:1:30475:30509	810666	20	True				
ANR	810850	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , afvb )"		810666	0					
ANR	810851	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810852	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810853	ArgumentList	core		810666	1					
ANR	810854	Argument	core		810666	0					
ANR	810855	Identifier	core		810666	0					
ANR	810856	Argument	afvb		810666	1					
ANR	810857	Identifier	afvb		810666	0					
ANR	810858	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , afvr )"	711:1:30512:30546	810666	21	True				
ANR	810859	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , afvr )"		810666	0					
ANR	810860	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810861	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810862	ArgumentList	core		810666	1					
ANR	810863	Argument	core		810666	0					
ANR	810864	Identifier	core		810666	0					
ANR	810865	Argument	afvr		810666	1					
ANR	810866	Identifier	afvr		810666	0					
ANR	810867	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , afvs )"	712:1:30549:30583	810666	22	True				
ANR	810868	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , afvs )"		810666	0					
ANR	810869	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810870	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810871	ArgumentList	core		810666	1					
ANR	810872	Argument	core		810666	0					
ANR	810873	Identifier	core		810666	0					
ANR	810874	Argument	afvs		810666	1					
ANR	810875	Identifier	afvs		810666	0					
ANR	810876	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ag )"	713:1:30586:30618	810666	23	True				
ANR	810877	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ag )"		810666	0					
ANR	810878	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810879	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810880	ArgumentList	core		810666	1					
ANR	810881	Argument	core		810666	0					
ANR	810882	Identifier	core		810666	0					
ANR	810883	Argument	ag		810666	1					
ANR	810884	Identifier	ag		810666	0					
ANR	810885	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , age )"	714:1:30621:30654	810666	24	True				
ANR	810886	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , age )"		810666	0					
ANR	810887	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810888	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810889	ArgumentList	core		810666	1					
ANR	810890	Argument	core		810666	0					
ANR	810891	Identifier	core		810666	0					
ANR	810892	Argument	age		810666	1					
ANR	810893	Identifier	age		810666	0					
ANR	810894	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , agn )"	715:1:30657:30690	810666	25	True				
ANR	810895	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , agn )"		810666	0					
ANR	810896	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810897	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810898	ArgumentList	core		810666	1					
ANR	810899	Argument	core		810666	0					
ANR	810900	Identifier	core		810666	0					
ANR	810901	Argument	agn		810666	1					
ANR	810902	Identifier	agn		810666	0					
ANR	810903	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ah )"	716:1:30693:30725	810666	26	True				
ANR	810904	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ah )"		810666	0					
ANR	810905	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810906	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810907	ArgumentList	core		810666	1					
ANR	810908	Argument	core		810666	0					
ANR	810909	Identifier	core		810666	0					
ANR	810910	Argument	ah		810666	1					
ANR	810911	Identifier	ah		810666	0					
ANR	810912	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ahi )"	717:1:30728:30761	810666	27	True				
ANR	810913	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ahi )"		810666	0					
ANR	810914	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810915	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810916	ArgumentList	core		810666	1					
ANR	810917	Argument	core		810666	0					
ANR	810918	Identifier	core		810666	0					
ANR	810919	Argument	ahi		810666	1					
ANR	810920	Identifier	ahi		810666	0					
ANR	810921	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ao )"	718:1:30764:30796	810666	28	True				
ANR	810922	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ao )"		810666	0					
ANR	810923	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810924	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810925	ArgumentList	core		810666	1					
ANR	810926	Argument	core		810666	0					
ANR	810927	Identifier	core		810666	0					
ANR	810928	Argument	ao		810666	1					
ANR	810929	Identifier	ao		810666	0					
ANR	810930	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ar )"	719:1:30799:30831	810666	29	True				
ANR	810931	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ar )"		810666	0					
ANR	810932	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810933	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810934	ArgumentList	core		810666	1					
ANR	810935	Argument	core		810666	0					
ANR	810936	Identifier	core		810666	0					
ANR	810937	Argument	ar		810666	1					
ANR	810938	Identifier	ar		810666	0					
ANR	810939	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ara )"	720:1:30834:30867	810666	30	True				
ANR	810940	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ara )"		810666	0					
ANR	810941	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810942	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810943	ArgumentList	core		810666	1					
ANR	810944	Argument	core		810666	0					
ANR	810945	Identifier	core		810666	0					
ANR	810946	Argument	ara		810666	1					
ANR	810947	Identifier	ara		810666	0					
ANR	810948	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , arw )"	721:1:30870:30903	810666	31	True				
ANR	810949	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , arw )"		810666	0					
ANR	810950	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810951	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810952	ArgumentList	core		810666	1					
ANR	810953	Argument	core		810666	0					
ANR	810954	Identifier	core		810666	0					
ANR	810955	Argument	arw		810666	1					
ANR	810956	Identifier	arw		810666	0					
ANR	810957	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , as )"	722:1:30906:30938	810666	32	True				
ANR	810958	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , as )"		810666	0					
ANR	810959	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810960	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810961	ArgumentList	core		810666	1					
ANR	810962	Argument	core		810666	0					
ANR	810963	Identifier	core		810666	0					
ANR	810964	Argument	as		810666	1					
ANR	810965	Identifier	as		810666	0					
ANR	810966	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ax )"	723:1:30941:30973	810666	33	True				
ANR	810967	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ax )"		810666	0					
ANR	810968	Callee	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810969	Identifier	DEFINE_CMD_DESCRIPTOR		810666	0					
ANR	810970	ArgumentList	core		810666	1					
ANR	810971	Argument	core		810666	0					
ANR	810972	Identifier	core		810666	0					
ANR	810973	Argument	ax		810666	1					
ANR	810974	Identifier	ax		810666	0					
ANR	810975	ReturnType	static void		810666	1					
ANR	810976	Identifier	cmd_anal_init		810666	2					
ANR	810977	ParameterList	RCore * core		810666	3					
ANR	810978	Parameter	RCore * core	689:26:29746:29756	810666	0	True				
ANR	810979	ParameterType	RCore *		810666	0					
ANR	810980	Identifier	core		810666	1					
ANR	810981	CFGEntryNode	ENTRY		810666		True				
ANR	810982	CFGExitNode	EXIT		810666		True				
ANR	810983	Symbol	afll		810666						
ANR	810984	Symbol	agn		810666						
ANR	810985	Symbol	afvr		810666						
ANR	810986	Symbol	aep		810666						
ANR	810987	Symbol	afvs		810666						
ANR	810988	Symbol	ara		810666						
ANR	810989	Symbol	aar		810666						
ANR	810990	Symbol	afb		810666						
ANR	810991	Symbol	afc		810666						
ANR	810992	Symbol	aa		810666						
ANR	810993	Symbol	a		810666						
ANR	810994	Symbol	ab		810666						
ANR	810995	Symbol	ac		810666						
ANR	810996	Symbol	ad		810666						
ANR	810997	Symbol	ahi		810666						
ANR	810998	Symbol	ae		810666						
ANR	810999	Symbol	af		810666						
ANR	811000	Symbol	afi		810666						
ANR	811001	Symbol	afl		810666						
ANR	811002	Symbol	ag		810666						
ANR	811003	Symbol	ah		810666						
ANR	811004	Symbol	arw		810666						
ANR	811005	Symbol	afn		810666						
ANR	811006	Symbol	aft		810666						
ANR	811007	Symbol	ao		810666						
ANR	811008	Symbol	afv		810666						
ANR	811009	Symbol	core		810666						
ANR	811010	Symbol	ar		810666						
ANR	811011	Symbol	as		810666						
ANR	811012	Symbol	ax		810666						
ANR	811013	Symbol	aea		810666						
ANR	811014	Symbol	afvb		810666						
ANR	811015	Symbol	aec		810666						
ANR	811016	Symbol	age		810666						
ANR	811017	Symbol	afC		810666						
ANR	811018	Function	cmpname	726:0:30978:31111							
ANR	811019	FunctionDef	"cmpname (const void * _a , const void * _b)"		811018	0					
ANR	811020	CompoundStatement		726:52:31030:31111	811018	0					
ANR	811021	IdentifierDeclStatement	"const RAnalFunction * a = _a , * b = _b ;"	727:1:31033:31069	811018	0	True				
ANR	811022	IdentifierDecl	* a = _a		811018	0					
ANR	811023	IdentifierDeclType	const RAnalFunction *		811018	0					
ANR	811024	Identifier	a		811018	1					
ANR	811025	AssignmentExpression	* a = _a		811018	2		=			
ANR	811026	Identifier	_a		811018	0					
ANR	811027	Identifier	_a		811018	1					
ANR	811028	IdentifierDecl	* b = _b		811018	1					
ANR	811029	IdentifierDeclType	const RAnalFunction *		811018	0					
ANR	811030	Identifier	b		811018	1					
ANR	811031	AssignmentExpression	* b = _b		811018	2		=			
ANR	811032	Identifier	_b		811018	0					
ANR	811033	Identifier	_b		811018	1					
ANR	811034	ReturnStatement	"return ( int ) strcmp ( a -> name , b -> name ) ;"	728:1:31072:31109	811018	1	True				
ANR	811035	CastExpression	"( int ) strcmp ( a -> name , b -> name )"		811018	0					
ANR	811036	CastTarget	int		811018	0					
ANR	811037	CallExpression	"strcmp ( a -> name , b -> name )"		811018	1					
ANR	811038	Callee	strcmp		811018	0					
ANR	811039	Identifier	strcmp		811018	0					
ANR	811040	ArgumentList	a -> name		811018	1					
ANR	811041	Argument	a -> name		811018	0					
ANR	811042	PtrMemberAccess	a -> name		811018	0					
ANR	811043	Identifier	a		811018	0					
ANR	811044	Identifier	name		811018	1					
ANR	811045	Argument	b -> name		811018	1					
ANR	811046	PtrMemberAccess	b -> name		811018	0					
ANR	811047	Identifier	b		811018	0					
ANR	811048	Identifier	name		811018	1					
ANR	811049	ReturnType	static int		811018	1					
ANR	811050	Identifier	cmpname		811018	2					
ANR	811051	ParameterList	"const void * _a , const void * _b"		811018	3					
ANR	811052	Parameter	const void * _a	726:20:30998:31011	811018	0	True				
ANR	811053	ParameterType	const void *		811018	0					
ANR	811054	Identifier	_a		811018	1					
ANR	811055	Parameter	const void * _b	726:36:31014:31027	811018	1	True				
ANR	811056	ParameterType	const void *		811018	0					
ANR	811057	Identifier	_b		811018	1					
ANR	811058	CFGEntryNode	ENTRY		811018		True				
ANR	811059	CFGExitNode	EXIT		811018		True				
ANR	811060	Symbol	strcmp		811018						
ANR	811061	Symbol	a		811018						
ANR	811062	Symbol	_a		811018						
ANR	811063	Symbol	b		811018						
ANR	811064	Symbol	_b		811018						
ANR	811065	Symbol	a -> name		811018						
ANR	811066	Symbol	* a		811018						
ANR	811067	Symbol	* b		811018						
ANR	811068	Symbol	b -> name		811018						
ANR	811069	Function	cmpsize	731:0:31114:31320							
ANR	811070	FunctionDef	"cmpsize (const void * _a , const void * _b)"		811069	0					
ANR	811071	CompoundStatement		731:52:31166:31320	811069	0					
ANR	811072	IdentifierDeclStatement	"const RAnalFunction * a = _a , * b = _b ;"	732:1:31169:31205	811069	0	True				
ANR	811073	IdentifierDecl	* a = _a		811069	0					
ANR	811074	IdentifierDeclType	const RAnalFunction *		811069	0					
ANR	811075	Identifier	a		811069	1					
ANR	811076	AssignmentExpression	* a = _a		811069	2		=			
ANR	811077	Identifier	_a		811069	0					
ANR	811078	Identifier	_a		811069	1					
ANR	811079	IdentifierDecl	* b = _b		811069	1					
ANR	811080	IdentifierDeclType	const RAnalFunction *		811069	0					
ANR	811081	Identifier	b		811069	1					
ANR	811082	AssignmentExpression	* b = _b		811069	2		=			
ANR	811083	Identifier	_b		811069	0					
ANR	811084	Identifier	_b		811069	1					
ANR	811085	IdentifierDeclStatement	int sa = ( int ) r_anal_fcn_size ( a ) ;	733:1:31208:31241	811069	1	True				
ANR	811086	IdentifierDecl	sa = ( int ) r_anal_fcn_size ( a )		811069	0					
ANR	811087	IdentifierDeclType	int		811069	0					
ANR	811088	Identifier	sa		811069	1					
ANR	811089	AssignmentExpression	sa = ( int ) r_anal_fcn_size ( a )		811069	2		=			
ANR	811090	Identifier	sa		811069	0					
ANR	811091	CastExpression	( int ) r_anal_fcn_size ( a )		811069	1					
ANR	811092	CastTarget	int		811069	0					
ANR	811093	CallExpression	r_anal_fcn_size ( a )		811069	1					
ANR	811094	Callee	r_anal_fcn_size		811069	0					
ANR	811095	Identifier	r_anal_fcn_size		811069	0					
ANR	811096	ArgumentList	a		811069	1					
ANR	811097	Argument	a		811069	0					
ANR	811098	Identifier	a		811069	0					
ANR	811099	IdentifierDeclStatement	int sb = ( int ) r_anal_fcn_size ( b ) ;	734:1:31244:31277	811069	2	True				
ANR	811100	IdentifierDecl	sb = ( int ) r_anal_fcn_size ( b )		811069	0					
ANR	811101	IdentifierDeclType	int		811069	0					
ANR	811102	Identifier	sb		811069	1					
ANR	811103	AssignmentExpression	sb = ( int ) r_anal_fcn_size ( b )		811069	2		=			
ANR	811104	Identifier	sb		811069	0					
ANR	811105	CastExpression	( int ) r_anal_fcn_size ( b )		811069	1					
ANR	811106	CastTarget	int		811069	0					
ANR	811107	CallExpression	r_anal_fcn_size ( b )		811069	1					
ANR	811108	Callee	r_anal_fcn_size		811069	0					
ANR	811109	Identifier	r_anal_fcn_size		811069	0					
ANR	811110	ArgumentList	b		811069	1					
ANR	811111	Argument	b		811069	0					
ANR	811112	Identifier	b		811069	0					
ANR	811113	ReturnStatement	return ( sa > sb ) ? - 1 : ( sa < sb ) ? 1 : 0 ;	735:1:31280:31318	811069	3	True				
ANR	811114	ConditionalExpression	( sa > sb ) ? - 1 : ( sa < sb ) ? 1 : 0		811069	0					
ANR	811115	Condition	sa > sb		811069	0					
ANR	811116	RelationalExpression	sa > sb		811069	0		>			
ANR	811117	Identifier	sa		811069	0					
ANR	811118	Identifier	sb		811069	1					
ANR	811119	UnaryOperationExpression	- 1		811069	1					
ANR	811120	UnaryOperator	-		811069	0					
ANR	811121	PrimaryExpression	1		811069	1					
ANR	811122	ConditionalExpression	( sa < sb ) ? 1 : 0		811069	2					
ANR	811123	Condition	sa < sb		811069	0					
ANR	811124	RelationalExpression	sa < sb		811069	0		<			
ANR	811125	Identifier	sa		811069	0					
ANR	811126	Identifier	sb		811069	1					
ANR	811127	PrimaryExpression	1		811069	1					
ANR	811128	PrimaryExpression	0		811069	2					
ANR	811129	ReturnType	static int		811069	1					
ANR	811130	Identifier	cmpsize		811069	2					
ANR	811131	ParameterList	"const void * _a , const void * _b"		811069	3					
ANR	811132	Parameter	const void * _a	731:20:31134:31147	811069	0	True				
ANR	811133	ParameterType	const void *		811069	0					
ANR	811134	Identifier	_a		811069	1					
ANR	811135	Parameter	const void * _b	731:36:31150:31163	811069	1	True				
ANR	811136	ParameterType	const void *		811069	0					
ANR	811137	Identifier	_b		811069	1					
ANR	811138	CFGEntryNode	ENTRY		811069		True				
ANR	811139	CFGExitNode	EXIT		811069		True				
ANR	811140	Symbol	a		811069						
ANR	811141	Symbol	_a		811069						
ANR	811142	Symbol	b		811069						
ANR	811143	Symbol	_b		811069						
ANR	811144	Symbol	r_anal_fcn_size		811069						
ANR	811145	Symbol	sa		811069						
ANR	811146	Symbol	sb		811069						
ANR	811147	Function	cmpbbs	738:0:31323:31534							
ANR	811148	FunctionDef	"cmpbbs (const void * _a , const void * _b)"		811147	0					
ANR	811149	CompoundStatement		738:51:31374:31534	811147	0					
ANR	811150	IdentifierDeclStatement	"const RAnalFunction * a = _a , * b = _b ;"	739:1:31377:31413	811147	0	True				
ANR	811151	IdentifierDecl	* a = _a		811147	0					
ANR	811152	IdentifierDeclType	const RAnalFunction *		811147	0					
ANR	811153	Identifier	a		811147	1					
ANR	811154	AssignmentExpression	* a = _a		811147	2		=			
ANR	811155	Identifier	_a		811147	0					
ANR	811156	Identifier	_a		811147	1					
ANR	811157	IdentifierDecl	* b = _b		811147	1					
ANR	811158	IdentifierDeclType	const RAnalFunction *		811147	0					
ANR	811159	Identifier	b		811147	1					
ANR	811160	AssignmentExpression	* b = _b		811147	2		=			
ANR	811161	Identifier	_b		811147	0					
ANR	811162	Identifier	_b		811147	1					
ANR	811163	IdentifierDeclStatement	int la = ( int ) r_list_length ( a -> bbs ) ;	740:1:31416:31452	811147	1	True				
ANR	811164	IdentifierDecl	la = ( int ) r_list_length ( a -> bbs )		811147	0					
ANR	811165	IdentifierDeclType	int		811147	0					
ANR	811166	Identifier	la		811147	1					
ANR	811167	AssignmentExpression	la = ( int ) r_list_length ( a -> bbs )		811147	2		=			
ANR	811168	Identifier	la		811147	0					
ANR	811169	CastExpression	( int ) r_list_length ( a -> bbs )		811147	1					
ANR	811170	CastTarget	int		811147	0					
ANR	811171	CallExpression	r_list_length ( a -> bbs )		811147	1					
ANR	811172	Callee	r_list_length		811147	0					
ANR	811173	Identifier	r_list_length		811147	0					
ANR	811174	ArgumentList	a -> bbs		811147	1					
ANR	811175	Argument	a -> bbs		811147	0					
ANR	811176	PtrMemberAccess	a -> bbs		811147	0					
ANR	811177	Identifier	a		811147	0					
ANR	811178	Identifier	bbs		811147	1					
ANR	811179	IdentifierDeclStatement	int lb = ( int ) r_list_length ( b -> bbs ) ;	741:1:31455:31491	811147	2	True				
ANR	811180	IdentifierDecl	lb = ( int ) r_list_length ( b -> bbs )		811147	0					
ANR	811181	IdentifierDeclType	int		811147	0					
ANR	811182	Identifier	lb		811147	1					
ANR	811183	AssignmentExpression	lb = ( int ) r_list_length ( b -> bbs )		811147	2		=			
ANR	811184	Identifier	lb		811147	0					
ANR	811185	CastExpression	( int ) r_list_length ( b -> bbs )		811147	1					
ANR	811186	CastTarget	int		811147	0					
ANR	811187	CallExpression	r_list_length ( b -> bbs )		811147	1					
ANR	811188	Callee	r_list_length		811147	0					
ANR	811189	Identifier	r_list_length		811147	0					
ANR	811190	ArgumentList	b -> bbs		811147	1					
ANR	811191	Argument	b -> bbs		811147	0					
ANR	811192	PtrMemberAccess	b -> bbs		811147	0					
ANR	811193	Identifier	b		811147	0					
ANR	811194	Identifier	bbs		811147	1					
ANR	811195	ReturnStatement	return ( la > lb ) ? - 1 : ( la < lb ) ? 1 : 0 ;	742:1:31494:31532	811147	3	True				
ANR	811196	ConditionalExpression	( la > lb ) ? - 1 : ( la < lb ) ? 1 : 0		811147	0					
ANR	811197	Condition	la > lb		811147	0					
ANR	811198	RelationalExpression	la > lb		811147	0		>			
ANR	811199	Identifier	la		811147	0					
ANR	811200	Identifier	lb		811147	1					
ANR	811201	UnaryOperationExpression	- 1		811147	1					
ANR	811202	UnaryOperator	-		811147	0					
ANR	811203	PrimaryExpression	1		811147	1					
ANR	811204	ConditionalExpression	( la < lb ) ? 1 : 0		811147	2					
ANR	811205	Condition	la < lb		811147	0					
ANR	811206	RelationalExpression	la < lb		811147	0		<			
ANR	811207	Identifier	la		811147	0					
ANR	811208	Identifier	lb		811147	1					
ANR	811209	PrimaryExpression	1		811147	1					
ANR	811210	PrimaryExpression	0		811147	2					
ANR	811211	ReturnType	static int		811147	1					
ANR	811212	Identifier	cmpbbs		811147	2					
ANR	811213	ParameterList	"const void * _a , const void * _b"		811147	3					
ANR	811214	Parameter	const void * _a	738:19:31342:31355	811147	0	True				
ANR	811215	ParameterType	const void *		811147	0					
ANR	811216	Identifier	_a		811147	1					
ANR	811217	Parameter	const void * _b	738:35:31358:31371	811147	1	True				
ANR	811218	ParameterType	const void *		811147	0					
ANR	811219	Identifier	_b		811147	1					
ANR	811220	CFGEntryNode	ENTRY		811147		True				
ANR	811221	CFGExitNode	EXIT		811147		True				
ANR	811222	Symbol	a		811147						
ANR	811223	Symbol	_a		811147						
ANR	811224	Symbol	b		811147						
ANR	811225	Symbol	_b		811147						
ANR	811226	Symbol	la		811147						
ANR	811227	Symbol	lb		811147						
ANR	811228	Symbol	* a		811147						
ANR	811229	Symbol	b -> bbs		811147						
ANR	811230	Symbol	* b		811147						
ANR	811231	Symbol	a -> bbs		811147						
ANR	811232	Symbol	r_list_length		811147						
ANR	811233	Function	cmpaddr	745:0:31537:31689							
ANR	811234	FunctionDef	"cmpaddr (const void * _a , const void * _b)"		811233	0					
ANR	811235	CompoundStatement		745:52:31589:31689	811233	0					
ANR	811236	IdentifierDeclStatement	"const RAnalFunction * a = _a , * b = _b ;"	746:1:31592:31628	811233	0	True				
ANR	811237	IdentifierDecl	* a = _a		811233	0					
ANR	811238	IdentifierDeclType	const RAnalFunction *		811233	0					
ANR	811239	Identifier	a		811233	1					
ANR	811240	AssignmentExpression	* a = _a		811233	2		=			
ANR	811241	Identifier	_a		811233	0					
ANR	811242	Identifier	_a		811233	1					
ANR	811243	IdentifierDecl	* b = _b		811233	1					
ANR	811244	IdentifierDeclType	const RAnalFunction *		811233	0					
ANR	811245	Identifier	b		811233	1					
ANR	811246	AssignmentExpression	* b = _b		811233	2		=			
ANR	811247	Identifier	_b		811233	0					
ANR	811248	Identifier	_b		811233	1					
ANR	811249	ReturnStatement	return ( a -> addr > b -> addr ) ? 1 : ( a -> addr < b -> addr ) ? - 1 : 0 ;	747:1:31631:31687	811233	1	True				
ANR	811250	ConditionalExpression	( a -> addr > b -> addr ) ? 1 : ( a -> addr < b -> addr ) ? - 1 : 0		811233	0					
ANR	811251	Condition	a -> addr > b -> addr		811233	0					
ANR	811252	RelationalExpression	a -> addr > b -> addr		811233	0		>			
ANR	811253	PtrMemberAccess	a -> addr		811233	0					
ANR	811254	Identifier	a		811233	0					
ANR	811255	Identifier	addr		811233	1					
ANR	811256	PtrMemberAccess	b -> addr		811233	1					
ANR	811257	Identifier	b		811233	0					
ANR	811258	Identifier	addr		811233	1					
ANR	811259	PrimaryExpression	1		811233	1					
ANR	811260	ConditionalExpression	( a -> addr < b -> addr ) ? - 1 : 0		811233	2					
ANR	811261	Condition	a -> addr < b -> addr		811233	0					
ANR	811262	RelationalExpression	a -> addr < b -> addr		811233	0		<			
ANR	811263	PtrMemberAccess	a -> addr		811233	0					
ANR	811264	Identifier	a		811233	0					
ANR	811265	Identifier	addr		811233	1					
ANR	811266	PtrMemberAccess	b -> addr		811233	1					
ANR	811267	Identifier	b		811233	0					
ANR	811268	Identifier	addr		811233	1					
ANR	811269	UnaryOperationExpression	- 1		811233	1					
ANR	811270	UnaryOperator	-		811233	0					
ANR	811271	PrimaryExpression	1		811233	1					
ANR	811272	PrimaryExpression	0		811233	2					
ANR	811273	ReturnType	static int		811233	1					
ANR	811274	Identifier	cmpaddr		811233	2					
ANR	811275	ParameterList	"const void * _a , const void * _b"		811233	3					
ANR	811276	Parameter	const void * _a	745:20:31557:31570	811233	0	True				
ANR	811277	ParameterType	const void *		811233	0					
ANR	811278	Identifier	_a		811233	1					
ANR	811279	Parameter	const void * _b	745:36:31573:31586	811233	1	True				
ANR	811280	ParameterType	const void *		811233	0					
ANR	811281	Identifier	_b		811233	1					
ANR	811282	CFGEntryNode	ENTRY		811233		True				
ANR	811283	CFGExitNode	EXIT		811233		True				
ANR	811284	Symbol	a		811233						
ANR	811285	Symbol	_a		811233						
ANR	811286	Symbol	b		811233						
ANR	811287	Symbol	_b		811233						
ANR	811288	Symbol	a -> addr		811233						
ANR	811289	Symbol	* a		811233						
ANR	811290	Symbol	* b		811233						
ANR	811291	Symbol	b -> addr		811233						
ANR	811292	Function	listOpDescriptions	750:0:31692:31826							
ANR	811293	FunctionDef	"listOpDescriptions (void * _core , const char * k , const char * v)"		811292	0					
ANR	811294	CompoundStatement		750:73:31765:31826	811292	0					
ANR	811295	ExpressionStatement	"r_cons_printf ( ""%s=%s\\n"" , k , v )"	751:8:31775:31806	811292	0	True				
ANR	811296	CallExpression	"r_cons_printf ( ""%s=%s\\n"" , k , v )"		811292	0					
ANR	811297	Callee	r_cons_printf		811292	0					
ANR	811298	Identifier	r_cons_printf		811292	0					
ANR	811299	ArgumentList	"""%s=%s\\n"""		811292	1					
ANR	811300	Argument	"""%s=%s\\n"""		811292	0					
ANR	811301	PrimaryExpression	"""%s=%s\\n"""		811292	0					
ANR	811302	Argument	k		811292	1					
ANR	811303	Identifier	k		811292	0					
ANR	811304	Argument	v		811292	2					
ANR	811305	Identifier	v		811292	0					
ANR	811306	ReturnStatement	return 1 ;	752:8:31816:31824	811292	1	True				
ANR	811307	PrimaryExpression	1		811292	0					
ANR	811308	ReturnType	static int		811292	1					
ANR	811309	Identifier	listOpDescriptions		811292	2					
ANR	811310	ParameterList	"void * _core , const char * k , const char * v"		811292	3					
ANR	811311	Parameter	void * _core	750:30:31722:31732	811292	0	True				
ANR	811312	ParameterType	void *		811292	0					
ANR	811313	Identifier	_core		811292	1					
ANR	811314	Parameter	const char * k	750:43:31735:31747	811292	1	True				
ANR	811315	ParameterType	const char *		811292	0					
ANR	811316	Identifier	k		811292	1					
ANR	811317	Parameter	const char * v	750:58:31750:31762	811292	2	True				
ANR	811318	ParameterType	const char *		811292	0					
ANR	811319	Identifier	v		811292	1					
ANR	811320	CFGEntryNode	ENTRY		811292		True				
ANR	811321	CFGExitNode	EXIT		811292		True				
ANR	811322	Symbol	v		811292						
ANR	811323	Symbol	_core		811292						
ANR	811324	Symbol	k		811292						
ANR	811325	Function	anal_is_bad_call	760:0:31899:32892							
ANR	811326	FunctionDef	"anal_is_bad_call (RCore * core , ut64 from , ut64 to , ut64 addr , ut8 * buf , int bufi)"		811325	0					
ANR	811327	CompoundStatement		760:93:31992:32892	811325	0					
ANR	811328	IdentifierDeclStatement	ut64 align = R_ABS ( addr % PE_ALIGN ) ;	761:1:31995:32031	811325	0	True				
ANR	811329	IdentifierDecl	align = R_ABS ( addr % PE_ALIGN )		811325	0					
ANR	811330	IdentifierDeclType	ut64		811325	0					
ANR	811331	Identifier	align		811325	1					
ANR	811332	AssignmentExpression	align = R_ABS ( addr % PE_ALIGN )		811325	2		=			
ANR	811333	Identifier	align		811325	0					
ANR	811334	CallExpression	R_ABS ( addr % PE_ALIGN )		811325	1					
ANR	811335	Callee	R_ABS		811325	0					
ANR	811336	Identifier	R_ABS		811325	0					
ANR	811337	ArgumentList	addr % PE_ALIGN		811325	1					
ANR	811338	Argument	addr % PE_ALIGN		811325	0					
ANR	811339	MultiplicativeExpression	addr % PE_ALIGN		811325	0		%			
ANR	811340	Identifier	addr		811325	0					
ANR	811341	Identifier	PE_ALIGN		811325	1					
ANR	811342	IdentifierDeclStatement	ut32 call_bytes ;	762:1:32034:32049	811325	1	True				
ANR	811343	IdentifierDecl	call_bytes		811325	0					
ANR	811344	IdentifierDeclType	ut32		811325	0					
ANR	811345	Identifier	call_bytes		811325	1					
ANR	811346	IfStatement	if ( align == 0 )		811325	2					
ANR	811347	Condition	align == 0	765:5:32086:32095	811325	0	True				
ANR	811348	EqualityExpression	align == 0		811325	0		==			
ANR	811349	Identifier	align		811325	0					
ANR	811350	PrimaryExpression	0		811325	1					
ANR	811351	CompoundStatement		6:17:105:105	811325	1					
ANR	811352	ExpressionStatement	call_bytes = ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 3 ] << 24	766:2:32102:32148	811325	0	True				
ANR	811353	AssignmentExpression	call_bytes = ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 3 ] << 24		811325	0		=			
ANR	811354	Identifier	call_bytes		811325	0					
ANR	811355	ShiftExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 3 ] << 24		811325	1		<<			
ANR	811356	CastExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 3 ]		811325	0					
ANR	811357	CastTarget	ut32		811325	0					
ANR	811358	ArrayIndexing	( ( ut8 * ) buf ) [ bufi + 3 ]		811325	1					
ANR	811359	CastExpression	( ut8 * ) buf		811325	0					
ANR	811360	CastTarget	ut8 *		811325	0					
ANR	811361	Identifier	buf		811325	1					
ANR	811362	AdditiveExpression	bufi + 3		811325	1		+			
ANR	811363	Identifier	bufi		811325	0					
ANR	811364	PrimaryExpression	3		811325	1					
ANR	811365	PrimaryExpression	24		811325	1					
ANR	811366	ExpressionStatement	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 2 ] << 16	767:2:32152:32199	811325	1	True				
ANR	811367	AssignmentExpression	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 2 ] << 16		811325	0		|=			
ANR	811368	Identifier	call_bytes		811325	0					
ANR	811369	ShiftExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 2 ] << 16		811325	1		<<			
ANR	811370	CastExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 2 ]		811325	0					
ANR	811371	CastTarget	ut32		811325	0					
ANR	811372	ArrayIndexing	( ( ut8 * ) buf ) [ bufi + 2 ]		811325	1					
ANR	811373	CastExpression	( ut8 * ) buf		811325	0					
ANR	811374	CastTarget	ut8 *		811325	0					
ANR	811375	Identifier	buf		811325	1					
ANR	811376	AdditiveExpression	bufi + 2		811325	1		+			
ANR	811377	Identifier	bufi		811325	0					
ANR	811378	PrimaryExpression	2		811325	1					
ANR	811379	PrimaryExpression	16		811325	1					
ANR	811380	ExpressionStatement	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 1 ] << 8	768:2:32203:32249	811325	2	True				
ANR	811381	AssignmentExpression	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 1 ] << 8		811325	0		|=			
ANR	811382	Identifier	call_bytes		811325	0					
ANR	811383	ShiftExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 1 ] << 8		811325	1		<<			
ANR	811384	CastExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 1 ]		811325	0					
ANR	811385	CastTarget	ut32		811325	0					
ANR	811386	ArrayIndexing	( ( ut8 * ) buf ) [ bufi + 1 ]		811325	1					
ANR	811387	CastExpression	( ut8 * ) buf		811325	0					
ANR	811388	CastTarget	ut8 *		811325	0					
ANR	811389	Identifier	buf		811325	1					
ANR	811390	AdditiveExpression	bufi + 1		811325	1		+			
ANR	811391	Identifier	bufi		811325	0					
ANR	811392	PrimaryExpression	1		811325	1					
ANR	811393	PrimaryExpression	8		811325	1					
ANR	811394	ExpressionStatement	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi ]	769:2:32253:32290	811325	3	True				
ANR	811395	AssignmentExpression	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi ]		811325	0		|=			
ANR	811396	Identifier	call_bytes		811325	0					
ANR	811397	CastExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi ]		811325	1					
ANR	811398	CastTarget	ut32		811325	0					
ANR	811399	ArrayIndexing	( ( ut8 * ) buf ) [ bufi ]		811325	1					
ANR	811400	CastExpression	( ut8 * ) buf		811325	0					
ANR	811401	CastTarget	ut8 *		811325	0					
ANR	811402	Identifier	buf		811325	1					
ANR	811403	Identifier	bufi		811325	1					
ANR	811404	ElseStatement	else		811325	0					
ANR	811405	CompoundStatement		11:8:307:307	811325	0					
ANR	811406	ExpressionStatement	call_bytes = ( ut32 ) ( ( ut8 * ) buf ) [ bufi - align + 3 ] << 24	771:2:32304:32358	811325	0	True				
ANR	811407	AssignmentExpression	call_bytes = ( ut32 ) ( ( ut8 * ) buf ) [ bufi - align + 3 ] << 24		811325	0		=			
ANR	811408	Identifier	call_bytes		811325	0					
ANR	811409	ShiftExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi - align + 3 ] << 24		811325	1		<<			
ANR	811410	CastExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi - align + 3 ]		811325	0					
ANR	811411	CastTarget	ut32		811325	0					
ANR	811412	ArrayIndexing	( ( ut8 * ) buf ) [ bufi - align + 3 ]		811325	1					
ANR	811413	CastExpression	( ut8 * ) buf		811325	0					
ANR	811414	CastTarget	ut8 *		811325	0					
ANR	811415	Identifier	buf		811325	1					
ANR	811416	AdditiveExpression	bufi - align + 3		811325	1		-			
ANR	811417	Identifier	bufi		811325	0					
ANR	811418	AdditiveExpression	align + 3		811325	1		+			
ANR	811419	Identifier	align		811325	0					
ANR	811420	PrimaryExpression	3		811325	1					
ANR	811421	PrimaryExpression	24		811325	1					
ANR	811422	ExpressionStatement	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi - align + 2 ] << 16	772:2:32362:32417	811325	1	True				
ANR	811423	AssignmentExpression	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi - align + 2 ] << 16		811325	0		|=			
ANR	811424	Identifier	call_bytes		811325	0					
ANR	811425	ShiftExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi - align + 2 ] << 16		811325	1		<<			
ANR	811426	CastExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi - align + 2 ]		811325	0					
ANR	811427	CastTarget	ut32		811325	0					
ANR	811428	ArrayIndexing	( ( ut8 * ) buf ) [ bufi - align + 2 ]		811325	1					
ANR	811429	CastExpression	( ut8 * ) buf		811325	0					
ANR	811430	CastTarget	ut8 *		811325	0					
ANR	811431	Identifier	buf		811325	1					
ANR	811432	AdditiveExpression	bufi - align + 2		811325	1		-			
ANR	811433	Identifier	bufi		811325	0					
ANR	811434	AdditiveExpression	align + 2		811325	1		+			
ANR	811435	Identifier	align		811325	0					
ANR	811436	PrimaryExpression	2		811325	1					
ANR	811437	PrimaryExpression	16		811325	1					
ANR	811438	ExpressionStatement	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi - align + 1 ] << 8	773:2:32421:32475	811325	2	True				
ANR	811439	AssignmentExpression	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi - align + 1 ] << 8		811325	0		|=			
ANR	811440	Identifier	call_bytes		811325	0					
ANR	811441	ShiftExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi - align + 1 ] << 8		811325	1		<<			
ANR	811442	CastExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi - align + 1 ]		811325	0					
ANR	811443	CastTarget	ut32		811325	0					
ANR	811444	ArrayIndexing	( ( ut8 * ) buf ) [ bufi - align + 1 ]		811325	1					
ANR	811445	CastExpression	( ut8 * ) buf		811325	0					
ANR	811446	CastTarget	ut8 *		811325	0					
ANR	811447	Identifier	buf		811325	1					
ANR	811448	AdditiveExpression	bufi - align + 1		811325	1		-			
ANR	811449	Identifier	bufi		811325	0					
ANR	811450	AdditiveExpression	align + 1		811325	1		+			
ANR	811451	Identifier	align		811325	0					
ANR	811452	PrimaryExpression	1		811325	1					
ANR	811453	PrimaryExpression	8		811325	1					
ANR	811454	ExpressionStatement	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi - align ]	774:2:32479:32524	811325	3	True				
ANR	811455	AssignmentExpression	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi - align ]		811325	0		|=			
ANR	811456	Identifier	call_bytes		811325	0					
ANR	811457	CastExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi - align ]		811325	1					
ANR	811458	CastTarget	ut32		811325	0					
ANR	811459	ArrayIndexing	( ( ut8 * ) buf ) [ bufi - align ]		811325	1					
ANR	811460	CastExpression	( ut8 * ) buf		811325	0					
ANR	811461	CastTarget	ut8 *		811325	0					
ANR	811462	Identifier	buf		811325	1					
ANR	811463	AdditiveExpression	bufi - align		811325	1		-			
ANR	811464	Identifier	bufi		811325	0					
ANR	811465	Identifier	align		811325	1					
ANR	811466	IfStatement	if ( call_bytes >= from && call_bytes <= to )		811325	3					
ANR	811467	Condition	call_bytes >= from && call_bytes <= to	776:5:32534:32571	811325	0	True				
ANR	811468	AndExpression	call_bytes >= from && call_bytes <= to		811325	0		&&			
ANR	811469	RelationalExpression	call_bytes >= from		811325	0		>=			
ANR	811470	Identifier	call_bytes		811325	0					
ANR	811471	Identifier	from		811325	1					
ANR	811472	RelationalExpression	call_bytes <= to		811325	1		<=			
ANR	811473	Identifier	call_bytes		811325	0					
ANR	811474	Identifier	to		811325	1					
ANR	811475	CompoundStatement		17:45:581:581	811325	1					
ANR	811476	ReturnStatement	return true ;	777:2:32578:32589	811325	0	True				
ANR	811477	Identifier	true		811325	0					
ANR	811478	ExpressionStatement	call_bytes = ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 4 ] << 24	779:1:32595:32641	811325	4	True				
ANR	811479	AssignmentExpression	call_bytes = ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 4 ] << 24		811325	0		=			
ANR	811480	Identifier	call_bytes		811325	0					
ANR	811481	ShiftExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 4 ] << 24		811325	1		<<			
ANR	811482	CastExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 4 ]		811325	0					
ANR	811483	CastTarget	ut32		811325	0					
ANR	811484	ArrayIndexing	( ( ut8 * ) buf ) [ bufi + 4 ]		811325	1					
ANR	811485	CastExpression	( ut8 * ) buf		811325	0					
ANR	811486	CastTarget	ut8 *		811325	0					
ANR	811487	Identifier	buf		811325	1					
ANR	811488	AdditiveExpression	bufi + 4		811325	1		+			
ANR	811489	Identifier	bufi		811325	0					
ANR	811490	PrimaryExpression	4		811325	1					
ANR	811491	PrimaryExpression	24		811325	1					
ANR	811492	ExpressionStatement	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 3 ] << 16	780:1:32644:32691	811325	5	True				
ANR	811493	AssignmentExpression	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 3 ] << 16		811325	0		|=			
ANR	811494	Identifier	call_bytes		811325	0					
ANR	811495	ShiftExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 3 ] << 16		811325	1		<<			
ANR	811496	CastExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 3 ]		811325	0					
ANR	811497	CastTarget	ut32		811325	0					
ANR	811498	ArrayIndexing	( ( ut8 * ) buf ) [ bufi + 3 ]		811325	1					
ANR	811499	CastExpression	( ut8 * ) buf		811325	0					
ANR	811500	CastTarget	ut8 *		811325	0					
ANR	811501	Identifier	buf		811325	1					
ANR	811502	AdditiveExpression	bufi + 3		811325	1		+			
ANR	811503	Identifier	bufi		811325	0					
ANR	811504	PrimaryExpression	3		811325	1					
ANR	811505	PrimaryExpression	16		811325	1					
ANR	811506	ExpressionStatement	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 2 ] << 8	781:1:32694:32740	811325	6	True				
ANR	811507	AssignmentExpression	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 2 ] << 8		811325	0		|=			
ANR	811508	Identifier	call_bytes		811325	0					
ANR	811509	ShiftExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 2 ] << 8		811325	1		<<			
ANR	811510	CastExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 2 ]		811325	0					
ANR	811511	CastTarget	ut32		811325	0					
ANR	811512	ArrayIndexing	( ( ut8 * ) buf ) [ bufi + 2 ]		811325	1					
ANR	811513	CastExpression	( ut8 * ) buf		811325	0					
ANR	811514	CastTarget	ut8 *		811325	0					
ANR	811515	Identifier	buf		811325	1					
ANR	811516	AdditiveExpression	bufi + 2		811325	1		+			
ANR	811517	Identifier	bufi		811325	0					
ANR	811518	PrimaryExpression	2		811325	1					
ANR	811519	PrimaryExpression	8		811325	1					
ANR	811520	ExpressionStatement	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 1 ]	782:1:32743:32784	811325	7	True				
ANR	811521	AssignmentExpression	call_bytes |= ( ut32 ) ( ( ut8 * ) buf ) [ bufi + 1 ]		811325	0		|=			
ANR	811522	Identifier	call_bytes		811325	0					
ANR	811523	CastExpression	( ut32 ) ( ( ut8 * ) buf ) [ bufi + 1 ]		811325	1					
ANR	811524	CastTarget	ut32		811325	0					
ANR	811525	ArrayIndexing	( ( ut8 * ) buf ) [ bufi + 1 ]		811325	1					
ANR	811526	CastExpression	( ut8 * ) buf		811325	0					
ANR	811527	CastTarget	ut8 *		811325	0					
ANR	811528	Identifier	buf		811325	1					
ANR	811529	AdditiveExpression	bufi + 1		811325	1		+			
ANR	811530	Identifier	bufi		811325	0					
ANR	811531	PrimaryExpression	1		811325	1					
ANR	811532	ExpressionStatement	call_bytes += addr + 5	783:1:32787:32809	811325	8	True				
ANR	811533	AssignmentExpression	call_bytes += addr + 5		811325	0		+=			
ANR	811534	Identifier	call_bytes		811325	0					
ANR	811535	AdditiveExpression	addr + 5		811325	1		+			
ANR	811536	Identifier	addr		811325	0					
ANR	811537	PrimaryExpression	5		811325	1					
ANR	811538	IfStatement	if ( call_bytes >= from && call_bytes <= to )		811325	9					
ANR	811539	Condition	call_bytes >= from && call_bytes <= to	784:5:32816:32853	811325	0	True				
ANR	811540	AndExpression	call_bytes >= from && call_bytes <= to		811325	0		&&			
ANR	811541	RelationalExpression	call_bytes >= from		811325	0		>=			
ANR	811542	Identifier	call_bytes		811325	0					
ANR	811543	Identifier	from		811325	1					
ANR	811544	RelationalExpression	call_bytes <= to		811325	1		<=			
ANR	811545	Identifier	call_bytes		811325	0					
ANR	811546	Identifier	to		811325	1					
ANR	811547	CompoundStatement		25:45:863:863	811325	1					
ANR	811548	ReturnStatement	return false ;	785:2:32860:32872	811325	0	True				
ANR	811549	Identifier	false		811325	0					
ANR	811550	ReturnStatement	return false ;	787:1:32878:32890	811325	10	True				
ANR	811551	Identifier	false		811325	0					
ANR	811552	ReturnType	static bool		811325	1					
ANR	811553	Identifier	anal_is_bad_call		811325	2					
ANR	811554	ParameterList	"RCore * core , ut64 from , ut64 to , ut64 addr , ut8 * buf , int bufi"		811325	3					
ANR	811555	Parameter	RCore * core	760:29:31928:31938	811325	0	True				
ANR	811556	ParameterType	RCore *		811325	0					
ANR	811557	Identifier	core		811325	1					
ANR	811558	Parameter	ut64 from	760:42:31941:31949	811325	1	True				
ANR	811559	ParameterType	ut64		811325	0					
ANR	811560	Identifier	from		811325	1					
ANR	811561	Parameter	ut64 to	760:53:31952:31958	811325	2	True				
ANR	811562	ParameterType	ut64		811325	0					
ANR	811563	Identifier	to		811325	1					
ANR	811564	Parameter	ut64 addr	760:62:31961:31969	811325	3	True				
ANR	811565	ParameterType	ut64		811325	0					
ANR	811566	Identifier	addr		811325	1					
ANR	811567	Parameter	ut8 * buf	760:73:31972:31979	811325	4	True				
ANR	811568	ParameterType	ut8 *		811325	0					
ANR	811569	Identifier	buf		811325	1					
ANR	811570	Parameter	int bufi	760:83:31982:31989	811325	5	True				
ANR	811571	ParameterType	int		811325	0					
ANR	811572	Identifier	bufi		811325	1					
ANR	811573	CFGEntryNode	ENTRY		811325		True				
ANR	811574	CFGExitNode	EXIT		811325		True				
ANR	811575	Symbol	* buf		811325						
ANR	811576	Symbol	call_bytes		811325						
ANR	811577	Symbol	* align		811325						
ANR	811578	Symbol	false		811325						
ANR	811579	Symbol	R_ABS		811325						
ANR	811580	Symbol	align		811325						
ANR	811581	Symbol	* bufi		811325						
ANR	811582	Symbol	core		811325						
ANR	811583	Symbol	buf		811325						
ANR	811584	Symbol	bufi		811325						
ANR	811585	Symbol	true		811325						
ANR	811586	Symbol	from		811325						
ANR	811587	Symbol	to		811325						
ANR	811588	Symbol	PE_ALIGN		811325						
ANR	811589	Symbol	addr		811325						
ANR	811590	Function	cmd_anal_aaft	791:0:32902:34024							
ANR	811591	FunctionDef	cmd_anal_aaft (RCore * core)		811590	0					
ANR	811592	CompoundStatement		791:39:32941:34024	811590	0					
ANR	811593	IdentifierDeclStatement	RListIter * it ;	792:1:32944:32957	811590	0	True				
ANR	811594	IdentifierDecl	* it		811590	0					
ANR	811595	IdentifierDeclType	RListIter *		811590	0					
ANR	811596	Identifier	it		811590	1					
ANR	811597	IdentifierDeclStatement	RAnalFunction * fcn ;	793:1:32960:32978	811590	1	True				
ANR	811598	IdentifierDecl	* fcn		811590	0					
ANR	811599	IdentifierDeclType	RAnalFunction *		811590	0					
ANR	811600	Identifier	fcn		811590	1					
ANR	811601	IdentifierDeclStatement	ut64 seek ;	794:1:32981:32990	811590	2	True				
ANR	811602	IdentifierDecl	seek		811590	0					
ANR	811603	IdentifierDeclType	ut64		811590	0					
ANR	811604	Identifier	seek		811590	1					
ANR	811605	IdentifierDeclStatement	"const char * io_cache_key = ""io.pcache.write"" ;"	795:1:32993:33037	811590	3	True				
ANR	811606	IdentifierDecl	"* io_cache_key = ""io.pcache.write"""		811590	0					
ANR	811607	IdentifierDeclType	const char *		811590	0					
ANR	811608	Identifier	io_cache_key		811590	1					
ANR	811609	AssignmentExpression	"* io_cache_key = ""io.pcache.write"""		811590	2		=			
ANR	811610	Identifier	io_cache_key		811590	0					
ANR	811611	PrimaryExpression	"""io.pcache.write"""		811590	1					
ANR	811612	IdentifierDeclStatement	"bool io_cache = r_config_get_i ( core -> config , io_cache_key ) ;"	796:1:33040:33099	811590	4	True				
ANR	811613	IdentifierDecl	"io_cache = r_config_get_i ( core -> config , io_cache_key )"		811590	0					
ANR	811614	IdentifierDeclType	bool		811590	0					
ANR	811615	Identifier	io_cache		811590	1					
ANR	811616	AssignmentExpression	"io_cache = r_config_get_i ( core -> config , io_cache_key )"		811590	2		=			
ANR	811617	Identifier	io_cache		811590	0					
ANR	811618	CallExpression	"r_config_get_i ( core -> config , io_cache_key )"		811590	1					
ANR	811619	Callee	r_config_get_i		811590	0					
ANR	811620	Identifier	r_config_get_i		811590	0					
ANR	811621	ArgumentList	core -> config		811590	1					
ANR	811622	Argument	core -> config		811590	0					
ANR	811623	PtrMemberAccess	core -> config		811590	0					
ANR	811624	Identifier	core		811590	0					
ANR	811625	Identifier	config		811590	1					
ANR	811626	Argument	io_cache_key		811590	1					
ANR	811627	Identifier	io_cache_key		811590	0					
ANR	811628	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		811590	5					
ANR	811629	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	797:5:33106:33147	811590	0	True				
ANR	811630	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		811590	0					
ANR	811631	Callee	r_config_get_i		811590	0					
ANR	811632	Identifier	r_config_get_i		811590	0					
ANR	811633	ArgumentList	core -> config		811590	1					
ANR	811634	Argument	core -> config		811590	0					
ANR	811635	PtrMemberAccess	core -> config		811590	0					
ANR	811636	Identifier	core		811590	0					
ANR	811637	Identifier	config		811590	1					
ANR	811638	Argument	"""cfg.debug"""		811590	1					
ANR	811639	PrimaryExpression	"""cfg.debug"""		811590	0					
ANR	811640	CompoundStatement		7:49:208:208	811590	1					
ANR	811641	ExpressionStatement	"eprintf ( ""TOFIX: aaft can't run in debugger mode.\\n"" )"	798:2:33154:33207	811590	0	True				
ANR	811642	CallExpression	"eprintf ( ""TOFIX: aaft can't run in debugger mode.\\n"" )"		811590	0					
ANR	811643	Callee	eprintf		811590	0					
ANR	811644	Identifier	eprintf		811590	0					
ANR	811645	ArgumentList	"""TOFIX: aaft can't run in debugger mode.\\n"""		811590	1					
ANR	811646	Argument	"""TOFIX: aaft can't run in debugger mode.\\n"""		811590	0					
ANR	811647	PrimaryExpression	"""TOFIX: aaft can't run in debugger mode.\\n"""		811590	0					
ANR	811648	ReturnStatement	return false ;	799:2:33211:33223	811590	1	True				
ANR	811649	Identifier	false		811590	0					
ANR	811650	IfStatement	if ( ! io_cache )		811590	6					
ANR	811651	Condition	! io_cache	801:5:33233:33241	811590	0	True				
ANR	811652	UnaryOperationExpression	! io_cache		811590	0					
ANR	811653	UnaryOperator	!		811590	0					
ANR	811654	Identifier	io_cache		811590	1					
ANR	811655	CompoundStatement		11:16:302:302	811590	1					
ANR	811656	ExpressionStatement	"r_config_set_i ( core -> config , io_cache_key , true )"	803:2:33313:33362	811590	0	True				
ANR	811657	CallExpression	"r_config_set_i ( core -> config , io_cache_key , true )"		811590	0					
ANR	811658	Callee	r_config_set_i		811590	0					
ANR	811659	Identifier	r_config_set_i		811590	0					
ANR	811660	ArgumentList	core -> config		811590	1					
ANR	811661	Argument	core -> config		811590	0					
ANR	811662	PtrMemberAccess	core -> config		811590	0					
ANR	811663	Identifier	core		811590	0					
ANR	811664	Identifier	config		811590	1					
ANR	811665	Argument	io_cache_key		811590	1					
ANR	811666	Identifier	io_cache_key		811590	0					
ANR	811667	Argument	true		811590	2					
ANR	811668	Identifier	true		811590	0					
ANR	811669	ExpressionStatement	seek = core -> offset	805:1:33368:33387	811590	7	True				
ANR	811670	AssignmentExpression	seek = core -> offset		811590	0		=			
ANR	811671	Identifier	seek		811590	0					
ANR	811672	PtrMemberAccess	core -> offset		811590	1					
ANR	811673	Identifier	core		811590	0					
ANR	811674	Identifier	offset		811590	1					
ANR	811675	ExpressionStatement	r_reg_arena_push ( core -> anal -> reg )	806:1:33390:33424	811590	8	True				
ANR	811676	CallExpression	r_reg_arena_push ( core -> anal -> reg )		811590	0					
ANR	811677	Callee	r_reg_arena_push		811590	0					
ANR	811678	Identifier	r_reg_arena_push		811590	0					
ANR	811679	ArgumentList	core -> anal -> reg		811590	1					
ANR	811680	Argument	core -> anal -> reg		811590	0					
ANR	811681	PtrMemberAccess	core -> anal -> reg		811590	0					
ANR	811682	PtrMemberAccess	core -> anal		811590	0					
ANR	811683	Identifier	core		811590	0					
ANR	811684	Identifier	anal		811590	1					
ANR	811685	Identifier	reg		811590	1					
ANR	811686	Statement	r_list_foreach_prev	808:1:33498:33516	811590	9	True				
ANR	811687	Statement	(	808:21:33518:33518	811590	10	True				
ANR	811688	Statement	core	808:22:33519:33522	811590	11	True				
ANR	811689	Statement	->	808:26:33523:33524	811590	12	True				
ANR	811690	Statement	anal	808:28:33525:33528	811590	13	True				
ANR	811691	Statement	->	808:32:33529:33530	811590	14	True				
ANR	811692	Statement	fcns	808:34:33531:33534	811590	15	True				
ANR	811693	Statement	","	808:38:33535:33535	811590	16	True				
ANR	811694	Statement	it	808:40:33537:33538	811590	17	True				
ANR	811695	Statement	","	808:42:33539:33539	811590	18	True				
ANR	811696	Statement	fcn	808:44:33541:33543	811590	19	True				
ANR	811697	Statement	)	808:47:33544:33544	811590	20	True				
ANR	811698	CompoundStatement		21:2:667:712	811590	21					
ANR	811699	ExpressionStatement	"r_core_cmd0 ( core , ""aei"" )"	809:2:33550:33575	811590	0	True				
ANR	811700	CallExpression	"r_core_cmd0 ( core , ""aei"" )"		811590	0					
ANR	811701	Callee	r_core_cmd0		811590	0					
ANR	811702	Identifier	r_core_cmd0		811590	0					
ANR	811703	ArgumentList	core		811590	1					
ANR	811704	Argument	core		811590	0					
ANR	811705	Identifier	core		811590	0					
ANR	811706	Argument	"""aei"""		811590	1					
ANR	811707	PrimaryExpression	"""aei"""		811590	0					
ANR	811708	ExpressionStatement	"r_core_cmd0 ( core , ""aeim"" )"	810:2:33579:33605	811590	1	True				
ANR	811709	CallExpression	"r_core_cmd0 ( core , ""aeim"" )"		811590	0					
ANR	811710	Callee	r_core_cmd0		811590	0					
ANR	811711	Identifier	r_core_cmd0		811590	0					
ANR	811712	ArgumentList	core		811590	1					
ANR	811713	Argument	core		811590	0					
ANR	811714	Identifier	core		811590	0					
ANR	811715	Argument	"""aeim"""		811590	1					
ANR	811716	PrimaryExpression	"""aeim"""		811590	0					
ANR	811717	IdentifierDeclStatement	"int ret = r_core_seek ( core , fcn -> addr , true ) ;"	811:2:33609:33654	811590	2	True				
ANR	811718	IdentifierDecl	"ret = r_core_seek ( core , fcn -> addr , true )"		811590	0					
ANR	811719	IdentifierDeclType	int		811590	0					
ANR	811720	Identifier	ret		811590	1					
ANR	811721	AssignmentExpression	"ret = r_core_seek ( core , fcn -> addr , true )"		811590	2		=			
ANR	811722	Identifier	ret		811590	0					
ANR	811723	CallExpression	"r_core_seek ( core , fcn -> addr , true )"		811590	1					
ANR	811724	Callee	r_core_seek		811590	0					
ANR	811725	Identifier	r_core_seek		811590	0					
ANR	811726	ArgumentList	core		811590	1					
ANR	811727	Argument	core		811590	0					
ANR	811728	Identifier	core		811590	0					
ANR	811729	Argument	fcn -> addr		811590	1					
ANR	811730	PtrMemberAccess	fcn -> addr		811590	0					
ANR	811731	Identifier	fcn		811590	0					
ANR	811732	Identifier	addr		811590	1					
ANR	811733	Argument	true		811590	2					
ANR	811734	Identifier	true		811590	0					
ANR	811735	IfStatement	if ( ! ret )		811590	3					
ANR	811736	Condition	! ret	812:6:33662:33665	811590	0	True				
ANR	811737	UnaryOperationExpression	! ret		811590	0					
ANR	811738	UnaryOperator	!		811590	0					
ANR	811739	Identifier	ret		811590	1					
ANR	811740	CompoundStatement		22:12:726:726	811590	1					
ANR	811741	ContinueStatement	continue ;	813:3:33673:33681	811590	0	True				
ANR	811742	ExpressionStatement	"r_anal_esil_set_pc ( core -> anal -> esil , fcn -> addr )"	815:2:33689:33737	811590	4	True				
ANR	811743	CallExpression	"r_anal_esil_set_pc ( core -> anal -> esil , fcn -> addr )"		811590	0					
ANR	811744	Callee	r_anal_esil_set_pc		811590	0					
ANR	811745	Identifier	r_anal_esil_set_pc		811590	0					
ANR	811746	ArgumentList	core -> anal -> esil		811590	1					
ANR	811747	Argument	core -> anal -> esil		811590	0					
ANR	811748	PtrMemberAccess	core -> anal -> esil		811590	0					
ANR	811749	PtrMemberAccess	core -> anal		811590	0					
ANR	811750	Identifier	core		811590	0					
ANR	811751	Identifier	anal		811590	1					
ANR	811752	Identifier	esil		811590	1					
ANR	811753	Argument	fcn -> addr		811590	1					
ANR	811754	PtrMemberAccess	fcn -> addr		811590	0					
ANR	811755	Identifier	fcn		811590	0					
ANR	811756	Identifier	addr		811590	1					
ANR	811757	ExpressionStatement	"r_core_anal_type_match ( core , fcn )"	816:2:33741:33775	811590	5	True				
ANR	811758	CallExpression	"r_core_anal_type_match ( core , fcn )"		811590	0					
ANR	811759	Callee	r_core_anal_type_match		811590	0					
ANR	811760	Identifier	r_core_anal_type_match		811590	0					
ANR	811761	ArgumentList	core		811590	1					
ANR	811762	Argument	core		811590	0					
ANR	811763	Identifier	core		811590	0					
ANR	811764	Argument	fcn		811590	1					
ANR	811765	Identifier	fcn		811590	0					
ANR	811766	ExpressionStatement	"r_core_cmd0 ( core , ""aeim-"" )"	817:2:33779:33806	811590	6	True				
ANR	811767	CallExpression	"r_core_cmd0 ( core , ""aeim-"" )"		811590	0					
ANR	811768	Callee	r_core_cmd0		811590	0					
ANR	811769	Identifier	r_core_cmd0		811590	0					
ANR	811770	ArgumentList	core		811590	1					
ANR	811771	Argument	core		811590	0					
ANR	811772	Identifier	core		811590	0					
ANR	811773	Argument	"""aeim-"""		811590	1					
ANR	811774	PrimaryExpression	"""aeim-"""		811590	0					
ANR	811775	ExpressionStatement	"r_core_cmd0 ( core , ""aei-"" )"	818:2:33810:33836	811590	7	True				
ANR	811776	CallExpression	"r_core_cmd0 ( core , ""aei-"" )"		811590	0					
ANR	811777	Callee	r_core_cmd0		811590	0					
ANR	811778	Identifier	r_core_cmd0		811590	0					
ANR	811779	ArgumentList	core		811590	1					
ANR	811780	Argument	core		811590	0					
ANR	811781	Identifier	core		811590	0					
ANR	811782	Argument	"""aei-"""		811590	1					
ANR	811783	PrimaryExpression	"""aei-"""		811590	0					
ANR	811784	IfStatement	if ( r_cons_is_breaked ( ) )		811590	8					
ANR	811785	Condition	r_cons_is_breaked ( )	819:6:33844:33863	811590	0	True				
ANR	811786	CallExpression	r_cons_is_breaked ( )		811590	0					
ANR	811787	Callee	r_cons_is_breaked		811590	0					
ANR	811788	Identifier	r_cons_is_breaked		811590	0					
ANR	811789	ArgumentList			811590	1					
ANR	811790	CompoundStatement		29:28:924:924	811590	1					
ANR	811791	BreakStatement	break ;	820:3:33871:33876	811590	0	True				
ANR	811792	ExpressionStatement	"r_core_seek ( core , seek , true )"	823:1:33886:33916	811590	22	True				
ANR	811793	CallExpression	"r_core_seek ( core , seek , true )"		811590	0					
ANR	811794	Callee	r_core_seek		811590	0					
ANR	811795	Identifier	r_core_seek		811590	0					
ANR	811796	ArgumentList	core		811590	1					
ANR	811797	Argument	core		811590	0					
ANR	811798	Identifier	core		811590	0					
ANR	811799	Argument	seek		811590	1					
ANR	811800	Identifier	seek		811590	0					
ANR	811801	Argument	true		811590	2					
ANR	811802	Identifier	true		811590	0					
ANR	811803	ExpressionStatement	r_reg_arena_pop ( core -> anal -> reg )	824:1:33919:33952	811590	23	True				
ANR	811804	CallExpression	r_reg_arena_pop ( core -> anal -> reg )		811590	0					
ANR	811805	Callee	r_reg_arena_pop		811590	0					
ANR	811806	Identifier	r_reg_arena_pop		811590	0					
ANR	811807	ArgumentList	core -> anal -> reg		811590	1					
ANR	811808	Argument	core -> anal -> reg		811590	0					
ANR	811809	PtrMemberAccess	core -> anal -> reg		811590	0					
ANR	811810	PtrMemberAccess	core -> anal		811590	0					
ANR	811811	Identifier	core		811590	0					
ANR	811812	Identifier	anal		811590	1					
ANR	811813	Identifier	reg		811590	1					
ANR	811814	ExpressionStatement	"r_config_set_i ( core -> config , io_cache_key , io_cache )"	825:1:33955:34008	811590	24	True				
ANR	811815	CallExpression	"r_config_set_i ( core -> config , io_cache_key , io_cache )"		811590	0					
ANR	811816	Callee	r_config_set_i		811590	0					
ANR	811817	Identifier	r_config_set_i		811590	0					
ANR	811818	ArgumentList	core -> config		811590	1					
ANR	811819	Argument	core -> config		811590	0					
ANR	811820	PtrMemberAccess	core -> config		811590	0					
ANR	811821	Identifier	core		811590	0					
ANR	811822	Identifier	config		811590	1					
ANR	811823	Argument	io_cache_key		811590	1					
ANR	811824	Identifier	io_cache_key		811590	0					
ANR	811825	Argument	io_cache		811590	2					
ANR	811826	Identifier	io_cache		811590	0					
ANR	811827	ReturnStatement	return true ;	826:1:34011:34022	811590	25	True				
ANR	811828	Identifier	true		811590	0					
ANR	811829	ReturnType	static bool		811590	1					
ANR	811830	Identifier	cmd_anal_aaft		811590	2					
ANR	811831	ParameterList	RCore * core		811590	3					
ANR	811832	Parameter	RCore * core	791:26:32928:32938	811590	0	True				
ANR	811833	ParameterType	RCore *		811590	0					
ANR	811834	Identifier	core		811590	1					
ANR	811835	CFGEntryNode	ENTRY		811590		True				
ANR	811836	CFGExitNode	EXIT		811590		True				
ANR	811837	CFGErrorNode	ERROR		811590		True				
ANR	811838	Symbol	core -> config		811590						
ANR	811839	Symbol	ret		811590						
ANR	811840	Symbol	core -> anal -> reg		811590						
ANR	811841	Symbol	io_cache_key		811590						
ANR	811842	Symbol	* fcn		811590						
ANR	811843	Symbol	io_cache		811590						
ANR	811844	Symbol	* core		811590						
ANR	811845	Symbol	false		811590						
ANR	811846	Symbol	core -> offset		811590						
ANR	811847	Symbol	r_core_seek		811590						
ANR	811848	Symbol	it		811590						
ANR	811849	Symbol	seek		811590						
ANR	811850	Symbol	core -> anal		811590						
ANR	811851	Symbol	fcn		811590						
ANR	811852	Symbol	core		811590						
ANR	811853	Symbol	r_cons_is_breaked		811590						
ANR	811854	Symbol	* core -> anal		811590						
ANR	811855	Symbol	r_config_get_i		811590						
ANR	811856	Symbol	true		811590						
ANR	811857	Symbol	fcn -> addr		811590						
ANR	811858	Symbol	core -> anal -> esil		811590						
ANR	811859	Symbol	* * core		811590						
ANR	811860	Function	type_cmd	829:0:34027:34583							
ANR	811861	FunctionDef	"type_cmd (RCore * core , const char * input)"		811860	0					
ANR	811862	CompoundStatement		829:53:34080:34583	811860	0					
ANR	811863	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 ) ;"	830:1:34083:34152	811860	0	True				
ANR	811864	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		811860	0					
ANR	811865	IdentifierDeclType	RAnalFunction *		811860	0					
ANR	811866	Identifier	fcn		811860	1					
ANR	811867	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		811860	2		=			
ANR	811868	Identifier	fcn		811860	0					
ANR	811869	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		811860	1					
ANR	811870	Callee	r_anal_get_fcn_in		811860	0					
ANR	811871	Identifier	r_anal_get_fcn_in		811860	0					
ANR	811872	ArgumentList	core -> anal		811860	1					
ANR	811873	Argument	core -> anal		811860	0					
ANR	811874	PtrMemberAccess	core -> anal		811860	0					
ANR	811875	Identifier	core		811860	0					
ANR	811876	Identifier	anal		811860	1					
ANR	811877	Argument	core -> offset		811860	1					
ANR	811878	PtrMemberAccess	core -> offset		811860	0					
ANR	811879	Identifier	core		811860	0					
ANR	811880	Identifier	offset		811860	1					
ANR	811881	Argument	- 1		811860	2					
ANR	811882	UnaryOperationExpression	- 1		811860	0					
ANR	811883	UnaryOperator	-		811860	0					
ANR	811884	PrimaryExpression	1		811860	1					
ANR	811885	IfStatement	if ( ! fcn && * input != '?' )		811860	1					
ANR	811886	Condition	! fcn && * input != '?'	831:5:34159:34179	811860	0	True				
ANR	811887	AndExpression	! fcn && * input != '?'		811860	0		&&			
ANR	811888	UnaryOperationExpression	! fcn		811860	0					
ANR	811889	UnaryOperator	!		811860	0					
ANR	811890	Identifier	fcn		811860	1					
ANR	811891	EqualityExpression	* input != '?'		811860	1		!=			
ANR	811892	UnaryOperationExpression	* input		811860	0					
ANR	811893	UnaryOperator	*		811860	0					
ANR	811894	Identifier	input		811860	1					
ANR	811895	PrimaryExpression	'?'		811860	1					
ANR	811896	CompoundStatement		3:28:101:101	811860	1					
ANR	811897	ExpressionStatement	"eprintf ( ""cant find function here\\n"" )"	832:2:34186:34223	811860	0	True				
ANR	811898	CallExpression	"eprintf ( ""cant find function here\\n"" )"		811860	0					
ANR	811899	Callee	eprintf		811860	0					
ANR	811900	Identifier	eprintf		811860	0					
ANR	811901	ArgumentList	"""cant find function here\\n"""		811860	1					
ANR	811902	Argument	"""cant find function here\\n"""		811860	0					
ANR	811903	PrimaryExpression	"""cant find function here\\n"""		811860	0					
ANR	811904	ReturnStatement	return ;	833:2:34227:34233	811860	1	True				
ANR	811905	IdentifierDeclStatement	ut64 seek ;	835:1:34239:34248	811860	2	True				
ANR	811906	IdentifierDecl	seek		811860	0					
ANR	811907	IdentifierDeclType	ut64		811860	0					
ANR	811908	Identifier	seek		811860	1					
ANR	811909	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	836:1:34251:34281	811860	3	True				
ANR	811910	CallExpression	"r_cons_break_push ( NULL , NULL )"		811860	0					
ANR	811911	Callee	r_cons_break_push		811860	0					
ANR	811912	Identifier	r_cons_break_push		811860	0					
ANR	811913	ArgumentList	NULL		811860	1					
ANR	811914	Argument	NULL		811860	0					
ANR	811915	Identifier	NULL		811860	0					
ANR	811916	Argument	NULL		811860	1					
ANR	811917	Identifier	NULL		811860	0					
ANR	811918	SwitchStatement	switch ( * input )		811860	4					
ANR	811919	Condition	* input	837:9:34292:34297	811860	0	True				
ANR	811920	UnaryOperationExpression	* input		811860	0					
ANR	811921	UnaryOperator	*		811860	0					
ANR	811922	Identifier	input		811860	1					
ANR	811923	CompoundStatement		9:17:219:219	811860	1					
ANR	811924	Label	case '\\0' :	838:1:34303:34312	811860	0	True				
ANR	811925	ExpressionStatement	seek = core -> offset	839:2:34325:34344	811860	1	True				
ANR	811926	AssignmentExpression	seek = core -> offset		811860	0		=			
ANR	811927	Identifier	seek		811860	0					
ANR	811928	PtrMemberAccess	core -> offset		811860	1					
ANR	811929	Identifier	core		811860	0					
ANR	811930	Identifier	offset		811860	1					
ANR	811931	ExpressionStatement	"r_anal_esil_set_pc ( core -> anal -> esil , fcn ? fcn -> addr : core -> offset )"	840:2:34348:34415	811860	2	True				
ANR	811932	CallExpression	"r_anal_esil_set_pc ( core -> anal -> esil , fcn ? fcn -> addr : core -> offset )"		811860	0					
ANR	811933	Callee	r_anal_esil_set_pc		811860	0					
ANR	811934	Identifier	r_anal_esil_set_pc		811860	0					
ANR	811935	ArgumentList	core -> anal -> esil		811860	1					
ANR	811936	Argument	core -> anal -> esil		811860	0					
ANR	811937	PtrMemberAccess	core -> anal -> esil		811860	0					
ANR	811938	PtrMemberAccess	core -> anal		811860	0					
ANR	811939	Identifier	core		811860	0					
ANR	811940	Identifier	anal		811860	1					
ANR	811941	Identifier	esil		811860	1					
ANR	811942	Argument	fcn ? fcn -> addr : core -> offset		811860	1					
ANR	811943	ConditionalExpression	fcn ? fcn -> addr : core -> offset		811860	0					
ANR	811944	Condition	fcn		811860	0					
ANR	811945	Identifier	fcn		811860	0					
ANR	811946	PtrMemberAccess	fcn -> addr		811860	1					
ANR	811947	Identifier	fcn		811860	0					
ANR	811948	Identifier	addr		811860	1					
ANR	811949	PtrMemberAccess	core -> offset		811860	2					
ANR	811950	Identifier	core		811860	0					
ANR	811951	Identifier	offset		811860	1					
ANR	811952	ExpressionStatement	"r_core_anal_type_match ( core , fcn )"	841:2:34419:34453	811860	3	True				
ANR	811953	CallExpression	"r_core_anal_type_match ( core , fcn )"		811860	0					
ANR	811954	Callee	r_core_anal_type_match		811860	0					
ANR	811955	Identifier	r_core_anal_type_match		811860	0					
ANR	811956	ArgumentList	core		811860	1					
ANR	811957	Argument	core		811860	0					
ANR	811958	Identifier	core		811860	0					
ANR	811959	Argument	fcn		811860	1					
ANR	811960	Identifier	fcn		811860	0					
ANR	811961	ExpressionStatement	"r_core_seek ( core , seek , true )"	842:2:34457:34487	811860	4	True				
ANR	811962	CallExpression	"r_core_seek ( core , seek , true )"		811860	0					
ANR	811963	Callee	r_core_seek		811860	0					
ANR	811964	Identifier	r_core_seek		811860	0					
ANR	811965	ArgumentList	core		811860	1					
ANR	811966	Argument	core		811860	0					
ANR	811967	Identifier	core		811860	0					
ANR	811968	Argument	seek		811860	1					
ANR	811969	Identifier	seek		811860	0					
ANR	811970	Argument	true		811860	2					
ANR	811971	Identifier	true		811860	0					
ANR	811972	BreakStatement	break ;	843:2:34491:34496	811860	5	True				
ANR	811973	Label	case '?' :	844:1:34499:34507	811860	6	True				
ANR	811974	ExpressionStatement	"r_core_cmd_help ( core , help_msg_aft )"	845:2:34511:34547	811860	7	True				
ANR	811975	CallExpression	"r_core_cmd_help ( core , help_msg_aft )"		811860	0					
ANR	811976	Callee	r_core_cmd_help		811860	0					
ANR	811977	Identifier	r_core_cmd_help		811860	0					
ANR	811978	ArgumentList	core		811860	1					
ANR	811979	Argument	core		811860	0					
ANR	811980	Identifier	core		811860	0					
ANR	811981	Argument	help_msg_aft		811860	1					
ANR	811982	Identifier	help_msg_aft		811860	0					
ANR	811983	BreakStatement	break ;	846:2:34551:34556	811860	8	True				
ANR	811984	ExpressionStatement	r_cons_break_pop ( )	848:1:34562:34581	811860	5	True				
ANR	811985	CallExpression	r_cons_break_pop ( )		811860	0					
ANR	811986	Callee	r_cons_break_pop		811860	0					
ANR	811987	Identifier	r_cons_break_pop		811860	0					
ANR	811988	ArgumentList			811860	1					
ANR	811989	ReturnType	static void		811860	1					
ANR	811990	Identifier	type_cmd		811860	2					
ANR	811991	ParameterList	"RCore * core , const char * input"		811860	3					
ANR	811992	Parameter	RCore * core	829:21:34048:34058	811860	0	True				
ANR	811993	ParameterType	RCore *		811860	0					
ANR	811994	Identifier	core		811860	1					
ANR	811995	Parameter	const char * input	829:34:34061:34077	811860	1	True				
ANR	811996	ParameterType	const char *		811860	0					
ANR	811997	Identifier	input		811860	1					
ANR	811998	CFGEntryNode	ENTRY		811860		True				
ANR	811999	CFGExitNode	EXIT		811860		True				
ANR	812000	Symbol	NULL		811860						
ANR	812001	Symbol	* fcn		811860						
ANR	812002	Symbol	* core		811860						
ANR	812003	Symbol	* input		811860						
ANR	812004	Symbol	core -> offset		811860						
ANR	812005	Symbol	core -> anal		811860						
ANR	812006	Symbol	seek		811860						
ANR	812007	Symbol	help_msg_aft		811860						
ANR	812008	Symbol	fcn		811860						
ANR	812009	Symbol	core		811860						
ANR	812010	Symbol	input		811860						
ANR	812011	Symbol	r_anal_get_fcn_in		811860						
ANR	812012	Symbol	* core -> anal		811860						
ANR	812013	Symbol	true		811860						
ANR	812014	Symbol	fcn -> addr		811860						
ANR	812015	Symbol	core -> anal -> esil		811860						
ANR	812016	Symbol	* * core		811860						
ANR	812017	Function	cc_print	851:0:34586:34709							
ANR	812018	FunctionDef	"cc_print (void * p , const char * k , const char * v)"		812017	0					
ANR	812019	CompoundStatement		851:59:34645:34709	812017	0					
ANR	812020	IfStatement	"if ( ! strcmp ( v , ""cc"" ) )"		812017	0					
ANR	812021	Condition	"! strcmp ( v , ""cc"" )"	852:5:34652:34668	812017	0	True				
ANR	812022	UnaryOperationExpression	"! strcmp ( v , ""cc"" )"		812017	0					
ANR	812023	UnaryOperator	!		812017	0					
ANR	812024	CallExpression	"strcmp ( v , ""cc"" )"		812017	1					
ANR	812025	Callee	strcmp		812017	0					
ANR	812026	Identifier	strcmp		812017	0					
ANR	812027	ArgumentList	v		812017	1					
ANR	812028	Argument	v		812017	0					
ANR	812029	Identifier	v		812017	0					
ANR	812030	Argument	"""cc"""		812017	1					
ANR	812031	PrimaryExpression	"""cc"""		812017	0					
ANR	812032	CompoundStatement		2:24:25:25	812017	1					
ANR	812033	ExpressionStatement	r_cons_println ( k )	853:2:34675:34693	812017	0	True				
ANR	812034	CallExpression	r_cons_println ( k )		812017	0					
ANR	812035	Callee	r_cons_println		812017	0					
ANR	812036	Identifier	r_cons_println		812017	0					
ANR	812037	ArgumentList	k		812017	1					
ANR	812038	Argument	k		812017	0					
ANR	812039	Identifier	k		812017	0					
ANR	812040	ReturnStatement	return 1 ;	855:1:34699:34707	812017	1	True				
ANR	812041	PrimaryExpression	1		812017	0					
ANR	812042	ReturnType	static int		812017	1					
ANR	812043	Identifier	cc_print		812017	2					
ANR	812044	ParameterList	"void * p , const char * k , const char * v"		812017	3					
ANR	812045	Parameter	void * p	851:20:34606:34612	812017	0	True				
ANR	812046	ParameterType	void *		812017	0					
ANR	812047	Identifier	p		812017	1					
ANR	812048	Parameter	const char * k	851:29:34615:34627	812017	1	True				
ANR	812049	ParameterType	const char *		812017	0					
ANR	812050	Identifier	k		812017	1					
ANR	812051	Parameter	const char * v	851:44:34630:34642	812017	2	True				
ANR	812052	ParameterType	const char *		812017	0					
ANR	812053	Identifier	v		812017	1					
ANR	812054	CFGEntryNode	ENTRY		812017		True				
ANR	812055	CFGExitNode	EXIT		812017		True				
ANR	812056	Symbol	p		812017						
ANR	812057	Symbol	strcmp		812017						
ANR	812058	Symbol	v		812017						
ANR	812059	Symbol	k		812017						
ANR	812060	Function	find_refs	858:0:34712:35262							
ANR	812061	FunctionDef	"find_refs (RCore * core , const char * glob)"		812060	0					
ANR	812062	CompoundStatement		858:53:34765:35262	812060	0					
ANR	812063	IdentifierDeclStatement	char cmd [ 128 ] ;	859:1:34768:34781	812060	0	True				
ANR	812064	IdentifierDecl	cmd [ 128 ]		812060	0					
ANR	812065	IdentifierDeclType	char [ 128 ]		812060	0					
ANR	812066	Identifier	cmd		812060	1					
ANR	812067	PrimaryExpression	128		812060	2					
ANR	812068	IdentifierDeclStatement	ut64 curseek = core -> offset ;	860:1:34784:34811	812060	1	True				
ANR	812069	IdentifierDecl	curseek = core -> offset		812060	0					
ANR	812070	IdentifierDeclType	ut64		812060	0					
ANR	812071	Identifier	curseek		812060	1					
ANR	812072	AssignmentExpression	curseek = core -> offset		812060	2		=			
ANR	812073	Identifier	curseek		812060	0					
ANR	812074	PtrMemberAccess	core -> offset		812060	1					
ANR	812075	Identifier	core		812060	0					
ANR	812076	Identifier	offset		812060	1					
ANR	812077	WhileStatement	while ( * glob == ' ' )		812060	2					
ANR	812078	Condition	* glob == ' '	861:8:34821:34832	812060	0	True				
ANR	812079	EqualityExpression	* glob == ' '		812060	0		==			
ANR	812080	UnaryOperationExpression	* glob		812060	0					
ANR	812081	UnaryOperator	*		812060	0					
ANR	812082	Identifier	glob		812060	1					
ANR	812083	PrimaryExpression	' '		812060	1					
ANR	812084	ExpressionStatement	glob ++	861:22:34835:34841	812060	1	True				
ANR	812085	PostIncDecOperationExpression	glob ++		812060	0					
ANR	812086	Identifier	glob		812060	0					
ANR	812087	IncDec	++		812060	1					
ANR	812088	IfStatement	if ( ! * glob )		812060	3					
ANR	812089	Condition	! * glob	862:5:34848:34853	812060	0	True				
ANR	812090	UnaryOperationExpression	! * glob		812060	0					
ANR	812091	UnaryOperator	!		812060	0					
ANR	812092	UnaryOperationExpression	* glob		812060	1					
ANR	812093	UnaryOperator	*		812060	0					
ANR	812094	Identifier	glob		812060	1					
ANR	812095	CompoundStatement		5:13:90:90	812060	1					
ANR	812096	ExpressionStatement	"glob = ""str."""	863:2:34860:34873	812060	0	True				
ANR	812097	AssignmentExpression	"glob = ""str."""		812060	0		=			
ANR	812098	Identifier	glob		812060	0					
ANR	812099	PrimaryExpression	"""str."""		812060	1					
ANR	812100	IfStatement	if ( * glob == '?' )		812060	4					
ANR	812101	Condition	* glob == '?'	865:5:34883:34894	812060	0	True				
ANR	812102	EqualityExpression	* glob == '?'		812060	0		==			
ANR	812103	UnaryOperationExpression	* glob		812060	0					
ANR	812104	UnaryOperator	*		812060	0					
ANR	812105	Identifier	glob		812060	1					
ANR	812106	PrimaryExpression	'?'		812060	1					
ANR	812107	CompoundStatement		8:19:131:131	812060	1					
ANR	812108	ExpressionStatement	"eprintf ( ""Usage: axF [flag-str-filter]\\n"" )"	866:2:34901:34943	812060	0	True				
ANR	812109	CallExpression	"eprintf ( ""Usage: axF [flag-str-filter]\\n"" )"		812060	0					
ANR	812110	Callee	eprintf		812060	0					
ANR	812111	Identifier	eprintf		812060	0					
ANR	812112	ArgumentList	"""Usage: axF [flag-str-filter]\\n"""		812060	1					
ANR	812113	Argument	"""Usage: axF [flag-str-filter]\\n"""		812060	0					
ANR	812114	PrimaryExpression	"""Usage: axF [flag-str-filter]\\n"""		812060	0					
ANR	812115	ReturnStatement	return ;	867:2:34947:34953	812060	1	True				
ANR	812116	ExpressionStatement	"eprintf ( ""Finding references of flags matching '%s'...\\n"" , glob )"	869:1:34959:35023	812060	5	True				
ANR	812117	CallExpression	"eprintf ( ""Finding references of flags matching '%s'...\\n"" , glob )"		812060	0					
ANR	812118	Callee	eprintf		812060	0					
ANR	812119	Identifier	eprintf		812060	0					
ANR	812120	ArgumentList	"""Finding references of flags matching '%s'...\\n"""		812060	1					
ANR	812121	Argument	"""Finding references of flags matching '%s'...\\n"""		812060	0					
ANR	812122	PrimaryExpression	"""Finding references of flags matching '%s'...\\n"""		812060	0					
ANR	812123	Argument	glob		812060	1					
ANR	812124	Identifier	glob		812060	0					
ANR	812125	ExpressionStatement	"snprintf ( cmd , sizeof ( cmd ) - 1 , "".(findstref) @@= `f~%s[0]`"" , glob )"	870:1:35026:35094	812060	6	True				
ANR	812126	CallExpression	"snprintf ( cmd , sizeof ( cmd ) - 1 , "".(findstref) @@= `f~%s[0]`"" , glob )"		812060	0					
ANR	812127	Callee	snprintf		812060	0					
ANR	812128	Identifier	snprintf		812060	0					
ANR	812129	ArgumentList	cmd		812060	1					
ANR	812130	Argument	cmd		812060	0					
ANR	812131	Identifier	cmd		812060	0					
ANR	812132	Argument	sizeof ( cmd ) - 1		812060	1					
ANR	812133	AdditiveExpression	sizeof ( cmd ) - 1		812060	0		-			
ANR	812134	SizeofExpression	sizeof ( cmd )		812060	0					
ANR	812135	Sizeof	sizeof		812060	0					
ANR	812136	SizeofOperand	cmd		812060	1					
ANR	812137	PrimaryExpression	1		812060	1					
ANR	812138	Argument	""".(findstref) @@= `f~%s[0]`"""		812060	2					
ANR	812139	PrimaryExpression	""".(findstref) @@= `f~%s[0]`"""		812060	0					
ANR	812140	Argument	glob		812060	3					
ANR	812141	Identifier	glob		812060	0					
ANR	812142	ExpressionStatement	"r_core_cmd0 ( core , ""(findstref,f here=$$,s entry0,/r here,f-here)"" )"	871:1:35097:35164	812060	7	True				
ANR	812143	CallExpression	"r_core_cmd0 ( core , ""(findstref,f here=$$,s entry0,/r here,f-here)"" )"		812060	0					
ANR	812144	Callee	r_core_cmd0		812060	0					
ANR	812145	Identifier	r_core_cmd0		812060	0					
ANR	812146	ArgumentList	core		812060	1					
ANR	812147	Argument	core		812060	0					
ANR	812148	Identifier	core		812060	0					
ANR	812149	Argument	"""(findstref,f here=$$,s entry0,/r here,f-here)"""		812060	1					
ANR	812150	PrimaryExpression	"""(findstref,f here=$$,s entry0,/r here,f-here)"""		812060	0					
ANR	812151	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	872:1:35167:35190	812060	8	True				
ANR	812152	CallExpression	"r_core_cmd0 ( core , cmd )"		812060	0					
ANR	812153	Callee	r_core_cmd0		812060	0					
ANR	812154	Identifier	r_core_cmd0		812060	0					
ANR	812155	ArgumentList	core		812060	1					
ANR	812156	Argument	core		812060	0					
ANR	812157	Identifier	core		812060	0					
ANR	812158	Argument	cmd		812060	1					
ANR	812159	Identifier	cmd		812060	0					
ANR	812160	ExpressionStatement	"r_core_cmd0 ( core , ""(-findstref)"" )"	873:1:35193:35227	812060	9	True				
ANR	812161	CallExpression	"r_core_cmd0 ( core , ""(-findstref)"" )"		812060	0					
ANR	812162	Callee	r_core_cmd0		812060	0					
ANR	812163	Identifier	r_core_cmd0		812060	0					
ANR	812164	ArgumentList	core		812060	1					
ANR	812165	Argument	core		812060	0					
ANR	812166	Identifier	core		812060	0					
ANR	812167	Argument	"""(-findstref)"""		812060	1					
ANR	812168	PrimaryExpression	"""(-findstref)"""		812060	0					
ANR	812169	ExpressionStatement	"r_core_seek ( core , curseek , 1 )"	874:1:35230:35260	812060	10	True				
ANR	812170	CallExpression	"r_core_seek ( core , curseek , 1 )"		812060	0					
ANR	812171	Callee	r_core_seek		812060	0					
ANR	812172	Identifier	r_core_seek		812060	0					
ANR	812173	ArgumentList	core		812060	1					
ANR	812174	Argument	core		812060	0					
ANR	812175	Identifier	core		812060	0					
ANR	812176	Argument	curseek		812060	1					
ANR	812177	Identifier	curseek		812060	0					
ANR	812178	Argument	1		812060	2					
ANR	812179	PrimaryExpression	1		812060	0					
ANR	812180	ReturnType	static void		812060	1					
ANR	812181	Identifier	find_refs		812060	2					
ANR	812182	ParameterList	"RCore * core , const char * glob"		812060	3					
ANR	812183	Parameter	RCore * core	858:22:34734:34744	812060	0	True				
ANR	812184	ParameterType	RCore *		812060	0					
ANR	812185	Identifier	core		812060	1					
ANR	812186	Parameter	const char * glob	858:35:34747:34762	812060	1	True				
ANR	812187	ParameterType	const char *		812060	0					
ANR	812188	Identifier	glob		812060	1					
ANR	812189	CFGEntryNode	ENTRY		812060		True				
ANR	812190	CFGExitNode	EXIT		812060		True				
ANR	812191	Symbol	* glob		812060						
ANR	812192	Symbol	core		812060						
ANR	812193	Symbol	curseek		812060						
ANR	812194	Symbol	glob		812060						
ANR	812195	Symbol	* core		812060						
ANR	812196	Symbol	core -> offset		812060						
ANR	812197	Symbol	cmd		812060						
ANR	812198	Function	flag_every_function	878:0:35300:35602							
ANR	812199	FunctionDef	flag_every_function (RCore * core)		812198	0					
ANR	812200	CompoundStatement		878:45:35345:35602	812198	0					
ANR	812201	IdentifierDeclStatement	RListIter * iter ;	879:1:35348:35363	812198	0	True				
ANR	812202	IdentifierDecl	* iter		812198	0					
ANR	812203	IdentifierDeclType	RListIter *		812198	0					
ANR	812204	Identifier	iter		812198	1					
ANR	812205	IdentifierDeclStatement	RAnalFunction * fcn ;	880:1:35366:35384	812198	1	True				
ANR	812206	IdentifierDecl	* fcn		812198	0					
ANR	812207	IdentifierDeclType	RAnalFunction *		812198	0					
ANR	812208	Identifier	fcn		812198	1					
ANR	812209	ExpressionStatement	"r_flag_space_push ( core -> flags , R_FLAGS_FS_FUNCTIONS )"	881:1:35387:35440	812198	2	True				
ANR	812210	CallExpression	"r_flag_space_push ( core -> flags , R_FLAGS_FS_FUNCTIONS )"		812198	0					
ANR	812211	Callee	r_flag_space_push		812198	0					
ANR	812212	Identifier	r_flag_space_push		812198	0					
ANR	812213	ArgumentList	core -> flags		812198	1					
ANR	812214	Argument	core -> flags		812198	0					
ANR	812215	PtrMemberAccess	core -> flags		812198	0					
ANR	812216	Identifier	core		812198	0					
ANR	812217	Identifier	flags		812198	1					
ANR	812218	Argument	R_FLAGS_FS_FUNCTIONS		812198	1					
ANR	812219	Identifier	R_FLAGS_FS_FUNCTIONS		812198	0					
ANR	812220	Statement	r_list_foreach	882:1:35443:35456	812198	3	True				
ANR	812221	Statement	(	882:16:35458:35458	812198	4	True				
ANR	812222	Statement	core	882:17:35459:35462	812198	5	True				
ANR	812223	Statement	->	882:21:35463:35464	812198	6	True				
ANR	812224	Statement	anal	882:23:35465:35468	812198	7	True				
ANR	812225	Statement	->	882:27:35469:35470	812198	8	True				
ANR	812226	Statement	fcns	882:29:35471:35474	812198	9	True				
ANR	812227	Statement	","	882:33:35475:35475	812198	10	True				
ANR	812228	Statement	iter	882:35:35477:35480	812198	11	True				
ANR	812229	Statement	","	882:39:35481:35481	812198	12	True				
ANR	812230	Statement	fcn	882:41:35483:35485	812198	13	True				
ANR	812231	Statement	)	882:44:35486:35486	812198	14	True				
ANR	812232	CompoundStatement		5:46:142:142	812198	15					
ANR	812233	ExpressionStatement	"r_flag_set ( core -> flags , fcn -> name , fcn -> addr , r_anal_fcn_size ( fcn ) )"	883:2:35492:35564	812198	0	True				
ANR	812234	CallExpression	"r_flag_set ( core -> flags , fcn -> name , fcn -> addr , r_anal_fcn_size ( fcn ) )"		812198	0					
ANR	812235	Callee	r_flag_set		812198	0					
ANR	812236	Identifier	r_flag_set		812198	0					
ANR	812237	ArgumentList	core -> flags		812198	1					
ANR	812238	Argument	core -> flags		812198	0					
ANR	812239	PtrMemberAccess	core -> flags		812198	0					
ANR	812240	Identifier	core		812198	0					
ANR	812241	Identifier	flags		812198	1					
ANR	812242	Argument	fcn -> name		812198	1					
ANR	812243	PtrMemberAccess	fcn -> name		812198	0					
ANR	812244	Identifier	fcn		812198	0					
ANR	812245	Identifier	name		812198	1					
ANR	812246	Argument	fcn -> addr		812198	2					
ANR	812247	PtrMemberAccess	fcn -> addr		812198	0					
ANR	812248	Identifier	fcn		812198	0					
ANR	812249	Identifier	addr		812198	1					
ANR	812250	Argument	r_anal_fcn_size ( fcn )		812198	3					
ANR	812251	CallExpression	r_anal_fcn_size ( fcn )		812198	0					
ANR	812252	Callee	r_anal_fcn_size		812198	0					
ANR	812253	Identifier	r_anal_fcn_size		812198	0					
ANR	812254	ArgumentList	fcn		812198	1					
ANR	812255	Argument	fcn		812198	0					
ANR	812256	Identifier	fcn		812198	0					
ANR	812257	ExpressionStatement	r_flag_space_pop ( core -> flags )	886:1:35570:35600	812198	16	True				
ANR	812258	CallExpression	r_flag_space_pop ( core -> flags )		812198	0					
ANR	812259	Callee	r_flag_space_pop		812198	0					
ANR	812260	Identifier	r_flag_space_pop		812198	0					
ANR	812261	ArgumentList	core -> flags		812198	1					
ANR	812262	Argument	core -> flags		812198	0					
ANR	812263	PtrMemberAccess	core -> flags		812198	0					
ANR	812264	Identifier	core		812198	0					
ANR	812265	Identifier	flags		812198	1					
ANR	812266	ReturnType	static void		812198	1					
ANR	812267	Identifier	flag_every_function		812198	2					
ANR	812268	ParameterList	RCore * core		812198	3					
ANR	812269	Parameter	RCore * core	878:32:35332:35342	812198	0	True				
ANR	812270	ParameterType	RCore *		812198	0					
ANR	812271	Identifier	core		812198	1					
ANR	812272	CFGEntryNode	ENTRY		812198		True				
ANR	812273	CFGExitNode	EXIT		812198		True				
ANR	812274	Symbol	fcn		812198						
ANR	812275	Symbol	core		812198						
ANR	812276	Symbol	R_FLAGS_FS_FUNCTIONS		812198						
ANR	812277	Symbol	* fcn		812198						
ANR	812278	Symbol	fcn -> name		812198						
ANR	812279	Symbol	r_anal_fcn_size		812198						
ANR	812280	Symbol	* core		812198						
ANR	812281	Symbol	iter		812198						
ANR	812282	Symbol	fcn -> addr		812198						
ANR	812283	Symbol	core -> flags		812198						
ANR	812284	Function	var_help	889:0:35605:35971							
ANR	812285	FunctionDef	"var_help (RCore * core , char ch)"		812284	0					
ANR	812286	CompoundStatement		889:43:35648:35971	812284	0					
ANR	812287	SwitchStatement	switch ( ch )		812284	0					
ANR	812288	Condition	ch	890:9:35659:35660	812284	0	True				
ANR	812289	Identifier	ch		812284	0					
ANR	812290	CompoundStatement		2:13:14:14	812284	1					
ANR	812291	Label	case 'b' :	891:1:35666:35674	812284	0	True				
ANR	812292	ExpressionStatement	"r_core_cmd_help ( core , help_msg_afvb )"	892:2:35678:35715	812284	1	True				
ANR	812293	CallExpression	"r_core_cmd_help ( core , help_msg_afvb )"		812284	0					
ANR	812294	Callee	r_core_cmd_help		812284	0					
ANR	812295	Identifier	r_core_cmd_help		812284	0					
ANR	812296	ArgumentList	core		812284	1					
ANR	812297	Argument	core		812284	0					
ANR	812298	Identifier	core		812284	0					
ANR	812299	Argument	help_msg_afvb		812284	1					
ANR	812300	Identifier	help_msg_afvb		812284	0					
ANR	812301	BreakStatement	break ;	893:2:35719:35724	812284	2	True				
ANR	812302	Label	case 's' :	894:1:35727:35735	812284	3	True				
ANR	812303	ExpressionStatement	"r_core_cmd_help ( core , help_msg_afvs )"	895:2:35739:35776	812284	4	True				
ANR	812304	CallExpression	"r_core_cmd_help ( core , help_msg_afvs )"		812284	0					
ANR	812305	Callee	r_core_cmd_help		812284	0					
ANR	812306	Identifier	r_core_cmd_help		812284	0					
ANR	812307	ArgumentList	core		812284	1					
ANR	812308	Argument	core		812284	0					
ANR	812309	Identifier	core		812284	0					
ANR	812310	Argument	help_msg_afvs		812284	1					
ANR	812311	Identifier	help_msg_afvs		812284	0					
ANR	812312	BreakStatement	break ;	896:2:35780:35785	812284	5	True				
ANR	812313	Label	case 'r' :	897:1:35788:35796	812284	6	True				
ANR	812314	ExpressionStatement	"r_core_cmd_help ( core , help_msg_afvr )"	898:2:35800:35837	812284	7	True				
ANR	812315	CallExpression	"r_core_cmd_help ( core , help_msg_afvr )"		812284	0					
ANR	812316	Callee	r_core_cmd_help		812284	0					
ANR	812317	Identifier	r_core_cmd_help		812284	0					
ANR	812318	ArgumentList	core		812284	1					
ANR	812319	Argument	core		812284	0					
ANR	812320	Identifier	core		812284	0					
ANR	812321	Argument	help_msg_afvr		812284	1					
ANR	812322	Identifier	help_msg_afvr		812284	0					
ANR	812323	BreakStatement	break ;	899:2:35841:35846	812284	8	True				
ANR	812324	Label	case '?' :	900:1:35849:35857	812284	9	True				
ANR	812325	ExpressionStatement	"r_core_cmd_help ( core , help_msg_afv )"	901:2:35861:35897	812284	10	True				
ANR	812326	CallExpression	"r_core_cmd_help ( core , help_msg_afv )"		812284	0					
ANR	812327	Callee	r_core_cmd_help		812284	0					
ANR	812328	Identifier	r_core_cmd_help		812284	0					
ANR	812329	ArgumentList	core		812284	1					
ANR	812330	Argument	core		812284	0					
ANR	812331	Identifier	core		812284	0					
ANR	812332	Argument	help_msg_afv		812284	1					
ANR	812333	Identifier	help_msg_afv		812284	0					
ANR	812334	BreakStatement	break ;	902:2:35901:35906	812284	11	True				
ANR	812335	Label	default :	903:1:35909:35916	812284	12	True				
ANR	812336	Identifier	default		812284	0					
ANR	812337	ExpressionStatement	"eprintf ( ""See afv?, afvb?, afvr? and afvs?\\n"" )"	904:2:35920:35966	812284	13	True				
ANR	812338	CallExpression	"eprintf ( ""See afv?, afvb?, afvr? and afvs?\\n"" )"		812284	0					
ANR	812339	Callee	eprintf		812284	0					
ANR	812340	Identifier	eprintf		812284	0					
ANR	812341	ArgumentList	"""See afv?, afvb?, afvr? and afvs?\\n"""		812284	1					
ANR	812342	Argument	"""See afv?, afvb?, afvr? and afvs?\\n"""		812284	0					
ANR	812343	PrimaryExpression	"""See afv?, afvb?, afvr? and afvs?\\n"""		812284	0					
ANR	812344	ReturnType	static void		812284	1					
ANR	812345	Identifier	var_help		812284	2					
ANR	812346	ParameterList	"RCore * core , char ch"		812284	3					
ANR	812347	Parameter	RCore * core	889:21:35626:35636	812284	0	True				
ANR	812348	ParameterType	RCore *		812284	0					
ANR	812349	Identifier	core		812284	1					
ANR	812350	Parameter	char ch	889:34:35639:35645	812284	1	True				
ANR	812351	ParameterType	char		812284	0					
ANR	812352	Identifier	ch		812284	1					
ANR	812353	CFGEntryNode	ENTRY		812284		True				
ANR	812354	CFGExitNode	EXIT		812284		True				
ANR	812355	Symbol	core		812284						
ANR	812356	Symbol	ch		812284						
ANR	812357	Symbol	help_msg_afvs		812284						
ANR	812358	Symbol	help_msg_afvb		812284						
ANR	812359	Symbol	help_msg_afvr		812284						
ANR	812360	Symbol	help_msg_afv		812284						
ANR	812361	Function	var_accesses_list	908:0:35974:36312							
ANR	812362	FunctionDef	"var_accesses_list (RAnal * a , RAnalFunction * fcn , int delta , const char * typestr)"		812361	0					
ANR	812363	CompoundStatement		908:92:36066:36312	812361	0					
ANR	812364	Statement	const	909:1:36069:36073	812361	0	True				
ANR	812365	Statement	char	909:7:36075:36078	812361	1	True				
ANR	812366	Statement	*	909:12:36080:36080	812361	2	True				
ANR	812367	Statement	var_local	909:13:36081:36089	812361	3	True				
ANR	812368	Statement	=	909:23:36091:36091	812361	4	True				
ANR	812369	Statement	sdb_fmt	909:25:36093:36099	812361	5	True				
ANR	812370	Statement	(	909:33:36101:36101	812361	6	True				
ANR	812371	Statement	"""var.0x%"""	909:34:36102:36110	812361	7	True				
ANR	812372	Statement	PFMT64x	909:43:36111:36117	812361	8	True				
ANR	812373	Statement	""".%d.%d.%s"""	909:50:36118:36128	812361	9	True				
ANR	812374	Statement	","	909:61:36129:36129	812361	10	True				
ANR	812375	Statement	fcn	910:3:36134:36136	812361	11	True				
ANR	812376	Statement	->	910:6:36137:36138	812361	12	True				
ANR	812377	Statement	addr	910:8:36139:36142	812361	13	True				
ANR	812378	Statement	","	910:12:36143:36143	812361	14	True				
ANR	812379	Statement	1	910:14:36145:36145	812361	15	True				
ANR	812380	Statement	","	910:15:36146:36146	812361	16	True				
ANR	812381	Statement	delta	910:17:36148:36152	812361	17	True				
ANR	812382	Statement	","	910:22:36153:36153	812361	18	True				
ANR	812383	Statement	typestr	910:24:36155:36161	812361	19	True				
ANR	812384	Statement	)	910:31:36162:36162	812361	20	True				
ANR	812385	ExpressionStatement		910:32:36163:36163	812361	21	True				
ANR	812386	IdentifierDeclStatement	"const char * xss = sdb_const_get ( a -> sdb_fcns , var_local , 0 ) ;"	911:1:36166:36225	812361	22	True				
ANR	812387	IdentifierDecl	"* xss = sdb_const_get ( a -> sdb_fcns , var_local , 0 )"		812361	0					
ANR	812388	IdentifierDeclType	const char *		812361	0					
ANR	812389	Identifier	xss		812361	1					
ANR	812390	AssignmentExpression	"* xss = sdb_const_get ( a -> sdb_fcns , var_local , 0 )"		812361	2		=			
ANR	812391	Identifier	xss		812361	0					
ANR	812392	CallExpression	"sdb_const_get ( a -> sdb_fcns , var_local , 0 )"		812361	1					
ANR	812393	Callee	sdb_const_get		812361	0					
ANR	812394	Identifier	sdb_const_get		812361	0					
ANR	812395	ArgumentList	a -> sdb_fcns		812361	1					
ANR	812396	Argument	a -> sdb_fcns		812361	0					
ANR	812397	PtrMemberAccess	a -> sdb_fcns		812361	0					
ANR	812398	Identifier	a		812361	0					
ANR	812399	Identifier	sdb_fcns		812361	1					
ANR	812400	Argument	var_local		812361	1					
ANR	812401	Identifier	var_local		812361	0					
ANR	812402	Argument	0		812361	2					
ANR	812403	PrimaryExpression	0		812361	0					
ANR	812404	IfStatement	if ( xss && * xss )		812361	23					
ANR	812405	Condition	xss && * xss	912:5:36232:36242	812361	0	True				
ANR	812406	AndExpression	xss && * xss		812361	0		&&			
ANR	812407	Identifier	xss		812361	0					
ANR	812408	UnaryOperationExpression	* xss		812361	1					
ANR	812409	UnaryOperator	*		812361	0					
ANR	812410	Identifier	xss		812361	1					
ANR	812411	CompoundStatement		5:18:178:178	812361	1					
ANR	812412	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , xss )"	913:2:36249:36276	812361	0	True				
ANR	812413	CallExpression	"r_cons_printf ( ""%s\\n"" , xss )"		812361	0					
ANR	812414	Callee	r_cons_printf		812361	0					
ANR	812415	Identifier	r_cons_printf		812361	0					
ANR	812416	ArgumentList	"""%s\\n"""		812361	1					
ANR	812417	Argument	"""%s\\n"""		812361	0					
ANR	812418	PrimaryExpression	"""%s\\n"""		812361	0					
ANR	812419	Argument	xss		812361	1					
ANR	812420	Identifier	xss		812361	0					
ANR	812421	ElseStatement	else		812361	0					
ANR	812422	CompoundStatement		7:8:219:219	812361	0					
ANR	812423	ExpressionStatement	r_cons_newline ( )	915:2:36290:36307	812361	0	True				
ANR	812424	CallExpression	r_cons_newline ( )		812361	0					
ANR	812425	Callee	r_cons_newline		812361	0					
ANR	812426	Identifier	r_cons_newline		812361	0					
ANR	812427	ArgumentList			812361	1					
ANR	812428	ReturnType	static void		812361	1					
ANR	812429	Identifier	var_accesses_list		812361	2					
ANR	812430	ParameterList	"RAnal * a , RAnalFunction * fcn , int delta , const char * typestr"		812361	3					
ANR	812431	Parameter	RAnal * a	908:30:36004:36011	812361	0	True				
ANR	812432	ParameterType	RAnal *		812361	0					
ANR	812433	Identifier	a		812361	1					
ANR	812434	Parameter	RAnalFunction * fcn	908:40:36014:36031	812361	1	True				
ANR	812435	ParameterType	RAnalFunction *		812361	0					
ANR	812436	Identifier	fcn		812361	1					
ANR	812437	Parameter	int delta	908:60:36034:36042	812361	2	True				
ANR	812438	ParameterType	int		812361	0					
ANR	812439	Identifier	delta		812361	1					
ANR	812440	Parameter	const char * typestr	908:71:36045:36063	812361	3	True				
ANR	812441	ParameterType	const char *		812361	0					
ANR	812442	Identifier	typestr		812361	1					
ANR	812443	CFGEntryNode	ENTRY		812361		True				
ANR	812444	CFGExitNode	EXIT		812361		True				
ANR	812445	Symbol	fcn		812361						
ANR	812446	Symbol	typestr		812361						
ANR	812447	Symbol	a -> sdb_fcns		812361						
ANR	812448	Symbol	a		812361						
ANR	812449	Symbol	* xss		812361						
ANR	812450	Symbol	var_local		812361						
ANR	812451	Symbol	delta		812361						
ANR	812452	Symbol	xss		812361						
ANR	812453	Symbol	* a		812361						
ANR	812454	Symbol	sdb_const_get		812361						
ANR	812455	Function	list_vars	919:0:36315:37219							
ANR	812456	FunctionDef	"list_vars (RCore * core , RAnalFunction * fcn , int type , const char * name)"		812455	0					
ANR	812457	CompoundStatement		919:83:36398:37219	812455	0					
ANR	812458	IdentifierDeclStatement	RAnalVar * var ;	920:1:36401:36414	812455	0	True				
ANR	812459	IdentifierDecl	* var		812455	0					
ANR	812460	IdentifierDeclType	RAnalVar *		812455	0					
ANR	812461	Identifier	var		812455	1					
ANR	812462	IdentifierDeclStatement	RListIter * iter ;	921:1:36417:36432	812455	1	True				
ANR	812463	IdentifierDecl	* iter		812455	0					
ANR	812464	IdentifierDeclType	RListIter *		812455	0					
ANR	812465	Identifier	iter		812455	1					
ANR	812466	IdentifierDeclStatement	"RList * list = r_anal_var_all_list ( core -> anal , fcn ) ;"	922:1:36435:36486	812455	2	True				
ANR	812467	IdentifierDecl	"* list = r_anal_var_all_list ( core -> anal , fcn )"		812455	0					
ANR	812468	IdentifierDeclType	RList *		812455	0					
ANR	812469	Identifier	list		812455	1					
ANR	812470	AssignmentExpression	"* list = r_anal_var_all_list ( core -> anal , fcn )"		812455	2		=			
ANR	812471	Identifier	list		812455	0					
ANR	812472	CallExpression	"r_anal_var_all_list ( core -> anal , fcn )"		812455	1					
ANR	812473	Callee	r_anal_var_all_list		812455	0					
ANR	812474	Identifier	r_anal_var_all_list		812455	0					
ANR	812475	ArgumentList	core -> anal		812455	1					
ANR	812476	Argument	core -> anal		812455	0					
ANR	812477	PtrMemberAccess	core -> anal		812455	0					
ANR	812478	Identifier	core		812455	0					
ANR	812479	Identifier	anal		812455	1					
ANR	812480	Argument	fcn		812455	1					
ANR	812481	Identifier	fcn		812455	0					
ANR	812482	IfStatement	if ( type == '*' )		812455	3					
ANR	812483	Condition	type == '*'	923:5:36493:36503	812455	0	True				
ANR	812484	EqualityExpression	type == '*'		812455	0		==			
ANR	812485	Identifier	type		812455	0					
ANR	812486	PrimaryExpression	'*'		812455	1					
ANR	812487	CompoundStatement		6:2:111:175	812455	1					
ANR	812488	IdentifierDeclStatement	"const char * bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP ) ;"	924:2:36510:36574	812455	0	True				
ANR	812489	IdentifierDecl	"* bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		812455	0					
ANR	812490	IdentifierDeclType	const char *		812455	0					
ANR	812491	Identifier	bp		812455	1					
ANR	812492	AssignmentExpression	"* bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		812455	2		=			
ANR	812493	Identifier	bp		812455	0					
ANR	812494	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		812455	1					
ANR	812495	Callee	r_reg_get_name		812455	0					
ANR	812496	Identifier	r_reg_get_name		812455	0					
ANR	812497	ArgumentList	core -> anal -> reg		812455	1					
ANR	812498	Argument	core -> anal -> reg		812455	0					
ANR	812499	PtrMemberAccess	core -> anal -> reg		812455	0					
ANR	812500	PtrMemberAccess	core -> anal		812455	0					
ANR	812501	Identifier	core		812455	0					
ANR	812502	Identifier	anal		812455	1					
ANR	812503	Identifier	reg		812455	1					
ANR	812504	Argument	R_REG_NAME_BP		812455	1					
ANR	812505	Identifier	R_REG_NAME_BP		812455	0					
ANR	812506	ExpressionStatement	"r_cons_printf ( ""f-fcnvar*\\n"" )"	925:2:36578:36607	812455	1	True				
ANR	812507	CallExpression	"r_cons_printf ( ""f-fcnvar*\\n"" )"		812455	0					
ANR	812508	Callee	r_cons_printf		812455	0					
ANR	812509	Identifier	r_cons_printf		812455	0					
ANR	812510	ArgumentList	"""f-fcnvar*\\n"""		812455	1					
ANR	812511	Argument	"""f-fcnvar*\\n"""		812455	0					
ANR	812512	PrimaryExpression	"""f-fcnvar*\\n"""		812455	0					
ANR	812513	Statement	r_list_foreach	926:2:36611:36624	812455	2	True				
ANR	812514	Statement	(	926:17:36626:36626	812455	3	True				
ANR	812515	Statement	list	926:18:36627:36630	812455	4	True				
ANR	812516	Statement	","	926:22:36631:36631	812455	5	True				
ANR	812517	Statement	iter	926:24:36633:36636	812455	6	True				
ANR	812518	Statement	","	926:28:36637:36637	812455	7	True				
ANR	812519	Statement	var	926:30:36639:36641	812455	8	True				
ANR	812520	Statement	)	926:33:36642:36642	812455	9	True				
ANR	812521	CompoundStatement		8:35:245:245	812455	10					
ANR	812522	ExpressionStatement	"r_cons_printf ( ""f fcnvar.%s @ %s%s%d\\n"" , var -> name , bp , var -> delta >= 0 ? ""+"" : """" , var -> delta )"	927:3:36649:36743	812455	0	True				
ANR	812523	CallExpression	"r_cons_printf ( ""f fcnvar.%s @ %s%s%d\\n"" , var -> name , bp , var -> delta >= 0 ? ""+"" : """" , var -> delta )"		812455	0					
ANR	812524	Callee	r_cons_printf		812455	0					
ANR	812525	Identifier	r_cons_printf		812455	0					
ANR	812526	ArgumentList	"""f fcnvar.%s @ %s%s%d\\n"""		812455	1					
ANR	812527	Argument	"""f fcnvar.%s @ %s%s%d\\n"""		812455	0					
ANR	812528	PrimaryExpression	"""f fcnvar.%s @ %s%s%d\\n"""		812455	0					
ANR	812529	Argument	var -> name		812455	1					
ANR	812530	PtrMemberAccess	var -> name		812455	0					
ANR	812531	Identifier	var		812455	0					
ANR	812532	Identifier	name		812455	1					
ANR	812533	Argument	bp		812455	2					
ANR	812534	Identifier	bp		812455	0					
ANR	812535	Argument	"var -> delta >= 0 ? ""+"" : """""		812455	3					
ANR	812536	ConditionalExpression	"var -> delta >= 0 ? ""+"" : """""		812455	0					
ANR	812537	Condition	var -> delta >= 0		812455	0					
ANR	812538	RelationalExpression	var -> delta >= 0		812455	0		>=			
ANR	812539	PtrMemberAccess	var -> delta		812455	0					
ANR	812540	Identifier	var		812455	0					
ANR	812541	Identifier	delta		812455	1					
ANR	812542	PrimaryExpression	0		812455	1					
ANR	812543	PrimaryExpression	"""+"""		812455	1					
ANR	812544	PrimaryExpression	""""""		812455	2					
ANR	812545	Argument	var -> delta		812455	4					
ANR	812546	PtrMemberAccess	var -> delta		812455	0					
ANR	812547	Identifier	var		812455	0					
ANR	812548	Identifier	delta		812455	1					
ANR	812549	ReturnStatement	return ;	930:2:36751:36757	812455	11	True				
ANR	812550	IfStatement	if ( type != 'W' && type != 'R' )		812455	4					
ANR	812551	Condition	type != 'W' && type != 'R'	932:5:36767:36792	812455	0	True				
ANR	812552	AndExpression	type != 'W' && type != 'R'		812455	0		&&			
ANR	812553	EqualityExpression	type != 'W'		812455	0		!=			
ANR	812554	Identifier	type		812455	0					
ANR	812555	PrimaryExpression	'W'		812455	1					
ANR	812556	EqualityExpression	type != 'R'		812455	1		!=			
ANR	812557	Identifier	type		812455	0					
ANR	812558	PrimaryExpression	'R'		812455	1					
ANR	812559	CompoundStatement		14:33:396:396	812455	1					
ANR	812560	ReturnStatement	return ;	933:2:36799:36805	812455	0	True				
ANR	812561	IdentifierDeclStatement	"const char * typestr = type == 'R' ? ""reads"" : ""writes"" ;"	935:1:36811:36861	812455	5	True				
ANR	812562	IdentifierDecl	"* typestr = type == 'R' ? ""reads"" : ""writes"""		812455	0					
ANR	812563	IdentifierDeclType	const char *		812455	0					
ANR	812564	Identifier	typestr		812455	1					
ANR	812565	AssignmentExpression	"* typestr = type == 'R' ? ""reads"" : ""writes"""		812455	2		=			
ANR	812566	Identifier	typestr		812455	0					
ANR	812567	ConditionalExpression	"type == 'R' ? ""reads"" : ""writes"""		812455	1					
ANR	812568	Condition	type == 'R'		812455	0					
ANR	812569	EqualityExpression	type == 'R'		812455	0		==			
ANR	812570	Identifier	type		812455	0					
ANR	812571	PrimaryExpression	'R'		812455	1					
ANR	812572	PrimaryExpression	"""reads"""		812455	1					
ANR	812573	PrimaryExpression	"""writes"""		812455	2					
ANR	812574	IfStatement	if ( name && * name )		812455	6					
ANR	812575	Condition	name && * name	936:5:36868:36880	812455	0	True				
ANR	812576	AndExpression	name && * name		812455	0		&&			
ANR	812577	Identifier	name		812455	0					
ANR	812578	UnaryOperationExpression	* name		812455	1					
ANR	812579	UnaryOperator	*		812455	0					
ANR	812580	Identifier	name		812455	1					
ANR	812581	CompoundStatement		18:20:484:484	812455	1					
ANR	812582	ExpressionStatement	"var = r_anal_var_get_byname ( core -> anal , fcn -> addr , name )"	937:2:36887:36944	812455	0	True				
ANR	812583	AssignmentExpression	"var = r_anal_var_get_byname ( core -> anal , fcn -> addr , name )"		812455	0		=			
ANR	812584	Identifier	var		812455	0					
ANR	812585	CallExpression	"r_anal_var_get_byname ( core -> anal , fcn -> addr , name )"		812455	1					
ANR	812586	Callee	r_anal_var_get_byname		812455	0					
ANR	812587	Identifier	r_anal_var_get_byname		812455	0					
ANR	812588	ArgumentList	core -> anal		812455	1					
ANR	812589	Argument	core -> anal		812455	0					
ANR	812590	PtrMemberAccess	core -> anal		812455	0					
ANR	812591	Identifier	core		812455	0					
ANR	812592	Identifier	anal		812455	1					
ANR	812593	Argument	fcn -> addr		812455	1					
ANR	812594	PtrMemberAccess	fcn -> addr		812455	0					
ANR	812595	Identifier	fcn		812455	0					
ANR	812596	Identifier	addr		812455	1					
ANR	812597	Argument	name		812455	2					
ANR	812598	Identifier	name		812455	0					
ANR	812599	IfStatement	if ( var )		812455	1					
ANR	812600	Condition	var	938:6:36952:36954	812455	0	True				
ANR	812601	Identifier	var		812455	0					
ANR	812602	CompoundStatement		20:11:558:558	812455	1					
ANR	812603	ExpressionStatement	"r_cons_printf ( ""%10s  "" , var -> name )"	939:3:36962:36997	812455	0	True				
ANR	812604	CallExpression	"r_cons_printf ( ""%10s  "" , var -> name )"		812455	0					
ANR	812605	Callee	r_cons_printf		812455	0					
ANR	812606	Identifier	r_cons_printf		812455	0					
ANR	812607	ArgumentList	"""%10s  """		812455	1					
ANR	812608	Argument	"""%10s  """		812455	0					
ANR	812609	PrimaryExpression	"""%10s  """		812455	0					
ANR	812610	Argument	var -> name		812455	1					
ANR	812611	PtrMemberAccess	var -> name		812455	0					
ANR	812612	Identifier	var		812455	0					
ANR	812613	Identifier	name		812455	1					
ANR	812614	ExpressionStatement	"var_accesses_list ( core -> anal , fcn , var -> delta , typestr )"	940:3:37002:37058	812455	1	True				
ANR	812615	CallExpression	"var_accesses_list ( core -> anal , fcn , var -> delta , typestr )"		812455	0					
ANR	812616	Callee	var_accesses_list		812455	0					
ANR	812617	Identifier	var_accesses_list		812455	0					
ANR	812618	ArgumentList	core -> anal		812455	1					
ANR	812619	Argument	core -> anal		812455	0					
ANR	812620	PtrMemberAccess	core -> anal		812455	0					
ANR	812621	Identifier	core		812455	0					
ANR	812622	Identifier	anal		812455	1					
ANR	812623	Argument	fcn		812455	1					
ANR	812624	Identifier	fcn		812455	0					
ANR	812625	Argument	var -> delta		812455	2					
ANR	812626	PtrMemberAccess	var -> delta		812455	0					
ANR	812627	Identifier	var		812455	0					
ANR	812628	Identifier	delta		812455	1					
ANR	812629	Argument	typestr		812455	3					
ANR	812630	Identifier	typestr		812455	0					
ANR	812631	ElseStatement	else		812455	0					
ANR	812632	CompoundStatement		24:8:673:673	812455	0					
ANR	812633	Statement	r_list_foreach	943:2:37076:37089	812455	0	True				
ANR	812634	Statement	(	943:17:37091:37091	812455	1	True				
ANR	812635	Statement	list	943:18:37092:37095	812455	2	True				
ANR	812636	Statement	","	943:22:37096:37096	812455	3	True				
ANR	812637	Statement	iter	943:24:37098:37101	812455	4	True				
ANR	812638	Statement	","	943:28:37102:37102	812455	5	True				
ANR	812639	Statement	var	943:30:37104:37106	812455	6	True				
ANR	812640	Statement	)	943:33:37107:37107	812455	7	True				
ANR	812641	CompoundStatement		25:35:710:710	812455	8					
ANR	812642	ExpressionStatement	"r_cons_printf ( ""%10s  "" , var -> name )"	944:3:37114:37149	812455	0	True				
ANR	812643	CallExpression	"r_cons_printf ( ""%10s  "" , var -> name )"		812455	0					
ANR	812644	Callee	r_cons_printf		812455	0					
ANR	812645	Identifier	r_cons_printf		812455	0					
ANR	812646	ArgumentList	"""%10s  """		812455	1					
ANR	812647	Argument	"""%10s  """		812455	0					
ANR	812648	PrimaryExpression	"""%10s  """		812455	0					
ANR	812649	Argument	var -> name		812455	1					
ANR	812650	PtrMemberAccess	var -> name		812455	0					
ANR	812651	Identifier	var		812455	0					
ANR	812652	Identifier	name		812455	1					
ANR	812653	ExpressionStatement	"var_accesses_list ( core -> anal , fcn , var -> delta , typestr )"	945:3:37154:37210	812455	1	True				
ANR	812654	CallExpression	"var_accesses_list ( core -> anal , fcn , var -> delta , typestr )"		812455	0					
ANR	812655	Callee	var_accesses_list		812455	0					
ANR	812656	Identifier	var_accesses_list		812455	0					
ANR	812657	ArgumentList	core -> anal		812455	1					
ANR	812658	Argument	core -> anal		812455	0					
ANR	812659	PtrMemberAccess	core -> anal		812455	0					
ANR	812660	Identifier	core		812455	0					
ANR	812661	Identifier	anal		812455	1					
ANR	812662	Argument	fcn		812455	1					
ANR	812663	Identifier	fcn		812455	0					
ANR	812664	Argument	var -> delta		812455	2					
ANR	812665	PtrMemberAccess	var -> delta		812455	0					
ANR	812666	Identifier	var		812455	0					
ANR	812667	Identifier	delta		812455	1					
ANR	812668	Argument	typestr		812455	3					
ANR	812669	Identifier	typestr		812455	0					
ANR	812670	ReturnType	static void		812455	1					
ANR	812671	Identifier	list_vars		812455	2					
ANR	812672	ParameterList	"RCore * core , RAnalFunction * fcn , int type , const char * name"		812455	3					
ANR	812673	Parameter	RCore * core	919:22:36337:36347	812455	0	True				
ANR	812674	ParameterType	RCore *		812455	0					
ANR	812675	Identifier	core		812455	1					
ANR	812676	Parameter	RAnalFunction * fcn	919:35:36350:36367	812455	1	True				
ANR	812677	ParameterType	RAnalFunction *		812455	0					
ANR	812678	Identifier	fcn		812455	1					
ANR	812679	Parameter	int type	919:55:36370:36377	812455	2	True				
ANR	812680	ParameterType	int		812455	0					
ANR	812681	Identifier	type		812455	1					
ANR	812682	Parameter	const char * name	919:65:36380:36395	812455	3	True				
ANR	812683	ParameterType	const char *		812455	0					
ANR	812684	Identifier	name		812455	1					
ANR	812685	CFGEntryNode	ENTRY		812455		True				
ANR	812686	CFGExitNode	EXIT		812455		True				
ANR	812687	Symbol	R_REG_NAME_BP		812455						
ANR	812688	Symbol	* name		812455						
ANR	812689	Symbol	r_anal_var_all_list		812455						
ANR	812690	Symbol	core -> anal -> reg		812455						
ANR	812691	Symbol	* fcn		812455						
ANR	812692	Symbol	var		812455						
ANR	812693	Symbol	* core		812455						
ANR	812694	Symbol	iter		812455						
ANR	812695	Symbol	type		812455						
ANR	812696	Symbol	list		812455						
ANR	812697	Symbol	core -> anal		812455						
ANR	812698	Symbol	var -> delta		812455						
ANR	812699	Symbol	bp		812455						
ANR	812700	Symbol	r_anal_var_get_byname		812455						
ANR	812701	Symbol	fcn		812455						
ANR	812702	Symbol	typestr		812455						
ANR	812703	Symbol	core		812455						
ANR	812704	Symbol	* var		812455						
ANR	812705	Symbol	* core -> anal		812455						
ANR	812706	Symbol	r_reg_get_name		812455						
ANR	812707	Symbol	name		812455						
ANR	812708	Symbol	var -> name		812455						
ANR	812709	Symbol	fcn -> addr		812455						
ANR	812710	Symbol	* * core		812455						
ANR	812711	Function	cmd_an	950:0:37222:39606							
ANR	812712	FunctionDef	"cmd_an (RCore * core , bool use_json , const char * name)"		812711	0					
ANR	812713	CompoundStatement		951:0:37286:39606	812711	0					
ANR	812714	IdentifierDeclStatement	ut64 off = core -> offset ;	952:1:37289:37312	812711	0	True				
ANR	812715	IdentifierDecl	off = core -> offset		812711	0					
ANR	812716	IdentifierDeclType	ut64		812711	0					
ANR	812717	Identifier	off		812711	1					
ANR	812718	AssignmentExpression	off = core -> offset		812711	2		=			
ANR	812719	Identifier	off		812711	0					
ANR	812720	PtrMemberAccess	core -> offset		812711	1					
ANR	812721	Identifier	core		812711	0					
ANR	812722	Identifier	offset		812711	1					
ANR	812723	IdentifierDeclStatement	RAnalOp op ;	953:1:37315:37325	812711	1	True				
ANR	812724	IdentifierDecl	op		812711	0					
ANR	812725	IdentifierDeclType	RAnalOp		812711	0					
ANR	812726	Identifier	op		812711	1					
ANR	812727	IdentifierDeclStatement	char * q = NULL ;	954:1:37328:37342	812711	2	True				
ANR	812728	IdentifierDecl	* q = NULL		812711	0					
ANR	812729	IdentifierDeclType	char *		812711	0					
ANR	812730	Identifier	q		812711	1					
ANR	812731	AssignmentExpression	* q = NULL		812711	2		=			
ANR	812732	Identifier	NULL		812711	0					
ANR	812733	Identifier	NULL		812711	1					
ANR	812734	IdentifierDeclStatement	PJ * pj = NULL ;	955:1:37345:37358	812711	3	True				
ANR	812735	IdentifierDecl	* pj = NULL		812711	0					
ANR	812736	IdentifierDeclType	PJ *		812711	0					
ANR	812737	Identifier	pj		812711	1					
ANR	812738	AssignmentExpression	* pj = NULL		812711	2		=			
ANR	812739	Identifier	NULL		812711	0					
ANR	812740	Identifier	NULL		812711	1					
ANR	812741	IdentifierDeclStatement	ut64 tgt_addr = UT64_MAX ;	956:1:37361:37385	812711	4	True				
ANR	812742	IdentifierDecl	tgt_addr = UT64_MAX		812711	0					
ANR	812743	IdentifierDeclType	ut64		812711	0					
ANR	812744	Identifier	tgt_addr		812711	1					
ANR	812745	AssignmentExpression	tgt_addr = UT64_MAX		812711	2		=			
ANR	812746	Identifier	UT64_MAX		812711	0					
ANR	812747	Identifier	UT64_MAX		812711	1					
ANR	812748	IfStatement	if ( use_json )		812711	5					
ANR	812749	Condition	use_json	958:5:37393:37400	812711	0	True				
ANR	812750	Identifier	use_json		812711	0					
ANR	812751	CompoundStatement		8:15:116:116	812711	1					
ANR	812752	ExpressionStatement	pj = pj_new ( )	959:2:37407:37421	812711	0	True				
ANR	812753	AssignmentExpression	pj = pj_new ( )		812711	0		=			
ANR	812754	Identifier	pj		812711	0					
ANR	812755	CallExpression	pj_new ( )		812711	1					
ANR	812756	Callee	pj_new		812711	0					
ANR	812757	Identifier	pj_new		812711	0					
ANR	812758	ArgumentList			812711	1					
ANR	812759	ExpressionStatement	pj_a ( pj )	960:2:37425:37434	812711	1	True				
ANR	812760	CallExpression	pj_a ( pj )		812711	0					
ANR	812761	Callee	pj_a		812711	0					
ANR	812762	Identifier	pj_a		812711	0					
ANR	812763	ArgumentList	pj		812711	1					
ANR	812764	Argument	pj		812711	0					
ANR	812765	Identifier	pj		812711	0					
ANR	812766	ExpressionStatement	"r_anal_op ( core -> anal , & op , off , core -> block + off - core -> offset , 32 , R_ANAL_OP_MASK_BASIC )"	963:1:37441:37536	812711	6	True				
ANR	812767	CallExpression	"r_anal_op ( core -> anal , & op , off , core -> block + off - core -> offset , 32 , R_ANAL_OP_MASK_BASIC )"		812711	0					
ANR	812768	Callee	r_anal_op		812711	0					
ANR	812769	Identifier	r_anal_op		812711	0					
ANR	812770	ArgumentList	core -> anal		812711	1					
ANR	812771	Argument	core -> anal		812711	0					
ANR	812772	PtrMemberAccess	core -> anal		812711	0					
ANR	812773	Identifier	core		812711	0					
ANR	812774	Identifier	anal		812711	1					
ANR	812775	Argument	& op		812711	1					
ANR	812776	UnaryOperationExpression	& op		812711	0					
ANR	812777	UnaryOperator	&		812711	0					
ANR	812778	Identifier	op		812711	1					
ANR	812779	Argument	off		812711	2					
ANR	812780	Identifier	off		812711	0					
ANR	812781	Argument	core -> block + off - core -> offset		812711	3					
ANR	812782	AdditiveExpression	core -> block + off - core -> offset		812711	0		+			
ANR	812783	PtrMemberAccess	core -> block		812711	0					
ANR	812784	Identifier	core		812711	0					
ANR	812785	Identifier	block		812711	1					
ANR	812786	AdditiveExpression	off - core -> offset		812711	1		-			
ANR	812787	Identifier	off		812711	0					
ANR	812788	PtrMemberAccess	core -> offset		812711	1					
ANR	812789	Identifier	core		812711	0					
ANR	812790	Identifier	offset		812711	1					
ANR	812791	Argument	32		812711	4					
ANR	812792	PrimaryExpression	32		812711	0					
ANR	812793	Argument	R_ANAL_OP_MASK_BASIC		812711	5					
ANR	812794	Identifier	R_ANAL_OP_MASK_BASIC		812711	0					
ANR	812795	ExpressionStatement	tgt_addr = op . jump != UT64_MAX ? op . jump : op . ptr	966:1:37540:37589	812711	7	True				
ANR	812796	AssignmentExpression	tgt_addr = op . jump != UT64_MAX ? op . jump : op . ptr		812711	0		=			
ANR	812797	Identifier	tgt_addr		812711	0					
ANR	812798	ConditionalExpression	op . jump != UT64_MAX ? op . jump : op . ptr		812711	1					
ANR	812799	Condition	op . jump != UT64_MAX		812711	0					
ANR	812800	EqualityExpression	op . jump != UT64_MAX		812711	0		!=			
ANR	812801	MemberAccess	op . jump		812711	0					
ANR	812802	Identifier	op		812711	0					
ANR	812803	Identifier	jump		812711	1					
ANR	812804	Identifier	UT64_MAX		812711	1					
ANR	812805	MemberAccess	op . jump		812711	1					
ANR	812806	Identifier	op		812711	0					
ANR	812807	Identifier	jump		812711	1					
ANR	812808	MemberAccess	op . ptr		812711	2					
ANR	812809	Identifier	op		812711	0					
ANR	812810	Identifier	ptr		812711	1					
ANR	812811	IfStatement	if ( op . var )		812711	8					
ANR	812812	Condition	op . var	967:5:37596:37601	812711	0	True				
ANR	812813	MemberAccess	op . var		812711	0					
ANR	812814	Identifier	op		812711	0					
ANR	812815	Identifier	var		812711	1					
ANR	812816	CompoundStatement		18:2:321:380	812711	1					
ANR	812817	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , off , 0 ) ;"	968:2:37608:37667	812711	0	True				
ANR	812818	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , off , 0 )"		812711	0					
ANR	812819	IdentifierDeclType	RAnalFunction *		812711	0					
ANR	812820	Identifier	fcn		812711	1					
ANR	812821	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , off , 0 )"		812711	2		=			
ANR	812822	Identifier	fcn		812711	0					
ANR	812823	CallExpression	"r_anal_get_fcn_in ( core -> anal , off , 0 )"		812711	1					
ANR	812824	Callee	r_anal_get_fcn_in		812711	0					
ANR	812825	Identifier	r_anal_get_fcn_in		812711	0					
ANR	812826	ArgumentList	core -> anal		812711	1					
ANR	812827	Argument	core -> anal		812711	0					
ANR	812828	PtrMemberAccess	core -> anal		812711	0					
ANR	812829	Identifier	core		812711	0					
ANR	812830	Identifier	anal		812711	1					
ANR	812831	Argument	off		812711	1					
ANR	812832	Identifier	off		812711	0					
ANR	812833	Argument	0		812711	2					
ANR	812834	PrimaryExpression	0		812711	0					
ANR	812835	IfStatement	if ( fcn )		812711	1					
ANR	812836	Condition	fcn	969:6:37675:37677	812711	0	True				
ANR	812837	Identifier	fcn		812711	0					
ANR	812838	CompoundStatement		20:3:398:473	812711	1					
ANR	812839	IdentifierDeclStatement	"RAnalVar * bar = r_anal_var_get_byname ( core -> anal , fcn -> addr , op . var -> name ) ;"	970:3:37685:37760	812711	0	True				
ANR	812840	IdentifierDecl	"* bar = r_anal_var_get_byname ( core -> anal , fcn -> addr , op . var -> name )"		812711	0					
ANR	812841	IdentifierDeclType	RAnalVar *		812711	0					
ANR	812842	Identifier	bar		812711	1					
ANR	812843	AssignmentExpression	"* bar = r_anal_var_get_byname ( core -> anal , fcn -> addr , op . var -> name )"		812711	2		=			
ANR	812844	Identifier	bar		812711	0					
ANR	812845	CallExpression	"r_anal_var_get_byname ( core -> anal , fcn -> addr , op . var -> name )"		812711	1					
ANR	812846	Callee	r_anal_var_get_byname		812711	0					
ANR	812847	Identifier	r_anal_var_get_byname		812711	0					
ANR	812848	ArgumentList	core -> anal		812711	1					
ANR	812849	Argument	core -> anal		812711	0					
ANR	812850	PtrMemberAccess	core -> anal		812711	0					
ANR	812851	Identifier	core		812711	0					
ANR	812852	Identifier	anal		812711	1					
ANR	812853	Argument	fcn -> addr		812711	1					
ANR	812854	PtrMemberAccess	fcn -> addr		812711	0					
ANR	812855	Identifier	fcn		812711	0					
ANR	812856	Identifier	addr		812711	1					
ANR	812857	Argument	op . var -> name		812711	2					
ANR	812858	PtrMemberAccess	op . var -> name		812711	0					
ANR	812859	MemberAccess	op . var		812711	0					
ANR	812860	Identifier	op		812711	0					
ANR	812861	Identifier	var		812711	1					
ANR	812862	Identifier	name		812711	1					
ANR	812863	IfStatement	if ( bar )		812711	1					
ANR	812864	Condition	bar	971:7:37769:37771	812711	0	True				
ANR	812865	Identifier	bar		812711	0					
ANR	812866	CompoundStatement		21:12:487:487	812711	1					
ANR	812867	IfStatement	if ( name )		812711	0					
ANR	812868	Condition	name	972:8:37784:37787	812711	0	True				
ANR	812869	Identifier	name		812711	0					
ANR	812870	CompoundStatement		22:14:503:503	812711	1					
ANR	812871	ExpressionStatement	"r_anal_var_rename ( core -> anal , fcn -> addr , bar -> scope , bar -> kind , bar -> name , name , true )"	973:5:37797:37893	812711	0	True				
ANR	812872	CallExpression	"r_anal_var_rename ( core -> anal , fcn -> addr , bar -> scope , bar -> kind , bar -> name , name , true )"		812711	0					
ANR	812873	Callee	r_anal_var_rename		812711	0					
ANR	812874	Identifier	r_anal_var_rename		812711	0					
ANR	812875	ArgumentList	core -> anal		812711	1					
ANR	812876	Argument	core -> anal		812711	0					
ANR	812877	PtrMemberAccess	core -> anal		812711	0					
ANR	812878	Identifier	core		812711	0					
ANR	812879	Identifier	anal		812711	1					
ANR	812880	Argument	fcn -> addr		812711	1					
ANR	812881	PtrMemberAccess	fcn -> addr		812711	0					
ANR	812882	Identifier	fcn		812711	0					
ANR	812883	Identifier	addr		812711	1					
ANR	812884	Argument	bar -> scope		812711	2					
ANR	812885	PtrMemberAccess	bar -> scope		812711	0					
ANR	812886	Identifier	bar		812711	0					
ANR	812887	Identifier	scope		812711	1					
ANR	812888	Argument	bar -> kind		812711	3					
ANR	812889	PtrMemberAccess	bar -> kind		812711	0					
ANR	812890	Identifier	bar		812711	0					
ANR	812891	Identifier	kind		812711	1					
ANR	812892	Argument	bar -> name		812711	4					
ANR	812893	PtrMemberAccess	bar -> name		812711	0					
ANR	812894	Identifier	bar		812711	0					
ANR	812895	Identifier	name		812711	1					
ANR	812896	Argument	name		812711	5					
ANR	812897	Identifier	name		812711	0					
ANR	812898	Argument	true		812711	6					
ANR	812899	Identifier	true		812711	0					
ANR	812900	ElseStatement	else		812711	0					
ANR	812901	IfStatement	if ( ! use_json )		812711	0					
ANR	812902	Condition	! use_json	975:15:37910:37918	812711	0	True				
ANR	812903	UnaryOperationExpression	! use_json		812711	0					
ANR	812904	UnaryOperator	!		812711	0					
ANR	812905	Identifier	use_json		812711	1					
ANR	812906	CompoundStatement		25:26:634:634	812711	1					
ANR	812907	ExpressionStatement	r_cons_println ( bar -> name )	976:5:37928:37954	812711	0	True				
ANR	812908	CallExpression	r_cons_println ( bar -> name )		812711	0					
ANR	812909	Callee	r_cons_println		812711	0					
ANR	812910	Identifier	r_cons_println		812711	0					
ANR	812911	ArgumentList	bar -> name		812711	1					
ANR	812912	Argument	bar -> name		812711	0					
ANR	812913	PtrMemberAccess	bar -> name		812711	0					
ANR	812914	Identifier	bar		812711	0					
ANR	812915	Identifier	name		812711	1					
ANR	812916	ElseStatement	else		812711	0					
ANR	812917	CompoundStatement		27:11:680:680	812711	0					
ANR	812918	ExpressionStatement	pj_o ( pj )	978:5:37974:37983	812711	0	True				
ANR	812919	CallExpression	pj_o ( pj )		812711	0					
ANR	812920	Callee	pj_o		812711	0					
ANR	812921	Identifier	pj_o		812711	0					
ANR	812922	ArgumentList	pj		812711	1					
ANR	812923	Argument	pj		812711	0					
ANR	812924	Identifier	pj		812711	0					
ANR	812925	ExpressionStatement	"pj_ks ( pj , ""name"" , bar -> name )"	979:5:37990:38019	812711	1	True				
ANR	812926	CallExpression	"pj_ks ( pj , ""name"" , bar -> name )"		812711	0					
ANR	812927	Callee	pj_ks		812711	0					
ANR	812928	Identifier	pj_ks		812711	0					
ANR	812929	ArgumentList	pj		812711	1					
ANR	812930	Argument	pj		812711	0					
ANR	812931	Identifier	pj		812711	0					
ANR	812932	Argument	"""name"""		812711	1					
ANR	812933	PrimaryExpression	"""name"""		812711	0					
ANR	812934	Argument	bar -> name		812711	2					
ANR	812935	PtrMemberAccess	bar -> name		812711	0					
ANR	812936	Identifier	bar		812711	0					
ANR	812937	Identifier	name		812711	1					
ANR	812938	ExpressionStatement	"pj_ks ( pj , ""type"" , ""var"" )"	980:5:38026:38051	812711	2	True				
ANR	812939	CallExpression	"pj_ks ( pj , ""type"" , ""var"" )"		812711	0					
ANR	812940	Callee	pj_ks		812711	0					
ANR	812941	Identifier	pj_ks		812711	0					
ANR	812942	ArgumentList	pj		812711	1					
ANR	812943	Argument	pj		812711	0					
ANR	812944	Identifier	pj		812711	0					
ANR	812945	Argument	"""type"""		812711	1					
ANR	812946	PrimaryExpression	"""type"""		812711	0					
ANR	812947	Argument	"""var"""		812711	2					
ANR	812948	PrimaryExpression	"""var"""		812711	0					
ANR	812949	ExpressionStatement	"pj_kn ( pj , ""offset"" , tgt_addr )"	981:5:38058:38088	812711	3	True				
ANR	812950	CallExpression	"pj_kn ( pj , ""offset"" , tgt_addr )"		812711	0					
ANR	812951	Callee	pj_kn		812711	0					
ANR	812952	Identifier	pj_kn		812711	0					
ANR	812953	ArgumentList	pj		812711	1					
ANR	812954	Argument	pj		812711	0					
ANR	812955	Identifier	pj		812711	0					
ANR	812956	Argument	"""offset"""		812711	1					
ANR	812957	PrimaryExpression	"""offset"""		812711	0					
ANR	812958	Argument	tgt_addr		812711	2					
ANR	812959	Identifier	tgt_addr		812711	0					
ANR	812960	ExpressionStatement	pj_end ( pj )	982:5:38095:38106	812711	4	True				
ANR	812961	CallExpression	pj_end ( pj )		812711	0					
ANR	812962	Callee	pj_end		812711	0					
ANR	812963	Identifier	pj_end		812711	0					
ANR	812964	ArgumentList	pj		812711	1					
ANR	812965	Argument	pj		812711	0					
ANR	812966	Identifier	pj		812711	0					
ANR	812967	ElseStatement	else		812711	0					
ANR	812968	CompoundStatement		34:10:837:837	812711	0					
ANR	812969	ExpressionStatement	"eprintf ( ""Cannot find variable\\n"" )"	985:4:38130:38164	812711	0	True				
ANR	812970	CallExpression	"eprintf ( ""Cannot find variable\\n"" )"		812711	0					
ANR	812971	Callee	eprintf		812711	0					
ANR	812972	Identifier	eprintf		812711	0					
ANR	812973	ArgumentList	"""Cannot find variable\\n"""		812711	1					
ANR	812974	Argument	"""Cannot find variable\\n"""		812711	0					
ANR	812975	PrimaryExpression	"""Cannot find variable\\n"""		812711	0					
ANR	812976	ElseStatement	else		812711	0					
ANR	812977	CompoundStatement		37:9:893:893	812711	0					
ANR	812978	ExpressionStatement	"eprintf ( ""Cannot find function\\n"" )"	988:3:38185:38219	812711	0	True				
ANR	812979	CallExpression	"eprintf ( ""Cannot find function\\n"" )"		812711	0					
ANR	812980	Callee	eprintf		812711	0					
ANR	812981	Identifier	eprintf		812711	0					
ANR	812982	ArgumentList	"""Cannot find function\\n"""		812711	1					
ANR	812983	Argument	"""Cannot find function\\n"""		812711	0					
ANR	812984	PrimaryExpression	"""Cannot find function\\n"""		812711	0					
ANR	812985	ElseStatement	else		812711	0					
ANR	812986	IfStatement	if ( tgt_addr != UT64_MAX )		812711	0					
ANR	812987	Condition	tgt_addr != UT64_MAX	990:12:38237:38256	812711	0	True				
ANR	812988	EqualityExpression	tgt_addr != UT64_MAX		812711	0		!=			
ANR	812989	Identifier	tgt_addr		812711	0					
ANR	812990	Identifier	UT64_MAX		812711	1					
ANR	812991	CompoundStatement		42:2:1063:1114	812711	1					
ANR	812992	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_at ( core -> anal , tgt_addr , R_ANAL_FCN_TYPE_NULL ) ;"	991:2:38263:38346	812711	0	True				
ANR	812993	IdentifierDecl	"* fcn = r_anal_get_fcn_at ( core -> anal , tgt_addr , R_ANAL_FCN_TYPE_NULL )"		812711	0					
ANR	812994	IdentifierDeclType	RAnalFunction *		812711	0					
ANR	812995	Identifier	fcn		812711	1					
ANR	812996	AssignmentExpression	"* fcn = r_anal_get_fcn_at ( core -> anal , tgt_addr , R_ANAL_FCN_TYPE_NULL )"		812711	2		=			
ANR	812997	Identifier	fcn		812711	0					
ANR	812998	CallExpression	"r_anal_get_fcn_at ( core -> anal , tgt_addr , R_ANAL_FCN_TYPE_NULL )"		812711	1					
ANR	812999	Callee	r_anal_get_fcn_at		812711	0					
ANR	813000	Identifier	r_anal_get_fcn_at		812711	0					
ANR	813001	ArgumentList	core -> anal		812711	1					
ANR	813002	Argument	core -> anal		812711	0					
ANR	813003	PtrMemberAccess	core -> anal		812711	0					
ANR	813004	Identifier	core		812711	0					
ANR	813005	Identifier	anal		812711	1					
ANR	813006	Argument	tgt_addr		812711	1					
ANR	813007	Identifier	tgt_addr		812711	0					
ANR	813008	Argument	R_ANAL_FCN_TYPE_NULL		812711	2					
ANR	813009	Identifier	R_ANAL_FCN_TYPE_NULL		812711	0					
ANR	813010	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_i ( core -> flags , tgt_addr ) ;"	992:2:38350:38401	812711	1	True				
ANR	813011	IdentifierDecl	"* f = r_flag_get_i ( core -> flags , tgt_addr )"		812711	0					
ANR	813012	IdentifierDeclType	RFlagItem *		812711	0					
ANR	813013	Identifier	f		812711	1					
ANR	813014	AssignmentExpression	"* f = r_flag_get_i ( core -> flags , tgt_addr )"		812711	2		=			
ANR	813015	Identifier	f		812711	0					
ANR	813016	CallExpression	"r_flag_get_i ( core -> flags , tgt_addr )"		812711	1					
ANR	813017	Callee	r_flag_get_i		812711	0					
ANR	813018	Identifier	r_flag_get_i		812711	0					
ANR	813019	ArgumentList	core -> flags		812711	1					
ANR	813020	Argument	core -> flags		812711	0					
ANR	813021	PtrMemberAccess	core -> flags		812711	0					
ANR	813022	Identifier	core		812711	0					
ANR	813023	Identifier	flags		812711	1					
ANR	813024	Argument	tgt_addr		812711	1					
ANR	813025	Identifier	tgt_addr		812711	0					
ANR	813026	IfStatement	if ( fcn )		812711	2					
ANR	813027	Condition	fcn	993:6:38409:38411	812711	0	True				
ANR	813028	Identifier	fcn		812711	0					
ANR	813029	CompoundStatement		43:11:1127:1127	812711	1					
ANR	813030	IfStatement	if ( name )		812711	0					
ANR	813031	Condition	name	994:7:38423:38426	812711	0	True				
ANR	813032	Identifier	name		812711	0					
ANR	813033	CompoundStatement		44:13:1142:1142	812711	1					
ANR	813034	Statement	q	995:4:38435:38435	812711	0	True				
ANR	813035	Statement	=	995:6:38437:38437	812711	1	True				
ANR	813036	Statement	r_str_newf	995:8:38439:38448	812711	2	True				
ANR	813037	Statement	(	995:19:38450:38450	812711	3	True				
ANR	813038	Statement	"""afn %s 0x%"""	995:20:38451:38462	812711	4	True				
ANR	813039	Statement	PFMT64x	995:32:38463:38469	812711	5	True				
ANR	813040	Statement	","	995:39:38470:38470	812711	6	True				
ANR	813041	Statement	name	995:41:38472:38475	812711	7	True				
ANR	813042	Statement	","	995:45:38476:38476	812711	8	True				
ANR	813043	Statement	tgt_addr	995:47:38478:38485	812711	9	True				
ANR	813044	Statement	)	995:55:38486:38486	812711	10	True				
ANR	813045	ExpressionStatement		995:56:38487:38487	812711	11	True				
ANR	813046	ElseStatement	else		812711	0					
ANR	813047	IfStatement	if ( ! use_json )		812711	0					
ANR	813048	Condition	! use_json	996:14:38503:38511	812711	0	True				
ANR	813049	UnaryOperationExpression	! use_json		812711	0					
ANR	813050	UnaryOperator	!		812711	0					
ANR	813051	Identifier	use_json		812711	1					
ANR	813052	CompoundStatement		46:25:1227:1227	812711	1					
ANR	813053	ExpressionStatement	r_cons_println ( fcn -> name )	997:4:38520:38546	812711	0	True				
ANR	813054	CallExpression	r_cons_println ( fcn -> name )		812711	0					
ANR	813055	Callee	r_cons_println		812711	0					
ANR	813056	Identifier	r_cons_println		812711	0					
ANR	813057	ArgumentList	fcn -> name		812711	1					
ANR	813058	Argument	fcn -> name		812711	0					
ANR	813059	PtrMemberAccess	fcn -> name		812711	0					
ANR	813060	Identifier	fcn		812711	0					
ANR	813061	Identifier	name		812711	1					
ANR	813062	ElseStatement	else		812711	0					
ANR	813063	CompoundStatement		48:10:1271:1271	812711	0					
ANR	813064	ExpressionStatement	pj_o ( pj )	999:4:38564:38573	812711	0	True				
ANR	813065	CallExpression	pj_o ( pj )		812711	0					
ANR	813066	Callee	pj_o		812711	0					
ANR	813067	Identifier	pj_o		812711	0					
ANR	813068	ArgumentList	pj		812711	1					
ANR	813069	Argument	pj		812711	0					
ANR	813070	Identifier	pj		812711	0					
ANR	813071	ExpressionStatement	"pj_ks ( pj , ""name"" , fcn -> name )"	1000:4:38579:38608	812711	1	True				
ANR	813072	CallExpression	"pj_ks ( pj , ""name"" , fcn -> name )"		812711	0					
ANR	813073	Callee	pj_ks		812711	0					
ANR	813074	Identifier	pj_ks		812711	0					
ANR	813075	ArgumentList	pj		812711	1					
ANR	813076	Argument	pj		812711	0					
ANR	813077	Identifier	pj		812711	0					
ANR	813078	Argument	"""name"""		812711	1					
ANR	813079	PrimaryExpression	"""name"""		812711	0					
ANR	813080	Argument	fcn -> name		812711	2					
ANR	813081	PtrMemberAccess	fcn -> name		812711	0					
ANR	813082	Identifier	fcn		812711	0					
ANR	813083	Identifier	name		812711	1					
ANR	813084	ExpressionStatement	"pj_ks ( pj , ""type"" , ""function"" )"	1001:4:38614:38644	812711	2	True				
ANR	813085	CallExpression	"pj_ks ( pj , ""type"" , ""function"" )"		812711	0					
ANR	813086	Callee	pj_ks		812711	0					
ANR	813087	Identifier	pj_ks		812711	0					
ANR	813088	ArgumentList	pj		812711	1					
ANR	813089	Argument	pj		812711	0					
ANR	813090	Identifier	pj		812711	0					
ANR	813091	Argument	"""type"""		812711	1					
ANR	813092	PrimaryExpression	"""type"""		812711	0					
ANR	813093	Argument	"""function"""		812711	2					
ANR	813094	PrimaryExpression	"""function"""		812711	0					
ANR	813095	ExpressionStatement	"pj_kn ( pj , ""offset"" , tgt_addr )"	1002:4:38650:38680	812711	3	True				
ANR	813096	CallExpression	"pj_kn ( pj , ""offset"" , tgt_addr )"		812711	0					
ANR	813097	Callee	pj_kn		812711	0					
ANR	813098	Identifier	pj_kn		812711	0					
ANR	813099	ArgumentList	pj		812711	1					
ANR	813100	Argument	pj		812711	0					
ANR	813101	Identifier	pj		812711	0					
ANR	813102	Argument	"""offset"""		812711	1					
ANR	813103	PrimaryExpression	"""offset"""		812711	0					
ANR	813104	Argument	tgt_addr		812711	2					
ANR	813105	Identifier	tgt_addr		812711	0					
ANR	813106	ExpressionStatement	pj_end ( pj )	1003:4:38686:38697	812711	4	True				
ANR	813107	CallExpression	pj_end ( pj )		812711	0					
ANR	813108	Callee	pj_end		812711	0					
ANR	813109	Identifier	pj_end		812711	0					
ANR	813110	ArgumentList	pj		812711	1					
ANR	813111	Argument	pj		812711	0					
ANR	813112	Identifier	pj		812711	0					
ANR	813113	ElseStatement	else		812711	0					
ANR	813114	IfStatement	if ( f )		812711	0					
ANR	813115	Condition	f	1005:13:38717:38717	812711	0	True				
ANR	813116	Identifier	f		812711	0					
ANR	813117	CompoundStatement		55:16:1433:1433	812711	1					
ANR	813118	IfStatement	if ( name )		812711	0					
ANR	813119	Condition	name	1006:7:38729:38732	812711	0	True				
ANR	813120	Identifier	name		812711	0					
ANR	813121	CompoundStatement		56:13:1448:1448	812711	1					
ANR	813122	ExpressionStatement	"q = r_str_newf ( ""fr %s %s"" , f -> name , name )"	1007:4:38741:38783	812711	0	True				
ANR	813123	AssignmentExpression	"q = r_str_newf ( ""fr %s %s"" , f -> name , name )"		812711	0		=			
ANR	813124	Identifier	q		812711	0					
ANR	813125	CallExpression	"r_str_newf ( ""fr %s %s"" , f -> name , name )"		812711	1					
ANR	813126	Callee	r_str_newf		812711	0					
ANR	813127	Identifier	r_str_newf		812711	0					
ANR	813128	ArgumentList	"""fr %s %s"""		812711	1					
ANR	813129	Argument	"""fr %s %s"""		812711	0					
ANR	813130	PrimaryExpression	"""fr %s %s"""		812711	0					
ANR	813131	Argument	f -> name		812711	1					
ANR	813132	PtrMemberAccess	f -> name		812711	0					
ANR	813133	Identifier	f		812711	0					
ANR	813134	Identifier	name		812711	1					
ANR	813135	Argument	name		812711	2					
ANR	813136	Identifier	name		812711	0					
ANR	813137	ElseStatement	else		812711	0					
ANR	813138	IfStatement	if ( ! use_json )		812711	0					
ANR	813139	Condition	! use_json	1008:14:38799:38807	812711	0	True				
ANR	813140	UnaryOperationExpression	! use_json		812711	0					
ANR	813141	UnaryOperator	!		812711	0					
ANR	813142	Identifier	use_json		812711	1					
ANR	813143	CompoundStatement		58:25:1523:1523	812711	1					
ANR	813144	ExpressionStatement	r_cons_println ( f -> name )	1009:4:38816:38840	812711	0	True				
ANR	813145	CallExpression	r_cons_println ( f -> name )		812711	0					
ANR	813146	Callee	r_cons_println		812711	0					
ANR	813147	Identifier	r_cons_println		812711	0					
ANR	813148	ArgumentList	f -> name		812711	1					
ANR	813149	Argument	f -> name		812711	0					
ANR	813150	PtrMemberAccess	f -> name		812711	0					
ANR	813151	Identifier	f		812711	0					
ANR	813152	Identifier	name		812711	1					
ANR	813153	ElseStatement	else		812711	0					
ANR	813154	CompoundStatement		60:10:1565:1565	812711	0					
ANR	813155	ExpressionStatement	pj_o ( pj )	1011:4:38858:38867	812711	0	True				
ANR	813156	CallExpression	pj_o ( pj )		812711	0					
ANR	813157	Callee	pj_o		812711	0					
ANR	813158	Identifier	pj_o		812711	0					
ANR	813159	ArgumentList	pj		812711	1					
ANR	813160	Argument	pj		812711	0					
ANR	813161	Identifier	pj		812711	0					
ANR	813162	IfStatement	if ( name )		812711	1					
ANR	813163	Condition	name	1012:8:38877:38880	812711	0	True				
ANR	813164	Identifier	name		812711	0					
ANR	813165	CompoundStatement		62:14:1596:1596	812711	1					
ANR	813166	ExpressionStatement	"pj_ks ( pj , ""old_name"" , f -> name )"	1013:5:38890:38921	812711	0	True				
ANR	813167	CallExpression	"pj_ks ( pj , ""old_name"" , f -> name )"		812711	0					
ANR	813168	Callee	pj_ks		812711	0					
ANR	813169	Identifier	pj_ks		812711	0					
ANR	813170	ArgumentList	pj		812711	1					
ANR	813171	Argument	pj		812711	0					
ANR	813172	Identifier	pj		812711	0					
ANR	813173	Argument	"""old_name"""		812711	1					
ANR	813174	PrimaryExpression	"""old_name"""		812711	0					
ANR	813175	Argument	f -> name		812711	2					
ANR	813176	PtrMemberAccess	f -> name		812711	0					
ANR	813177	Identifier	f		812711	0					
ANR	813178	Identifier	name		812711	1					
ANR	813179	ExpressionStatement	"pj_ks ( pj , ""new_name"" , name )"	1014:5:38928:38956	812711	1	True				
ANR	813180	CallExpression	"pj_ks ( pj , ""new_name"" , name )"		812711	0					
ANR	813181	Callee	pj_ks		812711	0					
ANR	813182	Identifier	pj_ks		812711	0					
ANR	813183	ArgumentList	pj		812711	1					
ANR	813184	Argument	pj		812711	0					
ANR	813185	Identifier	pj		812711	0					
ANR	813186	Argument	"""new_name"""		812711	1					
ANR	813187	PrimaryExpression	"""new_name"""		812711	0					
ANR	813188	Argument	name		812711	2					
ANR	813189	Identifier	name		812711	0					
ANR	813190	ElseStatement	else		812711	0					
ANR	813191	CompoundStatement		65:11:1682:1682	812711	0					
ANR	813192	ExpressionStatement	"pj_ks ( pj , ""name"" , f -> name )"	1016:5:38976:39003	812711	0	True				
ANR	813193	CallExpression	"pj_ks ( pj , ""name"" , f -> name )"		812711	0					
ANR	813194	Callee	pj_ks		812711	0					
ANR	813195	Identifier	pj_ks		812711	0					
ANR	813196	ArgumentList	pj		812711	1					
ANR	813197	Argument	pj		812711	0					
ANR	813198	Identifier	pj		812711	0					
ANR	813199	Argument	"""name"""		812711	1					
ANR	813200	PrimaryExpression	"""name"""		812711	0					
ANR	813201	Argument	f -> name		812711	2					
ANR	813202	PtrMemberAccess	f -> name		812711	0					
ANR	813203	Identifier	f		812711	0					
ANR	813204	Identifier	name		812711	1					
ANR	813205	ExpressionStatement	"pj_ks ( pj , ""type"" , ""flag"" )"	1018:4:39015:39041	812711	2	True				
ANR	813206	CallExpression	"pj_ks ( pj , ""type"" , ""flag"" )"		812711	0					
ANR	813207	Callee	pj_ks		812711	0					
ANR	813208	Identifier	pj_ks		812711	0					
ANR	813209	ArgumentList	pj		812711	1					
ANR	813210	Argument	pj		812711	0					
ANR	813211	Identifier	pj		812711	0					
ANR	813212	Argument	"""type"""		812711	1					
ANR	813213	PrimaryExpression	"""type"""		812711	0					
ANR	813214	Argument	"""flag"""		812711	2					
ANR	813215	PrimaryExpression	"""flag"""		812711	0					
ANR	813216	ExpressionStatement	"pj_kn ( pj , ""offset"" , tgt_addr )"	1019:4:39047:39077	812711	3	True				
ANR	813217	CallExpression	"pj_kn ( pj , ""offset"" , tgt_addr )"		812711	0					
ANR	813218	Callee	pj_kn		812711	0					
ANR	813219	Identifier	pj_kn		812711	0					
ANR	813220	ArgumentList	pj		812711	1					
ANR	813221	Argument	pj		812711	0					
ANR	813222	Identifier	pj		812711	0					
ANR	813223	Argument	"""offset"""		812711	1					
ANR	813224	PrimaryExpression	"""offset"""		812711	0					
ANR	813225	Argument	tgt_addr		812711	2					
ANR	813226	Identifier	tgt_addr		812711	0					
ANR	813227	ExpressionStatement	pj_end ( pj )	1020:4:39083:39094	812711	4	True				
ANR	813228	CallExpression	pj_end ( pj )		812711	0					
ANR	813229	Callee	pj_end		812711	0					
ANR	813230	Identifier	pj_end		812711	0					
ANR	813231	ArgumentList	pj		812711	1					
ANR	813232	Argument	pj		812711	0					
ANR	813233	Identifier	pj		812711	0					
ANR	813234	ElseStatement	else		812711	0					
ANR	813235	CompoundStatement		72:9:1823:1823	812711	0					
ANR	813236	IfStatement	if ( name )		812711	0					
ANR	813237	Condition	name	1023:7:39119:39122	812711	0	True				
ANR	813238	Identifier	name		812711	0					
ANR	813239	CompoundStatement		73:13:1838:1838	812711	1					
ANR	813240	Statement	q	1024:4:39131:39131	812711	0	True				
ANR	813241	Statement	=	1024:6:39133:39133	812711	1	True				
ANR	813242	Statement	r_str_newf	1024:8:39135:39144	812711	2	True				
ANR	813243	Statement	(	1024:19:39146:39146	812711	3	True				
ANR	813244	Statement	"""f %s @ 0x%"""	1024:20:39147:39158	812711	4	True				
ANR	813245	Statement	PFMT64x	1024:32:39159:39165	812711	5	True				
ANR	813246	Statement	","	1024:39:39166:39166	812711	6	True				
ANR	813247	Statement	name	1024:41:39168:39171	812711	7	True				
ANR	813248	Statement	","	1024:45:39172:39172	812711	8	True				
ANR	813249	Statement	tgt_addr	1024:47:39174:39181	812711	9	True				
ANR	813250	Statement	)	1024:55:39182:39182	812711	10	True				
ANR	813251	ExpressionStatement		1024:56:39183:39183	812711	11	True				
ANR	813252	ElseStatement	else		812711	0					
ANR	813253	IfStatement	if ( ! use_json )		812711	0					
ANR	813254	Condition	! use_json	1025:14:39199:39207	812711	0	True				
ANR	813255	UnaryOperationExpression	! use_json		812711	0					
ANR	813256	UnaryOperator	!		812711	0					
ANR	813257	Identifier	use_json		812711	1					
ANR	813258	CompoundStatement		75:25:1923:1923	812711	1					
ANR	813259	Statement	r_cons_printf	1026:4:39216:39228	812711	0	True				
ANR	813260	Statement	(	1026:18:39230:39230	812711	1	True				
ANR	813261	Statement	"""0x%"""	1026:19:39231:39235	812711	2	True				
ANR	813262	Statement	PFMT64x	1026:25:39237:39243	812711	3	True				
ANR	813263	Statement	"""\\n"""	1026:33:39245:39248	812711	4	True				
ANR	813264	Statement	","	1026:37:39249:39249	812711	5	True				
ANR	813265	Statement	tgt_addr	1026:39:39251:39258	812711	6	True				
ANR	813266	Statement	)	1026:47:39259:39259	812711	7	True				
ANR	813267	ExpressionStatement		1026:48:39260:39260	812711	8	True				
ANR	813268	ElseStatement	else		812711	0					
ANR	813269	CompoundStatement		77:10:1985:1985	812711	0					
ANR	813270	ExpressionStatement	pj_o ( pj )	1028:4:39278:39287	812711	0	True				
ANR	813271	CallExpression	pj_o ( pj )		812711	0					
ANR	813272	Callee	pj_o		812711	0					
ANR	813273	Identifier	pj_o		812711	0					
ANR	813274	ArgumentList	pj		812711	1					
ANR	813275	Argument	pj		812711	0					
ANR	813276	Identifier	pj		812711	0					
ANR	813277	ExpressionStatement	"pj_ks ( pj , ""name"" , name )"	1029:4:39293:39317	812711	1	True				
ANR	813278	CallExpression	"pj_ks ( pj , ""name"" , name )"		812711	0					
ANR	813279	Callee	pj_ks		812711	0					
ANR	813280	Identifier	pj_ks		812711	0					
ANR	813281	ArgumentList	pj		812711	1					
ANR	813282	Argument	pj		812711	0					
ANR	813283	Identifier	pj		812711	0					
ANR	813284	Argument	"""name"""		812711	1					
ANR	813285	PrimaryExpression	"""name"""		812711	0					
ANR	813286	Argument	name		812711	2					
ANR	813287	Identifier	name		812711	0					
ANR	813288	ExpressionStatement	"pj_ks ( pj , ""type"" , ""address"" )"	1030:4:39323:39352	812711	2	True				
ANR	813289	CallExpression	"pj_ks ( pj , ""type"" , ""address"" )"		812711	0					
ANR	813290	Callee	pj_ks		812711	0					
ANR	813291	Identifier	pj_ks		812711	0					
ANR	813292	ArgumentList	pj		812711	1					
ANR	813293	Argument	pj		812711	0					
ANR	813294	Identifier	pj		812711	0					
ANR	813295	Argument	"""type"""		812711	1					
ANR	813296	PrimaryExpression	"""type"""		812711	0					
ANR	813297	Argument	"""address"""		812711	2					
ANR	813298	PrimaryExpression	"""address"""		812711	0					
ANR	813299	ExpressionStatement	"pj_kn ( pj , ""offset"" , tgt_addr )"	1031:4:39358:39388	812711	3	True				
ANR	813300	CallExpression	"pj_kn ( pj , ""offset"" , tgt_addr )"		812711	0					
ANR	813301	Callee	pj_kn		812711	0					
ANR	813302	Identifier	pj_kn		812711	0					
ANR	813303	ArgumentList	pj		812711	1					
ANR	813304	Argument	pj		812711	0					
ANR	813305	Identifier	pj		812711	0					
ANR	813306	Argument	"""offset"""		812711	1					
ANR	813307	PrimaryExpression	"""offset"""		812711	0					
ANR	813308	Argument	tgt_addr		812711	2					
ANR	813309	Identifier	tgt_addr		812711	0					
ANR	813310	ExpressionStatement	pj_end ( pj )	1032:4:39394:39405	812711	4	True				
ANR	813311	CallExpression	pj_end ( pj )		812711	0					
ANR	813312	Callee	pj_end		812711	0					
ANR	813313	Identifier	pj_end		812711	0					
ANR	813314	ArgumentList	pj		812711	1					
ANR	813315	Argument	pj		812711	0					
ANR	813316	Identifier	pj		812711	0					
ANR	813317	IfStatement	if ( use_json )		812711	9					
ANR	813318	Condition	use_json	1037:5:39425:39432	812711	0	True				
ANR	813319	Identifier	use_json		812711	0					
ANR	813320	CompoundStatement		87:15:2148:2148	812711	1					
ANR	813321	ExpressionStatement	pj_end ( pj )	1038:2:39439:39450	812711	0	True				
ANR	813322	CallExpression	pj_end ( pj )		812711	0					
ANR	813323	Callee	pj_end		812711	0					
ANR	813324	Identifier	pj_end		812711	0					
ANR	813325	ArgumentList	pj		812711	1					
ANR	813326	Argument	pj		812711	0					
ANR	813327	Identifier	pj		812711	0					
ANR	813328	IfStatement	if ( pj )		812711	10					
ANR	813329	Condition	pj	1041:5:39461:39462	812711	0	True				
ANR	813330	Identifier	pj		812711	0					
ANR	813331	CompoundStatement		91:9:2178:2178	812711	1					
ANR	813332	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	1042:2:39469:39500	812711	0	True				
ANR	813333	CallExpression	r_cons_println ( pj_string ( pj ) )		812711	0					
ANR	813334	Callee	r_cons_println		812711	0					
ANR	813335	Identifier	r_cons_println		812711	0					
ANR	813336	ArgumentList	pj_string ( pj )		812711	1					
ANR	813337	Argument	pj_string ( pj )		812711	0					
ANR	813338	CallExpression	pj_string ( pj )		812711	0					
ANR	813339	Callee	pj_string		812711	0					
ANR	813340	Identifier	pj_string		812711	0					
ANR	813341	ArgumentList	pj		812711	1					
ANR	813342	Argument	pj		812711	0					
ANR	813343	Identifier	pj		812711	0					
ANR	813344	ExpressionStatement	pj_free ( pj )	1043:2:39504:39516	812711	1	True				
ANR	813345	CallExpression	pj_free ( pj )		812711	0					
ANR	813346	Callee	pj_free		812711	0					
ANR	813347	Identifier	pj_free		812711	0					
ANR	813348	ArgumentList	pj		812711	1					
ANR	813349	Argument	pj		812711	0					
ANR	813350	Identifier	pj		812711	0					
ANR	813351	IfStatement	if ( q )		812711	11					
ANR	813352	Condition	q	1046:5:39527:39527	812711	0	True				
ANR	813353	Identifier	q		812711	0					
ANR	813354	CompoundStatement		96:8:2243:2243	812711	1					
ANR	813355	ExpressionStatement	"r_core_cmd0 ( core , q )"	1047:2:39534:39555	812711	0	True				
ANR	813356	CallExpression	"r_core_cmd0 ( core , q )"		812711	0					
ANR	813357	Callee	r_core_cmd0		812711	0					
ANR	813358	Identifier	r_core_cmd0		812711	0					
ANR	813359	ArgumentList	core		812711	1					
ANR	813360	Argument	core		812711	0					
ANR	813361	Identifier	core		812711	0					
ANR	813362	Argument	q		812711	1					
ANR	813363	Identifier	q		812711	0					
ANR	813364	ExpressionStatement	free ( q )	1048:2:39559:39567	812711	1	True				
ANR	813365	CallExpression	free ( q )		812711	0					
ANR	813366	Callee	free		812711	0					
ANR	813367	Identifier	free		812711	0					
ANR	813368	ArgumentList	q		812711	1					
ANR	813369	Argument	q		812711	0					
ANR	813370	Identifier	q		812711	0					
ANR	813371	ExpressionStatement	r_anal_op_fini ( & op )	1050:1:39573:39593	812711	12	True				
ANR	813372	CallExpression	r_anal_op_fini ( & op )		812711	0					
ANR	813373	Callee	r_anal_op_fini		812711	0					
ANR	813374	Identifier	r_anal_op_fini		812711	0					
ANR	813375	ArgumentList	& op		812711	1					
ANR	813376	Argument	& op		812711	0					
ANR	813377	UnaryOperationExpression	& op		812711	0					
ANR	813378	UnaryOperator	&		812711	0					
ANR	813379	Identifier	op		812711	1					
ANR	813380	ReturnStatement	return 0 ;	1051:1:39596:39604	812711	13	True				
ANR	813381	PrimaryExpression	0		812711	0					
ANR	813382	ReturnType	static int		812711	1					
ANR	813383	Identifier	cmd_an		812711	2					
ANR	813384	ParameterList	"RCore * core , bool use_json , const char * name"		812711	3					
ANR	813385	Parameter	RCore * core	950:18:37240:37250	812711	0	True				
ANR	813386	ParameterType	RCore *		812711	0					
ANR	813387	Identifier	core		812711	1					
ANR	813388	Parameter	bool use_json	950:31:37253:37265	812711	1	True				
ANR	813389	ParameterType	bool		812711	0					
ANR	813390	Identifier	use_json		812711	1					
ANR	813391	Parameter	const char * name	950:46:37268:37283	812711	2	True				
ANR	813392	ParameterType	const char *		812711	0					
ANR	813393	Identifier	name		812711	1					
ANR	813394	CFGEntryNode	ENTRY		812711		True				
ANR	813395	CFGExitNode	EXIT		812711		True				
ANR	813396	Symbol	r_anal_get_fcn_at		812711						
ANR	813397	Symbol	* bar		812711						
ANR	813398	Symbol	* op		812711						
ANR	813399	Symbol	* fcn		812711						
ANR	813400	Symbol	pj_string		812711						
ANR	813401	Symbol	fcn -> name		812711						
ANR	813402	Symbol	f -> name		812711						
ANR	813403	Symbol	* op . var		812711						
ANR	813404	Symbol	* core		812711						
ANR	813405	Symbol	core -> offset		812711						
ANR	813406	Symbol	& op		812711						
ANR	813407	Symbol	tgt_addr		812711						
ANR	813408	Symbol	r_str_newf		812711						
ANR	813409	Symbol	R_ANAL_OP_MASK_BASIC		812711						
ANR	813410	Symbol	core -> anal		812711						
ANR	813411	Symbol	r_anal_var_get_byname		812711						
ANR	813412	Symbol	fcn		812711						
ANR	813413	Symbol	bar		812711						
ANR	813414	Symbol	op . jump		812711						
ANR	813415	Symbol	UT64_MAX		812711						
ANR	813416	Symbol	r_flag_get_i		812711						
ANR	813417	Symbol	op		812711						
ANR	813418	Symbol	R_ANAL_FCN_TYPE_NULL		812711						
ANR	813419	Symbol	NULL		812711						
ANR	813420	Symbol	core -> block		812711						
ANR	813421	Symbol	op . var		812711						
ANR	813422	Symbol	f		812711						
ANR	813423	Symbol	core -> flags		812711						
ANR	813424	Symbol	off		812711						
ANR	813425	Symbol	bar -> kind		812711						
ANR	813426	Symbol	* f		812711						
ANR	813427	Symbol	core		812711						
ANR	813428	Symbol	q		812711						
ANR	813429	Symbol	op . ptr		812711						
ANR	813430	Symbol	bar -> scope		812711						
ANR	813431	Symbol	r_anal_get_fcn_in		812711						
ANR	813432	Symbol	bar -> name		812711						
ANR	813433	Symbol	name		812711						
ANR	813434	Symbol	true		812711						
ANR	813435	Symbol	fcn -> addr		812711						
ANR	813436	Symbol	pj		812711						
ANR	813437	Symbol	pj_new		812711						
ANR	813438	Symbol	use_json		812711						
ANR	813439	Symbol	op . var -> name		812711						
ANR	813440	Function	var_cmd	1054:0:39609:46779							
ANR	813441	FunctionDef	"var_cmd (RCore * core , const char * str)"		813440	0					
ANR	813442	CompoundStatement		1054:49:39658:46779	813440	0					
ANR	813443	IdentifierDeclStatement	"int delta , type = * str , res = true ;"	1055:1:39661:39695	813440	0	True				
ANR	813444	IdentifierDecl	delta		813440	0					
ANR	813445	IdentifierDeclType	int		813440	0					
ANR	813446	Identifier	delta		813440	1					
ANR	813447	IdentifierDecl	type = * str		813440	1					
ANR	813448	IdentifierDeclType	int		813440	0					
ANR	813449	Identifier	type		813440	1					
ANR	813450	AssignmentExpression	type = * str		813440	2		=			
ANR	813451	Identifier	type		813440	0					
ANR	813452	UnaryOperationExpression	* str		813440	1					
ANR	813453	UnaryOperator	*		813440	0					
ANR	813454	Identifier	str		813440	1					
ANR	813455	IdentifierDecl	res = true		813440	2					
ANR	813456	IdentifierDeclType	int		813440	0					
ANR	813457	Identifier	res		813440	1					
ANR	813458	AssignmentExpression	res = true		813440	2		=			
ANR	813459	Identifier	true		813440	0					
ANR	813460	Identifier	true		813440	1					
ANR	813461	IdentifierDeclStatement	RAnalVar * v1 ;	1056:1:39698:39710	813440	1	True				
ANR	813462	IdentifierDecl	* v1		813440	0					
ANR	813463	IdentifierDeclType	RAnalVar *		813440	0					
ANR	813464	Identifier	v1		813440	1					
ANR	813465	IfStatement	if ( ! str [ 0 ] )		813440	2					
ANR	813466	Condition	! str [ 0 ]	1057:5:39717:39723	813440	0	True				
ANR	813467	UnaryOperationExpression	! str [ 0 ]		813440	0					
ANR	813468	UnaryOperator	!		813440	0					
ANR	813469	ArrayIndexing	str [ 0 ]		813440	1					
ANR	813470	Identifier	str		813440	0					
ANR	813471	PrimaryExpression	0		813440	1					
ANR	813472	CompoundStatement		4:14:67:67	813440	1					
ANR	813473	ExpressionStatement	"r_core_cmd0 ( core , ""afvs"" )"	1059:2:39741:39767	813440	0	True				
ANR	813474	CallExpression	"r_core_cmd0 ( core , ""afvs"" )"		813440	0					
ANR	813475	Callee	r_core_cmd0		813440	0					
ANR	813476	Identifier	r_core_cmd0		813440	0					
ANR	813477	ArgumentList	core		813440	1					
ANR	813478	Argument	core		813440	0					
ANR	813479	Identifier	core		813440	0					
ANR	813480	Argument	"""afvs"""		813440	1					
ANR	813481	PrimaryExpression	"""afvs"""		813440	0					
ANR	813482	ExpressionStatement	"r_core_cmd0 ( core , ""afvb"" )"	1060:2:39771:39797	813440	1	True				
ANR	813483	CallExpression	"r_core_cmd0 ( core , ""afvb"" )"		813440	0					
ANR	813484	Callee	r_core_cmd0		813440	0					
ANR	813485	Identifier	r_core_cmd0		813440	0					
ANR	813486	ArgumentList	core		813440	1					
ANR	813487	Argument	core		813440	0					
ANR	813488	Identifier	core		813440	0					
ANR	813489	Argument	"""afvb"""		813440	1					
ANR	813490	PrimaryExpression	"""afvb"""		813440	0					
ANR	813491	ExpressionStatement	"r_core_cmd0 ( core , ""afvr"" )"	1061:2:39801:39827	813440	2	True				
ANR	813492	CallExpression	"r_core_cmd0 ( core , ""afvr"" )"		813440	0					
ANR	813493	Callee	r_core_cmd0		813440	0					
ANR	813494	Identifier	r_core_cmd0		813440	0					
ANR	813495	ArgumentList	core		813440	1					
ANR	813496	Argument	core		813440	0					
ANR	813497	Identifier	core		813440	0					
ANR	813498	Argument	"""afvr"""		813440	1					
ANR	813499	PrimaryExpression	"""afvr"""		813440	0					
ANR	813500	ReturnStatement	return true ;	1062:2:39831:39842	813440	3	True				
ANR	813501	Identifier	true		813440	0					
ANR	813502	IfStatement	if ( ! str [ 0 ] || str [ 1 ] == '?' || str [ 0 ] == '?' )		813440	3					
ANR	813503	Condition	! str [ 0 ] || str [ 1 ] == '?' || str [ 0 ] == '?'	1064:5:39852:39891	813440	0	True				
ANR	813504	OrExpression	! str [ 0 ] || str [ 1 ] == '?' || str [ 0 ] == '?'		813440	0		||			
ANR	813505	UnaryOperationExpression	! str [ 0 ]		813440	0					
ANR	813506	UnaryOperator	!		813440	0					
ANR	813507	ArrayIndexing	str [ 0 ]		813440	1					
ANR	813508	Identifier	str		813440	0					
ANR	813509	PrimaryExpression	0		813440	1					
ANR	813510	OrExpression	str [ 1 ] == '?' || str [ 0 ] == '?'		813440	1		||			
ANR	813511	EqualityExpression	str [ 1 ] == '?'		813440	0		==			
ANR	813512	ArrayIndexing	str [ 1 ]		813440	0					
ANR	813513	Identifier	str		813440	0					
ANR	813514	PrimaryExpression	1		813440	1					
ANR	813515	PrimaryExpression	'?'		813440	1					
ANR	813516	EqualityExpression	str [ 0 ] == '?'		813440	1		==			
ANR	813517	ArrayIndexing	str [ 0 ]		813440	0					
ANR	813518	Identifier	str		813440	0					
ANR	813519	PrimaryExpression	0		813440	1					
ANR	813520	PrimaryExpression	'?'		813440	1					
ANR	813521	CompoundStatement		11:47:235:235	813440	1					
ANR	813522	ExpressionStatement	"var_help ( core , * str )"	1065:2:39898:39919	813440	0	True				
ANR	813523	CallExpression	"var_help ( core , * str )"		813440	0					
ANR	813524	Callee	var_help		813440	0					
ANR	813525	Identifier	var_help		813440	0					
ANR	813526	ArgumentList	core		813440	1					
ANR	813527	Argument	core		813440	0					
ANR	813528	Identifier	core		813440	0					
ANR	813529	Argument	* str		813440	1					
ANR	813530	UnaryOperationExpression	* str		813440	0					
ANR	813531	UnaryOperator	*		813440	0					
ANR	813532	Identifier	str		813440	1					
ANR	813533	ReturnStatement	return res ;	1066:2:39923:39933	813440	1	True				
ANR	813534	Identifier	res		813440	0					
ANR	813535	IfStatement	if ( str [ 0 ] == 'j' )		813440	4					
ANR	813536	Condition	str [ 0 ] == 'j'	1068:5:39943:39955	813440	0	True				
ANR	813537	EqualityExpression	str [ 0 ] == 'j'		813440	0		==			
ANR	813538	ArrayIndexing	str [ 0 ]		813440	0					
ANR	813539	Identifier	str		813440	0					
ANR	813540	PrimaryExpression	0		813440	1					
ANR	813541	PrimaryExpression	'j'		813440	1					
ANR	813542	CompoundStatement		15:20:299:299	813440	1					
ANR	813543	ExpressionStatement	"r_cons_printf ( ""{\\""sp\\"":"" )"	1070:2:39974:40000	813440	0	True				
ANR	813544	CallExpression	"r_cons_printf ( ""{\\""sp\\"":"" )"		813440	0					
ANR	813545	Callee	r_cons_printf		813440	0					
ANR	813546	Identifier	r_cons_printf		813440	0					
ANR	813547	ArgumentList	"""{\\""sp\\"":"""		813440	1					
ANR	813548	Argument	"""{\\""sp\\"":"""		813440	0					
ANR	813549	PrimaryExpression	"""{\\""sp\\"":"""		813440	0					
ANR	813550	ExpressionStatement	"r_core_cmd0 ( core , ""afvsj"" )"	1071:2:40004:40031	813440	1	True				
ANR	813551	CallExpression	"r_core_cmd0 ( core , ""afvsj"" )"		813440	0					
ANR	813552	Callee	r_core_cmd0		813440	0					
ANR	813553	Identifier	r_core_cmd0		813440	0					
ANR	813554	ArgumentList	core		813440	1					
ANR	813555	Argument	core		813440	0					
ANR	813556	Identifier	core		813440	0					
ANR	813557	Argument	"""afvsj"""		813440	1					
ANR	813558	PrimaryExpression	"""afvsj"""		813440	0					
ANR	813559	ExpressionStatement	"r_cons_printf ( "",\\""bp\\"":"" )"	1072:2:40035:40061	813440	2	True				
ANR	813560	CallExpression	"r_cons_printf ( "",\\""bp\\"":"" )"		813440	0					
ANR	813561	Callee	r_cons_printf		813440	0					
ANR	813562	Identifier	r_cons_printf		813440	0					
ANR	813563	ArgumentList	""",\\""bp\\"":"""		813440	1					
ANR	813564	Argument	""",\\""bp\\"":"""		813440	0					
ANR	813565	PrimaryExpression	""",\\""bp\\"":"""		813440	0					
ANR	813566	ExpressionStatement	"r_core_cmd0 ( core , ""afvbj"" )"	1073:2:40065:40092	813440	3	True				
ANR	813567	CallExpression	"r_core_cmd0 ( core , ""afvbj"" )"		813440	0					
ANR	813568	Callee	r_core_cmd0		813440	0					
ANR	813569	Identifier	r_core_cmd0		813440	0					
ANR	813570	ArgumentList	core		813440	1					
ANR	813571	Argument	core		813440	0					
ANR	813572	Identifier	core		813440	0					
ANR	813573	Argument	"""afvbj"""		813440	1					
ANR	813574	PrimaryExpression	"""afvbj"""		813440	0					
ANR	813575	ExpressionStatement	"r_cons_printf ( "",\\""reg\\"":"" )"	1074:2:40096:40123	813440	4	True				
ANR	813576	CallExpression	"r_cons_printf ( "",\\""reg\\"":"" )"		813440	0					
ANR	813577	Callee	r_cons_printf		813440	0					
ANR	813578	Identifier	r_cons_printf		813440	0					
ANR	813579	ArgumentList	""",\\""reg\\"":"""		813440	1					
ANR	813580	Argument	""",\\""reg\\"":"""		813440	0					
ANR	813581	PrimaryExpression	""",\\""reg\\"":"""		813440	0					
ANR	813582	ExpressionStatement	"r_core_cmd0 ( core , ""afvrj"" )"	1075:2:40127:40154	813440	5	True				
ANR	813583	CallExpression	"r_core_cmd0 ( core , ""afvrj"" )"		813440	0					
ANR	813584	Callee	r_core_cmd0		813440	0					
ANR	813585	Identifier	r_core_cmd0		813440	0					
ANR	813586	ArgumentList	core		813440	1					
ANR	813587	Argument	core		813440	0					
ANR	813588	Identifier	core		813440	0					
ANR	813589	Argument	"""afvrj"""		813440	1					
ANR	813590	PrimaryExpression	"""afvrj"""		813440	0					
ANR	813591	ExpressionStatement	"r_cons_printf ( ""}\\n"" )"	1076:2:40158:40179	813440	6	True				
ANR	813592	CallExpression	"r_cons_printf ( ""}\\n"" )"		813440	0					
ANR	813593	Callee	r_cons_printf		813440	0					
ANR	813594	Identifier	r_cons_printf		813440	0					
ANR	813595	ArgumentList	"""}\\n"""		813440	1					
ANR	813596	Argument	"""}\\n"""		813440	0					
ANR	813597	PrimaryExpression	"""}\\n"""		813440	0					
ANR	813598	ReturnStatement	return true ;	1077:2:40183:40194	813440	7	True				
ANR	813599	Identifier	true		813440	0					
ANR	813600	IdentifierDeclStatement	char * p = strdup ( str ) ;	1079:1:40200:40222	813440	5	True				
ANR	813601	IdentifierDecl	* p = strdup ( str )		813440	0					
ANR	813602	IdentifierDeclType	char *		813440	0					
ANR	813603	Identifier	p		813440	1					
ANR	813604	AssignmentExpression	* p = strdup ( str )		813440	2		=			
ANR	813605	Identifier	p		813440	0					
ANR	813606	CallExpression	strdup ( str )		813440	1					
ANR	813607	Callee	strdup		813440	0					
ANR	813608	Identifier	strdup		813440	0					
ANR	813609	ArgumentList	str		813440	1					
ANR	813610	Argument	str		813440	0					
ANR	813611	Identifier	str		813440	0					
ANR	813612	IdentifierDeclStatement	char * ostr = p ;	1080:1:40225:40239	813440	6	True				
ANR	813613	IdentifierDecl	* ostr = p		813440	0					
ANR	813614	IdentifierDeclType	char *		813440	0					
ANR	813615	Identifier	ostr		813440	1					
ANR	813616	AssignmentExpression	* ostr = p		813440	2		=			
ANR	813617	Identifier	p		813440	0					
ANR	813618	Identifier	p		813440	1					
ANR	813619	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 ) ;"	1081:1:40242:40311	813440	7	True				
ANR	813620	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		813440	0					
ANR	813621	IdentifierDeclType	RAnalFunction *		813440	0					
ANR	813622	Identifier	fcn		813440	1					
ANR	813623	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		813440	2		=			
ANR	813624	Identifier	fcn		813440	0					
ANR	813625	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		813440	1					
ANR	813626	Callee	r_anal_get_fcn_in		813440	0					
ANR	813627	Identifier	r_anal_get_fcn_in		813440	0					
ANR	813628	ArgumentList	core -> anal		813440	1					
ANR	813629	Argument	core -> anal		813440	0					
ANR	813630	PtrMemberAccess	core -> anal		813440	0					
ANR	813631	Identifier	core		813440	0					
ANR	813632	Identifier	anal		813440	1					
ANR	813633	Argument	core -> offset		813440	1					
ANR	813634	PtrMemberAccess	core -> offset		813440	0					
ANR	813635	Identifier	core		813440	0					
ANR	813636	Identifier	offset		813440	1					
ANR	813637	Argument	- 1		813440	2					
ANR	813638	UnaryOperationExpression	- 1		813440	0					
ANR	813639	UnaryOperator	-		813440	0					
ANR	813640	PrimaryExpression	1		813440	1					
ANR	813641	SwitchStatement	switch ( str [ 0 ] )		813440	8					
ANR	813642	Condition	str [ 0 ]	1083:9:40364:40369	813440	0	True				
ANR	813643	ArrayIndexing	str [ 0 ]		813440	0					
ANR	813644	Identifier	str		813440	0					
ANR	813645	PrimaryExpression	0		813440	1					
ANR	813646	CompoundStatement		30:17:713:713	813440	1					
ANR	813647	Label	case '-' :	1084:1:40375:40383	813440	0	True				
ANR	813648	ExpressionStatement	"r_core_cmdf ( core , ""afvs-%s"" , str + 1 )"	1086:2:40398:40436	813440	1	True				
ANR	813649	CallExpression	"r_core_cmdf ( core , ""afvs-%s"" , str + 1 )"		813440	0					
ANR	813650	Callee	r_core_cmdf		813440	0					
ANR	813651	Identifier	r_core_cmdf		813440	0					
ANR	813652	ArgumentList	core		813440	1					
ANR	813653	Argument	core		813440	0					
ANR	813654	Identifier	core		813440	0					
ANR	813655	Argument	"""afvs-%s"""		813440	1					
ANR	813656	PrimaryExpression	"""afvs-%s"""		813440	0					
ANR	813657	Argument	str + 1		813440	2					
ANR	813658	AdditiveExpression	str + 1		813440	0		+			
ANR	813659	Identifier	str		813440	0					
ANR	813660	PrimaryExpression	1		813440	1					
ANR	813661	ExpressionStatement	"r_core_cmdf ( core , ""afvb-%s"" , str + 1 )"	1087:2:40440:40478	813440	2	True				
ANR	813662	CallExpression	"r_core_cmdf ( core , ""afvb-%s"" , str + 1 )"		813440	0					
ANR	813663	Callee	r_core_cmdf		813440	0					
ANR	813664	Identifier	r_core_cmdf		813440	0					
ANR	813665	ArgumentList	core		813440	1					
ANR	813666	Argument	core		813440	0					
ANR	813667	Identifier	core		813440	0					
ANR	813668	Argument	"""afvb-%s"""		813440	1					
ANR	813669	PrimaryExpression	"""afvb-%s"""		813440	0					
ANR	813670	Argument	str + 1		813440	2					
ANR	813671	AdditiveExpression	str + 1		813440	0		+			
ANR	813672	Identifier	str		813440	0					
ANR	813673	PrimaryExpression	1		813440	1					
ANR	813674	ExpressionStatement	"r_core_cmdf ( core , ""afvr-%s"" , str + 1 )"	1088:2:40482:40520	813440	3	True				
ANR	813675	CallExpression	"r_core_cmdf ( core , ""afvr-%s"" , str + 1 )"		813440	0					
ANR	813676	Callee	r_core_cmdf		813440	0					
ANR	813677	Identifier	r_core_cmdf		813440	0					
ANR	813678	ArgumentList	core		813440	1					
ANR	813679	Argument	core		813440	0					
ANR	813680	Identifier	core		813440	0					
ANR	813681	Argument	"""afvr-%s"""		813440	1					
ANR	813682	PrimaryExpression	"""afvr-%s"""		813440	0					
ANR	813683	Argument	str + 1		813440	2					
ANR	813684	AdditiveExpression	str + 1		813440	0		+			
ANR	813685	Identifier	str		813440	0					
ANR	813686	PrimaryExpression	1		813440	1					
ANR	813687	ReturnStatement	return true ;	1089:2:40524:40535	813440	4	True				
ANR	813688	Identifier	true		813440	0					
ANR	813689	Label	case 'R' :	1090:1:40538:40546	813440	5	True				
ANR	813690	Label	case 'W' :	1091:1:40559:40567	813440	6	True				
ANR	813691	Label	case '*' :	1092:1:40580:40588	813440	7	True				
ANR	813692	IfStatement	if ( fcn )		813440	8					
ANR	813693	Condition	fcn	1093:6:40606:40608	813440	0	True				
ANR	813694	Identifier	fcn		813440	0					
ANR	813695	CompoundStatement		41:3:957:1006	813440	1					
ANR	813696	IdentifierDeclStatement	"char * name = r_str_trim_head ( strchr ( ostr , ' ' ) ) ;"	1094:3:40616:40665	813440	0	True				
ANR	813697	IdentifierDecl	"* name = r_str_trim_head ( strchr ( ostr , ' ' ) )"		813440	0					
ANR	813698	IdentifierDeclType	char *		813440	0					
ANR	813699	Identifier	name		813440	1					
ANR	813700	AssignmentExpression	"* name = r_str_trim_head ( strchr ( ostr , ' ' ) )"		813440	2		=			
ANR	813701	Identifier	name		813440	0					
ANR	813702	CallExpression	"r_str_trim_head ( strchr ( ostr , ' ' ) )"		813440	1					
ANR	813703	Callee	r_str_trim_head		813440	0					
ANR	813704	Identifier	r_str_trim_head		813440	0					
ANR	813705	ArgumentList	"strchr ( ostr , ' ' )"		813440	1					
ANR	813706	Argument	"strchr ( ostr , ' ' )"		813440	0					
ANR	813707	CallExpression	"strchr ( ostr , ' ' )"		813440	0					
ANR	813708	Callee	strchr		813440	0					
ANR	813709	Identifier	strchr		813440	0					
ANR	813710	ArgumentList	ostr		813440	1					
ANR	813711	Argument	ostr		813440	0					
ANR	813712	Identifier	ostr		813440	0					
ANR	813713	Argument	' '		813440	1					
ANR	813714	PrimaryExpression	' '		813440	0					
ANR	813715	ExpressionStatement	"list_vars ( core , fcn , str [ 0 ] , name )"	1095:3:40670:40705	813440	1	True				
ANR	813716	CallExpression	"list_vars ( core , fcn , str [ 0 ] , name )"		813440	0					
ANR	813717	Callee	list_vars		813440	0					
ANR	813718	Identifier	list_vars		813440	0					
ANR	813719	ArgumentList	core		813440	1					
ANR	813720	Argument	core		813440	0					
ANR	813721	Identifier	core		813440	0					
ANR	813722	Argument	fcn		813440	1					
ANR	813723	Identifier	fcn		813440	0					
ANR	813724	Argument	str [ 0 ]		813440	2					
ANR	813725	ArrayIndexing	str [ 0 ]		813440	0					
ANR	813726	Identifier	str		813440	0					
ANR	813727	PrimaryExpression	0		813440	1					
ANR	813728	Argument	name		813440	3					
ANR	813729	Identifier	name		813440	0					
ANR	813730	ReturnStatement	return true ;	1096:3:40710:40721	813440	2	True				
ANR	813731	Identifier	true		813440	0					
ANR	813732	ElseStatement	else		813440	0					
ANR	813733	CompoundStatement		44:9:1073:1073	813440	0					
ANR	813734	Statement	eprintf	1098:3:40737:40743	813440	0	True				
ANR	813735	Statement	(	1098:11:40745:40745	813440	1	True				
ANR	813736	Statement	"""afv: Cannot find function in 0x%08"""	1098:12:40746:40781	813440	2	True				
ANR	813737	Statement	PFMT64x	1098:48:40782:40788	813440	3	True				
ANR	813738	Statement	"""\\n"""	1098:55:40789:40792	813440	4	True				
ANR	813739	Statement	","	1098:59:40793:40793	813440	5	True				
ANR	813740	Statement	core	1098:61:40795:40798	813440	6	True				
ANR	813741	Statement	->	1098:65:40799:40800	813440	7	True				
ANR	813742	Statement	offset	1098:67:40801:40806	813440	8	True				
ANR	813743	Statement	)	1098:73:40807:40807	813440	9	True				
ANR	813744	ExpressionStatement		1098:74:40808:40808	813440	10	True				
ANR	813745	ReturnStatement	return false ;	1099:3:40813:40825	813440	11	True				
ANR	813746	Identifier	false		813440	0					
ANR	813747	Label	case 'a' :	1101:1:40832:40840	813440	9	True				
ANR	813748	IfStatement	if ( fcn )		813440	10					
ANR	813749	Condition	fcn	1102:6:40858:40860	813440	0	True				
ANR	813750	Identifier	fcn		813440	0					
ANR	813751	CompoundStatement		49:11:1204:1204	813440	1					
ANR	813752	ExpressionStatement	"r_anal_var_delete_all ( core -> anal , fcn -> addr , R_ANAL_VAR_KIND_REG )"	1103:3:40868:40934	813440	0	True				
ANR	813753	CallExpression	"r_anal_var_delete_all ( core -> anal , fcn -> addr , R_ANAL_VAR_KIND_REG )"		813440	0					
ANR	813754	Callee	r_anal_var_delete_all		813440	0					
ANR	813755	Identifier	r_anal_var_delete_all		813440	0					
ANR	813756	ArgumentList	core -> anal		813440	1					
ANR	813757	Argument	core -> anal		813440	0					
ANR	813758	PtrMemberAccess	core -> anal		813440	0					
ANR	813759	Identifier	core		813440	0					
ANR	813760	Identifier	anal		813440	1					
ANR	813761	Argument	fcn -> addr		813440	1					
ANR	813762	PtrMemberAccess	fcn -> addr		813440	0					
ANR	813763	Identifier	fcn		813440	0					
ANR	813764	Identifier	addr		813440	1					
ANR	813765	Argument	R_ANAL_VAR_KIND_REG		813440	2					
ANR	813766	Identifier	R_ANAL_VAR_KIND_REG		813440	0					
ANR	813767	ExpressionStatement	"r_anal_var_delete_all ( core -> anal , fcn -> addr , R_ANAL_VAR_KIND_BPV )"	1104:3:40939:41005	813440	1	True				
ANR	813768	CallExpression	"r_anal_var_delete_all ( core -> anal , fcn -> addr , R_ANAL_VAR_KIND_BPV )"		813440	0					
ANR	813769	Callee	r_anal_var_delete_all		813440	0					
ANR	813770	Identifier	r_anal_var_delete_all		813440	0					
ANR	813771	ArgumentList	core -> anal		813440	1					
ANR	813772	Argument	core -> anal		813440	0					
ANR	813773	PtrMemberAccess	core -> anal		813440	0					
ANR	813774	Identifier	core		813440	0					
ANR	813775	Identifier	anal		813440	1					
ANR	813776	Argument	fcn -> addr		813440	1					
ANR	813777	PtrMemberAccess	fcn -> addr		813440	0					
ANR	813778	Identifier	fcn		813440	0					
ANR	813779	Identifier	addr		813440	1					
ANR	813780	Argument	R_ANAL_VAR_KIND_BPV		813440	2					
ANR	813781	Identifier	R_ANAL_VAR_KIND_BPV		813440	0					
ANR	813782	ExpressionStatement	"r_anal_var_delete_all ( core -> anal , fcn -> addr , R_ANAL_VAR_KIND_SPV )"	1105:3:41010:41076	813440	2	True				
ANR	813783	CallExpression	"r_anal_var_delete_all ( core -> anal , fcn -> addr , R_ANAL_VAR_KIND_SPV )"		813440	0					
ANR	813784	Callee	r_anal_var_delete_all		813440	0					
ANR	813785	Identifier	r_anal_var_delete_all		813440	0					
ANR	813786	ArgumentList	core -> anal		813440	1					
ANR	813787	Argument	core -> anal		813440	0					
ANR	813788	PtrMemberAccess	core -> anal		813440	0					
ANR	813789	Identifier	core		813440	0					
ANR	813790	Identifier	anal		813440	1					
ANR	813791	Argument	fcn -> addr		813440	1					
ANR	813792	PtrMemberAccess	fcn -> addr		813440	0					
ANR	813793	Identifier	fcn		813440	0					
ANR	813794	Identifier	addr		813440	1					
ANR	813795	Argument	R_ANAL_VAR_KIND_SPV		813440	2					
ANR	813796	Identifier	R_ANAL_VAR_KIND_SPV		813440	0					
ANR	813797	ExpressionStatement	"r_core_recover_vars ( core , fcn , false )"	1106:3:41081:41119	813440	3	True				
ANR	813798	CallExpression	"r_core_recover_vars ( core , fcn , false )"		813440	0					
ANR	813799	Callee	r_core_recover_vars		813440	0					
ANR	813800	Identifier	r_core_recover_vars		813440	0					
ANR	813801	ArgumentList	core		813440	1					
ANR	813802	Argument	core		813440	0					
ANR	813803	Identifier	core		813440	0					
ANR	813804	Argument	fcn		813440	1					
ANR	813805	Identifier	fcn		813440	0					
ANR	813806	Argument	false		813440	2					
ANR	813807	Identifier	false		813440	0					
ANR	813808	ExpressionStatement	free ( p )	1107:3:41124:41132	813440	4	True				
ANR	813809	CallExpression	free ( p )		813440	0					
ANR	813810	Callee	free		813440	0					
ANR	813811	Identifier	free		813440	0					
ANR	813812	ArgumentList	p		813440	1					
ANR	813813	Argument	p		813440	0					
ANR	813814	Identifier	p		813440	0					
ANR	813815	ReturnStatement	return true ;	1108:3:41137:41148	813440	5	True				
ANR	813816	Identifier	true		813440	0					
ANR	813817	ElseStatement	else		813440	0					
ANR	813818	CompoundStatement		56:9:1500:1500	813440	0					
ANR	813819	Statement	eprintf	1110:3:41164:41170	813440	0	True				
ANR	813820	Statement	(	1110:11:41172:41172	813440	1	True				
ANR	813821	Statement	"""afv: Cannot find function in 0x%08"""	1110:12:41173:41208	813440	2	True				
ANR	813822	Statement	PFMT64x	1110:48:41209:41215	813440	3	True				
ANR	813823	Statement	"""\\n"""	1110:55:41216:41219	813440	4	True				
ANR	813824	Statement	","	1110:59:41220:41220	813440	5	True				
ANR	813825	Statement	core	1110:61:41222:41225	813440	6	True				
ANR	813826	Statement	->	1110:65:41226:41227	813440	7	True				
ANR	813827	Statement	offset	1110:67:41228:41233	813440	8	True				
ANR	813828	Statement	)	1110:73:41234:41234	813440	9	True				
ANR	813829	ExpressionStatement		1110:74:41235:41235	813440	10	True				
ANR	813830	ReturnStatement	return false ;	1111:3:41240:41252	813440	11	True				
ANR	813831	Identifier	false		813440	0					
ANR	813832	Label	case 'n' :	1113:1:41259:41267	813440	11	True				
ANR	813833	IfStatement	if ( str [ 1 ] )		813440	12					
ANR	813834	Condition	str [ 1 ]	1114:6:41275:41280	813440	0	True				
ANR	813835	ArrayIndexing	str [ 1 ]		813440	0					
ANR	813836	Identifier	str		813440	0					
ANR	813837	PrimaryExpression	1		813440	1					
ANR	813838	CompoundStatement		69:3:1858:1897	813440	1					
ANR	813839	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , core -> offset , R_ANAL_OP_MASK_BASIC ) ;"	1115:3:41298:41369	813440	0	True				
ANR	813840	IdentifierDecl	"* op = r_core_anal_op ( core , core -> offset , R_ANAL_OP_MASK_BASIC )"		813440	0					
ANR	813841	IdentifierDeclType	RAnalOp *		813440	0					
ANR	813842	Identifier	op		813440	1					
ANR	813843	AssignmentExpression	"* op = r_core_anal_op ( core , core -> offset , R_ANAL_OP_MASK_BASIC )"		813440	2		=			
ANR	813844	Identifier	op		813440	0					
ANR	813845	CallExpression	"r_core_anal_op ( core , core -> offset , R_ANAL_OP_MASK_BASIC )"		813440	1					
ANR	813846	Callee	r_core_anal_op		813440	0					
ANR	813847	Identifier	r_core_anal_op		813440	0					
ANR	813848	ArgumentList	core		813440	1					
ANR	813849	Argument	core		813440	0					
ANR	813850	Identifier	core		813440	0					
ANR	813851	Argument	core -> offset		813440	1					
ANR	813852	PtrMemberAccess	core -> offset		813440	0					
ANR	813853	Identifier	core		813440	0					
ANR	813854	Identifier	offset		813440	1					
ANR	813855	Argument	R_ANAL_OP_MASK_BASIC		813440	2					
ANR	813856	Identifier	R_ANAL_OP_MASK_BASIC		813440	0					
ANR	813857	IdentifierDeclStatement	"char * new_name = r_str_trim_head ( strchr ( ostr , ' ' ) ) ;"	1116:3:41374:41427	813440	1	True				
ANR	813858	IdentifierDecl	"* new_name = r_str_trim_head ( strchr ( ostr , ' ' ) )"		813440	0					
ANR	813859	IdentifierDeclType	char *		813440	0					
ANR	813860	Identifier	new_name		813440	1					
ANR	813861	AssignmentExpression	"* new_name = r_str_trim_head ( strchr ( ostr , ' ' ) )"		813440	2		=			
ANR	813862	Identifier	new_name		813440	0					
ANR	813863	CallExpression	"r_str_trim_head ( strchr ( ostr , ' ' ) )"		813440	1					
ANR	813864	Callee	r_str_trim_head		813440	0					
ANR	813865	Identifier	r_str_trim_head		813440	0					
ANR	813866	ArgumentList	"strchr ( ostr , ' ' )"		813440	1					
ANR	813867	Argument	"strchr ( ostr , ' ' )"		813440	0					
ANR	813868	CallExpression	"strchr ( ostr , ' ' )"		813440	0					
ANR	813869	Callee	strchr		813440	0					
ANR	813870	Identifier	strchr		813440	0					
ANR	813871	ArgumentList	ostr		813440	1					
ANR	813872	Argument	ostr		813440	0					
ANR	813873	Identifier	ostr		813440	0					
ANR	813874	Argument	' '		813440	1					
ANR	813875	PrimaryExpression	' '		813440	0					
ANR	813876	IfStatement	if ( ! new_name )		813440	2					
ANR	813877	Condition	! new_name	1117:7:41436:41444	813440	0	True				
ANR	813878	UnaryOperationExpression	! new_name		813440	0					
ANR	813879	UnaryOperator	!		813440	0					
ANR	813880	Identifier	new_name		813440	1					
ANR	813881	CompoundStatement		64:18:1788:1788	813440	1					
ANR	813882	ExpressionStatement	r_anal_op_free ( op )	1118:4:41453:41472	813440	0	True				
ANR	813883	CallExpression	r_anal_op_free ( op )		813440	0					
ANR	813884	Callee	r_anal_op_free		813440	0					
ANR	813885	Identifier	r_anal_op_free		813440	0					
ANR	813886	ArgumentList	op		813440	1					
ANR	813887	Argument	op		813440	0					
ANR	813888	Identifier	op		813440	0					
ANR	813889	ExpressionStatement	free ( ostr )	1119:4:41478:41489	813440	1	True				
ANR	813890	CallExpression	free ( ostr )		813440	0					
ANR	813891	Callee	free		813440	0					
ANR	813892	Identifier	free		813440	0					
ANR	813893	ArgumentList	ostr		813440	1					
ANR	813894	Argument	ostr		813440	0					
ANR	813895	Identifier	ostr		813440	0					
ANR	813896	ReturnStatement	return false ;	1120:4:41495:41507	813440	2	True				
ANR	813897	Identifier	false		813440	0					
ANR	813898	IdentifierDeclStatement	"char * old_name = strchr ( new_name , ' ' ) ;"	1122:3:41517:41556	813440	3	True				
ANR	813899	IdentifierDecl	"* old_name = strchr ( new_name , ' ' )"		813440	0					
ANR	813900	IdentifierDeclType	char *		813440	0					
ANR	813901	Identifier	old_name		813440	1					
ANR	813902	AssignmentExpression	"* old_name = strchr ( new_name , ' ' )"		813440	2		=			
ANR	813903	Identifier	old_name		813440	0					
ANR	813904	CallExpression	"strchr ( new_name , ' ' )"		813440	1					
ANR	813905	Callee	strchr		813440	0					
ANR	813906	Identifier	strchr		813440	0					
ANR	813907	ArgumentList	new_name		813440	1					
ANR	813908	Argument	new_name		813440	0					
ANR	813909	Identifier	new_name		813440	0					
ANR	813910	Argument	' '		813440	1					
ANR	813911	PrimaryExpression	' '		813440	0					
ANR	813912	IfStatement	if ( ! old_name )		813440	4					
ANR	813913	Condition	! old_name	1123:7:41565:41573	813440	0	True				
ANR	813914	UnaryOperationExpression	! old_name		813440	0					
ANR	813915	UnaryOperator	!		813440	0					
ANR	813916	Identifier	old_name		813440	1					
ANR	813917	CompoundStatement		70:18:1917:1917	813440	1					
ANR	813918	IfStatement	if ( op && op -> var )		813440	0					
ANR	813919	Condition	op && op -> var	1124:8:41586:41598	813440	0	True				
ANR	813920	AndExpression	op && op -> var		813440	0		&&			
ANR	813921	Identifier	op		813440	0					
ANR	813922	PtrMemberAccess	op -> var		813440	1					
ANR	813923	Identifier	op		813440	0					
ANR	813924	Identifier	var		813440	1					
ANR	813925	CompoundStatement		71:23:1942:1942	813440	1					
ANR	813926	ExpressionStatement	old_name = op -> var -> name	1125:5:41608:41632	813440	0	True				
ANR	813927	AssignmentExpression	old_name = op -> var -> name		813440	0		=			
ANR	813928	Identifier	old_name		813440	0					
ANR	813929	PtrMemberAccess	op -> var -> name		813440	1					
ANR	813930	PtrMemberAccess	op -> var		813440	0					
ANR	813931	Identifier	op		813440	0					
ANR	813932	Identifier	var		813440	1					
ANR	813933	Identifier	name		813440	1					
ANR	813934	ElseStatement	else		813440	0					
ANR	813935	CompoundStatement		73:11:1986:1986	813440	0					
ANR	813936	Statement	eprintf	1127:5:41652:41658	813440	0	True				
ANR	813937	Statement	(	1127:13:41660:41660	813440	1	True				
ANR	813938	Statement	"""Cannot find var @ 0x%08"""	1127:14:41661:41685	813440	2	True				
ANR	813939	Statement	PFMT64x	1127:39:41686:41692	813440	3	True				
ANR	813940	Statement	"""\\n"""	1127:46:41693:41696	813440	4	True				
ANR	813941	Statement	","	1127:50:41697:41697	813440	5	True				
ANR	813942	Statement	core	1127:52:41699:41702	813440	6	True				
ANR	813943	Statement	->	1127:56:41703:41704	813440	7	True				
ANR	813944	Statement	offset	1127:58:41705:41710	813440	8	True				
ANR	813945	Statement	)	1127:64:41711:41711	813440	9	True				
ANR	813946	ExpressionStatement		1127:65:41712:41712	813440	10	True				
ANR	813947	ExpressionStatement	r_anal_op_free ( op )	1128:5:41719:41738	813440	11	True				
ANR	813948	CallExpression	r_anal_op_free ( op )		813440	0					
ANR	813949	Callee	r_anal_op_free		813440	0					
ANR	813950	Identifier	r_anal_op_free		813440	0					
ANR	813951	ArgumentList	op		813440	1					
ANR	813952	Argument	op		813440	0					
ANR	813953	Identifier	op		813440	0					
ANR	813954	ExpressionStatement	free ( ostr )	1129:5:41745:41756	813440	12	True				
ANR	813955	CallExpression	free ( ostr )		813440	0					
ANR	813956	Callee	free		813440	0					
ANR	813957	Identifier	free		813440	0					
ANR	813958	ArgumentList	ostr		813440	1					
ANR	813959	Argument	ostr		813440	0					
ANR	813960	Identifier	ostr		813440	0					
ANR	813961	ReturnStatement	return false ;	1130:5:41763:41775	813440	13	True				
ANR	813962	Identifier	false		813440	0					
ANR	813963	ElseStatement	else		813440	0					
ANR	813964	CompoundStatement		79:10:2134:2134	813440	0					
ANR	813965	ExpressionStatement	* old_name ++ = 0	1133:4:41799:41814	813440	0	True				
ANR	813966	AssignmentExpression	* old_name ++ = 0		813440	0		=			
ANR	813967	UnaryOperationExpression	* old_name ++		813440	0					
ANR	813968	UnaryOperator	*		813440	0					
ANR	813969	PostIncDecOperationExpression	old_name ++		813440	1					
ANR	813970	Identifier	old_name		813440	0					
ANR	813971	IncDec	++		813440	1					
ANR	813972	PrimaryExpression	0		813440	1					
ANR	813973	ExpressionStatement	r_str_trim ( old_name )	1134:4:41820:41841	813440	1	True				
ANR	813974	CallExpression	r_str_trim ( old_name )		813440	0					
ANR	813975	Callee	r_str_trim		813440	0					
ANR	813976	Identifier	r_str_trim		813440	0					
ANR	813977	ArgumentList	old_name		813440	1					
ANR	813978	Argument	old_name		813440	0					
ANR	813979	Identifier	old_name		813440	0					
ANR	813980	IfStatement	if ( fcn )		813440	5					
ANR	813981	Condition	fcn	1136:7:41855:41857	813440	0	True				
ANR	813982	Identifier	fcn		813440	0					
ANR	813983	CompoundStatement		83:12:2201:2201	813440	1					
ANR	813984	ExpressionStatement	"v1 = r_anal_var_get_byname ( core -> anal , fcn -> addr , old_name )"	1137:4:41866:41926	813440	0	True				
ANR	813985	AssignmentExpression	"v1 = r_anal_var_get_byname ( core -> anal , fcn -> addr , old_name )"		813440	0		=			
ANR	813986	Identifier	v1		813440	0					
ANR	813987	CallExpression	"r_anal_var_get_byname ( core -> anal , fcn -> addr , old_name )"		813440	1					
ANR	813988	Callee	r_anal_var_get_byname		813440	0					
ANR	813989	Identifier	r_anal_var_get_byname		813440	0					
ANR	813990	ArgumentList	core -> anal		813440	1					
ANR	813991	Argument	core -> anal		813440	0					
ANR	813992	PtrMemberAccess	core -> anal		813440	0					
ANR	813993	Identifier	core		813440	0					
ANR	813994	Identifier	anal		813440	1					
ANR	813995	Argument	fcn -> addr		813440	1					
ANR	813996	PtrMemberAccess	fcn -> addr		813440	0					
ANR	813997	Identifier	fcn		813440	0					
ANR	813998	Identifier	addr		813440	1					
ANR	813999	Argument	old_name		813440	2					
ANR	814000	Identifier	old_name		813440	0					
ANR	814001	IfStatement	if ( v1 )		813440	1					
ANR	814002	Condition	v1	1138:8:41936:41937	813440	0	True				
ANR	814003	Identifier	v1		813440	0					
ANR	814004	CompoundStatement		85:12:2281:2281	813440	1					
ANR	814005	ExpressionStatement	"r_anal_var_rename ( core -> anal , fcn -> addr , R_ANAL_VAR_SCOPE_LOCAL , v1 -> kind , old_name , new_name , true )"	1139:5:41947:42055	813440	0	True				
ANR	814006	CallExpression	"r_anal_var_rename ( core -> anal , fcn -> addr , R_ANAL_VAR_SCOPE_LOCAL , v1 -> kind , old_name , new_name , true )"		813440	0					
ANR	814007	Callee	r_anal_var_rename		813440	0					
ANR	814008	Identifier	r_anal_var_rename		813440	0					
ANR	814009	ArgumentList	core -> anal		813440	1					
ANR	814010	Argument	core -> anal		813440	0					
ANR	814011	PtrMemberAccess	core -> anal		813440	0					
ANR	814012	Identifier	core		813440	0					
ANR	814013	Identifier	anal		813440	1					
ANR	814014	Argument	fcn -> addr		813440	1					
ANR	814015	PtrMemberAccess	fcn -> addr		813440	0					
ANR	814016	Identifier	fcn		813440	0					
ANR	814017	Identifier	addr		813440	1					
ANR	814018	Argument	R_ANAL_VAR_SCOPE_LOCAL		813440	2					
ANR	814019	Identifier	R_ANAL_VAR_SCOPE_LOCAL		813440	0					
ANR	814020	Argument	v1 -> kind		813440	3					
ANR	814021	PtrMemberAccess	v1 -> kind		813440	0					
ANR	814022	Identifier	v1		813440	0					
ANR	814023	Identifier	kind		813440	1					
ANR	814024	Argument	old_name		813440	4					
ANR	814025	Identifier	old_name		813440	0					
ANR	814026	Argument	new_name		813440	5					
ANR	814027	Identifier	new_name		813440	0					
ANR	814028	Argument	true		813440	6					
ANR	814029	Identifier	true		813440	0					
ANR	814030	ExpressionStatement	r_anal_var_free ( v1 )	1141:5:42062:42082	813440	1	True				
ANR	814031	CallExpression	r_anal_var_free ( v1 )		813440	0					
ANR	814032	Callee	r_anal_var_free		813440	0					
ANR	814033	Identifier	r_anal_var_free		813440	0					
ANR	814034	ArgumentList	v1		813440	1					
ANR	814035	Argument	v1		813440	0					
ANR	814036	Identifier	v1		813440	0					
ANR	814037	ElseStatement	else		813440	0					
ANR	814038	CompoundStatement		89:11:2436:2436	813440	0					
ANR	814039	ExpressionStatement	"eprintf ( ""Cant find var by name\\n"" )"	1143:5:42102:42137	813440	0	True				
ANR	814040	CallExpression	"eprintf ( ""Cant find var by name\\n"" )"		813440	0					
ANR	814041	Callee	eprintf		813440	0					
ANR	814042	Identifier	eprintf		813440	0					
ANR	814043	ArgumentList	"""Cant find var by name\\n"""		813440	1					
ANR	814044	Argument	"""Cant find var by name\\n"""		813440	0					
ANR	814045	PrimaryExpression	"""Cant find var by name\\n"""		813440	0					
ANR	814046	ElseStatement	else		813440	0					
ANR	814047	CompoundStatement		92:10:2496:2496	813440	0					
ANR	814048	Statement	eprintf	1146:4:42161:42167	813440	0	True				
ANR	814049	Statement	(	1146:12:42169:42169	813440	1	True				
ANR	814050	Statement	"""afv: Cannot find function in 0x%08"""	1146:13:42170:42205	813440	2	True				
ANR	814051	Statement	PFMT64x	1146:49:42206:42212	813440	3	True				
ANR	814052	Statement	"""\\n"""	1146:56:42213:42216	813440	4	True				
ANR	814053	Statement	","	1146:60:42217:42217	813440	5	True				
ANR	814054	Statement	core	1146:62:42219:42222	813440	6	True				
ANR	814055	Statement	->	1146:66:42223:42224	813440	7	True				
ANR	814056	Statement	offset	1146:68:42225:42230	813440	8	True				
ANR	814057	Statement	)	1146:74:42231:42231	813440	9	True				
ANR	814058	ExpressionStatement		1146:75:42232:42232	813440	10	True				
ANR	814059	ExpressionStatement	r_anal_op_free ( op )	1147:4:42238:42257	813440	11	True				
ANR	814060	CallExpression	r_anal_op_free ( op )		813440	0					
ANR	814061	Callee	r_anal_op_free		813440	0					
ANR	814062	Identifier	r_anal_op_free		813440	0					
ANR	814063	ArgumentList	op		813440	1					
ANR	814064	Argument	op		813440	0					
ANR	814065	Identifier	op		813440	0					
ANR	814066	ExpressionStatement	free ( ostr )	1148:4:42263:42274	813440	12	True				
ANR	814067	CallExpression	free ( ostr )		813440	0					
ANR	814068	Callee	free		813440	0					
ANR	814069	Identifier	free		813440	0					
ANR	814070	ArgumentList	ostr		813440	1					
ANR	814071	Argument	ostr		813440	0					
ANR	814072	Identifier	ostr		813440	0					
ANR	814073	ReturnStatement	return false ;	1149:4:42280:42292	813440	13	True				
ANR	814074	Identifier	false		813440	0					
ANR	814075	ExpressionStatement	r_anal_op_free ( op )	1151:3:42302:42321	813440	6	True				
ANR	814076	CallExpression	r_anal_op_free ( op )		813440	0					
ANR	814077	Callee	r_anal_op_free		813440	0					
ANR	814078	Identifier	r_anal_op_free		813440	0					
ANR	814079	ArgumentList	op		813440	1					
ANR	814080	Argument	op		813440	0					
ANR	814081	Identifier	op		813440	0					
ANR	814082	ExpressionStatement	free ( ostr )	1152:3:42326:42337	813440	7	True				
ANR	814083	CallExpression	free ( ostr )		813440	0					
ANR	814084	Callee	free		813440	0					
ANR	814085	Identifier	free		813440	0					
ANR	814086	ArgumentList	ostr		813440	1					
ANR	814087	Argument	ostr		813440	0					
ANR	814088	Identifier	ostr		813440	0					
ANR	814089	ElseStatement	else		813440	0					
ANR	814090	CompoundStatement		103:3:2730:2781	813440	0					
ANR	814091	IdentifierDeclStatement	RListIter * iter ;	1154:3:42353:42368	813440	0	True				
ANR	814092	IdentifierDecl	* iter		813440	0					
ANR	814093	IdentifierDeclType	RListIter *		813440	0					
ANR	814094	Identifier	iter		813440	1					
ANR	814095	IdentifierDeclStatement	RAnalVar * v ;	1155:3:42373:42384	813440	1	True				
ANR	814096	IdentifierDecl	* v		813440	0					
ANR	814097	IdentifierDeclType	RAnalVar *		813440	0					
ANR	814098	Identifier	v		813440	1					
ANR	814099	IdentifierDeclStatement	"RList * list = r_anal_var_all_list ( core -> anal , fcn ) ;"	1156:3:42389:42440	813440	2	True				
ANR	814100	IdentifierDecl	"* list = r_anal_var_all_list ( core -> anal , fcn )"		813440	0					
ANR	814101	IdentifierDeclType	RList *		813440	0					
ANR	814102	Identifier	list		813440	1					
ANR	814103	AssignmentExpression	"* list = r_anal_var_all_list ( core -> anal , fcn )"		813440	2		=			
ANR	814104	Identifier	list		813440	0					
ANR	814105	CallExpression	"r_anal_var_all_list ( core -> anal , fcn )"		813440	1					
ANR	814106	Callee	r_anal_var_all_list		813440	0					
ANR	814107	Identifier	r_anal_var_all_list		813440	0					
ANR	814108	ArgumentList	core -> anal		813440	1					
ANR	814109	Argument	core -> anal		813440	0					
ANR	814110	PtrMemberAccess	core -> anal		813440	0					
ANR	814111	Identifier	core		813440	0					
ANR	814112	Identifier	anal		813440	1					
ANR	814113	Argument	fcn		813440	1					
ANR	814114	Identifier	fcn		813440	0					
ANR	814115	Statement	r_list_foreach	1157:3:42445:42458	813440	3	True				
ANR	814116	Statement	(	1157:18:42460:42460	813440	4	True				
ANR	814117	Statement	list	1157:19:42461:42464	813440	5	True				
ANR	814118	Statement	","	1157:23:42465:42465	813440	6	True				
ANR	814119	Statement	iter	1157:25:42467:42470	813440	7	True				
ANR	814120	Statement	","	1157:29:42471:42471	813440	8	True				
ANR	814121	Statement	v	1157:31:42473:42473	813440	9	True				
ANR	814122	Statement	)	1157:32:42474:42474	813440	10	True				
ANR	814123	CompoundStatement		104:34:2817:2817	813440	11					
ANR	814124	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , v -> name )"	1158:4:42482:42513	813440	0	True				
ANR	814125	CallExpression	"r_cons_printf ( ""%s\\n"" , v -> name )"		813440	0					
ANR	814126	Callee	r_cons_printf		813440	0					
ANR	814127	Identifier	r_cons_printf		813440	0					
ANR	814128	ArgumentList	"""%s\\n"""		813440	1					
ANR	814129	Argument	"""%s\\n"""		813440	0					
ANR	814130	PrimaryExpression	"""%s\\n"""		813440	0					
ANR	814131	Argument	v -> name		813440	1					
ANR	814132	PtrMemberAccess	v -> name		813440	0					
ANR	814133	Identifier	v		813440	0					
ANR	814134	Identifier	name		813440	1					
ANR	814135	ReturnStatement	return true ;	1161:2:42526:42537	813440	13	True				
ANR	814136	Identifier	true		813440	0					
ANR	814137	Label	case 'd' :	1162:1:42540:42548	813440	14	True				
ANR	814138	IfStatement	if ( ! fcn )		813440	15					
ANR	814139	Condition	! fcn	1163:6:42566:42569	813440	0	True				
ANR	814140	UnaryOperationExpression	! fcn		813440	0					
ANR	814141	UnaryOperator	!		813440	0					
ANR	814142	Identifier	fcn		813440	1					
ANR	814143	CompoundStatement		110:12:2913:2913	813440	1					
ANR	814144	ExpressionStatement	"eprintf ( ""Cannot find function.\\n"" )"	1164:3:42577:42612	813440	0	True				
ANR	814145	CallExpression	"eprintf ( ""Cannot find function.\\n"" )"		813440	0					
ANR	814146	Callee	eprintf		813440	0					
ANR	814147	Identifier	eprintf		813440	0					
ANR	814148	ArgumentList	"""Cannot find function.\\n"""		813440	1					
ANR	814149	Argument	"""Cannot find function.\\n"""		813440	0					
ANR	814150	PrimaryExpression	"""Cannot find function.\\n"""		813440	0					
ANR	814151	ElseStatement	else		813440	0					
ANR	814152	IfStatement	if ( str [ 1 ] )		813440	0					
ANR	814153	Condition	str [ 1 ]	1165:13:42627:42632	813440	0	True				
ANR	814154	ArrayIndexing	str [ 1 ]		813440	0					
ANR	814155	Identifier	str		813440	0					
ANR	814156	PrimaryExpression	1		813440	1					
ANR	814157	CompoundStatement		112:21:2976:2976	813440	1					
ANR	814158	ExpressionStatement	"p = strchr ( ostr , ' ' )"	1166:3:42640:42662	813440	0	True				
ANR	814159	AssignmentExpression	"p = strchr ( ostr , ' ' )"		813440	0		=			
ANR	814160	Identifier	p		813440	0					
ANR	814161	CallExpression	"strchr ( ostr , ' ' )"		813440	1					
ANR	814162	Callee	strchr		813440	0					
ANR	814163	Identifier	strchr		813440	0					
ANR	814164	ArgumentList	ostr		813440	1					
ANR	814165	Argument	ostr		813440	0					
ANR	814166	Identifier	ostr		813440	0					
ANR	814167	Argument	' '		813440	1					
ANR	814168	PrimaryExpression	' '		813440	0					
ANR	814169	IfStatement	if ( ! p )		813440	1					
ANR	814170	Condition	! p	1167:7:42671:42672	813440	0	True				
ANR	814171	UnaryOperationExpression	! p		813440	0					
ANR	814172	UnaryOperator	!		813440	0					
ANR	814173	Identifier	p		813440	1					
ANR	814174	CompoundStatement		114:11:3016:3016	813440	1					
ANR	814175	ExpressionStatement	free ( ostr )	1168:4:42681:42692	813440	0	True				
ANR	814176	CallExpression	free ( ostr )		813440	0					
ANR	814177	Callee	free		813440	0					
ANR	814178	Identifier	free		813440	0					
ANR	814179	ArgumentList	ostr		813440	1					
ANR	814180	Argument	ostr		813440	0					
ANR	814181	Identifier	ostr		813440	0					
ANR	814182	ReturnStatement	return false ;	1169:4:42698:42710	813440	1	True				
ANR	814183	Identifier	false		813440	0					
ANR	814184	ExpressionStatement	r_str_trim ( p )	1171:3:42720:42734	813440	2	True				
ANR	814185	CallExpression	r_str_trim ( p )		813440	0					
ANR	814186	Callee	r_str_trim		813440	0					
ANR	814187	Identifier	r_str_trim		813440	0					
ANR	814188	ArgumentList	p		813440	1					
ANR	814189	Argument	p		813440	0					
ANR	814190	Identifier	p		813440	0					
ANR	814191	ExpressionStatement	"v1 = r_anal_var_get_byname ( core -> anal , fcn -> addr , p )"	1172:3:42739:42792	813440	3	True				
ANR	814192	AssignmentExpression	"v1 = r_anal_var_get_byname ( core -> anal , fcn -> addr , p )"		813440	0		=			
ANR	814193	Identifier	v1		813440	0					
ANR	814194	CallExpression	"r_anal_var_get_byname ( core -> anal , fcn -> addr , p )"		813440	1					
ANR	814195	Callee	r_anal_var_get_byname		813440	0					
ANR	814196	Identifier	r_anal_var_get_byname		813440	0					
ANR	814197	ArgumentList	core -> anal		813440	1					
ANR	814198	Argument	core -> anal		813440	0					
ANR	814199	PtrMemberAccess	core -> anal		813440	0					
ANR	814200	Identifier	core		813440	0					
ANR	814201	Identifier	anal		813440	1					
ANR	814202	Argument	fcn -> addr		813440	1					
ANR	814203	PtrMemberAccess	fcn -> addr		813440	0					
ANR	814204	Identifier	fcn		813440	0					
ANR	814205	Identifier	addr		813440	1					
ANR	814206	Argument	p		813440	2					
ANR	814207	Identifier	p		813440	0					
ANR	814208	IfStatement	if ( ! v1 )		813440	4					
ANR	814209	Condition	! v1	1173:7:42801:42803	813440	0	True				
ANR	814210	UnaryOperationExpression	! v1		813440	0					
ANR	814211	UnaryOperator	!		813440	0					
ANR	814212	Identifier	v1		813440	1					
ANR	814213	CompoundStatement		120:12:3147:3147	813440	1					
ANR	814214	ExpressionStatement	free ( ostr )	1174:4:42812:42823	813440	0	True				
ANR	814215	CallExpression	free ( ostr )		813440	0					
ANR	814216	Callee	free		813440	0					
ANR	814217	Identifier	free		813440	0					
ANR	814218	ArgumentList	ostr		813440	1					
ANR	814219	Argument	ostr		813440	0					
ANR	814220	Identifier	ostr		813440	0					
ANR	814221	ReturnStatement	return false ;	1175:4:42829:42841	813440	1	True				
ANR	814222	Identifier	false		813440	0					
ANR	814223	ExpressionStatement	"r_anal_var_display ( core -> anal , v1 -> delta , v1 -> kind , v1 -> type )"	1177:3:42851:42913	813440	5	True				
ANR	814224	CallExpression	"r_anal_var_display ( core -> anal , v1 -> delta , v1 -> kind , v1 -> type )"		813440	0					
ANR	814225	Callee	r_anal_var_display		813440	0					
ANR	814226	Identifier	r_anal_var_display		813440	0					
ANR	814227	ArgumentList	core -> anal		813440	1					
ANR	814228	Argument	core -> anal		813440	0					
ANR	814229	PtrMemberAccess	core -> anal		813440	0					
ANR	814230	Identifier	core		813440	0					
ANR	814231	Identifier	anal		813440	1					
ANR	814232	Argument	v1 -> delta		813440	1					
ANR	814233	PtrMemberAccess	v1 -> delta		813440	0					
ANR	814234	Identifier	v1		813440	0					
ANR	814235	Identifier	delta		813440	1					
ANR	814236	Argument	v1 -> kind		813440	2					
ANR	814237	PtrMemberAccess	v1 -> kind		813440	0					
ANR	814238	Identifier	v1		813440	0					
ANR	814239	Identifier	kind		813440	1					
ANR	814240	Argument	v1 -> type		813440	3					
ANR	814241	PtrMemberAccess	v1 -> type		813440	0					
ANR	814242	Identifier	v1		813440	0					
ANR	814243	Identifier	type		813440	1					
ANR	814244	ExpressionStatement	r_anal_var_free ( v1 )	1178:3:42918:42938	813440	6	True				
ANR	814245	CallExpression	r_anal_var_free ( v1 )		813440	0					
ANR	814246	Callee	r_anal_var_free		813440	0					
ANR	814247	Identifier	r_anal_var_free		813440	0					
ANR	814248	ArgumentList	v1		813440	1					
ANR	814249	Argument	v1		813440	0					
ANR	814250	Identifier	v1		813440	0					
ANR	814251	ExpressionStatement	free ( ostr )	1179:3:42943:42954	813440	7	True				
ANR	814252	CallExpression	free ( ostr )		813440	0					
ANR	814253	Callee	free		813440	0					
ANR	814254	Identifier	free		813440	0					
ANR	814255	ArgumentList	ostr		813440	1					
ANR	814256	Argument	ostr		813440	0					
ANR	814257	Identifier	ostr		813440	0					
ANR	814258	ElseStatement	else		813440	0					
ANR	814259	CompoundStatement		130:3:3347:3398	813440	0					
ANR	814260	IdentifierDeclStatement	RListIter * iter ;	1181:3:42970:42985	813440	0	True				
ANR	814261	IdentifierDecl	* iter		813440	0					
ANR	814262	IdentifierDeclType	RListIter *		813440	0					
ANR	814263	Identifier	iter		813440	1					
ANR	814264	IdentifierDeclStatement	RAnalVar * p ;	1182:3:42990:43001	813440	1	True				
ANR	814265	IdentifierDecl	* p		813440	0					
ANR	814266	IdentifierDeclType	RAnalVar *		813440	0					
ANR	814267	Identifier	p		813440	1					
ANR	814268	IdentifierDeclStatement	"RList * list = r_anal_var_all_list ( core -> anal , fcn ) ;"	1183:3:43006:43057	813440	2	True				
ANR	814269	IdentifierDecl	"* list = r_anal_var_all_list ( core -> anal , fcn )"		813440	0					
ANR	814270	IdentifierDeclType	RList *		813440	0					
ANR	814271	Identifier	list		813440	1					
ANR	814272	AssignmentExpression	"* list = r_anal_var_all_list ( core -> anal , fcn )"		813440	2		=			
ANR	814273	Identifier	list		813440	0					
ANR	814274	CallExpression	"r_anal_var_all_list ( core -> anal , fcn )"		813440	1					
ANR	814275	Callee	r_anal_var_all_list		813440	0					
ANR	814276	Identifier	r_anal_var_all_list		813440	0					
ANR	814277	ArgumentList	core -> anal		813440	1					
ANR	814278	Argument	core -> anal		813440	0					
ANR	814279	PtrMemberAccess	core -> anal		813440	0					
ANR	814280	Identifier	core		813440	0					
ANR	814281	Identifier	anal		813440	1					
ANR	814282	Argument	fcn		813440	1					
ANR	814283	Identifier	fcn		813440	0					
ANR	814284	Statement	r_list_foreach	1184:3:43062:43075	813440	3	True				
ANR	814285	Statement	(	1184:18:43077:43077	813440	4	True				
ANR	814286	Statement	list	1184:19:43078:43081	813440	5	True				
ANR	814287	Statement	","	1184:23:43082:43082	813440	6	True				
ANR	814288	Statement	iter	1184:25:43084:43087	813440	7	True				
ANR	814289	Statement	","	1184:29:43088:43088	813440	8	True				
ANR	814290	Statement	p	1184:31:43090:43090	813440	9	True				
ANR	814291	Statement	)	1184:32:43091:43091	813440	10	True				
ANR	814292	CompoundStatement		132:4:3440:3493	813440	11					
ANR	814293	IdentifierDeclStatement	"char * a = r_core_cmd_strf ( core , "".afvd %s"" , p -> name ) ;"	1185:4:43099:43152	813440	0	True				
ANR	814294	IdentifierDecl	"* a = r_core_cmd_strf ( core , "".afvd %s"" , p -> name )"		813440	0					
ANR	814295	IdentifierDeclType	char *		813440	0					
ANR	814296	Identifier	a		813440	1					
ANR	814297	AssignmentExpression	"* a = r_core_cmd_strf ( core , "".afvd %s"" , p -> name )"		813440	2		=			
ANR	814298	Identifier	a		813440	0					
ANR	814299	CallExpression	"r_core_cmd_strf ( core , "".afvd %s"" , p -> name )"		813440	1					
ANR	814300	Callee	r_core_cmd_strf		813440	0					
ANR	814301	Identifier	r_core_cmd_strf		813440	0					
ANR	814302	ArgumentList	core		813440	1					
ANR	814303	Argument	core		813440	0					
ANR	814304	Identifier	core		813440	0					
ANR	814305	Argument	""".afvd %s"""		813440	1					
ANR	814306	PrimaryExpression	""".afvd %s"""		813440	0					
ANR	814307	Argument	p -> name		813440	2					
ANR	814308	PtrMemberAccess	p -> name		813440	0					
ANR	814309	Identifier	p		813440	0					
ANR	814310	Identifier	name		813440	1					
ANR	814311	IfStatement	if ( ( a && ! * a ) || ! a )		813440	1					
ANR	814312	Condition	( a && ! * a ) || ! a	1186:8:43162:43177	813440	0	True				
ANR	814313	OrExpression	( a && ! * a ) || ! a		813440	0		||			
ANR	814314	AndExpression	a && ! * a		813440	0		&&			
ANR	814315	Identifier	a		813440	0					
ANR	814316	UnaryOperationExpression	! * a		813440	1					
ANR	814317	UnaryOperator	!		813440	0					
ANR	814318	UnaryOperationExpression	* a		813440	1					
ANR	814319	UnaryOperator	*		813440	0					
ANR	814320	Identifier	a		813440	1					
ANR	814321	UnaryOperationExpression	! a		813440	1					
ANR	814322	UnaryOperator	!		813440	0					
ANR	814323	Identifier	a		813440	1					
ANR	814324	CompoundStatement		133:26:3521:3521	813440	1					
ANR	814325	ExpressionStatement	free ( a )	1187:5:43187:43195	813440	0	True				
ANR	814326	CallExpression	free ( a )		813440	0					
ANR	814327	Callee	free		813440	0					
ANR	814328	Identifier	free		813440	0					
ANR	814329	ArgumentList	a		813440	1					
ANR	814330	Argument	a		813440	0					
ANR	814331	Identifier	a		813440	0					
ANR	814332	ExpressionStatement	"a = strdup ( ""\\n"" )"	1188:5:43202:43219	813440	1	True				
ANR	814333	AssignmentExpression	"a = strdup ( ""\\n"" )"		813440	0		=			
ANR	814334	Identifier	a		813440	0					
ANR	814335	CallExpression	"strdup ( ""\\n"" )"		813440	1					
ANR	814336	Callee	strdup		813440	0					
ANR	814337	Identifier	strdup		813440	0					
ANR	814338	ArgumentList	"""\\n"""		813440	1					
ANR	814339	Argument	"""\\n"""		813440	0					
ANR	814340	PrimaryExpression	"""\\n"""		813440	0					
ANR	814341	ExpressionStatement	"r_cons_printf ( ""%s %s = %s"" , p -> isarg ? ""arg"" : ""var"" , p -> name , a )"	1190:4:43231:43296	813440	2	True				
ANR	814342	CallExpression	"r_cons_printf ( ""%s %s = %s"" , p -> isarg ? ""arg"" : ""var"" , p -> name , a )"		813440	0					
ANR	814343	Callee	r_cons_printf		813440	0					
ANR	814344	Identifier	r_cons_printf		813440	0					
ANR	814345	ArgumentList	"""%s %s = %s"""		813440	1					
ANR	814346	Argument	"""%s %s = %s"""		813440	0					
ANR	814347	PrimaryExpression	"""%s %s = %s"""		813440	0					
ANR	814348	Argument	"p -> isarg ? ""arg"" : ""var"""		813440	1					
ANR	814349	ConditionalExpression	"p -> isarg ? ""arg"" : ""var"""		813440	0					
ANR	814350	Condition	p -> isarg		813440	0					
ANR	814351	PtrMemberAccess	p -> isarg		813440	0					
ANR	814352	Identifier	p		813440	0					
ANR	814353	Identifier	isarg		813440	1					
ANR	814354	PrimaryExpression	"""arg"""		813440	1					
ANR	814355	PrimaryExpression	"""var"""		813440	2					
ANR	814356	Argument	p -> name		813440	2					
ANR	814357	PtrMemberAccess	p -> name		813440	0					
ANR	814358	Identifier	p		813440	0					
ANR	814359	Identifier	name		813440	1					
ANR	814360	Argument	a		813440	3					
ANR	814361	Identifier	a		813440	0					
ANR	814362	ExpressionStatement	free ( a )	1191:4:43302:43310	813440	3	True				
ANR	814363	CallExpression	free ( a )		813440	0					
ANR	814364	Callee	free		813440	0					
ANR	814365	Identifier	free		813440	0					
ANR	814366	ArgumentList	a		813440	1					
ANR	814367	Argument	a		813440	0					
ANR	814368	Identifier	a		813440	0					
ANR	814369	ExpressionStatement	r_list_free ( list )	1193:3:43320:43338	813440	12	True				
ANR	814370	CallExpression	r_list_free ( list )		813440	0					
ANR	814371	Callee	r_list_free		813440	0					
ANR	814372	Identifier	r_list_free		813440	0					
ANR	814373	ArgumentList	list		813440	1					
ANR	814374	Argument	list		813440	0					
ANR	814375	Identifier	list		813440	0					
ANR	814376	ReturnStatement	return true ;	1195:2:43346:43357	813440	16	True				
ANR	814377	Identifier	true		813440	0					
ANR	814378	Label	case 't' :	1196:1:43360:43368	813440	17	True				
ANR	814379	IfStatement	if ( fcn )		813440	18					
ANR	814380	Condition	fcn	1197:6:43376:43378	813440	0	True				
ANR	814381	Identifier	fcn		813440	0					
ANR	814382	CompoundStatement		151:3:3820:3848	813440	1					
ANR	814383	ExpressionStatement	"p = strchr ( ostr , ' ' )"	1198:3:43396:43418	813440	0	True				
ANR	814384	AssignmentExpression	"p = strchr ( ostr , ' ' )"		813440	0		=			
ANR	814385	Identifier	p		813440	0					
ANR	814386	CallExpression	"strchr ( ostr , ' ' )"		813440	1					
ANR	814387	Callee	strchr		813440	0					
ANR	814388	Identifier	strchr		813440	0					
ANR	814389	ArgumentList	ostr		813440	1					
ANR	814390	Argument	ostr		813440	0					
ANR	814391	Identifier	ostr		813440	0					
ANR	814392	Argument	' '		813440	1					
ANR	814393	PrimaryExpression	' '		813440	0					
ANR	814394	IfStatement	if ( ! p ++ )		813440	1					
ANR	814395	Condition	! p ++	1199:7:43427:43430	813440	0	True				
ANR	814396	UnaryOperationExpression	! p ++		813440	0					
ANR	814397	UnaryOperator	!		813440	0					
ANR	814398	PostIncDecOperationExpression	p ++		813440	1					
ANR	814399	Identifier	p		813440	0					
ANR	814400	IncDec	++		813440	1					
ANR	814401	CompoundStatement		146:13:3774:3774	813440	1					
ANR	814402	ExpressionStatement	free ( ostr )	1200:4:43439:43450	813440	0	True				
ANR	814403	CallExpression	free ( ostr )		813440	0					
ANR	814404	Callee	free		813440	0					
ANR	814405	Identifier	free		813440	0					
ANR	814406	ArgumentList	ostr		813440	1					
ANR	814407	Argument	ostr		813440	0					
ANR	814408	Identifier	ostr		813440	0					
ANR	814409	ReturnStatement	return false ;	1201:4:43456:43468	813440	1	True				
ANR	814410	Identifier	false		813440	0					
ANR	814411	IdentifierDeclStatement	"char * type = strchr ( p , ' ' ) ;"	1204:3:43479:43507	813440	2	True				
ANR	814412	IdentifierDecl	"* type = strchr ( p , ' ' )"		813440	0					
ANR	814413	IdentifierDeclType	char *		813440	0					
ANR	814414	Identifier	type		813440	1					
ANR	814415	AssignmentExpression	"* type = strchr ( p , ' ' )"		813440	2		=			
ANR	814416	Identifier	type		813440	0					
ANR	814417	CallExpression	"strchr ( p , ' ' )"		813440	1					
ANR	814418	Callee	strchr		813440	0					
ANR	814419	Identifier	strchr		813440	0					
ANR	814420	ArgumentList	p		813440	1					
ANR	814421	Argument	p		813440	0					
ANR	814422	Identifier	p		813440	0					
ANR	814423	Argument	' '		813440	1					
ANR	814424	PrimaryExpression	' '		813440	0					
ANR	814425	IfStatement	if ( ! type )		813440	3					
ANR	814426	Condition	! type	1205:7:43516:43520	813440	0	True				
ANR	814427	UnaryOperationExpression	! type		813440	0					
ANR	814428	UnaryOperator	!		813440	0					
ANR	814429	Identifier	type		813440	1					
ANR	814430	CompoundStatement		152:14:3864:3864	813440	1					
ANR	814431	ExpressionStatement	free ( ostr )	1206:4:43529:43540	813440	0	True				
ANR	814432	CallExpression	free ( ostr )		813440	0					
ANR	814433	Callee	free		813440	0					
ANR	814434	Identifier	free		813440	0					
ANR	814435	ArgumentList	ostr		813440	1					
ANR	814436	Argument	ostr		813440	0					
ANR	814437	Identifier	ostr		813440	0					
ANR	814438	ReturnStatement	return false ;	1207:4:43546:43558	813440	1	True				
ANR	814439	Identifier	false		813440	0					
ANR	814440	ExpressionStatement	* type ++ = 0	1209:3:43568:43579	813440	4	True				
ANR	814441	AssignmentExpression	* type ++ = 0		813440	0		=			
ANR	814442	UnaryOperationExpression	* type ++		813440	0					
ANR	814443	UnaryOperator	*		813440	0					
ANR	814444	PostIncDecOperationExpression	type ++		813440	1					
ANR	814445	Identifier	type		813440	0					
ANR	814446	IncDec	++		813440	1					
ANR	814447	PrimaryExpression	0		813440	1					
ANR	814448	ExpressionStatement	"v1 = r_anal_var_get_byname ( core -> anal , fcn -> addr , p )"	1210:3:43584:43637	813440	5	True				
ANR	814449	AssignmentExpression	"v1 = r_anal_var_get_byname ( core -> anal , fcn -> addr , p )"		813440	0		=			
ANR	814450	Identifier	v1		813440	0					
ANR	814451	CallExpression	"r_anal_var_get_byname ( core -> anal , fcn -> addr , p )"		813440	1					
ANR	814452	Callee	r_anal_var_get_byname		813440	0					
ANR	814453	Identifier	r_anal_var_get_byname		813440	0					
ANR	814454	ArgumentList	core -> anal		813440	1					
ANR	814455	Argument	core -> anal		813440	0					
ANR	814456	PtrMemberAccess	core -> anal		813440	0					
ANR	814457	Identifier	core		813440	0					
ANR	814458	Identifier	anal		813440	1					
ANR	814459	Argument	fcn -> addr		813440	1					
ANR	814460	PtrMemberAccess	fcn -> addr		813440	0					
ANR	814461	Identifier	fcn		813440	0					
ANR	814462	Identifier	addr		813440	1					
ANR	814463	Argument	p		813440	2					
ANR	814464	Identifier	p		813440	0					
ANR	814465	IfStatement	if ( ! v1 )		813440	6					
ANR	814466	Condition	! v1	1211:7:43646:43648	813440	0	True				
ANR	814467	UnaryOperationExpression	! v1		813440	0					
ANR	814468	UnaryOperator	!		813440	0					
ANR	814469	Identifier	v1		813440	1					
ANR	814470	CompoundStatement		158:12:3992:3992	813440	1					
ANR	814471	ExpressionStatement	"eprintf ( ""Cant find get by name %s\\n"" , p )"	1212:4:43657:43698	813440	0	True				
ANR	814472	CallExpression	"eprintf ( ""Cant find get by name %s\\n"" , p )"		813440	0					
ANR	814473	Callee	eprintf		813440	0					
ANR	814474	Identifier	eprintf		813440	0					
ANR	814475	ArgumentList	"""Cant find get by name %s\\n"""		813440	1					
ANR	814476	Argument	"""Cant find get by name %s\\n"""		813440	0					
ANR	814477	PrimaryExpression	"""Cant find get by name %s\\n"""		813440	0					
ANR	814478	Argument	p		813440	1					
ANR	814479	Identifier	p		813440	0					
ANR	814480	ExpressionStatement	free ( ostr )	1213:4:43704:43715	813440	1	True				
ANR	814481	CallExpression	free ( ostr )		813440	0					
ANR	814482	Callee	free		813440	0					
ANR	814483	Identifier	free		813440	0					
ANR	814484	ArgumentList	ostr		813440	1					
ANR	814485	Argument	ostr		813440	0					
ANR	814486	Identifier	ostr		813440	0					
ANR	814487	ReturnStatement	return false ;	1214:4:43721:43733	813440	2	True				
ANR	814488	Identifier	false		813440	0					
ANR	814489	ExpressionStatement	"r_anal_var_retype ( core -> anal , fcn -> addr , R_ANAL_VAR_SCOPE_LOCAL , - 1 , v1 -> kind , type , - 1 , v1 -> isarg , p )"	1216:3:43743:43851	813440	7	True				
ANR	814490	CallExpression	"r_anal_var_retype ( core -> anal , fcn -> addr , R_ANAL_VAR_SCOPE_LOCAL , - 1 , v1 -> kind , type , - 1 , v1 -> isarg , p )"		813440	0					
ANR	814491	Callee	r_anal_var_retype		813440	0					
ANR	814492	Identifier	r_anal_var_retype		813440	0					
ANR	814493	ArgumentList	core -> anal		813440	1					
ANR	814494	Argument	core -> anal		813440	0					
ANR	814495	PtrMemberAccess	core -> anal		813440	0					
ANR	814496	Identifier	core		813440	0					
ANR	814497	Identifier	anal		813440	1					
ANR	814498	Argument	fcn -> addr		813440	1					
ANR	814499	PtrMemberAccess	fcn -> addr		813440	0					
ANR	814500	Identifier	fcn		813440	0					
ANR	814501	Identifier	addr		813440	1					
ANR	814502	Argument	R_ANAL_VAR_SCOPE_LOCAL		813440	2					
ANR	814503	Identifier	R_ANAL_VAR_SCOPE_LOCAL		813440	0					
ANR	814504	Argument	- 1		813440	3					
ANR	814505	UnaryOperationExpression	- 1		813440	0					
ANR	814506	UnaryOperator	-		813440	0					
ANR	814507	PrimaryExpression	1		813440	1					
ANR	814508	Argument	v1 -> kind		813440	4					
ANR	814509	PtrMemberAccess	v1 -> kind		813440	0					
ANR	814510	Identifier	v1		813440	0					
ANR	814511	Identifier	kind		813440	1					
ANR	814512	Argument	type		813440	5					
ANR	814513	Identifier	type		813440	0					
ANR	814514	Argument	- 1		813440	6					
ANR	814515	UnaryOperationExpression	- 1		813440	0					
ANR	814516	UnaryOperator	-		813440	0					
ANR	814517	PrimaryExpression	1		813440	1					
ANR	814518	Argument	v1 -> isarg		813440	7					
ANR	814519	PtrMemberAccess	v1 -> isarg		813440	0					
ANR	814520	Identifier	v1		813440	0					
ANR	814521	Identifier	isarg		813440	1					
ANR	814522	Argument	p		813440	8					
ANR	814523	Identifier	p		813440	0					
ANR	814524	ExpressionStatement	r_anal_var_free ( v1 )	1218:3:43856:43876	813440	8	True				
ANR	814525	CallExpression	r_anal_var_free ( v1 )		813440	0					
ANR	814526	Callee	r_anal_var_free		813440	0					
ANR	814527	Identifier	r_anal_var_free		813440	0					
ANR	814528	ArgumentList	v1		813440	1					
ANR	814529	Argument	v1		813440	0					
ANR	814530	Identifier	v1		813440	0					
ANR	814531	ExpressionStatement	free ( ostr )	1219:3:43881:43892	813440	9	True				
ANR	814532	CallExpression	free ( ostr )		813440	0					
ANR	814533	Callee	free		813440	0					
ANR	814534	Identifier	free		813440	0					
ANR	814535	ArgumentList	ostr		813440	1					
ANR	814536	Argument	ostr		813440	0					
ANR	814537	Identifier	ostr		813440	0					
ANR	814538	ReturnStatement	return true ;	1220:3:43897:43908	813440	10	True				
ANR	814539	Identifier	true		813440	0					
ANR	814540	ElseStatement	else		813440	0					
ANR	814541	CompoundStatement		168:9:4260:4260	813440	0					
ANR	814542	ExpressionStatement	"eprintf ( ""Cannot find function\\n"" )"	1222:3:43924:43958	813440	0	True				
ANR	814543	CallExpression	"eprintf ( ""Cannot find function\\n"" )"		813440	0					
ANR	814544	Callee	eprintf		813440	0					
ANR	814545	Identifier	eprintf		813440	0					
ANR	814546	ArgumentList	"""Cannot find function\\n"""		813440	1					
ANR	814547	Argument	"""Cannot find function\\n"""		813440	0					
ANR	814548	PrimaryExpression	"""Cannot find function\\n"""		813440	0					
ANR	814549	ReturnStatement	return false ;	1223:3:43963:43975	813440	1	True				
ANR	814550	Identifier	false		813440	0					
ANR	814551	SwitchStatement	switch ( str [ 1 ] )		813440	9					
ANR	814552	Condition	str [ 1 ]	1226:9:43993:43998	813440	0	True				
ANR	814553	ArrayIndexing	str [ 1 ]		813440	0					
ANR	814554	Identifier	str		813440	0					
ANR	814555	PrimaryExpression	1		813440	1					
ANR	814556	CompoundStatement		173:17:4342:4342	813440	1					
ANR	814557	Label	case '\\0' :	1227:1:44016:44025	813440	0	True				
ANR	814558	Label	case '*' :	1228:1:44028:44036	813440	1	True				
ANR	814559	ExpressionStatement	"r_anal_var_list_show ( core -> anal , fcn , type , str [ 1 ] , NULL )"	1229:2:44040:44098	813440	2	True				
ANR	814560	CallExpression	"r_anal_var_list_show ( core -> anal , fcn , type , str [ 1 ] , NULL )"		813440	0					
ANR	814561	Callee	r_anal_var_list_show		813440	0					
ANR	814562	Identifier	r_anal_var_list_show		813440	0					
ANR	814563	ArgumentList	core -> anal		813440	1					
ANR	814564	Argument	core -> anal		813440	0					
ANR	814565	PtrMemberAccess	core -> anal		813440	0					
ANR	814566	Identifier	core		813440	0					
ANR	814567	Identifier	anal		813440	1					
ANR	814568	Argument	fcn		813440	1					
ANR	814569	Identifier	fcn		813440	0					
ANR	814570	Argument	type		813440	2					
ANR	814571	Identifier	type		813440	0					
ANR	814572	Argument	str [ 1 ]		813440	3					
ANR	814573	ArrayIndexing	str [ 1 ]		813440	0					
ANR	814574	Identifier	str		813440	0					
ANR	814575	PrimaryExpression	1		813440	1					
ANR	814576	Argument	NULL		813440	4					
ANR	814577	Identifier	NULL		813440	0					
ANR	814578	BreakStatement	break ;	1230:2:44102:44107	813440	3	True				
ANR	814579	Label	case 'j' :	1231:1:44110:44118	813440	4	True				
ANR	814580	CompoundStatement		179:2:4465:4483	813440	5					
ANR	814581	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1232:2:44124:44142	813440	0	True				
ANR	814582	IdentifierDecl	* pj = pj_new ( )		813440	0					
ANR	814583	IdentifierDeclType	PJ *		813440	0					
ANR	814584	Identifier	pj		813440	1					
ANR	814585	AssignmentExpression	* pj = pj_new ( )		813440	2		=			
ANR	814586	Identifier	pj		813440	0					
ANR	814587	CallExpression	pj_new ( )		813440	1					
ANR	814588	Callee	pj_new		813440	0					
ANR	814589	Identifier	pj_new		813440	0					
ANR	814590	ArgumentList			813440	1					
ANR	814591	IfStatement	if ( ! pj )		813440	1					
ANR	814592	Condition	! pj	1233:6:44150:44152	813440	0	True				
ANR	814593	UnaryOperationExpression	! pj		813440	0					
ANR	814594	UnaryOperator	!		813440	0					
ANR	814595	Identifier	pj		813440	1					
ANR	814596	CompoundStatement		180:11:4496:4496	813440	1					
ANR	814597	ReturnStatement	return - 1 ;	1234:3:44160:44169	813440	0	True				
ANR	814598	UnaryOperationExpression	- 1		813440	0					
ANR	814599	UnaryOperator	-		813440	0					
ANR	814600	PrimaryExpression	1		813440	1					
ANR	814601	ExpressionStatement	"r_anal_var_list_show ( core -> anal , fcn , type , str [ 1 ] , pj )"	1236:2:44177:44233	813440	2	True				
ANR	814602	CallExpression	"r_anal_var_list_show ( core -> anal , fcn , type , str [ 1 ] , pj )"		813440	0					
ANR	814603	Callee	r_anal_var_list_show		813440	0					
ANR	814604	Identifier	r_anal_var_list_show		813440	0					
ANR	814605	ArgumentList	core -> anal		813440	1					
ANR	814606	Argument	core -> anal		813440	0					
ANR	814607	PtrMemberAccess	core -> anal		813440	0					
ANR	814608	Identifier	core		813440	0					
ANR	814609	Identifier	anal		813440	1					
ANR	814610	Argument	fcn		813440	1					
ANR	814611	Identifier	fcn		813440	0					
ANR	814612	Argument	type		813440	2					
ANR	814613	Identifier	type		813440	0					
ANR	814614	Argument	str [ 1 ]		813440	3					
ANR	814615	ArrayIndexing	str [ 1 ]		813440	0					
ANR	814616	Identifier	str		813440	0					
ANR	814617	PrimaryExpression	1		813440	1					
ANR	814618	Argument	pj		813440	4					
ANR	814619	Identifier	pj		813440	0					
ANR	814620	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	1237:2:44237:44268	813440	3	True				
ANR	814621	CallExpression	r_cons_println ( pj_string ( pj ) )		813440	0					
ANR	814622	Callee	r_cons_println		813440	0					
ANR	814623	Identifier	r_cons_println		813440	0					
ANR	814624	ArgumentList	pj_string ( pj )		813440	1					
ANR	814625	Argument	pj_string ( pj )		813440	0					
ANR	814626	CallExpression	pj_string ( pj )		813440	0					
ANR	814627	Callee	pj_string		813440	0					
ANR	814628	Identifier	pj_string		813440	0					
ANR	814629	ArgumentList	pj		813440	1					
ANR	814630	Argument	pj		813440	0					
ANR	814631	Identifier	pj		813440	0					
ANR	814632	ExpressionStatement	pj_free ( pj )	1238:2:44272:44284	813440	4	True				
ANR	814633	CallExpression	pj_free ( pj )		813440	0					
ANR	814634	Callee	pj_free		813440	0					
ANR	814635	Identifier	pj_free		813440	0					
ANR	814636	ArgumentList	pj		813440	1					
ANR	814637	Argument	pj		813440	0					
ANR	814638	Identifier	pj		813440	0					
ANR	814639	BreakStatement	break ;	1240:2:44291:44296	813440	6	True				
ANR	814640	Label	case '.' :	1241:1:44299:44307	813440	7	True				
ANR	814641	ExpressionStatement	"r_anal_var_list_show ( core -> anal , fcn , core -> offset , 0 , NULL )"	1242:2:44311:44372	813440	8	True				
ANR	814642	CallExpression	"r_anal_var_list_show ( core -> anal , fcn , core -> offset , 0 , NULL )"		813440	0					
ANR	814643	Callee	r_anal_var_list_show		813440	0					
ANR	814644	Identifier	r_anal_var_list_show		813440	0					
ANR	814645	ArgumentList	core -> anal		813440	1					
ANR	814646	Argument	core -> anal		813440	0					
ANR	814647	PtrMemberAccess	core -> anal		813440	0					
ANR	814648	Identifier	core		813440	0					
ANR	814649	Identifier	anal		813440	1					
ANR	814650	Argument	fcn		813440	1					
ANR	814651	Identifier	fcn		813440	0					
ANR	814652	Argument	core -> offset		813440	2					
ANR	814653	PtrMemberAccess	core -> offset		813440	0					
ANR	814654	Identifier	core		813440	0					
ANR	814655	Identifier	offset		813440	1					
ANR	814656	Argument	0		813440	3					
ANR	814657	PrimaryExpression	0		813440	0					
ANR	814658	Argument	NULL		813440	4					
ANR	814659	Identifier	NULL		813440	0					
ANR	814660	BreakStatement	break ;	1243:2:44376:44381	813440	9	True				
ANR	814661	Label	case '-' :	1244:1:44384:44392	813440	10	True				
ANR	814662	IfStatement	if ( str [ 2 ] == '*' )		813440	11					
ANR	814663	Condition	str [ 2 ] == '*'	1245:6:44415:44427	813440	0	True				
ANR	814664	EqualityExpression	str [ 2 ] == '*'		813440	0		==			
ANR	814665	ArrayIndexing	str [ 2 ]		813440	0					
ANR	814666	Identifier	str		813440	0					
ANR	814667	PrimaryExpression	2		813440	1					
ANR	814668	PrimaryExpression	'*'		813440	1					
ANR	814669	CompoundStatement		192:21:4771:4771	813440	1					
ANR	814670	ExpressionStatement	"r_anal_var_delete_all ( core -> anal , fcn -> addr , type )"	1246:3:44435:44486	813440	0	True				
ANR	814671	CallExpression	"r_anal_var_delete_all ( core -> anal , fcn -> addr , type )"		813440	0					
ANR	814672	Callee	r_anal_var_delete_all		813440	0					
ANR	814673	Identifier	r_anal_var_delete_all		813440	0					
ANR	814674	ArgumentList	core -> anal		813440	1					
ANR	814675	Argument	core -> anal		813440	0					
ANR	814676	PtrMemberAccess	core -> anal		813440	0					
ANR	814677	Identifier	core		813440	0					
ANR	814678	Identifier	anal		813440	1					
ANR	814679	Argument	fcn -> addr		813440	1					
ANR	814680	PtrMemberAccess	fcn -> addr		813440	0					
ANR	814681	Identifier	fcn		813440	0					
ANR	814682	Identifier	addr		813440	1					
ANR	814683	Argument	type		813440	2					
ANR	814684	Identifier	type		813440	0					
ANR	814685	ElseStatement	else		813440	0					
ANR	814686	CompoundStatement		194:9:4838:4838	813440	0					
ANR	814687	IfStatement	if ( IS_DIGIT ( str [ 2 ] ) )		813440	0					
ANR	814688	Condition	IS_DIGIT ( str [ 2 ] )	1248:7:44506:44522	813440	0	True				
ANR	814689	CallExpression	IS_DIGIT ( str [ 2 ] )		813440	0					
ANR	814690	Callee	IS_DIGIT		813440	0					
ANR	814691	Identifier	IS_DIGIT		813440	0					
ANR	814692	ArgumentList	str [ 2 ]		813440	1					
ANR	814693	Argument	str [ 2 ]		813440	0					
ANR	814694	ArrayIndexing	str [ 2 ]		813440	0					
ANR	814695	Identifier	str		813440	0					
ANR	814696	PrimaryExpression	2		813440	1					
ANR	814697	CompoundStatement		195:26:4866:4866	813440	1					
ANR	814698	ExpressionStatement	"r_anal_var_delete ( core -> anal , fcn -> addr , type , 1 , ( int ) r_num_math ( core -> num , str + 1 ) )"	1249:4:44531:44625	813440	0	True				
ANR	814699	CallExpression	"r_anal_var_delete ( core -> anal , fcn -> addr , type , 1 , ( int ) r_num_math ( core -> num , str + 1 ) )"		813440	0					
ANR	814700	Callee	r_anal_var_delete		813440	0					
ANR	814701	Identifier	r_anal_var_delete		813440	0					
ANR	814702	ArgumentList	core -> anal		813440	1					
ANR	814703	Argument	core -> anal		813440	0					
ANR	814704	PtrMemberAccess	core -> anal		813440	0					
ANR	814705	Identifier	core		813440	0					
ANR	814706	Identifier	anal		813440	1					
ANR	814707	Argument	fcn -> addr		813440	1					
ANR	814708	PtrMemberAccess	fcn -> addr		813440	0					
ANR	814709	Identifier	fcn		813440	0					
ANR	814710	Identifier	addr		813440	1					
ANR	814711	Argument	type		813440	2					
ANR	814712	Identifier	type		813440	0					
ANR	814713	Argument	1		813440	3					
ANR	814714	PrimaryExpression	1		813440	0					
ANR	814715	Argument	"( int ) r_num_math ( core -> num , str + 1 )"		813440	4					
ANR	814716	CastExpression	"( int ) r_num_math ( core -> num , str + 1 )"		813440	0					
ANR	814717	CastTarget	int		813440	0					
ANR	814718	CallExpression	"r_num_math ( core -> num , str + 1 )"		813440	1					
ANR	814719	Callee	r_num_math		813440	0					
ANR	814720	Identifier	r_num_math		813440	0					
ANR	814721	ArgumentList	core -> num		813440	1					
ANR	814722	Argument	core -> num		813440	0					
ANR	814723	PtrMemberAccess	core -> num		813440	0					
ANR	814724	Identifier	core		813440	0					
ANR	814725	Identifier	num		813440	1					
ANR	814726	Argument	str + 1		813440	1					
ANR	814727	AdditiveExpression	str + 1		813440	0		+			
ANR	814728	Identifier	str		813440	0					
ANR	814729	PrimaryExpression	1		813440	1					
ANR	814730	ElseStatement	else		813440	0					
ANR	814731	CompoundStatement		199:4:4984:5021	813440	0					
ANR	814732	IdentifierDeclStatement	char * name = r_str_trim_dup ( str + 2 ) ;	1252:4:44643:44680	813440	0	True				
ANR	814733	IdentifierDecl	* name = r_str_trim_dup ( str + 2 )		813440	0					
ANR	814734	IdentifierDeclType	char *		813440	0					
ANR	814735	Identifier	name		813440	1					
ANR	814736	AssignmentExpression	* name = r_str_trim_dup ( str + 2 )		813440	2		=			
ANR	814737	Identifier	name		813440	0					
ANR	814738	CallExpression	r_str_trim_dup ( str + 2 )		813440	1					
ANR	814739	Callee	r_str_trim_dup		813440	0					
ANR	814740	Identifier	r_str_trim_dup		813440	0					
ANR	814741	ArgumentList	str + 2		813440	1					
ANR	814742	Argument	str + 2		813440	0					
ANR	814743	AdditiveExpression	str + 2		813440	0		+			
ANR	814744	Identifier	str		813440	0					
ANR	814745	PrimaryExpression	2		813440	1					
ANR	814746	IfStatement	if ( name )		813440	1					
ANR	814747	Condition	name	1253:8:44690:44693	813440	0	True				
ANR	814748	Identifier	name		813440	0					
ANR	814749	CompoundStatement		200:14:5037:5037	813440	1					
ANR	814750	ExpressionStatement	"r_anal_var_delete_byname ( core -> anal , fcn , type , name )"	1254:5:44703:44757	813440	0	True				
ANR	814751	CallExpression	"r_anal_var_delete_byname ( core -> anal , fcn , type , name )"		813440	0					
ANR	814752	Callee	r_anal_var_delete_byname		813440	0					
ANR	814753	Identifier	r_anal_var_delete_byname		813440	0					
ANR	814754	ArgumentList	core -> anal		813440	1					
ANR	814755	Argument	core -> anal		813440	0					
ANR	814756	PtrMemberAccess	core -> anal		813440	0					
ANR	814757	Identifier	core		813440	0					
ANR	814758	Identifier	anal		813440	1					
ANR	814759	Argument	fcn		813440	1					
ANR	814760	Identifier	fcn		813440	0					
ANR	814761	Argument	type		813440	2					
ANR	814762	Identifier	type		813440	0					
ANR	814763	Argument	name		813440	3					
ANR	814764	Identifier	name		813440	0					
ANR	814765	ExpressionStatement	free ( name )	1255:5:44764:44775	813440	1	True				
ANR	814766	CallExpression	free ( name )		813440	0					
ANR	814767	Callee	free		813440	0					
ANR	814768	Identifier	free		813440	0					
ANR	814769	ArgumentList	name		813440	1					
ANR	814770	Argument	name		813440	0					
ANR	814771	Identifier	name		813440	0					
ANR	814772	BreakStatement	break ;	1259:2:44794:44799	813440	12	True				
ANR	814773	Label	case 'd' :	1260:1:44802:44810	813440	13	True				
ANR	814774	ExpressionStatement	"eprintf ( ""This command is deprecated, use afvd instead\\n"" )"	1261:2:44814:44872	813440	14	True				
ANR	814775	CallExpression	"eprintf ( ""This command is deprecated, use afvd instead\\n"" )"		813440	0					
ANR	814776	Callee	eprintf		813440	0					
ANR	814777	Identifier	eprintf		813440	0					
ANR	814778	ArgumentList	"""This command is deprecated, use afvd instead\\n"""		813440	1					
ANR	814779	Argument	"""This command is deprecated, use afvd instead\\n"""		813440	0					
ANR	814780	PrimaryExpression	"""This command is deprecated, use afvd instead\\n"""		813440	0					
ANR	814781	BreakStatement	break ;	1262:2:44876:44881	813440	15	True				
ANR	814782	Label	case 't' :	1263:1:44884:44892	813440	16	True				
ANR	814783	ExpressionStatement	"eprintf ( ""This command is deprecated use afvt instead\\n"" )"	1264:2:44896:44953	813440	17	True				
ANR	814784	CallExpression	"eprintf ( ""This command is deprecated use afvt instead\\n"" )"		813440	0					
ANR	814785	Callee	eprintf		813440	0					
ANR	814786	Identifier	eprintf		813440	0					
ANR	814787	ArgumentList	"""This command is deprecated use afvt instead\\n"""		813440	1					
ANR	814788	Argument	"""This command is deprecated use afvt instead\\n"""		813440	0					
ANR	814789	PrimaryExpression	"""This command is deprecated use afvt instead\\n"""		813440	0					
ANR	814790	BreakStatement	break ;	1265:2:44957:44962	813440	18	True				
ANR	814791	Label	case 's' :	1266:1:44965:44973	813440	19	True				
ANR	814792	Label	case 'g' :	1267:1:44976:44984	813440	20	True				
ANR	814793	IfStatement	if ( str [ 2 ] != '\\0' )		813440	21					
ANR	814794	Condition	str [ 2 ] != '\\0'	1268:6:44992:45005	813440	0	True				
ANR	814795	EqualityExpression	str [ 2 ] != '\\0'		813440	0		!=			
ANR	814796	ArrayIndexing	str [ 2 ]		813440	0					
ANR	814797	Identifier	str		813440	0					
ANR	814798	PrimaryExpression	2		813440	1					
ANR	814799	PrimaryExpression	'\\0'		813440	1					
ANR	814800	CompoundStatement		229:3:5675:5773	813440	1					
ANR	814801	IdentifierDeclStatement	int rw = 0 ;	1269:3:45013:45023	813440	0	True				
ANR	814802	IdentifierDecl	rw = 0		813440	0					
ANR	814803	IdentifierDeclType	int		813440	0					
ANR	814804	Identifier	rw		813440	1					
ANR	814805	AssignmentExpression	rw = 0		813440	2		=			
ANR	814806	Identifier	rw		813440	0					
ANR	814807	PrimaryExpression	0		813440	1					
ANR	814808	IdentifierDeclStatement	"int idx = r_num_math ( core -> num , str + 2 ) ;"	1270:3:45051:45092	813440	1	True				
ANR	814809	IdentifierDecl	"idx = r_num_math ( core -> num , str + 2 )"		813440	0					
ANR	814810	IdentifierDeclType	int		813440	0					
ANR	814811	Identifier	idx		813440	1					
ANR	814812	AssignmentExpression	"idx = r_num_math ( core -> num , str + 2 )"		813440	2		=			
ANR	814813	Identifier	idx		813440	0					
ANR	814814	CallExpression	"r_num_math ( core -> num , str + 2 )"		813440	1					
ANR	814815	Callee	r_num_math		813440	0					
ANR	814816	Identifier	r_num_math		813440	0					
ANR	814817	ArgumentList	core -> num		813440	1					
ANR	814818	Argument	core -> num		813440	0					
ANR	814819	PtrMemberAccess	core -> num		813440	0					
ANR	814820	Identifier	core		813440	0					
ANR	814821	Identifier	num		813440	1					
ANR	814822	Argument	str + 2		813440	1					
ANR	814823	AdditiveExpression	str + 2		813440	0		+			
ANR	814824	Identifier	str		813440	0					
ANR	814825	PrimaryExpression	2		813440	1					
ANR	814826	IdentifierDeclStatement	char * vaddr ;	1271:3:45097:45108	813440	2	True				
ANR	814827	IdentifierDecl	* vaddr		813440	0					
ANR	814828	IdentifierDeclType	char *		813440	0					
ANR	814829	Identifier	vaddr		813440	1					
ANR	814830	IdentifierDeclStatement	"char * p = strchr ( ostr , ' ' ) ;"	1272:3:45113:45141	813440	3	True				
ANR	814831	IdentifierDecl	"* p = strchr ( ostr , ' ' )"		813440	0					
ANR	814832	IdentifierDeclType	char *		813440	0					
ANR	814833	Identifier	p		813440	1					
ANR	814834	AssignmentExpression	"* p = strchr ( ostr , ' ' )"		813440	2		=			
ANR	814835	Identifier	p		813440	0					
ANR	814836	CallExpression	"strchr ( ostr , ' ' )"		813440	1					
ANR	814837	Callee	strchr		813440	0					
ANR	814838	Identifier	strchr		813440	0					
ANR	814839	ArgumentList	ostr		813440	1					
ANR	814840	Argument	ostr		813440	0					
ANR	814841	Identifier	ostr		813440	0					
ANR	814842	Argument	' '		813440	1					
ANR	814843	PrimaryExpression	' '		813440	0					
ANR	814844	IfStatement	if ( ! p )		813440	4					
ANR	814845	Condition	! p	1273:7:45150:45151	813440	0	True				
ANR	814846	UnaryOperationExpression	! p		813440	0					
ANR	814847	UnaryOperator	!		813440	0					
ANR	814848	Identifier	p		813440	1					
ANR	814849	CompoundStatement		220:11:5495:5495	813440	1					
ANR	814850	ExpressionStatement	"var_help ( core , type )"	1274:4:45160:45181	813440	0	True				
ANR	814851	CallExpression	"var_help ( core , type )"		813440	0					
ANR	814852	Callee	var_help		813440	0					
ANR	814853	Identifier	var_help		813440	0					
ANR	814854	ArgumentList	core		813440	1					
ANR	814855	Argument	core		813440	0					
ANR	814856	Identifier	core		813440	0					
ANR	814857	Argument	type		813440	1					
ANR	814858	Identifier	type		813440	0					
ANR	814859	BreakStatement	break ;	1275:4:45187:45192	813440	1	True				
ANR	814860	ExpressionStatement	r_str_trim ( p )	1277:3:45202:45216	813440	5	True				
ANR	814861	CallExpression	r_str_trim ( p )		813440	0					
ANR	814862	Callee	r_str_trim		813440	0					
ANR	814863	Identifier	r_str_trim		813440	0					
ANR	814864	ArgumentList	p		813440	1					
ANR	814865	Argument	p		813440	0					
ANR	814866	Identifier	p		813440	0					
ANR	814867	IdentifierDeclStatement	ut64 addr = core -> offset ;	1278:3:45221:45245	813440	6	True				
ANR	814868	IdentifierDecl	addr = core -> offset		813440	0					
ANR	814869	IdentifierDeclType	ut64		813440	0					
ANR	814870	Identifier	addr		813440	1					
ANR	814871	AssignmentExpression	addr = core -> offset		813440	2		=			
ANR	814872	Identifier	addr		813440	0					
ANR	814873	PtrMemberAccess	core -> offset		813440	1					
ANR	814874	Identifier	core		813440	0					
ANR	814875	Identifier	offset		813440	1					
ANR	814876	IfStatement	"if ( ( vaddr = strchr ( p , ' ' ) ) )"		813440	7					
ANR	814877	Condition	"vaddr = strchr ( p , ' ' )"	1279:7:45254:45279	813440	0	True				
ANR	814878	AssignmentExpression	"vaddr = strchr ( p , ' ' )"		813440	0		=			
ANR	814879	Identifier	vaddr		813440	0					
ANR	814880	CallExpression	"strchr ( p , ' ' )"		813440	1					
ANR	814881	Callee	strchr		813440	0					
ANR	814882	Identifier	strchr		813440	0					
ANR	814883	ArgumentList	p		813440	1					
ANR	814884	Argument	p		813440	0					
ANR	814885	Identifier	p		813440	0					
ANR	814886	Argument	' '		813440	1					
ANR	814887	PrimaryExpression	' '		813440	0					
ANR	814888	CompoundStatement		226:35:5623:5623	813440	1					
ANR	814889	ExpressionStatement	"addr = r_num_math ( core -> num , vaddr )"	1280:4:45288:45324	813440	0	True				
ANR	814890	AssignmentExpression	"addr = r_num_math ( core -> num , vaddr )"		813440	0		=			
ANR	814891	Identifier	addr		813440	0					
ANR	814892	CallExpression	"r_num_math ( core -> num , vaddr )"		813440	1					
ANR	814893	Callee	r_num_math		813440	0					
ANR	814894	Identifier	r_num_math		813440	0					
ANR	814895	ArgumentList	core -> num		813440	1					
ANR	814896	Argument	core -> num		813440	0					
ANR	814897	PtrMemberAccess	core -> num		813440	0					
ANR	814898	Identifier	core		813440	0					
ANR	814899	Identifier	num		813440	1					
ANR	814900	Argument	vaddr		813440	1					
ANR	814901	Identifier	vaddr		813440	0					
ANR	814902	IdentifierDeclStatement	"RAnalVar * var = r_anal_var_get ( core -> anal , fcn -> addr , str [ 0 ] , R_ANAL_VAR_SCOPE_LOCAL , idx ) ;"	1282:3:45334:45432	813440	8	True				
ANR	814903	IdentifierDecl	"* var = r_anal_var_get ( core -> anal , fcn -> addr , str [ 0 ] , R_ANAL_VAR_SCOPE_LOCAL , idx )"		813440	0					
ANR	814904	IdentifierDeclType	RAnalVar *		813440	0					
ANR	814905	Identifier	var		813440	1					
ANR	814906	AssignmentExpression	"* var = r_anal_var_get ( core -> anal , fcn -> addr , str [ 0 ] , R_ANAL_VAR_SCOPE_LOCAL , idx )"		813440	2		=			
ANR	814907	Identifier	var		813440	0					
ANR	814908	CallExpression	"r_anal_var_get ( core -> anal , fcn -> addr , str [ 0 ] , R_ANAL_VAR_SCOPE_LOCAL , idx )"		813440	1					
ANR	814909	Callee	r_anal_var_get		813440	0					
ANR	814910	Identifier	r_anal_var_get		813440	0					
ANR	814911	ArgumentList	core -> anal		813440	1					
ANR	814912	Argument	core -> anal		813440	0					
ANR	814913	PtrMemberAccess	core -> anal		813440	0					
ANR	814914	Identifier	core		813440	0					
ANR	814915	Identifier	anal		813440	1					
ANR	814916	Argument	fcn -> addr		813440	1					
ANR	814917	PtrMemberAccess	fcn -> addr		813440	0					
ANR	814918	Identifier	fcn		813440	0					
ANR	814919	Identifier	addr		813440	1					
ANR	814920	Argument	str [ 0 ]		813440	2					
ANR	814921	ArrayIndexing	str [ 0 ]		813440	0					
ANR	814922	Identifier	str		813440	0					
ANR	814923	PrimaryExpression	0		813440	1					
ANR	814924	Argument	R_ANAL_VAR_SCOPE_LOCAL		813440	3					
ANR	814925	Identifier	R_ANAL_VAR_SCOPE_LOCAL		813440	0					
ANR	814926	Argument	idx		813440	4					
ANR	814927	Identifier	idx		813440	0					
ANR	814928	IfStatement	if ( ! var )		813440	9					
ANR	814929	Condition	! var	1284:7:45441:45444	813440	0	True				
ANR	814930	UnaryOperationExpression	! var		813440	0					
ANR	814931	UnaryOperator	!		813440	0					
ANR	814932	Identifier	var		813440	1					
ANR	814933	CompoundStatement		231:13:5788:5788	813440	1					
ANR	814934	ExpressionStatement	"eprintf ( ""Cannot find variable with delta %d\\n"" , idx )"	1285:4:45453:45506	813440	0	True				
ANR	814935	CallExpression	"eprintf ( ""Cannot find variable with delta %d\\n"" , idx )"		813440	0					
ANR	814936	Callee	eprintf		813440	0					
ANR	814937	Identifier	eprintf		813440	0					
ANR	814938	ArgumentList	"""Cannot find variable with delta %d\\n"""		813440	1					
ANR	814939	Argument	"""Cannot find variable with delta %d\\n"""		813440	0					
ANR	814940	PrimaryExpression	"""Cannot find variable with delta %d\\n"""		813440	0					
ANR	814941	Argument	idx		813440	1					
ANR	814942	Identifier	idx		813440	0					
ANR	814943	ExpressionStatement	res = false	1286:4:45512:45523	813440	1	True				
ANR	814944	AssignmentExpression	res = false		813440	0		=			
ANR	814945	Identifier	res		813440	0					
ANR	814946	Identifier	false		813440	1					
ANR	814947	BreakStatement	break ;	1287:4:45529:45534	813440	2	True				
ANR	814948	ExpressionStatement	rw = ( str [ 1 ] == 'g' ) ? 0 : 1	1289:3:45544:45570	813440	10	True				
ANR	814949	AssignmentExpression	rw = ( str [ 1 ] == 'g' ) ? 0 : 1		813440	0		=			
ANR	814950	Identifier	rw		813440	0					
ANR	814951	ConditionalExpression	( str [ 1 ] == 'g' ) ? 0 : 1		813440	1					
ANR	814952	Condition	str [ 1 ] == 'g'		813440	0					
ANR	814953	EqualityExpression	str [ 1 ] == 'g'		813440	0		==			
ANR	814954	ArrayIndexing	str [ 1 ]		813440	0					
ANR	814955	Identifier	str		813440	0					
ANR	814956	PrimaryExpression	1		813440	1					
ANR	814957	PrimaryExpression	'g'		813440	1					
ANR	814958	PrimaryExpression	0		813440	1					
ANR	814959	PrimaryExpression	1		813440	2					
ANR	814960	ExpressionStatement	"r_anal_var_access ( core -> anal , fcn -> addr , str [ 0 ] , R_ANAL_VAR_SCOPE_LOCAL , idx , rw , addr )"	1290:3:45575:45668	813440	11	True				
ANR	814961	CallExpression	"r_anal_var_access ( core -> anal , fcn -> addr , str [ 0 ] , R_ANAL_VAR_SCOPE_LOCAL , idx , rw , addr )"		813440	0					
ANR	814962	Callee	r_anal_var_access		813440	0					
ANR	814963	Identifier	r_anal_var_access		813440	0					
ANR	814964	ArgumentList	core -> anal		813440	1					
ANR	814965	Argument	core -> anal		813440	0					
ANR	814966	PtrMemberAccess	core -> anal		813440	0					
ANR	814967	Identifier	core		813440	0					
ANR	814968	Identifier	anal		813440	1					
ANR	814969	Argument	fcn -> addr		813440	1					
ANR	814970	PtrMemberAccess	fcn -> addr		813440	0					
ANR	814971	Identifier	fcn		813440	0					
ANR	814972	Identifier	addr		813440	1					
ANR	814973	Argument	str [ 0 ]		813440	2					
ANR	814974	ArrayIndexing	str [ 0 ]		813440	0					
ANR	814975	Identifier	str		813440	0					
ANR	814976	PrimaryExpression	0		813440	1					
ANR	814977	Argument	R_ANAL_VAR_SCOPE_LOCAL		813440	3					
ANR	814978	Identifier	R_ANAL_VAR_SCOPE_LOCAL		813440	0					
ANR	814979	Argument	idx		813440	4					
ANR	814980	Identifier	idx		813440	0					
ANR	814981	Argument	rw		813440	5					
ANR	814982	Identifier	rw		813440	0					
ANR	814983	Argument	addr		813440	6					
ANR	814984	Identifier	addr		813440	0					
ANR	814985	ExpressionStatement	r_anal_var_free ( var )	1292:3:45673:45694	813440	12	True				
ANR	814986	CallExpression	r_anal_var_free ( var )		813440	0					
ANR	814987	Callee	r_anal_var_free		813440	0					
ANR	814988	Identifier	r_anal_var_free		813440	0					
ANR	814989	ArgumentList	var		813440	1					
ANR	814990	Argument	var		813440	0					
ANR	814991	Identifier	var		813440	0					
ANR	814992	ElseStatement	else		813440	0					
ANR	814993	CompoundStatement		240:9:6046:6046	813440	0					
ANR	814994	ExpressionStatement	"eprintf ( ""Missing argument\\n"" )"	1294:3:45710:45740	813440	0	True				
ANR	814995	CallExpression	"eprintf ( ""Missing argument\\n"" )"		813440	0					
ANR	814996	Callee	eprintf		813440	0					
ANR	814997	Identifier	eprintf		813440	0					
ANR	814998	ArgumentList	"""Missing argument\\n"""		813440	1					
ANR	814999	Argument	"""Missing argument\\n"""		813440	0					
ANR	815000	PrimaryExpression	"""Missing argument\\n"""		813440	0					
ANR	815001	BreakStatement	break ;	1296:2:45748:45753	813440	22	True				
ANR	815002	Label	case ' ' :	1297:1:45756:45764	813440	23	True				
ANR	815003	CompoundStatement		249:2:6186:6199	813440	24					
ANR	815004	IdentifierDeclStatement	const char * name ;	1298:2:45770:45786	813440	0	True				
ANR	815005	IdentifierDecl	* name		813440	0					
ANR	815006	IdentifierDeclType	const char *		813440	0					
ANR	815007	Identifier	name		813440	1					
ANR	815008	IdentifierDeclStatement	char * vartype ;	1299:2:45790:45803	813440	1	True				
ANR	815009	IdentifierDecl	* vartype		813440	0					
ANR	815010	IdentifierDeclType	char *		813440	0					
ANR	815011	Identifier	vartype		813440	1					
ANR	815012	IdentifierDeclStatement	bool isarg = false ;	1300:2:45807:45825	813440	2	True				
ANR	815013	IdentifierDecl	isarg = false		813440	0					
ANR	815014	IdentifierDeclType	bool		813440	0					
ANR	815015	Identifier	isarg		813440	1					
ANR	815016	AssignmentExpression	isarg = false		813440	2		=			
ANR	815017	Identifier	false		813440	0					
ANR	815018	Identifier	false		813440	1					
ANR	815019	IdentifierDeclStatement	int size = 4 ;	1301:2:45829:45841	813440	3	True				
ANR	815020	IdentifierDecl	size = 4		813440	0					
ANR	815021	IdentifierDeclType	int		813440	0					
ANR	815022	Identifier	size		813440	1					
ANR	815023	AssignmentExpression	size = 4		813440	2		=			
ANR	815024	Identifier	size		813440	0					
ANR	815025	PrimaryExpression	4		813440	1					
ANR	815026	IdentifierDeclStatement	int scope = 1 ;	1302:2:45845:45858	813440	4	True				
ANR	815027	IdentifierDecl	scope = 1		813440	0					
ANR	815028	IdentifierDeclType	int		813440	0					
ANR	815029	Identifier	scope		813440	1					
ANR	815030	AssignmentExpression	scope = 1		813440	2		=			
ANR	815031	Identifier	scope		813440	0					
ANR	815032	PrimaryExpression	1		813440	1					
ANR	815033	ForStatement	for ( str ++ ; * str == ' ' ; )		813440	5					
ANR	815034	ForInit	str ++ ;	1303:7:45867:45872	813440	0	True				
ANR	815035	PostIncDecOperationExpression	str ++		813440	0					
ANR	815036	Identifier	str		813440	0					
ANR	815037	IncDec	++		813440	1					
ANR	815038	Condition	* str == ' '	1303:14:45874:45884	813440	1	True				
ANR	815039	EqualityExpression	* str == ' '		813440	0		==			
ANR	815040	UnaryOperationExpression	* str		813440	0					
ANR	815041	UnaryOperator	*		813440	0					
ANR	815042	Identifier	str		813440	1					
ANR	815043	PrimaryExpression	' '		813440	1					
ANR	815044	ExpressionStatement	str ++	1303:28:45888:45893	813440	2	True				
ANR	815045	PostIncDecOperationExpression	str ++		813440	0					
ANR	815046	Identifier	str		813440	0					
ANR	815047	IncDec	++		813440	1					
ANR	815048	ExpressionStatement	"p = strchr ( str , ' ' )"	1304:2:45897:45918	813440	6	True				
ANR	815049	AssignmentExpression	"p = strchr ( str , ' ' )"		813440	0		=			
ANR	815050	Identifier	p		813440	0					
ANR	815051	CallExpression	"strchr ( str , ' ' )"		813440	1					
ANR	815052	Callee	strchr		813440	0					
ANR	815053	Identifier	strchr		813440	0					
ANR	815054	ArgumentList	str		813440	1					
ANR	815055	Argument	str		813440	0					
ANR	815056	Identifier	str		813440	0					
ANR	815057	Argument	' '		813440	1					
ANR	815058	PrimaryExpression	' '		813440	0					
ANR	815059	IfStatement	if ( ! p )		813440	7					
ANR	815060	Condition	! p	1305:6:45926:45927	813440	0	True				
ANR	815061	UnaryOperationExpression	! p		813440	0					
ANR	815062	UnaryOperator	!		813440	0					
ANR	815063	Identifier	p		813440	1					
ANR	815064	CompoundStatement		252:10:6271:6271	813440	1					
ANR	815065	ExpressionStatement	"var_help ( core , type )"	1306:3:45935:45956	813440	0	True				
ANR	815066	CallExpression	"var_help ( core , type )"		813440	0					
ANR	815067	Callee	var_help		813440	0					
ANR	815068	Identifier	var_help		813440	0					
ANR	815069	ArgumentList	core		813440	1					
ANR	815070	Argument	core		813440	0					
ANR	815071	Identifier	core		813440	0					
ANR	815072	Argument	type		813440	1					
ANR	815073	Identifier	type		813440	0					
ANR	815074	BreakStatement	break ;	1307:3:45961:45966	813440	1	True				
ANR	815075	ExpressionStatement	* p ++ = 0	1309:2:45974:45982	813440	8	True				
ANR	815076	AssignmentExpression	* p ++ = 0		813440	0		=			
ANR	815077	UnaryOperationExpression	* p ++		813440	0					
ANR	815078	UnaryOperator	*		813440	0					
ANR	815079	PostIncDecOperationExpression	p ++		813440	1					
ANR	815080	Identifier	p		813440	0					
ANR	815081	IncDec	++		813440	1					
ANR	815082	PrimaryExpression	0		813440	1					
ANR	815083	IfStatement	if ( type == 'r' )		813440	9					
ANR	815084	Condition	type == 'r'	1310:6:45990:46000	813440	0	True				
ANR	815085	EqualityExpression	type == 'r'		813440	0		==			
ANR	815086	Identifier	type		813440	0					
ANR	815087	PrimaryExpression	'r'		813440	1					
ANR	815088	CompoundStatement		258:3:6361:6411	813440	1					
ANR	815089	IdentifierDeclStatement	"RRegItem * i = r_reg_get ( core -> anal -> reg , str , - 1 ) ;"	1311:3:46020:46070	813440	0	True				
ANR	815090	IdentifierDecl	"* i = r_reg_get ( core -> anal -> reg , str , - 1 )"		813440	0					
ANR	815091	IdentifierDeclType	RRegItem *		813440	0					
ANR	815092	Identifier	i		813440	1					
ANR	815093	AssignmentExpression	"* i = r_reg_get ( core -> anal -> reg , str , - 1 )"		813440	2		=			
ANR	815094	Identifier	i		813440	0					
ANR	815095	CallExpression	"r_reg_get ( core -> anal -> reg , str , - 1 )"		813440	1					
ANR	815096	Callee	r_reg_get		813440	0					
ANR	815097	Identifier	r_reg_get		813440	0					
ANR	815098	ArgumentList	core -> anal -> reg		813440	1					
ANR	815099	Argument	core -> anal -> reg		813440	0					
ANR	815100	PtrMemberAccess	core -> anal -> reg		813440	0					
ANR	815101	PtrMemberAccess	core -> anal		813440	0					
ANR	815102	Identifier	core		813440	0					
ANR	815103	Identifier	anal		813440	1					
ANR	815104	Identifier	reg		813440	1					
ANR	815105	Argument	str		813440	1					
ANR	815106	Identifier	str		813440	0					
ANR	815107	Argument	- 1		813440	2					
ANR	815108	UnaryOperationExpression	- 1		813440	0					
ANR	815109	UnaryOperator	-		813440	0					
ANR	815110	PrimaryExpression	1		813440	1					
ANR	815111	IfStatement	if ( ! i )		813440	1					
ANR	815112	Condition	! i	1312:7:46079:46080	813440	0	True				
ANR	815113	UnaryOperationExpression	! i		813440	0					
ANR	815114	UnaryOperator	!		813440	0					
ANR	815115	Identifier	i		813440	1					
ANR	815116	CompoundStatement		259:11:6424:6424	813440	1					
ANR	815117	ExpressionStatement	"eprintf ( ""Register not found"" )"	1313:4:46089:46119	813440	0	True				
ANR	815118	CallExpression	"eprintf ( ""Register not found"" )"		813440	0					
ANR	815119	Callee	eprintf		813440	0					
ANR	815120	Identifier	eprintf		813440	0					
ANR	815121	ArgumentList	"""Register not found"""		813440	1					
ANR	815122	Argument	"""Register not found"""		813440	0					
ANR	815123	PrimaryExpression	"""Register not found"""		813440	0					
ANR	815124	BreakStatement	break ;	1314:4:46125:46130	813440	1	True				
ANR	815125	ExpressionStatement	delta = i -> index	1316:3:46140:46156	813440	2	True				
ANR	815126	AssignmentExpression	delta = i -> index		813440	0		=			
ANR	815127	Identifier	delta		813440	0					
ANR	815128	PtrMemberAccess	i -> index		813440	1					
ANR	815129	Identifier	i		813440	0					
ANR	815130	Identifier	index		813440	1					
ANR	815131	ExpressionStatement	isarg = true	1317:3:46161:46173	813440	3	True				
ANR	815132	AssignmentExpression	isarg = true		813440	0		=			
ANR	815133	Identifier	isarg		813440	0					
ANR	815134	Identifier	true		813440	1					
ANR	815135	ElseStatement	else		813440	0					
ANR	815136	CompoundStatement		265:9:6525:6525	813440	0					
ANR	815137	ExpressionStatement	"delta = r_num_math ( core -> num , str )"	1319:3:46189:46224	813440	0	True				
ANR	815138	AssignmentExpression	"delta = r_num_math ( core -> num , str )"		813440	0		=			
ANR	815139	Identifier	delta		813440	0					
ANR	815140	CallExpression	"r_num_math ( core -> num , str )"		813440	1					
ANR	815141	Callee	r_num_math		813440	0					
ANR	815142	Identifier	r_num_math		813440	0					
ANR	815143	ArgumentList	core -> num		813440	1					
ANR	815144	Argument	core -> num		813440	0					
ANR	815145	PtrMemberAccess	core -> num		813440	0					
ANR	815146	Identifier	core		813440	0					
ANR	815147	Identifier	num		813440	1					
ANR	815148	Argument	str		813440	1					
ANR	815149	Identifier	str		813440	0					
ANR	815150	ExpressionStatement	name = p	1321:2:46232:46240	813440	10	True				
ANR	815151	AssignmentExpression	name = p		813440	0		=			
ANR	815152	Identifier	name		813440	0					
ANR	815153	Identifier	p		813440	1					
ANR	815154	IfStatement	if ( ! name )		813440	11					
ANR	815155	Condition	! name	1322:6:46248:46252	813440	0	True				
ANR	815156	UnaryOperationExpression	! name		813440	0					
ANR	815157	UnaryOperator	!		813440	0					
ANR	815158	Identifier	name		813440	1					
ANR	815159	CompoundStatement		269:13:6596:6596	813440	1					
ANR	815160	ExpressionStatement	"eprintf ( ""Missing name\\n"" )"	1323:3:46260:46286	813440	0	True				
ANR	815161	CallExpression	"eprintf ( ""Missing name\\n"" )"		813440	0					
ANR	815162	Callee	eprintf		813440	0					
ANR	815163	Identifier	eprintf		813440	0					
ANR	815164	ArgumentList	"""Missing name\\n"""		813440	1					
ANR	815165	Argument	"""Missing name\\n"""		813440	0					
ANR	815166	PrimaryExpression	"""Missing name\\n"""		813440	0					
ANR	815167	BreakStatement	break ;	1324:3:46291:46296	813440	1	True				
ANR	815168	ExpressionStatement	"vartype = strchr ( name , ' ' )"	1326:2:46304:46332	813440	12	True				
ANR	815169	AssignmentExpression	"vartype = strchr ( name , ' ' )"		813440	0		=			
ANR	815170	Identifier	vartype		813440	0					
ANR	815171	CallExpression	"strchr ( name , ' ' )"		813440	1					
ANR	815172	Callee	strchr		813440	0					
ANR	815173	Identifier	strchr		813440	0					
ANR	815174	ArgumentList	name		813440	1					
ANR	815175	Argument	name		813440	0					
ANR	815176	Identifier	name		813440	0					
ANR	815177	Argument	' '		813440	1					
ANR	815178	PrimaryExpression	' '		813440	0					
ANR	815179	IfStatement	if ( ! vartype )		813440	13					
ANR	815180	Condition	! vartype	1327:6:46340:46347	813440	0	True				
ANR	815181	UnaryOperationExpression	! vartype		813440	0					
ANR	815182	UnaryOperator	!		813440	0					
ANR	815183	Identifier	vartype		813440	1					
ANR	815184	CompoundStatement		274:16:6691:6691	813440	1					
ANR	815185	ExpressionStatement	"vartype = ""int"""	1328:3:46355:46370	813440	0	True				
ANR	815186	AssignmentExpression	"vartype = ""int"""		813440	0		=			
ANR	815187	Identifier	vartype		813440	0					
ANR	815188	PrimaryExpression	"""int"""		813440	1					
ANR	815189	ElseStatement	else		813440	0					
ANR	815190	CompoundStatement		276:9:6722:6722	813440	0					
ANR	815191	ExpressionStatement	* vartype ++ = 0	1330:3:46386:46400	813440	0	True				
ANR	815192	AssignmentExpression	* vartype ++ = 0		813440	0		=			
ANR	815193	UnaryOperationExpression	* vartype ++		813440	0					
ANR	815194	UnaryOperator	*		813440	0					
ANR	815195	PostIncDecOperationExpression	vartype ++		813440	1					
ANR	815196	Identifier	vartype		813440	0					
ANR	815197	IncDec	++		813440	1					
ANR	815198	PrimaryExpression	0		813440	1					
ANR	815199	IfStatement	if ( ( type == 'b' ) && delta > 0 )		813440	14					
ANR	815200	Condition	( type == 'b' ) && delta > 0	1332:6:46412:46437	813440	0	True				
ANR	815201	AndExpression	( type == 'b' ) && delta > 0		813440	0		&&			
ANR	815202	EqualityExpression	type == 'b'		813440	0		==			
ANR	815203	Identifier	type		813440	0					
ANR	815204	PrimaryExpression	'b'		813440	1					
ANR	815205	RelationalExpression	delta > 0		813440	1		>			
ANR	815206	Identifier	delta		813440	0					
ANR	815207	PrimaryExpression	0		813440	1					
ANR	815208	CompoundStatement		279:34:6781:6781	813440	1					
ANR	815209	ExpressionStatement	isarg = true	1333:3:46445:46457	813440	0	True				
ANR	815210	AssignmentExpression	isarg = true		813440	0		=			
ANR	815211	Identifier	isarg		813440	0					
ANR	815212	Identifier	true		813440	1					
ANR	815213	ElseStatement	else		813440	0					
ANR	815214	IfStatement	if ( type == 's' && fcn && delta > fcn -> maxstack )		813440	0					
ANR	815215	Condition	type == 's' && fcn && delta > fcn -> maxstack	1334:13:46472:46514	813440	0	True				
ANR	815216	AndExpression	type == 's' && fcn && delta > fcn -> maxstack		813440	0		&&			
ANR	815217	EqualityExpression	type == 's'		813440	0		==			
ANR	815218	Identifier	type		813440	0					
ANR	815219	PrimaryExpression	's'		813440	1					
ANR	815220	AndExpression	fcn && delta > fcn -> maxstack		813440	1		&&			
ANR	815221	Identifier	fcn		813440	0					
ANR	815222	RelationalExpression	delta > fcn -> maxstack		813440	1		>			
ANR	815223	Identifier	delta		813440	0					
ANR	815224	PtrMemberAccess	fcn -> maxstack		813440	1					
ANR	815225	Identifier	fcn		813440	0					
ANR	815226	Identifier	maxstack		813440	1					
ANR	815227	CompoundStatement		281:58:6858:6858	813440	1					
ANR	815228	ExpressionStatement	isarg = true	1335:3:46522:46534	813440	0	True				
ANR	815229	AssignmentExpression	isarg = true		813440	0		=			
ANR	815230	Identifier	isarg		813440	0					
ANR	815231	Identifier	true		813440	1					
ANR	815232	IfStatement	if ( fcn )		813440	15					
ANR	815233	Condition	fcn	1337:6:46546:46548	813440	0	True				
ANR	815234	Identifier	fcn		813440	0					
ANR	815235	CompoundStatement		284:11:6892:6892	813440	1					
ANR	815236	ExpressionStatement	"r_anal_var_add ( core -> anal , fcn -> addr , scope , delta , type , vartype , size , isarg , name )"	1338:3:46556:46651	813440	0	True				
ANR	815237	CallExpression	"r_anal_var_add ( core -> anal , fcn -> addr , scope , delta , type , vartype , size , isarg , name )"		813440	0					
ANR	815238	Callee	r_anal_var_add		813440	0					
ANR	815239	Identifier	r_anal_var_add		813440	0					
ANR	815240	ArgumentList	core -> anal		813440	1					
ANR	815241	Argument	core -> anal		813440	0					
ANR	815242	PtrMemberAccess	core -> anal		813440	0					
ANR	815243	Identifier	core		813440	0					
ANR	815244	Identifier	anal		813440	1					
ANR	815245	Argument	fcn -> addr		813440	1					
ANR	815246	PtrMemberAccess	fcn -> addr		813440	0					
ANR	815247	Identifier	fcn		813440	0					
ANR	815248	Identifier	addr		813440	1					
ANR	815249	Argument	scope		813440	2					
ANR	815250	Identifier	scope		813440	0					
ANR	815251	Argument	delta		813440	3					
ANR	815252	Identifier	delta		813440	0					
ANR	815253	Argument	type		813440	4					
ANR	815254	Identifier	type		813440	0					
ANR	815255	Argument	vartype		813440	5					
ANR	815256	Identifier	vartype		813440	0					
ANR	815257	Argument	size		813440	6					
ANR	815258	Identifier	size		813440	0					
ANR	815259	Argument	isarg		813440	7					
ANR	815260	Identifier	isarg		813440	0					
ANR	815261	Argument	name		813440	8					
ANR	815262	Identifier	name		813440	0					
ANR	815263	ElseStatement	else		813440	0					
ANR	815264	CompoundStatement		288:9:7003:7003	813440	0					
ANR	815265	Statement	eprintf	1342:3:46667:46673	813440	0	True				
ANR	815266	Statement	(	1342:11:46675:46675	813440	1	True				
ANR	815267	Statement	"""Missing function at 0x%08"""	1342:12:46676:46702	813440	2	True				
ANR	815268	Statement	PFMT64x	1342:39:46703:46709	813440	3	True				
ANR	815269	Statement	"""\\n"""	1342:46:46710:46713	813440	4	True				
ANR	815270	Statement	","	1342:50:46714:46714	813440	5	True				
ANR	815271	Statement	core	1342:52:46716:46719	813440	6	True				
ANR	815272	Statement	->	1342:56:46720:46721	813440	7	True				
ANR	815273	Statement	offset	1342:58:46722:46727	813440	8	True				
ANR	815274	Statement	)	1342:64:46728:46728	813440	9	True				
ANR	815275	ExpressionStatement		1342:65:46729:46729	813440	10	True				
ANR	815276	BreakStatement	break ;	1345:2:46742:46747	813440	25	True				
ANR	815277	ExpressionStatement	free ( ostr )	1347:1:46753:46764	813440	10	True				
ANR	815278	CallExpression	free ( ostr )		813440	0					
ANR	815279	Callee	free		813440	0					
ANR	815280	Identifier	free		813440	0					
ANR	815281	ArgumentList	ostr		813440	1					
ANR	815282	Argument	ostr		813440	0					
ANR	815283	Identifier	ostr		813440	0					
ANR	815284	ReturnStatement	return res ;	1348:1:46767:46777	813440	11	True				
ANR	815285	Identifier	res		813440	0					
ANR	815286	ReturnType	static int		813440	1					
ANR	815287	Identifier	var_cmd		813440	2					
ANR	815288	ParameterList	"RCore * core , const char * str"		813440	3					
ANR	815289	Parameter	RCore * core	1054:19:39628:39638	813440	0	True				
ANR	815290	ParameterType	RCore *		813440	0					
ANR	815291	Identifier	core		813440	1					
ANR	815292	Parameter	const char * str	1054:32:39641:39655	813440	1	True				
ANR	815293	ParameterType	const char *		813440	0					
ANR	815294	Identifier	str		813440	1					
ANR	815295	CFGEntryNode	ENTRY		813440		True				
ANR	815296	CFGExitNode	EXIT		813440		True				
ANR	815297	Symbol	* v		813440						
ANR	815298	Symbol	core -> anal -> reg		813440						
ANR	815299	Symbol	* fcn		813440						
ANR	815300	Symbol	R_ANAL_VAR_KIND_SPV		813440						
ANR	815301	Symbol	* op		813440						
ANR	815302	Symbol	pj_string		813440						
ANR	815303	Symbol	delta		813440						
ANR	815304	Symbol	core -> offset		813440						
ANR	815305	Symbol	strchr		813440						
ANR	815306	Symbol	r_core_anal_op		813440						
ANR	815307	Symbol	type		813440						
ANR	815308	Symbol	r_anal_var_get_byname		813440						
ANR	815309	Symbol	r_str_trim_dup		813440						
ANR	815310	Symbol	* op -> var		813440						
ANR	815311	Symbol	isarg		813440						
ANR	815312	Symbol	* type ++		813440						
ANR	815313	Symbol	r_anal_var_get		813440						
ANR	815314	Symbol	R_ANAL_VAR_SCOPE_LOCAL		813440						
ANR	815315	Symbol	v -> name		813440						
ANR	815316	Symbol	core -> num		813440						
ANR	815317	Symbol	r_reg_get		813440						
ANR	815318	Symbol	res		813440						
ANR	815319	Symbol	* v1		813440						
ANR	815320	Symbol	NULL		813440						
ANR	815321	Symbol	var		813440						
ANR	815322	Symbol	v1 -> delta		813440						
ANR	815323	Symbol	iter		813440						
ANR	815324	Symbol	R_ANAL_VAR_KIND_BPV		813440						
ANR	815325	Symbol	list		813440						
ANR	815326	Symbol	v1 -> kind		813440						
ANR	815327	Symbol	str		813440						
ANR	815328	Symbol	core		813440						
ANR	815329	Symbol	v1 -> isarg		813440						
ANR	815330	Symbol	size		813440						
ANR	815331	Symbol	true		813440						
ANR	815332	Symbol	name		813440						
ANR	815333	Symbol	op -> var -> name		813440						
ANR	815334	Symbol	p -> name		813440						
ANR	815335	Symbol	idx		813440						
ANR	815336	Symbol	* old_name ++		813440						
ANR	815337	Symbol	vartype		813440						
ANR	815338	Symbol	rw		813440						
ANR	815339	Symbol	* core		813440						
ANR	815340	Symbol	vaddr		813440						
ANR	815341	Symbol	core -> anal		813440						
ANR	815342	Symbol	R_ANAL_OP_MASK_BASIC		813440						
ANR	815343	Symbol	fcn -> maxstack		813440						
ANR	815344	Symbol	* * op		813440						
ANR	815345	Symbol	r_num_math		813440						
ANR	815346	Symbol	fcn		813440						
ANR	815347	Symbol	r_core_cmd_strf		813440						
ANR	815348	Symbol	ostr		813440						
ANR	815349	Symbol	scope		813440						
ANR	815350	Symbol	r_str_trim_head		813440						
ANR	815351	Symbol	* vartype ++		813440						
ANR	815352	Symbol	* str		813440						
ANR	815353	Symbol	addr		813440						
ANR	815354	Symbol	* * core		813440						
ANR	815355	Symbol	R_ANAL_VAR_KIND_REG		813440						
ANR	815356	Symbol	new_name		813440						
ANR	815357	Symbol	i -> index		813440						
ANR	815358	Symbol	op		813440						
ANR	815359	Symbol	r_anal_var_all_list		813440						
ANR	815360	Symbol	a		813440						
ANR	815361	Symbol	* p ++		813440						
ANR	815362	Symbol	false		813440						
ANR	815363	Symbol	i		813440						
ANR	815364	Symbol	* a		813440						
ANR	815365	Symbol	op -> var		813440						
ANR	815366	Symbol	IS_DIGIT		813440						
ANR	815367	Symbol	p		813440						
ANR	815368	Symbol	p -> isarg		813440						
ANR	815369	Symbol	r_anal_get_fcn_in		813440						
ANR	815370	Symbol	v1 -> type		813440						
ANR	815371	Symbol	* core -> anal		813440						
ANR	815372	Symbol	* i		813440						
ANR	815373	Symbol	old_name		813440						
ANR	815374	Symbol	v		813440						
ANR	815375	Symbol	fcn -> addr		813440						
ANR	815376	Symbol	* p		813440						
ANR	815377	Symbol	pj		813440						
ANR	815378	Symbol	pj_new		813440						
ANR	815379	Symbol	v1		813440						
ANR	815380	Symbol	strdup		813440						
ANR	815381	Function	print_trampolines	1351:0:46782:47353							
ANR	815382	FunctionDef	"print_trampolines (RCore * core , ut64 a , ut64 b , size_t element_size)"		815381	0					
ANR	815383	CompoundStatement		1351:80:46862:47353	815381	0					
ANR	815384	IdentifierDeclStatement	int i ;	1352:1:46865:46870	815381	0	True				
ANR	815385	IdentifierDecl	i		815381	0					
ANR	815386	IdentifierDeclType	int		815381	0					
ANR	815387	Identifier	i		815381	1					
ANR	815388	ForStatement	for ( i = 0 ; i < core -> blocksize ; i += element_size )		815381	1					
ANR	815389	ForInit	i = 0 ;	1353:6:46878:46883	815381	0	True				
ANR	815390	AssignmentExpression	i = 0		815381	0		=			
ANR	815391	Identifier	i		815381	0					
ANR	815392	PrimaryExpression	0		815381	1					
ANR	815393	Condition	i < core -> blocksize	1353:13:46885:46903	815381	1	True				
ANR	815394	RelationalExpression	i < core -> blocksize		815381	0		<			
ANR	815395	Identifier	i		815381	0					
ANR	815396	PtrMemberAccess	core -> blocksize		815381	1					
ANR	815397	Identifier	core		815381	0					
ANR	815398	Identifier	blocksize		815381	1					
ANR	815399	AssignmentExpression	i += element_size	1353:34:46906:46922	815381	2	True	+=			
ANR	815400	Identifier	i		815381	0					
ANR	815401	Identifier	element_size		815381	1					
ANR	815402	CompoundStatement		4:2:66:72	815381	3					
ANR	815403	IdentifierDeclStatement	ut32 n ;	1354:2:46929:46935	815381	0	True				
ANR	815404	IdentifierDecl	n		815381	0					
ANR	815405	IdentifierDeclType	ut32		815381	0					
ANR	815406	Identifier	n		815381	1					
ANR	815407	ExpressionStatement	"memcpy ( & n , core -> block + i , sizeof ( ut32 ) )"	1355:2:46939:46982	815381	1	True				
ANR	815408	CallExpression	"memcpy ( & n , core -> block + i , sizeof ( ut32 ) )"		815381	0					
ANR	815409	Callee	memcpy		815381	0					
ANR	815410	Identifier	memcpy		815381	0					
ANR	815411	ArgumentList	& n		815381	1					
ANR	815412	Argument	& n		815381	0					
ANR	815413	UnaryOperationExpression	& n		815381	0					
ANR	815414	UnaryOperator	&		815381	0					
ANR	815415	Identifier	n		815381	1					
ANR	815416	Argument	core -> block + i		815381	1					
ANR	815417	AdditiveExpression	core -> block + i		815381	0		+			
ANR	815418	PtrMemberAccess	core -> block		815381	0					
ANR	815419	Identifier	core		815381	0					
ANR	815420	Identifier	block		815381	1					
ANR	815421	Identifier	i		815381	1					
ANR	815422	Argument	sizeof ( ut32 )		815381	2					
ANR	815423	SizeofExpression	sizeof ( ut32 )		815381	0					
ANR	815424	Sizeof	sizeof		815381	0					
ANR	815425	SizeofOperand	ut32		815381	1					
ANR	815426	IfStatement	if ( n >= a && n <= b )		815381	2					
ANR	815427	Condition	n >= a && n <= b	1356:6:46990:47005	815381	0	True				
ANR	815428	AndExpression	n >= a && n <= b		815381	0		&&			
ANR	815429	RelationalExpression	n >= a		815381	0		>=			
ANR	815430	Identifier	n		815381	0					
ANR	815431	Identifier	a		815381	1					
ANR	815432	RelationalExpression	n <= b		815381	1		<=			
ANR	815433	Identifier	n		815381	0					
ANR	815434	Identifier	b		815381	1					
ANR	815435	CompoundStatement		6:24:145:145	815381	1					
ANR	815436	IfStatement	if ( element_size == 4 )		815381	0					
ANR	815437	Condition	element_size == 4	1357:7:47017:47033	815381	0	True				
ANR	815438	EqualityExpression	element_size == 4		815381	0		==			
ANR	815439	Identifier	element_size		815381	0					
ANR	815440	PrimaryExpression	4		815381	1					
ANR	815441	CompoundStatement		7:26:173:173	815381	1					
ANR	815442	Statement	r_cons_printf	1358:4:47042:47054	815381	0	True				
ANR	815443	Statement	(	1358:18:47056:47056	815381	1	True				
ANR	815444	Statement	"""f trampoline.%x @ 0x%"""	1358:19:47057:47079	815381	2	True				
ANR	815445	Statement	PFMT64x	1358:43:47081:47087	815381	3	True				
ANR	815446	Statement	"""\\n"""	1358:51:47089:47092	815381	4	True				
ANR	815447	Statement	","	1358:55:47093:47093	815381	5	True				
ANR	815448	Statement	n	1358:57:47095:47095	815381	6	True				
ANR	815449	Statement	","	1358:58:47096:47096	815381	7	True				
ANR	815450	Statement	core	1358:60:47098:47101	815381	8	True				
ANR	815451	Statement	->	1358:64:47102:47103	815381	9	True				
ANR	815452	Statement	offset	1358:66:47104:47109	815381	10	True				
ANR	815453	Statement	+	1358:73:47111:47111	815381	11	True				
ANR	815454	Statement	i	1358:75:47113:47113	815381	12	True				
ANR	815455	Statement	)	1358:76:47114:47114	815381	13	True				
ANR	815456	ExpressionStatement		1358:77:47115:47115	815381	14	True				
ANR	815457	ElseStatement	else		815381	0					
ANR	815458	CompoundStatement		9:10:264:264	815381	0					
ANR	815459	Statement	r_cons_printf	1360:4:47133:47145	815381	0	True				
ANR	815460	Statement	(	1360:18:47147:47147	815381	1	True				
ANR	815461	Statement	"""f trampoline.%"""	1360:19:47148:47163	815381	2	True				
ANR	815462	Statement	PFMT64x	1360:36:47165:47171	815381	3	True				
ANR	815463	Statement	""" @ 0x%"""	1360:44:47173:47180	815381	4	True				
ANR	815464	Statement	PFMT64x	1360:53:47182:47188	815381	5	True				
ANR	815465	Statement	"""\\n"""	1360:61:47190:47193	815381	6	True				
ANR	815466	Statement	","	1360:65:47194:47194	815381	7	True				
ANR	815467	Statement	n	1360:67:47196:47196	815381	8	True				
ANR	815468	Statement	","	1360:68:47197:47197	815381	9	True				
ANR	815469	Statement	core	1360:70:47199:47202	815381	10	True				
ANR	815470	Statement	->	1360:74:47203:47204	815381	11	True				
ANR	815471	Statement	offset	1360:76:47205:47210	815381	12	True				
ANR	815472	Statement	+	1360:83:47212:47212	815381	13	True				
ANR	815473	Statement	i	1360:85:47214:47214	815381	14	True				
ANR	815474	Statement	)	1360:86:47215:47215	815381	15	True				
ANR	815475	ExpressionStatement		1360:87:47216:47216	815381	16	True				
ANR	815476	Statement	r_cons_printf	1362:3:47226:47238	815381	1	True				
ANR	815477	Statement	(	1362:17:47240:47240	815381	2	True				
ANR	815478	Statement	"""Cd %u @ 0x%"""	1362:18:47241:47253	815381	3	True				
ANR	815479	Statement	PFMT64x	1362:32:47255:47261	815381	4	True				
ANR	815480	Statement	""":%u\\n"""	1362:40:47263:47269	815381	5	True				
ANR	815481	Statement	","	1362:47:47270:47270	815381	6	True				
ANR	815482	Statement	element_size	1362:49:47272:47283	815381	7	True				
ANR	815483	Statement	","	1362:61:47284:47284	815381	8	True				
ANR	815484	Statement	core	1362:63:47286:47289	815381	9	True				
ANR	815485	Statement	->	1362:67:47290:47291	815381	10	True				
ANR	815486	Statement	offset	1362:69:47292:47297	815381	11	True				
ANR	815487	Statement	+	1362:76:47299:47299	815381	12	True				
ANR	815488	Statement	i	1362:78:47301:47301	815381	13	True				
ANR	815489	Statement	","	1362:79:47302:47302	815381	14	True				
ANR	815490	Statement	element_size	1362:81:47304:47315	815381	15	True				
ANR	815491	Statement	)	1362:93:47316:47316	815381	16	True				
ANR	815492	ExpressionStatement		1362:94:47317:47317	815381	17	True				
ANR	815493	ReturnType	static void		815381	1					
ANR	815494	Identifier	print_trampolines		815381	2					
ANR	815495	ParameterList	"RCore * core , ut64 a , ut64 b , size_t element_size"		815381	3					
ANR	815496	Parameter	RCore * core	1351:30:46812:46822	815381	0	True				
ANR	815497	ParameterType	RCore *		815381	0					
ANR	815498	Identifier	core		815381	1					
ANR	815499	Parameter	ut64 a	1351:43:46825:46830	815381	1	True				
ANR	815500	ParameterType	ut64		815381	0					
ANR	815501	Identifier	a		815381	1					
ANR	815502	Parameter	ut64 b	1351:51:46833:46838	815381	2	True				
ANR	815503	ParameterType	ut64		815381	0					
ANR	815504	Identifier	b		815381	1					
ANR	815505	Parameter	size_t element_size	1351:59:46841:46859	815381	3	True				
ANR	815506	ParameterType	size_t		815381	0					
ANR	815507	Identifier	element_size		815381	1					
ANR	815508	CFGEntryNode	ENTRY		815381		True				
ANR	815509	CFGExitNode	EXIT		815381		True				
ANR	815510	Symbol	core -> blocksize		815381						
ANR	815511	Symbol	core		815381						
ANR	815512	Symbol	a		815381						
ANR	815513	Symbol	element_size		815381						
ANR	815514	Symbol	b		815381						
ANR	815515	Symbol	& n		815381						
ANR	815516	Symbol	core -> block		815381						
ANR	815517	Symbol	* core		815381						
ANR	815518	Symbol	i		815381						
ANR	815519	Symbol	n		815381						
ANR	815520	Function	cmd_anal_trampoline	1368:0:47356:47789							
ANR	815521	FunctionDef	"cmd_anal_trampoline (RCore * core , const char * input)"		815520	0					
ANR	815522	CompoundStatement		1368:64:47420:47789	815520	0					
ANR	815523	IdentifierDeclStatement	"int bits = r_config_get_i ( core -> config , ""asm.bits"" ) ;"	1369:1:47423:47475	815520	0	True				
ANR	815524	IdentifierDecl	"bits = r_config_get_i ( core -> config , ""asm.bits"" )"		815520	0					
ANR	815525	IdentifierDeclType	int		815520	0					
ANR	815526	Identifier	bits		815520	1					
ANR	815527	AssignmentExpression	"bits = r_config_get_i ( core -> config , ""asm.bits"" )"		815520	2		=			
ANR	815528	Identifier	bits		815520	0					
ANR	815529	CallExpression	"r_config_get_i ( core -> config , ""asm.bits"" )"		815520	1					
ANR	815530	Callee	r_config_get_i		815520	0					
ANR	815531	Identifier	r_config_get_i		815520	0					
ANR	815532	ArgumentList	core -> config		815520	1					
ANR	815533	Argument	core -> config		815520	0					
ANR	815534	PtrMemberAccess	core -> config		815520	0					
ANR	815535	Identifier	core		815520	0					
ANR	815536	Identifier	config		815520	1					
ANR	815537	Argument	"""asm.bits"""		815520	1					
ANR	815538	PrimaryExpression	"""asm.bits"""		815520	0					
ANR	815539	IdentifierDeclStatement	"char * p , * inp = strdup ( input ) ;"	1370:1:47478:47508	815520	1	True				
ANR	815540	IdentifierDecl	* p		815520	0					
ANR	815541	IdentifierDeclType	char *		815520	0					
ANR	815542	Identifier	p		815520	1					
ANR	815543	IdentifierDecl	* inp = strdup ( input )		815520	1					
ANR	815544	IdentifierDeclType	char *		815520	0					
ANR	815545	Identifier	inp		815520	1					
ANR	815546	AssignmentExpression	* inp = strdup ( input )		815520	2		=			
ANR	815547	Identifier	inp		815520	0					
ANR	815548	CallExpression	strdup ( input )		815520	1					
ANR	815549	Callee	strdup		815520	0					
ANR	815550	Identifier	strdup		815520	0					
ANR	815551	ArgumentList	input		815520	1					
ANR	815552	Argument	input		815520	0					
ANR	815553	Identifier	input		815520	0					
ANR	815554	ExpressionStatement	"p = strchr ( inp , ' ' )"	1371:1:47511:47532	815520	2	True				
ANR	815555	AssignmentExpression	"p = strchr ( inp , ' ' )"		815520	0		=			
ANR	815556	Identifier	p		815520	0					
ANR	815557	CallExpression	"strchr ( inp , ' ' )"		815520	1					
ANR	815558	Callee	strchr		815520	0					
ANR	815559	Identifier	strchr		815520	0					
ANR	815560	ArgumentList	inp		815520	1					
ANR	815561	Argument	inp		815520	0					
ANR	815562	Identifier	inp		815520	0					
ANR	815563	Argument	' '		815520	1					
ANR	815564	PrimaryExpression	' '		815520	0					
ANR	815565	IfStatement	if ( p )		815520	3					
ANR	815566	Condition	p	1372:5:47539:47539	815520	0	True				
ANR	815567	Identifier	p		815520	0					
ANR	815568	CompoundStatement		5:8:121:121	815520	1					
ANR	815569	ExpressionStatement	* p = 0	1373:2:47546:47552	815520	0	True				
ANR	815570	AssignmentExpression	* p = 0		815520	0		=			
ANR	815571	UnaryOperationExpression	* p		815520	0					
ANR	815572	UnaryOperator	*		815520	0					
ANR	815573	Identifier	p		815520	1					
ANR	815574	PrimaryExpression	0		815520	1					
ANR	815575	IdentifierDeclStatement	"ut64 a = r_num_math ( core -> num , inp ) ;"	1375:1:47558:47594	815520	4	True				
ANR	815576	IdentifierDecl	"a = r_num_math ( core -> num , inp )"		815520	0					
ANR	815577	IdentifierDeclType	ut64		815520	0					
ANR	815578	Identifier	a		815520	1					
ANR	815579	AssignmentExpression	"a = r_num_math ( core -> num , inp )"		815520	2		=			
ANR	815580	Identifier	a		815520	0					
ANR	815581	CallExpression	"r_num_math ( core -> num , inp )"		815520	1					
ANR	815582	Callee	r_num_math		815520	0					
ANR	815583	Identifier	r_num_math		815520	0					
ANR	815584	ArgumentList	core -> num		815520	1					
ANR	815585	Argument	core -> num		815520	0					
ANR	815586	PtrMemberAccess	core -> num		815520	0					
ANR	815587	Identifier	core		815520	0					
ANR	815588	Identifier	num		815520	1					
ANR	815589	Argument	inp		815520	1					
ANR	815590	Identifier	inp		815520	0					
ANR	815591	IdentifierDeclStatement	"ut64 b = p ? r_num_math ( core -> num , p + 1 ) : 0 ;"	1376:1:47597:47641	815520	5	True				
ANR	815592	IdentifierDecl	"b = p ? r_num_math ( core -> num , p + 1 ) : 0"		815520	0					
ANR	815593	IdentifierDeclType	ut64		815520	0					
ANR	815594	Identifier	b		815520	1					
ANR	815595	AssignmentExpression	"b = p ? r_num_math ( core -> num , p + 1 ) : 0"		815520	2		=			
ANR	815596	Identifier	b		815520	0					
ANR	815597	ConditionalExpression	"p ? r_num_math ( core -> num , p + 1 ) : 0"		815520	1					
ANR	815598	Condition	p		815520	0					
ANR	815599	Identifier	p		815520	0					
ANR	815600	CallExpression	"r_num_math ( core -> num , p + 1 )"		815520	1					
ANR	815601	Callee	r_num_math		815520	0					
ANR	815602	Identifier	r_num_math		815520	0					
ANR	815603	ArgumentList	core -> num		815520	1					
ANR	815604	Argument	core -> num		815520	0					
ANR	815605	PtrMemberAccess	core -> num		815520	0					
ANR	815606	Identifier	core		815520	0					
ANR	815607	Identifier	num		815520	1					
ANR	815608	Argument	p + 1		815520	1					
ANR	815609	AdditiveExpression	p + 1		815520	0		+			
ANR	815610	Identifier	p		815520	0					
ANR	815611	PrimaryExpression	1		815520	1					
ANR	815612	PrimaryExpression	0		815520	2					
ANR	815613	ExpressionStatement	free ( inp )	1377:1:47644:47654	815520	6	True				
ANR	815614	CallExpression	free ( inp )		815520	0					
ANR	815615	Callee	free		815520	0					
ANR	815616	Identifier	free		815520	0					
ANR	815617	ArgumentList	inp		815520	1					
ANR	815618	Argument	inp		815520	0					
ANR	815619	Identifier	inp		815520	0					
ANR	815620	SwitchStatement	switch ( bits )		815520	7					
ANR	815621	Condition	bits	1379:9:47666:47669	815520	0	True				
ANR	815622	Identifier	bits		815520	0					
ANR	815623	CompoundStatement		12:15:251:251	815520	1					
ANR	815624	Label	case 32 :	1380:1:47675:47682	815520	0	True				
ANR	815625	ExpressionStatement	"print_trampolines ( core , a , b , 4 )"	1381:2:47686:47719	815520	1	True				
ANR	815626	CallExpression	"print_trampolines ( core , a , b , 4 )"		815520	0					
ANR	815627	Callee	print_trampolines		815520	0					
ANR	815628	Identifier	print_trampolines		815520	0					
ANR	815629	ArgumentList	core		815520	1					
ANR	815630	Argument	core		815520	0					
ANR	815631	Identifier	core		815520	0					
ANR	815632	Argument	a		815520	1					
ANR	815633	Identifier	a		815520	0					
ANR	815634	Argument	b		815520	2					
ANR	815635	Identifier	b		815520	0					
ANR	815636	Argument	4		815520	3					
ANR	815637	PrimaryExpression	4		815520	0					
ANR	815638	BreakStatement	break ;	1382:2:47723:47728	815520	2	True				
ANR	815639	Label	case 64 :	1383:1:47731:47738	815520	3	True				
ANR	815640	ExpressionStatement	"print_trampolines ( core , a , b , 8 )"	1384:2:47742:47775	815520	4	True				
ANR	815641	CallExpression	"print_trampolines ( core , a , b , 8 )"		815520	0					
ANR	815642	Callee	print_trampolines		815520	0					
ANR	815643	Identifier	print_trampolines		815520	0					
ANR	815644	ArgumentList	core		815520	1					
ANR	815645	Argument	core		815520	0					
ANR	815646	Identifier	core		815520	0					
ANR	815647	Argument	a		815520	1					
ANR	815648	Identifier	a		815520	0					
ANR	815649	Argument	b		815520	2					
ANR	815650	Identifier	b		815520	0					
ANR	815651	Argument	8		815520	3					
ANR	815652	PrimaryExpression	8		815520	0					
ANR	815653	BreakStatement	break ;	1385:2:47779:47784	815520	5	True				
ANR	815654	ReturnType	static void		815520	1					
ANR	815655	Identifier	cmd_anal_trampoline		815520	2					
ANR	815656	ParameterList	"RCore * core , const char * input"		815520	3					
ANR	815657	Parameter	RCore * core	1368:32:47388:47398	815520	0	True				
ANR	815658	ParameterType	RCore *		815520	0					
ANR	815659	Identifier	core		815520	1					
ANR	815660	Parameter	const char * input	1368:45:47401:47417	815520	1	True				
ANR	815661	ParameterType	const char *		815520	0					
ANR	815662	Identifier	input		815520	1					
ANR	815663	CFGEntryNode	ENTRY		815520		True				
ANR	815664	CFGExitNode	EXIT		815520		True				
ANR	815665	Symbol	core -> config		815520						
ANR	815666	Symbol	a		815520						
ANR	815667	Symbol	b		815520						
ANR	815668	Symbol	bits		815520						
ANR	815669	Symbol	* core		815520						
ANR	815670	Symbol	strchr		815520						
ANR	815671	Symbol	inp		815520						
ANR	815672	Symbol	r_num_math		815520						
ANR	815673	Symbol	p		815520						
ANR	815674	Symbol	core		815520						
ANR	815675	Symbol	input		815520						
ANR	815676	Symbol	r_config_get_i		815520						
ANR	815677	Symbol	* p		815520						
ANR	815678	Symbol	strdup		815520						
ANR	815679	Symbol	core -> num		815520						
ANR	815680	Function	syscallNumber	1389:0:47792:47881							
ANR	815681	FunctionDef	syscallNumber (int n)		815680	0					
ANR	815682	CompoundStatement		1389:40:47832:47881	815680	0					
ANR	815683	ReturnStatement	"return sdb_fmt ( n > 1000 ? ""0x%x"" : ""%d"" , n ) ;"	1390:1:47835:47879	815680	0	True				
ANR	815684	CallExpression	"sdb_fmt ( n > 1000 ? ""0x%x"" : ""%d"" , n )"		815680	0					
ANR	815685	Callee	sdb_fmt		815680	0					
ANR	815686	Identifier	sdb_fmt		815680	0					
ANR	815687	ArgumentList	"n > 1000 ? ""0x%x"" : ""%d"""		815680	1					
ANR	815688	Argument	"n > 1000 ? ""0x%x"" : ""%d"""		815680	0					
ANR	815689	ConditionalExpression	"n > 1000 ? ""0x%x"" : ""%d"""		815680	0					
ANR	815690	Condition	n > 1000		815680	0					
ANR	815691	RelationalExpression	n > 1000		815680	0		>			
ANR	815692	Identifier	n		815680	0					
ANR	815693	PrimaryExpression	1000		815680	1					
ANR	815694	PrimaryExpression	"""0x%x"""		815680	1					
ANR	815695	PrimaryExpression	"""%d"""		815680	2					
ANR	815696	Argument	n		815680	1					
ANR	815697	Identifier	n		815680	0					
ANR	815698	ReturnType	static const char *		815680	1					
ANR	815699	Identifier	syscallNumber		815680	2					
ANR	815700	ParameterList	int n		815680	3					
ANR	815701	Parameter	int n	1389:33:47825:47829	815680	0	True				
ANR	815702	ParameterType	int		815680	0					
ANR	815703	Identifier	n		815680	1					
ANR	815704	CFGEntryNode	ENTRY		815680		True				
ANR	815705	CFGExitNode	EXIT		815680		True				
ANR	815706	Symbol	sdb_fmt		815680						
ANR	815707	Symbol	n		815680						
ANR	815708	Function	cmd_syscall_dostr	1393:0:47884:50206							
ANR	815709	FunctionDef	"cmd_syscall_dostr (RCore * core , st64 n , ut64 addr)"		815708	0					
ANR	815710	CompoundStatement		1393:62:47946:50206	815708	0					
ANR	815711	IdentifierDeclStatement	int i ;	1394:1:47949:47954	815708	0	True				
ANR	815712	IdentifierDecl	i		815708	0					
ANR	815713	IdentifierDeclType	int		815708	0					
ANR	815714	Identifier	i		815708	1					
ANR	815715	IdentifierDeclStatement	char str [ 64 ] ;	1395:1:47957:47969	815708	1	True				
ANR	815716	IdentifierDecl	str [ 64 ]		815708	0					
ANR	815717	IdentifierDeclType	char [ 64 ]		815708	0					
ANR	815718	Identifier	str		815708	1					
ANR	815719	PrimaryExpression	64		815708	2					
ANR	815720	IdentifierDeclStatement	st64 N = n ;	1396:1:47972:47982	815708	2	True				
ANR	815721	IdentifierDecl	N = n		815708	0					
ANR	815722	IdentifierDeclType	st64		815708	0					
ANR	815723	Identifier	N		815708	1					
ANR	815724	AssignmentExpression	N = n		815708	2		=			
ANR	815725	Identifier	n		815708	0					
ANR	815726	Identifier	n		815708	1					
ANR	815727	IdentifierDeclStatement	int defVector = r_syscall_get_swi ( core -> anal -> syscall ) ;	1397:1:47985:48040	815708	3	True				
ANR	815728	IdentifierDecl	defVector = r_syscall_get_swi ( core -> anal -> syscall )		815708	0					
ANR	815729	IdentifierDeclType	int		815708	0					
ANR	815730	Identifier	defVector		815708	1					
ANR	815731	AssignmentExpression	defVector = r_syscall_get_swi ( core -> anal -> syscall )		815708	2		=			
ANR	815732	Identifier	defVector		815708	0					
ANR	815733	CallExpression	r_syscall_get_swi ( core -> anal -> syscall )		815708	1					
ANR	815734	Callee	r_syscall_get_swi		815708	0					
ANR	815735	Identifier	r_syscall_get_swi		815708	0					
ANR	815736	ArgumentList	core -> anal -> syscall		815708	1					
ANR	815737	Argument	core -> anal -> syscall		815708	0					
ANR	815738	PtrMemberAccess	core -> anal -> syscall		815708	0					
ANR	815739	PtrMemberAccess	core -> anal		815708	0					
ANR	815740	Identifier	core		815708	0					
ANR	815741	Identifier	anal		815708	1					
ANR	815742	Identifier	syscall		815708	1					
ANR	815743	IfStatement	if ( defVector > 0 )		815708	4					
ANR	815744	Condition	defVector > 0	1398:5:48047:48059	815708	0	True				
ANR	815745	RelationalExpression	defVector > 0		815708	0		>			
ANR	815746	Identifier	defVector		815708	0					
ANR	815747	PrimaryExpression	0		815708	1					
ANR	815748	CompoundStatement		6:20:115:115	815708	1					
ANR	815749	ExpressionStatement	n = - 1	1399:2:48066:48072	815708	0	True				
ANR	815750	AssignmentExpression	n = - 1		815708	0		=			
ANR	815751	Identifier	n		815708	0					
ANR	815752	UnaryOperationExpression	- 1		815708	1					
ANR	815753	UnaryOperator	-		815708	0					
ANR	815754	PrimaryExpression	1		815708	1					
ANR	815755	IfStatement	if ( n == - 1 || defVector > 0 )		815708	5					
ANR	815756	Condition	n == - 1 || defVector > 0	1401:5:48082:48105	815708	0	True				
ANR	815757	OrExpression	n == - 1 || defVector > 0		815708	0		||			
ANR	815758	EqualityExpression	n == - 1		815708	0		==			
ANR	815759	Identifier	n		815708	0					
ANR	815760	UnaryOperationExpression	- 1		815708	1					
ANR	815761	UnaryOperator	-		815708	0					
ANR	815762	PrimaryExpression	1		815708	1					
ANR	815763	RelationalExpression	defVector > 0		815708	1		>			
ANR	815764	Identifier	defVector		815708	0					
ANR	815765	PrimaryExpression	0		815708	1					
ANR	815766	CompoundStatement		9:31:161:161	815708	1					
ANR	815767	ExpressionStatement	"n = ( int ) r_debug_reg_get ( core -> dbg , ""oeax"" )"	1402:2:48112:48156	815708	0	True				
ANR	815768	AssignmentExpression	"n = ( int ) r_debug_reg_get ( core -> dbg , ""oeax"" )"		815708	0		=			
ANR	815769	Identifier	n		815708	0					
ANR	815770	CastExpression	"( int ) r_debug_reg_get ( core -> dbg , ""oeax"" )"		815708	1					
ANR	815771	CastTarget	int		815708	0					
ANR	815772	CallExpression	"r_debug_reg_get ( core -> dbg , ""oeax"" )"		815708	1					
ANR	815773	Callee	r_debug_reg_get		815708	0					
ANR	815774	Identifier	r_debug_reg_get		815708	0					
ANR	815775	ArgumentList	core -> dbg		815708	1					
ANR	815776	Argument	core -> dbg		815708	0					
ANR	815777	PtrMemberAccess	core -> dbg		815708	0					
ANR	815778	Identifier	core		815708	0					
ANR	815779	Identifier	dbg		815708	1					
ANR	815780	Argument	"""oeax"""		815708	1					
ANR	815781	PrimaryExpression	"""oeax"""		815708	0					
ANR	815782	IfStatement	if ( ! n || n == - 1 )		815708	1					
ANR	815783	Condition	! n || n == - 1	1403:6:48164:48176	815708	0	True				
ANR	815784	OrExpression	! n || n == - 1		815708	0		||			
ANR	815785	UnaryOperationExpression	! n		815708	0					
ANR	815786	UnaryOperator	!		815708	0					
ANR	815787	Identifier	n		815708	1					
ANR	815788	EqualityExpression	n == - 1		815708	1		==			
ANR	815789	Identifier	n		815708	0					
ANR	815790	UnaryOperationExpression	- 1		815708	1					
ANR	815791	UnaryOperator	-		815708	0					
ANR	815792	PrimaryExpression	1		815708	1					
ANR	815793	CompoundStatement		12:3:237:301	815708	1					
ANR	815794	IdentifierDeclStatement	"const char * a0 = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN ) ;"	1404:3:48184:48248	815708	0	True				
ANR	815795	IdentifierDecl	"* a0 = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN )"		815708	0					
ANR	815796	IdentifierDeclType	const char *		815708	0					
ANR	815797	Identifier	a0		815708	1					
ANR	815798	AssignmentExpression	"* a0 = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN )"		815708	2		=			
ANR	815799	Identifier	a0		815708	0					
ANR	815800	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN )"		815708	1					
ANR	815801	Callee	r_reg_get_name		815708	0					
ANR	815802	Identifier	r_reg_get_name		815708	0					
ANR	815803	ArgumentList	core -> anal -> reg		815708	1					
ANR	815804	Argument	core -> anal -> reg		815708	0					
ANR	815805	PtrMemberAccess	core -> anal -> reg		815708	0					
ANR	815806	PtrMemberAccess	core -> anal		815708	0					
ANR	815807	Identifier	core		815708	0					
ANR	815808	Identifier	anal		815708	1					
ANR	815809	Identifier	reg		815708	1					
ANR	815810	Argument	R_REG_NAME_SN		815708	1					
ANR	815811	Identifier	R_REG_NAME_SN		815708	0					
ANR	815812	ExpressionStatement	"n = ( a0 == NULL ) ? - 1 : ( int ) r_debug_reg_get ( core -> dbg , a0 )"	1405:3:48253:48311	815708	1	True				
ANR	815813	AssignmentExpression	"n = ( a0 == NULL ) ? - 1 : ( int ) r_debug_reg_get ( core -> dbg , a0 )"		815708	0		=			
ANR	815814	Identifier	n		815708	0					
ANR	815815	ConditionalExpression	"( a0 == NULL ) ? - 1 : ( int ) r_debug_reg_get ( core -> dbg , a0 )"		815708	1					
ANR	815816	Condition	a0 == NULL		815708	0					
ANR	815817	EqualityExpression	a0 == NULL		815708	0		==			
ANR	815818	Identifier	a0		815708	0					
ANR	815819	Identifier	NULL		815708	1					
ANR	815820	UnaryOperationExpression	- 1		815708	1					
ANR	815821	UnaryOperator	-		815708	0					
ANR	815822	PrimaryExpression	1		815708	1					
ANR	815823	CastExpression	"( int ) r_debug_reg_get ( core -> dbg , a0 )"		815708	2					
ANR	815824	CastTarget	int		815708	0					
ANR	815825	CallExpression	"r_debug_reg_get ( core -> dbg , a0 )"		815708	1					
ANR	815826	Callee	r_debug_reg_get		815708	0					
ANR	815827	Identifier	r_debug_reg_get		815708	0					
ANR	815828	ArgumentList	core -> dbg		815708	1					
ANR	815829	Argument	core -> dbg		815708	0					
ANR	815830	PtrMemberAccess	core -> dbg		815708	0					
ANR	815831	Identifier	core		815708	0					
ANR	815832	Identifier	dbg		815708	1					
ANR	815833	Argument	a0		815708	1					
ANR	815834	Identifier	a0		815708	0					
ANR	815835	IdentifierDeclStatement	"RSyscallItem * item = r_syscall_get ( core -> anal -> syscall , n , defVector ) ;"	1408:1:48321:48391	815708	6	True				
ANR	815836	IdentifierDecl	"* item = r_syscall_get ( core -> anal -> syscall , n , defVector )"		815708	0					
ANR	815837	IdentifierDeclType	RSyscallItem *		815708	0					
ANR	815838	Identifier	item		815708	1					
ANR	815839	AssignmentExpression	"* item = r_syscall_get ( core -> anal -> syscall , n , defVector )"		815708	2		=			
ANR	815840	Identifier	item		815708	0					
ANR	815841	CallExpression	"r_syscall_get ( core -> anal -> syscall , n , defVector )"		815708	1					
ANR	815842	Callee	r_syscall_get		815708	0					
ANR	815843	Identifier	r_syscall_get		815708	0					
ANR	815844	ArgumentList	core -> anal -> syscall		815708	1					
ANR	815845	Argument	core -> anal -> syscall		815708	0					
ANR	815846	PtrMemberAccess	core -> anal -> syscall		815708	0					
ANR	815847	PtrMemberAccess	core -> anal		815708	0					
ANR	815848	Identifier	core		815708	0					
ANR	815849	Identifier	anal		815708	1					
ANR	815850	Identifier	syscall		815708	1					
ANR	815851	Argument	n		815708	1					
ANR	815852	Identifier	n		815708	0					
ANR	815853	Argument	defVector		815708	2					
ANR	815854	Identifier	defVector		815708	0					
ANR	815855	IfStatement	if ( ! item )		815708	7					
ANR	815856	Condition	! item	1409:5:48398:48402	815708	0	True				
ANR	815857	UnaryOperationExpression	! item		815708	0					
ANR	815858	UnaryOperator	!		815708	0					
ANR	815859	Identifier	item		815708	1					
ANR	815860	CompoundStatement		17:12:458:458	815708	1					
ANR	815861	ExpressionStatement	"item = r_syscall_get ( core -> anal -> syscall , N , - 1 )"	1410:2:48409:48459	815708	0	True				
ANR	815862	AssignmentExpression	"item = r_syscall_get ( core -> anal -> syscall , N , - 1 )"		815708	0		=			
ANR	815863	Identifier	item		815708	0					
ANR	815864	CallExpression	"r_syscall_get ( core -> anal -> syscall , N , - 1 )"		815708	1					
ANR	815865	Callee	r_syscall_get		815708	0					
ANR	815866	Identifier	r_syscall_get		815708	0					
ANR	815867	ArgumentList	core -> anal -> syscall		815708	1					
ANR	815868	Argument	core -> anal -> syscall		815708	0					
ANR	815869	PtrMemberAccess	core -> anal -> syscall		815708	0					
ANR	815870	PtrMemberAccess	core -> anal		815708	0					
ANR	815871	Identifier	core		815708	0					
ANR	815872	Identifier	anal		815708	1					
ANR	815873	Identifier	syscall		815708	1					
ANR	815874	Argument	N		815708	1					
ANR	815875	Identifier	N		815708	0					
ANR	815876	Argument	- 1		815708	2					
ANR	815877	UnaryOperationExpression	- 1		815708	0					
ANR	815878	UnaryOperator	-		815708	0					
ANR	815879	PrimaryExpression	1		815708	1					
ANR	815880	IfStatement	if ( ! item )		815708	8					
ANR	815881	Condition	! item	1412:5:48469:48473	815708	0	True				
ANR	815882	UnaryOperationExpression	! item		815708	0					
ANR	815883	UnaryOperator	!		815708	0					
ANR	815884	Identifier	item		815708	1					
ANR	815885	CompoundStatement		20:12:529:529	815708	1					
ANR	815886	ReturnStatement	"return r_str_newf ( ""%s = unknown ()"" , syscallNumber ( n ) ) ;"	1413:2:48480:48536	815708	0	True				
ANR	815887	CallExpression	"r_str_newf ( ""%s = unknown ()"" , syscallNumber ( n ) )"		815708	0					
ANR	815888	Callee	r_str_newf		815708	0					
ANR	815889	Identifier	r_str_newf		815708	0					
ANR	815890	ArgumentList	"""%s = unknown ()"""		815708	1					
ANR	815891	Argument	"""%s = unknown ()"""		815708	0					
ANR	815892	PrimaryExpression	"""%s = unknown ()"""		815708	0					
ANR	815893	Argument	syscallNumber ( n )		815708	1					
ANR	815894	CallExpression	syscallNumber ( n )		815708	0					
ANR	815895	Callee	syscallNumber		815708	0					
ANR	815896	Identifier	syscallNumber		815708	0					
ANR	815897	ArgumentList	n		815708	1					
ANR	815898	Argument	n		815708	0					
ANR	815899	Identifier	n		815708	0					
ANR	815900	IdentifierDeclStatement	"char * res = r_str_newf ( ""%s = %s ("" , syscallNumber ( item -> num ) , item -> name ) ;"	1415:1:48542:48617	815708	9	True				
ANR	815901	IdentifierDecl	"* res = r_str_newf ( ""%s = %s ("" , syscallNumber ( item -> num ) , item -> name )"		815708	0					
ANR	815902	IdentifierDeclType	char *		815708	0					
ANR	815903	Identifier	res		815708	1					
ANR	815904	AssignmentExpression	"* res = r_str_newf ( ""%s = %s ("" , syscallNumber ( item -> num ) , item -> name )"		815708	2		=			
ANR	815905	Identifier	res		815708	0					
ANR	815906	CallExpression	"r_str_newf ( ""%s = %s ("" , syscallNumber ( item -> num ) , item -> name )"		815708	1					
ANR	815907	Callee	r_str_newf		815708	0					
ANR	815908	Identifier	r_str_newf		815708	0					
ANR	815909	ArgumentList	"""%s = %s ("""		815708	1					
ANR	815910	Argument	"""%s = %s ("""		815708	0					
ANR	815911	PrimaryExpression	"""%s = %s ("""		815708	0					
ANR	815912	Argument	syscallNumber ( item -> num )		815708	1					
ANR	815913	CallExpression	syscallNumber ( item -> num )		815708	0					
ANR	815914	Callee	syscallNumber		815708	0					
ANR	815915	Identifier	syscallNumber		815708	0					
ANR	815916	ArgumentList	item -> num		815708	1					
ANR	815917	Argument	item -> num		815708	0					
ANR	815918	PtrMemberAccess	item -> num		815708	0					
ANR	815919	Identifier	item		815708	0					
ANR	815920	Identifier	num		815708	1					
ANR	815921	Argument	item -> name		815708	2					
ANR	815922	PtrMemberAccess	item -> name		815708	0					
ANR	815923	Identifier	item		815708	0					
ANR	815924	Identifier	name		815708	1					
ANR	815925	ForStatement	for ( i = 0 ; i < item -> args ; i ++ )		815708	10					
ANR	815926	ForInit	i = 0 ;	1418:6:48709:48714	815708	0	True				
ANR	815927	AssignmentExpression	i = 0		815708	0		=			
ANR	815928	Identifier	i		815708	0					
ANR	815929	PrimaryExpression	0		815708	1					
ANR	815930	Condition	i < item -> args	1418:13:48716:48729	815708	1	True				
ANR	815931	RelationalExpression	i < item -> args		815708	0		<			
ANR	815932	Identifier	i		815708	0					
ANR	815933	PtrMemberAccess	item -> args		815708	1					
ANR	815934	Identifier	item		815708	0					
ANR	815935	Identifier	args		815708	1					
ANR	815936	PostIncDecOperationExpression	i ++	1418:29:48732:48734	815708	2	True				
ANR	815937	Identifier	i		815708	0					
ANR	815938	IncDec	++		815708	1					
ANR	815939	CompoundStatement		33:2:1011:1082	815708	3					
ANR	815940	IdentifierDeclStatement	int regidx = i ;	1421:2:48886:48900	815708	0	True				
ANR	815941	IdentifierDecl	regidx = i		815708	0					
ANR	815942	IdentifierDeclType	int		815708	0					
ANR	815943	Identifier	regidx		815708	1					
ANR	815944	AssignmentExpression	regidx = i		815708	2		=			
ANR	815945	Identifier	i		815708	0					
ANR	815946	Identifier	i		815708	1					
ANR	815947	IfStatement	if ( core -> assembler -> bits == 32 )		815708	1					
ANR	815948	Condition	core -> assembler -> bits == 32	1422:6:48908:48934	815708	0	True				
ANR	815949	EqualityExpression	core -> assembler -> bits == 32		815708	0		==			
ANR	815950	PtrMemberAccess	core -> assembler -> bits		815708	0					
ANR	815951	PtrMemberAccess	core -> assembler		815708	0					
ANR	815952	Identifier	core		815708	0					
ANR	815953	Identifier	assembler		815708	1					
ANR	815954	Identifier	bits		815708	1					
ANR	815955	PrimaryExpression	32		815708	1					
ANR	815956	CompoundStatement		30:35:990:990	815708	1					
ANR	815957	ExpressionStatement	regidx ++	1423:3:48942:48950	815708	0	True				
ANR	815958	PostIncDecOperationExpression	regidx ++		815708	0					
ANR	815959	Identifier	regidx		815708	0					
ANR	815960	IncDec	++		815708	1					
ANR	815961	IdentifierDeclStatement	"ut64 arg = r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_FASTCALL , regidx ) ;"	1425:2:48958:49029	815708	2	True				
ANR	815962	IdentifierDecl	"arg = r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_FASTCALL , regidx )"		815708	0					
ANR	815963	IdentifierDeclType	ut64		815708	0					
ANR	815964	Identifier	arg		815708	1					
ANR	815965	AssignmentExpression	"arg = r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_FASTCALL , regidx )"		815708	2		=			
ANR	815966	Identifier	arg		815708	0					
ANR	815967	CallExpression	"r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_FASTCALL , regidx )"		815708	1					
ANR	815968	Callee	r_debug_arg_get		815708	0					
ANR	815969	Identifier	r_debug_arg_get		815708	0					
ANR	815970	ArgumentList	core -> dbg		815708	1					
ANR	815971	Argument	core -> dbg		815708	0					
ANR	815972	PtrMemberAccess	core -> dbg		815708	0					
ANR	815973	Identifier	core		815708	0					
ANR	815974	Identifier	dbg		815708	1					
ANR	815975	Argument	R_ANAL_CC_TYPE_FASTCALL		815708	1					
ANR	815976	Identifier	R_ANAL_CC_TYPE_FASTCALL		815708	0					
ANR	815977	Argument	regidx		815708	2					
ANR	815978	Identifier	regidx		815708	0					
ANR	815979	IfStatement	if ( item -> sargs )		815708	3					
ANR	815980	Condition	item -> sargs	1427:6:49088:49098	815708	0	True				
ANR	815981	PtrMemberAccess	item -> sargs		815708	0					
ANR	815982	Identifier	item		815708	0					
ANR	815983	Identifier	sargs		815708	1					
ANR	815984	CompoundStatement		35:19:1154:1154	815708	1					
ANR	815985	SwitchStatement	switch ( item -> sargs [ i ] )		815708	0					
ANR	815986	Condition	item -> sargs [ i ]	1428:11:49114:49127	815708	0	True				
ANR	815987	ArrayIndexing	item -> sargs [ i ]		815708	0					
ANR	815988	PtrMemberAccess	item -> sargs		815708	0					
ANR	815989	Identifier	item		815708	0					
ANR	815990	Identifier	sargs		815708	1					
ANR	815991	Identifier	i		815708	1					
ANR	815992	CompoundStatement		36:27:1183:1183	815708	1					
ANR	815993	Label	case 'p' :	1429:3:49135:49143	815708	0	True				
ANR	815994	Statement	res	1430:4:49160:49162	815708	1	True				
ANR	815995	Statement	=	1430:8:49164:49164	815708	2	True				
ANR	815996	Statement	r_str_appendf	1430:10:49166:49178	815708	3	True				
ANR	815997	Statement	(	1430:24:49180:49180	815708	4	True				
ANR	815998	Statement	res	1430:25:49181:49183	815708	5	True				
ANR	815999	Statement	","	1430:28:49184:49184	815708	6	True				
ANR	816000	Statement	"""0x%08"""	1430:30:49186:49192	815708	7	True				
ANR	816001	Statement	PFMT64x	1430:38:49194:49200	815708	8	True				
ANR	816002	Statement	""""""	1430:46:49202:49203	815708	9	True				
ANR	816003	Statement	","	1430:48:49204:49204	815708	10	True				
ANR	816004	Statement	arg	1430:50:49206:49208	815708	11	True				
ANR	816005	Statement	)	1430:53:49209:49209	815708	12	True				
ANR	816006	ExpressionStatement		1430:54:49210:49210	815708	13	True				
ANR	816007	BreakStatement	break ;	1431:4:49216:49221	815708	14	True				
ANR	816008	Label	case 'i' :	1432:3:49226:49234	815708	15	True				
ANR	816009	Statement	res	1433:4:49240:49242	815708	16	True				
ANR	816010	Statement	=	1433:8:49244:49244	815708	17	True				
ANR	816011	Statement	r_str_appendf	1433:10:49246:49258	815708	18	True				
ANR	816012	Statement	(	1433:24:49260:49260	815708	19	True				
ANR	816013	Statement	res	1433:25:49261:49263	815708	20	True				
ANR	816014	Statement	","	1433:28:49264:49264	815708	21	True				
ANR	816015	Statement	"""%"""	1433:30:49266:49268	815708	22	True				
ANR	816016	Statement	PFMT64u	1433:34:49270:49276	815708	23	True				
ANR	816017	Statement	""""""	1433:42:49278:49279	815708	24	True				
ANR	816018	Statement	","	1433:44:49280:49280	815708	25	True				
ANR	816019	Statement	arg	1433:46:49282:49284	815708	26	True				
ANR	816020	Statement	)	1433:49:49285:49285	815708	27	True				
ANR	816021	ExpressionStatement		1433:50:49286:49286	815708	28	True				
ANR	816022	BreakStatement	break ;	1434:4:49292:49297	815708	29	True				
ANR	816023	Label	case 'z' :	1435:3:49302:49310	815708	30	True				
ANR	816024	ExpressionStatement	"memset ( str , 0 , sizeof ( str ) )"	1436:4:49316:49345	815708	31	True				
ANR	816025	CallExpression	"memset ( str , 0 , sizeof ( str ) )"		815708	0					
ANR	816026	Callee	memset		815708	0					
ANR	816027	Identifier	memset		815708	0					
ANR	816028	ArgumentList	str		815708	1					
ANR	816029	Argument	str		815708	0					
ANR	816030	Identifier	str		815708	0					
ANR	816031	Argument	0		815708	1					
ANR	816032	PrimaryExpression	0		815708	0					
ANR	816033	Argument	sizeof ( str )		815708	2					
ANR	816034	SizeofExpression	sizeof ( str )		815708	0					
ANR	816035	Sizeof	sizeof		815708	0					
ANR	816036	SizeofOperand	str		815708	1					
ANR	816037	ExpressionStatement	"r_io_read_at ( core -> io , arg , ( ut8 * ) str , sizeof ( str ) - 1 )"	1437:4:49351:49409	815708	32	True				
ANR	816038	CallExpression	"r_io_read_at ( core -> io , arg , ( ut8 * ) str , sizeof ( str ) - 1 )"		815708	0					
ANR	816039	Callee	r_io_read_at		815708	0					
ANR	816040	Identifier	r_io_read_at		815708	0					
ANR	816041	ArgumentList	core -> io		815708	1					
ANR	816042	Argument	core -> io		815708	0					
ANR	816043	PtrMemberAccess	core -> io		815708	0					
ANR	816044	Identifier	core		815708	0					
ANR	816045	Identifier	io		815708	1					
ANR	816046	Argument	arg		815708	1					
ANR	816047	Identifier	arg		815708	0					
ANR	816048	Argument	( ut8 * ) str		815708	2					
ANR	816049	CastExpression	( ut8 * ) str		815708	0					
ANR	816050	CastTarget	ut8 *		815708	0					
ANR	816051	Identifier	str		815708	1					
ANR	816052	Argument	sizeof ( str ) - 1		815708	3					
ANR	816053	AdditiveExpression	sizeof ( str ) - 1		815708	0		-			
ANR	816054	SizeofExpression	sizeof ( str )		815708	0					
ANR	816055	Sizeof	sizeof		815708	0					
ANR	816056	SizeofOperand	str		815708	1					
ANR	816057	PrimaryExpression	1		815708	1					
ANR	816058	ExpressionStatement	"r_str_filter ( str , strlen ( str ) )"	1438:4:49415:49447	815708	33	True				
ANR	816059	CallExpression	"r_str_filter ( str , strlen ( str ) )"		815708	0					
ANR	816060	Callee	r_str_filter		815708	0					
ANR	816061	Identifier	r_str_filter		815708	0					
ANR	816062	ArgumentList	str		815708	1					
ANR	816063	Argument	str		815708	0					
ANR	816064	Identifier	str		815708	0					
ANR	816065	Argument	strlen ( str )		815708	1					
ANR	816066	CallExpression	strlen ( str )		815708	0					
ANR	816067	Callee	strlen		815708	0					
ANR	816068	Identifier	strlen		815708	0					
ANR	816069	ArgumentList	str		815708	1					
ANR	816070	Argument	str		815708	0					
ANR	816071	Identifier	str		815708	0					
ANR	816072	ExpressionStatement	"res = r_str_appendf ( res , ""\\""%s\\"""" , str )"	1439:4:49453:49493	815708	34	True				
ANR	816073	AssignmentExpression	"res = r_str_appendf ( res , ""\\""%s\\"""" , str )"		815708	0		=			
ANR	816074	Identifier	res		815708	0					
ANR	816075	CallExpression	"r_str_appendf ( res , ""\\""%s\\"""" , str )"		815708	1					
ANR	816076	Callee	r_str_appendf		815708	0					
ANR	816077	Identifier	r_str_appendf		815708	0					
ANR	816078	ArgumentList	res		815708	1					
ANR	816079	Argument	res		815708	0					
ANR	816080	Identifier	res		815708	0					
ANR	816081	Argument	"""\\""%s\\"""""		815708	1					
ANR	816082	PrimaryExpression	"""\\""%s\\"""""		815708	0					
ANR	816083	Argument	str		815708	2					
ANR	816084	Identifier	str		815708	0					
ANR	816085	BreakStatement	break ;	1440:4:49499:49504	815708	35	True				
ANR	816086	Label	case 'Z' :	1441:3:49509:49517	815708	36	True				
ANR	816087	CompoundStatement		51:4:1632:1702	815708	37					
ANR	816088	IdentifierDeclStatement	"ut64 len = r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_FASTCALL , i + 2 ) ;"	1443:4:49579:49649	815708	0	True				
ANR	816089	IdentifierDecl	"len = r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_FASTCALL , i + 2 )"		815708	0					
ANR	816090	IdentifierDeclType	ut64		815708	0					
ANR	816091	Identifier	len		815708	1					
ANR	816092	AssignmentExpression	"len = r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_FASTCALL , i + 2 )"		815708	2		=			
ANR	816093	Identifier	len		815708	0					
ANR	816094	CallExpression	"r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_FASTCALL , i + 2 )"		815708	1					
ANR	816095	Callee	r_debug_arg_get		815708	0					
ANR	816096	Identifier	r_debug_arg_get		815708	0					
ANR	816097	ArgumentList	core -> dbg		815708	1					
ANR	816098	Argument	core -> dbg		815708	0					
ANR	816099	PtrMemberAccess	core -> dbg		815708	0					
ANR	816100	Identifier	core		815708	0					
ANR	816101	Identifier	dbg		815708	1					
ANR	816102	Argument	R_ANAL_CC_TYPE_FASTCALL		815708	1					
ANR	816103	Identifier	R_ANAL_CC_TYPE_FASTCALL		815708	0					
ANR	816104	Argument	i + 2		815708	2					
ANR	816105	AdditiveExpression	i + 2		815708	0		+			
ANR	816106	Identifier	i		815708	0					
ANR	816107	PrimaryExpression	2		815708	1					
ANR	816108	ExpressionStatement	"len = R_MIN ( len + 1 , sizeof ( str ) - 1 )"	1444:4:49655:49694	815708	1	True				
ANR	816109	AssignmentExpression	"len = R_MIN ( len + 1 , sizeof ( str ) - 1 )"		815708	0		=			
ANR	816110	Identifier	len		815708	0					
ANR	816111	CallExpression	"R_MIN ( len + 1 , sizeof ( str ) - 1 )"		815708	1					
ANR	816112	Callee	R_MIN		815708	0					
ANR	816113	Identifier	R_MIN		815708	0					
ANR	816114	ArgumentList	len + 1		815708	1					
ANR	816115	Argument	len + 1		815708	0					
ANR	816116	AdditiveExpression	len + 1		815708	0		+			
ANR	816117	Identifier	len		815708	0					
ANR	816118	PrimaryExpression	1		815708	1					
ANR	816119	Argument	sizeof ( str ) - 1		815708	1					
ANR	816120	AdditiveExpression	sizeof ( str ) - 1		815708	0		-			
ANR	816121	SizeofExpression	sizeof ( str )		815708	0					
ANR	816122	Sizeof	sizeof		815708	0					
ANR	816123	SizeofOperand	str		815708	1					
ANR	816124	PrimaryExpression	1		815708	1					
ANR	816125	IfStatement	if ( len == 0 )		815708	2					
ANR	816126	Condition	len == 0	1445:8:49704:49711	815708	0	True				
ANR	816127	EqualityExpression	len == 0		815708	0		==			
ANR	816128	Identifier	len		815708	0					
ANR	816129	PrimaryExpression	0		815708	1					
ANR	816130	CompoundStatement		53:18:1767:1767	815708	1					
ANR	816131	ExpressionStatement	len = 16	1446:5:49721:49729	815708	0	True				
ANR	816132	AssignmentExpression	len = 16		815708	0		=			
ANR	816133	Identifier	len		815708	0					
ANR	816134	PrimaryExpression	16		815708	1					
ANR	816135	ExpressionStatement	"( void ) r_io_read_at ( core -> io , arg , ( ut8 * ) str , len )"	1448:4:49761:49812	815708	3	True				
ANR	816136	CastExpression	"( void ) r_io_read_at ( core -> io , arg , ( ut8 * ) str , len )"		815708	0					
ANR	816137	CastTarget	void		815708	0					
ANR	816138	CallExpression	"r_io_read_at ( core -> io , arg , ( ut8 * ) str , len )"		815708	1					
ANR	816139	Callee	r_io_read_at		815708	0					
ANR	816140	Identifier	r_io_read_at		815708	0					
ANR	816141	ArgumentList	core -> io		815708	1					
ANR	816142	Argument	core -> io		815708	0					
ANR	816143	PtrMemberAccess	core -> io		815708	0					
ANR	816144	Identifier	core		815708	0					
ANR	816145	Identifier	io		815708	1					
ANR	816146	Argument	arg		815708	1					
ANR	816147	Identifier	arg		815708	0					
ANR	816148	Argument	( ut8 * ) str		815708	2					
ANR	816149	CastExpression	( ut8 * ) str		815708	0					
ANR	816150	CastTarget	ut8 *		815708	0					
ANR	816151	Identifier	str		815708	1					
ANR	816152	Argument	len		815708	3					
ANR	816153	Identifier	len		815708	0					
ANR	816154	ExpressionStatement	str [ len ] = 0	1449:4:49818:49830	815708	4	True				
ANR	816155	AssignmentExpression	str [ len ] = 0		815708	0		=			
ANR	816156	ArrayIndexing	str [ len ]		815708	0					
ANR	816157	Identifier	str		815708	0					
ANR	816158	Identifier	len		815708	1					
ANR	816159	PrimaryExpression	0		815708	1					
ANR	816160	ExpressionStatement	"r_str_filter ( str , - 1 )"	1450:4:49836:49858	815708	5	True				
ANR	816161	CallExpression	"r_str_filter ( str , - 1 )"		815708	0					
ANR	816162	Callee	r_str_filter		815708	0					
ANR	816163	Identifier	r_str_filter		815708	0					
ANR	816164	ArgumentList	str		815708	1					
ANR	816165	Argument	str		815708	0					
ANR	816166	Identifier	str		815708	0					
ANR	816167	Argument	- 1		815708	1					
ANR	816168	UnaryOperationExpression	- 1		815708	0					
ANR	816169	UnaryOperator	-		815708	0					
ANR	816170	PrimaryExpression	1		815708	1					
ANR	816171	ExpressionStatement	"res = r_str_appendf ( res , ""\\""%s\\"""" , str )"	1451:4:49864:49904	815708	6	True				
ANR	816172	AssignmentExpression	"res = r_str_appendf ( res , ""\\""%s\\"""" , str )"		815708	0		=			
ANR	816173	Identifier	res		815708	0					
ANR	816174	CallExpression	"r_str_appendf ( res , ""\\""%s\\"""" , str )"		815708	1					
ANR	816175	Callee	r_str_appendf		815708	0					
ANR	816176	Identifier	r_str_appendf		815708	0					
ANR	816177	ArgumentList	res		815708	1					
ANR	816178	Argument	res		815708	0					
ANR	816179	Identifier	res		815708	0					
ANR	816180	Argument	"""\\""%s\\"""""		815708	1					
ANR	816181	PrimaryExpression	"""\\""%s\\"""""		815708	0					
ANR	816182	Argument	str		815708	2					
ANR	816183	Identifier	str		815708	0					
ANR	816184	BreakStatement	break ;	1452:5:49911:49916	815708	38	True				
ANR	816185	Label	default :	1453:3:49921:49928	815708	39	True				
ANR	816186	Identifier	default		815708	0					
ANR	816187	Statement	res	1454:4:49934:49936	815708	40	True				
ANR	816188	Statement	=	1454:8:49938:49938	815708	41	True				
ANR	816189	Statement	r_str_appendf	1454:10:49940:49952	815708	42	True				
ANR	816190	Statement	(	1454:24:49954:49954	815708	43	True				
ANR	816191	Statement	res	1454:25:49955:49957	815708	44	True				
ANR	816192	Statement	","	1454:28:49958:49958	815708	45	True				
ANR	816193	Statement	"""0x%08"""	1454:30:49960:49966	815708	46	True				
ANR	816194	Statement	PFMT64x	1454:38:49968:49974	815708	47	True				
ANR	816195	Statement	""""""	1454:46:49976:49977	815708	48	True				
ANR	816196	Statement	","	1454:48:49978:49978	815708	49	True				
ANR	816197	Statement	arg	1454:50:49980:49982	815708	50	True				
ANR	816198	Statement	)	1454:53:49983:49983	815708	51	True				
ANR	816199	ExpressionStatement		1454:54:49984:49984	815708	52	True				
ANR	816200	BreakStatement	break ;	1455:4:49990:49995	815708	53	True				
ANR	816201	ElseStatement	else		815708	0					
ANR	816202	CompoundStatement		65:9:2064:2064	815708	0					
ANR	816203	Statement	res	1458:3:50016:50018	815708	0	True				
ANR	816204	Statement	=	1458:7:50020:50020	815708	1	True				
ANR	816205	Statement	r_str_appendf	1458:9:50022:50034	815708	2	True				
ANR	816206	Statement	(	1458:23:50036:50036	815708	3	True				
ANR	816207	Statement	res	1458:24:50037:50039	815708	4	True				
ANR	816208	Statement	","	1458:27:50040:50040	815708	5	True				
ANR	816209	Statement	"""0x%08"""	1458:29:50042:50048	815708	6	True				
ANR	816210	Statement	PFMT64x	1458:37:50050:50056	815708	7	True				
ANR	816211	Statement	""""""	1458:45:50058:50059	815708	8	True				
ANR	816212	Statement	","	1458:47:50060:50060	815708	9	True				
ANR	816213	Statement	arg	1458:49:50062:50064	815708	10	True				
ANR	816214	Statement	)	1458:52:50065:50065	815708	11	True				
ANR	816215	ExpressionStatement		1458:53:50066:50066	815708	12	True				
ANR	816216	IfStatement	if ( i + 1 < item -> args )		815708	4					
ANR	816217	Condition	i + 1 < item -> args	1460:6:50078:50095	815708	0	True				
ANR	816218	RelationalExpression	i + 1 < item -> args		815708	0		<			
ANR	816219	AdditiveExpression	i + 1		815708	0		+			
ANR	816220	Identifier	i		815708	0					
ANR	816221	PrimaryExpression	1		815708	1					
ANR	816222	PtrMemberAccess	item -> args		815708	1					
ANR	816223	Identifier	item		815708	0					
ANR	816224	Identifier	args		815708	1					
ANR	816225	CompoundStatement		68:26:2151:2151	815708	1					
ANR	816226	ExpressionStatement	"res = r_str_appendf ( res , "", "" )"	1461:3:50103:50134	815708	0	True				
ANR	816227	AssignmentExpression	"res = r_str_appendf ( res , "", "" )"		815708	0		=			
ANR	816228	Identifier	res		815708	0					
ANR	816229	CallExpression	"r_str_appendf ( res , "", "" )"		815708	1					
ANR	816230	Callee	r_str_appendf		815708	0					
ANR	816231	Identifier	r_str_appendf		815708	0					
ANR	816232	ArgumentList	res		815708	1					
ANR	816233	Argument	res		815708	0					
ANR	816234	Identifier	res		815708	0					
ANR	816235	Argument	""", """		815708	1					
ANR	816236	PrimaryExpression	""", """		815708	0					
ANR	816237	ExpressionStatement	r_syscall_item_free ( item )	1464:1:50144:50170	815708	11	True				
ANR	816238	CallExpression	r_syscall_item_free ( item )		815708	0					
ANR	816239	Callee	r_syscall_item_free		815708	0					
ANR	816240	Identifier	r_syscall_item_free		815708	0					
ANR	816241	ArgumentList	item		815708	1					
ANR	816242	Argument	item		815708	0					
ANR	816243	Identifier	item		815708	0					
ANR	816244	ReturnStatement	"return r_str_appendf ( res , "")"" ) ;"	1465:1:50173:50204	815708	12	True				
ANR	816245	CallExpression	"r_str_appendf ( res , "")"" )"		815708	0					
ANR	816246	Callee	r_str_appendf		815708	0					
ANR	816247	Identifier	r_str_appendf		815708	0					
ANR	816248	ArgumentList	res		815708	1					
ANR	816249	Argument	res		815708	0					
ANR	816250	Identifier	res		815708	0					
ANR	816251	Argument	""")"""		815708	1					
ANR	816252	PrimaryExpression	""")"""		815708	0					
ANR	816253	ReturnType	R_API char *		815708	1					
ANR	816254	Identifier	cmd_syscall_dostr		815708	2					
ANR	816255	ParameterList	"RCore * core , st64 n , ut64 addr"		815708	3					
ANR	816256	Parameter	RCore * core	1393:30:47914:47924	815708	0	True				
ANR	816257	ParameterType	RCore *		815708	0					
ANR	816258	Identifier	core		815708	1					
ANR	816259	Parameter	st64 n	1393:43:47927:47932	815708	1	True				
ANR	816260	ParameterType	st64		815708	0					
ANR	816261	Identifier	n		815708	1					
ANR	816262	Parameter	ut64 addr	1393:51:47935:47943	815708	2	True				
ANR	816263	ParameterType	ut64		815708	0					
ANR	816264	Identifier	addr		815708	1					
ANR	816265	CFGEntryNode	ENTRY		815708		True				
ANR	816266	CFGExitNode	EXIT		815708		True				
ANR	816267	Symbol	core -> anal -> reg		815708						
ANR	816268	Symbol	r_syscall_get		815708						
ANR	816269	Symbol	r_debug_reg_get		815708						
ANR	816270	Symbol	* core		815708						
ANR	816271	Symbol	core -> assembler -> bits		815708						
ANR	816272	Symbol	core -> assembler		815708						
ANR	816273	Symbol	r_str_newf		815708						
ANR	816274	Symbol	core -> anal		815708						
ANR	816275	Symbol	N		815708						
ANR	816276	Symbol	* core -> assembler		815708						
ANR	816277	Symbol	strlen		815708						
ANR	816278	Symbol	core -> io		815708						
ANR	816279	Symbol	len		815708						
ANR	816280	Symbol	syscallNumber		815708						
ANR	816281	Symbol	* item		815708						
ANR	816282	Symbol	arg		815708						
ANR	816283	Symbol	* str		815708						
ANR	816284	Symbol	addr		815708						
ANR	816285	Symbol	* * core		815708						
ANR	816286	Symbol	res		815708						
ANR	816287	Symbol	regidx		815708						
ANR	816288	Symbol	item		815708						
ANR	816289	Symbol	NULL		815708						
ANR	816290	Symbol	defVector		815708						
ANR	816291	Symbol	R_ANAL_CC_TYPE_FASTCALL		815708						
ANR	816292	Symbol	* * item		815708						
ANR	816293	Symbol	i		815708						
ANR	816294	Symbol	item -> args		815708						
ANR	816295	Symbol	R_MIN		815708						
ANR	816296	Symbol	core -> anal -> syscall		815708						
ANR	816297	Symbol	r_syscall_get_swi		815708						
ANR	816298	Symbol	n		815708						
ANR	816299	Symbol	r_debug_arg_get		815708						
ANR	816300	Symbol	a0		815708						
ANR	816301	Symbol	* item -> sargs		815708						
ANR	816302	Symbol	str		815708						
ANR	816303	Symbol	item -> sargs		815708						
ANR	816304	Symbol	core		815708						
ANR	816305	Symbol	* core -> anal		815708						
ANR	816306	Symbol	* i		815708						
ANR	816307	Symbol	r_reg_get_name		815708						
ANR	816308	Symbol	item -> name		815708						
ANR	816309	Symbol	r_str_appendf		815708						
ANR	816310	Symbol	item -> num		815708						
ANR	816311	Symbol	R_REG_NAME_SN		815708						
ANR	816312	Symbol	core -> dbg		815708						
ANR	816313	Symbol	* len		815708						
ANR	816314	Function	cmd_syscall_do	1468:0:50209:50371							
ANR	816315	FunctionDef	"cmd_syscall_do (RCore * core , st64 n , ut64 addr)"		816314	0					
ANR	816316	CompoundStatement		1468:59:50268:50371	816314	0					
ANR	816317	IdentifierDeclStatement	"char * msg = cmd_syscall_dostr ( core , n , addr ) ;"	1469:1:50271:50316	816314	0	True				
ANR	816318	IdentifierDecl	"* msg = cmd_syscall_dostr ( core , n , addr )"		816314	0					
ANR	816319	IdentifierDeclType	char *		816314	0					
ANR	816320	Identifier	msg		816314	1					
ANR	816321	AssignmentExpression	"* msg = cmd_syscall_dostr ( core , n , addr )"		816314	2		=			
ANR	816322	Identifier	msg		816314	0					
ANR	816323	CallExpression	"cmd_syscall_dostr ( core , n , addr )"		816314	1					
ANR	816324	Callee	cmd_syscall_dostr		816314	0					
ANR	816325	Identifier	cmd_syscall_dostr		816314	0					
ANR	816326	ArgumentList	core		816314	1					
ANR	816327	Argument	core		816314	0					
ANR	816328	Identifier	core		816314	0					
ANR	816329	Argument	n		816314	1					
ANR	816330	Identifier	n		816314	0					
ANR	816331	Argument	addr		816314	2					
ANR	816332	Identifier	addr		816314	0					
ANR	816333	IfStatement	if ( msg )		816314	1					
ANR	816334	Condition	msg	1470:5:50323:50325	816314	0	True				
ANR	816335	Identifier	msg		816314	0					
ANR	816336	CompoundStatement		3:10:59:59	816314	1					
ANR	816337	ExpressionStatement	r_cons_println ( msg )	1471:2:50332:50352	816314	0	True				
ANR	816338	CallExpression	r_cons_println ( msg )		816314	0					
ANR	816339	Callee	r_cons_println		816314	0					
ANR	816340	Identifier	r_cons_println		816314	0					
ANR	816341	ArgumentList	msg		816314	1					
ANR	816342	Argument	msg		816314	0					
ANR	816343	Identifier	msg		816314	0					
ANR	816344	ExpressionStatement	free ( msg )	1472:2:50356:50366	816314	1	True				
ANR	816345	CallExpression	free ( msg )		816314	0					
ANR	816346	Callee	free		816314	0					
ANR	816347	Identifier	free		816314	0					
ANR	816348	ArgumentList	msg		816314	1					
ANR	816349	Argument	msg		816314	0					
ANR	816350	Identifier	msg		816314	0					
ANR	816351	ReturnType	static void		816314	1					
ANR	816352	Identifier	cmd_syscall_do		816314	2					
ANR	816353	ParameterList	"RCore * core , st64 n , ut64 addr"		816314	3					
ANR	816354	Parameter	RCore * core	1468:27:50236:50246	816314	0	True				
ANR	816355	ParameterType	RCore *		816314	0					
ANR	816356	Identifier	core		816314	1					
ANR	816357	Parameter	st64 n	1468:40:50249:50254	816314	1	True				
ANR	816358	ParameterType	st64		816314	0					
ANR	816359	Identifier	n		816314	1					
ANR	816360	Parameter	ut64 addr	1468:48:50257:50265	816314	2	True				
ANR	816361	ParameterType	ut64		816314	0					
ANR	816362	Identifier	addr		816314	1					
ANR	816363	CFGEntryNode	ENTRY		816314		True				
ANR	816364	CFGExitNode	EXIT		816314		True				
ANR	816365	Symbol	msg		816314						
ANR	816366	Symbol	core		816314						
ANR	816367	Symbol	cmd_syscall_dostr		816314						
ANR	816368	Symbol	addr		816314						
ANR	816369	Symbol	n		816314						
ANR	816370	Function	core_anal_bytes	1476:0:50374:61757							
ANR	816371	FunctionDef	"core_anal_bytes (RCore * core , const ut8 * buf , int len , int nops , int fmt)"		816370	0					
ANR	816372	CompoundStatement		1476:85:50459:61757	816370	0					
ANR	816373	IdentifierDeclStatement	"int stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" ) ;"	1477:1:50462:50527	816370	0	True				
ANR	816374	IdentifierDecl	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		816370	0					
ANR	816375	IdentifierDeclType	int		816370	0					
ANR	816376	Identifier	stacksize		816370	1					
ANR	816377	AssignmentExpression	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		816370	2		=			
ANR	816378	Identifier	stacksize		816370	0					
ANR	816379	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.depth"" )"		816370	1					
ANR	816380	Callee	r_config_get_i		816370	0					
ANR	816381	Identifier	r_config_get_i		816370	0					
ANR	816382	ArgumentList	core -> config		816370	1					
ANR	816383	Argument	core -> config		816370	0					
ANR	816384	PtrMemberAccess	core -> config		816370	0					
ANR	816385	Identifier	core		816370	0					
ANR	816386	Identifier	config		816370	1					
ANR	816387	Argument	"""esil.stack.depth"""		816370	1					
ANR	816388	PrimaryExpression	"""esil.stack.depth"""		816370	0					
ANR	816389	IdentifierDeclStatement	"bool iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	1478:1:50530:50588	816370	1	True				
ANR	816390	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		816370	0					
ANR	816391	IdentifierDeclType	bool		816370	0					
ANR	816392	Identifier	iotrap		816370	1					
ANR	816393	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		816370	2		=			
ANR	816394	Identifier	iotrap		816370	0					
ANR	816395	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		816370	1					
ANR	816396	Callee	r_config_get_i		816370	0					
ANR	816397	Identifier	r_config_get_i		816370	0					
ANR	816398	ArgumentList	core -> config		816370	1					
ANR	816399	Argument	core -> config		816370	0					
ANR	816400	PtrMemberAccess	core -> config		816370	0					
ANR	816401	Identifier	core		816370	0					
ANR	816402	Identifier	config		816370	1					
ANR	816403	Argument	"""esil.iotrap"""		816370	1					
ANR	816404	PrimaryExpression	"""esil.iotrap"""		816370	0					
ANR	816405	IdentifierDeclStatement	"bool romem = r_config_get_i ( core -> config , ""esil.romem"" ) ;"	1479:1:50591:50647	816370	2	True				
ANR	816406	IdentifierDecl	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		816370	0					
ANR	816407	IdentifierDeclType	bool		816370	0					
ANR	816408	Identifier	romem		816370	1					
ANR	816409	AssignmentExpression	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		816370	2		=			
ANR	816410	Identifier	romem		816370	0					
ANR	816411	CallExpression	"r_config_get_i ( core -> config , ""esil.romem"" )"		816370	1					
ANR	816412	Callee	r_config_get_i		816370	0					
ANR	816413	Identifier	r_config_get_i		816370	0					
ANR	816414	ArgumentList	core -> config		816370	1					
ANR	816415	Argument	core -> config		816370	0					
ANR	816416	PtrMemberAccess	core -> config		816370	0					
ANR	816417	Identifier	core		816370	0					
ANR	816418	Identifier	config		816370	1					
ANR	816419	Argument	"""esil.romem"""		816370	1					
ANR	816420	PrimaryExpression	"""esil.romem"""		816370	0					
ANR	816421	IdentifierDeclStatement	"bool stats = r_config_get_i ( core -> config , ""esil.stats"" ) ;"	1480:1:50650:50706	816370	3	True				
ANR	816422	IdentifierDecl	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		816370	0					
ANR	816423	IdentifierDeclType	bool		816370	0					
ANR	816424	Identifier	stats		816370	1					
ANR	816425	AssignmentExpression	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		816370	2		=			
ANR	816426	Identifier	stats		816370	0					
ANR	816427	CallExpression	"r_config_get_i ( core -> config , ""esil.stats"" )"		816370	1					
ANR	816428	Callee	r_config_get_i		816370	0					
ANR	816429	Identifier	r_config_get_i		816370	0					
ANR	816430	ArgumentList	core -> config		816370	1					
ANR	816431	Argument	core -> config		816370	0					
ANR	816432	PtrMemberAccess	core -> config		816370	0					
ANR	816433	Identifier	core		816370	0					
ANR	816434	Identifier	config		816370	1					
ANR	816435	Argument	"""esil.stats"""		816370	1					
ANR	816436	PrimaryExpression	"""esil.stats"""		816370	0					
ANR	816437	IdentifierDeclStatement	bool be = core -> print -> big_endian ;	1481:1:50709:50742	816370	4	True				
ANR	816438	IdentifierDecl	be = core -> print -> big_endian		816370	0					
ANR	816439	IdentifierDeclType	bool		816370	0					
ANR	816440	Identifier	be		816370	1					
ANR	816441	AssignmentExpression	be = core -> print -> big_endian		816370	2		=			
ANR	816442	Identifier	be		816370	0					
ANR	816443	PtrMemberAccess	core -> print -> big_endian		816370	1					
ANR	816444	PtrMemberAccess	core -> print		816370	0					
ANR	816445	Identifier	core		816370	0					
ANR	816446	Identifier	print		816370	1					
ANR	816447	Identifier	big_endian		816370	1					
ANR	816448	IdentifierDeclStatement	bool use_color = core -> print -> flags & R_PRINT_FLAGS_COLOR ;	1482:1:50745:50802	816370	5	True				
ANR	816449	IdentifierDecl	use_color = core -> print -> flags & R_PRINT_FLAGS_COLOR		816370	0					
ANR	816450	IdentifierDeclType	bool		816370	0					
ANR	816451	Identifier	use_color		816370	1					
ANR	816452	AssignmentExpression	use_color = core -> print -> flags & R_PRINT_FLAGS_COLOR		816370	2		=			
ANR	816453	Identifier	use_color		816370	0					
ANR	816454	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_COLOR		816370	1		&			
ANR	816455	PtrMemberAccess	core -> print -> flags		816370	0					
ANR	816456	PtrMemberAccess	core -> print		816370	0					
ANR	816457	Identifier	core		816370	0					
ANR	816458	Identifier	print		816370	1					
ANR	816459	Identifier	flags		816370	1					
ANR	816460	Identifier	R_PRINT_FLAGS_COLOR		816370	1					
ANR	816461	ExpressionStatement	"core -> parser -> relsub = r_config_get_i ( core -> config , ""asm.relsub"" )"	1483:1:50805:50871	816370	6	True				
ANR	816462	AssignmentExpression	"core -> parser -> relsub = r_config_get_i ( core -> config , ""asm.relsub"" )"		816370	0		=			
ANR	816463	PtrMemberAccess	core -> parser -> relsub		816370	0					
ANR	816464	PtrMemberAccess	core -> parser		816370	0					
ANR	816465	Identifier	core		816370	0					
ANR	816466	Identifier	parser		816370	1					
ANR	816467	Identifier	relsub		816370	1					
ANR	816468	CallExpression	"r_config_get_i ( core -> config , ""asm.relsub"" )"		816370	1					
ANR	816469	Callee	r_config_get_i		816370	0					
ANR	816470	Identifier	r_config_get_i		816370	0					
ANR	816471	ArgumentList	core -> config		816370	1					
ANR	816472	Argument	core -> config		816370	0					
ANR	816473	PtrMemberAccess	core -> config		816370	0					
ANR	816474	Identifier	core		816370	0					
ANR	816475	Identifier	config		816370	1					
ANR	816476	Argument	"""asm.relsub"""		816370	1					
ANR	816477	PrimaryExpression	"""asm.relsub"""		816370	0					
ANR	816478	IdentifierDeclStatement	"int ret , i , j , idx , size ;"	1484:1:50874:50898	816370	7	True				
ANR	816479	IdentifierDecl	ret		816370	0					
ANR	816480	IdentifierDeclType	int		816370	0					
ANR	816481	Identifier	ret		816370	1					
ANR	816482	IdentifierDecl	i		816370	1					
ANR	816483	IdentifierDeclType	int		816370	0					
ANR	816484	Identifier	i		816370	1					
ANR	816485	IdentifierDecl	j		816370	2					
ANR	816486	IdentifierDeclType	int		816370	0					
ANR	816487	Identifier	j		816370	1					
ANR	816488	IdentifierDecl	idx		816370	3					
ANR	816489	IdentifierDeclType	int		816370	0					
ANR	816490	Identifier	idx		816370	1					
ANR	816491	IdentifierDecl	size		816370	4					
ANR	816492	IdentifierDeclType	int		816370	0					
ANR	816493	Identifier	size		816370	1					
ANR	816494	IdentifierDeclStatement	"const char * color = """" ;"	1485:1:50901:50923	816370	8	True				
ANR	816495	IdentifierDecl	"* color = """""		816370	0					
ANR	816496	IdentifierDeclType	const char *		816370	0					
ANR	816497	Identifier	color		816370	1					
ANR	816498	AssignmentExpression	"* color = """""		816370	2		=			
ANR	816499	Identifier	color		816370	0					
ANR	816500	PrimaryExpression	""""""		816370	1					
ANR	816501	IdentifierDeclStatement	const char * esilstr ;	1486:1:50926:50945	816370	9	True				
ANR	816502	IdentifierDecl	* esilstr		816370	0					
ANR	816503	IdentifierDeclType	const char *		816370	0					
ANR	816504	Identifier	esilstr		816370	1					
ANR	816505	IdentifierDeclStatement	const char * opexstr ;	1487:1:50948:50967	816370	10	True				
ANR	816506	IdentifierDecl	* opexstr		816370	0					
ANR	816507	IdentifierDeclType	const char *		816370	0					
ANR	816508	Identifier	opexstr		816370	1					
ANR	816509	IdentifierDeclStatement	RAnalHint * hint ;	1488:1:50970:50985	816370	11	True				
ANR	816510	IdentifierDecl	* hint		816370	0					
ANR	816511	IdentifierDeclType	RAnalHint *		816370	0					
ANR	816512	Identifier	hint		816370	1					
ANR	816513	IdentifierDeclStatement	RAnalEsil * esil = NULL ;	1489:1:50988:51010	816370	12	True				
ANR	816514	IdentifierDecl	* esil = NULL		816370	0					
ANR	816515	IdentifierDeclType	RAnalEsil *		816370	0					
ANR	816516	Identifier	esil		816370	1					
ANR	816517	AssignmentExpression	* esil = NULL		816370	2		=			
ANR	816518	Identifier	NULL		816370	0					
ANR	816519	Identifier	NULL		816370	1					
ANR	816520	IdentifierDeclStatement	RAsmOp asmop ;	1490:1:51013:51025	816370	13	True				
ANR	816521	IdentifierDecl	asmop		816370	0					
ANR	816522	IdentifierDeclType	RAsmOp		816370	0					
ANR	816523	Identifier	asmop		816370	1					
ANR	816524	IdentifierDeclStatement	RAnalOp op = { 0 } ;	1491:1:51028:51044	816370	14	True				
ANR	816525	IdentifierDecl	op = { 0 }		816370	0					
ANR	816526	IdentifierDeclType	RAnalOp		816370	0					
ANR	816527	Identifier	op		816370	1					
ANR	816528	AssignmentExpression	op = { 0 }		816370	2		=			
ANR	816529	Identifier	op		816370	0					
ANR	816530	InitializerList	0		816370	1					
ANR	816531	PrimaryExpression	0		816370	0					
ANR	816532	IdentifierDeclStatement	ut64 addr ;	1492:1:51047:51056	816370	15	True				
ANR	816533	IdentifierDecl	addr		816370	0					
ANR	816534	IdentifierDeclType	ut64		816370	0					
ANR	816535	Identifier	addr		816370	1					
ANR	816536	IdentifierDeclStatement	PJ * pj = NULL ;	1493:1:51059:51072	816370	16	True				
ANR	816537	IdentifierDecl	* pj = NULL		816370	0					
ANR	816538	IdentifierDeclType	PJ *		816370	0					
ANR	816539	Identifier	pj		816370	1					
ANR	816540	AssignmentExpression	* pj = NULL		816370	2		=			
ANR	816541	Identifier	NULL		816370	0					
ANR	816542	Identifier	NULL		816370	1					
ANR	816543	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	1494:1:51075:51146	816370	17	True				
ANR	816544	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		816370	0					
ANR	816545	IdentifierDeclType	unsigned int		816370	0					
ANR	816546	Identifier	addrsize		816370	1					
ANR	816547	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		816370	2		=			
ANR	816548	Identifier	addrsize		816370	0					
ANR	816549	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		816370	1					
ANR	816550	Callee	r_config_get_i		816370	0					
ANR	816551	Identifier	r_config_get_i		816370	0					
ANR	816552	ArgumentList	core -> config		816370	1					
ANR	816553	Argument	core -> config		816370	0					
ANR	816554	PtrMemberAccess	core -> config		816370	0					
ANR	816555	Identifier	core		816370	0					
ANR	816556	Identifier	config		816370	1					
ANR	816557	Argument	"""esil.addr.size"""		816370	1					
ANR	816558	PrimaryExpression	"""esil.addr.size"""		816370	0					
ANR	816559	IdentifierDeclStatement	int totalsize = 0 ;	1495:1:51149:51166	816370	18	True				
ANR	816560	IdentifierDecl	totalsize = 0		816370	0					
ANR	816561	IdentifierDeclType	int		816370	0					
ANR	816562	Identifier	totalsize		816370	1					
ANR	816563	AssignmentExpression	totalsize = 0		816370	2		=			
ANR	816564	Identifier	totalsize		816370	0					
ANR	816565	PrimaryExpression	0		816370	1					
ANR	816566	IfStatement	if ( use_color )		816370	19					
ANR	816567	Condition	use_color	1498:5:51236:51244	816370	0	True				
ANR	816568	Identifier	use_color		816370	0					
ANR	816569	CompoundStatement		23:16:787:787	816370	1					
ANR	816570	ExpressionStatement	color = core -> cons -> context -> pal . label	1499:2:51251:51289	816370	0	True				
ANR	816571	AssignmentExpression	color = core -> cons -> context -> pal . label		816370	0		=			
ANR	816572	Identifier	color		816370	0					
ANR	816573	MemberAccess	core -> cons -> context -> pal . label		816370	1					
ANR	816574	PtrMemberAccess	core -> cons -> context -> pal		816370	0					
ANR	816575	PtrMemberAccess	core -> cons -> context		816370	0					
ANR	816576	PtrMemberAccess	core -> cons		816370	0					
ANR	816577	Identifier	core		816370	0					
ANR	816578	Identifier	cons		816370	1					
ANR	816579	Identifier	context		816370	1					
ANR	816580	Identifier	pal		816370	1					
ANR	816581	Identifier	label		816370	1					
ANR	816582	SwitchStatement	switch ( fmt )		816370	20					
ANR	816583	Condition	fmt	1501:9:51303:51305	816370	0	True				
ANR	816584	Identifier	fmt		816370	0					
ANR	816585	CompoundStatement		26:14:848:848	816370	1					
ANR	816586	Label	case 'j' :	1502:1:51311:51319	816370	0	True				
ANR	816587	CompoundStatement		27:11:861:861	816370	1					
ANR	816588	ExpressionStatement	pj = pj_new ( )	1503:2:51325:51339	816370	0	True				
ANR	816589	AssignmentExpression	pj = pj_new ( )		816370	0		=			
ANR	816590	Identifier	pj		816370	0					
ANR	816591	CallExpression	pj_new ( )		816370	1					
ANR	816592	Callee	pj_new		816370	0					
ANR	816593	Identifier	pj_new		816370	0					
ANR	816594	ArgumentList			816370	1					
ANR	816595	IfStatement	if ( ! pj )		816370	1					
ANR	816596	Condition	! pj	1504:6:51347:51349	816370	0	True				
ANR	816597	UnaryOperationExpression	! pj		816370	0					
ANR	816598	UnaryOperator	!		816370	0					
ANR	816599	Identifier	pj		816370	1					
ANR	816600	CompoundStatement		29:11:892:892	816370	1					
ANR	816601	BreakStatement	break ;	1505:3:51357:51362	816370	0	True				
ANR	816602	ExpressionStatement	pj_a ( pj )	1507:2:51370:51379	816370	2	True				
ANR	816603	CallExpression	pj_a ( pj )		816370	0					
ANR	816604	Callee	pj_a		816370	0					
ANR	816605	Identifier	pj_a		816370	0					
ANR	816606	ArgumentList	pj		816370	1					
ANR	816607	Argument	pj		816370	0					
ANR	816608	Identifier	pj		816370	0					
ANR	816609	BreakStatement	break ;	1508:3:51384:51389	816370	2	True				
ANR	816610	Label	case 'r' :	1509:1:51392:51400	816370	3	True				
ANR	816611	ExpressionStatement	"esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"	1511:2:51443:51495	816370	4	True				
ANR	816612	AssignmentExpression	"esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		816370	0		=			
ANR	816613	Identifier	esil		816370	0					
ANR	816614	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		816370	1					
ANR	816615	Callee	r_anal_esil_new		816370	0					
ANR	816616	Identifier	r_anal_esil_new		816370	0					
ANR	816617	ArgumentList	stacksize		816370	1					
ANR	816618	Argument	stacksize		816370	0					
ANR	816619	Identifier	stacksize		816370	0					
ANR	816620	Argument	iotrap		816370	1					
ANR	816621	Identifier	iotrap		816370	0					
ANR	816622	Argument	addrsize		816370	2					
ANR	816623	Identifier	addrsize		816370	0					
ANR	816624	IfStatement	if ( ! esil )		816370	5					
ANR	816625	Condition	! esil	1512:6:51503:51507	816370	0	True				
ANR	816626	UnaryOperationExpression	! esil		816370	0					
ANR	816627	UnaryOperator	!		816370	0					
ANR	816628	Identifier	esil		816370	1					
ANR	816629	CompoundStatement		37:13:1050:1050	816370	1					
ANR	816630	ReturnStatement	return ;	1513:3:51515:51521	816370	0	True				
ANR	816631	ExpressionStatement	"r_anal_esil_to_reil_setup ( esil , core -> anal , romem , stats )"	1515:2:51529:51587	816370	6	True				
ANR	816632	CallExpression	"r_anal_esil_to_reil_setup ( esil , core -> anal , romem , stats )"		816370	0					
ANR	816633	Callee	r_anal_esil_to_reil_setup		816370	0					
ANR	816634	Identifier	r_anal_esil_to_reil_setup		816370	0					
ANR	816635	ArgumentList	esil		816370	1					
ANR	816636	Argument	esil		816370	0					
ANR	816637	Identifier	esil		816370	0					
ANR	816638	Argument	core -> anal		816370	1					
ANR	816639	PtrMemberAccess	core -> anal		816370	0					
ANR	816640	Identifier	core		816370	0					
ANR	816641	Identifier	anal		816370	1					
ANR	816642	Argument	romem		816370	2					
ANR	816643	Identifier	romem		816370	0					
ANR	816644	Argument	stats		816370	3					
ANR	816645	Identifier	stats		816370	0					
ANR	816646	ExpressionStatement	"r_anal_esil_set_pc ( esil , core -> offset )"	1516:2:51591:51630	816370	7	True				
ANR	816647	CallExpression	"r_anal_esil_set_pc ( esil , core -> offset )"		816370	0					
ANR	816648	Callee	r_anal_esil_set_pc		816370	0					
ANR	816649	Identifier	r_anal_esil_set_pc		816370	0					
ANR	816650	ArgumentList	esil		816370	1					
ANR	816651	Argument	esil		816370	0					
ANR	816652	Identifier	esil		816370	0					
ANR	816653	Argument	core -> offset		816370	1					
ANR	816654	PtrMemberAccess	core -> offset		816370	0					
ANR	816655	Identifier	core		816370	0					
ANR	816656	Identifier	offset		816370	1					
ANR	816657	BreakStatement	break ;	1517:2:51634:51639	816370	8	True				
ANR	816658	ForStatement	"for ( i = idx = ret = 0 ; idx < len && ( ! nops || ( nops && i < nops ) ) ; i ++ , idx += ret )"		816370	21					
ANR	816659	ForInit	i = idx = ret = 0 ;	1519:6:51650:51667	816370	0	True				
ANR	816660	AssignmentExpression	i = idx = ret = 0		816370	0		=			
ANR	816661	Identifier	i		816370	0					
ANR	816662	AssignmentExpression	idx = ret = 0		816370	1		=			
ANR	816663	Identifier	idx		816370	0					
ANR	816664	AssignmentExpression	ret = 0		816370	1		=			
ANR	816665	Identifier	ret		816370	0					
ANR	816666	PrimaryExpression	0		816370	1					
ANR	816667	Condition	idx < len && ( ! nops || ( nops && i < nops ) )	1519:25:51669:51710	816370	1	True				
ANR	816668	AndExpression	idx < len && ( ! nops || ( nops && i < nops ) )		816370	0		&&			
ANR	816669	RelationalExpression	idx < len		816370	0		<			
ANR	816670	Identifier	idx		816370	0					
ANR	816671	Identifier	len		816370	1					
ANR	816672	OrExpression	! nops || ( nops && i < nops )		816370	1		||			
ANR	816673	UnaryOperationExpression	! nops		816370	0					
ANR	816674	UnaryOperator	!		816370	0					
ANR	816675	Identifier	nops		816370	1					
ANR	816676	AndExpression	nops && i < nops		816370	1		&&			
ANR	816677	Identifier	nops		816370	0					
ANR	816678	RelationalExpression	i < nops		816370	1		<			
ANR	816679	Identifier	i		816370	0					
ANR	816680	Identifier	nops		816370	1					
ANR	816681	Expression	"i ++ , idx += ret"	1519:69:51713:51727	816370	2	True				
ANR	816682	PostIncDecOperationExpression	i ++		816370	0					
ANR	816683	Identifier	i		816370	0					
ANR	816684	IncDec	++		816370	1					
ANR	816685	AssignmentExpression	idx += ret		816370	1		+=			
ANR	816686	Identifier	idx		816370	0					
ANR	816687	Identifier	ret		816370	1					
ANR	816688	CompoundStatement		55:2:1760:1789	816370	3					
ANR	816689	ExpressionStatement	addr = core -> offset + idx	1520:2:51734:51759	816370	0	True				
ANR	816690	AssignmentExpression	addr = core -> offset + idx		816370	0		=			
ANR	816691	Identifier	addr		816370	0					
ANR	816692	AdditiveExpression	core -> offset + idx		816370	1		+			
ANR	816693	PtrMemberAccess	core -> offset		816370	0					
ANR	816694	Identifier	core		816370	0					
ANR	816695	Identifier	offset		816370	1					
ANR	816696	Identifier	idx		816370	1					
ANR	816697	ExpressionStatement	"hint = r_anal_hint_get ( core -> anal , addr )"	1522:2:51794:51835	816370	1	True				
ANR	816698	AssignmentExpression	"hint = r_anal_hint_get ( core -> anal , addr )"		816370	0		=			
ANR	816699	Identifier	hint		816370	0					
ANR	816700	CallExpression	"r_anal_hint_get ( core -> anal , addr )"		816370	1					
ANR	816701	Callee	r_anal_hint_get		816370	0					
ANR	816702	Identifier	r_anal_hint_get		816370	0					
ANR	816703	ArgumentList	core -> anal		816370	1					
ANR	816704	Argument	core -> anal		816370	0					
ANR	816705	PtrMemberAccess	core -> anal		816370	0					
ANR	816706	Identifier	core		816370	0					
ANR	816707	Identifier	anal		816370	1					
ANR	816708	Argument	addr		816370	1					
ANR	816709	Identifier	addr		816370	0					
ANR	816710	ExpressionStatement	"r_asm_set_pc ( core -> assembler , addr )"	1523:2:51839:51875	816370	2	True				
ANR	816711	CallExpression	"r_asm_set_pc ( core -> assembler , addr )"		816370	0					
ANR	816712	Callee	r_asm_set_pc		816370	0					
ANR	816713	Identifier	r_asm_set_pc		816370	0					
ANR	816714	ArgumentList	core -> assembler		816370	1					
ANR	816715	Argument	core -> assembler		816370	0					
ANR	816716	PtrMemberAccess	core -> assembler		816370	0					
ANR	816717	Identifier	core		816370	0					
ANR	816718	Identifier	assembler		816370	1					
ANR	816719	Argument	addr		816370	1					
ANR	816720	Identifier	addr		816370	0					
ANR	816721	ExpressionStatement	"( void ) r_asm_disassemble ( core -> assembler , & asmop , buf + idx , len - idx )"	1524:2:51879:51950	816370	3	True				
ANR	816722	CastExpression	"( void ) r_asm_disassemble ( core -> assembler , & asmop , buf + idx , len - idx )"		816370	0					
ANR	816723	CastTarget	void		816370	0					
ANR	816724	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf + idx , len - idx )"		816370	1					
ANR	816725	Callee	r_asm_disassemble		816370	0					
ANR	816726	Identifier	r_asm_disassemble		816370	0					
ANR	816727	ArgumentList	core -> assembler		816370	1					
ANR	816728	Argument	core -> assembler		816370	0					
ANR	816729	PtrMemberAccess	core -> assembler		816370	0					
ANR	816730	Identifier	core		816370	0					
ANR	816731	Identifier	assembler		816370	1					
ANR	816732	Argument	& asmop		816370	1					
ANR	816733	UnaryOperationExpression	& asmop		816370	0					
ANR	816734	UnaryOperator	&		816370	0					
ANR	816735	Identifier	asmop		816370	1					
ANR	816736	Argument	buf + idx		816370	2					
ANR	816737	AdditiveExpression	buf + idx		816370	0		+			
ANR	816738	Identifier	buf		816370	0					
ANR	816739	Identifier	idx		816370	1					
ANR	816740	Argument	len - idx		816370	3					
ANR	816741	AdditiveExpression	len - idx		816370	0		-			
ANR	816742	Identifier	len		816370	0					
ANR	816743	Identifier	idx		816370	1					
ANR	816744	ExpressionStatement	"ret = r_anal_op ( core -> anal , & op , addr , buf + idx , len - idx , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_OPEX | R_ANAL_OP_MASK_HINT )"	1525:2:51954:52083	816370	4	True				
ANR	816745	AssignmentExpression	"ret = r_anal_op ( core -> anal , & op , addr , buf + idx , len - idx , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_OPEX | R_ANAL_OP_MASK_HINT )"		816370	0		=			
ANR	816746	Identifier	ret		816370	0					
ANR	816747	CallExpression	"r_anal_op ( core -> anal , & op , addr , buf + idx , len - idx , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_OPEX | R_ANAL_OP_MASK_HINT )"		816370	1					
ANR	816748	Callee	r_anal_op		816370	0					
ANR	816749	Identifier	r_anal_op		816370	0					
ANR	816750	ArgumentList	core -> anal		816370	1					
ANR	816751	Argument	core -> anal		816370	0					
ANR	816752	PtrMemberAccess	core -> anal		816370	0					
ANR	816753	Identifier	core		816370	0					
ANR	816754	Identifier	anal		816370	1					
ANR	816755	Argument	& op		816370	1					
ANR	816756	UnaryOperationExpression	& op		816370	0					
ANR	816757	UnaryOperator	&		816370	0					
ANR	816758	Identifier	op		816370	1					
ANR	816759	Argument	addr		816370	2					
ANR	816760	Identifier	addr		816370	0					
ANR	816761	Argument	buf + idx		816370	3					
ANR	816762	AdditiveExpression	buf + idx		816370	0		+			
ANR	816763	Identifier	buf		816370	0					
ANR	816764	Identifier	idx		816370	1					
ANR	816765	Argument	len - idx		816370	4					
ANR	816766	AdditiveExpression	len - idx		816370	0		-			
ANR	816767	Identifier	len		816370	0					
ANR	816768	Identifier	idx		816370	1					
ANR	816769	Argument	R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_OPEX | R_ANAL_OP_MASK_HINT		816370	5					
ANR	816770	InclusiveOrExpression	R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_OPEX | R_ANAL_OP_MASK_HINT		816370	0		|			
ANR	816771	Identifier	R_ANAL_OP_MASK_ESIL		816370	0					
ANR	816772	InclusiveOrExpression	R_ANAL_OP_MASK_OPEX | R_ANAL_OP_MASK_HINT		816370	1		|			
ANR	816773	Identifier	R_ANAL_OP_MASK_OPEX		816370	0					
ANR	816774	Identifier	R_ANAL_OP_MASK_HINT		816370	1					
ANR	816775	ExpressionStatement	esilstr = R_STRBUF_SAFEGET ( & op . esil )	1527:2:52087:52124	816370	5	True				
ANR	816776	AssignmentExpression	esilstr = R_STRBUF_SAFEGET ( & op . esil )		816370	0		=			
ANR	816777	Identifier	esilstr		816370	0					
ANR	816778	CallExpression	R_STRBUF_SAFEGET ( & op . esil )		816370	1					
ANR	816779	Callee	R_STRBUF_SAFEGET		816370	0					
ANR	816780	Identifier	R_STRBUF_SAFEGET		816370	0					
ANR	816781	ArgumentList	& op . esil		816370	1					
ANR	816782	Argument	& op . esil		816370	0					
ANR	816783	UnaryOperationExpression	& op . esil		816370	0					
ANR	816784	UnaryOperator	&		816370	0					
ANR	816785	MemberAccess	op . esil		816370	1					
ANR	816786	Identifier	op		816370	0					
ANR	816787	Identifier	esil		816370	1					
ANR	816788	ExpressionStatement	opexstr = R_STRBUF_SAFEGET ( & op . opex )	1528:2:52128:52165	816370	6	True				
ANR	816789	AssignmentExpression	opexstr = R_STRBUF_SAFEGET ( & op . opex )		816370	0		=			
ANR	816790	Identifier	opexstr		816370	0					
ANR	816791	CallExpression	R_STRBUF_SAFEGET ( & op . opex )		816370	1					
ANR	816792	Callee	R_STRBUF_SAFEGET		816370	0					
ANR	816793	Identifier	R_STRBUF_SAFEGET		816370	0					
ANR	816794	ArgumentList	& op . opex		816370	1					
ANR	816795	Argument	& op . opex		816370	0					
ANR	816796	UnaryOperationExpression	& op . opex		816370	0					
ANR	816797	UnaryOperator	&		816370	0					
ANR	816798	MemberAccess	op . opex		816370	1					
ANR	816799	Identifier	op		816370	0					
ANR	816800	Identifier	opex		816370	1					
ANR	816801	IdentifierDeclStatement	char * mnem = strdup ( r_asm_op_get_asm ( & asmop ) ) ;	1529:2:52169:52216	816370	7	True				
ANR	816802	IdentifierDecl	* mnem = strdup ( r_asm_op_get_asm ( & asmop ) )		816370	0					
ANR	816803	IdentifierDeclType	char *		816370	0					
ANR	816804	Identifier	mnem		816370	1					
ANR	816805	AssignmentExpression	* mnem = strdup ( r_asm_op_get_asm ( & asmop ) )		816370	2		=			
ANR	816806	Identifier	mnem		816370	0					
ANR	816807	CallExpression	strdup ( r_asm_op_get_asm ( & asmop ) )		816370	1					
ANR	816808	Callee	strdup		816370	0					
ANR	816809	Identifier	strdup		816370	0					
ANR	816810	ArgumentList	r_asm_op_get_asm ( & asmop )		816370	1					
ANR	816811	Argument	r_asm_op_get_asm ( & asmop )		816370	0					
ANR	816812	CallExpression	r_asm_op_get_asm ( & asmop )		816370	0					
ANR	816813	Callee	r_asm_op_get_asm		816370	0					
ANR	816814	Identifier	r_asm_op_get_asm		816370	0					
ANR	816815	ArgumentList	& asmop		816370	1					
ANR	816816	Argument	& asmop		816370	0					
ANR	816817	UnaryOperationExpression	& asmop		816370	0					
ANR	816818	UnaryOperator	&		816370	0					
ANR	816819	Identifier	asmop		816370	1					
ANR	816820	IdentifierDeclStatement	"char * sp = strchr ( mnem , ' ' ) ;"	1530:2:52220:52249	816370	8	True				
ANR	816821	IdentifierDecl	"* sp = strchr ( mnem , ' ' )"		816370	0					
ANR	816822	IdentifierDeclType	char *		816370	0					
ANR	816823	Identifier	sp		816370	1					
ANR	816824	AssignmentExpression	"* sp = strchr ( mnem , ' ' )"		816370	2		=			
ANR	816825	Identifier	sp		816370	0					
ANR	816826	CallExpression	"strchr ( mnem , ' ' )"		816370	1					
ANR	816827	Callee	strchr		816370	0					
ANR	816828	Identifier	strchr		816370	0					
ANR	816829	ArgumentList	mnem		816370	1					
ANR	816830	Argument	mnem		816370	0					
ANR	816831	Identifier	mnem		816370	0					
ANR	816832	Argument	' '		816370	1					
ANR	816833	PrimaryExpression	' '		816370	0					
ANR	816834	IfStatement	if ( sp )		816370	9					
ANR	816835	Condition	sp	1531:6:52257:52258	816370	0	True				
ANR	816836	Identifier	sp		816370	0					
ANR	816837	CompoundStatement		56:10:1801:1801	816370	1					
ANR	816838	ExpressionStatement	* sp = 0	1532:3:52266:52273	816370	0	True				
ANR	816839	AssignmentExpression	* sp = 0		816370	0		=			
ANR	816840	UnaryOperationExpression	* sp		816370	0					
ANR	816841	UnaryOperator	*		816370	0					
ANR	816842	Identifier	sp		816370	1					
ANR	816843	PrimaryExpression	0		816370	1					
ANR	816844	IfStatement	if ( op . prefix )		816370	1					
ANR	816845	Condition	op . prefix	1533:7:52282:52290	816370	0	True				
ANR	816846	MemberAccess	op . prefix		816370	0					
ANR	816847	Identifier	op		816370	0					
ANR	816848	Identifier	prefix		816370	1					
ANR	816849	CompoundStatement		60:4:1872:1900	816370	1					
ANR	816850	IdentifierDeclStatement	char * arg = strdup ( sp + 1 ) ;	1534:4:52299:52326	816370	0	True				
ANR	816851	IdentifierDecl	* arg = strdup ( sp + 1 )		816370	0					
ANR	816852	IdentifierDeclType	char *		816370	0					
ANR	816853	Identifier	arg		816370	1					
ANR	816854	AssignmentExpression	* arg = strdup ( sp + 1 )		816370	2		=			
ANR	816855	Identifier	arg		816370	0					
ANR	816856	CallExpression	strdup ( sp + 1 )		816370	1					
ANR	816857	Callee	strdup		816370	0					
ANR	816858	Identifier	strdup		816370	0					
ANR	816859	ArgumentList	sp + 1		816370	1					
ANR	816860	Argument	sp + 1		816370	0					
ANR	816861	AdditiveExpression	sp + 1		816370	0		+			
ANR	816862	Identifier	sp		816370	0					
ANR	816863	PrimaryExpression	1		816370	1					
ANR	816864	IdentifierDeclStatement	"char * sp = strchr ( arg , ' ' ) ;"	1535:4:52332:52360	816370	1	True				
ANR	816865	IdentifierDecl	"* sp = strchr ( arg , ' ' )"		816370	0					
ANR	816866	IdentifierDeclType	char *		816370	0					
ANR	816867	Identifier	sp		816370	1					
ANR	816868	AssignmentExpression	"* sp = strchr ( arg , ' ' )"		816370	2		=			
ANR	816869	Identifier	sp		816370	0					
ANR	816870	CallExpression	"strchr ( arg , ' ' )"		816370	1					
ANR	816871	Callee	strchr		816370	0					
ANR	816872	Identifier	strchr		816370	0					
ANR	816873	ArgumentList	arg		816370	1					
ANR	816874	Argument	arg		816370	0					
ANR	816875	Identifier	arg		816370	0					
ANR	816876	Argument	' '		816370	1					
ANR	816877	PrimaryExpression	' '		816370	0					
ANR	816878	IfStatement	if ( sp )		816370	2					
ANR	816879	Condition	sp	1536:8:52370:52371	816370	0	True				
ANR	816880	Identifier	sp		816370	0					
ANR	816881	CompoundStatement		61:12:1914:1914	816370	1					
ANR	816882	ExpressionStatement	* sp = 0	1537:5:52381:52388	816370	0	True				
ANR	816883	AssignmentExpression	* sp = 0		816370	0		=			
ANR	816884	UnaryOperationExpression	* sp		816370	0					
ANR	816885	UnaryOperator	*		816370	0					
ANR	816886	Identifier	sp		816370	1					
ANR	816887	PrimaryExpression	0		816370	1					
ANR	816888	ExpressionStatement	free ( mnem )	1539:4:52400:52411	816370	3	True				
ANR	816889	CallExpression	free ( mnem )		816370	0					
ANR	816890	Callee	free		816370	0					
ANR	816891	Identifier	free		816370	0					
ANR	816892	ArgumentList	mnem		816370	1					
ANR	816893	Argument	mnem		816370	0					
ANR	816894	Identifier	mnem		816370	0					
ANR	816895	ExpressionStatement	mnem = arg	1540:4:52417:52427	816370	4	True				
ANR	816896	AssignmentExpression	mnem = arg		816370	0		=			
ANR	816897	Identifier	mnem		816370	0					
ANR	816898	Identifier	arg		816370	1					
ANR	816899	IfStatement	if ( ret < 1 && fmt != 'd' )		816370	10					
ANR	816900	Condition	ret < 1 && fmt != 'd'	1543:6:52444:52464	816370	0	True				
ANR	816901	AndExpression	ret < 1 && fmt != 'd'		816370	0		&&			
ANR	816902	RelationalExpression	ret < 1		816370	0		<			
ANR	816903	Identifier	ret		816370	0					
ANR	816904	PrimaryExpression	1		816370	1					
ANR	816905	EqualityExpression	fmt != 'd'		816370	1		!=			
ANR	816906	Identifier	fmt		816370	0					
ANR	816907	PrimaryExpression	'd'		816370	1					
ANR	816908	CompoundStatement		68:29:2007:2007	816370	1					
ANR	816909	Statement	eprintf	1544:3:52472:52478	816370	0	True				
ANR	816910	Statement	(	1544:11:52480:52480	816370	1	True				
ANR	816911	Statement	"""Oops at 0x%08"""	1544:12:52481:52495	816370	2	True				
ANR	816912	Statement	PFMT64x	1544:28:52497:52503	816370	3	True				
ANR	816913	Statement	""" ("""	1544:36:52505:52508	816370	4	True				
ANR	816914	Statement	","	1544:40:52509:52509	816370	5	True				
ANR	816915	Statement	core	1544:42:52511:52514	816370	6	True				
ANR	816916	Statement	->	1544:46:52515:52516	816370	7	True				
ANR	816917	Statement	offset	1544:48:52517:52522	816370	8	True				
ANR	816918	Statement	+	1544:55:52524:52524	816370	9	True				
ANR	816919	Statement	idx	1544:57:52526:52528	816370	10	True				
ANR	816920	Statement	)	1544:60:52529:52529	816370	11	True				
ANR	816921	ExpressionStatement		1544:61:52530:52530	816370	12	True				
ANR	816922	ForStatement	"for ( i = idx , j = 0 ; i < core -> blocksize && j < 3 ; ++ i , ++ j )"		816370	13					
ANR	816923	ForInit	"i = idx , j = 0 ;"	1545:8:52540:52554	816370	0	True				
ANR	816924	Expression	"i = idx , j = 0"		816370	0					
ANR	816925	AssignmentExpression	i = idx		816370	0		=			
ANR	816926	Identifier	i		816370	0					
ANR	816927	Identifier	idx		816370	1					
ANR	816928	AssignmentExpression	j = 0		816370	1		=			
ANR	816929	Identifier	j		816370	0					
ANR	816930	PrimaryExpression	0		816370	1					
ANR	816931	Condition	i < core -> blocksize && j < 3	1545:24:52556:52583	816370	1	True				
ANR	816932	AndExpression	i < core -> blocksize && j < 3		816370	0		&&			
ANR	816933	RelationalExpression	i < core -> blocksize		816370	0		<			
ANR	816934	Identifier	i		816370	0					
ANR	816935	PtrMemberAccess	core -> blocksize		816370	1					
ANR	816936	Identifier	core		816370	0					
ANR	816937	Identifier	blocksize		816370	1					
ANR	816938	RelationalExpression	j < 3		816370	1		<			
ANR	816939	Identifier	j		816370	0					
ANR	816940	PrimaryExpression	3		816370	1					
ANR	816941	Expression	"++ i , ++ j"	1545:54:52586:52593	816370	2	True				
ANR	816942	UnaryExpression	++ i		816370	0					
ANR	816943	IncDec	++		816370	0					
ANR	816944	Identifier	i		816370	1					
ANR	816945	UnaryExpression	++ j		816370	1					
ANR	816946	IncDec	++		816370	0					
ANR	816947	Identifier	j		816370	1					
ANR	816948	CompoundStatement		70:64:2136:2136	816370	3					
ANR	816949	ExpressionStatement	"eprintf ( ""%02x "" , buf [ i ] )"	1546:4:52602:52627	816370	0	True				
ANR	816950	CallExpression	"eprintf ( ""%02x "" , buf [ i ] )"		816370	0					
ANR	816951	Callee	eprintf		816370	0					
ANR	816952	Identifier	eprintf		816370	0					
ANR	816953	ArgumentList	"""%02x """		816370	1					
ANR	816954	Argument	"""%02x """		816370	0					
ANR	816955	PrimaryExpression	"""%02x """		816370	0					
ANR	816956	Argument	buf [ i ]		816370	1					
ANR	816957	ArrayIndexing	buf [ i ]		816370	0					
ANR	816958	Identifier	buf		816370	0					
ANR	816959	Identifier	i		816370	1					
ANR	816960	ExpressionStatement	"eprintf ( ""...)\\n"" )"	1548:3:52637:52655	816370	14	True				
ANR	816961	CallExpression	"eprintf ( ""...)\\n"" )"		816370	0					
ANR	816962	Callee	eprintf		816370	0					
ANR	816963	Identifier	eprintf		816370	0					
ANR	816964	ArgumentList	"""...)\\n"""		816370	1					
ANR	816965	Argument	"""...)\\n"""		816370	0					
ANR	816966	PrimaryExpression	"""...)\\n"""		816370	0					
ANR	816967	ExpressionStatement	free ( mnem )	1549:3:52660:52671	816370	15	True				
ANR	816968	CallExpression	free ( mnem )		816370	0					
ANR	816969	Callee	free		816370	0					
ANR	816970	Identifier	free		816370	0					
ANR	816971	ArgumentList	mnem		816370	1					
ANR	816972	Argument	mnem		816370	0					
ANR	816973	Identifier	mnem		816370	0					
ANR	816974	BreakStatement	break ;	1550:3:52676:52681	816370	16	True				
ANR	816975	ExpressionStatement	size = ( hint && hint -> size ) ? hint -> size : op . size	1552:2:52689:52737	816370	11	True				
ANR	816976	AssignmentExpression	size = ( hint && hint -> size ) ? hint -> size : op . size		816370	0		=			
ANR	816977	Identifier	size		816370	0					
ANR	816978	ConditionalExpression	( hint && hint -> size ) ? hint -> size : op . size		816370	1					
ANR	816979	Condition	hint && hint -> size		816370	0					
ANR	816980	AndExpression	hint && hint -> size		816370	0		&&			
ANR	816981	Identifier	hint		816370	0					
ANR	816982	PtrMemberAccess	hint -> size		816370	1					
ANR	816983	Identifier	hint		816370	0					
ANR	816984	Identifier	size		816370	1					
ANR	816985	PtrMemberAccess	hint -> size		816370	1					
ANR	816986	Identifier	hint		816370	0					
ANR	816987	Identifier	size		816370	1					
ANR	816988	MemberAccess	op . size		816370	2					
ANR	816989	Identifier	op		816370	0					
ANR	816990	Identifier	size		816370	1					
ANR	816991	IfStatement	if ( fmt == 'd' )		816370	12					
ANR	816992	Condition	fmt == 'd'	1553:6:52745:52754	816370	0	True				
ANR	816993	EqualityExpression	fmt == 'd'		816370	0		==			
ANR	816994	Identifier	fmt		816370	0					
ANR	816995	PrimaryExpression	'd'		816370	1					
ANR	816996	CompoundStatement		79:3:2302:2351	816370	1					
ANR	816997	IdentifierDeclStatement	char * opname = strdup ( r_asm_op_get_asm ( & asmop ) ) ;	1554:3:52762:52811	816370	0	True				
ANR	816998	IdentifierDecl	* opname = strdup ( r_asm_op_get_asm ( & asmop ) )		816370	0					
ANR	816999	IdentifierDeclType	char *		816370	0					
ANR	817000	Identifier	opname		816370	1					
ANR	817001	AssignmentExpression	* opname = strdup ( r_asm_op_get_asm ( & asmop ) )		816370	2		=			
ANR	817002	Identifier	opname		816370	0					
ANR	817003	CallExpression	strdup ( r_asm_op_get_asm ( & asmop ) )		816370	1					
ANR	817004	Callee	strdup		816370	0					
ANR	817005	Identifier	strdup		816370	0					
ANR	817006	ArgumentList	r_asm_op_get_asm ( & asmop )		816370	1					
ANR	817007	Argument	r_asm_op_get_asm ( & asmop )		816370	0					
ANR	817008	CallExpression	r_asm_op_get_asm ( & asmop )		816370	0					
ANR	817009	Callee	r_asm_op_get_asm		816370	0					
ANR	817010	Identifier	r_asm_op_get_asm		816370	0					
ANR	817011	ArgumentList	& asmop		816370	1					
ANR	817012	Argument	& asmop		816370	0					
ANR	817013	UnaryOperationExpression	& asmop		816370	0					
ANR	817014	UnaryOperator	&		816370	0					
ANR	817015	Identifier	asmop		816370	1					
ANR	817016	IfStatement	if ( opname )		816370	1					
ANR	817017	Condition	opname	1555:7:52820:52825	816370	0	True				
ANR	817018	Identifier	opname		816370	0					
ANR	817019	CompoundStatement		82:4:2405:2455	816370	1					
ANR	817020	ExpressionStatement	"r_str_split ( opname , ' ' )"	1556:4:52834:52859	816370	0	True				
ANR	817021	CallExpression	"r_str_split ( opname , ' ' )"		816370	0					
ANR	817022	Callee	r_str_split		816370	0					
ANR	817023	Identifier	r_str_split		816370	0					
ANR	817024	ArgumentList	opname		816370	1					
ANR	817025	Argument	opname		816370	0					
ANR	817026	Identifier	opname		816370	0					
ANR	817027	Argument	' '		816370	1					
ANR	817028	PrimaryExpression	' '		816370	0					
ANR	817029	IdentifierDeclStatement	"char * d = r_asm_describe ( core -> assembler , opname ) ;"	1557:4:52865:52915	816370	1	True				
ANR	817030	IdentifierDecl	"* d = r_asm_describe ( core -> assembler , opname )"		816370	0					
ANR	817031	IdentifierDeclType	char *		816370	0					
ANR	817032	Identifier	d		816370	1					
ANR	817033	AssignmentExpression	"* d = r_asm_describe ( core -> assembler , opname )"		816370	2		=			
ANR	817034	Identifier	d		816370	0					
ANR	817035	CallExpression	"r_asm_describe ( core -> assembler , opname )"		816370	1					
ANR	817036	Callee	r_asm_describe		816370	0					
ANR	817037	Identifier	r_asm_describe		816370	0					
ANR	817038	ArgumentList	core -> assembler		816370	1					
ANR	817039	Argument	core -> assembler		816370	0					
ANR	817040	PtrMemberAccess	core -> assembler		816370	0					
ANR	817041	Identifier	core		816370	0					
ANR	817042	Identifier	assembler		816370	1					
ANR	817043	Argument	opname		816370	1					
ANR	817044	Identifier	opname		816370	0					
ANR	817045	IfStatement	if ( d && * d )		816370	2					
ANR	817046	Condition	d && * d	1558:8:52925:52931	816370	0	True				
ANR	817047	AndExpression	d && * d		816370	0		&&			
ANR	817048	Identifier	d		816370	0					
ANR	817049	UnaryOperationExpression	* d		816370	1					
ANR	817050	UnaryOperator	*		816370	0					
ANR	817051	Identifier	d		816370	1					
ANR	817052	CompoundStatement		83:17:2474:2474	816370	1					
ANR	817053	ExpressionStatement	"r_cons_printf ( ""%s: %s\\n"" , opname , d )"	1559:5:52941:52978	816370	0	True				
ANR	817054	CallExpression	"r_cons_printf ( ""%s: %s\\n"" , opname , d )"		816370	0					
ANR	817055	Callee	r_cons_printf		816370	0					
ANR	817056	Identifier	r_cons_printf		816370	0					
ANR	817057	ArgumentList	"""%s: %s\\n"""		816370	1					
ANR	817058	Argument	"""%s: %s\\n"""		816370	0					
ANR	817059	PrimaryExpression	"""%s: %s\\n"""		816370	0					
ANR	817060	Argument	opname		816370	1					
ANR	817061	Identifier	opname		816370	0					
ANR	817062	Argument	d		816370	2					
ANR	817063	Identifier	d		816370	0					
ANR	817064	ExpressionStatement	free ( d )	1560:5:52985:52993	816370	1	True				
ANR	817065	CallExpression	free ( d )		816370	0					
ANR	817066	Callee	free		816370	0					
ANR	817067	Identifier	free		816370	0					
ANR	817068	ArgumentList	d		816370	1					
ANR	817069	Argument	d		816370	0					
ANR	817070	Identifier	d		816370	0					
ANR	817071	ElseStatement	else		816370	0					
ANR	817072	CompoundStatement		86:11:2546:2546	816370	0					
ANR	817073	ExpressionStatement	"eprintf ( ""Unknown opcode\\n"" )"	1562:5:53013:53041	816370	0	True				
ANR	817074	CallExpression	"eprintf ( ""Unknown opcode\\n"" )"		816370	0					
ANR	817075	Callee	eprintf		816370	0					
ANR	817076	Identifier	eprintf		816370	0					
ANR	817077	ArgumentList	"""Unknown opcode\\n"""		816370	1					
ANR	817078	Argument	"""Unknown opcode\\n"""		816370	0					
ANR	817079	PrimaryExpression	"""Unknown opcode\\n"""		816370	0					
ANR	817080	ExpressionStatement	free ( opname )	1564:4:53053:53066	816370	3	True				
ANR	817081	CallExpression	free ( opname )		816370	0					
ANR	817082	Callee	free		816370	0					
ANR	817083	Identifier	free		816370	0					
ANR	817084	ArgumentList	opname		816370	1					
ANR	817085	Argument	opname		816370	0					
ANR	817086	Identifier	opname		816370	0					
ANR	817087	ElseStatement	else		816370	0					
ANR	817088	IfStatement	if ( fmt == 'e' )		816370	0					
ANR	817089	Condition	fmt == 'e'	1566:13:53086:53095	816370	0	True				
ANR	817090	EqualityExpression	fmt == 'e'		816370	0		==			
ANR	817091	Identifier	fmt		816370	0					
ANR	817092	PrimaryExpression	'e'		816370	1					
ANR	817093	CompoundStatement		91:25:2638:2638	816370	1					
ANR	817094	IfStatement	if ( * esilstr )		816370	0					
ANR	817095	Condition	* esilstr	1567:7:53107:53114	816370	0	True				
ANR	817096	UnaryOperationExpression	* esilstr		816370	0					
ANR	817097	UnaryOperator	*		816370	0					
ANR	817098	Identifier	esilstr		816370	1					
ANR	817099	CompoundStatement		92:17:2657:2657	816370	1					
ANR	817100	IfStatement	if ( use_color )		816370	0					
ANR	817101	Condition	use_color	1568:8:53127:53135	816370	0	True				
ANR	817102	Identifier	use_color		816370	0					
ANR	817103	CompoundStatement		93:19:2678:2678	816370	1					
ANR	817104	Statement	r_cons_printf	1569:5:53145:53157	816370	0	True				
ANR	817105	Statement	(	1569:19:53159:53159	816370	1	True				
ANR	817106	Statement	"""%s0x%"""	1569:20:53160:53166	816370	2	True				
ANR	817107	Statement	PFMT64x	1569:28:53168:53174	816370	3	True				
ANR	817108	Statement	Color_RESET	1569:36:53176:53186	816370	4	True				
ANR	817109	Statement	""" %s\\n"""	1569:48:53188:53194	816370	5	True				
ANR	817110	Statement	","	1569:55:53195:53195	816370	6	True				
ANR	817111	Statement	color	1569:57:53197:53201	816370	7	True				
ANR	817112	Statement	","	1569:62:53202:53202	816370	8	True				
ANR	817113	Statement	core	1569:64:53204:53207	816370	9	True				
ANR	817114	Statement	->	1569:68:53208:53209	816370	10	True				
ANR	817115	Statement	offset	1569:70:53210:53215	816370	11	True				
ANR	817116	Statement	+	1569:77:53217:53217	816370	12	True				
ANR	817117	Statement	idx	1569:79:53219:53221	816370	13	True				
ANR	817118	Statement	","	1569:82:53222:53222	816370	14	True				
ANR	817119	Statement	esilstr	1569:84:53224:53230	816370	15	True				
ANR	817120	Statement	)	1569:91:53231:53231	816370	16	True				
ANR	817121	ExpressionStatement		1569:92:53232:53232	816370	17	True				
ANR	817122	ElseStatement	else		816370	0					
ANR	817123	CompoundStatement		95:11:2785:2785	816370	0					
ANR	817124	Statement	r_cons_printf	1571:5:53252:53264	816370	0	True				
ANR	817125	Statement	(	1571:19:53266:53266	816370	1	True				
ANR	817126	Statement	"""0x%"""	1571:20:53267:53271	816370	2	True				
ANR	817127	Statement	PFMT64x	1571:26:53273:53279	816370	3	True				
ANR	817128	Statement	""" %s\\n"""	1571:34:53281:53287	816370	4	True				
ANR	817129	Statement	","	1571:41:53288:53288	816370	5	True				
ANR	817130	Statement	core	1571:43:53290:53293	816370	6	True				
ANR	817131	Statement	->	1571:47:53294:53295	816370	7	True				
ANR	817132	Statement	offset	1571:49:53296:53301	816370	8	True				
ANR	817133	Statement	+	1571:56:53303:53303	816370	9	True				
ANR	817134	Statement	idx	1571:58:53305:53307	816370	10	True				
ANR	817135	Statement	","	1571:61:53308:53308	816370	11	True				
ANR	817136	Statement	esilstr	1571:63:53310:53316	816370	12	True				
ANR	817137	Statement	)	1571:70:53317:53317	816370	13	True				
ANR	817138	ExpressionStatement		1571:71:53318:53318	816370	14	True				
ANR	817139	ElseStatement	else		816370	0					
ANR	817140	IfStatement	if ( fmt == 's' )		816370	0					
ANR	817141	Condition	fmt == 's'	1574:13:53344:53353	816370	0	True				
ANR	817142	EqualityExpression	fmt == 's'		816370	0		==			
ANR	817143	Identifier	fmt		816370	0					
ANR	817144	PrimaryExpression	's'		816370	1					
ANR	817145	CompoundStatement		99:25:2896:2896	816370	1					
ANR	817146	ExpressionStatement	totalsize += op . size	1575:3:53361:53381	816370	0	True				
ANR	817147	AssignmentExpression	totalsize += op . size		816370	0		+=			
ANR	817148	Identifier	totalsize		816370	0					
ANR	817149	MemberAccess	op . size		816370	1					
ANR	817150	Identifier	op		816370	0					
ANR	817151	Identifier	size		816370	1					
ANR	817152	ElseStatement	else		816370	0					
ANR	817153	IfStatement	if ( fmt == 'j' )		816370	0					
ANR	817154	Condition	fmt == 'j'	1576:13:53396:53405	816370	0	True				
ANR	817155	EqualityExpression	fmt == 'j'		816370	0		==			
ANR	817156	Identifier	fmt		816370	0					
ANR	817157	PrimaryExpression	'j'		816370	1					
ANR	817158	CompoundStatement		214:3:5961:6053	816370	1					
ANR	817159	IdentifierDeclStatement	char strsub [ 128 ] = { 0 } ;	1577:3:53413:53437	816370	0	True				
ANR	817160	IdentifierDecl	strsub [ 128 ] = { 0 }		816370	0					
ANR	817161	IdentifierDeclType	char [ 128 ]		816370	0					
ANR	817162	Identifier	strsub		816370	1					
ANR	817163	PrimaryExpression	128		816370	2					
ANR	817164	AssignmentExpression	strsub [ 128 ] = { 0 }		816370	3		=			
ANR	817165	Identifier	strsub		816370	0					
ANR	817166	InitializerList	0		816370	1					
ANR	817167	PrimaryExpression	0		816370	0					
ANR	817168	ExpressionStatement	"r_parse_varsub ( core -> parser , NULL , core -> offset + idx , asmop . size , r_asm_op_get_asm ( & asmop ) , strsub , sizeof ( strsub ) )"	1579:3:53454:53585	816370	1	True				
ANR	817169	CallExpression	"r_parse_varsub ( core -> parser , NULL , core -> offset + idx , asmop . size , r_asm_op_get_asm ( & asmop ) , strsub , sizeof ( strsub ) )"		816370	0					
ANR	817170	Callee	r_parse_varsub		816370	0					
ANR	817171	Identifier	r_parse_varsub		816370	0					
ANR	817172	ArgumentList	core -> parser		816370	1					
ANR	817173	Argument	core -> parser		816370	0					
ANR	817174	PtrMemberAccess	core -> parser		816370	0					
ANR	817175	Identifier	core		816370	0					
ANR	817176	Identifier	parser		816370	1					
ANR	817177	Argument	NULL		816370	1					
ANR	817178	Identifier	NULL		816370	0					
ANR	817179	Argument	core -> offset + idx		816370	2					
ANR	817180	AdditiveExpression	core -> offset + idx		816370	0		+			
ANR	817181	PtrMemberAccess	core -> offset		816370	0					
ANR	817182	Identifier	core		816370	0					
ANR	817183	Identifier	offset		816370	1					
ANR	817184	Identifier	idx		816370	1					
ANR	817185	Argument	asmop . size		816370	3					
ANR	817186	MemberAccess	asmop . size		816370	0					
ANR	817187	Identifier	asmop		816370	0					
ANR	817188	Identifier	size		816370	1					
ANR	817189	Argument	r_asm_op_get_asm ( & asmop )		816370	4					
ANR	817190	CallExpression	r_asm_op_get_asm ( & asmop )		816370	0					
ANR	817191	Callee	r_asm_op_get_asm		816370	0					
ANR	817192	Identifier	r_asm_op_get_asm		816370	0					
ANR	817193	ArgumentList	& asmop		816370	1					
ANR	817194	Argument	& asmop		816370	0					
ANR	817195	UnaryOperationExpression	& asmop		816370	0					
ANR	817196	UnaryOperator	&		816370	0					
ANR	817197	Identifier	asmop		816370	1					
ANR	817198	Argument	strsub		816370	5					
ANR	817199	Identifier	strsub		816370	0					
ANR	817200	Argument	sizeof ( strsub )		816370	6					
ANR	817201	SizeofExpression	sizeof ( strsub )		816370	0					
ANR	817202	Sizeof	sizeof		816370	0					
ANR	817203	SizeofOperand	strsub		816370	1					
ANR	817204	IdentifierDeclStatement	ut64 killme = UT64_MAX ;	1583:4:53591:53613	816370	2	True				
ANR	817205	IdentifierDecl	killme = UT64_MAX		816370	0					
ANR	817206	IdentifierDeclType	ut64		816370	0					
ANR	817207	Identifier	killme		816370	1					
ANR	817208	AssignmentExpression	killme = UT64_MAX		816370	2		=			
ANR	817209	Identifier	UT64_MAX		816370	0					
ANR	817210	Identifier	UT64_MAX		816370	1					
ANR	817211	IfStatement	"if ( r_io_read_i ( core -> io , op . ptr , & killme , op . refptr , be ) )"		816370	3					
ANR	817212	Condition	"r_io_read_i ( core -> io , op . ptr , & killme , op . refptr , be )"	1584:8:53623:53676	816370	0	True				
ANR	817213	CallExpression	"r_io_read_i ( core -> io , op . ptr , & killme , op . refptr , be )"		816370	0					
ANR	817214	Callee	r_io_read_i		816370	0					
ANR	817215	Identifier	r_io_read_i		816370	0					
ANR	817216	ArgumentList	core -> io		816370	1					
ANR	817217	Argument	core -> io		816370	0					
ANR	817218	PtrMemberAccess	core -> io		816370	0					
ANR	817219	Identifier	core		816370	0					
ANR	817220	Identifier	io		816370	1					
ANR	817221	Argument	op . ptr		816370	1					
ANR	817222	MemberAccess	op . ptr		816370	0					
ANR	817223	Identifier	op		816370	0					
ANR	817224	Identifier	ptr		816370	1					
ANR	817225	Argument	& killme		816370	2					
ANR	817226	UnaryOperationExpression	& killme		816370	0					
ANR	817227	UnaryOperator	&		816370	0					
ANR	817228	Identifier	killme		816370	1					
ANR	817229	Argument	op . refptr		816370	3					
ANR	817230	MemberAccess	op . refptr		816370	0					
ANR	817231	Identifier	op		816370	0					
ANR	817232	Identifier	refptr		816370	1					
ANR	817233	Argument	be		816370	4					
ANR	817234	Identifier	be		816370	0					
ANR	817235	CompoundStatement		109:64:3219:3219	816370	1					
ANR	817236	ExpressionStatement	core -> parser -> relsub_addr = killme	1585:5:53686:53720	816370	0	True				
ANR	817237	AssignmentExpression	core -> parser -> relsub_addr = killme		816370	0		=			
ANR	817238	PtrMemberAccess	core -> parser -> relsub_addr		816370	0					
ANR	817239	PtrMemberAccess	core -> parser		816370	0					
ANR	817240	Identifier	core		816370	0					
ANR	817241	Identifier	parser		816370	1					
ANR	817242	Identifier	relsub_addr		816370	1					
ANR	817243	Identifier	killme		816370	1					
ANR	817244	IdentifierDeclStatement	char * p = strdup ( strsub ) ;	1588:3:53750:53775	816370	4	True				
ANR	817245	IdentifierDecl	* p = strdup ( strsub )		816370	0					
ANR	817246	IdentifierDeclType	char *		816370	0					
ANR	817247	Identifier	p		816370	1					
ANR	817248	AssignmentExpression	* p = strdup ( strsub )		816370	2		=			
ANR	817249	Identifier	p		816370	0					
ANR	817250	CallExpression	strdup ( strsub )		816370	1					
ANR	817251	Callee	strdup		816370	0					
ANR	817252	Identifier	strdup		816370	0					
ANR	817253	ArgumentList	strsub		816370	1					
ANR	817254	Argument	strsub		816370	0					
ANR	817255	Identifier	strsub		816370	0					
ANR	817256	IfStatement	if ( p )		816370	5					
ANR	817257	Condition	p	1589:7:53784:53784	816370	0	True				
ANR	817258	Identifier	p		816370	0					
ANR	817259	CompoundStatement		114:10:3327:3327	816370	1					
ANR	817260	ExpressionStatement	"r_parse_filter ( core -> parser , addr , core -> flags , hint , p , strsub , sizeof ( strsub ) , be )"	1590:4:53793:53885	816370	0	True				
ANR	817261	CallExpression	"r_parse_filter ( core -> parser , addr , core -> flags , hint , p , strsub , sizeof ( strsub ) , be )"		816370	0					
ANR	817262	Callee	r_parse_filter		816370	0					
ANR	817263	Identifier	r_parse_filter		816370	0					
ANR	817264	ArgumentList	core -> parser		816370	1					
ANR	817265	Argument	core -> parser		816370	0					
ANR	817266	PtrMemberAccess	core -> parser		816370	0					
ANR	817267	Identifier	core		816370	0					
ANR	817268	Identifier	parser		816370	1					
ANR	817269	Argument	addr		816370	1					
ANR	817270	Identifier	addr		816370	0					
ANR	817271	Argument	core -> flags		816370	2					
ANR	817272	PtrMemberAccess	core -> flags		816370	0					
ANR	817273	Identifier	core		816370	0					
ANR	817274	Identifier	flags		816370	1					
ANR	817275	Argument	hint		816370	3					
ANR	817276	Identifier	hint		816370	0					
ANR	817277	Argument	p		816370	4					
ANR	817278	Identifier	p		816370	0					
ANR	817279	Argument	strsub		816370	5					
ANR	817280	Identifier	strsub		816370	0					
ANR	817281	Argument	sizeof ( strsub )		816370	6					
ANR	817282	SizeofExpression	sizeof ( strsub )		816370	0					
ANR	817283	Sizeof	sizeof		816370	0					
ANR	817284	SizeofOperand	strsub		816370	1					
ANR	817285	Argument	be		816370	7					
ANR	817286	Identifier	be		816370	0					
ANR	817287	ExpressionStatement	free ( p )	1592:4:53891:53899	816370	1	True				
ANR	817288	CallExpression	free ( p )		816370	0					
ANR	817289	Callee	free		816370	0					
ANR	817290	Identifier	free		816370	0					
ANR	817291	ArgumentList	p		816370	1					
ANR	817292	Argument	p		816370	0					
ANR	817293	Identifier	p		816370	0					
ANR	817294	ExpressionStatement	pj_o ( pj )	1594:3:53909:53918	816370	6	True				
ANR	817295	CallExpression	pj_o ( pj )		816370	0					
ANR	817296	Callee	pj_o		816370	0					
ANR	817297	Identifier	pj_o		816370	0					
ANR	817298	ArgumentList	pj		816370	1					
ANR	817299	Argument	pj		816370	0					
ANR	817300	Identifier	pj		816370	0					
ANR	817301	ExpressionStatement	"pj_ks ( pj , ""opcode"" , r_asm_op_get_asm ( & asmop ) )"	1595:3:53923:53970	816370	7	True				
ANR	817302	CallExpression	"pj_ks ( pj , ""opcode"" , r_asm_op_get_asm ( & asmop ) )"		816370	0					
ANR	817303	Callee	pj_ks		816370	0					
ANR	817304	Identifier	pj_ks		816370	0					
ANR	817305	ArgumentList	pj		816370	1					
ANR	817306	Argument	pj		816370	0					
ANR	817307	Identifier	pj		816370	0					
ANR	817308	Argument	"""opcode"""		816370	1					
ANR	817309	PrimaryExpression	"""opcode"""		816370	0					
ANR	817310	Argument	r_asm_op_get_asm ( & asmop )		816370	2					
ANR	817311	CallExpression	r_asm_op_get_asm ( & asmop )		816370	0					
ANR	817312	Callee	r_asm_op_get_asm		816370	0					
ANR	817313	Identifier	r_asm_op_get_asm		816370	0					
ANR	817314	ArgumentList	& asmop		816370	1					
ANR	817315	Argument	& asmop		816370	0					
ANR	817316	UnaryOperationExpression	& asmop		816370	0					
ANR	817317	UnaryOperator	&		816370	0					
ANR	817318	Identifier	asmop		816370	1					
ANR	817319	IfStatement	if ( ! * strsub )		816370	8					
ANR	817320	Condition	! * strsub	1596:7:53979:53986	816370	0	True				
ANR	817321	UnaryOperationExpression	! * strsub		816370	0					
ANR	817322	UnaryOperator	!		816370	0					
ANR	817323	UnaryOperationExpression	* strsub		816370	1					
ANR	817324	UnaryOperator	*		816370	0					
ANR	817325	Identifier	strsub		816370	1					
ANR	817326	CompoundStatement		121:17:3529:3529	816370	1					
ANR	817327	ExpressionStatement	"r_str_ncpy ( strsub , r_asm_op_get_asm ( & asmop ) , sizeof ( strsub ) - 1 )"	1597:4:53995:54062	816370	0	True				
ANR	817328	CallExpression	"r_str_ncpy ( strsub , r_asm_op_get_asm ( & asmop ) , sizeof ( strsub ) - 1 )"		816370	0					
ANR	817329	Callee	r_str_ncpy		816370	0					
ANR	817330	Identifier	r_str_ncpy		816370	0					
ANR	817331	ArgumentList	strsub		816370	1					
ANR	817332	Argument	strsub		816370	0					
ANR	817333	Identifier	strsub		816370	0					
ANR	817334	Argument	r_asm_op_get_asm ( & asmop )		816370	1					
ANR	817335	CallExpression	r_asm_op_get_asm ( & asmop )		816370	0					
ANR	817336	Callee	r_asm_op_get_asm		816370	0					
ANR	817337	Identifier	r_asm_op_get_asm		816370	0					
ANR	817338	ArgumentList	& asmop		816370	1					
ANR	817339	Argument	& asmop		816370	0					
ANR	817340	UnaryOperationExpression	& asmop		816370	0					
ANR	817341	UnaryOperator	&		816370	0					
ANR	817342	Identifier	asmop		816370	1					
ANR	817343	Argument	sizeof ( strsub ) - 1		816370	2					
ANR	817344	AdditiveExpression	sizeof ( strsub ) - 1		816370	0		-			
ANR	817345	SizeofExpression	sizeof ( strsub )		816370	0					
ANR	817346	Sizeof	sizeof		816370	0					
ANR	817347	SizeofOperand	strsub		816370	1					
ANR	817348	PrimaryExpression	1		816370	1					
ANR	817349	ExpressionStatement	"pj_ks ( pj , ""disasm"" , strsub )"	1599:3:54072:54100	816370	9	True				
ANR	817350	CallExpression	"pj_ks ( pj , ""disasm"" , strsub )"		816370	0					
ANR	817351	Callee	pj_ks		816370	0					
ANR	817352	Identifier	pj_ks		816370	0					
ANR	817353	ArgumentList	pj		816370	1					
ANR	817354	Argument	pj		816370	0					
ANR	817355	Identifier	pj		816370	0					
ANR	817356	Argument	"""disasm"""		816370	1					
ANR	817357	PrimaryExpression	"""disasm"""		816370	0					
ANR	817358	Argument	strsub		816370	2					
ANR	817359	Identifier	strsub		816370	0					
ANR	817360	CompoundStatement		127:4:3680:3728	816370	10					
ANR	817361	IdentifierDeclStatement	"char * pseudo = calloc ( 128 + strlen ( strsub ) , 3 ) ;"	1602:4:54140:54188	816370	0	True				
ANR	817362	IdentifierDecl	"* pseudo = calloc ( 128 + strlen ( strsub ) , 3 )"		816370	0					
ANR	817363	IdentifierDeclType	char *		816370	0					
ANR	817364	Identifier	pseudo		816370	1					
ANR	817365	AssignmentExpression	"* pseudo = calloc ( 128 + strlen ( strsub ) , 3 )"		816370	2		=			
ANR	817366	Identifier	pseudo		816370	0					
ANR	817367	CallExpression	"calloc ( 128 + strlen ( strsub ) , 3 )"		816370	1					
ANR	817368	Callee	calloc		816370	0					
ANR	817369	Identifier	calloc		816370	0					
ANR	817370	ArgumentList	128 + strlen ( strsub )		816370	1					
ANR	817371	Argument	128 + strlen ( strsub )		816370	0					
ANR	817372	AdditiveExpression	128 + strlen ( strsub )		816370	0		+			
ANR	817373	PrimaryExpression	128		816370	0					
ANR	817374	CallExpression	strlen ( strsub )		816370	1					
ANR	817375	Callee	strlen		816370	0					
ANR	817376	Identifier	strlen		816370	0					
ANR	817377	ArgumentList	strsub		816370	1					
ANR	817378	Argument	strsub		816370	0					
ANR	817379	Identifier	strsub		816370	0					
ANR	817380	Argument	3		816370	1					
ANR	817381	PrimaryExpression	3		816370	0					
ANR	817382	ExpressionStatement	"r_parse_parse ( core -> parser , strsub , pseudo )"	1603:4:54194:54238	816370	1	True				
ANR	817383	CallExpression	"r_parse_parse ( core -> parser , strsub , pseudo )"		816370	0					
ANR	817384	Callee	r_parse_parse		816370	0					
ANR	817385	Identifier	r_parse_parse		816370	0					
ANR	817386	ArgumentList	core -> parser		816370	1					
ANR	817387	Argument	core -> parser		816370	0					
ANR	817388	PtrMemberAccess	core -> parser		816370	0					
ANR	817389	Identifier	core		816370	0					
ANR	817390	Identifier	parser		816370	1					
ANR	817391	Argument	strsub		816370	1					
ANR	817392	Identifier	strsub		816370	0					
ANR	817393	Argument	pseudo		816370	2					
ANR	817394	Identifier	pseudo		816370	0					
ANR	817395	IfStatement	if ( pseudo && * pseudo )		816370	2					
ANR	817396	Condition	pseudo && * pseudo	1604:8:54248:54264	816370	0	True				
ANR	817397	AndExpression	pseudo && * pseudo		816370	0		&&			
ANR	817398	Identifier	pseudo		816370	0					
ANR	817399	UnaryOperationExpression	* pseudo		816370	1					
ANR	817400	UnaryOperator	*		816370	0					
ANR	817401	Identifier	pseudo		816370	1					
ANR	817402	CompoundStatement		129:27:3807:3807	816370	1					
ANR	817403	ExpressionStatement	"pj_ks ( pj , ""pseudo"" , pseudo )"	1605:5:54274:54302	816370	0	True				
ANR	817404	CallExpression	"pj_ks ( pj , ""pseudo"" , pseudo )"		816370	0					
ANR	817405	Callee	pj_ks		816370	0					
ANR	817406	Identifier	pj_ks		816370	0					
ANR	817407	ArgumentList	pj		816370	1					
ANR	817408	Argument	pj		816370	0					
ANR	817409	Identifier	pj		816370	0					
ANR	817410	Argument	"""pseudo"""		816370	1					
ANR	817411	PrimaryExpression	"""pseudo"""		816370	0					
ANR	817412	Argument	pseudo		816370	2					
ANR	817413	Identifier	pseudo		816370	0					
ANR	817414	ExpressionStatement	free ( pseudo )	1607:4:54314:54327	816370	3	True				
ANR	817415	CallExpression	free ( pseudo )		816370	0					
ANR	817416	Callee	free		816370	0					
ANR	817417	Identifier	free		816370	0					
ANR	817418	ArgumentList	pseudo		816370	1					
ANR	817419	Argument	pseudo		816370	0					
ANR	817420	Identifier	pseudo		816370	0					
ANR	817421	CompoundStatement		140:4:3990:4040	816370	11					
ANR	817422	IdentifierDeclStatement	char * opname = strdup ( strsub ) ;	1610:4:54343:54373	816370	0	True				
ANR	817423	IdentifierDecl	* opname = strdup ( strsub )		816370	0					
ANR	817424	IdentifierDeclType	char *		816370	0					
ANR	817425	Identifier	opname		816370	1					
ANR	817426	AssignmentExpression	* opname = strdup ( strsub )		816370	2		=			
ANR	817427	Identifier	opname		816370	0					
ANR	817428	CallExpression	strdup ( strsub )		816370	1					
ANR	817429	Callee	strdup		816370	0					
ANR	817430	Identifier	strdup		816370	0					
ANR	817431	ArgumentList	strsub		816370	1					
ANR	817432	Argument	strsub		816370	0					
ANR	817433	Identifier	strsub		816370	0					
ANR	817434	IdentifierDeclStatement	"char * sp = strchr ( opname , ' ' ) ;"	1611:4:54379:54410	816370	1	True				
ANR	817435	IdentifierDecl	"* sp = strchr ( opname , ' ' )"		816370	0					
ANR	817436	IdentifierDeclType	char *		816370	0					
ANR	817437	Identifier	sp		816370	1					
ANR	817438	AssignmentExpression	"* sp = strchr ( opname , ' ' )"		816370	2		=			
ANR	817439	Identifier	sp		816370	0					
ANR	817440	CallExpression	"strchr ( opname , ' ' )"		816370	1					
ANR	817441	Callee	strchr		816370	0					
ANR	817442	Identifier	strchr		816370	0					
ANR	817443	ArgumentList	opname		816370	1					
ANR	817444	Argument	opname		816370	0					
ANR	817445	Identifier	opname		816370	0					
ANR	817446	Argument	' '		816370	1					
ANR	817447	PrimaryExpression	' '		816370	0					
ANR	817448	IfStatement	if ( sp )		816370	2					
ANR	817449	Condition	sp	1612:8:54420:54421	816370	0	True				
ANR	817450	Identifier	sp		816370	0					
ANR	817451	CompoundStatement		137:12:3964:3964	816370	1					
ANR	817452	ExpressionStatement	* sp = 0	1613:5:54431:54438	816370	0	True				
ANR	817453	AssignmentExpression	* sp = 0		816370	0		=			
ANR	817454	UnaryOperationExpression	* sp		816370	0					
ANR	817455	UnaryOperator	*		816370	0					
ANR	817456	Identifier	sp		816370	1					
ANR	817457	PrimaryExpression	0		816370	1					
ANR	817458	IdentifierDeclStatement	"char * d = r_asm_describe ( core -> assembler , opname ) ;"	1615:4:54450:54500	816370	3	True				
ANR	817459	IdentifierDecl	"* d = r_asm_describe ( core -> assembler , opname )"		816370	0					
ANR	817460	IdentifierDeclType	char *		816370	0					
ANR	817461	Identifier	d		816370	1					
ANR	817462	AssignmentExpression	"* d = r_asm_describe ( core -> assembler , opname )"		816370	2		=			
ANR	817463	Identifier	d		816370	0					
ANR	817464	CallExpression	"r_asm_describe ( core -> assembler , opname )"		816370	1					
ANR	817465	Callee	r_asm_describe		816370	0					
ANR	817466	Identifier	r_asm_describe		816370	0					
ANR	817467	ArgumentList	core -> assembler		816370	1					
ANR	817468	Argument	core -> assembler		816370	0					
ANR	817469	PtrMemberAccess	core -> assembler		816370	0					
ANR	817470	Identifier	core		816370	0					
ANR	817471	Identifier	assembler		816370	1					
ANR	817472	Argument	opname		816370	1					
ANR	817473	Identifier	opname		816370	0					
ANR	817474	IfStatement	if ( d && * d )		816370	4					
ANR	817475	Condition	d && * d	1616:8:54510:54516	816370	0	True				
ANR	817476	AndExpression	d && * d		816370	0		&&			
ANR	817477	Identifier	d		816370	0					
ANR	817478	UnaryOperationExpression	* d		816370	1					
ANR	817479	UnaryOperator	*		816370	0					
ANR	817480	Identifier	d		816370	1					
ANR	817481	CompoundStatement		141:17:4059:4059	816370	1					
ANR	817482	ExpressionStatement	"pj_ks ( pj , ""description"" , d )"	1617:5:54526:54554	816370	0	True				
ANR	817483	CallExpression	"pj_ks ( pj , ""description"" , d )"		816370	0					
ANR	817484	Callee	pj_ks		816370	0					
ANR	817485	Identifier	pj_ks		816370	0					
ANR	817486	ArgumentList	pj		816370	1					
ANR	817487	Argument	pj		816370	0					
ANR	817488	Identifier	pj		816370	0					
ANR	817489	Argument	"""description"""		816370	1					
ANR	817490	PrimaryExpression	"""description"""		816370	0					
ANR	817491	Argument	d		816370	2					
ANR	817492	Identifier	d		816370	0					
ANR	817493	ExpressionStatement	free ( d )	1619:4:54566:54574	816370	5	True				
ANR	817494	CallExpression	free ( d )		816370	0					
ANR	817495	Callee	free		816370	0					
ANR	817496	Identifier	free		816370	0					
ANR	817497	ArgumentList	d		816370	1					
ANR	817498	Argument	d		816370	0					
ANR	817499	Identifier	d		816370	0					
ANR	817500	ExpressionStatement	free ( opname )	1620:4:54580:54593	816370	6	True				
ANR	817501	CallExpression	free ( opname )		816370	0					
ANR	817502	Callee	free		816370	0					
ANR	817503	Identifier	free		816370	0					
ANR	817504	ArgumentList	opname		816370	1					
ANR	817505	Argument	opname		816370	0					
ANR	817506	Identifier	opname		816370	0					
ANR	817507	ExpressionStatement	"pj_ks ( pj , ""mnemonic"" , mnem )"	1622:3:54603:54631	816370	12	True				
ANR	817508	CallExpression	"pj_ks ( pj , ""mnemonic"" , mnem )"		816370	0					
ANR	817509	Callee	pj_ks		816370	0					
ANR	817510	Identifier	pj_ks		816370	0					
ANR	817511	ArgumentList	pj		816370	1					
ANR	817512	Argument	pj		816370	0					
ANR	817513	Identifier	pj		816370	0					
ANR	817514	Argument	"""mnemonic"""		816370	1					
ANR	817515	PrimaryExpression	"""mnemonic"""		816370	0					
ANR	817516	Argument	mnem		816370	2					
ANR	817517	Identifier	mnem		816370	0					
ANR	817518	CompoundStatement		150:4:4266:4311	816370	13					
ANR	817519	IdentifierDeclStatement	"ut8 * mask = r_anal_mask ( core -> anal , len - idx , buf + idx , core -> offset + idx ) ;"	1624:4:54642:54720	816370	0	True				
ANR	817520	IdentifierDecl	"* mask = r_anal_mask ( core -> anal , len - idx , buf + idx , core -> offset + idx )"		816370	0					
ANR	817521	IdentifierDeclType	ut8 *		816370	0					
ANR	817522	Identifier	mask		816370	1					
ANR	817523	AssignmentExpression	"* mask = r_anal_mask ( core -> anal , len - idx , buf + idx , core -> offset + idx )"		816370	2		=			
ANR	817524	Identifier	mask		816370	0					
ANR	817525	CallExpression	"r_anal_mask ( core -> anal , len - idx , buf + idx , core -> offset + idx )"		816370	1					
ANR	817526	Callee	r_anal_mask		816370	0					
ANR	817527	Identifier	r_anal_mask		816370	0					
ANR	817528	ArgumentList	core -> anal		816370	1					
ANR	817529	Argument	core -> anal		816370	0					
ANR	817530	PtrMemberAccess	core -> anal		816370	0					
ANR	817531	Identifier	core		816370	0					
ANR	817532	Identifier	anal		816370	1					
ANR	817533	Argument	len - idx		816370	1					
ANR	817534	AdditiveExpression	len - idx		816370	0		-			
ANR	817535	Identifier	len		816370	0					
ANR	817536	Identifier	idx		816370	1					
ANR	817537	Argument	buf + idx		816370	2					
ANR	817538	AdditiveExpression	buf + idx		816370	0		+			
ANR	817539	Identifier	buf		816370	0					
ANR	817540	Identifier	idx		816370	1					
ANR	817541	Argument	core -> offset + idx		816370	3					
ANR	817542	AdditiveExpression	core -> offset + idx		816370	0		+			
ANR	817543	PtrMemberAccess	core -> offset		816370	0					
ANR	817544	Identifier	core		816370	0					
ANR	817545	Identifier	offset		816370	1					
ANR	817546	Identifier	idx		816370	1					
ANR	817547	IdentifierDeclStatement	"char * maskstr = r_hex_bin2strdup ( mask , size ) ;"	1625:4:54726:54771	816370	1	True				
ANR	817548	IdentifierDecl	"* maskstr = r_hex_bin2strdup ( mask , size )"		816370	0					
ANR	817549	IdentifierDeclType	char *		816370	0					
ANR	817550	Identifier	maskstr		816370	1					
ANR	817551	AssignmentExpression	"* maskstr = r_hex_bin2strdup ( mask , size )"		816370	2		=			
ANR	817552	Identifier	maskstr		816370	0					
ANR	817553	CallExpression	"r_hex_bin2strdup ( mask , size )"		816370	1					
ANR	817554	Callee	r_hex_bin2strdup		816370	0					
ANR	817555	Identifier	r_hex_bin2strdup		816370	0					
ANR	817556	ArgumentList	mask		816370	1					
ANR	817557	Argument	mask		816370	0					
ANR	817558	Identifier	mask		816370	0					
ANR	817559	Argument	size		816370	1					
ANR	817560	Identifier	size		816370	0					
ANR	817561	ExpressionStatement	"pj_ks ( pj , ""mask"" , maskstr )"	1626:4:54777:54804	816370	2	True				
ANR	817562	CallExpression	"pj_ks ( pj , ""mask"" , maskstr )"		816370	0					
ANR	817563	Callee	pj_ks		816370	0					
ANR	817564	Identifier	pj_ks		816370	0					
ANR	817565	ArgumentList	pj		816370	1					
ANR	817566	Argument	pj		816370	0					
ANR	817567	Identifier	pj		816370	0					
ANR	817568	Argument	"""mask"""		816370	1					
ANR	817569	PrimaryExpression	"""mask"""		816370	0					
ANR	817570	Argument	maskstr		816370	2					
ANR	817571	Identifier	maskstr		816370	0					
ANR	817572	ExpressionStatement	free ( mask )	1627:4:54810:54821	816370	3	True				
ANR	817573	CallExpression	free ( mask )		816370	0					
ANR	817574	Callee	free		816370	0					
ANR	817575	Identifier	free		816370	0					
ANR	817576	ArgumentList	mask		816370	1					
ANR	817577	Argument	mask		816370	0					
ANR	817578	Identifier	mask		816370	0					
ANR	817579	ExpressionStatement	free ( maskstr )	1628:4:54827:54841	816370	4	True				
ANR	817580	CallExpression	free ( maskstr )		816370	0					
ANR	817581	Callee	free		816370	0					
ANR	817582	Identifier	free		816370	0					
ANR	817583	ArgumentList	maskstr		816370	1					
ANR	817584	Argument	maskstr		816370	0					
ANR	817585	Identifier	maskstr		816370	0					
ANR	817586	IfStatement	if ( hint && hint -> opcode )		816370	14					
ANR	817587	Condition	hint && hint -> opcode	1630:7:54855:54874	816370	0	True				
ANR	817588	AndExpression	hint && hint -> opcode		816370	0		&&			
ANR	817589	Identifier	hint		816370	0					
ANR	817590	PtrMemberAccess	hint -> opcode		816370	1					
ANR	817591	Identifier	hint		816370	0					
ANR	817592	Identifier	opcode		816370	1					
ANR	817593	CompoundStatement		155:29:4417:4417	816370	1					
ANR	817594	ExpressionStatement	"pj_ks ( pj , ""ophint"" , hint -> opcode )"	1631:4:54883:54917	816370	0	True				
ANR	817595	CallExpression	"pj_ks ( pj , ""ophint"" , hint -> opcode )"		816370	0					
ANR	817596	Callee	pj_ks		816370	0					
ANR	817597	Identifier	pj_ks		816370	0					
ANR	817598	ArgumentList	pj		816370	1					
ANR	817599	Argument	pj		816370	0					
ANR	817600	Identifier	pj		816370	0					
ANR	817601	Argument	"""ophint"""		816370	1					
ANR	817602	PrimaryExpression	"""ophint"""		816370	0					
ANR	817603	Argument	hint -> opcode		816370	2					
ANR	817604	PtrMemberAccess	hint -> opcode		816370	0					
ANR	817605	Identifier	hint		816370	0					
ANR	817606	Identifier	opcode		816370	1					
ANR	817607	IfStatement	if ( hint && hint -> jump != UT64_MAX )		816370	15					
ANR	817608	Condition	hint && hint -> jump != UT64_MAX	1633:7:54931:54960	816370	0	True				
ANR	817609	AndExpression	hint && hint -> jump != UT64_MAX		816370	0		&&			
ANR	817610	Identifier	hint		816370	0					
ANR	817611	EqualityExpression	hint -> jump != UT64_MAX		816370	1		!=			
ANR	817612	PtrMemberAccess	hint -> jump		816370	0					
ANR	817613	Identifier	hint		816370	0					
ANR	817614	Identifier	jump		816370	1					
ANR	817615	Identifier	UT64_MAX		816370	1					
ANR	817616	CompoundStatement		158:39:4503:4503	816370	1					
ANR	817617	ExpressionStatement	op . jump = hint -> jump	1634:4:54969:54989	816370	0	True				
ANR	817618	AssignmentExpression	op . jump = hint -> jump		816370	0		=			
ANR	817619	MemberAccess	op . jump		816370	0					
ANR	817620	Identifier	op		816370	0					
ANR	817621	Identifier	jump		816370	1					
ANR	817622	PtrMemberAccess	hint -> jump		816370	1					
ANR	817623	Identifier	hint		816370	0					
ANR	817624	Identifier	jump		816370	1					
ANR	817625	IfStatement	if ( hint && hint -> fail != UT64_MAX )		816370	16					
ANR	817626	Condition	hint && hint -> fail != UT64_MAX	1636:7:55003:55032	816370	0	True				
ANR	817627	AndExpression	hint && hint -> fail != UT64_MAX		816370	0		&&			
ANR	817628	Identifier	hint		816370	0					
ANR	817629	EqualityExpression	hint -> fail != UT64_MAX		816370	1		!=			
ANR	817630	PtrMemberAccess	hint -> fail		816370	0					
ANR	817631	Identifier	hint		816370	0					
ANR	817632	Identifier	fail		816370	1					
ANR	817633	Identifier	UT64_MAX		816370	1					
ANR	817634	CompoundStatement		161:39:4575:4575	816370	1					
ANR	817635	ExpressionStatement	op . fail = hint -> fail	1637:4:55041:55061	816370	0	True				
ANR	817636	AssignmentExpression	op . fail = hint -> fail		816370	0		=			
ANR	817637	MemberAccess	op . fail		816370	0					
ANR	817638	Identifier	op		816370	0					
ANR	817639	Identifier	fail		816370	1					
ANR	817640	PtrMemberAccess	hint -> fail		816370	1					
ANR	817641	Identifier	hint		816370	0					
ANR	817642	Identifier	fail		816370	1					
ANR	817643	IfStatement	if ( op . jump != UT64_MAX )		816370	17					
ANR	817644	Condition	op . jump != UT64_MAX	1639:7:55075:55093	816370	0	True				
ANR	817645	EqualityExpression	op . jump != UT64_MAX		816370	0		!=			
ANR	817646	MemberAccess	op . jump		816370	0					
ANR	817647	Identifier	op		816370	0					
ANR	817648	Identifier	jump		816370	1					
ANR	817649	Identifier	UT64_MAX		816370	1					
ANR	817650	CompoundStatement		164:28:4636:4636	816370	1					
ANR	817651	ExpressionStatement	"pj_kn ( pj , ""jump"" , op . jump )"	1640:4:55102:55129	816370	0	True				
ANR	817652	CallExpression	"pj_kn ( pj , ""jump"" , op . jump )"		816370	0					
ANR	817653	Callee	pj_kn		816370	0					
ANR	817654	Identifier	pj_kn		816370	0					
ANR	817655	ArgumentList	pj		816370	1					
ANR	817656	Argument	pj		816370	0					
ANR	817657	Identifier	pj		816370	0					
ANR	817658	Argument	"""jump"""		816370	1					
ANR	817659	PrimaryExpression	"""jump"""		816370	0					
ANR	817660	Argument	op . jump		816370	2					
ANR	817661	MemberAccess	op . jump		816370	0					
ANR	817662	Identifier	op		816370	0					
ANR	817663	Identifier	jump		816370	1					
ANR	817664	IfStatement	if ( op . fail != UT64_MAX )		816370	18					
ANR	817665	Condition	op . fail != UT64_MAX	1642:7:55143:55161	816370	0	True				
ANR	817666	EqualityExpression	op . fail != UT64_MAX		816370	0		!=			
ANR	817667	MemberAccess	op . fail		816370	0					
ANR	817668	Identifier	op		816370	0					
ANR	817669	Identifier	fail		816370	1					
ANR	817670	Identifier	UT64_MAX		816370	1					
ANR	817671	CompoundStatement		167:28:4704:4704	816370	1					
ANR	817672	ExpressionStatement	"pj_kn ( pj , ""fail"" , op . fail )"	1643:4:55170:55197	816370	0	True				
ANR	817673	CallExpression	"pj_kn ( pj , ""fail"" , op . fail )"		816370	0					
ANR	817674	Callee	pj_kn		816370	0					
ANR	817675	Identifier	pj_kn		816370	0					
ANR	817676	ArgumentList	pj		816370	1					
ANR	817677	Argument	pj		816370	0					
ANR	817678	Identifier	pj		816370	0					
ANR	817679	Argument	"""fail"""		816370	1					
ANR	817680	PrimaryExpression	"""fail"""		816370	0					
ANR	817681	Argument	op . fail		816370	2					
ANR	817682	MemberAccess	op . fail		816370	0					
ANR	817683	Identifier	op		816370	0					
ANR	817684	Identifier	fail		816370	1					
ANR	817685	IdentifierDeclStatement	const char * jesil = ( hint && hint -> esil ) ? hint -> esil : esilstr ;	1645:3:55207:55269	816370	19	True				
ANR	817686	IdentifierDecl	* jesil = ( hint && hint -> esil ) ? hint -> esil : esilstr		816370	0					
ANR	817687	IdentifierDeclType	const char *		816370	0					
ANR	817688	Identifier	jesil		816370	1					
ANR	817689	AssignmentExpression	* jesil = ( hint && hint -> esil ) ? hint -> esil : esilstr		816370	2		=			
ANR	817690	Identifier	jesil		816370	0					
ANR	817691	ConditionalExpression	( hint && hint -> esil ) ? hint -> esil : esilstr		816370	1					
ANR	817692	Condition	hint && hint -> esil		816370	0					
ANR	817693	AndExpression	hint && hint -> esil		816370	0		&&			
ANR	817694	Identifier	hint		816370	0					
ANR	817695	PtrMemberAccess	hint -> esil		816370	1					
ANR	817696	Identifier	hint		816370	0					
ANR	817697	Identifier	esil		816370	1					
ANR	817698	PtrMemberAccess	hint -> esil		816370	1					
ANR	817699	Identifier	hint		816370	0					
ANR	817700	Identifier	esil		816370	1					
ANR	817701	Identifier	esilstr		816370	2					
ANR	817702	IfStatement	if ( jesil && * jesil )		816370	20					
ANR	817703	Condition	jesil && * jesil	1646:7:55278:55292	816370	0	True				
ANR	817704	AndExpression	jesil && * jesil		816370	0		&&			
ANR	817705	Identifier	jesil		816370	0					
ANR	817706	UnaryOperationExpression	* jesil		816370	1					
ANR	817707	UnaryOperator	*		816370	0					
ANR	817708	Identifier	jesil		816370	1					
ANR	817709	CompoundStatement		171:24:4835:4835	816370	1					
ANR	817710	ExpressionStatement	"pj_ks ( pj , ""esil"" , jesil )"	1647:4:55301:55326	816370	0	True				
ANR	817711	CallExpression	"pj_ks ( pj , ""esil"" , jesil )"		816370	0					
ANR	817712	Callee	pj_ks		816370	0					
ANR	817713	Identifier	pj_ks		816370	0					
ANR	817714	ArgumentList	pj		816370	1					
ANR	817715	Argument	pj		816370	0					
ANR	817716	Identifier	pj		816370	0					
ANR	817717	Argument	"""esil"""		816370	1					
ANR	817718	PrimaryExpression	"""esil"""		816370	0					
ANR	817719	Argument	jesil		816370	2					
ANR	817720	Identifier	jesil		816370	0					
ANR	817721	ExpressionStatement	"pj_kb ( pj , ""sign"" , op . sign )"	1649:3:55336:55363	816370	21	True				
ANR	817722	CallExpression	"pj_kb ( pj , ""sign"" , op . sign )"		816370	0					
ANR	817723	Callee	pj_kb		816370	0					
ANR	817724	Identifier	pj_kb		816370	0					
ANR	817725	ArgumentList	pj		816370	1					
ANR	817726	Argument	pj		816370	0					
ANR	817727	Identifier	pj		816370	0					
ANR	817728	Argument	"""sign"""		816370	1					
ANR	817729	PrimaryExpression	"""sign"""		816370	0					
ANR	817730	Argument	op . sign		816370	2					
ANR	817731	MemberAccess	op . sign		816370	0					
ANR	817732	Identifier	op		816370	0					
ANR	817733	Identifier	sign		816370	1					
ANR	817734	ExpressionStatement	"pj_kn ( pj , ""prefix"" , op . prefix )"	1650:3:55368:55399	816370	22	True				
ANR	817735	CallExpression	"pj_kn ( pj , ""prefix"" , op . prefix )"		816370	0					
ANR	817736	Callee	pj_kn		816370	0					
ANR	817737	Identifier	pj_kn		816370	0					
ANR	817738	ArgumentList	pj		816370	1					
ANR	817739	Argument	pj		816370	0					
ANR	817740	Identifier	pj		816370	0					
ANR	817741	Argument	"""prefix"""		816370	1					
ANR	817742	PrimaryExpression	"""prefix"""		816370	0					
ANR	817743	Argument	op . prefix		816370	2					
ANR	817744	MemberAccess	op . prefix		816370	0					
ANR	817745	Identifier	op		816370	0					
ANR	817746	Identifier	prefix		816370	1					
ANR	817747	ExpressionStatement	"pj_ki ( pj , ""id"" , op . id )"	1651:3:55404:55427	816370	23	True				
ANR	817748	CallExpression	"pj_ki ( pj , ""id"" , op . id )"		816370	0					
ANR	817749	Callee	pj_ki		816370	0					
ANR	817750	Identifier	pj_ki		816370	0					
ANR	817751	ArgumentList	pj		816370	1					
ANR	817752	Argument	pj		816370	0					
ANR	817753	Identifier	pj		816370	0					
ANR	817754	Argument	"""id"""		816370	1					
ANR	817755	PrimaryExpression	"""id"""		816370	0					
ANR	817756	Argument	op . id		816370	2					
ANR	817757	MemberAccess	op . id		816370	0					
ANR	817758	Identifier	op		816370	0					
ANR	817759	Identifier	id		816370	1					
ANR	817760	ExpressionStatement	"pj_k ( pj , ""opex"" )"	1652:3:55432:55449	816370	24	True				
ANR	817761	CallExpression	"pj_k ( pj , ""opex"" )"		816370	0					
ANR	817762	Callee	pj_k		816370	0					
ANR	817763	Identifier	pj_k		816370	0					
ANR	817764	ArgumentList	pj		816370	1					
ANR	817765	Argument	pj		816370	0					
ANR	817766	Identifier	pj		816370	0					
ANR	817767	Argument	"""opex"""		816370	1					
ANR	817768	PrimaryExpression	"""opex"""		816370	0					
ANR	817769	ExpressionStatement	"pj_j ( pj , opexstr )"	1653:3:55454:55472	816370	25	True				
ANR	817770	CallExpression	"pj_j ( pj , opexstr )"		816370	0					
ANR	817771	Callee	pj_j		816370	0					
ANR	817772	Identifier	pj_j		816370	0					
ANR	817773	ArgumentList	pj		816370	1					
ANR	817774	Argument	pj		816370	0					
ANR	817775	Identifier	pj		816370	0					
ANR	817776	Argument	opexstr		816370	1					
ANR	817777	Identifier	opexstr		816370	0					
ANR	817778	ExpressionStatement	"pj_kn ( pj , ""addr"" , core -> offset + idx )"	1654:3:55477:55515	816370	26	True				
ANR	817779	CallExpression	"pj_kn ( pj , ""addr"" , core -> offset + idx )"		816370	0					
ANR	817780	Callee	pj_kn		816370	0					
ANR	817781	Identifier	pj_kn		816370	0					
ANR	817782	ArgumentList	pj		816370	1					
ANR	817783	Argument	pj		816370	0					
ANR	817784	Identifier	pj		816370	0					
ANR	817785	Argument	"""addr"""		816370	1					
ANR	817786	PrimaryExpression	"""addr"""		816370	0					
ANR	817787	Argument	core -> offset + idx		816370	2					
ANR	817788	AdditiveExpression	core -> offset + idx		816370	0		+			
ANR	817789	PtrMemberAccess	core -> offset		816370	0					
ANR	817790	Identifier	core		816370	0					
ANR	817791	Identifier	offset		816370	1					
ANR	817792	Identifier	idx		816370	1					
ANR	817793	ExpressionStatement	"pj_ks ( pj , ""bytes"" , r_hex_bin2strdup ( buf , ret ) )"	1655:3:55520:55568	816370	27	True				
ANR	817794	CallExpression	"pj_ks ( pj , ""bytes"" , r_hex_bin2strdup ( buf , ret ) )"		816370	0					
ANR	817795	Callee	pj_ks		816370	0					
ANR	817796	Identifier	pj_ks		816370	0					
ANR	817797	ArgumentList	pj		816370	1					
ANR	817798	Argument	pj		816370	0					
ANR	817799	Identifier	pj		816370	0					
ANR	817800	Argument	"""bytes"""		816370	1					
ANR	817801	PrimaryExpression	"""bytes"""		816370	0					
ANR	817802	Argument	"r_hex_bin2strdup ( buf , ret )"		816370	2					
ANR	817803	CallExpression	"r_hex_bin2strdup ( buf , ret )"		816370	0					
ANR	817804	Callee	r_hex_bin2strdup		816370	0					
ANR	817805	Identifier	r_hex_bin2strdup		816370	0					
ANR	817806	ArgumentList	buf		816370	1					
ANR	817807	Argument	buf		816370	0					
ANR	817808	Identifier	buf		816370	0					
ANR	817809	Argument	ret		816370	1					
ANR	817810	Identifier	ret		816370	0					
ANR	817811	IfStatement	if ( op . val != UT64_MAX )		816370	28					
ANR	817812	Condition	op . val != UT64_MAX	1656:7:55577:55594	816370	0	True				
ANR	817813	EqualityExpression	op . val != UT64_MAX		816370	0		!=			
ANR	817814	MemberAccess	op . val		816370	0					
ANR	817815	Identifier	op		816370	0					
ANR	817816	Identifier	val		816370	1					
ANR	817817	Identifier	UT64_MAX		816370	1					
ANR	817818	CompoundStatement		181:27:5137:5137	816370	1					
ANR	817819	ExpressionStatement	"pj_kn ( pj , ""val"" , op . val )"	1657:4:55603:55628	816370	0	True				
ANR	817820	CallExpression	"pj_kn ( pj , ""val"" , op . val )"		816370	0					
ANR	817821	Callee	pj_kn		816370	0					
ANR	817822	Identifier	pj_kn		816370	0					
ANR	817823	ArgumentList	pj		816370	1					
ANR	817824	Argument	pj		816370	0					
ANR	817825	Identifier	pj		816370	0					
ANR	817826	Argument	"""val"""		816370	1					
ANR	817827	PrimaryExpression	"""val"""		816370	0					
ANR	817828	Argument	op . val		816370	2					
ANR	817829	MemberAccess	op . val		816370	0					
ANR	817830	Identifier	op		816370	0					
ANR	817831	Identifier	val		816370	1					
ANR	817832	IfStatement	if ( op . ptr != UT64_MAX )		816370	29					
ANR	817833	Condition	op . ptr != UT64_MAX	1659:7:55642:55659	816370	0	True				
ANR	817834	EqualityExpression	op . ptr != UT64_MAX		816370	0		!=			
ANR	817835	MemberAccess	op . ptr		816370	0					
ANR	817836	Identifier	op		816370	0					
ANR	817837	Identifier	ptr		816370	1					
ANR	817838	Identifier	UT64_MAX		816370	1					
ANR	817839	CompoundStatement		184:27:5202:5202	816370	1					
ANR	817840	ExpressionStatement	"pj_kn ( pj , ""ptr"" , op . ptr )"	1660:4:55668:55693	816370	0	True				
ANR	817841	CallExpression	"pj_kn ( pj , ""ptr"" , op . ptr )"		816370	0					
ANR	817842	Callee	pj_kn		816370	0					
ANR	817843	Identifier	pj_kn		816370	0					
ANR	817844	ArgumentList	pj		816370	1					
ANR	817845	Argument	pj		816370	0					
ANR	817846	Identifier	pj		816370	0					
ANR	817847	Argument	"""ptr"""		816370	1					
ANR	817848	PrimaryExpression	"""ptr"""		816370	0					
ANR	817849	Argument	op . ptr		816370	2					
ANR	817850	MemberAccess	op . ptr		816370	0					
ANR	817851	Identifier	op		816370	0					
ANR	817852	Identifier	ptr		816370	1					
ANR	817853	ExpressionStatement	"pj_ki ( pj , ""size"" , size )"	1662:3:55703:55727	816370	30	True				
ANR	817854	CallExpression	"pj_ki ( pj , ""size"" , size )"		816370	0					
ANR	817855	Callee	pj_ki		816370	0					
ANR	817856	Identifier	pj_ki		816370	0					
ANR	817857	ArgumentList	pj		816370	1					
ANR	817858	Argument	pj		816370	0					
ANR	817859	Identifier	pj		816370	0					
ANR	817860	Argument	"""size"""		816370	1					
ANR	817861	PrimaryExpression	"""size"""		816370	0					
ANR	817862	Argument	size		816370	2					
ANR	817863	Identifier	size		816370	0					
ANR	817864	ExpressionStatement	"pj_ks ( pj , ""type"" , r_anal_optype_to_string ( op . type ) )"	1663:3:55732:55785	816370	31	True				
ANR	817865	CallExpression	"pj_ks ( pj , ""type"" , r_anal_optype_to_string ( op . type ) )"		816370	0					
ANR	817866	Callee	pj_ks		816370	0					
ANR	817867	Identifier	pj_ks		816370	0					
ANR	817868	ArgumentList	pj		816370	1					
ANR	817869	Argument	pj		816370	0					
ANR	817870	Identifier	pj		816370	0					
ANR	817871	Argument	"""type"""		816370	1					
ANR	817872	PrimaryExpression	"""type"""		816370	0					
ANR	817873	Argument	r_anal_optype_to_string ( op . type )		816370	2					
ANR	817874	CallExpression	r_anal_optype_to_string ( op . type )		816370	0					
ANR	817875	Callee	r_anal_optype_to_string		816370	0					
ANR	817876	Identifier	r_anal_optype_to_string		816370	0					
ANR	817877	ArgumentList	op . type		816370	1					
ANR	817878	Argument	op . type		816370	0					
ANR	817879	MemberAccess	op . type		816370	0					
ANR	817880	Identifier	op		816370	0					
ANR	817881	Identifier	type		816370	1					
ANR	817882	CompoundStatement		190:4:5336:5398	816370	32					
ANR	817883	IdentifierDeclStatement	const char * datatype = r_anal_datatype_to_string ( op . datatype ) ;	1665:4:55796:55858	816370	0	True				
ANR	817884	IdentifierDecl	* datatype = r_anal_datatype_to_string ( op . datatype )		816370	0					
ANR	817885	IdentifierDeclType	const char *		816370	0					
ANR	817886	Identifier	datatype		816370	1					
ANR	817887	AssignmentExpression	* datatype = r_anal_datatype_to_string ( op . datatype )		816370	2		=			
ANR	817888	Identifier	datatype		816370	0					
ANR	817889	CallExpression	r_anal_datatype_to_string ( op . datatype )		816370	1					
ANR	817890	Callee	r_anal_datatype_to_string		816370	0					
ANR	817891	Identifier	r_anal_datatype_to_string		816370	0					
ANR	817892	ArgumentList	op . datatype		816370	1					
ANR	817893	Argument	op . datatype		816370	0					
ANR	817894	MemberAccess	op . datatype		816370	0					
ANR	817895	Identifier	op		816370	0					
ANR	817896	Identifier	datatype		816370	1					
ANR	817897	IfStatement	if ( datatype )		816370	1					
ANR	817898	Condition	datatype	1666:8:55868:55875	816370	0	True				
ANR	817899	Identifier	datatype		816370	0					
ANR	817900	CompoundStatement		191:18:5418:5418	816370	1					
ANR	817901	ExpressionStatement	"pj_ks ( pj , ""datatype"" , datatype )"	1667:5:55885:55917	816370	0	True				
ANR	817902	CallExpression	"pj_ks ( pj , ""datatype"" , datatype )"		816370	0					
ANR	817903	Callee	pj_ks		816370	0					
ANR	817904	Identifier	pj_ks		816370	0					
ANR	817905	ArgumentList	pj		816370	1					
ANR	817906	Argument	pj		816370	0					
ANR	817907	Identifier	pj		816370	0					
ANR	817908	Argument	"""datatype"""		816370	1					
ANR	817909	PrimaryExpression	"""datatype"""		816370	0					
ANR	817910	Argument	datatype		816370	2					
ANR	817911	Identifier	datatype		816370	0					
ANR	817912	IfStatement	if ( op . reg )		816370	33					
ANR	817913	Condition	op . reg	1671:7:55938:55943	816370	0	True				
ANR	817914	MemberAccess	op . reg		816370	0					
ANR	817915	Identifier	op		816370	0					
ANR	817916	Identifier	reg		816370	1					
ANR	817917	CompoundStatement		196:15:5486:5486	816370	1					
ANR	817918	ExpressionStatement	"pj_ks ( pj , ""reg"" , op . reg )"	1672:4:55952:55977	816370	0	True				
ANR	817919	CallExpression	"pj_ks ( pj , ""reg"" , op . reg )"		816370	0					
ANR	817920	Callee	pj_ks		816370	0					
ANR	817921	Identifier	pj_ks		816370	0					
ANR	817922	ArgumentList	pj		816370	1					
ANR	817923	Argument	pj		816370	0					
ANR	817924	Identifier	pj		816370	0					
ANR	817925	Argument	"""reg"""		816370	1					
ANR	817926	PrimaryExpression	"""reg"""		816370	0					
ANR	817927	Argument	op . reg		816370	2					
ANR	817928	MemberAccess	op . reg		816370	0					
ANR	817929	Identifier	op		816370	0					
ANR	817930	Identifier	reg		816370	1					
ANR	817931	IfStatement	if ( op . ireg )		816370	34					
ANR	817932	Condition	op . ireg	1674:7:55991:55997	816370	0	True				
ANR	817933	MemberAccess	op . ireg		816370	0					
ANR	817934	Identifier	op		816370	0					
ANR	817935	Identifier	ireg		816370	1					
ANR	817936	CompoundStatement		199:16:5540:5540	816370	1					
ANR	817937	ExpressionStatement	"pj_ks ( pj , ""ireg"" , op . ireg )"	1675:4:56006:56033	816370	0	True				
ANR	817938	CallExpression	"pj_ks ( pj , ""ireg"" , op . ireg )"		816370	0					
ANR	817939	Callee	pj_ks		816370	0					
ANR	817940	Identifier	pj_ks		816370	0					
ANR	817941	ArgumentList	pj		816370	1					
ANR	817942	Argument	pj		816370	0					
ANR	817943	Identifier	pj		816370	0					
ANR	817944	Argument	"""ireg"""		816370	1					
ANR	817945	PrimaryExpression	"""ireg"""		816370	0					
ANR	817946	Argument	op . ireg		816370	2					
ANR	817947	MemberAccess	op . ireg		816370	0					
ANR	817948	Identifier	op		816370	0					
ANR	817949	Identifier	ireg		816370	1					
ANR	817950	ExpressionStatement	"pj_ki ( pj , ""scale"" , op . scale )"	1677:3:56043:56072	816370	35	True				
ANR	817951	CallExpression	"pj_ki ( pj , ""scale"" , op . scale )"		816370	0					
ANR	817952	Callee	pj_ki		816370	0					
ANR	817953	Identifier	pj_ki		816370	0					
ANR	817954	ArgumentList	pj		816370	1					
ANR	817955	Argument	pj		816370	0					
ANR	817956	Identifier	pj		816370	0					
ANR	817957	Argument	"""scale"""		816370	1					
ANR	817958	PrimaryExpression	"""scale"""		816370	0					
ANR	817959	Argument	op . scale		816370	2					
ANR	817960	MemberAccess	op . scale		816370	0					
ANR	817961	Identifier	op		816370	0					
ANR	817962	Identifier	scale		816370	1					
ANR	817963	IfStatement	if ( op . refptr != - 1 )		816370	36					
ANR	817964	Condition	op . refptr != - 1	1678:7:56081:56095	816370	0	True				
ANR	817965	EqualityExpression	op . refptr != - 1		816370	0		!=			
ANR	817966	MemberAccess	op . refptr		816370	0					
ANR	817967	Identifier	op		816370	0					
ANR	817968	Identifier	refptr		816370	1					
ANR	817969	UnaryOperationExpression	- 1		816370	1					
ANR	817970	UnaryOperator	-		816370	0					
ANR	817971	PrimaryExpression	1		816370	1					
ANR	817972	CompoundStatement		203:24:5638:5638	816370	1					
ANR	817973	ExpressionStatement	"pj_ki ( pj , ""refptr"" , op . refptr )"	1679:4:56104:56135	816370	0	True				
ANR	817974	CallExpression	"pj_ki ( pj , ""refptr"" , op . refptr )"		816370	0					
ANR	817975	Callee	pj_ki		816370	0					
ANR	817976	Identifier	pj_ki		816370	0					
ANR	817977	ArgumentList	pj		816370	1					
ANR	817978	Argument	pj		816370	0					
ANR	817979	Identifier	pj		816370	0					
ANR	817980	Argument	"""refptr"""		816370	1					
ANR	817981	PrimaryExpression	"""refptr"""		816370	0					
ANR	817982	Argument	op . refptr		816370	2					
ANR	817983	MemberAccess	op . refptr		816370	0					
ANR	817984	Identifier	op		816370	0					
ANR	817985	Identifier	refptr		816370	1					
ANR	817986	ExpressionStatement	"pj_ki ( pj , ""cycles"" , op . cycles )"	1681:3:56145:56176	816370	37	True				
ANR	817987	CallExpression	"pj_ki ( pj , ""cycles"" , op . cycles )"		816370	0					
ANR	817988	Callee	pj_ki		816370	0					
ANR	817989	Identifier	pj_ki		816370	0					
ANR	817990	ArgumentList	pj		816370	1					
ANR	817991	Argument	pj		816370	0					
ANR	817992	Identifier	pj		816370	0					
ANR	817993	Argument	"""cycles"""		816370	1					
ANR	817994	PrimaryExpression	"""cycles"""		816370	0					
ANR	817995	Argument	op . cycles		816370	2					
ANR	817996	MemberAccess	op . cycles		816370	0					
ANR	817997	Identifier	op		816370	0					
ANR	817998	Identifier	cycles		816370	1					
ANR	817999	ExpressionStatement	"pj_ki ( pj , ""failcycles"" , op . failcycles )"	1682:3:56181:56220	816370	38	True				
ANR	818000	CallExpression	"pj_ki ( pj , ""failcycles"" , op . failcycles )"		816370	0					
ANR	818001	Callee	pj_ki		816370	0					
ANR	818002	Identifier	pj_ki		816370	0					
ANR	818003	ArgumentList	pj		816370	1					
ANR	818004	Argument	pj		816370	0					
ANR	818005	Identifier	pj		816370	0					
ANR	818006	Argument	"""failcycles"""		816370	1					
ANR	818007	PrimaryExpression	"""failcycles"""		816370	0					
ANR	818008	Argument	op . failcycles		816370	2					
ANR	818009	MemberAccess	op . failcycles		816370	0					
ANR	818010	Identifier	op		816370	0					
ANR	818011	Identifier	failcycles		816370	1					
ANR	818012	ExpressionStatement	"pj_ki ( pj , ""delay"" , op . delay )"	1683:3:56225:56254	816370	39	True				
ANR	818013	CallExpression	"pj_ki ( pj , ""delay"" , op . delay )"		816370	0					
ANR	818014	Callee	pj_ki		816370	0					
ANR	818015	Identifier	pj_ki		816370	0					
ANR	818016	ArgumentList	pj		816370	1					
ANR	818017	Argument	pj		816370	0					
ANR	818018	Identifier	pj		816370	0					
ANR	818019	Argument	"""delay"""		816370	1					
ANR	818020	PrimaryExpression	"""delay"""		816370	0					
ANR	818021	Argument	op . delay		816370	2					
ANR	818022	MemberAccess	op . delay		816370	0					
ANR	818023	Identifier	op		816370	0					
ANR	818024	Identifier	delay		816370	1					
ANR	818025	IdentifierDeclStatement	const char * p1 = r_anal_stackop_tostring ( op . stackop ) ;	1684:3:56259:56312	816370	40	True				
ANR	818026	IdentifierDecl	* p1 = r_anal_stackop_tostring ( op . stackop )		816370	0					
ANR	818027	IdentifierDeclType	const char *		816370	0					
ANR	818028	Identifier	p1		816370	1					
ANR	818029	AssignmentExpression	* p1 = r_anal_stackop_tostring ( op . stackop )		816370	2		=			
ANR	818030	Identifier	p1		816370	0					
ANR	818031	CallExpression	r_anal_stackop_tostring ( op . stackop )		816370	1					
ANR	818032	Callee	r_anal_stackop_tostring		816370	0					
ANR	818033	Identifier	r_anal_stackop_tostring		816370	0					
ANR	818034	ArgumentList	op . stackop		816370	1					
ANR	818035	Argument	op . stackop		816370	0					
ANR	818036	MemberAccess	op . stackop		816370	0					
ANR	818037	Identifier	op		816370	0					
ANR	818038	Identifier	stackop		816370	1					
ANR	818039	IfStatement	"if ( strcmp ( p1 , ""null"" ) )"		816370	41					
ANR	818040	Condition	"strcmp ( p1 , ""null"" )"	1685:7:56321:56339	816370	0	True				
ANR	818041	CallExpression	"strcmp ( p1 , ""null"" )"		816370	0					
ANR	818042	Callee	strcmp		816370	0					
ANR	818043	Identifier	strcmp		816370	0					
ANR	818044	ArgumentList	p1		816370	1					
ANR	818045	Argument	p1		816370	0					
ANR	818046	Identifier	p1		816370	0					
ANR	818047	Argument	"""null"""		816370	1					
ANR	818048	PrimaryExpression	"""null"""		816370	0					
ANR	818049	CompoundStatement		210:28:5882:5882	816370	1					
ANR	818050	ExpressionStatement	"pj_ks ( pj , ""stack"" , p1 )"	1686:4:56348:56371	816370	0	True				
ANR	818051	CallExpression	"pj_ks ( pj , ""stack"" , p1 )"		816370	0					
ANR	818052	Callee	pj_ks		816370	0					
ANR	818053	Identifier	pj_ks		816370	0					
ANR	818054	ArgumentList	pj		816370	1					
ANR	818055	Argument	pj		816370	0					
ANR	818056	Identifier	pj		816370	0					
ANR	818057	Argument	"""stack"""		816370	1					
ANR	818058	PrimaryExpression	"""stack"""		816370	0					
ANR	818059	Argument	p1		816370	2					
ANR	818060	Identifier	p1		816370	0					
ANR	818061	ExpressionStatement	"pj_kn ( pj , ""stackptr"" , op . stackptr )"	1688:3:56381:56416	816370	42	True				
ANR	818062	CallExpression	"pj_kn ( pj , ""stackptr"" , op . stackptr )"		816370	0					
ANR	818063	Callee	pj_kn		816370	0					
ANR	818064	Identifier	pj_kn		816370	0					
ANR	818065	ArgumentList	pj		816370	1					
ANR	818066	Argument	pj		816370	0					
ANR	818067	Identifier	pj		816370	0					
ANR	818068	Argument	"""stackptr"""		816370	1					
ANR	818069	PrimaryExpression	"""stackptr"""		816370	0					
ANR	818070	Argument	op . stackptr		816370	2					
ANR	818071	MemberAccess	op . stackptr		816370	0					
ANR	818072	Identifier	op		816370	0					
ANR	818073	Identifier	stackptr		816370	1					
ANR	818074	IdentifierDeclStatement	const char * arg = ( op . type & R_ANAL_OP_TYPE_COND ) ? r_anal_cond_tostring ( op . cond ) : NULL ;	1689:3:56421:56513	816370	43	True				
ANR	818075	IdentifierDecl	* arg = ( op . type & R_ANAL_OP_TYPE_COND ) ? r_anal_cond_tostring ( op . cond ) : NULL		816370	0					
ANR	818076	IdentifierDeclType	const char *		816370	0					
ANR	818077	Identifier	arg		816370	1					
ANR	818078	AssignmentExpression	* arg = ( op . type & R_ANAL_OP_TYPE_COND ) ? r_anal_cond_tostring ( op . cond ) : NULL		816370	2		=			
ANR	818079	Identifier	arg		816370	0					
ANR	818080	ConditionalExpression	( op . type & R_ANAL_OP_TYPE_COND ) ? r_anal_cond_tostring ( op . cond ) : NULL		816370	1					
ANR	818081	Condition	op . type & R_ANAL_OP_TYPE_COND		816370	0					
ANR	818082	BitAndExpression	op . type & R_ANAL_OP_TYPE_COND		816370	0		&			
ANR	818083	MemberAccess	op . type		816370	0					
ANR	818084	Identifier	op		816370	0					
ANR	818085	Identifier	type		816370	1					
ANR	818086	Identifier	R_ANAL_OP_TYPE_COND		816370	1					
ANR	818087	CallExpression	r_anal_cond_tostring ( op . cond )		816370	1					
ANR	818088	Callee	r_anal_cond_tostring		816370	0					
ANR	818089	Identifier	r_anal_cond_tostring		816370	0					
ANR	818090	ArgumentList	op . cond		816370	1					
ANR	818091	Argument	op . cond		816370	0					
ANR	818092	MemberAccess	op . cond		816370	0					
ANR	818093	Identifier	op		816370	0					
ANR	818094	Identifier	cond		816370	1					
ANR	818095	Identifier	NULL		816370	2					
ANR	818096	IfStatement	if ( arg )		816370	44					
ANR	818097	Condition	arg	1691:7:56522:56524	816370	0	True				
ANR	818098	Identifier	arg		816370	0					
ANR	818099	CompoundStatement		216:12:6067:6067	816370	1					
ANR	818100	ExpressionStatement	"pj_ks ( pj , ""cond"" , arg )"	1692:4:56533:56556	816370	0	True				
ANR	818101	CallExpression	"pj_ks ( pj , ""cond"" , arg )"		816370	0					
ANR	818102	Callee	pj_ks		816370	0					
ANR	818103	Identifier	pj_ks		816370	0					
ANR	818104	ArgumentList	pj		816370	1					
ANR	818105	Argument	pj		816370	0					
ANR	818106	Identifier	pj		816370	0					
ANR	818107	Argument	"""cond"""		816370	1					
ANR	818108	PrimaryExpression	"""cond"""		816370	0					
ANR	818109	Argument	arg		816370	2					
ANR	818110	Identifier	arg		816370	0					
ANR	818111	ExpressionStatement	"pj_ks ( pj , ""family"" , r_anal_op_family_to_string ( op . family ) )"	1694:3:56566:56626	816370	45	True				
ANR	818112	CallExpression	"pj_ks ( pj , ""family"" , r_anal_op_family_to_string ( op . family ) )"		816370	0					
ANR	818113	Callee	pj_ks		816370	0					
ANR	818114	Identifier	pj_ks		816370	0					
ANR	818115	ArgumentList	pj		816370	1					
ANR	818116	Argument	pj		816370	0					
ANR	818117	Identifier	pj		816370	0					
ANR	818118	Argument	"""family"""		816370	1					
ANR	818119	PrimaryExpression	"""family"""		816370	0					
ANR	818120	Argument	r_anal_op_family_to_string ( op . family )		816370	2					
ANR	818121	CallExpression	r_anal_op_family_to_string ( op . family )		816370	0					
ANR	818122	Callee	r_anal_op_family_to_string		816370	0					
ANR	818123	Identifier	r_anal_op_family_to_string		816370	0					
ANR	818124	ArgumentList	op . family		816370	1					
ANR	818125	Argument	op . family		816370	0					
ANR	818126	MemberAccess	op . family		816370	0					
ANR	818127	Identifier	op		816370	0					
ANR	818128	Identifier	family		816370	1					
ANR	818129	ExpressionStatement	pj_end ( pj )	1695:3:56631:56642	816370	46	True				
ANR	818130	CallExpression	pj_end ( pj )		816370	0					
ANR	818131	Callee	pj_end		816370	0					
ANR	818132	Identifier	pj_end		816370	0					
ANR	818133	ArgumentList	pj		816370	1					
ANR	818134	Argument	pj		816370	0					
ANR	818135	Identifier	pj		816370	0					
ANR	818136	ElseStatement	else		816370	0					
ANR	818137	IfStatement	if ( fmt == 'r' )		816370	0					
ANR	818138	Condition	fmt == 'r'	1696:13:56657:56666	816370	0	True				
ANR	818139	EqualityExpression	fmt == 'r'		816370	0		==			
ANR	818140	Identifier	fmt		816370	0					
ANR	818141	PrimaryExpression	'r'		816370	1					
ANR	818142	CompoundStatement		221:25:6209:6209	816370	1					
ANR	818143	IfStatement	if ( * esilstr )		816370	0					
ANR	818144	Condition	* esilstr	1697:7:56678:56685	816370	0	True				
ANR	818145	UnaryOperationExpression	* esilstr		816370	0					
ANR	818146	UnaryOperator	*		816370	0					
ANR	818147	Identifier	esilstr		816370	1					
ANR	818148	CompoundStatement		222:17:6228:6228	816370	1					
ANR	818149	IfStatement	if ( use_color )		816370	0					
ANR	818150	Condition	use_color	1698:8:56698:56706	816370	0	True				
ANR	818151	Identifier	use_color		816370	0					
ANR	818152	CompoundStatement		223:19:6249:6249	816370	1					
ANR	818153	Statement	r_cons_printf	1699:5:56716:56728	816370	0	True				
ANR	818154	Statement	(	1699:19:56730:56730	816370	1	True				
ANR	818155	Statement	"""%s0x%"""	1699:20:56731:56737	816370	2	True				
ANR	818156	Statement	PFMT64x	1699:28:56739:56745	816370	3	True				
ANR	818157	Statement	Color_RESET	1699:36:56747:56757	816370	4	True				
ANR	818158	Statement	"""\\n"""	1699:48:56759:56762	816370	5	True				
ANR	818159	Statement	","	1699:52:56763:56763	816370	6	True				
ANR	818160	Statement	color	1699:54:56765:56769	816370	7	True				
ANR	818161	Statement	","	1699:59:56770:56770	816370	8	True				
ANR	818162	Statement	core	1699:61:56772:56775	816370	9	True				
ANR	818163	Statement	->	1699:65:56776:56777	816370	10	True				
ANR	818164	Statement	offset	1699:67:56778:56783	816370	11	True				
ANR	818165	Statement	+	1699:74:56785:56785	816370	12	True				
ANR	818166	Statement	idx	1699:76:56787:56789	816370	13	True				
ANR	818167	Statement	)	1699:79:56790:56790	816370	14	True				
ANR	818168	ExpressionStatement		1699:80:56791:56791	816370	15	True				
ANR	818169	ElseStatement	else		816370	0					
ANR	818170	CompoundStatement		225:11:6344:6344	816370	0					
ANR	818171	Statement	r_cons_printf	1701:5:56811:56823	816370	0	True				
ANR	818172	Statement	(	1701:19:56825:56825	816370	1	True				
ANR	818173	Statement	"""0x%"""	1701:20:56826:56830	816370	2	True				
ANR	818174	Statement	PFMT64x	1701:26:56832:56838	816370	3	True				
ANR	818175	Statement	"""\\n"""	1701:34:56840:56843	816370	4	True				
ANR	818176	Statement	","	1701:38:56844:56844	816370	5	True				
ANR	818177	Statement	core	1701:40:56846:56849	816370	6	True				
ANR	818178	Statement	->	1701:44:56850:56851	816370	7	True				
ANR	818179	Statement	offset	1701:46:56852:56857	816370	8	True				
ANR	818180	Statement	+	1701:53:56859:56859	816370	9	True				
ANR	818181	Statement	idx	1701:55:56861:56863	816370	10	True				
ANR	818182	Statement	)	1701:58:56864:56864	816370	11	True				
ANR	818183	ExpressionStatement		1701:59:56865:56865	816370	12	True				
ANR	818184	ExpressionStatement	"r_anal_esil_parse ( esil , esilstr )"	1703:4:56877:56910	816370	1	True				
ANR	818185	CallExpression	"r_anal_esil_parse ( esil , esilstr )"		816370	0					
ANR	818186	Callee	r_anal_esil_parse		816370	0					
ANR	818187	Identifier	r_anal_esil_parse		816370	0					
ANR	818188	ArgumentList	esil		816370	1					
ANR	818189	Argument	esil		816370	0					
ANR	818190	Identifier	esil		816370	0					
ANR	818191	Argument	esilstr		816370	1					
ANR	818192	Identifier	esilstr		816370	0					
ANR	818193	ExpressionStatement	r_anal_esil_dumpstack ( esil )	1704:4:56916:56944	816370	2	True				
ANR	818194	CallExpression	r_anal_esil_dumpstack ( esil )		816370	0					
ANR	818195	Callee	r_anal_esil_dumpstack		816370	0					
ANR	818196	Identifier	r_anal_esil_dumpstack		816370	0					
ANR	818197	ArgumentList	esil		816370	1					
ANR	818198	Argument	esil		816370	0					
ANR	818199	Identifier	esil		816370	0					
ANR	818200	ExpressionStatement	r_anal_esil_stack_free ( esil )	1705:4:56950:56979	816370	3	True				
ANR	818201	CallExpression	r_anal_esil_stack_free ( esil )		816370	0					
ANR	818202	Callee	r_anal_esil_stack_free		816370	0					
ANR	818203	Identifier	r_anal_esil_stack_free		816370	0					
ANR	818204	ArgumentList	esil		816370	1					
ANR	818205	Argument	esil		816370	0					
ANR	818206	Identifier	esil		816370	0					
ANR	818207	ElseStatement	else		816370	0					
ANR	818208	CompoundStatement		324:3:9209:9271	816370	0					
ANR	818209	IdentifierDeclStatement	char disasm [ 128 ] = { 0 } ;	1708:2:56999:57023	816370	0	True				
ANR	818210	IdentifierDecl	disasm [ 128 ] = { 0 }		816370	0					
ANR	818211	IdentifierDeclType	char [ 128 ]		816370	0					
ANR	818212	Identifier	disasm		816370	1					
ANR	818213	PrimaryExpression	128		816370	2					
ANR	818214	AssignmentExpression	disasm [ 128 ] = { 0 }		816370	3		=			
ANR	818215	Identifier	disasm		816370	0					
ANR	818216	InitializerList	0		816370	1					
ANR	818217	PrimaryExpression	0		816370	0					
ANR	818218	ExpressionStatement	"r_parse_varsub ( core -> parser , NULL , core -> offset + idx , asmop . size , r_asm_op_get_asm ( & asmop ) , disasm , sizeof ( disasm ) )"	1709:2:57027:57155	816370	1	True				
ANR	818219	CallExpression	"r_parse_varsub ( core -> parser , NULL , core -> offset + idx , asmop . size , r_asm_op_get_asm ( & asmop ) , disasm , sizeof ( disasm ) )"		816370	0					
ANR	818220	Callee	r_parse_varsub		816370	0					
ANR	818221	Identifier	r_parse_varsub		816370	0					
ANR	818222	ArgumentList	core -> parser		816370	1					
ANR	818223	Argument	core -> parser		816370	0					
ANR	818224	PtrMemberAccess	core -> parser		816370	0					
ANR	818225	Identifier	core		816370	0					
ANR	818226	Identifier	parser		816370	1					
ANR	818227	Argument	NULL		816370	1					
ANR	818228	Identifier	NULL		816370	0					
ANR	818229	Argument	core -> offset + idx		816370	2					
ANR	818230	AdditiveExpression	core -> offset + idx		816370	0		+			
ANR	818231	PtrMemberAccess	core -> offset		816370	0					
ANR	818232	Identifier	core		816370	0					
ANR	818233	Identifier	offset		816370	1					
ANR	818234	Identifier	idx		816370	1					
ANR	818235	Argument	asmop . size		816370	3					
ANR	818236	MemberAccess	asmop . size		816370	0					
ANR	818237	Identifier	asmop		816370	0					
ANR	818238	Identifier	size		816370	1					
ANR	818239	Argument	r_asm_op_get_asm ( & asmop )		816370	4					
ANR	818240	CallExpression	r_asm_op_get_asm ( & asmop )		816370	0					
ANR	818241	Callee	r_asm_op_get_asm		816370	0					
ANR	818242	Identifier	r_asm_op_get_asm		816370	0					
ANR	818243	ArgumentList	& asmop		816370	1					
ANR	818244	Argument	& asmop		816370	0					
ANR	818245	UnaryOperationExpression	& asmop		816370	0					
ANR	818246	UnaryOperator	&		816370	0					
ANR	818247	Identifier	asmop		816370	1					
ANR	818248	Argument	disasm		816370	5					
ANR	818249	Identifier	disasm		816370	0					
ANR	818250	Argument	sizeof ( disasm )		816370	6					
ANR	818251	SizeofExpression	sizeof ( disasm )		816370	0					
ANR	818252	Sizeof	sizeof		816370	0					
ANR	818253	SizeofOperand	disasm		816370	1					
ANR	818254	IdentifierDeclStatement	ut64 killme = UT64_MAX ;	1713:2:57159:57181	816370	2	True				
ANR	818255	IdentifierDecl	killme = UT64_MAX		816370	0					
ANR	818256	IdentifierDeclType	ut64		816370	0					
ANR	818257	Identifier	killme		816370	1					
ANR	818258	AssignmentExpression	killme = UT64_MAX		816370	2		=			
ANR	818259	Identifier	UT64_MAX		816370	0					
ANR	818260	Identifier	UT64_MAX		816370	1					
ANR	818261	IfStatement	"if ( r_io_read_i ( core -> io , op . ptr , & killme , op . refptr , be ) )"		816370	3					
ANR	818262	Condition	"r_io_read_i ( core -> io , op . ptr , & killme , op . refptr , be )"	1714:6:57189:57242	816370	0	True				
ANR	818263	CallExpression	"r_io_read_i ( core -> io , op . ptr , & killme , op . refptr , be )"		816370	0					
ANR	818264	Callee	r_io_read_i		816370	0					
ANR	818265	Identifier	r_io_read_i		816370	0					
ANR	818266	ArgumentList	core -> io		816370	1					
ANR	818267	Argument	core -> io		816370	0					
ANR	818268	PtrMemberAccess	core -> io		816370	0					
ANR	818269	Identifier	core		816370	0					
ANR	818270	Identifier	io		816370	1					
ANR	818271	Argument	op . ptr		816370	1					
ANR	818272	MemberAccess	op . ptr		816370	0					
ANR	818273	Identifier	op		816370	0					
ANR	818274	Identifier	ptr		816370	1					
ANR	818275	Argument	& killme		816370	2					
ANR	818276	UnaryOperationExpression	& killme		816370	0					
ANR	818277	UnaryOperator	&		816370	0					
ANR	818278	Identifier	killme		816370	1					
ANR	818279	Argument	op . refptr		816370	3					
ANR	818280	MemberAccess	op . refptr		816370	0					
ANR	818281	Identifier	op		816370	0					
ANR	818282	Identifier	refptr		816370	1					
ANR	818283	Argument	be		816370	4					
ANR	818284	Identifier	be		816370	0					
ANR	818285	CompoundStatement		239:62:6785:6785	816370	1					
ANR	818286	ExpressionStatement	core -> parser -> relsub_addr = killme	1715:3:57250:57284	816370	0	True				
ANR	818287	AssignmentExpression	core -> parser -> relsub_addr = killme		816370	0		=			
ANR	818288	PtrMemberAccess	core -> parser -> relsub_addr		816370	0					
ANR	818289	PtrMemberAccess	core -> parser		816370	0					
ANR	818290	Identifier	core		816370	0					
ANR	818291	Identifier	parser		816370	1					
ANR	818292	Identifier	relsub_addr		816370	1					
ANR	818293	Identifier	killme		816370	1					
ANR	818294	IdentifierDeclStatement	char * p = strdup ( disasm ) ;	1717:2:57292:57317	816370	4	True				
ANR	818295	IdentifierDecl	* p = strdup ( disasm )		816370	0					
ANR	818296	IdentifierDeclType	char *		816370	0					
ANR	818297	Identifier	p		816370	1					
ANR	818298	AssignmentExpression	* p = strdup ( disasm )		816370	2		=			
ANR	818299	Identifier	p		816370	0					
ANR	818300	CallExpression	strdup ( disasm )		816370	1					
ANR	818301	Callee	strdup		816370	0					
ANR	818302	Identifier	strdup		816370	0					
ANR	818303	ArgumentList	disasm		816370	1					
ANR	818304	Argument	disasm		816370	0					
ANR	818305	Identifier	disasm		816370	0					
ANR	818306	IfStatement	if ( p )		816370	5					
ANR	818307	Condition	p	1718:6:57325:57325	816370	0	True				
ANR	818308	Identifier	p		816370	0					
ANR	818309	CompoundStatement		243:9:6868:6868	816370	1					
ANR	818310	ExpressionStatement	"r_parse_filter ( core -> parser , addr , core -> flags , hint , p , disasm , sizeof ( disasm ) , be )"	1719:3:57333:57423	816370	0	True				
ANR	818311	CallExpression	"r_parse_filter ( core -> parser , addr , core -> flags , hint , p , disasm , sizeof ( disasm ) , be )"		816370	0					
ANR	818312	Callee	r_parse_filter		816370	0					
ANR	818313	Identifier	r_parse_filter		816370	0					
ANR	818314	ArgumentList	core -> parser		816370	1					
ANR	818315	Argument	core -> parser		816370	0					
ANR	818316	PtrMemberAccess	core -> parser		816370	0					
ANR	818317	Identifier	core		816370	0					
ANR	818318	Identifier	parser		816370	1					
ANR	818319	Argument	addr		816370	1					
ANR	818320	Identifier	addr		816370	0					
ANR	818321	Argument	core -> flags		816370	2					
ANR	818322	PtrMemberAccess	core -> flags		816370	0					
ANR	818323	Identifier	core		816370	0					
ANR	818324	Identifier	flags		816370	1					
ANR	818325	Argument	hint		816370	3					
ANR	818326	Identifier	hint		816370	0					
ANR	818327	Argument	p		816370	4					
ANR	818328	Identifier	p		816370	0					
ANR	818329	Argument	disasm		816370	5					
ANR	818330	Identifier	disasm		816370	0					
ANR	818331	Argument	sizeof ( disasm )		816370	6					
ANR	818332	SizeofExpression	sizeof ( disasm )		816370	0					
ANR	818333	Sizeof	sizeof		816370	0					
ANR	818334	SizeofOperand	disasm		816370	1					
ANR	818335	Argument	be		816370	7					
ANR	818336	Identifier	be		816370	0					
ANR	818337	ExpressionStatement	free ( p )	1721:3:57428:57436	816370	1	True				
ANR	818338	CallExpression	free ( p )		816370	0					
ANR	818339	Callee	free		816370	0					
ANR	818340	Identifier	free		816370	0					
ANR	818341	ArgumentList	p		816370	1					
ANR	818342	Argument	p		816370	0					
ANR	818343	Identifier	p		816370	0					
ANR	818344	Statement	define	1723:1:57443:57448	816370	6	True				
ANR	818345	Statement	printline	1723:8:57450:57458	816370	7	True				
ANR	818346	Statement	(	1723:17:57459:57459	816370	8	True				
ANR	818347	Statement	k	1723:18:57460:57460	816370	9	True				
ANR	818348	Statement	","	1723:19:57461:57461	816370	10	True				
ANR	818349	Statement	fmt	1723:21:57463:57465	816370	11	True				
ANR	818350	Statement	","	1723:24:57466:57466	816370	12	True				
ANR	818351	Statement	arg	1723:26:57468:57470	816370	13	True				
ANR	818352	Statement	)	1723:29:57471:57471	816370	14	True				
ANR	818353	CompoundStatement		249:1:7015:7015	816370	15					
ANR	818354	IfStatement	if ( use_color )		816370	0					
ANR	818355	Condition	use_color	1725:6:57485:57493	816370	0	True				
ANR	818356	Identifier	use_color		816370	0					
ANR	818357	Statement	r_cons_printf	1726:3:57500:57512	816370	1	True				
ANR	818358	ElseStatement	else		816370	0					
ANR	818359	ExpressionStatement	"r_cons_printf ( ""%s: "" , k )"	1728:3:57560:57585	816370	0	True				
ANR	818360	CallExpression	"r_cons_printf ( ""%s: "" , k )"		816370	0					
ANR	818361	Callee	r_cons_printf		816370	0					
ANR	818362	Identifier	r_cons_printf		816370	0					
ANR	818363	ArgumentList	"""%s: """		816370	1					
ANR	818364	Argument	"""%s: """		816370	0					
ANR	818365	PrimaryExpression	"""%s: """		816370	0					
ANR	818366	Argument	k		816370	1					
ANR	818367	Identifier	k		816370	0					
ANR	818368	Statement	(	1726:17:57514:57514	816370	1	True				
ANR	818369	Statement	"""%s%s: """	1726:18:57515:57522	816370	2	True				
ANR	818370	Statement	Color_RESET	1726:27:57524:57534	816370	3	True				
ANR	818371	Statement	","	1726:38:57535:57535	816370	4	True				
ANR	818372	Statement	color	1726:40:57537:57541	816370	5	True				
ANR	818373	Statement	","	1726:45:57542:57542	816370	6	True				
ANR	818374	Statement	k	1726:47:57544:57544	816370	7	True				
ANR	818375	Statement	)	1726:48:57545:57545	816370	8	True				
ANR	818376	ExpressionStatement		1726:49:57546:57546	816370	9	True				
ANR	818377	IfStatement	if ( fmt )		816370	10					
ANR	818378	Condition	fmt	1729:6:57594:57596	816370	0	True				
ANR	818379	Identifier	fmt		816370	0					
ANR	818380	ExpressionStatement	"r_cons_printf ( fmt , arg )"	1729:11:57599:57623	816370	1	True				
ANR	818381	CallExpression	"r_cons_printf ( fmt , arg )"		816370	0					
ANR	818382	Callee	r_cons_printf		816370	0					
ANR	818383	Identifier	r_cons_printf		816370	0					
ANR	818384	ArgumentList	fmt		816370	1					
ANR	818385	Argument	fmt		816370	0					
ANR	818386	Identifier	fmt		816370	0					
ANR	818387	Argument	arg		816370	1					
ANR	818388	Identifier	arg		816370	0					
ANR	818389	Statement	printline	1731:3:57632:57640	816370	16	True				
ANR	818390	Statement	(	1731:13:57642:57642	816370	17	True				
ANR	818391	Statement	"""address"""	1731:14:57643:57651	816370	18	True				
ANR	818392	Statement	","	1731:23:57652:57652	816370	19	True				
ANR	818393	Statement	"""0x%"""	1731:25:57654:57658	816370	20	True				
ANR	818394	Statement	PFMT64x	1731:31:57660:57666	816370	21	True				
ANR	818395	Statement	"""\\n"""	1731:39:57668:57671	816370	22	True				
ANR	818396	Statement	","	1731:43:57672:57672	816370	23	True				
ANR	818397	Statement	core	1731:45:57674:57677	816370	24	True				
ANR	818398	Statement	->	1731:49:57678:57679	816370	25	True				
ANR	818399	Statement	offset	1731:51:57680:57685	816370	26	True				
ANR	818400	Statement	+	1731:58:57687:57687	816370	27	True				
ANR	818401	Statement	idx	1731:60:57689:57691	816370	28	True				
ANR	818402	Statement	)	1731:63:57692:57692	816370	29	True				
ANR	818403	ExpressionStatement		1731:64:57693:57693	816370	30	True				
ANR	818404	ExpressionStatement	"printline ( ""opcode"" , ""%s\\n"" , r_asm_op_get_asm ( & asmop ) )"	1732:3:57698:57753	816370	31	True				
ANR	818405	CallExpression	"printline ( ""opcode"" , ""%s\\n"" , r_asm_op_get_asm ( & asmop ) )"		816370	0					
ANR	818406	Callee	printline		816370	0					
ANR	818407	Identifier	printline		816370	0					
ANR	818408	ArgumentList	"""opcode"""		816370	1					
ANR	818409	Argument	"""opcode"""		816370	0					
ANR	818410	PrimaryExpression	"""opcode"""		816370	0					
ANR	818411	Argument	"""%s\\n"""		816370	1					
ANR	818412	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	818413	Argument	r_asm_op_get_asm ( & asmop )		816370	2					
ANR	818414	CallExpression	r_asm_op_get_asm ( & asmop )		816370	0					
ANR	818415	Callee	r_asm_op_get_asm		816370	0					
ANR	818416	Identifier	r_asm_op_get_asm		816370	0					
ANR	818417	ArgumentList	& asmop		816370	1					
ANR	818418	Argument	& asmop		816370	0					
ANR	818419	UnaryOperationExpression	& asmop		816370	0					
ANR	818420	UnaryOperator	&		816370	0					
ANR	818421	Identifier	asmop		816370	1					
ANR	818422	IfStatement	if ( ! * disasm )		816370	32					
ANR	818423	Condition	! * disasm	1733:7:57762:57769	816370	0	True				
ANR	818424	UnaryOperationExpression	! * disasm		816370	0					
ANR	818425	UnaryOperator	!		816370	0					
ANR	818426	UnaryOperationExpression	* disasm		816370	1					
ANR	818427	UnaryOperator	*		816370	0					
ANR	818428	Identifier	disasm		816370	1					
ANR	818429	CompoundStatement		258:17:7312:7312	816370	1					
ANR	818430	ExpressionStatement	"r_str_ncpy ( disasm , r_asm_op_get_asm ( & asmop ) , sizeof ( disasm ) - 1 )"	1734:4:57778:57845	816370	0	True				
ANR	818431	CallExpression	"r_str_ncpy ( disasm , r_asm_op_get_asm ( & asmop ) , sizeof ( disasm ) - 1 )"		816370	0					
ANR	818432	Callee	r_str_ncpy		816370	0					
ANR	818433	Identifier	r_str_ncpy		816370	0					
ANR	818434	ArgumentList	disasm		816370	1					
ANR	818435	Argument	disasm		816370	0					
ANR	818436	Identifier	disasm		816370	0					
ANR	818437	Argument	r_asm_op_get_asm ( & asmop )		816370	1					
ANR	818438	CallExpression	r_asm_op_get_asm ( & asmop )		816370	0					
ANR	818439	Callee	r_asm_op_get_asm		816370	0					
ANR	818440	Identifier	r_asm_op_get_asm		816370	0					
ANR	818441	ArgumentList	& asmop		816370	1					
ANR	818442	Argument	& asmop		816370	0					
ANR	818443	UnaryOperationExpression	& asmop		816370	0					
ANR	818444	UnaryOperator	&		816370	0					
ANR	818445	Identifier	asmop		816370	1					
ANR	818446	Argument	sizeof ( disasm ) - 1		816370	2					
ANR	818447	AdditiveExpression	sizeof ( disasm ) - 1		816370	0		-			
ANR	818448	SizeofExpression	sizeof ( disasm )		816370	0					
ANR	818449	Sizeof	sizeof		816370	0					
ANR	818450	SizeofOperand	disasm		816370	1					
ANR	818451	PrimaryExpression	1		816370	1					
ANR	818452	ExpressionStatement	"printline ( ""disasm"" , ""%s\\n"" , disasm )"	1736:3:57855:57891	816370	33	True				
ANR	818453	CallExpression	"printline ( ""disasm"" , ""%s\\n"" , disasm )"		816370	0					
ANR	818454	Callee	printline		816370	0					
ANR	818455	Identifier	printline		816370	0					
ANR	818456	ArgumentList	"""disasm"""		816370	1					
ANR	818457	Argument	"""disasm"""		816370	0					
ANR	818458	PrimaryExpression	"""disasm"""		816370	0					
ANR	818459	Argument	"""%s\\n"""		816370	1					
ANR	818460	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	818461	Argument	disasm		816370	2					
ANR	818462	Identifier	disasm		816370	0					
ANR	818463	CompoundStatement		263:4:7442:7490	816370	34					
ANR	818464	IdentifierDeclStatement	"char * pseudo = calloc ( 128 + strlen ( disasm ) , 3 ) ;"	1738:4:57902:57950	816370	0	True				
ANR	818465	IdentifierDecl	"* pseudo = calloc ( 128 + strlen ( disasm ) , 3 )"		816370	0					
ANR	818466	IdentifierDeclType	char *		816370	0					
ANR	818467	Identifier	pseudo		816370	1					
ANR	818468	AssignmentExpression	"* pseudo = calloc ( 128 + strlen ( disasm ) , 3 )"		816370	2		=			
ANR	818469	Identifier	pseudo		816370	0					
ANR	818470	CallExpression	"calloc ( 128 + strlen ( disasm ) , 3 )"		816370	1					
ANR	818471	Callee	calloc		816370	0					
ANR	818472	Identifier	calloc		816370	0					
ANR	818473	ArgumentList	128 + strlen ( disasm )		816370	1					
ANR	818474	Argument	128 + strlen ( disasm )		816370	0					
ANR	818475	AdditiveExpression	128 + strlen ( disasm )		816370	0		+			
ANR	818476	PrimaryExpression	128		816370	0					
ANR	818477	CallExpression	strlen ( disasm )		816370	1					
ANR	818478	Callee	strlen		816370	0					
ANR	818479	Identifier	strlen		816370	0					
ANR	818480	ArgumentList	disasm		816370	1					
ANR	818481	Argument	disasm		816370	0					
ANR	818482	Identifier	disasm		816370	0					
ANR	818483	Argument	3		816370	1					
ANR	818484	PrimaryExpression	3		816370	0					
ANR	818485	ExpressionStatement	"r_parse_parse ( core -> parser , disasm , pseudo )"	1739:4:57956:58000	816370	1	True				
ANR	818486	CallExpression	"r_parse_parse ( core -> parser , disasm , pseudo )"		816370	0					
ANR	818487	Callee	r_parse_parse		816370	0					
ANR	818488	Identifier	r_parse_parse		816370	0					
ANR	818489	ArgumentList	core -> parser		816370	1					
ANR	818490	Argument	core -> parser		816370	0					
ANR	818491	PtrMemberAccess	core -> parser		816370	0					
ANR	818492	Identifier	core		816370	0					
ANR	818493	Identifier	parser		816370	1					
ANR	818494	Argument	disasm		816370	1					
ANR	818495	Identifier	disasm		816370	0					
ANR	818496	Argument	pseudo		816370	2					
ANR	818497	Identifier	pseudo		816370	0					
ANR	818498	IfStatement	if ( pseudo && * pseudo )		816370	2					
ANR	818499	Condition	pseudo && * pseudo	1740:8:58010:58026	816370	0	True				
ANR	818500	AndExpression	pseudo && * pseudo		816370	0		&&			
ANR	818501	Identifier	pseudo		816370	0					
ANR	818502	UnaryOperationExpression	* pseudo		816370	1					
ANR	818503	UnaryOperator	*		816370	0					
ANR	818504	Identifier	pseudo		816370	1					
ANR	818505	CompoundStatement		265:27:7569:7569	816370	1					
ANR	818506	ExpressionStatement	"printline ( ""pseudo"" , ""%s\\n"" , pseudo )"	1741:5:58036:58072	816370	0	True				
ANR	818507	CallExpression	"printline ( ""pseudo"" , ""%s\\n"" , pseudo )"		816370	0					
ANR	818508	Callee	printline		816370	0					
ANR	818509	Identifier	printline		816370	0					
ANR	818510	ArgumentList	"""pseudo"""		816370	1					
ANR	818511	Argument	"""pseudo"""		816370	0					
ANR	818512	PrimaryExpression	"""pseudo"""		816370	0					
ANR	818513	Argument	"""%s\\n"""		816370	1					
ANR	818514	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	818515	Argument	pseudo		816370	2					
ANR	818516	Identifier	pseudo		816370	0					
ANR	818517	ExpressionStatement	free ( pseudo )	1743:4:58084:58097	816370	3	True				
ANR	818518	CallExpression	free ( pseudo )		816370	0					
ANR	818519	Callee	free		816370	0					
ANR	818520	Identifier	free		816370	0					
ANR	818521	ArgumentList	pseudo		816370	1					
ANR	818522	Argument	pseudo		816370	0					
ANR	818523	Identifier	pseudo		816370	0					
ANR	818524	ExpressionStatement	"printline ( ""mnemonic"" , ""%s\\n"" , mnem )"	1745:3:58107:58143	816370	35	True				
ANR	818525	CallExpression	"printline ( ""mnemonic"" , ""%s\\n"" , mnem )"		816370	0					
ANR	818526	Callee	printline		816370	0					
ANR	818527	Identifier	printline		816370	0					
ANR	818528	ArgumentList	"""mnemonic"""		816370	1					
ANR	818529	Argument	"""mnemonic"""		816370	0					
ANR	818530	PrimaryExpression	"""mnemonic"""		816370	0					
ANR	818531	Argument	"""%s\\n"""		816370	1					
ANR	818532	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	818533	Argument	mnem		816370	2					
ANR	818534	Identifier	mnem		816370	0					
ANR	818535	CompoundStatement		277:4:7801:7851	816370	36					
ANR	818536	IdentifierDeclStatement	char * opname = strdup ( disasm ) ;	1747:4:58154:58184	816370	0	True				
ANR	818537	IdentifierDecl	* opname = strdup ( disasm )		816370	0					
ANR	818538	IdentifierDeclType	char *		816370	0					
ANR	818539	Identifier	opname		816370	1					
ANR	818540	AssignmentExpression	* opname = strdup ( disasm )		816370	2		=			
ANR	818541	Identifier	opname		816370	0					
ANR	818542	CallExpression	strdup ( disasm )		816370	1					
ANR	818543	Callee	strdup		816370	0					
ANR	818544	Identifier	strdup		816370	0					
ANR	818545	ArgumentList	disasm		816370	1					
ANR	818546	Argument	disasm		816370	0					
ANR	818547	Identifier	disasm		816370	0					
ANR	818548	IdentifierDeclStatement	"char * sp = strchr ( opname , ' ' ) ;"	1748:4:58190:58221	816370	1	True				
ANR	818549	IdentifierDecl	"* sp = strchr ( opname , ' ' )"		816370	0					
ANR	818550	IdentifierDeclType	char *		816370	0					
ANR	818551	Identifier	sp		816370	1					
ANR	818552	AssignmentExpression	"* sp = strchr ( opname , ' ' )"		816370	2		=			
ANR	818553	Identifier	sp		816370	0					
ANR	818554	CallExpression	"strchr ( opname , ' ' )"		816370	1					
ANR	818555	Callee	strchr		816370	0					
ANR	818556	Identifier	strchr		816370	0					
ANR	818557	ArgumentList	opname		816370	1					
ANR	818558	Argument	opname		816370	0					
ANR	818559	Identifier	opname		816370	0					
ANR	818560	Argument	' '		816370	1					
ANR	818561	PrimaryExpression	' '		816370	0					
ANR	818562	IfStatement	if ( sp )		816370	2					
ANR	818563	Condition	sp	1749:8:58231:58232	816370	0	True				
ANR	818564	Identifier	sp		816370	0					
ANR	818565	CompoundStatement		274:12:7775:7775	816370	1					
ANR	818566	ExpressionStatement	* sp = 0	1750:5:58242:58249	816370	0	True				
ANR	818567	AssignmentExpression	* sp = 0		816370	0		=			
ANR	818568	UnaryOperationExpression	* sp		816370	0					
ANR	818569	UnaryOperator	*		816370	0					
ANR	818570	Identifier	sp		816370	1					
ANR	818571	PrimaryExpression	0		816370	1					
ANR	818572	IdentifierDeclStatement	"char * d = r_asm_describe ( core -> assembler , opname ) ;"	1752:4:58261:58311	816370	3	True				
ANR	818573	IdentifierDecl	"* d = r_asm_describe ( core -> assembler , opname )"		816370	0					
ANR	818574	IdentifierDeclType	char *		816370	0					
ANR	818575	Identifier	d		816370	1					
ANR	818576	AssignmentExpression	"* d = r_asm_describe ( core -> assembler , opname )"		816370	2		=			
ANR	818577	Identifier	d		816370	0					
ANR	818578	CallExpression	"r_asm_describe ( core -> assembler , opname )"		816370	1					
ANR	818579	Callee	r_asm_describe		816370	0					
ANR	818580	Identifier	r_asm_describe		816370	0					
ANR	818581	ArgumentList	core -> assembler		816370	1					
ANR	818582	Argument	core -> assembler		816370	0					
ANR	818583	PtrMemberAccess	core -> assembler		816370	0					
ANR	818584	Identifier	core		816370	0					
ANR	818585	Identifier	assembler		816370	1					
ANR	818586	Argument	opname		816370	1					
ANR	818587	Identifier	opname		816370	0					
ANR	818588	IfStatement	if ( d && * d )		816370	4					
ANR	818589	Condition	d && * d	1753:8:58321:58327	816370	0	True				
ANR	818590	AndExpression	d && * d		816370	0		&&			
ANR	818591	Identifier	d		816370	0					
ANR	818592	UnaryOperationExpression	* d		816370	1					
ANR	818593	UnaryOperator	*		816370	0					
ANR	818594	Identifier	d		816370	1					
ANR	818595	CompoundStatement		278:17:7870:7870	816370	1					
ANR	818596	ExpressionStatement	"printline ( ""description"" , ""%s\\n"" , d )"	1754:5:58337:58373	816370	0	True				
ANR	818597	CallExpression	"printline ( ""description"" , ""%s\\n"" , d )"		816370	0					
ANR	818598	Callee	printline		816370	0					
ANR	818599	Identifier	printline		816370	0					
ANR	818600	ArgumentList	"""description"""		816370	1					
ANR	818601	Argument	"""description"""		816370	0					
ANR	818602	PrimaryExpression	"""description"""		816370	0					
ANR	818603	Argument	"""%s\\n"""		816370	1					
ANR	818604	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	818605	Argument	d		816370	2					
ANR	818606	Identifier	d		816370	0					
ANR	818607	ExpressionStatement	free ( d )	1756:4:58385:58393	816370	5	True				
ANR	818608	CallExpression	free ( d )		816370	0					
ANR	818609	Callee	free		816370	0					
ANR	818610	Identifier	free		816370	0					
ANR	818611	ArgumentList	d		816370	1					
ANR	818612	Argument	d		816370	0					
ANR	818613	Identifier	d		816370	0					
ANR	818614	ExpressionStatement	free ( opname )	1757:4:58399:58412	816370	6	True				
ANR	818615	CallExpression	free ( opname )		816370	0					
ANR	818616	Callee	free		816370	0					
ANR	818617	Identifier	free		816370	0					
ANR	818618	ArgumentList	opname		816370	1					
ANR	818619	Argument	opname		816370	0					
ANR	818620	Identifier	opname		816370	0					
ANR	818621	CompoundStatement		286:4:8052:8097	816370	37					
ANR	818622	IdentifierDeclStatement	"ut8 * mask = r_anal_mask ( core -> anal , len - idx , buf + idx , core -> offset + idx ) ;"	1760:4:58428:58506	816370	0	True				
ANR	818623	IdentifierDecl	"* mask = r_anal_mask ( core -> anal , len - idx , buf + idx , core -> offset + idx )"		816370	0					
ANR	818624	IdentifierDeclType	ut8 *		816370	0					
ANR	818625	Identifier	mask		816370	1					
ANR	818626	AssignmentExpression	"* mask = r_anal_mask ( core -> anal , len - idx , buf + idx , core -> offset + idx )"		816370	2		=			
ANR	818627	Identifier	mask		816370	0					
ANR	818628	CallExpression	"r_anal_mask ( core -> anal , len - idx , buf + idx , core -> offset + idx )"		816370	1					
ANR	818629	Callee	r_anal_mask		816370	0					
ANR	818630	Identifier	r_anal_mask		816370	0					
ANR	818631	ArgumentList	core -> anal		816370	1					
ANR	818632	Argument	core -> anal		816370	0					
ANR	818633	PtrMemberAccess	core -> anal		816370	0					
ANR	818634	Identifier	core		816370	0					
ANR	818635	Identifier	anal		816370	1					
ANR	818636	Argument	len - idx		816370	1					
ANR	818637	AdditiveExpression	len - idx		816370	0		-			
ANR	818638	Identifier	len		816370	0					
ANR	818639	Identifier	idx		816370	1					
ANR	818640	Argument	buf + idx		816370	2					
ANR	818641	AdditiveExpression	buf + idx		816370	0		+			
ANR	818642	Identifier	buf		816370	0					
ANR	818643	Identifier	idx		816370	1					
ANR	818644	Argument	core -> offset + idx		816370	3					
ANR	818645	AdditiveExpression	core -> offset + idx		816370	0		+			
ANR	818646	PtrMemberAccess	core -> offset		816370	0					
ANR	818647	Identifier	core		816370	0					
ANR	818648	Identifier	offset		816370	1					
ANR	818649	Identifier	idx		816370	1					
ANR	818650	IdentifierDeclStatement	"char * maskstr = r_hex_bin2strdup ( mask , size ) ;"	1761:4:58512:58557	816370	1	True				
ANR	818651	IdentifierDecl	"* maskstr = r_hex_bin2strdup ( mask , size )"		816370	0					
ANR	818652	IdentifierDeclType	char *		816370	0					
ANR	818653	Identifier	maskstr		816370	1					
ANR	818654	AssignmentExpression	"* maskstr = r_hex_bin2strdup ( mask , size )"		816370	2		=			
ANR	818655	Identifier	maskstr		816370	0					
ANR	818656	CallExpression	"r_hex_bin2strdup ( mask , size )"		816370	1					
ANR	818657	Callee	r_hex_bin2strdup		816370	0					
ANR	818658	Identifier	r_hex_bin2strdup		816370	0					
ANR	818659	ArgumentList	mask		816370	1					
ANR	818660	Argument	mask		816370	0					
ANR	818661	Identifier	mask		816370	0					
ANR	818662	Argument	size		816370	1					
ANR	818663	Identifier	size		816370	0					
ANR	818664	ExpressionStatement	"printline ( ""mask"" , ""%s\\n"" , maskstr )"	1762:4:58563:58598	816370	2	True				
ANR	818665	CallExpression	"printline ( ""mask"" , ""%s\\n"" , maskstr )"		816370	0					
ANR	818666	Callee	printline		816370	0					
ANR	818667	Identifier	printline		816370	0					
ANR	818668	ArgumentList	"""mask"""		816370	1					
ANR	818669	Argument	"""mask"""		816370	0					
ANR	818670	PrimaryExpression	"""mask"""		816370	0					
ANR	818671	Argument	"""%s\\n"""		816370	1					
ANR	818672	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	818673	Argument	maskstr		816370	2					
ANR	818674	Identifier	maskstr		816370	0					
ANR	818675	ExpressionStatement	free ( mask )	1763:4:58604:58615	816370	3	True				
ANR	818676	CallExpression	free ( mask )		816370	0					
ANR	818677	Callee	free		816370	0					
ANR	818678	Identifier	free		816370	0					
ANR	818679	ArgumentList	mask		816370	1					
ANR	818680	Argument	mask		816370	0					
ANR	818681	Identifier	mask		816370	0					
ANR	818682	ExpressionStatement	free ( maskstr )	1764:4:58621:58635	816370	4	True				
ANR	818683	CallExpression	free ( maskstr )		816370	0					
ANR	818684	Callee	free		816370	0					
ANR	818685	Identifier	free		816370	0					
ANR	818686	ArgumentList	maskstr		816370	1					
ANR	818687	Argument	maskstr		816370	0					
ANR	818688	Identifier	maskstr		816370	0					
ANR	818689	IfStatement	if ( hint )		816370	38					
ANR	818690	Condition	hint	1766:7:58649:58652	816370	0	True				
ANR	818691	Identifier	hint		816370	0					
ANR	818692	CompoundStatement		291:13:8195:8195	816370	1					
ANR	818693	IfStatement	if ( hint -> opcode )		816370	0					
ANR	818694	Condition	hint -> opcode	1767:8:58665:58676	816370	0	True				
ANR	818695	PtrMemberAccess	hint -> opcode		816370	0					
ANR	818696	Identifier	hint		816370	0					
ANR	818697	Identifier	opcode		816370	1					
ANR	818698	CompoundStatement		292:22:8219:8219	816370	1					
ANR	818699	ExpressionStatement	"printline ( ""ophint"" , ""%s\\n"" , hint -> opcode )"	1768:5:58686:58728	816370	0	True				
ANR	818700	CallExpression	"printline ( ""ophint"" , ""%s\\n"" , hint -> opcode )"		816370	0					
ANR	818701	Callee	printline		816370	0					
ANR	818702	Identifier	printline		816370	0					
ANR	818703	ArgumentList	"""ophint"""		816370	1					
ANR	818704	Argument	"""ophint"""		816370	0					
ANR	818705	PrimaryExpression	"""ophint"""		816370	0					
ANR	818706	Argument	"""%s\\n"""		816370	1					
ANR	818707	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	818708	Argument	hint -> opcode		816370	2					
ANR	818709	PtrMemberAccess	hint -> opcode		816370	0					
ANR	818710	Identifier	hint		816370	0					
ANR	818711	Identifier	opcode		816370	1					
ANR	818712	Statement	printline	1771:3:58744:58752	816370	39	True				
ANR	818713	Statement	(	1771:13:58754:58754	816370	40	True				
ANR	818714	Statement	"""prefix"""	1771:14:58755:58762	816370	41	True				
ANR	818715	Statement	","	1771:22:58763:58763	816370	42	True				
ANR	818716	Statement	"""%"""	1771:24:58765:58767	816370	43	True				
ANR	818717	Statement	PFMT64u	1771:28:58769:58775	816370	44	True				
ANR	818718	Statement	"""\\n"""	1771:36:58777:58780	816370	45	True				
ANR	818719	Statement	","	1771:40:58781:58781	816370	46	True				
ANR	818720	Statement	op	1771:42:58783:58784	816370	47	True				
ANR	818721	Statement	.	1771:44:58785:58785	816370	48	True				
ANR	818722	Statement	prefix	1771:45:58786:58791	816370	49	True				
ANR	818723	Statement	)	1771:51:58792:58792	816370	50	True				
ANR	818724	ExpressionStatement		1771:52:58793:58793	816370	51	True				
ANR	818725	ExpressionStatement	"printline ( ""id"" , ""%d\\n"" , op . id )"	1772:3:58798:58829	816370	52	True				
ANR	818726	CallExpression	"printline ( ""id"" , ""%d\\n"" , op . id )"		816370	0					
ANR	818727	Callee	printline		816370	0					
ANR	818728	Identifier	printline		816370	0					
ANR	818729	ArgumentList	"""id"""		816370	1					
ANR	818730	Argument	"""id"""		816370	0					
ANR	818731	PrimaryExpression	"""id"""		816370	0					
ANR	818732	Argument	"""%d\\n"""		816370	1					
ANR	818733	PrimaryExpression	"""%d\\n"""		816370	0					
ANR	818734	Argument	op . id		816370	2					
ANR	818735	MemberAccess	op . id		816370	0					
ANR	818736	Identifier	op		816370	0					
ANR	818737	Identifier	id		816370	1					
ANR	818738	IfStatement	if ( opexstr && * opexstr )		816370	53					
ANR	818739	Condition	opexstr && * opexstr	1775:7:58938:58956	816370	0	True				
ANR	818740	AndExpression	opexstr && * opexstr		816370	0		&&			
ANR	818741	Identifier	opexstr		816370	0					
ANR	818742	UnaryOperationExpression	* opexstr		816370	1					
ANR	818743	UnaryOperator	*		816370	0					
ANR	818744	Identifier	opexstr		816370	1					
ANR	818745	CompoundStatement		300:28:8499:8499	816370	1					
ANR	818746	ExpressionStatement	"printline ( ""opex"" , ""%s\\n"" , opexstr )"	1776:4:58965:59000	816370	0	True				
ANR	818747	CallExpression	"printline ( ""opex"" , ""%s\\n"" , opexstr )"		816370	0					
ANR	818748	Callee	printline		816370	0					
ANR	818749	Identifier	printline		816370	0					
ANR	818750	ArgumentList	"""opex"""		816370	1					
ANR	818751	Argument	"""opex"""		816370	0					
ANR	818752	PrimaryExpression	"""opex"""		816370	0					
ANR	818753	Argument	"""%s\\n"""		816370	1					
ANR	818754	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	818755	Argument	opexstr		816370	2					
ANR	818756	Identifier	opexstr		816370	0					
ANR	818757	ExpressionStatement	"printline ( ""bytes"" , NULL , 0 )"	1779:3:59017:59045	816370	54	True				
ANR	818758	CallExpression	"printline ( ""bytes"" , NULL , 0 )"		816370	0					
ANR	818759	Callee	printline		816370	0					
ANR	818760	Identifier	printline		816370	0					
ANR	818761	ArgumentList	"""bytes"""		816370	1					
ANR	818762	Argument	"""bytes"""		816370	0					
ANR	818763	PrimaryExpression	"""bytes"""		816370	0					
ANR	818764	Argument	NULL		816370	1					
ANR	818765	Identifier	NULL		816370	0					
ANR	818766	Argument	0		816370	2					
ANR	818767	PrimaryExpression	0		816370	0					
ANR	818768	IdentifierDeclStatement	"int minsz = R_MIN ( len , size ) ;"	1780:3:59050:59079	816370	55	True				
ANR	818769	IdentifierDecl	"minsz = R_MIN ( len , size )"		816370	0					
ANR	818770	IdentifierDeclType	int		816370	0					
ANR	818771	Identifier	minsz		816370	1					
ANR	818772	AssignmentExpression	"minsz = R_MIN ( len , size )"		816370	2		=			
ANR	818773	Identifier	minsz		816370	0					
ANR	818774	CallExpression	"R_MIN ( len , size )"		816370	1					
ANR	818775	Callee	R_MIN		816370	0					
ANR	818776	Identifier	R_MIN		816370	0					
ANR	818777	ArgumentList	len		816370	1					
ANR	818778	Argument	len		816370	0					
ANR	818779	Identifier	len		816370	0					
ANR	818780	Argument	size		816370	1					
ANR	818781	Identifier	size		816370	0					
ANR	818782	ExpressionStatement	"minsz = R_MAX ( minsz , 0 )"	1781:3:59084:59108	816370	56	True				
ANR	818783	AssignmentExpression	"minsz = R_MAX ( minsz , 0 )"		816370	0		=			
ANR	818784	Identifier	minsz		816370	0					
ANR	818785	CallExpression	"R_MAX ( minsz , 0 )"		816370	1					
ANR	818786	Callee	R_MAX		816370	0					
ANR	818787	Identifier	R_MAX		816370	0					
ANR	818788	ArgumentList	minsz		816370	1					
ANR	818789	Argument	minsz		816370	0					
ANR	818790	Identifier	minsz		816370	0					
ANR	818791	Argument	0		816370	1					
ANR	818792	PrimaryExpression	0		816370	0					
ANR	818793	ForStatement	for ( j = 0 ; j < minsz ; j ++ )		816370	57					
ANR	818794	ForInit	j = 0 ;	1782:8:59118:59123	816370	0	True				
ANR	818795	AssignmentExpression	j = 0		816370	0		=			
ANR	818796	Identifier	j		816370	0					
ANR	818797	PrimaryExpression	0		816370	1					
ANR	818798	Condition	j < minsz	1782:15:59125:59133	816370	1	True				
ANR	818799	RelationalExpression	j < minsz		816370	0		<			
ANR	818800	Identifier	j		816370	0					
ANR	818801	Identifier	minsz		816370	1					
ANR	818802	PostIncDecOperationExpression	j ++	1782:26:59136:59138	816370	2	True				
ANR	818803	Identifier	j		816370	0					
ANR	818804	IncDec	++		816370	1					
ANR	818805	CompoundStatement		308:4:8687:8739	816370	3					
ANR	818806	IdentifierDeclStatement	ut8 ch = ( ( j + idx - 1 ) > minsz ) ? 0xff : buf [ j + idx ] ;	1783:4:59147:59199	816370	0	True				
ANR	818807	IdentifierDecl	ch = ( ( j + idx - 1 ) > minsz ) ? 0xff : buf [ j + idx ]		816370	0					
ANR	818808	IdentifierDeclType	ut8		816370	0					
ANR	818809	Identifier	ch		816370	1					
ANR	818810	AssignmentExpression	ch = ( ( j + idx - 1 ) > minsz ) ? 0xff : buf [ j + idx ]		816370	2		=			
ANR	818811	Identifier	ch		816370	0					
ANR	818812	ConditionalExpression	( ( j + idx - 1 ) > minsz ) ? 0xff : buf [ j + idx ]		816370	1					
ANR	818813	Condition	( j + idx - 1 ) > minsz		816370	0					
ANR	818814	RelationalExpression	( j + idx - 1 ) > minsz		816370	0		>			
ANR	818815	AdditiveExpression	j + idx - 1		816370	0		+			
ANR	818816	Identifier	j		816370	0					
ANR	818817	AdditiveExpression	idx - 1		816370	1		-			
ANR	818818	Identifier	idx		816370	0					
ANR	818819	PrimaryExpression	1		816370	1					
ANR	818820	Identifier	minsz		816370	1					
ANR	818821	PrimaryExpression	0xff		816370	1					
ANR	818822	ArrayIndexing	buf [ j + idx ]		816370	2					
ANR	818823	Identifier	buf		816370	0					
ANR	818824	AdditiveExpression	j + idx		816370	1		+			
ANR	818825	Identifier	j		816370	0					
ANR	818826	Identifier	idx		816370	1					
ANR	818827	ExpressionStatement	"r_cons_printf ( ""%02x"" , ch )"	1784:4:59205:59231	816370	1	True				
ANR	818828	CallExpression	"r_cons_printf ( ""%02x"" , ch )"		816370	0					
ANR	818829	Callee	r_cons_printf		816370	0					
ANR	818830	Identifier	r_cons_printf		816370	0					
ANR	818831	ArgumentList	"""%02x"""		816370	1					
ANR	818832	Argument	"""%02x"""		816370	0					
ANR	818833	PrimaryExpression	"""%02x"""		816370	0					
ANR	818834	Argument	ch		816370	1					
ANR	818835	Identifier	ch		816370	0					
ANR	818836	ExpressionStatement	r_cons_newline ( )	1786:3:59241:59258	816370	58	True				
ANR	818837	CallExpression	r_cons_newline ( )		816370	0					
ANR	818838	Callee	r_cons_newline		816370	0					
ANR	818839	Identifier	r_cons_newline		816370	0					
ANR	818840	ArgumentList			816370	1					
ANR	818841	IfStatement	if ( op . val != UT64_MAX )		816370	59					
ANR	818842	Condition	op . val != UT64_MAX	1787:7:59267:59284	816370	0	True				
ANR	818843	EqualityExpression	op . val != UT64_MAX		816370	0		!=			
ANR	818844	MemberAccess	op . val		816370	0					
ANR	818845	Identifier	op		816370	0					
ANR	818846	Identifier	val		816370	1					
ANR	818847	Identifier	UT64_MAX		816370	1					
ANR	818848	CompoundStatement		312:27:8827:8827	816370	1					
ANR	818849	Statement	printline	1788:4:59293:59301	816370	0	True				
ANR	818850	Statement	(	1788:14:59303:59303	816370	1	True				
ANR	818851	Statement	"""val"""	1788:15:59304:59308	816370	2	True				
ANR	818852	Statement	","	1788:20:59309:59309	816370	3	True				
ANR	818853	Statement	"""0x%08"""	1788:22:59311:59317	816370	4	True				
ANR	818854	Statement	PFMT64x	1788:30:59319:59325	816370	5	True				
ANR	818855	Statement	"""\\n"""	1788:38:59327:59330	816370	6	True				
ANR	818856	Statement	","	1788:42:59331:59331	816370	7	True				
ANR	818857	Statement	op	1788:44:59333:59334	816370	8	True				
ANR	818858	Statement	.	1788:46:59335:59335	816370	9	True				
ANR	818859	Statement	val	1788:47:59336:59338	816370	10	True				
ANR	818860	Statement	)	1788:50:59339:59339	816370	11	True				
ANR	818861	ExpressionStatement		1788:51:59340:59340	816370	12	True				
ANR	818862	IfStatement	if ( op . ptr != UT64_MAX )		816370	60					
ANR	818863	Condition	op . ptr != UT64_MAX	1790:7:59354:59371	816370	0	True				
ANR	818864	EqualityExpression	op . ptr != UT64_MAX		816370	0		!=			
ANR	818865	MemberAccess	op . ptr		816370	0					
ANR	818866	Identifier	op		816370	0					
ANR	818867	Identifier	ptr		816370	1					
ANR	818868	Identifier	UT64_MAX		816370	1					
ANR	818869	CompoundStatement		315:27:8914:8914	816370	1					
ANR	818870	Statement	printline	1791:4:59380:59388	816370	0	True				
ANR	818871	Statement	(	1791:14:59390:59390	816370	1	True				
ANR	818872	Statement	"""ptr"""	1791:15:59391:59395	816370	2	True				
ANR	818873	Statement	","	1791:20:59396:59396	816370	3	True				
ANR	818874	Statement	"""0x%08"""	1791:22:59398:59404	816370	4	True				
ANR	818875	Statement	PFMT64x	1791:30:59406:59412	816370	5	True				
ANR	818876	Statement	"""\\n"""	1791:38:59414:59417	816370	6	True				
ANR	818877	Statement	","	1791:42:59418:59418	816370	7	True				
ANR	818878	Statement	op	1791:44:59420:59421	816370	8	True				
ANR	818879	Statement	.	1791:46:59422:59422	816370	9	True				
ANR	818880	Statement	ptr	1791:47:59423:59425	816370	10	True				
ANR	818881	Statement	)	1791:50:59426:59426	816370	11	True				
ANR	818882	ExpressionStatement		1791:51:59427:59427	816370	12	True				
ANR	818883	IfStatement	if ( op . refptr != - 1 )		816370	61					
ANR	818884	Condition	op . refptr != - 1	1793:7:59441:59455	816370	0	True				
ANR	818885	EqualityExpression	op . refptr != - 1		816370	0		!=			
ANR	818886	MemberAccess	op . refptr		816370	0					
ANR	818887	Identifier	op		816370	0					
ANR	818888	Identifier	refptr		816370	1					
ANR	818889	UnaryOperationExpression	- 1		816370	1					
ANR	818890	UnaryOperator	-		816370	0					
ANR	818891	PrimaryExpression	1		816370	1					
ANR	818892	CompoundStatement		318:24:8998:8998	816370	1					
ANR	818893	ExpressionStatement	"printline ( ""refptr"" , ""%d\\n"" , op . refptr )"	1794:4:59464:59503	816370	0	True				
ANR	818894	CallExpression	"printline ( ""refptr"" , ""%d\\n"" , op . refptr )"		816370	0					
ANR	818895	Callee	printline		816370	0					
ANR	818896	Identifier	printline		816370	0					
ANR	818897	ArgumentList	"""refptr"""		816370	1					
ANR	818898	Argument	"""refptr"""		816370	0					
ANR	818899	PrimaryExpression	"""refptr"""		816370	0					
ANR	818900	Argument	"""%d\\n"""		816370	1					
ANR	818901	PrimaryExpression	"""%d\\n"""		816370	0					
ANR	818902	Argument	op . refptr		816370	2					
ANR	818903	MemberAccess	op . refptr		816370	0					
ANR	818904	Identifier	op		816370	0					
ANR	818905	Identifier	refptr		816370	1					
ANR	818906	ExpressionStatement	"printline ( ""size"" , ""%d\\n"" , size )"	1796:3:59513:59545	816370	62	True				
ANR	818907	CallExpression	"printline ( ""size"" , ""%d\\n"" , size )"		816370	0					
ANR	818908	Callee	printline		816370	0					
ANR	818909	Identifier	printline		816370	0					
ANR	818910	ArgumentList	"""size"""		816370	1					
ANR	818911	Argument	"""size"""		816370	0					
ANR	818912	PrimaryExpression	"""size"""		816370	0					
ANR	818913	Argument	"""%d\\n"""		816370	1					
ANR	818914	PrimaryExpression	"""%d\\n"""		816370	0					
ANR	818915	Argument	size		816370	2					
ANR	818916	Identifier	size		816370	0					
ANR	818917	ExpressionStatement	"printline ( ""sign"" , ""%s\\n"" , r_str_bool ( op . sign ) )"	1797:3:59550:59598	816370	63	True				
ANR	818918	CallExpression	"printline ( ""sign"" , ""%s\\n"" , r_str_bool ( op . sign ) )"		816370	0					
ANR	818919	Callee	printline		816370	0					
ANR	818920	Identifier	printline		816370	0					
ANR	818921	ArgumentList	"""sign"""		816370	1					
ANR	818922	Argument	"""sign"""		816370	0					
ANR	818923	PrimaryExpression	"""sign"""		816370	0					
ANR	818924	Argument	"""%s\\n"""		816370	1					
ANR	818925	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	818926	Argument	r_str_bool ( op . sign )		816370	2					
ANR	818927	CallExpression	r_str_bool ( op . sign )		816370	0					
ANR	818928	Callee	r_str_bool		816370	0					
ANR	818929	Identifier	r_str_bool		816370	0					
ANR	818930	ArgumentList	op . sign		816370	1					
ANR	818931	Argument	op . sign		816370	0					
ANR	818932	MemberAccess	op . sign		816370	0					
ANR	818933	Identifier	op		816370	0					
ANR	818934	Identifier	sign		816370	1					
ANR	818935	ExpressionStatement	"printline ( ""type"" , ""%s\\n"" , r_anal_optype_to_string ( op . type ) )"	1798:3:59603:59664	816370	64	True				
ANR	818936	CallExpression	"printline ( ""type"" , ""%s\\n"" , r_anal_optype_to_string ( op . type ) )"		816370	0					
ANR	818937	Callee	printline		816370	0					
ANR	818938	Identifier	printline		816370	0					
ANR	818939	ArgumentList	"""type"""		816370	1					
ANR	818940	Argument	"""type"""		816370	0					
ANR	818941	PrimaryExpression	"""type"""		816370	0					
ANR	818942	Argument	"""%s\\n"""		816370	1					
ANR	818943	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	818944	Argument	r_anal_optype_to_string ( op . type )		816370	2					
ANR	818945	CallExpression	r_anal_optype_to_string ( op . type )		816370	0					
ANR	818946	Callee	r_anal_optype_to_string		816370	0					
ANR	818947	Identifier	r_anal_optype_to_string		816370	0					
ANR	818948	ArgumentList	op . type		816370	1					
ANR	818949	Argument	op . type		816370	0					
ANR	818950	MemberAccess	op . type		816370	0					
ANR	818951	Identifier	op		816370	0					
ANR	818952	Identifier	type		816370	1					
ANR	818953	IdentifierDeclStatement	const char * datatype = r_anal_datatype_to_string ( op . datatype ) ;	1799:3:59669:59731	816370	65	True				
ANR	818954	IdentifierDecl	* datatype = r_anal_datatype_to_string ( op . datatype )		816370	0					
ANR	818955	IdentifierDeclType	const char *		816370	0					
ANR	818956	Identifier	datatype		816370	1					
ANR	818957	AssignmentExpression	* datatype = r_anal_datatype_to_string ( op . datatype )		816370	2		=			
ANR	818958	Identifier	datatype		816370	0					
ANR	818959	CallExpression	r_anal_datatype_to_string ( op . datatype )		816370	1					
ANR	818960	Callee	r_anal_datatype_to_string		816370	0					
ANR	818961	Identifier	r_anal_datatype_to_string		816370	0					
ANR	818962	ArgumentList	op . datatype		816370	1					
ANR	818963	Argument	op . datatype		816370	0					
ANR	818964	MemberAccess	op . datatype		816370	0					
ANR	818965	Identifier	op		816370	0					
ANR	818966	Identifier	datatype		816370	1					
ANR	818967	IfStatement	if ( datatype )		816370	66					
ANR	818968	Condition	datatype	1800:7:59740:59747	816370	0	True				
ANR	818969	Identifier	datatype		816370	0					
ANR	818970	CompoundStatement		325:17:9290:9290	816370	1					
ANR	818971	ExpressionStatement	"printline ( ""datatype"" , ""%s\\n"" , datatype )"	1801:4:59756:59796	816370	0	True				
ANR	818972	CallExpression	"printline ( ""datatype"" , ""%s\\n"" , datatype )"		816370	0					
ANR	818973	Callee	printline		816370	0					
ANR	818974	Identifier	printline		816370	0					
ANR	818975	ArgumentList	"""datatype"""		816370	1					
ANR	818976	Argument	"""datatype"""		816370	0					
ANR	818977	PrimaryExpression	"""datatype"""		816370	0					
ANR	818978	Argument	"""%s\\n"""		816370	1					
ANR	818979	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	818980	Argument	datatype		816370	2					
ANR	818981	Identifier	datatype		816370	0					
ANR	818982	ExpressionStatement	"printline ( ""cycles"" , ""%d\\n"" , op . cycles )"	1803:3:59806:59845	816370	67	True				
ANR	818983	CallExpression	"printline ( ""cycles"" , ""%d\\n"" , op . cycles )"		816370	0					
ANR	818984	Callee	printline		816370	0					
ANR	818985	Identifier	printline		816370	0					
ANR	818986	ArgumentList	"""cycles"""		816370	1					
ANR	818987	Argument	"""cycles"""		816370	0					
ANR	818988	PrimaryExpression	"""cycles"""		816370	0					
ANR	818989	Argument	"""%d\\n"""		816370	1					
ANR	818990	PrimaryExpression	"""%d\\n"""		816370	0					
ANR	818991	Argument	op . cycles		816370	2					
ANR	818992	MemberAccess	op . cycles		816370	0					
ANR	818993	Identifier	op		816370	0					
ANR	818994	Identifier	cycles		816370	1					
ANR	818995	IfStatement	if ( op . failcycles )		816370	68					
ANR	818996	Condition	op . failcycles	1804:7:59854:59866	816370	0	True				
ANR	818997	MemberAccess	op . failcycles		816370	0					
ANR	818998	Identifier	op		816370	0					
ANR	818999	Identifier	failcycles		816370	1					
ANR	819000	CompoundStatement		329:22:9409:9409	816370	1					
ANR	819001	ExpressionStatement	"printline ( ""failcycles"" , ""%d\\n"" , op . failcycles )"	1805:4:59875:59922	816370	0	True				
ANR	819002	CallExpression	"printline ( ""failcycles"" , ""%d\\n"" , op . failcycles )"		816370	0					
ANR	819003	Callee	printline		816370	0					
ANR	819004	Identifier	printline		816370	0					
ANR	819005	ArgumentList	"""failcycles"""		816370	1					
ANR	819006	Argument	"""failcycles"""		816370	0					
ANR	819007	PrimaryExpression	"""failcycles"""		816370	0					
ANR	819008	Argument	"""%d\\n"""		816370	1					
ANR	819009	PrimaryExpression	"""%d\\n"""		816370	0					
ANR	819010	Argument	op . failcycles		816370	2					
ANR	819011	MemberAccess	op . failcycles		816370	0					
ANR	819012	Identifier	op		816370	0					
ANR	819013	Identifier	failcycles		816370	1					
ANR	819014	IfStatement	if ( op . type2 )		816370	69					
ANR	819015	Condition	op . type2	1807:7:59936:59943	816370	0	True				
ANR	819016	MemberAccess	op . type2		816370	0					
ANR	819017	Identifier	op		816370	0					
ANR	819018	Identifier	type2		816370	1					
ANR	819019	CompoundStatement		332:17:9486:9486	816370	1					
ANR	819020	ExpressionStatement	"printline ( ""type2"" , ""0x%x\\n"" , op . type2 )"	1808:4:59952:59991	816370	0	True				
ANR	819021	CallExpression	"printline ( ""type2"" , ""0x%x\\n"" , op . type2 )"		816370	0					
ANR	819022	Callee	printline		816370	0					
ANR	819023	Identifier	printline		816370	0					
ANR	819024	ArgumentList	"""type2"""		816370	1					
ANR	819025	Argument	"""type2"""		816370	0					
ANR	819026	PrimaryExpression	"""type2"""		816370	0					
ANR	819027	Argument	"""0x%x\\n"""		816370	1					
ANR	819028	PrimaryExpression	"""0x%x\\n"""		816370	0					
ANR	819029	Argument	op . type2		816370	2					
ANR	819030	MemberAccess	op . type2		816370	0					
ANR	819031	Identifier	op		816370	0					
ANR	819032	Identifier	type2		816370	1					
ANR	819033	IfStatement	if ( op . reg )		816370	70					
ANR	819034	Condition	op . reg	1810:7:60005:60010	816370	0	True				
ANR	819035	MemberAccess	op . reg		816370	0					
ANR	819036	Identifier	op		816370	0					
ANR	819037	Identifier	reg		816370	1					
ANR	819038	CompoundStatement		335:15:9553:9553	816370	1					
ANR	819039	ExpressionStatement	"printline ( ""reg"" , ""%s\\n"" , op . reg )"	1811:4:60019:60052	816370	0	True				
ANR	819040	CallExpression	"printline ( ""reg"" , ""%s\\n"" , op . reg )"		816370	0					
ANR	819041	Callee	printline		816370	0					
ANR	819042	Identifier	printline		816370	0					
ANR	819043	ArgumentList	"""reg"""		816370	1					
ANR	819044	Argument	"""reg"""		816370	0					
ANR	819045	PrimaryExpression	"""reg"""		816370	0					
ANR	819046	Argument	"""%s\\n"""		816370	1					
ANR	819047	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	819048	Argument	op . reg		816370	2					
ANR	819049	MemberAccess	op . reg		816370	0					
ANR	819050	Identifier	op		816370	0					
ANR	819051	Identifier	reg		816370	1					
ANR	819052	IfStatement	if ( op . ireg )		816370	71					
ANR	819053	Condition	op . ireg	1813:7:60066:60072	816370	0	True				
ANR	819054	MemberAccess	op . ireg		816370	0					
ANR	819055	Identifier	op		816370	0					
ANR	819056	Identifier	ireg		816370	1					
ANR	819057	CompoundStatement		338:16:9615:9615	816370	1					
ANR	819058	ExpressionStatement	"printline ( ""ireg"" , ""%s\\n"" , op . ireg )"	1814:4:60081:60116	816370	0	True				
ANR	819059	CallExpression	"printline ( ""ireg"" , ""%s\\n"" , op . ireg )"		816370	0					
ANR	819060	Callee	printline		816370	0					
ANR	819061	Identifier	printline		816370	0					
ANR	819062	ArgumentList	"""ireg"""		816370	1					
ANR	819063	Argument	"""ireg"""		816370	0					
ANR	819064	PrimaryExpression	"""ireg"""		816370	0					
ANR	819065	Argument	"""%s\\n"""		816370	1					
ANR	819066	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	819067	Argument	op . ireg		816370	2					
ANR	819068	MemberAccess	op . ireg		816370	0					
ANR	819069	Identifier	op		816370	0					
ANR	819070	Identifier	ireg		816370	1					
ANR	819071	IfStatement	if ( op . scale )		816370	72					
ANR	819072	Condition	op . scale	1816:7:60130:60137	816370	0	True				
ANR	819073	MemberAccess	op . scale		816370	0					
ANR	819074	Identifier	op		816370	0					
ANR	819075	Identifier	scale		816370	1					
ANR	819076	CompoundStatement		341:17:9680:9680	816370	1					
ANR	819077	ExpressionStatement	"printline ( ""scale"" , ""%d\\n"" , op . scale )"	1817:4:60146:60183	816370	0	True				
ANR	819078	CallExpression	"printline ( ""scale"" , ""%d\\n"" , op . scale )"		816370	0					
ANR	819079	Callee	printline		816370	0					
ANR	819080	Identifier	printline		816370	0					
ANR	819081	ArgumentList	"""scale"""		816370	1					
ANR	819082	Argument	"""scale"""		816370	0					
ANR	819083	PrimaryExpression	"""scale"""		816370	0					
ANR	819084	Argument	"""%d\\n"""		816370	1					
ANR	819085	PrimaryExpression	"""%d\\n"""		816370	0					
ANR	819086	Argument	op . scale		816370	2					
ANR	819087	MemberAccess	op . scale		816370	0					
ANR	819088	Identifier	op		816370	0					
ANR	819089	Identifier	scale		816370	1					
ANR	819090	IfStatement	if ( hint && hint -> esil )		816370	73					
ANR	819091	Condition	hint && hint -> esil	1819:7:60197:60214	816370	0	True				
ANR	819092	AndExpression	hint && hint -> esil		816370	0		&&			
ANR	819093	Identifier	hint		816370	0					
ANR	819094	PtrMemberAccess	hint -> esil		816370	1					
ANR	819095	Identifier	hint		816370	0					
ANR	819096	Identifier	esil		816370	1					
ANR	819097	CompoundStatement		344:27:9757:9757	816370	1					
ANR	819098	ExpressionStatement	"printline ( ""esil"" , ""%s\\n"" , hint -> esil )"	1820:4:60223:60261	816370	0	True				
ANR	819099	CallExpression	"printline ( ""esil"" , ""%s\\n"" , hint -> esil )"		816370	0					
ANR	819100	Callee	printline		816370	0					
ANR	819101	Identifier	printline		816370	0					
ANR	819102	ArgumentList	"""esil"""		816370	1					
ANR	819103	Argument	"""esil"""		816370	0					
ANR	819104	PrimaryExpression	"""esil"""		816370	0					
ANR	819105	Argument	"""%s\\n"""		816370	1					
ANR	819106	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	819107	Argument	hint -> esil		816370	2					
ANR	819108	PtrMemberAccess	hint -> esil		816370	0					
ANR	819109	Identifier	hint		816370	0					
ANR	819110	Identifier	esil		816370	1					
ANR	819111	ElseStatement	else		816370	0					
ANR	819112	IfStatement	if ( * esilstr )		816370	0					
ANR	819113	Condition	* esilstr	1821:14:60277:60284	816370	0	True				
ANR	819114	UnaryOperationExpression	* esilstr		816370	0					
ANR	819115	UnaryOperator	*		816370	0					
ANR	819116	Identifier	esilstr		816370	1					
ANR	819117	CompoundStatement		346:24:9827:9827	816370	1					
ANR	819118	ExpressionStatement	"printline ( ""esil"" , ""%s\\n"" , esilstr )"	1822:4:60293:60328	816370	0	True				
ANR	819119	CallExpression	"printline ( ""esil"" , ""%s\\n"" , esilstr )"		816370	0					
ANR	819120	Callee	printline		816370	0					
ANR	819121	Identifier	printline		816370	0					
ANR	819122	ArgumentList	"""esil"""		816370	1					
ANR	819123	Argument	"""esil"""		816370	0					
ANR	819124	PrimaryExpression	"""esil"""		816370	0					
ANR	819125	Argument	"""%s\\n"""		816370	1					
ANR	819126	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	819127	Argument	esilstr		816370	2					
ANR	819128	Identifier	esilstr		816370	0					
ANR	819129	IfStatement	if ( hint && hint -> jump != UT64_MAX )		816370	74					
ANR	819130	Condition	hint && hint -> jump != UT64_MAX	1824:7:60342:60371	816370	0	True				
ANR	819131	AndExpression	hint && hint -> jump != UT64_MAX		816370	0		&&			
ANR	819132	Identifier	hint		816370	0					
ANR	819133	EqualityExpression	hint -> jump != UT64_MAX		816370	1		!=			
ANR	819134	PtrMemberAccess	hint -> jump		816370	0					
ANR	819135	Identifier	hint		816370	0					
ANR	819136	Identifier	jump		816370	1					
ANR	819137	Identifier	UT64_MAX		816370	1					
ANR	819138	CompoundStatement		349:39:9914:9914	816370	1					
ANR	819139	ExpressionStatement	op . jump = hint -> jump	1825:4:60380:60400	816370	0	True				
ANR	819140	AssignmentExpression	op . jump = hint -> jump		816370	0		=			
ANR	819141	MemberAccess	op . jump		816370	0					
ANR	819142	Identifier	op		816370	0					
ANR	819143	Identifier	jump		816370	1					
ANR	819144	PtrMemberAccess	hint -> jump		816370	1					
ANR	819145	Identifier	hint		816370	0					
ANR	819146	Identifier	jump		816370	1					
ANR	819147	IfStatement	if ( op . jump != UT64_MAX )		816370	75					
ANR	819148	Condition	op . jump != UT64_MAX	1827:7:60414:60432	816370	0	True				
ANR	819149	EqualityExpression	op . jump != UT64_MAX		816370	0		!=			
ANR	819150	MemberAccess	op . jump		816370	0					
ANR	819151	Identifier	op		816370	0					
ANR	819152	Identifier	jump		816370	1					
ANR	819153	Identifier	UT64_MAX		816370	1					
ANR	819154	CompoundStatement		352:28:9975:9975	816370	1					
ANR	819155	Statement	printline	1828:4:60441:60449	816370	0	True				
ANR	819156	Statement	(	1828:14:60451:60451	816370	1	True				
ANR	819157	Statement	"""jump"""	1828:15:60452:60457	816370	2	True				
ANR	819158	Statement	","	1828:21:60458:60458	816370	3	True				
ANR	819159	Statement	"""0x%08"""	1828:23:60460:60466	816370	4	True				
ANR	819160	Statement	PFMT64x	1828:31:60468:60474	816370	5	True				
ANR	819161	Statement	"""\\n"""	1828:39:60476:60479	816370	6	True				
ANR	819162	Statement	","	1828:43:60480:60480	816370	7	True				
ANR	819163	Statement	op	1828:45:60482:60483	816370	8	True				
ANR	819164	Statement	.	1828:47:60484:60484	816370	9	True				
ANR	819165	Statement	jump	1828:48:60485:60488	816370	10	True				
ANR	819166	Statement	)	1828:52:60489:60489	816370	11	True				
ANR	819167	ExpressionStatement		1828:53:60490:60490	816370	12	True				
ANR	819168	IfStatement	if ( op . direction != 0 )		816370	76					
ANR	819169	Condition	op . direction != 0	1830:7:60504:60520	816370	0	True				
ANR	819170	EqualityExpression	op . direction != 0		816370	0		!=			
ANR	819171	MemberAccess	op . direction		816370	0					
ANR	819172	Identifier	op		816370	0					
ANR	819173	Identifier	direction		816370	1					
ANR	819174	PrimaryExpression	0		816370	1					
ANR	819175	CompoundStatement		356:4:10069:10224	816370	1					
ANR	819176	IdentifierDeclStatement	"const char * dir = op . direction == 1 ? ""read"" : op . direction == 2 ? ""write"" : op . direction == 4 ? ""exec"" : op . direction == 8 ? ""ref"" : ""none"" ;"	1831:4:60529:60684	816370	0	True				
ANR	819177	IdentifierDecl	"* dir = op . direction == 1 ? ""read"" : op . direction == 2 ? ""write"" : op . direction == 4 ? ""exec"" : op . direction == 8 ? ""ref"" : ""none"""		816370	0					
ANR	819178	IdentifierDeclType	const char *		816370	0					
ANR	819179	Identifier	dir		816370	1					
ANR	819180	AssignmentExpression	"* dir = op . direction == 1 ? ""read"" : op . direction == 2 ? ""write"" : op . direction == 4 ? ""exec"" : op . direction == 8 ? ""ref"" : ""none"""		816370	2		=			
ANR	819181	Identifier	dir		816370	0					
ANR	819182	ConditionalExpression	"op . direction == 1 ? ""read"" : op . direction == 2 ? ""write"" : op . direction == 4 ? ""exec"" : op . direction == 8 ? ""ref"" : ""none"""		816370	1					
ANR	819183	Condition	op . direction == 1		816370	0					
ANR	819184	EqualityExpression	op . direction == 1		816370	0		==			
ANR	819185	MemberAccess	op . direction		816370	0					
ANR	819186	Identifier	op		816370	0					
ANR	819187	Identifier	direction		816370	1					
ANR	819188	PrimaryExpression	1		816370	1					
ANR	819189	PrimaryExpression	"""read"""		816370	1					
ANR	819190	ConditionalExpression	"op . direction == 2 ? ""write"" : op . direction == 4 ? ""exec"" : op . direction == 8 ? ""ref"" : ""none"""		816370	2					
ANR	819191	Condition	op . direction == 2		816370	0					
ANR	819192	EqualityExpression	op . direction == 2		816370	0		==			
ANR	819193	MemberAccess	op . direction		816370	0					
ANR	819194	Identifier	op		816370	0					
ANR	819195	Identifier	direction		816370	1					
ANR	819196	PrimaryExpression	2		816370	1					
ANR	819197	PrimaryExpression	"""write"""		816370	1					
ANR	819198	ConditionalExpression	"op . direction == 4 ? ""exec"" : op . direction == 8 ? ""ref"" : ""none"""		816370	2					
ANR	819199	Condition	op . direction == 4		816370	0					
ANR	819200	EqualityExpression	op . direction == 4		816370	0		==			
ANR	819201	MemberAccess	op . direction		816370	0					
ANR	819202	Identifier	op		816370	0					
ANR	819203	Identifier	direction		816370	1					
ANR	819204	PrimaryExpression	4		816370	1					
ANR	819205	PrimaryExpression	"""exec"""		816370	1					
ANR	819206	ConditionalExpression	"op . direction == 8 ? ""ref"" : ""none"""		816370	2					
ANR	819207	Condition	op . direction == 8		816370	0					
ANR	819208	EqualityExpression	op . direction == 8		816370	0		==			
ANR	819209	MemberAccess	op . direction		816370	0					
ANR	819210	Identifier	op		816370	0					
ANR	819211	Identifier	direction		816370	1					
ANR	819212	PrimaryExpression	8		816370	1					
ANR	819213	PrimaryExpression	"""ref"""		816370	1					
ANR	819214	PrimaryExpression	"""none"""		816370	2					
ANR	819215	ExpressionStatement	"printline ( ""direction"" , ""%s\\n"" , dir )"	1835:4:60690:60726	816370	1	True				
ANR	819216	CallExpression	"printline ( ""direction"" , ""%s\\n"" , dir )"		816370	0					
ANR	819217	Callee	printline		816370	0					
ANR	819218	Identifier	printline		816370	0					
ANR	819219	ArgumentList	"""direction"""		816370	1					
ANR	819220	Argument	"""direction"""		816370	0					
ANR	819221	PrimaryExpression	"""direction"""		816370	0					
ANR	819222	Argument	"""%s\\n"""		816370	1					
ANR	819223	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	819224	Argument	dir		816370	2					
ANR	819225	Identifier	dir		816370	0					
ANR	819226	IfStatement	if ( hint && hint -> fail != UT64_MAX )		816370	77					
ANR	819227	Condition	hint && hint -> fail != UT64_MAX	1837:7:60740:60769	816370	0	True				
ANR	819228	AndExpression	hint && hint -> fail != UT64_MAX		816370	0		&&			
ANR	819229	Identifier	hint		816370	0					
ANR	819230	EqualityExpression	hint -> fail != UT64_MAX		816370	1		!=			
ANR	819231	PtrMemberAccess	hint -> fail		816370	0					
ANR	819232	Identifier	hint		816370	0					
ANR	819233	Identifier	fail		816370	1					
ANR	819234	Identifier	UT64_MAX		816370	1					
ANR	819235	CompoundStatement		362:39:10312:10312	816370	1					
ANR	819236	ExpressionStatement	op . fail = hint -> fail	1838:4:60778:60798	816370	0	True				
ANR	819237	AssignmentExpression	op . fail = hint -> fail		816370	0		=			
ANR	819238	MemberAccess	op . fail		816370	0					
ANR	819239	Identifier	op		816370	0					
ANR	819240	Identifier	fail		816370	1					
ANR	819241	PtrMemberAccess	hint -> fail		816370	1					
ANR	819242	Identifier	hint		816370	0					
ANR	819243	Identifier	fail		816370	1					
ANR	819244	IfStatement	if ( op . fail != UT64_MAX )		816370	78					
ANR	819245	Condition	op . fail != UT64_MAX	1840:7:60812:60830	816370	0	True				
ANR	819246	EqualityExpression	op . fail != UT64_MAX		816370	0		!=			
ANR	819247	MemberAccess	op . fail		816370	0					
ANR	819248	Identifier	op		816370	0					
ANR	819249	Identifier	fail		816370	1					
ANR	819250	Identifier	UT64_MAX		816370	1					
ANR	819251	CompoundStatement		365:28:10373:10373	816370	1					
ANR	819252	Statement	printline	1841:4:60839:60847	816370	0	True				
ANR	819253	Statement	(	1841:14:60849:60849	816370	1	True				
ANR	819254	Statement	"""fail"""	1841:15:60850:60855	816370	2	True				
ANR	819255	Statement	","	1841:21:60856:60856	816370	3	True				
ANR	819256	Statement	"""0x%08"""	1841:23:60858:60864	816370	4	True				
ANR	819257	Statement	PFMT64x	1841:31:60866:60872	816370	5	True				
ANR	819258	Statement	"""\\n"""	1841:39:60874:60877	816370	6	True				
ANR	819259	Statement	","	1841:43:60878:60878	816370	7	True				
ANR	819260	Statement	op	1841:45:60880:60881	816370	8	True				
ANR	819261	Statement	.	1841:47:60882:60882	816370	9	True				
ANR	819262	Statement	fail	1841:48:60883:60886	816370	10	True				
ANR	819263	Statement	)	1841:52:60887:60887	816370	11	True				
ANR	819264	ExpressionStatement		1841:53:60888:60888	816370	12	True				
ANR	819265	IfStatement	if ( op . delay )		816370	79					
ANR	819266	Condition	op . delay	1843:7:60902:60909	816370	0	True				
ANR	819267	MemberAccess	op . delay		816370	0					
ANR	819268	Identifier	op		816370	0					
ANR	819269	Identifier	delay		816370	1					
ANR	819270	CompoundStatement		368:17:10452:10452	816370	1					
ANR	819271	ExpressionStatement	"printline ( ""delay"" , ""%d\\n"" , op . delay )"	1844:4:60918:60955	816370	0	True				
ANR	819272	CallExpression	"printline ( ""delay"" , ""%d\\n"" , op . delay )"		816370	0					
ANR	819273	Callee	printline		816370	0					
ANR	819274	Identifier	printline		816370	0					
ANR	819275	ArgumentList	"""delay"""		816370	1					
ANR	819276	Argument	"""delay"""		816370	0					
ANR	819277	PrimaryExpression	"""delay"""		816370	0					
ANR	819278	Argument	"""%d\\n"""		816370	1					
ANR	819279	PrimaryExpression	"""%d\\n"""		816370	0					
ANR	819280	Argument	op . delay		816370	2					
ANR	819281	MemberAccess	op . delay		816370	0					
ANR	819282	Identifier	op		816370	0					
ANR	819283	Identifier	delay		816370	1					
ANR	819284	CompoundStatement		372:4:10511:10599	816370	80					
ANR	819285	IdentifierDeclStatement	const char * arg = ( op . type & R_ANAL_OP_TYPE_COND ) ? r_anal_cond_tostring ( op . cond ) : NULL ;	1847:4:60971:61059	816370	0	True				
ANR	819286	IdentifierDecl	* arg = ( op . type & R_ANAL_OP_TYPE_COND ) ? r_anal_cond_tostring ( op . cond ) : NULL		816370	0					
ANR	819287	IdentifierDeclType	const char *		816370	0					
ANR	819288	Identifier	arg		816370	1					
ANR	819289	AssignmentExpression	* arg = ( op . type & R_ANAL_OP_TYPE_COND ) ? r_anal_cond_tostring ( op . cond ) : NULL		816370	2		=			
ANR	819290	Identifier	arg		816370	0					
ANR	819291	ConditionalExpression	( op . type & R_ANAL_OP_TYPE_COND ) ? r_anal_cond_tostring ( op . cond ) : NULL		816370	1					
ANR	819292	Condition	op . type & R_ANAL_OP_TYPE_COND		816370	0					
ANR	819293	BitAndExpression	op . type & R_ANAL_OP_TYPE_COND		816370	0		&			
ANR	819294	MemberAccess	op . type		816370	0					
ANR	819295	Identifier	op		816370	0					
ANR	819296	Identifier	type		816370	1					
ANR	819297	Identifier	R_ANAL_OP_TYPE_COND		816370	1					
ANR	819298	CallExpression	r_anal_cond_tostring ( op . cond )		816370	1					
ANR	819299	Callee	r_anal_cond_tostring		816370	0					
ANR	819300	Identifier	r_anal_cond_tostring		816370	0					
ANR	819301	ArgumentList	op . cond		816370	1					
ANR	819302	Argument	op . cond		816370	0					
ANR	819303	MemberAccess	op . cond		816370	0					
ANR	819304	Identifier	op		816370	0					
ANR	819305	Identifier	cond		816370	1					
ANR	819306	Identifier	NULL		816370	2					
ANR	819307	IfStatement	if ( arg )		816370	1					
ANR	819308	Condition	arg	1848:8:61069:61071	816370	0	True				
ANR	819309	Identifier	arg		816370	0					
ANR	819310	CompoundStatement		373:13:10614:10614	816370	1					
ANR	819311	ExpressionStatement	"printline ( ""cond"" , ""%s\\n"" , arg )"	1849:5:61081:61112	816370	0	True				
ANR	819312	CallExpression	"printline ( ""cond"" , ""%s\\n"" , arg )"		816370	0					
ANR	819313	Callee	printline		816370	0					
ANR	819314	Identifier	printline		816370	0					
ANR	819315	ArgumentList	"""cond"""		816370	1					
ANR	819316	Argument	"""cond"""		816370	0					
ANR	819317	PrimaryExpression	"""cond"""		816370	0					
ANR	819318	Argument	"""%s\\n"""		816370	1					
ANR	819319	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	819320	Argument	arg		816370	2					
ANR	819321	Identifier	arg		816370	0					
ANR	819322	ExpressionStatement	"printline ( ""family"" , ""%s\\n"" , r_anal_op_family_to_string ( op . family ) )"	1852:3:61128:61196	816370	81	True				
ANR	819323	CallExpression	"printline ( ""family"" , ""%s\\n"" , r_anal_op_family_to_string ( op . family ) )"		816370	0					
ANR	819324	Callee	printline		816370	0					
ANR	819325	Identifier	printline		816370	0					
ANR	819326	ArgumentList	"""family"""		816370	1					
ANR	819327	Argument	"""family"""		816370	0					
ANR	819328	PrimaryExpression	"""family"""		816370	0					
ANR	819329	Argument	"""%s\\n"""		816370	1					
ANR	819330	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	819331	Argument	r_anal_op_family_to_string ( op . family )		816370	2					
ANR	819332	CallExpression	r_anal_op_family_to_string ( op . family )		816370	0					
ANR	819333	Callee	r_anal_op_family_to_string		816370	0					
ANR	819334	Identifier	r_anal_op_family_to_string		816370	0					
ANR	819335	ArgumentList	op . family		816370	1					
ANR	819336	Argument	op . family		816370	0					
ANR	819337	MemberAccess	op . family		816370	0					
ANR	819338	Identifier	op		816370	0					
ANR	819339	Identifier	family		816370	1					
ANR	819340	IfStatement	if ( op . stackop != R_ANAL_STACK_NULL )		816370	82					
ANR	819341	Condition	op . stackop != R_ANAL_STACK_NULL	1853:7:61205:61235	816370	0	True				
ANR	819342	EqualityExpression	op . stackop != R_ANAL_STACK_NULL		816370	0		!=			
ANR	819343	MemberAccess	op . stackop		816370	0					
ANR	819344	Identifier	op		816370	0					
ANR	819345	Identifier	stackop		816370	1					
ANR	819346	Identifier	R_ANAL_STACK_NULL		816370	1					
ANR	819347	CompoundStatement		378:40:10778:10778	816370	1					
ANR	819348	ExpressionStatement	"printline ( ""stackop"" , ""%s\\n"" , r_anal_stackop_tostring ( op . stackop ) )"	1854:4:61244:61311	816370	0	True				
ANR	819349	CallExpression	"printline ( ""stackop"" , ""%s\\n"" , r_anal_stackop_tostring ( op . stackop ) )"		816370	0					
ANR	819350	Callee	printline		816370	0					
ANR	819351	Identifier	printline		816370	0					
ANR	819352	ArgumentList	"""stackop"""		816370	1					
ANR	819353	Argument	"""stackop"""		816370	0					
ANR	819354	PrimaryExpression	"""stackop"""		816370	0					
ANR	819355	Argument	"""%s\\n"""		816370	1					
ANR	819356	PrimaryExpression	"""%s\\n"""		816370	0					
ANR	819357	Argument	r_anal_stackop_tostring ( op . stackop )		816370	2					
ANR	819358	CallExpression	r_anal_stackop_tostring ( op . stackop )		816370	0					
ANR	819359	Callee	r_anal_stackop_tostring		816370	0					
ANR	819360	Identifier	r_anal_stackop_tostring		816370	0					
ANR	819361	ArgumentList	op . stackop		816370	1					
ANR	819362	Argument	op . stackop		816370	0					
ANR	819363	MemberAccess	op . stackop		816370	0					
ANR	819364	Identifier	op		816370	0					
ANR	819365	Identifier	stackop		816370	1					
ANR	819366	IfStatement	if ( op . stackptr )		816370	83					
ANR	819367	Condition	op . stackptr	1856:7:61325:61335	816370	0	True				
ANR	819368	MemberAccess	op . stackptr		816370	0					
ANR	819369	Identifier	op		816370	0					
ANR	819370	Identifier	stackptr		816370	1					
ANR	819371	CompoundStatement		381:20:10878:10878	816370	1					
ANR	819372	Statement	printline	1857:4:61344:61352	816370	0	True				
ANR	819373	Statement	(	1857:14:61354:61354	816370	1	True				
ANR	819374	Statement	"""stackptr"""	1857:15:61355:61364	816370	2	True				
ANR	819375	Statement	","	1857:25:61365:61365	816370	3	True				
ANR	819376	Statement	"""%"""	1857:27:61367:61369	816370	4	True				
ANR	819377	Statement	PFMT64u	1857:30:61370:61376	816370	5	True				
ANR	819378	Statement	"""\\n"""	1857:37:61377:61380	816370	6	True				
ANR	819379	Statement	","	1857:41:61381:61381	816370	7	True				
ANR	819380	Statement	op	1857:43:61383:61384	816370	8	True				
ANR	819381	Statement	.	1857:45:61385:61385	816370	9	True				
ANR	819382	Statement	stackptr	1857:46:61386:61393	816370	10	True				
ANR	819383	Statement	)	1857:54:61394:61394	816370	11	True				
ANR	819384	ExpressionStatement		1857:55:61395:61395	816370	12	True				
ANR	819385	ExpressionStatement	free ( mnem )	1862:2:61490:61501	816370	13	True				
ANR	819386	CallExpression	free ( mnem )		816370	0					
ANR	819387	Callee	free		816370	0					
ANR	819388	Identifier	free		816370	0					
ANR	819389	ArgumentList	mnem		816370	1					
ANR	819390	Argument	mnem		816370	0					
ANR	819391	Identifier	mnem		816370	0					
ANR	819392	ExpressionStatement	r_anal_hint_free ( hint )	1863:2:61505:61528	816370	14	True				
ANR	819393	CallExpression	r_anal_hint_free ( hint )		816370	0					
ANR	819394	Callee	r_anal_hint_free		816370	0					
ANR	819395	Identifier	r_anal_hint_free		816370	0					
ANR	819396	ArgumentList	hint		816370	1					
ANR	819397	Argument	hint		816370	0					
ANR	819398	Identifier	hint		816370	0					
ANR	819399	ExpressionStatement	r_anal_op_fini ( & op )	1864:2:61532:61552	816370	15	True				
ANR	819400	CallExpression	r_anal_op_fini ( & op )		816370	0					
ANR	819401	Callee	r_anal_op_fini		816370	0					
ANR	819402	Identifier	r_anal_op_fini		816370	0					
ANR	819403	ArgumentList	& op		816370	1					
ANR	819404	Argument	& op		816370	0					
ANR	819405	UnaryOperationExpression	& op		816370	0					
ANR	819406	UnaryOperator	&		816370	0					
ANR	819407	Identifier	op		816370	1					
ANR	819408	ExpressionStatement	r_anal_op_fini ( & op )	1866:1:61558:61578	816370	22	True				
ANR	819409	CallExpression	r_anal_op_fini ( & op )		816370	0					
ANR	819410	Callee	r_anal_op_fini		816370	0					
ANR	819411	Identifier	r_anal_op_fini		816370	0					
ANR	819412	ArgumentList	& op		816370	1					
ANR	819413	Argument	& op		816370	0					
ANR	819414	UnaryOperationExpression	& op		816370	0					
ANR	819415	UnaryOperator	&		816370	0					
ANR	819416	Identifier	op		816370	1					
ANR	819417	IfStatement	if ( fmt == 's' )		816370	23					
ANR	819418	Condition	fmt == 's'	1867:5:61585:61594	816370	0	True				
ANR	819419	EqualityExpression	fmt == 's'		816370	0		==			
ANR	819420	Identifier	fmt		816370	0					
ANR	819421	PrimaryExpression	's'		816370	1					
ANR	819422	CompoundStatement		392:17:11137:11137	816370	1					
ANR	819423	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , totalsize )"	1868:2:61601:61634	816370	0	True				
ANR	819424	CallExpression	"r_cons_printf ( ""%d\\n"" , totalsize )"		816370	0					
ANR	819425	Callee	r_cons_printf		816370	0					
ANR	819426	Identifier	r_cons_printf		816370	0					
ANR	819427	ArgumentList	"""%d\\n"""		816370	1					
ANR	819428	Argument	"""%d\\n"""		816370	0					
ANR	819429	PrimaryExpression	"""%d\\n"""		816370	0					
ANR	819430	Argument	totalsize		816370	1					
ANR	819431	Identifier	totalsize		816370	0					
ANR	819432	ElseStatement	else		816370	0					
ANR	819433	IfStatement	if ( fmt == 'j' )		816370	0					
ANR	819434	Condition	fmt == 'j'	1869:12:61648:61657	816370	0	True				
ANR	819435	EqualityExpression	fmt == 'j'		816370	0		==			
ANR	819436	Identifier	fmt		816370	0					
ANR	819437	PrimaryExpression	'j'		816370	1					
ANR	819438	CompoundStatement		394:24:11200:11200	816370	1					
ANR	819439	ExpressionStatement	pj_end ( pj )	1870:2:61664:61675	816370	0	True				
ANR	819440	CallExpression	pj_end ( pj )		816370	0					
ANR	819441	Callee	pj_end		816370	0					
ANR	819442	Identifier	pj_end		816370	0					
ANR	819443	ArgumentList	pj		816370	1					
ANR	819444	Argument	pj		816370	0					
ANR	819445	Identifier	pj		816370	0					
ANR	819446	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	1871:2:61679:61710	816370	1	True				
ANR	819447	CallExpression	r_cons_println ( pj_string ( pj ) )		816370	0					
ANR	819448	Callee	r_cons_println		816370	0					
ANR	819449	Identifier	r_cons_println		816370	0					
ANR	819450	ArgumentList	pj_string ( pj )		816370	1					
ANR	819451	Argument	pj_string ( pj )		816370	0					
ANR	819452	CallExpression	pj_string ( pj )		816370	0					
ANR	819453	Callee	pj_string		816370	0					
ANR	819454	Identifier	pj_string		816370	0					
ANR	819455	ArgumentList	pj		816370	1					
ANR	819456	Argument	pj		816370	0					
ANR	819457	Identifier	pj		816370	0					
ANR	819458	ExpressionStatement	pj_free ( pj )	1872:2:61714:61726	816370	2	True				
ANR	819459	CallExpression	pj_free ( pj )		816370	0					
ANR	819460	Callee	pj_free		816370	0					
ANR	819461	Identifier	pj_free		816370	0					
ANR	819462	ArgumentList	pj		816370	1					
ANR	819463	Argument	pj		816370	0					
ANR	819464	Identifier	pj		816370	0					
ANR	819465	ExpressionStatement	r_anal_esil_free ( esil )	1874:1:61732:61755	816370	24	True				
ANR	819466	CallExpression	r_anal_esil_free ( esil )		816370	0					
ANR	819467	Callee	r_anal_esil_free		816370	0					
ANR	819468	Identifier	r_anal_esil_free		816370	0					
ANR	819469	ArgumentList	esil		816370	1					
ANR	819470	Argument	esil		816370	0					
ANR	819471	Identifier	esil		816370	0					
ANR	819472	ReturnType	static void		816370	1					
ANR	819473	Identifier	core_anal_bytes		816370	2					
ANR	819474	ParameterList	"RCore * core , const ut8 * buf , int len , int nops , int fmt"		816370	3					
ANR	819475	Parameter	RCore * core	1476:28:50402:50412	816370	0	True				
ANR	819476	ParameterType	RCore *		816370	0					
ANR	819477	Identifier	core		816370	1					
ANR	819478	Parameter	const ut8 * buf	1476:41:50415:50428	816370	1	True				
ANR	819479	ParameterType	const ut8 *		816370	0					
ANR	819480	Identifier	buf		816370	1					
ANR	819481	Parameter	int len	1476:57:50431:50437	816370	2	True				
ANR	819482	ParameterType	int		816370	0					
ANR	819483	Identifier	len		816370	1					
ANR	819484	Parameter	int nops	1476:66:50440:50447	816370	3	True				
ANR	819485	ParameterType	int		816370	0					
ANR	819486	Identifier	nops		816370	1					
ANR	819487	Parameter	int fmt	1476:76:50450:50456	816370	4	True				
ANR	819488	ParameterType	int		816370	0					
ANR	819489	Identifier	fmt		816370	1					
ANR	819490	CFGEntryNode	ENTRY		816370		True				
ANR	819491	CFGExitNode	EXIT		816370		True				
ANR	819492	Symbol	* sp		816370						
ANR	819493	Symbol	romem		816370						
ANR	819494	Symbol	op . cycles		816370						
ANR	819495	Symbol	op . type2		816370						
ANR	819496	Symbol	r_hex_bin2strdup		816370						
ANR	819497	Symbol	minsz		816370						
ANR	819498	Symbol	core -> offset		816370						
ANR	819499	Symbol	strchr		816370						
ANR	819500	Symbol	& op		816370						
ANR	819501	Symbol	asmop		816370						
ANR	819502	Symbol	addrsize		816370						
ANR	819503	Symbol	len		816370						
ANR	819504	Symbol	stats		816370						
ANR	819505	Symbol	pseudo		816370						
ANR	819506	Symbol	r_anal_op		816370						
ANR	819507	Symbol	core -> blocksize		816370						
ANR	819508	Symbol	& op . esil		816370						
ANR	819509	Symbol	hint -> esil		816370						
ANR	819510	Symbol	* buf		816370						
ANR	819511	Symbol	* hint		816370						
ANR	819512	Symbol	* jesil		816370						
ANR	819513	Symbol	& op . opex		816370						
ANR	819514	Symbol	* esilstr		816370						
ANR	819515	Symbol	core -> print -> big_endian		816370						
ANR	819516	Symbol	opname		816370						
ANR	819517	Symbol	iotrap		816370						
ANR	819518	Symbol	op . reg		816370						
ANR	819519	Symbol	r_io_read_i		816370						
ANR	819520	Symbol	* pseudo		816370						
ANR	819521	Symbol	core -> parser -> relsub		816370						
ANR	819522	Symbol	core -> parser		816370						
ANR	819523	Symbol	core -> cons -> context -> pal		816370						
ANR	819524	Symbol	* * * core		816370						
ANR	819525	Symbol	op . stackptr		816370						
ANR	819526	Symbol	size		816370						
ANR	819527	Symbol	op . ireg		816370						
ANR	819528	Symbol	r_config_get_i		816370						
ANR	819529	Symbol	mnem		816370						
ANR	819530	Symbol	core -> print -> flags		816370						
ANR	819531	Symbol	core -> cons -> context		816370						
ANR	819532	Symbol	r_anal_stackop_tostring		816370						
ANR	819533	Symbol	be		816370						
ANR	819534	Symbol	* core -> cons		816370						
ANR	819535	Symbol	* core		816370						
ANR	819536	Symbol	core -> assembler		816370						
ANR	819537	Symbol	op . delay		816370						
ANR	819538	Symbol	hint -> jump		816370						
ANR	819539	Symbol	esilstr		816370						
ANR	819540	Symbol	core -> anal		816370						
ANR	819541	Symbol	op . refptr		816370						
ANR	819542	Symbol	hint -> opcode		816370						
ANR	819543	Symbol	core -> cons		816370						
ANR	819544	Symbol	core -> io		816370						
ANR	819545	Symbol	datatype		816370						
ANR	819546	Symbol	arg		816370						
ANR	819547	Symbol	R_PRINT_FLAGS_COLOR		816370						
ANR	819548	Symbol	R_ANAL_STACK_NULL		816370						
ANR	819549	Symbol	op . family		816370						
ANR	819550	Symbol	sp		816370						
ANR	819551	Symbol	op . stackop		816370						
ANR	819552	Symbol	r_anal_op_family_to_string		816370						
ANR	819553	Symbol	d		816370						
ANR	819554	Symbol	op . type		816370						
ANR	819555	Symbol	R_STRBUF_SAFEGET		816370						
ANR	819556	Symbol	ch		816370						
ANR	819557	Symbol	i		816370						
ANR	819558	Symbol	j		816370						
ANR	819559	Symbol	core -> flags		816370						
ANR	819560	Symbol	R_MIN		816370						
ANR	819561	Symbol	k		816370						
ANR	819562	Symbol	p		816370						
ANR	819563	Symbol	buf		816370						
ANR	819564	Symbol	* core -> print		816370						
ANR	819565	Symbol	op . ptr		816370						
ANR	819566	Symbol	hint -> fail		816370						
ANR	819567	Symbol	& killme		816370						
ANR	819568	Symbol	& asmop		816370						
ANR	819569	Symbol	r_asm_describe		816370						
ANR	819570	Symbol	asmop . size		816370						
ANR	819571	Symbol	R_MAX		816370						
ANR	819572	Symbol	r_anal_esil_new		816370						
ANR	819573	Symbol	esil		816370						
ANR	819574	Symbol	* opexstr		816370						
ANR	819575	Symbol	op . failcycles		816370						
ANR	819576	Symbol	pj_string		816370						
ANR	819577	Symbol	stacksize		816370						
ANR	819578	Symbol	op . fail		816370						
ANR	819579	Symbol	op . prefix		816370						
ANR	819580	Symbol	R_ANAL_OP_TYPE_COND		816370						
ANR	819581	Symbol	fmt		816370						
ANR	819582	Symbol	dir		816370						
ANR	819583	Symbol	disasm		816370						
ANR	819584	Symbol	strlen		816370						
ANR	819585	Symbol	* core -> parser		816370						
ANR	819586	Symbol	core -> cons -> context -> pal . label		816370						
ANR	819587	Symbol	op . cond		816370						
ANR	819588	Symbol	op . jump		816370						
ANR	819589	Symbol	core -> parser -> relsub_addr		816370						
ANR	819590	Symbol	* idx		816370						
ANR	819591	Symbol	r_anal_datatype_to_string		816370						
ANR	819592	Symbol	hint -> size		816370						
ANR	819593	Symbol	r_anal_mask		816370						
ANR	819594	Symbol	ret		816370						
ANR	819595	Symbol	op . val		816370						
ANR	819596	Symbol	strcmp		816370						
ANR	819597	Symbol	NULL		816370						
ANR	819598	Symbol	op . datatype		816370						
ANR	819599	Symbol	* * core -> cons		816370						
ANR	819600	Symbol	* strsub		816370						
ANR	819601	Symbol	use_color		816370						
ANR	819602	Symbol	core		816370						
ANR	819603	Symbol	nops		816370						
ANR	819604	Symbol	hint		816370						
ANR	819605	Symbol	* disasm		816370						
ANR	819606	Symbol	strsub		816370						
ANR	819607	Symbol	core -> print		816370						
ANR	819608	Symbol	idx		816370						
ANR	819609	Symbol	op . size		816370						
ANR	819610	Symbol	jesil		816370						
ANR	819611	Symbol	r_anal_cond_tostring		816370						
ANR	819612	Symbol	R_ANAL_OP_MASK_ESIL		816370						
ANR	819613	Symbol	R_ANAL_OP_MASK_OPEX		816370						
ANR	819614	Symbol	p1		816370						
ANR	819615	Symbol	color		816370						
ANR	819616	Symbol	r_anal_optype_to_string		816370						
ANR	819617	Symbol	calloc		816370						
ANR	819618	Symbol	r_asm_op_get_asm		816370						
ANR	819619	Symbol	maskstr		816370						
ANR	819620	Symbol	* core -> cons -> context		816370						
ANR	819621	Symbol	op . direction		816370						
ANR	819622	Symbol	addr		816370						
ANR	819623	Symbol	UT64_MAX		816370						
ANR	819624	Symbol	* * core		816370						
ANR	819625	Symbol	mask		816370						
ANR	819626	Symbol	core -> config		816370						
ANR	819627	Symbol	totalsize		816370						
ANR	819628	Symbol	op . sign		816370						
ANR	819629	Symbol	op		816370						
ANR	819630	Symbol	r_str_bool		816370						
ANR	819631	Symbol	killme		816370						
ANR	819632	Symbol	op . id		816370						
ANR	819633	Symbol	opexstr		816370						
ANR	819634	Symbol	r_anal_hint_get		816370						
ANR	819635	Symbol	* d		816370						
ANR	819636	Symbol	* i		816370						
ANR	819637	Symbol	op . scale		816370						
ANR	819638	Symbol	* j		816370						
ANR	819639	Symbol	R_ANAL_OP_MASK_HINT		816370						
ANR	819640	Symbol	pj		816370						
ANR	819641	Symbol	pj_new		816370						
ANR	819642	Symbol	strdup		816370						
ANR	819643	Function	bb_cmp	1877:0:61760:61893							
ANR	819644	FunctionDef	"bb_cmp (const void * a , const void * b)"		819643	0					
ANR	819645	CompoundStatement		1877:48:61808:61893	819643	0					
ANR	819646	IdentifierDeclStatement	const RAnalBlock * ba = a ;	1878:1:61811:61835	819643	0	True				
ANR	819647	IdentifierDecl	* ba = a		819643	0					
ANR	819648	IdentifierDeclType	const RAnalBlock *		819643	0					
ANR	819649	Identifier	ba		819643	1					
ANR	819650	AssignmentExpression	* ba = a		819643	2		=			
ANR	819651	Identifier	a		819643	0					
ANR	819652	Identifier	a		819643	1					
ANR	819653	IdentifierDeclStatement	const RAnalBlock * bb = b ;	1879:1:61838:61862	819643	1	True				
ANR	819654	IdentifierDecl	* bb = b		819643	0					
ANR	819655	IdentifierDeclType	const RAnalBlock *		819643	0					
ANR	819656	Identifier	bb		819643	1					
ANR	819657	AssignmentExpression	* bb = b		819643	2		=			
ANR	819658	Identifier	b		819643	0					
ANR	819659	Identifier	b		819643	1					
ANR	819660	ReturnStatement	return ba -> addr - bb -> addr ;	1880:1:61865:61891	819643	2	True				
ANR	819661	AdditiveExpression	ba -> addr - bb -> addr		819643	0		-			
ANR	819662	PtrMemberAccess	ba -> addr		819643	0					
ANR	819663	Identifier	ba		819643	0					
ANR	819664	Identifier	addr		819643	1					
ANR	819665	PtrMemberAccess	bb -> addr		819643	1					
ANR	819666	Identifier	bb		819643	0					
ANR	819667	Identifier	addr		819643	1					
ANR	819668	ReturnType	static int		819643	1					
ANR	819669	Identifier	bb_cmp		819643	2					
ANR	819670	ParameterList	"const void * a , const void * b"		819643	3					
ANR	819671	Parameter	const void * a	1877:18:61778:61790	819643	0	True				
ANR	819672	ParameterType	const void *		819643	0					
ANR	819673	Identifier	a		819643	1					
ANR	819674	Parameter	const void * b	1877:33:61793:61805	819643	1	True				
ANR	819675	ParameterType	const void *		819643	0					
ANR	819676	Identifier	b		819643	1					
ANR	819677	CFGEntryNode	ENTRY		819643		True				
ANR	819678	CFGExitNode	EXIT		819643		True				
ANR	819679	Symbol	bb		819643						
ANR	819680	Symbol	a		819643						
ANR	819681	Symbol	b		819643						
ANR	819682	Symbol	* bb		819643						
ANR	819683	Symbol	* ba		819643						
ANR	819684	Symbol	ba -> addr		819643						
ANR	819685	Symbol	bb -> addr		819643						
ANR	819686	Symbol	ba		819643						
ANR	819687	Function	casecmp	1883:0:61896:62034							
ANR	819688	FunctionDef	"casecmp (const void * _a , const void * _b)"		819687	0					
ANR	819689	CompoundStatement		1883:52:61948:62034	819687	0					
ANR	819690	IdentifierDeclStatement	const RAnalCaseOp * a = _a ;	1884:1:61951:61976	819687	0	True				
ANR	819691	IdentifierDecl	* a = _a		819687	0					
ANR	819692	IdentifierDeclType	const RAnalCaseOp *		819687	0					
ANR	819693	Identifier	a		819687	1					
ANR	819694	AssignmentExpression	* a = _a		819687	2		=			
ANR	819695	Identifier	_a		819687	0					
ANR	819696	Identifier	_a		819687	1					
ANR	819697	IdentifierDeclStatement	const RAnalCaseOp * b = _b ;	1885:1:61979:62004	819687	1	True				
ANR	819698	IdentifierDecl	* b = _b		819687	0					
ANR	819699	IdentifierDeclType	const RAnalCaseOp *		819687	0					
ANR	819700	Identifier	b		819687	1					
ANR	819701	AssignmentExpression	* b = _b		819687	2		=			
ANR	819702	Identifier	_b		819687	0					
ANR	819703	Identifier	_b		819687	1					
ANR	819704	ReturnStatement	return a -> addr != b -> addr ;	1886:1:62007:62032	819687	2	True				
ANR	819705	EqualityExpression	a -> addr != b -> addr		819687	0		!=			
ANR	819706	PtrMemberAccess	a -> addr		819687	0					
ANR	819707	Identifier	a		819687	0					
ANR	819708	Identifier	addr		819687	1					
ANR	819709	PtrMemberAccess	b -> addr		819687	1					
ANR	819710	Identifier	b		819687	0					
ANR	819711	Identifier	addr		819687	1					
ANR	819712	ReturnType	static int		819687	1					
ANR	819713	Identifier	casecmp		819687	2					
ANR	819714	ParameterList	"const void * _a , const void * _b"		819687	3					
ANR	819715	Parameter	const void * _a	1883:19:61915:61928	819687	0	True				
ANR	819716	ParameterType	const void *		819687	0					
ANR	819717	Identifier	_a		819687	1					
ANR	819718	Parameter	const void * _b	1883:35:61931:61945	819687	1	True				
ANR	819719	ParameterType	const void *		819687	0					
ANR	819720	Identifier	_b		819687	1					
ANR	819721	CFGEntryNode	ENTRY		819687		True				
ANR	819722	CFGExitNode	EXIT		819687		True				
ANR	819723	Symbol	a		819687						
ANR	819724	Symbol	_a		819687						
ANR	819725	Symbol	b		819687						
ANR	819726	Symbol	_b		819687						
ANR	819727	Symbol	a -> addr		819687						
ANR	819728	Symbol	* a		819687						
ANR	819729	Symbol	* b		819687						
ANR	819730	Symbol	b -> addr		819687						
ANR	819731	Function	anal_fcn_list_bb	1889:0:62037:67499							
ANR	819732	FunctionDef	"anal_fcn_list_bb (RCore * core , const char * input , bool one)"		819731	0					
ANR	819733	CompoundStatement		1889:71:62108:67499	819731	0					
ANR	819734	IdentifierDeclStatement	RDebugTracepoint * tp = NULL ;	1890:1:62111:62138	819731	0	True				
ANR	819735	IdentifierDecl	* tp = NULL		819731	0					
ANR	819736	IdentifierDeclType	RDebugTracepoint *		819731	0					
ANR	819737	Identifier	tp		819731	1					
ANR	819738	AssignmentExpression	* tp = NULL		819731	2		=			
ANR	819739	Identifier	NULL		819731	0					
ANR	819740	Identifier	NULL		819731	1					
ANR	819741	IdentifierDeclStatement	RListIter * iter ;	1891:1:62141:62156	819731	1	True				
ANR	819742	IdentifierDecl	* iter		819731	0					
ANR	819743	IdentifierDeclType	RListIter *		819731	0					
ANR	819744	Identifier	iter		819731	1					
ANR	819745	IdentifierDeclStatement	RAnalBlock * b ;	1892:1:62159:62172	819731	2	True				
ANR	819746	IdentifierDecl	* b		819731	0					
ANR	819747	IdentifierDeclType	RAnalBlock *		819731	0					
ANR	819748	Identifier	b		819731	1					
ANR	819749	IdentifierDeclStatement	int mode = 0 ;	1893:1:62175:62187	819731	3	True				
ANR	819750	IdentifierDecl	mode = 0		819731	0					
ANR	819751	IdentifierDeclType	int		819731	0					
ANR	819752	Identifier	mode		819731	1					
ANR	819753	AssignmentExpression	mode = 0		819731	2		=			
ANR	819754	Identifier	mode		819731	0					
ANR	819755	PrimaryExpression	0		819731	1					
ANR	819756	IdentifierDeclStatement	"ut64 addr , bbaddr = UT64_MAX ;"	1894:1:62190:62218	819731	4	True				
ANR	819757	IdentifierDecl	addr		819731	0					
ANR	819758	IdentifierDeclType	ut64		819731	0					
ANR	819759	Identifier	addr		819731	1					
ANR	819760	IdentifierDecl	bbaddr = UT64_MAX		819731	1					
ANR	819761	IdentifierDeclType	ut64		819731	0					
ANR	819762	Identifier	bbaddr		819731	1					
ANR	819763	AssignmentExpression	bbaddr = UT64_MAX		819731	2		=			
ANR	819764	Identifier	UT64_MAX		819731	0					
ANR	819765	Identifier	UT64_MAX		819731	1					
ANR	819766	IdentifierDeclStatement	PJ * pj = NULL ;	1895:1:62221:62234	819731	5	True				
ANR	819767	IdentifierDecl	* pj = NULL		819731	0					
ANR	819768	IdentifierDeclType	PJ *		819731	0					
ANR	819769	Identifier	pj		819731	1					
ANR	819770	AssignmentExpression	* pj = NULL		819731	2		=			
ANR	819771	Identifier	NULL		819731	0					
ANR	819772	Identifier	NULL		819731	1					
ANR	819773	IfStatement	if ( * input == '.' )		819731	6					
ANR	819774	Condition	* input == '.'	1897:5:62242:62254	819731	0	True				
ANR	819775	EqualityExpression	* input == '.'		819731	0		==			
ANR	819776	UnaryOperationExpression	* input		819731	0					
ANR	819777	UnaryOperator	*		819731	0					
ANR	819778	Identifier	input		819731	1					
ANR	819779	PrimaryExpression	'.'		819731	1					
ANR	819780	CompoundStatement		9:20:148:148	819731	1					
ANR	819781	ExpressionStatement	one = true	1898:2:62261:62271	819731	0	True				
ANR	819782	AssignmentExpression	one = true		819731	0		=			
ANR	819783	Identifier	one		819731	0					
ANR	819784	Identifier	true		819731	1					
ANR	819785	ExpressionStatement	input ++	1899:2:62275:62282	819731	1	True				
ANR	819786	PostIncDecOperationExpression	input ++		819731	0					
ANR	819787	Identifier	input		819731	0					
ANR	819788	IncDec	++		819731	1					
ANR	819789	IfStatement	if ( * input )		819731	7					
ANR	819790	Condition	* input	1901:5:62292:62297	819731	0	True				
ANR	819791	UnaryOperationExpression	* input		819731	0					
ANR	819792	UnaryOperator	*		819731	0					
ANR	819793	Identifier	input		819731	1					
ANR	819794	CompoundStatement		13:13:191:191	819731	1					
ANR	819795	ExpressionStatement	mode = * input	1902:2:62304:62317	819731	0	True				
ANR	819796	AssignmentExpression	mode = * input		819731	0		=			
ANR	819797	Identifier	mode		819731	0					
ANR	819798	UnaryOperationExpression	* input		819731	1					
ANR	819799	UnaryOperator	*		819731	0					
ANR	819800	Identifier	input		819731	1					
ANR	819801	ExpressionStatement	input ++	1903:2:62321:62328	819731	1	True				
ANR	819802	PostIncDecOperationExpression	input ++		819731	0					
ANR	819803	Identifier	input		819731	0					
ANR	819804	IncDec	++		819731	1					
ANR	819805	IfStatement	if ( * input == '.' )		819731	8					
ANR	819806	Condition	* input == '.'	1905:5:62338:62350	819731	0	True				
ANR	819807	EqualityExpression	* input == '.'		819731	0		==			
ANR	819808	UnaryOperationExpression	* input		819731	0					
ANR	819809	UnaryOperator	*		819731	0					
ANR	819810	Identifier	input		819731	1					
ANR	819811	PrimaryExpression	'.'		819731	1					
ANR	819812	CompoundStatement		17:20:244:244	819731	1					
ANR	819813	ExpressionStatement	one = true	1906:2:62357:62367	819731	0	True				
ANR	819814	AssignmentExpression	one = true		819731	0		=			
ANR	819815	Identifier	one		819731	0					
ANR	819816	Identifier	true		819731	1					
ANR	819817	ExpressionStatement	input ++	1907:2:62371:62378	819731	1	True				
ANR	819818	PostIncDecOperationExpression	input ++		819731	0					
ANR	819819	Identifier	input		819731	0					
ANR	819820	IncDec	++		819731	1					
ANR	819821	IfStatement	if ( input && * input )		819731	9					
ANR	819822	Condition	input && * input	1909:5:62388:62402	819731	0	True				
ANR	819823	AndExpression	input && * input		819731	0		&&			
ANR	819824	Identifier	input		819731	0					
ANR	819825	UnaryOperationExpression	* input		819731	1					
ANR	819826	UnaryOperator	*		819731	0					
ANR	819827	Identifier	input		819731	1					
ANR	819828	CompoundStatement		21:22:296:296	819731	1					
ANR	819829	ExpressionStatement	"addr = bbaddr = r_num_math ( core -> num , input )"	1910:2:62409:62454	819731	0	True				
ANR	819830	AssignmentExpression	"addr = bbaddr = r_num_math ( core -> num , input )"		819731	0		=			
ANR	819831	Identifier	addr		819731	0					
ANR	819832	AssignmentExpression	"bbaddr = r_num_math ( core -> num , input )"		819731	1		=			
ANR	819833	Identifier	bbaddr		819731	0					
ANR	819834	CallExpression	"r_num_math ( core -> num , input )"		819731	1					
ANR	819835	Callee	r_num_math		819731	0					
ANR	819836	Identifier	r_num_math		819731	0					
ANR	819837	ArgumentList	core -> num		819731	1					
ANR	819838	Argument	core -> num		819731	0					
ANR	819839	PtrMemberAccess	core -> num		819731	0					
ANR	819840	Identifier	core		819731	0					
ANR	819841	Identifier	num		819731	1					
ANR	819842	Argument	input		819731	1					
ANR	819843	Identifier	input		819731	0					
ANR	819844	ElseStatement	else		819731	0					
ANR	819845	CompoundStatement		23:8:355:355	819731	0					
ANR	819846	ExpressionStatement	addr = core -> offset	1912:2:62468:62487	819731	0	True				
ANR	819847	AssignmentExpression	addr = core -> offset		819731	0		=			
ANR	819848	Identifier	addr		819731	0					
ANR	819849	PtrMemberAccess	core -> offset		819731	1					
ANR	819850	Identifier	core		819731	0					
ANR	819851	Identifier	offset		819731	1					
ANR	819852	IfStatement	if ( one )		819731	10					
ANR	819853	Condition	one	1914:5:62497:62499	819731	0	True				
ANR	819854	Identifier	one		819731	0					
ANR	819855	CompoundStatement		26:10:393:393	819731	1					
ANR	819856	ExpressionStatement	bbaddr = addr	1915:2:62506:62519	819731	0	True				
ANR	819857	AssignmentExpression	bbaddr = addr		819731	0		=			
ANR	819858	Identifier	bbaddr		819731	0					
ANR	819859	Identifier	addr		819731	1					
ANR	819860	IfStatement	if ( mode == 'j' )		819731	11					
ANR	819861	Condition	mode == 'j'	1917:5:62529:62539	819731	0	True				
ANR	819862	EqualityExpression	mode == 'j'		819731	0		==			
ANR	819863	Identifier	mode		819731	0					
ANR	819864	PrimaryExpression	'j'		819731	1					
ANR	819865	CompoundStatement		29:18:433:433	819731	1					
ANR	819866	ExpressionStatement	pj = pj_new ( )	1918:2:62546:62560	819731	0	True				
ANR	819867	AssignmentExpression	pj = pj_new ( )		819731	0		=			
ANR	819868	Identifier	pj		819731	0					
ANR	819869	CallExpression	pj_new ( )		819731	1					
ANR	819870	Callee	pj_new		819731	0					
ANR	819871	Identifier	pj_new		819731	0					
ANR	819872	ArgumentList			819731	1					
ANR	819873	IfStatement	if ( ! pj )		819731	1					
ANR	819874	Condition	! pj	1919:6:62568:62570	819731	0	True				
ANR	819875	UnaryOperationExpression	! pj		819731	0					
ANR	819876	UnaryOperator	!		819731	0					
ANR	819877	Identifier	pj		819731	1					
ANR	819878	CompoundStatement		31:11:464:464	819731	1					
ANR	819879	ReturnStatement	return false ;	1920:3:62578:62590	819731	0	True				
ANR	819880	Identifier	false		819731	0					
ANR	819881	ExpressionStatement	pj_a ( pj )	1922:2:62598:62607	819731	2	True				
ANR	819882	CallExpression	pj_a ( pj )		819731	0					
ANR	819883	Callee	pj_a		819731	0					
ANR	819884	Identifier	pj_a		819731	0					
ANR	819885	ArgumentList	pj		819731	1					
ANR	819886	Argument	pj		819731	0					
ANR	819887	Identifier	pj		819731	0					
ANR	819888	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 ) ;"	1924:1:62613:62673	819731	12	True				
ANR	819889	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		819731	0					
ANR	819890	IdentifierDeclType	RAnalFunction *		819731	0					
ANR	819891	Identifier	fcn		819731	1					
ANR	819892	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		819731	2		=			
ANR	819893	Identifier	fcn		819731	0					
ANR	819894	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , 0 )"		819731	1					
ANR	819895	Callee	r_anal_get_fcn_in		819731	0					
ANR	819896	Identifier	r_anal_get_fcn_in		819731	0					
ANR	819897	ArgumentList	core -> anal		819731	1					
ANR	819898	Argument	core -> anal		819731	0					
ANR	819899	PtrMemberAccess	core -> anal		819731	0					
ANR	819900	Identifier	core		819731	0					
ANR	819901	Identifier	anal		819731	1					
ANR	819902	Argument	addr		819731	1					
ANR	819903	Identifier	addr		819731	0					
ANR	819904	Argument	0		819731	2					
ANR	819905	PrimaryExpression	0		819731	0					
ANR	819906	IfStatement	if ( ! fcn )		819731	13					
ANR	819907	Condition	! fcn	1925:5:62680:62683	819731	0	True				
ANR	819908	UnaryOperationExpression	! fcn		819731	0					
ANR	819909	UnaryOperator	!		819731	0					
ANR	819910	Identifier	fcn		819731	1					
ANR	819911	CompoundStatement		37:11:577:577	819731	1					
ANR	819912	IfStatement	if ( mode == 'j' )		819731	0					
ANR	819913	Condition	mode == 'j'	1926:6:62694:62704	819731	0	True				
ANR	819914	EqualityExpression	mode == 'j'		819731	0		==			
ANR	819915	Identifier	mode		819731	0					
ANR	819916	PrimaryExpression	'j'		819731	1					
ANR	819917	CompoundStatement		38:19:598:598	819731	1					
ANR	819918	ExpressionStatement	pj_end ( pj )	1927:3:62712:62723	819731	0	True				
ANR	819919	CallExpression	pj_end ( pj )		819731	0					
ANR	819920	Callee	pj_end		819731	0					
ANR	819921	Identifier	pj_end		819731	0					
ANR	819922	ArgumentList	pj		819731	1					
ANR	819923	Argument	pj		819731	0					
ANR	819924	Identifier	pj		819731	0					
ANR	819925	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	1928:3:62728:62759	819731	1	True				
ANR	819926	CallExpression	r_cons_println ( pj_string ( pj ) )		819731	0					
ANR	819927	Callee	r_cons_println		819731	0					
ANR	819928	Identifier	r_cons_println		819731	0					
ANR	819929	ArgumentList	pj_string ( pj )		819731	1					
ANR	819930	Argument	pj_string ( pj )		819731	0					
ANR	819931	CallExpression	pj_string ( pj )		819731	0					
ANR	819932	Callee	pj_string		819731	0					
ANR	819933	Identifier	pj_string		819731	0					
ANR	819934	ArgumentList	pj		819731	1					
ANR	819935	Argument	pj		819731	0					
ANR	819936	Identifier	pj		819731	0					
ANR	819937	ExpressionStatement	pj_free ( pj )	1929:3:62764:62776	819731	2	True				
ANR	819938	CallExpression	pj_free ( pj )		819731	0					
ANR	819939	Callee	pj_free		819731	0					
ANR	819940	Identifier	pj_free		819731	0					
ANR	819941	ArgumentList	pj		819731	1					
ANR	819942	Argument	pj		819731	0					
ANR	819943	Identifier	pj		819731	0					
ANR	819944	ReturnStatement	return false ;	1931:2:62784:62796	819731	1	True				
ANR	819945	Identifier	false		819731	0					
ANR	819946	IfStatement	if ( mode == '*' )		819731	14					
ANR	819947	Condition	mode == '*'	1933:5:62806:62816	819731	0	True				
ANR	819948	EqualityExpression	mode == '*'		819731	0		==			
ANR	819949	Identifier	mode		819731	0					
ANR	819950	PrimaryExpression	'*'		819731	1					
ANR	819951	CompoundStatement		45:18:710:710	819731	1					
ANR	819952	ExpressionStatement	"r_cons_printf ( ""fs blocks\\n"" )"	1934:2:62823:62852	819731	0	True				
ANR	819953	CallExpression	"r_cons_printf ( ""fs blocks\\n"" )"		819731	0					
ANR	819954	Callee	r_cons_printf		819731	0					
ANR	819955	Identifier	r_cons_printf		819731	0					
ANR	819956	ArgumentList	"""fs blocks\\n"""		819731	1					
ANR	819957	Argument	"""fs blocks\\n"""		819731	0					
ANR	819958	PrimaryExpression	"""fs blocks\\n"""		819731	0					
ANR	819959	ExpressionStatement	"r_list_sort ( fcn -> bbs , bb_cmp )"	1936:1:62858:62888	819731	15	True				
ANR	819960	CallExpression	"r_list_sort ( fcn -> bbs , bb_cmp )"		819731	0					
ANR	819961	Callee	r_list_sort		819731	0					
ANR	819962	Identifier	r_list_sort		819731	0					
ANR	819963	ArgumentList	fcn -> bbs		819731	1					
ANR	819964	Argument	fcn -> bbs		819731	0					
ANR	819965	PtrMemberAccess	fcn -> bbs		819731	0					
ANR	819966	Identifier	fcn		819731	0					
ANR	819967	Identifier	bbs		819731	1					
ANR	819968	Argument	bb_cmp		819731	1					
ANR	819969	Identifier	bb_cmp		819731	0					
ANR	819970	IfStatement	if ( mode == '=' )		819731	16					
ANR	819971	Condition	mode == '='	1937:5:62895:62905	819731	0	True				
ANR	819972	EqualityExpression	mode == '='		819731	0		==			
ANR	819973	Identifier	mode		819731	0					
ANR	819974	PrimaryExpression	'='		819731	1					
ANR	819975	CompoundStatement		50:2:810:866	819731	1					
ANR	819976	IdentifierDeclStatement	RList * flist = r_list_newf ( ( RListFree ) r_listinfo_free ) ;	1938:2:62919:62975	819731	0	True				
ANR	819977	IdentifierDecl	* flist = r_list_newf ( ( RListFree ) r_listinfo_free )		819731	0					
ANR	819978	IdentifierDeclType	RList *		819731	0					
ANR	819979	Identifier	flist		819731	1					
ANR	819980	AssignmentExpression	* flist = r_list_newf ( ( RListFree ) r_listinfo_free )		819731	2		=			
ANR	819981	Identifier	flist		819731	0					
ANR	819982	CallExpression	r_list_newf ( ( RListFree ) r_listinfo_free )		819731	1					
ANR	819983	Callee	r_list_newf		819731	0					
ANR	819984	Identifier	r_list_newf		819731	0					
ANR	819985	ArgumentList	( RListFree ) r_listinfo_free		819731	1					
ANR	819986	Argument	( RListFree ) r_listinfo_free		819731	0					
ANR	819987	CastExpression	( RListFree ) r_listinfo_free		819731	0					
ANR	819988	CastTarget	RListFree		819731	0					
ANR	819989	Identifier	r_listinfo_free		819731	1					
ANR	819990	IfStatement	if ( ! flist )		819731	1					
ANR	819991	Condition	! flist	1939:6:62983:62988	819731	0	True				
ANR	819992	UnaryOperationExpression	! flist		819731	0					
ANR	819993	UnaryOperator	!		819731	0					
ANR	819994	Identifier	flist		819731	1					
ANR	819995	CompoundStatement		51:14:882:882	819731	1					
ANR	819996	ReturnStatement	return false ;	1940:3:62996:63008	819731	0	True				
ANR	819997	Identifier	false		819731	0					
ANR	819998	Statement	ls_foreach	1942:2:63016:63025	819731	2	True				
ANR	819999	Statement	(	1942:13:63027:63027	819731	3	True				
ANR	820000	Statement	fcn	1942:14:63028:63030	819731	4	True				
ANR	820001	Statement	->	1942:17:63031:63032	819731	5	True				
ANR	820002	Statement	bbs	1942:19:63033:63035	819731	6	True				
ANR	820003	Statement	","	1942:22:63036:63036	819731	7	True				
ANR	820004	Statement	iter	1942:24:63038:63041	819731	8	True				
ANR	820005	Statement	","	1942:28:63042:63042	819731	9	True				
ANR	820006	Statement	b	1942:30:63044:63044	819731	10	True				
ANR	820007	Statement	)	1942:31:63045:63045	819731	11	True				
ANR	820008	CompoundStatement		56:3:996:1063	819731	12					
ANR	820009	Statement	RInterval	1943:3:63052:63060	819731	0	True				
ANR	820010	Statement	inter	1943:13:63062:63066	819731	1	True				
ANR	820011	Statement	=	1943:19:63068:63068	819731	2	True				
ANR	820012	Statement	(	1943:21:63070:63070	819731	3	True				
ANR	820013	Statement	RInterval	1943:22:63071:63079	819731	4	True				
ANR	820014	Statement	)	1943:31:63080:63080	819731	5	True				
ANR	820015	CompoundStatement		55:33:973:973	819731	6					
ANR	820016	Statement	b	1943:34:63083:63083	819731	0	True				
ANR	820017	Statement	->	1943:35:63084:63085	819731	1	True				
ANR	820018	Statement	addr	1943:37:63086:63089	819731	2	True				
ANR	820019	Statement	","	1943:41:63090:63090	819731	3	True				
ANR	820020	Statement	b	1943:43:63092:63092	819731	4	True				
ANR	820021	Statement	->	1943:44:63093:63094	819731	5	True				
ANR	820022	Statement	size	1943:46:63095:63098	819731	6	True				
ANR	820023	ExpressionStatement		1943:51:63100:63100	819731	7	True				
ANR	820024	IdentifierDeclStatement	"RListInfo * info = r_listinfo_new ( b -> label , inter , inter , - 1 , NULL ) ;"	1944:3:63105:63172	819731	8	True				
ANR	820025	IdentifierDecl	"* info = r_listinfo_new ( b -> label , inter , inter , - 1 , NULL )"		819731	0					
ANR	820026	IdentifierDeclType	RListInfo *		819731	0					
ANR	820027	Identifier	info		819731	1					
ANR	820028	AssignmentExpression	"* info = r_listinfo_new ( b -> label , inter , inter , - 1 , NULL )"		819731	2		=			
ANR	820029	Identifier	info		819731	0					
ANR	820030	CallExpression	"r_listinfo_new ( b -> label , inter , inter , - 1 , NULL )"		819731	1					
ANR	820031	Callee	r_listinfo_new		819731	0					
ANR	820032	Identifier	r_listinfo_new		819731	0					
ANR	820033	ArgumentList	b -> label		819731	1					
ANR	820034	Argument	b -> label		819731	0					
ANR	820035	PtrMemberAccess	b -> label		819731	0					
ANR	820036	Identifier	b		819731	0					
ANR	820037	Identifier	label		819731	1					
ANR	820038	Argument	inter		819731	1					
ANR	820039	Identifier	inter		819731	0					
ANR	820040	Argument	inter		819731	2					
ANR	820041	Identifier	inter		819731	0					
ANR	820042	Argument	- 1		819731	3					
ANR	820043	UnaryOperationExpression	- 1		819731	0					
ANR	820044	UnaryOperator	-		819731	0					
ANR	820045	PrimaryExpression	1		819731	1					
ANR	820046	Argument	NULL		819731	4					
ANR	820047	Identifier	NULL		819731	0					
ANR	820048	IfStatement	if ( ! info )		819731	9					
ANR	820049	Condition	! info	1945:7:63181:63185	819731	0	True				
ANR	820050	UnaryOperationExpression	! info		819731	0					
ANR	820051	UnaryOperator	!		819731	0					
ANR	820052	Identifier	info		819731	1					
ANR	820053	CompoundStatement		57:14:1079:1079	819731	1					
ANR	820054	BreakStatement	break ;	1946:4:63194:63199	819731	0	True				
ANR	820055	ExpressionStatement	"r_list_append ( flist , info )"	1948:3:63209:63236	819731	10	True				
ANR	820056	CallExpression	"r_list_append ( flist , info )"		819731	0					
ANR	820057	Callee	r_list_append		819731	0					
ANR	820058	Identifier	r_list_append		819731	0					
ANR	820059	ArgumentList	flist		819731	1					
ANR	820060	Argument	flist		819731	0					
ANR	820061	Identifier	flist		819731	0					
ANR	820062	Argument	info		819731	1					
ANR	820063	Identifier	info		819731	0					
ANR	820064	ExpressionStatement	"r_core_visual_list ( core , flist , core -> offset , core -> blocksize , r_cons_get_size ( NULL ) , r_config_get_i ( core -> config , ""scr.color"" ) )"	1950:2:63244:63378	819731	13	True				
ANR	820065	CallExpression	"r_core_visual_list ( core , flist , core -> offset , core -> blocksize , r_cons_get_size ( NULL ) , r_config_get_i ( core -> config , ""scr.color"" ) )"		819731	0					
ANR	820066	Callee	r_core_visual_list		819731	0					
ANR	820067	Identifier	r_core_visual_list		819731	0					
ANR	820068	ArgumentList	core		819731	1					
ANR	820069	Argument	core		819731	0					
ANR	820070	Identifier	core		819731	0					
ANR	820071	Argument	flist		819731	1					
ANR	820072	Identifier	flist		819731	0					
ANR	820073	Argument	core -> offset		819731	2					
ANR	820074	PtrMemberAccess	core -> offset		819731	0					
ANR	820075	Identifier	core		819731	0					
ANR	820076	Identifier	offset		819731	1					
ANR	820077	Argument	core -> blocksize		819731	3					
ANR	820078	PtrMemberAccess	core -> blocksize		819731	0					
ANR	820079	Identifier	core		819731	0					
ANR	820080	Identifier	blocksize		819731	1					
ANR	820081	Argument	r_cons_get_size ( NULL )		819731	4					
ANR	820082	CallExpression	r_cons_get_size ( NULL )		819731	0					
ANR	820083	Callee	r_cons_get_size		819731	0					
ANR	820084	Identifier	r_cons_get_size		819731	0					
ANR	820085	ArgumentList	NULL		819731	1					
ANR	820086	Argument	NULL		819731	0					
ANR	820087	Identifier	NULL		819731	0					
ANR	820088	Argument	"r_config_get_i ( core -> config , ""scr.color"" )"		819731	5					
ANR	820089	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		819731	0					
ANR	820090	Callee	r_config_get_i		819731	0					
ANR	820091	Identifier	r_config_get_i		819731	0					
ANR	820092	ArgumentList	core -> config		819731	1					
ANR	820093	Argument	core -> config		819731	0					
ANR	820094	PtrMemberAccess	core -> config		819731	0					
ANR	820095	Identifier	core		819731	0					
ANR	820096	Identifier	config		819731	1					
ANR	820097	Argument	"""scr.color"""		819731	1					
ANR	820098	PrimaryExpression	"""scr.color"""		819731	0					
ANR	820099	ExpressionStatement	r_list_free ( flist )	1952:2:63382:63401	819731	14	True				
ANR	820100	CallExpression	r_list_free ( flist )		819731	0					
ANR	820101	Callee	r_list_free		819731	0					
ANR	820102	Identifier	r_list_free		819731	0					
ANR	820103	ArgumentList	flist		819731	1					
ANR	820104	Argument	flist		819731	0					
ANR	820105	Identifier	flist		819731	0					
ANR	820106	ReturnStatement	return true ;	1953:2:63405:63416	819731	15	True				
ANR	820107	Identifier	true		819731	0					
ANR	820108	Statement	r_list_foreach	1955:1:63422:63435	819731	17	True				
ANR	820109	Statement	(	1955:16:63437:63437	819731	18	True				
ANR	820110	Statement	fcn	1955:17:63438:63440	819731	19	True				
ANR	820111	Statement	->	1955:20:63441:63442	819731	20	True				
ANR	820112	Statement	bbs	1955:22:63443:63445	819731	21	True				
ANR	820113	Statement	","	1955:25:63446:63446	819731	22	True				
ANR	820114	Statement	iter	1955:27:63448:63451	819731	23	True				
ANR	820115	Statement	","	1955:31:63452:63452	819731	24	True				
ANR	820116	Statement	b	1955:33:63454:63454	819731	25	True				
ANR	820117	Statement	)	1955:34:63455:63455	819731	26	True				
ANR	820118	CompoundStatement		67:36:1348:1348	819731	27					
ANR	820119	IfStatement	if ( one )		819731	0					
ANR	820120	Condition	one	1956:6:63465:63467	819731	0	True				
ANR	820121	Identifier	one		819731	0					
ANR	820122	CompoundStatement		68:11:1361:1361	819731	1					
ANR	820123	IfStatement	if ( bbaddr != UT64_MAX && ( bbaddr < b -> addr || bbaddr >= ( b -> addr + b -> size ) ) )		819731	0					
ANR	820124	Condition	bbaddr != UT64_MAX && ( bbaddr < b -> addr || bbaddr >= ( b -> addr + b -> size ) )	1957:7:63479:63551	819731	0	True				
ANR	820125	AndExpression	bbaddr != UT64_MAX && ( bbaddr < b -> addr || bbaddr >= ( b -> addr + b -> size ) )		819731	0		&&			
ANR	820126	EqualityExpression	bbaddr != UT64_MAX		819731	0		!=			
ANR	820127	Identifier	bbaddr		819731	0					
ANR	820128	Identifier	UT64_MAX		819731	1					
ANR	820129	OrExpression	bbaddr < b -> addr || bbaddr >= ( b -> addr + b -> size )		819731	1		||			
ANR	820130	RelationalExpression	bbaddr < b -> addr		819731	0		<			
ANR	820131	Identifier	bbaddr		819731	0					
ANR	820132	PtrMemberAccess	b -> addr		819731	1					
ANR	820133	Identifier	b		819731	0					
ANR	820134	Identifier	addr		819731	1					
ANR	820135	RelationalExpression	bbaddr >= ( b -> addr + b -> size )		819731	1		>=			
ANR	820136	Identifier	bbaddr		819731	0					
ANR	820137	AdditiveExpression	b -> addr + b -> size		819731	1		+			
ANR	820138	PtrMemberAccess	b -> addr		819731	0					
ANR	820139	Identifier	b		819731	0					
ANR	820140	Identifier	addr		819731	1					
ANR	820141	PtrMemberAccess	b -> size		819731	1					
ANR	820142	Identifier	b		819731	0					
ANR	820143	Identifier	size		819731	1					
ANR	820144	CompoundStatement		69:82:1445:1445	819731	1					
ANR	820145	ContinueStatement	continue ;	1958:4:63560:63568	819731	0	True				
ANR	820146	SwitchStatement	switch ( mode )		819731	1					
ANR	820147	Condition	mode	1961:10:63589:63592	819731	0	True				
ANR	820148	Identifier	mode		819731	0					
ANR	820149	CompoundStatement		73:16:1486:1486	819731	1					
ANR	820150	Label	case 'r' :	1962:2:63599:63607	819731	0	True				
ANR	820151	IfStatement	if ( b -> jump == UT64_MAX )		819731	1					
ANR	820152	Condition	b -> jump == UT64_MAX	1963:7:63616:63634	819731	0	True				
ANR	820153	EqualityExpression	b -> jump == UT64_MAX		819731	0		==			
ANR	820154	PtrMemberAccess	b -> jump		819731	0					
ANR	820155	Identifier	b		819731	0					
ANR	820156	Identifier	jump		819731	1					
ANR	820157	Identifier	UT64_MAX		819731	1					
ANR	820158	CompoundStatement		76:4:1534:1586	819731	1					
ANR	820159	IdentifierDeclStatement	"ut64 retaddr = r_anal_bb_opaddr_i ( b , b -> ninstr - 1 ) ;"	1964:4:63643:63695	819731	0	True				
ANR	820160	IdentifierDecl	"retaddr = r_anal_bb_opaddr_i ( b , b -> ninstr - 1 )"		819731	0					
ANR	820161	IdentifierDeclType	ut64		819731	0					
ANR	820162	Identifier	retaddr		819731	1					
ANR	820163	AssignmentExpression	"retaddr = r_anal_bb_opaddr_i ( b , b -> ninstr - 1 )"		819731	2		=			
ANR	820164	Identifier	retaddr		819731	0					
ANR	820165	CallExpression	"r_anal_bb_opaddr_i ( b , b -> ninstr - 1 )"		819731	1					
ANR	820166	Callee	r_anal_bb_opaddr_i		819731	0					
ANR	820167	Identifier	r_anal_bb_opaddr_i		819731	0					
ANR	820168	ArgumentList	b		819731	1					
ANR	820169	Argument	b		819731	0					
ANR	820170	Identifier	b		819731	0					
ANR	820171	Argument	b -> ninstr - 1		819731	1					
ANR	820172	AdditiveExpression	b -> ninstr - 1		819731	0		-			
ANR	820173	PtrMemberAccess	b -> ninstr		819731	0					
ANR	820174	Identifier	b		819731	0					
ANR	820175	Identifier	ninstr		819731	1					
ANR	820176	PrimaryExpression	1		819731	1					
ANR	820177	IfStatement	if ( retaddr == UT64_MAX )		819731	1					
ANR	820178	Condition	retaddr == UT64_MAX	1965:8:63705:63723	819731	0	True				
ANR	820179	EqualityExpression	retaddr == UT64_MAX		819731	0		==			
ANR	820180	Identifier	retaddr		819731	0					
ANR	820181	Identifier	UT64_MAX		819731	1					
ANR	820182	CompoundStatement		77:29:1617:1617	819731	1					
ANR	820183	BreakStatement	break ;	1966:5:63733:63738	819731	0	True				
ANR	820184	IfStatement	"if ( ! strcmp ( input , ""*"" ) )"		819731	2					
ANR	820185	Condition	"! strcmp ( input , ""*"" )"	1969:8:63755:63774	819731	0	True				
ANR	820186	UnaryOperationExpression	"! strcmp ( input , ""*"" )"		819731	0					
ANR	820187	UnaryOperator	!		819731	0					
ANR	820188	CallExpression	"strcmp ( input , ""*"" )"		819731	1					
ANR	820189	Callee	strcmp		819731	0					
ANR	820190	Identifier	strcmp		819731	0					
ANR	820191	ArgumentList	input		819731	1					
ANR	820192	Argument	input		819731	0					
ANR	820193	Identifier	input		819731	0					
ANR	820194	Argument	"""*"""		819731	1					
ANR	820195	PrimaryExpression	"""*"""		819731	0					
ANR	820196	CompoundStatement		81:30:1668:1668	819731	1					
ANR	820197	Statement	r_cons_printf	1970:5:63784:63796	819731	0	True				
ANR	820198	Statement	(	1970:19:63798:63798	819731	1	True				
ANR	820199	Statement	"""db 0x%08"""	1970:20:63799:63808	819731	2	True				
ANR	820200	Statement	PFMT64x	1970:30:63809:63815	819731	3	True				
ANR	820201	Statement	"""\\n"""	1970:37:63816:63819	819731	4	True				
ANR	820202	Statement	","	1970:41:63820:63820	819731	5	True				
ANR	820203	Statement	retaddr	1970:43:63822:63828	819731	6	True				
ANR	820204	Statement	)	1970:50:63829:63829	819731	7	True				
ANR	820205	ExpressionStatement		1970:51:63830:63830	819731	8	True				
ANR	820206	ElseStatement	else		819731	0					
ANR	820207	IfStatement	"if ( ! strcmp ( input , ""-*"" ) )"		819731	0					
ANR	820208	Condition	"! strcmp ( input , ""-*"" )"	1971:15:63847:63867	819731	0	True				
ANR	820209	UnaryOperationExpression	"! strcmp ( input , ""-*"" )"		819731	0					
ANR	820210	UnaryOperator	!		819731	0					
ANR	820211	CallExpression	"strcmp ( input , ""-*"" )"		819731	1					
ANR	820212	Callee	strcmp		819731	0					
ANR	820213	Identifier	strcmp		819731	0					
ANR	820214	ArgumentList	input		819731	1					
ANR	820215	Argument	input		819731	0					
ANR	820216	Identifier	input		819731	0					
ANR	820217	Argument	"""-*"""		819731	1					
ANR	820218	PrimaryExpression	"""-*"""		819731	0					
ANR	820219	CompoundStatement		83:38:1761:1761	819731	1					
ANR	820220	Statement	r_cons_printf	1972:5:63877:63889	819731	0	True				
ANR	820221	Statement	(	1972:19:63891:63891	819731	1	True				
ANR	820222	Statement	"""db-0x%08"""	1972:20:63892:63901	819731	2	True				
ANR	820223	Statement	PFMT64x	1972:30:63902:63908	819731	3	True				
ANR	820224	Statement	"""\\n"""	1972:37:63909:63912	819731	4	True				
ANR	820225	Statement	","	1972:41:63913:63913	819731	5	True				
ANR	820226	Statement	retaddr	1972:43:63915:63921	819731	6	True				
ANR	820227	Statement	)	1972:50:63922:63922	819731	7	True				
ANR	820228	ExpressionStatement		1972:51:63923:63923	819731	8	True				
ANR	820229	ElseStatement	else		819731	0					
ANR	820230	CompoundStatement		85:11:1827:1827	819731	0					
ANR	820231	Statement	r_cons_printf	1974:5:63943:63955	819731	0	True				
ANR	820232	Statement	(	1974:19:63957:63957	819731	1	True				
ANR	820233	Statement	"""0x%08"""	1974:20:63958:63964	819731	2	True				
ANR	820234	Statement	PFMT64x	1974:27:63965:63971	819731	3	True				
ANR	820235	Statement	"""\\n"""	1974:34:63972:63975	819731	4	True				
ANR	820236	Statement	","	1974:38:63976:63976	819731	5	True				
ANR	820237	Statement	retaddr	1974:40:63978:63984	819731	6	True				
ANR	820238	Statement	)	1974:47:63985:63985	819731	7	True				
ANR	820239	ExpressionStatement		1974:48:63986:63986	819731	8	True				
ANR	820240	BreakStatement	break ;	1977:3:64002:64007	819731	2	True				
ANR	820241	Label	case '*' :	1978:2:64011:64019	819731	3	True				
ANR	820242	Statement	r_cons_printf	1979:3:64024:64036	819731	4	True				
ANR	820243	Statement	(	1979:17:64038:64038	819731	5	True				
ANR	820244	Statement	"""f bb.%05"""	1979:18:64039:64048	819731	6	True				
ANR	820245	Statement	PFMT64x	1979:29:64050:64056	819731	7	True				
ANR	820246	Statement	""" = 0x%08"""	1979:37:64058:64067	819731	8	True				
ANR	820247	Statement	PFMT64x	1979:48:64069:64075	819731	9	True				
ANR	820248	Statement	"""\\n"""	1979:56:64077:64080	819731	10	True				
ANR	820249	Statement	","	1979:60:64081:64081	819731	11	True				
ANR	820250	Statement	b	1980:4:64087:64087	819731	12	True				
ANR	820251	Statement	->	1980:5:64088:64089	819731	13	True				
ANR	820252	Statement	addr	1980:7:64090:64093	819731	14	True				
ANR	820253	Statement	&	1980:12:64095:64095	819731	15	True				
ANR	820254	Statement	0xFFFFF	1980:14:64097:64103	819731	16	True				
ANR	820255	Statement	","	1980:21:64104:64104	819731	17	True				
ANR	820256	Statement	b	1980:23:64106:64106	819731	18	True				
ANR	820257	Statement	->	1980:24:64107:64108	819731	19	True				
ANR	820258	Statement	addr	1980:26:64109:64112	819731	20	True				
ANR	820259	Statement	)	1980:30:64113:64113	819731	21	True				
ANR	820260	ExpressionStatement		1980:31:64114:64114	819731	22	True				
ANR	820261	BreakStatement	break ;	1981:3:64119:64124	819731	23	True				
ANR	820262	Label	case 'q' :	1982:2:64128:64136	819731	24	True				
ANR	820263	Statement	r_cons_printf	1983:3:64141:64153	819731	25	True				
ANR	820264	Statement	(	1983:17:64155:64155	819731	26	True				
ANR	820265	Statement	"""0x%08"""	1983:18:64156:64162	819731	27	True				
ANR	820266	Statement	PFMT64x	1983:26:64164:64170	819731	28	True				
ANR	820267	Statement	"""\\n"""	1983:34:64172:64175	819731	29	True				
ANR	820268	Statement	","	1983:38:64176:64176	819731	30	True				
ANR	820269	Statement	b	1983:40:64178:64178	819731	31	True				
ANR	820270	Statement	->	1983:41:64179:64180	819731	32	True				
ANR	820271	Statement	addr	1983:43:64181:64184	819731	33	True				
ANR	820272	Statement	)	1983:47:64185:64185	819731	34	True				
ANR	820273	ExpressionStatement		1983:48:64186:64186	819731	35	True				
ANR	820274	BreakStatement	break ;	1984:3:64191:64196	819731	36	True				
ANR	820275	Label	case 'j' :	1985:2:64200:64208	819731	37	True				
ANR	820276	CompoundStatement		103:3:2234:2249	819731	38					
ANR	820277	IdentifierDeclStatement	RListIter * iter2 ;	1988:3:64284:64300	819731	0	True				
ANR	820278	IdentifierDecl	* iter2		819731	0					
ANR	820279	IdentifierDeclType	RListIter *		819731	0					
ANR	820280	Identifier	iter2		819731	1					
ANR	820281	IdentifierDeclStatement	RAnalBlock * b2 ;	1989:3:64305:64319	819731	1	True				
ANR	820282	IdentifierDecl	* b2		819731	0					
ANR	820283	IdentifierDeclType	RAnalBlock *		819731	0					
ANR	820284	Identifier	b2		819731	1					
ANR	820285	IdentifierDeclStatement	int inputs = 0 ;	1990:3:64324:64338	819731	2	True				
ANR	820286	IdentifierDecl	inputs = 0		819731	0					
ANR	820287	IdentifierDeclType	int		819731	0					
ANR	820288	Identifier	inputs		819731	1					
ANR	820289	AssignmentExpression	inputs = 0		819731	2		=			
ANR	820290	Identifier	inputs		819731	0					
ANR	820291	PrimaryExpression	0		819731	1					
ANR	820292	IdentifierDeclStatement	int outputs = 0 ;	1991:3:64343:64358	819731	3	True				
ANR	820293	IdentifierDecl	outputs = 0		819731	0					
ANR	820294	IdentifierDeclType	int		819731	0					
ANR	820295	Identifier	outputs		819731	1					
ANR	820296	AssignmentExpression	outputs = 0		819731	2		=			
ANR	820297	Identifier	outputs		819731	0					
ANR	820298	PrimaryExpression	0		819731	1					
ANR	820299	Statement	r_list_foreach	1992:3:64363:64376	819731	4	True				
ANR	820300	Statement	(	1992:18:64378:64378	819731	5	True				
ANR	820301	Statement	fcn	1992:19:64379:64381	819731	6	True				
ANR	820302	Statement	->	1992:22:64382:64383	819731	7	True				
ANR	820303	Statement	bbs	1992:24:64384:64386	819731	8	True				
ANR	820304	Statement	","	1992:27:64387:64387	819731	9	True				
ANR	820305	Statement	iter2	1992:29:64389:64393	819731	10	True				
ANR	820306	Statement	","	1992:34:64394:64394	819731	11	True				
ANR	820307	Statement	b2	1992:36:64396:64397	819731	12	True				
ANR	820308	Statement	)	1992:38:64398:64398	819731	13	True				
ANR	820309	CompoundStatement		104:40:2291:2291	819731	14					
ANR	820310	IfStatement	if ( b2 -> jump == b -> addr )		819731	0					
ANR	820311	Condition	b2 -> jump == b -> addr	1993:8:64410:64428	819731	0	True				
ANR	820312	EqualityExpression	b2 -> jump == b -> addr		819731	0		==			
ANR	820313	PtrMemberAccess	b2 -> jump		819731	0					
ANR	820314	Identifier	b2		819731	0					
ANR	820315	Identifier	jump		819731	1					
ANR	820316	PtrMemberAccess	b -> addr		819731	1					
ANR	820317	Identifier	b		819731	0					
ANR	820318	Identifier	addr		819731	1					
ANR	820319	CompoundStatement		105:29:2322:2322	819731	1					
ANR	820320	ExpressionStatement	inputs ++	1994:5:64438:64446	819731	0	True				
ANR	820321	PostIncDecOperationExpression	inputs ++		819731	0					
ANR	820322	Identifier	inputs		819731	0					
ANR	820323	IncDec	++		819731	1					
ANR	820324	IfStatement	if ( b2 -> fail == b -> addr )		819731	1					
ANR	820325	Condition	b2 -> fail == b -> addr	1996:8:64462:64480	819731	0	True				
ANR	820326	EqualityExpression	b2 -> fail == b -> addr		819731	0		==			
ANR	820327	PtrMemberAccess	b2 -> fail		819731	0					
ANR	820328	Identifier	b2		819731	0					
ANR	820329	Identifier	fail		819731	1					
ANR	820330	PtrMemberAccess	b -> addr		819731	1					
ANR	820331	Identifier	b		819731	0					
ANR	820332	Identifier	addr		819731	1					
ANR	820333	CompoundStatement		108:29:2374:2374	819731	1					
ANR	820334	ExpressionStatement	inputs ++	1997:5:64490:64498	819731	0	True				
ANR	820335	PostIncDecOperationExpression	inputs ++		819731	0					
ANR	820336	Identifier	inputs		819731	0					
ANR	820337	IncDec	++		819731	1					
ANR	820338	IfStatement	if ( b -> jump != UT64_MAX )		819731	15					
ANR	820339	Condition	b -> jump != UT64_MAX	2000:7:64518:64536	819731	0	True				
ANR	820340	EqualityExpression	b -> jump != UT64_MAX		819731	0		!=			
ANR	820341	PtrMemberAccess	b -> jump		819731	0					
ANR	820342	Identifier	b		819731	0					
ANR	820343	Identifier	jump		819731	1					
ANR	820344	Identifier	UT64_MAX		819731	1					
ANR	820345	CompoundStatement		112:28:2430:2430	819731	1					
ANR	820346	ExpressionStatement	outputs ++	2001:4:64545:64555	819731	0	True				
ANR	820347	PostIncDecOperationExpression	outputs ++		819731	0					
ANR	820348	Identifier	outputs		819731	0					
ANR	820349	IncDec	++		819731	1					
ANR	820350	IfStatement	if ( b -> fail != UT64_MAX )		819731	16					
ANR	820351	Condition	b -> fail != UT64_MAX	2003:7:64569:64587	819731	0	True				
ANR	820352	EqualityExpression	b -> fail != UT64_MAX		819731	0		!=			
ANR	820353	PtrMemberAccess	b -> fail		819731	0					
ANR	820354	Identifier	b		819731	0					
ANR	820355	Identifier	fail		819731	1					
ANR	820356	Identifier	UT64_MAX		819731	1					
ANR	820357	CompoundStatement		115:28:2481:2481	819731	1					
ANR	820358	ExpressionStatement	outputs ++	2004:4:64596:64606	819731	0	True				
ANR	820359	PostIncDecOperationExpression	outputs ++		819731	0					
ANR	820360	Identifier	outputs		819731	0					
ANR	820361	IncDec	++		819731	1					
ANR	820362	ExpressionStatement	pj_o ( pj )	2006:3:64616:64625	819731	17	True				
ANR	820363	CallExpression	pj_o ( pj )		819731	0					
ANR	820364	Callee	pj_o		819731	0					
ANR	820365	Identifier	pj_o		819731	0					
ANR	820366	ArgumentList	pj		819731	1					
ANR	820367	Argument	pj		819731	0					
ANR	820368	Identifier	pj		819731	0					
ANR	820369	IfStatement	if ( b -> jump != UT64_MAX )		819731	18					
ANR	820370	Condition	b -> jump != UT64_MAX	2008:7:64635:64653	819731	0	True				
ANR	820371	EqualityExpression	b -> jump != UT64_MAX		819731	0		!=			
ANR	820372	PtrMemberAccess	b -> jump		819731	0					
ANR	820373	Identifier	b		819731	0					
ANR	820374	Identifier	jump		819731	1					
ANR	820375	Identifier	UT64_MAX		819731	1					
ANR	820376	CompoundStatement		120:28:2547:2547	819731	1					
ANR	820377	ExpressionStatement	"pj_kn ( pj , ""jump"" , b -> jump )"	2009:4:64662:64689	819731	0	True				
ANR	820378	CallExpression	"pj_kn ( pj , ""jump"" , b -> jump )"		819731	0					
ANR	820379	Callee	pj_kn		819731	0					
ANR	820380	Identifier	pj_kn		819731	0					
ANR	820381	ArgumentList	pj		819731	1					
ANR	820382	Argument	pj		819731	0					
ANR	820383	Identifier	pj		819731	0					
ANR	820384	Argument	"""jump"""		819731	1					
ANR	820385	PrimaryExpression	"""jump"""		819731	0					
ANR	820386	Argument	b -> jump		819731	2					
ANR	820387	PtrMemberAccess	b -> jump		819731	0					
ANR	820388	Identifier	b		819731	0					
ANR	820389	Identifier	jump		819731	1					
ANR	820390	IfStatement	if ( b -> fail != UT64_MAX )		819731	19					
ANR	820391	Condition	b -> fail != UT64_MAX	2011:7:64703:64721	819731	0	True				
ANR	820392	EqualityExpression	b -> fail != UT64_MAX		819731	0		!=			
ANR	820393	PtrMemberAccess	b -> fail		819731	0					
ANR	820394	Identifier	b		819731	0					
ANR	820395	Identifier	fail		819731	1					
ANR	820396	Identifier	UT64_MAX		819731	1					
ANR	820397	CompoundStatement		123:28:2615:2615	819731	1					
ANR	820398	ExpressionStatement	"pj_kn ( pj , ""fail"" , b -> fail )"	2012:4:64730:64757	819731	0	True				
ANR	820399	CallExpression	"pj_kn ( pj , ""fail"" , b -> fail )"		819731	0					
ANR	820400	Callee	pj_kn		819731	0					
ANR	820401	Identifier	pj_kn		819731	0					
ANR	820402	ArgumentList	pj		819731	1					
ANR	820403	Argument	pj		819731	0					
ANR	820404	Identifier	pj		819731	0					
ANR	820405	Argument	"""fail"""		819731	1					
ANR	820406	PrimaryExpression	"""fail"""		819731	0					
ANR	820407	Argument	b -> fail		819731	2					
ANR	820408	PtrMemberAccess	b -> fail		819731	0					
ANR	820409	Identifier	b		819731	0					
ANR	820410	Identifier	fail		819731	1					
ANR	820411	IfStatement	if ( b -> switch_op )		819731	20					
ANR	820412	Condition	b -> switch_op	2014:7:64771:64782	819731	0	True				
ANR	820413	PtrMemberAccess	b -> switch_op		819731	0					
ANR	820414	Identifier	b		819731	0					
ANR	820415	Identifier	switch_op		819731	1					
ANR	820416	CompoundStatement		126:21:2676:2676	819731	1					
ANR	820417	ExpressionStatement	"pj_k ( pj , ""switch_op"" )"	2015:4:64791:64813	819731	0	True				
ANR	820418	CallExpression	"pj_k ( pj , ""switch_op"" )"		819731	0					
ANR	820419	Callee	pj_k		819731	0					
ANR	820420	Identifier	pj_k		819731	0					
ANR	820421	ArgumentList	pj		819731	1					
ANR	820422	Argument	pj		819731	0					
ANR	820423	Identifier	pj		819731	0					
ANR	820424	Argument	"""switch_op"""		819731	1					
ANR	820425	PrimaryExpression	"""switch_op"""		819731	0					
ANR	820426	ExpressionStatement	pj_o ( pj )	2016:4:64819:64828	819731	1	True				
ANR	820427	CallExpression	pj_o ( pj )		819731	0					
ANR	820428	Callee	pj_o		819731	0					
ANR	820429	Identifier	pj_o		819731	0					
ANR	820430	ArgumentList	pj		819731	1					
ANR	820431	Argument	pj		819731	0					
ANR	820432	Identifier	pj		819731	0					
ANR	820433	ExpressionStatement	"pj_kn ( pj , ""addr"" , b -> switch_op -> addr )"	2017:4:64834:64872	819731	2	True				
ANR	820434	CallExpression	"pj_kn ( pj , ""addr"" , b -> switch_op -> addr )"		819731	0					
ANR	820435	Callee	pj_kn		819731	0					
ANR	820436	Identifier	pj_kn		819731	0					
ANR	820437	ArgumentList	pj		819731	1					
ANR	820438	Argument	pj		819731	0					
ANR	820439	Identifier	pj		819731	0					
ANR	820440	Argument	"""addr"""		819731	1					
ANR	820441	PrimaryExpression	"""addr"""		819731	0					
ANR	820442	Argument	b -> switch_op -> addr		819731	2					
ANR	820443	PtrMemberAccess	b -> switch_op -> addr		819731	0					
ANR	820444	PtrMemberAccess	b -> switch_op		819731	0					
ANR	820445	Identifier	b		819731	0					
ANR	820446	Identifier	switch_op		819731	1					
ANR	820447	Identifier	addr		819731	1					
ANR	820448	ExpressionStatement	"pj_kn ( pj , ""min_val"" , b -> switch_op -> min_val )"	2018:4:64878:64922	819731	3	True				
ANR	820449	CallExpression	"pj_kn ( pj , ""min_val"" , b -> switch_op -> min_val )"		819731	0					
ANR	820450	Callee	pj_kn		819731	0					
ANR	820451	Identifier	pj_kn		819731	0					
ANR	820452	ArgumentList	pj		819731	1					
ANR	820453	Argument	pj		819731	0					
ANR	820454	Identifier	pj		819731	0					
ANR	820455	Argument	"""min_val"""		819731	1					
ANR	820456	PrimaryExpression	"""min_val"""		819731	0					
ANR	820457	Argument	b -> switch_op -> min_val		819731	2					
ANR	820458	PtrMemberAccess	b -> switch_op -> min_val		819731	0					
ANR	820459	PtrMemberAccess	b -> switch_op		819731	0					
ANR	820460	Identifier	b		819731	0					
ANR	820461	Identifier	switch_op		819731	1					
ANR	820462	Identifier	min_val		819731	1					
ANR	820463	ExpressionStatement	"pj_kn ( pj , ""def_val"" , b -> switch_op -> def_val )"	2019:4:64928:64972	819731	4	True				
ANR	820464	CallExpression	"pj_kn ( pj , ""def_val"" , b -> switch_op -> def_val )"		819731	0					
ANR	820465	Callee	pj_kn		819731	0					
ANR	820466	Identifier	pj_kn		819731	0					
ANR	820467	ArgumentList	pj		819731	1					
ANR	820468	Argument	pj		819731	0					
ANR	820469	Identifier	pj		819731	0					
ANR	820470	Argument	"""def_val"""		819731	1					
ANR	820471	PrimaryExpression	"""def_val"""		819731	0					
ANR	820472	Argument	b -> switch_op -> def_val		819731	2					
ANR	820473	PtrMemberAccess	b -> switch_op -> def_val		819731	0					
ANR	820474	PtrMemberAccess	b -> switch_op		819731	0					
ANR	820475	Identifier	b		819731	0					
ANR	820476	Identifier	switch_op		819731	1					
ANR	820477	Identifier	def_val		819731	1					
ANR	820478	ExpressionStatement	"pj_kn ( pj , ""max_val"" , b -> switch_op -> max_val )"	2020:4:64978:65022	819731	5	True				
ANR	820479	CallExpression	"pj_kn ( pj , ""max_val"" , b -> switch_op -> max_val )"		819731	0					
ANR	820480	Callee	pj_kn		819731	0					
ANR	820481	Identifier	pj_kn		819731	0					
ANR	820482	ArgumentList	pj		819731	1					
ANR	820483	Argument	pj		819731	0					
ANR	820484	Identifier	pj		819731	0					
ANR	820485	Argument	"""max_val"""		819731	1					
ANR	820486	PrimaryExpression	"""max_val"""		819731	0					
ANR	820487	Argument	b -> switch_op -> max_val		819731	2					
ANR	820488	PtrMemberAccess	b -> switch_op -> max_val		819731	0					
ANR	820489	PtrMemberAccess	b -> switch_op		819731	0					
ANR	820490	Identifier	b		819731	0					
ANR	820491	Identifier	switch_op		819731	1					
ANR	820492	Identifier	max_val		819731	1					
ANR	820493	ExpressionStatement	"pj_k ( pj , ""cases"" )"	2021:4:65028:65046	819731	6	True				
ANR	820494	CallExpression	"pj_k ( pj , ""cases"" )"		819731	0					
ANR	820495	Callee	pj_k		819731	0					
ANR	820496	Identifier	pj_k		819731	0					
ANR	820497	ArgumentList	pj		819731	1					
ANR	820498	Argument	pj		819731	0					
ANR	820499	Identifier	pj		819731	0					
ANR	820500	Argument	"""cases"""		819731	1					
ANR	820501	PrimaryExpression	"""cases"""		819731	0					
ANR	820502	ExpressionStatement	pj_a ( pj )	2022:4:65052:65061	819731	7	True				
ANR	820503	CallExpression	pj_a ( pj )		819731	0					
ANR	820504	Callee	pj_a		819731	0					
ANR	820505	Identifier	pj_a		819731	0					
ANR	820506	ArgumentList	pj		819731	1					
ANR	820507	Argument	pj		819731	0					
ANR	820508	Identifier	pj		819731	0					
ANR	820509	CompoundStatement		137:5:2995:3015	819731	8					
ANR	820510	IdentifierDeclStatement	RListIter * case_op_iter ;	2024:5:65074:65097	819731	0	True				
ANR	820511	IdentifierDecl	* case_op_iter		819731	0					
ANR	820512	IdentifierDeclType	RListIter *		819731	0					
ANR	820513	Identifier	case_op_iter		819731	1					
ANR	820514	IdentifierDeclStatement	RAnalCaseOp * case_op ;	2025:5:65104:65124	819731	1	True				
ANR	820515	IdentifierDecl	* case_op		819731	0					
ANR	820516	IdentifierDeclType	RAnalCaseOp *		819731	0					
ANR	820517	Identifier	case_op		819731	1					
ANR	820518	Statement	r_list_foreach	2026:5:65131:65144	819731	2	True				
ANR	820519	Statement	(	2026:20:65146:65146	819731	3	True				
ANR	820520	Statement	b	2026:21:65147:65147	819731	4	True				
ANR	820521	Statement	->	2026:22:65148:65149	819731	5	True				
ANR	820522	Statement	switch_op	2026:24:65150:65158	819731	6	True				
ANR	820523	Statement	->	2026:33:65159:65160	819731	7	True				
ANR	820524	Statement	cases	2026:35:65161:65165	819731	8	True				
ANR	820525	Statement	","	2026:40:65166:65166	819731	9	True				
ANR	820526	Statement	case_op_iter	2026:42:65168:65179	819731	10	True				
ANR	820527	Statement	","	2026:54:65180:65180	819731	11	True				
ANR	820528	Statement	case_op	2026:56:65182:65188	819731	12	True				
ANR	820529	Statement	)	2026:63:65189:65189	819731	13	True				
ANR	820530	CompoundStatement		138:65:3082:3082	819731	14					
ANR	820531	ExpressionStatement	pj_o ( pj )	2027:6:65199:65208	819731	0	True				
ANR	820532	CallExpression	pj_o ( pj )		819731	0					
ANR	820533	Callee	pj_o		819731	0					
ANR	820534	Identifier	pj_o		819731	0					
ANR	820535	ArgumentList	pj		819731	1					
ANR	820536	Argument	pj		819731	0					
ANR	820537	Identifier	pj		819731	0					
ANR	820538	ExpressionStatement	"pj_kn ( pj , ""addr"" , case_op -> addr )"	2028:6:65216:65249	819731	1	True				
ANR	820539	CallExpression	"pj_kn ( pj , ""addr"" , case_op -> addr )"		819731	0					
ANR	820540	Callee	pj_kn		819731	0					
ANR	820541	Identifier	pj_kn		819731	0					
ANR	820542	ArgumentList	pj		819731	1					
ANR	820543	Argument	pj		819731	0					
ANR	820544	Identifier	pj		819731	0					
ANR	820545	Argument	"""addr"""		819731	1					
ANR	820546	PrimaryExpression	"""addr"""		819731	0					
ANR	820547	Argument	case_op -> addr		819731	2					
ANR	820548	PtrMemberAccess	case_op -> addr		819731	0					
ANR	820549	Identifier	case_op		819731	0					
ANR	820550	Identifier	addr		819731	1					
ANR	820551	ExpressionStatement	"pj_kn ( pj , ""jump"" , case_op -> jump )"	2029:6:65257:65290	819731	2	True				
ANR	820552	CallExpression	"pj_kn ( pj , ""jump"" , case_op -> jump )"		819731	0					
ANR	820553	Callee	pj_kn		819731	0					
ANR	820554	Identifier	pj_kn		819731	0					
ANR	820555	ArgumentList	pj		819731	1					
ANR	820556	Argument	pj		819731	0					
ANR	820557	Identifier	pj		819731	0					
ANR	820558	Argument	"""jump"""		819731	1					
ANR	820559	PrimaryExpression	"""jump"""		819731	0					
ANR	820560	Argument	case_op -> jump		819731	2					
ANR	820561	PtrMemberAccess	case_op -> jump		819731	0					
ANR	820562	Identifier	case_op		819731	0					
ANR	820563	Identifier	jump		819731	1					
ANR	820564	ExpressionStatement	"pj_kn ( pj , ""value"" , case_op -> value )"	2030:6:65298:65333	819731	3	True				
ANR	820565	CallExpression	"pj_kn ( pj , ""value"" , case_op -> value )"		819731	0					
ANR	820566	Callee	pj_kn		819731	0					
ANR	820567	Identifier	pj_kn		819731	0					
ANR	820568	ArgumentList	pj		819731	1					
ANR	820569	Argument	pj		819731	0					
ANR	820570	Identifier	pj		819731	0					
ANR	820571	Argument	"""value"""		819731	1					
ANR	820572	PrimaryExpression	"""value"""		819731	0					
ANR	820573	Argument	case_op -> value		819731	2					
ANR	820574	PtrMemberAccess	case_op -> value		819731	0					
ANR	820575	Identifier	case_op		819731	0					
ANR	820576	Identifier	value		819731	1					
ANR	820577	ExpressionStatement	"pj_kn ( pj , ""cond"" , case_op -> cond )"	2031:6:65341:65374	819731	4	True				
ANR	820578	CallExpression	"pj_kn ( pj , ""cond"" , case_op -> cond )"		819731	0					
ANR	820579	Callee	pj_kn		819731	0					
ANR	820580	Identifier	pj_kn		819731	0					
ANR	820581	ArgumentList	pj		819731	1					
ANR	820582	Argument	pj		819731	0					
ANR	820583	Identifier	pj		819731	0					
ANR	820584	Argument	"""cond"""		819731	1					
ANR	820585	PrimaryExpression	"""cond"""		819731	0					
ANR	820586	Argument	case_op -> cond		819731	2					
ANR	820587	PtrMemberAccess	case_op -> cond		819731	0					
ANR	820588	Identifier	case_op		819731	0					
ANR	820589	Identifier	cond		819731	1					
ANR	820590	ExpressionStatement	"pj_kn ( pj , ""bb_ref_to"" , case_op -> bb_ref_to )"	2032:6:65382:65425	819731	5	True				
ANR	820591	CallExpression	"pj_kn ( pj , ""bb_ref_to"" , case_op -> bb_ref_to )"		819731	0					
ANR	820592	Callee	pj_kn		819731	0					
ANR	820593	Identifier	pj_kn		819731	0					
ANR	820594	ArgumentList	pj		819731	1					
ANR	820595	Argument	pj		819731	0					
ANR	820596	Identifier	pj		819731	0					
ANR	820597	Argument	"""bb_ref_to"""		819731	1					
ANR	820598	PrimaryExpression	"""bb_ref_to"""		819731	0					
ANR	820599	Argument	case_op -> bb_ref_to		819731	2					
ANR	820600	PtrMemberAccess	case_op -> bb_ref_to		819731	0					
ANR	820601	Identifier	case_op		819731	0					
ANR	820602	Identifier	bb_ref_to		819731	1					
ANR	820603	ExpressionStatement	"pj_kn ( pj , ""bb_ref_from"" , case_op -> bb_ref_from )"	2033:6:65433:65480	819731	6	True				
ANR	820604	CallExpression	"pj_kn ( pj , ""bb_ref_from"" , case_op -> bb_ref_from )"		819731	0					
ANR	820605	Callee	pj_kn		819731	0					
ANR	820606	Identifier	pj_kn		819731	0					
ANR	820607	ArgumentList	pj		819731	1					
ANR	820608	Argument	pj		819731	0					
ANR	820609	Identifier	pj		819731	0					
ANR	820610	Argument	"""bb_ref_from"""		819731	1					
ANR	820611	PrimaryExpression	"""bb_ref_from"""		819731	0					
ANR	820612	Argument	case_op -> bb_ref_from		819731	2					
ANR	820613	PtrMemberAccess	case_op -> bb_ref_from		819731	0					
ANR	820614	Identifier	case_op		819731	0					
ANR	820615	Identifier	bb_ref_from		819731	1					
ANR	820616	ExpressionStatement	pj_end ( pj )	2034:6:65488:65499	819731	7	True				
ANR	820617	CallExpression	pj_end ( pj )		819731	0					
ANR	820618	Callee	pj_end		819731	0					
ANR	820619	Identifier	pj_end		819731	0					
ANR	820620	ArgumentList	pj		819731	1					
ANR	820621	Argument	pj		819731	0					
ANR	820622	Identifier	pj		819731	0					
ANR	820623	ExpressionStatement	pj_end ( pj )	2037:4:65518:65529	819731	9	True				
ANR	820624	CallExpression	pj_end ( pj )		819731	0					
ANR	820625	Callee	pj_end		819731	0					
ANR	820626	Identifier	pj_end		819731	0					
ANR	820627	ArgumentList	pj		819731	1					
ANR	820628	Argument	pj		819731	0					
ANR	820629	Identifier	pj		819731	0					
ANR	820630	ExpressionStatement	pj_end ( pj )	2038:4:65535:65546	819731	10	True				
ANR	820631	CallExpression	pj_end ( pj )		819731	0					
ANR	820632	Callee	pj_end		819731	0					
ANR	820633	Identifier	pj_end		819731	0					
ANR	820634	ArgumentList	pj		819731	1					
ANR	820635	Argument	pj		819731	0					
ANR	820636	Identifier	pj		819731	0					
ANR	820637	ExpressionStatement	"pj_kn ( pj , ""addr"" , b -> addr )"	2040:3:65556:65583	819731	21	True				
ANR	820638	CallExpression	"pj_kn ( pj , ""addr"" , b -> addr )"		819731	0					
ANR	820639	Callee	pj_kn		819731	0					
ANR	820640	Identifier	pj_kn		819731	0					
ANR	820641	ArgumentList	pj		819731	1					
ANR	820642	Argument	pj		819731	0					
ANR	820643	Identifier	pj		819731	0					
ANR	820644	Argument	"""addr"""		819731	1					
ANR	820645	PrimaryExpression	"""addr"""		819731	0					
ANR	820646	Argument	b -> addr		819731	2					
ANR	820647	PtrMemberAccess	b -> addr		819731	0					
ANR	820648	Identifier	b		819731	0					
ANR	820649	Identifier	addr		819731	1					
ANR	820650	ExpressionStatement	"pj_ki ( pj , ""size"" , b -> size )"	2041:3:65588:65615	819731	22	True				
ANR	820651	CallExpression	"pj_ki ( pj , ""size"" , b -> size )"		819731	0					
ANR	820652	Callee	pj_ki		819731	0					
ANR	820653	Identifier	pj_ki		819731	0					
ANR	820654	ArgumentList	pj		819731	1					
ANR	820655	Argument	pj		819731	0					
ANR	820656	Identifier	pj		819731	0					
ANR	820657	Argument	"""size"""		819731	1					
ANR	820658	PrimaryExpression	"""size"""		819731	0					
ANR	820659	Argument	b -> size		819731	2					
ANR	820660	PtrMemberAccess	b -> size		819731	0					
ANR	820661	Identifier	b		819731	0					
ANR	820662	Identifier	size		819731	1					
ANR	820663	ExpressionStatement	"pj_ki ( pj , ""inputs"" , inputs )"	2042:3:65620:65648	819731	23	True				
ANR	820664	CallExpression	"pj_ki ( pj , ""inputs"" , inputs )"		819731	0					
ANR	820665	Callee	pj_ki		819731	0					
ANR	820666	Identifier	pj_ki		819731	0					
ANR	820667	ArgumentList	pj		819731	1					
ANR	820668	Argument	pj		819731	0					
ANR	820669	Identifier	pj		819731	0					
ANR	820670	Argument	"""inputs"""		819731	1					
ANR	820671	PrimaryExpression	"""inputs"""		819731	0					
ANR	820672	Argument	inputs		819731	2					
ANR	820673	Identifier	inputs		819731	0					
ANR	820674	ExpressionStatement	"pj_ki ( pj , ""outputs"" , outputs )"	2043:3:65653:65683	819731	24	True				
ANR	820675	CallExpression	"pj_ki ( pj , ""outputs"" , outputs )"		819731	0					
ANR	820676	Callee	pj_ki		819731	0					
ANR	820677	Identifier	pj_ki		819731	0					
ANR	820678	ArgumentList	pj		819731	1					
ANR	820679	Argument	pj		819731	0					
ANR	820680	Identifier	pj		819731	0					
ANR	820681	Argument	"""outputs"""		819731	1					
ANR	820682	PrimaryExpression	"""outputs"""		819731	0					
ANR	820683	Argument	outputs		819731	2					
ANR	820684	Identifier	outputs		819731	0					
ANR	820685	ExpressionStatement	"pj_ki ( pj , ""ninstr"" , b -> ninstr )"	2044:3:65688:65719	819731	25	True				
ANR	820686	CallExpression	"pj_ki ( pj , ""ninstr"" , b -> ninstr )"		819731	0					
ANR	820687	Callee	pj_ki		819731	0					
ANR	820688	Identifier	pj_ki		819731	0					
ANR	820689	ArgumentList	pj		819731	1					
ANR	820690	Argument	pj		819731	0					
ANR	820691	Identifier	pj		819731	0					
ANR	820692	Argument	"""ninstr"""		819731	1					
ANR	820693	PrimaryExpression	"""ninstr"""		819731	0					
ANR	820694	Argument	b -> ninstr		819731	2					
ANR	820695	PtrMemberAccess	b -> ninstr		819731	0					
ANR	820696	Identifier	b		819731	0					
ANR	820697	Identifier	ninstr		819731	1					
ANR	820698	ExpressionStatement	"pj_ks ( pj , ""traced"" , r_str_bool ( b -> traced ) )"	2045:3:65724:65768	819731	26	True				
ANR	820699	CallExpression	"pj_ks ( pj , ""traced"" , r_str_bool ( b -> traced ) )"		819731	0					
ANR	820700	Callee	pj_ks		819731	0					
ANR	820701	Identifier	pj_ks		819731	0					
ANR	820702	ArgumentList	pj		819731	1					
ANR	820703	Argument	pj		819731	0					
ANR	820704	Identifier	pj		819731	0					
ANR	820705	Argument	"""traced"""		819731	1					
ANR	820706	PrimaryExpression	"""traced"""		819731	0					
ANR	820707	Argument	r_str_bool ( b -> traced )		819731	2					
ANR	820708	CallExpression	r_str_bool ( b -> traced )		819731	0					
ANR	820709	Callee	r_str_bool		819731	0					
ANR	820710	Identifier	r_str_bool		819731	0					
ANR	820711	ArgumentList	b -> traced		819731	1					
ANR	820712	Argument	b -> traced		819731	0					
ANR	820713	PtrMemberAccess	b -> traced		819731	0					
ANR	820714	Identifier	b		819731	0					
ANR	820715	Identifier	traced		819731	1					
ANR	820716	ExpressionStatement	pj_end ( pj )	2046:3:65773:65784	819731	27	True				
ANR	820717	CallExpression	pj_end ( pj )		819731	0					
ANR	820718	Callee	pj_end		819731	0					
ANR	820719	Identifier	pj_end		819731	0					
ANR	820720	ArgumentList	pj		819731	1					
ANR	820721	Argument	pj		819731	0					
ANR	820722	Identifier	pj		819731	0					
ANR	820723	BreakStatement	break ;	2048:3:65794:65799	819731	39	True				
ANR	820724	Label	case 'i' :	2049:2:65803:65811	819731	40	True				
ANR	820725	CompoundStatement		166:3:3771:3786	819731	41					
ANR	820726	IdentifierDeclStatement	RListIter * iter2 ;	2051:3:65821:65837	819731	0	True				
ANR	820727	IdentifierDecl	* iter2		819731	0					
ANR	820728	IdentifierDeclType	RListIter *		819731	0					
ANR	820729	Identifier	iter2		819731	1					
ANR	820730	IdentifierDeclStatement	RAnalBlock * b2 ;	2052:3:65842:65856	819731	1	True				
ANR	820731	IdentifierDecl	* b2		819731	0					
ANR	820732	IdentifierDeclType	RAnalBlock *		819731	0					
ANR	820733	Identifier	b2		819731	1					
ANR	820734	IdentifierDeclStatement	int inputs = 0 ;	2053:3:65861:65875	819731	2	True				
ANR	820735	IdentifierDecl	inputs = 0		819731	0					
ANR	820736	IdentifierDeclType	int		819731	0					
ANR	820737	Identifier	inputs		819731	1					
ANR	820738	AssignmentExpression	inputs = 0		819731	2		=			
ANR	820739	Identifier	inputs		819731	0					
ANR	820740	PrimaryExpression	0		819731	1					
ANR	820741	IdentifierDeclStatement	int outputs = 0 ;	2054:3:65880:65895	819731	3	True				
ANR	820742	IdentifierDecl	outputs = 0		819731	0					
ANR	820743	IdentifierDeclType	int		819731	0					
ANR	820744	Identifier	outputs		819731	1					
ANR	820745	AssignmentExpression	outputs = 0		819731	2		=			
ANR	820746	Identifier	outputs		819731	0					
ANR	820747	PrimaryExpression	0		819731	1					
ANR	820748	Statement	r_list_foreach	2055:3:65900:65913	819731	4	True				
ANR	820749	Statement	(	2055:18:65915:65915	819731	5	True				
ANR	820750	Statement	fcn	2055:19:65916:65918	819731	6	True				
ANR	820751	Statement	->	2055:22:65919:65920	819731	7	True				
ANR	820752	Statement	bbs	2055:24:65921:65923	819731	8	True				
ANR	820753	Statement	","	2055:27:65924:65924	819731	9	True				
ANR	820754	Statement	iter2	2055:29:65926:65930	819731	10	True				
ANR	820755	Statement	","	2055:34:65931:65931	819731	11	True				
ANR	820756	Statement	b2	2055:36:65933:65934	819731	12	True				
ANR	820757	Statement	)	2055:38:65935:65935	819731	13	True				
ANR	820758	CompoundStatement		167:40:3828:3828	819731	14					
ANR	820759	IfStatement	if ( b2 -> jump == b -> addr )		819731	0					
ANR	820760	Condition	b2 -> jump == b -> addr	2056:8:65947:65965	819731	0	True				
ANR	820761	EqualityExpression	b2 -> jump == b -> addr		819731	0		==			
ANR	820762	PtrMemberAccess	b2 -> jump		819731	0					
ANR	820763	Identifier	b2		819731	0					
ANR	820764	Identifier	jump		819731	1					
ANR	820765	PtrMemberAccess	b -> addr		819731	1					
ANR	820766	Identifier	b		819731	0					
ANR	820767	Identifier	addr		819731	1					
ANR	820768	CompoundStatement		168:29:3859:3859	819731	1					
ANR	820769	ExpressionStatement	inputs ++	2057:5:65975:65983	819731	0	True				
ANR	820770	PostIncDecOperationExpression	inputs ++		819731	0					
ANR	820771	Identifier	inputs		819731	0					
ANR	820772	IncDec	++		819731	1					
ANR	820773	IfStatement	if ( b2 -> fail == b -> addr )		819731	1					
ANR	820774	Condition	b2 -> fail == b -> addr	2059:8:65999:66017	819731	0	True				
ANR	820775	EqualityExpression	b2 -> fail == b -> addr		819731	0		==			
ANR	820776	PtrMemberAccess	b2 -> fail		819731	0					
ANR	820777	Identifier	b2		819731	0					
ANR	820778	Identifier	fail		819731	1					
ANR	820779	PtrMemberAccess	b -> addr		819731	1					
ANR	820780	Identifier	b		819731	0					
ANR	820781	Identifier	addr		819731	1					
ANR	820782	CompoundStatement		171:29:3911:3911	819731	1					
ANR	820783	ExpressionStatement	inputs ++	2060:5:66027:66035	819731	0	True				
ANR	820784	PostIncDecOperationExpression	inputs ++		819731	0					
ANR	820785	Identifier	inputs		819731	0					
ANR	820786	IncDec	++		819731	1					
ANR	820787	IfStatement	if ( b -> jump != UT64_MAX )		819731	15					
ANR	820788	Condition	b -> jump != UT64_MAX	2063:7:66055:66073	819731	0	True				
ANR	820789	EqualityExpression	b -> jump != UT64_MAX		819731	0		!=			
ANR	820790	PtrMemberAccess	b -> jump		819731	0					
ANR	820791	Identifier	b		819731	0					
ANR	820792	Identifier	jump		819731	1					
ANR	820793	Identifier	UT64_MAX		819731	1					
ANR	820794	CompoundStatement		175:28:3967:3967	819731	1					
ANR	820795	ExpressionStatement	outputs ++	2064:4:66082:66092	819731	0	True				
ANR	820796	PostIncDecOperationExpression	outputs ++		819731	0					
ANR	820797	Identifier	outputs		819731	0					
ANR	820798	IncDec	++		819731	1					
ANR	820799	IfStatement	if ( b -> fail != UT64_MAX )		819731	16					
ANR	820800	Condition	b -> fail != UT64_MAX	2066:7:66106:66124	819731	0	True				
ANR	820801	EqualityExpression	b -> fail != UT64_MAX		819731	0		!=			
ANR	820802	PtrMemberAccess	b -> fail		819731	0					
ANR	820803	Identifier	b		819731	0					
ANR	820804	Identifier	fail		819731	1					
ANR	820805	Identifier	UT64_MAX		819731	1					
ANR	820806	CompoundStatement		178:28:4018:4018	819731	1					
ANR	820807	ExpressionStatement	outputs ++	2067:4:66133:66143	819731	0	True				
ANR	820808	PostIncDecOperationExpression	outputs ++		819731	0					
ANR	820809	Identifier	outputs		819731	0					
ANR	820810	IncDec	++		819731	1					
ANR	820811	IfStatement	if ( b -> switch_op )		819731	17					
ANR	820812	Condition	b -> switch_op	2069:7:66157:66168	819731	0	True				
ANR	820813	PtrMemberAccess	b -> switch_op		819731	0					
ANR	820814	Identifier	b		819731	0					
ANR	820815	Identifier	switch_op		819731	1					
ANR	820816	CompoundStatement		182:4:4068:4132	819731	1					
ANR	820817	IdentifierDeclStatement	"RList * unique_cases = r_list_uniq ( b -> switch_op -> cases , casecmp ) ;"	2070:4:66177:66241	819731	0	True				
ANR	820818	IdentifierDecl	"* unique_cases = r_list_uniq ( b -> switch_op -> cases , casecmp )"		819731	0					
ANR	820819	IdentifierDeclType	RList *		819731	0					
ANR	820820	Identifier	unique_cases		819731	1					
ANR	820821	AssignmentExpression	"* unique_cases = r_list_uniq ( b -> switch_op -> cases , casecmp )"		819731	2		=			
ANR	820822	Identifier	unique_cases		819731	0					
ANR	820823	CallExpression	"r_list_uniq ( b -> switch_op -> cases , casecmp )"		819731	1					
ANR	820824	Callee	r_list_uniq		819731	0					
ANR	820825	Identifier	r_list_uniq		819731	0					
ANR	820826	ArgumentList	b -> switch_op -> cases		819731	1					
ANR	820827	Argument	b -> switch_op -> cases		819731	0					
ANR	820828	PtrMemberAccess	b -> switch_op -> cases		819731	0					
ANR	820829	PtrMemberAccess	b -> switch_op		819731	0					
ANR	820830	Identifier	b		819731	0					
ANR	820831	Identifier	switch_op		819731	1					
ANR	820832	Identifier	cases		819731	1					
ANR	820833	Argument	casecmp		819731	1					
ANR	820834	Identifier	casecmp		819731	0					
ANR	820835	ExpressionStatement	outputs += r_list_length ( unique_cases )	2071:4:66247:66286	819731	1	True				
ANR	820836	AssignmentExpression	outputs += r_list_length ( unique_cases )		819731	0		+=			
ANR	820837	Identifier	outputs		819731	0					
ANR	820838	CallExpression	r_list_length ( unique_cases )		819731	1					
ANR	820839	Callee	r_list_length		819731	0					
ANR	820840	Identifier	r_list_length		819731	0					
ANR	820841	ArgumentList	unique_cases		819731	1					
ANR	820842	Argument	unique_cases		819731	0					
ANR	820843	Identifier	unique_cases		819731	0					
ANR	820844	ExpressionStatement	r_list_free ( unique_cases )	2072:4:66292:66318	819731	2	True				
ANR	820845	CallExpression	r_list_free ( unique_cases )		819731	0					
ANR	820846	Callee	r_list_free		819731	0					
ANR	820847	Identifier	r_list_free		819731	0					
ANR	820848	ArgumentList	unique_cases		819731	1					
ANR	820849	Argument	unique_cases		819731	0					
ANR	820850	Identifier	unique_cases		819731	0					
ANR	820851	IfStatement	if ( b -> jump != UT64_MAX )		819731	18					
ANR	820852	Condition	b -> jump != UT64_MAX	2074:7:66332:66350	819731	0	True				
ANR	820853	EqualityExpression	b -> jump != UT64_MAX		819731	0		!=			
ANR	820854	PtrMemberAccess	b -> jump		819731	0					
ANR	820855	Identifier	b		819731	0					
ANR	820856	Identifier	jump		819731	1					
ANR	820857	Identifier	UT64_MAX		819731	1					
ANR	820858	CompoundStatement		186:28:4244:4244	819731	1					
ANR	820859	Statement	r_cons_printf	2075:4:66359:66371	819731	0	True				
ANR	820860	Statement	(	2075:18:66373:66373	819731	1	True				
ANR	820861	Statement	"""jump: 0x%08"""	2075:19:66374:66386	819731	2	True				
ANR	820862	Statement	PFMT64x	2075:32:66387:66393	819731	3	True				
ANR	820863	Statement	"""\\n"""	2075:39:66394:66397	819731	4	True				
ANR	820864	Statement	","	2075:43:66398:66398	819731	5	True				
ANR	820865	Statement	b	2075:45:66400:66400	819731	6	True				
ANR	820866	Statement	->	2075:46:66401:66402	819731	7	True				
ANR	820867	Statement	jump	2075:48:66403:66406	819731	8	True				
ANR	820868	Statement	)	2075:52:66407:66407	819731	9	True				
ANR	820869	ExpressionStatement		2075:53:66408:66408	819731	10	True				
ANR	820870	IfStatement	if ( b -> fail != UT64_MAX )		819731	19					
ANR	820871	Condition	b -> fail != UT64_MAX	2077:7:66422:66440	819731	0	True				
ANR	820872	EqualityExpression	b -> fail != UT64_MAX		819731	0		!=			
ANR	820873	PtrMemberAccess	b -> fail		819731	0					
ANR	820874	Identifier	b		819731	0					
ANR	820875	Identifier	fail		819731	1					
ANR	820876	Identifier	UT64_MAX		819731	1					
ANR	820877	CompoundStatement		189:28:4334:4334	819731	1					
ANR	820878	Statement	r_cons_printf	2078:4:66449:66461	819731	0	True				
ANR	820879	Statement	(	2078:18:66463:66463	819731	1	True				
ANR	820880	Statement	"""fail: 0x%08"""	2078:19:66464:66476	819731	2	True				
ANR	820881	Statement	PFMT64x	2078:32:66477:66483	819731	3	True				
ANR	820882	Statement	"""\\n"""	2078:39:66484:66487	819731	4	True				
ANR	820883	Statement	","	2078:43:66488:66488	819731	5	True				
ANR	820884	Statement	b	2078:45:66490:66490	819731	6	True				
ANR	820885	Statement	->	2078:46:66491:66492	819731	7	True				
ANR	820886	Statement	fail	2078:48:66493:66496	819731	8	True				
ANR	820887	Statement	)	2078:52:66497:66497	819731	9	True				
ANR	820888	ExpressionStatement		2078:53:66498:66498	819731	10	True				
ANR	820889	Statement	r_cons_printf	2080:3:66508:66520	819731	20	True				
ANR	820890	Statement	(	2080:17:66522:66522	819731	21	True				
ANR	820891	Statement	"""addr: 0x%08"""	2080:18:66523:66535	819731	22	True				
ANR	820892	Statement	PFMT64x	2080:31:66536:66542	819731	23	True				
ANR	820893	Statement	"""\\nsize: %d\\ninputs: %d\\noutputs: %d\\nninstr: %d\\ntraced: %s\\n"""	2080:38:66543:66605	819731	24	True				
ANR	820894	Statement	","	2080:101:66606:66606	819731	25	True				
ANR	820895	Statement	b	2081:4:66612:66612	819731	26	True				
ANR	820896	Statement	->	2081:5:66613:66614	819731	27	True				
ANR	820897	Statement	addr	2081:7:66615:66618	819731	28	True				
ANR	820898	Statement	","	2081:11:66619:66619	819731	29	True				
ANR	820899	Statement	b	2081:13:66621:66621	819731	30	True				
ANR	820900	Statement	->	2081:14:66622:66623	819731	31	True				
ANR	820901	Statement	size	2081:16:66624:66627	819731	32	True				
ANR	820902	Statement	","	2081:20:66628:66628	819731	33	True				
ANR	820903	Statement	inputs	2081:22:66630:66635	819731	34	True				
ANR	820904	Statement	","	2081:28:66636:66636	819731	35	True				
ANR	820905	Statement	outputs	2081:30:66638:66644	819731	36	True				
ANR	820906	Statement	","	2081:37:66645:66645	819731	37	True				
ANR	820907	Statement	b	2081:39:66647:66647	819731	38	True				
ANR	820908	Statement	->	2081:40:66648:66649	819731	39	True				
ANR	820909	Statement	ninstr	2081:42:66650:66655	819731	40	True				
ANR	820910	Statement	","	2081:48:66656:66656	819731	41	True				
ANR	820911	Statement	r_str_bool	2081:50:66658:66667	819731	42	True				
ANR	820912	Statement	(	2081:61:66669:66669	819731	43	True				
ANR	820913	Statement	b	2081:62:66670:66670	819731	44	True				
ANR	820914	Statement	->	2081:63:66671:66672	819731	45	True				
ANR	820915	Statement	traced	2081:65:66673:66678	819731	46	True				
ANR	820916	Statement	)	2081:71:66679:66679	819731	47	True				
ANR	820917	Statement	)	2081:72:66680:66680	819731	48	True				
ANR	820918	ExpressionStatement		2081:73:66681:66681	819731	49	True				
ANR	820919	BreakStatement	break ;	2083:3:66691:66696	819731	42	True				
ANR	820920	Label	default :	2084:2:66700:66707	819731	43	True				
ANR	820921	Identifier	default		819731	0					
ANR	820922	ExpressionStatement	"tp = r_debug_trace_get ( core -> dbg , b -> addr )"	2085:3:66712:66755	819731	44	True				
ANR	820923	AssignmentExpression	"tp = r_debug_trace_get ( core -> dbg , b -> addr )"		819731	0		=			
ANR	820924	Identifier	tp		819731	0					
ANR	820925	CallExpression	"r_debug_trace_get ( core -> dbg , b -> addr )"		819731	1					
ANR	820926	Callee	r_debug_trace_get		819731	0					
ANR	820927	Identifier	r_debug_trace_get		819731	0					
ANR	820928	ArgumentList	core -> dbg		819731	1					
ANR	820929	Argument	core -> dbg		819731	0					
ANR	820930	PtrMemberAccess	core -> dbg		819731	0					
ANR	820931	Identifier	core		819731	0					
ANR	820932	Identifier	dbg		819731	1					
ANR	820933	Argument	b -> addr		819731	1					
ANR	820934	PtrMemberAccess	b -> addr		819731	0					
ANR	820935	Identifier	b		819731	0					
ANR	820936	Identifier	addr		819731	1					
ANR	820937	Statement	r_cons_printf	2086:3:66760:66772	819731	45	True				
ANR	820938	Statement	(	2086:17:66774:66774	819731	46	True				
ANR	820939	Statement	"""0x%08"""	2086:18:66775:66781	819731	47	True				
ANR	820940	Statement	PFMT64x	2086:26:66783:66789	819731	48	True				
ANR	820941	Statement	""" 0x%08"""	2086:34:66791:66798	819731	49	True				
ANR	820942	Statement	PFMT64x	2086:43:66800:66806	819731	50	True				
ANR	820943	Statement	""" %02X:%04X %d"""	2086:51:66808:66822	819731	51	True				
ANR	820944	Statement	","	2086:66:66823:66823	819731	52	True				
ANR	820945	Statement	b	2087:4:66829:66829	819731	53	True				
ANR	820946	Statement	->	2087:5:66830:66831	819731	54	True				
ANR	820947	Statement	addr	2087:7:66832:66835	819731	55	True				
ANR	820948	Statement	","	2087:11:66836:66836	819731	56	True				
ANR	820949	Statement	b	2087:13:66838:66838	819731	57	True				
ANR	820950	Statement	->	2087:14:66839:66840	819731	58	True				
ANR	820951	Statement	addr	2087:16:66841:66844	819731	59	True				
ANR	820952	Statement	+	2087:21:66846:66846	819731	60	True				
ANR	820953	Statement	b	2087:23:66848:66848	819731	61	True				
ANR	820954	Statement	->	2087:24:66849:66850	819731	62	True				
ANR	820955	Statement	size	2087:26:66851:66854	819731	63	True				
ANR	820956	Statement	","	2087:30:66855:66855	819731	64	True				
ANR	820957	Statement	tp	2088:4:66861:66862	819731	65	True				
ANR	820958	Statement	?	2088:6:66863:66863	819731	66	True				
ANR	820959	Statement	tp	2088:8:66865:66866	819731	67	True				
ANR	820960	Statement	->	2088:10:66867:66868	819731	68	True				
ANR	820961	Label	times :	2088:12:66869:66874	819731	69	True				
ANR	820962	Identifier	times		819731	0					
ANR	820963	Statement	0	2088:19:66876:66876	819731	70	True				
ANR	820964	Statement	","	2088:20:66877:66877	819731	71	True				
ANR	820965	Statement	tp	2088:22:66879:66880	819731	72	True				
ANR	820966	Statement	?	2088:24:66881:66881	819731	73	True				
ANR	820967	Statement	tp	2088:26:66883:66884	819731	74	True				
ANR	820968	Statement	->	2088:28:66885:66886	819731	75	True				
ANR	820969	Label	count :	2088:30:66887:66892	819731	76	True				
ANR	820970	Identifier	count		819731	0					
ANR	820971	Statement	0	2088:37:66894:66894	819731	77	True				
ANR	820972	Statement	","	2088:38:66895:66895	819731	78	True				
ANR	820973	Statement	b	2089:4:66901:66901	819731	79	True				
ANR	820974	Statement	->	2089:5:66902:66903	819731	80	True				
ANR	820975	Statement	size	2089:7:66904:66907	819731	81	True				
ANR	820976	Statement	)	2089:11:66908:66908	819731	82	True				
ANR	820977	ExpressionStatement		2089:12:66909:66909	819731	83	True				
ANR	820978	IfStatement	if ( b -> jump != UT64_MAX )		819731	84					
ANR	820979	Condition	b -> jump != UT64_MAX	2090:7:66918:66936	819731	0	True				
ANR	820980	EqualityExpression	b -> jump != UT64_MAX		819731	0		!=			
ANR	820981	PtrMemberAccess	b -> jump		819731	0					
ANR	820982	Identifier	b		819731	0					
ANR	820983	Identifier	jump		819731	1					
ANR	820984	Identifier	UT64_MAX		819731	1					
ANR	820985	CompoundStatement		202:28:4830:4830	819731	1					
ANR	820986	Statement	r_cons_printf	2091:4:66945:66957	819731	0	True				
ANR	820987	Statement	(	2091:18:66959:66959	819731	1	True				
ANR	820988	Statement	""" j 0x%08"""	2091:19:66960:66969	819731	2	True				
ANR	820989	Statement	PFMT64x	2091:30:66971:66977	819731	3	True				
ANR	820990	Statement	","	2091:37:66978:66978	819731	4	True				
ANR	820991	Statement	b	2091:39:66980:66980	819731	5	True				
ANR	820992	Statement	->	2091:40:66981:66982	819731	6	True				
ANR	820993	Statement	jump	2091:42:66983:66986	819731	7	True				
ANR	820994	Statement	)	2091:46:66987:66987	819731	8	True				
ANR	820995	ExpressionStatement		2091:47:66988:66988	819731	9	True				
ANR	820996	IfStatement	if ( b -> fail != UT64_MAX )		819731	85					
ANR	820997	Condition	b -> fail != UT64_MAX	2093:7:67002:67020	819731	0	True				
ANR	820998	EqualityExpression	b -> fail != UT64_MAX		819731	0		!=			
ANR	820999	PtrMemberAccess	b -> fail		819731	0					
ANR	821000	Identifier	b		819731	0					
ANR	821001	Identifier	fail		819731	1					
ANR	821002	Identifier	UT64_MAX		819731	1					
ANR	821003	CompoundStatement		205:28:4914:4914	819731	1					
ANR	821004	Statement	r_cons_printf	2094:4:67029:67041	819731	0	True				
ANR	821005	Statement	(	2094:18:67043:67043	819731	1	True				
ANR	821006	Statement	""" f 0x%08"""	2094:19:67044:67053	819731	2	True				
ANR	821007	Statement	PFMT64x	2094:30:67055:67061	819731	3	True				
ANR	821008	Statement	","	2094:37:67062:67062	819731	4	True				
ANR	821009	Statement	b	2094:39:67064:67064	819731	5	True				
ANR	821010	Statement	->	2094:40:67065:67066	819731	6	True				
ANR	821011	Statement	fail	2094:42:67067:67070	819731	7	True				
ANR	821012	Statement	)	2094:46:67071:67071	819731	8	True				
ANR	821013	ExpressionStatement		2094:47:67072:67072	819731	9	True				
ANR	821014	IfStatement	if ( b -> switch_op )		819731	86					
ANR	821015	Condition	b -> switch_op	2096:7:67086:67097	819731	0	True				
ANR	821016	PtrMemberAccess	b -> switch_op		819731	0					
ANR	821017	Identifier	b		819731	0					
ANR	821018	Identifier	switch_op		819731	1					
ANR	821019	CompoundStatement		211:4:5040:5104	819731	1					
ANR	821020	IdentifierDeclStatement	RAnalCaseOp * cop ;	2097:4:67106:67122	819731	0	True				
ANR	821021	IdentifierDecl	* cop		819731	0					
ANR	821022	IdentifierDeclType	RAnalCaseOp *		819731	0					
ANR	821023	Identifier	cop		819731	1					
ANR	821024	IdentifierDeclStatement	RListIter * iter ;	2098:4:67128:67143	819731	1	True				
ANR	821025	IdentifierDecl	* iter		819731	0					
ANR	821026	IdentifierDeclType	RListIter *		819731	0					
ANR	821027	Identifier	iter		819731	1					
ANR	821028	IdentifierDeclStatement	"RList * unique_cases = r_list_uniq ( b -> switch_op -> cases , casecmp ) ;"	2099:4:67149:67213	819731	2	True				
ANR	821029	IdentifierDecl	"* unique_cases = r_list_uniq ( b -> switch_op -> cases , casecmp )"		819731	0					
ANR	821030	IdentifierDeclType	RList *		819731	0					
ANR	821031	Identifier	unique_cases		819731	1					
ANR	821032	AssignmentExpression	"* unique_cases = r_list_uniq ( b -> switch_op -> cases , casecmp )"		819731	2		=			
ANR	821033	Identifier	unique_cases		819731	0					
ANR	821034	CallExpression	"r_list_uniq ( b -> switch_op -> cases , casecmp )"		819731	1					
ANR	821035	Callee	r_list_uniq		819731	0					
ANR	821036	Identifier	r_list_uniq		819731	0					
ANR	821037	ArgumentList	b -> switch_op -> cases		819731	1					
ANR	821038	Argument	b -> switch_op -> cases		819731	0					
ANR	821039	PtrMemberAccess	b -> switch_op -> cases		819731	0					
ANR	821040	PtrMemberAccess	b -> switch_op		819731	0					
ANR	821041	Identifier	b		819731	0					
ANR	821042	Identifier	switch_op		819731	1					
ANR	821043	Identifier	cases		819731	1					
ANR	821044	Argument	casecmp		819731	1					
ANR	821045	Identifier	casecmp		819731	0					
ANR	821046	Statement	r_list_foreach	2100:4:67219:67232	819731	3	True				
ANR	821047	Statement	(	2100:19:67234:67234	819731	4	True				
ANR	821048	Statement	unique_cases	2100:20:67235:67246	819731	5	True				
ANR	821049	Statement	","	2100:32:67247:67247	819731	6	True				
ANR	821050	Statement	iter	2100:34:67249:67252	819731	7	True				
ANR	821051	Statement	","	2100:38:67253:67253	819731	8	True				
ANR	821052	Statement	cop	2100:40:67255:67257	819731	9	True				
ANR	821053	Statement	)	2100:43:67258:67258	819731	10	True				
ANR	821054	CompoundStatement		212:45:5151:5151	819731	11					
ANR	821055	Statement	r_cons_printf	2101:5:67267:67279	819731	0	True				
ANR	821056	Statement	(	2101:19:67281:67281	819731	1	True				
ANR	821057	Statement	""" s 0x%08"""	2101:20:67282:67291	819731	2	True				
ANR	821058	Statement	PFMT64x	2101:31:67293:67299	819731	3	True				
ANR	821059	Statement	","	2101:38:67300:67300	819731	4	True				
ANR	821060	Statement	cop	2101:40:67302:67304	819731	5	True				
ANR	821061	Statement	->	2101:43:67305:67306	819731	6	True				
ANR	821062	Statement	addr	2101:45:67307:67310	819731	7	True				
ANR	821063	Statement	)	2101:49:67311:67311	819731	8	True				
ANR	821064	ExpressionStatement		2101:50:67312:67312	819731	9	True				
ANR	821065	ExpressionStatement	r_list_free ( unique_cases )	2103:4:67324:67350	819731	12	True				
ANR	821066	CallExpression	r_list_free ( unique_cases )		819731	0					
ANR	821067	Callee	r_list_free		819731	0					
ANR	821068	Identifier	r_list_free		819731	0					
ANR	821069	ArgumentList	unique_cases		819731	1					
ANR	821070	Argument	unique_cases		819731	0					
ANR	821071	Identifier	unique_cases		819731	0					
ANR	821072	ExpressionStatement	r_cons_newline ( )	2105:3:67360:67377	819731	87	True				
ANR	821073	CallExpression	r_cons_newline ( )		819731	0					
ANR	821074	Callee	r_cons_newline		819731	0					
ANR	821075	Identifier	r_cons_newline		819731	0					
ANR	821076	ArgumentList			819731	1					
ANR	821077	BreakStatement	break ;	2106:3:67382:67387	819731	88	True				
ANR	821078	IfStatement	if ( mode == 'j' )		819731	28					
ANR	821079	Condition	mode == 'j'	2109:5:67401:67411	819731	0	True				
ANR	821080	EqualityExpression	mode == 'j'		819731	0		==			
ANR	821081	Identifier	mode		819731	0					
ANR	821082	PrimaryExpression	'j'		819731	1					
ANR	821083	CompoundStatement		221:18:5305:5305	819731	1					
ANR	821084	ExpressionStatement	pj_end ( pj )	2110:2:67418:67429	819731	0	True				
ANR	821085	CallExpression	pj_end ( pj )		819731	0					
ANR	821086	Callee	pj_end		819731	0					
ANR	821087	Identifier	pj_end		819731	0					
ANR	821088	ArgumentList	pj		819731	1					
ANR	821089	Argument	pj		819731	0					
ANR	821090	Identifier	pj		819731	0					
ANR	821091	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	2111:2:67433:67464	819731	1	True				
ANR	821092	CallExpression	r_cons_println ( pj_string ( pj ) )		819731	0					
ANR	821093	Callee	r_cons_println		819731	0					
ANR	821094	Identifier	r_cons_println		819731	0					
ANR	821095	ArgumentList	pj_string ( pj )		819731	1					
ANR	821096	Argument	pj_string ( pj )		819731	0					
ANR	821097	CallExpression	pj_string ( pj )		819731	0					
ANR	821098	Callee	pj_string		819731	0					
ANR	821099	Identifier	pj_string		819731	0					
ANR	821100	ArgumentList	pj		819731	1					
ANR	821101	Argument	pj		819731	0					
ANR	821102	Identifier	pj		819731	0					
ANR	821103	ExpressionStatement	pj_free ( pj )	2112:2:67468:67480	819731	2	True				
ANR	821104	CallExpression	pj_free ( pj )		819731	0					
ANR	821105	Callee	pj_free		819731	0					
ANR	821106	Identifier	pj_free		819731	0					
ANR	821107	ArgumentList	pj		819731	1					
ANR	821108	Argument	pj		819731	0					
ANR	821109	Identifier	pj		819731	0					
ANR	821110	ReturnStatement	return true ;	2114:1:67486:67497	819731	29	True				
ANR	821111	Identifier	true		819731	0					
ANR	821112	ReturnType	static bool		819731	1					
ANR	821113	Identifier	anal_fcn_list_bb		819731	2					
ANR	821114	ParameterList	"RCore * core , const char * input , bool one"		819731	3					
ANR	821115	Parameter	RCore * core	1889:29:62066:62076	819731	0	True				
ANR	821116	ParameterType	RCore *		819731	0					
ANR	821117	Identifier	core		819731	1					
ANR	821118	Parameter	const char * input	1889:42:62079:62095	819731	1	True				
ANR	821119	ParameterType	const char *		819731	0					
ANR	821120	Identifier	input		819731	1					
ANR	821121	Parameter	bool one	1889:61:62098:62105	819731	2	True				
ANR	821122	ParameterType	bool		819731	0					
ANR	821123	Identifier	one		819731	1					
ANR	821124	CFGEntryNode	ENTRY		819731		True				
ANR	821125	CFGExitNode	EXIT		819731		True				
ANR	821126	CFGErrorNode	ERROR		819731		True				
ANR	821127	Symbol	outputs		819731						
ANR	821128	Symbol	pj_string		819731						
ANR	821129	Symbol	* fcn		819731						
ANR	821130	Symbol	casecmp		819731						
ANR	821131	Symbol	cop		819731						
ANR	821132	Symbol	inputs		819731						
ANR	821133	Symbol	* input		819731						
ANR	821134	Symbol	core -> offset		819731						
ANR	821135	Symbol	r_anal_bb_opaddr_i		819731						
ANR	821136	Symbol	bb_cmp		819731						
ANR	821137	Symbol	* b -> switch_op		819731						
ANR	821138	Symbol	b -> ninstr		819731						
ANR	821139	Symbol	mode		819731						
ANR	821140	Symbol	b2		819731						
ANR	821141	Symbol	unique_cases		819731						
ANR	821142	Symbol	r_listinfo_new		819731						
ANR	821143	Symbol	b -> switch_op		819731						
ANR	821144	Symbol	core -> num		819731						
ANR	821145	Symbol	info		819731						
ANR	821146	Symbol	core -> blocksize		819731						
ANR	821147	Symbol	strcmp		819731						
ANR	821148	Symbol	NULL		819731						
ANR	821149	Symbol	r_list_newf		819731						
ANR	821150	Symbol	r_cons_get_size		819731						
ANR	821151	Symbol	inter		819731						
ANR	821152	Symbol	* case_op		819731						
ANR	821153	Symbol	b -> traced		819731						
ANR	821154	Symbol	iter		819731						
ANR	821155	Symbol	* * b		819731						
ANR	821156	Symbol	core		819731						
ANR	821157	Symbol	input		819731						
ANR	821158	Symbol	case_op -> jump		819731						
ANR	821159	Symbol	r_config_get_i		819731						
ANR	821160	Symbol	true		819731						
ANR	821161	Symbol	case_op -> cond		819731						
ANR	821162	Symbol	case_op		819731						
ANR	821163	Symbol	b2 -> fail		819731						
ANR	821164	Symbol	b -> size		819731						
ANR	821165	Symbol	* core		819731						
ANR	821166	Symbol	core -> anal		819731						
ANR	821167	Symbol	b -> switch_op -> addr		819731						
ANR	821168	Symbol	b -> switch_op -> min_val		819731						
ANR	821169	Symbol	r_num_math		819731						
ANR	821170	Symbol	b -> addr		819731						
ANR	821171	Symbol	fcn		819731						
ANR	821172	Symbol	case_op -> value		819731						
ANR	821173	Symbol	flist		819731						
ANR	821174	Symbol	* b2		819731						
ANR	821175	Symbol	b -> switch_op -> cases		819731						
ANR	821176	Symbol	r_list_uniq		819731						
ANR	821177	Symbol	b -> switch_op -> def_val		819731						
ANR	821178	Symbol	UT64_MAX		819731						
ANR	821179	Symbol	addr		819731						
ANR	821180	Symbol	core -> config		819731						
ANR	821181	Symbol	b -> fail		819731						
ANR	821182	Symbol	case_op_iter		819731						
ANR	821183	Symbol	r_str_bool		819731						
ANR	821184	Symbol	b		819731						
ANR	821185	Symbol	retaddr		819731						
ANR	821186	Symbol	case_op -> bb_ref_from		819731						
ANR	821187	Symbol	one		819731						
ANR	821188	Symbol	iter2		819731						
ANR	821189	Symbol	case_op -> addr		819731						
ANR	821190	Symbol	false		819731						
ANR	821191	Symbol	r_debug_trace_get		819731						
ANR	821192	Symbol	* b		819731						
ANR	821193	Symbol	b -> jump		819731						
ANR	821194	Symbol	case_op -> bb_ref_to		819731						
ANR	821195	Symbol	b -> switch_op -> max_val		819731						
ANR	821196	Symbol	r_anal_get_fcn_in		819731						
ANR	821197	Symbol	fcn -> bbs		819731						
ANR	821198	Symbol	b2 -> jump		819731						
ANR	821199	Symbol	pj		819731						
ANR	821200	Symbol	pj_new		819731						
ANR	821201	Symbol	tp		819731						
ANR	821202	Symbol	bbaddr		819731						
ANR	821203	Symbol	r_list_length		819731						
ANR	821204	Symbol	r_listinfo_free		819731						
ANR	821205	Symbol	b -> label		819731						
ANR	821206	Symbol	core -> dbg		819731						
ANR	821207	Function	anal_bb_edge	2117:0:67502:68250							
ANR	821208	FunctionDef	"anal_bb_edge (RCore * core , const char * input)"		821207	0					
ANR	821209	CompoundStatement		2117:58:67560:68250	821207	0					
ANR	821210	IdentifierDeclStatement	char * arg = strdup ( r_str_trim_ro ( input ) ) ;	2119:1:67602:67644	821207	0	True				
ANR	821211	IdentifierDecl	* arg = strdup ( r_str_trim_ro ( input ) )		821207	0					
ANR	821212	IdentifierDeclType	char *		821207	0					
ANR	821213	Identifier	arg		821207	1					
ANR	821214	AssignmentExpression	* arg = strdup ( r_str_trim_ro ( input ) )		821207	2		=			
ANR	821215	Identifier	arg		821207	0					
ANR	821216	CallExpression	strdup ( r_str_trim_ro ( input ) )		821207	1					
ANR	821217	Callee	strdup		821207	0					
ANR	821218	Identifier	strdup		821207	0					
ANR	821219	ArgumentList	r_str_trim_ro ( input )		821207	1					
ANR	821220	Argument	r_str_trim_ro ( input )		821207	0					
ANR	821221	CallExpression	r_str_trim_ro ( input )		821207	0					
ANR	821222	Callee	r_str_trim_ro		821207	0					
ANR	821223	Identifier	r_str_trim_ro		821207	0					
ANR	821224	ArgumentList	input		821207	1					
ANR	821225	Argument	input		821207	0					
ANR	821226	Identifier	input		821207	0					
ANR	821227	IdentifierDeclStatement	"char * sp = strchr ( arg , ' ' ) ;"	2120:1:67647:67675	821207	1	True				
ANR	821228	IdentifierDecl	"* sp = strchr ( arg , ' ' )"		821207	0					
ANR	821229	IdentifierDeclType	char *		821207	0					
ANR	821230	Identifier	sp		821207	1					
ANR	821231	AssignmentExpression	"* sp = strchr ( arg , ' ' )"		821207	2		=			
ANR	821232	Identifier	sp		821207	0					
ANR	821233	CallExpression	"strchr ( arg , ' ' )"		821207	1					
ANR	821234	Callee	strchr		821207	0					
ANR	821235	Identifier	strchr		821207	0					
ANR	821236	ArgumentList	arg		821207	1					
ANR	821237	Argument	arg		821207	0					
ANR	821238	Identifier	arg		821207	0					
ANR	821239	Argument	' '		821207	1					
ANR	821240	PrimaryExpression	' '		821207	0					
ANR	821241	IfStatement	if ( sp )		821207	2					
ANR	821242	Condition	sp	2121:5:67682:67683	821207	0	True				
ANR	821243	Identifier	sp		821207	0					
ANR	821244	CompoundStatement		9:2:229:290	821207	1					
ANR	821245	ExpressionStatement	* sp ++ = 0	2122:2:67690:67699	821207	0	True				
ANR	821246	AssignmentExpression	* sp ++ = 0		821207	0		=			
ANR	821247	UnaryOperationExpression	* sp ++		821207	0					
ANR	821248	UnaryOperator	*		821207	0					
ANR	821249	PostIncDecOperationExpression	sp ++		821207	1					
ANR	821250	Identifier	sp		821207	0					
ANR	821251	IncDec	++		821207	1					
ANR	821252	PrimaryExpression	0		821207	1					
ANR	821253	IdentifierDeclStatement	"ut64 sw_at = r_num_math ( core -> num , arg ) ;"	2123:2:67703:67743	821207	1	True				
ANR	821254	IdentifierDecl	"sw_at = r_num_math ( core -> num , arg )"		821207	0					
ANR	821255	IdentifierDeclType	ut64		821207	0					
ANR	821256	Identifier	sw_at		821207	1					
ANR	821257	AssignmentExpression	"sw_at = r_num_math ( core -> num , arg )"		821207	2		=			
ANR	821258	Identifier	sw_at		821207	0					
ANR	821259	CallExpression	"r_num_math ( core -> num , arg )"		821207	1					
ANR	821260	Callee	r_num_math		821207	0					
ANR	821261	Identifier	r_num_math		821207	0					
ANR	821262	ArgumentList	core -> num		821207	1					
ANR	821263	Argument	core -> num		821207	0					
ANR	821264	PtrMemberAccess	core -> num		821207	0					
ANR	821265	Identifier	core		821207	0					
ANR	821266	Identifier	num		821207	1					
ANR	821267	Argument	arg		821207	1					
ANR	821268	Identifier	arg		821207	0					
ANR	821269	IdentifierDeclStatement	"ut64 cs_at = r_num_math ( core -> num , sp ) ;"	2124:2:67747:67786	821207	2	True				
ANR	821270	IdentifierDecl	"cs_at = r_num_math ( core -> num , sp )"		821207	0					
ANR	821271	IdentifierDeclType	ut64		821207	0					
ANR	821272	Identifier	cs_at		821207	1					
ANR	821273	AssignmentExpression	"cs_at = r_num_math ( core -> num , sp )"		821207	2		=			
ANR	821274	Identifier	cs_at		821207	0					
ANR	821275	CallExpression	"r_num_math ( core -> num , sp )"		821207	1					
ANR	821276	Callee	r_num_math		821207	0					
ANR	821277	Identifier	r_num_math		821207	0					
ANR	821278	ArgumentList	core -> num		821207	1					
ANR	821279	Argument	core -> num		821207	0					
ANR	821280	PtrMemberAccess	core -> num		821207	0					
ANR	821281	Identifier	core		821207	0					
ANR	821282	Identifier	num		821207	1					
ANR	821283	Argument	sp		821207	1					
ANR	821284	Identifier	sp		821207	0					
ANR	821285	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , sw_at , 0 ) ;"	2125:2:67790:67851	821207	3	True				
ANR	821286	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , sw_at , 0 )"		821207	0					
ANR	821287	IdentifierDeclType	RAnalFunction *		821207	0					
ANR	821288	Identifier	fcn		821207	1					
ANR	821289	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , sw_at , 0 )"		821207	2		=			
ANR	821290	Identifier	fcn		821207	0					
ANR	821291	CallExpression	"r_anal_get_fcn_in ( core -> anal , sw_at , 0 )"		821207	1					
ANR	821292	Callee	r_anal_get_fcn_in		821207	0					
ANR	821293	Identifier	r_anal_get_fcn_in		821207	0					
ANR	821294	ArgumentList	core -> anal		821207	1					
ANR	821295	Argument	core -> anal		821207	0					
ANR	821296	PtrMemberAccess	core -> anal		821207	0					
ANR	821297	Identifier	core		821207	0					
ANR	821298	Identifier	anal		821207	1					
ANR	821299	Argument	sw_at		821207	1					
ANR	821300	Identifier	sw_at		821207	0					
ANR	821301	Argument	0		821207	2					
ANR	821302	PrimaryExpression	0		821207	0					
ANR	821303	IfStatement	if ( fcn )		821207	4					
ANR	821304	Condition	fcn	2126:6:67859:67861	821207	0	True				
ANR	821305	Identifier	fcn		821207	0					
ANR	821306	CompoundStatement		12:3:327:342	821207	1					
ANR	821307	IdentifierDeclStatement	RAnalBlock * bb ;	2127:3:67869:67883	821207	0	True				
ANR	821308	IdentifierDecl	* bb		821207	0					
ANR	821309	IdentifierDeclType	RAnalBlock *		821207	0					
ANR	821310	Identifier	bb		821207	1					
ANR	821311	IdentifierDeclStatement	RListIter * iter ;	2128:3:67888:67903	821207	1	True				
ANR	821312	IdentifierDecl	* iter		821207	0					
ANR	821313	IdentifierDeclType	RListIter *		821207	0					
ANR	821314	Identifier	iter		821207	1					
ANR	821315	Statement	r_list_foreach	2129:3:67908:67921	821207	2	True				
ANR	821316	Statement	(	2129:18:67923:67923	821207	3	True				
ANR	821317	Statement	fcn	2129:19:67924:67926	821207	4	True				
ANR	821318	Statement	->	2129:22:67927:67928	821207	5	True				
ANR	821319	Statement	bbs	2129:24:67929:67931	821207	6	True				
ANR	821320	Statement	","	2129:27:67932:67932	821207	7	True				
ANR	821321	Statement	iter	2129:29:67934:67937	821207	8	True				
ANR	821322	Statement	","	2129:33:67938:67938	821207	9	True				
ANR	821323	Statement	bb	2129:35:67940:67941	821207	10	True				
ANR	821324	Statement	)	2129:37:67942:67942	821207	11	True				
ANR	821325	CompoundStatement		13:39:383:383	821207	12					
ANR	821326	IfStatement	if ( sw_at >= bb -> addr && sw_at < ( bb -> addr + bb -> size ) )		821207	0					
ANR	821327	Condition	sw_at >= bb -> addr && sw_at < ( bb -> addr + bb -> size )	2130:8:67954:68003	821207	0	True				
ANR	821328	AndExpression	sw_at >= bb -> addr && sw_at < ( bb -> addr + bb -> size )		821207	0		&&			
ANR	821329	RelationalExpression	sw_at >= bb -> addr		821207	0		>=			
ANR	821330	Identifier	sw_at		821207	0					
ANR	821331	PtrMemberAccess	bb -> addr		821207	1					
ANR	821332	Identifier	bb		821207	0					
ANR	821333	Identifier	addr		821207	1					
ANR	821334	RelationalExpression	sw_at < ( bb -> addr + bb -> size )		821207	1		<			
ANR	821335	Identifier	sw_at		821207	0					
ANR	821336	AdditiveExpression	bb -> addr + bb -> size		821207	1		+			
ANR	821337	PtrMemberAccess	bb -> addr		821207	0					
ANR	821338	Identifier	bb		821207	0					
ANR	821339	Identifier	addr		821207	1					
ANR	821340	PtrMemberAccess	bb -> size		821207	1					
ANR	821341	Identifier	bb		821207	0					
ANR	821342	Identifier	size		821207	1					
ANR	821343	CompoundStatement		14:60:445:445	821207	1					
ANR	821344	IfStatement	if ( ! bb -> switch_op )		821207	0					
ANR	821345	Condition	! bb -> switch_op	2131:9:68017:68030	821207	0	True				
ANR	821346	UnaryOperationExpression	! bb -> switch_op		821207	0					
ANR	821347	UnaryOperator	!		821207	0					
ANR	821348	PtrMemberAccess	bb -> switch_op		821207	1					
ANR	821349	Identifier	bb		821207	0					
ANR	821350	Identifier	switch_op		821207	1					
ANR	821351	CompoundStatement		15:25:472:472	821207	1					
ANR	821352	ExpressionStatement	"bb -> switch_op = r_anal_switch_op_new ( sw_at , 0 , 0 )"	2132:6:68041:68099	821207	0	True				
ANR	821353	AssignmentExpression	"bb -> switch_op = r_anal_switch_op_new ( sw_at , 0 , 0 )"		821207	0		=			
ANR	821354	PtrMemberAccess	bb -> switch_op		821207	0					
ANR	821355	Identifier	bb		821207	0					
ANR	821356	Identifier	switch_op		821207	1					
ANR	821357	CallExpression	"r_anal_switch_op_new ( sw_at , 0 , 0 )"		821207	1					
ANR	821358	Callee	r_anal_switch_op_new		821207	0					
ANR	821359	Identifier	r_anal_switch_op_new		821207	0					
ANR	821360	ArgumentList	sw_at		821207	1					
ANR	821361	Argument	sw_at		821207	0					
ANR	821362	Identifier	sw_at		821207	0					
ANR	821363	Argument	0		821207	1					
ANR	821364	PrimaryExpression	0		821207	0					
ANR	821365	Argument	0		821207	2					
ANR	821366	PrimaryExpression	0		821207	0					
ANR	821367	ExpressionStatement	"r_anal_switch_op_add_case ( bb -> switch_op , cs_at , 0 , cs_at )"	2135:5:68113:68171	821207	1	True				
ANR	821368	CallExpression	"r_anal_switch_op_add_case ( bb -> switch_op , cs_at , 0 , cs_at )"		821207	0					
ANR	821369	Callee	r_anal_switch_op_add_case		821207	0					
ANR	821370	Identifier	r_anal_switch_op_add_case		821207	0					
ANR	821371	ArgumentList	bb -> switch_op		821207	1					
ANR	821372	Argument	bb -> switch_op		821207	0					
ANR	821373	PtrMemberAccess	bb -> switch_op		821207	0					
ANR	821374	Identifier	bb		821207	0					
ANR	821375	Identifier	switch_op		821207	1					
ANR	821376	Argument	cs_at		821207	1					
ANR	821377	Identifier	cs_at		821207	0					
ANR	821378	Argument	0		821207	2					
ANR	821379	PrimaryExpression	0		821207	0					
ANR	821380	Argument	cs_at		821207	3					
ANR	821381	Identifier	cs_at		821207	0					
ANR	821382	ExpressionStatement	free ( arg )	2138:3:68187:68197	821207	13	True				
ANR	821383	CallExpression	free ( arg )		821207	0					
ANR	821384	Callee	free		821207	0					
ANR	821385	Identifier	free		821207	0					
ANR	821386	ArgumentList	arg		821207	1					
ANR	821387	Argument	arg		821207	0					
ANR	821388	Identifier	arg		821207	0					
ANR	821389	ReturnStatement	return true ;	2139:3:68202:68213	821207	14	True				
ANR	821390	Identifier	true		821207	0					
ANR	821391	ExpressionStatement	free ( arg )	2142:1:68223:68233	821207	3	True				
ANR	821392	CallExpression	free ( arg )		821207	0					
ANR	821393	Callee	free		821207	0					
ANR	821394	Identifier	free		821207	0					
ANR	821395	ArgumentList	arg		821207	1					
ANR	821396	Argument	arg		821207	0					
ANR	821397	Identifier	arg		821207	0					
ANR	821398	ReturnStatement	return false ;	2143:1:68236:68248	821207	4	True				
ANR	821399	Identifier	false		821207	0					
ANR	821400	ReturnType	static bool		821207	1					
ANR	821401	Identifier	anal_bb_edge		821207	2					
ANR	821402	ParameterList	"RCore * core , const char * input"		821207	3					
ANR	821403	Parameter	RCore * core	2117:26:67528:67538	821207	0	True				
ANR	821404	ParameterType	RCore *		821207	0					
ANR	821405	Identifier	core		821207	1					
ANR	821406	Parameter	const char * input	2117:39:67541:67557	821207	1	True				
ANR	821407	ParameterType	const char *		821207	0					
ANR	821408	Identifier	input		821207	1					
ANR	821409	CFGEntryNode	ENTRY		821207		True				
ANR	821410	CFGExitNode	EXIT		821207		True				
ANR	821411	Symbol	bb		821207						
ANR	821412	Symbol	bb -> size		821207						
ANR	821413	Symbol	* core		821207						
ANR	821414	Symbol	strchr		821207						
ANR	821415	Symbol	cs_at		821207						
ANR	821416	Symbol	bb -> addr		821207						
ANR	821417	Symbol	core -> anal		821207						
ANR	821418	Symbol	r_num_math		821207						
ANR	821419	Symbol	fcn		821207						
ANR	821420	Symbol	arg		821207						
ANR	821421	Symbol	core -> num		821207						
ANR	821422	Symbol	sp		821207						
ANR	821423	Symbol	sw_at		821207						
ANR	821424	Symbol	* sp ++		821207						
ANR	821425	Symbol	* bb		821207						
ANR	821426	Symbol	false		821207						
ANR	821427	Symbol	iter		821207						
ANR	821428	Symbol	r_anal_switch_op_new		821207						
ANR	821429	Symbol	core		821207						
ANR	821430	Symbol	input		821207						
ANR	821431	Symbol	r_anal_get_fcn_in		821207						
ANR	821432	Symbol	r_str_trim_ro		821207						
ANR	821433	Symbol	true		821207						
ANR	821434	Symbol	strdup		821207						
ANR	821435	Symbol	bb -> switch_op		821207						
ANR	821436	Function	anal_fcn_del_bb	2146:0:68253:68846							
ANR	821437	FunctionDef	"anal_fcn_del_bb (RCore * core , const char * input)"		821436	0					
ANR	821438	CompoundStatement		2146:60:68313:68846	821436	0					
ANR	821439	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , input ) ;"	2147:1:68316:68357	821436	0	True				
ANR	821440	IdentifierDecl	"addr = r_num_math ( core -> num , input )"		821436	0					
ANR	821441	IdentifierDeclType	ut64		821436	0					
ANR	821442	Identifier	addr		821436	1					
ANR	821443	AssignmentExpression	"addr = r_num_math ( core -> num , input )"		821436	2		=			
ANR	821444	Identifier	addr		821436	0					
ANR	821445	CallExpression	"r_num_math ( core -> num , input )"		821436	1					
ANR	821446	Callee	r_num_math		821436	0					
ANR	821447	Identifier	r_num_math		821436	0					
ANR	821448	ArgumentList	core -> num		821436	1					
ANR	821449	Argument	core -> num		821436	0					
ANR	821450	PtrMemberAccess	core -> num		821436	0					
ANR	821451	Identifier	core		821436	0					
ANR	821452	Identifier	num		821436	1					
ANR	821453	Argument	input		821436	1					
ANR	821454	Identifier	input		821436	0					
ANR	821455	IfStatement	if ( ! addr )		821436	1					
ANR	821456	Condition	! addr	2148:5:68364:68368	821436	0	True				
ANR	821457	UnaryOperationExpression	! addr		821436	0					
ANR	821458	UnaryOperator	!		821436	0					
ANR	821459	Identifier	addr		821436	1					
ANR	821460	CompoundStatement		3:12:57:57	821436	1					
ANR	821461	ExpressionStatement	addr = core -> offset	2149:2:68375:68394	821436	0	True				
ANR	821462	AssignmentExpression	addr = core -> offset		821436	0		=			
ANR	821463	Identifier	addr		821436	0					
ANR	821464	PtrMemberAccess	core -> offset		821436	1					
ANR	821465	Identifier	core		821436	0					
ANR	821466	Identifier	offset		821436	1					
ANR	821467	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , addr , - 1 ) ;"	2151:1:68400:68461	821436	2	True				
ANR	821468	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , - 1 )"		821436	0					
ANR	821469	IdentifierDeclType	RAnalFunction *		821436	0					
ANR	821470	Identifier	fcn		821436	1					
ANR	821471	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , - 1 )"		821436	2		=			
ANR	821472	Identifier	fcn		821436	0					
ANR	821473	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , - 1 )"		821436	1					
ANR	821474	Callee	r_anal_get_fcn_in		821436	0					
ANR	821475	Identifier	r_anal_get_fcn_in		821436	0					
ANR	821476	ArgumentList	core -> anal		821436	1					
ANR	821477	Argument	core -> anal		821436	0					
ANR	821478	PtrMemberAccess	core -> anal		821436	0					
ANR	821479	Identifier	core		821436	0					
ANR	821480	Identifier	anal		821436	1					
ANR	821481	Argument	addr		821436	1					
ANR	821482	Identifier	addr		821436	0					
ANR	821483	Argument	- 1		821436	2					
ANR	821484	UnaryOperationExpression	- 1		821436	0					
ANR	821485	UnaryOperator	-		821436	0					
ANR	821486	PrimaryExpression	1		821436	1					
ANR	821487	IfStatement	if ( fcn )		821436	3					
ANR	821488	Condition	fcn	2152:5:68468:68470	821436	0	True				
ANR	821489	Identifier	fcn		821436	0					
ANR	821490	CompoundStatement		7:10:159:159	821436	1					
ANR	821491	IfStatement	"if ( ! strcmp ( input , ""*"" ) )"		821436	0					
ANR	821492	Condition	"! strcmp ( input , ""*"" )"	2153:6:68481:68500	821436	0	True				
ANR	821493	UnaryOperationExpression	"! strcmp ( input , ""*"" )"		821436	0					
ANR	821494	UnaryOperator	!		821436	0					
ANR	821495	CallExpression	"strcmp ( input , ""*"" )"		821436	1					
ANR	821496	Callee	strcmp		821436	0					
ANR	821497	Identifier	strcmp		821436	0					
ANR	821498	ArgumentList	input		821436	1					
ANR	821499	Argument	input		821436	0					
ANR	821500	Identifier	input		821436	0					
ANR	821501	Argument	"""*"""		821436	1					
ANR	821502	PrimaryExpression	"""*"""		821436	0					
ANR	821503	CompoundStatement		8:28:189:189	821436	1					
ANR	821504	ExpressionStatement	r_list_free ( fcn -> bbs )	2154:3:68508:68530	821436	0	True				
ANR	821505	CallExpression	r_list_free ( fcn -> bbs )		821436	0					
ANR	821506	Callee	r_list_free		821436	0					
ANR	821507	Identifier	r_list_free		821436	0					
ANR	821508	ArgumentList	fcn -> bbs		821436	1					
ANR	821509	Argument	fcn -> bbs		821436	0					
ANR	821510	PtrMemberAccess	fcn -> bbs		821436	0					
ANR	821511	Identifier	fcn		821436	0					
ANR	821512	Identifier	bbs		821436	1					
ANR	821513	ExpressionStatement	fcn -> bbs = NULL	2155:3:68535:68550	821436	1	True				
ANR	821514	AssignmentExpression	fcn -> bbs = NULL		821436	0		=			
ANR	821515	PtrMemberAccess	fcn -> bbs		821436	0					
ANR	821516	Identifier	fcn		821436	0					
ANR	821517	Identifier	bbs		821436	1					
ANR	821518	Identifier	NULL		821436	1					
ANR	821519	ElseStatement	else		821436	0					
ANR	821520	CompoundStatement		13:3:270:285	821436	0					
ANR	821521	IdentifierDeclStatement	RAnalBlock * b ;	2157:3:68566:68579	821436	0	True				
ANR	821522	IdentifierDecl	* b		821436	0					
ANR	821523	IdentifierDeclType	RAnalBlock *		821436	0					
ANR	821524	Identifier	b		821436	1					
ANR	821525	IdentifierDeclStatement	RListIter * iter ;	2158:3:68584:68599	821436	1	True				
ANR	821526	IdentifierDecl	* iter		821436	0					
ANR	821527	IdentifierDeclType	RListIter *		821436	0					
ANR	821528	Identifier	iter		821436	1					
ANR	821529	Statement	r_list_foreach	2159:3:68604:68617	821436	2	True				
ANR	821530	Statement	(	2159:18:68619:68619	821436	3	True				
ANR	821531	Statement	fcn	2159:19:68620:68622	821436	4	True				
ANR	821532	Statement	->	2159:22:68623:68624	821436	5	True				
ANR	821533	Statement	bbs	2159:24:68625:68627	821436	6	True				
ANR	821534	Statement	","	2159:27:68628:68628	821436	7	True				
ANR	821535	Statement	iter	2159:29:68630:68633	821436	8	True				
ANR	821536	Statement	","	2159:33:68634:68634	821436	9	True				
ANR	821537	Statement	b	2159:35:68636:68636	821436	10	True				
ANR	821538	Statement	)	2159:36:68637:68637	821436	11	True				
ANR	821539	CompoundStatement		14:38:325:325	821436	12					
ANR	821540	IfStatement	if ( b -> addr == addr )		821436	0					
ANR	821541	Condition	b -> addr == addr	2160:8:68649:68663	821436	0	True				
ANR	821542	EqualityExpression	b -> addr == addr		821436	0		==			
ANR	821543	PtrMemberAccess	b -> addr		821436	0					
ANR	821544	Identifier	b		821436	0					
ANR	821545	Identifier	addr		821436	1					
ANR	821546	Identifier	addr		821436	1					
ANR	821547	CompoundStatement		15:25:352:352	821436	1					
ANR	821548	ExpressionStatement	"r_list_delete ( fcn -> bbs , iter )"	2161:5:68673:68703	821436	0	True				
ANR	821549	CallExpression	"r_list_delete ( fcn -> bbs , iter )"		821436	0					
ANR	821550	Callee	r_list_delete		821436	0					
ANR	821551	Identifier	r_list_delete		821436	0					
ANR	821552	ArgumentList	fcn -> bbs		821436	1					
ANR	821553	Argument	fcn -> bbs		821436	0					
ANR	821554	PtrMemberAccess	fcn -> bbs		821436	0					
ANR	821555	Identifier	fcn		821436	0					
ANR	821556	Identifier	bbs		821436	1					
ANR	821557	Argument	iter		821436	1					
ANR	821558	Identifier	iter		821436	0					
ANR	821559	ReturnStatement	return true ;	2162:5:68710:68721	821436	1	True				
ANR	821560	Identifier	true		821436	0					
ANR	821561	ExpressionStatement	"eprintf ( ""Cannot find basic block\\n"" )"	2165:3:68737:68774	821436	13	True				
ANR	821562	CallExpression	"eprintf ( ""Cannot find basic block\\n"" )"		821436	0					
ANR	821563	Callee	eprintf		821436	0					
ANR	821564	Identifier	eprintf		821436	0					
ANR	821565	ArgumentList	"""Cannot find basic block\\n"""		821436	1					
ANR	821566	Argument	"""Cannot find basic block\\n"""		821436	0					
ANR	821567	PrimaryExpression	"""Cannot find basic block\\n"""		821436	0					
ANR	821568	ElseStatement	else		821436	0					
ANR	821569	CompoundStatement		22:8:474:474	821436	0					
ANR	821570	ExpressionStatement	"eprintf ( ""Cannot find function\\n"" )"	2168:2:68792:68826	821436	0	True				
ANR	821571	CallExpression	"eprintf ( ""Cannot find function\\n"" )"		821436	0					
ANR	821572	Callee	eprintf		821436	0					
ANR	821573	Identifier	eprintf		821436	0					
ANR	821574	ArgumentList	"""Cannot find function\\n"""		821436	1					
ANR	821575	Argument	"""Cannot find function\\n"""		821436	0					
ANR	821576	PrimaryExpression	"""Cannot find function\\n"""		821436	0					
ANR	821577	ReturnStatement	return false ;	2170:1:68832:68844	821436	4	True				
ANR	821578	Identifier	false		821436	0					
ANR	821579	ReturnType	static bool		821436	1					
ANR	821580	Identifier	anal_fcn_del_bb		821436	2					
ANR	821581	ParameterList	"RCore * core , const char * input"		821436	3					
ANR	821582	Parameter	RCore * core	2146:28:68281:68291	821436	0	True				
ANR	821583	ParameterType	RCore *		821436	0					
ANR	821584	Identifier	core		821436	1					
ANR	821585	Parameter	const char * input	2146:41:68294:68310	821436	1	True				
ANR	821586	ParameterType	const char *		821436	0					
ANR	821587	Identifier	input		821436	1					
ANR	821588	CFGEntryNode	ENTRY		821436		True				
ANR	821589	CFGExitNode	EXIT		821436		True				
ANR	821590	Symbol	strcmp		821436						
ANR	821591	Symbol	b		821436						
ANR	821592	Symbol	NULL		821436						
ANR	821593	Symbol	* fcn		821436						
ANR	821594	Symbol	* core		821436						
ANR	821595	Symbol	false		821436						
ANR	821596	Symbol	core -> offset		821436						
ANR	821597	Symbol	iter		821436						
ANR	821598	Symbol	* b		821436						
ANR	821599	Symbol	core -> anal		821436						
ANR	821600	Symbol	r_num_math		821436						
ANR	821601	Symbol	b -> addr		821436						
ANR	821602	Symbol	fcn		821436						
ANR	821603	Symbol	core		821436						
ANR	821604	Symbol	input		821436						
ANR	821605	Symbol	r_anal_get_fcn_in		821436						
ANR	821606	Symbol	fcn -> bbs		821436						
ANR	821607	Symbol	true		821436						
ANR	821608	Symbol	addr		821436						
ANR	821609	Symbol	core -> num		821436						
ANR	821610	Function	anal_fcn_add_bb	2173:0:68849:70807							
ANR	821611	FunctionDef	"anal_fcn_add_bb (RCore * core , const char * input)"		821610	0					
ANR	821612	CompoundStatement		2173:59:68908:70807	821610	0					
ANR	821613	IdentifierDeclStatement	char * ptr ;	2175:1:68954:68963	821610	0	True				
ANR	821614	IdentifierDecl	* ptr		821610	0					
ANR	821615	IdentifierDeclType	char *		821610	0					
ANR	821616	Identifier	ptr		821610	1					
ANR	821617	IdentifierDeclStatement	const char * ptr2 = NULL ;	2176:1:68966:68989	821610	1	True				
ANR	821618	IdentifierDecl	* ptr2 = NULL		821610	0					
ANR	821619	IdentifierDeclType	const char *		821610	0					
ANR	821620	Identifier	ptr2		821610	1					
ANR	821621	AssignmentExpression	* ptr2 = NULL		821610	2		=			
ANR	821622	Identifier	NULL		821610	0					
ANR	821623	Identifier	NULL		821610	1					
ANR	821624	Statement	ut64	2177:1:68992:68995	821610	2	True				
ANR	821625	Statement	fcnaddr	2177:6:68997:69003	821610	3	True				
ANR	821626	Statement	=	2177:14:69005:69005	821610	4	True				
ANR	821627	Statement	-	2177:16:69007:69007	821610	5	True				
ANR	821628	Statement	1L	2177:17:69008:69009	821610	6	True				
ANR	821629	Statement	L	2177:19:69010:69010	821610	7	True				
ANR	821630	Statement	","	2177:20:69011:69011	821610	8	True				
ANR	821631	Statement	addr	2177:22:69013:69016	821610	9	True				
ANR	821632	Statement	=	2177:27:69018:69018	821610	10	True				
ANR	821633	Statement	-	2177:29:69020:69020	821610	11	True				
ANR	821634	Statement	1L	2177:30:69021:69022	821610	12	True				
ANR	821635	ExpressionStatement	L	2177:32:69023:69024	821610	13	True				
ANR	821636	Identifier	L		821610	0					
ANR	821637	Statement	ut64	2178:1:69027:69030	821610	14	True				
ANR	821638	Statement	size	2178:6:69032:69035	821610	15	True				
ANR	821639	Statement	=	2178:11:69037:69037	821610	16	True				
ANR	821640	Statement	0L	2178:13:69039:69040	821610	17	True				
ANR	821641	ExpressionStatement	L	2178:15:69041:69042	821610	18	True				
ANR	821642	Identifier	L		821610	0					
ANR	821643	IdentifierDeclStatement	ut64 jump = UT64_MAX ;	2179:1:69045:69065	821610	19	True				
ANR	821644	IdentifierDecl	jump = UT64_MAX		821610	0					
ANR	821645	IdentifierDeclType	ut64		821610	0					
ANR	821646	Identifier	jump		821610	1					
ANR	821647	AssignmentExpression	jump = UT64_MAX		821610	2		=			
ANR	821648	Identifier	UT64_MAX		821610	0					
ANR	821649	Identifier	UT64_MAX		821610	1					
ANR	821650	IdentifierDeclStatement	ut64 fail = UT64_MAX ;	2180:1:69068:69088	821610	20	True				
ANR	821651	IdentifierDecl	fail = UT64_MAX		821610	0					
ANR	821652	IdentifierDeclType	ut64		821610	0					
ANR	821653	Identifier	fail		821610	1					
ANR	821654	AssignmentExpression	fail = UT64_MAX		821610	2		=			
ANR	821655	Identifier	UT64_MAX		821610	0					
ANR	821656	Identifier	UT64_MAX		821610	1					
ANR	821657	IdentifierDeclStatement	int type = R_ANAL_BB_TYPE_NULL ;	2181:1:69091:69121	821610	21	True				
ANR	821658	IdentifierDecl	type = R_ANAL_BB_TYPE_NULL		821610	0					
ANR	821659	IdentifierDeclType	int		821610	0					
ANR	821660	Identifier	type		821610	1					
ANR	821661	AssignmentExpression	type = R_ANAL_BB_TYPE_NULL		821610	2		=			
ANR	821662	Identifier	R_ANAL_BB_TYPE_NULL		821610	0					
ANR	821663	Identifier	R_ANAL_BB_TYPE_NULL		821610	1					
ANR	821664	IdentifierDeclStatement	RAnalFunction * fcn = NULL ;	2182:1:69124:69149	821610	22	True				
ANR	821665	IdentifierDecl	* fcn = NULL		821610	0					
ANR	821666	IdentifierDeclType	RAnalFunction *		821610	0					
ANR	821667	Identifier	fcn		821610	1					
ANR	821668	AssignmentExpression	* fcn = NULL		821610	2		=			
ANR	821669	Identifier	NULL		821610	0					
ANR	821670	Identifier	NULL		821610	1					
ANR	821671	IdentifierDeclStatement	RAnalDiff * diff = NULL ;	2183:1:69152:69174	821610	23	True				
ANR	821672	IdentifierDecl	* diff = NULL		821610	0					
ANR	821673	IdentifierDeclType	RAnalDiff *		821610	0					
ANR	821674	Identifier	diff		821610	1					
ANR	821675	AssignmentExpression	* diff = NULL		821610	2		=			
ANR	821676	Identifier	NULL		821610	0					
ANR	821677	Identifier	NULL		821610	1					
ANR	821678	WhileStatement	while ( * input == ' ' )		821610	24					
ANR	821679	Condition	* input == ' '	2185:8:69185:69197	821610	0	True				
ANR	821680	EqualityExpression	* input == ' '		821610	0		==			
ANR	821681	UnaryOperationExpression	* input		821610	0					
ANR	821682	UnaryOperator	*		821610	0					
ANR	821683	Identifier	input		821610	1					
ANR	821684	PrimaryExpression	' '		821610	1					
ANR	821685	ExpressionStatement	input ++	2185:23:69200:69207	821610	1	True				
ANR	821686	PostIncDecOperationExpression	input ++		821610	0					
ANR	821687	Identifier	input		821610	0					
ANR	821688	IncDec	++		821610	1					
ANR	821689	ExpressionStatement	ptr = strdup ( input )	2186:1:69210:69230	821610	25	True				
ANR	821690	AssignmentExpression	ptr = strdup ( input )		821610	0		=			
ANR	821691	Identifier	ptr		821610	0					
ANR	821692	CallExpression	strdup ( input )		821610	1					
ANR	821693	Callee	strdup		821610	0					
ANR	821694	Identifier	strdup		821610	0					
ANR	821695	ArgumentList	input		821610	1					
ANR	821696	Argument	input		821610	0					
ANR	821697	Identifier	input		821610	0					
ANR	821698	SwitchStatement	switch ( r_str_word_set0 ( ptr ) )		821610	26					
ANR	821699	Condition	r_str_word_set0 ( ptr )	2188:9:69242:69262	821610	0	True				
ANR	821700	CallExpression	r_str_word_set0 ( ptr )		821610	0					
ANR	821701	Callee	r_str_word_set0		821610	0					
ANR	821702	Identifier	r_str_word_set0		821610	0					
ANR	821703	ArgumentList	ptr		821610	1					
ANR	821704	Argument	ptr		821610	0					
ANR	821705	Identifier	ptr		821610	0					
ANR	821706	CompoundStatement		16:32:356:356	821610	1					
ANR	821707	Label	case 7 :	2189:1:69268:69274	821610	0	True				
ANR	821708	ExpressionStatement	"ptr2 = r_str_word_get0 ( ptr , 6 )"	2190:2:69278:69309	821610	1	True				
ANR	821709	AssignmentExpression	"ptr2 = r_str_word_get0 ( ptr , 6 )"		821610	0		=			
ANR	821710	Identifier	ptr2		821610	0					
ANR	821711	CallExpression	"r_str_word_get0 ( ptr , 6 )"		821610	1					
ANR	821712	Callee	r_str_word_get0		821610	0					
ANR	821713	Identifier	r_str_word_get0		821610	0					
ANR	821714	ArgumentList	ptr		821610	1					
ANR	821715	Argument	ptr		821610	0					
ANR	821716	Identifier	ptr		821610	0					
ANR	821717	Argument	6		821610	1					
ANR	821718	PrimaryExpression	6		821610	0					
ANR	821719	IfStatement	if ( ! ( diff = r_anal_diff_new ( ) ) )		821610	2					
ANR	821720	Condition	! ( diff = r_anal_diff_new ( ) )	2191:6:69317:69344	821610	0	True				
ANR	821721	UnaryOperationExpression	! ( diff = r_anal_diff_new ( ) )		821610	0					
ANR	821722	UnaryOperator	!		821610	0					
ANR	821723	AssignmentExpression	diff = r_anal_diff_new ( )		821610	1		=			
ANR	821724	Identifier	diff		821610	0					
ANR	821725	CallExpression	r_anal_diff_new ( )		821610	1					
ANR	821726	Callee	r_anal_diff_new		821610	0					
ANR	821727	Identifier	r_anal_diff_new		821610	0					
ANR	821728	ArgumentList			821610	1					
ANR	821729	CompoundStatement		19:36:438:438	821610	1					
ANR	821730	ExpressionStatement	"eprintf ( ""error: Cannot init RAnalDiff\\n"" )"	2192:3:69352:69394	821610	0	True				
ANR	821731	CallExpression	"eprintf ( ""error: Cannot init RAnalDiff\\n"" )"		821610	0					
ANR	821732	Callee	eprintf		821610	0					
ANR	821733	Identifier	eprintf		821610	0					
ANR	821734	ArgumentList	"""error: Cannot init RAnalDiff\\n"""		821610	1					
ANR	821735	Argument	"""error: Cannot init RAnalDiff\\n"""		821610	0					
ANR	821736	PrimaryExpression	"""error: Cannot init RAnalDiff\\n"""		821610	0					
ANR	821737	ExpressionStatement	free ( ptr )	2193:3:69399:69409	821610	1	True				
ANR	821738	CallExpression	free ( ptr )		821610	0					
ANR	821739	Callee	free		821610	0					
ANR	821740	Identifier	free		821610	0					
ANR	821741	ArgumentList	ptr		821610	1					
ANR	821742	Argument	ptr		821610	0					
ANR	821743	Identifier	ptr		821610	0					
ANR	821744	ReturnStatement	return false ;	2194:3:69414:69426	821610	2	True				
ANR	821745	Identifier	false		821610	0					
ANR	821746	IfStatement	if ( ptr2 [ 0 ] == 'm' )		821610	3					
ANR	821747	Condition	ptr2 [ 0 ] == 'm'	2196:6:69438:69451	821610	0	True				
ANR	821748	EqualityExpression	ptr2 [ 0 ] == 'm'		821610	0		==			
ANR	821749	ArrayIndexing	ptr2 [ 0 ]		821610	0					
ANR	821750	Identifier	ptr2		821610	0					
ANR	821751	PrimaryExpression	0		821610	1					
ANR	821752	PrimaryExpression	'm'		821610	1					
ANR	821753	CompoundStatement		24:22:545:545	821610	1					
ANR	821754	ExpressionStatement	diff -> type = R_ANAL_DIFF_TYPE_MATCH	2197:3:69459:69494	821610	0	True				
ANR	821755	AssignmentExpression	diff -> type = R_ANAL_DIFF_TYPE_MATCH		821610	0		=			
ANR	821756	PtrMemberAccess	diff -> type		821610	0					
ANR	821757	Identifier	diff		821610	0					
ANR	821758	Identifier	type		821610	1					
ANR	821759	Identifier	R_ANAL_DIFF_TYPE_MATCH		821610	1					
ANR	821760	ElseStatement	else		821610	0					
ANR	821761	IfStatement	if ( ptr2 [ 0 ] == 'u' )		821610	0					
ANR	821762	Condition	ptr2 [ 0 ] == 'u'	2198:13:69509:69522	821610	0	True				
ANR	821763	EqualityExpression	ptr2 [ 0 ] == 'u'		821610	0		==			
ANR	821764	ArrayIndexing	ptr2 [ 0 ]		821610	0					
ANR	821765	Identifier	ptr2		821610	0					
ANR	821766	PrimaryExpression	0		821610	1					
ANR	821767	PrimaryExpression	'u'		821610	1					
ANR	821768	CompoundStatement		26:29:616:616	821610	1					
ANR	821769	ExpressionStatement	diff -> type = R_ANAL_DIFF_TYPE_UNMATCH	2199:3:69530:69567	821610	0	True				
ANR	821770	AssignmentExpression	diff -> type = R_ANAL_DIFF_TYPE_UNMATCH		821610	0		=			
ANR	821771	PtrMemberAccess	diff -> type		821610	0					
ANR	821772	Identifier	diff		821610	0					
ANR	821773	Identifier	type		821610	1					
ANR	821774	Identifier	R_ANAL_DIFF_TYPE_UNMATCH		821610	1					
ANR	821775	Label	case 6 :	2201:1:69574:69580	821610	4	True				
ANR	821776	ExpressionStatement	"ptr2 = r_str_word_get0 ( ptr , 5 )"	2202:2:69584:69615	821610	5	True				
ANR	821777	AssignmentExpression	"ptr2 = r_str_word_get0 ( ptr , 5 )"		821610	0		=			
ANR	821778	Identifier	ptr2		821610	0					
ANR	821779	CallExpression	"r_str_word_get0 ( ptr , 5 )"		821610	1					
ANR	821780	Callee	r_str_word_get0		821610	0					
ANR	821781	Identifier	r_str_word_get0		821610	0					
ANR	821782	ArgumentList	ptr		821610	1					
ANR	821783	Argument	ptr		821610	0					
ANR	821784	Identifier	ptr		821610	0					
ANR	821785	Argument	5		821610	1					
ANR	821786	PrimaryExpression	5		821610	0					
ANR	821787	IfStatement	"if ( strchr ( ptr2 , 'h' ) )"		821610	6					
ANR	821788	Condition	"strchr ( ptr2 , 'h' )"	2203:6:69623:69640	821610	0	True				
ANR	821789	CallExpression	"strchr ( ptr2 , 'h' )"		821610	0					
ANR	821790	Callee	strchr		821610	0					
ANR	821791	Identifier	strchr		821610	0					
ANR	821792	ArgumentList	ptr2		821610	1					
ANR	821793	Argument	ptr2		821610	0					
ANR	821794	Identifier	ptr2		821610	0					
ANR	821795	Argument	'h'		821610	1					
ANR	821796	PrimaryExpression	'h'		821610	0					
ANR	821797	CompoundStatement		31:26:734:734	821610	1					
ANR	821798	ExpressionStatement	type |= R_ANAL_BB_TYPE_HEAD	2204:3:69648:69675	821610	0	True				
ANR	821799	AssignmentExpression	type |= R_ANAL_BB_TYPE_HEAD		821610	0		|=			
ANR	821800	Identifier	type		821610	0					
ANR	821801	Identifier	R_ANAL_BB_TYPE_HEAD		821610	1					
ANR	821802	IfStatement	"if ( strchr ( ptr2 , 'b' ) )"		821610	7					
ANR	821803	Condition	"strchr ( ptr2 , 'b' )"	2206:6:69687:69704	821610	0	True				
ANR	821804	CallExpression	"strchr ( ptr2 , 'b' )"		821610	0					
ANR	821805	Callee	strchr		821610	0					
ANR	821806	Identifier	strchr		821610	0					
ANR	821807	ArgumentList	ptr2		821610	1					
ANR	821808	Argument	ptr2		821610	0					
ANR	821809	Identifier	ptr2		821610	0					
ANR	821810	Argument	'b'		821610	1					
ANR	821811	PrimaryExpression	'b'		821610	0					
ANR	821812	CompoundStatement		34:26:798:798	821610	1					
ANR	821813	ExpressionStatement	type |= R_ANAL_BB_TYPE_BODY	2207:3:69712:69739	821610	0	True				
ANR	821814	AssignmentExpression	type |= R_ANAL_BB_TYPE_BODY		821610	0		|=			
ANR	821815	Identifier	type		821610	0					
ANR	821816	Identifier	R_ANAL_BB_TYPE_BODY		821610	1					
ANR	821817	IfStatement	"if ( strchr ( ptr2 , 'l' ) )"		821610	8					
ANR	821818	Condition	"strchr ( ptr2 , 'l' )"	2209:6:69751:69768	821610	0	True				
ANR	821819	CallExpression	"strchr ( ptr2 , 'l' )"		821610	0					
ANR	821820	Callee	strchr		821610	0					
ANR	821821	Identifier	strchr		821610	0					
ANR	821822	ArgumentList	ptr2		821610	1					
ANR	821823	Argument	ptr2		821610	0					
ANR	821824	Identifier	ptr2		821610	0					
ANR	821825	Argument	'l'		821610	1					
ANR	821826	PrimaryExpression	'l'		821610	0					
ANR	821827	CompoundStatement		37:26:862:862	821610	1					
ANR	821828	ExpressionStatement	type |= R_ANAL_BB_TYPE_LAST	2210:3:69776:69803	821610	0	True				
ANR	821829	AssignmentExpression	type |= R_ANAL_BB_TYPE_LAST		821610	0		|=			
ANR	821830	Identifier	type		821610	0					
ANR	821831	Identifier	R_ANAL_BB_TYPE_LAST		821610	1					
ANR	821832	IfStatement	"if ( strchr ( ptr2 , 'f' ) )"		821610	9					
ANR	821833	Condition	"strchr ( ptr2 , 'f' )"	2212:6:69815:69832	821610	0	True				
ANR	821834	CallExpression	"strchr ( ptr2 , 'f' )"		821610	0					
ANR	821835	Callee	strchr		821610	0					
ANR	821836	Identifier	strchr		821610	0					
ANR	821837	ArgumentList	ptr2		821610	1					
ANR	821838	Argument	ptr2		821610	0					
ANR	821839	Identifier	ptr2		821610	0					
ANR	821840	Argument	'f'		821610	1					
ANR	821841	PrimaryExpression	'f'		821610	0					
ANR	821842	CompoundStatement		40:26:926:926	821610	1					
ANR	821843	ExpressionStatement	type |= R_ANAL_BB_TYPE_FOOT	2213:3:69840:69867	821610	0	True				
ANR	821844	AssignmentExpression	type |= R_ANAL_BB_TYPE_FOOT		821610	0		|=			
ANR	821845	Identifier	type		821610	0					
ANR	821846	Identifier	R_ANAL_BB_TYPE_FOOT		821610	1					
ANR	821847	Label	case 5 :	2215:1:69874:69880	821610	10	True				
ANR	821848	ExpressionStatement	"fail = r_num_math ( core -> num , r_str_word_get0 ( ptr , 4 ) )"	2216:2:69896:69951	821610	11	True				
ANR	821849	AssignmentExpression	"fail = r_num_math ( core -> num , r_str_word_get0 ( ptr , 4 ) )"		821610	0		=			
ANR	821850	Identifier	fail		821610	0					
ANR	821851	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 4 ) )"		821610	1					
ANR	821852	Callee	r_num_math		821610	0					
ANR	821853	Identifier	r_num_math		821610	0					
ANR	821854	ArgumentList	core -> num		821610	1					
ANR	821855	Argument	core -> num		821610	0					
ANR	821856	PtrMemberAccess	core -> num		821610	0					
ANR	821857	Identifier	core		821610	0					
ANR	821858	Identifier	num		821610	1					
ANR	821859	Argument	"r_str_word_get0 ( ptr , 4 )"		821610	1					
ANR	821860	CallExpression	"r_str_word_get0 ( ptr , 4 )"		821610	0					
ANR	821861	Callee	r_str_word_get0		821610	0					
ANR	821862	Identifier	r_str_word_get0		821610	0					
ANR	821863	ArgumentList	ptr		821610	1					
ANR	821864	Argument	ptr		821610	0					
ANR	821865	Identifier	ptr		821610	0					
ANR	821866	Argument	4		821610	1					
ANR	821867	PrimaryExpression	4		821610	0					
ANR	821868	Label	case 4 :	2217:1:69954:69960	821610	12	True				
ANR	821869	ExpressionStatement	"jump = r_num_math ( core -> num , r_str_word_get0 ( ptr , 3 ) )"	2218:2:69976:70031	821610	13	True				
ANR	821870	AssignmentExpression	"jump = r_num_math ( core -> num , r_str_word_get0 ( ptr , 3 ) )"		821610	0		=			
ANR	821871	Identifier	jump		821610	0					
ANR	821872	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 3 ) )"		821610	1					
ANR	821873	Callee	r_num_math		821610	0					
ANR	821874	Identifier	r_num_math		821610	0					
ANR	821875	ArgumentList	core -> num		821610	1					
ANR	821876	Argument	core -> num		821610	0					
ANR	821877	PtrMemberAccess	core -> num		821610	0					
ANR	821878	Identifier	core		821610	0					
ANR	821879	Identifier	num		821610	1					
ANR	821880	Argument	"r_str_word_get0 ( ptr , 3 )"		821610	1					
ANR	821881	CallExpression	"r_str_word_get0 ( ptr , 3 )"		821610	0					
ANR	821882	Callee	r_str_word_get0		821610	0					
ANR	821883	Identifier	r_str_word_get0		821610	0					
ANR	821884	ArgumentList	ptr		821610	1					
ANR	821885	Argument	ptr		821610	0					
ANR	821886	Identifier	ptr		821610	0					
ANR	821887	Argument	3		821610	1					
ANR	821888	PrimaryExpression	3		821610	0					
ANR	821889	Label	case 3 :	2219:1:70034:70040	821610	14	True				
ANR	821890	ExpressionStatement	"size = r_num_math ( core -> num , r_str_word_get0 ( ptr , 2 ) )"	2220:2:70056:70111	821610	15	True				
ANR	821891	AssignmentExpression	"size = r_num_math ( core -> num , r_str_word_get0 ( ptr , 2 ) )"		821610	0		=			
ANR	821892	Identifier	size		821610	0					
ANR	821893	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 2 ) )"		821610	1					
ANR	821894	Callee	r_num_math		821610	0					
ANR	821895	Identifier	r_num_math		821610	0					
ANR	821896	ArgumentList	core -> num		821610	1					
ANR	821897	Argument	core -> num		821610	0					
ANR	821898	PtrMemberAccess	core -> num		821610	0					
ANR	821899	Identifier	core		821610	0					
ANR	821900	Identifier	num		821610	1					
ANR	821901	Argument	"r_str_word_get0 ( ptr , 2 )"		821610	1					
ANR	821902	CallExpression	"r_str_word_get0 ( ptr , 2 )"		821610	0					
ANR	821903	Callee	r_str_word_get0		821610	0					
ANR	821904	Identifier	r_str_word_get0		821610	0					
ANR	821905	ArgumentList	ptr		821610	1					
ANR	821906	Argument	ptr		821610	0					
ANR	821907	Identifier	ptr		821610	0					
ANR	821908	Argument	2		821610	1					
ANR	821909	PrimaryExpression	2		821610	0					
ANR	821910	Label	case 2 :	2221:1:70114:70120	821610	16	True				
ANR	821911	ExpressionStatement	"addr = r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"	2222:2:70136:70191	821610	17	True				
ANR	821912	AssignmentExpression	"addr = r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"		821610	0		=			
ANR	821913	Identifier	addr		821610	0					
ANR	821914	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"		821610	1					
ANR	821915	Callee	r_num_math		821610	0					
ANR	821916	Identifier	r_num_math		821610	0					
ANR	821917	ArgumentList	core -> num		821610	1					
ANR	821918	Argument	core -> num		821610	0					
ANR	821919	PtrMemberAccess	core -> num		821610	0					
ANR	821920	Identifier	core		821610	0					
ANR	821921	Identifier	num		821610	1					
ANR	821922	Argument	"r_str_word_get0 ( ptr , 1 )"		821610	1					
ANR	821923	CallExpression	"r_str_word_get0 ( ptr , 1 )"		821610	0					
ANR	821924	Callee	r_str_word_get0		821610	0					
ANR	821925	Identifier	r_str_word_get0		821610	0					
ANR	821926	ArgumentList	ptr		821610	1					
ANR	821927	Argument	ptr		821610	0					
ANR	821928	Identifier	ptr		821610	0					
ANR	821929	Argument	1		821610	1					
ANR	821930	PrimaryExpression	1		821610	0					
ANR	821931	Label	case 1 :	2223:1:70194:70200	821610	18	True				
ANR	821932	ExpressionStatement	"fcnaddr = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"	2224:2:70219:70277	821610	19	True				
ANR	821933	AssignmentExpression	"fcnaddr = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		821610	0		=			
ANR	821934	Identifier	fcnaddr		821610	0					
ANR	821935	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		821610	1					
ANR	821936	Callee	r_num_math		821610	0					
ANR	821937	Identifier	r_num_math		821610	0					
ANR	821938	ArgumentList	core -> num		821610	1					
ANR	821939	Argument	core -> num		821610	0					
ANR	821940	PtrMemberAccess	core -> num		821610	0					
ANR	821941	Identifier	core		821610	0					
ANR	821942	Identifier	num		821610	1					
ANR	821943	Argument	"r_str_word_get0 ( ptr , 0 )"		821610	1					
ANR	821944	CallExpression	"r_str_word_get0 ( ptr , 0 )"		821610	0					
ANR	821945	Callee	r_str_word_get0		821610	0					
ANR	821946	Identifier	r_str_word_get0		821610	0					
ANR	821947	ArgumentList	ptr		821610	1					
ANR	821948	Argument	ptr		821610	0					
ANR	821949	Identifier	ptr		821610	0					
ANR	821950	Argument	0		821610	1					
ANR	821951	PrimaryExpression	0		821610	0					
ANR	821952	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , fcnaddr , 0 )"	2226:1:70283:70331	821610	27	True				
ANR	821953	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , fcnaddr , 0 )"		821610	0		=			
ANR	821954	Identifier	fcn		821610	0					
ANR	821955	CallExpression	"r_anal_get_fcn_in ( core -> anal , fcnaddr , 0 )"		821610	1					
ANR	821956	Callee	r_anal_get_fcn_in		821610	0					
ANR	821957	Identifier	r_anal_get_fcn_in		821610	0					
ANR	821958	ArgumentList	core -> anal		821610	1					
ANR	821959	Argument	core -> anal		821610	0					
ANR	821960	PtrMemberAccess	core -> anal		821610	0					
ANR	821961	Identifier	core		821610	0					
ANR	821962	Identifier	anal		821610	1					
ANR	821963	Argument	fcnaddr		821610	1					
ANR	821964	Identifier	fcnaddr		821610	0					
ANR	821965	Argument	0		821610	2					
ANR	821966	PrimaryExpression	0		821610	0					
ANR	821967	IfStatement	if ( fcn )		821610	28					
ANR	821968	Condition	fcn	2227:5:70338:70340	821610	0	True				
ANR	821969	Identifier	fcn		821610	0					
ANR	821970	CompoundStatement		55:10:1434:1434	821610	1					
ANR	821971	IfStatement	"if ( ! r_anal_fcn_add_bb ( core -> anal , fcn , addr , size , jump , fail , type , diff ) )"		821610	0					
ANR	821972	Condition	"! r_anal_fcn_add_bb ( core -> anal , fcn , addr , size , jump , fail , type , diff )"	2228:6:70351:70422	821610	0	True				
ANR	821973	UnaryOperationExpression	"! r_anal_fcn_add_bb ( core -> anal , fcn , addr , size , jump , fail , type , diff )"		821610	0					
ANR	821974	UnaryOperator	!		821610	0					
ANR	821975	CallExpression	"r_anal_fcn_add_bb ( core -> anal , fcn , addr , size , jump , fail , type , diff )"		821610	1					
ANR	821976	Callee	r_anal_fcn_add_bb		821610	0					
ANR	821977	Identifier	r_anal_fcn_add_bb		821610	0					
ANR	821978	ArgumentList	core -> anal		821610	1					
ANR	821979	Argument	core -> anal		821610	0					
ANR	821980	PtrMemberAccess	core -> anal		821610	0					
ANR	821981	Identifier	core		821610	0					
ANR	821982	Identifier	anal		821610	1					
ANR	821983	Argument	fcn		821610	1					
ANR	821984	Identifier	fcn		821610	0					
ANR	821985	Argument	addr		821610	2					
ANR	821986	Identifier	addr		821610	0					
ANR	821987	Argument	size		821610	3					
ANR	821988	Identifier	size		821610	0					
ANR	821989	Argument	jump		821610	4					
ANR	821990	Identifier	jump		821610	0					
ANR	821991	Argument	fail		821610	5					
ANR	821992	Identifier	fail		821610	0					
ANR	821993	Argument	type		821610	6					
ANR	821994	Identifier	type		821610	0					
ANR	821995	Argument	diff		821610	7					
ANR	821996	Identifier	diff		821610	0					
ANR	821997	CompoundStatement		58:2:1604:1604	821610	1					
ANR	821998	Statement	eprintf	2231:3:70518:70524	821610	0	True				
ANR	821999	Statement	(	2231:11:70526:70526	821610	1	True				
ANR	822000	Statement	"""afb+: Cannot add basic block at 0x%08"""	2231:12:70527:70565	821610	2	True				
ANR	822001	Statement	PFMT64x	2231:51:70566:70572	821610	3	True				
ANR	822002	Statement	"""\\n"""	2231:58:70573:70576	821610	4	True				
ANR	822003	Statement	","	2231:62:70577:70577	821610	5	True				
ANR	822004	Statement	addr	2231:64:70579:70582	821610	6	True				
ANR	822005	Statement	)	2231:68:70583:70583	821610	7	True				
ANR	822006	ExpressionStatement		2231:69:70584:70584	821610	8	True				
ANR	822007	ExpressionStatement	"eprintf ( ""# %s\\n"" , input )"	2232:0:70586:70611	821610	9	True				
ANR	822008	CallExpression	"eprintf ( ""# %s\\n"" , input )"		821610	0					
ANR	822009	Callee	eprintf		821610	0					
ANR	822010	Identifier	eprintf		821610	0					
ANR	822011	ArgumentList	"""# %s\\n"""		821610	1					
ANR	822012	Argument	"""# %s\\n"""		821610	0					
ANR	822013	PrimaryExpression	"""# %s\\n"""		821610	0					
ANR	822014	Argument	input		821610	1					
ANR	822015	Identifier	input		821610	0					
ANR	822016	ElseStatement	else		821610	0					
ANR	822017	CompoundStatement		62:8:1716:1716	821610	0					
ANR	822018	Statement	eprintf	2235:2:70629:70635	821610	0	True				
ANR	822019	Statement	(	2235:10:70637:70637	821610	1	True				
ANR	822020	Statement	"""afb+ Cannot find function at 0x%"""	2235:11:70638:70671	821610	2	True				
ANR	822021	Statement	PFMT64x	2235:46:70673:70679	821610	3	True				
ANR	822022	Statement	""" from 0x%08"""	2235:54:70681:70693	821610	4	True				
ANR	822023	Statement	PFMT64x	2235:67:70694:70700	821610	5	True				
ANR	822024	Statement	""" -> 0x%08"""	2235:74:70701:70711	821610	6	True				
ANR	822025	Statement	PFMT64x	2235:85:70712:70718	821610	7	True				
ANR	822026	Statement	"""\\n"""	2235:92:70719:70722	821610	8	True				
ANR	822027	Statement	","	2235:96:70723:70723	821610	9	True				
ANR	822028	Statement	fcnaddr	2236:4:70729:70735	821610	10	True				
ANR	822029	Statement	","	2236:11:70736:70736	821610	11	True				
ANR	822030	Statement	addr	2236:13:70738:70741	821610	12	True				
ANR	822031	Statement	","	2236:17:70742:70742	821610	13	True				
ANR	822032	Statement	jump	2236:19:70744:70747	821610	14	True				
ANR	822033	Statement	)	2236:23:70748:70748	821610	15	True				
ANR	822034	ExpressionStatement		2236:24:70749:70749	821610	16	True				
ANR	822035	ExpressionStatement	r_anal_diff_free ( diff )	2238:1:70755:70778	821610	29	True				
ANR	822036	CallExpression	r_anal_diff_free ( diff )		821610	0					
ANR	822037	Callee	r_anal_diff_free		821610	0					
ANR	822038	Identifier	r_anal_diff_free		821610	0					
ANR	822039	ArgumentList	diff		821610	1					
ANR	822040	Argument	diff		821610	0					
ANR	822041	Identifier	diff		821610	0					
ANR	822042	ExpressionStatement	free ( ptr )	2239:1:70781:70791	821610	30	True				
ANR	822043	CallExpression	free ( ptr )		821610	0					
ANR	822044	Callee	free		821610	0					
ANR	822045	Identifier	free		821610	0					
ANR	822046	ArgumentList	ptr		821610	1					
ANR	822047	Argument	ptr		821610	0					
ANR	822048	Identifier	ptr		821610	0					
ANR	822049	ReturnStatement	return true ;	2240:1:70794:70805	821610	31	True				
ANR	822050	Identifier	true		821610	0					
ANR	822051	ReturnType	static int		821610	1					
ANR	822052	Identifier	anal_fcn_add_bb		821610	2					
ANR	822053	ParameterList	"RCore * core , const char * input"		821610	3					
ANR	822054	Parameter	RCore * core	2173:27:68876:68886	821610	0	True				
ANR	822055	ParameterType	RCore *		821610	0					
ANR	822056	Identifier	core		821610	1					
ANR	822057	Parameter	const char * input	2173:40:68889:68905	821610	1	True				
ANR	822058	ParameterType	const char *		821610	0					
ANR	822059	Identifier	input		821610	1					
ANR	822060	CFGEntryNode	ENTRY		821610		True				
ANR	822061	CFGExitNode	EXIT		821610		True				
ANR	822062	Symbol	R_ANAL_BB_TYPE_NULL		821610						
ANR	822063	Symbol	R_ANAL_DIFF_TYPE_MATCH		821610						
ANR	822064	Symbol	* input		821610						
ANR	822065	Symbol	* core		821610						
ANR	822066	Symbol	strchr		821610						
ANR	822067	Symbol	r_anal_fcn_add_bb		821610						
ANR	822068	Symbol	type		821610						
ANR	822069	Symbol	r_str_word_set0		821610						
ANR	822070	Symbol	core -> anal		821610						
ANR	822071	Symbol	r_num_math		821610						
ANR	822072	Symbol	fcn		821610						
ANR	822073	Symbol	R_ANAL_BB_TYPE_LAST		821610						
ANR	822074	Symbol	* ptr2		821610						
ANR	822075	Symbol	UT64_MAX		821610						
ANR	822076	Symbol	core -> num		821610						
ANR	822077	Symbol	addr		821610						
ANR	822078	Symbol	jump		821610						
ANR	822079	Symbol	r_anal_diff_new		821610						
ANR	822080	Symbol	NULL		821610						
ANR	822081	Symbol	R_ANAL_BB_TYPE_BODY		821610						
ANR	822082	Symbol	R_ANAL_BB_TYPE_HEAD		821610						
ANR	822083	Symbol	fcnaddr		821610						
ANR	822084	Symbol	* diff		821610						
ANR	822085	Symbol	false		821610						
ANR	822086	Symbol	diff		821610						
ANR	822087	Symbol	r_str_word_get0		821610						
ANR	822088	Symbol	R_ANAL_BB_TYPE_FOOT		821610						
ANR	822089	Symbol	R_ANAL_DIFF_TYPE_UNMATCH		821610						
ANR	822090	Symbol	ptr		821610						
ANR	822091	Symbol	ptr2		821610						
ANR	822092	Symbol	core		821610						
ANR	822093	Symbol	input		821610						
ANR	822094	Symbol	fail		821610						
ANR	822095	Symbol	diff -> type		821610						
ANR	822096	Symbol	r_anal_get_fcn_in		821610						
ANR	822097	Symbol	size		821610						
ANR	822098	Symbol	true		821610						
ANR	822099	Symbol	strdup		821610						
ANR	822100	Function	r_core_anal_nofunclist	2243:0:70810:72903							
ANR	822101	FunctionDef	"r_core_anal_nofunclist (RCore * core , const char * input)"		822100	0					
ANR	822102	CompoundStatement		2243:69:70879:72903	822100	0					
ANR	822103	IdentifierDeclStatement	"int minlen = ( int ) ( input [ 0 ] == ' ' ) ? r_num_math ( core -> num , input + 1 ) : 16 ;"	2244:1:70882:70955	822100	0	True				
ANR	822104	IdentifierDecl	"minlen = ( int ) ( input [ 0 ] == ' ' ) ? r_num_math ( core -> num , input + 1 ) : 16"		822100	0					
ANR	822105	IdentifierDeclType	int		822100	0					
ANR	822106	Identifier	minlen		822100	1					
ANR	822107	AssignmentExpression	"minlen = ( int ) ( input [ 0 ] == ' ' ) ? r_num_math ( core -> num , input + 1 ) : 16"		822100	2		=			
ANR	822108	Identifier	minlen		822100	0					
ANR	822109	ConditionalExpression	"( int ) ( input [ 0 ] == ' ' ) ? r_num_math ( core -> num , input + 1 ) : 16"		822100	1					
ANR	822110	Condition	( int ) ( input [ 0 ] == ' ' )		822100	0					
ANR	822111	CastExpression	( int ) ( input [ 0 ] == ' ' )		822100	0					
ANR	822112	CastTarget	int		822100	0					
ANR	822113	EqualityExpression	input [ 0 ] == ' '		822100	1		==			
ANR	822114	ArrayIndexing	input [ 0 ]		822100	0					
ANR	822115	Identifier	input		822100	0					
ANR	822116	PrimaryExpression	0		822100	1					
ANR	822117	PrimaryExpression	' '		822100	1					
ANR	822118	CallExpression	"r_num_math ( core -> num , input + 1 )"		822100	1					
ANR	822119	Callee	r_num_math		822100	0					
ANR	822120	Identifier	r_num_math		822100	0					
ANR	822121	ArgumentList	core -> num		822100	1					
ANR	822122	Argument	core -> num		822100	0					
ANR	822123	PtrMemberAccess	core -> num		822100	0					
ANR	822124	Identifier	core		822100	0					
ANR	822125	Identifier	num		822100	1					
ANR	822126	Argument	input + 1		822100	1					
ANR	822127	AdditiveExpression	input + 1		822100	0		+			
ANR	822128	Identifier	input		822100	0					
ANR	822129	PrimaryExpression	1		822100	1					
ANR	822130	PrimaryExpression	16		822100	2					
ANR	822131	IdentifierDeclStatement	"ut64 code_size = r_num_get ( core -> num , ""$SS"" ) ;"	2245:1:70958:71003	822100	1	True				
ANR	822132	IdentifierDecl	"code_size = r_num_get ( core -> num , ""$SS"" )"		822100	0					
ANR	822133	IdentifierDeclType	ut64		822100	0					
ANR	822134	Identifier	code_size		822100	1					
ANR	822135	AssignmentExpression	"code_size = r_num_get ( core -> num , ""$SS"" )"		822100	2		=			
ANR	822136	Identifier	code_size		822100	0					
ANR	822137	CallExpression	"r_num_get ( core -> num , ""$SS"" )"		822100	1					
ANR	822138	Callee	r_num_get		822100	0					
ANR	822139	Identifier	r_num_get		822100	0					
ANR	822140	ArgumentList	core -> num		822100	1					
ANR	822141	Argument	core -> num		822100	0					
ANR	822142	PtrMemberAccess	core -> num		822100	0					
ANR	822143	Identifier	core		822100	0					
ANR	822144	Identifier	num		822100	1					
ANR	822145	Argument	"""$SS"""		822100	1					
ANR	822146	PrimaryExpression	"""$SS"""		822100	0					
ANR	822147	IdentifierDeclStatement	"ut64 base_addr = r_num_get ( core -> num , ""$S"" ) ;"	2246:1:71006:71050	822100	2	True				
ANR	822148	IdentifierDecl	"base_addr = r_num_get ( core -> num , ""$S"" )"		822100	0					
ANR	822149	IdentifierDeclType	ut64		822100	0					
ANR	822150	Identifier	base_addr		822100	1					
ANR	822151	AssignmentExpression	"base_addr = r_num_get ( core -> num , ""$S"" )"		822100	2		=			
ANR	822152	Identifier	base_addr		822100	0					
ANR	822153	CallExpression	"r_num_get ( core -> num , ""$S"" )"		822100	1					
ANR	822154	Callee	r_num_get		822100	0					
ANR	822155	Identifier	r_num_get		822100	0					
ANR	822156	ArgumentList	core -> num		822100	1					
ANR	822157	Argument	core -> num		822100	0					
ANR	822158	PtrMemberAccess	core -> num		822100	0					
ANR	822159	Identifier	core		822100	0					
ANR	822160	Identifier	num		822100	1					
ANR	822161	Argument	"""$S"""		822100	1					
ANR	822162	PrimaryExpression	"""$S"""		822100	0					
ANR	822163	IdentifierDeclStatement	"ut64 chunk_size , chunk_offset , i ;"	2247:1:71053:71085	822100	3	True				
ANR	822164	IdentifierDecl	chunk_size		822100	0					
ANR	822165	IdentifierDeclType	ut64		822100	0					
ANR	822166	Identifier	chunk_size		822100	1					
ANR	822167	IdentifierDecl	chunk_offset		822100	1					
ANR	822168	IdentifierDeclType	ut64		822100	0					
ANR	822169	Identifier	chunk_offset		822100	1					
ANR	822170	IdentifierDecl	i		822100	2					
ANR	822171	IdentifierDeclType	ut64		822100	0					
ANR	822172	Identifier	i		822100	1					
ANR	822173	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	2248:1:71088:71111	822100	4	True				
ANR	822174	IdentifierDecl	* iter		822100	0					
ANR	822175	IdentifierDeclType	RListIter *		822100	0					
ANR	822176	Identifier	iter		822100	1					
ANR	822177	IdentifierDecl	* iter2		822100	1					
ANR	822178	IdentifierDeclType	RListIter *		822100	0					
ANR	822179	Identifier	iter2		822100	1					
ANR	822180	IdentifierDeclStatement	RAnalFunction * fcn ;	2249:1:71114:71132	822100	5	True				
ANR	822181	IdentifierDecl	* fcn		822100	0					
ANR	822182	IdentifierDeclType	RAnalFunction *		822100	0					
ANR	822183	Identifier	fcn		822100	1					
ANR	822184	IdentifierDeclStatement	RAnalBlock * b ;	2250:1:71135:71148	822100	6	True				
ANR	822185	IdentifierDecl	* b		822100	0					
ANR	822186	IdentifierDeclType	RAnalBlock *		822100	0					
ANR	822187	Identifier	b		822100	1					
ANR	822188	IdentifierDeclStatement	char * bitmap ;	2251:1:71151:71163	822100	7	True				
ANR	822189	IdentifierDecl	* bitmap		822100	0					
ANR	822190	IdentifierDeclType	char *		822100	0					
ANR	822191	Identifier	bitmap		822100	1					
ANR	822192	IdentifierDeclStatement	int counter ;	2252:1:71166:71177	822100	8	True				
ANR	822193	IdentifierDecl	counter		822100	0					
ANR	822194	IdentifierDeclType	int		822100	0					
ANR	822195	Identifier	counter		822100	1					
ANR	822196	IfStatement	if ( minlen < 1 )		822100	9					
ANR	822197	Condition	minlen < 1	2254:5:71185:71194	822100	0	True				
ANR	822198	RelationalExpression	minlen < 1		822100	0		<			
ANR	822199	Identifier	minlen		822100	0					
ANR	822200	PrimaryExpression	1		822100	1					
ANR	822201	CompoundStatement		12:17:317:317	822100	1					
ANR	822202	ExpressionStatement	minlen = 1	2255:2:71201:71211	822100	0	True				
ANR	822203	AssignmentExpression	minlen = 1		822100	0		=			
ANR	822204	Identifier	minlen		822100	0					
ANR	822205	PrimaryExpression	1		822100	1					
ANR	822206	IfStatement	if ( code_size < 1 )		822100	10					
ANR	822207	Condition	code_size < 1	2257:5:71221:71233	822100	0	True				
ANR	822208	RelationalExpression	code_size < 1		822100	0		<			
ANR	822209	Identifier	code_size		822100	0					
ANR	822210	PrimaryExpression	1		822100	1					
ANR	822211	CompoundStatement		15:20:356:356	822100	1					
ANR	822212	ReturnStatement	return ;	2258:2:71240:71246	822100	0	True				
ANR	822213	ExpressionStatement	"bitmap = calloc ( 1 , code_size + 64 )"	2260:1:71252:71285	822100	11	True				
ANR	822214	AssignmentExpression	"bitmap = calloc ( 1 , code_size + 64 )"		822100	0		=			
ANR	822215	Identifier	bitmap		822100	0					
ANR	822216	CallExpression	"calloc ( 1 , code_size + 64 )"		822100	1					
ANR	822217	Callee	calloc		822100	0					
ANR	822218	Identifier	calloc		822100	0					
ANR	822219	ArgumentList	1		822100	1					
ANR	822220	Argument	1		822100	0					
ANR	822221	PrimaryExpression	1		822100	0					
ANR	822222	Argument	code_size + 64		822100	1					
ANR	822223	AdditiveExpression	code_size + 64		822100	0		+			
ANR	822224	Identifier	code_size		822100	0					
ANR	822225	PrimaryExpression	64		822100	1					
ANR	822226	IfStatement	if ( ! bitmap )		822100	12					
ANR	822227	Condition	! bitmap	2261:5:71292:71298	822100	0	True				
ANR	822228	UnaryOperationExpression	! bitmap		822100	0					
ANR	822229	UnaryOperator	!		822100	0					
ANR	822230	Identifier	bitmap		822100	1					
ANR	822231	CompoundStatement		19:14:421:421	822100	1					
ANR	822232	ReturnStatement	return ;	2262:2:71305:71311	822100	0	True				
ANR	822233	Statement	r_list_foreach	2266:1:71340:71353	822100	13	True				
ANR	822234	Statement	(	2266:16:71355:71355	822100	14	True				
ANR	822235	Statement	core	2266:17:71356:71359	822100	15	True				
ANR	822236	Statement	->	2266:21:71360:71361	822100	16	True				
ANR	822237	Statement	anal	2266:23:71362:71365	822100	17	True				
ANR	822238	Statement	->	2266:27:71366:71367	822100	18	True				
ANR	822239	Statement	fcns	2266:29:71368:71371	822100	19	True				
ANR	822240	Statement	","	2266:33:71372:71372	822100	20	True				
ANR	822241	Statement	iter	2266:35:71374:71377	822100	21	True				
ANR	822242	Statement	","	2266:39:71378:71378	822100	22	True				
ANR	822243	Statement	fcn	2266:41:71380:71382	822100	23	True				
ANR	822244	Statement	)	2266:44:71383:71383	822100	24	True				
ANR	822245	CompoundStatement		24:46:505:505	822100	25					
ANR	822246	Statement	r_list_foreach	2268:2:71431:71444	822100	0	True				
ANR	822247	Statement	(	2268:17:71446:71446	822100	1	True				
ANR	822248	Statement	fcn	2268:18:71447:71449	822100	2	True				
ANR	822249	Statement	->	2268:21:71450:71451	822100	3	True				
ANR	822250	Statement	bbs	2268:23:71452:71454	822100	4	True				
ANR	822251	Statement	","	2268:26:71455:71455	822100	5	True				
ANR	822252	Statement	iter2	2268:28:71457:71461	822100	6	True				
ANR	822253	Statement	","	2268:33:71462:71462	822100	7	True				
ANR	822254	Statement	b	2268:35:71464:71464	822100	8	True				
ANR	822255	Statement	)	2268:36:71465:71465	822100	9	True				
ANR	822256	CompoundStatement		26:38:587:587	822100	10					
ANR	822257	IfStatement	if ( ( fcn -> addr < base_addr ) || ( fcn -> addr >= base_addr + code_size ) )		822100	0					
ANR	822258	Condition	( fcn -> addr < base_addr ) || ( fcn -> addr >= base_addr + code_size )	2270:7:71519:71579	822100	0	True				
ANR	822259	OrExpression	( fcn -> addr < base_addr ) || ( fcn -> addr >= base_addr + code_size )		822100	0		||			
ANR	822260	RelationalExpression	fcn -> addr < base_addr		822100	0		<			
ANR	822261	PtrMemberAccess	fcn -> addr		822100	0					
ANR	822262	Identifier	fcn		822100	0					
ANR	822263	Identifier	addr		822100	1					
ANR	822264	Identifier	base_addr		822100	1					
ANR	822265	RelationalExpression	fcn -> addr >= base_addr + code_size		822100	1		>=			
ANR	822266	PtrMemberAccess	fcn -> addr		822100	0					
ANR	822267	Identifier	fcn		822100	0					
ANR	822268	Identifier	addr		822100	1					
ANR	822269	AdditiveExpression	base_addr + code_size		822100	1		+			
ANR	822270	Identifier	base_addr		822100	0					
ANR	822271	Identifier	code_size		822100	1					
ANR	822272	ContinueStatement	continue ;	2271:4:71586:71594	822100	1	True				
ANR	822273	ForStatement	for ( counter = 0 ; counter < b -> size ; counter ++ )		822100	1					
ANR	822274	ForInit	counter = 0 ;	2273:8:71659:71670	822100	0	True				
ANR	822275	AssignmentExpression	counter = 0		822100	0		=			
ANR	822276	Identifier	counter		822100	0					
ANR	822277	PrimaryExpression	0		822100	1					
ANR	822278	Condition	counter < b -> size	2273:21:71672:71688	822100	1	True				
ANR	822279	RelationalExpression	counter < b -> size		822100	0		<			
ANR	822280	Identifier	counter		822100	0					
ANR	822281	PtrMemberAccess	b -> size		822100	1					
ANR	822282	Identifier	b		822100	0					
ANR	822283	Identifier	size		822100	1					
ANR	822284	PostIncDecOperationExpression	counter ++	2273:40:71691:71699	822100	2	True				
ANR	822285	Identifier	counter		822100	0					
ANR	822286	IncDec	++		822100	1					
ANR	822287	CompoundStatement		31:51:822:822	822100	3					
ANR	822288	ExpressionStatement	bitmap [ b -> addr + counter - base_addr ] = '='	2274:4:71708:71747	822100	0	True				
ANR	822289	AssignmentExpression	bitmap [ b -> addr + counter - base_addr ] = '='		822100	0		=			
ANR	822290	ArrayIndexing	bitmap [ b -> addr + counter - base_addr ]		822100	0					
ANR	822291	Identifier	bitmap		822100	0					
ANR	822292	AdditiveExpression	b -> addr + counter - base_addr		822100	1		+			
ANR	822293	PtrMemberAccess	b -> addr		822100	0					
ANR	822294	Identifier	b		822100	0					
ANR	822295	Identifier	addr		822100	1					
ANR	822296	AdditiveExpression	counter - base_addr		822100	1		-			
ANR	822297	Identifier	counter		822100	0					
ANR	822298	Identifier	base_addr		822100	1					
ANR	822299	PrimaryExpression	'='		822100	1					
ANR	822300	ExpressionStatement	bitmap [ fcn -> addr - base_addr ] = 'F'	2278:3:71835:71868	822100	2	True				
ANR	822301	AssignmentExpression	bitmap [ fcn -> addr - base_addr ] = 'F'		822100	0		=			
ANR	822302	ArrayIndexing	bitmap [ fcn -> addr - base_addr ]		822100	0					
ANR	822303	Identifier	bitmap		822100	0					
ANR	822304	AdditiveExpression	fcn -> addr - base_addr		822100	1		-			
ANR	822305	PtrMemberAccess	fcn -> addr		822100	0					
ANR	822306	Identifier	fcn		822100	0					
ANR	822307	Identifier	addr		822100	1					
ANR	822308	Identifier	base_addr		822100	1					
ANR	822309	PrimaryExpression	'F'		822100	1					
ANR	822310	ExpressionStatement	chunk_size = 0	2283:1:71959:71973	822100	26	True				
ANR	822311	AssignmentExpression	chunk_size = 0		822100	0		=			
ANR	822312	Identifier	chunk_size		822100	0					
ANR	822313	PrimaryExpression	0		822100	1					
ANR	822314	ExpressionStatement	chunk_offset = 0	2284:1:71976:71992	822100	27	True				
ANR	822315	AssignmentExpression	chunk_offset = 0		822100	0		=			
ANR	822316	Identifier	chunk_offset		822100	0					
ANR	822317	PrimaryExpression	0		822100	1					
ANR	822318	ForStatement	for ( i = 0 ; i < code_size ; i ++ )		822100	28					
ANR	822319	ForInit	i = 0 ;	2285:6:72000:72005	822100	0	True				
ANR	822320	AssignmentExpression	i = 0		822100	0		=			
ANR	822321	Identifier	i		822100	0					
ANR	822322	PrimaryExpression	0		822100	1					
ANR	822323	Condition	i < code_size	2285:13:72007:72019	822100	1	True				
ANR	822324	RelationalExpression	i < code_size		822100	0		<			
ANR	822325	Identifier	i		822100	0					
ANR	822326	Identifier	code_size		822100	1					
ANR	822327	PostIncDecOperationExpression	i ++	2285:28:72022:72024	822100	2	True				
ANR	822328	Identifier	i		822100	0					
ANR	822329	IncDec	++		822100	1					
ANR	822330	CompoundStatement		43:33:1147:1147	822100	3					
ANR	822331	IfStatement	if ( bitmap [ i ] )		822100	0					
ANR	822332	Condition	bitmap [ i ]	2286:6:72035:72043	822100	0	True				
ANR	822333	ArrayIndexing	bitmap [ i ]		822100	0					
ANR	822334	Identifier	bitmap		822100	0					
ANR	822335	Identifier	i		822100	1					
ANR	822336	CompoundStatement		44:16:1165:1165	822100	1					
ANR	822337	IfStatement	if ( chunk_size >= minlen )		822100	0					
ANR	822338	Condition	chunk_size >= minlen	2288:7:72119:72138	822100	0	True				
ANR	822339	RelationalExpression	chunk_size >= minlen		822100	0		>=			
ANR	822340	Identifier	chunk_size		822100	0					
ANR	822341	Identifier	minlen		822100	1					
ANR	822342	CompoundStatement		46:28:1260:1260	822100	1					
ANR	822343	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , base_addr + chunk_offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"	2289:4:72146:72249	822100	0	True				
ANR	822344	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , base_addr + chunk_offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		822100	0		=			
ANR	822345	Identifier	fcn		822100	0					
ANR	822346	CallExpression	"r_anal_get_fcn_in ( core -> anal , base_addr + chunk_offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		822100	1					
ANR	822347	Callee	r_anal_get_fcn_in		822100	0					
ANR	822348	Identifier	r_anal_get_fcn_in		822100	0					
ANR	822349	ArgumentList	core -> anal		822100	1					
ANR	822350	Argument	core -> anal		822100	0					
ANR	822351	PtrMemberAccess	core -> anal		822100	0					
ANR	822352	Identifier	core		822100	0					
ANR	822353	Identifier	anal		822100	1					
ANR	822354	Argument	base_addr + chunk_offset		822100	1					
ANR	822355	AdditiveExpression	base_addr + chunk_offset		822100	0		+			
ANR	822356	Identifier	base_addr		822100	0					
ANR	822357	Identifier	chunk_offset		822100	1					
ANR	822358	Argument	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		822100	2					
ANR	822359	InclusiveOrExpression	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		822100	0		|			
ANR	822360	Identifier	R_ANAL_FCN_TYPE_FCN		822100	0					
ANR	822361	Identifier	R_ANAL_FCN_TYPE_SYM		822100	1					
ANR	822362	IfStatement	if ( fcn )		822100	1					
ANR	822363	Condition	fcn	2290:8:72259:72261	822100	0	True				
ANR	822364	Identifier	fcn		822100	0					
ANR	822365	CompoundStatement		48:13:1384:1384	822100	1					
ANR	822366	Statement	r_cons_printf	2291:5:72271:72283	822100	0	True				
ANR	822367	Statement	(	2291:19:72285:72285	822100	1	True				
ANR	822368	Statement	"""0x%08"""	2291:20:72286:72292	822100	2	True				
ANR	822369	Statement	PFMT64x	2291:27:72293:72299	822100	3	True				
ANR	822370	Statement	"""  %6d   %s\\n"""	2291:34:72300:72313	822100	4	True				
ANR	822371	Statement	","	2291:48:72314:72314	822100	5	True				
ANR	822372	Statement	base_addr	2291:50:72316:72324	822100	6	True				
ANR	822373	Statement	+	2291:59:72325:72325	822100	7	True				
ANR	822374	Statement	chunk_offset	2291:60:72326:72337	822100	8	True				
ANR	822375	Statement	","	2291:72:72338:72338	822100	9	True				
ANR	822376	Statement	chunk_size	2291:74:72340:72349	822100	10	True				
ANR	822377	Statement	","	2291:84:72350:72350	822100	11	True				
ANR	822378	Statement	fcn	2291:86:72352:72354	822100	12	True				
ANR	822379	Statement	->	2291:89:72355:72356	822100	13	True				
ANR	822380	Statement	name	2291:91:72357:72360	822100	14	True				
ANR	822381	Statement	)	2291:95:72361:72361	822100	15	True				
ANR	822382	ExpressionStatement		2291:96:72362:72362	822100	16	True				
ANR	822383	ElseStatement	else		822100	0					
ANR	822384	CompoundStatement		50:11:1495:1495	822100	0					
ANR	822385	Statement	r_cons_printf	2293:5:72382:72394	822100	0	True				
ANR	822386	Statement	(	2293:19:72396:72396	822100	1	True				
ANR	822387	Statement	"""0x%08"""	2293:20:72397:72403	822100	2	True				
ANR	822388	Statement	PFMT64x	2293:27:72404:72410	822100	3	True				
ANR	822389	Statement	"""  %6d\\n"""	2293:34:72411:72419	822100	4	True				
ANR	822390	Statement	","	2293:43:72420:72420	822100	5	True				
ANR	822391	Statement	base_addr	2293:45:72422:72430	822100	6	True				
ANR	822392	Statement	+	2293:54:72431:72431	822100	7	True				
ANR	822393	Statement	chunk_offset	2293:55:72432:72443	822100	8	True				
ANR	822394	Statement	","	2293:67:72444:72444	822100	9	True				
ANR	822395	Statement	chunk_size	2293:69:72446:72455	822100	10	True				
ANR	822396	Statement	)	2293:79:72456:72456	822100	11	True				
ANR	822397	ExpressionStatement		2293:80:72457:72457	822100	12	True				
ANR	822398	ExpressionStatement	chunk_size = 0	2296:3:72473:72487	822100	1	True				
ANR	822399	AssignmentExpression	chunk_size = 0		822100	0		=			
ANR	822400	Identifier	chunk_size		822100	0					
ANR	822401	PrimaryExpression	0		822100	1					
ANR	822402	ExpressionStatement	chunk_offset = i + 1	2297:3:72492:72510	822100	2	True				
ANR	822403	AssignmentExpression	chunk_offset = i + 1		822100	0		=			
ANR	822404	Identifier	chunk_offset		822100	0					
ANR	822405	AdditiveExpression	i + 1		822100	1		+			
ANR	822406	Identifier	i		822100	0					
ANR	822407	PrimaryExpression	1		822100	1					
ANR	822408	ContinueStatement	continue ;	2298:3:72515:72523	822100	3	True				
ANR	822409	ExpressionStatement	chunk_size += 1	2300:2:72531:72544	822100	1	True				
ANR	822410	AssignmentExpression	chunk_size += 1		822100	0		+=			
ANR	822411	Identifier	chunk_size		822100	0					
ANR	822412	PrimaryExpression	1		822100	1					
ANR	822413	IfStatement	if ( chunk_size >= 16 )		822100	29					
ANR	822414	Condition	chunk_size >= 16	2302:5:72554:72569	822100	0	True				
ANR	822415	RelationalExpression	chunk_size >= 16		822100	0		>=			
ANR	822416	Identifier	chunk_size		822100	0					
ANR	822417	PrimaryExpression	16		822100	1					
ANR	822418	CompoundStatement		60:23:1692:1692	822100	1					
ANR	822419	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , base_addr + chunk_offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"	2303:2:72576:72679	822100	0	True				
ANR	822420	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , base_addr + chunk_offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		822100	0		=			
ANR	822421	Identifier	fcn		822100	0					
ANR	822422	CallExpression	"r_anal_get_fcn_in ( core -> anal , base_addr + chunk_offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		822100	1					
ANR	822423	Callee	r_anal_get_fcn_in		822100	0					
ANR	822424	Identifier	r_anal_get_fcn_in		822100	0					
ANR	822425	ArgumentList	core -> anal		822100	1					
ANR	822426	Argument	core -> anal		822100	0					
ANR	822427	PtrMemberAccess	core -> anal		822100	0					
ANR	822428	Identifier	core		822100	0					
ANR	822429	Identifier	anal		822100	1					
ANR	822430	Argument	base_addr + chunk_offset		822100	1					
ANR	822431	AdditiveExpression	base_addr + chunk_offset		822100	0		+			
ANR	822432	Identifier	base_addr		822100	0					
ANR	822433	Identifier	chunk_offset		822100	1					
ANR	822434	Argument	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		822100	2					
ANR	822435	InclusiveOrExpression	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		822100	0		|			
ANR	822436	Identifier	R_ANAL_FCN_TYPE_FCN		822100	0					
ANR	822437	Identifier	R_ANAL_FCN_TYPE_SYM		822100	1					
ANR	822438	IfStatement	if ( fcn )		822100	1					
ANR	822439	Condition	fcn	2304:6:72687:72689	822100	0	True				
ANR	822440	Identifier	fcn		822100	0					
ANR	822441	CompoundStatement		62:11:1812:1812	822100	1					
ANR	822442	Statement	r_cons_printf	2305:3:72697:72709	822100	0	True				
ANR	822443	Statement	(	2305:17:72711:72711	822100	1	True				
ANR	822444	Statement	"""0x%08"""	2305:18:72712:72718	822100	2	True				
ANR	822445	Statement	PFMT64x	2305:25:72719:72725	822100	3	True				
ANR	822446	Statement	"""  %6d   %s\\n"""	2305:32:72726:72739	822100	4	True				
ANR	822447	Statement	","	2305:46:72740:72740	822100	5	True				
ANR	822448	Statement	base_addr	2305:48:72742:72750	822100	6	True				
ANR	822449	Statement	+	2305:57:72751:72751	822100	7	True				
ANR	822450	Statement	chunk_offset	2305:58:72752:72763	822100	8	True				
ANR	822451	Statement	","	2305:70:72764:72764	822100	9	True				
ANR	822452	Statement	chunk_size	2305:72:72766:72775	822100	10	True				
ANR	822453	Statement	","	2305:82:72776:72776	822100	11	True				
ANR	822454	Statement	fcn	2305:84:72778:72780	822100	12	True				
ANR	822455	Statement	->	2305:87:72781:72782	822100	13	True				
ANR	822456	Statement	name	2305:89:72783:72786	822100	14	True				
ANR	822457	Statement	)	2305:93:72787:72787	822100	15	True				
ANR	822458	ExpressionStatement		2305:94:72788:72788	822100	16	True				
ANR	822459	ElseStatement	else		822100	0					
ANR	822460	CompoundStatement		64:9:1919:1919	822100	0					
ANR	822461	Statement	r_cons_printf	2307:3:72804:72816	822100	0	True				
ANR	822462	Statement	(	2307:17:72818:72818	822100	1	True				
ANR	822463	Statement	"""0x%08"""	2307:18:72819:72825	822100	2	True				
ANR	822464	Statement	PFMT64x	2307:25:72826:72832	822100	3	True				
ANR	822465	Statement	"""  %6d\\n"""	2307:32:72833:72841	822100	4	True				
ANR	822466	Statement	","	2307:41:72842:72842	822100	5	True				
ANR	822467	Statement	base_addr	2307:43:72844:72852	822100	6	True				
ANR	822468	Statement	+	2307:52:72853:72853	822100	7	True				
ANR	822469	Statement	chunk_offset	2307:53:72854:72865	822100	8	True				
ANR	822470	Statement	","	2307:65:72866:72866	822100	9	True				
ANR	822471	Statement	chunk_size	2307:67:72868:72877	822100	10	True				
ANR	822472	Statement	)	2307:77:72878:72878	822100	11	True				
ANR	822473	ExpressionStatement		2307:78:72879:72879	822100	12	True				
ANR	822474	ExpressionStatement	free ( bitmap )	2310:1:72889:72901	822100	30	True				
ANR	822475	CallExpression	free ( bitmap )		822100	0					
ANR	822476	Callee	free		822100	0					
ANR	822477	Identifier	free		822100	0					
ANR	822478	ArgumentList	bitmap		822100	1					
ANR	822479	Argument	bitmap		822100	0					
ANR	822480	Identifier	bitmap		822100	0					
ANR	822481	ReturnType	static void		822100	1					
ANR	822482	Identifier	r_core_anal_nofunclist		822100	2					
ANR	822483	ParameterList	"RCore * core , const char * input"		822100	3					
ANR	822484	Parameter	RCore * core	2243:37:70847:70857	822100	0	True				
ANR	822485	ParameterType	RCore *		822100	0					
ANR	822486	Identifier	core		822100	1					
ANR	822487	Parameter	const char * input	2243:50:70860:70876	822100	1	True				
ANR	822488	ParameterType	const char *		822100	0					
ANR	822489	Identifier	input		822100	1					
ANR	822490	CFGEntryNode	ENTRY		822100		True				
ANR	822491	CFGExitNode	EXIT		822100		True				
ANR	822492	CFGErrorNode	ERROR		822100		True				
ANR	822493	Symbol	code_size		822100						
ANR	822494	Symbol	chunk_size		822100						
ANR	822495	Symbol	* fcn		822100						
ANR	822496	Symbol	b -> size		822100						
ANR	822497	Symbol	* fcn -> addr		822100						
ANR	822498	Symbol	R_ANAL_FCN_TYPE_FCN		822100						
ANR	822499	Symbol	* input		822100						
ANR	822500	Symbol	* core		822100						
ANR	822501	Symbol	calloc		822100						
ANR	822502	Symbol	* b -> addr		822100						
ANR	822503	Symbol	core -> anal		822100						
ANR	822504	Symbol	r_num_math		822100						
ANR	822505	Symbol	* base_addr		822100						
ANR	822506	Symbol	b -> addr		822100						
ANR	822507	Symbol	fcn		822100						
ANR	822508	Symbol	* bitmap		822100						
ANR	822509	Symbol	bitmap		822100						
ANR	822510	Symbol	R_ANAL_FCN_TYPE_SYM		822100						
ANR	822511	Symbol	r_num_get		822100						
ANR	822512	Symbol	core -> num		822100						
ANR	822513	Symbol	b		822100						
ANR	822514	Symbol	* * fcn		822100						
ANR	822515	Symbol	iter2		822100						
ANR	822516	Symbol	i		822100						
ANR	822517	Symbol	iter		822100						
ANR	822518	Symbol	* * b		822100						
ANR	822519	Symbol	counter		822100						
ANR	822520	Symbol	* b		822100						
ANR	822521	Symbol	base_addr		822100						
ANR	822522	Symbol	core		822100						
ANR	822523	Symbol	input		822100						
ANR	822524	Symbol	* counter		822100						
ANR	822525	Symbol	* i		822100						
ANR	822526	Symbol	r_anal_get_fcn_in		822100						
ANR	822527	Symbol	minlen		822100						
ANR	822528	Symbol	fcn -> addr		822100						
ANR	822529	Symbol	chunk_offset		822100						
ANR	822530	Function	r_core_anal_fmap	2313:0:72906:74475							
ANR	822531	FunctionDef	"r_core_anal_fmap (RCore * core , const char * input)"		822530	0					
ANR	822532	CompoundStatement		2313:63:72969:74475	822530	0					
ANR	822533	IdentifierDeclStatement	"int show_color = r_config_get_i ( core -> config , ""scr.color"" ) ;"	2314:1:72972:73031	822530	0	True				
ANR	822534	IdentifierDecl	"show_color = r_config_get_i ( core -> config , ""scr.color"" )"		822530	0					
ANR	822535	IdentifierDeclType	int		822530	0					
ANR	822536	Identifier	show_color		822530	1					
ANR	822537	AssignmentExpression	"show_color = r_config_get_i ( core -> config , ""scr.color"" )"		822530	2		=			
ANR	822538	Identifier	show_color		822530	0					
ANR	822539	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		822530	1					
ANR	822540	Callee	r_config_get_i		822530	0					
ANR	822541	Identifier	r_config_get_i		822530	0					
ANR	822542	ArgumentList	core -> config		822530	1					
ANR	822543	Argument	core -> config		822530	0					
ANR	822544	PtrMemberAccess	core -> config		822530	0					
ANR	822545	Identifier	core		822530	0					
ANR	822546	Identifier	config		822530	1					
ANR	822547	Argument	"""scr.color"""		822530	1					
ANR	822548	PrimaryExpression	"""scr.color"""		822530	0					
ANR	822549	IdentifierDeclStatement	"int cols = r_config_get_i ( core -> config , ""hex.cols"" ) * 4 ;"	2315:1:73034:73090	822530	1	True				
ANR	822550	IdentifierDecl	"cols = r_config_get_i ( core -> config , ""hex.cols"" ) * 4"		822530	0					
ANR	822551	IdentifierDeclType	int		822530	0					
ANR	822552	Identifier	cols		822530	1					
ANR	822553	AssignmentExpression	"cols = r_config_get_i ( core -> config , ""hex.cols"" ) * 4"		822530	2		=			
ANR	822554	Identifier	cols		822530	0					
ANR	822555	MultiplicativeExpression	"r_config_get_i ( core -> config , ""hex.cols"" ) * 4"		822530	1		*			
ANR	822556	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		822530	0					
ANR	822557	Callee	r_config_get_i		822530	0					
ANR	822558	Identifier	r_config_get_i		822530	0					
ANR	822559	ArgumentList	core -> config		822530	1					
ANR	822560	Argument	core -> config		822530	0					
ANR	822561	PtrMemberAccess	core -> config		822530	0					
ANR	822562	Identifier	core		822530	0					
ANR	822563	Identifier	config		822530	1					
ANR	822564	Argument	"""hex.cols"""		822530	1					
ANR	822565	PrimaryExpression	"""hex.cols"""		822530	0					
ANR	822566	PrimaryExpression	4		822530	1					
ANR	822567	IdentifierDeclStatement	"ut64 code_size = r_num_get ( core -> num , ""$SS"" ) ;"	2316:1:73093:73138	822530	2	True				
ANR	822568	IdentifierDecl	"code_size = r_num_get ( core -> num , ""$SS"" )"		822530	0					
ANR	822569	IdentifierDeclType	ut64		822530	0					
ANR	822570	Identifier	code_size		822530	1					
ANR	822571	AssignmentExpression	"code_size = r_num_get ( core -> num , ""$SS"" )"		822530	2		=			
ANR	822572	Identifier	code_size		822530	0					
ANR	822573	CallExpression	"r_num_get ( core -> num , ""$SS"" )"		822530	1					
ANR	822574	Callee	r_num_get		822530	0					
ANR	822575	Identifier	r_num_get		822530	0					
ANR	822576	ArgumentList	core -> num		822530	1					
ANR	822577	Argument	core -> num		822530	0					
ANR	822578	PtrMemberAccess	core -> num		822530	0					
ANR	822579	Identifier	core		822530	0					
ANR	822580	Identifier	num		822530	1					
ANR	822581	Argument	"""$SS"""		822530	1					
ANR	822582	PrimaryExpression	"""$SS"""		822530	0					
ANR	822583	IdentifierDeclStatement	"ut64 base_addr = r_num_get ( core -> num , ""$S"" ) ;"	2317:1:73141:73185	822530	3	True				
ANR	822584	IdentifierDecl	"base_addr = r_num_get ( core -> num , ""$S"" )"		822530	0					
ANR	822585	IdentifierDeclType	ut64		822530	0					
ANR	822586	Identifier	base_addr		822530	1					
ANR	822587	AssignmentExpression	"base_addr = r_num_get ( core -> num , ""$S"" )"		822530	2		=			
ANR	822588	Identifier	base_addr		822530	0					
ANR	822589	CallExpression	"r_num_get ( core -> num , ""$S"" )"		822530	1					
ANR	822590	Callee	r_num_get		822530	0					
ANR	822591	Identifier	r_num_get		822530	0					
ANR	822592	ArgumentList	core -> num		822530	1					
ANR	822593	Argument	core -> num		822530	0					
ANR	822594	PtrMemberAccess	core -> num		822530	0					
ANR	822595	Identifier	core		822530	0					
ANR	822596	Identifier	num		822530	1					
ANR	822597	Argument	"""$S"""		822530	1					
ANR	822598	PrimaryExpression	"""$S"""		822530	0					
ANR	822599	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	2318:1:73188:73211	822530	4	True				
ANR	822600	IdentifierDecl	* iter		822530	0					
ANR	822601	IdentifierDeclType	RListIter *		822530	0					
ANR	822602	Identifier	iter		822530	1					
ANR	822603	IdentifierDecl	* iter2		822530	1					
ANR	822604	IdentifierDeclType	RListIter *		822530	0					
ANR	822605	Identifier	iter2		822530	1					
ANR	822606	IdentifierDeclStatement	RAnalFunction * fcn ;	2319:1:73214:73232	822530	5	True				
ANR	822607	IdentifierDecl	* fcn		822530	0					
ANR	822608	IdentifierDeclType	RAnalFunction *		822530	0					
ANR	822609	Identifier	fcn		822530	1					
ANR	822610	IdentifierDeclStatement	RAnalBlock * b ;	2320:1:73235:73248	822530	6	True				
ANR	822611	IdentifierDecl	* b		822530	0					
ANR	822612	IdentifierDeclType	RAnalBlock *		822530	0					
ANR	822613	Identifier	b		822530	1					
ANR	822614	IdentifierDeclStatement	char * bitmap ;	2321:1:73251:73263	822530	7	True				
ANR	822615	IdentifierDecl	* bitmap		822530	0					
ANR	822616	IdentifierDeclType	char *		822530	0					
ANR	822617	Identifier	bitmap		822530	1					
ANR	822618	IdentifierDeclStatement	int assigned ;	2322:1:73266:73278	822530	8	True				
ANR	822619	IdentifierDecl	assigned		822530	0					
ANR	822620	IdentifierDeclType	int		822530	0					
ANR	822621	Identifier	assigned		822530	1					
ANR	822622	IdentifierDeclStatement	ut64 i ;	2323:1:73281:73287	822530	9	True				
ANR	822623	IdentifierDecl	i		822530	0					
ANR	822624	IdentifierDeclType	ut64		822530	0					
ANR	822625	Identifier	i		822530	1					
ANR	822626	IfStatement	if ( code_size < 1 )		822530	10					
ANR	822627	Condition	code_size < 1	2325:5:73295:73307	822530	0	True				
ANR	822628	RelationalExpression	code_size < 1		822530	0		<			
ANR	822629	Identifier	code_size		822530	0					
ANR	822630	PrimaryExpression	1		822530	1					
ANR	822631	CompoundStatement		13:20:340:340	822530	1					
ANR	822632	ReturnStatement	return ;	2326:2:73314:73320	822530	0	True				
ANR	822633	ExpressionStatement	"bitmap = calloc ( 1 , code_size + 64 )"	2328:1:73326:73359	822530	11	True				
ANR	822634	AssignmentExpression	"bitmap = calloc ( 1 , code_size + 64 )"		822530	0		=			
ANR	822635	Identifier	bitmap		822530	0					
ANR	822636	CallExpression	"calloc ( 1 , code_size + 64 )"		822530	1					
ANR	822637	Callee	calloc		822530	0					
ANR	822638	Identifier	calloc		822530	0					
ANR	822639	ArgumentList	1		822530	1					
ANR	822640	Argument	1		822530	0					
ANR	822641	PrimaryExpression	1		822530	0					
ANR	822642	Argument	code_size + 64		822530	1					
ANR	822643	AdditiveExpression	code_size + 64		822530	0		+			
ANR	822644	Identifier	code_size		822530	0					
ANR	822645	PrimaryExpression	64		822530	1					
ANR	822646	IfStatement	if ( ! bitmap )		822530	12					
ANR	822647	Condition	! bitmap	2329:5:73366:73372	822530	0	True				
ANR	822648	UnaryOperationExpression	! bitmap		822530	0					
ANR	822649	UnaryOperator	!		822530	0					
ANR	822650	Identifier	bitmap		822530	1					
ANR	822651	CompoundStatement		17:14:405:405	822530	1					
ANR	822652	ReturnStatement	return ;	2330:2:73379:73385	822530	0	True				
ANR	822653	Statement	r_list_foreach	2334:1:73414:73427	822530	13	True				
ANR	822654	Statement	(	2334:16:73429:73429	822530	14	True				
ANR	822655	Statement	core	2334:17:73430:73433	822530	15	True				
ANR	822656	Statement	->	2334:21:73434:73435	822530	16	True				
ANR	822657	Statement	anal	2334:23:73436:73439	822530	17	True				
ANR	822658	Statement	->	2334:27:73440:73441	822530	18	True				
ANR	822659	Statement	fcns	2334:29:73442:73445	822530	19	True				
ANR	822660	Statement	","	2334:33:73446:73446	822530	20	True				
ANR	822661	Statement	iter	2334:35:73448:73451	822530	21	True				
ANR	822662	Statement	","	2334:39:73452:73452	822530	22	True				
ANR	822663	Statement	fcn	2334:41:73454:73456	822530	23	True				
ANR	822664	Statement	)	2334:44:73457:73457	822530	24	True				
ANR	822665	CompoundStatement		22:46:489:489	822530	25					
ANR	822666	Statement	r_list_foreach	2336:2:73505:73518	822530	0	True				
ANR	822667	Statement	(	2336:17:73520:73520	822530	1	True				
ANR	822668	Statement	fcn	2336:18:73521:73523	822530	2	True				
ANR	822669	Statement	->	2336:21:73524:73525	822530	3	True				
ANR	822670	Statement	bbs	2336:23:73526:73528	822530	4	True				
ANR	822671	Statement	","	2336:26:73529:73529	822530	5	True				
ANR	822672	Statement	iter2	2336:28:73531:73535	822530	6	True				
ANR	822673	Statement	","	2336:33:73536:73536	822530	7	True				
ANR	822674	Statement	b	2336:35:73538:73538	822530	8	True				
ANR	822675	Statement	)	2336:36:73539:73539	822530	9	True				
ANR	822676	CompoundStatement		29:3:757:772	822530	10					
ANR	822677	IfStatement	if ( ( fcn -> addr < base_addr ) || ( fcn -> addr >= base_addr + code_size ) )		822530	0					
ANR	822678	Condition	( fcn -> addr < base_addr ) || ( fcn -> addr >= base_addr + code_size )	2338:7:73592:73652	822530	0	True				
ANR	822679	OrExpression	( fcn -> addr < base_addr ) || ( fcn -> addr >= base_addr + code_size )		822530	0		||			
ANR	822680	RelationalExpression	fcn -> addr < base_addr		822530	0		<			
ANR	822681	PtrMemberAccess	fcn -> addr		822530	0					
ANR	822682	Identifier	fcn		822530	0					
ANR	822683	Identifier	addr		822530	1					
ANR	822684	Identifier	base_addr		822530	1					
ANR	822685	RelationalExpression	fcn -> addr >= base_addr + code_size		822530	1		>=			
ANR	822686	PtrMemberAccess	fcn -> addr		822530	0					
ANR	822687	Identifier	fcn		822530	0					
ANR	822688	Identifier	addr		822530	1					
ANR	822689	AdditiveExpression	base_addr + code_size		822530	1		+			
ANR	822690	Identifier	base_addr		822530	0					
ANR	822691	Identifier	code_size		822530	1					
ANR	822692	ContinueStatement	continue ;	2339:4:73659:73667	822530	1	True				
ANR	822693	IdentifierDeclStatement	int counter = 1 ;	2341:3:73727:73742	822530	1	True				
ANR	822694	IdentifierDecl	counter = 1		822530	0					
ANR	822695	IdentifierDeclType	int		822530	0					
ANR	822696	Identifier	counter		822530	1					
ANR	822697	AssignmentExpression	counter = 1		822530	2		=			
ANR	822698	Identifier	counter		822530	0					
ANR	822699	PrimaryExpression	1		822530	1					
ANR	822700	ForStatement	for ( counter = 0 ; counter < b -> size ; counter ++ )		822530	2					
ANR	822701	ForInit	counter = 0 ;	2342:8:73752:73763	822530	0	True				
ANR	822702	AssignmentExpression	counter = 0		822530	0		=			
ANR	822703	Identifier	counter		822530	0					
ANR	822704	PrimaryExpression	0		822530	1					
ANR	822705	Condition	counter < b -> size	2342:21:73765:73781	822530	1	True				
ANR	822706	RelationalExpression	counter < b -> size		822530	0		<			
ANR	822707	Identifier	counter		822530	0					
ANR	822708	PtrMemberAccess	b -> size		822530	1					
ANR	822709	Identifier	b		822530	0					
ANR	822710	Identifier	size		822530	1					
ANR	822711	PostIncDecOperationExpression	counter ++	2342:40:73784:73792	822530	2	True				
ANR	822712	Identifier	counter		822530	0					
ANR	822713	IncDec	++		822530	1					
ANR	822714	CompoundStatement		30:51:825:825	822530	3					
ANR	822715	ExpressionStatement	bitmap [ b -> addr + counter - base_addr ] = '='	2343:4:73801:73840	822530	0	True				
ANR	822716	AssignmentExpression	bitmap [ b -> addr + counter - base_addr ] = '='		822530	0		=			
ANR	822717	ArrayIndexing	bitmap [ b -> addr + counter - base_addr ]		822530	0					
ANR	822718	Identifier	bitmap		822530	0					
ANR	822719	AdditiveExpression	b -> addr + counter - base_addr		822530	1		+			
ANR	822720	PtrMemberAccess	b -> addr		822530	0					
ANR	822721	Identifier	b		822530	0					
ANR	822722	Identifier	addr		822530	1					
ANR	822723	AdditiveExpression	counter - base_addr		822530	1		-			
ANR	822724	Identifier	counter		822530	0					
ANR	822725	Identifier	base_addr		822530	1					
ANR	822726	PrimaryExpression	'='		822530	1					
ANR	822727	ExpressionStatement	bitmap [ fcn -> addr - base_addr ] = 'F'	2345:3:73850:73883	822530	3	True				
ANR	822728	AssignmentExpression	bitmap [ fcn -> addr - base_addr ] = 'F'		822530	0		=			
ANR	822729	ArrayIndexing	bitmap [ fcn -> addr - base_addr ]		822530	0					
ANR	822730	Identifier	bitmap		822530	0					
ANR	822731	AdditiveExpression	fcn -> addr - base_addr		822530	1		-			
ANR	822732	PtrMemberAccess	fcn -> addr		822530	0					
ANR	822733	Identifier	fcn		822530	0					
ANR	822734	Identifier	addr		822530	1					
ANR	822735	Identifier	base_addr		822530	1					
ANR	822736	PrimaryExpression	'F'		822530	1					
ANR	822737	ExpressionStatement	assigned = 0	2349:1:73914:73926	822530	26	True				
ANR	822738	AssignmentExpression	assigned = 0		822530	0		=			
ANR	822739	Identifier	assigned		822530	0					
ANR	822740	PrimaryExpression	0		822530	1					
ANR	822741	IfStatement	if ( cols < 1 )		822530	27					
ANR	822742	Condition	cols < 1	2350:5:73933:73940	822530	0	True				
ANR	822743	RelationalExpression	cols < 1		822530	0		<			
ANR	822744	Identifier	cols		822530	0					
ANR	822745	PrimaryExpression	1		822530	1					
ANR	822746	CompoundStatement		38:15:973:973	822530	1					
ANR	822747	ExpressionStatement	cols = 1	2351:2:73947:73955	822530	0	True				
ANR	822748	AssignmentExpression	cols = 1		822530	0		=			
ANR	822749	Identifier	cols		822530	0					
ANR	822750	PrimaryExpression	1		822530	1					
ANR	822751	ForStatement	for ( i = 0 ; i < code_size ; i += 1 )		822530	28					
ANR	822752	ForInit	i = 0 ;	2353:6:73966:73971	822530	0	True				
ANR	822753	AssignmentExpression	i = 0		822530	0		=			
ANR	822754	Identifier	i		822530	0					
ANR	822755	PrimaryExpression	0		822530	1					
ANR	822756	Condition	i < code_size	2353:13:73973:73985	822530	1	True				
ANR	822757	RelationalExpression	i < code_size		822530	0		<			
ANR	822758	Identifier	i		822530	0					
ANR	822759	Identifier	code_size		822530	1					
ANR	822760	AssignmentExpression	i += 1	2353:28:73988:73993	822530	2	True	+=			
ANR	822761	Identifier	i		822530	0					
ANR	822762	PrimaryExpression	1		822530	1					
ANR	822763	CompoundStatement		41:36:1026:1026	822530	3					
ANR	822764	IfStatement	if ( ! ( i % cols ) )		822530	0					
ANR	822765	Condition	! ( i % cols )	2354:6:74004:74014	822530	0	True				
ANR	822766	UnaryOperationExpression	! ( i % cols )		822530	0					
ANR	822767	UnaryOperator	!		822530	0					
ANR	822768	MultiplicativeExpression	i % cols		822530	1		%			
ANR	822769	Identifier	i		822530	0					
ANR	822770	Identifier	cols		822530	1					
ANR	822771	CompoundStatement		42:19:1047:1047	822530	1					
ANR	822772	Statement	r_cons_printf	2355:3:74022:74034	822530	0	True				
ANR	822773	Statement	(	2355:17:74036:74036	822530	1	True				
ANR	822774	Statement	"""\\n0x%08"""	2355:18:74037:74045	822530	2	True				
ANR	822775	Statement	PFMT64x	2355:27:74046:74052	822530	3	True				
ANR	822776	Statement	"""  """	2355:34:74053:74056	822530	4	True				
ANR	822777	Statement	","	2355:38:74057:74057	822530	5	True				
ANR	822778	Statement	base_addr	2355:40:74059:74067	822530	6	True				
ANR	822779	Statement	+	2355:49:74068:74068	822530	7	True				
ANR	822780	Statement	i	2355:50:74069:74069	822530	8	True				
ANR	822781	Statement	)	2355:51:74070:74070	822530	9	True				
ANR	822782	ExpressionStatement		2355:52:74071:74071	822530	10	True				
ANR	822783	IfStatement	if ( bitmap [ i ] )		822530	1					
ANR	822784	Condition	bitmap [ i ]	2357:6:74083:74091	822530	0	True				
ANR	822785	ArrayIndexing	bitmap [ i ]		822530	0					
ANR	822786	Identifier	bitmap		822530	0					
ANR	822787	Identifier	i		822530	1					
ANR	822788	CompoundStatement		45:17:1124:1124	822530	1					
ANR	822789	ExpressionStatement	assigned ++	2358:3:74099:74109	822530	0	True				
ANR	822790	PostIncDecOperationExpression	assigned ++		822530	0					
ANR	822791	Identifier	assigned		822530	0					
ANR	822792	IncDec	++		822530	1					
ANR	822793	IfStatement	if ( show_color )		822530	2					
ANR	822794	Condition	show_color	2360:6:74121:74130	822530	0	True				
ANR	822795	Identifier	show_color		822530	0					
ANR	822796	CompoundStatement		48:18:1163:1163	822530	1					
ANR	822797	IfStatement	if ( bitmap [ i ] )		822530	0					
ANR	822798	Condition	bitmap [ i ]	2361:7:74142:74150	822530	0	True				
ANR	822799	ArrayIndexing	bitmap [ i ]		822530	0					
ANR	822800	Identifier	bitmap		822530	0					
ANR	822801	Identifier	i		822530	1					
ANR	822802	CompoundStatement		49:18:1183:1183	822530	1					
ANR	822803	ExpressionStatement	"r_cons_printf ( ""%s%c\\x1b[0m"" , Color_GREEN , bitmap [ i ] )"	2362:4:74159:74212	822530	0	True				
ANR	822804	CallExpression	"r_cons_printf ( ""%s%c\\x1b[0m"" , Color_GREEN , bitmap [ i ] )"		822530	0					
ANR	822805	Callee	r_cons_printf		822530	0					
ANR	822806	Identifier	r_cons_printf		822530	0					
ANR	822807	ArgumentList	"""%s%c\\x1b[0m"""		822530	1					
ANR	822808	Argument	"""%s%c\\x1b[0m"""		822530	0					
ANR	822809	PrimaryExpression	"""%s%c\\x1b[0m"""		822530	0					
ANR	822810	Argument	Color_GREEN		822530	1					
ANR	822811	Identifier	Color_GREEN		822530	0					
ANR	822812	Argument	bitmap [ i ]		822530	2					
ANR	822813	ArrayIndexing	bitmap [ i ]		822530	0					
ANR	822814	Identifier	bitmap		822530	0					
ANR	822815	Identifier	i		822530	1					
ANR	822816	ElseStatement	else		822530	0					
ANR	822817	CompoundStatement		51:10:1254:1254	822530	0					
ANR	822818	ExpressionStatement	"r_cons_printf ( ""."" )"	2364:4:74230:74249	822530	0	True				
ANR	822819	CallExpression	"r_cons_printf ( ""."" )"		822530	0					
ANR	822820	Callee	r_cons_printf		822530	0					
ANR	822821	Identifier	r_cons_printf		822530	0					
ANR	822822	ArgumentList	"""."""		822530	1					
ANR	822823	Argument	"""."""		822530	0					
ANR	822824	PrimaryExpression	"""."""		822530	0					
ANR	822825	ElseStatement	else		822530	0					
ANR	822826	CompoundStatement		54:9:1295:1295	822530	0					
ANR	822827	ExpressionStatement	"r_cons_printf ( ""%c"" , bitmap [ i ] ? bitmap [ i ] : '.' )"	2367:3:74270:74320	822530	0	True				
ANR	822828	CallExpression	"r_cons_printf ( ""%c"" , bitmap [ i ] ? bitmap [ i ] : '.' )"		822530	0					
ANR	822829	Callee	r_cons_printf		822530	0					
ANR	822830	Identifier	r_cons_printf		822530	0					
ANR	822831	ArgumentList	"""%c"""		822530	1					
ANR	822832	Argument	"""%c"""		822530	0					
ANR	822833	PrimaryExpression	"""%c"""		822530	0					
ANR	822834	Argument	bitmap [ i ] ? bitmap [ i ] : '.'		822530	1					
ANR	822835	ConditionalExpression	bitmap [ i ] ? bitmap [ i ] : '.'		822530	0					
ANR	822836	Condition	bitmap [ i ]		822530	0					
ANR	822837	ArrayIndexing	bitmap [ i ]		822530	0					
ANR	822838	Identifier	bitmap		822530	0					
ANR	822839	Identifier	i		822530	1					
ANR	822840	ArrayIndexing	bitmap [ i ]		822530	1					
ANR	822841	Identifier	bitmap		822530	0					
ANR	822842	Identifier	i		822530	1					
ANR	822843	PrimaryExpression	'.'		822530	2					
ANR	822844	ExpressionStatement	"r_cons_printf ( ""\\n%d / %d (%.2lf%%) bytes assigned to a function\\n"" , assigned , code_size , 100.0 * ( ( float ) assigned ) / code_size )"	2370:1:74330:74458	822530	29	True				
ANR	822845	CallExpression	"r_cons_printf ( ""\\n%d / %d (%.2lf%%) bytes assigned to a function\\n"" , assigned , code_size , 100.0 * ( ( float ) assigned ) / code_size )"		822530	0					
ANR	822846	Callee	r_cons_printf		822530	0					
ANR	822847	Identifier	r_cons_printf		822530	0					
ANR	822848	ArgumentList	"""\\n%d / %d (%.2lf%%) bytes assigned to a function\\n"""		822530	1					
ANR	822849	Argument	"""\\n%d / %d (%.2lf%%) bytes assigned to a function\\n"""		822530	0					
ANR	822850	PrimaryExpression	"""\\n%d / %d (%.2lf%%) bytes assigned to a function\\n"""		822530	0					
ANR	822851	Argument	assigned		822530	1					
ANR	822852	Identifier	assigned		822530	0					
ANR	822853	Argument	code_size		822530	2					
ANR	822854	Identifier	code_size		822530	0					
ANR	822855	Argument	100.0 * ( ( float ) assigned ) / code_size		822530	3					
ANR	822856	MultiplicativeExpression	100.0 * ( ( float ) assigned ) / code_size		822530	0		*			
ANR	822857	PrimaryExpression	100.0		822530	0					
ANR	822858	MultiplicativeExpression	( ( float ) assigned ) / code_size		822530	1		/			
ANR	822859	CastExpression	( float ) assigned		822530	0					
ANR	822860	CastTarget	float		822530	0					
ANR	822861	Identifier	assigned		822530	1					
ANR	822862	Identifier	code_size		822530	1					
ANR	822863	ExpressionStatement	free ( bitmap )	2371:1:74461:74473	822530	30	True				
ANR	822864	CallExpression	free ( bitmap )		822530	0					
ANR	822865	Callee	free		822530	0					
ANR	822866	Identifier	free		822530	0					
ANR	822867	ArgumentList	bitmap		822530	1					
ANR	822868	Argument	bitmap		822530	0					
ANR	822869	Identifier	bitmap		822530	0					
ANR	822870	ReturnType	static void		822530	1					
ANR	822871	Identifier	r_core_anal_fmap		822530	2					
ANR	822872	ParameterList	"RCore * core , const char * input"		822530	3					
ANR	822873	Parameter	RCore * core	2313:31:72937:72947	822530	0	True				
ANR	822874	ParameterType	RCore *		822530	0					
ANR	822875	Identifier	core		822530	1					
ANR	822876	Parameter	const char * input	2313:44:72950:72966	822530	1	True				
ANR	822877	ParameterType	const char *		822530	0					
ANR	822878	Identifier	input		822530	1					
ANR	822879	CFGEntryNode	ENTRY		822530		True				
ANR	822880	CFGExitNode	EXIT		822530		True				
ANR	822881	CFGErrorNode	ERROR		822530		True				
ANR	822882	Symbol	code_size		822530						
ANR	822883	Symbol	Color_GREEN		822530						
ANR	822884	Symbol	* fcn		822530						
ANR	822885	Symbol	b -> size		822530						
ANR	822886	Symbol	* fcn -> addr		822530						
ANR	822887	Symbol	* core		822530						
ANR	822888	Symbol	calloc		822530						
ANR	822889	Symbol	* b -> addr		822530						
ANR	822890	Symbol	b -> addr		822530						
ANR	822891	Symbol	* base_addr		822530						
ANR	822892	Symbol	fcn		822530						
ANR	822893	Symbol	* bitmap		822530						
ANR	822894	Symbol	show_color		822530						
ANR	822895	Symbol	bitmap		822530						
ANR	822896	Symbol	r_num_get		822530						
ANR	822897	Symbol	core -> num		822530						
ANR	822898	Symbol	cols		822530						
ANR	822899	Symbol	core -> config		822530						
ANR	822900	Symbol	b		822530						
ANR	822901	Symbol	* * fcn		822530						
ANR	822902	Symbol	iter2		822530						
ANR	822903	Symbol	iter		822530						
ANR	822904	Symbol	i		822530						
ANR	822905	Symbol	* * b		822530						
ANR	822906	Symbol	counter		822530						
ANR	822907	Symbol	* b		822530						
ANR	822908	Symbol	base_addr		822530						
ANR	822909	Symbol	core		822530						
ANR	822910	Symbol	input		822530						
ANR	822911	Symbol	* counter		822530						
ANR	822912	Symbol	* i		822530						
ANR	822913	Symbol	r_config_get_i		822530						
ANR	822914	Symbol	fcn -> addr		822530						
ANR	822915	Symbol	assigned		822530						
ANR	822916	Function	fcnNeedsPrefix	2374:0:74478:74665							
ANR	822917	FunctionDef	fcnNeedsPrefix (const char * name)		822916	0					
ANR	822918	CompoundStatement		2374:45:74523:74665	822916	0					
ANR	822919	IfStatement	"if ( ! strncmp ( name , ""entry"" , 5 ) )"		822916	0					
ANR	822920	Condition	"! strncmp ( name , ""entry"" , 5 )"	2375:5:74530:74556	822916	0	True				
ANR	822921	UnaryOperationExpression	"! strncmp ( name , ""entry"" , 5 )"		822916	0					
ANR	822922	UnaryOperator	!		822916	0					
ANR	822923	CallExpression	"strncmp ( name , ""entry"" , 5 )"		822916	1					
ANR	822924	Callee	strncmp		822916	0					
ANR	822925	Identifier	strncmp		822916	0					
ANR	822926	ArgumentList	name		822916	1					
ANR	822927	Argument	name		822916	0					
ANR	822928	Identifier	name		822916	0					
ANR	822929	Argument	"""entry"""		822916	1					
ANR	822930	PrimaryExpression	"""entry"""		822916	0					
ANR	822931	Argument	5		822916	2					
ANR	822932	PrimaryExpression	5		822916	0					
ANR	822933	CompoundStatement		2:34:35:35	822916	1					
ANR	822934	ReturnStatement	return false ;	2376:2:74563:74575	822916	0	True				
ANR	822935	Identifier	false		822916	0					
ANR	822936	IfStatement	"if ( ! strncmp ( name , ""main"" , 4 ) )"		822916	1					
ANR	822937	Condition	"! strncmp ( name , ""main"" , 4 )"	2378:5:74585:74610	822916	0	True				
ANR	822938	UnaryOperationExpression	"! strncmp ( name , ""main"" , 4 )"		822916	0					
ANR	822939	UnaryOperator	!		822916	0					
ANR	822940	CallExpression	"strncmp ( name , ""main"" , 4 )"		822916	1					
ANR	822941	Callee	strncmp		822916	0					
ANR	822942	Identifier	strncmp		822916	0					
ANR	822943	ArgumentList	name		822916	1					
ANR	822944	Argument	name		822916	0					
ANR	822945	Identifier	name		822916	0					
ANR	822946	Argument	"""main"""		822916	1					
ANR	822947	PrimaryExpression	"""main"""		822916	0					
ANR	822948	Argument	4		822916	2					
ANR	822949	PrimaryExpression	4		822916	0					
ANR	822950	CompoundStatement		5:33:89:89	822916	1					
ANR	822951	ReturnStatement	return false ;	2379:2:74617:74629	822916	0	True				
ANR	822952	Identifier	false		822916	0					
ANR	822953	ReturnStatement	"return ( ! strchr ( name , '.' ) ) ;"	2381:1:74635:74663	822916	2	True				
ANR	822954	UnaryOperationExpression	"! strchr ( name , '.' )"		822916	0					
ANR	822955	UnaryOperator	!		822916	0					
ANR	822956	CallExpression	"strchr ( name , '.' )"		822916	1					
ANR	822957	Callee	strchr		822916	0					
ANR	822958	Identifier	strchr		822916	0					
ANR	822959	ArgumentList	name		822916	1					
ANR	822960	Argument	name		822916	0					
ANR	822961	Identifier	name		822916	0					
ANR	822962	Argument	'.'		822916	1					
ANR	822963	PrimaryExpression	'.'		822916	0					
ANR	822964	ReturnType	static bool		822916	1					
ANR	822965	Identifier	fcnNeedsPrefix		822916	2					
ANR	822966	ParameterList	const char * name		822916	3					
ANR	822967	Parameter	const char * name	2374:27:74505:74520	822916	0	True				
ANR	822968	ParameterType	const char *		822916	0					
ANR	822969	Identifier	name		822916	1					
ANR	822970	CFGEntryNode	ENTRY		822916		True				
ANR	822971	CFGExitNode	EXIT		822916		True				
ANR	822972	Symbol	strncmp		822916						
ANR	822973	Symbol	name		822916						
ANR	822974	Symbol	false		822916						
ANR	822975	Symbol	strchr		822916						
ANR	822976	Function	getFunctionName	2384:0:74668:75230							
ANR	822977	FunctionDef	"getFunctionName (RCore * core , ut64 off , const char * name , bool prefix)"		822976	0					
ANR	822978	CompoundStatement		2384:85:74753:75230	822976	0					
ANR	822979	IdentifierDeclStatement	"const char * fcnpfx = r_config_get ( core -> config , ""anal.fcnprefix"" ) ;"	2385:1:74756:74822	822976	0	True				
ANR	822980	IdentifierDecl	"* fcnpfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		822976	0					
ANR	822981	IdentifierDeclType	const char *		822976	0					
ANR	822982	Identifier	fcnpfx		822976	1					
ANR	822983	AssignmentExpression	"* fcnpfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		822976	2		=			
ANR	822984	Identifier	fcnpfx		822976	0					
ANR	822985	CallExpression	"r_config_get ( core -> config , ""anal.fcnprefix"" )"		822976	1					
ANR	822986	Callee	r_config_get		822976	0					
ANR	822987	Identifier	r_config_get		822976	0					
ANR	822988	ArgumentList	core -> config		822976	1					
ANR	822989	Argument	core -> config		822976	0					
ANR	822990	PtrMemberAccess	core -> config		822976	0					
ANR	822991	Identifier	core		822976	0					
ANR	822992	Identifier	config		822976	1					
ANR	822993	Argument	"""anal.fcnprefix"""		822976	1					
ANR	822994	PrimaryExpression	"""anal.fcnprefix"""		822976	0					
ANR	822995	IfStatement	if ( prefix )		822976	1					
ANR	822996	Condition	prefix	2386:5:74829:74834	822976	0	True				
ANR	822997	Identifier	prefix		822976	0					
ANR	822998	CompoundStatement		3:13:83:83	822976	1					
ANR	822999	IfStatement	if ( fcnNeedsPrefix ( name ) )		822976	0					
ANR	823000	Condition	fcnNeedsPrefix ( name )	2387:6:74845:74865	822976	0	True				
ANR	823001	CallExpression	fcnNeedsPrefix ( name )		822976	0					
ANR	823002	Callee	fcnNeedsPrefix		822976	0					
ANR	823003	Identifier	fcnNeedsPrefix		822976	0					
ANR	823004	ArgumentList	name		822976	1					
ANR	823005	Argument	name		822976	0					
ANR	823006	Identifier	name		822976	0					
ANR	823007	CompoundStatement		4:29:114:114	822976	1					
ANR	823008	IfStatement	if ( ! fcnpfx || ! * fcnpfx )		822976	0					
ANR	823009	Condition	! fcnpfx || ! * fcnpfx	2388:7:74877:74895	822976	0	True				
ANR	823010	OrExpression	! fcnpfx || ! * fcnpfx		822976	0		||			
ANR	823011	UnaryOperationExpression	! fcnpfx		822976	0					
ANR	823012	UnaryOperator	!		822976	0					
ANR	823013	Identifier	fcnpfx		822976	1					
ANR	823014	UnaryOperationExpression	! * fcnpfx		822976	1					
ANR	823015	UnaryOperator	!		822976	0					
ANR	823016	UnaryOperationExpression	* fcnpfx		822976	1					
ANR	823017	UnaryOperator	*		822976	0					
ANR	823018	Identifier	fcnpfx		822976	1					
ANR	823019	CompoundStatement		5:28:144:144	822976	1					
ANR	823020	ExpressionStatement	"fcnpfx = ""fcn"""	2389:4:74904:74918	822976	0	True				
ANR	823021	AssignmentExpression	"fcnpfx = ""fcn"""		822976	0		=			
ANR	823022	Identifier	fcnpfx		822976	0					
ANR	823023	PrimaryExpression	"""fcn"""		822976	1					
ANR	823024	ElseStatement	else		822976	0					
ANR	823025	CompoundStatement		9:8:183:183	822976	0					
ANR	823026	ExpressionStatement	"fcnpfx = """""	2393:2:74941:74952	822976	0	True				
ANR	823027	AssignmentExpression	"fcnpfx = """""		822976	0		=			
ANR	823028	Identifier	fcnpfx		822976	0					
ANR	823029	PrimaryExpression	""""""		822976	1					
ANR	823030	IfStatement	"if ( r_reg_get ( core -> anal -> reg , name , - 1 ) )"		822976	2					
ANR	823031	Condition	"r_reg_get ( core -> anal -> reg , name , - 1 )"	2395:5:74962:74998	822976	0	True				
ANR	823032	CallExpression	"r_reg_get ( core -> anal -> reg , name , - 1 )"		822976	0					
ANR	823033	Callee	r_reg_get		822976	0					
ANR	823034	Identifier	r_reg_get		822976	0					
ANR	823035	ArgumentList	core -> anal -> reg		822976	1					
ANR	823036	Argument	core -> anal -> reg		822976	0					
ANR	823037	PtrMemberAccess	core -> anal -> reg		822976	0					
ANR	823038	PtrMemberAccess	core -> anal		822976	0					
ANR	823039	Identifier	core		822976	0					
ANR	823040	Identifier	anal		822976	1					
ANR	823041	Identifier	reg		822976	1					
ANR	823042	Argument	name		822976	1					
ANR	823043	Identifier	name		822976	0					
ANR	823044	Argument	- 1		822976	2					
ANR	823045	UnaryOperationExpression	- 1		822976	0					
ANR	823046	UnaryOperator	-		822976	0					
ANR	823047	PrimaryExpression	1		822976	1					
ANR	823048	CompoundStatement		12:44:247:247	822976	1					
ANR	823049	Statement	return	2396:2:75005:75010	822976	0	True				
ANR	823050	Statement	r_str_newf	2396:9:75012:75021	822976	1	True				
ANR	823051	Statement	(	2396:20:75023:75023	822976	2	True				
ANR	823052	Statement	"""%s.%08"""	2396:21:75024:75031	822976	3	True				
ANR	823053	Statement	PFMT64x	2396:29:75032:75038	822976	4	True				
ANR	823054	Statement	","	2396:36:75039:75039	822976	5	True				
ANR	823055	Statement	"""fcn"""	2396:38:75041:75045	822976	6	True				
ANR	823056	Statement	","	2396:43:75046:75046	822976	7	True				
ANR	823057	Statement	off	2396:45:75048:75050	822976	8	True				
ANR	823058	Statement	)	2396:48:75051:75051	822976	9	True				
ANR	823059	ExpressionStatement		2396:49:75052:75052	822976	10	True				
ANR	823060	IfStatement	if ( strlen ( name ) < 4 )		822976	3					
ANR	823061	Condition	strlen ( name ) < 4	2398:5:75062:75078	822976	0	True				
ANR	823062	RelationalExpression	strlen ( name ) < 4		822976	0		<			
ANR	823063	CallExpression	strlen ( name )		822976	0					
ANR	823064	Callee	strlen		822976	0					
ANR	823065	Identifier	strlen		822976	0					
ANR	823066	ArgumentList	name		822976	1					
ANR	823067	Argument	name		822976	0					
ANR	823068	Identifier	name		822976	0					
ANR	823069	PrimaryExpression	4		822976	1					
ANR	823070	CompoundStatement		15:24:327:327	822976	1					
ANR	823071	ReturnStatement	"return r_str_newf ( ""%s.%s"" , ( * fcnpfx ) ? fcnpfx : ""fcn"" , name ) ;"	2399:2:75085:75144	822976	0	True				
ANR	823072	CallExpression	"r_str_newf ( ""%s.%s"" , ( * fcnpfx ) ? fcnpfx : ""fcn"" , name )"		822976	0					
ANR	823073	Callee	r_str_newf		822976	0					
ANR	823074	Identifier	r_str_newf		822976	0					
ANR	823075	ArgumentList	"""%s.%s"""		822976	1					
ANR	823076	Argument	"""%s.%s"""		822976	0					
ANR	823077	PrimaryExpression	"""%s.%s"""		822976	0					
ANR	823078	Argument	"( * fcnpfx ) ? fcnpfx : ""fcn"""		822976	1					
ANR	823079	ConditionalExpression	"( * fcnpfx ) ? fcnpfx : ""fcn"""		822976	0					
ANR	823080	Condition	* fcnpfx		822976	0					
ANR	823081	UnaryOperationExpression	* fcnpfx		822976	0					
ANR	823082	UnaryOperator	*		822976	0					
ANR	823083	Identifier	fcnpfx		822976	1					
ANR	823084	Identifier	fcnpfx		822976	1					
ANR	823085	PrimaryExpression	"""fcn"""		822976	2					
ANR	823086	Argument	name		822976	2					
ANR	823087	Identifier	name		822976	0					
ANR	823088	ReturnStatement	return strdup ( name ) ;	2401:1:75150:75170	822976	4	True				
ANR	823089	CallExpression	strdup ( name )		822976	0					
ANR	823090	Callee	strdup		822976	0					
ANR	823091	Identifier	strdup		822976	0					
ANR	823092	ArgumentList	name		822976	1					
ANR	823093	Argument	name		822976	0					
ANR	823094	Identifier	name		822976	0					
ANR	823095	ReturnType	static char *		822976	1					
ANR	823096	Identifier	getFunctionName		822976	2					
ANR	823097	ParameterList	"RCore * core , ut64 off , const char * name , bool prefix"		822976	3					
ANR	823098	Parameter	RCore * core	2384:31:74699:74709	822976	0	True				
ANR	823099	ParameterType	RCore *		822976	0					
ANR	823100	Identifier	core		822976	1					
ANR	823101	Parameter	ut64 off	2384:44:74712:74719	822976	1	True				
ANR	823102	ParameterType	ut64		822976	0					
ANR	823103	Identifier	off		822976	1					
ANR	823104	Parameter	const char * name	2384:54:74722:74737	822976	2	True				
ANR	823105	ParameterType	const char *		822976	0					
ANR	823106	Identifier	name		822976	1					
ANR	823107	Parameter	bool prefix	2384:72:74740:74750	822976	3	True				
ANR	823108	ParameterType	bool		822976	0					
ANR	823109	Identifier	prefix		822976	1					
ANR	823110	CFGEntryNode	ENTRY		822976		True				
ANR	823111	CFGExitNode	EXIT		822976		True				
ANR	823112	Symbol	core -> config		822976						
ANR	823113	Symbol	core -> anal -> reg		822976						
ANR	823114	Symbol	fcnpfx		822976						
ANR	823115	Symbol	prefix		822976						
ANR	823116	Symbol	* core		822976						
ANR	823117	Symbol	r_config_get		822976						
ANR	823118	Symbol	* fcnpfx		822976						
ANR	823119	Symbol	r_str_newf		822976						
ANR	823120	Symbol	core -> anal		822976						
ANR	823121	Symbol	off		822976						
ANR	823122	Symbol	core		822976						
ANR	823123	Symbol	strlen		822976						
ANR	823124	Symbol	* core -> anal		822976						
ANR	823125	Symbol	name		822976						
ANR	823126	Symbol	strdup		822976						
ANR	823127	Symbol	fcnNeedsPrefix		822976						
ANR	823128	Symbol	* * core		822976						
ANR	823129	Symbol	r_reg_get		822976						
ANR	823130	Function	setFunctionName	2405:0:75276:75809							
ANR	823131	FunctionDef	"setFunctionName (RCore * core , ut64 off , const char * _name , bool prefix)"		823130	0					
ANR	823132	CompoundStatement		2405:83:75359:75809	823130	0					
ANR	823133	ExpressionStatement	"r_return_val_if_fail ( core && _name , false )"	2406:1:75362:75405	823130	0	True				
ANR	823134	CallExpression	"r_return_val_if_fail ( core && _name , false )"		823130	0					
ANR	823135	Callee	r_return_val_if_fail		823130	0					
ANR	823136	Identifier	r_return_val_if_fail		823130	0					
ANR	823137	ArgumentList	core && _name		823130	1					
ANR	823138	Argument	core && _name		823130	0					
ANR	823139	AndExpression	core && _name		823130	0		&&			
ANR	823140	Identifier	core		823130	0					
ANR	823141	Identifier	_name		823130	1					
ANR	823142	Argument	false		823130	1					
ANR	823143	Identifier	false		823130	0					
ANR	823144	IdentifierDeclStatement	"char * name = getFunctionName ( core , off , _name , prefix ) ;"	2407:1:75408:75463	823130	1	True				
ANR	823145	IdentifierDecl	"* name = getFunctionName ( core , off , _name , prefix )"		823130	0					
ANR	823146	IdentifierDeclType	char *		823130	0					
ANR	823147	Identifier	name		823130	1					
ANR	823148	AssignmentExpression	"* name = getFunctionName ( core , off , _name , prefix )"		823130	2		=			
ANR	823149	Identifier	name		823130	0					
ANR	823150	CallExpression	"getFunctionName ( core , off , _name , prefix )"		823130	1					
ANR	823151	Callee	getFunctionName		823130	0					
ANR	823152	Identifier	getFunctionName		823130	0					
ANR	823153	ArgumentList	core		823130	1					
ANR	823154	Argument	core		823130	0					
ANR	823155	Identifier	core		823130	0					
ANR	823156	Argument	off		823130	1					
ANR	823157	Identifier	off		823130	0					
ANR	823158	Argument	_name		823130	2					
ANR	823159	Identifier	_name		823130	0					
ANR	823160	Argument	prefix		823130	3					
ANR	823161	Identifier	prefix		823130	0					
ANR	823162	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , off , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM | R_ANAL_FCN_TYPE_LOC ) ;"	2408:1:75466:75590	823130	2	True				
ANR	823163	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , off , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM | R_ANAL_FCN_TYPE_LOC )"		823130	0					
ANR	823164	IdentifierDeclType	RAnalFunction *		823130	0					
ANR	823165	Identifier	fcn		823130	1					
ANR	823166	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , off , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM | R_ANAL_FCN_TYPE_LOC )"		823130	2		=			
ANR	823167	Identifier	fcn		823130	0					
ANR	823168	CallExpression	"r_anal_get_fcn_in ( core -> anal , off , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM | R_ANAL_FCN_TYPE_LOC )"		823130	1					
ANR	823169	Callee	r_anal_get_fcn_in		823130	0					
ANR	823170	Identifier	r_anal_get_fcn_in		823130	0					
ANR	823171	ArgumentList	core -> anal		823130	1					
ANR	823172	Argument	core -> anal		823130	0					
ANR	823173	PtrMemberAccess	core -> anal		823130	0					
ANR	823174	Identifier	core		823130	0					
ANR	823175	Identifier	anal		823130	1					
ANR	823176	Argument	off		823130	1					
ANR	823177	Identifier	off		823130	0					
ANR	823178	Argument	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM | R_ANAL_FCN_TYPE_LOC		823130	2					
ANR	823179	InclusiveOrExpression	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM | R_ANAL_FCN_TYPE_LOC		823130	0		|			
ANR	823180	Identifier	R_ANAL_FCN_TYPE_FCN		823130	0					
ANR	823181	InclusiveOrExpression	R_ANAL_FCN_TYPE_SYM | R_ANAL_FCN_TYPE_LOC		823130	1		|			
ANR	823182	Identifier	R_ANAL_FCN_TYPE_SYM		823130	0					
ANR	823183	Identifier	R_ANAL_FCN_TYPE_LOC		823130	1					
ANR	823184	IfStatement	if ( ! fcn )		823130	3					
ANR	823185	Condition	! fcn	2410:5:75597:75600	823130	0	True				
ANR	823186	UnaryOperationExpression	! fcn		823130	0					
ANR	823187	UnaryOperator	!		823130	0					
ANR	823188	Identifier	fcn		823130	1					
ANR	823189	CompoundStatement		6:11:243:243	823130	1					
ANR	823190	ExpressionStatement	free ( name )	2411:2:75607:75618	823130	0	True				
ANR	823191	CallExpression	free ( name )		823130	0					
ANR	823192	Callee	free		823130	0					
ANR	823193	Identifier	free		823130	0					
ANR	823194	ArgumentList	name		823130	1					
ANR	823195	Argument	name		823130	0					
ANR	823196	Identifier	name		823130	0					
ANR	823197	ReturnStatement	return false ;	2412:2:75622:75634	823130	1	True				
ANR	823198	Identifier	false		823130	0					
ANR	823199	ExpressionStatement	free ( fcn -> name )	2414:1:75640:75656	823130	4	True				
ANR	823200	CallExpression	free ( fcn -> name )		823130	0					
ANR	823201	Callee	free		823130	0					
ANR	823202	Identifier	free		823130	0					
ANR	823203	ArgumentList	fcn -> name		823130	1					
ANR	823204	Argument	fcn -> name		823130	0					
ANR	823205	PtrMemberAccess	fcn -> name		823130	0					
ANR	823206	Identifier	fcn		823130	0					
ANR	823207	Identifier	name		823130	1					
ANR	823208	ExpressionStatement	fcn -> name = name	2415:1:75659:75675	823130	5	True				
ANR	823209	AssignmentExpression	fcn -> name = name		823130	0		=			
ANR	823210	PtrMemberAccess	fcn -> name		823130	0					
ANR	823211	Identifier	fcn		823130	0					
ANR	823212	Identifier	name		823130	1					
ANR	823213	Identifier	name		823130	1					
ANR	823214	IfStatement	if ( core -> anal -> cb . on_fcn_rename )		823130	6					
ANR	823215	Condition	core -> anal -> cb . on_fcn_rename	2416:5:75682:75709	823130	0	True				
ANR	823216	MemberAccess	core -> anal -> cb . on_fcn_rename		823130	0					
ANR	823217	PtrMemberAccess	core -> anal -> cb		823130	0					
ANR	823218	PtrMemberAccess	core -> anal		823130	0					
ANR	823219	Identifier	core		823130	0					
ANR	823220	Identifier	anal		823130	1					
ANR	823221	Identifier	cb		823130	1					
ANR	823222	Identifier	on_fcn_rename		823130	1					
ANR	823223	CompoundStatement		12:35:352:352	823130	1					
ANR	823224	ExpressionStatement	"core -> anal -> cb . on_fcn_rename ( core -> anal , core -> anal -> user , fcn , name )"	2417:2:75716:75790	823130	0	True				
ANR	823225	CallExpression	"core -> anal -> cb . on_fcn_rename ( core -> anal , core -> anal -> user , fcn , name )"		823130	0					
ANR	823226	Callee	core -> anal -> cb . on_fcn_rename		823130	0					
ANR	823227	MemberAccess	core -> anal -> cb . on_fcn_rename		823130	0					
ANR	823228	PtrMemberAccess	core -> anal -> cb		823130	0					
ANR	823229	PtrMemberAccess	core -> anal		823130	0					
ANR	823230	Identifier	core		823130	0					
ANR	823231	Identifier	anal		823130	1					
ANR	823232	Identifier	cb		823130	1					
ANR	823233	Identifier	on_fcn_rename		823130	1					
ANR	823234	ArgumentList	core -> anal		823130	1					
ANR	823235	Argument	core -> anal		823130	0					
ANR	823236	PtrMemberAccess	core -> anal		823130	0					
ANR	823237	Identifier	core		823130	0					
ANR	823238	Identifier	anal		823130	1					
ANR	823239	Argument	core -> anal -> user		823130	1					
ANR	823240	PtrMemberAccess	core -> anal -> user		823130	0					
ANR	823241	PtrMemberAccess	core -> anal		823130	0					
ANR	823242	Identifier	core		823130	0					
ANR	823243	Identifier	anal		823130	1					
ANR	823244	Identifier	user		823130	1					
ANR	823245	Argument	fcn		823130	2					
ANR	823246	Identifier	fcn		823130	0					
ANR	823247	Argument	name		823130	3					
ANR	823248	Identifier	name		823130	0					
ANR	823249	ReturnStatement	return true ;	2420:1:75796:75807	823130	7	True				
ANR	823250	Identifier	true		823130	0					
ANR	823251	ReturnType	static bool		823130	1					
ANR	823252	Identifier	setFunctionName		823130	2					
ANR	823253	ParameterList	"RCore * core , ut64 off , const char * _name , bool prefix"		823130	3					
ANR	823254	Parameter	RCore * core	2405:28:75304:75314	823130	0	True				
ANR	823255	ParameterType	RCore *		823130	0					
ANR	823256	Identifier	core		823130	1					
ANR	823257	Parameter	ut64 off	2405:41:75317:75324	823130	1	True				
ANR	823258	ParameterType	ut64		823130	0					
ANR	823259	Identifier	off		823130	1					
ANR	823260	Parameter	const char * _name	2405:51:75327:75343	823130	2	True				
ANR	823261	ParameterType	const char *		823130	0					
ANR	823262	Identifier	_name		823130	1					
ANR	823263	Parameter	bool prefix	2405:70:75346:75356	823130	3	True				
ANR	823264	ParameterType	bool		823130	0					
ANR	823265	Identifier	prefix		823130	1					
ANR	823266	CFGEntryNode	ENTRY		823130		True				
ANR	823267	CFGExitNode	EXIT		823130		True				
ANR	823268	Symbol	getFunctionName		823130						
ANR	823269	Symbol	core -> anal -> cb		823130						
ANR	823270	Symbol	core -> anal -> cb . on_fcn_rename		823130						
ANR	823271	Symbol	core -> anal -> user		823130						
ANR	823272	Symbol	_name		823130						
ANR	823273	Symbol	* fcn		823130						
ANR	823274	Symbol	fcn -> name		823130						
ANR	823275	Symbol	prefix		823130						
ANR	823276	Symbol	R_ANAL_FCN_TYPE_FCN		823130						
ANR	823277	Symbol	false		823130						
ANR	823278	Symbol	* core		823130						
ANR	823279	Symbol	core -> anal		823130						
ANR	823280	Symbol	off		823130						
ANR	823281	Symbol	fcn		823130						
ANR	823282	Symbol	R_ANAL_FCN_TYPE_LOC		823130						
ANR	823283	Symbol	core		823130						
ANR	823284	Symbol	r_anal_get_fcn_in		823130						
ANR	823285	Symbol	* core -> anal		823130						
ANR	823286	Symbol	name		823130						
ANR	823287	Symbol	true		823130						
ANR	823288	Symbol	R_ANAL_FCN_TYPE_SYM		823130						
ANR	823289	Symbol	* * core		823130						
ANR	823290	Function	afCc	2423:0:75812:76418							
ANR	823291	FunctionDef	"afCc (RCore * core , const char * input)"		823290	0					
ANR	823292	CompoundStatement		2423:49:75861:76418	823290	0					
ANR	823293	IdentifierDeclStatement	ut64 addr ;	2424:1:75864:75873	823290	0	True				
ANR	823294	IdentifierDecl	addr		823290	0					
ANR	823295	IdentifierDeclType	ut64		823290	0					
ANR	823296	Identifier	addr		823290	1					
ANR	823297	IdentifierDeclStatement	RAnalFunction * fcn ;	2425:1:75876:75894	823290	1	True				
ANR	823298	IdentifierDecl	* fcn		823290	0					
ANR	823299	IdentifierDeclType	RAnalFunction *		823290	0					
ANR	823300	Identifier	fcn		823290	1					
ANR	823301	IfStatement	if ( * input == ' ' )		823290	2					
ANR	823302	Condition	* input == ' '	2426:5:75901:75913	823290	0	True				
ANR	823303	EqualityExpression	* input == ' '		823290	0		==			
ANR	823304	UnaryOperationExpression	* input		823290	0					
ANR	823305	UnaryOperator	*		823290	0					
ANR	823306	Identifier	input		823290	1					
ANR	823307	PrimaryExpression	' '		823290	1					
ANR	823308	CompoundStatement		4:20:54:54	823290	1					
ANR	823309	ExpressionStatement	"addr = r_num_math ( core -> num , input )"	2427:2:75920:75956	823290	0	True				
ANR	823310	AssignmentExpression	"addr = r_num_math ( core -> num , input )"		823290	0		=			
ANR	823311	Identifier	addr		823290	0					
ANR	823312	CallExpression	"r_num_math ( core -> num , input )"		823290	1					
ANR	823313	Callee	r_num_math		823290	0					
ANR	823314	Identifier	r_num_math		823290	0					
ANR	823315	ArgumentList	core -> num		823290	1					
ANR	823316	Argument	core -> num		823290	0					
ANR	823317	PtrMemberAccess	core -> num		823290	0					
ANR	823318	Identifier	core		823290	0					
ANR	823319	Identifier	num		823290	1					
ANR	823320	Argument	input		823290	1					
ANR	823321	Identifier	input		823290	0					
ANR	823322	ElseStatement	else		823290	0					
ANR	823323	CompoundStatement		6:8:104:104	823290	0					
ANR	823324	ExpressionStatement	addr = core -> offset	2429:2:75970:75989	823290	0	True				
ANR	823325	AssignmentExpression	addr = core -> offset		823290	0		=			
ANR	823326	Identifier	addr		823290	0					
ANR	823327	PtrMemberAccess	core -> offset		823290	1					
ANR	823328	Identifier	core		823290	0					
ANR	823329	Identifier	offset		823290	1					
ANR	823330	Statement	if	2431:1:75995:75996	823290	3	True				
ANR	823331	Statement	(	2431:4:75998:75998	823290	4	True				
ANR	823332	Statement	addr	2431:5:75999:76002	823290	5	True				
ANR	823333	Statement	==	2431:10:76004:76005	823290	6	True				
ANR	823334	Statement	0L	2431:13:76007:76008	823290	7	True				
ANR	823335	Statement	L	2431:15:76009:76009	823290	8	True				
ANR	823336	Statement	)	2431:16:76010:76010	823290	9	True				
ANR	823337	CompoundStatement		9:18:150:150	823290	10					
ANR	823338	ExpressionStatement	"fcn = r_anal_fcn_find_name ( core -> anal , input + 3 )"	2432:2:76016:76066	823290	0	True				
ANR	823339	AssignmentExpression	"fcn = r_anal_fcn_find_name ( core -> anal , input + 3 )"		823290	0		=			
ANR	823340	Identifier	fcn		823290	0					
ANR	823341	CallExpression	"r_anal_fcn_find_name ( core -> anal , input + 3 )"		823290	1					
ANR	823342	Callee	r_anal_fcn_find_name		823290	0					
ANR	823343	Identifier	r_anal_fcn_find_name		823290	0					
ANR	823344	ArgumentList	core -> anal		823290	1					
ANR	823345	Argument	core -> anal		823290	0					
ANR	823346	PtrMemberAccess	core -> anal		823290	0					
ANR	823347	Identifier	core		823290	0					
ANR	823348	Identifier	anal		823290	1					
ANR	823349	Argument	input + 3		823290	1					
ANR	823350	AdditiveExpression	input + 3		823290	0		+			
ANR	823351	Identifier	input		823290	0					
ANR	823352	PrimaryExpression	3		823290	1					
ANR	823353	ReturnType	static void		823290	1					
ANR	823354	Identifier	afCc		823290	2					
ANR	823355	ParameterList	"RCore * core , const char * input"		823290	3					
ANR	823356	Parameter	RCore * core	2423:17:75829:75839	823290	0	True				
ANR	823357	ParameterType	RCore *		823290	0					
ANR	823358	Identifier	core		823290	1					
ANR	823359	Parameter	const char * input	2423:30:75842:75858	823290	1	True				
ANR	823360	ParameterType	const char *		823290	0					
ANR	823361	Identifier	input		823290	1					
ANR	823362	CFGEntryNode	ENTRY		823290		True				
ANR	823363	CFGExitNode	EXIT		823290		True				
ANR	823364	Symbol	fcn		823290						
ANR	823365	Symbol	core		823290						
ANR	823366	Symbol	input		823290						
ANR	823367	Symbol	* input		823290						
ANR	823368	Symbol	* core		823290						
ANR	823369	Symbol	core -> offset		823290						
ANR	823370	Symbol	r_anal_fcn_find_name		823290						
ANR	823371	Symbol	addr		823290						
ANR	823372	Symbol	core -> num		823290						
ANR	823373	Symbol	core -> anal		823290						
ANR	823374	Symbol	r_num_math		823290						
ANR	823375	Function	cmd_anal_fcn_sig	2446:0:76421:78886							
ANR	823376	FunctionDef	"cmd_anal_fcn_sig (RCore * core , const char * input)"		823375	0					
ANR	823377	CompoundStatement		2446:61:76482:78886	823375	0					
ANR	823378	IdentifierDeclStatement	bool json = ( input [ 0 ] == 'j' ) ;	2447:1:76485:76514	823375	0	True				
ANR	823379	IdentifierDecl	json = ( input [ 0 ] == 'j' )		823375	0					
ANR	823380	IdentifierDeclType	bool		823375	0					
ANR	823381	Identifier	json		823375	1					
ANR	823382	AssignmentExpression	json = ( input [ 0 ] == 'j' )		823375	2		=			
ANR	823383	Identifier	json		823375	0					
ANR	823384	EqualityExpression	input [ 0 ] == 'j'		823375	1		==			
ANR	823385	ArrayIndexing	input [ 0 ]		823375	0					
ANR	823386	Identifier	input		823375	0					
ANR	823387	PrimaryExpression	0		823375	1					
ANR	823388	PrimaryExpression	'j'		823375	1					
ANR	823389	IdentifierDeclStatement	"char * p = strchr ( input , ' ' ) ;"	2448:1:76517:76546	823375	1	True				
ANR	823390	IdentifierDecl	"* p = strchr ( input , ' ' )"		823375	0					
ANR	823391	IdentifierDeclType	char *		823375	0					
ANR	823392	Identifier	p		823375	1					
ANR	823393	AssignmentExpression	"* p = strchr ( input , ' ' )"		823375	2		=			
ANR	823394	Identifier	p		823375	0					
ANR	823395	CallExpression	"strchr ( input , ' ' )"		823375	1					
ANR	823396	Callee	strchr		823375	0					
ANR	823397	Identifier	strchr		823375	0					
ANR	823398	ArgumentList	input		823375	1					
ANR	823399	Argument	input		823375	0					
ANR	823400	Identifier	input		823375	0					
ANR	823401	Argument	' '		823375	1					
ANR	823402	PrimaryExpression	' '		823375	0					
ANR	823403	IdentifierDeclStatement	char * fcn_name = p ? r_str_trim_dup ( p ) : NULL ;	2449:1:76549:76594	823375	2	True				
ANR	823404	IdentifierDecl	* fcn_name = p ? r_str_trim_dup ( p ) : NULL		823375	0					
ANR	823405	IdentifierDeclType	char *		823375	0					
ANR	823406	Identifier	fcn_name		823375	1					
ANR	823407	AssignmentExpression	* fcn_name = p ? r_str_trim_dup ( p ) : NULL		823375	2		=			
ANR	823408	Identifier	fcn_name		823375	0					
ANR	823409	ConditionalExpression	p ? r_str_trim_dup ( p ) : NULL		823375	1					
ANR	823410	Condition	p		823375	0					
ANR	823411	Identifier	p		823375	0					
ANR	823412	CallExpression	r_str_trim_dup ( p )		823375	1					
ANR	823413	Callee	r_str_trim_dup		823375	0					
ANR	823414	Identifier	r_str_trim_dup		823375	0					
ANR	823415	ArgumentList	p		823375	1					
ANR	823416	Argument	p		823375	0					
ANR	823417	Identifier	p		823375	0					
ANR	823418	Identifier	NULL		823375	2					
ANR	823419	IdentifierDeclStatement	RListIter * iter ;	2450:1:76597:76612	823375	3	True				
ANR	823420	IdentifierDecl	* iter		823375	0					
ANR	823421	IdentifierDeclType	RListIter *		823375	0					
ANR	823422	Identifier	iter		823375	1					
ANR	823423	IdentifierDeclStatement	RAnalFuncArg * arg ;	2451:1:76615:76632	823375	4	True				
ANR	823424	IdentifierDecl	* arg		823375	0					
ANR	823425	IdentifierDeclType	RAnalFuncArg *		823375	0					
ANR	823426	Identifier	arg		823375	1					
ANR	823427	IdentifierDeclStatement	RAnalFunction * fcn ;	2453:1:76636:76654	823375	5	True				
ANR	823428	IdentifierDecl	* fcn		823375	0					
ANR	823429	IdentifierDeclType	RAnalFunction *		823375	0					
ANR	823430	Identifier	fcn		823375	1					
ANR	823431	IfStatement	if ( fcn_name )		823375	6					
ANR	823432	Condition	fcn_name	2454:5:76661:76668	823375	0	True				
ANR	823433	Identifier	fcn_name		823375	0					
ANR	823434	CompoundStatement		9:15:188:188	823375	1					
ANR	823435	ExpressionStatement	"fcn = r_anal_fcn_find_name ( core -> anal , fcn_name )"	2455:2:76675:76724	823375	0	True				
ANR	823436	AssignmentExpression	"fcn = r_anal_fcn_find_name ( core -> anal , fcn_name )"		823375	0		=			
ANR	823437	Identifier	fcn		823375	0					
ANR	823438	CallExpression	"r_anal_fcn_find_name ( core -> anal , fcn_name )"		823375	1					
ANR	823439	Callee	r_anal_fcn_find_name		823375	0					
ANR	823440	Identifier	r_anal_fcn_find_name		823375	0					
ANR	823441	ArgumentList	core -> anal		823375	1					
ANR	823442	Argument	core -> anal		823375	0					
ANR	823443	PtrMemberAccess	core -> anal		823375	0					
ANR	823444	Identifier	core		823375	0					
ANR	823445	Identifier	anal		823375	1					
ANR	823446	Argument	fcn_name		823375	1					
ANR	823447	Identifier	fcn_name		823375	0					
ANR	823448	ElseStatement	else		823375	0					
ANR	823449	CompoundStatement		11:8:251:251	823375	0					
ANR	823450	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"	2457:2:76738:76791	823375	0	True				
ANR	823451	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		823375	0		=			
ANR	823452	Identifier	fcn		823375	0					
ANR	823453	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		823375	1					
ANR	823454	Callee	r_anal_get_fcn_in		823375	0					
ANR	823455	Identifier	r_anal_get_fcn_in		823375	0					
ANR	823456	ArgumentList	core -> anal		823375	1					
ANR	823457	Argument	core -> anal		823375	0					
ANR	823458	PtrMemberAccess	core -> anal		823375	0					
ANR	823459	Identifier	core		823375	0					
ANR	823460	Identifier	anal		823375	1					
ANR	823461	Argument	core -> offset		823375	1					
ANR	823462	PtrMemberAccess	core -> offset		823375	0					
ANR	823463	Identifier	core		823375	0					
ANR	823464	Identifier	offset		823375	1					
ANR	823465	Argument	0		823375	2					
ANR	823466	PrimaryExpression	0		823375	0					
ANR	823467	IfStatement	if ( fcn )		823375	1					
ANR	823468	Condition	fcn	2458:6:76799:76801	823375	0	True				
ANR	823469	Identifier	fcn		823375	0					
ANR	823470	CompoundStatement		13:11:321:321	823375	1					
ANR	823471	ExpressionStatement	fcn_name = fcn -> name	2459:3:76809:76829	823375	0	True				
ANR	823472	AssignmentExpression	fcn_name = fcn -> name		823375	0		=			
ANR	823473	Identifier	fcn_name		823375	0					
ANR	823474	PtrMemberAccess	fcn -> name		823375	1					
ANR	823475	Identifier	fcn		823375	0					
ANR	823476	Identifier	name		823375	1					
ANR	823477	IfStatement	if ( ! fcn )		823375	7					
ANR	823478	Condition	! fcn	2462:5:76843:76846	823375	0	True				
ANR	823479	UnaryOperationExpression	! fcn		823375	0					
ANR	823480	UnaryOperator	!		823375	0					
ANR	823481	Identifier	fcn		823375	1					
ANR	823482	CompoundStatement		17:11:366:366	823375	1					
ANR	823483	ReturnStatement	return ;	2463:2:76853:76859	823375	0	True				
ANR	823484	IfStatement	if ( json )		823375	8					
ANR	823485	Condition	json	2466:5:76870:76873	823375	0	True				
ANR	823486	Identifier	json		823375	0					
ANR	823487	CompoundStatement		102:2:2152:2181	823375	1					
ANR	823488	IdentifierDeclStatement	PJ * j = pj_new ( ) ;	2467:2:76880:76897	823375	0	True				
ANR	823489	IdentifierDecl	* j = pj_new ( )		823375	0					
ANR	823490	IdentifierDeclType	PJ *		823375	0					
ANR	823491	Identifier	j		823375	1					
ANR	823492	AssignmentExpression	* j = pj_new ( )		823375	2		=			
ANR	823493	Identifier	j		823375	0					
ANR	823494	CallExpression	pj_new ( )		823375	1					
ANR	823495	Callee	pj_new		823375	0					
ANR	823496	Identifier	pj_new		823375	0					
ANR	823497	ArgumentList			823375	1					
ANR	823498	IfStatement	if ( ! j )		823375	1					
ANR	823499	Condition	! j	2468:6:76905:76906	823375	0	True				
ANR	823500	UnaryOperationExpression	! j		823375	0					
ANR	823501	UnaryOperator	!		823375	0					
ANR	823502	Identifier	j		823375	1					
ANR	823503	CompoundStatement		23:10:426:426	823375	1					
ANR	823504	ReturnStatement	return ;	2469:3:76914:76920	823375	0	True				
ANR	823505	ExpressionStatement	pj_a ( j )	2471:2:76928:76936	823375	2	True				
ANR	823506	CallExpression	pj_a ( j )		823375	0					
ANR	823507	Callee	pj_a		823375	0					
ANR	823508	Identifier	pj_a		823375	0					
ANR	823509	ArgumentList	j		823375	1					
ANR	823510	Argument	j		823375	0					
ANR	823511	Identifier	j		823375	0					
ANR	823512	IdentifierDeclStatement	char * key = NULL ;	2473:2:76941:76957	823375	3	True				
ANR	823513	IdentifierDecl	* key = NULL		823375	0					
ANR	823514	IdentifierDeclType	char *		823375	0					
ANR	823515	Identifier	key		823375	1					
ANR	823516	AssignmentExpression	* key = NULL		823375	2		=			
ANR	823517	Identifier	NULL		823375	0					
ANR	823518	Identifier	NULL		823375	1					
ANR	823519	IfStatement	if ( fcn_name )		823375	4					
ANR	823520	Condition	fcn_name	2474:6:76965:76972	823375	0	True				
ANR	823521	Identifier	fcn_name		823375	0					
ANR	823522	CompoundStatement		29:16:492:492	823375	1					
ANR	823523	ExpressionStatement	"key = resolve_fcn_name ( core -> anal , fcn_name )"	2475:3:76980:77025	823375	0	True				
ANR	823524	AssignmentExpression	"key = resolve_fcn_name ( core -> anal , fcn_name )"		823375	0		=			
ANR	823525	Identifier	key		823375	0					
ANR	823526	CallExpression	"resolve_fcn_name ( core -> anal , fcn_name )"		823375	1					
ANR	823527	Callee	resolve_fcn_name		823375	0					
ANR	823528	Identifier	resolve_fcn_name		823375	0					
ANR	823529	ArgumentList	core -> anal		823375	1					
ANR	823530	Argument	core -> anal		823375	0					
ANR	823531	PtrMemberAccess	core -> anal		823375	0					
ANR	823532	Identifier	core		823375	0					
ANR	823533	Identifier	anal		823375	1					
ANR	823534	Argument	fcn_name		823375	1					
ANR	823535	Identifier	fcn_name		823375	0					
ANR	823536	IfStatement	if ( key )		823375	5					
ANR	823537	Condition	key	2478:6:77038:77040	823375	0	True				
ANR	823538	Identifier	key		823375	0					
ANR	823539	CompoundStatement		35:3:637:700	823375	1					
ANR	823540	IdentifierDeclStatement	"const char * fcn_type = r_type_func_ret ( core -> anal -> sdb_types , key ) ;"	2479:3:77048:77115	823375	0	True				
ANR	823541	IdentifierDecl	"* fcn_type = r_type_func_ret ( core -> anal -> sdb_types , key )"		823375	0					
ANR	823542	IdentifierDeclType	const char *		823375	0					
ANR	823543	Identifier	fcn_type		823375	1					
ANR	823544	AssignmentExpression	"* fcn_type = r_type_func_ret ( core -> anal -> sdb_types , key )"		823375	2		=			
ANR	823545	Identifier	fcn_type		823375	0					
ANR	823546	CallExpression	"r_type_func_ret ( core -> anal -> sdb_types , key )"		823375	1					
ANR	823547	Callee	r_type_func_ret		823375	0					
ANR	823548	Identifier	r_type_func_ret		823375	0					
ANR	823549	ArgumentList	core -> anal -> sdb_types		823375	1					
ANR	823550	Argument	core -> anal -> sdb_types		823375	0					
ANR	823551	PtrMemberAccess	core -> anal -> sdb_types		823375	0					
ANR	823552	PtrMemberAccess	core -> anal		823375	0					
ANR	823553	Identifier	core		823375	0					
ANR	823554	Identifier	anal		823375	1					
ANR	823555	Identifier	sdb_types		823375	1					
ANR	823556	Argument	key		823375	1					
ANR	823557	Identifier	key		823375	0					
ANR	823558	IdentifierDeclStatement	"int nargs = r_type_func_args_count ( core -> anal -> sdb_types , key ) ;"	2480:3:77120:77183	823375	1	True				
ANR	823559	IdentifierDecl	"nargs = r_type_func_args_count ( core -> anal -> sdb_types , key )"		823375	0					
ANR	823560	IdentifierDeclType	int		823375	0					
ANR	823561	Identifier	nargs		823375	1					
ANR	823562	AssignmentExpression	"nargs = r_type_func_args_count ( core -> anal -> sdb_types , key )"		823375	2		=			
ANR	823563	Identifier	nargs		823375	0					
ANR	823564	CallExpression	"r_type_func_args_count ( core -> anal -> sdb_types , key )"		823375	1					
ANR	823565	Callee	r_type_func_args_count		823375	0					
ANR	823566	Identifier	r_type_func_args_count		823375	0					
ANR	823567	ArgumentList	core -> anal -> sdb_types		823375	1					
ANR	823568	Argument	core -> anal -> sdb_types		823375	0					
ANR	823569	PtrMemberAccess	core -> anal -> sdb_types		823375	0					
ANR	823570	PtrMemberAccess	core -> anal		823375	0					
ANR	823571	Identifier	core		823375	0					
ANR	823572	Identifier	anal		823375	1					
ANR	823573	Identifier	sdb_types		823375	1					
ANR	823574	Argument	key		823375	1					
ANR	823575	Identifier	key		823375	0					
ANR	823576	IfStatement	if ( fcn_type )		823375	2					
ANR	823577	Condition	fcn_type	2481:7:77192:77199	823375	0	True				
ANR	823578	Identifier	fcn_type		823375	0					
ANR	823579	CompoundStatement		36:17:719:719	823375	1					
ANR	823580	ExpressionStatement	pj_o ( j )	2482:4:77208:77216	823375	0	True				
ANR	823581	CallExpression	pj_o ( j )		823375	0					
ANR	823582	Callee	pj_o		823375	0					
ANR	823583	Identifier	pj_o		823375	0					
ANR	823584	ArgumentList	j		823375	1					
ANR	823585	Argument	j		823375	0					
ANR	823586	Identifier	j		823375	0					
ANR	823587	ExpressionStatement	"pj_ks ( j , ""name"" , r_str_get ( key ) )"	2483:4:77222:77256	823375	1	True				
ANR	823588	CallExpression	"pj_ks ( j , ""name"" , r_str_get ( key ) )"		823375	0					
ANR	823589	Callee	pj_ks		823375	0					
ANR	823590	Identifier	pj_ks		823375	0					
ANR	823591	ArgumentList	j		823375	1					
ANR	823592	Argument	j		823375	0					
ANR	823593	Identifier	j		823375	0					
ANR	823594	Argument	"""name"""		823375	1					
ANR	823595	PrimaryExpression	"""name"""		823375	0					
ANR	823596	Argument	r_str_get ( key )		823375	2					
ANR	823597	CallExpression	r_str_get ( key )		823375	0					
ANR	823598	Callee	r_str_get		823375	0					
ANR	823599	Identifier	r_str_get		823375	0					
ANR	823600	ArgumentList	key		823375	1					
ANR	823601	Argument	key		823375	0					
ANR	823602	Identifier	key		823375	0					
ANR	823603	ExpressionStatement	"pj_ks ( j , ""return"" , r_str_get ( fcn_type ) )"	2484:4:77262:77303	823375	2	True				
ANR	823604	CallExpression	"pj_ks ( j , ""return"" , r_str_get ( fcn_type ) )"		823375	0					
ANR	823605	Callee	pj_ks		823375	0					
ANR	823606	Identifier	pj_ks		823375	0					
ANR	823607	ArgumentList	j		823375	1					
ANR	823608	Argument	j		823375	0					
ANR	823609	Identifier	j		823375	0					
ANR	823610	Argument	"""return"""		823375	1					
ANR	823611	PrimaryExpression	"""return"""		823375	0					
ANR	823612	Argument	r_str_get ( fcn_type )		823375	2					
ANR	823613	CallExpression	r_str_get ( fcn_type )		823375	0					
ANR	823614	Callee	r_str_get		823375	0					
ANR	823615	Identifier	r_str_get		823375	0					
ANR	823616	ArgumentList	fcn_type		823375	1					
ANR	823617	Argument	fcn_type		823375	0					
ANR	823618	Identifier	fcn_type		823375	0					
ANR	823619	ExpressionStatement	"pj_k ( j , ""args"" )"	2485:4:77309:77325	823375	3	True				
ANR	823620	CallExpression	"pj_k ( j , ""args"" )"		823375	0					
ANR	823621	Callee	pj_k		823375	0					
ANR	823622	Identifier	pj_k		823375	0					
ANR	823623	ArgumentList	j		823375	1					
ANR	823624	Argument	j		823375	0					
ANR	823625	Identifier	j		823375	0					
ANR	823626	Argument	"""args"""		823375	1					
ANR	823627	PrimaryExpression	"""args"""		823375	0					
ANR	823628	ExpressionStatement	pj_a ( j )	2486:4:77331:77339	823375	4	True				
ANR	823629	CallExpression	pj_a ( j )		823375	0					
ANR	823630	Callee	pj_a		823375	0					
ANR	823631	Identifier	pj_a		823375	0					
ANR	823632	ArgumentList	j		823375	1					
ANR	823633	Argument	j		823375	0					
ANR	823634	Identifier	j		823375	0					
ANR	823635	IfStatement	if ( nargs )		823375	5					
ANR	823636	Condition	nargs	2487:8:77349:77353	823375	0	True				
ANR	823637	Identifier	nargs		823375	0					
ANR	823638	CompoundStatement		43:5:880:931	823375	1					
ANR	823639	IdentifierDeclStatement	"RList * list = r_core_get_func_args ( core , fcn_name ) ;"	2488:5:77363:77414	823375	0	True				
ANR	823640	IdentifierDecl	"* list = r_core_get_func_args ( core , fcn_name )"		823375	0					
ANR	823641	IdentifierDeclType	RList *		823375	0					
ANR	823642	Identifier	list		823375	1					
ANR	823643	AssignmentExpression	"* list = r_core_get_func_args ( core , fcn_name )"		823375	2		=			
ANR	823644	Identifier	list		823375	0					
ANR	823645	CallExpression	"r_core_get_func_args ( core , fcn_name )"		823375	1					
ANR	823646	Callee	r_core_get_func_args		823375	0					
ANR	823647	Identifier	r_core_get_func_args		823375	0					
ANR	823648	ArgumentList	core		823375	1					
ANR	823649	Argument	core		823375	0					
ANR	823650	Identifier	core		823375	0					
ANR	823651	Argument	fcn_name		823375	1					
ANR	823652	Identifier	fcn_name		823375	0					
ANR	823653	Statement	r_list_foreach	2489:5:77421:77434	823375	1	True				
ANR	823654	Statement	(	2489:20:77436:77436	823375	2	True				
ANR	823655	Statement	list	2489:21:77437:77440	823375	3	True				
ANR	823656	Statement	","	2489:25:77441:77441	823375	4	True				
ANR	823657	Statement	iter	2489:27:77443:77446	823375	5	True				
ANR	823658	Statement	","	2489:31:77447:77447	823375	6	True				
ANR	823659	Statement	arg	2489:33:77449:77451	823375	7	True				
ANR	823660	Statement	)	2489:36:77452:77452	823375	8	True				
ANR	823661	CompoundStatement		45:6:979:1008	823375	9					
ANR	823662	IdentifierDeclStatement	char * type = arg -> orig_c_type ;	2490:6:77462:77491	823375	0	True				
ANR	823663	IdentifierDecl	* type = arg -> orig_c_type		823375	0					
ANR	823664	IdentifierDeclType	char *		823375	0					
ANR	823665	Identifier	type		823375	1					
ANR	823666	AssignmentExpression	* type = arg -> orig_c_type		823375	2		=			
ANR	823667	Identifier	type		823375	0					
ANR	823668	PtrMemberAccess	arg -> orig_c_type		823375	1					
ANR	823669	Identifier	arg		823375	0					
ANR	823670	Identifier	orig_c_type		823375	1					
ANR	823671	ExpressionStatement	pj_o ( j )	2491:6:77499:77507	823375	1	True				
ANR	823672	CallExpression	pj_o ( j )		823375	0					
ANR	823673	Callee	pj_o		823375	0					
ANR	823674	Identifier	pj_o		823375	0					
ANR	823675	ArgumentList	j		823375	1					
ANR	823676	Argument	j		823375	0					
ANR	823677	Identifier	j		823375	0					
ANR	823678	ExpressionStatement	"pj_ks ( j , ""name"" , arg -> name )"	2492:6:77515:77543	823375	2	True				
ANR	823679	CallExpression	"pj_ks ( j , ""name"" , arg -> name )"		823375	0					
ANR	823680	Callee	pj_ks		823375	0					
ANR	823681	Identifier	pj_ks		823375	0					
ANR	823682	ArgumentList	j		823375	1					
ANR	823683	Argument	j		823375	0					
ANR	823684	Identifier	j		823375	0					
ANR	823685	Argument	"""name"""		823375	1					
ANR	823686	PrimaryExpression	"""name"""		823375	0					
ANR	823687	Argument	arg -> name		823375	2					
ANR	823688	PtrMemberAccess	arg -> name		823375	0					
ANR	823689	Identifier	arg		823375	0					
ANR	823690	Identifier	name		823375	1					
ANR	823691	ExpressionStatement	"pj_ks ( j , ""type"" , type )"	2493:6:77551:77574	823375	3	True				
ANR	823692	CallExpression	"pj_ks ( j , ""type"" , type )"		823375	0					
ANR	823693	Callee	pj_ks		823375	0					
ANR	823694	Identifier	pj_ks		823375	0					
ANR	823695	ArgumentList	j		823375	1					
ANR	823696	Argument	j		823375	0					
ANR	823697	Identifier	j		823375	0					
ANR	823698	Argument	"""type"""		823375	1					
ANR	823699	PrimaryExpression	"""type"""		823375	0					
ANR	823700	Argument	type		823375	2					
ANR	823701	Identifier	type		823375	0					
ANR	823702	ExpressionStatement	pj_end ( j )	2494:6:77582:77592	823375	4	True				
ANR	823703	CallExpression	pj_end ( j )		823375	0					
ANR	823704	Callee	pj_end		823375	0					
ANR	823705	Identifier	pj_end		823375	0					
ANR	823706	ArgumentList	j		823375	1					
ANR	823707	Argument	j		823375	0					
ANR	823708	Identifier	j		823375	0					
ANR	823709	ExpressionStatement	r_list_free ( list )	2496:5:77606:77624	823375	10	True				
ANR	823710	CallExpression	r_list_free ( list )		823375	0					
ANR	823711	Callee	r_list_free		823375	0					
ANR	823712	Identifier	r_list_free		823375	0					
ANR	823713	ArgumentList	list		823375	1					
ANR	823714	Argument	list		823375	0					
ANR	823715	Identifier	list		823375	0					
ANR	823716	ExpressionStatement	pj_end ( j )	2498:4:77636:77646	823375	6	True				
ANR	823717	CallExpression	pj_end ( j )		823375	0					
ANR	823718	Callee	pj_end		823375	0					
ANR	823719	Identifier	pj_end		823375	0					
ANR	823720	ArgumentList	j		823375	1					
ANR	823721	Argument	j		823375	0					
ANR	823722	Identifier	j		823375	0					
ANR	823723	ExpressionStatement	"pj_ki ( j , ""count"" , nargs )"	2499:4:77652:77677	823375	7	True				
ANR	823724	CallExpression	"pj_ki ( j , ""count"" , nargs )"		823375	0					
ANR	823725	Callee	pj_ki		823375	0					
ANR	823726	Identifier	pj_ki		823375	0					
ANR	823727	ArgumentList	j		823375	1					
ANR	823728	Argument	j		823375	0					
ANR	823729	Identifier	j		823375	0					
ANR	823730	Argument	"""count"""		823375	1					
ANR	823731	PrimaryExpression	"""count"""		823375	0					
ANR	823732	Argument	nargs		823375	2					
ANR	823733	Identifier	nargs		823375	0					
ANR	823734	ExpressionStatement	pj_end ( j )	2500:4:77683:77693	823375	8	True				
ANR	823735	CallExpression	pj_end ( j )		823375	0					
ANR	823736	Callee	pj_end		823375	0					
ANR	823737	Identifier	pj_end		823375	0					
ANR	823738	ArgumentList	j		823375	1					
ANR	823739	Argument	j		823375	0					
ANR	823740	Identifier	j		823375	0					
ANR	823741	ExpressionStatement	free ( key )	2502:3:77703:77713	823375	3	True				
ANR	823742	CallExpression	free ( key )		823375	0					
ANR	823743	Callee	free		823375	0					
ANR	823744	Identifier	free		823375	0					
ANR	823745	ArgumentList	key		823375	1					
ANR	823746	Argument	key		823375	0					
ANR	823747	Identifier	key		823375	0					
ANR	823748	ElseStatement	else		823375	0					
ANR	823749	CompoundStatement		67:3:1441:1454	823375	0					
ANR	823750	ExpressionStatement	pj_o ( j )	2504:3:77729:77737	823375	0	True				
ANR	823751	CallExpression	pj_o ( j )		823375	0					
ANR	823752	Callee	pj_o		823375	0					
ANR	823753	Identifier	pj_o		823375	0					
ANR	823754	ArgumentList	j		823375	1					
ANR	823755	Argument	j		823375	0					
ANR	823756	Identifier	j		823375	0					
ANR	823757	ExpressionStatement	"pj_ks ( j , ""name"" , r_str_get ( fcn_name ) )"	2505:3:77742:77781	823375	1	True				
ANR	823758	CallExpression	"pj_ks ( j , ""name"" , r_str_get ( fcn_name ) )"		823375	0					
ANR	823759	Callee	pj_ks		823375	0					
ANR	823760	Identifier	pj_ks		823375	0					
ANR	823761	ArgumentList	j		823375	1					
ANR	823762	Argument	j		823375	0					
ANR	823763	Identifier	j		823375	0					
ANR	823764	Argument	"""name"""		823375	1					
ANR	823765	PrimaryExpression	"""name"""		823375	0					
ANR	823766	Argument	r_str_get ( fcn_name )		823375	2					
ANR	823767	CallExpression	r_str_get ( fcn_name )		823375	0					
ANR	823768	Callee	r_str_get		823375	0					
ANR	823769	Identifier	r_str_get		823375	0					
ANR	823770	ArgumentList	fcn_name		823375	1					
ANR	823771	Argument	fcn_name		823375	0					
ANR	823772	Identifier	fcn_name		823375	0					
ANR	823773	ExpressionStatement	"pj_k ( j , ""args"" )"	2506:3:77786:77802	823375	2	True				
ANR	823774	CallExpression	"pj_k ( j , ""args"" )"		823375	0					
ANR	823775	Callee	pj_k		823375	0					
ANR	823776	Identifier	pj_k		823375	0					
ANR	823777	ArgumentList	j		823375	1					
ANR	823778	Argument	j		823375	0					
ANR	823779	Identifier	j		823375	0					
ANR	823780	Argument	"""args"""		823375	1					
ANR	823781	PrimaryExpression	"""args"""		823375	0					
ANR	823782	ExpressionStatement	pj_a ( j )	2507:3:77807:77815	823375	3	True				
ANR	823783	CallExpression	pj_a ( j )		823375	0					
ANR	823784	Callee	pj_a		823375	0					
ANR	823785	Identifier	pj_a		823375	0					
ANR	823786	ArgumentList	j		823375	1					
ANR	823787	Argument	j		823375	0					
ANR	823788	Identifier	j		823375	0					
ANR	823789	IdentifierDeclStatement	RAnalFcnVarsCache cache ;	2509:3:77821:77844	823375	4	True				
ANR	823790	IdentifierDecl	cache		823375	0					
ANR	823791	IdentifierDeclType	RAnalFcnVarsCache		823375	0					
ANR	823792	Identifier	cache		823375	1					
ANR	823793	ExpressionStatement	"r_anal_fcn_vars_cache_init ( core -> anal , & cache , fcn )"	2510:3:77849:77901	823375	5	True				
ANR	823794	CallExpression	"r_anal_fcn_vars_cache_init ( core -> anal , & cache , fcn )"		823375	0					
ANR	823795	Callee	r_anal_fcn_vars_cache_init		823375	0					
ANR	823796	Identifier	r_anal_fcn_vars_cache_init		823375	0					
ANR	823797	ArgumentList	core -> anal		823375	1					
ANR	823798	Argument	core -> anal		823375	0					
ANR	823799	PtrMemberAccess	core -> anal		823375	0					
ANR	823800	Identifier	core		823375	0					
ANR	823801	Identifier	anal		823375	1					
ANR	823802	Argument	& cache		823375	1					
ANR	823803	UnaryOperationExpression	& cache		823375	0					
ANR	823804	UnaryOperator	&		823375	0					
ANR	823805	Identifier	cache		823375	1					
ANR	823806	Argument	fcn		823375	2					
ANR	823807	Identifier	fcn		823375	0					
ANR	823808	IdentifierDeclStatement	int nargs = 0 ;	2511:3:77906:77919	823375	6	True				
ANR	823809	IdentifierDecl	nargs = 0		823375	0					
ANR	823810	IdentifierDeclType	int		823375	0					
ANR	823811	Identifier	nargs		823375	1					
ANR	823812	AssignmentExpression	nargs = 0		823375	2		=			
ANR	823813	Identifier	nargs		823375	0					
ANR	823814	PrimaryExpression	0		823375	1					
ANR	823815	IdentifierDeclStatement	RAnalVar * var ;	2512:3:77924:77937	823375	7	True				
ANR	823816	IdentifierDecl	* var		823375	0					
ANR	823817	IdentifierDeclType	RAnalVar *		823375	0					
ANR	823818	Identifier	var		823375	1					
ANR	823819	Statement	r_list_foreach	2513:3:77942:77955	823375	8	True				
ANR	823820	Statement	(	2513:18:77957:77957	823375	9	True				
ANR	823821	Statement	cache	2513:19:77958:77962	823375	10	True				
ANR	823822	Statement	.	2513:24:77963:77963	823375	11	True				
ANR	823823	Statement	rvars	2513:25:77964:77968	823375	12	True				
ANR	823824	Statement	","	2513:30:77969:77969	823375	13	True				
ANR	823825	Statement	iter	2513:32:77971:77974	823375	14	True				
ANR	823826	Statement	","	2513:36:77975:77975	823375	15	True				
ANR	823827	Statement	var	2513:38:77977:77979	823375	16	True				
ANR	823828	Statement	)	2513:41:77980:77980	823375	17	True				
ANR	823829	CompoundStatement		68:43:1499:1499	823375	18					
ANR	823830	ExpressionStatement	nargs ++	2514:4:77988:77995	823375	0	True				
ANR	823831	PostIncDecOperationExpression	nargs ++		823375	0					
ANR	823832	Identifier	nargs		823375	0					
ANR	823833	IncDec	++		823375	1					
ANR	823834	ExpressionStatement	pj_o ( j )	2515:4:78001:78009	823375	1	True				
ANR	823835	CallExpression	pj_o ( j )		823375	0					
ANR	823836	Callee	pj_o		823375	0					
ANR	823837	Identifier	pj_o		823375	0					
ANR	823838	ArgumentList	j		823375	1					
ANR	823839	Argument	j		823375	0					
ANR	823840	Identifier	j		823375	0					
ANR	823841	ExpressionStatement	"pj_ks ( j , ""name"" , var -> name )"	2516:4:78015:78043	823375	2	True				
ANR	823842	CallExpression	"pj_ks ( j , ""name"" , var -> name )"		823375	0					
ANR	823843	Callee	pj_ks		823375	0					
ANR	823844	Identifier	pj_ks		823375	0					
ANR	823845	ArgumentList	j		823375	1					
ANR	823846	Argument	j		823375	0					
ANR	823847	Identifier	j		823375	0					
ANR	823848	Argument	"""name"""		823375	1					
ANR	823849	PrimaryExpression	"""name"""		823375	0					
ANR	823850	Argument	var -> name		823375	2					
ANR	823851	PtrMemberAccess	var -> name		823375	0					
ANR	823852	Identifier	var		823375	0					
ANR	823853	Identifier	name		823375	1					
ANR	823854	ExpressionStatement	"pj_ks ( j , ""type"" , var -> type )"	2517:4:78049:78077	823375	3	True				
ANR	823855	CallExpression	"pj_ks ( j , ""type"" , var -> type )"		823375	0					
ANR	823856	Callee	pj_ks		823375	0					
ANR	823857	Identifier	pj_ks		823375	0					
ANR	823858	ArgumentList	j		823375	1					
ANR	823859	Argument	j		823375	0					
ANR	823860	Identifier	j		823375	0					
ANR	823861	Argument	"""type"""		823375	1					
ANR	823862	PrimaryExpression	"""type"""		823375	0					
ANR	823863	Argument	var -> type		823375	2					
ANR	823864	PtrMemberAccess	var -> type		823375	0					
ANR	823865	Identifier	var		823375	0					
ANR	823866	Identifier	type		823375	1					
ANR	823867	ExpressionStatement	pj_end ( j )	2518:4:78083:78093	823375	4	True				
ANR	823868	CallExpression	pj_end ( j )		823375	0					
ANR	823869	Callee	pj_end		823375	0					
ANR	823870	Identifier	pj_end		823375	0					
ANR	823871	ArgumentList	j		823375	1					
ANR	823872	Argument	j		823375	0					
ANR	823873	Identifier	j		823375	0					
ANR	823874	Statement	r_list_foreach	2520:3:78103:78116	823375	19	True				
ANR	823875	Statement	(	2520:18:78118:78118	823375	20	True				
ANR	823876	Statement	cache	2520:19:78119:78123	823375	21	True				
ANR	823877	Statement	.	2520:24:78124:78124	823375	22	True				
ANR	823878	Statement	bvars	2520:25:78125:78129	823375	23	True				
ANR	823879	Statement	","	2520:30:78130:78130	823375	24	True				
ANR	823880	Statement	iter	2520:32:78132:78135	823375	25	True				
ANR	823881	Statement	","	2520:36:78136:78136	823375	26	True				
ANR	823882	Statement	var	2520:38:78138:78140	823375	27	True				
ANR	823883	Statement	)	2520:41:78141:78141	823375	28	True				
ANR	823884	CompoundStatement		75:43:1660:1660	823375	29					
ANR	823885	IfStatement	if ( var -> delta <= 0 )		823375	0					
ANR	823886	Condition	var -> delta <= 0	2521:8:78153:78167	823375	0	True				
ANR	823887	RelationalExpression	var -> delta <= 0		823375	0		<=			
ANR	823888	PtrMemberAccess	var -> delta		823375	0					
ANR	823889	Identifier	var		823375	0					
ANR	823890	Identifier	delta		823375	1					
ANR	823891	PrimaryExpression	0		823375	1					
ANR	823892	CompoundStatement		76:25:1687:1687	823375	1					
ANR	823893	ContinueStatement	continue ;	2522:5:78177:78185	823375	0	True				
ANR	823894	ExpressionStatement	nargs ++	2524:4:78197:78204	823375	1	True				
ANR	823895	PostIncDecOperationExpression	nargs ++		823375	0					
ANR	823896	Identifier	nargs		823375	0					
ANR	823897	IncDec	++		823375	1					
ANR	823898	ExpressionStatement	pj_o ( j )	2525:4:78210:78218	823375	2	True				
ANR	823899	CallExpression	pj_o ( j )		823375	0					
ANR	823900	Callee	pj_o		823375	0					
ANR	823901	Identifier	pj_o		823375	0					
ANR	823902	ArgumentList	j		823375	1					
ANR	823903	Argument	j		823375	0					
ANR	823904	Identifier	j		823375	0					
ANR	823905	ExpressionStatement	"pj_ks ( j , ""name"" , var -> name )"	2526:4:78224:78252	823375	3	True				
ANR	823906	CallExpression	"pj_ks ( j , ""name"" , var -> name )"		823375	0					
ANR	823907	Callee	pj_ks		823375	0					
ANR	823908	Identifier	pj_ks		823375	0					
ANR	823909	ArgumentList	j		823375	1					
ANR	823910	Argument	j		823375	0					
ANR	823911	Identifier	j		823375	0					
ANR	823912	Argument	"""name"""		823375	1					
ANR	823913	PrimaryExpression	"""name"""		823375	0					
ANR	823914	Argument	var -> name		823375	2					
ANR	823915	PtrMemberAccess	var -> name		823375	0					
ANR	823916	Identifier	var		823375	0					
ANR	823917	Identifier	name		823375	1					
ANR	823918	ExpressionStatement	"pj_ks ( j , ""type"" , var -> type )"	2527:4:78258:78286	823375	4	True				
ANR	823919	CallExpression	"pj_ks ( j , ""type"" , var -> type )"		823375	0					
ANR	823920	Callee	pj_ks		823375	0					
ANR	823921	Identifier	pj_ks		823375	0					
ANR	823922	ArgumentList	j		823375	1					
ANR	823923	Argument	j		823375	0					
ANR	823924	Identifier	j		823375	0					
ANR	823925	Argument	"""type"""		823375	1					
ANR	823926	PrimaryExpression	"""type"""		823375	0					
ANR	823927	Argument	var -> type		823375	2					
ANR	823928	PtrMemberAccess	var -> type		823375	0					
ANR	823929	Identifier	var		823375	0					
ANR	823930	Identifier	type		823375	1					
ANR	823931	ExpressionStatement	pj_end ( j )	2528:4:78292:78302	823375	5	True				
ANR	823932	CallExpression	pj_end ( j )		823375	0					
ANR	823933	Callee	pj_end		823375	0					
ANR	823934	Identifier	pj_end		823375	0					
ANR	823935	ArgumentList	j		823375	1					
ANR	823936	Argument	j		823375	0					
ANR	823937	Identifier	j		823375	0					
ANR	823938	Statement	r_list_foreach	2530:3:78312:78325	823375	30	True				
ANR	823939	Statement	(	2530:18:78327:78327	823375	31	True				
ANR	823940	Statement	cache	2530:19:78328:78332	823375	32	True				
ANR	823941	Statement	.	2530:24:78333:78333	823375	33	True				
ANR	823942	Statement	svars	2530:25:78334:78338	823375	34	True				
ANR	823943	Statement	","	2530:30:78339:78339	823375	35	True				
ANR	823944	Statement	iter	2530:32:78341:78344	823375	36	True				
ANR	823945	Statement	","	2530:36:78345:78345	823375	37	True				
ANR	823946	Statement	var	2530:38:78347:78349	823375	38	True				
ANR	823947	Statement	)	2530:41:78350:78350	823375	39	True				
ANR	823948	CompoundStatement		85:43:1869:1869	823375	40					
ANR	823949	IfStatement	if ( ! var -> isarg )		823375	0					
ANR	823950	Condition	! var -> isarg	2531:8:78362:78372	823375	0	True				
ANR	823951	UnaryOperationExpression	! var -> isarg		823375	0					
ANR	823952	UnaryOperator	!		823375	0					
ANR	823953	PtrMemberAccess	var -> isarg		823375	1					
ANR	823954	Identifier	var		823375	0					
ANR	823955	Identifier	isarg		823375	1					
ANR	823956	CompoundStatement		86:21:1892:1892	823375	1					
ANR	823957	ContinueStatement	continue ;	2532:5:78382:78390	823375	0	True				
ANR	823958	ExpressionStatement	nargs ++	2534:4:78402:78409	823375	1	True				
ANR	823959	PostIncDecOperationExpression	nargs ++		823375	0					
ANR	823960	Identifier	nargs		823375	0					
ANR	823961	IncDec	++		823375	1					
ANR	823962	ExpressionStatement	pj_o ( j )	2535:4:78415:78423	823375	2	True				
ANR	823963	CallExpression	pj_o ( j )		823375	0					
ANR	823964	Callee	pj_o		823375	0					
ANR	823965	Identifier	pj_o		823375	0					
ANR	823966	ArgumentList	j		823375	1					
ANR	823967	Argument	j		823375	0					
ANR	823968	Identifier	j		823375	0					
ANR	823969	ExpressionStatement	"pj_ks ( j , ""name"" , var -> name )"	2536:4:78429:78457	823375	3	True				
ANR	823970	CallExpression	"pj_ks ( j , ""name"" , var -> name )"		823375	0					
ANR	823971	Callee	pj_ks		823375	0					
ANR	823972	Identifier	pj_ks		823375	0					
ANR	823973	ArgumentList	j		823375	1					
ANR	823974	Argument	j		823375	0					
ANR	823975	Identifier	j		823375	0					
ANR	823976	Argument	"""name"""		823375	1					
ANR	823977	PrimaryExpression	"""name"""		823375	0					
ANR	823978	Argument	var -> name		823375	2					
ANR	823979	PtrMemberAccess	var -> name		823375	0					
ANR	823980	Identifier	var		823375	0					
ANR	823981	Identifier	name		823375	1					
ANR	823982	ExpressionStatement	"pj_ks ( j , ""type"" , var -> type )"	2537:4:78463:78491	823375	4	True				
ANR	823983	CallExpression	"pj_ks ( j , ""type"" , var -> type )"		823375	0					
ANR	823984	Callee	pj_ks		823375	0					
ANR	823985	Identifier	pj_ks		823375	0					
ANR	823986	ArgumentList	j		823375	1					
ANR	823987	Argument	j		823375	0					
ANR	823988	Identifier	j		823375	0					
ANR	823989	Argument	"""type"""		823375	1					
ANR	823990	PrimaryExpression	"""type"""		823375	0					
ANR	823991	Argument	var -> type		823375	2					
ANR	823992	PtrMemberAccess	var -> type		823375	0					
ANR	823993	Identifier	var		823375	0					
ANR	823994	Identifier	type		823375	1					
ANR	823995	ExpressionStatement	pj_end ( j )	2538:4:78497:78507	823375	5	True				
ANR	823996	CallExpression	pj_end ( j )		823375	0					
ANR	823997	Callee	pj_end		823375	0					
ANR	823998	Identifier	pj_end		823375	0					
ANR	823999	ArgumentList	j		823375	1					
ANR	824000	Argument	j		823375	0					
ANR	824001	Identifier	j		823375	0					
ANR	824002	ExpressionStatement	r_anal_fcn_vars_cache_fini ( & cache )	2540:3:78517:78552	823375	41	True				
ANR	824003	CallExpression	r_anal_fcn_vars_cache_fini ( & cache )		823375	0					
ANR	824004	Callee	r_anal_fcn_vars_cache_fini		823375	0					
ANR	824005	Identifier	r_anal_fcn_vars_cache_fini		823375	0					
ANR	824006	ArgumentList	& cache		823375	1					
ANR	824007	Argument	& cache		823375	0					
ANR	824008	UnaryOperationExpression	& cache		823375	0					
ANR	824009	UnaryOperator	&		823375	0					
ANR	824010	Identifier	cache		823375	1					
ANR	824011	ExpressionStatement	pj_end ( j )	2542:3:78558:78568	823375	42	True				
ANR	824012	CallExpression	pj_end ( j )		823375	0					
ANR	824013	Callee	pj_end		823375	0					
ANR	824014	Identifier	pj_end		823375	0					
ANR	824015	ArgumentList	j		823375	1					
ANR	824016	Argument	j		823375	0					
ANR	824017	Identifier	j		823375	0					
ANR	824018	ExpressionStatement	"pj_ki ( j , ""count"" , nargs )"	2543:3:78573:78598	823375	43	True				
ANR	824019	CallExpression	"pj_ki ( j , ""count"" , nargs )"		823375	0					
ANR	824020	Callee	pj_ki		823375	0					
ANR	824021	Identifier	pj_ki		823375	0					
ANR	824022	ArgumentList	j		823375	1					
ANR	824023	Argument	j		823375	0					
ANR	824024	Identifier	j		823375	0					
ANR	824025	Argument	"""count"""		823375	1					
ANR	824026	PrimaryExpression	"""count"""		823375	0					
ANR	824027	Argument	nargs		823375	2					
ANR	824028	Identifier	nargs		823375	0					
ANR	824029	ExpressionStatement	pj_end ( j )	2544:3:78603:78613	823375	44	True				
ANR	824030	CallExpression	pj_end ( j )		823375	0					
ANR	824031	Callee	pj_end		823375	0					
ANR	824032	Identifier	pj_end		823375	0					
ANR	824033	ArgumentList	j		823375	1					
ANR	824034	Argument	j		823375	0					
ANR	824035	Identifier	j		823375	0					
ANR	824036	ExpressionStatement	pj_end ( j )	2546:2:78621:78631	823375	6	True				
ANR	824037	CallExpression	pj_end ( j )		823375	0					
ANR	824038	Callee	pj_end		823375	0					
ANR	824039	Identifier	pj_end		823375	0					
ANR	824040	ArgumentList	j		823375	1					
ANR	824041	Argument	j		823375	0					
ANR	824042	Identifier	j		823375	0					
ANR	824043	IdentifierDeclStatement	const char * s = pj_string ( j ) ;	2547:2:78635:78664	823375	7	True				
ANR	824044	IdentifierDecl	* s = pj_string ( j )		823375	0					
ANR	824045	IdentifierDeclType	const char *		823375	0					
ANR	824046	Identifier	s		823375	1					
ANR	824047	AssignmentExpression	* s = pj_string ( j )		823375	2		=			
ANR	824048	Identifier	s		823375	0					
ANR	824049	CallExpression	pj_string ( j )		823375	1					
ANR	824050	Callee	pj_string		823375	0					
ANR	824051	Identifier	pj_string		823375	0					
ANR	824052	ArgumentList	j		823375	1					
ANR	824053	Argument	j		823375	0					
ANR	824054	Identifier	j		823375	0					
ANR	824055	IfStatement	if ( s )		823375	8					
ANR	824056	Condition	s	2548:6:78672:78672	823375	0	True				
ANR	824057	Identifier	s		823375	0					
ANR	824058	CompoundStatement		103:9:2192:2192	823375	1					
ANR	824059	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , s )"	2549:3:78680:78705	823375	0	True				
ANR	824060	CallExpression	"r_cons_printf ( ""%s\\n"" , s )"		823375	0					
ANR	824061	Callee	r_cons_printf		823375	0					
ANR	824062	Identifier	r_cons_printf		823375	0					
ANR	824063	ArgumentList	"""%s\\n"""		823375	1					
ANR	824064	Argument	"""%s\\n"""		823375	0					
ANR	824065	PrimaryExpression	"""%s\\n"""		823375	0					
ANR	824066	Argument	s		823375	1					
ANR	824067	Identifier	s		823375	0					
ANR	824068	ExpressionStatement	pj_free ( j )	2551:2:78713:78724	823375	9	True				
ANR	824069	CallExpression	pj_free ( j )		823375	0					
ANR	824070	Callee	pj_free		823375	0					
ANR	824071	Identifier	pj_free		823375	0					
ANR	824072	ArgumentList	j		823375	1					
ANR	824073	Argument	j		823375	0					
ANR	824074	Identifier	j		823375	0					
ANR	824075	ElseStatement	else		823375	0					
ANR	824076	CompoundStatement		108:2:2255:2334	823375	0					
ANR	824077	IdentifierDeclStatement	"char * sig = r_anal_fcn_format_sig ( core -> anal , fcn , fcn_name , NULL , NULL , NULL ) ;"	2553:2:78738:78817	823375	0	True				
ANR	824078	IdentifierDecl	"* sig = r_anal_fcn_format_sig ( core -> anal , fcn , fcn_name , NULL , NULL , NULL )"		823375	0					
ANR	824079	IdentifierDeclType	char *		823375	0					
ANR	824080	Identifier	sig		823375	1					
ANR	824081	AssignmentExpression	"* sig = r_anal_fcn_format_sig ( core -> anal , fcn , fcn_name , NULL , NULL , NULL )"		823375	2		=			
ANR	824082	Identifier	sig		823375	0					
ANR	824083	CallExpression	"r_anal_fcn_format_sig ( core -> anal , fcn , fcn_name , NULL , NULL , NULL )"		823375	1					
ANR	824084	Callee	r_anal_fcn_format_sig		823375	0					
ANR	824085	Identifier	r_anal_fcn_format_sig		823375	0					
ANR	824086	ArgumentList	core -> anal		823375	1					
ANR	824087	Argument	core -> anal		823375	0					
ANR	824088	PtrMemberAccess	core -> anal		823375	0					
ANR	824089	Identifier	core		823375	0					
ANR	824090	Identifier	anal		823375	1					
ANR	824091	Argument	fcn		823375	1					
ANR	824092	Identifier	fcn		823375	0					
ANR	824093	Argument	fcn_name		823375	2					
ANR	824094	Identifier	fcn_name		823375	0					
ANR	824095	Argument	NULL		823375	3					
ANR	824096	Identifier	NULL		823375	0					
ANR	824097	Argument	NULL		823375	4					
ANR	824098	Identifier	NULL		823375	0					
ANR	824099	Argument	NULL		823375	5					
ANR	824100	Identifier	NULL		823375	0					
ANR	824101	IfStatement	if ( sig )		823375	1					
ANR	824102	Condition	sig	2554:6:78825:78827	823375	0	True				
ANR	824103	Identifier	sig		823375	0					
ANR	824104	CompoundStatement		109:11:2347:2347	823375	1					
ANR	824105	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , sig )"	2555:3:78835:78862	823375	0	True				
ANR	824106	CallExpression	"r_cons_printf ( ""%s\\n"" , sig )"		823375	0					
ANR	824107	Callee	r_cons_printf		823375	0					
ANR	824108	Identifier	r_cons_printf		823375	0					
ANR	824109	ArgumentList	"""%s\\n"""		823375	1					
ANR	824110	Argument	"""%s\\n"""		823375	0					
ANR	824111	PrimaryExpression	"""%s\\n"""		823375	0					
ANR	824112	Argument	sig		823375	1					
ANR	824113	Identifier	sig		823375	0					
ANR	824114	ExpressionStatement	free ( sig )	2556:3:78867:78877	823375	1	True				
ANR	824115	CallExpression	free ( sig )		823375	0					
ANR	824116	Callee	free		823375	0					
ANR	824117	Identifier	free		823375	0					
ANR	824118	ArgumentList	sig		823375	1					
ANR	824119	Argument	sig		823375	0					
ANR	824120	Identifier	sig		823375	0					
ANR	824121	ReturnType	static void		823375	1					
ANR	824122	Identifier	cmd_anal_fcn_sig		823375	2					
ANR	824123	ParameterList	"RCore * core , const char * input"		823375	3					
ANR	824124	Parameter	RCore * core	2446:29:76450:76460	823375	0	True				
ANR	824125	ParameterType	RCore *		823375	0					
ANR	824126	Identifier	core		823375	1					
ANR	824127	Parameter	const char * input	2446:42:76463:76479	823375	1	True				
ANR	824128	ParameterType	const char *		823375	0					
ANR	824129	Identifier	input		823375	1					
ANR	824130	CFGEntryNode	ENTRY		823375		True				
ANR	824131	CFGExitNode	EXIT		823375		True				
ANR	824132	CFGErrorNode	ERROR		823375		True				
ANR	824133	Symbol	* fcn		823375						
ANR	824134	Symbol	pj_string		823375						
ANR	824135	Symbol	fcn -> name		823375						
ANR	824136	Symbol	* input		823375						
ANR	824137	Symbol	strchr		823375						
ANR	824138	Symbol	core -> offset		823375						
ANR	824139	Symbol	type		823375						
ANR	824140	Symbol	var -> delta		823375						
ANR	824141	Symbol	r_str_trim_dup		823375						
ANR	824142	Symbol	fcn_type		823375						
ANR	824143	Symbol	arg -> name		823375						
ANR	824144	Symbol	r_str_get		823375						
ANR	824145	Symbol	arg -> orig_c_type		823375						
ANR	824146	Symbol	cache		823375						
ANR	824147	Symbol	NULL		823375						
ANR	824148	Symbol	var		823375						
ANR	824149	Symbol	iter		823375						
ANR	824150	Symbol	r_anal_fcn_find_name		823375						
ANR	824151	Symbol	list		823375						
ANR	824152	Symbol	var -> isarg		823375						
ANR	824153	Symbol	core		823375						
ANR	824154	Symbol	input		823375						
ANR	824155	Symbol	var -> name		823375						
ANR	824156	Symbol	resolve_fcn_name		823375						
ANR	824157	Symbol	r_anal_fcn_format_sig		823375						
ANR	824158	Symbol	* arg		823375						
ANR	824159	Symbol	* core		823375						
ANR	824160	Symbol	r_core_get_func_args		823375						
ANR	824161	Symbol	core -> anal -> sdb_types		823375						
ANR	824162	Symbol	var -> type		823375						
ANR	824163	Symbol	core -> anal		823375						
ANR	824164	Symbol	fcn		823375						
ANR	824165	Symbol	sig		823375						
ANR	824166	Symbol	* var		823375						
ANR	824167	Symbol	r_type_func_args_count		823375						
ANR	824168	Symbol	arg		823375						
ANR	824169	Symbol	json		823375						
ANR	824170	Symbol	fcn_name		823375						
ANR	824171	Symbol	key		823375						
ANR	824172	Symbol	* * core		823375						
ANR	824173	Symbol	& cache		823375						
ANR	824174	Symbol	j		823375						
ANR	824175	Symbol	p		823375						
ANR	824176	Symbol	nargs		823375						
ANR	824177	Symbol	r_type_func_ret		823375						
ANR	824178	Symbol	r_anal_get_fcn_in		823375						
ANR	824179	Symbol	* core -> anal		823375						
ANR	824180	Symbol	s		823375						
ANR	824181	Symbol	pj_new		823375						
ANR	824182	Function	__updateStats	2561:0:78889:79700							
ANR	824183	FunctionDef	"__updateStats (RCore * core , Sdb * db , ut64 addr , int statsMode)"		824182	0					
ANR	824184	CompoundStatement		2561:74:78963:79700	824182	0					
ANR	824185	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT | R_ANAL_OP_MASK_DISASM ) ;"	2562:1:78966:79075	824182	0	True				
ANR	824186	IdentifierDecl	"* op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT | R_ANAL_OP_MASK_DISASM )"		824182	0					
ANR	824187	IdentifierDeclType	RAnalOp *		824182	0					
ANR	824188	Identifier	op		824182	1					
ANR	824189	AssignmentExpression	"* op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT | R_ANAL_OP_MASK_DISASM )"		824182	2		=			
ANR	824190	Identifier	op		824182	0					
ANR	824191	CallExpression	"r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT | R_ANAL_OP_MASK_DISASM )"		824182	1					
ANR	824192	Callee	r_core_anal_op		824182	0					
ANR	824193	Identifier	r_core_anal_op		824182	0					
ANR	824194	ArgumentList	core		824182	1					
ANR	824195	Argument	core		824182	0					
ANR	824196	Identifier	core		824182	0					
ANR	824197	Argument	addr		824182	1					
ANR	824198	Identifier	addr		824182	0					
ANR	824199	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT | R_ANAL_OP_MASK_DISASM		824182	2					
ANR	824200	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT | R_ANAL_OP_MASK_DISASM		824182	0		|			
ANR	824201	Identifier	R_ANAL_OP_MASK_BASIC		824182	0					
ANR	824202	InclusiveOrExpression	R_ANAL_OP_MASK_HINT | R_ANAL_OP_MASK_DISASM		824182	1		|			
ANR	824203	Identifier	R_ANAL_OP_MASK_HINT		824182	0					
ANR	824204	Identifier	R_ANAL_OP_MASK_DISASM		824182	1					
ANR	824205	IfStatement	if ( ! op )		824182	1					
ANR	824206	Condition	! op	2563:5:79082:79084	824182	0	True				
ANR	824207	UnaryOperationExpression	! op		824182	0					
ANR	824208	UnaryOperator	!		824182	0					
ANR	824209	Identifier	op		824182	1					
ANR	824210	CompoundStatement		3:10:123:123	824182	1					
ANR	824211	ReturnStatement	return ;	2564:2:79091:79097	824182	0	True				
ANR	824212	IfStatement	if ( statsMode == 'f' )		824182	2					
ANR	824213	Condition	statsMode == 'f'	2566:5:79107:79122	824182	0	True				
ANR	824214	EqualityExpression	statsMode == 'f'		824182	0		==			
ANR	824215	Identifier	statsMode		824182	0					
ANR	824216	PrimaryExpression	'f'		824182	1					
ANR	824217	CompoundStatement		7:2:165:225	824182	1					
ANR	824218	IdentifierDeclStatement	const char * family = r_anal_op_family_to_string ( op -> family ) ;	2567:2:79129:79189	824182	0	True				
ANR	824219	IdentifierDecl	* family = r_anal_op_family_to_string ( op -> family )		824182	0					
ANR	824220	IdentifierDeclType	const char *		824182	0					
ANR	824221	Identifier	family		824182	1					
ANR	824222	AssignmentExpression	* family = r_anal_op_family_to_string ( op -> family )		824182	2		=			
ANR	824223	Identifier	family		824182	0					
ANR	824224	CallExpression	r_anal_op_family_to_string ( op -> family )		824182	1					
ANR	824225	Callee	r_anal_op_family_to_string		824182	0					
ANR	824226	Identifier	r_anal_op_family_to_string		824182	0					
ANR	824227	ArgumentList	op -> family		824182	1					
ANR	824228	Argument	op -> family		824182	0					
ANR	824229	PtrMemberAccess	op -> family		824182	0					
ANR	824230	Identifier	op		824182	0					
ANR	824231	Identifier	family		824182	1					
ANR	824232	ExpressionStatement	"sdb_num_inc ( db , family , 1 , 0 )"	2568:2:79193:79223	824182	1	True				
ANR	824233	CallExpression	"sdb_num_inc ( db , family , 1 , 0 )"		824182	0					
ANR	824234	Callee	sdb_num_inc		824182	0					
ANR	824235	Identifier	sdb_num_inc		824182	0					
ANR	824236	ArgumentList	db		824182	1					
ANR	824237	Argument	db		824182	0					
ANR	824238	Identifier	db		824182	0					
ANR	824239	Argument	family		824182	1					
ANR	824240	Identifier	family		824182	0					
ANR	824241	Argument	1		824182	2					
ANR	824242	PrimaryExpression	1		824182	0					
ANR	824243	Argument	0		824182	3					
ANR	824244	PrimaryExpression	0		824182	0					
ANR	824245	ElseStatement	else		824182	0					
ANR	824246	IfStatement	if ( statsMode == 'o' )		824182	0					
ANR	824247	Condition	statsMode == 'o'	2569:12:79237:79252	824182	0	True				
ANR	824248	EqualityExpression	statsMode == 'o'		824182	0		==			
ANR	824249	Identifier	statsMode		824182	0					
ANR	824250	PrimaryExpression	'o'		824182	1					
ANR	824251	CompoundStatement		10:2:295:348	824182	1					
ANR	824252	IdentifierDeclStatement	const char * type = r_anal_optype_to_string ( op -> type ) ;	2570:2:79259:79312	824182	0	True				
ANR	824253	IdentifierDecl	* type = r_anal_optype_to_string ( op -> type )		824182	0					
ANR	824254	IdentifierDeclType	const char *		824182	0					
ANR	824255	Identifier	type		824182	1					
ANR	824256	AssignmentExpression	* type = r_anal_optype_to_string ( op -> type )		824182	2		=			
ANR	824257	Identifier	type		824182	0					
ANR	824258	CallExpression	r_anal_optype_to_string ( op -> type )		824182	1					
ANR	824259	Callee	r_anal_optype_to_string		824182	0					
ANR	824260	Identifier	r_anal_optype_to_string		824182	0					
ANR	824261	ArgumentList	op -> type		824182	1					
ANR	824262	Argument	op -> type		824182	0					
ANR	824263	PtrMemberAccess	op -> type		824182	0					
ANR	824264	Identifier	op		824182	0					
ANR	824265	Identifier	type		824182	1					
ANR	824266	ExpressionStatement	"sdb_num_inc ( db , type , 1 , 0 )"	2571:2:79316:79344	824182	1	True				
ANR	824267	CallExpression	"sdb_num_inc ( db , type , 1 , 0 )"		824182	0					
ANR	824268	Callee	sdb_num_inc		824182	0					
ANR	824269	Identifier	sdb_num_inc		824182	0					
ANR	824270	ArgumentList	db		824182	1					
ANR	824271	Argument	db		824182	0					
ANR	824272	Identifier	db		824182	0					
ANR	824273	Argument	type		824182	1					
ANR	824274	Identifier	type		824182	0					
ANR	824275	Argument	1		824182	2					
ANR	824276	PrimaryExpression	1		824182	0					
ANR	824277	Argument	0		824182	3					
ANR	824278	PrimaryExpression	0		824182	0					
ANR	824279	ElseStatement	else		824182	0					
ANR	824280	CompoundStatement		14:2:432:461	824182	0					
ANR	824281	IdentifierDeclStatement	char * mnem = strdup ( op -> mnemonic ) ;	2573:2:79358:79392	824182	0	True				
ANR	824282	IdentifierDecl	* mnem = strdup ( op -> mnemonic )		824182	0					
ANR	824283	IdentifierDeclType	char *		824182	0					
ANR	824284	Identifier	mnem		824182	1					
ANR	824285	AssignmentExpression	* mnem = strdup ( op -> mnemonic )		824182	2		=			
ANR	824286	Identifier	mnem		824182	0					
ANR	824287	CallExpression	strdup ( op -> mnemonic )		824182	1					
ANR	824288	Callee	strdup		824182	0					
ANR	824289	Identifier	strdup		824182	0					
ANR	824290	ArgumentList	op -> mnemonic		824182	1					
ANR	824291	Argument	op -> mnemonic		824182	0					
ANR	824292	PtrMemberAccess	op -> mnemonic		824182	0					
ANR	824293	Identifier	op		824182	0					
ANR	824294	Identifier	mnemonic		824182	1					
ANR	824295	IdentifierDeclStatement	"char * sp = strstr ( mnem , "" "" ) ;"	2574:2:79396:79425	824182	1	True				
ANR	824296	IdentifierDecl	"* sp = strstr ( mnem , "" "" )"		824182	0					
ANR	824297	IdentifierDeclType	char *		824182	0					
ANR	824298	Identifier	sp		824182	1					
ANR	824299	AssignmentExpression	"* sp = strstr ( mnem , "" "" )"		824182	2		=			
ANR	824300	Identifier	sp		824182	0					
ANR	824301	CallExpression	"strstr ( mnem , "" "" )"		824182	1					
ANR	824302	Callee	strstr		824182	0					
ANR	824303	Identifier	strstr		824182	0					
ANR	824304	ArgumentList	mnem		824182	1					
ANR	824305	Argument	mnem		824182	0					
ANR	824306	Identifier	mnem		824182	0					
ANR	824307	Argument	""" """		824182	1					
ANR	824308	PrimaryExpression	""" """		824182	0					
ANR	824309	IfStatement	if ( sp )		824182	2					
ANR	824310	Condition	sp	2575:6:79433:79434	824182	0	True				
ANR	824311	Identifier	sp		824182	0					
ANR	824312	CompoundStatement		15:10:473:473	824182	1					
ANR	824313	ExpressionStatement	* sp = 0	2576:3:79442:79449	824182	0	True				
ANR	824314	AssignmentExpression	* sp = 0		824182	0		=			
ANR	824315	UnaryOperationExpression	* sp		824182	0					
ANR	824316	UnaryOperator	*		824182	0					
ANR	824317	Identifier	sp		824182	1					
ANR	824318	PrimaryExpression	0		824182	1					
ANR	824319	ExpressionStatement	"sdb_num_inc ( db , mnem , 1 , 0 )"	2579:2:79499:79527	824182	3	True				
ANR	824320	CallExpression	"sdb_num_inc ( db , mnem , 1 , 0 )"		824182	0					
ANR	824321	Callee	sdb_num_inc		824182	0					
ANR	824322	Identifier	sdb_num_inc		824182	0					
ANR	824323	ArgumentList	db		824182	1					
ANR	824324	Argument	db		824182	0					
ANR	824325	Identifier	db		824182	0					
ANR	824326	Argument	mnem		824182	1					
ANR	824327	Identifier	mnem		824182	0					
ANR	824328	Argument	1		824182	2					
ANR	824329	PrimaryExpression	1		824182	0					
ANR	824330	Argument	0		824182	3					
ANR	824331	PrimaryExpression	0		824182	0					
ANR	824332	ExpressionStatement	r_anal_op_free ( op )	2583:1:79622:79641	824182	3	True				
ANR	824333	CallExpression	r_anal_op_free ( op )		824182	0					
ANR	824334	Callee	r_anal_op_free		824182	0					
ANR	824335	Identifier	r_anal_op_free		824182	0					
ANR	824336	ArgumentList	op		824182	1					
ANR	824337	Argument	op		824182	0					
ANR	824338	Identifier	op		824182	0					
ANR	824339	ReturnType	static void		824182	1					
ANR	824340	Identifier	__updateStats		824182	2					
ANR	824341	ParameterList	"RCore * core , Sdb * db , ut64 addr , int statsMode"		824182	3					
ANR	824342	Parameter	RCore * core	2561:26:78915:78925	824182	0	True				
ANR	824343	ParameterType	RCore *		824182	0					
ANR	824344	Identifier	core		824182	1					
ANR	824345	Parameter	Sdb * db	2561:39:78928:78934	824182	1	True				
ANR	824346	ParameterType	Sdb *		824182	0					
ANR	824347	Identifier	db		824182	1					
ANR	824348	Parameter	ut64 addr	2561:48:78937:78945	824182	2	True				
ANR	824349	ParameterType	ut64		824182	0					
ANR	824350	Identifier	addr		824182	1					
ANR	824351	Parameter	int statsMode	2561:59:78948:78960	824182	3	True				
ANR	824352	ParameterType	int		824182	0					
ANR	824353	Identifier	statsMode		824182	1					
ANR	824354	CFGEntryNode	ENTRY		824182		True				
ANR	824355	CFGExitNode	EXIT		824182		True				
ANR	824356	Symbol	* sp		824182						
ANR	824357	Symbol	op		824182						
ANR	824358	Symbol	r_anal_op_family_to_string		824182						
ANR	824359	Symbol	* op		824182						
ANR	824360	Symbol	op -> mnemonic		824182						
ANR	824361	Symbol	op -> type		824182						
ANR	824362	Symbol	op -> family		824182						
ANR	824363	Symbol	r_anal_optype_to_string		824182						
ANR	824364	Symbol	r_core_anal_op		824182						
ANR	824365	Symbol	statsMode		824182						
ANR	824366	Symbol	type		824182						
ANR	824367	Symbol	R_ANAL_OP_MASK_BASIC		824182						
ANR	824368	Symbol	core		824182						
ANR	824369	Symbol	strstr		824182						
ANR	824370	Symbol	R_ANAL_OP_MASK_HINT		824182						
ANR	824371	Symbol	R_ANAL_OP_MASK_DISASM		824182						
ANR	824372	Symbol	mnem		824182						
ANR	824373	Symbol	strdup		824182						
ANR	824374	Symbol	addr		824182						
ANR	824375	Symbol	family		824182						
ANR	824376	Symbol	sp		824182						
ANR	824377	Symbol	db		824182						
ANR	824378	Function	__core_cmd_anal_fcn_stats	2588:0:79704:81995							
ANR	824379	FunctionDef	"__core_cmd_anal_fcn_stats (RCore * core , const char * input)"		824378	0					
ANR	824380	CompoundStatement		2588:71:79775:81995	824378	0					
ANR	824381	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 ) ;"	2589:1:79778:79847	824378	0	True				
ANR	824382	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		824378	0					
ANR	824383	IdentifierDeclType	RAnalFunction *		824378	0					
ANR	824384	Identifier	fcn		824378	1					
ANR	824385	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		824378	2		=			
ANR	824386	Identifier	fcn		824378	0					
ANR	824387	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		824378	1					
ANR	824388	Callee	r_anal_get_fcn_in		824378	0					
ANR	824389	Identifier	r_anal_get_fcn_in		824378	0					
ANR	824390	ArgumentList	core -> anal		824378	1					
ANR	824391	Argument	core -> anal		824378	0					
ANR	824392	PtrMemberAccess	core -> anal		824378	0					
ANR	824393	Identifier	core		824378	0					
ANR	824394	Identifier	anal		824378	1					
ANR	824395	Argument	core -> offset		824378	1					
ANR	824396	PtrMemberAccess	core -> offset		824378	0					
ANR	824397	Identifier	core		824378	0					
ANR	824398	Identifier	offset		824378	1					
ANR	824399	Argument	- 1		824378	2					
ANR	824400	UnaryOperationExpression	- 1		824378	0					
ANR	824401	UnaryOperator	-		824378	0					
ANR	824402	PrimaryExpression	1		824378	1					
ANR	824403	IfStatement	if ( ! fcn )		824378	1					
ANR	824404	Condition	! fcn	2590:5:79854:79857	824378	0	True				
ANR	824405	UnaryOperationExpression	! fcn		824378	0					
ANR	824406	UnaryOperator	!		824378	0					
ANR	824407	Identifier	fcn		824378	1					
ANR	824408	CompoundStatement		3:11:84:84	824378	1					
ANR	824409	Statement	eprintf	2591:2:79864:79870	824378	0	True				
ANR	824410	Statement	(	2591:10:79872:79872	824378	1	True				
ANR	824411	Statement	"""Cannot find any function at 0x%08"""	2591:11:79873:79907	824378	2	True				
ANR	824412	Statement	PFMT64x	2591:46:79908:79914	824378	3	True				
ANR	824413	Statement	"""\\n"""	2591:53:79915:79918	824378	4	True				
ANR	824414	Statement	","	2591:57:79919:79919	824378	5	True				
ANR	824415	Statement	core	2591:59:79921:79924	824378	6	True				
ANR	824416	Statement	->	2591:63:79925:79926	824378	7	True				
ANR	824417	Statement	offset	2591:65:79927:79932	824378	8	True				
ANR	824418	Statement	)	2591:71:79933:79933	824378	9	True				
ANR	824419	ExpressionStatement		2591:72:79934:79934	824378	10	True				
ANR	824420	ReturnStatement	return NULL ;	2592:2:79938:79949	824378	11	True				
ANR	824421	Identifier	NULL		824378	0					
ANR	824422	IdentifierDeclStatement	bool silentMode = false ;	2594:1:79955:79978	824378	2	True				
ANR	824423	IdentifierDecl	silentMode = false		824378	0					
ANR	824424	IdentifierDeclType	bool		824378	0					
ANR	824425	Identifier	silentMode		824378	1					
ANR	824426	AssignmentExpression	silentMode = false		824378	2		=			
ANR	824427	Identifier	false		824378	0					
ANR	824428	Identifier	false		824378	1					
ANR	824429	IdentifierDeclStatement	int statsMode = 0 ;	2595:1:79981:79998	824378	3	True				
ANR	824430	IdentifierDecl	statsMode = 0		824378	0					
ANR	824431	IdentifierDeclType	int		824378	0					
ANR	824432	Identifier	statsMode		824378	1					
ANR	824433	AssignmentExpression	statsMode = 0		824378	2		=			
ANR	824434	Identifier	statsMode		824378	0					
ANR	824435	PrimaryExpression	0		824378	1					
ANR	824436	IfStatement	if ( * input == '*' )		824378	4					
ANR	824437	Condition	* input == '*'	2596:5:80005:80017	824378	0	True				
ANR	824438	EqualityExpression	* input == '*'		824378	0		==			
ANR	824439	UnaryOperationExpression	* input		824378	0					
ANR	824440	UnaryOperator	*		824378	0					
ANR	824441	Identifier	input		824378	1					
ANR	824442	PrimaryExpression	'*'		824378	1					
ANR	824443	CompoundStatement		9:20:244:244	824378	1					
ANR	824444	ExpressionStatement	silentMode = true	2597:2:80024:80041	824378	0	True				
ANR	824445	AssignmentExpression	silentMode = true		824378	0		=			
ANR	824446	Identifier	silentMode		824378	0					
ANR	824447	Identifier	true		824378	1					
ANR	824448	ExpressionStatement	input ++	2598:2:80045:80052	824378	1	True				
ANR	824449	PostIncDecOperationExpression	input ++		824378	0					
ANR	824450	Identifier	input		824378	0					
ANR	824451	IncDec	++		824378	1					
ANR	824452	SwitchStatement	switch ( * input )		824378	5					
ANR	824453	Condition	* input	2600:9:80066:80071	824378	0	True				
ANR	824454	UnaryOperationExpression	* input		824378	0					
ANR	824455	UnaryOperator	*		824378	0					
ANR	824456	Identifier	input		824378	1					
ANR	824457	CompoundStatement		13:17:298:298	824378	1					
ANR	824458	Label	case '?' :	2601:1:80077:80085	824378	0	True				
ANR	824459	ExpressionStatement	"eprintf ( ""Usage: afis[ft]\\n"" )"	2602:2:80089:80118	824378	1	True				
ANR	824460	CallExpression	"eprintf ( ""Usage: afis[ft]\\n"" )"		824378	0					
ANR	824461	Callee	eprintf		824378	0					
ANR	824462	Identifier	eprintf		824378	0					
ANR	824463	ArgumentList	"""Usage: afis[ft]\\n"""		824378	1					
ANR	824464	Argument	"""Usage: afis[ft]\\n"""		824378	0					
ANR	824465	PrimaryExpression	"""Usage: afis[ft]\\n"""		824378	0					
ANR	824466	ExpressionStatement	"eprintf ( "" afis           enumerate unique opcodes in function\\n"" )"	2603:2:80122:80188	824378	2	True				
ANR	824467	CallExpression	"eprintf ( "" afis           enumerate unique opcodes in function\\n"" )"		824378	0					
ANR	824468	Callee	eprintf		824378	0					
ANR	824469	Identifier	eprintf		824378	0					
ANR	824470	ArgumentList	""" afis           enumerate unique opcodes in function\\n"""		824378	1					
ANR	824471	Argument	""" afis           enumerate unique opcodes in function\\n"""		824378	0					
ANR	824472	PrimaryExpression	""" afis           enumerate unique opcodes in function\\n"""		824378	0					
ANR	824473	ExpressionStatement	"eprintf ( "" afisa[fo]      enumerate all the meta of all the functions\\n"" )"	2604:2:80192:80265	824378	3	True				
ANR	824474	CallExpression	"eprintf ( "" afisa[fo]      enumerate all the meta of all the functions\\n"" )"		824378	0					
ANR	824475	Callee	eprintf		824378	0					
ANR	824476	Identifier	eprintf		824378	0					
ANR	824477	ArgumentList	""" afisa[fo]      enumerate all the meta of all the functions\\n"""		824378	1					
ANR	824478	Argument	""" afisa[fo]      enumerate all the meta of all the functions\\n"""		824378	0					
ANR	824479	PrimaryExpression	""" afisa[fo]      enumerate all the meta of all the functions\\n"""		824378	0					
ANR	824480	ExpressionStatement	"eprintf ( "" afisf          enumerate unique opcode families in function\\n"" )"	2605:2:80269:80343	824378	4	True				
ANR	824481	CallExpression	"eprintf ( "" afisf          enumerate unique opcode families in function\\n"" )"		824378	0					
ANR	824482	Callee	eprintf		824378	0					
ANR	824483	Identifier	eprintf		824378	0					
ANR	824484	ArgumentList	""" afisf          enumerate unique opcode families in function\\n"""		824378	1					
ANR	824485	Argument	""" afisf          enumerate unique opcode families in function\\n"""		824378	0					
ANR	824486	PrimaryExpression	""" afisf          enumerate unique opcode families in function\\n"""		824378	0					
ANR	824487	ExpressionStatement	"eprintf ( "" afiso          enumerate unique opcode types in function\\n"" )"	2606:2:80347:80418	824378	5	True				
ANR	824488	CallExpression	"eprintf ( "" afiso          enumerate unique opcode types in function\\n"" )"		824378	0					
ANR	824489	Callee	eprintf		824378	0					
ANR	824490	Identifier	eprintf		824378	0					
ANR	824491	ArgumentList	""" afiso          enumerate unique opcode types in function\\n"""		824378	1					
ANR	824492	Argument	""" afiso          enumerate unique opcode types in function\\n"""		824378	0					
ANR	824493	PrimaryExpression	""" afiso          enumerate unique opcode types in function\\n"""		824378	0					
ANR	824494	ExpressionStatement	"eprintf ( "" afist [query]  list in table format\\n"" )"	2607:2:80422:80472	824378	6	True				
ANR	824495	CallExpression	"eprintf ( "" afist [query]  list in table format\\n"" )"		824378	0					
ANR	824496	Callee	eprintf		824378	0					
ANR	824497	Identifier	eprintf		824378	0					
ANR	824498	ArgumentList	""" afist [query]  list in table format\\n"""		824378	1					
ANR	824499	Argument	""" afist [query]  list in table format\\n"""		824378	0					
ANR	824500	PrimaryExpression	""" afist [query]  list in table format\\n"""		824378	0					
ANR	824501	ReturnStatement	return NULL ;	2608:2:80476:80487	824378	7	True				
ANR	824502	Identifier	NULL		824378	0					
ANR	824503	Label	case 'f' :	2609:1:80490:80498	824378	8	True				
ANR	824504	Label	case 'o' :	2610:1:80501:80509	824378	9	True				
ANR	824505	ExpressionStatement	statsMode = * input	2611:2:80513:80531	824378	10	True				
ANR	824506	AssignmentExpression	statsMode = * input		824378	0		=			
ANR	824507	Identifier	statsMode		824378	0					
ANR	824508	UnaryOperationExpression	* input		824378	1					
ANR	824509	UnaryOperator	*		824378	0					
ANR	824510	Identifier	input		824378	1					
ANR	824511	ExpressionStatement	input ++	2612:2:80535:80542	824378	11	True				
ANR	824512	PostIncDecOperationExpression	input ++		824378	0					
ANR	824513	Identifier	input		824378	0					
ANR	824514	IncDec	++		824378	1					
ANR	824515	BreakStatement	break ;	2613:2:80546:80551	824378	12	True				
ANR	824516	IdentifierDeclStatement	Sdb * db = sdb_new0 ( ) ;	2616:1:80558:80579	824378	6	True				
ANR	824517	IdentifierDecl	* db = sdb_new0 ( )		824378	0					
ANR	824518	IdentifierDeclType	Sdb *		824378	0					
ANR	824519	Identifier	db		824378	1					
ANR	824520	AssignmentExpression	* db = sdb_new0 ( )		824378	2		=			
ANR	824521	Identifier	db		824378	0					
ANR	824522	CallExpression	sdb_new0 ( )		824378	1					
ANR	824523	Callee	sdb_new0		824378	0					
ANR	824524	Identifier	sdb_new0		824378	0					
ANR	824525	ArgumentList			824378	1					
ANR	824526	IdentifierDeclStatement	RAnalBlock * bb ;	2617:1:80582:80596	824378	7	True				
ANR	824527	IdentifierDecl	* bb		824378	0					
ANR	824528	IdentifierDeclType	RAnalBlock *		824378	0					
ANR	824529	Identifier	bb		824378	1					
ANR	824530	IdentifierDeclStatement	RListIter * iter ;	2618:1:80599:80614	824378	8	True				
ANR	824531	IdentifierDecl	* iter		824378	0					
ANR	824532	IdentifierDeclType	RListIter *		824378	0					
ANR	824533	Identifier	iter		824378	1					
ANR	824534	Statement	r_list_foreach	2619:1:80617:80630	824378	9	True				
ANR	824535	Statement	(	2619:16:80632:80632	824378	10	True				
ANR	824536	Statement	fcn	2619:17:80633:80635	824378	11	True				
ANR	824537	Statement	->	2619:20:80636:80637	824378	12	True				
ANR	824538	Statement	bbs	2619:22:80638:80640	824378	13	True				
ANR	824539	Statement	","	2619:25:80641:80641	824378	14	True				
ANR	824540	Statement	iter	2619:27:80643:80646	824378	15	True				
ANR	824541	Statement	","	2619:31:80647:80647	824378	16	True				
ANR	824542	Statement	bb	2619:33:80649:80650	824378	17	True				
ANR	824543	Statement	)	2619:35:80651:80651	824378	18	True				
ANR	824544	CompoundStatement		33:2:881:886	824378	19					
ANR	824545	IdentifierDeclStatement	int i ;	2620:2:80657:80662	824378	0	True				
ANR	824546	IdentifierDecl	i		824378	0					
ANR	824547	IdentifierDeclType	int		824378	0					
ANR	824548	Identifier	i		824378	1					
ANR	824549	ExpressionStatement	"__updateStats ( core , db , bb -> addr , statsMode )"	2621:2:80666:80711	824378	1	True				
ANR	824550	CallExpression	"__updateStats ( core , db , bb -> addr , statsMode )"		824378	0					
ANR	824551	Callee	__updateStats		824378	0					
ANR	824552	Identifier	__updateStats		824378	0					
ANR	824553	ArgumentList	core		824378	1					
ANR	824554	Argument	core		824378	0					
ANR	824555	Identifier	core		824378	0					
ANR	824556	Argument	db		824378	1					
ANR	824557	Identifier	db		824378	0					
ANR	824558	Argument	bb -> addr		824378	2					
ANR	824559	PtrMemberAccess	bb -> addr		824378	0					
ANR	824560	Identifier	bb		824378	0					
ANR	824561	Identifier	addr		824378	1					
ANR	824562	Argument	statsMode		824378	3					
ANR	824563	Identifier	statsMode		824378	0					
ANR	824564	ForStatement	for ( i = 0 ; i < bb -> op_pos_size ; i ++ )		824378	2					
ANR	824565	ForInit	i = 0 ;	2622:7:80720:80725	824378	0	True				
ANR	824566	AssignmentExpression	i = 0		824378	0		=			
ANR	824567	Identifier	i		824378	0					
ANR	824568	PrimaryExpression	0		824378	1					
ANR	824569	Condition	i < bb -> op_pos_size	2622:14:80727:80744	824378	1	True				
ANR	824570	RelationalExpression	i < bb -> op_pos_size		824378	0		<			
ANR	824571	Identifier	i		824378	0					
ANR	824572	PtrMemberAccess	bb -> op_pos_size		824378	1					
ANR	824573	Identifier	bb		824378	0					
ANR	824574	Identifier	op_pos_size		824378	1					
ANR	824575	PostIncDecOperationExpression	i ++	2622:34:80747:80749	824378	2	True				
ANR	824576	Identifier	i		824378	0					
ANR	824577	IncDec	++		824378	1					
ANR	824578	CompoundStatement		36:3:981:1008	824378	3					
ANR	824579	IdentifierDeclStatement	ut16 op_pos = bb -> op_pos [ i ] ;	2623:3:80757:80784	824378	0	True				
ANR	824580	IdentifierDecl	op_pos = bb -> op_pos [ i ]		824378	0					
ANR	824581	IdentifierDeclType	ut16		824378	0					
ANR	824582	Identifier	op_pos		824378	1					
ANR	824583	AssignmentExpression	op_pos = bb -> op_pos [ i ]		824378	2		=			
ANR	824584	Identifier	op_pos		824378	0					
ANR	824585	ArrayIndexing	bb -> op_pos [ i ]		824378	1					
ANR	824586	PtrMemberAccess	bb -> op_pos		824378	0					
ANR	824587	Identifier	bb		824378	0					
ANR	824588	Identifier	op_pos		824378	1					
ANR	824589	Identifier	i		824378	1					
ANR	824590	ExpressionStatement	"__updateStats ( core , db , bb -> addr + op_pos , statsMode )"	2624:3:80789:80843	824378	1	True				
ANR	824591	CallExpression	"__updateStats ( core , db , bb -> addr + op_pos , statsMode )"		824378	0					
ANR	824592	Callee	__updateStats		824378	0					
ANR	824593	Identifier	__updateStats		824378	0					
ANR	824594	ArgumentList	core		824378	1					
ANR	824595	Argument	core		824378	0					
ANR	824596	Identifier	core		824378	0					
ANR	824597	Argument	db		824378	1					
ANR	824598	Identifier	db		824378	0					
ANR	824599	Argument	bb -> addr + op_pos		824378	2					
ANR	824600	AdditiveExpression	bb -> addr + op_pos		824378	0		+			
ANR	824601	PtrMemberAccess	bb -> addr		824378	0					
ANR	824602	Identifier	bb		824378	0					
ANR	824603	Identifier	addr		824378	1					
ANR	824604	Identifier	op_pos		824378	1					
ANR	824605	Argument	statsMode		824378	3					
ANR	824606	Identifier	statsMode		824378	0					
ANR	824607	IfStatement	if ( silentMode )		824378	20					
ANR	824608	Condition	silentMode	2627:5:80857:80866	824378	0	True				
ANR	824609	Identifier	silentMode		824378	0					
ANR	824610	CompoundStatement		40:17:1093:1093	824378	1					
ANR	824611	ElseStatement	else		824378	0					
ANR	824612	IfStatement	if ( * input == 't' )		824378	0					
ANR	824613	Condition	* input == 't'	2629:12:80896:80908	824378	0	True				
ANR	824614	EqualityExpression	* input == 't'		824378	0		==			
ANR	824615	UnaryOperationExpression	* input		824378	0					
ANR	824616	UnaryOperator	*		824378	0					
ANR	824617	Identifier	input		824378	1					
ANR	824618	PrimaryExpression	't'		824378	1					
ANR	824619	CompoundStatement		63:2:1831:1862	824378	1					
ANR	824620	IdentifierDeclStatement	"SdbList * ls = sdb_foreach_list ( db , true ) ;"	2630:2:80915:80956	824378	0	True				
ANR	824621	IdentifierDecl	"* ls = sdb_foreach_list ( db , true )"		824378	0					
ANR	824622	IdentifierDeclType	SdbList *		824378	0					
ANR	824623	Identifier	ls		824378	1					
ANR	824624	AssignmentExpression	"* ls = sdb_foreach_list ( db , true )"		824378	2		=			
ANR	824625	Identifier	ls		824378	0					
ANR	824626	CallExpression	"sdb_foreach_list ( db , true )"		824378	1					
ANR	824627	Callee	sdb_foreach_list		824378	0					
ANR	824628	Identifier	sdb_foreach_list		824378	0					
ANR	824629	ArgumentList	db		824378	1					
ANR	824630	Argument	db		824378	0					
ANR	824631	Identifier	db		824378	0					
ANR	824632	Argument	true		824378	1					
ANR	824633	Identifier	true		824378	0					
ANR	824634	IdentifierDeclStatement	SdbListIter * it ;	2631:2:80960:80975	824378	1	True				
ANR	824635	IdentifierDecl	* it		824378	0					
ANR	824636	IdentifierDeclType	SdbListIter *		824378	0					
ANR	824637	Identifier	it		824378	1					
ANR	824638	IdentifierDeclStatement	RTable * t = r_table_new ( ) ;	2632:2:80979:81005	824378	2	True				
ANR	824639	IdentifierDecl	* t = r_table_new ( )		824378	0					
ANR	824640	IdentifierDeclType	RTable *		824378	0					
ANR	824641	Identifier	t		824378	1					
ANR	824642	AssignmentExpression	* t = r_table_new ( )		824378	2		=			
ANR	824643	Identifier	t		824378	0					
ANR	824644	CallExpression	r_table_new ( )		824378	1					
ANR	824645	Callee	r_table_new		824378	0					
ANR	824646	Identifier	r_table_new		824378	0					
ANR	824647	ArgumentList			824378	1					
ANR	824648	IdentifierDeclStatement	SdbKv * kv ;	2633:2:81009:81018	824378	3	True				
ANR	824649	IdentifierDecl	* kv		824378	0					
ANR	824650	IdentifierDeclType	SdbKv *		824378	0					
ANR	824651	Identifier	kv		824378	1					
ANR	824652	IdentifierDeclStatement	"RTableColumnType * typeString = r_table_type ( ""string"" ) ;"	2634:2:81022:81076	824378	4	True				
ANR	824653	IdentifierDecl	"* typeString = r_table_type ( ""string"" )"		824378	0					
ANR	824654	IdentifierDeclType	RTableColumnType *		824378	0					
ANR	824655	Identifier	typeString		824378	1					
ANR	824656	AssignmentExpression	"* typeString = r_table_type ( ""string"" )"		824378	2		=			
ANR	824657	Identifier	typeString		824378	0					
ANR	824658	CallExpression	"r_table_type ( ""string"" )"		824378	1					
ANR	824659	Callee	r_table_type		824378	0					
ANR	824660	Identifier	r_table_type		824378	0					
ANR	824661	ArgumentList	"""string"""		824378	1					
ANR	824662	Argument	"""string"""		824378	0					
ANR	824663	PrimaryExpression	"""string"""		824378	0					
ANR	824664	IdentifierDeclStatement	"RTableColumnType * typeNumber = r_table_type ( ""number"" ) ;"	2635:2:81080:81134	824378	5	True				
ANR	824665	IdentifierDecl	"* typeNumber = r_table_type ( ""number"" )"		824378	0					
ANR	824666	IdentifierDeclType	RTableColumnType *		824378	0					
ANR	824667	Identifier	typeNumber		824378	1					
ANR	824668	AssignmentExpression	"* typeNumber = r_table_type ( ""number"" )"		824378	2		=			
ANR	824669	Identifier	typeNumber		824378	0					
ANR	824670	CallExpression	"r_table_type ( ""number"" )"		824378	1					
ANR	824671	Callee	r_table_type		824378	0					
ANR	824672	Identifier	r_table_type		824378	0					
ANR	824673	ArgumentList	"""number"""		824378	1					
ANR	824674	Argument	"""number"""		824378	0					
ANR	824675	PrimaryExpression	"""number"""		824378	0					
ANR	824676	ExpressionStatement	"r_table_add_column ( t , typeString , ""name"" , 0 )"	2636:2:81138:81183	824378	6	True				
ANR	824677	CallExpression	"r_table_add_column ( t , typeString , ""name"" , 0 )"		824378	0					
ANR	824678	Callee	r_table_add_column		824378	0					
ANR	824679	Identifier	r_table_add_column		824378	0					
ANR	824680	ArgumentList	t		824378	1					
ANR	824681	Argument	t		824378	0					
ANR	824682	Identifier	t		824378	0					
ANR	824683	Argument	typeString		824378	1					
ANR	824684	Identifier	typeString		824378	0					
ANR	824685	Argument	"""name"""		824378	2					
ANR	824686	PrimaryExpression	"""name"""		824378	0					
ANR	824687	Argument	0		824378	3					
ANR	824688	PrimaryExpression	0		824378	0					
ANR	824689	Statement	ls_foreach	2637:2:81187:81196	824378	7	True				
ANR	824690	Statement	(	2637:13:81198:81198	824378	8	True				
ANR	824691	Statement	ls	2637:14:81199:81200	824378	9	True				
ANR	824692	Statement	","	2637:16:81201:81201	824378	10	True				
ANR	824693	Statement	it	2637:18:81203:81204	824378	11	True				
ANR	824694	Statement	","	2637:20:81205:81205	824378	12	True				
ANR	824695	Statement	kv	2637:22:81207:81208	824378	13	True				
ANR	824696	Statement	)	2637:24:81209:81209	824378	14	True				
ANR	824697	CompoundStatement		51:3:1440:1472	824378	15					
ANR	824698	IdentifierDeclStatement	const char * key = sdbkv_key ( kv ) ;	2638:3:81216:81248	824378	0	True				
ANR	824699	IdentifierDecl	* key = sdbkv_key ( kv )		824378	0					
ANR	824700	IdentifierDeclType	const char *		824378	0					
ANR	824701	Identifier	key		824378	1					
ANR	824702	AssignmentExpression	* key = sdbkv_key ( kv )		824378	2		=			
ANR	824703	Identifier	key		824378	0					
ANR	824704	CallExpression	sdbkv_key ( kv )		824378	1					
ANR	824705	Callee	sdbkv_key		824378	0					
ANR	824706	Identifier	sdbkv_key		824378	0					
ANR	824707	ArgumentList	kv		824378	1					
ANR	824708	Argument	kv		824378	0					
ANR	824709	Identifier	kv		824378	0					
ANR	824710	ExpressionStatement	"r_table_add_column ( t , typeNumber , key , 0 )"	2639:3:81253:81295	824378	1	True				
ANR	824711	CallExpression	"r_table_add_column ( t , typeNumber , key , 0 )"		824378	0					
ANR	824712	Callee	r_table_add_column		824378	0					
ANR	824713	Identifier	r_table_add_column		824378	0					
ANR	824714	ArgumentList	t		824378	1					
ANR	824715	Argument	t		824378	0					
ANR	824716	Identifier	t		824378	0					
ANR	824717	Argument	typeNumber		824378	1					
ANR	824718	Identifier	typeNumber		824378	0					
ANR	824719	Argument	key		824378	2					
ANR	824720	Identifier	key		824378	0					
ANR	824721	Argument	0		824378	3					
ANR	824722	PrimaryExpression	0		824378	0					
ANR	824723	IdentifierDeclStatement	RList * items = r_list_newf ( free ) ;	2641:2:81303:81336	824378	16	True				
ANR	824724	IdentifierDecl	* items = r_list_newf ( free )		824378	0					
ANR	824725	IdentifierDeclType	RList *		824378	0					
ANR	824726	Identifier	items		824378	1					
ANR	824727	AssignmentExpression	* items = r_list_newf ( free )		824378	2		=			
ANR	824728	Identifier	items		824378	0					
ANR	824729	CallExpression	r_list_newf ( free )		824378	1					
ANR	824730	Callee	r_list_newf		824378	0					
ANR	824731	Identifier	r_list_newf		824378	0					
ANR	824732	ArgumentList	free		824378	1					
ANR	824733	Argument	free		824378	0					
ANR	824734	Identifier	free		824378	0					
ANR	824735	ExpressionStatement	"r_list_append ( items , fcn -> name )"	2642:2:81340:81372	824378	17	True				
ANR	824736	CallExpression	"r_list_append ( items , fcn -> name )"		824378	0					
ANR	824737	Callee	r_list_append		824378	0					
ANR	824738	Identifier	r_list_append		824378	0					
ANR	824739	ArgumentList	items		824378	1					
ANR	824740	Argument	items		824378	0					
ANR	824741	Identifier	items		824378	0					
ANR	824742	Argument	fcn -> name		824378	1					
ANR	824743	PtrMemberAccess	fcn -> name		824378	0					
ANR	824744	Identifier	fcn		824378	0					
ANR	824745	Identifier	name		824378	1					
ANR	824746	Statement	ls_foreach	2643:2:81376:81385	824378	18	True				
ANR	824747	Statement	(	2643:13:81387:81387	824378	19	True				
ANR	824748	Statement	ls	2643:14:81388:81389	824378	20	True				
ANR	824749	Statement	","	2643:16:81390:81390	824378	21	True				
ANR	824750	Statement	it	2643:18:81392:81393	824378	22	True				
ANR	824751	Statement	","	2643:20:81394:81394	824378	23	True				
ANR	824752	Statement	kv	2643:22:81396:81397	824378	24	True				
ANR	824753	Statement	)	2643:24:81398:81398	824378	25	True				
ANR	824754	CompoundStatement		58:3:1670:1707	824378	26					
ANR	824755	IdentifierDeclStatement	const char * value = sdbkv_value ( kv ) ;	2644:3:81405:81441	824378	0	True				
ANR	824756	IdentifierDecl	* value = sdbkv_value ( kv )		824378	0					
ANR	824757	IdentifierDeclType	const char *		824378	0					
ANR	824758	Identifier	value		824378	1					
ANR	824759	AssignmentExpression	* value = sdbkv_value ( kv )		824378	2		=			
ANR	824760	Identifier	value		824378	0					
ANR	824761	CallExpression	sdbkv_value ( kv )		824378	1					
ANR	824762	Callee	sdbkv_value		824378	0					
ANR	824763	Identifier	sdbkv_value		824378	0					
ANR	824764	ArgumentList	kv		824378	1					
ANR	824765	Argument	kv		824378	0					
ANR	824766	Identifier	kv		824378	0					
ANR	824767	IdentifierDeclStatement	"int nv = ( int ) r_num_get ( NULL , value ) ;"	2645:3:81446:81483	824378	1	True				
ANR	824768	IdentifierDecl	"nv = ( int ) r_num_get ( NULL , value )"		824378	0					
ANR	824769	IdentifierDeclType	int		824378	0					
ANR	824770	Identifier	nv		824378	1					
ANR	824771	AssignmentExpression	"nv = ( int ) r_num_get ( NULL , value )"		824378	2		=			
ANR	824772	Identifier	nv		824378	0					
ANR	824773	CastExpression	"( int ) r_num_get ( NULL , value )"		824378	1					
ANR	824774	CastTarget	int		824378	0					
ANR	824775	CallExpression	"r_num_get ( NULL , value )"		824378	1					
ANR	824776	Callee	r_num_get		824378	0					
ANR	824777	Identifier	r_num_get		824378	0					
ANR	824778	ArgumentList	NULL		824378	1					
ANR	824779	Argument	NULL		824378	0					
ANR	824780	Identifier	NULL		824378	0					
ANR	824781	Argument	value		824378	1					
ANR	824782	Identifier	value		824378	0					
ANR	824783	ExpressionStatement	"r_list_append ( items , r_str_newf ( ""%d"" , nv ) )"	2646:3:81488:81532	824378	2	True				
ANR	824784	CallExpression	"r_list_append ( items , r_str_newf ( ""%d"" , nv ) )"		824378	0					
ANR	824785	Callee	r_list_append		824378	0					
ANR	824786	Identifier	r_list_append		824378	0					
ANR	824787	ArgumentList	items		824378	1					
ANR	824788	Argument	items		824378	0					
ANR	824789	Identifier	items		824378	0					
ANR	824790	Argument	"r_str_newf ( ""%d"" , nv )"		824378	1					
ANR	824791	CallExpression	"r_str_newf ( ""%d"" , nv )"		824378	0					
ANR	824792	Callee	r_str_newf		824378	0					
ANR	824793	Identifier	r_str_newf		824378	0					
ANR	824794	ArgumentList	"""%d"""		824378	1					
ANR	824795	Argument	"""%d"""		824378	0					
ANR	824796	PrimaryExpression	"""%d"""		824378	0					
ANR	824797	Argument	nv		824378	1					
ANR	824798	Identifier	nv		824378	0					
ANR	824799	ExpressionStatement	"r_table_add_row_list ( t , items )"	2648:2:81540:81571	824378	27	True				
ANR	824800	CallExpression	"r_table_add_row_list ( t , items )"		824378	0					
ANR	824801	Callee	r_table_add_row_list		824378	0					
ANR	824802	Identifier	r_table_add_row_list		824378	0					
ANR	824803	ArgumentList	t		824378	1					
ANR	824804	Argument	t		824378	0					
ANR	824805	Identifier	t		824378	0					
ANR	824806	Argument	items		824378	1					
ANR	824807	Identifier	items		824378	0					
ANR	824808	ExpressionStatement	"r_table_query ( t , input + 1 )"	2649:2:81575:81603	824378	28	True				
ANR	824809	CallExpression	"r_table_query ( t , input + 1 )"		824378	0					
ANR	824810	Callee	r_table_query		824378	0					
ANR	824811	Identifier	r_table_query		824378	0					
ANR	824812	ArgumentList	t		824378	1					
ANR	824813	Argument	t		824378	0					
ANR	824814	Identifier	t		824378	0					
ANR	824815	Argument	input + 1		824378	1					
ANR	824816	AdditiveExpression	input + 1		824378	0		+			
ANR	824817	Identifier	input		824378	0					
ANR	824818	PrimaryExpression	1		824378	1					
ANR	824819	IdentifierDeclStatement	char * ts = r_table_tostring ( t ) ;	2650:2:81607:81638	824378	29	True				
ANR	824820	IdentifierDecl	* ts = r_table_tostring ( t )		824378	0					
ANR	824821	IdentifierDeclType	char *		824378	0					
ANR	824822	Identifier	ts		824378	1					
ANR	824823	AssignmentExpression	* ts = r_table_tostring ( t )		824378	2		=			
ANR	824824	Identifier	ts		824378	0					
ANR	824825	CallExpression	r_table_tostring ( t )		824378	1					
ANR	824826	Callee	r_table_tostring		824378	0					
ANR	824827	Identifier	r_table_tostring		824378	0					
ANR	824828	ArgumentList	t		824378	1					
ANR	824829	Argument	t		824378	0					
ANR	824830	Identifier	t		824378	0					
ANR	824831	ExpressionStatement	"r_cons_printf ( ""%s"" , ts )"	2651:2:81642:81666	824378	30	True				
ANR	824832	CallExpression	"r_cons_printf ( ""%s"" , ts )"		824378	0					
ANR	824833	Callee	r_cons_printf		824378	0					
ANR	824834	Identifier	r_cons_printf		824378	0					
ANR	824835	ArgumentList	"""%s"""		824378	1					
ANR	824836	Argument	"""%s"""		824378	0					
ANR	824837	PrimaryExpression	"""%s"""		824378	0					
ANR	824838	Argument	ts		824378	1					
ANR	824839	Identifier	ts		824378	0					
ANR	824840	ExpressionStatement	free ( ts )	2652:2:81670:81679	824378	31	True				
ANR	824841	CallExpression	free ( ts )		824378	0					
ANR	824842	Callee	free		824378	0					
ANR	824843	Identifier	free		824378	0					
ANR	824844	ArgumentList	ts		824378	1					
ANR	824845	Argument	ts		824378	0					
ANR	824846	Identifier	ts		824378	0					
ANR	824847	ExpressionStatement	r_table_free ( t )	2653:2:81683:81699	824378	32	True				
ANR	824848	CallExpression	r_table_free ( t )		824378	0					
ANR	824849	Callee	r_table_free		824378	0					
ANR	824850	Identifier	r_table_free		824378	0					
ANR	824851	ArgumentList	t		824378	1					
ANR	824852	Argument	t		824378	0					
ANR	824853	Identifier	t		824378	0					
ANR	824854	ElseStatement	else		824378	0					
ANR	824855	CompoundStatement		70:2:2001:2010	824378	0					
ANR	824856	IdentifierDeclStatement	"SdbList * ls = sdb_foreach_list ( db , true ) ;"	2655:2:81713:81754	824378	0	True				
ANR	824857	IdentifierDecl	"* ls = sdb_foreach_list ( db , true )"		824378	0					
ANR	824858	IdentifierDeclType	SdbList *		824378	0					
ANR	824859	Identifier	ls		824378	1					
ANR	824860	AssignmentExpression	"* ls = sdb_foreach_list ( db , true )"		824378	2		=			
ANR	824861	Identifier	ls		824378	0					
ANR	824862	CallExpression	"sdb_foreach_list ( db , true )"		824378	1					
ANR	824863	Callee	sdb_foreach_list		824378	0					
ANR	824864	Identifier	sdb_foreach_list		824378	0					
ANR	824865	ArgumentList	db		824378	1					
ANR	824866	Argument	db		824378	0					
ANR	824867	Identifier	db		824378	0					
ANR	824868	Argument	true		824378	1					
ANR	824869	Identifier	true		824378	0					
ANR	824870	IdentifierDeclStatement	SdbListIter * it ;	2656:2:81758:81773	824378	1	True				
ANR	824871	IdentifierDecl	* it		824378	0					
ANR	824872	IdentifierDeclType	SdbListIter *		824378	0					
ANR	824873	Identifier	it		824378	1					
ANR	824874	IdentifierDeclStatement	SdbKv * kv ;	2657:2:81777:81786	824378	2	True				
ANR	824875	IdentifierDecl	* kv		824378	0					
ANR	824876	IdentifierDeclType	SdbKv *		824378	0					
ANR	824877	Identifier	kv		824378	1					
ANR	824878	Statement	ls_foreach	2658:2:81790:81799	824378	3	True				
ANR	824879	Statement	(	2658:13:81801:81801	824378	4	True				
ANR	824880	Statement	ls	2658:14:81802:81803	824378	5	True				
ANR	824881	Statement	","	2658:16:81804:81804	824378	6	True				
ANR	824882	Statement	it	2658:18:81806:81807	824378	7	True				
ANR	824883	Statement	","	2658:20:81808:81808	824378	8	True				
ANR	824884	Statement	kv	2658:22:81810:81811	824378	9	True				
ANR	824885	Statement	)	2658:24:81812:81812	824378	10	True				
ANR	824886	CompoundStatement		73:3:2079:2114	824378	11					
ANR	824887	IdentifierDeclStatement	const char * key = sdbkv_key ( kv ) ;	2659:3:81819:81850	824378	0	True				
ANR	824888	IdentifierDecl	* key = sdbkv_key ( kv )		824378	0					
ANR	824889	IdentifierDeclType	const char *		824378	0					
ANR	824890	Identifier	key		824378	1					
ANR	824891	AssignmentExpression	* key = sdbkv_key ( kv )		824378	2		=			
ANR	824892	Identifier	key		824378	0					
ANR	824893	CallExpression	sdbkv_key ( kv )		824378	1					
ANR	824894	Callee	sdbkv_key		824378	0					
ANR	824895	Identifier	sdbkv_key		824378	0					
ANR	824896	ArgumentList	kv		824378	1					
ANR	824897	Argument	kv		824378	0					
ANR	824898	Identifier	kv		824378	0					
ANR	824899	IdentifierDeclStatement	const char * value = sdbkv_value ( kv ) ;	2660:3:81855:81890	824378	1	True				
ANR	824900	IdentifierDecl	* value = sdbkv_value ( kv )		824378	0					
ANR	824901	IdentifierDeclType	const char *		824378	0					
ANR	824902	Identifier	value		824378	1					
ANR	824903	AssignmentExpression	* value = sdbkv_value ( kv )		824378	2		=			
ANR	824904	Identifier	value		824378	0					
ANR	824905	CallExpression	sdbkv_value ( kv )		824378	1					
ANR	824906	Callee	sdbkv_value		824378	0					
ANR	824907	Identifier	sdbkv_value		824378	0					
ANR	824908	ArgumentList	kv		824378	1					
ANR	824909	Argument	kv		824378	0					
ANR	824910	Identifier	kv		824378	0					
ANR	824911	ExpressionStatement	"r_cons_printf ( ""%4d %s\\n"" , ( int ) r_num_get ( NULL , value ) , key )"	2661:3:81895:81956	824378	2	True				
ANR	824912	CallExpression	"r_cons_printf ( ""%4d %s\\n"" , ( int ) r_num_get ( NULL , value ) , key )"		824378	0					
ANR	824913	Callee	r_cons_printf		824378	0					
ANR	824914	Identifier	r_cons_printf		824378	0					
ANR	824915	ArgumentList	"""%4d %s\\n"""		824378	1					
ANR	824916	Argument	"""%4d %s\\n"""		824378	0					
ANR	824917	PrimaryExpression	"""%4d %s\\n"""		824378	0					
ANR	824918	Argument	"( int ) r_num_get ( NULL , value )"		824378	1					
ANR	824919	CastExpression	"( int ) r_num_get ( NULL , value )"		824378	0					
ANR	824920	CastTarget	int		824378	0					
ANR	824921	CallExpression	"r_num_get ( NULL , value )"		824378	1					
ANR	824922	Callee	r_num_get		824378	0					
ANR	824923	Identifier	r_num_get		824378	0					
ANR	824924	ArgumentList	NULL		824378	1					
ANR	824925	Argument	NULL		824378	0					
ANR	824926	Identifier	NULL		824378	0					
ANR	824927	Argument	value		824378	1					
ANR	824928	Identifier	value		824378	0					
ANR	824929	Argument	key		824378	2					
ANR	824930	Identifier	key		824378	0					
ANR	824931	ReturnStatement	return db ;	2664:1:81966:81975	824378	21	True				
ANR	824932	Identifier	db		824378	0					
ANR	824933	ReturnType	static Sdb *		824378	1					
ANR	824934	Identifier	__core_cmd_anal_fcn_stats		824378	2					
ANR	824935	ParameterList	"RCore * core , const char * input"		824378	3					
ANR	824936	Parameter	RCore * core	2588:39:79743:79753	824378	0	True				
ANR	824937	ParameterType	RCore *		824378	0					
ANR	824938	Identifier	core		824378	1					
ANR	824939	Parameter	const char * input	2588:52:79756:79772	824378	1	True				
ANR	824940	ParameterType	const char *		824378	0					
ANR	824941	Identifier	input		824378	1					
ANR	824942	CFGEntryNode	ENTRY		824378		True				
ANR	824943	CFGExitNode	EXIT		824378		True				
ANR	824944	Symbol	* bb -> op_pos		824378						
ANR	824945	Symbol	* fcn		824378						
ANR	824946	Symbol	fcn -> name		824378						
ANR	824947	Symbol	ls		824378						
ANR	824948	Symbol	* input		824378						
ANR	824949	Symbol	core -> offset		824378						
ANR	824950	Symbol	bb -> addr		824378						
ANR	824951	Symbol	statsMode		824378						
ANR	824952	Symbol	typeNumber		824378						
ANR	824953	Symbol	r_table_tostring		824378						
ANR	824954	Symbol	r_num_get		824378						
ANR	824955	Symbol	NULL		824378						
ANR	824956	Symbol	r_list_newf		824378						
ANR	824957	Symbol	iter		824378						
ANR	824958	Symbol	it		824378						
ANR	824959	Symbol	* * bb		824378						
ANR	824960	Symbol	core		824378						
ANR	824961	Symbol	input		824378						
ANR	824962	Symbol	bb -> op_pos		824378						
ANR	824963	Symbol	r_table_new		824378						
ANR	824964	Symbol	r_table_type		824378						
ANR	824965	Symbol	op_pos		824378						
ANR	824966	Symbol	silentMode		824378						
ANR	824967	Symbol	true		824378						
ANR	824968	Symbol	items		824378						
ANR	824969	Symbol	bb		824378						
ANR	824970	Symbol	* core		824378						
ANR	824971	Symbol	nv		824378						
ANR	824972	Symbol	r_str_newf		824378						
ANR	824973	Symbol	core -> anal		824378						
ANR	824974	Symbol	fcn		824378						
ANR	824975	Symbol	typeString		824378						
ANR	824976	Symbol	free		824378						
ANR	824977	Symbol	value		824378						
ANR	824978	Symbol	key		824378						
ANR	824979	Symbol	sdb_new0		824378						
ANR	824980	Symbol	sdbkv_key		824378						
ANR	824981	Symbol	* bb		824378						
ANR	824982	Symbol	false		824378						
ANR	824983	Symbol	i		824378						
ANR	824984	Symbol	sdb_foreach_list		824378						
ANR	824985	Symbol	kv		824378						
ANR	824986	Symbol	sdbkv_value		824378						
ANR	824987	Symbol	r_anal_get_fcn_in		824378						
ANR	824988	Symbol	* i		824378						
ANR	824989	Symbol	t		824378						
ANR	824990	Symbol	bb -> op_pos_size		824378						
ANR	824991	Symbol	db		824378						
ANR	824992	Symbol	ts		824378						
ANR	824993	Function	__core_cmd_anal_fcn_allstats	2668:0:81998:84575							
ANR	824994	FunctionDef	"__core_cmd_anal_fcn_allstats (RCore * core , const char * input)"		824993	0					
ANR	824995	CompoundStatement		2668:73:82071:84575	824993	0					
ANR	824996	IdentifierDeclStatement	RAnalFunction * fcn ;	2669:1:82074:82092	824993	0	True				
ANR	824997	IdentifierDecl	* fcn		824993	0					
ANR	824998	IdentifierDeclType	RAnalFunction *		824993	0					
ANR	824999	Identifier	fcn		824993	1					
ANR	825000	IdentifierDeclStatement	SdbKv * kv ;	2670:1:82095:82104	824993	1	True				
ANR	825001	IdentifierDecl	* kv		824993	0					
ANR	825002	IdentifierDeclType	SdbKv *		824993	0					
ANR	825003	Identifier	kv		824993	1					
ANR	825004	IdentifierDeclStatement	RListIter * iter ;	2671:1:82107:82122	824993	2	True				
ANR	825005	IdentifierDecl	* iter		824993	0					
ANR	825006	IdentifierDeclType	RListIter *		824993	0					
ANR	825007	Identifier	iter		824993	1					
ANR	825008	IdentifierDeclStatement	SdbListIter * it ;	2672:1:82125:82140	824993	3	True				
ANR	825009	IdentifierDecl	* it		824993	0					
ANR	825010	IdentifierDeclType	SdbListIter *		824993	0					
ANR	825011	Identifier	it		824993	1					
ANR	825012	IdentifierDeclStatement	RList * dbs = r_list_newf ( ( RListFree ) sdb_free ) ;	2673:1:82143:82189	824993	4	True				
ANR	825013	IdentifierDecl	* dbs = r_list_newf ( ( RListFree ) sdb_free )		824993	0					
ANR	825014	IdentifierDeclType	RList *		824993	0					
ANR	825015	Identifier	dbs		824993	1					
ANR	825016	AssignmentExpression	* dbs = r_list_newf ( ( RListFree ) sdb_free )		824993	2		=			
ANR	825017	Identifier	dbs		824993	0					
ANR	825018	CallExpression	r_list_newf ( ( RListFree ) sdb_free )		824993	1					
ANR	825019	Callee	r_list_newf		824993	0					
ANR	825020	Identifier	r_list_newf		824993	0					
ANR	825021	ArgumentList	( RListFree ) sdb_free		824993	1					
ANR	825022	Argument	( RListFree ) sdb_free		824993	0					
ANR	825023	CastExpression	( RListFree ) sdb_free		824993	0					
ANR	825024	CastTarget	RListFree		824993	0					
ANR	825025	Identifier	sdb_free		824993	1					
ANR	825026	IdentifierDeclStatement	Sdb * d = sdb_new0 ( ) ;	2674:1:82192:82212	824993	5	True				
ANR	825027	IdentifierDecl	* d = sdb_new0 ( )		824993	0					
ANR	825028	IdentifierDeclType	Sdb *		824993	0					
ANR	825029	Identifier	d		824993	1					
ANR	825030	AssignmentExpression	* d = sdb_new0 ( )		824993	2		=			
ANR	825031	Identifier	d		824993	0					
ANR	825032	CallExpression	sdb_new0 ( )		824993	1					
ANR	825033	Callee	sdb_new0		824993	0					
ANR	825034	Identifier	sdb_new0		824993	0					
ANR	825035	ArgumentList			824993	1					
ANR	825036	IdentifierDeclStatement	ut64 oseek = core -> offset ;	2675:1:82215:82240	824993	6	True				
ANR	825037	IdentifierDecl	oseek = core -> offset		824993	0					
ANR	825038	IdentifierDeclType	ut64		824993	0					
ANR	825039	Identifier	oseek		824993	1					
ANR	825040	AssignmentExpression	oseek = core -> offset		824993	2		=			
ANR	825041	Identifier	oseek		824993	0					
ANR	825042	PtrMemberAccess	core -> offset		824993	1					
ANR	825043	Identifier	core		824993	0					
ANR	825044	Identifier	offset		824993	1					
ANR	825045	IdentifierDeclStatement	"bool isJson = strstr ( input , ""j"" ) != NULL ;"	2676:1:82243:82284	824993	7	True				
ANR	825046	IdentifierDecl	"isJson = strstr ( input , ""j"" ) != NULL"		824993	0					
ANR	825047	IdentifierDeclType	bool		824993	0					
ANR	825048	Identifier	isJson		824993	1					
ANR	825049	AssignmentExpression	"isJson = strstr ( input , ""j"" ) != NULL"		824993	2		=			
ANR	825050	Identifier	isJson		824993	0					
ANR	825051	EqualityExpression	"strstr ( input , ""j"" ) != NULL"		824993	1		!=			
ANR	825052	CallExpression	"strstr ( input , ""j"" )"		824993	0					
ANR	825053	Callee	strstr		824993	0					
ANR	825054	Identifier	strstr		824993	0					
ANR	825055	ArgumentList	input		824993	1					
ANR	825056	Argument	input		824993	0					
ANR	825057	Identifier	input		824993	0					
ANR	825058	Argument	"""j"""		824993	1					
ANR	825059	PrimaryExpression	"""j"""		824993	0					
ANR	825060	Identifier	NULL		824993	1					
ANR	825061	IdentifierDeclStatement	"char * inp = r_str_newf ( ""*%s"" , input ) ;"	2678:1:82289:82326	824993	8	True				
ANR	825062	IdentifierDecl	"* inp = r_str_newf ( ""*%s"" , input )"		824993	0					
ANR	825063	IdentifierDeclType	char *		824993	0					
ANR	825064	Identifier	inp		824993	1					
ANR	825065	AssignmentExpression	"* inp = r_str_newf ( ""*%s"" , input )"		824993	2		=			
ANR	825066	Identifier	inp		824993	0					
ANR	825067	CallExpression	"r_str_newf ( ""*%s"" , input )"		824993	1					
ANR	825068	Callee	r_str_newf		824993	0					
ANR	825069	Identifier	r_str_newf		824993	0					
ANR	825070	ArgumentList	"""*%s"""		824993	1					
ANR	825071	Argument	"""*%s"""		824993	0					
ANR	825072	PrimaryExpression	"""*%s"""		824993	0					
ANR	825073	Argument	input		824993	1					
ANR	825074	Identifier	input		824993	0					
ANR	825075	Statement	r_list_foreach	2679:1:82329:82342	824993	9	True				
ANR	825076	Statement	(	2679:16:82344:82344	824993	10	True				
ANR	825077	Statement	core	2679:17:82345:82348	824993	11	True				
ANR	825078	Statement	->	2679:21:82349:82350	824993	12	True				
ANR	825079	Statement	anal	2679:23:82351:82354	824993	13	True				
ANR	825080	Statement	->	2679:27:82355:82356	824993	14	True				
ANR	825081	Statement	fcns	2679:29:82357:82360	824993	15	True				
ANR	825082	Statement	","	2679:33:82361:82361	824993	16	True				
ANR	825083	Statement	iter	2679:35:82363:82366	824993	17	True				
ANR	825084	Statement	","	2679:39:82367:82367	824993	18	True				
ANR	825085	Statement	fcn	2679:41:82369:82371	824993	19	True				
ANR	825086	Statement	)	2679:44:82372:82372	824993	20	True				
ANR	825087	CompoundStatement		14:2:345:392	824993	21					
ANR	825088	ExpressionStatement	"r_core_seek ( core , fcn -> addr , true )"	2680:2:82378:82413	824993	0	True				
ANR	825089	CallExpression	"r_core_seek ( core , fcn -> addr , true )"		824993	0					
ANR	825090	Callee	r_core_seek		824993	0					
ANR	825091	Identifier	r_core_seek		824993	0					
ANR	825092	ArgumentList	core		824993	1					
ANR	825093	Argument	core		824993	0					
ANR	825094	Identifier	core		824993	0					
ANR	825095	Argument	fcn -> addr		824993	1					
ANR	825096	PtrMemberAccess	fcn -> addr		824993	0					
ANR	825097	Identifier	fcn		824993	0					
ANR	825098	Identifier	addr		824993	1					
ANR	825099	Argument	true		824993	2					
ANR	825100	Identifier	true		824993	0					
ANR	825101	IdentifierDeclStatement	"Sdb * db = __core_cmd_anal_fcn_stats ( core , inp ) ;"	2681:2:82417:82464	824993	1	True				
ANR	825102	IdentifierDecl	"* db = __core_cmd_anal_fcn_stats ( core , inp )"		824993	0					
ANR	825103	IdentifierDeclType	Sdb *		824993	0					
ANR	825104	Identifier	db		824993	1					
ANR	825105	AssignmentExpression	"* db = __core_cmd_anal_fcn_stats ( core , inp )"		824993	2		=			
ANR	825106	Identifier	db		824993	0					
ANR	825107	CallExpression	"__core_cmd_anal_fcn_stats ( core , inp )"		824993	1					
ANR	825108	Callee	__core_cmd_anal_fcn_stats		824993	0					
ANR	825109	Identifier	__core_cmd_anal_fcn_stats		824993	0					
ANR	825110	ArgumentList	core		824993	1					
ANR	825111	Argument	core		824993	0					
ANR	825112	Identifier	core		824993	0					
ANR	825113	Argument	inp		824993	1					
ANR	825114	Identifier	inp		824993	0					
ANR	825115	ExpressionStatement	"sdb_num_set ( db , "".addr"" , fcn -> addr , 0 )"	2682:16:82482:82521	824993	2	True				
ANR	825116	CallExpression	"sdb_num_set ( db , "".addr"" , fcn -> addr , 0 )"		824993	0					
ANR	825117	Callee	sdb_num_set		824993	0					
ANR	825118	Identifier	sdb_num_set		824993	0					
ANR	825119	ArgumentList	db		824993	1					
ANR	825120	Argument	db		824993	0					
ANR	825121	Identifier	db		824993	0					
ANR	825122	Argument	""".addr"""		824993	1					
ANR	825123	PrimaryExpression	""".addr"""		824993	0					
ANR	825124	Argument	fcn -> addr		824993	2					
ANR	825125	PtrMemberAccess	fcn -> addr		824993	0					
ANR	825126	Identifier	fcn		824993	0					
ANR	825127	Identifier	addr		824993	1					
ANR	825128	Argument	0		824993	3					
ANR	825129	PrimaryExpression	0		824993	0					
ANR	825130	ExpressionStatement	"r_list_append ( dbs , db )"	2683:2:82525:82548	824993	3	True				
ANR	825131	CallExpression	"r_list_append ( dbs , db )"		824993	0					
ANR	825132	Callee	r_list_append		824993	0					
ANR	825133	Identifier	r_list_append		824993	0					
ANR	825134	ArgumentList	dbs		824993	1					
ANR	825135	Argument	dbs		824993	0					
ANR	825136	Identifier	dbs		824993	0					
ANR	825137	Argument	db		824993	1					
ANR	825138	Identifier	db		824993	0					
ANR	825139	ExpressionStatement	free ( inp )	2685:1:82554:82564	824993	22	True				
ANR	825140	CallExpression	free ( inp )		824993	0					
ANR	825141	Callee	free		824993	0					
ANR	825142	Identifier	free		824993	0					
ANR	825143	ArgumentList	inp		824993	1					
ANR	825144	Argument	inp		824993	0					
ANR	825145	Identifier	inp		824993	0					
ANR	825146	IdentifierDeclStatement	Sdb * db ;	2686:1:82567:82574	824993	23	True				
ANR	825147	IdentifierDecl	* db		824993	0					
ANR	825148	IdentifierDeclType	Sdb *		824993	0					
ANR	825149	Identifier	db		824993	1					
ANR	825150	Statement	r_list_foreach	2687:1:82577:82590	824993	24	True				
ANR	825151	Statement	(	2687:16:82592:82592	824993	25	True				
ANR	825152	Statement	dbs	2687:17:82593:82595	824993	26	True				
ANR	825153	Statement	","	2687:20:82596:82596	824993	27	True				
ANR	825154	Statement	iter	2687:22:82598:82601	824993	28	True				
ANR	825155	Statement	","	2687:26:82602:82602	824993	29	True				
ANR	825156	Statement	db	2687:28:82604:82605	824993	30	True				
ANR	825157	Statement	)	2687:30:82606:82606	824993	31	True				
ANR	825158	CompoundStatement		21:2:540:581	824993	32					
ANR	825159	IdentifierDeclStatement	"SdbList * ls = sdb_foreach_list ( db , true ) ;"	2688:2:82612:82653	824993	0	True				
ANR	825160	IdentifierDecl	"* ls = sdb_foreach_list ( db , true )"		824993	0					
ANR	825161	IdentifierDeclType	SdbList *		824993	0					
ANR	825162	Identifier	ls		824993	1					
ANR	825163	AssignmentExpression	"* ls = sdb_foreach_list ( db , true )"		824993	2		=			
ANR	825164	Identifier	ls		824993	0					
ANR	825165	CallExpression	"sdb_foreach_list ( db , true )"		824993	1					
ANR	825166	Callee	sdb_foreach_list		824993	0					
ANR	825167	Identifier	sdb_foreach_list		824993	0					
ANR	825168	ArgumentList	db		824993	1					
ANR	825169	Argument	db		824993	0					
ANR	825170	Identifier	db		824993	0					
ANR	825171	Argument	true		824993	1					
ANR	825172	Identifier	true		824993	0					
ANR	825173	Statement	ls_foreach	2689:2:82657:82666	824993	1	True				
ANR	825174	Statement	(	2689:13:82668:82668	824993	2	True				
ANR	825175	Statement	ls	2689:14:82669:82670	824993	3	True				
ANR	825176	Statement	","	2689:16:82671:82671	824993	4	True				
ANR	825177	Statement	it	2689:18:82673:82674	824993	5	True				
ANR	825178	Statement	","	2689:20:82675:82675	824993	6	True				
ANR	825179	Statement	kv	2689:22:82677:82678	824993	7	True				
ANR	825180	Statement	)	2689:24:82679:82679	824993	8	True				
ANR	825181	CompoundStatement		23:3:614:646	824993	9					
ANR	825182	IdentifierDeclStatement	const char * name = sdbkv_key ( kv ) ;	2690:3:82686:82718	824993	0	True				
ANR	825183	IdentifierDecl	* name = sdbkv_key ( kv )		824993	0					
ANR	825184	IdentifierDeclType	const char *		824993	0					
ANR	825185	Identifier	name		824993	1					
ANR	825186	AssignmentExpression	* name = sdbkv_key ( kv )		824993	2		=			
ANR	825187	Identifier	name		824993	0					
ANR	825188	CallExpression	sdbkv_key ( kv )		824993	1					
ANR	825189	Callee	sdbkv_key		824993	0					
ANR	825190	Identifier	sdbkv_key		824993	0					
ANR	825191	ArgumentList	kv		824993	1					
ANR	825192	Argument	kv		824993	0					
ANR	825193	Identifier	kv		824993	0					
ANR	825194	ExpressionStatement	"sdb_add ( d , name , ""1"" , 0 )"	2691:3:82723:82748	824993	1	True				
ANR	825195	CallExpression	"sdb_add ( d , name , ""1"" , 0 )"		824993	0					
ANR	825196	Callee	sdb_add		824993	0					
ANR	825197	Identifier	sdb_add		824993	0					
ANR	825198	ArgumentList	d		824993	1					
ANR	825199	Argument	d		824993	0					
ANR	825200	Identifier	d		824993	0					
ANR	825201	Argument	name		824993	1					
ANR	825202	Identifier	name		824993	0					
ANR	825203	Argument	"""1"""		824993	2					
ANR	825204	PrimaryExpression	"""1"""		824993	0					
ANR	825205	Argument	0		824993	3					
ANR	825206	PrimaryExpression	0		824993	0					
ANR	825207	ExpressionStatement	ls_free ( ls )	2693:2:82756:82768	824993	10	True				
ANR	825208	CallExpression	ls_free ( ls )		824993	0					
ANR	825209	Callee	ls_free		824993	0					
ANR	825210	Identifier	ls_free		824993	0					
ANR	825211	ArgumentList	ls		824993	1					
ANR	825212	Argument	ls		824993	0					
ANR	825213	Identifier	ls		824993	0					
ANR	825214	IdentifierDeclStatement	RTable * t = r_table_new ( ) ;	2695:1:82774:82800	824993	33	True				
ANR	825215	IdentifierDecl	* t = r_table_new ( )		824993	0					
ANR	825216	IdentifierDeclType	RTable *		824993	0					
ANR	825217	Identifier	t		824993	1					
ANR	825218	AssignmentExpression	* t = r_table_new ( )		824993	2		=			
ANR	825219	Identifier	t		824993	0					
ANR	825220	CallExpression	r_table_new ( )		824993	1					
ANR	825221	Callee	r_table_new		824993	0					
ANR	825222	Identifier	r_table_new		824993	0					
ANR	825223	ArgumentList			824993	1					
ANR	825224	IdentifierDeclStatement	"SdbList * ls = sdb_foreach_list ( d , true ) ;"	2696:1:82803:82843	824993	34	True				
ANR	825225	IdentifierDecl	"* ls = sdb_foreach_list ( d , true )"		824993	0					
ANR	825226	IdentifierDeclType	SdbList *		824993	0					
ANR	825227	Identifier	ls		824993	1					
ANR	825228	AssignmentExpression	"* ls = sdb_foreach_list ( d , true )"		824993	2		=			
ANR	825229	Identifier	ls		824993	0					
ANR	825230	CallExpression	"sdb_foreach_list ( d , true )"		824993	1					
ANR	825231	Callee	sdb_foreach_list		824993	0					
ANR	825232	Identifier	sdb_foreach_list		824993	0					
ANR	825233	ArgumentList	d		824993	1					
ANR	825234	Argument	d		824993	0					
ANR	825235	Identifier	d		824993	0					
ANR	825236	Argument	true		824993	1					
ANR	825237	Identifier	true		824993	0					
ANR	825238	IdentifierDeclStatement	"RTableColumnType * typeString = r_table_type ( ""string"" ) ;"	2697:1:82846:82900	824993	35	True				
ANR	825239	IdentifierDecl	"* typeString = r_table_type ( ""string"" )"		824993	0					
ANR	825240	IdentifierDeclType	RTableColumnType *		824993	0					
ANR	825241	Identifier	typeString		824993	1					
ANR	825242	AssignmentExpression	"* typeString = r_table_type ( ""string"" )"		824993	2		=			
ANR	825243	Identifier	typeString		824993	0					
ANR	825244	CallExpression	"r_table_type ( ""string"" )"		824993	1					
ANR	825245	Callee	r_table_type		824993	0					
ANR	825246	Identifier	r_table_type		824993	0					
ANR	825247	ArgumentList	"""string"""		824993	1					
ANR	825248	Argument	"""string"""		824993	0					
ANR	825249	PrimaryExpression	"""string"""		824993	0					
ANR	825250	IdentifierDeclStatement	"RTableColumnType * typeNumber = r_table_type ( ""number"" ) ;"	2698:1:82903:82957	824993	36	True				
ANR	825251	IdentifierDecl	"* typeNumber = r_table_type ( ""number"" )"		824993	0					
ANR	825252	IdentifierDeclType	RTableColumnType *		824993	0					
ANR	825253	Identifier	typeNumber		824993	1					
ANR	825254	AssignmentExpression	"* typeNumber = r_table_type ( ""number"" )"		824993	2		=			
ANR	825255	Identifier	typeNumber		824993	0					
ANR	825256	CallExpression	"r_table_type ( ""number"" )"		824993	1					
ANR	825257	Callee	r_table_type		824993	0					
ANR	825258	Identifier	r_table_type		824993	0					
ANR	825259	ArgumentList	"""number"""		824993	1					
ANR	825260	Argument	"""number"""		824993	0					
ANR	825261	PrimaryExpression	"""number"""		824993	0					
ANR	825262	ExpressionStatement	"r_table_add_column ( t , typeString , ""name"" , 0 )"	2699:1:82960:83005	824993	37	True				
ANR	825263	CallExpression	"r_table_add_column ( t , typeString , ""name"" , 0 )"		824993	0					
ANR	825264	Callee	r_table_add_column		824993	0					
ANR	825265	Identifier	r_table_add_column		824993	0					
ANR	825266	ArgumentList	t		824993	1					
ANR	825267	Argument	t		824993	0					
ANR	825268	Identifier	t		824993	0					
ANR	825269	Argument	typeString		824993	1					
ANR	825270	Identifier	typeString		824993	0					
ANR	825271	Argument	"""name"""		824993	2					
ANR	825272	PrimaryExpression	"""name"""		824993	0					
ANR	825273	Argument	0		824993	3					
ANR	825274	PrimaryExpression	0		824993	0					
ANR	825275	ExpressionStatement	"r_table_add_column ( t , typeNumber , ""addr"" , 0 )"	2700:1:83008:83053	824993	38	True				
ANR	825276	CallExpression	"r_table_add_column ( t , typeNumber , ""addr"" , 0 )"		824993	0					
ANR	825277	Callee	r_table_add_column		824993	0					
ANR	825278	Identifier	r_table_add_column		824993	0					
ANR	825279	ArgumentList	t		824993	1					
ANR	825280	Argument	t		824993	0					
ANR	825281	Identifier	t		824993	0					
ANR	825282	Argument	typeNumber		824993	1					
ANR	825283	Identifier	typeNumber		824993	0					
ANR	825284	Argument	"""addr"""		824993	2					
ANR	825285	PrimaryExpression	"""addr"""		824993	0					
ANR	825286	Argument	0		824993	3					
ANR	825287	PrimaryExpression	0		824993	0					
ANR	825288	Statement	ls_foreach	2701:1:83056:83065	824993	39	True				
ANR	825289	Statement	(	2701:12:83067:83067	824993	40	True				
ANR	825290	Statement	ls	2701:13:83068:83069	824993	41	True				
ANR	825291	Statement	","	2701:15:83070:83070	824993	42	True				
ANR	825292	Statement	it	2701:17:83072:83073	824993	43	True				
ANR	825293	Statement	","	2701:19:83074:83074	824993	44	True				
ANR	825294	Statement	kv	2701:21:83076:83077	824993	45	True				
ANR	825295	Statement	)	2701:23:83078:83078	824993	46	True				
ANR	825296	CompoundStatement		35:2:1012:1044	824993	47					
ANR	825297	IdentifierDeclStatement	const char * key = sdbkv_key ( kv ) ;	2702:2:83084:83116	824993	0	True				
ANR	825298	IdentifierDecl	* key = sdbkv_key ( kv )		824993	0					
ANR	825299	IdentifierDeclType	const char *		824993	0					
ANR	825300	Identifier	key		824993	1					
ANR	825301	AssignmentExpression	* key = sdbkv_key ( kv )		824993	2		=			
ANR	825302	Identifier	key		824993	0					
ANR	825303	CallExpression	sdbkv_key ( kv )		824993	1					
ANR	825304	Callee	sdbkv_key		824993	0					
ANR	825305	Identifier	sdbkv_key		824993	0					
ANR	825306	ArgumentList	kv		824993	1					
ANR	825307	Argument	kv		824993	0					
ANR	825308	Identifier	kv		824993	0					
ANR	825309	IfStatement	if ( * key == '.' )		824993	1					
ANR	825310	Condition	* key == '.'	2703:6:83124:83134	824993	0	True				
ANR	825311	EqualityExpression	* key == '.'		824993	0		==			
ANR	825312	UnaryOperationExpression	* key		824993	0					
ANR	825313	UnaryOperator	*		824993	0					
ANR	825314	Identifier	key		824993	1					
ANR	825315	PrimaryExpression	'.'		824993	1					
ANR	825316	ContinueStatement	continue ;	2703:19:83137:83145	824993	1	True				
ANR	825317	ExpressionStatement	"r_table_add_column ( t , typeNumber , key , 0 )"	2704:2:83149:83191	824993	2	True				
ANR	825318	CallExpression	"r_table_add_column ( t , typeNumber , key , 0 )"		824993	0					
ANR	825319	Callee	r_table_add_column		824993	0					
ANR	825320	Identifier	r_table_add_column		824993	0					
ANR	825321	ArgumentList	t		824993	1					
ANR	825322	Argument	t		824993	0					
ANR	825323	Identifier	t		824993	0					
ANR	825324	Argument	typeNumber		824993	1					
ANR	825325	Identifier	typeNumber		824993	0					
ANR	825326	Argument	key		824993	2					
ANR	825327	Identifier	key		824993	0					
ANR	825328	Argument	0		824993	3					
ANR	825329	PrimaryExpression	0		824993	0					
ANR	825330	ExpressionStatement	sdb_free ( d )	2706:1:83197:83209	824993	48	True				
ANR	825331	CallExpression	sdb_free ( d )		824993	0					
ANR	825332	Callee	sdb_free		824993	0					
ANR	825333	Identifier	sdb_free		824993	0					
ANR	825334	ArgumentList	d		824993	1					
ANR	825335	Argument	d		824993	0					
ANR	825336	Identifier	d		824993	0					
ANR	825337	Statement	r_list_foreach	2708:1:83213:83226	824993	49	True				
ANR	825338	Statement	(	2708:16:83228:83228	824993	50	True				
ANR	825339	Statement	dbs	2708:17:83229:83231	824993	51	True				
ANR	825340	Statement	","	2708:20:83232:83232	824993	52	True				
ANR	825341	Statement	iter	2708:22:83234:83237	824993	53	True				
ANR	825342	Statement	","	2708:26:83238:83238	824993	54	True				
ANR	825343	Statement	db	2708:28:83240:83241	824993	55	True				
ANR	825344	Statement	)	2708:30:83242:83242	824993	56	True				
ANR	825345	CompoundStatement		70:2:1994:2028	824993	57					
ANR	825346	IdentifierDeclStatement	"SdbList * ls = sdb_foreach_list ( db , false ) ;"	2709:2:83248:83290	824993	0	True				
ANR	825347	IdentifierDecl	"* ls = sdb_foreach_list ( db , false )"		824993	0					
ANR	825348	IdentifierDeclType	SdbList *		824993	0					
ANR	825349	Identifier	ls		824993	1					
ANR	825350	AssignmentExpression	"* ls = sdb_foreach_list ( db , false )"		824993	2		=			
ANR	825351	Identifier	ls		824993	0					
ANR	825352	CallExpression	"sdb_foreach_list ( db , false )"		824993	1					
ANR	825353	Callee	sdb_foreach_list		824993	0					
ANR	825354	Identifier	sdb_foreach_list		824993	0					
ANR	825355	ArgumentList	db		824993	1					
ANR	825356	Argument	db		824993	0					
ANR	825357	Identifier	db		824993	0					
ANR	825358	Argument	false		824993	1					
ANR	825359	Identifier	false		824993	0					
ANR	825360	IdentifierDeclStatement	SdbListIter * it ;	2710:2:83294:83309	824993	1	True				
ANR	825361	IdentifierDecl	* it		824993	0					
ANR	825362	IdentifierDeclType	SdbListIter *		824993	0					
ANR	825363	Identifier	it		824993	1					
ANR	825364	IdentifierDeclStatement	SdbKv * kv ;	2711:2:83313:83322	824993	2	True				
ANR	825365	IdentifierDecl	* kv		824993	0					
ANR	825366	IdentifierDeclType	SdbKv *		824993	0					
ANR	825367	Identifier	kv		824993	1					
ANR	825368	IdentifierDeclStatement	char * names [ 100 ] ;	2712:2:83326:83342	824993	3	True				
ANR	825369	IdentifierDecl	* names [ 100 ]		824993	0					
ANR	825370	IdentifierDeclType	char * [ 100 ]		824993	0					
ANR	825371	Identifier	names		824993	1					
ANR	825372	PrimaryExpression	100		824993	2					
ANR	825373	IdentifierDeclStatement	int i ;	2713:2:83346:83351	824993	4	True				
ANR	825374	IdentifierDecl	i		824993	0					
ANR	825375	IdentifierDeclType	int		824993	0					
ANR	825376	Identifier	i		824993	1					
ANR	825377	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		824993	5					
ANR	825378	ForInit	i = 0 ;	2714:7:83360:83365	824993	0	True				
ANR	825379	AssignmentExpression	i = 0		824993	0		=			
ANR	825380	Identifier	i		824993	0					
ANR	825381	PrimaryExpression	0		824993	1					
ANR	825382	Condition	i < 100	2714:13:83366:83370	824993	1	True				
ANR	825383	RelationalExpression	i < 100		824993	0		<			
ANR	825384	Identifier	i		824993	0					
ANR	825385	PrimaryExpression	100		824993	1					
ANR	825386	PostIncDecOperationExpression	i ++	2714:19:83372:83374	824993	2	True				
ANR	825387	Identifier	i		824993	0					
ANR	825388	IncDec	++		824993	1					
ANR	825389	CompoundStatement		47:24:1305:1305	824993	3					
ANR	825390	ExpressionStatement	names [ i ] = NULL	2715:3:83382:83397	824993	0	True				
ANR	825391	AssignmentExpression	names [ i ] = NULL		824993	0		=			
ANR	825392	ArrayIndexing	names [ i ]		824993	0					
ANR	825393	Identifier	names		824993	0					
ANR	825394	Identifier	i		824993	1					
ANR	825395	Identifier	NULL		824993	1					
ANR	825396	Statement	ls_foreach	2717:2:83405:83414	824993	6	True				
ANR	825397	Statement	(	2717:13:83416:83416	824993	7	True				
ANR	825398	Statement	ls	2717:14:83417:83418	824993	8	True				
ANR	825399	Statement	","	2717:16:83419:83419	824993	9	True				
ANR	825400	Statement	it	2717:18:83421:83422	824993	10	True				
ANR	825401	Statement	","	2717:20:83423:83423	824993	11	True				
ANR	825402	Statement	kv	2717:22:83425:83426	824993	12	True				
ANR	825403	Statement	)	2717:24:83427:83427	824993	13	True				
ANR	825404	CompoundStatement		56:3:1480:1517	824993	14					
ANR	825405	IdentifierDeclStatement	const char * key = sdbkv_key ( kv ) ;	2718:3:83434:83465	824993	0	True				
ANR	825406	IdentifierDecl	* key = sdbkv_key ( kv )		824993	0					
ANR	825407	IdentifierDeclType	const char *		824993	0					
ANR	825408	Identifier	key		824993	1					
ANR	825409	AssignmentExpression	* key = sdbkv_key ( kv )		824993	2		=			
ANR	825410	Identifier	key		824993	0					
ANR	825411	CallExpression	sdbkv_key ( kv )		824993	1					
ANR	825412	Callee	sdbkv_key		824993	0					
ANR	825413	Identifier	sdbkv_key		824993	0					
ANR	825414	ArgumentList	kv		824993	1					
ANR	825415	Argument	kv		824993	0					
ANR	825416	Identifier	kv		824993	0					
ANR	825417	IdentifierDeclStatement	const char * value = sdbkv_value ( kv ) ;	2719:3:83470:83506	824993	1	True				
ANR	825418	IdentifierDecl	* value = sdbkv_value ( kv )		824993	0					
ANR	825419	IdentifierDeclType	const char *		824993	0					
ANR	825420	Identifier	value		824993	1					
ANR	825421	AssignmentExpression	* value = sdbkv_value ( kv )		824993	2		=			
ANR	825422	Identifier	value		824993	0					
ANR	825423	CallExpression	sdbkv_value ( kv )		824993	1					
ANR	825424	Callee	sdbkv_value		824993	0					
ANR	825425	Identifier	sdbkv_value		824993	0					
ANR	825426	ArgumentList	kv		824993	1					
ANR	825427	Argument	kv		824993	0					
ANR	825428	Identifier	kv		824993	0					
ANR	825429	IfStatement	if ( * key == '.' )		824993	2					
ANR	825430	Condition	* key == '.'	2720:7:83515:83525	824993	0	True				
ANR	825431	EqualityExpression	* key == '.'		824993	0		==			
ANR	825432	UnaryOperationExpression	* key		824993	0					
ANR	825433	UnaryOperator	*		824993	0					
ANR	825434	Identifier	key		824993	1					
ANR	825435	PrimaryExpression	'.'		824993	1					
ANR	825436	CompoundStatement		53:20:1456:1456	824993	1					
ANR	825437	ContinueStatement	continue ;	2721:4:83534:83542	824993	0	True				
ANR	825438	IdentifierDeclStatement	"int idx = r_table_column_nth ( t , key ) ;"	2723:3:83552:83589	824993	3	True				
ANR	825439	IdentifierDecl	"idx = r_table_column_nth ( t , key )"		824993	0					
ANR	825440	IdentifierDeclType	int		824993	0					
ANR	825441	Identifier	idx		824993	1					
ANR	825442	AssignmentExpression	"idx = r_table_column_nth ( t , key )"		824993	2		=			
ANR	825443	Identifier	idx		824993	0					
ANR	825444	CallExpression	"r_table_column_nth ( t , key )"		824993	1					
ANR	825445	Callee	r_table_column_nth		824993	0					
ANR	825446	Identifier	r_table_column_nth		824993	0					
ANR	825447	ArgumentList	t		824993	1					
ANR	825448	Argument	t		824993	0					
ANR	825449	Identifier	t		824993	0					
ANR	825450	Argument	key		824993	1					
ANR	825451	Identifier	key		824993	0					
ANR	825452	IfStatement	if ( idx != - 1 )		824993	4					
ANR	825453	Condition	idx != - 1	2724:7:83598:83606	824993	0	True				
ANR	825454	EqualityExpression	idx != - 1		824993	0		!=			
ANR	825455	Identifier	idx		824993	0					
ANR	825456	UnaryOperationExpression	- 1		824993	1					
ANR	825457	UnaryOperator	-		824993	0					
ANR	825458	PrimaryExpression	1		824993	1					
ANR	825459	CompoundStatement		58:4:1543:1576	824993	1					
ANR	825460	IdentifierDeclStatement	"ut64 nv = r_num_get ( NULL , value ) ;"	2725:4:83615:83648	824993	0	True				
ANR	825461	IdentifierDecl	"nv = r_num_get ( NULL , value )"		824993	0					
ANR	825462	IdentifierDeclType	ut64		824993	0					
ANR	825463	Identifier	nv		824993	1					
ANR	825464	AssignmentExpression	"nv = r_num_get ( NULL , value )"		824993	2		=			
ANR	825465	Identifier	nv		824993	0					
ANR	825466	CallExpression	"r_num_get ( NULL , value )"		824993	1					
ANR	825467	Callee	r_num_get		824993	0					
ANR	825468	Identifier	r_num_get		824993	0					
ANR	825469	ArgumentList	NULL		824993	1					
ANR	825470	Argument	NULL		824993	0					
ANR	825471	Identifier	NULL		824993	0					
ANR	825472	Argument	value		824993	1					
ANR	825473	Identifier	value		824993	0					
ANR	825474	ExpressionStatement	"names [ idx ] = r_str_newf ( ""%d"" , ( int ) nv )"	2726:4:83654:83693	824993	1	True				
ANR	825475	AssignmentExpression	"names [ idx ] = r_str_newf ( ""%d"" , ( int ) nv )"		824993	0		=			
ANR	825476	ArrayIndexing	names [ idx ]		824993	0					
ANR	825477	Identifier	names		824993	0					
ANR	825478	Identifier	idx		824993	1					
ANR	825479	CallExpression	"r_str_newf ( ""%d"" , ( int ) nv )"		824993	1					
ANR	825480	Callee	r_str_newf		824993	0					
ANR	825481	Identifier	r_str_newf		824993	0					
ANR	825482	ArgumentList	"""%d"""		824993	1					
ANR	825483	Argument	"""%d"""		824993	0					
ANR	825484	PrimaryExpression	"""%d"""		824993	0					
ANR	825485	Argument	( int ) nv		824993	1					
ANR	825486	CastExpression	( int ) nv		824993	0					
ANR	825487	CastTarget	int		824993	0					
ANR	825488	Identifier	nv		824993	1					
ANR	825489	ElseStatement	else		824993	0					
ANR	825490	CompoundStatement		60:10:1633:1633	824993	0					
ANR	825491	ExpressionStatement	"eprintf ( ""Invalid column name (%s) %c"" , key , 10 )"	2728:4:83711:83759	824993	0	True				
ANR	825492	CallExpression	"eprintf ( ""Invalid column name (%s) %c"" , key , 10 )"		824993	0					
ANR	825493	Callee	eprintf		824993	0					
ANR	825494	Identifier	eprintf		824993	0					
ANR	825495	ArgumentList	"""Invalid column name (%s) %c"""		824993	1					
ANR	825496	Argument	"""Invalid column name (%s) %c"""		824993	0					
ANR	825497	PrimaryExpression	"""Invalid column name (%s) %c"""		824993	0					
ANR	825498	Argument	key		824993	1					
ANR	825499	Identifier	key		824993	0					
ANR	825500	Argument	10		824993	2					
ANR	825501	PrimaryExpression	10		824993	0					
ANR	825502	IdentifierDeclStatement	RList * items = r_list_newf ( free ) ;	2731:2:83772:83805	824993	15	True				
ANR	825503	IdentifierDecl	* items = r_list_newf ( free )		824993	0					
ANR	825504	IdentifierDeclType	RList *		824993	0					
ANR	825505	Identifier	items		824993	1					
ANR	825506	AssignmentExpression	* items = r_list_newf ( free )		824993	2		=			
ANR	825507	Identifier	items		824993	0					
ANR	825508	CallExpression	r_list_newf ( free )		824993	1					
ANR	825509	Callee	r_list_newf		824993	0					
ANR	825510	Identifier	r_list_newf		824993	0					
ANR	825511	ArgumentList	free		824993	1					
ANR	825512	Argument	free		824993	0					
ANR	825513	Identifier	free		824993	0					
ANR	825514	IdentifierDeclStatement	"ut64 fcnAddr = sdb_num_get ( db , "".addr"" , 0 ) ;"	2732:2:83809:83852	824993	16	True				
ANR	825515	IdentifierDecl	"fcnAddr = sdb_num_get ( db , "".addr"" , 0 )"		824993	0					
ANR	825516	IdentifierDeclType	ut64		824993	0					
ANR	825517	Identifier	fcnAddr		824993	1					
ANR	825518	AssignmentExpression	"fcnAddr = sdb_num_get ( db , "".addr"" , 0 )"		824993	2		=			
ANR	825519	Identifier	fcnAddr		824993	0					
ANR	825520	CallExpression	"sdb_num_get ( db , "".addr"" , 0 )"		824993	1					
ANR	825521	Callee	sdb_num_get		824993	0					
ANR	825522	Identifier	sdb_num_get		824993	0					
ANR	825523	ArgumentList	db		824993	1					
ANR	825524	Argument	db		824993	0					
ANR	825525	Identifier	db		824993	0					
ANR	825526	Argument	""".addr"""		824993	1					
ANR	825527	PrimaryExpression	""".addr"""		824993	0					
ANR	825528	Argument	0		824993	2					
ANR	825529	PrimaryExpression	0		824993	0					
ANR	825530	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , fcnAddr , 0 ) ;"	2734:2:83857:83920	824993	17	True				
ANR	825531	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , fcnAddr , 0 )"		824993	0					
ANR	825532	IdentifierDeclType	RAnalFunction *		824993	0					
ANR	825533	Identifier	fcn		824993	1					
ANR	825534	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , fcnAddr , 0 )"		824993	2		=			
ANR	825535	Identifier	fcn		824993	0					
ANR	825536	CallExpression	"r_anal_get_fcn_in ( core -> anal , fcnAddr , 0 )"		824993	1					
ANR	825537	Callee	r_anal_get_fcn_in		824993	0					
ANR	825538	Identifier	r_anal_get_fcn_in		824993	0					
ANR	825539	ArgumentList	core -> anal		824993	1					
ANR	825540	Argument	core -> anal		824993	0					
ANR	825541	PtrMemberAccess	core -> anal		824993	0					
ANR	825542	Identifier	core		824993	0					
ANR	825543	Identifier	anal		824993	1					
ANR	825544	Argument	fcnAddr		824993	1					
ANR	825545	Identifier	fcnAddr		824993	0					
ANR	825546	Argument	0		824993	2					
ANR	825547	PrimaryExpression	0		824993	0					
ANR	825548	ExpressionStatement	"r_list_append ( items , fcn ? strdup ( fcn -> name ) : strdup ( """" ) )"	2735:2:83924:83981	824993	18	True				
ANR	825549	CallExpression	"r_list_append ( items , fcn ? strdup ( fcn -> name ) : strdup ( """" ) )"		824993	0					
ANR	825550	Callee	r_list_append		824993	0					
ANR	825551	Identifier	r_list_append		824993	0					
ANR	825552	ArgumentList	items		824993	1					
ANR	825553	Argument	items		824993	0					
ANR	825554	Identifier	items		824993	0					
ANR	825555	Argument	"fcn ? strdup ( fcn -> name ) : strdup ( """" )"		824993	1					
ANR	825556	ConditionalExpression	"fcn ? strdup ( fcn -> name ) : strdup ( """" )"		824993	0					
ANR	825557	Condition	fcn		824993	0					
ANR	825558	Identifier	fcn		824993	0					
ANR	825559	CallExpression	strdup ( fcn -> name )		824993	1					
ANR	825560	Callee	strdup		824993	0					
ANR	825561	Identifier	strdup		824993	0					
ANR	825562	ArgumentList	fcn -> name		824993	1					
ANR	825563	Argument	fcn -> name		824993	0					
ANR	825564	PtrMemberAccess	fcn -> name		824993	0					
ANR	825565	Identifier	fcn		824993	0					
ANR	825566	Identifier	name		824993	1					
ANR	825567	CallExpression	"strdup ( """" )"		824993	2					
ANR	825568	Callee	strdup		824993	0					
ANR	825569	Identifier	strdup		824993	0					
ANR	825570	ArgumentList	""""""		824993	1					
ANR	825571	Argument	""""""		824993	0					
ANR	825572	PrimaryExpression	""""""		824993	0					
ANR	825573	Statement	r_list_append	2736:2:83985:83997	824993	19	True				
ANR	825574	Statement	(	2736:16:83999:83999	824993	20	True				
ANR	825575	Statement	items	2736:17:84000:84004	824993	21	True				
ANR	825576	Statement	","	2736:22:84005:84005	824993	22	True				
ANR	825577	Statement	fcn	2736:24:84007:84009	824993	23	True				
ANR	825578	Statement	?	2736:27:84010:84010	824993	24	True				
ANR	825579	Statement	r_str_newf	2736:28:84011:84020	824993	25	True				
ANR	825580	Statement	(	2736:39:84022:84022	824993	26	True				
ANR	825581	Statement	"""0x%08"""	2736:40:84023:84029	824993	27	True				
ANR	825582	Statement	PFMT64x	2736:47:84030:84036	824993	28	True				
ANR	825583	Statement	","	2736:54:84037:84037	824993	29	True				
ANR	825584	Statement	fcnAddr	2736:56:84039:84045	824993	30	True				
ANR	825585	Statement	)	2736:63:84046:84046	824993	31	True				
ANR	825586	Statement	:	2736:64:84047:84047	824993	32	True				
ANR	825587	Statement	strdup	2736:66:84049:84054	824993	33	True				
ANR	825588	Statement	(	2736:73:84056:84056	824993	34	True				
ANR	825589	Statement	"""0"""	2736:74:84057:84059	824993	35	True				
ANR	825590	Statement	)	2736:77:84060:84060	824993	36	True				
ANR	825591	Statement	)	2736:78:84061:84061	824993	37	True				
ANR	825592	ExpressionStatement		2736:79:84062:84062	824993	38	True				
ANR	825593	IdentifierDeclStatement	int cols = r_list_length ( t -> cols ) ;	2737:2:84066:84100	824993	39	True				
ANR	825594	IdentifierDecl	cols = r_list_length ( t -> cols )		824993	0					
ANR	825595	IdentifierDeclType	int		824993	0					
ANR	825596	Identifier	cols		824993	1					
ANR	825597	AssignmentExpression	cols = r_list_length ( t -> cols )		824993	2		=			
ANR	825598	Identifier	cols		824993	0					
ANR	825599	CallExpression	r_list_length ( t -> cols )		824993	1					
ANR	825600	Callee	r_list_length		824993	0					
ANR	825601	Identifier	r_list_length		824993	0					
ANR	825602	ArgumentList	t -> cols		824993	1					
ANR	825603	Argument	t -> cols		824993	0					
ANR	825604	PtrMemberAccess	t -> cols		824993	0					
ANR	825605	Identifier	t		824993	0					
ANR	825606	Identifier	cols		824993	1					
ANR	825607	ForStatement	for ( i = 2 ; i < cols ; i ++ )		824993	40					
ANR	825608	ForInit	i = 2 ;	2738:7:84109:84114	824993	0	True				
ANR	825609	AssignmentExpression	i = 2		824993	0		=			
ANR	825610	Identifier	i		824993	0					
ANR	825611	PrimaryExpression	2		824993	1					
ANR	825612	Condition	i < cols	2738:14:84116:84123	824993	1	True				
ANR	825613	RelationalExpression	i < cols		824993	0		<			
ANR	825614	Identifier	i		824993	0					
ANR	825615	Identifier	cols		824993	1					
ANR	825616	PostIncDecOperationExpression	i ++	2738:24:84126:84128	824993	2	True				
ANR	825617	Identifier	i		824993	0					
ANR	825618	IncDec	++		824993	1					
ANR	825619	CompoundStatement		71:29:2059:2059	824993	3					
ANR	825620	IfStatement	if ( names [ i ] )		824993	0					
ANR	825621	Condition	names [ i ]	2739:7:84140:84147	824993	0	True				
ANR	825622	ArrayIndexing	names [ i ]		824993	0					
ANR	825623	Identifier	names		824993	0					
ANR	825624	Identifier	i		824993	1					
ANR	825625	CompoundStatement		72:17:2078:2078	824993	1					
ANR	825626	IfStatement	if ( names [ i ] [ 0 ] != '.' )		824993	0					
ANR	825627	Condition	names [ i ] [ 0 ] != '.'	2740:8:84160:84177	824993	0	True				
ANR	825628	EqualityExpression	names [ i ] [ 0 ] != '.'		824993	0		!=			
ANR	825629	ArrayIndexing	names [ i ] [ 0 ]		824993	0					
ANR	825630	ArrayIndexing	names [ i ]		824993	0					
ANR	825631	Identifier	names		824993	0					
ANR	825632	Identifier	i		824993	1					
ANR	825633	PrimaryExpression	0		824993	1					
ANR	825634	PrimaryExpression	'.'		824993	1					
ANR	825635	CompoundStatement		73:28:2108:2108	824993	1					
ANR	825636	ExpressionStatement	"r_list_append ( items , strdup ( names [ i ] ) )"	2741:5:84187:84227	824993	0	True				
ANR	825637	CallExpression	"r_list_append ( items , strdup ( names [ i ] ) )"		824993	0					
ANR	825638	Callee	r_list_append		824993	0					
ANR	825639	Identifier	r_list_append		824993	0					
ANR	825640	ArgumentList	items		824993	1					
ANR	825641	Argument	items		824993	0					
ANR	825642	Identifier	items		824993	0					
ANR	825643	Argument	strdup ( names [ i ] )		824993	1					
ANR	825644	CallExpression	strdup ( names [ i ] )		824993	0					
ANR	825645	Callee	strdup		824993	0					
ANR	825646	Identifier	strdup		824993	0					
ANR	825647	ArgumentList	names [ i ]		824993	1					
ANR	825648	Argument	names [ i ]		824993	0					
ANR	825649	ArrayIndexing	names [ i ]		824993	0					
ANR	825650	Identifier	names		824993	0					
ANR	825651	Identifier	i		824993	1					
ANR	825652	ExpressionStatement	R_FREE ( names [ i ] )	2743:4:84239:84256	824993	1	True				
ANR	825653	CallExpression	R_FREE ( names [ i ] )		824993	0					
ANR	825654	Callee	R_FREE		824993	0					
ANR	825655	Identifier	R_FREE		824993	0					
ANR	825656	ArgumentList	names [ i ]		824993	1					
ANR	825657	Argument	names [ i ]		824993	0					
ANR	825658	ArrayIndexing	names [ i ]		824993	0					
ANR	825659	Identifier	names		824993	0					
ANR	825660	Identifier	i		824993	1					
ANR	825661	ElseStatement	else		824993	0					
ANR	825662	CompoundStatement		77:10:2196:2196	824993	0					
ANR	825663	ExpressionStatement	"r_list_append ( items , strdup ( ""0"" ) )"	2745:4:84274:84309	824993	0	True				
ANR	825664	CallExpression	"r_list_append ( items , strdup ( ""0"" ) )"		824993	0					
ANR	825665	Callee	r_list_append		824993	0					
ANR	825666	Identifier	r_list_append		824993	0					
ANR	825667	ArgumentList	items		824993	1					
ANR	825668	Argument	items		824993	0					
ANR	825669	Identifier	items		824993	0					
ANR	825670	Argument	"strdup ( ""0"" )"		824993	1					
ANR	825671	CallExpression	"strdup ( ""0"" )"		824993	0					
ANR	825672	Callee	strdup		824993	0					
ANR	825673	Identifier	strdup		824993	0					
ANR	825674	ArgumentList	"""0"""		824993	1					
ANR	825675	Argument	"""0"""		824993	0					
ANR	825676	PrimaryExpression	"""0"""		824993	0					
ANR	825677	ExpressionStatement	"r_table_add_row_list ( t , items )"	2748:2:84322:84353	824993	41	True				
ANR	825678	CallExpression	"r_table_add_row_list ( t , items )"		824993	0					
ANR	825679	Callee	r_table_add_row_list		824993	0					
ANR	825680	Identifier	r_table_add_row_list		824993	0					
ANR	825681	ArgumentList	t		824993	1					
ANR	825682	Argument	t		824993	0					
ANR	825683	Identifier	t		824993	0					
ANR	825684	Argument	items		824993	1					
ANR	825685	Identifier	items		824993	0					
ANR	825686	ExpressionStatement	"r_table_query ( t , ( * input ) ? input + 1 : """" )"	2750:1:84359:84400	824993	58	True				
ANR	825687	CallExpression	"r_table_query ( t , ( * input ) ? input + 1 : """" )"		824993	0					
ANR	825688	Callee	r_table_query		824993	0					
ANR	825689	Identifier	r_table_query		824993	0					
ANR	825690	ArgumentList	t		824993	1					
ANR	825691	Argument	t		824993	0					
ANR	825692	Identifier	t		824993	0					
ANR	825693	Argument	"( * input ) ? input + 1 : """""		824993	1					
ANR	825694	ConditionalExpression	"( * input ) ? input + 1 : """""		824993	0					
ANR	825695	Condition	* input		824993	0					
ANR	825696	UnaryOperationExpression	* input		824993	0					
ANR	825697	UnaryOperator	*		824993	0					
ANR	825698	Identifier	input		824993	1					
ANR	825699	AdditiveExpression	input + 1		824993	1		+			
ANR	825700	Identifier	input		824993	0					
ANR	825701	PrimaryExpression	1		824993	1					
ANR	825702	PrimaryExpression	""""""		824993	2					
ANR	825703	IdentifierDeclStatement	char * ts = isJson ? r_table_tojson ( t ) : r_table_tostring ( t ) ;	2751:1:84403:84461	824993	59	True				
ANR	825704	IdentifierDecl	* ts = isJson ? r_table_tojson ( t ) : r_table_tostring ( t )		824993	0					
ANR	825705	IdentifierDeclType	char *		824993	0					
ANR	825706	Identifier	ts		824993	1					
ANR	825707	AssignmentExpression	* ts = isJson ? r_table_tojson ( t ) : r_table_tostring ( t )		824993	2		=			
ANR	825708	Identifier	ts		824993	0					
ANR	825709	ConditionalExpression	isJson ? r_table_tojson ( t ) : r_table_tostring ( t )		824993	1					
ANR	825710	Condition	isJson		824993	0					
ANR	825711	Identifier	isJson		824993	0					
ANR	825712	CallExpression	r_table_tojson ( t )		824993	1					
ANR	825713	Callee	r_table_tojson		824993	0					
ANR	825714	Identifier	r_table_tojson		824993	0					
ANR	825715	ArgumentList	t		824993	1					
ANR	825716	Argument	t		824993	0					
ANR	825717	Identifier	t		824993	0					
ANR	825718	CallExpression	r_table_tostring ( t )		824993	2					
ANR	825719	Callee	r_table_tostring		824993	0					
ANR	825720	Identifier	r_table_tostring		824993	0					
ANR	825721	ArgumentList	t		824993	1					
ANR	825722	Argument	t		824993	0					
ANR	825723	Identifier	t		824993	0					
ANR	825724	ExpressionStatement	"r_cons_printf ( ""%s"" , ts )"	2752:1:84464:84488	824993	60	True				
ANR	825725	CallExpression	"r_cons_printf ( ""%s"" , ts )"		824993	0					
ANR	825726	Callee	r_cons_printf		824993	0					
ANR	825727	Identifier	r_cons_printf		824993	0					
ANR	825728	ArgumentList	"""%s"""		824993	1					
ANR	825729	Argument	"""%s"""		824993	0					
ANR	825730	PrimaryExpression	"""%s"""		824993	0					
ANR	825731	Argument	ts		824993	1					
ANR	825732	Identifier	ts		824993	0					
ANR	825733	ExpressionStatement	free ( ts )	2753:1:84491:84500	824993	61	True				
ANR	825734	CallExpression	free ( ts )		824993	0					
ANR	825735	Callee	free		824993	0					
ANR	825736	Identifier	free		824993	0					
ANR	825737	ArgumentList	ts		824993	1					
ANR	825738	Argument	ts		824993	0					
ANR	825739	Identifier	ts		824993	0					
ANR	825740	ExpressionStatement	r_table_free ( t )	2754:1:84503:84519	824993	62	True				
ANR	825741	CallExpression	r_table_free ( t )		824993	0					
ANR	825742	Callee	r_table_free		824993	0					
ANR	825743	Identifier	r_table_free		824993	0					
ANR	825744	ArgumentList	t		824993	1					
ANR	825745	Argument	t		824993	0					
ANR	825746	Identifier	t		824993	0					
ANR	825747	ExpressionStatement	"r_core_seek ( core , oseek , true )"	2755:1:84522:84553	824993	63	True				
ANR	825748	CallExpression	"r_core_seek ( core , oseek , true )"		824993	0					
ANR	825749	Callee	r_core_seek		824993	0					
ANR	825750	Identifier	r_core_seek		824993	0					
ANR	825751	ArgumentList	core		824993	1					
ANR	825752	Argument	core		824993	0					
ANR	825753	Identifier	core		824993	0					
ANR	825754	Argument	oseek		824993	1					
ANR	825755	Identifier	oseek		824993	0					
ANR	825756	Argument	true		824993	2					
ANR	825757	Identifier	true		824993	0					
ANR	825758	ExpressionStatement	r_list_free ( dbs )	2756:1:84556:84573	824993	64	True				
ANR	825759	CallExpression	r_list_free ( dbs )		824993	0					
ANR	825760	Callee	r_list_free		824993	0					
ANR	825761	Identifier	r_list_free		824993	0					
ANR	825762	ArgumentList	dbs		824993	1					
ANR	825763	Argument	dbs		824993	0					
ANR	825764	Identifier	dbs		824993	0					
ANR	825765	ReturnType	static void		824993	1					
ANR	825766	Identifier	__core_cmd_anal_fcn_allstats		824993	2					
ANR	825767	ParameterList	"RCore * core , const char * input"		824993	3					
ANR	825768	Parameter	RCore * core	2668:41:82039:82049	824993	0	True				
ANR	825769	ParameterType	RCore *		824993	0					
ANR	825770	Identifier	core		824993	1					
ANR	825771	Parameter	const char * input	2668:54:82052:82068	824993	1	True				
ANR	825772	ParameterType	const char *		824993	0					
ANR	825773	Identifier	input		824993	1					
ANR	825774	CFGEntryNode	ENTRY		824993		True				
ANR	825775	CFGExitNode	EXIT		824993		True				
ANR	825776	CFGErrorNode	ERROR		824993		True				
ANR	825777	Symbol	* fcn		824993						
ANR	825778	Symbol	fcn -> name		824993						
ANR	825779	Symbol	sdb_free		824993						
ANR	825780	Symbol	ls		824993						
ANR	825781	Symbol	t -> cols		824993						
ANR	825782	Symbol	* input		824993						
ANR	825783	Symbol	core -> offset		824993						
ANR	825784	Symbol	* key		824993						
ANR	825785	Symbol	typeNumber		824993						
ANR	825786	Symbol	isJson		824993						
ANR	825787	Symbol	* idx		824993						
ANR	825788	Symbol	r_table_tostring		824993						
ANR	825789	Symbol	r_num_get		824993						
ANR	825790	Symbol	* * names		824993						
ANR	825791	Symbol	* * i		824993						
ANR	825792	Symbol	NULL		824993						
ANR	825793	Symbol	r_list_newf		824993						
ANR	825794	Symbol	iter		824993						
ANR	825795	Symbol	it		824993						
ANR	825796	Symbol	r_table_tojson		824993						
ANR	825797	Symbol	core		824993						
ANR	825798	Symbol	input		824993						
ANR	825799	Symbol	dbs		824993						
ANR	825800	Symbol	strstr		824993						
ANR	825801	Symbol	r_table_new		824993						
ANR	825802	Symbol	oseek		824993						
ANR	825803	Symbol	r_table_type		824993						
ANR	825804	Symbol	true		824993						
ANR	825805	Symbol	name		824993						
ANR	825806	Symbol	fcnAddr		824993						
ANR	825807	Symbol	idx		824993						
ANR	825808	Symbol	items		824993						
ANR	825809	Symbol	* core		824993						
ANR	825810	Symbol	nv		824993						
ANR	825811	Symbol	r_str_newf		824993						
ANR	825812	Symbol	core -> anal		824993						
ANR	825813	Symbol	* names		824993						
ANR	825814	Symbol	fcn		824993						
ANR	825815	Symbol	r_table_column_nth		824993						
ANR	825816	Symbol	typeString		824993						
ANR	825817	Symbol	free		824993						
ANR	825818	Symbol	value		824993						
ANR	825819	Symbol	cols		824993						
ANR	825820	Symbol	key		824993						
ANR	825821	Symbol	sdb_num_get		824993						
ANR	825822	Symbol	sdb_new0		824993						
ANR	825823	Symbol	d		824993						
ANR	825824	Symbol	sdbkv_key		824993						
ANR	825825	Symbol	false		824993						
ANR	825826	Symbol	sdb_foreach_list		824993						
ANR	825827	Symbol	i		824993						
ANR	825828	Symbol	inp		824993						
ANR	825829	Symbol	kv		824993						
ANR	825830	Symbol	sdbkv_value		824993						
ANR	825831	Symbol	names		824993						
ANR	825832	Symbol	* i		824993						
ANR	825833	Symbol	r_anal_get_fcn_in		824993						
ANR	825834	Symbol	t		824993						
ANR	825835	Symbol	fcn -> addr		824993						
ANR	825836	Symbol	strdup		824993						
ANR	825837	Symbol	db		824993						
ANR	825838	Symbol	r_list_length		824993						
ANR	825839	Symbol	* t		824993						
ANR	825840	Symbol	__core_cmd_anal_fcn_stats		824993						
ANR	825841	Symbol	ts		824993						
ANR	825842	Function	cmd_anal_fcn	2759:0:84578:110358							
ANR	825843	FunctionDef	"cmd_anal_fcn (RCore * core , const char * input)"		825842	0					
ANR	825844	CompoundStatement		2759:56:84634:110358	825842	0					
ANR	825845	IdentifierDeclStatement	char i ;	2760:1:84637:84643	825842	0	True				
ANR	825846	IdentifierDecl	i		825842	0					
ANR	825847	IdentifierDeclType	char		825842	0					
ANR	825848	Identifier	i		825842	1					
ANR	825849	ExpressionStatement	"r_cons_break_timeout ( r_config_get_i ( core -> config , ""anal.timeout"" ) )"	2762:1:84647:84715	825842	1	True				
ANR	825850	CallExpression	"r_cons_break_timeout ( r_config_get_i ( core -> config , ""anal.timeout"" ) )"		825842	0					
ANR	825851	Callee	r_cons_break_timeout		825842	0					
ANR	825852	Identifier	r_cons_break_timeout		825842	0					
ANR	825853	ArgumentList	"r_config_get_i ( core -> config , ""anal.timeout"" )"		825842	1					
ANR	825854	Argument	"r_config_get_i ( core -> config , ""anal.timeout"" )"		825842	0					
ANR	825855	CallExpression	"r_config_get_i ( core -> config , ""anal.timeout"" )"		825842	0					
ANR	825856	Callee	r_config_get_i		825842	0					
ANR	825857	Identifier	r_config_get_i		825842	0					
ANR	825858	ArgumentList	core -> config		825842	1					
ANR	825859	Argument	core -> config		825842	0					
ANR	825860	PtrMemberAccess	core -> config		825842	0					
ANR	825861	Identifier	core		825842	0					
ANR	825862	Identifier	config		825842	1					
ANR	825863	Argument	"""anal.timeout"""		825842	1					
ANR	825864	PrimaryExpression	"""anal.timeout"""		825842	0					
ANR	825865	ReturnType	static int		825842	1					
ANR	825866	Identifier	cmd_anal_fcn		825842	2					
ANR	825867	ParameterList	"RCore * core , const char * input"		825842	3					
ANR	825868	Parameter	RCore * core	2759:24:84602:84612	825842	0	True				
ANR	825869	ParameterType	RCore *		825842	0					
ANR	825870	Identifier	core		825842	1					
ANR	825871	Parameter	const char * input	2759:37:84615:84631	825842	1	True				
ANR	825872	ParameterType	const char *		825842	0					
ANR	825873	Identifier	input		825842	1					
ANR	825874	CFGEntryNode	ENTRY		825842		True				
ANR	825875	CFGExitNode	EXIT		825842		True				
ANR	825876	Symbol	core -> config		825842						
ANR	825877	Symbol	core		825842						
ANR	825878	Symbol	input		825842						
ANR	825879	Symbol	r_config_get_i		825842						
ANR	825880	Symbol	* core		825842						
ANR	825881	Symbol	i		825842						
ANR	825882	Function	__anal_reg_list	3718:0:110403:112465							
ANR	825883	FunctionDef	"__anal_reg_list (RCore * core , int type , int bits , char mode)"		825882	0					
ANR	825884	CompoundStatement		3718:72:110475:112465	825882	0					
ANR	825885	IfStatement	if ( mode == 'i' )		825882	0					
ANR	825886	Condition	mode == 'i'	3719:5:110482:110492	825882	0	True				
ANR	825887	EqualityExpression	mode == 'i'		825882	0		==			
ANR	825888	Identifier	mode		825882	0					
ANR	825889	PrimaryExpression	'i'		825882	1					
ANR	825890	CompoundStatement		2:18:19:19	825882	1					
ANR	825891	ExpressionStatement	"r_core_debug_ri ( core , core -> anal -> reg , 0 )"	3720:2:110499:110541	825882	0	True				
ANR	825892	CallExpression	"r_core_debug_ri ( core , core -> anal -> reg , 0 )"		825882	0					
ANR	825893	Callee	r_core_debug_ri		825882	0					
ANR	825894	Identifier	r_core_debug_ri		825882	0					
ANR	825895	ArgumentList	core		825882	1					
ANR	825896	Argument	core		825882	0					
ANR	825897	Identifier	core		825882	0					
ANR	825898	Argument	core -> anal -> reg		825882	1					
ANR	825899	PtrMemberAccess	core -> anal -> reg		825882	0					
ANR	825900	PtrMemberAccess	core -> anal		825882	0					
ANR	825901	Identifier	core		825882	0					
ANR	825902	Identifier	anal		825882	1					
ANR	825903	Identifier	reg		825882	1					
ANR	825904	Argument	0		825882	2					
ANR	825905	PrimaryExpression	0		825882	0					
ANR	825906	ReturnStatement	return ;	3721:2:110545:110551	825882	1	True				
ANR	825907	IdentifierDeclStatement	RReg * hack = core -> dbg -> reg ;	3723:1:110557:110584	825882	1	True				
ANR	825908	IdentifierDecl	* hack = core -> dbg -> reg		825882	0					
ANR	825909	IdentifierDeclType	RReg *		825882	0					
ANR	825910	Identifier	hack		825882	1					
ANR	825911	AssignmentExpression	* hack = core -> dbg -> reg		825882	2		=			
ANR	825912	Identifier	hack		825882	0					
ANR	825913	PtrMemberAccess	core -> dbg -> reg		825882	1					
ANR	825914	PtrMemberAccess	core -> dbg		825882	0					
ANR	825915	Identifier	core		825882	0					
ANR	825916	Identifier	dbg		825882	1					
ANR	825917	Identifier	reg		825882	1					
ANR	825918	IdentifierDeclStatement	const char * use_color ;	3724:1:110587:110608	825882	2	True				
ANR	825919	IdentifierDecl	* use_color		825882	0					
ANR	825920	IdentifierDeclType	const char *		825882	0					
ANR	825921	Identifier	use_color		825882	1					
ANR	825922	IdentifierDeclStatement	"int use_colors = r_config_get_i ( core -> config , ""scr.color"" ) ;"	3725:1:110611:110670	825882	3	True				
ANR	825923	IdentifierDecl	"use_colors = r_config_get_i ( core -> config , ""scr.color"" )"		825882	0					
ANR	825924	IdentifierDeclType	int		825882	0					
ANR	825925	Identifier	use_colors		825882	1					
ANR	825926	AssignmentExpression	"use_colors = r_config_get_i ( core -> config , ""scr.color"" )"		825882	2		=			
ANR	825927	Identifier	use_colors		825882	0					
ANR	825928	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		825882	1					
ANR	825929	Callee	r_config_get_i		825882	0					
ANR	825930	Identifier	r_config_get_i		825882	0					
ANR	825931	ArgumentList	core -> config		825882	1					
ANR	825932	Argument	core -> config		825882	0					
ANR	825933	PtrMemberAccess	core -> config		825882	0					
ANR	825934	Identifier	core		825882	0					
ANR	825935	Identifier	config		825882	1					
ANR	825936	Argument	"""scr.color"""		825882	1					
ANR	825937	PrimaryExpression	"""scr.color"""		825882	0					
ANR	825938	IfStatement	if ( use_colors )		825882	4					
ANR	825939	Condition	use_colors	3726:5:110677:110686	825882	0	True				
ANR	825940	Identifier	use_colors		825882	0					
ANR	825941	CompoundStatement		9:17:213:213	825882	1					
ANR	825942	Statement	undef	3727:1:110692:110696	825882	0	True				
ANR	825943	Statement	ConsP	3727:7:110698:110702	825882	1	True				
ANR	825944	Statement	define	3728:1:110705:110710	825882	2	True				
ANR	825945	Statement	ConsP	3728:8:110712:110716	825882	3	True				
ANR	825946	Statement	(	3728:13:110717:110717	825882	4	True				
ANR	825947	Statement	x	3728:14:110718:110718	825882	5	True				
ANR	825948	Statement	)	3728:15:110719:110719	825882	6	True				
ANR	825949	Statement	(	3728:17:110721:110721	825882	7	True				
ANR	825950	Statement	core	3728:18:110722:110725	825882	8	True				
ANR	825951	Statement	->	3728:22:110726:110727	825882	9	True				
ANR	825952	Statement	cons	3728:24:110728:110731	825882	10	True				
ANR	825953	Statement	&&	3728:29:110733:110734	825882	11	True				
ANR	825954	Statement	core	3728:32:110736:110739	825882	12	True				
ANR	825955	Statement	->	3728:36:110740:110741	825882	13	True				
ANR	825956	Statement	cons	3728:38:110742:110745	825882	14	True				
ANR	825957	Statement	->	3728:42:110746:110747	825882	15	True				
ANR	825958	Statement	context	3728:44:110748:110754	825882	16	True				
ANR	825959	Statement	->	3728:51:110755:110756	825882	17	True				
ANR	825960	Statement	pal	3728:53:110757:110759	825882	18	True				
ANR	825961	Statement	.	3728:56:110760:110760	825882	19	True				
ANR	825962	Statement	x	3728:57:110761:110761	825882	20	True				
ANR	825963	Statement	)	3728:58:110762:110762	825882	21	True				
ANR	825964	Statement	?	3728:59:110763:110763	825882	22	True				
ANR	825965	Statement	core	3728:61:110765:110768	825882	23	True				
ANR	825966	Statement	->	3728:65:110769:110770	825882	24	True				
ANR	825967	Statement	cons	3728:67:110771:110774	825882	25	True				
ANR	825968	Statement	->	3728:71:110775:110776	825882	26	True				
ANR	825969	Statement	context	3728:73:110777:110783	825882	27	True				
ANR	825970	Statement	->	3728:80:110784:110785	825882	28	True				
ANR	825971	Statement	pal	3728:82:110786:110788	825882	29	True				
ANR	825972	Statement	.	3728:85:110789:110789	825882	30	True				
ANR	825973	Statement	x	3728:86:110790:110790	825882	31	True				
ANR	825974	Statement	use_color	3729:2:110794:110802	825882	32	True				
ANR	825975	Statement	=	3729:12:110804:110804	825882	33	True				
ANR	825976	Statement	ConsP	3729:14:110806:110810	825882	34	True				
ANR	825977	Statement	(	3729:20:110812:110812	825882	35	True				
ANR	825978	Statement	creg	3729:21:110813:110816	825882	36	True				
ANR	825979	Statement	)	3729:25:110817:110817	825882	37	True				
ANR	825980	Statement	:	3729:27:110819:110819	825882	38	True				
ANR	825981	ExpressionStatement	Color_BWHITE	3729:29:110821:110833	825882	39	True				
ANR	825982	Identifier	Color_BWHITE		825882	0					
ANR	825983	ElseStatement	else		825882	0					
ANR	825984	CompoundStatement		13:8:367:367	825882	0					
ANR	825985	ExpressionStatement	use_color = NULL	3731:2:110847:110863	825882	0	True				
ANR	825986	AssignmentExpression	use_color = NULL		825882	0		=			
ANR	825987	Identifier	use_color		825882	0					
ANR	825988	Identifier	NULL		825882	1					
ANR	825989	IfStatement	if ( bits < 0 )		825882	5					
ANR	825990	Condition	bits < 0	3733:5:110873:110880	825882	0	True				
ANR	825991	RelationalExpression	bits < 0		825882	0		<			
ANR	825992	Identifier	bits		825882	0					
ANR	825993	PrimaryExpression	0		825882	1					
ANR	825994	CompoundStatement		16:15:407:407	825882	1					
ANR	825995	ExpressionStatement	bits = 0	3735:2:110983:110991	825882	0	True				
ANR	825996	AssignmentExpression	bits = 0		825882	0		=			
ANR	825997	Identifier	bits		825882	0					
ANR	825998	PrimaryExpression	0		825882	1					
ANR	825999	ElseStatement	else		825882	0					
ANR	826000	IfStatement	if ( ! bits )		825882	0					
ANR	826001	Condition	! bits	3736:12:111005:111009	825882	0	True				
ANR	826002	UnaryOperationExpression	! bits		825882	0					
ANR	826003	UnaryOperator	!		825882	0					
ANR	826004	Identifier	bits		825882	1					
ANR	826005	CompoundStatement		19:19:536:536	825882	1					
ANR	826006	ExpressionStatement	bits = core -> anal -> bits	3737:2:111016:111039	825882	0	True				
ANR	826007	AssignmentExpression	bits = core -> anal -> bits		825882	0		=			
ANR	826008	Identifier	bits		825882	0					
ANR	826009	PtrMemberAccess	core -> anal -> bits		825882	1					
ANR	826010	PtrMemberAccess	core -> anal		825882	0					
ANR	826011	Identifier	core		825882	0					
ANR	826012	Identifier	anal		825882	1					
ANR	826013	Identifier	bits		825882	1					
ANR	826014	IdentifierDeclStatement	int mode2 = mode ;	3739:1:111045:111061	825882	6	True				
ANR	826015	IdentifierDecl	mode2 = mode		825882	0					
ANR	826016	IdentifierDeclType	int		825882	0					
ANR	826017	Identifier	mode2		825882	1					
ANR	826018	AssignmentExpression	mode2 = mode		825882	2		=			
ANR	826019	Identifier	mode		825882	0					
ANR	826020	Identifier	mode		825882	1					
ANR	826021	IfStatement	if ( core -> anal )		825882	7					
ANR	826022	Condition	core -> anal	3740:5:111068:111077	825882	0	True				
ANR	826023	PtrMemberAccess	core -> anal		825882	0					
ANR	826024	Identifier	core		825882	0					
ANR	826025	Identifier	anal		825882	1					
ANR	826026	CompoundStatement		23:17:604:604	825882	1					
ANR	826027	ExpressionStatement	core -> dbg -> reg = core -> anal -> reg	3741:2:111084:111116	825882	0	True				
ANR	826028	AssignmentExpression	core -> dbg -> reg = core -> anal -> reg		825882	0		=			
ANR	826029	PtrMemberAccess	core -> dbg -> reg		825882	0					
ANR	826030	PtrMemberAccess	core -> dbg		825882	0					
ANR	826031	Identifier	core		825882	0					
ANR	826032	Identifier	dbg		825882	1					
ANR	826033	Identifier	reg		825882	1					
ANR	826034	PtrMemberAccess	core -> anal -> reg		825882	1					
ANR	826035	PtrMemberAccess	core -> anal		825882	0					
ANR	826036	Identifier	core		825882	0					
ANR	826037	Identifier	anal		825882	1					
ANR	826038	Identifier	reg		825882	1					
ANR	826039	IfStatement	if ( core -> anal -> cur && core -> anal -> cur -> arch )		825882	1					
ANR	826040	Condition	core -> anal -> cur && core -> anal -> cur -> arch	3742:6:111124:111163	825882	0	True				
ANR	826041	AndExpression	core -> anal -> cur && core -> anal -> cur -> arch		825882	0		&&			
ANR	826042	PtrMemberAccess	core -> anal -> cur		825882	0					
ANR	826043	PtrMemberAccess	core -> anal		825882	0					
ANR	826044	Identifier	core		825882	0					
ANR	826045	Identifier	anal		825882	1					
ANR	826046	Identifier	cur		825882	1					
ANR	826047	PtrMemberAccess	core -> anal -> cur -> arch		825882	1					
ANR	826048	PtrMemberAccess	core -> anal -> cur		825882	0					
ANR	826049	PtrMemberAccess	core -> anal		825882	0					
ANR	826050	Identifier	core		825882	0					
ANR	826051	Identifier	anal		825882	1					
ANR	826052	Identifier	cur		825882	1					
ANR	826053	Identifier	arch		825882	1					
ANR	826054	CompoundStatement		25:48:690:690	825882	1					
ANR	826055	IfStatement	"if ( ! strcmp ( core -> anal -> cur -> arch , ""arm"" ) && bits == 16 )"		825882	0					
ANR	826056	Condition	"! strcmp ( core -> anal -> cur -> arch , ""arm"" ) && bits == 16"	3744:7:111205:111256	825882	0	True				
ANR	826057	AndExpression	"! strcmp ( core -> anal -> cur -> arch , ""arm"" ) && bits == 16"		825882	0		&&			
ANR	826058	UnaryOperationExpression	"! strcmp ( core -> anal -> cur -> arch , ""arm"" )"		825882	0					
ANR	826059	UnaryOperator	!		825882	0					
ANR	826060	CallExpression	"strcmp ( core -> anal -> cur -> arch , ""arm"" )"		825882	1					
ANR	826061	Callee	strcmp		825882	0					
ANR	826062	Identifier	strcmp		825882	0					
ANR	826063	ArgumentList	core -> anal -> cur -> arch		825882	1					
ANR	826064	Argument	core -> anal -> cur -> arch		825882	0					
ANR	826065	PtrMemberAccess	core -> anal -> cur -> arch		825882	0					
ANR	826066	PtrMemberAccess	core -> anal -> cur		825882	0					
ANR	826067	PtrMemberAccess	core -> anal		825882	0					
ANR	826068	Identifier	core		825882	0					
ANR	826069	Identifier	anal		825882	1					
ANR	826070	Identifier	cur		825882	1					
ANR	826071	Identifier	arch		825882	1					
ANR	826072	Argument	"""arm"""		825882	1					
ANR	826073	PrimaryExpression	"""arm"""		825882	0					
ANR	826074	EqualityExpression	bits == 16		825882	1		==			
ANR	826075	Identifier	bits		825882	0					
ANR	826076	PrimaryExpression	16		825882	1					
ANR	826077	CompoundStatement		27:61:783:783	825882	1					
ANR	826078	ExpressionStatement	bits = 32	3745:4:111265:111274	825882	0	True				
ANR	826079	AssignmentExpression	bits = 32		825882	0		=			
ANR	826080	Identifier	bits		825882	0					
ANR	826081	PrimaryExpression	32		825882	1					
ANR	826082	IfStatement	"if ( ! strcmp ( core -> anal -> cur -> arch , ""6502"" ) && bits == 8 )"		825882	1					
ANR	826083	Condition	"! strcmp ( core -> anal -> cur -> arch , ""6502"" ) && bits == 8"	3748:7:111317:111368	825882	0	True				
ANR	826084	AndExpression	"! strcmp ( core -> anal -> cur -> arch , ""6502"" ) && bits == 8"		825882	0		&&			
ANR	826085	UnaryOperationExpression	"! strcmp ( core -> anal -> cur -> arch , ""6502"" )"		825882	0					
ANR	826086	UnaryOperator	!		825882	0					
ANR	826087	CallExpression	"strcmp ( core -> anal -> cur -> arch , ""6502"" )"		825882	1					
ANR	826088	Callee	strcmp		825882	0					
ANR	826089	Identifier	strcmp		825882	0					
ANR	826090	ArgumentList	core -> anal -> cur -> arch		825882	1					
ANR	826091	Argument	core -> anal -> cur -> arch		825882	0					
ANR	826092	PtrMemberAccess	core -> anal -> cur -> arch		825882	0					
ANR	826093	PtrMemberAccess	core -> anal -> cur		825882	0					
ANR	826094	PtrMemberAccess	core -> anal		825882	0					
ANR	826095	Identifier	core		825882	0					
ANR	826096	Identifier	anal		825882	1					
ANR	826097	Identifier	cur		825882	1					
ANR	826098	Identifier	arch		825882	1					
ANR	826099	Argument	"""6502"""		825882	1					
ANR	826100	PrimaryExpression	"""6502"""		825882	0					
ANR	826101	EqualityExpression	bits == 8		825882	1		==			
ANR	826102	Identifier	bits		825882	0					
ANR	826103	PrimaryExpression	8		825882	1					
ANR	826104	CompoundStatement		31:61:895:895	825882	1					
ANR	826105	ExpressionStatement	mode2 = mode == 'j' ? 'J' : mode	3749:4:111377:111409	825882	0	True				
ANR	826106	AssignmentExpression	mode2 = mode == 'j' ? 'J' : mode		825882	0		=			
ANR	826107	Identifier	mode2		825882	0					
ANR	826108	ConditionalExpression	mode == 'j' ? 'J' : mode		825882	1					
ANR	826109	Condition	mode == 'j'		825882	0					
ANR	826110	EqualityExpression	mode == 'j'		825882	0		==			
ANR	826111	Identifier	mode		825882	0					
ANR	826112	PrimaryExpression	'j'		825882	1					
ANR	826113	PrimaryExpression	'J'		825882	1					
ANR	826114	Identifier	mode		825882	2					
ANR	826115	IfStatement	if ( mode == 'j' )		825882	1					
ANR	826116	Condition	mode == 'j'	3750:8:111419:111429	825882	0	True				
ANR	826117	EqualityExpression	mode == 'j'		825882	0		==			
ANR	826118	Identifier	mode		825882	0					
ANR	826119	PrimaryExpression	'j'		825882	1					
ANR	826120	CompoundStatement		33:21:956:956	825882	1					
ANR	826121	ExpressionStatement	"r_cons_printf ( ""{"" )"	3751:5:111439:111458	825882	0	True				
ANR	826122	CallExpression	"r_cons_printf ( ""{"" )"		825882	0					
ANR	826123	Callee	r_cons_printf		825882	0					
ANR	826124	Identifier	r_cons_printf		825882	0					
ANR	826125	ArgumentList	"""{"""		825882	1					
ANR	826126	Argument	"""{"""		825882	0					
ANR	826127	PrimaryExpression	"""{"""		825882	0					
ANR	826128	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , 16 , mode2 , use_color )"	3753:4:111470:111536	825882	2	True				
ANR	826129	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , 16 , mode2 , use_color )"		825882	0					
ANR	826130	Callee	r_debug_reg_list		825882	0					
ANR	826131	Identifier	r_debug_reg_list		825882	0					
ANR	826132	ArgumentList	core -> dbg		825882	1					
ANR	826133	Argument	core -> dbg		825882	0					
ANR	826134	PtrMemberAccess	core -> dbg		825882	0					
ANR	826135	Identifier	core		825882	0					
ANR	826136	Identifier	dbg		825882	1					
ANR	826137	Argument	R_REG_TYPE_GPR		825882	1					
ANR	826138	Identifier	R_REG_TYPE_GPR		825882	0					
ANR	826139	Argument	16		825882	2					
ANR	826140	PrimaryExpression	16		825882	0					
ANR	826141	Argument	mode2		825882	3					
ANR	826142	Identifier	mode2		825882	0					
ANR	826143	Argument	use_color		825882	4					
ANR	826144	Identifier	use_color		825882	0					
ANR	826145	IfStatement	if ( mode == 'j' )		825882	3					
ANR	826146	Condition	mode == 'j'	3754:8:111587:111597	825882	0	True				
ANR	826147	EqualityExpression	mode == 'j'		825882	0		==			
ANR	826148	Identifier	mode		825882	0					
ANR	826149	PrimaryExpression	'j'		825882	1					
ANR	826150	CompoundStatement		37:21:1124:1124	825882	1					
ANR	826151	ExpressionStatement	"r_cons_printf ( "","" )"	3755:5:111607:111626	825882	0	True				
ANR	826152	CallExpression	"r_cons_printf ( "","" )"		825882	0					
ANR	826153	Callee	r_cons_printf		825882	0					
ANR	826154	Identifier	r_cons_printf		825882	0					
ANR	826155	ArgumentList	""","""		825882	1					
ANR	826156	Argument	""","""		825882	0					
ANR	826157	PrimaryExpression	""","""		825882	0					
ANR	826158	IfStatement	"if ( ! strcmp ( core -> anal -> cur -> arch , ""avr"" ) && bits == 8 )"		825882	2					
ANR	826159	Condition	"! strcmp ( core -> anal -> cur -> arch , ""avr"" ) && bits == 8"	3758:7:111646:111696	825882	0	True				
ANR	826160	AndExpression	"! strcmp ( core -> anal -> cur -> arch , ""avr"" ) && bits == 8"		825882	0		&&			
ANR	826161	UnaryOperationExpression	"! strcmp ( core -> anal -> cur -> arch , ""avr"" )"		825882	0					
ANR	826162	UnaryOperator	!		825882	0					
ANR	826163	CallExpression	"strcmp ( core -> anal -> cur -> arch , ""avr"" )"		825882	1					
ANR	826164	Callee	strcmp		825882	0					
ANR	826165	Identifier	strcmp		825882	0					
ANR	826166	ArgumentList	core -> anal -> cur -> arch		825882	1					
ANR	826167	Argument	core -> anal -> cur -> arch		825882	0					
ANR	826168	PtrMemberAccess	core -> anal -> cur -> arch		825882	0					
ANR	826169	PtrMemberAccess	core -> anal -> cur		825882	0					
ANR	826170	PtrMemberAccess	core -> anal		825882	0					
ANR	826171	Identifier	core		825882	0					
ANR	826172	Identifier	anal		825882	1					
ANR	826173	Identifier	cur		825882	1					
ANR	826174	Identifier	arch		825882	1					
ANR	826175	Argument	"""avr"""		825882	1					
ANR	826176	PrimaryExpression	"""avr"""		825882	0					
ANR	826177	EqualityExpression	bits == 8		825882	1		==			
ANR	826178	Identifier	bits		825882	0					
ANR	826179	PrimaryExpression	8		825882	1					
ANR	826180	CompoundStatement		41:60:1223:1223	825882	1					
ANR	826181	ExpressionStatement	mode2 = mode == 'j' ? 'J' : mode	3759:4:111705:111737	825882	0	True				
ANR	826182	AssignmentExpression	mode2 = mode == 'j' ? 'J' : mode		825882	0		=			
ANR	826183	Identifier	mode2		825882	0					
ANR	826184	ConditionalExpression	mode == 'j' ? 'J' : mode		825882	1					
ANR	826185	Condition	mode == 'j'		825882	0					
ANR	826186	EqualityExpression	mode == 'j'		825882	0		==			
ANR	826187	Identifier	mode		825882	0					
ANR	826188	PrimaryExpression	'j'		825882	1					
ANR	826189	PrimaryExpression	'J'		825882	1					
ANR	826190	Identifier	mode		825882	2					
ANR	826191	IfStatement	if ( mode == 'j' )		825882	1					
ANR	826192	Condition	mode == 'j'	3760:8:111747:111757	825882	0	True				
ANR	826193	EqualityExpression	mode == 'j'		825882	0		==			
ANR	826194	Identifier	mode		825882	0					
ANR	826195	PrimaryExpression	'j'		825882	1					
ANR	826196	CompoundStatement		43:21:1284:1284	825882	1					
ANR	826197	ExpressionStatement	"r_cons_printf ( ""{"" )"	3761:5:111767:111786	825882	0	True				
ANR	826198	CallExpression	"r_cons_printf ( ""{"" )"		825882	0					
ANR	826199	Callee	r_cons_printf		825882	0					
ANR	826200	Identifier	r_cons_printf		825882	0					
ANR	826201	ArgumentList	"""{"""		825882	1					
ANR	826202	Argument	"""{"""		825882	0					
ANR	826203	PrimaryExpression	"""{"""		825882	0					
ANR	826204	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , 16 , mode2 , use_color )"	3763:4:111798:111864	825882	2	True				
ANR	826205	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , 16 , mode2 , use_color )"		825882	0					
ANR	826206	Callee	r_debug_reg_list		825882	0					
ANR	826207	Identifier	r_debug_reg_list		825882	0					
ANR	826208	ArgumentList	core -> dbg		825882	1					
ANR	826209	Argument	core -> dbg		825882	0					
ANR	826210	PtrMemberAccess	core -> dbg		825882	0					
ANR	826211	Identifier	core		825882	0					
ANR	826212	Identifier	dbg		825882	1					
ANR	826213	Argument	R_REG_TYPE_GPR		825882	1					
ANR	826214	Identifier	R_REG_TYPE_GPR		825882	0					
ANR	826215	Argument	16		825882	2					
ANR	826216	PrimaryExpression	16		825882	0					
ANR	826217	Argument	mode2		825882	3					
ANR	826218	Identifier	mode2		825882	0					
ANR	826219	Argument	use_color		825882	4					
ANR	826220	Identifier	use_color		825882	0					
ANR	826221	IfStatement	if ( mode == 'j' )		825882	3					
ANR	826222	Condition	mode == 'j'	3764:8:111915:111925	825882	0	True				
ANR	826223	EqualityExpression	mode == 'j'		825882	0		==			
ANR	826224	Identifier	mode		825882	0					
ANR	826225	PrimaryExpression	'j'		825882	1					
ANR	826226	CompoundStatement		47:21:1452:1452	825882	1					
ANR	826227	ExpressionStatement	"r_cons_printf ( "","" )"	3765:5:111935:111954	825882	0	True				
ANR	826228	CallExpression	"r_cons_printf ( "","" )"		825882	0					
ANR	826229	Callee	r_cons_printf		825882	0					
ANR	826230	Identifier	r_cons_printf		825882	0					
ANR	826231	ArgumentList	""","""		825882	1					
ANR	826232	Argument	""","""		825882	0					
ANR	826233	PrimaryExpression	""","""		825882	0					
ANR	826234	IfStatement	if ( mode == '=' )		825882	8					
ANR	826235	Condition	mode == '='	3771:5:111980:111990	825882	0	True				
ANR	826236	EqualityExpression	mode == '='		825882	0		==			
ANR	826237	Identifier	mode		825882	0					
ANR	826238	PrimaryExpression	'='		825882	1					
ANR	826239	CompoundStatement		57:2:1611:1665	825882	1					
ANR	826240	IdentifierDeclStatement	int pcbits = 0 ;	3772:2:111997:112011	825882	0	True				
ANR	826241	IdentifierDecl	pcbits = 0		825882	0					
ANR	826242	IdentifierDeclType	int		825882	0					
ANR	826243	Identifier	pcbits		825882	1					
ANR	826244	AssignmentExpression	pcbits = 0		825882	2		=			
ANR	826245	Identifier	pcbits		825882	0					
ANR	826246	PrimaryExpression	0		825882	1					
ANR	826247	IdentifierDeclStatement	"const char * pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	3773:2:112015:112083	825882	1	True				
ANR	826248	IdentifierDecl	"* pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		825882	0					
ANR	826249	IdentifierDeclType	const char *		825882	0					
ANR	826250	Identifier	pcname		825882	1					
ANR	826251	AssignmentExpression	"* pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		825882	2		=			
ANR	826252	Identifier	pcname		825882	0					
ANR	826253	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		825882	1					
ANR	826254	Callee	r_reg_get_name		825882	0					
ANR	826255	Identifier	r_reg_get_name		825882	0					
ANR	826256	ArgumentList	core -> anal -> reg		825882	1					
ANR	826257	Argument	core -> anal -> reg		825882	0					
ANR	826258	PtrMemberAccess	core -> anal -> reg		825882	0					
ANR	826259	PtrMemberAccess	core -> anal		825882	0					
ANR	826260	Identifier	core		825882	0					
ANR	826261	Identifier	anal		825882	1					
ANR	826262	Identifier	reg		825882	1					
ANR	826263	Argument	R_REG_NAME_PC		825882	1					
ANR	826264	Identifier	R_REG_NAME_PC		825882	0					
ANR	826265	IdentifierDeclStatement	"RRegItem * reg = r_reg_get ( core -> anal -> reg , pcname , 0 ) ;"	3774:2:112087:112141	825882	2	True				
ANR	826266	IdentifierDecl	"* reg = r_reg_get ( core -> anal -> reg , pcname , 0 )"		825882	0					
ANR	826267	IdentifierDeclType	RRegItem *		825882	0					
ANR	826268	Identifier	reg		825882	1					
ANR	826269	AssignmentExpression	"* reg = r_reg_get ( core -> anal -> reg , pcname , 0 )"		825882	2		=			
ANR	826270	Identifier	reg		825882	0					
ANR	826271	CallExpression	"r_reg_get ( core -> anal -> reg , pcname , 0 )"		825882	1					
ANR	826272	Callee	r_reg_get		825882	0					
ANR	826273	Identifier	r_reg_get		825882	0					
ANR	826274	ArgumentList	core -> anal -> reg		825882	1					
ANR	826275	Argument	core -> anal -> reg		825882	0					
ANR	826276	PtrMemberAccess	core -> anal -> reg		825882	0					
ANR	826277	PtrMemberAccess	core -> anal		825882	0					
ANR	826278	Identifier	core		825882	0					
ANR	826279	Identifier	anal		825882	1					
ANR	826280	Identifier	reg		825882	1					
ANR	826281	Argument	pcname		825882	1					
ANR	826282	Identifier	pcname		825882	0					
ANR	826283	Argument	0		825882	2					
ANR	826284	PrimaryExpression	0		825882	0					
ANR	826285	IfStatement	if ( bits != reg -> size )		825882	3					
ANR	826286	Condition	bits != reg -> size	3775:6:112149:112165	825882	0	True				
ANR	826287	EqualityExpression	bits != reg -> size		825882	0		!=			
ANR	826288	Identifier	bits		825882	0					
ANR	826289	PtrMemberAccess	reg -> size		825882	1					
ANR	826290	Identifier	reg		825882	0					
ANR	826291	Identifier	size		825882	1					
ANR	826292	CompoundStatement		58:25:1692:1692	825882	1					
ANR	826293	ExpressionStatement	pcbits = reg -> size	3776:3:112173:112191	825882	0	True				
ANR	826294	AssignmentExpression	pcbits = reg -> size		825882	0		=			
ANR	826295	Identifier	pcbits		825882	0					
ANR	826296	PtrMemberAccess	reg -> size		825882	1					
ANR	826297	Identifier	reg		825882	0					
ANR	826298	Identifier	size		825882	1					
ANR	826299	IfStatement	if ( pcbits )		825882	4					
ANR	826300	Condition	pcbits	3778:6:112203:112208	825882	0	True				
ANR	826301	Identifier	pcbits		825882	0					
ANR	826302	CompoundStatement		61:14:1735:1735	825882	1					
ANR	826303	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , 2 , use_color )"	3779:3:112216:112282	825882	0	True				
ANR	826304	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , 2 , use_color )"		825882	0					
ANR	826305	Callee	r_debug_reg_list		825882	0					
ANR	826306	Identifier	r_debug_reg_list		825882	0					
ANR	826307	ArgumentList	core -> dbg		825882	1					
ANR	826308	Argument	core -> dbg		825882	0					
ANR	826309	PtrMemberAccess	core -> dbg		825882	0					
ANR	826310	Identifier	core		825882	0					
ANR	826311	Identifier	dbg		825882	1					
ANR	826312	Argument	R_REG_TYPE_GPR		825882	1					
ANR	826313	Identifier	R_REG_TYPE_GPR		825882	0					
ANR	826314	Argument	pcbits		825882	2					
ANR	826315	Identifier	pcbits		825882	0					
ANR	826316	Argument	2		825882	3					
ANR	826317	PrimaryExpression	2		825882	0					
ANR	826318	Argument	use_color		825882	4					
ANR	826319	Identifier	use_color		825882	0					
ANR	826320	ExpressionStatement	"r_debug_reg_list ( core -> dbg , type , bits , mode2 , use_color )"	3782:1:112333:112391	825882	9	True				
ANR	826321	CallExpression	"r_debug_reg_list ( core -> dbg , type , bits , mode2 , use_color )"		825882	0					
ANR	826322	Callee	r_debug_reg_list		825882	0					
ANR	826323	Identifier	r_debug_reg_list		825882	0					
ANR	826324	ArgumentList	core -> dbg		825882	1					
ANR	826325	Argument	core -> dbg		825882	0					
ANR	826326	PtrMemberAccess	core -> dbg		825882	0					
ANR	826327	Identifier	core		825882	0					
ANR	826328	Identifier	dbg		825882	1					
ANR	826329	Argument	type		825882	1					
ANR	826330	Identifier	type		825882	0					
ANR	826331	Argument	bits		825882	2					
ANR	826332	Identifier	bits		825882	0					
ANR	826333	Argument	mode2		825882	3					
ANR	826334	Identifier	mode2		825882	0					
ANR	826335	Argument	use_color		825882	4					
ANR	826336	Identifier	use_color		825882	0					
ANR	826337	IfStatement	if ( mode2 == 'J' )		825882	10					
ANR	826338	Condition	mode2 == 'J'	3783:5:112398:112409	825882	0	True				
ANR	826339	EqualityExpression	mode2 == 'J'		825882	0		==			
ANR	826340	Identifier	mode2		825882	0					
ANR	826341	PrimaryExpression	'J'		825882	1					
ANR	826342	CompoundStatement		66:19:1936:1936	825882	1					
ANR	826343	ExpressionStatement	"r_cons_print ( ""}\\n"" )"	3784:2:112416:112436	825882	0	True				
ANR	826344	CallExpression	"r_cons_print ( ""}\\n"" )"		825882	0					
ANR	826345	Callee	r_cons_print		825882	0					
ANR	826346	Identifier	r_cons_print		825882	0					
ANR	826347	ArgumentList	"""}\\n"""		825882	1					
ANR	826348	Argument	"""}\\n"""		825882	0					
ANR	826349	PrimaryExpression	"""}\\n"""		825882	0					
ANR	826350	ExpressionStatement	core -> dbg -> reg = hack	3786:1:112442:112463	825882	11	True				
ANR	826351	AssignmentExpression	core -> dbg -> reg = hack		825882	0		=			
ANR	826352	PtrMemberAccess	core -> dbg -> reg		825882	0					
ANR	826353	PtrMemberAccess	core -> dbg		825882	0					
ANR	826354	Identifier	core		825882	0					
ANR	826355	Identifier	dbg		825882	1					
ANR	826356	Identifier	reg		825882	1					
ANR	826357	Identifier	hack		825882	1					
ANR	826358	ReturnType	static void		825882	1					
ANR	826359	Identifier	__anal_reg_list		825882	2					
ANR	826360	ParameterList	"RCore * core , int type , int bits , char mode"		825882	3					
ANR	826361	Parameter	RCore * core	3718:28:110431:110441	825882	0	True				
ANR	826362	ParameterType	RCore *		825882	0					
ANR	826363	Identifier	core		825882	1					
ANR	826364	Parameter	int type	3718:41:110444:110451	825882	1	True				
ANR	826365	ParameterType	int		825882	0					
ANR	826366	Identifier	type		825882	1					
ANR	826367	Parameter	int bits	3718:51:110454:110461	825882	2	True				
ANR	826368	ParameterType	int		825882	0					
ANR	826369	Identifier	bits		825882	1					
ANR	826370	Parameter	char mode	3718:61:110464:110472	825882	3	True				
ANR	826371	ParameterType	char		825882	0					
ANR	826372	Identifier	mode		825882	1					
ANR	826373	CFGEntryNode	ENTRY		825882		True				
ANR	826374	CFGExitNode	EXIT		825882		True				
ANR	826375	Symbol	core -> anal -> reg		825882						
ANR	826376	Symbol	R_REG_NAME_PC		825882						
ANR	826377	Symbol	* core		825882						
ANR	826378	Symbol	type		825882						
ANR	826379	Symbol	core -> anal		825882						
ANR	826380	Symbol	mode		825882						
ANR	826381	Symbol	hack		825882						
ANR	826382	Symbol	core -> anal -> cur -> arch		825882						
ANR	826383	Symbol	core -> anal -> cur		825882						
ANR	826384	Symbol	reg		825882						
ANR	826385	Symbol	* * core -> anal		825882						
ANR	826386	Symbol	mode2		825882						
ANR	826387	Symbol	* * core		825882						
ANR	826388	Symbol	R_REG_TYPE_GPR		825882						
ANR	826389	Symbol	r_reg_get		825882						
ANR	826390	Symbol	core -> config		825882						
ANR	826391	Symbol	strcmp		825882						
ANR	826392	Symbol	core -> anal -> bits		825882						
ANR	826393	Symbol	NULL		825882						
ANR	826394	Symbol	* core -> anal -> cur		825882						
ANR	826395	Symbol	bits		825882						
ANR	826396	Symbol	use_color		825882						
ANR	826397	Symbol	core		825882						
ANR	826398	Symbol	* * * core		825882						
ANR	826399	Symbol	* core -> anal		825882						
ANR	826400	Symbol	r_reg_get_name		825882						
ANR	826401	Symbol	core -> dbg -> reg		825882						
ANR	826402	Symbol	r_config_get_i		825882						
ANR	826403	Symbol	pcbits		825882						
ANR	826404	Symbol	reg -> size		825882						
ANR	826405	Symbol	use_colors		825882						
ANR	826406	Symbol	pcname		825882						
ANR	826407	Symbol	* core -> dbg		825882						
ANR	826408	Symbol	* reg		825882						
ANR	826409	Symbol	core -> dbg		825882						
ANR	826410	Function	cmd_anal_reg	3790:0:112493:121951							
ANR	826411	FunctionDef	"cmd_anal_reg (RCore * core , const char * str)"		826410	0					
ANR	826412	CompoundStatement		3790:48:112541:121951	826410	0					
ANR	826413	IfStatement	if ( 0 )		826410	0					
ANR	826414	Condition	0	3791:5:112548:112548	826410	0	True				
ANR	826415	PrimaryExpression	0		826410	0					
ANR	826416	CompoundStatement		6:2:176:202	826410	1					
ANR	826417	IdentifierDeclStatement	RReg * reg = core -> dbg -> reg ;	3795:2:112718:112744	826410	0	True				
ANR	826418	IdentifierDecl	* reg = core -> dbg -> reg		826410	0					
ANR	826419	IdentifierDeclType	RReg *		826410	0					
ANR	826420	Identifier	reg		826410	1					
ANR	826421	AssignmentExpression	* reg = core -> dbg -> reg		826410	2		=			
ANR	826422	Identifier	reg		826410	0					
ANR	826423	PtrMemberAccess	core -> dbg -> reg		826410	1					
ANR	826424	PtrMemberAccess	core -> dbg		826410	0					
ANR	826425	Identifier	core		826410	0					
ANR	826426	Identifier	dbg		826410	1					
ANR	826427	Identifier	reg		826410	1					
ANR	826428	ExpressionStatement	core -> dbg -> reg = core -> anal -> reg	3796:2:112748:112780	826410	1	True				
ANR	826429	AssignmentExpression	core -> dbg -> reg = core -> anal -> reg		826410	0		=			
ANR	826430	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	826431	PtrMemberAccess	core -> dbg		826410	0					
ANR	826432	Identifier	core		826410	0					
ANR	826433	Identifier	dbg		826410	1					
ANR	826434	Identifier	reg		826410	1					
ANR	826435	PtrMemberAccess	core -> anal -> reg		826410	1					
ANR	826436	PtrMemberAccess	core -> anal		826410	0					
ANR	826437	Identifier	core		826410	0					
ANR	826438	Identifier	anal		826410	1					
ANR	826439	Identifier	reg		826410	1					
ANR	826440	ExpressionStatement	"cmd_debug_reg ( core , str )"	3797:2:112784:112809	826410	2	True				
ANR	826441	CallExpression	"cmd_debug_reg ( core , str )"		826410	0					
ANR	826442	Callee	cmd_debug_reg		826410	0					
ANR	826443	Identifier	cmd_debug_reg		826410	0					
ANR	826444	ArgumentList	core		826410	1					
ANR	826445	Argument	core		826410	0					
ANR	826446	Identifier	core		826410	0					
ANR	826447	Argument	str		826410	1					
ANR	826448	Identifier	str		826410	0					
ANR	826449	ExpressionStatement	core -> dbg -> reg = reg	3798:2:112813:112833	826410	3	True				
ANR	826450	AssignmentExpression	core -> dbg -> reg = reg		826410	0		=			
ANR	826451	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	826452	PtrMemberAccess	core -> dbg		826410	0					
ANR	826453	Identifier	core		826410	0					
ANR	826454	Identifier	dbg		826410	1					
ANR	826455	Identifier	reg		826410	1					
ANR	826456	Identifier	reg		826410	1					
ANR	826457	ReturnStatement	return ;	3799:2:112837:112843	826410	4	True				
ANR	826458	IdentifierDeclStatement	"int size = 0 , i , type = R_REG_TYPE_GPR ;"	3802:1:112850:112888	826410	1	True				
ANR	826459	IdentifierDecl	size = 0		826410	0					
ANR	826460	IdentifierDeclType	int		826410	0					
ANR	826461	Identifier	size		826410	1					
ANR	826462	AssignmentExpression	size = 0		826410	2		=			
ANR	826463	Identifier	size		826410	0					
ANR	826464	PrimaryExpression	0		826410	1					
ANR	826465	IdentifierDecl	i		826410	1					
ANR	826466	IdentifierDeclType	int		826410	0					
ANR	826467	Identifier	i		826410	1					
ANR	826468	IdentifierDecl	type = R_REG_TYPE_GPR		826410	2					
ANR	826469	IdentifierDeclType	int		826410	0					
ANR	826470	Identifier	type		826410	1					
ANR	826471	AssignmentExpression	type = R_REG_TYPE_GPR		826410	2		=			
ANR	826472	Identifier	R_REG_TYPE_GPR		826410	0					
ANR	826473	Identifier	R_REG_TYPE_GPR		826410	1					
ANR	826474	IdentifierDeclStatement	int bits = ( core -> anal -> bits & R_SYS_BITS_64 ) ? 64 : 32 ;	3803:1:112891:112944	826410	2	True				
ANR	826475	IdentifierDecl	bits = ( core -> anal -> bits & R_SYS_BITS_64 ) ? 64 : 32		826410	0					
ANR	826476	IdentifierDeclType	int		826410	0					
ANR	826477	Identifier	bits		826410	1					
ANR	826478	AssignmentExpression	bits = ( core -> anal -> bits & R_SYS_BITS_64 ) ? 64 : 32		826410	2		=			
ANR	826479	Identifier	bits		826410	0					
ANR	826480	ConditionalExpression	( core -> anal -> bits & R_SYS_BITS_64 ) ? 64 : 32		826410	1					
ANR	826481	Condition	core -> anal -> bits & R_SYS_BITS_64		826410	0					
ANR	826482	BitAndExpression	core -> anal -> bits & R_SYS_BITS_64		826410	0		&			
ANR	826483	PtrMemberAccess	core -> anal -> bits		826410	0					
ANR	826484	PtrMemberAccess	core -> anal		826410	0					
ANR	826485	Identifier	core		826410	0					
ANR	826486	Identifier	anal		826410	1					
ANR	826487	Identifier	bits		826410	1					
ANR	826488	Identifier	R_SYS_BITS_64		826410	1					
ANR	826489	PrimaryExpression	64		826410	1					
ANR	826490	PrimaryExpression	32		826410	2					
ANR	826491	IdentifierDeclStatement	"int use_colors = r_config_get_i ( core -> config , ""scr.color"" ) ;"	3804:1:112947:113006	826410	3	True				
ANR	826492	IdentifierDecl	"use_colors = r_config_get_i ( core -> config , ""scr.color"" )"		826410	0					
ANR	826493	IdentifierDeclType	int		826410	0					
ANR	826494	Identifier	use_colors		826410	1					
ANR	826495	AssignmentExpression	"use_colors = r_config_get_i ( core -> config , ""scr.color"" )"		826410	2		=			
ANR	826496	Identifier	use_colors		826410	0					
ANR	826497	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		826410	1					
ANR	826498	Callee	r_config_get_i		826410	0					
ANR	826499	Identifier	r_config_get_i		826410	0					
ANR	826500	ArgumentList	core -> config		826410	1					
ANR	826501	Argument	core -> config		826410	0					
ANR	826502	PtrMemberAccess	core -> config		826410	0					
ANR	826503	Identifier	core		826410	0					
ANR	826504	Identifier	config		826410	1					
ANR	826505	Argument	"""scr.color"""		826410	1					
ANR	826506	PrimaryExpression	"""scr.color"""		826410	0					
ANR	826507	IdentifierDeclStatement	RRegItem * r ;	3805:1:113009:113020	826410	4	True				
ANR	826508	IdentifierDecl	* r		826410	0					
ANR	826509	IdentifierDeclType	RRegItem *		826410	0					
ANR	826510	Identifier	r		826410	1					
ANR	826511	IdentifierDeclStatement	const char * use_color ;	3806:1:113023:113044	826410	5	True				
ANR	826512	IdentifierDecl	* use_color		826410	0					
ANR	826513	IdentifierDeclType	const char *		826410	0					
ANR	826514	Identifier	use_color		826410	1					
ANR	826515	IdentifierDeclStatement	const char * name ;	3807:1:113047:113063	826410	6	True				
ANR	826516	IdentifierDecl	* name		826410	0					
ANR	826517	IdentifierDeclType	const char *		826410	0					
ANR	826518	Identifier	name		826410	1					
ANR	826519	IdentifierDeclStatement	char * arg ;	3808:1:113066:113075	826410	7	True				
ANR	826520	IdentifierDecl	* arg		826410	0					
ANR	826521	IdentifierDeclType	char *		826410	0					
ANR	826522	Identifier	arg		826410	1					
ANR	826523	IfStatement	if ( use_colors )		826410	8					
ANR	826524	Condition	use_colors	3810:5:113083:113092	826410	0	True				
ANR	826525	Identifier	use_colors		826410	0					
ANR	826526	CompoundStatement		21:17:553:553	826410	1					
ANR	826527	Statement	define	3811:1:113098:113103	826410	0	True				
ANR	826528	Statement	ConsP	3811:8:113105:113109	826410	1	True				
ANR	826529	Statement	(	3811:13:113110:113110	826410	2	True				
ANR	826530	Statement	x	3811:14:113111:113111	826410	3	True				
ANR	826531	Statement	)	3811:15:113112:113112	826410	4	True				
ANR	826532	Statement	(	3811:17:113114:113114	826410	5	True				
ANR	826533	Statement	core	3811:18:113115:113118	826410	6	True				
ANR	826534	Statement	->	3811:22:113119:113120	826410	7	True				
ANR	826535	Statement	cons	3811:24:113121:113124	826410	8	True				
ANR	826536	Statement	&&	3811:29:113126:113127	826410	9	True				
ANR	826537	Statement	core	3811:32:113129:113132	826410	10	True				
ANR	826538	Statement	->	3811:36:113133:113134	826410	11	True				
ANR	826539	Statement	cons	3811:38:113135:113138	826410	12	True				
ANR	826540	Statement	->	3811:42:113139:113140	826410	13	True				
ANR	826541	Statement	context	3811:44:113141:113147	826410	14	True				
ANR	826542	Statement	->	3811:51:113148:113149	826410	15	True				
ANR	826543	Statement	pal	3811:53:113150:113152	826410	16	True				
ANR	826544	Statement	.	3811:56:113153:113153	826410	17	True				
ANR	826545	Statement	x	3811:57:113154:113154	826410	18	True				
ANR	826546	Statement	)	3811:58:113155:113155	826410	19	True				
ANR	826547	Statement	?	3811:59:113156:113156	826410	20	True				
ANR	826548	Statement	core	3811:61:113158:113161	826410	21	True				
ANR	826549	Statement	->	3811:65:113162:113163	826410	22	True				
ANR	826550	Statement	cons	3811:67:113164:113167	826410	23	True				
ANR	826551	Statement	->	3811:71:113168:113169	826410	24	True				
ANR	826552	Statement	context	3811:73:113170:113176	826410	25	True				
ANR	826553	Statement	->	3811:80:113177:113178	826410	26	True				
ANR	826554	Statement	pal	3811:82:113179:113181	826410	27	True				
ANR	826555	Statement	.	3811:85:113182:113182	826410	28	True				
ANR	826556	Statement	x	3811:86:113183:113183	826410	29	True				
ANR	826557	Statement	use_color	3812:2:113187:113195	826410	30	True				
ANR	826558	Statement	=	3812:12:113197:113197	826410	31	True				
ANR	826559	Statement	ConsP	3812:14:113199:113203	826410	32	True				
ANR	826560	Statement	(	3812:20:113205:113205	826410	33	True				
ANR	826561	Statement	creg	3812:21:113206:113209	826410	34	True				
ANR	826562	Statement	)	3812:25:113210:113210	826410	35	True				
ANR	826563	Statement	:	3813:2:113214:113214	826410	36	True				
ANR	826564	ExpressionStatement	Color_BWHITE	3813:4:113216:113228	826410	37	True				
ANR	826565	Identifier	Color_BWHITE		826410	0					
ANR	826566	ElseStatement	else		826410	0					
ANR	826567	CompoundStatement		25:8:696:696	826410	0					
ANR	826568	ExpressionStatement	use_color = NULL	3815:2:113242:113258	826410	0	True				
ANR	826569	AssignmentExpression	use_color = NULL		826410	0		=			
ANR	826570	Identifier	use_color		826410	0					
ANR	826571	Identifier	NULL		826410	1					
ANR	826572	SwitchStatement	switch ( str [ 0 ] )		826410	9					
ANR	826573	Condition	str [ 0 ]	3817:9:113272:113277	826410	0	True				
ANR	826574	ArrayIndexing	str [ 0 ]		826410	0					
ANR	826575	Identifier	str		826410	0					
ANR	826576	PrimaryExpression	0		826410	1					
ANR	826577	CompoundStatement		28:17:738:738	826410	1					
ANR	826578	Label	case 'l' :	3818:1:113283:113291	826410	0	True				
ANR	826579	CompoundStatement		31:2:765:829	826410	1					
ANR	826580	IdentifierDeclStatement	"RRegSet * rs = r_reg_regset_get ( core -> anal -> reg , R_REG_TYPE_GPR ) ;"	3820:2:113307:113371	826410	0	True				
ANR	826581	IdentifierDecl	"* rs = r_reg_regset_get ( core -> anal -> reg , R_REG_TYPE_GPR )"		826410	0					
ANR	826582	IdentifierDeclType	RRegSet *		826410	0					
ANR	826583	Identifier	rs		826410	1					
ANR	826584	AssignmentExpression	"* rs = r_reg_regset_get ( core -> anal -> reg , R_REG_TYPE_GPR )"		826410	2		=			
ANR	826585	Identifier	rs		826410	0					
ANR	826586	CallExpression	"r_reg_regset_get ( core -> anal -> reg , R_REG_TYPE_GPR )"		826410	1					
ANR	826587	Callee	r_reg_regset_get		826410	0					
ANR	826588	Identifier	r_reg_regset_get		826410	0					
ANR	826589	ArgumentList	core -> anal -> reg		826410	1					
ANR	826590	Argument	core -> anal -> reg		826410	0					
ANR	826591	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	826592	PtrMemberAccess	core -> anal		826410	0					
ANR	826593	Identifier	core		826410	0					
ANR	826594	Identifier	anal		826410	1					
ANR	826595	Identifier	reg		826410	1					
ANR	826596	Argument	R_REG_TYPE_GPR		826410	1					
ANR	826597	Identifier	R_REG_TYPE_GPR		826410	0					
ANR	826598	IfStatement	if ( rs )		826410	1					
ANR	826599	Condition	rs	3821:6:113379:113380	826410	0	True				
ANR	826600	Identifier	rs		826410	0					
ANR	826601	CompoundStatement		34:3:862:877	826410	1					
ANR	826602	IdentifierDeclStatement	RRegItem * r ;	3822:3:113388:113399	826410	0	True				
ANR	826603	IdentifierDecl	* r		826410	0					
ANR	826604	IdentifierDeclType	RRegItem *		826410	0					
ANR	826605	Identifier	r		826410	1					
ANR	826606	IdentifierDeclStatement	RListIter * iter ;	3823:3:113404:113419	826410	1	True				
ANR	826607	IdentifierDecl	* iter		826410	0					
ANR	826608	IdentifierDeclType	RListIter *		826410	0					
ANR	826609	Identifier	iter		826410	1					
ANR	826610	Statement	r_list_foreach	3824:3:113424:113437	826410	2	True				
ANR	826611	Statement	(	3824:18:113439:113439	826410	3	True				
ANR	826612	Statement	rs	3824:19:113440:113441	826410	4	True				
ANR	826613	Statement	->	3824:21:113442:113443	826410	5	True				
ANR	826614	Statement	regs	3824:23:113444:113447	826410	6	True				
ANR	826615	Statement	","	3824:27:113448:113448	826410	7	True				
ANR	826616	Statement	iter	3824:29:113450:113453	826410	8	True				
ANR	826617	Statement	","	3824:33:113454:113454	826410	9	True				
ANR	826618	Statement	r	3824:35:113456:113456	826410	10	True				
ANR	826619	Statement	)	3824:36:113457:113457	826410	11	True				
ANR	826620	CompoundStatement		35:38:917:917	826410	12					
ANR	826621	ExpressionStatement	r_cons_println ( r -> name )	3825:4:113465:113489	826410	0	True				
ANR	826622	CallExpression	r_cons_println ( r -> name )		826410	0					
ANR	826623	Callee	r_cons_println		826410	0					
ANR	826624	Identifier	r_cons_println		826410	0					
ANR	826625	ArgumentList	r -> name		826410	1					
ANR	826626	Argument	r -> name		826410	0					
ANR	826627	PtrMemberAccess	r -> name		826410	0					
ANR	826628	Identifier	r		826410	0					
ANR	826629	Identifier	name		826410	1					
ANR	826630	BreakStatement	break ;	3828:3:113503:113508	826410	2	True				
ANR	826631	Label	case '0' :	3829:1:113511:113519	826410	3	True				
ANR	826632	ExpressionStatement	r_reg_arena_zero ( core -> anal -> reg )	3830:2:113532:113566	826410	4	True				
ANR	826633	CallExpression	r_reg_arena_zero ( core -> anal -> reg )		826410	0					
ANR	826634	Callee	r_reg_arena_zero		826410	0					
ANR	826635	Identifier	r_reg_arena_zero		826410	0					
ANR	826636	ArgumentList	core -> anal -> reg		826410	1					
ANR	826637	Argument	core -> anal -> reg		826410	0					
ANR	826638	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	826639	PtrMemberAccess	core -> anal		826410	0					
ANR	826640	Identifier	core		826410	0					
ANR	826641	Identifier	anal		826410	1					
ANR	826642	Identifier	reg		826410	1					
ANR	826643	BreakStatement	break ;	3831:2:113570:113575	826410	5	True				
ANR	826644	Label	case 'A' :	3832:1:113578:113586	826410	6	True				
ANR	826645	CompoundStatement		46:3:1080:1107	826410	7					
ANR	826646	IdentifierDeclStatement	int nargs = 4 ;	3834:3:113604:113617	826410	0	True				
ANR	826647	IdentifierDecl	nargs = 4		826410	0					
ANR	826648	IdentifierDeclType	int		826410	0					
ANR	826649	Identifier	nargs		826410	1					
ANR	826650	AssignmentExpression	nargs = 4		826410	2		=			
ANR	826651	Identifier	nargs		826410	0					
ANR	826652	PrimaryExpression	4		826410	1					
ANR	826653	IdentifierDeclStatement	RReg * reg = core -> anal -> reg ;	3835:3:113622:113649	826410	1	True				
ANR	826654	IdentifierDecl	* reg = core -> anal -> reg		826410	0					
ANR	826655	IdentifierDeclType	RReg *		826410	0					
ANR	826656	Identifier	reg		826410	1					
ANR	826657	AssignmentExpression	* reg = core -> anal -> reg		826410	2		=			
ANR	826658	Identifier	reg		826410	0					
ANR	826659	PtrMemberAccess	core -> anal -> reg		826410	1					
ANR	826660	PtrMemberAccess	core -> anal		826410	0					
ANR	826661	Identifier	core		826410	0					
ANR	826662	Identifier	anal		826410	1					
ANR	826663	Identifier	reg		826410	1					
ANR	826664	ForStatement	for ( i = 0 ; i < nargs ; i ++ )		826410	2					
ANR	826665	ForInit	i = 0 ;	3836:8:113659:113664	826410	0	True				
ANR	826666	AssignmentExpression	i = 0		826410	0		=			
ANR	826667	Identifier	i		826410	0					
ANR	826668	PrimaryExpression	0		826410	1					
ANR	826669	Condition	i < nargs	3836:15:113666:113674	826410	1	True				
ANR	826670	RelationalExpression	i < nargs		826410	0		<			
ANR	826671	Identifier	i		826410	0					
ANR	826672	Identifier	nargs		826410	1					
ANR	826673	PostIncDecOperationExpression	i ++	3836:26:113677:113679	826410	2	True				
ANR	826674	Identifier	i		826410	0					
ANR	826675	IncDec	++		826410	1					
ANR	826676	CompoundStatement		49:4:1232:1277	826410	3					
ANR	826677	IdentifierDeclStatement	"const char * name = r_reg_get_name ( reg , r_reg_get_name_idx ( sdb_fmt ( ""A%d"" , i ) ) ) ;"	3837:4:113688:113768	826410	0	True				
ANR	826678	IdentifierDecl	"* name = r_reg_get_name ( reg , r_reg_get_name_idx ( sdb_fmt ( ""A%d"" , i ) ) )"		826410	0					
ANR	826679	IdentifierDeclType	const char *		826410	0					
ANR	826680	Identifier	name		826410	1					
ANR	826681	AssignmentExpression	"* name = r_reg_get_name ( reg , r_reg_get_name_idx ( sdb_fmt ( ""A%d"" , i ) ) )"		826410	2		=			
ANR	826682	Identifier	name		826410	0					
ANR	826683	CallExpression	"r_reg_get_name ( reg , r_reg_get_name_idx ( sdb_fmt ( ""A%d"" , i ) ) )"		826410	1					
ANR	826684	Callee	r_reg_get_name		826410	0					
ANR	826685	Identifier	r_reg_get_name		826410	0					
ANR	826686	ArgumentList	reg		826410	1					
ANR	826687	Argument	reg		826410	0					
ANR	826688	Identifier	reg		826410	0					
ANR	826689	Argument	"r_reg_get_name_idx ( sdb_fmt ( ""A%d"" , i ) )"		826410	1					
ANR	826690	CallExpression	"r_reg_get_name_idx ( sdb_fmt ( ""A%d"" , i ) )"		826410	0					
ANR	826691	Callee	r_reg_get_name_idx		826410	0					
ANR	826692	Identifier	r_reg_get_name_idx		826410	0					
ANR	826693	ArgumentList	"sdb_fmt ( ""A%d"" , i )"		826410	1					
ANR	826694	Argument	"sdb_fmt ( ""A%d"" , i )"		826410	0					
ANR	826695	CallExpression	"sdb_fmt ( ""A%d"" , i )"		826410	0					
ANR	826696	Callee	sdb_fmt		826410	0					
ANR	826697	Identifier	sdb_fmt		826410	0					
ANR	826698	ArgumentList	"""A%d"""		826410	1					
ANR	826699	Argument	"""A%d"""		826410	0					
ANR	826700	PrimaryExpression	"""A%d"""		826410	0					
ANR	826701	Argument	i		826410	1					
ANR	826702	Identifier	i		826410	0					
ANR	826703	IdentifierDeclStatement	"ut64 off = r_reg_getv ( core -> anal -> reg , name ) ;"	3838:4:113774:113819	826410	1	True				
ANR	826704	IdentifierDecl	"off = r_reg_getv ( core -> anal -> reg , name )"		826410	0					
ANR	826705	IdentifierDeclType	ut64		826410	0					
ANR	826706	Identifier	off		826410	1					
ANR	826707	AssignmentExpression	"off = r_reg_getv ( core -> anal -> reg , name )"		826410	2		=			
ANR	826708	Identifier	off		826410	0					
ANR	826709	CallExpression	"r_reg_getv ( core -> anal -> reg , name )"		826410	1					
ANR	826710	Callee	r_reg_getv		826410	0					
ANR	826711	Identifier	r_reg_getv		826410	0					
ANR	826712	ArgumentList	core -> anal -> reg		826410	1					
ANR	826713	Argument	core -> anal -> reg		826410	0					
ANR	826714	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	826715	PtrMemberAccess	core -> anal		826410	0					
ANR	826716	Identifier	core		826410	0					
ANR	826717	Identifier	anal		826410	1					
ANR	826718	Identifier	reg		826410	1					
ANR	826719	Argument	name		826410	1					
ANR	826720	Identifier	name		826410	0					
ANR	826721	Statement	r_cons_printf	3839:4:113825:113837	826410	2	True				
ANR	826722	Statement	(	3839:18:113839:113839	826410	3	True				
ANR	826723	Statement	"""0x%08"""	3839:19:113840:113846	826410	4	True				
ANR	826724	Statement	PFMT64x	3839:26:113847:113853	826410	5	True				
ANR	826725	Statement	""" """	3839:33:113854:113856	826410	6	True				
ANR	826726	Statement	","	3839:36:113857:113857	826410	7	True				
ANR	826727	Statement	off	3839:38:113859:113861	826410	8	True				
ANR	826728	Statement	)	3839:41:113862:113862	826410	9	True				
ANR	826729	ExpressionStatement		3839:42:113863:113863	826410	10	True				
ANR	826730	Statement	char	3841:4:113895:113898	826410	11	True				
ANR	826731	Statement	*	3841:9:113900:113900	826410	12	True				
ANR	826732	Statement	s	3841:10:113901:113901	826410	13	True				
ANR	826733	Statement	=	3841:12:113903:113903	826410	14	True				
ANR	826734	Statement	r_core_cmd_strf	3841:14:113905:113919	826410	15	True				
ANR	826735	Statement	(	3841:30:113921:113921	826410	16	True				
ANR	826736	Statement	core	3841:31:113922:113925	826410	17	True				
ANR	826737	Statement	","	3841:35:113926:113926	826410	18	True				
ANR	826738	Statement	"""pxr 32 @ 0x%08"""	3841:37:113928:113943	826410	19	True				
ANR	826739	Statement	PFMT64x	3841:53:113944:113950	826410	20	True				
ANR	826740	Statement	","	3841:60:113951:113951	826410	21	True				
ANR	826741	Statement	off	3841:62:113953:113955	826410	22	True				
ANR	826742	Statement	)	3841:65:113956:113956	826410	23	True				
ANR	826743	ExpressionStatement		3841:66:113957:113957	826410	24	True				
ANR	826744	IfStatement	if ( s )		826410	25					
ANR	826745	Condition	s	3842:8:113967:113967	826410	0	True				
ANR	826746	Identifier	s		826410	0					
ANR	826747	CompoundStatement		54:5:1435:1462	826410	1					
ANR	826748	IdentifierDeclStatement	"char * nl = strchr ( s , '\\n' ) ;"	3843:5:113977:114004	826410	0	True				
ANR	826749	IdentifierDecl	"* nl = strchr ( s , '\\n' )"		826410	0					
ANR	826750	IdentifierDeclType	char *		826410	0					
ANR	826751	Identifier	nl		826410	1					
ANR	826752	AssignmentExpression	"* nl = strchr ( s , '\\n' )"		826410	2		=			
ANR	826753	Identifier	nl		826410	0					
ANR	826754	CallExpression	"strchr ( s , '\\n' )"		826410	1					
ANR	826755	Callee	strchr		826410	0					
ANR	826756	Identifier	strchr		826410	0					
ANR	826757	ArgumentList	s		826410	1					
ANR	826758	Argument	s		826410	0					
ANR	826759	Identifier	s		826410	0					
ANR	826760	Argument	'\\n'		826410	1					
ANR	826761	PrimaryExpression	'\\n'		826410	0					
ANR	826762	IfStatement	if ( nl )		826410	1					
ANR	826763	Condition	nl	3844:9:114015:114016	826410	0	True				
ANR	826764	Identifier	nl		826410	0					
ANR	826765	CompoundStatement		55:13:1477:1477	826410	1					
ANR	826766	ExpressionStatement	* nl = 0	3845:6:114027:114034	826410	0	True				
ANR	826767	AssignmentExpression	* nl = 0		826410	0		=			
ANR	826768	UnaryOperationExpression	* nl		826410	0					
ANR	826769	UnaryOperator	*		826410	0					
ANR	826770	Identifier	nl		826410	1					
ANR	826771	PrimaryExpression	0		826410	1					
ANR	826772	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , s )"	3846:6:114042:114067	826410	1	True				
ANR	826773	CallExpression	"r_cons_printf ( ""%s\\n"" , s )"		826410	0					
ANR	826774	Callee	r_cons_printf		826410	0					
ANR	826775	Identifier	r_cons_printf		826410	0					
ANR	826776	ArgumentList	"""%s\\n"""		826410	1					
ANR	826777	Argument	"""%s\\n"""		826410	0					
ANR	826778	PrimaryExpression	"""%s\\n"""		826410	0					
ANR	826779	Argument	s		826410	1					
ANR	826780	Identifier	s		826410	0					
ANR	826781	ExpressionStatement	free ( s )	3848:5:114081:114089	826410	2	True				
ANR	826782	CallExpression	free ( s )		826410	0					
ANR	826783	Callee	free		826410	0					
ANR	826784	Identifier	free		826410	0					
ANR	826785	ArgumentList	s		826410	1					
ANR	826786	Argument	s		826410	0					
ANR	826787	Identifier	s		826410	0					
ANR	826788	BreakStatement	break ;	3853:2:114152:114157	826410	8	True				
ANR	826789	Label	case 'C' :	3854:1:114160:114168	826410	9	True				
ANR	826790	IfStatement	if ( core -> anal -> reg -> reg_profile_cmt )		826410	10					
ANR	826791	Condition	core -> anal -> reg -> reg_profile_cmt	3855:6:114185:114216	826410	0	True				
ANR	826792	PtrMemberAccess	core -> anal -> reg -> reg_profile_cmt		826410	0					
ANR	826793	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	826794	PtrMemberAccess	core -> anal		826410	0					
ANR	826795	Identifier	core		826410	0					
ANR	826796	Identifier	anal		826410	1					
ANR	826797	Identifier	reg		826410	1					
ANR	826798	Identifier	reg_profile_cmt		826410	1					
ANR	826799	CompoundStatement		66:40:1677:1677	826410	1					
ANR	826800	ExpressionStatement	r_cons_println ( core -> anal -> reg -> reg_profile_cmt )	3856:3:114224:114273	826410	0	True				
ANR	826801	CallExpression	r_cons_println ( core -> anal -> reg -> reg_profile_cmt )		826410	0					
ANR	826802	Callee	r_cons_println		826410	0					
ANR	826803	Identifier	r_cons_println		826410	0					
ANR	826804	ArgumentList	core -> anal -> reg -> reg_profile_cmt		826410	1					
ANR	826805	Argument	core -> anal -> reg -> reg_profile_cmt		826410	0					
ANR	826806	PtrMemberAccess	core -> anal -> reg -> reg_profile_cmt		826410	0					
ANR	826807	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	826808	PtrMemberAccess	core -> anal		826410	0					
ANR	826809	Identifier	core		826410	0					
ANR	826810	Identifier	anal		826410	1					
ANR	826811	Identifier	reg		826410	1					
ANR	826812	Identifier	reg_profile_cmt		826410	1					
ANR	826813	BreakStatement	break ;	3858:2:114281:114286	826410	11	True				
ANR	826814	Label	case 'w' :	3859:1:114289:114297	826410	12	True				
ANR	826815	SwitchStatement	switch ( str [ 1 ] )		826410	13					
ANR	826816	Condition	str [ 1 ]	3860:10:114318:114323	826410	0	True				
ANR	826817	ArrayIndexing	str [ 1 ]		826410	0					
ANR	826818	Identifier	str		826410	0					
ANR	826819	PrimaryExpression	1		826410	1					
ANR	826820	CompoundStatement		71:18:1784:1784	826410	1					
ANR	826821	Label	case '?' :	3861:2:114330:114338	826410	0	True				
ANR	826822	CompoundStatement		72:12:1798:1798	826410	1					
ANR	826823	ExpressionStatement	"r_core_cmd_help ( core , help_msg_arw )"	3862:3:114345:114381	826410	0	True				
ANR	826824	CallExpression	"r_core_cmd_help ( core , help_msg_arw )"		826410	0					
ANR	826825	Callee	r_core_cmd_help		826410	0					
ANR	826826	Identifier	r_core_cmd_help		826410	0					
ANR	826827	ArgumentList	core		826410	1					
ANR	826828	Argument	core		826410	0					
ANR	826829	Identifier	core		826410	0					
ANR	826830	Argument	help_msg_arw		826410	1					
ANR	826831	Identifier	help_msg_arw		826410	0					
ANR	826832	BreakStatement	break ;	3863:3:114386:114391	826410	1	True				
ANR	826833	Label	case ' ' :	3865:2:114399:114407	826410	2	True				
ANR	826834	ExpressionStatement	"r_reg_arena_set_bytes ( core -> anal -> reg , str + 1 )"	3866:3:114412:114460	826410	3	True				
ANR	826835	CallExpression	"r_reg_arena_set_bytes ( core -> anal -> reg , str + 1 )"		826410	0					
ANR	826836	Callee	r_reg_arena_set_bytes		826410	0					
ANR	826837	Identifier	r_reg_arena_set_bytes		826410	0					
ANR	826838	ArgumentList	core -> anal -> reg		826410	1					
ANR	826839	Argument	core -> anal -> reg		826410	0					
ANR	826840	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	826841	PtrMemberAccess	core -> anal		826410	0					
ANR	826842	Identifier	core		826410	0					
ANR	826843	Identifier	anal		826410	1					
ANR	826844	Identifier	reg		826410	1					
ANR	826845	Argument	str + 1		826410	1					
ANR	826846	AdditiveExpression	str + 1		826410	0		+			
ANR	826847	Identifier	str		826410	0					
ANR	826848	PrimaryExpression	1		826410	1					
ANR	826849	BreakStatement	break ;	3867:3:114465:114470	826410	4	True				
ANR	826850	Label	default :	3868:2:114474:114481	826410	5	True				
ANR	826851	Identifier	default		826410	0					
ANR	826852	ExpressionStatement	"r_core_cmd_help ( core , help_msg_arw )"	3869:3:114486:114522	826410	6	True				
ANR	826853	CallExpression	"r_core_cmd_help ( core , help_msg_arw )"		826410	0					
ANR	826854	Callee	r_core_cmd_help		826410	0					
ANR	826855	Identifier	r_core_cmd_help		826410	0					
ANR	826856	ArgumentList	core		826410	1					
ANR	826857	Argument	core		826410	0					
ANR	826858	Identifier	core		826410	0					
ANR	826859	Argument	help_msg_arw		826410	1					
ANR	826860	Identifier	help_msg_arw		826410	0					
ANR	826861	BreakStatement	break ;	3870:3:114527:114532	826410	7	True				
ANR	826862	BreakStatement	break ;	3872:2:114540:114545	826410	14	True				
ANR	826863	Label	case 'a' :	3873:1:114548:114556	826410	15	True				
ANR	826864	SwitchStatement	switch ( str [ 1 ] )		826410	16					
ANR	826865	Condition	str [ 1 ]	3874:10:114577:114582	826410	0	True				
ANR	826866	ArrayIndexing	str [ 1 ]		826410	0					
ANR	826867	Identifier	str		826410	0					
ANR	826868	PrimaryExpression	1		826410	1					
ANR	826869	CompoundStatement		85:18:2043:2043	826410	1					
ANR	826870	Label	case '?' :	3875:2:114589:114597	826410	0	True				
ANR	826871	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ara )"	3876:3:114612:114648	826410	1	True				
ANR	826872	CallExpression	"r_core_cmd_help ( core , help_msg_ara )"		826410	0					
ANR	826873	Callee	r_core_cmd_help		826410	0					
ANR	826874	Identifier	r_core_cmd_help		826410	0					
ANR	826875	ArgumentList	core		826410	1					
ANR	826876	Argument	core		826410	0					
ANR	826877	Identifier	core		826410	0					
ANR	826878	Argument	help_msg_ara		826410	1					
ANR	826879	Identifier	help_msg_ara		826410	0					
ANR	826880	BreakStatement	break ;	3877:3:114653:114658	826410	2	True				
ANR	826881	Label	case 's' :	3878:2:114662:114670	826410	3	True				
ANR	826882	ExpressionStatement	"r_reg_arena_swap ( core -> anal -> reg , false )"	3879:3:114685:114726	826410	4	True				
ANR	826883	CallExpression	"r_reg_arena_swap ( core -> anal -> reg , false )"		826410	0					
ANR	826884	Callee	r_reg_arena_swap		826410	0					
ANR	826885	Identifier	r_reg_arena_swap		826410	0					
ANR	826886	ArgumentList	core -> anal -> reg		826410	1					
ANR	826887	Argument	core -> anal -> reg		826410	0					
ANR	826888	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	826889	PtrMemberAccess	core -> anal		826410	0					
ANR	826890	Identifier	core		826410	0					
ANR	826891	Identifier	anal		826410	1					
ANR	826892	Identifier	reg		826410	1					
ANR	826893	Argument	false		826410	1					
ANR	826894	Identifier	false		826410	0					
ANR	826895	BreakStatement	break ;	3880:3:114731:114736	826410	5	True				
ANR	826896	Label	case '+' :	3881:2:114740:114748	826410	6	True				
ANR	826897	ExpressionStatement	r_reg_arena_push ( core -> anal -> reg )	3882:3:114763:114797	826410	7	True				
ANR	826898	CallExpression	r_reg_arena_push ( core -> anal -> reg )		826410	0					
ANR	826899	Callee	r_reg_arena_push		826410	0					
ANR	826900	Identifier	r_reg_arena_push		826410	0					
ANR	826901	ArgumentList	core -> anal -> reg		826410	1					
ANR	826902	Argument	core -> anal -> reg		826410	0					
ANR	826903	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	826904	PtrMemberAccess	core -> anal		826410	0					
ANR	826905	Identifier	core		826410	0					
ANR	826906	Identifier	anal		826410	1					
ANR	826907	Identifier	reg		826410	1					
ANR	826908	BreakStatement	break ;	3883:3:114802:114807	826410	8	True				
ANR	826909	Label	case '-' :	3884:2:114811:114819	826410	9	True				
ANR	826910	ExpressionStatement	r_reg_arena_pop ( core -> anal -> reg )	3885:3:114834:114867	826410	10	True				
ANR	826911	CallExpression	r_reg_arena_pop ( core -> anal -> reg )		826410	0					
ANR	826912	Callee	r_reg_arena_pop		826410	0					
ANR	826913	Identifier	r_reg_arena_pop		826410	0					
ANR	826914	ArgumentList	core -> anal -> reg		826410	1					
ANR	826915	Argument	core -> anal -> reg		826410	0					
ANR	826916	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	826917	PtrMemberAccess	core -> anal		826410	0					
ANR	826918	Identifier	core		826410	0					
ANR	826919	Identifier	anal		826410	1					
ANR	826920	Identifier	reg		826410	1					
ANR	826921	BreakStatement	break ;	3886:3:114872:114877	826410	11	True				
ANR	826922	Label	default :	3887:2:114881:114888	826410	12	True				
ANR	826923	Identifier	default		826410	0					
ANR	826924	CompoundStatement		101:3:2383:2398	826410	13					
ANR	826925	IdentifierDeclStatement	"int i , j ;"	3888:3:114895:114903	826410	0	True				
ANR	826926	IdentifierDecl	i		826410	0					
ANR	826927	IdentifierDeclType	int		826410	0					
ANR	826928	Identifier	i		826410	1					
ANR	826929	IdentifierDecl	j		826410	1					
ANR	826930	IdentifierDeclType	int		826410	0					
ANR	826931	Identifier	j		826410	1					
ANR	826932	IdentifierDeclStatement	RRegArena * a ;	3889:3:114908:114920	826410	1	True				
ANR	826933	IdentifierDecl	* a		826410	0					
ANR	826934	IdentifierDeclType	RRegArena *		826410	0					
ANR	826935	Identifier	a		826410	1					
ANR	826936	IdentifierDeclStatement	RListIter * iter ;	3890:3:114925:114940	826410	2	True				
ANR	826937	IdentifierDecl	* iter		826410	0					
ANR	826938	IdentifierDeclType	RListIter *		826410	0					
ANR	826939	Identifier	iter		826410	1					
ANR	826940	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		826410	3					
ANR	826941	ForInit	i = 0 ;	3891:8:114950:114955	826410	0	True				
ANR	826942	AssignmentExpression	i = 0		826410	0		=			
ANR	826943	Identifier	i		826410	0					
ANR	826944	PrimaryExpression	0		826410	1					
ANR	826945	Condition	i < R_REG_TYPE_LAST	3891:15:114957:114975	826410	1	True				
ANR	826946	RelationalExpression	i < R_REG_TYPE_LAST		826410	0		<			
ANR	826947	Identifier	i		826410	0					
ANR	826948	Identifier	R_REG_TYPE_LAST		826410	1					
ANR	826949	PostIncDecOperationExpression	i ++	3891:36:114978:114980	826410	2	True				
ANR	826950	Identifier	i		826410	0					
ANR	826951	IncDec	++		826410	1					
ANR	826952	CompoundStatement		103:4:2447:2488	826410	3					
ANR	826953	IdentifierDeclStatement	RRegSet * rs = & core -> anal -> reg -> regset [ i ] ;	3892:4:114989:115030	826410	0	True				
ANR	826954	IdentifierDecl	* rs = & core -> anal -> reg -> regset [ i ]		826410	0					
ANR	826955	IdentifierDeclType	RRegSet *		826410	0					
ANR	826956	Identifier	rs		826410	1					
ANR	826957	AssignmentExpression	* rs = & core -> anal -> reg -> regset [ i ]		826410	2		=			
ANR	826958	Identifier	rs		826410	0					
ANR	826959	UnaryOperationExpression	& core -> anal -> reg -> regset [ i ]		826410	1					
ANR	826960	UnaryOperator	&		826410	0					
ANR	826961	ArrayIndexing	core -> anal -> reg -> regset [ i ]		826410	1					
ANR	826962	PtrMemberAccess	core -> anal -> reg -> regset		826410	0					
ANR	826963	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	826964	PtrMemberAccess	core -> anal		826410	0					
ANR	826965	Identifier	core		826410	0					
ANR	826966	Identifier	anal		826410	1					
ANR	826967	Identifier	reg		826410	1					
ANR	826968	Identifier	regset		826410	1					
ANR	826969	Identifier	i		826410	1					
ANR	826970	ExpressionStatement	j = 0	3893:4:115036:115041	826410	1	True				
ANR	826971	AssignmentExpression	j = 0		826410	0		=			
ANR	826972	Identifier	j		826410	0					
ANR	826973	PrimaryExpression	0		826410	1					
ANR	826974	Statement	r_list_foreach	3894:4:115047:115060	826410	2	True				
ANR	826975	Statement	(	3894:19:115062:115062	826410	3	True				
ANR	826976	Statement	rs	3894:20:115063:115064	826410	4	True				
ANR	826977	Statement	->	3894:22:115065:115066	826410	5	True				
ANR	826978	Statement	pool	3894:24:115067:115070	826410	6	True				
ANR	826979	Statement	","	3894:28:115071:115071	826410	7	True				
ANR	826980	Statement	iter	3894:30:115073:115076	826410	8	True				
ANR	826981	Statement	","	3894:34:115077:115077	826410	9	True				
ANR	826982	Statement	a	3894:36:115079:115079	826410	10	True				
ANR	826983	Statement	)	3894:37:115080:115080	826410	11	True				
ANR	826984	CompoundStatement		105:39:2540:2540	826410	12					
ANR	826985	ExpressionStatement	"r_cons_printf ( ""%s %p %d %d %s %d\\n"" , ( a == rs -> arena ) ? ""*"" : ""."" , a , i , j , r_reg_get_type ( i ) , a -> size )"	3895:5:115089:115204	826410	0	True				
ANR	826986	CallExpression	"r_cons_printf ( ""%s %p %d %d %s %d\\n"" , ( a == rs -> arena ) ? ""*"" : ""."" , a , i , j , r_reg_get_type ( i ) , a -> size )"		826410	0					
ANR	826987	Callee	r_cons_printf		826410	0					
ANR	826988	Identifier	r_cons_printf		826410	0					
ANR	826989	ArgumentList	"""%s %p %d %d %s %d\\n"""		826410	1					
ANR	826990	Argument	"""%s %p %d %d %s %d\\n"""		826410	0					
ANR	826991	PrimaryExpression	"""%s %p %d %d %s %d\\n"""		826410	0					
ANR	826992	Argument	"( a == rs -> arena ) ? ""*"" : ""."""		826410	1					
ANR	826993	ConditionalExpression	"( a == rs -> arena ) ? ""*"" : ""."""		826410	0					
ANR	826994	Condition	a == rs -> arena		826410	0					
ANR	826995	EqualityExpression	a == rs -> arena		826410	0		==			
ANR	826996	Identifier	a		826410	0					
ANR	826997	PtrMemberAccess	rs -> arena		826410	1					
ANR	826998	Identifier	rs		826410	0					
ANR	826999	Identifier	arena		826410	1					
ANR	827000	PrimaryExpression	"""*"""		826410	1					
ANR	827001	PrimaryExpression	"""."""		826410	2					
ANR	827002	Argument	a		826410	2					
ANR	827003	Identifier	a		826410	0					
ANR	827004	Argument	i		826410	3					
ANR	827005	Identifier	i		826410	0					
ANR	827006	Argument	j		826410	4					
ANR	827007	Identifier	j		826410	0					
ANR	827008	Argument	r_reg_get_type ( i )		826410	5					
ANR	827009	CallExpression	r_reg_get_type ( i )		826410	0					
ANR	827010	Callee	r_reg_get_type		826410	0					
ANR	827011	Identifier	r_reg_get_type		826410	0					
ANR	827012	ArgumentList	i		826410	1					
ANR	827013	Argument	i		826410	0					
ANR	827014	Identifier	i		826410	0					
ANR	827015	Argument	a -> size		826410	6					
ANR	827016	PtrMemberAccess	a -> size		826410	0					
ANR	827017	Identifier	a		826410	0					
ANR	827018	Identifier	size		826410	1					
ANR	827019	ExpressionStatement	j ++	3898:5:115211:115214	826410	1	True				
ANR	827020	PostIncDecOperationExpression	j ++		826410	0					
ANR	827021	Identifier	j		826410	0					
ANR	827022	IncDec	++		826410	1					
ANR	827023	BreakStatement	break ;	3901:4:115231:115236	826410	14	True				
ANR	827024	BreakStatement	break ;	3903:2:115244:115249	826410	17	True				
ANR	827025	Label	case '?' :	3904:1:115252:115260	826410	18	True				
ANR	827026	IfStatement	if ( str [ 1 ] )		826410	19					
ANR	827027	Condition	str [ 1 ]	3905:6:115277:115282	826410	0	True				
ANR	827028	ArrayIndexing	str [ 1 ]		826410	0					
ANR	827029	Identifier	str		826410	0					
ANR	827030	PrimaryExpression	1		826410	1					
ANR	827031	CompoundStatement		117:3:2748:2796	826410	1					
ANR	827032	IdentifierDeclStatement	"ut64 off = r_reg_getv ( core -> anal -> reg , str + 1 ) ;"	3906:3:115290:115338	826410	0	True				
ANR	827033	IdentifierDecl	"off = r_reg_getv ( core -> anal -> reg , str + 1 )"		826410	0					
ANR	827034	IdentifierDeclType	ut64		826410	0					
ANR	827035	Identifier	off		826410	1					
ANR	827036	AssignmentExpression	"off = r_reg_getv ( core -> anal -> reg , str + 1 )"		826410	2		=			
ANR	827037	Identifier	off		826410	0					
ANR	827038	CallExpression	"r_reg_getv ( core -> anal -> reg , str + 1 )"		826410	1					
ANR	827039	Callee	r_reg_getv		826410	0					
ANR	827040	Identifier	r_reg_getv		826410	0					
ANR	827041	ArgumentList	core -> anal -> reg		826410	1					
ANR	827042	Argument	core -> anal -> reg		826410	0					
ANR	827043	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	827044	PtrMemberAccess	core -> anal		826410	0					
ANR	827045	Identifier	core		826410	0					
ANR	827046	Identifier	anal		826410	1					
ANR	827047	Identifier	reg		826410	1					
ANR	827048	Argument	str + 1		826410	1					
ANR	827049	AdditiveExpression	str + 1		826410	0		+			
ANR	827050	Identifier	str		826410	0					
ANR	827051	PrimaryExpression	1		826410	1					
ANR	827052	Statement	r_cons_printf	3907:3:115343:115355	826410	1	True				
ANR	827053	Statement	(	3907:17:115357:115357	826410	2	True				
ANR	827054	Statement	"""0x%08"""	3907:18:115358:115364	826410	3	True				
ANR	827055	Statement	PFMT64x	3907:26:115366:115372	826410	4	True				
ANR	827056	Statement	"""\\n"""	3907:34:115374:115377	826410	5	True				
ANR	827057	Statement	","	3907:38:115378:115378	826410	6	True				
ANR	827058	Statement	off	3907:40:115380:115382	826410	7	True				
ANR	827059	Statement	)	3907:43:115383:115383	826410	8	True				
ANR	827060	ExpressionStatement		3907:44:115384:115384	826410	9	True				
ANR	827061	ElseStatement	else		826410	0					
ANR	827062	CompoundStatement		119:9:2853:2853	826410	0					
ANR	827063	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ar )"	3909:3:115400:115435	826410	0	True				
ANR	827064	CallExpression	"r_core_cmd_help ( core , help_msg_ar )"		826410	0					
ANR	827065	Callee	r_core_cmd_help		826410	0					
ANR	827066	Identifier	r_core_cmd_help		826410	0					
ANR	827067	ArgumentList	core		826410	1					
ANR	827068	Argument	core		826410	0					
ANR	827069	Identifier	core		826410	0					
ANR	827070	Argument	help_msg_ar		826410	1					
ANR	827071	Identifier	help_msg_ar		826410	0					
ANR	827072	BreakStatement	break ;	3911:2:115443:115448	826410	20	True				
ANR	827073	Label	case 'r' :	3912:1:115451:115459	826410	21	True				
ANR	827074	SwitchStatement	switch ( str [ 1 ] )		826410	22					
ANR	827075	Condition	str [ 1 ]	3913:10:115480:115485	826410	0	True				
ANR	827076	ArrayIndexing	str [ 1 ]		826410	0					
ANR	827077	Identifier	str		826410	0					
ANR	827078	PrimaryExpression	1		826410	1					
ANR	827079	CompoundStatement		124:18:2946:2946	826410	1					
ANR	827080	Label	case 'j' :	3914:2:115492:115500	826410	0	True				
ANR	827081	ExpressionStatement	"r_core_debug_rr ( core , core -> anal -> reg , 'j' )"	3915:3:115515:115559	826410	1	True				
ANR	827082	CallExpression	"r_core_debug_rr ( core , core -> anal -> reg , 'j' )"		826410	0					
ANR	827083	Callee	r_core_debug_rr		826410	0					
ANR	827084	Identifier	r_core_debug_rr		826410	0					
ANR	827085	ArgumentList	core		826410	1					
ANR	827086	Argument	core		826410	0					
ANR	827087	Identifier	core		826410	0					
ANR	827088	Argument	core -> anal -> reg		826410	1					
ANR	827089	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	827090	PtrMemberAccess	core -> anal		826410	0					
ANR	827091	Identifier	core		826410	0					
ANR	827092	Identifier	anal		826410	1					
ANR	827093	Identifier	reg		826410	1					
ANR	827094	Argument	'j'		826410	2					
ANR	827095	PrimaryExpression	'j'		826410	0					
ANR	827096	BreakStatement	break ;	3916:3:115564:115569	826410	2	True				
ANR	827097	Label	default :	3917:2:115573:115580	826410	3	True				
ANR	827098	Identifier	default		826410	0					
ANR	827099	ExpressionStatement	"r_core_debug_rr ( core , core -> anal -> reg , 0 )"	3918:3:115585:115627	826410	4	True				
ANR	827100	CallExpression	"r_core_debug_rr ( core , core -> anal -> reg , 0 )"		826410	0					
ANR	827101	Callee	r_core_debug_rr		826410	0					
ANR	827102	Identifier	r_core_debug_rr		826410	0					
ANR	827103	ArgumentList	core		826410	1					
ANR	827104	Argument	core		826410	0					
ANR	827105	Identifier	core		826410	0					
ANR	827106	Argument	core -> anal -> reg		826410	1					
ANR	827107	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	827108	PtrMemberAccess	core -> anal		826410	0					
ANR	827109	Identifier	core		826410	0					
ANR	827110	Identifier	anal		826410	1					
ANR	827111	Identifier	reg		826410	1					
ANR	827112	Argument	0		826410	2					
ANR	827113	PrimaryExpression	0		826410	0					
ANR	827114	BreakStatement	break ;	3919:3:115632:115637	826410	5	True				
ANR	827115	BreakStatement	break ;	3921:2:115645:115650	826410	23	True				
ANR	827116	Label	case 'S' :	3922:1:115653:115661	826410	24	True				
ANR	827117	CompoundStatement		135:2:3144:3209	826410	25					
ANR	827118	IdentifierDeclStatement	int sz ;	3923:2:115676:115682	826410	0	True				
ANR	827119	IdentifierDecl	sz		826410	0					
ANR	827120	IdentifierDeclType	int		826410	0					
ANR	827121	Identifier	sz		826410	1					
ANR	827122	IdentifierDeclStatement	"ut8 * buf = r_reg_get_bytes ( core -> anal -> reg , R_REG_TYPE_GPR , & sz ) ;"	3924:2:115686:115751	826410	1	True				
ANR	827123	IdentifierDecl	"* buf = r_reg_get_bytes ( core -> anal -> reg , R_REG_TYPE_GPR , & sz )"		826410	0					
ANR	827124	IdentifierDeclType	ut8 *		826410	0					
ANR	827125	Identifier	buf		826410	1					
ANR	827126	AssignmentExpression	"* buf = r_reg_get_bytes ( core -> anal -> reg , R_REG_TYPE_GPR , & sz )"		826410	2		=			
ANR	827127	Identifier	buf		826410	0					
ANR	827128	CallExpression	"r_reg_get_bytes ( core -> anal -> reg , R_REG_TYPE_GPR , & sz )"		826410	1					
ANR	827129	Callee	r_reg_get_bytes		826410	0					
ANR	827130	Identifier	r_reg_get_bytes		826410	0					
ANR	827131	ArgumentList	core -> anal -> reg		826410	1					
ANR	827132	Argument	core -> anal -> reg		826410	0					
ANR	827133	PtrMemberAccess	core -> anal -> reg		826410	0					
ANR	827134	PtrMemberAccess	core -> anal		826410	0					
ANR	827135	Identifier	core		826410	0					
ANR	827136	Identifier	anal		826410	1					
ANR	827137	Identifier	reg		826410	1					
ANR	827138	Argument	R_REG_TYPE_GPR		826410	1					
ANR	827139	Identifier	R_REG_TYPE_GPR		826410	0					
ANR	827140	Argument	& sz		826410	2					
ANR	827141	UnaryOperationExpression	& sz		826410	0					
ANR	827142	UnaryOperator	&		826410	0					
ANR	827143	Identifier	sz		826410	1					
ANR	827144	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , sz )"	3925:2:115755:115781	826410	2	True				
ANR	827145	CallExpression	"r_cons_printf ( ""%d\\n"" , sz )"		826410	0					
ANR	827146	Callee	r_cons_printf		826410	0					
ANR	827147	Identifier	r_cons_printf		826410	0					
ANR	827148	ArgumentList	"""%d\\n"""		826410	1					
ANR	827149	Argument	"""%d\\n"""		826410	0					
ANR	827150	PrimaryExpression	"""%d\\n"""		826410	0					
ANR	827151	Argument	sz		826410	1					
ANR	827152	Identifier	sz		826410	0					
ANR	827153	ExpressionStatement	free ( buf )	3926:2:115785:115795	826410	3	True				
ANR	827154	CallExpression	free ( buf )		826410	0					
ANR	827155	Callee	free		826410	0					
ANR	827156	Identifier	free		826410	0					
ANR	827157	ArgumentList	buf		826410	1					
ANR	827158	Argument	buf		826410	0					
ANR	827159	Identifier	buf		826410	0					
ANR	827160	BreakStatement	break ;	3927:4:115801:115806	826410	26	True				
ANR	827161	Label	case 'b' :	3928:1:115809:115817	826410	27	True				
ANR	827162	CompoundStatement		152:2:3603:3658	826410	28					
ANR	827163	IdentifierDeclStatement	"int len , type = R_REG_TYPE_GPR ;"	3929:2:115866:115896	826410	0	True				
ANR	827164	IdentifierDecl	len		826410	0					
ANR	827165	IdentifierDeclType	int		826410	0					
ANR	827166	Identifier	len		826410	1					
ANR	827167	IdentifierDecl	type = R_REG_TYPE_GPR		826410	1					
ANR	827168	IdentifierDeclType	int		826410	0					
ANR	827169	Identifier	type		826410	1					
ANR	827170	AssignmentExpression	type = R_REG_TYPE_GPR		826410	2		=			
ANR	827171	Identifier	R_REG_TYPE_GPR		826410	0					
ANR	827172	Identifier	R_REG_TYPE_GPR		826410	1					
ANR	827173	ExpressionStatement	"arg = strchr ( str , ' ' )"	3930:2:115900:115923	826410	1	True				
ANR	827174	AssignmentExpression	"arg = strchr ( str , ' ' )"		826410	0		=			
ANR	827175	Identifier	arg		826410	0					
ANR	827176	CallExpression	"strchr ( str , ' ' )"		826410	1					
ANR	827177	Callee	strchr		826410	0					
ANR	827178	Identifier	strchr		826410	0					
ANR	827179	ArgumentList	str		826410	1					
ANR	827180	Argument	str		826410	0					
ANR	827181	Identifier	str		826410	0					
ANR	827182	Argument	' '		826410	1					
ANR	827183	PrimaryExpression	' '		826410	0					
ANR	827184	IfStatement	if ( arg )		826410	2					
ANR	827185	Condition	arg	3931:6:115931:115933	826410	0	True				
ANR	827186	Identifier	arg		826410	0					
ANR	827187	CompoundStatement		143:3:3399:3438	826410	1					
ANR	827188	IdentifierDeclStatement	char * string = r_str_trim_dup ( arg + 1 ) ;	3932:3:115941:115980	826410	0	True				
ANR	827189	IdentifierDecl	* string = r_str_trim_dup ( arg + 1 )		826410	0					
ANR	827190	IdentifierDeclType	char *		826410	0					
ANR	827191	Identifier	string		826410	1					
ANR	827192	AssignmentExpression	* string = r_str_trim_dup ( arg + 1 )		826410	2		=			
ANR	827193	Identifier	string		826410	0					
ANR	827194	CallExpression	r_str_trim_dup ( arg + 1 )		826410	1					
ANR	827195	Callee	r_str_trim_dup		826410	0					
ANR	827196	Identifier	r_str_trim_dup		826410	0					
ANR	827197	ArgumentList	arg + 1		826410	1					
ANR	827198	Argument	arg + 1		826410	0					
ANR	827199	AdditiveExpression	arg + 1		826410	0		+			
ANR	827200	Identifier	arg		826410	0					
ANR	827201	PrimaryExpression	1		826410	1					
ANR	827202	IfStatement	if ( string )		826410	1					
ANR	827203	Condition	string	3933:7:115989:115994	826410	0	True				
ANR	827204	Identifier	string		826410	0					
ANR	827205	CompoundStatement		144:15:3455:3455	826410	1					
ANR	827206	ExpressionStatement	type = r_reg_type_by_name ( string )	3934:4:116003:116037	826410	0	True				
ANR	827207	AssignmentExpression	type = r_reg_type_by_name ( string )		826410	0		=			
ANR	827208	Identifier	type		826410	0					
ANR	827209	CallExpression	r_reg_type_by_name ( string )		826410	1					
ANR	827210	Callee	r_reg_type_by_name		826410	0					
ANR	827211	Identifier	r_reg_type_by_name		826410	0					
ANR	827212	ArgumentList	string		826410	1					
ANR	827213	Argument	string		826410	0					
ANR	827214	Identifier	string		826410	0					
ANR	827215	IfStatement	if ( type == - 1 && string [ 0 ] != 'a' )		826410	1					
ANR	827216	Condition	type == - 1 && string [ 0 ] != 'a'	3935:8:116047:116076	826410	0	True				
ANR	827217	AndExpression	type == - 1 && string [ 0 ] != 'a'		826410	0		&&			
ANR	827218	EqualityExpression	type == - 1		826410	0		==			
ANR	827219	Identifier	type		826410	0					
ANR	827220	UnaryOperationExpression	- 1		826410	1					
ANR	827221	UnaryOperator	-		826410	0					
ANR	827222	PrimaryExpression	1		826410	1					
ANR	827223	EqualityExpression	string [ 0 ] != 'a'		826410	1		!=			
ANR	827224	ArrayIndexing	string [ 0 ]		826410	0					
ANR	827225	Identifier	string		826410	0					
ANR	827226	PrimaryExpression	0		826410	1					
ANR	827227	PrimaryExpression	'a'		826410	1					
ANR	827228	CompoundStatement		146:40:3537:3537	826410	1					
ANR	827229	ExpressionStatement	type = R_REG_TYPE_GPR	3936:5:116086:116107	826410	0	True				
ANR	827230	AssignmentExpression	type = R_REG_TYPE_GPR		826410	0		=			
ANR	827231	Identifier	type		826410	0					
ANR	827232	Identifier	R_REG_TYPE_GPR		826410	1					
ANR	827233	ExpressionStatement	free ( string )	3938:4:116119:116132	826410	2	True				
ANR	827234	CallExpression	free ( string )		826410	0					
ANR	827235	Callee	free		826410	0					
ANR	827236	Identifier	free		826410	0					
ANR	827237	ArgumentList	string		826410	1					
ANR	827238	Argument	string		826410	0					
ANR	827239	Identifier	string		826410	0					
ANR	827240	IdentifierDeclStatement	"ut8 * buf = r_reg_get_bytes ( core -> dbg -> reg , type , & len ) ;"	3941:2:116145:116200	826410	3	True				
ANR	827241	IdentifierDecl	"* buf = r_reg_get_bytes ( core -> dbg -> reg , type , & len )"		826410	0					
ANR	827242	IdentifierDeclType	ut8 *		826410	0					
ANR	827243	Identifier	buf		826410	1					
ANR	827244	AssignmentExpression	"* buf = r_reg_get_bytes ( core -> dbg -> reg , type , & len )"		826410	2		=			
ANR	827245	Identifier	buf		826410	0					
ANR	827246	CallExpression	"r_reg_get_bytes ( core -> dbg -> reg , type , & len )"		826410	1					
ANR	827247	Callee	r_reg_get_bytes		826410	0					
ANR	827248	Identifier	r_reg_get_bytes		826410	0					
ANR	827249	ArgumentList	core -> dbg -> reg		826410	1					
ANR	827250	Argument	core -> dbg -> reg		826410	0					
ANR	827251	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827252	PtrMemberAccess	core -> dbg		826410	0					
ANR	827253	Identifier	core		826410	0					
ANR	827254	Identifier	dbg		826410	1					
ANR	827255	Identifier	reg		826410	1					
ANR	827256	Argument	type		826410	1					
ANR	827257	Identifier	type		826410	0					
ANR	827258	Argument	& len		826410	2					
ANR	827259	UnaryOperationExpression	& len		826410	0					
ANR	827260	UnaryOperator	&		826410	0					
ANR	827261	Identifier	len		826410	1					
ANR	827262	IfStatement	if ( buf )		826410	4					
ANR	827263	Condition	buf	3942:6:116208:116210	826410	0	True				
ANR	827264	Identifier	buf		826410	0					
ANR	827265	CompoundStatement		153:11:3671:3671	826410	1					
ANR	827266	Statement	r_print_hexdump	3943:3:116218:116232	826410	0	True				
ANR	827267	Statement	(	3943:19:116234:116234	826410	1	True				
ANR	827268	Statement	core	3943:20:116235:116238	826410	2	True				
ANR	827269	Statement	->	3943:24:116239:116240	826410	3	True				
ANR	827270	Statement	print	3943:26:116241:116245	826410	4	True				
ANR	827271	Statement	","	3943:31:116246:116246	826410	5	True				
ANR	827272	Statement	0L	3943:33:116248:116249	826410	6	True				
ANR	827273	Statement	L	3943:35:116250:116250	826410	7	True				
ANR	827274	Statement	","	3943:36:116251:116251	826410	8	True				
ANR	827275	Statement	buf	3943:38:116253:116255	826410	9	True				
ANR	827276	Statement	","	3943:41:116256:116256	826410	10	True				
ANR	827277	Statement	len	3943:43:116258:116260	826410	11	True				
ANR	827278	Statement	","	3943:46:116261:116261	826410	12	True				
ANR	827279	Statement	32	3943:48:116263:116264	826410	13	True				
ANR	827280	Statement	","	3943:50:116265:116265	826410	14	True				
ANR	827281	Statement	4	3943:52:116267:116267	826410	15	True				
ANR	827282	Statement	","	3943:53:116268:116268	826410	16	True				
ANR	827283	Statement	1	3943:55:116270:116270	826410	17	True				
ANR	827284	Statement	)	3943:56:116271:116271	826410	18	True				
ANR	827285	ExpressionStatement		3943:57:116272:116272	826410	19	True				
ANR	827286	ExpressionStatement	free ( buf )	3944:3:116277:116287	826410	20	True				
ANR	827287	CallExpression	free ( buf )		826410	0					
ANR	827288	Callee	free		826410	0					
ANR	827289	Identifier	free		826410	0					
ANR	827290	ArgumentList	buf		826410	1					
ANR	827291	Argument	buf		826410	0					
ANR	827292	Identifier	buf		826410	0					
ANR	827293	BreakStatement	break ;	3946:4:116297:116302	826410	29	True				
ANR	827294	Label	case 'c' :	3947:1:116305:116313	826410	30	True				
ANR	827295	CompoundStatement		162:3:3846:3888	826410	31					
ANR	827296	IdentifierDeclStatement	RRegItem * r ;	3950:3:116372:116383	826410	0	True				
ANR	827297	IdentifierDecl	* r		826410	0					
ANR	827298	IdentifierDeclType	RRegItem *		826410	0					
ANR	827299	Identifier	r		826410	1					
ANR	827300	IdentifierDeclStatement	const char * name = r_str_trim_ro ( str + 1 ) ;	3951:3:116388:116430	826410	1	True				
ANR	827301	IdentifierDecl	* name = r_str_trim_ro ( str + 1 )		826410	0					
ANR	827302	IdentifierDeclType	const char *		826410	0					
ANR	827303	Identifier	name		826410	1					
ANR	827304	AssignmentExpression	* name = r_str_trim_ro ( str + 1 )		826410	2		=			
ANR	827305	Identifier	name		826410	0					
ANR	827306	CallExpression	r_str_trim_ro ( str + 1 )		826410	1					
ANR	827307	Callee	r_str_trim_ro		826410	0					
ANR	827308	Identifier	r_str_trim_ro		826410	0					
ANR	827309	ArgumentList	str + 1		826410	1					
ANR	827310	Argument	str + 1		826410	0					
ANR	827311	AdditiveExpression	str + 1		826410	0		+			
ANR	827312	Identifier	str		826410	0					
ANR	827313	PrimaryExpression	1		826410	1					
ANR	827314	IfStatement	if ( * name && name [ 1 ] )		826410	2					
ANR	827315	Condition	* name && name [ 1 ]	3952:7:116439:116454	826410	0	True				
ANR	827316	AndExpression	* name && name [ 1 ]		826410	0		&&			
ANR	827317	UnaryOperationExpression	* name		826410	0					
ANR	827318	UnaryOperator	*		826410	0					
ANR	827319	Identifier	name		826410	1					
ANR	827320	ArrayIndexing	name [ 1 ]		826410	1					
ANR	827321	Identifier	name		826410	0					
ANR	827322	PrimaryExpression	1		826410	1					
ANR	827323	CompoundStatement		163:25:3915:3915	826410	1					
ANR	827324	ExpressionStatement	"r = r_reg_cond_get ( core -> dbg -> reg , name )"	3953:4:116463:116504	826410	0	True				
ANR	827325	AssignmentExpression	"r = r_reg_cond_get ( core -> dbg -> reg , name )"		826410	0		=			
ANR	827326	Identifier	r		826410	0					
ANR	827327	CallExpression	"r_reg_cond_get ( core -> dbg -> reg , name )"		826410	1					
ANR	827328	Callee	r_reg_cond_get		826410	0					
ANR	827329	Identifier	r_reg_cond_get		826410	0					
ANR	827330	ArgumentList	core -> dbg -> reg		826410	1					
ANR	827331	Argument	core -> dbg -> reg		826410	0					
ANR	827332	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827333	PtrMemberAccess	core -> dbg		826410	0					
ANR	827334	Identifier	core		826410	0					
ANR	827335	Identifier	dbg		826410	1					
ANR	827336	Identifier	reg		826410	1					
ANR	827337	Argument	name		826410	1					
ANR	827338	Identifier	name		826410	0					
ANR	827339	IfStatement	if ( r )		826410	1					
ANR	827340	Condition	r	3954:8:116514:116514	826410	0	True				
ANR	827341	Identifier	r		826410	0					
ANR	827342	CompoundStatement		165:11:3975:3975	826410	1					
ANR	827343	ExpressionStatement	r_cons_println ( r -> name )	3955:5:116524:116548	826410	0	True				
ANR	827344	CallExpression	r_cons_println ( r -> name )		826410	0					
ANR	827345	Callee	r_cons_println		826410	0					
ANR	827346	Identifier	r_cons_println		826410	0					
ANR	827347	ArgumentList	r -> name		826410	1					
ANR	827348	Argument	r -> name		826410	0					
ANR	827349	PtrMemberAccess	r -> name		826410	0					
ANR	827350	Identifier	r		826410	0					
ANR	827351	Identifier	name		826410	1					
ANR	827352	ElseStatement	else		826410	0					
ANR	827353	CompoundStatement		169:5:4071:4129	826410	0					
ANR	827354	IdentifierDeclStatement	int id = r_reg_cond_from_string ( name ) ;	3957:5:116568:116606	826410	0	True				
ANR	827355	IdentifierDecl	id = r_reg_cond_from_string ( name )		826410	0					
ANR	827356	IdentifierDeclType	int		826410	0					
ANR	827357	Identifier	id		826410	1					
ANR	827358	AssignmentExpression	id = r_reg_cond_from_string ( name )		826410	2		=			
ANR	827359	Identifier	id		826410	0					
ANR	827360	CallExpression	r_reg_cond_from_string ( name )		826410	1					
ANR	827361	Callee	r_reg_cond_from_string		826410	0					
ANR	827362	Identifier	r_reg_cond_from_string		826410	0					
ANR	827363	ArgumentList	name		826410	1					
ANR	827364	Argument	name		826410	0					
ANR	827365	Identifier	name		826410	0					
ANR	827366	IdentifierDeclStatement	"RRegFlags * rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL ) ;"	3958:5:116613:116671	826410	1	True				
ANR	827367	IdentifierDecl	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		826410	0					
ANR	827368	IdentifierDeclType	RRegFlags *		826410	0					
ANR	827369	Identifier	rf		826410	1					
ANR	827370	AssignmentExpression	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		826410	2		=			
ANR	827371	Identifier	rf		826410	0					
ANR	827372	CallExpression	"r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		826410	1					
ANR	827373	Callee	r_reg_cond_retrieve		826410	0					
ANR	827374	Identifier	r_reg_cond_retrieve		826410	0					
ANR	827375	ArgumentList	core -> dbg -> reg		826410	1					
ANR	827376	Argument	core -> dbg -> reg		826410	0					
ANR	827377	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827378	PtrMemberAccess	core -> dbg		826410	0					
ANR	827379	Identifier	core		826410	0					
ANR	827380	Identifier	dbg		826410	1					
ANR	827381	Identifier	reg		826410	1					
ANR	827382	Argument	NULL		826410	1					
ANR	827383	Identifier	NULL		826410	0					
ANR	827384	IfStatement	if ( rf )		826410	2					
ANR	827385	Condition	rf	3959:9:116682:116683	826410	0	True				
ANR	827386	Identifier	rf		826410	0					
ANR	827387	CompoundStatement		171:6:4152:4200	826410	1					
ANR	827388	IdentifierDeclStatement	"int o = r_reg_cond_bits ( core -> dbg -> reg , id , rf ) ;"	3960:6:116694:116742	826410	0	True				
ANR	827389	IdentifierDecl	"o = r_reg_cond_bits ( core -> dbg -> reg , id , rf )"		826410	0					
ANR	827390	IdentifierDeclType	int		826410	0					
ANR	827391	Identifier	o		826410	1					
ANR	827392	AssignmentExpression	"o = r_reg_cond_bits ( core -> dbg -> reg , id , rf )"		826410	2		=			
ANR	827393	Identifier	o		826410	0					
ANR	827394	CallExpression	"r_reg_cond_bits ( core -> dbg -> reg , id , rf )"		826410	1					
ANR	827395	Callee	r_reg_cond_bits		826410	0					
ANR	827396	Identifier	r_reg_cond_bits		826410	0					
ANR	827397	ArgumentList	core -> dbg -> reg		826410	1					
ANR	827398	Argument	core -> dbg -> reg		826410	0					
ANR	827399	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827400	PtrMemberAccess	core -> dbg		826410	0					
ANR	827401	Identifier	core		826410	0					
ANR	827402	Identifier	dbg		826410	1					
ANR	827403	Identifier	reg		826410	1					
ANR	827404	Argument	id		826410	1					
ANR	827405	Identifier	id		826410	0					
ANR	827406	Argument	rf		826410	2					
ANR	827407	Identifier	rf		826410	0					
ANR	827408	ExpressionStatement	core -> num -> value = o	3961:6:116750:116770	826410	1	True				
ANR	827409	AssignmentExpression	core -> num -> value = o		826410	0		=			
ANR	827410	PtrMemberAccess	core -> num -> value		826410	0					
ANR	827411	PtrMemberAccess	core -> num		826410	0					
ANR	827412	Identifier	core		826410	0					
ANR	827413	Identifier	num		826410	1					
ANR	827414	Identifier	value		826410	1					
ANR	827415	Identifier	o		826410	1					
ANR	827416	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , o )"	3963:6:116793:116818	826410	2	True				
ANR	827417	CallExpression	"r_cons_printf ( ""%d\\n"" , o )"		826410	0					
ANR	827418	Callee	r_cons_printf		826410	0					
ANR	827419	Identifier	r_cons_printf		826410	0					
ANR	827420	ArgumentList	"""%d\\n"""		826410	1					
ANR	827421	Argument	"""%d\\n"""		826410	0					
ANR	827422	PrimaryExpression	"""%d\\n"""		826410	0					
ANR	827423	Argument	o		826410	1					
ANR	827424	Identifier	o		826410	0					
ANR	827425	ExpressionStatement	free ( rf )	3964:6:116826:116835	826410	3	True				
ANR	827426	CallExpression	free ( rf )		826410	0					
ANR	827427	Callee	free		826410	0					
ANR	827428	Identifier	free		826410	0					
ANR	827429	ArgumentList	rf		826410	1					
ANR	827430	Argument	rf		826410	0					
ANR	827431	Identifier	rf		826410	0					
ANR	827432	ElseStatement	else		826410	0					
ANR	827433	CompoundStatement		176:12:4307:4307	826410	0					
ANR	827434	ExpressionStatement	"eprintf ( ""unknown conditional or flag register\\n"" )"	3966:6:116857:116907	826410	0	True				
ANR	827435	CallExpression	"eprintf ( ""unknown conditional or flag register\\n"" )"		826410	0					
ANR	827436	Callee	eprintf		826410	0					
ANR	827437	Identifier	eprintf		826410	0					
ANR	827438	ArgumentList	"""unknown conditional or flag register\\n"""		826410	1					
ANR	827439	Argument	"""unknown conditional or flag register\\n"""		826410	0					
ANR	827440	PrimaryExpression	"""unknown conditional or flag register\\n"""		826410	0					
ANR	827441	ElseStatement	else		826410	0					
ANR	827442	CompoundStatement		181:4:4396:4454	826410	0					
ANR	827443	IdentifierDeclStatement	"RRegFlags * rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL ) ;"	3970:4:116938:116996	826410	0	True				
ANR	827444	IdentifierDecl	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		826410	0					
ANR	827445	IdentifierDeclType	RRegFlags *		826410	0					
ANR	827446	Identifier	rf		826410	1					
ANR	827447	AssignmentExpression	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		826410	2		=			
ANR	827448	Identifier	rf		826410	0					
ANR	827449	CallExpression	"r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		826410	1					
ANR	827450	Callee	r_reg_cond_retrieve		826410	0					
ANR	827451	Identifier	r_reg_cond_retrieve		826410	0					
ANR	827452	ArgumentList	core -> dbg -> reg		826410	1					
ANR	827453	Argument	core -> dbg -> reg		826410	0					
ANR	827454	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827455	PtrMemberAccess	core -> dbg		826410	0					
ANR	827456	Identifier	core		826410	0					
ANR	827457	Identifier	dbg		826410	1					
ANR	827458	Identifier	reg		826410	1					
ANR	827459	Argument	NULL		826410	1					
ANR	827460	Identifier	NULL		826410	0					
ANR	827461	IfStatement	if ( rf )		826410	1					
ANR	827462	Condition	rf	3971:8:117006:117007	826410	0	True				
ANR	827463	Identifier	rf		826410	0					
ANR	827464	CompoundStatement		182:12:4468:4468	826410	1					
ANR	827465	ExpressionStatement	"r_cons_printf ( ""| s:%d z:%d c:%d o:%d p:%d\\n"" , rf -> s , rf -> z , rf -> c , rf -> o , rf -> p )"	3972:5:117017:117104	826410	0	True				
ANR	827466	CallExpression	"r_cons_printf ( ""| s:%d z:%d c:%d o:%d p:%d\\n"" , rf -> s , rf -> z , rf -> c , rf -> o , rf -> p )"		826410	0					
ANR	827467	Callee	r_cons_printf		826410	0					
ANR	827468	Identifier	r_cons_printf		826410	0					
ANR	827469	ArgumentList	"""| s:%d z:%d c:%d o:%d p:%d\\n"""		826410	1					
ANR	827470	Argument	"""| s:%d z:%d c:%d o:%d p:%d\\n"""		826410	0					
ANR	827471	PrimaryExpression	"""| s:%d z:%d c:%d o:%d p:%d\\n"""		826410	0					
ANR	827472	Argument	rf -> s		826410	1					
ANR	827473	PtrMemberAccess	rf -> s		826410	0					
ANR	827474	Identifier	rf		826410	0					
ANR	827475	Identifier	s		826410	1					
ANR	827476	Argument	rf -> z		826410	2					
ANR	827477	PtrMemberAccess	rf -> z		826410	0					
ANR	827478	Identifier	rf		826410	0					
ANR	827479	Identifier	z		826410	1					
ANR	827480	Argument	rf -> c		826410	3					
ANR	827481	PtrMemberAccess	rf -> c		826410	0					
ANR	827482	Identifier	rf		826410	0					
ANR	827483	Identifier	c		826410	1					
ANR	827484	Argument	rf -> o		826410	4					
ANR	827485	PtrMemberAccess	rf -> o		826410	0					
ANR	827486	Identifier	rf		826410	0					
ANR	827487	Identifier	o		826410	1					
ANR	827488	Argument	rf -> p		826410	5					
ANR	827489	PtrMemberAccess	rf -> p		826410	0					
ANR	827490	Identifier	rf		826410	0					
ANR	827491	Identifier	p		826410	1					
ANR	827492	IfStatement	if ( * name == '=' )		826410	1					
ANR	827493	Condition	* name == '='	3974:9:117115:117126	826410	0	True				
ANR	827494	EqualityExpression	* name == '='		826410	0		==			
ANR	827495	UnaryOperationExpression	* name		826410	0					
ANR	827496	UnaryOperator	*		826410	0					
ANR	827497	Identifier	name		826410	1					
ANR	827498	PrimaryExpression	'='		826410	1					
ANR	827499	CompoundStatement		185:23:4587:4587	826410	1					
ANR	827500	ForStatement	for ( i = 0 ; i < R_REG_COND_LAST ; i ++ )		826410	0					
ANR	827501	ForInit	i = 0 ;	3975:11:117142:117147	826410	0	True				
ANR	827502	AssignmentExpression	i = 0		826410	0		=			
ANR	827503	Identifier	i		826410	0					
ANR	827504	PrimaryExpression	0		826410	1					
ANR	827505	Condition	i < R_REG_COND_LAST	3975:18:117149:117167	826410	1	True				
ANR	827506	RelationalExpression	i < R_REG_COND_LAST		826410	0		<			
ANR	827507	Identifier	i		826410	0					
ANR	827508	Identifier	R_REG_COND_LAST		826410	1					
ANR	827509	PostIncDecOperationExpression	i ++	3975:39:117170:117172	826410	2	True				
ANR	827510	Identifier	i		826410	0					
ANR	827511	IncDec	++		826410	1					
ANR	827512	CompoundStatement		186:44:4633:4633	826410	3					
ANR	827513	ExpressionStatement	"r_cons_printf ( ""%s:%d "" , r_reg_cond_to_string ( i ) , r_reg_cond_bits ( core -> dbg -> reg , i , rf ) )"	3976:7:117184:117291	826410	0	True				
ANR	827514	CallExpression	"r_cons_printf ( ""%s:%d "" , r_reg_cond_to_string ( i ) , r_reg_cond_bits ( core -> dbg -> reg , i , rf ) )"		826410	0					
ANR	827515	Callee	r_cons_printf		826410	0					
ANR	827516	Identifier	r_cons_printf		826410	0					
ANR	827517	ArgumentList	"""%s:%d """		826410	1					
ANR	827518	Argument	"""%s:%d """		826410	0					
ANR	827519	PrimaryExpression	"""%s:%d """		826410	0					
ANR	827520	Argument	r_reg_cond_to_string ( i )		826410	1					
ANR	827521	CallExpression	r_reg_cond_to_string ( i )		826410	0					
ANR	827522	Callee	r_reg_cond_to_string		826410	0					
ANR	827523	Identifier	r_reg_cond_to_string		826410	0					
ANR	827524	ArgumentList	i		826410	1					
ANR	827525	Argument	i		826410	0					
ANR	827526	Identifier	i		826410	0					
ANR	827527	Argument	"r_reg_cond_bits ( core -> dbg -> reg , i , rf )"		826410	2					
ANR	827528	CallExpression	"r_reg_cond_bits ( core -> dbg -> reg , i , rf )"		826410	0					
ANR	827529	Callee	r_reg_cond_bits		826410	0					
ANR	827530	Identifier	r_reg_cond_bits		826410	0					
ANR	827531	ArgumentList	core -> dbg -> reg		826410	1					
ANR	827532	Argument	core -> dbg -> reg		826410	0					
ANR	827533	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827534	PtrMemberAccess	core -> dbg		826410	0					
ANR	827535	Identifier	core		826410	0					
ANR	827536	Identifier	dbg		826410	1					
ANR	827537	Identifier	reg		826410	1					
ANR	827538	Argument	i		826410	1					
ANR	827539	Identifier	i		826410	0					
ANR	827540	Argument	rf		826410	2					
ANR	827541	Identifier	rf		826410	0					
ANR	827542	ExpressionStatement	r_cons_newline ( )	3980:6:117307:117324	826410	1	True				
ANR	827543	CallExpression	r_cons_newline ( )		826410	0					
ANR	827544	Callee	r_cons_newline		826410	0					
ANR	827545	Identifier	r_cons_newline		826410	0					
ANR	827546	ArgumentList			826410	1					
ANR	827547	ElseStatement	else		826410	0					
ANR	827548	CompoundStatement		192:12:4796:4796	826410	0					
ANR	827549	ForStatement	for ( i = 0 ; i < R_REG_COND_LAST ; i ++ )		826410	0					
ANR	827550	ForInit	i = 0 ;	3982:11:117351:117356	826410	0	True				
ANR	827551	AssignmentExpression	i = 0		826410	0		=			
ANR	827552	Identifier	i		826410	0					
ANR	827553	PrimaryExpression	0		826410	1					
ANR	827554	Condition	i < R_REG_COND_LAST	3982:18:117358:117376	826410	1	True				
ANR	827555	RelationalExpression	i < R_REG_COND_LAST		826410	0		<			
ANR	827556	Identifier	i		826410	0					
ANR	827557	Identifier	R_REG_COND_LAST		826410	1					
ANR	827558	PostIncDecOperationExpression	i ++	3982:39:117379:117381	826410	2	True				
ANR	827559	Identifier	i		826410	0					
ANR	827560	IncDec	++		826410	1					
ANR	827561	CompoundStatement		193:44:4842:4842	826410	3					
ANR	827562	ExpressionStatement	"r_cons_printf ( ""%d %s\\n"" , r_reg_cond_bits ( core -> dbg -> reg , i , rf ) , r_reg_cond_to_string ( i ) )"	3983:7:117393:117501	826410	0	True				
ANR	827563	CallExpression	"r_cons_printf ( ""%d %s\\n"" , r_reg_cond_bits ( core -> dbg -> reg , i , rf ) , r_reg_cond_to_string ( i ) )"		826410	0					
ANR	827564	Callee	r_cons_printf		826410	0					
ANR	827565	Identifier	r_cons_printf		826410	0					
ANR	827566	ArgumentList	"""%d %s\\n"""		826410	1					
ANR	827567	Argument	"""%d %s\\n"""		826410	0					
ANR	827568	PrimaryExpression	"""%d %s\\n"""		826410	0					
ANR	827569	Argument	"r_reg_cond_bits ( core -> dbg -> reg , i , rf )"		826410	1					
ANR	827570	CallExpression	"r_reg_cond_bits ( core -> dbg -> reg , i , rf )"		826410	0					
ANR	827571	Callee	r_reg_cond_bits		826410	0					
ANR	827572	Identifier	r_reg_cond_bits		826410	0					
ANR	827573	ArgumentList	core -> dbg -> reg		826410	1					
ANR	827574	Argument	core -> dbg -> reg		826410	0					
ANR	827575	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827576	PtrMemberAccess	core -> dbg		826410	0					
ANR	827577	Identifier	core		826410	0					
ANR	827578	Identifier	dbg		826410	1					
ANR	827579	Identifier	reg		826410	1					
ANR	827580	Argument	i		826410	1					
ANR	827581	Identifier	i		826410	0					
ANR	827582	Argument	rf		826410	2					
ANR	827583	Identifier	rf		826410	0					
ANR	827584	Argument	r_reg_cond_to_string ( i )		826410	2					
ANR	827585	CallExpression	r_reg_cond_to_string ( i )		826410	0					
ANR	827586	Callee	r_reg_cond_to_string		826410	0					
ANR	827587	Identifier	r_reg_cond_to_string		826410	0					
ANR	827588	ArgumentList	i		826410	1					
ANR	827589	Argument	i		826410	0					
ANR	827590	Identifier	i		826410	0					
ANR	827591	ExpressionStatement	free ( rf )	3988:5:117523:117532	826410	2	True				
ANR	827592	CallExpression	free ( rf )		826410	0					
ANR	827593	Callee	free		826410	0					
ANR	827594	Identifier	free		826410	0					
ANR	827595	ArgumentList	rf		826410	1					
ANR	827596	Argument	rf		826410	0					
ANR	827597	Identifier	rf		826410	0					
ANR	827598	BreakStatement	break ;	3992:2:117551:117556	826410	32	True				
ANR	827599	Label	case 's' :	3993:1:117559:117567	826410	33	True				
ANR	827600	SwitchStatement	switch ( str [ 1 ] )		826410	34					
ANR	827601	Condition	str [ 1 ]	3994:10:117588:117593	826410	0	True				
ANR	827602	ArrayIndexing	str [ 1 ]		826410	0					
ANR	827603	Identifier	str		826410	0					
ANR	827604	PrimaryExpression	1		826410	1					
ANR	827605	CompoundStatement		205:18:5054:5054	826410	1					
ANR	827606	Label	case '-' :	3995:2:117600:117608	826410	0	True				
ANR	827607	ExpressionStatement	r_reg_arena_pop ( core -> dbg -> reg )	3996:3:117623:117655	826410	1	True				
ANR	827608	CallExpression	r_reg_arena_pop ( core -> dbg -> reg )		826410	0					
ANR	827609	Callee	r_reg_arena_pop		826410	0					
ANR	827610	Identifier	r_reg_arena_pop		826410	0					
ANR	827611	ArgumentList	core -> dbg -> reg		826410	1					
ANR	827612	Argument	core -> dbg -> reg		826410	0					
ANR	827613	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827614	PtrMemberAccess	core -> dbg		826410	0					
ANR	827615	Identifier	core		826410	0					
ANR	827616	Identifier	dbg		826410	1					
ANR	827617	Identifier	reg		826410	1					
ANR	827618	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"	3998:3:117710:117760	826410	2	True				
ANR	827619	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"		826410	0					
ANR	827620	Callee	r_debug_reg_sync		826410	0					
ANR	827621	Identifier	r_debug_reg_sync		826410	0					
ANR	827622	ArgumentList	core -> dbg		826410	1					
ANR	827623	Argument	core -> dbg		826410	0					
ANR	827624	PtrMemberAccess	core -> dbg		826410	0					
ANR	827625	Identifier	core		826410	0					
ANR	827626	Identifier	dbg		826410	1					
ANR	827627	Argument	R_REG_TYPE_GPR		826410	1					
ANR	827628	Identifier	R_REG_TYPE_GPR		826410	0					
ANR	827629	Argument	true		826410	2					
ANR	827630	Identifier	true		826410	0					
ANR	827631	BreakStatement	break ;	3999:3:117765:117770	826410	3	True				
ANR	827632	Label	case '+' :	4000:2:117774:117782	826410	4	True				
ANR	827633	ExpressionStatement	r_reg_arena_push ( core -> dbg -> reg )	4001:3:117797:117830	826410	5	True				
ANR	827634	CallExpression	r_reg_arena_push ( core -> dbg -> reg )		826410	0					
ANR	827635	Callee	r_reg_arena_push		826410	0					
ANR	827636	Identifier	r_reg_arena_push		826410	0					
ANR	827637	ArgumentList	core -> dbg -> reg		826410	1					
ANR	827638	Argument	core -> dbg -> reg		826410	0					
ANR	827639	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827640	PtrMemberAccess	core -> dbg		826410	0					
ANR	827641	Identifier	core		826410	0					
ANR	827642	Identifier	dbg		826410	1					
ANR	827643	Identifier	reg		826410	1					
ANR	827644	BreakStatement	break ;	4002:3:117835:117840	826410	6	True				
ANR	827645	Label	case '?' :	4003:2:117844:117852	826410	7	True				
ANR	827646	CompoundStatement		216:3:5372:5576	826410	8					
ANR	827647	IdentifierDeclStatement	"const char * help_msg [ ] = { ""Usage:"" , ""drs"" , "" # Register states commands"" , ""drs"" , """" , ""List register stack"" , ""drs+"" , """" , ""Push register state"" , ""drs-"" , """" , ""Pop register state"" , NULL } ;"	4005:3:117914:118118	826410	0	True				
ANR	827648	IdentifierDecl	"* help_msg [ ] = { ""Usage:"" , ""drs"" , "" # Register states commands"" , ""drs"" , """" , ""List register stack"" , ""drs+"" , """" , ""Push register state"" , ""drs-"" , """" , ""Pop register state"" , NULL }"		826410	0					
ANR	827649	IdentifierDeclType	const char * [ ]		826410	0					
ANR	827650	Identifier	help_msg		826410	1					
ANR	827651	AssignmentExpression	"* help_msg [ ] = { ""Usage:"" , ""drs"" , "" # Register states commands"" , ""drs"" , """" , ""List register stack"" , ""drs+"" , """" , ""Push register state"" , ""drs-"" , """" , ""Pop register state"" , NULL }"		826410	2		=			
ANR	827652	Identifier	help_msg		826410	0					
ANR	827653	InitializerList	"""Usage:"""		826410	1					
ANR	827654	PrimaryExpression	"""Usage:"""		826410	0					
ANR	827655	PrimaryExpression	"""drs"""		826410	1					
ANR	827656	PrimaryExpression	""" # Register states commands"""		826410	2					
ANR	827657	PrimaryExpression	"""drs"""		826410	3					
ANR	827658	PrimaryExpression	""""""		826410	4					
ANR	827659	PrimaryExpression	"""List register stack"""		826410	5					
ANR	827660	PrimaryExpression	"""drs+"""		826410	6					
ANR	827661	PrimaryExpression	""""""		826410	7					
ANR	827662	PrimaryExpression	"""Push register state"""		826410	8					
ANR	827663	PrimaryExpression	"""drs-"""		826410	9					
ANR	827664	PrimaryExpression	""""""		826410	10					
ANR	827665	PrimaryExpression	"""Pop register state"""		826410	11					
ANR	827666	Identifier	NULL		826410	12					
ANR	827667	ExpressionStatement	"r_core_cmd_help ( core , help_msg )"	4011:3:118123:118155	826410	1	True				
ANR	827668	CallExpression	"r_core_cmd_help ( core , help_msg )"		826410	0					
ANR	827669	Callee	r_core_cmd_help		826410	0					
ANR	827670	Identifier	r_core_cmd_help		826410	0					
ANR	827671	ArgumentList	core		826410	1					
ANR	827672	Argument	core		826410	0					
ANR	827673	Identifier	core		826410	0					
ANR	827674	Argument	help_msg		826410	1					
ANR	827675	Identifier	help_msg		826410	0					
ANR	827676	BreakStatement	break ;	4012:4:118161:118166	826410	9	True				
ANR	827677	Label	default :	4013:2:118170:118177	826410	10	True				
ANR	827678	Identifier	default		826410	0					
ANR	827679	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , r_list_length ( core -> dbg -> reg -> regset [ 0 ] . pool ) )"	4014:3:118182:118259	826410	11	True				
ANR	827680	CallExpression	"r_cons_printf ( ""%d\\n"" , r_list_length ( core -> dbg -> reg -> regset [ 0 ] . pool ) )"		826410	0					
ANR	827681	Callee	r_cons_printf		826410	0					
ANR	827682	Identifier	r_cons_printf		826410	0					
ANR	827683	ArgumentList	"""%d\\n"""		826410	1					
ANR	827684	Argument	"""%d\\n"""		826410	0					
ANR	827685	PrimaryExpression	"""%d\\n"""		826410	0					
ANR	827686	Argument	r_list_length ( core -> dbg -> reg -> regset [ 0 ] . pool )		826410	1					
ANR	827687	CallExpression	r_list_length ( core -> dbg -> reg -> regset [ 0 ] . pool )		826410	0					
ANR	827688	Callee	r_list_length		826410	0					
ANR	827689	Identifier	r_list_length		826410	0					
ANR	827690	ArgumentList	core -> dbg -> reg -> regset [ 0 ] . pool		826410	1					
ANR	827691	Argument	core -> dbg -> reg -> regset [ 0 ] . pool		826410	0					
ANR	827692	MemberAccess	core -> dbg -> reg -> regset [ 0 ] . pool		826410	0					
ANR	827693	ArrayIndexing	core -> dbg -> reg -> regset [ 0 ]		826410	0					
ANR	827694	PtrMemberAccess	core -> dbg -> reg -> regset		826410	0					
ANR	827695	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827696	PtrMemberAccess	core -> dbg		826410	0					
ANR	827697	Identifier	core		826410	0					
ANR	827698	Identifier	dbg		826410	1					
ANR	827699	Identifier	reg		826410	1					
ANR	827700	Identifier	regset		826410	1					
ANR	827701	PrimaryExpression	0		826410	1					
ANR	827702	Identifier	pool		826410	1					
ANR	827703	BreakStatement	break ;	4016:3:118264:118269	826410	12	True				
ANR	827704	BreakStatement	break ;	4018:2:118277:118282	826410	35	True				
ANR	827705	Label	case 'p' :	4019:1:118285:118293	826410	36	True				
ANR	827706	ExpressionStatement	"cmd_reg_profile ( core , 'a' , str )"	4021:2:118364:118396	826410	37	True				
ANR	827707	CallExpression	"cmd_reg_profile ( core , 'a' , str )"		826410	0					
ANR	827708	Callee	cmd_reg_profile		826410	0					
ANR	827709	Identifier	cmd_reg_profile		826410	0					
ANR	827710	ArgumentList	core		826410	1					
ANR	827711	Argument	core		826410	0					
ANR	827712	Identifier	core		826410	0					
ANR	827713	Argument	'a'		826410	1					
ANR	827714	PrimaryExpression	'a'		826410	0					
ANR	827715	Argument	str		826410	2					
ANR	827716	Identifier	str		826410	0					
ANR	827717	BreakStatement	break ;	4022:2:118400:118405	826410	38	True				
ANR	827718	Label	case 't' :	4023:1:118408:118416	826410	39	True				
ANR	827719	ForStatement	for ( i = 0 ; ( name = r_reg_get_type ( i ) ) ; i ++ )		826410	40					
ANR	827720	ForInit	i = 0 ;	4024:7:118434:118439	826410	0	True				
ANR	827721	AssignmentExpression	i = 0		826410	0		=			
ANR	827722	Identifier	i		826410	0					
ANR	827723	PrimaryExpression	0		826410	1					
ANR	827724	Condition	name = r_reg_get_type ( i )	4024:14:118441:118467	826410	1	True				
ANR	827725	AssignmentExpression	name = r_reg_get_type ( i )		826410	0		=			
ANR	827726	Identifier	name		826410	0					
ANR	827727	CallExpression	r_reg_get_type ( i )		826410	1					
ANR	827728	Callee	r_reg_get_type		826410	0					
ANR	827729	Identifier	r_reg_get_type		826410	0					
ANR	827730	ArgumentList	i		826410	1					
ANR	827731	Argument	i		826410	0					
ANR	827732	Identifier	i		826410	0					
ANR	827733	PostIncDecOperationExpression	i ++	4024:43:118470:118472	826410	2	True				
ANR	827734	Identifier	i		826410	0					
ANR	827735	IncDec	++		826410	1					
ANR	827736	ExpressionStatement	r_cons_println ( name )	4025:3:118478:118499	826410	3	True				
ANR	827737	CallExpression	r_cons_println ( name )		826410	0					
ANR	827738	Callee	r_cons_println		826410	0					
ANR	827739	Identifier	r_cons_println		826410	0					
ANR	827740	ArgumentList	name		826410	1					
ANR	827741	Argument	name		826410	0					
ANR	827742	Identifier	name		826410	0					
ANR	827743	BreakStatement	break ;	4026:2:118503:118508	826410	41	True				
ANR	827744	Label	case 'n' :	4027:1:118511:118519	826410	42	True				
ANR	827745	IfStatement	if ( * ( str + 1 ) == '\\0' )		826410	43					
ANR	827746	Condition	* ( str + 1 ) == '\\0'	4028:6:118536:118553	826410	0	True				
ANR	827747	EqualityExpression	* ( str + 1 ) == '\\0'		826410	0		==			
ANR	827748	UnaryOperationExpression	* ( str + 1 )		826410	0					
ANR	827749	UnaryOperator	*		826410	0					
ANR	827750	AdditiveExpression	str + 1		826410	1		+			
ANR	827751	Identifier	str		826410	0					
ANR	827752	PrimaryExpression	1		826410	1					
ANR	827753	PrimaryExpression	'\\0'		826410	1					
ANR	827754	CompoundStatement		239:26:6014:6014	826410	1					
ANR	827755	ExpressionStatement	"eprintf ( ""Oops. try arn [PC|SP|BP|A0|A1|A2|A3|A4|R0|R1|ZF|SF|NF|OF]\\n"" )"	4029:3:118561:118632	826410	0	True				
ANR	827756	CallExpression	"eprintf ( ""Oops. try arn [PC|SP|BP|A0|A1|A2|A3|A4|R0|R1|ZF|SF|NF|OF]\\n"" )"		826410	0					
ANR	827757	Callee	eprintf		826410	0					
ANR	827758	Identifier	eprintf		826410	0					
ANR	827759	ArgumentList	"""Oops. try arn [PC|SP|BP|A0|A1|A2|A3|A4|R0|R1|ZF|SF|NF|OF]\\n"""		826410	1					
ANR	827760	Argument	"""Oops. try arn [PC|SP|BP|A0|A1|A2|A3|A4|R0|R1|ZF|SF|NF|OF]\\n"""		826410	0					
ANR	827761	PrimaryExpression	"""Oops. try arn [PC|SP|BP|A0|A1|A2|A3|A4|R0|R1|ZF|SF|NF|OF]\\n"""		826410	0					
ANR	827762	BreakStatement	break ;	4030:3:118637:118642	826410	1	True				
ANR	827763	ExpressionStatement	"name = r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( str + 2 ) )"	4032:2:118650:118718	826410	44	True				
ANR	827764	AssignmentExpression	"name = r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( str + 2 ) )"		826410	0		=			
ANR	827765	Identifier	name		826410	0					
ANR	827766	CallExpression	"r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( str + 2 ) )"		826410	1					
ANR	827767	Callee	r_reg_get_name		826410	0					
ANR	827768	Identifier	r_reg_get_name		826410	0					
ANR	827769	ArgumentList	core -> dbg -> reg		826410	1					
ANR	827770	Argument	core -> dbg -> reg		826410	0					
ANR	827771	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827772	PtrMemberAccess	core -> dbg		826410	0					
ANR	827773	Identifier	core		826410	0					
ANR	827774	Identifier	dbg		826410	1					
ANR	827775	Identifier	reg		826410	1					
ANR	827776	Argument	r_reg_get_name_idx ( str + 2 )		826410	1					
ANR	827777	CallExpression	r_reg_get_name_idx ( str + 2 )		826410	0					
ANR	827778	Callee	r_reg_get_name_idx		826410	0					
ANR	827779	Identifier	r_reg_get_name_idx		826410	0					
ANR	827780	ArgumentList	str + 2		826410	1					
ANR	827781	Argument	str + 2		826410	0					
ANR	827782	AdditiveExpression	str + 2		826410	0		+			
ANR	827783	Identifier	str		826410	0					
ANR	827784	PrimaryExpression	2		826410	1					
ANR	827785	IfStatement	if ( name && * name )		826410	45					
ANR	827786	Condition	name && * name	4033:6:118726:118738	826410	0	True				
ANR	827787	AndExpression	name && * name		826410	0		&&			
ANR	827788	Identifier	name		826410	0					
ANR	827789	UnaryOperationExpression	* name		826410	1					
ANR	827790	UnaryOperator	*		826410	0					
ANR	827791	Identifier	name		826410	1					
ANR	827792	CompoundStatement		244:21:6199:6199	826410	1					
ANR	827793	ExpressionStatement	r_cons_println ( name )	4034:3:118746:118767	826410	0	True				
ANR	827794	CallExpression	r_cons_println ( name )		826410	0					
ANR	827795	Callee	r_cons_println		826410	0					
ANR	827796	Identifier	r_cons_println		826410	0					
ANR	827797	ArgumentList	name		826410	1					
ANR	827798	Argument	name		826410	0					
ANR	827799	Identifier	name		826410	0					
ANR	827800	ElseStatement	else		826410	0					
ANR	827801	CompoundStatement		246:9:6236:6236	826410	0					
ANR	827802	ExpressionStatement	"eprintf ( ""Oops. try arn [PC|SP|BP|A0|A1|A2|A3|A4|R0|R1|ZF|SF|NF|OF]\\n"" )"	4036:3:118783:118854	826410	0	True				
ANR	827803	CallExpression	"eprintf ( ""Oops. try arn [PC|SP|BP|A0|A1|A2|A3|A4|R0|R1|ZF|SF|NF|OF]\\n"" )"		826410	0					
ANR	827804	Callee	eprintf		826410	0					
ANR	827805	Identifier	eprintf		826410	0					
ANR	827806	ArgumentList	"""Oops. try arn [PC|SP|BP|A0|A1|A2|A3|A4|R0|R1|ZF|SF|NF|OF]\\n"""		826410	1					
ANR	827807	Argument	"""Oops. try arn [PC|SP|BP|A0|A1|A2|A3|A4|R0|R1|ZF|SF|NF|OF]\\n"""		826410	0					
ANR	827808	PrimaryExpression	"""Oops. try arn [PC|SP|BP|A0|A1|A2|A3|A4|R0|R1|ZF|SF|NF|OF]\\n"""		826410	0					
ANR	827809	BreakStatement	break ;	4038:2:118862:118867	826410	46	True				
ANR	827810	Label	case 'd' :	4039:1:118870:118878	826410	47	True				
ANR	827811	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 3 , use_color )"	4040:2:118891:118955	826410	48	True				
ANR	827812	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 3 , use_color )"		826410	0					
ANR	827813	Callee	r_debug_reg_list		826410	0					
ANR	827814	Identifier	r_debug_reg_list		826410	0					
ANR	827815	ArgumentList	core -> dbg		826410	1					
ANR	827816	Argument	core -> dbg		826410	0					
ANR	827817	PtrMemberAccess	core -> dbg		826410	0					
ANR	827818	Identifier	core		826410	0					
ANR	827819	Identifier	dbg		826410	1					
ANR	827820	Argument	R_REG_TYPE_GPR		826410	1					
ANR	827821	Identifier	R_REG_TYPE_GPR		826410	0					
ANR	827822	Argument	bits		826410	2					
ANR	827823	Identifier	bits		826410	0					
ANR	827824	Argument	3		826410	3					
ANR	827825	PrimaryExpression	3		826410	0					
ANR	827826	Argument	use_color		826410	4					
ANR	827827	Identifier	use_color		826410	0					
ANR	827828	BreakStatement	break ;	4041:2:119000:119005	826410	49	True				
ANR	827829	Label	case 'o' :	4042:1:119008:119016	826410	50	True				
ANR	827830	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	4043:2:119029:119069	826410	51	True				
ANR	827831	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		826410	0					
ANR	827832	Callee	r_reg_arena_swap		826410	0					
ANR	827833	Identifier	r_reg_arena_swap		826410	0					
ANR	827834	ArgumentList	core -> dbg -> reg		826410	1					
ANR	827835	Argument	core -> dbg -> reg		826410	0					
ANR	827836	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827837	PtrMemberAccess	core -> dbg		826410	0					
ANR	827838	Identifier	core		826410	0					
ANR	827839	Identifier	dbg		826410	1					
ANR	827840	Identifier	reg		826410	1					
ANR	827841	Argument	false		826410	1					
ANR	827842	Identifier	false		826410	0					
ANR	827843	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 0 , use_color )"	4044:2:119073:119137	826410	52	True				
ANR	827844	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 0 , use_color )"		826410	0					
ANR	827845	Callee	r_debug_reg_list		826410	0					
ANR	827846	Identifier	r_debug_reg_list		826410	0					
ANR	827847	ArgumentList	core -> dbg		826410	1					
ANR	827848	Argument	core -> dbg		826410	0					
ANR	827849	PtrMemberAccess	core -> dbg		826410	0					
ANR	827850	Identifier	core		826410	0					
ANR	827851	Identifier	dbg		826410	1					
ANR	827852	Argument	R_REG_TYPE_GPR		826410	1					
ANR	827853	Identifier	R_REG_TYPE_GPR		826410	0					
ANR	827854	Argument	bits		826410	2					
ANR	827855	Identifier	bits		826410	0					
ANR	827856	Argument	0		826410	3					
ANR	827857	PrimaryExpression	0		826410	0					
ANR	827858	Argument	use_color		826410	4					
ANR	827859	Identifier	use_color		826410	0					
ANR	827860	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	4045:2:119182:119222	826410	53	True				
ANR	827861	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		826410	0					
ANR	827862	Callee	r_reg_arena_swap		826410	0					
ANR	827863	Identifier	r_reg_arena_swap		826410	0					
ANR	827864	ArgumentList	core -> dbg -> reg		826410	1					
ANR	827865	Argument	core -> dbg -> reg		826410	0					
ANR	827866	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	827867	PtrMemberAccess	core -> dbg		826410	0					
ANR	827868	Identifier	core		826410	0					
ANR	827869	Identifier	dbg		826410	1					
ANR	827870	Identifier	reg		826410	1					
ANR	827871	Argument	false		826410	1					
ANR	827872	Identifier	false		826410	0					
ANR	827873	BreakStatement	break ;	4046:2:119226:119231	826410	54	True				
ANR	827874	Label	case '=' :	4047:1:119234:119242	826410	55	True				
ANR	827875	CompoundStatement		261:3:6737:6754	826410	56					
ANR	827876	IdentifierDeclStatement	char * p = NULL ;	4049:3:119260:119274	826410	0	True				
ANR	827877	IdentifierDecl	* p = NULL		826410	0					
ANR	827878	IdentifierDeclType	char *		826410	0					
ANR	827879	Identifier	p		826410	1					
ANR	827880	AssignmentExpression	* p = NULL		826410	2		=			
ANR	827881	Identifier	NULL		826410	0					
ANR	827882	Identifier	NULL		826410	1					
ANR	827883	IdentifierDeclStatement	char * bits = NULL ;	4050:3:119279:119296	826410	1	True				
ANR	827884	IdentifierDecl	* bits = NULL		826410	0					
ANR	827885	IdentifierDeclType	char *		826410	0					
ANR	827886	Identifier	bits		826410	1					
ANR	827887	AssignmentExpression	* bits = NULL		826410	2		=			
ANR	827888	Identifier	NULL		826410	0					
ANR	827889	Identifier	NULL		826410	1					
ANR	827890	IfStatement	if ( str [ 1 ] )		826410	2					
ANR	827891	Condition	str [ 1 ]	4051:7:119305:119310	826410	0	True				
ANR	827892	ArrayIndexing	str [ 1 ]		826410	0					
ANR	827893	Identifier	str		826410	0					
ANR	827894	PrimaryExpression	1		826410	1					
ANR	827895	CompoundStatement		277:4:7094:7128	826410	1					
ANR	827896	ExpressionStatement	p = strdup ( str + 1 )	4052:4:119319:119339	826410	0	True				
ANR	827897	AssignmentExpression	p = strdup ( str + 1 )		826410	0		=			
ANR	827898	Identifier	p		826410	0					
ANR	827899	CallExpression	strdup ( str + 1 )		826410	1					
ANR	827900	Callee	strdup		826410	0					
ANR	827901	Identifier	strdup		826410	0					
ANR	827902	ArgumentList	str + 1		826410	1					
ANR	827903	Argument	str + 1		826410	0					
ANR	827904	AdditiveExpression	str + 1		826410	0		+			
ANR	827905	Identifier	str		826410	0					
ANR	827906	PrimaryExpression	1		826410	1					
ANR	827907	IfStatement	if ( str [ 1 ] != ':' )		826410	1					
ANR	827908	Condition	str [ 1 ] != ':'	4053:8:119349:119361	826410	0	True				
ANR	827909	EqualityExpression	str [ 1 ] != ':'		826410	0		!=			
ANR	827910	ArrayIndexing	str [ 1 ]		826410	0					
ANR	827911	Identifier	str		826410	0					
ANR	827912	PrimaryExpression	1		826410	1					
ANR	827913	PrimaryExpression	':'		826410	1					
ANR	827914	CompoundStatement		264:23:6822:6822	826410	1					
ANR	827915	ExpressionStatement	"bits = strtok ( p , "":"" )"	4055:5:119399:119421	826410	0	True				
ANR	827916	AssignmentExpression	"bits = strtok ( p , "":"" )"		826410	0		=			
ANR	827917	Identifier	bits		826410	0					
ANR	827918	CallExpression	"strtok ( p , "":"" )"		826410	1					
ANR	827919	Callee	strtok		826410	0					
ANR	827920	Identifier	strtok		826410	0					
ANR	827921	ArgumentList	p		826410	1					
ANR	827922	Argument	p		826410	0					
ANR	827923	Identifier	p		826410	0					
ANR	827924	Argument	""":"""		826410	1					
ANR	827925	PrimaryExpression	""":"""		826410	0					
ANR	827926	IfStatement	if ( r_str_isnumber ( bits ) )		826410	1					
ANR	827927	Condition	r_str_isnumber ( bits )	4056:9:119432:119452	826410	0	True				
ANR	827928	CallExpression	r_str_isnumber ( bits )		826410	0					
ANR	827929	Callee	r_str_isnumber		826410	0					
ANR	827930	Identifier	r_str_isnumber		826410	0					
ANR	827931	ArgumentList	bits		826410	1					
ANR	827932	Argument	bits		826410	0					
ANR	827933	Identifier	bits		826410	0					
ANR	827934	CompoundStatement		268:6:6921:6959	826410	1					
ANR	827935	IdentifierDeclStatement	"st64 sz = r_num_math ( core -> num , bits ) ;"	4057:6:119463:119501	826410	0	True				
ANR	827936	IdentifierDecl	"sz = r_num_math ( core -> num , bits )"		826410	0					
ANR	827937	IdentifierDeclType	st64		826410	0					
ANR	827938	Identifier	sz		826410	1					
ANR	827939	AssignmentExpression	"sz = r_num_math ( core -> num , bits )"		826410	2		=			
ANR	827940	Identifier	sz		826410	0					
ANR	827941	CallExpression	"r_num_math ( core -> num , bits )"		826410	1					
ANR	827942	Callee	r_num_math		826410	0					
ANR	827943	Identifier	r_num_math		826410	0					
ANR	827944	ArgumentList	core -> num		826410	1					
ANR	827945	Argument	core -> num		826410	0					
ANR	827946	PtrMemberAccess	core -> num		826410	0					
ANR	827947	Identifier	core		826410	0					
ANR	827948	Identifier	num		826410	1					
ANR	827949	Argument	bits		826410	1					
ANR	827950	Identifier	bits		826410	0					
ANR	827951	IfStatement	if ( sz > 0 )		826410	1					
ANR	827952	Condition	sz > 0	4058:10:119513:119518	826410	0	True				
ANR	827953	RelationalExpression	sz > 0		826410	0		>			
ANR	827954	Identifier	sz		826410	0					
ANR	827955	PrimaryExpression	0		826410	1					
ANR	827956	CompoundStatement		269:18:6979:6979	826410	1					
ANR	827957	ExpressionStatement	size = sz	4059:7:119530:119539	826410	0	True				
ANR	827958	AssignmentExpression	size = sz		826410	0		=			
ANR	827959	Identifier	size		826410	0					
ANR	827960	Identifier	sz		826410	1					
ANR	827961	ElseStatement	else		826410	0					
ANR	827962	CompoundStatement		272:12:7019:7019	826410	0					
ANR	827963	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ar )"	4062:6:119569:119604	826410	0	True				
ANR	827964	CallExpression	"r_core_cmd_help ( core , help_msg_ar )"		826410	0					
ANR	827965	Callee	r_core_cmd_help		826410	0					
ANR	827966	Identifier	r_core_cmd_help		826410	0					
ANR	827967	ArgumentList	core		826410	1					
ANR	827968	Argument	core		826410	0					
ANR	827969	Identifier	core		826410	0					
ANR	827970	Argument	help_msg_ar		826410	1					
ANR	827971	Identifier	help_msg_ar		826410	0					
ANR	827972	BreakStatement	break ;	4063:6:119612:119617	826410	1	True				
ANR	827973	IdentifierDeclStatement	int len = bits ? strlen ( bits ) : 0 ;	4066:4:119636:119670	826410	2	True				
ANR	827974	IdentifierDecl	len = bits ? strlen ( bits ) : 0		826410	0					
ANR	827975	IdentifierDeclType	int		826410	0					
ANR	827976	Identifier	len		826410	1					
ANR	827977	AssignmentExpression	len = bits ? strlen ( bits ) : 0		826410	2		=			
ANR	827978	Identifier	len		826410	0					
ANR	827979	ConditionalExpression	bits ? strlen ( bits ) : 0		826410	1					
ANR	827980	Condition	bits		826410	0					
ANR	827981	Identifier	bits		826410	0					
ANR	827982	CallExpression	strlen ( bits )		826410	1					
ANR	827983	Callee	strlen		826410	0					
ANR	827984	Identifier	strlen		826410	0					
ANR	827985	ArgumentList	bits		826410	1					
ANR	827986	Argument	bits		826410	0					
ANR	827987	Identifier	bits		826410	0					
ANR	827988	PrimaryExpression	0		826410	2					
ANR	827989	IfStatement	if ( str [ len + 1 ] == ':' )		826410	3					
ANR	827990	Condition	str [ len + 1 ] == ':'	4067:8:119680:119698	826410	0	True				
ANR	827991	EqualityExpression	str [ len + 1 ] == ':'		826410	0		==			
ANR	827992	ArrayIndexing	str [ len + 1 ]		826410	0					
ANR	827993	Identifier	str		826410	0					
ANR	827994	AdditiveExpression	len + 1		826410	1		+			
ANR	827995	Identifier	len		826410	0					
ANR	827996	PrimaryExpression	1		826410	1					
ANR	827997	PrimaryExpression	':'		826410	1					
ANR	827998	CompoundStatement		282:5:7306:7335	826410	1					
ANR	827999	IdentifierDeclStatement	"char * regs = bits ? strtok ( NULL , "":"" ) : strtok ( ( char * ) str + 1 , "":"" ) ;"	4069:5:119734:119804	826410	0	True				
ANR	828000	IdentifierDecl	"* regs = bits ? strtok ( NULL , "":"" ) : strtok ( ( char * ) str + 1 , "":"" )"		826410	0					
ANR	828001	IdentifierDeclType	char *		826410	0					
ANR	828002	Identifier	regs		826410	1					
ANR	828003	AssignmentExpression	"* regs = bits ? strtok ( NULL , "":"" ) : strtok ( ( char * ) str + 1 , "":"" )"		826410	2		=			
ANR	828004	Identifier	regs		826410	0					
ANR	828005	ConditionalExpression	"bits ? strtok ( NULL , "":"" ) : strtok ( ( char * ) str + 1 , "":"" )"		826410	1					
ANR	828006	Condition	bits		826410	0					
ANR	828007	Identifier	bits		826410	0					
ANR	828008	CallExpression	"strtok ( NULL , "":"" )"		826410	1					
ANR	828009	Callee	strtok		826410	0					
ANR	828010	Identifier	strtok		826410	0					
ANR	828011	ArgumentList	NULL		826410	1					
ANR	828012	Argument	NULL		826410	0					
ANR	828013	Identifier	NULL		826410	0					
ANR	828014	Argument	""":"""		826410	1					
ANR	828015	PrimaryExpression	""":"""		826410	0					
ANR	828016	CallExpression	"strtok ( ( char * ) str + 1 , "":"" )"		826410	2					
ANR	828017	Callee	strtok		826410	0					
ANR	828018	Identifier	strtok		826410	0					
ANR	828019	ArgumentList	( char * ) str + 1		826410	1					
ANR	828020	Argument	( char * ) str + 1		826410	0					
ANR	828021	AdditiveExpression	( char * ) str + 1		826410	0		+			
ANR	828022	CastExpression	( char * ) str		826410	0					
ANR	828023	CastTarget	char *		826410	0					
ANR	828024	Identifier	str		826410	1					
ANR	828025	PrimaryExpression	1		826410	1					
ANR	828026	Argument	""":"""		826410	1					
ANR	828027	PrimaryExpression	""":"""		826410	0					
ANR	828028	IdentifierDeclStatement	"char * reg = strtok ( regs , "" "" ) ;"	4070:5:119811:119841	826410	1	True				
ANR	828029	IdentifierDecl	"* reg = strtok ( regs , "" "" )"		826410	0					
ANR	828030	IdentifierDeclType	char *		826410	0					
ANR	828031	Identifier	reg		826410	1					
ANR	828032	AssignmentExpression	"* reg = strtok ( regs , "" "" )"		826410	2		=			
ANR	828033	Identifier	reg		826410	0					
ANR	828034	CallExpression	"strtok ( regs , "" "" )"		826410	1					
ANR	828035	Callee	strtok		826410	0					
ANR	828036	Identifier	strtok		826410	0					
ANR	828037	ArgumentList	regs		826410	1					
ANR	828038	Argument	regs		826410	0					
ANR	828039	Identifier	regs		826410	0					
ANR	828040	Argument	""" """		826410	1					
ANR	828041	PrimaryExpression	""" """		826410	0					
ANR	828042	IdentifierDeclStatement	RList * q_regs = r_list_new ( ) ;	4071:5:119848:119877	826410	2	True				
ANR	828043	IdentifierDecl	* q_regs = r_list_new ( )		826410	0					
ANR	828044	IdentifierDeclType	RList *		826410	0					
ANR	828045	Identifier	q_regs		826410	1					
ANR	828046	AssignmentExpression	* q_regs = r_list_new ( )		826410	2		=			
ANR	828047	Identifier	q_regs		826410	0					
ANR	828048	CallExpression	r_list_new ( )		826410	1					
ANR	828049	Callee	r_list_new		826410	0					
ANR	828050	Identifier	r_list_new		826410	0					
ANR	828051	ArgumentList			826410	1					
ANR	828052	IfStatement	if ( q_regs )		826410	3					
ANR	828053	Condition	q_regs	4072:9:119888:119893	826410	0	True				
ANR	828054	Identifier	q_regs		826410	0					
ANR	828055	CompoundStatement		283:17:7354:7354	826410	1					
ANR	828056	WhileStatement	while ( reg )		826410	0					
ANR	828057	Condition	reg	4073:13:119911:119913	826410	0	True				
ANR	828058	Identifier	reg		826410	0					
ANR	828059	CompoundStatement		284:18:7374:7374	826410	1					
ANR	828060	ExpressionStatement	"r_list_append ( q_regs , reg )"	4074:7:119925:119952	826410	0	True				
ANR	828061	CallExpression	"r_list_append ( q_regs , reg )"		826410	0					
ANR	828062	Callee	r_list_append		826410	0					
ANR	828063	Identifier	r_list_append		826410	0					
ANR	828064	ArgumentList	q_regs		826410	1					
ANR	828065	Argument	q_regs		826410	0					
ANR	828066	Identifier	q_regs		826410	0					
ANR	828067	Argument	reg		826410	1					
ANR	828068	Identifier	reg		826410	0					
ANR	828069	ExpressionStatement	"reg = strtok ( NULL , "" "" )"	4075:7:119961:119985	826410	1	True				
ANR	828070	AssignmentExpression	"reg = strtok ( NULL , "" "" )"		826410	0		=			
ANR	828071	Identifier	reg		826410	0					
ANR	828072	CallExpression	"strtok ( NULL , "" "" )"		826410	1					
ANR	828073	Callee	strtok		826410	0					
ANR	828074	Identifier	strtok		826410	0					
ANR	828075	ArgumentList	NULL		826410	1					
ANR	828076	Argument	NULL		826410	0					
ANR	828077	Identifier	NULL		826410	0					
ANR	828078	Argument	""" """		826410	1					
ANR	828079	PrimaryExpression	""" """		826410	0					
ANR	828080	ExpressionStatement	core -> dbg -> q_regs = q_regs	4077:6:120001:120027	826410	1	True				
ANR	828081	AssignmentExpression	core -> dbg -> q_regs = q_regs		826410	0		=			
ANR	828082	PtrMemberAccess	core -> dbg -> q_regs		826410	0					
ANR	828083	PtrMemberAccess	core -> dbg		826410	0					
ANR	828084	Identifier	core		826410	0					
ANR	828085	Identifier	dbg		826410	1					
ANR	828086	Identifier	q_regs		826410	1					
ANR	828087	Identifier	q_regs		826410	1					
ANR	828088	ExpressionStatement	"__anal_reg_list ( core , type , size , 2 )"	4081:3:120050:120087	826410	3	True				
ANR	828089	CallExpression	"__anal_reg_list ( core , type , size , 2 )"		826410	0					
ANR	828090	Callee	__anal_reg_list		826410	0					
ANR	828091	Identifier	__anal_reg_list		826410	0					
ANR	828092	ArgumentList	core		826410	1					
ANR	828093	Argument	core		826410	0					
ANR	828094	Identifier	core		826410	0					
ANR	828095	Argument	type		826410	1					
ANR	828096	Identifier	type		826410	0					
ANR	828097	Argument	size		826410	2					
ANR	828098	Identifier	size		826410	0					
ANR	828099	Argument	2		826410	3					
ANR	828100	PrimaryExpression	2		826410	0					
ANR	828101	IfStatement	if ( ! r_list_empty ( core -> dbg -> q_regs ) )		826410	4					
ANR	828102	Condition	! r_list_empty ( core -> dbg -> q_regs )	4082:7:120096:120128	826410	0	True				
ANR	828103	UnaryOperationExpression	! r_list_empty ( core -> dbg -> q_regs )		826410	0					
ANR	828104	UnaryOperator	!		826410	0					
ANR	828105	CallExpression	r_list_empty ( core -> dbg -> q_regs )		826410	1					
ANR	828106	Callee	r_list_empty		826410	0					
ANR	828107	Identifier	r_list_empty		826410	0					
ANR	828108	ArgumentList	core -> dbg -> q_regs		826410	1					
ANR	828109	Argument	core -> dbg -> q_regs		826410	0					
ANR	828110	PtrMemberAccess	core -> dbg -> q_regs		826410	0					
ANR	828111	PtrMemberAccess	core -> dbg		826410	0					
ANR	828112	Identifier	core		826410	0					
ANR	828113	Identifier	dbg		826410	1					
ANR	828114	Identifier	q_regs		826410	1					
ANR	828115	CompoundStatement		293:42:7589:7589	826410	1					
ANR	828116	ExpressionStatement	r_list_free ( core -> dbg -> q_regs )	4083:4:120137:120168	826410	0	True				
ANR	828117	CallExpression	r_list_free ( core -> dbg -> q_regs )		826410	0					
ANR	828118	Callee	r_list_free		826410	0					
ANR	828119	Identifier	r_list_free		826410	0					
ANR	828120	ArgumentList	core -> dbg -> q_regs		826410	1					
ANR	828121	Argument	core -> dbg -> q_regs		826410	0					
ANR	828122	PtrMemberAccess	core -> dbg -> q_regs		826410	0					
ANR	828123	PtrMemberAccess	core -> dbg		826410	0					
ANR	828124	Identifier	core		826410	0					
ANR	828125	Identifier	dbg		826410	1					
ANR	828126	Identifier	q_regs		826410	1					
ANR	828127	ExpressionStatement	core -> dbg -> q_regs = NULL	4085:3:120178:120202	826410	5	True				
ANR	828128	AssignmentExpression	core -> dbg -> q_regs = NULL		826410	0		=			
ANR	828129	PtrMemberAccess	core -> dbg -> q_regs		826410	0					
ANR	828130	PtrMemberAccess	core -> dbg		826410	0					
ANR	828131	Identifier	core		826410	0					
ANR	828132	Identifier	dbg		826410	1					
ANR	828133	Identifier	q_regs		826410	1					
ANR	828134	Identifier	NULL		826410	1					
ANR	828135	ExpressionStatement	free ( p )	4086:3:120207:120215	826410	6	True				
ANR	828136	CallExpression	free ( p )		826410	0					
ANR	828137	Callee	free		826410	0					
ANR	828138	Identifier	free		826410	0					
ANR	828139	ArgumentList	p		826410	1					
ANR	828140	Argument	p		826410	0					
ANR	828141	Identifier	p		826410	0					
ANR	828142	BreakStatement	break ;	4088:2:120223:120228	826410	57	True				
ANR	828143	Label	case '.' :	4089:1:120231:120239	826410	58	True				
ANR	828144	Label	case '-' :	4090:1:120251:120259	826410	59	True				
ANR	828145	Label	case '*' :	4091:1:120271:120279	826410	60	True				
ANR	828146	Label	case 'R' :	4092:1:120291:120299	826410	61	True				
ANR	828147	Label	case 'j' :	4093:1:120311:120319	826410	62	True				
ANR	828148	Label	case 'i' :	4094:1:120331:120339	826410	63	True				
ANR	828149	Label	case '\\0' :	4095:1:120351:120360	826410	64	True				
ANR	828150	ExpressionStatement	"__anal_reg_list ( core , type , size , str [ 0 ] )"	4096:2:120372:120414	826410	65	True				
ANR	828151	CallExpression	"__anal_reg_list ( core , type , size , str [ 0 ] )"		826410	0					
ANR	828152	Callee	__anal_reg_list		826410	0					
ANR	828153	Identifier	__anal_reg_list		826410	0					
ANR	828154	ArgumentList	core		826410	1					
ANR	828155	Argument	core		826410	0					
ANR	828156	Identifier	core		826410	0					
ANR	828157	Argument	type		826410	1					
ANR	828158	Identifier	type		826410	0					
ANR	828159	Argument	size		826410	2					
ANR	828160	Identifier	size		826410	0					
ANR	828161	Argument	str [ 0 ]		826410	3					
ANR	828162	ArrayIndexing	str [ 0 ]		826410	0					
ANR	828163	Identifier	str		826410	0					
ANR	828164	PrimaryExpression	0		826410	1					
ANR	828165	BreakStatement	break ;	4097:2:120418:120423	826410	66	True				
ANR	828166	Label	case ' ' :	4098:1:120426:120434	826410	67	True				
ANR	828167	CompoundStatement		339:2:8775:8787	826410	68					
ANR	828168	ExpressionStatement	"arg = strchr ( str + 1 , '=' )"	4099:2:120449:120476	826410	0	True				
ANR	828169	AssignmentExpression	"arg = strchr ( str + 1 , '=' )"		826410	0		=			
ANR	828170	Identifier	arg		826410	0					
ANR	828171	CallExpression	"strchr ( str + 1 , '=' )"		826410	1					
ANR	828172	Callee	strchr		826410	0					
ANR	828173	Identifier	strchr		826410	0					
ANR	828174	ArgumentList	str + 1		826410	1					
ANR	828175	Argument	str + 1		826410	0					
ANR	828176	AdditiveExpression	str + 1		826410	0		+			
ANR	828177	Identifier	str		826410	0					
ANR	828178	PrimaryExpression	1		826410	1					
ANR	828179	Argument	'='		826410	1					
ANR	828180	PrimaryExpression	'='		826410	0					
ANR	828181	IfStatement	if ( arg )		826410	1					
ANR	828182	Condition	arg	4100:6:120484:120486	826410	0	True				
ANR	828183	Identifier	arg		826410	0					
ANR	828184	CompoundStatement		314:3:8007:8043	826410	1					
ANR	828185	ExpressionStatement	* arg = 0	4101:3:120494:120502	826410	0	True				
ANR	828186	AssignmentExpression	* arg = 0		826410	0		=			
ANR	828187	UnaryOperationExpression	* arg		826410	0					
ANR	828188	UnaryOperator	*		826410	0					
ANR	828189	Identifier	arg		826410	1					
ANR	828190	PrimaryExpression	0		826410	1					
ANR	828191	IdentifierDeclStatement	char * ostr = r_str_trim_dup ( str + 1 ) ;	4102:3:120507:120544	826410	1	True				
ANR	828192	IdentifierDecl	* ostr = r_str_trim_dup ( str + 1 )		826410	0					
ANR	828193	IdentifierDeclType	char *		826410	0					
ANR	828194	Identifier	ostr		826410	1					
ANR	828195	AssignmentExpression	* ostr = r_str_trim_dup ( str + 1 )		826410	2		=			
ANR	828196	Identifier	ostr		826410	0					
ANR	828197	CallExpression	r_str_trim_dup ( str + 1 )		826410	1					
ANR	828198	Callee	r_str_trim_dup		826410	0					
ANR	828199	Identifier	r_str_trim_dup		826410	0					
ANR	828200	ArgumentList	str + 1		826410	1					
ANR	828201	Argument	str + 1		826410	0					
ANR	828202	AdditiveExpression	str + 1		826410	0		+			
ANR	828203	Identifier	str		826410	0					
ANR	828204	PrimaryExpression	1		826410	1					
ANR	828205	IdentifierDeclStatement	char * regname = r_str_trim_nc ( ostr ) ;	4103:3:120549:120585	826410	2	True				
ANR	828206	IdentifierDecl	* regname = r_str_trim_nc ( ostr )		826410	0					
ANR	828207	IdentifierDeclType	char *		826410	0					
ANR	828208	Identifier	regname		826410	1					
ANR	828209	AssignmentExpression	* regname = r_str_trim_nc ( ostr )		826410	2		=			
ANR	828210	Identifier	regname		826410	0					
ANR	828211	CallExpression	r_str_trim_nc ( ostr )		826410	1					
ANR	828212	Callee	r_str_trim_nc		826410	0					
ANR	828213	Identifier	r_str_trim_nc		826410	0					
ANR	828214	ArgumentList	ostr		826410	1					
ANR	828215	Argument	ostr		826410	0					
ANR	828216	Identifier	ostr		826410	0					
ANR	828217	ExpressionStatement	"r = r_reg_get ( core -> dbg -> reg , regname , - 1 )"	4104:3:120590:120633	826410	3	True				
ANR	828218	AssignmentExpression	"r = r_reg_get ( core -> dbg -> reg , regname , - 1 )"		826410	0		=			
ANR	828219	Identifier	r		826410	0					
ANR	828220	CallExpression	"r_reg_get ( core -> dbg -> reg , regname , - 1 )"		826410	1					
ANR	828221	Callee	r_reg_get		826410	0					
ANR	828222	Identifier	r_reg_get		826410	0					
ANR	828223	ArgumentList	core -> dbg -> reg		826410	1					
ANR	828224	Argument	core -> dbg -> reg		826410	0					
ANR	828225	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	828226	PtrMemberAccess	core -> dbg		826410	0					
ANR	828227	Identifier	core		826410	0					
ANR	828228	Identifier	dbg		826410	1					
ANR	828229	Identifier	reg		826410	1					
ANR	828230	Argument	regname		826410	1					
ANR	828231	Identifier	regname		826410	0					
ANR	828232	Argument	- 1		826410	2					
ANR	828233	UnaryOperationExpression	- 1		826410	0					
ANR	828234	UnaryOperator	-		826410	0					
ANR	828235	PrimaryExpression	1		826410	1					
ANR	828236	IfStatement	if ( ! r )		826410	4					
ANR	828237	Condition	! r	4105:7:120642:120643	826410	0	True				
ANR	828238	UnaryOperationExpression	! r		826410	0					
ANR	828239	UnaryOperator	!		826410	0					
ANR	828240	Identifier	r		826410	1					
ANR	828241	CompoundStatement		317:4:8110:8149	826410	1					
ANR	828242	IdentifierDeclStatement	int role = r_reg_get_name_idx ( regname ) ;	4106:4:120652:120691	826410	0	True				
ANR	828243	IdentifierDecl	role = r_reg_get_name_idx ( regname )		826410	0					
ANR	828244	IdentifierDeclType	int		826410	0					
ANR	828245	Identifier	role		826410	1					
ANR	828246	AssignmentExpression	role = r_reg_get_name_idx ( regname )		826410	2		=			
ANR	828247	Identifier	role		826410	0					
ANR	828248	CallExpression	r_reg_get_name_idx ( regname )		826410	1					
ANR	828249	Callee	r_reg_get_name_idx		826410	0					
ANR	828250	Identifier	r_reg_get_name_idx		826410	0					
ANR	828251	ArgumentList	regname		826410	1					
ANR	828252	Argument	regname		826410	0					
ANR	828253	Identifier	regname		826410	0					
ANR	828254	IfStatement	if ( role != - 1 )		826410	1					
ANR	828255	Condition	role != - 1	4107:8:120701:120710	826410	0	True				
ANR	828256	EqualityExpression	role != - 1		826410	0		!=			
ANR	828257	Identifier	role		826410	0					
ANR	828258	UnaryOperationExpression	- 1		826410	1					
ANR	828259	UnaryOperator	-		826410	0					
ANR	828260	PrimaryExpression	1		826410	1					
ANR	828261	CompoundStatement		319:5:8178:8235	826410	1					
ANR	828262	IdentifierDeclStatement	"const char * alias = r_reg_get_name ( core -> dbg -> reg , role ) ;"	4108:5:120720:120777	826410	0	True				
ANR	828263	IdentifierDecl	"* alias = r_reg_get_name ( core -> dbg -> reg , role )"		826410	0					
ANR	828264	IdentifierDeclType	const char *		826410	0					
ANR	828265	Identifier	alias		826410	1					
ANR	828266	AssignmentExpression	"* alias = r_reg_get_name ( core -> dbg -> reg , role )"		826410	2		=			
ANR	828267	Identifier	alias		826410	0					
ANR	828268	CallExpression	"r_reg_get_name ( core -> dbg -> reg , role )"		826410	1					
ANR	828269	Callee	r_reg_get_name		826410	0					
ANR	828270	Identifier	r_reg_get_name		826410	0					
ANR	828271	ArgumentList	core -> dbg -> reg		826410	1					
ANR	828272	Argument	core -> dbg -> reg		826410	0					
ANR	828273	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	828274	PtrMemberAccess	core -> dbg		826410	0					
ANR	828275	Identifier	core		826410	0					
ANR	828276	Identifier	dbg		826410	1					
ANR	828277	Identifier	reg		826410	1					
ANR	828278	Argument	role		826410	1					
ANR	828279	Identifier	role		826410	0					
ANR	828280	ExpressionStatement	"r = r_reg_get ( core -> dbg -> reg , alias , - 1 )"	4109:5:120784:120825	826410	1	True				
ANR	828281	AssignmentExpression	"r = r_reg_get ( core -> dbg -> reg , alias , - 1 )"		826410	0		=			
ANR	828282	Identifier	r		826410	0					
ANR	828283	CallExpression	"r_reg_get ( core -> dbg -> reg , alias , - 1 )"		826410	1					
ANR	828284	Callee	r_reg_get		826410	0					
ANR	828285	Identifier	r_reg_get		826410	0					
ANR	828286	ArgumentList	core -> dbg -> reg		826410	1					
ANR	828287	Argument	core -> dbg -> reg		826410	0					
ANR	828288	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	828289	PtrMemberAccess	core -> dbg		826410	0					
ANR	828290	Identifier	core		826410	0					
ANR	828291	Identifier	dbg		826410	1					
ANR	828292	Identifier	reg		826410	1					
ANR	828293	Argument	alias		826410	1					
ANR	828294	Identifier	alias		826410	0					
ANR	828295	Argument	- 1		826410	2					
ANR	828296	UnaryOperationExpression	- 1		826410	0					
ANR	828297	UnaryOperator	-		826410	0					
ANR	828298	PrimaryExpression	1		826410	1					
ANR	828299	IfStatement	if ( r )		826410	5					
ANR	828300	Condition	r	4112:7:120845:120845	826410	0	True				
ANR	828301	Identifier	r		826410	0					
ANR	828302	CompoundStatement		323:10:8306:8306	826410	1					
ANR	828303	ExpressionStatement	"r_reg_set_value ( core -> dbg -> reg , r , r_num_math ( core -> num , arg + 1 ) )"	4115:4:120944:121018	826410	0	True				
ANR	828304	CallExpression	"r_reg_set_value ( core -> dbg -> reg , r , r_num_math ( core -> num , arg + 1 ) )"		826410	0					
ANR	828305	Callee	r_reg_set_value		826410	0					
ANR	828306	Identifier	r_reg_set_value		826410	0					
ANR	828307	ArgumentList	core -> dbg -> reg		826410	1					
ANR	828308	Argument	core -> dbg -> reg		826410	0					
ANR	828309	PtrMemberAccess	core -> dbg -> reg		826410	0					
ANR	828310	PtrMemberAccess	core -> dbg		826410	0					
ANR	828311	Identifier	core		826410	0					
ANR	828312	Identifier	dbg		826410	1					
ANR	828313	Identifier	reg		826410	1					
ANR	828314	Argument	r		826410	1					
ANR	828315	Identifier	r		826410	0					
ANR	828316	Argument	"r_num_math ( core -> num , arg + 1 )"		826410	2					
ANR	828317	CallExpression	"r_num_math ( core -> num , arg + 1 )"		826410	0					
ANR	828318	Callee	r_num_math		826410	0					
ANR	828319	Identifier	r_num_math		826410	0					
ANR	828320	ArgumentList	core -> num		826410	1					
ANR	828321	Argument	core -> num		826410	0					
ANR	828322	PtrMemberAccess	core -> num		826410	0					
ANR	828323	Identifier	core		826410	0					
ANR	828324	Identifier	num		826410	1					
ANR	828325	Argument	arg + 1		826410	1					
ANR	828326	AdditiveExpression	arg + 1		826410	0		+			
ANR	828327	Identifier	arg		826410	0					
ANR	828328	PrimaryExpression	1		826410	1					
ANR	828329	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"	4117:4:121024:121074	826410	1	True				
ANR	828330	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"		826410	0					
ANR	828331	Callee	r_debug_reg_sync		826410	0					
ANR	828332	Identifier	r_debug_reg_sync		826410	0					
ANR	828333	ArgumentList	core -> dbg		826410	1					
ANR	828334	Argument	core -> dbg		826410	0					
ANR	828335	PtrMemberAccess	core -> dbg		826410	0					
ANR	828336	Identifier	core		826410	0					
ANR	828337	Identifier	dbg		826410	1					
ANR	828338	Argument	R_REG_TYPE_ALL		826410	1					
ANR	828339	Identifier	R_REG_TYPE_ALL		826410	0					
ANR	828340	Argument	true		826410	2					
ANR	828341	Identifier	true		826410	0					
ANR	828342	ExpressionStatement	"r_core_cmdf ( core , "".dr*%d"" , bits )"	4120:4:121160:121194	826410	2	True				
ANR	828343	CallExpression	"r_core_cmdf ( core , "".dr*%d"" , bits )"		826410	0					
ANR	828344	Callee	r_core_cmdf		826410	0					
ANR	828345	Identifier	r_core_cmdf		826410	0					
ANR	828346	ArgumentList	core		826410	1					
ANR	828347	Argument	core		826410	0					
ANR	828348	Identifier	core		826410	0					
ANR	828349	Argument	""".dr*%d"""		826410	1					
ANR	828350	PrimaryExpression	""".dr*%d"""		826410	0					
ANR	828351	Argument	bits		826410	2					
ANR	828352	Identifier	bits		826410	0					
ANR	828353	ElseStatement	else		826410	0					
ANR	828354	CompoundStatement		332:10:8664:8664	826410	0					
ANR	828355	ExpressionStatement	"eprintf ( ""ar: Unknown register '%s'\\n"" , regname )"	4122:4:121212:121260	826410	0	True				
ANR	828356	CallExpression	"eprintf ( ""ar: Unknown register '%s'\\n"" , regname )"		826410	0					
ANR	828357	Callee	eprintf		826410	0					
ANR	828358	Identifier	eprintf		826410	0					
ANR	828359	ArgumentList	"""ar: Unknown register '%s'\\n"""		826410	1					
ANR	828360	Argument	"""ar: Unknown register '%s'\\n"""		826410	0					
ANR	828361	PrimaryExpression	"""ar: Unknown register '%s'\\n"""		826410	0					
ANR	828362	Argument	regname		826410	1					
ANR	828363	Identifier	regname		826410	0					
ANR	828364	ExpressionStatement	free ( ostr )	4124:3:121270:121281	826410	6	True				
ANR	828365	CallExpression	free ( ostr )		826410	0					
ANR	828366	Callee	free		826410	0					
ANR	828367	Identifier	free		826410	0					
ANR	828368	ArgumentList	ostr		826410	1					
ANR	828369	Argument	ostr		826410	0					
ANR	828370	Identifier	ostr		826410	0					
ANR	828371	ReturnStatement	return ;	4125:3:121286:121292	826410	7	True				
ANR	828372	IdentifierDeclStatement	char name [ 32 ] ;	4127:2:121300:121313	826410	2	True				
ANR	828373	IdentifierDecl	name [ 32 ]		826410	0					
ANR	828374	IdentifierDeclType	char [ 32 ]		826410	0					
ANR	828375	Identifier	name		826410	1					
ANR	828376	PrimaryExpression	32		826410	2					
ANR	828377	IdentifierDeclStatement	"int i = 1 , j ;"	4128:2:121317:121329	826410	3	True				
ANR	828378	IdentifierDecl	i = 1		826410	0					
ANR	828379	IdentifierDeclType	int		826410	0					
ANR	828380	Identifier	i		826410	1					
ANR	828381	AssignmentExpression	i = 1		826410	2		=			
ANR	828382	Identifier	i		826410	0					
ANR	828383	PrimaryExpression	1		826410	1					
ANR	828384	IdentifierDecl	j		826410	1					
ANR	828385	IdentifierDeclType	int		826410	0					
ANR	828386	Identifier	j		826410	1					
ANR	828387	WhileStatement	while ( str [ i ] )		826410	4					
ANR	828388	Condition	str [ i ]	4129:9:121340:121345	826410	0	True				
ANR	828389	ArrayIndexing	str [ i ]		826410	0					
ANR	828390	Identifier	str		826410	0					
ANR	828391	Identifier	i		826410	1					
ANR	828392	CompoundStatement		340:17:8806:8806	826410	1					
ANR	828393	IfStatement	"if ( str [ i ] == ',' )"		826410	0					
ANR	828394	Condition	"str [ i ] == ','"	4130:7:121357:121369	826410	0	True				
ANR	828395	EqualityExpression	"str [ i ] == ','"		826410	0		==			
ANR	828396	ArrayIndexing	str [ i ]		826410	0					
ANR	828397	Identifier	str		826410	0					
ANR	828398	Identifier	i		826410	1					
ANR	828399	PrimaryExpression	"','"		826410	1					
ANR	828400	CompoundStatement		341:22:8830:8830	826410	1					
ANR	828401	ExpressionStatement	i ++	4131:4:121378:121381	826410	0	True				
ANR	828402	PostIncDecOperationExpression	i ++		826410	0					
ANR	828403	Identifier	i		826410	0					
ANR	828404	IncDec	++		826410	1					
ANR	828405	ElseStatement	else		826410	0					
ANR	828406	CompoundStatement		343:10:8851:8851	826410	0					
ANR	828407	ForStatement	"for ( j = i ; str [ ++ j ] && str [ j ] != ',' ; )"		826410	0					
ANR	828408	ForInit	j = i ;	4133:9:121404:121409	826410	0	True				
ANR	828409	AssignmentExpression	j = i		826410	0		=			
ANR	828410	Identifier	j		826410	0					
ANR	828411	Identifier	i		826410	1					
ANR	828412	Condition	"str [ ++ j ] && str [ j ] != ','"	4133:16:121411:121435	826410	1	True				
ANR	828413	AndExpression	"str [ ++ j ] && str [ j ] != ','"		826410	0		&&			
ANR	828414	ArrayIndexing	str [ ++ j ]		826410	0					
ANR	828415	Identifier	str		826410	0					
ANR	828416	UnaryExpression	++ j		826410	1					
ANR	828417	IncDec	++		826410	0					
ANR	828418	Identifier	j		826410	1					
ANR	828419	EqualityExpression	"str [ j ] != ','"		826410	1		!=			
ANR	828420	ArrayIndexing	str [ j ]		826410	0					
ANR	828421	Identifier	str		826410	0					
ANR	828422	Identifier	j		826410	1					
ANR	828423	PrimaryExpression	"','"		826410	1					
ANR	828424	ExpressionStatement		4133:44:121439:121439	826410	2	True				
ANR	828425	IfStatement	if ( j - i + 1 <= sizeof name )		826410	1					
ANR	828426	Condition	j - i + 1 <= sizeof name	4134:8:121449:121472	826410	0	True				
ANR	828427	RelationalExpression	j - i + 1 <= sizeof name		826410	0		<=			
ANR	828428	AdditiveExpression	j - i + 1		826410	0		-			
ANR	828429	Identifier	j		826410	0					
ANR	828430	AdditiveExpression	i + 1		826410	1		+			
ANR	828431	Identifier	i		826410	0					
ANR	828432	PrimaryExpression	1		826410	1					
ANR	828433	SizeofExpression	sizeof name		826410	1					
ANR	828434	Sizeof	sizeof		826410	0					
ANR	828435	Identifier	name		826410	1					
ANR	828436	CompoundStatement		345:34:8933:8933	826410	1					
ANR	828437	ExpressionStatement	"r_str_ncpy ( name , str + i , j - i + 1 )"	4135:5:121482:121519	826410	0	True				
ANR	828438	CallExpression	"r_str_ncpy ( name , str + i , j - i + 1 )"		826410	0					
ANR	828439	Callee	r_str_ncpy		826410	0					
ANR	828440	Identifier	r_str_ncpy		826410	0					
ANR	828441	ArgumentList	name		826410	1					
ANR	828442	Argument	name		826410	0					
ANR	828443	Identifier	name		826410	0					
ANR	828444	Argument	str + i		826410	1					
ANR	828445	AdditiveExpression	str + i		826410	0		+			
ANR	828446	Identifier	str		826410	0					
ANR	828447	Identifier	i		826410	1					
ANR	828448	Argument	j - i + 1		826410	2					
ANR	828449	AdditiveExpression	j - i + 1		826410	0		-			
ANR	828450	Identifier	j		826410	0					
ANR	828451	AdditiveExpression	i + 1		826410	1		+			
ANR	828452	Identifier	i		826410	0					
ANR	828453	PrimaryExpression	1		826410	1					
ANR	828454	IfStatement	if ( IS_DIGIT ( name [ 0 ] ) )		826410	1					
ANR	828455	Condition	IS_DIGIT ( name [ 0 ] )	4136:9:121530:121547	826410	0	True				
ANR	828456	CallExpression	IS_DIGIT ( name [ 0 ] )		826410	0					
ANR	828457	Callee	IS_DIGIT		826410	0					
ANR	828458	Identifier	IS_DIGIT		826410	0					
ANR	828459	ArgumentList	name [ 0 ]		826410	1					
ANR	828460	Argument	name [ 0 ]		826410	0					
ANR	828461	ArrayIndexing	name [ 0 ]		826410	0					
ANR	828462	Identifier	name		826410	0					
ANR	828463	PrimaryExpression	0		826410	1					
ANR	828464	CompoundStatement		347:29:9008:9008	826410	1					
ANR	828465	ExpressionStatement	"__anal_reg_list ( core , R_REG_TYPE_GPR , atoi ( name ) , '\\0' )"	4137:6:121572:121629	826410	0	True				
ANR	828466	CallExpression	"__anal_reg_list ( core , R_REG_TYPE_GPR , atoi ( name ) , '\\0' )"		826410	0					
ANR	828467	Callee	__anal_reg_list		826410	0					
ANR	828468	Identifier	__anal_reg_list		826410	0					
ANR	828469	ArgumentList	core		826410	1					
ANR	828470	Argument	core		826410	0					
ANR	828471	Identifier	core		826410	0					
ANR	828472	Argument	R_REG_TYPE_GPR		826410	1					
ANR	828473	Identifier	R_REG_TYPE_GPR		826410	0					
ANR	828474	Argument	atoi ( name )		826410	2					
ANR	828475	CallExpression	atoi ( name )		826410	0					
ANR	828476	Callee	atoi		826410	0					
ANR	828477	Identifier	atoi		826410	0					
ANR	828478	ArgumentList	name		826410	1					
ANR	828479	Argument	name		826410	0					
ANR	828480	Identifier	name		826410	0					
ANR	828481	Argument	'\\0'		826410	3					
ANR	828482	PrimaryExpression	'\\0'		826410	0					
ANR	828483	ElseStatement	else		826410	0					
ANR	828484	IfStatement	"if ( showreg ( core , name ) > 0 )"		826410	0					
ANR	828485	Condition	"showreg ( core , name ) > 0"	4138:16:121647:121670	826410	0	True				
ANR	828486	RelationalExpression	"showreg ( core , name ) > 0"		826410	0		>			
ANR	828487	CallExpression	"showreg ( core , name )"		826410	0					
ANR	828488	Callee	showreg		826410	0					
ANR	828489	Identifier	showreg		826410	0					
ANR	828490	ArgumentList	core		826410	1					
ANR	828491	Argument	core		826410	0					
ANR	828492	Identifier	core		826410	0					
ANR	828493	Argument	name		826410	1					
ANR	828494	Identifier	name		826410	0					
ANR	828495	PrimaryExpression	0		826410	1					
ANR	828496	CompoundStatement		349:42:9131:9131	826410	1					
ANR	828497	ElseStatement	else		826410	0					
ANR	828498	CompoundStatement		350:12:9160:9160	826410	0					
ANR	828499	ExpressionStatement	type = r_reg_type_by_name ( name )	4140:6:121734:121766	826410	0	True				
ANR	828500	AssignmentExpression	type = r_reg_type_by_name ( name )		826410	0		=			
ANR	828501	Identifier	type		826410	0					
ANR	828502	CallExpression	r_reg_type_by_name ( name )		826410	1					
ANR	828503	Callee	r_reg_type_by_name		826410	0					
ANR	828504	Identifier	r_reg_type_by_name		826410	0					
ANR	828505	ArgumentList	name		826410	1					
ANR	828506	Argument	name		826410	0					
ANR	828507	Identifier	name		826410	0					
ANR	828508	ExpressionStatement	"__anal_reg_list ( core , type , - 1 , '\\0' )"	4142:6:121872:121910	826410	1	True				
ANR	828509	CallExpression	"__anal_reg_list ( core , type , - 1 , '\\0' )"		826410	0					
ANR	828510	Callee	__anal_reg_list		826410	0					
ANR	828511	Identifier	__anal_reg_list		826410	0					
ANR	828512	ArgumentList	core		826410	1					
ANR	828513	Argument	core		826410	0					
ANR	828514	Identifier	core		826410	0					
ANR	828515	Argument	type		826410	1					
ANR	828516	Identifier	type		826410	0					
ANR	828517	Argument	- 1		826410	2					
ANR	828518	UnaryOperationExpression	- 1		826410	0					
ANR	828519	UnaryOperator	-		826410	0					
ANR	828520	PrimaryExpression	1		826410	1					
ANR	828521	Argument	'\\0'		826410	3					
ANR	828522	PrimaryExpression	'\\0'		826410	0					
ANR	828523	ExpressionStatement	i = j	4145:4:121929:121934	826410	2	True				
ANR	828524	AssignmentExpression	i = j		826410	0		=			
ANR	828525	Identifier	i		826410	0					
ANR	828526	Identifier	j		826410	1					
ANR	828527	ReturnType	void		826410	1					
ANR	828528	Identifier	cmd_anal_reg		826410	2					
ANR	828529	ParameterList	"RCore * core , const char * str"		826410	3					
ANR	828530	Parameter	RCore * core	3790:18:112511:112521	826410	0	True				
ANR	828531	ParameterType	RCore *		826410	0					
ANR	828532	Identifier	core		826410	1					
ANR	828533	Parameter	const char * str	3790:31:112524:112538	826410	1	True				
ANR	828534	ParameterType	const char *		826410	0					
ANR	828535	Identifier	str		826410	1					
ANR	828536	CFGEntryNode	ENTRY		826410		True				
ANR	828537	CFGExitNode	EXIT		826410		True				
ANR	828538	Symbol	a -> size		826410						
ANR	828539	Symbol	r_reg_get_type		826410						
ANR	828540	Symbol	strchr		826410						
ANR	828541	Symbol	type		826410						
ANR	828542	Symbol	r_reg_regset_get		826410						
ANR	828543	Symbol	len		826410						
ANR	828544	Symbol	* core -> num		826410						
ANR	828545	Symbol	* ( str + 1 )		826410						
ANR	828546	Symbol	id		826410						
ANR	828547	Symbol	core -> anal -> reg -> regset		826410						
ANR	828548	Symbol	bits		826410						
ANR	828549	Symbol	iter		826410						
ANR	828550	Symbol	q_regs		826410						
ANR	828551	Symbol	str		826410						
ANR	828552	Symbol	* * * core		826410						
ANR	828553	Symbol	size		826410						
ANR	828554	Symbol	rf		826410						
ANR	828555	Symbol	r -> name		826410						
ANR	828556	Symbol	rs -> arena		826410						
ANR	828557	Symbol	r_config_get_i		826410						
ANR	828558	Symbol	r_str_trim_ro		826410						
ANR	828559	Symbol	r_list_empty		826410						
ANR	828560	Symbol	& len		826410						
ANR	828561	Symbol	* core -> dbg		826410						
ANR	828562	Symbol	* arg		826410						
ANR	828563	Symbol	rf -> p		826410						
ANR	828564	Symbol	rs		826410						
ANR	828565	Symbol	rf -> o		826410						
ANR	828566	Symbol	role		826410						
ANR	828567	Symbol	core -> anal -> reg -> reg_profile_cmt		826410						
ANR	828568	Symbol	r_reg_cond_get		826410						
ANR	828569	Symbol	* core		826410						
ANR	828570	Symbol	* string		826410						
ANR	828571	Symbol	R_REG_COND_LAST		826410						
ANR	828572	Symbol	core -> anal		826410						
ANR	828573	Symbol	rf -> c		826410						
ANR	828574	Symbol	core -> dbg -> q_regs		826410						
ANR	828575	Symbol	r_reg_cond_from_string		826410						
ANR	828576	Symbol	showreg		826410						
ANR	828577	Symbol	help_msg_arw		826410						
ANR	828578	Symbol	help_msg_ar		826410						
ANR	828579	Symbol	ostr		826410						
ANR	828580	Symbol	R_REG_TYPE_ALL		826410						
ANR	828581	Symbol	arg		826410						
ANR	828582	Symbol	core -> dbg -> reg -> regset		826410						
ANR	828583	Symbol	rf -> z		826410						
ANR	828584	Symbol	* str		826410						
ANR	828585	Symbol	* core -> anal -> reg		826410						
ANR	828586	Symbol	rf -> s		826410						
ANR	828587	Symbol	R_REG_TYPE_GPR		826410						
ANR	828588	Symbol	* name		826410						
ANR	828589	Symbol	atoi		826410						
ANR	828590	Symbol	a		826410						
ANR	828591	Symbol	core -> anal -> bits		826410						
ANR	828592	Symbol	* nl		826410						
ANR	828593	Symbol	sz		826410						
ANR	828594	Symbol	i		826410						
ANR	828595	Symbol	r_reg_get_bytes		826410						
ANR	828596	Symbol	help_msg_ara		826410						
ANR	828597	Symbol	j		826410						
ANR	828598	Symbol	regs		826410						
ANR	828599	Symbol	off		826410						
ANR	828600	Symbol	o		826410						
ANR	828601	Symbol	IS_DIGIT		826410						
ANR	828602	Symbol	nargs		826410						
ANR	828603	Symbol	p		826410						
ANR	828604	Symbol	help_msg		826410						
ANR	828605	Symbol	r		826410						
ANR	828606	Symbol	buf		826410						
ANR	828607	Symbol	* core -> anal		826410						
ANR	828608	Symbol	s		826410						
ANR	828609	Symbol	core -> dbg -> reg		826410						
ANR	828610	Symbol	r_list_length		826410						
ANR	828611	Symbol	* len		826410						
ANR	828612	Symbol	core -> anal -> reg		826410						
ANR	828613	Symbol	core -> num -> value		826410						
ANR	828614	Symbol	r_str_trim_dup		826410						
ANR	828615	Symbol	strlen		826410						
ANR	828616	Symbol	* core -> dbg -> reg -> regset		826410						
ANR	828617	Symbol	* * core -> dbg -> reg		826410						
ANR	828618	Symbol	reg		826410						
ANR	828619	Symbol	* core -> dbg -> reg		826410						
ANR	828620	Symbol	* * core -> anal		826410						
ANR	828621	Symbol	r_reg_cond_retrieve		826410						
ANR	828622	Symbol	core -> num		826410						
ANR	828623	Symbol	R_SYS_BITS_64		826410						
ANR	828624	Symbol	r_reg_get		826410						
ANR	828625	Symbol	regname		826410						
ANR	828626	Symbol	NULL		826410						
ANR	828627	Symbol	R_REG_TYPE_LAST		826410						
ANR	828628	Symbol	strtok		826410						
ANR	828629	Symbol	use_color		826410						
ANR	828630	Symbol	core -> dbg -> reg -> regset [ 0 ] . pool		826410						
ANR	828631	Symbol	& sz		826410						
ANR	828632	Symbol	r_str_trim_nc		826410						
ANR	828633	Symbol	core		826410						
ANR	828634	Symbol	r_reg_get_name_idx		826410						
ANR	828635	Symbol	r_reg_get_name		826410						
ANR	828636	Symbol	name		826410						
ANR	828637	Symbol	true		826410						
ANR	828638	Symbol	r_reg_getv		826410						
ANR	828639	Symbol	nl		826410						
ANR	828640	Symbol	r_reg_cond_to_string		826410						
ANR	828641	Symbol	r_reg_cond_bits		826410						
ANR	828642	Symbol	string		826410						
ANR	828643	Symbol	r_num_math		826410						
ANR	828644	Symbol	r_reg_type_by_name		826410						
ANR	828645	Symbol	* * * core -> dbg		826410						
ANR	828646	Symbol	alias		826410						
ANR	828647	Symbol	* * * * core		826410						
ANR	828648	Symbol	sdb_fmt		826410						
ANR	828649	Symbol	* * core		826410						
ANR	828650	Symbol	core -> config		826410						
ANR	828651	Symbol	* rs		826410						
ANR	828652	Symbol	r_str_isnumber		826410						
ANR	828653	Symbol	false		826410						
ANR	828654	Symbol	* a		826410						
ANR	828655	Symbol	* i		826410						
ANR	828656	Symbol	* j		826410						
ANR	828657	Symbol	* rf		826410						
ANR	828658	Symbol	use_colors		826410						
ANR	828659	Symbol	strdup		826410						
ANR	828660	Symbol	* r		826410						
ANR	828661	Symbol	core -> dbg		826410						
ANR	828662	Symbol	* * core -> dbg		826410						
ANR	828663	Symbol	r_list_new		826410						
ANR	828664	Function	initializeEsil	4152:0:121954:123839							
ANR	828665	FunctionDef	initializeEsil (RCore * core)		828664	0					
ANR	828666	CompoundStatement		4152:40:121994:123839	828664	0					
ANR	828667	IdentifierDeclStatement	"const char * name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	4153:1:121997:122063	828664	0	True				
ANR	828668	IdentifierDecl	"* name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		828664	0					
ANR	828669	IdentifierDeclType	const char *		828664	0					
ANR	828670	Identifier	name		828664	1					
ANR	828671	AssignmentExpression	"* name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		828664	2		=			
ANR	828672	Identifier	name		828664	0					
ANR	828673	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		828664	1					
ANR	828674	Callee	r_reg_get_name		828664	0					
ANR	828675	Identifier	r_reg_get_name		828664	0					
ANR	828676	ArgumentList	core -> anal -> reg		828664	1					
ANR	828677	Argument	core -> anal -> reg		828664	0					
ANR	828678	PtrMemberAccess	core -> anal -> reg		828664	0					
ANR	828679	PtrMemberAccess	core -> anal		828664	0					
ANR	828680	Identifier	core		828664	0					
ANR	828681	Identifier	anal		828664	1					
ANR	828682	Identifier	reg		828664	1					
ANR	828683	Argument	R_REG_NAME_PC		828664	1					
ANR	828684	Identifier	R_REG_NAME_PC		828664	0					
ANR	828685	IdentifierDeclStatement	"int romem = r_config_get_i ( core -> config , ""esil.romem"" ) ;"	4154:1:122066:122121	828664	1	True				
ANR	828686	IdentifierDecl	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		828664	0					
ANR	828687	IdentifierDeclType	int		828664	0					
ANR	828688	Identifier	romem		828664	1					
ANR	828689	AssignmentExpression	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		828664	2		=			
ANR	828690	Identifier	romem		828664	0					
ANR	828691	CallExpression	"r_config_get_i ( core -> config , ""esil.romem"" )"		828664	1					
ANR	828692	Callee	r_config_get_i		828664	0					
ANR	828693	Identifier	r_config_get_i		828664	0					
ANR	828694	ArgumentList	core -> config		828664	1					
ANR	828695	Argument	core -> config		828664	0					
ANR	828696	PtrMemberAccess	core -> config		828664	0					
ANR	828697	Identifier	core		828664	0					
ANR	828698	Identifier	config		828664	1					
ANR	828699	Argument	"""esil.romem"""		828664	1					
ANR	828700	PrimaryExpression	"""esil.romem"""		828664	0					
ANR	828701	IdentifierDeclStatement	"int stats = r_config_get_i ( core -> config , ""esil.stats"" ) ;"	4155:1:122124:122179	828664	2	True				
ANR	828702	IdentifierDecl	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		828664	0					
ANR	828703	IdentifierDeclType	int		828664	0					
ANR	828704	Identifier	stats		828664	1					
ANR	828705	AssignmentExpression	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		828664	2		=			
ANR	828706	Identifier	stats		828664	0					
ANR	828707	CallExpression	"r_config_get_i ( core -> config , ""esil.stats"" )"		828664	1					
ANR	828708	Callee	r_config_get_i		828664	0					
ANR	828709	Identifier	r_config_get_i		828664	0					
ANR	828710	ArgumentList	core -> config		828664	1					
ANR	828711	Argument	core -> config		828664	0					
ANR	828712	PtrMemberAccess	core -> config		828664	0					
ANR	828713	Identifier	core		828664	0					
ANR	828714	Identifier	config		828664	1					
ANR	828715	Argument	"""esil.stats"""		828664	1					
ANR	828716	PrimaryExpression	"""esil.stats"""		828664	0					
ANR	828717	IdentifierDeclStatement	"int iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	4156:1:122182:122239	828664	3	True				
ANR	828718	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		828664	0					
ANR	828719	IdentifierDeclType	int		828664	0					
ANR	828720	Identifier	iotrap		828664	1					
ANR	828721	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		828664	2		=			
ANR	828722	Identifier	iotrap		828664	0					
ANR	828723	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		828664	1					
ANR	828724	Callee	r_config_get_i		828664	0					
ANR	828725	Identifier	r_config_get_i		828664	0					
ANR	828726	ArgumentList	core -> config		828664	1					
ANR	828727	Argument	core -> config		828664	0					
ANR	828728	PtrMemberAccess	core -> config		828664	0					
ANR	828729	Identifier	core		828664	0					
ANR	828730	Identifier	config		828664	1					
ANR	828731	Argument	"""esil.iotrap"""		828664	1					
ANR	828732	PrimaryExpression	"""esil.iotrap"""		828664	0					
ANR	828733	IdentifierDeclStatement	"int exectrap = r_config_get_i ( core -> config , ""esil.exectrap"" ) ;"	4157:1:122242:122303	828664	4	True				
ANR	828734	IdentifierDecl	"exectrap = r_config_get_i ( core -> config , ""esil.exectrap"" )"		828664	0					
ANR	828735	IdentifierDeclType	int		828664	0					
ANR	828736	Identifier	exectrap		828664	1					
ANR	828737	AssignmentExpression	"exectrap = r_config_get_i ( core -> config , ""esil.exectrap"" )"		828664	2		=			
ANR	828738	Identifier	exectrap		828664	0					
ANR	828739	CallExpression	"r_config_get_i ( core -> config , ""esil.exectrap"" )"		828664	1					
ANR	828740	Callee	r_config_get_i		828664	0					
ANR	828741	Identifier	r_config_get_i		828664	0					
ANR	828742	ArgumentList	core -> config		828664	1					
ANR	828743	Argument	core -> config		828664	0					
ANR	828744	PtrMemberAccess	core -> config		828664	0					
ANR	828745	Identifier	core		828664	0					
ANR	828746	Identifier	config		828664	1					
ANR	828747	Argument	"""esil.exectrap"""		828664	1					
ANR	828748	PrimaryExpression	"""esil.exectrap"""		828664	0					
ANR	828749	IdentifierDeclStatement	"int stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" ) ;"	4158:1:122306:122371	828664	5	True				
ANR	828750	IdentifierDecl	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		828664	0					
ANR	828751	IdentifierDeclType	int		828664	0					
ANR	828752	Identifier	stacksize		828664	1					
ANR	828753	AssignmentExpression	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		828664	2		=			
ANR	828754	Identifier	stacksize		828664	0					
ANR	828755	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.depth"" )"		828664	1					
ANR	828756	Callee	r_config_get_i		828664	0					
ANR	828757	Identifier	r_config_get_i		828664	0					
ANR	828758	ArgumentList	core -> config		828664	1					
ANR	828759	Argument	core -> config		828664	0					
ANR	828760	PtrMemberAccess	core -> config		828664	0					
ANR	828761	Identifier	core		828664	0					
ANR	828762	Identifier	config		828664	1					
ANR	828763	Argument	"""esil.stack.depth"""		828664	1					
ANR	828764	PrimaryExpression	"""esil.stack.depth"""		828664	0					
ANR	828765	IdentifierDeclStatement	"int noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" ) ;"	4159:1:122374:122431	828664	6	True				
ANR	828766	IdentifierDecl	"noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" )"		828664	0					
ANR	828767	IdentifierDeclType	int		828664	0					
ANR	828768	Identifier	noNULL		828664	1					
ANR	828769	AssignmentExpression	"noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" )"		828664	2		=			
ANR	828770	Identifier	noNULL		828664	0					
ANR	828771	CallExpression	"r_config_get_i ( core -> config , ""esil.noNULL"" )"		828664	1					
ANR	828772	Callee	r_config_get_i		828664	0					
ANR	828773	Identifier	r_config_get_i		828664	0					
ANR	828774	ArgumentList	core -> config		828664	1					
ANR	828775	Argument	core -> config		828664	0					
ANR	828776	PtrMemberAccess	core -> config		828664	0					
ANR	828777	Identifier	core		828664	0					
ANR	828778	Identifier	config		828664	1					
ANR	828779	Argument	"""esil.noNULL"""		828664	1					
ANR	828780	PrimaryExpression	"""esil.noNULL"""		828664	0					
ANR	828781	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	4160:1:122434:122505	828664	7	True				
ANR	828782	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		828664	0					
ANR	828783	IdentifierDeclType	unsigned int		828664	0					
ANR	828784	Identifier	addrsize		828664	1					
ANR	828785	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		828664	2		=			
ANR	828786	Identifier	addrsize		828664	0					
ANR	828787	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		828664	1					
ANR	828788	Callee	r_config_get_i		828664	0					
ANR	828789	Identifier	r_config_get_i		828664	0					
ANR	828790	ArgumentList	core -> config		828664	1					
ANR	828791	Argument	core -> config		828664	0					
ANR	828792	PtrMemberAccess	core -> config		828664	0					
ANR	828793	Identifier	core		828664	0					
ANR	828794	Identifier	config		828664	1					
ANR	828795	Argument	"""esil.addr.size"""		828664	1					
ANR	828796	PrimaryExpression	"""esil.addr.size"""		828664	0					
ANR	828797	IfStatement	"if ( ! ( core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) ) )"		828664	8					
ANR	828798	Condition	"! ( core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"	4161:5:122512:122578	828664	0	True				
ANR	828799	UnaryOperationExpression	"! ( core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"		828664	0					
ANR	828800	UnaryOperator	!		828664	0					
ANR	828801	AssignmentExpression	"core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		828664	1		=			
ANR	828802	PtrMemberAccess	core -> anal -> esil		828664	0					
ANR	828803	PtrMemberAccess	core -> anal		828664	0					
ANR	828804	Identifier	core		828664	0					
ANR	828805	Identifier	anal		828664	1					
ANR	828806	Identifier	esil		828664	1					
ANR	828807	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		828664	1					
ANR	828808	Callee	r_anal_esil_new		828664	0					
ANR	828809	Identifier	r_anal_esil_new		828664	0					
ANR	828810	ArgumentList	stacksize		828664	1					
ANR	828811	Argument	stacksize		828664	0					
ANR	828812	Identifier	stacksize		828664	0					
ANR	828813	Argument	iotrap		828664	1					
ANR	828814	Identifier	iotrap		828664	0					
ANR	828815	Argument	addrsize		828664	2					
ANR	828816	Identifier	addrsize		828664	0					
ANR	828817	CompoundStatement		10:74:586:586	828664	1					
ANR	828818	ReturnStatement	return UT64_MAX ;	4162:2:122585:122600	828664	0	True				
ANR	828819	Identifier	UT64_MAX		828664	0					
ANR	828820	IdentifierDeclStatement	ut64 addr ;	4164:1:122606:122615	828664	9	True				
ANR	828821	IdentifierDecl	addr		828664	0					
ANR	828822	IdentifierDeclType	ut64		828664	0					
ANR	828823	Identifier	addr		828664	1					
ANR	828824	IdentifierDeclStatement	RAnalEsil * esil = core -> anal -> esil ;	4165:1:122618:122652	828664	10	True				
ANR	828825	IdentifierDecl	* esil = core -> anal -> esil		828664	0					
ANR	828826	IdentifierDeclType	RAnalEsil *		828664	0					
ANR	828827	Identifier	esil		828664	1					
ANR	828828	AssignmentExpression	* esil = core -> anal -> esil		828664	2		=			
ANR	828829	Identifier	esil		828664	0					
ANR	828830	PtrMemberAccess	core -> anal -> esil		828664	1					
ANR	828831	PtrMemberAccess	core -> anal		828664	0					
ANR	828832	Identifier	core		828664	0					
ANR	828833	Identifier	anal		828664	1					
ANR	828834	Identifier	esil		828664	1					
ANR	828835	ExpressionStatement	"esil -> verbose = r_config_get_i ( core -> config , ""esil.verbose"" )"	4166:1:122655:122716	828664	11	True				
ANR	828836	AssignmentExpression	"esil -> verbose = r_config_get_i ( core -> config , ""esil.verbose"" )"		828664	0		=			
ANR	828837	PtrMemberAccess	esil -> verbose		828664	0					
ANR	828838	Identifier	esil		828664	0					
ANR	828839	Identifier	verbose		828664	1					
ANR	828840	CallExpression	"r_config_get_i ( core -> config , ""esil.verbose"" )"		828664	1					
ANR	828841	Callee	r_config_get_i		828664	0					
ANR	828842	Identifier	r_config_get_i		828664	0					
ANR	828843	ArgumentList	core -> config		828664	1					
ANR	828844	Argument	core -> config		828664	0					
ANR	828845	PtrMemberAccess	core -> config		828664	0					
ANR	828846	Identifier	core		828664	0					
ANR	828847	Identifier	config		828664	1					
ANR	828848	Argument	"""esil.verbose"""		828664	1					
ANR	828849	PrimaryExpression	"""esil.verbose"""		828664	0					
ANR	828850	ExpressionStatement	esil -> cmd = r_core_esil_cmd	4167:1:122719:122746	828664	12	True				
ANR	828851	AssignmentExpression	esil -> cmd = r_core_esil_cmd		828664	0		=			
ANR	828852	PtrMemberAccess	esil -> cmd		828664	0					
ANR	828853	Identifier	esil		828664	0					
ANR	828854	Identifier	cmd		828664	1					
ANR	828855	Identifier	r_core_esil_cmd		828664	1					
ANR	828856	ExpressionStatement	"r_anal_esil_setup ( esil , core -> anal , romem , stats , noNULL )"	4168:1:122749:122807	828664	13	True				
ANR	828857	CallExpression	"r_anal_esil_setup ( esil , core -> anal , romem , stats , noNULL )"		828664	0					
ANR	828858	Callee	r_anal_esil_setup		828664	0					
ANR	828859	Identifier	r_anal_esil_setup		828664	0					
ANR	828860	ArgumentList	esil		828664	1					
ANR	828861	Argument	esil		828664	0					
ANR	828862	Identifier	esil		828664	0					
ANR	828863	Argument	core -> anal		828664	1					
ANR	828864	PtrMemberAccess	core -> anal		828664	0					
ANR	828865	Identifier	core		828664	0					
ANR	828866	Identifier	anal		828664	1					
ANR	828867	Argument	romem		828664	2					
ANR	828868	Identifier	romem		828664	0					
ANR	828869	Argument	stats		828664	3					
ANR	828870	Identifier	stats		828664	0					
ANR	828871	Argument	noNULL		828664	4					
ANR	828872	Identifier	noNULL		828664	0					
ANR	828873	CompoundStatement		23:2:996:1075	828664	14					
ANR	828874	IdentifierDeclStatement	"const char * cmd_esil_step = r_config_get ( core -> config , ""cmd.esil.step"" ) ;"	4170:2:122826:122898	828664	0	True				
ANR	828875	IdentifierDecl	"* cmd_esil_step = r_config_get ( core -> config , ""cmd.esil.step"" )"		828664	0					
ANR	828876	IdentifierDeclType	const char *		828664	0					
ANR	828877	Identifier	cmd_esil_step		828664	1					
ANR	828878	AssignmentExpression	"* cmd_esil_step = r_config_get ( core -> config , ""cmd.esil.step"" )"		828664	2		=			
ANR	828879	Identifier	cmd_esil_step		828664	0					
ANR	828880	CallExpression	"r_config_get ( core -> config , ""cmd.esil.step"" )"		828664	1					
ANR	828881	Callee	r_config_get		828664	0					
ANR	828882	Identifier	r_config_get		828664	0					
ANR	828883	ArgumentList	core -> config		828664	1					
ANR	828884	Argument	core -> config		828664	0					
ANR	828885	PtrMemberAccess	core -> config		828664	0					
ANR	828886	Identifier	core		828664	0					
ANR	828887	Identifier	config		828664	1					
ANR	828888	Argument	"""cmd.esil.step"""		828664	1					
ANR	828889	PrimaryExpression	"""cmd.esil.step"""		828664	0					
ANR	828890	IfStatement	if ( cmd_esil_step && * cmd_esil_step )		828664	1					
ANR	828891	Condition	cmd_esil_step && * cmd_esil_step	4171:6:122906:122936	828664	0	True				
ANR	828892	AndExpression	cmd_esil_step && * cmd_esil_step		828664	0		&&			
ANR	828893	Identifier	cmd_esil_step		828664	0					
ANR	828894	UnaryOperationExpression	* cmd_esil_step		828664	1					
ANR	828895	UnaryOperator	*		828664	0					
ANR	828896	Identifier	cmd_esil_step		828664	1					
ANR	828897	CompoundStatement		20:39:944:944	828664	1					
ANR	828898	ExpressionStatement	esil -> cmd_step = strdup ( cmd_esil_step )	4172:3:122944:122983	828664	0	True				
ANR	828899	AssignmentExpression	esil -> cmd_step = strdup ( cmd_esil_step )		828664	0		=			
ANR	828900	PtrMemberAccess	esil -> cmd_step		828664	0					
ANR	828901	Identifier	esil		828664	0					
ANR	828902	Identifier	cmd_step		828664	1					
ANR	828903	CallExpression	strdup ( cmd_esil_step )		828664	1					
ANR	828904	Callee	strdup		828664	0					
ANR	828905	Identifier	strdup		828664	0					
ANR	828906	ArgumentList	cmd_esil_step		828664	1					
ANR	828907	Argument	cmd_esil_step		828664	0					
ANR	828908	Identifier	cmd_esil_step		828664	0					
ANR	828909	IdentifierDeclStatement	"const char * cmd_esil_step_out = r_config_get ( core -> config , ""cmd.esil.stepout"" ) ;"	4174:2:122991:123070	828664	2	True				
ANR	828910	IdentifierDecl	"* cmd_esil_step_out = r_config_get ( core -> config , ""cmd.esil.stepout"" )"		828664	0					
ANR	828911	IdentifierDeclType	const char *		828664	0					
ANR	828912	Identifier	cmd_esil_step_out		828664	1					
ANR	828913	AssignmentExpression	"* cmd_esil_step_out = r_config_get ( core -> config , ""cmd.esil.stepout"" )"		828664	2		=			
ANR	828914	Identifier	cmd_esil_step_out		828664	0					
ANR	828915	CallExpression	"r_config_get ( core -> config , ""cmd.esil.stepout"" )"		828664	1					
ANR	828916	Callee	r_config_get		828664	0					
ANR	828917	Identifier	r_config_get		828664	0					
ANR	828918	ArgumentList	core -> config		828664	1					
ANR	828919	Argument	core -> config		828664	0					
ANR	828920	PtrMemberAccess	core -> config		828664	0					
ANR	828921	Identifier	core		828664	0					
ANR	828922	Identifier	config		828664	1					
ANR	828923	Argument	"""cmd.esil.stepout"""		828664	1					
ANR	828924	PrimaryExpression	"""cmd.esil.stepout"""		828664	0					
ANR	828925	IfStatement	if ( cmd_esil_step_out && * cmd_esil_step_out )		828664	3					
ANR	828926	Condition	cmd_esil_step_out && * cmd_esil_step_out	4175:6:123078:123116	828664	0	True				
ANR	828927	AndExpression	cmd_esil_step_out && * cmd_esil_step_out		828664	0		&&			
ANR	828928	Identifier	cmd_esil_step_out		828664	0					
ANR	828929	UnaryOperationExpression	* cmd_esil_step_out		828664	1					
ANR	828930	UnaryOperator	*		828664	0					
ANR	828931	Identifier	cmd_esil_step_out		828664	1					
ANR	828932	CompoundStatement		24:47:1124:1124	828664	1					
ANR	828933	ExpressionStatement	esil -> cmd_step_out = strdup ( cmd_esil_step_out )	4176:3:123124:123171	828664	0	True				
ANR	828934	AssignmentExpression	esil -> cmd_step_out = strdup ( cmd_esil_step_out )		828664	0		=			
ANR	828935	PtrMemberAccess	esil -> cmd_step_out		828664	0					
ANR	828936	Identifier	esil		828664	0					
ANR	828937	Identifier	cmd_step_out		828664	1					
ANR	828938	CallExpression	strdup ( cmd_esil_step_out )		828664	1					
ANR	828939	Callee	strdup		828664	0					
ANR	828940	Identifier	strdup		828664	0					
ANR	828941	ArgumentList	cmd_esil_step_out		828664	1					
ANR	828942	Argument	cmd_esil_step_out		828664	0					
ANR	828943	Identifier	cmd_esil_step_out		828664	0					
ANR	828944	CompoundStatement		28:3:1189:1249	828664	4					
ANR	828945	IdentifierDeclStatement	"const char * s = r_config_get ( core -> config , ""cmd.esil.intr"" ) ;"	4179:3:123184:123244	828664	0	True				
ANR	828946	IdentifierDecl	"* s = r_config_get ( core -> config , ""cmd.esil.intr"" )"		828664	0					
ANR	828947	IdentifierDeclType	const char *		828664	0					
ANR	828948	Identifier	s		828664	1					
ANR	828949	AssignmentExpression	"* s = r_config_get ( core -> config , ""cmd.esil.intr"" )"		828664	2		=			
ANR	828950	Identifier	s		828664	0					
ANR	828951	CallExpression	"r_config_get ( core -> config , ""cmd.esil.intr"" )"		828664	1					
ANR	828952	Callee	r_config_get		828664	0					
ANR	828953	Identifier	r_config_get		828664	0					
ANR	828954	ArgumentList	core -> config		828664	1					
ANR	828955	Argument	core -> config		828664	0					
ANR	828956	PtrMemberAccess	core -> config		828664	0					
ANR	828957	Identifier	core		828664	0					
ANR	828958	Identifier	config		828664	1					
ANR	828959	Argument	"""cmd.esil.intr"""		828664	1					
ANR	828960	PrimaryExpression	"""cmd.esil.intr"""		828664	0					
ANR	828961	IfStatement	if ( s )		828664	1					
ANR	828962	Condition	s	4180:7:123253:123253	828664	0	True				
ANR	828963	Identifier	s		828664	0					
ANR	828964	CompoundStatement		30:4:1267:1288	828664	1					
ANR	828965	IdentifierDeclStatement	char * my = strdup ( s ) ;	4181:4:123262:123283	828664	0	True				
ANR	828966	IdentifierDecl	* my = strdup ( s )		828664	0					
ANR	828967	IdentifierDeclType	char *		828664	0					
ANR	828968	Identifier	my		828664	1					
ANR	828969	AssignmentExpression	* my = strdup ( s )		828664	2		=			
ANR	828970	Identifier	my		828664	0					
ANR	828971	CallExpression	strdup ( s )		828664	1					
ANR	828972	Callee	strdup		828664	0					
ANR	828973	Identifier	strdup		828664	0					
ANR	828974	ArgumentList	s		828664	1					
ANR	828975	Argument	s		828664	0					
ANR	828976	Identifier	s		828664	0					
ANR	828977	IfStatement	if ( my )		828664	1					
ANR	828978	Condition	my	4182:8:123293:123294	828664	0	True				
ANR	828979	Identifier	my		828664	0					
ANR	828980	CompoundStatement		31:12:1302:1302	828664	1					
ANR	828981	ExpressionStatement	"r_config_set ( core -> config , ""cmd.esil.intr"" , my )"	4183:5:123304:123352	828664	0	True				
ANR	828982	CallExpression	"r_config_set ( core -> config , ""cmd.esil.intr"" , my )"		828664	0					
ANR	828983	Callee	r_config_set		828664	0					
ANR	828984	Identifier	r_config_set		828664	0					
ANR	828985	ArgumentList	core -> config		828664	1					
ANR	828986	Argument	core -> config		828664	0					
ANR	828987	PtrMemberAccess	core -> config		828664	0					
ANR	828988	Identifier	core		828664	0					
ANR	828989	Identifier	config		828664	1					
ANR	828990	Argument	"""cmd.esil.intr"""		828664	1					
ANR	828991	PrimaryExpression	"""cmd.esil.intr"""		828664	0					
ANR	828992	Argument	my		828664	2					
ANR	828993	Identifier	my		828664	0					
ANR	828994	ExpressionStatement	free ( my )	4184:5:123359:123368	828664	1	True				
ANR	828995	CallExpression	free ( my )		828664	0					
ANR	828996	Callee	free		828664	0					
ANR	828997	Identifier	free		828664	0					
ANR	828998	ArgumentList	my		828664	1					
ANR	828999	Argument	my		828664	0					
ANR	829000	Identifier	my		828664	0					
ANR	829001	ExpressionStatement	esil -> exectrap = exectrap	4189:1:123389:123414	828664	15	True				
ANR	829002	AssignmentExpression	esil -> exectrap = exectrap		828664	0		=			
ANR	829003	PtrMemberAccess	esil -> exectrap		828664	0					
ANR	829004	Identifier	esil		828664	0					
ANR	829005	Identifier	exectrap		828664	1					
ANR	829006	Identifier	exectrap		828664	1					
ANR	829007	IdentifierDeclStatement	RList * entries = r_bin_get_entries ( core -> bin ) ;	4190:1:123417:123463	828664	16	True				
ANR	829008	IdentifierDecl	* entries = r_bin_get_entries ( core -> bin )		828664	0					
ANR	829009	IdentifierDeclType	RList *		828664	0					
ANR	829010	Identifier	entries		828664	1					
ANR	829011	AssignmentExpression	* entries = r_bin_get_entries ( core -> bin )		828664	2		=			
ANR	829012	Identifier	entries		828664	0					
ANR	829013	CallExpression	r_bin_get_entries ( core -> bin )		828664	1					
ANR	829014	Callee	r_bin_get_entries		828664	0					
ANR	829015	Identifier	r_bin_get_entries		828664	0					
ANR	829016	ArgumentList	core -> bin		828664	1					
ANR	829017	Argument	core -> bin		828664	0					
ANR	829018	PtrMemberAccess	core -> bin		828664	0					
ANR	829019	Identifier	core		828664	0					
ANR	829020	Identifier	bin		828664	1					
ANR	829021	IdentifierDeclStatement	RBinAddr * entry = NULL ;	4191:1:123466:123488	828664	17	True				
ANR	829022	IdentifierDecl	* entry = NULL		828664	0					
ANR	829023	IdentifierDeclType	RBinAddr *		828664	0					
ANR	829024	Identifier	entry		828664	1					
ANR	829025	AssignmentExpression	* entry = NULL		828664	2		=			
ANR	829026	Identifier	NULL		828664	0					
ANR	829027	Identifier	NULL		828664	1					
ANR	829028	IdentifierDeclStatement	RBinInfo * info = NULL ;	4192:1:123491:123512	828664	18	True				
ANR	829029	IdentifierDecl	* info = NULL		828664	0					
ANR	829030	IdentifierDeclType	RBinInfo *		828664	0					
ANR	829031	Identifier	info		828664	1					
ANR	829032	AssignmentExpression	* info = NULL		828664	2		=			
ANR	829033	Identifier	NULL		828664	0					
ANR	829034	Identifier	NULL		828664	1					
ANR	829035	IfStatement	if ( entries && ! r_list_empty ( entries ) )		828664	19					
ANR	829036	Condition	entries && ! r_list_empty ( entries )	4193:5:123519:123552	828664	0	True				
ANR	829037	AndExpression	entries && ! r_list_empty ( entries )		828664	0		&&			
ANR	829038	Identifier	entries		828664	0					
ANR	829039	UnaryOperationExpression	! r_list_empty ( entries )		828664	1					
ANR	829040	UnaryOperator	!		828664	0					
ANR	829041	CallExpression	r_list_empty ( entries )		828664	1					
ANR	829042	Callee	r_list_empty		828664	0					
ANR	829043	Identifier	r_list_empty		828664	0					
ANR	829044	ArgumentList	entries		828664	1					
ANR	829045	Argument	entries		828664	0					
ANR	829046	Identifier	entries		828664	0					
ANR	829047	CompoundStatement		42:41:1560:1560	828664	1					
ANR	829048	ExpressionStatement	entry = ( RBinAddr * ) r_list_pop ( entries )	4194:2:123559:123599	828664	0	True				
ANR	829049	AssignmentExpression	entry = ( RBinAddr * ) r_list_pop ( entries )		828664	0		=			
ANR	829050	Identifier	entry		828664	0					
ANR	829051	CastExpression	( RBinAddr * ) r_list_pop ( entries )		828664	1					
ANR	829052	CastTarget	RBinAddr *		828664	0					
ANR	829053	CallExpression	r_list_pop ( entries )		828664	1					
ANR	829054	Callee	r_list_pop		828664	0					
ANR	829055	Identifier	r_list_pop		828664	0					
ANR	829056	ArgumentList	entries		828664	1					
ANR	829057	Argument	entries		828664	0					
ANR	829058	Identifier	entries		828664	0					
ANR	829059	ExpressionStatement	info = r_bin_get_info ( core -> bin )	4195:2:123603:123636	828664	1	True				
ANR	829060	AssignmentExpression	info = r_bin_get_info ( core -> bin )		828664	0		=			
ANR	829061	Identifier	info		828664	0					
ANR	829062	CallExpression	r_bin_get_info ( core -> bin )		828664	1					
ANR	829063	Callee	r_bin_get_info		828664	0					
ANR	829064	Identifier	r_bin_get_info		828664	0					
ANR	829065	ArgumentList	core -> bin		828664	1					
ANR	829066	Argument	core -> bin		828664	0					
ANR	829067	PtrMemberAccess	core -> bin		828664	0					
ANR	829068	Identifier	core		828664	0					
ANR	829069	Identifier	bin		828664	1					
ANR	829070	ExpressionStatement	addr = info -> has_va ? entry -> vaddr : entry -> paddr	4196:2:123640:123687	828664	2	True				
ANR	829071	AssignmentExpression	addr = info -> has_va ? entry -> vaddr : entry -> paddr		828664	0		=			
ANR	829072	Identifier	addr		828664	0					
ANR	829073	ConditionalExpression	info -> has_va ? entry -> vaddr : entry -> paddr		828664	1					
ANR	829074	Condition	info -> has_va		828664	0					
ANR	829075	PtrMemberAccess	info -> has_va		828664	0					
ANR	829076	Identifier	info		828664	0					
ANR	829077	Identifier	has_va		828664	1					
ANR	829078	PtrMemberAccess	entry -> vaddr		828664	1					
ANR	829079	Identifier	entry		828664	0					
ANR	829080	Identifier	vaddr		828664	1					
ANR	829081	PtrMemberAccess	entry -> paddr		828664	2					
ANR	829082	Identifier	entry		828664	0					
ANR	829083	Identifier	paddr		828664	1					
ANR	829084	ExpressionStatement	"r_list_push ( entries , entry )"	4197:2:123691:123719	828664	3	True				
ANR	829085	CallExpression	"r_list_push ( entries , entry )"		828664	0					
ANR	829086	Callee	r_list_push		828664	0					
ANR	829087	Identifier	r_list_push		828664	0					
ANR	829088	ArgumentList	entries		828664	1					
ANR	829089	Argument	entries		828664	0					
ANR	829090	Identifier	entries		828664	0					
ANR	829091	Argument	entry		828664	1					
ANR	829092	Identifier	entry		828664	0					
ANR	829093	ElseStatement	else		828664	0					
ANR	829094	CompoundStatement		47:8:1734:1734	828664	0					
ANR	829095	ExpressionStatement	addr = core -> offset	4199:2:123733:123752	828664	0	True				
ANR	829096	AssignmentExpression	addr = core -> offset		828664	0		=			
ANR	829097	Identifier	addr		828664	0					
ANR	829098	PtrMemberAccess	core -> offset		828664	1					
ANR	829099	Identifier	core		828664	0					
ANR	829100	Identifier	offset		828664	1					
ANR	829101	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , name , addr )"	4201:1:123758:123798	828664	20	True				
ANR	829102	CallExpression	"r_reg_setv ( core -> anal -> reg , name , addr )"		828664	0					
ANR	829103	Callee	r_reg_setv		828664	0					
ANR	829104	Identifier	r_reg_setv		828664	0					
ANR	829105	ArgumentList	core -> anal -> reg		828664	1					
ANR	829106	Argument	core -> anal -> reg		828664	0					
ANR	829107	PtrMemberAccess	core -> anal -> reg		828664	0					
ANR	829108	PtrMemberAccess	core -> anal		828664	0					
ANR	829109	Identifier	core		828664	0					
ANR	829110	Identifier	anal		828664	1					
ANR	829111	Identifier	reg		828664	1					
ANR	829112	Argument	name		828664	1					
ANR	829113	Identifier	name		828664	0					
ANR	829114	Argument	addr		828664	2					
ANR	829115	Identifier	addr		828664	0					
ANR	829116	ReturnStatement	return addr ;	4203:1:123826:123837	828664	21	True				
ANR	829117	Identifier	addr		828664	0					
ANR	829118	ReturnType	static ut64		828664	1					
ANR	829119	Identifier	initializeEsil		828664	2					
ANR	829120	ParameterList	RCore * core		828664	3					
ANR	829121	Parameter	RCore * core	4152:27:121981:121991	828664	0	True				
ANR	829122	ParameterType	RCore *		828664	0					
ANR	829123	Identifier	core		828664	1					
ANR	829124	CFGEntryNode	ENTRY		828664		True				
ANR	829125	CFGExitNode	EXIT		828664		True				
ANR	829126	Symbol	core -> anal -> reg		828664						
ANR	829127	Symbol	romem		828664						
ANR	829128	Symbol	cmd_esil_step		828664						
ANR	829129	Symbol	R_REG_NAME_PC		828664						
ANR	829130	Symbol	stacksize		828664						
ANR	829131	Symbol	r_bin_get_entries		828664						
ANR	829132	Symbol	core -> offset		828664						
ANR	829133	Symbol	info -> has_va		828664						
ANR	829134	Symbol	r_list_pop		828664						
ANR	829135	Symbol	addrsize		828664						
ANR	829136	Symbol	entry -> paddr		828664						
ANR	829137	Symbol	stats		828664						
ANR	829138	Symbol	* esil		828664						
ANR	829139	Symbol	* cmd_esil_step_out		828664						
ANR	829140	Symbol	esil -> cmd_step_out		828664						
ANR	829141	Symbol	core -> anal -> esil		828664						
ANR	829142	Symbol	core -> bin		828664						
ANR	829143	Symbol	esil -> exectrap		828664						
ANR	829144	Symbol	info		828664						
ANR	829145	Symbol	entry -> vaddr		828664						
ANR	829146	Symbol	NULL		828664						
ANR	829147	Symbol	r_core_esil_cmd		828664						
ANR	829148	Symbol	iotrap		828664						
ANR	829149	Symbol	my		828664						
ANR	829150	Symbol	esil -> cmd		828664						
ANR	829151	Symbol	r_bin_get_info		828664						
ANR	829152	Symbol	core		828664						
ANR	829153	Symbol	entry		828664						
ANR	829154	Symbol	entries		828664						
ANR	829155	Symbol	r_reg_get_name		828664						
ANR	829156	Symbol	r_config_get_i		828664						
ANR	829157	Symbol	name		828664						
ANR	829158	Symbol	r_list_empty		828664						
ANR	829159	Symbol	esil -> cmd_step		828664						
ANR	829160	Symbol	noNULL		828664						
ANR	829161	Symbol	esil -> verbose		828664						
ANR	829162	Symbol	* core		828664						
ANR	829163	Symbol	r_config_get		828664						
ANR	829164	Symbol	core -> anal		828664						
ANR	829165	Symbol	* cmd_esil_step		828664						
ANR	829166	Symbol	UT64_MAX		828664						
ANR	829167	Symbol	addr		828664						
ANR	829168	Symbol	* * core		828664						
ANR	829169	Symbol	* entry		828664						
ANR	829170	Symbol	core -> config		828664						
ANR	829171	Symbol	cmd_esil_step_out		828664						
ANR	829172	Symbol	* core -> anal		828664						
ANR	829173	Symbol	s		828664						
ANR	829174	Symbol	r_anal_esil_new		828664						
ANR	829175	Symbol	exectrap		828664						
ANR	829176	Symbol	strdup		828664						
ANR	829177	Symbol	* info		828664						
ANR	829178	Symbol	esil		828664						
ANR	829179	Function	r_core_esil_step	4206:0:123842:130355							
ANR	829180	FunctionDef	"r_core_esil_step (RCore * core , ut64 until_addr , const char * until_expr , ut64 * prev_addr , bool stepOver)"		829179	0					
ANR	829181	CompoundStatement		4206:113:123955:130355	829179	0					
ANR	829182	Statement	define	4207:1:123958:123963	829179	0	True				
ANR	829183	Statement	return_tail	4207:8:123965:123975	829179	1	True				
ANR	829184	Statement	(	4207:19:123976:123976	829179	2	True				
ANR	829185	Statement	x	4207:20:123977:123977	829179	3	True				
ANR	829186	Statement	)	4207:21:123978:123978	829179	4	True				
ANR	829187	CompoundStatement		2:23:24:24	829179	5					
ANR	829188	ExpressionStatement	tail_return_value = x	4207:25:123982:124003	829179	0	True				
ANR	829189	AssignmentExpression	tail_return_value = x		829179	0		=			
ANR	829190	Identifier	tail_return_value		829179	0					
ANR	829191	Identifier	x		829179	1					
ANR	829192	GotoStatement	goto tail_return ;	4207:48:124005:124021	829179	1	True				
ANR	829193	Identifier	tail_return		829179	0					
ANR	829194	IdentifierDeclStatement	int tail_return_value = 0 ;	4208:1:124026:124051	829179	6	True				
ANR	829195	IdentifierDecl	tail_return_value = 0		829179	0					
ANR	829196	IdentifierDeclType	int		829179	0					
ANR	829197	Identifier	tail_return_value		829179	1					
ANR	829198	AssignmentExpression	tail_return_value = 0		829179	2		=			
ANR	829199	Identifier	tail_return_value		829179	0					
ANR	829200	PrimaryExpression	0		829179	1					
ANR	829201	IdentifierDeclStatement	int ret ;	4209:1:124054:124061	829179	7	True				
ANR	829202	IdentifierDecl	ret		829179	0					
ANR	829203	IdentifierDeclType	int		829179	0					
ANR	829204	Identifier	ret		829179	1					
ANR	829205	IdentifierDeclStatement	ut8 code [ 32 ] ;	4210:1:124064:124076	829179	8	True				
ANR	829206	IdentifierDecl	code [ 32 ]		829179	0					
ANR	829207	IdentifierDeclType	ut8 [ 32 ]		829179	0					
ANR	829208	Identifier	code		829179	1					
ANR	829209	PrimaryExpression	32		829179	2					
ANR	829210	IdentifierDeclStatement	RAnalOp op = { 0 } ;	4211:1:124079:124095	829179	9	True				
ANR	829211	IdentifierDecl	op = { 0 }		829179	0					
ANR	829212	IdentifierDeclType	RAnalOp		829179	0					
ANR	829213	Identifier	op		829179	1					
ANR	829214	AssignmentExpression	op = { 0 }		829179	2		=			
ANR	829215	Identifier	op		829179	0					
ANR	829216	InitializerList	0		829179	1					
ANR	829217	PrimaryExpression	0		829179	0					
ANR	829218	IdentifierDeclStatement	RAnalEsil * esil = core -> anal -> esil ;	4212:1:124098:124132	829179	10	True				
ANR	829219	IdentifierDecl	* esil = core -> anal -> esil		829179	0					
ANR	829220	IdentifierDeclType	RAnalEsil *		829179	0					
ANR	829221	Identifier	esil		829179	1					
ANR	829222	AssignmentExpression	* esil = core -> anal -> esil		829179	2		=			
ANR	829223	Identifier	esil		829179	0					
ANR	829224	PtrMemberAccess	core -> anal -> esil		829179	1					
ANR	829225	PtrMemberAccess	core -> anal		829179	0					
ANR	829226	Identifier	core		829179	0					
ANR	829227	Identifier	anal		829179	1					
ANR	829228	Identifier	esil		829179	1					
ANR	829229	IdentifierDeclStatement	"const char * name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	4213:1:124135:124201	829179	11	True				
ANR	829230	IdentifierDecl	"* name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		829179	0					
ANR	829231	IdentifierDeclType	const char *		829179	0					
ANR	829232	Identifier	name		829179	1					
ANR	829233	AssignmentExpression	"* name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		829179	2		=			
ANR	829234	Identifier	name		829179	0					
ANR	829235	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		829179	1					
ANR	829236	Callee	r_reg_get_name		829179	0					
ANR	829237	Identifier	r_reg_get_name		829179	0					
ANR	829238	ArgumentList	core -> anal -> reg		829179	1					
ANR	829239	Argument	core -> anal -> reg		829179	0					
ANR	829240	PtrMemberAccess	core -> anal -> reg		829179	0					
ANR	829241	PtrMemberAccess	core -> anal		829179	0					
ANR	829242	Identifier	core		829179	0					
ANR	829243	Identifier	anal		829179	1					
ANR	829244	Identifier	reg		829179	1					
ANR	829245	Argument	R_REG_NAME_PC		829179	1					
ANR	829246	Identifier	R_REG_NAME_PC		829179	0					
ANR	829247	IdentifierDeclStatement	"bool breakoninvalid = r_config_get_i ( core -> config , ""esil.breakoninvalid"" ) ;"	4214:1:124204:124278	829179	12	True				
ANR	829248	IdentifierDecl	"breakoninvalid = r_config_get_i ( core -> config , ""esil.breakoninvalid"" )"		829179	0					
ANR	829249	IdentifierDeclType	bool		829179	0					
ANR	829250	Identifier	breakoninvalid		829179	1					
ANR	829251	AssignmentExpression	"breakoninvalid = r_config_get_i ( core -> config , ""esil.breakoninvalid"" )"		829179	2		=			
ANR	829252	Identifier	breakoninvalid		829179	0					
ANR	829253	CallExpression	"r_config_get_i ( core -> config , ""esil.breakoninvalid"" )"		829179	1					
ANR	829254	Callee	r_config_get_i		829179	0					
ANR	829255	Identifier	r_config_get_i		829179	0					
ANR	829256	ArgumentList	core -> config		829179	1					
ANR	829257	Argument	core -> config		829179	0					
ANR	829258	PtrMemberAccess	core -> config		829179	0					
ANR	829259	Identifier	core		829179	0					
ANR	829260	Identifier	config		829179	1					
ANR	829261	Argument	"""esil.breakoninvalid"""		829179	1					
ANR	829262	PrimaryExpression	"""esil.breakoninvalid"""		829179	0					
ANR	829263	IdentifierDeclStatement	"int esiltimeout = r_config_get_i ( core -> config , ""esil.timeout"" ) ;"	4215:1:124281:124344	829179	13	True				
ANR	829264	IdentifierDecl	"esiltimeout = r_config_get_i ( core -> config , ""esil.timeout"" )"		829179	0					
ANR	829265	IdentifierDeclType	int		829179	0					
ANR	829266	Identifier	esiltimeout		829179	1					
ANR	829267	AssignmentExpression	"esiltimeout = r_config_get_i ( core -> config , ""esil.timeout"" )"		829179	2		=			
ANR	829268	Identifier	esiltimeout		829179	0					
ANR	829269	CallExpression	"r_config_get_i ( core -> config , ""esil.timeout"" )"		829179	1					
ANR	829270	Callee	r_config_get_i		829179	0					
ANR	829271	Identifier	r_config_get_i		829179	0					
ANR	829272	ArgumentList	core -> config		829179	1					
ANR	829273	Argument	core -> config		829179	0					
ANR	829274	PtrMemberAccess	core -> config		829179	0					
ANR	829275	Identifier	core		829179	0					
ANR	829276	Identifier	config		829179	1					
ANR	829277	Argument	"""esil.timeout"""		829179	1					
ANR	829278	PrimaryExpression	"""esil.timeout"""		829179	0					
ANR	829279	IdentifierDeclStatement	ut64 startTime ;	4216:1:124347:124361	829179	14	True				
ANR	829280	IdentifierDecl	startTime		829179	0					
ANR	829281	IdentifierDeclType	ut64		829179	0					
ANR	829282	Identifier	startTime		829179	1					
ANR	829283	IfStatement	if ( ! esil )		829179	15					
ANR	829284	Condition	! esil	4217:5:124368:124372	829179	0	True				
ANR	829285	UnaryOperationExpression	! esil		829179	0					
ANR	829286	UnaryOperator	!		829179	0					
ANR	829287	Identifier	esil		829179	1					
ANR	829288	CompoundStatement		12:12:419:419	829179	1					
ANR	829289	ExpressionStatement	initializeEsil ( core )	4218:2:124379:124400	829179	0	True				
ANR	829290	CallExpression	initializeEsil ( core )		829179	0					
ANR	829291	Callee	initializeEsil		829179	0					
ANR	829292	Identifier	initializeEsil		829179	0					
ANR	829293	ArgumentList	core		829179	1					
ANR	829294	Argument	core		829179	0					
ANR	829295	Identifier	core		829179	0					
ANR	829296	IfStatement	if ( esiltimeout > 0 )		829179	16					
ANR	829297	Condition	esiltimeout > 0	4220:5:124410:124424	829179	0	True				
ANR	829298	RelationalExpression	esiltimeout > 0		829179	0		>			
ANR	829299	Identifier	esiltimeout		829179	0					
ANR	829300	PrimaryExpression	0		829179	1					
ANR	829301	CompoundStatement		15:22:471:471	829179	1					
ANR	829302	ExpressionStatement	startTime = r_sys_now ( )	4221:2:124431:124455	829179	0	True				
ANR	829303	AssignmentExpression	startTime = r_sys_now ( )		829179	0		=			
ANR	829304	Identifier	startTime		829179	0					
ANR	829305	CallExpression	r_sys_now ( )		829179	1					
ANR	829306	Callee	r_sys_now		829179	0					
ANR	829307	Identifier	r_sys_now		829179	0					
ANR	829308	ArgumentList			829179	1					
ANR	829309	IdentifierDeclStatement	"ut64 addr = r_reg_getv ( core -> anal -> reg , name ) ;"	4223:1:124461:124507	829179	17	True				
ANR	829310	IdentifierDecl	"addr = r_reg_getv ( core -> anal -> reg , name )"		829179	0					
ANR	829311	IdentifierDeclType	ut64		829179	0					
ANR	829312	Identifier	addr		829179	1					
ANR	829313	AssignmentExpression	"addr = r_reg_getv ( core -> anal -> reg , name )"		829179	2		=			
ANR	829314	Identifier	addr		829179	0					
ANR	829315	CallExpression	"r_reg_getv ( core -> anal -> reg , name )"		829179	1					
ANR	829316	Callee	r_reg_getv		829179	0					
ANR	829317	Identifier	r_reg_getv		829179	0					
ANR	829318	ArgumentList	core -> anal -> reg		829179	1					
ANR	829319	Argument	core -> anal -> reg		829179	0					
ANR	829320	PtrMemberAccess	core -> anal -> reg		829179	0					
ANR	829321	PtrMemberAccess	core -> anal		829179	0					
ANR	829322	Identifier	core		829179	0					
ANR	829323	Identifier	anal		829179	1					
ANR	829324	Identifier	reg		829179	1					
ANR	829325	Argument	name		829179	1					
ANR	829326	Identifier	name		829179	0					
ANR	829327	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	4224:1:124510:124540	829179	18	True				
ANR	829328	CallExpression	"r_cons_break_push ( NULL , NULL )"		829179	0					
ANR	829329	Callee	r_cons_break_push		829179	0					
ANR	829330	Identifier	r_cons_break_push		829179	0					
ANR	829331	ArgumentList	NULL		829179	1					
ANR	829332	Argument	NULL		829179	0					
ANR	829333	Identifier	NULL		829179	0					
ANR	829334	Argument	NULL		829179	1					
ANR	829335	Identifier	NULL		829179	0					
ANR	829336	Label	repeat :	4225:0:124542:124548	829179	19	True				
ANR	829337	Identifier	repeat		829179	0					
ANR	829338	IfStatement	if ( r_cons_is_breaked ( ) )		829179	20					
ANR	829339	Condition	r_cons_is_breaked ( )	4226:5:124555:124574	829179	0	True				
ANR	829340	CallExpression	r_cons_is_breaked ( )		829179	0					
ANR	829341	Callee	r_cons_is_breaked		829179	0					
ANR	829342	Identifier	r_cons_is_breaked		829179	0					
ANR	829343	ArgumentList			829179	1					
ANR	829344	CompoundStatement		21:27:621:621	829179	1					
ANR	829345	Statement	eprintf	4227:2:124581:124587	829179	0	True				
ANR	829346	Statement	(	4227:10:124589:124589	829179	1	True				
ANR	829347	Statement	"""[+] ESIL emulation interrupted at 0x%08"""	4227:11:124590:124630	829179	2	True				
ANR	829348	Statement	PFMT64x	4227:53:124632:124638	829179	3	True				
ANR	829349	Statement	"""\\n"""	4227:61:124640:124643	829179	4	True				
ANR	829350	Statement	","	4227:65:124644:124644	829179	5	True				
ANR	829351	Statement	addr	4227:67:124646:124649	829179	6	True				
ANR	829352	Statement	)	4227:71:124650:124650	829179	7	True				
ANR	829353	ExpressionStatement		4227:72:124651:124651	829179	8	True				
ANR	829354	ExpressionStatement	return_tail ( 0 )	4228:2:124655:124670	829179	9	True				
ANR	829355	CallExpression	return_tail ( 0 )		829179	0					
ANR	829356	Callee	return_tail		829179	0					
ANR	829357	Identifier	return_tail		829179	0					
ANR	829358	ArgumentList	0		829179	1					
ANR	829359	Argument	0		829179	0					
ANR	829360	PrimaryExpression	0		829179	0					
ANR	829361	IfStatement	if ( esiltimeout > 0 )		829179	21					
ANR	829362	Condition	esiltimeout > 0	4231:5:124722:124736	829179	0	True				
ANR	829363	RelationalExpression	esiltimeout > 0		829179	0		>			
ANR	829364	Identifier	esiltimeout		829179	0					
ANR	829365	PrimaryExpression	0		829179	1					
ANR	829366	CompoundStatement		27:2:787:830	829179	1					
ANR	829367	IdentifierDeclStatement	ut64 elapsedTime = r_sys_now ( ) - startTime ;	4232:2:124743:124786	829179	0	True				
ANR	829368	IdentifierDecl	elapsedTime = r_sys_now ( ) - startTime		829179	0					
ANR	829369	IdentifierDeclType	ut64		829179	0					
ANR	829370	Identifier	elapsedTime		829179	1					
ANR	829371	AssignmentExpression	elapsedTime = r_sys_now ( ) - startTime		829179	2		=			
ANR	829372	Identifier	elapsedTime		829179	0					
ANR	829373	AdditiveExpression	r_sys_now ( ) - startTime		829179	1		-			
ANR	829374	CallExpression	r_sys_now ( )		829179	0					
ANR	829375	Callee	r_sys_now		829179	0					
ANR	829376	Identifier	r_sys_now		829179	0					
ANR	829377	ArgumentList			829179	1					
ANR	829378	Identifier	startTime		829179	1					
ANR	829379	ExpressionStatement	elapsedTime >>= 20	4233:2:124790:124808	829179	1	True				
ANR	829380	AssignmentExpression	elapsedTime >>= 20		829179	0		>>=			
ANR	829381	Identifier	elapsedTime		829179	0					
ANR	829382	PrimaryExpression	20		829179	1					
ANR	829383	IfStatement	if ( elapsedTime >= esiltimeout )		829179	2					
ANR	829384	Condition	elapsedTime >= esiltimeout	4234:6:124816:124841	829179	0	True				
ANR	829385	RelationalExpression	elapsedTime >= esiltimeout		829179	0		>=			
ANR	829386	Identifier	elapsedTime		829179	0					
ANR	829387	Identifier	esiltimeout		829179	1					
ANR	829388	CompoundStatement		29:34:888:888	829179	1					
ANR	829389	ExpressionStatement	"eprintf ( ""[ESIL] Timeout exceeded.\\n"" )"	4235:3:124849:124887	829179	0	True				
ANR	829390	CallExpression	"eprintf ( ""[ESIL] Timeout exceeded.\\n"" )"		829179	0					
ANR	829391	Callee	eprintf		829179	0					
ANR	829392	Identifier	eprintf		829179	0					
ANR	829393	ArgumentList	"""[ESIL] Timeout exceeded.\\n"""		829179	1					
ANR	829394	Argument	"""[ESIL] Timeout exceeded.\\n"""		829179	0					
ANR	829395	PrimaryExpression	"""[ESIL] Timeout exceeded.\\n"""		829179	0					
ANR	829396	ExpressionStatement	return_tail ( 0 )	4236:3:124892:124907	829179	1	True				
ANR	829397	CallExpression	return_tail ( 0 )		829179	0					
ANR	829398	Callee	return_tail		829179	0					
ANR	829399	Identifier	return_tail		829179	0					
ANR	829400	ArgumentList	0		829179	1					
ANR	829401	Argument	0		829179	0					
ANR	829402	PrimaryExpression	0		829179	0					
ANR	829403	IfStatement	if ( ! esil )		829179	22					
ANR	829404	Condition	! esil	4239:5:124921:124925	829179	0	True				
ANR	829405	UnaryOperationExpression	! esil		829179	0					
ANR	829406	UnaryOperator	!		829179	0					
ANR	829407	Identifier	esil		829179	1					
ANR	829408	CompoundStatement		34:12:972:972	829179	1					
ANR	829409	ExpressionStatement	addr = initializeEsil ( core )	4240:2:124932:124960	829179	0	True				
ANR	829410	AssignmentExpression	addr = initializeEsil ( core )		829179	0		=			
ANR	829411	Identifier	addr		829179	0					
ANR	829412	CallExpression	initializeEsil ( core )		829179	1					
ANR	829413	Callee	initializeEsil		829179	0					
ANR	829414	Identifier	initializeEsil		829179	0					
ANR	829415	ArgumentList	core		829179	1					
ANR	829416	Argument	core		829179	0					
ANR	829417	Identifier	core		829179	0					
ANR	829418	ExpressionStatement	esil = core -> anal -> esil	4241:2:124964:124987	829179	1	True				
ANR	829419	AssignmentExpression	esil = core -> anal -> esil		829179	0		=			
ANR	829420	Identifier	esil		829179	0					
ANR	829421	PtrMemberAccess	core -> anal -> esil		829179	1					
ANR	829422	PtrMemberAccess	core -> anal		829179	0					
ANR	829423	Identifier	core		829179	0					
ANR	829424	Identifier	anal		829179	1					
ANR	829425	Identifier	esil		829179	1					
ANR	829426	IfStatement	if ( ! esil )		829179	2					
ANR	829427	Condition	! esil	4242:6:124995:124999	829179	0	True				
ANR	829428	UnaryOperationExpression	! esil		829179	0					
ANR	829429	UnaryOperator	!		829179	0					
ANR	829430	Identifier	esil		829179	1					
ANR	829431	CompoundStatement		37:13:1046:1046	829179	1					
ANR	829432	ExpressionStatement	return_tail ( 0 )	4243:3:125007:125022	829179	0	True				
ANR	829433	CallExpression	return_tail ( 0 )		829179	0					
ANR	829434	Callee	return_tail		829179	0					
ANR	829435	Identifier	return_tail		829179	0					
ANR	829436	ArgumentList	0		829179	1					
ANR	829437	Argument	0		829179	0					
ANR	829438	PrimaryExpression	0		829179	0					
ANR	829439	ElseStatement	else		829179	0					
ANR	829440	CompoundStatement		40:8:1080:1080	829179	0					
ANR	829441	ExpressionStatement	esil -> trap = 0	4246:2:125040:125054	829179	0	True				
ANR	829442	AssignmentExpression	esil -> trap = 0		829179	0		=			
ANR	829443	PtrMemberAccess	esil -> trap		829179	0					
ANR	829444	Identifier	esil		829179	0					
ANR	829445	Identifier	trap		829179	1					
ANR	829446	PrimaryExpression	0		829179	1					
ANR	829447	ExpressionStatement	"addr = r_reg_getv ( core -> anal -> reg , name )"	4247:2:125058:125099	829179	1	True				
ANR	829448	AssignmentExpression	"addr = r_reg_getv ( core -> anal -> reg , name )"		829179	0		=			
ANR	829449	Identifier	addr		829179	0					
ANR	829450	CallExpression	"r_reg_getv ( core -> anal -> reg , name )"		829179	1					
ANR	829451	Callee	r_reg_getv		829179	0					
ANR	829452	Identifier	r_reg_getv		829179	0					
ANR	829453	ArgumentList	core -> anal -> reg		829179	1					
ANR	829454	Argument	core -> anal -> reg		829179	0					
ANR	829455	PtrMemberAccess	core -> anal -> reg		829179	0					
ANR	829456	PtrMemberAccess	core -> anal		829179	0					
ANR	829457	Identifier	core		829179	0					
ANR	829458	Identifier	anal		829179	1					
ANR	829459	Identifier	reg		829179	1					
ANR	829460	Argument	name		829179	1					
ANR	829461	Identifier	name		829179	0					
ANR	829462	IfStatement	if ( prev_addr )		829179	23					
ANR	829463	Condition	prev_addr	4250:5:125156:125164	829179	0	True				
ANR	829464	Identifier	prev_addr		829179	0					
ANR	829465	CompoundStatement		45:16:1211:1211	829179	1					
ANR	829466	ExpressionStatement	* prev_addr = addr	4251:2:125171:125188	829179	0	True				
ANR	829467	AssignmentExpression	* prev_addr = addr		829179	0		=			
ANR	829468	UnaryOperationExpression	* prev_addr		829179	0					
ANR	829469	UnaryOperator	*		829179	0					
ANR	829470	Identifier	prev_addr		829179	1					
ANR	829471	Identifier	addr		829179	1					
ANR	829472	IfStatement	if ( esil -> exectrap )		829179	24					
ANR	829473	Condition	esil -> exectrap	4253:5:125198:125211	829179	0	True				
ANR	829474	PtrMemberAccess	esil -> exectrap		829179	0					
ANR	829475	Identifier	esil		829179	0					
ANR	829476	Identifier	exectrap		829179	1					
ANR	829477	CompoundStatement		48:21:1258:1258	829179	1					
ANR	829478	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , addr , R_PERM_X ) )"		829179	0					
ANR	829479	Condition	"! r_io_is_valid_offset ( core -> io , addr , R_PERM_X )"	4254:6:125222:125269	829179	0	True				
ANR	829480	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , addr , R_PERM_X )"		829179	0					
ANR	829481	UnaryOperator	!		829179	0					
ANR	829482	CallExpression	"r_io_is_valid_offset ( core -> io , addr , R_PERM_X )"		829179	1					
ANR	829483	Callee	r_io_is_valid_offset		829179	0					
ANR	829484	Identifier	r_io_is_valid_offset		829179	0					
ANR	829485	ArgumentList	core -> io		829179	1					
ANR	829486	Argument	core -> io		829179	0					
ANR	829487	PtrMemberAccess	core -> io		829179	0					
ANR	829488	Identifier	core		829179	0					
ANR	829489	Identifier	io		829179	1					
ANR	829490	Argument	addr		829179	1					
ANR	829491	Identifier	addr		829179	0					
ANR	829492	Argument	R_PERM_X		829179	2					
ANR	829493	Identifier	R_PERM_X		829179	0					
ANR	829494	CompoundStatement		49:56:1316:1316	829179	1					
ANR	829495	ExpressionStatement	esil -> trap = R_ANAL_TRAP_EXEC_ERR	4255:3:125277:125310	829179	0	True				
ANR	829496	AssignmentExpression	esil -> trap = R_ANAL_TRAP_EXEC_ERR		829179	0		=			
ANR	829497	PtrMemberAccess	esil -> trap		829179	0					
ANR	829498	Identifier	esil		829179	0					
ANR	829499	Identifier	trap		829179	1					
ANR	829500	Identifier	R_ANAL_TRAP_EXEC_ERR		829179	1					
ANR	829501	ExpressionStatement	esil -> trap_code = addr	4256:3:125315:125337	829179	1	True				
ANR	829502	AssignmentExpression	esil -> trap_code = addr		829179	0		=			
ANR	829503	PtrMemberAccess	esil -> trap_code		829179	0					
ANR	829504	Identifier	esil		829179	0					
ANR	829505	Identifier	trap_code		829179	1					
ANR	829506	Identifier	addr		829179	1					
ANR	829507	ExpressionStatement	"eprintf ( ""[ESIL] Trap, trying to execute on non-executable memory\\n"" )"	4257:3:125342:125411	829179	2	True				
ANR	829508	CallExpression	"eprintf ( ""[ESIL] Trap, trying to execute on non-executable memory\\n"" )"		829179	0					
ANR	829509	Callee	eprintf		829179	0					
ANR	829510	Identifier	eprintf		829179	0					
ANR	829511	ArgumentList	"""[ESIL] Trap, trying to execute on non-executable memory\\n"""		829179	1					
ANR	829512	Argument	"""[ESIL] Trap, trying to execute on non-executable memory\\n"""		829179	0					
ANR	829513	PrimaryExpression	"""[ESIL] Trap, trying to execute on non-executable memory\\n"""		829179	0					
ANR	829514	ExpressionStatement	return_tail ( 1 )	4258:3:125416:125431	829179	3	True				
ANR	829515	CallExpression	return_tail ( 1 )		829179	0					
ANR	829516	Callee	return_tail		829179	0					
ANR	829517	Identifier	return_tail		829179	0					
ANR	829518	ArgumentList	1		829179	1					
ANR	829519	Argument	1		829179	0					
ANR	829520	PrimaryExpression	1		829179	0					
ANR	829521	ExpressionStatement	"r_asm_set_pc ( core -> assembler , addr )"	4261:1:125441:125477	829179	25	True				
ANR	829522	CallExpression	"r_asm_set_pc ( core -> assembler , addr )"		829179	0					
ANR	829523	Callee	r_asm_set_pc		829179	0					
ANR	829524	Identifier	r_asm_set_pc		829179	0					
ANR	829525	ArgumentList	core -> assembler		829179	1					
ANR	829526	Argument	core -> assembler		829179	0					
ANR	829527	PtrMemberAccess	core -> assembler		829179	0					
ANR	829528	Identifier	core		829179	0					
ANR	829529	Identifier	assembler		829179	1					
ANR	829530	Argument	addr		829179	1					
ANR	829531	Identifier	addr		829179	0					
ANR	829532	IdentifierDeclStatement	"const char * pincmd = r_anal_pin_call ( core -> anal , addr ) ;"	4263:1:125510:125565	829179	26	True				
ANR	829533	IdentifierDecl	"* pincmd = r_anal_pin_call ( core -> anal , addr )"		829179	0					
ANR	829534	IdentifierDeclType	const char *		829179	0					
ANR	829535	Identifier	pincmd		829179	1					
ANR	829536	AssignmentExpression	"* pincmd = r_anal_pin_call ( core -> anal , addr )"		829179	2		=			
ANR	829537	Identifier	pincmd		829179	0					
ANR	829538	CallExpression	"r_anal_pin_call ( core -> anal , addr )"		829179	1					
ANR	829539	Callee	r_anal_pin_call		829179	0					
ANR	829540	Identifier	r_anal_pin_call		829179	0					
ANR	829541	ArgumentList	core -> anal		829179	1					
ANR	829542	Argument	core -> anal		829179	0					
ANR	829543	PtrMemberAccess	core -> anal		829179	0					
ANR	829544	Identifier	core		829179	0					
ANR	829545	Identifier	anal		829179	1					
ANR	829546	Argument	addr		829179	1					
ANR	829547	Identifier	addr		829179	0					
ANR	829548	IfStatement	if ( pincmd )		829179	27					
ANR	829549	Condition	pincmd	4264:5:125572:125577	829179	0	True				
ANR	829550	Identifier	pincmd		829179	0					
ANR	829551	CompoundStatement		61:2:1658:1701	829179	1					
ANR	829552	ExpressionStatement	"r_core_cmd0 ( core , pincmd )"	4265:2:125584:125610	829179	0	True				
ANR	829553	CallExpression	"r_core_cmd0 ( core , pincmd )"		829179	0					
ANR	829554	Callee	r_core_cmd0		829179	0					
ANR	829555	Identifier	r_core_cmd0		829179	0					
ANR	829556	ArgumentList	core		829179	1					
ANR	829557	Argument	core		829179	0					
ANR	829558	Identifier	core		829179	0					
ANR	829559	Argument	pincmd		829179	1					
ANR	829560	Identifier	pincmd		829179	0					
ANR	829561	IdentifierDeclStatement	"ut64 pc = r_debug_reg_get ( core -> dbg , ""PC"" ) ;"	4266:2:125614:125657	829179	1	True				
ANR	829562	IdentifierDecl	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		829179	0					
ANR	829563	IdentifierDeclType	ut64		829179	0					
ANR	829564	Identifier	pc		829179	1					
ANR	829565	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		829179	2		=			
ANR	829566	Identifier	pc		829179	0					
ANR	829567	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		829179	1					
ANR	829568	Callee	r_debug_reg_get		829179	0					
ANR	829569	Identifier	r_debug_reg_get		829179	0					
ANR	829570	ArgumentList	core -> dbg		829179	1					
ANR	829571	Argument	core -> dbg		829179	0					
ANR	829572	PtrMemberAccess	core -> dbg		829179	0					
ANR	829573	Identifier	core		829179	0					
ANR	829574	Identifier	dbg		829179	1					
ANR	829575	Argument	"""PC"""		829179	1					
ANR	829576	PrimaryExpression	"""PC"""		829179	0					
ANR	829577	IfStatement	if ( addr != pc )		829179	2					
ANR	829578	Condition	addr != pc	4267:6:125665:125674	829179	0	True				
ANR	829579	EqualityExpression	addr != pc		829179	0		!=			
ANR	829580	Identifier	addr		829179	0					
ANR	829581	Identifier	pc		829179	1					
ANR	829582	CompoundStatement		62:18:1721:1721	829179	1					
ANR	829583	ExpressionStatement	return_tail ( 1 )	4268:3:125682:125697	829179	0	True				
ANR	829584	CallExpression	return_tail ( 1 )		829179	0					
ANR	829585	Callee	return_tail		829179	0					
ANR	829586	Identifier	return_tail		829179	0					
ANR	829587	ArgumentList	1		829179	1					
ANR	829588	Argument	1		829179	0					
ANR	829589	PrimaryExpression	1		829179	0					
ANR	829590	IdentifierDeclStatement	"int dataAlign = r_anal_archinfo ( esil -> anal , R_ANAL_ARCHINFO_DATA_ALIGN ) ;"	4271:1:125707:125779	829179	28	True				
ANR	829591	IdentifierDecl	"dataAlign = r_anal_archinfo ( esil -> anal , R_ANAL_ARCHINFO_DATA_ALIGN )"		829179	0					
ANR	829592	IdentifierDeclType	int		829179	0					
ANR	829593	Identifier	dataAlign		829179	1					
ANR	829594	AssignmentExpression	"dataAlign = r_anal_archinfo ( esil -> anal , R_ANAL_ARCHINFO_DATA_ALIGN )"		829179	2		=			
ANR	829595	Identifier	dataAlign		829179	0					
ANR	829596	CallExpression	"r_anal_archinfo ( esil -> anal , R_ANAL_ARCHINFO_DATA_ALIGN )"		829179	1					
ANR	829597	Callee	r_anal_archinfo		829179	0					
ANR	829598	Identifier	r_anal_archinfo		829179	0					
ANR	829599	ArgumentList	esil -> anal		829179	1					
ANR	829600	Argument	esil -> anal		829179	0					
ANR	829601	PtrMemberAccess	esil -> anal		829179	0					
ANR	829602	Identifier	esil		829179	0					
ANR	829603	Identifier	anal		829179	1					
ANR	829604	Argument	R_ANAL_ARCHINFO_DATA_ALIGN		829179	1					
ANR	829605	Identifier	R_ANAL_ARCHINFO_DATA_ALIGN		829179	0					
ANR	829606	IfStatement	if ( dataAlign > 1 )		829179	29					
ANR	829607	Condition	dataAlign > 1	4272:5:125786:125798	829179	0	True				
ANR	829608	RelationalExpression	dataAlign > 1		829179	0		>			
ANR	829609	Identifier	dataAlign		829179	0					
ANR	829610	PrimaryExpression	1		829179	1					
ANR	829611	CompoundStatement		67:20:1845:1845	829179	1					
ANR	829612	IfStatement	if ( addr % dataAlign )		829179	0					
ANR	829613	Condition	addr % dataAlign	4273:6:125809:125824	829179	0	True				
ANR	829614	MultiplicativeExpression	addr % dataAlign		829179	0		%			
ANR	829615	Identifier	addr		829179	0					
ANR	829616	Identifier	dataAlign		829179	1					
ANR	829617	CompoundStatement		68:24:1871:1871	829179	1					
ANR	829618	IfStatement	if ( esil -> cmd && esil -> cmd_trap )		829179	0					
ANR	829619	Condition	esil -> cmd && esil -> cmd_trap	4274:7:125836:125862	829179	0	True				
ANR	829620	AndExpression	esil -> cmd && esil -> cmd_trap		829179	0		&&			
ANR	829621	PtrMemberAccess	esil -> cmd		829179	0					
ANR	829622	Identifier	esil		829179	0					
ANR	829623	Identifier	cmd		829179	1					
ANR	829624	PtrMemberAccess	esil -> cmd_trap		829179	1					
ANR	829625	Identifier	esil		829179	0					
ANR	829626	Identifier	cmd_trap		829179	1					
ANR	829627	CompoundStatement		69:36:1909:1909	829179	1					
ANR	829628	ExpressionStatement	"esil -> cmd ( esil , esil -> cmd_trap , addr , R_ANAL_TRAP_UNALIGNED )"	4275:4:125871:125932	829179	0	True				
ANR	829629	CallExpression	"esil -> cmd ( esil , esil -> cmd_trap , addr , R_ANAL_TRAP_UNALIGNED )"		829179	0					
ANR	829630	Callee	esil -> cmd		829179	0					
ANR	829631	PtrMemberAccess	esil -> cmd		829179	0					
ANR	829632	Identifier	esil		829179	0					
ANR	829633	Identifier	cmd		829179	1					
ANR	829634	ArgumentList	esil		829179	1					
ANR	829635	Argument	esil		829179	0					
ANR	829636	Identifier	esil		829179	0					
ANR	829637	Argument	esil -> cmd_trap		829179	1					
ANR	829638	PtrMemberAccess	esil -> cmd_trap		829179	0					
ANR	829639	Identifier	esil		829179	0					
ANR	829640	Identifier	cmd_trap		829179	1					
ANR	829641	Argument	addr		829179	2					
ANR	829642	Identifier	addr		829179	0					
ANR	829643	Argument	R_ANAL_TRAP_UNALIGNED		829179	3					
ANR	829644	Identifier	R_ANAL_TRAP_UNALIGNED		829179	0					
ANR	829645	IfStatement	if ( breakoninvalid )		829179	1					
ANR	829646	Condition	breakoninvalid	4277:7:125946:125959	829179	0	True				
ANR	829647	Identifier	breakoninvalid		829179	0					
ANR	829648	CompoundStatement		72:23:2006:2006	829179	1					
ANR	829649	ExpressionStatement	"r_cons_printf ( ""[ESIL] Stopped execution in an unaligned instruction (see e??esil.breakoninvalid)\\n"" )"	4278:4:125968:126069	829179	0	True				
ANR	829650	CallExpression	"r_cons_printf ( ""[ESIL] Stopped execution in an unaligned instruction (see e??esil.breakoninvalid)\\n"" )"		829179	0					
ANR	829651	Callee	r_cons_printf		829179	0					
ANR	829652	Identifier	r_cons_printf		829179	0					
ANR	829653	ArgumentList	"""[ESIL] Stopped execution in an unaligned instruction (see e??esil.breakoninvalid)\\n"""		829179	1					
ANR	829654	Argument	"""[ESIL] Stopped execution in an unaligned instruction (see e??esil.breakoninvalid)\\n"""		829179	0					
ANR	829655	PrimaryExpression	"""[ESIL] Stopped execution in an unaligned instruction (see e??esil.breakoninvalid)\\n"""		829179	0					
ANR	829656	ExpressionStatement	return_tail ( 0 )	4279:4:126075:126090	829179	1	True				
ANR	829657	CallExpression	return_tail ( 0 )		829179	0					
ANR	829658	Callee	return_tail		829179	0					
ANR	829659	Identifier	return_tail		829179	0					
ANR	829660	ArgumentList	0		829179	1					
ANR	829661	Argument	0		829179	0					
ANR	829662	PrimaryExpression	0		829179	0					
ANR	829663	ExpressionStatement	"( void ) r_io_read_at_mapped ( core -> io , addr , code , sizeof ( code ) )"	4283:1:126105:126169	829179	30	True				
ANR	829664	CastExpression	"( void ) r_io_read_at_mapped ( core -> io , addr , code , sizeof ( code ) )"		829179	0					
ANR	829665	CastTarget	void		829179	0					
ANR	829666	CallExpression	"r_io_read_at_mapped ( core -> io , addr , code , sizeof ( code ) )"		829179	1					
ANR	829667	Callee	r_io_read_at_mapped		829179	0					
ANR	829668	Identifier	r_io_read_at_mapped		829179	0					
ANR	829669	ArgumentList	core -> io		829179	1					
ANR	829670	Argument	core -> io		829179	0					
ANR	829671	PtrMemberAccess	core -> io		829179	0					
ANR	829672	Identifier	core		829179	0					
ANR	829673	Identifier	io		829179	1					
ANR	829674	Argument	addr		829179	1					
ANR	829675	Identifier	addr		829179	0					
ANR	829676	Argument	code		829179	2					
ANR	829677	Identifier	code		829179	0					
ANR	829678	Argument	sizeof ( code )		829179	3					
ANR	829679	SizeofExpression	sizeof ( code )		829179	0					
ANR	829680	Sizeof	sizeof		829179	0					
ANR	829681	SizeofOperand	code		829179	1					
ANR	829682	ExpressionStatement	"ret = r_anal_op ( core -> anal , & op , addr , code , sizeof ( code ) , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT )"	4285:1:126205:126308	829179	31	True				
ANR	829683	AssignmentExpression	"ret = r_anal_op ( core -> anal , & op , addr , code , sizeof ( code ) , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT )"		829179	0		=			
ANR	829684	Identifier	ret		829179	0					
ANR	829685	CallExpression	"r_anal_op ( core -> anal , & op , addr , code , sizeof ( code ) , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT )"		829179	1					
ANR	829686	Callee	r_anal_op		829179	0					
ANR	829687	Identifier	r_anal_op		829179	0					
ANR	829688	ArgumentList	core -> anal		829179	1					
ANR	829689	Argument	core -> anal		829179	0					
ANR	829690	PtrMemberAccess	core -> anal		829179	0					
ANR	829691	Identifier	core		829179	0					
ANR	829692	Identifier	anal		829179	1					
ANR	829693	Argument	& op		829179	1					
ANR	829694	UnaryOperationExpression	& op		829179	0					
ANR	829695	UnaryOperator	&		829179	0					
ANR	829696	Identifier	op		829179	1					
ANR	829697	Argument	addr		829179	2					
ANR	829698	Identifier	addr		829179	0					
ANR	829699	Argument	code		829179	3					
ANR	829700	Identifier	code		829179	0					
ANR	829701	Argument	sizeof ( code )		829179	4					
ANR	829702	SizeofExpression	sizeof ( code )		829179	0					
ANR	829703	Sizeof	sizeof		829179	0					
ANR	829704	SizeofOperand	code		829179	1					
ANR	829705	Argument	R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT		829179	5					
ANR	829706	InclusiveOrExpression	R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT		829179	0		|			
ANR	829707	Identifier	R_ANAL_OP_MASK_ESIL		829179	0					
ANR	829708	Identifier	R_ANAL_OP_MASK_HINT		829179	1					
ANR	829709	ExpressionStatement	esil = core -> anal -> esil	4288:1:126431:126454	829179	32	True				
ANR	829710	AssignmentExpression	esil = core -> anal -> esil		829179	0		=			
ANR	829711	Identifier	esil		829179	0					
ANR	829712	PtrMemberAccess	core -> anal -> esil		829179	1					
ANR	829713	PtrMemberAccess	core -> anal		829179	0					
ANR	829714	Identifier	core		829179	0					
ANR	829715	Identifier	anal		829179	1					
ANR	829716	Identifier	esil		829179	1					
ANR	829717	IfStatement	if ( op . size < 1 || ret < 1 )		829179	33					
ANR	829718	Condition	op . size < 1 || ret < 1	4289:5:126461:126482	829179	0	True				
ANR	829719	OrExpression	op . size < 1 || ret < 1		829179	0		||			
ANR	829720	RelationalExpression	op . size < 1		829179	0		<			
ANR	829721	MemberAccess	op . size		829179	0					
ANR	829722	Identifier	op		829179	0					
ANR	829723	Identifier	size		829179	1					
ANR	829724	PrimaryExpression	1		829179	1					
ANR	829725	RelationalExpression	ret < 1		829179	1		<			
ANR	829726	Identifier	ret		829179	0					
ANR	829727	PrimaryExpression	1		829179	1					
ANR	829728	CompoundStatement		84:29:2529:2529	829179	1					
ANR	829729	IfStatement	if ( esil -> cmd && esil -> cmd_trap )		829179	0					
ANR	829730	Condition	esil -> cmd && esil -> cmd_trap	4290:6:126493:126519	829179	0	True				
ANR	829731	AndExpression	esil -> cmd && esil -> cmd_trap		829179	0		&&			
ANR	829732	PtrMemberAccess	esil -> cmd		829179	0					
ANR	829733	Identifier	esil		829179	0					
ANR	829734	Identifier	cmd		829179	1					
ANR	829735	PtrMemberAccess	esil -> cmd_trap		829179	1					
ANR	829736	Identifier	esil		829179	0					
ANR	829737	Identifier	cmd_trap		829179	1					
ANR	829738	CompoundStatement		85:35:2566:2566	829179	1					
ANR	829739	ExpressionStatement	"esil -> cmd ( esil , esil -> cmd_trap , addr , R_ANAL_TRAP_INVALID )"	4291:3:126527:126586	829179	0	True				
ANR	829740	CallExpression	"esil -> cmd ( esil , esil -> cmd_trap , addr , R_ANAL_TRAP_INVALID )"		829179	0					
ANR	829741	Callee	esil -> cmd		829179	0					
ANR	829742	PtrMemberAccess	esil -> cmd		829179	0					
ANR	829743	Identifier	esil		829179	0					
ANR	829744	Identifier	cmd		829179	1					
ANR	829745	ArgumentList	esil		829179	1					
ANR	829746	Argument	esil		829179	0					
ANR	829747	Identifier	esil		829179	0					
ANR	829748	Argument	esil -> cmd_trap		829179	1					
ANR	829749	PtrMemberAccess	esil -> cmd_trap		829179	0					
ANR	829750	Identifier	esil		829179	0					
ANR	829751	Identifier	cmd_trap		829179	1					
ANR	829752	Argument	addr		829179	2					
ANR	829753	Identifier	addr		829179	0					
ANR	829754	Argument	R_ANAL_TRAP_INVALID		829179	3					
ANR	829755	Identifier	R_ANAL_TRAP_INVALID		829179	0					
ANR	829756	IfStatement	if ( breakoninvalid )		829179	1					
ANR	829757	Condition	breakoninvalid	4293:6:126598:126611	829179	0	True				
ANR	829758	Identifier	breakoninvalid		829179	0					
ANR	829759	CompoundStatement		88:22:2658:2658	829179	1					
ANR	829760	ExpressionStatement	"eprintf ( ""[ESIL] Stopped execution in an invalid instruction (see e??esil.breakoninvalid)\\n"" )"	4294:3:126619:126712	829179	0	True				
ANR	829761	CallExpression	"eprintf ( ""[ESIL] Stopped execution in an invalid instruction (see e??esil.breakoninvalid)\\n"" )"		829179	0					
ANR	829762	Callee	eprintf		829179	0					
ANR	829763	Identifier	eprintf		829179	0					
ANR	829764	ArgumentList	"""[ESIL] Stopped execution in an invalid instruction (see e??esil.breakoninvalid)\\n"""		829179	1					
ANR	829765	Argument	"""[ESIL] Stopped execution in an invalid instruction (see e??esil.breakoninvalid)\\n"""		829179	0					
ANR	829766	PrimaryExpression	"""[ESIL] Stopped execution in an invalid instruction (see e??esil.breakoninvalid)\\n"""		829179	0					
ANR	829767	ExpressionStatement	return_tail ( 0 )	4295:3:126717:126732	829179	1	True				
ANR	829768	CallExpression	return_tail ( 0 )		829179	0					
ANR	829769	Callee	return_tail		829179	0					
ANR	829770	Identifier	return_tail		829179	0					
ANR	829771	ArgumentList	0		829179	1					
ANR	829772	Argument	0		829179	0					
ANR	829773	PrimaryExpression	0		829179	0					
ANR	829774	ExpressionStatement	op . size = 1	4297:2:126740:126751	829179	2	True				
ANR	829775	AssignmentExpression	op . size = 1		829179	0		=			
ANR	829776	MemberAccess	op . size		829179	0					
ANR	829777	Identifier	op		829179	0					
ANR	829778	Identifier	size		829179	1					
ANR	829779	PrimaryExpression	1		829179	1					
ANR	829780	IfStatement	if ( stepOver )		829179	34					
ANR	829781	Condition	stepOver	4299:5:126788:126795	829179	0	True				
ANR	829782	Identifier	stepOver		829179	0					
ANR	829783	CompoundStatement		94:15:2842:2842	829179	1					
ANR	829784	SwitchStatement	switch ( op . type )		829179	0					
ANR	829785	Condition	op . type	4300:10:126810:126816	829179	0	True				
ANR	829786	MemberAccess	op . type		829179	0					
ANR	829787	Identifier	op		829179	0					
ANR	829788	Identifier	type		829179	1					
ANR	829789	CompoundStatement		95:19:2863:2863	829179	1					
ANR	829790	Label	case R_ANAL_OP_TYPE_SWI :	4301:2:126823:126846	829179	0	True				
ANR	829791	Identifier	R_ANAL_OP_TYPE_SWI		829179	0					
ANR	829792	Label	case R_ANAL_OP_TYPE_UCALL :	4302:2:126850:126875	829179	1	True				
ANR	829793	Identifier	R_ANAL_OP_TYPE_UCALL		829179	0					
ANR	829794	Label	case R_ANAL_OP_TYPE_CALL :	4303:2:126879:126903	829179	2	True				
ANR	829795	Identifier	R_ANAL_OP_TYPE_CALL		829179	0					
ANR	829796	Label	case R_ANAL_OP_TYPE_JMP :	4304:2:126907:126930	829179	3	True				
ANR	829797	Identifier	R_ANAL_OP_TYPE_JMP		829179	0					
ANR	829798	Label	case R_ANAL_OP_TYPE_RCALL :	4305:2:126934:126959	829179	4	True				
ANR	829799	Identifier	R_ANAL_OP_TYPE_RCALL		829179	0					
ANR	829800	Label	case R_ANAL_OP_TYPE_RJMP :	4306:2:126963:126987	829179	5	True				
ANR	829801	Identifier	R_ANAL_OP_TYPE_RJMP		829179	0					
ANR	829802	Label	case R_ANAL_OP_TYPE_CJMP :	4307:2:126991:127015	829179	6	True				
ANR	829803	Identifier	R_ANAL_OP_TYPE_CJMP		829179	0					
ANR	829804	Label	case R_ANAL_OP_TYPE_RET :	4308:2:127019:127042	829179	7	True				
ANR	829805	Identifier	R_ANAL_OP_TYPE_RET		829179	0					
ANR	829806	Label	case R_ANAL_OP_TYPE_CRET :	4309:2:127046:127070	829179	8	True				
ANR	829807	Identifier	R_ANAL_OP_TYPE_CRET		829179	0					
ANR	829808	Label	case R_ANAL_OP_TYPE_UJMP :	4310:2:127074:127098	829179	9	True				
ANR	829809	Identifier	R_ANAL_OP_TYPE_UJMP		829179	0					
ANR	829810	IfStatement	if ( addr == until_addr )		829179	10					
ANR	829811	Condition	addr == until_addr	4311:7:127107:127124	829179	0	True				
ANR	829812	EqualityExpression	addr == until_addr		829179	0		==			
ANR	829813	Identifier	addr		829179	0					
ANR	829814	Identifier	until_addr		829179	1					
ANR	829815	CompoundStatement		106:27:3171:3171	829179	1					
ANR	829816	ExpressionStatement	return_tail ( 0 )	4312:4:127133:127148	829179	0	True				
ANR	829817	CallExpression	return_tail ( 0 )		829179	0					
ANR	829818	Callee	return_tail		829179	0					
ANR	829819	Identifier	return_tail		829179	0					
ANR	829820	ArgumentList	0		829179	1					
ANR	829821	Argument	0		829179	0					
ANR	829822	PrimaryExpression	0		829179	0					
ANR	829823	ElseStatement	else		829179	0					
ANR	829824	CompoundStatement		108:10:3204:3204	829179	0					
ANR	829825	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , ""PC"" , op . addr + op . size )"	4314:4:127166:127219	829179	0	True				
ANR	829826	CallExpression	"r_reg_setv ( core -> anal -> reg , ""PC"" , op . addr + op . size )"		829179	0					
ANR	829827	Callee	r_reg_setv		829179	0					
ANR	829828	Identifier	r_reg_setv		829179	0					
ANR	829829	ArgumentList	core -> anal -> reg		829179	1					
ANR	829830	Argument	core -> anal -> reg		829179	0					
ANR	829831	PtrMemberAccess	core -> anal -> reg		829179	0					
ANR	829832	PtrMemberAccess	core -> anal		829179	0					
ANR	829833	Identifier	core		829179	0					
ANR	829834	Identifier	anal		829179	1					
ANR	829835	Identifier	reg		829179	1					
ANR	829836	Argument	"""PC"""		829179	1					
ANR	829837	PrimaryExpression	"""PC"""		829179	0					
ANR	829838	Argument	op . addr + op . size		829179	2					
ANR	829839	AdditiveExpression	op . addr + op . size		829179	0		+			
ANR	829840	MemberAccess	op . addr		829179	0					
ANR	829841	Identifier	op		829179	0					
ANR	829842	Identifier	addr		829179	1					
ANR	829843	MemberAccess	op . size		829179	1					
ANR	829844	Identifier	op		829179	0					
ANR	829845	Identifier	size		829179	1					
ANR	829846	ExpressionStatement	"r_reg_setv ( core -> dbg -> reg , ""PC"" , op . addr + op . size )"	4315:4:127225:127277	829179	1	True				
ANR	829847	CallExpression	"r_reg_setv ( core -> dbg -> reg , ""PC"" , op . addr + op . size )"		829179	0					
ANR	829848	Callee	r_reg_setv		829179	0					
ANR	829849	Identifier	r_reg_setv		829179	0					
ANR	829850	ArgumentList	core -> dbg -> reg		829179	1					
ANR	829851	Argument	core -> dbg -> reg		829179	0					
ANR	829852	PtrMemberAccess	core -> dbg -> reg		829179	0					
ANR	829853	PtrMemberAccess	core -> dbg		829179	0					
ANR	829854	Identifier	core		829179	0					
ANR	829855	Identifier	dbg		829179	1					
ANR	829856	Identifier	reg		829179	1					
ANR	829857	Argument	"""PC"""		829179	1					
ANR	829858	PrimaryExpression	"""PC"""		829179	0					
ANR	829859	Argument	op . addr + op . size		829179	2					
ANR	829860	AdditiveExpression	op . addr + op . size		829179	0		+			
ANR	829861	MemberAccess	op . addr		829179	0					
ANR	829862	Identifier	op		829179	0					
ANR	829863	Identifier	addr		829179	1					
ANR	829864	MemberAccess	op . size		829179	1					
ANR	829865	Identifier	op		829179	0					
ANR	829866	Identifier	size		829179	1					
ANR	829867	ReturnStatement	return 1 ;	4317:3:127287:127295	829179	11	True				
ANR	829868	PrimaryExpression	1		829179	0					
ANR	829869	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.r2wars"" ) )"		829179	35					
ANR	829870	Condition	"r_config_get_i ( core -> config , ""cfg.r2wars"" )"	4320:5:127309:127351	829179	0	True				
ANR	829871	CallExpression	"r_config_get_i ( core -> config , ""cfg.r2wars"" )"		829179	0					
ANR	829872	Callee	r_config_get_i		829179	0					
ANR	829873	Identifier	r_config_get_i		829179	0					
ANR	829874	ArgumentList	core -> config		829179	1					
ANR	829875	Argument	core -> config		829179	0					
ANR	829876	PtrMemberAccess	core -> config		829179	0					
ANR	829877	Identifier	core		829179	0					
ANR	829878	Identifier	config		829179	1					
ANR	829879	Argument	"""cfg.r2wars"""		829179	1					
ANR	829880	PrimaryExpression	"""cfg.r2wars"""		829179	0					
ANR	829881	CompoundStatement		117:2:3466:3513	829179	1					
ANR	829882	IdentifierDeclStatement	"ut64 vECX = r_reg_getv ( core -> anal -> reg , ""ecx"" ) ;"	4322:2:127422:127469	829179	0	True				
ANR	829883	IdentifierDecl	"vECX = r_reg_getv ( core -> anal -> reg , ""ecx"" )"		829179	0					
ANR	829884	IdentifierDeclType	ut64		829179	0					
ANR	829885	Identifier	vECX		829179	1					
ANR	829886	AssignmentExpression	"vECX = r_reg_getv ( core -> anal -> reg , ""ecx"" )"		829179	2		=			
ANR	829887	Identifier	vECX		829179	0					
ANR	829888	CallExpression	"r_reg_getv ( core -> anal -> reg , ""ecx"" )"		829179	1					
ANR	829889	Callee	r_reg_getv		829179	0					
ANR	829890	Identifier	r_reg_getv		829179	0					
ANR	829891	ArgumentList	core -> anal -> reg		829179	1					
ANR	829892	Argument	core -> anal -> reg		829179	0					
ANR	829893	PtrMemberAccess	core -> anal -> reg		829179	0					
ANR	829894	PtrMemberAccess	core -> anal		829179	0					
ANR	829895	Identifier	core		829179	0					
ANR	829896	Identifier	anal		829179	1					
ANR	829897	Identifier	reg		829179	1					
ANR	829898	Argument	"""ecx"""		829179	1					
ANR	829899	PrimaryExpression	"""ecx"""		829179	0					
ANR	829900	IfStatement	if ( op . prefix & R_ANAL_OP_PREFIX_REP && vECX > 1 )		829179	1					
ANR	829901	Condition	op . prefix & R_ANAL_OP_PREFIX_REP && vECX > 1	4323:6:127477:127521	829179	0	True				
ANR	829902	AndExpression	op . prefix & R_ANAL_OP_PREFIX_REP && vECX > 1		829179	0		&&			
ANR	829903	BitAndExpression	op . prefix & R_ANAL_OP_PREFIX_REP		829179	0		&			
ANR	829904	MemberAccess	op . prefix		829179	0					
ANR	829905	Identifier	op		829179	0					
ANR	829906	Identifier	prefix		829179	1					
ANR	829907	Identifier	R_ANAL_OP_PREFIX_REP		829179	1					
ANR	829908	RelationalExpression	vECX > 1		829179	1		>			
ANR	829909	Identifier	vECX		829179	0					
ANR	829910	PrimaryExpression	1		829179	1					
ANR	829911	CompoundStatement		119:3:3573:3625	829179	1					
ANR	829912	IdentifierDeclStatement	"char * tmp = strstr ( op . esil . ptr , "",ecx,?{,5,GOTO,}"" ) ;"	4324:3:127529:127581	829179	0	True				
ANR	829913	IdentifierDecl	"* tmp = strstr ( op . esil . ptr , "",ecx,?{,5,GOTO,}"" )"		829179	0					
ANR	829914	IdentifierDeclType	char *		829179	0					
ANR	829915	Identifier	tmp		829179	1					
ANR	829916	AssignmentExpression	"* tmp = strstr ( op . esil . ptr , "",ecx,?{,5,GOTO,}"" )"		829179	2		=			
ANR	829917	Identifier	tmp		829179	0					
ANR	829918	CallExpression	"strstr ( op . esil . ptr , "",ecx,?{,5,GOTO,}"" )"		829179	1					
ANR	829919	Callee	strstr		829179	0					
ANR	829920	Identifier	strstr		829179	0					
ANR	829921	ArgumentList	op . esil . ptr		829179	1					
ANR	829922	Argument	op . esil . ptr		829179	0					
ANR	829923	MemberAccess	op . esil . ptr		829179	0					
ANR	829924	MemberAccess	op . esil		829179	0					
ANR	829925	Identifier	op		829179	0					
ANR	829926	Identifier	esil		829179	1					
ANR	829927	Identifier	ptr		829179	1					
ANR	829928	Argument	""",ecx,?{,5,GOTO,}"""		829179	1					
ANR	829929	PrimaryExpression	""",ecx,?{,5,GOTO,}"""		829179	0					
ANR	829930	IfStatement	if ( tmp )		829179	1					
ANR	829931	Condition	tmp	4325:7:127590:127592	829179	0	True				
ANR	829932	Identifier	tmp		829179	0					
ANR	829933	CompoundStatement		120:12:3639:3639	829179	1					
ANR	829934	ExpressionStatement	tmp [ 0 ] = 0	4326:4:127601:127611	829179	0	True				
ANR	829935	AssignmentExpression	tmp [ 0 ] = 0		829179	0		=			
ANR	829936	ArrayIndexing	tmp [ 0 ]		829179	0					
ANR	829937	Identifier	tmp		829179	0					
ANR	829938	PrimaryExpression	0		829179	1					
ANR	829939	PrimaryExpression	0		829179	1					
ANR	829940	ExpressionStatement	op . esil . len -= 16	4328:3:127621:127638	829179	2	True				
ANR	829941	AssignmentExpression	op . esil . len -= 16		829179	0		-=			
ANR	829942	MemberAccess	op . esil . len		829179	0					
ANR	829943	MemberAccess	op . esil		829179	0					
ANR	829944	Identifier	op		829179	0					
ANR	829945	Identifier	esil		829179	1					
ANR	829946	Identifier	len		829179	1					
ANR	829947	PrimaryExpression	16		829179	1					
ANR	829948	ElseStatement	else		829179	0					
ANR	829949	CompoundStatement		124:9:3693:3693	829179	0					
ANR	829950	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , name , addr + op . size )"	4330:3:127654:127704	829179	0	True				
ANR	829951	CallExpression	"r_reg_setv ( core -> anal -> reg , name , addr + op . size )"		829179	0					
ANR	829952	Callee	r_reg_setv		829179	0					
ANR	829953	Identifier	r_reg_setv		829179	0					
ANR	829954	ArgumentList	core -> anal -> reg		829179	1					
ANR	829955	Argument	core -> anal -> reg		829179	0					
ANR	829956	PtrMemberAccess	core -> anal -> reg		829179	0					
ANR	829957	PtrMemberAccess	core -> anal		829179	0					
ANR	829958	Identifier	core		829179	0					
ANR	829959	Identifier	anal		829179	1					
ANR	829960	Identifier	reg		829179	1					
ANR	829961	Argument	name		829179	1					
ANR	829962	Identifier	name		829179	0					
ANR	829963	Argument	addr + op . size		829179	2					
ANR	829964	AdditiveExpression	addr + op . size		829179	0		+			
ANR	829965	Identifier	addr		829179	0					
ANR	829966	MemberAccess	op . size		829179	1					
ANR	829967	Identifier	op		829179	0					
ANR	829968	Identifier	size		829179	1					
ANR	829969	ElseStatement	else		829179	0					
ANR	829970	CompoundStatement		127:8:3762:3762	829179	0					
ANR	829971	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , name , addr + op . size )"	4333:2:127722:127772	829179	0	True				
ANR	829972	CallExpression	"r_reg_setv ( core -> anal -> reg , name , addr + op . size )"		829179	0					
ANR	829973	Callee	r_reg_setv		829179	0					
ANR	829974	Identifier	r_reg_setv		829179	0					
ANR	829975	ArgumentList	core -> anal -> reg		829179	1					
ANR	829976	Argument	core -> anal -> reg		829179	0					
ANR	829977	PtrMemberAccess	core -> anal -> reg		829179	0					
ANR	829978	PtrMemberAccess	core -> anal		829179	0					
ANR	829979	Identifier	core		829179	0					
ANR	829980	Identifier	anal		829179	1					
ANR	829981	Identifier	reg		829179	1					
ANR	829982	Argument	name		829179	1					
ANR	829983	Identifier	name		829179	0					
ANR	829984	Argument	addr + op . size		829179	2					
ANR	829985	AdditiveExpression	addr + op . size		829179	0		+			
ANR	829986	Identifier	addr		829179	0					
ANR	829987	MemberAccess	op . size		829179	1					
ANR	829988	Identifier	op		829179	0					
ANR	829989	Identifier	size		829179	1					
ANR	829990	IfStatement	if ( ret )		829179	36					
ANR	829991	Condition	ret	4335:5:127782:127784	829179	0	True				
ANR	829992	Identifier	ret		829179	0					
ANR	829993	CompoundStatement		130:10:3831:3831	829179	1					
ANR	829994	ExpressionStatement	"r_anal_esil_set_pc ( esil , addr )"	4336:2:127791:127822	829179	0	True				
ANR	829995	CallExpression	"r_anal_esil_set_pc ( esil , addr )"		829179	0					
ANR	829996	Callee	r_anal_esil_set_pc		829179	0					
ANR	829997	Identifier	r_anal_esil_set_pc		829179	0					
ANR	829998	ArgumentList	esil		829179	1					
ANR	829999	Argument	esil		829179	0					
ANR	830000	Identifier	esil		829179	0					
ANR	830001	Argument	addr		829179	1					
ANR	830002	Identifier	addr		829179	0					
ANR	830003	IfStatement	if ( core -> dbg -> trace -> enabled )		829179	1					
ANR	830004	Condition	core -> dbg -> trace -> enabled	4337:6:127830:127854	829179	0	True				
ANR	830005	PtrMemberAccess	core -> dbg -> trace -> enabled		829179	0					
ANR	830006	PtrMemberAccess	core -> dbg -> trace		829179	0					
ANR	830007	PtrMemberAccess	core -> dbg		829179	0					
ANR	830008	Identifier	core		829179	0					
ANR	830009	Identifier	dbg		829179	1					
ANR	830010	Identifier	trace		829179	1					
ANR	830011	Identifier	enabled		829179	1					
ANR	830012	CompoundStatement		133:3:3906:3932	829179	1					
ANR	830013	IdentifierDeclStatement	RReg * reg = core -> dbg -> reg ;	4338:3:127862:127888	829179	0	True				
ANR	830014	IdentifierDecl	* reg = core -> dbg -> reg		829179	0					
ANR	830015	IdentifierDeclType	RReg *		829179	0					
ANR	830016	Identifier	reg		829179	1					
ANR	830017	AssignmentExpression	* reg = core -> dbg -> reg		829179	2		=			
ANR	830018	Identifier	reg		829179	0					
ANR	830019	PtrMemberAccess	core -> dbg -> reg		829179	1					
ANR	830020	PtrMemberAccess	core -> dbg		829179	0					
ANR	830021	Identifier	core		829179	0					
ANR	830022	Identifier	dbg		829179	1					
ANR	830023	Identifier	reg		829179	1					
ANR	830024	ExpressionStatement	core -> dbg -> reg = core -> anal -> reg	4339:3:127893:127925	829179	1	True				
ANR	830025	AssignmentExpression	core -> dbg -> reg = core -> anal -> reg		829179	0		=			
ANR	830026	PtrMemberAccess	core -> dbg -> reg		829179	0					
ANR	830027	PtrMemberAccess	core -> dbg		829179	0					
ANR	830028	Identifier	core		829179	0					
ANR	830029	Identifier	dbg		829179	1					
ANR	830030	Identifier	reg		829179	1					
ANR	830031	PtrMemberAccess	core -> anal -> reg		829179	1					
ANR	830032	PtrMemberAccess	core -> anal		829179	0					
ANR	830033	Identifier	core		829179	0					
ANR	830034	Identifier	anal		829179	1					
ANR	830035	Identifier	reg		829179	1					
ANR	830036	ExpressionStatement	"r_debug_trace_pc ( core -> dbg , addr )"	4340:3:127930:127964	829179	2	True				
ANR	830037	CallExpression	"r_debug_trace_pc ( core -> dbg , addr )"		829179	0					
ANR	830038	Callee	r_debug_trace_pc		829179	0					
ANR	830039	Identifier	r_debug_trace_pc		829179	0					
ANR	830040	ArgumentList	core -> dbg		829179	1					
ANR	830041	Argument	core -> dbg		829179	0					
ANR	830042	PtrMemberAccess	core -> dbg		829179	0					
ANR	830043	Identifier	core		829179	0					
ANR	830044	Identifier	dbg		829179	1					
ANR	830045	Argument	addr		829179	1					
ANR	830046	Identifier	addr		829179	0					
ANR	830047	ExpressionStatement	core -> dbg -> reg = reg	4341:3:127969:127989	829179	3	True				
ANR	830048	AssignmentExpression	core -> dbg -> reg = reg		829179	0		=			
ANR	830049	PtrMemberAccess	core -> dbg -> reg		829179	0					
ANR	830050	PtrMemberAccess	core -> dbg		829179	0					
ANR	830051	Identifier	core		829179	0					
ANR	830052	Identifier	dbg		829179	1					
ANR	830053	Identifier	reg		829179	1					
ANR	830054	Identifier	reg		829179	1					
ANR	830055	ElseStatement	else		829179	0					
ANR	830056	IfStatement	if ( R_STR_ISNOTEMPTY ( R_STRBUF_SAFEGET ( & op . esil ) ) )		829179	0					
ANR	830057	Condition	R_STR_ISNOTEMPTY ( R_STRBUF_SAFEGET ( & op . esil ) )	4342:13:128004:128049	829179	0	True				
ANR	830058	CallExpression	R_STR_ISNOTEMPTY ( R_STRBUF_SAFEGET ( & op . esil ) )		829179	0					
ANR	830059	Callee	R_STR_ISNOTEMPTY		829179	0					
ANR	830060	Identifier	R_STR_ISNOTEMPTY		829179	0					
ANR	830061	ArgumentList	R_STRBUF_SAFEGET ( & op . esil )		829179	1					
ANR	830062	Argument	R_STRBUF_SAFEGET ( & op . esil )		829179	0					
ANR	830063	CallExpression	R_STRBUF_SAFEGET ( & op . esil )		829179	0					
ANR	830064	Callee	R_STRBUF_SAFEGET		829179	0					
ANR	830065	Identifier	R_STRBUF_SAFEGET		829179	0					
ANR	830066	ArgumentList	& op . esil		829179	1					
ANR	830067	Argument	& op . esil		829179	0					
ANR	830068	UnaryOperationExpression	& op . esil		829179	0					
ANR	830069	UnaryOperator	&		829179	0					
ANR	830070	MemberAccess	op . esil		829179	1					
ANR	830071	Identifier	op		829179	0					
ANR	830072	Identifier	esil		829179	1					
ANR	830073	CompoundStatement		137:61:4096:4096	829179	1					
ANR	830074	ExpressionStatement	"r_anal_esil_parse ( esil , R_STRBUF_SAFEGET ( & op . esil ) )"	4343:3:128057:128110	829179	0	True				
ANR	830075	CallExpression	"r_anal_esil_parse ( esil , R_STRBUF_SAFEGET ( & op . esil ) )"		829179	0					
ANR	830076	Callee	r_anal_esil_parse		829179	0					
ANR	830077	Identifier	r_anal_esil_parse		829179	0					
ANR	830078	ArgumentList	esil		829179	1					
ANR	830079	Argument	esil		829179	0					
ANR	830080	Identifier	esil		829179	0					
ANR	830081	Argument	R_STRBUF_SAFEGET ( & op . esil )		829179	1					
ANR	830082	CallExpression	R_STRBUF_SAFEGET ( & op . esil )		829179	0					
ANR	830083	Callee	R_STRBUF_SAFEGET		829179	0					
ANR	830084	Identifier	R_STRBUF_SAFEGET		829179	0					
ANR	830085	ArgumentList	& op . esil		829179	1					
ANR	830086	Argument	& op . esil		829179	0					
ANR	830087	UnaryOperationExpression	& op . esil		829179	0					
ANR	830088	UnaryOperator	&		829179	0					
ANR	830089	MemberAccess	op . esil		829179	1					
ANR	830090	Identifier	op		829179	0					
ANR	830091	Identifier	esil		829179	1					
ANR	830092	IfStatement	if ( core -> anal -> cur && core -> anal -> cur -> esil_post_loop )		829179	1					
ANR	830093	Condition	core -> anal -> cur && core -> anal -> cur -> esil_post_loop	4344:7:128119:128168	829179	0	True				
ANR	830094	AndExpression	core -> anal -> cur && core -> anal -> cur -> esil_post_loop		829179	0		&&			
ANR	830095	PtrMemberAccess	core -> anal -> cur		829179	0					
ANR	830096	PtrMemberAccess	core -> anal		829179	0					
ANR	830097	Identifier	core		829179	0					
ANR	830098	Identifier	anal		829179	1					
ANR	830099	Identifier	cur		829179	1					
ANR	830100	PtrMemberAccess	core -> anal -> cur -> esil_post_loop		829179	1					
ANR	830101	PtrMemberAccess	core -> anal -> cur		829179	0					
ANR	830102	PtrMemberAccess	core -> anal		829179	0					
ANR	830103	Identifier	core		829179	0					
ANR	830104	Identifier	anal		829179	1					
ANR	830105	Identifier	cur		829179	1					
ANR	830106	Identifier	esil_post_loop		829179	1					
ANR	830107	CompoundStatement		139:59:4215:4215	829179	1					
ANR	830108	ExpressionStatement	"core -> anal -> cur -> esil_post_loop ( esil , & op )"	4345:4:128177:128220	829179	0	True				
ANR	830109	CallExpression	"core -> anal -> cur -> esil_post_loop ( esil , & op )"		829179	0					
ANR	830110	Callee	core -> anal -> cur -> esil_post_loop		829179	0					
ANR	830111	PtrMemberAccess	core -> anal -> cur -> esil_post_loop		829179	0					
ANR	830112	PtrMemberAccess	core -> anal -> cur		829179	0					
ANR	830113	PtrMemberAccess	core -> anal		829179	0					
ANR	830114	Identifier	core		829179	0					
ANR	830115	Identifier	anal		829179	1					
ANR	830116	Identifier	cur		829179	1					
ANR	830117	Identifier	esil_post_loop		829179	1					
ANR	830118	ArgumentList	esil		829179	1					
ANR	830119	Argument	esil		829179	0					
ANR	830120	Identifier	esil		829179	0					
ANR	830121	Argument	& op		829179	1					
ANR	830122	UnaryOperationExpression	& op		829179	0					
ANR	830123	UnaryOperator	&		829179	0					
ANR	830124	Identifier	op		829179	1					
ANR	830125	ExpressionStatement	r_anal_esil_stack_free ( esil )	4347:3:128230:128259	829179	2	True				
ANR	830126	CallExpression	r_anal_esil_stack_free ( esil )		829179	0					
ANR	830127	Callee	r_anal_esil_stack_free		829179	0					
ANR	830128	Identifier	r_anal_esil_stack_free		829179	0					
ANR	830129	ArgumentList	esil		829179	1					
ANR	830130	Argument	esil		829179	0					
ANR	830131	Identifier	esil		829179	0					
ANR	830132	IfStatement	if ( op . delay )		829179	2					
ANR	830133	Condition	op . delay	4350:6:128304:128311	829179	0	True				
ANR	830134	MemberAccess	op . delay		829179	0					
ANR	830135	Identifier	op		829179	0					
ANR	830136	Identifier	delay		829179	1					
ANR	830137	CompoundStatement		148:3:4413:4430	829179	1					
ANR	830138	IdentifierDeclStatement	ut8 code2 [ 32 ] ;	4351:3:128319:128332	829179	0	True				
ANR	830139	IdentifierDecl	code2 [ 32 ]		829179	0					
ANR	830140	IdentifierDeclType	ut8 [ 32 ]		829179	0					
ANR	830141	Identifier	code2		829179	1					
ANR	830142	PrimaryExpression	32		829179	2					
ANR	830143	IdentifierDeclStatement	ut64 naddr = addr + op . size ;	4352:3:128337:128364	829179	1	True				
ANR	830144	IdentifierDecl	naddr = addr + op . size		829179	0					
ANR	830145	IdentifierDeclType	ut64		829179	0					
ANR	830146	Identifier	naddr		829179	1					
ANR	830147	AssignmentExpression	naddr = addr + op . size		829179	2		=			
ANR	830148	Identifier	naddr		829179	0					
ANR	830149	AdditiveExpression	addr + op . size		829179	1		+			
ANR	830150	Identifier	addr		829179	0					
ANR	830151	MemberAccess	op . size		829179	1					
ANR	830152	Identifier	op		829179	0					
ANR	830153	Identifier	size		829179	1					
ANR	830154	IdentifierDeclStatement	RAnalOp op2 = { 0 } ;	4353:3:128369:128386	829179	2	True				
ANR	830155	IdentifierDecl	op2 = { 0 }		829179	0					
ANR	830156	IdentifierDeclType	RAnalOp		829179	0					
ANR	830157	Identifier	op2		829179	1					
ANR	830158	AssignmentExpression	op2 = { 0 }		829179	2		=			
ANR	830159	Identifier	op2		829179	0					
ANR	830160	InitializerList	0		829179	1					
ANR	830161	PrimaryExpression	0		829179	0					
ANR	830162	ExpressionStatement	"r_anal_esil_set_pc ( esil , naddr )"	4355:3:128424:128456	829179	3	True				
ANR	830163	CallExpression	"r_anal_esil_set_pc ( esil , naddr )"		829179	0					
ANR	830164	Callee	r_anal_esil_set_pc		829179	0					
ANR	830165	Identifier	r_anal_esil_set_pc		829179	0					
ANR	830166	ArgumentList	esil		829179	1					
ANR	830167	Argument	esil		829179	0					
ANR	830168	Identifier	esil		829179	0					
ANR	830169	Argument	naddr		829179	1					
ANR	830170	Identifier	naddr		829179	0					
ANR	830171	ExpressionStatement	"( void ) r_io_read_at ( core -> io , naddr , code2 , sizeof ( code2 ) )"	4356:3:128461:128520	829179	4	True				
ANR	830172	CastExpression	"( void ) r_io_read_at ( core -> io , naddr , code2 , sizeof ( code2 ) )"		829179	0					
ANR	830173	CastTarget	void		829179	0					
ANR	830174	CallExpression	"r_io_read_at ( core -> io , naddr , code2 , sizeof ( code2 ) )"		829179	1					
ANR	830175	Callee	r_io_read_at		829179	0					
ANR	830176	Identifier	r_io_read_at		829179	0					
ANR	830177	ArgumentList	core -> io		829179	1					
ANR	830178	Argument	core -> io		829179	0					
ANR	830179	PtrMemberAccess	core -> io		829179	0					
ANR	830180	Identifier	core		829179	0					
ANR	830181	Identifier	io		829179	1					
ANR	830182	Argument	naddr		829179	1					
ANR	830183	Identifier	naddr		829179	0					
ANR	830184	Argument	code2		829179	2					
ANR	830185	Identifier	code2		829179	0					
ANR	830186	Argument	sizeof ( code2 )		829179	3					
ANR	830187	SizeofExpression	sizeof ( code2 )		829179	0					
ANR	830188	Sizeof	sizeof		829179	0					
ANR	830189	SizeofOperand	code2		829179	1					
ANR	830190	ExpressionStatement	"ret = r_anal_op ( core -> anal , & op2 , naddr , code2 , sizeof ( code2 ) , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT )"	4358:3:128560:128667	829179	5	True				
ANR	830191	AssignmentExpression	"ret = r_anal_op ( core -> anal , & op2 , naddr , code2 , sizeof ( code2 ) , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT )"		829179	0		=			
ANR	830192	Identifier	ret		829179	0					
ANR	830193	CallExpression	"r_anal_op ( core -> anal , & op2 , naddr , code2 , sizeof ( code2 ) , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT )"		829179	1					
ANR	830194	Callee	r_anal_op		829179	0					
ANR	830195	Identifier	r_anal_op		829179	0					
ANR	830196	ArgumentList	core -> anal		829179	1					
ANR	830197	Argument	core -> anal		829179	0					
ANR	830198	PtrMemberAccess	core -> anal		829179	0					
ANR	830199	Identifier	core		829179	0					
ANR	830200	Identifier	anal		829179	1					
ANR	830201	Argument	& op2		829179	1					
ANR	830202	UnaryOperationExpression	& op2		829179	0					
ANR	830203	UnaryOperator	&		829179	0					
ANR	830204	Identifier	op2		829179	1					
ANR	830205	Argument	naddr		829179	2					
ANR	830206	Identifier	naddr		829179	0					
ANR	830207	Argument	code2		829179	3					
ANR	830208	Identifier	code2		829179	0					
ANR	830209	Argument	sizeof ( code2 )		829179	4					
ANR	830210	SizeofExpression	sizeof ( code2 )		829179	0					
ANR	830211	Sizeof	sizeof		829179	0					
ANR	830212	SizeofOperand	code2		829179	1					
ANR	830213	Argument	R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT		829179	5					
ANR	830214	InclusiveOrExpression	R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT		829179	0		|			
ANR	830215	Identifier	R_ANAL_OP_MASK_ESIL		829179	0					
ANR	830216	Identifier	R_ANAL_OP_MASK_HINT		829179	1					
ANR	830217	IfStatement	if ( ret > 0 )		829179	6					
ANR	830218	Condition	ret > 0	4359:7:128676:128682	829179	0	True				
ANR	830219	RelationalExpression	ret > 0		829179	0		>			
ANR	830220	Identifier	ret		829179	0					
ANR	830221	PrimaryExpression	0		829179	1					
ANR	830222	CompoundStatement		154:16:4729:4729	829179	1					
ANR	830223	SwitchStatement	switch ( op2 . type )		829179	0					
ANR	830224	Condition	op2 . type	4360:12:128699:128706	829179	0	True				
ANR	830225	MemberAccess	op2 . type		829179	0					
ANR	830226	Identifier	op2		829179	0					
ANR	830227	Identifier	type		829179	1					
ANR	830228	CompoundStatement		155:22:4753:4753	829179	1					
ANR	830229	Label	case R_ANAL_OP_TYPE_CJMP :	4361:5:128716:128740	829179	0	True				
ANR	830230	Identifier	R_ANAL_OP_TYPE_CJMP		829179	0					
ANR	830231	Label	case R_ANAL_OP_TYPE_JMP :	4362:5:128747:128770	829179	1	True				
ANR	830232	Identifier	R_ANAL_OP_TYPE_JMP		829179	0					
ANR	830233	Label	case R_ANAL_OP_TYPE_CRET :	4363:5:128777:128801	829179	2	True				
ANR	830234	Identifier	R_ANAL_OP_TYPE_CRET		829179	0					
ANR	830235	Label	case R_ANAL_OP_TYPE_RET :	4364:5:128808:128831	829179	3	True				
ANR	830236	Identifier	R_ANAL_OP_TYPE_RET		829179	0					
ANR	830237	ExpressionStatement	esil -> trap = R_ANAL_TRAP_EXEC_ERR	4366:6:128885:128918	829179	4	True				
ANR	830238	AssignmentExpression	esil -> trap = R_ANAL_TRAP_EXEC_ERR		829179	0		=			
ANR	830239	PtrMemberAccess	esil -> trap		829179	0					
ANR	830240	Identifier	esil		829179	0					
ANR	830241	Identifier	trap		829179	1					
ANR	830242	Identifier	R_ANAL_TRAP_EXEC_ERR		829179	1					
ANR	830243	ExpressionStatement	esil -> trap_code = addr	4367:6:128926:128948	829179	5	True				
ANR	830244	AssignmentExpression	esil -> trap_code = addr		829179	0		=			
ANR	830245	PtrMemberAccess	esil -> trap_code		829179	0					
ANR	830246	Identifier	esil		829179	0					
ANR	830247	Identifier	trap_code		829179	1					
ANR	830248	Identifier	addr		829179	1					
ANR	830249	ExpressionStatement	"eprintf ( ""[ESIL] Trap, trying to execute a branch in a delay slot\\n"" )"	4368:6:128956:129025	829179	6	True				
ANR	830250	CallExpression	"eprintf ( ""[ESIL] Trap, trying to execute a branch in a delay slot\\n"" )"		829179	0					
ANR	830251	Callee	eprintf		829179	0					
ANR	830252	Identifier	eprintf		829179	0					
ANR	830253	ArgumentList	"""[ESIL] Trap, trying to execute a branch in a delay slot\\n"""		829179	1					
ANR	830254	Argument	"""[ESIL] Trap, trying to execute a branch in a delay slot\\n"""		829179	0					
ANR	830255	PrimaryExpression	"""[ESIL] Trap, trying to execute a branch in a delay slot\\n"""		829179	0					
ANR	830256	ExpressionStatement	return_tail ( 1 )	4369:6:129033:129048	829179	7	True				
ANR	830257	CallExpression	return_tail ( 1 )		829179	0					
ANR	830258	Callee	return_tail		829179	0					
ANR	830259	Identifier	return_tail		829179	0					
ANR	830260	ArgumentList	1		829179	1					
ANR	830261	Argument	1		829179	0					
ANR	830262	PrimaryExpression	1		829179	0					
ANR	830263	BreakStatement	break ;	4370:6:129056:129061	829179	8	True				
ANR	830264	ExpressionStatement	"r_anal_esil_parse ( esil , R_STRBUF_SAFEGET ( & op2 . esil ) )"	4372:4:129073:129127	829179	1	True				
ANR	830265	CallExpression	"r_anal_esil_parse ( esil , R_STRBUF_SAFEGET ( & op2 . esil ) )"		829179	0					
ANR	830266	Callee	r_anal_esil_parse		829179	0					
ANR	830267	Identifier	r_anal_esil_parse		829179	0					
ANR	830268	ArgumentList	esil		829179	1					
ANR	830269	Argument	esil		829179	0					
ANR	830270	Identifier	esil		829179	0					
ANR	830271	Argument	R_STRBUF_SAFEGET ( & op2 . esil )		829179	1					
ANR	830272	CallExpression	R_STRBUF_SAFEGET ( & op2 . esil )		829179	0					
ANR	830273	Callee	R_STRBUF_SAFEGET		829179	0					
ANR	830274	Identifier	R_STRBUF_SAFEGET		829179	0					
ANR	830275	ArgumentList	& op2 . esil		829179	1					
ANR	830276	Argument	& op2 . esil		829179	0					
ANR	830277	UnaryOperationExpression	& op2 . esil		829179	0					
ANR	830278	UnaryOperator	&		829179	0					
ANR	830279	MemberAccess	op2 . esil		829179	1					
ANR	830280	Identifier	op2		829179	0					
ANR	830281	Identifier	esil		829179	1					
ANR	830282	ElseStatement	else		829179	0					
ANR	830283	CompoundStatement		168:10:5183:5183	829179	0					
ANR	830284	Statement	eprintf	4374:4:129145:129151	829179	0	True				
ANR	830285	Statement	(	4374:12:129153:129153	829179	1	True				
ANR	830286	Statement	"""Invalid instruction at 0x%08"""	4374:13:129154:129183	829179	2	True				
ANR	830287	Statement	PFMT64x	4374:43:129184:129190	829179	3	True				
ANR	830288	Statement	"""\\n"""	4374:50:129191:129194	829179	4	True				
ANR	830289	Statement	","	4374:54:129195:129195	829179	5	True				
ANR	830290	Statement	naddr	4374:56:129197:129201	829179	6	True				
ANR	830291	Statement	)	4374:61:129202:129202	829179	7	True				
ANR	830292	ExpressionStatement		4374:62:129203:129203	829179	8	True				
ANR	830293	ExpressionStatement	r_anal_op_fini ( & op2 )	4376:3:129213:129234	829179	7	True				
ANR	830294	CallExpression	r_anal_op_fini ( & op2 )		829179	0					
ANR	830295	Callee	r_anal_op_fini		829179	0					
ANR	830296	Identifier	r_anal_op_fini		829179	0					
ANR	830297	ArgumentList	& op2		829179	1					
ANR	830298	Argument	& op2		829179	0					
ANR	830299	UnaryOperationExpression	& op2		829179	0					
ANR	830300	UnaryOperator	&		829179	0					
ANR	830301	Identifier	op2		829179	1					
ANR	830302	ExpressionStatement	tail_return_value = 1	4378:2:129242:129263	829179	3	True				
ANR	830303	AssignmentExpression	tail_return_value = 1		829179	0		=			
ANR	830304	Identifier	tail_return_value		829179	0					
ANR	830305	PrimaryExpression	1		829179	1					
ANR	830306	IdentifierDeclStatement	"st64 follow = ( st64 ) r_config_get_i ( core -> config , ""dbg.follow"" ) ;"	4383:1:129405:129468	829179	37	True				
ANR	830307	IdentifierDecl	"follow = ( st64 ) r_config_get_i ( core -> config , ""dbg.follow"" )"		829179	0					
ANR	830308	IdentifierDeclType	st64		829179	0					
ANR	830309	Identifier	follow		829179	1					
ANR	830310	AssignmentExpression	"follow = ( st64 ) r_config_get_i ( core -> config , ""dbg.follow"" )"		829179	2		=			
ANR	830311	Identifier	follow		829179	0					
ANR	830312	CastExpression	"( st64 ) r_config_get_i ( core -> config , ""dbg.follow"" )"		829179	1					
ANR	830313	CastTarget	st64		829179	0					
ANR	830314	CallExpression	"r_config_get_i ( core -> config , ""dbg.follow"" )"		829179	1					
ANR	830315	Callee	r_config_get_i		829179	0					
ANR	830316	Identifier	r_config_get_i		829179	0					
ANR	830317	ArgumentList	core -> config		829179	1					
ANR	830318	Argument	core -> config		829179	0					
ANR	830319	PtrMemberAccess	core -> config		829179	0					
ANR	830320	Identifier	core		829179	0					
ANR	830321	Identifier	config		829179	1					
ANR	830322	Argument	"""dbg.follow"""		829179	1					
ANR	830323	PrimaryExpression	"""dbg.follow"""		829179	0					
ANR	830324	IfStatement	if ( follow > 0 )		829179	38					
ANR	830325	Condition	follow > 0	4384:5:129475:129484	829179	0	True				
ANR	830326	RelationalExpression	follow > 0		829179	0		>			
ANR	830327	Identifier	follow		829179	0					
ANR	830328	PrimaryExpression	0		829179	1					
ANR	830329	CompoundStatement		180:2:5535:5578	829179	1					
ANR	830330	IdentifierDeclStatement	"ut64 pc = r_debug_reg_get ( core -> dbg , ""PC"" ) ;"	4385:2:129491:129534	829179	0	True				
ANR	830331	IdentifierDecl	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		829179	0					
ANR	830332	IdentifierDeclType	ut64		829179	0					
ANR	830333	Identifier	pc		829179	1					
ANR	830334	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		829179	2		=			
ANR	830335	Identifier	pc		829179	0					
ANR	830336	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		829179	1					
ANR	830337	Callee	r_debug_reg_get		829179	0					
ANR	830338	Identifier	r_debug_reg_get		829179	0					
ANR	830339	ArgumentList	core -> dbg		829179	1					
ANR	830340	Argument	core -> dbg		829179	0					
ANR	830341	PtrMemberAccess	core -> dbg		829179	0					
ANR	830342	Identifier	core		829179	0					
ANR	830343	Identifier	dbg		829179	1					
ANR	830344	Argument	"""PC"""		829179	1					
ANR	830345	PrimaryExpression	"""PC"""		829179	0					
ANR	830346	IfStatement	if ( ( pc < core -> offset ) || ( pc > ( core -> offset + follow ) ) )		829179	1					
ANR	830347	Condition	( pc < core -> offset ) || ( pc > ( core -> offset + follow ) )	4386:6:129542:129594	829179	0	True				
ANR	830348	OrExpression	( pc < core -> offset ) || ( pc > ( core -> offset + follow ) )		829179	0		||			
ANR	830349	RelationalExpression	pc < core -> offset		829179	0		<			
ANR	830350	Identifier	pc		829179	0					
ANR	830351	PtrMemberAccess	core -> offset		829179	1					
ANR	830352	Identifier	core		829179	0					
ANR	830353	Identifier	offset		829179	1					
ANR	830354	RelationalExpression	pc > ( core -> offset + follow )		829179	1		>			
ANR	830355	Identifier	pc		829179	0					
ANR	830356	AdditiveExpression	core -> offset + follow		829179	1		+			
ANR	830357	PtrMemberAccess	core -> offset		829179	0					
ANR	830358	Identifier	core		829179	0					
ANR	830359	Identifier	offset		829179	1					
ANR	830360	Identifier	follow		829179	1					
ANR	830361	CompoundStatement		181:61:5641:5641	829179	1					
ANR	830362	ExpressionStatement	"r_core_cmd0 ( core , ""sr PC"" )"	4387:3:129602:129629	829179	0	True				
ANR	830363	CallExpression	"r_core_cmd0 ( core , ""sr PC"" )"		829179	0					
ANR	830364	Callee	r_core_cmd0		829179	0					
ANR	830365	Identifier	r_core_cmd0		829179	0					
ANR	830366	ArgumentList	core		829179	1					
ANR	830367	Argument	core		829179	0					
ANR	830368	Identifier	core		829179	0					
ANR	830369	Argument	"""sr PC"""		829179	1					
ANR	830370	PrimaryExpression	"""sr PC"""		829179	0					
ANR	830371	IdentifierDeclStatement	"ut64 pc = r_reg_getv ( core -> anal -> reg , name ) ;"	4391:1:129661:129705	829179	39	True				
ANR	830372	IdentifierDecl	"pc = r_reg_getv ( core -> anal -> reg , name )"		829179	0					
ANR	830373	IdentifierDeclType	ut64		829179	0					
ANR	830374	Identifier	pc		829179	1					
ANR	830375	AssignmentExpression	"pc = r_reg_getv ( core -> anal -> reg , name )"		829179	2		=			
ANR	830376	Identifier	pc		829179	0					
ANR	830377	CallExpression	"r_reg_getv ( core -> anal -> reg , name )"		829179	1					
ANR	830378	Callee	r_reg_getv		829179	0					
ANR	830379	Identifier	r_reg_getv		829179	0					
ANR	830380	ArgumentList	core -> anal -> reg		829179	1					
ANR	830381	Argument	core -> anal -> reg		829179	0					
ANR	830382	PtrMemberAccess	core -> anal -> reg		829179	0					
ANR	830383	PtrMemberAccess	core -> anal		829179	0					
ANR	830384	Identifier	core		829179	0					
ANR	830385	Identifier	anal		829179	1					
ANR	830386	Identifier	reg		829179	1					
ANR	830387	Argument	name		829179	1					
ANR	830388	Identifier	name		829179	0					
ANR	830389	IfStatement	"if ( r_bp_get_at ( core -> dbg -> bp , pc ) )"		829179	40					
ANR	830390	Condition	"r_bp_get_at ( core -> dbg -> bp , pc )"	4392:5:129712:129742	829179	0	True				
ANR	830391	CallExpression	"r_bp_get_at ( core -> dbg -> bp , pc )"		829179	0					
ANR	830392	Callee	r_bp_get_at		829179	0					
ANR	830393	Identifier	r_bp_get_at		829179	0					
ANR	830394	ArgumentList	core -> dbg -> bp		829179	1					
ANR	830395	Argument	core -> dbg -> bp		829179	0					
ANR	830396	PtrMemberAccess	core -> dbg -> bp		829179	0					
ANR	830397	PtrMemberAccess	core -> dbg		829179	0					
ANR	830398	Identifier	core		829179	0					
ANR	830399	Identifier	dbg		829179	1					
ANR	830400	Identifier	bp		829179	1					
ANR	830401	Argument	pc		829179	1					
ANR	830402	Identifier	pc		829179	0					
ANR	830403	CompoundStatement		187:38:5789:5789	829179	1					
ANR	830404	Statement	r_cons_printf	4393:2:129749:129761	829179	0	True				
ANR	830405	Statement	(	4393:16:129763:129763	829179	1	True				
ANR	830406	Statement	"""[ESIL] hit breakpoint at 0x%"""	4393:17:129764:129793	829179	2	True				
ANR	830407	Statement	PFMT64x	4393:47:129794:129800	829179	3	True				
ANR	830408	Statement	"""\\n"""	4393:55:129802:129805	829179	4	True				
ANR	830409	Statement	","	4393:59:129806:129806	829179	5	True				
ANR	830410	Statement	pc	4393:61:129808:129809	829179	6	True				
ANR	830411	Statement	)	4393:63:129810:129810	829179	7	True				
ANR	830412	ExpressionStatement		4393:64:129811:129811	829179	8	True				
ANR	830413	ExpressionStatement	return_tail ( 0 )	4394:2:129815:129830	829179	9	True				
ANR	830414	CallExpression	return_tail ( 0 )		829179	0					
ANR	830415	Callee	return_tail		829179	0					
ANR	830416	Identifier	return_tail		829179	0					
ANR	830417	ArgumentList	0		829179	1					
ANR	830418	Argument	0		829179	0					
ANR	830419	PrimaryExpression	0		829179	0					
ANR	830420	IfStatement	if ( until_addr != UT64_MAX )		829179	41					
ANR	830421	Condition	until_addr != UT64_MAX	4397:5:129855:129876	829179	0	True				
ANR	830422	EqualityExpression	until_addr != UT64_MAX		829179	0		!=			
ANR	830423	Identifier	until_addr		829179	0					
ANR	830424	Identifier	UT64_MAX		829179	1					
ANR	830425	CompoundStatement		192:29:5923:5923	829179	1					
ANR	830426	IfStatement	if ( pc == until_addr )		829179	0					
ANR	830427	Condition	pc == until_addr	4398:6:129887:129902	829179	0	True				
ANR	830428	EqualityExpression	pc == until_addr		829179	0		==			
ANR	830429	Identifier	pc		829179	0					
ANR	830430	Identifier	until_addr		829179	1					
ANR	830431	CompoundStatement		193:24:5949:5949	829179	1					
ANR	830432	ExpressionStatement	return_tail ( 0 )	4399:3:129910:129925	829179	0	True				
ANR	830433	CallExpression	return_tail ( 0 )		829179	0					
ANR	830434	Callee	return_tail		829179	0					
ANR	830435	Identifier	return_tail		829179	0					
ANR	830436	ArgumentList	0		829179	1					
ANR	830437	Argument	0		829179	0					
ANR	830438	PrimaryExpression	0		829179	0					
ANR	830439	GotoStatement	goto repeat ;	4401:2:129933:129944	829179	1	True				
ANR	830440	Identifier	repeat		829179	0					
ANR	830441	IfStatement	if ( esil && esil -> trap )		829179	42					
ANR	830442	Condition	esil && esil -> trap	4404:5:129969:129986	829179	0	True				
ANR	830443	AndExpression	esil && esil -> trap		829179	0		&&			
ANR	830444	Identifier	esil		829179	0					
ANR	830445	PtrMemberAccess	esil -> trap		829179	1					
ANR	830446	Identifier	esil		829179	0					
ANR	830447	Identifier	trap		829179	1					
ANR	830448	CompoundStatement		199:25:6033:6033	829179	1					
ANR	830449	IfStatement	if ( core -> anal -> esil -> verbose )		829179	0					
ANR	830450	Condition	core -> anal -> esil -> verbose	4405:6:129997:130021	829179	0	True				
ANR	830451	PtrMemberAccess	core -> anal -> esil -> verbose		829179	0					
ANR	830452	PtrMemberAccess	core -> anal -> esil		829179	0					
ANR	830453	PtrMemberAccess	core -> anal		829179	0					
ANR	830454	Identifier	core		829179	0					
ANR	830455	Identifier	anal		829179	1					
ANR	830456	Identifier	esil		829179	1					
ANR	830457	Identifier	verbose		829179	1					
ANR	830458	CompoundStatement		200:33:6068:6068	829179	1					
ANR	830459	ExpressionStatement	"eprintf ( ""TRAP\\n"" )"	4406:3:130029:130047	829179	0	True				
ANR	830460	CallExpression	"eprintf ( ""TRAP\\n"" )"		829179	0					
ANR	830461	Callee	eprintf		829179	0					
ANR	830462	Identifier	eprintf		829179	0					
ANR	830463	ArgumentList	"""TRAP\\n"""		829179	1					
ANR	830464	Argument	"""TRAP\\n"""		829179	0					
ANR	830465	PrimaryExpression	"""TRAP\\n"""		829179	0					
ANR	830466	ExpressionStatement	return_tail ( 0 )	4408:2:130055:130070	829179	1	True				
ANR	830467	CallExpression	return_tail ( 0 )		829179	0					
ANR	830468	Callee	return_tail		829179	0					
ANR	830469	Identifier	return_tail		829179	0					
ANR	830470	ArgumentList	0		829179	1					
ANR	830471	Argument	0		829179	0					
ANR	830472	PrimaryExpression	0		829179	0					
ANR	830473	IfStatement	if ( until_expr )		829179	43					
ANR	830474	Condition	until_expr	4410:5:130080:130089	829179	0	True				
ANR	830475	Identifier	until_expr		829179	0					
ANR	830476	CompoundStatement		205:17:6136:6136	829179	1					
ANR	830477	IfStatement	"if ( r_anal_esil_condition ( core -> anal -> esil , until_expr ) )"		829179	0					
ANR	830478	Condition	"r_anal_esil_condition ( core -> anal -> esil , until_expr )"	4411:6:130100:130151	829179	0	True				
ANR	830479	CallExpression	"r_anal_esil_condition ( core -> anal -> esil , until_expr )"		829179	0					
ANR	830480	Callee	r_anal_esil_condition		829179	0					
ANR	830481	Identifier	r_anal_esil_condition		829179	0					
ANR	830482	ArgumentList	core -> anal -> esil		829179	1					
ANR	830483	Argument	core -> anal -> esil		829179	0					
ANR	830484	PtrMemberAccess	core -> anal -> esil		829179	0					
ANR	830485	PtrMemberAccess	core -> anal		829179	0					
ANR	830486	Identifier	core		829179	0					
ANR	830487	Identifier	anal		829179	1					
ANR	830488	Identifier	esil		829179	1					
ANR	830489	Argument	until_expr		829179	1					
ANR	830490	Identifier	until_expr		829179	0					
ANR	830491	CompoundStatement		206:60:6198:6198	829179	1					
ANR	830492	IfStatement	if ( core -> anal -> esil -> verbose )		829179	0					
ANR	830493	Condition	core -> anal -> esil -> verbose	4412:7:130163:130187	829179	0	True				
ANR	830494	PtrMemberAccess	core -> anal -> esil -> verbose		829179	0					
ANR	830495	PtrMemberAccess	core -> anal -> esil		829179	0					
ANR	830496	PtrMemberAccess	core -> anal		829179	0					
ANR	830497	Identifier	core		829179	0					
ANR	830498	Identifier	anal		829179	1					
ANR	830499	Identifier	esil		829179	1					
ANR	830500	Identifier	verbose		829179	1					
ANR	830501	CompoundStatement		207:34:6234:6234	829179	1					
ANR	830502	ExpressionStatement	"eprintf ( ""ESIL BREAK!\\n"" )"	4413:4:130196:130221	829179	0	True				
ANR	830503	CallExpression	"eprintf ( ""ESIL BREAK!\\n"" )"		829179	0					
ANR	830504	Callee	eprintf		829179	0					
ANR	830505	Identifier	eprintf		829179	0					
ANR	830506	ArgumentList	"""ESIL BREAK!\\n"""		829179	1					
ANR	830507	Argument	"""ESIL BREAK!\\n"""		829179	0					
ANR	830508	PrimaryExpression	"""ESIL BREAK!\\n"""		829179	0					
ANR	830509	ExpressionStatement	return_tail ( 0 )	4415:3:130231:130246	829179	1	True				
ANR	830510	CallExpression	return_tail ( 0 )		829179	0					
ANR	830511	Callee	return_tail		829179	0					
ANR	830512	Identifier	return_tail		829179	0					
ANR	830513	ArgumentList	0		829179	1					
ANR	830514	Argument	0		829179	0					
ANR	830515	PrimaryExpression	0		829179	0					
ANR	830516	GotoStatement	goto repeat ;	4417:2:130254:130265	829179	1	True				
ANR	830517	Identifier	repeat		829179	0					
ANR	830518	Label	tail_return :	4419:0:130270:130281	829179	44	True				
ANR	830519	Identifier	tail_return		829179	0					
ANR	830520	ExpressionStatement	r_anal_op_fini ( & op )	4420:1:130284:130304	829179	45	True				
ANR	830521	CallExpression	r_anal_op_fini ( & op )		829179	0					
ANR	830522	Callee	r_anal_op_fini		829179	0					
ANR	830523	Identifier	r_anal_op_fini		829179	0					
ANR	830524	ArgumentList	& op		829179	1					
ANR	830525	Argument	& op		829179	0					
ANR	830526	UnaryOperationExpression	& op		829179	0					
ANR	830527	UnaryOperator	&		829179	0					
ANR	830528	Identifier	op		829179	1					
ANR	830529	ExpressionStatement	r_cons_break_pop ( )	4421:1:130307:130326	829179	46	True				
ANR	830530	CallExpression	r_cons_break_pop ( )		829179	0					
ANR	830531	Callee	r_cons_break_pop		829179	0					
ANR	830532	Identifier	r_cons_break_pop		829179	0					
ANR	830533	ArgumentList			829179	1					
ANR	830534	ReturnStatement	return tail_return_value ;	4422:1:130329:130353	829179	47	True				
ANR	830535	Identifier	tail_return_value		829179	0					
ANR	830536	ReturnType	R_API int		829179	1					
ANR	830537	Identifier	r_core_esil_step		829179	2					
ANR	830538	ParameterList	"RCore * core , ut64 until_addr , const char * until_expr , ut64 * prev_addr , bool stepOver"		829179	3					
ANR	830539	Parameter	RCore * core	4206:27:123869:123879	829179	0	True				
ANR	830540	ParameterType	RCore *		829179	0					
ANR	830541	Identifier	core		829179	1					
ANR	830542	Parameter	ut64 until_addr	4206:40:123882:123896	829179	1	True				
ANR	830543	ParameterType	ut64		829179	0					
ANR	830544	Identifier	until_addr		829179	1					
ANR	830545	Parameter	const char * until_expr	4206:57:123899:123920	829179	2	True				
ANR	830546	ParameterType	const char *		829179	0					
ANR	830547	Identifier	until_expr		829179	1					
ANR	830548	Parameter	ut64 * prev_addr	4206:81:123923:123937	829179	3	True				
ANR	830549	ParameterType	ut64 *		829179	0					
ANR	830550	Identifier	prev_addr		829179	1					
ANR	830551	Parameter	bool stepOver	4206:98:123940:123952	829179	4	True				
ANR	830552	ParameterType	bool		829179	0					
ANR	830553	Identifier	stepOver		829179	1					
ANR	830554	CFGEntryNode	ENTRY		829179		True				
ANR	830555	CFGExitNode	EXIT		829179		True				
ANR	830556	Symbol	R_REG_NAME_PC		829179						
ANR	830557	Symbol	r_debug_reg_get		829179						
ANR	830558	Symbol	esiltimeout		829179						
ANR	830559	Symbol	core -> offset		829179						
ANR	830560	Symbol	& op		829179						
ANR	830561	Symbol	op . esil . ptr		829179						
ANR	830562	Symbol	core -> dbg -> bp		829179						
ANR	830563	Symbol	until_addr		829179						
ANR	830564	Symbol	until_expr		829179						
ANR	830565	Symbol	r_anal_pin_call		829179						
ANR	830566	Symbol	tmp		829179						
ANR	830567	Symbol	* core -> anal -> esil		829179						
ANR	830568	Symbol	* esil		829179						
ANR	830569	Symbol	core -> anal -> esil		829179						
ANR	830570	Symbol	initializeEsil		829179						
ANR	830571	Symbol	R_STR_ISNOTEMPTY		829179						
ANR	830572	Symbol	esil -> cmd_trap		829179						
ANR	830573	Symbol	r_anal_op		829179						
ANR	830574	Symbol	& op . esil		829179						
ANR	830575	Symbol	* core -> anal -> cur		829179						
ANR	830576	Symbol	esil -> trap_code		829179						
ANR	830577	Symbol	* * * core		829179						
ANR	830578	Symbol	core -> dbg -> trace -> enabled		829179						
ANR	830579	Symbol	r_config_get_i		829179						
ANR	830580	Symbol	r_anal_esil_condition		829179						
ANR	830581	Symbol	* core -> dbg		829179						
ANR	830582	Symbol	& op2 . esil		829179						
ANR	830583	Symbol	* tmp		829179						
ANR	830584	Symbol	code2		829179						
ANR	830585	Symbol	R_ANAL_TRAP_UNALIGNED		829179						
ANR	830586	Symbol	* core		829179						
ANR	830587	Symbol	core -> assembler		829179						
ANR	830588	Symbol	op . esil		829179						
ANR	830589	Symbol	op . delay		829179						
ANR	830590	Symbol	core -> anal		829179						
ANR	830591	Symbol	R_PERM_X		829179						
ANR	830592	Symbol	& op2		829179						
ANR	830593	Symbol	r_cons_is_breaked		829179						
ANR	830594	Symbol	core -> io		829179						
ANR	830595	Symbol	esil -> trap		829179						
ANR	830596	Symbol	startTime		829179						
ANR	830597	Symbol	op . type		829179						
ANR	830598	Symbol	naddr		829179						
ANR	830599	Symbol	R_STRBUF_SAFEGET		829179						
ANR	830600	Symbol	op2		829179						
ANR	830601	Symbol	vECX		829179						
ANR	830602	Symbol	* core -> anal		829179						
ANR	830603	Symbol	esil -> anal		829179						
ANR	830604	Symbol	core -> anal -> esil -> verbose		829179						
ANR	830605	Symbol	core -> dbg -> reg		829179						
ANR	830606	Symbol	R_ANAL_ARCHINFO_DATA_ALIGN		829179						
ANR	830607	Symbol	x		829179						
ANR	830608	Symbol	op2 . type		829179						
ANR	830609	Symbol	tail_return_value		829179						
ANR	830610	Symbol	esil		829179						
ANR	830611	Symbol	elapsedTime		829179						
ANR	830612	Symbol	core -> anal -> reg		829179						
ANR	830613	Symbol	* prev_addr		829179						
ANR	830614	Symbol	r_anal_archinfo		829179						
ANR	830615	Symbol	r_bp_get_at		829179						
ANR	830616	Symbol	op . prefix		829179						
ANR	830617	Symbol	* core -> dbg -> trace		829179						
ANR	830618	Symbol	reg		829179						
ANR	830619	Symbol	core -> anal -> cur -> esil_post_loop		829179						
ANR	830620	Symbol	R_ANAL_TRAP_EXEC_ERR		829179						
ANR	830621	Symbol	* * core -> anal		829179						
ANR	830622	Symbol	pincmd		829179						
ANR	830623	Symbol	esil -> exectrap		829179						
ANR	830624	Symbol	ret		829179						
ANR	830625	Symbol	r_io_is_valid_offset		829179						
ANR	830626	Symbol	NULL		829179						
ANR	830627	Symbol	op . addr		829179						
ANR	830628	Symbol	prev_addr		829179						
ANR	830629	Symbol	esil -> cmd		829179						
ANR	830630	Symbol	core		829179						
ANR	830631	Symbol	r_reg_get_name		829179						
ANR	830632	Symbol	strstr		829179						
ANR	830633	Symbol	name		829179						
ANR	830634	Symbol	r_reg_getv		829179						
ANR	830635	Symbol	op . size		829179						
ANR	830636	Symbol	R_ANAL_OP_MASK_ESIL		829179						
ANR	830637	Symbol	code		829179						
ANR	830638	Symbol	op . esil . len		829179						
ANR	830639	Symbol	core -> anal -> cur		829179						
ANR	830640	Symbol	dataAlign		829179						
ANR	830641	Symbol	R_ANAL_OP_PREFIX_REP		829179						
ANR	830642	Symbol	core -> dbg -> trace		829179						
ANR	830643	Symbol	addr		829179						
ANR	830644	Symbol	UT64_MAX		829179						
ANR	830645	Symbol	* * core		829179						
ANR	830646	Symbol	core -> config		829179						
ANR	830647	Symbol	op		829179						
ANR	830648	Symbol	stepOver		829179						
ANR	830649	Symbol	r_sys_now		829179						
ANR	830650	Symbol	R_ANAL_TRAP_INVALID		829179						
ANR	830651	Symbol	follow		829179						
ANR	830652	Symbol	pc		829179						
ANR	830653	Symbol	breakoninvalid		829179						
ANR	830654	Symbol	R_ANAL_OP_MASK_HINT		829179						
ANR	830655	Symbol	core -> dbg		829179						
ANR	830656	Symbol	* * core -> dbg		829179						
ANR	830657	Function	r_core_esil_step_back	4425:0:130358:131411							
ANR	830658	FunctionDef	r_core_esil_step_back (RCore * core)		830657	0					
ANR	830659	CompoundStatement		4425:45:130403:131411	830657	0					
ANR	830660	IdentifierDeclStatement	RAnalEsil * esil = core -> anal -> esil ;	4426:1:130406:130440	830657	0	True				
ANR	830661	IdentifierDecl	* esil = core -> anal -> esil		830657	0					
ANR	830662	IdentifierDeclType	RAnalEsil *		830657	0					
ANR	830663	Identifier	esil		830657	1					
ANR	830664	AssignmentExpression	* esil = core -> anal -> esil		830657	2		=			
ANR	830665	Identifier	esil		830657	0					
ANR	830666	PtrMemberAccess	core -> anal -> esil		830657	1					
ANR	830667	PtrMemberAccess	core -> anal		830657	0					
ANR	830668	Identifier	core		830657	0					
ANR	830669	Identifier	anal		830657	1					
ANR	830670	Identifier	esil		830657	1					
ANR	830671	IdentifierDeclStatement	RListIter * tail ;	4427:1:130443:130458	830657	1	True				
ANR	830672	IdentifierDecl	* tail		830657	0					
ANR	830673	IdentifierDeclType	RListIter *		830657	0					
ANR	830674	Identifier	tail		830657	1					
ANR	830675	IdentifierDeclStatement	"const char * name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	4428:1:130461:130527	830657	2	True				
ANR	830676	IdentifierDecl	"* name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		830657	0					
ANR	830677	IdentifierDeclType	const char *		830657	0					
ANR	830678	Identifier	name		830657	1					
ANR	830679	AssignmentExpression	"* name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		830657	2		=			
ANR	830680	Identifier	name		830657	0					
ANR	830681	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		830657	1					
ANR	830682	Callee	r_reg_get_name		830657	0					
ANR	830683	Identifier	r_reg_get_name		830657	0					
ANR	830684	ArgumentList	core -> anal -> reg		830657	1					
ANR	830685	Argument	core -> anal -> reg		830657	0					
ANR	830686	PtrMemberAccess	core -> anal -> reg		830657	0					
ANR	830687	PtrMemberAccess	core -> anal		830657	0					
ANR	830688	Identifier	core		830657	0					
ANR	830689	Identifier	anal		830657	1					
ANR	830690	Identifier	reg		830657	1					
ANR	830691	Argument	R_REG_NAME_PC		830657	1					
ANR	830692	Identifier	R_REG_NAME_PC		830657	0					
ANR	830693	IdentifierDeclStatement	ut64 prev = 0 ;	4429:1:130530:130543	830657	3	True				
ANR	830694	IdentifierDecl	prev = 0		830657	0					
ANR	830695	IdentifierDeclType	ut64		830657	0					
ANR	830696	Identifier	prev		830657	1					
ANR	830697	AssignmentExpression	prev = 0		830657	2		=			
ANR	830698	Identifier	prev		830657	0					
ANR	830699	PrimaryExpression	0		830657	1					
ANR	830700	IdentifierDeclStatement	"ut64 end = r_reg_getv ( core -> anal -> reg , name ) ;"	4430:1:130546:130591	830657	4	True				
ANR	830701	IdentifierDecl	"end = r_reg_getv ( core -> anal -> reg , name )"		830657	0					
ANR	830702	IdentifierDeclType	ut64		830657	0					
ANR	830703	Identifier	end		830657	1					
ANR	830704	AssignmentExpression	"end = r_reg_getv ( core -> anal -> reg , name )"		830657	2		=			
ANR	830705	Identifier	end		830657	0					
ANR	830706	CallExpression	"r_reg_getv ( core -> anal -> reg , name )"		830657	1					
ANR	830707	Callee	r_reg_getv		830657	0					
ANR	830708	Identifier	r_reg_getv		830657	0					
ANR	830709	ArgumentList	core -> anal -> reg		830657	1					
ANR	830710	Argument	core -> anal -> reg		830657	0					
ANR	830711	PtrMemberAccess	core -> anal -> reg		830657	0					
ANR	830712	PtrMemberAccess	core -> anal		830657	0					
ANR	830713	Identifier	core		830657	0					
ANR	830714	Identifier	anal		830657	1					
ANR	830715	Identifier	reg		830657	1					
ANR	830716	Argument	name		830657	1					
ANR	830717	Identifier	name		830657	0					
ANR	830718	IfStatement	if ( ! esil || ! ( tail = r_list_tail ( esil -> sessions ) ) )		830657	5					
ANR	830719	Condition	! esil || ! ( tail = r_list_tail ( esil -> sessions ) )	4432:5:130599:130645	830657	0	True				
ANR	830720	OrExpression	! esil || ! ( tail = r_list_tail ( esil -> sessions ) )		830657	0		||			
ANR	830721	UnaryOperationExpression	! esil		830657	0					
ANR	830722	UnaryOperator	!		830657	0					
ANR	830723	Identifier	esil		830657	1					
ANR	830724	UnaryOperationExpression	! ( tail = r_list_tail ( esil -> sessions ) )		830657	1					
ANR	830725	UnaryOperator	!		830657	0					
ANR	830726	AssignmentExpression	tail = r_list_tail ( esil -> sessions )		830657	1		=			
ANR	830727	Identifier	tail		830657	0					
ANR	830728	CallExpression	r_list_tail ( esil -> sessions )		830657	1					
ANR	830729	Callee	r_list_tail		830657	0					
ANR	830730	Identifier	r_list_tail		830657	0					
ANR	830731	ArgumentList	esil -> sessions		830657	1					
ANR	830732	Argument	esil -> sessions		830657	0					
ANR	830733	PtrMemberAccess	esil -> sessions		830657	0					
ANR	830734	Identifier	esil		830657	0					
ANR	830735	Identifier	sessions		830657	1					
ANR	830736	CompoundStatement		8:54:244:244	830657	1					
ANR	830737	ReturnStatement	return 0 ;	4433:2:130652:130660	830657	0	True				
ANR	830738	PrimaryExpression	0		830657	0					
ANR	830739	IdentifierDeclStatement	RAnalEsilSession * before = ( RAnalEsilSession * ) tail -> data ;	4435:1:130666:130724	830657	6	True				
ANR	830740	IdentifierDecl	* before = ( RAnalEsilSession * ) tail -> data		830657	0					
ANR	830741	IdentifierDeclType	RAnalEsilSession *		830657	0					
ANR	830742	Identifier	before		830657	1					
ANR	830743	AssignmentExpression	* before = ( RAnalEsilSession * ) tail -> data		830657	2		=			
ANR	830744	Identifier	before		830657	0					
ANR	830745	CastExpression	( RAnalEsilSession * ) tail -> data		830657	1					
ANR	830746	CastTarget	RAnalEsilSession *		830657	0					
ANR	830747	PtrMemberAccess	tail -> data		830657	1					
ANR	830748	Identifier	tail		830657	0					
ANR	830749	Identifier	data		830657	1					
ANR	830750	IfStatement	if ( ! before )		830657	7					
ANR	830751	Condition	! before	4436:5:130731:130737	830657	0	True				
ANR	830752	UnaryOperationExpression	! before		830657	0					
ANR	830753	UnaryOperator	!		830657	0					
ANR	830754	Identifier	before		830657	1					
ANR	830755	CompoundStatement		12:14:336:336	830657	1					
ANR	830756	ExpressionStatement	"eprintf ( ""Cannot find any previous state here\\n"" )"	4437:2:130744:130793	830657	0	True				
ANR	830757	CallExpression	"eprintf ( ""Cannot find any previous state here\\n"" )"		830657	0					
ANR	830758	Callee	eprintf		830657	0					
ANR	830759	Identifier	eprintf		830657	0					
ANR	830760	ArgumentList	"""Cannot find any previous state here\\n"""		830657	1					
ANR	830761	Argument	"""Cannot find any previous state here\\n"""		830657	0					
ANR	830762	PrimaryExpression	"""Cannot find any previous state here\\n"""		830657	0					
ANR	830763	ReturnStatement	return 0 ;	4438:2:130797:130805	830657	1	True				
ANR	830764	PrimaryExpression	0		830657	0					
ANR	830765	ExpressionStatement	"eprintf ( ""NOTE: step back in esil is setting an initial state and stepping into pc is the same.\\n"" )"	4440:1:130811:130910	830657	8	True				
ANR	830766	CallExpression	"eprintf ( ""NOTE: step back in esil is setting an initial state and stepping into pc is the same.\\n"" )"		830657	0					
ANR	830767	Callee	eprintf		830657	0					
ANR	830768	Identifier	eprintf		830657	0					
ANR	830769	ArgumentList	"""NOTE: step back in esil is setting an initial state and stepping into pc is the same.\\n"""		830657	1					
ANR	830770	Argument	"""NOTE: step back in esil is setting an initial state and stepping into pc is the same.\\n"""		830657	0					
ANR	830771	PrimaryExpression	"""NOTE: step back in esil is setting an initial state and stepping into pc is the same.\\n"""		830657	0					
ANR	830772	ExpressionStatement	"eprintf ( ""NOTE: this is extremely wrong and poorly efficient. so don't use this feature unless\\n"" )"	4441:1:130913:131011	830657	9	True				
ANR	830773	CallExpression	"eprintf ( ""NOTE: this is extremely wrong and poorly efficient. so don't use this feature unless\\n"" )"		830657	0					
ANR	830774	Callee	eprintf		830657	0					
ANR	830775	Identifier	eprintf		830657	0					
ANR	830776	ArgumentList	"""NOTE: this is extremely wrong and poorly efficient. so don't use this feature unless\\n"""		830657	1					
ANR	830777	Argument	"""NOTE: this is extremely wrong and poorly efficient. so don't use this feature unless\\n"""		830657	0					
ANR	830778	PrimaryExpression	"""NOTE: this is extremely wrong and poorly efficient. so don't use this feature unless\\n"""		830657	0					
ANR	830779	ExpressionStatement	"eprintf ( ""NOTE: you are going to fix it by making it consistent with dts, which is also broken as hell\\n"" )"	4442:1:131014:131120	830657	10	True				
ANR	830780	CallExpression	"eprintf ( ""NOTE: you are going to fix it by making it consistent with dts, which is also broken as hell\\n"" )"		830657	0					
ANR	830781	Callee	eprintf		830657	0					
ANR	830782	Identifier	eprintf		830657	0					
ANR	830783	ArgumentList	"""NOTE: you are going to fix it by making it consistent with dts, which is also broken as hell\\n"""		830657	1					
ANR	830784	Argument	"""NOTE: you are going to fix it by making it consistent with dts, which is also broken as hell\\n"""		830657	0					
ANR	830785	PrimaryExpression	"""NOTE: you are going to fix it by making it consistent with dts, which is also broken as hell\\n"""		830657	0					
ANR	830786	Statement	eprintf	4443:1:131123:131129	830657	11	True				
ANR	830787	Statement	(	4443:9:131131:131131	830657	12	True				
ANR	830788	Statement	"""Execute until 0x%08"""	4443:10:131132:131152	830657	13	True				
ANR	830789	Statement	PFMT64x	4443:31:131153:131159	830657	14	True				
ANR	830790	Statement	"""\\n"""	4443:38:131160:131163	830657	15	True				
ANR	830791	Statement	","	4443:42:131164:131164	830657	16	True				
ANR	830792	Statement	end	4443:44:131166:131168	830657	17	True				
ANR	830793	Statement	)	4443:47:131169:131169	830657	18	True				
ANR	830794	ExpressionStatement		4443:48:131170:131170	830657	19	True				
ANR	830795	ExpressionStatement	"r_anal_esil_session_set ( esil , before )"	4444:1:131173:131211	830657	20	True				
ANR	830796	CallExpression	"r_anal_esil_session_set ( esil , before )"		830657	0					
ANR	830797	Callee	r_anal_esil_session_set		830657	0					
ANR	830798	Identifier	r_anal_esil_session_set		830657	0					
ANR	830799	ArgumentList	esil		830657	1					
ANR	830800	Argument	esil		830657	0					
ANR	830801	Identifier	esil		830657	0					
ANR	830802	Argument	before		830657	1					
ANR	830803	Identifier	before		830657	0					
ANR	830804	ExpressionStatement	"r_core_esil_step ( core , end , NULL , & prev , false )"	4445:1:131214:131262	830657	21	True				
ANR	830805	CallExpression	"r_core_esil_step ( core , end , NULL , & prev , false )"		830657	0					
ANR	830806	Callee	r_core_esil_step		830657	0					
ANR	830807	Identifier	r_core_esil_step		830657	0					
ANR	830808	ArgumentList	core		830657	1					
ANR	830809	Argument	core		830657	0					
ANR	830810	Identifier	core		830657	0					
ANR	830811	Argument	end		830657	1					
ANR	830812	Identifier	end		830657	0					
ANR	830813	Argument	NULL		830657	2					
ANR	830814	Identifier	NULL		830657	0					
ANR	830815	Argument	& prev		830657	3					
ANR	830816	UnaryOperationExpression	& prev		830657	0					
ANR	830817	UnaryOperator	&		830657	0					
ANR	830818	Identifier	prev		830657	1					
ANR	830819	Argument	false		830657	4					
ANR	830820	Identifier	false		830657	0					
ANR	830821	Statement	eprintf	4446:1:131265:131271	830657	22	True				
ANR	830822	Statement	(	4446:9:131273:131273	830657	23	True				
ANR	830823	Statement	"""Before 0x%08"""	4446:10:131274:131287	830657	24	True				
ANR	830824	Statement	PFMT64x	4446:24:131288:131294	830657	25	True				
ANR	830825	Statement	"""\\n"""	4446:31:131295:131298	830657	26	True				
ANR	830826	Statement	","	4446:35:131299:131299	830657	27	True				
ANR	830827	Statement	prev	4446:37:131301:131304	830657	28	True				
ANR	830828	Statement	)	4446:41:131305:131305	830657	29	True				
ANR	830829	ExpressionStatement		4446:42:131306:131306	830657	30	True				
ANR	830830	ExpressionStatement	"r_anal_esil_session_set ( esil , before )"	4447:1:131309:131347	830657	31	True				
ANR	830831	CallExpression	"r_anal_esil_session_set ( esil , before )"		830657	0					
ANR	830832	Callee	r_anal_esil_session_set		830657	0					
ANR	830833	Identifier	r_anal_esil_session_set		830657	0					
ANR	830834	ArgumentList	esil		830657	1					
ANR	830835	Argument	esil		830657	0					
ANR	830836	Identifier	esil		830657	0					
ANR	830837	Argument	before		830657	1					
ANR	830838	Identifier	before		830657	0					
ANR	830839	ExpressionStatement	"r_core_esil_step ( core , prev , NULL , NULL , false )"	4448:1:131350:131398	830657	32	True				
ANR	830840	CallExpression	"r_core_esil_step ( core , prev , NULL , NULL , false )"		830657	0					
ANR	830841	Callee	r_core_esil_step		830657	0					
ANR	830842	Identifier	r_core_esil_step		830657	0					
ANR	830843	ArgumentList	core		830657	1					
ANR	830844	Argument	core		830657	0					
ANR	830845	Identifier	core		830657	0					
ANR	830846	Argument	prev		830657	1					
ANR	830847	Identifier	prev		830657	0					
ANR	830848	Argument	NULL		830657	2					
ANR	830849	Identifier	NULL		830657	0					
ANR	830850	Argument	NULL		830657	3					
ANR	830851	Identifier	NULL		830657	0					
ANR	830852	Argument	false		830657	4					
ANR	830853	Identifier	false		830657	0					
ANR	830854	ReturnStatement	return 1 ;	4449:1:131401:131409	830657	33	True				
ANR	830855	PrimaryExpression	1		830657	0					
ANR	830856	ReturnType	R_API int		830657	1					
ANR	830857	Identifier	r_core_esil_step_back		830657	2					
ANR	830858	ParameterList	RCore * core		830657	3					
ANR	830859	Parameter	RCore * core	4425:32:130390:130400	830657	0	True				
ANR	830860	ParameterType	RCore *		830657	0					
ANR	830861	Identifier	core		830657	1					
ANR	830862	CFGEntryNode	ENTRY		830657		True				
ANR	830863	CFGExitNode	EXIT		830657		True				
ANR	830864	Symbol	core -> anal -> reg		830657						
ANR	830865	Symbol	* tail		830657						
ANR	830866	Symbol	& prev		830657						
ANR	830867	Symbol	NULL		830657						
ANR	830868	Symbol	R_REG_NAME_PC		830657						
ANR	830869	Symbol	before		830657						
ANR	830870	Symbol	tail		830657						
ANR	830871	Symbol	r_list_tail		830657						
ANR	830872	Symbol	prev		830657						
ANR	830873	Symbol	esil -> sessions		830657						
ANR	830874	Symbol	* core		830657						
ANR	830875	Symbol	tail -> data		830657						
ANR	830876	Symbol	false		830657						
ANR	830877	Symbol	core -> anal		830657						
ANR	830878	Symbol	core		830657						
ANR	830879	Symbol	* core -> anal		830657						
ANR	830880	Symbol	r_reg_get_name		830657						
ANR	830881	Symbol	name		830657						
ANR	830882	Symbol	* esil		830657						
ANR	830883	Symbol	end		830657						
ANR	830884	Symbol	r_reg_getv		830657						
ANR	830885	Symbol	core -> anal -> esil		830657						
ANR	830886	Symbol	esil		830657						
ANR	830887	Symbol	* * core		830657						
ANR	830888	Function	cmd_address_info	4452:0:131414:133470							
ANR	830889	FunctionDef	"cmd_address_info (RCore * core , const char * addrstr , int fmt)"		830888	0					
ANR	830890	CompoundStatement		4452:72:131486:133470	830888	0					
ANR	830891	IdentifierDeclStatement	"ut64 addr , type ;"	4453:1:131489:131504	830888	0	True				
ANR	830892	IdentifierDecl	addr		830888	0					
ANR	830893	IdentifierDeclType	ut64		830888	0					
ANR	830894	Identifier	addr		830888	1					
ANR	830895	IdentifierDecl	type		830888	1					
ANR	830896	IdentifierDeclType	ut64		830888	0					
ANR	830897	Identifier	type		830888	1					
ANR	830898	IfStatement	if ( ! addrstr || ! * addrstr )		830888	1					
ANR	830899	Condition	! addrstr || ! * addrstr	4454:5:131511:131531	830888	0	True				
ANR	830900	OrExpression	! addrstr || ! * addrstr		830888	0		||			
ANR	830901	UnaryOperationExpression	! addrstr		830888	0					
ANR	830902	UnaryOperator	!		830888	0					
ANR	830903	Identifier	addrstr		830888	1					
ANR	830904	UnaryOperationExpression	! * addrstr		830888	1					
ANR	830905	UnaryOperator	!		830888	0					
ANR	830906	UnaryOperationExpression	* addrstr		830888	1					
ANR	830907	UnaryOperator	*		830888	0					
ANR	830908	Identifier	addrstr		830888	1					
ANR	830909	CompoundStatement		3:28:47:47	830888	1					
ANR	830910	ExpressionStatement	addr = core -> offset	4455:2:131538:131557	830888	0	True				
ANR	830911	AssignmentExpression	addr = core -> offset		830888	0		=			
ANR	830912	Identifier	addr		830888	0					
ANR	830913	PtrMemberAccess	core -> offset		830888	1					
ANR	830914	Identifier	core		830888	0					
ANR	830915	Identifier	offset		830888	1					
ANR	830916	ElseStatement	else		830888	0					
ANR	830917	CompoundStatement		5:8:80:80	830888	0					
ANR	830918	ExpressionStatement	"addr = r_num_math ( core -> num , addrstr )"	4457:2:131571:131609	830888	0	True				
ANR	830919	AssignmentExpression	"addr = r_num_math ( core -> num , addrstr )"		830888	0		=			
ANR	830920	Identifier	addr		830888	0					
ANR	830921	CallExpression	"r_num_math ( core -> num , addrstr )"		830888	1					
ANR	830922	Callee	r_num_math		830888	0					
ANR	830923	Identifier	r_num_math		830888	0					
ANR	830924	ArgumentList	core -> num		830888	1					
ANR	830925	Argument	core -> num		830888	0					
ANR	830926	PtrMemberAccess	core -> num		830888	0					
ANR	830927	Identifier	core		830888	0					
ANR	830928	Identifier	num		830888	1					
ANR	830929	Argument	addrstr		830888	1					
ANR	830930	Identifier	addrstr		830888	0					
ANR	830931	ExpressionStatement	"type = r_core_anal_address ( core , addr )"	4459:1:131615:131654	830888	2	True				
ANR	830932	AssignmentExpression	"type = r_core_anal_address ( core , addr )"		830888	0		=			
ANR	830933	Identifier	type		830888	0					
ANR	830934	CallExpression	"r_core_anal_address ( core , addr )"		830888	1					
ANR	830935	Callee	r_core_anal_address		830888	0					
ANR	830936	Identifier	r_core_anal_address		830888	0					
ANR	830937	ArgumentList	core		830888	1					
ANR	830938	Argument	core		830888	0					
ANR	830939	Identifier	core		830888	0					
ANR	830940	Argument	addr		830888	1					
ANR	830941	Identifier	addr		830888	0					
ANR	830942	SwitchStatement	switch ( fmt )		830888	3					
ANR	830943	Condition	fmt	4460:9:131665:131667	830888	0	True				
ANR	830944	Identifier	fmt		830888	0					
ANR	830945	CompoundStatement		9:14:183:183	830888	1					
ANR	830946	Label	case 'j' :	4461:1:131673:131681	830888	0	True				
ANR	830947	CompoundStatement		11:2:200:218	830888	1					
ANR	830948	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	4462:2:131687:131705	830888	0	True				
ANR	830949	IdentifierDecl	* pj = pj_new ( )		830888	0					
ANR	830950	IdentifierDeclType	PJ *		830888	0					
ANR	830951	Identifier	pj		830888	1					
ANR	830952	AssignmentExpression	* pj = pj_new ( )		830888	2		=			
ANR	830953	Identifier	pj		830888	0					
ANR	830954	CallExpression	pj_new ( )		830888	1					
ANR	830955	Callee	pj_new		830888	0					
ANR	830956	Identifier	pj_new		830888	0					
ANR	830957	ArgumentList			830888	1					
ANR	830958	IfStatement	if ( ! pj )		830888	1					
ANR	830959	Condition	! pj	4463:6:131713:131715	830888	0	True				
ANR	830960	UnaryOperationExpression	! pj		830888	0					
ANR	830961	UnaryOperator	!		830888	0					
ANR	830962	Identifier	pj		830888	1					
ANR	830963	CompoundStatement		12:11:231:231	830888	1					
ANR	830964	ReturnStatement	return ;	4464:3:131723:131729	830888	0	True				
ANR	830965	ExpressionStatement	pj_o ( pj )	4466:2:131737:131746	830888	2	True				
ANR	830966	CallExpression	pj_o ( pj )		830888	0					
ANR	830967	Callee	pj_o		830888	0					
ANR	830968	Identifier	pj_o		830888	0					
ANR	830969	ArgumentList	pj		830888	1					
ANR	830970	Argument	pj		830888	0					
ANR	830971	Identifier	pj		830888	0					
ANR	830972	IfStatement	if ( type & R_ANAL_ADDR_TYPE_PROGRAM )		830888	3					
ANR	830973	Condition	type & R_ANAL_ADDR_TYPE_PROGRAM	4467:6:131754:131784	830888	0	True				
ANR	830974	BitAndExpression	type & R_ANAL_ADDR_TYPE_PROGRAM		830888	0		&			
ANR	830975	Identifier	type		830888	0					
ANR	830976	Identifier	R_ANAL_ADDR_TYPE_PROGRAM		830888	1					
ANR	830977	ExpressionStatement	"pj_ks ( pj , ""program"" , ""true"" )"	4468:3:131790:131819	830888	1	True				
ANR	830978	CallExpression	"pj_ks ( pj , ""program"" , ""true"" )"		830888	0					
ANR	830979	Callee	pj_ks		830888	0					
ANR	830980	Identifier	pj_ks		830888	0					
ANR	830981	ArgumentList	pj		830888	1					
ANR	830982	Argument	pj		830888	0					
ANR	830983	Identifier	pj		830888	0					
ANR	830984	Argument	"""program"""		830888	1					
ANR	830985	PrimaryExpression	"""program"""		830888	0					
ANR	830986	Argument	"""true"""		830888	2					
ANR	830987	PrimaryExpression	"""true"""		830888	0					
ANR	830988	IfStatement	if ( type & R_ANAL_ADDR_TYPE_LIBRARY )		830888	4					
ANR	830989	Condition	type & R_ANAL_ADDR_TYPE_LIBRARY	4469:6:131827:131857	830888	0	True				
ANR	830990	BitAndExpression	type & R_ANAL_ADDR_TYPE_LIBRARY		830888	0		&			
ANR	830991	Identifier	type		830888	0					
ANR	830992	Identifier	R_ANAL_ADDR_TYPE_LIBRARY		830888	1					
ANR	830993	ExpressionStatement	"pj_ks ( pj , ""library"" , ""true"" )"	4470:3:131863:131892	830888	1	True				
ANR	830994	CallExpression	"pj_ks ( pj , ""library"" , ""true"" )"		830888	0					
ANR	830995	Callee	pj_ks		830888	0					
ANR	830996	Identifier	pj_ks		830888	0					
ANR	830997	ArgumentList	pj		830888	1					
ANR	830998	Argument	pj		830888	0					
ANR	830999	Identifier	pj		830888	0					
ANR	831000	Argument	"""library"""		830888	1					
ANR	831001	PrimaryExpression	"""library"""		830888	0					
ANR	831002	Argument	"""true"""		830888	2					
ANR	831003	PrimaryExpression	"""true"""		830888	0					
ANR	831004	IfStatement	if ( type & R_ANAL_ADDR_TYPE_EXEC )		830888	5					
ANR	831005	Condition	type & R_ANAL_ADDR_TYPE_EXEC	4471:6:131900:131927	830888	0	True				
ANR	831006	BitAndExpression	type & R_ANAL_ADDR_TYPE_EXEC		830888	0		&			
ANR	831007	Identifier	type		830888	0					
ANR	831008	Identifier	R_ANAL_ADDR_TYPE_EXEC		830888	1					
ANR	831009	ExpressionStatement	"pj_ks ( pj , ""exec"" , ""true"" )"	4472:3:131933:131959	830888	1	True				
ANR	831010	CallExpression	"pj_ks ( pj , ""exec"" , ""true"" )"		830888	0					
ANR	831011	Callee	pj_ks		830888	0					
ANR	831012	Identifier	pj_ks		830888	0					
ANR	831013	ArgumentList	pj		830888	1					
ANR	831014	Argument	pj		830888	0					
ANR	831015	Identifier	pj		830888	0					
ANR	831016	Argument	"""exec"""		830888	1					
ANR	831017	PrimaryExpression	"""exec"""		830888	0					
ANR	831018	Argument	"""true"""		830888	2					
ANR	831019	PrimaryExpression	"""true"""		830888	0					
ANR	831020	IfStatement	if ( type & R_ANAL_ADDR_TYPE_READ )		830888	6					
ANR	831021	Condition	type & R_ANAL_ADDR_TYPE_READ	4473:6:131967:131994	830888	0	True				
ANR	831022	BitAndExpression	type & R_ANAL_ADDR_TYPE_READ		830888	0		&			
ANR	831023	Identifier	type		830888	0					
ANR	831024	Identifier	R_ANAL_ADDR_TYPE_READ		830888	1					
ANR	831025	ExpressionStatement	"pj_ks ( pj , ""read"" , ""true"" )"	4474:3:132000:132026	830888	1	True				
ANR	831026	CallExpression	"pj_ks ( pj , ""read"" , ""true"" )"		830888	0					
ANR	831027	Callee	pj_ks		830888	0					
ANR	831028	Identifier	pj_ks		830888	0					
ANR	831029	ArgumentList	pj		830888	1					
ANR	831030	Argument	pj		830888	0					
ANR	831031	Identifier	pj		830888	0					
ANR	831032	Argument	"""read"""		830888	1					
ANR	831033	PrimaryExpression	"""read"""		830888	0					
ANR	831034	Argument	"""true"""		830888	2					
ANR	831035	PrimaryExpression	"""true"""		830888	0					
ANR	831036	IfStatement	if ( type & R_ANAL_ADDR_TYPE_WRITE )		830888	7					
ANR	831037	Condition	type & R_ANAL_ADDR_TYPE_WRITE	4475:6:132034:132062	830888	0	True				
ANR	831038	BitAndExpression	type & R_ANAL_ADDR_TYPE_WRITE		830888	0		&			
ANR	831039	Identifier	type		830888	0					
ANR	831040	Identifier	R_ANAL_ADDR_TYPE_WRITE		830888	1					
ANR	831041	ExpressionStatement	"pj_ks ( pj , ""write"" , ""true"" )"	4476:3:132068:132095	830888	1	True				
ANR	831042	CallExpression	"pj_ks ( pj , ""write"" , ""true"" )"		830888	0					
ANR	831043	Callee	pj_ks		830888	0					
ANR	831044	Identifier	pj_ks		830888	0					
ANR	831045	ArgumentList	pj		830888	1					
ANR	831046	Argument	pj		830888	0					
ANR	831047	Identifier	pj		830888	0					
ANR	831048	Argument	"""write"""		830888	1					
ANR	831049	PrimaryExpression	"""write"""		830888	0					
ANR	831050	Argument	"""true"""		830888	2					
ANR	831051	PrimaryExpression	"""true"""		830888	0					
ANR	831052	IfStatement	if ( type & R_ANAL_ADDR_TYPE_FLAG )		830888	8					
ANR	831053	Condition	type & R_ANAL_ADDR_TYPE_FLAG	4477:6:132103:132130	830888	0	True				
ANR	831054	BitAndExpression	type & R_ANAL_ADDR_TYPE_FLAG		830888	0		&			
ANR	831055	Identifier	type		830888	0					
ANR	831056	Identifier	R_ANAL_ADDR_TYPE_FLAG		830888	1					
ANR	831057	ExpressionStatement	"pj_ks ( pj , ""flag"" , ""true"" )"	4478:3:132136:132162	830888	1	True				
ANR	831058	CallExpression	"pj_ks ( pj , ""flag"" , ""true"" )"		830888	0					
ANR	831059	Callee	pj_ks		830888	0					
ANR	831060	Identifier	pj_ks		830888	0					
ANR	831061	ArgumentList	pj		830888	1					
ANR	831062	Argument	pj		830888	0					
ANR	831063	Identifier	pj		830888	0					
ANR	831064	Argument	"""flag"""		830888	1					
ANR	831065	PrimaryExpression	"""flag"""		830888	0					
ANR	831066	Argument	"""true"""		830888	2					
ANR	831067	PrimaryExpression	"""true"""		830888	0					
ANR	831068	IfStatement	if ( type & R_ANAL_ADDR_TYPE_FUNC )		830888	9					
ANR	831069	Condition	type & R_ANAL_ADDR_TYPE_FUNC	4479:6:132170:132197	830888	0	True				
ANR	831070	BitAndExpression	type & R_ANAL_ADDR_TYPE_FUNC		830888	0		&			
ANR	831071	Identifier	type		830888	0					
ANR	831072	Identifier	R_ANAL_ADDR_TYPE_FUNC		830888	1					
ANR	831073	ExpressionStatement	"pj_ks ( pj , ""func"" , ""true"" )"	4480:3:132203:132229	830888	1	True				
ANR	831074	CallExpression	"pj_ks ( pj , ""func"" , ""true"" )"		830888	0					
ANR	831075	Callee	pj_ks		830888	0					
ANR	831076	Identifier	pj_ks		830888	0					
ANR	831077	ArgumentList	pj		830888	1					
ANR	831078	Argument	pj		830888	0					
ANR	831079	Identifier	pj		830888	0					
ANR	831080	Argument	"""func"""		830888	1					
ANR	831081	PrimaryExpression	"""func"""		830888	0					
ANR	831082	Argument	"""true"""		830888	2					
ANR	831083	PrimaryExpression	"""true"""		830888	0					
ANR	831084	IfStatement	if ( type & R_ANAL_ADDR_TYPE_STACK )		830888	10					
ANR	831085	Condition	type & R_ANAL_ADDR_TYPE_STACK	4481:6:132237:132265	830888	0	True				
ANR	831086	BitAndExpression	type & R_ANAL_ADDR_TYPE_STACK		830888	0		&			
ANR	831087	Identifier	type		830888	0					
ANR	831088	Identifier	R_ANAL_ADDR_TYPE_STACK		830888	1					
ANR	831089	ExpressionStatement	"pj_ks ( pj , ""stack"" , ""true"" )"	4482:3:132271:132298	830888	1	True				
ANR	831090	CallExpression	"pj_ks ( pj , ""stack"" , ""true"" )"		830888	0					
ANR	831091	Callee	pj_ks		830888	0					
ANR	831092	Identifier	pj_ks		830888	0					
ANR	831093	ArgumentList	pj		830888	1					
ANR	831094	Argument	pj		830888	0					
ANR	831095	Identifier	pj		830888	0					
ANR	831096	Argument	"""stack"""		830888	1					
ANR	831097	PrimaryExpression	"""stack"""		830888	0					
ANR	831098	Argument	"""true"""		830888	2					
ANR	831099	PrimaryExpression	"""true"""		830888	0					
ANR	831100	IfStatement	if ( type & R_ANAL_ADDR_TYPE_HEAP )		830888	11					
ANR	831101	Condition	type & R_ANAL_ADDR_TYPE_HEAP	4483:6:132306:132333	830888	0	True				
ANR	831102	BitAndExpression	type & R_ANAL_ADDR_TYPE_HEAP		830888	0		&			
ANR	831103	Identifier	type		830888	0					
ANR	831104	Identifier	R_ANAL_ADDR_TYPE_HEAP		830888	1					
ANR	831105	ExpressionStatement	"pj_ks ( pj , ""heap"" , ""true"" )"	4484:3:132339:132365	830888	1	True				
ANR	831106	CallExpression	"pj_ks ( pj , ""heap"" , ""true"" )"		830888	0					
ANR	831107	Callee	pj_ks		830888	0					
ANR	831108	Identifier	pj_ks		830888	0					
ANR	831109	ArgumentList	pj		830888	1					
ANR	831110	Argument	pj		830888	0					
ANR	831111	Identifier	pj		830888	0					
ANR	831112	Argument	"""heap"""		830888	1					
ANR	831113	PrimaryExpression	"""heap"""		830888	0					
ANR	831114	Argument	"""true"""		830888	2					
ANR	831115	PrimaryExpression	"""true"""		830888	0					
ANR	831116	IfStatement	if ( type & R_ANAL_ADDR_TYPE_REG )		830888	12					
ANR	831117	Condition	type & R_ANAL_ADDR_TYPE_REG	4485:6:132373:132399	830888	0	True				
ANR	831118	BitAndExpression	type & R_ANAL_ADDR_TYPE_REG		830888	0		&			
ANR	831119	Identifier	type		830888	0					
ANR	831120	Identifier	R_ANAL_ADDR_TYPE_REG		830888	1					
ANR	831121	ExpressionStatement	"pj_ks ( pj , ""reg"" , ""true"" )"	4486:3:132405:132430	830888	1	True				
ANR	831122	CallExpression	"pj_ks ( pj , ""reg"" , ""true"" )"		830888	0					
ANR	831123	Callee	pj_ks		830888	0					
ANR	831124	Identifier	pj_ks		830888	0					
ANR	831125	ArgumentList	pj		830888	1					
ANR	831126	Argument	pj		830888	0					
ANR	831127	Identifier	pj		830888	0					
ANR	831128	Argument	"""reg"""		830888	1					
ANR	831129	PrimaryExpression	"""reg"""		830888	0					
ANR	831130	Argument	"""true"""		830888	2					
ANR	831131	PrimaryExpression	"""true"""		830888	0					
ANR	831132	IfStatement	if ( type & R_ANAL_ADDR_TYPE_ASCII )		830888	13					
ANR	831133	Condition	type & R_ANAL_ADDR_TYPE_ASCII	4487:6:132438:132466	830888	0	True				
ANR	831134	BitAndExpression	type & R_ANAL_ADDR_TYPE_ASCII		830888	0		&			
ANR	831135	Identifier	type		830888	0					
ANR	831136	Identifier	R_ANAL_ADDR_TYPE_ASCII		830888	1					
ANR	831137	ExpressionStatement	"pj_ks ( pj , ""ascii"" , ""true"" )"	4488:3:132472:132499	830888	1	True				
ANR	831138	CallExpression	"pj_ks ( pj , ""ascii"" , ""true"" )"		830888	0					
ANR	831139	Callee	pj_ks		830888	0					
ANR	831140	Identifier	pj_ks		830888	0					
ANR	831141	ArgumentList	pj		830888	1					
ANR	831142	Argument	pj		830888	0					
ANR	831143	Identifier	pj		830888	0					
ANR	831144	Argument	"""ascii"""		830888	1					
ANR	831145	PrimaryExpression	"""ascii"""		830888	0					
ANR	831146	Argument	"""true"""		830888	2					
ANR	831147	PrimaryExpression	"""true"""		830888	0					
ANR	831148	IfStatement	if ( type & R_ANAL_ADDR_TYPE_SEQUENCE )		830888	14					
ANR	831149	Condition	type & R_ANAL_ADDR_TYPE_SEQUENCE	4489:6:132507:132538	830888	0	True				
ANR	831150	BitAndExpression	type & R_ANAL_ADDR_TYPE_SEQUENCE		830888	0		&			
ANR	831151	Identifier	type		830888	0					
ANR	831152	Identifier	R_ANAL_ADDR_TYPE_SEQUENCE		830888	1					
ANR	831153	ExpressionStatement	"pj_ks ( pj , ""sequence"" , ""true"" )"	4490:3:132544:132574	830888	1	True				
ANR	831154	CallExpression	"pj_ks ( pj , ""sequence"" , ""true"" )"		830888	0					
ANR	831155	Callee	pj_ks		830888	0					
ANR	831156	Identifier	pj_ks		830888	0					
ANR	831157	ArgumentList	pj		830888	1					
ANR	831158	Argument	pj		830888	0					
ANR	831159	Identifier	pj		830888	0					
ANR	831160	Argument	"""sequence"""		830888	1					
ANR	831161	PrimaryExpression	"""sequence"""		830888	0					
ANR	831162	Argument	"""true"""		830888	2					
ANR	831163	PrimaryExpression	"""true"""		830888	0					
ANR	831164	ExpressionStatement	pj_end ( pj )	4491:2:132578:132589	830888	15	True				
ANR	831165	CallExpression	pj_end ( pj )		830888	0					
ANR	831166	Callee	pj_end		830888	0					
ANR	831167	Identifier	pj_end		830888	0					
ANR	831168	ArgumentList	pj		830888	1					
ANR	831169	Argument	pj		830888	0					
ANR	831170	Identifier	pj		830888	0					
ANR	831171	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	4492:2:132593:132624	830888	16	True				
ANR	831172	CallExpression	r_cons_println ( pj_string ( pj ) )		830888	0					
ANR	831173	Callee	r_cons_println		830888	0					
ANR	831174	Identifier	r_cons_println		830888	0					
ANR	831175	ArgumentList	pj_string ( pj )		830888	1					
ANR	831176	Argument	pj_string ( pj )		830888	0					
ANR	831177	CallExpression	pj_string ( pj )		830888	0					
ANR	831178	Callee	pj_string		830888	0					
ANR	831179	Identifier	pj_string		830888	0					
ANR	831180	ArgumentList	pj		830888	1					
ANR	831181	Argument	pj		830888	0					
ANR	831182	Identifier	pj		830888	0					
ANR	831183	ExpressionStatement	pj_free ( pj )	4493:2:132628:132640	830888	17	True				
ANR	831184	CallExpression	pj_free ( pj )		830888	0					
ANR	831185	Callee	pj_free		830888	0					
ANR	831186	Identifier	pj_free		830888	0					
ANR	831187	ArgumentList	pj		830888	1					
ANR	831188	Argument	pj		830888	0					
ANR	831189	Identifier	pj		830888	0					
ANR	831190	BreakStatement	break ;	4494:4:132646:132651	830888	2	True				
ANR	831191	Label	default :	4495:1:132654:132661	830888	3	True				
ANR	831192	Identifier	default		830888	0					
ANR	831193	IfStatement	if ( type & R_ANAL_ADDR_TYPE_PROGRAM )		830888	4					
ANR	831194	Condition	type & R_ANAL_ADDR_TYPE_PROGRAM	4496:6:132669:132699	830888	0	True				
ANR	831195	BitAndExpression	type & R_ANAL_ADDR_TYPE_PROGRAM		830888	0		&			
ANR	831196	Identifier	type		830888	0					
ANR	831197	Identifier	R_ANAL_ADDR_TYPE_PROGRAM		830888	1					
ANR	831198	ExpressionStatement	"r_cons_printf ( ""program\\n"" )"	4497:3:132705:132732	830888	1	True				
ANR	831199	CallExpression	"r_cons_printf ( ""program\\n"" )"		830888	0					
ANR	831200	Callee	r_cons_printf		830888	0					
ANR	831201	Identifier	r_cons_printf		830888	0					
ANR	831202	ArgumentList	"""program\\n"""		830888	1					
ANR	831203	Argument	"""program\\n"""		830888	0					
ANR	831204	PrimaryExpression	"""program\\n"""		830888	0					
ANR	831205	IfStatement	if ( type & R_ANAL_ADDR_TYPE_LIBRARY )		830888	5					
ANR	831206	Condition	type & R_ANAL_ADDR_TYPE_LIBRARY	4498:6:132740:132770	830888	0	True				
ANR	831207	BitAndExpression	type & R_ANAL_ADDR_TYPE_LIBRARY		830888	0		&			
ANR	831208	Identifier	type		830888	0					
ANR	831209	Identifier	R_ANAL_ADDR_TYPE_LIBRARY		830888	1					
ANR	831210	ExpressionStatement	"r_cons_printf ( ""library\\n"" )"	4499:3:132776:132803	830888	1	True				
ANR	831211	CallExpression	"r_cons_printf ( ""library\\n"" )"		830888	0					
ANR	831212	Callee	r_cons_printf		830888	0					
ANR	831213	Identifier	r_cons_printf		830888	0					
ANR	831214	ArgumentList	"""library\\n"""		830888	1					
ANR	831215	Argument	"""library\\n"""		830888	0					
ANR	831216	PrimaryExpression	"""library\\n"""		830888	0					
ANR	831217	IfStatement	if ( type & R_ANAL_ADDR_TYPE_EXEC )		830888	6					
ANR	831218	Condition	type & R_ANAL_ADDR_TYPE_EXEC	4500:6:132811:132838	830888	0	True				
ANR	831219	BitAndExpression	type & R_ANAL_ADDR_TYPE_EXEC		830888	0		&			
ANR	831220	Identifier	type		830888	0					
ANR	831221	Identifier	R_ANAL_ADDR_TYPE_EXEC		830888	1					
ANR	831222	ExpressionStatement	"r_cons_printf ( ""exec\\n"" )"	4501:3:132844:132868	830888	1	True				
ANR	831223	CallExpression	"r_cons_printf ( ""exec\\n"" )"		830888	0					
ANR	831224	Callee	r_cons_printf		830888	0					
ANR	831225	Identifier	r_cons_printf		830888	0					
ANR	831226	ArgumentList	"""exec\\n"""		830888	1					
ANR	831227	Argument	"""exec\\n"""		830888	0					
ANR	831228	PrimaryExpression	"""exec\\n"""		830888	0					
ANR	831229	IfStatement	if ( type & R_ANAL_ADDR_TYPE_READ )		830888	7					
ANR	831230	Condition	type & R_ANAL_ADDR_TYPE_READ	4502:6:132876:132903	830888	0	True				
ANR	831231	BitAndExpression	type & R_ANAL_ADDR_TYPE_READ		830888	0		&			
ANR	831232	Identifier	type		830888	0					
ANR	831233	Identifier	R_ANAL_ADDR_TYPE_READ		830888	1					
ANR	831234	ExpressionStatement	"r_cons_printf ( ""read\\n"" )"	4503:3:132909:132933	830888	1	True				
ANR	831235	CallExpression	"r_cons_printf ( ""read\\n"" )"		830888	0					
ANR	831236	Callee	r_cons_printf		830888	0					
ANR	831237	Identifier	r_cons_printf		830888	0					
ANR	831238	ArgumentList	"""read\\n"""		830888	1					
ANR	831239	Argument	"""read\\n"""		830888	0					
ANR	831240	PrimaryExpression	"""read\\n"""		830888	0					
ANR	831241	IfStatement	if ( type & R_ANAL_ADDR_TYPE_WRITE )		830888	8					
ANR	831242	Condition	type & R_ANAL_ADDR_TYPE_WRITE	4504:6:132941:132969	830888	0	True				
ANR	831243	BitAndExpression	type & R_ANAL_ADDR_TYPE_WRITE		830888	0		&			
ANR	831244	Identifier	type		830888	0					
ANR	831245	Identifier	R_ANAL_ADDR_TYPE_WRITE		830888	1					
ANR	831246	ExpressionStatement	"r_cons_printf ( ""write\\n"" )"	4505:3:132975:133000	830888	1	True				
ANR	831247	CallExpression	"r_cons_printf ( ""write\\n"" )"		830888	0					
ANR	831248	Callee	r_cons_printf		830888	0					
ANR	831249	Identifier	r_cons_printf		830888	0					
ANR	831250	ArgumentList	"""write\\n"""		830888	1					
ANR	831251	Argument	"""write\\n"""		830888	0					
ANR	831252	PrimaryExpression	"""write\\n"""		830888	0					
ANR	831253	IfStatement	if ( type & R_ANAL_ADDR_TYPE_FLAG )		830888	9					
ANR	831254	Condition	type & R_ANAL_ADDR_TYPE_FLAG	4506:6:133008:133035	830888	0	True				
ANR	831255	BitAndExpression	type & R_ANAL_ADDR_TYPE_FLAG		830888	0		&			
ANR	831256	Identifier	type		830888	0					
ANR	831257	Identifier	R_ANAL_ADDR_TYPE_FLAG		830888	1					
ANR	831258	ExpressionStatement	"r_cons_printf ( ""flag\\n"" )"	4507:3:133041:133065	830888	1	True				
ANR	831259	CallExpression	"r_cons_printf ( ""flag\\n"" )"		830888	0					
ANR	831260	Callee	r_cons_printf		830888	0					
ANR	831261	Identifier	r_cons_printf		830888	0					
ANR	831262	ArgumentList	"""flag\\n"""		830888	1					
ANR	831263	Argument	"""flag\\n"""		830888	0					
ANR	831264	PrimaryExpression	"""flag\\n"""		830888	0					
ANR	831265	IfStatement	if ( type & R_ANAL_ADDR_TYPE_FUNC )		830888	10					
ANR	831266	Condition	type & R_ANAL_ADDR_TYPE_FUNC	4508:6:133073:133100	830888	0	True				
ANR	831267	BitAndExpression	type & R_ANAL_ADDR_TYPE_FUNC		830888	0		&			
ANR	831268	Identifier	type		830888	0					
ANR	831269	Identifier	R_ANAL_ADDR_TYPE_FUNC		830888	1					
ANR	831270	ExpressionStatement	"r_cons_printf ( ""func\\n"" )"	4509:3:133106:133130	830888	1	True				
ANR	831271	CallExpression	"r_cons_printf ( ""func\\n"" )"		830888	0					
ANR	831272	Callee	r_cons_printf		830888	0					
ANR	831273	Identifier	r_cons_printf		830888	0					
ANR	831274	ArgumentList	"""func\\n"""		830888	1					
ANR	831275	Argument	"""func\\n"""		830888	0					
ANR	831276	PrimaryExpression	"""func\\n"""		830888	0					
ANR	831277	IfStatement	if ( type & R_ANAL_ADDR_TYPE_STACK )		830888	11					
ANR	831278	Condition	type & R_ANAL_ADDR_TYPE_STACK	4510:6:133138:133166	830888	0	True				
ANR	831279	BitAndExpression	type & R_ANAL_ADDR_TYPE_STACK		830888	0		&			
ANR	831280	Identifier	type		830888	0					
ANR	831281	Identifier	R_ANAL_ADDR_TYPE_STACK		830888	1					
ANR	831282	ExpressionStatement	"r_cons_printf ( ""stack\\n"" )"	4511:3:133172:133197	830888	1	True				
ANR	831283	CallExpression	"r_cons_printf ( ""stack\\n"" )"		830888	0					
ANR	831284	Callee	r_cons_printf		830888	0					
ANR	831285	Identifier	r_cons_printf		830888	0					
ANR	831286	ArgumentList	"""stack\\n"""		830888	1					
ANR	831287	Argument	"""stack\\n"""		830888	0					
ANR	831288	PrimaryExpression	"""stack\\n"""		830888	0					
ANR	831289	IfStatement	if ( type & R_ANAL_ADDR_TYPE_HEAP )		830888	12					
ANR	831290	Condition	type & R_ANAL_ADDR_TYPE_HEAP	4512:6:133205:133232	830888	0	True				
ANR	831291	BitAndExpression	type & R_ANAL_ADDR_TYPE_HEAP		830888	0		&			
ANR	831292	Identifier	type		830888	0					
ANR	831293	Identifier	R_ANAL_ADDR_TYPE_HEAP		830888	1					
ANR	831294	ExpressionStatement	"r_cons_printf ( ""heap\\n"" )"	4513:3:133238:133262	830888	1	True				
ANR	831295	CallExpression	"r_cons_printf ( ""heap\\n"" )"		830888	0					
ANR	831296	Callee	r_cons_printf		830888	0					
ANR	831297	Identifier	r_cons_printf		830888	0					
ANR	831298	ArgumentList	"""heap\\n"""		830888	1					
ANR	831299	Argument	"""heap\\n"""		830888	0					
ANR	831300	PrimaryExpression	"""heap\\n"""		830888	0					
ANR	831301	IfStatement	if ( type & R_ANAL_ADDR_TYPE_REG )		830888	13					
ANR	831302	Condition	type & R_ANAL_ADDR_TYPE_REG	4514:6:133270:133296	830888	0	True				
ANR	831303	BitAndExpression	type & R_ANAL_ADDR_TYPE_REG		830888	0		&			
ANR	831304	Identifier	type		830888	0					
ANR	831305	Identifier	R_ANAL_ADDR_TYPE_REG		830888	1					
ANR	831306	ExpressionStatement	"r_cons_printf ( ""reg\\n"" )"	4515:3:133302:133325	830888	1	True				
ANR	831307	CallExpression	"r_cons_printf ( ""reg\\n"" )"		830888	0					
ANR	831308	Callee	r_cons_printf		830888	0					
ANR	831309	Identifier	r_cons_printf		830888	0					
ANR	831310	ArgumentList	"""reg\\n"""		830888	1					
ANR	831311	Argument	"""reg\\n"""		830888	0					
ANR	831312	PrimaryExpression	"""reg\\n"""		830888	0					
ANR	831313	IfStatement	if ( type & R_ANAL_ADDR_TYPE_ASCII )		830888	14					
ANR	831314	Condition	type & R_ANAL_ADDR_TYPE_ASCII	4516:6:133333:133361	830888	0	True				
ANR	831315	BitAndExpression	type & R_ANAL_ADDR_TYPE_ASCII		830888	0		&			
ANR	831316	Identifier	type		830888	0					
ANR	831317	Identifier	R_ANAL_ADDR_TYPE_ASCII		830888	1					
ANR	831318	ExpressionStatement	"r_cons_printf ( ""ascii\\n"" )"	4517:3:133367:133392	830888	1	True				
ANR	831319	CallExpression	"r_cons_printf ( ""ascii\\n"" )"		830888	0					
ANR	831320	Callee	r_cons_printf		830888	0					
ANR	831321	Identifier	r_cons_printf		830888	0					
ANR	831322	ArgumentList	"""ascii\\n"""		830888	1					
ANR	831323	Argument	"""ascii\\n"""		830888	0					
ANR	831324	PrimaryExpression	"""ascii\\n"""		830888	0					
ANR	831325	IfStatement	if ( type & R_ANAL_ADDR_TYPE_SEQUENCE )		830888	15					
ANR	831326	Condition	type & R_ANAL_ADDR_TYPE_SEQUENCE	4518:6:133400:133431	830888	0	True				
ANR	831327	BitAndExpression	type & R_ANAL_ADDR_TYPE_SEQUENCE		830888	0		&			
ANR	831328	Identifier	type		830888	0					
ANR	831329	Identifier	R_ANAL_ADDR_TYPE_SEQUENCE		830888	1					
ANR	831330	ExpressionStatement	"r_cons_printf ( ""sequence\\n"" )"	4519:3:133437:133465	830888	1	True				
ANR	831331	CallExpression	"r_cons_printf ( ""sequence\\n"" )"		830888	0					
ANR	831332	Callee	r_cons_printf		830888	0					
ANR	831333	Identifier	r_cons_printf		830888	0					
ANR	831334	ArgumentList	"""sequence\\n"""		830888	1					
ANR	831335	Argument	"""sequence\\n"""		830888	0					
ANR	831336	PrimaryExpression	"""sequence\\n"""		830888	0					
ANR	831337	ReturnType	static void		830888	1					
ANR	831338	Identifier	cmd_address_info		830888	2					
ANR	831339	ParameterList	"RCore * core , const char * addrstr , int fmt"		830888	3					
ANR	831340	Parameter	RCore * core	4452:29:131443:131453	830888	0	True				
ANR	831341	ParameterType	RCore *		830888	0					
ANR	831342	Identifier	core		830888	1					
ANR	831343	Parameter	const char * addrstr	4452:42:131456:131474	830888	1	True				
ANR	831344	ParameterType	const char *		830888	0					
ANR	831345	Identifier	addrstr		830888	1					
ANR	831346	Parameter	int fmt	4452:63:131477:131483	830888	2	True				
ANR	831347	ParameterType	int		830888	0					
ANR	831348	Identifier	fmt		830888	1					
ANR	831349	CFGEntryNode	ENTRY		830888		True				
ANR	831350	CFGExitNode	EXIT		830888		True				
ANR	831351	Symbol	R_ANAL_ADDR_TYPE_REG		830888						
ANR	831352	Symbol	pj_string		830888						
ANR	831353	Symbol	R_ANAL_ADDR_TYPE_LIBRARY		830888						
ANR	831354	Symbol	* core		830888						
ANR	831355	Symbol	core -> offset		830888						
ANR	831356	Symbol	fmt		830888						
ANR	831357	Symbol	type		830888						
ANR	831358	Symbol	R_ANAL_ADDR_TYPE_FUNC		830888						
ANR	831359	Symbol	r_num_math		830888						
ANR	831360	Symbol	R_ANAL_ADDR_TYPE_SEQUENCE		830888						
ANR	831361	Symbol	r_core_anal_address		830888						
ANR	831362	Symbol	addr		830888						
ANR	831363	Symbol	core -> num		830888						
ANR	831364	Symbol	R_ANAL_ADDR_TYPE_STACK		830888						
ANR	831365	Symbol	* addrstr		830888						
ANR	831366	Symbol	R_ANAL_ADDR_TYPE_HEAP		830888						
ANR	831367	Symbol	R_ANAL_ADDR_TYPE_FLAG		830888						
ANR	831368	Symbol	R_ANAL_ADDR_TYPE_PROGRAM		830888						
ANR	831369	Symbol	R_ANAL_ADDR_TYPE_WRITE		830888						
ANR	831370	Symbol	R_ANAL_ADDR_TYPE_ASCII		830888						
ANR	831371	Symbol	core		830888						
ANR	831372	Symbol	R_ANAL_ADDR_TYPE_EXEC		830888						
ANR	831373	Symbol	addrstr		830888						
ANR	831374	Symbol	pj_new		830888						
ANR	831375	Symbol	pj		830888						
ANR	831376	Symbol	R_ANAL_ADDR_TYPE_READ		830888						
ANR	831377	Function	cmd_anal_info	4523:0:133473:134423							
ANR	831378	FunctionDef	"cmd_anal_info (RCore * core , const char * input)"		831377	0					
ANR	831379	CompoundStatement		4523:58:133531:134423	831377	0					
ANR	831380	SwitchStatement	switch ( input [ 0 ] )		831377	0					
ANR	831381	Condition	input [ 0 ]	4524:9:133542:133549	831377	0	True				
ANR	831382	ArrayIndexing	input [ 0 ]		831377	0					
ANR	831383	Identifier	input		831377	0					
ANR	831384	PrimaryExpression	0		831377	1					
ANR	831385	CompoundStatement		2:19:20:20	831377	1					
ANR	831386	Label	case '?' :	4525:1:133555:133563	831377	0	True				
ANR	831387	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ai )"	4526:2:133567:133602	831377	1	True				
ANR	831388	CallExpression	"r_core_cmd_help ( core , help_msg_ai )"		831377	0					
ANR	831389	Callee	r_core_cmd_help		831377	0					
ANR	831390	Identifier	r_core_cmd_help		831377	0					
ANR	831391	ArgumentList	core		831377	1					
ANR	831392	Argument	core		831377	0					
ANR	831393	Identifier	core		831377	0					
ANR	831394	Argument	help_msg_ai		831377	1					
ANR	831395	Identifier	help_msg_ai		831377	0					
ANR	831396	BreakStatement	break ;	4527:2:133606:133611	831377	2	True				
ANR	831397	Label	case ' ' :	4528:1:133614:133622	831377	3	True				
ANR	831398	ExpressionStatement	"cmd_address_info ( core , input , 0 )"	4529:2:133626:133659	831377	4	True				
ANR	831399	CallExpression	"cmd_address_info ( core , input , 0 )"		831377	0					
ANR	831400	Callee	cmd_address_info		831377	0					
ANR	831401	Identifier	cmd_address_info		831377	0					
ANR	831402	ArgumentList	core		831377	1					
ANR	831403	Argument	core		831377	0					
ANR	831404	Identifier	core		831377	0					
ANR	831405	Argument	input		831377	1					
ANR	831406	Identifier	input		831377	0					
ANR	831407	Argument	0		831377	2					
ANR	831408	PrimaryExpression	0		831377	0					
ANR	831409	BreakStatement	break ;	4530:2:133663:133668	831377	5	True				
ANR	831410	Label	case 'i' :	4531:1:133671:133679	831377	6	True				
ANR	831411	IfStatement	if ( input [ 1 ] )		831377	7					
ANR	831412	Condition	input [ 1 ]	4533:6:133716:133723	831377	0	True				
ANR	831413	ArrayIndexing	input [ 1 ]		831377	0					
ANR	831414	Identifier	input		831377	0					
ANR	831415	PrimaryExpression	1		831377	1					
ANR	831416	CompoundStatement		11:16:194:194	831377	1					
ANR	831417	IfStatement	if ( input [ 1 ] == ' ' )		831377	0					
ANR	831418	Condition	input [ 1 ] == ' '	4534:7:133735:133749	831377	0	True				
ANR	831419	EqualityExpression	input [ 1 ] == ' '		831377	0		==			
ANR	831420	ArrayIndexing	input [ 1 ]		831377	0					
ANR	831421	Identifier	input		831377	0					
ANR	831422	PrimaryExpression	1		831377	1					
ANR	831423	PrimaryExpression	' '		831377	1					
ANR	831424	CompoundStatement		12:24:220:220	831377	1					
ANR	831425	IfStatement	if ( ! core -> anal -> imports )		831377	0					
ANR	831426	Condition	! core -> anal -> imports	4535:8:133762:133781	831377	0	True				
ANR	831427	UnaryOperationExpression	! core -> anal -> imports		831377	0					
ANR	831428	UnaryOperator	!		831377	0					
ANR	831429	PtrMemberAccess	core -> anal -> imports		831377	1					
ANR	831430	PtrMemberAccess	core -> anal		831377	0					
ANR	831431	Identifier	core		831377	0					
ANR	831432	Identifier	anal		831377	1					
ANR	831433	Identifier	imports		831377	1					
ANR	831434	CompoundStatement		13:30:252:252	831377	1					
ANR	831435	ExpressionStatement	core -> anal -> imports = r_list_newf ( ( RListFree ) free )	4536:5:133791:133842	831377	0	True				
ANR	831436	AssignmentExpression	core -> anal -> imports = r_list_newf ( ( RListFree ) free )		831377	0		=			
ANR	831437	PtrMemberAccess	core -> anal -> imports		831377	0					
ANR	831438	PtrMemberAccess	core -> anal		831377	0					
ANR	831439	Identifier	core		831377	0					
ANR	831440	Identifier	anal		831377	1					
ANR	831441	Identifier	imports		831377	1					
ANR	831442	CallExpression	r_list_newf ( ( RListFree ) free )		831377	1					
ANR	831443	Callee	r_list_newf		831377	0					
ANR	831444	Identifier	r_list_newf		831377	0					
ANR	831445	ArgumentList	( RListFree ) free		831377	1					
ANR	831446	Argument	( RListFree ) free		831377	0					
ANR	831447	CastExpression	( RListFree ) free		831377	0					
ANR	831448	CastTarget	RListFree		831377	0					
ANR	831449	Identifier	free		831377	1					
ANR	831450	ExpressionStatement	"r_list_append ( core -> anal -> imports , r_str_trim_dup ( input + 1 ) )"	4538:4:133854:133917	831377	1	True				
ANR	831451	CallExpression	"r_list_append ( core -> anal -> imports , r_str_trim_dup ( input + 1 ) )"		831377	0					
ANR	831452	Callee	r_list_append		831377	0					
ANR	831453	Identifier	r_list_append		831377	0					
ANR	831454	ArgumentList	core -> anal -> imports		831377	1					
ANR	831455	Argument	core -> anal -> imports		831377	0					
ANR	831456	PtrMemberAccess	core -> anal -> imports		831377	0					
ANR	831457	PtrMemberAccess	core -> anal		831377	0					
ANR	831458	Identifier	core		831377	0					
ANR	831459	Identifier	anal		831377	1					
ANR	831460	Identifier	imports		831377	1					
ANR	831461	Argument	r_str_trim_dup ( input + 1 )		831377	1					
ANR	831462	CallExpression	r_str_trim_dup ( input + 1 )		831377	0					
ANR	831463	Callee	r_str_trim_dup		831377	0					
ANR	831464	Identifier	r_str_trim_dup		831377	0					
ANR	831465	ArgumentList	input + 1		831377	1					
ANR	831466	Argument	input + 1		831377	0					
ANR	831467	AdditiveExpression	input + 1		831377	0		+			
ANR	831468	Identifier	input		831377	0					
ANR	831469	PrimaryExpression	1		831377	1					
ANR	831470	ElseStatement	else		831377	0					
ANR	831471	IfStatement	if ( input [ 1 ] == '-' )		831377	0					
ANR	831472	Condition	input [ 1 ] == '-'	4539:14:133933:133947	831377	0	True				
ANR	831473	EqualityExpression	input [ 1 ] == '-'		831377	0		==			
ANR	831474	ArrayIndexing	input [ 1 ]		831377	0					
ANR	831475	Identifier	input		831377	0					
ANR	831476	PrimaryExpression	1		831377	1					
ANR	831477	PrimaryExpression	'-'		831377	1					
ANR	831478	CompoundStatement		17:31:418:418	831377	1					
ANR	831479	ExpressionStatement	r_list_free ( core -> anal -> imports )	4540:4:133956:133989	831377	0	True				
ANR	831480	CallExpression	r_list_free ( core -> anal -> imports )		831377	0					
ANR	831481	Callee	r_list_free		831377	0					
ANR	831482	Identifier	r_list_free		831377	0					
ANR	831483	ArgumentList	core -> anal -> imports		831377	1					
ANR	831484	Argument	core -> anal -> imports		831377	0					
ANR	831485	PtrMemberAccess	core -> anal -> imports		831377	0					
ANR	831486	PtrMemberAccess	core -> anal		831377	0					
ANR	831487	Identifier	core		831377	0					
ANR	831488	Identifier	anal		831377	1					
ANR	831489	Identifier	imports		831377	1					
ANR	831490	ExpressionStatement	core -> anal -> imports = NULL	4541:4:133995:134021	831377	1	True				
ANR	831491	AssignmentExpression	core -> anal -> imports = NULL		831377	0		=			
ANR	831492	PtrMemberAccess	core -> anal -> imports		831377	0					
ANR	831493	PtrMemberAccess	core -> anal		831377	0					
ANR	831494	Identifier	core		831377	0					
ANR	831495	Identifier	anal		831377	1					
ANR	831496	Identifier	imports		831377	1					
ANR	831497	Identifier	NULL		831377	1					
ANR	831498	ElseStatement	else		831377	0					
ANR	831499	CompoundStatement		20:10:501:501	831377	0					
ANR	831500	ExpressionStatement	"eprintf ( ""Usagae: aii [namespace] # see afii - imports\\n"" )"	4543:4:134039:134097	831377	0	True				
ANR	831501	CallExpression	"eprintf ( ""Usagae: aii [namespace] # see afii - imports\\n"" )"		831377	0					
ANR	831502	Callee	eprintf		831377	0					
ANR	831503	Identifier	eprintf		831377	0					
ANR	831504	ArgumentList	"""Usagae: aii [namespace] # see afii - imports\\n"""		831377	1					
ANR	831505	Argument	"""Usagae: aii [namespace] # see afii - imports\\n"""		831377	0					
ANR	831506	PrimaryExpression	"""Usagae: aii [namespace] # see afii - imports\\n"""		831377	0					
ANR	831507	ElseStatement	else		831377	0					
ANR	831508	CompoundStatement		23:9:581:581	831377	0					
ANR	831509	IfStatement	if ( core -> anal -> imports )		831377	0					
ANR	831510	Condition	core -> anal -> imports	4546:7:134122:134140	831377	0	True				
ANR	831511	PtrMemberAccess	core -> anal -> imports		831377	0					
ANR	831512	PtrMemberAccess	core -> anal		831377	0					
ANR	831513	Identifier	core		831377	0					
ANR	831514	Identifier	anal		831377	1					
ANR	831515	Identifier	imports		831377	1					
ANR	831516	CompoundStatement		26:4:632:647	831377	1					
ANR	831517	IdentifierDeclStatement	char * imp ;	4547:4:134149:134158	831377	0	True				
ANR	831518	IdentifierDecl	* imp		831377	0					
ANR	831519	IdentifierDeclType	char *		831377	0					
ANR	831520	Identifier	imp		831377	1					
ANR	831521	IdentifierDeclStatement	RListIter * iter ;	4548:4:134164:134179	831377	1	True				
ANR	831522	IdentifierDecl	* iter		831377	0					
ANR	831523	IdentifierDeclType	RListIter *		831377	0					
ANR	831524	Identifier	iter		831377	1					
ANR	831525	Statement	r_list_foreach	4549:4:134185:134198	831377	2	True				
ANR	831526	Statement	(	4549:19:134200:134200	831377	3	True				
ANR	831527	Statement	core	4549:20:134201:134204	831377	4	True				
ANR	831528	Statement	->	4549:24:134205:134206	831377	5	True				
ANR	831529	Statement	anal	4549:26:134207:134210	831377	6	True				
ANR	831530	Statement	->	4549:30:134211:134212	831377	7	True				
ANR	831531	Statement	imports	4549:32:134213:134219	831377	8	True				
ANR	831532	Statement	","	4549:39:134220:134220	831377	9	True				
ANR	831533	Statement	iter	4549:41:134222:134225	831377	10	True				
ANR	831534	Statement	","	4549:45:134226:134226	831377	11	True				
ANR	831535	Statement	imp	4549:47:134228:134230	831377	12	True				
ANR	831536	Statement	)	4549:50:134231:134231	831377	13	True				
ANR	831537	CompoundStatement		27:52:701:701	831377	14					
ANR	831538	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , imp )"	4550:5:134240:134267	831377	0	True				
ANR	831539	CallExpression	"r_cons_printf ( ""%s\\n"" , imp )"		831377	0					
ANR	831540	Callee	r_cons_printf		831377	0					
ANR	831541	Identifier	r_cons_printf		831377	0					
ANR	831542	ArgumentList	"""%s\\n"""		831377	1					
ANR	831543	Argument	"""%s\\n"""		831377	0					
ANR	831544	PrimaryExpression	"""%s\\n"""		831377	0					
ANR	831545	Argument	imp		831377	1					
ANR	831546	Identifier	imp		831377	0					
ANR	831547	BreakStatement	break ;	4554:2:134286:134291	831377	8	True				
ANR	831548	Label	case 'j' :	4555:1:134294:134302	831377	9	True				
ANR	831549	ExpressionStatement	"cmd_address_info ( core , input + 1 , 'j' )"	4556:2:134315:134354	831377	10	True				
ANR	831550	CallExpression	"cmd_address_info ( core , input + 1 , 'j' )"		831377	0					
ANR	831551	Callee	cmd_address_info		831377	0					
ANR	831552	Identifier	cmd_address_info		831377	0					
ANR	831553	ArgumentList	core		831377	1					
ANR	831554	Argument	core		831377	0					
ANR	831555	Identifier	core		831377	0					
ANR	831556	Argument	input + 1		831377	1					
ANR	831557	AdditiveExpression	input + 1		831377	0		+			
ANR	831558	Identifier	input		831377	0					
ANR	831559	PrimaryExpression	1		831377	1					
ANR	831560	Argument	'j'		831377	2					
ANR	831561	PrimaryExpression	'j'		831377	0					
ANR	831562	BreakStatement	break ;	4557:2:134358:134363	831377	11	True				
ANR	831563	Label	default :	4558:1:134366:134373	831377	12	True				
ANR	831564	Identifier	default		831377	0					
ANR	831565	ExpressionStatement	"cmd_address_info ( core , NULL , 0 )"	4559:2:134377:134409	831377	13	True				
ANR	831566	CallExpression	"cmd_address_info ( core , NULL , 0 )"		831377	0					
ANR	831567	Callee	cmd_address_info		831377	0					
ANR	831568	Identifier	cmd_address_info		831377	0					
ANR	831569	ArgumentList	core		831377	1					
ANR	831570	Argument	core		831377	0					
ANR	831571	Identifier	core		831377	0					
ANR	831572	Argument	NULL		831377	1					
ANR	831573	Identifier	NULL		831377	0					
ANR	831574	Argument	0		831377	2					
ANR	831575	PrimaryExpression	0		831377	0					
ANR	831576	BreakStatement	break ;	4560:2:134413:134418	831377	14	True				
ANR	831577	ReturnType	static void		831377	1					
ANR	831578	Identifier	cmd_anal_info		831377	2					
ANR	831579	ParameterList	"RCore * core , const char * input"		831377	3					
ANR	831580	Parameter	RCore * core	4523:26:133499:133509	831377	0	True				
ANR	831581	ParameterType	RCore *		831377	0					
ANR	831582	Identifier	core		831377	1					
ANR	831583	Parameter	const char * input	4523:39:133512:133528	831377	1	True				
ANR	831584	ParameterType	const char *		831377	0					
ANR	831585	Identifier	input		831377	1					
ANR	831586	CFGEntryNode	ENTRY		831377		True				
ANR	831587	CFGExitNode	EXIT		831377		True				
ANR	831588	Symbol	NULL		831377						
ANR	831589	Symbol	core -> anal -> imports		831377						
ANR	831590	Symbol	r_list_newf		831377						
ANR	831591	Symbol	* input		831377						
ANR	831592	Symbol	* core		831377						
ANR	831593	Symbol	iter		831377						
ANR	831594	Symbol	core -> anal		831377						
ANR	831595	Symbol	imp		831377						
ANR	831596	Symbol	r_str_trim_dup		831377						
ANR	831597	Symbol	core		831377						
ANR	831598	Symbol	input		831377						
ANR	831599	Symbol	* core -> anal		831377						
ANR	831600	Symbol	free		831377						
ANR	831601	Symbol	help_msg_ai		831377						
ANR	831602	Symbol	* * core		831377						
ANR	831603	Function	initialize_stack	4564:0:134426:135396							
ANR	831604	FunctionDef	"initialize_stack (RCore * core , ut64 addr , ut64 size)"		831603	0					
ANR	831605	CompoundStatement		4564:65:134491:135396	831603	0					
ANR	831606	IdentifierDeclStatement	"const char * mode = r_config_get ( core -> config , ""esil.fillstack"" ) ;"	4565:1:134494:134558	831603	0	True				
ANR	831607	IdentifierDecl	"* mode = r_config_get ( core -> config , ""esil.fillstack"" )"		831603	0					
ANR	831608	IdentifierDeclType	const char *		831603	0					
ANR	831609	Identifier	mode		831603	1					
ANR	831610	AssignmentExpression	"* mode = r_config_get ( core -> config , ""esil.fillstack"" )"		831603	2		=			
ANR	831611	Identifier	mode		831603	0					
ANR	831612	CallExpression	"r_config_get ( core -> config , ""esil.fillstack"" )"		831603	1					
ANR	831613	Callee	r_config_get		831603	0					
ANR	831614	Identifier	r_config_get		831603	0					
ANR	831615	ArgumentList	core -> config		831603	1					
ANR	831616	Argument	core -> config		831603	0					
ANR	831617	PtrMemberAccess	core -> config		831603	0					
ANR	831618	Identifier	core		831603	0					
ANR	831619	Identifier	config		831603	1					
ANR	831620	Argument	"""esil.fillstack"""		831603	1					
ANR	831621	PrimaryExpression	"""esil.fillstack"""		831603	0					
ANR	831622	IfStatement	if ( mode && * mode && * mode != '0' )		831603	1					
ANR	831623	Condition	mode && * mode && * mode != '0'	4566:5:134565:134593	831603	0	True				
ANR	831624	AndExpression	mode && * mode && * mode != '0'		831603	0		&&			
ANR	831625	Identifier	mode		831603	0					
ANR	831626	AndExpression	* mode && * mode != '0'		831603	1		&&			
ANR	831627	UnaryOperationExpression	* mode		831603	0					
ANR	831628	UnaryOperator	*		831603	0					
ANR	831629	Identifier	mode		831603	1					
ANR	831630	EqualityExpression	* mode != '0'		831603	1		!=			
ANR	831631	UnaryOperationExpression	* mode		831603	0					
ANR	831632	UnaryOperator	*		831603	0					
ANR	831633	Identifier	mode		831603	1					
ANR	831634	PrimaryExpression	'0'		831603	1					
ANR	831635	CompoundStatement		5:2:137:143	831603	1					
ANR	831636	IdentifierDeclStatement	const ut64 bs = 4096 * 32 ;	4567:2:134600:134625	831603	0	True				
ANR	831637	IdentifierDecl	bs = 4096 * 32		831603	0					
ANR	831638	IdentifierDeclType	const ut64		831603	0					
ANR	831639	Identifier	bs		831603	1					
ANR	831640	AssignmentExpression	bs = 4096 * 32		831603	2		=			
ANR	831641	Identifier	bs		831603	0					
ANR	831642	MultiplicativeExpression	4096 * 32		831603	1		*			
ANR	831643	PrimaryExpression	4096		831603	0					
ANR	831644	PrimaryExpression	32		831603	1					
ANR	831645	IdentifierDeclStatement	ut64 i ;	4568:2:134629:134635	831603	1	True				
ANR	831646	IdentifierDecl	i		831603	0					
ANR	831647	IdentifierDeclType	ut64		831603	0					
ANR	831648	Identifier	i		831603	1					
ANR	831649	ForStatement	for ( i = 0 ; i < size ; i += bs )		831603	2					
ANR	831650	ForInit	i = 0 ;	4569:7:134644:134649	831603	0	True				
ANR	831651	AssignmentExpression	i = 0		831603	0		=			
ANR	831652	Identifier	i		831603	0					
ANR	831653	PrimaryExpression	0		831603	1					
ANR	831654	Condition	i < size	4569:14:134651:134658	831603	1	True				
ANR	831655	RelationalExpression	i < size		831603	0		<			
ANR	831656	Identifier	i		831603	0					
ANR	831657	Identifier	size		831603	1					
ANR	831658	AssignmentExpression	i += bs	4569:24:134661:134667	831603	2	True	+=			
ANR	831659	Identifier	i		831603	0					
ANR	831660	Identifier	bs		831603	1					
ANR	831661	CompoundStatement		7:3:183:215	831603	3					
ANR	831662	IdentifierDeclStatement	"ut64 left = R_MIN ( bs , size - i ) ;"	4570:3:134675:134707	831603	0	True				
ANR	831663	IdentifierDecl	"left = R_MIN ( bs , size - i )"		831603	0					
ANR	831664	IdentifierDeclType	ut64		831603	0					
ANR	831665	Identifier	left		831603	1					
ANR	831666	AssignmentExpression	"left = R_MIN ( bs , size - i )"		831603	2		=			
ANR	831667	Identifier	left		831603	0					
ANR	831668	CallExpression	"R_MIN ( bs , size - i )"		831603	1					
ANR	831669	Callee	R_MIN		831603	0					
ANR	831670	Identifier	R_MIN		831603	0					
ANR	831671	ArgumentList	bs		831603	1					
ANR	831672	Argument	bs		831603	0					
ANR	831673	Identifier	bs		831603	0					
ANR	831674	Argument	size - i		831603	1					
ANR	831675	AdditiveExpression	size - i		831603	0		-			
ANR	831676	Identifier	size		831603	0					
ANR	831677	Identifier	i		831603	1					
ANR	831678	SwitchStatement	switch ( * mode )		831603	1					
ANR	831679	Condition	* mode	4572:11:134775:134779	831603	0	True				
ANR	831680	UnaryOperationExpression	* mode		831603	0					
ANR	831681	UnaryOperator	*		831603	0					
ANR	831682	Identifier	mode		831603	1					
ANR	831683	CompoundStatement		9:18:290:290	831603	1					
ANR	831684	Label	case 'd' :	4573:3:134787:134795	831603	0	True				
ANR	831685	Statement	r_core_cmdf	4574:4:134814:134824	831603	1	True				
ANR	831686	Statement	(	4574:16:134826:134826	831603	2	True				
ANR	831687	Statement	core	4574:17:134827:134830	831603	3	True				
ANR	831688	Statement	","	4574:21:134831:134831	831603	4	True				
ANR	831689	Statement	"""wopD %"""	4574:23:134833:134840	831603	5	True				
ANR	831690	Statement	PFMT64u	4574:31:134841:134847	831603	6	True				
ANR	831691	Statement	""" @ 0x%"""	4574:38:134848:134855	831603	7	True				
ANR	831692	Statement	PFMT64x	4574:46:134856:134862	831603	8	True				
ANR	831693	Statement	","	4574:53:134863:134863	831603	9	True				
ANR	831694	Statement	left	4574:55:134865:134868	831603	10	True				
ANR	831695	Statement	","	4574:59:134869:134869	831603	11	True				
ANR	831696	Statement	addr	4574:61:134871:134874	831603	12	True				
ANR	831697	Statement	+	4574:66:134876:134876	831603	13	True				
ANR	831698	Statement	i	4574:68:134878:134878	831603	14	True				
ANR	831699	Statement	)	4574:69:134879:134879	831603	15	True				
ANR	831700	ExpressionStatement		4574:70:134880:134880	831603	16	True				
ANR	831701	BreakStatement	break ;	4575:4:134886:134891	831603	17	True				
ANR	831702	Label	case 's' :	4576:3:134896:134904	831603	18	True				
ANR	831703	Statement	r_core_cmdf	4577:4:134919:134929	831603	19	True				
ANR	831704	Statement	(	4577:16:134931:134931	831603	20	True				
ANR	831705	Statement	core	4577:17:134932:134935	831603	21	True				
ANR	831706	Statement	","	4577:21:134936:134936	831603	22	True				
ANR	831707	Statement	"""woe 1 0xff 1 4 @ 0x%"""	4577:23:134938:134959	831603	23	True				
ANR	831708	Statement	PFMT64x	4577:45:134960:134966	831603	24	True				
ANR	831709	Statement	"""!0x%"""	4577:52:134967:134972	831603	25	True				
ANR	831710	Statement	PFMT64x	4577:58:134973:134979	831603	26	True				
ANR	831711	Statement	","	4577:65:134980:134980	831603	27	True				
ANR	831712	Statement	addr	4577:67:134982:134985	831603	28	True				
ANR	831713	Statement	+	4577:72:134987:134987	831603	29	True				
ANR	831714	Statement	i	4577:74:134989:134989	831603	30	True				
ANR	831715	Statement	","	4577:75:134990:134990	831603	31	True				
ANR	831716	Statement	left	4577:77:134992:134995	831603	32	True				
ANR	831717	Statement	)	4577:81:134996:134996	831603	33	True				
ANR	831718	ExpressionStatement		4577:82:134997:134997	831603	34	True				
ANR	831719	BreakStatement	break ;	4578:4:135003:135008	831603	35	True				
ANR	831720	Label	case 'r' :	4579:3:135013:135021	831603	36	True				
ANR	831721	Statement	r_core_cmdf	4580:4:135039:135049	831603	37	True				
ANR	831722	Statement	(	4580:16:135051:135051	831603	38	True				
ANR	831723	Statement	core	4580:17:135052:135055	831603	39	True				
ANR	831724	Statement	","	4580:21:135056:135056	831603	40	True				
ANR	831725	Statement	"""woR %"""	4580:23:135058:135064	831603	41	True				
ANR	831726	Statement	PFMT64u	4580:30:135065:135071	831603	42	True				
ANR	831727	Statement	""" @ 0x%"""	4580:37:135072:135079	831603	43	True				
ANR	831728	Statement	PFMT64x	4580:45:135080:135086	831603	44	True				
ANR	831729	Statement	"""!0x%"""	4580:52:135087:135092	831603	45	True				
ANR	831730	Statement	PFMT64x	4580:58:135093:135099	831603	46	True				
ANR	831731	Statement	","	4580:65:135100:135100	831603	47	True				
ANR	831732	Statement	left	4580:67:135102:135105	831603	48	True				
ANR	831733	Statement	","	4580:71:135106:135106	831603	49	True				
ANR	831734	Statement	addr	4580:73:135108:135111	831603	50	True				
ANR	831735	Statement	+	4580:78:135113:135113	831603	51	True				
ANR	831736	Statement	i	4580:80:135115:135115	831603	52	True				
ANR	831737	Statement	","	4580:81:135116:135116	831603	53	True				
ANR	831738	Statement	left	4580:83:135118:135121	831603	54	True				
ANR	831739	Statement	)	4580:87:135122:135122	831603	55	True				
ANR	831740	ExpressionStatement		4580:88:135123:135123	831603	56	True				
ANR	831741	BreakStatement	break ;	4581:4:135129:135134	831603	57	True				
ANR	831742	Label	case 'z' :	4582:3:135139:135147	831603	58	True				
ANR	831743	Label	case '0' :	4583:3:135162:135170	831603	59	True				
ANR	831744	Statement	r_core_cmdf	4584:4:135176:135186	831603	60	True				
ANR	831745	Statement	(	4584:16:135188:135188	831603	61	True				
ANR	831746	Statement	core	4584:17:135189:135192	831603	62	True				
ANR	831747	Statement	","	4584:21:135193:135193	831603	63	True				
ANR	831748	Statement	"""wow 00 @ 0x%"""	4584:23:135195:135208	831603	64	True				
ANR	831749	Statement	PFMT64x	4584:37:135209:135215	831603	65	True				
ANR	831750	Statement	"""!0x%"""	4584:44:135216:135221	831603	66	True				
ANR	831751	Statement	PFMT64x	4584:50:135222:135228	831603	67	True				
ANR	831752	Statement	","	4584:57:135229:135229	831603	68	True				
ANR	831753	Statement	addr	4584:59:135231:135234	831603	69	True				
ANR	831754	Statement	+	4584:64:135236:135236	831603	70	True				
ANR	831755	Statement	i	4584:66:135238:135238	831603	71	True				
ANR	831756	Statement	","	4584:67:135239:135239	831603	72	True				
ANR	831757	Statement	left	4584:69:135241:135244	831603	73	True				
ANR	831758	Statement	)	4584:73:135245:135245	831603	74	True				
ANR	831759	ExpressionStatement		4584:74:135246:135246	831603	75	True				
ANR	831760	BreakStatement	break ;	4585:4:135252:135257	831603	76	True				
ANR	831761	ReturnType	static void		831603	1					
ANR	831762	Identifier	initialize_stack		831603	2					
ANR	831763	ParameterList	"RCore * core , ut64 addr , ut64 size"		831603	3					
ANR	831764	Parameter	RCore * core	4564:30:134456:134466	831603	0	True				
ANR	831765	ParameterType	RCore *		831603	0					
ANR	831766	Identifier	core		831603	1					
ANR	831767	Parameter	ut64 addr	4564:43:134469:134477	831603	1	True				
ANR	831768	ParameterType	ut64		831603	0					
ANR	831769	Identifier	addr		831603	1					
ANR	831770	Parameter	ut64 size	4564:54:134480:134488	831603	2	True				
ANR	831771	ParameterType	ut64		831603	0					
ANR	831772	Identifier	size		831603	1					
ANR	831773	CFGEntryNode	ENTRY		831603		True				
ANR	831774	CFGExitNode	EXIT		831603		True				
ANR	831775	Symbol	mode		831603						
ANR	831776	Symbol	core -> config		831603						
ANR	831777	Symbol	core		831603						
ANR	831778	Symbol	bs		831603						
ANR	831779	Symbol	size		831603						
ANR	831780	Symbol	left		831603						
ANR	831781	Symbol	* core		831603						
ANR	831782	Symbol	r_config_get		831603						
ANR	831783	Symbol	* mode		831603						
ANR	831784	Symbol	i		831603						
ANR	831785	Symbol	R_MIN		831603						
ANR	831786	Symbol	addr		831603						
ANR	831787	Function	cmd_esil_mem	4593:0:135399:140122							
ANR	831788	FunctionDef	"cmd_esil_mem (RCore * core , const char * input)"		831787	0					
ANR	831789	CompoundStatement		4593:57:135456:140122	831787	0					
ANR	831790	IdentifierDeclStatement	RAnalEsil * esil = core -> anal -> esil ;	4594:1:135459:135493	831787	0	True				
ANR	831791	IdentifierDecl	* esil = core -> anal -> esil		831787	0					
ANR	831792	IdentifierDeclType	RAnalEsil *		831787	0					
ANR	831793	Identifier	esil		831787	1					
ANR	831794	AssignmentExpression	* esil = core -> anal -> esil		831787	2		=			
ANR	831795	Identifier	esil		831787	0					
ANR	831796	PtrMemberAccess	core -> anal -> esil		831787	1					
ANR	831797	PtrMemberAccess	core -> anal		831787	0					
ANR	831798	Identifier	core		831787	0					
ANR	831799	Identifier	anal		831787	1					
ANR	831800	Identifier	esil		831787	1					
ANR	831801	IdentifierDeclStatement	RIOMap * stack_map ;	4595:1:135496:135513	831787	1	True				
ANR	831802	IdentifierDecl	* stack_map		831787	0					
ANR	831803	IdentifierDeclType	RIOMap *		831787	0					
ANR	831804	Identifier	stack_map		831787	1					
ANR	831805	IdentifierDeclStatement	ut64 curoff = core -> offset ;	4596:1:135516:135542	831787	2	True				
ANR	831806	IdentifierDecl	curoff = core -> offset		831787	0					
ANR	831807	IdentifierDeclType	ut64		831787	0					
ANR	831808	Identifier	curoff		831787	1					
ANR	831809	AssignmentExpression	curoff = core -> offset		831787	2		=			
ANR	831810	Identifier	curoff		831787	0					
ANR	831811	PtrMemberAccess	core -> offset		831787	1					
ANR	831812	Identifier	core		831787	0					
ANR	831813	Identifier	offset		831787	1					
ANR	831814	IdentifierDeclStatement	"const char * patt = """" ;"	4597:1:135545:135566	831787	3	True				
ANR	831815	IdentifierDecl	"* patt = """""		831787	0					
ANR	831816	IdentifierDeclType	const char *		831787	0					
ANR	831817	Identifier	patt		831787	1					
ANR	831818	AssignmentExpression	"* patt = """""		831787	2		=			
ANR	831819	Identifier	patt		831787	0					
ANR	831820	PrimaryExpression	""""""		831787	1					
ANR	831821	IdentifierDeclStatement	ut64 addr = 0x100000 ;	4598:1:135569:135589	831787	4	True				
ANR	831822	IdentifierDecl	addr = 0x100000		831787	0					
ANR	831823	IdentifierDeclType	ut64		831787	0					
ANR	831824	Identifier	addr		831787	1					
ANR	831825	AssignmentExpression	addr = 0x100000		831787	2		=			
ANR	831826	Identifier	addr		831787	0					
ANR	831827	PrimaryExpression	0x100000		831787	1					
ANR	831828	IdentifierDeclStatement	ut32 size = 0xf0000 ;	4599:1:135592:135611	831787	5	True				
ANR	831829	IdentifierDecl	size = 0xf0000		831787	0					
ANR	831830	IdentifierDeclType	ut32		831787	0					
ANR	831831	Identifier	size		831787	1					
ANR	831832	AssignmentExpression	size = 0xf0000		831787	2		=			
ANR	831833	Identifier	size		831787	0					
ANR	831834	PrimaryExpression	0xf0000		831787	1					
ANR	831835	IdentifierDeclStatement	char name [ 128 ] ;	4600:1:135614:135628	831787	6	True				
ANR	831836	IdentifierDecl	name [ 128 ]		831787	0					
ANR	831837	IdentifierDeclType	char [ 128 ]		831787	0					
ANR	831838	Identifier	name		831787	1					
ANR	831839	PrimaryExpression	128		831787	2					
ANR	831840	IdentifierDeclStatement	RFlagItem * fi ;	4601:1:135631:135644	831787	7	True				
ANR	831841	IdentifierDecl	* fi		831787	0					
ANR	831842	IdentifierDeclType	RFlagItem *		831787	0					
ANR	831843	Identifier	fi		831787	1					
ANR	831844	IdentifierDeclStatement	"const char * sp , * bp , * pc ;"	4602:1:135647:135671	831787	8	True				
ANR	831845	IdentifierDecl	* sp		831787	0					
ANR	831846	IdentifierDeclType	const char *		831787	0					
ANR	831847	Identifier	sp		831787	1					
ANR	831848	IdentifierDecl	* bp		831787	1					
ANR	831849	IdentifierDeclType	const char *		831787	0					
ANR	831850	Identifier	bp		831787	1					
ANR	831851	IdentifierDecl	* pc		831787	2					
ANR	831852	IdentifierDeclType	const char *		831787	0					
ANR	831853	Identifier	pc		831787	1					
ANR	831854	IdentifierDeclStatement	char uri [ 32 ] ;	4603:1:135674:135686	831787	9	True				
ANR	831855	IdentifierDecl	uri [ 32 ]		831787	0					
ANR	831856	IdentifierDeclType	char [ 32 ]		831787	0					
ANR	831857	Identifier	uri		831787	1					
ANR	831858	PrimaryExpression	32		831787	2					
ANR	831859	IdentifierDeclStatement	char nomalloc [ 256 ] ;	4604:1:135689:135707	831787	10	True				
ANR	831860	IdentifierDecl	nomalloc [ 256 ]		831787	0					
ANR	831861	IdentifierDeclType	char [ 256 ]		831787	0					
ANR	831862	Identifier	nomalloc		831787	1					
ANR	831863	PrimaryExpression	256		831787	2					
ANR	831864	IdentifierDeclStatement	char * p ;	4605:1:135710:135717	831787	11	True				
ANR	831865	IdentifierDecl	* p		831787	0					
ANR	831866	IdentifierDeclType	char *		831787	0					
ANR	831867	Identifier	p		831787	1					
ANR	831868	IfStatement	if ( ! esil )		831787	12					
ANR	831869	Condition	! esil	4606:5:135724:135728	831787	0	True				
ANR	831870	UnaryOperationExpression	! esil		831787	0					
ANR	831871	UnaryOperator	!		831787	0					
ANR	831872	Identifier	esil		831787	1					
ANR	831873	CompoundStatement		21:2:650:721	831787	1					
ANR	831874	IdentifierDeclStatement	"int stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" ) ;"	4607:2:135735:135800	831787	0	True				
ANR	831875	IdentifierDecl	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		831787	0					
ANR	831876	IdentifierDeclType	int		831787	0					
ANR	831877	Identifier	stacksize		831787	1					
ANR	831878	AssignmentExpression	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		831787	2		=			
ANR	831879	Identifier	stacksize		831787	0					
ANR	831880	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.depth"" )"		831787	1					
ANR	831881	Callee	r_config_get_i		831787	0					
ANR	831882	Identifier	r_config_get_i		831787	0					
ANR	831883	ArgumentList	core -> config		831787	1					
ANR	831884	Argument	core -> config		831787	0					
ANR	831885	PtrMemberAccess	core -> config		831787	0					
ANR	831886	Identifier	core		831787	0					
ANR	831887	Identifier	config		831787	1					
ANR	831888	Argument	"""esil.stack.depth"""		831787	1					
ANR	831889	PrimaryExpression	"""esil.stack.depth"""		831787	0					
ANR	831890	IdentifierDeclStatement	"int iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	4608:2:135804:135861	831787	1	True				
ANR	831891	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		831787	0					
ANR	831892	IdentifierDeclType	int		831787	0					
ANR	831893	Identifier	iotrap		831787	1					
ANR	831894	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		831787	2		=			
ANR	831895	Identifier	iotrap		831787	0					
ANR	831896	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		831787	1					
ANR	831897	Callee	r_config_get_i		831787	0					
ANR	831898	Identifier	r_config_get_i		831787	0					
ANR	831899	ArgumentList	core -> config		831787	1					
ANR	831900	Argument	core -> config		831787	0					
ANR	831901	PtrMemberAccess	core -> config		831787	0					
ANR	831902	Identifier	core		831787	0					
ANR	831903	Identifier	config		831787	1					
ANR	831904	Argument	"""esil.iotrap"""		831787	1					
ANR	831905	PrimaryExpression	"""esil.iotrap"""		831787	0					
ANR	831906	IdentifierDeclStatement	"int romem = r_config_get_i ( core -> config , ""esil.romem"" ) ;"	4609:2:135865:135920	831787	2	True				
ANR	831907	IdentifierDecl	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		831787	0					
ANR	831908	IdentifierDeclType	int		831787	0					
ANR	831909	Identifier	romem		831787	1					
ANR	831910	AssignmentExpression	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		831787	2		=			
ANR	831911	Identifier	romem		831787	0					
ANR	831912	CallExpression	"r_config_get_i ( core -> config , ""esil.romem"" )"		831787	1					
ANR	831913	Callee	r_config_get_i		831787	0					
ANR	831914	Identifier	r_config_get_i		831787	0					
ANR	831915	ArgumentList	core -> config		831787	1					
ANR	831916	Argument	core -> config		831787	0					
ANR	831917	PtrMemberAccess	core -> config		831787	0					
ANR	831918	Identifier	core		831787	0					
ANR	831919	Identifier	config		831787	1					
ANR	831920	Argument	"""esil.romem"""		831787	1					
ANR	831921	PrimaryExpression	"""esil.romem"""		831787	0					
ANR	831922	IdentifierDeclStatement	"int stats = r_config_get_i ( core -> config , ""esil.stats"" ) ;"	4610:2:135924:135979	831787	3	True				
ANR	831923	IdentifierDecl	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		831787	0					
ANR	831924	IdentifierDeclType	int		831787	0					
ANR	831925	Identifier	stats		831787	1					
ANR	831926	AssignmentExpression	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		831787	2		=			
ANR	831927	Identifier	stats		831787	0					
ANR	831928	CallExpression	"r_config_get_i ( core -> config , ""esil.stats"" )"		831787	1					
ANR	831929	Callee	r_config_get_i		831787	0					
ANR	831930	Identifier	r_config_get_i		831787	0					
ANR	831931	ArgumentList	core -> config		831787	1					
ANR	831932	Argument	core -> config		831787	0					
ANR	831933	PtrMemberAccess	core -> config		831787	0					
ANR	831934	Identifier	core		831787	0					
ANR	831935	Identifier	config		831787	1					
ANR	831936	Argument	"""esil.stats"""		831787	1					
ANR	831937	PrimaryExpression	"""esil.stats"""		831787	0					
ANR	831938	IdentifierDeclStatement	"int noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" ) ;"	4611:2:135983:136040	831787	4	True				
ANR	831939	IdentifierDecl	"noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" )"		831787	0					
ANR	831940	IdentifierDeclType	int		831787	0					
ANR	831941	Identifier	noNULL		831787	1					
ANR	831942	AssignmentExpression	"noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" )"		831787	2		=			
ANR	831943	Identifier	noNULL		831787	0					
ANR	831944	CallExpression	"r_config_get_i ( core -> config , ""esil.noNULL"" )"		831787	1					
ANR	831945	Callee	r_config_get_i		831787	0					
ANR	831946	Identifier	r_config_get_i		831787	0					
ANR	831947	ArgumentList	core -> config		831787	1					
ANR	831948	Argument	core -> config		831787	0					
ANR	831949	PtrMemberAccess	core -> config		831787	0					
ANR	831950	Identifier	core		831787	0					
ANR	831951	Identifier	config		831787	1					
ANR	831952	Argument	"""esil.noNULL"""		831787	1					
ANR	831953	PrimaryExpression	"""esil.noNULL"""		831787	0					
ANR	831954	IdentifierDeclStatement	"int verbose = r_config_get_i ( core -> config , ""esil.verbose"" ) ;"	4612:2:136044:136103	831787	5	True				
ANR	831955	IdentifierDecl	"verbose = r_config_get_i ( core -> config , ""esil.verbose"" )"		831787	0					
ANR	831956	IdentifierDeclType	int		831787	0					
ANR	831957	Identifier	verbose		831787	1					
ANR	831958	AssignmentExpression	"verbose = r_config_get_i ( core -> config , ""esil.verbose"" )"		831787	2		=			
ANR	831959	Identifier	verbose		831787	0					
ANR	831960	CallExpression	"r_config_get_i ( core -> config , ""esil.verbose"" )"		831787	1					
ANR	831961	Callee	r_config_get_i		831787	0					
ANR	831962	Identifier	r_config_get_i		831787	0					
ANR	831963	ArgumentList	core -> config		831787	1					
ANR	831964	Argument	core -> config		831787	0					
ANR	831965	PtrMemberAccess	core -> config		831787	0					
ANR	831966	Identifier	core		831787	0					
ANR	831967	Identifier	config		831787	1					
ANR	831968	Argument	"""esil.verbose"""		831787	1					
ANR	831969	PrimaryExpression	"""esil.verbose"""		831787	0					
ANR	831970	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	4613:2:136107:136178	831787	6	True				
ANR	831971	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		831787	0					
ANR	831972	IdentifierDeclType	unsigned int		831787	0					
ANR	831973	Identifier	addrsize		831787	1					
ANR	831974	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		831787	2		=			
ANR	831975	Identifier	addrsize		831787	0					
ANR	831976	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		831787	1					
ANR	831977	Callee	r_config_get_i		831787	0					
ANR	831978	Identifier	r_config_get_i		831787	0					
ANR	831979	ArgumentList	core -> config		831787	1					
ANR	831980	Argument	core -> config		831787	0					
ANR	831981	PtrMemberAccess	core -> config		831787	0					
ANR	831982	Identifier	core		831787	0					
ANR	831983	Identifier	config		831787	1					
ANR	831984	Argument	"""esil.addr.size"""		831787	1					
ANR	831985	PrimaryExpression	"""esil.addr.size"""		831787	0					
ANR	831986	IfStatement	"if ( ! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) ) )"		831787	7					
ANR	831987	Condition	"! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"	4614:6:136186:136240	831787	0	True				
ANR	831988	UnaryOperationExpression	"! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"		831787	0					
ANR	831989	UnaryOperator	!		831787	0					
ANR	831990	AssignmentExpression	"esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		831787	1		=			
ANR	831991	Identifier	esil		831787	0					
ANR	831992	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		831787	1					
ANR	831993	Callee	r_anal_esil_new		831787	0					
ANR	831994	Identifier	r_anal_esil_new		831787	0					
ANR	831995	ArgumentList	stacksize		831787	1					
ANR	831996	Argument	stacksize		831787	0					
ANR	831997	Identifier	stacksize		831787	0					
ANR	831998	Argument	iotrap		831787	1					
ANR	831999	Identifier	iotrap		831787	0					
ANR	832000	Argument	addrsize		831787	2					
ANR	832001	Identifier	addrsize		831787	0					
ANR	832002	CompoundStatement		22:63:786:786	831787	1					
ANR	832003	ReturnStatement	return ;	4615:3:136248:136254	831787	0	True				
ANR	832004	ExpressionStatement	"r_anal_esil_setup ( esil , core -> anal , romem , stats , noNULL )"	4617:2:136262:136320	831787	8	True				
ANR	832005	CallExpression	"r_anal_esil_setup ( esil , core -> anal , romem , stats , noNULL )"		831787	0					
ANR	832006	Callee	r_anal_esil_setup		831787	0					
ANR	832007	Identifier	r_anal_esil_setup		831787	0					
ANR	832008	ArgumentList	esil		831787	1					
ANR	832009	Argument	esil		831787	0					
ANR	832010	Identifier	esil		831787	0					
ANR	832011	Argument	core -> anal		831787	1					
ANR	832012	PtrMemberAccess	core -> anal		831787	0					
ANR	832013	Identifier	core		831787	0					
ANR	832014	Identifier	anal		831787	1					
ANR	832015	Argument	romem		831787	2					
ANR	832016	Identifier	romem		831787	0					
ANR	832017	Argument	stats		831787	3					
ANR	832018	Identifier	stats		831787	0					
ANR	832019	Argument	noNULL		831787	4					
ANR	832020	Identifier	noNULL		831787	0					
ANR	832021	ExpressionStatement	core -> anal -> esil = esil	4618:2:136336:136359	831787	9	True				
ANR	832022	AssignmentExpression	core -> anal -> esil = esil		831787	0		=			
ANR	832023	PtrMemberAccess	core -> anal -> esil		831787	0					
ANR	832024	PtrMemberAccess	core -> anal		831787	0					
ANR	832025	Identifier	core		831787	0					
ANR	832026	Identifier	anal		831787	1					
ANR	832027	Identifier	esil		831787	1					
ANR	832028	Identifier	esil		831787	1					
ANR	832029	ExpressionStatement	esil -> verbose = verbose	4619:2:136363:136386	831787	10	True				
ANR	832030	AssignmentExpression	esil -> verbose = verbose		831787	0		=			
ANR	832031	PtrMemberAccess	esil -> verbose		831787	0					
ANR	832032	Identifier	esil		831787	0					
ANR	832033	Identifier	verbose		831787	1					
ANR	832034	Identifier	verbose		831787	1					
ANR	832035	CompoundStatement		29:3:938:998	831787	11					
ANR	832036	IdentifierDeclStatement	"const char * s = r_config_get ( core -> config , ""cmd.esil.intr"" ) ;"	4621:3:136395:136455	831787	0	True				
ANR	832037	IdentifierDecl	"* s = r_config_get ( core -> config , ""cmd.esil.intr"" )"		831787	0					
ANR	832038	IdentifierDeclType	const char *		831787	0					
ANR	832039	Identifier	s		831787	1					
ANR	832040	AssignmentExpression	"* s = r_config_get ( core -> config , ""cmd.esil.intr"" )"		831787	2		=			
ANR	832041	Identifier	s		831787	0					
ANR	832042	CallExpression	"r_config_get ( core -> config , ""cmd.esil.intr"" )"		831787	1					
ANR	832043	Callee	r_config_get		831787	0					
ANR	832044	Identifier	r_config_get		831787	0					
ANR	832045	ArgumentList	core -> config		831787	1					
ANR	832046	Argument	core -> config		831787	0					
ANR	832047	PtrMemberAccess	core -> config		831787	0					
ANR	832048	Identifier	core		831787	0					
ANR	832049	Identifier	config		831787	1					
ANR	832050	Argument	"""cmd.esil.intr"""		831787	1					
ANR	832051	PrimaryExpression	"""cmd.esil.intr"""		831787	0					
ANR	832052	IfStatement	if ( s )		831787	1					
ANR	832053	Condition	s	4622:7:136464:136464	831787	0	True				
ANR	832054	Identifier	s		831787	0					
ANR	832055	CompoundStatement		31:4:1016:1037	831787	1					
ANR	832056	IdentifierDeclStatement	char * my = strdup ( s ) ;	4623:4:136473:136494	831787	0	True				
ANR	832057	IdentifierDecl	* my = strdup ( s )		831787	0					
ANR	832058	IdentifierDeclType	char *		831787	0					
ANR	832059	Identifier	my		831787	1					
ANR	832060	AssignmentExpression	* my = strdup ( s )		831787	2		=			
ANR	832061	Identifier	my		831787	0					
ANR	832062	CallExpression	strdup ( s )		831787	1					
ANR	832063	Callee	strdup		831787	0					
ANR	832064	Identifier	strdup		831787	0					
ANR	832065	ArgumentList	s		831787	1					
ANR	832066	Argument	s		831787	0					
ANR	832067	Identifier	s		831787	0					
ANR	832068	IfStatement	if ( my )		831787	1					
ANR	832069	Condition	my	4624:8:136504:136505	831787	0	True				
ANR	832070	Identifier	my		831787	0					
ANR	832071	CompoundStatement		32:12:1051:1051	831787	1					
ANR	832072	ExpressionStatement	"r_config_set ( core -> config , ""cmd.esil.intr"" , my )"	4625:5:136515:136563	831787	0	True				
ANR	832073	CallExpression	"r_config_set ( core -> config , ""cmd.esil.intr"" , my )"		831787	0					
ANR	832074	Callee	r_config_set		831787	0					
ANR	832075	Identifier	r_config_set		831787	0					
ANR	832076	ArgumentList	core -> config		831787	1					
ANR	832077	Argument	core -> config		831787	0					
ANR	832078	PtrMemberAccess	core -> config		831787	0					
ANR	832079	Identifier	core		831787	0					
ANR	832080	Identifier	config		831787	1					
ANR	832081	Argument	"""cmd.esil.intr"""		831787	1					
ANR	832082	PrimaryExpression	"""cmd.esil.intr"""		831787	0					
ANR	832083	Argument	my		831787	2					
ANR	832084	Identifier	my		831787	0					
ANR	832085	ExpressionStatement	free ( my )	4626:5:136570:136579	831787	1	True				
ANR	832086	CallExpression	free ( my )		831787	0					
ANR	832087	Callee	free		831787	0					
ANR	832088	Identifier	free		831787	0					
ANR	832089	ArgumentList	my		831787	1					
ANR	832090	Argument	my		831787	0					
ANR	832091	Identifier	my		831787	0					
ANR	832092	IfStatement	if ( * input == '?' )		831787	13					
ANR	832093	Condition	* input == '?'	4631:5:136604:136616	831787	0	True				
ANR	832094	EqualityExpression	* input == '?'		831787	0		==			
ANR	832095	UnaryOperationExpression	* input		831787	0					
ANR	832096	UnaryOperator	*		831787	0					
ANR	832097	Identifier	input		831787	1					
ANR	832098	PrimaryExpression	'?'		831787	1					
ANR	832099	CompoundStatement		39:20:1162:1162	831787	1					
ANR	832100	ExpressionStatement	"eprintf ( ""Usage: aeim [addr] [size] [name] - initialize ESIL VM stack\\n"" )"	4632:2:136623:136696	831787	0	True				
ANR	832101	CallExpression	"eprintf ( ""Usage: aeim [addr] [size] [name] - initialize ESIL VM stack\\n"" )"		831787	0					
ANR	832102	Callee	eprintf		831787	0					
ANR	832103	Identifier	eprintf		831787	0					
ANR	832104	ArgumentList	"""Usage: aeim [addr] [size] [name] - initialize ESIL VM stack\\n"""		831787	1					
ANR	832105	Argument	"""Usage: aeim [addr] [size] [name] - initialize ESIL VM stack\\n"""		831787	0					
ANR	832106	PrimaryExpression	"""Usage: aeim [addr] [size] [name] - initialize ESIL VM stack\\n"""		831787	0					
ANR	832107	ExpressionStatement	"eprintf ( ""Default: 0x100000 0xf0000\\n"" )"	4633:2:136700:136739	831787	1	True				
ANR	832108	CallExpression	"eprintf ( ""Default: 0x100000 0xf0000\\n"" )"		831787	0					
ANR	832109	Callee	eprintf		831787	0					
ANR	832110	Identifier	eprintf		831787	0					
ANR	832111	ArgumentList	"""Default: 0x100000 0xf0000\\n"""		831787	1					
ANR	832112	Argument	"""Default: 0x100000 0xf0000\\n"""		831787	0					
ANR	832113	PrimaryExpression	"""Default: 0x100000 0xf0000\\n"""		831787	0					
ANR	832114	ExpressionStatement	"eprintf ( ""See ae? for more help\\n"" )"	4634:2:136743:136778	831787	2	True				
ANR	832115	CallExpression	"eprintf ( ""See ae? for more help\\n"" )"		831787	0					
ANR	832116	Callee	eprintf		831787	0					
ANR	832117	Identifier	eprintf		831787	0					
ANR	832118	ArgumentList	"""See ae? for more help\\n"""		831787	1					
ANR	832119	Argument	"""See ae? for more help\\n"""		831787	0					
ANR	832120	PrimaryExpression	"""See ae? for more help\\n"""		831787	0					
ANR	832121	ReturnStatement	return ;	4635:2:136782:136788	831787	3	True				
ANR	832122	IfStatement	if ( input [ 0 ] == 'p' )		831787	14					
ANR	832123	Condition	input [ 0 ] == 'p'	4638:5:136799:136813	831787	0	True				
ANR	832124	EqualityExpression	input [ 0 ] == 'p'		831787	0		==			
ANR	832125	ArrayIndexing	input [ 0 ]		831787	0					
ANR	832126	Identifier	input		831787	0					
ANR	832127	PrimaryExpression	0		831787	1					
ANR	832128	PrimaryExpression	'p'		831787	1					
ANR	832129	CompoundStatement		46:22:1359:1359	831787	1					
ANR	832130	ExpressionStatement	"fi = r_flag_get ( core -> flags , ""aeim.stack"" )"	4639:2:136820:136863	831787	0	True				
ANR	832131	AssignmentExpression	"fi = r_flag_get ( core -> flags , ""aeim.stack"" )"		831787	0		=			
ANR	832132	Identifier	fi		831787	0					
ANR	832133	CallExpression	"r_flag_get ( core -> flags , ""aeim.stack"" )"		831787	1					
ANR	832134	Callee	r_flag_get		831787	0					
ANR	832135	Identifier	r_flag_get		831787	0					
ANR	832136	ArgumentList	core -> flags		831787	1					
ANR	832137	Argument	core -> flags		831787	0					
ANR	832138	PtrMemberAccess	core -> flags		831787	0					
ANR	832139	Identifier	core		831787	0					
ANR	832140	Identifier	flags		831787	1					
ANR	832141	Argument	"""aeim.stack"""		831787	1					
ANR	832142	PrimaryExpression	"""aeim.stack"""		831787	0					
ANR	832143	IfStatement	if ( fi )		831787	1					
ANR	832144	Condition	fi	4640:6:136871:136872	831787	0	True				
ANR	832145	Identifier	fi		831787	0					
ANR	832146	CompoundStatement		48:10:1418:1418	831787	1					
ANR	832147	ExpressionStatement	addr = fi -> offset	4641:3:136880:136897	831787	0	True				
ANR	832148	AssignmentExpression	addr = fi -> offset		831787	0		=			
ANR	832149	Identifier	addr		831787	0					
ANR	832150	PtrMemberAccess	fi -> offset		831787	1					
ANR	832151	Identifier	fi		831787	0					
ANR	832152	Identifier	offset		831787	1					
ANR	832153	ExpressionStatement	size = fi -> size	4642:3:136902:136917	831787	1	True				
ANR	832154	AssignmentExpression	size = fi -> size		831787	0		=			
ANR	832155	Identifier	size		831787	0					
ANR	832156	PtrMemberAccess	fi -> size		831787	1					
ANR	832157	Identifier	fi		831787	0					
ANR	832158	Identifier	size		831787	1					
ANR	832159	ElseStatement	else		831787	0					
ANR	832160	CompoundStatement		51:9:1471:1471	831787	0					
ANR	832161	ExpressionStatement	"cmd_esil_mem ( core , """" )"	4644:3:136933:136956	831787	0	True				
ANR	832162	CallExpression	"cmd_esil_mem ( core , """" )"		831787	0					
ANR	832163	Callee	cmd_esil_mem		831787	0					
ANR	832164	Identifier	cmd_esil_mem		831787	0					
ANR	832165	ArgumentList	core		831787	1					
ANR	832166	Argument	core		831787	0					
ANR	832167	Identifier	core		831787	0					
ANR	832168	Argument	""""""		831787	1					
ANR	832169	PrimaryExpression	""""""		831787	0					
ANR	832170	IfStatement	if ( esil )		831787	2					
ANR	832171	Condition	esil	4646:6:136968:136971	831787	0	True				
ANR	832172	Identifier	esil		831787	0					
ANR	832173	CompoundStatement		54:12:1517:1517	831787	1					
ANR	832174	ExpressionStatement	esil -> stack_addr = addr	4647:3:136979:137002	831787	0	True				
ANR	832175	AssignmentExpression	esil -> stack_addr = addr		831787	0		=			
ANR	832176	PtrMemberAccess	esil -> stack_addr		831787	0					
ANR	832177	Identifier	esil		831787	0					
ANR	832178	Identifier	stack_addr		831787	1					
ANR	832179	Identifier	addr		831787	1					
ANR	832180	ExpressionStatement	esil -> stack_size = size	4648:3:137007:137030	831787	1	True				
ANR	832181	AssignmentExpression	esil -> stack_size = size		831787	0		=			
ANR	832182	PtrMemberAccess	esil -> stack_size		831787	0					
ANR	832183	Identifier	esil		831787	0					
ANR	832184	Identifier	stack_size		831787	1					
ANR	832185	Identifier	size		831787	1					
ANR	832186	ExpressionStatement	"initialize_stack ( core , addr , size )"	4650:2:137038:137073	831787	3	True				
ANR	832187	CallExpression	"initialize_stack ( core , addr , size )"		831787	0					
ANR	832188	Callee	initialize_stack		831787	0					
ANR	832189	Identifier	initialize_stack		831787	0					
ANR	832190	ArgumentList	core		831787	1					
ANR	832191	Argument	core		831787	0					
ANR	832192	Identifier	core		831787	0					
ANR	832193	Argument	addr		831787	1					
ANR	832194	Identifier	addr		831787	0					
ANR	832195	Argument	size		831787	2					
ANR	832196	Identifier	size		831787	0					
ANR	832197	ReturnStatement	return ;	4651:2:137077:137083	831787	4	True				
ANR	832198	IfStatement	if ( ! * input )		831787	15					
ANR	832199	Condition	! * input	4654:5:137094:137100	831787	0	True				
ANR	832200	UnaryOperationExpression	! * input		831787	0					
ANR	832201	UnaryOperator	!		831787	0					
ANR	832202	UnaryOperationExpression	* input		831787	1					
ANR	832203	UnaryOperator	*		831787	0					
ANR	832204	Identifier	input		831787	1					
ANR	832205	CompoundStatement		63:2:1650:1693	831787	1					
ANR	832206	IdentifierDeclStatement	"char * fi = sdb_get ( core -> sdb , ""aeim.fd"" , 0 ) ;"	4655:2:137107:137150	831787	0	True				
ANR	832207	IdentifierDecl	"* fi = sdb_get ( core -> sdb , ""aeim.fd"" , 0 )"		831787	0					
ANR	832208	IdentifierDeclType	char *		831787	0					
ANR	832209	Identifier	fi		831787	1					
ANR	832210	AssignmentExpression	"* fi = sdb_get ( core -> sdb , ""aeim.fd"" , 0 )"		831787	2		=			
ANR	832211	Identifier	fi		831787	0					
ANR	832212	CallExpression	"sdb_get ( core -> sdb , ""aeim.fd"" , 0 )"		831787	1					
ANR	832213	Callee	sdb_get		831787	0					
ANR	832214	Identifier	sdb_get		831787	0					
ANR	832215	ArgumentList	core -> sdb		831787	1					
ANR	832216	Argument	core -> sdb		831787	0					
ANR	832217	PtrMemberAccess	core -> sdb		831787	0					
ANR	832218	Identifier	core		831787	0					
ANR	832219	Identifier	sdb		831787	1					
ANR	832220	Argument	"""aeim.fd"""		831787	1					
ANR	832221	PrimaryExpression	"""aeim.fd"""		831787	0					
ANR	832222	Argument	0		831787	2					
ANR	832223	PrimaryExpression	0		831787	0					
ANR	832224	IfStatement	if ( fi )		831787	1					
ANR	832225	Condition	fi	4656:6:137158:137159	831787	0	True				
ANR	832226	Identifier	fi		831787	0					
ANR	832227	CompoundStatement		66:3:1760:1783	831787	1					
ANR	832228	IdentifierDeclStatement	ut64 fd = sdb_atoi ( fi ) ;	4658:3:137217:137240	831787	0	True				
ANR	832229	IdentifierDecl	fd = sdb_atoi ( fi )		831787	0					
ANR	832230	IdentifierDeclType	ut64		831787	0					
ANR	832231	Identifier	fd		831787	1					
ANR	832232	AssignmentExpression	fd = sdb_atoi ( fi )		831787	2		=			
ANR	832233	Identifier	fd		831787	0					
ANR	832234	CallExpression	sdb_atoi ( fi )		831787	1					
ANR	832235	Callee	sdb_atoi		831787	0					
ANR	832236	Identifier	sdb_atoi		831787	0					
ANR	832237	ArgumentList	fi		831787	1					
ANR	832238	Argument	fi		831787	0					
ANR	832239	Identifier	fi		831787	0					
ANR	832240	ExpressionStatement	"( void ) r_io_fd_close ( core -> io , fd )"	4659:3:137245:137279	831787	1	True				
ANR	832241	CastExpression	"( void ) r_io_fd_close ( core -> io , fd )"		831787	0					
ANR	832242	CastTarget	void		831787	0					
ANR	832243	CallExpression	"r_io_fd_close ( core -> io , fd )"		831787	1					
ANR	832244	Callee	r_io_fd_close		831787	0					
ANR	832245	Identifier	r_io_fd_close		831787	0					
ANR	832246	ArgumentList	core -> io		831787	1					
ANR	832247	Argument	core -> io		831787	0					
ANR	832248	PtrMemberAccess	core -> io		831787	0					
ANR	832249	Identifier	core		831787	0					
ANR	832250	Identifier	io		831787	1					
ANR	832251	Argument	fd		831787	1					
ANR	832252	Identifier	fd		831787	0					
ANR	832253	ExpressionStatement	"addr = r_config_get_i ( core -> config , ""esil.stack.addr"" )"	4662:1:137289:137344	831787	16	True				
ANR	832254	AssignmentExpression	"addr = r_config_get_i ( core -> config , ""esil.stack.addr"" )"		831787	0		=			
ANR	832255	Identifier	addr		831787	0					
ANR	832256	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.addr"" )"		831787	1					
ANR	832257	Callee	r_config_get_i		831787	0					
ANR	832258	Identifier	r_config_get_i		831787	0					
ANR	832259	ArgumentList	core -> config		831787	1					
ANR	832260	Argument	core -> config		831787	0					
ANR	832261	PtrMemberAccess	core -> config		831787	0					
ANR	832262	Identifier	core		831787	0					
ANR	832263	Identifier	config		831787	1					
ANR	832264	Argument	"""esil.stack.addr"""		831787	1					
ANR	832265	PrimaryExpression	"""esil.stack.addr"""		831787	0					
ANR	832266	ExpressionStatement	"size = r_config_get_i ( core -> config , ""esil.stack.size"" )"	4663:1:137347:137402	831787	17	True				
ANR	832267	AssignmentExpression	"size = r_config_get_i ( core -> config , ""esil.stack.size"" )"		831787	0		=			
ANR	832268	Identifier	size		831787	0					
ANR	832269	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.size"" )"		831787	1					
ANR	832270	Callee	r_config_get_i		831787	0					
ANR	832271	Identifier	r_config_get_i		831787	0					
ANR	832272	ArgumentList	core -> config		831787	1					
ANR	832273	Argument	core -> config		831787	0					
ANR	832274	PtrMemberAccess	core -> config		831787	0					
ANR	832275	Identifier	core		831787	0					
ANR	832276	Identifier	config		831787	1					
ANR	832277	Argument	"""esil.stack.size"""		831787	1					
ANR	832278	PrimaryExpression	"""esil.stack.size"""		831787	0					
ANR	832279	ExpressionStatement	"patt = r_config_get ( core -> config , ""esil.stack.pattern"" )"	4664:1:137405:137461	831787	18	True				
ANR	832280	AssignmentExpression	"patt = r_config_get ( core -> config , ""esil.stack.pattern"" )"		831787	0		=			
ANR	832281	Identifier	patt		831787	0					
ANR	832282	CallExpression	"r_config_get ( core -> config , ""esil.stack.pattern"" )"		831787	1					
ANR	832283	Callee	r_config_get		831787	0					
ANR	832284	Identifier	r_config_get		831787	0					
ANR	832285	ArgumentList	core -> config		831787	1					
ANR	832286	Argument	core -> config		831787	0					
ANR	832287	PtrMemberAccess	core -> config		831787	0					
ANR	832288	Identifier	core		831787	0					
ANR	832289	Identifier	config		831787	1					
ANR	832290	Argument	"""esil.stack.pattern"""		831787	1					
ANR	832291	PrimaryExpression	"""esil.stack.pattern"""		831787	0					
ANR	832292	ExpressionStatement	"p = strncpy ( nomalloc , input , 255 )"	4666:1:137465:137499	831787	19	True				
ANR	832293	AssignmentExpression	"p = strncpy ( nomalloc , input , 255 )"		831787	0		=			
ANR	832294	Identifier	p		831787	0					
ANR	832295	CallExpression	"strncpy ( nomalloc , input , 255 )"		831787	1					
ANR	832296	Callee	strncpy		831787	0					
ANR	832297	Identifier	strncpy		831787	0					
ANR	832298	ArgumentList	nomalloc		831787	1					
ANR	832299	Argument	nomalloc		831787	0					
ANR	832300	Identifier	nomalloc		831787	0					
ANR	832301	Argument	input		831787	1					
ANR	832302	Identifier	input		831787	0					
ANR	832303	Argument	255		831787	2					
ANR	832304	PrimaryExpression	255		831787	0					
ANR	832305	IfStatement	"if ( ( p = strchr ( p , ' ' ) ) )"		831787	20					
ANR	832306	Condition	"p = strchr ( p , ' ' )"	4667:5:137506:137526	831787	0	True				
ANR	832307	AssignmentExpression	"p = strchr ( p , ' ' )"		831787	0		=			
ANR	832308	Identifier	p		831787	0					
ANR	832309	CallExpression	"strchr ( p , ' ' )"		831787	1					
ANR	832310	Callee	strchr		831787	0					
ANR	832311	Identifier	strchr		831787	0					
ANR	832312	ArgumentList	p		831787	1					
ANR	832313	Argument	p		831787	0					
ANR	832314	Identifier	p		831787	0					
ANR	832315	Argument	' '		831787	1					
ANR	832316	PrimaryExpression	' '		831787	0					
ANR	832317	CompoundStatement		75:28:2072:2072	831787	1					
ANR	832318	WhileStatement	while ( * p == ' ' )		831787	0					
ANR	832319	Condition	* p == ' '	4668:9:137540:137548	831787	0	True				
ANR	832320	EqualityExpression	* p == ' '		831787	0		==			
ANR	832321	UnaryOperationExpression	* p		831787	0					
ANR	832322	UnaryOperator	*		831787	0					
ANR	832323	Identifier	p		831787	1					
ANR	832324	PrimaryExpression	' '		831787	1					
ANR	832325	ExpressionStatement	p ++	4668:20:137551:137554	831787	1	True				
ANR	832326	PostIncDecOperationExpression	p ++		831787	0					
ANR	832327	Identifier	p		831787	0					
ANR	832328	IncDec	++		831787	1					
ANR	832329	ExpressionStatement	"addr = r_num_math ( core -> num , p )"	4669:2:137558:137590	831787	1	True				
ANR	832330	AssignmentExpression	"addr = r_num_math ( core -> num , p )"		831787	0		=			
ANR	832331	Identifier	addr		831787	0					
ANR	832332	CallExpression	"r_num_math ( core -> num , p )"		831787	1					
ANR	832333	Callee	r_num_math		831787	0					
ANR	832334	Identifier	r_num_math		831787	0					
ANR	832335	ArgumentList	core -> num		831787	1					
ANR	832336	Argument	core -> num		831787	0					
ANR	832337	PtrMemberAccess	core -> num		831787	0					
ANR	832338	Identifier	core		831787	0					
ANR	832339	Identifier	num		831787	1					
ANR	832340	Argument	p		831787	1					
ANR	832341	Identifier	p		831787	0					
ANR	832342	IfStatement	"if ( ( p = strchr ( p , ' ' ) ) )"		831787	2					
ANR	832343	Condition	"p = strchr ( p , ' ' )"	4670:6:137598:137618	831787	0	True				
ANR	832344	AssignmentExpression	"p = strchr ( p , ' ' )"		831787	0		=			
ANR	832345	Identifier	p		831787	0					
ANR	832346	CallExpression	"strchr ( p , ' ' )"		831787	1					
ANR	832347	Callee	strchr		831787	0					
ANR	832348	Identifier	strchr		831787	0					
ANR	832349	ArgumentList	p		831787	1					
ANR	832350	Argument	p		831787	0					
ANR	832351	Identifier	p		831787	0					
ANR	832352	Argument	' '		831787	1					
ANR	832353	PrimaryExpression	' '		831787	0					
ANR	832354	CompoundStatement		78:29:2164:2164	831787	1					
ANR	832355	WhileStatement	while ( * p == ' ' )		831787	0					
ANR	832356	Condition	* p == ' '	4671:10:137633:137641	831787	0	True				
ANR	832357	EqualityExpression	* p == ' '		831787	0		==			
ANR	832358	UnaryOperationExpression	* p		831787	0					
ANR	832359	UnaryOperator	*		831787	0					
ANR	832360	Identifier	p		831787	1					
ANR	832361	PrimaryExpression	' '		831787	1					
ANR	832362	ExpressionStatement	p ++	4671:21:137644:137647	831787	1	True				
ANR	832363	PostIncDecOperationExpression	p ++		831787	0					
ANR	832364	Identifier	p		831787	0					
ANR	832365	IncDec	++		831787	1					
ANR	832366	ExpressionStatement	"size = ( ut32 ) r_num_math ( core -> num , p )"	4672:3:137652:137690	831787	1	True				
ANR	832367	AssignmentExpression	"size = ( ut32 ) r_num_math ( core -> num , p )"		831787	0		=			
ANR	832368	Identifier	size		831787	0					
ANR	832369	CastExpression	"( ut32 ) r_num_math ( core -> num , p )"		831787	1					
ANR	832370	CastTarget	ut32		831787	0					
ANR	832371	CallExpression	"r_num_math ( core -> num , p )"		831787	1					
ANR	832372	Callee	r_num_math		831787	0					
ANR	832373	Identifier	r_num_math		831787	0					
ANR	832374	ArgumentList	core -> num		831787	1					
ANR	832375	Argument	core -> num		831787	0					
ANR	832376	PtrMemberAccess	core -> num		831787	0					
ANR	832377	Identifier	core		831787	0					
ANR	832378	Identifier	num		831787	1					
ANR	832379	Argument	p		831787	1					
ANR	832380	Identifier	p		831787	0					
ANR	832381	IfStatement	if ( size < 1 )		831787	2					
ANR	832382	Condition	size < 1	4673:7:137699:137706	831787	0	True				
ANR	832383	RelationalExpression	size < 1		831787	0		<			
ANR	832384	Identifier	size		831787	0					
ANR	832385	PrimaryExpression	1		831787	1					
ANR	832386	CompoundStatement		81:17:2252:2252	831787	1					
ANR	832387	ExpressionStatement	size = 0xf0000	4674:4:137715:137729	831787	0	True				
ANR	832388	AssignmentExpression	size = 0xf0000		831787	0		=			
ANR	832389	Identifier	size		831787	0					
ANR	832390	PrimaryExpression	0xf0000		831787	1					
ANR	832391	IfStatement	"if ( ( p = strchr ( p , ' ' ) ) )"		831787	3					
ANR	832392	Condition	"p = strchr ( p , ' ' )"	4676:7:137743:137763	831787	0	True				
ANR	832393	AssignmentExpression	"p = strchr ( p , ' ' )"		831787	0		=			
ANR	832394	Identifier	p		831787	0					
ANR	832395	CallExpression	"strchr ( p , ' ' )"		831787	1					
ANR	832396	Callee	strchr		831787	0					
ANR	832397	Identifier	strchr		831787	0					
ANR	832398	ArgumentList	p		831787	1					
ANR	832399	Argument	p		831787	0					
ANR	832400	Identifier	p		831787	0					
ANR	832401	Argument	' '		831787	1					
ANR	832402	PrimaryExpression	' '		831787	0					
ANR	832403	CompoundStatement		84:30:2309:2309	831787	1					
ANR	832404	WhileStatement	while ( * p == ' ' )		831787	0					
ANR	832405	Condition	* p == ' '	4677:11:137779:137787	831787	0	True				
ANR	832406	EqualityExpression	* p == ' '		831787	0		==			
ANR	832407	UnaryOperationExpression	* p		831787	0					
ANR	832408	UnaryOperator	*		831787	0					
ANR	832409	Identifier	p		831787	1					
ANR	832410	PrimaryExpression	' '		831787	1					
ANR	832411	ExpressionStatement	p ++	4677:22:137790:137793	831787	1	True				
ANR	832412	PostIncDecOperationExpression	p ++		831787	0					
ANR	832413	Identifier	p		831787	0					
ANR	832414	IncDec	++		831787	1					
ANR	832415	ExpressionStatement	"snprintf ( name , sizeof ( name ) , ""mem.%s"" , p )"	4678:4:137799:137842	831787	1	True				
ANR	832416	CallExpression	"snprintf ( name , sizeof ( name ) , ""mem.%s"" , p )"		831787	0					
ANR	832417	Callee	snprintf		831787	0					
ANR	832418	Identifier	snprintf		831787	0					
ANR	832419	ArgumentList	name		831787	1					
ANR	832420	Argument	name		831787	0					
ANR	832421	Identifier	name		831787	0					
ANR	832422	Argument	sizeof ( name )		831787	1					
ANR	832423	SizeofExpression	sizeof ( name )		831787	0					
ANR	832424	Sizeof	sizeof		831787	0					
ANR	832425	SizeofOperand	name		831787	1					
ANR	832426	Argument	"""mem.%s"""		831787	2					
ANR	832427	PrimaryExpression	"""mem.%s"""		831787	0					
ANR	832428	Argument	p		831787	3					
ANR	832429	Identifier	p		831787	0					
ANR	832430	ElseStatement	else		831787	0					
ANR	832431	CompoundStatement		87:10:2397:2397	831787	0					
ANR	832432	Statement	snprintf	4680:4:137860:137867	831787	0	True				
ANR	832433	Statement	(	4680:13:137869:137869	831787	1	True				
ANR	832434	Statement	name	4680:14:137870:137873	831787	2	True				
ANR	832435	Statement	","	4680:18:137874:137874	831787	3	True				
ANR	832436	Statement	sizeof	4680:20:137876:137881	831787	4	True				
ANR	832437	Statement	(	4680:27:137883:137883	831787	5	True				
ANR	832438	Statement	name	4680:28:137884:137887	831787	6	True				
ANR	832439	Statement	)	4680:32:137888:137888	831787	7	True				
ANR	832440	Statement	","	4680:33:137889:137889	831787	8	True				
ANR	832441	Statement	"""mem.0x%"""	4680:35:137891:137899	831787	9	True				
ANR	832442	Statement	PFMT64x	4680:45:137901:137907	831787	10	True				
ANR	832443	Statement	"""_0x%x"""	4680:53:137909:137915	831787	11	True				
ANR	832444	Statement	","	4680:60:137916:137916	831787	12	True				
ANR	832445	Statement	addr	4680:62:137918:137921	831787	13	True				
ANR	832446	Statement	","	4680:66:137922:137922	831787	14	True				
ANR	832447	Statement	size	4680:68:137924:137927	831787	15	True				
ANR	832448	Statement	)	4680:72:137928:137928	831787	16	True				
ANR	832449	ExpressionStatement		4680:73:137929:137929	831787	17	True				
ANR	832450	ElseStatement	else		831787	0					
ANR	832451	CompoundStatement		90:9:2488:2488	831787	0					
ANR	832452	Statement	snprintf	4683:3:137950:137957	831787	0	True				
ANR	832453	Statement	(	4683:12:137959:137959	831787	1	True				
ANR	832454	Statement	name	4683:13:137960:137963	831787	2	True				
ANR	832455	Statement	","	4683:17:137964:137964	831787	3	True				
ANR	832456	Statement	sizeof	4683:19:137966:137971	831787	4	True				
ANR	832457	Statement	(	4683:26:137973:137973	831787	5	True				
ANR	832458	Statement	name	4683:27:137974:137977	831787	6	True				
ANR	832459	Statement	)	4683:31:137978:137978	831787	7	True				
ANR	832460	Statement	","	4683:32:137979:137979	831787	8	True				
ANR	832461	Statement	"""mem.0x%"""	4683:34:137981:137989	831787	9	True				
ANR	832462	Statement	PFMT64x	4683:44:137991:137997	831787	10	True				
ANR	832463	Statement	"""_0x%x"""	4683:52:137999:138005	831787	11	True				
ANR	832464	Statement	","	4683:59:138006:138006	831787	12	True				
ANR	832465	Statement	addr	4683:61:138008:138011	831787	13	True				
ANR	832466	Statement	","	4683:65:138012:138012	831787	14	True				
ANR	832467	Statement	size	4683:67:138014:138017	831787	15	True				
ANR	832468	Statement	)	4683:71:138018:138018	831787	16	True				
ANR	832469	ExpressionStatement		4683:72:138019:138019	831787	17	True				
ANR	832470	ElseStatement	else		831787	0					
ANR	832471	CompoundStatement		93:8:2576:2576	831787	0					
ANR	832472	Statement	snprintf	4686:2:138037:138044	831787	0	True				
ANR	832473	Statement	(	4686:11:138046:138046	831787	1	True				
ANR	832474	Statement	name	4686:12:138047:138050	831787	2	True				
ANR	832475	Statement	","	4686:16:138051:138051	831787	3	True				
ANR	832476	Statement	sizeof	4686:18:138053:138058	831787	4	True				
ANR	832477	Statement	(	4686:25:138060:138060	831787	5	True				
ANR	832478	Statement	name	4686:26:138061:138064	831787	6	True				
ANR	832479	Statement	)	4686:30:138065:138065	831787	7	True				
ANR	832480	Statement	","	4686:31:138066:138066	831787	8	True				
ANR	832481	Statement	"""mem.0x%"""	4686:33:138068:138076	831787	9	True				
ANR	832482	Statement	PFMT64x	4686:43:138078:138084	831787	10	True				
ANR	832483	Statement	"""_0x%x"""	4686:51:138086:138092	831787	11	True				
ANR	832484	Statement	","	4686:58:138093:138093	831787	12	True				
ANR	832485	Statement	addr	4686:60:138095:138098	831787	13	True				
ANR	832486	Statement	","	4686:64:138099:138099	831787	14	True				
ANR	832487	Statement	size	4686:66:138101:138104	831787	15	True				
ANR	832488	Statement	)	4686:70:138105:138105	831787	16	True				
ANR	832489	ExpressionStatement		4686:71:138106:138106	831787	17	True				
ANR	832490	IfStatement	if ( * input == '-' )		831787	21					
ANR	832491	Condition	* input == '-'	4688:5:138116:138128	831787	0	True				
ANR	832492	EqualityExpression	* input == '-'		831787	0		==			
ANR	832493	UnaryOperationExpression	* input		831787	0					
ANR	832494	UnaryOperator	*		831787	0					
ANR	832495	Identifier	input		831787	1					
ANR	832496	PrimaryExpression	'-'		831787	1					
ANR	832497	CompoundStatement		96:20:2674:2674	831787	1					
ANR	832498	IfStatement	if ( esil -> stack_fd > 2 )		831787	0					
ANR	832499	Condition	esil -> stack_fd > 2	4689:6:138139:138156	831787	0	True				
ANR	832500	RelationalExpression	esil -> stack_fd > 2		831787	0		>			
ANR	832501	PtrMemberAccess	esil -> stack_fd		831787	0					
ANR	832502	Identifier	esil		831787	0					
ANR	832503	Identifier	stack_fd		831787	1					
ANR	832504	PrimaryExpression	2		831787	1					
ANR	832505	CompoundStatement		97:26:2702:2702	831787	1					
ANR	832506	ExpressionStatement	"r_io_fd_close ( core -> io , esil -> stack_fd )"	4690:3:138204:138244	831787	0	True				
ANR	832507	CallExpression	"r_io_fd_close ( core -> io , esil -> stack_fd )"		831787	0					
ANR	832508	Callee	r_io_fd_close		831787	0					
ANR	832509	Identifier	r_io_fd_close		831787	0					
ANR	832510	ArgumentList	core -> io		831787	1					
ANR	832511	Argument	core -> io		831787	0					
ANR	832512	PtrMemberAccess	core -> io		831787	0					
ANR	832513	Identifier	core		831787	0					
ANR	832514	Identifier	io		831787	1					
ANR	832515	Argument	esil -> stack_fd		831787	1					
ANR	832516	PtrMemberAccess	esil -> stack_fd		831787	0					
ANR	832517	Identifier	esil		831787	0					
ANR	832518	Identifier	stack_fd		831787	1					
ANR	832519	ExpressionStatement	esil -> stack_fd = 0	4692:3:138328:138346	831787	1	True				
ANR	832520	AssignmentExpression	esil -> stack_fd = 0		831787	0		=			
ANR	832521	PtrMemberAccess	esil -> stack_fd		831787	0					
ANR	832522	Identifier	esil		831787	0					
ANR	832523	Identifier	stack_fd		831787	1					
ANR	832524	PrimaryExpression	0		831787	1					
ANR	832525	ElseStatement	else		831787	0					
ANR	832526	CompoundStatement		101:9:2900:2900	831787	0					
ANR	832527	ExpressionStatement	"eprintf ( ""Cannot deinitialize %s\\n"" , name )"	4694:3:138362:138404	831787	0	True				
ANR	832528	CallExpression	"eprintf ( ""Cannot deinitialize %s\\n"" , name )"		831787	0					
ANR	832529	Callee	eprintf		831787	0					
ANR	832530	Identifier	eprintf		831787	0					
ANR	832531	ArgumentList	"""Cannot deinitialize %s\\n"""		831787	1					
ANR	832532	Argument	"""Cannot deinitialize %s\\n"""		831787	0					
ANR	832533	PrimaryExpression	"""Cannot deinitialize %s\\n"""		831787	0					
ANR	832534	Argument	name		831787	1					
ANR	832535	Identifier	name		831787	0					
ANR	832536	ExpressionStatement	"r_flag_unset_name ( core -> flags , name )"	4696:2:138412:138449	831787	1	True				
ANR	832537	CallExpression	"r_flag_unset_name ( core -> flags , name )"		831787	0					
ANR	832538	Callee	r_flag_unset_name		831787	0					
ANR	832539	Identifier	r_flag_unset_name		831787	0					
ANR	832540	ArgumentList	core -> flags		831787	1					
ANR	832541	Argument	core -> flags		831787	0					
ANR	832542	PtrMemberAccess	core -> flags		831787	0					
ANR	832543	Identifier	core		831787	0					
ANR	832544	Identifier	flags		831787	1					
ANR	832545	Argument	name		831787	1					
ANR	832546	Identifier	name		831787	0					
ANR	832547	ExpressionStatement	"r_flag_unset_name ( core -> flags , ""aeim.stack"" )"	4697:2:138453:138498	831787	2	True				
ANR	832548	CallExpression	"r_flag_unset_name ( core -> flags , ""aeim.stack"" )"		831787	0					
ANR	832549	Callee	r_flag_unset_name		831787	0					
ANR	832550	Identifier	r_flag_unset_name		831787	0					
ANR	832551	ArgumentList	core -> flags		831787	1					
ANR	832552	Argument	core -> flags		831787	0					
ANR	832553	PtrMemberAccess	core -> flags		831787	0					
ANR	832554	Identifier	core		831787	0					
ANR	832555	Identifier	flags		831787	1					
ANR	832556	Argument	"""aeim.stack"""		831787	1					
ANR	832557	PrimaryExpression	"""aeim.stack"""		831787	0					
ANR	832558	ExpressionStatement	"sdb_unset ( core -> sdb , ""aeim.fd"" , 0 )"	4698:2:138502:138536	831787	3	True				
ANR	832559	CallExpression	"sdb_unset ( core -> sdb , ""aeim.fd"" , 0 )"		831787	0					
ANR	832560	Callee	sdb_unset		831787	0					
ANR	832561	Identifier	sdb_unset		831787	0					
ANR	832562	ArgumentList	core -> sdb		831787	1					
ANR	832563	Argument	core -> sdb		831787	0					
ANR	832564	PtrMemberAccess	core -> sdb		831787	0					
ANR	832565	Identifier	core		831787	0					
ANR	832566	Identifier	sdb		831787	1					
ANR	832567	Argument	"""aeim.fd"""		831787	1					
ANR	832568	PrimaryExpression	"""aeim.fd"""		831787	0					
ANR	832569	Argument	0		831787	2					
ANR	832570	PrimaryExpression	0		831787	0					
ANR	832571	ReturnStatement	return ;	4700:2:138583:138589	831787	4	True				
ANR	832572	ExpressionStatement	"snprintf ( uri , sizeof ( uri ) , ""malloc://%d"" , ( int ) size )"	4703:1:138596:138650	831787	22	True				
ANR	832573	CallExpression	"snprintf ( uri , sizeof ( uri ) , ""malloc://%d"" , ( int ) size )"		831787	0					
ANR	832574	Callee	snprintf		831787	0					
ANR	832575	Identifier	snprintf		831787	0					
ANR	832576	ArgumentList	uri		831787	1					
ANR	832577	Argument	uri		831787	0					
ANR	832578	Identifier	uri		831787	0					
ANR	832579	Argument	sizeof ( uri )		831787	1					
ANR	832580	SizeofExpression	sizeof ( uri )		831787	0					
ANR	832581	Sizeof	sizeof		831787	0					
ANR	832582	SizeofOperand	uri		831787	1					
ANR	832583	Argument	"""malloc://%d"""		831787	2					
ANR	832584	PrimaryExpression	"""malloc://%d"""		831787	0					
ANR	832585	Argument	( int ) size		831787	3					
ANR	832586	CastExpression	( int ) size		831787	0					
ANR	832587	CastTarget	int		831787	0					
ANR	832588	Identifier	size		831787	1					
ANR	832589	ExpressionStatement	"esil -> stack_fd = r_io_fd_open ( core -> io , uri , R_PERM_RW , 0 )"	4704:1:138653:138712	831787	23	True				
ANR	832590	AssignmentExpression	"esil -> stack_fd = r_io_fd_open ( core -> io , uri , R_PERM_RW , 0 )"		831787	0		=			
ANR	832591	PtrMemberAccess	esil -> stack_fd		831787	0					
ANR	832592	Identifier	esil		831787	0					
ANR	832593	Identifier	stack_fd		831787	1					
ANR	832594	CallExpression	"r_io_fd_open ( core -> io , uri , R_PERM_RW , 0 )"		831787	1					
ANR	832595	Callee	r_io_fd_open		831787	0					
ANR	832596	Identifier	r_io_fd_open		831787	0					
ANR	832597	ArgumentList	core -> io		831787	1					
ANR	832598	Argument	core -> io		831787	0					
ANR	832599	PtrMemberAccess	core -> io		831787	0					
ANR	832600	Identifier	core		831787	0					
ANR	832601	Identifier	io		831787	1					
ANR	832602	Argument	uri		831787	1					
ANR	832603	Identifier	uri		831787	0					
ANR	832604	Argument	R_PERM_RW		831787	2					
ANR	832605	Identifier	R_PERM_RW		831787	0					
ANR	832606	Argument	0		831787	3					
ANR	832607	PrimaryExpression	0		831787	0					
ANR	832608	Statement	if	4705:1:138715:138716	831787	24	True				
ANR	832609	Statement	(	4705:4:138718:138718	831787	25	True				
ANR	832610	Statement	!	4705:5:138719:138719	831787	26	True				
ANR	832611	Statement	(	4705:6:138720:138720	831787	27	True				
ANR	832612	Statement	stack_map	4705:7:138721:138729	831787	28	True				
ANR	832613	Statement	=	4705:17:138731:138731	831787	29	True				
ANR	832614	Statement	r_io_map_add	4705:19:138733:138744	831787	30	True				
ANR	832615	Statement	(	4705:32:138746:138746	831787	31	True				
ANR	832616	Statement	core	4705:33:138747:138750	831787	32	True				
ANR	832617	Statement	->	4705:37:138751:138752	831787	33	True				
ANR	832618	Statement	io	4705:39:138753:138754	831787	34	True				
ANR	832619	Statement	","	4705:41:138755:138755	831787	35	True				
ANR	832620	Statement	esil	4705:43:138757:138760	831787	36	True				
ANR	832621	Statement	->	4705:47:138761:138762	831787	37	True				
ANR	832622	Statement	stack_fd	4705:49:138763:138770	831787	38	True				
ANR	832623	Statement	","	4705:57:138771:138771	831787	39	True				
ANR	832624	Statement	R_PERM_RW	4705:59:138773:138781	831787	40	True				
ANR	832625	Statement	","	4705:68:138782:138782	831787	41	True				
ANR	832626	Statement	0L	4705:70:138784:138785	831787	42	True				
ANR	832627	Statement	L	4705:72:138786:138786	831787	43	True				
ANR	832628	Statement	","	4705:73:138787:138787	831787	44	True				
ANR	832629	Statement	addr	4705:75:138789:138792	831787	45	True				
ANR	832630	Statement	","	4705:79:138793:138793	831787	46	True				
ANR	832631	Statement	size	4705:81:138795:138798	831787	47	True				
ANR	832632	Statement	)	4705:85:138799:138799	831787	48	True				
ANR	832633	Statement	)	4705:86:138800:138800	831787	49	True				
ANR	832634	Statement	)	4705:87:138801:138801	831787	50	True				
ANR	832635	CompoundStatement		113:89:3346:3346	831787	51					
ANR	832636	ExpressionStatement	"r_io_fd_close ( core -> io , esil -> stack_fd )"	4706:2:138807:138847	831787	0	True				
ANR	832637	CallExpression	"r_io_fd_close ( core -> io , esil -> stack_fd )"		831787	0					
ANR	832638	Callee	r_io_fd_close		831787	0					
ANR	832639	Identifier	r_io_fd_close		831787	0					
ANR	832640	ArgumentList	core -> io		831787	1					
ANR	832641	Argument	core -> io		831787	0					
ANR	832642	PtrMemberAccess	core -> io		831787	0					
ANR	832643	Identifier	core		831787	0					
ANR	832644	Identifier	io		831787	1					
ANR	832645	Argument	esil -> stack_fd		831787	1					
ANR	832646	PtrMemberAccess	esil -> stack_fd		831787	0					
ANR	832647	Identifier	esil		831787	0					
ANR	832648	Identifier	stack_fd		831787	1					
ANR	832649	ExpressionStatement	"eprintf ( ""Cannot create map for tha stack, fd %d got closed again\\n"" , esil -> stack_fd )"	4707:2:138851:138936	831787	1	True				
ANR	832650	CallExpression	"eprintf ( ""Cannot create map for tha stack, fd %d got closed again\\n"" , esil -> stack_fd )"		831787	0					
ANR	832651	Callee	eprintf		831787	0					
ANR	832652	Identifier	eprintf		831787	0					
ANR	832653	ArgumentList	"""Cannot create map for tha stack, fd %d got closed again\\n"""		831787	1					
ANR	832654	Argument	"""Cannot create map for tha stack, fd %d got closed again\\n"""		831787	0					
ANR	832655	PrimaryExpression	"""Cannot create map for tha stack, fd %d got closed again\\n"""		831787	0					
ANR	832656	Argument	esil -> stack_fd		831787	1					
ANR	832657	PtrMemberAccess	esil -> stack_fd		831787	0					
ANR	832658	Identifier	esil		831787	0					
ANR	832659	Identifier	stack_fd		831787	1					
ANR	832660	ExpressionStatement	esil -> stack_fd = 0	4708:2:138940:138958	831787	2	True				
ANR	832661	AssignmentExpression	esil -> stack_fd = 0		831787	0		=			
ANR	832662	PtrMemberAccess	esil -> stack_fd		831787	0					
ANR	832663	Identifier	esil		831787	0					
ANR	832664	Identifier	stack_fd		831787	1					
ANR	832665	PrimaryExpression	0		831787	1					
ANR	832666	ReturnStatement	return ;	4709:2:138962:138968	831787	3	True				
ANR	832667	ExpressionStatement	"r_io_map_set_name ( stack_map , name )"	4711:1:138974:139009	831787	52	True				
ANR	832668	CallExpression	"r_io_map_set_name ( stack_map , name )"		831787	0					
ANR	832669	Callee	r_io_map_set_name		831787	0					
ANR	832670	Identifier	r_io_map_set_name		831787	0					
ANR	832671	ArgumentList	stack_map		831787	1					
ANR	832672	Argument	stack_map		831787	0					
ANR	832673	Identifier	stack_map		831787	0					
ANR	832674	Argument	name		831787	1					
ANR	832675	Identifier	name		831787	0					
ANR	832676	IdentifierDeclStatement	"char val [ 128 ] , * v ;"	4713:1:139080:139097	831787	53	True				
ANR	832677	IdentifierDecl	val [ 128 ]		831787	0					
ANR	832678	IdentifierDeclType	char [ 128 ]		831787	0					
ANR	832679	Identifier	val		831787	1					
ANR	832680	PrimaryExpression	128		831787	2					
ANR	832681	IdentifierDecl	* v		831787	1					
ANR	832682	IdentifierDeclType	char *		831787	0					
ANR	832683	Identifier	v		831787	1					
ANR	832684	ExpressionStatement	"v = sdb_itoa ( esil -> stack_fd , val , 10 )"	4714:1:139100:139138	831787	54	True				
ANR	832685	AssignmentExpression	"v = sdb_itoa ( esil -> stack_fd , val , 10 )"		831787	0		=			
ANR	832686	Identifier	v		831787	0					
ANR	832687	CallExpression	"sdb_itoa ( esil -> stack_fd , val , 10 )"		831787	1					
ANR	832688	Callee	sdb_itoa		831787	0					
ANR	832689	Identifier	sdb_itoa		831787	0					
ANR	832690	ArgumentList	esil -> stack_fd		831787	1					
ANR	832691	Argument	esil -> stack_fd		831787	0					
ANR	832692	PtrMemberAccess	esil -> stack_fd		831787	0					
ANR	832693	Identifier	esil		831787	0					
ANR	832694	Identifier	stack_fd		831787	1					
ANR	832695	Argument	val		831787	1					
ANR	832696	Identifier	val		831787	0					
ANR	832697	Argument	10		831787	2					
ANR	832698	PrimaryExpression	10		831787	0					
ANR	832699	ExpressionStatement	"sdb_set ( core -> sdb , ""aeim.fd"" , v , 0 )"	4715:1:139141:139176	831787	55	True				
ANR	832700	CallExpression	"sdb_set ( core -> sdb , ""aeim.fd"" , v , 0 )"		831787	0					
ANR	832701	Callee	sdb_set		831787	0					
ANR	832702	Identifier	sdb_set		831787	0					
ANR	832703	ArgumentList	core -> sdb		831787	1					
ANR	832704	Argument	core -> sdb		831787	0					
ANR	832705	PtrMemberAccess	core -> sdb		831787	0					
ANR	832706	Identifier	core		831787	0					
ANR	832707	Identifier	sdb		831787	1					
ANR	832708	Argument	"""aeim.fd"""		831787	1					
ANR	832709	PrimaryExpression	"""aeim.fd"""		831787	0					
ANR	832710	Argument	v		831787	2					
ANR	832711	Identifier	v		831787	0					
ANR	832712	Argument	0		831787	3					
ANR	832713	PrimaryExpression	0		831787	0					
ANR	832714	ExpressionStatement	"r_config_set_i ( core -> config , ""io.va"" , true )"	4717:1:139180:139224	831787	56	True				
ANR	832715	CallExpression	"r_config_set_i ( core -> config , ""io.va"" , true )"		831787	0					
ANR	832716	Callee	r_config_set_i		831787	0					
ANR	832717	Identifier	r_config_set_i		831787	0					
ANR	832718	ArgumentList	core -> config		831787	1					
ANR	832719	Argument	core -> config		831787	0					
ANR	832720	PtrMemberAccess	core -> config		831787	0					
ANR	832721	Identifier	core		831787	0					
ANR	832722	Identifier	config		831787	1					
ANR	832723	Argument	"""io.va"""		831787	1					
ANR	832724	PrimaryExpression	"""io.va"""		831787	0					
ANR	832725	Argument	true		831787	2					
ANR	832726	Identifier	true		831787	0					
ANR	832727	IfStatement	if ( patt && * patt )		831787	57					
ANR	832728	Condition	patt && * patt	4718:5:139231:139243	831787	0	True				
ANR	832729	AndExpression	patt && * patt		831787	0		&&			
ANR	832730	Identifier	patt		831787	0					
ANR	832731	UnaryOperationExpression	* patt		831787	1					
ANR	832732	UnaryOperator	*		831787	0					
ANR	832733	Identifier	patt		831787	1					
ANR	832734	CompoundStatement		126:20:3789:3789	831787	1					
ANR	832735	SwitchStatement	switch ( * patt )		831787	0					
ANR	832736	Condition	* patt	4719:10:139258:139262	831787	0	True				
ANR	832737	UnaryOperationExpression	* patt		831787	0					
ANR	832738	UnaryOperator	*		831787	0					
ANR	832739	Identifier	patt		831787	1					
ANR	832740	CompoundStatement		127:17:3808:3808	831787	1					
ANR	832741	Label	case '0' :	4720:2:139269:139277	831787	0	True				
ANR	832742	BreakStatement	break ;	4722:3:139299:139304	831787	1	True				
ANR	832743	Label	case 'd' :	4723:2:139308:139316	831787	2	True				
ANR	832744	Statement	r_core_cmdf	4724:3:139321:139331	831787	3	True				
ANR	832745	Statement	(	4724:15:139333:139333	831787	4	True				
ANR	832746	Statement	core	4724:16:139334:139337	831787	5	True				
ANR	832747	Statement	","	4724:20:139338:139338	831787	6	True				
ANR	832748	Statement	"""wopD %d @ 0x%"""	4724:22:139340:139354	831787	7	True				
ANR	832749	Statement	PFMT64x	4724:37:139355:139361	831787	8	True				
ANR	832750	Statement	","	4724:44:139362:139362	831787	9	True				
ANR	832751	Statement	size	4724:46:139364:139367	831787	10	True				
ANR	832752	Statement	","	4724:50:139368:139368	831787	11	True				
ANR	832753	Statement	addr	4724:52:139370:139373	831787	12	True				
ANR	832754	Statement	)	4724:56:139374:139374	831787	13	True				
ANR	832755	ExpressionStatement		4724:57:139375:139375	831787	14	True				
ANR	832756	BreakStatement	break ;	4725:3:139380:139385	831787	15	True				
ANR	832757	Label	case 'i' :	4726:2:139389:139397	831787	16	True				
ANR	832758	Statement	r_core_cmdf	4727:3:139402:139412	831787	17	True				
ANR	832759	Statement	(	4727:15:139414:139414	831787	18	True				
ANR	832760	Statement	core	4727:16:139415:139418	831787	19	True				
ANR	832761	Statement	","	4727:20:139419:139419	831787	20	True				
ANR	832762	Statement	"""woe 0 255 1 @ 0x%"""	4727:22:139421:139439	831787	21	True				
ANR	832763	Statement	PFMT64x	4727:41:139440:139446	831787	22	True				
ANR	832764	Statement	"""!%d"""	4727:48:139447:139451	831787	23	True				
ANR	832765	Statement	","	4727:53:139452:139452	831787	24	True				
ANR	832766	Statement	addr	4727:54:139453:139456	831787	25	True				
ANR	832767	Statement	","	4727:58:139457:139457	831787	26	True				
ANR	832768	Statement	size	4727:60:139459:139462	831787	27	True				
ANR	832769	Statement	)	4727:64:139463:139463	831787	28	True				
ANR	832770	ExpressionStatement		4727:65:139464:139464	831787	29	True				
ANR	832771	BreakStatement	break ;	4728:3:139469:139474	831787	30	True				
ANR	832772	Label	case 'w' :	4729:2:139478:139486	831787	31	True				
ANR	832773	Statement	r_core_cmdf	4730:3:139491:139501	831787	32	True				
ANR	832774	Statement	(	4730:15:139503:139503	831787	33	True				
ANR	832775	Statement	core	4730:16:139504:139507	831787	34	True				
ANR	832776	Statement	","	4730:20:139508:139508	831787	35	True				
ANR	832777	Statement	"""woe 0 0xffff 1 4 @ 0x%"""	4730:22:139510:139533	831787	36	True				
ANR	832778	Statement	PFMT64x	4730:46:139534:139540	831787	37	True				
ANR	832779	Statement	"""!%d"""	4730:53:139541:139545	831787	38	True				
ANR	832780	Statement	","	4730:58:139546:139546	831787	39	True				
ANR	832781	Statement	addr	4730:59:139547:139550	831787	40	True				
ANR	832782	Statement	","	4730:63:139551:139551	831787	41	True				
ANR	832783	Statement	size	4730:65:139553:139556	831787	42	True				
ANR	832784	Statement	)	4730:69:139557:139557	831787	43	True				
ANR	832785	ExpressionStatement		4730:70:139558:139558	831787	44	True				
ANR	832786	BreakStatement	break ;	4731:3:139563:139568	831787	45	True				
ANR	832787	ExpressionStatement	"sp = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_SP )"	4735:1:139585:139636	831787	58	True				
ANR	832788	AssignmentExpression	"sp = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_SP )"		831787	0		=			
ANR	832789	Identifier	sp		831787	0					
ANR	832790	CallExpression	"r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_SP )"		831787	1					
ANR	832791	Callee	r_reg_get_name		831787	0					
ANR	832792	Identifier	r_reg_get_name		831787	0					
ANR	832793	ArgumentList	core -> dbg -> reg		831787	1					
ANR	832794	Argument	core -> dbg -> reg		831787	0					
ANR	832795	PtrMemberAccess	core -> dbg -> reg		831787	0					
ANR	832796	PtrMemberAccess	core -> dbg		831787	0					
ANR	832797	Identifier	core		831787	0					
ANR	832798	Identifier	dbg		831787	1					
ANR	832799	Identifier	reg		831787	1					
ANR	832800	Argument	R_REG_NAME_SP		831787	1					
ANR	832801	Identifier	R_REG_NAME_SP		831787	0					
ANR	832802	IfStatement	if ( sp )		831787	59					
ANR	832803	Condition	sp	4736:5:139643:139644	831787	0	True				
ANR	832804	Identifier	sp		831787	0					
ANR	832805	CompoundStatement		144:9:4190:4190	831787	1					
ANR	832806	ExpressionStatement	"r_debug_reg_set ( core -> dbg , sp , addr + ( size / 2 ) )"	4737:2:139651:139701	831787	0	True				
ANR	832807	CallExpression	"r_debug_reg_set ( core -> dbg , sp , addr + ( size / 2 ) )"		831787	0					
ANR	832808	Callee	r_debug_reg_set		831787	0					
ANR	832809	Identifier	r_debug_reg_set		831787	0					
ANR	832810	ArgumentList	core -> dbg		831787	1					
ANR	832811	Argument	core -> dbg		831787	0					
ANR	832812	PtrMemberAccess	core -> dbg		831787	0					
ANR	832813	Identifier	core		831787	0					
ANR	832814	Identifier	dbg		831787	1					
ANR	832815	Argument	sp		831787	1					
ANR	832816	Identifier	sp		831787	0					
ANR	832817	Argument	addr + ( size / 2 )		831787	2					
ANR	832818	AdditiveExpression	addr + ( size / 2 )		831787	0		+			
ANR	832819	Identifier	addr		831787	0					
ANR	832820	MultiplicativeExpression	size / 2		831787	1		/			
ANR	832821	Identifier	size		831787	0					
ANR	832822	PrimaryExpression	2		831787	1					
ANR	832823	ExpressionStatement	"bp = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_BP )"	4740:1:139714:139765	831787	60	True				
ANR	832824	AssignmentExpression	"bp = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_BP )"		831787	0		=			
ANR	832825	Identifier	bp		831787	0					
ANR	832826	CallExpression	"r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_BP )"		831787	1					
ANR	832827	Callee	r_reg_get_name		831787	0					
ANR	832828	Identifier	r_reg_get_name		831787	0					
ANR	832829	ArgumentList	core -> dbg -> reg		831787	1					
ANR	832830	Argument	core -> dbg -> reg		831787	0					
ANR	832831	PtrMemberAccess	core -> dbg -> reg		831787	0					
ANR	832832	PtrMemberAccess	core -> dbg		831787	0					
ANR	832833	Identifier	core		831787	0					
ANR	832834	Identifier	dbg		831787	1					
ANR	832835	Identifier	reg		831787	1					
ANR	832836	Argument	R_REG_NAME_BP		831787	1					
ANR	832837	Identifier	R_REG_NAME_BP		831787	0					
ANR	832838	IfStatement	if ( bp )		831787	61					
ANR	832839	Condition	bp	4741:5:139772:139773	831787	0	True				
ANR	832840	Identifier	bp		831787	0					
ANR	832841	CompoundStatement		149:9:4319:4319	831787	1					
ANR	832842	ExpressionStatement	"r_debug_reg_set ( core -> dbg , bp , addr + ( size / 2 ) )"	4742:2:139780:139830	831787	0	True				
ANR	832843	CallExpression	"r_debug_reg_set ( core -> dbg , bp , addr + ( size / 2 ) )"		831787	0					
ANR	832844	Callee	r_debug_reg_set		831787	0					
ANR	832845	Identifier	r_debug_reg_set		831787	0					
ANR	832846	ArgumentList	core -> dbg		831787	1					
ANR	832847	Argument	core -> dbg		831787	0					
ANR	832848	PtrMemberAccess	core -> dbg		831787	0					
ANR	832849	Identifier	core		831787	0					
ANR	832850	Identifier	dbg		831787	1					
ANR	832851	Argument	bp		831787	1					
ANR	832852	Identifier	bp		831787	0					
ANR	832853	Argument	addr + ( size / 2 )		831787	2					
ANR	832854	AdditiveExpression	addr + ( size / 2 )		831787	0		+			
ANR	832855	Identifier	addr		831787	0					
ANR	832856	MultiplicativeExpression	size / 2		831787	1		/			
ANR	832857	Identifier	size		831787	0					
ANR	832858	PrimaryExpression	2		831787	1					
ANR	832859	ExpressionStatement	"pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"	4745:1:139843:139894	831787	62	True				
ANR	832860	AssignmentExpression	"pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		831787	0		=			
ANR	832861	Identifier	pc		831787	0					
ANR	832862	CallExpression	"r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		831787	1					
ANR	832863	Callee	r_reg_get_name		831787	0					
ANR	832864	Identifier	r_reg_get_name		831787	0					
ANR	832865	ArgumentList	core -> dbg -> reg		831787	1					
ANR	832866	Argument	core -> dbg -> reg		831787	0					
ANR	832867	PtrMemberAccess	core -> dbg -> reg		831787	0					
ANR	832868	PtrMemberAccess	core -> dbg		831787	0					
ANR	832869	Identifier	core		831787	0					
ANR	832870	Identifier	dbg		831787	1					
ANR	832871	Identifier	reg		831787	1					
ANR	832872	Argument	R_REG_NAME_PC		831787	1					
ANR	832873	Identifier	R_REG_NAME_PC		831787	0					
ANR	832874	IfStatement	if ( pc )		831787	63					
ANR	832875	Condition	pc	4746:5:139901:139902	831787	0	True				
ANR	832876	Identifier	pc		831787	0					
ANR	832877	CompoundStatement		154:9:4448:4448	831787	1					
ANR	832878	ExpressionStatement	"r_debug_reg_set ( core -> dbg , pc , curoff )"	4747:2:139909:139948	831787	0	True				
ANR	832879	CallExpression	"r_debug_reg_set ( core -> dbg , pc , curoff )"		831787	0					
ANR	832880	Callee	r_debug_reg_set		831787	0					
ANR	832881	Identifier	r_debug_reg_set		831787	0					
ANR	832882	ArgumentList	core -> dbg		831787	1					
ANR	832883	Argument	core -> dbg		831787	0					
ANR	832884	PtrMemberAccess	core -> dbg		831787	0					
ANR	832885	Identifier	core		831787	0					
ANR	832886	Identifier	dbg		831787	1					
ANR	832887	Argument	pc		831787	1					
ANR	832888	Identifier	pc		831787	0					
ANR	832889	Argument	curoff		831787	2					
ANR	832890	Identifier	curoff		831787	0					
ANR	832891	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	4749:1:139954:139980	831787	64	True				
ANR	832892	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		831787	0					
ANR	832893	Callee	r_core_cmd0		831787	0					
ANR	832894	Identifier	r_core_cmd0		831787	0					
ANR	832895	ArgumentList	core		831787	1					
ANR	832896	Argument	core		831787	0					
ANR	832897	Identifier	core		831787	0					
ANR	832898	Argument	""".ar*"""		831787	1					
ANR	832899	PrimaryExpression	""".ar*"""		831787	0					
ANR	832900	IfStatement	if ( esil )		831787	65					
ANR	832901	Condition	esil	4750:5:139987:139990	831787	0	True				
ANR	832902	Identifier	esil		831787	0					
ANR	832903	CompoundStatement		158:11:4536:4536	831787	1					
ANR	832904	ExpressionStatement	esil -> stack_addr = addr	4751:2:139997:140020	831787	0	True				
ANR	832905	AssignmentExpression	esil -> stack_addr = addr		831787	0		=			
ANR	832906	PtrMemberAccess	esil -> stack_addr		831787	0					
ANR	832907	Identifier	esil		831787	0					
ANR	832908	Identifier	stack_addr		831787	1					
ANR	832909	Identifier	addr		831787	1					
ANR	832910	ExpressionStatement	esil -> stack_size = size	4752:2:140024:140047	831787	1	True				
ANR	832911	AssignmentExpression	esil -> stack_size = size		831787	0		=			
ANR	832912	PtrMemberAccess	esil -> stack_size		831787	0					
ANR	832913	Identifier	esil		831787	0					
ANR	832914	Identifier	stack_size		831787	1					
ANR	832915	Identifier	size		831787	1					
ANR	832916	ExpressionStatement	"initialize_stack ( core , addr , size )"	4754:1:140053:140088	831787	66	True				
ANR	832917	CallExpression	"initialize_stack ( core , addr , size )"		831787	0					
ANR	832918	Callee	initialize_stack		831787	0					
ANR	832919	Identifier	initialize_stack		831787	0					
ANR	832920	ArgumentList	core		831787	1					
ANR	832921	Argument	core		831787	0					
ANR	832922	Identifier	core		831787	0					
ANR	832923	Argument	addr		831787	1					
ANR	832924	Identifier	addr		831787	0					
ANR	832925	Argument	size		831787	2					
ANR	832926	Identifier	size		831787	0					
ANR	832927	ExpressionStatement	"r_core_seek ( core , curoff , 0 )"	4755:1:140091:140120	831787	67	True				
ANR	832928	CallExpression	"r_core_seek ( core , curoff , 0 )"		831787	0					
ANR	832929	Callee	r_core_seek		831787	0					
ANR	832930	Identifier	r_core_seek		831787	0					
ANR	832931	ArgumentList	core		831787	1					
ANR	832932	Argument	core		831787	0					
ANR	832933	Identifier	core		831787	0					
ANR	832934	Argument	curoff		831787	1					
ANR	832935	Identifier	curoff		831787	0					
ANR	832936	Argument	0		831787	2					
ANR	832937	PrimaryExpression	0		831787	0					
ANR	832938	ReturnType	static void		831787	1					
ANR	832939	Identifier	cmd_esil_mem		831787	2					
ANR	832940	ParameterList	"RCore * core , const char * input"		831787	3					
ANR	832941	Parameter	RCore * core	4593:25:135424:135434	831787	0	True				
ANR	832942	ParameterType	RCore *		831787	0					
ANR	832943	Identifier	core		831787	1					
ANR	832944	Parameter	const char * input	4593:38:135437:135453	831787	1	True				
ANR	832945	ParameterType	const char *		831787	0					
ANR	832946	Identifier	input		831787	1					
ANR	832947	CFGEntryNode	ENTRY		831787		True				
ANR	832948	CFGExitNode	EXIT		831787		True				
ANR	832949	Symbol	romem		831787						
ANR	832950	Symbol	fi -> size		831787						
ANR	832951	Symbol	patt		831787						
ANR	832952	Symbol	stacksize		831787						
ANR	832953	Symbol	R_REG_NAME_PC		831787						
ANR	832954	Symbol	* input		831787						
ANR	832955	Symbol	core -> offset		831787						
ANR	832956	Symbol	strchr		831787						
ANR	832957	Symbol	addrsize		831787						
ANR	832958	Symbol	stats		831787						
ANR	832959	Symbol	fi -> offset		831787						
ANR	832960	Symbol	* esil		831787						
ANR	832961	Symbol	esil -> stack_size		831787						
ANR	832962	Symbol	core -> anal -> esil		831787						
ANR	832963	Symbol	core -> num		831787						
ANR	832964	Symbol	val		831787						
ANR	832965	Symbol	R_REG_NAME_BP		831787						
ANR	832966	Symbol	sdb_atoi		831787						
ANR	832967	Symbol	stack_map		831787						
ANR	832968	Symbol	iotrap		831787						
ANR	832969	Symbol	my		831787						
ANR	832970	Symbol	core		831787						
ANR	832971	Symbol	input		831787						
ANR	832972	Symbol	R_REG_NAME_SP		831787						
ANR	832973	Symbol	size		831787						
ANR	832974	Symbol	r_reg_get_name		831787						
ANR	832975	Symbol	sdb_itoa		831787						
ANR	832976	Symbol	r_config_get_i		831787						
ANR	832977	Symbol	name		831787						
ANR	832978	Symbol	true		831787						
ANR	832979	Symbol	curoff		831787						
ANR	832980	Symbol	* core -> dbg		831787						
ANR	832981	Symbol	noNULL		831787						
ANR	832982	Symbol	fd		831787						
ANR	832983	Symbol	fi		831787						
ANR	832984	Symbol	esil -> verbose		831787						
ANR	832985	Symbol	* patt		831787						
ANR	832986	Symbol	core -> sdb		831787						
ANR	832987	Symbol	* core		831787						
ANR	832988	Symbol	r_config_get		831787						
ANR	832989	Symbol	core -> anal		831787						
ANR	832990	Symbol	bp		831787						
ANR	832991	Symbol	r_num_math		831787						
ANR	832992	Symbol	R_PERM_RW		831787						
ANR	832993	Symbol	core -> io		831787						
ANR	832994	Symbol	esil -> stack_fd		831787						
ANR	832995	Symbol	r_io_fd_open		831787						
ANR	832996	Symbol	addr		831787						
ANR	832997	Symbol	sp		831787						
ANR	832998	Symbol	* * core		831787						
ANR	832999	Symbol	core -> config		831787						
ANR	833000	Symbol	r_flag_get		831787						
ANR	833001	Symbol	core -> flags		831787						
ANR	833002	Symbol	* fi		831787						
ANR	833003	Symbol	sdb_get		831787						
ANR	833004	Symbol	uri		831787						
ANR	833005	Symbol	verbose		831787						
ANR	833006	Symbol	p		831787						
ANR	833007	Symbol	esil -> stack_addr		831787						
ANR	833008	Symbol	* core -> anal		831787						
ANR	833009	Symbol	pc		831787						
ANR	833010	Symbol	s		831787						
ANR	833011	Symbol	v		831787						
ANR	833012	Symbol	core -> dbg -> reg		831787						
ANR	833013	Symbol	nomalloc		831787						
ANR	833014	Symbol	strncpy		831787						
ANR	833015	Symbol	r_anal_esil_new		831787						
ANR	833016	Symbol	* p		831787						
ANR	833017	Symbol	strdup		831787						
ANR	833018	Symbol	esil		831787						
ANR	833019	Symbol	core -> dbg		831787						
ANR	833020	DeclStmt									
ANR	833021	Decl							ut64	ut64	opc
ANR	833022	DeclStmt									
ANR	833023	Decl							ut8	ut8 *	regstate
ANR	833024	Function	esil_init	4762:0:140189:140930							
ANR	833025	FunctionDef	esil_init (RCore * core)		833024	0					
ANR	833026	CompoundStatement		4762:36:140225:140930	833024	0					
ANR	833027	IdentifierDeclStatement	"const char * pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	4763:1:140228:140292	833024	0	True				
ANR	833028	IdentifierDecl	"* pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		833024	0					
ANR	833029	IdentifierDeclType	const char *		833024	0					
ANR	833030	Identifier	pc		833024	1					
ANR	833031	AssignmentExpression	"* pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		833024	2		=			
ANR	833032	Identifier	pc		833024	0					
ANR	833033	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		833024	1					
ANR	833034	Callee	r_reg_get_name		833024	0					
ANR	833035	Identifier	r_reg_get_name		833024	0					
ANR	833036	ArgumentList	core -> anal -> reg		833024	1					
ANR	833037	Argument	core -> anal -> reg		833024	0					
ANR	833038	PtrMemberAccess	core -> anal -> reg		833024	0					
ANR	833039	PtrMemberAccess	core -> anal		833024	0					
ANR	833040	Identifier	core		833024	0					
ANR	833041	Identifier	anal		833024	1					
ANR	833042	Identifier	reg		833024	1					
ANR	833043	Argument	R_REG_NAME_PC		833024	1					
ANR	833044	Identifier	R_REG_NAME_PC		833024	0					
ANR	833045	IdentifierDeclStatement	"int noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" ) ;"	4764:1:140295:140352	833024	1	True				
ANR	833046	IdentifierDecl	"noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" )"		833024	0					
ANR	833047	IdentifierDeclType	int		833024	0					
ANR	833048	Identifier	noNULL		833024	1					
ANR	833049	AssignmentExpression	"noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" )"		833024	2		=			
ANR	833050	Identifier	noNULL		833024	0					
ANR	833051	CallExpression	"r_config_get_i ( core -> config , ""esil.noNULL"" )"		833024	1					
ANR	833052	Callee	r_config_get_i		833024	0					
ANR	833053	Identifier	r_config_get_i		833024	0					
ANR	833054	ArgumentList	core -> config		833024	1					
ANR	833055	Argument	core -> config		833024	0					
ANR	833056	PtrMemberAccess	core -> config		833024	0					
ANR	833057	Identifier	core		833024	0					
ANR	833058	Identifier	config		833024	1					
ANR	833059	Argument	"""esil.noNULL"""		833024	1					
ANR	833060	PrimaryExpression	"""esil.noNULL"""		833024	0					
ANR	833061	ExpressionStatement	"opc = r_reg_getv ( core -> anal -> reg , pc )"	4765:1:140355:140393	833024	2	True				
ANR	833062	AssignmentExpression	"opc = r_reg_getv ( core -> anal -> reg , pc )"		833024	0		=			
ANR	833063	Identifier	opc		833024	0					
ANR	833064	CallExpression	"r_reg_getv ( core -> anal -> reg , pc )"		833024	1					
ANR	833065	Callee	r_reg_getv		833024	0					
ANR	833066	Identifier	r_reg_getv		833024	0					
ANR	833067	ArgumentList	core -> anal -> reg		833024	1					
ANR	833068	Argument	core -> anal -> reg		833024	0					
ANR	833069	PtrMemberAccess	core -> anal -> reg		833024	0					
ANR	833070	PtrMemberAccess	core -> anal		833024	0					
ANR	833071	Identifier	core		833024	0					
ANR	833072	Identifier	anal		833024	1					
ANR	833073	Identifier	reg		833024	1					
ANR	833074	Argument	pc		833024	1					
ANR	833075	Identifier	pc		833024	0					
ANR	833076	IfStatement	if ( ! opc || opc == UT64_MAX )		833024	3					
ANR	833077	Condition	! opc || opc == UT64_MAX	4766:5:140400:140420	833024	0	True				
ANR	833078	OrExpression	! opc || opc == UT64_MAX		833024	0		||			
ANR	833079	UnaryOperationExpression	! opc		833024	0					
ANR	833080	UnaryOperator	!		833024	0					
ANR	833081	Identifier	opc		833024	1					
ANR	833082	EqualityExpression	opc == UT64_MAX		833024	1		==			
ANR	833083	Identifier	opc		833024	0					
ANR	833084	Identifier	UT64_MAX		833024	1					
ANR	833085	CompoundStatement		5:28:197:197	833024	1					
ANR	833086	ExpressionStatement	opc = core -> offset	4767:2:140427:140445	833024	0	True				
ANR	833087	AssignmentExpression	opc = core -> offset		833024	0		=			
ANR	833088	Identifier	opc		833024	0					
ANR	833089	PtrMemberAccess	core -> offset		833024	1					
ANR	833090	Identifier	core		833024	0					
ANR	833091	Identifier	offset		833024	1					
ANR	833092	IfStatement	if ( ! core -> anal -> esil )		833024	4					
ANR	833093	Condition	! core -> anal -> esil	4769:5:140455:140471	833024	0	True				
ANR	833094	UnaryOperationExpression	! core -> anal -> esil		833024	0					
ANR	833095	UnaryOperator	!		833024	0					
ANR	833096	PtrMemberAccess	core -> anal -> esil		833024	1					
ANR	833097	PtrMemberAccess	core -> anal		833024	0					
ANR	833098	Identifier	core		833024	0					
ANR	833099	Identifier	anal		833024	1					
ANR	833100	Identifier	esil		833024	1					
ANR	833101	CompoundStatement		11:2:382:453	833024	1					
ANR	833102	IdentifierDeclStatement	"int iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	4770:2:140478:140535	833024	0	True				
ANR	833103	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		833024	0					
ANR	833104	IdentifierDeclType	int		833024	0					
ANR	833105	Identifier	iotrap		833024	1					
ANR	833106	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		833024	2		=			
ANR	833107	Identifier	iotrap		833024	0					
ANR	833108	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		833024	1					
ANR	833109	Callee	r_config_get_i		833024	0					
ANR	833110	Identifier	r_config_get_i		833024	0					
ANR	833111	ArgumentList	core -> config		833024	1					
ANR	833112	Argument	core -> config		833024	0					
ANR	833113	PtrMemberAccess	core -> config		833024	0					
ANR	833114	Identifier	core		833024	0					
ANR	833115	Identifier	config		833024	1					
ANR	833116	Argument	"""esil.iotrap"""		833024	1					
ANR	833117	PrimaryExpression	"""esil.iotrap"""		833024	0					
ANR	833118	IdentifierDeclStatement	"ut64 stackSize = r_config_get_i ( core -> config , ""esil.stack.size"" ) ;"	4771:2:140539:140604	833024	1	True				
ANR	833119	IdentifierDecl	"stackSize = r_config_get_i ( core -> config , ""esil.stack.size"" )"		833024	0					
ANR	833120	IdentifierDeclType	ut64		833024	0					
ANR	833121	Identifier	stackSize		833024	1					
ANR	833122	AssignmentExpression	"stackSize = r_config_get_i ( core -> config , ""esil.stack.size"" )"		833024	2		=			
ANR	833123	Identifier	stackSize		833024	0					
ANR	833124	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.size"" )"		833024	1					
ANR	833125	Callee	r_config_get_i		833024	0					
ANR	833126	Identifier	r_config_get_i		833024	0					
ANR	833127	ArgumentList	core -> config		833024	1					
ANR	833128	Argument	core -> config		833024	0					
ANR	833129	PtrMemberAccess	core -> config		833024	0					
ANR	833130	Identifier	core		833024	0					
ANR	833131	Identifier	config		833024	1					
ANR	833132	Argument	"""esil.stack.size"""		833024	1					
ANR	833133	PrimaryExpression	"""esil.stack.size"""		833024	0					
ANR	833134	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	4772:2:140608:140679	833024	2	True				
ANR	833135	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		833024	0					
ANR	833136	IdentifierDeclType	unsigned int		833024	0					
ANR	833137	Identifier	addrsize		833024	1					
ANR	833138	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		833024	2		=			
ANR	833139	Identifier	addrsize		833024	0					
ANR	833140	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		833024	1					
ANR	833141	Callee	r_config_get_i		833024	0					
ANR	833142	Identifier	r_config_get_i		833024	0					
ANR	833143	ArgumentList	core -> config		833024	1					
ANR	833144	Argument	core -> config		833024	0					
ANR	833145	PtrMemberAccess	core -> config		833024	0					
ANR	833146	Identifier	core		833024	0					
ANR	833147	Identifier	config		833024	1					
ANR	833148	Argument	"""esil.addr.size"""		833024	1					
ANR	833149	PrimaryExpression	"""esil.addr.size"""		833024	0					
ANR	833150	IfStatement	"if ( ! ( core -> anal -> esil = r_anal_esil_new ( stackSize , iotrap , addrsize ) ) )"		833024	3					
ANR	833151	Condition	"! ( core -> anal -> esil = r_anal_esil_new ( stackSize , iotrap , addrsize ) )"	4773:6:140687:140753	833024	0	True				
ANR	833152	UnaryOperationExpression	"! ( core -> anal -> esil = r_anal_esil_new ( stackSize , iotrap , addrsize ) )"		833024	0					
ANR	833153	UnaryOperator	!		833024	0					
ANR	833154	AssignmentExpression	"core -> anal -> esil = r_anal_esil_new ( stackSize , iotrap , addrsize )"		833024	1		=			
ANR	833155	PtrMemberAccess	core -> anal -> esil		833024	0					
ANR	833156	PtrMemberAccess	core -> anal		833024	0					
ANR	833157	Identifier	core		833024	0					
ANR	833158	Identifier	anal		833024	1					
ANR	833159	Identifier	esil		833024	1					
ANR	833160	CallExpression	"r_anal_esil_new ( stackSize , iotrap , addrsize )"		833024	1					
ANR	833161	Callee	r_anal_esil_new		833024	0					
ANR	833162	Identifier	r_anal_esil_new		833024	0					
ANR	833163	ArgumentList	stackSize		833024	1					
ANR	833164	Argument	stackSize		833024	0					
ANR	833165	Identifier	stackSize		833024	0					
ANR	833166	Argument	iotrap		833024	1					
ANR	833167	Identifier	iotrap		833024	0					
ANR	833168	Argument	addrsize		833024	2					
ANR	833169	Identifier	addrsize		833024	0					
ANR	833170	CompoundStatement		12:75:530:530	833024	1					
ANR	833171	ExpressionStatement	R_FREE ( regstate )	4774:3:140761:140778	833024	0	True				
ANR	833172	CallExpression	R_FREE ( regstate )		833024	0					
ANR	833173	Callee	R_FREE		833024	0					
ANR	833174	Identifier	R_FREE		833024	0					
ANR	833175	ArgumentList	regstate		833024	1					
ANR	833176	Argument	regstate		833024	0					
ANR	833177	Identifier	regstate		833024	0					
ANR	833178	ReturnStatement	return ;	4775:3:140783:140789	833024	1	True				
ANR	833179	ExpressionStatement	"r_anal_esil_setup ( core -> anal -> esil , core -> anal , 0 , 0 , noNULL )"	4777:2:140797:140859	833024	4	True				
ANR	833180	CallExpression	"r_anal_esil_setup ( core -> anal -> esil , core -> anal , 0 , 0 , noNULL )"		833024	0					
ANR	833181	Callee	r_anal_esil_setup		833024	0					
ANR	833182	Identifier	r_anal_esil_setup		833024	0					
ANR	833183	ArgumentList	core -> anal -> esil		833024	1					
ANR	833184	Argument	core -> anal -> esil		833024	0					
ANR	833185	PtrMemberAccess	core -> anal -> esil		833024	0					
ANR	833186	PtrMemberAccess	core -> anal		833024	0					
ANR	833187	Identifier	core		833024	0					
ANR	833188	Identifier	anal		833024	1					
ANR	833189	Identifier	esil		833024	1					
ANR	833190	Argument	core -> anal		833024	1					
ANR	833191	PtrMemberAccess	core -> anal		833024	0					
ANR	833192	Identifier	core		833024	0					
ANR	833193	Identifier	anal		833024	1					
ANR	833194	Argument	0		833024	2					
ANR	833195	PrimaryExpression	0		833024	0					
ANR	833196	Argument	0		833024	3					
ANR	833197	PrimaryExpression	0		833024	0					
ANR	833198	Argument	noNULL		833024	4					
ANR	833199	Identifier	noNULL		833024	0					
ANR	833200	ExpressionStatement	free ( regstate )	4779:1:140865:140880	833024	5	True				
ANR	833201	CallExpression	free ( regstate )		833024	0					
ANR	833202	Callee	free		833024	0					
ANR	833203	Identifier	free		833024	0					
ANR	833204	ArgumentList	regstate		833024	1					
ANR	833205	Argument	regstate		833024	0					
ANR	833206	Identifier	regstate		833024	0					
ANR	833207	ExpressionStatement	regstate = r_reg_arena_peek ( core -> anal -> reg )	4780:1:140883:140928	833024	6	True				
ANR	833208	AssignmentExpression	regstate = r_reg_arena_peek ( core -> anal -> reg )		833024	0		=			
ANR	833209	Identifier	regstate		833024	0					
ANR	833210	CallExpression	r_reg_arena_peek ( core -> anal -> reg )		833024	1					
ANR	833211	Callee	r_reg_arena_peek		833024	0					
ANR	833212	Identifier	r_reg_arena_peek		833024	0					
ANR	833213	ArgumentList	core -> anal -> reg		833024	1					
ANR	833214	Argument	core -> anal -> reg		833024	0					
ANR	833215	PtrMemberAccess	core -> anal -> reg		833024	0					
ANR	833216	PtrMemberAccess	core -> anal		833024	0					
ANR	833217	Identifier	core		833024	0					
ANR	833218	Identifier	anal		833024	1					
ANR	833219	Identifier	reg		833024	1					
ANR	833220	ReturnType	static void		833024	1					
ANR	833221	Identifier	esil_init		833024	2					
ANR	833222	ParameterList	RCore * core		833024	3					
ANR	833223	Parameter	RCore * core	4762:23:140212:140222	833024	0	True				
ANR	833224	ParameterType	RCore *		833024	0					
ANR	833225	Identifier	core		833024	1					
ANR	833226	CFGEntryNode	ENTRY		833024		True				
ANR	833227	CFGExitNode	EXIT		833024		True				
ANR	833228	Symbol	core -> config		833024						
ANR	833229	Symbol	core -> anal -> reg		833024						
ANR	833230	Symbol	opc		833024						
ANR	833231	Symbol	R_REG_NAME_PC		833024						
ANR	833232	Symbol	* core		833024						
ANR	833233	Symbol	core -> offset		833024						
ANR	833234	Symbol	iotrap		833024						
ANR	833235	Symbol	core -> anal		833024						
ANR	833236	Symbol	addrsize		833024						
ANR	833237	Symbol	core		833024						
ANR	833238	Symbol	pc		833024						
ANR	833239	Symbol	* core -> anal		833024						
ANR	833240	Symbol	stackSize		833024						
ANR	833241	Symbol	regstate		833024						
ANR	833242	Symbol	r_reg_get_name		833024						
ANR	833243	Symbol	r_config_get_i		833024						
ANR	833244	Symbol	r_anal_esil_new		833024						
ANR	833245	Symbol	r_reg_getv		833024						
ANR	833246	Symbol	UT64_MAX		833024						
ANR	833247	Symbol	core -> anal -> esil		833024						
ANR	833248	Symbol	* * core		833024						
ANR	833249	Symbol	noNULL		833024						
ANR	833250	Symbol	r_reg_arena_peek		833024						
ANR	833251	Function	esil_fini	4783:0:140933:141144							
ANR	833252	FunctionDef	esil_fini (RCore * core)		833251	0					
ANR	833253	CompoundStatement		4783:35:140968:141144	833251	0					
ANR	833254	IdentifierDeclStatement	"const char * pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	4784:1:140971:141035	833251	0	True				
ANR	833255	IdentifierDecl	"* pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		833251	0					
ANR	833256	IdentifierDeclType	const char *		833251	0					
ANR	833257	Identifier	pc		833251	1					
ANR	833258	AssignmentExpression	"* pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		833251	2		=			
ANR	833259	Identifier	pc		833251	0					
ANR	833260	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		833251	1					
ANR	833261	Callee	r_reg_get_name		833251	0					
ANR	833262	Identifier	r_reg_get_name		833251	0					
ANR	833263	ArgumentList	core -> anal -> reg		833251	1					
ANR	833264	Argument	core -> anal -> reg		833251	0					
ANR	833265	PtrMemberAccess	core -> anal -> reg		833251	0					
ANR	833266	PtrMemberAccess	core -> anal		833251	0					
ANR	833267	Identifier	core		833251	0					
ANR	833268	Identifier	anal		833251	1					
ANR	833269	Identifier	reg		833251	1					
ANR	833270	Argument	R_REG_NAME_PC		833251	1					
ANR	833271	Identifier	R_REG_NAME_PC		833251	0					
ANR	833272	ExpressionStatement	"r_reg_arena_poke ( core -> anal -> reg , regstate )"	4785:1:141038:141082	833251	1	True				
ANR	833273	CallExpression	"r_reg_arena_poke ( core -> anal -> reg , regstate )"		833251	0					
ANR	833274	Callee	r_reg_arena_poke		833251	0					
ANR	833275	Identifier	r_reg_arena_poke		833251	0					
ANR	833276	ArgumentList	core -> anal -> reg		833251	1					
ANR	833277	Argument	core -> anal -> reg		833251	0					
ANR	833278	PtrMemberAccess	core -> anal -> reg		833251	0					
ANR	833279	PtrMemberAccess	core -> anal		833251	0					
ANR	833280	Identifier	core		833251	0					
ANR	833281	Identifier	anal		833251	1					
ANR	833282	Identifier	reg		833251	1					
ANR	833283	Argument	regstate		833251	1					
ANR	833284	Identifier	regstate		833251	0					
ANR	833285	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , pc , opc )"	4786:1:141085:141122	833251	2	True				
ANR	833286	CallExpression	"r_reg_setv ( core -> anal -> reg , pc , opc )"		833251	0					
ANR	833287	Callee	r_reg_setv		833251	0					
ANR	833288	Identifier	r_reg_setv		833251	0					
ANR	833289	ArgumentList	core -> anal -> reg		833251	1					
ANR	833290	Argument	core -> anal -> reg		833251	0					
ANR	833291	PtrMemberAccess	core -> anal -> reg		833251	0					
ANR	833292	PtrMemberAccess	core -> anal		833251	0					
ANR	833293	Identifier	core		833251	0					
ANR	833294	Identifier	anal		833251	1					
ANR	833295	Identifier	reg		833251	1					
ANR	833296	Argument	pc		833251	1					
ANR	833297	Identifier	pc		833251	0					
ANR	833298	Argument	opc		833251	2					
ANR	833299	Identifier	opc		833251	0					
ANR	833300	ExpressionStatement	R_FREE ( regstate )	4787:1:141125:141142	833251	3	True				
ANR	833301	CallExpression	R_FREE ( regstate )		833251	0					
ANR	833302	Callee	R_FREE		833251	0					
ANR	833303	Identifier	R_FREE		833251	0					
ANR	833304	ArgumentList	regstate		833251	1					
ANR	833305	Argument	regstate		833251	0					
ANR	833306	Identifier	regstate		833251	0					
ANR	833307	ReturnType	static void		833251	1					
ANR	833308	Identifier	esil_fini		833251	2					
ANR	833309	ParameterList	RCore * core		833251	3					
ANR	833310	Parameter	RCore * core	4783:22:140955:140965	833251	0	True				
ANR	833311	ParameterType	RCore *		833251	0					
ANR	833312	Identifier	core		833251	1					
ANR	833313	CFGEntryNode	ENTRY		833251		True				
ANR	833314	CFGExitNode	EXIT		833251		True				
ANR	833315	Symbol	core		833251						
ANR	833316	Symbol	core -> anal -> reg		833251						
ANR	833317	Symbol	* core -> anal		833251						
ANR	833318	Symbol	pc		833251						
ANR	833319	Symbol	opc		833251						
ANR	833320	Symbol	regstate		833251						
ANR	833321	Symbol	R_REG_NAME_PC		833251						
ANR	833322	Symbol	r_reg_get_name		833251						
ANR	833323	Symbol	* core		833251						
ANR	833324	Symbol	core -> anal		833251						
ANR	833325	Symbol	* * core		833251						
ANR	833326	ClassDef	<unnamed>	4791:8:141162:141249							
ANR	833327	DeclStmt									
ANR	833328	Decl							RList	RList *	regs
ANR	833329	DeclStmt									
ANR	833330	Decl							RList	RList *	regread
ANR	833331	DeclStmt									
ANR	833332	Decl							RList	RList *	regwrite
ANR	833333	DeclStmt									
ANR	833334	Decl							RList	RList *	inputregs
ANR	833335	DeclStmt									
ANR	833336	Decl									AeaStats
ANR	833337	Function	aea_stats_init	4798:0:141252:141451							
ANR	833338	FunctionDef	aea_stats_init (AeaStats * stats)		833337	0					
ANR	833339	CompoundStatement		4798:45:141297:141451	833337	0					
ANR	833340	ExpressionStatement	stats -> regs = r_list_newf ( free )	4799:1:141300:141332	833337	0	True				
ANR	833341	AssignmentExpression	stats -> regs = r_list_newf ( free )		833337	0		=			
ANR	833342	PtrMemberAccess	stats -> regs		833337	0					
ANR	833343	Identifier	stats		833337	0					
ANR	833344	Identifier	regs		833337	1					
ANR	833345	CallExpression	r_list_newf ( free )		833337	1					
ANR	833346	Callee	r_list_newf		833337	0					
ANR	833347	Identifier	r_list_newf		833337	0					
ANR	833348	ArgumentList	free		833337	1					
ANR	833349	Argument	free		833337	0					
ANR	833350	Identifier	free		833337	0					
ANR	833351	ExpressionStatement	stats -> regread = r_list_newf ( free )	4800:1:141335:141370	833337	1	True				
ANR	833352	AssignmentExpression	stats -> regread = r_list_newf ( free )		833337	0		=			
ANR	833353	PtrMemberAccess	stats -> regread		833337	0					
ANR	833354	Identifier	stats		833337	0					
ANR	833355	Identifier	regread		833337	1					
ANR	833356	CallExpression	r_list_newf ( free )		833337	1					
ANR	833357	Callee	r_list_newf		833337	0					
ANR	833358	Identifier	r_list_newf		833337	0					
ANR	833359	ArgumentList	free		833337	1					
ANR	833360	Argument	free		833337	0					
ANR	833361	Identifier	free		833337	0					
ANR	833362	ExpressionStatement	stats -> regwrite = r_list_newf ( free )	4801:1:141373:141409	833337	2	True				
ANR	833363	AssignmentExpression	stats -> regwrite = r_list_newf ( free )		833337	0		=			
ANR	833364	PtrMemberAccess	stats -> regwrite		833337	0					
ANR	833365	Identifier	stats		833337	0					
ANR	833366	Identifier	regwrite		833337	1					
ANR	833367	CallExpression	r_list_newf ( free )		833337	1					
ANR	833368	Callee	r_list_newf		833337	0					
ANR	833369	Identifier	r_list_newf		833337	0					
ANR	833370	ArgumentList	free		833337	1					
ANR	833371	Argument	free		833337	0					
ANR	833372	Identifier	free		833337	0					
ANR	833373	ExpressionStatement	stats -> inputregs = r_list_newf ( free )	4802:1:141412:141449	833337	3	True				
ANR	833374	AssignmentExpression	stats -> inputregs = r_list_newf ( free )		833337	0		=			
ANR	833375	PtrMemberAccess	stats -> inputregs		833337	0					
ANR	833376	Identifier	stats		833337	0					
ANR	833377	Identifier	inputregs		833337	1					
ANR	833378	CallExpression	r_list_newf ( free )		833337	1					
ANR	833379	Callee	r_list_newf		833337	0					
ANR	833380	Identifier	r_list_newf		833337	0					
ANR	833381	ArgumentList	free		833337	1					
ANR	833382	Argument	free		833337	0					
ANR	833383	Identifier	free		833337	0					
ANR	833384	ReturnType	static void		833337	1					
ANR	833385	Identifier	aea_stats_init		833337	2					
ANR	833386	ParameterList	AeaStats * stats		833337	3					
ANR	833387	Parameter	AeaStats * stats	4798:28:141280:141294	833337	0	True				
ANR	833388	ParameterType	AeaStats *		833337	0					
ANR	833389	Identifier	stats		833337	1					
ANR	833390	CFGEntryNode	ENTRY		833337		True				
ANR	833391	CFGExitNode	EXIT		833337		True				
ANR	833392	Symbol	* stats		833337						
ANR	833393	Symbol	stats		833337						
ANR	833394	Symbol	r_list_newf		833337						
ANR	833395	Symbol	stats -> regs		833337						
ANR	833396	Symbol	stats -> inputregs		833337						
ANR	833397	Symbol	free		833337						
ANR	833398	Symbol	stats -> regread		833337						
ANR	833399	Symbol	stats -> regwrite		833337						
ANR	833400	Function	aea_stats_fini	4805:0:141454:141605							
ANR	833401	FunctionDef	aea_stats_fini (AeaStats * stats)		833400	0					
ANR	833402	CompoundStatement		4805:45:141499:141605	833400	0					
ANR	833403	ExpressionStatement	R_FREE ( stats -> regs )	4806:1:141502:141522	833400	0	True				
ANR	833404	CallExpression	R_FREE ( stats -> regs )		833400	0					
ANR	833405	Callee	R_FREE		833400	0					
ANR	833406	Identifier	R_FREE		833400	0					
ANR	833407	ArgumentList	stats -> regs		833400	1					
ANR	833408	Argument	stats -> regs		833400	0					
ANR	833409	PtrMemberAccess	stats -> regs		833400	0					
ANR	833410	Identifier	stats		833400	0					
ANR	833411	Identifier	regs		833400	1					
ANR	833412	ExpressionStatement	R_FREE ( stats -> regread )	4807:1:141525:141548	833400	1	True				
ANR	833413	CallExpression	R_FREE ( stats -> regread )		833400	0					
ANR	833414	Callee	R_FREE		833400	0					
ANR	833415	Identifier	R_FREE		833400	0					
ANR	833416	ArgumentList	stats -> regread		833400	1					
ANR	833417	Argument	stats -> regread		833400	0					
ANR	833418	PtrMemberAccess	stats -> regread		833400	0					
ANR	833419	Identifier	stats		833400	0					
ANR	833420	Identifier	regread		833400	1					
ANR	833421	ExpressionStatement	R_FREE ( stats -> regwrite )	4808:1:141551:141575	833400	2	True				
ANR	833422	CallExpression	R_FREE ( stats -> regwrite )		833400	0					
ANR	833423	Callee	R_FREE		833400	0					
ANR	833424	Identifier	R_FREE		833400	0					
ANR	833425	ArgumentList	stats -> regwrite		833400	1					
ANR	833426	Argument	stats -> regwrite		833400	0					
ANR	833427	PtrMemberAccess	stats -> regwrite		833400	0					
ANR	833428	Identifier	stats		833400	0					
ANR	833429	Identifier	regwrite		833400	1					
ANR	833430	ExpressionStatement	R_FREE ( stats -> inputregs )	4809:1:141578:141603	833400	3	True				
ANR	833431	CallExpression	R_FREE ( stats -> inputregs )		833400	0					
ANR	833432	Callee	R_FREE		833400	0					
ANR	833433	Identifier	R_FREE		833400	0					
ANR	833434	ArgumentList	stats -> inputregs		833400	1					
ANR	833435	Argument	stats -> inputregs		833400	0					
ANR	833436	PtrMemberAccess	stats -> inputregs		833400	0					
ANR	833437	Identifier	stats		833400	0					
ANR	833438	Identifier	inputregs		833400	1					
ANR	833439	ReturnType	static void		833400	1					
ANR	833440	Identifier	aea_stats_fini		833400	2					
ANR	833441	ParameterList	AeaStats * stats		833400	3					
ANR	833442	Parameter	AeaStats * stats	4805:28:141482:141496	833400	0	True				
ANR	833443	ParameterType	AeaStats *		833400	0					
ANR	833444	Identifier	stats		833400	1					
ANR	833445	CFGEntryNode	ENTRY		833400		True				
ANR	833446	CFGExitNode	EXIT		833400		True				
ANR	833447	Symbol	* stats		833400						
ANR	833448	Symbol	stats		833400						
ANR	833449	Symbol	stats -> regs		833400						
ANR	833450	Symbol	stats -> inputregs		833400						
ANR	833451	Symbol	stats -> regread		833400						
ANR	833452	Symbol	stats -> regwrite		833400						
ANR	833453	Function	contains	4812:0:141608:141789							
ANR	833454	FunctionDef	"contains (RList * list , const char * name)"		833453	0					
ANR	833455	CompoundStatement		4812:52:141660:141789	833453	0					
ANR	833456	IdentifierDeclStatement	RListIter * iter ;	4813:1:141663:141678	833453	0	True				
ANR	833457	IdentifierDecl	* iter		833453	0					
ANR	833458	IdentifierDeclType	RListIter *		833453	0					
ANR	833459	Identifier	iter		833453	1					
ANR	833460	IdentifierDeclStatement	const char * n ;	4814:1:141681:141694	833453	1	True				
ANR	833461	IdentifierDecl	* n		833453	0					
ANR	833462	IdentifierDeclType	const char *		833453	0					
ANR	833463	Identifier	n		833453	1					
ANR	833464	Statement	r_list_foreach	4815:1:141697:141710	833453	2	True				
ANR	833465	Statement	(	4815:16:141712:141712	833453	3	True				
ANR	833466	Statement	list	4815:17:141713:141716	833453	4	True				
ANR	833467	Statement	","	4815:21:141717:141717	833453	5	True				
ANR	833468	Statement	iter	4815:23:141719:141722	833453	6	True				
ANR	833469	Statement	","	4815:27:141723:141723	833453	7	True				
ANR	833470	Statement	n	4815:29:141725:141725	833453	8	True				
ANR	833471	Statement	)	4815:30:141726:141726	833453	9	True				
ANR	833472	CompoundStatement		4:32:67:67	833453	10					
ANR	833473	IfStatement	"if ( ! strcmp ( name , n ) )"		833453	0					
ANR	833474	Condition	"! strcmp ( name , n )"	4816:6:141736:141752	833453	0	True				
ANR	833475	UnaryOperationExpression	"! strcmp ( name , n )"		833453	0					
ANR	833476	UnaryOperator	!		833453	0					
ANR	833477	CallExpression	"strcmp ( name , n )"		833453	1					
ANR	833478	Callee	strcmp		833453	0					
ANR	833479	Identifier	strcmp		833453	0					
ANR	833480	ArgumentList	name		833453	1					
ANR	833481	Argument	name		833453	0					
ANR	833482	Identifier	name		833453	0					
ANR	833483	Argument	n		833453	1					
ANR	833484	Identifier	n		833453	0					
ANR	833485	ReturnStatement	return true ;	4817:3:141758:141769	833453	1	True				
ANR	833486	Identifier	true		833453	0					
ANR	833487	ReturnStatement	return false ;	4819:1:141775:141787	833453	11	True				
ANR	833488	Identifier	false		833453	0					
ANR	833489	ReturnType	static bool		833453	1					
ANR	833490	Identifier	contains		833453	2					
ANR	833491	ParameterList	"RList * list , const char * name"		833453	3					
ANR	833492	Parameter	RList * list	4812:21:141629:141639	833453	0	True				
ANR	833493	ParameterType	RList *		833453	0					
ANR	833494	Identifier	list		833453	1					
ANR	833495	Parameter	const char * name	4812:34:141642:141657	833453	1	True				
ANR	833496	ParameterType	const char *		833453	0					
ANR	833497	Identifier	name		833453	1					
ANR	833498	CFGEntryNode	ENTRY		833453		True				
ANR	833499	CFGExitNode	EXIT		833453		True				
ANR	833500	Symbol	strcmp		833453						
ANR	833501	Symbol	name		833453						
ANR	833502	Symbol	true		833453						
ANR	833503	Symbol	false		833453						
ANR	833504	Symbol	iter		833453						
ANR	833505	Symbol	list		833453						
ANR	833506	Symbol	n		833453						
ANR	833507	DeclStmt									
ANR	833508	Decl							char	char *	oldregread
ANR	833509	DeclStmt									
ANR	833510	Decl							RList	RList *	mymemxsr
ANR	833511	DeclStmt									
ANR	833512	Decl							RList	RList *	mymemxsw
ANR	833513	ClassDef	<unnamed>	4827:8:141966:142010							
ANR	833514	DeclStmt									
ANR	833515	Decl							ut64	ut64	addr
ANR	833516	DeclStmt									
ANR	833517	Decl							int	int	size
ANR	833518	DeclStmt									
ANR	833519	Decl									AeaMemItem
ANR	833520	Function	mymemwrite	4832:0:142013:142403							
ANR	833521	FunctionDef	"mymemwrite (RAnalEsil * esil , ut64 addr , const ut8 * buf , int len)"		833520	0					
ANR	833522	CompoundStatement		4832:75:142088:142403	833520	0					
ANR	833523	IdentifierDeclStatement	RListIter * iter ;	4833:1:142091:142106	833520	0	True				
ANR	833524	IdentifierDecl	* iter		833520	0					
ANR	833525	IdentifierDeclType	RListIter *		833520	0					
ANR	833526	Identifier	iter		833520	1					
ANR	833527	IdentifierDeclStatement	AeaMemItem * n ;	4834:1:142109:142122	833520	1	True				
ANR	833528	IdentifierDecl	* n		833520	0					
ANR	833529	IdentifierDeclType	AeaMemItem *		833520	0					
ANR	833530	Identifier	n		833520	1					
ANR	833531	Statement	r_list_foreach	4835:1:142125:142138	833520	2	True				
ANR	833532	Statement	(	4835:16:142140:142140	833520	3	True				
ANR	833533	Statement	mymemxsw	4835:17:142141:142148	833520	4	True				
ANR	833534	Statement	","	4835:25:142149:142149	833520	5	True				
ANR	833535	Statement	iter	4835:27:142151:142154	833520	6	True				
ANR	833536	Statement	","	4835:31:142155:142155	833520	7	True				
ANR	833537	Statement	n	4835:33:142157:142157	833520	8	True				
ANR	833538	Statement	)	4835:34:142158:142158	833520	9	True				
ANR	833539	CompoundStatement		4:36:71:71	833520	10					
ANR	833540	IfStatement	if ( addr == n -> addr )		833520	0					
ANR	833541	Condition	addr == n -> addr	4836:6:142168:142182	833520	0	True				
ANR	833542	EqualityExpression	addr == n -> addr		833520	0		==			
ANR	833543	Identifier	addr		833520	0					
ANR	833544	PtrMemberAccess	n -> addr		833520	1					
ANR	833545	Identifier	n		833520	0					
ANR	833546	Identifier	addr		833520	1					
ANR	833547	CompoundStatement		5:23:96:96	833520	1					
ANR	833548	ReturnStatement	return len ;	4837:3:142190:142200	833520	0	True				
ANR	833549	Identifier	len		833520	0					
ANR	833550	IfStatement	"if ( ! r_io_is_valid_offset ( esil -> anal -> iob . io , addr , 0 ) )"		833520	11					
ANR	833551	Condition	"! r_io_is_valid_offset ( esil -> anal -> iob . io , addr , 0 )"	4840:5:142214:142264	833520	0	True				
ANR	833552	UnaryOperationExpression	"! r_io_is_valid_offset ( esil -> anal -> iob . io , addr , 0 )"		833520	0					
ANR	833553	UnaryOperator	!		833520	0					
ANR	833554	CallExpression	"r_io_is_valid_offset ( esil -> anal -> iob . io , addr , 0 )"		833520	1					
ANR	833555	Callee	r_io_is_valid_offset		833520	0					
ANR	833556	Identifier	r_io_is_valid_offset		833520	0					
ANR	833557	ArgumentList	esil -> anal -> iob . io		833520	1					
ANR	833558	Argument	esil -> anal -> iob . io		833520	0					
ANR	833559	MemberAccess	esil -> anal -> iob . io		833520	0					
ANR	833560	PtrMemberAccess	esil -> anal -> iob		833520	0					
ANR	833561	PtrMemberAccess	esil -> anal		833520	0					
ANR	833562	Identifier	esil		833520	0					
ANR	833563	Identifier	anal		833520	1					
ANR	833564	Identifier	iob		833520	1					
ANR	833565	Identifier	io		833520	1					
ANR	833566	Argument	addr		833520	1					
ANR	833567	Identifier	addr		833520	0					
ANR	833568	Argument	0		833520	2					
ANR	833569	PrimaryExpression	0		833520	0					
ANR	833570	CompoundStatement		9:58:178:178	833520	1					
ANR	833571	ReturnStatement	return false ;	4841:2:142271:142283	833520	0	True				
ANR	833572	Identifier	false		833520	0					
ANR	833573	ExpressionStatement	n = R_NEW ( AeaMemItem )	4843:1:142289:142311	833520	12	True				
ANR	833574	AssignmentExpression	n = R_NEW ( AeaMemItem )		833520	0		=			
ANR	833575	Identifier	n		833520	0					
ANR	833576	CallExpression	R_NEW ( AeaMemItem )		833520	1					
ANR	833577	Callee	R_NEW		833520	0					
ANR	833578	Identifier	R_NEW		833520	0					
ANR	833579	ArgumentList	AeaMemItem		833520	1					
ANR	833580	Argument	AeaMemItem		833520	0					
ANR	833581	Identifier	AeaMemItem		833520	0					
ANR	833582	IfStatement	if ( n )		833520	13					
ANR	833583	Condition	n	4844:5:142318:142318	833520	0	True				
ANR	833584	Identifier	n		833520	0					
ANR	833585	CompoundStatement		13:8:232:232	833520	1					
ANR	833586	ExpressionStatement	n -> addr = addr	4845:2:142325:142339	833520	0	True				
ANR	833587	AssignmentExpression	n -> addr = addr		833520	0		=			
ANR	833588	PtrMemberAccess	n -> addr		833520	0					
ANR	833589	Identifier	n		833520	0					
ANR	833590	Identifier	addr		833520	1					
ANR	833591	Identifier	addr		833520	1					
ANR	833592	ExpressionStatement	n -> size = len	4846:2:142343:142356	833520	1	True				
ANR	833593	AssignmentExpression	n -> size = len		833520	0		=			
ANR	833594	PtrMemberAccess	n -> size		833520	0					
ANR	833595	Identifier	n		833520	0					
ANR	833596	Identifier	size		833520	1					
ANR	833597	Identifier	len		833520	1					
ANR	833598	ExpressionStatement	"r_list_push ( mymemxsw , n )"	4847:2:142360:142385	833520	2	True				
ANR	833599	CallExpression	"r_list_push ( mymemxsw , n )"		833520	0					
ANR	833600	Callee	r_list_push		833520	0					
ANR	833601	Identifier	r_list_push		833520	0					
ANR	833602	ArgumentList	mymemxsw		833520	1					
ANR	833603	Argument	mymemxsw		833520	0					
ANR	833604	Identifier	mymemxsw		833520	0					
ANR	833605	Argument	n		833520	1					
ANR	833606	Identifier	n		833520	0					
ANR	833607	ReturnStatement	return len ;	4849:1:142391:142401	833520	14	True				
ANR	833608	Identifier	len		833520	0					
ANR	833609	ReturnType	static int		833520	1					
ANR	833610	Identifier	mymemwrite		833520	2					
ANR	833611	ParameterList	"RAnalEsil * esil , ut64 addr , const ut8 * buf , int len"		833520	3					
ANR	833612	Parameter	RAnalEsil * esil	4832:22:142035:142049	833520	0	True				
ANR	833613	ParameterType	RAnalEsil *		833520	0					
ANR	833614	Identifier	esil		833520	1					
ANR	833615	Parameter	ut64 addr	4832:39:142052:142060	833520	1	True				
ANR	833616	ParameterType	ut64		833520	0					
ANR	833617	Identifier	addr		833520	1					
ANR	833618	Parameter	const ut8 * buf	4832:50:142063:142076	833520	2	True				
ANR	833619	ParameterType	const ut8 *		833520	0					
ANR	833620	Identifier	buf		833520	1					
ANR	833621	Parameter	int len	4832:66:142079:142085	833520	3	True				
ANR	833622	ParameterType	int		833520	0					
ANR	833623	Identifier	len		833520	1					
ANR	833624	CFGEntryNode	ENTRY		833520		True				
ANR	833625	CFGExitNode	EXIT		833520		True				
ANR	833626	Symbol	esil -> anal -> iob . io		833520						
ANR	833627	Symbol	* esil -> anal		833520						
ANR	833628	Symbol	r_io_is_valid_offset		833520						
ANR	833629	Symbol	mymemxsw		833520						
ANR	833630	Symbol	false		833520						
ANR	833631	Symbol	iter		833520						
ANR	833632	Symbol	esil -> anal -> iob		833520						
ANR	833633	Symbol	* * esil		833520						
ANR	833634	Symbol	n -> addr		833520						
ANR	833635	Symbol	n		833520						
ANR	833636	Symbol	buf		833520						
ANR	833637	Symbol	esil -> anal		833520						
ANR	833638	Symbol	len		833520						
ANR	833639	Symbol	n -> size		833520						
ANR	833640	Symbol	* n		833520						
ANR	833641	Symbol	AeaMemItem		833520						
ANR	833642	Symbol	* esil		833520						
ANR	833643	Symbol	addr		833520						
ANR	833644	Symbol	R_NEW		833520						
ANR	833645	Symbol	esil		833520						
ANR	833646	Function	mymemread	4852:0:142406:142789							
ANR	833647	FunctionDef	"mymemread (RAnalEsil * esil , ut64 addr , ut8 * buf , int len)"		833646	0					
ANR	833648	CompoundStatement		4852:68:142474:142789	833646	0					
ANR	833649	IdentifierDeclStatement	RListIter * iter ;	4853:1:142477:142492	833646	0	True				
ANR	833650	IdentifierDecl	* iter		833646	0					
ANR	833651	IdentifierDeclType	RListIter *		833646	0					
ANR	833652	Identifier	iter		833646	1					
ANR	833653	IdentifierDeclStatement	AeaMemItem * n ;	4854:1:142495:142508	833646	1	True				
ANR	833654	IdentifierDecl	* n		833646	0					
ANR	833655	IdentifierDeclType	AeaMemItem *		833646	0					
ANR	833656	Identifier	n		833646	1					
ANR	833657	Statement	r_list_foreach	4855:1:142511:142524	833646	2	True				
ANR	833658	Statement	(	4855:16:142526:142526	833646	3	True				
ANR	833659	Statement	mymemxsr	4855:17:142527:142534	833646	4	True				
ANR	833660	Statement	","	4855:25:142535:142535	833646	5	True				
ANR	833661	Statement	iter	4855:27:142537:142540	833646	6	True				
ANR	833662	Statement	","	4855:31:142541:142541	833646	7	True				
ANR	833663	Statement	n	4855:33:142543:142543	833646	8	True				
ANR	833664	Statement	)	4855:34:142544:142544	833646	9	True				
ANR	833665	CompoundStatement		4:36:71:71	833646	10					
ANR	833666	IfStatement	if ( addr == n -> addr )		833646	0					
ANR	833667	Condition	addr == n -> addr	4856:6:142554:142568	833646	0	True				
ANR	833668	EqualityExpression	addr == n -> addr		833646	0		==			
ANR	833669	Identifier	addr		833646	0					
ANR	833670	PtrMemberAccess	n -> addr		833646	1					
ANR	833671	Identifier	n		833646	0					
ANR	833672	Identifier	addr		833646	1					
ANR	833673	CompoundStatement		5:23:96:96	833646	1					
ANR	833674	ReturnStatement	return len ;	4857:3:142576:142586	833646	0	True				
ANR	833675	Identifier	len		833646	0					
ANR	833676	IfStatement	"if ( ! r_io_is_valid_offset ( esil -> anal -> iob . io , addr , 0 ) )"		833646	11					
ANR	833677	Condition	"! r_io_is_valid_offset ( esil -> anal -> iob . io , addr , 0 )"	4860:5:142600:142650	833646	0	True				
ANR	833678	UnaryOperationExpression	"! r_io_is_valid_offset ( esil -> anal -> iob . io , addr , 0 )"		833646	0					
ANR	833679	UnaryOperator	!		833646	0					
ANR	833680	CallExpression	"r_io_is_valid_offset ( esil -> anal -> iob . io , addr , 0 )"		833646	1					
ANR	833681	Callee	r_io_is_valid_offset		833646	0					
ANR	833682	Identifier	r_io_is_valid_offset		833646	0					
ANR	833683	ArgumentList	esil -> anal -> iob . io		833646	1					
ANR	833684	Argument	esil -> anal -> iob . io		833646	0					
ANR	833685	MemberAccess	esil -> anal -> iob . io		833646	0					
ANR	833686	PtrMemberAccess	esil -> anal -> iob		833646	0					
ANR	833687	PtrMemberAccess	esil -> anal		833646	0					
ANR	833688	Identifier	esil		833646	0					
ANR	833689	Identifier	anal		833646	1					
ANR	833690	Identifier	iob		833646	1					
ANR	833691	Identifier	io		833646	1					
ANR	833692	Argument	addr		833646	1					
ANR	833693	Identifier	addr		833646	0					
ANR	833694	Argument	0		833646	2					
ANR	833695	PrimaryExpression	0		833646	0					
ANR	833696	CompoundStatement		9:58:178:178	833646	1					
ANR	833697	ReturnStatement	return false ;	4861:2:142657:142669	833646	0	True				
ANR	833698	Identifier	false		833646	0					
ANR	833699	ExpressionStatement	n = R_NEW ( AeaMemItem )	4863:1:142675:142697	833646	12	True				
ANR	833700	AssignmentExpression	n = R_NEW ( AeaMemItem )		833646	0		=			
ANR	833701	Identifier	n		833646	0					
ANR	833702	CallExpression	R_NEW ( AeaMemItem )		833646	1					
ANR	833703	Callee	R_NEW		833646	0					
ANR	833704	Identifier	R_NEW		833646	0					
ANR	833705	ArgumentList	AeaMemItem		833646	1					
ANR	833706	Argument	AeaMemItem		833646	0					
ANR	833707	Identifier	AeaMemItem		833646	0					
ANR	833708	IfStatement	if ( n )		833646	13					
ANR	833709	Condition	n	4864:5:142704:142704	833646	0	True				
ANR	833710	Identifier	n		833646	0					
ANR	833711	CompoundStatement		13:8:232:232	833646	1					
ANR	833712	ExpressionStatement	n -> addr = addr	4865:2:142711:142725	833646	0	True				
ANR	833713	AssignmentExpression	n -> addr = addr		833646	0		=			
ANR	833714	PtrMemberAccess	n -> addr		833646	0					
ANR	833715	Identifier	n		833646	0					
ANR	833716	Identifier	addr		833646	1					
ANR	833717	Identifier	addr		833646	1					
ANR	833718	ExpressionStatement	n -> size = len	4866:2:142729:142742	833646	1	True				
ANR	833719	AssignmentExpression	n -> size = len		833646	0		=			
ANR	833720	PtrMemberAccess	n -> size		833646	0					
ANR	833721	Identifier	n		833646	0					
ANR	833722	Identifier	size		833646	1					
ANR	833723	Identifier	len		833646	1					
ANR	833724	ExpressionStatement	"r_list_push ( mymemxsr , n )"	4867:2:142746:142771	833646	2	True				
ANR	833725	CallExpression	"r_list_push ( mymemxsr , n )"		833646	0					
ANR	833726	Callee	r_list_push		833646	0					
ANR	833727	Identifier	r_list_push		833646	0					
ANR	833728	ArgumentList	mymemxsr		833646	1					
ANR	833729	Argument	mymemxsr		833646	0					
ANR	833730	Identifier	mymemxsr		833646	0					
ANR	833731	Argument	n		833646	1					
ANR	833732	Identifier	n		833646	0					
ANR	833733	ReturnStatement	return len ;	4869:1:142777:142787	833646	14	True				
ANR	833734	Identifier	len		833646	0					
ANR	833735	ReturnType	static int		833646	1					
ANR	833736	Identifier	mymemread		833646	2					
ANR	833737	ParameterList	"RAnalEsil * esil , ut64 addr , ut8 * buf , int len"		833646	3					
ANR	833738	Parameter	RAnalEsil * esil	4852:21:142427:142441	833646	0	True				
ANR	833739	ParameterType	RAnalEsil *		833646	0					
ANR	833740	Identifier	esil		833646	1					
ANR	833741	Parameter	ut64 addr	4852:38:142444:142452	833646	1	True				
ANR	833742	ParameterType	ut64		833646	0					
ANR	833743	Identifier	addr		833646	1					
ANR	833744	Parameter	ut8 * buf	4852:49:142455:142462	833646	2	True				
ANR	833745	ParameterType	ut8 *		833646	0					
ANR	833746	Identifier	buf		833646	1					
ANR	833747	Parameter	int len	4852:59:142465:142471	833646	3	True				
ANR	833748	ParameterType	int		833646	0					
ANR	833749	Identifier	len		833646	1					
ANR	833750	CFGEntryNode	ENTRY		833646		True				
ANR	833751	CFGExitNode	EXIT		833646		True				
ANR	833752	Symbol	esil -> anal -> iob . io		833646						
ANR	833753	Symbol	* esil -> anal		833646						
ANR	833754	Symbol	r_io_is_valid_offset		833646						
ANR	833755	Symbol	false		833646						
ANR	833756	Symbol	iter		833646						
ANR	833757	Symbol	esil -> anal -> iob		833646						
ANR	833758	Symbol	* * esil		833646						
ANR	833759	Symbol	n -> addr		833646						
ANR	833760	Symbol	n		833646						
ANR	833761	Symbol	buf		833646						
ANR	833762	Symbol	esil -> anal		833646						
ANR	833763	Symbol	len		833646						
ANR	833764	Symbol	n -> size		833646						
ANR	833765	Symbol	* n		833646						
ANR	833766	Symbol	AeaMemItem		833646						
ANR	833767	Symbol	* esil		833646						
ANR	833768	Symbol	mymemxsr		833646						
ANR	833769	Symbol	addr		833646						
ANR	833770	Symbol	R_NEW		833646						
ANR	833771	Symbol	esil		833646						
ANR	833772	Function	myregwrite	4872:0:142792:143222							
ANR	833773	FunctionDef	"myregwrite (RAnalEsil * esil , const char * name , ut64 * val)"		833772	0					
ANR	833774	CompoundStatement		4872:68:142860:143222	833772	0					
ANR	833775	IdentifierDeclStatement	AeaStats * stats = esil -> user ;	4873:1:142863:142891	833772	0	True				
ANR	833776	IdentifierDecl	* stats = esil -> user		833772	0					
ANR	833777	IdentifierDeclType	AeaStats *		833772	0					
ANR	833778	Identifier	stats		833772	1					
ANR	833779	AssignmentExpression	* stats = esil -> user		833772	2		=			
ANR	833780	Identifier	stats		833772	0					
ANR	833781	PtrMemberAccess	esil -> user		833772	1					
ANR	833782	Identifier	esil		833772	0					
ANR	833783	Identifier	user		833772	1					
ANR	833784	IfStatement	"if ( oldregread && ! strcmp ( name , oldregread ) )"		833772	1					
ANR	833785	Condition	"oldregread && ! strcmp ( name , oldregread )"	4874:5:142898:142937	833772	0	True				
ANR	833786	AndExpression	"oldregread && ! strcmp ( name , oldregread )"		833772	0		&&			
ANR	833787	Identifier	oldregread		833772	0					
ANR	833788	UnaryOperationExpression	"! strcmp ( name , oldregread )"		833772	1					
ANR	833789	UnaryOperator	!		833772	0					
ANR	833790	CallExpression	"strcmp ( name , oldregread )"		833772	1					
ANR	833791	Callee	strcmp		833772	0					
ANR	833792	Identifier	strcmp		833772	0					
ANR	833793	ArgumentList	name		833772	1					
ANR	833794	Argument	name		833772	0					
ANR	833795	Identifier	name		833772	0					
ANR	833796	Argument	oldregread		833772	1					
ANR	833797	Identifier	oldregread		833772	0					
ANR	833798	CompoundStatement		3:47:79:79	833772	1					
ANR	833799	ExpressionStatement	r_list_pop ( stats -> regread )	4875:2:142944:142971	833772	0	True				
ANR	833800	CallExpression	r_list_pop ( stats -> regread )		833772	0					
ANR	833801	Callee	r_list_pop		833772	0					
ANR	833802	Identifier	r_list_pop		833772	0					
ANR	833803	ArgumentList	stats -> regread		833772	1					
ANR	833804	Argument	stats -> regread		833772	0					
ANR	833805	PtrMemberAccess	stats -> regread		833772	0					
ANR	833806	Identifier	stats		833772	0					
ANR	833807	Identifier	regread		833772	1					
ANR	833808	Statement	R_FREE	4876:2:142975:142980	833772	1	True				
ANR	833809	Statement	(	4876:9:142982:142982	833772	2	True				
ANR	833810	Statement	oldregread	4876:10:142983:142992	833772	3	True				
ANR	833811	Statement	)	4876:20:142993:142993	833772	4	True				
ANR	833812	IfStatement	if ( ! IS_DIGIT ( * name ) )		833772	2					
ANR	833813	Condition	! IS_DIGIT ( * name )	4878:5:143003:143019	833772	0	True				
ANR	833814	UnaryOperationExpression	! IS_DIGIT ( * name )		833772	0					
ANR	833815	UnaryOperator	!		833772	0					
ANR	833816	CallExpression	IS_DIGIT ( * name )		833772	1					
ANR	833817	Callee	IS_DIGIT		833772	0					
ANR	833818	Identifier	IS_DIGIT		833772	0					
ANR	833819	ArgumentList	* name		833772	1					
ANR	833820	Argument	* name		833772	0					
ANR	833821	UnaryOperationExpression	* name		833772	0					
ANR	833822	UnaryOperator	*		833772	0					
ANR	833823	Identifier	name		833772	1					
ANR	833824	CompoundStatement		7:24:161:161	833772	1					
ANR	833825	IfStatement	"if ( ! contains ( stats -> regs , name ) )"		833772	0					
ANR	833826	Condition	"! contains ( stats -> regs , name )"	4879:6:143030:143058	833772	0	True				
ANR	833827	UnaryOperationExpression	"! contains ( stats -> regs , name )"		833772	0					
ANR	833828	UnaryOperator	!		833772	0					
ANR	833829	CallExpression	"contains ( stats -> regs , name )"		833772	1					
ANR	833830	Callee	contains		833772	0					
ANR	833831	Identifier	contains		833772	0					
ANR	833832	ArgumentList	stats -> regs		833772	1					
ANR	833833	Argument	stats -> regs		833772	0					
ANR	833834	PtrMemberAccess	stats -> regs		833772	0					
ANR	833835	Identifier	stats		833772	0					
ANR	833836	Identifier	regs		833772	1					
ANR	833837	Argument	name		833772	1					
ANR	833838	Identifier	name		833772	0					
ANR	833839	CompoundStatement		8:37:200:200	833772	1					
ANR	833840	ExpressionStatement	"r_list_push ( stats -> regs , strdup ( name ) )"	4880:3:143066:143106	833772	0	True				
ANR	833841	CallExpression	"r_list_push ( stats -> regs , strdup ( name ) )"		833772	0					
ANR	833842	Callee	r_list_push		833772	0					
ANR	833843	Identifier	r_list_push		833772	0					
ANR	833844	ArgumentList	stats -> regs		833772	1					
ANR	833845	Argument	stats -> regs		833772	0					
ANR	833846	PtrMemberAccess	stats -> regs		833772	0					
ANR	833847	Identifier	stats		833772	0					
ANR	833848	Identifier	regs		833772	1					
ANR	833849	Argument	strdup ( name )		833772	1					
ANR	833850	CallExpression	strdup ( name )		833772	0					
ANR	833851	Callee	strdup		833772	0					
ANR	833852	Identifier	strdup		833772	0					
ANR	833853	ArgumentList	name		833772	1					
ANR	833854	Argument	name		833772	0					
ANR	833855	Identifier	name		833772	0					
ANR	833856	IfStatement	"if ( ! contains ( stats -> regwrite , name ) )"		833772	1					
ANR	833857	Condition	"! contains ( stats -> regwrite , name )"	4882:6:143118:143150	833772	0	True				
ANR	833858	UnaryOperationExpression	"! contains ( stats -> regwrite , name )"		833772	0					
ANR	833859	UnaryOperator	!		833772	0					
ANR	833860	CallExpression	"contains ( stats -> regwrite , name )"		833772	1					
ANR	833861	Callee	contains		833772	0					
ANR	833862	Identifier	contains		833772	0					
ANR	833863	ArgumentList	stats -> regwrite		833772	1					
ANR	833864	Argument	stats -> regwrite		833772	0					
ANR	833865	PtrMemberAccess	stats -> regwrite		833772	0					
ANR	833866	Identifier	stats		833772	0					
ANR	833867	Identifier	regwrite		833772	1					
ANR	833868	Argument	name		833772	1					
ANR	833869	Identifier	name		833772	0					
ANR	833870	CompoundStatement		11:41:292:292	833772	1					
ANR	833871	ExpressionStatement	"r_list_push ( stats -> regwrite , strdup ( name ) )"	4883:3:143158:143202	833772	0	True				
ANR	833872	CallExpression	"r_list_push ( stats -> regwrite , strdup ( name ) )"		833772	0					
ANR	833873	Callee	r_list_push		833772	0					
ANR	833874	Identifier	r_list_push		833772	0					
ANR	833875	ArgumentList	stats -> regwrite		833772	1					
ANR	833876	Argument	stats -> regwrite		833772	0					
ANR	833877	PtrMemberAccess	stats -> regwrite		833772	0					
ANR	833878	Identifier	stats		833772	0					
ANR	833879	Identifier	regwrite		833772	1					
ANR	833880	Argument	strdup ( name )		833772	1					
ANR	833881	CallExpression	strdup ( name )		833772	0					
ANR	833882	Callee	strdup		833772	0					
ANR	833883	Identifier	strdup		833772	0					
ANR	833884	ArgumentList	name		833772	1					
ANR	833885	Argument	name		833772	0					
ANR	833886	Identifier	name		833772	0					
ANR	833887	ReturnStatement	return 0 ;	4886:1:143212:143220	833772	3	True				
ANR	833888	PrimaryExpression	0		833772	0					
ANR	833889	ReturnType	static int		833772	1					
ANR	833890	Identifier	myregwrite		833772	2					
ANR	833891	ParameterList	"RAnalEsil * esil , const char * name , ut64 * val"		833772	3					
ANR	833892	Parameter	RAnalEsil * esil	4872:22:142814:142828	833772	0	True				
ANR	833893	ParameterType	RAnalEsil *		833772	0					
ANR	833894	Identifier	esil		833772	1					
ANR	833895	Parameter	const char * name	4872:39:142831:142846	833772	1	True				
ANR	833896	ParameterType	const char *		833772	0					
ANR	833897	Identifier	name		833772	1					
ANR	833898	Parameter	ut64 * val	4872:57:142849:142857	833772	2	True				
ANR	833899	ParameterType	ut64 *		833772	0					
ANR	833900	Identifier	val		833772	1					
ANR	833901	CFGEntryNode	ENTRY		833772		True				
ANR	833902	CFGExitNode	EXIT		833772		True				
ANR	833903	Symbol	val		833772						
ANR	833904	Symbol	strcmp		833772						
ANR	833905	Symbol	* name		833772						
ANR	833906	Symbol	* stats		833772						
ANR	833907	Symbol	stats -> regs		833772						
ANR	833908	Symbol	oldregread		833772						
ANR	833909	Symbol	IS_DIGIT		833772						
ANR	833910	Symbol	contains		833772						
ANR	833911	Symbol	stats		833772						
ANR	833912	Symbol	name		833772						
ANR	833913	Symbol	* esil		833772						
ANR	833914	Symbol	strdup		833772						
ANR	833915	Symbol	stats -> regread		833772						
ANR	833916	Symbol	esil		833772						
ANR	833917	Symbol	esil -> user		833772						
ANR	833918	Symbol	stats -> regwrite		833772						
ANR	833919	Function	myregread	4889:0:143225:143705							
ANR	833920	FunctionDef	"myregread (RAnalEsil * esil , const char * name , ut64 * val , int * len)"		833919	0					
ANR	833921	CompoundStatement		4889:77:143302:143705	833919	0					
ANR	833922	IdentifierDeclStatement	AeaStats * stats = esil -> user ;	4890:1:143305:143333	833919	0	True				
ANR	833923	IdentifierDecl	* stats = esil -> user		833919	0					
ANR	833924	IdentifierDeclType	AeaStats *		833919	0					
ANR	833925	Identifier	stats		833919	1					
ANR	833926	AssignmentExpression	* stats = esil -> user		833919	2		=			
ANR	833927	Identifier	stats		833919	0					
ANR	833928	PtrMemberAccess	esil -> user		833919	1					
ANR	833929	Identifier	esil		833919	0					
ANR	833930	Identifier	user		833919	1					
ANR	833931	IfStatement	if ( ! IS_DIGIT ( * name ) )		833919	1					
ANR	833932	Condition	! IS_DIGIT ( * name )	4891:5:143340:143356	833919	0	True				
ANR	833933	UnaryOperationExpression	! IS_DIGIT ( * name )		833919	0					
ANR	833934	UnaryOperator	!		833919	0					
ANR	833935	CallExpression	IS_DIGIT ( * name )		833919	1					
ANR	833936	Callee	IS_DIGIT		833919	0					
ANR	833937	Identifier	IS_DIGIT		833919	0					
ANR	833938	ArgumentList	* name		833919	1					
ANR	833939	Argument	* name		833919	0					
ANR	833940	UnaryOperationExpression	* name		833919	0					
ANR	833941	UnaryOperator	*		833919	0					
ANR	833942	Identifier	name		833919	1					
ANR	833943	CompoundStatement		3:24:56:56	833919	1					
ANR	833944	IfStatement	"if ( ! contains ( stats -> inputregs , name ) )"		833919	0					
ANR	833945	Condition	"! contains ( stats -> inputregs , name )"	4892:6:143367:143400	833919	0	True				
ANR	833946	UnaryOperationExpression	"! contains ( stats -> inputregs , name )"		833919	0					
ANR	833947	UnaryOperator	!		833919	0					
ANR	833948	CallExpression	"contains ( stats -> inputregs , name )"		833919	1					
ANR	833949	Callee	contains		833919	0					
ANR	833950	Identifier	contains		833919	0					
ANR	833951	ArgumentList	stats -> inputregs		833919	1					
ANR	833952	Argument	stats -> inputregs		833919	0					
ANR	833953	PtrMemberAccess	stats -> inputregs		833919	0					
ANR	833954	Identifier	stats		833919	0					
ANR	833955	Identifier	inputregs		833919	1					
ANR	833956	Argument	name		833919	1					
ANR	833957	Identifier	name		833919	0					
ANR	833958	CompoundStatement		4:42:100:100	833919	1					
ANR	833959	IfStatement	"if ( ! contains ( stats -> regwrite , name ) )"		833919	0					
ANR	833960	Condition	"! contains ( stats -> regwrite , name )"	4893:7:143412:143444	833919	0	True				
ANR	833961	UnaryOperationExpression	"! contains ( stats -> regwrite , name )"		833919	0					
ANR	833962	UnaryOperator	!		833919	0					
ANR	833963	CallExpression	"contains ( stats -> regwrite , name )"		833919	1					
ANR	833964	Callee	contains		833919	0					
ANR	833965	Identifier	contains		833919	0					
ANR	833966	ArgumentList	stats -> regwrite		833919	1					
ANR	833967	Argument	stats -> regwrite		833919	0					
ANR	833968	PtrMemberAccess	stats -> regwrite		833919	0					
ANR	833969	Identifier	stats		833919	0					
ANR	833970	Identifier	regwrite		833919	1					
ANR	833971	Argument	name		833919	1					
ANR	833972	Identifier	name		833919	0					
ANR	833973	CompoundStatement		5:42:144:144	833919	1					
ANR	833974	ExpressionStatement	"r_list_push ( stats -> inputregs , strdup ( name ) )"	4894:4:143453:143498	833919	0	True				
ANR	833975	CallExpression	"r_list_push ( stats -> inputregs , strdup ( name ) )"		833919	0					
ANR	833976	Callee	r_list_push		833919	0					
ANR	833977	Identifier	r_list_push		833919	0					
ANR	833978	ArgumentList	stats -> inputregs		833919	1					
ANR	833979	Argument	stats -> inputregs		833919	0					
ANR	833980	PtrMemberAccess	stats -> inputregs		833919	0					
ANR	833981	Identifier	stats		833919	0					
ANR	833982	Identifier	inputregs		833919	1					
ANR	833983	Argument	strdup ( name )		833919	1					
ANR	833984	CallExpression	strdup ( name )		833919	0					
ANR	833985	Callee	strdup		833919	0					
ANR	833986	Identifier	strdup		833919	0					
ANR	833987	ArgumentList	name		833919	1					
ANR	833988	Argument	name		833919	0					
ANR	833989	Identifier	name		833919	0					
ANR	833990	IfStatement	"if ( ! contains ( stats -> regs , name ) )"		833919	1					
ANR	833991	Condition	"! contains ( stats -> regs , name )"	4897:6:143515:143543	833919	0	True				
ANR	833992	UnaryOperationExpression	"! contains ( stats -> regs , name )"		833919	0					
ANR	833993	UnaryOperator	!		833919	0					
ANR	833994	CallExpression	"contains ( stats -> regs , name )"		833919	1					
ANR	833995	Callee	contains		833919	0					
ANR	833996	Identifier	contains		833919	0					
ANR	833997	ArgumentList	stats -> regs		833919	1					
ANR	833998	Argument	stats -> regs		833919	0					
ANR	833999	PtrMemberAccess	stats -> regs		833919	0					
ANR	834000	Identifier	stats		833919	0					
ANR	834001	Identifier	regs		833919	1					
ANR	834002	Argument	name		833919	1					
ANR	834003	Identifier	name		833919	0					
ANR	834004	CompoundStatement		9:37:243:243	833919	1					
ANR	834005	ExpressionStatement	"r_list_push ( stats -> regs , strdup ( name ) )"	4898:3:143551:143591	833919	0	True				
ANR	834006	CallExpression	"r_list_push ( stats -> regs , strdup ( name ) )"		833919	0					
ANR	834007	Callee	r_list_push		833919	0					
ANR	834008	Identifier	r_list_push		833919	0					
ANR	834009	ArgumentList	stats -> regs		833919	1					
ANR	834010	Argument	stats -> regs		833919	0					
ANR	834011	PtrMemberAccess	stats -> regs		833919	0					
ANR	834012	Identifier	stats		833919	0					
ANR	834013	Identifier	regs		833919	1					
ANR	834014	Argument	strdup ( name )		833919	1					
ANR	834015	CallExpression	strdup ( name )		833919	0					
ANR	834016	Callee	strdup		833919	0					
ANR	834017	Identifier	strdup		833919	0					
ANR	834018	ArgumentList	name		833919	1					
ANR	834019	Argument	name		833919	0					
ANR	834020	Identifier	name		833919	0					
ANR	834021	IfStatement	"if ( ! contains ( stats -> regread , name ) )"		833919	2					
ANR	834022	Condition	"! contains ( stats -> regread , name )"	4900:6:143603:143634	833919	0	True				
ANR	834023	UnaryOperationExpression	"! contains ( stats -> regread , name )"		833919	0					
ANR	834024	UnaryOperator	!		833919	0					
ANR	834025	CallExpression	"contains ( stats -> regread , name )"		833919	1					
ANR	834026	Callee	contains		833919	0					
ANR	834027	Identifier	contains		833919	0					
ANR	834028	ArgumentList	stats -> regread		833919	1					
ANR	834029	Argument	stats -> regread		833919	0					
ANR	834030	PtrMemberAccess	stats -> regread		833919	0					
ANR	834031	Identifier	stats		833919	0					
ANR	834032	Identifier	regread		833919	1					
ANR	834033	Argument	name		833919	1					
ANR	834034	Identifier	name		833919	0					
ANR	834035	CompoundStatement		12:40:334:334	833919	1					
ANR	834036	ExpressionStatement	"r_list_push ( stats -> regread , strdup ( name ) )"	4901:3:143642:143685	833919	0	True				
ANR	834037	CallExpression	"r_list_push ( stats -> regread , strdup ( name ) )"		833919	0					
ANR	834038	Callee	r_list_push		833919	0					
ANR	834039	Identifier	r_list_push		833919	0					
ANR	834040	ArgumentList	stats -> regread		833919	1					
ANR	834041	Argument	stats -> regread		833919	0					
ANR	834042	PtrMemberAccess	stats -> regread		833919	0					
ANR	834043	Identifier	stats		833919	0					
ANR	834044	Identifier	regread		833919	1					
ANR	834045	Argument	strdup ( name )		833919	1					
ANR	834046	CallExpression	strdup ( name )		833919	0					
ANR	834047	Callee	strdup		833919	0					
ANR	834048	Identifier	strdup		833919	0					
ANR	834049	ArgumentList	name		833919	1					
ANR	834050	Argument	name		833919	0					
ANR	834051	Identifier	name		833919	0					
ANR	834052	ReturnStatement	return 0 ;	4904:1:143695:143703	833919	2	True				
ANR	834053	PrimaryExpression	0		833919	0					
ANR	834054	ReturnType	static int		833919	1					
ANR	834055	Identifier	myregread		833919	2					
ANR	834056	ParameterList	"RAnalEsil * esil , const char * name , ut64 * val , int * len"		833919	3					
ANR	834057	Parameter	RAnalEsil * esil	4889:21:143246:143260	833919	0	True				
ANR	834058	ParameterType	RAnalEsil *		833919	0					
ANR	834059	Identifier	esil		833919	1					
ANR	834060	Parameter	const char * name	4889:38:143263:143278	833919	1	True				
ANR	834061	ParameterType	const char *		833919	0					
ANR	834062	Identifier	name		833919	1					
ANR	834063	Parameter	ut64 * val	4889:56:143281:143289	833919	2	True				
ANR	834064	ParameterType	ut64 *		833919	0					
ANR	834065	Identifier	val		833919	1					
ANR	834066	Parameter	int * len	4889:67:143292:143299	833919	3	True				
ANR	834067	ParameterType	int *		833919	0					
ANR	834068	Identifier	len		833919	1					
ANR	834069	CFGEntryNode	ENTRY		833919		True				
ANR	834070	CFGExitNode	EXIT		833919		True				
ANR	834071	Symbol	val		833919						
ANR	834072	Symbol	* name		833919						
ANR	834073	Symbol	* stats		833919						
ANR	834074	Symbol	stats -> regs		833919						
ANR	834075	Symbol	IS_DIGIT		833919						
ANR	834076	Symbol	contains		833919						
ANR	834077	Symbol	len		833919						
ANR	834078	Symbol	stats		833919						
ANR	834079	Symbol	stats -> inputregs		833919						
ANR	834080	Symbol	name		833919						
ANR	834081	Symbol	* esil		833919						
ANR	834082	Symbol	strdup		833919						
ANR	834083	Symbol	stats -> regread		833919						
ANR	834084	Symbol	esil		833919						
ANR	834085	Symbol	esil -> user		833919						
ANR	834086	Symbol	stats -> regwrite		833919						
ANR	834087	Function	showregs	4907:0:143708:143940							
ANR	834088	FunctionDef	showregs (RList * list)		834087	0					
ANR	834089	CompoundStatement		4907:35:143743:143940	834087	0					
ANR	834090	IfStatement	if ( ! r_list_empty ( list ) )		834087	0					
ANR	834091	Condition	! r_list_empty ( list )	4908:5:143750:143769	834087	0	True				
ANR	834092	UnaryOperationExpression	! r_list_empty ( list )		834087	0					
ANR	834093	UnaryOperator	!		834087	0					
ANR	834094	CallExpression	r_list_empty ( list )		834087	1					
ANR	834095	Callee	r_list_empty		834087	0					
ANR	834096	Identifier	r_list_empty		834087	0					
ANR	834097	ArgumentList	list		834087	1					
ANR	834098	Argument	list		834087	0					
ANR	834099	Identifier	list		834087	0					
ANR	834100	CompoundStatement		4:2:45:60	834087	1					
ANR	834101	IdentifierDeclStatement	char * reg ;	4909:2:143776:143785	834087	0	True				
ANR	834102	IdentifierDecl	* reg		834087	0					
ANR	834103	IdentifierDeclType	char *		834087	0					
ANR	834104	Identifier	reg		834087	1					
ANR	834105	IdentifierDeclStatement	RListIter * iter ;	4910:2:143789:143804	834087	1	True				
ANR	834106	IdentifierDecl	* iter		834087	0					
ANR	834107	IdentifierDeclType	RListIter *		834087	0					
ANR	834108	Identifier	iter		834087	1					
ANR	834109	Statement	r_list_foreach	4911:2:143808:143821	834087	2	True				
ANR	834110	Statement	(	4911:17:143823:143823	834087	3	True				
ANR	834111	Statement	list	4911:18:143824:143827	834087	4	True				
ANR	834112	Statement	","	4911:22:143828:143828	834087	5	True				
ANR	834113	Statement	iter	4911:24:143830:143833	834087	6	True				
ANR	834114	Statement	","	4911:28:143834:143834	834087	7	True				
ANR	834115	Statement	reg	4911:30:143836:143838	834087	8	True				
ANR	834116	Statement	)	4911:33:143839:143839	834087	9	True				
ANR	834117	CompoundStatement		5:35:97:97	834087	10					
ANR	834118	ExpressionStatement	r_cons_print ( reg )	4912:3:143846:143864	834087	0	True				
ANR	834119	CallExpression	r_cons_print ( reg )		834087	0					
ANR	834120	Callee	r_cons_print		834087	0					
ANR	834121	Identifier	r_cons_print		834087	0					
ANR	834122	ArgumentList	reg		834087	1					
ANR	834123	Argument	reg		834087	0					
ANR	834124	Identifier	reg		834087	0					
ANR	834125	IfStatement	if ( iter -> n )		834087	1					
ANR	834126	Condition	iter -> n	4913:7:143873:143879	834087	0	True				
ANR	834127	PtrMemberAccess	iter -> n		834087	0					
ANR	834128	Identifier	iter		834087	0					
ANR	834129	Identifier	n		834087	1					
ANR	834130	CompoundStatement		7:16:138:138	834087	1					
ANR	834131	ExpressionStatement	"r_cons_printf ( "" "" )"	4914:4:143888:143907	834087	0	True				
ANR	834132	CallExpression	"r_cons_printf ( "" "" )"		834087	0					
ANR	834133	Callee	r_cons_printf		834087	0					
ANR	834134	Identifier	r_cons_printf		834087	0					
ANR	834135	ArgumentList	""" """		834087	1					
ANR	834136	Argument	""" """		834087	0					
ANR	834137	PrimaryExpression	""" """		834087	0					
ANR	834138	ExpressionStatement	r_cons_newline ( )	4918:1:143922:143938	834087	1	True				
ANR	834139	CallExpression	r_cons_newline ( )		834087	0					
ANR	834140	Callee	r_cons_newline		834087	0					
ANR	834141	Identifier	r_cons_newline		834087	0					
ANR	834142	ArgumentList			834087	1					
ANR	834143	ReturnType	static void		834087	1					
ANR	834144	Identifier	showregs		834087	2					
ANR	834145	ParameterList	RList * list		834087	3					
ANR	834146	Parameter	RList * list	4907:22:143730:143740	834087	0	True				
ANR	834147	ParameterType	RList *		834087	0					
ANR	834148	Identifier	list		834087	1					
ANR	834149	CFGEntryNode	ENTRY		834087		True				
ANR	834150	CFGExitNode	EXIT		834087		True				
ANR	834151	Symbol	* iter		834087						
ANR	834152	Symbol	reg		834087						
ANR	834153	Symbol	iter -> n		834087						
ANR	834154	Symbol	r_list_empty		834087						
ANR	834155	Symbol	iter		834087						
ANR	834156	Symbol	list		834087						
ANR	834157	Function	showmem	4921:0:143943:144161							
ANR	834158	FunctionDef	showmem (RList * list)		834157	0					
ANR	834159	CompoundStatement		4921:34:143977:144161	834157	0					
ANR	834160	IfStatement	if ( ! r_list_empty ( list ) )		834157	0					
ANR	834161	Condition	! r_list_empty ( list )	4922:5:143984:144003	834157	0	True				
ANR	834162	UnaryOperationExpression	! r_list_empty ( list )		834157	0					
ANR	834163	UnaryOperator	!		834157	0					
ANR	834164	CallExpression	r_list_empty ( list )		834157	1					
ANR	834165	Callee	r_list_empty		834157	0					
ANR	834166	Identifier	r_list_empty		834157	0					
ANR	834167	ArgumentList	list		834157	1					
ANR	834168	Argument	list		834157	0					
ANR	834169	Identifier	list		834157	0					
ANR	834170	CompoundStatement		4:2:52:67	834157	1					
ANR	834171	IdentifierDeclStatement	AeaMemItem * item ;	4923:2:144010:144026	834157	0	True				
ANR	834172	IdentifierDecl	* item		834157	0					
ANR	834173	IdentifierDeclType	AeaMemItem *		834157	0					
ANR	834174	Identifier	item		834157	1					
ANR	834175	IdentifierDeclStatement	RListIter * iter ;	4924:2:144030:144045	834157	1	True				
ANR	834176	IdentifierDecl	* iter		834157	0					
ANR	834177	IdentifierDeclType	RListIter *		834157	0					
ANR	834178	Identifier	iter		834157	1					
ANR	834179	Statement	r_list_foreach	4925:2:144049:144062	834157	2	True				
ANR	834180	Statement	(	4925:17:144064:144064	834157	3	True				
ANR	834181	Statement	list	4925:18:144065:144068	834157	4	True				
ANR	834182	Statement	","	4925:22:144069:144069	834157	5	True				
ANR	834183	Statement	iter	4925:24:144071:144074	834157	6	True				
ANR	834184	Statement	","	4925:28:144075:144075	834157	7	True				
ANR	834185	Statement	item	4925:30:144077:144080	834157	8	True				
ANR	834186	Statement	)	4925:34:144081:144081	834157	9	True				
ANR	834187	CompoundStatement		5:36:105:105	834157	10					
ANR	834188	Statement	r_cons_printf	4926:3:144088:144100	834157	0	True				
ANR	834189	Statement	(	4926:17:144102:144102	834157	1	True				
ANR	834190	Statement	""" 0x%08"""	4926:18:144103:144110	834157	2	True				
ANR	834191	Statement	PFMT64x	4926:26:144111:144117	834157	3	True				
ANR	834192	Statement	","	4926:33:144118:144118	834157	4	True				
ANR	834193	Statement	item	4926:35:144120:144123	834157	5	True				
ANR	834194	Statement	->	4926:39:144124:144125	834157	6	True				
ANR	834195	Statement	addr	4926:41:144126:144129	834157	7	True				
ANR	834196	Statement	)	4926:45:144130:144130	834157	8	True				
ANR	834197	ExpressionStatement		4926:46:144131:144131	834157	9	True				
ANR	834198	ExpressionStatement	r_cons_newline ( )	4930:1:144142:144159	834157	1	True				
ANR	834199	CallExpression	r_cons_newline ( )		834157	0					
ANR	834200	Callee	r_cons_newline		834157	0					
ANR	834201	Identifier	r_cons_newline		834157	0					
ANR	834202	ArgumentList			834157	1					
ANR	834203	ReturnType	static void		834157	1					
ANR	834204	Identifier	showmem		834157	2					
ANR	834205	ParameterList	RList * list		834157	3					
ANR	834206	Parameter	RList * list	4921:21:143964:143974	834157	0	True				
ANR	834207	ParameterType	RList *		834157	0					
ANR	834208	Identifier	list		834157	1					
ANR	834209	CFGEntryNode	ENTRY		834157		True				
ANR	834210	CFGExitNode	EXIT		834157		True				
ANR	834211	Symbol	item		834157						
ANR	834212	Symbol	r_list_empty		834157						
ANR	834213	Symbol	iter		834157						
ANR	834214	Symbol	list		834157						
ANR	834215	Function	showregs_json	4933:0:144164:144365							
ANR	834216	FunctionDef	"showregs_json (RList * list , PJ * pj)"		834215	0					
ANR	834217	CompoundStatement		4933:48:144212:144365	834215	0					
ANR	834218	ExpressionStatement	pj_a ( pj )	4934:1:144215:144224	834215	0	True				
ANR	834219	CallExpression	pj_a ( pj )		834215	0					
ANR	834220	Callee	pj_a		834215	0					
ANR	834221	Identifier	pj_a		834215	0					
ANR	834222	ArgumentList	pj		834215	1					
ANR	834223	Argument	pj		834215	0					
ANR	834224	Identifier	pj		834215	0					
ANR	834225	IfStatement	if ( ! r_list_empty ( list ) )		834215	1					
ANR	834226	Condition	! r_list_empty ( list )	4935:5:144231:144250	834215	0	True				
ANR	834227	UnaryOperationExpression	! r_list_empty ( list )		834215	0					
ANR	834228	UnaryOperator	!		834215	0					
ANR	834229	CallExpression	r_list_empty ( list )		834215	1					
ANR	834230	Callee	r_list_empty		834215	0					
ANR	834231	Identifier	r_list_empty		834215	0					
ANR	834232	ArgumentList	list		834215	1					
ANR	834233	Argument	list		834215	0					
ANR	834234	Identifier	list		834215	0					
ANR	834235	CompoundStatement		5:2:57:72	834215	1					
ANR	834236	IdentifierDeclStatement	char * reg ;	4936:2:144257:144266	834215	0	True				
ANR	834237	IdentifierDecl	* reg		834215	0					
ANR	834238	IdentifierDeclType	char *		834215	0					
ANR	834239	Identifier	reg		834215	1					
ANR	834240	IdentifierDeclStatement	RListIter * iter ;	4937:2:144270:144285	834215	1	True				
ANR	834241	IdentifierDecl	* iter		834215	0					
ANR	834242	IdentifierDeclType	RListIter *		834215	0					
ANR	834243	Identifier	iter		834215	1					
ANR	834244	Statement	r_list_foreach	4939:2:144290:144303	834215	2	True				
ANR	834245	Statement	(	4939:17:144305:144305	834215	3	True				
ANR	834246	Statement	list	4939:18:144306:144309	834215	4	True				
ANR	834247	Statement	","	4939:22:144310:144310	834215	5	True				
ANR	834248	Statement	iter	4939:24:144312:144315	834215	6	True				
ANR	834249	Statement	","	4939:28:144316:144316	834215	7	True				
ANR	834250	Statement	reg	4939:30:144318:144320	834215	8	True				
ANR	834251	Statement	)	4939:33:144321:144321	834215	9	True				
ANR	834252	CompoundStatement		7:35:110:110	834215	10					
ANR	834253	ExpressionStatement	"pj_s ( pj , reg )"	4940:3:144328:144342	834215	0	True				
ANR	834254	CallExpression	"pj_s ( pj , reg )"		834215	0					
ANR	834255	Callee	pj_s		834215	0					
ANR	834256	Identifier	pj_s		834215	0					
ANR	834257	ArgumentList	pj		834215	1					
ANR	834258	Argument	pj		834215	0					
ANR	834259	Identifier	pj		834215	0					
ANR	834260	Argument	reg		834215	1					
ANR	834261	Identifier	reg		834215	0					
ANR	834262	ExpressionStatement	pj_end ( pj )	4943:1:144352:144363	834215	2	True				
ANR	834263	CallExpression	pj_end ( pj )		834215	0					
ANR	834264	Callee	pj_end		834215	0					
ANR	834265	Identifier	pj_end		834215	0					
ANR	834266	ArgumentList	pj		834215	1					
ANR	834267	Argument	pj		834215	0					
ANR	834268	Identifier	pj		834215	0					
ANR	834269	ReturnType	static void		834215	1					
ANR	834270	Identifier	showregs_json		834215	2					
ANR	834271	ParameterList	"RList * list , PJ * pj"		834215	3					
ANR	834272	Parameter	RList * list	4933:27:144191:144201	834215	0	True				
ANR	834273	ParameterType	RList *		834215	0					
ANR	834274	Identifier	list		834215	1					
ANR	834275	Parameter	PJ * pj	4933:40:144204:144209	834215	1	True				
ANR	834276	ParameterType	PJ *		834215	0					
ANR	834277	Identifier	pj		834215	1					
ANR	834278	CFGEntryNode	ENTRY		834215		True				
ANR	834279	CFGExitNode	EXIT		834215		True				
ANR	834280	Symbol	reg		834215						
ANR	834281	Symbol	r_list_empty		834215						
ANR	834282	Symbol	iter		834215						
ANR	834283	Symbol	pj		834215						
ANR	834284	Symbol	list		834215						
ANR	834285	Function	showmem_json	4946:0:144368:144583							
ANR	834286	FunctionDef	"showmem_json (RList * list , PJ * pj)"		834285	0					
ANR	834287	CompoundStatement		4946:47:144415:144583	834285	0					
ANR	834288	ExpressionStatement	pj_a ( pj )	4947:1:144418:144427	834285	0	True				
ANR	834289	CallExpression	pj_a ( pj )		834285	0					
ANR	834290	Callee	pj_a		834285	0					
ANR	834291	Identifier	pj_a		834285	0					
ANR	834292	ArgumentList	pj		834285	1					
ANR	834293	Argument	pj		834285	0					
ANR	834294	Identifier	pj		834285	0					
ANR	834295	IfStatement	if ( ! r_list_empty ( list ) )		834285	1					
ANR	834296	Condition	! r_list_empty ( list )	4948:5:144434:144453	834285	0	True				
ANR	834297	UnaryOperationExpression	! r_list_empty ( list )		834285	0					
ANR	834298	UnaryOperator	!		834285	0					
ANR	834299	CallExpression	r_list_empty ( list )		834285	1					
ANR	834300	Callee	r_list_empty		834285	0					
ANR	834301	Identifier	r_list_empty		834285	0					
ANR	834302	ArgumentList	list		834285	1					
ANR	834303	Argument	list		834285	0					
ANR	834304	Identifier	list		834285	0					
ANR	834305	CompoundStatement		5:2:63:79	834285	1					
ANR	834306	IdentifierDeclStatement	RListIter * iter ;	4949:2:144460:144475	834285	0	True				
ANR	834307	IdentifierDecl	* iter		834285	0					
ANR	834308	IdentifierDeclType	RListIter *		834285	0					
ANR	834309	Identifier	iter		834285	1					
ANR	834310	IdentifierDeclStatement	AeaMemItem * item ;	4950:2:144479:144495	834285	1	True				
ANR	834311	IdentifierDecl	* item		834285	0					
ANR	834312	IdentifierDeclType	AeaMemItem *		834285	0					
ANR	834313	Identifier	item		834285	1					
ANR	834314	Statement	r_list_foreach	4951:2:144499:144512	834285	2	True				
ANR	834315	Statement	(	4951:17:144514:144514	834285	3	True				
ANR	834316	Statement	list	4951:18:144515:144518	834285	4	True				
ANR	834317	Statement	","	4951:22:144519:144519	834285	5	True				
ANR	834318	Statement	iter	4951:24:144521:144524	834285	6	True				
ANR	834319	Statement	","	4951:28:144525:144525	834285	7	True				
ANR	834320	Statement	item	4951:30:144527:144530	834285	8	True				
ANR	834321	Statement	)	4951:34:144531:144531	834285	9	True				
ANR	834322	CompoundStatement		6:36:117:117	834285	10					
ANR	834323	ExpressionStatement	"pj_n ( pj , item -> addr )"	4952:3:144538:144559	834285	0	True				
ANR	834324	CallExpression	"pj_n ( pj , item -> addr )"		834285	0					
ANR	834325	Callee	pj_n		834285	0					
ANR	834326	Identifier	pj_n		834285	0					
ANR	834327	ArgumentList	pj		834285	1					
ANR	834328	Argument	pj		834285	0					
ANR	834329	Identifier	pj		834285	0					
ANR	834330	Argument	item -> addr		834285	1					
ANR	834331	PtrMemberAccess	item -> addr		834285	0					
ANR	834332	Identifier	item		834285	0					
ANR	834333	Identifier	addr		834285	1					
ANR	834334	ExpressionStatement	pj_end ( pj )	4956:1:144570:144581	834285	2	True				
ANR	834335	CallExpression	pj_end ( pj )		834285	0					
ANR	834336	Callee	pj_end		834285	0					
ANR	834337	Identifier	pj_end		834285	0					
ANR	834338	ArgumentList	pj		834285	1					
ANR	834339	Argument	pj		834285	0					
ANR	834340	Identifier	pj		834285	0					
ANR	834341	ReturnType	static void		834285	1					
ANR	834342	Identifier	showmem_json		834285	2					
ANR	834343	ParameterList	"RList * list , PJ * pj"		834285	3					
ANR	834344	Parameter	RList * list	4946:26:144394:144404	834285	0	True				
ANR	834345	ParameterType	RList *		834285	0					
ANR	834346	Identifier	list		834285	1					
ANR	834347	Parameter	PJ * pj	4946:39:144407:144412	834285	1	True				
ANR	834348	ParameterType	PJ *		834285	0					
ANR	834349	Identifier	pj		834285	1					
ANR	834350	CFGEntryNode	ENTRY		834285		True				
ANR	834351	CFGExitNode	EXIT		834285		True				
ANR	834352	Symbol	item		834285						
ANR	834353	Symbol	* item		834285						
ANR	834354	Symbol	item -> addr		834285						
ANR	834355	Symbol	r_list_empty		834285						
ANR	834356	Symbol	iter		834285						
ANR	834357	Symbol	pj		834285						
ANR	834358	Symbol	list		834285						
ANR	834359	Function	cmd_aea	4959:0:144586:149353							
ANR	834360	FunctionDef	"cmd_aea (RCore * core , int mode , ut64 addr , int length)"		834359	0					
ANR	834361	CompoundStatement		4959:66:144652:149353	834359	0					
ANR	834362	IdentifierDeclStatement	RAnalEsil * esil ;	4960:1:144655:144670	834359	0	True				
ANR	834363	IdentifierDecl	* esil		834359	0					
ANR	834364	IdentifierDeclType	RAnalEsil *		834359	0					
ANR	834365	Identifier	esil		834359	1					
ANR	834366	IdentifierDeclStatement	"int ptr , ops , ops_end = 0 , len , buf_sz , maxopsize ;"	4961:1:144673:144722	834359	1	True				
ANR	834367	IdentifierDecl	ptr		834359	0					
ANR	834368	IdentifierDeclType	int		834359	0					
ANR	834369	Identifier	ptr		834359	1					
ANR	834370	IdentifierDecl	ops		834359	1					
ANR	834371	IdentifierDeclType	int		834359	0					
ANR	834372	Identifier	ops		834359	1					
ANR	834373	IdentifierDecl	ops_end = 0		834359	2					
ANR	834374	IdentifierDeclType	int		834359	0					
ANR	834375	Identifier	ops_end		834359	1					
ANR	834376	AssignmentExpression	ops_end = 0		834359	2		=			
ANR	834377	Identifier	ops_end		834359	0					
ANR	834378	PrimaryExpression	0		834359	1					
ANR	834379	IdentifierDecl	len		834359	3					
ANR	834380	IdentifierDeclType	int		834359	0					
ANR	834381	Identifier	len		834359	1					
ANR	834382	IdentifierDecl	buf_sz		834359	4					
ANR	834383	IdentifierDeclType	int		834359	0					
ANR	834384	Identifier	buf_sz		834359	1					
ANR	834385	IdentifierDecl	maxopsize		834359	5					
ANR	834386	IdentifierDeclType	int		834359	0					
ANR	834387	Identifier	maxopsize		834359	1					
ANR	834388	IdentifierDeclStatement	ut64 addr_end ;	4962:1:144725:144738	834359	2	True				
ANR	834389	IdentifierDecl	addr_end		834359	0					
ANR	834390	IdentifierDeclType	ut64		834359	0					
ANR	834391	Identifier	addr_end		834359	1					
ANR	834392	IdentifierDeclStatement	AeaStats stats ;	4963:1:144741:144755	834359	3	True				
ANR	834393	IdentifierDecl	stats		834359	0					
ANR	834394	IdentifierDeclType	AeaStats		834359	0					
ANR	834395	Identifier	stats		834359	1					
ANR	834396	IdentifierDeclStatement	const char * esilstr ;	4964:1:144758:144777	834359	4	True				
ANR	834397	IdentifierDecl	* esilstr		834359	0					
ANR	834398	IdentifierDeclType	const char *		834359	0					
ANR	834399	Identifier	esilstr		834359	1					
ANR	834400	IdentifierDeclStatement	RAnalOp aop = R_EMPTY ;	4965:1:144780:144801	834359	5	True				
ANR	834401	IdentifierDecl	aop = R_EMPTY		834359	0					
ANR	834402	IdentifierDeclType	RAnalOp		834359	0					
ANR	834403	Identifier	aop		834359	1					
ANR	834404	AssignmentExpression	aop = R_EMPTY		834359	2		=			
ANR	834405	Identifier	R_EMPTY		834359	0					
ANR	834406	Identifier	R_EMPTY		834359	1					
ANR	834407	IdentifierDeclStatement	ut8 * buf ;	4966:1:144804:144812	834359	6	True				
ANR	834408	IdentifierDecl	* buf		834359	0					
ANR	834409	IdentifierDeclType	ut8 *		834359	0					
ANR	834410	Identifier	buf		834359	1					
ANR	834411	IdentifierDeclStatement	RList * regnow ;	4967:1:144815:144828	834359	7	True				
ANR	834412	IdentifierDecl	* regnow		834359	0					
ANR	834413	IdentifierDeclType	RList *		834359	0					
ANR	834414	Identifier	regnow		834359	1					
ANR	834415	IdentifierDeclStatement	PJ * pj = NULL ;	4968:1:144831:144844	834359	8	True				
ANR	834416	IdentifierDecl	* pj = NULL		834359	0					
ANR	834417	IdentifierDeclType	PJ *		834359	0					
ANR	834418	Identifier	pj		834359	1					
ANR	834419	AssignmentExpression	* pj = NULL		834359	2		=			
ANR	834420	Identifier	NULL		834359	0					
ANR	834421	Identifier	NULL		834359	1					
ANR	834422	IfStatement	if ( ! core )		834359	9					
ANR	834423	Condition	! core	4969:5:144851:144855	834359	0	True				
ANR	834424	UnaryOperationExpression	! core		834359	0					
ANR	834425	UnaryOperator	!		834359	0					
ANR	834426	Identifier	core		834359	1					
ANR	834427	CompoundStatement		11:12:205:205	834359	1					
ANR	834428	ReturnStatement	return false ;	4970:2:144862:144874	834359	0	True				
ANR	834429	Identifier	false		834359	0					
ANR	834430	ExpressionStatement	"maxopsize = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MAX_OP_SIZE )"	4972:1:144880:144949	834359	10	True				
ANR	834431	AssignmentExpression	"maxopsize = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MAX_OP_SIZE )"		834359	0		=			
ANR	834432	Identifier	maxopsize		834359	0					
ANR	834433	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MAX_OP_SIZE )"		834359	1					
ANR	834434	Callee	r_anal_archinfo		834359	0					
ANR	834435	Identifier	r_anal_archinfo		834359	0					
ANR	834436	ArgumentList	core -> anal		834359	1					
ANR	834437	Argument	core -> anal		834359	0					
ANR	834438	PtrMemberAccess	core -> anal		834359	0					
ANR	834439	Identifier	core		834359	0					
ANR	834440	Identifier	anal		834359	1					
ANR	834441	Argument	R_ANAL_ARCHINFO_MAX_OP_SIZE		834359	1					
ANR	834442	Identifier	R_ANAL_ARCHINFO_MAX_OP_SIZE		834359	0					
ANR	834443	IfStatement	if ( maxopsize < 1 )		834359	11					
ANR	834444	Condition	maxopsize < 1	4973:5:144956:144968	834359	0	True				
ANR	834445	RelationalExpression	maxopsize < 1		834359	0		<			
ANR	834446	Identifier	maxopsize		834359	0					
ANR	834447	PrimaryExpression	1		834359	1					
ANR	834448	CompoundStatement		15:20:318:318	834359	1					
ANR	834449	ExpressionStatement	maxopsize = 16	4974:2:144975:144989	834359	0	True				
ANR	834450	AssignmentExpression	maxopsize = 16		834359	0		=			
ANR	834451	Identifier	maxopsize		834359	0					
ANR	834452	PrimaryExpression	16		834359	1					
ANR	834453	IfStatement	if ( mode & 1 )		834359	12					
ANR	834454	Condition	mode & 1	4976:5:144999:145006	834359	0	True				
ANR	834455	BitAndExpression	mode & 1		834359	0		&			
ANR	834456	Identifier	mode		834359	0					
ANR	834457	PrimaryExpression	1		834359	1					
ANR	834458	CompoundStatement		18:15:356:356	834359	1					
ANR	834459	ExpressionStatement	buf_sz = length	4978:2:145043:145058	834359	0	True				
ANR	834460	AssignmentExpression	buf_sz = length		834359	0		=			
ANR	834461	Identifier	buf_sz		834359	0					
ANR	834462	Identifier	length		834359	1					
ANR	834463	ElseStatement	else		834359	0					
ANR	834464	CompoundStatement		21:8:415:415	834359	0					
ANR	834465	ExpressionStatement	ops_end = length	4981:2:145110:145126	834359	0	True				
ANR	834466	AssignmentExpression	ops_end = length		834359	0		=			
ANR	834467	Identifier	ops_end		834359	0					
ANR	834468	Identifier	length		834359	1					
ANR	834469	IfStatement	if ( ops_end < 1 )		834359	1					
ANR	834470	Condition	ops_end < 1	4982:6:145134:145144	834359	0	True				
ANR	834471	RelationalExpression	ops_end < 1		834359	0		<			
ANR	834472	Identifier	ops_end		834359	0					
ANR	834473	PrimaryExpression	1		834359	1					
ANR	834474	CompoundStatement		24:19:494:494	834359	1					
ANR	834475	ExpressionStatement	ops_end = 1	4983:3:145152:145163	834359	0	True				
ANR	834476	AssignmentExpression	ops_end = 1		834359	0		=			
ANR	834477	Identifier	ops_end		834359	0					
ANR	834478	PrimaryExpression	1		834359	1					
ANR	834479	ExpressionStatement	buf_sz = ops_end * maxopsize	4985:2:145171:145199	834359	2	True				
ANR	834480	AssignmentExpression	buf_sz = ops_end * maxopsize		834359	0		=			
ANR	834481	Identifier	buf_sz		834359	0					
ANR	834482	MultiplicativeExpression	ops_end * maxopsize		834359	1		*			
ANR	834483	Identifier	ops_end		834359	0					
ANR	834484	Identifier	maxopsize		834359	1					
ANR	834485	IfStatement	if ( buf_sz < 1 )		834359	13					
ANR	834486	Condition	buf_sz < 1	4987:5:145209:145218	834359	0	True				
ANR	834487	RelationalExpression	buf_sz < 1		834359	0		<			
ANR	834488	Identifier	buf_sz		834359	0					
ANR	834489	PrimaryExpression	1		834359	1					
ANR	834490	CompoundStatement		29:17:568:568	834359	1					
ANR	834491	ExpressionStatement	buf_sz = maxopsize	4988:2:145225:145243	834359	0	True				
ANR	834492	AssignmentExpression	buf_sz = maxopsize		834359	0		=			
ANR	834493	Identifier	buf_sz		834359	0					
ANR	834494	Identifier	maxopsize		834359	1					
ANR	834495	ExpressionStatement	addr_end = addr + buf_sz	4990:1:145249:145273	834359	14	True				
ANR	834496	AssignmentExpression	addr_end = addr + buf_sz		834359	0		=			
ANR	834497	Identifier	addr_end		834359	0					
ANR	834498	AdditiveExpression	addr + buf_sz		834359	1		+			
ANR	834499	Identifier	addr		834359	0					
ANR	834500	Identifier	buf_sz		834359	1					
ANR	834501	ExpressionStatement	buf = malloc ( buf_sz )	4991:1:145276:145297	834359	15	True				
ANR	834502	AssignmentExpression	buf = malloc ( buf_sz )		834359	0		=			
ANR	834503	Identifier	buf		834359	0					
ANR	834504	CallExpression	malloc ( buf_sz )		834359	1					
ANR	834505	Callee	malloc		834359	0					
ANR	834506	Identifier	malloc		834359	0					
ANR	834507	ArgumentList	buf_sz		834359	1					
ANR	834508	Argument	buf_sz		834359	0					
ANR	834509	Identifier	buf_sz		834359	0					
ANR	834510	IfStatement	if ( ! buf )		834359	16					
ANR	834511	Condition	! buf	4992:5:145304:145307	834359	0	True				
ANR	834512	UnaryOperationExpression	! buf		834359	0					
ANR	834513	UnaryOperator	!		834359	0					
ANR	834514	Identifier	buf		834359	1					
ANR	834515	CompoundStatement		34:11:657:657	834359	1					
ANR	834516	ReturnStatement	return false ;	4993:2:145314:145326	834359	0	True				
ANR	834517	Identifier	false		834359	0					
ANR	834518	ExpressionStatement	"( void ) r_io_read_at ( core -> io , addr , ( ut8 * ) buf , buf_sz )"	4995:1:145332:145387	834359	17	True				
ANR	834519	CastExpression	"( void ) r_io_read_at ( core -> io , addr , ( ut8 * ) buf , buf_sz )"		834359	0					
ANR	834520	CastTarget	void		834359	0					
ANR	834521	CallExpression	"r_io_read_at ( core -> io , addr , ( ut8 * ) buf , buf_sz )"		834359	1					
ANR	834522	Callee	r_io_read_at		834359	0					
ANR	834523	Identifier	r_io_read_at		834359	0					
ANR	834524	ArgumentList	core -> io		834359	1					
ANR	834525	Argument	core -> io		834359	0					
ANR	834526	PtrMemberAccess	core -> io		834359	0					
ANR	834527	Identifier	core		834359	0					
ANR	834528	Identifier	io		834359	1					
ANR	834529	Argument	addr		834359	1					
ANR	834530	Identifier	addr		834359	0					
ANR	834531	Argument	( ut8 * ) buf		834359	2					
ANR	834532	CastExpression	( ut8 * ) buf		834359	0					
ANR	834533	CastTarget	ut8 *		834359	0					
ANR	834534	Identifier	buf		834359	1					
ANR	834535	Argument	buf_sz		834359	3					
ANR	834536	Identifier	buf_sz		834359	0					
ANR	834537	ExpressionStatement	aea_stats_init ( & stats )	4996:1:145390:145413	834359	18	True				
ANR	834538	CallExpression	aea_stats_init ( & stats )		834359	0					
ANR	834539	Callee	aea_stats_init		834359	0					
ANR	834540	Identifier	aea_stats_init		834359	0					
ANR	834541	ArgumentList	& stats		834359	1					
ANR	834542	Argument	& stats		834359	0					
ANR	834543	UnaryOperationExpression	& stats		834359	0					
ANR	834544	UnaryOperator	&		834359	0					
ANR	834545	Identifier	stats		834359	1					
ANR	834546	ExpressionStatement	r_reg_arena_push ( core -> anal -> reg )	5000:1:145466:145500	834359	19	True				
ANR	834547	CallExpression	r_reg_arena_push ( core -> anal -> reg )		834359	0					
ANR	834548	Callee	r_reg_arena_push		834359	0					
ANR	834549	Identifier	r_reg_arena_push		834359	0					
ANR	834550	ArgumentList	core -> anal -> reg		834359	1					
ANR	834551	Argument	core -> anal -> reg		834359	0					
ANR	834552	PtrMemberAccess	core -> anal -> reg		834359	0					
ANR	834553	PtrMemberAccess	core -> anal		834359	0					
ANR	834554	Identifier	core		834359	0					
ANR	834555	Identifier	anal		834359	1					
ANR	834556	Identifier	reg		834359	1					
ANR	834557	IdentifierDeclStatement	"int stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" ) ;"	5001:1:145503:145568	834359	20	True				
ANR	834558	IdentifierDecl	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		834359	0					
ANR	834559	IdentifierDeclType	int		834359	0					
ANR	834560	Identifier	stacksize		834359	1					
ANR	834561	AssignmentExpression	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		834359	2		=			
ANR	834562	Identifier	stacksize		834359	0					
ANR	834563	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.depth"" )"		834359	1					
ANR	834564	Callee	r_config_get_i		834359	0					
ANR	834565	Identifier	r_config_get_i		834359	0					
ANR	834566	ArgumentList	core -> config		834359	1					
ANR	834567	Argument	core -> config		834359	0					
ANR	834568	PtrMemberAccess	core -> config		834359	0					
ANR	834569	Identifier	core		834359	0					
ANR	834570	Identifier	config		834359	1					
ANR	834571	Argument	"""esil.stack.depth"""		834359	1					
ANR	834572	PrimaryExpression	"""esil.stack.depth"""		834359	0					
ANR	834573	IdentifierDeclStatement	"bool iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	5002:1:145571:145629	834359	21	True				
ANR	834574	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		834359	0					
ANR	834575	IdentifierDeclType	bool		834359	0					
ANR	834576	Identifier	iotrap		834359	1					
ANR	834577	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		834359	2		=			
ANR	834578	Identifier	iotrap		834359	0					
ANR	834579	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		834359	1					
ANR	834580	Callee	r_config_get_i		834359	0					
ANR	834581	Identifier	r_config_get_i		834359	0					
ANR	834582	ArgumentList	core -> config		834359	1					
ANR	834583	Argument	core -> config		834359	0					
ANR	834584	PtrMemberAccess	core -> config		834359	0					
ANR	834585	Identifier	core		834359	0					
ANR	834586	Identifier	config		834359	1					
ANR	834587	Argument	"""esil.iotrap"""		834359	1					
ANR	834588	PrimaryExpression	"""esil.iotrap"""		834359	0					
ANR	834589	IdentifierDeclStatement	"int romem = r_config_get_i ( core -> config , ""esil.romem"" ) ;"	5003:1:145632:145687	834359	22	True				
ANR	834590	IdentifierDecl	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		834359	0					
ANR	834591	IdentifierDeclType	int		834359	0					
ANR	834592	Identifier	romem		834359	1					
ANR	834593	AssignmentExpression	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		834359	2		=			
ANR	834594	Identifier	romem		834359	0					
ANR	834595	CallExpression	"r_config_get_i ( core -> config , ""esil.romem"" )"		834359	1					
ANR	834596	Callee	r_config_get_i		834359	0					
ANR	834597	Identifier	r_config_get_i		834359	0					
ANR	834598	ArgumentList	core -> config		834359	1					
ANR	834599	Argument	core -> config		834359	0					
ANR	834600	PtrMemberAccess	core -> config		834359	0					
ANR	834601	Identifier	core		834359	0					
ANR	834602	Identifier	config		834359	1					
ANR	834603	Argument	"""esil.romem"""		834359	1					
ANR	834604	PrimaryExpression	"""esil.romem"""		834359	0					
ANR	834605	IdentifierDeclStatement	"int stats1 = r_config_get_i ( core -> config , ""esil.stats"" ) ;"	5004:1:145690:145746	834359	23	True				
ANR	834606	IdentifierDecl	"stats1 = r_config_get_i ( core -> config , ""esil.stats"" )"		834359	0					
ANR	834607	IdentifierDeclType	int		834359	0					
ANR	834608	Identifier	stats1		834359	1					
ANR	834609	AssignmentExpression	"stats1 = r_config_get_i ( core -> config , ""esil.stats"" )"		834359	2		=			
ANR	834610	Identifier	stats1		834359	0					
ANR	834611	CallExpression	"r_config_get_i ( core -> config , ""esil.stats"" )"		834359	1					
ANR	834612	Callee	r_config_get_i		834359	0					
ANR	834613	Identifier	r_config_get_i		834359	0					
ANR	834614	ArgumentList	core -> config		834359	1					
ANR	834615	Argument	core -> config		834359	0					
ANR	834616	PtrMemberAccess	core -> config		834359	0					
ANR	834617	Identifier	core		834359	0					
ANR	834618	Identifier	config		834359	1					
ANR	834619	Argument	"""esil.stats"""		834359	1					
ANR	834620	PrimaryExpression	"""esil.stats"""		834359	0					
ANR	834621	IdentifierDeclStatement	"int noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" ) ;"	5005:1:145749:145806	834359	24	True				
ANR	834622	IdentifierDecl	"noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" )"		834359	0					
ANR	834623	IdentifierDeclType	int		834359	0					
ANR	834624	Identifier	noNULL		834359	1					
ANR	834625	AssignmentExpression	"noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" )"		834359	2		=			
ANR	834626	Identifier	noNULL		834359	0					
ANR	834627	CallExpression	"r_config_get_i ( core -> config , ""esil.noNULL"" )"		834359	1					
ANR	834628	Callee	r_config_get_i		834359	0					
ANR	834629	Identifier	r_config_get_i		834359	0					
ANR	834630	ArgumentList	core -> config		834359	1					
ANR	834631	Argument	core -> config		834359	0					
ANR	834632	PtrMemberAccess	core -> config		834359	0					
ANR	834633	Identifier	core		834359	0					
ANR	834634	Identifier	config		834359	1					
ANR	834635	Argument	"""esil.noNULL"""		834359	1					
ANR	834636	PrimaryExpression	"""esil.noNULL"""		834359	0					
ANR	834637	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	5006:1:145809:145880	834359	25	True				
ANR	834638	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		834359	0					
ANR	834639	IdentifierDeclType	unsigned int		834359	0					
ANR	834640	Identifier	addrsize		834359	1					
ANR	834641	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		834359	2		=			
ANR	834642	Identifier	addrsize		834359	0					
ANR	834643	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		834359	1					
ANR	834644	Callee	r_config_get_i		834359	0					
ANR	834645	Identifier	r_config_get_i		834359	0					
ANR	834646	ArgumentList	core -> config		834359	1					
ANR	834647	Argument	core -> config		834359	0					
ANR	834648	PtrMemberAccess	core -> config		834359	0					
ANR	834649	Identifier	core		834359	0					
ANR	834650	Identifier	config		834359	1					
ANR	834651	Argument	"""esil.addr.size"""		834359	1					
ANR	834652	PrimaryExpression	"""esil.addr.size"""		834359	0					
ANR	834653	ExpressionStatement	"esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"	5007:1:145883:145935	834359	26	True				
ANR	834654	AssignmentExpression	"esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		834359	0		=			
ANR	834655	Identifier	esil		834359	0					
ANR	834656	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		834359	1					
ANR	834657	Callee	r_anal_esil_new		834359	0					
ANR	834658	Identifier	r_anal_esil_new		834359	0					
ANR	834659	ArgumentList	stacksize		834359	1					
ANR	834660	Argument	stacksize		834359	0					
ANR	834661	Identifier	stacksize		834359	0					
ANR	834662	Argument	iotrap		834359	1					
ANR	834663	Identifier	iotrap		834359	0					
ANR	834664	Argument	addrsize		834359	2					
ANR	834665	Identifier	addrsize		834359	0					
ANR	834666	ExpressionStatement	"r_anal_esil_setup ( esil , core -> anal , romem , stats1 , noNULL )"	5008:1:145938:145997	834359	27	True				
ANR	834667	CallExpression	"r_anal_esil_setup ( esil , core -> anal , romem , stats1 , noNULL )"		834359	0					
ANR	834668	Callee	r_anal_esil_setup		834359	0					
ANR	834669	Identifier	r_anal_esil_setup		834359	0					
ANR	834670	ArgumentList	esil		834359	1					
ANR	834671	Argument	esil		834359	0					
ANR	834672	Identifier	esil		834359	0					
ANR	834673	Argument	core -> anal		834359	1					
ANR	834674	PtrMemberAccess	core -> anal		834359	0					
ANR	834675	Identifier	core		834359	0					
ANR	834676	Identifier	anal		834359	1					
ANR	834677	Argument	romem		834359	2					
ANR	834678	Identifier	romem		834359	0					
ANR	834679	Argument	stats1		834359	3					
ANR	834680	Identifier	stats1		834359	0					
ANR	834681	Argument	noNULL		834359	4					
ANR	834682	Identifier	noNULL		834359	0					
ANR	834683	Statement	define	5009:2:146013:146018	834359	28	True				
ANR	834684	Statement	hasNext	5009:9:146020:146026	834359	29	True				
ANR	834685	Statement	(	5009:16:146027:146027	834359	30	True				
ANR	834686	Statement	x	5009:17:146028:146028	834359	31	True				
ANR	834687	Statement	)	5009:18:146029:146029	834359	32	True				
ANR	834688	Statement	(	5009:20:146031:146031	834359	33	True				
ANR	834689	Statement	x	5009:21:146032:146032	834359	34	True				
ANR	834690	Statement	&	5009:22:146033:146033	834359	35	True				
ANR	834691	Statement	1	5009:23:146034:146034	834359	36	True				
ANR	834692	Statement	)	5009:24:146035:146035	834359	37	True				
ANR	834693	Statement	?	5009:26:146037:146037	834359	38	True				
ANR	834694	Statement	(	5009:28:146039:146039	834359	39	True				
ANR	834695	Statement	addr	5009:29:146040:146043	834359	40	True				
ANR	834696	Statement	<	5009:33:146044:146044	834359	41	True				
ANR	834697	Statement	addr_end	5009:34:146045:146052	834359	42	True				
ANR	834698	Statement	)	5009:42:146053:146053	834359	43	True				
ANR	834699	Statement	:	5009:44:146055:146055	834359	44	True				
ANR	834700	Statement	(	5009:46:146057:146057	834359	45	True				
ANR	834701	Statement	ops	5009:47:146058:146060	834359	46	True				
ANR	834702	Statement	<	5009:50:146061:146061	834359	47	True				
ANR	834703	Statement	ops_end	5009:51:146062:146068	834359	48	True				
ANR	834704	Statement	)	5009:58:146069:146069	834359	49	True				
ANR	834705	ExpressionStatement	mymemxsr = r_list_new ( )	5011:1:146073:146097	834359	50	True				
ANR	834706	AssignmentExpression	mymemxsr = r_list_new ( )		834359	0		=			
ANR	834707	Identifier	mymemxsr		834359	0					
ANR	834708	CallExpression	r_list_new ( )		834359	1					
ANR	834709	Callee	r_list_new		834359	0					
ANR	834710	Identifier	r_list_new		834359	0					
ANR	834711	ArgumentList			834359	1					
ANR	834712	ExpressionStatement	mymemxsw = r_list_new ( )	5012:1:146100:146124	834359	51	True				
ANR	834713	AssignmentExpression	mymemxsw = r_list_new ( )		834359	0		=			
ANR	834714	Identifier	mymemxsw		834359	0					
ANR	834715	CallExpression	r_list_new ( )		834359	1					
ANR	834716	Callee	r_list_new		834359	0					
ANR	834717	Identifier	r_list_new		834359	0					
ANR	834718	ArgumentList			834359	1					
ANR	834719	ExpressionStatement	esil -> user = & stats	5013:1:146127:146146	834359	52	True				
ANR	834720	AssignmentExpression	esil -> user = & stats		834359	0		=			
ANR	834721	PtrMemberAccess	esil -> user		834359	0					
ANR	834722	Identifier	esil		834359	0					
ANR	834723	Identifier	user		834359	1					
ANR	834724	UnaryOperationExpression	& stats		834359	1					
ANR	834725	UnaryOperator	&		834359	0					
ANR	834726	Identifier	stats		834359	1					
ANR	834727	ExpressionStatement	esil -> cb . hook_reg_write = myregwrite	5014:1:146149:146185	834359	53	True				
ANR	834728	AssignmentExpression	esil -> cb . hook_reg_write = myregwrite		834359	0		=			
ANR	834729	MemberAccess	esil -> cb . hook_reg_write		834359	0					
ANR	834730	PtrMemberAccess	esil -> cb		834359	0					
ANR	834731	Identifier	esil		834359	0					
ANR	834732	Identifier	cb		834359	1					
ANR	834733	Identifier	hook_reg_write		834359	1					
ANR	834734	Identifier	myregwrite		834359	1					
ANR	834735	ExpressionStatement	esil -> cb . hook_reg_read = myregread	5015:1:146188:146222	834359	54	True				
ANR	834736	AssignmentExpression	esil -> cb . hook_reg_read = myregread		834359	0		=			
ANR	834737	MemberAccess	esil -> cb . hook_reg_read		834359	0					
ANR	834738	PtrMemberAccess	esil -> cb		834359	0					
ANR	834739	Identifier	esil		834359	0					
ANR	834740	Identifier	cb		834359	1					
ANR	834741	Identifier	hook_reg_read		834359	1					
ANR	834742	Identifier	myregread		834359	1					
ANR	834743	ExpressionStatement	esil -> cb . hook_mem_write = mymemwrite	5016:1:146225:146261	834359	55	True				
ANR	834744	AssignmentExpression	esil -> cb . hook_mem_write = mymemwrite		834359	0		=			
ANR	834745	MemberAccess	esil -> cb . hook_mem_write		834359	0					
ANR	834746	PtrMemberAccess	esil -> cb		834359	0					
ANR	834747	Identifier	esil		834359	0					
ANR	834748	Identifier	cb		834359	1					
ANR	834749	Identifier	hook_mem_write		834359	1					
ANR	834750	Identifier	mymemwrite		834359	1					
ANR	834751	ExpressionStatement	esil -> cb . hook_mem_read = mymemread	5017:1:146264:146298	834359	56	True				
ANR	834752	AssignmentExpression	esil -> cb . hook_mem_read = mymemread		834359	0		=			
ANR	834753	MemberAccess	esil -> cb . hook_mem_read		834359	0					
ANR	834754	PtrMemberAccess	esil -> cb		834359	0					
ANR	834755	Identifier	esil		834359	0					
ANR	834756	Identifier	cb		834359	1					
ANR	834757	Identifier	hook_mem_read		834359	1					
ANR	834758	Identifier	mymemread		834359	1					
ANR	834759	ExpressionStatement	esil -> nowrite = true	5018:1:146301:146321	834359	57	True				
ANR	834760	AssignmentExpression	esil -> nowrite = true		834359	0		=			
ANR	834761	PtrMemberAccess	esil -> nowrite		834359	0					
ANR	834762	Identifier	esil		834359	0					
ANR	834763	Identifier	nowrite		834359	1					
ANR	834764	Identifier	true		834359	1					
ANR	834765	ForStatement	"for ( ops = ptr = 0 ; ptr < buf_sz && hasNext ( mode ) ; ops ++ , ptr += len )"		834359	58					
ANR	834766	ForInit	ops = ptr = 0 ;	5019:6:146329:146342	834359	0	True				
ANR	834767	AssignmentExpression	ops = ptr = 0		834359	0		=			
ANR	834768	Identifier	ops		834359	0					
ANR	834769	AssignmentExpression	ptr = 0		834359	1		=			
ANR	834770	Identifier	ptr		834359	0					
ANR	834771	PrimaryExpression	0		834359	1					
ANR	834772	Condition	ptr < buf_sz && hasNext ( mode )	5019:21:146344:146373	834359	1	True				
ANR	834773	AndExpression	ptr < buf_sz && hasNext ( mode )		834359	0		&&			
ANR	834774	RelationalExpression	ptr < buf_sz		834359	0		<			
ANR	834775	Identifier	ptr		834359	0					
ANR	834776	Identifier	buf_sz		834359	1					
ANR	834777	CallExpression	hasNext ( mode )		834359	1					
ANR	834778	Callee	hasNext		834359	0					
ANR	834779	Identifier	hasNext		834359	0					
ANR	834780	ArgumentList	mode		834359	1					
ANR	834781	Argument	mode		834359	0					
ANR	834782	Identifier	mode		834359	0					
ANR	834783	Expression	"ops ++ , ptr += len"	5019:53:146376:146392	834359	2	True				
ANR	834784	PostIncDecOperationExpression	ops ++		834359	0					
ANR	834785	Identifier	ops		834359	0					
ANR	834786	IncDec	++		834359	1					
ANR	834787	AssignmentExpression	ptr += len		834359	1		+=			
ANR	834788	Identifier	ptr		834359	0					
ANR	834789	Identifier	len		834359	1					
ANR	834790	CompoundStatement		61:72:1742:1742	834359	3					
ANR	834791	ExpressionStatement	"len = r_anal_op ( core -> anal , & aop , addr + ptr , buf + ptr , buf_sz - ptr , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT )"	5020:2:146399:146513	834359	0	True				
ANR	834792	AssignmentExpression	"len = r_anal_op ( core -> anal , & aop , addr + ptr , buf + ptr , buf_sz - ptr , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT )"		834359	0		=			
ANR	834793	Identifier	len		834359	0					
ANR	834794	CallExpression	"r_anal_op ( core -> anal , & aop , addr + ptr , buf + ptr , buf_sz - ptr , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT )"		834359	1					
ANR	834795	Callee	r_anal_op		834359	0					
ANR	834796	Identifier	r_anal_op		834359	0					
ANR	834797	ArgumentList	core -> anal		834359	1					
ANR	834798	Argument	core -> anal		834359	0					
ANR	834799	PtrMemberAccess	core -> anal		834359	0					
ANR	834800	Identifier	core		834359	0					
ANR	834801	Identifier	anal		834359	1					
ANR	834802	Argument	& aop		834359	1					
ANR	834803	UnaryOperationExpression	& aop		834359	0					
ANR	834804	UnaryOperator	&		834359	0					
ANR	834805	Identifier	aop		834359	1					
ANR	834806	Argument	addr + ptr		834359	2					
ANR	834807	AdditiveExpression	addr + ptr		834359	0		+			
ANR	834808	Identifier	addr		834359	0					
ANR	834809	Identifier	ptr		834359	1					
ANR	834810	Argument	buf + ptr		834359	3					
ANR	834811	AdditiveExpression	buf + ptr		834359	0		+			
ANR	834812	Identifier	buf		834359	0					
ANR	834813	Identifier	ptr		834359	1					
ANR	834814	Argument	buf_sz - ptr		834359	4					
ANR	834815	AdditiveExpression	buf_sz - ptr		834359	0		-			
ANR	834816	Identifier	buf_sz		834359	0					
ANR	834817	Identifier	ptr		834359	1					
ANR	834818	Argument	R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT		834359	5					
ANR	834819	InclusiveOrExpression	R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_HINT		834359	0		|			
ANR	834820	Identifier	R_ANAL_OP_MASK_ESIL		834359	0					
ANR	834821	Identifier	R_ANAL_OP_MASK_HINT		834359	1					
ANR	834822	ExpressionStatement	esilstr = R_STRBUF_SAFEGET ( & aop . esil )	5021:2:146517:146555	834359	1	True				
ANR	834823	AssignmentExpression	esilstr = R_STRBUF_SAFEGET ( & aop . esil )		834359	0		=			
ANR	834824	Identifier	esilstr		834359	0					
ANR	834825	CallExpression	R_STRBUF_SAFEGET ( & aop . esil )		834359	1					
ANR	834826	Callee	R_STRBUF_SAFEGET		834359	0					
ANR	834827	Identifier	R_STRBUF_SAFEGET		834359	0					
ANR	834828	ArgumentList	& aop . esil		834359	1					
ANR	834829	Argument	& aop . esil		834359	0					
ANR	834830	UnaryOperationExpression	& aop . esil		834359	0					
ANR	834831	UnaryOperator	&		834359	0					
ANR	834832	MemberAccess	aop . esil		834359	1					
ANR	834833	Identifier	aop		834359	0					
ANR	834834	Identifier	esil		834359	1					
ANR	834835	IfStatement	if ( ! * esilstr )		834359	2					
ANR	834836	Condition	! * esilstr	5022:6:146563:146571	834359	0	True				
ANR	834837	UnaryOperationExpression	! * esilstr		834359	0					
ANR	834838	UnaryOperator	!		834359	0					
ANR	834839	UnaryOperationExpression	* esilstr		834359	1					
ANR	834840	UnaryOperator	*		834359	0					
ANR	834841	Identifier	esilstr		834359	1					
ANR	834842	CompoundStatement		64:17:1921:1921	834359	1					
ANR	834843	Statement	eprintf	5023:3:146579:146585	834359	0	True				
ANR	834844	Statement	(	5023:11:146587:146587	834359	1	True				
ANR	834845	Statement	"""Empty ESIL at 0x%08"""	5023:12:146588:146608	834359	2	True				
ANR	834846	Statement	PFMT64x	5023:33:146609:146615	834359	3	True				
ANR	834847	Statement	"""\\n"""	5023:40:146616:146619	834359	4	True				
ANR	834848	Statement	","	5023:44:146620:146620	834359	5	True				
ANR	834849	Statement	addr	5023:46:146622:146625	834359	6	True				
ANR	834850	Statement	+	5023:51:146627:146627	834359	7	True				
ANR	834851	Statement	ptr	5023:53:146629:146631	834359	8	True				
ANR	834852	Statement	)	5023:56:146632:146632	834359	9	True				
ANR	834853	ExpressionStatement		5023:57:146633:146633	834359	10	True				
ANR	834854	BreakStatement	break ;	5024:3:146638:146643	834359	11	True				
ANR	834855	IfStatement	if ( len < 1 )		834359	3					
ANR	834856	Condition	len < 1	5026:6:146655:146661	834359	0	True				
ANR	834857	RelationalExpression	len < 1		834359	0		<			
ANR	834858	Identifier	len		834359	0					
ANR	834859	PrimaryExpression	1		834359	1					
ANR	834860	CompoundStatement		68:15:2011:2011	834359	1					
ANR	834861	Statement	eprintf	5027:3:146669:146675	834359	0	True				
ANR	834862	Statement	(	5027:11:146677:146677	834359	1	True				
ANR	834863	Statement	"""Invalid 0x%08"""	5027:12:146678:146692	834359	2	True				
ANR	834864	Statement	PFMT64x	5027:27:146693:146699	834359	3	True				
ANR	834865	Statement	""" instruction %02x %02x\\n"""	5027:34:146700:146725	834359	4	True				
ANR	834866	Statement	","	5027:60:146726:146726	834359	5	True				
ANR	834867	Statement	addr	5028:4:146732:146735	834359	6	True				
ANR	834868	Statement	+	5028:9:146737:146737	834359	7	True				
ANR	834869	Statement	ptr	5028:11:146739:146741	834359	8	True				
ANR	834870	Statement	","	5028:14:146742:146742	834359	9	True				
ANR	834871	Statement	buf	5028:16:146744:146746	834359	10	True				
ANR	834872	Statement	[	5028:19:146747:146747	834359	11	True				
ANR	834873	Statement	ptr	5028:20:146748:146750	834359	12	True				
ANR	834874	Statement	]	5028:23:146751:146751	834359	13	True				
ANR	834875	Statement	","	5028:24:146752:146752	834359	14	True				
ANR	834876	Statement	buf	5028:26:146754:146756	834359	15	True				
ANR	834877	Statement	[	5028:29:146757:146757	834359	16	True				
ANR	834878	Statement	ptr	5028:30:146758:146760	834359	17	True				
ANR	834879	Statement	+	5028:34:146762:146762	834359	18	True				
ANR	834880	Statement	1	5028:36:146764:146764	834359	19	True				
ANR	834881	Statement	]	5028:37:146765:146765	834359	20	True				
ANR	834882	Statement	)	5028:38:146766:146766	834359	21	True				
ANR	834883	ExpressionStatement		5028:39:146767:146767	834359	22	True				
ANR	834884	BreakStatement	break ;	5029:3:146772:146777	834359	23	True				
ANR	834885	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.r2wars"" ) )"		834359	4					
ANR	834886	Condition	"r_config_get_i ( core -> config , ""cfg.r2wars"" )"	5031:6:146789:146831	834359	0	True				
ANR	834887	CallExpression	"r_config_get_i ( core -> config , ""cfg.r2wars"" )"		834359	0					
ANR	834888	Callee	r_config_get_i		834359	0					
ANR	834889	Identifier	r_config_get_i		834359	0					
ANR	834890	ArgumentList	core -> config		834359	1					
ANR	834891	Argument	core -> config		834359	0					
ANR	834892	PtrMemberAccess	core -> config		834359	0					
ANR	834893	Identifier	core		834359	0					
ANR	834894	Identifier	config		834359	1					
ANR	834895	Argument	"""cfg.r2wars"""		834359	1					
ANR	834896	PrimaryExpression	"""cfg.r2wars"""		834359	0					
ANR	834897	CompoundStatement		73:51:2181:2181	834359	1					
ANR	834898	IfStatement	if ( aop . prefix & R_ANAL_OP_PREFIX_REP )		834359	0					
ANR	834899	Condition	aop . prefix & R_ANAL_OP_PREFIX_REP	5032:7:146843:146876	834359	0	True				
ANR	834900	BitAndExpression	aop . prefix & R_ANAL_OP_PREFIX_REP		834359	0		&			
ANR	834901	MemberAccess	aop . prefix		834359	0					
ANR	834902	Identifier	aop		834359	0					
ANR	834903	Identifier	prefix		834359	1					
ANR	834904	Identifier	R_ANAL_OP_PREFIX_REP		834359	1					
ANR	834905	CompoundStatement		75:4:2232:2281	834359	1					
ANR	834906	IdentifierDeclStatement	"char * tmp = strstr ( esilstr , "",ecx,?{,5,GOTO,}"" ) ;"	5033:4:146885:146934	834359	0	True				
ANR	834907	IdentifierDecl	"* tmp = strstr ( esilstr , "",ecx,?{,5,GOTO,}"" )"		834359	0					
ANR	834908	IdentifierDeclType	char *		834359	0					
ANR	834909	Identifier	tmp		834359	1					
ANR	834910	AssignmentExpression	"* tmp = strstr ( esilstr , "",ecx,?{,5,GOTO,}"" )"		834359	2		=			
ANR	834911	Identifier	tmp		834359	0					
ANR	834912	CallExpression	"strstr ( esilstr , "",ecx,?{,5,GOTO,}"" )"		834359	1					
ANR	834913	Callee	strstr		834359	0					
ANR	834914	Identifier	strstr		834359	0					
ANR	834915	ArgumentList	esilstr		834359	1					
ANR	834916	Argument	esilstr		834359	0					
ANR	834917	Identifier	esilstr		834359	0					
ANR	834918	Argument	""",ecx,?{,5,GOTO,}"""		834359	1					
ANR	834919	PrimaryExpression	""",ecx,?{,5,GOTO,}"""		834359	0					
ANR	834920	IfStatement	if ( tmp )		834359	1					
ANR	834921	Condition	tmp	5034:8:146944:146946	834359	0	True				
ANR	834922	Identifier	tmp		834359	0					
ANR	834923	CompoundStatement		76:13:2296:2296	834359	1					
ANR	834924	ExpressionStatement	tmp [ 0 ] = 0	5035:5:146956:146966	834359	0	True				
ANR	834925	AssignmentExpression	tmp [ 0 ] = 0		834359	0		=			
ANR	834926	ArrayIndexing	tmp [ 0 ]		834359	0					
ANR	834927	Identifier	tmp		834359	0					
ANR	834928	PrimaryExpression	0		834359	1					
ANR	834929	PrimaryExpression	0		834359	1					
ANR	834930	ExpressionStatement	"r_anal_esil_parse ( esil , esilstr )"	5039:2:146985:147018	834359	5	True				
ANR	834931	CallExpression	"r_anal_esil_parse ( esil , esilstr )"		834359	0					
ANR	834932	Callee	r_anal_esil_parse		834359	0					
ANR	834933	Identifier	r_anal_esil_parse		834359	0					
ANR	834934	ArgumentList	esil		834359	1					
ANR	834935	Argument	esil		834359	0					
ANR	834936	Identifier	esil		834359	0					
ANR	834937	Argument	esilstr		834359	1					
ANR	834938	Identifier	esilstr		834359	0					
ANR	834939	ExpressionStatement	r_anal_esil_stack_free ( esil )	5040:2:147022:147051	834359	6	True				
ANR	834940	CallExpression	r_anal_esil_stack_free ( esil )		834359	0					
ANR	834941	Callee	r_anal_esil_stack_free		834359	0					
ANR	834942	Identifier	r_anal_esil_stack_free		834359	0					
ANR	834943	ArgumentList	esil		834359	1					
ANR	834944	Argument	esil		834359	0					
ANR	834945	Identifier	esil		834359	0					
ANR	834946	ExpressionStatement	r_anal_op_fini ( & aop )	5041:2:147055:147076	834359	7	True				
ANR	834947	CallExpression	r_anal_op_fini ( & aop )		834359	0					
ANR	834948	Callee	r_anal_op_fini		834359	0					
ANR	834949	Identifier	r_anal_op_fini		834359	0					
ANR	834950	ArgumentList	& aop		834359	1					
ANR	834951	Argument	& aop		834359	0					
ANR	834952	UnaryOperationExpression	& aop		834359	0					
ANR	834953	UnaryOperator	&		834359	0					
ANR	834954	Identifier	aop		834359	1					
ANR	834955	ExpressionStatement	esil -> nowrite = false	5043:1:147082:147103	834359	59	True				
ANR	834956	AssignmentExpression	esil -> nowrite = false		834359	0		=			
ANR	834957	PtrMemberAccess	esil -> nowrite		834359	0					
ANR	834958	Identifier	esil		834359	0					
ANR	834959	Identifier	nowrite		834359	1					
ANR	834960	Identifier	false		834359	1					
ANR	834961	ExpressionStatement	esil -> cb . hook_reg_write = NULL	5044:1:147106:147136	834359	60	True				
ANR	834962	AssignmentExpression	esil -> cb . hook_reg_write = NULL		834359	0		=			
ANR	834963	MemberAccess	esil -> cb . hook_reg_write		834359	0					
ANR	834964	PtrMemberAccess	esil -> cb		834359	0					
ANR	834965	Identifier	esil		834359	0					
ANR	834966	Identifier	cb		834359	1					
ANR	834967	Identifier	hook_reg_write		834359	1					
ANR	834968	Identifier	NULL		834359	1					
ANR	834969	ExpressionStatement	esil -> cb . hook_reg_read = NULL	5045:1:147139:147168	834359	61	True				
ANR	834970	AssignmentExpression	esil -> cb . hook_reg_read = NULL		834359	0		=			
ANR	834971	MemberAccess	esil -> cb . hook_reg_read		834359	0					
ANR	834972	PtrMemberAccess	esil -> cb		834359	0					
ANR	834973	Identifier	esil		834359	0					
ANR	834974	Identifier	cb		834359	1					
ANR	834975	Identifier	hook_reg_read		834359	1					
ANR	834976	Identifier	NULL		834359	1					
ANR	834977	ExpressionStatement	r_anal_esil_free ( esil )	5047:1:147192:147215	834359	62	True				
ANR	834978	CallExpression	r_anal_esil_free ( esil )		834359	0					
ANR	834979	Callee	r_anal_esil_free		834359	0					
ANR	834980	Identifier	r_anal_esil_free		834359	0					
ANR	834981	ArgumentList	esil		834359	1					
ANR	834982	Argument	esil		834359	0					
ANR	834983	Identifier	esil		834359	0					
ANR	834984	ExpressionStatement	r_reg_arena_pop ( core -> anal -> reg )	5048:1:147218:147251	834359	63	True				
ANR	834985	CallExpression	r_reg_arena_pop ( core -> anal -> reg )		834359	0					
ANR	834986	Callee	r_reg_arena_pop		834359	0					
ANR	834987	Identifier	r_reg_arena_pop		834359	0					
ANR	834988	ArgumentList	core -> anal -> reg		834359	1					
ANR	834989	Argument	core -> anal -> reg		834359	0					
ANR	834990	PtrMemberAccess	core -> anal -> reg		834359	0					
ANR	834991	PtrMemberAccess	core -> anal		834359	0					
ANR	834992	Identifier	core		834359	0					
ANR	834993	Identifier	anal		834359	1					
ANR	834994	Identifier	reg		834359	1					
ANR	834995	ExpressionStatement	regnow = r_list_newf ( free )	5049:1:147254:147281	834359	64	True				
ANR	834996	AssignmentExpression	regnow = r_list_newf ( free )		834359	0		=			
ANR	834997	Identifier	regnow		834359	0					
ANR	834998	CallExpression	r_list_newf ( free )		834359	1					
ANR	834999	Callee	r_list_newf		834359	0					
ANR	835000	Identifier	r_list_newf		834359	0					
ANR	835001	ArgumentList	free		834359	1					
ANR	835002	Argument	free		834359	0					
ANR	835003	Identifier	free		834359	0					
ANR	835004	CompoundStatement		94:2:2654:2663	834359	65					
ANR	835005	IdentifierDeclStatement	RListIter * iter ;	5051:2:147288:147303	834359	0	True				
ANR	835006	IdentifierDecl	* iter		834359	0					
ANR	835007	IdentifierDeclType	RListIter *		834359	0					
ANR	835008	Identifier	iter		834359	1					
ANR	835009	IdentifierDeclStatement	char * reg ;	5052:2:147307:147316	834359	1	True				
ANR	835010	IdentifierDecl	* reg		834359	0					
ANR	835011	IdentifierDeclType	char *		834359	0					
ANR	835012	Identifier	reg		834359	1					
ANR	835013	Statement	r_list_foreach	5053:2:147320:147333	834359	2	True				
ANR	835014	Statement	(	5053:17:147335:147335	834359	3	True				
ANR	835015	Statement	stats	5053:18:147336:147340	834359	4	True				
ANR	835016	Statement	.	5053:23:147341:147341	834359	5	True				
ANR	835017	Statement	regs	5053:24:147342:147345	834359	6	True				
ANR	835018	Statement	","	5053:28:147346:147346	834359	7	True				
ANR	835019	Statement	iter	5053:30:147348:147351	834359	8	True				
ANR	835020	Statement	","	5053:34:147352:147352	834359	9	True				
ANR	835021	Statement	reg	5053:36:147354:147356	834359	10	True				
ANR	835022	Statement	)	5053:39:147357:147357	834359	11	True				
ANR	835023	CompoundStatement		95:41:2706:2706	834359	12					
ANR	835024	IfStatement	"if ( ! contains ( stats . regwrite , reg ) )"		834359	0					
ANR	835025	Condition	"! contains ( stats . regwrite , reg )"	5054:7:147368:147398	834359	0	True				
ANR	835026	UnaryOperationExpression	"! contains ( stats . regwrite , reg )"		834359	0					
ANR	835027	UnaryOperator	!		834359	0					
ANR	835028	CallExpression	"contains ( stats . regwrite , reg )"		834359	1					
ANR	835029	Callee	contains		834359	0					
ANR	835030	Identifier	contains		834359	0					
ANR	835031	ArgumentList	stats . regwrite		834359	1					
ANR	835032	Argument	stats . regwrite		834359	0					
ANR	835033	MemberAccess	stats . regwrite		834359	0					
ANR	835034	Identifier	stats		834359	0					
ANR	835035	Identifier	regwrite		834359	1					
ANR	835036	Argument	reg		834359	1					
ANR	835037	Identifier	reg		834359	0					
ANR	835038	CompoundStatement		96:40:2748:2748	834359	1					
ANR	835039	ExpressionStatement	"r_list_push ( regnow , strdup ( reg ) )"	5055:4:147407:147441	834359	0	True				
ANR	835040	CallExpression	"r_list_push ( regnow , strdup ( reg ) )"		834359	0					
ANR	835041	Callee	r_list_push		834359	0					
ANR	835042	Identifier	r_list_push		834359	0					
ANR	835043	ArgumentList	regnow		834359	1					
ANR	835044	Argument	regnow		834359	0					
ANR	835045	Identifier	regnow		834359	0					
ANR	835046	Argument	strdup ( reg )		834359	1					
ANR	835047	CallExpression	strdup ( reg )		834359	0					
ANR	835048	Callee	strdup		834359	0					
ANR	835049	Identifier	strdup		834359	0					
ANR	835050	ArgumentList	reg		834359	1					
ANR	835051	Argument	reg		834359	0					
ANR	835052	Identifier	reg		834359	0					
ANR	835053	IfStatement	if ( ( mode >> 5 ) & 1 )		834359	66					
ANR	835054	Condition	( mode >> 5 ) & 1	5059:5:147460:147474	834359	0	True				
ANR	835055	BitAndExpression	( mode >> 5 ) & 1		834359	0		&			
ANR	835056	ShiftExpression	mode >> 5		834359	0		>>			
ANR	835057	Identifier	mode		834359	0					
ANR	835058	PrimaryExpression	5		834359	1					
ANR	835059	PrimaryExpression	1		834359	1					
ANR	835060	CompoundStatement		104:2:2864:2873	834359	1					
ANR	835061	IdentifierDeclStatement	RListIter * iter ;	5060:2:147481:147496	834359	0	True				
ANR	835062	IdentifierDecl	* iter		834359	0					
ANR	835063	IdentifierDeclType	RListIter *		834359	0					
ANR	835064	Identifier	iter		834359	1					
ANR	835065	IdentifierDeclStatement	AeaMemItem * n ;	5061:2:147500:147513	834359	1	True				
ANR	835066	IdentifierDecl	* n		834359	0					
ANR	835067	IdentifierDeclType	AeaMemItem *		834359	0					
ANR	835068	Identifier	n		834359	1					
ANR	835069	IdentifierDeclStatement	int c = 0 ;	5062:2:147517:147526	834359	2	True				
ANR	835070	IdentifierDecl	c = 0		834359	0					
ANR	835071	IdentifierDeclType	int		834359	0					
ANR	835072	Identifier	c		834359	1					
ANR	835073	AssignmentExpression	c = 0		834359	2		=			
ANR	835074	Identifier	c		834359	0					
ANR	835075	PrimaryExpression	0		834359	1					
ANR	835076	ExpressionStatement	"r_cons_printf ( ""f-mem.*\\n"" )"	5063:2:147530:147557	834359	3	True				
ANR	835077	CallExpression	"r_cons_printf ( ""f-mem.*\\n"" )"		834359	0					
ANR	835078	Callee	r_cons_printf		834359	0					
ANR	835079	Identifier	r_cons_printf		834359	0					
ANR	835080	ArgumentList	"""f-mem.*\\n"""		834359	1					
ANR	835081	Argument	"""f-mem.*\\n"""		834359	0					
ANR	835082	PrimaryExpression	"""f-mem.*\\n"""		834359	0					
ANR	835083	Statement	r_list_foreach	5064:2:147561:147574	834359	4	True				
ANR	835084	Statement	(	5064:17:147576:147576	834359	5	True				
ANR	835085	Statement	mymemxsr	5064:18:147577:147584	834359	6	True				
ANR	835086	Statement	","	5064:26:147585:147585	834359	7	True				
ANR	835087	Statement	iter	5064:28:147587:147590	834359	8	True				
ANR	835088	Statement	","	5064:32:147591:147591	834359	9	True				
ANR	835089	Statement	n	5064:34:147593:147593	834359	10	True				
ANR	835090	Statement	)	5064:35:147594:147594	834359	11	True				
ANR	835091	CompoundStatement		106:37:2943:2943	834359	12					
ANR	835092	Statement	r_cons_printf	5065:3:147601:147613	834359	0	True				
ANR	835093	Statement	(	5065:17:147615:147615	834359	1	True				
ANR	835094	Statement	"""f mem.read.%d 0x%08x @ 0x%08"""	5065:18:147616:147645	834359	2	True				
ANR	835095	Statement	PFMT64x	5065:48:147646:147652	834359	3	True				
ANR	835096	Statement	"""\\n"""	5065:55:147653:147656	834359	4	True				
ANR	835097	Statement	","	5065:59:147657:147657	834359	5	True				
ANR	835098	Statement	c	5065:61:147659:147659	834359	6	True				
ANR	835099	Statement	++	5065:62:147660:147661	834359	7	True				
ANR	835100	Statement	","	5065:64:147662:147662	834359	8	True				
ANR	835101	Statement	n	5065:66:147664:147664	834359	9	True				
ANR	835102	Statement	->	5065:67:147665:147666	834359	10	True				
ANR	835103	Statement	size	5065:69:147667:147670	834359	11	True				
ANR	835104	Statement	","	5065:73:147671:147671	834359	12	True				
ANR	835105	Statement	n	5065:75:147673:147673	834359	13	True				
ANR	835106	Statement	->	5065:76:147674:147675	834359	14	True				
ANR	835107	Statement	addr	5065:78:147676:147679	834359	15	True				
ANR	835108	Statement	)	5065:82:147680:147680	834359	16	True				
ANR	835109	ExpressionStatement		5065:83:147681:147681	834359	17	True				
ANR	835110	ExpressionStatement	c = 0	5067:2:147689:147694	834359	13	True				
ANR	835111	AssignmentExpression	c = 0		834359	0		=			
ANR	835112	Identifier	c		834359	0					
ANR	835113	PrimaryExpression	0		834359	1					
ANR	835114	Statement	r_list_foreach	5068:2:147698:147711	834359	14	True				
ANR	835115	Statement	(	5068:17:147713:147713	834359	15	True				
ANR	835116	Statement	mymemxsw	5068:18:147714:147721	834359	16	True				
ANR	835117	Statement	","	5068:26:147722:147722	834359	17	True				
ANR	835118	Statement	iter	5068:28:147724:147727	834359	18	True				
ANR	835119	Statement	","	5068:32:147728:147728	834359	19	True				
ANR	835120	Statement	n	5068:34:147730:147730	834359	20	True				
ANR	835121	Statement	)	5068:35:147731:147731	834359	21	True				
ANR	835122	CompoundStatement		110:37:3080:3080	834359	22					
ANR	835123	Statement	r_cons_printf	5069:3:147738:147750	834359	0	True				
ANR	835124	Statement	(	5069:17:147752:147752	834359	1	True				
ANR	835125	Statement	"""f mem.write.%d 0x%08x @ 0x%08"""	5069:18:147753:147783	834359	2	True				
ANR	835126	Statement	PFMT64x	5069:49:147784:147790	834359	3	True				
ANR	835127	Statement	"""\\n"""	5069:56:147791:147794	834359	4	True				
ANR	835128	Statement	","	5069:60:147795:147795	834359	5	True				
ANR	835129	Statement	c	5069:62:147797:147797	834359	6	True				
ANR	835130	Statement	++	5069:63:147798:147799	834359	7	True				
ANR	835131	Statement	","	5069:65:147800:147800	834359	8	True				
ANR	835132	Statement	n	5069:67:147802:147802	834359	9	True				
ANR	835133	Statement	->	5069:68:147803:147804	834359	10	True				
ANR	835134	Statement	size	5069:70:147805:147808	834359	11	True				
ANR	835135	Statement	","	5069:74:147809:147809	834359	12	True				
ANR	835136	Statement	n	5069:76:147811:147811	834359	13	True				
ANR	835137	Statement	->	5069:77:147812:147813	834359	14	True				
ANR	835138	Statement	addr	5069:79:147814:147817	834359	15	True				
ANR	835139	Statement	)	5069:83:147818:147818	834359	16	True				
ANR	835140	ExpressionStatement		5069:84:147819:147819	834359	17	True				
ANR	835141	IfStatement	if ( ( mode >> 1 ) & 1 )		834359	67					
ANR	835142	Condition	( mode >> 1 ) & 1	5074:5:147861:147875	834359	0	True				
ANR	835143	BitAndExpression	( mode >> 1 ) & 1		834359	0		&			
ANR	835144	ShiftExpression	mode >> 1		834359	0		>>			
ANR	835145	Identifier	mode		834359	0					
ANR	835146	PrimaryExpression	1		834359	1					
ANR	835147	PrimaryExpression	1		834359	1					
ANR	835148	CompoundStatement		116:22:3225:3225	834359	1					
ANR	835149	ExpressionStatement	showregs ( stats . regread )	5075:2:147882:147906	834359	0	True				
ANR	835150	CallExpression	showregs ( stats . regread )		834359	0					
ANR	835151	Callee	showregs		834359	0					
ANR	835152	Identifier	showregs		834359	0					
ANR	835153	ArgumentList	stats . regread		834359	1					
ANR	835154	Argument	stats . regread		834359	0					
ANR	835155	MemberAccess	stats . regread		834359	0					
ANR	835156	Identifier	stats		834359	0					
ANR	835157	Identifier	regread		834359	1					
ANR	835158	ElseStatement	else		834359	0					
ANR	835159	IfStatement	if ( ( mode >> 2 ) & 1 )		834359	0					
ANR	835160	Condition	( mode >> 2 ) & 1	5076:12:147920:147934	834359	0	True				
ANR	835161	BitAndExpression	( mode >> 2 ) & 1		834359	0		&			
ANR	835162	ShiftExpression	mode >> 2		834359	0		>>			
ANR	835163	Identifier	mode		834359	0					
ANR	835164	PrimaryExpression	2		834359	1					
ANR	835165	PrimaryExpression	1		834359	1					
ANR	835166	CompoundStatement		118:29:3284:3284	834359	1					
ANR	835167	ExpressionStatement	showregs ( stats . regwrite )	5077:2:147941:147966	834359	0	True				
ANR	835168	CallExpression	showregs ( stats . regwrite )		834359	0					
ANR	835169	Callee	showregs		834359	0					
ANR	835170	Identifier	showregs		834359	0					
ANR	835171	ArgumentList	stats . regwrite		834359	1					
ANR	835172	Argument	stats . regwrite		834359	0					
ANR	835173	MemberAccess	stats . regwrite		834359	0					
ANR	835174	Identifier	stats		834359	0					
ANR	835175	Identifier	regwrite		834359	1					
ANR	835176	ElseStatement	else		834359	0					
ANR	835177	IfStatement	if ( ( mode >> 3 ) & 1 )		834359	0					
ANR	835178	Condition	( mode >> 3 ) & 1	5078:12:147980:147994	834359	0	True				
ANR	835179	BitAndExpression	( mode >> 3 ) & 1		834359	0		&			
ANR	835180	ShiftExpression	mode >> 3		834359	0		>>			
ANR	835181	Identifier	mode		834359	0					
ANR	835182	PrimaryExpression	3		834359	1					
ANR	835183	PrimaryExpression	1		834359	1					
ANR	835184	CompoundStatement		120:29:3344:3344	834359	1					
ANR	835185	ExpressionStatement	showregs ( regnow )	5079:2:148001:148018	834359	0	True				
ANR	835186	CallExpression	showregs ( regnow )		834359	0					
ANR	835187	Callee	showregs		834359	0					
ANR	835188	Identifier	showregs		834359	0					
ANR	835189	ArgumentList	regnow		834359	1					
ANR	835190	Argument	regnow		834359	0					
ANR	835191	Identifier	regnow		834359	0					
ANR	835192	ElseStatement	else		834359	0					
ANR	835193	IfStatement	if ( ( mode >> 4 ) & 1 )		834359	0					
ANR	835194	Condition	( mode >> 4 ) & 1	5080:12:148032:148046	834359	0	True				
ANR	835195	BitAndExpression	( mode >> 4 ) & 1		834359	0		&			
ANR	835196	ShiftExpression	mode >> 4		834359	0		>>			
ANR	835197	Identifier	mode		834359	0					
ANR	835198	PrimaryExpression	4		834359	1					
ANR	835199	PrimaryExpression	1		834359	1					
ANR	835200	CompoundStatement		122:29:3396:3396	834359	1					
ANR	835201	ExpressionStatement	pj = pj_new ( )	5081:2:148053:148067	834359	0	True				
ANR	835202	AssignmentExpression	pj = pj_new ( )		834359	0		=			
ANR	835203	Identifier	pj		834359	0					
ANR	835204	CallExpression	pj_new ( )		834359	1					
ANR	835205	Callee	pj_new		834359	0					
ANR	835206	Identifier	pj_new		834359	0					
ANR	835207	ArgumentList			834359	1					
ANR	835208	IfStatement	if ( ! pj )		834359	1					
ANR	835209	Condition	! pj	5082:6:148075:148077	834359	0	True				
ANR	835210	UnaryOperationExpression	! pj		834359	0					
ANR	835211	UnaryOperator	!		834359	0					
ANR	835212	Identifier	pj		834359	1					
ANR	835213	CompoundStatement		124:11:3427:3427	834359	1					
ANR	835214	ReturnStatement	return false ;	5083:3:148085:148097	834359	0	True				
ANR	835215	Identifier	false		834359	0					
ANR	835216	ExpressionStatement	pj_o ( pj )	5085:2:148105:148114	834359	2	True				
ANR	835217	CallExpression	pj_o ( pj )		834359	0					
ANR	835218	Callee	pj_o		834359	0					
ANR	835219	Identifier	pj_o		834359	0					
ANR	835220	ArgumentList	pj		834359	1					
ANR	835221	Argument	pj		834359	0					
ANR	835222	Identifier	pj		834359	0					
ANR	835223	ExpressionStatement	"pj_k ( pj , ""A"" )"	5086:2:148118:148132	834359	3	True				
ANR	835224	CallExpression	"pj_k ( pj , ""A"" )"		834359	0					
ANR	835225	Callee	pj_k		834359	0					
ANR	835226	Identifier	pj_k		834359	0					
ANR	835227	ArgumentList	pj		834359	1					
ANR	835228	Argument	pj		834359	0					
ANR	835229	Identifier	pj		834359	0					
ANR	835230	Argument	"""A"""		834359	1					
ANR	835231	PrimaryExpression	"""A"""		834359	0					
ANR	835232	ExpressionStatement	"showregs_json ( stats . regs , pj )"	5087:2:148136:148166	834359	4	True				
ANR	835233	CallExpression	"showregs_json ( stats . regs , pj )"		834359	0					
ANR	835234	Callee	showregs_json		834359	0					
ANR	835235	Identifier	showregs_json		834359	0					
ANR	835236	ArgumentList	stats . regs		834359	1					
ANR	835237	Argument	stats . regs		834359	0					
ANR	835238	MemberAccess	stats . regs		834359	0					
ANR	835239	Identifier	stats		834359	0					
ANR	835240	Identifier	regs		834359	1					
ANR	835241	Argument	pj		834359	1					
ANR	835242	Identifier	pj		834359	0					
ANR	835243	ExpressionStatement	"pj_k ( pj , ""I"" )"	5088:2:148170:148184	834359	5	True				
ANR	835244	CallExpression	"pj_k ( pj , ""I"" )"		834359	0					
ANR	835245	Callee	pj_k		834359	0					
ANR	835246	Identifier	pj_k		834359	0					
ANR	835247	ArgumentList	pj		834359	1					
ANR	835248	Argument	pj		834359	0					
ANR	835249	Identifier	pj		834359	0					
ANR	835250	Argument	"""I"""		834359	1					
ANR	835251	PrimaryExpression	"""I"""		834359	0					
ANR	835252	ExpressionStatement	"showregs_json ( stats . inputregs , pj )"	5089:2:148188:148223	834359	6	True				
ANR	835253	CallExpression	"showregs_json ( stats . inputregs , pj )"		834359	0					
ANR	835254	Callee	showregs_json		834359	0					
ANR	835255	Identifier	showregs_json		834359	0					
ANR	835256	ArgumentList	stats . inputregs		834359	1					
ANR	835257	Argument	stats . inputregs		834359	0					
ANR	835258	MemberAccess	stats . inputregs		834359	0					
ANR	835259	Identifier	stats		834359	0					
ANR	835260	Identifier	inputregs		834359	1					
ANR	835261	Argument	pj		834359	1					
ANR	835262	Identifier	pj		834359	0					
ANR	835263	ExpressionStatement	"pj_k ( pj , ""R"" )"	5090:2:148227:148241	834359	7	True				
ANR	835264	CallExpression	"pj_k ( pj , ""R"" )"		834359	0					
ANR	835265	Callee	pj_k		834359	0					
ANR	835266	Identifier	pj_k		834359	0					
ANR	835267	ArgumentList	pj		834359	1					
ANR	835268	Argument	pj		834359	0					
ANR	835269	Identifier	pj		834359	0					
ANR	835270	Argument	"""R"""		834359	1					
ANR	835271	PrimaryExpression	"""R"""		834359	0					
ANR	835272	ExpressionStatement	"showregs_json ( stats . regread , pj )"	5091:2:148245:148278	834359	8	True				
ANR	835273	CallExpression	"showregs_json ( stats . regread , pj )"		834359	0					
ANR	835274	Callee	showregs_json		834359	0					
ANR	835275	Identifier	showregs_json		834359	0					
ANR	835276	ArgumentList	stats . regread		834359	1					
ANR	835277	Argument	stats . regread		834359	0					
ANR	835278	MemberAccess	stats . regread		834359	0					
ANR	835279	Identifier	stats		834359	0					
ANR	835280	Identifier	regread		834359	1					
ANR	835281	Argument	pj		834359	1					
ANR	835282	Identifier	pj		834359	0					
ANR	835283	ExpressionStatement	"pj_k ( pj , ""W"" )"	5092:2:148282:148296	834359	9	True				
ANR	835284	CallExpression	"pj_k ( pj , ""W"" )"		834359	0					
ANR	835285	Callee	pj_k		834359	0					
ANR	835286	Identifier	pj_k		834359	0					
ANR	835287	ArgumentList	pj		834359	1					
ANR	835288	Argument	pj		834359	0					
ANR	835289	Identifier	pj		834359	0					
ANR	835290	Argument	"""W"""		834359	1					
ANR	835291	PrimaryExpression	"""W"""		834359	0					
ANR	835292	ExpressionStatement	"showregs_json ( stats . regwrite , pj )"	5093:2:148300:148334	834359	10	True				
ANR	835293	CallExpression	"showregs_json ( stats . regwrite , pj )"		834359	0					
ANR	835294	Callee	showregs_json		834359	0					
ANR	835295	Identifier	showregs_json		834359	0					
ANR	835296	ArgumentList	stats . regwrite		834359	1					
ANR	835297	Argument	stats . regwrite		834359	0					
ANR	835298	MemberAccess	stats . regwrite		834359	0					
ANR	835299	Identifier	stats		834359	0					
ANR	835300	Identifier	regwrite		834359	1					
ANR	835301	Argument	pj		834359	1					
ANR	835302	Identifier	pj		834359	0					
ANR	835303	IfStatement	if ( ! r_list_empty ( regnow ) )		834359	11					
ANR	835304	Condition	! r_list_empty ( regnow )	5094:6:148342:148363	834359	0	True				
ANR	835305	UnaryOperationExpression	! r_list_empty ( regnow )		834359	0					
ANR	835306	UnaryOperator	!		834359	0					
ANR	835307	CallExpression	r_list_empty ( regnow )		834359	1					
ANR	835308	Callee	r_list_empty		834359	0					
ANR	835309	Identifier	r_list_empty		834359	0					
ANR	835310	ArgumentList	regnow		834359	1					
ANR	835311	Argument	regnow		834359	0					
ANR	835312	Identifier	regnow		834359	0					
ANR	835313	CompoundStatement		136:29:3712:3712	834359	1					
ANR	835314	ExpressionStatement	"pj_k ( pj , ""N"" )"	5095:3:148370:148384	834359	0	True				
ANR	835315	CallExpression	"pj_k ( pj , ""N"" )"		834359	0					
ANR	835316	Callee	pj_k		834359	0					
ANR	835317	Identifier	pj_k		834359	0					
ANR	835318	ArgumentList	pj		834359	1					
ANR	835319	Argument	pj		834359	0					
ANR	835320	Identifier	pj		834359	0					
ANR	835321	Argument	"""N"""		834359	1					
ANR	835322	PrimaryExpression	"""N"""		834359	0					
ANR	835323	ExpressionStatement	"showregs_json ( regnow , pj )"	5096:3:148389:148415	834359	1	True				
ANR	835324	CallExpression	"showregs_json ( regnow , pj )"		834359	0					
ANR	835325	Callee	showregs_json		834359	0					
ANR	835326	Identifier	showregs_json		834359	0					
ANR	835327	ArgumentList	regnow		834359	1					
ANR	835328	Argument	regnow		834359	0					
ANR	835329	Identifier	regnow		834359	0					
ANR	835330	Argument	pj		834359	1					
ANR	835331	Identifier	pj		834359	0					
ANR	835332	IfStatement	if ( ! r_list_empty ( mymemxsr ) )		834359	12					
ANR	835333	Condition	! r_list_empty ( mymemxsr )	5098:6:148427:148450	834359	0	True				
ANR	835334	UnaryOperationExpression	! r_list_empty ( mymemxsr )		834359	0					
ANR	835335	UnaryOperator	!		834359	0					
ANR	835336	CallExpression	r_list_empty ( mymemxsr )		834359	1					
ANR	835337	Callee	r_list_empty		834359	0					
ANR	835338	Identifier	r_list_empty		834359	0					
ANR	835339	ArgumentList	mymemxsr		834359	1					
ANR	835340	Argument	mymemxsr		834359	0					
ANR	835341	Identifier	mymemxsr		834359	0					
ANR	835342	CompoundStatement		140:31:3799:3799	834359	1					
ANR	835343	ExpressionStatement	"pj_k ( pj , ""@R"" )"	5099:3:148457:148472	834359	0	True				
ANR	835344	CallExpression	"pj_k ( pj , ""@R"" )"		834359	0					
ANR	835345	Callee	pj_k		834359	0					
ANR	835346	Identifier	pj_k		834359	0					
ANR	835347	ArgumentList	pj		834359	1					
ANR	835348	Argument	pj		834359	0					
ANR	835349	Identifier	pj		834359	0					
ANR	835350	Argument	"""@R"""		834359	1					
ANR	835351	PrimaryExpression	"""@R"""		834359	0					
ANR	835352	ExpressionStatement	"showmem_json ( mymemxsr , pj )"	5100:3:148477:148504	834359	1	True				
ANR	835353	CallExpression	"showmem_json ( mymemxsr , pj )"		834359	0					
ANR	835354	Callee	showmem_json		834359	0					
ANR	835355	Identifier	showmem_json		834359	0					
ANR	835356	ArgumentList	mymemxsr		834359	1					
ANR	835357	Argument	mymemxsr		834359	0					
ANR	835358	Identifier	mymemxsr		834359	0					
ANR	835359	Argument	pj		834359	1					
ANR	835360	Identifier	pj		834359	0					
ANR	835361	IfStatement	if ( ! r_list_empty ( mymemxsw ) )		834359	13					
ANR	835362	Condition	! r_list_empty ( mymemxsw )	5102:6:148516:148539	834359	0	True				
ANR	835363	UnaryOperationExpression	! r_list_empty ( mymemxsw )		834359	0					
ANR	835364	UnaryOperator	!		834359	0					
ANR	835365	CallExpression	r_list_empty ( mymemxsw )		834359	1					
ANR	835366	Callee	r_list_empty		834359	0					
ANR	835367	Identifier	r_list_empty		834359	0					
ANR	835368	ArgumentList	mymemxsw		834359	1					
ANR	835369	Argument	mymemxsw		834359	0					
ANR	835370	Identifier	mymemxsw		834359	0					
ANR	835371	CompoundStatement		144:31:3888:3888	834359	1					
ANR	835372	ExpressionStatement	"pj_k ( pj , ""@W"" )"	5103:3:148546:148561	834359	0	True				
ANR	835373	CallExpression	"pj_k ( pj , ""@W"" )"		834359	0					
ANR	835374	Callee	pj_k		834359	0					
ANR	835375	Identifier	pj_k		834359	0					
ANR	835376	ArgumentList	pj		834359	1					
ANR	835377	Argument	pj		834359	0					
ANR	835378	Identifier	pj		834359	0					
ANR	835379	Argument	"""@W"""		834359	1					
ANR	835380	PrimaryExpression	"""@W"""		834359	0					
ANR	835381	ExpressionStatement	"showmem_json ( mymemxsw , pj )"	5104:3:148566:148593	834359	1	True				
ANR	835382	CallExpression	"showmem_json ( mymemxsw , pj )"		834359	0					
ANR	835383	Callee	showmem_json		834359	0					
ANR	835384	Identifier	showmem_json		834359	0					
ANR	835385	ArgumentList	mymemxsw		834359	1					
ANR	835386	Argument	mymemxsw		834359	0					
ANR	835387	Identifier	mymemxsw		834359	0					
ANR	835388	Argument	pj		834359	1					
ANR	835389	Identifier	pj		834359	0					
ANR	835390	ExpressionStatement	pj_end ( pj )	5107:2:148602:148613	834359	14	True				
ANR	835391	CallExpression	pj_end ( pj )		834359	0					
ANR	835392	Callee	pj_end		834359	0					
ANR	835393	Identifier	pj_end		834359	0					
ANR	835394	ArgumentList	pj		834359	1					
ANR	835395	Argument	pj		834359	0					
ANR	835396	Identifier	pj		834359	0					
ANR	835397	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	5108:2:148617:148648	834359	15	True				
ANR	835398	CallExpression	r_cons_println ( pj_string ( pj ) )		834359	0					
ANR	835399	Callee	r_cons_println		834359	0					
ANR	835400	Identifier	r_cons_println		834359	0					
ANR	835401	ArgumentList	pj_string ( pj )		834359	1					
ANR	835402	Argument	pj_string ( pj )		834359	0					
ANR	835403	CallExpression	pj_string ( pj )		834359	0					
ANR	835404	Callee	pj_string		834359	0					
ANR	835405	Identifier	pj_string		834359	0					
ANR	835406	ArgumentList	pj		834359	1					
ANR	835407	Argument	pj		834359	0					
ANR	835408	Identifier	pj		834359	0					
ANR	835409	ExpressionStatement	pj_free ( pj )	5109:2:148652:148664	834359	16	True				
ANR	835410	CallExpression	pj_free ( pj )		834359	0					
ANR	835411	Callee	pj_free		834359	0					
ANR	835412	Identifier	pj_free		834359	0					
ANR	835413	ArgumentList	pj		834359	1					
ANR	835414	Argument	pj		834359	0					
ANR	835415	Identifier	pj		834359	0					
ANR	835416	ElseStatement	else		834359	0					
ANR	835417	IfStatement	if ( ( mode >> 5 ) & 1 )		834359	0					
ANR	835418	Condition	( mode >> 5 ) & 1	5110:12:148678:148692	834359	0	True				
ANR	835419	BitAndExpression	( mode >> 5 ) & 1		834359	0		&			
ANR	835420	ShiftExpression	mode >> 5		834359	0		>>			
ANR	835421	Identifier	mode		834359	0					
ANR	835422	PrimaryExpression	5		834359	1					
ANR	835423	PrimaryExpression	1		834359	1					
ANR	835424	CompoundStatement		152:29:4042:4042	834359	1					
ANR	835425	ElseStatement	else		834359	0					
ANR	835426	CompoundStatement		154:8:4065:4065	834359	0					
ANR	835427	ExpressionStatement	"r_cons_printf ( "" I: "" )"	5113:2:148722:148744	834359	0	True				
ANR	835428	CallExpression	"r_cons_printf ( "" I: "" )"		834359	0					
ANR	835429	Callee	r_cons_printf		834359	0					
ANR	835430	Identifier	r_cons_printf		834359	0					
ANR	835431	ArgumentList	""" I: """		834359	1					
ANR	835432	Argument	""" I: """		834359	0					
ANR	835433	PrimaryExpression	""" I: """		834359	0					
ANR	835434	ExpressionStatement	showregs ( stats . inputregs )	5114:2:148748:148774	834359	1	True				
ANR	835435	CallExpression	showregs ( stats . inputregs )		834359	0					
ANR	835436	Callee	showregs		834359	0					
ANR	835437	Identifier	showregs		834359	0					
ANR	835438	ArgumentList	stats . inputregs		834359	1					
ANR	835439	Argument	stats . inputregs		834359	0					
ANR	835440	MemberAccess	stats . inputregs		834359	0					
ANR	835441	Identifier	stats		834359	0					
ANR	835442	Identifier	inputregs		834359	1					
ANR	835443	ExpressionStatement	"r_cons_printf ( "" A: "" )"	5115:2:148778:148800	834359	2	True				
ANR	835444	CallExpression	"r_cons_printf ( "" A: "" )"		834359	0					
ANR	835445	Callee	r_cons_printf		834359	0					
ANR	835446	Identifier	r_cons_printf		834359	0					
ANR	835447	ArgumentList	""" A: """		834359	1					
ANR	835448	Argument	""" A: """		834359	0					
ANR	835449	PrimaryExpression	""" A: """		834359	0					
ANR	835450	ExpressionStatement	showregs ( stats . regs )	5116:2:148804:148825	834359	3	True				
ANR	835451	CallExpression	showregs ( stats . regs )		834359	0					
ANR	835452	Callee	showregs		834359	0					
ANR	835453	Identifier	showregs		834359	0					
ANR	835454	ArgumentList	stats . regs		834359	1					
ANR	835455	Argument	stats . regs		834359	0					
ANR	835456	MemberAccess	stats . regs		834359	0					
ANR	835457	Identifier	stats		834359	0					
ANR	835458	Identifier	regs		834359	1					
ANR	835459	ExpressionStatement	"r_cons_printf ( "" R: "" )"	5117:2:148829:148851	834359	4	True				
ANR	835460	CallExpression	"r_cons_printf ( "" R: "" )"		834359	0					
ANR	835461	Callee	r_cons_printf		834359	0					
ANR	835462	Identifier	r_cons_printf		834359	0					
ANR	835463	ArgumentList	""" R: """		834359	1					
ANR	835464	Argument	""" R: """		834359	0					
ANR	835465	PrimaryExpression	""" R: """		834359	0					
ANR	835466	ExpressionStatement	showregs ( stats . regread )	5118:2:148855:148879	834359	5	True				
ANR	835467	CallExpression	showregs ( stats . regread )		834359	0					
ANR	835468	Callee	showregs		834359	0					
ANR	835469	Identifier	showregs		834359	0					
ANR	835470	ArgumentList	stats . regread		834359	1					
ANR	835471	Argument	stats . regread		834359	0					
ANR	835472	MemberAccess	stats . regread		834359	0					
ANR	835473	Identifier	stats		834359	0					
ANR	835474	Identifier	regread		834359	1					
ANR	835475	ExpressionStatement	"r_cons_printf ( "" W: "" )"	5119:2:148883:148905	834359	6	True				
ANR	835476	CallExpression	"r_cons_printf ( "" W: "" )"		834359	0					
ANR	835477	Callee	r_cons_printf		834359	0					
ANR	835478	Identifier	r_cons_printf		834359	0					
ANR	835479	ArgumentList	""" W: """		834359	1					
ANR	835480	Argument	""" W: """		834359	0					
ANR	835481	PrimaryExpression	""" W: """		834359	0					
ANR	835482	ExpressionStatement	showregs ( stats . regwrite )	5120:2:148909:148934	834359	7	True				
ANR	835483	CallExpression	showregs ( stats . regwrite )		834359	0					
ANR	835484	Callee	showregs		834359	0					
ANR	835485	Identifier	showregs		834359	0					
ANR	835486	ArgumentList	stats . regwrite		834359	1					
ANR	835487	Argument	stats . regwrite		834359	0					
ANR	835488	MemberAccess	stats . regwrite		834359	0					
ANR	835489	Identifier	stats		834359	0					
ANR	835490	Identifier	regwrite		834359	1					
ANR	835491	IfStatement	if ( r_list_length ( regnow ) )		834359	8					
ANR	835492	Condition	r_list_length ( regnow )	5121:6:148942:148963	834359	0	True				
ANR	835493	CallExpression	r_list_length ( regnow )		834359	0					
ANR	835494	Callee	r_list_length		834359	0					
ANR	835495	Identifier	r_list_length		834359	0					
ANR	835496	ArgumentList	regnow		834359	1					
ANR	835497	Argument	regnow		834359	0					
ANR	835498	Identifier	regnow		834359	0					
ANR	835499	CompoundStatement		163:29:4312:4312	834359	1					
ANR	835500	ExpressionStatement	"r_cons_printf ( "" N: "" )"	5122:3:148970:148992	834359	0	True				
ANR	835501	CallExpression	"r_cons_printf ( "" N: "" )"		834359	0					
ANR	835502	Callee	r_cons_printf		834359	0					
ANR	835503	Identifier	r_cons_printf		834359	0					
ANR	835504	ArgumentList	""" N: """		834359	1					
ANR	835505	Argument	""" N: """		834359	0					
ANR	835506	PrimaryExpression	""" N: """		834359	0					
ANR	835507	ExpressionStatement	showregs ( regnow )	5123:3:148997:149014	834359	1	True				
ANR	835508	CallExpression	showregs ( regnow )		834359	0					
ANR	835509	Callee	showregs		834359	0					
ANR	835510	Identifier	showregs		834359	0					
ANR	835511	ArgumentList	regnow		834359	1					
ANR	835512	Argument	regnow		834359	0					
ANR	835513	Identifier	regnow		834359	0					
ANR	835514	IfStatement	if ( ! r_list_empty ( mymemxsr ) )		834359	9					
ANR	835515	Condition	! r_list_empty ( mymemxsr )	5125:6:149026:149049	834359	0	True				
ANR	835516	UnaryOperationExpression	! r_list_empty ( mymemxsr )		834359	0					
ANR	835517	UnaryOperator	!		834359	0					
ANR	835518	CallExpression	r_list_empty ( mymemxsr )		834359	1					
ANR	835519	Callee	r_list_empty		834359	0					
ANR	835520	Identifier	r_list_empty		834359	0					
ANR	835521	ArgumentList	mymemxsr		834359	1					
ANR	835522	Argument	mymemxsr		834359	0					
ANR	835523	Identifier	mymemxsr		834359	0					
ANR	835524	CompoundStatement		167:31:4398:4398	834359	1					
ANR	835525	ExpressionStatement	"r_cons_printf ( ""@R:"" )"	5126:3:149056:149077	834359	0	True				
ANR	835526	CallExpression	"r_cons_printf ( ""@R:"" )"		834359	0					
ANR	835527	Callee	r_cons_printf		834359	0					
ANR	835528	Identifier	r_cons_printf		834359	0					
ANR	835529	ArgumentList	"""@R:"""		834359	1					
ANR	835530	Argument	"""@R:"""		834359	0					
ANR	835531	PrimaryExpression	"""@R:"""		834359	0					
ANR	835532	ExpressionStatement	showmem ( mymemxsr )	5127:3:149082:149100	834359	1	True				
ANR	835533	CallExpression	showmem ( mymemxsr )		834359	0					
ANR	835534	Callee	showmem		834359	0					
ANR	835535	Identifier	showmem		834359	0					
ANR	835536	ArgumentList	mymemxsr		834359	1					
ANR	835537	Argument	mymemxsr		834359	0					
ANR	835538	Identifier	mymemxsr		834359	0					
ANR	835539	IfStatement	if ( ! r_list_empty ( mymemxsw ) )		834359	10					
ANR	835540	Condition	! r_list_empty ( mymemxsw )	5129:6:149112:149135	834359	0	True				
ANR	835541	UnaryOperationExpression	! r_list_empty ( mymemxsw )		834359	0					
ANR	835542	UnaryOperator	!		834359	0					
ANR	835543	CallExpression	r_list_empty ( mymemxsw )		834359	1					
ANR	835544	Callee	r_list_empty		834359	0					
ANR	835545	Identifier	r_list_empty		834359	0					
ANR	835546	ArgumentList	mymemxsw		834359	1					
ANR	835547	Argument	mymemxsw		834359	0					
ANR	835548	Identifier	mymemxsw		834359	0					
ANR	835549	CompoundStatement		171:31:4484:4484	834359	1					
ANR	835550	ExpressionStatement	"r_cons_printf ( ""@W:"" )"	5130:3:149142:149163	834359	0	True				
ANR	835551	CallExpression	"r_cons_printf ( ""@W:"" )"		834359	0					
ANR	835552	Callee	r_cons_printf		834359	0					
ANR	835553	Identifier	r_cons_printf		834359	0					
ANR	835554	ArgumentList	"""@W:"""		834359	1					
ANR	835555	Argument	"""@W:"""		834359	0					
ANR	835556	PrimaryExpression	"""@W:"""		834359	0					
ANR	835557	ExpressionStatement	showmem ( mymemxsw )	5131:3:149168:149186	834359	1	True				
ANR	835558	CallExpression	showmem ( mymemxsw )		834359	0					
ANR	835559	Callee	showmem		834359	0					
ANR	835560	Identifier	showmem		834359	0					
ANR	835561	ArgumentList	mymemxsw		834359	1					
ANR	835562	Argument	mymemxsw		834359	0					
ANR	835563	Identifier	mymemxsw		834359	0					
ANR	835564	ExpressionStatement	r_list_free ( mymemxsr )	5135:1:149197:149219	834359	68	True				
ANR	835565	CallExpression	r_list_free ( mymemxsr )		834359	0					
ANR	835566	Callee	r_list_free		834359	0					
ANR	835567	Identifier	r_list_free		834359	0					
ANR	835568	ArgumentList	mymemxsr		834359	1					
ANR	835569	Argument	mymemxsr		834359	0					
ANR	835570	Identifier	mymemxsr		834359	0					
ANR	835571	ExpressionStatement	r_list_free ( mymemxsw )	5136:1:149222:149244	834359	69	True				
ANR	835572	CallExpression	r_list_free ( mymemxsw )		834359	0					
ANR	835573	Callee	r_list_free		834359	0					
ANR	835574	Identifier	r_list_free		834359	0					
ANR	835575	ArgumentList	mymemxsw		834359	1					
ANR	835576	Argument	mymemxsw		834359	0					
ANR	835577	Identifier	mymemxsw		834359	0					
ANR	835578	ExpressionStatement	mymemxsr = NULL	5137:1:149247:149262	834359	70	True				
ANR	835579	AssignmentExpression	mymemxsr = NULL		834359	0		=			
ANR	835580	Identifier	mymemxsr		834359	0					
ANR	835581	Identifier	NULL		834359	1					
ANR	835582	ExpressionStatement	mymemxsw = NULL	5138:1:149265:149280	834359	71	True				
ANR	835583	AssignmentExpression	mymemxsw = NULL		834359	0		=			
ANR	835584	Identifier	mymemxsw		834359	0					
ANR	835585	Identifier	NULL		834359	1					
ANR	835586	ExpressionStatement	aea_stats_fini ( & stats )	5139:1:149283:149306	834359	72	True				
ANR	835587	CallExpression	aea_stats_fini ( & stats )		834359	0					
ANR	835588	Callee	aea_stats_fini		834359	0					
ANR	835589	Identifier	aea_stats_fini		834359	0					
ANR	835590	ArgumentList	& stats		834359	1					
ANR	835591	Argument	& stats		834359	0					
ANR	835592	UnaryOperationExpression	& stats		834359	0					
ANR	835593	UnaryOperator	&		834359	0					
ANR	835594	Identifier	stats		834359	1					
ANR	835595	ExpressionStatement	free ( buf )	5140:1:149309:149319	834359	73	True				
ANR	835596	CallExpression	free ( buf )		834359	0					
ANR	835597	Callee	free		834359	0					
ANR	835598	Identifier	free		834359	0					
ANR	835599	ArgumentList	buf		834359	1					
ANR	835600	Argument	buf		834359	0					
ANR	835601	Identifier	buf		834359	0					
ANR	835602	ExpressionStatement	R_FREE ( regnow )	5141:1:149322:149337	834359	74	True				
ANR	835603	CallExpression	R_FREE ( regnow )		834359	0					
ANR	835604	Callee	R_FREE		834359	0					
ANR	835605	Identifier	R_FREE		834359	0					
ANR	835606	ArgumentList	regnow		834359	1					
ANR	835607	Argument	regnow		834359	0					
ANR	835608	Identifier	regnow		834359	0					
ANR	835609	ReturnStatement	return true ;	5142:1:149340:149351	834359	75	True				
ANR	835610	Identifier	true		834359	0					
ANR	835611	ReturnType	static bool		834359	1					
ANR	835612	Identifier	cmd_aea		834359	2					
ANR	835613	ParameterList	"RCore * core , int mode , ut64 addr , int length"		834359	3					
ANR	835614	Parameter	RCore * core	4959:20:144606:144616	834359	0	True				
ANR	835615	ParameterType	RCore *		834359	0					
ANR	835616	Identifier	core		834359	1					
ANR	835617	Parameter	int mode	4959:33:144619:144626	834359	1	True				
ANR	835618	ParameterType	int		834359	0					
ANR	835619	Identifier	mode		834359	1					
ANR	835620	Parameter	ut64 addr	4959:43:144629:144637	834359	2	True				
ANR	835621	ParameterType	ut64		834359	0					
ANR	835622	Identifier	addr		834359	1					
ANR	835623	Parameter	int length	4959:54:144640:144649	834359	3	True				
ANR	835624	ParameterType	int		834359	0					
ANR	835625	Identifier	length		834359	1					
ANR	835626	CFGEntryNode	ENTRY		834359		True				
ANR	835627	CFGExitNode	EXIT		834359		True				
ANR	835628	Symbol	core -> anal -> reg		834359						
ANR	835629	Symbol	stats . regwrite		834359						
ANR	835630	Symbol	romem		834359						
ANR	835631	Symbol	aop		834359						
ANR	835632	Symbol	pj_string		834359						
ANR	835633	Symbol	stacksize		834359						
ANR	835634	Symbol	r_anal_archinfo		834359						
ANR	835635	Symbol	regnow		834359						
ANR	835636	Symbol	mode		834359						
ANR	835637	Symbol	addrsize		834359						
ANR	835638	Symbol	len		834359						
ANR	835639	Symbol	stats		834359						
ANR	835640	Symbol	reg		834359						
ANR	835641	Symbol	tmp		834359						
ANR	835642	Symbol	mymemread		834359						
ANR	835643	Symbol	stats . regs		834359						
ANR	835644	Symbol	* esil		834359						
ANR	835645	Symbol	stats . inputregs		834359						
ANR	835646	Symbol	r_anal_op		834359						
ANR	835647	Symbol	NULL		834359						
ANR	835648	Symbol	r_list_newf		834359						
ANR	835649	Symbol	* esilstr		834359						
ANR	835650	Symbol	stats . regread		834359						
ANR	835651	Symbol	esil -> cb . hook_reg_write		834359						
ANR	835652	Symbol	iter		834359						
ANR	835653	Symbol	hasNext		834359						
ANR	835654	Symbol	& aop . esil		834359						
ANR	835655	Symbol	iotrap		834359						
ANR	835656	Symbol	myregread		834359						
ANR	835657	Symbol	& aop		834359						
ANR	835658	Symbol	core		834359						
ANR	835659	Symbol	contains		834359						
ANR	835660	Symbol	ops		834359						
ANR	835661	Symbol	strstr		834359						
ANR	835662	Symbol	r_config_get_i		834359						
ANR	835663	Symbol	esil -> cb . hook_reg_read		834359						
ANR	835664	Symbol	true		834359						
ANR	835665	Symbol	r_list_empty		834359						
ANR	835666	Symbol	ops_end		834359						
ANR	835667	Symbol	noNULL		834359						
ANR	835668	Symbol	esil -> user		834359						
ANR	835669	Symbol	esil -> cb . hook_mem_write		834359						
ANR	835670	Symbol	stats1		834359						
ANR	835671	Symbol	R_ANAL_OP_MASK_ESIL		834359						
ANR	835672	Symbol	* tmp		834359						
ANR	835673	Symbol	mymemwrite		834359						
ANR	835674	Symbol	* core		834359						
ANR	835675	Symbol	myregwrite		834359						
ANR	835676	Symbol	R_EMPTY		834359						
ANR	835677	Symbol	esilstr		834359						
ANR	835678	Symbol	core -> anal		834359						
ANR	835679	Symbol	esil -> nowrite		834359						
ANR	835680	Symbol	core -> io		834359						
ANR	835681	Symbol	addr_end		834359						
ANR	835682	Symbol	R_ANAL_OP_PREFIX_REP		834359						
ANR	835683	Symbol	aop . prefix		834359						
ANR	835684	Symbol	addr		834359						
ANR	835685	Symbol	free		834359						
ANR	835686	Symbol	* * core		834359						
ANR	835687	Symbol	core -> config		834359						
ANR	835688	Symbol	malloc		834359						
ANR	835689	Symbol	c		834359						
ANR	835690	Symbol	R_STRBUF_SAFEGET		834359						
ANR	835691	Symbol	mymemxsw		834359						
ANR	835692	Symbol	length		834359						
ANR	835693	Symbol	buf_sz		834359						
ANR	835694	Symbol	false		834359						
ANR	835695	Symbol	maxopsize		834359						
ANR	835696	Symbol	n		834359						
ANR	835697	Symbol	ptr		834359						
ANR	835698	Symbol	R_ANAL_ARCHINFO_MAX_OP_SIZE		834359						
ANR	835699	Symbol	buf		834359						
ANR	835700	Symbol	* core -> anal		834359						
ANR	835701	Symbol	R_ANAL_OP_MASK_HINT		834359						
ANR	835702	Symbol	& stats		834359						
ANR	835703	Symbol	r_anal_esil_new		834359						
ANR	835704	Symbol	pj		834359						
ANR	835705	Symbol	mymemxsr		834359						
ANR	835706	Symbol	esil -> cb		834359						
ANR	835707	Symbol	pj_new		834359						
ANR	835708	Symbol	strdup		834359						
ANR	835709	Symbol	esil -> cb . hook_mem_read		834359						
ANR	835710	Symbol	esil		834359						
ANR	835711	Symbol	r_list_length		834359						
ANR	835712	Symbol	r_list_new		834359						
ANR	835713	Function	cmd_aespc	5145:0:149356:150967							
ANR	835714	FunctionDef	"cmd_aespc (RCore * core , ut64 addr , int off)"		835713	0					
ANR	835715	CompoundStatement		5145:55:149411:150967	835713	0					
ANR	835716	IdentifierDeclStatement	RAnalEsil * esil = core -> anal -> esil ;	5146:1:149414:149448	835713	0	True				
ANR	835717	IdentifierDecl	* esil = core -> anal -> esil		835713	0					
ANR	835718	IdentifierDeclType	RAnalEsil *		835713	0					
ANR	835719	Identifier	esil		835713	1					
ANR	835720	AssignmentExpression	* esil = core -> anal -> esil		835713	2		=			
ANR	835721	Identifier	esil		835713	0					
ANR	835722	PtrMemberAccess	core -> anal -> esil		835713	1					
ANR	835723	PtrMemberAccess	core -> anal		835713	0					
ANR	835724	Identifier	core		835713	0					
ANR	835725	Identifier	anal		835713	1					
ANR	835726	Identifier	esil		835713	1					
ANR	835727	IdentifierDeclStatement	"int i , j = 0 ;"	5147:1:149451:149463	835713	1	True				
ANR	835728	IdentifierDecl	i		835713	0					
ANR	835729	IdentifierDeclType	int		835713	0					
ANR	835730	Identifier	i		835713	1					
ANR	835731	IdentifierDecl	j = 0		835713	1					
ANR	835732	IdentifierDeclType	int		835713	0					
ANR	835733	Identifier	j		835713	1					
ANR	835734	AssignmentExpression	j = 0		835713	2		=			
ANR	835735	Identifier	j		835713	0					
ANR	835736	PrimaryExpression	0		835713	1					
ANR	835737	IdentifierDeclStatement	int instr_size = 0 ;	5148:1:149466:149484	835713	2	True				
ANR	835738	IdentifierDecl	instr_size = 0		835713	0					
ANR	835739	IdentifierDeclType	int		835713	0					
ANR	835740	Identifier	instr_size		835713	1					
ANR	835741	AssignmentExpression	instr_size = 0		835713	2		=			
ANR	835742	Identifier	instr_size		835713	0					
ANR	835743	PrimaryExpression	0		835713	1					
ANR	835744	IdentifierDeclStatement	ut8 * buf ;	5149:1:149487:149495	835713	3	True				
ANR	835745	IdentifierDecl	* buf		835713	0					
ANR	835746	IdentifierDeclType	ut8 *		835713	0					
ANR	835747	Identifier	buf		835713	1					
ANR	835748	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	5150:1:149498:149515	835713	4	True				
ANR	835749	IdentifierDecl	aop = { 0 }		835713	0					
ANR	835750	IdentifierDeclType	RAnalOp		835713	0					
ANR	835751	Identifier	aop		835713	1					
ANR	835752	AssignmentExpression	aop = { 0 }		835713	2		=			
ANR	835753	Identifier	aop		835713	0					
ANR	835754	InitializerList	0		835713	1					
ANR	835755	PrimaryExpression	0		835713	0					
ANR	835756	IdentifierDeclStatement	"int ret , bsize = R_MAX ( 64 , core -> blocksize ) ;"	5151:1:149518:149563	835713	5	True				
ANR	835757	IdentifierDecl	ret		835713	0					
ANR	835758	IdentifierDeclType	int		835713	0					
ANR	835759	Identifier	ret		835713	1					
ANR	835760	IdentifierDecl	"bsize = R_MAX ( 64 , core -> blocksize )"		835713	1					
ANR	835761	IdentifierDeclType	int		835713	0					
ANR	835762	Identifier	bsize		835713	1					
ANR	835763	AssignmentExpression	"bsize = R_MAX ( 64 , core -> blocksize )"		835713	2		=			
ANR	835764	Identifier	bsize		835713	0					
ANR	835765	CallExpression	"R_MAX ( 64 , core -> blocksize )"		835713	1					
ANR	835766	Callee	R_MAX		835713	0					
ANR	835767	Identifier	R_MAX		835713	0					
ANR	835768	ArgumentList	64		835713	1					
ANR	835769	Argument	64		835713	0					
ANR	835770	PrimaryExpression	64		835713	0					
ANR	835771	Argument	core -> blocksize		835713	1					
ANR	835772	PtrMemberAccess	core -> blocksize		835713	0					
ANR	835773	Identifier	core		835713	0					
ANR	835774	Identifier	blocksize		835713	1					
ANR	835775	IdentifierDeclStatement	"const int mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE ) ;"	5152:1:149566:149646	835713	6	True				
ANR	835776	IdentifierDecl	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		835713	0					
ANR	835777	IdentifierDeclType	const int		835713	0					
ANR	835778	Identifier	mininstrsz		835713	1					
ANR	835779	AssignmentExpression	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		835713	2		=			
ANR	835780	Identifier	mininstrsz		835713	0					
ANR	835781	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		835713	1					
ANR	835782	Callee	r_anal_archinfo		835713	0					
ANR	835783	Identifier	r_anal_archinfo		835713	0					
ANR	835784	ArgumentList	core -> anal		835713	1					
ANR	835785	Argument	core -> anal		835713	0					
ANR	835786	PtrMemberAccess	core -> anal		835713	0					
ANR	835787	Identifier	core		835713	0					
ANR	835788	Identifier	anal		835713	1					
ANR	835789	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		835713	1					
ANR	835790	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		835713	0					
ANR	835791	IdentifierDeclStatement	"const int minopcode = R_MAX ( 1 , mininstrsz ) ;"	5153:1:149649:149692	835713	7	True				
ANR	835792	IdentifierDecl	"minopcode = R_MAX ( 1 , mininstrsz )"		835713	0					
ANR	835793	IdentifierDeclType	const int		835713	0					
ANR	835794	Identifier	minopcode		835713	1					
ANR	835795	AssignmentExpression	"minopcode = R_MAX ( 1 , mininstrsz )"		835713	2		=			
ANR	835796	Identifier	minopcode		835713	0					
ANR	835797	CallExpression	"R_MAX ( 1 , mininstrsz )"		835713	1					
ANR	835798	Callee	R_MAX		835713	0					
ANR	835799	Identifier	R_MAX		835713	0					
ANR	835800	ArgumentList	1		835713	1					
ANR	835801	Argument	1		835713	0					
ANR	835802	PrimaryExpression	1		835713	0					
ANR	835803	Argument	mininstrsz		835713	1					
ANR	835804	Identifier	mininstrsz		835713	0					
ANR	835805	IdentifierDeclStatement	"const char * pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC ) ;"	5154:1:149695:149758	835713	8	True				
ANR	835806	IdentifierDecl	"* pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		835713	0					
ANR	835807	IdentifierDeclType	const char *		835713	0					
ANR	835808	Identifier	pc		835713	1					
ANR	835809	AssignmentExpression	"* pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		835713	2		=			
ANR	835810	Identifier	pc		835713	0					
ANR	835811	CallExpression	"r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		835713	1					
ANR	835812	Callee	r_reg_get_name		835713	0					
ANR	835813	Identifier	r_reg_get_name		835713	0					
ANR	835814	ArgumentList	core -> dbg -> reg		835713	1					
ANR	835815	Argument	core -> dbg -> reg		835713	0					
ANR	835816	PtrMemberAccess	core -> dbg -> reg		835713	0					
ANR	835817	PtrMemberAccess	core -> dbg		835713	0					
ANR	835818	Identifier	core		835713	0					
ANR	835819	Identifier	dbg		835713	1					
ANR	835820	Identifier	reg		835713	1					
ANR	835821	Argument	R_REG_NAME_PC		835713	1					
ANR	835822	Identifier	R_REG_NAME_PC		835713	0					
ANR	835823	IdentifierDeclStatement	"RRegItem * r = r_reg_get ( core -> dbg -> reg , pc , - 1 ) ;"	5155:1:149761:149809	835713	9	True				
ANR	835824	IdentifierDecl	"* r = r_reg_get ( core -> dbg -> reg , pc , - 1 )"		835713	0					
ANR	835825	IdentifierDeclType	RRegItem *		835713	0					
ANR	835826	Identifier	r		835713	1					
ANR	835827	AssignmentExpression	"* r = r_reg_get ( core -> dbg -> reg , pc , - 1 )"		835713	2		=			
ANR	835828	Identifier	r		835713	0					
ANR	835829	CallExpression	"r_reg_get ( core -> dbg -> reg , pc , - 1 )"		835713	1					
ANR	835830	Callee	r_reg_get		835713	0					
ANR	835831	Identifier	r_reg_get		835713	0					
ANR	835832	ArgumentList	core -> dbg -> reg		835713	1					
ANR	835833	Argument	core -> dbg -> reg		835713	0					
ANR	835834	PtrMemberAccess	core -> dbg -> reg		835713	0					
ANR	835835	PtrMemberAccess	core -> dbg		835713	0					
ANR	835836	Identifier	core		835713	0					
ANR	835837	Identifier	dbg		835713	1					
ANR	835838	Identifier	reg		835713	1					
ANR	835839	Argument	pc		835713	1					
ANR	835840	Identifier	pc		835713	0					
ANR	835841	Argument	- 1		835713	2					
ANR	835842	UnaryOperationExpression	- 1		835713	0					
ANR	835843	UnaryOperator	-		835713	0					
ANR	835844	PrimaryExpression	1		835713	1					
ANR	835845	IdentifierDeclStatement	"int stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" ) ;"	5156:1:149812:149877	835713	10	True				
ANR	835846	IdentifierDecl	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		835713	0					
ANR	835847	IdentifierDeclType	int		835713	0					
ANR	835848	Identifier	stacksize		835713	1					
ANR	835849	AssignmentExpression	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		835713	2		=			
ANR	835850	Identifier	stacksize		835713	0					
ANR	835851	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.depth"" )"		835713	1					
ANR	835852	Callee	r_config_get_i		835713	0					
ANR	835853	Identifier	r_config_get_i		835713	0					
ANR	835854	ArgumentList	core -> config		835713	1					
ANR	835855	Argument	core -> config		835713	0					
ANR	835856	PtrMemberAccess	core -> config		835713	0					
ANR	835857	Identifier	core		835713	0					
ANR	835858	Identifier	config		835713	1					
ANR	835859	Argument	"""esil.stack.depth"""		835713	1					
ANR	835860	PrimaryExpression	"""esil.stack.depth"""		835713	0					
ANR	835861	IdentifierDeclStatement	"int iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	5157:1:149880:149937	835713	11	True				
ANR	835862	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		835713	0					
ANR	835863	IdentifierDeclType	int		835713	0					
ANR	835864	Identifier	iotrap		835713	1					
ANR	835865	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		835713	2		=			
ANR	835866	Identifier	iotrap		835713	0					
ANR	835867	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		835713	1					
ANR	835868	Callee	r_config_get_i		835713	0					
ANR	835869	Identifier	r_config_get_i		835713	0					
ANR	835870	ArgumentList	core -> config		835713	1					
ANR	835871	Argument	core -> config		835713	0					
ANR	835872	PtrMemberAccess	core -> config		835713	0					
ANR	835873	Identifier	core		835713	0					
ANR	835874	Identifier	config		835713	1					
ANR	835875	Argument	"""esil.iotrap"""		835713	1					
ANR	835876	PrimaryExpression	"""esil.iotrap"""		835713	0					
ANR	835877	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	5158:1:149940:150011	835713	12	True				
ANR	835878	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		835713	0					
ANR	835879	IdentifierDeclType	unsigned int		835713	0					
ANR	835880	Identifier	addrsize		835713	1					
ANR	835881	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		835713	2		=			
ANR	835882	Identifier	addrsize		835713	0					
ANR	835883	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		835713	1					
ANR	835884	Callee	r_config_get_i		835713	0					
ANR	835885	Identifier	r_config_get_i		835713	0					
ANR	835886	ArgumentList	core -> config		835713	1					
ANR	835887	Argument	core -> config		835713	0					
ANR	835888	PtrMemberAccess	core -> config		835713	0					
ANR	835889	Identifier	core		835713	0					
ANR	835890	Identifier	config		835713	1					
ANR	835891	Argument	"""esil.addr.size"""		835713	1					
ANR	835892	PrimaryExpression	"""esil.addr.size"""		835713	0					
ANR	835893	IfStatement	if ( ! esil )		835713	13					
ANR	835894	Condition	! esil	5160:5:150019:150023	835713	0	True				
ANR	835895	UnaryOperationExpression	! esil		835713	0					
ANR	835896	UnaryOperator	!		835713	0					
ANR	835897	Identifier	esil		835713	1					
ANR	835898	CompoundStatement		16:12:614:614	835713	1					
ANR	835899	IfStatement	"if ( ! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) ) )"		835713	0					
ANR	835900	Condition	"! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"	5161:6:150034:150088	835713	0	True				
ANR	835901	UnaryOperationExpression	"! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"		835713	0					
ANR	835902	UnaryOperator	!		835713	0					
ANR	835903	AssignmentExpression	"esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		835713	1		=			
ANR	835904	Identifier	esil		835713	0					
ANR	835905	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		835713	1					
ANR	835906	Callee	r_anal_esil_new		835713	0					
ANR	835907	Identifier	r_anal_esil_new		835713	0					
ANR	835908	ArgumentList	stacksize		835713	1					
ANR	835909	Argument	stacksize		835713	0					
ANR	835910	Identifier	stacksize		835713	0					
ANR	835911	Argument	iotrap		835713	1					
ANR	835912	Identifier	iotrap		835713	0					
ANR	835913	Argument	addrsize		835713	2					
ANR	835914	Identifier	addrsize		835713	0					
ANR	835915	CompoundStatement		17:63:679:679	835713	1					
ANR	835916	ReturnStatement	return ;	5162:3:150096:150102	835713	0	True				
ANR	835917	ExpressionStatement	buf = malloc ( bsize )	5165:1:150112:150132	835713	14	True				
ANR	835918	AssignmentExpression	buf = malloc ( bsize )		835713	0		=			
ANR	835919	Identifier	buf		835713	0					
ANR	835920	CallExpression	malloc ( bsize )		835713	1					
ANR	835921	Callee	malloc		835713	0					
ANR	835922	Identifier	malloc		835713	0					
ANR	835923	ArgumentList	bsize		835713	1					
ANR	835924	Argument	bsize		835713	0					
ANR	835925	Identifier	bsize		835713	0					
ANR	835926	IfStatement	if ( ! buf )		835713	15					
ANR	835927	Condition	! buf	5166:5:150139:150142	835713	0	True				
ANR	835928	UnaryOperationExpression	! buf		835713	0					
ANR	835929	UnaryOperator	!		835713	0					
ANR	835930	Identifier	buf		835713	1					
ANR	835931	CompoundStatement		22:11:733:733	835713	1					
ANR	835932	ExpressionStatement	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , bsize )"	5167:2:150149:150196	835713	0	True				
ANR	835933	CallExpression	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , bsize )"		835713	0					
ANR	835934	Callee	eprintf		835713	0					
ANR	835935	Identifier	eprintf		835713	0					
ANR	835936	ArgumentList	"""Cannot allocate %d byte(s)\\n"""		835713	1					
ANR	835937	Argument	"""Cannot allocate %d byte(s)\\n"""		835713	0					
ANR	835938	PrimaryExpression	"""Cannot allocate %d byte(s)\\n"""		835713	0					
ANR	835939	Argument	bsize		835713	1					
ANR	835940	Identifier	bsize		835713	0					
ANR	835941	ExpressionStatement	free ( buf )	5168:2:150200:150210	835713	1	True				
ANR	835942	CallExpression	free ( buf )		835713	0					
ANR	835943	Callee	free		835713	0					
ANR	835944	Identifier	free		835713	0					
ANR	835945	ArgumentList	buf		835713	1					
ANR	835946	Argument	buf		835713	0					
ANR	835947	Identifier	buf		835713	0					
ANR	835948	ReturnStatement	return ;	5169:2:150214:150220	835713	2	True				
ANR	835949	IfStatement	if ( addr == - 1 )		835713	16					
ANR	835950	Condition	addr == - 1	5171:5:150230:150239	835713	0	True				
ANR	835951	EqualityExpression	addr == - 1		835713	0		==			
ANR	835952	Identifier	addr		835713	0					
ANR	835953	UnaryOperationExpression	- 1		835713	1					
ANR	835954	UnaryOperator	-		835713	0					
ANR	835955	PrimaryExpression	1		835713	1					
ANR	835956	CompoundStatement		27:17:830:830	835713	1					
ANR	835957	ExpressionStatement	"addr = r_debug_reg_get ( core -> dbg , pc )"	5172:2:150246:150284	835713	0	True				
ANR	835958	AssignmentExpression	"addr = r_debug_reg_get ( core -> dbg , pc )"		835713	0		=			
ANR	835959	Identifier	addr		835713	0					
ANR	835960	CallExpression	"r_debug_reg_get ( core -> dbg , pc )"		835713	1					
ANR	835961	Callee	r_debug_reg_get		835713	0					
ANR	835962	Identifier	r_debug_reg_get		835713	0					
ANR	835963	ArgumentList	core -> dbg		835713	1					
ANR	835964	Argument	core -> dbg		835713	0					
ANR	835965	PtrMemberAccess	core -> dbg		835713	0					
ANR	835966	Identifier	core		835713	0					
ANR	835967	Identifier	dbg		835713	1					
ANR	835968	Argument	pc		835713	1					
ANR	835969	Identifier	pc		835713	0					
ANR	835970	IdentifierDeclStatement	ut64 curpc = addr ;	5174:1:150290:150307	835713	17	True				
ANR	835971	IdentifierDecl	curpc = addr		835713	0					
ANR	835972	IdentifierDeclType	ut64		835713	0					
ANR	835973	Identifier	curpc		835713	1					
ANR	835974	AssignmentExpression	curpc = addr		835713	2		=			
ANR	835975	Identifier	addr		835713	0					
ANR	835976	Identifier	addr		835713	1					
ANR	835977	IdentifierDeclStatement	ut64 oldoff = core -> offset ;	5175:1:150310:150336	835713	18	True				
ANR	835978	IdentifierDecl	oldoff = core -> offset		835713	0					
ANR	835979	IdentifierDeclType	ut64		835713	0					
ANR	835980	Identifier	oldoff		835713	1					
ANR	835981	AssignmentExpression	oldoff = core -> offset		835713	2		=			
ANR	835982	Identifier	oldoff		835713	0					
ANR	835983	PtrMemberAccess	core -> offset		835713	1					
ANR	835984	Identifier	core		835713	0					
ANR	835985	Identifier	offset		835713	1					
ANR	835986	ForStatement	"for ( i = 0 , j = 0 ; j < off ; i ++ , j ++ )"		835713	19					
ANR	835987	ForInit	"i = 0 , j = 0 ;"	5176:6:150344:150356	835713	0	True				
ANR	835988	Expression	"i = 0 , j = 0"		835713	0					
ANR	835989	AssignmentExpression	i = 0		835713	0		=			
ANR	835990	Identifier	i		835713	0					
ANR	835991	PrimaryExpression	0		835713	1					
ANR	835992	AssignmentExpression	j = 0		835713	1		=			
ANR	835993	Identifier	j		835713	0					
ANR	835994	PrimaryExpression	0		835713	1					
ANR	835995	Condition	j < off	5176:20:150358:150364	835713	1	True				
ANR	835996	RelationalExpression	j < off		835713	0		<			
ANR	835997	Identifier	j		835713	0					
ANR	835998	Identifier	off		835713	1					
ANR	835999	Expression	"i ++ , j ++"	5176:30:150368:150375	835713	2	True				
ANR	836000	PostIncDecOperationExpression	i ++		835713	0					
ANR	836001	Identifier	i		835713	0					
ANR	836002	IncDec	++		835713	1					
ANR	836003	PostIncDecOperationExpression	j ++		835713	1					
ANR	836004	Identifier	j		835713	0					
ANR	836005	IncDec	++		835713	1					
ANR	836006	CompoundStatement		44:2:1246:1315	835713	3					
ANR	836007	IfStatement	if ( r_cons_is_breaked ( ) )		835713	0					
ANR	836008	Condition	r_cons_is_breaked ( )	5177:6:150386:150405	835713	0	True				
ANR	836009	CallExpression	r_cons_is_breaked ( )		835713	0					
ANR	836010	Callee	r_cons_is_breaked		835713	0					
ANR	836011	Identifier	r_cons_is_breaked		835713	0					
ANR	836012	ArgumentList			835713	1					
ANR	836013	CompoundStatement		33:28:996:996	835713	1					
ANR	836014	BreakStatement	break ;	5178:3:150413:150418	835713	0	True				
ANR	836015	IfStatement	if ( i >= ( bsize - 32 ) )		835713	1					
ANR	836016	Condition	i >= ( bsize - 32 )	5180:6:150430:150446	835713	0	True				
ANR	836017	RelationalExpression	i >= ( bsize - 32 )		835713	0		>=			
ANR	836018	Identifier	i		835713	0					
ANR	836019	AdditiveExpression	bsize - 32		835713	1		-			
ANR	836020	Identifier	bsize		835713	0					
ANR	836021	PrimaryExpression	32		835713	1					
ANR	836022	CompoundStatement		36:25:1037:1037	835713	1					
ANR	836023	ExpressionStatement	i = 0	5181:3:150454:150459	835713	0	True				
ANR	836024	AssignmentExpression	i = 0		835713	0		=			
ANR	836025	Identifier	i		835713	0					
ANR	836026	PrimaryExpression	0		835713	1					
ANR	836027	IfStatement	if ( ! i )		835713	2					
ANR	836028	Condition	! i	5183:6:150471:150472	835713	0	True				
ANR	836029	UnaryOperationExpression	! i		835713	0					
ANR	836030	UnaryOperator	!		835713	0					
ANR	836031	Identifier	i		835713	1					
ANR	836032	CompoundStatement		39:10:1063:1063	835713	1					
ANR	836033	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , bsize )"	5184:3:150480:150521	835713	0	True				
ANR	836034	CallExpression	"r_io_read_at ( core -> io , addr , buf , bsize )"		835713	0					
ANR	836035	Callee	r_io_read_at		835713	0					
ANR	836036	Identifier	r_io_read_at		835713	0					
ANR	836037	ArgumentList	core -> io		835713	1					
ANR	836038	Argument	core -> io		835713	0					
ANR	836039	PtrMemberAccess	core -> io		835713	0					
ANR	836040	Identifier	core		835713	0					
ANR	836041	Identifier	io		835713	1					
ANR	836042	Argument	addr		835713	1					
ANR	836043	Identifier	addr		835713	0					
ANR	836044	Argument	buf		835713	2					
ANR	836045	Identifier	buf		835713	0					
ANR	836046	Argument	bsize		835713	3					
ANR	836047	Identifier	bsize		835713	0					
ANR	836048	ExpressionStatement	"ret = r_anal_op ( core -> anal , & aop , addr , buf + i , bsize - i , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"	5186:2:150529:150633	835713	3	True				
ANR	836049	AssignmentExpression	"ret = r_anal_op ( core -> anal , & aop , addr , buf + i , bsize - i , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		835713	0		=			
ANR	836050	Identifier	ret		835713	0					
ANR	836051	CallExpression	"r_anal_op ( core -> anal , & aop , addr , buf + i , bsize - i , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		835713	1					
ANR	836052	Callee	r_anal_op		835713	0					
ANR	836053	Identifier	r_anal_op		835713	0					
ANR	836054	ArgumentList	core -> anal		835713	1					
ANR	836055	Argument	core -> anal		835713	0					
ANR	836056	PtrMemberAccess	core -> anal		835713	0					
ANR	836057	Identifier	core		835713	0					
ANR	836058	Identifier	anal		835713	1					
ANR	836059	Argument	& aop		835713	1					
ANR	836060	UnaryOperationExpression	& aop		835713	0					
ANR	836061	UnaryOperator	&		835713	0					
ANR	836062	Identifier	aop		835713	1					
ANR	836063	Argument	addr		835713	2					
ANR	836064	Identifier	addr		835713	0					
ANR	836065	Argument	buf + i		835713	3					
ANR	836066	AdditiveExpression	buf + i		835713	0		+			
ANR	836067	Identifier	buf		835713	0					
ANR	836068	Identifier	i		835713	1					
ANR	836069	Argument	bsize - i		835713	4					
ANR	836070	AdditiveExpression	bsize - i		835713	0		-			
ANR	836071	Identifier	bsize		835713	0					
ANR	836072	Identifier	i		835713	1					
ANR	836073	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT		835713	5					
ANR	836074	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT		835713	0		|			
ANR	836075	Identifier	R_ANAL_OP_MASK_BASIC		835713	0					
ANR	836076	Identifier	R_ANAL_OP_MASK_HINT		835713	1					
ANR	836077	ExpressionStatement	instr_size += ret	5187:2:150637:150654	835713	4	True				
ANR	836078	AssignmentExpression	instr_size += ret		835713	0		+=			
ANR	836079	Identifier	instr_size		835713	0					
ANR	836080	Identifier	ret		835713	1					
ANR	836081	IdentifierDeclStatement	int inc = ( core -> search -> align > 0 ) ? core -> search -> align - 1 : ret - 1 ;	5188:2:150658:150727	835713	5	True				
ANR	836082	IdentifierDecl	inc = ( core -> search -> align > 0 ) ? core -> search -> align - 1 : ret - 1		835713	0					
ANR	836083	IdentifierDeclType	int		835713	0					
ANR	836084	Identifier	inc		835713	1					
ANR	836085	AssignmentExpression	inc = ( core -> search -> align > 0 ) ? core -> search -> align - 1 : ret - 1		835713	2		=			
ANR	836086	Identifier	inc		835713	0					
ANR	836087	ConditionalExpression	( core -> search -> align > 0 ) ? core -> search -> align - 1 : ret - 1		835713	1					
ANR	836088	Condition	core -> search -> align > 0		835713	0					
ANR	836089	RelationalExpression	core -> search -> align > 0		835713	0		>			
ANR	836090	PtrMemberAccess	core -> search -> align		835713	0					
ANR	836091	PtrMemberAccess	core -> search		835713	0					
ANR	836092	Identifier	core		835713	0					
ANR	836093	Identifier	search		835713	1					
ANR	836094	Identifier	align		835713	1					
ANR	836095	PrimaryExpression	0		835713	1					
ANR	836096	AdditiveExpression	core -> search -> align - 1		835713	1		-			
ANR	836097	PtrMemberAccess	core -> search -> align		835713	0					
ANR	836098	PtrMemberAccess	core -> search		835713	0					
ANR	836099	Identifier	core		835713	0					
ANR	836100	Identifier	search		835713	1					
ANR	836101	Identifier	align		835713	1					
ANR	836102	PrimaryExpression	1		835713	1					
ANR	836103	AdditiveExpression	ret - 1		835713	2		-			
ANR	836104	Identifier	ret		835713	0					
ANR	836105	PrimaryExpression	1		835713	1					
ANR	836106	IfStatement	if ( inc < 0 )		835713	6					
ANR	836107	Condition	inc < 0	5189:6:150735:150741	835713	0	True				
ANR	836108	RelationalExpression	inc < 0		835713	0		<			
ANR	836109	Identifier	inc		835713	0					
ANR	836110	PrimaryExpression	0		835713	1					
ANR	836111	CompoundStatement		45:15:1332:1332	835713	1					
ANR	836112	ExpressionStatement	inc = minopcode	5190:3:150749:150764	835713	0	True				
ANR	836113	AssignmentExpression	inc = minopcode		835713	0		=			
ANR	836114	Identifier	inc		835713	0					
ANR	836115	Identifier	minopcode		835713	1					
ANR	836116	ExpressionStatement	i += inc	5192:2:150772:150780	835713	7	True				
ANR	836117	AssignmentExpression	i += inc		835713	0		+=			
ANR	836118	Identifier	i		835713	0					
ANR	836119	Identifier	inc		835713	1					
ANR	836120	ExpressionStatement	addr += inc	5193:2:150784:150795	835713	8	True				
ANR	836121	AssignmentExpression	addr += inc		835713	0		+=			
ANR	836122	Identifier	addr		835713	0					
ANR	836123	Identifier	inc		835713	1					
ANR	836124	ExpressionStatement	r_anal_op_fini ( & aop )	5194:2:150799:150820	835713	9	True				
ANR	836125	CallExpression	r_anal_op_fini ( & aop )		835713	0					
ANR	836126	Callee	r_anal_op_fini		835713	0					
ANR	836127	Identifier	r_anal_op_fini		835713	0					
ANR	836128	ArgumentList	& aop		835713	1					
ANR	836129	Argument	& aop		835713	0					
ANR	836130	UnaryOperationExpression	& aop		835713	0					
ANR	836131	UnaryOperator	&		835713	0					
ANR	836132	Identifier	aop		835713	1					
ANR	836133	ExpressionStatement	"r_reg_set_value ( core -> dbg -> reg , r , curpc )"	5196:1:150826:150868	835713	20	True				
ANR	836134	CallExpression	"r_reg_set_value ( core -> dbg -> reg , r , curpc )"		835713	0					
ANR	836135	Callee	r_reg_set_value		835713	0					
ANR	836136	Identifier	r_reg_set_value		835713	0					
ANR	836137	ArgumentList	core -> dbg -> reg		835713	1					
ANR	836138	Argument	core -> dbg -> reg		835713	0					
ANR	836139	PtrMemberAccess	core -> dbg -> reg		835713	0					
ANR	836140	PtrMemberAccess	core -> dbg		835713	0					
ANR	836141	Identifier	core		835713	0					
ANR	836142	Identifier	dbg		835713	1					
ANR	836143	Identifier	reg		835713	1					
ANR	836144	Argument	r		835713	1					
ANR	836145	Identifier	r		835713	0					
ANR	836146	Argument	curpc		835713	2					
ANR	836147	Identifier	curpc		835713	0					
ANR	836148	ExpressionStatement	"r_core_esil_step ( core , curpc + instr_size , NULL , NULL , false )"	5197:1:150871:150933	835713	21	True				
ANR	836149	CallExpression	"r_core_esil_step ( core , curpc + instr_size , NULL , NULL , false )"		835713	0					
ANR	836150	Callee	r_core_esil_step		835713	0					
ANR	836151	Identifier	r_core_esil_step		835713	0					
ANR	836152	ArgumentList	core		835713	1					
ANR	836153	Argument	core		835713	0					
ANR	836154	Identifier	core		835713	0					
ANR	836155	Argument	curpc + instr_size		835713	1					
ANR	836156	AdditiveExpression	curpc + instr_size		835713	0		+			
ANR	836157	Identifier	curpc		835713	0					
ANR	836158	Identifier	instr_size		835713	1					
ANR	836159	Argument	NULL		835713	2					
ANR	836160	Identifier	NULL		835713	0					
ANR	836161	Argument	NULL		835713	3					
ANR	836162	Identifier	NULL		835713	0					
ANR	836163	Argument	false		835713	4					
ANR	836164	Identifier	false		835713	0					
ANR	836165	ExpressionStatement	"r_core_seek ( core , oldoff , 1 )"	5198:1:150936:150965	835713	22	True				
ANR	836166	CallExpression	"r_core_seek ( core , oldoff , 1 )"		835713	0					
ANR	836167	Callee	r_core_seek		835713	0					
ANR	836168	Identifier	r_core_seek		835713	0					
ANR	836169	ArgumentList	core		835713	1					
ANR	836170	Argument	core		835713	0					
ANR	836171	Identifier	core		835713	0					
ANR	836172	Argument	oldoff		835713	1					
ANR	836173	Identifier	oldoff		835713	0					
ANR	836174	Argument	1		835713	2					
ANR	836175	PrimaryExpression	1		835713	0					
ANR	836176	ReturnType	static void		835713	1					
ANR	836177	Identifier	cmd_aespc		835713	2					
ANR	836178	ParameterList	"RCore * core , ut64 addr , int off"		835713	3					
ANR	836179	Parameter	RCore * core	5145:22:149378:149388	835713	0	True				
ANR	836180	ParameterType	RCore *		835713	0					
ANR	836181	Identifier	core		835713	1					
ANR	836182	Parameter	ut64 addr	5145:35:149391:149399	835713	1	True				
ANR	836183	ParameterType	ut64		835713	0					
ANR	836184	Identifier	addr		835713	1					
ANR	836185	Parameter	int off	5145:46:149402:149408	835713	2	True				
ANR	836186	ParameterType	int		835713	0					
ANR	836187	Identifier	off		835713	1					
ANR	836188	CFGEntryNode	ENTRY		835713		True				
ANR	836189	CFGExitNode	EXIT		835713		True				
ANR	836190	Symbol	aop		835713						
ANR	836191	Symbol	R_REG_NAME_PC		835713						
ANR	836192	Symbol	stacksize		835713						
ANR	836193	Symbol	r_anal_archinfo		835713						
ANR	836194	Symbol	mininstrsz		835713						
ANR	836195	Symbol	r_debug_reg_get		835713						
ANR	836196	Symbol	core -> offset		835713						
ANR	836197	Symbol	instr_size		835713						
ANR	836198	Symbol	minopcode		835713						
ANR	836199	Symbol	addrsize		835713						
ANR	836200	Symbol	core -> search -> align		835713						
ANR	836201	Symbol	curpc		835713						
ANR	836202	Symbol	core -> anal -> esil		835713						
ANR	836203	Symbol	r_reg_get		835713						
ANR	836204	Symbol	r_anal_op		835713						
ANR	836205	Symbol	ret		835713						
ANR	836206	Symbol	core -> blocksize		835713						
ANR	836207	Symbol	NULL		835713						
ANR	836208	Symbol	* core -> search		835713						
ANR	836209	Symbol	iotrap		835713						
ANR	836210	Symbol	& aop		835713						
ANR	836211	Symbol	core		835713						
ANR	836212	Symbol	r_reg_get_name		835713						
ANR	836213	Symbol	r_config_get_i		835713						
ANR	836214	Symbol	* core -> dbg		835713						
ANR	836215	Symbol	* core		835713						
ANR	836216	Symbol	core -> anal		835713						
ANR	836217	Symbol	R_ANAL_OP_MASK_BASIC		835713						
ANR	836218	Symbol	r_cons_is_breaked		835713						
ANR	836219	Symbol	core -> io		835713						
ANR	836220	Symbol	addr		835713						
ANR	836221	Symbol	core -> search		835713						
ANR	836222	Symbol	* * core		835713						
ANR	836223	Symbol	inc		835713						
ANR	836224	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		835713						
ANR	836225	Symbol	core -> config		835713						
ANR	836226	Symbol	malloc		835713						
ANR	836227	Symbol	oldoff		835713						
ANR	836228	Symbol	false		835713						
ANR	836229	Symbol	i		835713						
ANR	836230	Symbol	j		835713						
ANR	836231	Symbol	off		835713						
ANR	836232	Symbol	buf		835713						
ANR	836233	Symbol	r		835713						
ANR	836234	Symbol	* core -> anal		835713						
ANR	836235	Symbol	pc		835713						
ANR	836236	Symbol	core -> dbg -> reg		835713						
ANR	836237	Symbol	R_ANAL_OP_MASK_HINT		835713						
ANR	836238	Symbol	R_MAX		835713						
ANR	836239	Symbol	bsize		835713						
ANR	836240	Symbol	r_anal_esil_new		835713						
ANR	836241	Symbol	esil		835713						
ANR	836242	Symbol	core -> dbg		835713						
ANR	836243	DeclStmt									
ANR	836244	Decl							const char	const char [ ]	_handler_no_name
ANR	836245	Function	_aeli_iter	5202:0:151022:151228							
ANR	836246	FunctionDef	"_aeli_iter (dictkv * kv , void * ud)"		836245	0					
ANR	836247	CompoundStatement		5202:44:151066:151228	836245	0					
ANR	836248	IdentifierDeclStatement	RAnalEsilInterrupt * interrupt = kv -> u ;	5203:1:151069:151106	836245	0	True				
ANR	836249	IdentifierDecl	* interrupt = kv -> u		836245	0					
ANR	836250	IdentifierDeclType	RAnalEsilInterrupt *		836245	0					
ANR	836251	Identifier	interrupt		836245	1					
ANR	836252	AssignmentExpression	* interrupt = kv -> u		836245	2		=			
ANR	836253	Identifier	interrupt		836245	0					
ANR	836254	PtrMemberAccess	kv -> u		836245	1					
ANR	836255	Identifier	kv		836245	0					
ANR	836256	Identifier	u		836245	1					
ANR	836257	ExpressionStatement	"r_cons_printf ( ""%3x: %s\\n"" , kv -> k , interrupt -> handler -> name ? interrupt -> handler -> name : _handler_no_name )"	5204:1:151109:151215	836245	1	True				
ANR	836258	CallExpression	"r_cons_printf ( ""%3x: %s\\n"" , kv -> k , interrupt -> handler -> name ? interrupt -> handler -> name : _handler_no_name )"		836245	0					
ANR	836259	Callee	r_cons_printf		836245	0					
ANR	836260	Identifier	r_cons_printf		836245	0					
ANR	836261	ArgumentList	"""%3x: %s\\n"""		836245	1					
ANR	836262	Argument	"""%3x: %s\\n"""		836245	0					
ANR	836263	PrimaryExpression	"""%3x: %s\\n"""		836245	0					
ANR	836264	Argument	kv -> k		836245	1					
ANR	836265	PtrMemberAccess	kv -> k		836245	0					
ANR	836266	Identifier	kv		836245	0					
ANR	836267	Identifier	k		836245	1					
ANR	836268	Argument	interrupt -> handler -> name ? interrupt -> handler -> name : _handler_no_name		836245	2					
ANR	836269	ConditionalExpression	interrupt -> handler -> name ? interrupt -> handler -> name : _handler_no_name		836245	0					
ANR	836270	Condition	interrupt -> handler -> name		836245	0					
ANR	836271	PtrMemberAccess	interrupt -> handler -> name		836245	0					
ANR	836272	PtrMemberAccess	interrupt -> handler		836245	0					
ANR	836273	Identifier	interrupt		836245	0					
ANR	836274	Identifier	handler		836245	1					
ANR	836275	Identifier	name		836245	1					
ANR	836276	PtrMemberAccess	interrupt -> handler -> name		836245	1					
ANR	836277	PtrMemberAccess	interrupt -> handler		836245	0					
ANR	836278	Identifier	interrupt		836245	0					
ANR	836279	Identifier	handler		836245	1					
ANR	836280	Identifier	name		836245	1					
ANR	836281	Identifier	_handler_no_name		836245	2					
ANR	836282	ReturnStatement	return 0 ;	5205:1:151218:151226	836245	2	True				
ANR	836283	PrimaryExpression	0		836245	0					
ANR	836284	ReturnType	static int		836245	1					
ANR	836285	Identifier	_aeli_iter		836245	2					
ANR	836286	ParameterList	"dictkv * kv , void * ud"		836245	3					
ANR	836287	Parameter	dictkv * kv	5202:22:151044:151053	836245	0	True				
ANR	836288	ParameterType	dictkv *		836245	0					
ANR	836289	Identifier	kv		836245	1					
ANR	836290	Parameter	void * ud	5202:34:151056:151063	836245	1	True				
ANR	836291	ParameterType	void *		836245	0					
ANR	836292	Identifier	ud		836245	1					
ANR	836293	CFGEntryNode	ENTRY		836245		True				
ANR	836294	CFGExitNode	EXIT		836245		True				
ANR	836295	Symbol	* kv		836245						
ANR	836296	Symbol	* interrupt		836245						
ANR	836297	Symbol	kv -> u		836245						
ANR	836298	Symbol	* * interrupt		836245						
ANR	836299	Symbol	_handler_no_name		836245						
ANR	836300	Symbol	interrupt		836245						
ANR	836301	Symbol	interrupt -> handler		836245						
ANR	836302	Symbol	kv		836245						
ANR	836303	Symbol	ud		836245						
ANR	836304	Symbol	* interrupt -> handler		836245						
ANR	836305	Symbol	kv -> k		836245						
ANR	836306	Symbol	interrupt -> handler -> name		836245						
ANR	836307	Function	r_anal_aefa	5208:0:151231:152833							
ANR	836308	FunctionDef	"r_anal_aefa (RCore * core , const char * arg)"		836307	0					
ANR	836309	CompoundStatement		5208:54:151285:152833	836307	0					
ANR	836310	IdentifierDeclStatement	"ut64 to = r_num_math ( core -> num , arg ) ;"	5209:1:151288:151325	836307	0	True				
ANR	836311	IdentifierDecl	"to = r_num_math ( core -> num , arg )"		836307	0					
ANR	836312	IdentifierDeclType	ut64		836307	0					
ANR	836313	Identifier	to		836307	1					
ANR	836314	AssignmentExpression	"to = r_num_math ( core -> num , arg )"		836307	2		=			
ANR	836315	Identifier	to		836307	0					
ANR	836316	CallExpression	"r_num_math ( core -> num , arg )"		836307	1					
ANR	836317	Callee	r_num_math		836307	0					
ANR	836318	Identifier	r_num_math		836307	0					
ANR	836319	ArgumentList	core -> num		836307	1					
ANR	836320	Argument	core -> num		836307	0					
ANR	836321	PtrMemberAccess	core -> num		836307	0					
ANR	836322	Identifier	core		836307	0					
ANR	836323	Identifier	num		836307	1					
ANR	836324	Argument	arg		836307	1					
ANR	836325	Identifier	arg		836307	0					
ANR	836326	IdentifierDeclStatement	"ut64 at , from = core -> offset ;"	5210:1:151328:151356	836307	1	True				
ANR	836327	IdentifierDecl	at		836307	0					
ANR	836328	IdentifierDeclType	ut64		836307	0					
ANR	836329	Identifier	at		836307	1					
ANR	836330	IdentifierDecl	from = core -> offset		836307	1					
ANR	836331	IdentifierDeclType	ut64		836307	0					
ANR	836332	Identifier	from		836307	1					
ANR	836333	AssignmentExpression	from = core -> offset		836307	2		=			
ANR	836334	Identifier	from		836307	0					
ANR	836335	PtrMemberAccess	core -> offset		836307	1					
ANR	836336	Identifier	core		836307	0					
ANR	836337	Identifier	offset		836307	1					
ANR	836338	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , to , - 1 ) ;"	5211:1:151359:151418	836307	2	True				
ANR	836339	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , to , - 1 )"		836307	0					
ANR	836340	IdentifierDeclType	RAnalFunction *		836307	0					
ANR	836341	Identifier	fcn		836307	1					
ANR	836342	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , to , - 1 )"		836307	2		=			
ANR	836343	Identifier	fcn		836307	0					
ANR	836344	CallExpression	"r_anal_get_fcn_in ( core -> anal , to , - 1 )"		836307	1					
ANR	836345	Callee	r_anal_get_fcn_in		836307	0					
ANR	836346	Identifier	r_anal_get_fcn_in		836307	0					
ANR	836347	ArgumentList	core -> anal		836307	1					
ANR	836348	Argument	core -> anal		836307	0					
ANR	836349	PtrMemberAccess	core -> anal		836307	0					
ANR	836350	Identifier	core		836307	0					
ANR	836351	Identifier	anal		836307	1					
ANR	836352	Argument	to		836307	1					
ANR	836353	Identifier	to		836307	0					
ANR	836354	Argument	- 1		836307	2					
ANR	836355	UnaryOperationExpression	- 1		836307	0					
ANR	836356	UnaryOperator	-		836307	0					
ANR	836357	PrimaryExpression	1		836307	1					
ANR	836358	IfStatement	if ( ! from || from == UT64_MAX )		836307	3					
ANR	836359	Condition	! from || from == UT64_MAX	5212:5:151425:151449	836307	0	True				
ANR	836360	OrExpression	! from || from == UT64_MAX		836307	0		||			
ANR	836361	UnaryOperationExpression	! from		836307	0					
ANR	836362	UnaryOperator	!		836307	0					
ANR	836363	Identifier	from		836307	1					
ANR	836364	EqualityExpression	from == UT64_MAX		836307	1		==			
ANR	836365	Identifier	from		836307	0					
ANR	836366	Identifier	UT64_MAX		836307	1					
ANR	836367	CompoundStatement		5:32:166:166	836307	1					
ANR	836368	IfStatement	if ( fcn )		836307	0					
ANR	836369	Condition	fcn	5213:6:151460:151462	836307	0	True				
ANR	836370	Identifier	fcn		836307	0					
ANR	836371	CompoundStatement		6:11:179:179	836307	1					
ANR	836372	ExpressionStatement	from = fcn -> addr	5214:3:151470:151486	836307	0	True				
ANR	836373	AssignmentExpression	from = fcn -> addr		836307	0		=			
ANR	836374	Identifier	from		836307	0					
ANR	836375	PtrMemberAccess	fcn -> addr		836307	1					
ANR	836376	Identifier	fcn		836307	0					
ANR	836377	Identifier	addr		836307	1					
ANR	836378	ElseStatement	else		836307	0					
ANR	836379	CompoundStatement		8:9:211:211	836307	0					
ANR	836380	ExpressionStatement	"eprintf ( ""Usage: aefa [from] # if no from address is given, uses fcn.addr\\n"" )"	5216:3:151502:151579	836307	0	True				
ANR	836381	CallExpression	"eprintf ( ""Usage: aefa [from] # if no from address is given, uses fcn.addr\\n"" )"		836307	0					
ANR	836382	Callee	eprintf		836307	0					
ANR	836383	Identifier	eprintf		836307	0					
ANR	836384	ArgumentList	"""Usage: aefa [from] # if no from address is given, uses fcn.addr\\n"""		836307	1					
ANR	836385	Argument	"""Usage: aefa [from] # if no from address is given, uses fcn.addr\\n"""		836307	0					
ANR	836386	PrimaryExpression	"""Usage: aefa [from] # if no from address is given, uses fcn.addr\\n"""		836307	0					
ANR	836387	ReturnStatement	return ;	5217:3:151584:151590	836307	1	True				
ANR	836388	Statement	eprintf	5220:1:151600:151606	836307	4	True				
ANR	836389	Statement	(	5220:9:151608:151608	836307	5	True				
ANR	836390	Statement	"""Emulate from 0x%08"""	5220:10:151609:151628	836307	6	True				
ANR	836391	Statement	PFMT64x	5220:30:151629:151635	836307	7	True				
ANR	836392	Statement	""" to 0x%08"""	5220:37:151636:151646	836307	8	True				
ANR	836393	Statement	PFMT64x	5220:48:151647:151653	836307	9	True				
ANR	836394	Statement	"""\\n"""	5220:55:151654:151657	836307	10	True				
ANR	836395	Statement	","	5220:59:151658:151658	836307	11	True				
ANR	836396	Statement	from	5220:61:151660:151663	836307	12	True				
ANR	836397	Statement	","	5220:65:151664:151664	836307	13	True				
ANR	836398	Statement	to	5220:67:151666:151667	836307	14	True				
ANR	836399	Statement	)	5220:69:151668:151668	836307	15	True				
ANR	836400	ExpressionStatement		5220:70:151669:151669	836307	16	True				
ANR	836401	Statement	eprintf	5221:1:151672:151678	836307	17	True				
ANR	836402	Statement	(	5221:9:151680:151680	836307	18	True				
ANR	836403	Statement	"""Resolve call args for 0x%08"""	5221:10:151681:151709	836307	19	True				
ANR	836404	Statement	PFMT64x	5221:39:151710:151716	836307	20	True				
ANR	836405	Statement	"""\\n"""	5221:46:151717:151720	836307	21	True				
ANR	836406	Statement	","	5221:50:151721:151721	836307	22	True				
ANR	836407	Statement	to	5221:52:151723:151724	836307	23	True				
ANR	836408	Statement	)	5221:54:151725:151725	836307	24	True				
ANR	836409	ExpressionStatement		5221:55:151726:151726	836307	25	True				
ANR	836410	ExpressionStatement	"r_core_cmd0 ( core , ""aeim"" )"	5225:1:151794:151820	836307	26	True				
ANR	836411	CallExpression	"r_core_cmd0 ( core , ""aeim"" )"		836307	0					
ANR	836412	Callee	r_core_cmd0		836307	0					
ANR	836413	Identifier	r_core_cmd0		836307	0					
ANR	836414	ArgumentList	core		836307	1					
ANR	836415	Argument	core		836307	0					
ANR	836416	Identifier	core		836307	0					
ANR	836417	Argument	"""aeim"""		836307	1					
ANR	836418	PrimaryExpression	"""aeim"""		836307	0					
ANR	836419	IdentifierDeclStatement	ut64 off = core -> offset ;	5226:1:151830:151853	836307	27	True				
ANR	836420	IdentifierDecl	off = core -> offset		836307	0					
ANR	836421	IdentifierDeclType	ut64		836307	0					
ANR	836422	Identifier	off		836307	1					
ANR	836423	AssignmentExpression	off = core -> offset		836307	2		=			
ANR	836424	Identifier	off		836307	0					
ANR	836425	PtrMemberAccess	core -> offset		836307	1					
ANR	836426	Identifier	core		836307	0					
ANR	836427	Identifier	offset		836307	1					
ANR	836428	ForStatement	for ( at = from ; at < to ; at ++ )		836307	28					
ANR	836429	ForInit	at = from ;	5227:6:151861:151870	836307	0	True				
ANR	836430	AssignmentExpression	at = from		836307	0		=			
ANR	836431	Identifier	at		836307	0					
ANR	836432	Identifier	from		836307	1					
ANR	836433	Condition	at < to	5227:17:151872:151878	836307	1	True				
ANR	836434	RelationalExpression	at < to		836307	0		<			
ANR	836435	Identifier	at		836307	0					
ANR	836436	Identifier	to		836307	1					
ANR	836437	PostIncDecOperationExpression	at ++	5227:27:151882:151885	836307	2	True				
ANR	836438	Identifier	at		836307	0					
ANR	836439	IncDec	++		836307	1					
ANR	836440	CompoundStatement		24:2:712:751	836307	3					
ANR	836441	Statement	r_core_cmdf	5228:2:151892:151902	836307	0	True				
ANR	836442	Statement	(	5228:14:151904:151904	836307	1	True				
ANR	836443	Statement	core	5228:15:151905:151908	836307	2	True				
ANR	836444	Statement	","	5228:19:151909:151909	836307	3	True				
ANR	836445	Statement	"""aepc 0x%08"""	5228:21:151911:151922	836307	4	True				
ANR	836446	Statement	PFMT64x	5228:33:151923:151929	836307	5	True				
ANR	836447	Statement	","	5228:40:151930:151930	836307	6	True				
ANR	836448	Statement	at	5228:42:151932:151933	836307	7	True				
ANR	836449	Statement	)	5228:44:151934:151934	836307	8	True				
ANR	836450	ExpressionStatement		5228:45:151935:151935	836307	9	True				
ANR	836451	ExpressionStatement	"r_core_cmd0 ( core , ""aeso"" )"	5229:2:151939:151965	836307	10	True				
ANR	836452	CallExpression	"r_core_cmd0 ( core , ""aeso"" )"		836307	0					
ANR	836453	Callee	r_core_cmd0		836307	0					
ANR	836454	Identifier	r_core_cmd0		836307	0					
ANR	836455	ArgumentList	core		836307	1					
ANR	836456	Argument	core		836307	0					
ANR	836457	Identifier	core		836307	0					
ANR	836458	Argument	"""aeso"""		836307	1					
ANR	836459	PrimaryExpression	"""aeso"""		836307	0					
ANR	836460	ExpressionStatement	"r_core_seek ( core , at , 1 )"	5230:2:151969:151994	836307	11	True				
ANR	836461	CallExpression	"r_core_seek ( core , at , 1 )"		836307	0					
ANR	836462	Callee	r_core_seek		836307	0					
ANR	836463	Identifier	r_core_seek		836307	0					
ANR	836464	ArgumentList	core		836307	1					
ANR	836465	Argument	core		836307	0					
ANR	836466	Identifier	core		836307	0					
ANR	836467	Argument	at		836307	1					
ANR	836468	Identifier	at		836307	0					
ANR	836469	Argument	1		836307	2					
ANR	836470	PrimaryExpression	1		836307	0					
ANR	836471	IdentifierDeclStatement	"int delta = r_num_get ( core -> num , ""$l"" ) ;"	5231:2:151998:152037	836307	12	True				
ANR	836472	IdentifierDecl	"delta = r_num_get ( core -> num , ""$l"" )"		836307	0					
ANR	836473	IdentifierDeclType	int		836307	0					
ANR	836474	Identifier	delta		836307	1					
ANR	836475	AssignmentExpression	"delta = r_num_get ( core -> num , ""$l"" )"		836307	2		=			
ANR	836476	Identifier	delta		836307	0					
ANR	836477	CallExpression	"r_num_get ( core -> num , ""$l"" )"		836307	1					
ANR	836478	Callee	r_num_get		836307	0					
ANR	836479	Identifier	r_num_get		836307	0					
ANR	836480	ArgumentList	core -> num		836307	1					
ANR	836481	Argument	core -> num		836307	0					
ANR	836482	PtrMemberAccess	core -> num		836307	0					
ANR	836483	Identifier	core		836307	0					
ANR	836484	Identifier	num		836307	1					
ANR	836485	Argument	"""$l"""		836307	1					
ANR	836486	PrimaryExpression	"""$l"""		836307	0					
ANR	836487	IfStatement	if ( delta < 1 )		836307	13					
ANR	836488	Condition	delta < 1	5232:6:152045:152053	836307	0	True				
ANR	836489	RelationalExpression	delta < 1		836307	0		<			
ANR	836490	Identifier	delta		836307	0					
ANR	836491	PrimaryExpression	1		836307	1					
ANR	836492	CompoundStatement		25:17:770:770	836307	1					
ANR	836493	BreakStatement	break ;	5233:3:152061:152066	836307	0	True				
ANR	836494	ExpressionStatement	at += delta - 1	5235:2:152074:152089	836307	14	True				
ANR	836495	AssignmentExpression	at += delta - 1		836307	0		+=			
ANR	836496	Identifier	at		836307	0					
ANR	836497	AdditiveExpression	delta - 1		836307	1		-			
ANR	836498	Identifier	delta		836307	0					
ANR	836499	PrimaryExpression	1		836307	1					
ANR	836500	ExpressionStatement	"r_core_seek ( core , off , 1 )"	5237:1:152095:152121	836307	29	True				
ANR	836501	CallExpression	"r_core_seek ( core , off , 1 )"		836307	0					
ANR	836502	Callee	r_core_seek		836307	0					
ANR	836503	Identifier	r_core_seek		836307	0					
ANR	836504	ArgumentList	core		836307	1					
ANR	836505	Argument	core		836307	0					
ANR	836506	Identifier	core		836307	0					
ANR	836507	Argument	off		836307	1					
ANR	836508	Identifier	off		836307	0					
ANR	836509	Argument	1		836307	2					
ANR	836510	PrimaryExpression	1		836307	0					
ANR	836511	ExpressionStatement	"r_core_cmd0 ( core , ""arA"" )"	5241:1:152229:152254	836307	30	True				
ANR	836512	CallExpression	"r_core_cmd0 ( core , ""arA"" )"		836307	0					
ANR	836513	Callee	r_core_cmd0		836307	0					
ANR	836514	Identifier	r_core_cmd0		836307	0					
ANR	836515	ArgumentList	core		836307	1					
ANR	836516	Argument	core		836307	0					
ANR	836517	Identifier	core		836307	0					
ANR	836518	Argument	"""arA"""		836307	1					
ANR	836519	PrimaryExpression	"""arA"""		836307	0					
ANR	836520	IdentifierDeclStatement	"const char * fcn_type = r_type_func_ret ( core -> anal -> sdb_types , fcn -> name ) ;"	5244:1:152279:152352	836307	31	True				
ANR	836521	IdentifierDecl	"* fcn_type = r_type_func_ret ( core -> anal -> sdb_types , fcn -> name )"		836307	0					
ANR	836522	IdentifierDeclType	const char *		836307	0					
ANR	836523	Identifier	fcn_type		836307	1					
ANR	836524	AssignmentExpression	"* fcn_type = r_type_func_ret ( core -> anal -> sdb_types , fcn -> name )"		836307	2		=			
ANR	836525	Identifier	fcn_type		836307	0					
ANR	836526	CallExpression	"r_type_func_ret ( core -> anal -> sdb_types , fcn -> name )"		836307	1					
ANR	836527	Callee	r_type_func_ret		836307	0					
ANR	836528	Identifier	r_type_func_ret		836307	0					
ANR	836529	ArgumentList	core -> anal -> sdb_types		836307	1					
ANR	836530	Argument	core -> anal -> sdb_types		836307	0					
ANR	836531	PtrMemberAccess	core -> anal -> sdb_types		836307	0					
ANR	836532	PtrMemberAccess	core -> anal		836307	0					
ANR	836533	Identifier	core		836307	0					
ANR	836534	Identifier	anal		836307	1					
ANR	836535	Identifier	sdb_types		836307	1					
ANR	836536	Argument	fcn -> name		836307	1					
ANR	836537	PtrMemberAccess	fcn -> name		836307	0					
ANR	836538	Identifier	fcn		836307	0					
ANR	836539	Identifier	name		836307	1					
ANR	836540	IdentifierDeclStatement	"const char * key = resolve_fcn_name ( core -> anal , fcn -> name ) ;"	5245:1:152355:152413	836307	32	True				
ANR	836541	IdentifierDecl	"* key = resolve_fcn_name ( core -> anal , fcn -> name )"		836307	0					
ANR	836542	IdentifierDeclType	const char *		836307	0					
ANR	836543	Identifier	key		836307	1					
ANR	836544	AssignmentExpression	"* key = resolve_fcn_name ( core -> anal , fcn -> name )"		836307	2		=			
ANR	836545	Identifier	key		836307	0					
ANR	836546	CallExpression	"resolve_fcn_name ( core -> anal , fcn -> name )"		836307	1					
ANR	836547	Callee	resolve_fcn_name		836307	0					
ANR	836548	Identifier	resolve_fcn_name		836307	0					
ANR	836549	ArgumentList	core -> anal		836307	1					
ANR	836550	Argument	core -> anal		836307	0					
ANR	836551	PtrMemberAccess	core -> anal		836307	0					
ANR	836552	Identifier	core		836307	0					
ANR	836553	Identifier	anal		836307	1					
ANR	836554	Argument	fcn -> name		836307	1					
ANR	836555	PtrMemberAccess	fcn -> name		836307	0					
ANR	836556	Identifier	fcn		836307	0					
ANR	836557	Identifier	name		836307	1					
ANR	836558	IdentifierDeclStatement	"RList * list = r_core_get_func_args ( core , key ) ;"	5246:1:152416:152462	836307	33	True				
ANR	836559	IdentifierDecl	"* list = r_core_get_func_args ( core , key )"		836307	0					
ANR	836560	IdentifierDeclType	RList *		836307	0					
ANR	836561	Identifier	list		836307	1					
ANR	836562	AssignmentExpression	"* list = r_core_get_func_args ( core , key )"		836307	2		=			
ANR	836563	Identifier	list		836307	0					
ANR	836564	CallExpression	"r_core_get_func_args ( core , key )"		836307	1					
ANR	836565	Callee	r_core_get_func_args		836307	0					
ANR	836566	Identifier	r_core_get_func_args		836307	0					
ANR	836567	ArgumentList	core		836307	1					
ANR	836568	Argument	core		836307	0					
ANR	836569	Identifier	core		836307	0					
ANR	836570	Argument	key		836307	1					
ANR	836571	Identifier	key		836307	0					
ANR	836572	IfStatement	if ( ! r_list_empty ( list ) )		836307	34					
ANR	836573	Condition	! r_list_empty ( list )	5247:5:152469:152488	836307	0	True				
ANR	836574	UnaryOperationExpression	! r_list_empty ( list )		836307	0					
ANR	836575	UnaryOperator	!		836307	0					
ANR	836576	CallExpression	r_list_empty ( list )		836307	1					
ANR	836577	Callee	r_list_empty		836307	0					
ANR	836578	Identifier	r_list_empty		836307	0					
ANR	836579	ArgumentList	list		836307	1					
ANR	836580	Argument	list		836307	0					
ANR	836581	Identifier	list		836307	0					
ANR	836582	CompoundStatement		40:27:1205:1205	836307	1					
ANR	836583	ExpressionStatement	"eprintf ( ""HAS signature\\n"" )"	5248:2:152495:152522	836307	0	True				
ANR	836584	CallExpression	"eprintf ( ""HAS signature\\n"" )"		836307	0					
ANR	836585	Callee	eprintf		836307	0					
ANR	836586	Identifier	eprintf		836307	0					
ANR	836587	ArgumentList	"""HAS signature\\n"""		836307	1					
ANR	836588	Argument	"""HAS signature\\n"""		836307	0					
ANR	836589	PrimaryExpression	"""HAS signature\\n"""		836307	0					
ANR	836590	IdentifierDeclStatement	"int i , nargs = 3 ;"	5250:1:152528:152544	836307	35	True				
ANR	836591	IdentifierDecl	i		836307	0					
ANR	836592	IdentifierDeclType	int		836307	0					
ANR	836593	Identifier	i		836307	1					
ANR	836594	IdentifierDecl	nargs = 3		836307	1					
ANR	836595	IdentifierDeclType	int		836307	0					
ANR	836596	Identifier	nargs		836307	1					
ANR	836597	AssignmentExpression	nargs = 3		836307	2		=			
ANR	836598	Identifier	nargs		836307	0					
ANR	836599	PrimaryExpression	3		836307	1					
ANR	836600	IfStatement	if ( nargs > 0 )		836307	36					
ANR	836601	Condition	nargs > 0	5251:5:152613:152621	836307	0	True				
ANR	836602	RelationalExpression	nargs > 0		836307	0		>			
ANR	836603	Identifier	nargs		836307	0					
ANR	836604	PrimaryExpression	0		836307	1					
ANR	836605	CompoundStatement		45:2:1342:1347	836307	1					
ANR	836606	IdentifierDeclStatement	int i ;	5252:2:152628:152633	836307	0	True				
ANR	836607	IdentifierDecl	i		836307	0					
ANR	836608	IdentifierDeclType	int		836307	0					
ANR	836609	Identifier	i		836307	1					
ANR	836610	ExpressionStatement	"eprintf ( ""NARGS %d (%s)\\n"" , nargs , key )"	5253:2:152637:152676	836307	1	True				
ANR	836611	CallExpression	"eprintf ( ""NARGS %d (%s)\\n"" , nargs , key )"		836307	0					
ANR	836612	Callee	eprintf		836307	0					
ANR	836613	Identifier	eprintf		836307	0					
ANR	836614	ArgumentList	"""NARGS %d (%s)\\n"""		836307	1					
ANR	836615	Argument	"""NARGS %d (%s)\\n"""		836307	0					
ANR	836616	PrimaryExpression	"""NARGS %d (%s)\\n"""		836307	0					
ANR	836617	Argument	nargs		836307	1					
ANR	836618	Identifier	nargs		836307	0					
ANR	836619	Argument	key		836307	2					
ANR	836620	Identifier	key		836307	0					
ANR	836621	ForStatement	for ( i = 0 ; i < nargs ; i ++ )		836307	2					
ANR	836622	ForInit	i = 0 ;	5254:7:152685:152690	836307	0	True				
ANR	836623	AssignmentExpression	i = 0		836307	0		=			
ANR	836624	Identifier	i		836307	0					
ANR	836625	PrimaryExpression	0		836307	1					
ANR	836626	Condition	i < nargs	5254:14:152692:152700	836307	1	True				
ANR	836627	RelationalExpression	i < nargs		836307	0		<			
ANR	836628	Identifier	i		836307	0					
ANR	836629	Identifier	nargs		836307	1					
ANR	836630	PostIncDecOperationExpression	i ++	5254:25:152703:152705	836307	2	True				
ANR	836631	Identifier	i		836307	0					
ANR	836632	IncDec	++		836307	1					
ANR	836633	CompoundStatement		48:3:1427:1490	836307	3					
ANR	836634	IdentifierDeclStatement	"ut64 v = r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_STDCALL , i ) ;"	5255:3:152713:152776	836307	0	True				
ANR	836635	IdentifierDecl	"v = r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_STDCALL , i )"		836307	0					
ANR	836636	IdentifierDeclType	ut64		836307	0					
ANR	836637	Identifier	v		836307	1					
ANR	836638	AssignmentExpression	"v = r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_STDCALL , i )"		836307	2		=			
ANR	836639	Identifier	v		836307	0					
ANR	836640	CallExpression	"r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_STDCALL , i )"		836307	1					
ANR	836641	Callee	r_debug_arg_get		836307	0					
ANR	836642	Identifier	r_debug_arg_get		836307	0					
ANR	836643	ArgumentList	core -> dbg		836307	1					
ANR	836644	Argument	core -> dbg		836307	0					
ANR	836645	PtrMemberAccess	core -> dbg		836307	0					
ANR	836646	Identifier	core		836307	0					
ANR	836647	Identifier	dbg		836307	1					
ANR	836648	Argument	R_ANAL_CC_TYPE_STDCALL		836307	1					
ANR	836649	Identifier	R_ANAL_CC_TYPE_STDCALL		836307	0					
ANR	836650	Argument	i		836307	2					
ANR	836651	Identifier	i		836307	0					
ANR	836652	Statement	eprintf	5256:3:152781:152787	836307	1	True				
ANR	836653	Statement	(	5256:11:152789:152789	836307	2	True				
ANR	836654	Statement	"""arg: 0x%08"""	5256:12:152790:152801	836307	3	True				
ANR	836655	Statement	PFMT64x	5256:24:152802:152808	836307	4	True				
ANR	836656	Statement	"""\\n"""	5256:31:152809:152812	836307	5	True				
ANR	836657	Statement	","	5256:35:152813:152813	836307	6	True				
ANR	836658	Statement	v	5256:37:152815:152815	836307	7	True				
ANR	836659	Statement	)	5256:38:152816:152816	836307	8	True				
ANR	836660	ExpressionStatement		5256:39:152817:152817	836307	9	True				
ANR	836661	ReturnType	static void		836307	1					
ANR	836662	Identifier	r_anal_aefa		836307	2					
ANR	836663	ParameterList	"RCore * core , const char * arg"		836307	3					
ANR	836664	Parameter	RCore * core	5208:24:151255:151265	836307	0	True				
ANR	836665	ParameterType	RCore *		836307	0					
ANR	836666	Identifier	core		836307	1					
ANR	836667	Parameter	const char * arg	5208:37:151268:151282	836307	1	True				
ANR	836668	ParameterType	const char *		836307	0					
ANR	836669	Identifier	arg		836307	1					
ANR	836670	CFGEntryNode	ENTRY		836307		True				
ANR	836671	CFGExitNode	EXIT		836307		True				
ANR	836672	Symbol	* fcn		836307						
ANR	836673	Symbol	fcn -> name		836307						
ANR	836674	Symbol	* core		836307						
ANR	836675	Symbol	delta		836307						
ANR	836676	Symbol	r_core_get_func_args		836307						
ANR	836677	Symbol	core -> offset		836307						
ANR	836678	Symbol	core -> anal -> sdb_types		836307						
ANR	836679	Symbol	core -> anal		836307						
ANR	836680	Symbol	r_num_math		836307						
ANR	836681	Symbol	fcn_type		836307						
ANR	836682	Symbol	fcn		836307						
ANR	836683	Symbol	arg		836307						
ANR	836684	Symbol	from		836307						
ANR	836685	Symbol	r_num_get		836307						
ANR	836686	Symbol	core -> num		836307						
ANR	836687	Symbol	UT64_MAX		836307						
ANR	836688	Symbol	* * core		836307						
ANR	836689	Symbol	key		836307						
ANR	836690	Symbol	R_ANAL_CC_TYPE_STDCALL		836307						
ANR	836691	Symbol	i		836307						
ANR	836692	Symbol	list		836307						
ANR	836693	Symbol	off		836307						
ANR	836694	Symbol	r_debug_arg_get		836307						
ANR	836695	Symbol	nargs		836307						
ANR	836696	Symbol	core		836307						
ANR	836697	Symbol	r_type_func_ret		836307						
ANR	836698	Symbol	at		836307						
ANR	836699	Symbol	r_anal_get_fcn_in		836307						
ANR	836700	Symbol	* core -> anal		836307						
ANR	836701	Symbol	v		836307						
ANR	836702	Symbol	fcn -> addr		836307						
ANR	836703	Symbol	r_list_empty		836307						
ANR	836704	Symbol	resolve_fcn_name		836307						
ANR	836705	Symbol	to		836307						
ANR	836706	Symbol	core -> dbg		836307						
ANR	836707	Function	__core_anal_appcall	5262:0:152836:153477							
ANR	836708	FunctionDef	"__core_anal_appcall (RCore * core , const char * input)"		836707	0					
ANR	836709	CompoundStatement		5262:64:152900:153477	836707	0					
ANR	836710	IdentifierDeclStatement	RListIter * iter ;	5264:1:152941:152956	836707	0	True				
ANR	836711	IdentifierDecl	* iter		836707	0					
ANR	836712	IdentifierDeclType	RListIter *		836707	0					
ANR	836713	Identifier	iter		836707	1					
ANR	836714	IdentifierDeclStatement	char * arg ;	5265:1:152959:152968	836707	1	True				
ANR	836715	IdentifierDecl	* arg		836707	0					
ANR	836716	IdentifierDeclType	char *		836707	0					
ANR	836717	Identifier	arg		836707	1					
ANR	836718	IdentifierDeclStatement	char * inp = strdup ( input ) ;	5266:1:152971:152997	836707	2	True				
ANR	836719	IdentifierDecl	* inp = strdup ( input )		836707	0					
ANR	836720	IdentifierDeclType	char *		836707	0					
ANR	836721	Identifier	inp		836707	1					
ANR	836722	AssignmentExpression	* inp = strdup ( input )		836707	2		=			
ANR	836723	Identifier	inp		836707	0					
ANR	836724	CallExpression	strdup ( input )		836707	1					
ANR	836725	Callee	strdup		836707	0					
ANR	836726	Identifier	strdup		836707	0					
ANR	836727	ArgumentList	input		836707	1					
ANR	836728	Argument	input		836707	0					
ANR	836729	Identifier	input		836707	0					
ANR	836730	IdentifierDeclStatement	"RList * args = r_str_split_list ( inp , "" "" , 0 ) ;"	5267:1:153000:153044	836707	3	True				
ANR	836731	IdentifierDecl	"* args = r_str_split_list ( inp , "" "" , 0 )"		836707	0					
ANR	836732	IdentifierDeclType	RList *		836707	0					
ANR	836733	Identifier	args		836707	1					
ANR	836734	AssignmentExpression	"* args = r_str_split_list ( inp , "" "" , 0 )"		836707	2		=			
ANR	836735	Identifier	args		836707	0					
ANR	836736	CallExpression	"r_str_split_list ( inp , "" "" , 0 )"		836707	1					
ANR	836737	Callee	r_str_split_list		836707	0					
ANR	836738	Identifier	r_str_split_list		836707	0					
ANR	836739	ArgumentList	inp		836707	1					
ANR	836740	Argument	inp		836707	0					
ANR	836741	Identifier	inp		836707	0					
ANR	836742	Argument	""" """		836707	1					
ANR	836743	PrimaryExpression	""" """		836707	0					
ANR	836744	Argument	0		836707	2					
ANR	836745	PrimaryExpression	0		836707	0					
ANR	836746	IdentifierDeclStatement	int i = 0 ;	5268:1:153047:153056	836707	4	True				
ANR	836747	IdentifierDecl	i = 0		836707	0					
ANR	836748	IdentifierDeclType	int		836707	0					
ANR	836749	Identifier	i		836707	1					
ANR	836750	AssignmentExpression	i = 0		836707	2		=			
ANR	836751	Identifier	i		836707	0					
ANR	836752	PrimaryExpression	0		836707	1					
ANR	836753	Statement	r_list_foreach	5269:1:153059:153072	836707	5	True				
ANR	836754	Statement	(	5269:16:153074:153074	836707	6	True				
ANR	836755	Statement	args	5269:17:153075:153078	836707	7	True				
ANR	836756	Statement	","	5269:21:153079:153079	836707	8	True				
ANR	836757	Statement	iter	5269:23:153081:153084	836707	9	True				
ANR	836758	Statement	","	5269:27:153085:153085	836707	10	True				
ANR	836759	Statement	arg	5269:29:153087:153089	836707	11	True				
ANR	836760	Statement	)	5269:32:153090:153090	836707	12	True				
ANR	836761	CompoundStatement		9:2:195:233	836707	13					
ANR	836762	IdentifierDeclStatement	"const char * alias = sdb_fmt ( ""A%d"" , i ) ;"	5270:2:153096:153134	836707	0	True				
ANR	836763	IdentifierDecl	"* alias = sdb_fmt ( ""A%d"" , i )"		836707	0					
ANR	836764	IdentifierDeclType	const char *		836707	0					
ANR	836765	Identifier	alias		836707	1					
ANR	836766	AssignmentExpression	"* alias = sdb_fmt ( ""A%d"" , i )"		836707	2		=			
ANR	836767	Identifier	alias		836707	0					
ANR	836768	CallExpression	"sdb_fmt ( ""A%d"" , i )"		836707	1					
ANR	836769	Callee	sdb_fmt		836707	0					
ANR	836770	Identifier	sdb_fmt		836707	0					
ANR	836771	ArgumentList	"""A%d"""		836707	1					
ANR	836772	Argument	"""A%d"""		836707	0					
ANR	836773	PrimaryExpression	"""A%d"""		836707	0					
ANR	836774	Argument	i		836707	1					
ANR	836775	Identifier	i		836707	0					
ANR	836776	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , alias , r_num_math ( core -> num , arg ) )"	5271:2:153138:153202	836707	1	True				
ANR	836777	CallExpression	"r_reg_setv ( core -> anal -> reg , alias , r_num_math ( core -> num , arg ) )"		836707	0					
ANR	836778	Callee	r_reg_setv		836707	0					
ANR	836779	Identifier	r_reg_setv		836707	0					
ANR	836780	ArgumentList	core -> anal -> reg		836707	1					
ANR	836781	Argument	core -> anal -> reg		836707	0					
ANR	836782	PtrMemberAccess	core -> anal -> reg		836707	0					
ANR	836783	PtrMemberAccess	core -> anal		836707	0					
ANR	836784	Identifier	core		836707	0					
ANR	836785	Identifier	anal		836707	1					
ANR	836786	Identifier	reg		836707	1					
ANR	836787	Argument	alias		836707	1					
ANR	836788	Identifier	alias		836707	0					
ANR	836789	Argument	"r_num_math ( core -> num , arg )"		836707	2					
ANR	836790	CallExpression	"r_num_math ( core -> num , arg )"		836707	0					
ANR	836791	Callee	r_num_math		836707	0					
ANR	836792	Identifier	r_num_math		836707	0					
ANR	836793	ArgumentList	core -> num		836707	1					
ANR	836794	Argument	core -> num		836707	0					
ANR	836795	PtrMemberAccess	core -> num		836707	0					
ANR	836796	Identifier	core		836707	0					
ANR	836797	Identifier	num		836707	1					
ANR	836798	Argument	arg		836707	1					
ANR	836799	Identifier	arg		836707	0					
ANR	836800	ExpressionStatement	i ++	5272:2:153206:153209	836707	2	True				
ANR	836801	PostIncDecOperationExpression	i ++		836707	0					
ANR	836802	Identifier	i		836707	0					
ANR	836803	IncDec	++		836707	1					
ANR	836804	IdentifierDeclStatement	"ut64 sp = r_reg_getv ( core -> anal -> reg , ""SP"" ) ;"	5274:1:153215:153259	836707	14	True				
ANR	836805	IdentifierDecl	"sp = r_reg_getv ( core -> anal -> reg , ""SP"" )"		836707	0					
ANR	836806	IdentifierDeclType	ut64		836707	0					
ANR	836807	Identifier	sp		836707	1					
ANR	836808	AssignmentExpression	"sp = r_reg_getv ( core -> anal -> reg , ""SP"" )"		836707	2		=			
ANR	836809	Identifier	sp		836707	0					
ANR	836810	CallExpression	"r_reg_getv ( core -> anal -> reg , ""SP"" )"		836707	1					
ANR	836811	Callee	r_reg_getv		836707	0					
ANR	836812	Identifier	r_reg_getv		836707	0					
ANR	836813	ArgumentList	core -> anal -> reg		836707	1					
ANR	836814	Argument	core -> anal -> reg		836707	0					
ANR	836815	PtrMemberAccess	core -> anal -> reg		836707	0					
ANR	836816	PtrMemberAccess	core -> anal		836707	0					
ANR	836817	Identifier	core		836707	0					
ANR	836818	Identifier	anal		836707	1					
ANR	836819	Identifier	reg		836707	1					
ANR	836820	Argument	"""SP"""		836707	1					
ANR	836821	PrimaryExpression	"""SP"""		836707	0					
ANR	836822	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , ""SP"" , 0 )"	5275:1:153262:153299	836707	15	True				
ANR	836823	CallExpression	"r_reg_setv ( core -> anal -> reg , ""SP"" , 0 )"		836707	0					
ANR	836824	Callee	r_reg_setv		836707	0					
ANR	836825	Identifier	r_reg_setv		836707	0					
ANR	836826	ArgumentList	core -> anal -> reg		836707	1					
ANR	836827	Argument	core -> anal -> reg		836707	0					
ANR	836828	PtrMemberAccess	core -> anal -> reg		836707	0					
ANR	836829	PtrMemberAccess	core -> anal		836707	0					
ANR	836830	Identifier	core		836707	0					
ANR	836831	Identifier	anal		836707	1					
ANR	836832	Identifier	reg		836707	1					
ANR	836833	Argument	"""SP"""		836707	1					
ANR	836834	PrimaryExpression	"""SP"""		836707	0					
ANR	836835	Argument	0		836707	2					
ANR	836836	PrimaryExpression	0		836707	0					
ANR	836837	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , ""PC"" , core -> offset )"	5277:1:153303:153351	836707	16	True				
ANR	836838	CallExpression	"r_reg_setv ( core -> anal -> reg , ""PC"" , core -> offset )"		836707	0					
ANR	836839	Callee	r_reg_setv		836707	0					
ANR	836840	Identifier	r_reg_setv		836707	0					
ANR	836841	ArgumentList	core -> anal -> reg		836707	1					
ANR	836842	Argument	core -> anal -> reg		836707	0					
ANR	836843	PtrMemberAccess	core -> anal -> reg		836707	0					
ANR	836844	PtrMemberAccess	core -> anal		836707	0					
ANR	836845	Identifier	core		836707	0					
ANR	836846	Identifier	anal		836707	1					
ANR	836847	Identifier	reg		836707	1					
ANR	836848	Argument	"""PC"""		836707	1					
ANR	836849	PrimaryExpression	"""PC"""		836707	0					
ANR	836850	Argument	core -> offset		836707	2					
ANR	836851	PtrMemberAccess	core -> offset		836707	0					
ANR	836852	Identifier	core		836707	0					
ANR	836853	Identifier	offset		836707	1					
ANR	836854	ExpressionStatement	"r_core_cmd0 ( core , ""aesu 0"" )"	5278:1:153354:153382	836707	17	True				
ANR	836855	CallExpression	"r_core_cmd0 ( core , ""aesu 0"" )"		836707	0					
ANR	836856	Callee	r_core_cmd0		836707	0					
ANR	836857	Identifier	r_core_cmd0		836707	0					
ANR	836858	ArgumentList	core		836707	1					
ANR	836859	Argument	core		836707	0					
ANR	836860	Identifier	core		836707	0					
ANR	836861	Argument	"""aesu 0"""		836707	1					
ANR	836862	PrimaryExpression	"""aesu 0"""		836707	0					
ANR	836863	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , ""SP"" , sp )"	5280:1:153386:153424	836707	18	True				
ANR	836864	CallExpression	"r_reg_setv ( core -> anal -> reg , ""SP"" , sp )"		836707	0					
ANR	836865	Callee	r_reg_setv		836707	0					
ANR	836866	Identifier	r_reg_setv		836707	0					
ANR	836867	ArgumentList	core -> anal -> reg		836707	1					
ANR	836868	Argument	core -> anal -> reg		836707	0					
ANR	836869	PtrMemberAccess	core -> anal -> reg		836707	0					
ANR	836870	PtrMemberAccess	core -> anal		836707	0					
ANR	836871	Identifier	core		836707	0					
ANR	836872	Identifier	anal		836707	1					
ANR	836873	Identifier	reg		836707	1					
ANR	836874	Argument	"""SP"""		836707	1					
ANR	836875	PrimaryExpression	"""SP"""		836707	0					
ANR	836876	Argument	sp		836707	2					
ANR	836877	Identifier	sp		836707	0					
ANR	836878	ExpressionStatement	free ( inp )	5281:1:153427:153437	836707	19	True				
ANR	836879	CallExpression	free ( inp )		836707	0					
ANR	836880	Callee	free		836707	0					
ANR	836881	Identifier	free		836707	0					
ANR	836882	ArgumentList	inp		836707	1					
ANR	836883	Argument	inp		836707	0					
ANR	836884	Identifier	inp		836707	0					
ANR	836885	ReturnType	static void		836707	1					
ANR	836886	Identifier	__core_anal_appcall		836707	2					
ANR	836887	ParameterList	"RCore * core , const char * input"		836707	3					
ANR	836888	Parameter	RCore * core	5262:32:152868:152878	836707	0	True				
ANR	836889	ParameterType	RCore *		836707	0					
ANR	836890	Identifier	core		836707	1					
ANR	836891	Parameter	const char * input	5262:45:152881:152897	836707	1	True				
ANR	836892	ParameterType	const char *		836707	0					
ANR	836893	Identifier	input		836707	1					
ANR	836894	CFGEntryNode	ENTRY		836707		True				
ANR	836895	CFGExitNode	EXIT		836707		True				
ANR	836896	Symbol	core -> anal -> reg		836707						
ANR	836897	Symbol	r_str_split_list		836707						
ANR	836898	Symbol	* core		836707						
ANR	836899	Symbol	iter		836707						
ANR	836900	Symbol	i		836707						
ANR	836901	Symbol	core -> offset		836707						
ANR	836902	Symbol	inp		836707						
ANR	836903	Symbol	core -> anal		836707						
ANR	836904	Symbol	r_num_math		836707						
ANR	836905	Symbol	args		836707						
ANR	836906	Symbol	core		836707						
ANR	836907	Symbol	input		836707						
ANR	836908	Symbol	* core -> anal		836707						
ANR	836909	Symbol	arg		836707						
ANR	836910	Symbol	alias		836707						
ANR	836911	Symbol	strdup		836707						
ANR	836912	Symbol	r_reg_getv		836707						
ANR	836913	Symbol	core -> num		836707						
ANR	836914	Symbol	sdb_fmt		836707						
ANR	836915	Symbol	sp		836707						
ANR	836916	Symbol	* * core		836707						
ANR	836917	Function	cmd_anal_esil	5286:0:153480:169453							
ANR	836918	FunctionDef	"cmd_anal_esil (RCore * core , const char * input)"		836917	0					
ANR	836919	CompoundStatement		5286:58:153538:169453	836917	0					
ANR	836920	IdentifierDeclStatement	RAnalEsil * esil = core -> anal -> esil ;	5287:1:153541:153575	836917	0	True				
ANR	836921	IdentifierDecl	* esil = core -> anal -> esil		836917	0					
ANR	836922	IdentifierDeclType	RAnalEsil *		836917	0					
ANR	836923	Identifier	esil		836917	1					
ANR	836924	AssignmentExpression	* esil = core -> anal -> esil		836917	2		=			
ANR	836925	Identifier	esil		836917	0					
ANR	836926	PtrMemberAccess	core -> anal -> esil		836917	1					
ANR	836927	PtrMemberAccess	core -> anal		836917	0					
ANR	836928	Identifier	core		836917	0					
ANR	836929	Identifier	anal		836917	1					
ANR	836930	Identifier	esil		836917	1					
ANR	836931	IdentifierDeclStatement	ut64 addr = core -> offset ;	5288:1:153578:153602	836917	1	True				
ANR	836932	IdentifierDecl	addr = core -> offset		836917	0					
ANR	836933	IdentifierDeclType	ut64		836917	0					
ANR	836934	Identifier	addr		836917	1					
ANR	836935	AssignmentExpression	addr = core -> offset		836917	2		=			
ANR	836936	Identifier	addr		836917	0					
ANR	836937	PtrMemberAccess	core -> offset		836917	1					
ANR	836938	Identifier	core		836917	0					
ANR	836939	Identifier	offset		836917	1					
ANR	836940	IdentifierDeclStatement	ut64 adr ;	5289:1:153605:153614	836917	2	True				
ANR	836941	IdentifierDecl	adr		836917	0					
ANR	836942	IdentifierDeclType	ut64		836917	0					
ANR	836943	Identifier	adr		836917	1					
ANR	836944	IdentifierDeclStatement	"char * n , * n1 ;"	5290:1:153617:153629	836917	3	True				
ANR	836945	IdentifierDecl	* n		836917	0					
ANR	836946	IdentifierDeclType	char *		836917	0					
ANR	836947	Identifier	n		836917	1					
ANR	836948	IdentifierDecl	* n1		836917	1					
ANR	836949	IdentifierDeclType	char *		836917	0					
ANR	836950	Identifier	n1		836917	1					
ANR	836951	IdentifierDeclStatement	int off ;	5291:1:153632:153639	836917	4	True				
ANR	836952	IdentifierDecl	off		836917	0					
ANR	836953	IdentifierDeclType	int		836917	0					
ANR	836954	Identifier	off		836917	1					
ANR	836955	IdentifierDeclStatement	"int stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" ) ;"	5292:1:153642:153707	836917	5	True				
ANR	836956	IdentifierDecl	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		836917	0					
ANR	836957	IdentifierDeclType	int		836917	0					
ANR	836958	Identifier	stacksize		836917	1					
ANR	836959	AssignmentExpression	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		836917	2		=			
ANR	836960	Identifier	stacksize		836917	0					
ANR	836961	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.depth"" )"		836917	1					
ANR	836962	Callee	r_config_get_i		836917	0					
ANR	836963	Identifier	r_config_get_i		836917	0					
ANR	836964	ArgumentList	core -> config		836917	1					
ANR	836965	Argument	core -> config		836917	0					
ANR	836966	PtrMemberAccess	core -> config		836917	0					
ANR	836967	Identifier	core		836917	0					
ANR	836968	Identifier	config		836917	1					
ANR	836969	Argument	"""esil.stack.depth"""		836917	1					
ANR	836970	PrimaryExpression	"""esil.stack.depth"""		836917	0					
ANR	836971	IdentifierDeclStatement	"int iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	5293:1:153710:153767	836917	6	True				
ANR	836972	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		836917	0					
ANR	836973	IdentifierDeclType	int		836917	0					
ANR	836974	Identifier	iotrap		836917	1					
ANR	836975	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		836917	2		=			
ANR	836976	Identifier	iotrap		836917	0					
ANR	836977	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		836917	1					
ANR	836978	Callee	r_config_get_i		836917	0					
ANR	836979	Identifier	r_config_get_i		836917	0					
ANR	836980	ArgumentList	core -> config		836917	1					
ANR	836981	Argument	core -> config		836917	0					
ANR	836982	PtrMemberAccess	core -> config		836917	0					
ANR	836983	Identifier	core		836917	0					
ANR	836984	Identifier	config		836917	1					
ANR	836985	Argument	"""esil.iotrap"""		836917	1					
ANR	836986	PrimaryExpression	"""esil.iotrap"""		836917	0					
ANR	836987	IdentifierDeclStatement	"int romem = r_config_get_i ( core -> config , ""esil.romem"" ) ;"	5294:1:153770:153825	836917	7	True				
ANR	836988	IdentifierDecl	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		836917	0					
ANR	836989	IdentifierDeclType	int		836917	0					
ANR	836990	Identifier	romem		836917	1					
ANR	836991	AssignmentExpression	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		836917	2		=			
ANR	836992	Identifier	romem		836917	0					
ANR	836993	CallExpression	"r_config_get_i ( core -> config , ""esil.romem"" )"		836917	1					
ANR	836994	Callee	r_config_get_i		836917	0					
ANR	836995	Identifier	r_config_get_i		836917	0					
ANR	836996	ArgumentList	core -> config		836917	1					
ANR	836997	Argument	core -> config		836917	0					
ANR	836998	PtrMemberAccess	core -> config		836917	0					
ANR	836999	Identifier	core		836917	0					
ANR	837000	Identifier	config		836917	1					
ANR	837001	Argument	"""esil.romem"""		836917	1					
ANR	837002	PrimaryExpression	"""esil.romem"""		836917	0					
ANR	837003	IdentifierDeclStatement	"int stats = r_config_get_i ( core -> config , ""esil.stats"" ) ;"	5295:1:153828:153883	836917	8	True				
ANR	837004	IdentifierDecl	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		836917	0					
ANR	837005	IdentifierDeclType	int		836917	0					
ANR	837006	Identifier	stats		836917	1					
ANR	837007	AssignmentExpression	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		836917	2		=			
ANR	837008	Identifier	stats		836917	0					
ANR	837009	CallExpression	"r_config_get_i ( core -> config , ""esil.stats"" )"		836917	1					
ANR	837010	Callee	r_config_get_i		836917	0					
ANR	837011	Identifier	r_config_get_i		836917	0					
ANR	837012	ArgumentList	core -> config		836917	1					
ANR	837013	Argument	core -> config		836917	0					
ANR	837014	PtrMemberAccess	core -> config		836917	0					
ANR	837015	Identifier	core		836917	0					
ANR	837016	Identifier	config		836917	1					
ANR	837017	Argument	"""esil.stats"""		836917	1					
ANR	837018	PrimaryExpression	"""esil.stats"""		836917	0					
ANR	837019	IdentifierDeclStatement	"int noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" ) ;"	5296:1:153886:153943	836917	9	True				
ANR	837020	IdentifierDecl	"noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" )"		836917	0					
ANR	837021	IdentifierDeclType	int		836917	0					
ANR	837022	Identifier	noNULL		836917	1					
ANR	837023	AssignmentExpression	"noNULL = r_config_get_i ( core -> config , ""esil.noNULL"" )"		836917	2		=			
ANR	837024	Identifier	noNULL		836917	0					
ANR	837025	CallExpression	"r_config_get_i ( core -> config , ""esil.noNULL"" )"		836917	1					
ANR	837026	Callee	r_config_get_i		836917	0					
ANR	837027	Identifier	r_config_get_i		836917	0					
ANR	837028	ArgumentList	core -> config		836917	1					
ANR	837029	Argument	core -> config		836917	0					
ANR	837030	PtrMemberAccess	core -> config		836917	0					
ANR	837031	Identifier	core		836917	0					
ANR	837032	Identifier	config		836917	1					
ANR	837033	Argument	"""esil.noNULL"""		836917	1					
ANR	837034	PrimaryExpression	"""esil.noNULL"""		836917	0					
ANR	837035	IdentifierDeclStatement	ut64 until_addr = UT64_MAX ;	5297:1:153946:153972	836917	10	True				
ANR	837036	IdentifierDecl	until_addr = UT64_MAX		836917	0					
ANR	837037	IdentifierDeclType	ut64		836917	0					
ANR	837038	Identifier	until_addr		836917	1					
ANR	837039	AssignmentExpression	until_addr = UT64_MAX		836917	2		=			
ANR	837040	Identifier	UT64_MAX		836917	0					
ANR	837041	Identifier	UT64_MAX		836917	1					
ANR	837042	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	5298:1:153975:154046	836917	11	True				
ANR	837043	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		836917	0					
ANR	837044	IdentifierDeclType	unsigned int		836917	0					
ANR	837045	Identifier	addrsize		836917	1					
ANR	837046	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		836917	2		=			
ANR	837047	Identifier	addrsize		836917	0					
ANR	837048	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		836917	1					
ANR	837049	Callee	r_config_get_i		836917	0					
ANR	837050	Identifier	r_config_get_i		836917	0					
ANR	837051	ArgumentList	core -> config		836917	1					
ANR	837052	Argument	core -> config		836917	0					
ANR	837053	PtrMemberAccess	core -> config		836917	0					
ANR	837054	Identifier	core		836917	0					
ANR	837055	Identifier	config		836917	1					
ANR	837056	Argument	"""esil.addr.size"""		836917	1					
ANR	837057	PrimaryExpression	"""esil.addr.size"""		836917	0					
ANR	837058	IdentifierDeclStatement	const char * until_expr = NULL ;	5300:1:154050:154079	836917	12	True				
ANR	837059	IdentifierDecl	* until_expr = NULL		836917	0					
ANR	837060	IdentifierDeclType	const char *		836917	0					
ANR	837061	Identifier	until_expr		836917	1					
ANR	837062	AssignmentExpression	* until_expr = NULL		836917	2		=			
ANR	837063	Identifier	NULL		836917	0					
ANR	837064	Identifier	NULL		836917	1					
ANR	837065	IdentifierDeclStatement	RAnalOp * op = NULL ;	5301:1:154082:154100	836917	13	True				
ANR	837066	IdentifierDecl	* op = NULL		836917	0					
ANR	837067	IdentifierDeclType	RAnalOp *		836917	0					
ANR	837068	Identifier	op		836917	1					
ANR	837069	AssignmentExpression	* op = NULL		836917	2		=			
ANR	837070	Identifier	NULL		836917	0					
ANR	837071	Identifier	NULL		836917	1					
ANR	837072	SwitchStatement	switch ( input [ 0 ] )		836917	14					
ANR	837073	Condition	input [ 0 ]	5303:9:154112:154119	836917	0	True				
ANR	837074	ArrayIndexing	input [ 0 ]		836917	0					
ANR	837075	Identifier	input		836917	0					
ANR	837076	PrimaryExpression	0		836917	1					
ANR	837077	CompoundStatement		18:19:583:583	836917	1					
ANR	837078	Label	case 'p' :	5304:1:154125:154133	836917	0	True				
ANR	837079	SwitchStatement	switch ( input [ 1 ] )		836917	1					
ANR	837080	Condition	input [ 1 ]	5305:10:154154:154161	836917	0	True				
ANR	837081	ArrayIndexing	input [ 1 ]		836917	0					
ANR	837082	Identifier	input		836917	0					
ANR	837083	PrimaryExpression	1		836917	1					
ANR	837084	CompoundStatement		20:20:625:625	836917	1					
ANR	837085	Label	case 'c' :	5306:2:154168:154176	836917	0	True				
ANR	837086	IfStatement	if ( input [ 2 ] == ' ' || input [ 2 ] == '=' )		836917	1					
ANR	837087	Condition	input [ 2 ] == ' ' || input [ 2 ] == '='	5307:7:154195:154228	836917	0	True				
ANR	837088	OrExpression	input [ 2 ] == ' ' || input [ 2 ] == '='		836917	0		||			
ANR	837089	EqualityExpression	input [ 2 ] == ' '		836917	0		==			
ANR	837090	ArrayIndexing	input [ 2 ]		836917	0					
ANR	837091	Identifier	input		836917	0					
ANR	837092	PrimaryExpression	2		836917	1					
ANR	837093	PrimaryExpression	' '		836917	1					
ANR	837094	EqualityExpression	input [ 2 ] == '='		836917	1		==			
ANR	837095	ArrayIndexing	input [ 2 ]		836917	0					
ANR	837096	Identifier	input		836917	0					
ANR	837097	PrimaryExpression	2		836917	1					
ANR	837098	PrimaryExpression	'='		836917	1					
ANR	837099	CompoundStatement		22:43:692:692	836917	1					
ANR	837100	ExpressionStatement	"r_core_cmdf ( core , ""ar PC=%s"" , r_str_trim_ro ( input + 3 ) )"	5309:4:154265:154322	836917	0	True				
ANR	837101	CallExpression	"r_core_cmdf ( core , ""ar PC=%s"" , r_str_trim_ro ( input + 3 ) )"		836917	0					
ANR	837102	Callee	r_core_cmdf		836917	0					
ANR	837103	Identifier	r_core_cmdf		836917	0					
ANR	837104	ArgumentList	core		836917	1					
ANR	837105	Argument	core		836917	0					
ANR	837106	Identifier	core		836917	0					
ANR	837107	Argument	"""ar PC=%s"""		836917	1					
ANR	837108	PrimaryExpression	"""ar PC=%s"""		836917	0					
ANR	837109	Argument	r_str_trim_ro ( input + 3 )		836917	2					
ANR	837110	CallExpression	r_str_trim_ro ( input + 3 )		836917	0					
ANR	837111	Callee	r_str_trim_ro		836917	0					
ANR	837112	Identifier	r_str_trim_ro		836917	0					
ANR	837113	ArgumentList	input + 3		836917	1					
ANR	837114	Argument	input + 3		836917	0					
ANR	837115	AdditiveExpression	input + 3		836917	0		+			
ANR	837116	Identifier	input		836917	0					
ANR	837117	PrimaryExpression	3		836917	1					
ANR	837118	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	5310:4:154328:154354	836917	1	True				
ANR	837119	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		836917	0					
ANR	837120	Callee	r_core_cmd0		836917	0					
ANR	837121	Identifier	r_core_cmd0		836917	0					
ANR	837122	ArgumentList	core		836917	1					
ANR	837123	Argument	core		836917	0					
ANR	837124	Identifier	core		836917	0					
ANR	837125	Argument	""".ar*"""		836917	1					
ANR	837126	PrimaryExpression	""".ar*"""		836917	0					
ANR	837127	ElseStatement	else		836917	0					
ANR	837128	CompoundStatement		26:10:827:827	836917	0					
ANR	837129	ExpressionStatement	"eprintf ( ""Missing argument\\n"" )"	5312:4:154372:154402	836917	0	True				
ANR	837130	CallExpression	"eprintf ( ""Missing argument\\n"" )"		836917	0					
ANR	837131	Callee	eprintf		836917	0					
ANR	837132	Identifier	eprintf		836917	0					
ANR	837133	ArgumentList	"""Missing argument\\n"""		836917	1					
ANR	837134	Argument	"""Missing argument\\n"""		836917	0					
ANR	837135	PrimaryExpression	"""Missing argument\\n"""		836917	0					
ANR	837136	BreakStatement	break ;	5314:3:154412:154417	836917	2	True				
ANR	837137	Label	case 0 :	5315:2:154421:154427	836917	3	True				
ANR	837138	ExpressionStatement	r_anal_pin_list ( core -> anal )	5316:3:154432:154460	836917	4	True				
ANR	837139	CallExpression	r_anal_pin_list ( core -> anal )		836917	0					
ANR	837140	Callee	r_anal_pin_list		836917	0					
ANR	837141	Identifier	r_anal_pin_list		836917	0					
ANR	837142	ArgumentList	core -> anal		836917	1					
ANR	837143	Argument	core -> anal		836917	0					
ANR	837144	PtrMemberAccess	core -> anal		836917	0					
ANR	837145	Identifier	core		836917	0					
ANR	837146	Identifier	anal		836917	1					
ANR	837147	BreakStatement	break ;	5317:3:154465:154470	836917	5	True				
ANR	837148	Label	case '-' :	5318:2:154474:154482	836917	6	True				
ANR	837149	IfStatement	if ( input [ 2 ] )		836917	7					
ANR	837150	Condition	input [ 2 ]	5319:7:154491:154498	836917	0	True				
ANR	837151	ArrayIndexing	input [ 2 ]		836917	0					
ANR	837152	Identifier	input		836917	0					
ANR	837153	PrimaryExpression	2		836917	1					
ANR	837154	CompoundStatement		34:17:962:962	836917	1					
ANR	837155	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	5320:4:154507:154547	836917	0	True				
ANR	837156	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		836917	0		=			
ANR	837157	Identifier	addr		836917	0					
ANR	837158	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	1					
ANR	837159	Callee	r_num_math		836917	0					
ANR	837160	Identifier	r_num_math		836917	0					
ANR	837161	ArgumentList	core -> num		836917	1					
ANR	837162	Argument	core -> num		836917	0					
ANR	837163	PtrMemberAccess	core -> num		836917	0					
ANR	837164	Identifier	core		836917	0					
ANR	837165	Identifier	num		836917	1					
ANR	837166	Argument	input + 2		836917	1					
ANR	837167	AdditiveExpression	input + 2		836917	0		+			
ANR	837168	Identifier	input		836917	0					
ANR	837169	PrimaryExpression	2		836917	1					
ANR	837170	ExpressionStatement	"r_anal_pin_unset ( core -> anal , addr )"	5322:3:154557:154592	836917	8	True				
ANR	837171	CallExpression	"r_anal_pin_unset ( core -> anal , addr )"		836917	0					
ANR	837172	Callee	r_anal_pin_unset		836917	0					
ANR	837173	Identifier	r_anal_pin_unset		836917	0					
ANR	837174	ArgumentList	core -> anal		836917	1					
ANR	837175	Argument	core -> anal		836917	0					
ANR	837176	PtrMemberAccess	core -> anal		836917	0					
ANR	837177	Identifier	core		836917	0					
ANR	837178	Identifier	anal		836917	1					
ANR	837179	Argument	addr		836917	1					
ANR	837180	Identifier	addr		836917	0					
ANR	837181	BreakStatement	break ;	5323:3:154597:154602	836917	9	True				
ANR	837182	Label	case ' ' :	5324:2:154606:154614	836917	10	True				
ANR	837183	ExpressionStatement	"r_anal_pin ( core -> anal , addr , input + 2 )"	5325:3:154619:154659	836917	11	True				
ANR	837184	CallExpression	"r_anal_pin ( core -> anal , addr , input + 2 )"		836917	0					
ANR	837185	Callee	r_anal_pin		836917	0					
ANR	837186	Identifier	r_anal_pin		836917	0					
ANR	837187	ArgumentList	core -> anal		836917	1					
ANR	837188	Argument	core -> anal		836917	0					
ANR	837189	PtrMemberAccess	core -> anal		836917	0					
ANR	837190	Identifier	core		836917	0					
ANR	837191	Identifier	anal		836917	1					
ANR	837192	Argument	addr		836917	1					
ANR	837193	Identifier	addr		836917	0					
ANR	837194	Argument	input + 2		836917	2					
ANR	837195	AdditiveExpression	input + 2		836917	0		+			
ANR	837196	Identifier	input		836917	0					
ANR	837197	PrimaryExpression	2		836917	1					
ANR	837198	BreakStatement	break ;	5326:3:154664:154669	836917	12	True				
ANR	837199	Label	default :	5327:2:154673:154680	836917	13	True				
ANR	837200	Identifier	default		836917	0					
ANR	837201	ExpressionStatement	"r_core_cmd_help ( core , help_msg_aep )"	5328:3:154685:154721	836917	14	True				
ANR	837202	CallExpression	"r_core_cmd_help ( core , help_msg_aep )"		836917	0					
ANR	837203	Callee	r_core_cmd_help		836917	0					
ANR	837204	Identifier	r_core_cmd_help		836917	0					
ANR	837205	ArgumentList	core		836917	1					
ANR	837206	Argument	core		836917	0					
ANR	837207	Identifier	core		836917	0					
ANR	837208	Argument	help_msg_aep		836917	1					
ANR	837209	Identifier	help_msg_aep		836917	0					
ANR	837210	BreakStatement	break ;	5329:3:154726:154731	836917	15	True				
ANR	837211	BreakStatement	break ;	5331:2:154739:154744	836917	2	True				
ANR	837212	Label	case 'r' :	5332:1:154747:154755	836917	3	True				
ANR	837213	ExpressionStatement	"cmd_anal_reg ( core , input + 1 )"	5334:2:154800:154830	836917	4	True				
ANR	837214	CallExpression	"cmd_anal_reg ( core , input + 1 )"		836917	0					
ANR	837215	Callee	cmd_anal_reg		836917	0					
ANR	837216	Identifier	cmd_anal_reg		836917	0					
ANR	837217	ArgumentList	core		836917	1					
ANR	837218	Argument	core		836917	0					
ANR	837219	Identifier	core		836917	0					
ANR	837220	Argument	input + 1		836917	1					
ANR	837221	AdditiveExpression	input + 1		836917	0		+			
ANR	837222	Identifier	input		836917	0					
ANR	837223	PrimaryExpression	1		836917	1					
ANR	837224	BreakStatement	break ;	5335:2:154834:154839	836917	5	True				
ANR	837225	Label	case '*' :	5336:1:154842:154850	836917	6	True				
ANR	837226	IfStatement	if ( core -> anal -> esil )		836917	7					
ANR	837227	Condition	core -> anal -> esil	5338:6:154897:154912	836917	0	True				
ANR	837228	PtrMemberAccess	core -> anal -> esil		836917	0					
ANR	837229	PtrMemberAccess	core -> anal		836917	0					
ANR	837230	Identifier	core		836917	0					
ANR	837231	Identifier	anal		836917	1					
ANR	837232	Identifier	esil		836917	1					
ANR	837233	CompoundStatement		53:24:1376:1376	836917	1					
ANR	837234	ExpressionStatement	"r_cons_printf ( ""trap: %d\\n"" , core -> anal -> esil -> trap )"	5339:3:154920:154972	836917	0	True				
ANR	837235	CallExpression	"r_cons_printf ( ""trap: %d\\n"" , core -> anal -> esil -> trap )"		836917	0					
ANR	837236	Callee	r_cons_printf		836917	0					
ANR	837237	Identifier	r_cons_printf		836917	0					
ANR	837238	ArgumentList	"""trap: %d\\n"""		836917	1					
ANR	837239	Argument	"""trap: %d\\n"""		836917	0					
ANR	837240	PrimaryExpression	"""trap: %d\\n"""		836917	0					
ANR	837241	Argument	core -> anal -> esil -> trap		836917	1					
ANR	837242	PtrMemberAccess	core -> anal -> esil -> trap		836917	0					
ANR	837243	PtrMemberAccess	core -> anal -> esil		836917	0					
ANR	837244	PtrMemberAccess	core -> anal		836917	0					
ANR	837245	Identifier	core		836917	0					
ANR	837246	Identifier	anal		836917	1					
ANR	837247	Identifier	esil		836917	1					
ANR	837248	Identifier	trap		836917	1					
ANR	837249	ExpressionStatement	"r_cons_printf ( ""trap-code: %d\\n"" , core -> anal -> esil -> trap_code )"	5340:3:154977:155039	836917	1	True				
ANR	837250	CallExpression	"r_cons_printf ( ""trap-code: %d\\n"" , core -> anal -> esil -> trap_code )"		836917	0					
ANR	837251	Callee	r_cons_printf		836917	0					
ANR	837252	Identifier	r_cons_printf		836917	0					
ANR	837253	ArgumentList	"""trap-code: %d\\n"""		836917	1					
ANR	837254	Argument	"""trap-code: %d\\n"""		836917	0					
ANR	837255	PrimaryExpression	"""trap-code: %d\\n"""		836917	0					
ANR	837256	Argument	core -> anal -> esil -> trap_code		836917	1					
ANR	837257	PtrMemberAccess	core -> anal -> esil -> trap_code		836917	0					
ANR	837258	PtrMemberAccess	core -> anal -> esil		836917	0					
ANR	837259	PtrMemberAccess	core -> anal		836917	0					
ANR	837260	Identifier	core		836917	0					
ANR	837261	Identifier	anal		836917	1					
ANR	837262	Identifier	esil		836917	1					
ANR	837263	Identifier	trap_code		836917	1					
ANR	837264	ElseStatement	else		836917	0					
ANR	837265	CompoundStatement		56:9:1511:1511	836917	0					
ANR	837266	ExpressionStatement	"eprintf ( ""esil vm not initialized. run `aei`\\n"" )"	5342:3:155055:155103	836917	0	True				
ANR	837267	CallExpression	"eprintf ( ""esil vm not initialized. run `aei`\\n"" )"		836917	0					
ANR	837268	Callee	eprintf		836917	0					
ANR	837269	Identifier	eprintf		836917	0					
ANR	837270	ArgumentList	"""esil vm not initialized. run `aei`\\n"""		836917	1					
ANR	837271	Argument	"""esil vm not initialized. run `aei`\\n"""		836917	0					
ANR	837272	PrimaryExpression	"""esil vm not initialized. run `aei`\\n"""		836917	0					
ANR	837273	BreakStatement	break ;	5344:2:155111:155116	836917	8	True				
ANR	837274	Label	case ' ' :	5345:1:155119:155127	836917	9	True				
ANR	837275	IfStatement	"if ( ! esil && ! ( core -> anal -> esil = esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) ) )"		836917	10					
ANR	837276	Condition	"! esil && ! ( core -> anal -> esil = esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"	5347:6:155179:155261	836917	0	True				
ANR	837277	AndExpression	"! esil && ! ( core -> anal -> esil = esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"		836917	0		&&			
ANR	837278	UnaryOperationExpression	! esil		836917	0					
ANR	837279	UnaryOperator	!		836917	0					
ANR	837280	Identifier	esil		836917	1					
ANR	837281	UnaryOperationExpression	"! ( core -> anal -> esil = esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"		836917	1					
ANR	837282	UnaryOperator	!		836917	0					
ANR	837283	AssignmentExpression	"core -> anal -> esil = esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		836917	1		=			
ANR	837284	PtrMemberAccess	core -> anal -> esil		836917	0					
ANR	837285	PtrMemberAccess	core -> anal		836917	0					
ANR	837286	Identifier	core		836917	0					
ANR	837287	Identifier	anal		836917	1					
ANR	837288	Identifier	esil		836917	1					
ANR	837289	AssignmentExpression	"esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		836917	1		=			
ANR	837290	Identifier	esil		836917	0					
ANR	837291	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		836917	1					
ANR	837292	Callee	r_anal_esil_new		836917	0					
ANR	837293	Identifier	r_anal_esil_new		836917	0					
ANR	837294	ArgumentList	stacksize		836917	1					
ANR	837295	Argument	stacksize		836917	0					
ANR	837296	Identifier	stacksize		836917	0					
ANR	837297	Argument	iotrap		836917	1					
ANR	837298	Identifier	iotrap		836917	0					
ANR	837299	Argument	addrsize		836917	2					
ANR	837300	Identifier	addrsize		836917	0					
ANR	837301	CompoundStatement		62:91:1725:1725	836917	1					
ANR	837302	ReturnStatement	return ;	5348:3:155269:155275	836917	0	True				
ANR	837303	ExpressionStatement	"r_anal_esil_setup ( esil , core -> anal , romem , stats , noNULL )"	5350:2:155283:155341	836917	11	True				
ANR	837304	CallExpression	"r_anal_esil_setup ( esil , core -> anal , romem , stats , noNULL )"		836917	0					
ANR	837305	Callee	r_anal_esil_setup		836917	0					
ANR	837306	Identifier	r_anal_esil_setup		836917	0					
ANR	837307	ArgumentList	esil		836917	1					
ANR	837308	Argument	esil		836917	0					
ANR	837309	Identifier	esil		836917	0					
ANR	837310	Argument	core -> anal		836917	1					
ANR	837311	PtrMemberAccess	core -> anal		836917	0					
ANR	837312	Identifier	core		836917	0					
ANR	837313	Identifier	anal		836917	1					
ANR	837314	Argument	romem		836917	2					
ANR	837315	Identifier	romem		836917	0					
ANR	837316	Argument	stats		836917	3					
ANR	837317	Identifier	stats		836917	0					
ANR	837318	Argument	noNULL		836917	4					
ANR	837319	Identifier	noNULL		836917	0					
ANR	837320	ExpressionStatement	"r_anal_esil_set_pc ( esil , core -> offset )"	5351:2:155357:155396	836917	12	True				
ANR	837321	CallExpression	"r_anal_esil_set_pc ( esil , core -> offset )"		836917	0					
ANR	837322	Callee	r_anal_esil_set_pc		836917	0					
ANR	837323	Identifier	r_anal_esil_set_pc		836917	0					
ANR	837324	ArgumentList	esil		836917	1					
ANR	837325	Argument	esil		836917	0					
ANR	837326	Identifier	esil		836917	0					
ANR	837327	Argument	core -> offset		836917	1					
ANR	837328	PtrMemberAccess	core -> offset		836917	0					
ANR	837329	Identifier	core		836917	0					
ANR	837330	Identifier	offset		836917	1					
ANR	837331	ExpressionStatement	"r_anal_esil_parse ( esil , input + 1 )"	5352:2:155400:155435	836917	13	True				
ANR	837332	CallExpression	"r_anal_esil_parse ( esil , input + 1 )"		836917	0					
ANR	837333	Callee	r_anal_esil_parse		836917	0					
ANR	837334	Identifier	r_anal_esil_parse		836917	0					
ANR	837335	ArgumentList	esil		836917	1					
ANR	837336	Argument	esil		836917	0					
ANR	837337	Identifier	esil		836917	0					
ANR	837338	Argument	input + 1		836917	1					
ANR	837339	AdditiveExpression	input + 1		836917	0		+			
ANR	837340	Identifier	input		836917	0					
ANR	837341	PrimaryExpression	1		836917	1					
ANR	837342	ExpressionStatement	r_anal_esil_dumpstack ( esil )	5353:2:155439:155467	836917	14	True				
ANR	837343	CallExpression	r_anal_esil_dumpstack ( esil )		836917	0					
ANR	837344	Callee	r_anal_esil_dumpstack		836917	0					
ANR	837345	Identifier	r_anal_esil_dumpstack		836917	0					
ANR	837346	ArgumentList	esil		836917	1					
ANR	837347	Argument	esil		836917	0					
ANR	837348	Identifier	esil		836917	0					
ANR	837349	ExpressionStatement	r_anal_esil_stack_free ( esil )	5354:2:155471:155500	836917	15	True				
ANR	837350	CallExpression	r_anal_esil_stack_free ( esil )		836917	0					
ANR	837351	Callee	r_anal_esil_stack_free		836917	0					
ANR	837352	Identifier	r_anal_esil_stack_free		836917	0					
ANR	837353	ArgumentList	esil		836917	1					
ANR	837354	Argument	esil		836917	0					
ANR	837355	Identifier	esil		836917	0					
ANR	837356	BreakStatement	break ;	5355:2:155504:155509	836917	16	True				
ANR	837357	Label	case 's' :	5356:1:155512:155520	836917	17	True				
ANR	837358	SwitchStatement	switch ( input [ 1 ] )		836917	18					
ANR	837359	Condition	input [ 1 ]	5363:10:155721:155728	836917	0	True				
ANR	837360	ArrayIndexing	input [ 1 ]		836917	0					
ANR	837361	Identifier	input		836917	0					
ANR	837362	PrimaryExpression	1		836917	1					
ANR	837363	CompoundStatement		78:20:2192:2192	836917	1					
ANR	837364	Label	case '?' :	5364:2:155735:155743	836917	0	True				
ANR	837365	ExpressionStatement	"r_core_cmd0 ( core , ""ae?~aes"" )"	5365:3:155748:155777	836917	1	True				
ANR	837366	CallExpression	"r_core_cmd0 ( core , ""ae?~aes"" )"		836917	0					
ANR	837367	Callee	r_core_cmd0		836917	0					
ANR	837368	Identifier	r_core_cmd0		836917	0					
ANR	837369	ArgumentList	core		836917	1					
ANR	837370	Argument	core		836917	0					
ANR	837371	Identifier	core		836917	0					
ANR	837372	Argument	"""ae?~aes"""		836917	1					
ANR	837373	PrimaryExpression	"""ae?~aes"""		836917	0					
ANR	837374	BreakStatement	break ;	5366:3:155782:155787	836917	2	True				
ANR	837375	Label	case 'l' :	5367:2:155791:155799	836917	3	True				
ANR	837376	CompoundStatement		85:3:2327:2410	836917	4					
ANR	837377	IdentifierDeclStatement	"ut64 pc = r_debug_reg_get ( core -> dbg , ""PC"" ) ;"	5369:3:155818:155861	836917	0	True				
ANR	837378	IdentifierDecl	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		836917	0					
ANR	837379	IdentifierDeclType	ut64		836917	0					
ANR	837380	Identifier	pc		836917	1					
ANR	837381	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		836917	2		=			
ANR	837382	Identifier	pc		836917	0					
ANR	837383	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		836917	1					
ANR	837384	Callee	r_debug_reg_get		836917	0					
ANR	837385	Identifier	r_debug_reg_get		836917	0					
ANR	837386	ArgumentList	core -> dbg		836917	1					
ANR	837387	Argument	core -> dbg		836917	0					
ANR	837388	PtrMemberAccess	core -> dbg		836917	0					
ANR	837389	Identifier	core		836917	0					
ANR	837390	Identifier	dbg		836917	1					
ANR	837391	Argument	"""PC"""		836917	1					
ANR	837392	PrimaryExpression	"""PC"""		836917	0					
ANR	837393	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , pc , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT ) ;"	5370:3:155866:155949	836917	1	True				
ANR	837394	IdentifierDecl	"* op = r_core_anal_op ( core , pc , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		836917	0					
ANR	837395	IdentifierDeclType	RAnalOp *		836917	0					
ANR	837396	Identifier	op		836917	1					
ANR	837397	AssignmentExpression	"* op = r_core_anal_op ( core , pc , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		836917	2		=			
ANR	837398	Identifier	op		836917	0					
ANR	837399	CallExpression	"r_core_anal_op ( core , pc , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		836917	1					
ANR	837400	Callee	r_core_anal_op		836917	0					
ANR	837401	Identifier	r_core_anal_op		836917	0					
ANR	837402	ArgumentList	core		836917	1					
ANR	837403	Argument	core		836917	0					
ANR	837404	Identifier	core		836917	0					
ANR	837405	Argument	pc		836917	1					
ANR	837406	Identifier	pc		836917	0					
ANR	837407	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT		836917	2					
ANR	837408	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT		836917	0		|			
ANR	837409	Identifier	R_ANAL_OP_MASK_BASIC		836917	0					
ANR	837410	Identifier	R_ANAL_OP_MASK_HINT		836917	1					
ANR	837411	IfStatement	if ( ! op )		836917	2					
ANR	837412	Condition	! op	5372:7:155981:155983	836917	0	True				
ANR	837413	UnaryOperationExpression	! op		836917	0					
ANR	837414	UnaryOperator	!		836917	0					
ANR	837415	Identifier	op		836917	1					
ANR	837416	CompoundStatement		87:12:2447:2447	836917	1					
ANR	837417	BreakStatement	break ;	5373:4:155992:155997	836917	0	True				
ANR	837418	ExpressionStatement	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"	5375:3:156007:156059	836917	3	True				
ANR	837419	CallExpression	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"		836917	0					
ANR	837420	Callee	r_core_esil_step		836917	0					
ANR	837421	Identifier	r_core_esil_step		836917	0					
ANR	837422	ArgumentList	core		836917	1					
ANR	837423	Argument	core		836917	0					
ANR	837424	Identifier	core		836917	0					
ANR	837425	Argument	UT64_MAX		836917	1					
ANR	837426	Identifier	UT64_MAX		836917	0					
ANR	837427	Argument	NULL		836917	2					
ANR	837428	Identifier	NULL		836917	0					
ANR	837429	Argument	NULL		836917	3					
ANR	837430	Identifier	NULL		836917	0					
ANR	837431	Argument	false		836917	4					
ANR	837432	Identifier	false		836917	0					
ANR	837433	ExpressionStatement	"r_debug_reg_set ( core -> dbg , ""PC"" , pc + op -> size )"	5376:3:156064:156112	836917	4	True				
ANR	837434	CallExpression	"r_debug_reg_set ( core -> dbg , ""PC"" , pc + op -> size )"		836917	0					
ANR	837435	Callee	r_debug_reg_set		836917	0					
ANR	837436	Identifier	r_debug_reg_set		836917	0					
ANR	837437	ArgumentList	core -> dbg		836917	1					
ANR	837438	Argument	core -> dbg		836917	0					
ANR	837439	PtrMemberAccess	core -> dbg		836917	0					
ANR	837440	Identifier	core		836917	0					
ANR	837441	Identifier	dbg		836917	1					
ANR	837442	Argument	"""PC"""		836917	1					
ANR	837443	PrimaryExpression	"""PC"""		836917	0					
ANR	837444	Argument	pc + op -> size		836917	2					
ANR	837445	AdditiveExpression	pc + op -> size		836917	0		+			
ANR	837446	Identifier	pc		836917	0					
ANR	837447	PtrMemberAccess	op -> size		836917	1					
ANR	837448	Identifier	op		836917	0					
ANR	837449	Identifier	size		836917	1					
ANR	837450	ExpressionStatement	"r_anal_esil_set_pc ( esil , pc + op -> size )"	5377:3:156117:156157	836917	5	True				
ANR	837451	CallExpression	"r_anal_esil_set_pc ( esil , pc + op -> size )"		836917	0					
ANR	837452	Callee	r_anal_esil_set_pc		836917	0					
ANR	837453	Identifier	r_anal_esil_set_pc		836917	0					
ANR	837454	ArgumentList	esil		836917	1					
ANR	837455	Argument	esil		836917	0					
ANR	837456	Identifier	esil		836917	0					
ANR	837457	Argument	pc + op -> size		836917	1					
ANR	837458	AdditiveExpression	pc + op -> size		836917	0		+			
ANR	837459	Identifier	pc		836917	0					
ANR	837460	PtrMemberAccess	op -> size		836917	1					
ANR	837461	Identifier	op		836917	0					
ANR	837462	Identifier	size		836917	1					
ANR	837463	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	5378:3:156162:156188	836917	6	True				
ANR	837464	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		836917	0					
ANR	837465	Callee	r_core_cmd0		836917	0					
ANR	837466	Identifier	r_core_cmd0		836917	0					
ANR	837467	ArgumentList	core		836917	1					
ANR	837468	Argument	core		836917	0					
ANR	837469	Identifier	core		836917	0					
ANR	837470	Argument	""".ar*"""		836917	1					
ANR	837471	PrimaryExpression	""".ar*"""		836917	0					
ANR	837472	ExpressionStatement	r_anal_op_free ( op )	5379:3:156193:156212	836917	7	True				
ANR	837473	CallExpression	r_anal_op_free ( op )		836917	0					
ANR	837474	Callee	r_anal_op_free		836917	0					
ANR	837475	Identifier	r_anal_op_free		836917	0					
ANR	837476	ArgumentList	op		836917	1					
ANR	837477	Argument	op		836917	0					
ANR	837478	Identifier	op		836917	0					
ANR	837479	BreakStatement	break ;	5380:4:156218:156223	836917	5	True				
ANR	837480	Label	case 'b' :	5381:2:156227:156235	836917	6	True				
ANR	837481	IfStatement	if ( ! r_core_esil_step_back ( core ) )		836917	7					
ANR	837482	Condition	! r_core_esil_step_back ( core )	5382:7:156254:156282	836917	0	True				
ANR	837483	UnaryOperationExpression	! r_core_esil_step_back ( core )		836917	0					
ANR	837484	UnaryOperator	!		836917	0					
ANR	837485	CallExpression	r_core_esil_step_back ( core )		836917	1					
ANR	837486	Callee	r_core_esil_step_back		836917	0					
ANR	837487	Identifier	r_core_esil_step_back		836917	0					
ANR	837488	ArgumentList	core		836917	1					
ANR	837489	Argument	core		836917	0					
ANR	837490	Identifier	core		836917	0					
ANR	837491	CompoundStatement		97:38:2746:2746	836917	1					
ANR	837492	ExpressionStatement	"eprintf ( ""cannnot step back\\n"" )"	5383:4:156291:156322	836917	0	True				
ANR	837493	CallExpression	"eprintf ( ""cannnot step back\\n"" )"		836917	0					
ANR	837494	Callee	eprintf		836917	0					
ANR	837495	Identifier	eprintf		836917	0					
ANR	837496	ArgumentList	"""cannnot step back\\n"""		836917	1					
ANR	837497	Argument	"""cannnot step back\\n"""		836917	0					
ANR	837498	PrimaryExpression	"""cannnot step back\\n"""		836917	0					
ANR	837499	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	5385:3:156332:156358	836917	8	True				
ANR	837500	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		836917	0					
ANR	837501	Callee	r_core_cmd0		836917	0					
ANR	837502	Identifier	r_core_cmd0		836917	0					
ANR	837503	ArgumentList	core		836917	1					
ANR	837504	Argument	core		836917	0					
ANR	837505	Identifier	core		836917	0					
ANR	837506	Argument	""".ar*"""		836917	1					
ANR	837507	PrimaryExpression	""".ar*"""		836917	0					
ANR	837508	BreakStatement	break ;	5386:3:156363:156368	836917	9	True				
ANR	837509	Label	case 'u' :	5387:2:156372:156380	836917	10	True				
ANR	837510	ExpressionStatement	until_expr = NULL	5388:3:156395:156412	836917	11	True				
ANR	837511	AssignmentExpression	until_expr = NULL		836917	0		=			
ANR	837512	Identifier	until_expr		836917	0					
ANR	837513	Identifier	NULL		836917	1					
ANR	837514	ExpressionStatement	until_addr = UT64_MAX	5389:3:156417:156438	836917	12	True				
ANR	837515	AssignmentExpression	until_addr = UT64_MAX		836917	0		=			
ANR	837516	Identifier	until_addr		836917	0					
ANR	837517	Identifier	UT64_MAX		836917	1					
ANR	837518	IfStatement	"if ( r_str_endswith ( input , ""?"" ) )"		836917	13					
ANR	837519	Condition	"r_str_endswith ( input , ""?"" )"	5390:7:156447:156473	836917	0	True				
ANR	837520	CallExpression	"r_str_endswith ( input , ""?"" )"		836917	0					
ANR	837521	Callee	r_str_endswith		836917	0					
ANR	837522	Identifier	r_str_endswith		836917	0					
ANR	837523	ArgumentList	input		836917	1					
ANR	837524	Argument	input		836917	0					
ANR	837525	Identifier	input		836917	0					
ANR	837526	Argument	"""?"""		836917	1					
ANR	837527	PrimaryExpression	"""?"""		836917	0					
ANR	837528	CompoundStatement		105:36:2937:2937	836917	1					
ANR	837529	ExpressionStatement	"r_core_cmd0 ( core , ""ae?~aesu"" )"	5391:4:156482:156512	836917	0	True				
ANR	837530	CallExpression	"r_core_cmd0 ( core , ""ae?~aesu"" )"		836917	0					
ANR	837531	Callee	r_core_cmd0		836917	0					
ANR	837532	Identifier	r_core_cmd0		836917	0					
ANR	837533	ArgumentList	core		836917	1					
ANR	837534	Argument	core		836917	0					
ANR	837535	Identifier	core		836917	0					
ANR	837536	Argument	"""ae?~aesu"""		836917	1					
ANR	837537	PrimaryExpression	"""ae?~aesu"""		836917	0					
ANR	837538	ElseStatement	else		836917	0					
ANR	837539	SwitchStatement	switch ( input [ 2 ] )		836917	0					
ANR	837540	Condition	input [ 2 ]	5392:18:156532:156539	836917	0	True				
ANR	837541	ArrayIndexing	input [ 2 ]		836917	0					
ANR	837542	Identifier	input		836917	0					
ANR	837543	PrimaryExpression	2		836917	1					
ANR	837544	CompoundStatement		107:28:3003:3003	836917	1					
ANR	837545	Label	case 'e' :	5393:3:156547:156555	836917	0	True				
ANR	837546	ExpressionStatement	until_expr = input + 3	5394:4:156572:156594	836917	1	True				
ANR	837547	AssignmentExpression	until_expr = input + 3		836917	0		=			
ANR	837548	Identifier	until_expr		836917	0					
ANR	837549	AdditiveExpression	input + 3		836917	1		+			
ANR	837550	Identifier	input		836917	0					
ANR	837551	PrimaryExpression	3		836917	1					
ANR	837552	BreakStatement	break ;	5395:4:156600:156605	836917	2	True				
ANR	837553	Label	case ' ' :	5396:3:156610:156618	836917	3	True				
ANR	837554	ExpressionStatement	"until_addr = r_num_math ( core -> num , input + 2 )"	5397:4:156634:156680	836917	4	True				
ANR	837555	AssignmentExpression	"until_addr = r_num_math ( core -> num , input + 2 )"		836917	0		=			
ANR	837556	Identifier	until_addr		836917	0					
ANR	837557	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	1					
ANR	837558	Callee	r_num_math		836917	0					
ANR	837559	Identifier	r_num_math		836917	0					
ANR	837560	ArgumentList	core -> num		836917	1					
ANR	837561	Argument	core -> num		836917	0					
ANR	837562	PtrMemberAccess	core -> num		836917	0					
ANR	837563	Identifier	core		836917	0					
ANR	837564	Identifier	num		836917	1					
ANR	837565	Argument	input + 2		836917	1					
ANR	837566	AdditiveExpression	input + 2		836917	0		+			
ANR	837567	Identifier	input		836917	0					
ANR	837568	PrimaryExpression	2		836917	1					
ANR	837569	BreakStatement	break ;	5398:4:156686:156691	836917	5	True				
ANR	837570	Label	case 'o' :	5399:3:156696:156704	836917	6	True				
ANR	837571	ExpressionStatement	"step_until_optype ( core , r_str_trim_ro ( input + 3 ) )"	5400:4:156721:156772	836917	7	True				
ANR	837572	CallExpression	"step_until_optype ( core , r_str_trim_ro ( input + 3 ) )"		836917	0					
ANR	837573	Callee	step_until_optype		836917	0					
ANR	837574	Identifier	step_until_optype		836917	0					
ANR	837575	ArgumentList	core		836917	1					
ANR	837576	Argument	core		836917	0					
ANR	837577	Identifier	core		836917	0					
ANR	837578	Argument	r_str_trim_ro ( input + 3 )		836917	1					
ANR	837579	CallExpression	r_str_trim_ro ( input + 3 )		836917	0					
ANR	837580	Callee	r_str_trim_ro		836917	0					
ANR	837581	Identifier	r_str_trim_ro		836917	0					
ANR	837582	ArgumentList	input + 3		836917	1					
ANR	837583	Argument	input + 3		836917	0					
ANR	837584	AdditiveExpression	input + 3		836917	0		+			
ANR	837585	Identifier	input		836917	0					
ANR	837586	PrimaryExpression	3		836917	1					
ANR	837587	BreakStatement	break ;	5401:4:156778:156783	836917	8	True				
ANR	837588	Label	default :	5402:3:156788:156795	836917	9	True				
ANR	837589	Identifier	default		836917	0					
ANR	837590	ExpressionStatement	"r_core_cmd0 ( core , ""ae?~aesu"" )"	5403:4:156801:156831	836917	10	True				
ANR	837591	CallExpression	"r_core_cmd0 ( core , ""ae?~aesu"" )"		836917	0					
ANR	837592	Callee	r_core_cmd0		836917	0					
ANR	837593	Identifier	r_core_cmd0		836917	0					
ANR	837594	ArgumentList	core		836917	1					
ANR	837595	Argument	core		836917	0					
ANR	837596	Identifier	core		836917	0					
ANR	837597	Argument	"""ae?~aesu"""		836917	1					
ANR	837598	PrimaryExpression	"""ae?~aesu"""		836917	0					
ANR	837599	BreakStatement	break ;	5404:4:156837:156842	836917	11	True				
ANR	837600	IfStatement	if ( until_expr || until_addr != UT64_MAX )		836917	14					
ANR	837601	Condition	until_expr || until_addr != UT64_MAX	5406:7:156856:156891	836917	0	True				
ANR	837602	OrExpression	until_expr || until_addr != UT64_MAX		836917	0		||			
ANR	837603	Identifier	until_expr		836917	0					
ANR	837604	EqualityExpression	until_addr != UT64_MAX		836917	1		!=			
ANR	837605	Identifier	until_addr		836917	0					
ANR	837606	Identifier	UT64_MAX		836917	1					
ANR	837607	CompoundStatement		121:45:3355:3355	836917	1					
ANR	837608	ExpressionStatement	"r_core_esil_step ( core , until_addr , until_expr , NULL , false )"	5407:4:156900:156960	836917	0	True				
ANR	837609	CallExpression	"r_core_esil_step ( core , until_addr , until_expr , NULL , false )"		836917	0					
ANR	837610	Callee	r_core_esil_step		836917	0					
ANR	837611	Identifier	r_core_esil_step		836917	0					
ANR	837612	ArgumentList	core		836917	1					
ANR	837613	Argument	core		836917	0					
ANR	837614	Identifier	core		836917	0					
ANR	837615	Argument	until_addr		836917	1					
ANR	837616	Identifier	until_addr		836917	0					
ANR	837617	Argument	until_expr		836917	2					
ANR	837618	Identifier	until_expr		836917	0					
ANR	837619	Argument	NULL		836917	3					
ANR	837620	Identifier	NULL		836917	0					
ANR	837621	Argument	false		836917	4					
ANR	837622	Identifier	false		836917	0					
ANR	837623	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	5409:3:156970:156996	836917	15	True				
ANR	837624	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		836917	0					
ANR	837625	Callee	r_core_cmd0		836917	0					
ANR	837626	Identifier	r_core_cmd0		836917	0					
ANR	837627	ArgumentList	core		836917	1					
ANR	837628	Argument	core		836917	0					
ANR	837629	Identifier	core		836917	0					
ANR	837630	Argument	""".ar*"""		836917	1					
ANR	837631	PrimaryExpression	""".ar*"""		836917	0					
ANR	837632	BreakStatement	break ;	5410:3:157001:157006	836917	16	True				
ANR	837633	Label	case 's' :	5411:2:157010:157018	836917	17	True				
ANR	837634	IfStatement	if ( input [ 2 ] == 'u' )		836917	18					
ANR	837635	Condition	input [ 2 ] == 'u'	5412:7:157037:157051	836917	0	True				
ANR	837636	EqualityExpression	input [ 2 ] == 'u'		836917	0		==			
ANR	837637	ArrayIndexing	input [ 2 ]		836917	0					
ANR	837638	Identifier	input		836917	0					
ANR	837639	PrimaryExpression	2		836917	1					
ANR	837640	PrimaryExpression	'u'		836917	1					
ANR	837641	CompoundStatement		127:24:3515:3515	836917	1					
ANR	837642	IfStatement	if ( input [ 2 ] == 'e' )		836917	0					
ANR	837643	Condition	input [ 2 ] == 'e'	5413:8:157075:157089	836917	0	True				
ANR	837644	EqualityExpression	input [ 2 ] == 'e'		836917	0		==			
ANR	837645	ArrayIndexing	input [ 2 ]		836917	0					
ANR	837646	Identifier	input		836917	0					
ANR	837647	PrimaryExpression	2		836917	1					
ANR	837648	PrimaryExpression	'e'		836917	1					
ANR	837649	CompoundStatement		128:25:3553:3553	836917	1					
ANR	837650	ExpressionStatement	until_expr = input + 3	5414:5:157099:157121	836917	0	True				
ANR	837651	AssignmentExpression	until_expr = input + 3		836917	0		=			
ANR	837652	Identifier	until_expr		836917	0					
ANR	837653	AdditiveExpression	input + 3		836917	1		+			
ANR	837654	Identifier	input		836917	0					
ANR	837655	PrimaryExpression	3		836917	1					
ANR	837656	ElseStatement	else		836917	0					
ANR	837657	CompoundStatement		130:11:3595:3595	836917	0					
ANR	837658	ExpressionStatement	"until_addr = r_num_math ( core -> num , input + 2 )"	5416:5:157141:157187	836917	0	True				
ANR	837659	AssignmentExpression	"until_addr = r_num_math ( core -> num , input + 2 )"		836917	0		=			
ANR	837660	Identifier	until_addr		836917	0					
ANR	837661	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	1					
ANR	837662	Callee	r_num_math		836917	0					
ANR	837663	Identifier	r_num_math		836917	0					
ANR	837664	ArgumentList	core -> num		836917	1					
ANR	837665	Argument	core -> num		836917	0					
ANR	837666	PtrMemberAccess	core -> num		836917	0					
ANR	837667	Identifier	core		836917	0					
ANR	837668	Identifier	num		836917	1					
ANR	837669	Argument	input + 2		836917	1					
ANR	837670	AdditiveExpression	input + 2		836917	0		+			
ANR	837671	Identifier	input		836917	0					
ANR	837672	PrimaryExpression	2		836917	1					
ANR	837673	ExpressionStatement	"r_core_esil_step ( core , until_addr , until_expr , NULL , true )"	5418:4:157199:157258	836917	1	True				
ANR	837674	CallExpression	"r_core_esil_step ( core , until_addr , until_expr , NULL , true )"		836917	0					
ANR	837675	Callee	r_core_esil_step		836917	0					
ANR	837676	Identifier	r_core_esil_step		836917	0					
ANR	837677	ArgumentList	core		836917	1					
ANR	837678	Argument	core		836917	0					
ANR	837679	Identifier	core		836917	0					
ANR	837680	Argument	until_addr		836917	1					
ANR	837681	Identifier	until_addr		836917	0					
ANR	837682	Argument	until_expr		836917	2					
ANR	837683	Identifier	until_expr		836917	0					
ANR	837684	Argument	NULL		836917	3					
ANR	837685	Identifier	NULL		836917	0					
ANR	837686	Argument	true		836917	4					
ANR	837687	Identifier	true		836917	0					
ANR	837688	ElseStatement	else		836917	0					
ANR	837689	CompoundStatement		134:10:3731:3731	836917	0					
ANR	837690	ExpressionStatement	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , true )"	5420:4:157276:157327	836917	0	True				
ANR	837691	CallExpression	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , true )"		836917	0					
ANR	837692	Callee	r_core_esil_step		836917	0					
ANR	837693	Identifier	r_core_esil_step		836917	0					
ANR	837694	ArgumentList	core		836917	1					
ANR	837695	Argument	core		836917	0					
ANR	837696	Identifier	core		836917	0					
ANR	837697	Argument	UT64_MAX		836917	1					
ANR	837698	Identifier	UT64_MAX		836917	0					
ANR	837699	Argument	NULL		836917	2					
ANR	837700	Identifier	NULL		836917	0					
ANR	837701	Argument	NULL		836917	3					
ANR	837702	Identifier	NULL		836917	0					
ANR	837703	Argument	true		836917	4					
ANR	837704	Identifier	true		836917	0					
ANR	837705	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	5422:3:157337:157363	836917	19	True				
ANR	837706	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		836917	0					
ANR	837707	Callee	r_core_cmd0		836917	0					
ANR	837708	Identifier	r_core_cmd0		836917	0					
ANR	837709	ArgumentList	core		836917	1					
ANR	837710	Argument	core		836917	0					
ANR	837711	Identifier	core		836917	0					
ANR	837712	Argument	""".ar*"""		836917	1					
ANR	837713	PrimaryExpression	""".ar*"""		836917	0					
ANR	837714	BreakStatement	break ;	5423:3:157368:157373	836917	20	True				
ANR	837715	Label	case 'o' :	5424:2:157377:157385	836917	21	True				
ANR	837716	IfStatement	if ( input [ 2 ] == 'u' )		836917	22					
ANR	837717	Condition	input [ 2 ] == 'u'	5425:7:157404:157418	836917	0	True				
ANR	837718	EqualityExpression	input [ 2 ] == 'u'		836917	0		==			
ANR	837719	ArrayIndexing	input [ 2 ]		836917	0					
ANR	837720	Identifier	input		836917	0					
ANR	837721	PrimaryExpression	2		836917	1					
ANR	837722	PrimaryExpression	'u'		836917	1					
ANR	837723	CompoundStatement		140:24:3882:3882	836917	1					
ANR	837724	IfStatement	if ( input [ 2 ] == 'e' )		836917	0					
ANR	837725	Condition	input [ 2 ] == 'e'	5426:8:157442:157456	836917	0	True				
ANR	837726	EqualityExpression	input [ 2 ] == 'e'		836917	0		==			
ANR	837727	ArrayIndexing	input [ 2 ]		836917	0					
ANR	837728	Identifier	input		836917	0					
ANR	837729	PrimaryExpression	2		836917	1					
ANR	837730	PrimaryExpression	'e'		836917	1					
ANR	837731	CompoundStatement		141:25:3920:3920	836917	1					
ANR	837732	ExpressionStatement	until_expr = input + 3	5427:5:157466:157488	836917	0	True				
ANR	837733	AssignmentExpression	until_expr = input + 3		836917	0		=			
ANR	837734	Identifier	until_expr		836917	0					
ANR	837735	AdditiveExpression	input + 3		836917	1		+			
ANR	837736	Identifier	input		836917	0					
ANR	837737	PrimaryExpression	3		836917	1					
ANR	837738	ElseStatement	else		836917	0					
ANR	837739	CompoundStatement		143:11:3962:3962	836917	0					
ANR	837740	ExpressionStatement	"until_addr = r_num_math ( core -> num , input + 2 )"	5429:5:157508:157554	836917	0	True				
ANR	837741	AssignmentExpression	"until_addr = r_num_math ( core -> num , input + 2 )"		836917	0		=			
ANR	837742	Identifier	until_addr		836917	0					
ANR	837743	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	1					
ANR	837744	Callee	r_num_math		836917	0					
ANR	837745	Identifier	r_num_math		836917	0					
ANR	837746	ArgumentList	core -> num		836917	1					
ANR	837747	Argument	core -> num		836917	0					
ANR	837748	PtrMemberAccess	core -> num		836917	0					
ANR	837749	Identifier	core		836917	0					
ANR	837750	Identifier	num		836917	1					
ANR	837751	Argument	input + 2		836917	1					
ANR	837752	AdditiveExpression	input + 2		836917	0		+			
ANR	837753	Identifier	input		836917	0					
ANR	837754	PrimaryExpression	2		836917	1					
ANR	837755	ExpressionStatement	"r_core_esil_step ( core , until_addr , until_expr , NULL , true )"	5431:4:157566:157625	836917	1	True				
ANR	837756	CallExpression	"r_core_esil_step ( core , until_addr , until_expr , NULL , true )"		836917	0					
ANR	837757	Callee	r_core_esil_step		836917	0					
ANR	837758	Identifier	r_core_esil_step		836917	0					
ANR	837759	ArgumentList	core		836917	1					
ANR	837760	Argument	core		836917	0					
ANR	837761	Identifier	core		836917	0					
ANR	837762	Argument	until_addr		836917	1					
ANR	837763	Identifier	until_addr		836917	0					
ANR	837764	Argument	until_expr		836917	2					
ANR	837765	Identifier	until_expr		836917	0					
ANR	837766	Argument	NULL		836917	3					
ANR	837767	Identifier	NULL		836917	0					
ANR	837768	Argument	true		836917	4					
ANR	837769	Identifier	true		836917	0					
ANR	837770	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	5432:4:157631:157657	836917	2	True				
ANR	837771	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		836917	0					
ANR	837772	Callee	r_core_cmd0		836917	0					
ANR	837773	Identifier	r_core_cmd0		836917	0					
ANR	837774	ArgumentList	core		836917	1					
ANR	837775	Argument	core		836917	0					
ANR	837776	Identifier	core		836917	0					
ANR	837777	Argument	""".ar*"""		836917	1					
ANR	837778	PrimaryExpression	""".ar*"""		836917	0					
ANR	837779	ElseStatement	else		836917	0					
ANR	837780	IfStatement	if ( ! input [ 2 ] || input [ 2 ] == ' ' )		836917	0					
ANR	837781	Condition	! input [ 2 ] || input [ 2 ] == ' '	5433:14:157673:157700	836917	0	True				
ANR	837782	OrExpression	! input [ 2 ] || input [ 2 ] == ' '		836917	0		||			
ANR	837783	UnaryOperationExpression	! input [ 2 ]		836917	0					
ANR	837784	UnaryOperator	!		836917	0					
ANR	837785	ArrayIndexing	input [ 2 ]		836917	1					
ANR	837786	Identifier	input		836917	0					
ANR	837787	PrimaryExpression	2		836917	1					
ANR	837788	EqualityExpression	input [ 2 ] == ' '		836917	1		==			
ANR	837789	ArrayIndexing	input [ 2 ]		836917	0					
ANR	837790	Identifier	input		836917	0					
ANR	837791	PrimaryExpression	2		836917	1					
ANR	837792	PrimaryExpression	' '		836917	1					
ANR	837793	CompoundStatement		148:44:4164:4164	836917	1					
ANR	837794	ExpressionStatement	"op = r_core_anal_op ( core , r_reg_getv ( core -> anal -> reg , r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"	5435:4:157743:157897	836917	0	True				
ANR	837795	AssignmentExpression	"op = r_core_anal_op ( core , r_reg_getv ( core -> anal -> reg , r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		836917	0		=			
ANR	837796	Identifier	op		836917	0					
ANR	837797	CallExpression	"r_core_anal_op ( core , r_reg_getv ( core -> anal -> reg , r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		836917	1					
ANR	837798	Callee	r_core_anal_op		836917	0					
ANR	837799	Identifier	r_core_anal_op		836917	0					
ANR	837800	ArgumentList	core		836917	1					
ANR	837801	Argument	core		836917	0					
ANR	837802	Identifier	core		836917	0					
ANR	837803	Argument	"r_reg_getv ( core -> anal -> reg , r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) )"		836917	1					
ANR	837804	CallExpression	"r_reg_getv ( core -> anal -> reg , r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) )"		836917	0					
ANR	837805	Callee	r_reg_getv		836917	0					
ANR	837806	Identifier	r_reg_getv		836917	0					
ANR	837807	ArgumentList	core -> anal -> reg		836917	1					
ANR	837808	Argument	core -> anal -> reg		836917	0					
ANR	837809	PtrMemberAccess	core -> anal -> reg		836917	0					
ANR	837810	PtrMemberAccess	core -> anal		836917	0					
ANR	837811	Identifier	core		836917	0					
ANR	837812	Identifier	anal		836917	1					
ANR	837813	Identifier	reg		836917	1					
ANR	837814	Argument	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		836917	1					
ANR	837815	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		836917	0					
ANR	837816	Callee	r_reg_get_name		836917	0					
ANR	837817	Identifier	r_reg_get_name		836917	0					
ANR	837818	ArgumentList	core -> anal -> reg		836917	1					
ANR	837819	Argument	core -> anal -> reg		836917	0					
ANR	837820	PtrMemberAccess	core -> anal -> reg		836917	0					
ANR	837821	PtrMemberAccess	core -> anal		836917	0					
ANR	837822	Identifier	core		836917	0					
ANR	837823	Identifier	anal		836917	1					
ANR	837824	Identifier	reg		836917	1					
ANR	837825	Argument	R_REG_NAME_PC		836917	1					
ANR	837826	Identifier	R_REG_NAME_PC		836917	0					
ANR	837827	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT		836917	2					
ANR	837828	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT		836917	0		|			
ANR	837829	Identifier	R_ANAL_OP_MASK_BASIC		836917	0					
ANR	837830	Identifier	R_ANAL_OP_MASK_HINT		836917	1					
ANR	837831	IfStatement	if ( op && op -> type == R_ANAL_OP_TYPE_CALL )		836917	1					
ANR	837832	Condition	op && op -> type == R_ANAL_OP_TYPE_CALL	5437:8:157907:157943	836917	0	True				
ANR	837833	AndExpression	op && op -> type == R_ANAL_OP_TYPE_CALL		836917	0		&&			
ANR	837834	Identifier	op		836917	0					
ANR	837835	EqualityExpression	op -> type == R_ANAL_OP_TYPE_CALL		836917	1		==			
ANR	837836	PtrMemberAccess	op -> type		836917	0					
ANR	837837	Identifier	op		836917	0					
ANR	837838	Identifier	type		836917	1					
ANR	837839	Identifier	R_ANAL_OP_TYPE_CALL		836917	1					
ANR	837840	CompoundStatement		152:47:4407:4407	836917	1					
ANR	837841	ExpressionStatement	until_addr = op -> addr + op -> size	5438:5:157953:157985	836917	0	True				
ANR	837842	AssignmentExpression	until_addr = op -> addr + op -> size		836917	0		=			
ANR	837843	Identifier	until_addr		836917	0					
ANR	837844	AdditiveExpression	op -> addr + op -> size		836917	1		+			
ANR	837845	PtrMemberAccess	op -> addr		836917	0					
ANR	837846	Identifier	op		836917	0					
ANR	837847	Identifier	addr		836917	1					
ANR	837848	PtrMemberAccess	op -> size		836917	1					
ANR	837849	Identifier	op		836917	0					
ANR	837850	Identifier	size		836917	1					
ANR	837851	ExpressionStatement	"r_core_esil_step ( core , until_addr , until_expr , NULL , false )"	5440:4:157997:158057	836917	2	True				
ANR	837852	CallExpression	"r_core_esil_step ( core , until_addr , until_expr , NULL , false )"		836917	0					
ANR	837853	Callee	r_core_esil_step		836917	0					
ANR	837854	Identifier	r_core_esil_step		836917	0					
ANR	837855	ArgumentList	core		836917	1					
ANR	837856	Argument	core		836917	0					
ANR	837857	Identifier	core		836917	0					
ANR	837858	Argument	until_addr		836917	1					
ANR	837859	Identifier	until_addr		836917	0					
ANR	837860	Argument	until_expr		836917	2					
ANR	837861	Identifier	until_expr		836917	0					
ANR	837862	Argument	NULL		836917	3					
ANR	837863	Identifier	NULL		836917	0					
ANR	837864	Argument	false		836917	4					
ANR	837865	Identifier	false		836917	0					
ANR	837866	ExpressionStatement	r_anal_op_free ( op )	5441:4:158063:158082	836917	3	True				
ANR	837867	CallExpression	r_anal_op_free ( op )		836917	0					
ANR	837868	Callee	r_anal_op_free		836917	0					
ANR	837869	Identifier	r_anal_op_free		836917	0					
ANR	837870	ArgumentList	op		836917	1					
ANR	837871	Argument	op		836917	0					
ANR	837872	Identifier	op		836917	0					
ANR	837873	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	5442:4:158088:158114	836917	4	True				
ANR	837874	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		836917	0					
ANR	837875	Callee	r_core_cmd0		836917	0					
ANR	837876	Identifier	r_core_cmd0		836917	0					
ANR	837877	ArgumentList	core		836917	1					
ANR	837878	Argument	core		836917	0					
ANR	837879	Identifier	core		836917	0					
ANR	837880	Argument	""".ar*"""		836917	1					
ANR	837881	PrimaryExpression	""".ar*"""		836917	0					
ANR	837882	ElseStatement	else		836917	0					
ANR	837883	CompoundStatement		158:10:4587:4587	836917	0					
ANR	837884	ExpressionStatement	"eprintf ( ""Usage: aesou [addr] # step over until given address\\n"" )"	5444:4:158132:158197	836917	0	True				
ANR	837885	CallExpression	"eprintf ( ""Usage: aesou [addr] # step over until given address\\n"" )"		836917	0					
ANR	837886	Callee	eprintf		836917	0					
ANR	837887	Identifier	eprintf		836917	0					
ANR	837888	ArgumentList	"""Usage: aesou [addr] # step over until given address\\n"""		836917	1					
ANR	837889	Argument	"""Usage: aesou [addr] # step over until given address\\n"""		836917	0					
ANR	837890	PrimaryExpression	"""Usage: aesou [addr] # step over until given address\\n"""		836917	0					
ANR	837891	BreakStatement	break ;	5446:3:158207:158212	836917	23	True				
ANR	837892	Label	case 'p' :	5447:2:158216:158224	836917	24	True				
ANR	837893	ExpressionStatement	"n = strchr ( input , ' ' )"	5448:3:158238:158261	836917	25	True				
ANR	837894	AssignmentExpression	"n = strchr ( input , ' ' )"		836917	0		=			
ANR	837895	Identifier	n		836917	0					
ANR	837896	CallExpression	"strchr ( input , ' ' )"		836917	1					
ANR	837897	Callee	strchr		836917	0					
ANR	837898	Identifier	strchr		836917	0					
ANR	837899	ArgumentList	input		836917	1					
ANR	837900	Argument	input		836917	0					
ANR	837901	Identifier	input		836917	0					
ANR	837902	Argument	' '		836917	1					
ANR	837903	PrimaryExpression	' '		836917	0					
ANR	837904	ExpressionStatement	"n1 = n ? strchr ( n + 1 , ' ' ) : NULL"	5449:3:158266:158301	836917	26	True				
ANR	837905	AssignmentExpression	"n1 = n ? strchr ( n + 1 , ' ' ) : NULL"		836917	0		=			
ANR	837906	Identifier	n1		836917	0					
ANR	837907	ConditionalExpression	"n ? strchr ( n + 1 , ' ' ) : NULL"		836917	1					
ANR	837908	Condition	n		836917	0					
ANR	837909	Identifier	n		836917	0					
ANR	837910	CallExpression	"strchr ( n + 1 , ' ' )"		836917	1					
ANR	837911	Callee	strchr		836917	0					
ANR	837912	Identifier	strchr		836917	0					
ANR	837913	ArgumentList	n + 1		836917	1					
ANR	837914	Argument	n + 1		836917	0					
ANR	837915	AdditiveExpression	n + 1		836917	0		+			
ANR	837916	Identifier	n		836917	0					
ANR	837917	PrimaryExpression	1		836917	1					
ANR	837918	Argument	' '		836917	1					
ANR	837919	PrimaryExpression	' '		836917	0					
ANR	837920	Identifier	NULL		836917	2					
ANR	837921	IfStatement	if ( ( ! n || ! n1 ) || ( ! ( n + 1 ) || ! ( n1 + 1 ) ) )		836917	27					
ANR	837922	Condition	( ! n || ! n1 ) || ( ! ( n + 1 ) || ! ( n1 + 1 ) )	5450:7:158310:158347	836917	0	True				
ANR	837923	OrExpression	( ! n || ! n1 ) || ( ! ( n + 1 ) || ! ( n1 + 1 ) )		836917	0		||			
ANR	837924	OrExpression	! n || ! n1		836917	0		||			
ANR	837925	UnaryOperationExpression	! n		836917	0					
ANR	837926	UnaryOperator	!		836917	0					
ANR	837927	Identifier	n		836917	1					
ANR	837928	UnaryOperationExpression	! n1		836917	1					
ANR	837929	UnaryOperator	!		836917	0					
ANR	837930	Identifier	n1		836917	1					
ANR	837931	OrExpression	! ( n + 1 ) || ! ( n1 + 1 )		836917	1		||			
ANR	837932	UnaryOperationExpression	! ( n + 1 )		836917	0					
ANR	837933	UnaryOperator	!		836917	0					
ANR	837934	AdditiveExpression	n + 1		836917	1		+			
ANR	837935	Identifier	n		836917	0					
ANR	837936	PrimaryExpression	1		836917	1					
ANR	837937	UnaryOperationExpression	! ( n1 + 1 )		836917	1					
ANR	837938	UnaryOperator	!		836917	0					
ANR	837939	AdditiveExpression	n1 + 1		836917	1		+			
ANR	837940	Identifier	n1		836917	0					
ANR	837941	PrimaryExpression	1		836917	1					
ANR	837942	CompoundStatement		165:47:4811:4811	836917	1					
ANR	837943	ExpressionStatement	"eprintf ( ""aesp [offset] [num]\\n"" )"	5451:4:158356:158389	836917	0	True				
ANR	837944	CallExpression	"eprintf ( ""aesp [offset] [num]\\n"" )"		836917	0					
ANR	837945	Callee	eprintf		836917	0					
ANR	837946	Identifier	eprintf		836917	0					
ANR	837947	ArgumentList	"""aesp [offset] [num]\\n"""		836917	1					
ANR	837948	Argument	"""aesp [offset] [num]\\n"""		836917	0					
ANR	837949	PrimaryExpression	"""aesp [offset] [num]\\n"""		836917	0					
ANR	837950	BreakStatement	break ;	5452:4:158395:158400	836917	1	True				
ANR	837951	ExpressionStatement	"adr = r_num_math ( core -> num , n + 1 )"	5454:3:158410:158445	836917	28	True				
ANR	837952	AssignmentExpression	"adr = r_num_math ( core -> num , n + 1 )"		836917	0		=			
ANR	837953	Identifier	adr		836917	0					
ANR	837954	CallExpression	"r_num_math ( core -> num , n + 1 )"		836917	1					
ANR	837955	Callee	r_num_math		836917	0					
ANR	837956	Identifier	r_num_math		836917	0					
ANR	837957	ArgumentList	core -> num		836917	1					
ANR	837958	Argument	core -> num		836917	0					
ANR	837959	PtrMemberAccess	core -> num		836917	0					
ANR	837960	Identifier	core		836917	0					
ANR	837961	Identifier	num		836917	1					
ANR	837962	Argument	n + 1		836917	1					
ANR	837963	AdditiveExpression	n + 1		836917	0		+			
ANR	837964	Identifier	n		836917	0					
ANR	837965	PrimaryExpression	1		836917	1					
ANR	837966	ExpressionStatement	"off = r_num_math ( core -> num , n1 + 1 )"	5455:3:158450:158486	836917	29	True				
ANR	837967	AssignmentExpression	"off = r_num_math ( core -> num , n1 + 1 )"		836917	0		=			
ANR	837968	Identifier	off		836917	0					
ANR	837969	CallExpression	"r_num_math ( core -> num , n1 + 1 )"		836917	1					
ANR	837970	Callee	r_num_math		836917	0					
ANR	837971	Identifier	r_num_math		836917	0					
ANR	837972	ArgumentList	core -> num		836917	1					
ANR	837973	Argument	core -> num		836917	0					
ANR	837974	PtrMemberAccess	core -> num		836917	0					
ANR	837975	Identifier	core		836917	0					
ANR	837976	Identifier	num		836917	1					
ANR	837977	Argument	n1 + 1		836917	1					
ANR	837978	AdditiveExpression	n1 + 1		836917	0		+			
ANR	837979	Identifier	n1		836917	0					
ANR	837980	PrimaryExpression	1		836917	1					
ANR	837981	ExpressionStatement	"cmd_aespc ( core , adr , off )"	5456:3:158491:158517	836917	30	True				
ANR	837982	CallExpression	"cmd_aespc ( core , adr , off )"		836917	0					
ANR	837983	Callee	cmd_aespc		836917	0					
ANR	837984	Identifier	cmd_aespc		836917	0					
ANR	837985	ArgumentList	core		836917	1					
ANR	837986	Argument	core		836917	0					
ANR	837987	Identifier	core		836917	0					
ANR	837988	Argument	adr		836917	1					
ANR	837989	Identifier	adr		836917	0					
ANR	837990	Argument	off		836917	2					
ANR	837991	Identifier	off		836917	0					
ANR	837992	BreakStatement	break ;	5457:3:158522:158527	836917	31	True				
ANR	837993	Label	case ' ' :	5458:2:158531:158539	836917	32	True				
ANR	837994	ExpressionStatement	"n = strchr ( input , ' ' )"	5459:3:158544:158567	836917	33	True				
ANR	837995	AssignmentExpression	"n = strchr ( input , ' ' )"		836917	0		=			
ANR	837996	Identifier	n		836917	0					
ANR	837997	CallExpression	"strchr ( input , ' ' )"		836917	1					
ANR	837998	Callee	strchr		836917	0					
ANR	837999	Identifier	strchr		836917	0					
ANR	838000	ArgumentList	input		836917	1					
ANR	838001	Argument	input		836917	0					
ANR	838002	Identifier	input		836917	0					
ANR	838003	Argument	' '		836917	1					
ANR	838004	PrimaryExpression	' '		836917	0					
ANR	838005	IfStatement	if ( ! ( n + 1 ) )		836917	34					
ANR	838006	Condition	! ( n + 1 )	5460:7:158576:158583	836917	0	True				
ANR	838007	UnaryOperationExpression	! ( n + 1 )		836917	0					
ANR	838008	UnaryOperator	!		836917	0					
ANR	838009	AdditiveExpression	n + 1		836917	1		+			
ANR	838010	Identifier	n		836917	0					
ANR	838011	PrimaryExpression	1		836917	1					
ANR	838012	CompoundStatement		175:17:5047:5047	836917	1					
ANR	838013	ExpressionStatement	"r_core_esil_step ( core , until_addr , until_expr , NULL , false )"	5461:4:158592:158652	836917	0	True				
ANR	838014	CallExpression	"r_core_esil_step ( core , until_addr , until_expr , NULL , false )"		836917	0					
ANR	838015	Callee	r_core_esil_step		836917	0					
ANR	838016	Identifier	r_core_esil_step		836917	0					
ANR	838017	ArgumentList	core		836917	1					
ANR	838018	Argument	core		836917	0					
ANR	838019	Identifier	core		836917	0					
ANR	838020	Argument	until_addr		836917	1					
ANR	838021	Identifier	until_addr		836917	0					
ANR	838022	Argument	until_expr		836917	2					
ANR	838023	Identifier	until_expr		836917	0					
ANR	838024	Argument	NULL		836917	3					
ANR	838025	Identifier	NULL		836917	0					
ANR	838026	Argument	false		836917	4					
ANR	838027	Identifier	false		836917	0					
ANR	838028	BreakStatement	break ;	5462:4:158658:158663	836917	1	True				
ANR	838029	ExpressionStatement	"off = r_num_math ( core -> num , n + 1 )"	5464:3:158673:158708	836917	35	True				
ANR	838030	AssignmentExpression	"off = r_num_math ( core -> num , n + 1 )"		836917	0		=			
ANR	838031	Identifier	off		836917	0					
ANR	838032	CallExpression	"r_num_math ( core -> num , n + 1 )"		836917	1					
ANR	838033	Callee	r_num_math		836917	0					
ANR	838034	Identifier	r_num_math		836917	0					
ANR	838035	ArgumentList	core -> num		836917	1					
ANR	838036	Argument	core -> num		836917	0					
ANR	838037	PtrMemberAccess	core -> num		836917	0					
ANR	838038	Identifier	core		836917	0					
ANR	838039	Identifier	num		836917	1					
ANR	838040	Argument	n + 1		836917	1					
ANR	838041	AdditiveExpression	n + 1		836917	0		+			
ANR	838042	Identifier	n		836917	0					
ANR	838043	PrimaryExpression	1		836917	1					
ANR	838044	ExpressionStatement	"cmd_aespc ( core , - 1 , off )"	5465:3:158713:158738	836917	36	True				
ANR	838045	CallExpression	"cmd_aespc ( core , - 1 , off )"		836917	0					
ANR	838046	Callee	cmd_aespc		836917	0					
ANR	838047	Identifier	cmd_aespc		836917	0					
ANR	838048	ArgumentList	core		836917	1					
ANR	838049	Argument	core		836917	0					
ANR	838050	Identifier	core		836917	0					
ANR	838051	Argument	- 1		836917	1					
ANR	838052	UnaryOperationExpression	- 1		836917	0					
ANR	838053	UnaryOperator	-		836917	0					
ANR	838054	PrimaryExpression	1		836917	1					
ANR	838055	Argument	off		836917	2					
ANR	838056	Identifier	off		836917	0					
ANR	838057	BreakStatement	break ;	5466:3:158743:158748	836917	37	True				
ANR	838058	Label	default :	5467:2:158752:158759	836917	38	True				
ANR	838059	Identifier	default		836917	0					
ANR	838060	ExpressionStatement	"r_core_esil_step ( core , until_addr , until_expr , NULL , false )"	5468:3:158764:158824	836917	39	True				
ANR	838061	CallExpression	"r_core_esil_step ( core , until_addr , until_expr , NULL , false )"		836917	0					
ANR	838062	Callee	r_core_esil_step		836917	0					
ANR	838063	Identifier	r_core_esil_step		836917	0					
ANR	838064	ArgumentList	core		836917	1					
ANR	838065	Argument	core		836917	0					
ANR	838066	Identifier	core		836917	0					
ANR	838067	Argument	until_addr		836917	1					
ANR	838068	Identifier	until_addr		836917	0					
ANR	838069	Argument	until_expr		836917	2					
ANR	838070	Identifier	until_expr		836917	0					
ANR	838071	Argument	NULL		836917	3					
ANR	838072	Identifier	NULL		836917	0					
ANR	838073	Argument	false		836917	4					
ANR	838074	Identifier	false		836917	0					
ANR	838075	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	5469:3:158829:158855	836917	40	True				
ANR	838076	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		836917	0					
ANR	838077	Callee	r_core_cmd0		836917	0					
ANR	838078	Identifier	r_core_cmd0		836917	0					
ANR	838079	ArgumentList	core		836917	1					
ANR	838080	Argument	core		836917	0					
ANR	838081	Identifier	core		836917	0					
ANR	838082	Argument	""".ar*"""		836917	1					
ANR	838083	PrimaryExpression	""".ar*"""		836917	0					
ANR	838084	BreakStatement	break ;	5470:3:158860:158865	836917	41	True				
ANR	838085	BreakStatement	break ;	5472:2:158873:158878	836917	19	True				
ANR	838086	Label	case 'C' :	5473:1:158881:158889	836917	20	True				
ANR	838087	IfStatement	if ( input [ 1 ] == '?' )		836917	21					
ANR	838088	Condition	input [ 1 ] == '?'	5474:6:158906:158920	836917	0	True				
ANR	838089	EqualityExpression	input [ 1 ] == '?'		836917	0		==			
ANR	838090	ArrayIndexing	input [ 1 ]		836917	0					
ANR	838091	Identifier	input		836917	0					
ANR	838092	PrimaryExpression	1		836917	1					
ANR	838093	PrimaryExpression	'?'		836917	1					
ANR	838094	CompoundStatement		189:23:5384:5384	836917	1					
ANR	838095	ExpressionStatement	"r_core_cmd_help ( core , help_msg_aeC )"	5475:3:158938:158974	836917	0	True				
ANR	838096	CallExpression	"r_core_cmd_help ( core , help_msg_aeC )"		836917	0					
ANR	838097	Callee	r_core_cmd_help		836917	0					
ANR	838098	Identifier	r_core_cmd_help		836917	0					
ANR	838099	ArgumentList	core		836917	1					
ANR	838100	Argument	core		836917	0					
ANR	838101	Identifier	core		836917	0					
ANR	838102	Argument	help_msg_aeC		836917	1					
ANR	838103	Identifier	help_msg_aeC		836917	0					
ANR	838104	ElseStatement	else		836917	0					
ANR	838105	CompoundStatement		191:9:5446:5446	836917	0					
ANR	838106	ExpressionStatement	"__core_anal_appcall ( core , r_str_trim_ro ( input + 1 ) )"	5477:3:158990:159043	836917	0	True				
ANR	838107	CallExpression	"__core_anal_appcall ( core , r_str_trim_ro ( input + 1 ) )"		836917	0					
ANR	838108	Callee	__core_anal_appcall		836917	0					
ANR	838109	Identifier	__core_anal_appcall		836917	0					
ANR	838110	ArgumentList	core		836917	1					
ANR	838111	Argument	core		836917	0					
ANR	838112	Identifier	core		836917	0					
ANR	838113	Argument	r_str_trim_ro ( input + 1 )		836917	1					
ANR	838114	CallExpression	r_str_trim_ro ( input + 1 )		836917	0					
ANR	838115	Callee	r_str_trim_ro		836917	0					
ANR	838116	Identifier	r_str_trim_ro		836917	0					
ANR	838117	ArgumentList	input + 1		836917	1					
ANR	838118	Argument	input + 1		836917	0					
ANR	838119	AdditiveExpression	input + 1		836917	0		+			
ANR	838120	Identifier	input		836917	0					
ANR	838121	PrimaryExpression	1		836917	1					
ANR	838122	BreakStatement	break ;	5479:2:159051:159056	836917	22	True				
ANR	838123	Label	case 'c' :	5480:1:159059:159067	836917	23	True				
ANR	838124	IfStatement	if ( input [ 1 ] == '?' )		836917	24					
ANR	838125	Condition	input [ 1 ] == '?'	5481:6:159084:159098	836917	0	True				
ANR	838126	EqualityExpression	input [ 1 ] == '?'		836917	0		==			
ANR	838127	ArrayIndexing	input [ 1 ]		836917	0					
ANR	838128	Identifier	input		836917	0					
ANR	838129	PrimaryExpression	1		836917	1					
ANR	838130	PrimaryExpression	'?'		836917	1					
ANR	838131	CompoundStatement		196:23:5562:5562	836917	1					
ANR	838132	ExpressionStatement	"r_core_cmd_help ( core , help_msg_aec )"	5482:3:159116:159152	836917	0	True				
ANR	838133	CallExpression	"r_core_cmd_help ( core , help_msg_aec )"		836917	0					
ANR	838134	Callee	r_core_cmd_help		836917	0					
ANR	838135	Identifier	r_core_cmd_help		836917	0					
ANR	838136	ArgumentList	core		836917	1					
ANR	838137	Argument	core		836917	0					
ANR	838138	Identifier	core		836917	0					
ANR	838139	Argument	help_msg_aec		836917	1					
ANR	838140	Identifier	help_msg_aec		836917	0					
ANR	838141	ElseStatement	else		836917	0					
ANR	838142	IfStatement	if ( input [ 1 ] == 's' )		836917	0					
ANR	838143	Condition	input [ 1 ] == 's'	5483:13:159167:159181	836917	0	True				
ANR	838144	EqualityExpression	input [ 1 ] == 's'		836917	0		==			
ANR	838145	ArrayIndexing	input [ 1 ]		836917	0					
ANR	838146	Identifier	input		836917	0					
ANR	838147	PrimaryExpression	1		836917	1					
ANR	838148	PrimaryExpression	's'		836917	1					
ANR	838149	CompoundStatement		199:3:5660:5724	836917	1					
ANR	838150	IdentifierDeclStatement	"const char * pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	5484:3:159199:159263	836917	0	True				
ANR	838151	IdentifierDecl	"* pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		836917	0					
ANR	838152	IdentifierDeclType	const char *		836917	0					
ANR	838153	Identifier	pc		836917	1					
ANR	838154	AssignmentExpression	"* pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		836917	2		=			
ANR	838155	Identifier	pc		836917	0					
ANR	838156	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		836917	1					
ANR	838157	Callee	r_reg_get_name		836917	0					
ANR	838158	Identifier	r_reg_get_name		836917	0					
ANR	838159	ArgumentList	core -> anal -> reg		836917	1					
ANR	838160	Argument	core -> anal -> reg		836917	0					
ANR	838161	PtrMemberAccess	core -> anal -> reg		836917	0					
ANR	838162	PtrMemberAccess	core -> anal		836917	0					
ANR	838163	Identifier	core		836917	0					
ANR	838164	Identifier	anal		836917	1					
ANR	838165	Identifier	reg		836917	1					
ANR	838166	Argument	R_REG_NAME_PC		836917	1					
ANR	838167	Identifier	R_REG_NAME_PC		836917	0					
ANR	838168	ForStatement	for ( ; ; )		836917	1					
ANR	838169	CompoundStatement		200:12:5738:5738	836917	0					
ANR	838170	IfStatement	"if ( ! r_core_esil_step ( core , UT64_MAX , NULL , NULL , false ) )"		836917	0					
ANR	838171	Condition	"! r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"	5486:8:159287:159339	836917	0	True				
ANR	838172	UnaryOperationExpression	"! r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"		836917	0					
ANR	838173	UnaryOperator	!		836917	0					
ANR	838174	CallExpression	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"		836917	1					
ANR	838175	Callee	r_core_esil_step		836917	0					
ANR	838176	Identifier	r_core_esil_step		836917	0					
ANR	838177	ArgumentList	core		836917	1					
ANR	838178	Argument	core		836917	0					
ANR	838179	Identifier	core		836917	0					
ANR	838180	Argument	UT64_MAX		836917	1					
ANR	838181	Identifier	UT64_MAX		836917	0					
ANR	838182	Argument	NULL		836917	2					
ANR	838183	Identifier	NULL		836917	0					
ANR	838184	Argument	NULL		836917	3					
ANR	838185	Identifier	NULL		836917	0					
ANR	838186	Argument	false		836917	4					
ANR	838187	Identifier	false		836917	0					
ANR	838188	CompoundStatement		201:63:5803:5803	836917	1					
ANR	838189	BreakStatement	break ;	5487:5:159349:159354	836917	0	True				
ANR	838190	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	5489:4:159366:159392	836917	1	True				
ANR	838191	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		836917	0					
ANR	838192	Callee	r_core_cmd0		836917	0					
ANR	838193	Identifier	r_core_cmd0		836917	0					
ANR	838194	ArgumentList	core		836917	1					
ANR	838195	Argument	core		836917	0					
ANR	838196	Identifier	core		836917	0					
ANR	838197	Argument	""".ar*"""		836917	1					
ANR	838198	PrimaryExpression	""".ar*"""		836917	0					
ANR	838199	ExpressionStatement	"addr = r_num_get ( core -> num , pc )"	5490:4:159398:159430	836917	2	True				
ANR	838200	AssignmentExpression	"addr = r_num_get ( core -> num , pc )"		836917	0		=			
ANR	838201	Identifier	addr		836917	0					
ANR	838202	CallExpression	"r_num_get ( core -> num , pc )"		836917	1					
ANR	838203	Callee	r_num_get		836917	0					
ANR	838204	Identifier	r_num_get		836917	0					
ANR	838205	ArgumentList	core -> num		836917	1					
ANR	838206	Argument	core -> num		836917	0					
ANR	838207	PtrMemberAccess	core -> num		836917	0					
ANR	838208	Identifier	core		836917	0					
ANR	838209	Identifier	num		836917	1					
ANR	838210	Argument	pc		836917	1					
ANR	838211	Identifier	pc		836917	0					
ANR	838212	ExpressionStatement	"op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"	5491:4:159436:159512	836917	3	True				
ANR	838213	AssignmentExpression	"op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		836917	0		=			
ANR	838214	Identifier	op		836917	0					
ANR	838215	CallExpression	"r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		836917	1					
ANR	838216	Callee	r_core_anal_op		836917	0					
ANR	838217	Identifier	r_core_anal_op		836917	0					
ANR	838218	ArgumentList	core		836917	1					
ANR	838219	Argument	core		836917	0					
ANR	838220	Identifier	core		836917	0					
ANR	838221	Argument	addr		836917	1					
ANR	838222	Identifier	addr		836917	0					
ANR	838223	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT		836917	2					
ANR	838224	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT		836917	0		|			
ANR	838225	Identifier	R_ANAL_OP_MASK_BASIC		836917	0					
ANR	838226	Identifier	R_ANAL_OP_MASK_HINT		836917	1					
ANR	838227	IfStatement	if ( ! op )		836917	4					
ANR	838228	Condition	! op	5492:8:159522:159524	836917	0	True				
ANR	838229	UnaryOperationExpression	! op		836917	0					
ANR	838230	UnaryOperator	!		836917	0					
ANR	838231	Identifier	op		836917	1					
ANR	838232	CompoundStatement		207:13:5988:5988	836917	1					
ANR	838233	BreakStatement	break ;	5493:5:159534:159539	836917	0	True				
ANR	838234	IfStatement	if ( op -> type == R_ANAL_OP_TYPE_SWI )		836917	5					
ANR	838235	Condition	op -> type == R_ANAL_OP_TYPE_SWI	5495:8:159555:159584	836917	0	True				
ANR	838236	EqualityExpression	op -> type == R_ANAL_OP_TYPE_SWI		836917	0		==			
ANR	838237	PtrMemberAccess	op -> type		836917	0					
ANR	838238	Identifier	op		836917	0					
ANR	838239	Identifier	type		836917	1					
ANR	838240	Identifier	R_ANAL_OP_TYPE_SWI		836917	1					
ANR	838241	CompoundStatement		210:40:6048:6048	836917	1					
ANR	838242	Statement	eprintf	5496:5:159594:159600	836917	0	True				
ANR	838243	Statement	(	5496:13:159602:159602	836917	1	True				
ANR	838244	Statement	"""syscall at 0x%08"""	5496:14:159603:159620	836917	2	True				
ANR	838245	Statement	PFMT64x	5496:33:159622:159628	836917	3	True				
ANR	838246	Statement	"""\\n"""	5496:41:159630:159633	836917	4	True				
ANR	838247	Statement	","	5496:45:159634:159634	836917	5	True				
ANR	838248	Statement	addr	5496:47:159636:159639	836917	6	True				
ANR	838249	Statement	)	5496:51:159640:159640	836917	7	True				
ANR	838250	ExpressionStatement		5496:52:159641:159641	836917	8	True				
ANR	838251	BreakStatement	break ;	5497:5:159648:159653	836917	9	True				
ANR	838252	ElseStatement	else		836917	0					
ANR	838253	IfStatement	if ( op -> type == R_ANAL_OP_TYPE_TRAP )		836917	0					
ANR	838254	Condition	op -> type == R_ANAL_OP_TYPE_TRAP	5498:15:159670:159700	836917	0	True				
ANR	838255	EqualityExpression	op -> type == R_ANAL_OP_TYPE_TRAP		836917	0		==			
ANR	838256	PtrMemberAccess	op -> type		836917	0					
ANR	838257	Identifier	op		836917	0					
ANR	838258	Identifier	type		836917	1					
ANR	838259	Identifier	R_ANAL_OP_TYPE_TRAP		836917	1					
ANR	838260	CompoundStatement		213:48:6164:6164	836917	1					
ANR	838261	Statement	eprintf	5499:5:159710:159716	836917	0	True				
ANR	838262	Statement	(	5499:13:159718:159718	836917	1	True				
ANR	838263	Statement	"""trap at 0x%08"""	5499:14:159719:159733	836917	2	True				
ANR	838264	Statement	PFMT64x	5499:30:159735:159741	836917	3	True				
ANR	838265	Statement	"""\\n"""	5499:38:159743:159746	836917	4	True				
ANR	838266	Statement	","	5499:42:159747:159747	836917	5	True				
ANR	838267	Statement	addr	5499:44:159749:159752	836917	6	True				
ANR	838268	Statement	)	5499:48:159753:159753	836917	7	True				
ANR	838269	ExpressionStatement		5499:49:159754:159754	836917	8	True				
ANR	838270	BreakStatement	break ;	5500:5:159761:159766	836917	9	True				
ANR	838271	ExpressionStatement	r_anal_op_free ( op )	5502:4:159778:159797	836917	6	True				
ANR	838272	CallExpression	r_anal_op_free ( op )		836917	0					
ANR	838273	Callee	r_anal_op_free		836917	0					
ANR	838274	Identifier	r_anal_op_free		836917	0					
ANR	838275	ArgumentList	op		836917	1					
ANR	838276	Argument	op		836917	0					
ANR	838277	Identifier	op		836917	0					
ANR	838278	ExpressionStatement	op = NULL	5503:4:159803:159812	836917	7	True				
ANR	838279	AssignmentExpression	op = NULL		836917	0		=			
ANR	838280	Identifier	op		836917	0					
ANR	838281	Identifier	NULL		836917	1					
ANR	838282	IfStatement	if ( core -> anal -> esil -> trap || core -> anal -> esil -> trap_code )		836917	8					
ANR	838283	Condition	core -> anal -> esil -> trap || core -> anal -> esil -> trap_code	5504:8:159822:159874	836917	0	True				
ANR	838284	OrExpression	core -> anal -> esil -> trap || core -> anal -> esil -> trap_code		836917	0		||			
ANR	838285	PtrMemberAccess	core -> anal -> esil -> trap		836917	0					
ANR	838286	PtrMemberAccess	core -> anal -> esil		836917	0					
ANR	838287	PtrMemberAccess	core -> anal		836917	0					
ANR	838288	Identifier	core		836917	0					
ANR	838289	Identifier	anal		836917	1					
ANR	838290	Identifier	esil		836917	1					
ANR	838291	Identifier	trap		836917	1					
ANR	838292	PtrMemberAccess	core -> anal -> esil -> trap_code		836917	1					
ANR	838293	PtrMemberAccess	core -> anal -> esil		836917	0					
ANR	838294	PtrMemberAccess	core -> anal		836917	0					
ANR	838295	Identifier	core		836917	0					
ANR	838296	Identifier	anal		836917	1					
ANR	838297	Identifier	esil		836917	1					
ANR	838298	Identifier	trap_code		836917	1					
ANR	838299	CompoundStatement		219:63:6338:6338	836917	1					
ANR	838300	BreakStatement	break ;	5505:5:159884:159889	836917	0	True				
ANR	838301	IfStatement	if ( op )		836917	2					
ANR	838302	Condition	op	5508:7:159909:159910	836917	0	True				
ANR	838303	Identifier	op		836917	0					
ANR	838304	CompoundStatement		223:11:6374:6374	836917	1					
ANR	838305	ExpressionStatement	r_anal_op_free ( op )	5509:4:159919:159938	836917	0	True				
ANR	838306	CallExpression	r_anal_op_free ( op )		836917	0					
ANR	838307	Callee	r_anal_op_free		836917	0					
ANR	838308	Identifier	r_anal_op_free		836917	0					
ANR	838309	ArgumentList	op		836917	1					
ANR	838310	Argument	op		836917	0					
ANR	838311	Identifier	op		836917	0					
ANR	838312	ExpressionStatement	op = NULL	5510:4:159944:159953	836917	1	True				
ANR	838313	AssignmentExpression	op = NULL		836917	0		=			
ANR	838314	Identifier	op		836917	0					
ANR	838315	Identifier	NULL		836917	1					
ANR	838316	ElseStatement	else		836917	0					
ANR	838317	IfStatement	if ( input [ 1 ] == 'c' )		836917	0					
ANR	838318	Condition	input [ 1 ] == 'c'	5512:13:159973:159987	836917	0	True				
ANR	838319	EqualityExpression	input [ 1 ] == 'c'		836917	0		==			
ANR	838320	ArrayIndexing	input [ 1 ]		836917	0					
ANR	838321	Identifier	input		836917	0					
ANR	838322	PrimaryExpression	1		836917	1					
ANR	838323	PrimaryExpression	'c'		836917	1					
ANR	838324	CompoundStatement		228:3:6466:6530	836917	1					
ANR	838325	IdentifierDeclStatement	"const char * pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	5513:3:160005:160069	836917	0	True				
ANR	838326	IdentifierDecl	"* pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		836917	0					
ANR	838327	IdentifierDeclType	const char *		836917	0					
ANR	838328	Identifier	pc		836917	1					
ANR	838329	AssignmentExpression	"* pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		836917	2		=			
ANR	838330	Identifier	pc		836917	0					
ANR	838331	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		836917	1					
ANR	838332	Callee	r_reg_get_name		836917	0					
ANR	838333	Identifier	r_reg_get_name		836917	0					
ANR	838334	ArgumentList	core -> anal -> reg		836917	1					
ANR	838335	Argument	core -> anal -> reg		836917	0					
ANR	838336	PtrMemberAccess	core -> anal -> reg		836917	0					
ANR	838337	PtrMemberAccess	core -> anal		836917	0					
ANR	838338	Identifier	core		836917	0					
ANR	838339	Identifier	anal		836917	1					
ANR	838340	Identifier	reg		836917	1					
ANR	838341	Argument	R_REG_NAME_PC		836917	1					
ANR	838342	Identifier	R_REG_NAME_PC		836917	0					
ANR	838343	ForStatement	for ( ; ; )		836917	1					
ANR	838344	CompoundStatement		229:12:6544:6544	836917	0					
ANR	838345	IfStatement	"if ( ! r_core_esil_step ( core , UT64_MAX , NULL , NULL , false ) )"		836917	0					
ANR	838346	Condition	"! r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"	5515:8:160093:160145	836917	0	True				
ANR	838347	UnaryOperationExpression	"! r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"		836917	0					
ANR	838348	UnaryOperator	!		836917	0					
ANR	838349	CallExpression	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"		836917	1					
ANR	838350	Callee	r_core_esil_step		836917	0					
ANR	838351	Identifier	r_core_esil_step		836917	0					
ANR	838352	ArgumentList	core		836917	1					
ANR	838353	Argument	core		836917	0					
ANR	838354	Identifier	core		836917	0					
ANR	838355	Argument	UT64_MAX		836917	1					
ANR	838356	Identifier	UT64_MAX		836917	0					
ANR	838357	Argument	NULL		836917	2					
ANR	838358	Identifier	NULL		836917	0					
ANR	838359	Argument	NULL		836917	3					
ANR	838360	Identifier	NULL		836917	0					
ANR	838361	Argument	false		836917	4					
ANR	838362	Identifier	false		836917	0					
ANR	838363	CompoundStatement		230:63:6609:6609	836917	1					
ANR	838364	BreakStatement	break ;	5516:5:160155:160160	836917	0	True				
ANR	838365	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	5518:4:160172:160198	836917	1	True				
ANR	838366	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		836917	0					
ANR	838367	Callee	r_core_cmd0		836917	0					
ANR	838368	Identifier	r_core_cmd0		836917	0					
ANR	838369	ArgumentList	core		836917	1					
ANR	838370	Argument	core		836917	0					
ANR	838371	Identifier	core		836917	0					
ANR	838372	Argument	""".ar*"""		836917	1					
ANR	838373	PrimaryExpression	""".ar*"""		836917	0					
ANR	838374	ExpressionStatement	"addr = r_num_get ( core -> num , pc )"	5519:4:160204:160236	836917	2	True				
ANR	838375	AssignmentExpression	"addr = r_num_get ( core -> num , pc )"		836917	0		=			
ANR	838376	Identifier	addr		836917	0					
ANR	838377	CallExpression	"r_num_get ( core -> num , pc )"		836917	1					
ANR	838378	Callee	r_num_get		836917	0					
ANR	838379	Identifier	r_num_get		836917	0					
ANR	838380	ArgumentList	core -> num		836917	1					
ANR	838381	Argument	core -> num		836917	0					
ANR	838382	PtrMemberAccess	core -> num		836917	0					
ANR	838383	Identifier	core		836917	0					
ANR	838384	Identifier	num		836917	1					
ANR	838385	Argument	pc		836917	1					
ANR	838386	Identifier	pc		836917	0					
ANR	838387	ExpressionStatement	"op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC )"	5520:4:160242:160296	836917	3	True				
ANR	838388	AssignmentExpression	"op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC )"		836917	0		=			
ANR	838389	Identifier	op		836917	0					
ANR	838390	CallExpression	"r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC )"		836917	1					
ANR	838391	Callee	r_core_anal_op		836917	0					
ANR	838392	Identifier	r_core_anal_op		836917	0					
ANR	838393	ArgumentList	core		836917	1					
ANR	838394	Argument	core		836917	0					
ANR	838395	Identifier	core		836917	0					
ANR	838396	Argument	addr		836917	1					
ANR	838397	Identifier	addr		836917	0					
ANR	838398	Argument	R_ANAL_OP_MASK_BASIC		836917	2					
ANR	838399	Identifier	R_ANAL_OP_MASK_BASIC		836917	0					
ANR	838400	IfStatement	if ( ! op )		836917	4					
ANR	838401	Condition	! op	5521:8:160306:160308	836917	0	True				
ANR	838402	UnaryOperationExpression	! op		836917	0					
ANR	838403	UnaryOperator	!		836917	0					
ANR	838404	Identifier	op		836917	1					
ANR	838405	CompoundStatement		236:13:6772:6772	836917	1					
ANR	838406	BreakStatement	break ;	5522:5:160318:160323	836917	0	True				
ANR	838407	IfStatement	if ( op -> type == R_ANAL_OP_TYPE_CALL || op -> type == R_ANAL_OP_TYPE_UCALL )		836917	5					
ANR	838408	Condition	op -> type == R_ANAL_OP_TYPE_CALL || op -> type == R_ANAL_OP_TYPE_UCALL	5524:8:160339:160405	836917	0	True				
ANR	838409	OrExpression	op -> type == R_ANAL_OP_TYPE_CALL || op -> type == R_ANAL_OP_TYPE_UCALL		836917	0		||			
ANR	838410	EqualityExpression	op -> type == R_ANAL_OP_TYPE_CALL		836917	0		==			
ANR	838411	PtrMemberAccess	op -> type		836917	0					
ANR	838412	Identifier	op		836917	0					
ANR	838413	Identifier	type		836917	1					
ANR	838414	Identifier	R_ANAL_OP_TYPE_CALL		836917	1					
ANR	838415	EqualityExpression	op -> type == R_ANAL_OP_TYPE_UCALL		836917	1		==			
ANR	838416	PtrMemberAccess	op -> type		836917	0					
ANR	838417	Identifier	op		836917	0					
ANR	838418	Identifier	type		836917	1					
ANR	838419	Identifier	R_ANAL_OP_TYPE_UCALL		836917	1					
ANR	838420	CompoundStatement		239:77:6869:6869	836917	1					
ANR	838421	Statement	eprintf	5525:5:160415:160421	836917	0	True				
ANR	838422	Statement	(	5525:13:160423:160423	836917	1	True				
ANR	838423	Statement	"""call at 0x%08"""	5525:14:160424:160438	836917	2	True				
ANR	838424	Statement	PFMT64x	5525:30:160440:160446	836917	3	True				
ANR	838425	Statement	"""\\n"""	5525:38:160448:160451	836917	4	True				
ANR	838426	Statement	","	5525:42:160452:160452	836917	5	True				
ANR	838427	Statement	addr	5525:44:160454:160457	836917	6	True				
ANR	838428	Statement	)	5525:48:160458:160458	836917	7	True				
ANR	838429	ExpressionStatement		5525:49:160459:160459	836917	8	True				
ANR	838430	BreakStatement	break ;	5526:5:160466:160471	836917	9	True				
ANR	838431	ExpressionStatement	r_anal_op_free ( op )	5528:4:160483:160502	836917	6	True				
ANR	838432	CallExpression	r_anal_op_free ( op )		836917	0					
ANR	838433	Callee	r_anal_op_free		836917	0					
ANR	838434	Identifier	r_anal_op_free		836917	0					
ANR	838435	ArgumentList	op		836917	1					
ANR	838436	Argument	op		836917	0					
ANR	838437	Identifier	op		836917	0					
ANR	838438	ExpressionStatement	op = NULL	5529:4:160508:160517	836917	7	True				
ANR	838439	AssignmentExpression	op = NULL		836917	0		=			
ANR	838440	Identifier	op		836917	0					
ANR	838441	Identifier	NULL		836917	1					
ANR	838442	IfStatement	if ( core -> anal -> esil -> trap || core -> anal -> esil -> trap_code )		836917	8					
ANR	838443	Condition	core -> anal -> esil -> trap || core -> anal -> esil -> trap_code	5530:8:160527:160579	836917	0	True				
ANR	838444	OrExpression	core -> anal -> esil -> trap || core -> anal -> esil -> trap_code		836917	0		||			
ANR	838445	PtrMemberAccess	core -> anal -> esil -> trap		836917	0					
ANR	838446	PtrMemberAccess	core -> anal -> esil		836917	0					
ANR	838447	PtrMemberAccess	core -> anal		836917	0					
ANR	838448	Identifier	core		836917	0					
ANR	838449	Identifier	anal		836917	1					
ANR	838450	Identifier	esil		836917	1					
ANR	838451	Identifier	trap		836917	1					
ANR	838452	PtrMemberAccess	core -> anal -> esil -> trap_code		836917	1					
ANR	838453	PtrMemberAccess	core -> anal -> esil		836917	0					
ANR	838454	PtrMemberAccess	core -> anal		836917	0					
ANR	838455	Identifier	core		836917	0					
ANR	838456	Identifier	anal		836917	1					
ANR	838457	Identifier	esil		836917	1					
ANR	838458	Identifier	trap_code		836917	1					
ANR	838459	CompoundStatement		245:63:7043:7043	836917	1					
ANR	838460	BreakStatement	break ;	5531:5:160589:160594	836917	0	True				
ANR	838461	IfStatement	if ( op )		836917	2					
ANR	838462	Condition	op	5534:7:160614:160615	836917	0	True				
ANR	838463	Identifier	op		836917	0					
ANR	838464	CompoundStatement		249:11:7079:7079	836917	1					
ANR	838465	ExpressionStatement	r_anal_op_free ( op )	5535:4:160624:160643	836917	0	True				
ANR	838466	CallExpression	r_anal_op_free ( op )		836917	0					
ANR	838467	Callee	r_anal_op_free		836917	0					
ANR	838468	Identifier	r_anal_op_free		836917	0					
ANR	838469	ArgumentList	op		836917	1					
ANR	838470	Argument	op		836917	0					
ANR	838471	Identifier	op		836917	0					
ANR	838472	ElseStatement	else		836917	0					
ANR	838473	CompoundStatement		252:9:7120:7120	836917	0					
ANR	838474	IfStatement	if ( input [ 1 ] == 'u' && input [ 2 ] == 'e' )		836917	0					
ANR	838475	Condition	input [ 1 ] == 'u' && input [ 2 ] == 'e'	5541:7:160771:160804	836917	0	True				
ANR	838476	AndExpression	input [ 1 ] == 'u' && input [ 2 ] == 'e'		836917	0		&&			
ANR	838477	EqualityExpression	input [ 1 ] == 'u'		836917	0		==			
ANR	838478	ArrayIndexing	input [ 1 ]		836917	0					
ANR	838479	Identifier	input		836917	0					
ANR	838480	PrimaryExpression	1		836917	1					
ANR	838481	PrimaryExpression	'u'		836917	1					
ANR	838482	EqualityExpression	input [ 2 ] == 'e'		836917	1		==			
ANR	838483	ArrayIndexing	input [ 2 ]		836917	0					
ANR	838484	Identifier	input		836917	0					
ANR	838485	PrimaryExpression	2		836917	1					
ANR	838486	PrimaryExpression	'e'		836917	1					
ANR	838487	CompoundStatement		256:43:7268:7268	836917	1					
ANR	838488	ExpressionStatement	until_expr = input + 3	5542:4:160813:160835	836917	0	True				
ANR	838489	AssignmentExpression	until_expr = input + 3		836917	0		=			
ANR	838490	Identifier	until_expr		836917	0					
ANR	838491	AdditiveExpression	input + 3		836917	1		+			
ANR	838492	Identifier	input		836917	0					
ANR	838493	PrimaryExpression	3		836917	1					
ANR	838494	ElseStatement	else		836917	0					
ANR	838495	IfStatement	if ( input [ 1 ] == 'u' )		836917	0					
ANR	838496	Condition	input [ 1 ] == 'u'	5543:14:160851:160865	836917	0	True				
ANR	838497	EqualityExpression	input [ 1 ] == 'u'		836917	0		==			
ANR	838498	ArrayIndexing	input [ 1 ]		836917	0					
ANR	838499	Identifier	input		836917	0					
ANR	838500	PrimaryExpression	1		836917	1					
ANR	838501	PrimaryExpression	'u'		836917	1					
ANR	838502	CompoundStatement		258:31:7329:7329	836917	1					
ANR	838503	ExpressionStatement	"until_addr = r_num_math ( core -> num , input + 2 )"	5544:4:160874:160920	836917	0	True				
ANR	838504	AssignmentExpression	"until_addr = r_num_math ( core -> num , input + 2 )"		836917	0		=			
ANR	838505	Identifier	until_addr		836917	0					
ANR	838506	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	1					
ANR	838507	Callee	r_num_math		836917	0					
ANR	838508	Identifier	r_num_math		836917	0					
ANR	838509	ArgumentList	core -> num		836917	1					
ANR	838510	Argument	core -> num		836917	0					
ANR	838511	PtrMemberAccess	core -> num		836917	0					
ANR	838512	Identifier	core		836917	0					
ANR	838513	Identifier	num		836917	1					
ANR	838514	Argument	input + 2		836917	1					
ANR	838515	AdditiveExpression	input + 2		836917	0		+			
ANR	838516	Identifier	input		836917	0					
ANR	838517	PrimaryExpression	2		836917	1					
ANR	838518	ElseStatement	else		836917	0					
ANR	838519	CompoundStatement		260:10:7393:7393	836917	0					
ANR	838520	ExpressionStatement	"until_expr = ""0"""	5546:4:160938:160954	836917	0	True				
ANR	838521	AssignmentExpression	"until_expr = ""0"""		836917	0		=			
ANR	838522	Identifier	until_expr		836917	0					
ANR	838523	PrimaryExpression	"""0"""		836917	1					
ANR	838524	ExpressionStatement	"r_core_esil_step ( core , until_addr , until_expr , NULL , false )"	5548:3:160964:161024	836917	1	True				
ANR	838525	CallExpression	"r_core_esil_step ( core , until_addr , until_expr , NULL , false )"		836917	0					
ANR	838526	Callee	r_core_esil_step		836917	0					
ANR	838527	Identifier	r_core_esil_step		836917	0					
ANR	838528	ArgumentList	core		836917	1					
ANR	838529	Argument	core		836917	0					
ANR	838530	Identifier	core		836917	0					
ANR	838531	Argument	until_addr		836917	1					
ANR	838532	Identifier	until_addr		836917	0					
ANR	838533	Argument	until_expr		836917	2					
ANR	838534	Identifier	until_expr		836917	0					
ANR	838535	Argument	NULL		836917	3					
ANR	838536	Identifier	NULL		836917	0					
ANR	838537	Argument	false		836917	4					
ANR	838538	Identifier	false		836917	0					
ANR	838539	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	5549:3:161029:161055	836917	2	True				
ANR	838540	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		836917	0					
ANR	838541	Callee	r_core_cmd0		836917	0					
ANR	838542	Identifier	r_core_cmd0		836917	0					
ANR	838543	ArgumentList	core		836917	1					
ANR	838544	Argument	core		836917	0					
ANR	838545	Identifier	core		836917	0					
ANR	838546	Argument	""".ar*"""		836917	1					
ANR	838547	PrimaryExpression	""".ar*"""		836917	0					
ANR	838548	BreakStatement	break ;	5551:2:161063:161068	836917	25	True				
ANR	838549	Label	case 'i' :	5552:1:161071:161079	836917	26	True				
ANR	838550	SwitchStatement	switch ( input [ 1 ] )		836917	27					
ANR	838551	Condition	input [ 1 ]	5553:10:161100:161107	836917	0	True				
ANR	838552	ArrayIndexing	input [ 1 ]		836917	0					
ANR	838553	Identifier	input		836917	0					
ANR	838554	PrimaryExpression	1		836917	1					
ANR	838555	CompoundStatement		268:20:7571:7571	836917	1					
ANR	838556	Label	case 's' :	5554:2:161114:161122	836917	0	True				
ANR	838557	Label	case 'm' :	5555:2:161136:161144	836917	1	True				
ANR	838558	ExpressionStatement	"cmd_esil_mem ( core , input + 2 )"	5556:3:161159:161189	836917	2	True				
ANR	838559	CallExpression	"cmd_esil_mem ( core , input + 2 )"		836917	0					
ANR	838560	Callee	cmd_esil_mem		836917	0					
ANR	838561	Identifier	cmd_esil_mem		836917	0					
ANR	838562	ArgumentList	core		836917	1					
ANR	838563	Argument	core		836917	0					
ANR	838564	Identifier	core		836917	0					
ANR	838565	Argument	input + 2		836917	1					
ANR	838566	AdditiveExpression	input + 2		836917	0		+			
ANR	838567	Identifier	input		836917	0					
ANR	838568	PrimaryExpression	2		836917	1					
ANR	838569	BreakStatement	break ;	5557:3:161194:161199	836917	3	True				
ANR	838570	Label	case 'p' :	5558:2:161203:161211	836917	4	True				
ANR	838571	ExpressionStatement	"r_core_cmd0 ( core , ""ar PC=$$"" )"	5559:3:161248:161278	836917	5	True				
ANR	838572	CallExpression	"r_core_cmd0 ( core , ""ar PC=$$"" )"		836917	0					
ANR	838573	Callee	r_core_cmd0		836917	0					
ANR	838574	Identifier	r_core_cmd0		836917	0					
ANR	838575	ArgumentList	core		836917	1					
ANR	838576	Argument	core		836917	0					
ANR	838577	Identifier	core		836917	0					
ANR	838578	Argument	"""ar PC=$$"""		836917	1					
ANR	838579	PrimaryExpression	"""ar PC=$$"""		836917	0					
ANR	838580	BreakStatement	break ;	5560:3:161283:161288	836917	6	True				
ANR	838581	Label	case '?' :	5561:2:161292:161300	836917	7	True				
ANR	838582	ExpressionStatement	"cmd_esil_mem ( core , ""?"" )"	5562:3:161305:161329	836917	8	True				
ANR	838583	CallExpression	"cmd_esil_mem ( core , ""?"" )"		836917	0					
ANR	838584	Callee	cmd_esil_mem		836917	0					
ANR	838585	Identifier	cmd_esil_mem		836917	0					
ANR	838586	ArgumentList	core		836917	1					
ANR	838587	Argument	core		836917	0					
ANR	838588	Identifier	core		836917	0					
ANR	838589	Argument	"""?"""		836917	1					
ANR	838590	PrimaryExpression	"""?"""		836917	0					
ANR	838591	BreakStatement	break ;	5563:3:161334:161339	836917	9	True				
ANR	838592	Label	case '-' :	5564:2:161343:161351	836917	10	True				
ANR	838593	IfStatement	if ( esil )		836917	11					
ANR	838594	Condition	esil	5565:7:161360:161363	836917	0	True				
ANR	838595	Identifier	esil		836917	0					
ANR	838596	CompoundStatement		280:13:7827:7827	836917	1					
ANR	838597	ExpressionStatement	sdb_reset ( esil -> stats )	5566:4:161372:161395	836917	0	True				
ANR	838598	CallExpression	sdb_reset ( esil -> stats )		836917	0					
ANR	838599	Callee	sdb_reset		836917	0					
ANR	838600	Identifier	sdb_reset		836917	0					
ANR	838601	ArgumentList	esil -> stats		836917	1					
ANR	838602	Argument	esil -> stats		836917	0					
ANR	838603	PtrMemberAccess	esil -> stats		836917	0					
ANR	838604	Identifier	esil		836917	0					
ANR	838605	Identifier	stats		836917	1					
ANR	838606	ExpressionStatement	r_anal_esil_free ( esil )	5568:3:161405:161428	836917	12	True				
ANR	838607	CallExpression	r_anal_esil_free ( esil )		836917	0					
ANR	838608	Callee	r_anal_esil_free		836917	0					
ANR	838609	Identifier	r_anal_esil_free		836917	0					
ANR	838610	ArgumentList	esil		836917	1					
ANR	838611	Argument	esil		836917	0					
ANR	838612	Identifier	esil		836917	0					
ANR	838613	ExpressionStatement	core -> anal -> esil = NULL	5569:3:161433:161456	836917	13	True				
ANR	838614	AssignmentExpression	core -> anal -> esil = NULL		836917	0		=			
ANR	838615	PtrMemberAccess	core -> anal -> esil		836917	0					
ANR	838616	PtrMemberAccess	core -> anal		836917	0					
ANR	838617	Identifier	core		836917	0					
ANR	838618	Identifier	anal		836917	1					
ANR	838619	Identifier	esil		836917	1					
ANR	838620	Identifier	NULL		836917	1					
ANR	838621	BreakStatement	break ;	5570:3:161461:161466	836917	14	True				
ANR	838622	Label	case 0 :	5571:2:161470:161476	836917	15	True				
ANR	838623	ExpressionStatement	r_anal_esil_free ( esil )	5572:3:161496:161519	836917	16	True				
ANR	838624	CallExpression	r_anal_esil_free ( esil )		836917	0					
ANR	838625	Callee	r_anal_esil_free		836917	0					
ANR	838626	Identifier	r_anal_esil_free		836917	0					
ANR	838627	ArgumentList	esil		836917	1					
ANR	838628	Argument	esil		836917	0					
ANR	838629	Identifier	esil		836917	0					
ANR	838630	CompoundStatement		290:4:8010:8074	836917	17					
ANR	838631	IdentifierDeclStatement	"const char * pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	5575:4:161549:161613	836917	0	True				
ANR	838632	IdentifierDecl	"* pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		836917	0					
ANR	838633	IdentifierDeclType	const char *		836917	0					
ANR	838634	Identifier	pc		836917	1					
ANR	838635	AssignmentExpression	"* pc = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		836917	2		=			
ANR	838636	Identifier	pc		836917	0					
ANR	838637	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		836917	1					
ANR	838638	Callee	r_reg_get_name		836917	0					
ANR	838639	Identifier	r_reg_get_name		836917	0					
ANR	838640	ArgumentList	core -> anal -> reg		836917	1					
ANR	838641	Argument	core -> anal -> reg		836917	0					
ANR	838642	PtrMemberAccess	core -> anal -> reg		836917	0					
ANR	838643	PtrMemberAccess	core -> anal		836917	0					
ANR	838644	Identifier	core		836917	0					
ANR	838645	Identifier	anal		836917	1					
ANR	838646	Identifier	reg		836917	1					
ANR	838647	Argument	R_REG_NAME_PC		836917	1					
ANR	838648	Identifier	R_REG_NAME_PC		836917	0					
ANR	838649	Statement	if	5576:4:161619:161620	836917	1	True				
ANR	838650	Statement	(	5576:7:161622:161622	836917	2	True				
ANR	838651	Statement	r_reg_getv	5576:8:161623:161632	836917	3	True				
ANR	838652	Statement	(	5576:19:161634:161634	836917	4	True				
ANR	838653	Statement	core	5576:20:161635:161638	836917	5	True				
ANR	838654	Statement	->	5576:24:161639:161640	836917	6	True				
ANR	838655	Statement	anal	5576:26:161641:161644	836917	7	True				
ANR	838656	Statement	->	5576:30:161645:161646	836917	8	True				
ANR	838657	Statement	reg	5576:32:161647:161649	836917	9	True				
ANR	838658	Statement	","	5576:35:161650:161650	836917	10	True				
ANR	838659	Statement	pc	5576:37:161652:161653	836917	11	True				
ANR	838660	Statement	)	5576:39:161654:161654	836917	12	True				
ANR	838661	Statement	==	5576:41:161656:161657	836917	13	True				
ANR	838662	Statement	0L	5576:44:161659:161660	836917	14	True				
ANR	838663	Statement	L	5576:46:161661:161661	836917	15	True				
ANR	838664	Statement	)	5576:47:161662:161662	836917	16	True				
ANR	838665	CompoundStatement		291:49:8125:8125	836917	17					
ANR	838666	ExpressionStatement	"r_core_cmd0 ( core , ""ar PC=$$"" )"	5577:5:161671:161701	836917	0	True				
ANR	838667	CallExpression	"r_core_cmd0 ( core , ""ar PC=$$"" )"		836917	0					
ANR	838668	Callee	r_core_cmd0		836917	0					
ANR	838669	Identifier	r_core_cmd0		836917	0					
ANR	838670	ArgumentList	core		836917	1					
ANR	838671	Argument	core		836917	0					
ANR	838672	Identifier	core		836917	0					
ANR	838673	Argument	"""ar PC=$$"""		836917	1					
ANR	838674	PrimaryExpression	"""ar PC=$$"""		836917	0					
ANR	838675	IfStatement	"if ( ! ( esil = core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) ) )"		836917	18					
ANR	838676	Condition	"! ( esil = core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"	5580:7:161721:161794	836917	0	True				
ANR	838677	UnaryOperationExpression	"! ( esil = core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"		836917	0					
ANR	838678	UnaryOperator	!		836917	0					
ANR	838679	AssignmentExpression	"esil = core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		836917	1		=			
ANR	838680	Identifier	esil		836917	0					
ANR	838681	AssignmentExpression	"core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		836917	1		=			
ANR	838682	PtrMemberAccess	core -> anal -> esil		836917	0					
ANR	838683	PtrMemberAccess	core -> anal		836917	0					
ANR	838684	Identifier	core		836917	0					
ANR	838685	Identifier	anal		836917	1					
ANR	838686	Identifier	esil		836917	1					
ANR	838687	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		836917	1					
ANR	838688	Callee	r_anal_esil_new		836917	0					
ANR	838689	Identifier	r_anal_esil_new		836917	0					
ANR	838690	ArgumentList	stacksize		836917	1					
ANR	838691	Argument	stacksize		836917	0					
ANR	838692	Identifier	stacksize		836917	0					
ANR	838693	Argument	iotrap		836917	1					
ANR	838694	Identifier	iotrap		836917	0					
ANR	838695	Argument	addrsize		836917	2					
ANR	838696	Identifier	addrsize		836917	0					
ANR	838697	CompoundStatement		295:83:8258:8258	836917	1					
ANR	838698	ReturnStatement	return ;	5581:4:161803:161809	836917	0	True				
ANR	838699	ExpressionStatement	"r_anal_esil_setup ( esil , core -> anal , romem , stats , noNULL )"	5583:3:161819:161877	836917	19	True				
ANR	838700	CallExpression	"r_anal_esil_setup ( esil , core -> anal , romem , stats , noNULL )"		836917	0					
ANR	838701	Callee	r_anal_esil_setup		836917	0					
ANR	838702	Identifier	r_anal_esil_setup		836917	0					
ANR	838703	ArgumentList	esil		836917	1					
ANR	838704	Argument	esil		836917	0					
ANR	838705	Identifier	esil		836917	0					
ANR	838706	Argument	core -> anal		836917	1					
ANR	838707	PtrMemberAccess	core -> anal		836917	0					
ANR	838708	Identifier	core		836917	0					
ANR	838709	Identifier	anal		836917	1					
ANR	838710	Argument	romem		836917	2					
ANR	838711	Identifier	romem		836917	0					
ANR	838712	Argument	stats		836917	3					
ANR	838713	Identifier	stats		836917	0					
ANR	838714	Argument	noNULL		836917	4					
ANR	838715	Identifier	noNULL		836917	0					
ANR	838716	ExpressionStatement	"esil -> verbose = ( int ) r_config_get_i ( core -> config , ""esil.verbose"" )"	5584:3:161894:161960	836917	20	True				
ANR	838717	AssignmentExpression	"esil -> verbose = ( int ) r_config_get_i ( core -> config , ""esil.verbose"" )"		836917	0		=			
ANR	838718	PtrMemberAccess	esil -> verbose		836917	0					
ANR	838719	Identifier	esil		836917	0					
ANR	838720	Identifier	verbose		836917	1					
ANR	838721	CastExpression	"( int ) r_config_get_i ( core -> config , ""esil.verbose"" )"		836917	1					
ANR	838722	CastTarget	int		836917	0					
ANR	838723	CallExpression	"r_config_get_i ( core -> config , ""esil.verbose"" )"		836917	1					
ANR	838724	Callee	r_config_get_i		836917	0					
ANR	838725	Identifier	r_config_get_i		836917	0					
ANR	838726	ArgumentList	core -> config		836917	1					
ANR	838727	Argument	core -> config		836917	0					
ANR	838728	PtrMemberAccess	core -> config		836917	0					
ANR	838729	Identifier	core		836917	0					
ANR	838730	Identifier	config		836917	1					
ANR	838731	Argument	"""esil.verbose"""		836917	1					
ANR	838732	PrimaryExpression	"""esil.verbose"""		836917	0					
ANR	838733	CompoundStatement		302:4:8486:8546	836917	21					
ANR	838734	IdentifierDeclStatement	"const char * s = r_config_get ( core -> config , ""cmd.esil.intr"" ) ;"	5587:4:162025:162085	836917	0	True				
ANR	838735	IdentifierDecl	"* s = r_config_get ( core -> config , ""cmd.esil.intr"" )"		836917	0					
ANR	838736	IdentifierDeclType	const char *		836917	0					
ANR	838737	Identifier	s		836917	1					
ANR	838738	AssignmentExpression	"* s = r_config_get ( core -> config , ""cmd.esil.intr"" )"		836917	2		=			
ANR	838739	Identifier	s		836917	0					
ANR	838740	CallExpression	"r_config_get ( core -> config , ""cmd.esil.intr"" )"		836917	1					
ANR	838741	Callee	r_config_get		836917	0					
ANR	838742	Identifier	r_config_get		836917	0					
ANR	838743	ArgumentList	core -> config		836917	1					
ANR	838744	Argument	core -> config		836917	0					
ANR	838745	PtrMemberAccess	core -> config		836917	0					
ANR	838746	Identifier	core		836917	0					
ANR	838747	Identifier	config		836917	1					
ANR	838748	Argument	"""cmd.esil.intr"""		836917	1					
ANR	838749	PrimaryExpression	"""cmd.esil.intr"""		836917	0					
ANR	838750	IfStatement	if ( s )		836917	1					
ANR	838751	Condition	s	5588:8:162095:162095	836917	0	True				
ANR	838752	Identifier	s		836917	0					
ANR	838753	CompoundStatement		304:5:8566:8587	836917	1					
ANR	838754	IdentifierDeclStatement	char * my = strdup ( s ) ;	5589:5:162105:162126	836917	0	True				
ANR	838755	IdentifierDecl	* my = strdup ( s )		836917	0					
ANR	838756	IdentifierDeclType	char *		836917	0					
ANR	838757	Identifier	my		836917	1					
ANR	838758	AssignmentExpression	* my = strdup ( s )		836917	2		=			
ANR	838759	Identifier	my		836917	0					
ANR	838760	CallExpression	strdup ( s )		836917	1					
ANR	838761	Callee	strdup		836917	0					
ANR	838762	Identifier	strdup		836917	0					
ANR	838763	ArgumentList	s		836917	1					
ANR	838764	Argument	s		836917	0					
ANR	838765	Identifier	s		836917	0					
ANR	838766	IfStatement	if ( my )		836917	1					
ANR	838767	Condition	my	5590:9:162137:162138	836917	0	True				
ANR	838768	Identifier	my		836917	0					
ANR	838769	CompoundStatement		305:13:8602:8602	836917	1					
ANR	838770	ExpressionStatement	"r_config_set ( core -> config , ""cmd.esil.intr"" , my )"	5591:6:162149:162197	836917	0	True				
ANR	838771	CallExpression	"r_config_set ( core -> config , ""cmd.esil.intr"" , my )"		836917	0					
ANR	838772	Callee	r_config_set		836917	0					
ANR	838773	Identifier	r_config_set		836917	0					
ANR	838774	ArgumentList	core -> config		836917	1					
ANR	838775	Argument	core -> config		836917	0					
ANR	838776	PtrMemberAccess	core -> config		836917	0					
ANR	838777	Identifier	core		836917	0					
ANR	838778	Identifier	config		836917	1					
ANR	838779	Argument	"""cmd.esil.intr"""		836917	1					
ANR	838780	PrimaryExpression	"""cmd.esil.intr"""		836917	0					
ANR	838781	Argument	my		836917	2					
ANR	838782	Identifier	my		836917	0					
ANR	838783	ExpressionStatement	free ( my )	5592:6:162205:162214	836917	1	True				
ANR	838784	CallExpression	free ( my )		836917	0					
ANR	838785	Callee	free		836917	0					
ANR	838786	Identifier	free		836917	0					
ANR	838787	ArgumentList	my		836917	1					
ANR	838788	Argument	my		836917	0					
ANR	838789	Identifier	my		836917	0					
ANR	838790	BreakStatement	break ;	5596:3:162237:162242	836917	22	True				
ANR	838791	BreakStatement	break ;	5598:2:162250:162255	836917	28	True				
ANR	838792	Label	case 'k' :	5599:1:162258:162266	836917	29	True				
ANR	838793	SwitchStatement	switch ( input [ 1 ] )		836917	30					
ANR	838794	Condition	input [ 1 ]	5600:10:162287:162294	836917	0	True				
ANR	838795	ArrayIndexing	input [ 1 ]		836917	0					
ANR	838796	Identifier	input		836917	0					
ANR	838797	PrimaryExpression	1		836917	1					
ANR	838798	CompoundStatement		315:20:8758:8758	836917	1					
ANR	838799	Label	case '\\0' :	5601:2:162301:162310	836917	0	True				
ANR	838800	ExpressionStatement	"input = ""123*"""	5602:3:162315:162329	836917	1	True				
ANR	838801	AssignmentExpression	"input = ""123*"""		836917	0		=			
ANR	838802	Identifier	input		836917	0					
ANR	838803	PrimaryExpression	"""123*"""		836917	1					
ANR	838804	Label	case ' ' :	5604:2:162355:162363	836917	2	True				
ANR	838805	IfStatement	if ( esil && esil -> stats )		836917	3					
ANR	838806	Condition	esil && esil -> stats	5605:7:162372:162390	836917	0	True				
ANR	838807	AndExpression	esil && esil -> stats		836917	0		&&			
ANR	838808	Identifier	esil		836917	0					
ANR	838809	PtrMemberAccess	esil -> stats		836917	1					
ANR	838810	Identifier	esil		836917	0					
ANR	838811	Identifier	stats		836917	1					
ANR	838812	CompoundStatement		321:4:8860:8916	836917	1					
ANR	838813	IdentifierDeclStatement	"char * out = sdb_querys ( esil -> stats , NULL , 0 , input + 2 ) ;"	5606:4:162399:162455	836917	0	True				
ANR	838814	IdentifierDecl	"* out = sdb_querys ( esil -> stats , NULL , 0 , input + 2 )"		836917	0					
ANR	838815	IdentifierDeclType	char *		836917	0					
ANR	838816	Identifier	out		836917	1					
ANR	838817	AssignmentExpression	"* out = sdb_querys ( esil -> stats , NULL , 0 , input + 2 )"		836917	2		=			
ANR	838818	Identifier	out		836917	0					
ANR	838819	CallExpression	"sdb_querys ( esil -> stats , NULL , 0 , input + 2 )"		836917	1					
ANR	838820	Callee	sdb_querys		836917	0					
ANR	838821	Identifier	sdb_querys		836917	0					
ANR	838822	ArgumentList	esil -> stats		836917	1					
ANR	838823	Argument	esil -> stats		836917	0					
ANR	838824	PtrMemberAccess	esil -> stats		836917	0					
ANR	838825	Identifier	esil		836917	0					
ANR	838826	Identifier	stats		836917	1					
ANR	838827	Argument	NULL		836917	1					
ANR	838828	Identifier	NULL		836917	0					
ANR	838829	Argument	0		836917	2					
ANR	838830	PrimaryExpression	0		836917	0					
ANR	838831	Argument	input + 2		836917	3					
ANR	838832	AdditiveExpression	input + 2		836917	0		+			
ANR	838833	Identifier	input		836917	0					
ANR	838834	PrimaryExpression	2		836917	1					
ANR	838835	IfStatement	if ( out )		836917	1					
ANR	838836	Condition	out	5607:8:162465:162467	836917	0	True				
ANR	838837	Identifier	out		836917	0					
ANR	838838	CompoundStatement		322:13:8931:8931	836917	1					
ANR	838839	ExpressionStatement	r_cons_println ( out )	5608:5:162477:162497	836917	0	True				
ANR	838840	CallExpression	r_cons_println ( out )		836917	0					
ANR	838841	Callee	r_cons_println		836917	0					
ANR	838842	Identifier	r_cons_println		836917	0					
ANR	838843	ArgumentList	out		836917	1					
ANR	838844	Argument	out		836917	0					
ANR	838845	Identifier	out		836917	0					
ANR	838846	ExpressionStatement	free ( out )	5609:5:162504:162514	836917	1	True				
ANR	838847	CallExpression	free ( out )		836917	0					
ANR	838848	Callee	free		836917	0					
ANR	838849	Identifier	free		836917	0					
ANR	838850	ArgumentList	out		836917	1					
ANR	838851	Argument	out		836917	0					
ANR	838852	Identifier	out		836917	0					
ANR	838853	ElseStatement	else		836917	0					
ANR	838854	CompoundStatement		326:10:8993:8993	836917	0					
ANR	838855	ExpressionStatement	"eprintf ( ""esil.stats is empty. Run 'aei'\\n"" )"	5612:4:162538:162582	836917	0	True				
ANR	838856	CallExpression	"eprintf ( ""esil.stats is empty. Run 'aei'\\n"" )"		836917	0					
ANR	838857	Callee	eprintf		836917	0					
ANR	838858	Identifier	eprintf		836917	0					
ANR	838859	ArgumentList	"""esil.stats is empty. Run 'aei'\\n"""		836917	1					
ANR	838860	Argument	"""esil.stats is empty. Run 'aei'\\n"""		836917	0					
ANR	838861	PrimaryExpression	"""esil.stats is empty. Run 'aei'\\n"""		836917	0					
ANR	838862	BreakStatement	break ;	5614:3:162592:162597	836917	4	True				
ANR	838863	Label	case '-' :	5615:2:162601:162609	836917	5	True				
ANR	838864	IfStatement	if ( esil )		836917	6					
ANR	838865	Condition	esil	5616:7:162618:162621	836917	0	True				
ANR	838866	Identifier	esil		836917	0					
ANR	838867	CompoundStatement		331:13:9085:9085	836917	1					
ANR	838868	ExpressionStatement	sdb_reset ( esil -> stats )	5617:4:162630:162653	836917	0	True				
ANR	838869	CallExpression	sdb_reset ( esil -> stats )		836917	0					
ANR	838870	Callee	sdb_reset		836917	0					
ANR	838871	Identifier	sdb_reset		836917	0					
ANR	838872	ArgumentList	esil -> stats		836917	1					
ANR	838873	Argument	esil -> stats		836917	0					
ANR	838874	PtrMemberAccess	esil -> stats		836917	0					
ANR	838875	Identifier	esil		836917	0					
ANR	838876	Identifier	stats		836917	1					
ANR	838877	BreakStatement	break ;	5619:3:162663:162668	836917	7	True				
ANR	838878	BreakStatement	break ;	5621:2:162676:162681	836917	31	True				
ANR	838879	Label	case 'l' :	5622:1:162684:162692	836917	32	True				
ANR	838880	SwitchStatement	switch ( input [ 1 ] )		836917	33					
ANR	838881	Condition	input [ 1 ]	5623:10:162720:162727	836917	0	True				
ANR	838882	ArrayIndexing	input [ 1 ]		836917	0					
ANR	838883	Identifier	input		836917	0					
ANR	838884	PrimaryExpression	1		836917	1					
ANR	838885	CompoundStatement		338:20:9191:9191	836917	1					
ANR	838886	Label	case 'i' :	5624:2:162734:162742	836917	0	True				
ANR	838887	SwitchStatement	switch ( input [ 2 ] )		836917	1					
ANR	838888	Condition	input [ 2 ]	5625:11:162774:162781	836917	0	True				
ANR	838889	ArrayIndexing	input [ 2 ]		836917	0					
ANR	838890	Identifier	input		836917	0					
ANR	838891	PrimaryExpression	2		836917	1					
ANR	838892	CompoundStatement		340:21:9245:9245	836917	1					
ANR	838893	Label	case ' ' :	5626:3:162789:162797	836917	0	True				
ANR	838894	IfStatement	"if ( ! r_anal_esil_load_interrupts_from_lib ( esil , input + 3 ) )"		836917	1					
ANR	838895	Condition	"! r_anal_esil_load_interrupts_from_lib ( esil , input + 3 )"	5627:8:162832:162886	836917	0	True				
ANR	838896	UnaryOperationExpression	"! r_anal_esil_load_interrupts_from_lib ( esil , input + 3 )"		836917	0					
ANR	838897	UnaryOperator	!		836917	0					
ANR	838898	CallExpression	"r_anal_esil_load_interrupts_from_lib ( esil , input + 3 )"		836917	1					
ANR	838899	Callee	r_anal_esil_load_interrupts_from_lib		836917	0					
ANR	838900	Identifier	r_anal_esil_load_interrupts_from_lib		836917	0					
ANR	838901	ArgumentList	esil		836917	1					
ANR	838902	Argument	esil		836917	0					
ANR	838903	Identifier	esil		836917	0					
ANR	838904	Argument	input + 3		836917	1					
ANR	838905	AdditiveExpression	input + 3		836917	0		+			
ANR	838906	Identifier	input		836917	0					
ANR	838907	PrimaryExpression	3		836917	1					
ANR	838908	CompoundStatement		342:65:9350:9350	836917	1					
ANR	838909	ExpressionStatement	"eprintf ( ""Failed to load interrupts from '%s'."" , input + 3 )"	5628:5:162896:162955	836917	0	True				
ANR	838910	CallExpression	"eprintf ( ""Failed to load interrupts from '%s'."" , input + 3 )"		836917	0					
ANR	838911	Callee	eprintf		836917	0					
ANR	838912	Identifier	eprintf		836917	0					
ANR	838913	ArgumentList	"""Failed to load interrupts from '%s'."""		836917	1					
ANR	838914	Argument	"""Failed to load interrupts from '%s'."""		836917	0					
ANR	838915	PrimaryExpression	"""Failed to load interrupts from '%s'."""		836917	0					
ANR	838916	Argument	input + 3		836917	1					
ANR	838917	AdditiveExpression	input + 3		836917	0		+			
ANR	838918	Identifier	input		836917	0					
ANR	838919	PrimaryExpression	3		836917	1					
ANR	838920	BreakStatement	break ;	5630:4:162967:162972	836917	2	True				
ANR	838921	Label	case 0 :	5631:3:162977:162983	836917	3	True				
ANR	838922	IfStatement	if ( esil && esil -> interrupts )		836917	4					
ANR	838923	Condition	esil && esil -> interrupts	5632:8:163016:163039	836917	0	True				
ANR	838924	AndExpression	esil && esil -> interrupts		836917	0		&&			
ANR	838925	Identifier	esil		836917	0					
ANR	838926	PtrMemberAccess	esil -> interrupts		836917	1					
ANR	838927	Identifier	esil		836917	0					
ANR	838928	Identifier	interrupts		836917	1					
ANR	838929	CompoundStatement		347:34:9503:9503	836917	1					
ANR	838930	ExpressionStatement	"dict_foreach ( esil -> interrupts , _aeli_iter , NULL )"	5633:5:163049:163098	836917	0	True				
ANR	838931	CallExpression	"dict_foreach ( esil -> interrupts , _aeli_iter , NULL )"		836917	0					
ANR	838932	Callee	dict_foreach		836917	0					
ANR	838933	Identifier	dict_foreach		836917	0					
ANR	838934	ArgumentList	esil -> interrupts		836917	1					
ANR	838935	Argument	esil -> interrupts		836917	0					
ANR	838936	PtrMemberAccess	esil -> interrupts		836917	0					
ANR	838937	Identifier	esil		836917	0					
ANR	838938	Identifier	interrupts		836917	1					
ANR	838939	Argument	_aeli_iter		836917	1					
ANR	838940	Identifier	_aeli_iter		836917	0					
ANR	838941	Argument	NULL		836917	2					
ANR	838942	Identifier	NULL		836917	0					
ANR	838943	BreakStatement	break ;	5635:4:163110:163115	836917	5	True				
ANR	838944	Label	case 'r' :	5636:3:163120:163128	836917	6	True				
ANR	838945	IfStatement	if ( esil && esil -> interrupts )		836917	7					
ANR	838946	Condition	esil && esil -> interrupts	5637:8:163149:163172	836917	0	True				
ANR	838947	AndExpression	esil && esil -> interrupts		836917	0		&&			
ANR	838948	Identifier	esil		836917	0					
ANR	838949	PtrMemberAccess	esil -> interrupts		836917	1					
ANR	838950	Identifier	esil		836917	0					
ANR	838951	Identifier	interrupts		836917	1					
ANR	838952	CompoundStatement		353:5:9643:9738	836917	1					
ANR	838953	IdentifierDeclStatement	"RAnalEsilInterrupt * interrupt = dict_getu ( esil -> interrupts , r_num_math ( core -> num , input + 3 ) ) ;"	5638:5:163182:163277	836917	0	True				
ANR	838954	IdentifierDecl	"* interrupt = dict_getu ( esil -> interrupts , r_num_math ( core -> num , input + 3 ) )"		836917	0					
ANR	838955	IdentifierDeclType	RAnalEsilInterrupt *		836917	0					
ANR	838956	Identifier	interrupt		836917	1					
ANR	838957	AssignmentExpression	"* interrupt = dict_getu ( esil -> interrupts , r_num_math ( core -> num , input + 3 ) )"		836917	2		=			
ANR	838958	Identifier	interrupt		836917	0					
ANR	838959	CallExpression	"dict_getu ( esil -> interrupts , r_num_math ( core -> num , input + 3 ) )"		836917	1					
ANR	838960	Callee	dict_getu		836917	0					
ANR	838961	Identifier	dict_getu		836917	0					
ANR	838962	ArgumentList	esil -> interrupts		836917	1					
ANR	838963	Argument	esil -> interrupts		836917	0					
ANR	838964	PtrMemberAccess	esil -> interrupts		836917	0					
ANR	838965	Identifier	esil		836917	0					
ANR	838966	Identifier	interrupts		836917	1					
ANR	838967	Argument	"r_num_math ( core -> num , input + 3 )"		836917	1					
ANR	838968	CallExpression	"r_num_math ( core -> num , input + 3 )"		836917	0					
ANR	838969	Callee	r_num_math		836917	0					
ANR	838970	Identifier	r_num_math		836917	0					
ANR	838971	ArgumentList	core -> num		836917	1					
ANR	838972	Argument	core -> num		836917	0					
ANR	838973	PtrMemberAccess	core -> num		836917	0					
ANR	838974	Identifier	core		836917	0					
ANR	838975	Identifier	num		836917	1					
ANR	838976	Argument	input + 3		836917	1					
ANR	838977	AdditiveExpression	input + 3		836917	0		+			
ANR	838978	Identifier	input		836917	0					
ANR	838979	PrimaryExpression	3		836917	1					
ANR	838980	ExpressionStatement	"r_anal_esil_interrupt_free ( esil , interrupt )"	5639:5:163284:163328	836917	1	True				
ANR	838981	CallExpression	"r_anal_esil_interrupt_free ( esil , interrupt )"		836917	0					
ANR	838982	Callee	r_anal_esil_interrupt_free		836917	0					
ANR	838983	Identifier	r_anal_esil_interrupt_free		836917	0					
ANR	838984	ArgumentList	esil		836917	1					
ANR	838985	Argument	esil		836917	0					
ANR	838986	Identifier	esil		836917	0					
ANR	838987	Argument	interrupt		836917	1					
ANR	838988	Identifier	interrupt		836917	0					
ANR	838989	BreakStatement	break ;	5641:4:163340:163345	836917	8	True				
ANR	838990	BreakStatement	break ;	5646:2:163386:163391	836917	34	True				
ANR	838991	Label	case 'g' :	5647:1:163394:163402	836917	35	True				
ANR	838992	IfStatement	if ( input [ 1 ] == 'v' )		836917	36					
ANR	838993	Condition	input [ 1 ] == 'v'	5648:6:163419:163433	836917	0	True				
ANR	838994	EqualityExpression	input [ 1 ] == 'v'		836917	0		==			
ANR	838995	ArrayIndexing	input [ 1 ]		836917	0					
ANR	838996	Identifier	input		836917	0					
ANR	838997	PrimaryExpression	1		836917	1					
ANR	838998	PrimaryExpression	'v'		836917	1					
ANR	838999	CompoundStatement		363:23:9897:9897	836917	1					
ANR	839000	ExpressionStatement	"r_core_cmd0 ( core , "".aeg;agg"" )"	5649:3:163441:163471	836917	0	True				
ANR	839001	CallExpression	"r_core_cmd0 ( core , "".aeg;agg"" )"		836917	0					
ANR	839002	Callee	r_core_cmd0		836917	0					
ANR	839003	Identifier	r_core_cmd0		836917	0					
ANR	839004	ArgumentList	core		836917	1					
ANR	839005	Argument	core		836917	0					
ANR	839006	Identifier	core		836917	0					
ANR	839007	Argument	""".aeg;agg"""		836917	1					
ANR	839008	PrimaryExpression	""".aeg;agg"""		836917	0					
ANR	839009	ElseStatement	else		836917	0					
ANR	839010	IfStatement	if ( input [ 1 ] == ' ' )		836917	0					
ANR	839011	Condition	input [ 1 ] == ' '	5650:13:163486:163500	836917	0	True				
ANR	839012	EqualityExpression	input [ 1 ] == ' '		836917	0		==			
ANR	839013	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839014	Identifier	input		836917	0					
ANR	839015	PrimaryExpression	1		836917	1					
ANR	839016	PrimaryExpression	' '		836917	1					
ANR	839017	CompoundStatement		365:30:9964:9964	836917	1					
ANR	839018	ExpressionStatement	"r_core_anal_esil_graph ( core , input + 2 )"	5651:3:163508:163548	836917	0	True				
ANR	839019	CallExpression	"r_core_anal_esil_graph ( core , input + 2 )"		836917	0					
ANR	839020	Callee	r_core_anal_esil_graph		836917	0					
ANR	839021	Identifier	r_core_anal_esil_graph		836917	0					
ANR	839022	ArgumentList	core		836917	1					
ANR	839023	Argument	core		836917	0					
ANR	839024	Identifier	core		836917	0					
ANR	839025	Argument	input + 2		836917	1					
ANR	839026	AdditiveExpression	input + 2		836917	0		+			
ANR	839027	Identifier	input		836917	0					
ANR	839028	PrimaryExpression	2		836917	1					
ANR	839029	ElseStatement	else		836917	0					
ANR	839030	CompoundStatement		368:3:10032:10103	836917	0					
ANR	839031	IdentifierDeclStatement	"RAnalOp * aop = r_core_anal_op ( core , core -> offset , R_ANAL_OP_MASK_ESIL ) ;"	5653:3:163571:163642	836917	0	True				
ANR	839032	IdentifierDecl	"* aop = r_core_anal_op ( core , core -> offset , R_ANAL_OP_MASK_ESIL )"		836917	0					
ANR	839033	IdentifierDeclType	RAnalOp *		836917	0					
ANR	839034	Identifier	aop		836917	1					
ANR	839035	AssignmentExpression	"* aop = r_core_anal_op ( core , core -> offset , R_ANAL_OP_MASK_ESIL )"		836917	2		=			
ANR	839036	Identifier	aop		836917	0					
ANR	839037	CallExpression	"r_core_anal_op ( core , core -> offset , R_ANAL_OP_MASK_ESIL )"		836917	1					
ANR	839038	Callee	r_core_anal_op		836917	0					
ANR	839039	Identifier	r_core_anal_op		836917	0					
ANR	839040	ArgumentList	core		836917	1					
ANR	839041	Argument	core		836917	0					
ANR	839042	Identifier	core		836917	0					
ANR	839043	Argument	core -> offset		836917	1					
ANR	839044	PtrMemberAccess	core -> offset		836917	0					
ANR	839045	Identifier	core		836917	0					
ANR	839046	Identifier	offset		836917	1					
ANR	839047	Argument	R_ANAL_OP_MASK_ESIL		836917	2					
ANR	839048	Identifier	R_ANAL_OP_MASK_ESIL		836917	0					
ANR	839049	IfStatement	if ( aop )		836917	1					
ANR	839050	Condition	aop	5654:7:163651:163653	836917	0	True				
ANR	839051	Identifier	aop		836917	0					
ANR	839052	CompoundStatement		370:4:10123:10170	836917	1					
ANR	839053	IdentifierDeclStatement	const char * esilstr = r_strbuf_get ( & aop -> esil ) ;	5655:4:163662:163709	836917	0	True				
ANR	839054	IdentifierDecl	* esilstr = r_strbuf_get ( & aop -> esil )		836917	0					
ANR	839055	IdentifierDeclType	const char *		836917	0					
ANR	839056	Identifier	esilstr		836917	1					
ANR	839057	AssignmentExpression	* esilstr = r_strbuf_get ( & aop -> esil )		836917	2		=			
ANR	839058	Identifier	esilstr		836917	0					
ANR	839059	CallExpression	r_strbuf_get ( & aop -> esil )		836917	1					
ANR	839060	Callee	r_strbuf_get		836917	0					
ANR	839061	Identifier	r_strbuf_get		836917	0					
ANR	839062	ArgumentList	& aop -> esil		836917	1					
ANR	839063	Argument	& aop -> esil		836917	0					
ANR	839064	UnaryOperationExpression	& aop -> esil		836917	0					
ANR	839065	UnaryOperator	&		836917	0					
ANR	839066	PtrMemberAccess	aop -> esil		836917	1					
ANR	839067	Identifier	aop		836917	0					
ANR	839068	Identifier	esil		836917	1					
ANR	839069	IfStatement	if ( esilstr )		836917	1					
ANR	839070	Condition	esilstr	5656:8:163719:163725	836917	0	True				
ANR	839071	Identifier	esilstr		836917	0					
ANR	839072	CompoundStatement		371:17:10189:10189	836917	1					
ANR	839073	ExpressionStatement	"r_core_anal_esil_graph ( core , esilstr )"	5657:5:163735:163773	836917	0	True				
ANR	839074	CallExpression	"r_core_anal_esil_graph ( core , esilstr )"		836917	0					
ANR	839075	Callee	r_core_anal_esil_graph		836917	0					
ANR	839076	Identifier	r_core_anal_esil_graph		836917	0					
ANR	839077	ArgumentList	core		836917	1					
ANR	839078	Argument	core		836917	0					
ANR	839079	Identifier	core		836917	0					
ANR	839080	Argument	esilstr		836917	1					
ANR	839081	Identifier	esilstr		836917	0					
ANR	839082	BreakStatement	break ;	5661:2:163792:163797	836917	37	True				
ANR	839083	Label	case 'f' :	5662:1:163800:163808	836917	38	True				
ANR	839084	IfStatement	if ( input [ 1 ] == 'a' )		836917	39					
ANR	839085	Condition	input [ 1 ] == 'a'	5663:6:163825:163839	836917	0	True				
ANR	839086	EqualityExpression	input [ 1 ] == 'a'		836917	0		==			
ANR	839087	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839088	Identifier	input		836917	0					
ANR	839089	PrimaryExpression	1		836917	1					
ANR	839090	PrimaryExpression	'a'		836917	1					
ANR	839091	CompoundStatement		378:23:10303:10303	836917	1					
ANR	839092	ExpressionStatement	"r_anal_aefa ( core , r_str_trim_ro ( input + 2 ) )"	5664:3:163857:163902	836917	0	True				
ANR	839093	CallExpression	"r_anal_aefa ( core , r_str_trim_ro ( input + 2 ) )"		836917	0					
ANR	839094	Callee	r_anal_aefa		836917	0					
ANR	839095	Identifier	r_anal_aefa		836917	0					
ANR	839096	ArgumentList	core		836917	1					
ANR	839097	Argument	core		836917	0					
ANR	839098	Identifier	core		836917	0					
ANR	839099	Argument	r_str_trim_ro ( input + 2 )		836917	1					
ANR	839100	CallExpression	r_str_trim_ro ( input + 2 )		836917	0					
ANR	839101	Callee	r_str_trim_ro		836917	0					
ANR	839102	Identifier	r_str_trim_ro		836917	0					
ANR	839103	ArgumentList	input + 2		836917	1					
ANR	839104	Argument	input + 2		836917	0					
ANR	839105	AdditiveExpression	input + 2		836917	0		+			
ANR	839106	Identifier	input		836917	0					
ANR	839107	PrimaryExpression	2		836917	1					
ANR	839108	ElseStatement	else		836917	0					
ANR	839109	CompoundStatement		383:2:10475:10590	836917	0					
ANR	839110	IdentifierDeclStatement	RListIter * iter ;	5666:2:163977:163992	836917	0	True				
ANR	839111	IdentifierDecl	* iter		836917	0					
ANR	839112	IdentifierDeclType	RListIter *		836917	0					
ANR	839113	Identifier	iter		836917	1					
ANR	839114	IdentifierDeclStatement	RAnalBlock * bb ;	5667:2:163996:164010	836917	1	True				
ANR	839115	IdentifierDecl	* bb		836917	0					
ANR	839116	IdentifierDeclType	RAnalBlock *		836917	0					
ANR	839117	Identifier	bb		836917	1					
ANR	839118	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM ) ;"	5668:2:164014:164129	836917	2	True				
ANR	839119	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		836917	0					
ANR	839120	IdentifierDeclType	RAnalFunction *		836917	0					
ANR	839121	Identifier	fcn		836917	1					
ANR	839122	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		836917	2		=			
ANR	839123	Identifier	fcn		836917	0					
ANR	839124	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		836917	1					
ANR	839125	Callee	r_anal_get_fcn_in		836917	0					
ANR	839126	Identifier	r_anal_get_fcn_in		836917	0					
ANR	839127	ArgumentList	core -> anal		836917	1					
ANR	839128	Argument	core -> anal		836917	0					
ANR	839129	PtrMemberAccess	core -> anal		836917	0					
ANR	839130	Identifier	core		836917	0					
ANR	839131	Identifier	anal		836917	1					
ANR	839132	Argument	core -> offset		836917	1					
ANR	839133	PtrMemberAccess	core -> offset		836917	0					
ANR	839134	Identifier	core		836917	0					
ANR	839135	Identifier	offset		836917	1					
ANR	839136	Argument	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		836917	2					
ANR	839137	InclusiveOrExpression	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		836917	0		|			
ANR	839138	Identifier	R_ANAL_FCN_TYPE_FCN		836917	0					
ANR	839139	Identifier	R_ANAL_FCN_TYPE_SYM		836917	1					
ANR	839140	IfStatement	if ( fcn )		836917	3					
ANR	839141	Condition	fcn	5670:6:164137:164139	836917	0	True				
ANR	839142	Identifier	fcn		836917	0					
ANR	839143	CompoundStatement		385:11:10603:10603	836917	1					
ANR	839144	Statement	r_list_foreach	5672:3:164235:164248	836917	0	True				
ANR	839145	Statement	(	5672:18:164250:164250	836917	1	True				
ANR	839146	Statement	fcn	5672:19:164251:164253	836917	2	True				
ANR	839147	Statement	->	5672:22:164254:164255	836917	3	True				
ANR	839148	Statement	bbs	5672:24:164256:164258	836917	4	True				
ANR	839149	Statement	","	5672:27:164259:164259	836917	5	True				
ANR	839150	Statement	iter	5672:29:164261:164264	836917	6	True				
ANR	839151	Statement	","	5672:33:164265:164265	836917	7	True				
ANR	839152	Statement	bb	5672:35:164267:164268	836917	8	True				
ANR	839153	Statement	)	5672:37:164269:164269	836917	9	True				
ANR	839154	CompoundStatement		401:4:11155:11163	836917	10					
ANR	839155	IdentifierDeclStatement	ut64 pc = bb -> addr ;	5673:4:164277:164295	836917	0	True				
ANR	839156	IdentifierDecl	pc = bb -> addr		836917	0					
ANR	839157	IdentifierDeclType	ut64		836917	0					
ANR	839158	Identifier	pc		836917	1					
ANR	839159	AssignmentExpression	pc = bb -> addr		836917	2		=			
ANR	839160	Identifier	pc		836917	0					
ANR	839161	PtrMemberAccess	bb -> addr		836917	1					
ANR	839162	Identifier	bb		836917	0					
ANR	839163	Identifier	addr		836917	1					
ANR	839164	IdentifierDeclStatement	ut64 end = bb -> addr + bb -> size ;	5674:4:164301:164331	836917	1	True				
ANR	839165	IdentifierDecl	end = bb -> addr + bb -> size		836917	0					
ANR	839166	IdentifierDeclType	ut64		836917	0					
ANR	839167	Identifier	end		836917	1					
ANR	839168	AssignmentExpression	end = bb -> addr + bb -> size		836917	2		=			
ANR	839169	Identifier	end		836917	0					
ANR	839170	AdditiveExpression	bb -> addr + bb -> size		836917	1		+			
ANR	839171	PtrMemberAccess	bb -> addr		836917	0					
ANR	839172	Identifier	bb		836917	0					
ANR	839173	Identifier	addr		836917	1					
ANR	839174	PtrMemberAccess	bb -> size		836917	1					
ANR	839175	Identifier	bb		836917	0					
ANR	839176	Identifier	size		836917	1					
ANR	839177	IdentifierDeclStatement	RAnalOp op ;	5675:4:164337:164347	836917	2	True				
ANR	839178	IdentifierDecl	op		836917	0					
ANR	839179	IdentifierDeclType	RAnalOp		836917	0					
ANR	839180	Identifier	op		836917	1					
ANR	839181	IdentifierDeclStatement	"int ret , bbs = end - pc ;"	5676:4:164353:164376	836917	3	True				
ANR	839182	IdentifierDecl	ret		836917	0					
ANR	839183	IdentifierDeclType	int		836917	0					
ANR	839184	Identifier	ret		836917	1					
ANR	839185	IdentifierDecl	bbs = end - pc		836917	1					
ANR	839186	IdentifierDeclType	int		836917	0					
ANR	839187	Identifier	bbs		836917	1					
ANR	839188	AssignmentExpression	bbs = end - pc		836917	2		=			
ANR	839189	Identifier	bbs		836917	0					
ANR	839190	AdditiveExpression	end - pc		836917	1		-			
ANR	839191	Identifier	end		836917	0					
ANR	839192	Identifier	pc		836917	1					
ANR	839193	IfStatement	if ( bbs < 1 || bbs > 0xfffff )		836917	4					
ANR	839194	Condition	bbs < 1 || bbs > 0xfffff	5677:8:164386:164409	836917	0	True				
ANR	839195	OrExpression	bbs < 1 || bbs > 0xfffff		836917	0		||			
ANR	839196	RelationalExpression	bbs < 1		836917	0		<			
ANR	839197	Identifier	bbs		836917	0					
ANR	839198	PrimaryExpression	1		836917	1					
ANR	839199	RelationalExpression	bbs > 0xfffff		836917	1		>			
ANR	839200	Identifier	bbs		836917	0					
ANR	839201	PrimaryExpression	0xfffff		836917	1					
ANR	839202	CompoundStatement		392:34:10873:10873	836917	1					
ANR	839203	ExpressionStatement	"eprintf ( ""Invalid block size\\n"" )"	5678:5:164419:164451	836917	0	True				
ANR	839204	CallExpression	"eprintf ( ""Invalid block size\\n"" )"		836917	0					
ANR	839205	Callee	eprintf		836917	0					
ANR	839206	Identifier	eprintf		836917	0					
ANR	839207	ArgumentList	"""Invalid block size\\n"""		836917	1					
ANR	839208	Argument	"""Invalid block size\\n"""		836917	0					
ANR	839209	PrimaryExpression	"""Invalid block size\\n"""		836917	0					
ANR	839210	IdentifierDeclStatement	"ut8 * buf = calloc ( 1 , bbs + 1 ) ;"	5681:4:164582:164612	836917	5	True				
ANR	839211	IdentifierDecl	"* buf = calloc ( 1 , bbs + 1 )"		836917	0					
ANR	839212	IdentifierDeclType	ut8 *		836917	0					
ANR	839213	Identifier	buf		836917	1					
ANR	839214	AssignmentExpression	"* buf = calloc ( 1 , bbs + 1 )"		836917	2		=			
ANR	839215	Identifier	buf		836917	0					
ANR	839216	CallExpression	"calloc ( 1 , bbs + 1 )"		836917	1					
ANR	839217	Callee	calloc		836917	0					
ANR	839218	Identifier	calloc		836917	0					
ANR	839219	ArgumentList	1		836917	1					
ANR	839220	Argument	1		836917	0					
ANR	839221	PrimaryExpression	1		836917	0					
ANR	839222	Argument	bbs + 1		836917	1					
ANR	839223	AdditiveExpression	bbs + 1		836917	0		+			
ANR	839224	Identifier	bbs		836917	0					
ANR	839225	PrimaryExpression	1		836917	1					
ANR	839226	IfStatement	if ( buf )		836917	6					
ANR	839227	Condition	buf	5682:8:164622:164624	836917	0	True				
ANR	839228	Identifier	buf		836917	0					
ANR	839229	CompoundStatement		397:13:11088:11088	836917	1					
ANR	839230	BreakStatement	break ;	5683:5:164634:164639	836917	0	True				
ANR	839231	ExpressionStatement	"r_io_read_at ( core -> io , pc , buf , bbs )"	5685:4:164651:164688	836917	7	True				
ANR	839232	CallExpression	"r_io_read_at ( core -> io , pc , buf , bbs )"		836917	0					
ANR	839233	Callee	r_io_read_at		836917	0					
ANR	839234	Identifier	r_io_read_at		836917	0					
ANR	839235	ArgumentList	core -> io		836917	1					
ANR	839236	Argument	core -> io		836917	0					
ANR	839237	PtrMemberAccess	core -> io		836917	0					
ANR	839238	Identifier	core		836917	0					
ANR	839239	Identifier	io		836917	1					
ANR	839240	Argument	pc		836917	1					
ANR	839241	Identifier	pc		836917	0					
ANR	839242	Argument	buf		836917	2					
ANR	839243	Identifier	buf		836917	0					
ANR	839244	Argument	bbs		836917	3					
ANR	839245	Identifier	bbs		836917	0					
ANR	839246	IdentifierDeclStatement	int left ;	5686:4:164694:164702	836917	8	True				
ANR	839247	IdentifierDecl	left		836917	0					
ANR	839248	IdentifierDeclType	int		836917	0					
ANR	839249	Identifier	left		836917	1					
ANR	839250	WhileStatement	while ( pc < end )		836917	9					
ANR	839251	Condition	pc < end	5687:11:164715:164722	836917	0	True				
ANR	839252	RelationalExpression	pc < end		836917	0		<			
ANR	839253	Identifier	pc		836917	0					
ANR	839254	Identifier	end		836917	1					
ANR	839255	CompoundStatement		402:21:11186:11186	836917	1					
ANR	839256	ExpressionStatement	"left = R_MIN ( end - pc , 32 )"	5688:5:164732:164759	836917	0	True				
ANR	839257	AssignmentExpression	"left = R_MIN ( end - pc , 32 )"		836917	0		=			
ANR	839258	Identifier	left		836917	0					
ANR	839259	CallExpression	"R_MIN ( end - pc , 32 )"		836917	1					
ANR	839260	Callee	R_MIN		836917	0					
ANR	839261	Identifier	R_MIN		836917	0					
ANR	839262	ArgumentList	end - pc		836917	1					
ANR	839263	Argument	end - pc		836917	0					
ANR	839264	AdditiveExpression	end - pc		836917	0		-			
ANR	839265	Identifier	end		836917	0					
ANR	839266	Identifier	pc		836917	1					
ANR	839267	Argument	32		836917	1					
ANR	839268	PrimaryExpression	32		836917	0					
ANR	839269	ExpressionStatement	"r_asm_set_pc ( core -> assembler , pc )"	5689:5:164766:164800	836917	1	True				
ANR	839270	CallExpression	"r_asm_set_pc ( core -> assembler , pc )"		836917	0					
ANR	839271	Callee	r_asm_set_pc		836917	0					
ANR	839272	Identifier	r_asm_set_pc		836917	0					
ANR	839273	ArgumentList	core -> assembler		836917	1					
ANR	839274	Argument	core -> assembler		836917	0					
ANR	839275	PtrMemberAccess	core -> assembler		836917	0					
ANR	839276	Identifier	core		836917	0					
ANR	839277	Identifier	assembler		836917	1					
ANR	839278	Argument	pc		836917	1					
ANR	839279	Identifier	pc		836917	0					
ANR	839280	ExpressionStatement	"ret = r_anal_op ( core -> anal , & op , pc , buf + pc - bb -> addr , left , R_ANAL_OP_MASK_HINT | R_ANAL_OP_MASK_ESIL )"	5690:5:164807:164914	836917	2	True				
ANR	839281	AssignmentExpression	"ret = r_anal_op ( core -> anal , & op , pc , buf + pc - bb -> addr , left , R_ANAL_OP_MASK_HINT | R_ANAL_OP_MASK_ESIL )"		836917	0		=			
ANR	839282	Identifier	ret		836917	0					
ANR	839283	CallExpression	"r_anal_op ( core -> anal , & op , pc , buf + pc - bb -> addr , left , R_ANAL_OP_MASK_HINT | R_ANAL_OP_MASK_ESIL )"		836917	1					
ANR	839284	Callee	r_anal_op		836917	0					
ANR	839285	Identifier	r_anal_op		836917	0					
ANR	839286	ArgumentList	core -> anal		836917	1					
ANR	839287	Argument	core -> anal		836917	0					
ANR	839288	PtrMemberAccess	core -> anal		836917	0					
ANR	839289	Identifier	core		836917	0					
ANR	839290	Identifier	anal		836917	1					
ANR	839291	Argument	& op		836917	1					
ANR	839292	UnaryOperationExpression	& op		836917	0					
ANR	839293	UnaryOperator	&		836917	0					
ANR	839294	Identifier	op		836917	1					
ANR	839295	Argument	pc		836917	2					
ANR	839296	Identifier	pc		836917	0					
ANR	839297	Argument	buf + pc - bb -> addr		836917	3					
ANR	839298	AdditiveExpression	buf + pc - bb -> addr		836917	0		+			
ANR	839299	Identifier	buf		836917	0					
ANR	839300	AdditiveExpression	pc - bb -> addr		836917	1		-			
ANR	839301	Identifier	pc		836917	0					
ANR	839302	PtrMemberAccess	bb -> addr		836917	1					
ANR	839303	Identifier	bb		836917	0					
ANR	839304	Identifier	addr		836917	1					
ANR	839305	Argument	left		836917	4					
ANR	839306	Identifier	left		836917	0					
ANR	839307	Argument	R_ANAL_OP_MASK_HINT | R_ANAL_OP_MASK_ESIL		836917	5					
ANR	839308	InclusiveOrExpression	R_ANAL_OP_MASK_HINT | R_ANAL_OP_MASK_ESIL		836917	0		|			
ANR	839309	Identifier	R_ANAL_OP_MASK_HINT		836917	0					
ANR	839310	Identifier	R_ANAL_OP_MASK_ESIL		836917	1					
ANR	839311	IfStatement	if ( op . type == R_ANAL_OP_TYPE_RET )		836917	3					
ANR	839312	Condition	op . type == R_ANAL_OP_TYPE_RET	5691:9:164942:164970	836917	0	True				
ANR	839313	EqualityExpression	op . type == R_ANAL_OP_TYPE_RET		836917	0		==			
ANR	839314	MemberAccess	op . type		836917	0					
ANR	839315	Identifier	op		836917	0					
ANR	839316	Identifier	type		836917	1					
ANR	839317	Identifier	R_ANAL_OP_TYPE_RET		836917	1					
ANR	839318	CompoundStatement		406:40:11434:11434	836917	1					
ANR	839319	BreakStatement	break ;	5692:6:164981:164986	836917	0	True				
ANR	839320	IfStatement	if ( ret )		836917	4					
ANR	839321	Condition	ret	5694:9:165004:165006	836917	0	True				
ANR	839322	Identifier	ret		836917	0					
ANR	839323	CompoundStatement		409:14:11470:11470	836917	1					
ANR	839324	ExpressionStatement	"r_reg_set_value_by_role ( core -> anal -> reg , R_REG_NAME_PC , pc )"	5695:6:165017:165077	836917	0	True				
ANR	839325	CallExpression	"r_reg_set_value_by_role ( core -> anal -> reg , R_REG_NAME_PC , pc )"		836917	0					
ANR	839326	Callee	r_reg_set_value_by_role		836917	0					
ANR	839327	Identifier	r_reg_set_value_by_role		836917	0					
ANR	839328	ArgumentList	core -> anal -> reg		836917	1					
ANR	839329	Argument	core -> anal -> reg		836917	0					
ANR	839330	PtrMemberAccess	core -> anal -> reg		836917	0					
ANR	839331	PtrMemberAccess	core -> anal		836917	0					
ANR	839332	Identifier	core		836917	0					
ANR	839333	Identifier	anal		836917	1					
ANR	839334	Identifier	reg		836917	1					
ANR	839335	Argument	R_REG_NAME_PC		836917	1					
ANR	839336	Identifier	R_REG_NAME_PC		836917	0					
ANR	839337	Argument	pc		836917	2					
ANR	839338	Identifier	pc		836917	0					
ANR	839339	ExpressionStatement	"r_anal_esil_parse ( esil , R_STRBUF_SAFEGET ( & op . esil ) )"	5696:6:165085:165138	836917	1	True				
ANR	839340	CallExpression	"r_anal_esil_parse ( esil , R_STRBUF_SAFEGET ( & op . esil ) )"		836917	0					
ANR	839341	Callee	r_anal_esil_parse		836917	0					
ANR	839342	Identifier	r_anal_esil_parse		836917	0					
ANR	839343	ArgumentList	esil		836917	1					
ANR	839344	Argument	esil		836917	0					
ANR	839345	Identifier	esil		836917	0					
ANR	839346	Argument	R_STRBUF_SAFEGET ( & op . esil )		836917	1					
ANR	839347	CallExpression	R_STRBUF_SAFEGET ( & op . esil )		836917	0					
ANR	839348	Callee	R_STRBUF_SAFEGET		836917	0					
ANR	839349	Identifier	R_STRBUF_SAFEGET		836917	0					
ANR	839350	ArgumentList	& op . esil		836917	1					
ANR	839351	Argument	& op . esil		836917	0					
ANR	839352	UnaryOperationExpression	& op . esil		836917	0					
ANR	839353	UnaryOperator	&		836917	0					
ANR	839354	MemberAccess	op . esil		836917	1					
ANR	839355	Identifier	op		836917	0					
ANR	839356	Identifier	esil		836917	1					
ANR	839357	ExpressionStatement	r_anal_esil_dumpstack ( esil )	5697:6:165146:165174	836917	2	True				
ANR	839358	CallExpression	r_anal_esil_dumpstack ( esil )		836917	0					
ANR	839359	Callee	r_anal_esil_dumpstack		836917	0					
ANR	839360	Identifier	r_anal_esil_dumpstack		836917	0					
ANR	839361	ArgumentList	esil		836917	1					
ANR	839362	Argument	esil		836917	0					
ANR	839363	Identifier	esil		836917	0					
ANR	839364	ExpressionStatement	r_anal_esil_stack_free ( esil )	5698:6:165182:165211	836917	3	True				
ANR	839365	CallExpression	r_anal_esil_stack_free ( esil )		836917	0					
ANR	839366	Callee	r_anal_esil_stack_free		836917	0					
ANR	839367	Identifier	r_anal_esil_stack_free		836917	0					
ANR	839368	ArgumentList	esil		836917	1					
ANR	839369	Argument	esil		836917	0					
ANR	839370	Identifier	esil		836917	0					
ANR	839371	ExpressionStatement	pc += op . size	5699:6:165219:165232	836917	4	True				
ANR	839372	AssignmentExpression	pc += op . size		836917	0		+=			
ANR	839373	Identifier	pc		836917	0					
ANR	839374	MemberAccess	op . size		836917	1					
ANR	839375	Identifier	op		836917	0					
ANR	839376	Identifier	size		836917	1					
ANR	839377	ElseStatement	else		836917	0					
ANR	839378	CompoundStatement		415:12:11707:11707	836917	0					
ANR	839379	ExpressionStatement	pc += 4	5701:6:165254:165261	836917	0	True				
ANR	839380	AssignmentExpression	pc += 4		836917	0		+=			
ANR	839381	Identifier	pc		836917	0					
ANR	839382	PrimaryExpression	4		836917	1					
ANR	839383	ExpressionStatement	free ( buf )	5704:4:165287:165297	836917	10	True				
ANR	839384	CallExpression	free ( buf )		836917	0					
ANR	839385	Callee	free		836917	0					
ANR	839386	Identifier	free		836917	0					
ANR	839387	ArgumentList	buf		836917	1					
ANR	839388	Argument	buf		836917	0					
ANR	839389	Identifier	buf		836917	0					
ANR	839390	ElseStatement	else		836917	0					
ANR	839391	CompoundStatement		421:9:11774:11774	836917	0					
ANR	839392	Statement	eprintf	5707:3:165318:165324	836917	0	True				
ANR	839393	Statement	(	5707:11:165326:165326	836917	1	True				
ANR	839394	Statement	"""Cannot find function at 0x%08"""	5707:12:165327:165357	836917	2	True				
ANR	839395	Statement	PFMT64x	5707:44:165359:165365	836917	3	True				
ANR	839396	Statement	"""\\n"""	5707:52:165367:165370	836917	4	True				
ANR	839397	Statement	","	5707:56:165371:165371	836917	5	True				
ANR	839398	Statement	core	5707:58:165373:165376	836917	6	True				
ANR	839399	Statement	->	5707:62:165377:165378	836917	7	True				
ANR	839400	Statement	offset	5707:64:165379:165384	836917	8	True				
ANR	839401	Statement	)	5707:70:165385:165385	836917	9	True				
ANR	839402	ExpressionStatement		5707:71:165386:165386	836917	10	True				
ANR	839403	BreakStatement	break ;	5709:3:165395:165400	836917	40	True				
ANR	839404	Label	case 't' :	5710:1:165403:165411	836917	41	True				
ANR	839405	SwitchStatement	switch ( input [ 1 ] )		836917	42					
ANR	839406	Condition	input [ 1 ]	5711:10:165432:165439	836917	0	True				
ANR	839407	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839408	Identifier	input		836917	0					
ANR	839409	PrimaryExpression	1		836917	1					
ANR	839410	CompoundStatement		426:20:11903:11903	836917	1					
ANR	839411	Label	case 'r' :	5712:2:165446:165454	836917	0	True				
ANR	839412	CompoundStatement		430:3:11959:12022	836917	1					
ANR	839413	IdentifierDeclStatement	"RAnalEsil * esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) ;"	5715:3:165498:165561	836917	0	True				
ANR	839414	IdentifierDecl	"* esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		836917	0					
ANR	839415	IdentifierDeclType	RAnalEsil *		836917	0					
ANR	839416	Identifier	esil		836917	1					
ANR	839417	AssignmentExpression	"* esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		836917	2		=			
ANR	839418	Identifier	esil		836917	0					
ANR	839419	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		836917	1					
ANR	839420	Callee	r_anal_esil_new		836917	0					
ANR	839421	Identifier	r_anal_esil_new		836917	0					
ANR	839422	ArgumentList	stacksize		836917	1					
ANR	839423	Argument	stacksize		836917	0					
ANR	839424	Identifier	stacksize		836917	0					
ANR	839425	Argument	iotrap		836917	1					
ANR	839426	Identifier	iotrap		836917	0					
ANR	839427	Argument	addrsize		836917	2					
ANR	839428	Identifier	addrsize		836917	0					
ANR	839429	IfStatement	if ( ! esil )		836917	1					
ANR	839430	Condition	! esil	5716:7:165570:165574	836917	0	True				
ANR	839431	UnaryOperationExpression	! esil		836917	0					
ANR	839432	UnaryOperator	!		836917	0					
ANR	839433	Identifier	esil		836917	1					
ANR	839434	CompoundStatement		431:14:12038:12038	836917	1					
ANR	839435	ReturnStatement	return ;	5717:4:165583:165589	836917	0	True				
ANR	839436	ExpressionStatement	"r_anal_esil_to_reil_setup ( esil , core -> anal , romem , stats )"	5719:3:165599:165657	836917	2	True				
ANR	839437	CallExpression	"r_anal_esil_to_reil_setup ( esil , core -> anal , romem , stats )"		836917	0					
ANR	839438	Callee	r_anal_esil_to_reil_setup		836917	0					
ANR	839439	Identifier	r_anal_esil_to_reil_setup		836917	0					
ANR	839440	ArgumentList	esil		836917	1					
ANR	839441	Argument	esil		836917	0					
ANR	839442	Identifier	esil		836917	0					
ANR	839443	Argument	core -> anal		836917	1					
ANR	839444	PtrMemberAccess	core -> anal		836917	0					
ANR	839445	Identifier	core		836917	0					
ANR	839446	Identifier	anal		836917	1					
ANR	839447	Argument	romem		836917	2					
ANR	839448	Identifier	romem		836917	0					
ANR	839449	Argument	stats		836917	3					
ANR	839450	Identifier	stats		836917	0					
ANR	839451	ExpressionStatement	"r_anal_esil_set_pc ( esil , core -> offset )"	5720:3:165662:165701	836917	3	True				
ANR	839452	CallExpression	"r_anal_esil_set_pc ( esil , core -> offset )"		836917	0					
ANR	839453	Callee	r_anal_esil_set_pc		836917	0					
ANR	839454	Identifier	r_anal_esil_set_pc		836917	0					
ANR	839455	ArgumentList	esil		836917	1					
ANR	839456	Argument	esil		836917	0					
ANR	839457	Identifier	esil		836917	0					
ANR	839458	Argument	core -> offset		836917	1					
ANR	839459	PtrMemberAccess	core -> offset		836917	0					
ANR	839460	Identifier	core		836917	0					
ANR	839461	Identifier	offset		836917	1					
ANR	839462	ExpressionStatement	"r_anal_esil_parse ( esil , input + 2 )"	5721:3:165706:165741	836917	4	True				
ANR	839463	CallExpression	"r_anal_esil_parse ( esil , input + 2 )"		836917	0					
ANR	839464	Callee	r_anal_esil_parse		836917	0					
ANR	839465	Identifier	r_anal_esil_parse		836917	0					
ANR	839466	ArgumentList	esil		836917	1					
ANR	839467	Argument	esil		836917	0					
ANR	839468	Identifier	esil		836917	0					
ANR	839469	Argument	input + 2		836917	1					
ANR	839470	AdditiveExpression	input + 2		836917	0		+			
ANR	839471	Identifier	input		836917	0					
ANR	839472	PrimaryExpression	2		836917	1					
ANR	839473	ExpressionStatement	r_anal_esil_dumpstack ( esil )	5722:3:165746:165774	836917	5	True				
ANR	839474	CallExpression	r_anal_esil_dumpstack ( esil )		836917	0					
ANR	839475	Callee	r_anal_esil_dumpstack		836917	0					
ANR	839476	Identifier	r_anal_esil_dumpstack		836917	0					
ANR	839477	ArgumentList	esil		836917	1					
ANR	839478	Argument	esil		836917	0					
ANR	839479	Identifier	esil		836917	0					
ANR	839480	ExpressionStatement	r_anal_esil_free ( esil )	5723:3:165779:165802	836917	6	True				
ANR	839481	CallExpression	r_anal_esil_free ( esil )		836917	0					
ANR	839482	Callee	r_anal_esil_free		836917	0					
ANR	839483	Identifier	r_anal_esil_free		836917	0					
ANR	839484	ArgumentList	esil		836917	1					
ANR	839485	Argument	esil		836917	0					
ANR	839486	Identifier	esil		836917	0					
ANR	839487	BreakStatement	break ;	5724:3:165807:165812	836917	7	True				
ANR	839488	Label	case 's' :	5726:2:165820:165828	836917	2	True				
ANR	839489	SwitchStatement	switch ( input [ 2 ] )		836917	3					
ANR	839490	Condition	input [ 2 ]	5727:11:165851:165858	836917	0	True				
ANR	839491	ArrayIndexing	input [ 2 ]		836917	0					
ANR	839492	Identifier	input		836917	0					
ANR	839493	PrimaryExpression	2		836917	1					
ANR	839494	CompoundStatement		442:21:12322:12322	836917	1					
ANR	839495	Label	case 0 :	5728:3:165866:165872	836917	0	True				
ANR	839496	ExpressionStatement	r_anal_esil_session_list ( esil )	5729:4:165878:165909	836917	1	True				
ANR	839497	CallExpression	r_anal_esil_session_list ( esil )		836917	0					
ANR	839498	Callee	r_anal_esil_session_list		836917	0					
ANR	839499	Identifier	r_anal_esil_session_list		836917	0					
ANR	839500	ArgumentList	esil		836917	1					
ANR	839501	Argument	esil		836917	0					
ANR	839502	Identifier	esil		836917	0					
ANR	839503	BreakStatement	break ;	5730:4:165915:165920	836917	2	True				
ANR	839504	Label	case '+' :	5731:3:165925:165933	836917	3	True				
ANR	839505	ExpressionStatement	r_anal_esil_session_add ( esil )	5732:4:165939:165969	836917	4	True				
ANR	839506	CallExpression	r_anal_esil_session_add ( esil )		836917	0					
ANR	839507	Callee	r_anal_esil_session_add		836917	0					
ANR	839508	Identifier	r_anal_esil_session_add		836917	0					
ANR	839509	ArgumentList	esil		836917	1					
ANR	839510	Argument	esil		836917	0					
ANR	839511	Identifier	esil		836917	0					
ANR	839512	BreakStatement	break ;	5733:4:165975:165980	836917	5	True				
ANR	839513	Label	default :	5734:3:165985:165992	836917	6	True				
ANR	839514	Identifier	default		836917	0					
ANR	839515	ExpressionStatement	"r_core_cmd_help ( core , help_msg_aets )"	5735:4:165998:166035	836917	7	True				
ANR	839516	CallExpression	"r_core_cmd_help ( core , help_msg_aets )"		836917	0					
ANR	839517	Callee	r_core_cmd_help		836917	0					
ANR	839518	Identifier	r_core_cmd_help		836917	0					
ANR	839519	ArgumentList	core		836917	1					
ANR	839520	Argument	core		836917	0					
ANR	839521	Identifier	core		836917	0					
ANR	839522	Argument	help_msg_aets		836917	1					
ANR	839523	Identifier	help_msg_aets		836917	0					
ANR	839524	BreakStatement	break ;	5736:4:166041:166046	836917	8	True				
ANR	839525	BreakStatement	break ;	5738:3:166056:166061	836917	4	True				
ANR	839526	Label	default :	5739:2:166065:166072	836917	5	True				
ANR	839527	Identifier	default		836917	0					
ANR	839528	ExpressionStatement	"eprintf ( ""Unknown command. Use `aetr`.\\n"" )"	5740:3:166077:166119	836917	6	True				
ANR	839529	CallExpression	"eprintf ( ""Unknown command. Use `aetr`.\\n"" )"		836917	0					
ANR	839530	Callee	eprintf		836917	0					
ANR	839531	Identifier	eprintf		836917	0					
ANR	839532	ArgumentList	"""Unknown command. Use `aetr`.\\n"""		836917	1					
ANR	839533	Argument	"""Unknown command. Use `aetr`.\\n"""		836917	0					
ANR	839534	PrimaryExpression	"""Unknown command. Use `aetr`.\\n"""		836917	0					
ANR	839535	BreakStatement	break ;	5741:3:166124:166129	836917	7	True				
ANR	839536	BreakStatement	break ;	5743:2:166137:166142	836917	43	True				
ANR	839537	Label	case 'A' :	5744:1:166145:166153	836917	44	True				
ANR	839538	IfStatement	if ( input [ 1 ] == '?' )		836917	45					
ANR	839539	Condition	input [ 1 ] == '?'	5745:6:166170:166184	836917	0	True				
ANR	839540	EqualityExpression	input [ 1 ] == '?'		836917	0		==			
ANR	839541	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839542	Identifier	input		836917	0					
ANR	839543	PrimaryExpression	1		836917	1					
ANR	839544	PrimaryExpression	'?'		836917	1					
ANR	839545	CompoundStatement		460:23:12648:12648	836917	1					
ANR	839546	ExpressionStatement	"r_core_cmd_help ( core , help_msg_aea )"	5746:3:166192:166228	836917	0	True				
ANR	839547	CallExpression	"r_core_cmd_help ( core , help_msg_aea )"		836917	0					
ANR	839548	Callee	r_core_cmd_help		836917	0					
ANR	839549	Identifier	r_core_cmd_help		836917	0					
ANR	839550	ArgumentList	core		836917	1					
ANR	839551	Argument	core		836917	0					
ANR	839552	Identifier	core		836917	0					
ANR	839553	Argument	help_msg_aea		836917	1					
ANR	839554	Identifier	help_msg_aea		836917	0					
ANR	839555	ElseStatement	else		836917	0					
ANR	839556	IfStatement	if ( input [ 1 ] == 'r' )		836917	0					
ANR	839557	Condition	input [ 1 ] == 'r'	5747:13:166243:166257	836917	0	True				
ANR	839558	EqualityExpression	input [ 1 ] == 'r'		836917	0		==			
ANR	839559	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839560	Identifier	input		836917	0					
ANR	839561	PrimaryExpression	1		836917	1					
ANR	839562	PrimaryExpression	'r'		836917	1					
ANR	839563	CompoundStatement		462:30:12721:12721	836917	1					
ANR	839564	ExpressionStatement	"cmd_aea ( core , 1 + ( 1 << 1 ) , core -> offset , r_num_math ( core -> num , input + 2 ) )"	5748:3:166265:166338	836917	0	True				
ANR	839565	CallExpression	"cmd_aea ( core , 1 + ( 1 << 1 ) , core -> offset , r_num_math ( core -> num , input + 2 ) )"		836917	0					
ANR	839566	Callee	cmd_aea		836917	0					
ANR	839567	Identifier	cmd_aea		836917	0					
ANR	839568	ArgumentList	core		836917	1					
ANR	839569	Argument	core		836917	0					
ANR	839570	Identifier	core		836917	0					
ANR	839571	Argument	1 + ( 1 << 1 )		836917	1					
ANR	839572	AdditiveExpression	1 + ( 1 << 1 )		836917	0		+			
ANR	839573	PrimaryExpression	1		836917	0					
ANR	839574	ShiftExpression	1 << 1		836917	1		<<			
ANR	839575	PrimaryExpression	1		836917	0					
ANR	839576	PrimaryExpression	1		836917	1					
ANR	839577	Argument	core -> offset		836917	2					
ANR	839578	PtrMemberAccess	core -> offset		836917	0					
ANR	839579	Identifier	core		836917	0					
ANR	839580	Identifier	offset		836917	1					
ANR	839581	Argument	"r_num_math ( core -> num , input + 2 )"		836917	3					
ANR	839582	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	0					
ANR	839583	Callee	r_num_math		836917	0					
ANR	839584	Identifier	r_num_math		836917	0					
ANR	839585	ArgumentList	core -> num		836917	1					
ANR	839586	Argument	core -> num		836917	0					
ANR	839587	PtrMemberAccess	core -> num		836917	0					
ANR	839588	Identifier	core		836917	0					
ANR	839589	Identifier	num		836917	1					
ANR	839590	Argument	input + 2		836917	1					
ANR	839591	AdditiveExpression	input + 2		836917	0		+			
ANR	839592	Identifier	input		836917	0					
ANR	839593	PrimaryExpression	2		836917	1					
ANR	839594	ElseStatement	else		836917	0					
ANR	839595	IfStatement	if ( input [ 1 ] == 'w' )		836917	0					
ANR	839596	Condition	input [ 1 ] == 'w'	5749:13:166353:166367	836917	0	True				
ANR	839597	EqualityExpression	input [ 1 ] == 'w'		836917	0		==			
ANR	839598	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839599	Identifier	input		836917	0					
ANR	839600	PrimaryExpression	1		836917	1					
ANR	839601	PrimaryExpression	'w'		836917	1					
ANR	839602	CompoundStatement		464:30:12831:12831	836917	1					
ANR	839603	ExpressionStatement	"cmd_aea ( core , 1 + ( 1 << 2 ) , core -> offset , r_num_math ( core -> num , input + 2 ) )"	5750:3:166375:166448	836917	0	True				
ANR	839604	CallExpression	"cmd_aea ( core , 1 + ( 1 << 2 ) , core -> offset , r_num_math ( core -> num , input + 2 ) )"		836917	0					
ANR	839605	Callee	cmd_aea		836917	0					
ANR	839606	Identifier	cmd_aea		836917	0					
ANR	839607	ArgumentList	core		836917	1					
ANR	839608	Argument	core		836917	0					
ANR	839609	Identifier	core		836917	0					
ANR	839610	Argument	1 + ( 1 << 2 )		836917	1					
ANR	839611	AdditiveExpression	1 + ( 1 << 2 )		836917	0		+			
ANR	839612	PrimaryExpression	1		836917	0					
ANR	839613	ShiftExpression	1 << 2		836917	1		<<			
ANR	839614	PrimaryExpression	1		836917	0					
ANR	839615	PrimaryExpression	2		836917	1					
ANR	839616	Argument	core -> offset		836917	2					
ANR	839617	PtrMemberAccess	core -> offset		836917	0					
ANR	839618	Identifier	core		836917	0					
ANR	839619	Identifier	offset		836917	1					
ANR	839620	Argument	"r_num_math ( core -> num , input + 2 )"		836917	3					
ANR	839621	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	0					
ANR	839622	Callee	r_num_math		836917	0					
ANR	839623	Identifier	r_num_math		836917	0					
ANR	839624	ArgumentList	core -> num		836917	1					
ANR	839625	Argument	core -> num		836917	0					
ANR	839626	PtrMemberAccess	core -> num		836917	0					
ANR	839627	Identifier	core		836917	0					
ANR	839628	Identifier	num		836917	1					
ANR	839629	Argument	input + 2		836917	1					
ANR	839630	AdditiveExpression	input + 2		836917	0		+			
ANR	839631	Identifier	input		836917	0					
ANR	839632	PrimaryExpression	2		836917	1					
ANR	839633	ElseStatement	else		836917	0					
ANR	839634	IfStatement	if ( input [ 1 ] == 'n' )		836917	0					
ANR	839635	Condition	input [ 1 ] == 'n'	5751:13:166463:166477	836917	0	True				
ANR	839636	EqualityExpression	input [ 1 ] == 'n'		836917	0		==			
ANR	839637	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839638	Identifier	input		836917	0					
ANR	839639	PrimaryExpression	1		836917	1					
ANR	839640	PrimaryExpression	'n'		836917	1					
ANR	839641	CompoundStatement		466:30:12941:12941	836917	1					
ANR	839642	ExpressionStatement	"cmd_aea ( core , 1 + ( 1 << 3 ) , core -> offset , r_num_math ( core -> num , input + 2 ) )"	5752:3:166485:166558	836917	0	True				
ANR	839643	CallExpression	"cmd_aea ( core , 1 + ( 1 << 3 ) , core -> offset , r_num_math ( core -> num , input + 2 ) )"		836917	0					
ANR	839644	Callee	cmd_aea		836917	0					
ANR	839645	Identifier	cmd_aea		836917	0					
ANR	839646	ArgumentList	core		836917	1					
ANR	839647	Argument	core		836917	0					
ANR	839648	Identifier	core		836917	0					
ANR	839649	Argument	1 + ( 1 << 3 )		836917	1					
ANR	839650	AdditiveExpression	1 + ( 1 << 3 )		836917	0		+			
ANR	839651	PrimaryExpression	1		836917	0					
ANR	839652	ShiftExpression	1 << 3		836917	1		<<			
ANR	839653	PrimaryExpression	1		836917	0					
ANR	839654	PrimaryExpression	3		836917	1					
ANR	839655	Argument	core -> offset		836917	2					
ANR	839656	PtrMemberAccess	core -> offset		836917	0					
ANR	839657	Identifier	core		836917	0					
ANR	839658	Identifier	offset		836917	1					
ANR	839659	Argument	"r_num_math ( core -> num , input + 2 )"		836917	3					
ANR	839660	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	0					
ANR	839661	Callee	r_num_math		836917	0					
ANR	839662	Identifier	r_num_math		836917	0					
ANR	839663	ArgumentList	core -> num		836917	1					
ANR	839664	Argument	core -> num		836917	0					
ANR	839665	PtrMemberAccess	core -> num		836917	0					
ANR	839666	Identifier	core		836917	0					
ANR	839667	Identifier	num		836917	1					
ANR	839668	Argument	input + 2		836917	1					
ANR	839669	AdditiveExpression	input + 2		836917	0		+			
ANR	839670	Identifier	input		836917	0					
ANR	839671	PrimaryExpression	2		836917	1					
ANR	839672	ElseStatement	else		836917	0					
ANR	839673	IfStatement	if ( input [ 1 ] == 'j' )		836917	0					
ANR	839674	Condition	input [ 1 ] == 'j'	5753:13:166573:166587	836917	0	True				
ANR	839675	EqualityExpression	input [ 1 ] == 'j'		836917	0		==			
ANR	839676	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839677	Identifier	input		836917	0					
ANR	839678	PrimaryExpression	1		836917	1					
ANR	839679	PrimaryExpression	'j'		836917	1					
ANR	839680	CompoundStatement		468:30:13051:13051	836917	1					
ANR	839681	ExpressionStatement	"cmd_aea ( core , 1 + ( 1 << 4 ) , core -> offset , r_num_math ( core -> num , input + 2 ) )"	5754:3:166595:166668	836917	0	True				
ANR	839682	CallExpression	"cmd_aea ( core , 1 + ( 1 << 4 ) , core -> offset , r_num_math ( core -> num , input + 2 ) )"		836917	0					
ANR	839683	Callee	cmd_aea		836917	0					
ANR	839684	Identifier	cmd_aea		836917	0					
ANR	839685	ArgumentList	core		836917	1					
ANR	839686	Argument	core		836917	0					
ANR	839687	Identifier	core		836917	0					
ANR	839688	Argument	1 + ( 1 << 4 )		836917	1					
ANR	839689	AdditiveExpression	1 + ( 1 << 4 )		836917	0		+			
ANR	839690	PrimaryExpression	1		836917	0					
ANR	839691	ShiftExpression	1 << 4		836917	1		<<			
ANR	839692	PrimaryExpression	1		836917	0					
ANR	839693	PrimaryExpression	4		836917	1					
ANR	839694	Argument	core -> offset		836917	2					
ANR	839695	PtrMemberAccess	core -> offset		836917	0					
ANR	839696	Identifier	core		836917	0					
ANR	839697	Identifier	offset		836917	1					
ANR	839698	Argument	"r_num_math ( core -> num , input + 2 )"		836917	3					
ANR	839699	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	0					
ANR	839700	Callee	r_num_math		836917	0					
ANR	839701	Identifier	r_num_math		836917	0					
ANR	839702	ArgumentList	core -> num		836917	1					
ANR	839703	Argument	core -> num		836917	0					
ANR	839704	PtrMemberAccess	core -> num		836917	0					
ANR	839705	Identifier	core		836917	0					
ANR	839706	Identifier	num		836917	1					
ANR	839707	Argument	input + 2		836917	1					
ANR	839708	AdditiveExpression	input + 2		836917	0		+			
ANR	839709	Identifier	input		836917	0					
ANR	839710	PrimaryExpression	2		836917	1					
ANR	839711	ElseStatement	else		836917	0					
ANR	839712	IfStatement	if ( input [ 1 ] == '*' )		836917	0					
ANR	839713	Condition	input [ 1 ] == '*'	5755:13:166683:166697	836917	0	True				
ANR	839714	EqualityExpression	input [ 1 ] == '*'		836917	0		==			
ANR	839715	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839716	Identifier	input		836917	0					
ANR	839717	PrimaryExpression	1		836917	1					
ANR	839718	PrimaryExpression	'*'		836917	1					
ANR	839719	CompoundStatement		470:30:13161:13161	836917	1					
ANR	839720	ExpressionStatement	"cmd_aea ( core , 1 + ( 1 << 5 ) , core -> offset , r_num_math ( core -> num , input + 2 ) )"	5756:3:166705:166778	836917	0	True				
ANR	839721	CallExpression	"cmd_aea ( core , 1 + ( 1 << 5 ) , core -> offset , r_num_math ( core -> num , input + 2 ) )"		836917	0					
ANR	839722	Callee	cmd_aea		836917	0					
ANR	839723	Identifier	cmd_aea		836917	0					
ANR	839724	ArgumentList	core		836917	1					
ANR	839725	Argument	core		836917	0					
ANR	839726	Identifier	core		836917	0					
ANR	839727	Argument	1 + ( 1 << 5 )		836917	1					
ANR	839728	AdditiveExpression	1 + ( 1 << 5 )		836917	0		+			
ANR	839729	PrimaryExpression	1		836917	0					
ANR	839730	ShiftExpression	1 << 5		836917	1		<<			
ANR	839731	PrimaryExpression	1		836917	0					
ANR	839732	PrimaryExpression	5		836917	1					
ANR	839733	Argument	core -> offset		836917	2					
ANR	839734	PtrMemberAccess	core -> offset		836917	0					
ANR	839735	Identifier	core		836917	0					
ANR	839736	Identifier	offset		836917	1					
ANR	839737	Argument	"r_num_math ( core -> num , input + 2 )"		836917	3					
ANR	839738	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	0					
ANR	839739	Callee	r_num_math		836917	0					
ANR	839740	Identifier	r_num_math		836917	0					
ANR	839741	ArgumentList	core -> num		836917	1					
ANR	839742	Argument	core -> num		836917	0					
ANR	839743	PtrMemberAccess	core -> num		836917	0					
ANR	839744	Identifier	core		836917	0					
ANR	839745	Identifier	num		836917	1					
ANR	839746	Argument	input + 2		836917	1					
ANR	839747	AdditiveExpression	input + 2		836917	0		+			
ANR	839748	Identifier	input		836917	0					
ANR	839749	PrimaryExpression	2		836917	1					
ANR	839750	ElseStatement	else		836917	0					
ANR	839751	IfStatement	if ( input [ 1 ] == 'f' )		836917	0					
ANR	839752	Condition	input [ 1 ] == 'f'	5757:13:166793:166807	836917	0	True				
ANR	839753	EqualityExpression	input [ 1 ] == 'f'		836917	0		==			
ANR	839754	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839755	Identifier	input		836917	0					
ANR	839756	PrimaryExpression	1		836917	1					
ANR	839757	PrimaryExpression	'f'		836917	1					
ANR	839758	CompoundStatement		473:3:13276:13345	836917	1					
ANR	839759	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 ) ;"	5758:3:166815:166884	836917	0	True				
ANR	839760	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		836917	0					
ANR	839761	IdentifierDeclType	RAnalFunction *		836917	0					
ANR	839762	Identifier	fcn		836917	1					
ANR	839763	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		836917	2		=			
ANR	839764	Identifier	fcn		836917	0					
ANR	839765	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		836917	1					
ANR	839766	Callee	r_anal_get_fcn_in		836917	0					
ANR	839767	Identifier	r_anal_get_fcn_in		836917	0					
ANR	839768	ArgumentList	core -> anal		836917	1					
ANR	839769	Argument	core -> anal		836917	0					
ANR	839770	PtrMemberAccess	core -> anal		836917	0					
ANR	839771	Identifier	core		836917	0					
ANR	839772	Identifier	anal		836917	1					
ANR	839773	Argument	core -> offset		836917	1					
ANR	839774	PtrMemberAccess	core -> offset		836917	0					
ANR	839775	Identifier	core		836917	0					
ANR	839776	Identifier	offset		836917	1					
ANR	839777	Argument	- 1		836917	2					
ANR	839778	UnaryOperationExpression	- 1		836917	0					
ANR	839779	UnaryOperator	-		836917	0					
ANR	839780	PrimaryExpression	1		836917	1					
ANR	839781	IfStatement	if ( fcn )		836917	1					
ANR	839782	Condition	fcn	5759:7:166893:166895	836917	0	True				
ANR	839783	Identifier	fcn		836917	0					
ANR	839784	CompoundStatement		474:12:13359:13359	836917	1					
ANR	839785	ExpressionStatement	"cmd_aea ( core , 1 , fcn -> addr , r_anal_fcn_size ( fcn ) )"	5760:4:166904:166955	836917	0	True				
ANR	839786	CallExpression	"cmd_aea ( core , 1 , fcn -> addr , r_anal_fcn_size ( fcn ) )"		836917	0					
ANR	839787	Callee	cmd_aea		836917	0					
ANR	839788	Identifier	cmd_aea		836917	0					
ANR	839789	ArgumentList	core		836917	1					
ANR	839790	Argument	core		836917	0					
ANR	839791	Identifier	core		836917	0					
ANR	839792	Argument	1		836917	1					
ANR	839793	PrimaryExpression	1		836917	0					
ANR	839794	Argument	fcn -> addr		836917	2					
ANR	839795	PtrMemberAccess	fcn -> addr		836917	0					
ANR	839796	Identifier	fcn		836917	0					
ANR	839797	Identifier	addr		836917	1					
ANR	839798	Argument	r_anal_fcn_size ( fcn )		836917	3					
ANR	839799	CallExpression	r_anal_fcn_size ( fcn )		836917	0					
ANR	839800	Callee	r_anal_fcn_size		836917	0					
ANR	839801	Identifier	r_anal_fcn_size		836917	0					
ANR	839802	ArgumentList	fcn		836917	1					
ANR	839803	Argument	fcn		836917	0					
ANR	839804	Identifier	fcn		836917	0					
ANR	839805	ElseStatement	else		836917	0					
ANR	839806	CompoundStatement		477:9:13432:13432	836917	0					
ANR	839807	ExpressionStatement	"cmd_aea ( core , 1 , core -> offset , ( int ) r_num_math ( core -> num , input + 2 ) )"	5763:3:166976:167045	836917	0	True				
ANR	839808	CallExpression	"cmd_aea ( core , 1 , core -> offset , ( int ) r_num_math ( core -> num , input + 2 ) )"		836917	0					
ANR	839809	Callee	cmd_aea		836917	0					
ANR	839810	Identifier	cmd_aea		836917	0					
ANR	839811	ArgumentList	core		836917	1					
ANR	839812	Argument	core		836917	0					
ANR	839813	Identifier	core		836917	0					
ANR	839814	Argument	1		836917	1					
ANR	839815	PrimaryExpression	1		836917	0					
ANR	839816	Argument	core -> offset		836917	2					
ANR	839817	PtrMemberAccess	core -> offset		836917	0					
ANR	839818	Identifier	core		836917	0					
ANR	839819	Identifier	offset		836917	1					
ANR	839820	Argument	"( int ) r_num_math ( core -> num , input + 2 )"		836917	3					
ANR	839821	CastExpression	"( int ) r_num_math ( core -> num , input + 2 )"		836917	0					
ANR	839822	CastTarget	int		836917	0					
ANR	839823	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	1					
ANR	839824	Callee	r_num_math		836917	0					
ANR	839825	Identifier	r_num_math		836917	0					
ANR	839826	ArgumentList	core -> num		836917	1					
ANR	839827	Argument	core -> num		836917	0					
ANR	839828	PtrMemberAccess	core -> num		836917	0					
ANR	839829	Identifier	core		836917	0					
ANR	839830	Identifier	num		836917	1					
ANR	839831	Argument	input + 2		836917	1					
ANR	839832	AdditiveExpression	input + 2		836917	0		+			
ANR	839833	Identifier	input		836917	0					
ANR	839834	PrimaryExpression	2		836917	1					
ANR	839835	BreakStatement	break ;	5765:2:167053:167058	836917	46	True				
ANR	839836	Label	case 'a' :	5766:1:167061:167069	836917	47	True				
ANR	839837	CompoundStatement		489:2:13687:13723	836917	48					
ANR	839838	IdentifierDeclStatement	RReg * reg = core -> anal -> reg ;	5768:2:167086:167113	836917	0	True				
ANR	839839	IdentifierDecl	* reg = core -> anal -> reg		836917	0					
ANR	839840	IdentifierDeclType	RReg *		836917	0					
ANR	839841	Identifier	reg		836917	1					
ANR	839842	AssignmentExpression	* reg = core -> anal -> reg		836917	2		=			
ANR	839843	Identifier	reg		836917	0					
ANR	839844	PtrMemberAccess	core -> anal -> reg		836917	1					
ANR	839845	PtrMemberAccess	core -> anal		836917	0					
ANR	839846	Identifier	core		836917	0					
ANR	839847	Identifier	anal		836917	1					
ANR	839848	Identifier	reg		836917	1					
ANR	839849	IdentifierDeclStatement	"ut64 pc = r_reg_getv ( reg , ""PC"" ) ;"	5769:2:167117:167149	836917	1	True				
ANR	839850	IdentifierDecl	"pc = r_reg_getv ( reg , ""PC"" )"		836917	0					
ANR	839851	IdentifierDeclType	ut64		836917	0					
ANR	839852	Identifier	pc		836917	1					
ANR	839853	AssignmentExpression	"pc = r_reg_getv ( reg , ""PC"" )"		836917	2		=			
ANR	839854	Identifier	pc		836917	0					
ANR	839855	CallExpression	"r_reg_getv ( reg , ""PC"" )"		836917	1					
ANR	839856	Callee	r_reg_getv		836917	0					
ANR	839857	Identifier	r_reg_getv		836917	0					
ANR	839858	ArgumentList	reg		836917	1					
ANR	839859	Argument	reg		836917	0					
ANR	839860	Identifier	reg		836917	0					
ANR	839861	Argument	"""PC"""		836917	1					
ANR	839862	PrimaryExpression	"""PC"""		836917	0					
ANR	839863	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , pc , 0 ) ;"	5770:2:167153:167195	836917	2	True				
ANR	839864	IdentifierDecl	"* op = r_core_anal_op ( core , pc , 0 )"		836917	0					
ANR	839865	IdentifierDeclType	RAnalOp *		836917	0					
ANR	839866	Identifier	op		836917	1					
ANR	839867	AssignmentExpression	"* op = r_core_anal_op ( core , pc , 0 )"		836917	2		=			
ANR	839868	Identifier	op		836917	0					
ANR	839869	CallExpression	"r_core_anal_op ( core , pc , 0 )"		836917	1					
ANR	839870	Callee	r_core_anal_op		836917	0					
ANR	839871	Identifier	r_core_anal_op		836917	0					
ANR	839872	ArgumentList	core		836917	1					
ANR	839873	Argument	core		836917	0					
ANR	839874	Identifier	core		836917	0					
ANR	839875	Argument	pc		836917	1					
ANR	839876	Identifier	pc		836917	0					
ANR	839877	Argument	0		836917	2					
ANR	839878	PrimaryExpression	0		836917	0					
ANR	839879	IfStatement	if ( ! op )		836917	3					
ANR	839880	Condition	! op	5771:6:167203:167205	836917	0	True				
ANR	839881	UnaryOperationExpression	! op		836917	0					
ANR	839882	UnaryOperator	!		836917	0					
ANR	839883	Identifier	op		836917	1					
ANR	839884	CompoundStatement		486:11:13669:13669	836917	1					
ANR	839885	BreakStatement	break ;	5772:3:167213:167218	836917	0	True				
ANR	839886	IdentifierDeclStatement	ut64 newPC = core -> offset + op -> size ;	5774:2:167226:167262	836917	4	True				
ANR	839887	IdentifierDecl	newPC = core -> offset + op -> size		836917	0					
ANR	839888	IdentifierDeclType	ut64		836917	0					
ANR	839889	Identifier	newPC		836917	1					
ANR	839890	AssignmentExpression	newPC = core -> offset + op -> size		836917	2		=			
ANR	839891	Identifier	newPC		836917	0					
ANR	839892	AdditiveExpression	core -> offset + op -> size		836917	1		+			
ANR	839893	PtrMemberAccess	core -> offset		836917	0					
ANR	839894	Identifier	core		836917	0					
ANR	839895	Identifier	offset		836917	1					
ANR	839896	PtrMemberAccess	op -> size		836917	1					
ANR	839897	Identifier	op		836917	0					
ANR	839898	Identifier	size		836917	1					
ANR	839899	ExpressionStatement	"r_reg_setv ( reg , ""PC"" , newPC )"	5775:2:167266:167295	836917	5	True				
ANR	839900	CallExpression	"r_reg_setv ( reg , ""PC"" , newPC )"		836917	0					
ANR	839901	Callee	r_reg_setv		836917	0					
ANR	839902	Identifier	r_reg_setv		836917	0					
ANR	839903	ArgumentList	reg		836917	1					
ANR	839904	Argument	reg		836917	0					
ANR	839905	Identifier	reg		836917	0					
ANR	839906	Argument	"""PC"""		836917	1					
ANR	839907	PrimaryExpression	"""PC"""		836917	0					
ANR	839908	Argument	newPC		836917	2					
ANR	839909	Identifier	newPC		836917	0					
ANR	839910	IfStatement	if ( input [ 1 ] == '?' )		836917	6					
ANR	839911	Condition	input [ 1 ] == '?'	5776:6:167303:167317	836917	0	True				
ANR	839912	EqualityExpression	input [ 1 ] == '?'		836917	0		==			
ANR	839913	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839914	Identifier	input		836917	0					
ANR	839915	PrimaryExpression	1		836917	1					
ANR	839916	PrimaryExpression	'?'		836917	1					
ANR	839917	CompoundStatement		491:23:13781:13781	836917	1					
ANR	839918	ExpressionStatement	"r_core_cmd_help ( core , help_msg_aea )"	5777:3:167325:167361	836917	0	True				
ANR	839919	CallExpression	"r_core_cmd_help ( core , help_msg_aea )"		836917	0					
ANR	839920	Callee	r_core_cmd_help		836917	0					
ANR	839921	Identifier	r_core_cmd_help		836917	0					
ANR	839922	ArgumentList	core		836917	1					
ANR	839923	Argument	core		836917	0					
ANR	839924	Identifier	core		836917	0					
ANR	839925	Argument	help_msg_aea		836917	1					
ANR	839926	Identifier	help_msg_aea		836917	0					
ANR	839927	ElseStatement	else		836917	0					
ANR	839928	IfStatement	if ( input [ 1 ] == 'r' )		836917	0					
ANR	839929	Condition	input [ 1 ] == 'r'	5778:13:167376:167390	836917	0	True				
ANR	839930	EqualityExpression	input [ 1 ] == 'r'		836917	0		==			
ANR	839931	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839932	Identifier	input		836917	0					
ANR	839933	PrimaryExpression	1		836917	1					
ANR	839934	PrimaryExpression	'r'		836917	1					
ANR	839935	CompoundStatement		493:30:13854:13854	836917	1					
ANR	839936	ExpressionStatement	"cmd_aea ( core , 1 << 1 , core -> offset , r_num_math ( core -> num , input + 2 ) )"	5779:3:167398:167465	836917	0	True				
ANR	839937	CallExpression	"cmd_aea ( core , 1 << 1 , core -> offset , r_num_math ( core -> num , input + 2 ) )"		836917	0					
ANR	839938	Callee	cmd_aea		836917	0					
ANR	839939	Identifier	cmd_aea		836917	0					
ANR	839940	ArgumentList	core		836917	1					
ANR	839941	Argument	core		836917	0					
ANR	839942	Identifier	core		836917	0					
ANR	839943	Argument	1 << 1		836917	1					
ANR	839944	ShiftExpression	1 << 1		836917	0		<<			
ANR	839945	PrimaryExpression	1		836917	0					
ANR	839946	PrimaryExpression	1		836917	1					
ANR	839947	Argument	core -> offset		836917	2					
ANR	839948	PtrMemberAccess	core -> offset		836917	0					
ANR	839949	Identifier	core		836917	0					
ANR	839950	Identifier	offset		836917	1					
ANR	839951	Argument	"r_num_math ( core -> num , input + 2 )"		836917	3					
ANR	839952	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	0					
ANR	839953	Callee	r_num_math		836917	0					
ANR	839954	Identifier	r_num_math		836917	0					
ANR	839955	ArgumentList	core -> num		836917	1					
ANR	839956	Argument	core -> num		836917	0					
ANR	839957	PtrMemberAccess	core -> num		836917	0					
ANR	839958	Identifier	core		836917	0					
ANR	839959	Identifier	num		836917	1					
ANR	839960	Argument	input + 2		836917	1					
ANR	839961	AdditiveExpression	input + 2		836917	0		+			
ANR	839962	Identifier	input		836917	0					
ANR	839963	PrimaryExpression	2		836917	1					
ANR	839964	ElseStatement	else		836917	0					
ANR	839965	IfStatement	if ( input [ 1 ] == 'w' )		836917	0					
ANR	839966	Condition	input [ 1 ] == 'w'	5780:13:167480:167494	836917	0	True				
ANR	839967	EqualityExpression	input [ 1 ] == 'w'		836917	0		==			
ANR	839968	ArrayIndexing	input [ 1 ]		836917	0					
ANR	839969	Identifier	input		836917	0					
ANR	839970	PrimaryExpression	1		836917	1					
ANR	839971	PrimaryExpression	'w'		836917	1					
ANR	839972	CompoundStatement		495:30:13958:13958	836917	1					
ANR	839973	ExpressionStatement	"cmd_aea ( core , 1 << 2 , core -> offset , r_num_math ( core -> num , input + 2 ) )"	5781:3:167502:167569	836917	0	True				
ANR	839974	CallExpression	"cmd_aea ( core , 1 << 2 , core -> offset , r_num_math ( core -> num , input + 2 ) )"		836917	0					
ANR	839975	Callee	cmd_aea		836917	0					
ANR	839976	Identifier	cmd_aea		836917	0					
ANR	839977	ArgumentList	core		836917	1					
ANR	839978	Argument	core		836917	0					
ANR	839979	Identifier	core		836917	0					
ANR	839980	Argument	1 << 2		836917	1					
ANR	839981	ShiftExpression	1 << 2		836917	0		<<			
ANR	839982	PrimaryExpression	1		836917	0					
ANR	839983	PrimaryExpression	2		836917	1					
ANR	839984	Argument	core -> offset		836917	2					
ANR	839985	PtrMemberAccess	core -> offset		836917	0					
ANR	839986	Identifier	core		836917	0					
ANR	839987	Identifier	offset		836917	1					
ANR	839988	Argument	"r_num_math ( core -> num , input + 2 )"		836917	3					
ANR	839989	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	0					
ANR	839990	Callee	r_num_math		836917	0					
ANR	839991	Identifier	r_num_math		836917	0					
ANR	839992	ArgumentList	core -> num		836917	1					
ANR	839993	Argument	core -> num		836917	0					
ANR	839994	PtrMemberAccess	core -> num		836917	0					
ANR	839995	Identifier	core		836917	0					
ANR	839996	Identifier	num		836917	1					
ANR	839997	Argument	input + 2		836917	1					
ANR	839998	AdditiveExpression	input + 2		836917	0		+			
ANR	839999	Identifier	input		836917	0					
ANR	840000	PrimaryExpression	2		836917	1					
ANR	840001	ElseStatement	else		836917	0					
ANR	840002	IfStatement	if ( input [ 1 ] == 'n' )		836917	0					
ANR	840003	Condition	input [ 1 ] == 'n'	5782:13:167584:167598	836917	0	True				
ANR	840004	EqualityExpression	input [ 1 ] == 'n'		836917	0		==			
ANR	840005	ArrayIndexing	input [ 1 ]		836917	0					
ANR	840006	Identifier	input		836917	0					
ANR	840007	PrimaryExpression	1		836917	1					
ANR	840008	PrimaryExpression	'n'		836917	1					
ANR	840009	CompoundStatement		497:30:14062:14062	836917	1					
ANR	840010	ExpressionStatement	"cmd_aea ( core , 1 << 3 , core -> offset , r_num_math ( core -> num , input + 2 ) )"	5783:3:167606:167673	836917	0	True				
ANR	840011	CallExpression	"cmd_aea ( core , 1 << 3 , core -> offset , r_num_math ( core -> num , input + 2 ) )"		836917	0					
ANR	840012	Callee	cmd_aea		836917	0					
ANR	840013	Identifier	cmd_aea		836917	0					
ANR	840014	ArgumentList	core		836917	1					
ANR	840015	Argument	core		836917	0					
ANR	840016	Identifier	core		836917	0					
ANR	840017	Argument	1 << 3		836917	1					
ANR	840018	ShiftExpression	1 << 3		836917	0		<<			
ANR	840019	PrimaryExpression	1		836917	0					
ANR	840020	PrimaryExpression	3		836917	1					
ANR	840021	Argument	core -> offset		836917	2					
ANR	840022	PtrMemberAccess	core -> offset		836917	0					
ANR	840023	Identifier	core		836917	0					
ANR	840024	Identifier	offset		836917	1					
ANR	840025	Argument	"r_num_math ( core -> num , input + 2 )"		836917	3					
ANR	840026	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	0					
ANR	840027	Callee	r_num_math		836917	0					
ANR	840028	Identifier	r_num_math		836917	0					
ANR	840029	ArgumentList	core -> num		836917	1					
ANR	840030	Argument	core -> num		836917	0					
ANR	840031	PtrMemberAccess	core -> num		836917	0					
ANR	840032	Identifier	core		836917	0					
ANR	840033	Identifier	num		836917	1					
ANR	840034	Argument	input + 2		836917	1					
ANR	840035	AdditiveExpression	input + 2		836917	0		+			
ANR	840036	Identifier	input		836917	0					
ANR	840037	PrimaryExpression	2		836917	1					
ANR	840038	ElseStatement	else		836917	0					
ANR	840039	IfStatement	if ( input [ 1 ] == 'j' )		836917	0					
ANR	840040	Condition	input [ 1 ] == 'j'	5784:13:167688:167702	836917	0	True				
ANR	840041	EqualityExpression	input [ 1 ] == 'j'		836917	0		==			
ANR	840042	ArrayIndexing	input [ 1 ]		836917	0					
ANR	840043	Identifier	input		836917	0					
ANR	840044	PrimaryExpression	1		836917	1					
ANR	840045	PrimaryExpression	'j'		836917	1					
ANR	840046	CompoundStatement		499:30:14166:14166	836917	1					
ANR	840047	ExpressionStatement	"cmd_aea ( core , 1 << 4 , core -> offset , r_num_math ( core -> num , input + 2 ) )"	5785:3:167710:167777	836917	0	True				
ANR	840048	CallExpression	"cmd_aea ( core , 1 << 4 , core -> offset , r_num_math ( core -> num , input + 2 ) )"		836917	0					
ANR	840049	Callee	cmd_aea		836917	0					
ANR	840050	Identifier	cmd_aea		836917	0					
ANR	840051	ArgumentList	core		836917	1					
ANR	840052	Argument	core		836917	0					
ANR	840053	Identifier	core		836917	0					
ANR	840054	Argument	1 << 4		836917	1					
ANR	840055	ShiftExpression	1 << 4		836917	0		<<			
ANR	840056	PrimaryExpression	1		836917	0					
ANR	840057	PrimaryExpression	4		836917	1					
ANR	840058	Argument	core -> offset		836917	2					
ANR	840059	PtrMemberAccess	core -> offset		836917	0					
ANR	840060	Identifier	core		836917	0					
ANR	840061	Identifier	offset		836917	1					
ANR	840062	Argument	"r_num_math ( core -> num , input + 2 )"		836917	3					
ANR	840063	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	0					
ANR	840064	Callee	r_num_math		836917	0					
ANR	840065	Identifier	r_num_math		836917	0					
ANR	840066	ArgumentList	core -> num		836917	1					
ANR	840067	Argument	core -> num		836917	0					
ANR	840068	PtrMemberAccess	core -> num		836917	0					
ANR	840069	Identifier	core		836917	0					
ANR	840070	Identifier	num		836917	1					
ANR	840071	Argument	input + 2		836917	1					
ANR	840072	AdditiveExpression	input + 2		836917	0		+			
ANR	840073	Identifier	input		836917	0					
ANR	840074	PrimaryExpression	2		836917	1					
ANR	840075	ElseStatement	else		836917	0					
ANR	840076	IfStatement	if ( input [ 1 ] == '*' )		836917	0					
ANR	840077	Condition	input [ 1 ] == '*'	5786:13:167792:167806	836917	0	True				
ANR	840078	EqualityExpression	input [ 1 ] == '*'		836917	0		==			
ANR	840079	ArrayIndexing	input [ 1 ]		836917	0					
ANR	840080	Identifier	input		836917	0					
ANR	840081	PrimaryExpression	1		836917	1					
ANR	840082	PrimaryExpression	'*'		836917	1					
ANR	840083	CompoundStatement		501:30:14270:14270	836917	1					
ANR	840084	ExpressionStatement	"cmd_aea ( core , 1 << 5 , core -> offset , r_num_math ( core -> num , input + 2 ) )"	5787:3:167814:167881	836917	0	True				
ANR	840085	CallExpression	"cmd_aea ( core , 1 << 5 , core -> offset , r_num_math ( core -> num , input + 2 ) )"		836917	0					
ANR	840086	Callee	cmd_aea		836917	0					
ANR	840087	Identifier	cmd_aea		836917	0					
ANR	840088	ArgumentList	core		836917	1					
ANR	840089	Argument	core		836917	0					
ANR	840090	Identifier	core		836917	0					
ANR	840091	Argument	1 << 5		836917	1					
ANR	840092	ShiftExpression	1 << 5		836917	0		<<			
ANR	840093	PrimaryExpression	1		836917	0					
ANR	840094	PrimaryExpression	5		836917	1					
ANR	840095	Argument	core -> offset		836917	2					
ANR	840096	PtrMemberAccess	core -> offset		836917	0					
ANR	840097	Identifier	core		836917	0					
ANR	840098	Identifier	offset		836917	1					
ANR	840099	Argument	"r_num_math ( core -> num , input + 2 )"		836917	3					
ANR	840100	CallExpression	"r_num_math ( core -> num , input + 2 )"		836917	0					
ANR	840101	Callee	r_num_math		836917	0					
ANR	840102	Identifier	r_num_math		836917	0					
ANR	840103	ArgumentList	core -> num		836917	1					
ANR	840104	Argument	core -> num		836917	0					
ANR	840105	PtrMemberAccess	core -> num		836917	0					
ANR	840106	Identifier	core		836917	0					
ANR	840107	Identifier	num		836917	1					
ANR	840108	Argument	input + 2		836917	1					
ANR	840109	AdditiveExpression	input + 2		836917	0		+			
ANR	840110	Identifier	input		836917	0					
ANR	840111	PrimaryExpression	2		836917	1					
ANR	840112	ElseStatement	else		836917	0					
ANR	840113	IfStatement	if ( input [ 1 ] == 'f' )		836917	0					
ANR	840114	Condition	input [ 1 ] == 'f'	5788:13:167896:167910	836917	0	True				
ANR	840115	EqualityExpression	input [ 1 ] == 'f'		836917	0		==			
ANR	840116	ArrayIndexing	input [ 1 ]		836917	0					
ANR	840117	Identifier	input		836917	0					
ANR	840118	PrimaryExpression	1		836917	1					
ANR	840119	PrimaryExpression	'f'		836917	1					
ANR	840120	CompoundStatement		504:3:14379:14448	836917	1					
ANR	840121	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 ) ;"	5789:3:167918:167987	836917	0	True				
ANR	840122	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		836917	0					
ANR	840123	IdentifierDeclType	RAnalFunction *		836917	0					
ANR	840124	Identifier	fcn		836917	1					
ANR	840125	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		836917	2		=			
ANR	840126	Identifier	fcn		836917	0					
ANR	840127	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		836917	1					
ANR	840128	Callee	r_anal_get_fcn_in		836917	0					
ANR	840129	Identifier	r_anal_get_fcn_in		836917	0					
ANR	840130	ArgumentList	core -> anal		836917	1					
ANR	840131	Argument	core -> anal		836917	0					
ANR	840132	PtrMemberAccess	core -> anal		836917	0					
ANR	840133	Identifier	core		836917	0					
ANR	840134	Identifier	anal		836917	1					
ANR	840135	Argument	core -> offset		836917	1					
ANR	840136	PtrMemberAccess	core -> offset		836917	0					
ANR	840137	Identifier	core		836917	0					
ANR	840138	Identifier	offset		836917	1					
ANR	840139	Argument	- 1		836917	2					
ANR	840140	UnaryOperationExpression	- 1		836917	0					
ANR	840141	UnaryOperator	-		836917	0					
ANR	840142	PrimaryExpression	1		836917	1					
ANR	840143	IfStatement	if ( fcn )		836917	1					
ANR	840144	Condition	fcn	5791:7:168031:168033	836917	0	True				
ANR	840145	Identifier	fcn		836917	0					
ANR	840146	CompoundStatement		506:12:14497:14497	836917	1					
ANR	840147	SwitchStatement	switch ( input [ 2 ] )		836917	0					
ANR	840148	Condition	input [ 2 ]	5792:12:168050:168057	836917	0	True				
ANR	840149	ArrayIndexing	input [ 2 ]		836917	0					
ANR	840150	Identifier	input		836917	0					
ANR	840151	PrimaryExpression	2		836917	1					
ANR	840152	CompoundStatement		507:22:14521:14521	836917	1					
ANR	840153	Label	case 'j' :	5793:4:168066:168074	836917	0	True				
ANR	840154	ExpressionStatement	"cmd_aea ( core , 1 << 4 , fcn -> addr , r_anal_fcn_size ( fcn ) )"	5794:5:168092:168146	836917	1	True				
ANR	840155	CallExpression	"cmd_aea ( core , 1 << 4 , fcn -> addr , r_anal_fcn_size ( fcn ) )"		836917	0					
ANR	840156	Callee	cmd_aea		836917	0					
ANR	840157	Identifier	cmd_aea		836917	0					
ANR	840158	ArgumentList	core		836917	1					
ANR	840159	Argument	core		836917	0					
ANR	840160	Identifier	core		836917	0					
ANR	840161	Argument	1 << 4		836917	1					
ANR	840162	ShiftExpression	1 << 4		836917	0		<<			
ANR	840163	PrimaryExpression	1		836917	0					
ANR	840164	PrimaryExpression	4		836917	1					
ANR	840165	Argument	fcn -> addr		836917	2					
ANR	840166	PtrMemberAccess	fcn -> addr		836917	0					
ANR	840167	Identifier	fcn		836917	0					
ANR	840168	Identifier	addr		836917	1					
ANR	840169	Argument	r_anal_fcn_size ( fcn )		836917	3					
ANR	840170	CallExpression	r_anal_fcn_size ( fcn )		836917	0					
ANR	840171	Callee	r_anal_fcn_size		836917	0					
ANR	840172	Identifier	r_anal_fcn_size		836917	0					
ANR	840173	ArgumentList	fcn		836917	1					
ANR	840174	Argument	fcn		836917	0					
ANR	840175	Identifier	fcn		836917	0					
ANR	840176	BreakStatement	break ;	5795:5:168153:168158	836917	2	True				
ANR	840177	Label	default :	5796:4:168164:168171	836917	3	True				
ANR	840178	Identifier	default		836917	0					
ANR	840179	ExpressionStatement	"cmd_aea ( core , 1 , fcn -> addr , r_anal_fcn_size ( fcn ) )"	5797:5:168178:168229	836917	4	True				
ANR	840180	CallExpression	"cmd_aea ( core , 1 , fcn -> addr , r_anal_fcn_size ( fcn ) )"		836917	0					
ANR	840181	Callee	cmd_aea		836917	0					
ANR	840182	Identifier	cmd_aea		836917	0					
ANR	840183	ArgumentList	core		836917	1					
ANR	840184	Argument	core		836917	0					
ANR	840185	Identifier	core		836917	0					
ANR	840186	Argument	1		836917	1					
ANR	840187	PrimaryExpression	1		836917	0					
ANR	840188	Argument	fcn -> addr		836917	2					
ANR	840189	PtrMemberAccess	fcn -> addr		836917	0					
ANR	840190	Identifier	fcn		836917	0					
ANR	840191	Identifier	addr		836917	1					
ANR	840192	Argument	r_anal_fcn_size ( fcn )		836917	3					
ANR	840193	CallExpression	r_anal_fcn_size ( fcn )		836917	0					
ANR	840194	Callee	r_anal_fcn_size		836917	0					
ANR	840195	Identifier	r_anal_fcn_size		836917	0					
ANR	840196	ArgumentList	fcn		836917	1					
ANR	840197	Argument	fcn		836917	0					
ANR	840198	Identifier	fcn		836917	0					
ANR	840199	BreakStatement	break ;	5798:5:168236:168241	836917	5	True				
ANR	840200	BreakStatement	break ;	5800:4:168253:168258	836917	1	True				
ANR	840201	ElseStatement	else		836917	0					
ANR	840202	IfStatement	if ( input [ 1 ] == 'b' )		836917	0					
ANR	840203	Condition	input [ 1 ] == 'b'	5802:13:168278:168292	836917	0	True				
ANR	840204	EqualityExpression	input [ 1 ] == 'b'		836917	0		==			
ANR	840205	ArrayIndexing	input [ 1 ]		836917	0					
ANR	840206	Identifier	input		836917	0					
ANR	840207	PrimaryExpression	1		836917	1					
ANR	840208	PrimaryExpression	'b'		836917	1					
ANR	840209	CompoundStatement		518:3:14771:14836	836917	1					
ANR	840210	IdentifierDeclStatement	"RAnalBlock * bb = r_anal_bb_from_offset ( core -> anal , core -> offset ) ;"	5803:3:168310:168375	836917	0	True				
ANR	840211	IdentifierDecl	"* bb = r_anal_bb_from_offset ( core -> anal , core -> offset )"		836917	0					
ANR	840212	IdentifierDeclType	RAnalBlock *		836917	0					
ANR	840213	Identifier	bb		836917	1					
ANR	840214	AssignmentExpression	"* bb = r_anal_bb_from_offset ( core -> anal , core -> offset )"		836917	2		=			
ANR	840215	Identifier	bb		836917	0					
ANR	840216	CallExpression	"r_anal_bb_from_offset ( core -> anal , core -> offset )"		836917	1					
ANR	840217	Callee	r_anal_bb_from_offset		836917	0					
ANR	840218	Identifier	r_anal_bb_from_offset		836917	0					
ANR	840219	ArgumentList	core -> anal		836917	1					
ANR	840220	Argument	core -> anal		836917	0					
ANR	840221	PtrMemberAccess	core -> anal		836917	0					
ANR	840222	Identifier	core		836917	0					
ANR	840223	Identifier	anal		836917	1					
ANR	840224	Argument	core -> offset		836917	1					
ANR	840225	PtrMemberAccess	core -> offset		836917	0					
ANR	840226	Identifier	core		836917	0					
ANR	840227	Identifier	offset		836917	1					
ANR	840228	IfStatement	if ( bb )		836917	1					
ANR	840229	Condition	bb	5804:7:168384:168385	836917	0	True				
ANR	840230	Identifier	bb		836917	0					
ANR	840231	CompoundStatement		519:11:14849:14849	836917	1					
ANR	840232	SwitchStatement	switch ( input [ 2 ] )		836917	0					
ANR	840233	Condition	input [ 2 ]	5805:12:168402:168409	836917	0	True				
ANR	840234	ArrayIndexing	input [ 2 ]		836917	0					
ANR	840235	Identifier	input		836917	0					
ANR	840236	PrimaryExpression	2		836917	1					
ANR	840237	CompoundStatement		520:22:14873:14873	836917	1					
ANR	840238	Label	case 'j' :	5806:4:168418:168426	836917	0	True				
ANR	840239	ExpressionStatement	"cmd_aea ( core , 1 << 4 , bb -> addr , bb -> size )"	5807:5:168444:168484	836917	1	True				
ANR	840240	CallExpression	"cmd_aea ( core , 1 << 4 , bb -> addr , bb -> size )"		836917	0					
ANR	840241	Callee	cmd_aea		836917	0					
ANR	840242	Identifier	cmd_aea		836917	0					
ANR	840243	ArgumentList	core		836917	1					
ANR	840244	Argument	core		836917	0					
ANR	840245	Identifier	core		836917	0					
ANR	840246	Argument	1 << 4		836917	1					
ANR	840247	ShiftExpression	1 << 4		836917	0		<<			
ANR	840248	PrimaryExpression	1		836917	0					
ANR	840249	PrimaryExpression	4		836917	1					
ANR	840250	Argument	bb -> addr		836917	2					
ANR	840251	PtrMemberAccess	bb -> addr		836917	0					
ANR	840252	Identifier	bb		836917	0					
ANR	840253	Identifier	addr		836917	1					
ANR	840254	Argument	bb -> size		836917	3					
ANR	840255	PtrMemberAccess	bb -> size		836917	0					
ANR	840256	Identifier	bb		836917	0					
ANR	840257	Identifier	size		836917	1					
ANR	840258	BreakStatement	break ;	5808:5:168491:168496	836917	2	True				
ANR	840259	Label	default :	5809:4:168502:168509	836917	3	True				
ANR	840260	Identifier	default		836917	0					
ANR	840261	ExpressionStatement	"cmd_aea ( core , 1 , bb -> addr , bb -> size )"	5810:5:168516:168553	836917	4	True				
ANR	840262	CallExpression	"cmd_aea ( core , 1 , bb -> addr , bb -> size )"		836917	0					
ANR	840263	Callee	cmd_aea		836917	0					
ANR	840264	Identifier	cmd_aea		836917	0					
ANR	840265	ArgumentList	core		836917	1					
ANR	840266	Argument	core		836917	0					
ANR	840267	Identifier	core		836917	0					
ANR	840268	Argument	1		836917	1					
ANR	840269	PrimaryExpression	1		836917	0					
ANR	840270	Argument	bb -> addr		836917	2					
ANR	840271	PtrMemberAccess	bb -> addr		836917	0					
ANR	840272	Identifier	bb		836917	0					
ANR	840273	Identifier	addr		836917	1					
ANR	840274	Argument	bb -> size		836917	3					
ANR	840275	PtrMemberAccess	bb -> size		836917	0					
ANR	840276	Identifier	bb		836917	0					
ANR	840277	Identifier	size		836917	1					
ANR	840278	BreakStatement	break ;	5811:5:168560:168565	836917	5	True				
ANR	840279	ElseStatement	else		836917	0					
ANR	840280	CompoundStatement		531:3:15099:15137	836917	0					
ANR	840281	IdentifierDeclStatement	"const char * arg = input [ 1 ] ? input + 2 : """" ;"	5815:3:168592:168633	836917	0	True				
ANR	840282	IdentifierDecl	"* arg = input [ 1 ] ? input + 2 : """""		836917	0					
ANR	840283	IdentifierDeclType	const char *		836917	0					
ANR	840284	Identifier	arg		836917	1					
ANR	840285	AssignmentExpression	"* arg = input [ 1 ] ? input + 2 : """""		836917	2		=			
ANR	840286	Identifier	arg		836917	0					
ANR	840287	ConditionalExpression	"input [ 1 ] ? input + 2 : """""		836917	1					
ANR	840288	Condition	input [ 1 ]		836917	0					
ANR	840289	ArrayIndexing	input [ 1 ]		836917	0					
ANR	840290	Identifier	input		836917	0					
ANR	840291	PrimaryExpression	1		836917	1					
ANR	840292	AdditiveExpression	input + 2		836917	1		+			
ANR	840293	Identifier	input		836917	0					
ANR	840294	PrimaryExpression	2		836917	1					
ANR	840295	PrimaryExpression	""""""		836917	2					
ANR	840296	IdentifierDeclStatement	"ut64 len = r_num_math ( core -> num , arg ) ;"	5816:3:168638:168676	836917	1	True				
ANR	840297	IdentifierDecl	"len = r_num_math ( core -> num , arg )"		836917	0					
ANR	840298	IdentifierDeclType	ut64		836917	0					
ANR	840299	Identifier	len		836917	1					
ANR	840300	AssignmentExpression	"len = r_num_math ( core -> num , arg )"		836917	2		=			
ANR	840301	Identifier	len		836917	0					
ANR	840302	CallExpression	"r_num_math ( core -> num , arg )"		836917	1					
ANR	840303	Callee	r_num_math		836917	0					
ANR	840304	Identifier	r_num_math		836917	0					
ANR	840305	ArgumentList	core -> num		836917	1					
ANR	840306	Argument	core -> num		836917	0					
ANR	840307	PtrMemberAccess	core -> num		836917	0					
ANR	840308	Identifier	core		836917	0					
ANR	840309	Identifier	num		836917	1					
ANR	840310	Argument	arg		836917	1					
ANR	840311	Identifier	arg		836917	0					
ANR	840312	ExpressionStatement	"cmd_aea ( core , 0 , core -> offset , len )"	5817:3:168681:168717	836917	2	True				
ANR	840313	CallExpression	"cmd_aea ( core , 0 , core -> offset , len )"		836917	0					
ANR	840314	Callee	cmd_aea		836917	0					
ANR	840315	Identifier	cmd_aea		836917	0					
ANR	840316	ArgumentList	core		836917	1					
ANR	840317	Argument	core		836917	0					
ANR	840318	Identifier	core		836917	0					
ANR	840319	Argument	0		836917	1					
ANR	840320	PrimaryExpression	0		836917	0					
ANR	840321	Argument	core -> offset		836917	2					
ANR	840322	PtrMemberAccess	core -> offset		836917	0					
ANR	840323	Identifier	core		836917	0					
ANR	840324	Identifier	offset		836917	1					
ANR	840325	Argument	len		836917	3					
ANR	840326	Identifier	len		836917	0					
ANR	840327	ExpressionStatement	"r_reg_setv ( reg , ""PC"" , pc )"	5819:2:168725:168751	836917	7	True				
ANR	840328	CallExpression	"r_reg_setv ( reg , ""PC"" , pc )"		836917	0					
ANR	840329	Callee	r_reg_setv		836917	0					
ANR	840330	Identifier	r_reg_setv		836917	0					
ANR	840331	ArgumentList	reg		836917	1					
ANR	840332	Argument	reg		836917	0					
ANR	840333	Identifier	reg		836917	0					
ANR	840334	Argument	"""PC"""		836917	1					
ANR	840335	PrimaryExpression	"""PC"""		836917	0					
ANR	840336	Argument	pc		836917	2					
ANR	840337	Identifier	pc		836917	0					
ANR	840338	BreakStatement	break ;	5821:2:168757:168762	836917	49	True				
ANR	840339	Label	case 'x' :	5822:1:168765:168773	836917	50	True				
ANR	840340	CompoundStatement		547:2:15371:15392	836917	51					
ANR	840341	IdentifierDeclStatement	char * hex ;	5823:2:168788:168797	836917	0	True				
ANR	840342	IdentifierDecl	* hex		836917	0					
ANR	840343	IdentifierDeclType	char *		836917	0					
ANR	840344	Identifier	hex		836917	1					
ANR	840345	IdentifierDeclStatement	"int ret , bufsz ;"	5824:2:168801:168815	836917	1	True				
ANR	840346	IdentifierDecl	ret		836917	0					
ANR	840347	IdentifierDeclType	int		836917	0					
ANR	840348	Identifier	ret		836917	1					
ANR	840349	IdentifierDecl	bufsz		836917	1					
ANR	840350	IdentifierDeclType	int		836917	0					
ANR	840351	Identifier	bufsz		836917	1					
ANR	840352	ExpressionStatement	input = r_str_trim_ro ( input + 1 )	5826:2:168820:168853	836917	2	True				
ANR	840353	AssignmentExpression	input = r_str_trim_ro ( input + 1 )		836917	0		=			
ANR	840354	Identifier	input		836917	0					
ANR	840355	CallExpression	r_str_trim_ro ( input + 1 )		836917	1					
ANR	840356	Callee	r_str_trim_ro		836917	0					
ANR	840357	Identifier	r_str_trim_ro		836917	0					
ANR	840358	ArgumentList	input + 1		836917	1					
ANR	840359	Argument	input + 1		836917	0					
ANR	840360	AdditiveExpression	input + 1		836917	0		+			
ANR	840361	Identifier	input		836917	0					
ANR	840362	PrimaryExpression	1		836917	1					
ANR	840363	ExpressionStatement	hex = strdup ( input )	5827:2:168857:168877	836917	3	True				
ANR	840364	AssignmentExpression	hex = strdup ( input )		836917	0		=			
ANR	840365	Identifier	hex		836917	0					
ANR	840366	CallExpression	strdup ( input )		836917	1					
ANR	840367	Callee	strdup		836917	0					
ANR	840368	Identifier	strdup		836917	0					
ANR	840369	ArgumentList	input		836917	1					
ANR	840370	Argument	input		836917	0					
ANR	840371	Identifier	input		836917	0					
ANR	840372	IfStatement	if ( ! hex )		836917	4					
ANR	840373	Condition	! hex	5828:6:168885:168888	836917	0	True				
ANR	840374	UnaryOperationExpression	! hex		836917	0					
ANR	840375	UnaryOperator	!		836917	0					
ANR	840376	Identifier	hex		836917	1					
ANR	840377	CompoundStatement		543:12:15352:15352	836917	1					
ANR	840378	BreakStatement	break ;	5829:3:168896:168901	836917	0	True				
ANR	840379	IdentifierDeclStatement	RAnalOp aop = R_EMPTY ;	5832:2:168910:168931	836917	5	True				
ANR	840380	IdentifierDecl	aop = R_EMPTY		836917	0					
ANR	840381	IdentifierDeclType	RAnalOp		836917	0					
ANR	840382	Identifier	aop		836917	1					
ANR	840383	AssignmentExpression	aop = R_EMPTY		836917	2		=			
ANR	840384	Identifier	R_EMPTY		836917	0					
ANR	840385	Identifier	R_EMPTY		836917	1					
ANR	840386	ExpressionStatement	"bufsz = r_hex_str2bin ( hex , ( ut8 * ) hex )"	5833:2:168935:168973	836917	6	True				
ANR	840387	AssignmentExpression	"bufsz = r_hex_str2bin ( hex , ( ut8 * ) hex )"		836917	0		=			
ANR	840388	Identifier	bufsz		836917	0					
ANR	840389	CallExpression	"r_hex_str2bin ( hex , ( ut8 * ) hex )"		836917	1					
ANR	840390	Callee	r_hex_str2bin		836917	0					
ANR	840391	Identifier	r_hex_str2bin		836917	0					
ANR	840392	ArgumentList	hex		836917	1					
ANR	840393	Argument	hex		836917	0					
ANR	840394	Identifier	hex		836917	0					
ANR	840395	Argument	( ut8 * ) hex		836917	1					
ANR	840396	CastExpression	( ut8 * ) hex		836917	0					
ANR	840397	CastTarget	ut8 *		836917	0					
ANR	840398	Identifier	hex		836917	1					
ANR	840399	ExpressionStatement	"ret = r_anal_op ( core -> anal , & aop , core -> offset , ( const ut8 * ) hex , bufsz , R_ANAL_OP_MASK_ESIL )"	5834:2:168977:169073	836917	7	True				
ANR	840400	AssignmentExpression	"ret = r_anal_op ( core -> anal , & aop , core -> offset , ( const ut8 * ) hex , bufsz , R_ANAL_OP_MASK_ESIL )"		836917	0		=			
ANR	840401	Identifier	ret		836917	0					
ANR	840402	CallExpression	"r_anal_op ( core -> anal , & aop , core -> offset , ( const ut8 * ) hex , bufsz , R_ANAL_OP_MASK_ESIL )"		836917	1					
ANR	840403	Callee	r_anal_op		836917	0					
ANR	840404	Identifier	r_anal_op		836917	0					
ANR	840405	ArgumentList	core -> anal		836917	1					
ANR	840406	Argument	core -> anal		836917	0					
ANR	840407	PtrMemberAccess	core -> anal		836917	0					
ANR	840408	Identifier	core		836917	0					
ANR	840409	Identifier	anal		836917	1					
ANR	840410	Argument	& aop		836917	1					
ANR	840411	UnaryOperationExpression	& aop		836917	0					
ANR	840412	UnaryOperator	&		836917	0					
ANR	840413	Identifier	aop		836917	1					
ANR	840414	Argument	core -> offset		836917	2					
ANR	840415	PtrMemberAccess	core -> offset		836917	0					
ANR	840416	Identifier	core		836917	0					
ANR	840417	Identifier	offset		836917	1					
ANR	840418	Argument	( const ut8 * ) hex		836917	3					
ANR	840419	CastExpression	( const ut8 * ) hex		836917	0					
ANR	840420	CastTarget	const ut8 *		836917	0					
ANR	840421	Identifier	hex		836917	1					
ANR	840422	Argument	bufsz		836917	4					
ANR	840423	Identifier	bufsz		836917	0					
ANR	840424	Argument	R_ANAL_OP_MASK_ESIL		836917	5					
ANR	840425	Identifier	R_ANAL_OP_MASK_ESIL		836917	0					
ANR	840426	IfStatement	if ( ret > 0 )		836917	8					
ANR	840427	Condition	ret > 0	5836:6:169081:169085	836917	0	True				
ANR	840428	RelationalExpression	ret > 0		836917	0		>			
ANR	840429	Identifier	ret		836917	0					
ANR	840430	PrimaryExpression	0		836917	1					
ANR	840431	CompoundStatement		553:3:15605:15641	836917	1					
ANR	840432	IdentifierDeclStatement	const char * str = R_STRBUF_SAFEGET ( & aop . esil ) ;	5837:3:169093:169139	836917	0	True				
ANR	840433	IdentifierDecl	* str = R_STRBUF_SAFEGET ( & aop . esil )		836917	0					
ANR	840434	IdentifierDeclType	const char *		836917	0					
ANR	840435	Identifier	str		836917	1					
ANR	840436	AssignmentExpression	* str = R_STRBUF_SAFEGET ( & aop . esil )		836917	2		=			
ANR	840437	Identifier	str		836917	0					
ANR	840438	CallExpression	R_STRBUF_SAFEGET ( & aop . esil )		836917	1					
ANR	840439	Callee	R_STRBUF_SAFEGET		836917	0					
ANR	840440	Identifier	R_STRBUF_SAFEGET		836917	0					
ANR	840441	ArgumentList	& aop . esil		836917	1					
ANR	840442	Argument	& aop . esil		836917	0					
ANR	840443	UnaryOperationExpression	& aop . esil		836917	0					
ANR	840444	UnaryOperator	&		836917	0					
ANR	840445	MemberAccess	aop . esil		836917	1					
ANR	840446	Identifier	aop		836917	0					
ANR	840447	Identifier	esil		836917	1					
ANR	840448	IdentifierDeclStatement	"char * str2 = r_str_newf ( "" %s"" , str ) ;"	5838:3:169144:169180	836917	1	True				
ANR	840449	IdentifierDecl	"* str2 = r_str_newf ( "" %s"" , str )"		836917	0					
ANR	840450	IdentifierDeclType	char *		836917	0					
ANR	840451	Identifier	str2		836917	1					
ANR	840452	AssignmentExpression	"* str2 = r_str_newf ( "" %s"" , str )"		836917	2		=			
ANR	840453	Identifier	str2		836917	0					
ANR	840454	CallExpression	"r_str_newf ( "" %s"" , str )"		836917	1					
ANR	840455	Callee	r_str_newf		836917	0					
ANR	840456	Identifier	r_str_newf		836917	0					
ANR	840457	ArgumentList	""" %s"""		836917	1					
ANR	840458	Argument	""" %s"""		836917	0					
ANR	840459	PrimaryExpression	""" %s"""		836917	0					
ANR	840460	Argument	str		836917	1					
ANR	840461	Identifier	str		836917	0					
ANR	840462	ExpressionStatement	"cmd_anal_esil ( core , str2 )"	5839:3:169185:169211	836917	2	True				
ANR	840463	CallExpression	"cmd_anal_esil ( core , str2 )"		836917	0					
ANR	840464	Callee	cmd_anal_esil		836917	0					
ANR	840465	Identifier	cmd_anal_esil		836917	0					
ANR	840466	ArgumentList	core		836917	1					
ANR	840467	Argument	core		836917	0					
ANR	840468	Identifier	core		836917	0					
ANR	840469	Argument	str2		836917	1					
ANR	840470	Identifier	str2		836917	0					
ANR	840471	ExpressionStatement	free ( str2 )	5840:3:169216:169227	836917	3	True				
ANR	840472	CallExpression	free ( str2 )		836917	0					
ANR	840473	Callee	free		836917	0					
ANR	840474	Identifier	free		836917	0					
ANR	840475	ArgumentList	str2		836917	1					
ANR	840476	Argument	str2		836917	0					
ANR	840477	Identifier	str2		836917	0					
ANR	840478	ExpressionStatement	r_anal_op_fini ( & aop )	5842:2:169235:169256	836917	9	True				
ANR	840479	CallExpression	r_anal_op_fini ( & aop )		836917	0					
ANR	840480	Callee	r_anal_op_fini		836917	0					
ANR	840481	Identifier	r_anal_op_fini		836917	0					
ANR	840482	ArgumentList	& aop		836917	1					
ANR	840483	Argument	& aop		836917	0					
ANR	840484	UnaryOperationExpression	& aop		836917	0					
ANR	840485	UnaryOperator	&		836917	0					
ANR	840486	Identifier	aop		836917	1					
ANR	840487	BreakStatement	break ;	5843:2:169260:169265	836917	10	True				
ANR	840488	Label	case '?' :	5845:1:169271:169279	836917	52	True				
ANR	840489	IfStatement	if ( input [ 1 ] == '?' )		836917	53					
ANR	840490	Condition	input [ 1 ] == '?'	5846:6:169296:169310	836917	0	True				
ANR	840491	EqualityExpression	input [ 1 ] == '?'		836917	0		==			
ANR	840492	ArrayIndexing	input [ 1 ]		836917	0					
ANR	840493	Identifier	input		836917	0					
ANR	840494	PrimaryExpression	1		836917	1					
ANR	840495	PrimaryExpression	'?'		836917	1					
ANR	840496	CompoundStatement		561:23:15774:15774	836917	1					
ANR	840497	ExpressionStatement	"r_core_cmd_help ( core , help_detail_ae )"	5847:3:169318:169356	836917	0	True				
ANR	840498	CallExpression	"r_core_cmd_help ( core , help_detail_ae )"		836917	0					
ANR	840499	Callee	r_core_cmd_help		836917	0					
ANR	840500	Identifier	r_core_cmd_help		836917	0					
ANR	840501	ArgumentList	core		836917	1					
ANR	840502	Argument	core		836917	0					
ANR	840503	Identifier	core		836917	0					
ANR	840504	Argument	help_detail_ae		836917	1					
ANR	840505	Identifier	help_detail_ae		836917	0					
ANR	840506	BreakStatement	break ;	5848:3:169361:169366	836917	1	True				
ANR	840507	Label	default :	5851:1:169393:169400	836917	54	True				
ANR	840508	Identifier	default		836917	0					
ANR	840509	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ae )"	5852:2:169404:169439	836917	55	True				
ANR	840510	CallExpression	"r_core_cmd_help ( core , help_msg_ae )"		836917	0					
ANR	840511	Callee	r_core_cmd_help		836917	0					
ANR	840512	Identifier	r_core_cmd_help		836917	0					
ANR	840513	ArgumentList	core		836917	1					
ANR	840514	Argument	core		836917	0					
ANR	840515	Identifier	core		836917	0					
ANR	840516	Argument	help_msg_ae		836917	1					
ANR	840517	Identifier	help_msg_ae		836917	0					
ANR	840518	BreakStatement	break ;	5853:2:169443:169448	836917	56	True				
ANR	840519	ReturnType	static void		836917	1					
ANR	840520	Identifier	cmd_anal_esil		836917	2					
ANR	840521	ParameterList	"RCore * core , const char * input"		836917	3					
ANR	840522	Parameter	RCore * core	5286:26:153506:153516	836917	0	True				
ANR	840523	ParameterType	RCore *		836917	0					
ANR	840524	Identifier	core		836917	1					
ANR	840525	Parameter	const char * input	5286:39:153519:153535	836917	1	True				
ANR	840526	ParameterType	const char *		836917	0					
ANR	840527	Identifier	input		836917	1					
ANR	840528	CFGEntryNode	ENTRY		836917		True				
ANR	840529	CFGExitNode	EXIT		836917		True				
ANR	840530	InfiniteForNode	true		836917		True				
ANR	840531	InfiniteForNode	true		836917		True				
ANR	840532	Symbol	romem		836917						
ANR	840533	Symbol	aop		836917						
ANR	840534	Symbol	* fcn		836917						
ANR	840535	Symbol	R_REG_NAME_PC		836917						
ANR	840536	Symbol	r_debug_reg_get		836917						
ANR	840537	Symbol	R_ANAL_FCN_TYPE_FCN		836917						
ANR	840538	Symbol	* input		836917						
ANR	840539	Symbol	core -> offset		836917						
ANR	840540	Symbol	strchr		836917						
ANR	840541	Symbol	& op		836917						
ANR	840542	Symbol	esil -> stats		836917						
ANR	840543	Symbol	until_addr		836917						
ANR	840544	Symbol	addrsize		836917						
ANR	840545	Symbol	until_expr		836917						
ANR	840546	Symbol	help_msg_aets		836917						
ANR	840547	Symbol	len		836917						
ANR	840548	Symbol	stats		836917						
ANR	840549	Symbol	* core -> anal -> esil		836917						
ANR	840550	Symbol	str2		836917						
ANR	840551	Symbol	r_core_esil_step		836917						
ANR	840552	Symbol	* esil		836917						
ANR	840553	Symbol	hex		836917						
ANR	840554	Symbol	core -> anal -> esil		836917						
ANR	840555	Symbol	help_msg_aeC		836917						
ANR	840556	Symbol	r_anal_op		836917						
ANR	840557	Symbol	& op . esil		836917						
ANR	840558	Symbol	help_detail_ae		836917						
ANR	840559	Symbol	op -> type		836917						
ANR	840560	Symbol	iter		836917						
ANR	840561	Symbol	& aop . esil		836917						
ANR	840562	Symbol	iotrap		836917						
ANR	840563	Symbol	& aop		836917						
ANR	840564	Symbol	str		836917						
ANR	840565	Symbol	input		836917						
ANR	840566	Symbol	* * * core		836917						
ANR	840567	Symbol	bbs		836917						
ANR	840568	Symbol	left		836917						
ANR	840569	Symbol	r_config_get_i		836917						
ANR	840570	Symbol	core -> anal -> esil -> trap_code		836917						
ANR	840571	Symbol	r_str_trim_ro		836917						
ANR	840572	Symbol	R_ANAL_OP_TYPE_SWI		836917						
ANR	840573	Symbol	& aop -> esil		836917						
ANR	840574	Symbol	noNULL		836917						
ANR	840575	Symbol	bb		836917						
ANR	840576	Symbol	esil -> verbose		836917						
ANR	840577	Symbol	* core		836917						
ANR	840578	Symbol	r_config_get		836917						
ANR	840579	Symbol	core -> assembler		836917						
ANR	840580	Symbol	core -> anal		836917						
ANR	840581	Symbol	esilstr		836917						
ANR	840582	Symbol	out		836917						
ANR	840583	Symbol	R_ANAL_OP_TYPE_UCALL		836917						
ANR	840584	Symbol	fcn		836917						
ANR	840585	Symbol	core -> io		836917						
ANR	840586	Symbol	arg		836917						
ANR	840587	Symbol	r_core_esil_step_back		836917						
ANR	840588	Symbol	r_str_endswith		836917						
ANR	840589	Symbol	help_msg_ae		836917						
ANR	840590	Symbol	r_hex_str2bin		836917						
ANR	840591	Symbol	R_ANAL_OP_TYPE_RET		836917						
ANR	840592	Symbol	op . type		836917						
ANR	840593	Symbol	R_STRBUF_SAFEGET		836917						
ANR	840594	Symbol	r_anal_esil_load_interrupts_from_lib		836917						
ANR	840595	Symbol	R_MIN		836917						
ANR	840596	Symbol	n		836917						
ANR	840597	Symbol	off		836917						
ANR	840598	Symbol	buf		836917						
ANR	840599	Symbol	* core -> anal		836917						
ANR	840600	Symbol	s		836917						
ANR	840601	Symbol	r_anal_esil_new		836917						
ANR	840602	Symbol	fcn -> addr		836917						
ANR	840603	Symbol	esil		836917						
ANR	840604	Symbol	core -> anal -> reg		836917						
ANR	840605	Symbol	bufsz		836917						
ANR	840606	Symbol	n1		836917						
ANR	840607	Symbol	bb -> size		836917						
ANR	840608	Symbol	* op		836917						
ANR	840609	Symbol	stacksize		836917						
ANR	840610	Symbol	r_anal_fcn_size		836917						
ANR	840611	Symbol	bb -> addr		836917						
ANR	840612	Symbol	r_core_anal_op		836917						
ANR	840613	Symbol	reg		836917						
ANR	840614	Symbol	interrupt		836917						
ANR	840615	Symbol	* * core -> anal		836917						
ANR	840616	Symbol	R_ANAL_FCN_TYPE_SYM		836917						
ANR	840617	Symbol	r_num_get		836917						
ANR	840618	Symbol	core -> num		836917						
ANR	840619	Symbol	R_ANAL_OP_TYPE_TRAP		836917						
ANR	840620	Symbol	ret		836917						
ANR	840621	Symbol	NULL		836917						
ANR	840622	Symbol	sdb_querys		836917						
ANR	840623	Symbol	my		836917						
ANR	840624	Symbol	adr		836917						
ANR	840625	Symbol	newPC		836917						
ANR	840626	Symbol	core		836917						
ANR	840627	Symbol	dict_getu		836917						
ANR	840628	Symbol	r_reg_get_name		836917						
ANR	840629	Symbol	R_ANAL_OP_TYPE_CALL		836917						
ANR	840630	Symbol	true		836917						
ANR	840631	Symbol	esil -> interrupts		836917						
ANR	840632	Symbol	r_reg_getv		836917						
ANR	840633	Symbol	op . size		836917						
ANR	840634	Symbol	R_ANAL_OP_MASK_ESIL		836917						
ANR	840635	Symbol	r_anal_bb_from_offset		836917						
ANR	840636	Symbol	_aeli_iter		836917						
ANR	840637	Symbol	calloc		836917						
ANR	840638	Symbol	R_EMPTY		836917						
ANR	840639	Symbol	r_str_newf		836917						
ANR	840640	Symbol	core -> anal -> esil -> trap		836917						
ANR	840641	Symbol	R_ANAL_OP_MASK_BASIC		836917						
ANR	840642	Symbol	r_num_math		836917						
ANR	840643	Symbol	end		836917						
ANR	840644	Symbol	addr		836917						
ANR	840645	Symbol	UT64_MAX		836917						
ANR	840646	Symbol	* * core		836917						
ANR	840647	Symbol	core -> config		836917						
ANR	840648	Symbol	op		836917						
ANR	840649	Symbol	op -> addr		836917						
ANR	840650	Symbol	* bb		836917						
ANR	840651	Symbol	false		836917						
ANR	840652	Symbol	help_msg_aep		836917						
ANR	840653	Symbol	pc		836917						
ANR	840654	Symbol	r_anal_get_fcn_in		836917						
ANR	840655	Symbol	r_strbuf_get		836917						
ANR	840656	Symbol	R_ANAL_OP_MASK_HINT		836917						
ANR	840657	Symbol	op -> size		836917						
ANR	840658	Symbol	strdup		836917						
ANR	840659	Symbol	help_msg_aec		836917						
ANR	840660	Symbol	core -> dbg		836917						
ANR	840661	Symbol	help_msg_aea		836917						
ANR	840662	Function	cmd_anal_bytes	5857:0:169456:169808							
ANR	840663	FunctionDef	"cmd_anal_bytes (RCore * core , const char * input)"		840662	0					
ANR	840664	CompoundStatement		5857:59:169515:169808	840662	0					
ANR	840665	IdentifierDeclStatement	int len = core -> blocksize ;	5858:1:169518:169543	840662	0	True				
ANR	840666	IdentifierDecl	len = core -> blocksize		840662	0					
ANR	840667	IdentifierDeclType	int		840662	0					
ANR	840668	Identifier	len		840662	1					
ANR	840669	AssignmentExpression	len = core -> blocksize		840662	2		=			
ANR	840670	Identifier	len		840662	0					
ANR	840671	PtrMemberAccess	core -> blocksize		840662	1					
ANR	840672	Identifier	core		840662	0					
ANR	840673	Identifier	blocksize		840662	1					
ANR	840674	IdentifierDeclStatement	int tbs = len ;	5859:1:169546:169559	840662	1	True				
ANR	840675	IdentifierDecl	tbs = len		840662	0					
ANR	840676	IdentifierDeclType	int		840662	0					
ANR	840677	Identifier	tbs		840662	1					
ANR	840678	AssignmentExpression	tbs = len		840662	2		=			
ANR	840679	Identifier	len		840662	0					
ANR	840680	Identifier	len		840662	1					
ANR	840681	IfStatement	if ( input [ 0 ] )		840662	2					
ANR	840682	Condition	input [ 0 ]	5860:5:169566:169573	840662	0	True				
ANR	840683	ArrayIndexing	input [ 0 ]		840662	0					
ANR	840684	Identifier	input		840662	0					
ANR	840685	PrimaryExpression	0		840662	1					
ANR	840686	CompoundStatement		4:15:60:60	840662	1					
ANR	840687	ExpressionStatement	"len = ( int ) r_num_get ( core -> num , input + 1 )"	5861:2:169580:169623	840662	0	True				
ANR	840688	AssignmentExpression	"len = ( int ) r_num_get ( core -> num , input + 1 )"		840662	0		=			
ANR	840689	Identifier	len		840662	0					
ANR	840690	CastExpression	"( int ) r_num_get ( core -> num , input + 1 )"		840662	1					
ANR	840691	CastTarget	int		840662	0					
ANR	840692	CallExpression	"r_num_get ( core -> num , input + 1 )"		840662	1					
ANR	840693	Callee	r_num_get		840662	0					
ANR	840694	Identifier	r_num_get		840662	0					
ANR	840695	ArgumentList	core -> num		840662	1					
ANR	840696	Argument	core -> num		840662	0					
ANR	840697	PtrMemberAccess	core -> num		840662	0					
ANR	840698	Identifier	core		840662	0					
ANR	840699	Identifier	num		840662	1					
ANR	840700	Argument	input + 1		840662	1					
ANR	840701	AdditiveExpression	input + 1		840662	0		+			
ANR	840702	Identifier	input		840662	0					
ANR	840703	PrimaryExpression	1		840662	1					
ANR	840704	IfStatement	if ( len > tbs )		840662	1					
ANR	840705	Condition	len > tbs	5862:6:169631:169639	840662	0	True				
ANR	840706	RelationalExpression	len > tbs		840662	0		>			
ANR	840707	Identifier	len		840662	0					
ANR	840708	Identifier	tbs		840662	1					
ANR	840709	CompoundStatement		6:17:126:126	840662	1					
ANR	840710	ExpressionStatement	"r_core_block_size ( core , len )"	5863:3:169647:169676	840662	0	True				
ANR	840711	CallExpression	"r_core_block_size ( core , len )"		840662	0					
ANR	840712	Callee	r_core_block_size		840662	0					
ANR	840713	Identifier	r_core_block_size		840662	0					
ANR	840714	ArgumentList	core		840662	1					
ANR	840715	Argument	core		840662	0					
ANR	840716	Identifier	core		840662	0					
ANR	840717	Argument	len		840662	1					
ANR	840718	Identifier	len		840662	0					
ANR	840719	ExpressionStatement	"core_anal_bytes ( core , core -> block , len , 0 , input [ 0 ] )"	5866:1:169686:169739	840662	3	True				
ANR	840720	CallExpression	"core_anal_bytes ( core , core -> block , len , 0 , input [ 0 ] )"		840662	0					
ANR	840721	Callee	core_anal_bytes		840662	0					
ANR	840722	Identifier	core_anal_bytes		840662	0					
ANR	840723	ArgumentList	core		840662	1					
ANR	840724	Argument	core		840662	0					
ANR	840725	Identifier	core		840662	0					
ANR	840726	Argument	core -> block		840662	1					
ANR	840727	PtrMemberAccess	core -> block		840662	0					
ANR	840728	Identifier	core		840662	0					
ANR	840729	Identifier	block		840662	1					
ANR	840730	Argument	len		840662	2					
ANR	840731	Identifier	len		840662	0					
ANR	840732	Argument	0		840662	3					
ANR	840733	PrimaryExpression	0		840662	0					
ANR	840734	Argument	input [ 0 ]		840662	4					
ANR	840735	ArrayIndexing	input [ 0 ]		840662	0					
ANR	840736	Identifier	input		840662	0					
ANR	840737	PrimaryExpression	0		840662	1					
ANR	840738	IfStatement	if ( tbs != core -> blocksize )		840662	4					
ANR	840739	Condition	tbs != core -> blocksize	5867:5:169746:169767	840662	0	True				
ANR	840740	EqualityExpression	tbs != core -> blocksize		840662	0		!=			
ANR	840741	Identifier	tbs		840662	0					
ANR	840742	PtrMemberAccess	core -> blocksize		840662	1					
ANR	840743	Identifier	core		840662	0					
ANR	840744	Identifier	blocksize		840662	1					
ANR	840745	CompoundStatement		11:29:254:254	840662	1					
ANR	840746	ExpressionStatement	"r_core_block_size ( core , tbs )"	5868:2:169774:169803	840662	0	True				
ANR	840747	CallExpression	"r_core_block_size ( core , tbs )"		840662	0					
ANR	840748	Callee	r_core_block_size		840662	0					
ANR	840749	Identifier	r_core_block_size		840662	0					
ANR	840750	ArgumentList	core		840662	1					
ANR	840751	Argument	core		840662	0					
ANR	840752	Identifier	core		840662	0					
ANR	840753	Argument	tbs		840662	1					
ANR	840754	Identifier	tbs		840662	0					
ANR	840755	ReturnType	static void		840662	1					
ANR	840756	Identifier	cmd_anal_bytes		840662	2					
ANR	840757	ParameterList	"RCore * core , const char * input"		840662	3					
ANR	840758	Parameter	RCore * core	5857:27:169483:169493	840662	0	True				
ANR	840759	ParameterType	RCore *		840662	0					
ANR	840760	Identifier	core		840662	1					
ANR	840761	Parameter	const char * input	5857:40:169496:169512	840662	1	True				
ANR	840762	ParameterType	const char *		840662	0					
ANR	840763	Identifier	input		840662	1					
ANR	840764	CFGEntryNode	ENTRY		840662		True				
ANR	840765	CFGExitNode	EXIT		840662		True				
ANR	840766	Symbol	core -> blocksize		840662						
ANR	840767	Symbol	core		840662						
ANR	840768	Symbol	input		840662						
ANR	840769	Symbol	len		840662						
ANR	840770	Symbol	tbs		840662						
ANR	840771	Symbol	core -> block		840662						
ANR	840772	Symbol	* core		840662						
ANR	840773	Symbol	* input		840662						
ANR	840774	Symbol	r_num_get		840662						
ANR	840775	Symbol	core -> num		840662						
ANR	840776	Function	cmd_anal_opcode	5872:0:169811:174134							
ANR	840777	FunctionDef	"cmd_anal_opcode (RCore * core , const char * input)"		840776	0					
ANR	840778	CompoundStatement		5872:60:169871:174134	840776	0					
ANR	840779	IdentifierDeclStatement	"int l , len = core -> blocksize ;"	5873:1:169874:169902	840776	0	True				
ANR	840780	IdentifierDecl	l		840776	0					
ANR	840781	IdentifierDeclType	int		840776	0					
ANR	840782	Identifier	l		840776	1					
ANR	840783	IdentifierDecl	len = core -> blocksize		840776	1					
ANR	840784	IdentifierDeclType	int		840776	0					
ANR	840785	Identifier	len		840776	1					
ANR	840786	AssignmentExpression	len = core -> blocksize		840776	2		=			
ANR	840787	Identifier	len		840776	0					
ANR	840788	PtrMemberAccess	core -> blocksize		840776	1					
ANR	840789	Identifier	core		840776	0					
ANR	840790	Identifier	blocksize		840776	1					
ANR	840791	IdentifierDeclStatement	ut32 tbs = core -> blocksize ;	5874:1:169905:169931	840776	1	True				
ANR	840792	IdentifierDecl	tbs = core -> blocksize		840776	0					
ANR	840793	IdentifierDeclType	ut32		840776	0					
ANR	840794	Identifier	tbs		840776	1					
ANR	840795	AssignmentExpression	tbs = core -> blocksize		840776	2		=			
ANR	840796	Identifier	tbs		840776	0					
ANR	840797	PtrMemberAccess	core -> blocksize		840776	1					
ANR	840798	Identifier	core		840776	0					
ANR	840799	Identifier	blocksize		840776	1					
ANR	840800	ExpressionStatement	r_core_block_read ( core )	5875:1:169934:169958	840776	2	True				
ANR	840801	CallExpression	r_core_block_read ( core )		840776	0					
ANR	840802	Callee	r_core_block_read		840776	0					
ANR	840803	Identifier	r_core_block_read		840776	0					
ANR	840804	ArgumentList	core		840776	1					
ANR	840805	Argument	core		840776	0					
ANR	840806	Identifier	core		840776	0					
ANR	840807	SwitchStatement	switch ( input [ 0 ] )		840776	3					
ANR	840808	Condition	input [ 0 ]	5876:9:169969:169976	840776	0	True				
ANR	840809	ArrayIndexing	input [ 0 ]		840776	0					
ANR	840810	Identifier	input		840776	0					
ANR	840811	PrimaryExpression	0		840776	1					
ANR	840812	CompoundStatement		5:19:107:107	840776	1					
ANR	840813	Label	case 's' :	5877:1:169982:169990	840776	0	True				
ANR	840814	Label	case 'j' :	5878:1:170002:170010	840776	1	True				
ANR	840815	Label	case 'e' :	5879:1:170022:170030	840776	2	True				
ANR	840816	Label	case 'r' :	5880:1:170042:170050	840776	3	True				
ANR	840817	CompoundStatement		11:2:201:226	840776	4					
ANR	840818	IdentifierDeclStatement	int count = 1 ;	5881:2:170056:170069	840776	0	True				
ANR	840819	IdentifierDecl	count = 1		840776	0					
ANR	840820	IdentifierDeclType	int		840776	0					
ANR	840821	Identifier	count		840776	1					
ANR	840822	AssignmentExpression	count = 1		840776	2		=			
ANR	840823	Identifier	count		840776	0					
ANR	840824	PrimaryExpression	1		840776	1					
ANR	840825	IdentifierDeclStatement	int obs = core -> blocksize ;	5882:2:170073:170098	840776	1	True				
ANR	840826	IdentifierDecl	obs = core -> blocksize		840776	0					
ANR	840827	IdentifierDeclType	int		840776	0					
ANR	840828	Identifier	obs		840776	1					
ANR	840829	AssignmentExpression	obs = core -> blocksize		840776	2		=			
ANR	840830	Identifier	obs		840776	0					
ANR	840831	PtrMemberAccess	core -> blocksize		840776	1					
ANR	840832	Identifier	core		840776	0					
ANR	840833	Identifier	blocksize		840776	1					
ANR	840834	IfStatement	if ( input [ 1 ] && input [ 2 ] )		840776	2					
ANR	840835	Condition	input [ 1 ] && input [ 2 ]	5883:6:170106:170125	840776	0	True				
ANR	840836	AndExpression	input [ 1 ] && input [ 2 ]		840776	0		&&			
ANR	840837	ArrayIndexing	input [ 1 ]		840776	0					
ANR	840838	Identifier	input		840776	0					
ANR	840839	PrimaryExpression	1		840776	1					
ANR	840840	ArrayIndexing	input [ 2 ]		840776	1					
ANR	840841	Identifier	input		840776	0					
ANR	840842	PrimaryExpression	2		840776	1					
ANR	840843	CompoundStatement		12:28:256:256	840776	1					
ANR	840844	ExpressionStatement	"l = ( int ) r_num_get ( core -> num , input + 1 )"	5884:3:170133:170174	840776	0	True				
ANR	840845	AssignmentExpression	"l = ( int ) r_num_get ( core -> num , input + 1 )"		840776	0		=			
ANR	840846	Identifier	l		840776	0					
ANR	840847	CastExpression	"( int ) r_num_get ( core -> num , input + 1 )"		840776	1					
ANR	840848	CastTarget	int		840776	0					
ANR	840849	CallExpression	"r_num_get ( core -> num , input + 1 )"		840776	1					
ANR	840850	Callee	r_num_get		840776	0					
ANR	840851	Identifier	r_num_get		840776	0					
ANR	840852	ArgumentList	core -> num		840776	1					
ANR	840853	Argument	core -> num		840776	0					
ANR	840854	PtrMemberAccess	core -> num		840776	0					
ANR	840855	Identifier	core		840776	0					
ANR	840856	Identifier	num		840776	1					
ANR	840857	Argument	input + 1		840776	1					
ANR	840858	AdditiveExpression	input + 1		840776	0		+			
ANR	840859	Identifier	input		840776	0					
ANR	840860	PrimaryExpression	1		840776	1					
ANR	840861	IfStatement	if ( l > 0 )		840776	1					
ANR	840862	Condition	l > 0	5885:7:170183:170187	840776	0	True				
ANR	840863	RelationalExpression	l > 0		840776	0		>			
ANR	840864	Identifier	l		840776	0					
ANR	840865	PrimaryExpression	0		840776	1					
ANR	840866	CompoundStatement		14:14:318:318	840776	1					
ANR	840867	ExpressionStatement	count = l	5886:4:170196:170205	840776	0	True				
ANR	840868	AssignmentExpression	count = l		840776	0		=			
ANR	840869	Identifier	count		840776	0					
ANR	840870	Identifier	l		840776	1					
ANR	840871	ExpressionStatement	l *= 8	5888:3:170215:170221	840776	2	True				
ANR	840872	AssignmentExpression	l *= 8		840776	0		*=			
ANR	840873	Identifier	l		840776	0					
ANR	840874	PrimaryExpression	8		840776	1					
ANR	840875	IfStatement	if ( l > obs )		840776	3					
ANR	840876	Condition	l > obs	5889:7:170230:170236	840776	0	True				
ANR	840877	RelationalExpression	l > obs		840776	0		>			
ANR	840878	Identifier	l		840776	0					
ANR	840879	Identifier	obs		840776	1					
ANR	840880	CompoundStatement		18:16:367:367	840776	1					
ANR	840881	ExpressionStatement	"r_core_block_size ( core , l )"	5890:4:170245:170272	840776	0	True				
ANR	840882	CallExpression	"r_core_block_size ( core , l )"		840776	0					
ANR	840883	Callee	r_core_block_size		840776	0					
ANR	840884	Identifier	r_core_block_size		840776	0					
ANR	840885	ArgumentList	core		840776	1					
ANR	840886	Argument	core		840776	0					
ANR	840887	Identifier	core		840776	0					
ANR	840888	Argument	l		840776	1					
ANR	840889	Identifier	l		840776	0					
ANR	840890	ElseStatement	else		840776	0					
ANR	840891	CompoundStatement		21:9:416:416	840776	0					
ANR	840892	ExpressionStatement	count = 1	5893:3:170293:170302	840776	0	True				
ANR	840893	AssignmentExpression	count = 1		840776	0		=			
ANR	840894	Identifier	count		840776	0					
ANR	840895	PrimaryExpression	1		840776	1					
ANR	840896	ExpressionStatement	"core_anal_bytes ( core , core -> block , core -> blocksize , count , input [ 0 ] )"	5895:2:170310:170379	840776	3	True				
ANR	840897	CallExpression	"core_anal_bytes ( core , core -> block , core -> blocksize , count , input [ 0 ] )"		840776	0					
ANR	840898	Callee	core_anal_bytes		840776	0					
ANR	840899	Identifier	core_anal_bytes		840776	0					
ANR	840900	ArgumentList	core		840776	1					
ANR	840901	Argument	core		840776	0					
ANR	840902	Identifier	core		840776	0					
ANR	840903	Argument	core -> block		840776	1					
ANR	840904	PtrMemberAccess	core -> block		840776	0					
ANR	840905	Identifier	core		840776	0					
ANR	840906	Identifier	block		840776	1					
ANR	840907	Argument	core -> blocksize		840776	2					
ANR	840908	PtrMemberAccess	core -> blocksize		840776	0					
ANR	840909	Identifier	core		840776	0					
ANR	840910	Identifier	blocksize		840776	1					
ANR	840911	Argument	count		840776	3					
ANR	840912	Identifier	count		840776	0					
ANR	840913	Argument	input [ 0 ]		840776	4					
ANR	840914	ArrayIndexing	input [ 0 ]		840776	0					
ANR	840915	Identifier	input		840776	0					
ANR	840916	PrimaryExpression	0		840776	1					
ANR	840917	IfStatement	if ( obs != core -> blocksize )		840776	4					
ANR	840918	Condition	obs != core -> blocksize	5896:6:170387:170408	840776	0	True				
ANR	840919	EqualityExpression	obs != core -> blocksize		840776	0		!=			
ANR	840920	Identifier	obs		840776	0					
ANR	840921	PtrMemberAccess	core -> blocksize		840776	1					
ANR	840922	Identifier	core		840776	0					
ANR	840923	Identifier	blocksize		840776	1					
ANR	840924	CompoundStatement		25:30:539:539	840776	1					
ANR	840925	ExpressionStatement	"r_core_block_size ( core , obs )"	5897:3:170416:170445	840776	0	True				
ANR	840926	CallExpression	"r_core_block_size ( core , obs )"		840776	0					
ANR	840927	Callee	r_core_block_size		840776	0					
ANR	840928	Identifier	r_core_block_size		840776	0					
ANR	840929	ArgumentList	core		840776	1					
ANR	840930	Argument	core		840776	0					
ANR	840931	Identifier	core		840776	0					
ANR	840932	Argument	obs		840776	1					
ANR	840933	Identifier	obs		840776	0					
ANR	840934	BreakStatement	break ;	5900:2:170457:170462	840776	5	True				
ANR	840935	Label	case 'm' :	5901:1:170465:170473	840776	6	True				
ANR	840936	IfStatement	if ( input [ 1 ] == '?' )		840776	7					
ANR	840937	Condition	input [ 1 ] == '?'	5902:6:170490:170504	840776	0	True				
ANR	840938	EqualityExpression	input [ 1 ] == '?'		840776	0		==			
ANR	840939	ArrayIndexing	input [ 1 ]		840776	0					
ANR	840940	Identifier	input		840776	0					
ANR	840941	PrimaryExpression	1		840776	1					
ANR	840942	PrimaryExpression	'?'		840776	1					
ANR	840943	CompoundStatement		31:23:635:635	840776	1					
ANR	840944	ExpressionStatement	"r_cons_printf ( ""Usage: aom[ljd] [arg] .. list mnemonics for asm.arch\\n"" )"	5903:3:170512:170584	840776	0	True				
ANR	840945	CallExpression	"r_cons_printf ( ""Usage: aom[ljd] [arg] .. list mnemonics for asm.arch\\n"" )"		840776	0					
ANR	840946	Callee	r_cons_printf		840776	0					
ANR	840947	Identifier	r_cons_printf		840776	0					
ANR	840948	ArgumentList	"""Usage: aom[ljd] [arg] .. list mnemonics for asm.arch\\n"""		840776	1					
ANR	840949	Argument	"""Usage: aom[ljd] [arg] .. list mnemonics for asm.arch\\n"""		840776	0					
ANR	840950	PrimaryExpression	"""Usage: aom[ljd] [arg] .. list mnemonics for asm.arch\\n"""		840776	0					
ANR	840951	ExpressionStatement	"r_cons_printf ( "". = current, l = list, d = describe, j=json)\\n"" )"	5904:3:170589:170653	840776	1	True				
ANR	840952	CallExpression	"r_cons_printf ( "". = current, l = list, d = describe, j=json)\\n"" )"		840776	0					
ANR	840953	Callee	r_cons_printf		840776	0					
ANR	840954	Identifier	r_cons_printf		840776	0					
ANR	840955	ArgumentList	""". = current, l = list, d = describe, j=json)\\n"""		840776	1					
ANR	840956	Argument	""". = current, l = list, d = describe, j=json)\\n"""		840776	0					
ANR	840957	PrimaryExpression	""". = current, l = list, d = describe, j=json)\\n"""		840776	0					
ANR	840958	ElseStatement	else		840776	0					
ANR	840959	IfStatement	if ( input [ 1 ] == 'd' )		840776	0					
ANR	840960	Condition	input [ 1 ] == 'd'	5905:13:170668:170682	840776	0	True				
ANR	840961	EqualityExpression	input [ 1 ] == 'd'		840776	0		==			
ANR	840962	ArrayIndexing	input [ 1 ]		840776	0					
ANR	840963	Identifier	input		840776	0					
ANR	840964	PrimaryExpression	1		840776	1					
ANR	840965	PrimaryExpression	'd'		840776	1					
ANR	840966	CompoundStatement		37:3:901:957	840776	1					
ANR	840967	IdentifierDeclStatement	"const int id = ( input [ 2 ] == ' ' ) ? ( int ) r_num_math ( core -> num , input + 2 ) : - 1 ;"	5906:3:170690:170768	840776	0	True				
ANR	840968	IdentifierDecl	"id = ( input [ 2 ] == ' ' ) ? ( int ) r_num_math ( core -> num , input + 2 ) : - 1"		840776	0					
ANR	840969	IdentifierDeclType	const int		840776	0					
ANR	840970	Identifier	id		840776	1					
ANR	840971	AssignmentExpression	"id = ( input [ 2 ] == ' ' ) ? ( int ) r_num_math ( core -> num , input + 2 ) : - 1"		840776	2		=			
ANR	840972	Identifier	id		840776	0					
ANR	840973	ConditionalExpression	"( input [ 2 ] == ' ' ) ? ( int ) r_num_math ( core -> num , input + 2 ) : - 1"		840776	1					
ANR	840974	Condition	input [ 2 ] == ' '		840776	0					
ANR	840975	EqualityExpression	input [ 2 ] == ' '		840776	0		==			
ANR	840976	ArrayIndexing	input [ 2 ]		840776	0					
ANR	840977	Identifier	input		840776	0					
ANR	840978	PrimaryExpression	2		840776	1					
ANR	840979	PrimaryExpression	' '		840776	1					
ANR	840980	CastExpression	"( int ) r_num_math ( core -> num , input + 2 )"		840776	1					
ANR	840981	CastTarget	int		840776	0					
ANR	840982	CallExpression	"r_num_math ( core -> num , input + 2 )"		840776	1					
ANR	840983	Callee	r_num_math		840776	0					
ANR	840984	Identifier	r_num_math		840776	0					
ANR	840985	ArgumentList	core -> num		840776	1					
ANR	840986	Argument	core -> num		840776	0					
ANR	840987	PtrMemberAccess	core -> num		840776	0					
ANR	840988	Identifier	core		840776	0					
ANR	840989	Identifier	num		840776	1					
ANR	840990	Argument	input + 2		840776	1					
ANR	840991	AdditiveExpression	input + 2		840776	0		+			
ANR	840992	Identifier	input		840776	0					
ANR	840993	PrimaryExpression	2		840776	1					
ANR	840994	UnaryOperationExpression	- 1		840776	2					
ANR	840995	UnaryOperator	-		840776	0					
ANR	840996	PrimaryExpression	1		840776	1					
ANR	840997	IdentifierDeclStatement	"char * ops = r_asm_mnemonics ( core -> assembler , id , false ) ;"	5908:3:170773:170829	840776	1	True				
ANR	840998	IdentifierDecl	"* ops = r_asm_mnemonics ( core -> assembler , id , false )"		840776	0					
ANR	840999	IdentifierDeclType	char *		840776	0					
ANR	841000	Identifier	ops		840776	1					
ANR	841001	AssignmentExpression	"* ops = r_asm_mnemonics ( core -> assembler , id , false )"		840776	2		=			
ANR	841002	Identifier	ops		840776	0					
ANR	841003	CallExpression	"r_asm_mnemonics ( core -> assembler , id , false )"		840776	1					
ANR	841004	Callee	r_asm_mnemonics		840776	0					
ANR	841005	Identifier	r_asm_mnemonics		840776	0					
ANR	841006	ArgumentList	core -> assembler		840776	1					
ANR	841007	Argument	core -> assembler		840776	0					
ANR	841008	PtrMemberAccess	core -> assembler		840776	0					
ANR	841009	Identifier	core		840776	0					
ANR	841010	Identifier	assembler		840776	1					
ANR	841011	Argument	id		840776	1					
ANR	841012	Identifier	id		840776	0					
ANR	841013	Argument	false		840776	2					
ANR	841014	Identifier	false		840776	0					
ANR	841015	IfStatement	if ( ops )		840776	2					
ANR	841016	Condition	ops	5909:7:170838:170840	840776	0	True				
ANR	841017	Identifier	ops		840776	0					
ANR	841018	CompoundStatement		40:4:998:1027	840776	1					
ANR	841019	IdentifierDeclStatement	char * ptr = ops ;	5910:4:170849:170864	840776	0	True				
ANR	841020	IdentifierDecl	* ptr = ops		840776	0					
ANR	841021	IdentifierDeclType	char *		840776	0					
ANR	841022	Identifier	ptr		840776	1					
ANR	841023	AssignmentExpression	* ptr = ops		840776	2		=			
ANR	841024	Identifier	ops		840776	0					
ANR	841025	Identifier	ops		840776	1					
ANR	841026	IdentifierDeclStatement	"char * nl = strchr ( ptr , '\\n' ) ;"	5911:4:170870:170899	840776	1	True				
ANR	841027	IdentifierDecl	"* nl = strchr ( ptr , '\\n' )"		840776	0					
ANR	841028	IdentifierDeclType	char *		840776	0					
ANR	841029	Identifier	nl		840776	1					
ANR	841030	AssignmentExpression	"* nl = strchr ( ptr , '\\n' )"		840776	2		=			
ANR	841031	Identifier	nl		840776	0					
ANR	841032	CallExpression	"strchr ( ptr , '\\n' )"		840776	1					
ANR	841033	Callee	strchr		840776	0					
ANR	841034	Identifier	strchr		840776	0					
ANR	841035	ArgumentList	ptr		840776	1					
ANR	841036	Argument	ptr		840776	0					
ANR	841037	Identifier	ptr		840776	0					
ANR	841038	Argument	'\\n'		840776	1					
ANR	841039	PrimaryExpression	'\\n'		840776	0					
ANR	841040	WhileStatement	while ( nl )		840776	2					
ANR	841041	Condition	nl	5912:11:170912:170913	840776	0	True				
ANR	841042	Identifier	nl		840776	0					
ANR	841043	CompoundStatement		43:5:1065:1115	840776	1					
ANR	841044	ExpressionStatement	* nl = 0	5913:5:170923:170930	840776	0	True				
ANR	841045	AssignmentExpression	* nl = 0		840776	0		=			
ANR	841046	UnaryOperationExpression	* nl		840776	0					
ANR	841047	UnaryOperator	*		840776	0					
ANR	841048	Identifier	nl		840776	1					
ANR	841049	PrimaryExpression	0		840776	1					
ANR	841050	IdentifierDeclStatement	"char * desc = r_asm_describe ( core -> assembler , ptr ) ;"	5914:5:170937:170987	840776	1	True				
ANR	841051	IdentifierDecl	"* desc = r_asm_describe ( core -> assembler , ptr )"		840776	0					
ANR	841052	IdentifierDeclType	char *		840776	0					
ANR	841053	Identifier	desc		840776	1					
ANR	841054	AssignmentExpression	"* desc = r_asm_describe ( core -> assembler , ptr )"		840776	2		=			
ANR	841055	Identifier	desc		840776	0					
ANR	841056	CallExpression	"r_asm_describe ( core -> assembler , ptr )"		840776	1					
ANR	841057	Callee	r_asm_describe		840776	0					
ANR	841058	Identifier	r_asm_describe		840776	0					
ANR	841059	ArgumentList	core -> assembler		840776	1					
ANR	841060	Argument	core -> assembler		840776	0					
ANR	841061	PtrMemberAccess	core -> assembler		840776	0					
ANR	841062	Identifier	core		840776	0					
ANR	841063	Identifier	assembler		840776	1					
ANR	841064	Argument	ptr		840776	1					
ANR	841065	Identifier	ptr		840776	0					
ANR	841066	IfStatement	if ( desc )		840776	2					
ANR	841067	Condition	desc	5915:9:170998:171001	840776	0	True				
ANR	841068	Identifier	desc		840776	0					
ANR	841069	CompoundStatement		45:6:1140:1192	840776	1					
ANR	841070	IdentifierDeclStatement	"const char * pad = r_str_pad ( ' ' , 16 - strlen ( ptr ) ) ;"	5916:6:171012:171064	840776	0	True				
ANR	841071	IdentifierDecl	"* pad = r_str_pad ( ' ' , 16 - strlen ( ptr ) )"		840776	0					
ANR	841072	IdentifierDeclType	const char *		840776	0					
ANR	841073	Identifier	pad		840776	1					
ANR	841074	AssignmentExpression	"* pad = r_str_pad ( ' ' , 16 - strlen ( ptr ) )"		840776	2		=			
ANR	841075	Identifier	pad		840776	0					
ANR	841076	CallExpression	"r_str_pad ( ' ' , 16 - strlen ( ptr ) )"		840776	1					
ANR	841077	Callee	r_str_pad		840776	0					
ANR	841078	Identifier	r_str_pad		840776	0					
ANR	841079	ArgumentList	' '		840776	1					
ANR	841080	Argument	' '		840776	0					
ANR	841081	PrimaryExpression	' '		840776	0					
ANR	841082	Argument	16 - strlen ( ptr )		840776	1					
ANR	841083	AdditiveExpression	16 - strlen ( ptr )		840776	0		-			
ANR	841084	PrimaryExpression	16		840776	0					
ANR	841085	CallExpression	strlen ( ptr )		840776	1					
ANR	841086	Callee	strlen		840776	0					
ANR	841087	Identifier	strlen		840776	0					
ANR	841088	ArgumentList	ptr		840776	1					
ANR	841089	Argument	ptr		840776	0					
ANR	841090	Identifier	ptr		840776	0					
ANR	841091	ExpressionStatement	"r_cons_printf ( ""%s%s%s\\n"" , ptr , pad , desc )"	5917:6:171072:171114	840776	1	True				
ANR	841092	CallExpression	"r_cons_printf ( ""%s%s%s\\n"" , ptr , pad , desc )"		840776	0					
ANR	841093	Callee	r_cons_printf		840776	0					
ANR	841094	Identifier	r_cons_printf		840776	0					
ANR	841095	ArgumentList	"""%s%s%s\\n"""		840776	1					
ANR	841096	Argument	"""%s%s%s\\n"""		840776	0					
ANR	841097	PrimaryExpression	"""%s%s%s\\n"""		840776	0					
ANR	841098	Argument	ptr		840776	1					
ANR	841099	Identifier	ptr		840776	0					
ANR	841100	Argument	pad		840776	2					
ANR	841101	Identifier	pad		840776	0					
ANR	841102	Argument	desc		840776	3					
ANR	841103	Identifier	desc		840776	0					
ANR	841104	ExpressionStatement	free ( desc )	5918:6:171122:171133	840776	2	True				
ANR	841105	CallExpression	free ( desc )		840776	0					
ANR	841106	Callee	free		840776	0					
ANR	841107	Identifier	free		840776	0					
ANR	841108	ArgumentList	desc		840776	1					
ANR	841109	Argument	desc		840776	0					
ANR	841110	Identifier	desc		840776	0					
ANR	841111	ElseStatement	else		840776	0					
ANR	841112	CompoundStatement		48:12:1275:1275	840776	0					
ANR	841113	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , ptr )"	5920:6:171155:171182	840776	0	True				
ANR	841114	CallExpression	"r_cons_printf ( ""%s\\n"" , ptr )"		840776	0					
ANR	841115	Callee	r_cons_printf		840776	0					
ANR	841116	Identifier	r_cons_printf		840776	0					
ANR	841117	ArgumentList	"""%s\\n"""		840776	1					
ANR	841118	Argument	"""%s\\n"""		840776	0					
ANR	841119	PrimaryExpression	"""%s\\n"""		840776	0					
ANR	841120	Argument	ptr		840776	1					
ANR	841121	Identifier	ptr		840776	0					
ANR	841122	ExpressionStatement	ptr = nl + 1	5922:5:171196:171208	840776	3	True				
ANR	841123	AssignmentExpression	ptr = nl + 1		840776	0		=			
ANR	841124	Identifier	ptr		840776	0					
ANR	841125	AdditiveExpression	nl + 1		840776	1		+			
ANR	841126	Identifier	nl		840776	0					
ANR	841127	PrimaryExpression	1		840776	1					
ANR	841128	ExpressionStatement	"nl = strchr ( ptr , '\\n' )"	5923:5:171215:171238	840776	4	True				
ANR	841129	AssignmentExpression	"nl = strchr ( ptr , '\\n' )"		840776	0		=			
ANR	841130	Identifier	nl		840776	0					
ANR	841131	CallExpression	"strchr ( ptr , '\\n' )"		840776	1					
ANR	841132	Callee	strchr		840776	0					
ANR	841133	Identifier	strchr		840776	0					
ANR	841134	ArgumentList	ptr		840776	1					
ANR	841135	Argument	ptr		840776	0					
ANR	841136	Identifier	ptr		840776	0					
ANR	841137	Argument	'\\n'		840776	1					
ANR	841138	PrimaryExpression	'\\n'		840776	0					
ANR	841139	ExpressionStatement	free ( ops )	5925:4:171250:171260	840776	3	True				
ANR	841140	CallExpression	free ( ops )		840776	0					
ANR	841141	Callee	free		840776	0					
ANR	841142	Identifier	free		840776	0					
ANR	841143	ArgumentList	ops		840776	1					
ANR	841144	Argument	ops		840776	0					
ANR	841145	Identifier	ops		840776	0					
ANR	841146	ElseStatement	else		840776	0					
ANR	841147	IfStatement	if ( input [ 1 ] == 'l' || input [ 1 ] == '=' || input [ 1 ] == ' ' || input [ 1 ] == 'j' )		840776	0					
ANR	841148	Condition	input [ 1 ] == 'l' || input [ 1 ] == '=' || input [ 1 ] == ' ' || input [ 1 ] == 'j'	5927:13:171280:171351	840776	0	True				
ANR	841149	OrExpression	input [ 1 ] == 'l' || input [ 1 ] == '=' || input [ 1 ] == ' ' || input [ 1 ] == 'j'		840776	0		||			
ANR	841150	EqualityExpression	input [ 1 ] == 'l'		840776	0		==			
ANR	841151	ArrayIndexing	input [ 1 ]		840776	0					
ANR	841152	Identifier	input		840776	0					
ANR	841153	PrimaryExpression	1		840776	1					
ANR	841154	PrimaryExpression	'l'		840776	1					
ANR	841155	OrExpression	input [ 1 ] == '=' || input [ 1 ] == ' ' || input [ 1 ] == 'j'		840776	1		||			
ANR	841156	EqualityExpression	input [ 1 ] == '='		840776	0		==			
ANR	841157	ArrayIndexing	input [ 1 ]		840776	0					
ANR	841158	Identifier	input		840776	0					
ANR	841159	PrimaryExpression	1		840776	1					
ANR	841160	PrimaryExpression	'='		840776	1					
ANR	841161	OrExpression	input [ 1 ] == ' ' || input [ 1 ] == 'j'		840776	1		||			
ANR	841162	EqualityExpression	input [ 1 ] == ' '		840776	0		==			
ANR	841163	ArrayIndexing	input [ 1 ]		840776	0					
ANR	841164	Identifier	input		840776	0					
ANR	841165	PrimaryExpression	1		840776	1					
ANR	841166	PrimaryExpression	' '		840776	1					
ANR	841167	EqualityExpression	input [ 1 ] == 'j'		840776	1		==			
ANR	841168	ArrayIndexing	input [ 1 ]		840776	0					
ANR	841169	Identifier	input		840776	0					
ANR	841170	PrimaryExpression	1		840776	1					
ANR	841171	PrimaryExpression	'j'		840776	1					
ANR	841172	CompoundStatement		56:87:1482:1482	840776	1					
ANR	841173	IfStatement	if ( input [ 1 ] == ' ' && ! IS_DIGIT ( input [ 2 ] ) )		840776	0					
ANR	841174	Condition	input [ 1 ] == ' ' && ! IS_DIGIT ( input [ 2 ] )	5928:7:171363:171401	840776	0	True				
ANR	841175	AndExpression	input [ 1 ] == ' ' && ! IS_DIGIT ( input [ 2 ] )		840776	0		&&			
ANR	841176	EqualityExpression	input [ 1 ] == ' '		840776	0		==			
ANR	841177	ArrayIndexing	input [ 1 ]		840776	0					
ANR	841178	Identifier	input		840776	0					
ANR	841179	PrimaryExpression	1		840776	1					
ANR	841180	PrimaryExpression	' '		840776	1					
ANR	841181	UnaryOperationExpression	! IS_DIGIT ( input [ 2 ] )		840776	1					
ANR	841182	UnaryOperator	!		840776	0					
ANR	841183	CallExpression	IS_DIGIT ( input [ 2 ] )		840776	1					
ANR	841184	Callee	IS_DIGIT		840776	0					
ANR	841185	Identifier	IS_DIGIT		840776	0					
ANR	841186	ArgumentList	input [ 2 ]		840776	1					
ANR	841187	Argument	input [ 2 ]		840776	0					
ANR	841188	ArrayIndexing	input [ 2 ]		840776	0					
ANR	841189	Identifier	input		840776	0					
ANR	841190	PrimaryExpression	2		840776	1					
ANR	841191	CompoundStatement		57:48:1532:1532	840776	1					
ANR	841192	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , r_asm_mnemonics_byname ( core -> assembler , input + 2 ) )"	5929:4:171410:171485	840776	0	True				
ANR	841193	CallExpression	"r_cons_printf ( ""%d\\n"" , r_asm_mnemonics_byname ( core -> assembler , input + 2 ) )"		840776	0					
ANR	841194	Callee	r_cons_printf		840776	0					
ANR	841195	Identifier	r_cons_printf		840776	0					
ANR	841196	ArgumentList	"""%d\\n"""		840776	1					
ANR	841197	Argument	"""%d\\n"""		840776	0					
ANR	841198	PrimaryExpression	"""%d\\n"""		840776	0					
ANR	841199	Argument	"r_asm_mnemonics_byname ( core -> assembler , input + 2 )"		840776	1					
ANR	841200	CallExpression	"r_asm_mnemonics_byname ( core -> assembler , input + 2 )"		840776	0					
ANR	841201	Callee	r_asm_mnemonics_byname		840776	0					
ANR	841202	Identifier	r_asm_mnemonics_byname		840776	0					
ANR	841203	ArgumentList	core -> assembler		840776	1					
ANR	841204	Argument	core -> assembler		840776	0					
ANR	841205	PtrMemberAccess	core -> assembler		840776	0					
ANR	841206	Identifier	core		840776	0					
ANR	841207	Identifier	assembler		840776	1					
ANR	841208	Argument	input + 2		840776	1					
ANR	841209	AdditiveExpression	input + 2		840776	0		+			
ANR	841210	Identifier	input		840776	0					
ANR	841211	PrimaryExpression	2		840776	1					
ANR	841212	ElseStatement	else		840776	0					
ANR	841213	CompoundStatement		62:4:1718:1784	840776	0					
ANR	841214	IdentifierDeclStatement	"const int id = ( input [ 1 ] == ' ' ) ? ( int ) r_num_math ( core -> num , input + 2 ) : - 1 ;"	5931:4:171503:171584	840776	0	True				
ANR	841215	IdentifierDecl	"id = ( input [ 1 ] == ' ' ) ? ( int ) r_num_math ( core -> num , input + 2 ) : - 1"		840776	0					
ANR	841216	IdentifierDeclType	const int		840776	0					
ANR	841217	Identifier	id		840776	1					
ANR	841218	AssignmentExpression	"id = ( input [ 1 ] == ' ' ) ? ( int ) r_num_math ( core -> num , input + 2 ) : - 1"		840776	2		=			
ANR	841219	Identifier	id		840776	0					
ANR	841220	ConditionalExpression	"( input [ 1 ] == ' ' ) ? ( int ) r_num_math ( core -> num , input + 2 ) : - 1"		840776	1					
ANR	841221	Condition	input [ 1 ] == ' '		840776	0					
ANR	841222	EqualityExpression	input [ 1 ] == ' '		840776	0		==			
ANR	841223	ArrayIndexing	input [ 1 ]		840776	0					
ANR	841224	Identifier	input		840776	0					
ANR	841225	PrimaryExpression	1		840776	1					
ANR	841226	PrimaryExpression	' '		840776	1					
ANR	841227	CastExpression	"( int ) r_num_math ( core -> num , input + 2 )"		840776	1					
ANR	841228	CastTarget	int		840776	0					
ANR	841229	CallExpression	"r_num_math ( core -> num , input + 2 )"		840776	1					
ANR	841230	Callee	r_num_math		840776	0					
ANR	841231	Identifier	r_num_math		840776	0					
ANR	841232	ArgumentList	core -> num		840776	1					
ANR	841233	Argument	core -> num		840776	0					
ANR	841234	PtrMemberAccess	core -> num		840776	0					
ANR	841235	Identifier	core		840776	0					
ANR	841236	Identifier	num		840776	1					
ANR	841237	Argument	input + 2		840776	1					
ANR	841238	AdditiveExpression	input + 2		840776	0		+			
ANR	841239	Identifier	input		840776	0					
ANR	841240	PrimaryExpression	2		840776	1					
ANR	841241	UnaryOperationExpression	- 1		840776	2					
ANR	841242	UnaryOperator	-		840776	0					
ANR	841243	PrimaryExpression	1		840776	1					
ANR	841244	IdentifierDeclStatement	"char * ops = r_asm_mnemonics ( core -> assembler , id , input [ 1 ] == 'j' ) ;"	5933:4:171590:171656	840776	1	True				
ANR	841245	IdentifierDecl	"* ops = r_asm_mnemonics ( core -> assembler , id , input [ 1 ] == 'j' )"		840776	0					
ANR	841246	IdentifierDeclType	char *		840776	0					
ANR	841247	Identifier	ops		840776	1					
ANR	841248	AssignmentExpression	"* ops = r_asm_mnemonics ( core -> assembler , id , input [ 1 ] == 'j' )"		840776	2		=			
ANR	841249	Identifier	ops		840776	0					
ANR	841250	CallExpression	"r_asm_mnemonics ( core -> assembler , id , input [ 1 ] == 'j' )"		840776	1					
ANR	841251	Callee	r_asm_mnemonics		840776	0					
ANR	841252	Identifier	r_asm_mnemonics		840776	0					
ANR	841253	ArgumentList	core -> assembler		840776	1					
ANR	841254	Argument	core -> assembler		840776	0					
ANR	841255	PtrMemberAccess	core -> assembler		840776	0					
ANR	841256	Identifier	core		840776	0					
ANR	841257	Identifier	assembler		840776	1					
ANR	841258	Argument	id		840776	1					
ANR	841259	Identifier	id		840776	0					
ANR	841260	Argument	input [ 1 ] == 'j'		840776	2					
ANR	841261	EqualityExpression	input [ 1 ] == 'j'		840776	0		==			
ANR	841262	ArrayIndexing	input [ 1 ]		840776	0					
ANR	841263	Identifier	input		840776	0					
ANR	841264	PrimaryExpression	1		840776	1					
ANR	841265	PrimaryExpression	'j'		840776	1					
ANR	841266	IfStatement	if ( ops )		840776	2					
ANR	841267	Condition	ops	5934:8:171666:171668	840776	0	True				
ANR	841268	Identifier	ops		840776	0					
ANR	841269	CompoundStatement		63:13:1799:1799	840776	1					
ANR	841270	ExpressionStatement	r_cons_println ( ops )	5935:5:171678:171698	840776	0	True				
ANR	841271	CallExpression	r_cons_println ( ops )		840776	0					
ANR	841272	Callee	r_cons_println		840776	0					
ANR	841273	Identifier	r_cons_println		840776	0					
ANR	841274	ArgumentList	ops		840776	1					
ANR	841275	Argument	ops		840776	0					
ANR	841276	Identifier	ops		840776	0					
ANR	841277	ExpressionStatement	free ( ops )	5936:5:171705:171715	840776	1	True				
ANR	841278	CallExpression	free ( ops )		840776	0					
ANR	841279	Callee	free		840776	0					
ANR	841280	Identifier	free		840776	0					
ANR	841281	ArgumentList	ops		840776	1					
ANR	841282	Argument	ops		840776	0					
ANR	841283	Identifier	ops		840776	0					
ANR	841284	ElseStatement	else		840776	0					
ANR	841285	CompoundStatement		68:9:1865:1865	840776	0					
ANR	841286	ExpressionStatement	"r_core_cmd0 ( core , ""ao~mnemonic[1]"" )"	5940:3:171742:171778	840776	0	True				
ANR	841287	CallExpression	"r_core_cmd0 ( core , ""ao~mnemonic[1]"" )"		840776	0					
ANR	841288	Callee	r_core_cmd0		840776	0					
ANR	841289	Identifier	r_core_cmd0		840776	0					
ANR	841290	ArgumentList	core		840776	1					
ANR	841291	Argument	core		840776	0					
ANR	841292	Identifier	core		840776	0					
ANR	841293	Argument	"""ao~mnemonic[1]"""		840776	1					
ANR	841294	PrimaryExpression	"""ao~mnemonic[1]"""		840776	0					
ANR	841295	BreakStatement	break ;	5942:2:171786:171791	840776	8	True				
ANR	841296	Label	case 'c' :	5943:1:171794:171802	840776	9	True				
ANR	841297	CompoundStatement		82:2:2290:2341	840776	10					
ANR	841298	IdentifierDeclStatement	RList * hooks ;	5945:2:171818:171830	840776	0	True				
ANR	841299	IdentifierDecl	* hooks		840776	0					
ANR	841300	IdentifierDeclType	RList *		840776	0					
ANR	841301	Identifier	hooks		840776	1					
ANR	841302	IdentifierDeclStatement	RListIter * iter ;	5946:2:171834:171849	840776	1	True				
ANR	841303	IdentifierDecl	* iter		840776	0					
ANR	841304	IdentifierDeclType	RListIter *		840776	0					
ANR	841305	Identifier	iter		840776	1					
ANR	841306	IdentifierDeclStatement	RAnalCycleHook * hook ;	5947:2:171853:171873	840776	2	True				
ANR	841307	IdentifierDecl	* hook		840776	0					
ANR	841308	IdentifierDeclType	RAnalCycleHook *		840776	0					
ANR	841309	Identifier	hook		840776	1					
ANR	841310	IdentifierDeclStatement	char * instr_tmp = NULL ;	5948:2:171877:171899	840776	3	True				
ANR	841311	IdentifierDecl	* instr_tmp = NULL		840776	0					
ANR	841312	IdentifierDeclType	char *		840776	0					
ANR	841313	Identifier	instr_tmp		840776	1					
ANR	841314	AssignmentExpression	* instr_tmp = NULL		840776	2		=			
ANR	841315	Identifier	NULL		840776	0					
ANR	841316	Identifier	NULL		840776	1					
ANR	841317	IdentifierDeclStatement	"int ccl = input [ 1 ] ? r_num_math ( core -> num , & input [ 2 ] ) : 0 ;"	5949:2:171903:171959	840776	4	True				
ANR	841318	IdentifierDecl	"ccl = input [ 1 ] ? r_num_math ( core -> num , & input [ 2 ] ) : 0"		840776	0					
ANR	841319	IdentifierDeclType	int		840776	0					
ANR	841320	Identifier	ccl		840776	1					
ANR	841321	AssignmentExpression	"ccl = input [ 1 ] ? r_num_math ( core -> num , & input [ 2 ] ) : 0"		840776	2		=			
ANR	841322	Identifier	ccl		840776	0					
ANR	841323	ConditionalExpression	"input [ 1 ] ? r_num_math ( core -> num , & input [ 2 ] ) : 0"		840776	1					
ANR	841324	Condition	input [ 1 ]		840776	0					
ANR	841325	ArrayIndexing	input [ 1 ]		840776	0					
ANR	841326	Identifier	input		840776	0					
ANR	841327	PrimaryExpression	1		840776	1					
ANR	841328	CallExpression	"r_num_math ( core -> num , & input [ 2 ] )"		840776	1					
ANR	841329	Callee	r_num_math		840776	0					
ANR	841330	Identifier	r_num_math		840776	0					
ANR	841331	ArgumentList	core -> num		840776	1					
ANR	841332	Argument	core -> num		840776	0					
ANR	841333	PtrMemberAccess	core -> num		840776	0					
ANR	841334	Identifier	core		840776	0					
ANR	841335	Identifier	num		840776	1					
ANR	841336	Argument	& input [ 2 ]		840776	1					
ANR	841337	UnaryOperationExpression	& input [ 2 ]		840776	0					
ANR	841338	UnaryOperator	&		840776	0					
ANR	841339	ArrayIndexing	input [ 2 ]		840776	1					
ANR	841340	Identifier	input		840776	0					
ANR	841341	PrimaryExpression	2		840776	1					
ANR	841342	PrimaryExpression	0		840776	2					
ANR	841343	IdentifierDeclStatement	"int cr = r_config_get_i ( core -> config , ""asm.cmt.right"" ) ;"	5950:2:171988:172043	840776	5	True				
ANR	841344	IdentifierDecl	"cr = r_config_get_i ( core -> config , ""asm.cmt.right"" )"		840776	0					
ANR	841345	IdentifierDeclType	int		840776	0					
ANR	841346	Identifier	cr		840776	1					
ANR	841347	AssignmentExpression	"cr = r_config_get_i ( core -> config , ""asm.cmt.right"" )"		840776	2		=			
ANR	841348	Identifier	cr		840776	0					
ANR	841349	CallExpression	"r_config_get_i ( core -> config , ""asm.cmt.right"" )"		840776	1					
ANR	841350	Callee	r_config_get_i		840776	0					
ANR	841351	Identifier	r_config_get_i		840776	0					
ANR	841352	ArgumentList	core -> config		840776	1					
ANR	841353	Argument	core -> config		840776	0					
ANR	841354	PtrMemberAccess	core -> config		840776	0					
ANR	841355	Identifier	core		840776	0					
ANR	841356	Identifier	config		840776	1					
ANR	841357	Argument	"""asm.cmt.right"""		840776	1					
ANR	841358	PrimaryExpression	"""asm.cmt.right"""		840776	0					
ANR	841359	IdentifierDeclStatement	"int fun = r_config_get_i ( core -> config , ""asm.functions"" ) ;"	5951:2:172047:172103	840776	6	True				
ANR	841360	IdentifierDecl	"fun = r_config_get_i ( core -> config , ""asm.functions"" )"		840776	0					
ANR	841361	IdentifierDeclType	int		840776	0					
ANR	841362	Identifier	fun		840776	1					
ANR	841363	AssignmentExpression	"fun = r_config_get_i ( core -> config , ""asm.functions"" )"		840776	2		=			
ANR	841364	Identifier	fun		840776	0					
ANR	841365	CallExpression	"r_config_get_i ( core -> config , ""asm.functions"" )"		840776	1					
ANR	841366	Callee	r_config_get_i		840776	0					
ANR	841367	Identifier	r_config_get_i		840776	0					
ANR	841368	ArgumentList	core -> config		840776	1					
ANR	841369	Argument	core -> config		840776	0					
ANR	841370	PtrMemberAccess	core -> config		840776	0					
ANR	841371	Identifier	core		840776	0					
ANR	841372	Identifier	config		840776	1					
ANR	841373	Argument	"""asm.functions"""		840776	1					
ANR	841374	PrimaryExpression	"""asm.functions"""		840776	0					
ANR	841375	IdentifierDeclStatement	"int li = r_config_get_i ( core -> config , ""asm.lines"" ) ;"	5952:2:172107:172158	840776	7	True				
ANR	841376	IdentifierDecl	"li = r_config_get_i ( core -> config , ""asm.lines"" )"		840776	0					
ANR	841377	IdentifierDeclType	int		840776	0					
ANR	841378	Identifier	li		840776	1					
ANR	841379	AssignmentExpression	"li = r_config_get_i ( core -> config , ""asm.lines"" )"		840776	2		=			
ANR	841380	Identifier	li		840776	0					
ANR	841381	CallExpression	"r_config_get_i ( core -> config , ""asm.lines"" )"		840776	1					
ANR	841382	Callee	r_config_get_i		840776	0					
ANR	841383	Identifier	r_config_get_i		840776	0					
ANR	841384	ArgumentList	core -> config		840776	1					
ANR	841385	Argument	core -> config		840776	0					
ANR	841386	PtrMemberAccess	core -> config		840776	0					
ANR	841387	Identifier	core		840776	0					
ANR	841388	Identifier	config		840776	1					
ANR	841389	Argument	"""asm.lines"""		840776	1					
ANR	841390	PrimaryExpression	"""asm.lines"""		840776	0					
ANR	841391	IdentifierDeclStatement	"int xr = r_config_get_i ( core -> config , ""asm.xrefs"" ) ;"	5953:2:172162:172213	840776	8	True				
ANR	841392	IdentifierDecl	"xr = r_config_get_i ( core -> config , ""asm.xrefs"" )"		840776	0					
ANR	841393	IdentifierDeclType	int		840776	0					
ANR	841394	Identifier	xr		840776	1					
ANR	841395	AssignmentExpression	"xr = r_config_get_i ( core -> config , ""asm.xrefs"" )"		840776	2		=			
ANR	841396	Identifier	xr		840776	0					
ANR	841397	CallExpression	"r_config_get_i ( core -> config , ""asm.xrefs"" )"		840776	1					
ANR	841398	Callee	r_config_get_i		840776	0					
ANR	841399	Identifier	r_config_get_i		840776	0					
ANR	841400	ArgumentList	core -> config		840776	1					
ANR	841401	Argument	core -> config		840776	0					
ANR	841402	PtrMemberAccess	core -> config		840776	0					
ANR	841403	Identifier	core		840776	0					
ANR	841404	Identifier	config		840776	1					
ANR	841405	Argument	"""asm.xrefs"""		840776	1					
ANR	841406	PrimaryExpression	"""asm.xrefs"""		840776	0					
ANR	841407	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.right"" , true )"	5955:2:172218:172270	840776	9	True				
ANR	841408	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.right"" , true )"		840776	0					
ANR	841409	Callee	r_config_set_i		840776	0					
ANR	841410	Identifier	r_config_set_i		840776	0					
ANR	841411	ArgumentList	core -> config		840776	1					
ANR	841412	Argument	core -> config		840776	0					
ANR	841413	PtrMemberAccess	core -> config		840776	0					
ANR	841414	Identifier	core		840776	0					
ANR	841415	Identifier	config		840776	1					
ANR	841416	Argument	"""asm.cmt.right"""		840776	1					
ANR	841417	PrimaryExpression	"""asm.cmt.right"""		840776	0					
ANR	841418	Argument	true		840776	2					
ANR	841419	Identifier	true		840776	0					
ANR	841420	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.functions"" , false )"	5956:2:172274:172327	840776	10	True				
ANR	841421	CallExpression	"r_config_set_i ( core -> config , ""asm.functions"" , false )"		840776	0					
ANR	841422	Callee	r_config_set_i		840776	0					
ANR	841423	Identifier	r_config_set_i		840776	0					
ANR	841424	ArgumentList	core -> config		840776	1					
ANR	841425	Argument	core -> config		840776	0					
ANR	841426	PtrMemberAccess	core -> config		840776	0					
ANR	841427	Identifier	core		840776	0					
ANR	841428	Identifier	config		840776	1					
ANR	841429	Argument	"""asm.functions"""		840776	1					
ANR	841430	PrimaryExpression	"""asm.functions"""		840776	0					
ANR	841431	Argument	false		840776	2					
ANR	841432	Identifier	false		840776	0					
ANR	841433	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines"" , false )"	5957:2:172331:172380	840776	11	True				
ANR	841434	CallExpression	"r_config_set_i ( core -> config , ""asm.lines"" , false )"		840776	0					
ANR	841435	Callee	r_config_set_i		840776	0					
ANR	841436	Identifier	r_config_set_i		840776	0					
ANR	841437	ArgumentList	core -> config		840776	1					
ANR	841438	Argument	core -> config		840776	0					
ANR	841439	PtrMemberAccess	core -> config		840776	0					
ANR	841440	Identifier	core		840776	0					
ANR	841441	Identifier	config		840776	1					
ANR	841442	Argument	"""asm.lines"""		840776	1					
ANR	841443	PrimaryExpression	"""asm.lines"""		840776	0					
ANR	841444	Argument	false		840776	2					
ANR	841445	Identifier	false		840776	0					
ANR	841446	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.xrefs"" , false )"	5958:2:172384:172433	840776	12	True				
ANR	841447	CallExpression	"r_config_set_i ( core -> config , ""asm.xrefs"" , false )"		840776	0					
ANR	841448	Callee	r_config_set_i		840776	0					
ANR	841449	Identifier	r_config_set_i		840776	0					
ANR	841450	ArgumentList	core -> config		840776	1					
ANR	841451	Argument	core -> config		840776	0					
ANR	841452	PtrMemberAccess	core -> config		840776	0					
ANR	841453	Identifier	core		840776	0					
ANR	841454	Identifier	config		840776	1					
ANR	841455	Argument	"""asm.xrefs"""		840776	1					
ANR	841456	PrimaryExpression	"""asm.xrefs"""		840776	0					
ANR	841457	Argument	false		840776	2					
ANR	841458	Identifier	false		840776	0					
ANR	841459	ExpressionStatement	"hooks = r_core_anal_cycles ( core , ccl )"	5960:2:172438:172476	840776	13	True				
ANR	841460	AssignmentExpression	"hooks = r_core_anal_cycles ( core , ccl )"		840776	0		=			
ANR	841461	Identifier	hooks		840776	0					
ANR	841462	CallExpression	"r_core_anal_cycles ( core , ccl )"		840776	1					
ANR	841463	Callee	r_core_anal_cycles		840776	0					
ANR	841464	Identifier	r_core_anal_cycles		840776	0					
ANR	841465	ArgumentList	core		840776	1					
ANR	841466	Argument	core		840776	0					
ANR	841467	Identifier	core		840776	0					
ANR	841468	Argument	ccl		840776	1					
ANR	841469	Identifier	ccl		840776	0					
ANR	841470	ExpressionStatement	r_cons_clear_line ( 1 )	5961:2:172490:172511	840776	14	True				
ANR	841471	CallExpression	r_cons_clear_line ( 1 )		840776	0					
ANR	841472	Callee	r_cons_clear_line		840776	0					
ANR	841473	Identifier	r_cons_clear_line		840776	0					
ANR	841474	ArgumentList	1		840776	1					
ANR	841475	Argument	1		840776	0					
ANR	841476	PrimaryExpression	1		840776	0					
ANR	841477	Statement	r_list_foreach	5962:2:172515:172528	840776	15	True				
ANR	841478	Statement	(	5962:17:172530:172530	840776	16	True				
ANR	841479	Statement	hooks	5962:18:172531:172535	840776	17	True				
ANR	841480	Statement	","	5962:23:172536:172536	840776	18	True				
ANR	841481	Statement	iter	5962:25:172538:172541	840776	19	True				
ANR	841482	Statement	","	5962:29:172542:172542	840776	20	True				
ANR	841483	Statement	hook	5962:31:172544:172547	840776	21	True				
ANR	841484	Statement	)	5962:35:172548:172548	840776	22	True				
ANR	841485	CompoundStatement		91:37:2678:2678	840776	23					
ANR	841486	ExpressionStatement	"instr_tmp = r_core_disassemble_instr ( core , hook -> addr , 1 )"	5963:3:172555:172613	840776	0	True				
ANR	841487	AssignmentExpression	"instr_tmp = r_core_disassemble_instr ( core , hook -> addr , 1 )"		840776	0		=			
ANR	841488	Identifier	instr_tmp		840776	0					
ANR	841489	CallExpression	"r_core_disassemble_instr ( core , hook -> addr , 1 )"		840776	1					
ANR	841490	Callee	r_core_disassemble_instr		840776	0					
ANR	841491	Identifier	r_core_disassemble_instr		840776	0					
ANR	841492	ArgumentList	core		840776	1					
ANR	841493	Argument	core		840776	0					
ANR	841494	Identifier	core		840776	0					
ANR	841495	Argument	hook -> addr		840776	1					
ANR	841496	PtrMemberAccess	hook -> addr		840776	0					
ANR	841497	Identifier	hook		840776	0					
ANR	841498	Identifier	addr		840776	1					
ANR	841499	Argument	1		840776	2					
ANR	841500	PrimaryExpression	1		840776	0					
ANR	841501	ExpressionStatement	"r_cons_printf ( ""After %4i cycles:\\t%s"" , ( ccl - hook -> cycles ) , instr_tmp )"	5964:3:172618:172690	840776	1	True				
ANR	841502	CallExpression	"r_cons_printf ( ""After %4i cycles:\\t%s"" , ( ccl - hook -> cycles ) , instr_tmp )"		840776	0					
ANR	841503	Callee	r_cons_printf		840776	0					
ANR	841504	Identifier	r_cons_printf		840776	0					
ANR	841505	ArgumentList	"""After %4i cycles:\\t%s"""		840776	1					
ANR	841506	Argument	"""After %4i cycles:\\t%s"""		840776	0					
ANR	841507	PrimaryExpression	"""After %4i cycles:\\t%s"""		840776	0					
ANR	841508	Argument	ccl - hook -> cycles		840776	1					
ANR	841509	AdditiveExpression	ccl - hook -> cycles		840776	0		-			
ANR	841510	Identifier	ccl		840776	0					
ANR	841511	PtrMemberAccess	hook -> cycles		840776	1					
ANR	841512	Identifier	hook		840776	0					
ANR	841513	Identifier	cycles		840776	1					
ANR	841514	Argument	instr_tmp		840776	2					
ANR	841515	Identifier	instr_tmp		840776	0					
ANR	841516	ExpressionStatement	r_cons_flush ( )	5965:3:172695:172710	840776	2	True				
ANR	841517	CallExpression	r_cons_flush ( )		840776	0					
ANR	841518	Callee	r_cons_flush		840776	0					
ANR	841519	Identifier	r_cons_flush		840776	0					
ANR	841520	ArgumentList			840776	1					
ANR	841521	ExpressionStatement	free ( instr_tmp )	5966:3:172715:172731	840776	3	True				
ANR	841522	CallExpression	free ( instr_tmp )		840776	0					
ANR	841523	Callee	free		840776	0					
ANR	841524	Identifier	free		840776	0					
ANR	841525	ArgumentList	instr_tmp		840776	1					
ANR	841526	Argument	instr_tmp		840776	0					
ANR	841527	Identifier	instr_tmp		840776	0					
ANR	841528	ExpressionStatement	r_list_free ( hooks )	5968:2:172739:172758	840776	24	True				
ANR	841529	CallExpression	r_list_free ( hooks )		840776	0					
ANR	841530	Callee	r_list_free		840776	0					
ANR	841531	Identifier	r_list_free		840776	0					
ANR	841532	ArgumentList	hooks		840776	1					
ANR	841533	Argument	hooks		840776	0					
ANR	841534	Identifier	hooks		840776	0					
ANR	841535	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.right"" , cr )"	5970:2:172763:172813	840776	25	True				
ANR	841536	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.right"" , cr )"		840776	0					
ANR	841537	Callee	r_config_set_i		840776	0					
ANR	841538	Identifier	r_config_set_i		840776	0					
ANR	841539	ArgumentList	core -> config		840776	1					
ANR	841540	Argument	core -> config		840776	0					
ANR	841541	PtrMemberAccess	core -> config		840776	0					
ANR	841542	Identifier	core		840776	0					
ANR	841543	Identifier	config		840776	1					
ANR	841544	Argument	"""asm.cmt.right"""		840776	1					
ANR	841545	PrimaryExpression	"""asm.cmt.right"""		840776	0					
ANR	841546	Argument	cr		840776	2					
ANR	841547	Identifier	cr		840776	0					
ANR	841548	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.functions"" , fun )"	5971:2:172834:172885	840776	26	True				
ANR	841549	CallExpression	"r_config_set_i ( core -> config , ""asm.functions"" , fun )"		840776	0					
ANR	841550	Callee	r_config_set_i		840776	0					
ANR	841551	Identifier	r_config_set_i		840776	0					
ANR	841552	ArgumentList	core -> config		840776	1					
ANR	841553	Argument	core -> config		840776	0					
ANR	841554	PtrMemberAccess	core -> config		840776	0					
ANR	841555	Identifier	core		840776	0					
ANR	841556	Identifier	config		840776	1					
ANR	841557	Argument	"""asm.functions"""		840776	1					
ANR	841558	PrimaryExpression	"""asm.functions"""		840776	0					
ANR	841559	Argument	fun		840776	2					
ANR	841560	Identifier	fun		840776	0					
ANR	841561	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines"" , li )"	5972:2:172889:172935	840776	27	True				
ANR	841562	CallExpression	"r_config_set_i ( core -> config , ""asm.lines"" , li )"		840776	0					
ANR	841563	Callee	r_config_set_i		840776	0					
ANR	841564	Identifier	r_config_set_i		840776	0					
ANR	841565	ArgumentList	core -> config		840776	1					
ANR	841566	Argument	core -> config		840776	0					
ANR	841567	PtrMemberAccess	core -> config		840776	0					
ANR	841568	Identifier	core		840776	0					
ANR	841569	Identifier	config		840776	1					
ANR	841570	Argument	"""asm.lines"""		840776	1					
ANR	841571	PrimaryExpression	"""asm.lines"""		840776	0					
ANR	841572	Argument	li		840776	2					
ANR	841573	Identifier	li		840776	0					
ANR	841574	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.xrefs"" , xr )"	5973:2:172939:172985	840776	28	True				
ANR	841575	CallExpression	"r_config_set_i ( core -> config , ""asm.xrefs"" , xr )"		840776	0					
ANR	841576	Callee	r_config_set_i		840776	0					
ANR	841577	Identifier	r_config_set_i		840776	0					
ANR	841578	ArgumentList	core -> config		840776	1					
ANR	841579	Argument	core -> config		840776	0					
ANR	841580	PtrMemberAccess	core -> config		840776	0					
ANR	841581	Identifier	core		840776	0					
ANR	841582	Identifier	config		840776	1					
ANR	841583	Argument	"""asm.xrefs"""		840776	1					
ANR	841584	PrimaryExpression	"""asm.xrefs"""		840776	0					
ANR	841585	Argument	xr		840776	2					
ANR	841586	Identifier	xr		840776	0					
ANR	841587	BreakStatement	break ;	5975:1:172991:172996	840776	11	True				
ANR	841588	Label	case 'd' :	5976:1:172999:173007	840776	12	True				
ANR	841589	IfStatement	if ( input [ 1 ] == 'a' )		840776	13					
ANR	841590	Condition	input [ 1 ] == 'a'	5977:6:173024:173038	840776	0	True				
ANR	841591	EqualityExpression	input [ 1 ] == 'a'		840776	0		==			
ANR	841592	ArrayIndexing	input [ 1 ]		840776	0					
ANR	841593	Identifier	input		840776	0					
ANR	841594	PrimaryExpression	1		840776	1					
ANR	841595	PrimaryExpression	'a'		840776	1					
ANR	841596	CompoundStatement		106:23:3169:3169	840776	1					
ANR	841597	ExpressionStatement	"sdb_foreach ( core -> assembler -> pair , listOpDescriptions , core )"	5979:3:173080:173141	840776	0	True				
ANR	841598	CallExpression	"sdb_foreach ( core -> assembler -> pair , listOpDescriptions , core )"		840776	0					
ANR	841599	Callee	sdb_foreach		840776	0					
ANR	841600	Identifier	sdb_foreach		840776	0					
ANR	841601	ArgumentList	core -> assembler -> pair		840776	1					
ANR	841602	Argument	core -> assembler -> pair		840776	0					
ANR	841603	PtrMemberAccess	core -> assembler -> pair		840776	0					
ANR	841604	PtrMemberAccess	core -> assembler		840776	0					
ANR	841605	Identifier	core		840776	0					
ANR	841606	Identifier	assembler		840776	1					
ANR	841607	Identifier	pair		840776	1					
ANR	841608	Argument	listOpDescriptions		840776	1					
ANR	841609	Identifier	listOpDescriptions		840776	0					
ANR	841610	Argument	core		840776	2					
ANR	841611	Identifier	core		840776	0					
ANR	841612	ElseStatement	else		840776	0					
ANR	841613	IfStatement	if ( input [ 1 ] == 0 )		840776	0					
ANR	841614	Condition	input [ 1 ] == 0	5980:13:173156:173168	840776	0	True				
ANR	841615	EqualityExpression	input [ 1 ] == 0		840776	0		==			
ANR	841616	ArrayIndexing	input [ 1 ]		840776	0					
ANR	841617	Identifier	input		840776	0					
ANR	841618	PrimaryExpression	1		840776	1					
ANR	841619	PrimaryExpression	0		840776	1					
ANR	841620	CompoundStatement		110:3:3304:3341	840776	1					
ANR	841621	IdentifierDeclStatement	"int cur = R_MAX ( core -> print -> cur , 0 ) ;"	5981:3:173176:173213	840776	0	True				
ANR	841622	IdentifierDecl	"cur = R_MAX ( core -> print -> cur , 0 )"		840776	0					
ANR	841623	IdentifierDeclType	int		840776	0					
ANR	841624	Identifier	cur		840776	1					
ANR	841625	AssignmentExpression	"cur = R_MAX ( core -> print -> cur , 0 )"		840776	2		=			
ANR	841626	Identifier	cur		840776	0					
ANR	841627	CallExpression	"R_MAX ( core -> print -> cur , 0 )"		840776	1					
ANR	841628	Callee	R_MAX		840776	0					
ANR	841629	Identifier	R_MAX		840776	0					
ANR	841630	ArgumentList	core -> print -> cur		840776	1					
ANR	841631	Argument	core -> print -> cur		840776	0					
ANR	841632	PtrMemberAccess	core -> print -> cur		840776	0					
ANR	841633	PtrMemberAccess	core -> print		840776	0					
ANR	841634	Identifier	core		840776	0					
ANR	841635	Identifier	print		840776	1					
ANR	841636	Identifier	cur		840776	1					
ANR	841637	Argument	0		840776	1					
ANR	841638	PrimaryExpression	0		840776	0					
ANR	841639	ExpressionStatement	"core_anal_bytes ( core , core -> block + cur , core -> blocksize , 1 , 'd' )"	5983:3:173260:173326	840776	1	True				
ANR	841640	CallExpression	"core_anal_bytes ( core , core -> block + cur , core -> blocksize , 1 , 'd' )"		840776	0					
ANR	841641	Callee	core_anal_bytes		840776	0					
ANR	841642	Identifier	core_anal_bytes		840776	0					
ANR	841643	ArgumentList	core		840776	1					
ANR	841644	Argument	core		840776	0					
ANR	841645	Identifier	core		840776	0					
ANR	841646	Argument	core -> block + cur		840776	1					
ANR	841647	AdditiveExpression	core -> block + cur		840776	0		+			
ANR	841648	PtrMemberAccess	core -> block		840776	0					
ANR	841649	Identifier	core		840776	0					
ANR	841650	Identifier	block		840776	1					
ANR	841651	Identifier	cur		840776	1					
ANR	841652	Argument	core -> blocksize		840776	2					
ANR	841653	PtrMemberAccess	core -> blocksize		840776	0					
ANR	841654	Identifier	core		840776	0					
ANR	841655	Identifier	blocksize		840776	1					
ANR	841656	Argument	1		840776	3					
ANR	841657	PrimaryExpression	1		840776	0					
ANR	841658	Argument	'd'		840776	4					
ANR	841659	PrimaryExpression	'd'		840776	0					
ANR	841660	ElseStatement	else		840776	0					
ANR	841661	IfStatement	if ( input [ 1 ] == ' ' )		840776	0					
ANR	841662	Condition	input [ 1 ] == ' '	5984:13:173341:173355	840776	0	True				
ANR	841663	EqualityExpression	input [ 1 ] == ' '		840776	0		==			
ANR	841664	ArrayIndexing	input [ 1 ]		840776	0					
ANR	841665	Identifier	input		840776	0					
ANR	841666	PrimaryExpression	1		840776	1					
ANR	841667	PrimaryExpression	' '		840776	1					
ANR	841668	CompoundStatement		114:3:3491:3544	840776	1					
ANR	841669	IdentifierDeclStatement	"char * d = r_asm_describe ( core -> assembler , input + 2 ) ;"	5985:3:173363:173416	840776	0	True				
ANR	841670	IdentifierDecl	"* d = r_asm_describe ( core -> assembler , input + 2 )"		840776	0					
ANR	841671	IdentifierDeclType	char *		840776	0					
ANR	841672	Identifier	d		840776	1					
ANR	841673	AssignmentExpression	"* d = r_asm_describe ( core -> assembler , input + 2 )"		840776	2		=			
ANR	841674	Identifier	d		840776	0					
ANR	841675	CallExpression	"r_asm_describe ( core -> assembler , input + 2 )"		840776	1					
ANR	841676	Callee	r_asm_describe		840776	0					
ANR	841677	Identifier	r_asm_describe		840776	0					
ANR	841678	ArgumentList	core -> assembler		840776	1					
ANR	841679	Argument	core -> assembler		840776	0					
ANR	841680	PtrMemberAccess	core -> assembler		840776	0					
ANR	841681	Identifier	core		840776	0					
ANR	841682	Identifier	assembler		840776	1					
ANR	841683	Argument	input + 2		840776	1					
ANR	841684	AdditiveExpression	input + 2		840776	0		+			
ANR	841685	Identifier	input		840776	0					
ANR	841686	PrimaryExpression	2		840776	1					
ANR	841687	IfStatement	if ( d && * d )		840776	1					
ANR	841688	Condition	d && * d	5986:7:173425:173431	840776	0	True				
ANR	841689	AndExpression	d && * d		840776	0		&&			
ANR	841690	Identifier	d		840776	0					
ANR	841691	UnaryOperationExpression	* d		840776	1					
ANR	841692	UnaryOperator	*		840776	0					
ANR	841693	Identifier	d		840776	1					
ANR	841694	CompoundStatement		115:16:3562:3562	840776	1					
ANR	841695	ExpressionStatement	r_cons_println ( d )	5987:4:173440:173458	840776	0	True				
ANR	841696	CallExpression	r_cons_println ( d )		840776	0					
ANR	841697	Callee	r_cons_println		840776	0					
ANR	841698	Identifier	r_cons_println		840776	0					
ANR	841699	ArgumentList	d		840776	1					
ANR	841700	Argument	d		840776	0					
ANR	841701	Identifier	d		840776	0					
ANR	841702	ExpressionStatement	free ( d )	5988:4:173464:173472	840776	1	True				
ANR	841703	CallExpression	free ( d )		840776	0					
ANR	841704	Callee	free		840776	0					
ANR	841705	Identifier	free		840776	0					
ANR	841706	ArgumentList	d		840776	1					
ANR	841707	Argument	d		840776	0					
ANR	841708	Identifier	d		840776	0					
ANR	841709	ElseStatement	else		840776	0					
ANR	841710	CompoundStatement		118:10:3612:3612	840776	0					
ANR	841711	ExpressionStatement	"eprintf ( ""Unknown mnemonic\\n"" )"	5990:4:173490:173520	840776	0	True				
ANR	841712	CallExpression	"eprintf ( ""Unknown mnemonic\\n"" )"		840776	0					
ANR	841713	Callee	eprintf		840776	0					
ANR	841714	Identifier	eprintf		840776	0					
ANR	841715	ArgumentList	"""Unknown mnemonic\\n"""		840776	1					
ANR	841716	Argument	"""Unknown mnemonic\\n"""		840776	0					
ANR	841717	PrimaryExpression	"""Unknown mnemonic\\n"""		840776	0					
ANR	841718	ElseStatement	else		840776	0					
ANR	841719	CompoundStatement		121:9:3664:3664	840776	0					
ANR	841720	ExpressionStatement	"eprintf ( ""Use: aod[?a] ([opcode])    describe current, [given] or all mnemonics\\n"" )"	5993:3:173541:173624	840776	0	True				
ANR	841721	CallExpression	"eprintf ( ""Use: aod[?a] ([opcode])    describe current, [given] or all mnemonics\\n"" )"		840776	0					
ANR	841722	Callee	eprintf		840776	0					
ANR	841723	Identifier	eprintf		840776	0					
ANR	841724	ArgumentList	"""Use: aod[?a] ([opcode])    describe current, [given] or all mnemonics\\n"""		840776	1					
ANR	841725	Argument	"""Use: aod[?a] ([opcode])    describe current, [given] or all mnemonics\\n"""		840776	0					
ANR	841726	PrimaryExpression	"""Use: aod[?a] ([opcode])    describe current, [given] or all mnemonics\\n"""		840776	0					
ANR	841727	BreakStatement	break ;	5995:2:173632:173637	840776	14	True				
ANR	841728	Label	case '*' :	5996:1:173640:173648	840776	15	True				
ANR	841729	ExpressionStatement	"r_core_anal_hint_list ( core -> anal , input [ 0 ] )"	5997:2:173652:173696	840776	16	True				
ANR	841730	CallExpression	"r_core_anal_hint_list ( core -> anal , input [ 0 ] )"		840776	0					
ANR	841731	Callee	r_core_anal_hint_list		840776	0					
ANR	841732	Identifier	r_core_anal_hint_list		840776	0					
ANR	841733	ArgumentList	core -> anal		840776	1					
ANR	841734	Argument	core -> anal		840776	0					
ANR	841735	PtrMemberAccess	core -> anal		840776	0					
ANR	841736	Identifier	core		840776	0					
ANR	841737	Identifier	anal		840776	1					
ANR	841738	Argument	input [ 0 ]		840776	1					
ANR	841739	ArrayIndexing	input [ 0 ]		840776	0					
ANR	841740	Identifier	input		840776	0					
ANR	841741	PrimaryExpression	0		840776	1					
ANR	841742	BreakStatement	break ;	5998:2:173700:173705	840776	17	True				
ANR	841743	Label	case 0 :	5999:1:173708:173714	840776	18	True				
ANR	841744	Label	case ' ' :	6000:1:173717:173725	840776	19	True				
ANR	841745	CompoundStatement		130:3:3860:3873	840776	20					
ANR	841746	IdentifierDeclStatement	int count = 0 ;	6001:3:173732:173745	840776	0	True				
ANR	841747	IdentifierDecl	count = 0		840776	0					
ANR	841748	IdentifierDeclType	int		840776	0					
ANR	841749	Identifier	count		840776	1					
ANR	841750	AssignmentExpression	count = 0		840776	2		=			
ANR	841751	Identifier	count		840776	0					
ANR	841752	PrimaryExpression	0		840776	1					
ANR	841753	IfStatement	if ( input [ 0 ] )		840776	1					
ANR	841754	Condition	input [ 0 ]	6002:7:173754:173761	840776	0	True				
ANR	841755	ArrayIndexing	input [ 0 ]		840776	0					
ANR	841756	Identifier	input		840776	0					
ANR	841757	PrimaryExpression	0		840776	1					
ANR	841758	CompoundStatement		131:17:3892:3892	840776	1					
ANR	841759	ExpressionStatement	"l = ( int ) r_num_get ( core -> num , input + 1 )"	6003:4:173770:173811	840776	0	True				
ANR	841760	AssignmentExpression	"l = ( int ) r_num_get ( core -> num , input + 1 )"		840776	0		=			
ANR	841761	Identifier	l		840776	0					
ANR	841762	CastExpression	"( int ) r_num_get ( core -> num , input + 1 )"		840776	1					
ANR	841763	CastTarget	int		840776	0					
ANR	841764	CallExpression	"r_num_get ( core -> num , input + 1 )"		840776	1					
ANR	841765	Callee	r_num_get		840776	0					
ANR	841766	Identifier	r_num_get		840776	0					
ANR	841767	ArgumentList	core -> num		840776	1					
ANR	841768	Argument	core -> num		840776	0					
ANR	841769	PtrMemberAccess	core -> num		840776	0					
ANR	841770	Identifier	core		840776	0					
ANR	841771	Identifier	num		840776	1					
ANR	841772	Argument	input + 1		840776	1					
ANR	841773	AdditiveExpression	input + 1		840776	0		+			
ANR	841774	Identifier	input		840776	0					
ANR	841775	PrimaryExpression	1		840776	1					
ANR	841776	IfStatement	if ( l > 0 )		840776	1					
ANR	841777	Condition	l > 0	6004:8:173821:173825	840776	0	True				
ANR	841778	RelationalExpression	l > 0		840776	0		>			
ANR	841779	Identifier	l		840776	0					
ANR	841780	PrimaryExpression	0		840776	1					
ANR	841781	CompoundStatement		133:15:3956:3956	840776	1					
ANR	841782	ExpressionStatement	count = l	6005:5:173835:173844	840776	0	True				
ANR	841783	AssignmentExpression	count = l		840776	0		=			
ANR	841784	Identifier	count		840776	0					
ANR	841785	Identifier	l		840776	1					
ANR	841786	IfStatement	if ( l > tbs )		840776	2					
ANR	841787	Condition	l > tbs	6007:8:173860:173866	840776	0	True				
ANR	841788	RelationalExpression	l > tbs		840776	0		>			
ANR	841789	Identifier	l		840776	0					
ANR	841790	Identifier	tbs		840776	1					
ANR	841791	CompoundStatement		136:17:3997:3997	840776	1					
ANR	841792	ExpressionStatement	"r_core_block_size ( core , l * 4 )"	6008:5:173876:173907	840776	0	True				
ANR	841793	CallExpression	"r_core_block_size ( core , l * 4 )"		840776	0					
ANR	841794	Callee	r_core_block_size		840776	0					
ANR	841795	Identifier	r_core_block_size		840776	0					
ANR	841796	ArgumentList	core		840776	1					
ANR	841797	Argument	core		840776	0					
ANR	841798	Identifier	core		840776	0					
ANR	841799	Argument	l * 4		840776	1					
ANR	841800	MultiplicativeExpression	l * 4		840776	0		*			
ANR	841801	Identifier	l		840776	0					
ANR	841802	PrimaryExpression	4		840776	1					
ANR	841803	ElseStatement	else		840776	0					
ANR	841804	CompoundStatement		140:10:4069:4069	840776	0					
ANR	841805	ExpressionStatement	len = l = core -> blocksize	6012:4:173947:173972	840776	0	True				
ANR	841806	AssignmentExpression	len = l = core -> blocksize		840776	0		=			
ANR	841807	Identifier	len		840776	0					
ANR	841808	AssignmentExpression	l = core -> blocksize		840776	1		=			
ANR	841809	Identifier	l		840776	0					
ANR	841810	PtrMemberAccess	core -> blocksize		840776	1					
ANR	841811	Identifier	core		840776	0					
ANR	841812	Identifier	blocksize		840776	1					
ANR	841813	ExpressionStatement	count = 1	6013:4:173978:173987	840776	1	True				
ANR	841814	AssignmentExpression	count = 1		840776	0		=			
ANR	841815	Identifier	count		840776	0					
ANR	841816	PrimaryExpression	1		840776	1					
ANR	841817	ExpressionStatement	"core_anal_bytes ( core , core -> block , len , count , 0 )"	6015:3:173997:174047	840776	2	True				
ANR	841818	CallExpression	"core_anal_bytes ( core , core -> block , len , count , 0 )"		840776	0					
ANR	841819	Callee	core_anal_bytes		840776	0					
ANR	841820	Identifier	core_anal_bytes		840776	0					
ANR	841821	ArgumentList	core		840776	1					
ANR	841822	Argument	core		840776	0					
ANR	841823	Identifier	core		840776	0					
ANR	841824	Argument	core -> block		840776	1					
ANR	841825	PtrMemberAccess	core -> block		840776	0					
ANR	841826	Identifier	core		840776	0					
ANR	841827	Identifier	block		840776	1					
ANR	841828	Argument	len		840776	2					
ANR	841829	Identifier	len		840776	0					
ANR	841830	Argument	count		840776	3					
ANR	841831	Identifier	count		840776	0					
ANR	841832	Argument	0		840776	4					
ANR	841833	PrimaryExpression	0		840776	0					
ANR	841834	BreakStatement	break ;	6017:2:174055:174060	840776	21	True				
ANR	841835	Label	default :	6018:1:174063:174070	840776	22	True				
ANR	841836	Identifier	default		840776	0					
ANR	841837	Label	case '?' :	6019:1:174073:174081	840776	23	True				
ANR	841838	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ao )"	6020:2:174085:174120	840776	24	True				
ANR	841839	CallExpression	"r_core_cmd_help ( core , help_msg_ao )"		840776	0					
ANR	841840	Callee	r_core_cmd_help		840776	0					
ANR	841841	Identifier	r_core_cmd_help		840776	0					
ANR	841842	ArgumentList	core		840776	1					
ANR	841843	Argument	core		840776	0					
ANR	841844	Identifier	core		840776	0					
ANR	841845	Argument	help_msg_ao		840776	1					
ANR	841846	Identifier	help_msg_ao		840776	0					
ANR	841847	BreakStatement	break ;	6021:2:174124:174129	840776	25	True				
ANR	841848	ReturnType	static void		840776	1					
ANR	841849	Identifier	cmd_anal_opcode		840776	2					
ANR	841850	ParameterList	"RCore * core , const char * input"		840776	3					
ANR	841851	Parameter	RCore * core	5872:28:169839:169849	840776	0	True				
ANR	841852	ParameterType	RCore *		840776	0					
ANR	841853	Identifier	core		840776	1					
ANR	841854	Parameter	const char * input	5872:41:169852:169868	840776	1	True				
ANR	841855	ParameterType	const char *		840776	0					
ANR	841856	Identifier	input		840776	1					
ANR	841857	CFGEntryNode	ENTRY		840776		True				
ANR	841858	CFGExitNode	EXIT		840776		True				
ANR	841859	Symbol	r_asm_mnemonics		840776						
ANR	841860	Symbol	obs		840776						
ANR	841861	Symbol	listOpDescriptions		840776						
ANR	841862	Symbol	* input		840776						
ANR	841863	Symbol	strchr		840776						
ANR	841864	Symbol	hook -> cycles		840776						
ANR	841865	Symbol	ccl		840776						
ANR	841866	Symbol	core -> assembler -> pair		840776						
ANR	841867	Symbol	* core -> assembler		840776						
ANR	841868	Symbol	strlen		840776						
ANR	841869	Symbol	pad		840776						
ANR	841870	Symbol	hook		840776						
ANR	841871	Symbol	len		840776						
ANR	841872	Symbol	r_num_get		840776						
ANR	841873	Symbol	id		840776						
ANR	841874	Symbol	core -> num		840776						
ANR	841875	Symbol	core -> blocksize		840776						
ANR	841876	Symbol	hook -> addr		840776						
ANR	841877	Symbol	NULL		840776						
ANR	841878	Symbol	core -> block		840776						
ANR	841879	Symbol	count		840776						
ANR	841880	Symbol	iter		840776						
ANR	841881	Symbol	r_core_anal_cycles		840776						
ANR	841882	Symbol	core		840776						
ANR	841883	Symbol	input		840776						
ANR	841884	Symbol	ops		840776						
ANR	841885	Symbol	core -> print -> cur		840776						
ANR	841886	Symbol	r_config_get_i		840776						
ANR	841887	Symbol	true		840776						
ANR	841888	Symbol	r_core_disassemble_instr		840776						
ANR	841889	Symbol	core -> print		840776						
ANR	841890	Symbol	nl		840776						
ANR	841891	Symbol	desc		840776						
ANR	841892	Symbol	cur		840776						
ANR	841893	Symbol	tbs		840776						
ANR	841894	Symbol	* hook		840776						
ANR	841895	Symbol	* core		840776						
ANR	841896	Symbol	core -> assembler		840776						
ANR	841897	Symbol	core -> anal		840776						
ANR	841898	Symbol	r_num_math		840776						
ANR	841899	Symbol	help_msg_ao		840776						
ANR	841900	Symbol	hooks		840776						
ANR	841901	Symbol	* * core		840776						
ANR	841902	Symbol	instr_tmp		840776						
ANR	841903	Symbol	core -> config		840776						
ANR	841904	Symbol	r_str_pad		840776						
ANR	841905	Symbol	d		840776						
ANR	841906	Symbol	* nl		840776						
ANR	841907	Symbol	false		840776						
ANR	841908	Symbol	l		840776						
ANR	841909	Symbol	* d		840776						
ANR	841910	Symbol	ptr		840776						
ANR	841911	Symbol	IS_DIGIT		840776						
ANR	841912	Symbol	cr		840776						
ANR	841913	Symbol	r_asm_mnemonics_byname		840776						
ANR	841914	Symbol	* core -> print		840776						
ANR	841915	Symbol	r_asm_describe		840776						
ANR	841916	Symbol	R_MAX		840776						
ANR	841917	Symbol	xr		840776						
ANR	841918	Symbol	li		840776						
ANR	841919	Symbol	fun		840776						
ANR	841920	Function	cmd_anal_jumps	6025:0:174137:174250							
ANR	841921	FunctionDef	"cmd_anal_jumps (RCore * core , const char * input)"		841920	0					
ANR	841922	CompoundStatement		6025:59:174196:174250	841920	0					
ANR	841923	ExpressionStatement	"r_core_cmdf ( core , ""af @@= `ax~ref.code.jmp[1]`"" )"	6026:1:174199:174248	841920	0	True				
ANR	841924	CallExpression	"r_core_cmdf ( core , ""af @@= `ax~ref.code.jmp[1]`"" )"		841920	0					
ANR	841925	Callee	r_core_cmdf		841920	0					
ANR	841926	Identifier	r_core_cmdf		841920	0					
ANR	841927	ArgumentList	core		841920	1					
ANR	841928	Argument	core		841920	0					
ANR	841929	Identifier	core		841920	0					
ANR	841930	Argument	"""af @@= `ax~ref.code.jmp[1]`"""		841920	1					
ANR	841931	PrimaryExpression	"""af @@= `ax~ref.code.jmp[1]`"""		841920	0					
ANR	841932	ReturnType	static void		841920	1					
ANR	841933	Identifier	cmd_anal_jumps		841920	2					
ANR	841934	ParameterList	"RCore * core , const char * input"		841920	3					
ANR	841935	Parameter	RCore * core	6025:27:174164:174174	841920	0	True				
ANR	841936	ParameterType	RCore *		841920	0					
ANR	841937	Identifier	core		841920	1					
ANR	841938	Parameter	const char * input	6025:40:174177:174193	841920	1	True				
ANR	841939	ParameterType	const char *		841920	0					
ANR	841940	Identifier	input		841920	1					
ANR	841941	CFGEntryNode	ENTRY		841920		True				
ANR	841942	CFGExitNode	EXIT		841920		True				
ANR	841943	Symbol	core		841920						
ANR	841944	Symbol	input		841920						
ANR	841945	Function	cmd_anal_aftertraps	6030:0:174284:176507							
ANR	841946	FunctionDef	"cmd_anal_aftertraps (RCore * core , const char * input)"		841945	0					
ANR	841947	CompoundStatement		6030:64:174348:176507	841945	0					
ANR	841948	IdentifierDeclStatement	"int bufi , minop = 1 ;"	6031:1:174351:174370	841945	0	True				
ANR	841949	IdentifierDecl	bufi		841945	0					
ANR	841950	IdentifierDeclType	int		841945	0					
ANR	841951	Identifier	bufi		841945	1					
ANR	841952	IdentifierDecl	minop = 1		841945	1					
ANR	841953	IdentifierDeclType	int		841945	0					
ANR	841954	Identifier	minop		841945	1					
ANR	841955	AssignmentExpression	minop = 1		841945	2		=			
ANR	841956	Identifier	minop		841945	0					
ANR	841957	PrimaryExpression	1		841945	1					
ANR	841958	IdentifierDeclStatement	ut8 * buf ;	6032:1:174378:174386	841945	1	True				
ANR	841959	IdentifierDecl	* buf		841945	0					
ANR	841960	IdentifierDeclType	ut8 *		841945	0					
ANR	841961	Identifier	buf		841945	1					
ANR	841962	IdentifierDeclStatement	RAnalOp op = { 0 } ;	6033:1:174389:174405	841945	2	True				
ANR	841963	IdentifierDecl	op = { 0 }		841945	0					
ANR	841964	IdentifierDeclType	RAnalOp		841945	0					
ANR	841965	Identifier	op		841945	1					
ANR	841966	AssignmentExpression	op = { 0 }		841945	2		=			
ANR	841967	Identifier	op		841945	0					
ANR	841968	InitializerList	0		841945	1					
ANR	841969	PrimaryExpression	0		841945	0					
ANR	841970	IdentifierDeclStatement	"ut64 addr , addr_end ;"	6034:1:174408:174427	841945	3	True				
ANR	841971	IdentifierDecl	addr		841945	0					
ANR	841972	IdentifierDeclType	ut64		841945	0					
ANR	841973	Identifier	addr		841945	1					
ANR	841974	IdentifierDecl	addr_end		841945	1					
ANR	841975	IdentifierDeclType	ut64		841945	0					
ANR	841976	Identifier	addr_end		841945	1					
ANR	841977	IdentifierDeclStatement	"ut64 len = r_num_math ( core -> num , input ) ;"	6035:1:174430:174470	841945	4	True				
ANR	841978	IdentifierDecl	"len = r_num_math ( core -> num , input )"		841945	0					
ANR	841979	IdentifierDeclType	ut64		841945	0					
ANR	841980	Identifier	len		841945	1					
ANR	841981	AssignmentExpression	"len = r_num_math ( core -> num , input )"		841945	2		=			
ANR	841982	Identifier	len		841945	0					
ANR	841983	CallExpression	"r_num_math ( core -> num , input )"		841945	1					
ANR	841984	Callee	r_num_math		841945	0					
ANR	841985	Identifier	r_num_math		841945	0					
ANR	841986	ArgumentList	core -> num		841945	1					
ANR	841987	Argument	core -> num		841945	0					
ANR	841988	PtrMemberAccess	core -> num		841945	0					
ANR	841989	Identifier	core		841945	0					
ANR	841990	Identifier	num		841945	1					
ANR	841991	Argument	input		841945	1					
ANR	841992	Identifier	input		841945	0					
ANR	841993	IfStatement	if ( len > 0xffffff )		841945	5					
ANR	841994	Condition	len > 0xffffff	6036:5:174477:174490	841945	0	True				
ANR	841995	RelationalExpression	len > 0xffffff		841945	0		>			
ANR	841996	Identifier	len		841945	0					
ANR	841997	PrimaryExpression	0xffffff		841945	1					
ANR	841998	CompoundStatement		7:21:144:144	841945	1					
ANR	841999	ExpressionStatement	"eprintf ( ""Too big\\n"" )"	6037:2:174497:174518	841945	0	True				
ANR	842000	CallExpression	"eprintf ( ""Too big\\n"" )"		841945	0					
ANR	842001	Callee	eprintf		841945	0					
ANR	842002	Identifier	eprintf		841945	0					
ANR	842003	ArgumentList	"""Too big\\n"""		841945	1					
ANR	842004	Argument	"""Too big\\n"""		841945	0					
ANR	842005	PrimaryExpression	"""Too big\\n"""		841945	0					
ANR	842006	ReturnStatement	return ;	6038:2:174522:174528	841945	1	True				
ANR	842007	IdentifierDeclStatement	RBinFile * bf = r_bin_cur ( core -> bin ) ;	6040:1:174534:174570	841945	6	True				
ANR	842008	IdentifierDecl	* bf = r_bin_cur ( core -> bin )		841945	0					
ANR	842009	IdentifierDeclType	RBinFile *		841945	0					
ANR	842010	Identifier	bf		841945	1					
ANR	842011	AssignmentExpression	* bf = r_bin_cur ( core -> bin )		841945	2		=			
ANR	842012	Identifier	bf		841945	0					
ANR	842013	CallExpression	r_bin_cur ( core -> bin )		841945	1					
ANR	842014	Callee	r_bin_cur		841945	0					
ANR	842015	Identifier	r_bin_cur		841945	0					
ANR	842016	ArgumentList	core -> bin		841945	1					
ANR	842017	Argument	core -> bin		841945	0					
ANR	842018	PtrMemberAccess	core -> bin		841945	0					
ANR	842019	Identifier	core		841945	0					
ANR	842020	Identifier	bin		841945	1					
ANR	842021	IfStatement	if ( ! bf )		841945	7					
ANR	842022	Condition	! bf	6041:5:174577:174579	841945	0	True				
ANR	842023	UnaryOperationExpression	! bf		841945	0					
ANR	842024	UnaryOperator	!		841945	0					
ANR	842025	Identifier	bf		841945	1					
ANR	842026	CompoundStatement		12:10:233:233	841945	1					
ANR	842027	ReturnStatement	return ;	6042:2:174586:174592	841945	0	True				
ANR	842028	ExpressionStatement	addr = core -> offset	6044:1:174598:174617	841945	8	True				
ANR	842029	AssignmentExpression	addr = core -> offset		841945	0		=			
ANR	842030	Identifier	addr		841945	0					
ANR	842031	PtrMemberAccess	core -> offset		841945	1					
ANR	842032	Identifier	core		841945	0					
ANR	842033	Identifier	offset		841945	1					
ANR	842034	IfStatement	if ( ! len )		841945	9					
ANR	842035	Condition	! len	6045:5:174624:174627	841945	0	True				
ANR	842036	UnaryOperationExpression	! len		841945	0					
ANR	842037	UnaryOperator	!		841945	0					
ANR	842038	Identifier	len		841945	1					
ANR	842039	CompoundStatement		18:2:345:388	841945	1					
ANR	842040	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( core -> io , addr ) ;"	6047:2:174694:174737	841945	0	True				
ANR	842041	IdentifierDecl	"* map = r_io_map_get ( core -> io , addr )"		841945	0					
ANR	842042	IdentifierDeclType	RIOMap *		841945	0					
ANR	842043	Identifier	map		841945	1					
ANR	842044	AssignmentExpression	"* map = r_io_map_get ( core -> io , addr )"		841945	2		=			
ANR	842045	Identifier	map		841945	0					
ANR	842046	CallExpression	"r_io_map_get ( core -> io , addr )"		841945	1					
ANR	842047	Callee	r_io_map_get		841945	0					
ANR	842048	Identifier	r_io_map_get		841945	0					
ANR	842049	ArgumentList	core -> io		841945	1					
ANR	842050	Argument	core -> io		841945	0					
ANR	842051	PtrMemberAccess	core -> io		841945	0					
ANR	842052	Identifier	core		841945	0					
ANR	842053	Identifier	io		841945	1					
ANR	842054	Argument	addr		841945	1					
ANR	842055	Identifier	addr		841945	0					
ANR	842056	IfStatement	if ( map && ( map -> perm & R_PERM_X ) )		841945	1					
ANR	842057	Condition	map && ( map -> perm & R_PERM_X )	6048:6:174745:174773	841945	0	True				
ANR	842058	AndExpression	map && ( map -> perm & R_PERM_X )		841945	0		&&			
ANR	842059	Identifier	map		841945	0					
ANR	842060	BitAndExpression	map -> perm & R_PERM_X		841945	1		&			
ANR	842061	PtrMemberAccess	map -> perm		841945	0					
ANR	842062	Identifier	map		841945	0					
ANR	842063	Identifier	perm		841945	1					
ANR	842064	Identifier	R_PERM_X		841945	1					
ANR	842065	CompoundStatement		19:37:427:427	841945	1					
ANR	842066	IfStatement	if ( map -> itv . size > bf -> size )		841945	0					
ANR	842067	Condition	map -> itv . size > bf -> size	6050:7:174817:174840	841945	0	True				
ANR	842068	RelationalExpression	map -> itv . size > bf -> size		841945	0		>			
ANR	842069	MemberAccess	map -> itv . size		841945	0					
ANR	842070	PtrMemberAccess	map -> itv		841945	0					
ANR	842071	Identifier	map		841945	0					
ANR	842072	Identifier	itv		841945	1					
ANR	842073	Identifier	size		841945	1					
ANR	842074	PtrMemberAccess	bf -> size		841945	1					
ANR	842075	Identifier	bf		841945	0					
ANR	842076	Identifier	size		841945	1					
ANR	842077	CompoundStatement		21:33:494:494	841945	1					
ANR	842078	ExpressionStatement	addr = map -> itv . addr	6051:4:174849:174869	841945	0	True				
ANR	842079	AssignmentExpression	addr = map -> itv . addr		841945	0		=			
ANR	842080	Identifier	addr		841945	0					
ANR	842081	MemberAccess	map -> itv . addr		841945	1					
ANR	842082	PtrMemberAccess	map -> itv		841945	0					
ANR	842083	Identifier	map		841945	0					
ANR	842084	Identifier	itv		841945	1					
ANR	842085	Identifier	addr		841945	1					
ANR	842086	IfStatement	if ( bf -> size > map -> delta )		841945	1					
ANR	842087	Condition	bf -> size > map -> delta	6052:8:174879:174899	841945	0	True				
ANR	842088	RelationalExpression	bf -> size > map -> delta		841945	0		>			
ANR	842089	PtrMemberAccess	bf -> size		841945	0					
ANR	842090	Identifier	bf		841945	0					
ANR	842091	Identifier	size		841945	1					
ANR	842092	PtrMemberAccess	map -> delta		841945	1					
ANR	842093	Identifier	map		841945	0					
ANR	842094	Identifier	delta		841945	1					
ANR	842095	CompoundStatement		23:31:553:553	841945	1					
ANR	842096	ExpressionStatement	len = bf -> size - map -> delta	6053:5:174909:174936	841945	0	True				
ANR	842097	AssignmentExpression	len = bf -> size - map -> delta		841945	0		=			
ANR	842098	Identifier	len		841945	0					
ANR	842099	AdditiveExpression	bf -> size - map -> delta		841945	1		-			
ANR	842100	PtrMemberAccess	bf -> size		841945	0					
ANR	842101	Identifier	bf		841945	0					
ANR	842102	Identifier	size		841945	1					
ANR	842103	PtrMemberAccess	map -> delta		841945	1					
ANR	842104	Identifier	map		841945	0					
ANR	842105	Identifier	delta		841945	1					
ANR	842106	ElseStatement	else		841945	0					
ANR	842107	CompoundStatement		25:11:600:600	841945	0					
ANR	842108	ExpressionStatement	"eprintf ( ""Opps something went wrong aac\\n"" )"	6055:5:174956:174999	841945	0	True				
ANR	842109	CallExpression	"eprintf ( ""Opps something went wrong aac\\n"" )"		841945	0					
ANR	842110	Callee	eprintf		841945	0					
ANR	842111	Identifier	eprintf		841945	0					
ANR	842112	ArgumentList	"""Opps something went wrong aac\\n"""		841945	1					
ANR	842113	Argument	"""Opps something went wrong aac\\n"""		841945	0					
ANR	842114	PrimaryExpression	"""Opps something went wrong aac\\n"""		841945	0					
ANR	842115	ReturnStatement	return ;	6056:5:175006:175012	841945	1	True				
ANR	842116	ElseStatement	else		841945	0					
ANR	842117	CompoundStatement		29:10:681:681	841945	0					
ANR	842118	ExpressionStatement	addr = map -> itv . addr	6059:4:175036:175056	841945	0	True				
ANR	842119	AssignmentExpression	addr = map -> itv . addr		841945	0		=			
ANR	842120	Identifier	addr		841945	0					
ANR	842121	MemberAccess	map -> itv . addr		841945	1					
ANR	842122	PtrMemberAccess	map -> itv		841945	0					
ANR	842123	Identifier	map		841945	0					
ANR	842124	Identifier	itv		841945	1					
ANR	842125	Identifier	addr		841945	1					
ANR	842126	ExpressionStatement	len = map -> itv . size	6060:4:175062:175081	841945	1	True				
ANR	842127	AssignmentExpression	len = map -> itv . size		841945	0		=			
ANR	842128	Identifier	len		841945	0					
ANR	842129	MemberAccess	map -> itv . size		841945	1					
ANR	842130	PtrMemberAccess	map -> itv		841945	0					
ANR	842131	Identifier	map		841945	0					
ANR	842132	Identifier	itv		841945	1					
ANR	842133	Identifier	size		841945	1					
ANR	842134	ElseStatement	else		841945	0					
ANR	842135	CompoundStatement		33:9:748:748	841945	0					
ANR	842136	IfStatement	if ( map && map -> itv . addr != map -> delta && bf -> size > ( core -> offset - map -> itv . addr + map -> delta ) )		841945	0					
ANR	842137	Condition	map && map -> itv . addr != map -> delta && bf -> size > ( core -> offset - map -> itv . addr + map -> delta )	6063:7:175106:175197	841945	0	True				
ANR	842138	AndExpression	map && map -> itv . addr != map -> delta && bf -> size > ( core -> offset - map -> itv . addr + map -> delta )		841945	0		&&			
ANR	842139	Identifier	map		841945	0					
ANR	842140	AndExpression	map -> itv . addr != map -> delta && bf -> size > ( core -> offset - map -> itv . addr + map -> delta )		841945	1		&&			
ANR	842141	EqualityExpression	map -> itv . addr != map -> delta		841945	0		!=			
ANR	842142	MemberAccess	map -> itv . addr		841945	0					
ANR	842143	PtrMemberAccess	map -> itv		841945	0					
ANR	842144	Identifier	map		841945	0					
ANR	842145	Identifier	itv		841945	1					
ANR	842146	Identifier	addr		841945	1					
ANR	842147	PtrMemberAccess	map -> delta		841945	1					
ANR	842148	Identifier	map		841945	0					
ANR	842149	Identifier	delta		841945	1					
ANR	842150	RelationalExpression	bf -> size > ( core -> offset - map -> itv . addr + map -> delta )		841945	1		>			
ANR	842151	PtrMemberAccess	bf -> size		841945	0					
ANR	842152	Identifier	bf		841945	0					
ANR	842153	Identifier	size		841945	1					
ANR	842154	AdditiveExpression	core -> offset - map -> itv . addr + map -> delta		841945	1		-			
ANR	842155	PtrMemberAccess	core -> offset		841945	0					
ANR	842156	Identifier	core		841945	0					
ANR	842157	Identifier	offset		841945	1					
ANR	842158	AdditiveExpression	map -> itv . addr + map -> delta		841945	1		+			
ANR	842159	MemberAccess	map -> itv . addr		841945	0					
ANR	842160	PtrMemberAccess	map -> itv		841945	0					
ANR	842161	Identifier	map		841945	0					
ANR	842162	Identifier	itv		841945	1					
ANR	842163	Identifier	addr		841945	1					
ANR	842164	PtrMemberAccess	map -> delta		841945	1					
ANR	842165	Identifier	map		841945	0					
ANR	842166	Identifier	delta		841945	1					
ANR	842167	CompoundStatement		34:101:851:851	841945	1					
ANR	842168	ExpressionStatement	len = bf -> size - ( core -> offset - map -> itv . addr + map -> delta )	6064:4:175206:175266	841945	0	True				
ANR	842169	AssignmentExpression	len = bf -> size - ( core -> offset - map -> itv . addr + map -> delta )		841945	0		=			
ANR	842170	Identifier	len		841945	0					
ANR	842171	AdditiveExpression	bf -> size - ( core -> offset - map -> itv . addr + map -> delta )		841945	1		-			
ANR	842172	PtrMemberAccess	bf -> size		841945	0					
ANR	842173	Identifier	bf		841945	0					
ANR	842174	Identifier	size		841945	1					
ANR	842175	AdditiveExpression	core -> offset - map -> itv . addr + map -> delta		841945	1		-			
ANR	842176	PtrMemberAccess	core -> offset		841945	0					
ANR	842177	Identifier	core		841945	0					
ANR	842178	Identifier	offset		841945	1					
ANR	842179	AdditiveExpression	map -> itv . addr + map -> delta		841945	1		+			
ANR	842180	MemberAccess	map -> itv . addr		841945	0					
ANR	842181	PtrMemberAccess	map -> itv		841945	0					
ANR	842182	Identifier	map		841945	0					
ANR	842183	Identifier	itv		841945	1					
ANR	842184	Identifier	addr		841945	1					
ANR	842185	PtrMemberAccess	map -> delta		841945	1					
ANR	842186	Identifier	map		841945	0					
ANR	842187	Identifier	delta		841945	1					
ANR	842188	ElseStatement	else		841945	0					
ANR	842189	CompoundStatement		36:10:929:929	841945	0					
ANR	842190	IfStatement	if ( bf -> size > core -> offset )		841945	0					
ANR	842191	Condition	bf -> size > core -> offset	6066:8:175288:175310	841945	0	True				
ANR	842192	RelationalExpression	bf -> size > core -> offset		841945	0		>			
ANR	842193	PtrMemberAccess	bf -> size		841945	0					
ANR	842194	Identifier	bf		841945	0					
ANR	842195	Identifier	size		841945	1					
ANR	842196	PtrMemberAccess	core -> offset		841945	1					
ANR	842197	Identifier	core		841945	0					
ANR	842198	Identifier	offset		841945	1					
ANR	842199	CompoundStatement		37:33:964:964	841945	1					
ANR	842200	ExpressionStatement	len = bf -> size - core -> offset	6067:5:175320:175349	841945	0	True				
ANR	842201	AssignmentExpression	len = bf -> size - core -> offset		841945	0		=			
ANR	842202	Identifier	len		841945	0					
ANR	842203	AdditiveExpression	bf -> size - core -> offset		841945	1		-			
ANR	842204	PtrMemberAccess	bf -> size		841945	0					
ANR	842205	Identifier	bf		841945	0					
ANR	842206	Identifier	size		841945	1					
ANR	842207	PtrMemberAccess	core -> offset		841945	1					
ANR	842208	Identifier	core		841945	0					
ANR	842209	Identifier	offset		841945	1					
ANR	842210	ElseStatement	else		841945	0					
ANR	842211	CompoundStatement		39:11:1013:1013	841945	0					
ANR	842212	ExpressionStatement	"eprintf ( ""Oops invalid range\\n"" )"	6069:5:175369:175401	841945	0	True				
ANR	842213	CallExpression	"eprintf ( ""Oops invalid range\\n"" )"		841945	0					
ANR	842214	Callee	eprintf		841945	0					
ANR	842215	Identifier	eprintf		841945	0					
ANR	842216	ArgumentList	"""Oops invalid range\\n"""		841945	1					
ANR	842217	Argument	"""Oops invalid range\\n"""		841945	0					
ANR	842218	PrimaryExpression	"""Oops invalid range\\n"""		841945	0					
ANR	842219	ExpressionStatement	len = 0	6070:5:175408:175415	841945	1	True				
ANR	842220	AssignmentExpression	len = 0		841945	0		=			
ANR	842221	Identifier	len		841945	0					
ANR	842222	PrimaryExpression	0		841945	1					
ANR	842223	ExpressionStatement	addr_end = addr + len	6075:1:175436:175457	841945	10	True				
ANR	842224	AssignmentExpression	addr_end = addr + len		841945	0		=			
ANR	842225	Identifier	addr_end		841945	0					
ANR	842226	AdditiveExpression	addr + len		841945	1		+			
ANR	842227	Identifier	addr		841945	0					
ANR	842228	Identifier	len		841945	1					
ANR	842229	IfStatement	if ( ! ( buf = malloc ( 4096 ) ) )		841945	11					
ANR	842230	Condition	! ( buf = malloc ( 4096 ) )	6076:5:175464:175485	841945	0	True				
ANR	842231	UnaryOperationExpression	! ( buf = malloc ( 4096 ) )		841945	0					
ANR	842232	UnaryOperator	!		841945	0					
ANR	842233	AssignmentExpression	buf = malloc ( 4096 )		841945	1		=			
ANR	842234	Identifier	buf		841945	0					
ANR	842235	CallExpression	malloc ( 4096 )		841945	1					
ANR	842236	Callee	malloc		841945	0					
ANR	842237	Identifier	malloc		841945	0					
ANR	842238	ArgumentList	4096		841945	1					
ANR	842239	Argument	4096		841945	0					
ANR	842240	PrimaryExpression	4096		841945	0					
ANR	842241	CompoundStatement		47:29:1139:1139	841945	1					
ANR	842242	ReturnStatement	return ;	6077:2:175492:175498	841945	0	True				
ANR	842243	ExpressionStatement	bufi = 0	6079:1:175504:175512	841945	12	True				
ANR	842244	AssignmentExpression	bufi = 0		841945	0		=			
ANR	842245	Identifier	bufi		841945	0					
ANR	842246	PrimaryExpression	0		841945	1					
ANR	842247	IdentifierDeclStatement	int trapcount = 0 ;	6080:1:175515:175532	841945	13	True				
ANR	842248	IdentifierDecl	trapcount = 0		841945	0					
ANR	842249	IdentifierDeclType	int		841945	0					
ANR	842250	Identifier	trapcount		841945	1					
ANR	842251	AssignmentExpression	trapcount = 0		841945	2		=			
ANR	842252	Identifier	trapcount		841945	0					
ANR	842253	PrimaryExpression	0		841945	1					
ANR	842254	IdentifierDeclStatement	int nopcount = 0 ;	6081:1:175535:175551	841945	14	True				
ANR	842255	IdentifierDecl	nopcount = 0		841945	0					
ANR	842256	IdentifierDeclType	int		841945	0					
ANR	842257	Identifier	nopcount		841945	1					
ANR	842258	AssignmentExpression	nopcount = 0		841945	2		=			
ANR	842259	Identifier	nopcount		841945	0					
ANR	842260	PrimaryExpression	0		841945	1					
ANR	842261	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	6082:1:175554:175584	841945	15	True				
ANR	842262	CallExpression	"r_cons_break_push ( NULL , NULL )"		841945	0					
ANR	842263	Callee	r_cons_break_push		841945	0					
ANR	842264	Identifier	r_cons_break_push		841945	0					
ANR	842265	ArgumentList	NULL		841945	1					
ANR	842266	Argument	NULL		841945	0					
ANR	842267	Identifier	NULL		841945	0					
ANR	842268	Argument	NULL		841945	1					
ANR	842269	Identifier	NULL		841945	0					
ANR	842270	WhileStatement	while ( addr < addr_end )		841945	16					
ANR	842271	Condition	addr < addr_end	6083:8:175594:175608	841945	0	True				
ANR	842272	RelationalExpression	addr < addr_end		841945	0		<			
ANR	842273	Identifier	addr		841945	0					
ANR	842274	Identifier	addr_end		841945	1					
ANR	842275	CompoundStatement		54:25:1262:1262	841945	1					
ANR	842276	IfStatement	if ( r_cons_is_breaked ( ) )		841945	0					
ANR	842277	Condition	r_cons_is_breaked ( )	6084:6:175619:175638	841945	0	True				
ANR	842278	CallExpression	r_cons_is_breaked ( )		841945	0					
ANR	842279	Callee	r_cons_is_breaked		841945	0					
ANR	842280	Identifier	r_cons_is_breaked		841945	0					
ANR	842281	ArgumentList			841945	1					
ANR	842282	CompoundStatement		55:28:1292:1292	841945	1					
ANR	842283	BreakStatement	break ;	6085:3:175646:175651	841945	0	True				
ANR	842284	IfStatement	if ( bufi > 4000 )		841945	1					
ANR	842285	Condition	bufi > 4000	6088:6:175696:175706	841945	0	True				
ANR	842286	RelationalExpression	bufi > 4000		841945	0		>			
ANR	842287	Identifier	bufi		841945	0					
ANR	842288	PrimaryExpression	4000		841945	1					
ANR	842289	CompoundStatement		59:19:1360:1360	841945	1					
ANR	842290	ExpressionStatement	bufi = 0	6089:3:175714:175722	841945	0	True				
ANR	842291	AssignmentExpression	bufi = 0		841945	0		=			
ANR	842292	Identifier	bufi		841945	0					
ANR	842293	PrimaryExpression	0		841945	1					
ANR	842294	IfStatement	if ( ! bufi )		841945	2					
ANR	842295	Condition	! bufi	6091:6:175734:175738	841945	0	True				
ANR	842296	UnaryOperationExpression	! bufi		841945	0					
ANR	842297	UnaryOperator	!		841945	0					
ANR	842298	Identifier	bufi		841945	1					
ANR	842299	CompoundStatement		62:13:1392:1392	841945	1					
ANR	842300	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , 4096 )"	6092:3:175746:175786	841945	0	True				
ANR	842301	CallExpression	"r_io_read_at ( core -> io , addr , buf , 4096 )"		841945	0					
ANR	842302	Callee	r_io_read_at		841945	0					
ANR	842303	Identifier	r_io_read_at		841945	0					
ANR	842304	ArgumentList	core -> io		841945	1					
ANR	842305	Argument	core -> io		841945	0					
ANR	842306	PtrMemberAccess	core -> io		841945	0					
ANR	842307	Identifier	core		841945	0					
ANR	842308	Identifier	io		841945	1					
ANR	842309	Argument	addr		841945	1					
ANR	842310	Identifier	addr		841945	0					
ANR	842311	Argument	buf		841945	2					
ANR	842312	Identifier	buf		841945	0					
ANR	842313	Argument	4096		841945	3					
ANR	842314	PrimaryExpression	4096		841945	0					
ANR	842315	IfStatement	"if ( r_anal_op ( core -> anal , & op , addr , buf + bufi , 4096 - bufi , R_ANAL_OP_MASK_BASIC ) )"		841945	3					
ANR	842316	Condition	"r_anal_op ( core -> anal , & op , addr , buf + bufi , 4096 - bufi , R_ANAL_OP_MASK_BASIC )"	6094:6:175798:175877	841945	0	True				
ANR	842317	CallExpression	"r_anal_op ( core -> anal , & op , addr , buf + bufi , 4096 - bufi , R_ANAL_OP_MASK_BASIC )"		841945	0					
ANR	842318	Callee	r_anal_op		841945	0					
ANR	842319	Identifier	r_anal_op		841945	0					
ANR	842320	ArgumentList	core -> anal		841945	1					
ANR	842321	Argument	core -> anal		841945	0					
ANR	842322	PtrMemberAccess	core -> anal		841945	0					
ANR	842323	Identifier	core		841945	0					
ANR	842324	Identifier	anal		841945	1					
ANR	842325	Argument	& op		841945	1					
ANR	842326	UnaryOperationExpression	& op		841945	0					
ANR	842327	UnaryOperator	&		841945	0					
ANR	842328	Identifier	op		841945	1					
ANR	842329	Argument	addr		841945	2					
ANR	842330	Identifier	addr		841945	0					
ANR	842331	Argument	buf + bufi		841945	3					
ANR	842332	AdditiveExpression	buf + bufi		841945	0		+			
ANR	842333	Identifier	buf		841945	0					
ANR	842334	Identifier	bufi		841945	1					
ANR	842335	Argument	4096 - bufi		841945	4					
ANR	842336	AdditiveExpression	4096 - bufi		841945	0		-			
ANR	842337	PrimaryExpression	4096		841945	0					
ANR	842338	Identifier	bufi		841945	1					
ANR	842339	Argument	R_ANAL_OP_MASK_BASIC		841945	5					
ANR	842340	Identifier	R_ANAL_OP_MASK_BASIC		841945	0					
ANR	842341	CompoundStatement		65:88:1531:1531	841945	1					
ANR	842342	IfStatement	if ( op . size < 1 )		841945	0					
ANR	842343	Condition	op . size < 1	6095:7:175889:175899	841945	0	True				
ANR	842344	RelationalExpression	op . size < 1		841945	0		<			
ANR	842345	MemberAccess	op . size		841945	0					
ANR	842346	Identifier	op		841945	0					
ANR	842347	Identifier	size		841945	1					
ANR	842348	PrimaryExpression	1		841945	1					
ANR	842349	CompoundStatement		66:20:1553:1553	841945	1					
ANR	842350	ExpressionStatement	op . size = minop	6097:4:175968:175983	841945	0	True				
ANR	842351	AssignmentExpression	op . size = minop		841945	0		=			
ANR	842352	MemberAccess	op . size		841945	0					
ANR	842353	Identifier	op		841945	0					
ANR	842354	Identifier	size		841945	1					
ANR	842355	Identifier	minop		841945	1					
ANR	842356	IfStatement	if ( op . type == R_ANAL_OP_TYPE_TRAP )		841945	1					
ANR	842357	Condition	op . type == R_ANAL_OP_TYPE_TRAP	6099:7:175997:176026	841945	0	True				
ANR	842358	EqualityExpression	op . type == R_ANAL_OP_TYPE_TRAP		841945	0		==			
ANR	842359	MemberAccess	op . type		841945	0					
ANR	842360	Identifier	op		841945	0					
ANR	842361	Identifier	type		841945	1					
ANR	842362	Identifier	R_ANAL_OP_TYPE_TRAP		841945	1					
ANR	842363	CompoundStatement		70:39:1680:1680	841945	1					
ANR	842364	ExpressionStatement	trapcount ++	6100:4:176035:176047	841945	0	True				
ANR	842365	PostIncDecOperationExpression	trapcount ++		841945	0					
ANR	842366	Identifier	trapcount		841945	0					
ANR	842367	IncDec	++		841945	1					
ANR	842368	ElseStatement	else		841945	0					
ANR	842369	IfStatement	if ( op . type == R_ANAL_OP_TYPE_NOP )		841945	0					
ANR	842370	Condition	op . type == R_ANAL_OP_TYPE_NOP	6101:14:176063:176091	841945	0	True				
ANR	842371	EqualityExpression	op . type == R_ANAL_OP_TYPE_NOP		841945	0		==			
ANR	842372	MemberAccess	op . type		841945	0					
ANR	842373	Identifier	op		841945	0					
ANR	842374	Identifier	type		841945	1					
ANR	842375	Identifier	R_ANAL_OP_TYPE_NOP		841945	1					
ANR	842376	CompoundStatement		72:45:1745:1745	841945	1					
ANR	842377	ExpressionStatement	nopcount ++	6102:4:176100:176111	841945	0	True				
ANR	842378	PostIncDecOperationExpression	nopcount ++		841945	0					
ANR	842379	Identifier	nopcount		841945	0					
ANR	842380	IncDec	++		841945	1					
ANR	842381	ElseStatement	else		841945	0					
ANR	842382	CompoundStatement		74:10:1774:1774	841945	0					
ANR	842383	IfStatement	if ( nopcount > 1 )		841945	0					
ANR	842384	Condition	nopcount > 1	6104:8:176133:176144	841945	0	True				
ANR	842385	RelationalExpression	nopcount > 1		841945	0		>			
ANR	842386	Identifier	nopcount		841945	0					
ANR	842387	PrimaryExpression	1		841945	1					
ANR	842388	CompoundStatement		75:22:1798:1798	841945	1					
ANR	842389	Statement	r_cons_printf	6105:5:176154:176166	841945	0	True				
ANR	842390	Statement	(	6105:19:176168:176168	841945	1	True				
ANR	842391	Statement	"""af @ 0x%08"""	6105:20:176169:176180	841945	2	True				
ANR	842392	Statement	PFMT64x	6105:32:176181:176187	841945	3	True				
ANR	842393	Statement	"""\\n"""	6105:39:176188:176191	841945	4	True				
ANR	842394	Statement	","	6105:43:176192:176192	841945	5	True				
ANR	842395	Statement	addr	6105:45:176194:176197	841945	6	True				
ANR	842396	Statement	)	6105:49:176198:176198	841945	7	True				
ANR	842397	ExpressionStatement		6105:50:176199:176199	841945	8	True				
ANR	842398	ExpressionStatement	nopcount = 0	6106:5:176206:176218	841945	9	True				
ANR	842399	AssignmentExpression	nopcount = 0		841945	0		=			
ANR	842400	Identifier	nopcount		841945	0					
ANR	842401	PrimaryExpression	0		841945	1					
ANR	842402	IfStatement	if ( trapcount > 0 )		841945	1					
ANR	842403	Condition	trapcount > 0	6108:8:176234:176246	841945	0	True				
ANR	842404	RelationalExpression	trapcount > 0		841945	0		>			
ANR	842405	Identifier	trapcount		841945	0					
ANR	842406	PrimaryExpression	0		841945	1					
ANR	842407	CompoundStatement		79:23:1900:1900	841945	1					
ANR	842408	Statement	r_cons_printf	6109:5:176256:176268	841945	0	True				
ANR	842409	Statement	(	6109:19:176270:176270	841945	1	True				
ANR	842410	Statement	"""af @ 0x%08"""	6109:20:176271:176282	841945	2	True				
ANR	842411	Statement	PFMT64x	6109:32:176283:176289	841945	3	True				
ANR	842412	Statement	"""\\n"""	6109:39:176290:176293	841945	4	True				
ANR	842413	Statement	","	6109:43:176294:176294	841945	5	True				
ANR	842414	Statement	addr	6109:45:176296:176299	841945	6	True				
ANR	842415	Statement	)	6109:49:176300:176300	841945	7	True				
ANR	842416	ExpressionStatement		6109:50:176301:176301	841945	8	True				
ANR	842417	ExpressionStatement	trapcount = 0	6110:5:176308:176321	841945	9	True				
ANR	842418	AssignmentExpression	trapcount = 0		841945	0		=			
ANR	842419	Identifier	trapcount		841945	0					
ANR	842420	PrimaryExpression	0		841945	1					
ANR	842421	ElseStatement	else		841945	0					
ANR	842422	CompoundStatement		84:9:1994:1994	841945	0					
ANR	842423	ExpressionStatement	op . size = minop	6114:3:176348:176363	841945	0	True				
ANR	842424	AssignmentExpression	op . size = minop		841945	0		=			
ANR	842425	MemberAccess	op . size		841945	0					
ANR	842426	Identifier	op		841945	0					
ANR	842427	Identifier	size		841945	1					
ANR	842428	Identifier	minop		841945	1					
ANR	842429	ExpressionStatement	addr += ( op . size > 0 ) ? op . size : 1	6116:2:176371:176405	841945	4	True				
ANR	842430	AssignmentExpression	addr += ( op . size > 0 ) ? op . size : 1		841945	0		+=			
ANR	842431	Identifier	addr		841945	0					
ANR	842432	ConditionalExpression	( op . size > 0 ) ? op . size : 1		841945	1					
ANR	842433	Condition	op . size > 0		841945	0					
ANR	842434	RelationalExpression	op . size > 0		841945	0		>			
ANR	842435	MemberAccess	op . size		841945	0					
ANR	842436	Identifier	op		841945	0					
ANR	842437	Identifier	size		841945	1					
ANR	842438	PrimaryExpression	0		841945	1					
ANR	842439	MemberAccess	op . size		841945	1					
ANR	842440	Identifier	op		841945	0					
ANR	842441	Identifier	size		841945	1					
ANR	842442	PrimaryExpression	1		841945	2					
ANR	842443	ExpressionStatement	bufi += ( op . size > 0 ) ? op . size : 1	6117:2:176409:176443	841945	5	True				
ANR	842444	AssignmentExpression	bufi += ( op . size > 0 ) ? op . size : 1		841945	0		+=			
ANR	842445	Identifier	bufi		841945	0					
ANR	842446	ConditionalExpression	( op . size > 0 ) ? op . size : 1		841945	1					
ANR	842447	Condition	op . size > 0		841945	0					
ANR	842448	RelationalExpression	op . size > 0		841945	0		>			
ANR	842449	MemberAccess	op . size		841945	0					
ANR	842450	Identifier	op		841945	0					
ANR	842451	Identifier	size		841945	1					
ANR	842452	PrimaryExpression	0		841945	1					
ANR	842453	MemberAccess	op . size		841945	1					
ANR	842454	Identifier	op		841945	0					
ANR	842455	Identifier	size		841945	1					
ANR	842456	PrimaryExpression	1		841945	2					
ANR	842457	ExpressionStatement	r_anal_op_fini ( & op )	6118:2:176447:176467	841945	6	True				
ANR	842458	CallExpression	r_anal_op_fini ( & op )		841945	0					
ANR	842459	Callee	r_anal_op_fini		841945	0					
ANR	842460	Identifier	r_anal_op_fini		841945	0					
ANR	842461	ArgumentList	& op		841945	1					
ANR	842462	Argument	& op		841945	0					
ANR	842463	UnaryOperationExpression	& op		841945	0					
ANR	842464	UnaryOperator	&		841945	0					
ANR	842465	Identifier	op		841945	1					
ANR	842466	ExpressionStatement	r_cons_break_pop ( )	6120:1:176473:176492	841945	17	True				
ANR	842467	CallExpression	r_cons_break_pop ( )		841945	0					
ANR	842468	Callee	r_cons_break_pop		841945	0					
ANR	842469	Identifier	r_cons_break_pop		841945	0					
ANR	842470	ArgumentList			841945	1					
ANR	842471	ExpressionStatement	free ( buf )	6121:1:176495:176505	841945	18	True				
ANR	842472	CallExpression	free ( buf )		841945	0					
ANR	842473	Callee	free		841945	0					
ANR	842474	Identifier	free		841945	0					
ANR	842475	ArgumentList	buf		841945	1					
ANR	842476	Argument	buf		841945	0					
ANR	842477	Identifier	buf		841945	0					
ANR	842478	ReturnType	static void		841945	1					
ANR	842479	Identifier	cmd_anal_aftertraps		841945	2					
ANR	842480	ParameterList	"RCore * core , const char * input"		841945	3					
ANR	842481	Parameter	RCore * core	6030:32:174316:174326	841945	0	True				
ANR	842482	ParameterType	RCore *		841945	0					
ANR	842483	Identifier	core		841945	1					
ANR	842484	Parameter	const char * input	6030:45:174329:174345	841945	1	True				
ANR	842485	ParameterType	const char *		841945	0					
ANR	842486	Identifier	input		841945	1					
ANR	842487	CFGEntryNode	ENTRY		841945		True				
ANR	842488	CFGExitNode	EXIT		841945		True				
ANR	842489	Symbol	minop		841945						
ANR	842490	Symbol	map -> itv		841945						
ANR	842491	Symbol	bf		841945						
ANR	842492	Symbol	* map		841945						
ANR	842493	Symbol	* core		841945						
ANR	842494	Symbol	trapcount		841945						
ANR	842495	Symbol	core -> offset		841945						
ANR	842496	Symbol	& op		841945						
ANR	842497	Symbol	core -> anal		841945						
ANR	842498	Symbol	R_ANAL_OP_MASK_BASIC		841945						
ANR	842499	Symbol	r_num_math		841945						
ANR	842500	Symbol	R_PERM_X		841945						
ANR	842501	Symbol	map -> delta		841945						
ANR	842502	Symbol	r_cons_is_breaked		841945						
ANR	842503	Symbol	len		841945						
ANR	842504	Symbol	core -> io		841945						
ANR	842505	Symbol	addr_end		841945						
ANR	842506	Symbol	map -> itv . addr		841945						
ANR	842507	Symbol	addr		841945						
ANR	842508	Symbol	core -> num		841945						
ANR	842509	Symbol	core -> bin		841945						
ANR	842510	Symbol	map		841945						
ANR	842511	Symbol	r_anal_op		841945						
ANR	842512	Symbol	R_ANAL_OP_TYPE_TRAP		841945						
ANR	842513	Symbol	op		841945						
ANR	842514	Symbol	malloc		841945						
ANR	842515	Symbol	NULL		841945						
ANR	842516	Symbol	op . type		841945						
ANR	842517	Symbol	r_bin_cur		841945						
ANR	842518	Symbol	* bf		841945						
ANR	842519	Symbol	bf -> size		841945						
ANR	842520	Symbol	core		841945						
ANR	842521	Symbol	input		841945						
ANR	842522	Symbol	R_ANAL_OP_TYPE_NOP		841945						
ANR	842523	Symbol	buf		841945						
ANR	842524	Symbol	map -> itv . size		841945						
ANR	842525	Symbol	bufi		841945						
ANR	842526	Symbol	nopcount		841945						
ANR	842527	Symbol	op . size		841945						
ANR	842528	Symbol	map -> perm		841945						
ANR	842529	Symbol	r_io_map_get		841945						
ANR	842530	Function	cmd_anal_blocks	6124:0:176510:177441							
ANR	842531	FunctionDef	"cmd_anal_blocks (RCore * core , const char * input)"		842530	0					
ANR	842532	CompoundStatement		6124:60:176570:177441	842530	0					
ANR	842533	IdentifierDeclStatement	"ut64 from , to ;"	6125:1:176573:176587	842530	0	True				
ANR	842534	IdentifierDecl	from		842530	0					
ANR	842535	IdentifierDeclType	ut64		842530	0					
ANR	842536	Identifier	from		842530	1					
ANR	842537	IdentifierDecl	to		842530	1					
ANR	842538	IdentifierDeclType	ut64		842530	0					
ANR	842539	Identifier	to		842530	1					
ANR	842540	IdentifierDeclStatement	"char * arg = strchr ( input , ' ' ) ;"	6126:1:176590:176621	842530	1	True				
ANR	842541	IdentifierDecl	"* arg = strchr ( input , ' ' )"		842530	0					
ANR	842542	IdentifierDeclType	char *		842530	0					
ANR	842543	Identifier	arg		842530	1					
ANR	842544	AssignmentExpression	"* arg = strchr ( input , ' ' )"		842530	2		=			
ANR	842545	Identifier	arg		842530	0					
ANR	842546	CallExpression	"strchr ( input , ' ' )"		842530	1					
ANR	842547	Callee	strchr		842530	0					
ANR	842548	Identifier	strchr		842530	0					
ANR	842549	ArgumentList	input		842530	1					
ANR	842550	Argument	input		842530	0					
ANR	842551	Identifier	input		842530	0					
ANR	842552	Argument	' '		842530	1					
ANR	842553	PrimaryExpression	' '		842530	0					
ANR	842554	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	6127:1:176624:176654	842530	2	True				
ANR	842555	CallExpression	"r_cons_break_push ( NULL , NULL )"		842530	0					
ANR	842556	Callee	r_cons_break_push		842530	0					
ANR	842557	Identifier	r_cons_break_push		842530	0					
ANR	842558	ArgumentList	NULL		842530	1					
ANR	842559	Argument	NULL		842530	0					
ANR	842560	Identifier	NULL		842530	0					
ANR	842561	Argument	NULL		842530	1					
ANR	842562	Identifier	NULL		842530	0					
ANR	842563	IfStatement	if ( ! arg )		842530	3					
ANR	842564	Condition	! arg	6128:5:176661:176664	842530	0	True				
ANR	842565	UnaryOperationExpression	! arg		842530	0					
ANR	842566	UnaryOperator	!		842530	0					
ANR	842567	Identifier	arg		842530	1					
ANR	842568	CompoundStatement		8:2:194:205	842530	1					
ANR	842569	IdentifierDeclStatement	"RList * list = r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" ) ;"	6129:2:176671:176742	842530	0	True				
ANR	842570	IdentifierDecl	"* list = r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" )"		842530	0					
ANR	842571	IdentifierDeclType	RList *		842530	0					
ANR	842572	Identifier	list		842530	1					
ANR	842573	AssignmentExpression	"* list = r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" )"		842530	2		=			
ANR	842574	Identifier	list		842530	0					
ANR	842575	CallExpression	"r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" )"		842530	1					
ANR	842576	Callee	r_core_get_boundaries_prot		842530	0					
ANR	842577	Identifier	r_core_get_boundaries_prot		842530	0					
ANR	842578	ArgumentList	core		842530	1					
ANR	842579	Argument	core		842530	0					
ANR	842580	Identifier	core		842530	0					
ANR	842581	Argument	R_PERM_X		842530	1					
ANR	842582	Identifier	R_PERM_X		842530	0					
ANR	842583	Argument	NULL		842530	2					
ANR	842584	Identifier	NULL		842530	0					
ANR	842585	Argument	"""anal"""		842530	3					
ANR	842586	PrimaryExpression	"""anal"""		842530	0					
ANR	842587	IdentifierDeclStatement	RListIter * iter ;	6130:2:176746:176761	842530	1	True				
ANR	842588	IdentifierDecl	* iter		842530	0					
ANR	842589	IdentifierDeclType	RListIter *		842530	0					
ANR	842590	Identifier	iter		842530	1					
ANR	842591	IdentifierDeclStatement	RIOMap * map ;	6131:2:176765:176776	842530	2	True				
ANR	842592	IdentifierDecl	* map		842530	0					
ANR	842593	IdentifierDeclType	RIOMap *		842530	0					
ANR	842594	Identifier	map		842530	1					
ANR	842595	IfStatement	if ( ! list )		842530	3					
ANR	842596	Condition	! list	6132:6:176784:176788	842530	0	True				
ANR	842597	UnaryOperationExpression	! list		842530	0					
ANR	842598	UnaryOperator	!		842530	0					
ANR	842599	Identifier	list		842530	1					
ANR	842600	CompoundStatement		9:13:220:220	842530	1					
ANR	842601	GotoStatement	goto ctrl_c ;	6133:3:176796:176807	842530	0	True				
ANR	842602	Identifier	ctrl_c		842530	0					
ANR	842603	Statement	r_list_foreach	6135:2:176815:176828	842530	4	True				
ANR	842604	Statement	(	6135:17:176830:176830	842530	5	True				
ANR	842605	Statement	list	6135:18:176831:176834	842530	6	True				
ANR	842606	Statement	","	6135:22:176835:176835	842530	7	True				
ANR	842607	Statement	iter	6135:24:176837:176840	842530	8	True				
ANR	842608	Statement	","	6135:28:176841:176841	842530	9	True				
ANR	842609	Statement	map	6135:30:176843:176845	842530	10	True				
ANR	842610	Statement	)	6135:33:176846:176846	842530	11	True				
ANR	842611	CompoundStatement		12:35:277:277	842530	12					
ANR	842612	ExpressionStatement	from = map -> itv . addr	6136:3:176853:176873	842530	0	True				
ANR	842613	AssignmentExpression	from = map -> itv . addr		842530	0		=			
ANR	842614	Identifier	from		842530	0					
ANR	842615	MemberAccess	map -> itv . addr		842530	1					
ANR	842616	PtrMemberAccess	map -> itv		842530	0					
ANR	842617	Identifier	map		842530	0					
ANR	842618	Identifier	itv		842530	1					
ANR	842619	Identifier	addr		842530	1					
ANR	842620	ExpressionStatement	to = r_itv_end ( map -> itv )	6137:3:176878:176903	842530	1	True				
ANR	842621	AssignmentExpression	to = r_itv_end ( map -> itv )		842530	0		=			
ANR	842622	Identifier	to		842530	0					
ANR	842623	CallExpression	r_itv_end ( map -> itv )		842530	1					
ANR	842624	Callee	r_itv_end		842530	0					
ANR	842625	Identifier	r_itv_end		842530	0					
ANR	842626	ArgumentList	map -> itv		842530	1					
ANR	842627	Argument	map -> itv		842530	0					
ANR	842628	PtrMemberAccess	map -> itv		842530	0					
ANR	842629	Identifier	map		842530	0					
ANR	842630	Identifier	itv		842530	1					
ANR	842631	IfStatement	if ( r_cons_is_breaked ( ) )		842530	2					
ANR	842632	Condition	r_cons_is_breaked ( )	6138:7:176912:176931	842530	0	True				
ANR	842633	CallExpression	r_cons_is_breaked ( )		842530	0					
ANR	842634	Callee	r_cons_is_breaked		842530	0					
ANR	842635	Identifier	r_cons_is_breaked		842530	0					
ANR	842636	ArgumentList			842530	1					
ANR	842637	CompoundStatement		15:29:363:363	842530	1					
ANR	842638	GotoStatement	goto ctrl_c ;	6139:4:176940:176951	842530	0	True				
ANR	842639	Identifier	ctrl_c		842530	0					
ANR	842640	IfStatement	if ( ! from && ! to )		842530	3					
ANR	842641	Condition	! from && ! to	6141:7:176965:176976	842530	0	True				
ANR	842642	AndExpression	! from && ! to		842530	0		&&			
ANR	842643	UnaryOperationExpression	! from		842530	0					
ANR	842644	UnaryOperator	!		842530	0					
ANR	842645	Identifier	from		842530	1					
ANR	842646	UnaryOperationExpression	! to		842530	1					
ANR	842647	UnaryOperator	!		842530	0					
ANR	842648	Identifier	to		842530	1					
ANR	842649	CompoundStatement		18:21:408:408	842530	1					
ANR	842650	ExpressionStatement	"eprintf ( ""Cannot determine search boundaries\\n"" )"	6142:4:176985:177033	842530	0	True				
ANR	842651	CallExpression	"eprintf ( ""Cannot determine search boundaries\\n"" )"		842530	0					
ANR	842652	Callee	eprintf		842530	0					
ANR	842653	Identifier	eprintf		842530	0					
ANR	842654	ArgumentList	"""Cannot determine search boundaries\\n"""		842530	1					
ANR	842655	Argument	"""Cannot determine search boundaries\\n"""		842530	0					
ANR	842656	PrimaryExpression	"""Cannot determine search boundaries\\n"""		842530	0					
ANR	842657	ElseStatement	else		842530	0					
ANR	842658	IfStatement	if ( to - from > UT32_MAX )		842530	0					
ANR	842659	Condition	to - from > UT32_MAX	6143:14:177049:177068	842530	0	True				
ANR	842660	RelationalExpression	to - from > UT32_MAX		842530	0		>			
ANR	842661	AdditiveExpression	to - from		842530	0		-			
ANR	842662	Identifier	to		842530	0					
ANR	842663	Identifier	from		842530	1					
ANR	842664	Identifier	UT32_MAX		842530	1					
ANR	842665	CompoundStatement		20:36:500:500	842530	1					
ANR	842666	ExpressionStatement	"eprintf ( ""Skipping huge range\\n"" )"	6144:4:177077:177110	842530	0	True				
ANR	842667	CallExpression	"eprintf ( ""Skipping huge range\\n"" )"		842530	0					
ANR	842668	Callee	eprintf		842530	0					
ANR	842669	Identifier	eprintf		842530	0					
ANR	842670	ArgumentList	"""Skipping huge range\\n"""		842530	1					
ANR	842671	Argument	"""Skipping huge range\\n"""		842530	0					
ANR	842672	PrimaryExpression	"""Skipping huge range\\n"""		842530	0					
ANR	842673	ElseStatement	else		842530	0					
ANR	842674	CompoundStatement		22:10:551:551	842530	0					
ANR	842675	Statement	r_core_cmdf	6146:4:177128:177138	842530	0	True				
ANR	842676	Statement	(	6146:16:177140:177140	842530	1	True				
ANR	842677	Statement	core	6146:17:177141:177144	842530	2	True				
ANR	842678	Statement	","	6146:21:177145:177145	842530	3	True				
ANR	842679	Statement	"""abb 0x%08"""	6146:23:177147:177157	842530	4	True				
ANR	842680	Statement	PFMT64x	6146:34:177158:177164	842530	5	True				
ANR	842681	Statement	""" @ 0x%08"""	6146:41:177165:177174	842530	6	True				
ANR	842682	Statement	PFMT64x	6146:51:177175:177181	842530	7	True				
ANR	842683	Statement	","	6146:58:177182:177182	842530	8	True				
ANR	842684	Statement	(	6146:60:177184:177184	842530	9	True				
ANR	842685	Statement	to	6146:61:177185:177186	842530	10	True				
ANR	842686	Statement	-	6146:64:177188:177188	842530	11	True				
ANR	842687	Statement	from	6146:66:177190:177193	842530	12	True				
ANR	842688	Statement	)	6146:70:177194:177194	842530	13	True				
ANR	842689	Statement	","	6146:71:177195:177195	842530	14	True				
ANR	842690	Statement	from	6146:73:177197:177200	842530	15	True				
ANR	842691	Statement	)	6146:77:177201:177201	842530	16	True				
ANR	842692	ExpressionStatement		6146:78:177202:177202	842530	17	True				
ANR	842693	ElseStatement	else		842530	0					
ANR	842694	CompoundStatement		27:2:654:695	842530	0					
ANR	842695	IdentifierDeclStatement	"st64 sz = r_num_math ( core -> num , arg + 1 ) ;"	6150:2:177225:177266	842530	0	True				
ANR	842696	IdentifierDecl	"sz = r_num_math ( core -> num , arg + 1 )"		842530	0					
ANR	842697	IdentifierDeclType	st64		842530	0					
ANR	842698	Identifier	sz		842530	1					
ANR	842699	AssignmentExpression	"sz = r_num_math ( core -> num , arg + 1 )"		842530	2		=			
ANR	842700	Identifier	sz		842530	0					
ANR	842701	CallExpression	"r_num_math ( core -> num , arg + 1 )"		842530	1					
ANR	842702	Callee	r_num_math		842530	0					
ANR	842703	Identifier	r_num_math		842530	0					
ANR	842704	ArgumentList	core -> num		842530	1					
ANR	842705	Argument	core -> num		842530	0					
ANR	842706	PtrMemberAccess	core -> num		842530	0					
ANR	842707	Identifier	core		842530	0					
ANR	842708	Identifier	num		842530	1					
ANR	842709	Argument	arg + 1		842530	1					
ANR	842710	AdditiveExpression	arg + 1		842530	0		+			
ANR	842711	Identifier	arg		842530	0					
ANR	842712	PrimaryExpression	1		842530	1					
ANR	842713	IfStatement	if ( sz < 1 )		842530	1					
ANR	842714	Condition	sz < 1	6151:6:177274:177279	842530	0	True				
ANR	842715	RelationalExpression	sz < 1		842530	0		<			
ANR	842716	Identifier	sz		842530	0					
ANR	842717	PrimaryExpression	1		842530	1					
ANR	842718	CompoundStatement		28:14:711:711	842530	1					
ANR	842719	ExpressionStatement	"eprintf ( ""Invalid range\\n"" )"	6152:3:177287:177314	842530	0	True				
ANR	842720	CallExpression	"eprintf ( ""Invalid range\\n"" )"		842530	0					
ANR	842721	Callee	eprintf		842530	0					
ANR	842722	Identifier	eprintf		842530	0					
ANR	842723	ArgumentList	"""Invalid range\\n"""		842530	1					
ANR	842724	Argument	"""Invalid range\\n"""		842530	0					
ANR	842725	PrimaryExpression	"""Invalid range\\n"""		842530	0					
ANR	842726	ReturnStatement	return ;	6153:3:177319:177325	842530	1	True				
ANR	842727	Statement	r_core_cmdf	6155:2:177333:177343	842530	2	True				
ANR	842728	Statement	(	6155:14:177345:177345	842530	3	True				
ANR	842729	Statement	core	6155:15:177346:177349	842530	4	True				
ANR	842730	Statement	","	6155:19:177350:177350	842530	5	True				
ANR	842731	Statement	"""abb 0x%08"""	6155:21:177352:177362	842530	6	True				
ANR	842732	Statement	PFMT64x	6155:32:177363:177369	842530	7	True				
ANR	842733	Statement	""" @ 0x%08"""	6155:39:177370:177379	842530	8	True				
ANR	842734	Statement	PFMT64x	6155:49:177380:177386	842530	9	True				
ANR	842735	Statement	","	6155:56:177387:177387	842530	10	True				
ANR	842736	Statement	sz	6155:58:177389:177390	842530	11	True				
ANR	842737	Statement	","	6155:60:177391:177391	842530	12	True				
ANR	842738	Statement	core	6155:62:177393:177396	842530	13	True				
ANR	842739	Statement	->	6155:66:177397:177398	842530	14	True				
ANR	842740	Statement	offset	6155:68:177399:177404	842530	15	True				
ANR	842741	Statement	)	6155:74:177405:177405	842530	16	True				
ANR	842742	ExpressionStatement		6155:75:177406:177406	842530	17	True				
ANR	842743	Label	ctrl_c :	6157:0:177411:177417	842530	4	True				
ANR	842744	Identifier	ctrl_c		842530	0					
ANR	842745	ExpressionStatement	r_cons_break_pop ( )	6158:1:177420:177439	842530	5	True				
ANR	842746	CallExpression	r_cons_break_pop ( )		842530	0					
ANR	842747	Callee	r_cons_break_pop		842530	0					
ANR	842748	Identifier	r_cons_break_pop		842530	0					
ANR	842749	ArgumentList			842530	1					
ANR	842750	ReturnType	static void		842530	1					
ANR	842751	Identifier	cmd_anal_blocks		842530	2					
ANR	842752	ParameterList	"RCore * core , const char * input"		842530	3					
ANR	842753	Parameter	RCore * core	6124:28:176538:176548	842530	0	True				
ANR	842754	ParameterType	RCore *		842530	0					
ANR	842755	Identifier	core		842530	1					
ANR	842756	Parameter	const char * input	6124:41:176551:176567	842530	1	True				
ANR	842757	ParameterType	const char *		842530	0					
ANR	842758	Identifier	input		842530	1					
ANR	842759	CFGEntryNode	ENTRY		842530		True				
ANR	842760	CFGExitNode	EXIT		842530		True				
ANR	842761	Symbol	UT32_MAX		842530						
ANR	842762	Symbol	map -> itv		842530						
ANR	842763	Symbol	NULL		842530						
ANR	842764	Symbol	* map		842530						
ANR	842765	Symbol	sz		842530						
ANR	842766	Symbol	* core		842530						
ANR	842767	Symbol	strchr		842530						
ANR	842768	Symbol	iter		842530						
ANR	842769	Symbol	list		842530						
ANR	842770	Symbol	r_itv_end		842530						
ANR	842771	Symbol	r_num_math		842530						
ANR	842772	Symbol	R_PERM_X		842530						
ANR	842773	Symbol	core		842530						
ANR	842774	Symbol	input		842530						
ANR	842775	Symbol	r_cons_is_breaked		842530						
ANR	842776	Symbol	arg		842530						
ANR	842777	Symbol	from		842530						
ANR	842778	Symbol	to		842530						
ANR	842779	Symbol	r_core_get_boundaries_prot		842530						
ANR	842780	Symbol	map -> itv . addr		842530						
ANR	842781	Symbol	core -> num		842530						
ANR	842782	Symbol	map		842530						
ANR	842783	Function	_anal_calls	6161:0:177444:180221							
ANR	842784	FunctionDef	"_anal_calls (RCore * core , ut64 addr , ut64 addr_end , bool printCommands , bool importsOnly)"		842783	0					
ANR	842785	CompoundStatement		6161:101:177545:180221	842783	0					
ANR	842786	IdentifierDeclStatement	RAnalOp op ;	6162:1:177548:177558	842783	0	True				
ANR	842787	IdentifierDecl	op		842783	0					
ANR	842788	IdentifierDeclType	RAnalOp		842783	0					
ANR	842789	Identifier	op		842783	1					
ANR	842790	IdentifierDeclStatement	"int depth = r_config_get_i ( core -> config , ""anal.depth"" ) ;"	6163:1:177561:177616	842783	1	True				
ANR	842791	IdentifierDecl	"depth = r_config_get_i ( core -> config , ""anal.depth"" )"		842783	0					
ANR	842792	IdentifierDeclType	int		842783	0					
ANR	842793	Identifier	depth		842783	1					
ANR	842794	AssignmentExpression	"depth = r_config_get_i ( core -> config , ""anal.depth"" )"		842783	2		=			
ANR	842795	Identifier	depth		842783	0					
ANR	842796	CallExpression	"r_config_get_i ( core -> config , ""anal.depth"" )"		842783	1					
ANR	842797	Callee	r_config_get_i		842783	0					
ANR	842798	Identifier	r_config_get_i		842783	0					
ANR	842799	ArgumentList	core -> config		842783	1					
ANR	842800	Argument	core -> config		842783	0					
ANR	842801	PtrMemberAccess	core -> config		842783	0					
ANR	842802	Identifier	core		842783	0					
ANR	842803	Identifier	config		842783	1					
ANR	842804	Argument	"""anal.depth"""		842783	1					
ANR	842805	PrimaryExpression	"""anal.depth"""		842783	0					
ANR	842806	IdentifierDeclStatement	const int addrbytes = core -> io -> addrbytes ;	6164:1:177619:177660	842783	2	True				
ANR	842807	IdentifierDecl	addrbytes = core -> io -> addrbytes		842783	0					
ANR	842808	IdentifierDeclType	const int		842783	0					
ANR	842809	Identifier	addrbytes		842783	1					
ANR	842810	AssignmentExpression	addrbytes = core -> io -> addrbytes		842783	2		=			
ANR	842811	Identifier	addrbytes		842783	0					
ANR	842812	PtrMemberAccess	core -> io -> addrbytes		842783	1					
ANR	842813	PtrMemberAccess	core -> io		842783	0					
ANR	842814	Identifier	core		842783	0					
ANR	842815	Identifier	io		842783	1					
ANR	842816	Identifier	addrbytes		842783	1					
ANR	842817	IdentifierDeclStatement	const int bsz = 4096 ;	6165:1:177663:177683	842783	3	True				
ANR	842818	IdentifierDecl	bsz = 4096		842783	0					
ANR	842819	IdentifierDeclType	const int		842783	0					
ANR	842820	Identifier	bsz		842783	1					
ANR	842821	AssignmentExpression	bsz = 4096		842783	2		=			
ANR	842822	Identifier	bsz		842783	0					
ANR	842823	PrimaryExpression	4096		842783	1					
ANR	842824	IdentifierDeclStatement	int bufi = 0 ;	6166:1:177686:177698	842783	4	True				
ANR	842825	IdentifierDecl	bufi = 0		842783	0					
ANR	842826	IdentifierDeclType	int		842783	0					
ANR	842827	Identifier	bufi		842783	1					
ANR	842828	AssignmentExpression	bufi = 0		842783	2		=			
ANR	842829	Identifier	bufi		842783	0					
ANR	842830	PrimaryExpression	0		842783	1					
ANR	842831	IdentifierDeclStatement	int bufi_max = bsz - 16 ;	6167:1:177701:177724	842783	5	True				
ANR	842832	IdentifierDecl	bufi_max = bsz - 16		842783	0					
ANR	842833	IdentifierDeclType	int		842783	0					
ANR	842834	Identifier	bufi_max		842783	1					
ANR	842835	AssignmentExpression	bufi_max = bsz - 16		842783	2		=			
ANR	842836	Identifier	bufi_max		842783	0					
ANR	842837	AdditiveExpression	bsz - 16		842783	1		-			
ANR	842838	Identifier	bsz		842783	0					
ANR	842839	PrimaryExpression	16		842783	1					
ANR	842840	IfStatement	if ( addr_end - addr > UT32_MAX )		842783	6					
ANR	842841	Condition	addr_end - addr > UT32_MAX	6168:5:177731:177756	842783	0	True				
ANR	842842	RelationalExpression	addr_end - addr > UT32_MAX		842783	0		>			
ANR	842843	AdditiveExpression	addr_end - addr		842783	0		-			
ANR	842844	Identifier	addr_end		842783	0					
ANR	842845	Identifier	addr		842783	1					
ANR	842846	Identifier	UT32_MAX		842783	1					
ANR	842847	CompoundStatement		8:33:213:213	842783	1					
ANR	842848	ReturnStatement	return ;	6169:2:177763:177769	842783	0	True				
ANR	842849	IdentifierDeclStatement	ut8 * buf = malloc ( bsz ) ;	6171:1:177775:177798	842783	7	True				
ANR	842850	IdentifierDecl	* buf = malloc ( bsz )		842783	0					
ANR	842851	IdentifierDeclType	ut8 *		842783	0					
ANR	842852	Identifier	buf		842783	1					
ANR	842853	AssignmentExpression	* buf = malloc ( bsz )		842783	2		=			
ANR	842854	Identifier	buf		842783	0					
ANR	842855	CallExpression	malloc ( bsz )		842783	1					
ANR	842856	Callee	malloc		842783	0					
ANR	842857	Identifier	malloc		842783	0					
ANR	842858	ArgumentList	bsz		842783	1					
ANR	842859	Argument	bsz		842783	0					
ANR	842860	Identifier	bsz		842783	0					
ANR	842861	IdentifierDeclStatement	"ut8 * block0 = calloc ( 1 , bsz ) ;"	6172:1:177801:177830	842783	8	True				
ANR	842862	IdentifierDecl	"* block0 = calloc ( 1 , bsz )"		842783	0					
ANR	842863	IdentifierDeclType	ut8 *		842783	0					
ANR	842864	Identifier	block0		842783	1					
ANR	842865	AssignmentExpression	"* block0 = calloc ( 1 , bsz )"		842783	2		=			
ANR	842866	Identifier	block0		842783	0					
ANR	842867	CallExpression	"calloc ( 1 , bsz )"		842783	1					
ANR	842868	Callee	calloc		842783	0					
ANR	842869	Identifier	calloc		842783	0					
ANR	842870	ArgumentList	1		842783	1					
ANR	842871	Argument	1		842783	0					
ANR	842872	PrimaryExpression	1		842783	0					
ANR	842873	Argument	bsz		842783	1					
ANR	842874	Identifier	bsz		842783	0					
ANR	842875	IdentifierDeclStatement	ut8 * block1 = malloc ( bsz ) ;	6173:1:177833:177859	842783	9	True				
ANR	842876	IdentifierDecl	* block1 = malloc ( bsz )		842783	0					
ANR	842877	IdentifierDeclType	ut8 *		842783	0					
ANR	842878	Identifier	block1		842783	1					
ANR	842879	AssignmentExpression	* block1 = malloc ( bsz )		842783	2		=			
ANR	842880	Identifier	block1		842783	0					
ANR	842881	CallExpression	malloc ( bsz )		842783	1					
ANR	842882	Callee	malloc		842783	0					
ANR	842883	Identifier	malloc		842783	0					
ANR	842884	ArgumentList	bsz		842783	1					
ANR	842885	Argument	bsz		842783	0					
ANR	842886	Identifier	bsz		842783	0					
ANR	842887	IfStatement	if ( ! buf || ! block0 || ! block1 )		842783	10					
ANR	842888	Condition	! buf || ! block0 || ! block1	6174:5:177866:177891	842783	0	True				
ANR	842889	OrExpression	! buf || ! block0 || ! block1		842783	0		||			
ANR	842890	UnaryOperationExpression	! buf		842783	0					
ANR	842891	UnaryOperator	!		842783	0					
ANR	842892	Identifier	buf		842783	1					
ANR	842893	OrExpression	! block0 || ! block1		842783	1		||			
ANR	842894	UnaryOperationExpression	! block0		842783	0					
ANR	842895	UnaryOperator	!		842783	0					
ANR	842896	Identifier	block0		842783	1					
ANR	842897	UnaryOperationExpression	! block1		842783	1					
ANR	842898	UnaryOperator	!		842783	0					
ANR	842899	Identifier	block1		842783	1					
ANR	842900	CompoundStatement		14:33:348:348	842783	1					
ANR	842901	ExpressionStatement	"eprintf ( ""Error: cannot allocate buf or block\\n"" )"	6175:2:177898:177947	842783	0	True				
ANR	842902	CallExpression	"eprintf ( ""Error: cannot allocate buf or block\\n"" )"		842783	0					
ANR	842903	Callee	eprintf		842783	0					
ANR	842904	Identifier	eprintf		842783	0					
ANR	842905	ArgumentList	"""Error: cannot allocate buf or block\\n"""		842783	1					
ANR	842906	Argument	"""Error: cannot allocate buf or block\\n"""		842783	0					
ANR	842907	PrimaryExpression	"""Error: cannot allocate buf or block\\n"""		842783	0					
ANR	842908	ExpressionStatement	free ( buf )	6176:2:177951:177961	842783	1	True				
ANR	842909	CallExpression	free ( buf )		842783	0					
ANR	842910	Callee	free		842783	0					
ANR	842911	Identifier	free		842783	0					
ANR	842912	ArgumentList	buf		842783	1					
ANR	842913	Argument	buf		842783	0					
ANR	842914	Identifier	buf		842783	0					
ANR	842915	ExpressionStatement	free ( block0 )	6177:2:177965:177978	842783	2	True				
ANR	842916	CallExpression	free ( block0 )		842783	0					
ANR	842917	Callee	free		842783	0					
ANR	842918	Identifier	free		842783	0					
ANR	842919	ArgumentList	block0		842783	1					
ANR	842920	Argument	block0		842783	0					
ANR	842921	Identifier	block0		842783	0					
ANR	842922	ExpressionStatement	free ( block1 )	6178:2:177982:177995	842783	3	True				
ANR	842923	CallExpression	free ( block1 )		842783	0					
ANR	842924	Callee	free		842783	0					
ANR	842925	Identifier	free		842783	0					
ANR	842926	ArgumentList	block1		842783	1					
ANR	842927	Argument	block1		842783	0					
ANR	842928	Identifier	block1		842783	0					
ANR	842929	ReturnStatement	return ;	6179:2:177999:178005	842783	4	True				
ANR	842930	ExpressionStatement	"memset ( block1 , - 1 , bsz )"	6181:1:178011:178035	842783	11	True				
ANR	842931	CallExpression	"memset ( block1 , - 1 , bsz )"		842783	0					
ANR	842932	Callee	memset		842783	0					
ANR	842933	Identifier	memset		842783	0					
ANR	842934	ArgumentList	block1		842783	1					
ANR	842935	Argument	block1		842783	0					
ANR	842936	Identifier	block1		842783	0					
ANR	842937	Argument	- 1		842783	1					
ANR	842938	UnaryOperationExpression	- 1		842783	0					
ANR	842939	UnaryOperator	-		842783	0					
ANR	842940	PrimaryExpression	1		842783	1					
ANR	842941	Argument	bsz		842783	2					
ANR	842942	Identifier	bsz		842783	0					
ANR	842943	IdentifierDeclStatement	"int minop = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE ) ;"	6182:1:178038:178107	842783	12	True				
ANR	842944	IdentifierDecl	"minop = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		842783	0					
ANR	842945	IdentifierDeclType	int		842783	0					
ANR	842946	Identifier	minop		842783	1					
ANR	842947	AssignmentExpression	"minop = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		842783	2		=			
ANR	842948	Identifier	minop		842783	0					
ANR	842949	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		842783	1					
ANR	842950	Callee	r_anal_archinfo		842783	0					
ANR	842951	Identifier	r_anal_archinfo		842783	0					
ANR	842952	ArgumentList	core -> anal		842783	1					
ANR	842953	Argument	core -> anal		842783	0					
ANR	842954	PtrMemberAccess	core -> anal		842783	0					
ANR	842955	Identifier	core		842783	0					
ANR	842956	Identifier	anal		842783	1					
ANR	842957	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		842783	1					
ANR	842958	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		842783	0					
ANR	842959	IfStatement	if ( minop < 1 )		842783	13					
ANR	842960	Condition	minop < 1	6183:5:178114:178122	842783	0	True				
ANR	842961	RelationalExpression	minop < 1		842783	0		<			
ANR	842962	Identifier	minop		842783	0					
ANR	842963	PrimaryExpression	1		842783	1					
ANR	842964	CompoundStatement		23:16:579:579	842783	1					
ANR	842965	ExpressionStatement	minop = 1	6184:2:178129:178138	842783	0	True				
ANR	842966	AssignmentExpression	minop = 1		842783	0		=			
ANR	842967	Identifier	minop		842783	0					
ANR	842968	PrimaryExpression	1		842783	1					
ANR	842969	IdentifierDeclStatement	"int setBits = r_config_get_i ( core -> config , ""asm.bits"" ) ;"	6186:1:178144:178199	842783	14	True				
ANR	842970	IdentifierDecl	"setBits = r_config_get_i ( core -> config , ""asm.bits"" )"		842783	0					
ANR	842971	IdentifierDeclType	int		842783	0					
ANR	842972	Identifier	setBits		842783	1					
ANR	842973	AssignmentExpression	"setBits = r_config_get_i ( core -> config , ""asm.bits"" )"		842783	2		=			
ANR	842974	Identifier	setBits		842783	0					
ANR	842975	CallExpression	"r_config_get_i ( core -> config , ""asm.bits"" )"		842783	1					
ANR	842976	Callee	r_config_get_i		842783	0					
ANR	842977	Identifier	r_config_get_i		842783	0					
ANR	842978	ArgumentList	core -> config		842783	1					
ANR	842979	Argument	core -> config		842783	0					
ANR	842980	PtrMemberAccess	core -> config		842783	0					
ANR	842981	Identifier	core		842783	0					
ANR	842982	Identifier	config		842783	1					
ANR	842983	Argument	"""asm.bits"""		842783	1					
ANR	842984	PrimaryExpression	"""asm.bits"""		842783	0					
ANR	842985	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	6187:1:178202:178232	842783	15	True				
ANR	842986	CallExpression	"r_cons_break_push ( NULL , NULL )"		842783	0					
ANR	842987	Callee	r_cons_break_push		842783	0					
ANR	842988	Identifier	r_cons_break_push		842783	0					
ANR	842989	ArgumentList	NULL		842783	1					
ANR	842990	Argument	NULL		842783	0					
ANR	842991	Identifier	NULL		842783	0					
ANR	842992	Argument	NULL		842783	1					
ANR	842993	Identifier	NULL		842783	0					
ANR	842994	WhileStatement	while ( addr < addr_end && ! r_cons_is_breaked ( ) )		842783	16					
ANR	842995	Condition	addr < addr_end && ! r_cons_is_breaked ( )	6188:8:178242:178281	842783	0	True				
ANR	842996	AndExpression	addr < addr_end && ! r_cons_is_breaked ( )		842783	0		&&			
ANR	842997	RelationalExpression	addr < addr_end		842783	0		<			
ANR	842998	Identifier	addr		842783	0					
ANR	842999	Identifier	addr_end		842783	1					
ANR	843000	UnaryOperationExpression	! r_cons_is_breaked ( )		842783	1					
ANR	843001	UnaryOperator	!		842783	0					
ANR	843002	CallExpression	r_cons_is_breaked ( )		842783	1					
ANR	843003	Callee	r_cons_is_breaked		842783	0					
ANR	843004	Identifier	r_cons_is_breaked		842783	0					
ANR	843005	ArgumentList			842783	1					
ANR	843006	CompoundStatement		41:2:1042:1094	842783	1					
ANR	843007	IfStatement	if ( bufi > bufi_max )		842783	0					
ANR	843008	Condition	bufi > bufi_max	6190:6:178325:178339	842783	0	True				
ANR	843009	RelationalExpression	bufi > bufi_max		842783	0		>			
ANR	843010	Identifier	bufi		842783	0					
ANR	843011	Identifier	bufi_max		842783	1					
ANR	843012	CompoundStatement		30:23:796:796	842783	1					
ANR	843013	ExpressionStatement	bufi = 0	6191:3:178347:178355	842783	0	True				
ANR	843014	AssignmentExpression	bufi = 0		842783	0		=			
ANR	843015	Identifier	bufi		842783	0					
ANR	843016	PrimaryExpression	0		842783	1					
ANR	843017	IfStatement	if ( ! bufi )		842783	1					
ANR	843018	Condition	! bufi	6193:6:178367:178371	842783	0	True				
ANR	843019	UnaryOperationExpression	! bufi		842783	0					
ANR	843020	UnaryOperator	!		842783	0					
ANR	843021	Identifier	bufi		842783	1					
ANR	843022	CompoundStatement		33:13:828:828	842783	1					
ANR	843023	ExpressionStatement	"( void ) r_io_read_at ( core -> io , addr , buf , bsz )"	6194:3:178379:178424	842783	0	True				
ANR	843024	CastExpression	"( void ) r_io_read_at ( core -> io , addr , buf , bsz )"		842783	0					
ANR	843025	CastTarget	void		842783	0					
ANR	843026	CallExpression	"r_io_read_at ( core -> io , addr , buf , bsz )"		842783	1					
ANR	843027	Callee	r_io_read_at		842783	0					
ANR	843028	Identifier	r_io_read_at		842783	0					
ANR	843029	ArgumentList	core -> io		842783	1					
ANR	843030	Argument	core -> io		842783	0					
ANR	843031	PtrMemberAccess	core -> io		842783	0					
ANR	843032	Identifier	core		842783	0					
ANR	843033	Identifier	io		842783	1					
ANR	843034	Argument	addr		842783	1					
ANR	843035	Identifier	addr		842783	0					
ANR	843036	Argument	buf		842783	2					
ANR	843037	Identifier	buf		842783	0					
ANR	843038	Argument	bsz		842783	3					
ANR	843039	Identifier	bsz		842783	0					
ANR	843040	IfStatement	"if ( ! memcmp ( buf , block0 , bsz ) || ! memcmp ( buf , block1 , bsz ) )"		842783	2					
ANR	843041	Condition	"! memcmp ( buf , block0 , bsz ) || ! memcmp ( buf , block1 , bsz )"	6196:6:178436:178491	842783	0	True				
ANR	843042	OrExpression	"! memcmp ( buf , block0 , bsz ) || ! memcmp ( buf , block1 , bsz )"		842783	0		||			
ANR	843043	UnaryOperationExpression	"! memcmp ( buf , block0 , bsz )"		842783	0					
ANR	843044	UnaryOperator	!		842783	0					
ANR	843045	CallExpression	"memcmp ( buf , block0 , bsz )"		842783	1					
ANR	843046	Callee	memcmp		842783	0					
ANR	843047	Identifier	memcmp		842783	0					
ANR	843048	ArgumentList	buf		842783	1					
ANR	843049	Argument	buf		842783	0					
ANR	843050	Identifier	buf		842783	0					
ANR	843051	Argument	block0		842783	1					
ANR	843052	Identifier	block0		842783	0					
ANR	843053	Argument	bsz		842783	2					
ANR	843054	Identifier	bsz		842783	0					
ANR	843055	UnaryOperationExpression	"! memcmp ( buf , block1 , bsz )"		842783	1					
ANR	843056	UnaryOperator	!		842783	0					
ANR	843057	CallExpression	"memcmp ( buf , block1 , bsz )"		842783	1					
ANR	843058	Callee	memcmp		842783	0					
ANR	843059	Identifier	memcmp		842783	0					
ANR	843060	ArgumentList	buf		842783	1					
ANR	843061	Argument	buf		842783	0					
ANR	843062	Identifier	buf		842783	0					
ANR	843063	Argument	block1		842783	1					
ANR	843064	Identifier	block1		842783	0					
ANR	843065	Argument	bsz		842783	2					
ANR	843066	Identifier	bsz		842783	0					
ANR	843067	CompoundStatement		36:64:948:948	842783	1					
ANR	843068	ExpressionStatement	addr += bsz	6198:3:178556:178567	842783	0	True				
ANR	843069	AssignmentExpression	addr += bsz		842783	0		+=			
ANR	843070	Identifier	addr		842783	0					
ANR	843071	Identifier	bsz		842783	1					
ANR	843072	ContinueStatement	continue ;	6199:3:178572:178580	842783	1	True				
ANR	843073	IdentifierDeclStatement	"RAnalHint * hint = r_anal_hint_get ( core -> anal , addr ) ;"	6201:2:178588:178640	842783	3	True				
ANR	843074	IdentifierDecl	"* hint = r_anal_hint_get ( core -> anal , addr )"		842783	0					
ANR	843075	IdentifierDeclType	RAnalHint *		842783	0					
ANR	843076	Identifier	hint		842783	1					
ANR	843077	AssignmentExpression	"* hint = r_anal_hint_get ( core -> anal , addr )"		842783	2		=			
ANR	843078	Identifier	hint		842783	0					
ANR	843079	CallExpression	"r_anal_hint_get ( core -> anal , addr )"		842783	1					
ANR	843080	Callee	r_anal_hint_get		842783	0					
ANR	843081	Identifier	r_anal_hint_get		842783	0					
ANR	843082	ArgumentList	core -> anal		842783	1					
ANR	843083	Argument	core -> anal		842783	0					
ANR	843084	PtrMemberAccess	core -> anal		842783	0					
ANR	843085	Identifier	core		842783	0					
ANR	843086	Identifier	anal		842783	1					
ANR	843087	Argument	addr		842783	1					
ANR	843088	Identifier	addr		842783	0					
ANR	843089	IfStatement	if ( hint && hint -> bits )		842783	4					
ANR	843090	Condition	hint && hint -> bits	6202:6:178648:178665	842783	0	True				
ANR	843091	AndExpression	hint && hint -> bits		842783	0		&&			
ANR	843092	Identifier	hint		842783	0					
ANR	843093	PtrMemberAccess	hint -> bits		842783	1					
ANR	843094	Identifier	hint		842783	0					
ANR	843095	Identifier	bits		842783	1					
ANR	843096	CompoundStatement		42:26:1122:1122	842783	1					
ANR	843097	ExpressionStatement	setBits = hint -> bits	6203:3:178673:178693	842783	0	True				
ANR	843098	AssignmentExpression	setBits = hint -> bits		842783	0		=			
ANR	843099	Identifier	setBits		842783	0					
ANR	843100	PtrMemberAccess	hint -> bits		842783	1					
ANR	843101	Identifier	hint		842783	0					
ANR	843102	Identifier	bits		842783	1					
ANR	843103	ExpressionStatement	r_anal_hint_free ( hint )	6205:2:178701:178724	842783	5	True				
ANR	843104	CallExpression	r_anal_hint_free ( hint )		842783	0					
ANR	843105	Callee	r_anal_hint_free		842783	0					
ANR	843106	Identifier	r_anal_hint_free		842783	0					
ANR	843107	ArgumentList	hint		842783	1					
ANR	843108	Argument	hint		842783	0					
ANR	843109	Identifier	hint		842783	0					
ANR	843110	IfStatement	if ( setBits != core -> assembler -> bits )		842783	6					
ANR	843111	Condition	setBits != core -> assembler -> bits	6206:6:178732:178763	842783	0	True				
ANR	843112	EqualityExpression	setBits != core -> assembler -> bits		842783	0		!=			
ANR	843113	Identifier	setBits		842783	0					
ANR	843114	PtrMemberAccess	core -> assembler -> bits		842783	1					
ANR	843115	PtrMemberAccess	core -> assembler		842783	0					
ANR	843116	Identifier	core		842783	0					
ANR	843117	Identifier	assembler		842783	1					
ANR	843118	Identifier	bits		842783	1					
ANR	843119	CompoundStatement		46:40:1220:1220	842783	1					
ANR	843120	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bits"" , setBits )"	6207:3:178771:178821	842783	0	True				
ANR	843121	CallExpression	"r_config_set_i ( core -> config , ""asm.bits"" , setBits )"		842783	0					
ANR	843122	Callee	r_config_set_i		842783	0					
ANR	843123	Identifier	r_config_set_i		842783	0					
ANR	843124	ArgumentList	core -> config		842783	1					
ANR	843125	Argument	core -> config		842783	0					
ANR	843126	PtrMemberAccess	core -> config		842783	0					
ANR	843127	Identifier	core		842783	0					
ANR	843128	Identifier	config		842783	1					
ANR	843129	Argument	"""asm.bits"""		842783	1					
ANR	843130	PrimaryExpression	"""asm.bits"""		842783	0					
ANR	843131	Argument	setBits		842783	2					
ANR	843132	Identifier	setBits		842783	0					
ANR	843133	IfStatement	"if ( r_anal_op ( core -> anal , & op , addr , buf + bufi , bsz - bufi , 0 ) > 0 )"		842783	7					
ANR	843134	Condition	"r_anal_op ( core -> anal , & op , addr , buf + bufi , bsz - bufi , 0 ) > 0"	6209:6:178833:178896	842783	0	True				
ANR	843135	RelationalExpression	"r_anal_op ( core -> anal , & op , addr , buf + bufi , bsz - bufi , 0 ) > 0"		842783	0		>			
ANR	843136	CallExpression	"r_anal_op ( core -> anal , & op , addr , buf + bufi , bsz - bufi , 0 )"		842783	0					
ANR	843137	Callee	r_anal_op		842783	0					
ANR	843138	Identifier	r_anal_op		842783	0					
ANR	843139	ArgumentList	core -> anal		842783	1					
ANR	843140	Argument	core -> anal		842783	0					
ANR	843141	PtrMemberAccess	core -> anal		842783	0					
ANR	843142	Identifier	core		842783	0					
ANR	843143	Identifier	anal		842783	1					
ANR	843144	Argument	& op		842783	1					
ANR	843145	UnaryOperationExpression	& op		842783	0					
ANR	843146	UnaryOperator	&		842783	0					
ANR	843147	Identifier	op		842783	1					
ANR	843148	Argument	addr		842783	2					
ANR	843149	Identifier	addr		842783	0					
ANR	843150	Argument	buf + bufi		842783	3					
ANR	843151	AdditiveExpression	buf + bufi		842783	0		+			
ANR	843152	Identifier	buf		842783	0					
ANR	843153	Identifier	bufi		842783	1					
ANR	843154	Argument	bsz - bufi		842783	4					
ANR	843155	AdditiveExpression	bsz - bufi		842783	0		-			
ANR	843156	Identifier	bsz		842783	0					
ANR	843157	Identifier	bufi		842783	1					
ANR	843158	Argument	0		842783	5					
ANR	843159	PrimaryExpression	0		842783	0					
ANR	843160	PrimaryExpression	0		842783	1					
ANR	843161	CompoundStatement		49:72:1353:1353	842783	1					
ANR	843162	IfStatement	if ( op . size < 1 )		842783	0					
ANR	843163	Condition	op . size < 1	6210:7:178908:178918	842783	0	True				
ANR	843164	RelationalExpression	op . size < 1		842783	0		<			
ANR	843165	MemberAccess	op . size		842783	0					
ANR	843166	Identifier	op		842783	0					
ANR	843167	Identifier	size		842783	1					
ANR	843168	PrimaryExpression	1		842783	1					
ANR	843169	CompoundStatement		50:20:1375:1375	842783	1					
ANR	843170	ExpressionStatement	op . size = minop	6211:4:178927:178942	842783	0	True				
ANR	843171	AssignmentExpression	op . size = minop		842783	0		=			
ANR	843172	MemberAccess	op . size		842783	0					
ANR	843173	Identifier	op		842783	0					
ANR	843174	Identifier	size		842783	1					
ANR	843175	Identifier	minop		842783	1					
ANR	843176	IfStatement	if ( op . type == R_ANAL_OP_TYPE_CALL )		842783	1					
ANR	843177	Condition	op . type == R_ANAL_OP_TYPE_CALL	6213:7:178956:178985	842783	0	True				
ANR	843178	EqualityExpression	op . type == R_ANAL_OP_TYPE_CALL		842783	0		==			
ANR	843179	MemberAccess	op . type		842783	0					
ANR	843180	Identifier	op		842783	0					
ANR	843181	Identifier	type		842783	1					
ANR	843182	Identifier	R_ANAL_OP_TYPE_CALL		842783	1					
ANR	843183	CompoundStatement		61:4:1641:1695	842783	1					
ANR	843184	IdentifierDeclStatement	bool isValidCall = true ;	6214:4:178994:179017	842783	0	True				
ANR	843185	IdentifierDecl	isValidCall = true		842783	0					
ANR	843186	IdentifierDeclType	bool		842783	0					
ANR	843187	Identifier	isValidCall		842783	1					
ANR	843188	AssignmentExpression	isValidCall = true		842783	2		=			
ANR	843189	Identifier	true		842783	0					
ANR	843190	Identifier	true		842783	1					
ANR	843191	IfStatement	if ( importsOnly )		842783	1					
ANR	843192	Condition	importsOnly	6215:8:179027:179037	842783	0	True				
ANR	843193	Identifier	importsOnly		842783	0					
ANR	843194	CompoundStatement		56:5:1501:1551	842783	1					
ANR	843195	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_i ( core -> flags , op . jump ) ;"	6216:5:179047:179097	842783	0	True				
ANR	843196	IdentifierDecl	"* f = r_flag_get_i ( core -> flags , op . jump )"		842783	0					
ANR	843197	IdentifierDeclType	RFlagItem *		842783	0					
ANR	843198	Identifier	f		842783	1					
ANR	843199	AssignmentExpression	"* f = r_flag_get_i ( core -> flags , op . jump )"		842783	2		=			
ANR	843200	Identifier	f		842783	0					
ANR	843201	CallExpression	"r_flag_get_i ( core -> flags , op . jump )"		842783	1					
ANR	843202	Callee	r_flag_get_i		842783	0					
ANR	843203	Identifier	r_flag_get_i		842783	0					
ANR	843204	ArgumentList	core -> flags		842783	1					
ANR	843205	Argument	core -> flags		842783	0					
ANR	843206	PtrMemberAccess	core -> flags		842783	0					
ANR	843207	Identifier	core		842783	0					
ANR	843208	Identifier	flags		842783	1					
ANR	843209	Argument	op . jump		842783	1					
ANR	843210	MemberAccess	op . jump		842783	0					
ANR	843211	Identifier	op		842783	0					
ANR	843212	Identifier	jump		842783	1					
ANR	843213	IfStatement	"if ( ! f || ! strstr ( f -> name , ""imp."" ) )"		842783	1					
ANR	843214	Condition	"! f || ! strstr ( f -> name , ""imp."" )"	6217:9:179108:179138	842783	0	True				
ANR	843215	OrExpression	"! f || ! strstr ( f -> name , ""imp."" )"		842783	0		||			
ANR	843216	UnaryOperationExpression	! f		842783	0					
ANR	843217	UnaryOperator	!		842783	0					
ANR	843218	Identifier	f		842783	1					
ANR	843219	UnaryOperationExpression	"! strstr ( f -> name , ""imp."" )"		842783	1					
ANR	843220	UnaryOperator	!		842783	0					
ANR	843221	CallExpression	"strstr ( f -> name , ""imp."" )"		842783	1					
ANR	843222	Callee	strstr		842783	0					
ANR	843223	Identifier	strstr		842783	0					
ANR	843224	ArgumentList	f -> name		842783	1					
ANR	843225	Argument	f -> name		842783	0					
ANR	843226	PtrMemberAccess	f -> name		842783	0					
ANR	843227	Identifier	f		842783	0					
ANR	843228	Identifier	name		842783	1					
ANR	843229	Argument	"""imp."""		842783	1					
ANR	843230	PrimaryExpression	"""imp."""		842783	0					
ANR	843231	CompoundStatement		57:42:1595:1595	842783	1					
ANR	843232	ExpressionStatement	isValidCall = false	6218:6:179149:179168	842783	0	True				
ANR	843233	AssignmentExpression	isValidCall = false		842783	0		=			
ANR	843234	Identifier	isValidCall		842783	0					
ANR	843235	Identifier	false		842783	1					
ANR	843236	IdentifierDeclStatement	"RBinReloc * rel = r_core_getreloc ( core , addr , op . size ) ;"	6221:4:179187:179241	842783	2	True				
ANR	843237	IdentifierDecl	"* rel = r_core_getreloc ( core , addr , op . size )"		842783	0					
ANR	843238	IdentifierDeclType	RBinReloc *		842783	0					
ANR	843239	Identifier	rel		842783	1					
ANR	843240	AssignmentExpression	"* rel = r_core_getreloc ( core , addr , op . size )"		842783	2		=			
ANR	843241	Identifier	rel		842783	0					
ANR	843242	CallExpression	"r_core_getreloc ( core , addr , op . size )"		842783	1					
ANR	843243	Callee	r_core_getreloc		842783	0					
ANR	843244	Identifier	r_core_getreloc		842783	0					
ANR	843245	ArgumentList	core		842783	1					
ANR	843246	Argument	core		842783	0					
ANR	843247	Identifier	core		842783	0					
ANR	843248	Argument	addr		842783	1					
ANR	843249	Identifier	addr		842783	0					
ANR	843250	Argument	op . size		842783	2					
ANR	843251	MemberAccess	op . size		842783	0					
ANR	843252	Identifier	op		842783	0					
ANR	843253	Identifier	size		842783	1					
ANR	843254	IfStatement	if ( rel && ( rel -> import || rel -> symbol ) )		842783	3					
ANR	843255	Condition	rel && ( rel -> import || rel -> symbol )	6222:8:179251:179285	842783	0	True				
ANR	843256	AndExpression	rel && ( rel -> import || rel -> symbol )		842783	0		&&			
ANR	843257	Identifier	rel		842783	0					
ANR	843258	OrExpression	rel -> import || rel -> symbol		842783	1		||			
ANR	843259	PtrMemberAccess	rel -> import		842783	0					
ANR	843260	Identifier	rel		842783	0					
ANR	843261	Identifier	import		842783	1					
ANR	843262	PtrMemberAccess	rel -> symbol		842783	1					
ANR	843263	Identifier	rel		842783	0					
ANR	843264	Identifier	symbol		842783	1					
ANR	843265	CompoundStatement		62:45:1742:1742	842783	1					
ANR	843266	ExpressionStatement	isValidCall = false	6223:5:179295:179314	842783	0	True				
ANR	843267	AssignmentExpression	isValidCall = false		842783	0		=			
ANR	843268	Identifier	isValidCall		842783	0					
ANR	843269	Identifier	false		842783	1					
ANR	843270	IfStatement	if ( isValidCall )		842783	4					
ANR	843271	Condition	isValidCall	6225:8:179330:179340	842783	0	True				
ANR	843272	Identifier	isValidCall		842783	0					
ANR	843273	CompoundStatement		65:21:1797:1797	842783	1					
ANR	843274	IfStatement	"if ( ! anal_is_bad_call ( core , from , to , addr , buf , bufi ) )"		842783	0					
ANR	843275	Condition	"! anal_is_bad_call ( core , from , to , addr , buf , bufi )"	6227:9:179367:179417	842783	0	True				
ANR	843276	UnaryOperationExpression	"! anal_is_bad_call ( core , from , to , addr , buf , bufi )"		842783	0					
ANR	843277	UnaryOperator	!		842783	0					
ANR	843278	CallExpression	"anal_is_bad_call ( core , from , to , addr , buf , bufi )"		842783	1					
ANR	843279	Callee	anal_is_bad_call		842783	0					
ANR	843280	Identifier	anal_is_bad_call		842783	0					
ANR	843281	ArgumentList	core		842783	1					
ANR	843282	Argument	core		842783	0					
ANR	843283	Identifier	core		842783	0					
ANR	843284	Argument	from		842783	1					
ANR	843285	Identifier	from		842783	0					
ANR	843286	Argument	to		842783	2					
ANR	843287	Identifier	to		842783	0					
ANR	843288	Argument	addr		842783	3					
ANR	843289	Identifier	addr		842783	0					
ANR	843290	Argument	buf		842783	4					
ANR	843291	Identifier	buf		842783	0					
ANR	843292	Argument	bufi		842783	5					
ANR	843293	Identifier	bufi		842783	0					
ANR	843294	CompoundStatement		67:62:1874:1874	842783	1					
ANR	843295	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , op . jump , R_ANAL_FCN_TYPE_ROOT )"	6228:6:179428:179495	842783	0	True				
ANR	843296	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , op . jump , R_ANAL_FCN_TYPE_ROOT )"		842783	0		=			
ANR	843297	Identifier	fcn		842783	0					
ANR	843298	CallExpression	"r_anal_get_fcn_in ( core -> anal , op . jump , R_ANAL_FCN_TYPE_ROOT )"		842783	1					
ANR	843299	Callee	r_anal_get_fcn_in		842783	0					
ANR	843300	Identifier	r_anal_get_fcn_in		842783	0					
ANR	843301	ArgumentList	core -> anal		842783	1					
ANR	843302	Argument	core -> anal		842783	0					
ANR	843303	PtrMemberAccess	core -> anal		842783	0					
ANR	843304	Identifier	core		842783	0					
ANR	843305	Identifier	anal		842783	1					
ANR	843306	Argument	op . jump		842783	1					
ANR	843307	MemberAccess	op . jump		842783	0					
ANR	843308	Identifier	op		842783	0					
ANR	843309	Identifier	jump		842783	1					
ANR	843310	Argument	R_ANAL_FCN_TYPE_ROOT		842783	2					
ANR	843311	Identifier	R_ANAL_FCN_TYPE_ROOT		842783	0					
ANR	843312	IfStatement	if ( ! fcn )		842783	1					
ANR	843313	Condition	! fcn	6229:10:179507:179510	842783	0	True				
ANR	843314	UnaryOperationExpression	! fcn		842783	0					
ANR	843315	UnaryOperator	!		842783	0					
ANR	843316	Identifier	fcn		842783	1					
ANR	843317	CompoundStatement		69:16:1967:1967	842783	1					
ANR	843318	ExpressionStatement	"r_core_anal_fcn ( core , op . jump , addr , R_ANAL_REF_TYPE_CALL , depth )"	6230:7:179522:179588	842783	0	True				
ANR	843319	CallExpression	"r_core_anal_fcn ( core , op . jump , addr , R_ANAL_REF_TYPE_CALL , depth )"		842783	0					
ANR	843320	Callee	r_core_anal_fcn		842783	0					
ANR	843321	Identifier	r_core_anal_fcn		842783	0					
ANR	843322	ArgumentList	core		842783	1					
ANR	843323	Argument	core		842783	0					
ANR	843324	Identifier	core		842783	0					
ANR	843325	Argument	op . jump		842783	1					
ANR	843326	MemberAccess	op . jump		842783	0					
ANR	843327	Identifier	op		842783	0					
ANR	843328	Identifier	jump		842783	1					
ANR	843329	Argument	addr		842783	2					
ANR	843330	Identifier	addr		842783	0					
ANR	843331	Argument	R_ANAL_REF_TYPE_CALL		842783	3					
ANR	843332	Identifier	R_ANAL_REF_TYPE_CALL		842783	0					
ANR	843333	Argument	depth		842783	4					
ANR	843334	Identifier	depth		842783	0					
ANR	843335	ElseStatement	else		842783	0					
ANR	843336	CompoundStatement		86:9:2455:2455	842783	0					
ANR	843337	ExpressionStatement	op . size = minop	6247:3:180006:180021	842783	0	True				
ANR	843338	AssignmentExpression	op . size = minop		842783	0		=			
ANR	843339	MemberAccess	op . size		842783	0					
ANR	843340	Identifier	op		842783	0					
ANR	843341	Identifier	size		842783	1					
ANR	843342	Identifier	minop		842783	1					
ANR	843343	IfStatement	if ( ( int ) op . size < 1 )		842783	8					
ANR	843344	Condition	( int ) op . size < 1	6249:6:180033:180048	842783	0	True				
ANR	843345	RelationalExpression	( int ) op . size < 1		842783	0		<			
ANR	843346	CastExpression	( int ) op . size		842783	0					
ANR	843347	CastTarget	int		842783	0					
ANR	843348	MemberAccess	op . size		842783	1					
ANR	843349	Identifier	op		842783	0					
ANR	843350	Identifier	size		842783	1					
ANR	843351	PrimaryExpression	1		842783	1					
ANR	843352	CompoundStatement		89:24:2505:2505	842783	1					
ANR	843353	ExpressionStatement	op . size = minop	6250:3:180056:180071	842783	0	True				
ANR	843354	AssignmentExpression	op . size = minop		842783	0		=			
ANR	843355	MemberAccess	op . size		842783	0					
ANR	843356	Identifier	op		842783	0					
ANR	843357	Identifier	size		842783	1					
ANR	843358	Identifier	minop		842783	1					
ANR	843359	ExpressionStatement	addr += op . size	6252:2:180079:180094	842783	9	True				
ANR	843360	AssignmentExpression	addr += op . size		842783	0		+=			
ANR	843361	Identifier	addr		842783	0					
ANR	843362	MemberAccess	op . size		842783	1					
ANR	843363	Identifier	op		842783	0					
ANR	843364	Identifier	size		842783	1					
ANR	843365	ExpressionStatement	bufi += addrbytes * op . size	6253:2:180098:180125	842783	10	True				
ANR	843366	AssignmentExpression	bufi += addrbytes * op . size		842783	0		+=			
ANR	843367	Identifier	bufi		842783	0					
ANR	843368	MultiplicativeExpression	addrbytes * op . size		842783	1		*			
ANR	843369	Identifier	addrbytes		842783	0					
ANR	843370	MemberAccess	op . size		842783	1					
ANR	843371	Identifier	op		842783	0					
ANR	843372	Identifier	size		842783	1					
ANR	843373	ExpressionStatement	r_anal_op_fini ( & op )	6254:2:180129:180149	842783	11	True				
ANR	843374	CallExpression	r_anal_op_fini ( & op )		842783	0					
ANR	843375	Callee	r_anal_op_fini		842783	0					
ANR	843376	Identifier	r_anal_op_fini		842783	0					
ANR	843377	ArgumentList	& op		842783	1					
ANR	843378	Argument	& op		842783	0					
ANR	843379	UnaryOperationExpression	& op		842783	0					
ANR	843380	UnaryOperator	&		842783	0					
ANR	843381	Identifier	op		842783	1					
ANR	843382	ExpressionStatement	r_cons_break_pop ( )	6256:1:180155:180174	842783	17	True				
ANR	843383	CallExpression	r_cons_break_pop ( )		842783	0					
ANR	843384	Callee	r_cons_break_pop		842783	0					
ANR	843385	Identifier	r_cons_break_pop		842783	0					
ANR	843386	ArgumentList			842783	1					
ANR	843387	ExpressionStatement	free ( buf )	6257:1:180177:180187	842783	18	True				
ANR	843388	CallExpression	free ( buf )		842783	0					
ANR	843389	Callee	free		842783	0					
ANR	843390	Identifier	free		842783	0					
ANR	843391	ArgumentList	buf		842783	1					
ANR	843392	Argument	buf		842783	0					
ANR	843393	Identifier	buf		842783	0					
ANR	843394	ExpressionStatement	free ( block0 )	6258:1:180190:180203	842783	19	True				
ANR	843395	CallExpression	free ( block0 )		842783	0					
ANR	843396	Callee	free		842783	0					
ANR	843397	Identifier	free		842783	0					
ANR	843398	ArgumentList	block0		842783	1					
ANR	843399	Argument	block0		842783	0					
ANR	843400	Identifier	block0		842783	0					
ANR	843401	ExpressionStatement	free ( block1 )	6259:1:180206:180219	842783	20	True				
ANR	843402	CallExpression	free ( block1 )		842783	0					
ANR	843403	Callee	free		842783	0					
ANR	843404	Identifier	free		842783	0					
ANR	843405	ArgumentList	block1		842783	1					
ANR	843406	Argument	block1		842783	0					
ANR	843407	Identifier	block1		842783	0					
ANR	843408	ReturnType	static void		842783	1					
ANR	843409	Identifier	_anal_calls		842783	2					
ANR	843410	ParameterList	"RCore * core , ut64 addr , ut64 addr_end , bool printCommands , bool importsOnly"		842783	3					
ANR	843411	Parameter	RCore * core	6161:24:177468:177478	842783	0	True				
ANR	843412	ParameterType	RCore *		842783	0					
ANR	843413	Identifier	core		842783	1					
ANR	843414	Parameter	ut64 addr	6161:37:177481:177489	842783	1	True				
ANR	843415	ParameterType	ut64		842783	0					
ANR	843416	Identifier	addr		842783	1					
ANR	843417	Parameter	ut64 addr_end	6161:48:177492:177504	842783	2	True				
ANR	843418	ParameterType	ut64		842783	0					
ANR	843419	Identifier	addr_end		842783	1					
ANR	843420	Parameter	bool printCommands	6161:63:177507:177524	842783	3	True				
ANR	843421	ParameterType	bool		842783	0					
ANR	843422	Identifier	printCommands		842783	1					
ANR	843423	Parameter	bool importsOnly	6161:83:177527:177542	842783	4	True				
ANR	843424	ParameterType	bool		842783	0					
ANR	843425	Identifier	importsOnly		842783	1					
ANR	843426	CFGEntryNode	ENTRY		842783		True				
ANR	843427	CFGExitNode	EXIT		842783		True				
ANR	843428	Symbol	UT32_MAX		842783						
ANR	843429	Symbol	minop		842783						
ANR	843430	Symbol	r_anal_archinfo		842783						
ANR	843431	Symbol	& op		842783						
ANR	843432	Symbol	* core -> assembler		842783						
ANR	843433	Symbol	memcmp		842783						
ANR	843434	Symbol	bufi_max		842783						
ANR	843435	Symbol	op . jump		842783						
ANR	843436	Symbol	hint -> bits		842783						
ANR	843437	Symbol	rel		842783						
ANR	843438	Symbol	from		842783						
ANR	843439	Symbol	r_flag_get_i		842783						
ANR	843440	Symbol	r_anal_op		842783						
ANR	843441	Symbol	importsOnly		842783						
ANR	843442	Symbol	* hint		842783						
ANR	843443	Symbol	block0		842783						
ANR	843444	Symbol	NULL		842783						
ANR	843445	Symbol	block1		842783						
ANR	843446	Symbol	rel -> symbol		842783						
ANR	843447	Symbol	core		842783						
ANR	843448	Symbol	strstr		842783						
ANR	843449	Symbol	R_ANAL_OP_TYPE_CALL		842783						
ANR	843450	Symbol	r_config_get_i		842783						
ANR	843451	Symbol	hint		842783						
ANR	843452	Symbol	R_ANAL_FCN_TYPE_ROOT		842783						
ANR	843453	Symbol	true		842783						
ANR	843454	Symbol	op . size		842783						
ANR	843455	Symbol	setBits		842783						
ANR	843456	Symbol	* rel		842783						
ANR	843457	Symbol	f -> name		842783						
ANR	843458	Symbol	* core		842783						
ANR	843459	Symbol	bsz		842783						
ANR	843460	Symbol	core -> assembler -> bits		842783						
ANR	843461	Symbol	core -> assembler		842783						
ANR	843462	Symbol	calloc		842783						
ANR	843463	Symbol	core -> anal		842783						
ANR	843464	Symbol	fcn		842783						
ANR	843465	Symbol	anal_is_bad_call		842783						
ANR	843466	Symbol	r_cons_is_breaked		842783						
ANR	843467	Symbol	core -> io		842783						
ANR	843468	Symbol	addr_end		842783						
ANR	843469	Symbol	addr		842783						
ANR	843470	Symbol	* * core		842783						
ANR	843471	Symbol	R_ANAL_REF_TYPE_CALL		842783						
ANR	843472	Symbol	core -> config		842783						
ANR	843473	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		842783						
ANR	843474	Symbol	op		842783						
ANR	843475	Symbol	malloc		842783						
ANR	843476	Symbol	addrbytes		842783						
ANR	843477	Symbol	op . type		842783						
ANR	843478	Symbol	f		842783						
ANR	843479	Symbol	printCommands		842783						
ANR	843480	Symbol	core -> io -> addrbytes		842783						
ANR	843481	Symbol	false		842783						
ANR	843482	Symbol	r_core_getreloc		842783						
ANR	843483	Symbol	core -> flags		842783						
ANR	843484	Symbol	r_anal_hint_get		842783						
ANR	843485	Symbol	* f		842783						
ANR	843486	Symbol	* core -> io		842783						
ANR	843487	Symbol	buf		842783						
ANR	843488	Symbol	depth		842783						
ANR	843489	Symbol	r_anal_get_fcn_in		842783						
ANR	843490	Symbol	bufi		842783						
ANR	843491	Symbol	isValidCall		842783						
ANR	843492	Symbol	to		842783						
ANR	843493	Symbol	rel -> import		842783						
ANR	843494	Function	cmd_anal_calls	6262:0:180224:181581							
ANR	843495	FunctionDef	"cmd_anal_calls (RCore * core , const char * input , bool printCommands , bool importsOnly)"		843494	0					
ANR	843496	CompoundStatement		6262:97:180321:181581	843494	0					
ANR	843497	IdentifierDeclStatement	RList * ranges = NULL ;	6263:1:180324:180344	843494	0	True				
ANR	843498	IdentifierDecl	* ranges = NULL		843494	0					
ANR	843499	IdentifierDeclType	RList *		843494	0					
ANR	843500	Identifier	ranges		843494	1					
ANR	843501	AssignmentExpression	* ranges = NULL		843494	2		=			
ANR	843502	Identifier	NULL		843494	0					
ANR	843503	Identifier	NULL		843494	1					
ANR	843504	IdentifierDeclStatement	RIOMap * r ;	6264:1:180347:180356	843494	1	True				
ANR	843505	IdentifierDecl	* r		843494	0					
ANR	843506	IdentifierDeclType	RIOMap *		843494	0					
ANR	843507	Identifier	r		843494	1					
ANR	843508	IdentifierDeclStatement	ut64 addr ;	6265:1:180359:180368	843494	2	True				
ANR	843509	IdentifierDecl	addr		843494	0					
ANR	843510	IdentifierDeclType	ut64		843494	0					
ANR	843511	Identifier	addr		843494	1					
ANR	843512	IdentifierDeclStatement	"ut64 len = r_num_math ( core -> num , input ) ;"	6266:1:180371:180411	843494	3	True				
ANR	843513	IdentifierDecl	"len = r_num_math ( core -> num , input )"		843494	0					
ANR	843514	IdentifierDeclType	ut64		843494	0					
ANR	843515	Identifier	len		843494	1					
ANR	843516	AssignmentExpression	"len = r_num_math ( core -> num , input )"		843494	2		=			
ANR	843517	Identifier	len		843494	0					
ANR	843518	CallExpression	"r_num_math ( core -> num , input )"		843494	1					
ANR	843519	Callee	r_num_math		843494	0					
ANR	843520	Identifier	r_num_math		843494	0					
ANR	843521	ArgumentList	core -> num		843494	1					
ANR	843522	Argument	core -> num		843494	0					
ANR	843523	PtrMemberAccess	core -> num		843494	0					
ANR	843524	Identifier	core		843494	0					
ANR	843525	Identifier	num		843494	1					
ANR	843526	Argument	input		843494	1					
ANR	843527	Identifier	input		843494	0					
ANR	843528	IfStatement	if ( len > 0xffffff )		843494	4					
ANR	843529	Condition	len > 0xffffff	6267:5:180418:180431	843494	0	True				
ANR	843530	RelationalExpression	len > 0xffffff		843494	0		>			
ANR	843531	Identifier	len		843494	0					
ANR	843532	PrimaryExpression	0xffffff		843494	1					
ANR	843533	CompoundStatement		6:21:112:112	843494	1					
ANR	843534	ExpressionStatement	"eprintf ( ""Too big\\n"" )"	6268:2:180438:180459	843494	0	True				
ANR	843535	CallExpression	"eprintf ( ""Too big\\n"" )"		843494	0					
ANR	843536	Callee	eprintf		843494	0					
ANR	843537	Identifier	eprintf		843494	0					
ANR	843538	ArgumentList	"""Too big\\n"""		843494	1					
ANR	843539	Argument	"""Too big\\n"""		843494	0					
ANR	843540	PrimaryExpression	"""Too big\\n"""		843494	0					
ANR	843541	ReturnStatement	return ;	6269:2:180463:180469	843494	1	True				
ANR	843542	IdentifierDeclStatement	RBinFile * binfile = r_bin_cur ( core -> bin ) ;	6271:1:180475:180516	843494	5	True				
ANR	843543	IdentifierDecl	* binfile = r_bin_cur ( core -> bin )		843494	0					
ANR	843544	IdentifierDeclType	RBinFile *		843494	0					
ANR	843545	Identifier	binfile		843494	1					
ANR	843546	AssignmentExpression	* binfile = r_bin_cur ( core -> bin )		843494	2		=			
ANR	843547	Identifier	binfile		843494	0					
ANR	843548	CallExpression	r_bin_cur ( core -> bin )		843494	1					
ANR	843549	Callee	r_bin_cur		843494	0					
ANR	843550	Identifier	r_bin_cur		843494	0					
ANR	843551	ArgumentList	core -> bin		843494	1					
ANR	843552	Argument	core -> bin		843494	0					
ANR	843553	PtrMemberAccess	core -> bin		843494	0					
ANR	843554	Identifier	core		843494	0					
ANR	843555	Identifier	bin		843494	1					
ANR	843556	ExpressionStatement	addr = core -> offset	6272:1:180519:180538	843494	6	True				
ANR	843557	AssignmentExpression	addr = core -> offset		843494	0		=			
ANR	843558	Identifier	addr		843494	0					
ANR	843559	PtrMemberAccess	core -> offset		843494	1					
ANR	843560	Identifier	core		843494	0					
ANR	843561	Identifier	offset		843494	1					
ANR	843562	IfStatement	if ( binfile )		843494	7					
ANR	843563	Condition	binfile	6273:5:180545:180551	843494	0	True				
ANR	843564	Identifier	binfile		843494	0					
ANR	843565	CompoundStatement		12:14:232:232	843494	1					
ANR	843566	IfStatement	if ( len )		843494	0					
ANR	843567	Condition	len	6274:6:180562:180564	843494	0	True				
ANR	843568	Identifier	len		843494	0					
ANR	843569	CompoundStatement		14:3:250:277	843494	1					
ANR	843570	IdentifierDeclStatement	RIOMap * m = R_NEW0 ( RIOMap ) ;	6275:3:180572:180599	843494	0	True				
ANR	843571	IdentifierDecl	* m = R_NEW0 ( RIOMap )		843494	0					
ANR	843572	IdentifierDeclType	RIOMap *		843494	0					
ANR	843573	Identifier	m		843494	1					
ANR	843574	AssignmentExpression	* m = R_NEW0 ( RIOMap )		843494	2		=			
ANR	843575	Identifier	m		843494	0					
ANR	843576	CallExpression	R_NEW0 ( RIOMap )		843494	1					
ANR	843577	Callee	R_NEW0		843494	0					
ANR	843578	Identifier	R_NEW0		843494	0					
ANR	843579	ArgumentList	RIOMap		843494	1					
ANR	843580	Argument	RIOMap		843494	0					
ANR	843581	Identifier	RIOMap		843494	0					
ANR	843582	ExpressionStatement	m -> itv . addr = addr	6276:3:180604:180622	843494	1	True				
ANR	843583	AssignmentExpression	m -> itv . addr = addr		843494	0		=			
ANR	843584	MemberAccess	m -> itv . addr		843494	0					
ANR	843585	PtrMemberAccess	m -> itv		843494	0					
ANR	843586	Identifier	m		843494	0					
ANR	843587	Identifier	itv		843494	1					
ANR	843588	Identifier	addr		843494	1					
ANR	843589	Identifier	addr		843494	1					
ANR	843590	ExpressionStatement	m -> itv . size = len	6277:3:180627:180644	843494	2	True				
ANR	843591	AssignmentExpression	m -> itv . size = len		843494	0		=			
ANR	843592	MemberAccess	m -> itv . size		843494	0					
ANR	843593	PtrMemberAccess	m -> itv		843494	0					
ANR	843594	Identifier	m		843494	0					
ANR	843595	Identifier	itv		843494	1					
ANR	843596	Identifier	size		843494	1					
ANR	843597	Identifier	len		843494	1					
ANR	843598	ExpressionStatement	ranges = r_list_newf ( ( RListFree ) free )	6278:3:180649:180687	843494	3	True				
ANR	843599	AssignmentExpression	ranges = r_list_newf ( ( RListFree ) free )		843494	0		=			
ANR	843600	Identifier	ranges		843494	0					
ANR	843601	CallExpression	r_list_newf ( ( RListFree ) free )		843494	1					
ANR	843602	Callee	r_list_newf		843494	0					
ANR	843603	Identifier	r_list_newf		843494	0					
ANR	843604	ArgumentList	( RListFree ) free		843494	1					
ANR	843605	Argument	( RListFree ) free		843494	0					
ANR	843606	CastExpression	( RListFree ) free		843494	0					
ANR	843607	CastTarget	RListFree		843494	0					
ANR	843608	Identifier	free		843494	1					
ANR	843609	ExpressionStatement	"r_list_append ( ranges , m )"	6279:3:180692:180717	843494	4	True				
ANR	843610	CallExpression	"r_list_append ( ranges , m )"		843494	0					
ANR	843611	Callee	r_list_append		843494	0					
ANR	843612	Identifier	r_list_append		843494	0					
ANR	843613	ArgumentList	ranges		843494	1					
ANR	843614	Argument	ranges		843494	0					
ANR	843615	Identifier	ranges		843494	0					
ANR	843616	Argument	m		843494	1					
ANR	843617	Identifier	m		843494	0					
ANR	843618	ElseStatement	else		843494	0					
ANR	843619	CompoundStatement		19:9:406:406	843494	0					
ANR	843620	ExpressionStatement	"ranges = r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" )"	6281:3:180733:180799	843494	0	True				
ANR	843621	AssignmentExpression	"ranges = r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" )"		843494	0		=			
ANR	843622	Identifier	ranges		843494	0					
ANR	843623	CallExpression	"r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" )"		843494	1					
ANR	843624	Callee	r_core_get_boundaries_prot		843494	0					
ANR	843625	Identifier	r_core_get_boundaries_prot		843494	0					
ANR	843626	ArgumentList	core		843494	1					
ANR	843627	Argument	core		843494	0					
ANR	843628	Identifier	core		843494	0					
ANR	843629	Argument	R_PERM_X		843494	1					
ANR	843630	Identifier	R_PERM_X		843494	0					
ANR	843631	Argument	NULL		843494	2					
ANR	843632	Identifier	NULL		843494	0					
ANR	843633	Argument	"""anal"""		843494	3					
ANR	843634	PrimaryExpression	"""anal"""		843494	0					
ANR	843635	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	6284:1:180809:180839	843494	8	True				
ANR	843636	CallExpression	"r_cons_break_push ( NULL , NULL )"		843494	0					
ANR	843637	Callee	r_cons_break_push		843494	0					
ANR	843638	Identifier	r_cons_break_push		843494	0					
ANR	843639	ArgumentList	NULL		843494	1					
ANR	843640	Argument	NULL		843494	0					
ANR	843641	Identifier	NULL		843494	0					
ANR	843642	Argument	NULL		843494	1					
ANR	843643	Identifier	NULL		843494	0					
ANR	843644	IfStatement	if ( ! binfile || ( ranges && ! r_list_length ( ranges ) ) )		843494	9					
ANR	843645	Condition	! binfile || ( ranges && ! r_list_length ( ranges ) )	6285:5:180846:180892	843494	0	True				
ANR	843646	OrExpression	! binfile || ( ranges && ! r_list_length ( ranges ) )		843494	0		||			
ANR	843647	UnaryOperationExpression	! binfile		843494	0					
ANR	843648	UnaryOperator	!		843494	0					
ANR	843649	Identifier	binfile		843494	1					
ANR	843650	AndExpression	ranges && ! r_list_length ( ranges )		843494	1		&&			
ANR	843651	Identifier	ranges		843494	0					
ANR	843652	UnaryOperationExpression	! r_list_length ( ranges )		843494	1					
ANR	843653	UnaryOperator	!		843494	0					
ANR	843654	CallExpression	r_list_length ( ranges )		843494	1					
ANR	843655	Callee	r_list_length		843494	0					
ANR	843656	Identifier	r_list_length		843494	0					
ANR	843657	ArgumentList	ranges		843494	1					
ANR	843658	Argument	ranges		843494	0					
ANR	843659	Identifier	ranges		843494	0					
ANR	843660	CompoundStatement		26:2:596:607	843494	1					
ANR	843661	IdentifierDeclStatement	RListIter * iter ;	6286:2:180899:180914	843494	0	True				
ANR	843662	IdentifierDecl	* iter		843494	0					
ANR	843663	IdentifierDeclType	RListIter *		843494	0					
ANR	843664	Identifier	iter		843494	1					
ANR	843665	IdentifierDeclStatement	RIOMap * map ;	6287:2:180918:180929	843494	1	True				
ANR	843666	IdentifierDecl	* map		843494	0					
ANR	843667	IdentifierDeclType	RIOMap *		843494	0					
ANR	843668	Identifier	map		843494	1					
ANR	843669	ExpressionStatement	r_list_free ( ranges )	6288:2:180933:180953	843494	2	True				
ANR	843670	CallExpression	r_list_free ( ranges )		843494	0					
ANR	843671	Callee	r_list_free		843494	0					
ANR	843672	Identifier	r_list_free		843494	0					
ANR	843673	ArgumentList	ranges		843494	1					
ANR	843674	Argument	ranges		843494	0					
ANR	843675	Identifier	ranges		843494	0					
ANR	843676	ExpressionStatement	"ranges = r_core_get_boundaries_prot ( core , 0 , NULL , ""anal"" )"	6289:2:180957:181016	843494	3	True				
ANR	843677	AssignmentExpression	"ranges = r_core_get_boundaries_prot ( core , 0 , NULL , ""anal"" )"		843494	0		=			
ANR	843678	Identifier	ranges		843494	0					
ANR	843679	CallExpression	"r_core_get_boundaries_prot ( core , 0 , NULL , ""anal"" )"		843494	1					
ANR	843680	Callee	r_core_get_boundaries_prot		843494	0					
ANR	843681	Identifier	r_core_get_boundaries_prot		843494	0					
ANR	843682	ArgumentList	core		843494	1					
ANR	843683	Argument	core		843494	0					
ANR	843684	Identifier	core		843494	0					
ANR	843685	Argument	0		843494	1					
ANR	843686	PrimaryExpression	0		843494	0					
ANR	843687	Argument	NULL		843494	2					
ANR	843688	Identifier	NULL		843494	0					
ANR	843689	Argument	"""anal"""		843494	3					
ANR	843690	PrimaryExpression	"""anal"""		843494	0					
ANR	843691	IfStatement	if ( ranges )		843494	4					
ANR	843692	Condition	ranges	6290:6:181024:181029	843494	0	True				
ANR	843693	Identifier	ranges		843494	0					
ANR	843694	CompoundStatement		29:14:710:710	843494	1					
ANR	843695	Statement	r_list_foreach	6291:3:181037:181050	843494	0	True				
ANR	843696	Statement	(	6291:18:181052:181052	843494	1	True				
ANR	843697	Statement	ranges	6291:19:181053:181058	843494	2	True				
ANR	843698	Statement	","	6291:25:181059:181059	843494	3	True				
ANR	843699	Statement	iter	6291:27:181061:181064	843494	4	True				
ANR	843700	Statement	","	6291:31:181065:181065	843494	5	True				
ANR	843701	Statement	map	6291:33:181067:181069	843494	6	True				
ANR	843702	Statement	)	6291:36:181070:181070	843494	7	True				
ANR	843703	CompoundStatement		31:4:756:781	843494	8					
ANR	843704	IdentifierDeclStatement	ut64 addr = map -> itv . addr ;	6292:4:181078:181103	843494	0	True				
ANR	843705	IdentifierDecl	addr = map -> itv . addr		843494	0					
ANR	843706	IdentifierDeclType	ut64		843494	0					
ANR	843707	Identifier	addr		843494	1					
ANR	843708	AssignmentExpression	addr = map -> itv . addr		843494	2		=			
ANR	843709	Identifier	addr		843494	0					
ANR	843710	MemberAccess	map -> itv . addr		843494	1					
ANR	843711	PtrMemberAccess	map -> itv		843494	0					
ANR	843712	Identifier	map		843494	0					
ANR	843713	Identifier	itv		843494	1					
ANR	843714	Identifier	addr		843494	1					
ANR	843715	ExpressionStatement	"_anal_calls ( core , addr , r_itv_end ( map -> itv ) , printCommands , importsOnly )"	6293:4:181109:181183	843494	1	True				
ANR	843716	CallExpression	"_anal_calls ( core , addr , r_itv_end ( map -> itv ) , printCommands , importsOnly )"		843494	0					
ANR	843717	Callee	_anal_calls		843494	0					
ANR	843718	Identifier	_anal_calls		843494	0					
ANR	843719	ArgumentList	core		843494	1					
ANR	843720	Argument	core		843494	0					
ANR	843721	Identifier	core		843494	0					
ANR	843722	Argument	addr		843494	1					
ANR	843723	Identifier	addr		843494	0					
ANR	843724	Argument	r_itv_end ( map -> itv )		843494	2					
ANR	843725	CallExpression	r_itv_end ( map -> itv )		843494	0					
ANR	843726	Callee	r_itv_end		843494	0					
ANR	843727	Identifier	r_itv_end		843494	0					
ANR	843728	ArgumentList	map -> itv		843494	1					
ANR	843729	Argument	map -> itv		843494	0					
ANR	843730	PtrMemberAccess	map -> itv		843494	0					
ANR	843731	Identifier	map		843494	0					
ANR	843732	Identifier	itv		843494	1					
ANR	843733	Argument	printCommands		843494	3					
ANR	843734	Identifier	printCommands		843494	0					
ANR	843735	Argument	importsOnly		843494	4					
ANR	843736	Identifier	importsOnly		843494	0					
ANR	843737	ElseStatement	else		843494	0					
ANR	843738	CompoundStatement		36:2:884:899	843494	0					
ANR	843739	IdentifierDeclStatement	RListIter * iter ;	6297:2:181206:181221	843494	0	True				
ANR	843740	IdentifierDecl	* iter		843494	0					
ANR	843741	IdentifierDeclType	RListIter *		843494	0					
ANR	843742	Identifier	iter		843494	1					
ANR	843743	IfStatement	if ( binfile )		843494	1					
ANR	843744	Condition	binfile	6298:6:181229:181235	843494	0	True				
ANR	843745	Identifier	binfile		843494	0					
ANR	843746	CompoundStatement		37:15:916:916	843494	1					
ANR	843747	Statement	r_list_foreach	6299:3:181243:181256	843494	0	True				
ANR	843748	Statement	(	6299:18:181258:181258	843494	1	True				
ANR	843749	Statement	ranges	6299:19:181259:181264	843494	2	True				
ANR	843750	Statement	","	6299:25:181265:181265	843494	3	True				
ANR	843751	Statement	iter	6299:27:181267:181270	843494	4	True				
ANR	843752	Statement	","	6299:31:181271:181271	843494	5	True				
ANR	843753	Statement	r	6299:33:181273:181273	843494	6	True				
ANR	843754	Statement	)	6299:34:181274:181274	843494	7	True				
ANR	843755	CompoundStatement		38:36:954:954	843494	8					
ANR	843756	ExpressionStatement	addr = r -> itv . addr	6300:4:181282:181300	843494	0	True				
ANR	843757	AssignmentExpression	addr = r -> itv . addr		843494	0		=			
ANR	843758	Identifier	addr		843494	0					
ANR	843759	MemberAccess	r -> itv . addr		843494	1					
ANR	843760	PtrMemberAccess	r -> itv		843494	0					
ANR	843761	Identifier	r		843494	0					
ANR	843762	Identifier	itv		843494	1					
ANR	843763	Identifier	addr		843494	1					
ANR	843764	IfStatement	if ( r_cons_is_breaked ( ) )		843494	1					
ANR	843765	Condition	r_cons_is_breaked ( )	6303:8:181404:181423	843494	0	True				
ANR	843766	CallExpression	r_cons_is_breaked ( )		843494	0					
ANR	843767	Callee	r_cons_is_breaked		843494	0					
ANR	843768	Identifier	r_cons_is_breaked		843494	0					
ANR	843769	ArgumentList			843494	1					
ANR	843770	CompoundStatement		42:30:1104:1104	843494	1					
ANR	843771	BreakStatement	break ;	6304:5:181433:181438	843494	0	True				
ANR	843772	ExpressionStatement	"_anal_calls ( core , addr , r_itv_end ( r -> itv ) , printCommands , importsOnly )"	6306:4:181450:181522	843494	2	True				
ANR	843773	CallExpression	"_anal_calls ( core , addr , r_itv_end ( r -> itv ) , printCommands , importsOnly )"		843494	0					
ANR	843774	Callee	_anal_calls		843494	0					
ANR	843775	Identifier	_anal_calls		843494	0					
ANR	843776	ArgumentList	core		843494	1					
ANR	843777	Argument	core		843494	0					
ANR	843778	Identifier	core		843494	0					
ANR	843779	Argument	addr		843494	1					
ANR	843780	Identifier	addr		843494	0					
ANR	843781	Argument	r_itv_end ( r -> itv )		843494	2					
ANR	843782	CallExpression	r_itv_end ( r -> itv )		843494	0					
ANR	843783	Callee	r_itv_end		843494	0					
ANR	843784	Identifier	r_itv_end		843494	0					
ANR	843785	ArgumentList	r -> itv		843494	1					
ANR	843786	Argument	r -> itv		843494	0					
ANR	843787	PtrMemberAccess	r -> itv		843494	0					
ANR	843788	Identifier	r		843494	0					
ANR	843789	Identifier	itv		843494	1					
ANR	843790	Argument	printCommands		843494	3					
ANR	843791	Identifier	printCommands		843494	0					
ANR	843792	Argument	importsOnly		843494	4					
ANR	843793	Identifier	importsOnly		843494	0					
ANR	843794	ExpressionStatement	r_cons_break_pop ( )	6310:1:181537:181556	843494	10	True				
ANR	843795	CallExpression	r_cons_break_pop ( )		843494	0					
ANR	843796	Callee	r_cons_break_pop		843494	0					
ANR	843797	Identifier	r_cons_break_pop		843494	0					
ANR	843798	ArgumentList			843494	1					
ANR	843799	ExpressionStatement	r_list_free ( ranges )	6311:1:181559:181579	843494	11	True				
ANR	843800	CallExpression	r_list_free ( ranges )		843494	0					
ANR	843801	Callee	r_list_free		843494	0					
ANR	843802	Identifier	r_list_free		843494	0					
ANR	843803	ArgumentList	ranges		843494	1					
ANR	843804	Argument	ranges		843494	0					
ANR	843805	Identifier	ranges		843494	0					
ANR	843806	ReturnType	static void		843494	1					
ANR	843807	Identifier	cmd_anal_calls		843494	2					
ANR	843808	ParameterList	"RCore * core , const char * input , bool printCommands , bool importsOnly"		843494	3					
ANR	843809	Parameter	RCore * core	6262:27:180251:180261	843494	0	True				
ANR	843810	ParameterType	RCore *		843494	0					
ANR	843811	Identifier	core		843494	1					
ANR	843812	Parameter	const char * input	6262:40:180264:180280	843494	1	True				
ANR	843813	ParameterType	const char *		843494	0					
ANR	843814	Identifier	input		843494	1					
ANR	843815	Parameter	bool printCommands	6262:59:180283:180300	843494	2	True				
ANR	843816	ParameterType	bool		843494	0					
ANR	843817	Identifier	printCommands		843494	1					
ANR	843818	Parameter	bool importsOnly	6262:79:180303:180318	843494	3	True				
ANR	843819	ParameterType	bool		843494	0					
ANR	843820	Identifier	importsOnly		843494	1					
ANR	843821	CFGEntryNode	ENTRY		843494		True				
ANR	843822	CFGExitNode	EXIT		843494		True				
ANR	843823	CFGErrorNode	ERROR		843494		True				
ANR	843824	Symbol	map -> itv		843494						
ANR	843825	Symbol	ranges		843494						
ANR	843826	Symbol	* map		843494						
ANR	843827	Symbol	* core		843494						
ANR	843828	Symbol	core -> offset		843494						
ANR	843829	Symbol	binfile		843494						
ANR	843830	Symbol	r_num_math		843494						
ANR	843831	Symbol	R_PERM_X		843494						
ANR	843832	Symbol	m -> itv . size		843494						
ANR	843833	Symbol	r_cons_is_breaked		843494						
ANR	843834	Symbol	RIOMap		843494						
ANR	843835	Symbol	len		843494						
ANR	843836	Symbol	map -> itv . addr		843494						
ANR	843837	Symbol	addr		843494						
ANR	843838	Symbol	core -> num		843494						
ANR	843839	Symbol	free		843494						
ANR	843840	Symbol	core -> bin		843494						
ANR	843841	Symbol	map		843494						
ANR	843842	Symbol	importsOnly		843494						
ANR	843843	Symbol	NULL		843494						
ANR	843844	Symbol	m -> itv		843494						
ANR	843845	Symbol	r_list_newf		843494						
ANR	843846	Symbol	printCommands		843494						
ANR	843847	Symbol	r_bin_cur		843494						
ANR	843848	Symbol	iter		843494						
ANR	843849	Symbol	m		843494						
ANR	843850	Symbol	r_itv_end		843494						
ANR	843851	Symbol	r -> itv . addr		843494						
ANR	843852	Symbol	core		843494						
ANR	843853	Symbol	input		843494						
ANR	843854	Symbol	R_NEW0		843494						
ANR	843855	Symbol	r		843494						
ANR	843856	Symbol	* m		843494						
ANR	843857	Symbol	m -> itv . addr		843494						
ANR	843858	Symbol	r_core_get_boundaries_prot		843494						
ANR	843859	Symbol	r -> itv		843494						
ANR	843860	Symbol	* r		843494						
ANR	843861	Symbol	r_list_length		843494						
ANR	843862	Function	cmd_asf	6314:0:181584:181873							
ANR	843863	FunctionDef	"cmd_asf (RCore * core , const char * input)"		843862	0					
ANR	843864	CompoundStatement		6314:52:181636:181873	843862	0					
ANR	843865	IdentifierDeclStatement	char * ret ;	6315:1:181639:181648	843862	0	True				
ANR	843866	IdentifierDecl	* ret		843862	0					
ANR	843867	IdentifierDeclType	char *		843862	0					
ANR	843868	Identifier	ret		843862	1					
ANR	843869	IfStatement	if ( input [ 0 ] == ' ' )		843862	1					
ANR	843870	Condition	input [ 0 ] == ' '	6316:5:181655:181669	843862	0	True				
ANR	843871	EqualityExpression	input [ 0 ] == ' '		843862	0		==			
ANR	843872	ArrayIndexing	input [ 0 ]		843862	0					
ANR	843873	Identifier	input		843862	0					
ANR	843874	PrimaryExpression	0		843862	1					
ANR	843875	PrimaryExpression	' '		843862	1					
ANR	843876	CompoundStatement		3:22:35:35	843862	1					
ANR	843877	ExpressionStatement	"ret = sdb_querys ( core -> anal -> sdb_fcnsign , NULL , 0 , input + 1 )"	6317:2:181676:181738	843862	0	True				
ANR	843878	AssignmentExpression	"ret = sdb_querys ( core -> anal -> sdb_fcnsign , NULL , 0 , input + 1 )"		843862	0		=			
ANR	843879	Identifier	ret		843862	0					
ANR	843880	CallExpression	"sdb_querys ( core -> anal -> sdb_fcnsign , NULL , 0 , input + 1 )"		843862	1					
ANR	843881	Callee	sdb_querys		843862	0					
ANR	843882	Identifier	sdb_querys		843862	0					
ANR	843883	ArgumentList	core -> anal -> sdb_fcnsign		843862	1					
ANR	843884	Argument	core -> anal -> sdb_fcnsign		843862	0					
ANR	843885	PtrMemberAccess	core -> anal -> sdb_fcnsign		843862	0					
ANR	843886	PtrMemberAccess	core -> anal		843862	0					
ANR	843887	Identifier	core		843862	0					
ANR	843888	Identifier	anal		843862	1					
ANR	843889	Identifier	sdb_fcnsign		843862	1					
ANR	843890	Argument	NULL		843862	1					
ANR	843891	Identifier	NULL		843862	0					
ANR	843892	Argument	0		843862	2					
ANR	843893	PrimaryExpression	0		843862	0					
ANR	843894	Argument	input + 1		843862	3					
ANR	843895	AdditiveExpression	input + 1		843862	0		+			
ANR	843896	Identifier	input		843862	0					
ANR	843897	PrimaryExpression	1		843862	1					
ANR	843898	ElseStatement	else		843862	0					
ANR	843899	CompoundStatement		5:8:111:111	843862	0					
ANR	843900	ExpressionStatement	"ret = sdb_querys ( core -> anal -> sdb_fcnsign , NULL , 0 , ""*"" )"	6319:2:181752:181808	843862	0	True				
ANR	843901	AssignmentExpression	"ret = sdb_querys ( core -> anal -> sdb_fcnsign , NULL , 0 , ""*"" )"		843862	0		=			
ANR	843902	Identifier	ret		843862	0					
ANR	843903	CallExpression	"sdb_querys ( core -> anal -> sdb_fcnsign , NULL , 0 , ""*"" )"		843862	1					
ANR	843904	Callee	sdb_querys		843862	0					
ANR	843905	Identifier	sdb_querys		843862	0					
ANR	843906	ArgumentList	core -> anal -> sdb_fcnsign		843862	1					
ANR	843907	Argument	core -> anal -> sdb_fcnsign		843862	0					
ANR	843908	PtrMemberAccess	core -> anal -> sdb_fcnsign		843862	0					
ANR	843909	PtrMemberAccess	core -> anal		843862	0					
ANR	843910	Identifier	core		843862	0					
ANR	843911	Identifier	anal		843862	1					
ANR	843912	Identifier	sdb_fcnsign		843862	1					
ANR	843913	Argument	NULL		843862	1					
ANR	843914	Identifier	NULL		843862	0					
ANR	843915	Argument	0		843862	2					
ANR	843916	PrimaryExpression	0		843862	0					
ANR	843917	Argument	"""*"""		843862	3					
ANR	843918	PrimaryExpression	"""*"""		843862	0					
ANR	843919	IfStatement	if ( ret && * ret )		843862	2					
ANR	843920	Condition	ret && * ret	6321:5:181818:181828	843862	0	True				
ANR	843921	AndExpression	ret && * ret		843862	0		&&			
ANR	843922	Identifier	ret		843862	0					
ANR	843923	UnaryOperationExpression	* ret		843862	1					
ANR	843924	UnaryOperator	*		843862	0					
ANR	843925	Identifier	ret		843862	1					
ANR	843926	CompoundStatement		8:18:194:194	843862	1					
ANR	843927	ExpressionStatement	r_cons_println ( ret )	6322:2:181835:181855	843862	0	True				
ANR	843928	CallExpression	r_cons_println ( ret )		843862	0					
ANR	843929	Callee	r_cons_println		843862	0					
ANR	843930	Identifier	r_cons_println		843862	0					
ANR	843931	ArgumentList	ret		843862	1					
ANR	843932	Argument	ret		843862	0					
ANR	843933	Identifier	ret		843862	0					
ANR	843934	ExpressionStatement	free ( ret )	6324:1:181861:181871	843862	3	True				
ANR	843935	CallExpression	free ( ret )		843862	0					
ANR	843936	Callee	free		843862	0					
ANR	843937	Identifier	free		843862	0					
ANR	843938	ArgumentList	ret		843862	1					
ANR	843939	Argument	ret		843862	0					
ANR	843940	Identifier	ret		843862	0					
ANR	843941	ReturnType	static void		843862	1					
ANR	843942	Identifier	cmd_asf		843862	2					
ANR	843943	ParameterList	"RCore * core , const char * input"		843862	3					
ANR	843944	Parameter	RCore * core	6314:20:181604:181614	843862	0	True				
ANR	843945	ParameterType	RCore *		843862	0					
ANR	843946	Identifier	core		843862	1					
ANR	843947	Parameter	const char * input	6314:33:181617:181633	843862	1	True				
ANR	843948	ParameterType	const char *		843862	0					
ANR	843949	Identifier	input		843862	1					
ANR	843950	CFGEntryNode	ENTRY		843862		True				
ANR	843951	CFGExitNode	EXIT		843862		True				
ANR	843952	Symbol	ret		843862						
ANR	843953	Symbol	core		843862						
ANR	843954	Symbol	input		843862						
ANR	843955	Symbol	* core -> anal		843862						
ANR	843956	Symbol	NULL		843862						
ANR	843957	Symbol	core -> anal -> sdb_fcnsign		843862						
ANR	843958	Symbol	* input		843862						
ANR	843959	Symbol	* core		843862						
ANR	843960	Symbol	sdb_querys		843862						
ANR	843961	Symbol	* ret		843862						
ANR	843962	Symbol	core -> anal		843862						
ANR	843963	Symbol	* * core		843862						
ANR	843964	Function	cmd_anal_syscall	6327:0:181876:185355							
ANR	843965	FunctionDef	"cmd_anal_syscall (RCore * core , const char * input)"		843964	0					
ANR	843966	CompoundStatement		6327:61:181937:185355	843964	0					
ANR	843967	IdentifierDeclStatement	PJ * pj = NULL ;	6328:1:181940:181953	843964	0	True				
ANR	843968	IdentifierDecl	* pj = NULL		843964	0					
ANR	843969	IdentifierDeclType	PJ *		843964	0					
ANR	843970	Identifier	pj		843964	1					
ANR	843971	AssignmentExpression	* pj = NULL		843964	2		=			
ANR	843972	Identifier	NULL		843964	0					
ANR	843973	Identifier	NULL		843964	1					
ANR	843974	IdentifierDeclStatement	RSyscallItem * si ;	6329:1:181956:181972	843964	1	True				
ANR	843975	IdentifierDecl	* si		843964	0					
ANR	843976	IdentifierDeclType	RSyscallItem *		843964	0					
ANR	843977	Identifier	si		843964	1					
ANR	843978	IdentifierDeclStatement	RListIter * iter ;	6330:1:181975:181990	843964	2	True				
ANR	843979	IdentifierDecl	* iter		843964	0					
ANR	843980	IdentifierDeclType	RListIter *		843964	0					
ANR	843981	Identifier	iter		843964	1					
ANR	843982	IdentifierDeclStatement	RList * list ;	6331:1:181993:182004	843964	3	True				
ANR	843983	IdentifierDecl	* list		843964	0					
ANR	843984	IdentifierDeclType	RList *		843964	0					
ANR	843985	Identifier	list		843964	1					
ANR	843986	IdentifierDeclStatement	RNum * num = NULL ;	6332:1:182007:182023	843964	4	True				
ANR	843987	IdentifierDecl	* num = NULL		843964	0					
ANR	843988	IdentifierDeclType	RNum *		843964	0					
ANR	843989	Identifier	num		843964	1					
ANR	843990	AssignmentExpression	* num = NULL		843964	2		=			
ANR	843991	Identifier	NULL		843964	0					
ANR	843992	Identifier	NULL		843964	1					
ANR	843993	IdentifierDeclStatement	char * out ;	6333:1:182026:182035	843964	5	True				
ANR	843994	IdentifierDecl	* out		843964	0					
ANR	843995	IdentifierDeclType	char *		843964	0					
ANR	843996	Identifier	out		843964	1					
ANR	843997	IdentifierDeclStatement	int n ;	6334:1:182038:182043	843964	6	True				
ANR	843998	IdentifierDecl	n		843964	0					
ANR	843999	IdentifierDeclType	int		843964	0					
ANR	844000	Identifier	n		843964	1					
ANR	844001	SwitchStatement	switch ( input [ 0 ] )		843964	7					
ANR	844002	Condition	input [ 0 ]	6336:9:182055:182062	843964	0	True				
ANR	844003	ArrayIndexing	input [ 0 ]		843964	0					
ANR	844004	Identifier	input		843964	0					
ANR	844005	PrimaryExpression	0		843964	1					
ANR	844006	CompoundStatement		10:19:127:127	843964	1					
ANR	844007	Label	case 'c' :	6337:1:182068:182076	843964	0	True				
ANR	844008	IfStatement	if ( input [ 1 ] == 'a' )		843964	1					
ANR	844009	Condition	input [ 1 ] == 'a'	6338:6:182093:182107	843964	0	True				
ANR	844010	EqualityExpression	input [ 1 ] == 'a'		843964	0		==			
ANR	844011	ArrayIndexing	input [ 1 ]		843964	0					
ANR	844012	Identifier	input		843964	0					
ANR	844013	PrimaryExpression	1		843964	1					
ANR	844014	PrimaryExpression	'a'		843964	1					
ANR	844015	CompoundStatement		12:23:172:172	843964	1					
ANR	844016	IfStatement	if ( input [ 2 ] == ' ' )		843964	0					
ANR	844017	Condition	input [ 2 ] == ' '	6339:7:182119:182133	843964	0	True				
ANR	844018	EqualityExpression	input [ 2 ] == ' '		843964	0		==			
ANR	844019	ArrayIndexing	input [ 2 ]		843964	0					
ANR	844020	Identifier	input		843964	0					
ANR	844021	PrimaryExpression	2		843964	1					
ANR	844022	PrimaryExpression	' '		843964	1					
ANR	844023	CompoundStatement		13:24:198:198	843964	1					
ANR	844024	IfStatement	"if ( ! isalpha ( ( ut8 ) input [ 3 ] ) && ( n = r_num_math ( num , input + 3 ) ) >= 0 )"		843964	0					
ANR	844025	Condition	"! isalpha ( ( ut8 ) input [ 3 ] ) && ( n = r_num_math ( num , input + 3 ) ) >= 0"	6340:8:182146:182211	843964	0	True				
ANR	844026	AndExpression	"! isalpha ( ( ut8 ) input [ 3 ] ) && ( n = r_num_math ( num , input + 3 ) ) >= 0"		843964	0		&&			
ANR	844027	UnaryOperationExpression	! isalpha ( ( ut8 ) input [ 3 ] )		843964	0					
ANR	844028	UnaryOperator	!		843964	0					
ANR	844029	CallExpression	isalpha ( ( ut8 ) input [ 3 ] )		843964	1					
ANR	844030	Callee	isalpha		843964	0					
ANR	844031	Identifier	isalpha		843964	0					
ANR	844032	ArgumentList	( ut8 ) input [ 3 ]		843964	1					
ANR	844033	Argument	( ut8 ) input [ 3 ]		843964	0					
ANR	844034	CastExpression	( ut8 ) input [ 3 ]		843964	0					
ANR	844035	CastTarget	ut8		843964	0					
ANR	844036	ArrayIndexing	input [ 3 ]		843964	1					
ANR	844037	Identifier	input		843964	0					
ANR	844038	PrimaryExpression	3		843964	1					
ANR	844039	RelationalExpression	"( n = r_num_math ( num , input + 3 ) ) >= 0"		843964	1		>=			
ANR	844040	AssignmentExpression	"n = r_num_math ( num , input + 3 )"		843964	0		=			
ANR	844041	Identifier	n		843964	0					
ANR	844042	CallExpression	"r_num_math ( num , input + 3 )"		843964	1					
ANR	844043	Callee	r_num_math		843964	0					
ANR	844044	Identifier	r_num_math		843964	0					
ANR	844045	ArgumentList	num		843964	1					
ANR	844046	Argument	num		843964	0					
ANR	844047	Identifier	num		843964	0					
ANR	844048	Argument	input + 3		843964	1					
ANR	844049	AdditiveExpression	input + 3		843964	0		+			
ANR	844050	Identifier	input		843964	0					
ANR	844051	PrimaryExpression	3		843964	1					
ANR	844052	PrimaryExpression	0		843964	1					
ANR	844053	CompoundStatement		14:77:277:277	843964	1					
ANR	844054	ExpressionStatement	"si = r_syscall_get ( core -> anal -> syscall , n , - 1 )"	6341:5:182222:182269	843964	0	True				
ANR	844055	AssignmentExpression	"si = r_syscall_get ( core -> anal -> syscall , n , - 1 )"		843964	0		=			
ANR	844056	Identifier	si		843964	0					
ANR	844057	CallExpression	"r_syscall_get ( core -> anal -> syscall , n , - 1 )"		843964	1					
ANR	844058	Callee	r_syscall_get		843964	0					
ANR	844059	Identifier	r_syscall_get		843964	0					
ANR	844060	ArgumentList	core -> anal -> syscall		843964	1					
ANR	844061	Argument	core -> anal -> syscall		843964	0					
ANR	844062	PtrMemberAccess	core -> anal -> syscall		843964	0					
ANR	844063	PtrMemberAccess	core -> anal		843964	0					
ANR	844064	Identifier	core		843964	0					
ANR	844065	Identifier	anal		843964	1					
ANR	844066	Identifier	syscall		843964	1					
ANR	844067	Argument	n		843964	1					
ANR	844068	Identifier	n		843964	0					
ANR	844069	Argument	- 1		843964	2					
ANR	844070	UnaryOperationExpression	- 1		843964	0					
ANR	844071	UnaryOperator	-		843964	0					
ANR	844072	PrimaryExpression	1		843964	1					
ANR	844073	IfStatement	if ( si )		843964	1					
ANR	844074	Condition	si	6342:9:182280:182281	843964	0	True				
ANR	844075	Identifier	si		843964	0					
ANR	844076	CompoundStatement		16:13:346:346	843964	1					
ANR	844077	ExpressionStatement	"r_cons_printf ( "".equ SYS_%s %s\\n"" , si -> name , syscallNumber ( n ) )"	6343:6:182292:182355	843964	0	True				
ANR	844078	CallExpression	"r_cons_printf ( "".equ SYS_%s %s\\n"" , si -> name , syscallNumber ( n ) )"		843964	0					
ANR	844079	Callee	r_cons_printf		843964	0					
ANR	844080	Identifier	r_cons_printf		843964	0					
ANR	844081	ArgumentList	""".equ SYS_%s %s\\n"""		843964	1					
ANR	844082	Argument	""".equ SYS_%s %s\\n"""		843964	0					
ANR	844083	PrimaryExpression	""".equ SYS_%s %s\\n"""		843964	0					
ANR	844084	Argument	si -> name		843964	1					
ANR	844085	PtrMemberAccess	si -> name		843964	0					
ANR	844086	Identifier	si		843964	0					
ANR	844087	Identifier	name		843964	1					
ANR	844088	Argument	syscallNumber ( n )		843964	2					
ANR	844089	CallExpression	syscallNumber ( n )		843964	0					
ANR	844090	Callee	syscallNumber		843964	0					
ANR	844091	Identifier	syscallNumber		843964	0					
ANR	844092	ArgumentList	n		843964	1					
ANR	844093	Argument	n		843964	0					
ANR	844094	Identifier	n		843964	0					
ANR	844095	ElseStatement	else		843964	0					
ANR	844096	ExpressionStatement	"eprintf ( ""Unknown syscall number\\n"" )"	6345:10:182374:182410	843964	0	True				
ANR	844097	CallExpression	"eprintf ( ""Unknown syscall number\\n"" )"		843964	0					
ANR	844098	Callee	eprintf		843964	0					
ANR	844099	Identifier	eprintf		843964	0					
ANR	844100	ArgumentList	"""Unknown syscall number\\n"""		843964	1					
ANR	844101	Argument	"""Unknown syscall number\\n"""		843964	0					
ANR	844102	PrimaryExpression	"""Unknown syscall number\\n"""		843964	0					
ANR	844103	ElseStatement	else		843964	0					
ANR	844104	CompoundStatement		20:11:485:485	843964	0					
ANR	844105	ExpressionStatement	"n = r_syscall_get_num ( core -> anal -> syscall , input + 3 )"	6347:5:182430:182484	843964	0	True				
ANR	844106	AssignmentExpression	"n = r_syscall_get_num ( core -> anal -> syscall , input + 3 )"		843964	0		=			
ANR	844107	Identifier	n		843964	0					
ANR	844108	CallExpression	"r_syscall_get_num ( core -> anal -> syscall , input + 3 )"		843964	1					
ANR	844109	Callee	r_syscall_get_num		843964	0					
ANR	844110	Identifier	r_syscall_get_num		843964	0					
ANR	844111	ArgumentList	core -> anal -> syscall		843964	1					
ANR	844112	Argument	core -> anal -> syscall		843964	0					
ANR	844113	PtrMemberAccess	core -> anal -> syscall		843964	0					
ANR	844114	PtrMemberAccess	core -> anal		843964	0					
ANR	844115	Identifier	core		843964	0					
ANR	844116	Identifier	anal		843964	1					
ANR	844117	Identifier	syscall		843964	1					
ANR	844118	Argument	input + 3		843964	1					
ANR	844119	AdditiveExpression	input + 3		843964	0		+			
ANR	844120	Identifier	input		843964	0					
ANR	844121	PrimaryExpression	3		843964	1					
ANR	844122	IfStatement	if ( n != - 1 )		843964	1					
ANR	844123	Condition	n != - 1	6348:9:182495:182501	843964	0	True				
ANR	844124	EqualityExpression	n != - 1		843964	0		!=			
ANR	844125	Identifier	n		843964	0					
ANR	844126	UnaryOperationExpression	- 1		843964	1					
ANR	844127	UnaryOperator	-		843964	0					
ANR	844128	PrimaryExpression	1		843964	1					
ANR	844129	CompoundStatement		22:18:566:566	843964	1					
ANR	844130	ExpressionStatement	"r_cons_printf ( "".equ SYS_%s %s\\n"" , input + 3 , syscallNumber ( n ) )"	6349:6:182512:182576	843964	0	True				
ANR	844131	CallExpression	"r_cons_printf ( "".equ SYS_%s %s\\n"" , input + 3 , syscallNumber ( n ) )"		843964	0					
ANR	844132	Callee	r_cons_printf		843964	0					
ANR	844133	Identifier	r_cons_printf		843964	0					
ANR	844134	ArgumentList	""".equ SYS_%s %s\\n"""		843964	1					
ANR	844135	Argument	""".equ SYS_%s %s\\n"""		843964	0					
ANR	844136	PrimaryExpression	""".equ SYS_%s %s\\n"""		843964	0					
ANR	844137	Argument	input + 3		843964	1					
ANR	844138	AdditiveExpression	input + 3		843964	0		+			
ANR	844139	Identifier	input		843964	0					
ANR	844140	PrimaryExpression	3		843964	1					
ANR	844141	Argument	syscallNumber ( n )		843964	2					
ANR	844142	CallExpression	syscallNumber ( n )		843964	0					
ANR	844143	Callee	syscallNumber		843964	0					
ANR	844144	Identifier	syscallNumber		843964	0					
ANR	844145	ArgumentList	n		843964	1					
ANR	844146	Argument	n		843964	0					
ANR	844147	Identifier	n		843964	0					
ANR	844148	ElseStatement	else		843964	0					
ANR	844149	CompoundStatement		24:12:652:652	843964	0					
ANR	844150	ExpressionStatement	"eprintf ( ""Unknown syscall name\\n"" )"	6351:6:182598:182632	843964	0	True				
ANR	844151	CallExpression	"eprintf ( ""Unknown syscall name\\n"" )"		843964	0					
ANR	844152	Callee	eprintf		843964	0					
ANR	844153	Identifier	eprintf		843964	0					
ANR	844154	ArgumentList	"""Unknown syscall name\\n"""		843964	1					
ANR	844155	Argument	"""Unknown syscall name\\n"""		843964	0					
ANR	844156	PrimaryExpression	"""Unknown syscall name\\n"""		843964	0					
ANR	844157	ElseStatement	else		843964	0					
ANR	844158	CompoundStatement		28:10:719:719	843964	0					
ANR	844159	ExpressionStatement	list = r_syscall_list ( core -> anal -> syscall )	6355:4:182663:182706	843964	0	True				
ANR	844160	AssignmentExpression	list = r_syscall_list ( core -> anal -> syscall )		843964	0		=			
ANR	844161	Identifier	list		843964	0					
ANR	844162	CallExpression	r_syscall_list ( core -> anal -> syscall )		843964	1					
ANR	844163	Callee	r_syscall_list		843964	0					
ANR	844164	Identifier	r_syscall_list		843964	0					
ANR	844165	ArgumentList	core -> anal -> syscall		843964	1					
ANR	844166	Argument	core -> anal -> syscall		843964	0					
ANR	844167	PtrMemberAccess	core -> anal -> syscall		843964	0					
ANR	844168	PtrMemberAccess	core -> anal		843964	0					
ANR	844169	Identifier	core		843964	0					
ANR	844170	Identifier	anal		843964	1					
ANR	844171	Identifier	syscall		843964	1					
ANR	844172	Statement	r_list_foreach	6356:4:182712:182725	843964	1	True				
ANR	844173	Statement	(	6356:19:182727:182727	843964	2	True				
ANR	844174	Statement	list	6356:20:182728:182731	843964	3	True				
ANR	844175	Statement	","	6356:24:182732:182732	843964	4	True				
ANR	844176	Statement	iter	6356:26:182734:182737	843964	5	True				
ANR	844177	Statement	","	6356:30:182738:182738	843964	6	True				
ANR	844178	Statement	si	6356:32:182740:182741	843964	7	True				
ANR	844179	Statement	)	6356:34:182742:182742	843964	8	True				
ANR	844180	CompoundStatement		30:36:806:806	843964	9					
ANR	844181	ExpressionStatement	"r_cons_printf ( "".equ SYS_%s %s\\n"" , si -> name , syscallNumber ( si -> num ) )"	6357:5:182751:182826	843964	0	True				
ANR	844182	CallExpression	"r_cons_printf ( "".equ SYS_%s %s\\n"" , si -> name , syscallNumber ( si -> num ) )"		843964	0					
ANR	844183	Callee	r_cons_printf		843964	0					
ANR	844184	Identifier	r_cons_printf		843964	0					
ANR	844185	ArgumentList	""".equ SYS_%s %s\\n"""		843964	1					
ANR	844186	Argument	""".equ SYS_%s %s\\n"""		843964	0					
ANR	844187	PrimaryExpression	""".equ SYS_%s %s\\n"""		843964	0					
ANR	844188	Argument	si -> name		843964	1					
ANR	844189	PtrMemberAccess	si -> name		843964	0					
ANR	844190	Identifier	si		843964	0					
ANR	844191	Identifier	name		843964	1					
ANR	844192	Argument	syscallNumber ( si -> num )		843964	2					
ANR	844193	CallExpression	syscallNumber ( si -> num )		843964	0					
ANR	844194	Callee	syscallNumber		843964	0					
ANR	844195	Identifier	syscallNumber		843964	0					
ANR	844196	ArgumentList	si -> num		843964	1					
ANR	844197	Argument	si -> num		843964	0					
ANR	844198	PtrMemberAccess	si -> num		843964	0					
ANR	844199	Identifier	si		843964	0					
ANR	844200	Identifier	num		843964	1					
ANR	844201	ExpressionStatement	r_list_free ( list )	6360:4:182838:182856	843964	10	True				
ANR	844202	CallExpression	r_list_free ( list )		843964	0					
ANR	844203	Callee	r_list_free		843964	0					
ANR	844204	Identifier	r_list_free		843964	0					
ANR	844205	ArgumentList	list		843964	1					
ANR	844206	Argument	list		843964	0					
ANR	844207	Identifier	list		843964	0					
ANR	844208	ElseStatement	else		843964	0					
ANR	844209	CompoundStatement		36:9:934:934	843964	0					
ANR	844210	IfStatement	if ( input [ 1 ] == ' ' )		843964	0					
ANR	844211	Condition	input [ 1 ] == ' '	6363:7:182881:182895	843964	0	True				
ANR	844212	EqualityExpression	input [ 1 ] == ' '		843964	0		==			
ANR	844213	ArrayIndexing	input [ 1 ]		843964	0					
ANR	844214	Identifier	input		843964	0					
ANR	844215	PrimaryExpression	1		843964	1					
ANR	844216	PrimaryExpression	' '		843964	1					
ANR	844217	CompoundStatement		37:24:960:960	843964	1					
ANR	844218	IfStatement	"if ( ! isalpha ( ( ut8 ) input [ 2 ] ) && ( n = r_num_math ( num , input + 2 ) ) >= 0 )"		843964	0					
ANR	844219	Condition	"! isalpha ( ( ut8 ) input [ 2 ] ) && ( n = r_num_math ( num , input + 2 ) ) >= 0"	6364:8:182908:182973	843964	0	True				
ANR	844220	AndExpression	"! isalpha ( ( ut8 ) input [ 2 ] ) && ( n = r_num_math ( num , input + 2 ) ) >= 0"		843964	0		&&			
ANR	844221	UnaryOperationExpression	! isalpha ( ( ut8 ) input [ 2 ] )		843964	0					
ANR	844222	UnaryOperator	!		843964	0					
ANR	844223	CallExpression	isalpha ( ( ut8 ) input [ 2 ] )		843964	1					
ANR	844224	Callee	isalpha		843964	0					
ANR	844225	Identifier	isalpha		843964	0					
ANR	844226	ArgumentList	( ut8 ) input [ 2 ]		843964	1					
ANR	844227	Argument	( ut8 ) input [ 2 ]		843964	0					
ANR	844228	CastExpression	( ut8 ) input [ 2 ]		843964	0					
ANR	844229	CastTarget	ut8		843964	0					
ANR	844230	ArrayIndexing	input [ 2 ]		843964	1					
ANR	844231	Identifier	input		843964	0					
ANR	844232	PrimaryExpression	2		843964	1					
ANR	844233	RelationalExpression	"( n = r_num_math ( num , input + 2 ) ) >= 0"		843964	1		>=			
ANR	844234	AssignmentExpression	"n = r_num_math ( num , input + 2 )"		843964	0		=			
ANR	844235	Identifier	n		843964	0					
ANR	844236	CallExpression	"r_num_math ( num , input + 2 )"		843964	1					
ANR	844237	Callee	r_num_math		843964	0					
ANR	844238	Identifier	r_num_math		843964	0					
ANR	844239	ArgumentList	num		843964	1					
ANR	844240	Argument	num		843964	0					
ANR	844241	Identifier	num		843964	0					
ANR	844242	Argument	input + 2		843964	1					
ANR	844243	AdditiveExpression	input + 2		843964	0		+			
ANR	844244	Identifier	input		843964	0					
ANR	844245	PrimaryExpression	2		843964	1					
ANR	844246	PrimaryExpression	0		843964	1					
ANR	844247	CompoundStatement		38:77:1039:1039	843964	1					
ANR	844248	ExpressionStatement	"si = r_syscall_get ( core -> anal -> syscall , n , - 1 )"	6365:5:182984:183031	843964	0	True				
ANR	844249	AssignmentExpression	"si = r_syscall_get ( core -> anal -> syscall , n , - 1 )"		843964	0		=			
ANR	844250	Identifier	si		843964	0					
ANR	844251	CallExpression	"r_syscall_get ( core -> anal -> syscall , n , - 1 )"		843964	1					
ANR	844252	Callee	r_syscall_get		843964	0					
ANR	844253	Identifier	r_syscall_get		843964	0					
ANR	844254	ArgumentList	core -> anal -> syscall		843964	1					
ANR	844255	Argument	core -> anal -> syscall		843964	0					
ANR	844256	PtrMemberAccess	core -> anal -> syscall		843964	0					
ANR	844257	PtrMemberAccess	core -> anal		843964	0					
ANR	844258	Identifier	core		843964	0					
ANR	844259	Identifier	anal		843964	1					
ANR	844260	Identifier	syscall		843964	1					
ANR	844261	Argument	n		843964	1					
ANR	844262	Identifier	n		843964	0					
ANR	844263	Argument	- 1		843964	2					
ANR	844264	UnaryOperationExpression	- 1		843964	0					
ANR	844265	UnaryOperator	-		843964	0					
ANR	844266	PrimaryExpression	1		843964	1					
ANR	844267	IfStatement	if ( si )		843964	1					
ANR	844268	Condition	si	6366:9:183042:183043	843964	0	True				
ANR	844269	Identifier	si		843964	0					
ANR	844270	CompoundStatement		40:13:1108:1108	843964	1					
ANR	844271	ExpressionStatement	"r_cons_printf ( ""#define SYS_%s %s\\n"" , si -> name , syscallNumber ( n ) )"	6367:6:183054:183120	843964	0	True				
ANR	844272	CallExpression	"r_cons_printf ( ""#define SYS_%s %s\\n"" , si -> name , syscallNumber ( n ) )"		843964	0					
ANR	844273	Callee	r_cons_printf		843964	0					
ANR	844274	Identifier	r_cons_printf		843964	0					
ANR	844275	ArgumentList	"""#define SYS_%s %s\\n"""		843964	1					
ANR	844276	Argument	"""#define SYS_%s %s\\n"""		843964	0					
ANR	844277	PrimaryExpression	"""#define SYS_%s %s\\n"""		843964	0					
ANR	844278	Argument	si -> name		843964	1					
ANR	844279	PtrMemberAccess	si -> name		843964	0					
ANR	844280	Identifier	si		843964	0					
ANR	844281	Identifier	name		843964	1					
ANR	844282	Argument	syscallNumber ( n )		843964	2					
ANR	844283	CallExpression	syscallNumber ( n )		843964	0					
ANR	844284	Callee	syscallNumber		843964	0					
ANR	844285	Identifier	syscallNumber		843964	0					
ANR	844286	ArgumentList	n		843964	1					
ANR	844287	Argument	n		843964	0					
ANR	844288	Identifier	n		843964	0					
ANR	844289	ElseStatement	else		843964	0					
ANR	844290	ExpressionStatement	"eprintf ( ""Unknown syscall number\\n"" )"	6369:10:183139:183175	843964	0	True				
ANR	844291	CallExpression	"eprintf ( ""Unknown syscall number\\n"" )"		843964	0					
ANR	844292	Callee	eprintf		843964	0					
ANR	844293	Identifier	eprintf		843964	0					
ANR	844294	ArgumentList	"""Unknown syscall number\\n"""		843964	1					
ANR	844295	Argument	"""Unknown syscall number\\n"""		843964	0					
ANR	844296	PrimaryExpression	"""Unknown syscall number\\n"""		843964	0					
ANR	844297	ElseStatement	else		843964	0					
ANR	844298	CompoundStatement		44:11:1250:1250	843964	0					
ANR	844299	ExpressionStatement	"n = r_syscall_get_num ( core -> anal -> syscall , input + 2 )"	6371:5:183195:183249	843964	0	True				
ANR	844300	AssignmentExpression	"n = r_syscall_get_num ( core -> anal -> syscall , input + 2 )"		843964	0		=			
ANR	844301	Identifier	n		843964	0					
ANR	844302	CallExpression	"r_syscall_get_num ( core -> anal -> syscall , input + 2 )"		843964	1					
ANR	844303	Callee	r_syscall_get_num		843964	0					
ANR	844304	Identifier	r_syscall_get_num		843964	0					
ANR	844305	ArgumentList	core -> anal -> syscall		843964	1					
ANR	844306	Argument	core -> anal -> syscall		843964	0					
ANR	844307	PtrMemberAccess	core -> anal -> syscall		843964	0					
ANR	844308	PtrMemberAccess	core -> anal		843964	0					
ANR	844309	Identifier	core		843964	0					
ANR	844310	Identifier	anal		843964	1					
ANR	844311	Identifier	syscall		843964	1					
ANR	844312	Argument	input + 2		843964	1					
ANR	844313	AdditiveExpression	input + 2		843964	0		+			
ANR	844314	Identifier	input		843964	0					
ANR	844315	PrimaryExpression	2		843964	1					
ANR	844316	IfStatement	if ( n != - 1 )		843964	1					
ANR	844317	Condition	n != - 1	6372:9:183260:183266	843964	0	True				
ANR	844318	EqualityExpression	n != - 1		843964	0		!=			
ANR	844319	Identifier	n		843964	0					
ANR	844320	UnaryOperationExpression	- 1		843964	1					
ANR	844321	UnaryOperator	-		843964	0					
ANR	844322	PrimaryExpression	1		843964	1					
ANR	844323	CompoundStatement		46:18:1331:1331	843964	1					
ANR	844324	ExpressionStatement	"r_cons_printf ( ""#define SYS_%s %s\\n"" , input + 2 , syscallNumber ( n ) )"	6373:6:183277:183344	843964	0	True				
ANR	844325	CallExpression	"r_cons_printf ( ""#define SYS_%s %s\\n"" , input + 2 , syscallNumber ( n ) )"		843964	0					
ANR	844326	Callee	r_cons_printf		843964	0					
ANR	844327	Identifier	r_cons_printf		843964	0					
ANR	844328	ArgumentList	"""#define SYS_%s %s\\n"""		843964	1					
ANR	844329	Argument	"""#define SYS_%s %s\\n"""		843964	0					
ANR	844330	PrimaryExpression	"""#define SYS_%s %s\\n"""		843964	0					
ANR	844331	Argument	input + 2		843964	1					
ANR	844332	AdditiveExpression	input + 2		843964	0		+			
ANR	844333	Identifier	input		843964	0					
ANR	844334	PrimaryExpression	2		843964	1					
ANR	844335	Argument	syscallNumber ( n )		843964	2					
ANR	844336	CallExpression	syscallNumber ( n )		843964	0					
ANR	844337	Callee	syscallNumber		843964	0					
ANR	844338	Identifier	syscallNumber		843964	0					
ANR	844339	ArgumentList	n		843964	1					
ANR	844340	Argument	n		843964	0					
ANR	844341	Identifier	n		843964	0					
ANR	844342	ElseStatement	else		843964	0					
ANR	844343	CompoundStatement		48:12:1420:1420	843964	0					
ANR	844344	ExpressionStatement	"eprintf ( ""Unknown syscall name\\n"" )"	6375:6:183366:183400	843964	0	True				
ANR	844345	CallExpression	"eprintf ( ""Unknown syscall name\\n"" )"		843964	0					
ANR	844346	Callee	eprintf		843964	0					
ANR	844347	Identifier	eprintf		843964	0					
ANR	844348	ArgumentList	"""Unknown syscall name\\n"""		843964	1					
ANR	844349	Argument	"""Unknown syscall name\\n"""		843964	0					
ANR	844350	PrimaryExpression	"""Unknown syscall name\\n"""		843964	0					
ANR	844351	ElseStatement	else		843964	0					
ANR	844352	CompoundStatement		52:10:1487:1487	843964	0					
ANR	844353	ExpressionStatement	list = r_syscall_list ( core -> anal -> syscall )	6379:4:183431:183474	843964	0	True				
ANR	844354	AssignmentExpression	list = r_syscall_list ( core -> anal -> syscall )		843964	0		=			
ANR	844355	Identifier	list		843964	0					
ANR	844356	CallExpression	r_syscall_list ( core -> anal -> syscall )		843964	1					
ANR	844357	Callee	r_syscall_list		843964	0					
ANR	844358	Identifier	r_syscall_list		843964	0					
ANR	844359	ArgumentList	core -> anal -> syscall		843964	1					
ANR	844360	Argument	core -> anal -> syscall		843964	0					
ANR	844361	PtrMemberAccess	core -> anal -> syscall		843964	0					
ANR	844362	PtrMemberAccess	core -> anal		843964	0					
ANR	844363	Identifier	core		843964	0					
ANR	844364	Identifier	anal		843964	1					
ANR	844365	Identifier	syscall		843964	1					
ANR	844366	Statement	r_list_foreach	6380:4:183480:183493	843964	1	True				
ANR	844367	Statement	(	6380:19:183495:183495	843964	2	True				
ANR	844368	Statement	list	6380:20:183496:183499	843964	3	True				
ANR	844369	Statement	","	6380:24:183500:183500	843964	4	True				
ANR	844370	Statement	iter	6380:26:183502:183505	843964	5	True				
ANR	844371	Statement	","	6380:30:183506:183506	843964	6	True				
ANR	844372	Statement	si	6380:32:183508:183509	843964	7	True				
ANR	844373	Statement	)	6380:34:183510:183510	843964	8	True				
ANR	844374	CompoundStatement		54:36:1574:1574	843964	9					
ANR	844375	ExpressionStatement	"r_cons_printf ( ""#define SYS_%s %d\\n"" , si -> name , syscallNumber ( si -> num ) )"	6381:5:183519:183597	843964	0	True				
ANR	844376	CallExpression	"r_cons_printf ( ""#define SYS_%s %d\\n"" , si -> name , syscallNumber ( si -> num ) )"		843964	0					
ANR	844377	Callee	r_cons_printf		843964	0					
ANR	844378	Identifier	r_cons_printf		843964	0					
ANR	844379	ArgumentList	"""#define SYS_%s %d\\n"""		843964	1					
ANR	844380	Argument	"""#define SYS_%s %d\\n"""		843964	0					
ANR	844381	PrimaryExpression	"""#define SYS_%s %d\\n"""		843964	0					
ANR	844382	Argument	si -> name		843964	1					
ANR	844383	PtrMemberAccess	si -> name		843964	0					
ANR	844384	Identifier	si		843964	0					
ANR	844385	Identifier	name		843964	1					
ANR	844386	Argument	syscallNumber ( si -> num )		843964	2					
ANR	844387	CallExpression	syscallNumber ( si -> num )		843964	0					
ANR	844388	Callee	syscallNumber		843964	0					
ANR	844389	Identifier	syscallNumber		843964	0					
ANR	844390	ArgumentList	si -> num		843964	1					
ANR	844391	Argument	si -> num		843964	0					
ANR	844392	PtrMemberAccess	si -> num		843964	0					
ANR	844393	Identifier	si		843964	0					
ANR	844394	Identifier	num		843964	1					
ANR	844395	ExpressionStatement	r_list_free ( list )	6384:4:183609:183627	843964	10	True				
ANR	844396	CallExpression	r_list_free ( list )		843964	0					
ANR	844397	Callee	r_list_free		843964	0					
ANR	844398	Identifier	r_list_free		843964	0					
ANR	844399	ArgumentList	list		843964	1					
ANR	844400	Argument	list		843964	0					
ANR	844401	Identifier	list		843964	0					
ANR	844402	BreakStatement	break ;	6387:2:183640:183645	843964	2	True				
ANR	844403	Label	case 'f' :	6388:1:183648:183656	843964	3	True				
ANR	844404	ExpressionStatement	"cmd_asf ( core , input + 1 )"	6389:2:183669:183694	843964	4	True				
ANR	844405	CallExpression	"cmd_asf ( core , input + 1 )"		843964	0					
ANR	844406	Callee	cmd_asf		843964	0					
ANR	844407	Identifier	cmd_asf		843964	0					
ANR	844408	ArgumentList	core		843964	1					
ANR	844409	Argument	core		843964	0					
ANR	844410	Identifier	core		843964	0					
ANR	844411	Argument	input + 1		843964	1					
ANR	844412	AdditiveExpression	input + 1		843964	0		+			
ANR	844413	Identifier	input		843964	0					
ANR	844414	PrimaryExpression	1		843964	1					
ANR	844415	BreakStatement	break ;	6390:2:183698:183703	843964	5	True				
ANR	844416	Label	case 'l' :	6391:1:183706:183714	843964	6	True				
ANR	844417	IfStatement	if ( input [ 1 ] == ' ' )		843964	7					
ANR	844418	Condition	input [ 1 ] == ' '	6392:6:183731:183745	843964	0	True				
ANR	844419	EqualityExpression	input [ 1 ] == ' '		843964	0		==			
ANR	844420	ArrayIndexing	input [ 1 ]		843964	0					
ANR	844421	Identifier	input		843964	0					
ANR	844422	PrimaryExpression	1		843964	1					
ANR	844423	PrimaryExpression	' '		843964	1					
ANR	844424	CompoundStatement		66:23:1810:1810	843964	1					
ANR	844425	IfStatement	"if ( ! isalpha ( ( ut8 ) input [ 2 ] ) && ( n = r_num_math ( num , input + 2 ) ) >= 0 )"		843964	0					
ANR	844426	Condition	"! isalpha ( ( ut8 ) input [ 2 ] ) && ( n = r_num_math ( num , input + 2 ) ) >= 0"	6393:7:183757:183822	843964	0	True				
ANR	844427	AndExpression	"! isalpha ( ( ut8 ) input [ 2 ] ) && ( n = r_num_math ( num , input + 2 ) ) >= 0"		843964	0		&&			
ANR	844428	UnaryOperationExpression	! isalpha ( ( ut8 ) input [ 2 ] )		843964	0					
ANR	844429	UnaryOperator	!		843964	0					
ANR	844430	CallExpression	isalpha ( ( ut8 ) input [ 2 ] )		843964	1					
ANR	844431	Callee	isalpha		843964	0					
ANR	844432	Identifier	isalpha		843964	0					
ANR	844433	ArgumentList	( ut8 ) input [ 2 ]		843964	1					
ANR	844434	Argument	( ut8 ) input [ 2 ]		843964	0					
ANR	844435	CastExpression	( ut8 ) input [ 2 ]		843964	0					
ANR	844436	CastTarget	ut8		843964	0					
ANR	844437	ArrayIndexing	input [ 2 ]		843964	1					
ANR	844438	Identifier	input		843964	0					
ANR	844439	PrimaryExpression	2		843964	1					
ANR	844440	RelationalExpression	"( n = r_num_math ( num , input + 2 ) ) >= 0"		843964	1		>=			
ANR	844441	AssignmentExpression	"n = r_num_math ( num , input + 2 )"		843964	0		=			
ANR	844442	Identifier	n		843964	0					
ANR	844443	CallExpression	"r_num_math ( num , input + 2 )"		843964	1					
ANR	844444	Callee	r_num_math		843964	0					
ANR	844445	Identifier	r_num_math		843964	0					
ANR	844446	ArgumentList	num		843964	1					
ANR	844447	Argument	num		843964	0					
ANR	844448	Identifier	num		843964	0					
ANR	844449	Argument	input + 2		843964	1					
ANR	844450	AdditiveExpression	input + 2		843964	0		+			
ANR	844451	Identifier	input		843964	0					
ANR	844452	PrimaryExpression	2		843964	1					
ANR	844453	PrimaryExpression	0		843964	1					
ANR	844454	CompoundStatement		67:76:1888:1888	843964	1					
ANR	844455	ExpressionStatement	"si = r_syscall_get ( core -> anal -> syscall , n , - 1 )"	6394:4:183832:183879	843964	0	True				
ANR	844456	AssignmentExpression	"si = r_syscall_get ( core -> anal -> syscall , n , - 1 )"		843964	0		=			
ANR	844457	Identifier	si		843964	0					
ANR	844458	CallExpression	"r_syscall_get ( core -> anal -> syscall , n , - 1 )"		843964	1					
ANR	844459	Callee	r_syscall_get		843964	0					
ANR	844460	Identifier	r_syscall_get		843964	0					
ANR	844461	ArgumentList	core -> anal -> syscall		843964	1					
ANR	844462	Argument	core -> anal -> syscall		843964	0					
ANR	844463	PtrMemberAccess	core -> anal -> syscall		843964	0					
ANR	844464	PtrMemberAccess	core -> anal		843964	0					
ANR	844465	Identifier	core		843964	0					
ANR	844466	Identifier	anal		843964	1					
ANR	844467	Identifier	syscall		843964	1					
ANR	844468	Argument	n		843964	1					
ANR	844469	Identifier	n		843964	0					
ANR	844470	Argument	- 1		843964	2					
ANR	844471	UnaryOperationExpression	- 1		843964	0					
ANR	844472	UnaryOperator	-		843964	0					
ANR	844473	PrimaryExpression	1		843964	1					
ANR	844474	IfStatement	if ( si )		843964	1					
ANR	844475	Condition	si	6395:8:183889:183890	843964	0	True				
ANR	844476	Identifier	si		843964	0					
ANR	844477	ExpressionStatement	r_cons_println ( si -> name )	6396:5:183898:183923	843964	1	True				
ANR	844478	CallExpression	r_cons_println ( si -> name )		843964	0					
ANR	844479	Callee	r_cons_println		843964	0					
ANR	844480	Identifier	r_cons_println		843964	0					
ANR	844481	ArgumentList	si -> name		843964	1					
ANR	844482	Argument	si -> name		843964	0					
ANR	844483	PtrMemberAccess	si -> name		843964	0					
ANR	844484	Identifier	si		843964	0					
ANR	844485	Identifier	name		843964	1					
ANR	844486	ElseStatement	else		843964	0					
ANR	844487	ExpressionStatement	"eprintf ( ""Unknown syscall number\\n"" )"	6397:9:183934:183970	843964	0	True				
ANR	844488	CallExpression	"eprintf ( ""Unknown syscall number\\n"" )"		843964	0					
ANR	844489	Callee	eprintf		843964	0					
ANR	844490	Identifier	eprintf		843964	0					
ANR	844491	ArgumentList	"""Unknown syscall number\\n"""		843964	1					
ANR	844492	Argument	"""Unknown syscall number\\n"""		843964	0					
ANR	844493	PrimaryExpression	"""Unknown syscall number\\n"""		843964	0					
ANR	844494	ElseStatement	else		843964	0					
ANR	844495	CompoundStatement		72:10:2044:2044	843964	0					
ANR	844496	ExpressionStatement	"n = r_syscall_get_num ( core -> anal -> syscall , input + 2 )"	6399:4:183988:184042	843964	0	True				
ANR	844497	AssignmentExpression	"n = r_syscall_get_num ( core -> anal -> syscall , input + 2 )"		843964	0		=			
ANR	844498	Identifier	n		843964	0					
ANR	844499	CallExpression	"r_syscall_get_num ( core -> anal -> syscall , input + 2 )"		843964	1					
ANR	844500	Callee	r_syscall_get_num		843964	0					
ANR	844501	Identifier	r_syscall_get_num		843964	0					
ANR	844502	ArgumentList	core -> anal -> syscall		843964	1					
ANR	844503	Argument	core -> anal -> syscall		843964	0					
ANR	844504	PtrMemberAccess	core -> anal -> syscall		843964	0					
ANR	844505	PtrMemberAccess	core -> anal		843964	0					
ANR	844506	Identifier	core		843964	0					
ANR	844507	Identifier	anal		843964	1					
ANR	844508	Identifier	syscall		843964	1					
ANR	844509	Argument	input + 2		843964	1					
ANR	844510	AdditiveExpression	input + 2		843964	0		+			
ANR	844511	Identifier	input		843964	0					
ANR	844512	PrimaryExpression	2		843964	1					
ANR	844513	IfStatement	if ( n != - 1 )		843964	1					
ANR	844514	Condition	n != - 1	6400:8:184052:184058	843964	0	True				
ANR	844515	EqualityExpression	n != - 1		843964	0		!=			
ANR	844516	Identifier	n		843964	0					
ANR	844517	UnaryOperationExpression	- 1		843964	1					
ANR	844518	UnaryOperator	-		843964	0					
ANR	844519	PrimaryExpression	1		843964	1					
ANR	844520	CompoundStatement		74:17:2123:2123	843964	1					
ANR	844521	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , syscallNumber ( n ) )"	6401:5:184068:184109	843964	0	True				
ANR	844522	CallExpression	"r_cons_printf ( ""%s\\n"" , syscallNumber ( n ) )"		843964	0					
ANR	844523	Callee	r_cons_printf		843964	0					
ANR	844524	Identifier	r_cons_printf		843964	0					
ANR	844525	ArgumentList	"""%s\\n"""		843964	1					
ANR	844526	Argument	"""%s\\n"""		843964	0					
ANR	844527	PrimaryExpression	"""%s\\n"""		843964	0					
ANR	844528	Argument	syscallNumber ( n )		843964	1					
ANR	844529	CallExpression	syscallNumber ( n )		843964	0					
ANR	844530	Callee	syscallNumber		843964	0					
ANR	844531	Identifier	syscallNumber		843964	0					
ANR	844532	ArgumentList	n		843964	1					
ANR	844533	Argument	n		843964	0					
ANR	844534	Identifier	n		843964	0					
ANR	844535	ElseStatement	else		843964	0					
ANR	844536	CompoundStatement		76:11:2184:2184	843964	0					
ANR	844537	ExpressionStatement	"eprintf ( ""Unknown syscall name\\n"" )"	6403:5:184129:184163	843964	0	True				
ANR	844538	CallExpression	"eprintf ( ""Unknown syscall name\\n"" )"		843964	0					
ANR	844539	Callee	eprintf		843964	0					
ANR	844540	Identifier	eprintf		843964	0					
ANR	844541	ArgumentList	"""Unknown syscall name\\n"""		843964	1					
ANR	844542	Argument	"""Unknown syscall name\\n"""		843964	0					
ANR	844543	PrimaryExpression	"""Unknown syscall name\\n"""		843964	0					
ANR	844544	ElseStatement	else		843964	0					
ANR	844545	CompoundStatement		80:9:2247:2247	843964	0					
ANR	844546	ExpressionStatement	list = r_syscall_list ( core -> anal -> syscall )	6407:3:184190:184233	843964	0	True				
ANR	844547	AssignmentExpression	list = r_syscall_list ( core -> anal -> syscall )		843964	0		=			
ANR	844548	Identifier	list		843964	0					
ANR	844549	CallExpression	r_syscall_list ( core -> anal -> syscall )		843964	1					
ANR	844550	Callee	r_syscall_list		843964	0					
ANR	844551	Identifier	r_syscall_list		843964	0					
ANR	844552	ArgumentList	core -> anal -> syscall		843964	1					
ANR	844553	Argument	core -> anal -> syscall		843964	0					
ANR	844554	PtrMemberAccess	core -> anal -> syscall		843964	0					
ANR	844555	PtrMemberAccess	core -> anal		843964	0					
ANR	844556	Identifier	core		843964	0					
ANR	844557	Identifier	anal		843964	1					
ANR	844558	Identifier	syscall		843964	1					
ANR	844559	Statement	r_list_foreach	6408:3:184238:184251	843964	1	True				
ANR	844560	Statement	(	6408:18:184253:184253	843964	2	True				
ANR	844561	Statement	list	6408:19:184254:184257	843964	3	True				
ANR	844562	Statement	","	6408:23:184258:184258	843964	4	True				
ANR	844563	Statement	iter	6408:25:184260:184263	843964	5	True				
ANR	844564	Statement	","	6408:29:184264:184264	843964	6	True				
ANR	844565	Statement	si	6408:31:184266:184267	843964	7	True				
ANR	844566	Statement	)	6408:33:184268:184268	843964	8	True				
ANR	844567	CompoundStatement		82:35:2332:2332	843964	9					
ANR	844568	ExpressionStatement	"r_cons_printf ( ""%s = 0x%02x.%s\\n"" , si -> name , si -> swi , syscallNumber ( si -> num ) )"	6409:4:184276:184359	843964	0	True				
ANR	844569	CallExpression	"r_cons_printf ( ""%s = 0x%02x.%s\\n"" , si -> name , si -> swi , syscallNumber ( si -> num ) )"		843964	0					
ANR	844570	Callee	r_cons_printf		843964	0					
ANR	844571	Identifier	r_cons_printf		843964	0					
ANR	844572	ArgumentList	"""%s = 0x%02x.%s\\n"""		843964	1					
ANR	844573	Argument	"""%s = 0x%02x.%s\\n"""		843964	0					
ANR	844574	PrimaryExpression	"""%s = 0x%02x.%s\\n"""		843964	0					
ANR	844575	Argument	si -> name		843964	1					
ANR	844576	PtrMemberAccess	si -> name		843964	0					
ANR	844577	Identifier	si		843964	0					
ANR	844578	Identifier	name		843964	1					
ANR	844579	Argument	si -> swi		843964	2					
ANR	844580	PtrMemberAccess	si -> swi		843964	0					
ANR	844581	Identifier	si		843964	0					
ANR	844582	Identifier	swi		843964	1					
ANR	844583	Argument	syscallNumber ( si -> num )		843964	3					
ANR	844584	CallExpression	syscallNumber ( si -> num )		843964	0					
ANR	844585	Callee	syscallNumber		843964	0					
ANR	844586	Identifier	syscallNumber		843964	0					
ANR	844587	ArgumentList	si -> num		843964	1					
ANR	844588	Argument	si -> num		843964	0					
ANR	844589	PtrMemberAccess	si -> num		843964	0					
ANR	844590	Identifier	si		843964	0					
ANR	844591	Identifier	num		843964	1					
ANR	844592	ExpressionStatement	r_list_free ( list )	6412:3:184369:184387	843964	10	True				
ANR	844593	CallExpression	r_list_free ( list )		843964	0					
ANR	844594	Callee	r_list_free		843964	0					
ANR	844595	Identifier	r_list_free		843964	0					
ANR	844596	ArgumentList	list		843964	1					
ANR	844597	Argument	list		843964	0					
ANR	844598	Identifier	list		843964	0					
ANR	844599	BreakStatement	break ;	6414:2:184395:184400	843964	8	True				
ANR	844600	Label	case 'j' :	6415:1:184403:184411	843964	9	True				
ANR	844601	ExpressionStatement	pj = pj_new ( )	6416:2:184424:184438	843964	10	True				
ANR	844602	AssignmentExpression	pj = pj_new ( )		843964	0		=			
ANR	844603	Identifier	pj		843964	0					
ANR	844604	CallExpression	pj_new ( )		843964	1					
ANR	844605	Callee	pj_new		843964	0					
ANR	844606	Identifier	pj_new		843964	0					
ANR	844607	ArgumentList			843964	1					
ANR	844608	ExpressionStatement	pj_a ( pj )	6417:2:184442:184451	843964	11	True				
ANR	844609	CallExpression	pj_a ( pj )		843964	0					
ANR	844610	Callee	pj_a		843964	0					
ANR	844611	Identifier	pj_a		843964	0					
ANR	844612	ArgumentList	pj		843964	1					
ANR	844613	Argument	pj		843964	0					
ANR	844614	Identifier	pj		843964	0					
ANR	844615	ExpressionStatement	list = r_syscall_list ( core -> anal -> syscall )	6418:2:184455:184498	843964	12	True				
ANR	844616	AssignmentExpression	list = r_syscall_list ( core -> anal -> syscall )		843964	0		=			
ANR	844617	Identifier	list		843964	0					
ANR	844618	CallExpression	r_syscall_list ( core -> anal -> syscall )		843964	1					
ANR	844619	Callee	r_syscall_list		843964	0					
ANR	844620	Identifier	r_syscall_list		843964	0					
ANR	844621	ArgumentList	core -> anal -> syscall		843964	1					
ANR	844622	Argument	core -> anal -> syscall		843964	0					
ANR	844623	PtrMemberAccess	core -> anal -> syscall		843964	0					
ANR	844624	PtrMemberAccess	core -> anal		843964	0					
ANR	844625	Identifier	core		843964	0					
ANR	844626	Identifier	anal		843964	1					
ANR	844627	Identifier	syscall		843964	1					
ANR	844628	Statement	r_list_foreach	6419:2:184502:184515	843964	13	True				
ANR	844629	Statement	(	6419:17:184517:184517	843964	14	True				
ANR	844630	Statement	list	6419:18:184518:184521	843964	15	True				
ANR	844631	Statement	","	6419:22:184522:184522	843964	16	True				
ANR	844632	Statement	iter	6419:24:184524:184527	843964	17	True				
ANR	844633	Statement	","	6419:28:184528:184528	843964	18	True				
ANR	844634	Statement	si	6419:30:184530:184531	843964	19	True				
ANR	844635	Statement	)	6419:32:184532:184532	843964	20	True				
ANR	844636	CompoundStatement		93:34:2596:2596	843964	21					
ANR	844637	ExpressionStatement	pj_o ( pj )	6420:3:184539:184548	843964	0	True				
ANR	844638	CallExpression	pj_o ( pj )		843964	0					
ANR	844639	Callee	pj_o		843964	0					
ANR	844640	Identifier	pj_o		843964	0					
ANR	844641	ArgumentList	pj		843964	1					
ANR	844642	Argument	pj		843964	0					
ANR	844643	Identifier	pj		843964	0					
ANR	844644	ExpressionStatement	"pj_ks ( pj , ""name"" , si -> name )"	6421:3:184553:184581	843964	1	True				
ANR	844645	CallExpression	"pj_ks ( pj , ""name"" , si -> name )"		843964	0					
ANR	844646	Callee	pj_ks		843964	0					
ANR	844647	Identifier	pj_ks		843964	0					
ANR	844648	ArgumentList	pj		843964	1					
ANR	844649	Argument	pj		843964	0					
ANR	844650	Identifier	pj		843964	0					
ANR	844651	Argument	"""name"""		843964	1					
ANR	844652	PrimaryExpression	"""name"""		843964	0					
ANR	844653	Argument	si -> name		843964	2					
ANR	844654	PtrMemberAccess	si -> name		843964	0					
ANR	844655	Identifier	si		843964	0					
ANR	844656	Identifier	name		843964	1					
ANR	844657	ExpressionStatement	"pj_ki ( pj , ""swi"" , si -> swi )"	6422:3:184586:184612	843964	2	True				
ANR	844658	CallExpression	"pj_ki ( pj , ""swi"" , si -> swi )"		843964	0					
ANR	844659	Callee	pj_ki		843964	0					
ANR	844660	Identifier	pj_ki		843964	0					
ANR	844661	ArgumentList	pj		843964	1					
ANR	844662	Argument	pj		843964	0					
ANR	844663	Identifier	pj		843964	0					
ANR	844664	Argument	"""swi"""		843964	1					
ANR	844665	PrimaryExpression	"""swi"""		843964	0					
ANR	844666	Argument	si -> swi		843964	2					
ANR	844667	PtrMemberAccess	si -> swi		843964	0					
ANR	844668	Identifier	si		843964	0					
ANR	844669	Identifier	swi		843964	1					
ANR	844670	ExpressionStatement	"pj_ki ( pj , ""num"" , si -> num )"	6423:3:184617:184643	843964	3	True				
ANR	844671	CallExpression	"pj_ki ( pj , ""num"" , si -> num )"		843964	0					
ANR	844672	Callee	pj_ki		843964	0					
ANR	844673	Identifier	pj_ki		843964	0					
ANR	844674	ArgumentList	pj		843964	1					
ANR	844675	Argument	pj		843964	0					
ANR	844676	Identifier	pj		843964	0					
ANR	844677	Argument	"""num"""		843964	1					
ANR	844678	PrimaryExpression	"""num"""		843964	0					
ANR	844679	Argument	si -> num		843964	2					
ANR	844680	PtrMemberAccess	si -> num		843964	0					
ANR	844681	Identifier	si		843964	0					
ANR	844682	Identifier	num		843964	1					
ANR	844683	ExpressionStatement	pj_end ( pj )	6424:3:184648:184659	843964	4	True				
ANR	844684	CallExpression	pj_end ( pj )		843964	0					
ANR	844685	Callee	pj_end		843964	0					
ANR	844686	Identifier	pj_end		843964	0					
ANR	844687	ArgumentList	pj		843964	1					
ANR	844688	Argument	pj		843964	0					
ANR	844689	Identifier	pj		843964	0					
ANR	844690	ExpressionStatement	pj_end ( pj )	6426:2:184667:184678	843964	22	True				
ANR	844691	CallExpression	pj_end ( pj )		843964	0					
ANR	844692	Callee	pj_end		843964	0					
ANR	844693	Identifier	pj_end		843964	0					
ANR	844694	ArgumentList	pj		843964	1					
ANR	844695	Argument	pj		843964	0					
ANR	844696	Identifier	pj		843964	0					
ANR	844697	IfStatement	if ( pj )		843964	23					
ANR	844698	Condition	pj	6427:6:184686:184687	843964	0	True				
ANR	844699	Identifier	pj		843964	0					
ANR	844700	CompoundStatement		101:10:2752:2752	843964	1					
ANR	844701	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	6428:3:184695:184726	843964	0	True				
ANR	844702	CallExpression	r_cons_println ( pj_string ( pj ) )		843964	0					
ANR	844703	Callee	r_cons_println		843964	0					
ANR	844704	Identifier	r_cons_println		843964	0					
ANR	844705	ArgumentList	pj_string ( pj )		843964	1					
ANR	844706	Argument	pj_string ( pj )		843964	0					
ANR	844707	CallExpression	pj_string ( pj )		843964	0					
ANR	844708	Callee	pj_string		843964	0					
ANR	844709	Identifier	pj_string		843964	0					
ANR	844710	ArgumentList	pj		843964	1					
ANR	844711	Argument	pj		843964	0					
ANR	844712	Identifier	pj		843964	0					
ANR	844713	ExpressionStatement	pj_free ( pj )	6429:3:184731:184743	843964	1	True				
ANR	844714	CallExpression	pj_free ( pj )		843964	0					
ANR	844715	Callee	pj_free		843964	0					
ANR	844716	Identifier	pj_free		843964	0					
ANR	844717	ArgumentList	pj		843964	1					
ANR	844718	Argument	pj		843964	0					
ANR	844719	Identifier	pj		843964	0					
ANR	844720	BreakStatement	break ;	6431:2:184751:184756	843964	24	True				
ANR	844721	Label	case '\\0' :	6432:1:184759:184768	843964	25	True				
ANR	844722	ExpressionStatement	"cmd_syscall_do ( core , - 1 , core -> offset )"	6433:2:184772:184811	843964	26	True				
ANR	844723	CallExpression	"cmd_syscall_do ( core , - 1 , core -> offset )"		843964	0					
ANR	844724	Callee	cmd_syscall_do		843964	0					
ANR	844725	Identifier	cmd_syscall_do		843964	0					
ANR	844726	ArgumentList	core		843964	1					
ANR	844727	Argument	core		843964	0					
ANR	844728	Identifier	core		843964	0					
ANR	844729	Argument	- 1		843964	1					
ANR	844730	UnaryOperationExpression	- 1		843964	0					
ANR	844731	UnaryOperator	-		843964	0					
ANR	844732	PrimaryExpression	1		843964	1					
ANR	844733	Argument	core -> offset		843964	2					
ANR	844734	PtrMemberAccess	core -> offset		843964	0					
ANR	844735	Identifier	core		843964	0					
ANR	844736	Identifier	offset		843964	1					
ANR	844737	BreakStatement	break ;	6434:2:184815:184820	843964	27	True				
ANR	844738	Label	case ' ' :	6435:1:184823:184831	843964	28	True				
ANR	844739	CompoundStatement		112:2:2947:3001	843964	29					
ANR	844740	IdentifierDeclStatement	const char * sn = r_str_trim_ro ( input + 1 ) ;	6437:2:184839:184881	843964	0	True				
ANR	844741	IdentifierDecl	* sn = r_str_trim_ro ( input + 1 )		843964	0					
ANR	844742	IdentifierDeclType	const char *		843964	0					
ANR	844743	Identifier	sn		843964	1					
ANR	844744	AssignmentExpression	* sn = r_str_trim_ro ( input + 1 )		843964	2		=			
ANR	844745	Identifier	sn		843964	0					
ANR	844746	CallExpression	r_str_trim_ro ( input + 1 )		843964	1					
ANR	844747	Callee	r_str_trim_ro		843964	0					
ANR	844748	Identifier	r_str_trim_ro		843964	0					
ANR	844749	ArgumentList	input + 1		843964	1					
ANR	844750	Argument	input + 1		843964	0					
ANR	844751	AdditiveExpression	input + 1		843964	0		+			
ANR	844752	Identifier	input		843964	0					
ANR	844753	PrimaryExpression	1		843964	1					
ANR	844754	IdentifierDeclStatement	"st64 num = r_syscall_get_num ( core -> anal -> syscall , sn ) ;"	6438:2:184885:184939	843964	1	True				
ANR	844755	IdentifierDecl	"num = r_syscall_get_num ( core -> anal -> syscall , sn )"		843964	0					
ANR	844756	IdentifierDeclType	st64		843964	0					
ANR	844757	Identifier	num		843964	1					
ANR	844758	AssignmentExpression	"num = r_syscall_get_num ( core -> anal -> syscall , sn )"		843964	2		=			
ANR	844759	Identifier	num		843964	0					
ANR	844760	CallExpression	"r_syscall_get_num ( core -> anal -> syscall , sn )"		843964	1					
ANR	844761	Callee	r_syscall_get_num		843964	0					
ANR	844762	Identifier	r_syscall_get_num		843964	0					
ANR	844763	ArgumentList	core -> anal -> syscall		843964	1					
ANR	844764	Argument	core -> anal -> syscall		843964	0					
ANR	844765	PtrMemberAccess	core -> anal -> syscall		843964	0					
ANR	844766	PtrMemberAccess	core -> anal		843964	0					
ANR	844767	Identifier	core		843964	0					
ANR	844768	Identifier	anal		843964	1					
ANR	844769	Identifier	syscall		843964	1					
ANR	844770	Argument	sn		843964	1					
ANR	844771	Identifier	sn		843964	0					
ANR	844772	IfStatement	if ( num < 1 )		843964	2					
ANR	844773	Condition	num < 1	6439:6:184947:184953	843964	0	True				
ANR	844774	RelationalExpression	num < 1		843964	0		<			
ANR	844775	Identifier	num		843964	0					
ANR	844776	PrimaryExpression	1		843964	1					
ANR	844777	CompoundStatement		113:15:3018:3018	843964	1					
ANR	844778	ExpressionStatement	"num = ( int ) r_num_get ( core -> num , sn )"	6440:3:184961:184997	843964	0	True				
ANR	844779	AssignmentExpression	"num = ( int ) r_num_get ( core -> num , sn )"		843964	0		=			
ANR	844780	Identifier	num		843964	0					
ANR	844781	CastExpression	"( int ) r_num_get ( core -> num , sn )"		843964	1					
ANR	844782	CastTarget	int		843964	0					
ANR	844783	CallExpression	"r_num_get ( core -> num , sn )"		843964	1					
ANR	844784	Callee	r_num_get		843964	0					
ANR	844785	Identifier	r_num_get		843964	0					
ANR	844786	ArgumentList	core -> num		843964	1					
ANR	844787	Argument	core -> num		843964	0					
ANR	844788	PtrMemberAccess	core -> num		843964	0					
ANR	844789	Identifier	core		843964	0					
ANR	844790	Identifier	num		843964	1					
ANR	844791	Argument	sn		843964	1					
ANR	844792	Identifier	sn		843964	0					
ANR	844793	ExpressionStatement	"cmd_syscall_do ( core , num , - 1 )"	6442:2:185005:185035	843964	3	True				
ANR	844794	CallExpression	"cmd_syscall_do ( core , num , - 1 )"		843964	0					
ANR	844795	Callee	cmd_syscall_do		843964	0					
ANR	844796	Identifier	cmd_syscall_do		843964	0					
ANR	844797	ArgumentList	core		843964	1					
ANR	844798	Argument	core		843964	0					
ANR	844799	Identifier	core		843964	0					
ANR	844800	Argument	num		843964	1					
ANR	844801	Identifier	num		843964	0					
ANR	844802	Argument	- 1		843964	2					
ANR	844803	UnaryOperationExpression	- 1		843964	0					
ANR	844804	UnaryOperator	-		843964	0					
ANR	844805	PrimaryExpression	1		843964	1					
ANR	844806	BreakStatement	break ;	6444:2:185043:185048	843964	30	True				
ANR	844807	Label	case 'k' :	6445:1:185051:185059	843964	31	True				
ANR	844808	IfStatement	if ( input [ 1 ] == ' ' )		843964	32					
ANR	844809	Condition	input [ 1 ] == ' '	6446:6:185076:185090	843964	0	True				
ANR	844810	EqualityExpression	input [ 1 ] == ' '		843964	0		==			
ANR	844811	ArrayIndexing	input [ 1 ]		843964	0					
ANR	844812	Identifier	input		843964	0					
ANR	844813	PrimaryExpression	1		843964	1					
ANR	844814	PrimaryExpression	' '		843964	1					
ANR	844815	CompoundStatement		120:23:3155:3155	843964	1					
ANR	844816	ExpressionStatement	"out = sdb_querys ( core -> anal -> syscall -> db , NULL , 0 , input + 2 )"	6447:3:185098:185160	843964	0	True				
ANR	844817	AssignmentExpression	"out = sdb_querys ( core -> anal -> syscall -> db , NULL , 0 , input + 2 )"		843964	0		=			
ANR	844818	Identifier	out		843964	0					
ANR	844819	CallExpression	"sdb_querys ( core -> anal -> syscall -> db , NULL , 0 , input + 2 )"		843964	1					
ANR	844820	Callee	sdb_querys		843964	0					
ANR	844821	Identifier	sdb_querys		843964	0					
ANR	844822	ArgumentList	core -> anal -> syscall -> db		843964	1					
ANR	844823	Argument	core -> anal -> syscall -> db		843964	0					
ANR	844824	PtrMemberAccess	core -> anal -> syscall -> db		843964	0					
ANR	844825	PtrMemberAccess	core -> anal -> syscall		843964	0					
ANR	844826	PtrMemberAccess	core -> anal		843964	0					
ANR	844827	Identifier	core		843964	0					
ANR	844828	Identifier	anal		843964	1					
ANR	844829	Identifier	syscall		843964	1					
ANR	844830	Identifier	db		843964	1					
ANR	844831	Argument	NULL		843964	1					
ANR	844832	Identifier	NULL		843964	0					
ANR	844833	Argument	0		843964	2					
ANR	844834	PrimaryExpression	0		843964	0					
ANR	844835	Argument	input + 2		843964	3					
ANR	844836	AdditiveExpression	input + 2		843964	0		+			
ANR	844837	Identifier	input		843964	0					
ANR	844838	PrimaryExpression	2		843964	1					
ANR	844839	IfStatement	if ( out )		843964	1					
ANR	844840	Condition	out	6448:7:185169:185171	843964	0	True				
ANR	844841	Identifier	out		843964	0					
ANR	844842	CompoundStatement		122:12:3236:3236	843964	1					
ANR	844843	ExpressionStatement	r_cons_println ( out )	6449:4:185180:185200	843964	0	True				
ANR	844844	CallExpression	r_cons_println ( out )		843964	0					
ANR	844845	Callee	r_cons_println		843964	0					
ANR	844846	Identifier	r_cons_println		843964	0					
ANR	844847	ArgumentList	out		843964	1					
ANR	844848	Argument	out		843964	0					
ANR	844849	Identifier	out		843964	0					
ANR	844850	ExpressionStatement	free ( out )	6450:4:185206:185216	843964	1	True				
ANR	844851	CallExpression	free ( out )		843964	0					
ANR	844852	Callee	free		843964	0					
ANR	844853	Identifier	free		843964	0					
ANR	844854	ArgumentList	out		843964	1					
ANR	844855	Argument	out		843964	0					
ANR	844856	Identifier	out		843964	0					
ANR	844857	ElseStatement	else		843964	0					
ANR	844858	ExpressionStatement	"eprintf ( ""|ERROR| Usage: ask [query]\\n"" )"	6452:9:185232:185272	843964	0	True				
ANR	844859	CallExpression	"eprintf ( ""|ERROR| Usage: ask [query]\\n"" )"		843964	0					
ANR	844860	Callee	eprintf		843964	0					
ANR	844861	Identifier	eprintf		843964	0					
ANR	844862	ArgumentList	"""|ERROR| Usage: ask [query]\\n"""		843964	1					
ANR	844863	Argument	"""|ERROR| Usage: ask [query]\\n"""		843964	0					
ANR	844864	PrimaryExpression	"""|ERROR| Usage: ask [query]\\n"""		843964	0					
ANR	844865	BreakStatement	break ;	6453:2:185276:185281	843964	33	True				
ANR	844866	Label	default :	6454:1:185284:185291	843964	34	True				
ANR	844867	Identifier	default		843964	0					
ANR	844868	Label	case '?' :	6455:1:185294:185302	843964	35	True				
ANR	844869	ExpressionStatement	"r_core_cmd_help ( core , help_msg_as )"	6456:2:185306:185341	843964	36	True				
ANR	844870	CallExpression	"r_core_cmd_help ( core , help_msg_as )"		843964	0					
ANR	844871	Callee	r_core_cmd_help		843964	0					
ANR	844872	Identifier	r_core_cmd_help		843964	0					
ANR	844873	ArgumentList	core		843964	1					
ANR	844874	Argument	core		843964	0					
ANR	844875	Identifier	core		843964	0					
ANR	844876	Argument	help_msg_as		843964	1					
ANR	844877	Identifier	help_msg_as		843964	0					
ANR	844878	BreakStatement	break ;	6457:2:185345:185350	843964	37	True				
ANR	844879	ReturnType	static void		843964	1					
ANR	844880	Identifier	cmd_anal_syscall		843964	2					
ANR	844881	ParameterList	"RCore * core , const char * input"		843964	3					
ANR	844882	Parameter	RCore * core	6327:29:181905:181915	843964	0	True				
ANR	844883	ParameterType	RCore *		843964	0					
ANR	844884	Identifier	core		843964	1					
ANR	844885	Parameter	const char * input	6327:42:181918:181934	843964	1	True				
ANR	844886	ParameterType	const char *		843964	0					
ANR	844887	Identifier	input		843964	1					
ANR	844888	CFGEntryNode	ENTRY		843964		True				
ANR	844889	CFGExitNode	EXIT		843964		True				
ANR	844890	Symbol	isalpha		843964						
ANR	844891	Symbol	si -> swi		843964						
ANR	844892	Symbol	pj_string		843964						
ANR	844893	Symbol	r_syscall_get		843964						
ANR	844894	Symbol	si -> num		843964						
ANR	844895	Symbol	num		843964						
ANR	844896	Symbol	* input		843964						
ANR	844897	Symbol	* core		843964						
ANR	844898	Symbol	core -> offset		843964						
ANR	844899	Symbol	core -> anal		843964						
ANR	844900	Symbol	out		843964						
ANR	844901	Symbol	r_num_math		843964						
ANR	844902	Symbol	syscallNumber		843964						
ANR	844903	Symbol	si		843964						
ANR	844904	Symbol	core -> anal -> syscall -> db		843964						
ANR	844905	Symbol	help_msg_as		843964						
ANR	844906	Symbol	* * core -> anal		843964						
ANR	844907	Symbol	r_num_get		843964						
ANR	844908	Symbol	sn		843964						
ANR	844909	Symbol	core -> num		843964						
ANR	844910	Symbol	* * core		843964						
ANR	844911	Symbol	* si		843964						
ANR	844912	Symbol	si -> name		843964						
ANR	844913	Symbol	NULL		843964						
ANR	844914	Symbol	iter		843964						
ANR	844915	Symbol	sdb_querys		843964						
ANR	844916	Symbol	r_syscall_get_num		843964						
ANR	844917	Symbol	list		843964						
ANR	844918	Symbol	core -> anal -> syscall		843964						
ANR	844919	Symbol	n		843964						
ANR	844920	Symbol	core		843964						
ANR	844921	Symbol	input		843964						
ANR	844922	Symbol	* * * core		843964						
ANR	844923	Symbol	* core -> anal		843964						
ANR	844924	Symbol	r_syscall_list		843964						
ANR	844925	Symbol	r_str_trim_ro		843964						
ANR	844926	Symbol	* core -> anal -> syscall		843964						
ANR	844927	Symbol	pj		843964						
ANR	844928	Symbol	pj_new		843964						
ANR	844929	Function	anal_axg	6461:0:185358:189416							
ANR	844930	FunctionDef	"anal_axg (RCore * core , const char * input , int level , Sdb * db , int opts , PJ * pj)"		844929	0					
ANR	844931	CompoundStatement		6461:92:185450:189416	844929	0					
ANR	844932	IdentifierDeclStatement	"char arg [ 32 ] , pre [ 128 ] ;"	6462:1:185453:185475	844929	0	True				
ANR	844933	IdentifierDecl	arg [ 32 ]		844929	0					
ANR	844934	IdentifierDeclType	char [ 32 ]		844929	0					
ANR	844935	Identifier	arg		844929	1					
ANR	844936	PrimaryExpression	32		844929	2					
ANR	844937	IdentifierDecl	pre [ 128 ]		844929	1					
ANR	844938	IdentifierDeclType	char [ 128 ]		844929	0					
ANR	844939	Identifier	pre		844929	1					
ANR	844940	PrimaryExpression	128		844929	2					
ANR	844941	IdentifierDeclStatement	RListIter * iter ;	6463:1:185478:185493	844929	1	True				
ANR	844942	IdentifierDecl	* iter		844929	0					
ANR	844943	IdentifierDeclType	RListIter *		844929	0					
ANR	844944	Identifier	iter		844929	1					
ANR	844945	IdentifierDeclStatement	RAnalRef * ref ;	6464:1:185496:185509	844929	2	True				
ANR	844946	IdentifierDecl	* ref		844929	0					
ANR	844947	IdentifierDeclType	RAnalRef *		844929	0					
ANR	844948	Identifier	ref		844929	1					
ANR	844949	IdentifierDeclStatement	ut64 addr = core -> offset ;	6465:1:185512:185536	844929	3	True				
ANR	844950	IdentifierDecl	addr = core -> offset		844929	0					
ANR	844951	IdentifierDeclType	ut64		844929	0					
ANR	844952	Identifier	addr		844929	1					
ANR	844953	AssignmentExpression	addr = core -> offset		844929	2		=			
ANR	844954	Identifier	addr		844929	0					
ANR	844955	PtrMemberAccess	core -> offset		844929	1					
ANR	844956	Identifier	core		844929	0					
ANR	844957	Identifier	offset		844929	1					
ANR	844958	IdentifierDeclStatement	bool is_json = opts & R_CORE_ANAL_JSON ;	6466:1:185539:185577	844929	4	True				
ANR	844959	IdentifierDecl	is_json = opts & R_CORE_ANAL_JSON		844929	0					
ANR	844960	IdentifierDeclType	bool		844929	0					
ANR	844961	Identifier	is_json		844929	1					
ANR	844962	AssignmentExpression	is_json = opts & R_CORE_ANAL_JSON		844929	2		=			
ANR	844963	Identifier	is_json		844929	0					
ANR	844964	BitAndExpression	opts & R_CORE_ANAL_JSON		844929	1		&			
ANR	844965	Identifier	opts		844929	0					
ANR	844966	Identifier	R_CORE_ANAL_JSON		844929	1					
ANR	844967	IdentifierDeclStatement	bool is_r2 = opts & R_CORE_ANAL_GRAPHBODY ;	6467:1:185580:185621	844929	5	True				
ANR	844968	IdentifierDecl	is_r2 = opts & R_CORE_ANAL_GRAPHBODY		844929	0					
ANR	844969	IdentifierDeclType	bool		844929	0					
ANR	844970	Identifier	is_r2		844929	1					
ANR	844971	AssignmentExpression	is_r2 = opts & R_CORE_ANAL_GRAPHBODY		844929	2		=			
ANR	844972	Identifier	is_r2		844929	0					
ANR	844973	BitAndExpression	opts & R_CORE_ANAL_GRAPHBODY		844929	1		&			
ANR	844974	Identifier	opts		844929	0					
ANR	844975	Identifier	R_CORE_ANAL_GRAPHBODY		844929	1					
ANR	844976	IfStatement	if ( is_json && ! pj )		844929	6					
ANR	844977	Condition	is_json && ! pj	6468:5:185628:185641	844929	0	True				
ANR	844978	AndExpression	is_json && ! pj		844929	0		&&			
ANR	844979	Identifier	is_json		844929	0					
ANR	844980	UnaryOperationExpression	! pj		844929	1					
ANR	844981	UnaryOperator	!		844929	0					
ANR	844982	Identifier	pj		844929	1					
ANR	844983	CompoundStatement		8:21:193:193	844929	1					
ANR	844984	ReturnStatement	return ;	6469:2:185648:185654	844929	0	True				
ANR	844985	IfStatement	if ( input && * input )		844929	7					
ANR	844986	Condition	input && * input	6471:5:185664:185678	844929	0	True				
ANR	844987	AndExpression	input && * input		844929	0		&&			
ANR	844988	Identifier	input		844929	0					
ANR	844989	UnaryOperationExpression	* input		844929	1					
ANR	844990	UnaryOperator	*		844929	0					
ANR	844991	Identifier	input		844929	1					
ANR	844992	CompoundStatement		11:22:230:230	844929	1					
ANR	844993	ExpressionStatement	"addr = r_num_math ( core -> num , input )"	6472:2:185685:185721	844929	0	True				
ANR	844994	AssignmentExpression	"addr = r_num_math ( core -> num , input )"		844929	0		=			
ANR	844995	Identifier	addr		844929	0					
ANR	844996	CallExpression	"r_num_math ( core -> num , input )"		844929	1					
ANR	844997	Callee	r_num_math		844929	0					
ANR	844998	Identifier	r_num_math		844929	0					
ANR	844999	ArgumentList	core -> num		844929	1					
ANR	845000	Argument	core -> num		844929	0					
ANR	845001	PtrMemberAccess	core -> num		844929	0					
ANR	845002	Identifier	core		844929	0					
ANR	845003	Identifier	num		844929	1					
ANR	845004	Argument	input		844929	1					
ANR	845005	Identifier	input		844929	0					
ANR	845006	IdentifierDeclStatement	int spaces = ( level + 1 ) * 2 ;	6475:1:185812:185840	844929	8	True				
ANR	845007	IdentifierDecl	spaces = ( level + 1 ) * 2		844929	0					
ANR	845008	IdentifierDeclType	int		844929	0					
ANR	845009	Identifier	spaces		844929	1					
ANR	845010	AssignmentExpression	spaces = ( level + 1 ) * 2		844929	2		=			
ANR	845011	Identifier	spaces		844929	0					
ANR	845012	MultiplicativeExpression	( level + 1 ) * 2		844929	1		*			
ANR	845013	AdditiveExpression	level + 1		844929	0		+			
ANR	845014	Identifier	level		844929	0					
ANR	845015	PrimaryExpression	1		844929	1					
ANR	845016	PrimaryExpression	2		844929	1					
ANR	845017	IfStatement	if ( spaces > sizeof ( pre ) - 4 )		844929	9					
ANR	845018	Condition	spaces > sizeof ( pre ) - 4	6476:5:185847:185871	844929	0	True				
ANR	845019	RelationalExpression	spaces > sizeof ( pre ) - 4		844929	0		>			
ANR	845020	Identifier	spaces		844929	0					
ANR	845021	AdditiveExpression	sizeof ( pre ) - 4		844929	1		-			
ANR	845022	SizeofExpression	sizeof ( pre )		844929	0					
ANR	845023	Sizeof	sizeof		844929	0					
ANR	845024	SizeofOperand	pre		844929	1					
ANR	845025	PrimaryExpression	4		844929	1					
ANR	845026	CompoundStatement		16:32:423:423	844929	1					
ANR	845027	ExpressionStatement	spaces = sizeof ( pre ) - 4	6477:2:185878:185903	844929	0	True				
ANR	845028	AssignmentExpression	spaces = sizeof ( pre ) - 4		844929	0		=			
ANR	845029	Identifier	spaces		844929	0					
ANR	845030	AdditiveExpression	sizeof ( pre ) - 4		844929	1		-			
ANR	845031	SizeofExpression	sizeof ( pre )		844929	0					
ANR	845032	Sizeof	sizeof		844929	0					
ANR	845033	SizeofOperand	pre		844929	1					
ANR	845034	PrimaryExpression	4		844929	1					
ANR	845035	ExpressionStatement	"memset ( pre , ' ' , sizeof ( pre ) )"	6479:1:185909:185940	844929	10	True				
ANR	845036	CallExpression	"memset ( pre , ' ' , sizeof ( pre ) )"		844929	0					
ANR	845037	Callee	memset		844929	0					
ANR	845038	Identifier	memset		844929	0					
ANR	845039	ArgumentList	pre		844929	1					
ANR	845040	Argument	pre		844929	0					
ANR	845041	Identifier	pre		844929	0					
ANR	845042	Argument	' '		844929	1					
ANR	845043	PrimaryExpression	' '		844929	0					
ANR	845044	Argument	sizeof ( pre )		844929	2					
ANR	845045	SizeofExpression	sizeof ( pre )		844929	0					
ANR	845046	Sizeof	sizeof		844929	0					
ANR	845047	SizeofOperand	pre		844929	1					
ANR	845048	ExpressionStatement	"strcpy ( pre + spaces , ""- "" )"	6480:1:185943:185970	844929	11	True				
ANR	845049	CallExpression	"strcpy ( pre + spaces , ""- "" )"		844929	0					
ANR	845050	Callee	strcpy		844929	0					
ANR	845051	Identifier	strcpy		844929	0					
ANR	845052	ArgumentList	pre + spaces		844929	1					
ANR	845053	Argument	pre + spaces		844929	0					
ANR	845054	AdditiveExpression	pre + spaces		844929	0		+			
ANR	845055	Identifier	pre		844929	0					
ANR	845056	Identifier	spaces		844929	1					
ANR	845057	Argument	"""- """		844929	1					
ANR	845058	PrimaryExpression	"""- """		844929	0					
ANR	845059	IdentifierDeclStatement	"RList * xrefs = r_anal_xrefs_get ( core -> anal , addr ) ;"	6482:1:185974:186024	844929	12	True				
ANR	845060	IdentifierDecl	"* xrefs = r_anal_xrefs_get ( core -> anal , addr )"		844929	0					
ANR	845061	IdentifierDeclType	RList *		844929	0					
ANR	845062	Identifier	xrefs		844929	1					
ANR	845063	AssignmentExpression	"* xrefs = r_anal_xrefs_get ( core -> anal , addr )"		844929	2		=			
ANR	845064	Identifier	xrefs		844929	0					
ANR	845065	CallExpression	"r_anal_xrefs_get ( core -> anal , addr )"		844929	1					
ANR	845066	Callee	r_anal_xrefs_get		844929	0					
ANR	845067	Identifier	r_anal_xrefs_get		844929	0					
ANR	845068	ArgumentList	core -> anal		844929	1					
ANR	845069	Argument	core -> anal		844929	0					
ANR	845070	PtrMemberAccess	core -> anal		844929	0					
ANR	845071	Identifier	core		844929	0					
ANR	845072	Identifier	anal		844929	1					
ANR	845073	Argument	addr		844929	1					
ANR	845074	Identifier	addr		844929	0					
ANR	845075	IdentifierDeclStatement	bool open_object = false ;	6483:1:186027:186051	844929	13	True				
ANR	845076	IdentifierDecl	open_object = false		844929	0					
ANR	845077	IdentifierDeclType	bool		844929	0					
ANR	845078	Identifier	open_object		844929	1					
ANR	845079	AssignmentExpression	open_object = false		844929	2		=			
ANR	845080	Identifier	false		844929	0					
ANR	845081	Identifier	false		844929	1					
ANR	845082	IfStatement	if ( ! r_list_empty ( xrefs ) )		844929	14					
ANR	845083	Condition	! r_list_empty ( xrefs )	6484:5:186058:186078	844929	0	True				
ANR	845084	UnaryOperationExpression	! r_list_empty ( xrefs )		844929	0					
ANR	845085	UnaryOperator	!		844929	0					
ANR	845086	CallExpression	r_list_empty ( xrefs )		844929	1					
ANR	845087	Callee	r_list_empty		844929	0					
ANR	845088	Identifier	r_list_empty		844929	0					
ANR	845089	ArgumentList	xrefs		844929	1					
ANR	845090	Argument	xrefs		844929	0					
ANR	845091	Identifier	xrefs		844929	0					
ANR	845092	CompoundStatement		25:2:634:695	844929	1					
ANR	845093	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , addr , - 1 ) ;"	6485:2:186085:186146	844929	0	True				
ANR	845094	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , - 1 )"		844929	0					
ANR	845095	IdentifierDeclType	RAnalFunction *		844929	0					
ANR	845096	Identifier	fcn		844929	1					
ANR	845097	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , - 1 )"		844929	2		=			
ANR	845098	Identifier	fcn		844929	0					
ANR	845099	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , - 1 )"		844929	1					
ANR	845100	Callee	r_anal_get_fcn_in		844929	0					
ANR	845101	Identifier	r_anal_get_fcn_in		844929	0					
ANR	845102	ArgumentList	core -> anal		844929	1					
ANR	845103	Argument	core -> anal		844929	0					
ANR	845104	PtrMemberAccess	core -> anal		844929	0					
ANR	845105	Identifier	core		844929	0					
ANR	845106	Identifier	anal		844929	1					
ANR	845107	Argument	addr		844929	1					
ANR	845108	Identifier	addr		844929	0					
ANR	845109	Argument	- 1		844929	2					
ANR	845110	UnaryOperationExpression	- 1		844929	0					
ANR	845111	UnaryOperator	-		844929	0					
ANR	845112	PrimaryExpression	1		844929	1					
ANR	845113	IfStatement	if ( fcn )		844929	1					
ANR	845114	Condition	fcn	6486:6:186154:186156	844929	0	True				
ANR	845115	Identifier	fcn		844929	0					
ANR	845116	CompoundStatement		26:11:708:708	844929	1					
ANR	845117	IfStatement	if ( is_r2 )		844929	0					
ANR	845118	Condition	is_r2	6487:7:186168:186172	844929	0	True				
ANR	845119	Identifier	is_r2		844929	0					
ANR	845120	CompoundStatement		27:14:724:724	844929	1					
ANR	845121	Statement	r_cons_printf	6488:4:186181:186193	844929	0	True				
ANR	845122	Statement	(	6488:18:186195:186195	844929	1	True				
ANR	845123	Statement	"""agn 0x%08"""	6488:19:186196:186206	844929	2	True				
ANR	845124	Statement	PFMT64x	6488:30:186207:186213	844929	3	True				
ANR	845125	Statement	""" %s\\n"""	6488:37:186214:186220	844929	4	True				
ANR	845126	Statement	","	6488:44:186221:186221	844929	5	True				
ANR	845127	Statement	fcn	6488:46:186223:186225	844929	6	True				
ANR	845128	Statement	->	6488:49:186226:186227	844929	7	True				
ANR	845129	Statement	addr	6488:51:186228:186231	844929	8	True				
ANR	845130	Statement	","	6488:55:186232:186232	844929	9	True				
ANR	845131	Statement	fcn	6488:57:186234:186236	844929	10	True				
ANR	845132	Statement	->	6488:60:186237:186238	844929	11	True				
ANR	845133	Statement	name	6488:62:186239:186242	844929	12	True				
ANR	845134	Statement	)	6488:66:186243:186243	844929	13	True				
ANR	845135	ExpressionStatement		6488:67:186244:186244	844929	14	True				
ANR	845136	ElseStatement	else		844929	0					
ANR	845137	IfStatement	if ( is_json )		844929	0					
ANR	845138	Condition	is_json	6489:14:186260:186266	844929	0	True				
ANR	845139	Identifier	is_json		844929	0					
ANR	845140	CompoundStatement		30:4:824:838	844929	1					
ANR	845141	IdentifierDeclStatement	char taddr [ 64 ] ;	6490:4:186275:186289	844929	0	True				
ANR	845142	IdentifierDecl	taddr [ 64 ]		844929	0					
ANR	845143	IdentifierDeclType	char [ 64 ]		844929	0					
ANR	845144	Identifier	taddr		844929	1					
ANR	845145	PrimaryExpression	64		844929	2					
ANR	845146	ExpressionStatement	pj_o ( pj )	6491:4:186295:186304	844929	1	True				
ANR	845147	CallExpression	pj_o ( pj )		844929	0					
ANR	845148	Callee	pj_o		844929	0					
ANR	845149	Identifier	pj_o		844929	0					
ANR	845150	ArgumentList	pj		844929	1					
ANR	845151	Argument	pj		844929	0					
ANR	845152	Identifier	pj		844929	0					
ANR	845153	ExpressionStatement	"pj_k ( pj , sdb_itoa ( addr , taddr , 10 ) )"	6492:4:186310:186347	844929	2	True				
ANR	845154	CallExpression	"pj_k ( pj , sdb_itoa ( addr , taddr , 10 ) )"		844929	0					
ANR	845155	Callee	pj_k		844929	0					
ANR	845156	Identifier	pj_k		844929	0					
ANR	845157	ArgumentList	pj		844929	1					
ANR	845158	Argument	pj		844929	0					
ANR	845159	Identifier	pj		844929	0					
ANR	845160	Argument	"sdb_itoa ( addr , taddr , 10 )"		844929	1					
ANR	845161	CallExpression	"sdb_itoa ( addr , taddr , 10 )"		844929	0					
ANR	845162	Callee	sdb_itoa		844929	0					
ANR	845163	Identifier	sdb_itoa		844929	0					
ANR	845164	ArgumentList	addr		844929	1					
ANR	845165	Argument	addr		844929	0					
ANR	845166	Identifier	addr		844929	0					
ANR	845167	Argument	taddr		844929	1					
ANR	845168	Identifier	taddr		844929	0					
ANR	845169	Argument	10		844929	2					
ANR	845170	PrimaryExpression	10		844929	0					
ANR	845171	ExpressionStatement	pj_o ( pj )	6493:4:186353:186362	844929	3	True				
ANR	845172	CallExpression	pj_o ( pj )		844929	0					
ANR	845173	Callee	pj_o		844929	0					
ANR	845174	Identifier	pj_o		844929	0					
ANR	845175	ArgumentList	pj		844929	1					
ANR	845176	Argument	pj		844929	0					
ANR	845177	Identifier	pj		844929	0					
ANR	845178	ExpressionStatement	"pj_ks ( pj , ""type"" , ""fcn"" )"	6494:4:186368:186393	844929	4	True				
ANR	845179	CallExpression	"pj_ks ( pj , ""type"" , ""fcn"" )"		844929	0					
ANR	845180	Callee	pj_ks		844929	0					
ANR	845181	Identifier	pj_ks		844929	0					
ANR	845182	ArgumentList	pj		844929	1					
ANR	845183	Argument	pj		844929	0					
ANR	845184	Identifier	pj		844929	0					
ANR	845185	Argument	"""type"""		844929	1					
ANR	845186	PrimaryExpression	"""type"""		844929	0					
ANR	845187	Argument	"""fcn"""		844929	2					
ANR	845188	PrimaryExpression	"""fcn"""		844929	0					
ANR	845189	ExpressionStatement	"pj_kn ( pj , ""fcn_addr"" , fcn -> addr )"	6495:4:186399:186432	844929	5	True				
ANR	845190	CallExpression	"pj_kn ( pj , ""fcn_addr"" , fcn -> addr )"		844929	0					
ANR	845191	Callee	pj_kn		844929	0					
ANR	845192	Identifier	pj_kn		844929	0					
ANR	845193	ArgumentList	pj		844929	1					
ANR	845194	Argument	pj		844929	0					
ANR	845195	Identifier	pj		844929	0					
ANR	845196	Argument	"""fcn_addr"""		844929	1					
ANR	845197	PrimaryExpression	"""fcn_addr"""		844929	0					
ANR	845198	Argument	fcn -> addr		844929	2					
ANR	845199	PtrMemberAccess	fcn -> addr		844929	0					
ANR	845200	Identifier	fcn		844929	0					
ANR	845201	Identifier	addr		844929	1					
ANR	845202	ExpressionStatement	"pj_ks ( pj , ""name"" , fcn -> name )"	6496:4:186438:186467	844929	6	True				
ANR	845203	CallExpression	"pj_ks ( pj , ""name"" , fcn -> name )"		844929	0					
ANR	845204	Callee	pj_ks		844929	0					
ANR	845205	Identifier	pj_ks		844929	0					
ANR	845206	ArgumentList	pj		844929	1					
ANR	845207	Argument	pj		844929	0					
ANR	845208	Identifier	pj		844929	0					
ANR	845209	Argument	"""name"""		844929	1					
ANR	845210	PrimaryExpression	"""name"""		844929	0					
ANR	845211	Argument	fcn -> name		844929	2					
ANR	845212	PtrMemberAccess	fcn -> name		844929	0					
ANR	845213	Identifier	fcn		844929	0					
ANR	845214	Identifier	name		844929	1					
ANR	845215	ExpressionStatement	"pj_k ( pj , ""refs"" )"	6497:4:186473:186490	844929	7	True				
ANR	845216	CallExpression	"pj_k ( pj , ""refs"" )"		844929	0					
ANR	845217	Callee	pj_k		844929	0					
ANR	845218	Identifier	pj_k		844929	0					
ANR	845219	ArgumentList	pj		844929	1					
ANR	845220	Argument	pj		844929	0					
ANR	845221	Identifier	pj		844929	0					
ANR	845222	Argument	"""refs"""		844929	1					
ANR	845223	PrimaryExpression	"""refs"""		844929	0					
ANR	845224	ExpressionStatement	pj_a ( pj )	6498:4:186496:186505	844929	8	True				
ANR	845225	CallExpression	pj_a ( pj )		844929	0					
ANR	845226	Callee	pj_a		844929	0					
ANR	845227	Identifier	pj_a		844929	0					
ANR	845228	ArgumentList	pj		844929	1					
ANR	845229	Argument	pj		844929	0					
ANR	845230	Identifier	pj		844929	0					
ANR	845231	ExpressionStatement	open_object = true	6499:4:186511:186529	844929	9	True				
ANR	845232	AssignmentExpression	open_object = true		844929	0		=			
ANR	845233	Identifier	open_object		844929	0					
ANR	845234	Identifier	true		844929	1					
ANR	845235	ElseStatement	else		844929	0					
ANR	845236	CompoundStatement		40:10:1090:1090	844929	0					
ANR	845237	Statement	r_cons_printf	6502:4:186592:186604	844929	0	True				
ANR	845238	Statement	(	6502:18:186606:186606	844929	1	True				
ANR	845239	Statement	"""%s0x%08"""	6502:19:186607:186615	844929	2	True				
ANR	845240	Statement	PFMT64x	6502:28:186616:186622	844929	3	True				
ANR	845241	Statement	""" fcn 0x%08"""	6502:35:186623:186634	844929	4	True				
ANR	845242	Statement	PFMT64x	6502:47:186635:186641	844929	5	True				
ANR	845243	Statement	""" %s\\n"""	6502:54:186642:186648	844929	6	True				
ANR	845244	Statement	","	6502:61:186649:186649	844929	7	True				
ANR	845245	Statement	pre	6503:5:186656:186658	844929	8	True				
ANR	845246	Statement	+	6503:9:186660:186660	844929	9	True				
ANR	845247	Statement	2	6503:11:186662:186662	844929	10	True				
ANR	845248	Statement	","	6503:12:186663:186663	844929	11	True				
ANR	845249	Statement	addr	6503:14:186665:186668	844929	12	True				
ANR	845250	Statement	","	6503:18:186669:186669	844929	13	True				
ANR	845251	Statement	fcn	6503:20:186671:186673	844929	14	True				
ANR	845252	Statement	->	6503:23:186674:186675	844929	15	True				
ANR	845253	Statement	addr	6503:25:186676:186679	844929	16	True				
ANR	845254	Statement	","	6503:29:186680:186680	844929	17	True				
ANR	845255	Statement	fcn	6503:31:186682:186684	844929	18	True				
ANR	845256	Statement	->	6503:34:186685:186686	844929	19	True				
ANR	845257	Statement	name	6503:36:186687:186690	844929	20	True				
ANR	845258	Statement	)	6503:40:186691:186691	844929	21	True				
ANR	845259	ExpressionStatement		6503:41:186692:186692	844929	22	True				
ANR	845260	ElseStatement	else		844929	0					
ANR	845261	CompoundStatement		46:9:1265:1265	844929	0					
ANR	845262	IfStatement	if ( is_r2 )		844929	0					
ANR	845263	Condition	is_r2	6507:7:186725:186729	844929	0	True				
ANR	845264	Identifier	is_r2		844929	0					
ANR	845265	CompoundStatement		47:14:1281:1281	844929	1					
ANR	845266	Statement	r_cons_printf	6508:4:186738:186750	844929	0	True				
ANR	845267	Statement	(	6508:18:186752:186752	844929	1	True				
ANR	845268	Statement	"""age 0x%08"""	6508:19:186753:186763	844929	2	True				
ANR	845269	Statement	PFMT64x	6508:30:186764:186770	844929	3	True				
ANR	845270	Statement	"""\\n"""	6508:37:186771:186774	844929	4	True				
ANR	845271	Statement	","	6508:41:186775:186775	844929	5	True				
ANR	845272	Statement	addr	6508:43:186777:186780	844929	6	True				
ANR	845273	Statement	)	6508:47:186781:186781	844929	7	True				
ANR	845274	ExpressionStatement		6508:48:186782:186782	844929	8	True				
ANR	845275	ElseStatement	else		844929	0					
ANR	845276	IfStatement	if ( is_json )		844929	0					
ANR	845277	Condition	is_json	6509:14:186798:186804	844929	0	True				
ANR	845278	Identifier	is_json		844929	0					
ANR	845279	CompoundStatement		50:4:1362:1376	844929	1					
ANR	845280	IdentifierDeclStatement	char taddr [ 64 ] ;	6510:4:186813:186827	844929	0	True				
ANR	845281	IdentifierDecl	taddr [ 64 ]		844929	0					
ANR	845282	IdentifierDeclType	char [ 64 ]		844929	0					
ANR	845283	Identifier	taddr		844929	1					
ANR	845284	PrimaryExpression	64		844929	2					
ANR	845285	ExpressionStatement	pj_o ( pj )	6511:4:186833:186842	844929	1	True				
ANR	845286	CallExpression	pj_o ( pj )		844929	0					
ANR	845287	Callee	pj_o		844929	0					
ANR	845288	Identifier	pj_o		844929	0					
ANR	845289	ArgumentList	pj		844929	1					
ANR	845290	Argument	pj		844929	0					
ANR	845291	Identifier	pj		844929	0					
ANR	845292	ExpressionStatement	"pj_k ( pj , sdb_itoa ( addr , taddr , 10 ) )"	6512:4:186848:186885	844929	2	True				
ANR	845293	CallExpression	"pj_k ( pj , sdb_itoa ( addr , taddr , 10 ) )"		844929	0					
ANR	845294	Callee	pj_k		844929	0					
ANR	845295	Identifier	pj_k		844929	0					
ANR	845296	ArgumentList	pj		844929	1					
ANR	845297	Argument	pj		844929	0					
ANR	845298	Identifier	pj		844929	0					
ANR	845299	Argument	"sdb_itoa ( addr , taddr , 10 )"		844929	1					
ANR	845300	CallExpression	"sdb_itoa ( addr , taddr , 10 )"		844929	0					
ANR	845301	Callee	sdb_itoa		844929	0					
ANR	845302	Identifier	sdb_itoa		844929	0					
ANR	845303	ArgumentList	addr		844929	1					
ANR	845304	Argument	addr		844929	0					
ANR	845305	Identifier	addr		844929	0					
ANR	845306	Argument	taddr		844929	1					
ANR	845307	Identifier	taddr		844929	0					
ANR	845308	Argument	10		844929	2					
ANR	845309	PrimaryExpression	10		844929	0					
ANR	845310	ExpressionStatement	pj_o ( pj )	6513:4:186891:186900	844929	3	True				
ANR	845311	CallExpression	pj_o ( pj )		844929	0					
ANR	845312	Callee	pj_o		844929	0					
ANR	845313	Identifier	pj_o		844929	0					
ANR	845314	ArgumentList	pj		844929	1					
ANR	845315	Argument	pj		844929	0					
ANR	845316	Identifier	pj		844929	0					
ANR	845317	ExpressionStatement	"pj_k ( pj , ""refs"" )"	6514:4:186906:186923	844929	4	True				
ANR	845318	CallExpression	"pj_k ( pj , ""refs"" )"		844929	0					
ANR	845319	Callee	pj_k		844929	0					
ANR	845320	Identifier	pj_k		844929	0					
ANR	845321	ArgumentList	pj		844929	1					
ANR	845322	Argument	pj		844929	0					
ANR	845323	Identifier	pj		844929	0					
ANR	845324	Argument	"""refs"""		844929	1					
ANR	845325	PrimaryExpression	"""refs"""		844929	0					
ANR	845326	ExpressionStatement	pj_a ( pj )	6515:4:186929:186938	844929	5	True				
ANR	845327	CallExpression	pj_a ( pj )		844929	0					
ANR	845328	Callee	pj_a		844929	0					
ANR	845329	Identifier	pj_a		844929	0					
ANR	845330	ArgumentList	pj		844929	1					
ANR	845331	Argument	pj		844929	0					
ANR	845332	Identifier	pj		844929	0					
ANR	845333	ExpressionStatement	open_object = true	6516:4:186944:186962	844929	6	True				
ANR	845334	AssignmentExpression	open_object = true		844929	0		=			
ANR	845335	Identifier	open_object		844929	0					
ANR	845336	Identifier	true		844929	1					
ANR	845337	ElseStatement	else		844929	0					
ANR	845338	CompoundStatement		57:10:1523:1523	844929	0					
ANR	845339	Statement	r_cons_printf	6520:4:187075:187087	844929	0	True				
ANR	845340	Statement	(	6520:18:187089:187089	844929	1	True				
ANR	845341	Statement	"""%s0x%08"""	6520:19:187090:187098	844929	2	True				
ANR	845342	Statement	PFMT64x	6520:28:187099:187105	844929	3	True				
ANR	845343	Statement	"""\\n"""	6520:35:187106:187109	844929	4	True				
ANR	845344	Statement	","	6520:39:187110:187110	844929	5	True				
ANR	845345	Statement	pre	6520:41:187112:187114	844929	6	True				
ANR	845346	Statement	+	6520:44:187115:187115	844929	7	True				
ANR	845347	Statement	2	6520:45:187116:187116	844929	8	True				
ANR	845348	Statement	","	6520:46:187117:187117	844929	9	True				
ANR	845349	Statement	addr	6520:48:187119:187122	844929	10	True				
ANR	845350	Statement	)	6520:52:187123:187123	844929	11	True				
ANR	845351	ExpressionStatement		6520:53:187124:187124	844929	12	True				
ANR	845352	Statement	r_list_foreach	6525:1:187146:187159	844929	15	True				
ANR	845353	Statement	(	6525:16:187161:187161	844929	16	True				
ANR	845354	Statement	xrefs	6525:17:187162:187166	844929	17	True				
ANR	845355	Statement	","	6525:22:187167:187167	844929	18	True				
ANR	845356	Statement	iter	6525:24:187169:187172	844929	19	True				
ANR	845357	Statement	","	6525:28:187173:187173	844929	20	True				
ANR	845358	Statement	ref	6525:30:187175:187177	844929	21	True				
ANR	845359	Statement	)	6525:33:187178:187178	844929	22	True				
ANR	845360	CompoundStatement		66:2:1733:1799	844929	23					
ANR	845361	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , ref -> addr , - 1 ) ;"	6526:2:187184:187250	844929	0	True				
ANR	845362	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , ref -> addr , - 1 )"		844929	0					
ANR	845363	IdentifierDeclType	RAnalFunction *		844929	0					
ANR	845364	Identifier	fcn		844929	1					
ANR	845365	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , ref -> addr , - 1 )"		844929	2		=			
ANR	845366	Identifier	fcn		844929	0					
ANR	845367	CallExpression	"r_anal_get_fcn_in ( core -> anal , ref -> addr , - 1 )"		844929	1					
ANR	845368	Callee	r_anal_get_fcn_in		844929	0					
ANR	845369	Identifier	r_anal_get_fcn_in		844929	0					
ANR	845370	ArgumentList	core -> anal		844929	1					
ANR	845371	Argument	core -> anal		844929	0					
ANR	845372	PtrMemberAccess	core -> anal		844929	0					
ANR	845373	Identifier	core		844929	0					
ANR	845374	Identifier	anal		844929	1					
ANR	845375	Argument	ref -> addr		844929	1					
ANR	845376	PtrMemberAccess	ref -> addr		844929	0					
ANR	845377	Identifier	ref		844929	0					
ANR	845378	Identifier	addr		844929	1					
ANR	845379	Argument	- 1		844929	2					
ANR	845380	UnaryOperationExpression	- 1		844929	0					
ANR	845381	UnaryOperator	-		844929	0					
ANR	845382	PrimaryExpression	1		844929	1					
ANR	845383	IfStatement	if ( fcn )		844929	1					
ANR	845384	Condition	fcn	6527:6:187258:187260	844929	0	True				
ANR	845385	Identifier	fcn		844929	0					
ANR	845386	CompoundStatement		67:11:1812:1812	844929	1					
ANR	845387	IfStatement	if ( is_r2 )		844929	0					
ANR	845388	Condition	is_r2	6528:7:187272:187276	844929	0	True				
ANR	845389	Identifier	is_r2		844929	0					
ANR	845390	CompoundStatement		68:14:1828:1828	844929	1					
ANR	845391	Statement	r_cons_printf	6529:4:187285:187297	844929	0	True				
ANR	845392	Statement	(	6529:18:187299:187299	844929	1	True				
ANR	845393	Statement	"""agn 0x%08"""	6529:19:187300:187310	844929	2	True				
ANR	845394	Statement	PFMT64x	6529:30:187311:187317	844929	3	True				
ANR	845395	Statement	""" %s\\n"""	6529:37:187318:187324	844929	4	True				
ANR	845396	Statement	","	6529:44:187325:187325	844929	5	True				
ANR	845397	Statement	fcn	6529:46:187327:187329	844929	6	True				
ANR	845398	Statement	->	6529:49:187330:187331	844929	7	True				
ANR	845399	Statement	addr	6529:51:187332:187335	844929	8	True				
ANR	845400	Statement	","	6529:55:187336:187336	844929	9	True				
ANR	845401	Statement	fcn	6529:57:187338:187340	844929	10	True				
ANR	845402	Statement	->	6529:60:187341:187342	844929	11	True				
ANR	845403	Statement	name	6529:62:187343:187346	844929	12	True				
ANR	845404	Statement	)	6529:66:187347:187347	844929	13	True				
ANR	845405	ExpressionStatement		6529:67:187348:187348	844929	14	True				
ANR	845406	Statement	r_cons_printf	6530:4:187354:187366	844929	15	True				
ANR	845407	Statement	(	6530:18:187368:187368	844929	16	True				
ANR	845408	Statement	"""age 0x%08"""	6530:19:187369:187379	844929	17	True				
ANR	845409	Statement	PFMT64x	6530:30:187380:187386	844929	18	True				
ANR	845410	Statement	""" 0x%08"""	6530:37:187387:187394	844929	19	True				
ANR	845411	Statement	PFMT64x	6530:45:187395:187401	844929	20	True				
ANR	845412	Statement	"""\\n"""	6530:52:187402:187405	844929	21	True				
ANR	845413	Statement	","	6530:56:187406:187406	844929	22	True				
ANR	845414	Statement	fcn	6530:58:187408:187410	844929	23	True				
ANR	845415	Statement	->	6530:61:187411:187412	844929	24	True				
ANR	845416	Statement	addr	6530:63:187413:187416	844929	25	True				
ANR	845417	Statement	","	6530:67:187417:187417	844929	26	True				
ANR	845418	Statement	addr	6530:69:187419:187422	844929	27	True				
ANR	845419	Statement	)	6530:73:187423:187423	844929	28	True				
ANR	845420	ExpressionStatement		6530:74:187424:187424	844929	29	True				
ANR	845421	ElseStatement	else		844929	0					
ANR	845422	IfStatement	if ( is_json )		844929	0					
ANR	845423	Condition	is_json	6531:14:187440:187446	844929	0	True				
ANR	845424	Identifier	is_json		844929	0					
ANR	845425	CompoundStatement		71:23:1998:1998	844929	1					
ANR	845426	IfStatement	if ( level == 0 )		844929	0					
ANR	845427	Condition	level == 0	6532:8:187459:187468	844929	0	True				
ANR	845428	EqualityExpression	level == 0		844929	0		==			
ANR	845429	Identifier	level		844929	0					
ANR	845430	PrimaryExpression	0		844929	1					
ANR	845431	CompoundStatement		73:5:2027:2041	844929	1					
ANR	845432	IdentifierDeclStatement	char taddr [ 64 ] ;	6533:5:187478:187492	844929	0	True				
ANR	845433	IdentifierDecl	taddr [ 64 ]		844929	0					
ANR	845434	IdentifierDeclType	char [ 64 ]		844929	0					
ANR	845435	Identifier	taddr		844929	1					
ANR	845436	PrimaryExpression	64		844929	2					
ANR	845437	ExpressionStatement	pj_o ( pj )	6534:5:187499:187508	844929	1	True				
ANR	845438	CallExpression	pj_o ( pj )		844929	0					
ANR	845439	Callee	pj_o		844929	0					
ANR	845440	Identifier	pj_o		844929	0					
ANR	845441	ArgumentList	pj		844929	1					
ANR	845442	Argument	pj		844929	0					
ANR	845443	Identifier	pj		844929	0					
ANR	845444	ExpressionStatement	"pj_k ( pj , sdb_itoa ( ref -> addr , taddr , 10 ) )"	6535:5:187515:187557	844929	2	True				
ANR	845445	CallExpression	"pj_k ( pj , sdb_itoa ( ref -> addr , taddr , 10 ) )"		844929	0					
ANR	845446	Callee	pj_k		844929	0					
ANR	845447	Identifier	pj_k		844929	0					
ANR	845448	ArgumentList	pj		844929	1					
ANR	845449	Argument	pj		844929	0					
ANR	845450	Identifier	pj		844929	0					
ANR	845451	Argument	"sdb_itoa ( ref -> addr , taddr , 10 )"		844929	1					
ANR	845452	CallExpression	"sdb_itoa ( ref -> addr , taddr , 10 )"		844929	0					
ANR	845453	Callee	sdb_itoa		844929	0					
ANR	845454	Identifier	sdb_itoa		844929	0					
ANR	845455	ArgumentList	ref -> addr		844929	1					
ANR	845456	Argument	ref -> addr		844929	0					
ANR	845457	PtrMemberAccess	ref -> addr		844929	0					
ANR	845458	Identifier	ref		844929	0					
ANR	845459	Identifier	addr		844929	1					
ANR	845460	Argument	taddr		844929	1					
ANR	845461	Identifier	taddr		844929	0					
ANR	845462	Argument	10		844929	2					
ANR	845463	PrimaryExpression	10		844929	0					
ANR	845464	ExpressionStatement	pj_o ( pj )	6536:5:187564:187573	844929	3	True				
ANR	845465	CallExpression	pj_o ( pj )		844929	0					
ANR	845466	Callee	pj_o		844929	0					
ANR	845467	Identifier	pj_o		844929	0					
ANR	845468	ArgumentList	pj		844929	1					
ANR	845469	Argument	pj		844929	0					
ANR	845470	Identifier	pj		844929	0					
ANR	845471	ExpressionStatement	"pj_ks ( pj , ""type"" , ""fcn"" )"	6537:5:187580:187605	844929	4	True				
ANR	845472	CallExpression	"pj_ks ( pj , ""type"" , ""fcn"" )"		844929	0					
ANR	845473	Callee	pj_ks		844929	0					
ANR	845474	Identifier	pj_ks		844929	0					
ANR	845475	ArgumentList	pj		844929	1					
ANR	845476	Argument	pj		844929	0					
ANR	845477	Identifier	pj		844929	0					
ANR	845478	Argument	"""type"""		844929	1					
ANR	845479	PrimaryExpression	"""type"""		844929	0					
ANR	845480	Argument	"""fcn"""		844929	2					
ANR	845481	PrimaryExpression	"""fcn"""		844929	0					
ANR	845482	ExpressionStatement	"pj_kn ( pj , ""fcn_addr"" , fcn -> addr )"	6538:5:187612:187645	844929	5	True				
ANR	845483	CallExpression	"pj_kn ( pj , ""fcn_addr"" , fcn -> addr )"		844929	0					
ANR	845484	Callee	pj_kn		844929	0					
ANR	845485	Identifier	pj_kn		844929	0					
ANR	845486	ArgumentList	pj		844929	1					
ANR	845487	Argument	pj		844929	0					
ANR	845488	Identifier	pj		844929	0					
ANR	845489	Argument	"""fcn_addr"""		844929	1					
ANR	845490	PrimaryExpression	"""fcn_addr"""		844929	0					
ANR	845491	Argument	fcn -> addr		844929	2					
ANR	845492	PtrMemberAccess	fcn -> addr		844929	0					
ANR	845493	Identifier	fcn		844929	0					
ANR	845494	Identifier	addr		844929	1					
ANR	845495	ExpressionStatement	"pj_ks ( pj , ""name"" , fcn -> name )"	6539:5:187652:187681	844929	6	True				
ANR	845496	CallExpression	"pj_ks ( pj , ""name"" , fcn -> name )"		844929	0					
ANR	845497	Callee	pj_ks		844929	0					
ANR	845498	Identifier	pj_ks		844929	0					
ANR	845499	ArgumentList	pj		844929	1					
ANR	845500	Argument	pj		844929	0					
ANR	845501	Identifier	pj		844929	0					
ANR	845502	Argument	"""name"""		844929	1					
ANR	845503	PrimaryExpression	"""name"""		844929	0					
ANR	845504	Argument	fcn -> name		844929	2					
ANR	845505	PtrMemberAccess	fcn -> name		844929	0					
ANR	845506	Identifier	fcn		844929	0					
ANR	845507	Identifier	name		844929	1					
ANR	845508	ExpressionStatement	"pj_k ( pj , ""refs"" )"	6540:5:187688:187705	844929	7	True				
ANR	845509	CallExpression	"pj_k ( pj , ""refs"" )"		844929	0					
ANR	845510	Callee	pj_k		844929	0					
ANR	845511	Identifier	pj_k		844929	0					
ANR	845512	ArgumentList	pj		844929	1					
ANR	845513	Argument	pj		844929	0					
ANR	845514	Identifier	pj		844929	0					
ANR	845515	Argument	"""refs"""		844929	1					
ANR	845516	PrimaryExpression	"""refs"""		844929	0					
ANR	845517	ExpressionStatement	pj_a ( pj )	6541:5:187712:187721	844929	8	True				
ANR	845518	CallExpression	pj_a ( pj )		844929	0					
ANR	845519	Callee	pj_a		844929	0					
ANR	845520	Identifier	pj_a		844929	0					
ANR	845521	ArgumentList	pj		844929	1					
ANR	845522	Argument	pj		844929	0					
ANR	845523	Identifier	pj		844929	0					
ANR	845524	ExpressionStatement	open_object = true	6542:5:187728:187746	844929	9	True				
ANR	845525	AssignmentExpression	open_object = true		844929	0		=			
ANR	845526	Identifier	open_object		844929	0					
ANR	845527	Identifier	true		844929	1					
ANR	845528	ElseStatement	else		844929	0					
ANR	845529	CompoundStatement		84:5:2315:2329	844929	0					
ANR	845530	IdentifierDeclStatement	char taddr [ 64 ] ;	6544:5:187766:187780	844929	0	True				
ANR	845531	IdentifierDecl	taddr [ 64 ]		844929	0					
ANR	845532	IdentifierDeclType	char [ 64 ]		844929	0					
ANR	845533	Identifier	taddr		844929	1					
ANR	845534	PrimaryExpression	64		844929	2					
ANR	845535	ExpressionStatement	pj_end ( pj )	6545:5:187787:187798	844929	1	True				
ANR	845536	CallExpression	pj_end ( pj )		844929	0					
ANR	845537	Callee	pj_end		844929	0					
ANR	845538	Identifier	pj_end		844929	0					
ANR	845539	ArgumentList	pj		844929	1					
ANR	845540	Argument	pj		844929	0					
ANR	845541	Identifier	pj		844929	0					
ANR	845542	ExpressionStatement	pj_end ( pj )	6546:5:187805:187816	844929	2	True				
ANR	845543	CallExpression	pj_end ( pj )		844929	0					
ANR	845544	Callee	pj_end		844929	0					
ANR	845545	Identifier	pj_end		844929	0					
ANR	845546	ArgumentList	pj		844929	1					
ANR	845547	Argument	pj		844929	0					
ANR	845548	Identifier	pj		844929	0					
ANR	845549	ExpressionStatement	pj_end ( pj )	6547:5:187823:187834	844929	3	True				
ANR	845550	CallExpression	pj_end ( pj )		844929	0					
ANR	845551	Callee	pj_end		844929	0					
ANR	845552	Identifier	pj_end		844929	0					
ANR	845553	ArgumentList	pj		844929	1					
ANR	845554	Argument	pj		844929	0					
ANR	845555	Identifier	pj		844929	0					
ANR	845556	ExpressionStatement	pj_o ( pj )	6548:5:187841:187850	844929	4	True				
ANR	845557	CallExpression	pj_o ( pj )		844929	0					
ANR	845558	Callee	pj_o		844929	0					
ANR	845559	Identifier	pj_o		844929	0					
ANR	845560	ArgumentList	pj		844929	1					
ANR	845561	Argument	pj		844929	0					
ANR	845562	Identifier	pj		844929	0					
ANR	845563	ExpressionStatement	"pj_k ( pj , sdb_itoa ( ref -> addr , taddr , 10 ) )"	6549:5:187857:187899	844929	5	True				
ANR	845564	CallExpression	"pj_k ( pj , sdb_itoa ( ref -> addr , taddr , 10 ) )"		844929	0					
ANR	845565	Callee	pj_k		844929	0					
ANR	845566	Identifier	pj_k		844929	0					
ANR	845567	ArgumentList	pj		844929	1					
ANR	845568	Argument	pj		844929	0					
ANR	845569	Identifier	pj		844929	0					
ANR	845570	Argument	"sdb_itoa ( ref -> addr , taddr , 10 )"		844929	1					
ANR	845571	CallExpression	"sdb_itoa ( ref -> addr , taddr , 10 )"		844929	0					
ANR	845572	Callee	sdb_itoa		844929	0					
ANR	845573	Identifier	sdb_itoa		844929	0					
ANR	845574	ArgumentList	ref -> addr		844929	1					
ANR	845575	Argument	ref -> addr		844929	0					
ANR	845576	PtrMemberAccess	ref -> addr		844929	0					
ANR	845577	Identifier	ref		844929	0					
ANR	845578	Identifier	addr		844929	1					
ANR	845579	Argument	taddr		844929	1					
ANR	845580	Identifier	taddr		844929	0					
ANR	845581	Argument	10		844929	2					
ANR	845582	PrimaryExpression	10		844929	0					
ANR	845583	ExpressionStatement	pj_o ( pj )	6550:5:187906:187915	844929	6	True				
ANR	845584	CallExpression	pj_o ( pj )		844929	0					
ANR	845585	Callee	pj_o		844929	0					
ANR	845586	Identifier	pj_o		844929	0					
ANR	845587	ArgumentList	pj		844929	1					
ANR	845588	Argument	pj		844929	0					
ANR	845589	Identifier	pj		844929	0					
ANR	845590	ExpressionStatement	"pj_ks ( pj , ""type"" , ""fcn"" )"	6551:5:187922:187947	844929	7	True				
ANR	845591	CallExpression	"pj_ks ( pj , ""type"" , ""fcn"" )"		844929	0					
ANR	845592	Callee	pj_ks		844929	0					
ANR	845593	Identifier	pj_ks		844929	0					
ANR	845594	ArgumentList	pj		844929	1					
ANR	845595	Argument	pj		844929	0					
ANR	845596	Identifier	pj		844929	0					
ANR	845597	Argument	"""type"""		844929	1					
ANR	845598	PrimaryExpression	"""type"""		844929	0					
ANR	845599	Argument	"""fcn"""		844929	2					
ANR	845600	PrimaryExpression	"""fcn"""		844929	0					
ANR	845601	ExpressionStatement	"pj_kn ( pj , ""fcn_addr"" , fcn -> addr )"	6552:5:187954:187987	844929	8	True				
ANR	845602	CallExpression	"pj_kn ( pj , ""fcn_addr"" , fcn -> addr )"		844929	0					
ANR	845603	Callee	pj_kn		844929	0					
ANR	845604	Identifier	pj_kn		844929	0					
ANR	845605	ArgumentList	pj		844929	1					
ANR	845606	Argument	pj		844929	0					
ANR	845607	Identifier	pj		844929	0					
ANR	845608	Argument	"""fcn_addr"""		844929	1					
ANR	845609	PrimaryExpression	"""fcn_addr"""		844929	0					
ANR	845610	Argument	fcn -> addr		844929	2					
ANR	845611	PtrMemberAccess	fcn -> addr		844929	0					
ANR	845612	Identifier	fcn		844929	0					
ANR	845613	Identifier	addr		844929	1					
ANR	845614	ExpressionStatement	"pj_ks ( pj , ""refs"" , fcn -> name )"	6553:5:187994:188023	844929	9	True				
ANR	845615	CallExpression	"pj_ks ( pj , ""refs"" , fcn -> name )"		844929	0					
ANR	845616	Callee	pj_ks		844929	0					
ANR	845617	Identifier	pj_ks		844929	0					
ANR	845618	ArgumentList	pj		844929	1					
ANR	845619	Argument	pj		844929	0					
ANR	845620	Identifier	pj		844929	0					
ANR	845621	Argument	"""refs"""		844929	1					
ANR	845622	PrimaryExpression	"""refs"""		844929	0					
ANR	845623	Argument	fcn -> name		844929	2					
ANR	845624	PtrMemberAccess	fcn -> name		844929	0					
ANR	845625	Identifier	fcn		844929	0					
ANR	845626	Identifier	name		844929	1					
ANR	845627	ExpressionStatement	"pj_k ( pj , ""refs"" )"	6554:5:188030:188047	844929	10	True				
ANR	845628	CallExpression	"pj_k ( pj , ""refs"" )"		844929	0					
ANR	845629	Callee	pj_k		844929	0					
ANR	845630	Identifier	pj_k		844929	0					
ANR	845631	ArgumentList	pj		844929	1					
ANR	845632	Argument	pj		844929	0					
ANR	845633	Identifier	pj		844929	0					
ANR	845634	Argument	"""refs"""		844929	1					
ANR	845635	PrimaryExpression	"""refs"""		844929	0					
ANR	845636	ExpressionStatement	pj_a ( pj )	6555:5:188054:188063	844929	11	True				
ANR	845637	CallExpression	pj_a ( pj )		844929	0					
ANR	845638	Callee	pj_a		844929	0					
ANR	845639	Identifier	pj_a		844929	0					
ANR	845640	ArgumentList	pj		844929	1					
ANR	845641	Argument	pj		844929	0					
ANR	845642	Identifier	pj		844929	0					
ANR	845643	ElseStatement	else		844929	0					
ANR	845644	CompoundStatement		98:10:2631:2631	844929	0					
ANR	845645	Statement	r_cons_printf	6559:4:188088:188100	844929	0	True				
ANR	845646	Statement	(	6559:18:188102:188102	844929	1	True				
ANR	845647	Statement	"""%s0x%08"""	6559:19:188103:188111	844929	2	True				
ANR	845648	Statement	PFMT64x	6559:28:188112:188118	844929	3	True				
ANR	845649	Statement	""" fcn 0x%08"""	6559:35:188119:188130	844929	4	True				
ANR	845650	Statement	PFMT64x	6559:47:188131:188137	844929	5	True				
ANR	845651	Statement	""" %s\\n"""	6559:54:188138:188144	844929	6	True				
ANR	845652	Statement	","	6559:61:188145:188145	844929	7	True				
ANR	845653	Statement	pre	6559:63:188147:188149	844929	8	True				
ANR	845654	Statement	","	6559:66:188150:188150	844929	9	True				
ANR	845655	Statement	ref	6559:68:188152:188154	844929	10	True				
ANR	845656	Statement	->	6559:71:188155:188156	844929	11	True				
ANR	845657	Statement	addr	6559:73:188157:188160	844929	12	True				
ANR	845658	Statement	","	6559:77:188161:188161	844929	13	True				
ANR	845659	Statement	fcn	6559:79:188163:188165	844929	14	True				
ANR	845660	Statement	->	6559:82:188166:188167	844929	15	True				
ANR	845661	Statement	addr	6559:84:188168:188171	844929	16	True				
ANR	845662	Statement	","	6559:88:188172:188172	844929	17	True				
ANR	845663	Statement	fcn	6559:90:188174:188176	844929	18	True				
ANR	845664	Statement	->	6559:93:188177:188178	844929	19	True				
ANR	845665	Statement	name	6559:95:188179:188182	844929	20	True				
ANR	845666	Statement	)	6559:99:188183:188183	844929	21	True				
ANR	845667	ExpressionStatement		6559:100:188184:188184	844929	22	True				
ANR	845668	IfStatement	"if ( sdb_add ( db , fcn -> name , ""1"" , 0 ) )"		844929	1					
ANR	845669	Condition	"sdb_add ( db , fcn -> name , ""1"" , 0 )"	6561:7:188198:188228	844929	0	True				
ANR	845670	CallExpression	"sdb_add ( db , fcn -> name , ""1"" , 0 )"		844929	0					
ANR	845671	Callee	sdb_add		844929	0					
ANR	845672	Identifier	sdb_add		844929	0					
ANR	845673	ArgumentList	db		844929	1					
ANR	845674	Argument	db		844929	0					
ANR	845675	Identifier	db		844929	0					
ANR	845676	Argument	fcn -> name		844929	1					
ANR	845677	PtrMemberAccess	fcn -> name		844929	0					
ANR	845678	Identifier	fcn		844929	0					
ANR	845679	Identifier	name		844929	1					
ANR	845680	Argument	"""1"""		844929	2					
ANR	845681	PrimaryExpression	"""1"""		844929	0					
ANR	845682	Argument	0		844929	3					
ANR	845683	PrimaryExpression	0		844929	0					
ANR	845684	CompoundStatement		101:40:2780:2780	844929	1					
ANR	845685	Statement	snprintf	6562:4:188237:188244	844929	0	True				
ANR	845686	Statement	(	6562:13:188246:188246	844929	1	True				
ANR	845687	Statement	arg	6562:14:188247:188249	844929	2	True				
ANR	845688	Statement	","	6562:17:188250:188250	844929	3	True				
ANR	845689	Statement	sizeof	6562:19:188252:188257	844929	4	True				
ANR	845690	Statement	(	6562:26:188259:188259	844929	5	True				
ANR	845691	Statement	arg	6562:27:188260:188262	844929	6	True				
ANR	845692	Statement	)	6562:30:188263:188263	844929	7	True				
ANR	845693	Statement	","	6562:31:188264:188264	844929	8	True				
ANR	845694	Statement	"""0x%08"""	6562:33:188266:188272	844929	9	True				
ANR	845695	Statement	PFMT64x	6562:40:188273:188279	844929	10	True				
ANR	845696	Statement	","	6562:47:188280:188280	844929	11	True				
ANR	845697	Statement	fcn	6562:49:188282:188284	844929	12	True				
ANR	845698	Statement	->	6562:52:188285:188286	844929	13	True				
ANR	845699	Statement	addr	6562:54:188287:188290	844929	14	True				
ANR	845700	Statement	)	6562:58:188291:188291	844929	15	True				
ANR	845701	ExpressionStatement		6562:59:188292:188292	844929	16	True				
ANR	845702	ExpressionStatement	"anal_axg ( core , arg , level + 1 , db , opts , pj )"	6563:4:188298:188343	844929	17	True				
ANR	845703	CallExpression	"anal_axg ( core , arg , level + 1 , db , opts , pj )"		844929	0					
ANR	845704	Callee	anal_axg		844929	0					
ANR	845705	Identifier	anal_axg		844929	0					
ANR	845706	ArgumentList	core		844929	1					
ANR	845707	Argument	core		844929	0					
ANR	845708	Identifier	core		844929	0					
ANR	845709	Argument	arg		844929	1					
ANR	845710	Identifier	arg		844929	0					
ANR	845711	Argument	level + 1		844929	2					
ANR	845712	AdditiveExpression	level + 1		844929	0		+			
ANR	845713	Identifier	level		844929	0					
ANR	845714	PrimaryExpression	1		844929	1					
ANR	845715	Argument	db		844929	3					
ANR	845716	Identifier	db		844929	0					
ANR	845717	Argument	opts		844929	4					
ANR	845718	Identifier	opts		844929	0					
ANR	845719	Argument	pj		844929	5					
ANR	845720	Identifier	pj		844929	0					
ANR	845721	ElseStatement	else		844929	0					
ANR	845722	CompoundStatement		104:10:2904:2904	844929	0					
ANR	845723	IfStatement	if ( is_json )		844929	0					
ANR	845724	Condition	is_json	6565:8:188365:188371	844929	0	True				
ANR	845725	Identifier	is_json		844929	0					
ANR	845726	CompoundStatement		105:17:2923:2923	844929	1					
ANR	845727	ExpressionStatement	pj_end ( pj )	6566:5:188381:188392	844929	0	True				
ANR	845728	CallExpression	pj_end ( pj )		844929	0					
ANR	845729	Callee	pj_end		844929	0					
ANR	845730	Identifier	pj_end		844929	0					
ANR	845731	ArgumentList	pj		844929	1					
ANR	845732	Argument	pj		844929	0					
ANR	845733	Identifier	pj		844929	0					
ANR	845734	ExpressionStatement	pj_end ( pj )	6567:5:188399:188410	844929	1	True				
ANR	845735	CallExpression	pj_end ( pj )		844929	0					
ANR	845736	Callee	pj_end		844929	0					
ANR	845737	Identifier	pj_end		844929	0					
ANR	845738	ArgumentList	pj		844929	1					
ANR	845739	Argument	pj		844929	0					
ANR	845740	Identifier	pj		844929	0					
ANR	845741	ExpressionStatement	pj_end ( pj )	6568:5:188417:188428	844929	2	True				
ANR	845742	CallExpression	pj_end ( pj )		844929	0					
ANR	845743	Callee	pj_end		844929	0					
ANR	845744	Identifier	pj_end		844929	0					
ANR	845745	ArgumentList	pj		844929	1					
ANR	845746	Argument	pj		844929	0					
ANR	845747	Identifier	pj		844929	0					
ANR	845748	ExpressionStatement	open_object = false	6569:5:188435:188454	844929	3	True				
ANR	845749	AssignmentExpression	open_object = false		844929	0		=			
ANR	845750	Identifier	open_object		844929	0					
ANR	845751	Identifier	false		844929	1					
ANR	845752	ElseStatement	else		844929	0					
ANR	845753	CompoundStatement		112:9:3025:3025	844929	0					
ANR	845754	IfStatement	if ( is_r2 )		844929	0					
ANR	845755	Condition	is_r2	6573:7:188485:188489	844929	0	True				
ANR	845756	Identifier	is_r2		844929	0					
ANR	845757	CompoundStatement		113:14:3041:3041	844929	1					
ANR	845758	Statement	r_cons_printf	6574:4:188498:188510	844929	0	True				
ANR	845759	Statement	(	6574:18:188512:188512	844929	1	True				
ANR	845760	Statement	"""agn 0x%08"""	6574:19:188513:188523	844929	2	True				
ANR	845761	Statement	PFMT64x	6574:30:188524:188530	844929	3	True				
ANR	845762	Statement	""" ???\\n"""	6574:37:188531:188538	844929	4	True				
ANR	845763	Statement	","	6574:45:188539:188539	844929	5	True				
ANR	845764	Statement	ref	6574:47:188541:188543	844929	6	True				
ANR	845765	Statement	->	6574:50:188544:188545	844929	7	True				
ANR	845766	Statement	addr	6574:52:188546:188549	844929	8	True				
ANR	845767	Statement	)	6574:56:188550:188550	844929	9	True				
ANR	845768	ExpressionStatement		6574:57:188551:188551	844929	10	True				
ANR	845769	Statement	r_cons_printf	6575:4:188557:188569	844929	11	True				
ANR	845770	Statement	(	6575:18:188571:188571	844929	12	True				
ANR	845771	Statement	"""age 0x%08"""	6575:19:188572:188582	844929	13	True				
ANR	845772	Statement	PFMT64x	6575:30:188583:188589	844929	14	True				
ANR	845773	Statement	""" 0x%08"""	6575:37:188590:188597	844929	15	True				
ANR	845774	Statement	PFMT64x	6575:45:188598:188604	844929	16	True				
ANR	845775	Statement	"""\\n"""	6575:52:188605:188608	844929	17	True				
ANR	845776	Statement	","	6575:56:188609:188609	844929	18	True				
ANR	845777	Statement	ref	6575:58:188611:188613	844929	19	True				
ANR	845778	Statement	->	6575:61:188614:188615	844929	20	True				
ANR	845779	Statement	addr	6575:63:188616:188619	844929	21	True				
ANR	845780	Statement	","	6575:67:188620:188620	844929	22	True				
ANR	845781	Statement	addr	6575:69:188622:188625	844929	23	True				
ANR	845782	Statement	)	6575:73:188626:188626	844929	24	True				
ANR	845783	ExpressionStatement		6575:74:188627:188627	844929	25	True				
ANR	845784	ElseStatement	else		844929	0					
ANR	845785	IfStatement	if ( is_json )		844929	0					
ANR	845786	Condition	is_json	6576:14:188643:188649	844929	0	True				
ANR	845787	Identifier	is_json		844929	0					
ANR	845788	CompoundStatement		117:4:3207:3221	844929	1					
ANR	845789	IdentifierDeclStatement	char taddr [ 64 ] ;	6577:4:188658:188672	844929	0	True				
ANR	845790	IdentifierDecl	taddr [ 64 ]		844929	0					
ANR	845791	IdentifierDeclType	char [ 64 ]		844929	0					
ANR	845792	Identifier	taddr		844929	1					
ANR	845793	PrimaryExpression	64		844929	2					
ANR	845794	ExpressionStatement	pj_o ( pj )	6578:4:188678:188687	844929	1	True				
ANR	845795	CallExpression	pj_o ( pj )		844929	0					
ANR	845796	Callee	pj_o		844929	0					
ANR	845797	Identifier	pj_o		844929	0					
ANR	845798	ArgumentList	pj		844929	1					
ANR	845799	Argument	pj		844929	0					
ANR	845800	Identifier	pj		844929	0					
ANR	845801	ExpressionStatement	"pj_k ( pj , sdb_itoa ( ref -> addr , taddr , 10 ) )"	6579:4:188693:188735	844929	2	True				
ANR	845802	CallExpression	"pj_k ( pj , sdb_itoa ( ref -> addr , taddr , 10 ) )"		844929	0					
ANR	845803	Callee	pj_k		844929	0					
ANR	845804	Identifier	pj_k		844929	0					
ANR	845805	ArgumentList	pj		844929	1					
ANR	845806	Argument	pj		844929	0					
ANR	845807	Identifier	pj		844929	0					
ANR	845808	Argument	"sdb_itoa ( ref -> addr , taddr , 10 )"		844929	1					
ANR	845809	CallExpression	"sdb_itoa ( ref -> addr , taddr , 10 )"		844929	0					
ANR	845810	Callee	sdb_itoa		844929	0					
ANR	845811	Identifier	sdb_itoa		844929	0					
ANR	845812	ArgumentList	ref -> addr		844929	1					
ANR	845813	Argument	ref -> addr		844929	0					
ANR	845814	PtrMemberAccess	ref -> addr		844929	0					
ANR	845815	Identifier	ref		844929	0					
ANR	845816	Identifier	addr		844929	1					
ANR	845817	Argument	taddr		844929	1					
ANR	845818	Identifier	taddr		844929	0					
ANR	845819	Argument	10		844929	2					
ANR	845820	PrimaryExpression	10		844929	0					
ANR	845821	ExpressionStatement	pj_o ( pj )	6580:4:188741:188750	844929	3	True				
ANR	845822	CallExpression	pj_o ( pj )		844929	0					
ANR	845823	Callee	pj_o		844929	0					
ANR	845824	Identifier	pj_o		844929	0					
ANR	845825	ArgumentList	pj		844929	1					
ANR	845826	Argument	pj		844929	0					
ANR	845827	Identifier	pj		844929	0					
ANR	845828	ExpressionStatement	"pj_ks ( pj , ""type"" , ""???"" )"	6581:4:188756:188781	844929	4	True				
ANR	845829	CallExpression	"pj_ks ( pj , ""type"" , ""???"" )"		844929	0					
ANR	845830	Callee	pj_ks		844929	0					
ANR	845831	Identifier	pj_ks		844929	0					
ANR	845832	ArgumentList	pj		844929	1					
ANR	845833	Argument	pj		844929	0					
ANR	845834	Identifier	pj		844929	0					
ANR	845835	Argument	"""type"""		844929	1					
ANR	845836	PrimaryExpression	"""type"""		844929	0					
ANR	845837	Argument	"""???"""		844929	2					
ANR	845838	PrimaryExpression	"""???"""		844929	0					
ANR	845839	ExpressionStatement	"pj_k ( pj , ""refs"" )"	6582:4:188787:188804	844929	5	True				
ANR	845840	CallExpression	"pj_k ( pj , ""refs"" )"		844929	0					
ANR	845841	Callee	pj_k		844929	0					
ANR	845842	Identifier	pj_k		844929	0					
ANR	845843	ArgumentList	pj		844929	1					
ANR	845844	Argument	pj		844929	0					
ANR	845845	Identifier	pj		844929	0					
ANR	845846	Argument	"""refs"""		844929	1					
ANR	845847	PrimaryExpression	"""refs"""		844929	0					
ANR	845848	ExpressionStatement	pj_a ( pj )	6583:4:188810:188819	844929	6	True				
ANR	845849	CallExpression	pj_a ( pj )		844929	0					
ANR	845850	Callee	pj_a		844929	0					
ANR	845851	Identifier	pj_a		844929	0					
ANR	845852	ArgumentList	pj		844929	1					
ANR	845853	Argument	pj		844929	0					
ANR	845854	Identifier	pj		844929	0					
ANR	845855	ExpressionStatement	open_object = true	6584:4:188825:188843	844929	7	True				
ANR	845856	AssignmentExpression	open_object = true		844929	0		=			
ANR	845857	Identifier	open_object		844929	0					
ANR	845858	Identifier	true		844929	1					
ANR	845859	ElseStatement	else		844929	0					
ANR	845860	CompoundStatement		125:10:3404:3404	844929	0					
ANR	845861	Statement	r_cons_printf	6586:4:188861:188873	844929	0	True				
ANR	845862	Statement	(	6586:18:188875:188875	844929	1	True				
ANR	845863	Statement	"""%s0x%08"""	6586:19:188876:188884	844929	2	True				
ANR	845864	Statement	PFMT64x	6586:28:188885:188891	844929	3	True				
ANR	845865	Statement	""" ???\\n"""	6586:35:188892:188899	844929	4	True				
ANR	845866	Statement	","	6586:43:188900:188900	844929	5	True				
ANR	845867	Statement	pre	6586:45:188902:188904	844929	6	True				
ANR	845868	Statement	","	6586:48:188905:188905	844929	7	True				
ANR	845869	Statement	ref	6586:50:188907:188909	844929	8	True				
ANR	845870	Statement	->	6586:53:188910:188911	844929	9	True				
ANR	845871	Statement	addr	6586:55:188912:188915	844929	10	True				
ANR	845872	Statement	)	6586:59:188916:188916	844929	11	True				
ANR	845873	ExpressionStatement		6586:60:188917:188917	844929	12	True				
ANR	845874	Statement	snprintf	6588:3:188927:188934	844929	1	True				
ANR	845875	Statement	(	6588:12:188936:188936	844929	2	True				
ANR	845876	Statement	arg	6588:13:188937:188939	844929	3	True				
ANR	845877	Statement	","	6588:16:188940:188940	844929	4	True				
ANR	845878	Statement	sizeof	6588:18:188942:188947	844929	5	True				
ANR	845879	Statement	(	6588:25:188949:188949	844929	6	True				
ANR	845880	Statement	arg	6588:26:188950:188952	844929	7	True				
ANR	845881	Statement	)	6588:29:188953:188953	844929	8	True				
ANR	845882	Statement	","	6588:30:188954:188954	844929	9	True				
ANR	845883	Statement	"""0x%08"""	6588:32:188956:188962	844929	10	True				
ANR	845884	Statement	PFMT64x	6588:39:188963:188969	844929	11	True				
ANR	845885	Statement	","	6588:46:188970:188970	844929	12	True				
ANR	845886	Statement	ref	6588:48:188972:188974	844929	13	True				
ANR	845887	Statement	->	6588:51:188975:188976	844929	14	True				
ANR	845888	Statement	addr	6588:53:188977:188980	844929	15	True				
ANR	845889	Statement	)	6588:57:188981:188981	844929	16	True				
ANR	845890	ExpressionStatement		6588:58:188982:188982	844929	17	True				
ANR	845891	IfStatement	"if ( sdb_add ( db , arg , ""1"" , 0 ) )"		844929	18					
ANR	845892	Condition	"sdb_add ( db , arg , ""1"" , 0 )"	6589:7:188991:189015	844929	0	True				
ANR	845893	CallExpression	"sdb_add ( db , arg , ""1"" , 0 )"		844929	0					
ANR	845894	Callee	sdb_add		844929	0					
ANR	845895	Identifier	sdb_add		844929	0					
ANR	845896	ArgumentList	db		844929	1					
ANR	845897	Argument	db		844929	0					
ANR	845898	Identifier	db		844929	0					
ANR	845899	Argument	arg		844929	1					
ANR	845900	Identifier	arg		844929	0					
ANR	845901	Argument	"""1"""		844929	2					
ANR	845902	PrimaryExpression	"""1"""		844929	0					
ANR	845903	Argument	0		844929	3					
ANR	845904	PrimaryExpression	0		844929	0					
ANR	845905	CompoundStatement		129:34:3567:3567	844929	1					
ANR	845906	ExpressionStatement	"anal_axg ( core , arg , level + 1 , db , opts , pj )"	6590:4:189024:189069	844929	0	True				
ANR	845907	CallExpression	"anal_axg ( core , arg , level + 1 , db , opts , pj )"		844929	0					
ANR	845908	Callee	anal_axg		844929	0					
ANR	845909	Identifier	anal_axg		844929	0					
ANR	845910	ArgumentList	core		844929	1					
ANR	845911	Argument	core		844929	0					
ANR	845912	Identifier	core		844929	0					
ANR	845913	Argument	arg		844929	1					
ANR	845914	Identifier	arg		844929	0					
ANR	845915	Argument	level + 1		844929	2					
ANR	845916	AdditiveExpression	level + 1		844929	0		+			
ANR	845917	Identifier	level		844929	0					
ANR	845918	PrimaryExpression	1		844929	1					
ANR	845919	Argument	db		844929	3					
ANR	845920	Identifier	db		844929	0					
ANR	845921	Argument	opts		844929	4					
ANR	845922	Identifier	opts		844929	0					
ANR	845923	Argument	pj		844929	5					
ANR	845924	Identifier	pj		844929	0					
ANR	845925	ElseStatement	else		844929	0					
ANR	845926	CompoundStatement		131:10:3630:3630	844929	0					
ANR	845927	IfStatement	if ( is_json )		844929	0					
ANR	845928	Condition	is_json	6592:8:189091:189097	844929	0	True				
ANR	845929	Identifier	is_json		844929	0					
ANR	845930	CompoundStatement		132:17:3649:3649	844929	1					
ANR	845931	ExpressionStatement	pj_end ( pj )	6593:5:189107:189118	844929	0	True				
ANR	845932	CallExpression	pj_end ( pj )		844929	0					
ANR	845933	Callee	pj_end		844929	0					
ANR	845934	Identifier	pj_end		844929	0					
ANR	845935	ArgumentList	pj		844929	1					
ANR	845936	Argument	pj		844929	0					
ANR	845937	Identifier	pj		844929	0					
ANR	845938	ExpressionStatement	pj_end ( pj )	6594:5:189125:189136	844929	1	True				
ANR	845939	CallExpression	pj_end ( pj )		844929	0					
ANR	845940	Callee	pj_end		844929	0					
ANR	845941	Identifier	pj_end		844929	0					
ANR	845942	ArgumentList	pj		844929	1					
ANR	845943	Argument	pj		844929	0					
ANR	845944	Identifier	pj		844929	0					
ANR	845945	ExpressionStatement	pj_end ( pj )	6595:5:189143:189154	844929	2	True				
ANR	845946	CallExpression	pj_end ( pj )		844929	0					
ANR	845947	Callee	pj_end		844929	0					
ANR	845948	Identifier	pj_end		844929	0					
ANR	845949	ArgumentList	pj		844929	1					
ANR	845950	Argument	pj		844929	0					
ANR	845951	Identifier	pj		844929	0					
ANR	845952	ExpressionStatement	open_object = false	6596:5:189161:189180	844929	3	True				
ANR	845953	AssignmentExpression	open_object = false		844929	0		=			
ANR	845954	Identifier	open_object		844929	0					
ANR	845955	Identifier	false		844929	1					
ANR	845956	IfStatement	if ( is_json )		844929	24					
ANR	845957	Condition	is_json	6601:5:189205:189211	844929	0	True				
ANR	845958	Identifier	is_json		844929	0					
ANR	845959	CompoundStatement		141:14:3763:3763	844929	1					
ANR	845960	IfStatement	if ( open_object )		844929	0					
ANR	845961	Condition	open_object	6602:6:189222:189232	844929	0	True				
ANR	845962	Identifier	open_object		844929	0					
ANR	845963	CompoundStatement		142:19:3784:3784	844929	1					
ANR	845964	ExpressionStatement	pj_end ( pj )	6603:3:189240:189251	844929	0	True				
ANR	845965	CallExpression	pj_end ( pj )		844929	0					
ANR	845966	Callee	pj_end		844929	0					
ANR	845967	Identifier	pj_end		844929	0					
ANR	845968	ArgumentList	pj		844929	1					
ANR	845969	Argument	pj		844929	0					
ANR	845970	Identifier	pj		844929	0					
ANR	845971	ExpressionStatement	pj_end ( pj )	6604:3:189256:189267	844929	1	True				
ANR	845972	CallExpression	pj_end ( pj )		844929	0					
ANR	845973	Callee	pj_end		844929	0					
ANR	845974	Identifier	pj_end		844929	0					
ANR	845975	ArgumentList	pj		844929	1					
ANR	845976	Argument	pj		844929	0					
ANR	845977	Identifier	pj		844929	0					
ANR	845978	ExpressionStatement	pj_end ( pj )	6605:3:189272:189283	844929	2	True				
ANR	845979	CallExpression	pj_end ( pj )		844929	0					
ANR	845980	Callee	pj_end		844929	0					
ANR	845981	Identifier	pj_end		844929	0					
ANR	845982	ArgumentList	pj		844929	1					
ANR	845983	Argument	pj		844929	0					
ANR	845984	Identifier	pj		844929	0					
ANR	845985	IfStatement	if ( level == 0 )		844929	1					
ANR	845986	Condition	level == 0	6607:6:189295:189304	844929	0	True				
ANR	845987	EqualityExpression	level == 0		844929	0		==			
ANR	845988	Identifier	level		844929	0					
ANR	845989	PrimaryExpression	0		844929	1					
ANR	845990	CompoundStatement		147:18:3856:3856	844929	1					
ANR	845991	IfStatement	if ( open_object )		844929	0					
ANR	845992	Condition	open_object	6608:7:189316:189326	844929	0	True				
ANR	845993	Identifier	open_object		844929	0					
ANR	845994	CompoundStatement		148:20:3878:3878	844929	1					
ANR	845995	ExpressionStatement	pj_end ( pj )	6609:4:189335:189346	844929	0	True				
ANR	845996	CallExpression	pj_end ( pj )		844929	0					
ANR	845997	Callee	pj_end		844929	0					
ANR	845998	Identifier	pj_end		844929	0					
ANR	845999	ArgumentList	pj		844929	1					
ANR	846000	Argument	pj		844929	0					
ANR	846001	Identifier	pj		844929	0					
ANR	846002	ExpressionStatement	pj_end ( pj )	6610:4:189352:189363	844929	1	True				
ANR	846003	CallExpression	pj_end ( pj )		844929	0					
ANR	846004	Callee	pj_end		844929	0					
ANR	846005	Identifier	pj_end		844929	0					
ANR	846006	ArgumentList	pj		844929	1					
ANR	846007	Argument	pj		844929	0					
ANR	846008	Identifier	pj		844929	0					
ANR	846009	ExpressionStatement	pj_end ( pj )	6611:4:189369:189380	844929	2	True				
ANR	846010	CallExpression	pj_end ( pj )		844929	0					
ANR	846011	Callee	pj_end		844929	0					
ANR	846012	Identifier	pj_end		844929	0					
ANR	846013	ArgumentList	pj		844929	1					
ANR	846014	Argument	pj		844929	0					
ANR	846015	Identifier	pj		844929	0					
ANR	846016	ExpressionStatement	r_list_free ( xrefs )	6615:1:189395:189414	844929	25	True				
ANR	846017	CallExpression	r_list_free ( xrefs )		844929	0					
ANR	846018	Callee	r_list_free		844929	0					
ANR	846019	Identifier	r_list_free		844929	0					
ANR	846020	ArgumentList	xrefs		844929	1					
ANR	846021	Argument	xrefs		844929	0					
ANR	846022	Identifier	xrefs		844929	0					
ANR	846023	ReturnType	static void		844929	1					
ANR	846024	Identifier	anal_axg		844929	2					
ANR	846025	ParameterList	"RCore * core , const char * input , int level , Sdb * db , int opts , PJ * pj"		844929	3					
ANR	846026	Parameter	RCore * core	6461:22:185380:185390	844929	0	True				
ANR	846027	ParameterType	RCore *		844929	0					
ANR	846028	Identifier	core		844929	1					
ANR	846029	Parameter	const char * input	6461:35:185393:185409	844929	1	True				
ANR	846030	ParameterType	const char *		844929	0					
ANR	846031	Identifier	input		844929	1					
ANR	846032	Parameter	int level	6461:54:185412:185420	844929	2	True				
ANR	846033	ParameterType	int		844929	0					
ANR	846034	Identifier	level		844929	1					
ANR	846035	Parameter	Sdb * db	6461:65:185423:185429	844929	3	True				
ANR	846036	ParameterType	Sdb *		844929	0					
ANR	846037	Identifier	db		844929	1					
ANR	846038	Parameter	int opts	6461:74:185432:185439	844929	4	True				
ANR	846039	ParameterType	int		844929	0					
ANR	846040	Identifier	opts		844929	1					
ANR	846041	Parameter	PJ * pj	6461:84:185442:185447	844929	5	True				
ANR	846042	ParameterType	PJ *		844929	0					
ANR	846043	Identifier	pj		844929	1					
ANR	846044	CFGEntryNode	ENTRY		844929		True				
ANR	846045	CFGExitNode	EXIT		844929		True				
ANR	846046	Symbol	ref -> addr		844929						
ANR	846047	Symbol	* fcn		844929						
ANR	846048	Symbol	is_json		844929						
ANR	846049	Symbol	fcn -> name		844929						
ANR	846050	Symbol	* core		844929						
ANR	846051	Symbol	is_r2		844929						
ANR	846052	Symbol	* input		844929						
ANR	846053	Symbol	core -> offset		844929						
ANR	846054	Symbol	core -> anal		844929						
ANR	846055	Symbol	r_num_math		844929						
ANR	846056	Symbol	fcn		844929						
ANR	846057	Symbol	ref		844929						
ANR	846058	Symbol	opts		844929						
ANR	846059	Symbol	arg		844929						
ANR	846060	Symbol	r_anal_xrefs_get		844929						
ANR	846061	Symbol	addr		844929						
ANR	846062	Symbol	core -> num		844929						
ANR	846063	Symbol	pre		844929						
ANR	846064	Symbol	level		844929						
ANR	846065	Symbol	xrefs		844929						
ANR	846066	Symbol	false		844929						
ANR	846067	Symbol	open_object		844929						
ANR	846068	Symbol	iter		844929						
ANR	846069	Symbol	R_CORE_ANAL_GRAPHBODY		844929						
ANR	846070	Symbol	core		844929						
ANR	846071	Symbol	input		844929						
ANR	846072	Symbol	sdb_add		844929						
ANR	846073	Symbol	r_anal_get_fcn_in		844929						
ANR	846074	Symbol	taddr		844929						
ANR	846075	Symbol	sdb_itoa		844929						
ANR	846076	Symbol	R_CORE_ANAL_JSON		844929						
ANR	846077	Symbol	spaces		844929						
ANR	846078	Symbol	true		844929						
ANR	846079	Symbol	r_list_empty		844929						
ANR	846080	Symbol	fcn -> addr		844929						
ANR	846081	Symbol	pj		844929						
ANR	846082	Symbol	* ref		844929						
ANR	846083	Symbol	db		844929						
ANR	846084	Function	cmd_anal_ucall_ref	6618:0:189419:189665							
ANR	846085	FunctionDef	"cmd_anal_ucall_ref (RCore * core , ut64 addr)"		846084	0					
ANR	846086	CompoundStatement		6618:56:189475:189665	846084	0					
ANR	846087	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_at ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL ) ;"	6619:1:189478:189558	846084	0	True				
ANR	846088	IdentifierDecl	"* fcn = r_anal_get_fcn_at ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		846084	0					
ANR	846089	IdentifierDeclType	RAnalFunction *		846084	0					
ANR	846090	Identifier	fcn		846084	1					
ANR	846091	AssignmentExpression	"* fcn = r_anal_get_fcn_at ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		846084	2		=			
ANR	846092	Identifier	fcn		846084	0					
ANR	846093	CallExpression	"r_anal_get_fcn_at ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		846084	1					
ANR	846094	Callee	r_anal_get_fcn_at		846084	0					
ANR	846095	Identifier	r_anal_get_fcn_at		846084	0					
ANR	846096	ArgumentList	core -> anal		846084	1					
ANR	846097	Argument	core -> anal		846084	0					
ANR	846098	PtrMemberAccess	core -> anal		846084	0					
ANR	846099	Identifier	core		846084	0					
ANR	846100	Identifier	anal		846084	1					
ANR	846101	Argument	addr		846084	1					
ANR	846102	Identifier	addr		846084	0					
ANR	846103	Argument	R_ANAL_FCN_TYPE_NULL		846084	2					
ANR	846104	Identifier	R_ANAL_FCN_TYPE_NULL		846084	0					
ANR	846105	IfStatement	if ( fcn )		846084	1					
ANR	846106	Condition	fcn	6620:5:189565:189567	846084	0	True				
ANR	846107	Identifier	fcn		846084	0					
ANR	846108	CompoundStatement		3:10:94:94	846084	1					
ANR	846109	ExpressionStatement	"r_cons_printf ( "" ; %s"" , fcn -> name )"	6621:2:189574:189608	846084	0	True				
ANR	846110	CallExpression	"r_cons_printf ( "" ; %s"" , fcn -> name )"		846084	0					
ANR	846111	Callee	r_cons_printf		846084	0					
ANR	846112	Identifier	r_cons_printf		846084	0					
ANR	846113	ArgumentList	""" ; %s"""		846084	1					
ANR	846114	Argument	""" ; %s"""		846084	0					
ANR	846115	PrimaryExpression	""" ; %s"""		846084	0					
ANR	846116	Argument	fcn -> name		846084	1					
ANR	846117	PtrMemberAccess	fcn -> name		846084	0					
ANR	846118	Identifier	fcn		846084	0					
ANR	846119	Identifier	name		846084	1					
ANR	846120	ElseStatement	else		846084	0					
ANR	846121	CompoundStatement		5:8:142:142	846084	0					
ANR	846122	Statement	r_cons_printf	6623:2:189622:189634	846084	0	True				
ANR	846123	Statement	(	6623:16:189636:189636	846084	1	True				
ANR	846124	Statement	""" ; 0x%"""	6623:17:189637:189644	846084	2	True				
ANR	846125	Statement	PFMT64x	6623:26:189646:189652	846084	3	True				
ANR	846126	Statement	","	6623:33:189653:189653	846084	4	True				
ANR	846127	Statement	addr	6623:35:189655:189658	846084	5	True				
ANR	846128	Statement	)	6623:39:189659:189659	846084	6	True				
ANR	846129	ExpressionStatement		6623:40:189660:189660	846084	7	True				
ANR	846130	ReturnType	static void		846084	1					
ANR	846131	Identifier	cmd_anal_ucall_ref		846084	2					
ANR	846132	ParameterList	"RCore * core , ut64 addr"		846084	3					
ANR	846133	Parameter	RCore * core	6618:32:189451:189461	846084	0	True				
ANR	846134	ParameterType	RCore *		846084	0					
ANR	846135	Identifier	core		846084	1					
ANR	846136	Parameter	ut64 addr	6618:45:189464:189472	846084	1	True				
ANR	846137	ParameterType	ut64		846084	0					
ANR	846138	Identifier	addr		846084	1					
ANR	846139	CFGEntryNode	ENTRY		846084		True				
ANR	846140	CFGExitNode	EXIT		846084		True				
ANR	846141	Symbol	fcn		846084						
ANR	846142	Symbol	core		846084						
ANR	846143	Symbol	r_anal_get_fcn_at		846084						
ANR	846144	Symbol	R_ANAL_FCN_TYPE_NULL		846084						
ANR	846145	Symbol	* fcn		846084						
ANR	846146	Symbol	fcn -> name		846084						
ANR	846147	Symbol	* core		846084						
ANR	846148	Symbol	addr		846084						
ANR	846149	Symbol	core -> anal		846084						
ANR	846150	Function	get_buf_asm	6627:0:189668:191118							
ANR	846151	FunctionDef	"get_buf_asm (RCore * core , ut64 from , ut64 addr , RAnalFunction * fcn , bool color)"		846150	0					
ANR	846152	CompoundStatement		6627:92:189760:191118	846150	0					
ANR	846153	IdentifierDeclStatement	int has_color = core -> print -> flags & R_PRINT_FLAGS_COLOR ;	6628:1:189763:189819	846150	0	True				
ANR	846154	IdentifierDecl	has_color = core -> print -> flags & R_PRINT_FLAGS_COLOR		846150	0					
ANR	846155	IdentifierDeclType	int		846150	0					
ANR	846156	Identifier	has_color		846150	1					
ANR	846157	AssignmentExpression	has_color = core -> print -> flags & R_PRINT_FLAGS_COLOR		846150	2		=			
ANR	846158	Identifier	has_color		846150	0					
ANR	846159	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_COLOR		846150	1		&			
ANR	846160	PtrMemberAccess	core -> print -> flags		846150	0					
ANR	846161	PtrMemberAccess	core -> print		846150	0					
ANR	846162	Identifier	core		846150	0					
ANR	846163	Identifier	print		846150	1					
ANR	846164	Identifier	flags		846150	1					
ANR	846165	Identifier	R_PRINT_FLAGS_COLOR		846150	1					
ANR	846166	IdentifierDeclStatement	char str [ 512 ] ;	6629:1:189822:189835	846150	1	True				
ANR	846167	IdentifierDecl	str [ 512 ]		846150	0					
ANR	846168	IdentifierDeclType	char [ 512 ]		846150	0					
ANR	846169	Identifier	str		846150	1					
ANR	846170	PrimaryExpression	512		846150	2					
ANR	846171	IdentifierDeclStatement	const int size = 12 ;	6630:1:189838:189857	846150	2	True				
ANR	846172	IdentifierDecl	size = 12		846150	0					
ANR	846173	IdentifierDeclType	const int		846150	0					
ANR	846174	Identifier	size		846150	1					
ANR	846175	AssignmentExpression	size = 12		846150	2		=			
ANR	846176	Identifier	size		846150	0					
ANR	846177	PrimaryExpression	12		846150	1					
ANR	846178	IdentifierDeclStatement	ut8 buf [ 12 ] ;	6631:1:189860:189871	846150	3	True				
ANR	846179	IdentifierDecl	buf [ 12 ]		846150	0					
ANR	846180	IdentifierDeclType	ut8 [ 12 ]		846150	0					
ANR	846181	Identifier	buf		846150	1					
ANR	846182	PrimaryExpression	12		846150	2					
ANR	846183	IdentifierDeclStatement	RAsmOp asmop = { 0 } ;	6632:1:189874:189892	846150	4	True				
ANR	846184	IdentifierDecl	asmop = { 0 }		846150	0					
ANR	846185	IdentifierDeclType	RAsmOp		846150	0					
ANR	846186	Identifier	asmop		846150	1					
ANR	846187	AssignmentExpression	asmop = { 0 }		846150	2		=			
ANR	846188	Identifier	asmop		846150	0					
ANR	846189	InitializerList	0		846150	1					
ANR	846190	PrimaryExpression	0		846150	0					
ANR	846191	IdentifierDeclStatement	char * buf_asm = NULL ;	6633:1:189895:189915	846150	5	True				
ANR	846192	IdentifierDecl	* buf_asm = NULL		846150	0					
ANR	846193	IdentifierDeclType	char *		846150	0					
ANR	846194	Identifier	buf_asm		846150	1					
ANR	846195	AssignmentExpression	* buf_asm = NULL		846150	2		=			
ANR	846196	Identifier	NULL		846150	0					
ANR	846197	Identifier	NULL		846150	1					
ANR	846198	IdentifierDeclStatement	"bool asm_varsub = r_config_get_i ( core -> config , ""asm.var.sub"" ) ;"	6634:1:189918:189980	846150	6	True				
ANR	846199	IdentifierDecl	"asm_varsub = r_config_get_i ( core -> config , ""asm.var.sub"" )"		846150	0					
ANR	846200	IdentifierDeclType	bool		846150	0					
ANR	846201	Identifier	asm_varsub		846150	1					
ANR	846202	AssignmentExpression	"asm_varsub = r_config_get_i ( core -> config , ""asm.var.sub"" )"		846150	2		=			
ANR	846203	Identifier	asm_varsub		846150	0					
ANR	846204	CallExpression	"r_config_get_i ( core -> config , ""asm.var.sub"" )"		846150	1					
ANR	846205	Callee	r_config_get_i		846150	0					
ANR	846206	Identifier	r_config_get_i		846150	0					
ANR	846207	ArgumentList	core -> config		846150	1					
ANR	846208	Argument	core -> config		846150	0					
ANR	846209	PtrMemberAccess	core -> config		846150	0					
ANR	846210	Identifier	core		846150	0					
ANR	846211	Identifier	config		846150	1					
ANR	846212	Argument	"""asm.var.sub"""		846150	1					
ANR	846213	PrimaryExpression	"""asm.var.sub"""		846150	0					
ANR	846214	ExpressionStatement	"core -> parser -> pseudo = r_config_get_i ( core -> config , ""asm.pseudo"" )"	6635:1:189983:190049	846150	7	True				
ANR	846215	AssignmentExpression	"core -> parser -> pseudo = r_config_get_i ( core -> config , ""asm.pseudo"" )"		846150	0		=			
ANR	846216	PtrMemberAccess	core -> parser -> pseudo		846150	0					
ANR	846217	PtrMemberAccess	core -> parser		846150	0					
ANR	846218	Identifier	core		846150	0					
ANR	846219	Identifier	parser		846150	1					
ANR	846220	Identifier	pseudo		846150	1					
ANR	846221	CallExpression	"r_config_get_i ( core -> config , ""asm.pseudo"" )"		846150	1					
ANR	846222	Callee	r_config_get_i		846150	0					
ANR	846223	Identifier	r_config_get_i		846150	0					
ANR	846224	ArgumentList	core -> config		846150	1					
ANR	846225	Argument	core -> config		846150	0					
ANR	846226	PtrMemberAccess	core -> config		846150	0					
ANR	846227	Identifier	core		846150	0					
ANR	846228	Identifier	config		846150	1					
ANR	846229	Argument	"""asm.pseudo"""		846150	1					
ANR	846230	PrimaryExpression	"""asm.pseudo"""		846150	0					
ANR	846231	ExpressionStatement	"core -> parser -> relsub = r_config_get_i ( core -> config , ""asm.relsub"" )"	6636:1:190052:190118	846150	8	True				
ANR	846232	AssignmentExpression	"core -> parser -> relsub = r_config_get_i ( core -> config , ""asm.relsub"" )"		846150	0		=			
ANR	846233	PtrMemberAccess	core -> parser -> relsub		846150	0					
ANR	846234	PtrMemberAccess	core -> parser		846150	0					
ANR	846235	Identifier	core		846150	0					
ANR	846236	Identifier	parser		846150	1					
ANR	846237	Identifier	relsub		846150	1					
ANR	846238	CallExpression	"r_config_get_i ( core -> config , ""asm.relsub"" )"		846150	1					
ANR	846239	Callee	r_config_get_i		846150	0					
ANR	846240	Identifier	r_config_get_i		846150	0					
ANR	846241	ArgumentList	core -> config		846150	1					
ANR	846242	Argument	core -> config		846150	0					
ANR	846243	PtrMemberAccess	core -> config		846150	0					
ANR	846244	Identifier	core		846150	0					
ANR	846245	Identifier	config		846150	1					
ANR	846246	Argument	"""asm.relsub"""		846150	1					
ANR	846247	PrimaryExpression	"""asm.relsub"""		846150	0					
ANR	846248	ExpressionStatement	"core -> parser -> localvar_only = r_config_get_i ( core -> config , ""asm.var.subonly"" )"	6637:1:190121:190199	846150	9	True				
ANR	846249	AssignmentExpression	"core -> parser -> localvar_only = r_config_get_i ( core -> config , ""asm.var.subonly"" )"		846150	0		=			
ANR	846250	PtrMemberAccess	core -> parser -> localvar_only		846150	0					
ANR	846251	PtrMemberAccess	core -> parser		846150	0					
ANR	846252	Identifier	core		846150	0					
ANR	846253	Identifier	parser		846150	1					
ANR	846254	Identifier	localvar_only		846150	1					
ANR	846255	CallExpression	"r_config_get_i ( core -> config , ""asm.var.subonly"" )"		846150	1					
ANR	846256	Callee	r_config_get_i		846150	0					
ANR	846257	Identifier	r_config_get_i		846150	0					
ANR	846258	ArgumentList	core -> config		846150	1					
ANR	846259	Argument	core -> config		846150	0					
ANR	846260	PtrMemberAccess	core -> config		846150	0					
ANR	846261	Identifier	core		846150	0					
ANR	846262	Identifier	config		846150	1					
ANR	846263	Argument	"""asm.var.subonly"""		846150	1					
ANR	846264	PrimaryExpression	"""asm.var.subonly"""		846150	0					
ANR	846265	IfStatement	if ( core -> parser -> relsub )		846150	10					
ANR	846266	Condition	core -> parser -> relsub	6639:5:190207:190226	846150	0	True				
ANR	846267	PtrMemberAccess	core -> parser -> relsub		846150	0					
ANR	846268	PtrMemberAccess	core -> parser		846150	0					
ANR	846269	Identifier	core		846150	0					
ANR	846270	Identifier	parser		846150	1					
ANR	846271	Identifier	relsub		846150	1					
ANR	846272	CompoundStatement		13:27:468:468	846150	1					
ANR	846273	ExpressionStatement	core -> parser -> relsub_addr = from	6640:2:190233:190265	846150	0	True				
ANR	846274	AssignmentExpression	core -> parser -> relsub_addr = from		846150	0		=			
ANR	846275	PtrMemberAccess	core -> parser -> relsub_addr		846150	0					
ANR	846276	PtrMemberAccess	core -> parser		846150	0					
ANR	846277	Identifier	core		846150	0					
ANR	846278	Identifier	parser		846150	1					
ANR	846279	Identifier	relsub_addr		846150	1					
ANR	846280	Identifier	from		846150	1					
ANR	846281	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , size )"	6642:1:190271:190311	846150	11	True				
ANR	846282	CallExpression	"r_io_read_at ( core -> io , addr , buf , size )"		846150	0					
ANR	846283	Callee	r_io_read_at		846150	0					
ANR	846284	Identifier	r_io_read_at		846150	0					
ANR	846285	ArgumentList	core -> io		846150	1					
ANR	846286	Argument	core -> io		846150	0					
ANR	846287	PtrMemberAccess	core -> io		846150	0					
ANR	846288	Identifier	core		846150	0					
ANR	846289	Identifier	io		846150	1					
ANR	846290	Argument	addr		846150	1					
ANR	846291	Identifier	addr		846150	0					
ANR	846292	Argument	buf		846150	2					
ANR	846293	Identifier	buf		846150	0					
ANR	846294	Argument	size		846150	3					
ANR	846295	Identifier	size		846150	0					
ANR	846296	ExpressionStatement	"r_asm_set_pc ( core -> assembler , addr )"	6643:1:190314:190350	846150	12	True				
ANR	846297	CallExpression	"r_asm_set_pc ( core -> assembler , addr )"		846150	0					
ANR	846298	Callee	r_asm_set_pc		846150	0					
ANR	846299	Identifier	r_asm_set_pc		846150	0					
ANR	846300	ArgumentList	core -> assembler		846150	1					
ANR	846301	Argument	core -> assembler		846150	0					
ANR	846302	PtrMemberAccess	core -> assembler		846150	0					
ANR	846303	Identifier	core		846150	0					
ANR	846304	Identifier	assembler		846150	1					
ANR	846305	Argument	addr		846150	1					
ANR	846306	Identifier	addr		846150	0					
ANR	846307	ExpressionStatement	"r_asm_disassemble ( core -> assembler , & asmop , buf , size )"	6644:1:190353:190407	846150	13	True				
ANR	846308	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf , size )"		846150	0					
ANR	846309	Callee	r_asm_disassemble		846150	0					
ANR	846310	Identifier	r_asm_disassemble		846150	0					
ANR	846311	ArgumentList	core -> assembler		846150	1					
ANR	846312	Argument	core -> assembler		846150	0					
ANR	846313	PtrMemberAccess	core -> assembler		846150	0					
ANR	846314	Identifier	core		846150	0					
ANR	846315	Identifier	assembler		846150	1					
ANR	846316	Argument	& asmop		846150	1					
ANR	846317	UnaryOperationExpression	& asmop		846150	0					
ANR	846318	UnaryOperator	&		846150	0					
ANR	846319	Identifier	asmop		846150	1					
ANR	846320	Argument	buf		846150	2					
ANR	846321	Identifier	buf		846150	0					
ANR	846322	Argument	size		846150	3					
ANR	846323	Identifier	size		846150	0					
ANR	846324	IdentifierDeclStatement	int ba_len = r_strbuf_length ( & asmop . buf_asm ) + 128 ;	6645:1:190410:190461	846150	14	True				
ANR	846325	IdentifierDecl	ba_len = r_strbuf_length ( & asmop . buf_asm ) + 128		846150	0					
ANR	846326	IdentifierDeclType	int		846150	0					
ANR	846327	Identifier	ba_len		846150	1					
ANR	846328	AssignmentExpression	ba_len = r_strbuf_length ( & asmop . buf_asm ) + 128		846150	2		=			
ANR	846329	Identifier	ba_len		846150	0					
ANR	846330	AdditiveExpression	r_strbuf_length ( & asmop . buf_asm ) + 128		846150	1		+			
ANR	846331	CallExpression	r_strbuf_length ( & asmop . buf_asm )		846150	0					
ANR	846332	Callee	r_strbuf_length		846150	0					
ANR	846333	Identifier	r_strbuf_length		846150	0					
ANR	846334	ArgumentList	& asmop . buf_asm		846150	1					
ANR	846335	Argument	& asmop . buf_asm		846150	0					
ANR	846336	UnaryOperationExpression	& asmop . buf_asm		846150	0					
ANR	846337	UnaryOperator	&		846150	0					
ANR	846338	MemberAccess	asmop . buf_asm		846150	1					
ANR	846339	Identifier	asmop		846150	0					
ANR	846340	Identifier	buf_asm		846150	1					
ANR	846341	PrimaryExpression	128		846150	1					
ANR	846342	IdentifierDeclStatement	char * ba = malloc ( ba_len ) ;	6646:1:190464:190490	846150	15	True				
ANR	846343	IdentifierDecl	* ba = malloc ( ba_len )		846150	0					
ANR	846344	IdentifierDeclType	char *		846150	0					
ANR	846345	Identifier	ba		846150	1					
ANR	846346	AssignmentExpression	* ba = malloc ( ba_len )		846150	2		=			
ANR	846347	Identifier	ba		846150	0					
ANR	846348	CallExpression	malloc ( ba_len )		846150	1					
ANR	846349	Callee	malloc		846150	0					
ANR	846350	Identifier	malloc		846150	0					
ANR	846351	ArgumentList	ba_len		846150	1					
ANR	846352	Argument	ba_len		846150	0					
ANR	846353	Identifier	ba_len		846150	0					
ANR	846354	ExpressionStatement	"strcpy ( ba , r_strbuf_get ( & asmop . buf_asm ) )"	6647:1:190493:190535	846150	16	True				
ANR	846355	CallExpression	"strcpy ( ba , r_strbuf_get ( & asmop . buf_asm ) )"		846150	0					
ANR	846356	Callee	strcpy		846150	0					
ANR	846357	Identifier	strcpy		846150	0					
ANR	846358	ArgumentList	ba		846150	1					
ANR	846359	Argument	ba		846150	0					
ANR	846360	Identifier	ba		846150	0					
ANR	846361	Argument	r_strbuf_get ( & asmop . buf_asm )		846150	1					
ANR	846362	CallExpression	r_strbuf_get ( & asmop . buf_asm )		846150	0					
ANR	846363	Callee	r_strbuf_get		846150	0					
ANR	846364	Identifier	r_strbuf_get		846150	0					
ANR	846365	ArgumentList	& asmop . buf_asm		846150	1					
ANR	846366	Argument	& asmop . buf_asm		846150	0					
ANR	846367	UnaryOperationExpression	& asmop . buf_asm		846150	0					
ANR	846368	UnaryOperator	&		846150	0					
ANR	846369	MemberAccess	asmop . buf_asm		846150	1					
ANR	846370	Identifier	asmop		846150	0					
ANR	846371	Identifier	buf_asm		846150	1					
ANR	846372	IfStatement	if ( asm_varsub )		846150	17					
ANR	846373	Condition	asm_varsub	6648:5:190542:190551	846150	0	True				
ANR	846374	Identifier	asm_varsub		846150	0					
ANR	846375	CompoundStatement		22:17:793:793	846150	1					
ANR	846376	ExpressionStatement	"r_parse_varsub ( core -> parser , fcn , addr , asmop . size , ba , ba , sizeof ( asmop . buf_asm ) )"	6649:2:190558:190646	846150	0	True				
ANR	846377	CallExpression	"r_parse_varsub ( core -> parser , fcn , addr , asmop . size , ba , ba , sizeof ( asmop . buf_asm ) )"		846150	0					
ANR	846378	Callee	r_parse_varsub		846150	0					
ANR	846379	Identifier	r_parse_varsub		846150	0					
ANR	846380	ArgumentList	core -> parser		846150	1					
ANR	846381	Argument	core -> parser		846150	0					
ANR	846382	PtrMemberAccess	core -> parser		846150	0					
ANR	846383	Identifier	core		846150	0					
ANR	846384	Identifier	parser		846150	1					
ANR	846385	Argument	fcn		846150	1					
ANR	846386	Identifier	fcn		846150	0					
ANR	846387	Argument	addr		846150	2					
ANR	846388	Identifier	addr		846150	0					
ANR	846389	Argument	asmop . size		846150	3					
ANR	846390	MemberAccess	asmop . size		846150	0					
ANR	846391	Identifier	asmop		846150	0					
ANR	846392	Identifier	size		846150	1					
ANR	846393	Argument	ba		846150	4					
ANR	846394	Identifier	ba		846150	0					
ANR	846395	Argument	ba		846150	5					
ANR	846396	Identifier	ba		846150	0					
ANR	846397	Argument	sizeof ( asmop . buf_asm )		846150	6					
ANR	846398	SizeofExpression	sizeof ( asmop . buf_asm )		846150	0					
ANR	846399	Sizeof	sizeof		846150	0					
ANR	846400	MemberAccess	asmop . buf_asm		846150	1					
ANR	846401	Identifier	asmop		846150	0					
ANR	846402	Identifier	buf_asm		846150	1					
ANR	846403	IdentifierDeclStatement	"RAnalHint * hint = r_anal_hint_get ( core -> anal , addr ) ;"	6652:1:190652:190704	846150	18	True				
ANR	846404	IdentifierDecl	"* hint = r_anal_hint_get ( core -> anal , addr )"		846150	0					
ANR	846405	IdentifierDeclType	RAnalHint *		846150	0					
ANR	846406	Identifier	hint		846150	1					
ANR	846407	AssignmentExpression	"* hint = r_anal_hint_get ( core -> anal , addr )"		846150	2		=			
ANR	846408	Identifier	hint		846150	0					
ANR	846409	CallExpression	"r_anal_hint_get ( core -> anal , addr )"		846150	1					
ANR	846410	Callee	r_anal_hint_get		846150	0					
ANR	846411	Identifier	r_anal_hint_get		846150	0					
ANR	846412	ArgumentList	core -> anal		846150	1					
ANR	846413	Argument	core -> anal		846150	0					
ANR	846414	PtrMemberAccess	core -> anal		846150	0					
ANR	846415	Identifier	core		846150	0					
ANR	846416	Identifier	anal		846150	1					
ANR	846417	Argument	addr		846150	1					
ANR	846418	Identifier	addr		846150	0					
ANR	846419	ExpressionStatement	"r_parse_filter ( core -> parser , addr , core -> flags , hint , ba , str , sizeof ( str ) , core -> print -> big_endian )"	6653:1:190707:190812	846150	19	True				
ANR	846420	CallExpression	"r_parse_filter ( core -> parser , addr , core -> flags , hint , ba , str , sizeof ( str ) , core -> print -> big_endian )"		846150	0					
ANR	846421	Callee	r_parse_filter		846150	0					
ANR	846422	Identifier	r_parse_filter		846150	0					
ANR	846423	ArgumentList	core -> parser		846150	1					
ANR	846424	Argument	core -> parser		846150	0					
ANR	846425	PtrMemberAccess	core -> parser		846150	0					
ANR	846426	Identifier	core		846150	0					
ANR	846427	Identifier	parser		846150	1					
ANR	846428	Argument	addr		846150	1					
ANR	846429	Identifier	addr		846150	0					
ANR	846430	Argument	core -> flags		846150	2					
ANR	846431	PtrMemberAccess	core -> flags		846150	0					
ANR	846432	Identifier	core		846150	0					
ANR	846433	Identifier	flags		846150	1					
ANR	846434	Argument	hint		846150	3					
ANR	846435	Identifier	hint		846150	0					
ANR	846436	Argument	ba		846150	4					
ANR	846437	Identifier	ba		846150	0					
ANR	846438	Argument	str		846150	5					
ANR	846439	Identifier	str		846150	0					
ANR	846440	Argument	sizeof ( str )		846150	6					
ANR	846441	SizeofExpression	sizeof ( str )		846150	0					
ANR	846442	Sizeof	sizeof		846150	0					
ANR	846443	SizeofOperand	str		846150	1					
ANR	846444	Argument	core -> print -> big_endian		846150	7					
ANR	846445	PtrMemberAccess	core -> print -> big_endian		846150	0					
ANR	846446	PtrMemberAccess	core -> print		846150	0					
ANR	846447	Identifier	core		846150	0					
ANR	846448	Identifier	print		846150	1					
ANR	846449	Identifier	big_endian		846150	1					
ANR	846450	ExpressionStatement	r_anal_hint_free ( hint )	6655:1:190815:190838	846150	20	True				
ANR	846451	CallExpression	r_anal_hint_free ( hint )		846150	0					
ANR	846452	Callee	r_anal_hint_free		846150	0					
ANR	846453	Identifier	r_anal_hint_free		846150	0					
ANR	846454	ArgumentList	hint		846150	1					
ANR	846455	Argument	hint		846150	0					
ANR	846456	Identifier	hint		846150	0					
ANR	846457	ExpressionStatement	"r_asm_op_set_asm ( & asmop , ba )"	6656:1:190841:190870	846150	21	True				
ANR	846458	CallExpression	"r_asm_op_set_asm ( & asmop , ba )"		846150	0					
ANR	846459	Callee	r_asm_op_set_asm		846150	0					
ANR	846460	Identifier	r_asm_op_set_asm		846150	0					
ANR	846461	ArgumentList	& asmop		846150	1					
ANR	846462	Argument	& asmop		846150	0					
ANR	846463	UnaryOperationExpression	& asmop		846150	0					
ANR	846464	UnaryOperator	&		846150	0					
ANR	846465	Identifier	asmop		846150	1					
ANR	846466	Argument	ba		846150	1					
ANR	846467	Identifier	ba		846150	0					
ANR	846468	ExpressionStatement	free ( ba )	6657:1:190873:190882	846150	22	True				
ANR	846469	CallExpression	free ( ba )		846150	0					
ANR	846470	Callee	free		846150	0					
ANR	846471	Identifier	free		846150	0					
ANR	846472	ArgumentList	ba		846150	1					
ANR	846473	Argument	ba		846150	0					
ANR	846474	Identifier	ba		846150	0					
ANR	846475	IfStatement	if ( color && has_color )		846150	23					
ANR	846476	Condition	color && has_color	6658:5:190889:190906	846150	0	True				
ANR	846477	AndExpression	color && has_color		846150	0		&&			
ANR	846478	Identifier	color		846150	0					
ANR	846479	Identifier	has_color		846150	1					
ANR	846480	CompoundStatement		32:25:1148:1148	846150	1					
ANR	846481	ExpressionStatement	"buf_asm = r_print_colorize_opcode ( core -> print , str , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , fcn ? fcn -> addr : 0 )"	6659:2:190913:191057	846150	0	True				
ANR	846482	AssignmentExpression	"buf_asm = r_print_colorize_opcode ( core -> print , str , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , fcn ? fcn -> addr : 0 )"		846150	0		=			
ANR	846483	Identifier	buf_asm		846150	0					
ANR	846484	CallExpression	"r_print_colorize_opcode ( core -> print , str , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , fcn ? fcn -> addr : 0 )"		846150	1					
ANR	846485	Callee	r_print_colorize_opcode		846150	0					
ANR	846486	Identifier	r_print_colorize_opcode		846150	0					
ANR	846487	ArgumentList	core -> print		846150	1					
ANR	846488	Argument	core -> print		846150	0					
ANR	846489	PtrMemberAccess	core -> print		846150	0					
ANR	846490	Identifier	core		846150	0					
ANR	846491	Identifier	print		846150	1					
ANR	846492	Argument	str		846150	1					
ANR	846493	Identifier	str		846150	0					
ANR	846494	Argument	core -> cons -> context -> pal . reg		846150	2					
ANR	846495	MemberAccess	core -> cons -> context -> pal . reg		846150	0					
ANR	846496	PtrMemberAccess	core -> cons -> context -> pal		846150	0					
ANR	846497	PtrMemberAccess	core -> cons -> context		846150	0					
ANR	846498	PtrMemberAccess	core -> cons		846150	0					
ANR	846499	Identifier	core		846150	0					
ANR	846500	Identifier	cons		846150	1					
ANR	846501	Identifier	context		846150	1					
ANR	846502	Identifier	pal		846150	1					
ANR	846503	Identifier	reg		846150	1					
ANR	846504	Argument	core -> cons -> context -> pal . num		846150	3					
ANR	846505	MemberAccess	core -> cons -> context -> pal . num		846150	0					
ANR	846506	PtrMemberAccess	core -> cons -> context -> pal		846150	0					
ANR	846507	PtrMemberAccess	core -> cons -> context		846150	0					
ANR	846508	PtrMemberAccess	core -> cons		846150	0					
ANR	846509	Identifier	core		846150	0					
ANR	846510	Identifier	cons		846150	1					
ANR	846511	Identifier	context		846150	1					
ANR	846512	Identifier	pal		846150	1					
ANR	846513	Identifier	num		846150	1					
ANR	846514	Argument	false		846150	4					
ANR	846515	Identifier	false		846150	0					
ANR	846516	Argument	fcn ? fcn -> addr : 0		846150	5					
ANR	846517	ConditionalExpression	fcn ? fcn -> addr : 0		846150	0					
ANR	846518	Condition	fcn		846150	0					
ANR	846519	Identifier	fcn		846150	0					
ANR	846520	PtrMemberAccess	fcn -> addr		846150	1					
ANR	846521	Identifier	fcn		846150	0					
ANR	846522	Identifier	addr		846150	1					
ANR	846523	PrimaryExpression	0		846150	2					
ANR	846524	ElseStatement	else		846150	0					
ANR	846525	CompoundStatement		35:8:1306:1306	846150	0					
ANR	846526	ExpressionStatement	buf_asm = r_str_new ( str )	6662:2:191071:191096	846150	0	True				
ANR	846527	AssignmentExpression	buf_asm = r_str_new ( str )		846150	0		=			
ANR	846528	Identifier	buf_asm		846150	0					
ANR	846529	CallExpression	r_str_new ( str )		846150	1					
ANR	846530	Callee	r_str_new		846150	0					
ANR	846531	Identifier	r_str_new		846150	0					
ANR	846532	ArgumentList	str		846150	1					
ANR	846533	Argument	str		846150	0					
ANR	846534	Identifier	str		846150	0					
ANR	846535	ReturnStatement	return buf_asm ;	6664:1:191102:191116	846150	24	True				
ANR	846536	Identifier	buf_asm		846150	0					
ANR	846537	ReturnType	static char *		846150	1					
ANR	846538	Identifier	get_buf_asm		846150	2					
ANR	846539	ParameterList	"RCore * core , ut64 from , ut64 addr , RAnalFunction * fcn , bool color"		846150	3					
ANR	846540	Parameter	RCore * core	6627:25:189693:189703	846150	0	True				
ANR	846541	ParameterType	RCore *		846150	0					
ANR	846542	Identifier	core		846150	1					
ANR	846543	Parameter	ut64 from	6627:38:189706:189714	846150	1	True				
ANR	846544	ParameterType	ut64		846150	0					
ANR	846545	Identifier	from		846150	1					
ANR	846546	Parameter	ut64 addr	6627:49:189717:189725	846150	2	True				
ANR	846547	ParameterType	ut64		846150	0					
ANR	846548	Identifier	addr		846150	1					
ANR	846549	Parameter	RAnalFunction * fcn	6627:60:189728:189745	846150	3	True				
ANR	846550	ParameterType	RAnalFunction *		846150	0					
ANR	846551	Identifier	fcn		846150	1					
ANR	846552	Parameter	bool color	6627:80:189748:189757	846150	4	True				
ANR	846553	ParameterType	bool		846150	0					
ANR	846554	Identifier	color		846150	1					
ANR	846555	CFGEntryNode	ENTRY		846150		True				
ANR	846556	CFGExitNode	EXIT		846150		True				
ANR	846557	Symbol	* fcn		846150						
ANR	846558	Symbol	asmop		846150						
ANR	846559	Symbol	* core -> parser		846150						
ANR	846560	Symbol	core -> parser -> relsub_addr		846150						
ANR	846561	Symbol	core -> cons -> context -> pal . reg		846150						
ANR	846562	Symbol	from		846150						
ANR	846563	Symbol	r_str_new		846150						
ANR	846564	Symbol	NULL		846150						
ANR	846565	Symbol	core -> parser -> localvar_only		846150						
ANR	846566	Symbol	* * core -> cons		846150						
ANR	846567	Symbol	core -> print -> big_endian		846150						
ANR	846568	Symbol	core -> cons -> context -> pal . num		846150						
ANR	846569	Symbol	ba_len		846150						
ANR	846570	Symbol	str		846150						
ANR	846571	Symbol	core -> parser -> pseudo		846150						
ANR	846572	Symbol	core		846150						
ANR	846573	Symbol	has_color		846150						
ANR	846574	Symbol	core -> parser		846150						
ANR	846575	Symbol	core -> parser -> relsub		846150						
ANR	846576	Symbol	* * * core		846150						
ANR	846577	Symbol	core -> cons -> context -> pal		846150						
ANR	846578	Symbol	size		846150						
ANR	846579	Symbol	asm_varsub		846150						
ANR	846580	Symbol	r_config_get_i		846150						
ANR	846581	Symbol	hint		846150						
ANR	846582	Symbol	core -> print		846150						
ANR	846583	Symbol	buf_asm		846150						
ANR	846584	Symbol	core -> print -> flags		846150						
ANR	846585	Symbol	core -> cons -> context		846150						
ANR	846586	Symbol	ba		846150						
ANR	846587	Symbol	color		846150						
ANR	846588	Symbol	* core -> cons		846150						
ANR	846589	Symbol	* core		846150						
ANR	846590	Symbol	core -> assembler		846150						
ANR	846591	Symbol	core -> anal		846150						
ANR	846592	Symbol	fcn		846150						
ANR	846593	Symbol	r_print_colorize_opcode		846150						
ANR	846594	Symbol	core -> cons		846150						
ANR	846595	Symbol	core -> io		846150						
ANR	846596	Symbol	* core -> cons -> context		846150						
ANR	846597	Symbol	R_PRINT_FLAGS_COLOR		846150						
ANR	846598	Symbol	r_strbuf_length		846150						
ANR	846599	Symbol	addr		846150						
ANR	846600	Symbol	* * core		846150						
ANR	846601	Symbol	core -> config		846150						
ANR	846602	Symbol	malloc		846150						
ANR	846603	Symbol	false		846150						
ANR	846604	Symbol	core -> flags		846150						
ANR	846605	Symbol	r_anal_hint_get		846150						
ANR	846606	Symbol	asmop . buf_asm		846150						
ANR	846607	Symbol	* core -> print		846150						
ANR	846608	Symbol	buf		846150						
ANR	846609	Symbol	r_strbuf_get		846150						
ANR	846610	Symbol	& asmop		846150						
ANR	846611	Symbol	& asmop . buf_asm		846150						
ANR	846612	Symbol	asmop . size		846150						
ANR	846613	Symbol	fcn -> addr		846150						
ANR	846614	Function	cmd_anal_refs	6670:0:191230:204174							
ANR	846615	FunctionDef	"cmd_anal_refs (RCore * core , const char * input)"		846614	0					
ANR	846616	CompoundStatement		6670:58:191288:204174	846614	0					
ANR	846617	IdentifierDeclStatement	ut64 addr = core -> offset ;	6671:1:191291:191315	846614	0	True				
ANR	846618	IdentifierDecl	addr = core -> offset		846614	0					
ANR	846619	IdentifierDeclType	ut64		846614	0					
ANR	846620	Identifier	addr		846614	1					
ANR	846621	AssignmentExpression	addr = core -> offset		846614	2		=			
ANR	846622	Identifier	addr		846614	0					
ANR	846623	PtrMemberAccess	core -> offset		846614	1					
ANR	846624	Identifier	core		846614	0					
ANR	846625	Identifier	offset		846614	1					
ANR	846626	SwitchStatement	switch ( input [ 0 ] )		846614	1					
ANR	846627	Condition	input [ 0 ]	6672:9:191326:191333	846614	0	True				
ANR	846628	ArrayIndexing	input [ 0 ]		846614	0					
ANR	846629	Identifier	input		846614	0					
ANR	846630	PrimaryExpression	0		846614	1					
ANR	846631	CompoundStatement		3:19:47:47	846614	1					
ANR	846632	Label	case '-' :	6673:1:191339:191347	846614	0	True				
ANR	846633	CompoundStatement		9:2:161:197	846614	1					
ANR	846634	IdentifierDeclStatement	RList * list ;	6674:2:191362:191373	846614	0	True				
ANR	846635	IdentifierDecl	* list		846614	0					
ANR	846636	IdentifierDeclType	RList *		846614	0					
ANR	846637	Identifier	list		846614	1					
ANR	846638	IdentifierDeclStatement	RListIter * iter ;	6675:2:191377:191392	846614	1	True				
ANR	846639	IdentifierDecl	* iter		846614	0					
ANR	846640	IdentifierDeclType	RListIter *		846614	0					
ANR	846641	Identifier	iter		846614	1					
ANR	846642	IdentifierDeclStatement	RAnalRef * ref ;	6676:2:191396:191409	846614	2	True				
ANR	846643	IdentifierDecl	* ref		846614	0					
ANR	846644	IdentifierDeclType	RAnalRef *		846614	0					
ANR	846645	Identifier	ref		846614	1					
ANR	846646	IdentifierDeclStatement	char * cp_inp = strdup ( input + 1 ) ;	6677:2:191413:191446	846614	3	True				
ANR	846647	IdentifierDecl	* cp_inp = strdup ( input + 1 )		846614	0					
ANR	846648	IdentifierDeclType	char *		846614	0					
ANR	846649	Identifier	cp_inp		846614	1					
ANR	846650	AssignmentExpression	* cp_inp = strdup ( input + 1 )		846614	2		=			
ANR	846651	Identifier	cp_inp		846614	0					
ANR	846652	CallExpression	strdup ( input + 1 )		846614	1					
ANR	846653	Callee	strdup		846614	0					
ANR	846654	Identifier	strdup		846614	0					
ANR	846655	ArgumentList	input + 1		846614	1					
ANR	846656	Argument	input + 1		846614	0					
ANR	846657	AdditiveExpression	input + 1		846614	0		+			
ANR	846658	Identifier	input		846614	0					
ANR	846659	PrimaryExpression	1		846614	1					
ANR	846660	IdentifierDeclStatement	char * ptr = r_str_trim_head ( cp_inp ) ;	6678:2:191450:191486	846614	4	True				
ANR	846661	IdentifierDecl	* ptr = r_str_trim_head ( cp_inp )		846614	0					
ANR	846662	IdentifierDeclType	char *		846614	0					
ANR	846663	Identifier	ptr		846614	1					
ANR	846664	AssignmentExpression	* ptr = r_str_trim_head ( cp_inp )		846614	2		=			
ANR	846665	Identifier	ptr		846614	0					
ANR	846666	CallExpression	r_str_trim_head ( cp_inp )		846614	1					
ANR	846667	Callee	r_str_trim_head		846614	0					
ANR	846668	Identifier	r_str_trim_head		846614	0					
ANR	846669	ArgumentList	cp_inp		846614	1					
ANR	846670	Argument	cp_inp		846614	0					
ANR	846671	Identifier	cp_inp		846614	0					
ANR	846672	IfStatement	"if ( ! strcmp ( ptr , ""*"" ) )"		846614	5					
ANR	846673	Condition	"! strcmp ( ptr , ""*"" )"	6679:6:191494:191511	846614	0	True				
ANR	846674	UnaryOperationExpression	"! strcmp ( ptr , ""*"" )"		846614	0					
ANR	846675	UnaryOperator	!		846614	0					
ANR	846676	CallExpression	"strcmp ( ptr , ""*"" )"		846614	1					
ANR	846677	Callee	strcmp		846614	0					
ANR	846678	Identifier	strcmp		846614	0					
ANR	846679	ArgumentList	ptr		846614	1					
ANR	846680	Argument	ptr		846614	0					
ANR	846681	Identifier	ptr		846614	0					
ANR	846682	Argument	"""*"""		846614	1					
ANR	846683	PrimaryExpression	"""*"""		846614	0					
ANR	846684	CompoundStatement		10:26:225:225	846614	1					
ANR	846685	ExpressionStatement	r_anal_xrefs_init ( core -> anal )	6680:3:191529:191559	846614	0	True				
ANR	846686	CallExpression	r_anal_xrefs_init ( core -> anal )		846614	0					
ANR	846687	Callee	r_anal_xrefs_init		846614	0					
ANR	846688	Identifier	r_anal_xrefs_init		846614	0					
ANR	846689	ArgumentList	core -> anal		846614	1					
ANR	846690	Argument	core -> anal		846614	0					
ANR	846691	PtrMemberAccess	core -> anal		846614	0					
ANR	846692	Identifier	core		846614	0					
ANR	846693	Identifier	anal		846614	1					
ANR	846694	ElseStatement	else		846614	0					
ANR	846695	CompoundStatement		14:3:320:355	846614	0					
ANR	846696	IdentifierDeclStatement	int n = r_str_word_set0 ( ptr ) ;	6682:3:191575:191604	846614	0	True				
ANR	846697	IdentifierDecl	n = r_str_word_set0 ( ptr )		846614	0					
ANR	846698	IdentifierDeclType	int		846614	0					
ANR	846699	Identifier	n		846614	1					
ANR	846700	AssignmentExpression	n = r_str_word_set0 ( ptr )		846614	2		=			
ANR	846701	Identifier	n		846614	0					
ANR	846702	CallExpression	r_str_word_set0 ( ptr )		846614	1					
ANR	846703	Callee	r_str_word_set0		846614	0					
ANR	846704	Identifier	r_str_word_set0		846614	0					
ANR	846705	ArgumentList	ptr		846614	1					
ANR	846706	Argument	ptr		846614	0					
ANR	846707	Identifier	ptr		846614	0					
ANR	846708	IdentifierDeclStatement	"ut64 from = UT64_MAX , to = UT64_MAX ;"	6683:3:191609:191644	846614	1	True				
ANR	846709	IdentifierDecl	from = UT64_MAX		846614	0					
ANR	846710	IdentifierDeclType	ut64		846614	0					
ANR	846711	Identifier	from		846614	1					
ANR	846712	AssignmentExpression	from = UT64_MAX		846614	2		=			
ANR	846713	Identifier	UT64_MAX		846614	0					
ANR	846714	Identifier	UT64_MAX		846614	1					
ANR	846715	IdentifierDecl	to = UT64_MAX		846614	1					
ANR	846716	IdentifierDeclType	ut64		846614	0					
ANR	846717	Identifier	to		846614	1					
ANR	846718	AssignmentExpression	to = UT64_MAX		846614	2		=			
ANR	846719	Identifier	UT64_MAX		846614	0					
ANR	846720	Identifier	UT64_MAX		846614	1					
ANR	846721	SwitchStatement	switch ( n )		846614	2					
ANR	846722	Condition	n	6684:11:191657:191657	846614	0	True				
ANR	846723	Identifier	n		846614	0					
ANR	846724	CompoundStatement		15:14:371:371	846614	1					
ANR	846725	Label	case 2 :	6685:3:191665:191671	846614	0	True				
ANR	846726	ExpressionStatement	"from = r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"	6686:4:191677:191732	846614	1	True				
ANR	846727	AssignmentExpression	"from = r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"		846614	0		=			
ANR	846728	Identifier	from		846614	0					
ANR	846729	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"		846614	1					
ANR	846730	Callee	r_num_math		846614	0					
ANR	846731	Identifier	r_num_math		846614	0					
ANR	846732	ArgumentList	core -> num		846614	1					
ANR	846733	Argument	core -> num		846614	0					
ANR	846734	PtrMemberAccess	core -> num		846614	0					
ANR	846735	Identifier	core		846614	0					
ANR	846736	Identifier	num		846614	1					
ANR	846737	Argument	"r_str_word_get0 ( ptr , 1 )"		846614	1					
ANR	846738	CallExpression	"r_str_word_get0 ( ptr , 1 )"		846614	0					
ANR	846739	Callee	r_str_word_get0		846614	0					
ANR	846740	Identifier	r_str_word_get0		846614	0					
ANR	846741	ArgumentList	ptr		846614	1					
ANR	846742	Argument	ptr		846614	0					
ANR	846743	Identifier	ptr		846614	0					
ANR	846744	Argument	1		846614	1					
ANR	846745	PrimaryExpression	1		846614	0					
ANR	846746	Label	case 1 :	6688:3:191756:191762	846614	2	True				
ANR	846747	ExpressionStatement	"to = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"	6689:4:191780:191833	846614	3	True				
ANR	846748	AssignmentExpression	"to = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		846614	0		=			
ANR	846749	Identifier	to		846614	0					
ANR	846750	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		846614	1					
ANR	846751	Callee	r_num_math		846614	0					
ANR	846752	Identifier	r_num_math		846614	0					
ANR	846753	ArgumentList	core -> num		846614	1					
ANR	846754	Argument	core -> num		846614	0					
ANR	846755	PtrMemberAccess	core -> num		846614	0					
ANR	846756	Identifier	core		846614	0					
ANR	846757	Identifier	num		846614	1					
ANR	846758	Argument	"r_str_word_get0 ( ptr , 0 )"		846614	1					
ANR	846759	CallExpression	"r_str_word_get0 ( ptr , 0 )"		846614	0					
ANR	846760	Callee	r_str_word_get0		846614	0					
ANR	846761	Identifier	r_str_word_get0		846614	0					
ANR	846762	ArgumentList	ptr		846614	1					
ANR	846763	Argument	ptr		846614	0					
ANR	846764	Identifier	ptr		846614	0					
ANR	846765	Argument	0		846614	1					
ANR	846766	PrimaryExpression	0		846614	0					
ANR	846767	BreakStatement	break ;	6690:4:191839:191844	846614	4	True				
ANR	846768	Label	default :	6691:3:191849:191856	846614	5	True				
ANR	846769	Identifier	default		846614	0					
ANR	846770	ExpressionStatement	to = core -> offset	6692:4:191862:191879	846614	6	True				
ANR	846771	AssignmentExpression	to = core -> offset		846614	0		=			
ANR	846772	Identifier	to		846614	0					
ANR	846773	PtrMemberAccess	core -> offset		846614	1					
ANR	846774	Identifier	core		846614	0					
ANR	846775	Identifier	offset		846614	1					
ANR	846776	BreakStatement	break ;	6693:4:191885:191890	846614	7	True				
ANR	846777	ExpressionStatement	"list = r_anal_xrefs_get ( core -> anal , to )"	6695:3:191900:191940	846614	3	True				
ANR	846778	AssignmentExpression	"list = r_anal_xrefs_get ( core -> anal , to )"		846614	0		=			
ANR	846779	Identifier	list		846614	0					
ANR	846780	CallExpression	"r_anal_xrefs_get ( core -> anal , to )"		846614	1					
ANR	846781	Callee	r_anal_xrefs_get		846614	0					
ANR	846782	Identifier	r_anal_xrefs_get		846614	0					
ANR	846783	ArgumentList	core -> anal		846614	1					
ANR	846784	Argument	core -> anal		846614	0					
ANR	846785	PtrMemberAccess	core -> anal		846614	0					
ANR	846786	Identifier	core		846614	0					
ANR	846787	Identifier	anal		846614	1					
ANR	846788	Argument	to		846614	1					
ANR	846789	Identifier	to		846614	0					
ANR	846790	IfStatement	if ( list )		846614	4					
ANR	846791	Condition	list	6696:7:191949:191952	846614	0	True				
ANR	846792	Identifier	list		846614	0					
ANR	846793	CompoundStatement		27:13:666:666	846614	1					
ANR	846794	Statement	r_list_foreach	6697:4:191961:191974	846614	0	True				
ANR	846795	Statement	(	6697:19:191976:191976	846614	1	True				
ANR	846796	Statement	list	6697:20:191977:191980	846614	2	True				
ANR	846797	Statement	","	6697:24:191981:191981	846614	3	True				
ANR	846798	Statement	iter	6697:26:191983:191986	846614	4	True				
ANR	846799	Statement	","	6697:30:191987:191987	846614	5	True				
ANR	846800	Statement	ref	6697:32:191989:191991	846614	6	True				
ANR	846801	Statement	)	6697:35:191992:191992	846614	7	True				
ANR	846802	CompoundStatement		28:37:705:705	846614	8					
ANR	846803	IfStatement	if ( from != UT64_MAX && from == ref -> addr )		846614	0					
ANR	846804	Condition	from != UT64_MAX && from == ref -> addr	6698:9:192005:192041	846614	0	True				
ANR	846805	AndExpression	from != UT64_MAX && from == ref -> addr		846614	0		&&			
ANR	846806	EqualityExpression	from != UT64_MAX		846614	0		!=			
ANR	846807	Identifier	from		846614	0					
ANR	846808	Identifier	UT64_MAX		846614	1					
ANR	846809	EqualityExpression	from == ref -> addr		846614	1		==			
ANR	846810	Identifier	from		846614	0					
ANR	846811	PtrMemberAccess	ref -> addr		846614	1					
ANR	846812	Identifier	ref		846614	0					
ANR	846813	Identifier	addr		846614	1					
ANR	846814	CompoundStatement		29:48:755:755	846614	1					
ANR	846815	ExpressionStatement	"r_anal_xref_del ( core -> anal , ref -> addr , ref -> at )"	6699:6:192052:192100	846614	0	True				
ANR	846816	CallExpression	"r_anal_xref_del ( core -> anal , ref -> addr , ref -> at )"		846614	0					
ANR	846817	Callee	r_anal_xref_del		846614	0					
ANR	846818	Identifier	r_anal_xref_del		846614	0					
ANR	846819	ArgumentList	core -> anal		846614	1					
ANR	846820	Argument	core -> anal		846614	0					
ANR	846821	PtrMemberAccess	core -> anal		846614	0					
ANR	846822	Identifier	core		846614	0					
ANR	846823	Identifier	anal		846614	1					
ANR	846824	Argument	ref -> addr		846614	1					
ANR	846825	PtrMemberAccess	ref -> addr		846614	0					
ANR	846826	Identifier	ref		846614	0					
ANR	846827	Identifier	addr		846614	1					
ANR	846828	Argument	ref -> at		846614	2					
ANR	846829	PtrMemberAccess	ref -> at		846614	0					
ANR	846830	Identifier	ref		846614	0					
ANR	846831	Identifier	at		846614	1					
ANR	846832	IfStatement	if ( from == UT64_MAX )		846614	1					
ANR	846833	Condition	from == UT64_MAX	6701:9:192118:192133	846614	0	True				
ANR	846834	EqualityExpression	from == UT64_MAX		846614	0		==			
ANR	846835	Identifier	from		846614	0					
ANR	846836	Identifier	UT64_MAX		846614	1					
ANR	846837	CompoundStatement		32:27:847:847	846614	1					
ANR	846838	ExpressionStatement	"r_anal_xref_del ( core -> anal , ref -> addr , ref -> at )"	6702:6:192144:192192	846614	0	True				
ANR	846839	CallExpression	"r_anal_xref_del ( core -> anal , ref -> addr , ref -> at )"		846614	0					
ANR	846840	Callee	r_anal_xref_del		846614	0					
ANR	846841	Identifier	r_anal_xref_del		846614	0					
ANR	846842	ArgumentList	core -> anal		846614	1					
ANR	846843	Argument	core -> anal		846614	0					
ANR	846844	PtrMemberAccess	core -> anal		846614	0					
ANR	846845	Identifier	core		846614	0					
ANR	846846	Identifier	anal		846614	1					
ANR	846847	Argument	ref -> addr		846614	1					
ANR	846848	PtrMemberAccess	ref -> addr		846614	0					
ANR	846849	Identifier	ref		846614	0					
ANR	846850	Identifier	addr		846614	1					
ANR	846851	Argument	ref -> at		846614	2					
ANR	846852	PtrMemberAccess	ref -> at		846614	0					
ANR	846853	Identifier	ref		846614	0					
ANR	846854	Identifier	at		846614	1					
ANR	846855	ExpressionStatement	r_list_free ( list )	6706:3:192215:192233	846614	5	True				
ANR	846856	CallExpression	r_list_free ( list )		846614	0					
ANR	846857	Callee	r_list_free		846614	0					
ANR	846858	Identifier	r_list_free		846614	0					
ANR	846859	ArgumentList	list		846614	1					
ANR	846860	Argument	list		846614	0					
ANR	846861	Identifier	list		846614	0					
ANR	846862	ExpressionStatement	free ( cp_inp )	6708:2:192241:192254	846614	6	True				
ANR	846863	CallExpression	free ( cp_inp )		846614	0					
ANR	846864	Callee	free		846614	0					
ANR	846865	Identifier	free		846614	0					
ANR	846866	ArgumentList	cp_inp		846614	1					
ANR	846867	Argument	cp_inp		846614	0					
ANR	846868	Identifier	cp_inp		846614	0					
ANR	846869	BreakStatement	break ;	6709:3:192259:192264	846614	2	True				
ANR	846870	Label	case 'g' :	6710:1:192267:192275	846614	3	True				
ANR	846871	CompoundStatement		43:3:1004:1025	846614	4					
ANR	846872	IdentifierDeclStatement	Sdb * db = sdb_new0 ( ) ;	6712:3:192293:192314	846614	0	True				
ANR	846873	IdentifierDecl	* db = sdb_new0 ( )		846614	0					
ANR	846874	IdentifierDeclType	Sdb *		846614	0					
ANR	846875	Identifier	db		846614	1					
ANR	846876	AssignmentExpression	* db = sdb_new0 ( )		846614	2		=			
ANR	846877	Identifier	db		846614	0					
ANR	846878	CallExpression	sdb_new0 ( )		846614	1					
ANR	846879	Callee	sdb_new0		846614	0					
ANR	846880	Identifier	sdb_new0		846614	0					
ANR	846881	ArgumentList			846614	1					
ANR	846882	IfStatement	if ( input [ 1 ] == '*' )		846614	1					
ANR	846883	Condition	input [ 1 ] == '*'	6713:7:192323:192337	846614	0	True				
ANR	846884	EqualityExpression	input [ 1 ] == '*'		846614	0		==			
ANR	846885	ArrayIndexing	input [ 1 ]		846614	0					
ANR	846886	Identifier	input		846614	0					
ANR	846887	PrimaryExpression	1		846614	1					
ANR	846888	PrimaryExpression	'*'		846614	1					
ANR	846889	CompoundStatement		44:24:1051:1051	846614	1					
ANR	846890	ExpressionStatement	"anal_axg ( core , input + 2 , 0 , db , R_CORE_ANAL_GRAPHBODY , NULL )"	6714:4:192346:192408	846614	0	True				
ANR	846891	CallExpression	"anal_axg ( core , input + 2 , 0 , db , R_CORE_ANAL_GRAPHBODY , NULL )"		846614	0					
ANR	846892	Callee	anal_axg		846614	0					
ANR	846893	Identifier	anal_axg		846614	0					
ANR	846894	ArgumentList	core		846614	1					
ANR	846895	Argument	core		846614	0					
ANR	846896	Identifier	core		846614	0					
ANR	846897	Argument	input + 2		846614	1					
ANR	846898	AdditiveExpression	input + 2		846614	0		+			
ANR	846899	Identifier	input		846614	0					
ANR	846900	PrimaryExpression	2		846614	1					
ANR	846901	Argument	0		846614	2					
ANR	846902	PrimaryExpression	0		846614	0					
ANR	846903	Argument	db		846614	3					
ANR	846904	Identifier	db		846614	0					
ANR	846905	Argument	R_CORE_ANAL_GRAPHBODY		846614	4					
ANR	846906	Identifier	R_CORE_ANAL_GRAPHBODY		846614	0					
ANR	846907	Argument	NULL		846614	5					
ANR	846908	Identifier	NULL		846614	0					
ANR	846909	ElseStatement	else		846614	0					
ANR	846910	IfStatement	if ( input [ 1 ] == 'j' )		846614	0					
ANR	846911	Condition	input [ 1 ] == 'j'	6715:14:192439:192453	846614	0	True				
ANR	846912	EqualityExpression	input [ 1 ] == 'j'		846614	0		==			
ANR	846913	ArrayIndexing	input [ 1 ]		846614	0					
ANR	846914	Identifier	input		846614	0					
ANR	846915	PrimaryExpression	1		846614	1					
ANR	846916	PrimaryExpression	'j'		846614	1					
ANR	846917	CompoundStatement		47:4:1173:1191	846614	1					
ANR	846918	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	6716:4:192462:192480	846614	0	True				
ANR	846919	IdentifierDecl	* pj = pj_new ( )		846614	0					
ANR	846920	IdentifierDeclType	PJ *		846614	0					
ANR	846921	Identifier	pj		846614	1					
ANR	846922	AssignmentExpression	* pj = pj_new ( )		846614	2		=			
ANR	846923	Identifier	pj		846614	0					
ANR	846924	CallExpression	pj_new ( )		846614	1					
ANR	846925	Callee	pj_new		846614	0					
ANR	846926	Identifier	pj_new		846614	0					
ANR	846927	ArgumentList			846614	1					
ANR	846928	ExpressionStatement	"anal_axg ( core , input + 2 , 0 , db , R_CORE_ANAL_JSON , pj )"	6717:4:192486:192541	846614	1	True				
ANR	846929	CallExpression	"anal_axg ( core , input + 2 , 0 , db , R_CORE_ANAL_JSON , pj )"		846614	0					
ANR	846930	Callee	anal_axg		846614	0					
ANR	846931	Identifier	anal_axg		846614	0					
ANR	846932	ArgumentList	core		846614	1					
ANR	846933	Argument	core		846614	0					
ANR	846934	Identifier	core		846614	0					
ANR	846935	Argument	input + 2		846614	1					
ANR	846936	AdditiveExpression	input + 2		846614	0		+			
ANR	846937	Identifier	input		846614	0					
ANR	846938	PrimaryExpression	2		846614	1					
ANR	846939	Argument	0		846614	2					
ANR	846940	PrimaryExpression	0		846614	0					
ANR	846941	Argument	db		846614	3					
ANR	846942	Identifier	db		846614	0					
ANR	846943	Argument	R_CORE_ANAL_JSON		846614	4					
ANR	846944	Identifier	R_CORE_ANAL_JSON		846614	0					
ANR	846945	Argument	pj		846614	5					
ANR	846946	Identifier	pj		846614	0					
ANR	846947	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	6718:4:192547:192584	846614	2	True				
ANR	846948	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		846614	0					
ANR	846949	Callee	r_cons_printf		846614	0					
ANR	846950	Identifier	r_cons_printf		846614	0					
ANR	846951	ArgumentList	"""%s\\n"""		846614	1					
ANR	846952	Argument	"""%s\\n"""		846614	0					
ANR	846953	PrimaryExpression	"""%s\\n"""		846614	0					
ANR	846954	Argument	pj_string ( pj )		846614	1					
ANR	846955	CallExpression	pj_string ( pj )		846614	0					
ANR	846956	Callee	pj_string		846614	0					
ANR	846957	Identifier	pj_string		846614	0					
ANR	846958	ArgumentList	pj		846614	1					
ANR	846959	Argument	pj		846614	0					
ANR	846960	Identifier	pj		846614	0					
ANR	846961	ExpressionStatement	pj_free ( pj )	6719:4:192590:192602	846614	3	True				
ANR	846962	CallExpression	pj_free ( pj )		846614	0					
ANR	846963	Callee	pj_free		846614	0					
ANR	846964	Identifier	pj_free		846614	0					
ANR	846965	ArgumentList	pj		846614	1					
ANR	846966	Argument	pj		846614	0					
ANR	846967	Identifier	pj		846614	0					
ANR	846968	ElseStatement	else		846614	0					
ANR	846969	CompoundStatement		51:10:1325:1325	846614	0					
ANR	846970	ExpressionStatement	"anal_axg ( core , input [ 1 ] ? input + 2 : NULL , 0 , db , 0 , NULL )"	6721:4:192620:192680	846614	0	True				
ANR	846971	CallExpression	"anal_axg ( core , input [ 1 ] ? input + 2 : NULL , 0 , db , 0 , NULL )"		846614	0					
ANR	846972	Callee	anal_axg		846614	0					
ANR	846973	Identifier	anal_axg		846614	0					
ANR	846974	ArgumentList	core		846614	1					
ANR	846975	Argument	core		846614	0					
ANR	846976	Identifier	core		846614	0					
ANR	846977	Argument	input [ 1 ] ? input + 2 : NULL		846614	1					
ANR	846978	ConditionalExpression	input [ 1 ] ? input + 2 : NULL		846614	0					
ANR	846979	Condition	input [ 1 ]		846614	0					
ANR	846980	ArrayIndexing	input [ 1 ]		846614	0					
ANR	846981	Identifier	input		846614	0					
ANR	846982	PrimaryExpression	1		846614	1					
ANR	846983	AdditiveExpression	input + 2		846614	1		+			
ANR	846984	Identifier	input		846614	0					
ANR	846985	PrimaryExpression	2		846614	1					
ANR	846986	Identifier	NULL		846614	2					
ANR	846987	Argument	0		846614	2					
ANR	846988	PrimaryExpression	0		846614	0					
ANR	846989	Argument	db		846614	3					
ANR	846990	Identifier	db		846614	0					
ANR	846991	Argument	0		846614	4					
ANR	846992	PrimaryExpression	0		846614	0					
ANR	846993	Argument	NULL		846614	5					
ANR	846994	Identifier	NULL		846614	0					
ANR	846995	ExpressionStatement	sdb_free ( db )	6723:3:192690:192703	846614	2	True				
ANR	846996	CallExpression	sdb_free ( db )		846614	0					
ANR	846997	Callee	sdb_free		846614	0					
ANR	846998	Identifier	sdb_free		846614	0					
ANR	846999	ArgumentList	db		846614	1					
ANR	847000	Argument	db		846614	0					
ANR	847001	Identifier	db		846614	0					
ANR	847002	BreakStatement	break ;	6725:2:192711:192716	846614	5	True				
ANR	847003	Label	case '\\0' :	6726:1:192719:192728	846614	6	True				
ANR	847004	Label	case 'j' :	6727:1:192739:192747	846614	7	True				
ANR	847005	Label	case 'q' :	6728:1:192759:192767	846614	8	True				
ANR	847006	Label	case '*' :	6729:1:192779:192787	846614	9	True				
ANR	847007	ExpressionStatement	"r_anal_xrefs_list ( core -> anal , input [ 0 ] )"	6730:2:192800:192840	846614	10	True				
ANR	847008	CallExpression	"r_anal_xrefs_list ( core -> anal , input [ 0 ] )"		846614	0					
ANR	847009	Callee	r_anal_xrefs_list		846614	0					
ANR	847010	Identifier	r_anal_xrefs_list		846614	0					
ANR	847011	ArgumentList	core -> anal		846614	1					
ANR	847012	Argument	core -> anal		846614	0					
ANR	847013	PtrMemberAccess	core -> anal		846614	0					
ANR	847014	Identifier	core		846614	0					
ANR	847015	Identifier	anal		846614	1					
ANR	847016	Argument	input [ 0 ]		846614	1					
ANR	847017	ArrayIndexing	input [ 0 ]		846614	0					
ANR	847018	Identifier	input		846614	0					
ANR	847019	PrimaryExpression	0		846614	1					
ANR	847020	BreakStatement	break ;	6731:2:192844:192849	846614	11	True				
ANR	847021	Label	case '.' :	6732:1:192852:192860	846614	12	True				
ANR	847022	CompoundStatement		68:2:1708:1737	846614	13					
ANR	847023	IdentifierDeclStatement	char * tInput = strdup ( input ) ;	6733:2:192875:192904	846614	0	True				
ANR	847024	IdentifierDecl	* tInput = strdup ( input )		846614	0					
ANR	847025	IdentifierDeclType	char *		846614	0					
ANR	847026	Identifier	tInput		846614	1					
ANR	847027	AssignmentExpression	* tInput = strdup ( input )		846614	2		=			
ANR	847028	Identifier	tInput		846614	0					
ANR	847029	CallExpression	strdup ( input )		846614	1					
ANR	847030	Callee	strdup		846614	0					
ANR	847031	Identifier	strdup		846614	0					
ANR	847032	ArgumentList	input		846614	1					
ANR	847033	Argument	input		846614	0					
ANR	847034	Identifier	input		846614	0					
ANR	847035	IfStatement	"if ( r_str_replace_ch ( tInput , '.' , 't' , false ) )"		846614	1					
ANR	847036	Condition	"r_str_replace_ch ( tInput , '.' , 't' , false )"	6734:6:192912:192953	846614	0	True				
ANR	847037	CallExpression	"r_str_replace_ch ( tInput , '.' , 't' , false )"		846614	0					
ANR	847038	Callee	r_str_replace_ch		846614	0					
ANR	847039	Identifier	r_str_replace_ch		846614	0					
ANR	847040	ArgumentList	tInput		846614	1					
ANR	847041	Argument	tInput		846614	0					
ANR	847042	Identifier	tInput		846614	0					
ANR	847043	Argument	'.'		846614	1					
ANR	847044	PrimaryExpression	'.'		846614	0					
ANR	847045	Argument	't'		846614	2					
ANR	847046	PrimaryExpression	't'		846614	0					
ANR	847047	Argument	false		846614	3					
ANR	847048	Identifier	false		846614	0					
ANR	847049	CompoundStatement		65:50:1667:1667	846614	1					
ANR	847050	ExpressionStatement	"cmd_anal_refs ( core , tInput )"	6735:3:192961:192989	846614	0	True				
ANR	847051	CallExpression	"cmd_anal_refs ( core , tInput )"		846614	0					
ANR	847052	Callee	cmd_anal_refs		846614	0					
ANR	847053	Identifier	cmd_anal_refs		846614	0					
ANR	847054	ArgumentList	core		846614	1					
ANR	847055	Argument	core		846614	0					
ANR	847056	Identifier	core		846614	0					
ANR	847057	Argument	tInput		846614	1					
ANR	847058	Identifier	tInput		846614	0					
ANR	847059	IdentifierDeclStatement	char * fInput = strdup ( input ) ;	6737:2:192997:193026	846614	2	True				
ANR	847060	IdentifierDecl	* fInput = strdup ( input )		846614	0					
ANR	847061	IdentifierDeclType	char *		846614	0					
ANR	847062	Identifier	fInput		846614	1					
ANR	847063	AssignmentExpression	* fInput = strdup ( input )		846614	2		=			
ANR	847064	Identifier	fInput		846614	0					
ANR	847065	CallExpression	strdup ( input )		846614	1					
ANR	847066	Callee	strdup		846614	0					
ANR	847067	Identifier	strdup		846614	0					
ANR	847068	ArgumentList	input		846614	1					
ANR	847069	Argument	input		846614	0					
ANR	847070	Identifier	input		846614	0					
ANR	847071	IfStatement	"if ( r_str_replace_ch ( fInput , '.' , 'f' , false ) )"		846614	3					
ANR	847072	Condition	"r_str_replace_ch ( fInput , '.' , 'f' , false )"	6738:6:193034:193075	846614	0	True				
ANR	847073	CallExpression	"r_str_replace_ch ( fInput , '.' , 'f' , false )"		846614	0					
ANR	847074	Callee	r_str_replace_ch		846614	0					
ANR	847075	Identifier	r_str_replace_ch		846614	0					
ANR	847076	ArgumentList	fInput		846614	1					
ANR	847077	Argument	fInput		846614	0					
ANR	847078	Identifier	fInput		846614	0					
ANR	847079	Argument	'.'		846614	1					
ANR	847080	PrimaryExpression	'.'		846614	0					
ANR	847081	Argument	'f'		846614	2					
ANR	847082	PrimaryExpression	'f'		846614	0					
ANR	847083	Argument	false		846614	3					
ANR	847084	Identifier	false		846614	0					
ANR	847085	CompoundStatement		69:50:1789:1789	846614	1					
ANR	847086	ExpressionStatement	"cmd_anal_refs ( core , fInput )"	6739:3:193083:193111	846614	0	True				
ANR	847087	CallExpression	"cmd_anal_refs ( core , fInput )"		846614	0					
ANR	847088	Callee	cmd_anal_refs		846614	0					
ANR	847089	Identifier	cmd_anal_refs		846614	0					
ANR	847090	ArgumentList	core		846614	1					
ANR	847091	Argument	core		846614	0					
ANR	847092	Identifier	core		846614	0					
ANR	847093	Argument	fInput		846614	1					
ANR	847094	Identifier	fInput		846614	0					
ANR	847095	ExpressionStatement	free ( tInput )	6741:2:193119:193132	846614	4	True				
ANR	847096	CallExpression	free ( tInput )		846614	0					
ANR	847097	Callee	free		846614	0					
ANR	847098	Identifier	free		846614	0					
ANR	847099	ArgumentList	tInput		846614	1					
ANR	847100	Argument	tInput		846614	0					
ANR	847101	Identifier	tInput		846614	0					
ANR	847102	ExpressionStatement	free ( fInput )	6742:2:193136:193149	846614	5	True				
ANR	847103	CallExpression	free ( fInput )		846614	0					
ANR	847104	Callee	free		846614	0					
ANR	847105	Identifier	free		846614	0					
ANR	847106	ArgumentList	fInput		846614	1					
ANR	847107	Argument	fInput		846614	0					
ANR	847108	Identifier	fInput		846614	0					
ANR	847109	BreakStatement	break ;	6743:3:193154:193159	846614	14	True				
ANR	847110	Label	case 'm' :	6744:1:193162:193170	846614	15	True				
ANR	847111	CompoundStatement		82:2:2066:2086	846614	16					
ANR	847112	IdentifierDeclStatement	RList * list ;	6745:2:193185:193196	846614	0	True				
ANR	847113	IdentifierDecl	* list		846614	0					
ANR	847114	IdentifierDeclType	RList *		846614	0					
ANR	847115	Identifier	list		846614	1					
ANR	847116	IdentifierDeclStatement	RAnalRef * ref ;	6746:2:193200:193213	846614	1	True				
ANR	847117	IdentifierDecl	* ref		846614	0					
ANR	847118	IdentifierDeclType	RAnalRef *		846614	0					
ANR	847119	Identifier	ref		846614	1					
ANR	847120	IdentifierDeclStatement	RListIter * iter ;	6747:2:193217:193232	846614	2	True				
ANR	847121	IdentifierDecl	* iter		846614	0					
ANR	847122	IdentifierDeclType	RListIter *		846614	0					
ANR	847123	Identifier	iter		846614	1					
ANR	847124	IdentifierDeclStatement	char * ptr = strdup ( r_str_trim_head ( ( char * ) input + 1 ) ) ;	6748:2:193236:193292	846614	3	True				
ANR	847125	IdentifierDecl	* ptr = strdup ( r_str_trim_head ( ( char * ) input + 1 ) )		846614	0					
ANR	847126	IdentifierDeclType	char *		846614	0					
ANR	847127	Identifier	ptr		846614	1					
ANR	847128	AssignmentExpression	* ptr = strdup ( r_str_trim_head ( ( char * ) input + 1 ) )		846614	2		=			
ANR	847129	Identifier	ptr		846614	0					
ANR	847130	CallExpression	strdup ( r_str_trim_head ( ( char * ) input + 1 ) )		846614	1					
ANR	847131	Callee	strdup		846614	0					
ANR	847132	Identifier	strdup		846614	0					
ANR	847133	ArgumentList	r_str_trim_head ( ( char * ) input + 1 )		846614	1					
ANR	847134	Argument	r_str_trim_head ( ( char * ) input + 1 )		846614	0					
ANR	847135	CallExpression	r_str_trim_head ( ( char * ) input + 1 )		846614	0					
ANR	847136	Callee	r_str_trim_head		846614	0					
ANR	847137	Identifier	r_str_trim_head		846614	0					
ANR	847138	ArgumentList	( char * ) input + 1		846614	1					
ANR	847139	Argument	( char * ) input + 1		846614	0					
ANR	847140	AdditiveExpression	( char * ) input + 1		846614	0		+			
ANR	847141	CastExpression	( char * ) input		846614	0					
ANR	847142	CastTarget	char *		846614	0					
ANR	847143	Identifier	input		846614	1					
ANR	847144	PrimaryExpression	1		846614	1					
ANR	847145	IdentifierDeclStatement	int n = r_str_word_set0 ( ptr ) ;	6749:2:193296:193325	846614	4	True				
ANR	847146	IdentifierDecl	n = r_str_word_set0 ( ptr )		846614	0					
ANR	847147	IdentifierDeclType	int		846614	0					
ANR	847148	Identifier	n		846614	1					
ANR	847149	AssignmentExpression	n = r_str_word_set0 ( ptr )		846614	2		=			
ANR	847150	Identifier	n		846614	0					
ANR	847151	CallExpression	r_str_word_set0 ( ptr )		846614	1					
ANR	847152	Callee	r_str_word_set0		846614	0					
ANR	847153	Identifier	r_str_word_set0		846614	0					
ANR	847154	ArgumentList	ptr		846614	1					
ANR	847155	Argument	ptr		846614	0					
ANR	847156	Identifier	ptr		846614	0					
ANR	847157	IdentifierDeclStatement	ut64 at = core -> offset ;	6750:2:193329:193351	846614	5	True				
ANR	847158	IdentifierDecl	at = core -> offset		846614	0					
ANR	847159	IdentifierDeclType	ut64		846614	0					
ANR	847160	Identifier	at		846614	1					
ANR	847161	AssignmentExpression	at = core -> offset		846614	2		=			
ANR	847162	Identifier	at		846614	0					
ANR	847163	PtrMemberAccess	core -> offset		846614	1					
ANR	847164	Identifier	core		846614	0					
ANR	847165	Identifier	offset		846614	1					
ANR	847166	IdentifierDeclStatement	ut64 addr = UT64_MAX ;	6751:2:193355:193375	846614	6	True				
ANR	847167	IdentifierDecl	addr = UT64_MAX		846614	0					
ANR	847168	IdentifierDeclType	ut64		846614	0					
ANR	847169	Identifier	addr		846614	1					
ANR	847170	AssignmentExpression	addr = UT64_MAX		846614	2		=			
ANR	847171	Identifier	UT64_MAX		846614	0					
ANR	847172	Identifier	UT64_MAX		846614	1					
ANR	847173	SwitchStatement	switch ( n )		846614	7					
ANR	847174	Condition	n	6752:10:193387:193387	846614	0	True				
ANR	847175	Identifier	n		846614	0					
ANR	847176	CompoundStatement		83:13:2101:2101	846614	1					
ANR	847177	Label	case 2 :	6753:2:193394:193400	846614	0	True				
ANR	847178	ExpressionStatement	"at = r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"	6754:3:193415:193468	846614	1	True				
ANR	847179	AssignmentExpression	"at = r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"		846614	0		=			
ANR	847180	Identifier	at		846614	0					
ANR	847181	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"		846614	1					
ANR	847182	Callee	r_num_math		846614	0					
ANR	847183	Identifier	r_num_math		846614	0					
ANR	847184	ArgumentList	core -> num		846614	1					
ANR	847185	Argument	core -> num		846614	0					
ANR	847186	PtrMemberAccess	core -> num		846614	0					
ANR	847187	Identifier	core		846614	0					
ANR	847188	Identifier	num		846614	1					
ANR	847189	Argument	"r_str_word_get0 ( ptr , 1 )"		846614	1					
ANR	847190	CallExpression	"r_str_word_get0 ( ptr , 1 )"		846614	0					
ANR	847191	Callee	r_str_word_get0		846614	0					
ANR	847192	Identifier	r_str_word_get0		846614	0					
ANR	847193	ArgumentList	ptr		846614	1					
ANR	847194	Argument	ptr		846614	0					
ANR	847195	Identifier	ptr		846614	0					
ANR	847196	Argument	1		846614	1					
ANR	847197	PrimaryExpression	1		846614	0					
ANR	847198	Label	case 1 :	6756:2:193493:193499	846614	2	True				
ANR	847199	ExpressionStatement	"addr = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"	6757:3:193516:193571	846614	3	True				
ANR	847200	AssignmentExpression	"addr = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		846614	0		=			
ANR	847201	Identifier	addr		846614	0					
ANR	847202	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		846614	1					
ANR	847203	Callee	r_num_math		846614	0					
ANR	847204	Identifier	r_num_math		846614	0					
ANR	847205	ArgumentList	core -> num		846614	1					
ANR	847206	Argument	core -> num		846614	0					
ANR	847207	PtrMemberAccess	core -> num		846614	0					
ANR	847208	Identifier	core		846614	0					
ANR	847209	Identifier	num		846614	1					
ANR	847210	Argument	"r_str_word_get0 ( ptr , 0 )"		846614	1					
ANR	847211	CallExpression	"r_str_word_get0 ( ptr , 0 )"		846614	0					
ANR	847212	Callee	r_str_word_get0		846614	0					
ANR	847213	Identifier	r_str_word_get0		846614	0					
ANR	847214	ArgumentList	ptr		846614	1					
ANR	847215	Argument	ptr		846614	0					
ANR	847216	Identifier	ptr		846614	0					
ANR	847217	Argument	0		846614	1					
ANR	847218	PrimaryExpression	0		846614	0					
ANR	847219	BreakStatement	break ;	6758:3:193576:193581	846614	4	True				
ANR	847220	Label	default :	6759:2:193585:193592	846614	5	True				
ANR	847221	Identifier	default		846614	0					
ANR	847222	ExpressionStatement	free ( ptr )	6760:3:193597:193607	846614	6	True				
ANR	847223	CallExpression	free ( ptr )		846614	0					
ANR	847224	Callee	free		846614	0					
ANR	847225	Identifier	free		846614	0					
ANR	847226	ArgumentList	ptr		846614	1					
ANR	847227	Argument	ptr		846614	0					
ANR	847228	Identifier	ptr		846614	0					
ANR	847229	ReturnStatement	return false ;	6761:3:193612:193624	846614	7	True				
ANR	847230	Identifier	false		846614	0					
ANR	847231	ExpressionStatement	"list = r_anal_xrefs_get ( core -> anal , addr )"	6764:2:193667:193709	846614	8	True				
ANR	847232	AssignmentExpression	"list = r_anal_xrefs_get ( core -> anal , addr )"		846614	0		=			
ANR	847233	Identifier	list		846614	0					
ANR	847234	CallExpression	"r_anal_xrefs_get ( core -> anal , addr )"		846614	1					
ANR	847235	Callee	r_anal_xrefs_get		846614	0					
ANR	847236	Identifier	r_anal_xrefs_get		846614	0					
ANR	847237	ArgumentList	core -> anal		846614	1					
ANR	847238	Argument	core -> anal		846614	0					
ANR	847239	PtrMemberAccess	core -> anal		846614	0					
ANR	847240	Identifier	core		846614	0					
ANR	847241	Identifier	anal		846614	1					
ANR	847242	Argument	addr		846614	1					
ANR	847243	Identifier	addr		846614	0					
ANR	847244	Statement	r_list_foreach	6765:2:193713:193726	846614	9	True				
ANR	847245	Statement	(	6765:17:193728:193728	846614	10	True				
ANR	847246	Statement	list	6765:18:193729:193732	846614	11	True				
ANR	847247	Statement	","	6765:22:193733:193733	846614	12	True				
ANR	847248	Statement	iter	6765:24:193735:193738	846614	13	True				
ANR	847249	Statement	","	6765:28:193739:193739	846614	14	True				
ANR	847250	Statement	ref	6765:30:193741:193743	846614	15	True				
ANR	847251	Statement	)	6765:33:193744:193744	846614	16	True				
ANR	847252	CompoundStatement		96:35:2457:2457	846614	17					
ANR	847253	Statement	r_cons_printf	6766:3:193751:193763	846614	0	True				
ANR	847254	Statement	(	6766:17:193765:193765	846614	1	True				
ANR	847255	Statement	"""0x%"""	6766:18:193766:193770	846614	2	True				
ANR	847256	Statement	PFMT64x	6766:23:193771:193777	846614	3	True				
ANR	847257	Statement	""" %s\\n"""	6766:30:193778:193784	846614	4	True				
ANR	847258	Statement	","	6766:37:193785:193785	846614	5	True				
ANR	847259	Statement	ref	6766:39:193787:193789	846614	6	True				
ANR	847260	Statement	->	6766:42:193790:193791	846614	7	True				
ANR	847261	Statement	addr	6766:44:193792:193795	846614	8	True				
ANR	847262	Statement	","	6766:48:193796:193796	846614	9	True				
ANR	847263	Statement	r_anal_xrefs_type_tostring	6766:50:193798:193823	846614	10	True				
ANR	847264	Statement	(	6766:77:193825:193825	846614	11	True				
ANR	847265	Statement	ref	6766:78:193826:193828	846614	12	True				
ANR	847266	Statement	->	6766:81:193829:193830	846614	13	True				
ANR	847267	Statement	type	6766:83:193831:193834	846614	14	True				
ANR	847268	Statement	)	6766:87:193835:193835	846614	15	True				
ANR	847269	Statement	)	6766:88:193836:193836	846614	16	True				
ANR	847270	ExpressionStatement		6766:89:193837:193837	846614	17	True				
ANR	847271	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , ref -> addr , at , ref -> type )"	6767:3:193842:193897	846614	18	True				
ANR	847272	CallExpression	"r_anal_xrefs_set ( core -> anal , ref -> addr , at , ref -> type )"		846614	0					
ANR	847273	Callee	r_anal_xrefs_set		846614	0					
ANR	847274	Identifier	r_anal_xrefs_set		846614	0					
ANR	847275	ArgumentList	core -> anal		846614	1					
ANR	847276	Argument	core -> anal		846614	0					
ANR	847277	PtrMemberAccess	core -> anal		846614	0					
ANR	847278	Identifier	core		846614	0					
ANR	847279	Identifier	anal		846614	1					
ANR	847280	Argument	ref -> addr		846614	1					
ANR	847281	PtrMemberAccess	ref -> addr		846614	0					
ANR	847282	Identifier	ref		846614	0					
ANR	847283	Identifier	addr		846614	1					
ANR	847284	Argument	at		846614	2					
ANR	847285	Identifier	at		846614	0					
ANR	847286	Argument	ref -> type		846614	3					
ANR	847287	PtrMemberAccess	ref -> type		846614	0					
ANR	847288	Identifier	ref		846614	0					
ANR	847289	Identifier	type		846614	1					
ANR	847290	ExpressionStatement	r_list_free ( list )	6769:2:193905:193923	846614	18	True				
ANR	847291	CallExpression	r_list_free ( list )		846614	0					
ANR	847292	Callee	r_list_free		846614	0					
ANR	847293	Identifier	r_list_free		846614	0					
ANR	847294	ArgumentList	list		846614	1					
ANR	847295	Argument	list		846614	0					
ANR	847296	Identifier	list		846614	0					
ANR	847297	ExpressionStatement	free ( ptr )	6770:2:193927:193937	846614	19	True				
ANR	847298	CallExpression	free ( ptr )		846614	0					
ANR	847299	Callee	free		846614	0					
ANR	847300	Identifier	free		846614	0					
ANR	847301	ArgumentList	ptr		846614	1					
ANR	847302	Argument	ptr		846614	0					
ANR	847303	Identifier	ptr		846614	0					
ANR	847304	BreakStatement	break ;	6771:3:193942:193947	846614	17	True				
ANR	847305	Label	case 't' :	6772:1:193950:193958	846614	18	True				
ANR	847306	CompoundStatement		110:2:2821:2866	846614	19					
ANR	847307	IdentifierDeclStatement	RList * list = NULL ;	6773:2:193973:193991	846614	0	True				
ANR	847308	IdentifierDecl	* list = NULL		846614	0					
ANR	847309	IdentifierDeclType	RList *		846614	0					
ANR	847310	Identifier	list		846614	1					
ANR	847311	AssignmentExpression	* list = NULL		846614	2		=			
ANR	847312	Identifier	NULL		846614	0					
ANR	847313	Identifier	NULL		846614	1					
ANR	847314	IdentifierDeclStatement	RAnalFunction * fcn ;	6774:2:193995:194013	846614	1	True				
ANR	847315	IdentifierDecl	* fcn		846614	0					
ANR	847316	IdentifierDeclType	RAnalFunction *		846614	0					
ANR	847317	Identifier	fcn		846614	1					
ANR	847318	IdentifierDeclStatement	RAnalRef * ref ;	6775:2:194017:194030	846614	2	True				
ANR	847319	IdentifierDecl	* ref		846614	0					
ANR	847320	IdentifierDeclType	RAnalRef *		846614	0					
ANR	847321	Identifier	ref		846614	1					
ANR	847322	IdentifierDeclStatement	RListIter * iter ;	6776:2:194034:194049	846614	3	True				
ANR	847323	IdentifierDecl	* iter		846614	0					
ANR	847324	IdentifierDeclType	RListIter *		846614	0					
ANR	847325	Identifier	iter		846614	1					
ANR	847326	IdentifierDeclStatement	"char * space = strchr ( input , ' ' ) ;"	6777:2:194053:194086	846614	4	True				
ANR	847327	IdentifierDecl	"* space = strchr ( input , ' ' )"		846614	0					
ANR	847328	IdentifierDeclType	char *		846614	0					
ANR	847329	Identifier	space		846614	1					
ANR	847330	AssignmentExpression	"* space = strchr ( input , ' ' )"		846614	2		=			
ANR	847331	Identifier	space		846614	0					
ANR	847332	CallExpression	"strchr ( input , ' ' )"		846614	1					
ANR	847333	Callee	strchr		846614	0					
ANR	847334	Identifier	strchr		846614	0					
ANR	847335	ArgumentList	input		846614	1					
ANR	847336	Argument	input		846614	0					
ANR	847337	Identifier	input		846614	0					
ANR	847338	Argument	' '		846614	1					
ANR	847339	PrimaryExpression	' '		846614	0					
ANR	847340	IdentifierDeclStatement	char * tmp = NULL ;	6778:2:194090:194106	846614	5	True				
ANR	847341	IdentifierDecl	* tmp = NULL		846614	0					
ANR	847342	IdentifierDeclType	char *		846614	0					
ANR	847343	Identifier	tmp		846614	1					
ANR	847344	AssignmentExpression	* tmp = NULL		846614	2		=			
ANR	847345	Identifier	NULL		846614	0					
ANR	847346	Identifier	NULL		846614	1					
ANR	847347	IdentifierDeclStatement	char * name = space ? strdup ( space + 1 ) : NULL ;	6779:2:194110:194155	846614	6	True				
ANR	847348	IdentifierDecl	* name = space ? strdup ( space + 1 ) : NULL		846614	0					
ANR	847349	IdentifierDeclType	char *		846614	0					
ANR	847350	Identifier	name		846614	1					
ANR	847351	AssignmentExpression	* name = space ? strdup ( space + 1 ) : NULL		846614	2		=			
ANR	847352	Identifier	name		846614	0					
ANR	847353	ConditionalExpression	space ? strdup ( space + 1 ) : NULL		846614	1					
ANR	847354	Condition	space		846614	0					
ANR	847355	Identifier	space		846614	0					
ANR	847356	CallExpression	strdup ( space + 1 )		846614	1					
ANR	847357	Callee	strdup		846614	0					
ANR	847358	Identifier	strdup		846614	0					
ANR	847359	ArgumentList	space + 1		846614	1					
ANR	847360	Argument	space + 1		846614	0					
ANR	847361	AdditiveExpression	space + 1		846614	0		+			
ANR	847362	Identifier	space		846614	0					
ANR	847363	PrimaryExpression	1		846614	1					
ANR	847364	Identifier	NULL		846614	2					
ANR	847365	IfStatement	"if ( name && ( tmp = strchr ( name , ' ' ) ) )"		846614	7					
ANR	847366	Condition	"name && ( tmp = strchr ( name , ' ' ) )"	6781:6:194164:194197	846614	0	True				
ANR	847367	AndExpression	"name && ( tmp = strchr ( name , ' ' ) )"		846614	0		&&			
ANR	847368	Identifier	name		846614	0					
ANR	847369	AssignmentExpression	"tmp = strchr ( name , ' ' )"		846614	1		=			
ANR	847370	Identifier	tmp		846614	0					
ANR	847371	CallExpression	"strchr ( name , ' ' )"		846614	1					
ANR	847372	Callee	strchr		846614	0					
ANR	847373	Identifier	strchr		846614	0					
ANR	847374	ArgumentList	name		846614	1					
ANR	847375	Argument	name		846614	0					
ANR	847376	Identifier	name		846614	0					
ANR	847377	Argument	' '		846614	1					
ANR	847378	PrimaryExpression	' '		846614	0					
ANR	847379	CompoundStatement		115:3:2960:3020	846614	1					
ANR	847380	IdentifierDeclStatement	char * varname = tmp + 1 ;	6782:3:194205:194228	846614	0	True				
ANR	847381	IdentifierDecl	* varname = tmp + 1		846614	0					
ANR	847382	IdentifierDeclType	char *		846614	0					
ANR	847383	Identifier	varname		846614	1					
ANR	847384	AssignmentExpression	* varname = tmp + 1		846614	2		=			
ANR	847385	Identifier	varname		846614	0					
ANR	847386	AdditiveExpression	tmp + 1		846614	1		+			
ANR	847387	Identifier	tmp		846614	0					
ANR	847388	PrimaryExpression	1		846614	1					
ANR	847389	ExpressionStatement	* tmp = '\\0'	6783:3:194233:194244	846614	1	True				
ANR	847390	AssignmentExpression	* tmp = '\\0'		846614	0		=			
ANR	847391	UnaryOperationExpression	* tmp		846614	0					
ANR	847392	UnaryOperator	*		846614	0					
ANR	847393	Identifier	tmp		846614	1					
ANR	847394	PrimaryExpression	'\\0'		846614	1					
ANR	847395	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_fcn_find_name ( core -> anal , name ) ;"	6784:3:194249:194309	846614	2	True				
ANR	847396	IdentifierDecl	"* fcn = r_anal_fcn_find_name ( core -> anal , name )"		846614	0					
ANR	847397	IdentifierDeclType	RAnalFunction *		846614	0					
ANR	847398	Identifier	fcn		846614	1					
ANR	847399	AssignmentExpression	"* fcn = r_anal_fcn_find_name ( core -> anal , name )"		846614	2		=			
ANR	847400	Identifier	fcn		846614	0					
ANR	847401	CallExpression	"r_anal_fcn_find_name ( core -> anal , name )"		846614	1					
ANR	847402	Callee	r_anal_fcn_find_name		846614	0					
ANR	847403	Identifier	r_anal_fcn_find_name		846614	0					
ANR	847404	ArgumentList	core -> anal		846614	1					
ANR	847405	Argument	core -> anal		846614	0					
ANR	847406	PtrMemberAccess	core -> anal		846614	0					
ANR	847407	Identifier	core		846614	0					
ANR	847408	Identifier	anal		846614	1					
ANR	847409	Argument	name		846614	1					
ANR	847410	Identifier	name		846614	0					
ANR	847411	IfStatement	if ( fcn )		846614	3					
ANR	847412	Condition	fcn	6785:7:194318:194320	846614	0	True				
ANR	847413	Identifier	fcn		846614	0					
ANR	847414	CompoundStatement		117:4:3040:3110	846614	1					
ANR	847415	IdentifierDeclStatement	"RAnalVar * var = r_anal_var_get_byname ( core -> anal , fcn -> addr , varname ) ;"	6786:4:194329:194399	846614	0	True				
ANR	847416	IdentifierDecl	"* var = r_anal_var_get_byname ( core -> anal , fcn -> addr , varname )"		846614	0					
ANR	847417	IdentifierDeclType	RAnalVar *		846614	0					
ANR	847418	Identifier	var		846614	1					
ANR	847419	AssignmentExpression	"* var = r_anal_var_get_byname ( core -> anal , fcn -> addr , varname )"		846614	2		=			
ANR	847420	Identifier	var		846614	0					
ANR	847421	CallExpression	"r_anal_var_get_byname ( core -> anal , fcn -> addr , varname )"		846614	1					
ANR	847422	Callee	r_anal_var_get_byname		846614	0					
ANR	847423	Identifier	r_anal_var_get_byname		846614	0					
ANR	847424	ArgumentList	core -> anal		846614	1					
ANR	847425	Argument	core -> anal		846614	0					
ANR	847426	PtrMemberAccess	core -> anal		846614	0					
ANR	847427	Identifier	core		846614	0					
ANR	847428	Identifier	anal		846614	1					
ANR	847429	Argument	fcn -> addr		846614	1					
ANR	847430	PtrMemberAccess	fcn -> addr		846614	0					
ANR	847431	Identifier	fcn		846614	0					
ANR	847432	Identifier	addr		846614	1					
ANR	847433	Argument	varname		846614	2					
ANR	847434	Identifier	varname		846614	0					
ANR	847435	IfStatement	if ( var )		846614	1					
ANR	847436	Condition	var	6787:8:194409:194411	846614	0	True				
ANR	847437	Identifier	var		846614	0					
ANR	847438	CompoundStatement		126:5:3499:3568	846614	1					
ANR	847439	IdentifierDeclStatement	"const char * rvar = var_ref_list ( fcn -> addr , var -> delta , 'R' ) ;"	6788:5:194421:194481	846614	0	True				
ANR	847440	IdentifierDecl	"* rvar = var_ref_list ( fcn -> addr , var -> delta , 'R' )"		846614	0					
ANR	847441	IdentifierDeclType	const char *		846614	0					
ANR	847442	Identifier	rvar		846614	1					
ANR	847443	AssignmentExpression	"* rvar = var_ref_list ( fcn -> addr , var -> delta , 'R' )"		846614	2		=			
ANR	847444	Identifier	rvar		846614	0					
ANR	847445	CallExpression	"var_ref_list ( fcn -> addr , var -> delta , 'R' )"		846614	1					
ANR	847446	Callee	var_ref_list		846614	0					
ANR	847447	Identifier	var_ref_list		846614	0					
ANR	847448	ArgumentList	fcn -> addr		846614	1					
ANR	847449	Argument	fcn -> addr		846614	0					
ANR	847450	PtrMemberAccess	fcn -> addr		846614	0					
ANR	847451	Identifier	fcn		846614	0					
ANR	847452	Identifier	addr		846614	1					
ANR	847453	Argument	var -> delta		846614	1					
ANR	847454	PtrMemberAccess	var -> delta		846614	0					
ANR	847455	Identifier	var		846614	0					
ANR	847456	Identifier	delta		846614	1					
ANR	847457	Argument	'R'		846614	2					
ANR	847458	PrimaryExpression	'R'		846614	0					
ANR	847459	IdentifierDeclStatement	"const char * wvar = var_ref_list ( fcn -> addr , var -> delta , 'W' ) ;"	6789:5:194488:194548	846614	1	True				
ANR	847460	IdentifierDecl	"* wvar = var_ref_list ( fcn -> addr , var -> delta , 'W' )"		846614	0					
ANR	847461	IdentifierDeclType	const char *		846614	0					
ANR	847462	Identifier	wvar		846614	1					
ANR	847463	AssignmentExpression	"* wvar = var_ref_list ( fcn -> addr , var -> delta , 'W' )"		846614	2		=			
ANR	847464	Identifier	wvar		846614	0					
ANR	847465	CallExpression	"var_ref_list ( fcn -> addr , var -> delta , 'W' )"		846614	1					
ANR	847466	Callee	var_ref_list		846614	0					
ANR	847467	Identifier	var_ref_list		846614	0					
ANR	847468	ArgumentList	fcn -> addr		846614	1					
ANR	847469	Argument	fcn -> addr		846614	0					
ANR	847470	PtrMemberAccess	fcn -> addr		846614	0					
ANR	847471	Identifier	fcn		846614	0					
ANR	847472	Identifier	addr		846614	1					
ANR	847473	Argument	var -> delta		846614	1					
ANR	847474	PtrMemberAccess	var -> delta		846614	0					
ANR	847475	Identifier	var		846614	0					
ANR	847476	Identifier	delta		846614	1					
ANR	847477	Argument	'W'		846614	2					
ANR	847478	PrimaryExpression	'W'		846614	0					
ANR	847479	IdentifierDeclStatement	"char * res = sdb_get ( core -> anal -> sdb_fcns , rvar , 0 ) ;"	6790:5:194555:194606	846614	2	True				
ANR	847480	IdentifierDecl	"* res = sdb_get ( core -> anal -> sdb_fcns , rvar , 0 )"		846614	0					
ANR	847481	IdentifierDeclType	char *		846614	0					
ANR	847482	Identifier	res		846614	1					
ANR	847483	AssignmentExpression	"* res = sdb_get ( core -> anal -> sdb_fcns , rvar , 0 )"		846614	2		=			
ANR	847484	Identifier	res		846614	0					
ANR	847485	CallExpression	"sdb_get ( core -> anal -> sdb_fcns , rvar , 0 )"		846614	1					
ANR	847486	Callee	sdb_get		846614	0					
ANR	847487	Identifier	sdb_get		846614	0					
ANR	847488	ArgumentList	core -> anal -> sdb_fcns		846614	1					
ANR	847489	Argument	core -> anal -> sdb_fcns		846614	0					
ANR	847490	PtrMemberAccess	core -> anal -> sdb_fcns		846614	0					
ANR	847491	PtrMemberAccess	core -> anal		846614	0					
ANR	847492	Identifier	core		846614	0					
ANR	847493	Identifier	anal		846614	1					
ANR	847494	Identifier	sdb_fcns		846614	1					
ANR	847495	Argument	rvar		846614	1					
ANR	847496	Identifier	rvar		846614	0					
ANR	847497	Argument	0		846614	2					
ANR	847498	PrimaryExpression	0		846614	0					
ANR	847499	IdentifierDeclStatement	"char * res1 = sdb_get ( core -> anal -> sdb_fcns , wvar , 0 ) ;"	6791:5:194613:194665	846614	3	True				
ANR	847500	IdentifierDecl	"* res1 = sdb_get ( core -> anal -> sdb_fcns , wvar , 0 )"		846614	0					
ANR	847501	IdentifierDeclType	char *		846614	0					
ANR	847502	Identifier	res1		846614	1					
ANR	847503	AssignmentExpression	"* res1 = sdb_get ( core -> anal -> sdb_fcns , wvar , 0 )"		846614	2		=			
ANR	847504	Identifier	res1		846614	0					
ANR	847505	CallExpression	"sdb_get ( core -> anal -> sdb_fcns , wvar , 0 )"		846614	1					
ANR	847506	Callee	sdb_get		846614	0					
ANR	847507	Identifier	sdb_get		846614	0					
ANR	847508	ArgumentList	core -> anal -> sdb_fcns		846614	1					
ANR	847509	Argument	core -> anal -> sdb_fcns		846614	0					
ANR	847510	PtrMemberAccess	core -> anal -> sdb_fcns		846614	0					
ANR	847511	PtrMemberAccess	core -> anal		846614	0					
ANR	847512	Identifier	core		846614	0					
ANR	847513	Identifier	anal		846614	1					
ANR	847514	Identifier	sdb_fcns		846614	1					
ANR	847515	Argument	wvar		846614	1					
ANR	847516	Identifier	wvar		846614	0					
ANR	847517	Argument	0		846614	2					
ANR	847518	PrimaryExpression	0		846614	0					
ANR	847519	IdentifierDeclStatement	const char * ref ;	6792:5:194672:194687	846614	4	True				
ANR	847520	IdentifierDecl	* ref		846614	0					
ANR	847521	IdentifierDeclType	const char *		846614	0					
ANR	847522	Identifier	ref		846614	1					
ANR	847523	IdentifierDeclStatement	RListIter * iter ;	6793:5:194694:194709	846614	5	True				
ANR	847524	IdentifierDecl	* iter		846614	0					
ANR	847525	IdentifierDeclType	RListIter *		846614	0					
ANR	847526	Identifier	iter		846614	1					
ANR	847527	IdentifierDeclStatement	"RList * list = ( res && * res ) ? r_str_split_list ( res , "","" , 0 ) : NULL ;"	6794:5:194716:194781	846614	6	True				
ANR	847528	IdentifierDecl	"* list = ( res && * res ) ? r_str_split_list ( res , "","" , 0 ) : NULL"		846614	0					
ANR	847529	IdentifierDeclType	RList *		846614	0					
ANR	847530	Identifier	list		846614	1					
ANR	847531	AssignmentExpression	"* list = ( res && * res ) ? r_str_split_list ( res , "","" , 0 ) : NULL"		846614	2		=			
ANR	847532	Identifier	list		846614	0					
ANR	847533	ConditionalExpression	"( res && * res ) ? r_str_split_list ( res , "","" , 0 ) : NULL"		846614	1					
ANR	847534	Condition	res && * res		846614	0					
ANR	847535	AndExpression	res && * res		846614	0		&&			
ANR	847536	Identifier	res		846614	0					
ANR	847537	UnaryOperationExpression	* res		846614	1					
ANR	847538	UnaryOperator	*		846614	0					
ANR	847539	Identifier	res		846614	1					
ANR	847540	CallExpression	"r_str_split_list ( res , "","" , 0 )"		846614	1					
ANR	847541	Callee	r_str_split_list		846614	0					
ANR	847542	Identifier	r_str_split_list		846614	0					
ANR	847543	ArgumentList	res		846614	1					
ANR	847544	Argument	res		846614	0					
ANR	847545	Identifier	res		846614	0					
ANR	847546	Argument	""","""		846614	1					
ANR	847547	PrimaryExpression	""","""		846614	0					
ANR	847548	Argument	0		846614	2					
ANR	847549	PrimaryExpression	0		846614	0					
ANR	847550	Identifier	NULL		846614	2					
ANR	847551	IdentifierDeclStatement	"RList * list1 = ( res1 && * res1 ) ? r_str_split_list ( res1 , "","" , 0 ) : NULL ;"	6795:5:194788:194857	846614	7	True				
ANR	847552	IdentifierDecl	"* list1 = ( res1 && * res1 ) ? r_str_split_list ( res1 , "","" , 0 ) : NULL"		846614	0					
ANR	847553	IdentifierDeclType	RList *		846614	0					
ANR	847554	Identifier	list1		846614	1					
ANR	847555	AssignmentExpression	"* list1 = ( res1 && * res1 ) ? r_str_split_list ( res1 , "","" , 0 ) : NULL"		846614	2		=			
ANR	847556	Identifier	list1		846614	0					
ANR	847557	ConditionalExpression	"( res1 && * res1 ) ? r_str_split_list ( res1 , "","" , 0 ) : NULL"		846614	1					
ANR	847558	Condition	res1 && * res1		846614	0					
ANR	847559	AndExpression	res1 && * res1		846614	0		&&			
ANR	847560	Identifier	res1		846614	0					
ANR	847561	UnaryOperationExpression	* res1		846614	1					
ANR	847562	UnaryOperator	*		846614	0					
ANR	847563	Identifier	res1		846614	1					
ANR	847564	CallExpression	"r_str_split_list ( res1 , "","" , 0 )"		846614	1					
ANR	847565	Callee	r_str_split_list		846614	0					
ANR	847566	Identifier	r_str_split_list		846614	0					
ANR	847567	ArgumentList	res1		846614	1					
ANR	847568	Argument	res1		846614	0					
ANR	847569	Identifier	res1		846614	0					
ANR	847570	Argument	""","""		846614	1					
ANR	847571	PrimaryExpression	""","""		846614	0					
ANR	847572	Argument	0		846614	2					
ANR	847573	PrimaryExpression	0		846614	0					
ANR	847574	Identifier	NULL		846614	2					
ANR	847575	ExpressionStatement	"r_list_join ( list , list1 )"	6796:5:194864:194890	846614	8	True				
ANR	847576	CallExpression	"r_list_join ( list , list1 )"		846614	0					
ANR	847577	Callee	r_list_join		846614	0					
ANR	847578	Identifier	r_list_join		846614	0					
ANR	847579	ArgumentList	list		846614	1					
ANR	847580	Argument	list		846614	0					
ANR	847581	Identifier	list		846614	0					
ANR	847582	Argument	list1		846614	1					
ANR	847583	Identifier	list1		846614	0					
ANR	847584	Statement	r_list_foreach	6797:5:194897:194910	846614	9	True				
ANR	847585	Statement	(	6797:20:194912:194912	846614	10	True				
ANR	847586	Statement	list	6797:21:194913:194916	846614	11	True				
ANR	847587	Statement	","	6797:25:194917:194917	846614	12	True				
ANR	847588	Statement	iter	6797:27:194919:194922	846614	13	True				
ANR	847589	Statement	","	6797:31:194923:194923	846614	14	True				
ANR	847590	Statement	ref	6797:33:194925:194927	846614	15	True				
ANR	847591	Statement	)	6797:36:194928:194928	846614	16	True				
ANR	847592	CompoundStatement		130:6:3691:3751	846614	17					
ANR	847593	IdentifierDeclStatement	"ut64 addr = r_num_math ( NULL , ref ) ;"	6798:6:194938:194972	846614	0	True				
ANR	847594	IdentifierDecl	"addr = r_num_math ( NULL , ref )"		846614	0					
ANR	847595	IdentifierDeclType	ut64		846614	0					
ANR	847596	Identifier	addr		846614	1					
ANR	847597	AssignmentExpression	"addr = r_num_math ( NULL , ref )"		846614	2		=			
ANR	847598	Identifier	addr		846614	0					
ANR	847599	CallExpression	"r_num_math ( NULL , ref )"		846614	1					
ANR	847600	Callee	r_num_math		846614	0					
ANR	847601	Identifier	r_num_math		846614	0					
ANR	847602	ArgumentList	NULL		846614	1					
ANR	847603	Argument	NULL		846614	0					
ANR	847604	Identifier	NULL		846614	0					
ANR	847605	Argument	ref		846614	1					
ANR	847606	Identifier	ref		846614	0					
ANR	847607	IdentifierDeclStatement	"char * op = get_buf_asm ( core , core -> offset , addr , fcn , true ) ;"	6799:6:194980:195040	846614	1	True				
ANR	847608	IdentifierDecl	"* op = get_buf_asm ( core , core -> offset , addr , fcn , true )"		846614	0					
ANR	847609	IdentifierDeclType	char *		846614	0					
ANR	847610	Identifier	op		846614	1					
ANR	847611	AssignmentExpression	"* op = get_buf_asm ( core , core -> offset , addr , fcn , true )"		846614	2		=			
ANR	847612	Identifier	op		846614	0					
ANR	847613	CallExpression	"get_buf_asm ( core , core -> offset , addr , fcn , true )"		846614	1					
ANR	847614	Callee	get_buf_asm		846614	0					
ANR	847615	Identifier	get_buf_asm		846614	0					
ANR	847616	ArgumentList	core		846614	1					
ANR	847617	Argument	core		846614	0					
ANR	847618	Identifier	core		846614	0					
ANR	847619	Argument	core -> offset		846614	1					
ANR	847620	PtrMemberAccess	core -> offset		846614	0					
ANR	847621	Identifier	core		846614	0					
ANR	847622	Identifier	offset		846614	1					
ANR	847623	Argument	addr		846614	2					
ANR	847624	Identifier	addr		846614	0					
ANR	847625	Argument	fcn		846614	3					
ANR	847626	Identifier	fcn		846614	0					
ANR	847627	Argument	true		846614	4					
ANR	847628	Identifier	true		846614	0					
ANR	847629	Statement	r_cons_printf	6800:6:195048:195060	846614	2	True				
ANR	847630	Statement	(	6800:20:195062:195062	846614	3	True				
ANR	847631	Statement	"""%s 0x%"""	6800:21:195063:195070	846614	4	True				
ANR	847632	Statement	PFMT64x	6800:29:195071:195077	846614	5	True				
ANR	847633	Statement	""" [DATA] %s\\n"""	6800:36:195078:195091	846614	6	True				
ANR	847634	Statement	","	6800:50:195092:195092	846614	7	True				
ANR	847635	Statement	fcn	6800:52:195094:195096	846614	8	True				
ANR	847636	Statement	?	6800:55:195097:195097	846614	9	True				
ANR	847637	Statement	fcn	6800:58:195100:195102	846614	10	True				
ANR	847638	Statement	->	6800:61:195103:195104	846614	11	True				
ANR	847639	Label	name :	6800:63:195105:195110	846614	12	True				
ANR	847640	Identifier	name		846614	0					
ANR	847641	Statement	"""(nofunc)"""	6800:70:195112:195121	846614	13	True				
ANR	847642	Statement	","	6800:80:195122:195122	846614	14	True				
ANR	847643	Statement	addr	6800:82:195124:195127	846614	15	True				
ANR	847644	Statement	","	6800:86:195128:195128	846614	16	True				
ANR	847645	Statement	op	6800:88:195130:195131	846614	17	True				
ANR	847646	Statement	)	6800:90:195132:195132	846614	18	True				
ANR	847647	ExpressionStatement		6800:91:195133:195133	846614	19	True				
ANR	847648	ExpressionStatement	free ( op )	6801:6:195141:195150	846614	20	True				
ANR	847649	CallExpression	free ( op )		846614	0					
ANR	847650	Callee	free		846614	0					
ANR	847651	Identifier	free		846614	0					
ANR	847652	ArgumentList	op		846614	1					
ANR	847653	Argument	op		846614	0					
ANR	847654	Identifier	op		846614	0					
ANR	847655	ExpressionStatement	free ( res )	6803:5:195164:195174	846614	18	True				
ANR	847656	CallExpression	free ( res )		846614	0					
ANR	847657	Callee	free		846614	0					
ANR	847658	Identifier	free		846614	0					
ANR	847659	ArgumentList	res		846614	1					
ANR	847660	Argument	res		846614	0					
ANR	847661	Identifier	res		846614	0					
ANR	847662	ExpressionStatement	free ( res1 )	6804:5:195181:195192	846614	19	True				
ANR	847663	CallExpression	free ( res1 )		846614	0					
ANR	847664	Callee	free		846614	0					
ANR	847665	Identifier	free		846614	0					
ANR	847666	ArgumentList	res1		846614	1					
ANR	847667	Argument	res1		846614	0					
ANR	847668	Identifier	res1		846614	0					
ANR	847669	ExpressionStatement	R_FREE ( name )	6805:5:195199:195212	846614	20	True				
ANR	847670	CallExpression	R_FREE ( name )		846614	0					
ANR	847671	Callee	R_FREE		846614	0					
ANR	847672	Identifier	R_FREE		846614	0					
ANR	847673	ArgumentList	name		846614	1					
ANR	847674	Argument	name		846614	0					
ANR	847675	Identifier	name		846614	0					
ANR	847676	ExpressionStatement	r_anal_var_free ( var )	6806:5:195219:195240	846614	21	True				
ANR	847677	CallExpression	r_anal_var_free ( var )		846614	0					
ANR	847678	Callee	r_anal_var_free		846614	0					
ANR	847679	Identifier	r_anal_var_free		846614	0					
ANR	847680	ArgumentList	var		846614	1					
ANR	847681	Argument	var		846614	0					
ANR	847682	Identifier	var		846614	0					
ANR	847683	ExpressionStatement	r_list_free ( list )	6807:5:195247:195265	846614	22	True				
ANR	847684	CallExpression	r_list_free ( list )		846614	0					
ANR	847685	Callee	r_list_free		846614	0					
ANR	847686	Identifier	r_list_free		846614	0					
ANR	847687	ArgumentList	list		846614	1					
ANR	847688	Argument	list		846614	0					
ANR	847689	Identifier	list		846614	0					
ANR	847690	ExpressionStatement	r_list_free ( list1 )	6808:5:195272:195291	846614	23	True				
ANR	847691	CallExpression	r_list_free ( list1 )		846614	0					
ANR	847692	Callee	r_list_free		846614	0					
ANR	847693	Identifier	r_list_free		846614	0					
ANR	847694	ArgumentList	list1		846614	1					
ANR	847695	Argument	list1		846614	0					
ANR	847696	Identifier	list1		846614	0					
ANR	847697	BreakStatement	break ;	6809:5:195298:195303	846614	24	True				
ANR	847698	IfStatement	if ( space )		846614	8					
ANR	847699	Condition	space	6813:6:195326:195330	846614	0	True				
ANR	847700	Identifier	space		846614	0					
ANR	847701	CompoundStatement		144:13:4044:4044	846614	1					
ANR	847702	ExpressionStatement	"addr = r_num_math ( core -> num , space + 1 )"	6814:3:195338:195378	846614	0	True				
ANR	847703	AssignmentExpression	"addr = r_num_math ( core -> num , space + 1 )"		846614	0		=			
ANR	847704	Identifier	addr		846614	0					
ANR	847705	CallExpression	"r_num_math ( core -> num , space + 1 )"		846614	1					
ANR	847706	Callee	r_num_math		846614	0					
ANR	847707	Identifier	r_num_math		846614	0					
ANR	847708	ArgumentList	core -> num		846614	1					
ANR	847709	Argument	core -> num		846614	0					
ANR	847710	PtrMemberAccess	core -> num		846614	0					
ANR	847711	Identifier	core		846614	0					
ANR	847712	Identifier	num		846614	1					
ANR	847713	Argument	space + 1		846614	1					
ANR	847714	AdditiveExpression	space + 1		846614	0		+			
ANR	847715	Identifier	space		846614	0					
ANR	847716	PrimaryExpression	1		846614	1					
ANR	847717	ElseStatement	else		846614	0					
ANR	847718	CompoundStatement		146:9:4100:4100	846614	0					
ANR	847719	ExpressionStatement	addr = core -> offset	6816:3:195394:195413	846614	0	True				
ANR	847720	AssignmentExpression	addr = core -> offset		846614	0		=			
ANR	847721	Identifier	addr		846614	0					
ANR	847722	PtrMemberAccess	core -> offset		846614	1					
ANR	847723	Identifier	core		846614	0					
ANR	847724	Identifier	offset		846614	1					
ANR	847725	ExpressionStatement	"list = r_anal_xrefs_get ( core -> anal , addr )"	6818:2:195421:195463	846614	9	True				
ANR	847726	AssignmentExpression	"list = r_anal_xrefs_get ( core -> anal , addr )"		846614	0		=			
ANR	847727	Identifier	list		846614	0					
ANR	847728	CallExpression	"r_anal_xrefs_get ( core -> anal , addr )"		846614	1					
ANR	847729	Callee	r_anal_xrefs_get		846614	0					
ANR	847730	Identifier	r_anal_xrefs_get		846614	0					
ANR	847731	ArgumentList	core -> anal		846614	1					
ANR	847732	Argument	core -> anal		846614	0					
ANR	847733	PtrMemberAccess	core -> anal		846614	0					
ANR	847734	Identifier	core		846614	0					
ANR	847735	Identifier	anal		846614	1					
ANR	847736	Argument	addr		846614	1					
ANR	847737	Identifier	addr		846614	0					
ANR	847738	IfStatement	if ( list )		846614	10					
ANR	847739	Condition	list	6819:6:195471:195474	846614	0	True				
ANR	847740	Identifier	list		846614	0					
ANR	847741	CompoundStatement		150:12:4188:4188	846614	1					
ANR	847742	IfStatement	if ( input [ 1 ] == 'q' )		846614	0					
ANR	847743	Condition	input [ 1 ] == 'q'	6820:7:195486:195500	846614	0	True				
ANR	847744	EqualityExpression	input [ 1 ] == 'q'		846614	0		==			
ANR	847745	ArrayIndexing	input [ 1 ]		846614	0					
ANR	847746	Identifier	input		846614	0					
ANR	847747	PrimaryExpression	1		846614	1					
ANR	847748	PrimaryExpression	'q'		846614	1					
ANR	847749	CompoundStatement		151:24:4214:4214	846614	1					
ANR	847750	Statement	r_list_foreach	6821:4:195519:195532	846614	0	True				
ANR	847751	Statement	(	6821:19:195534:195534	846614	1	True				
ANR	847752	Statement	list	6821:20:195535:195538	846614	2	True				
ANR	847753	Statement	","	6821:24:195539:195539	846614	3	True				
ANR	847754	Statement	iter	6821:26:195541:195544	846614	4	True				
ANR	847755	Statement	","	6821:30:195545:195545	846614	5	True				
ANR	847756	Statement	ref	6821:32:195547:195549	846614	6	True				
ANR	847757	Statement	)	6821:35:195550:195550	846614	7	True				
ANR	847758	CompoundStatement		152:37:4263:4263	846614	8					
ANR	847759	Statement	r_cons_printf	6822:5:195559:195571	846614	0	True				
ANR	847760	Statement	(	6822:19:195573:195573	846614	1	True				
ANR	847761	Statement	"""0x%"""	6822:20:195574:195578	846614	2	True				
ANR	847762	Statement	PFMT64x	6822:26:195580:195586	846614	3	True				
ANR	847763	Statement	"""\\n"""	6822:34:195588:195591	846614	4	True				
ANR	847764	Statement	","	6822:38:195592:195592	846614	5	True				
ANR	847765	Statement	ref	6822:40:195594:195596	846614	6	True				
ANR	847766	Statement	->	6822:43:195597:195598	846614	7	True				
ANR	847767	Statement	addr	6822:45:195599:195602	846614	8	True				
ANR	847768	Statement	)	6822:49:195603:195603	846614	9	True				
ANR	847769	ExpressionStatement		6822:50:195604:195604	846614	10	True				
ANR	847770	ElseStatement	else		846614	0					
ANR	847771	IfStatement	if ( input [ 1 ] == 'j' )		846614	0					
ANR	847772	Condition	input [ 1 ] == 'j'	6824:14:195626:195640	846614	0	True				
ANR	847773	EqualityExpression	input [ 1 ] == 'j'		846614	0		==			
ANR	847774	ArrayIndexing	input [ 1 ]		846614	0					
ANR	847775	Identifier	input		846614	0					
ANR	847776	PrimaryExpression	1		846614	1					
ANR	847777	PrimaryExpression	'j'		846614	1					
ANR	847778	CompoundStatement		156:4:4370:4388	846614	1					
ANR	847779	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	6825:4:195659:195677	846614	0	True				
ANR	847780	IdentifierDecl	* pj = pj_new ( )		846614	0					
ANR	847781	IdentifierDeclType	PJ *		846614	0					
ANR	847782	Identifier	pj		846614	1					
ANR	847783	AssignmentExpression	* pj = pj_new ( )		846614	2		=			
ANR	847784	Identifier	pj		846614	0					
ANR	847785	CallExpression	pj_new ( )		846614	1					
ANR	847786	Callee	pj_new		846614	0					
ANR	847787	Identifier	pj_new		846614	0					
ANR	847788	ArgumentList			846614	1					
ANR	847789	IfStatement	if ( ! pj )		846614	1					
ANR	847790	Condition	! pj	6826:8:195687:195689	846614	0	True				
ANR	847791	UnaryOperationExpression	! pj		846614	0					
ANR	847792	UnaryOperator	!		846614	0					
ANR	847793	Identifier	pj		846614	1					
ANR	847794	CompoundStatement		157:13:4403:4403	846614	1					
ANR	847795	ReturnStatement	return false ;	6827:5:195699:195711	846614	0	True				
ANR	847796	Identifier	false		846614	0					
ANR	847797	ExpressionStatement	pj_a ( pj )	6829:4:195723:195732	846614	2	True				
ANR	847798	CallExpression	pj_a ( pj )		846614	0					
ANR	847799	Callee	pj_a		846614	0					
ANR	847800	Identifier	pj_a		846614	0					
ANR	847801	ArgumentList	pj		846614	1					
ANR	847802	Argument	pj		846614	0					
ANR	847803	Identifier	pj		846614	0					
ANR	847804	Statement	r_list_foreach	6830:4:195738:195751	846614	3	True				
ANR	847805	Statement	(	6830:19:195753:195753	846614	4	True				
ANR	847806	Statement	list	6830:20:195754:195757	846614	5	True				
ANR	847807	Statement	","	6830:24:195758:195758	846614	6	True				
ANR	847808	Statement	iter	6830:26:195760:195763	846614	7	True				
ANR	847809	Statement	","	6830:30:195764:195764	846614	8	True				
ANR	847810	Statement	ref	6830:32:195766:195768	846614	9	True				
ANR	847811	Statement	)	6830:35:195769:195769	846614	10	True				
ANR	847812	CompoundStatement		197:5:5605:5667	846614	11					
ANR	847813	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , ref -> addr , 0 )"	6831:5:195778:195828	846614	0	True				
ANR	847814	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , ref -> addr , 0 )"		846614	0		=			
ANR	847815	Identifier	fcn		846614	0					
ANR	847816	CallExpression	"r_anal_get_fcn_in ( core -> anal , ref -> addr , 0 )"		846614	1					
ANR	847817	Callee	r_anal_get_fcn_in		846614	0					
ANR	847818	Identifier	r_anal_get_fcn_in		846614	0					
ANR	847819	ArgumentList	core -> anal		846614	1					
ANR	847820	Argument	core -> anal		846614	0					
ANR	847821	PtrMemberAccess	core -> anal		846614	0					
ANR	847822	Identifier	core		846614	0					
ANR	847823	Identifier	anal		846614	1					
ANR	847824	Argument	ref -> addr		846614	1					
ANR	847825	PtrMemberAccess	ref -> addr		846614	0					
ANR	847826	Identifier	ref		846614	0					
ANR	847827	Identifier	addr		846614	1					
ANR	847828	Argument	0		846614	2					
ANR	847829	PrimaryExpression	0		846614	0					
ANR	847830	IdentifierDeclStatement	"char * str = get_buf_asm ( core , addr , ref -> addr , fcn , false ) ;"	6832:5:195835:195894	846614	1	True				
ANR	847831	IdentifierDecl	"* str = get_buf_asm ( core , addr , ref -> addr , fcn , false )"		846614	0					
ANR	847832	IdentifierDeclType	char *		846614	0					
ANR	847833	Identifier	str		846614	1					
ANR	847834	AssignmentExpression	"* str = get_buf_asm ( core , addr , ref -> addr , fcn , false )"		846614	2		=			
ANR	847835	Identifier	str		846614	0					
ANR	847836	CallExpression	"get_buf_asm ( core , addr , ref -> addr , fcn , false )"		846614	1					
ANR	847837	Callee	get_buf_asm		846614	0					
ANR	847838	Identifier	get_buf_asm		846614	0					
ANR	847839	ArgumentList	core		846614	1					
ANR	847840	Argument	core		846614	0					
ANR	847841	Identifier	core		846614	0					
ANR	847842	Argument	addr		846614	1					
ANR	847843	Identifier	addr		846614	0					
ANR	847844	Argument	ref -> addr		846614	2					
ANR	847845	PtrMemberAccess	ref -> addr		846614	0					
ANR	847846	Identifier	ref		846614	0					
ANR	847847	Identifier	addr		846614	1					
ANR	847848	Argument	fcn		846614	3					
ANR	847849	Identifier	fcn		846614	0					
ANR	847850	Argument	false		846614	4					
ANR	847851	Identifier	false		846614	0					
ANR	847852	ExpressionStatement	pj_o ( pj )	6833:5:195901:195910	846614	2	True				
ANR	847853	CallExpression	pj_o ( pj )		846614	0					
ANR	847854	Callee	pj_o		846614	0					
ANR	847855	Identifier	pj_o		846614	0					
ANR	847856	ArgumentList	pj		846614	1					
ANR	847857	Argument	pj		846614	0					
ANR	847858	Identifier	pj		846614	0					
ANR	847859	ExpressionStatement	"pj_kn ( pj , ""from"" , ref -> addr )"	6834:5:195917:195946	846614	3	True				
ANR	847860	CallExpression	"pj_kn ( pj , ""from"" , ref -> addr )"		846614	0					
ANR	847861	Callee	pj_kn		846614	0					
ANR	847862	Identifier	pj_kn		846614	0					
ANR	847863	ArgumentList	pj		846614	1					
ANR	847864	Argument	pj		846614	0					
ANR	847865	Identifier	pj		846614	0					
ANR	847866	Argument	"""from"""		846614	1					
ANR	847867	PrimaryExpression	"""from"""		846614	0					
ANR	847868	Argument	ref -> addr		846614	2					
ANR	847869	PtrMemberAccess	ref -> addr		846614	0					
ANR	847870	Identifier	ref		846614	0					
ANR	847871	Identifier	addr		846614	1					
ANR	847872	ExpressionStatement	"pj_ks ( pj , ""type"" , r_anal_xrefs_type_tostring ( ref -> type ) )"	6835:5:195953:196011	846614	4	True				
ANR	847873	CallExpression	"pj_ks ( pj , ""type"" , r_anal_xrefs_type_tostring ( ref -> type ) )"		846614	0					
ANR	847874	Callee	pj_ks		846614	0					
ANR	847875	Identifier	pj_ks		846614	0					
ANR	847876	ArgumentList	pj		846614	1					
ANR	847877	Argument	pj		846614	0					
ANR	847878	Identifier	pj		846614	0					
ANR	847879	Argument	"""type"""		846614	1					
ANR	847880	PrimaryExpression	"""type"""		846614	0					
ANR	847881	Argument	r_anal_xrefs_type_tostring ( ref -> type )		846614	2					
ANR	847882	CallExpression	r_anal_xrefs_type_tostring ( ref -> type )		846614	0					
ANR	847883	Callee	r_anal_xrefs_type_tostring		846614	0					
ANR	847884	Identifier	r_anal_xrefs_type_tostring		846614	0					
ANR	847885	ArgumentList	ref -> type		846614	1					
ANR	847886	Argument	ref -> type		846614	0					
ANR	847887	PtrMemberAccess	ref -> type		846614	0					
ANR	847888	Identifier	ref		846614	0					
ANR	847889	Identifier	type		846614	1					
ANR	847890	ExpressionStatement	"pj_ks ( pj , ""opcode"" , str )"	6836:5:196018:196043	846614	5	True				
ANR	847891	CallExpression	"pj_ks ( pj , ""opcode"" , str )"		846614	0					
ANR	847892	Callee	pj_ks		846614	0					
ANR	847893	Identifier	pj_ks		846614	0					
ANR	847894	ArgumentList	pj		846614	1					
ANR	847895	Argument	pj		846614	0					
ANR	847896	Identifier	pj		846614	0					
ANR	847897	Argument	"""opcode"""		846614	1					
ANR	847898	PrimaryExpression	"""opcode"""		846614	0					
ANR	847899	Argument	str		846614	2					
ANR	847900	Identifier	str		846614	0					
ANR	847901	IfStatement	if ( fcn )		846614	6					
ANR	847902	Condition	fcn	6837:9:196054:196056	846614	0	True				
ANR	847903	Identifier	fcn		846614	0					
ANR	847904	CompoundStatement		168:14:4770:4770	846614	1					
ANR	847905	ExpressionStatement	"pj_kn ( pj , ""fcn_addr"" , fcn -> addr )"	6838:6:196067:196100	846614	0	True				
ANR	847906	CallExpression	"pj_kn ( pj , ""fcn_addr"" , fcn -> addr )"		846614	0					
ANR	847907	Callee	pj_kn		846614	0					
ANR	847908	Identifier	pj_kn		846614	0					
ANR	847909	ArgumentList	pj		846614	1					
ANR	847910	Argument	pj		846614	0					
ANR	847911	Identifier	pj		846614	0					
ANR	847912	Argument	"""fcn_addr"""		846614	1					
ANR	847913	PrimaryExpression	"""fcn_addr"""		846614	0					
ANR	847914	Argument	fcn -> addr		846614	2					
ANR	847915	PtrMemberAccess	fcn -> addr		846614	0					
ANR	847916	Identifier	fcn		846614	0					
ANR	847917	Identifier	addr		846614	1					
ANR	847918	ExpressionStatement	"pj_ks ( pj , ""fcn_name"" , fcn -> name )"	6839:6:196108:196141	846614	1	True				
ANR	847919	CallExpression	"pj_ks ( pj , ""fcn_name"" , fcn -> name )"		846614	0					
ANR	847920	Callee	pj_ks		846614	0					
ANR	847921	Identifier	pj_ks		846614	0					
ANR	847922	ArgumentList	pj		846614	1					
ANR	847923	Argument	pj		846614	0					
ANR	847924	Identifier	pj		846614	0					
ANR	847925	Argument	"""fcn_name"""		846614	1					
ANR	847926	PrimaryExpression	"""fcn_name"""		846614	0					
ANR	847927	Argument	fcn -> name		846614	2					
ANR	847928	PtrMemberAccess	fcn -> name		846614	0					
ANR	847929	Identifier	fcn		846614	0					
ANR	847930	Identifier	name		846614	1					
ANR	847931	IdentifierDeclStatement	"RFlagItem * fi = r_flag_get_at ( core -> flags , fcn ? fcn -> addr : ref -> addr , true ) ;"	6841:5:196155:196231	846614	7	True				
ANR	847932	IdentifierDecl	"* fi = r_flag_get_at ( core -> flags , fcn ? fcn -> addr : ref -> addr , true )"		846614	0					
ANR	847933	IdentifierDeclType	RFlagItem *		846614	0					
ANR	847934	Identifier	fi		846614	1					
ANR	847935	AssignmentExpression	"* fi = r_flag_get_at ( core -> flags , fcn ? fcn -> addr : ref -> addr , true )"		846614	2		=			
ANR	847936	Identifier	fi		846614	0					
ANR	847937	CallExpression	"r_flag_get_at ( core -> flags , fcn ? fcn -> addr : ref -> addr , true )"		846614	1					
ANR	847938	Callee	r_flag_get_at		846614	0					
ANR	847939	Identifier	r_flag_get_at		846614	0					
ANR	847940	ArgumentList	core -> flags		846614	1					
ANR	847941	Argument	core -> flags		846614	0					
ANR	847942	PtrMemberAccess	core -> flags		846614	0					
ANR	847943	Identifier	core		846614	0					
ANR	847944	Identifier	flags		846614	1					
ANR	847945	Argument	fcn ? fcn -> addr : ref -> addr		846614	1					
ANR	847946	ConditionalExpression	fcn ? fcn -> addr : ref -> addr		846614	0					
ANR	847947	Condition	fcn		846614	0					
ANR	847948	Identifier	fcn		846614	0					
ANR	847949	PtrMemberAccess	fcn -> addr		846614	1					
ANR	847950	Identifier	fcn		846614	0					
ANR	847951	Identifier	addr		846614	1					
ANR	847952	PtrMemberAccess	ref -> addr		846614	2					
ANR	847953	Identifier	ref		846614	0					
ANR	847954	Identifier	addr		846614	1					
ANR	847955	Argument	true		846614	2					
ANR	847956	Identifier	true		846614	0					
ANR	847957	IfStatement	if ( fi )		846614	8					
ANR	847958	Condition	fi	6842:9:196242:196243	846614	0	True				
ANR	847959	Identifier	fi		846614	0					
ANR	847960	CompoundStatement		173:13:4957:4957	846614	1					
ANR	847961	IfStatement	if ( fcn )		846614	0					
ANR	847962	Condition	fcn	6843:10:196258:196260	846614	0	True				
ANR	847963	Identifier	fcn		846614	0					
ANR	847964	CompoundStatement		174:15:4974:4974	846614	1					
ANR	847965	IfStatement	"if ( strcmp ( fcn -> name , fi -> name ) )"		846614	0					
ANR	847966	Condition	"strcmp ( fcn -> name , fi -> name )"	6844:11:196276:196303	846614	0	True				
ANR	847967	CallExpression	"strcmp ( fcn -> name , fi -> name )"		846614	0					
ANR	847968	Callee	strcmp		846614	0					
ANR	847969	Identifier	strcmp		846614	0					
ANR	847970	ArgumentList	fcn -> name		846614	1					
ANR	847971	Argument	fcn -> name		846614	0					
ANR	847972	PtrMemberAccess	fcn -> name		846614	0					
ANR	847973	Identifier	fcn		846614	0					
ANR	847974	Identifier	name		846614	1					
ANR	847975	Argument	fi -> name		846614	1					
ANR	847976	PtrMemberAccess	fi -> name		846614	0					
ANR	847977	Identifier	fi		846614	0					
ANR	847978	Identifier	name		846614	1					
ANR	847979	CompoundStatement		175:41:5017:5017	846614	1					
ANR	847980	ExpressionStatement	"pj_ks ( pj , ""flag"" , fi -> name )"	6845:8:196316:196344	846614	0	True				
ANR	847981	CallExpression	"pj_ks ( pj , ""flag"" , fi -> name )"		846614	0					
ANR	847982	Callee	pj_ks		846614	0					
ANR	847983	Identifier	pj_ks		846614	0					
ANR	847984	ArgumentList	pj		846614	1					
ANR	847985	Argument	pj		846614	0					
ANR	847986	Identifier	pj		846614	0					
ANR	847987	Argument	"""flag"""		846614	1					
ANR	847988	PrimaryExpression	"""flag"""		846614	0					
ANR	847989	Argument	fi -> name		846614	2					
ANR	847990	PtrMemberAccess	fi -> name		846614	0					
ANR	847991	Identifier	fi		846614	0					
ANR	847992	Identifier	name		846614	1					
ANR	847993	ElseStatement	else		846614	0					
ANR	847994	CompoundStatement		178:13:5079:5079	846614	0					
ANR	847995	ExpressionStatement	"pj_k ( pj , ""name"" )"	6848:7:196377:196394	846614	0	True				
ANR	847996	CallExpression	"pj_k ( pj , ""name"" )"		846614	0					
ANR	847997	Callee	pj_k		846614	0					
ANR	847998	Identifier	pj_k		846614	0					
ANR	847999	ArgumentList	pj		846614	1					
ANR	848000	Argument	pj		846614	0					
ANR	848001	Identifier	pj		846614	0					
ANR	848002	Argument	"""name"""		846614	1					
ANR	848003	PrimaryExpression	"""name"""		846614	0					
ANR	848004	IfStatement	if ( fi -> offset != ref -> addr )		846614	1					
ANR	848005	Condition	fi -> offset != ref -> addr	6849:11:196407:196429	846614	0	True				
ANR	848006	EqualityExpression	fi -> offset != ref -> addr		846614	0		!=			
ANR	848007	PtrMemberAccess	fi -> offset		846614	0					
ANR	848008	Identifier	fi		846614	0					
ANR	848009	Identifier	offset		846614	1					
ANR	848010	PtrMemberAccess	ref -> addr		846614	1					
ANR	848011	Identifier	ref		846614	0					
ANR	848012	Identifier	addr		846614	1					
ANR	848013	CompoundStatement		182:8:5204:5258	846614	1					
ANR	848014	IdentifierDeclStatement	int delta = ( int ) ( ref -> addr - fi -> offset ) ;	6850:8:196442:196483	846614	0	True				
ANR	848015	IdentifierDecl	delta = ( int ) ( ref -> addr - fi -> offset )		846614	0					
ANR	848016	IdentifierDeclType	int		846614	0					
ANR	848017	Identifier	delta		846614	1					
ANR	848018	AssignmentExpression	delta = ( int ) ( ref -> addr - fi -> offset )		846614	2		=			
ANR	848019	Identifier	delta		846614	0					
ANR	848020	CastExpression	( int ) ( ref -> addr - fi -> offset )		846614	1					
ANR	848021	CastTarget	int		846614	0					
ANR	848022	AdditiveExpression	ref -> addr - fi -> offset		846614	1		-			
ANR	848023	PtrMemberAccess	ref -> addr		846614	0					
ANR	848024	Identifier	ref		846614	0					
ANR	848025	Identifier	addr		846614	1					
ANR	848026	PtrMemberAccess	fi -> offset		846614	1					
ANR	848027	Identifier	fi		846614	0					
ANR	848028	Identifier	offset		846614	1					
ANR	848029	IdentifierDeclStatement	"char * name_ref = r_str_newf ( ""%s+%d"" , fi -> name , delta ) ;"	6851:8:196493:196547	846614	1	True				
ANR	848030	IdentifierDecl	"* name_ref = r_str_newf ( ""%s+%d"" , fi -> name , delta )"		846614	0					
ANR	848031	IdentifierDeclType	char *		846614	0					
ANR	848032	Identifier	name_ref		846614	1					
ANR	848033	AssignmentExpression	"* name_ref = r_str_newf ( ""%s+%d"" , fi -> name , delta )"		846614	2		=			
ANR	848034	Identifier	name_ref		846614	0					
ANR	848035	CallExpression	"r_str_newf ( ""%s+%d"" , fi -> name , delta )"		846614	1					
ANR	848036	Callee	r_str_newf		846614	0					
ANR	848037	Identifier	r_str_newf		846614	0					
ANR	848038	ArgumentList	"""%s+%d"""		846614	1					
ANR	848039	Argument	"""%s+%d"""		846614	0					
ANR	848040	PrimaryExpression	"""%s+%d"""		846614	0					
ANR	848041	Argument	fi -> name		846614	1					
ANR	848042	PtrMemberAccess	fi -> name		846614	0					
ANR	848043	Identifier	fi		846614	0					
ANR	848044	Identifier	name		846614	1					
ANR	848045	Argument	delta		846614	2					
ANR	848046	Identifier	delta		846614	0					
ANR	848047	ExpressionStatement	"pj_s ( pj , name_ref )"	6852:8:196557:196576	846614	2	True				
ANR	848048	CallExpression	"pj_s ( pj , name_ref )"		846614	0					
ANR	848049	Callee	pj_s		846614	0					
ANR	848050	Identifier	pj_s		846614	0					
ANR	848051	ArgumentList	pj		846614	1					
ANR	848052	Argument	pj		846614	0					
ANR	848053	Identifier	pj		846614	0					
ANR	848054	Argument	name_ref		846614	1					
ANR	848055	Identifier	name_ref		846614	0					
ANR	848056	ExpressionStatement	free ( name_ref )	6853:8:196586:196601	846614	3	True				
ANR	848057	CallExpression	free ( name_ref )		846614	0					
ANR	848058	Callee	free		846614	0					
ANR	848059	Identifier	free		846614	0					
ANR	848060	ArgumentList	name_ref		846614	1					
ANR	848061	Argument	name_ref		846614	0					
ANR	848062	Identifier	name_ref		846614	0					
ANR	848063	ElseStatement	else		846614	0					
ANR	848064	CompoundStatement		185:14:5328:5328	846614	0					
ANR	848065	ExpressionStatement	"pj_s ( pj , fi -> name )"	6855:8:196627:196646	846614	0	True				
ANR	848066	CallExpression	"pj_s ( pj , fi -> name )"		846614	0					
ANR	848067	Callee	pj_s		846614	0					
ANR	848068	Identifier	pj_s		846614	0					
ANR	848069	ArgumentList	pj		846614	1					
ANR	848070	Argument	pj		846614	0					
ANR	848071	Identifier	pj		846614	0					
ANR	848072	Argument	fi -> name		846614	1					
ANR	848073	PtrMemberAccess	fi -> name		846614	0					
ANR	848074	Identifier	fi		846614	0					
ANR	848075	Identifier	name		846614	1					
ANR	848076	IfStatement	"if ( fi -> realname && strcmp ( fi -> name , fi -> realname ) )"		846614	1					
ANR	848077	Condition	"fi -> realname && strcmp ( fi -> name , fi -> realname )"	6858:10:196675:196721	846614	0	True				
ANR	848078	AndExpression	"fi -> realname && strcmp ( fi -> name , fi -> realname )"		846614	0		&&			
ANR	848079	PtrMemberAccess	fi -> realname		846614	0					
ANR	848080	Identifier	fi		846614	0					
ANR	848081	Identifier	realname		846614	1					
ANR	848082	CallExpression	"strcmp ( fi -> name , fi -> realname )"		846614	1					
ANR	848083	Callee	strcmp		846614	0					
ANR	848084	Identifier	strcmp		846614	0					
ANR	848085	ArgumentList	fi -> name		846614	1					
ANR	848086	Argument	fi -> name		846614	0					
ANR	848087	PtrMemberAccess	fi -> name		846614	0					
ANR	848088	Identifier	fi		846614	0					
ANR	848089	Identifier	name		846614	1					
ANR	848090	Argument	fi -> realname		846614	1					
ANR	848091	PtrMemberAccess	fi -> realname		846614	0					
ANR	848092	Identifier	fi		846614	0					
ANR	848093	Identifier	realname		846614	1					
ANR	848094	CompoundStatement		190:7:5444:5487	846614	1					
ANR	848095	IdentifierDeclStatement	char * escaped = r_str_escape ( fi -> realname ) ;	6859:7:196733:196776	846614	0	True				
ANR	848096	IdentifierDecl	* escaped = r_str_escape ( fi -> realname )		846614	0					
ANR	848097	IdentifierDeclType	char *		846614	0					
ANR	848098	Identifier	escaped		846614	1					
ANR	848099	AssignmentExpression	* escaped = r_str_escape ( fi -> realname )		846614	2		=			
ANR	848100	Identifier	escaped		846614	0					
ANR	848101	CallExpression	r_str_escape ( fi -> realname )		846614	1					
ANR	848102	Callee	r_str_escape		846614	0					
ANR	848103	Identifier	r_str_escape		846614	0					
ANR	848104	ArgumentList	fi -> realname		846614	1					
ANR	848105	Argument	fi -> realname		846614	0					
ANR	848106	PtrMemberAccess	fi -> realname		846614	0					
ANR	848107	Identifier	fi		846614	0					
ANR	848108	Identifier	realname		846614	1					
ANR	848109	IfStatement	if ( escaped )		846614	1					
ANR	848110	Condition	escaped	6860:11:196789:196795	846614	0	True				
ANR	848111	Identifier	escaped		846614	0					
ANR	848112	CompoundStatement		191:20:5509:5509	846614	1					
ANR	848113	ExpressionStatement	"pj_ks ( pj , ""realname"" , escaped )"	6861:8:196808:196839	846614	0	True				
ANR	848114	CallExpression	"pj_ks ( pj , ""realname"" , escaped )"		846614	0					
ANR	848115	Callee	pj_ks		846614	0					
ANR	848116	Identifier	pj_ks		846614	0					
ANR	848117	ArgumentList	pj		846614	1					
ANR	848118	Argument	pj		846614	0					
ANR	848119	Identifier	pj		846614	0					
ANR	848120	Argument	"""realname"""		846614	1					
ANR	848121	PrimaryExpression	"""realname"""		846614	0					
ANR	848122	Argument	escaped		846614	2					
ANR	848123	Identifier	escaped		846614	0					
ANR	848124	ExpressionStatement	free ( escaped )	6862:8:196849:196863	846614	1	True				
ANR	848125	CallExpression	free ( escaped )		846614	0					
ANR	848126	Callee	free		846614	0					
ANR	848127	Identifier	free		846614	0					
ANR	848128	ArgumentList	escaped		846614	1					
ANR	848129	Argument	escaped		846614	0					
ANR	848130	Identifier	escaped		846614	0					
ANR	848131	IdentifierDeclStatement	"char * refname = core -> anal -> coreb . getNameDelta ( core , ref -> at ) ;"	6866:5:196894:196956	846614	9	True				
ANR	848132	IdentifierDecl	"* refname = core -> anal -> coreb . getNameDelta ( core , ref -> at )"		846614	0					
ANR	848133	IdentifierDeclType	char *		846614	0					
ANR	848134	Identifier	refname		846614	1					
ANR	848135	AssignmentExpression	"* refname = core -> anal -> coreb . getNameDelta ( core , ref -> at )"		846614	2		=			
ANR	848136	Identifier	refname		846614	0					
ANR	848137	CallExpression	"core -> anal -> coreb . getNameDelta ( core , ref -> at )"		846614	1					
ANR	848138	Callee	core -> anal -> coreb . getNameDelta		846614	0					
ANR	848139	MemberAccess	core -> anal -> coreb . getNameDelta		846614	0					
ANR	848140	PtrMemberAccess	core -> anal -> coreb		846614	0					
ANR	848141	PtrMemberAccess	core -> anal		846614	0					
ANR	848142	Identifier	core		846614	0					
ANR	848143	Identifier	anal		846614	1					
ANR	848144	Identifier	coreb		846614	1					
ANR	848145	Identifier	getNameDelta		846614	1					
ANR	848146	ArgumentList	core		846614	1					
ANR	848147	Argument	core		846614	0					
ANR	848148	Identifier	core		846614	0					
ANR	848149	Argument	ref -> at		846614	1					
ANR	848150	PtrMemberAccess	ref -> at		846614	0					
ANR	848151	Identifier	ref		846614	0					
ANR	848152	Identifier	at		846614	1					
ANR	848153	IfStatement	if ( refname )		846614	10					
ANR	848154	Condition	refname	6867:9:196967:196973	846614	0	True				
ANR	848155	Identifier	refname		846614	0					
ANR	848156	CompoundStatement		198:18:5687:5687	846614	1					
ANR	848157	ExpressionStatement	"r_str_replace_ch ( refname , ' ' , 0 , true )"	6868:6:196984:197024	846614	0	True				
ANR	848158	CallExpression	"r_str_replace_ch ( refname , ' ' , 0 , true )"		846614	0					
ANR	848159	Callee	r_str_replace_ch		846614	0					
ANR	848160	Identifier	r_str_replace_ch		846614	0					
ANR	848161	ArgumentList	refname		846614	1					
ANR	848162	Argument	refname		846614	0					
ANR	848163	Identifier	refname		846614	0					
ANR	848164	Argument	' '		846614	1					
ANR	848165	PrimaryExpression	' '		846614	0					
ANR	848166	Argument	0		846614	2					
ANR	848167	PrimaryExpression	0		846614	0					
ANR	848168	Argument	true		846614	3					
ANR	848169	Identifier	true		846614	0					
ANR	848170	ExpressionStatement	"pj_ks ( pj , ""refname"" , refname )"	6869:6:197032:197062	846614	1	True				
ANR	848171	CallExpression	"pj_ks ( pj , ""refname"" , refname )"		846614	0					
ANR	848172	Callee	pj_ks		846614	0					
ANR	848173	Identifier	pj_ks		846614	0					
ANR	848174	ArgumentList	pj		846614	1					
ANR	848175	Argument	pj		846614	0					
ANR	848176	Identifier	pj		846614	0					
ANR	848177	Argument	"""refname"""		846614	1					
ANR	848178	PrimaryExpression	"""refname"""		846614	0					
ANR	848179	Argument	refname		846614	2					
ANR	848180	Identifier	refname		846614	0					
ANR	848181	ExpressionStatement	free ( refname )	6870:6:197070:197084	846614	2	True				
ANR	848182	CallExpression	free ( refname )		846614	0					
ANR	848183	Callee	free		846614	0					
ANR	848184	Identifier	free		846614	0					
ANR	848185	ArgumentList	refname		846614	1					
ANR	848186	Argument	refname		846614	0					
ANR	848187	Identifier	refname		846614	0					
ANR	848188	ExpressionStatement	pj_end ( pj )	6872:5:197098:197109	846614	11	True				
ANR	848189	CallExpression	pj_end ( pj )		846614	0					
ANR	848190	Callee	pj_end		846614	0					
ANR	848191	Identifier	pj_end		846614	0					
ANR	848192	ArgumentList	pj		846614	1					
ANR	848193	Argument	pj		846614	0					
ANR	848194	Identifier	pj		846614	0					
ANR	848195	ExpressionStatement	free ( str )	6873:5:197116:197126	846614	12	True				
ANR	848196	CallExpression	free ( str )		846614	0					
ANR	848197	Callee	free		846614	0					
ANR	848198	Identifier	free		846614	0					
ANR	848199	ArgumentList	str		846614	1					
ANR	848200	Argument	str		846614	0					
ANR	848201	Identifier	str		846614	0					
ANR	848202	ExpressionStatement	pj_end ( pj )	6875:4:197138:197149	846614	12	True				
ANR	848203	CallExpression	pj_end ( pj )		846614	0					
ANR	848204	Callee	pj_end		846614	0					
ANR	848205	Identifier	pj_end		846614	0					
ANR	848206	ArgumentList	pj		846614	1					
ANR	848207	Argument	pj		846614	0					
ANR	848208	Identifier	pj		846614	0					
ANR	848209	ExpressionStatement	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"	6876:4:197155:197191	846614	13	True				
ANR	848210	CallExpression	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"		846614	0					
ANR	848211	Callee	r_cons_printf		846614	0					
ANR	848212	Identifier	r_cons_printf		846614	0					
ANR	848213	ArgumentList	"""%s"""		846614	1					
ANR	848214	Argument	"""%s"""		846614	0					
ANR	848215	PrimaryExpression	"""%s"""		846614	0					
ANR	848216	Argument	pj_string ( pj )		846614	1					
ANR	848217	CallExpression	pj_string ( pj )		846614	0					
ANR	848218	Callee	pj_string		846614	0					
ANR	848219	Identifier	pj_string		846614	0					
ANR	848220	ArgumentList	pj		846614	1					
ANR	848221	Argument	pj		846614	0					
ANR	848222	Identifier	pj		846614	0					
ANR	848223	ExpressionStatement	pj_free ( pj )	6877:4:197197:197209	846614	14	True				
ANR	848224	CallExpression	pj_free ( pj )		846614	0					
ANR	848225	Callee	pj_free		846614	0					
ANR	848226	Identifier	pj_free		846614	0					
ANR	848227	ArgumentList	pj		846614	1					
ANR	848228	Argument	pj		846614	0					
ANR	848229	Identifier	pj		846614	0					
ANR	848230	ExpressionStatement	r_cons_newline ( )	6878:4:197215:197232	846614	15	True				
ANR	848231	CallExpression	r_cons_newline ( )		846614	0					
ANR	848232	Callee	r_cons_newline		846614	0					
ANR	848233	Identifier	r_cons_newline		846614	0					
ANR	848234	ArgumentList			846614	1					
ANR	848235	ElseStatement	else		846614	0					
ANR	848236	IfStatement	if ( input [ 1 ] == 'g' )		846614	0					
ANR	848237	Condition	input [ 1 ] == 'g'	6879:14:197248:197262	846614	0	True				
ANR	848238	EqualityExpression	input [ 1 ] == 'g'		846614	0		==			
ANR	848239	ArrayIndexing	input [ 1 ]		846614	0					
ANR	848240	Identifier	input		846614	0					
ANR	848241	PrimaryExpression	1		846614	1					
ANR	848242	PrimaryExpression	'g'		846614	1					
ANR	848243	CompoundStatement		210:31:5976:5976	846614	1					
ANR	848244	Statement	r_list_foreach	6880:4:197279:197292	846614	0	True				
ANR	848245	Statement	(	6880:19:197294:197294	846614	1	True				
ANR	848246	Statement	list	6880:20:197295:197298	846614	2	True				
ANR	848247	Statement	","	6880:24:197299:197299	846614	3	True				
ANR	848248	Statement	iter	6880:26:197301:197304	846614	4	True				
ANR	848249	Statement	","	6880:30:197305:197305	846614	5	True				
ANR	848250	Statement	ref	6880:32:197307:197309	846614	6	True				
ANR	848251	Statement	)	6880:35:197310:197310	846614	7	True				
ANR	848252	CompoundStatement		211:37:6023:6023	846614	8					
ANR	848253	Statement	char	6881:5:197319:197322	846614	0	True				
ANR	848254	Statement	*	6881:10:197324:197324	846614	1	True				
ANR	848255	Statement	str	6881:11:197325:197327	846614	2	True				
ANR	848256	Statement	=	6881:15:197329:197329	846614	3	True				
ANR	848257	Statement	r_core_cmd_strf	6881:17:197331:197345	846614	4	True				
ANR	848258	Statement	(	6881:33:197347:197347	846614	5	True				
ANR	848259	Statement	core	6881:34:197348:197351	846614	6	True				
ANR	848260	Statement	","	6881:38:197352:197352	846614	7	True				
ANR	848261	Statement	"""fd 0x%"""	6881:40:197354:197361	846614	8	True				
ANR	848262	Statement	PFMT64x	6881:48:197362:197368	846614	9	True				
ANR	848263	Statement	","	6881:55:197369:197369	846614	10	True				
ANR	848264	Statement	ref	6881:57:197371:197373	846614	11	True				
ANR	848265	Statement	->	6881:60:197374:197375	846614	12	True				
ANR	848266	Statement	addr	6881:62:197376:197379	846614	13	True				
ANR	848267	Statement	)	6881:66:197380:197380	846614	14	True				
ANR	848268	ExpressionStatement		6881:67:197381:197381	846614	15	True				
ANR	848269	IfStatement	if ( ! str )		846614	16					
ANR	848270	Condition	! str	6882:9:197392:197395	846614	0	True				
ANR	848271	UnaryOperationExpression	! str		846614	0					
ANR	848272	UnaryOperator	!		846614	0					
ANR	848273	Identifier	str		846614	1					
ANR	848274	CompoundStatement		213:15:6109:6109	846614	1					
ANR	848275	ExpressionStatement	"str = strdup ( ""?\\n"" )"	6883:6:197406:197426	846614	0	True				
ANR	848276	AssignmentExpression	"str = strdup ( ""?\\n"" )"		846614	0		=			
ANR	848277	Identifier	str		846614	0					
ANR	848278	CallExpression	"strdup ( ""?\\n"" )"		846614	1					
ANR	848279	Callee	strdup		846614	0					
ANR	848280	Identifier	strdup		846614	0					
ANR	848281	ArgumentList	"""?\\n"""		846614	1					
ANR	848282	Argument	"""?\\n"""		846614	0					
ANR	848283	PrimaryExpression	"""?\\n"""		846614	0					
ANR	848284	ExpressionStatement	r_str_trim_tail ( str )	6885:5:197440:197461	846614	17	True				
ANR	848285	CallExpression	r_str_trim_tail ( str )		846614	0					
ANR	848286	Callee	r_str_trim_tail		846614	0					
ANR	848287	Identifier	r_str_trim_tail		846614	0					
ANR	848288	ArgumentList	str		846614	1					
ANR	848289	Argument	str		846614	0					
ANR	848290	Identifier	str		846614	0					
ANR	848291	Statement	r_cons_printf	6886:5:197468:197480	846614	18	True				
ANR	848292	Statement	(	6886:19:197482:197482	846614	19	True				
ANR	848293	Statement	"""agn 0x%"""	6886:20:197483:197491	846614	20	True				
ANR	848294	Statement	PFMT64x	6886:30:197493:197499	846614	21	True				
ANR	848295	Statement	""" \\""%s\\""\\n"""	6886:38:197501:197511	846614	22	True				
ANR	848296	Statement	","	6886:49:197512:197512	846614	23	True				
ANR	848297	Statement	ref	6886:51:197514:197516	846614	24	True				
ANR	848298	Statement	->	6886:54:197517:197518	846614	25	True				
ANR	848299	Statement	addr	6886:56:197519:197522	846614	26	True				
ANR	848300	Statement	","	6886:60:197523:197523	846614	27	True				
ANR	848301	Statement	str	6886:62:197525:197527	846614	28	True				
ANR	848302	Statement	)	6886:65:197528:197528	846614	29	True				
ANR	848303	ExpressionStatement		6886:66:197529:197529	846614	30	True				
ANR	848304	ExpressionStatement	free ( str )	6887:5:197536:197546	846614	31	True				
ANR	848305	CallExpression	free ( str )		846614	0					
ANR	848306	Callee	free		846614	0					
ANR	848307	Identifier	free		846614	0					
ANR	848308	ArgumentList	str		846614	1					
ANR	848309	Argument	str		846614	0					
ANR	848310	Identifier	str		846614	0					
ANR	848311	IfStatement	if ( input [ 2 ] != '*' )		846614	9					
ANR	848312	Condition	input [ 2 ] != '*'	6889:8:197562:197576	846614	0	True				
ANR	848313	EqualityExpression	input [ 2 ] != '*'		846614	0		!=			
ANR	848314	ArrayIndexing	input [ 2 ]		846614	0					
ANR	848315	Identifier	input		846614	0					
ANR	848316	PrimaryExpression	2		846614	1					
ANR	848317	PrimaryExpression	'*'		846614	1					
ANR	848318	CompoundStatement		221:5:6297:6357	846614	1					
ANR	848319	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 ) ;"	6890:5:197586:197646	846614	0	True				
ANR	848320	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		846614	0					
ANR	848321	IdentifierDeclType	RAnalFunction *		846614	0					
ANR	848322	Identifier	fcn		846614	1					
ANR	848323	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		846614	2		=			
ANR	848324	Identifier	fcn		846614	0					
ANR	848325	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , 0 )"		846614	1					
ANR	848326	Callee	r_anal_get_fcn_in		846614	0					
ANR	848327	Identifier	r_anal_get_fcn_in		846614	0					
ANR	848328	ArgumentList	core -> anal		846614	1					
ANR	848329	Argument	core -> anal		846614	0					
ANR	848330	PtrMemberAccess	core -> anal		846614	0					
ANR	848331	Identifier	core		846614	0					
ANR	848332	Identifier	anal		846614	1					
ANR	848333	Argument	addr		846614	1					
ANR	848334	Identifier	addr		846614	0					
ANR	848335	Argument	0		846614	2					
ANR	848336	PrimaryExpression	0		846614	0					
ANR	848337	Statement	r_cons_printf	6891:5:197653:197665	846614	1	True				
ANR	848338	Statement	(	6891:19:197667:197667	846614	2	True				
ANR	848339	Statement	"""agn 0x%"""	6891:20:197668:197676	846614	3	True				
ANR	848340	Statement	PFMT64x	6891:30:197678:197684	846614	4	True				
ANR	848341	Statement	""" \\""%s\\""\\n"""	6891:38:197686:197696	846614	5	True				
ANR	848342	Statement	","	6891:49:197697:197697	846614	6	True				
ANR	848343	Statement	addr	6891:51:197699:197702	846614	7	True				
ANR	848344	Statement	","	6891:55:197703:197703	846614	8	True				
ANR	848345	Statement	fcn	6891:57:197705:197707	846614	9	True				
ANR	848346	Statement	?	6891:60:197708:197708	846614	10	True				
ANR	848347	Statement	fcn	6891:61:197709:197711	846614	11	True				
ANR	848348	Statement	->	6891:64:197712:197713	846614	12	True				
ANR	848349	Label	name :	6891:66:197714:197718	846614	13	True				
ANR	848350	Identifier	name		846614	0					
ANR	848351	Statement	"""$$"""	6891:72:197720:197723	846614	14	True				
ANR	848352	Statement	)	6891:76:197724:197724	846614	15	True				
ANR	848353	ExpressionStatement		6891:77:197725:197725	846614	16	True				
ANR	848354	Statement	r_list_foreach	6893:4:197737:197750	846614	10	True				
ANR	848355	Statement	(	6893:19:197752:197752	846614	11	True				
ANR	848356	Statement	list	6893:20:197753:197756	846614	12	True				
ANR	848357	Statement	","	6893:24:197757:197757	846614	13	True				
ANR	848358	Statement	iter	6893:26:197759:197762	846614	14	True				
ANR	848359	Statement	","	6893:30:197763:197763	846614	15	True				
ANR	848360	Statement	ref	6893:32:197765:197767	846614	16	True				
ANR	848361	Statement	)	6893:35:197768:197768	846614	17	True				
ANR	848362	CompoundStatement		224:37:6481:6481	846614	18					
ANR	848363	Statement	r_cons_printf	6894:5:197777:197789	846614	0	True				
ANR	848364	Statement	(	6894:19:197791:197791	846614	1	True				
ANR	848365	Statement	"""age 0x%"""	6894:20:197792:197800	846614	2	True				
ANR	848366	Statement	PFMT64x	6894:30:197802:197808	846614	3	True				
ANR	848367	Statement	""" 0x%"""	6894:38:197810:197815	846614	4	True				
ANR	848368	Statement	PFMT64x	6894:44:197816:197822	846614	5	True				
ANR	848369	Statement	"""\\n"""	6894:51:197823:197826	846614	6	True				
ANR	848370	Statement	","	6894:55:197827:197827	846614	7	True				
ANR	848371	Statement	ref	6894:57:197829:197831	846614	8	True				
ANR	848372	Statement	->	6894:60:197832:197833	846614	9	True				
ANR	848373	Statement	addr	6894:62:197834:197837	846614	10	True				
ANR	848374	Statement	","	6894:66:197838:197838	846614	11	True				
ANR	848375	Statement	addr	6894:68:197840:197843	846614	12	True				
ANR	848376	Statement	)	6894:72:197844:197844	846614	13	True				
ANR	848377	ExpressionStatement		6894:73:197845:197845	846614	14	True				
ANR	848378	ElseStatement	else		846614	0					
ANR	848379	IfStatement	if ( input [ 1 ] == '*' )		846614	0					
ANR	848380	Condition	input [ 1 ] == '*'	6896:14:197867:197881	846614	0	True				
ANR	848381	EqualityExpression	input [ 1 ] == '*'		846614	0		==			
ANR	848382	ArrayIndexing	input [ 1 ]		846614	0					
ANR	848383	Identifier	input		846614	0					
ANR	848384	PrimaryExpression	1		846614	1					
ANR	848385	PrimaryExpression	'*'		846614	1					
ANR	848386	CompoundStatement		227:31:6595:6595	846614	1					
ANR	848387	Statement	r_list_foreach	6898:4:197941:197954	846614	0	True				
ANR	848388	Statement	(	6898:19:197956:197956	846614	1	True				
ANR	848389	Statement	list	6898:20:197957:197960	846614	2	True				
ANR	848390	Statement	","	6898:24:197961:197961	846614	3	True				
ANR	848391	Statement	iter	6898:26:197963:197966	846614	4	True				
ANR	848392	Statement	","	6898:30:197967:197967	846614	5	True				
ANR	848393	Statement	ref	6898:32:197969:197971	846614	6	True				
ANR	848394	Statement	)	6898:35:197972:197972	846614	7	True				
ANR	848395	Statement	r_cons_printf	6899:5:197979:197991	846614	8	True				
ANR	848396	Statement	(	6899:19:197993:197993	846614	9	True				
ANR	848397	Statement	"""CCa 0x%"""	6899:20:197994:198002	846614	10	True				
ANR	848398	Statement	PFMT64x	6899:30:198004:198010	846614	11	True				
ANR	848399	Statement	""" \\""XREF type %d at 0x%"""	6899:38:198012:198035	846614	12	True				
ANR	848400	Statement	PFMT64x	6899:63:198037:198043	846614	13	True				
ANR	848401	Statement	"""%s\\n"""	6899:70:198044:198049	846614	14	True				
ANR	848402	Statement	","	6899:76:198050:198050	846614	15	True				
ANR	848403	Statement	ref	6900:6:198058:198060	846614	16	True				
ANR	848404	Statement	->	6900:9:198061:198062	846614	17	True				
ANR	848405	Statement	addr	6900:11:198063:198066	846614	18	True				
ANR	848406	Statement	","	6900:15:198067:198067	846614	19	True				
ANR	848407	Statement	ref	6900:17:198069:198071	846614	20	True				
ANR	848408	Statement	->	6900:20:198072:198073	846614	21	True				
ANR	848409	Statement	type	6900:22:198074:198077	846614	22	True				
ANR	848410	Statement	","	6900:26:198078:198078	846614	23	True				
ANR	848411	Statement	addr	6900:28:198080:198083	846614	24	True				
ANR	848412	Statement	","	6900:32:198084:198084	846614	25	True				
ANR	848413	Statement	iter	6900:34:198086:198089	846614	26	True				
ANR	848414	Statement	->	6900:38:198090:198091	846614	27	True				
ANR	848415	Statement	n	6900:40:198092:198092	846614	28	True				
ANR	848416	Statement	?	6900:41:198093:198093	846614	29	True				
ANR	848417	Statement	""","""	6900:43:198095:198097	846614	30	True				
ANR	848418	Statement	:	6900:46:198098:198098	846614	31	True				
ANR	848419	Statement	""""""	6900:48:198100:198101	846614	32	True				
ANR	848420	Statement	)	6900:50:198102:198102	846614	33	True				
ANR	848421	ExpressionStatement		6900:51:198103:198103	846614	34	True				
ANR	848422	ElseStatement	else		846614	0					
ANR	848423	CompoundStatement		234:4:6863:6876	846614	0					
ANR	848424	IdentifierDeclStatement	RAnalFunction * fcn ;	6902:4:198128:198146	846614	0	True				
ANR	848425	IdentifierDecl	* fcn		846614	0					
ANR	848426	IdentifierDeclType	RAnalFunction *		846614	0					
ANR	848427	Identifier	fcn		846614	1					
ANR	848428	IdentifierDeclStatement	char * comment ;	6903:4:198152:198165	846614	1	True				
ANR	848429	IdentifierDecl	* comment		846614	0					
ANR	848430	IdentifierDeclType	char *		846614	0					
ANR	848431	Identifier	comment		846614	1					
ANR	848432	Statement	r_list_foreach	6904:4:198171:198184	846614	2	True				
ANR	848433	Statement	(	6904:19:198186:198186	846614	3	True				
ANR	848434	Statement	list	6904:20:198187:198190	846614	4	True				
ANR	848435	Statement	","	6904:24:198191:198191	846614	5	True				
ANR	848436	Statement	iter	6904:26:198193:198196	846614	6	True				
ANR	848437	Statement	","	6904:30:198197:198197	846614	7	True				
ANR	848438	Statement	ref	6904:32:198199:198201	846614	8	True				
ANR	848439	Statement	)	6904:35:198202:198202	846614	9	True				
ANR	848440	CompoundStatement		239:5:7127:7291	846614	10					
ANR	848441	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , ref -> addr , 0 )"	6905:5:198211:198261	846614	0	True				
ANR	848442	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , ref -> addr , 0 )"		846614	0		=			
ANR	848443	Identifier	fcn		846614	0					
ANR	848444	CallExpression	"r_anal_get_fcn_in ( core -> anal , ref -> addr , 0 )"		846614	1					
ANR	848445	Callee	r_anal_get_fcn_in		846614	0					
ANR	848446	Identifier	r_anal_get_fcn_in		846614	0					
ANR	848447	ArgumentList	core -> anal		846614	1					
ANR	848448	Argument	core -> anal		846614	0					
ANR	848449	PtrMemberAccess	core -> anal		846614	0					
ANR	848450	Identifier	core		846614	0					
ANR	848451	Identifier	anal		846614	1					
ANR	848452	Argument	ref -> addr		846614	1					
ANR	848453	PtrMemberAccess	ref -> addr		846614	0					
ANR	848454	Identifier	ref		846614	0					
ANR	848455	Identifier	addr		846614	1					
ANR	848456	Argument	0		846614	2					
ANR	848457	PrimaryExpression	0		846614	0					
ANR	848458	IdentifierDeclStatement	"char * buf_asm = get_buf_asm ( core , addr , ref -> addr , fcn , true ) ;"	6906:5:198268:198330	846614	1	True				
ANR	848459	IdentifierDecl	"* buf_asm = get_buf_asm ( core , addr , ref -> addr , fcn , true )"		846614	0					
ANR	848460	IdentifierDeclType	char *		846614	0					
ANR	848461	Identifier	buf_asm		846614	1					
ANR	848462	AssignmentExpression	"* buf_asm = get_buf_asm ( core , addr , ref -> addr , fcn , true )"		846614	2		=			
ANR	848463	Identifier	buf_asm		846614	0					
ANR	848464	CallExpression	"get_buf_asm ( core , addr , ref -> addr , fcn , true )"		846614	1					
ANR	848465	Callee	get_buf_asm		846614	0					
ANR	848466	Identifier	get_buf_asm		846614	0					
ANR	848467	ArgumentList	core		846614	1					
ANR	848468	Argument	core		846614	0					
ANR	848469	Identifier	core		846614	0					
ANR	848470	Argument	addr		846614	1					
ANR	848471	Identifier	addr		846614	0					
ANR	848472	Argument	ref -> addr		846614	2					
ANR	848473	PtrMemberAccess	ref -> addr		846614	0					
ANR	848474	Identifier	ref		846614	0					
ANR	848475	Identifier	addr		846614	1					
ANR	848476	Argument	fcn		846614	3					
ANR	848477	Identifier	fcn		846614	0					
ANR	848478	Argument	true		846614	4					
ANR	848479	Identifier	true		846614	0					
ANR	848480	ExpressionStatement	"comment = r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , ref -> addr )"	6907:5:198337:198409	846614	2	True				
ANR	848481	AssignmentExpression	"comment = r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , ref -> addr )"		846614	0		=			
ANR	848482	Identifier	comment		846614	0					
ANR	848483	CallExpression	"r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , ref -> addr )"		846614	1					
ANR	848484	Callee	r_meta_get_string		846614	0					
ANR	848485	Identifier	r_meta_get_string		846614	0					
ANR	848486	ArgumentList	core -> anal		846614	1					
ANR	848487	Argument	core -> anal		846614	0					
ANR	848488	PtrMemberAccess	core -> anal		846614	0					
ANR	848489	Identifier	core		846614	0					
ANR	848490	Identifier	anal		846614	1					
ANR	848491	Argument	R_META_TYPE_COMMENT		846614	1					
ANR	848492	Identifier	R_META_TYPE_COMMENT		846614	0					
ANR	848493	Argument	ref -> addr		846614	2					
ANR	848494	PtrMemberAccess	ref -> addr		846614	0					
ANR	848495	Identifier	ref		846614	0					
ANR	848496	Identifier	addr		846614	1					
ANR	848497	IdentifierDeclStatement	"char * buf_fcn = comment ? r_str_newf ( ""%s; %s"" , fcn ? fcn -> name : ""(nofunc)"" , strtok ( comment , ""\\n"" ) ) : r_str_newf ( ""%s"" , fcn ? fcn -> name : ""(nofunc)"" ) ;"	6908:5:198416:198580	846614	3	True				
ANR	848498	IdentifierDecl	"* buf_fcn = comment ? r_str_newf ( ""%s; %s"" , fcn ? fcn -> name : ""(nofunc)"" , strtok ( comment , ""\\n"" ) ) : r_str_newf ( ""%s"" , fcn ? fcn -> name : ""(nofunc)"" )"		846614	0					
ANR	848499	IdentifierDeclType	char *		846614	0					
ANR	848500	Identifier	buf_fcn		846614	1					
ANR	848501	AssignmentExpression	"* buf_fcn = comment ? r_str_newf ( ""%s; %s"" , fcn ? fcn -> name : ""(nofunc)"" , strtok ( comment , ""\\n"" ) ) : r_str_newf ( ""%s"" , fcn ? fcn -> name : ""(nofunc)"" )"		846614	2		=			
ANR	848502	Identifier	buf_fcn		846614	0					
ANR	848503	ConditionalExpression	"comment ? r_str_newf ( ""%s; %s"" , fcn ? fcn -> name : ""(nofunc)"" , strtok ( comment , ""\\n"" ) ) : r_str_newf ( ""%s"" , fcn ? fcn -> name : ""(nofunc)"" )"		846614	1					
ANR	848504	Condition	comment		846614	0					
ANR	848505	Identifier	comment		846614	0					
ANR	848506	CallExpression	"r_str_newf ( ""%s; %s"" , fcn ? fcn -> name : ""(nofunc)"" , strtok ( comment , ""\\n"" ) )"		846614	1					
ANR	848507	Callee	r_str_newf		846614	0					
ANR	848508	Identifier	r_str_newf		846614	0					
ANR	848509	ArgumentList	"""%s; %s"""		846614	1					
ANR	848510	Argument	"""%s; %s"""		846614	0					
ANR	848511	PrimaryExpression	"""%s; %s"""		846614	0					
ANR	848512	Argument	"fcn ? fcn -> name : ""(nofunc)"""		846614	1					
ANR	848513	ConditionalExpression	"fcn ? fcn -> name : ""(nofunc)"""		846614	0					
ANR	848514	Condition	fcn		846614	0					
ANR	848515	Identifier	fcn		846614	0					
ANR	848516	PtrMemberAccess	fcn -> name		846614	1					
ANR	848517	Identifier	fcn		846614	0					
ANR	848518	Identifier	name		846614	1					
ANR	848519	PrimaryExpression	"""(nofunc)"""		846614	2					
ANR	848520	Argument	"strtok ( comment , ""\\n"" )"		846614	2					
ANR	848521	CallExpression	"strtok ( comment , ""\\n"" )"		846614	0					
ANR	848522	Callee	strtok		846614	0					
ANR	848523	Identifier	strtok		846614	0					
ANR	848524	ArgumentList	comment		846614	1					
ANR	848525	Argument	comment		846614	0					
ANR	848526	Identifier	comment		846614	0					
ANR	848527	Argument	"""\\n"""		846614	1					
ANR	848528	PrimaryExpression	"""\\n"""		846614	0					
ANR	848529	CallExpression	"r_str_newf ( ""%s"" , fcn ? fcn -> name : ""(nofunc)"" )"		846614	2					
ANR	848530	Callee	r_str_newf		846614	0					
ANR	848531	Identifier	r_str_newf		846614	0					
ANR	848532	ArgumentList	"""%s"""		846614	1					
ANR	848533	Argument	"""%s"""		846614	0					
ANR	848534	PrimaryExpression	"""%s"""		846614	0					
ANR	848535	Argument	"fcn ? fcn -> name : ""(nofunc)"""		846614	1					
ANR	848536	ConditionalExpression	"fcn ? fcn -> name : ""(nofunc)"""		846614	0					
ANR	848537	Condition	fcn		846614	0					
ANR	848538	Identifier	fcn		846614	0					
ANR	848539	PtrMemberAccess	fcn -> name		846614	1					
ANR	848540	Identifier	fcn		846614	0					
ANR	848541	Identifier	name		846614	1					
ANR	848542	PrimaryExpression	"""(nofunc)"""		846614	2					
ANR	848543	Statement	r_cons_printf	6911:5:198587:198599	846614	4	True				
ANR	848544	Statement	(	6911:19:198601:198601	846614	5	True				
ANR	848545	Statement	"""%s 0x%"""	6911:20:198602:198609	846614	6	True				
ANR	848546	Statement	PFMT64x	6911:29:198611:198617	846614	7	True				
ANR	848547	Statement	""" [%s] %s\\n"""	6911:37:198619:198630	846614	8	True				
ANR	848548	Statement	","	6911:49:198631:198631	846614	9	True				
ANR	848549	Statement	buf_fcn	6912:6:198639:198645	846614	10	True				
ANR	848550	Statement	","	6912:13:198646:198646	846614	11	True				
ANR	848551	Statement	ref	6912:15:198648:198650	846614	12	True				
ANR	848552	Statement	->	6912:18:198651:198652	846614	13	True				
ANR	848553	Statement	addr	6912:20:198653:198656	846614	14	True				
ANR	848554	Statement	","	6912:24:198657:198657	846614	15	True				
ANR	848555	Statement	r_anal_xrefs_type_tostring	6912:26:198659:198684	846614	16	True				
ANR	848556	Statement	(	6912:53:198686:198686	846614	17	True				
ANR	848557	Statement	ref	6912:54:198687:198689	846614	18	True				
ANR	848558	Statement	->	6912:57:198690:198691	846614	19	True				
ANR	848559	Statement	type	6912:59:198692:198695	846614	20	True				
ANR	848560	Statement	)	6912:63:198696:198696	846614	21	True				
ANR	848561	Statement	","	6912:64:198697:198697	846614	22	True				
ANR	848562	Statement	buf_asm	6912:66:198699:198705	846614	23	True				
ANR	848563	Statement	)	6912:73:198706:198706	846614	24	True				
ANR	848564	ExpressionStatement		6912:74:198707:198707	846614	25	True				
ANR	848565	ExpressionStatement	free ( buf_asm )	6913:5:198714:198728	846614	26	True				
ANR	848566	CallExpression	free ( buf_asm )		846614	0					
ANR	848567	Callee	free		846614	0					
ANR	848568	Identifier	free		846614	0					
ANR	848569	ArgumentList	buf_asm		846614	1					
ANR	848570	Argument	buf_asm		846614	0					
ANR	848571	Identifier	buf_asm		846614	0					
ANR	848572	ExpressionStatement	free ( buf_fcn )	6914:5:198735:198749	846614	27	True				
ANR	848573	CallExpression	free ( buf_fcn )		846614	0					
ANR	848574	Callee	free		846614	0					
ANR	848575	Identifier	free		846614	0					
ANR	848576	ArgumentList	buf_fcn		846614	1					
ANR	848577	Argument	buf_fcn		846614	0					
ANR	848578	Identifier	buf_fcn		846614	0					
ANR	848579	ElseStatement	else		846614	0					
ANR	848580	CompoundStatement		248:9:7482:7482	846614	0					
ANR	848581	IfStatement	if ( input [ 1 ] == 'j' )		846614	0					
ANR	848582	Condition	input [ 1 ] == 'j'	6918:7:198780:198794	846614	0	True				
ANR	848583	EqualityExpression	input [ 1 ] == 'j'		846614	0		==			
ANR	848584	ArrayIndexing	input [ 1 ]		846614	0					
ANR	848585	Identifier	input		846614	0					
ANR	848586	PrimaryExpression	1		846614	1					
ANR	848587	PrimaryExpression	'j'		846614	1					
ANR	848588	CompoundStatement		250:4:7524:7542	846614	1					
ANR	848589	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	6919:4:198813:198831	846614	0	True				
ANR	848590	IdentifierDecl	* pj = pj_new ( )		846614	0					
ANR	848591	IdentifierDeclType	PJ *		846614	0					
ANR	848592	Identifier	pj		846614	1					
ANR	848593	AssignmentExpression	* pj = pj_new ( )		846614	2		=			
ANR	848594	Identifier	pj		846614	0					
ANR	848595	CallExpression	pj_new ( )		846614	1					
ANR	848596	Callee	pj_new		846614	0					
ANR	848597	Identifier	pj_new		846614	0					
ANR	848598	ArgumentList			846614	1					
ANR	848599	IfStatement	if ( ! pj )		846614	1					
ANR	848600	Condition	! pj	6920:8:198841:198843	846614	0	True				
ANR	848601	UnaryOperationExpression	! pj		846614	0					
ANR	848602	UnaryOperator	!		846614	0					
ANR	848603	Identifier	pj		846614	1					
ANR	848604	CompoundStatement		251:13:7557:7557	846614	1					
ANR	848605	ReturnStatement	return false ;	6921:5:198853:198865	846614	0	True				
ANR	848606	Identifier	false		846614	0					
ANR	848607	ExpressionStatement	pj_a ( pj )	6923:4:198877:198886	846614	2	True				
ANR	848608	CallExpression	pj_a ( pj )		846614	0					
ANR	848609	Callee	pj_a		846614	0					
ANR	848610	Identifier	pj_a		846614	0					
ANR	848611	ArgumentList	pj		846614	1					
ANR	848612	Argument	pj		846614	0					
ANR	848613	Identifier	pj		846614	0					
ANR	848614	ExpressionStatement	pj_end ( pj )	6924:4:198892:198903	846614	3	True				
ANR	848615	CallExpression	pj_end ( pj )		846614	0					
ANR	848616	Callee	pj_end		846614	0					
ANR	848617	Identifier	pj_end		846614	0					
ANR	848618	ArgumentList	pj		846614	1					
ANR	848619	Argument	pj		846614	0					
ANR	848620	Identifier	pj		846614	0					
ANR	848621	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	6925:4:198909:198940	846614	4	True				
ANR	848622	CallExpression	r_cons_println ( pj_string ( pj ) )		846614	0					
ANR	848623	Callee	r_cons_println		846614	0					
ANR	848624	Identifier	r_cons_println		846614	0					
ANR	848625	ArgumentList	pj_string ( pj )		846614	1					
ANR	848626	Argument	pj_string ( pj )		846614	0					
ANR	848627	CallExpression	pj_string ( pj )		846614	0					
ANR	848628	Callee	pj_string		846614	0					
ANR	848629	Identifier	pj_string		846614	0					
ANR	848630	ArgumentList	pj		846614	1					
ANR	848631	Argument	pj		846614	0					
ANR	848632	Identifier	pj		846614	0					
ANR	848633	ExpressionStatement	pj_free ( pj )	6926:4:198946:198958	846614	5	True				
ANR	848634	CallExpression	pj_free ( pj )		846614	0					
ANR	848635	Callee	pj_free		846614	0					
ANR	848636	Identifier	pj_free		846614	0					
ANR	848637	ArgumentList	pj		846614	1					
ANR	848638	Argument	pj		846614	0					
ANR	848639	Identifier	pj		846614	0					
ANR	848640	ExpressionStatement	r_list_free ( list )	6929:2:198971:198989	846614	11	True				
ANR	848641	CallExpression	r_list_free ( list )		846614	0					
ANR	848642	Callee	r_list_free		846614	0					
ANR	848643	Identifier	r_list_free		846614	0					
ANR	848644	ArgumentList	list		846614	1					
ANR	848645	Argument	list		846614	0					
ANR	848646	Identifier	list		846614	0					
ANR	848647	BreakStatement	break ;	6930:3:198994:198999	846614	20	True				
ANR	848648	Label	case 'f' :	6931:1:199002:199010	846614	21	True				
ANR	848649	IfStatement	if ( input [ 1 ] == 'f' )		846614	22					
ANR	848650	Condition	input [ 1 ] == 'f'	6932:6:199018:199032	846614	0	True				
ANR	848651	EqualityExpression	input [ 1 ] == 'f'		846614	0		==			
ANR	848652	ArrayIndexing	input [ 1 ]		846614	0					
ANR	848653	Identifier	input		846614	0					
ANR	848654	PrimaryExpression	1		846614	1					
ANR	848655	PrimaryExpression	'f'		846614	1					
ANR	848656	CompoundStatement		267:3:7865:7879	846614	1					
ANR	848657	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 ) ;"	6933:3:199050:199111	846614	0	True				
ANR	848658	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		846614	0					
ANR	848659	IdentifierDeclType	RAnalFunction *		846614	0					
ANR	848660	Identifier	fcn		846614	1					
ANR	848661	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		846614	2		=			
ANR	848662	Identifier	fcn		846614	0					
ANR	848663	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , 0 )"		846614	1					
ANR	848664	Callee	r_anal_get_fcn_in		846614	0					
ANR	848665	Identifier	r_anal_get_fcn_in		846614	0					
ANR	848666	ArgumentList	core -> anal		846614	1					
ANR	848667	Argument	core -> anal		846614	0					
ANR	848668	PtrMemberAccess	core -> anal		846614	0					
ANR	848669	Identifier	core		846614	0					
ANR	848670	Identifier	anal		846614	1					
ANR	848671	Argument	addr		846614	1					
ANR	848672	Identifier	addr		846614	0					
ANR	848673	Argument	0		846614	2					
ANR	848674	PrimaryExpression	0		846614	0					
ANR	848675	IdentifierDeclStatement	RListIter * iter ;	6934:3:199116:199131	846614	1	True				
ANR	848676	IdentifierDecl	* iter		846614	0					
ANR	848677	IdentifierDeclType	RListIter *		846614	0					
ANR	848678	Identifier	iter		846614	1					
ANR	848679	IdentifierDeclStatement	PJ * pj = NULL ;	6935:3:199136:199149	846614	2	True				
ANR	848680	IdentifierDecl	* pj = NULL		846614	0					
ANR	848681	IdentifierDeclType	PJ *		846614	0					
ANR	848682	Identifier	pj		846614	1					
ANR	848683	AssignmentExpression	* pj = NULL		846614	2		=			
ANR	848684	Identifier	NULL		846614	0					
ANR	848685	Identifier	NULL		846614	1					
ANR	848686	IdentifierDeclStatement	RAnalRef * refi ;	6936:3:199154:199168	846614	3	True				
ANR	848687	IdentifierDecl	* refi		846614	0					
ANR	848688	IdentifierDeclType	RAnalRef *		846614	0					
ANR	848689	Identifier	refi		846614	1					
ANR	848690	IfStatement	if ( input [ 2 ] == 'j' )		846614	4					
ANR	848691	Condition	input [ 2 ] == 'j'	6937:7:199177:199191	846614	0	True				
ANR	848692	EqualityExpression	input [ 2 ] == 'j'		846614	0		==			
ANR	848693	ArrayIndexing	input [ 2 ]		846614	0					
ANR	848694	Identifier	input		846614	0					
ANR	848695	PrimaryExpression	2		846614	1					
ANR	848696	PrimaryExpression	'j'		846614	1					
ANR	848697	CompoundStatement		268:24:7905:7905	846614	1					
ANR	848698	ExpressionStatement	pj = pj_new ( )	6939:4:199242:199256	846614	0	True				
ANR	848699	AssignmentExpression	pj = pj_new ( )		846614	0		=			
ANR	848700	Identifier	pj		846614	0					
ANR	848701	CallExpression	pj_new ( )		846614	1					
ANR	848702	Callee	pj_new		846614	0					
ANR	848703	Identifier	pj_new		846614	0					
ANR	848704	ArgumentList			846614	1					
ANR	848705	ExpressionStatement	pj_a ( pj )	6940:4:199262:199271	846614	1	True				
ANR	848706	CallExpression	pj_a ( pj )		846614	0					
ANR	848707	Callee	pj_a		846614	0					
ANR	848708	Identifier	pj_a		846614	0					
ANR	848709	ArgumentList	pj		846614	1					
ANR	848710	Argument	pj		846614	0					
ANR	848711	Identifier	pj		846614	0					
ANR	848712	IfStatement	if ( fcn )		846614	5					
ANR	848713	Condition	fcn	6942:7:199285:199287	846614	0	True				
ANR	848714	Identifier	fcn		846614	0					
ANR	848715	CompoundStatement		274:4:8007:8058	846614	1					
ANR	848716	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( core -> anal , fcn ) ;"	6943:4:199296:199347	846614	0	True				
ANR	848717	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		846614	0					
ANR	848718	IdentifierDeclType	RList *		846614	0					
ANR	848719	Identifier	refs		846614	1					
ANR	848720	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		846614	2		=			
ANR	848721	Identifier	refs		846614	0					
ANR	848722	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		846614	1					
ANR	848723	Callee	r_anal_fcn_get_refs		846614	0					
ANR	848724	Identifier	r_anal_fcn_get_refs		846614	0					
ANR	848725	ArgumentList	core -> anal		846614	1					
ANR	848726	Argument	core -> anal		846614	0					
ANR	848727	PtrMemberAccess	core -> anal		846614	0					
ANR	848728	Identifier	core		846614	0					
ANR	848729	Identifier	anal		846614	1					
ANR	848730	Argument	fcn		846614	1					
ANR	848731	Identifier	fcn		846614	0					
ANR	848732	Statement	r_list_foreach	6944:4:199353:199366	846614	1	True				
ANR	848733	Statement	(	6944:19:199368:199368	846614	2	True				
ANR	848734	Statement	refs	6944:20:199369:199372	846614	3	True				
ANR	848735	Statement	","	6944:24:199373:199373	846614	4	True				
ANR	848736	Statement	iter	6944:26:199375:199378	846614	5	True				
ANR	848737	Statement	","	6944:30:199379:199379	846614	6	True				
ANR	848738	Statement	refi	6944:32:199381:199384	846614	7	True				
ANR	848739	Statement	)	6944:36:199385:199385	846614	8	True				
ANR	848740	CompoundStatement		277:5:8172:8206	846614	9					
ANR	848741	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_at ( core -> flags , refi -> addr , true ) ;"	6945:5:199394:199454	846614	0	True				
ANR	848742	IdentifierDecl	"* f = r_flag_get_at ( core -> flags , refi -> addr , true )"		846614	0					
ANR	848743	IdentifierDeclType	RFlagItem *		846614	0					
ANR	848744	Identifier	f		846614	1					
ANR	848745	AssignmentExpression	"* f = r_flag_get_at ( core -> flags , refi -> addr , true )"		846614	2		=			
ANR	848746	Identifier	f		846614	0					
ANR	848747	CallExpression	"r_flag_get_at ( core -> flags , refi -> addr , true )"		846614	1					
ANR	848748	Callee	r_flag_get_at		846614	0					
ANR	848749	Identifier	r_flag_get_at		846614	0					
ANR	848750	ArgumentList	core -> flags		846614	1					
ANR	848751	Argument	core -> flags		846614	0					
ANR	848752	PtrMemberAccess	core -> flags		846614	0					
ANR	848753	Identifier	core		846614	0					
ANR	848754	Identifier	flags		846614	1					
ANR	848755	Argument	refi -> addr		846614	1					
ANR	848756	PtrMemberAccess	refi -> addr		846614	0					
ANR	848757	Identifier	refi		846614	0					
ANR	848758	Identifier	addr		846614	1					
ANR	848759	Argument	true		846614	2					
ANR	848760	Identifier	true		846614	0					
ANR	848761	IdentifierDeclStatement	"const char * name = f ? f -> name : """" ;"	6946:5:199461:199495	846614	1	True				
ANR	848762	IdentifierDecl	"* name = f ? f -> name : """""		846614	0					
ANR	848763	IdentifierDeclType	const char *		846614	0					
ANR	848764	Identifier	name		846614	1					
ANR	848765	AssignmentExpression	"* name = f ? f -> name : """""		846614	2		=			
ANR	848766	Identifier	name		846614	0					
ANR	848767	ConditionalExpression	"f ? f -> name : """""		846614	1					
ANR	848768	Condition	f		846614	0					
ANR	848769	Identifier	f		846614	0					
ANR	848770	PtrMemberAccess	f -> name		846614	1					
ANR	848771	Identifier	f		846614	0					
ANR	848772	Identifier	name		846614	1					
ANR	848773	PrimaryExpression	""""""		846614	2					
ANR	848774	IfStatement	if ( input [ 2 ] == 'j' )		846614	2					
ANR	848775	Condition	input [ 2 ] == 'j'	6947:9:199506:199520	846614	0	True				
ANR	848776	EqualityExpression	input [ 2 ] == 'j'		846614	0		==			
ANR	848777	ArrayIndexing	input [ 2 ]		846614	0					
ANR	848778	Identifier	input		846614	0					
ANR	848779	PrimaryExpression	2		846614	1					
ANR	848780	PrimaryExpression	'j'		846614	1					
ANR	848781	CompoundStatement		278:26:8234:8234	846614	1					
ANR	848782	ExpressionStatement	pj_o ( pj )	6948:6:199531:199540	846614	0	True				
ANR	848783	CallExpression	pj_o ( pj )		846614	0					
ANR	848784	Callee	pj_o		846614	0					
ANR	848785	Identifier	pj_o		846614	0					
ANR	848786	ArgumentList	pj		846614	1					
ANR	848787	Argument	pj		846614	0					
ANR	848788	Identifier	pj		846614	0					
ANR	848789	ExpressionStatement	"pj_ks ( pj , ""type"" , r_anal_xrefs_type_tostring ( refi -> type ) )"	6949:6:199548:199606	846614	1	True				
ANR	848790	CallExpression	"pj_ks ( pj , ""type"" , r_anal_xrefs_type_tostring ( refi -> type ) )"		846614	0					
ANR	848791	Callee	pj_ks		846614	0					
ANR	848792	Identifier	pj_ks		846614	0					
ANR	848793	ArgumentList	pj		846614	1					
ANR	848794	Argument	pj		846614	0					
ANR	848795	Identifier	pj		846614	0					
ANR	848796	Argument	"""type"""		846614	1					
ANR	848797	PrimaryExpression	"""type"""		846614	0					
ANR	848798	Argument	r_anal_xrefs_type_tostring ( refi -> type )		846614	2					
ANR	848799	CallExpression	r_anal_xrefs_type_tostring ( refi -> type )		846614	0					
ANR	848800	Callee	r_anal_xrefs_type_tostring		846614	0					
ANR	848801	Identifier	r_anal_xrefs_type_tostring		846614	0					
ANR	848802	ArgumentList	refi -> type		846614	1					
ANR	848803	Argument	refi -> type		846614	0					
ANR	848804	PtrMemberAccess	refi -> type		846614	0					
ANR	848805	Identifier	refi		846614	0					
ANR	848806	Identifier	type		846614	1					
ANR	848807	ExpressionStatement	"pj_kn ( pj , ""at"" , refi -> at )"	6950:6:199614:199640	846614	2	True				
ANR	848808	CallExpression	"pj_kn ( pj , ""at"" , refi -> at )"		846614	0					
ANR	848809	Callee	pj_kn		846614	0					
ANR	848810	Identifier	pj_kn		846614	0					
ANR	848811	ArgumentList	pj		846614	1					
ANR	848812	Argument	pj		846614	0					
ANR	848813	Identifier	pj		846614	0					
ANR	848814	Argument	"""at"""		846614	1					
ANR	848815	PrimaryExpression	"""at"""		846614	0					
ANR	848816	Argument	refi -> at		846614	2					
ANR	848817	PtrMemberAccess	refi -> at		846614	0					
ANR	848818	Identifier	refi		846614	0					
ANR	848819	Identifier	at		846614	1					
ANR	848820	ExpressionStatement	"pj_kn ( pj , ""ref"" , refi -> addr )"	6951:6:199648:199677	846614	3	True				
ANR	848821	CallExpression	"pj_kn ( pj , ""ref"" , refi -> addr )"		846614	0					
ANR	848822	Callee	pj_kn		846614	0					
ANR	848823	Identifier	pj_kn		846614	0					
ANR	848824	ArgumentList	pj		846614	1					
ANR	848825	Argument	pj		846614	0					
ANR	848826	Identifier	pj		846614	0					
ANR	848827	Argument	"""ref"""		846614	1					
ANR	848828	PrimaryExpression	"""ref"""		846614	0					
ANR	848829	Argument	refi -> addr		846614	2					
ANR	848830	PtrMemberAccess	refi -> addr		846614	0					
ANR	848831	Identifier	refi		846614	0					
ANR	848832	Identifier	addr		846614	1					
ANR	848833	ExpressionStatement	"pj_ks ( pj , ""name"" , name )"	6952:6:199685:199709	846614	4	True				
ANR	848834	CallExpression	"pj_ks ( pj , ""name"" , name )"		846614	0					
ANR	848835	Callee	pj_ks		846614	0					
ANR	848836	Identifier	pj_ks		846614	0					
ANR	848837	ArgumentList	pj		846614	1					
ANR	848838	Argument	pj		846614	0					
ANR	848839	Identifier	pj		846614	0					
ANR	848840	Argument	"""name"""		846614	1					
ANR	848841	PrimaryExpression	"""name"""		846614	0					
ANR	848842	Argument	name		846614	2					
ANR	848843	Identifier	name		846614	0					
ANR	848844	ExpressionStatement	pj_end ( pj )	6953:6:199717:199728	846614	5	True				
ANR	848845	CallExpression	pj_end ( pj )		846614	0					
ANR	848846	Callee	pj_end		846614	0					
ANR	848847	Identifier	pj_end		846614	0					
ANR	848848	ArgumentList	pj		846614	1					
ANR	848849	Argument	pj		846614	0					
ANR	848850	Identifier	pj		846614	0					
ANR	848851	ElseStatement	else		846614	0					
ANR	848852	CompoundStatement		285:12:8453:8453	846614	0					
ANR	848853	Statement	r_cons_printf	6955:6:199750:199762	846614	0	True				
ANR	848854	Statement	(	6955:20:199764:199764	846614	1	True				
ANR	848855	Statement	"""%s 0x%08"""	6955:21:199765:199774	846614	2	True				
ANR	848856	Statement	PFMT64x	6955:31:199775:199781	846614	3	True				
ANR	848857	Statement	""" 0x%08"""	6955:38:199782:199789	846614	4	True				
ANR	848858	Statement	PFMT64x	6955:46:199790:199796	846614	5	True				
ANR	848859	Statement	""" %s\\n"""	6955:53:199797:199803	846614	6	True				
ANR	848860	Statement	","	6955:60:199804:199804	846614	7	True				
ANR	848861	Statement	r_anal_xrefs_type_tostring	6956:7:199813:199838	846614	8	True				
ANR	848862	Statement	(	6956:33:199839:199839	846614	9	True				
ANR	848863	Statement	refi	6956:34:199840:199843	846614	10	True				
ANR	848864	Statement	->	6956:38:199844:199845	846614	11	True				
ANR	848865	Statement	type	6956:40:199846:199849	846614	12	True				
ANR	848866	Statement	)	6956:44:199850:199850	846614	13	True				
ANR	848867	Statement	","	6956:45:199851:199851	846614	14	True				
ANR	848868	Statement	refi	6956:47:199853:199856	846614	15	True				
ANR	848869	Statement	->	6956:51:199857:199858	846614	16	True				
ANR	848870	Statement	at	6956:53:199859:199860	846614	17	True				
ANR	848871	Statement	","	6956:55:199861:199861	846614	18	True				
ANR	848872	Statement	refi	6956:57:199863:199866	846614	19	True				
ANR	848873	Statement	->	6956:61:199867:199868	846614	20	True				
ANR	848874	Statement	addr	6956:63:199869:199872	846614	21	True				
ANR	848875	Statement	","	6956:67:199873:199873	846614	22	True				
ANR	848876	Statement	name	6956:69:199875:199878	846614	23	True				
ANR	848877	Statement	)	6956:73:199879:199879	846614	24	True				
ANR	848878	ExpressionStatement		6956:74:199880:199880	846614	25	True				
ANR	848879	IfStatement	if ( input [ 2 ] == 'j' )		846614	10					
ANR	848880	Condition	input [ 2 ] == 'j'	6959:8:199903:199918	846614	0	True				
ANR	848881	EqualityExpression	input [ 2 ] == 'j'		846614	0		==			
ANR	848882	ArrayIndexing	input [ 2 ]		846614	0					
ANR	848883	Identifier	input		846614	0					
ANR	848884	PrimaryExpression	2		846614	1					
ANR	848885	PrimaryExpression	'j'		846614	1					
ANR	848886	CompoundStatement		290:26:8632:8632	846614	1					
ANR	848887	ExpressionStatement	pj_end ( pj )	6960:5:199928:199939	846614	0	True				
ANR	848888	CallExpression	pj_end ( pj )		846614	0					
ANR	848889	Callee	pj_end		846614	0					
ANR	848890	Identifier	pj_end		846614	0					
ANR	848891	ArgumentList	pj		846614	1					
ANR	848892	Argument	pj		846614	0					
ANR	848893	Identifier	pj		846614	0					
ANR	848894	IfStatement	if ( pj )		846614	11					
ANR	848895	Condition	pj	6962:8:199955:199956	846614	0	True				
ANR	848896	Identifier	pj		846614	0					
ANR	848897	CompoundStatement		293:12:8670:8670	846614	1					
ANR	848898	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	6963:5:199966:199997	846614	0	True				
ANR	848899	CallExpression	r_cons_println ( pj_string ( pj ) )		846614	0					
ANR	848900	Callee	r_cons_println		846614	0					
ANR	848901	Identifier	r_cons_println		846614	0					
ANR	848902	ArgumentList	pj_string ( pj )		846614	1					
ANR	848903	Argument	pj_string ( pj )		846614	0					
ANR	848904	CallExpression	pj_string ( pj )		846614	0					
ANR	848905	Callee	pj_string		846614	0					
ANR	848906	Identifier	pj_string		846614	0					
ANR	848907	ArgumentList	pj		846614	1					
ANR	848908	Argument	pj		846614	0					
ANR	848909	Identifier	pj		846614	0					
ANR	848910	ExpressionStatement	pj_free ( pj )	6964:5:200004:200016	846614	1	True				
ANR	848911	CallExpression	pj_free ( pj )		846614	0					
ANR	848912	Callee	pj_free		846614	0					
ANR	848913	Identifier	pj_free		846614	0					
ANR	848914	ArgumentList	pj		846614	1					
ANR	848915	Argument	pj		846614	0					
ANR	848916	Identifier	pj		846614	0					
ANR	848917	ElseStatement	else		846614	0					
ANR	848918	CompoundStatement		297:10:8745:8745	846614	0					
ANR	848919	ExpressionStatement	"eprintf ( ""Cannot find any function\\n"" )"	6967:4:200040:200078	846614	0	True				
ANR	848920	CallExpression	"eprintf ( ""Cannot find any function\\n"" )"		846614	0					
ANR	848921	Callee	eprintf		846614	0					
ANR	848922	Identifier	eprintf		846614	0					
ANR	848923	ArgumentList	"""Cannot find any function\\n"""		846614	1					
ANR	848924	Argument	"""Cannot find any function\\n"""		846614	0					
ANR	848925	PrimaryExpression	"""Cannot find any function\\n"""		846614	0					
ANR	848926	ElseStatement	else		846614	0					
ANR	848927	CompoundStatement		311:3:9047:9108	846614	0					
ANR	848928	IdentifierDeclStatement	RAsmOp asmop ;	6970:3:200108:200120	846614	0	True				
ANR	848929	IdentifierDecl	asmop		846614	0					
ANR	848930	IdentifierDeclType	RAsmOp		846614	0					
ANR	848931	Identifier	asmop		846614	1					
ANR	848932	IdentifierDeclStatement	"RList * list , * list_ = NULL ;"	6971:3:200125:200151	846614	1	True				
ANR	848933	IdentifierDecl	* list		846614	0					
ANR	848934	IdentifierDeclType	RList *		846614	0					
ANR	848935	Identifier	list		846614	1					
ANR	848936	IdentifierDecl	* list_ = NULL		846614	1					
ANR	848937	IdentifierDeclType	RList *		846614	0					
ANR	848938	Identifier	list_		846614	1					
ANR	848939	AssignmentExpression	* list_ = NULL		846614	2		=			
ANR	848940	Identifier	NULL		846614	0					
ANR	848941	Identifier	NULL		846614	1					
ANR	848942	IdentifierDeclStatement	RAnalRef * ref ;	6972:3:200156:200169	846614	2	True				
ANR	848943	IdentifierDecl	* ref		846614	0					
ANR	848944	IdentifierDeclType	RAnalRef *		846614	0					
ANR	848945	Identifier	ref		846614	1					
ANR	848946	IdentifierDeclStatement	RListIter * iter ;	6973:3:200174:200189	846614	3	True				
ANR	848947	IdentifierDecl	* iter		846614	0					
ANR	848948	IdentifierDeclType	RListIter *		846614	0					
ANR	848949	Identifier	iter		846614	1					
ANR	848950	IdentifierDeclStatement	"char * space = strchr ( input , ' ' ) ;"	6974:3:200194:200227	846614	4	True				
ANR	848951	IdentifierDecl	"* space = strchr ( input , ' ' )"		846614	0					
ANR	848952	IdentifierDeclType	char *		846614	0					
ANR	848953	Identifier	space		846614	1					
ANR	848954	AssignmentExpression	"* space = strchr ( input , ' ' )"		846614	2		=			
ANR	848955	Identifier	space		846614	0					
ANR	848956	CallExpression	"strchr ( input , ' ' )"		846614	1					
ANR	848957	Callee	strchr		846614	0					
ANR	848958	Identifier	strchr		846614	0					
ANR	848959	ArgumentList	input		846614	1					
ANR	848960	Argument	input		846614	0					
ANR	848961	Identifier	input		846614	0					
ANR	848962	Argument	' '		846614	1					
ANR	848963	PrimaryExpression	' '		846614	0					
ANR	848964	IfStatement	if ( space )		846614	5					
ANR	848965	Condition	space	6975:7:200236:200240	846614	0	True				
ANR	848966	Identifier	space		846614	0					
ANR	848967	CompoundStatement		306:14:8954:8954	846614	1					
ANR	848968	ExpressionStatement	"addr = r_num_math ( core -> num , space + 1 )"	6976:4:200249:200289	846614	0	True				
ANR	848969	AssignmentExpression	"addr = r_num_math ( core -> num , space + 1 )"		846614	0		=			
ANR	848970	Identifier	addr		846614	0					
ANR	848971	CallExpression	"r_num_math ( core -> num , space + 1 )"		846614	1					
ANR	848972	Callee	r_num_math		846614	0					
ANR	848973	Identifier	r_num_math		846614	0					
ANR	848974	ArgumentList	core -> num		846614	1					
ANR	848975	Argument	core -> num		846614	0					
ANR	848976	PtrMemberAccess	core -> num		846614	0					
ANR	848977	Identifier	core		846614	0					
ANR	848978	Identifier	num		846614	1					
ANR	848979	Argument	space + 1		846614	1					
ANR	848980	AdditiveExpression	space + 1		846614	0		+			
ANR	848981	Identifier	space		846614	0					
ANR	848982	PrimaryExpression	1		846614	1					
ANR	848983	ElseStatement	else		846614	0					
ANR	848984	CompoundStatement		308:10:9012:9012	846614	0					
ANR	848985	ExpressionStatement	addr = core -> offset	6978:4:200307:200326	846614	0	True				
ANR	848986	AssignmentExpression	addr = core -> offset		846614	0		=			
ANR	848987	Identifier	addr		846614	0					
ANR	848988	PtrMemberAccess	core -> offset		846614	1					
ANR	848989	Identifier	core		846614	0					
ANR	848990	Identifier	offset		846614	1					
ANR	848991	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 ) ;"	6980:3:200336:200397	846614	6	True				
ANR	848992	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		846614	0					
ANR	848993	IdentifierDeclType	RAnalFunction *		846614	0					
ANR	848994	Identifier	fcn		846614	1					
ANR	848995	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		846614	2		=			
ANR	848996	Identifier	fcn		846614	0					
ANR	848997	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , 0 )"		846614	1					
ANR	848998	Callee	r_anal_get_fcn_in		846614	0					
ANR	848999	Identifier	r_anal_get_fcn_in		846614	0					
ANR	849000	ArgumentList	core -> anal		846614	1					
ANR	849001	Argument	core -> anal		846614	0					
ANR	849002	PtrMemberAccess	core -> anal		846614	0					
ANR	849003	Identifier	core		846614	0					
ANR	849004	Identifier	anal		846614	1					
ANR	849005	Argument	addr		846614	1					
ANR	849006	Identifier	addr		846614	0					
ANR	849007	Argument	0		846614	2					
ANR	849008	PrimaryExpression	0		846614	0					
ANR	849009	IfStatement	if ( input [ 1 ] == '.' )		846614	7					
ANR	849010	Condition	input [ 1 ] == '.'	6981:7:200406:200420	846614	0	True				
ANR	849011	EqualityExpression	input [ 1 ] == '.'		846614	0		==			
ANR	849012	ArrayIndexing	input [ 1 ]		846614	0					
ANR	849013	Identifier	input		846614	0					
ANR	849014	PrimaryExpression	1		846614	1					
ANR	849015	PrimaryExpression	'.'		846614	1					
ANR	849016	CompoundStatement		312:24:9134:9134	846614	1					
ANR	849017	ExpressionStatement	"list = list_ = r_anal_xrefs_get_from ( core -> anal , addr )"	6982:4:200439:200494	846614	0	True				
ANR	849018	AssignmentExpression	"list = list_ = r_anal_xrefs_get_from ( core -> anal , addr )"		846614	0		=			
ANR	849019	Identifier	list		846614	0					
ANR	849020	AssignmentExpression	"list_ = r_anal_xrefs_get_from ( core -> anal , addr )"		846614	1		=			
ANR	849021	Identifier	list_		846614	0					
ANR	849022	CallExpression	"r_anal_xrefs_get_from ( core -> anal , addr )"		846614	1					
ANR	849023	Callee	r_anal_xrefs_get_from		846614	0					
ANR	849024	Identifier	r_anal_xrefs_get_from		846614	0					
ANR	849025	ArgumentList	core -> anal		846614	1					
ANR	849026	Argument	core -> anal		846614	0					
ANR	849027	PtrMemberAccess	core -> anal		846614	0					
ANR	849028	Identifier	core		846614	0					
ANR	849029	Identifier	anal		846614	1					
ANR	849030	Argument	addr		846614	1					
ANR	849031	Identifier	addr		846614	0					
ANR	849032	IfStatement	if ( ! list )		846614	1					
ANR	849033	Condition	! list	6983:8:200504:200508	846614	0	True				
ANR	849034	UnaryOperationExpression	! list		846614	0					
ANR	849035	UnaryOperator	!		846614	0					
ANR	849036	Identifier	list		846614	1					
ANR	849037	CompoundStatement		314:15:9222:9222	846614	1					
ANR	849038	ExpressionStatement	"list = r_anal_fcn_get_refs ( core -> anal , fcn )"	6984:5:200518:200562	846614	0	True				
ANR	849039	AssignmentExpression	"list = r_anal_fcn_get_refs ( core -> anal , fcn )"		846614	0		=			
ANR	849040	Identifier	list		846614	0					
ANR	849041	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		846614	1					
ANR	849042	Callee	r_anal_fcn_get_refs		846614	0					
ANR	849043	Identifier	r_anal_fcn_get_refs		846614	0					
ANR	849044	ArgumentList	core -> anal		846614	1					
ANR	849045	Argument	core -> anal		846614	0					
ANR	849046	PtrMemberAccess	core -> anal		846614	0					
ANR	849047	Identifier	core		846614	0					
ANR	849048	Identifier	anal		846614	1					
ANR	849049	Argument	fcn		846614	1					
ANR	849050	Identifier	fcn		846614	0					
ANR	849051	ElseStatement	else		846614	0					
ANR	849052	CompoundStatement		317:10:9291:9291	846614	0					
ANR	849053	ExpressionStatement	"list = r_anal_refs_get ( core -> anal , addr )"	6987:4:200586:200627	846614	0	True				
ANR	849054	AssignmentExpression	"list = r_anal_refs_get ( core -> anal , addr )"		846614	0		=			
ANR	849055	Identifier	list		846614	0					
ANR	849056	CallExpression	"r_anal_refs_get ( core -> anal , addr )"		846614	1					
ANR	849057	Callee	r_anal_refs_get		846614	0					
ANR	849058	Identifier	r_anal_refs_get		846614	0					
ANR	849059	ArgumentList	core -> anal		846614	1					
ANR	849060	Argument	core -> anal		846614	0					
ANR	849061	PtrMemberAccess	core -> anal		846614	0					
ANR	849062	Identifier	core		846614	0					
ANR	849063	Identifier	anal		846614	1					
ANR	849064	Argument	addr		846614	1					
ANR	849065	Identifier	addr		846614	0					
ANR	849066	IfStatement	if ( list )		846614	8					
ANR	849067	Condition	list	6990:7:200642:200645	846614	0	True				
ANR	849068	Identifier	list		846614	0					
ANR	849069	CompoundStatement		321:13:9359:9359	846614	1					
ANR	849070	IfStatement	if ( input [ 1 ] == 'q' )		846614	0					
ANR	849071	Condition	input [ 1 ] == 'q'	6991:8:200658:200672	846614	0	True				
ANR	849072	EqualityExpression	input [ 1 ] == 'q'		846614	0		==			
ANR	849073	ArrayIndexing	input [ 1 ]		846614	0					
ANR	849074	Identifier	input		846614	0					
ANR	849075	PrimaryExpression	1		846614	1					
ANR	849076	PrimaryExpression	'q'		846614	1					
ANR	849077	CompoundStatement		322:25:9386:9386	846614	1					
ANR	849078	Statement	r_list_foreach	6992:5:200692:200705	846614	0	True				
ANR	849079	Statement	(	6992:20:200707:200707	846614	1	True				
ANR	849080	Statement	list	6992:21:200708:200711	846614	2	True				
ANR	849081	Statement	","	6992:25:200712:200712	846614	3	True				
ANR	849082	Statement	iter	6992:27:200714:200717	846614	4	True				
ANR	849083	Statement	","	6992:31:200718:200718	846614	5	True				
ANR	849084	Statement	ref	6992:33:200720:200722	846614	6	True				
ANR	849085	Statement	)	6992:36:200723:200723	846614	7	True				
ANR	849086	CompoundStatement		323:38:9436:9436	846614	8					
ANR	849087	Statement	r_cons_printf	6993:6:200733:200745	846614	0	True				
ANR	849088	Statement	(	6993:20:200747:200747	846614	1	True				
ANR	849089	Statement	"""0x%"""	6993:21:200748:200752	846614	2	True				
ANR	849090	Statement	PFMT64x	6993:27:200754:200760	846614	3	True				
ANR	849091	Statement	"""\\n"""	6993:35:200762:200765	846614	4	True				
ANR	849092	Statement	","	6993:39:200766:200766	846614	5	True				
ANR	849093	Statement	ref	6993:41:200768:200770	846614	6	True				
ANR	849094	Statement	->	6993:44:200771:200772	846614	7	True				
ANR	849095	Statement	at	6993:46:200773:200774	846614	8	True				
ANR	849096	Statement	)	6993:48:200775:200775	846614	9	True				
ANR	849097	ExpressionStatement		6993:49:200776:200776	846614	10	True				
ANR	849098	ElseStatement	else		846614	0					
ANR	849099	IfStatement	if ( input [ 1 ] == 'j' )		846614	0					
ANR	849100	Condition	input [ 1 ] == 'j'	6995:15:200800:200814	846614	0	True				
ANR	849101	EqualityExpression	input [ 1 ] == 'j'		846614	0		==			
ANR	849102	ArrayIndexing	input [ 1 ]		846614	0					
ANR	849103	Identifier	input		846614	0					
ANR	849104	PrimaryExpression	1		846614	1					
ANR	849105	PrimaryExpression	'j'		846614	1					
ANR	849106	CompoundStatement		327:5:9545:9563	846614	1					
ANR	849107	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	6996:5:200834:200852	846614	0	True				
ANR	849108	IdentifierDecl	* pj = pj_new ( )		846614	0					
ANR	849109	IdentifierDeclType	PJ *		846614	0					
ANR	849110	Identifier	pj		846614	1					
ANR	849111	AssignmentExpression	* pj = pj_new ( )		846614	2		=			
ANR	849112	Identifier	pj		846614	0					
ANR	849113	CallExpression	pj_new ( )		846614	1					
ANR	849114	Callee	pj_new		846614	0					
ANR	849115	Identifier	pj_new		846614	0					
ANR	849116	ArgumentList			846614	1					
ANR	849117	IfStatement	if ( ! pj )		846614	1					
ANR	849118	Condition	! pj	6997:9:200863:200865	846614	0	True				
ANR	849119	UnaryOperationExpression	! pj		846614	0					
ANR	849120	UnaryOperator	!		846614	0					
ANR	849121	Identifier	pj		846614	1					
ANR	849122	CompoundStatement		328:14:9579:9579	846614	1					
ANR	849123	ReturnStatement	return false ;	6998:6:200876:200888	846614	0	True				
ANR	849124	Identifier	false		846614	0					
ANR	849125	ExpressionStatement	pj_a ( pj )	7000:5:200902:200911	846614	2	True				
ANR	849126	CallExpression	pj_a ( pj )		846614	0					
ANR	849127	Callee	pj_a		846614	0					
ANR	849128	Identifier	pj_a		846614	0					
ANR	849129	ArgumentList	pj		846614	1					
ANR	849130	Argument	pj		846614	0					
ANR	849131	Identifier	pj		846614	0					
ANR	849132	Statement	r_list_foreach	7001:5:200918:200931	846614	3	True				
ANR	849133	Statement	(	7001:20:200933:200933	846614	4	True				
ANR	849134	Statement	list	7001:21:200934:200937	846614	5	True				
ANR	849135	Statement	","	7001:25:200938:200938	846614	6	True				
ANR	849136	Statement	iter	7001:27:200940:200943	846614	7	True				
ANR	849137	Statement	","	7001:31:200944:200944	846614	8	True				
ANR	849138	Statement	ref	7001:33:200946:200948	846614	9	True				
ANR	849139	Statement	)	7001:36:200949:200949	846614	10	True				
ANR	849140	CompoundStatement		334:6:9741:9752	846614	11					
ANR	849141	IdentifierDeclStatement	ut8 buf [ 16 ] ;	7003:6:201030:201041	846614	0	True				
ANR	849142	IdentifierDecl	buf [ 16 ]		846614	0					
ANR	849143	IdentifierDeclType	ut8 [ 16 ]		846614	0					
ANR	849144	Identifier	buf		846614	1					
ANR	849145	PrimaryExpression	16		846614	2					
ANR	849146	ExpressionStatement	"r_io_read_at ( core -> io , ref -> addr , buf , sizeof ( buf ) )"	7004:6:201049:201102	846614	1	True				
ANR	849147	CallExpression	"r_io_read_at ( core -> io , ref -> addr , buf , sizeof ( buf ) )"		846614	0					
ANR	849148	Callee	r_io_read_at		846614	0					
ANR	849149	Identifier	r_io_read_at		846614	0					
ANR	849150	ArgumentList	core -> io		846614	1					
ANR	849151	Argument	core -> io		846614	0					
ANR	849152	PtrMemberAccess	core -> io		846614	0					
ANR	849153	Identifier	core		846614	0					
ANR	849154	Identifier	io		846614	1					
ANR	849155	Argument	ref -> addr		846614	1					
ANR	849156	PtrMemberAccess	ref -> addr		846614	0					
ANR	849157	Identifier	ref		846614	0					
ANR	849158	Identifier	addr		846614	1					
ANR	849159	Argument	buf		846614	2					
ANR	849160	Identifier	buf		846614	0					
ANR	849161	Argument	sizeof ( buf )		846614	3					
ANR	849162	SizeofExpression	sizeof ( buf )		846614	0					
ANR	849163	Sizeof	sizeof		846614	0					
ANR	849164	SizeofOperand	buf		846614	1					
ANR	849165	ExpressionStatement	"r_asm_set_pc ( core -> assembler , ref -> addr )"	7005:6:201110:201151	846614	2	True				
ANR	849166	CallExpression	"r_asm_set_pc ( core -> assembler , ref -> addr )"		846614	0					
ANR	849167	Callee	r_asm_set_pc		846614	0					
ANR	849168	Identifier	r_asm_set_pc		846614	0					
ANR	849169	ArgumentList	core -> assembler		846614	1					
ANR	849170	Argument	core -> assembler		846614	0					
ANR	849171	PtrMemberAccess	core -> assembler		846614	0					
ANR	849172	Identifier	core		846614	0					
ANR	849173	Identifier	assembler		846614	1					
ANR	849174	Argument	ref -> addr		846614	1					
ANR	849175	PtrMemberAccess	ref -> addr		846614	0					
ANR	849176	Identifier	ref		846614	0					
ANR	849177	Identifier	addr		846614	1					
ANR	849178	ExpressionStatement	"r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) )"	7006:6:201159:201221	846614	3	True				
ANR	849179	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) )"		846614	0					
ANR	849180	Callee	r_asm_disassemble		846614	0					
ANR	849181	Identifier	r_asm_disassemble		846614	0					
ANR	849182	ArgumentList	core -> assembler		846614	1					
ANR	849183	Argument	core -> assembler		846614	0					
ANR	849184	PtrMemberAccess	core -> assembler		846614	0					
ANR	849185	Identifier	core		846614	0					
ANR	849186	Identifier	assembler		846614	1					
ANR	849187	Argument	& asmop		846614	1					
ANR	849188	UnaryOperationExpression	& asmop		846614	0					
ANR	849189	UnaryOperator	&		846614	0					
ANR	849190	Identifier	asmop		846614	1					
ANR	849191	Argument	buf		846614	2					
ANR	849192	Identifier	buf		846614	0					
ANR	849193	Argument	sizeof ( buf )		846614	3					
ANR	849194	SizeofExpression	sizeof ( buf )		846614	0					
ANR	849195	Sizeof	sizeof		846614	0					
ANR	849196	SizeofOperand	buf		846614	1					
ANR	849197	ExpressionStatement	pj_o ( pj )	7007:6:201229:201238	846614	4	True				
ANR	849198	CallExpression	pj_o ( pj )		846614	0					
ANR	849199	Callee	pj_o		846614	0					
ANR	849200	Identifier	pj_o		846614	0					
ANR	849201	ArgumentList	pj		846614	1					
ANR	849202	Argument	pj		846614	0					
ANR	849203	Identifier	pj		846614	0					
ANR	849204	ExpressionStatement	"pj_kn ( pj , ""from"" , ref -> at )"	7008:6:201246:201273	846614	5	True				
ANR	849205	CallExpression	"pj_kn ( pj , ""from"" , ref -> at )"		846614	0					
ANR	849206	Callee	pj_kn		846614	0					
ANR	849207	Identifier	pj_kn		846614	0					
ANR	849208	ArgumentList	pj		846614	1					
ANR	849209	Argument	pj		846614	0					
ANR	849210	Identifier	pj		846614	0					
ANR	849211	Argument	"""from"""		846614	1					
ANR	849212	PrimaryExpression	"""from"""		846614	0					
ANR	849213	Argument	ref -> at		846614	2					
ANR	849214	PtrMemberAccess	ref -> at		846614	0					
ANR	849215	Identifier	ref		846614	0					
ANR	849216	Identifier	at		846614	1					
ANR	849217	ExpressionStatement	"pj_kn ( pj , ""to"" , ref -> addr )"	7009:6:201281:201308	846614	6	True				
ANR	849218	CallExpression	"pj_kn ( pj , ""to"" , ref -> addr )"		846614	0					
ANR	849219	Callee	pj_kn		846614	0					
ANR	849220	Identifier	pj_kn		846614	0					
ANR	849221	ArgumentList	pj		846614	1					
ANR	849222	Argument	pj		846614	0					
ANR	849223	Identifier	pj		846614	0					
ANR	849224	Argument	"""to"""		846614	1					
ANR	849225	PrimaryExpression	"""to"""		846614	0					
ANR	849226	Argument	ref -> addr		846614	2					
ANR	849227	PtrMemberAccess	ref -> addr		846614	0					
ANR	849228	Identifier	ref		846614	0					
ANR	849229	Identifier	addr		846614	1					
ANR	849230	ExpressionStatement	"pj_ks ( pj , ""type"" , r_anal_xrefs_type_tostring ( ref -> type ) )"	7010:6:201316:201374	846614	7	True				
ANR	849231	CallExpression	"pj_ks ( pj , ""type"" , r_anal_xrefs_type_tostring ( ref -> type ) )"		846614	0					
ANR	849232	Callee	pj_ks		846614	0					
ANR	849233	Identifier	pj_ks		846614	0					
ANR	849234	ArgumentList	pj		846614	1					
ANR	849235	Argument	pj		846614	0					
ANR	849236	Identifier	pj		846614	0					
ANR	849237	Argument	"""type"""		846614	1					
ANR	849238	PrimaryExpression	"""type"""		846614	0					
ANR	849239	Argument	r_anal_xrefs_type_tostring ( ref -> type )		846614	2					
ANR	849240	CallExpression	r_anal_xrefs_type_tostring ( ref -> type )		846614	0					
ANR	849241	Callee	r_anal_xrefs_type_tostring		846614	0					
ANR	849242	Identifier	r_anal_xrefs_type_tostring		846614	0					
ANR	849243	ArgumentList	ref -> type		846614	1					
ANR	849244	Argument	ref -> type		846614	0					
ANR	849245	PtrMemberAccess	ref -> type		846614	0					
ANR	849246	Identifier	ref		846614	0					
ANR	849247	Identifier	type		846614	1					
ANR	849248	ExpressionStatement	"pj_ks ( pj , ""opcode"" , r_asm_op_get_asm ( & asmop ) )"	7011:6:201382:201429	846614	8	True				
ANR	849249	CallExpression	"pj_ks ( pj , ""opcode"" , r_asm_op_get_asm ( & asmop ) )"		846614	0					
ANR	849250	Callee	pj_ks		846614	0					
ANR	849251	Identifier	pj_ks		846614	0					
ANR	849252	ArgumentList	pj		846614	1					
ANR	849253	Argument	pj		846614	0					
ANR	849254	Identifier	pj		846614	0					
ANR	849255	Argument	"""opcode"""		846614	1					
ANR	849256	PrimaryExpression	"""opcode"""		846614	0					
ANR	849257	Argument	r_asm_op_get_asm ( & asmop )		846614	2					
ANR	849258	CallExpression	r_asm_op_get_asm ( & asmop )		846614	0					
ANR	849259	Callee	r_asm_op_get_asm		846614	0					
ANR	849260	Identifier	r_asm_op_get_asm		846614	0					
ANR	849261	ArgumentList	& asmop		846614	1					
ANR	849262	Argument	& asmop		846614	0					
ANR	849263	UnaryOperationExpression	& asmop		846614	0					
ANR	849264	UnaryOperator	&		846614	0					
ANR	849265	Identifier	asmop		846614	1					
ANR	849266	ExpressionStatement	pj_end ( pj )	7012:6:201437:201448	846614	9	True				
ANR	849267	CallExpression	pj_end ( pj )		846614	0					
ANR	849268	Callee	pj_end		846614	0					
ANR	849269	Identifier	pj_end		846614	0					
ANR	849270	ArgumentList	pj		846614	1					
ANR	849271	Argument	pj		846614	0					
ANR	849272	Identifier	pj		846614	0					
ANR	849273	ExpressionStatement	pj_end ( pj )	7014:5:201462:201473	846614	12	True				
ANR	849274	CallExpression	pj_end ( pj )		846614	0					
ANR	849275	Callee	pj_end		846614	0					
ANR	849276	Identifier	pj_end		846614	0					
ANR	849277	ArgumentList	pj		846614	1					
ANR	849278	Argument	pj		846614	0					
ANR	849279	Identifier	pj		846614	0					
ANR	849280	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	7015:5:201480:201511	846614	13	True				
ANR	849281	CallExpression	r_cons_println ( pj_string ( pj ) )		846614	0					
ANR	849282	Callee	r_cons_println		846614	0					
ANR	849283	Identifier	r_cons_println		846614	0					
ANR	849284	ArgumentList	pj_string ( pj )		846614	1					
ANR	849285	Argument	pj_string ( pj )		846614	0					
ANR	849286	CallExpression	pj_string ( pj )		846614	0					
ANR	849287	Callee	pj_string		846614	0					
ANR	849288	Identifier	pj_string		846614	0					
ANR	849289	ArgumentList	pj		846614	1					
ANR	849290	Argument	pj		846614	0					
ANR	849291	Identifier	pj		846614	0					
ANR	849292	ExpressionStatement	pj_free ( pj )	7016:5:201518:201530	846614	14	True				
ANR	849293	CallExpression	pj_free ( pj )		846614	0					
ANR	849294	Callee	pj_free		846614	0					
ANR	849295	Identifier	pj_free		846614	0					
ANR	849296	ArgumentList	pj		846614	1					
ANR	849297	Argument	pj		846614	0					
ANR	849298	Identifier	pj		846614	0					
ANR	849299	ElseStatement	else		846614	0					
ANR	849300	IfStatement	if ( input [ 1 ] == '*' )		846614	0					
ANR	849301	Condition	input [ 1 ] == '*'	7017:15:201547:201561	846614	0	True				
ANR	849302	EqualityExpression	input [ 1 ] == '*'		846614	0		==			
ANR	849303	ArrayIndexing	input [ 1 ]		846614	0					
ANR	849304	Identifier	input		846614	0					
ANR	849305	PrimaryExpression	1		846614	1					
ANR	849306	PrimaryExpression	'*'		846614	1					
ANR	849307	CompoundStatement		348:32:10275:10275	846614	1					
ANR	849308	Statement	r_list_foreach	7019:5:201625:201638	846614	0	True				
ANR	849309	Statement	(	7019:20:201640:201640	846614	1	True				
ANR	849310	Statement	list	7019:21:201641:201644	846614	2	True				
ANR	849311	Statement	","	7019:25:201645:201645	846614	3	True				
ANR	849312	Statement	iter	7019:27:201647:201650	846614	4	True				
ANR	849313	Statement	","	7019:31:201651:201651	846614	5	True				
ANR	849314	Statement	ref	7019:33:201653:201655	846614	6	True				
ANR	849315	Statement	)	7019:36:201656:201656	846614	7	True				
ANR	849316	CompoundStatement		350:38:10369:10369	846614	8					
ANR	849317	Statement	r_cons_printf	7020:6:201666:201678	846614	0	True				
ANR	849318	Statement	(	7020:20:201680:201680	846614	1	True				
ANR	849319	Statement	"""CCa 0x%"""	7020:21:201681:201689	846614	2	True				
ANR	849320	Statement	PFMT64x	7020:31:201691:201697	846614	3	True				
ANR	849321	Statement	""" \\""XREF from 0x%"""	7020:39:201699:201716	846614	4	True				
ANR	849322	Statement	PFMT64x	7020:58:201718:201724	846614	5	True				
ANR	849323	Statement	"""\\n"""	7020:66:201726:201729	846614	6	True				
ANR	849324	Statement	","	7020:70:201730:201730	846614	7	True				
ANR	849325	Statement	ref	7021:8:201740:201742	846614	8	True				
ANR	849326	Statement	->	7021:11:201743:201744	846614	9	True				
ANR	849327	Statement	at	7021:13:201745:201746	846614	10	True				
ANR	849328	Statement	","	7021:15:201747:201747	846614	11	True				
ANR	849329	Statement	ref	7021:17:201749:201751	846614	12	True				
ANR	849330	Statement	->	7021:20:201752:201753	846614	13	True				
ANR	849331	Statement	type	7021:22:201754:201757	846614	14	True				
ANR	849332	Statement	","	7021:26:201758:201758	846614	15	True				
ANR	849333	Statement	r_asm_op_get_asm	7021:28:201760:201775	846614	16	True				
ANR	849334	Statement	(	7021:45:201777:201777	846614	17	True				
ANR	849335	Statement	&	7021:46:201778:201778	846614	18	True				
ANR	849336	Statement	asmop	7021:47:201779:201783	846614	19	True				
ANR	849337	Statement	)	7021:52:201784:201784	846614	20	True				
ANR	849338	Statement	","	7021:53:201785:201785	846614	21	True				
ANR	849339	Statement	iter	7021:55:201787:201790	846614	22	True				
ANR	849340	Statement	->	7021:59:201791:201792	846614	23	True				
ANR	849341	Statement	n	7021:61:201793:201793	846614	24	True				
ANR	849342	Statement	?	7021:62:201794:201794	846614	25	True				
ANR	849343	Statement	""","""	7021:64:201796:201798	846614	26	True				
ANR	849344	Statement	:	7021:67:201799:201799	846614	27	True				
ANR	849345	Statement	""""""	7021:69:201801:201802	846614	28	True				
ANR	849346	Statement	)	7021:71:201803:201803	846614	29	True				
ANR	849347	ExpressionStatement		7021:72:201804:201804	846614	30	True				
ANR	849348	ElseStatement	else		846614	0					
ANR	849349	CompoundStatement		356:5:10571:10627	846614	0					
ANR	849350	IdentifierDeclStatement	char str [ 512 ] ;	7024:5:201840:201853	846614	0	True				
ANR	849351	IdentifierDecl	str [ 512 ]		846614	0					
ANR	849352	IdentifierDeclType	char [ 512 ]		846614	0					
ANR	849353	Identifier	str		846614	1					
ANR	849354	PrimaryExpression	512		846614	2					
ANR	849355	IdentifierDeclStatement	int has_color = core -> print -> flags & R_PRINT_FLAGS_COLOR ;	7025:5:201860:201916	846614	1	True				
ANR	849356	IdentifierDecl	has_color = core -> print -> flags & R_PRINT_FLAGS_COLOR		846614	0					
ANR	849357	IdentifierDeclType	int		846614	0					
ANR	849358	Identifier	has_color		846614	1					
ANR	849359	AssignmentExpression	has_color = core -> print -> flags & R_PRINT_FLAGS_COLOR		846614	2		=			
ANR	849360	Identifier	has_color		846614	0					
ANR	849361	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_COLOR		846614	1		&			
ANR	849362	PtrMemberAccess	core -> print -> flags		846614	0					
ANR	849363	PtrMemberAccess	core -> print		846614	0					
ANR	849364	Identifier	core		846614	0					
ANR	849365	Identifier	print		846614	1					
ANR	849366	Identifier	flags		846614	1					
ANR	849367	Identifier	R_PRINT_FLAGS_COLOR		846614	1					
ANR	849368	Statement	r_list_foreach	7026:5:201923:201936	846614	2	True				
ANR	849369	Statement	(	7026:20:201938:201938	846614	3	True				
ANR	849370	Statement	list	7026:21:201939:201942	846614	4	True				
ANR	849371	Statement	","	7026:25:201943:201943	846614	5	True				
ANR	849372	Statement	iter	7026:27:201945:201948	846614	6	True				
ANR	849373	Statement	","	7026:31:201949:201949	846614	7	True				
ANR	849374	Statement	ref	7026:33:201951:201953	846614	8	True				
ANR	849375	Statement	)	7026:36:201954:201954	846614	9	True				
ANR	849376	CompoundStatement		361:6:10745:10808	846614	10					
ANR	849377	IdentifierDeclStatement	ut8 buf [ 16 ] ;	7027:6:201964:201975	846614	0	True				
ANR	849378	IdentifierDecl	buf [ 16 ]		846614	0					
ANR	849379	IdentifierDeclType	ut8 [ 16 ]		846614	0					
ANR	849380	Identifier	buf		846614	1					
ANR	849381	PrimaryExpression	16		846614	2					
ANR	849382	IdentifierDeclStatement	char * desc ;	7028:6:201983:201993	846614	1	True				
ANR	849383	IdentifierDecl	* desc		846614	0					
ANR	849384	IdentifierDeclType	char *		846614	0					
ANR	849385	Identifier	desc		846614	1					
ANR	849386	IdentifierDeclStatement	char * desc_to_free = NULL ;	7029:6:202001:202026	846614	2	True				
ANR	849387	IdentifierDecl	* desc_to_free = NULL		846614	0					
ANR	849388	IdentifierDeclType	char *		846614	0					
ANR	849389	Identifier	desc_to_free		846614	1					
ANR	849390	AssignmentExpression	* desc_to_free = NULL		846614	2		=			
ANR	849391	Identifier	NULL		846614	0					
ANR	849392	Identifier	NULL		846614	1					
ANR	849393	IdentifierDeclStatement	"RFlagItem * flag = r_flag_get_at ( core -> flags , ref -> addr , false ) ;"	7030:6:202034:202097	846614	3	True				
ANR	849394	IdentifierDecl	"* flag = r_flag_get_at ( core -> flags , ref -> addr , false )"		846614	0					
ANR	849395	IdentifierDeclType	RFlagItem *		846614	0					
ANR	849396	Identifier	flag		846614	1					
ANR	849397	AssignmentExpression	"* flag = r_flag_get_at ( core -> flags , ref -> addr , false )"		846614	2		=			
ANR	849398	Identifier	flag		846614	0					
ANR	849399	CallExpression	"r_flag_get_at ( core -> flags , ref -> addr , false )"		846614	1					
ANR	849400	Callee	r_flag_get_at		846614	0					
ANR	849401	Identifier	r_flag_get_at		846614	0					
ANR	849402	ArgumentList	core -> flags		846614	1					
ANR	849403	Argument	core -> flags		846614	0					
ANR	849404	PtrMemberAccess	core -> flags		846614	0					
ANR	849405	Identifier	core		846614	0					
ANR	849406	Identifier	flags		846614	1					
ANR	849407	Argument	ref -> addr		846614	1					
ANR	849408	PtrMemberAccess	ref -> addr		846614	0					
ANR	849409	Identifier	ref		846614	0					
ANR	849410	Identifier	addr		846614	1					
ANR	849411	Argument	false		846614	2					
ANR	849412	Identifier	false		846614	0					
ANR	849413	IfStatement	if ( flag )		846614	4					
ANR	849414	Condition	flag	7031:10:202109:202112	846614	0	True				
ANR	849415	Identifier	flag		846614	0					
ANR	849416	CompoundStatement		362:16:10826:10826	846614	1					
ANR	849417	ExpressionStatement	desc = flag -> name	7032:7:202124:202141	846614	0	True				
ANR	849418	AssignmentExpression	desc = flag -> name		846614	0		=			
ANR	849419	Identifier	desc		846614	0					
ANR	849420	PtrMemberAccess	flag -> name		846614	1					
ANR	849421	Identifier	flag		846614	0					
ANR	849422	Identifier	name		846614	1					
ANR	849423	ElseStatement	else		846614	0					
ANR	849424	CompoundStatement		368:7:11058:11115	846614	0					
ANR	849425	ExpressionStatement	"r_io_read_at ( core -> io , ref -> addr , buf , sizeof ( buf ) )"	7034:7:202165:202218	846614	0	True				
ANR	849426	CallExpression	"r_io_read_at ( core -> io , ref -> addr , buf , sizeof ( buf ) )"		846614	0					
ANR	849427	Callee	r_io_read_at		846614	0					
ANR	849428	Identifier	r_io_read_at		846614	0					
ANR	849429	ArgumentList	core -> io		846614	1					
ANR	849430	Argument	core -> io		846614	0					
ANR	849431	PtrMemberAccess	core -> io		846614	0					
ANR	849432	Identifier	core		846614	0					
ANR	849433	Identifier	io		846614	1					
ANR	849434	Argument	ref -> addr		846614	1					
ANR	849435	PtrMemberAccess	ref -> addr		846614	0					
ANR	849436	Identifier	ref		846614	0					
ANR	849437	Identifier	addr		846614	1					
ANR	849438	Argument	buf		846614	2					
ANR	849439	Identifier	buf		846614	0					
ANR	849440	Argument	sizeof ( buf )		846614	3					
ANR	849441	SizeofExpression	sizeof ( buf )		846614	0					
ANR	849442	Sizeof	sizeof		846614	0					
ANR	849443	SizeofOperand	buf		846614	1					
ANR	849444	ExpressionStatement	"r_asm_set_pc ( core -> assembler , ref -> addr )"	7035:7:202227:202268	846614	1	True				
ANR	849445	CallExpression	"r_asm_set_pc ( core -> assembler , ref -> addr )"		846614	0					
ANR	849446	Callee	r_asm_set_pc		846614	0					
ANR	849447	Identifier	r_asm_set_pc		846614	0					
ANR	849448	ArgumentList	core -> assembler		846614	1					
ANR	849449	Argument	core -> assembler		846614	0					
ANR	849450	PtrMemberAccess	core -> assembler		846614	0					
ANR	849451	Identifier	core		846614	0					
ANR	849452	Identifier	assembler		846614	1					
ANR	849453	Argument	ref -> addr		846614	1					
ANR	849454	PtrMemberAccess	ref -> addr		846614	0					
ANR	849455	Identifier	ref		846614	0					
ANR	849456	Identifier	addr		846614	1					
ANR	849457	ExpressionStatement	"r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) )"	7036:7:202277:202338	846614	2	True				
ANR	849458	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) )"		846614	0					
ANR	849459	Callee	r_asm_disassemble		846614	0					
ANR	849460	Identifier	r_asm_disassemble		846614	0					
ANR	849461	ArgumentList	core -> assembler		846614	1					
ANR	849462	Argument	core -> assembler		846614	0					
ANR	849463	PtrMemberAccess	core -> assembler		846614	0					
ANR	849464	Identifier	core		846614	0					
ANR	849465	Identifier	assembler		846614	1					
ANR	849466	Argument	& asmop		846614	1					
ANR	849467	UnaryOperationExpression	& asmop		846614	0					
ANR	849468	UnaryOperator	&		846614	0					
ANR	849469	Identifier	asmop		846614	1					
ANR	849470	Argument	buf		846614	2					
ANR	849471	Identifier	buf		846614	0					
ANR	849472	Argument	sizeof ( buf )		846614	3					
ANR	849473	SizeofExpression	sizeof ( buf )		846614	0					
ANR	849474	Sizeof	sizeof		846614	0					
ANR	849475	SizeofOperand	buf		846614	1					
ANR	849476	IdentifierDeclStatement	"RAnalHint * hint = r_anal_hint_get ( core -> anal , ref -> addr ) ;"	7037:7:202347:202404	846614	3	True				
ANR	849477	IdentifierDecl	"* hint = r_anal_hint_get ( core -> anal , ref -> addr )"		846614	0					
ANR	849478	IdentifierDeclType	RAnalHint *		846614	0					
ANR	849479	Identifier	hint		846614	1					
ANR	849480	AssignmentExpression	"* hint = r_anal_hint_get ( core -> anal , ref -> addr )"		846614	2		=			
ANR	849481	Identifier	hint		846614	0					
ANR	849482	CallExpression	"r_anal_hint_get ( core -> anal , ref -> addr )"		846614	1					
ANR	849483	Callee	r_anal_hint_get		846614	0					
ANR	849484	Identifier	r_anal_hint_get		846614	0					
ANR	849485	ArgumentList	core -> anal		846614	1					
ANR	849486	Argument	core -> anal		846614	0					
ANR	849487	PtrMemberAccess	core -> anal		846614	0					
ANR	849488	Identifier	core		846614	0					
ANR	849489	Identifier	anal		846614	1					
ANR	849490	Argument	ref -> addr		846614	1					
ANR	849491	PtrMemberAccess	ref -> addr		846614	0					
ANR	849492	Identifier	ref		846614	0					
ANR	849493	Identifier	addr		846614	1					
ANR	849494	ExpressionStatement	"r_parse_filter ( core -> parser , ref -> addr , core -> flags , hint , r_asm_op_get_asm ( & asmop ) , str , sizeof ( str ) , core -> print -> big_endian )"	7038:7:202413:202552	846614	4	True				
ANR	849495	CallExpression	"r_parse_filter ( core -> parser , ref -> addr , core -> flags , hint , r_asm_op_get_asm ( & asmop ) , str , sizeof ( str ) , core -> print -> big_endian )"		846614	0					
ANR	849496	Callee	r_parse_filter		846614	0					
ANR	849497	Identifier	r_parse_filter		846614	0					
ANR	849498	ArgumentList	core -> parser		846614	1					
ANR	849499	Argument	core -> parser		846614	0					
ANR	849500	PtrMemberAccess	core -> parser		846614	0					
ANR	849501	Identifier	core		846614	0					
ANR	849502	Identifier	parser		846614	1					
ANR	849503	Argument	ref -> addr		846614	1					
ANR	849504	PtrMemberAccess	ref -> addr		846614	0					
ANR	849505	Identifier	ref		846614	0					
ANR	849506	Identifier	addr		846614	1					
ANR	849507	Argument	core -> flags		846614	2					
ANR	849508	PtrMemberAccess	core -> flags		846614	0					
ANR	849509	Identifier	core		846614	0					
ANR	849510	Identifier	flags		846614	1					
ANR	849511	Argument	hint		846614	3					
ANR	849512	Identifier	hint		846614	0					
ANR	849513	Argument	r_asm_op_get_asm ( & asmop )		846614	4					
ANR	849514	CallExpression	r_asm_op_get_asm ( & asmop )		846614	0					
ANR	849515	Callee	r_asm_op_get_asm		846614	0					
ANR	849516	Identifier	r_asm_op_get_asm		846614	0					
ANR	849517	ArgumentList	& asmop		846614	1					
ANR	849518	Argument	& asmop		846614	0					
ANR	849519	UnaryOperationExpression	& asmop		846614	0					
ANR	849520	UnaryOperator	&		846614	0					
ANR	849521	Identifier	asmop		846614	1					
ANR	849522	Argument	str		846614	5					
ANR	849523	Identifier	str		846614	0					
ANR	849524	Argument	sizeof ( str )		846614	6					
ANR	849525	SizeofExpression	sizeof ( str )		846614	0					
ANR	849526	Sizeof	sizeof		846614	0					
ANR	849527	SizeofOperand	str		846614	1					
ANR	849528	Argument	core -> print -> big_endian		846614	7					
ANR	849529	PtrMemberAccess	core -> print -> big_endian		846614	0					
ANR	849530	PtrMemberAccess	core -> print		846614	0					
ANR	849531	Identifier	core		846614	0					
ANR	849532	Identifier	print		846614	1					
ANR	849533	Identifier	big_endian		846614	1					
ANR	849534	ExpressionStatement	r_anal_hint_free ( hint )	7040:7:202561:202584	846614	5	True				
ANR	849535	CallExpression	r_anal_hint_free ( hint )		846614	0					
ANR	849536	Callee	r_anal_hint_free		846614	0					
ANR	849537	Identifier	r_anal_hint_free		846614	0					
ANR	849538	ArgumentList	hint		846614	1					
ANR	849539	Argument	hint		846614	0					
ANR	849540	Identifier	hint		846614	0					
ANR	849541	IfStatement	if ( has_color )		846614	6					
ANR	849542	Condition	has_color	7041:11:202597:202605	846614	0	True				
ANR	849543	Identifier	has_color		846614	0					
ANR	849544	CompoundStatement		372:22:11319:11319	846614	1					
ANR	849545	ExpressionStatement	"desc = desc_to_free = r_print_colorize_opcode ( core -> print , str , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , fcn ? fcn -> addr : 0 )"	7042:8:202618:202780	846614	0	True				
ANR	849546	AssignmentExpression	"desc = desc_to_free = r_print_colorize_opcode ( core -> print , str , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , fcn ? fcn -> addr : 0 )"		846614	0		=			
ANR	849547	Identifier	desc		846614	0					
ANR	849548	AssignmentExpression	"desc_to_free = r_print_colorize_opcode ( core -> print , str , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , fcn ? fcn -> addr : 0 )"		846614	1		=			
ANR	849549	Identifier	desc_to_free		846614	0					
ANR	849550	CallExpression	"r_print_colorize_opcode ( core -> print , str , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , fcn ? fcn -> addr : 0 )"		846614	1					
ANR	849551	Callee	r_print_colorize_opcode		846614	0					
ANR	849552	Identifier	r_print_colorize_opcode		846614	0					
ANR	849553	ArgumentList	core -> print		846614	1					
ANR	849554	Argument	core -> print		846614	0					
ANR	849555	PtrMemberAccess	core -> print		846614	0					
ANR	849556	Identifier	core		846614	0					
ANR	849557	Identifier	print		846614	1					
ANR	849558	Argument	str		846614	1					
ANR	849559	Identifier	str		846614	0					
ANR	849560	Argument	core -> cons -> context -> pal . reg		846614	2					
ANR	849561	MemberAccess	core -> cons -> context -> pal . reg		846614	0					
ANR	849562	PtrMemberAccess	core -> cons -> context -> pal		846614	0					
ANR	849563	PtrMemberAccess	core -> cons -> context		846614	0					
ANR	849564	PtrMemberAccess	core -> cons		846614	0					
ANR	849565	Identifier	core		846614	0					
ANR	849566	Identifier	cons		846614	1					
ANR	849567	Identifier	context		846614	1					
ANR	849568	Identifier	pal		846614	1					
ANR	849569	Identifier	reg		846614	1					
ANR	849570	Argument	core -> cons -> context -> pal . num		846614	3					
ANR	849571	MemberAccess	core -> cons -> context -> pal . num		846614	0					
ANR	849572	PtrMemberAccess	core -> cons -> context -> pal		846614	0					
ANR	849573	PtrMemberAccess	core -> cons -> context		846614	0					
ANR	849574	PtrMemberAccess	core -> cons		846614	0					
ANR	849575	Identifier	core		846614	0					
ANR	849576	Identifier	cons		846614	1					
ANR	849577	Identifier	context		846614	1					
ANR	849578	Identifier	pal		846614	1					
ANR	849579	Identifier	num		846614	1					
ANR	849580	Argument	false		846614	4					
ANR	849581	Identifier	false		846614	0					
ANR	849582	Argument	fcn ? fcn -> addr : 0		846614	5					
ANR	849583	ConditionalExpression	fcn ? fcn -> addr : 0		846614	0					
ANR	849584	Condition	fcn		846614	0					
ANR	849585	Identifier	fcn		846614	0					
ANR	849586	PtrMemberAccess	fcn -> addr		846614	1					
ANR	849587	Identifier	fcn		846614	0					
ANR	849588	Identifier	addr		846614	1					
ANR	849589	PrimaryExpression	0		846614	2					
ANR	849590	ElseStatement	else		846614	0					
ANR	849591	CompoundStatement		375:14:11507:11507	846614	0					
ANR	849592	ExpressionStatement	desc = str	7045:8:202806:202816	846614	0	True				
ANR	849593	AssignmentExpression	desc = str		846614	0		=			
ANR	849594	Identifier	desc		846614	0					
ANR	849595	Identifier	str		846614	1					
ANR	849596	Statement	r_cons_printf	7048:6:202841:202853	846614	5	True				
ANR	849597	Statement	(	7048:20:202855:202855	846614	6	True				
ANR	849598	Statement	"""%c 0x%"""	7048:21:202856:202863	846614	7	True				
ANR	849599	Statement	PFMT64x	7048:30:202865:202871	846614	8	True				
ANR	849600	Statement	""" %s"""	7048:38:202873:202877	846614	9	True				
ANR	849601	Statement	","	7048:43:202878:202878	846614	10	True				
ANR	849602	Statement	ref	7049:8:202888:202890	846614	11	True				
ANR	849603	Statement	->	7049:11:202891:202892	846614	12	True				
ANR	849604	Statement	type	7049:13:202893:202896	846614	13	True				
ANR	849605	Statement	?	7049:18:202898:202898	846614	14	True				
ANR	849606	Statement	ref	7049:20:202900:202902	846614	15	True				
ANR	849607	Statement	->	7049:23:202903:202904	846614	16	True				
ANR	849608	Label	type :	7049:25:202905:202910	846614	17	True				
ANR	849609	Identifier	type		846614	0					
ANR	849610	Statement	' '	7049:32:202912:202914	846614	18	True				
ANR	849611	Statement	","	7049:35:202915:202915	846614	19	True				
ANR	849612	Statement	ref	7049:37:202917:202919	846614	20	True				
ANR	849613	Statement	->	7049:40:202920:202921	846614	21	True				
ANR	849614	Statement	addr	7049:42:202922:202925	846614	22	True				
ANR	849615	Statement	","	7049:46:202926:202926	846614	23	True				
ANR	849616	Statement	desc	7049:48:202928:202931	846614	24	True				
ANR	849617	Statement	)	7049:52:202932:202932	846614	25	True				
ANR	849618	ExpressionStatement		7049:53:202933:202933	846614	26	True				
ANR	849619	IfStatement	if ( ref -> type == R_ANAL_REF_TYPE_CALL )		846614	27					
ANR	849620	Condition	ref -> type == R_ANAL_REF_TYPE_CALL	7051:10:202946:202978	846614	0	True				
ANR	849621	EqualityExpression	ref -> type == R_ANAL_REF_TYPE_CALL		846614	0		==			
ANR	849622	PtrMemberAccess	ref -> type		846614	0					
ANR	849623	Identifier	ref		846614	0					
ANR	849624	Identifier	type		846614	1					
ANR	849625	Identifier	R_ANAL_REF_TYPE_CALL		846614	1					
ANR	849626	CompoundStatement		383:7:11701:11712	846614	1					
ANR	849627	IdentifierDeclStatement	RAnalOp aop ;	7052:7:202990:203001	846614	0	True				
ANR	849628	IdentifierDecl	aop		846614	0					
ANR	849629	IdentifierDeclType	RAnalOp		846614	0					
ANR	849630	Identifier	aop		846614	1					
ANR	849631	ExpressionStatement	"r_anal_op ( core -> anal , & aop , ref -> addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	7053:7:203010:203089	846614	1	True				
ANR	849632	CallExpression	"r_anal_op ( core -> anal , & aop , ref -> addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		846614	0					
ANR	849633	Callee	r_anal_op		846614	0					
ANR	849634	Identifier	r_anal_op		846614	0					
ANR	849635	ArgumentList	core -> anal		846614	1					
ANR	849636	Argument	core -> anal		846614	0					
ANR	849637	PtrMemberAccess	core -> anal		846614	0					
ANR	849638	Identifier	core		846614	0					
ANR	849639	Identifier	anal		846614	1					
ANR	849640	Argument	& aop		846614	1					
ANR	849641	UnaryOperationExpression	& aop		846614	0					
ANR	849642	UnaryOperator	&		846614	0					
ANR	849643	Identifier	aop		846614	1					
ANR	849644	Argument	ref -> addr		846614	2					
ANR	849645	PtrMemberAccess	ref -> addr		846614	0					
ANR	849646	Identifier	ref		846614	0					
ANR	849647	Identifier	addr		846614	1					
ANR	849648	Argument	buf		846614	3					
ANR	849649	Identifier	buf		846614	0					
ANR	849650	Argument	sizeof ( buf )		846614	4					
ANR	849651	SizeofExpression	sizeof ( buf )		846614	0					
ANR	849652	Sizeof	sizeof		846614	0					
ANR	849653	SizeofOperand	buf		846614	1					
ANR	849654	Argument	R_ANAL_OP_MASK_BASIC		846614	5					
ANR	849655	Identifier	R_ANAL_OP_MASK_BASIC		846614	0					
ANR	849656	IfStatement	if ( aop . type == R_ANAL_OP_TYPE_UCALL )		846614	2					
ANR	849657	Condition	aop . type == R_ANAL_OP_TYPE_UCALL	7054:11:203102:203133	846614	0	True				
ANR	849658	EqualityExpression	aop . type == R_ANAL_OP_TYPE_UCALL		846614	0		==			
ANR	849659	MemberAccess	aop . type		846614	0					
ANR	849660	Identifier	aop		846614	0					
ANR	849661	Identifier	type		846614	1					
ANR	849662	Identifier	R_ANAL_OP_TYPE_UCALL		846614	1					
ANR	849663	CompoundStatement		385:45:11847:11847	846614	1					
ANR	849664	ExpressionStatement	"cmd_anal_ucall_ref ( core , ref -> addr )"	7055:8:203146:203182	846614	0	True				
ANR	849665	CallExpression	"cmd_anal_ucall_ref ( core , ref -> addr )"		846614	0					
ANR	849666	Callee	cmd_anal_ucall_ref		846614	0					
ANR	849667	Identifier	cmd_anal_ucall_ref		846614	0					
ANR	849668	ArgumentList	core		846614	1					
ANR	849669	Argument	core		846614	0					
ANR	849670	Identifier	core		846614	0					
ANR	849671	Argument	ref -> addr		846614	1					
ANR	849672	PtrMemberAccess	ref -> addr		846614	0					
ANR	849673	Identifier	ref		846614	0					
ANR	849674	Identifier	addr		846614	1					
ANR	849675	ExpressionStatement	r_cons_newline ( )	7058:6:203207:203224	846614	28	True				
ANR	849676	CallExpression	r_cons_newline ( )		846614	0					
ANR	849677	Callee	r_cons_newline		846614	0					
ANR	849678	Identifier	r_cons_newline		846614	0					
ANR	849679	ArgumentList			846614	1					
ANR	849680	ExpressionStatement	free ( desc_to_free )	7059:6:203232:203251	846614	29	True				
ANR	849681	CallExpression	free ( desc_to_free )		846614	0					
ANR	849682	Callee	free		846614	0					
ANR	849683	Identifier	free		846614	0					
ANR	849684	ArgumentList	desc_to_free		846614	1					
ANR	849685	Argument	desc_to_free		846614	0					
ANR	849686	Identifier	desc_to_free		846614	0					
ANR	849687	ElseStatement	else		846614	0					
ANR	849688	CompoundStatement		393:10:11987:11987	846614	0					
ANR	849689	IfStatement	if ( input [ 1 ] == 'j' )		846614	0					
ANR	849690	Condition	input [ 1 ] == 'j'	7063:8:203286:203300	846614	0	True				
ANR	849691	EqualityExpression	input [ 1 ] == 'j'		846614	0		==			
ANR	849692	ArrayIndexing	input [ 1 ]		846614	0					
ANR	849693	Identifier	input		846614	0					
ANR	849694	PrimaryExpression	1		846614	1					
ANR	849695	PrimaryExpression	'j'		846614	1					
ANR	849696	CompoundStatement		394:25:12014:12014	846614	1					
ANR	849697	ExpressionStatement	"r_cons_print ( ""[]\\n"" )"	7064:5:203320:203341	846614	0	True				
ANR	849698	CallExpression	"r_cons_print ( ""[]\\n"" )"		846614	0					
ANR	849699	Callee	r_cons_print		846614	0					
ANR	849700	Identifier	r_cons_print		846614	0					
ANR	849701	ArgumentList	"""[]\\n"""		846614	1					
ANR	849702	Argument	"""[]\\n"""		846614	0					
ANR	849703	PrimaryExpression	"""[]\\n"""		846614	0					
ANR	849704	ExpressionStatement	r_list_free ( list )	7067:3:203357:203375	846614	9	True				
ANR	849705	CallExpression	r_list_free ( list )		846614	0					
ANR	849706	Callee	r_list_free		846614	0					
ANR	849707	Identifier	r_list_free		846614	0					
ANR	849708	ArgumentList	list		846614	1					
ANR	849709	Argument	list		846614	0					
ANR	849710	Identifier	list		846614	0					
ANR	849711	BreakStatement	break ;	7069:2:203383:203388	846614	23	True				
ANR	849712	Label	case 'F' :	7070:1:203391:203399	846614	24	True				
ANR	849713	ExpressionStatement	"find_refs ( core , input + 1 )"	7071:2:203412:203439	846614	25	True				
ANR	849714	CallExpression	"find_refs ( core , input + 1 )"		846614	0					
ANR	849715	Callee	find_refs		846614	0					
ANR	849716	Identifier	find_refs		846614	0					
ANR	849717	ArgumentList	core		846614	1					
ANR	849718	Argument	core		846614	0					
ANR	849719	Identifier	core		846614	0					
ANR	849720	Argument	input + 1		846614	1					
ANR	849721	AdditiveExpression	input + 1		846614	0		+			
ANR	849722	Identifier	input		846614	0					
ANR	849723	PrimaryExpression	1		846614	1					
ANR	849724	BreakStatement	break ;	7072:2:203443:203448	846614	26	True				
ANR	849725	Label	case 'C' :	7073:1:203451:203459	846614	27	True				
ANR	849726	Label	case 'c' :	7074:1:203471:203479	846614	28	True				
ANR	849727	Label	case 'd' :	7075:1:203491:203499	846614	29	True				
ANR	849728	Label	case 's' :	7076:1:203511:203519	846614	30	True				
ANR	849729	Label	case ' ' :	7077:1:203531:203539	846614	31	True				
ANR	849730	CompoundStatement		414:2:12410:12461	846614	32					
ANR	849731	IdentifierDeclStatement	char * ptr = strdup ( r_str_trim_head ( ( char * ) input + 1 ) ) ;	7079:2:203556:203612	846614	0	True				
ANR	849732	IdentifierDecl	* ptr = strdup ( r_str_trim_head ( ( char * ) input + 1 ) )		846614	0					
ANR	849733	IdentifierDeclType	char *		846614	0					
ANR	849734	Identifier	ptr		846614	1					
ANR	849735	AssignmentExpression	* ptr = strdup ( r_str_trim_head ( ( char * ) input + 1 ) )		846614	2		=			
ANR	849736	Identifier	ptr		846614	0					
ANR	849737	CallExpression	strdup ( r_str_trim_head ( ( char * ) input + 1 ) )		846614	1					
ANR	849738	Callee	strdup		846614	0					
ANR	849739	Identifier	strdup		846614	0					
ANR	849740	ArgumentList	r_str_trim_head ( ( char * ) input + 1 )		846614	1					
ANR	849741	Argument	r_str_trim_head ( ( char * ) input + 1 )		846614	0					
ANR	849742	CallExpression	r_str_trim_head ( ( char * ) input + 1 )		846614	0					
ANR	849743	Callee	r_str_trim_head		846614	0					
ANR	849744	Identifier	r_str_trim_head		846614	0					
ANR	849745	ArgumentList	( char * ) input + 1		846614	1					
ANR	849746	Argument	( char * ) input + 1		846614	0					
ANR	849747	AdditiveExpression	( char * ) input + 1		846614	0		+			
ANR	849748	CastExpression	( char * ) input		846614	0					
ANR	849749	CastTarget	char *		846614	0					
ANR	849750	Identifier	input		846614	1					
ANR	849751	PrimaryExpression	1		846614	1					
ANR	849752	IdentifierDeclStatement	int n = r_str_word_set0 ( ptr ) ;	7080:2:203616:203645	846614	1	True				
ANR	849753	IdentifierDecl	n = r_str_word_set0 ( ptr )		846614	0					
ANR	849754	IdentifierDeclType	int		846614	0					
ANR	849755	Identifier	n		846614	1					
ANR	849756	AssignmentExpression	n = r_str_word_set0 ( ptr )		846614	2		=			
ANR	849757	Identifier	n		846614	0					
ANR	849758	CallExpression	r_str_word_set0 ( ptr )		846614	1					
ANR	849759	Callee	r_str_word_set0		846614	0					
ANR	849760	Identifier	r_str_word_set0		846614	0					
ANR	849761	ArgumentList	ptr		846614	1					
ANR	849762	Argument	ptr		846614	0					
ANR	849763	Identifier	ptr		846614	0					
ANR	849764	IdentifierDeclStatement	ut64 at = core -> offset ;	7081:2:203649:203671	846614	2	True				
ANR	849765	IdentifierDecl	at = core -> offset		846614	0					
ANR	849766	IdentifierDeclType	ut64		846614	0					
ANR	849767	Identifier	at		846614	1					
ANR	849768	AssignmentExpression	at = core -> offset		846614	2		=			
ANR	849769	Identifier	at		846614	0					
ANR	849770	PtrMemberAccess	core -> offset		846614	1					
ANR	849771	Identifier	core		846614	0					
ANR	849772	Identifier	offset		846614	1					
ANR	849773	IdentifierDeclStatement	ut64 addr = UT64_MAX ;	7082:2:203675:203695	846614	3	True				
ANR	849774	IdentifierDecl	addr = UT64_MAX		846614	0					
ANR	849775	IdentifierDeclType	ut64		846614	0					
ANR	849776	Identifier	addr		846614	1					
ANR	849777	AssignmentExpression	addr = UT64_MAX		846614	2		=			
ANR	849778	Identifier	UT64_MAX		846614	0					
ANR	849779	Identifier	UT64_MAX		846614	1					
ANR	849780	IdentifierDeclStatement	RAnalRefType reftype = r_anal_xrefs_type ( input [ 0 ] ) ;	7083:2:203699:203750	846614	4	True				
ANR	849781	IdentifierDecl	reftype = r_anal_xrefs_type ( input [ 0 ] )		846614	0					
ANR	849782	IdentifierDeclType	RAnalRefType		846614	0					
ANR	849783	Identifier	reftype		846614	1					
ANR	849784	AssignmentExpression	reftype = r_anal_xrefs_type ( input [ 0 ] )		846614	2		=			
ANR	849785	Identifier	reftype		846614	0					
ANR	849786	CallExpression	r_anal_xrefs_type ( input [ 0 ] )		846614	1					
ANR	849787	Callee	r_anal_xrefs_type		846614	0					
ANR	849788	Identifier	r_anal_xrefs_type		846614	0					
ANR	849789	ArgumentList	input [ 0 ]		846614	1					
ANR	849790	Argument	input [ 0 ]		846614	0					
ANR	849791	ArrayIndexing	input [ 0 ]		846614	0					
ANR	849792	Identifier	input		846614	0					
ANR	849793	PrimaryExpression	0		846614	1					
ANR	849794	SwitchStatement	switch ( n )		846614	5					
ANR	849795	Condition	n	7084:10:203762:203762	846614	0	True				
ANR	849796	Identifier	n		846614	0					
ANR	849797	CompoundStatement		415:13:12476:12476	846614	1					
ANR	849798	Label	case 2 :	7085:2:203769:203775	846614	0	True				
ANR	849799	ExpressionStatement	"at = r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"	7086:3:203790:203843	846614	1	True				
ANR	849800	AssignmentExpression	"at = r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"		846614	0		=			
ANR	849801	Identifier	at		846614	0					
ANR	849802	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"		846614	1					
ANR	849803	Callee	r_num_math		846614	0					
ANR	849804	Identifier	r_num_math		846614	0					
ANR	849805	ArgumentList	core -> num		846614	1					
ANR	849806	Argument	core -> num		846614	0					
ANR	849807	PtrMemberAccess	core -> num		846614	0					
ANR	849808	Identifier	core		846614	0					
ANR	849809	Identifier	num		846614	1					
ANR	849810	Argument	"r_str_word_get0 ( ptr , 1 )"		846614	1					
ANR	849811	CallExpression	"r_str_word_get0 ( ptr , 1 )"		846614	0					
ANR	849812	Callee	r_str_word_get0		846614	0					
ANR	849813	Identifier	r_str_word_get0		846614	0					
ANR	849814	ArgumentList	ptr		846614	1					
ANR	849815	Argument	ptr		846614	0					
ANR	849816	Identifier	ptr		846614	0					
ANR	849817	Argument	1		846614	1					
ANR	849818	PrimaryExpression	1		846614	0					
ANR	849819	Label	case 1 :	7088:2:203868:203874	846614	2	True				
ANR	849820	ExpressionStatement	"addr = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"	7089:3:203891:203946	846614	3	True				
ANR	849821	AssignmentExpression	"addr = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		846614	0		=			
ANR	849822	Identifier	addr		846614	0					
ANR	849823	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		846614	1					
ANR	849824	Callee	r_num_math		846614	0					
ANR	849825	Identifier	r_num_math		846614	0					
ANR	849826	ArgumentList	core -> num		846614	1					
ANR	849827	Argument	core -> num		846614	0					
ANR	849828	PtrMemberAccess	core -> num		846614	0					
ANR	849829	Identifier	core		846614	0					
ANR	849830	Identifier	num		846614	1					
ANR	849831	Argument	"r_str_word_get0 ( ptr , 0 )"		846614	1					
ANR	849832	CallExpression	"r_str_word_get0 ( ptr , 0 )"		846614	0					
ANR	849833	Callee	r_str_word_get0		846614	0					
ANR	849834	Identifier	r_str_word_get0		846614	0					
ANR	849835	ArgumentList	ptr		846614	1					
ANR	849836	Argument	ptr		846614	0					
ANR	849837	Identifier	ptr		846614	0					
ANR	849838	Argument	0		846614	1					
ANR	849839	PrimaryExpression	0		846614	0					
ANR	849840	BreakStatement	break ;	7090:3:203951:203956	846614	4	True				
ANR	849841	Label	default :	7091:2:203960:203967	846614	5	True				
ANR	849842	Identifier	default		846614	0					
ANR	849843	ExpressionStatement	free ( ptr )	7092:3:203972:203982	846614	6	True				
ANR	849844	CallExpression	free ( ptr )		846614	0					
ANR	849845	Callee	free		846614	0					
ANR	849846	Identifier	free		846614	0					
ANR	849847	ArgumentList	ptr		846614	1					
ANR	849848	Argument	ptr		846614	0					
ANR	849849	Identifier	ptr		846614	0					
ANR	849850	ReturnStatement	return false ;	7093:3:203987:203999	846614	7	True				
ANR	849851	Identifier	false		846614	0					
ANR	849852	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , at , addr , reftype )"	7095:2:204007:204055	846614	6	True				
ANR	849853	CallExpression	"r_anal_xrefs_set ( core -> anal , at , addr , reftype )"		846614	0					
ANR	849854	Callee	r_anal_xrefs_set		846614	0					
ANR	849855	Identifier	r_anal_xrefs_set		846614	0					
ANR	849856	ArgumentList	core -> anal		846614	1					
ANR	849857	Argument	core -> anal		846614	0					
ANR	849858	PtrMemberAccess	core -> anal		846614	0					
ANR	849859	Identifier	core		846614	0					
ANR	849860	Identifier	anal		846614	1					
ANR	849861	Argument	at		846614	1					
ANR	849862	Identifier	at		846614	0					
ANR	849863	Argument	addr		846614	2					
ANR	849864	Identifier	addr		846614	0					
ANR	849865	Argument	reftype		846614	3					
ANR	849866	Identifier	reftype		846614	0					
ANR	849867	ExpressionStatement	free ( ptr )	7096:2:204059:204069	846614	7	True				
ANR	849868	CallExpression	free ( ptr )		846614	0					
ANR	849869	Callee	free		846614	0					
ANR	849870	Identifier	free		846614	0					
ANR	849871	ArgumentList	ptr		846614	1					
ANR	849872	Argument	ptr		846614	0					
ANR	849873	Identifier	ptr		846614	0					
ANR	849874	BreakStatement	break ;	7098:5:204080:204085	846614	33	True				
ANR	849875	Label	default :	7099:1:204088:204095	846614	34	True				
ANR	849876	Identifier	default		846614	0					
ANR	849877	Label	case '?' :	7100:1:204098:204106	846614	35	True				
ANR	849878	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ax )"	7101:2:204110:204145	846614	36	True				
ANR	849879	CallExpression	"r_core_cmd_help ( core , help_msg_ax )"		846614	0					
ANR	849880	Callee	r_core_cmd_help		846614	0					
ANR	849881	Identifier	r_core_cmd_help		846614	0					
ANR	849882	ArgumentList	core		846614	1					
ANR	849883	Argument	core		846614	0					
ANR	849884	Identifier	core		846614	0					
ANR	849885	Argument	help_msg_ax		846614	1					
ANR	849886	Identifier	help_msg_ax		846614	0					
ANR	849887	BreakStatement	break ;	7102:2:204149:204154	846614	37	True				
ANR	849888	ReturnStatement	return true ;	7105:1:204161:204172	846614	2	True				
ANR	849889	Identifier	true		846614	0					
ANR	849890	ReturnType	static bool		846614	1					
ANR	849891	Identifier	cmd_anal_refs		846614	2					
ANR	849892	ParameterList	"RCore * core , const char * input"		846614	3					
ANR	849893	Parameter	RCore * core	6670:26:191256:191266	846614	0	True				
ANR	849894	ParameterType	RCore *		846614	0					
ANR	849895	Identifier	core		846614	1					
ANR	849896	Parameter	const char * input	6670:39:191269:191285	846614	1	True				
ANR	849897	ParameterType	const char *		846614	0					
ANR	849898	Identifier	input		846614	1					
ANR	849899	CFGEntryNode	ENTRY		846614		True				
ANR	849900	CFGExitNode	EXIT		846614		True				
ANR	849901	Symbol	ref -> addr		846614						
ANR	849902	Symbol	refi		846614						
ANR	849903	Symbol	aop		846614						
ANR	849904	Symbol	* fcn		846614						
ANR	849905	Symbol	* input		846614						
ANR	849906	Symbol	ref -> at		846614						
ANR	849907	Symbol	delta		846614						
ANR	849908	Symbol	core -> offset		846614						
ANR	849909	Symbol	strchr		846614						
ANR	849910	Symbol	r_str_word_set0		846614						
ANR	849911	Symbol	var -> delta		846614						
ANR	849912	Symbol	asmop		846614						
ANR	849913	Symbol	refi -> addr		846614						
ANR	849914	Symbol	tmp		846614						
ANR	849915	Symbol	buf_fcn		846614						
ANR	849916	Symbol	core -> cons -> context -> pal . reg		846614						
ANR	849917	Symbol	r_anal_xrefs_get_from		846614						
ANR	849918	Symbol	var		846614						
ANR	849919	Symbol	iter		846614						
ANR	849920	Symbol	r_anal_fcn_find_name		846614						
ANR	849921	Symbol	core -> print -> big_endian		846614						
ANR	849922	Symbol	core -> cons -> context -> pal . num		846614						
ANR	849923	Symbol	varname		846614						
ANR	849924	Symbol	refname		846614						
ANR	849925	Symbol	& aop		846614						
ANR	849926	Symbol	str		846614						
ANR	849927	Symbol	input		846614						
ANR	849928	Symbol	has_color		846614						
ANR	849929	Symbol	core -> parser		846614						
ANR	849930	Symbol	* * * core		846614						
ANR	849931	Symbol	core -> cons -> context -> pal		846614						
ANR	849932	Symbol	at		846614						
ANR	849933	Symbol	buf_asm		846614						
ANR	849934	Symbol	* flag		846614						
ANR	849935	Symbol	core -> print -> flags		846614						
ANR	849936	Symbol	core -> cons -> context		846614						
ANR	849937	Symbol	rvar		846614						
ANR	849938	Symbol	* tmp		846614						
ANR	849939	Symbol	fInput		846614						
ANR	849940	Symbol	flag		846614						
ANR	849941	Symbol	f -> name		846614						
ANR	849942	Symbol	* core -> cons		846614						
ANR	849943	Symbol	* core		846614						
ANR	849944	Symbol	core -> assembler		846614						
ANR	849945	Symbol	help_msg_ax		846614						
ANR	849946	Symbol	core -> anal		846614						
ANR	849947	Symbol	fcn		846614						
ANR	849948	Symbol	R_ANAL_OP_TYPE_UCALL		846614						
ANR	849949	Symbol	* var		846614						
ANR	849950	Symbol	refi -> type		846614						
ANR	849951	Symbol	core -> cons		846614						
ANR	849952	Symbol	core -> io		846614						
ANR	849953	Symbol	R_PRINT_FLAGS_COLOR		846614						
ANR	849954	Symbol	R_ANAL_REF_TYPE_CALL		846614						
ANR	849955	Symbol	cp_inp		846614						
ANR	849956	Symbol	sdb_new0		846614						
ANR	849957	Symbol	* res1		846614						
ANR	849958	Symbol	name_ref		846614						
ANR	849959	Symbol	f		846614						
ANR	849960	Symbol	wvar		846614						
ANR	849961	Symbol	r_str_word_get0		846614						
ANR	849962	Symbol	core -> flags		846614						
ANR	849963	Symbol	* fi		846614						
ANR	849964	Symbol	n		846614						
ANR	849965	Symbol	list1		846614						
ANR	849966	Symbol	buf		846614						
ANR	849967	Symbol	* core -> print		846614						
ANR	849968	Symbol	* core -> anal		846614						
ANR	849969	Symbol	refs		846614						
ANR	849970	Symbol	& asmop		846614						
ANR	849971	Symbol	R_CORE_ANAL_JSON		846614						
ANR	849972	Symbol	fcn -> addr		846614						
ANR	849973	Symbol	fi -> realname		846614						
ANR	849974	Symbol	to		846614						
ANR	849975	Symbol	r_flag_get_at		846614						
ANR	849976	Symbol	db		846614						
ANR	849977	Symbol	pj_string		846614						
ANR	849978	Symbol	fcn -> name		846614						
ANR	849979	Symbol	fi -> name		846614						
ANR	849980	Symbol	aop . type		846614						
ANR	849981	Symbol	space		846614						
ANR	849982	Symbol	r_anal_var_get_byname		846614						
ANR	849983	Symbol	ref		846614						
ANR	849984	Symbol	refi -> at		846614						
ANR	849985	Symbol	fi -> offset		846614						
ANR	849986	Symbol	from		846614						
ANR	849987	Symbol	core -> num		846614						
ANR	849988	Symbol	tInput		846614						
ANR	849989	Symbol	core -> anal -> coreb . getNameDelta		846614						
ANR	849990	Symbol	strcmp		846614						
ANR	849991	Symbol	r_anal_refs_get		846614						
ANR	849992	Symbol	res		846614						
ANR	849993	Symbol	list_		846614						
ANR	849994	Symbol	NULL		846614						
ANR	849995	Symbol	res1		846614						
ANR	849996	Symbol	* * core -> cons		846614						
ANR	849997	Symbol	strtok		846614						
ANR	849998	Symbol	list		846614						
ANR	849999	Symbol	r_anal_fcn_get_refs		846614						
ANR	850000	Symbol	r_str_escape		846614						
ANR	850001	Symbol	escaped		846614						
ANR	850002	Symbol	core		846614						
ANR	850003	Symbol	hint		846614						
ANR	850004	Symbol	name		846614						
ANR	850005	Symbol	true		846614						
ANR	850006	Symbol	core -> print		846614						
ANR	850007	Symbol	core -> anal -> sdb_fcns		846614						
ANR	850008	Symbol	desc		846614						
ANR	850009	Symbol	fi		846614						
ANR	850010	Symbol	ref -> type		846614						
ANR	850011	Symbol	R_META_TYPE_COMMENT		846614						
ANR	850012	Symbol	r_str_split_list		846614						
ANR	850013	Symbol	r_anal_xrefs_type		846614						
ANR	850014	Symbol	desc_to_free		846614						
ANR	850015	Symbol	* res		846614						
ANR	850016	Symbol	r_str_newf		846614						
ANR	850017	Symbol	R_ANAL_OP_MASK_BASIC		846614						
ANR	850018	Symbol	r_asm_op_get_asm		846614						
ANR	850019	Symbol	r_num_math		846614						
ANR	850020	Symbol	* refi		846614						
ANR	850021	Symbol	r_print_colorize_opcode		846614						
ANR	850022	Symbol	r_str_replace_ch		846614						
ANR	850023	Symbol	* core -> cons -> context		846614						
ANR	850024	Symbol	r_anal_xrefs_get		846614						
ANR	850025	Symbol	r_anal_xrefs_type_tostring		846614						
ANR	850026	Symbol	var_ref_list		846614						
ANR	850027	Symbol	r_str_trim_head		846614						
ANR	850028	Symbol	addr		846614						
ANR	850029	Symbol	UT64_MAX		846614						
ANR	850030	Symbol	* * core		846614						
ANR	850031	Symbol	r_meta_get_string		846614						
ANR	850032	Symbol	op		846614						
ANR	850033	Symbol	get_buf_asm		846614						
ANR	850034	Symbol	flag -> name		846614						
ANR	850035	Symbol	false		846614						
ANR	850036	Symbol	R_CORE_ANAL_GRAPHBODY		846614						
ANR	850037	Symbol	sdb_get		846614						
ANR	850038	Symbol	r_anal_hint_get		846614						
ANR	850039	Symbol	core -> anal -> coreb		846614						
ANR	850040	Symbol	ptr		846614						
ANR	850041	Symbol	* f		846614						
ANR	850042	Symbol	r_anal_get_fcn_in		846614						
ANR	850043	Symbol	pj		846614						
ANR	850044	Symbol	pj_new		846614						
ANR	850045	Symbol	comment		846614						
ANR	850046	Symbol	strdup		846614						
ANR	850047	Symbol	* ref		846614						
ANR	850048	Symbol	reftype		846614						
ANR	850049	Function	cmd_anal_hint	7107:0:204176:210671							
ANR	850050	FunctionDef	"cmd_anal_hint (RCore * core , const char * input)"		850049	0					
ANR	850051	CompoundStatement		7107:58:204234:210671	850049	0					
ANR	850052	SwitchStatement	switch ( input [ 0 ] )		850049	0					
ANR	850053	Condition	input [ 0 ]	7108:9:204245:204252	850049	0	True				
ANR	850054	ArrayIndexing	input [ 0 ]		850049	0					
ANR	850055	Identifier	input		850049	0					
ANR	850056	PrimaryExpression	0		850049	1					
ANR	850057	CompoundStatement		2:19:20:20	850049	1					
ANR	850058	Label	case '?' :	7109:1:204258:204266	850049	0	True				
ANR	850059	IfStatement	if ( input [ 1 ] )		850049	1					
ANR	850060	Condition	input [ 1 ]	7110:6:204274:204281	850049	0	True				
ANR	850061	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850062	Identifier	input		850049	0					
ANR	850063	PrimaryExpression	1		850049	1					
ANR	850064	CompoundStatement		5:3:54:99	850049	1					
ANR	850065	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , input + 1 ) ;"	7111:3:204289:204334	850049	0	True				
ANR	850066	IdentifierDecl	"addr = r_num_math ( core -> num , input + 1 )"		850049	0					
ANR	850067	IdentifierDeclType	ut64		850049	0					
ANR	850068	Identifier	addr		850049	1					
ANR	850069	AssignmentExpression	"addr = r_num_math ( core -> num , input + 1 )"		850049	2		=			
ANR	850070	Identifier	addr		850049	0					
ANR	850071	CallExpression	"r_num_math ( core -> num , input + 1 )"		850049	1					
ANR	850072	Callee	r_num_math		850049	0					
ANR	850073	Identifier	r_num_math		850049	0					
ANR	850074	ArgumentList	core -> num		850049	1					
ANR	850075	Argument	core -> num		850049	0					
ANR	850076	PtrMemberAccess	core -> num		850049	0					
ANR	850077	Identifier	core		850049	0					
ANR	850078	Identifier	num		850049	1					
ANR	850079	Argument	input + 1		850049	1					
ANR	850080	AdditiveExpression	input + 1		850049	0		+			
ANR	850081	Identifier	input		850049	0					
ANR	850082	PrimaryExpression	1		850049	1					
ANR	850083	ExpressionStatement	"r_core_anal_hint_print ( core -> anal , addr , 0 )"	7112:3:204339:204383	850049	1	True				
ANR	850084	CallExpression	"r_core_anal_hint_print ( core -> anal , addr , 0 )"		850049	0					
ANR	850085	Callee	r_core_anal_hint_print		850049	0					
ANR	850086	Identifier	r_core_anal_hint_print		850049	0					
ANR	850087	ArgumentList	core -> anal		850049	1					
ANR	850088	Argument	core -> anal		850049	0					
ANR	850089	PtrMemberAccess	core -> anal		850049	0					
ANR	850090	Identifier	core		850049	0					
ANR	850091	Identifier	anal		850049	1					
ANR	850092	Argument	addr		850049	1					
ANR	850093	Identifier	addr		850049	0					
ANR	850094	Argument	0		850049	2					
ANR	850095	PrimaryExpression	0		850049	0					
ANR	850096	ElseStatement	else		850049	0					
ANR	850097	CompoundStatement		7:9:159:159	850049	0					
ANR	850098	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ah )"	7114:3:204399:204434	850049	0	True				
ANR	850099	CallExpression	"r_core_cmd_help ( core , help_msg_ah )"		850049	0					
ANR	850100	Callee	r_core_cmd_help		850049	0					
ANR	850101	Identifier	r_core_cmd_help		850049	0					
ANR	850102	ArgumentList	core		850049	1					
ANR	850103	Argument	core		850049	0					
ANR	850104	Identifier	core		850049	0					
ANR	850105	Argument	help_msg_ah		850049	1					
ANR	850106	Identifier	help_msg_ah		850049	0					
ANR	850107	BreakStatement	break ;	7116:2:204442:204447	850049	2	True				
ANR	850108	Label	case '.' :	7117:1:204450:204458	850049	3	True				
ANR	850109	ExpressionStatement	"r_core_anal_hint_print ( core -> anal , core -> offset , 0 )"	7118:2:204471:204523	850049	4	True				
ANR	850110	CallExpression	"r_core_anal_hint_print ( core -> anal , core -> offset , 0 )"		850049	0					
ANR	850111	Callee	r_core_anal_hint_print		850049	0					
ANR	850112	Identifier	r_core_anal_hint_print		850049	0					
ANR	850113	ArgumentList	core -> anal		850049	1					
ANR	850114	Argument	core -> anal		850049	0					
ANR	850115	PtrMemberAccess	core -> anal		850049	0					
ANR	850116	Identifier	core		850049	0					
ANR	850117	Identifier	anal		850049	1					
ANR	850118	Argument	core -> offset		850049	1					
ANR	850119	PtrMemberAccess	core -> offset		850049	0					
ANR	850120	Identifier	core		850049	0					
ANR	850121	Identifier	offset		850049	1					
ANR	850122	Argument	0		850049	2					
ANR	850123	PrimaryExpression	0		850049	0					
ANR	850124	BreakStatement	break ;	7119:2:204527:204532	850049	5	True				
ANR	850125	Label	case 'a' :	7120:1:204535:204543	850049	6	True				
ANR	850126	IfStatement	if ( input [ 1 ] )		850049	7					
ANR	850127	Condition	input [ 1 ]	7121:6:204569:204576	850049	0	True				
ANR	850128	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850129	Identifier	input		850049	0					
ANR	850130	PrimaryExpression	1		850049	1					
ANR	850131	CompoundStatement		17:3:359:389	850049	1					
ANR	850132	IdentifierDeclStatement	int i ;	7122:3:204584:204589	850049	0	True				
ANR	850133	IdentifierDecl	i		850049	0					
ANR	850134	IdentifierDeclType	int		850049	0					
ANR	850135	Identifier	i		850049	1					
ANR	850136	IdentifierDeclStatement	char * ptr = strdup ( input + 2 ) ;	7123:3:204594:204624	850049	1	True				
ANR	850137	IdentifierDecl	* ptr = strdup ( input + 2 )		850049	0					
ANR	850138	IdentifierDeclType	char *		850049	0					
ANR	850139	Identifier	ptr		850049	1					
ANR	850140	AssignmentExpression	* ptr = strdup ( input + 2 )		850049	2		=			
ANR	850141	Identifier	ptr		850049	0					
ANR	850142	CallExpression	strdup ( input + 2 )		850049	1					
ANR	850143	Callee	strdup		850049	0					
ANR	850144	Identifier	strdup		850049	0					
ANR	850145	ArgumentList	input + 2		850049	1					
ANR	850146	Argument	input + 2		850049	0					
ANR	850147	AdditiveExpression	input + 2		850049	0		+			
ANR	850148	Identifier	input		850049	0					
ANR	850149	PrimaryExpression	2		850049	1					
ANR	850150	ExpressionStatement	i = r_str_word_set0 ( ptr )	7124:3:204629:204654	850049	2	True				
ANR	850151	AssignmentExpression	i = r_str_word_set0 ( ptr )		850049	0		=			
ANR	850152	Identifier	i		850049	0					
ANR	850153	CallExpression	r_str_word_set0 ( ptr )		850049	1					
ANR	850154	Callee	r_str_word_set0		850049	0					
ANR	850155	Identifier	r_str_word_set0		850049	0					
ANR	850156	ArgumentList	ptr		850049	1					
ANR	850157	Argument	ptr		850049	0					
ANR	850158	Identifier	ptr		850049	0					
ANR	850159	IfStatement	if ( i == 2 )		850049	3					
ANR	850160	Condition	i == 2	7125:7:204663:204668	850049	0	True				
ANR	850161	EqualityExpression	i == 2		850049	0		==			
ANR	850162	Identifier	i		850049	0					
ANR	850163	PrimaryExpression	2		850049	1					
ANR	850164	CompoundStatement		19:15:436:436	850049	1					
ANR	850165	ExpressionStatement	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"	7126:4:204677:204725	850049	0	True				
ANR	850166	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"		850049	0					
ANR	850167	Callee	r_num_math		850049	0					
ANR	850168	Identifier	r_num_math		850049	0					
ANR	850169	ArgumentList	core -> num		850049	1					
ANR	850170	Argument	core -> num		850049	0					
ANR	850171	PtrMemberAccess	core -> num		850049	0					
ANR	850172	Identifier	core		850049	0					
ANR	850173	Identifier	num		850049	1					
ANR	850174	Argument	"r_str_word_get0 ( ptr , 1 )"		850049	1					
ANR	850175	CallExpression	"r_str_word_get0 ( ptr , 1 )"		850049	0					
ANR	850176	Callee	r_str_word_get0		850049	0					
ANR	850177	Identifier	r_str_word_get0		850049	0					
ANR	850178	ArgumentList	ptr		850049	1					
ANR	850179	Argument	ptr		850049	0					
ANR	850180	Identifier	ptr		850049	0					
ANR	850181	Argument	1		850049	1					
ANR	850182	PrimaryExpression	1		850049	0					
ANR	850183	ExpressionStatement	"r_anal_hint_set_arch ( core -> anal , core -> offset , r_str_word_get0 ( ptr , 0 ) )"	7128:3:204735:204808	850049	4	True				
ANR	850184	CallExpression	"r_anal_hint_set_arch ( core -> anal , core -> offset , r_str_word_get0 ( ptr , 0 ) )"		850049	0					
ANR	850185	Callee	r_anal_hint_set_arch		850049	0					
ANR	850186	Identifier	r_anal_hint_set_arch		850049	0					
ANR	850187	ArgumentList	core -> anal		850049	1					
ANR	850188	Argument	core -> anal		850049	0					
ANR	850189	PtrMemberAccess	core -> anal		850049	0					
ANR	850190	Identifier	core		850049	0					
ANR	850191	Identifier	anal		850049	1					
ANR	850192	Argument	core -> offset		850049	1					
ANR	850193	PtrMemberAccess	core -> offset		850049	0					
ANR	850194	Identifier	core		850049	0					
ANR	850195	Identifier	offset		850049	1					
ANR	850196	Argument	"r_str_word_get0 ( ptr , 0 )"		850049	2					
ANR	850197	CallExpression	"r_str_word_get0 ( ptr , 0 )"		850049	0					
ANR	850198	Callee	r_str_word_get0		850049	0					
ANR	850199	Identifier	r_str_word_get0		850049	0					
ANR	850200	ArgumentList	ptr		850049	1					
ANR	850201	Argument	ptr		850049	0					
ANR	850202	Identifier	ptr		850049	0					
ANR	850203	Argument	0		850049	1					
ANR	850204	PrimaryExpression	0		850049	0					
ANR	850205	ExpressionStatement	free ( ptr )	7129:3:204813:204823	850049	5	True				
ANR	850206	CallExpression	free ( ptr )		850049	0					
ANR	850207	Callee	free		850049	0					
ANR	850208	Identifier	free		850049	0					
ANR	850209	ArgumentList	ptr		850049	1					
ANR	850210	Argument	ptr		850049	0					
ANR	850211	Identifier	ptr		850049	0					
ANR	850212	ElseStatement	else		850049	0					
ANR	850213	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	850214	Condition	input [ 1 ] == '-'	7130:13:204838:204852	850049	0	True				
ANR	850215	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	850216	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850217	Identifier	input		850049	0					
ANR	850218	PrimaryExpression	1		850049	1					
ANR	850219	PrimaryExpression	'-'		850049	1					
ANR	850220	CompoundStatement		24:30:620:620	850049	1					
ANR	850221	ExpressionStatement	"r_anal_hint_unset_arch ( core -> anal , core -> offset )"	7131:3:204860:204909	850049	0	True				
ANR	850222	CallExpression	"r_anal_hint_unset_arch ( core -> anal , core -> offset )"		850049	0					
ANR	850223	Callee	r_anal_hint_unset_arch		850049	0					
ANR	850224	Identifier	r_anal_hint_unset_arch		850049	0					
ANR	850225	ArgumentList	core -> anal		850049	1					
ANR	850226	Argument	core -> anal		850049	0					
ANR	850227	PtrMemberAccess	core -> anal		850049	0					
ANR	850228	Identifier	core		850049	0					
ANR	850229	Identifier	anal		850049	1					
ANR	850230	Argument	core -> offset		850049	1					
ANR	850231	PtrMemberAccess	core -> offset		850049	0					
ANR	850232	Identifier	core		850049	0					
ANR	850233	Identifier	offset		850049	1					
ANR	850234	ElseStatement	else		850049	0					
ANR	850235	CompoundStatement		26:9:685:685	850049	0					
ANR	850236	ExpressionStatement	"eprintf ( ""Missing argument\\n"" )"	7133:3:204925:204955	850049	0	True				
ANR	850237	CallExpression	"eprintf ( ""Missing argument\\n"" )"		850049	0					
ANR	850238	Callee	eprintf		850049	0					
ANR	850239	Identifier	eprintf		850049	0					
ANR	850240	ArgumentList	"""Missing argument\\n"""		850049	1					
ANR	850241	Argument	"""Missing argument\\n"""		850049	0					
ANR	850242	PrimaryExpression	"""Missing argument\\n"""		850049	0					
ANR	850243	BreakStatement	break ;	7135:2:204963:204968	850049	8	True				
ANR	850244	Label	case 't' :	7136:1:204971:204979	850049	9	True				
ANR	850245	IfStatement	if ( input [ 1 ] == ' ' )		850049	10					
ANR	850246	Condition	input [ 1 ] == ' '	7137:6:204996:205010	850049	0	True				
ANR	850247	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	850248	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850249	Identifier	input		850049	0					
ANR	850250	PrimaryExpression	1		850049	1					
ANR	850251	PrimaryExpression	' '		850049	1					
ANR	850252	CompoundStatement		33:3:831:873	850049	1					
ANR	850253	IdentifierDeclStatement	const char * arg = r_str_trim_ro ( input + 1 ) ;	7138:3:205018:205061	850049	0	True				
ANR	850254	IdentifierDecl	* arg = r_str_trim_ro ( input + 1 )		850049	0					
ANR	850255	IdentifierDeclType	const char *		850049	0					
ANR	850256	Identifier	arg		850049	1					
ANR	850257	AssignmentExpression	* arg = r_str_trim_ro ( input + 1 )		850049	2		=			
ANR	850258	Identifier	arg		850049	0					
ANR	850259	CallExpression	r_str_trim_ro ( input + 1 )		850049	1					
ANR	850260	Callee	r_str_trim_ro		850049	0					
ANR	850261	Identifier	r_str_trim_ro		850049	0					
ANR	850262	ArgumentList	input + 1		850049	1					
ANR	850263	Argument	input + 1		850049	0					
ANR	850264	AdditiveExpression	input + 1		850049	0		+			
ANR	850265	Identifier	input		850049	0					
ANR	850266	PrimaryExpression	1		850049	1					
ANR	850267	IdentifierDeclStatement	int type = r_anal_optype_from_string ( arg ) ;	7139:3:205066:205108	850049	1	True				
ANR	850268	IdentifierDecl	type = r_anal_optype_from_string ( arg )		850049	0					
ANR	850269	IdentifierDeclType	int		850049	0					
ANR	850270	Identifier	type		850049	1					
ANR	850271	AssignmentExpression	type = r_anal_optype_from_string ( arg )		850049	2		=			
ANR	850272	Identifier	type		850049	0					
ANR	850273	CallExpression	r_anal_optype_from_string ( arg )		850049	1					
ANR	850274	Callee	r_anal_optype_from_string		850049	0					
ANR	850275	Identifier	r_anal_optype_from_string		850049	0					
ANR	850276	ArgumentList	arg		850049	1					
ANR	850277	Argument	arg		850049	0					
ANR	850278	Identifier	arg		850049	0					
ANR	850279	ExpressionStatement	"r_anal_hint_set_type ( core -> anal , core -> offset , type )"	7140:3:205113:205166	850049	2	True				
ANR	850280	CallExpression	"r_anal_hint_set_type ( core -> anal , core -> offset , type )"		850049	0					
ANR	850281	Callee	r_anal_hint_set_type		850049	0					
ANR	850282	Identifier	r_anal_hint_set_type		850049	0					
ANR	850283	ArgumentList	core -> anal		850049	1					
ANR	850284	Argument	core -> anal		850049	0					
ANR	850285	PtrMemberAccess	core -> anal		850049	0					
ANR	850286	Identifier	core		850049	0					
ANR	850287	Identifier	anal		850049	1					
ANR	850288	Argument	core -> offset		850049	1					
ANR	850289	PtrMemberAccess	core -> offset		850049	0					
ANR	850290	Identifier	core		850049	0					
ANR	850291	Identifier	offset		850049	1					
ANR	850292	Argument	type		850049	2					
ANR	850293	Identifier	type		850049	0					
ANR	850294	ElseStatement	else		850049	0					
ANR	850295	CompoundStatement		35:9:942:942	850049	0					
ANR	850296	ExpressionStatement	"eprintf ( ""Usage: aht [type] # can be mov, jmp, call, ...\\n"" )"	7142:3:205182:205242	850049	0	True				
ANR	850297	CallExpression	"eprintf ( ""Usage: aht [type] # can be mov, jmp, call, ...\\n"" )"		850049	0					
ANR	850298	Callee	eprintf		850049	0					
ANR	850299	Identifier	eprintf		850049	0					
ANR	850300	ArgumentList	"""Usage: aht [type] # can be mov, jmp, call, ...\\n"""		850049	1					
ANR	850301	Argument	"""Usage: aht [type] # can be mov, jmp, call, ...\\n"""		850049	0					
ANR	850302	PrimaryExpression	"""Usage: aht [type] # can be mov, jmp, call, ...\\n"""		850049	0					
ANR	850303	BreakStatement	break ;	7144:2:205250:205255	850049	11	True				
ANR	850304	Label	case 'b' :	7145:1:205258:205266	850049	12	True				
ANR	850305	IfStatement	if ( input [ 1 ] )		850049	13					
ANR	850306	Condition	input [ 1 ]	7146:6:205292:205299	850049	0	True				
ANR	850307	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850308	Identifier	input		850049	0					
ANR	850309	PrimaryExpression	1		850049	1					
ANR	850310	CompoundStatement		43:3:1120:1149	850049	1					
ANR	850311	IdentifierDeclStatement	char * ptr = strdup ( input + 2 ) ;	7147:3:205307:205337	850049	0	True				
ANR	850312	IdentifierDecl	* ptr = strdup ( input + 2 )		850049	0					
ANR	850313	IdentifierDeclType	char *		850049	0					
ANR	850314	Identifier	ptr		850049	1					
ANR	850315	AssignmentExpression	* ptr = strdup ( input + 2 )		850049	2		=			
ANR	850316	Identifier	ptr		850049	0					
ANR	850317	CallExpression	strdup ( input + 2 )		850049	1					
ANR	850318	Callee	strdup		850049	0					
ANR	850319	Identifier	strdup		850049	0					
ANR	850320	ArgumentList	input + 2		850049	1					
ANR	850321	Argument	input + 2		850049	0					
ANR	850322	AdditiveExpression	input + 2		850049	0		+			
ANR	850323	Identifier	input		850049	0					
ANR	850324	PrimaryExpression	2		850049	1					
ANR	850325	IdentifierDeclStatement	int bits ;	7148:3:205342:205350	850049	1	True				
ANR	850326	IdentifierDecl	bits		850049	0					
ANR	850327	IdentifierDeclType	int		850049	0					
ANR	850328	Identifier	bits		850049	1					
ANR	850329	IdentifierDeclStatement	int i = r_str_word_set0 ( ptr ) ;	7149:3:205355:205384	850049	2	True				
ANR	850330	IdentifierDecl	i = r_str_word_set0 ( ptr )		850049	0					
ANR	850331	IdentifierDeclType	int		850049	0					
ANR	850332	Identifier	i		850049	1					
ANR	850333	AssignmentExpression	i = r_str_word_set0 ( ptr )		850049	2		=			
ANR	850334	Identifier	i		850049	0					
ANR	850335	CallExpression	r_str_word_set0 ( ptr )		850049	1					
ANR	850336	Callee	r_str_word_set0		850049	0					
ANR	850337	Identifier	r_str_word_set0		850049	0					
ANR	850338	ArgumentList	ptr		850049	1					
ANR	850339	Argument	ptr		850049	0					
ANR	850340	Identifier	ptr		850049	0					
ANR	850341	IfStatement	if ( i == 2 )		850049	3					
ANR	850342	Condition	i == 2	7150:7:205393:205398	850049	0	True				
ANR	850343	EqualityExpression	i == 2		850049	0		==			
ANR	850344	Identifier	i		850049	0					
ANR	850345	PrimaryExpression	2		850049	1					
ANR	850346	CompoundStatement		44:15:1166:1166	850049	1					
ANR	850347	ExpressionStatement	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"	7151:4:205407:205455	850049	0	True				
ANR	850348	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"		850049	0					
ANR	850349	Callee	r_num_math		850049	0					
ANR	850350	Identifier	r_num_math		850049	0					
ANR	850351	ArgumentList	core -> num		850049	1					
ANR	850352	Argument	core -> num		850049	0					
ANR	850353	PtrMemberAccess	core -> num		850049	0					
ANR	850354	Identifier	core		850049	0					
ANR	850355	Identifier	num		850049	1					
ANR	850356	Argument	"r_str_word_get0 ( ptr , 1 )"		850049	1					
ANR	850357	CallExpression	"r_str_word_get0 ( ptr , 1 )"		850049	0					
ANR	850358	Callee	r_str_word_get0		850049	0					
ANR	850359	Identifier	r_str_word_get0		850049	0					
ANR	850360	ArgumentList	ptr		850049	1					
ANR	850361	Argument	ptr		850049	0					
ANR	850362	Identifier	ptr		850049	0					
ANR	850363	Argument	1		850049	1					
ANR	850364	PrimaryExpression	1		850049	0					
ANR	850365	ExpressionStatement	"bits = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"	7153:3:205465:205520	850049	4	True				
ANR	850366	AssignmentExpression	"bits = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		850049	0		=			
ANR	850367	Identifier	bits		850049	0					
ANR	850368	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		850049	1					
ANR	850369	Callee	r_num_math		850049	0					
ANR	850370	Identifier	r_num_math		850049	0					
ANR	850371	ArgumentList	core -> num		850049	1					
ANR	850372	Argument	core -> num		850049	0					
ANR	850373	PtrMemberAccess	core -> num		850049	0					
ANR	850374	Identifier	core		850049	0					
ANR	850375	Identifier	num		850049	1					
ANR	850376	Argument	"r_str_word_get0 ( ptr , 0 )"		850049	1					
ANR	850377	CallExpression	"r_str_word_get0 ( ptr , 0 )"		850049	0					
ANR	850378	Callee	r_str_word_get0		850049	0					
ANR	850379	Identifier	r_str_word_get0		850049	0					
ANR	850380	ArgumentList	ptr		850049	1					
ANR	850381	Argument	ptr		850049	0					
ANR	850382	Identifier	ptr		850049	0					
ANR	850383	Argument	0		850049	1					
ANR	850384	PrimaryExpression	0		850049	0					
ANR	850385	ExpressionStatement	"r_anal_hint_set_bits ( core -> anal , core -> offset , bits )"	7154:3:205525:205578	850049	5	True				
ANR	850386	CallExpression	"r_anal_hint_set_bits ( core -> anal , core -> offset , bits )"		850049	0					
ANR	850387	Callee	r_anal_hint_set_bits		850049	0					
ANR	850388	Identifier	r_anal_hint_set_bits		850049	0					
ANR	850389	ArgumentList	core -> anal		850049	1					
ANR	850390	Argument	core -> anal		850049	0					
ANR	850391	PtrMemberAccess	core -> anal		850049	0					
ANR	850392	Identifier	core		850049	0					
ANR	850393	Identifier	anal		850049	1					
ANR	850394	Argument	core -> offset		850049	1					
ANR	850395	PtrMemberAccess	core -> offset		850049	0					
ANR	850396	Identifier	core		850049	0					
ANR	850397	Identifier	offset		850049	1					
ANR	850398	Argument	bits		850049	2					
ANR	850399	Identifier	bits		850049	0					
ANR	850400	ExpressionStatement	free ( ptr )	7155:3:205583:205593	850049	6	True				
ANR	850401	CallExpression	free ( ptr )		850049	0					
ANR	850402	Callee	free		850049	0					
ANR	850403	Identifier	free		850049	0					
ANR	850404	ArgumentList	ptr		850049	1					
ANR	850405	Argument	ptr		850049	0					
ANR	850406	Identifier	ptr		850049	0					
ANR	850407	ElseStatement	else		850049	0					
ANR	850408	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	850409	Condition	input [ 1 ] == '-'	7156:14:205609:205623	850049	0	True				
ANR	850410	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	850411	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850412	Identifier	input		850049	0					
ANR	850413	PrimaryExpression	1		850049	1					
ANR	850414	PrimaryExpression	'-'		850049	1					
ANR	850415	CompoundStatement		50:31:1391:1391	850049	1					
ANR	850416	ExpressionStatement	"r_anal_hint_unset_bits ( core -> anal , core -> offset )"	7157:3:205631:205680	850049	0	True				
ANR	850417	CallExpression	"r_anal_hint_unset_bits ( core -> anal , core -> offset )"		850049	0					
ANR	850418	Callee	r_anal_hint_unset_bits		850049	0					
ANR	850419	Identifier	r_anal_hint_unset_bits		850049	0					
ANR	850420	ArgumentList	core -> anal		850049	1					
ANR	850421	Argument	core -> anal		850049	0					
ANR	850422	PtrMemberAccess	core -> anal		850049	0					
ANR	850423	Identifier	core		850049	0					
ANR	850424	Identifier	anal		850049	1					
ANR	850425	Argument	core -> offset		850049	1					
ANR	850426	PtrMemberAccess	core -> offset		850049	0					
ANR	850427	Identifier	core		850049	0					
ANR	850428	Identifier	offset		850049	1					
ANR	850429	ElseStatement	else		850049	0					
ANR	850430	CompoundStatement		52:9:1456:1456	850049	0					
ANR	850431	ExpressionStatement	"eprintf ( ""Missing argument\\n"" )"	7159:3:205696:205726	850049	0	True				
ANR	850432	CallExpression	"eprintf ( ""Missing argument\\n"" )"		850049	0					
ANR	850433	Callee	eprintf		850049	0					
ANR	850434	Identifier	eprintf		850049	0					
ANR	850435	ArgumentList	"""Missing argument\\n"""		850049	1					
ANR	850436	Argument	"""Missing argument\\n"""		850049	0					
ANR	850437	PrimaryExpression	"""Missing argument\\n"""		850049	0					
ANR	850438	BreakStatement	break ;	7161:2:205734:205739	850049	14	True				
ANR	850439	Label	case 'i' :	7162:1:205742:205750	850049	15	True				
ANR	850440	IfStatement	if ( input [ 1 ] == '?' )		850049	16					
ANR	850441	Condition	input [ 1 ] == '?'	7163:6:205767:205781	850049	0	True				
ANR	850442	EqualityExpression	input [ 1 ] == '?'		850049	0		==			
ANR	850443	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850444	Identifier	input		850049	0					
ANR	850445	PrimaryExpression	1		850049	1					
ANR	850446	PrimaryExpression	'?'		850049	1					
ANR	850447	CompoundStatement		57:23:1549:1549	850049	1					
ANR	850448	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ahi )"	7164:3:205789:205825	850049	0	True				
ANR	850449	CallExpression	"r_core_cmd_help ( core , help_msg_ahi )"		850049	0					
ANR	850450	Callee	r_core_cmd_help		850049	0					
ANR	850451	Identifier	r_core_cmd_help		850049	0					
ANR	850452	ArgumentList	core		850049	1					
ANR	850453	Argument	core		850049	0					
ANR	850454	Identifier	core		850049	0					
ANR	850455	Argument	help_msg_ahi		850049	1					
ANR	850456	Identifier	help_msg_ahi		850049	0					
ANR	850457	ElseStatement	else		850049	0					
ANR	850458	IfStatement	if ( isdigit ( input [ 1 ] ) )		850049	0					
ANR	850459	Condition	isdigit ( input [ 1 ] )	7165:13:205840:205857	850049	0	True				
ANR	850460	CallExpression	isdigit ( input [ 1 ] )		850049	0					
ANR	850461	Callee	isdigit		850049	0					
ANR	850462	Identifier	isdigit		850049	0					
ANR	850463	ArgumentList	input [ 1 ]		850049	1					
ANR	850464	Argument	input [ 1 ]		850049	0					
ANR	850465	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850466	Identifier	input		850049	0					
ANR	850467	PrimaryExpression	1		850049	1					
ANR	850468	CompoundStatement		59:33:1625:1625	850049	1					
ANR	850469	ExpressionStatement	"r_anal_hint_set_nword ( core -> anal , core -> offset , input [ 1 ] - '0' )"	7166:3:205865:205929	850049	0	True				
ANR	850470	CallExpression	"r_anal_hint_set_nword ( core -> anal , core -> offset , input [ 1 ] - '0' )"		850049	0					
ANR	850471	Callee	r_anal_hint_set_nword		850049	0					
ANR	850472	Identifier	r_anal_hint_set_nword		850049	0					
ANR	850473	ArgumentList	core -> anal		850049	1					
ANR	850474	Argument	core -> anal		850049	0					
ANR	850475	PtrMemberAccess	core -> anal		850049	0					
ANR	850476	Identifier	core		850049	0					
ANR	850477	Identifier	anal		850049	1					
ANR	850478	Argument	core -> offset		850049	1					
ANR	850479	PtrMemberAccess	core -> offset		850049	0					
ANR	850480	Identifier	core		850049	0					
ANR	850481	Identifier	offset		850049	1					
ANR	850482	Argument	input [ 1 ] - '0'		850049	2					
ANR	850483	AdditiveExpression	input [ 1 ] - '0'		850049	0		-			
ANR	850484	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850485	Identifier	input		850049	0					
ANR	850486	PrimaryExpression	1		850049	1					
ANR	850487	PrimaryExpression	'0'		850049	1					
ANR	850488	ExpressionStatement	input ++	7167:3:205934:205941	850049	1	True				
ANR	850489	PostIncDecOperationExpression	input ++		850049	0					
ANR	850490	Identifier	input		850049	0					
ANR	850491	IncDec	++		850049	1					
ANR	850492	ElseStatement	else		850049	0					
ANR	850493	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	850494	Condition	input [ 1 ] == '-'	7168:13:205956:205970	850049	0	True				
ANR	850495	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	850496	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850497	Identifier	input		850049	0					
ANR	850498	PrimaryExpression	1		850049	1					
ANR	850499	PrimaryExpression	'-'		850049	1					
ANR	850500	CompoundStatement		62:30:1738:1738	850049	1					
ANR	850501	ExpressionStatement	"r_anal_hint_set_immbase ( core -> anal , core -> offset , 0 )"	7169:3:205988:206041	850049	0	True				
ANR	850502	CallExpression	"r_anal_hint_set_immbase ( core -> anal , core -> offset , 0 )"		850049	0					
ANR	850503	Callee	r_anal_hint_set_immbase		850049	0					
ANR	850504	Identifier	r_anal_hint_set_immbase		850049	0					
ANR	850505	ArgumentList	core -> anal		850049	1					
ANR	850506	Argument	core -> anal		850049	0					
ANR	850507	PtrMemberAccess	core -> anal		850049	0					
ANR	850508	Identifier	core		850049	0					
ANR	850509	Identifier	anal		850049	1					
ANR	850510	Argument	core -> offset		850049	1					
ANR	850511	PtrMemberAccess	core -> offset		850049	0					
ANR	850512	Identifier	core		850049	0					
ANR	850513	Identifier	offset		850049	1					
ANR	850514	Argument	0		850049	2					
ANR	850515	PrimaryExpression	0		850049	0					
ANR	850516	IfStatement	if ( input [ 1 ] == ' ' )		850049	17					
ANR	850517	Condition	input [ 1 ] == ' '	7171:6:206053:206067	850049	0	True				
ANR	850518	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	850519	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850520	Identifier	input		850049	0					
ANR	850521	PrimaryExpression	1		850049	1					
ANR	850522	PrimaryExpression	' '		850049	1					
ANR	850523	CompoundStatement		67:3:1902:2215	850049	1					
ANR	850524	IdentifierDeclStatement	"const int base = ( input [ 2 ] == 's' ) ? 1 : ( input [ 2 ] == 'b' ) ? 2 : ( input [ 2 ] == 'p' ) ? 3 : ( input [ 2 ] == 'o' ) ? 8 : ( input [ 2 ] == 'd' ) ? 10 : ( input [ 2 ] == 'h' ) ? 16 : ( input [ 2 ] == 'i' ) ? 32 : ( input [ 2 ] == 'S' ) ? 80 : ( int ) r_num_math ( core -> num , input + 1 ) ;"	7173:3:206137:206450	850049	0	True				
ANR	850525	IdentifierDecl	"base = ( input [ 2 ] == 's' ) ? 1 : ( input [ 2 ] == 'b' ) ? 2 : ( input [ 2 ] == 'p' ) ? 3 : ( input [ 2 ] == 'o' ) ? 8 : ( input [ 2 ] == 'd' ) ? 10 : ( input [ 2 ] == 'h' ) ? 16 : ( input [ 2 ] == 'i' ) ? 32 : ( input [ 2 ] == 'S' ) ? 80 : ( int ) r_num_math ( core -> num , input + 1 )"		850049	0					
ANR	850526	IdentifierDeclType	const int		850049	0					
ANR	850527	Identifier	base		850049	1					
ANR	850528	AssignmentExpression	"base = ( input [ 2 ] == 's' ) ? 1 : ( input [ 2 ] == 'b' ) ? 2 : ( input [ 2 ] == 'p' ) ? 3 : ( input [ 2 ] == 'o' ) ? 8 : ( input [ 2 ] == 'd' ) ? 10 : ( input [ 2 ] == 'h' ) ? 16 : ( input [ 2 ] == 'i' ) ? 32 : ( input [ 2 ] == 'S' ) ? 80 : ( int ) r_num_math ( core -> num , input + 1 )"		850049	2		=			
ANR	850529	Identifier	base		850049	0					
ANR	850530	ConditionalExpression	"( input [ 2 ] == 's' ) ? 1 : ( input [ 2 ] == 'b' ) ? 2 : ( input [ 2 ] == 'p' ) ? 3 : ( input [ 2 ] == 'o' ) ? 8 : ( input [ 2 ] == 'd' ) ? 10 : ( input [ 2 ] == 'h' ) ? 16 : ( input [ 2 ] == 'i' ) ? 32 : ( input [ 2 ] == 'S' ) ? 80 : ( int ) r_num_math ( core -> num , input + 1 )"		850049	1					
ANR	850531	Condition	input [ 2 ] == 's'		850049	0					
ANR	850532	EqualityExpression	input [ 2 ] == 's'		850049	0		==			
ANR	850533	ArrayIndexing	input [ 2 ]		850049	0					
ANR	850534	Identifier	input		850049	0					
ANR	850535	PrimaryExpression	2		850049	1					
ANR	850536	PrimaryExpression	's'		850049	1					
ANR	850537	PrimaryExpression	1		850049	1					
ANR	850538	ConditionalExpression	"( input [ 2 ] == 'b' ) ? 2 : ( input [ 2 ] == 'p' ) ? 3 : ( input [ 2 ] == 'o' ) ? 8 : ( input [ 2 ] == 'd' ) ? 10 : ( input [ 2 ] == 'h' ) ? 16 : ( input [ 2 ] == 'i' ) ? 32 : ( input [ 2 ] == 'S' ) ? 80 : ( int ) r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	850539	Condition	input [ 2 ] == 'b'		850049	0					
ANR	850540	EqualityExpression	input [ 2 ] == 'b'		850049	0		==			
ANR	850541	ArrayIndexing	input [ 2 ]		850049	0					
ANR	850542	Identifier	input		850049	0					
ANR	850543	PrimaryExpression	2		850049	1					
ANR	850544	PrimaryExpression	'b'		850049	1					
ANR	850545	PrimaryExpression	2		850049	1					
ANR	850546	ConditionalExpression	"( input [ 2 ] == 'p' ) ? 3 : ( input [ 2 ] == 'o' ) ? 8 : ( input [ 2 ] == 'd' ) ? 10 : ( input [ 2 ] == 'h' ) ? 16 : ( input [ 2 ] == 'i' ) ? 32 : ( input [ 2 ] == 'S' ) ? 80 : ( int ) r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	850547	Condition	input [ 2 ] == 'p'		850049	0					
ANR	850548	EqualityExpression	input [ 2 ] == 'p'		850049	0		==			
ANR	850549	ArrayIndexing	input [ 2 ]		850049	0					
ANR	850550	Identifier	input		850049	0					
ANR	850551	PrimaryExpression	2		850049	1					
ANR	850552	PrimaryExpression	'p'		850049	1					
ANR	850553	PrimaryExpression	3		850049	1					
ANR	850554	ConditionalExpression	"( input [ 2 ] == 'o' ) ? 8 : ( input [ 2 ] == 'd' ) ? 10 : ( input [ 2 ] == 'h' ) ? 16 : ( input [ 2 ] == 'i' ) ? 32 : ( input [ 2 ] == 'S' ) ? 80 : ( int ) r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	850555	Condition	input [ 2 ] == 'o'		850049	0					
ANR	850556	EqualityExpression	input [ 2 ] == 'o'		850049	0		==			
ANR	850557	ArrayIndexing	input [ 2 ]		850049	0					
ANR	850558	Identifier	input		850049	0					
ANR	850559	PrimaryExpression	2		850049	1					
ANR	850560	PrimaryExpression	'o'		850049	1					
ANR	850561	PrimaryExpression	8		850049	1					
ANR	850562	ConditionalExpression	"( input [ 2 ] == 'd' ) ? 10 : ( input [ 2 ] == 'h' ) ? 16 : ( input [ 2 ] == 'i' ) ? 32 : ( input [ 2 ] == 'S' ) ? 80 : ( int ) r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	850563	Condition	input [ 2 ] == 'd'		850049	0					
ANR	850564	EqualityExpression	input [ 2 ] == 'd'		850049	0		==			
ANR	850565	ArrayIndexing	input [ 2 ]		850049	0					
ANR	850566	Identifier	input		850049	0					
ANR	850567	PrimaryExpression	2		850049	1					
ANR	850568	PrimaryExpression	'd'		850049	1					
ANR	850569	PrimaryExpression	10		850049	1					
ANR	850570	ConditionalExpression	"( input [ 2 ] == 'h' ) ? 16 : ( input [ 2 ] == 'i' ) ? 32 : ( input [ 2 ] == 'S' ) ? 80 : ( int ) r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	850571	Condition	input [ 2 ] == 'h'		850049	0					
ANR	850572	EqualityExpression	input [ 2 ] == 'h'		850049	0		==			
ANR	850573	ArrayIndexing	input [ 2 ]		850049	0					
ANR	850574	Identifier	input		850049	0					
ANR	850575	PrimaryExpression	2		850049	1					
ANR	850576	PrimaryExpression	'h'		850049	1					
ANR	850577	PrimaryExpression	16		850049	1					
ANR	850578	ConditionalExpression	"( input [ 2 ] == 'i' ) ? 32 : ( input [ 2 ] == 'S' ) ? 80 : ( int ) r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	850579	Condition	input [ 2 ] == 'i'		850049	0					
ANR	850580	EqualityExpression	input [ 2 ] == 'i'		850049	0		==			
ANR	850581	ArrayIndexing	input [ 2 ]		850049	0					
ANR	850582	Identifier	input		850049	0					
ANR	850583	PrimaryExpression	2		850049	1					
ANR	850584	PrimaryExpression	'i'		850049	1					
ANR	850585	PrimaryExpression	32		850049	1					
ANR	850586	ConditionalExpression	"( input [ 2 ] == 'S' ) ? 80 : ( int ) r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	850587	Condition	input [ 2 ] == 'S'		850049	0					
ANR	850588	EqualityExpression	input [ 2 ] == 'S'		850049	0		==			
ANR	850589	ArrayIndexing	input [ 2 ]		850049	0					
ANR	850590	Identifier	input		850049	0					
ANR	850591	PrimaryExpression	2		850049	1					
ANR	850592	PrimaryExpression	'S'		850049	1					
ANR	850593	PrimaryExpression	80		850049	1					
ANR	850594	CastExpression	"( int ) r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	850595	CastTarget	int		850049	0					
ANR	850596	CallExpression	"r_num_math ( core -> num , input + 1 )"		850049	1					
ANR	850597	Callee	r_num_math		850049	0					
ANR	850598	Identifier	r_num_math		850049	0					
ANR	850599	ArgumentList	core -> num		850049	1					
ANR	850600	Argument	core -> num		850049	0					
ANR	850601	PtrMemberAccess	core -> num		850049	0					
ANR	850602	Identifier	core		850049	0					
ANR	850603	Identifier	num		850049	1					
ANR	850604	Argument	input + 1		850049	1					
ANR	850605	AdditiveExpression	input + 1		850049	0		+			
ANR	850606	Identifier	input		850049	0					
ANR	850607	PrimaryExpression	1		850049	1					
ANR	850608	ExpressionStatement	"r_anal_hint_set_immbase ( core -> anal , core -> offset , base )"	7183:3:206455:206511	850049	1	True				
ANR	850609	CallExpression	"r_anal_hint_set_immbase ( core -> anal , core -> offset , base )"		850049	0					
ANR	850610	Callee	r_anal_hint_set_immbase		850049	0					
ANR	850611	Identifier	r_anal_hint_set_immbase		850049	0					
ANR	850612	ArgumentList	core -> anal		850049	1					
ANR	850613	Argument	core -> anal		850049	0					
ANR	850614	PtrMemberAccess	core -> anal		850049	0					
ANR	850615	Identifier	core		850049	0					
ANR	850616	Identifier	anal		850049	1					
ANR	850617	Argument	core -> offset		850049	1					
ANR	850618	PtrMemberAccess	core -> offset		850049	0					
ANR	850619	Identifier	core		850049	0					
ANR	850620	Identifier	offset		850049	1					
ANR	850621	Argument	base		850049	2					
ANR	850622	Identifier	base		850049	0					
ANR	850623	ElseStatement	else		850049	0					
ANR	850624	IfStatement	if ( input [ 1 ] != '?' && input [ 1 ] != '-' )		850049	0					
ANR	850625	Condition	input [ 1 ] != '?' && input [ 1 ] != '-'	7184:13:206526:206559	850049	0	True				
ANR	850626	AndExpression	input [ 1 ] != '?' && input [ 1 ] != '-'		850049	0		&&			
ANR	850627	EqualityExpression	input [ 1 ] != '?'		850049	0		!=			
ANR	850628	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850629	Identifier	input		850049	0					
ANR	850630	PrimaryExpression	1		850049	1					
ANR	850631	PrimaryExpression	'?'		850049	1					
ANR	850632	EqualityExpression	input [ 1 ] != '-'		850049	1		!=			
ANR	850633	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850634	Identifier	input		850049	0					
ANR	850635	PrimaryExpression	1		850049	1					
ANR	850636	PrimaryExpression	'-'		850049	1					
ANR	850637	CompoundStatement		78:49:2327:2327	850049	1					
ANR	850638	ExpressionStatement	"eprintf ( ""|ERROR| Usage: ahi [base]\\n"" )"	7185:3:206567:206606	850049	0	True				
ANR	850639	CallExpression	"eprintf ( ""|ERROR| Usage: ahi [base]\\n"" )"		850049	0					
ANR	850640	Callee	eprintf		850049	0					
ANR	850641	Identifier	eprintf		850049	0					
ANR	850642	ArgumentList	"""|ERROR| Usage: ahi [base]\\n"""		850049	1					
ANR	850643	Argument	"""|ERROR| Usage: ahi [base]\\n"""		850049	0					
ANR	850644	PrimaryExpression	"""|ERROR| Usage: ahi [base]\\n"""		850049	0					
ANR	850645	BreakStatement	break ;	7187:2:206614:206619	850049	18	True				
ANR	850646	Label	case 'h' :	7188:1:206622:206630	850049	19	True				
ANR	850647	IfStatement	if ( input [ 1 ] == '-' )		850049	20					
ANR	850648	Condition	input [ 1 ] == '-'	7189:6:206647:206661	850049	0	True				
ANR	850649	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	850650	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850651	Identifier	input		850049	0					
ANR	850652	PrimaryExpression	1		850049	1					
ANR	850653	PrimaryExpression	'-'		850049	1					
ANR	850654	CompoundStatement		83:23:2429:2429	850049	1					
ANR	850655	ExpressionStatement	"r_anal_hint_unset_high ( core -> anal , core -> offset )"	7190:3:206669:206718	850049	0	True				
ANR	850656	CallExpression	"r_anal_hint_unset_high ( core -> anal , core -> offset )"		850049	0					
ANR	850657	Callee	r_anal_hint_unset_high		850049	0					
ANR	850658	Identifier	r_anal_hint_unset_high		850049	0					
ANR	850659	ArgumentList	core -> anal		850049	1					
ANR	850660	Argument	core -> anal		850049	0					
ANR	850661	PtrMemberAccess	core -> anal		850049	0					
ANR	850662	Identifier	core		850049	0					
ANR	850663	Identifier	anal		850049	1					
ANR	850664	Argument	core -> offset		850049	1					
ANR	850665	PtrMemberAccess	core -> offset		850049	0					
ANR	850666	Identifier	core		850049	0					
ANR	850667	Identifier	offset		850049	1					
ANR	850668	ElseStatement	else		850049	0					
ANR	850669	IfStatement	if ( input [ 1 ] == ' ' )		850049	0					
ANR	850670	Condition	input [ 1 ] == ' '	7191:13:206733:206747	850049	0	True				
ANR	850671	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	850672	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850673	Identifier	input		850049	0					
ANR	850674	PrimaryExpression	1		850049	1					
ANR	850675	PrimaryExpression	' '		850049	1					
ANR	850676	CompoundStatement		85:30:2515:2515	850049	1					
ANR	850677	ExpressionStatement	"r_anal_hint_set_high ( core -> anal , r_num_math ( core -> num , input + 1 ) )"	7192:3:206755:206823	850049	0	True				
ANR	850678	CallExpression	"r_anal_hint_set_high ( core -> anal , r_num_math ( core -> num , input + 1 ) )"		850049	0					
ANR	850679	Callee	r_anal_hint_set_high		850049	0					
ANR	850680	Identifier	r_anal_hint_set_high		850049	0					
ANR	850681	ArgumentList	core -> anal		850049	1					
ANR	850682	Argument	core -> anal		850049	0					
ANR	850683	PtrMemberAccess	core -> anal		850049	0					
ANR	850684	Identifier	core		850049	0					
ANR	850685	Identifier	anal		850049	1					
ANR	850686	Argument	"r_num_math ( core -> num , input + 1 )"		850049	1					
ANR	850687	CallExpression	"r_num_math ( core -> num , input + 1 )"		850049	0					
ANR	850688	Callee	r_num_math		850049	0					
ANR	850689	Identifier	r_num_math		850049	0					
ANR	850690	ArgumentList	core -> num		850049	1					
ANR	850691	Argument	core -> num		850049	0					
ANR	850692	PtrMemberAccess	core -> num		850049	0					
ANR	850693	Identifier	core		850049	0					
ANR	850694	Identifier	num		850049	1					
ANR	850695	Argument	input + 1		850049	1					
ANR	850696	AdditiveExpression	input + 1		850049	0		+			
ANR	850697	Identifier	input		850049	0					
ANR	850698	PrimaryExpression	1		850049	1					
ANR	850699	ElseStatement	else		850049	0					
ANR	850700	CompoundStatement		87:9:2599:2599	850049	0					
ANR	850701	ExpressionStatement	"r_anal_hint_set_high ( core -> anal , core -> offset )"	7194:3:206839:206886	850049	0	True				
ANR	850702	CallExpression	"r_anal_hint_set_high ( core -> anal , core -> offset )"		850049	0					
ANR	850703	Callee	r_anal_hint_set_high		850049	0					
ANR	850704	Identifier	r_anal_hint_set_high		850049	0					
ANR	850705	ArgumentList	core -> anal		850049	1					
ANR	850706	Argument	core -> anal		850049	0					
ANR	850707	PtrMemberAccess	core -> anal		850049	0					
ANR	850708	Identifier	core		850049	0					
ANR	850709	Identifier	anal		850049	1					
ANR	850710	Argument	core -> offset		850049	1					
ANR	850711	PtrMemberAccess	core -> offset		850049	0					
ANR	850712	Identifier	core		850049	0					
ANR	850713	Identifier	offset		850049	1					
ANR	850714	BreakStatement	break ;	7196:2:206894:206899	850049	21	True				
ANR	850715	Label	case 'c' :	7197:1:206902:206910	850049	22	True				
ANR	850716	IfStatement	if ( input [ 1 ] == ' ' )		850049	23					
ANR	850717	Condition	input [ 1 ] == ' '	7198:6:206927:206941	850049	0	True				
ANR	850718	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	850719	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850720	Identifier	input		850049	0					
ANR	850721	PrimaryExpression	1		850049	1					
ANR	850722	PrimaryExpression	' '		850049	1					
ANR	850723	CompoundStatement		92:23:2709:2709	850049	1					
ANR	850724	ExpressionStatement	"r_anal_hint_set_jump ( core -> anal , core -> offset , r_num_math ( core -> num , input + 1 ) )"	7199:3:206949:207040	850049	0	True				
ANR	850725	CallExpression	"r_anal_hint_set_jump ( core -> anal , core -> offset , r_num_math ( core -> num , input + 1 ) )"		850049	0					
ANR	850726	Callee	r_anal_hint_set_jump		850049	0					
ANR	850727	Identifier	r_anal_hint_set_jump		850049	0					
ANR	850728	ArgumentList	core -> anal		850049	1					
ANR	850729	Argument	core -> anal		850049	0					
ANR	850730	PtrMemberAccess	core -> anal		850049	0					
ANR	850731	Identifier	core		850049	0					
ANR	850732	Identifier	anal		850049	1					
ANR	850733	Argument	core -> offset		850049	1					
ANR	850734	PtrMemberAccess	core -> offset		850049	0					
ANR	850735	Identifier	core		850049	0					
ANR	850736	Identifier	offset		850049	1					
ANR	850737	Argument	"r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	850738	CallExpression	"r_num_math ( core -> num , input + 1 )"		850049	0					
ANR	850739	Callee	r_num_math		850049	0					
ANR	850740	Identifier	r_num_math		850049	0					
ANR	850741	ArgumentList	core -> num		850049	1					
ANR	850742	Argument	core -> num		850049	0					
ANR	850743	PtrMemberAccess	core -> num		850049	0					
ANR	850744	Identifier	core		850049	0					
ANR	850745	Identifier	num		850049	1					
ANR	850746	Argument	input + 1		850049	1					
ANR	850747	AdditiveExpression	input + 1		850049	0		+			
ANR	850748	Identifier	input		850049	0					
ANR	850749	PrimaryExpression	1		850049	1					
ANR	850750	ElseStatement	else		850049	0					
ANR	850751	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	850752	Condition	input [ 1 ] == '-'	7202:13:207055:207069	850049	0	True				
ANR	850753	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	850754	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850755	Identifier	input		850049	0					
ANR	850756	PrimaryExpression	1		850049	1					
ANR	850757	PrimaryExpression	'-'		850049	1					
ANR	850758	CompoundStatement		96:30:2837:2837	850049	1					
ANR	850759	ExpressionStatement	"r_anal_hint_unset_jump ( core -> anal , core -> offset )"	7203:3:207077:207126	850049	0	True				
ANR	850760	CallExpression	"r_anal_hint_unset_jump ( core -> anal , core -> offset )"		850049	0					
ANR	850761	Callee	r_anal_hint_unset_jump		850049	0					
ANR	850762	Identifier	r_anal_hint_unset_jump		850049	0					
ANR	850763	ArgumentList	core -> anal		850049	1					
ANR	850764	Argument	core -> anal		850049	0					
ANR	850765	PtrMemberAccess	core -> anal		850049	0					
ANR	850766	Identifier	core		850049	0					
ANR	850767	Identifier	anal		850049	1					
ANR	850768	Argument	core -> offset		850049	1					
ANR	850769	PtrMemberAccess	core -> offset		850049	0					
ANR	850770	Identifier	core		850049	0					
ANR	850771	Identifier	offset		850049	1					
ANR	850772	BreakStatement	break ;	7205:2:207134:207139	850049	24	True				
ANR	850773	Label	case 'f' :	7206:1:207142:207150	850049	25	True				
ANR	850774	IfStatement	if ( input [ 1 ] == ' ' )		850049	26					
ANR	850775	Condition	input [ 1 ] == ' '	7207:6:207167:207181	850049	0	True				
ANR	850776	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	850777	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850778	Identifier	input		850049	0					
ANR	850779	PrimaryExpression	1		850049	1					
ANR	850780	PrimaryExpression	' '		850049	1					
ANR	850781	CompoundStatement		101:23:2949:2949	850049	1					
ANR	850782	ExpressionStatement	"r_anal_hint_set_fail ( core -> anal , core -> offset , r_num_math ( core -> num , input + 1 ) )"	7208:3:207189:207280	850049	0	True				
ANR	850783	CallExpression	"r_anal_hint_set_fail ( core -> anal , core -> offset , r_num_math ( core -> num , input + 1 ) )"		850049	0					
ANR	850784	Callee	r_anal_hint_set_fail		850049	0					
ANR	850785	Identifier	r_anal_hint_set_fail		850049	0					
ANR	850786	ArgumentList	core -> anal		850049	1					
ANR	850787	Argument	core -> anal		850049	0					
ANR	850788	PtrMemberAccess	core -> anal		850049	0					
ANR	850789	Identifier	core		850049	0					
ANR	850790	Identifier	anal		850049	1					
ANR	850791	Argument	core -> offset		850049	1					
ANR	850792	PtrMemberAccess	core -> offset		850049	0					
ANR	850793	Identifier	core		850049	0					
ANR	850794	Identifier	offset		850049	1					
ANR	850795	Argument	"r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	850796	CallExpression	"r_num_math ( core -> num , input + 1 )"		850049	0					
ANR	850797	Callee	r_num_math		850049	0					
ANR	850798	Identifier	r_num_math		850049	0					
ANR	850799	ArgumentList	core -> num		850049	1					
ANR	850800	Argument	core -> num		850049	0					
ANR	850801	PtrMemberAccess	core -> num		850049	0					
ANR	850802	Identifier	core		850049	0					
ANR	850803	Identifier	num		850049	1					
ANR	850804	Argument	input + 1		850049	1					
ANR	850805	AdditiveExpression	input + 1		850049	0		+			
ANR	850806	Identifier	input		850049	0					
ANR	850807	PrimaryExpression	1		850049	1					
ANR	850808	ElseStatement	else		850049	0					
ANR	850809	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	850810	Condition	input [ 1 ] == '-'	7211:13:207295:207309	850049	0	True				
ANR	850811	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	850812	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850813	Identifier	input		850049	0					
ANR	850814	PrimaryExpression	1		850049	1					
ANR	850815	PrimaryExpression	'-'		850049	1					
ANR	850816	CompoundStatement		105:30:3077:3077	850049	1					
ANR	850817	ExpressionStatement	"r_anal_hint_unset_fail ( core -> anal , core -> offset )"	7212:3:207317:207366	850049	0	True				
ANR	850818	CallExpression	"r_anal_hint_unset_fail ( core -> anal , core -> offset )"		850049	0					
ANR	850819	Callee	r_anal_hint_unset_fail		850049	0					
ANR	850820	Identifier	r_anal_hint_unset_fail		850049	0					
ANR	850821	ArgumentList	core -> anal		850049	1					
ANR	850822	Argument	core -> anal		850049	0					
ANR	850823	PtrMemberAccess	core -> anal		850049	0					
ANR	850824	Identifier	core		850049	0					
ANR	850825	Identifier	anal		850049	1					
ANR	850826	Argument	core -> offset		850049	1					
ANR	850827	PtrMemberAccess	core -> offset		850049	0					
ANR	850828	Identifier	core		850049	0					
ANR	850829	Identifier	offset		850049	1					
ANR	850830	BreakStatement	break ;	7214:2:207374:207379	850049	27	True				
ANR	850831	Label	case 'F' :	7215:1:207382:207390	850049	28	True				
ANR	850832	IfStatement	if ( input [ 1 ] == ' ' )		850049	29					
ANR	850833	Condition	input [ 1 ] == ' '	7216:6:207427:207441	850049	0	True				
ANR	850834	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	850835	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850836	Identifier	input		850049	0					
ANR	850837	PrimaryExpression	1		850049	1					
ANR	850838	PrimaryExpression	' '		850049	1					
ANR	850839	CompoundStatement		110:23:3209:3209	850049	1					
ANR	850840	ExpressionStatement	"r_anal_hint_set_stackframe ( core -> anal , core -> offset , r_num_math ( core -> num , input + 1 ) )"	7217:3:207449:207546	850049	0	True				
ANR	850841	CallExpression	"r_anal_hint_set_stackframe ( core -> anal , core -> offset , r_num_math ( core -> num , input + 1 ) )"		850049	0					
ANR	850842	Callee	r_anal_hint_set_stackframe		850049	0					
ANR	850843	Identifier	r_anal_hint_set_stackframe		850049	0					
ANR	850844	ArgumentList	core -> anal		850049	1					
ANR	850845	Argument	core -> anal		850049	0					
ANR	850846	PtrMemberAccess	core -> anal		850049	0					
ANR	850847	Identifier	core		850049	0					
ANR	850848	Identifier	anal		850049	1					
ANR	850849	Argument	core -> offset		850049	1					
ANR	850850	PtrMemberAccess	core -> offset		850049	0					
ANR	850851	Identifier	core		850049	0					
ANR	850852	Identifier	offset		850049	1					
ANR	850853	Argument	"r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	850854	CallExpression	"r_num_math ( core -> num , input + 1 )"		850049	0					
ANR	850855	Callee	r_num_math		850049	0					
ANR	850856	Identifier	r_num_math		850049	0					
ANR	850857	ArgumentList	core -> num		850049	1					
ANR	850858	Argument	core -> num		850049	0					
ANR	850859	PtrMemberAccess	core -> num		850049	0					
ANR	850860	Identifier	core		850049	0					
ANR	850861	Identifier	num		850049	1					
ANR	850862	Argument	input + 1		850049	1					
ANR	850863	AdditiveExpression	input + 1		850049	0		+			
ANR	850864	Identifier	input		850049	0					
ANR	850865	PrimaryExpression	1		850049	1					
ANR	850866	ElseStatement	else		850049	0					
ANR	850867	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	850868	Condition	input [ 1 ] == '-'	7220:13:207561:207575	850049	0	True				
ANR	850869	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	850870	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850871	Identifier	input		850049	0					
ANR	850872	PrimaryExpression	1		850049	1					
ANR	850873	PrimaryExpression	'-'		850049	1					
ANR	850874	CompoundStatement		114:30:3343:3343	850049	1					
ANR	850875	ExpressionStatement	"r_anal_hint_unset_stackframe ( core -> anal , core -> offset )"	7221:3:207583:207638	850049	0	True				
ANR	850876	CallExpression	"r_anal_hint_unset_stackframe ( core -> anal , core -> offset )"		850049	0					
ANR	850877	Callee	r_anal_hint_unset_stackframe		850049	0					
ANR	850878	Identifier	r_anal_hint_unset_stackframe		850049	0					
ANR	850879	ArgumentList	core -> anal		850049	1					
ANR	850880	Argument	core -> anal		850049	0					
ANR	850881	PtrMemberAccess	core -> anal		850049	0					
ANR	850882	Identifier	core		850049	0					
ANR	850883	Identifier	anal		850049	1					
ANR	850884	Argument	core -> offset		850049	1					
ANR	850885	PtrMemberAccess	core -> offset		850049	0					
ANR	850886	Identifier	core		850049	0					
ANR	850887	Identifier	offset		850049	1					
ANR	850888	BreakStatement	break ;	7223:2:207646:207651	850049	30	True				
ANR	850889	Label	case 's' :	7224:1:207654:207662	850049	31	True				
ANR	850890	IfStatement	if ( input [ 1 ] == ' ' )		850049	32					
ANR	850891	Condition	input [ 1 ] == ' '	7225:6:207704:207718	850049	0	True				
ANR	850892	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	850893	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850894	Identifier	input		850049	0					
ANR	850895	PrimaryExpression	1		850049	1					
ANR	850896	PrimaryExpression	' '		850049	1					
ANR	850897	CompoundStatement		119:23:3486:3486	850049	1					
ANR	850898	ExpressionStatement	"r_anal_hint_set_size ( core -> anal , core -> offset , atoi ( input + 1 ) )"	7226:3:207726:207791	850049	0	True				
ANR	850899	CallExpression	"r_anal_hint_set_size ( core -> anal , core -> offset , atoi ( input + 1 ) )"		850049	0					
ANR	850900	Callee	r_anal_hint_set_size		850049	0					
ANR	850901	Identifier	r_anal_hint_set_size		850049	0					
ANR	850902	ArgumentList	core -> anal		850049	1					
ANR	850903	Argument	core -> anal		850049	0					
ANR	850904	PtrMemberAccess	core -> anal		850049	0					
ANR	850905	Identifier	core		850049	0					
ANR	850906	Identifier	anal		850049	1					
ANR	850907	Argument	core -> offset		850049	1					
ANR	850908	PtrMemberAccess	core -> offset		850049	0					
ANR	850909	Identifier	core		850049	0					
ANR	850910	Identifier	offset		850049	1					
ANR	850911	Argument	atoi ( input + 1 )		850049	2					
ANR	850912	CallExpression	atoi ( input + 1 )		850049	0					
ANR	850913	Callee	atoi		850049	0					
ANR	850914	Identifier	atoi		850049	0					
ANR	850915	ArgumentList	input + 1		850049	1					
ANR	850916	Argument	input + 1		850049	0					
ANR	850917	AdditiveExpression	input + 1		850049	0		+			
ANR	850918	Identifier	input		850049	0					
ANR	850919	PrimaryExpression	1		850049	1					
ANR	850920	ElseStatement	else		850049	0					
ANR	850921	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	850922	Condition	input [ 1 ] == '-'	7227:13:207806:207820	850049	0	True				
ANR	850923	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	850924	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850925	Identifier	input		850049	0					
ANR	850926	PrimaryExpression	1		850049	1					
ANR	850927	PrimaryExpression	'-'		850049	1					
ANR	850928	CompoundStatement		121:30:3588:3588	850049	1					
ANR	850929	ExpressionStatement	"r_anal_hint_unset_size ( core -> anal , core -> offset )"	7228:3:207828:207877	850049	0	True				
ANR	850930	CallExpression	"r_anal_hint_unset_size ( core -> anal , core -> offset )"		850049	0					
ANR	850931	Callee	r_anal_hint_unset_size		850049	0					
ANR	850932	Identifier	r_anal_hint_unset_size		850049	0					
ANR	850933	ArgumentList	core -> anal		850049	1					
ANR	850934	Argument	core -> anal		850049	0					
ANR	850935	PtrMemberAccess	core -> anal		850049	0					
ANR	850936	Identifier	core		850049	0					
ANR	850937	Identifier	anal		850049	1					
ANR	850938	Argument	core -> offset		850049	1					
ANR	850939	PtrMemberAccess	core -> offset		850049	0					
ANR	850940	Identifier	core		850049	0					
ANR	850941	Identifier	offset		850049	1					
ANR	850942	ElseStatement	else		850049	0					
ANR	850943	CompoundStatement		123:9:3653:3653	850049	0					
ANR	850944	ExpressionStatement	"eprintf ( ""Usage: ahs 16\\n"" )"	7230:3:207893:207920	850049	0	True				
ANR	850945	CallExpression	"eprintf ( ""Usage: ahs 16\\n"" )"		850049	0					
ANR	850946	Callee	eprintf		850049	0					
ANR	850947	Identifier	eprintf		850049	0					
ANR	850948	ArgumentList	"""Usage: ahs 16\\n"""		850049	1					
ANR	850949	Argument	"""Usage: ahs 16\\n"""		850049	0					
ANR	850950	PrimaryExpression	"""Usage: ahs 16\\n"""		850049	0					
ANR	850951	BreakStatement	break ;	7232:2:207928:207933	850049	33	True				
ANR	850952	Label	case 'S' :	7233:1:207936:207944	850049	34	True				
ANR	850953	IfStatement	if ( input [ 1 ] == ' ' )		850049	35					
ANR	850954	Condition	input [ 1 ] == ' '	7234:6:207976:207990	850049	0	True				
ANR	850955	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	850956	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850957	Identifier	input		850049	0					
ANR	850958	PrimaryExpression	1		850049	1					
ANR	850959	PrimaryExpression	' '		850049	1					
ANR	850960	CompoundStatement		128:23:3758:3758	850049	1					
ANR	850961	ExpressionStatement	"r_anal_hint_set_syntax ( core -> anal , core -> offset , input + 2 )"	7235:3:207998:208058	850049	0	True				
ANR	850962	CallExpression	"r_anal_hint_set_syntax ( core -> anal , core -> offset , input + 2 )"		850049	0					
ANR	850963	Callee	r_anal_hint_set_syntax		850049	0					
ANR	850964	Identifier	r_anal_hint_set_syntax		850049	0					
ANR	850965	ArgumentList	core -> anal		850049	1					
ANR	850966	Argument	core -> anal		850049	0					
ANR	850967	PtrMemberAccess	core -> anal		850049	0					
ANR	850968	Identifier	core		850049	0					
ANR	850969	Identifier	anal		850049	1					
ANR	850970	Argument	core -> offset		850049	1					
ANR	850971	PtrMemberAccess	core -> offset		850049	0					
ANR	850972	Identifier	core		850049	0					
ANR	850973	Identifier	offset		850049	1					
ANR	850974	Argument	input + 2		850049	2					
ANR	850975	AdditiveExpression	input + 2		850049	0		+			
ANR	850976	Identifier	input		850049	0					
ANR	850977	PrimaryExpression	2		850049	1					
ANR	850978	ElseStatement	else		850049	0					
ANR	850979	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	850980	Condition	input [ 1 ] == '-'	7236:13:208073:208087	850049	0	True				
ANR	850981	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	850982	ArrayIndexing	input [ 1 ]		850049	0					
ANR	850983	Identifier	input		850049	0					
ANR	850984	PrimaryExpression	1		850049	1					
ANR	850985	PrimaryExpression	'-'		850049	1					
ANR	850986	CompoundStatement		130:30:3855:3855	850049	1					
ANR	850987	ExpressionStatement	"r_anal_hint_unset_syntax ( core -> anal , core -> offset )"	7237:3:208095:208146	850049	0	True				
ANR	850988	CallExpression	"r_anal_hint_unset_syntax ( core -> anal , core -> offset )"		850049	0					
ANR	850989	Callee	r_anal_hint_unset_syntax		850049	0					
ANR	850990	Identifier	r_anal_hint_unset_syntax		850049	0					
ANR	850991	ArgumentList	core -> anal		850049	1					
ANR	850992	Argument	core -> anal		850049	0					
ANR	850993	PtrMemberAccess	core -> anal		850049	0					
ANR	850994	Identifier	core		850049	0					
ANR	850995	Identifier	anal		850049	1					
ANR	850996	Argument	core -> offset		850049	1					
ANR	850997	PtrMemberAccess	core -> offset		850049	0					
ANR	850998	Identifier	core		850049	0					
ANR	850999	Identifier	offset		850049	1					
ANR	851000	ElseStatement	else		850049	0					
ANR	851001	CompoundStatement		132:9:3922:3922	850049	0					
ANR	851002	ExpressionStatement	"eprintf ( ""Usage: ahS att\\n"" )"	7239:3:208162:208190	850049	0	True				
ANR	851003	CallExpression	"eprintf ( ""Usage: ahS att\\n"" )"		850049	0					
ANR	851004	Callee	eprintf		850049	0					
ANR	851005	Identifier	eprintf		850049	0					
ANR	851006	ArgumentList	"""Usage: ahS att\\n"""		850049	1					
ANR	851007	Argument	"""Usage: ahS att\\n"""		850049	0					
ANR	851008	PrimaryExpression	"""Usage: ahS att\\n"""		850049	0					
ANR	851009	BreakStatement	break ;	7241:2:208198:208203	850049	36	True				
ANR	851010	Label	case 'o' :	7242:1:208206:208214	850049	37	True				
ANR	851011	IfStatement	if ( input [ 1 ] == ' ' )		850049	38					
ANR	851012	Condition	input [ 1 ] == ' '	7243:6:208249:208263	850049	0	True				
ANR	851013	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	851014	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851015	Identifier	input		850049	0					
ANR	851016	PrimaryExpression	1		850049	1					
ANR	851017	PrimaryExpression	' '		850049	1					
ANR	851018	CompoundStatement		137:23:4031:4031	850049	1					
ANR	851019	ExpressionStatement	"r_anal_hint_set_opcode ( core -> anal , core -> offset , input + 2 )"	7244:3:208271:208331	850049	0	True				
ANR	851020	CallExpression	"r_anal_hint_set_opcode ( core -> anal , core -> offset , input + 2 )"		850049	0					
ANR	851021	Callee	r_anal_hint_set_opcode		850049	0					
ANR	851022	Identifier	r_anal_hint_set_opcode		850049	0					
ANR	851023	ArgumentList	core -> anal		850049	1					
ANR	851024	Argument	core -> anal		850049	0					
ANR	851025	PtrMemberAccess	core -> anal		850049	0					
ANR	851026	Identifier	core		850049	0					
ANR	851027	Identifier	anal		850049	1					
ANR	851028	Argument	core -> offset		850049	1					
ANR	851029	PtrMemberAccess	core -> offset		850049	0					
ANR	851030	Identifier	core		850049	0					
ANR	851031	Identifier	offset		850049	1					
ANR	851032	Argument	input + 2		850049	2					
ANR	851033	AdditiveExpression	input + 2		850049	0		+			
ANR	851034	Identifier	input		850049	0					
ANR	851035	PrimaryExpression	2		850049	1					
ANR	851036	ElseStatement	else		850049	0					
ANR	851037	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	851038	Condition	input [ 1 ] == '-'	7245:13:208346:208360	850049	0	True				
ANR	851039	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	851040	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851041	Identifier	input		850049	0					
ANR	851042	PrimaryExpression	1		850049	1					
ANR	851043	PrimaryExpression	'-'		850049	1					
ANR	851044	CompoundStatement		139:30:4128:4128	850049	1					
ANR	851045	ExpressionStatement	"r_anal_hint_unset_opcode ( core -> anal , core -> offset )"	7246:3:208368:208419	850049	0	True				
ANR	851046	CallExpression	"r_anal_hint_unset_opcode ( core -> anal , core -> offset )"		850049	0					
ANR	851047	Callee	r_anal_hint_unset_opcode		850049	0					
ANR	851048	Identifier	r_anal_hint_unset_opcode		850049	0					
ANR	851049	ArgumentList	core -> anal		850049	1					
ANR	851050	Argument	core -> anal		850049	0					
ANR	851051	PtrMemberAccess	core -> anal		850049	0					
ANR	851052	Identifier	core		850049	0					
ANR	851053	Identifier	anal		850049	1					
ANR	851054	Argument	core -> offset		850049	1					
ANR	851055	PtrMemberAccess	core -> offset		850049	0					
ANR	851056	Identifier	core		850049	0					
ANR	851057	Identifier	offset		850049	1					
ANR	851058	ElseStatement	else		850049	0					
ANR	851059	CompoundStatement		141:9:4195:4195	850049	0					
ANR	851060	ExpressionStatement	"eprintf ( ""Usage: aho popall\\n"" )"	7248:3:208435:208466	850049	0	True				
ANR	851061	CallExpression	"eprintf ( ""Usage: aho popall\\n"" )"		850049	0					
ANR	851062	Callee	eprintf		850049	0					
ANR	851063	Identifier	eprintf		850049	0					
ANR	851064	ArgumentList	"""Usage: aho popall\\n"""		850049	1					
ANR	851065	Argument	"""Usage: aho popall\\n"""		850049	0					
ANR	851066	PrimaryExpression	"""Usage: aho popall\\n"""		850049	0					
ANR	851067	BreakStatement	break ;	7250:2:208474:208479	850049	39	True				
ANR	851068	Label	case 'e' :	7251:1:208482:208490	850049	40	True				
ANR	851069	IfStatement	if ( input [ 1 ] == ' ' )		850049	41					
ANR	851070	Condition	input [ 1 ] == ' '	7252:6:208523:208537	850049	0	True				
ANR	851071	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	851072	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851073	Identifier	input		850049	0					
ANR	851074	PrimaryExpression	1		850049	1					
ANR	851075	PrimaryExpression	' '		850049	1					
ANR	851076	CompoundStatement		146:23:4305:4305	850049	1					
ANR	851077	ExpressionStatement	"r_anal_hint_set_esil ( core -> anal , core -> offset , input + 2 )"	7253:3:208545:208603	850049	0	True				
ANR	851078	CallExpression	"r_anal_hint_set_esil ( core -> anal , core -> offset , input + 2 )"		850049	0					
ANR	851079	Callee	r_anal_hint_set_esil		850049	0					
ANR	851080	Identifier	r_anal_hint_set_esil		850049	0					
ANR	851081	ArgumentList	core -> anal		850049	1					
ANR	851082	Argument	core -> anal		850049	0					
ANR	851083	PtrMemberAccess	core -> anal		850049	0					
ANR	851084	Identifier	core		850049	0					
ANR	851085	Identifier	anal		850049	1					
ANR	851086	Argument	core -> offset		850049	1					
ANR	851087	PtrMemberAccess	core -> offset		850049	0					
ANR	851088	Identifier	core		850049	0					
ANR	851089	Identifier	offset		850049	1					
ANR	851090	Argument	input + 2		850049	2					
ANR	851091	AdditiveExpression	input + 2		850049	0		+			
ANR	851092	Identifier	input		850049	0					
ANR	851093	PrimaryExpression	2		850049	1					
ANR	851094	ElseStatement	else		850049	0					
ANR	851095	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	851096	Condition	input [ 1 ] == '-'	7254:13:208618:208632	850049	0	True				
ANR	851097	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	851098	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851099	Identifier	input		850049	0					
ANR	851100	PrimaryExpression	1		850049	1					
ANR	851101	PrimaryExpression	'-'		850049	1					
ANR	851102	CompoundStatement		148:30:4400:4400	850049	1					
ANR	851103	ExpressionStatement	"r_anal_hint_unset_esil ( core -> anal , core -> offset )"	7255:3:208640:208689	850049	0	True				
ANR	851104	CallExpression	"r_anal_hint_unset_esil ( core -> anal , core -> offset )"		850049	0					
ANR	851105	Callee	r_anal_hint_unset_esil		850049	0					
ANR	851106	Identifier	r_anal_hint_unset_esil		850049	0					
ANR	851107	ArgumentList	core -> anal		850049	1					
ANR	851108	Argument	core -> anal		850049	0					
ANR	851109	PtrMemberAccess	core -> anal		850049	0					
ANR	851110	Identifier	core		850049	0					
ANR	851111	Identifier	anal		850049	1					
ANR	851112	Argument	core -> offset		850049	1					
ANR	851113	PtrMemberAccess	core -> offset		850049	0					
ANR	851114	Identifier	core		850049	0					
ANR	851115	Identifier	offset		850049	1					
ANR	851116	ElseStatement	else		850049	0					
ANR	851117	CompoundStatement		150:9:4465:4465	850049	0					
ANR	851118	ExpressionStatement	"eprintf ( ""Usage: ahe r0,pc,=\\n"" )"	7257:3:208705:208737	850049	0	True				
ANR	851119	CallExpression	"eprintf ( ""Usage: ahe r0,pc,=\\n"" )"		850049	0					
ANR	851120	Callee	eprintf		850049	0					
ANR	851121	Identifier	eprintf		850049	0					
ANR	851122	ArgumentList	"""Usage: ahe r0,pc,=\\n"""		850049	1					
ANR	851123	Argument	"""Usage: ahe r0,pc,=\\n"""		850049	0					
ANR	851124	PrimaryExpression	"""Usage: ahe r0,pc,=\\n"""		850049	0					
ANR	851125	BreakStatement	break ;	7259:2:208745:208750	850049	42	True				
ANR	851126	Label	case 'e' :	7261:1:208759:208767	850049	43	True				
ANR	851127	IfStatement	if ( input [ 1 ] == ' ' )		850049	44					
ANR	851128	Condition	input [ 1 ] == ' '	7262:6:208789:208803	850049	0	True				
ANR	851129	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	851130	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851131	Identifier	input		850049	0					
ANR	851132	PrimaryExpression	1		850049	1					
ANR	851133	PrimaryExpression	' '		850049	1					
ANR	851134	CompoundStatement		156:23:4571:4571	850049	1					
ANR	851135	ExpressionStatement	"r_anal_hint_set_opcode ( core -> anal , core -> offset , atoi ( input + 1 ) )"	7263:3:208811:208878	850049	0	True				
ANR	851136	CallExpression	"r_anal_hint_set_opcode ( core -> anal , core -> offset , atoi ( input + 1 ) )"		850049	0					
ANR	851137	Callee	r_anal_hint_set_opcode		850049	0					
ANR	851138	Identifier	r_anal_hint_set_opcode		850049	0					
ANR	851139	ArgumentList	core -> anal		850049	1					
ANR	851140	Argument	core -> anal		850049	0					
ANR	851141	PtrMemberAccess	core -> anal		850049	0					
ANR	851142	Identifier	core		850049	0					
ANR	851143	Identifier	anal		850049	1					
ANR	851144	Argument	core -> offset		850049	1					
ANR	851145	PtrMemberAccess	core -> offset		850049	0					
ANR	851146	Identifier	core		850049	0					
ANR	851147	Identifier	offset		850049	1					
ANR	851148	Argument	atoi ( input + 1 )		850049	2					
ANR	851149	CallExpression	atoi ( input + 1 )		850049	0					
ANR	851150	Callee	atoi		850049	0					
ANR	851151	Identifier	atoi		850049	0					
ANR	851152	ArgumentList	input + 1		850049	1					
ANR	851153	Argument	input + 1		850049	0					
ANR	851154	AdditiveExpression	input + 1		850049	0		+			
ANR	851155	Identifier	input		850049	0					
ANR	851156	PrimaryExpression	1		850049	1					
ANR	851157	ElseStatement	else		850049	0					
ANR	851158	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	851159	Condition	input [ 1 ] == '-'	7264:13:208893:208907	850049	0	True				
ANR	851160	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	851161	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851162	Identifier	input		850049	0					
ANR	851163	PrimaryExpression	1		850049	1					
ANR	851164	PrimaryExpression	'-'		850049	1					
ANR	851165	CompoundStatement		158:30:4675:4675	850049	1					
ANR	851166	ExpressionStatement	"r_anal_hint_unset_opcode ( core -> anal , core -> offset )"	7265:3:208915:208966	850049	0	True				
ANR	851167	CallExpression	"r_anal_hint_unset_opcode ( core -> anal , core -> offset )"		850049	0					
ANR	851168	Callee	r_anal_hint_unset_opcode		850049	0					
ANR	851169	Identifier	r_anal_hint_unset_opcode		850049	0					
ANR	851170	ArgumentList	core -> anal		850049	1					
ANR	851171	Argument	core -> anal		850049	0					
ANR	851172	PtrMemberAccess	core -> anal		850049	0					
ANR	851173	Identifier	core		850049	0					
ANR	851174	Identifier	anal		850049	1					
ANR	851175	Argument	core -> offset		850049	1					
ANR	851176	PtrMemberAccess	core -> offset		850049	0					
ANR	851177	Identifier	core		850049	0					
ANR	851178	Identifier	offset		850049	1					
ANR	851179	BreakStatement	break ;	7267:2:208974:208979	850049	45	True				
ANR	851180	Label	case 'p' :	7269:1:208989:208997	850049	46	True				
ANR	851181	IfStatement	if ( input [ 1 ] == ' ' )		850049	47					
ANR	851182	Condition	input [ 1 ] == ' '	7270:6:209014:209028	850049	0	True				
ANR	851183	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	851184	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851185	Identifier	input		850049	0					
ANR	851186	PrimaryExpression	1		850049	1					
ANR	851187	PrimaryExpression	' '		850049	1					
ANR	851188	CompoundStatement		164:23:4796:4796	850049	1					
ANR	851189	ExpressionStatement	"r_anal_hint_set_pointer ( core -> anal , core -> offset , r_num_math ( core -> num , input + 1 ) )"	7271:3:209036:209121	850049	0	True				
ANR	851190	CallExpression	"r_anal_hint_set_pointer ( core -> anal , core -> offset , r_num_math ( core -> num , input + 1 ) )"		850049	0					
ANR	851191	Callee	r_anal_hint_set_pointer		850049	0					
ANR	851192	Identifier	r_anal_hint_set_pointer		850049	0					
ANR	851193	ArgumentList	core -> anal		850049	1					
ANR	851194	Argument	core -> anal		850049	0					
ANR	851195	PtrMemberAccess	core -> anal		850049	0					
ANR	851196	Identifier	core		850049	0					
ANR	851197	Identifier	anal		850049	1					
ANR	851198	Argument	core -> offset		850049	1					
ANR	851199	PtrMemberAccess	core -> offset		850049	0					
ANR	851200	Identifier	core		850049	0					
ANR	851201	Identifier	offset		850049	1					
ANR	851202	Argument	"r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	851203	CallExpression	"r_num_math ( core -> num , input + 1 )"		850049	0					
ANR	851204	Callee	r_num_math		850049	0					
ANR	851205	Identifier	r_num_math		850049	0					
ANR	851206	ArgumentList	core -> num		850049	1					
ANR	851207	Argument	core -> num		850049	0					
ANR	851208	PtrMemberAccess	core -> num		850049	0					
ANR	851209	Identifier	core		850049	0					
ANR	851210	Identifier	num		850049	1					
ANR	851211	Argument	input + 1		850049	1					
ANR	851212	AdditiveExpression	input + 1		850049	0		+			
ANR	851213	Identifier	input		850049	0					
ANR	851214	PrimaryExpression	1		850049	1					
ANR	851215	ElseStatement	else		850049	0					
ANR	851216	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	851217	Condition	input [ 1 ] == '-'	7272:13:209136:209150	850049	0	True				
ANR	851218	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	851219	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851220	Identifier	input		850049	0					
ANR	851221	PrimaryExpression	1		850049	1					
ANR	851222	PrimaryExpression	'-'		850049	1					
ANR	851223	CompoundStatement		166:30:4918:4918	850049	1					
ANR	851224	ExpressionStatement	"r_anal_hint_unset_pointer ( core -> anal , core -> offset )"	7273:3:209168:209220	850049	0	True				
ANR	851225	CallExpression	"r_anal_hint_unset_pointer ( core -> anal , core -> offset )"		850049	0					
ANR	851226	Callee	r_anal_hint_unset_pointer		850049	0					
ANR	851227	Identifier	r_anal_hint_unset_pointer		850049	0					
ANR	851228	ArgumentList	core -> anal		850049	1					
ANR	851229	Argument	core -> anal		850049	0					
ANR	851230	PtrMemberAccess	core -> anal		850049	0					
ANR	851231	Identifier	core		850049	0					
ANR	851232	Identifier	anal		850049	1					
ANR	851233	Argument	core -> offset		850049	1					
ANR	851234	PtrMemberAccess	core -> offset		850049	0					
ANR	851235	Identifier	core		850049	0					
ANR	851236	Identifier	offset		850049	1					
ANR	851237	BreakStatement	break ;	7275:2:209228:209233	850049	48	True				
ANR	851238	Label	case 'r' :	7276:1:209236:209244	850049	49	True				
ANR	851239	IfStatement	if ( input [ 1 ] == ' ' )		850049	50					
ANR	851240	Condition	input [ 1 ] == ' '	7277:6:209261:209275	850049	0	True				
ANR	851241	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	851242	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851243	Identifier	input		850049	0					
ANR	851244	PrimaryExpression	1		850049	1					
ANR	851245	PrimaryExpression	' '		850049	1					
ANR	851246	CompoundStatement		171:23:5043:5043	850049	1					
ANR	851247	ExpressionStatement	"r_anal_hint_set_ret ( core -> anal , core -> offset , r_num_math ( core -> num , input + 1 ) )"	7278:3:209283:209364	850049	0	True				
ANR	851248	CallExpression	"r_anal_hint_set_ret ( core -> anal , core -> offset , r_num_math ( core -> num , input + 1 ) )"		850049	0					
ANR	851249	Callee	r_anal_hint_set_ret		850049	0					
ANR	851250	Identifier	r_anal_hint_set_ret		850049	0					
ANR	851251	ArgumentList	core -> anal		850049	1					
ANR	851252	Argument	core -> anal		850049	0					
ANR	851253	PtrMemberAccess	core -> anal		850049	0					
ANR	851254	Identifier	core		850049	0					
ANR	851255	Identifier	anal		850049	1					
ANR	851256	Argument	core -> offset		850049	1					
ANR	851257	PtrMemberAccess	core -> offset		850049	0					
ANR	851258	Identifier	core		850049	0					
ANR	851259	Identifier	offset		850049	1					
ANR	851260	Argument	"r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	851261	CallExpression	"r_num_math ( core -> num , input + 1 )"		850049	0					
ANR	851262	Callee	r_num_math		850049	0					
ANR	851263	Identifier	r_num_math		850049	0					
ANR	851264	ArgumentList	core -> num		850049	1					
ANR	851265	Argument	core -> num		850049	0					
ANR	851266	PtrMemberAccess	core -> num		850049	0					
ANR	851267	Identifier	core		850049	0					
ANR	851268	Identifier	num		850049	1					
ANR	851269	Argument	input + 1		850049	1					
ANR	851270	AdditiveExpression	input + 1		850049	0		+			
ANR	851271	Identifier	input		850049	0					
ANR	851272	PrimaryExpression	1		850049	1					
ANR	851273	ElseStatement	else		850049	0					
ANR	851274	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	851275	Condition	input [ 1 ] == '-'	7279:13:209379:209393	850049	0	True				
ANR	851276	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	851277	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851278	Identifier	input		850049	0					
ANR	851279	PrimaryExpression	1		850049	1					
ANR	851280	PrimaryExpression	'-'		850049	1					
ANR	851281	CompoundStatement		173:30:5161:5161	850049	1					
ANR	851282	ExpressionStatement	"r_anal_hint_unset_ret ( core -> anal , core -> offset )"	7280:3:209411:209459	850049	0	True				
ANR	851283	CallExpression	"r_anal_hint_unset_ret ( core -> anal , core -> offset )"		850049	0					
ANR	851284	Callee	r_anal_hint_unset_ret		850049	0					
ANR	851285	Identifier	r_anal_hint_unset_ret		850049	0					
ANR	851286	ArgumentList	core -> anal		850049	1					
ANR	851287	Argument	core -> anal		850049	0					
ANR	851288	PtrMemberAccess	core -> anal		850049	0					
ANR	851289	Identifier	core		850049	0					
ANR	851290	Identifier	anal		850049	1					
ANR	851291	Argument	core -> offset		850049	1					
ANR	851292	PtrMemberAccess	core -> offset		850049	0					
ANR	851293	Identifier	core		850049	0					
ANR	851294	Identifier	offset		850049	1					
ANR	851295	Label	case '*' :	7282:1:209466:209474	850049	51	True				
ANR	851296	Label	case 'j' :	7283:1:209486:209494	850049	52	True				
ANR	851297	Label	case '\\0' :	7284:1:209506:209515	850049	53	True				
ANR	851298	IfStatement	if ( input [ 0 ] && input [ 1 ] == ' ' )		850049	54					
ANR	851299	Condition	input [ 0 ] && input [ 1 ] == ' '	7285:6:209531:209557	850049	0	True				
ANR	851300	AndExpression	input [ 0 ] && input [ 1 ] == ' '		850049	0		&&			
ANR	851301	ArrayIndexing	input [ 0 ]		850049	0					
ANR	851302	Identifier	input		850049	0					
ANR	851303	PrimaryExpression	0		850049	1					
ANR	851304	EqualityExpression	input [ 1 ] == ' '		850049	1		==			
ANR	851305	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851306	Identifier	input		850049	0					
ANR	851307	PrimaryExpression	1		850049	1					
ANR	851308	PrimaryExpression	' '		850049	1					
ANR	851309	CompoundStatement		182:3:5407:5467	850049	1					
ANR	851310	IdentifierDeclStatement	char * ptr = strdup ( r_str_trim_ro ( input + 2 ) ) ;	7286:3:209565:209611	850049	0	True				
ANR	851311	IdentifierDecl	* ptr = strdup ( r_str_trim_ro ( input + 2 ) )		850049	0					
ANR	851312	IdentifierDeclType	char *		850049	0					
ANR	851313	Identifier	ptr		850049	1					
ANR	851314	AssignmentExpression	* ptr = strdup ( r_str_trim_ro ( input + 2 ) )		850049	2		=			
ANR	851315	Identifier	ptr		850049	0					
ANR	851316	CallExpression	strdup ( r_str_trim_ro ( input + 2 ) )		850049	1					
ANR	851317	Callee	strdup		850049	0					
ANR	851318	Identifier	strdup		850049	0					
ANR	851319	ArgumentList	r_str_trim_ro ( input + 2 )		850049	1					
ANR	851320	Argument	r_str_trim_ro ( input + 2 )		850049	0					
ANR	851321	CallExpression	r_str_trim_ro ( input + 2 )		850049	0					
ANR	851322	Callee	r_str_trim_ro		850049	0					
ANR	851323	Identifier	r_str_trim_ro		850049	0					
ANR	851324	ArgumentList	input + 2		850049	1					
ANR	851325	Argument	input + 2		850049	0					
ANR	851326	AdditiveExpression	input + 2		850049	0		+			
ANR	851327	Identifier	input		850049	0					
ANR	851328	PrimaryExpression	2		850049	1					
ANR	851329	ExpressionStatement	r_str_word_set0 ( ptr )	7287:3:209616:209637	850049	1	True				
ANR	851330	CallExpression	r_str_word_set0 ( ptr )		850049	0					
ANR	851331	Callee	r_str_word_set0		850049	0					
ANR	851332	Identifier	r_str_word_set0		850049	0					
ANR	851333	ArgumentList	ptr		850049	1					
ANR	851334	Argument	ptr		850049	0					
ANR	851335	Identifier	ptr		850049	0					
ANR	851336	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) ) ;"	7288:3:209642:209702	850049	2	True				
ANR	851337	IdentifierDecl	"addr = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		850049	0					
ANR	851338	IdentifierDeclType	ut64		850049	0					
ANR	851339	Identifier	addr		850049	1					
ANR	851340	AssignmentExpression	"addr = r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		850049	2		=			
ANR	851341	Identifier	addr		850049	0					
ANR	851342	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		850049	1					
ANR	851343	Callee	r_num_math		850049	0					
ANR	851344	Identifier	r_num_math		850049	0					
ANR	851345	ArgumentList	core -> num		850049	1					
ANR	851346	Argument	core -> num		850049	0					
ANR	851347	PtrMemberAccess	core -> num		850049	0					
ANR	851348	Identifier	core		850049	0					
ANR	851349	Identifier	num		850049	1					
ANR	851350	Argument	"r_str_word_get0 ( ptr , 0 )"		850049	1					
ANR	851351	CallExpression	"r_str_word_get0 ( ptr , 0 )"		850049	0					
ANR	851352	Callee	r_str_word_get0		850049	0					
ANR	851353	Identifier	r_str_word_get0		850049	0					
ANR	851354	ArgumentList	ptr		850049	1					
ANR	851355	Argument	ptr		850049	0					
ANR	851356	Identifier	ptr		850049	0					
ANR	851357	Argument	0		850049	1					
ANR	851358	PrimaryExpression	0		850049	0					
ANR	851359	ExpressionStatement	"r_core_anal_hint_print ( core -> anal , addr , input [ 0 ] )"	7289:3:209707:209758	850049	3	True				
ANR	851360	CallExpression	"r_core_anal_hint_print ( core -> anal , addr , input [ 0 ] )"		850049	0					
ANR	851361	Callee	r_core_anal_hint_print		850049	0					
ANR	851362	Identifier	r_core_anal_hint_print		850049	0					
ANR	851363	ArgumentList	core -> anal		850049	1					
ANR	851364	Argument	core -> anal		850049	0					
ANR	851365	PtrMemberAccess	core -> anal		850049	0					
ANR	851366	Identifier	core		850049	0					
ANR	851367	Identifier	anal		850049	1					
ANR	851368	Argument	addr		850049	1					
ANR	851369	Identifier	addr		850049	0					
ANR	851370	Argument	input [ 0 ]		850049	2					
ANR	851371	ArrayIndexing	input [ 0 ]		850049	0					
ANR	851372	Identifier	input		850049	0					
ANR	851373	PrimaryExpression	0		850049	1					
ANR	851374	ElseStatement	else		850049	0					
ANR	851375	CompoundStatement		184:9:5534:5534	850049	0					
ANR	851376	ExpressionStatement	"r_core_anal_hint_list ( core -> anal , input [ 0 ] )"	7291:3:209774:209818	850049	0	True				
ANR	851377	CallExpression	"r_core_anal_hint_list ( core -> anal , input [ 0 ] )"		850049	0					
ANR	851378	Callee	r_core_anal_hint_list		850049	0					
ANR	851379	Identifier	r_core_anal_hint_list		850049	0					
ANR	851380	ArgumentList	core -> anal		850049	1					
ANR	851381	Argument	core -> anal		850049	0					
ANR	851382	PtrMemberAccess	core -> anal		850049	0					
ANR	851383	Identifier	core		850049	0					
ANR	851384	Identifier	anal		850049	1					
ANR	851385	Argument	input [ 0 ]		850049	1					
ANR	851386	ArrayIndexing	input [ 0 ]		850049	0					
ANR	851387	Identifier	input		850049	0					
ANR	851388	PrimaryExpression	0		850049	1					
ANR	851389	BreakStatement	break ;	7293:2:209826:209831	850049	55	True				
ANR	851390	Label	case 'v' :	7294:1:209834:209842	850049	56	True				
ANR	851391	IfStatement	if ( input [ 1 ] == ' ' )		850049	57					
ANR	851392	Condition	input [ 1 ] == ' '	7295:6:209859:209873	850049	0	True				
ANR	851393	EqualityExpression	input [ 1 ] == ' '		850049	0		==			
ANR	851394	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851395	Identifier	input		850049	0					
ANR	851396	PrimaryExpression	1		850049	1					
ANR	851397	PrimaryExpression	' '		850049	1					
ANR	851398	CompoundStatement		189:23:5641:5641	850049	1					
ANR	851399	ExpressionStatement	"r_anal_hint_set_val ( core -> anal , core -> offset , r_num_math ( core -> num , input + 1 ) )"	7296:3:209881:209971	850049	0	True				
ANR	851400	CallExpression	"r_anal_hint_set_val ( core -> anal , core -> offset , r_num_math ( core -> num , input + 1 ) )"		850049	0					
ANR	851401	Callee	r_anal_hint_set_val		850049	0					
ANR	851402	Identifier	r_anal_hint_set_val		850049	0					
ANR	851403	ArgumentList	core -> anal		850049	1					
ANR	851404	Argument	core -> anal		850049	0					
ANR	851405	PtrMemberAccess	core -> anal		850049	0					
ANR	851406	Identifier	core		850049	0					
ANR	851407	Identifier	anal		850049	1					
ANR	851408	Argument	core -> offset		850049	1					
ANR	851409	PtrMemberAccess	core -> offset		850049	0					
ANR	851410	Identifier	core		850049	0					
ANR	851411	Identifier	offset		850049	1					
ANR	851412	Argument	"r_num_math ( core -> num , input + 1 )"		850049	2					
ANR	851413	CallExpression	"r_num_math ( core -> num , input + 1 )"		850049	0					
ANR	851414	Callee	r_num_math		850049	0					
ANR	851415	Identifier	r_num_math		850049	0					
ANR	851416	ArgumentList	core -> num		850049	1					
ANR	851417	Argument	core -> num		850049	0					
ANR	851418	PtrMemberAccess	core -> num		850049	0					
ANR	851419	Identifier	core		850049	0					
ANR	851420	Identifier	num		850049	1					
ANR	851421	Argument	input + 1		850049	1					
ANR	851422	AdditiveExpression	input + 1		850049	0		+			
ANR	851423	Identifier	input		850049	0					
ANR	851424	PrimaryExpression	1		850049	1					
ANR	851425	ElseStatement	else		850049	0					
ANR	851426	IfStatement	if ( input [ 1 ] == '-' )		850049	0					
ANR	851427	Condition	input [ 1 ] == '-'	7299:13:209986:210000	850049	0	True				
ANR	851428	EqualityExpression	input [ 1 ] == '-'		850049	0		==			
ANR	851429	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851430	Identifier	input		850049	0					
ANR	851431	PrimaryExpression	1		850049	1					
ANR	851432	PrimaryExpression	'-'		850049	1					
ANR	851433	CompoundStatement		193:30:5768:5768	850049	1					
ANR	851434	ExpressionStatement	"r_anal_hint_unset_val ( core -> anal , core -> offset )"	7300:3:210008:210056	850049	0	True				
ANR	851435	CallExpression	"r_anal_hint_unset_val ( core -> anal , core -> offset )"		850049	0					
ANR	851436	Callee	r_anal_hint_unset_val		850049	0					
ANR	851437	Identifier	r_anal_hint_unset_val		850049	0					
ANR	851438	ArgumentList	core -> anal		850049	1					
ANR	851439	Argument	core -> anal		850049	0					
ANR	851440	PtrMemberAccess	core -> anal		850049	0					
ANR	851441	Identifier	core		850049	0					
ANR	851442	Identifier	anal		850049	1					
ANR	851443	Argument	core -> offset		850049	1					
ANR	851444	PtrMemberAccess	core -> offset		850049	0					
ANR	851445	Identifier	core		850049	0					
ANR	851446	Identifier	offset		850049	1					
ANR	851447	BreakStatement	break ;	7302:2:210064:210069	850049	58	True				
ANR	851448	Label	case '-' :	7303:1:210072:210080	850049	59	True				
ANR	851449	IfStatement	if ( input [ 1 ] )		850049	60					
ANR	851450	Condition	input [ 1 ]	7304:6:210097:210104	850049	0	True				
ANR	851451	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851452	Identifier	input		850049	0					
ANR	851453	PrimaryExpression	1		850049	1					
ANR	851454	CompoundStatement		198:16:5872:5872	850049	1					
ANR	851455	IfStatement	if ( input [ 1 ] == '*' )		850049	0					
ANR	851456	Condition	input [ 1 ] == '*'	7305:7:210116:210130	850049	0	True				
ANR	851457	EqualityExpression	input [ 1 ] == '*'		850049	0		==			
ANR	851458	ArrayIndexing	input [ 1 ]		850049	0					
ANR	851459	Identifier	input		850049	0					
ANR	851460	PrimaryExpression	1		850049	1					
ANR	851461	PrimaryExpression	'*'		850049	1					
ANR	851462	CompoundStatement		199:24:5898:5898	850049	1					
ANR	851463	ExpressionStatement	r_anal_hint_clear ( core -> anal )	7306:4:210139:210169	850049	0	True				
ANR	851464	CallExpression	r_anal_hint_clear ( core -> anal )		850049	0					
ANR	851465	Callee	r_anal_hint_clear		850049	0					
ANR	851466	Identifier	r_anal_hint_clear		850049	0					
ANR	851467	ArgumentList	core -> anal		850049	1					
ANR	851468	Argument	core -> anal		850049	0					
ANR	851469	PtrMemberAccess	core -> anal		850049	0					
ANR	851470	Identifier	core		850049	0					
ANR	851471	Identifier	anal		850049	1					
ANR	851472	ElseStatement	else		850049	0					
ANR	851473	CompoundStatement		209:4:6158:6199	850049	0					
ANR	851474	IdentifierDeclStatement	char * ptr = strdup ( r_str_trim_ro ( input + 1 ) ) ;	7308:4:210187:210233	850049	0	True				
ANR	851475	IdentifierDecl	* ptr = strdup ( r_str_trim_ro ( input + 1 ) )		850049	0					
ANR	851476	IdentifierDeclType	char *		850049	0					
ANR	851477	Identifier	ptr		850049	1					
ANR	851478	AssignmentExpression	* ptr = strdup ( r_str_trim_ro ( input + 1 ) )		850049	2		=			
ANR	851479	Identifier	ptr		850049	0					
ANR	851480	CallExpression	strdup ( r_str_trim_ro ( input + 1 ) )		850049	1					
ANR	851481	Callee	strdup		850049	0					
ANR	851482	Identifier	strdup		850049	0					
ANR	851483	ArgumentList	r_str_trim_ro ( input + 1 )		850049	1					
ANR	851484	Argument	r_str_trim_ro ( input + 1 )		850049	0					
ANR	851485	CallExpression	r_str_trim_ro ( input + 1 )		850049	0					
ANR	851486	Callee	r_str_trim_ro		850049	0					
ANR	851487	Identifier	r_str_trim_ro		850049	0					
ANR	851488	ArgumentList	input + 1		850049	1					
ANR	851489	Argument	input + 1		850049	0					
ANR	851490	AdditiveExpression	input + 1		850049	0		+			
ANR	851491	Identifier	input		850049	0					
ANR	851492	PrimaryExpression	1		850049	1					
ANR	851493	IdentifierDeclStatement	ut64 addr ;	7309:4:210239:210248	850049	1	True				
ANR	851494	IdentifierDecl	addr		850049	0					
ANR	851495	IdentifierDeclType	ut64		850049	0					
ANR	851496	Identifier	addr		850049	1					
ANR	851497	IdentifierDeclStatement	int size = 1 ;	7310:4:210254:210266	850049	2	True				
ANR	851498	IdentifierDecl	size = 1		850049	0					
ANR	851499	IdentifierDeclType	int		850049	0					
ANR	851500	Identifier	size		850049	1					
ANR	851501	AssignmentExpression	size = 1		850049	2		=			
ANR	851502	Identifier	size		850049	0					
ANR	851503	PrimaryExpression	1		850049	1					
ANR	851504	IdentifierDeclStatement	int i = r_str_word_set0 ( ptr ) ;	7311:4:210272:210301	850049	3	True				
ANR	851505	IdentifierDecl	i = r_str_word_set0 ( ptr )		850049	0					
ANR	851506	IdentifierDeclType	int		850049	0					
ANR	851507	Identifier	i		850049	1					
ANR	851508	AssignmentExpression	i = r_str_word_set0 ( ptr )		850049	2		=			
ANR	851509	Identifier	i		850049	0					
ANR	851510	CallExpression	r_str_word_set0 ( ptr )		850049	1					
ANR	851511	Callee	r_str_word_set0		850049	0					
ANR	851512	Identifier	r_str_word_set0		850049	0					
ANR	851513	ArgumentList	ptr		850049	1					
ANR	851514	Argument	ptr		850049	0					
ANR	851515	Identifier	ptr		850049	0					
ANR	851516	IfStatement	if ( i == 2 )		850049	4					
ANR	851517	Condition	i == 2	7312:8:210311:210316	850049	0	True				
ANR	851518	EqualityExpression	i == 2		850049	0		==			
ANR	851519	Identifier	i		850049	0					
ANR	851520	PrimaryExpression	2		850049	1					
ANR	851521	CompoundStatement		206:16:6084:6084	850049	1					
ANR	851522	ExpressionStatement	"size = r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"	7313:5:210326:210381	850049	0	True				
ANR	851523	AssignmentExpression	"size = r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"		850049	0		=			
ANR	851524	Identifier	size		850049	0					
ANR	851525	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 1 ) )"		850049	1					
ANR	851526	Callee	r_num_math		850049	0					
ANR	851527	Identifier	r_num_math		850049	0					
ANR	851528	ArgumentList	core -> num		850049	1					
ANR	851529	Argument	core -> num		850049	0					
ANR	851530	PtrMemberAccess	core -> num		850049	0					
ANR	851531	Identifier	core		850049	0					
ANR	851532	Identifier	num		850049	1					
ANR	851533	Argument	"r_str_word_get0 ( ptr , 1 )"		850049	1					
ANR	851534	CallExpression	"r_str_word_get0 ( ptr , 1 )"		850049	0					
ANR	851535	Callee	r_str_word_get0		850049	0					
ANR	851536	Identifier	r_str_word_get0		850049	0					
ANR	851537	ArgumentList	ptr		850049	1					
ANR	851538	Argument	ptr		850049	0					
ANR	851539	Identifier	ptr		850049	0					
ANR	851540	Argument	1		850049	1					
ANR	851541	PrimaryExpression	1		850049	0					
ANR	851542	IdentifierDeclStatement	"const char * a0 = r_str_word_get0 ( ptr , 0 ) ;"	7315:4:210393:210434	850049	5	True				
ANR	851543	IdentifierDecl	"* a0 = r_str_word_get0 ( ptr , 0 )"		850049	0					
ANR	851544	IdentifierDeclType	const char *		850049	0					
ANR	851545	Identifier	a0		850049	1					
ANR	851546	AssignmentExpression	"* a0 = r_str_word_get0 ( ptr , 0 )"		850049	2		=			
ANR	851547	Identifier	a0		850049	0					
ANR	851548	CallExpression	"r_str_word_get0 ( ptr , 0 )"		850049	1					
ANR	851549	Callee	r_str_word_get0		850049	0					
ANR	851550	Identifier	r_str_word_get0		850049	0					
ANR	851551	ArgumentList	ptr		850049	1					
ANR	851552	Argument	ptr		850049	0					
ANR	851553	Identifier	ptr		850049	0					
ANR	851554	Argument	0		850049	1					
ANR	851555	PrimaryExpression	0		850049	0					
ANR	851556	IfStatement	if ( a0 && * a0 )		850049	6					
ANR	851557	Condition	a0 && * a0	7316:8:210444:210452	850049	0	True				
ANR	851558	AndExpression	a0 && * a0		850049	0		&&			
ANR	851559	Identifier	a0		850049	0					
ANR	851560	UnaryOperationExpression	* a0		850049	1					
ANR	851561	UnaryOperator	*		850049	0					
ANR	851562	Identifier	a0		850049	1					
ANR	851563	CompoundStatement		210:19:6220:6220	850049	1					
ANR	851564	ExpressionStatement	"addr = r_num_math ( core -> num , a0 )"	7317:5:210462:210495	850049	0	True				
ANR	851565	AssignmentExpression	"addr = r_num_math ( core -> num , a0 )"		850049	0		=			
ANR	851566	Identifier	addr		850049	0					
ANR	851567	CallExpression	"r_num_math ( core -> num , a0 )"		850049	1					
ANR	851568	Callee	r_num_math		850049	0					
ANR	851569	Identifier	r_num_math		850049	0					
ANR	851570	ArgumentList	core -> num		850049	1					
ANR	851571	Argument	core -> num		850049	0					
ANR	851572	PtrMemberAccess	core -> num		850049	0					
ANR	851573	Identifier	core		850049	0					
ANR	851574	Identifier	num		850049	1					
ANR	851575	Argument	a0		850049	1					
ANR	851576	Identifier	a0		850049	0					
ANR	851577	ElseStatement	else		850049	0					
ANR	851578	CompoundStatement		212:11:6273:6273	850049	0					
ANR	851579	ExpressionStatement	addr = core -> offset	7319:5:210515:210534	850049	0	True				
ANR	851580	AssignmentExpression	addr = core -> offset		850049	0		=			
ANR	851581	Identifier	addr		850049	0					
ANR	851582	PtrMemberAccess	core -> offset		850049	1					
ANR	851583	Identifier	core		850049	0					
ANR	851584	Identifier	offset		850049	1					
ANR	851585	ExpressionStatement	"r_anal_hint_del ( core -> anal , addr , size )"	7321:4:210546:210586	850049	7	True				
ANR	851586	CallExpression	"r_anal_hint_del ( core -> anal , addr , size )"		850049	0					
ANR	851587	Callee	r_anal_hint_del		850049	0					
ANR	851588	Identifier	r_anal_hint_del		850049	0					
ANR	851589	ArgumentList	core -> anal		850049	1					
ANR	851590	Argument	core -> anal		850049	0					
ANR	851591	PtrMemberAccess	core -> anal		850049	0					
ANR	851592	Identifier	core		850049	0					
ANR	851593	Identifier	anal		850049	1					
ANR	851594	Argument	addr		850049	1					
ANR	851595	Identifier	addr		850049	0					
ANR	851596	Argument	size		850049	2					
ANR	851597	Identifier	size		850049	0					
ANR	851598	ExpressionStatement	free ( ptr )	7322:4:210592:210602	850049	8	True				
ANR	851599	CallExpression	free ( ptr )		850049	0					
ANR	851600	Callee	free		850049	0					
ANR	851601	Identifier	free		850049	0					
ANR	851602	ArgumentList	ptr		850049	1					
ANR	851603	Argument	ptr		850049	0					
ANR	851604	Identifier	ptr		850049	0					
ANR	851605	ElseStatement	else		850049	0					
ANR	851606	CompoundStatement		218:9:6383:6383	850049	0					
ANR	851607	ExpressionStatement	r_anal_hint_clear ( core -> anal )	7325:3:210623:210653	850049	0	True				
ANR	851608	CallExpression	r_anal_hint_clear ( core -> anal )		850049	0					
ANR	851609	Callee	r_anal_hint_clear		850049	0					
ANR	851610	Identifier	r_anal_hint_clear		850049	0					
ANR	851611	ArgumentList	core -> anal		850049	1					
ANR	851612	Argument	core -> anal		850049	0					
ANR	851613	PtrMemberAccess	core -> anal		850049	0					
ANR	851614	Identifier	core		850049	0					
ANR	851615	Identifier	anal		850049	1					
ANR	851616	BreakStatement	break ;	7327:2:210661:210666	850049	61	True				
ANR	851617	ReturnType	static void		850049	1					
ANR	851618	Identifier	cmd_anal_hint		850049	2					
ANR	851619	ParameterList	"RCore * core , const char * input"		850049	3					
ANR	851620	Parameter	RCore * core	7107:26:204202:204212	850049	0	True				
ANR	851621	ParameterType	RCore *		850049	0					
ANR	851622	Identifier	core		850049	1					
ANR	851623	Parameter	const char * input	7107:39:204215:204231	850049	1	True				
ANR	851624	ParameterType	const char *		850049	0					
ANR	851625	Identifier	input		850049	1					
ANR	851626	CFGEntryNode	ENTRY		850049		True				
ANR	851627	CFGExitNode	EXIT		850049		True				
ANR	851628	Symbol	* input		850049						
ANR	851629	Symbol	* core		850049						
ANR	851630	Symbol	core -> offset		850049						
ANR	851631	Symbol	r_str_word_set0		850049						
ANR	851632	Symbol	type		850049						
ANR	851633	Symbol	core -> anal		850049						
ANR	851634	Symbol	r_num_math		850049						
ANR	851635	Symbol	arg		850049						
ANR	851636	Symbol	help_msg_ahi		850049						
ANR	851637	Symbol	help_msg_ah		850049						
ANR	851638	Symbol	core -> num		850049						
ANR	851639	Symbol	addr		850049						
ANR	851640	Symbol	isdigit		850049						
ANR	851641	Symbol	atoi		850049						
ANR	851642	Symbol	r_anal_optype_from_string		850049						
ANR	851643	Symbol	bits		850049						
ANR	851644	Symbol	i		850049						
ANR	851645	Symbol	r_str_word_get0		850049						
ANR	851646	Symbol	ptr		850049						
ANR	851647	Symbol	a0		850049						
ANR	851648	Symbol	core		850049						
ANR	851649	Symbol	input		850049						
ANR	851650	Symbol	size		850049						
ANR	851651	Symbol	* a0		850049						
ANR	851652	Symbol	r_str_trim_ro		850049						
ANR	851653	Symbol	strdup		850049						
ANR	851654	Symbol	base		850049						
ANR	851655	Function	agraph_print_node_gml	7331:0:210674:210840							
ANR	851656	FunctionDef	"agraph_print_node_gml (RANode * n , void * user)"		851655	0					
ANR	851657	CompoundStatement		7331:57:210731:210840	851655	0					
ANR	851658	Statement	r_cons_printf	7332:1:210734:210746	851655	0	True				
ANR	851659	Statement	(	7332:15:210748:210748	851655	1	True				
ANR	851660	Statement	"""  node [\\n"""	7332:16:210749:210760	851655	2	True				
ANR	851661	Statement	"""    id  %d\\n"""	7333:2:210764:210777	851655	3	True				
ANR	851662	Statement	"""    label  \\""%s\\""\\n"""	7334:2:210781:210801	851655	4	True				
ANR	851663	Statement	"""  ]\\n"""	7335:2:210805:210811	851655	5	True				
ANR	851664	Statement	","	7335:9:210812:210812	851655	6	True				
ANR	851665	Statement	n	7335:11:210814:210814	851655	7	True				
ANR	851666	Statement	->	7335:12:210815:210816	851655	8	True				
ANR	851667	Statement	gnode	7335:14:210817:210821	851655	9	True				
ANR	851668	Statement	->	7335:19:210822:210823	851655	10	True				
ANR	851669	Statement	idx	7335:21:210824:210826	851655	11	True				
ANR	851670	Statement	","	7335:24:210827:210827	851655	12	True				
ANR	851671	Statement	n	7335:26:210829:210829	851655	13	True				
ANR	851672	Statement	->	7335:27:210830:210831	851655	14	True				
ANR	851673	Statement	title	7335:29:210832:210836	851655	15	True				
ANR	851674	Statement	)	7335:34:210837:210837	851655	16	True				
ANR	851675	ExpressionStatement		7335:35:210838:210838	851655	17	True				
ANR	851676	ReturnType	static void		851655	1					
ANR	851677	Identifier	agraph_print_node_gml		851655	2					
ANR	851678	ParameterList	"RANode * n , void * user"		851655	3					
ANR	851679	Parameter	RANode * n	7331:34:210708:210716	851655	0	True				
ANR	851680	ParameterType	RANode *		851655	0					
ANR	851681	Identifier	n		851655	1					
ANR	851682	Parameter	void * user	7331:45:210719:210728	851655	1	True				
ANR	851683	ParameterType	void *		851655	0					
ANR	851684	Identifier	user		851655	1					
ANR	851685	CFGEntryNode	ENTRY		851655		True				
ANR	851686	CFGExitNode	EXIT		851655		True				
ANR	851687	Symbol	user		851655						
ANR	851688	Symbol	n		851655						
ANR	851689	Function	agraph_print_edge_gml	7338:0:210843:211037							
ANR	851690	FunctionDef	"agraph_print_edge_gml (RANode * from , RANode * to , void * user)"		851689	0					
ANR	851691	CompoundStatement		7338:72:210915:211037	851689	0					
ANR	851692	Statement	r_cons_printf	7339:1:210918:210930	851689	0	True				
ANR	851693	Statement	(	7339:15:210932:210932	851689	1	True				
ANR	851694	Statement	"""  edge [\\n"""	7339:16:210933:210944	851689	2	True				
ANR	851695	Statement	"""    source  %d\\n"""	7340:2:210948:210965	851689	3	True				
ANR	851696	Statement	"""    target  %d\\n"""	7341:2:210969:210986	851689	4	True				
ANR	851697	Statement	"""  ]\\n"""	7342:2:210990:210996	851689	5	True				
ANR	851698	Statement	","	7342:9:210997:210997	851689	6	True				
ANR	851699	Statement	from	7342:11:210999:211002	851689	7	True				
ANR	851700	Statement	->	7342:15:211003:211004	851689	8	True				
ANR	851701	Statement	gnode	7342:17:211005:211009	851689	9	True				
ANR	851702	Statement	->	7342:22:211010:211011	851689	10	True				
ANR	851703	Statement	idx	7342:24:211012:211014	851689	11	True				
ANR	851704	Statement	","	7342:27:211015:211015	851689	12	True				
ANR	851705	Statement	to	7342:29:211017:211018	851689	13	True				
ANR	851706	Statement	->	7342:31:211019:211020	851689	14	True				
ANR	851707	Statement	gnode	7342:33:211021:211025	851689	15	True				
ANR	851708	Statement	->	7342:38:211026:211027	851689	16	True				
ANR	851709	Statement	idx	7342:40:211028:211030	851689	17	True				
ANR	851710	Statement	)	7343:2:211034:211034	851689	18	True				
ANR	851711	ExpressionStatement		7343:3:211035:211035	851689	19	True				
ANR	851712	ReturnType	static void		851689	1					
ANR	851713	Identifier	agraph_print_edge_gml		851689	2					
ANR	851714	ParameterList	"RANode * from , RANode * to , void * user"		851689	3					
ANR	851715	Parameter	RANode * from	7338:34:210877:210888	851689	0	True				
ANR	851716	ParameterType	RANode *		851689	0					
ANR	851717	Identifier	from		851689	1					
ANR	851718	Parameter	RANode * to	7338:48:210891:210900	851689	1	True				
ANR	851719	ParameterType	RANode *		851689	0					
ANR	851720	Identifier	to		851689	1					
ANR	851721	Parameter	void * user	7338:60:210903:210912	851689	2	True				
ANR	851722	ParameterType	void *		851689	0					
ANR	851723	Identifier	user		851689	1					
ANR	851724	CFGEntryNode	ENTRY		851689		True				
ANR	851725	CFGExitNode	EXIT		851689		True				
ANR	851726	Symbol	from		851689						
ANR	851727	Symbol	to		851689						
ANR	851728	Symbol	user		851689						
ANR	851729	Function	agraph_print_node_dot	7346:0:211040:211472							
ANR	851730	FunctionDef	"agraph_print_node_dot (RANode * n , void * user)"		851729	0					
ANR	851731	CompoundStatement		7346:57:211097:211472	851729	0					
ANR	851732	IdentifierDeclStatement	char * label = strdup ( n -> body ) ;	7347:1:211100:211130	851729	0	True				
ANR	851733	IdentifierDecl	* label = strdup ( n -> body )		851729	0					
ANR	851734	IdentifierDeclType	char *		851729	0					
ANR	851735	Identifier	label		851729	1					
ANR	851736	AssignmentExpression	* label = strdup ( n -> body )		851729	2		=			
ANR	851737	Identifier	label		851729	0					
ANR	851738	CallExpression	strdup ( n -> body )		851729	1					
ANR	851739	Callee	strdup		851729	0					
ANR	851740	Identifier	strdup		851729	0					
ANR	851741	ArgumentList	n -> body		851729	1					
ANR	851742	Argument	n -> body		851729	0					
ANR	851743	PtrMemberAccess	n -> body		851729	0					
ANR	851744	Identifier	n		851729	0					
ANR	851745	Identifier	body		851729	1					
ANR	851746	IfStatement	if ( ! label || ! * label )		851729	1					
ANR	851747	Condition	! label || ! * label	7349:5:211187:211203	851729	0	True				
ANR	851748	OrExpression	! label || ! * label		851729	0		||			
ANR	851749	UnaryOperationExpression	! label		851729	0					
ANR	851750	UnaryOperator	!		851729	0					
ANR	851751	Identifier	label		851729	1					
ANR	851752	UnaryOperationExpression	! * label		851729	1					
ANR	851753	UnaryOperator	!		851729	0					
ANR	851754	UnaryOperationExpression	* label		851729	1					
ANR	851755	UnaryOperator	*		851729	0					
ANR	851756	Identifier	label		851729	1					
ANR	851757	CompoundStatement		4:24:108:108	851729	1					
ANR	851758	ExpressionStatement	"r_cons_printf ( ""\\""%s\\"" [URL=\\""%s\\"", color=\\""lightgray\\"", label=\\""%s\\""]\\n"" , n -> title , n -> title , n -> title )"	7350:2:211210:211318	851729	0	True				
ANR	851759	CallExpression	"r_cons_printf ( ""\\""%s\\"" [URL=\\""%s\\"", color=\\""lightgray\\"", label=\\""%s\\""]\\n"" , n -> title , n -> title , n -> title )"		851729	0					
ANR	851760	Callee	r_cons_printf		851729	0					
ANR	851761	Identifier	r_cons_printf		851729	0					
ANR	851762	ArgumentList	"""\\""%s\\"" [URL=\\""%s\\"", color=\\""lightgray\\"", label=\\""%s\\""]\\n"""		851729	1					
ANR	851763	Argument	"""\\""%s\\"" [URL=\\""%s\\"", color=\\""lightgray\\"", label=\\""%s\\""]\\n"""		851729	0					
ANR	851764	PrimaryExpression	"""\\""%s\\"" [URL=\\""%s\\"", color=\\""lightgray\\"", label=\\""%s\\""]\\n"""		851729	0					
ANR	851765	Argument	n -> title		851729	1					
ANR	851766	PtrMemberAccess	n -> title		851729	0					
ANR	851767	Identifier	n		851729	0					
ANR	851768	Identifier	title		851729	1					
ANR	851769	Argument	n -> title		851729	2					
ANR	851770	PtrMemberAccess	n -> title		851729	0					
ANR	851771	Identifier	n		851729	0					
ANR	851772	Identifier	title		851729	1					
ANR	851773	Argument	n -> title		851729	3					
ANR	851774	PtrMemberAccess	n -> title		851729	0					
ANR	851775	Identifier	n		851729	0					
ANR	851776	Identifier	title		851729	1					
ANR	851777	ElseStatement	else		851729	0					
ANR	851778	CompoundStatement		7:8:230:230	851729	0					
ANR	851779	ExpressionStatement	"r_cons_printf ( ""\\""%s\\"" [URL=\\""%s\\"", color=\\""lightgray\\"", label=\\""%s\\\\n%s\\""]\\n"" , n -> title , n -> title , n -> title , label )"	7353:2:211332:211452	851729	0	True				
ANR	851780	CallExpression	"r_cons_printf ( ""\\""%s\\"" [URL=\\""%s\\"", color=\\""lightgray\\"", label=\\""%s\\\\n%s\\""]\\n"" , n -> title , n -> title , n -> title , label )"		851729	0					
ANR	851781	Callee	r_cons_printf		851729	0					
ANR	851782	Identifier	r_cons_printf		851729	0					
ANR	851783	ArgumentList	"""\\""%s\\"" [URL=\\""%s\\"", color=\\""lightgray\\"", label=\\""%s\\\\n%s\\""]\\n"""		851729	1					
ANR	851784	Argument	"""\\""%s\\"" [URL=\\""%s\\"", color=\\""lightgray\\"", label=\\""%s\\\\n%s\\""]\\n"""		851729	0					
ANR	851785	PrimaryExpression	"""\\""%s\\"" [URL=\\""%s\\"", color=\\""lightgray\\"", label=\\""%s\\\\n%s\\""]\\n"""		851729	0					
ANR	851786	Argument	n -> title		851729	1					
ANR	851787	PtrMemberAccess	n -> title		851729	0					
ANR	851788	Identifier	n		851729	0					
ANR	851789	Identifier	title		851729	1					
ANR	851790	Argument	n -> title		851729	2					
ANR	851791	PtrMemberAccess	n -> title		851729	0					
ANR	851792	Identifier	n		851729	0					
ANR	851793	Identifier	title		851729	1					
ANR	851794	Argument	n -> title		851729	3					
ANR	851795	PtrMemberAccess	n -> title		851729	0					
ANR	851796	Identifier	n		851729	0					
ANR	851797	Identifier	title		851729	1					
ANR	851798	Argument	label		851729	4					
ANR	851799	Identifier	label		851729	0					
ANR	851800	ExpressionStatement	free ( label )	7356:1:211458:211470	851729	2	True				
ANR	851801	CallExpression	free ( label )		851729	0					
ANR	851802	Callee	free		851729	0					
ANR	851803	Identifier	free		851729	0					
ANR	851804	ArgumentList	label		851729	1					
ANR	851805	Argument	label		851729	0					
ANR	851806	Identifier	label		851729	0					
ANR	851807	ReturnType	static void		851729	1					
ANR	851808	Identifier	agraph_print_node_dot		851729	2					
ANR	851809	ParameterList	"RANode * n , void * user"		851729	3					
ANR	851810	Parameter	RANode * n	7346:34:211074:211082	851729	0	True				
ANR	851811	ParameterType	RANode *		851729	0					
ANR	851812	Identifier	n		851729	1					
ANR	851813	Parameter	void * user	7346:45:211085:211094	851729	1	True				
ANR	851814	ParameterType	void *		851729	0					
ANR	851815	Identifier	user		851729	1					
ANR	851816	CFGEntryNode	ENTRY		851729		True				
ANR	851817	CFGExitNode	EXIT		851729		True				
ANR	851818	Symbol	* n		851729						
ANR	851819	Symbol	n -> title		851729						
ANR	851820	Symbol	strdup		851729						
ANR	851821	Symbol	label		851729						
ANR	851822	Symbol	n -> body		851729						
ANR	851823	Symbol	user		851729						
ANR	851824	Symbol	n		851729						
ANR	851825	Symbol	* label		851729						
ANR	851826	Function	agraph_print_node	7359:0:211475:211802							
ANR	851827	FunctionDef	"agraph_print_node (RANode * n , void * user)"		851826	0					
ANR	851828	CompoundStatement		7359:53:211528:211802	851826	0					
ANR	851829	IdentifierDeclStatement	"char * encbody , * cmd ;"	7360:1:211531:211550	851826	0	True				
ANR	851830	IdentifierDecl	* encbody		851826	0					
ANR	851831	IdentifierDeclType	char *		851826	0					
ANR	851832	Identifier	encbody		851826	1					
ANR	851833	IdentifierDecl	* cmd		851826	1					
ANR	851834	IdentifierDeclType	char *		851826	0					
ANR	851835	Identifier	cmd		851826	1					
ANR	851836	IdentifierDeclStatement	int len = strlen ( n -> body ) ;	7361:1:211553:211579	851826	1	True				
ANR	851837	IdentifierDecl	len = strlen ( n -> body )		851826	0					
ANR	851838	IdentifierDeclType	int		851826	0					
ANR	851839	Identifier	len		851826	1					
ANR	851840	AssignmentExpression	len = strlen ( n -> body )		851826	2		=			
ANR	851841	Identifier	len		851826	0					
ANR	851842	CallExpression	strlen ( n -> body )		851826	1					
ANR	851843	Callee	strlen		851826	0					
ANR	851844	Identifier	strlen		851826	0					
ANR	851845	ArgumentList	n -> body		851826	1					
ANR	851846	Argument	n -> body		851826	0					
ANR	851847	PtrMemberAccess	n -> body		851826	0					
ANR	851848	Identifier	n		851826	0					
ANR	851849	Identifier	body		851826	1					
ANR	851850	IfStatement	if ( len > 0 && n -> body [ len - 1 ] == '\\n' )		851826	2					
ANR	851851	Condition	len > 0 && n -> body [ len - 1 ] == '\\n'	7363:5:211587:211621	851826	0	True				
ANR	851852	AndExpression	len > 0 && n -> body [ len - 1 ] == '\\n'		851826	0		&&			
ANR	851853	RelationalExpression	len > 0		851826	0		>			
ANR	851854	Identifier	len		851826	0					
ANR	851855	PrimaryExpression	0		851826	1					
ANR	851856	EqualityExpression	n -> body [ len - 1 ] == '\\n'		851826	1		==			
ANR	851857	ArrayIndexing	n -> body [ len - 1 ]		851826	0					
ANR	851858	PtrMemberAccess	n -> body		851826	0					
ANR	851859	Identifier	n		851826	0					
ANR	851860	Identifier	body		851826	1					
ANR	851861	AdditiveExpression	len - 1		851826	1		-			
ANR	851862	Identifier	len		851826	0					
ANR	851863	PrimaryExpression	1		851826	1					
ANR	851864	PrimaryExpression	'\\n'		851826	1					
ANR	851865	CompoundStatement		5:42:95:95	851826	1					
ANR	851866	ExpressionStatement	len --	7364:2:211628:211633	851826	0	True				
ANR	851867	PostIncDecOperationExpression	len --		851826	0					
ANR	851868	Identifier	len		851826	0					
ANR	851869	IncDec	--		851826	1					
ANR	851870	ExpressionStatement	"encbody = r_base64_encode_dyn ( n -> body , len )"	7366:1:211639:211683	851826	3	True				
ANR	851871	AssignmentExpression	"encbody = r_base64_encode_dyn ( n -> body , len )"		851826	0		=			
ANR	851872	Identifier	encbody		851826	0					
ANR	851873	CallExpression	"r_base64_encode_dyn ( n -> body , len )"		851826	1					
ANR	851874	Callee	r_base64_encode_dyn		851826	0					
ANR	851875	Identifier	r_base64_encode_dyn		851826	0					
ANR	851876	ArgumentList	n -> body		851826	1					
ANR	851877	Argument	n -> body		851826	0					
ANR	851878	PtrMemberAccess	n -> body		851826	0					
ANR	851879	Identifier	n		851826	0					
ANR	851880	Identifier	body		851826	1					
ANR	851881	Argument	len		851826	1					
ANR	851882	Identifier	len		851826	0					
ANR	851883	ExpressionStatement	"cmd = r_str_newf ( ""agn \\""%s\\"" base64:%s\\n"" , n -> title , encbody )"	7367:1:211686:211748	851826	4	True				
ANR	851884	AssignmentExpression	"cmd = r_str_newf ( ""agn \\""%s\\"" base64:%s\\n"" , n -> title , encbody )"		851826	0		=			
ANR	851885	Identifier	cmd		851826	0					
ANR	851886	CallExpression	"r_str_newf ( ""agn \\""%s\\"" base64:%s\\n"" , n -> title , encbody )"		851826	1					
ANR	851887	Callee	r_str_newf		851826	0					
ANR	851888	Identifier	r_str_newf		851826	0					
ANR	851889	ArgumentList	"""agn \\""%s\\"" base64:%s\\n"""		851826	1					
ANR	851890	Argument	"""agn \\""%s\\"" base64:%s\\n"""		851826	0					
ANR	851891	PrimaryExpression	"""agn \\""%s\\"" base64:%s\\n"""		851826	0					
ANR	851892	Argument	n -> title		851826	1					
ANR	851893	PtrMemberAccess	n -> title		851826	0					
ANR	851894	Identifier	n		851826	0					
ANR	851895	Identifier	title		851826	1					
ANR	851896	Argument	encbody		851826	2					
ANR	851897	Identifier	encbody		851826	0					
ANR	851898	ExpressionStatement	r_cons_printf ( cmd )	7368:1:211751:211770	851826	5	True				
ANR	851899	CallExpression	r_cons_printf ( cmd )		851826	0					
ANR	851900	Callee	r_cons_printf		851826	0					
ANR	851901	Identifier	r_cons_printf		851826	0					
ANR	851902	ArgumentList	cmd		851826	1					
ANR	851903	Argument	cmd		851826	0					
ANR	851904	Identifier	cmd		851826	0					
ANR	851905	ExpressionStatement	free ( cmd )	7369:1:211773:211783	851826	6	True				
ANR	851906	CallExpression	free ( cmd )		851826	0					
ANR	851907	Callee	free		851826	0					
ANR	851908	Identifier	free		851826	0					
ANR	851909	ArgumentList	cmd		851826	1					
ANR	851910	Argument	cmd		851826	0					
ANR	851911	Identifier	cmd		851826	0					
ANR	851912	ExpressionStatement	free ( encbody )	7370:1:211786:211800	851826	7	True				
ANR	851913	CallExpression	free ( encbody )		851826	0					
ANR	851914	Callee	free		851826	0					
ANR	851915	Identifier	free		851826	0					
ANR	851916	ArgumentList	encbody		851826	1					
ANR	851917	Argument	encbody		851826	0					
ANR	851918	Identifier	encbody		851826	0					
ANR	851919	ReturnType	static void		851826	1					
ANR	851920	Identifier	agraph_print_node		851826	2					
ANR	851921	ParameterList	"RANode * n , void * user"		851826	3					
ANR	851922	Parameter	RANode * n	7359:30:211505:211513	851826	0	True				
ANR	851923	ParameterType	RANode *		851826	0					
ANR	851924	Identifier	n		851826	1					
ANR	851925	Parameter	void * user	7359:41:211516:211525	851826	1	True				
ANR	851926	ParameterType	void *		851826	0					
ANR	851927	Identifier	user		851826	1					
ANR	851928	CFGEntryNode	ENTRY		851826		True				
ANR	851929	CFGExitNode	EXIT		851826		True				
ANR	851930	Symbol	r_str_newf		851826						
ANR	851931	Symbol	n		851826						
ANR	851932	Symbol	strlen		851826						
ANR	851933	Symbol	r_base64_encode_dyn		851826						
ANR	851934	Symbol	len		851826						
ANR	851935	Symbol	encbody		851826						
ANR	851936	Symbol	* n		851826						
ANR	851937	Symbol	n -> title		851826						
ANR	851938	Symbol	cmd		851826						
ANR	851939	Symbol	n -> body		851826						
ANR	851940	Symbol	user		851826						
ANR	851941	Symbol	* * n		851826						
ANR	851942	Symbol	* len		851826						
ANR	851943	Symbol	* n -> body		851826						
ANR	851944	Function	getViewerPath	7373:0:211805:212180							
ANR	851945	FunctionDef	getViewerPath ()		851944	0					
ANR	851946	CompoundStatement		7373:29:211834:212180	851944	0					
ANR	851947	IdentifierDeclStatement	int i ;	7374:1:211837:211842	851944	0	True				
ANR	851948	IdentifierDecl	i		851944	0					
ANR	851949	IdentifierDeclType	int		851944	0					
ANR	851950	Identifier	i		851944	1					
ANR	851951	Statement	const	7375:1:211845:211849	851944	1	True				
ANR	851952	Statement	char	7375:7:211851:211854	851944	2	True				
ANR	851953	Statement	*	7375:12:211856:211856	851944	3	True				
ANR	851954	Statement	viewers	7375:13:211857:211863	851944	4	True				
ANR	851955	Statement	[	7375:20:211864:211864	851944	5	True				
ANR	851956	Statement	]	7375:21:211865:211865	851944	6	True				
ANR	851957	Statement	=	7375:23:211867:211867	851944	7	True				
ANR	851958	CompoundStatement		3:25:34:34	851944	8					
ANR	851959	Statement	"""explorer"""	7377:2:211889:211898	851944	0	True				
ANR	851960	Statement	","	7377:12:211899:211899	851944	1	True				
ANR	851961	Statement	NULL	7385:2:211973:211976	851944	2	True				
ANR	851962	ExpressionStatement		7386:2:211980:211980	851944	9	True				
ANR	851963	ForStatement	for ( i = 0 ; viewers [ i ] ; i ++ )		851944	10					
ANR	851964	ForInit	i = 0 ;	7387:6:211988:211993	851944	0	True				
ANR	851965	AssignmentExpression	i = 0		851944	0		=			
ANR	851966	Identifier	i		851944	0					
ANR	851967	PrimaryExpression	0		851944	1					
ANR	851968	Condition	viewers [ i ]	7387:13:211995:212004	851944	1	True				
ANR	851969	ArrayIndexing	viewers [ i ]		851944	0					
ANR	851970	Identifier	viewers		851944	0					
ANR	851971	Identifier	i		851944	1					
ANR	851972	PostIncDecOperationExpression	i ++	7387:25:212007:212009	851944	2	True				
ANR	851973	Identifier	i		851944	0					
ANR	851974	IncDec	++		851944	1					
ANR	851975	CompoundStatement		16:2:181:224	851944	3					
ANR	851976	IdentifierDeclStatement	char * viewerPath = r_file_path ( viewers [ i ] ) ;	7388:2:212016:212059	851944	0	True				
ANR	851977	IdentifierDecl	* viewerPath = r_file_path ( viewers [ i ] )		851944	0					
ANR	851978	IdentifierDeclType	char *		851944	0					
ANR	851979	Identifier	viewerPath		851944	1					
ANR	851980	AssignmentExpression	* viewerPath = r_file_path ( viewers [ i ] )		851944	2		=			
ANR	851981	Identifier	viewerPath		851944	0					
ANR	851982	CallExpression	r_file_path ( viewers [ i ] )		851944	1					
ANR	851983	Callee	r_file_path		851944	0					
ANR	851984	Identifier	r_file_path		851944	0					
ANR	851985	ArgumentList	viewers [ i ]		851944	1					
ANR	851986	Argument	viewers [ i ]		851944	0					
ANR	851987	ArrayIndexing	viewers [ i ]		851944	0					
ANR	851988	Identifier	viewers		851944	0					
ANR	851989	Identifier	i		851944	1					
ANR	851990	IfStatement	"if ( viewerPath && strcmp ( viewerPath , viewers [ i ] ) )"		851944	1					
ANR	851991	Condition	"viewerPath && strcmp ( viewerPath , viewers [ i ] )"	7389:6:212067:212111	851944	0	True				
ANR	851992	AndExpression	"viewerPath && strcmp ( viewerPath , viewers [ i ] )"		851944	0		&&			
ANR	851993	Identifier	viewerPath		851944	0					
ANR	851994	CallExpression	"strcmp ( viewerPath , viewers [ i ] )"		851944	1					
ANR	851995	Callee	strcmp		851944	0					
ANR	851996	Identifier	strcmp		851944	0					
ANR	851997	ArgumentList	viewerPath		851944	1					
ANR	851998	Argument	viewerPath		851944	0					
ANR	851999	Identifier	viewerPath		851944	0					
ANR	852000	Argument	viewers [ i ]		851944	1					
ANR	852001	ArrayIndexing	viewers [ i ]		851944	0					
ANR	852002	Identifier	viewers		851944	0					
ANR	852003	Identifier	i		851944	1					
ANR	852004	CompoundStatement		17:53:279:279	851944	1					
ANR	852005	ReturnStatement	return viewerPath ;	7390:3:212119:212136	851944	0	True				
ANR	852006	Identifier	viewerPath		851944	0					
ANR	852007	ExpressionStatement	free ( viewerPath )	7392:2:212144:212161	851944	2	True				
ANR	852008	CallExpression	free ( viewerPath )		851944	0					
ANR	852009	Callee	free		851944	0					
ANR	852010	Identifier	free		851944	0					
ANR	852011	ArgumentList	viewerPath		851944	1					
ANR	852012	Argument	viewerPath		851944	0					
ANR	852013	Identifier	viewerPath		851944	0					
ANR	852014	ReturnStatement	return NULL ;	7394:1:212167:212178	851944	11	True				
ANR	852015	Identifier	NULL		851944	0					
ANR	852016	ReturnType	static char *		851944	1					
ANR	852017	Identifier	getViewerPath		851944	2					
ANR	852018	ParameterList			851944	3					
ANR	852019	CFGEntryNode	ENTRY		851944		True				
ANR	852020	CFGExitNode	EXIT		851944		True				
ANR	852021	Symbol	strcmp		851944						
ANR	852022	Symbol	viewers		851944						
ANR	852023	Symbol	* i		851944						
ANR	852024	Symbol	NULL		851944						
ANR	852025	Symbol	i		851944						
ANR	852026	Symbol	* viewers		851944						
ANR	852027	Symbol	r_file_path		851944						
ANR	852028	Symbol	viewerPath		851944						
ANR	852029	Function	graph_cmd	7397:0:212183:212995							
ANR	852030	FunctionDef	"graph_cmd (RCore * core , char * r2_cmd , const char * save_path)"		852029	0					
ANR	852031	CompoundStatement		7397:73:212256:212995	852029	0					
ANR	852032	IdentifierDeclStatement	"const char * dot = ""dot"" ;"	7398:1:212259:212282	852029	0	True				
ANR	852033	IdentifierDecl	"* dot = ""dot"""		852029	0					
ANR	852034	IdentifierDeclType	const char *		852029	0					
ANR	852035	Identifier	dot		852029	1					
ANR	852036	AssignmentExpression	"* dot = ""dot"""		852029	2		=			
ANR	852037	Identifier	dot		852029	0					
ANR	852038	PrimaryExpression	"""dot"""		852029	1					
ANR	852039	IdentifierDeclStatement	char * cmd = NULL ;	7399:1:212285:212301	852029	1	True				
ANR	852040	IdentifierDecl	* cmd = NULL		852029	0					
ANR	852041	IdentifierDeclType	char *		852029	0					
ANR	852042	Identifier	cmd		852029	1					
ANR	852043	AssignmentExpression	* cmd = NULL		852029	2		=			
ANR	852044	Identifier	NULL		852029	0					
ANR	852045	Identifier	NULL		852029	1					
ANR	852046	IdentifierDeclStatement	"const char * ext = r_config_get ( core -> config , ""graph.gv.format"" ) ;"	7400:1:212304:212368	852029	2	True				
ANR	852047	IdentifierDecl	"* ext = r_config_get ( core -> config , ""graph.gv.format"" )"		852029	0					
ANR	852048	IdentifierDeclType	const char *		852029	0					
ANR	852049	Identifier	ext		852029	1					
ANR	852050	AssignmentExpression	"* ext = r_config_get ( core -> config , ""graph.gv.format"" )"		852029	2		=			
ANR	852051	Identifier	ext		852029	0					
ANR	852052	CallExpression	"r_config_get ( core -> config , ""graph.gv.format"" )"		852029	1					
ANR	852053	Callee	r_config_get		852029	0					
ANR	852054	Identifier	r_config_get		852029	0					
ANR	852055	ArgumentList	core -> config		852029	1					
ANR	852056	Argument	core -> config		852029	0					
ANR	852057	PtrMemberAccess	core -> config		852029	0					
ANR	852058	Identifier	core		852029	0					
ANR	852059	Identifier	config		852029	1					
ANR	852060	Argument	"""graph.gv.format"""		852029	1					
ANR	852061	PrimaryExpression	"""graph.gv.format"""		852029	0					
ANR	852062	IdentifierDeclStatement	char * dotPath = r_file_path ( dot ) ;	7401:1:212371:212404	852029	3	True				
ANR	852063	IdentifierDecl	* dotPath = r_file_path ( dot )		852029	0					
ANR	852064	IdentifierDeclType	char *		852029	0					
ANR	852065	Identifier	dotPath		852029	1					
ANR	852066	AssignmentExpression	* dotPath = r_file_path ( dot )		852029	2		=			
ANR	852067	Identifier	dotPath		852029	0					
ANR	852068	CallExpression	r_file_path ( dot )		852029	1					
ANR	852069	Callee	r_file_path		852029	0					
ANR	852070	Identifier	r_file_path		852029	0					
ANR	852071	ArgumentList	dot		852029	1					
ANR	852072	Argument	dot		852029	0					
ANR	852073	Identifier	dot		852029	0					
ANR	852074	IfStatement	"if ( ! strcmp ( dotPath , dot ) )"		852029	4					
ANR	852075	Condition	"! strcmp ( dotPath , dot )"	7402:5:212411:212432	852029	0	True				
ANR	852076	UnaryOperationExpression	"! strcmp ( dotPath , dot )"		852029	0					
ANR	852077	UnaryOperator	!		852029	0					
ANR	852078	CallExpression	"strcmp ( dotPath , dot )"		852029	1					
ANR	852079	Callee	strcmp		852029	0					
ANR	852080	Identifier	strcmp		852029	0					
ANR	852081	ArgumentList	dotPath		852029	1					
ANR	852082	Argument	dotPath		852029	0					
ANR	852083	Identifier	dotPath		852029	0					
ANR	852084	Argument	dot		852029	1					
ANR	852085	Identifier	dot		852029	0					
ANR	852086	CompoundStatement		6:29:178:178	852029	1					
ANR	852087	ExpressionStatement	free ( dotPath )	7403:2:212439:212453	852029	0	True				
ANR	852088	CallExpression	free ( dotPath )		852029	0					
ANR	852089	Callee	free		852029	0					
ANR	852090	Identifier	free		852029	0					
ANR	852091	ArgumentList	dotPath		852029	1					
ANR	852092	Argument	dotPath		852029	0					
ANR	852093	Identifier	dotPath		852029	0					
ANR	852094	ExpressionStatement	"dot = ""xdot"""	7404:2:212457:212469	852029	1	True				
ANR	852095	AssignmentExpression	"dot = ""xdot"""		852029	0		=			
ANR	852096	Identifier	dot		852029	0					
ANR	852097	PrimaryExpression	"""xdot"""		852029	1					
ANR	852098	ExpressionStatement	dotPath = r_file_path ( dot )	7405:2:212473:212500	852029	2	True				
ANR	852099	AssignmentExpression	dotPath = r_file_path ( dot )		852029	0		=			
ANR	852100	Identifier	dotPath		852029	0					
ANR	852101	CallExpression	r_file_path ( dot )		852029	1					
ANR	852102	Callee	r_file_path		852029	0					
ANR	852103	Identifier	r_file_path		852029	0					
ANR	852104	ArgumentList	dot		852029	1					
ANR	852105	Argument	dot		852029	0					
ANR	852106	Identifier	dot		852029	0					
ANR	852107	IfStatement	"if ( ! strcmp ( dotPath , dot ) )"		852029	3					
ANR	852108	Condition	"! strcmp ( dotPath , dot )"	7406:6:212508:212529	852029	0	True				
ANR	852109	UnaryOperationExpression	"! strcmp ( dotPath , dot )"		852029	0					
ANR	852110	UnaryOperator	!		852029	0					
ANR	852111	CallExpression	"strcmp ( dotPath , dot )"		852029	1					
ANR	852112	Callee	strcmp		852029	0					
ANR	852113	Identifier	strcmp		852029	0					
ANR	852114	ArgumentList	dotPath		852029	1					
ANR	852115	Argument	dotPath		852029	0					
ANR	852116	Identifier	dotPath		852029	0					
ANR	852117	Argument	dot		852029	1					
ANR	852118	Identifier	dot		852029	0					
ANR	852119	CompoundStatement		10:30:275:275	852029	1					
ANR	852120	ExpressionStatement	free ( dotPath )	7407:3:212537:212551	852029	0	True				
ANR	852121	CallExpression	free ( dotPath )		852029	0					
ANR	852122	Callee	free		852029	0					
ANR	852123	Identifier	free		852029	0					
ANR	852124	ArgumentList	dotPath		852029	1					
ANR	852125	Argument	dotPath		852029	0					
ANR	852126	Identifier	dotPath		852029	0					
ANR	852127	ReturnStatement	"return r_str_new ( ""agf"" ) ;"	7408:3:212556:212580	852029	1	True				
ANR	852128	CallExpression	"r_str_new ( ""agf"" )"		852029	0					
ANR	852129	Callee	r_str_new		852029	0					
ANR	852130	Identifier	r_str_new		852029	0					
ANR	852131	ArgumentList	"""agf"""		852029	1					
ANR	852132	Argument	"""agf"""		852029	0					
ANR	852133	PrimaryExpression	"""agf"""		852029	0					
ANR	852134	IfStatement	if ( save_path && * save_path )		852029	5					
ANR	852135	Condition	save_path && * save_path	7411:5:212594:212616	852029	0	True				
ANR	852136	AndExpression	save_path && * save_path		852029	0		&&			
ANR	852137	Identifier	save_path		852029	0					
ANR	852138	UnaryOperationExpression	* save_path		852029	1					
ANR	852139	UnaryOperator	*		852029	0					
ANR	852140	Identifier	save_path		852029	1					
ANR	852141	CompoundStatement		15:30:362:362	852029	1					
ANR	852142	ExpressionStatement	"cmd = r_str_newf ( ""%s > a.dot;!%s -T%s -o%s a.dot;"" , r2_cmd , dot , ext , save_path )"	7412:2:212623:212707	852029	0	True				
ANR	852143	AssignmentExpression	"cmd = r_str_newf ( ""%s > a.dot;!%s -T%s -o%s a.dot;"" , r2_cmd , dot , ext , save_path )"		852029	0		=			
ANR	852144	Identifier	cmd		852029	0					
ANR	852145	CallExpression	"r_str_newf ( ""%s > a.dot;!%s -T%s -o%s a.dot;"" , r2_cmd , dot , ext , save_path )"		852029	1					
ANR	852146	Callee	r_str_newf		852029	0					
ANR	852147	Identifier	r_str_newf		852029	0					
ANR	852148	ArgumentList	"""%s > a.dot;!%s -T%s -o%s a.dot;"""		852029	1					
ANR	852149	Argument	"""%s > a.dot;!%s -T%s -o%s a.dot;"""		852029	0					
ANR	852150	PrimaryExpression	"""%s > a.dot;!%s -T%s -o%s a.dot;"""		852029	0					
ANR	852151	Argument	r2_cmd		852029	1					
ANR	852152	Identifier	r2_cmd		852029	0					
ANR	852153	Argument	dot		852029	2					
ANR	852154	Identifier	dot		852029	0					
ANR	852155	Argument	ext		852029	3					
ANR	852156	Identifier	ext		852029	0					
ANR	852157	Argument	save_path		852029	4					
ANR	852158	Identifier	save_path		852029	0					
ANR	852159	ElseStatement	else		852029	0					
ANR	852160	CompoundStatement		19:2:464:494	852029	0					
ANR	852161	IdentifierDeclStatement	char * viewer = getViewerPath ( ) ;	7415:2:212721:212751	852029	0	True				
ANR	852162	IdentifierDecl	* viewer = getViewerPath ( )		852029	0					
ANR	852163	IdentifierDeclType	char *		852029	0					
ANR	852164	Identifier	viewer		852029	1					
ANR	852165	AssignmentExpression	* viewer = getViewerPath ( )		852029	2		=			
ANR	852166	Identifier	viewer		852029	0					
ANR	852167	CallExpression	getViewerPath ( )		852029	1					
ANR	852168	Callee	getViewerPath		852029	0					
ANR	852169	Identifier	getViewerPath		852029	0					
ANR	852170	ArgumentList			852029	1					
ANR	852171	IfStatement	if ( viewer )		852029	1					
ANR	852172	Condition	viewer	7416:6:212759:212764	852029	0	True				
ANR	852173	Identifier	viewer		852029	0					
ANR	852174	CompoundStatement		20:14:510:510	852029	1					
ANR	852175	ExpressionStatement	"cmd = r_str_newf ( ""%s > a.dot;!%s -T%s -oa.%s a.dot;!%s a.%s"" , r2_cmd , dot , ext , ext , viewer , ext )"	7417:3:212772:212874	852029	0	True				
ANR	852176	AssignmentExpression	"cmd = r_str_newf ( ""%s > a.dot;!%s -T%s -oa.%s a.dot;!%s a.%s"" , r2_cmd , dot , ext , ext , viewer , ext )"		852029	0		=			
ANR	852177	Identifier	cmd		852029	0					
ANR	852178	CallExpression	"r_str_newf ( ""%s > a.dot;!%s -T%s -oa.%s a.dot;!%s a.%s"" , r2_cmd , dot , ext , ext , viewer , ext )"		852029	1					
ANR	852179	Callee	r_str_newf		852029	0					
ANR	852180	Identifier	r_str_newf		852029	0					
ANR	852181	ArgumentList	"""%s > a.dot;!%s -T%s -oa.%s a.dot;!%s a.%s"""		852029	1					
ANR	852182	Argument	"""%s > a.dot;!%s -T%s -oa.%s a.dot;!%s a.%s"""		852029	0					
ANR	852183	PrimaryExpression	"""%s > a.dot;!%s -T%s -oa.%s a.dot;!%s a.%s"""		852029	0					
ANR	852184	Argument	r2_cmd		852029	1					
ANR	852185	Identifier	r2_cmd		852029	0					
ANR	852186	Argument	dot		852029	2					
ANR	852187	Identifier	dot		852029	0					
ANR	852188	Argument	ext		852029	3					
ANR	852189	Identifier	ext		852029	0					
ANR	852190	Argument	ext		852029	4					
ANR	852191	Identifier	ext		852029	0					
ANR	852192	Argument	viewer		852029	5					
ANR	852193	Identifier	viewer		852029	0					
ANR	852194	Argument	ext		852029	6					
ANR	852195	Identifier	ext		852029	0					
ANR	852196	ExpressionStatement	free ( viewer )	7419:3:212879:212892	852029	1	True				
ANR	852197	CallExpression	free ( viewer )		852029	0					
ANR	852198	Callee	free		852029	0					
ANR	852199	Identifier	free		852029	0					
ANR	852200	ArgumentList	viewer		852029	1					
ANR	852201	Argument	viewer		852029	0					
ANR	852202	Identifier	viewer		852029	0					
ANR	852203	ElseStatement	else		852029	0					
ANR	852204	CompoundStatement		24:9:646:646	852029	0					
ANR	852205	ExpressionStatement	"eprintf ( ""Cannot find a valid picture viewer\\n"" )"	7421:3:212908:212956	852029	0	True				
ANR	852206	CallExpression	"eprintf ( ""Cannot find a valid picture viewer\\n"" )"		852029	0					
ANR	852207	Callee	eprintf		852029	0					
ANR	852208	Identifier	eprintf		852029	0					
ANR	852209	ArgumentList	"""Cannot find a valid picture viewer\\n"""		852029	1					
ANR	852210	Argument	"""Cannot find a valid picture viewer\\n"""		852029	0					
ANR	852211	PrimaryExpression	"""Cannot find a valid picture viewer\\n"""		852029	0					
ANR	852212	ExpressionStatement	free ( dotPath )	7424:1:212966:212980	852029	6	True				
ANR	852213	CallExpression	free ( dotPath )		852029	0					
ANR	852214	Callee	free		852029	0					
ANR	852215	Identifier	free		852029	0					
ANR	852216	ArgumentList	dotPath		852029	1					
ANR	852217	Argument	dotPath		852029	0					
ANR	852218	Identifier	dotPath		852029	0					
ANR	852219	ReturnStatement	return cmd ;	7425:1:212983:212993	852029	7	True				
ANR	852220	Identifier	cmd		852029	0					
ANR	852221	ReturnType	static char *		852029	1					
ANR	852222	Identifier	graph_cmd		852029	2					
ANR	852223	ParameterList	"RCore * core , char * r2_cmd , const char * save_path"		852029	3					
ANR	852224	Parameter	RCore * core	7397:23:212206:212216	852029	0	True				
ANR	852225	ParameterType	RCore *		852029	0					
ANR	852226	Identifier	core		852029	1					
ANR	852227	Parameter	char * r2_cmd	7397:36:212219:212230	852029	1	True				
ANR	852228	ParameterType	char *		852029	0					
ANR	852229	Identifier	r2_cmd		852029	1					
ANR	852230	Parameter	const char * save_path	7397:50:212233:212253	852029	2	True				
ANR	852231	ParameterType	const char *		852029	0					
ANR	852232	Identifier	save_path		852029	1					
ANR	852233	CFGEntryNode	ENTRY		852029		True				
ANR	852234	CFGExitNode	EXIT		852029		True				
ANR	852235	Symbol	core -> config		852029						
ANR	852236	Symbol	ext		852029						
ANR	852237	Symbol	strcmp		852029						
ANR	852238	Symbol	viewer		852029						
ANR	852239	Symbol	NULL		852029						
ANR	852240	Symbol	getViewerPath		852029						
ANR	852241	Symbol	dot		852029						
ANR	852242	Symbol	* core		852029						
ANR	852243	Symbol	r_config_get		852029						
ANR	852244	Symbol	r_str_newf		852029						
ANR	852245	Symbol	r2_cmd		852029						
ANR	852246	Symbol	dotPath		852029						
ANR	852247	Symbol	save_path		852029						
ANR	852248	Symbol	core		852029						
ANR	852249	Symbol	r_file_path		852029						
ANR	852250	Symbol	* save_path		852029						
ANR	852251	Symbol	cmd		852029						
ANR	852252	Symbol	r_str_new		852029						
ANR	852253	Function	agraph_print_edge_dot	7428:0:212998:213135							
ANR	852254	FunctionDef	"agraph_print_edge_dot (RANode * from , RANode * to , void * user)"		852253	0					
ANR	852255	CompoundStatement		7428:72:213070:213135	852253	0					
ANR	852256	ExpressionStatement	"r_cons_printf ( ""\\""%s\\"" -> \\""%s\\""\\n"" , from -> title , to -> title )"	7429:1:213073:213133	852253	0	True				
ANR	852257	CallExpression	"r_cons_printf ( ""\\""%s\\"" -> \\""%s\\""\\n"" , from -> title , to -> title )"		852253	0					
ANR	852258	Callee	r_cons_printf		852253	0					
ANR	852259	Identifier	r_cons_printf		852253	0					
ANR	852260	ArgumentList	"""\\""%s\\"" -> \\""%s\\""\\n"""		852253	1					
ANR	852261	Argument	"""\\""%s\\"" -> \\""%s\\""\\n"""		852253	0					
ANR	852262	PrimaryExpression	"""\\""%s\\"" -> \\""%s\\""\\n"""		852253	0					
ANR	852263	Argument	from -> title		852253	1					
ANR	852264	PtrMemberAccess	from -> title		852253	0					
ANR	852265	Identifier	from		852253	0					
ANR	852266	Identifier	title		852253	1					
ANR	852267	Argument	to -> title		852253	2					
ANR	852268	PtrMemberAccess	to -> title		852253	0					
ANR	852269	Identifier	to		852253	0					
ANR	852270	Identifier	title		852253	1					
ANR	852271	ReturnType	static void		852253	1					
ANR	852272	Identifier	agraph_print_edge_dot		852253	2					
ANR	852273	ParameterList	"RANode * from , RANode * to , void * user"		852253	3					
ANR	852274	Parameter	RANode * from	7428:34:213032:213043	852253	0	True				
ANR	852275	ParameterType	RANode *		852253	0					
ANR	852276	Identifier	from		852253	1					
ANR	852277	Parameter	RANode * to	7428:48:213046:213055	852253	1	True				
ANR	852278	ParameterType	RANode *		852253	0					
ANR	852279	Identifier	to		852253	1					
ANR	852280	Parameter	void * user	7428:60:213058:213067	852253	2	True				
ANR	852281	ParameterType	void *		852253	0					
ANR	852282	Identifier	user		852253	1					
ANR	852283	CFGEntryNode	ENTRY		852253		True				
ANR	852284	CFGExitNode	EXIT		852253		True				
ANR	852285	Symbol	* to		852253						
ANR	852286	Symbol	to -> title		852253						
ANR	852287	Symbol	from		852253						
ANR	852288	Symbol	to		852253						
ANR	852289	Symbol	from -> title		852253						
ANR	852290	Symbol	user		852253						
ANR	852291	Symbol	* from		852253						
ANR	852292	Function	agraph_print_edge	7432:0:213138:213272							
ANR	852293	FunctionDef	"agraph_print_edge (RANode * from , RANode * to , void * user)"		852292	0					
ANR	852294	CompoundStatement		7432:68:213206:213272	852292	0					
ANR	852295	ExpressionStatement	"r_cons_printf ( ""age \\""%s\\"" \\""%s\\""\\n"" , from -> title , to -> title )"	7433:1:213209:213270	852292	0	True				
ANR	852296	CallExpression	"r_cons_printf ( ""age \\""%s\\"" \\""%s\\""\\n"" , from -> title , to -> title )"		852292	0					
ANR	852297	Callee	r_cons_printf		852292	0					
ANR	852298	Identifier	r_cons_printf		852292	0					
ANR	852299	ArgumentList	"""age \\""%s\\"" \\""%s\\""\\n"""		852292	1					
ANR	852300	Argument	"""age \\""%s\\"" \\""%s\\""\\n"""		852292	0					
ANR	852301	PrimaryExpression	"""age \\""%s\\"" \\""%s\\""\\n"""		852292	0					
ANR	852302	Argument	from -> title		852292	1					
ANR	852303	PtrMemberAccess	from -> title		852292	0					
ANR	852304	Identifier	from		852292	0					
ANR	852305	Identifier	title		852292	1					
ANR	852306	Argument	to -> title		852292	2					
ANR	852307	PtrMemberAccess	to -> title		852292	0					
ANR	852308	Identifier	to		852292	0					
ANR	852309	Identifier	title		852292	1					
ANR	852310	ReturnType	static void		852292	1					
ANR	852311	Identifier	agraph_print_edge		852292	2					
ANR	852312	ParameterList	"RANode * from , RANode * to , void * user"		852292	3					
ANR	852313	Parameter	RANode * from	7432:30:213168:213179	852292	0	True				
ANR	852314	ParameterType	RANode *		852292	0					
ANR	852315	Identifier	from		852292	1					
ANR	852316	Parameter	RANode * to	7432:44:213182:213191	852292	1	True				
ANR	852317	ParameterType	RANode *		852292	0					
ANR	852318	Identifier	to		852292	1					
ANR	852319	Parameter	void * user	7432:56:213194:213203	852292	2	True				
ANR	852320	ParameterType	void *		852292	0					
ANR	852321	Identifier	user		852292	1					
ANR	852322	CFGEntryNode	ENTRY		852292		True				
ANR	852323	CFGExitNode	EXIT		852292		True				
ANR	852324	Symbol	* to		852292						
ANR	852325	Symbol	to -> title		852292						
ANR	852326	Symbol	from		852292						
ANR	852327	Symbol	to		852292						
ANR	852328	Symbol	from -> title		852292						
ANR	852329	Symbol	user		852292						
ANR	852330	Symbol	* from		852292						
ANR	852331	Function	cmd_agraph_node	7436:0:213275:214779							
ANR	852332	FunctionDef	"cmd_agraph_node (RCore * core , const char * input)"		852331	0					
ANR	852333	CompoundStatement		7436:60:213335:214779	852331	0					
ANR	852334	SwitchStatement	switch ( * input )		852331	0					
ANR	852335	Condition	* input	7437:9:213346:213351	852331	0	True				
ANR	852336	UnaryOperationExpression	* input		852331	0					
ANR	852337	UnaryOperator	*		852331	0					
ANR	852338	Identifier	input		852331	1					
ANR	852339	CompoundStatement		2:17:18:18	852331	1					
ANR	852340	Label	case ' ' :	7438:1:213357:213365	852331	0	True				
ANR	852341	CompoundStatement		7:2:132:146	852331	1					
ANR	852342	IdentifierDeclStatement	char * newbody = NULL ;	7439:2:213380:213400	852331	0	True				
ANR	852343	IdentifierDecl	* newbody = NULL		852331	0					
ANR	852344	IdentifierDeclType	char *		852331	0					
ANR	852345	Identifier	newbody		852331	1					
ANR	852346	AssignmentExpression	* newbody = NULL		852331	2		=			
ANR	852347	Identifier	NULL		852331	0					
ANR	852348	Identifier	NULL		852331	1					
ANR	852349	IdentifierDeclStatement	"char * * args , * body ;"	7440:2:213404:213422	852331	1	True				
ANR	852350	IdentifierDecl	* * args		852331	0					
ANR	852351	IdentifierDeclType	char * *		852331	0					
ANR	852352	Identifier	args		852331	1					
ANR	852353	IdentifierDecl	* body		852331	1					
ANR	852354	IdentifierDeclType	char *		852331	0					
ANR	852355	Identifier	body		852331	1					
ANR	852356	IdentifierDeclStatement	"int n_args , B_LEN = strlen ( ""base64:"" ) ;"	7441:2:213426:213464	852331	2	True				
ANR	852357	IdentifierDecl	n_args		852331	0					
ANR	852358	IdentifierDeclType	int		852331	0					
ANR	852359	Identifier	n_args		852331	1					
ANR	852360	IdentifierDecl	"B_LEN = strlen ( ""base64:"" )"		852331	1					
ANR	852361	IdentifierDeclType	int		852331	0					
ANR	852362	Identifier	B_LEN		852331	1					
ANR	852363	AssignmentExpression	"B_LEN = strlen ( ""base64:"" )"		852331	2		=			
ANR	852364	Identifier	B_LEN		852331	0					
ANR	852365	CallExpression	"strlen ( ""base64:"" )"		852331	1					
ANR	852366	Callee	strlen		852331	0					
ANR	852367	Identifier	strlen		852331	0					
ANR	852368	ArgumentList	"""base64:"""		852331	1					
ANR	852369	Argument	"""base64:"""		852331	0					
ANR	852370	PrimaryExpression	"""base64:"""		852331	0					
ANR	852371	IdentifierDeclStatement	int color = - 1 ;	7442:2:213468:213482	852331	3	True				
ANR	852372	IdentifierDecl	color = - 1		852331	0					
ANR	852373	IdentifierDeclType	int		852331	0					
ANR	852374	Identifier	color		852331	1					
ANR	852375	AssignmentExpression	color = - 1		852331	2		=			
ANR	852376	Identifier	color		852331	0					
ANR	852377	UnaryOperationExpression	- 1		852331	1					
ANR	852378	UnaryOperator	-		852331	0					
ANR	852379	PrimaryExpression	1		852331	1					
ANR	852380	ExpressionStatement	input ++	7443:2:213486:213493	852331	4	True				
ANR	852381	PostIncDecOperationExpression	input ++		852331	0					
ANR	852382	Identifier	input		852331	0					
ANR	852383	IncDec	++		852331	1					
ANR	852384	ExpressionStatement	"args = r_str_argv ( input , & n_args )"	7444:2:213497:213531	852331	5	True				
ANR	852385	AssignmentExpression	"args = r_str_argv ( input , & n_args )"		852331	0		=			
ANR	852386	Identifier	args		852331	0					
ANR	852387	CallExpression	"r_str_argv ( input , & n_args )"		852331	1					
ANR	852388	Callee	r_str_argv		852331	0					
ANR	852389	Identifier	r_str_argv		852331	0					
ANR	852390	ArgumentList	input		852331	1					
ANR	852391	Argument	input		852331	0					
ANR	852392	Identifier	input		852331	0					
ANR	852393	Argument	& n_args		852331	1					
ANR	852394	UnaryOperationExpression	& n_args		852331	0					
ANR	852395	UnaryOperator	&		852331	0					
ANR	852396	Identifier	n_args		852331	1					
ANR	852397	IfStatement	if ( n_args < 1 || n_args > 3 )		852331	6					
ANR	852398	Condition	n_args < 1 || n_args > 3	7445:6:213539:213562	852331	0	True				
ANR	852399	OrExpression	n_args < 1 || n_args > 3		852331	0		||			
ANR	852400	RelationalExpression	n_args < 1		852331	0		<			
ANR	852401	Identifier	n_args		852331	0					
ANR	852402	PrimaryExpression	1		852331	1					
ANR	852403	RelationalExpression	n_args > 3		852331	1		>			
ANR	852404	Identifier	n_args		852331	0					
ANR	852405	PrimaryExpression	3		852331	1					
ANR	852406	CompoundStatement		10:32:229:229	852331	1					
ANR	852407	ExpressionStatement	"r_cons_printf ( ""Wrong arguments\\n"" )"	7446:3:213570:213605	852331	0	True				
ANR	852408	CallExpression	"r_cons_printf ( ""Wrong arguments\\n"" )"		852331	0					
ANR	852409	Callee	r_cons_printf		852331	0					
ANR	852410	Identifier	r_cons_printf		852331	0					
ANR	852411	ArgumentList	"""Wrong arguments\\n"""		852331	1					
ANR	852412	Argument	"""Wrong arguments\\n"""		852331	0					
ANR	852413	PrimaryExpression	"""Wrong arguments\\n"""		852331	0					
ANR	852414	ExpressionStatement	r_str_argv_free ( args )	7447:3:213610:213632	852331	1	True				
ANR	852415	CallExpression	r_str_argv_free ( args )		852331	0					
ANR	852416	Callee	r_str_argv_free		852331	0					
ANR	852417	Identifier	r_str_argv_free		852331	0					
ANR	852418	ArgumentList	args		852331	1					
ANR	852419	Argument	args		852331	0					
ANR	852420	Identifier	args		852331	0					
ANR	852421	BreakStatement	break ;	7448:3:213637:213642	852331	2	True				
ANR	852422	IfStatement	if ( n_args > 1 )		852331	7					
ANR	852423	Condition	n_args > 1	7451:6:213734:213743	852331	0	True				
ANR	852424	RelationalExpression	n_args > 1		852331	0		>			
ANR	852425	Identifier	n_args		852331	0					
ANR	852426	PrimaryExpression	1		852331	1					
ANR	852427	CompoundStatement		16:18:410:410	852331	1					
ANR	852428	ExpressionStatement	body = strdup ( args [ 1 ] )	7452:3:213751:213774	852331	0	True				
ANR	852429	AssignmentExpression	body = strdup ( args [ 1 ] )		852331	0		=			
ANR	852430	Identifier	body		852331	0					
ANR	852431	CallExpression	strdup ( args [ 1 ] )		852331	1					
ANR	852432	Callee	strdup		852331	0					
ANR	852433	Identifier	strdup		852331	0					
ANR	852434	ArgumentList	args [ 1 ]		852331	1					
ANR	852435	Argument	args [ 1 ]		852331	0					
ANR	852436	ArrayIndexing	args [ 1 ]		852331	0					
ANR	852437	Identifier	args		852331	0					
ANR	852438	PrimaryExpression	1		852331	1					
ANR	852439	IfStatement	"if ( strncmp ( body , ""base64:"" , B_LEN ) == 0 )"		852331	1					
ANR	852440	Condition	"strncmp ( body , ""base64:"" , B_LEN ) == 0"	7453:7:213783:213819	852331	0	True				
ANR	852441	EqualityExpression	"strncmp ( body , ""base64:"" , B_LEN ) == 0"		852331	0		==			
ANR	852442	CallExpression	"strncmp ( body , ""base64:"" , B_LEN )"		852331	0					
ANR	852443	Callee	strncmp		852331	0					
ANR	852444	Identifier	strncmp		852331	0					
ANR	852445	ArgumentList	body		852331	1					
ANR	852446	Argument	body		852331	0					
ANR	852447	Identifier	body		852331	0					
ANR	852448	Argument	"""base64:"""		852331	1					
ANR	852449	PrimaryExpression	"""base64:"""		852331	0					
ANR	852450	Argument	B_LEN		852331	2					
ANR	852451	Identifier	B_LEN		852331	0					
ANR	852452	PrimaryExpression	0		852331	1					
ANR	852453	CompoundStatement		18:46:486:486	852331	1					
ANR	852454	ExpressionStatement	"body = r_str_replace ( body , ""\\\\n"" , """" , true )"	7454:4:213828:213872	852331	0	True				
ANR	852455	AssignmentExpression	"body = r_str_replace ( body , ""\\\\n"" , """" , true )"		852331	0		=			
ANR	852456	Identifier	body		852331	0					
ANR	852457	CallExpression	"r_str_replace ( body , ""\\\\n"" , """" , true )"		852331	1					
ANR	852458	Callee	r_str_replace		852331	0					
ANR	852459	Identifier	r_str_replace		852331	0					
ANR	852460	ArgumentList	body		852331	1					
ANR	852461	Argument	body		852331	0					
ANR	852462	Identifier	body		852331	0					
ANR	852463	Argument	"""\\\\n"""		852331	1					
ANR	852464	PrimaryExpression	"""\\\\n"""		852331	0					
ANR	852465	Argument	""""""		852331	2					
ANR	852466	PrimaryExpression	""""""		852331	0					
ANR	852467	Argument	true		852331	3					
ANR	852468	Identifier	true		852331	0					
ANR	852469	ExpressionStatement	"newbody = ( char * ) r_base64_decode_dyn ( body + B_LEN , - 1 )"	7455:4:213878:213934	852331	1	True				
ANR	852470	AssignmentExpression	"newbody = ( char * ) r_base64_decode_dyn ( body + B_LEN , - 1 )"		852331	0		=			
ANR	852471	Identifier	newbody		852331	0					
ANR	852472	CastExpression	"( char * ) r_base64_decode_dyn ( body + B_LEN , - 1 )"		852331	1					
ANR	852473	CastTarget	char *		852331	0					
ANR	852474	CallExpression	"r_base64_decode_dyn ( body + B_LEN , - 1 )"		852331	1					
ANR	852475	Callee	r_base64_decode_dyn		852331	0					
ANR	852476	Identifier	r_base64_decode_dyn		852331	0					
ANR	852477	ArgumentList	body + B_LEN		852331	1					
ANR	852478	Argument	body + B_LEN		852331	0					
ANR	852479	AdditiveExpression	body + B_LEN		852331	0		+			
ANR	852480	Identifier	body		852331	0					
ANR	852481	Identifier	B_LEN		852331	1					
ANR	852482	Argument	- 1		852331	1					
ANR	852483	UnaryOperationExpression	- 1		852331	0					
ANR	852484	UnaryOperator	-		852331	0					
ANR	852485	PrimaryExpression	1		852331	1					
ANR	852486	ExpressionStatement	free ( body )	7456:4:213940:213951	852331	2	True				
ANR	852487	CallExpression	free ( body )		852331	0					
ANR	852488	Callee	free		852331	0					
ANR	852489	Identifier	free		852331	0					
ANR	852490	ArgumentList	body		852331	1					
ANR	852491	Argument	body		852331	0					
ANR	852492	Identifier	body		852331	0					
ANR	852493	IfStatement	if ( ! newbody )		852331	3					
ANR	852494	Condition	! newbody	7457:8:213961:213968	852331	0	True				
ANR	852495	UnaryOperationExpression	! newbody		852331	0					
ANR	852496	UnaryOperator	!		852331	0					
ANR	852497	Identifier	newbody		852331	1					
ANR	852498	CompoundStatement		22:18:635:635	852331	1					
ANR	852499	ExpressionStatement	"eprintf ( ""Cannot allocate buffer\\n"" )"	7458:5:213978:214014	852331	0	True				
ANR	852500	CallExpression	"eprintf ( ""Cannot allocate buffer\\n"" )"		852331	0					
ANR	852501	Callee	eprintf		852331	0					
ANR	852502	Identifier	eprintf		852331	0					
ANR	852503	ArgumentList	"""Cannot allocate buffer\\n"""		852331	1					
ANR	852504	Argument	"""Cannot allocate buffer\\n"""		852331	0					
ANR	852505	PrimaryExpression	"""Cannot allocate buffer\\n"""		852331	0					
ANR	852506	ExpressionStatement	r_str_argv_free ( args )	7459:5:214021:214043	852331	1	True				
ANR	852507	CallExpression	r_str_argv_free ( args )		852331	0					
ANR	852508	Callee	r_str_argv_free		852331	0					
ANR	852509	Identifier	r_str_argv_free		852331	0					
ANR	852510	ArgumentList	args		852331	1					
ANR	852511	Argument	args		852331	0					
ANR	852512	Identifier	args		852331	0					
ANR	852513	BreakStatement	break ;	7460:5:214050:214055	852331	2	True				
ANR	852514	ExpressionStatement	body = newbody	7462:4:214067:214081	852331	4	True				
ANR	852515	AssignmentExpression	body = newbody		852331	0		=			
ANR	852516	Identifier	body		852331	0					
ANR	852517	Identifier	newbody		852331	1					
ANR	852518	ExpressionStatement	"body = r_str_append ( body , ""\\n"" )"	7464:3:214091:214123	852331	2	True				
ANR	852519	AssignmentExpression	"body = r_str_append ( body , ""\\n"" )"		852331	0		=			
ANR	852520	Identifier	body		852331	0					
ANR	852521	CallExpression	"r_str_append ( body , ""\\n"" )"		852331	1					
ANR	852522	Callee	r_str_append		852331	0					
ANR	852523	Identifier	r_str_append		852331	0					
ANR	852524	ArgumentList	body		852331	1					
ANR	852525	Argument	body		852331	0					
ANR	852526	Identifier	body		852331	0					
ANR	852527	Argument	"""\\n"""		852331	1					
ANR	852528	PrimaryExpression	"""\\n"""		852331	0					
ANR	852529	IfStatement	if ( n_args > 2 )		852331	3					
ANR	852530	Condition	n_args > 2	7465:7:214132:214141	852331	0	True				
ANR	852531	RelationalExpression	n_args > 2		852331	0		>			
ANR	852532	Identifier	n_args		852331	0					
ANR	852533	PrimaryExpression	2		852331	1					
ANR	852534	CompoundStatement		30:19:808:808	852331	1					
ANR	852535	ExpressionStatement	color = atoi ( args [ 2 ] )	7466:11:214157:214178	852331	0	True				
ANR	852536	AssignmentExpression	color = atoi ( args [ 2 ] )		852331	0		=			
ANR	852537	Identifier	color		852331	0					
ANR	852538	CallExpression	atoi ( args [ 2 ] )		852331	1					
ANR	852539	Callee	atoi		852331	0					
ANR	852540	Identifier	atoi		852331	0					
ANR	852541	ArgumentList	args [ 2 ]		852331	1					
ANR	852542	Argument	args [ 2 ]		852331	0					
ANR	852543	ArrayIndexing	args [ 2 ]		852331	0					
ANR	852544	Identifier	args		852331	0					
ANR	852545	PrimaryExpression	2		852331	1					
ANR	852546	ElseStatement	else		852331	0					
ANR	852547	CompoundStatement		33:9:858:858	852331	0					
ANR	852548	ExpressionStatement	"body = strdup ( """" )"	7469:3:214199:214217	852331	0	True				
ANR	852549	AssignmentExpression	"body = strdup ( """" )"		852331	0		=			
ANR	852550	Identifier	body		852331	0					
ANR	852551	CallExpression	"strdup ( """" )"		852331	1					
ANR	852552	Callee	strdup		852331	0					
ANR	852553	Identifier	strdup		852331	0					
ANR	852554	ArgumentList	""""""		852331	1					
ANR	852555	Argument	""""""		852331	0					
ANR	852556	PrimaryExpression	""""""		852331	0					
ANR	852557	ExpressionStatement	"r_agraph_add_node_with_color ( core -> graph , args [ 0 ] , body , color )"	7471:2:214225:214289	852331	8	True				
ANR	852558	CallExpression	"r_agraph_add_node_with_color ( core -> graph , args [ 0 ] , body , color )"		852331	0					
ANR	852559	Callee	r_agraph_add_node_with_color		852331	0					
ANR	852560	Identifier	r_agraph_add_node_with_color		852331	0					
ANR	852561	ArgumentList	core -> graph		852331	1					
ANR	852562	Argument	core -> graph		852331	0					
ANR	852563	PtrMemberAccess	core -> graph		852331	0					
ANR	852564	Identifier	core		852331	0					
ANR	852565	Identifier	graph		852331	1					
ANR	852566	Argument	args [ 0 ]		852331	1					
ANR	852567	ArrayIndexing	args [ 0 ]		852331	0					
ANR	852568	Identifier	args		852331	0					
ANR	852569	PrimaryExpression	0		852331	1					
ANR	852570	Argument	body		852331	2					
ANR	852571	Identifier	body		852331	0					
ANR	852572	Argument	color		852331	3					
ANR	852573	Identifier	color		852331	0					
ANR	852574	ExpressionStatement	r_str_argv_free ( args )	7472:2:214293:214315	852331	9	True				
ANR	852575	CallExpression	r_str_argv_free ( args )		852331	0					
ANR	852576	Callee	r_str_argv_free		852331	0					
ANR	852577	Identifier	r_str_argv_free		852331	0					
ANR	852578	ArgumentList	args		852331	1					
ANR	852579	Argument	args		852331	0					
ANR	852580	Identifier	args		852331	0					
ANR	852581	ExpressionStatement	free ( body )	7473:2:214319:214330	852331	10	True				
ANR	852582	CallExpression	free ( body )		852331	0					
ANR	852583	Callee	free		852331	0					
ANR	852584	Identifier	free		852331	0					
ANR	852585	ArgumentList	body		852331	1					
ANR	852586	Argument	body		852331	0					
ANR	852587	Identifier	body		852331	0					
ANR	852588	BreakStatement	break ;	7475:2:214410:214415	852331	11	True				
ANR	852589	Label	case '-' :	7477:1:214421:214429	852331	2	True				
ANR	852590	CompoundStatement		44:2:1124:1134	852331	3					
ANR	852591	IdentifierDeclStatement	char * * args ;	7478:2:214445:214456	852331	0	True				
ANR	852592	IdentifierDecl	* * args		852331	0					
ANR	852593	IdentifierDeclType	char * *		852331	0					
ANR	852594	Identifier	args		852331	1					
ANR	852595	IdentifierDeclStatement	int n_args ;	7479:2:214460:214470	852331	1	True				
ANR	852596	IdentifierDecl	n_args		852331	0					
ANR	852597	IdentifierDeclType	int		852331	0					
ANR	852598	Identifier	n_args		852331	1					
ANR	852599	ExpressionStatement	input ++	7481:2:214475:214482	852331	2	True				
ANR	852600	PostIncDecOperationExpression	input ++		852331	0					
ANR	852601	Identifier	input		852331	0					
ANR	852602	IncDec	++		852331	1					
ANR	852603	ExpressionStatement	"args = r_str_argv ( input , & n_args )"	7482:2:214486:214520	852331	3	True				
ANR	852604	AssignmentExpression	"args = r_str_argv ( input , & n_args )"		852331	0		=			
ANR	852605	Identifier	args		852331	0					
ANR	852606	CallExpression	"r_str_argv ( input , & n_args )"		852331	1					
ANR	852607	Callee	r_str_argv		852331	0					
ANR	852608	Identifier	r_str_argv		852331	0					
ANR	852609	ArgumentList	input		852331	1					
ANR	852610	Argument	input		852331	0					
ANR	852611	Identifier	input		852331	0					
ANR	852612	Argument	& n_args		852331	1					
ANR	852613	UnaryOperationExpression	& n_args		852331	0					
ANR	852614	UnaryOperator	&		852331	0					
ANR	852615	Identifier	n_args		852331	1					
ANR	852616	IfStatement	if ( n_args != 1 )		852331	4					
ANR	852617	Condition	n_args != 1	7483:6:214528:214538	852331	0	True				
ANR	852618	EqualityExpression	n_args != 1		852331	0		!=			
ANR	852619	Identifier	n_args		852331	0					
ANR	852620	PrimaryExpression	1		852331	1					
ANR	852621	CompoundStatement		48:19:1205:1205	852331	1					
ANR	852622	ExpressionStatement	"r_cons_printf ( ""Wrong arguments\\n"" )"	7484:3:214546:214581	852331	0	True				
ANR	852623	CallExpression	"r_cons_printf ( ""Wrong arguments\\n"" )"		852331	0					
ANR	852624	Callee	r_cons_printf		852331	0					
ANR	852625	Identifier	r_cons_printf		852331	0					
ANR	852626	ArgumentList	"""Wrong arguments\\n"""		852331	1					
ANR	852627	Argument	"""Wrong arguments\\n"""		852331	0					
ANR	852628	PrimaryExpression	"""Wrong arguments\\n"""		852331	0					
ANR	852629	ExpressionStatement	r_str_argv_free ( args )	7485:3:214586:214608	852331	1	True				
ANR	852630	CallExpression	r_str_argv_free ( args )		852331	0					
ANR	852631	Callee	r_str_argv_free		852331	0					
ANR	852632	Identifier	r_str_argv_free		852331	0					
ANR	852633	ArgumentList	args		852331	1					
ANR	852634	Argument	args		852331	0					
ANR	852635	Identifier	args		852331	0					
ANR	852636	BreakStatement	break ;	7486:3:214613:214618	852331	2	True				
ANR	852637	ExpressionStatement	"r_agraph_del_node ( core -> graph , args [ 0 ] )"	7488:2:214626:214666	852331	5	True				
ANR	852638	CallExpression	"r_agraph_del_node ( core -> graph , args [ 0 ] )"		852331	0					
ANR	852639	Callee	r_agraph_del_node		852331	0					
ANR	852640	Identifier	r_agraph_del_node		852331	0					
ANR	852641	ArgumentList	core -> graph		852331	1					
ANR	852642	Argument	core -> graph		852331	0					
ANR	852643	PtrMemberAccess	core -> graph		852331	0					
ANR	852644	Identifier	core		852331	0					
ANR	852645	Identifier	graph		852331	1					
ANR	852646	Argument	args [ 0 ]		852331	1					
ANR	852647	ArrayIndexing	args [ 0 ]		852331	0					
ANR	852648	Identifier	args		852331	0					
ANR	852649	PrimaryExpression	0		852331	1					
ANR	852650	ExpressionStatement	r_str_argv_free ( args )	7489:2:214670:214692	852331	6	True				
ANR	852651	CallExpression	r_str_argv_free ( args )		852331	0					
ANR	852652	Callee	r_str_argv_free		852331	0					
ANR	852653	Identifier	r_str_argv_free		852331	0					
ANR	852654	ArgumentList	args		852331	1					
ANR	852655	Argument	args		852331	0					
ANR	852656	Identifier	args		852331	0					
ANR	852657	BreakStatement	break ;	7490:2:214696:214701	852331	7	True				
ANR	852658	Label	case '?' :	7492:1:214707:214715	852331	4	True				
ANR	852659	Label	default :	7493:1:214718:214725	852331	5	True				
ANR	852660	Identifier	default		852331	0					
ANR	852661	ExpressionStatement	"r_core_cmd_help ( core , help_msg_agn )"	7494:2:214729:214765	852331	6	True				
ANR	852662	CallExpression	"r_core_cmd_help ( core , help_msg_agn )"		852331	0					
ANR	852663	Callee	r_core_cmd_help		852331	0					
ANR	852664	Identifier	r_core_cmd_help		852331	0					
ANR	852665	ArgumentList	core		852331	1					
ANR	852666	Argument	core		852331	0					
ANR	852667	Identifier	core		852331	0					
ANR	852668	Argument	help_msg_agn		852331	1					
ANR	852669	Identifier	help_msg_agn		852331	0					
ANR	852670	BreakStatement	break ;	7495:2:214769:214774	852331	7	True				
ANR	852671	ReturnType	static void		852331	1					
ANR	852672	Identifier	cmd_agraph_node		852331	2					
ANR	852673	ParameterList	"RCore * core , const char * input"		852331	3					
ANR	852674	Parameter	RCore * core	7436:28:213303:213313	852331	0	True				
ANR	852675	ParameterType	RCore *		852331	0					
ANR	852676	Identifier	core		852331	1					
ANR	852677	Parameter	const char * input	7436:41:213316:213332	852331	1	True				
ANR	852678	ParameterType	const char *		852331	0					
ANR	852679	Identifier	input		852331	1					
ANR	852680	CFGEntryNode	ENTRY		852331		True				
ANR	852681	CFGExitNode	EXIT		852331		True				
ANR	852682	Symbol	newbody		852331						
ANR	852683	Symbol	atoi		852331						
ANR	852684	Symbol	r_str_append		852331						
ANR	852685	Symbol	NULL		852331						
ANR	852686	Symbol	color		852331						
ANR	852687	Symbol	r_base64_decode_dyn		852331						
ANR	852688	Symbol	core -> graph		852331						
ANR	852689	Symbol	* input		852331						
ANR	852690	Symbol	* core		852331						
ANR	852691	Symbol	body		852331						
ANR	852692	Symbol	* args		852331						
ANR	852693	Symbol	args		852331						
ANR	852694	Symbol	core		852331						
ANR	852695	Symbol	input		852331						
ANR	852696	Symbol	strlen		852331						
ANR	852697	Symbol	strncmp		852331						
ANR	852698	Symbol	help_msg_agn		852331						
ANR	852699	Symbol	n_args		852331						
ANR	852700	Symbol	B_LEN		852331						
ANR	852701	Symbol	r_str_replace		852331						
ANR	852702	Symbol	true		852331						
ANR	852703	Symbol	& n_args		852331						
ANR	852704	Symbol	strdup		852331						
ANR	852705	Symbol	r_str_argv		852331						
ANR	852706	Function	cmd_agraph_edge	7499:0:214782:215622							
ANR	852707	FunctionDef	"cmd_agraph_edge (RCore * core , const char * input)"		852706	0					
ANR	852708	CompoundStatement		7499:60:214842:215622	852706	0					
ANR	852709	SwitchStatement	switch ( * input )		852706	0					
ANR	852710	Condition	* input	7500:9:214853:214858	852706	0	True				
ANR	852711	UnaryOperationExpression	* input		852706	0					
ANR	852712	UnaryOperator	*		852706	0					
ANR	852713	Identifier	input		852706	1					
ANR	852714	CompoundStatement		2:17:18:18	852706	1					
ANR	852715	Label	case ' ' :	7501:1:214864:214872	852706	0	True				
ANR	852716	Label	case '-' :	7502:1:214884:214892	852706	1	True				
ANR	852717	CompoundStatement		7:2:97:107	852706	2					
ANR	852718	IdentifierDeclStatement	"RANode * u , * v ;"	7503:2:214908:214921	852706	0	True				
ANR	852719	IdentifierDecl	* u		852706	0					
ANR	852720	IdentifierDeclType	RANode *		852706	0					
ANR	852721	Identifier	u		852706	1					
ANR	852722	IdentifierDecl	* v		852706	1					
ANR	852723	IdentifierDeclType	RANode *		852706	0					
ANR	852724	Identifier	v		852706	1					
ANR	852725	IdentifierDeclStatement	char * * args ;	7504:2:214925:214936	852706	1	True				
ANR	852726	IdentifierDecl	* * args		852706	0					
ANR	852727	IdentifierDeclType	char * *		852706	0					
ANR	852728	Identifier	args		852706	1					
ANR	852729	IdentifierDeclStatement	int n_args ;	7505:2:214940:214950	852706	2	True				
ANR	852730	IdentifierDecl	n_args		852706	0					
ANR	852731	IdentifierDeclType	int		852706	0					
ANR	852732	Identifier	n_args		852706	1					
ANR	852733	ExpressionStatement	"args = r_str_argv ( input + 1 , & n_args )"	7507:2:214955:214993	852706	3	True				
ANR	852734	AssignmentExpression	"args = r_str_argv ( input + 1 , & n_args )"		852706	0		=			
ANR	852735	Identifier	args		852706	0					
ANR	852736	CallExpression	"r_str_argv ( input + 1 , & n_args )"		852706	1					
ANR	852737	Callee	r_str_argv		852706	0					
ANR	852738	Identifier	r_str_argv		852706	0					
ANR	852739	ArgumentList	input + 1		852706	1					
ANR	852740	Argument	input + 1		852706	0					
ANR	852741	AdditiveExpression	input + 1		852706	0		+			
ANR	852742	Identifier	input		852706	0					
ANR	852743	PrimaryExpression	1		852706	1					
ANR	852744	Argument	& n_args		852706	1					
ANR	852745	UnaryOperationExpression	& n_args		852706	0					
ANR	852746	UnaryOperator	&		852706	0					
ANR	852747	Identifier	n_args		852706	1					
ANR	852748	IfStatement	if ( n_args != 2 )		852706	4					
ANR	852749	Condition	n_args != 2	7508:6:215001:215011	852706	0	True				
ANR	852750	EqualityExpression	n_args != 2		852706	0		!=			
ANR	852751	Identifier	n_args		852706	0					
ANR	852752	PrimaryExpression	2		852706	1					
ANR	852753	CompoundStatement		10:19:171:171	852706	1					
ANR	852754	ExpressionStatement	"r_cons_printf ( ""Wrong arguments\\n"" )"	7509:3:215019:215054	852706	0	True				
ANR	852755	CallExpression	"r_cons_printf ( ""Wrong arguments\\n"" )"		852706	0					
ANR	852756	Callee	r_cons_printf		852706	0					
ANR	852757	Identifier	r_cons_printf		852706	0					
ANR	852758	ArgumentList	"""Wrong arguments\\n"""		852706	1					
ANR	852759	Argument	"""Wrong arguments\\n"""		852706	0					
ANR	852760	PrimaryExpression	"""Wrong arguments\\n"""		852706	0					
ANR	852761	ExpressionStatement	r_str_argv_free ( args )	7510:3:215059:215081	852706	1	True				
ANR	852762	CallExpression	r_str_argv_free ( args )		852706	0					
ANR	852763	Callee	r_str_argv_free		852706	0					
ANR	852764	Identifier	r_str_argv_free		852706	0					
ANR	852765	ArgumentList	args		852706	1					
ANR	852766	Argument	args		852706	0					
ANR	852767	Identifier	args		852706	0					
ANR	852768	BreakStatement	break ;	7511:3:215086:215091	852706	2	True				
ANR	852769	ExpressionStatement	"u = r_agraph_get_node ( core -> graph , args [ 0 ] )"	7514:2:215100:215144	852706	5	True				
ANR	852770	AssignmentExpression	"u = r_agraph_get_node ( core -> graph , args [ 0 ] )"		852706	0		=			
ANR	852771	Identifier	u		852706	0					
ANR	852772	CallExpression	"r_agraph_get_node ( core -> graph , args [ 0 ] )"		852706	1					
ANR	852773	Callee	r_agraph_get_node		852706	0					
ANR	852774	Identifier	r_agraph_get_node		852706	0					
ANR	852775	ArgumentList	core -> graph		852706	1					
ANR	852776	Argument	core -> graph		852706	0					
ANR	852777	PtrMemberAccess	core -> graph		852706	0					
ANR	852778	Identifier	core		852706	0					
ANR	852779	Identifier	graph		852706	1					
ANR	852780	Argument	args [ 0 ]		852706	1					
ANR	852781	ArrayIndexing	args [ 0 ]		852706	0					
ANR	852782	Identifier	args		852706	0					
ANR	852783	PrimaryExpression	0		852706	1					
ANR	852784	ExpressionStatement	"v = r_agraph_get_node ( core -> graph , args [ 1 ] )"	7515:2:215148:215192	852706	6	True				
ANR	852785	AssignmentExpression	"v = r_agraph_get_node ( core -> graph , args [ 1 ] )"		852706	0		=			
ANR	852786	Identifier	v		852706	0					
ANR	852787	CallExpression	"r_agraph_get_node ( core -> graph , args [ 1 ] )"		852706	1					
ANR	852788	Callee	r_agraph_get_node		852706	0					
ANR	852789	Identifier	r_agraph_get_node		852706	0					
ANR	852790	ArgumentList	core -> graph		852706	1					
ANR	852791	Argument	core -> graph		852706	0					
ANR	852792	PtrMemberAccess	core -> graph		852706	0					
ANR	852793	Identifier	core		852706	0					
ANR	852794	Identifier	graph		852706	1					
ANR	852795	Argument	args [ 1 ]		852706	1					
ANR	852796	ArrayIndexing	args [ 1 ]		852706	0					
ANR	852797	Identifier	args		852706	0					
ANR	852798	PrimaryExpression	1		852706	1					
ANR	852799	IfStatement	if ( ! u || ! v )		852706	7					
ANR	852800	Condition	! u || ! v	7516:6:215200:215207	852706	0	True				
ANR	852801	OrExpression	! u || ! v		852706	0		||			
ANR	852802	UnaryOperationExpression	! u		852706	0					
ANR	852803	UnaryOperator	!		852706	0					
ANR	852804	Identifier	u		852706	1					
ANR	852805	UnaryOperationExpression	! v		852706	1					
ANR	852806	UnaryOperator	!		852706	0					
ANR	852807	Identifier	v		852706	1					
ANR	852808	CompoundStatement		18:16:367:367	852706	1					
ANR	852809	IfStatement	if ( ! u )		852706	0					
ANR	852810	Condition	! u	7517:7:215219:215220	852706	0	True				
ANR	852811	UnaryOperationExpression	! u		852706	0					
ANR	852812	UnaryOperator	!		852706	0					
ANR	852813	Identifier	u		852706	1					
ANR	852814	CompoundStatement		19:11:380:380	852706	1					
ANR	852815	ExpressionStatement	"r_cons_printf ( ""Node %s not found!\\n"" , args [ 0 ] )"	7518:4:215229:215276	852706	0	True				
ANR	852816	CallExpression	"r_cons_printf ( ""Node %s not found!\\n"" , args [ 0 ] )"		852706	0					
ANR	852817	Callee	r_cons_printf		852706	0					
ANR	852818	Identifier	r_cons_printf		852706	0					
ANR	852819	ArgumentList	"""Node %s not found!\\n"""		852706	1					
ANR	852820	Argument	"""Node %s not found!\\n"""		852706	0					
ANR	852821	PrimaryExpression	"""Node %s not found!\\n"""		852706	0					
ANR	852822	Argument	args [ 0 ]		852706	1					
ANR	852823	ArrayIndexing	args [ 0 ]		852706	0					
ANR	852824	Identifier	args		852706	0					
ANR	852825	PrimaryExpression	0		852706	1					
ANR	852826	ElseStatement	else		852706	0					
ANR	852827	CompoundStatement		21:10:445:445	852706	0					
ANR	852828	ExpressionStatement	"r_cons_printf ( ""Node %s not found!\\n"" , args [ 1 ] )"	7520:4:215294:215341	852706	0	True				
ANR	852829	CallExpression	"r_cons_printf ( ""Node %s not found!\\n"" , args [ 1 ] )"		852706	0					
ANR	852830	Callee	r_cons_printf		852706	0					
ANR	852831	Identifier	r_cons_printf		852706	0					
ANR	852832	ArgumentList	"""Node %s not found!\\n"""		852706	1					
ANR	852833	Argument	"""Node %s not found!\\n"""		852706	0					
ANR	852834	PrimaryExpression	"""Node %s not found!\\n"""		852706	0					
ANR	852835	Argument	args [ 1 ]		852706	1					
ANR	852836	ArrayIndexing	args [ 1 ]		852706	0					
ANR	852837	Identifier	args		852706	0					
ANR	852838	PrimaryExpression	1		852706	1					
ANR	852839	ExpressionStatement	r_str_argv_free ( args )	7522:3:215351:215373	852706	1	True				
ANR	852840	CallExpression	r_str_argv_free ( args )		852706	0					
ANR	852841	Callee	r_str_argv_free		852706	0					
ANR	852842	Identifier	r_str_argv_free		852706	0					
ANR	852843	ArgumentList	args		852706	1					
ANR	852844	Argument	args		852706	0					
ANR	852845	Identifier	args		852706	0					
ANR	852846	BreakStatement	break ;	7523:3:215378:215383	852706	2	True				
ANR	852847	IfStatement	if ( * input == ' ' )		852706	8					
ANR	852848	Condition	* input == ' '	7525:6:215395:215407	852706	0	True				
ANR	852849	EqualityExpression	* input == ' '		852706	0		==			
ANR	852850	UnaryOperationExpression	* input		852706	0					
ANR	852851	UnaryOperator	*		852706	0					
ANR	852852	Identifier	input		852706	1					
ANR	852853	PrimaryExpression	' '		852706	1					
ANR	852854	CompoundStatement		27:21:567:567	852706	1					
ANR	852855	ExpressionStatement	"r_agraph_add_edge ( core -> graph , u , v )"	7526:3:215415:215452	852706	0	True				
ANR	852856	CallExpression	"r_agraph_add_edge ( core -> graph , u , v )"		852706	0					
ANR	852857	Callee	r_agraph_add_edge		852706	0					
ANR	852858	Identifier	r_agraph_add_edge		852706	0					
ANR	852859	ArgumentList	core -> graph		852706	1					
ANR	852860	Argument	core -> graph		852706	0					
ANR	852861	PtrMemberAccess	core -> graph		852706	0					
ANR	852862	Identifier	core		852706	0					
ANR	852863	Identifier	graph		852706	1					
ANR	852864	Argument	u		852706	1					
ANR	852865	Identifier	u		852706	0					
ANR	852866	Argument	v		852706	2					
ANR	852867	Identifier	v		852706	0					
ANR	852868	ElseStatement	else		852706	0					
ANR	852869	CompoundStatement		29:9:620:620	852706	0					
ANR	852870	ExpressionStatement	"r_agraph_del_edge ( core -> graph , u , v )"	7528:3:215468:215505	852706	0	True				
ANR	852871	CallExpression	"r_agraph_del_edge ( core -> graph , u , v )"		852706	0					
ANR	852872	Callee	r_agraph_del_edge		852706	0					
ANR	852873	Identifier	r_agraph_del_edge		852706	0					
ANR	852874	ArgumentList	core -> graph		852706	1					
ANR	852875	Argument	core -> graph		852706	0					
ANR	852876	PtrMemberAccess	core -> graph		852706	0					
ANR	852877	Identifier	core		852706	0					
ANR	852878	Identifier	graph		852706	1					
ANR	852879	Argument	u		852706	1					
ANR	852880	Identifier	u		852706	0					
ANR	852881	Argument	v		852706	2					
ANR	852882	Identifier	v		852706	0					
ANR	852883	ExpressionStatement	r_str_argv_free ( args )	7530:2:215513:215535	852706	9	True				
ANR	852884	CallExpression	r_str_argv_free ( args )		852706	0					
ANR	852885	Callee	r_str_argv_free		852706	0					
ANR	852886	Identifier	r_str_argv_free		852706	0					
ANR	852887	ArgumentList	args		852706	1					
ANR	852888	Argument	args		852706	0					
ANR	852889	Identifier	args		852706	0					
ANR	852890	BreakStatement	break ;	7531:2:215539:215544	852706	10	True				
ANR	852891	Label	case '?' :	7533:1:215550:215558	852706	3	True				
ANR	852892	Label	default :	7534:1:215561:215568	852706	4	True				
ANR	852893	Identifier	default		852706	0					
ANR	852894	ExpressionStatement	"r_core_cmd_help ( core , help_msg_age )"	7535:2:215572:215608	852706	5	True				
ANR	852895	CallExpression	"r_core_cmd_help ( core , help_msg_age )"		852706	0					
ANR	852896	Callee	r_core_cmd_help		852706	0					
ANR	852897	Identifier	r_core_cmd_help		852706	0					
ANR	852898	ArgumentList	core		852706	1					
ANR	852899	Argument	core		852706	0					
ANR	852900	Identifier	core		852706	0					
ANR	852901	Argument	help_msg_age		852706	1					
ANR	852902	Identifier	help_msg_age		852706	0					
ANR	852903	BreakStatement	break ;	7536:2:215612:215617	852706	6	True				
ANR	852904	ReturnType	static void		852706	1					
ANR	852905	Identifier	cmd_agraph_edge		852706	2					
ANR	852906	ParameterList	"RCore * core , const char * input"		852706	3					
ANR	852907	Parameter	RCore * core	7499:28:214810:214820	852706	0	True				
ANR	852908	ParameterType	RCore *		852706	0					
ANR	852909	Identifier	core		852706	1					
ANR	852910	Parameter	const char * input	7499:41:214823:214839	852706	1	True				
ANR	852911	ParameterType	const char *		852706	0					
ANR	852912	Identifier	input		852706	1					
ANR	852913	CFGEntryNode	ENTRY		852706		True				
ANR	852914	CFGExitNode	EXIT		852706		True				
ANR	852915	Symbol	core -> graph		852706						
ANR	852916	Symbol	* input		852706						
ANR	852917	Symbol	* core		852706						
ANR	852918	Symbol	* args		852706						
ANR	852919	Symbol	args		852706						
ANR	852920	Symbol	core		852706						
ANR	852921	Symbol	input		852706						
ANR	852922	Symbol	n_args		852706						
ANR	852923	Symbol	u		852706						
ANR	852924	Symbol	v		852706						
ANR	852925	Symbol	r_agraph_get_node		852706						
ANR	852926	Symbol	& n_args		852706						
ANR	852927	Symbol	help_msg_age		852706						
ANR	852928	Symbol	r_str_argv		852706						
ANR	852929	Function	r_core_agraph_print	7540:0:215625:219122							
ANR	852930	FunctionDef	"r_core_agraph_print (RCore * core , int use_utf , const char * input)"		852929	0					
ANR	852931	CompoundStatement		7540:77:215702:219122	852929	0					
ANR	852932	IfStatement	if ( use_utf != - 1 )		852929	0					
ANR	852933	Condition	use_utf != - 1	7541:5:215709:215721	852929	0	True				
ANR	852934	EqualityExpression	use_utf != - 1		852929	0		!=			
ANR	852935	Identifier	use_utf		852929	0					
ANR	852936	UnaryOperationExpression	- 1		852929	1					
ANR	852937	UnaryOperator	-		852929	0					
ANR	852938	PrimaryExpression	1		852929	1					
ANR	852939	CompoundStatement		2:20:21:21	852929	1					
ANR	852940	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.utf8"" , use_utf )"	7542:2:215728:215778	852929	0	True				
ANR	852941	CallExpression	"r_config_set_i ( core -> config , ""scr.utf8"" , use_utf )"		852929	0					
ANR	852942	Callee	r_config_set_i		852929	0					
ANR	852943	Identifier	r_config_set_i		852929	0					
ANR	852944	ArgumentList	core -> config		852929	1					
ANR	852945	Argument	core -> config		852929	0					
ANR	852946	PtrMemberAccess	core -> config		852929	0					
ANR	852947	Identifier	core		852929	0					
ANR	852948	Identifier	config		852929	1					
ANR	852949	Argument	"""scr.utf8"""		852929	1					
ANR	852950	PrimaryExpression	"""scr.utf8"""		852929	0					
ANR	852951	Argument	use_utf		852929	2					
ANR	852952	Identifier	use_utf		852929	0					
ANR	852953	SwitchStatement	switch ( * input )		852929	1					
ANR	852954	Condition	* input	7544:9:215792:215797	852929	0	True				
ANR	852955	UnaryOperationExpression	* input		852929	0					
ANR	852956	UnaryOperator	*		852929	0					
ANR	852957	Identifier	input		852929	1					
ANR	852958	CompoundStatement		5:17:97:97	852929	1					
ANR	852959	Label	case 0 :	7545:1:215803:215809	852929	0	True				
ANR	852960	ExpressionStatement	"core -> graph -> can -> linemode = r_config_get_i ( core -> config , ""graph.linemode"" )"	7546:2:215813:215889	852929	1	True				
ANR	852961	AssignmentExpression	"core -> graph -> can -> linemode = r_config_get_i ( core -> config , ""graph.linemode"" )"		852929	0		=			
ANR	852962	PtrMemberAccess	core -> graph -> can -> linemode		852929	0					
ANR	852963	PtrMemberAccess	core -> graph -> can		852929	0					
ANR	852964	PtrMemberAccess	core -> graph		852929	0					
ANR	852965	Identifier	core		852929	0					
ANR	852966	Identifier	graph		852929	1					
ANR	852967	Identifier	can		852929	1					
ANR	852968	Identifier	linemode		852929	1					
ANR	852969	CallExpression	"r_config_get_i ( core -> config , ""graph.linemode"" )"		852929	1					
ANR	852970	Callee	r_config_get_i		852929	0					
ANR	852971	Identifier	r_config_get_i		852929	0					
ANR	852972	ArgumentList	core -> config		852929	1					
ANR	852973	Argument	core -> config		852929	0					
ANR	852974	PtrMemberAccess	core -> config		852929	0					
ANR	852975	Identifier	core		852929	0					
ANR	852976	Identifier	config		852929	1					
ANR	852977	Argument	"""graph.linemode"""		852929	1					
ANR	852978	PrimaryExpression	"""graph.linemode"""		852929	0					
ANR	852979	ExpressionStatement	"core -> graph -> can -> color = r_config_get_i ( core -> config , ""scr.color"" )"	7547:2:215893:215961	852929	2	True				
ANR	852980	AssignmentExpression	"core -> graph -> can -> color = r_config_get_i ( core -> config , ""scr.color"" )"		852929	0		=			
ANR	852981	PtrMemberAccess	core -> graph -> can -> color		852929	0					
ANR	852982	PtrMemberAccess	core -> graph -> can		852929	0					
ANR	852983	PtrMemberAccess	core -> graph		852929	0					
ANR	852984	Identifier	core		852929	0					
ANR	852985	Identifier	graph		852929	1					
ANR	852986	Identifier	can		852929	1					
ANR	852987	Identifier	color		852929	1					
ANR	852988	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		852929	1					
ANR	852989	Callee	r_config_get_i		852929	0					
ANR	852990	Identifier	r_config_get_i		852929	0					
ANR	852991	ArgumentList	core -> config		852929	1					
ANR	852992	Argument	core -> config		852929	0					
ANR	852993	PtrMemberAccess	core -> config		852929	0					
ANR	852994	Identifier	core		852929	0					
ANR	852995	Identifier	config		852929	1					
ANR	852996	Argument	"""scr.color"""		852929	1					
ANR	852997	PrimaryExpression	"""scr.color"""		852929	0					
ANR	852998	ExpressionStatement	"r_agraph_set_title ( core -> graph , r_config_get ( core -> config , ""graph.title"" ) )"	7548:2:215965:216044	852929	3	True				
ANR	852999	CallExpression	"r_agraph_set_title ( core -> graph , r_config_get ( core -> config , ""graph.title"" ) )"		852929	0					
ANR	853000	Callee	r_agraph_set_title		852929	0					
ANR	853001	Identifier	r_agraph_set_title		852929	0					
ANR	853002	ArgumentList	core -> graph		852929	1					
ANR	853003	Argument	core -> graph		852929	0					
ANR	853004	PtrMemberAccess	core -> graph		852929	0					
ANR	853005	Identifier	core		852929	0					
ANR	853006	Identifier	graph		852929	1					
ANR	853007	Argument	"r_config_get ( core -> config , ""graph.title"" )"		852929	1					
ANR	853008	CallExpression	"r_config_get ( core -> config , ""graph.title"" )"		852929	0					
ANR	853009	Callee	r_config_get		852929	0					
ANR	853010	Identifier	r_config_get		852929	0					
ANR	853011	ArgumentList	core -> config		852929	1					
ANR	853012	Argument	core -> config		852929	0					
ANR	853013	PtrMemberAccess	core -> config		852929	0					
ANR	853014	Identifier	core		852929	0					
ANR	853015	Identifier	config		852929	1					
ANR	853016	Argument	"""graph.title"""		852929	1					
ANR	853017	PrimaryExpression	"""graph.title"""		852929	0					
ANR	853018	ExpressionStatement	r_agraph_print ( core -> graph )	7550:2:216048:216076	852929	4	True				
ANR	853019	CallExpression	r_agraph_print ( core -> graph )		852929	0					
ANR	853020	Callee	r_agraph_print		852929	0					
ANR	853021	Identifier	r_agraph_print		852929	0					
ANR	853022	ArgumentList	core -> graph		852929	1					
ANR	853023	Argument	core -> graph		852929	0					
ANR	853024	PtrMemberAccess	core -> graph		852929	0					
ANR	853025	Identifier	core		852929	0					
ANR	853026	Identifier	graph		852929	1					
ANR	853027	BreakStatement	break ;	7551:2:216080:216085	852929	5	True				
ANR	853028	Label	case 't' :	7552:1:216088:216096	852929	6	True				
ANR	853029	CompoundStatement		15:2:452:504	852929	7					
ANR	853030	ExpressionStatement	core -> graph -> is_tiny = true	7553:2:216124:216151	852929	0	True				
ANR	853031	AssignmentExpression	core -> graph -> is_tiny = true		852929	0		=			
ANR	853032	PtrMemberAccess	core -> graph -> is_tiny		852929	0					
ANR	853033	PtrMemberAccess	core -> graph		852929	0					
ANR	853034	Identifier	core		852929	0					
ANR	853035	Identifier	graph		852929	1					
ANR	853036	Identifier	is_tiny		852929	1					
ANR	853037	Identifier	true		852929	1					
ANR	853038	IdentifierDeclStatement	"int e = r_config_get_i ( core -> config , ""graph.edges"" ) ;"	7554:2:216155:216207	852929	1	True				
ANR	853039	IdentifierDecl	"e = r_config_get_i ( core -> config , ""graph.edges"" )"		852929	0					
ANR	853040	IdentifierDeclType	int		852929	0					
ANR	853041	Identifier	e		852929	1					
ANR	853042	AssignmentExpression	"e = r_config_get_i ( core -> config , ""graph.edges"" )"		852929	2		=			
ANR	853043	Identifier	e		852929	0					
ANR	853044	CallExpression	"r_config_get_i ( core -> config , ""graph.edges"" )"		852929	1					
ANR	853045	Callee	r_config_get_i		852929	0					
ANR	853046	Identifier	r_config_get_i		852929	0					
ANR	853047	ArgumentList	core -> config		852929	1					
ANR	853048	Argument	core -> config		852929	0					
ANR	853049	PtrMemberAccess	core -> config		852929	0					
ANR	853050	Identifier	core		852929	0					
ANR	853051	Identifier	config		852929	1					
ANR	853052	Argument	"""graph.edges"""		852929	1					
ANR	853053	PrimaryExpression	"""graph.edges"""		852929	0					
ANR	853054	ExpressionStatement	"r_config_set_i ( core -> config , ""graph.edges"" , 0 )"	7555:2:216211:216258	852929	2	True				
ANR	853055	CallExpression	"r_config_set_i ( core -> config , ""graph.edges"" , 0 )"		852929	0					
ANR	853056	Callee	r_config_set_i		852929	0					
ANR	853057	Identifier	r_config_set_i		852929	0					
ANR	853058	ArgumentList	core -> config		852929	1					
ANR	853059	Argument	core -> config		852929	0					
ANR	853060	PtrMemberAccess	core -> config		852929	0					
ANR	853061	Identifier	core		852929	0					
ANR	853062	Identifier	config		852929	1					
ANR	853063	Argument	"""graph.edges"""		852929	1					
ANR	853064	PrimaryExpression	"""graph.edges"""		852929	0					
ANR	853065	Argument	0		852929	2					
ANR	853066	PrimaryExpression	0		852929	0					
ANR	853067	ExpressionStatement	"r_core_visual_graph ( core , core -> graph , NULL , false )"	7556:2:216262:216314	852929	3	True				
ANR	853068	CallExpression	"r_core_visual_graph ( core , core -> graph , NULL , false )"		852929	0					
ANR	853069	Callee	r_core_visual_graph		852929	0					
ANR	853070	Identifier	r_core_visual_graph		852929	0					
ANR	853071	ArgumentList	core		852929	1					
ANR	853072	Argument	core		852929	0					
ANR	853073	Identifier	core		852929	0					
ANR	853074	Argument	core -> graph		852929	1					
ANR	853075	PtrMemberAccess	core -> graph		852929	0					
ANR	853076	Identifier	core		852929	0					
ANR	853077	Identifier	graph		852929	1					
ANR	853078	Argument	NULL		852929	2					
ANR	853079	Identifier	NULL		852929	0					
ANR	853080	Argument	false		852929	3					
ANR	853081	Identifier	false		852929	0					
ANR	853082	ExpressionStatement	"r_config_set_i ( core -> config , ""graph.edges"" , e )"	7557:2:216318:216365	852929	4	True				
ANR	853083	CallExpression	"r_config_set_i ( core -> config , ""graph.edges"" , e )"		852929	0					
ANR	853084	Callee	r_config_set_i		852929	0					
ANR	853085	Identifier	r_config_set_i		852929	0					
ANR	853086	ArgumentList	core -> config		852929	1					
ANR	853087	Argument	core -> config		852929	0					
ANR	853088	PtrMemberAccess	core -> config		852929	0					
ANR	853089	Identifier	core		852929	0					
ANR	853090	Identifier	config		852929	1					
ANR	853091	Argument	"""graph.edges"""		852929	1					
ANR	853092	PrimaryExpression	"""graph.edges"""		852929	0					
ANR	853093	Argument	e		852929	2					
ANR	853094	Identifier	e		852929	0					
ANR	853095	ExpressionStatement	core -> graph -> is_tiny = false	7558:2:216369:216397	852929	5	True				
ANR	853096	AssignmentExpression	core -> graph -> is_tiny = false		852929	0		=			
ANR	853097	PtrMemberAccess	core -> graph -> is_tiny		852929	0					
ANR	853098	PtrMemberAccess	core -> graph		852929	0					
ANR	853099	Identifier	core		852929	0					
ANR	853100	Identifier	graph		852929	1					
ANR	853101	Identifier	is_tiny		852929	1					
ANR	853102	Identifier	false		852929	1					
ANR	853103	BreakStatement	break ;	7559:2:216401:216406	852929	6	True				
ANR	853104	Label	case 'k' :	7561:1:216413:216421	852929	8	True				
ANR	853105	CompoundStatement		25:2:779:820	852929	9					
ANR	853106	IdentifierDeclStatement	Sdb * db = r_agraph_get_sdb ( core -> graph ) ;	7563:2:216438:216478	852929	0	True				
ANR	853107	IdentifierDecl	* db = r_agraph_get_sdb ( core -> graph )		852929	0					
ANR	853108	IdentifierDeclType	Sdb *		852929	0					
ANR	853109	Identifier	db		852929	1					
ANR	853110	AssignmentExpression	* db = r_agraph_get_sdb ( core -> graph )		852929	2		=			
ANR	853111	Identifier	db		852929	0					
ANR	853112	CallExpression	r_agraph_get_sdb ( core -> graph )		852929	1					
ANR	853113	Callee	r_agraph_get_sdb		852929	0					
ANR	853114	Identifier	r_agraph_get_sdb		852929	0					
ANR	853115	ArgumentList	core -> graph		852929	1					
ANR	853116	Argument	core -> graph		852929	0					
ANR	853117	PtrMemberAccess	core -> graph		852929	0					
ANR	853118	Identifier	core		852929	0					
ANR	853119	Identifier	graph		852929	1					
ANR	853120	IdentifierDeclStatement	"char * o = sdb_querys ( db , ""null"" , 0 , ""*"" ) ;"	7564:2:216482:216523	852929	1	True				
ANR	853121	IdentifierDecl	"* o = sdb_querys ( db , ""null"" , 0 , ""*"" )"		852929	0					
ANR	853122	IdentifierDeclType	char *		852929	0					
ANR	853123	Identifier	o		852929	1					
ANR	853124	AssignmentExpression	"* o = sdb_querys ( db , ""null"" , 0 , ""*"" )"		852929	2		=			
ANR	853125	Identifier	o		852929	0					
ANR	853126	CallExpression	"sdb_querys ( db , ""null"" , 0 , ""*"" )"		852929	1					
ANR	853127	Callee	sdb_querys		852929	0					
ANR	853128	Identifier	sdb_querys		852929	0					
ANR	853129	ArgumentList	db		852929	1					
ANR	853130	Argument	db		852929	0					
ANR	853131	Identifier	db		852929	0					
ANR	853132	Argument	"""null"""		852929	1					
ANR	853133	PrimaryExpression	"""null"""		852929	0					
ANR	853134	Argument	0		852929	2					
ANR	853135	PrimaryExpression	0		852929	0					
ANR	853136	Argument	"""*"""		852929	3					
ANR	853137	PrimaryExpression	"""*"""		852929	0					
ANR	853138	ExpressionStatement	r_cons_print ( o )	7565:2:216527:216543	852929	2	True				
ANR	853139	CallExpression	r_cons_print ( o )		852929	0					
ANR	853140	Callee	r_cons_print		852929	0					
ANR	853141	Identifier	r_cons_print		852929	0					
ANR	853142	ArgumentList	o		852929	1					
ANR	853143	Argument	o		852929	0					
ANR	853144	Identifier	o		852929	0					
ANR	853145	ExpressionStatement	free ( o )	7566:2:216547:216555	852929	3	True				
ANR	853146	CallExpression	free ( o )		852929	0					
ANR	853147	Callee	free		852929	0					
ANR	853148	Identifier	free		852929	0					
ANR	853149	ArgumentList	o		852929	1					
ANR	853150	Argument	o		852929	0					
ANR	853151	Identifier	o		852929	0					
ANR	853152	BreakStatement	break ;	7567:2:216559:216564	852929	4	True				
ANR	853153	Label	case 'v' :	7569:1:216570:216578	852929	10	True				
ANR	853154	Label	case 'i' :	7570:1:216591:216599	852929	11	True				
ANR	853155	CompoundStatement		33:2:960:1011	852929	12					
ANR	853156	IdentifierDeclStatement	RANode * ran = r_agraph_get_first_node ( core -> graph ) ;	7572:2:216663:216714	852929	0	True				
ANR	853157	IdentifierDecl	* ran = r_agraph_get_first_node ( core -> graph )		852929	0					
ANR	853158	IdentifierDeclType	RANode *		852929	0					
ANR	853159	Identifier	ran		852929	1					
ANR	853160	AssignmentExpression	* ran = r_agraph_get_first_node ( core -> graph )		852929	2		=			
ANR	853161	Identifier	ran		852929	0					
ANR	853162	CallExpression	r_agraph_get_first_node ( core -> graph )		852929	1					
ANR	853163	Callee	r_agraph_get_first_node		852929	0					
ANR	853164	Identifier	r_agraph_get_first_node		852929	0					
ANR	853165	ArgumentList	core -> graph		852929	1					
ANR	853166	Argument	core -> graph		852929	0					
ANR	853167	PtrMemberAccess	core -> graph		852929	0					
ANR	853168	Identifier	core		852929	0					
ANR	853169	Identifier	graph		852929	1					
ANR	853170	IfStatement	if ( ran )		852929	1					
ANR	853171	Condition	ran	7573:6:216722:216724	852929	0	True				
ANR	853172	Identifier	ran		852929	0					
ANR	853173	CompoundStatement		43:3:1416:1485	852929	1					
ANR	853174	IdentifierDeclStatement	ut64 oseek = core -> offset ;	7574:3:216732:216757	852929	0	True				
ANR	853175	IdentifierDecl	oseek = core -> offset		852929	0					
ANR	853176	IdentifierDeclType	ut64		852929	0					
ANR	853177	Identifier	oseek		852929	1					
ANR	853178	AssignmentExpression	oseek = core -> offset		852929	2		=			
ANR	853179	Identifier	oseek		852929	0					
ANR	853180	PtrMemberAccess	core -> offset		852929	1					
ANR	853181	Identifier	core		852929	0					
ANR	853182	Identifier	offset		852929	1					
ANR	853183	ExpressionStatement	"r_agraph_set_title ( core -> graph , r_config_get ( core -> config , ""graph.title"" ) )"	7575:3:216762:216838	852929	1	True				
ANR	853184	CallExpression	"r_agraph_set_title ( core -> graph , r_config_get ( core -> config , ""graph.title"" ) )"		852929	0					
ANR	853185	Callee	r_agraph_set_title		852929	0					
ANR	853186	Identifier	r_agraph_set_title		852929	0					
ANR	853187	ArgumentList	core -> graph		852929	1					
ANR	853188	Argument	core -> graph		852929	0					
ANR	853189	PtrMemberAccess	core -> graph		852929	0					
ANR	853190	Identifier	core		852929	0					
ANR	853191	Identifier	graph		852929	1					
ANR	853192	Argument	"r_config_get ( core -> config , ""graph.title"" )"		852929	1					
ANR	853193	CallExpression	"r_config_get ( core -> config , ""graph.title"" )"		852929	0					
ANR	853194	Callee	r_config_get		852929	0					
ANR	853195	Identifier	r_config_get		852929	0					
ANR	853196	ArgumentList	core -> config		852929	1					
ANR	853197	Argument	core -> config		852929	0					
ANR	853198	PtrMemberAccess	core -> config		852929	0					
ANR	853199	Identifier	core		852929	0					
ANR	853200	Identifier	config		852929	1					
ANR	853201	Argument	"""graph.title"""		852929	1					
ANR	853202	PrimaryExpression	"""graph.title"""		852929	0					
ANR	853203	ExpressionStatement	"r_agraph_set_curnode ( core -> graph , ran )"	7576:3:216843:216882	852929	2	True				
ANR	853204	CallExpression	"r_agraph_set_curnode ( core -> graph , ran )"		852929	0					
ANR	853205	Callee	r_agraph_set_curnode		852929	0					
ANR	853206	Identifier	r_agraph_set_curnode		852929	0					
ANR	853207	ArgumentList	core -> graph		852929	1					
ANR	853208	Argument	core -> graph		852929	0					
ANR	853209	PtrMemberAccess	core -> graph		852929	0					
ANR	853210	Identifier	core		852929	0					
ANR	853211	Identifier	graph		852929	1					
ANR	853212	Argument	ran		852929	1					
ANR	853213	Identifier	ran		852929	0					
ANR	853214	ExpressionStatement	core -> graph -> force_update_seek = true	7577:3:216887:216924	852929	3	True				
ANR	853215	AssignmentExpression	core -> graph -> force_update_seek = true		852929	0		=			
ANR	853216	PtrMemberAccess	core -> graph -> force_update_seek		852929	0					
ANR	853217	PtrMemberAccess	core -> graph		852929	0					
ANR	853218	Identifier	core		852929	0					
ANR	853219	Identifier	graph		852929	1					
ANR	853220	Identifier	force_update_seek		852929	1					
ANR	853221	Identifier	true		852929	1					
ANR	853222	ExpressionStatement	core -> graph -> need_set_layout = true	7578:3:216929:216964	852929	4	True				
ANR	853223	AssignmentExpression	core -> graph -> need_set_layout = true		852929	0		=			
ANR	853224	PtrMemberAccess	core -> graph -> need_set_layout		852929	0					
ANR	853225	PtrMemberAccess	core -> graph		852929	0					
ANR	853226	Identifier	core		852929	0					
ANR	853227	Identifier	graph		852929	1					
ANR	853228	Identifier	need_set_layout		852929	1					
ANR	853229	Identifier	true		852929	1					
ANR	853230	ExpressionStatement	"core -> graph -> layout = r_config_get_i ( core -> config , ""graph.layout"" )"	7579:3:216969:217036	852929	5	True				
ANR	853231	AssignmentExpression	"core -> graph -> layout = r_config_get_i ( core -> config , ""graph.layout"" )"		852929	0		=			
ANR	853232	PtrMemberAccess	core -> graph -> layout		852929	0					
ANR	853233	PtrMemberAccess	core -> graph		852929	0					
ANR	853234	Identifier	core		852929	0					
ANR	853235	Identifier	graph		852929	1					
ANR	853236	Identifier	layout		852929	1					
ANR	853237	CallExpression	"r_config_get_i ( core -> config , ""graph.layout"" )"		852929	1					
ANR	853238	Callee	r_config_get_i		852929	0					
ANR	853239	Identifier	r_config_get_i		852929	0					
ANR	853240	ArgumentList	core -> config		852929	1					
ANR	853241	Argument	core -> config		852929	0					
ANR	853242	PtrMemberAccess	core -> config		852929	0					
ANR	853243	Identifier	core		852929	0					
ANR	853244	Identifier	config		852929	1					
ANR	853245	Argument	"""graph.layout"""		852929	1					
ANR	853246	PrimaryExpression	"""graph.layout"""		852929	0					
ANR	853247	IdentifierDeclStatement	int ov = r_cons_is_interactive ( ) ;	7580:3:217041:217074	852929	6	True				
ANR	853248	IdentifierDecl	ov = r_cons_is_interactive ( )		852929	0					
ANR	853249	IdentifierDeclType	int		852929	0					
ANR	853250	Identifier	ov		852929	1					
ANR	853251	AssignmentExpression	ov = r_cons_is_interactive ( )		852929	2		=			
ANR	853252	Identifier	ov		852929	0					
ANR	853253	CallExpression	r_cons_is_interactive ( )		852929	1					
ANR	853254	Callee	r_cons_is_interactive		852929	0					
ANR	853255	Identifier	r_cons_is_interactive		852929	0					
ANR	853256	ArgumentList			852929	1					
ANR	853257	ExpressionStatement	core -> graph -> need_update_dim = true	7581:3:217079:217114	852929	7	True				
ANR	853258	AssignmentExpression	core -> graph -> need_update_dim = true		852929	0		=			
ANR	853259	PtrMemberAccess	core -> graph -> need_update_dim		852929	0					
ANR	853260	PtrMemberAccess	core -> graph		852929	0					
ANR	853261	Identifier	core		852929	0					
ANR	853262	Identifier	graph		852929	1					
ANR	853263	Identifier	need_update_dim		852929	1					
ANR	853264	Identifier	true		852929	1					
ANR	853265	IdentifierDeclStatement	"int update_seek = r_core_visual_graph ( core , core -> graph , NULL , true ) ;"	7582:3:217119:217188	852929	8	True				
ANR	853266	IdentifierDecl	"update_seek = r_core_visual_graph ( core , core -> graph , NULL , true )"		852929	0					
ANR	853267	IdentifierDeclType	int		852929	0					
ANR	853268	Identifier	update_seek		852929	1					
ANR	853269	AssignmentExpression	"update_seek = r_core_visual_graph ( core , core -> graph , NULL , true )"		852929	2		=			
ANR	853270	Identifier	update_seek		852929	0					
ANR	853271	CallExpression	"r_core_visual_graph ( core , core -> graph , NULL , true )"		852929	1					
ANR	853272	Callee	r_core_visual_graph		852929	0					
ANR	853273	Identifier	r_core_visual_graph		852929	0					
ANR	853274	ArgumentList	core		852929	1					
ANR	853275	Argument	core		852929	0					
ANR	853276	Identifier	core		852929	0					
ANR	853277	Argument	core -> graph		852929	1					
ANR	853278	PtrMemberAccess	core -> graph		852929	0					
ANR	853279	Identifier	core		852929	0					
ANR	853280	Identifier	graph		852929	1					
ANR	853281	Argument	NULL		852929	2					
ANR	853282	Identifier	NULL		852929	0					
ANR	853283	Argument	true		852929	3					
ANR	853284	Identifier	true		852929	0					
ANR	853285	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , ov )"	7583:3:217193:217245	852929	9	True				
ANR	853286	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , ov )"		852929	0					
ANR	853287	Callee	r_config_set_i		852929	0					
ANR	853288	Identifier	r_config_set_i		852929	0					
ANR	853289	ArgumentList	core -> config		852929	1					
ANR	853290	Argument	core -> config		852929	0					
ANR	853291	PtrMemberAccess	core -> config		852929	0					
ANR	853292	Identifier	core		852929	0					
ANR	853293	Identifier	config		852929	1					
ANR	853294	Argument	"""scr.interactive"""		852929	1					
ANR	853295	PrimaryExpression	"""scr.interactive"""		852929	0					
ANR	853296	Argument	ov		852929	2					
ANR	853297	Identifier	ov		852929	0					
ANR	853298	ExpressionStatement	r_cons_show_cursor ( true )	7584:3:217250:217275	852929	10	True				
ANR	853299	CallExpression	r_cons_show_cursor ( true )		852929	0					
ANR	853300	Callee	r_cons_show_cursor		852929	0					
ANR	853301	Identifier	r_cons_show_cursor		852929	0					
ANR	853302	ArgumentList	true		852929	1					
ANR	853303	Argument	true		852929	0					
ANR	853304	Identifier	true		852929	0					
ANR	853305	ExpressionStatement	r_cons_enable_mouse ( false )	7585:3:217280:217307	852929	11	True				
ANR	853306	CallExpression	r_cons_enable_mouse ( false )		852929	0					
ANR	853307	Callee	r_cons_enable_mouse		852929	0					
ANR	853308	Identifier	r_cons_enable_mouse		852929	0					
ANR	853309	ArgumentList	false		852929	1					
ANR	853310	Argument	false		852929	0					
ANR	853311	Identifier	false		852929	0					
ANR	853312	IfStatement	if ( update_seek != - 1 )		852929	12					
ANR	853313	Condition	update_seek != - 1	7586:7:217316:217332	852929	0	True				
ANR	853314	EqualityExpression	update_seek != - 1		852929	0		!=			
ANR	853315	Identifier	update_seek		852929	0					
ANR	853316	UnaryOperationExpression	- 1		852929	1					
ANR	853317	UnaryOperator	-		852929	0					
ANR	853318	PrimaryExpression	1		852929	1					
ANR	853319	CompoundStatement		47:26:1632:1632	852929	1					
ANR	853320	ExpressionStatement	"r_core_seek ( core , oseek , 0 )"	7587:4:217341:217369	852929	0	True				
ANR	853321	CallExpression	"r_core_seek ( core , oseek , 0 )"		852929	0					
ANR	853322	Callee	r_core_seek		852929	0					
ANR	853323	Identifier	r_core_seek		852929	0					
ANR	853324	ArgumentList	core		852929	1					
ANR	853325	Argument	core		852929	0					
ANR	853326	Identifier	core		852929	0					
ANR	853327	Argument	oseek		852929	1					
ANR	853328	Identifier	oseek		852929	0					
ANR	853329	Argument	0		852929	2					
ANR	853330	PrimaryExpression	0		852929	0					
ANR	853331	ElseStatement	else		852929	0					
ANR	853332	CompoundStatement		50:9:1682:1682	852929	0					
ANR	853333	ExpressionStatement	"eprintf ( ""This graph contains no nodes\\n"" )"	7590:3:217390:217432	852929	0	True				
ANR	853334	CallExpression	"eprintf ( ""This graph contains no nodes\\n"" )"		852929	0					
ANR	853335	Callee	eprintf		852929	0					
ANR	853336	Identifier	eprintf		852929	0					
ANR	853337	ArgumentList	"""This graph contains no nodes\\n"""		852929	1					
ANR	853338	Argument	"""This graph contains no nodes\\n"""		852929	0					
ANR	853339	PrimaryExpression	"""This graph contains no nodes\\n"""		852929	0					
ANR	853340	BreakStatement	break ;	7592:2:217440:217445	852929	2	True				
ANR	853341	Label	case 'd' :	7594:1:217451:217459	852929	13	True				
ANR	853342	CompoundStatement		56:2:1785:1845	852929	14					
ANR	853343	IdentifierDeclStatement	"const char * font = r_config_get ( core -> config , ""graph.font"" ) ;"	7595:2:217488:217548	852929	0	True				
ANR	853344	IdentifierDecl	"* font = r_config_get ( core -> config , ""graph.font"" )"		852929	0					
ANR	853345	IdentifierDeclType	const char *		852929	0					
ANR	853346	Identifier	font		852929	1					
ANR	853347	AssignmentExpression	"* font = r_config_get ( core -> config , ""graph.font"" )"		852929	2		=			
ANR	853348	Identifier	font		852929	0					
ANR	853349	CallExpression	"r_config_get ( core -> config , ""graph.font"" )"		852929	1					
ANR	853350	Callee	r_config_get		852929	0					
ANR	853351	Identifier	r_config_get		852929	0					
ANR	853352	ArgumentList	core -> config		852929	1					
ANR	853353	Argument	core -> config		852929	0					
ANR	853354	PtrMemberAccess	core -> config		852929	0					
ANR	853355	Identifier	core		852929	0					
ANR	853356	Identifier	config		852929	1					
ANR	853357	Argument	"""graph.font"""		852929	1					
ANR	853358	PrimaryExpression	"""graph.font"""		852929	0					
ANR	853359	Statement	r_cons_printf	7596:2:217552:217564	852929	1	True				
ANR	853360	Statement	(	7596:16:217566:217566	852929	2	True				
ANR	853361	Statement	"""digraph code {\\nrankdir=LR;\\noutputorder=edgesfirst\\ngraph [bgcolor=azure];\\n"""	7596:17:217567:217645	852929	3	True				
ANR	853362	Statement	"""edge [arrowhead=normal, color=\\""#3030c0\\"" style=bold weight=2];\\n"""	7597:3:217650:217716	852929	4	True				
ANR	853363	Statement	"""node [fillcolor=white, style=filled shape=box """	7598:3:217721:217768	852929	5	True				
ANR	853364	Statement	"""fontname=\\""%s\\"" fontsize=\\""8\\""];\\n"""	7599:3:217773:217808	852929	6	True				
ANR	853365	Statement	","	7599:39:217809:217809	852929	7	True				
ANR	853366	Statement	font	7599:41:217811:217814	852929	8	True				
ANR	853367	Statement	)	7599:45:217815:217815	852929	9	True				
ANR	853368	ExpressionStatement		7599:46:217816:217816	852929	10	True				
ANR	853369	ExpressionStatement	"r_agraph_foreach ( core -> graph , agraph_print_node_dot , NULL )"	7600:2:217820:217879	852929	11	True				
ANR	853370	CallExpression	"r_agraph_foreach ( core -> graph , agraph_print_node_dot , NULL )"		852929	0					
ANR	853371	Callee	r_agraph_foreach		852929	0					
ANR	853372	Identifier	r_agraph_foreach		852929	0					
ANR	853373	ArgumentList	core -> graph		852929	1					
ANR	853374	Argument	core -> graph		852929	0					
ANR	853375	PtrMemberAccess	core -> graph		852929	0					
ANR	853376	Identifier	core		852929	0					
ANR	853377	Identifier	graph		852929	1					
ANR	853378	Argument	agraph_print_node_dot		852929	1					
ANR	853379	Identifier	agraph_print_node_dot		852929	0					
ANR	853380	Argument	NULL		852929	2					
ANR	853381	Identifier	NULL		852929	0					
ANR	853382	ExpressionStatement	"r_agraph_foreach_edge ( core -> graph , agraph_print_edge_dot , NULL )"	7601:2:217883:217947	852929	12	True				
ANR	853383	CallExpression	"r_agraph_foreach_edge ( core -> graph , agraph_print_edge_dot , NULL )"		852929	0					
ANR	853384	Callee	r_agraph_foreach_edge		852929	0					
ANR	853385	Identifier	r_agraph_foreach_edge		852929	0					
ANR	853386	ArgumentList	core -> graph		852929	1					
ANR	853387	Argument	core -> graph		852929	0					
ANR	853388	PtrMemberAccess	core -> graph		852929	0					
ANR	853389	Identifier	core		852929	0					
ANR	853390	Identifier	graph		852929	1					
ANR	853391	Argument	agraph_print_edge_dot		852929	1					
ANR	853392	Identifier	agraph_print_edge_dot		852929	0					
ANR	853393	Argument	NULL		852929	2					
ANR	853394	Identifier	NULL		852929	0					
ANR	853395	ExpressionStatement	"r_cons_printf ( ""}\\n"" )"	7602:2:217951:217972	852929	13	True				
ANR	853396	CallExpression	"r_cons_printf ( ""}\\n"" )"		852929	0					
ANR	853397	Callee	r_cons_printf		852929	0					
ANR	853398	Identifier	r_cons_printf		852929	0					
ANR	853399	ArgumentList	"""}\\n"""		852929	1					
ANR	853400	Argument	"""}\\n"""		852929	0					
ANR	853401	PrimaryExpression	"""}\\n"""		852929	0					
ANR	853402	BreakStatement	break ;	7603:2:217976:217981	852929	14	True				
ANR	853403	Label	case '*' :	7605:1:217988:217996	852929	15	True				
ANR	853404	ExpressionStatement	"r_agraph_foreach ( core -> graph , agraph_print_node , NULL )"	7606:2:218012:218067	852929	16	True				
ANR	853405	CallExpression	"r_agraph_foreach ( core -> graph , agraph_print_node , NULL )"		852929	0					
ANR	853406	Callee	r_agraph_foreach		852929	0					
ANR	853407	Identifier	r_agraph_foreach		852929	0					
ANR	853408	ArgumentList	core -> graph		852929	1					
ANR	853409	Argument	core -> graph		852929	0					
ANR	853410	PtrMemberAccess	core -> graph		852929	0					
ANR	853411	Identifier	core		852929	0					
ANR	853412	Identifier	graph		852929	1					
ANR	853413	Argument	agraph_print_node		852929	1					
ANR	853414	Identifier	agraph_print_node		852929	0					
ANR	853415	Argument	NULL		852929	2					
ANR	853416	Identifier	NULL		852929	0					
ANR	853417	ExpressionStatement	"r_agraph_foreach_edge ( core -> graph , agraph_print_edge , NULL )"	7607:2:218071:218131	852929	17	True				
ANR	853418	CallExpression	"r_agraph_foreach_edge ( core -> graph , agraph_print_edge , NULL )"		852929	0					
ANR	853419	Callee	r_agraph_foreach_edge		852929	0					
ANR	853420	Identifier	r_agraph_foreach_edge		852929	0					
ANR	853421	ArgumentList	core -> graph		852929	1					
ANR	853422	Argument	core -> graph		852929	0					
ANR	853423	PtrMemberAccess	core -> graph		852929	0					
ANR	853424	Identifier	core		852929	0					
ANR	853425	Identifier	graph		852929	1					
ANR	853426	Argument	agraph_print_edge		852929	1					
ANR	853427	Identifier	agraph_print_edge		852929	0					
ANR	853428	Argument	NULL		852929	2					
ANR	853429	Identifier	NULL		852929	0					
ANR	853430	BreakStatement	break ;	7608:2:218135:218140	852929	18	True				
ANR	853431	Label	case 'J' :	7609:1:218143:218151	852929	19	True				
ANR	853432	Label	case 'j' :	7610:1:218154:218162	852929	20	True				
ANR	853433	CompoundStatement		72:2:2465:2483	852929	21					
ANR	853434	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	7611:2:218168:218186	852929	0	True				
ANR	853435	IdentifierDecl	* pj = pj_new ( )		852929	0					
ANR	853436	IdentifierDeclType	PJ *		852929	0					
ANR	853437	Identifier	pj		852929	1					
ANR	853438	AssignmentExpression	* pj = pj_new ( )		852929	2		=			
ANR	853439	Identifier	pj		852929	0					
ANR	853440	CallExpression	pj_new ( )		852929	1					
ANR	853441	Callee	pj_new		852929	0					
ANR	853442	Identifier	pj_new		852929	0					
ANR	853443	ArgumentList			852929	1					
ANR	853444	IfStatement	if ( ! pj )		852929	1					
ANR	853445	Condition	! pj	7612:6:218194:218196	852929	0	True				
ANR	853446	UnaryOperationExpression	! pj		852929	0					
ANR	853447	UnaryOperator	!		852929	0					
ANR	853448	Identifier	pj		852929	1					
ANR	853449	CompoundStatement		73:11:2496:2496	852929	1					
ANR	853450	ReturnStatement	return ;	7613:3:218204:218210	852929	0	True				
ANR	853451	ExpressionStatement	pj_o ( pj )	7615:2:218218:218227	852929	2	True				
ANR	853452	CallExpression	pj_o ( pj )		852929	0					
ANR	853453	Callee	pj_o		852929	0					
ANR	853454	Identifier	pj_o		852929	0					
ANR	853455	ArgumentList	pj		852929	1					
ANR	853456	Argument	pj		852929	0					
ANR	853457	Identifier	pj		852929	0					
ANR	853458	ExpressionStatement	"pj_k ( pj , ""nodes"" )"	7616:2:218231:218249	852929	3	True				
ANR	853459	CallExpression	"pj_k ( pj , ""nodes"" )"		852929	0					
ANR	853460	Callee	pj_k		852929	0					
ANR	853461	Identifier	pj_k		852929	0					
ANR	853462	ArgumentList	pj		852929	1					
ANR	853463	Argument	pj		852929	0					
ANR	853464	Identifier	pj		852929	0					
ANR	853465	Argument	"""nodes"""		852929	1					
ANR	853466	PrimaryExpression	"""nodes"""		852929	0					
ANR	853467	ExpressionStatement	pj_a ( pj )	7617:2:218253:218262	852929	4	True				
ANR	853468	CallExpression	pj_a ( pj )		852929	0					
ANR	853469	Callee	pj_a		852929	0					
ANR	853470	Identifier	pj_a		852929	0					
ANR	853471	ArgumentList	pj		852929	1					
ANR	853472	Argument	pj		852929	0					
ANR	853473	Identifier	pj		852929	0					
ANR	853474	ExpressionStatement	"r_agraph_print_json ( core -> graph , pj )"	7618:2:218266:218303	852929	5	True				
ANR	853475	CallExpression	"r_agraph_print_json ( core -> graph , pj )"		852929	0					
ANR	853476	Callee	r_agraph_print_json		852929	0					
ANR	853477	Identifier	r_agraph_print_json		852929	0					
ANR	853478	ArgumentList	core -> graph		852929	1					
ANR	853479	Argument	core -> graph		852929	0					
ANR	853480	PtrMemberAccess	core -> graph		852929	0					
ANR	853481	Identifier	core		852929	0					
ANR	853482	Identifier	graph		852929	1					
ANR	853483	Argument	pj		852929	1					
ANR	853484	Identifier	pj		852929	0					
ANR	853485	ExpressionStatement	pj_end ( pj )	7619:2:218307:218318	852929	6	True				
ANR	853486	CallExpression	pj_end ( pj )		852929	0					
ANR	853487	Callee	pj_end		852929	0					
ANR	853488	Identifier	pj_end		852929	0					
ANR	853489	ArgumentList	pj		852929	1					
ANR	853490	Argument	pj		852929	0					
ANR	853491	Identifier	pj		852929	0					
ANR	853492	ExpressionStatement	pj_end ( pj )	7620:2:218322:218333	852929	7	True				
ANR	853493	CallExpression	pj_end ( pj )		852929	0					
ANR	853494	Callee	pj_end		852929	0					
ANR	853495	Identifier	pj_end		852929	0					
ANR	853496	ArgumentList	pj		852929	1					
ANR	853497	Argument	pj		852929	0					
ANR	853498	Identifier	pj		852929	0					
ANR	853499	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	7621:2:218337:218368	852929	8	True				
ANR	853500	CallExpression	r_cons_println ( pj_string ( pj ) )		852929	0					
ANR	853501	Callee	r_cons_println		852929	0					
ANR	853502	Identifier	r_cons_println		852929	0					
ANR	853503	ArgumentList	pj_string ( pj )		852929	1					
ANR	853504	Argument	pj_string ( pj )		852929	0					
ANR	853505	CallExpression	pj_string ( pj )		852929	0					
ANR	853506	Callee	pj_string		852929	0					
ANR	853507	Identifier	pj_string		852929	0					
ANR	853508	ArgumentList	pj		852929	1					
ANR	853509	Argument	pj		852929	0					
ANR	853510	Identifier	pj		852929	0					
ANR	853511	ExpressionStatement	pj_free ( pj )	7622:2:218372:218384	852929	9	True				
ANR	853512	CallExpression	pj_free ( pj )		852929	0					
ANR	853513	Callee	pj_free		852929	0					
ANR	853514	Identifier	pj_free		852929	0					
ANR	853515	ArgumentList	pj		852929	1					
ANR	853516	Argument	pj		852929	0					
ANR	853517	Identifier	pj		852929	0					
ANR	853518	BreakStatement	break ;	7623:3:218389:218394	852929	22	True				
ANR	853519	Label	case 'g' :	7624:1:218397:218405	852929	23	True				
ANR	853520	Statement	r_cons_printf	7625:2:218409:218421	852929	24	True				
ANR	853521	Statement	(	7625:16:218423:218423	852929	25	True				
ANR	853522	Statement	"""graph\\n[\\n"""	7625:17:218424:218435	852929	26	True				
ANR	853523	Statement	"""hierarchic 1\\n"""	7625:30:218437:218452	852929	27	True				
ANR	853524	Statement	"""label \\""\\""\\n"""	7625:47:218454:218467	852929	28	True				
ANR	853525	Statement	"""directed 1\\n"""	7625:62:218469:218482	852929	29	True				
ANR	853526	Statement	)	7625:76:218483:218483	852929	30	True				
ANR	853527	ExpressionStatement		7625:77:218484:218484	852929	31	True				
ANR	853528	ExpressionStatement	"r_agraph_foreach ( core -> graph , agraph_print_node_gml , NULL )"	7626:2:218488:218547	852929	32	True				
ANR	853529	CallExpression	"r_agraph_foreach ( core -> graph , agraph_print_node_gml , NULL )"		852929	0					
ANR	853530	Callee	r_agraph_foreach		852929	0					
ANR	853531	Identifier	r_agraph_foreach		852929	0					
ANR	853532	ArgumentList	core -> graph		852929	1					
ANR	853533	Argument	core -> graph		852929	0					
ANR	853534	PtrMemberAccess	core -> graph		852929	0					
ANR	853535	Identifier	core		852929	0					
ANR	853536	Identifier	graph		852929	1					
ANR	853537	Argument	agraph_print_node_gml		852929	1					
ANR	853538	Identifier	agraph_print_node_gml		852929	0					
ANR	853539	Argument	NULL		852929	2					
ANR	853540	Identifier	NULL		852929	0					
ANR	853541	ExpressionStatement	"r_agraph_foreach_edge ( core -> graph , agraph_print_edge_gml , NULL )"	7627:2:218551:218615	852929	33	True				
ANR	853542	CallExpression	"r_agraph_foreach_edge ( core -> graph , agraph_print_edge_gml , NULL )"		852929	0					
ANR	853543	Callee	r_agraph_foreach_edge		852929	0					
ANR	853544	Identifier	r_agraph_foreach_edge		852929	0					
ANR	853545	ArgumentList	core -> graph		852929	1					
ANR	853546	Argument	core -> graph		852929	0					
ANR	853547	PtrMemberAccess	core -> graph		852929	0					
ANR	853548	Identifier	core		852929	0					
ANR	853549	Identifier	graph		852929	1					
ANR	853550	Argument	agraph_print_edge_gml		852929	1					
ANR	853551	Identifier	agraph_print_edge_gml		852929	0					
ANR	853552	Argument	NULL		852929	2					
ANR	853553	Identifier	NULL		852929	0					
ANR	853554	ExpressionStatement	"r_cons_print ( ""]\\n"" )"	7628:2:218619:218639	852929	34	True				
ANR	853555	CallExpression	"r_cons_print ( ""]\\n"" )"		852929	0					
ANR	853556	Callee	r_cons_print		852929	0					
ANR	853557	Identifier	r_cons_print		852929	0					
ANR	853558	ArgumentList	"""]\\n"""		852929	1					
ANR	853559	Argument	"""]\\n"""		852929	0					
ANR	853560	PrimaryExpression	"""]\\n"""		852929	0					
ANR	853561	BreakStatement	break ;	7629:2:218643:218648	852929	35	True				
ANR	853562	Label	case 'w' :	7630:1:218651:218659	852929	36	True				
ANR	853563	CompoundStatement		91:10:2957:2957	852929	37					
ANR	853564	IfStatement	"if ( r_config_get_i ( core -> config , ""graph.web"" ) )"		852929	0					
ANR	853565	Condition	"r_config_get_i ( core -> config , ""graph.web"" )"	7631:6:218678:218719	852929	0	True				
ANR	853566	CallExpression	"r_config_get_i ( core -> config , ""graph.web"" )"		852929	0					
ANR	853567	Callee	r_config_get_i		852929	0					
ANR	853568	Identifier	r_config_get_i		852929	0					
ANR	853569	ArgumentList	core -> config		852929	1					
ANR	853570	Argument	core -> config		852929	0					
ANR	853571	PtrMemberAccess	core -> config		852929	0					
ANR	853572	Identifier	core		852929	0					
ANR	853573	Identifier	config		852929	1					
ANR	853574	Argument	"""graph.web"""		852929	1					
ANR	853575	PrimaryExpression	"""graph.web"""		852929	0					
ANR	853576	CompoundStatement		92:50:3019:3019	852929	1					
ANR	853577	ExpressionStatement	"r_core_cmd0 ( core , ""=H /graph/"" )"	7632:3:218727:218759	852929	0	True				
ANR	853578	CallExpression	"r_core_cmd0 ( core , ""=H /graph/"" )"		852929	0					
ANR	853579	Callee	r_core_cmd0		852929	0					
ANR	853580	Identifier	r_core_cmd0		852929	0					
ANR	853581	ArgumentList	core		852929	1					
ANR	853582	Argument	core		852929	0					
ANR	853583	Identifier	core		852929	0					
ANR	853584	Argument	"""=H /graph/"""		852929	1					
ANR	853585	PrimaryExpression	"""=H /graph/"""		852929	0					
ANR	853586	ElseStatement	else		852929	0					
ANR	853587	CompoundStatement		96:3:3125:3171	852929	0					
ANR	853588	IdentifierDeclStatement	const char * filename = r_str_trim_ro ( input + 1 ) ;	7634:3:218775:218823	852929	0	True				
ANR	853589	IdentifierDecl	* filename = r_str_trim_ro ( input + 1 )		852929	0					
ANR	853590	IdentifierDeclType	const char *		852929	0					
ANR	853591	Identifier	filename		852929	1					
ANR	853592	AssignmentExpression	* filename = r_str_trim_ro ( input + 1 )		852929	2		=			
ANR	853593	Identifier	filename		852929	0					
ANR	853594	CallExpression	r_str_trim_ro ( input + 1 )		852929	1					
ANR	853595	Callee	r_str_trim_ro		852929	0					
ANR	853596	Identifier	r_str_trim_ro		852929	0					
ANR	853597	ArgumentList	input + 1		852929	1					
ANR	853598	Argument	input + 1		852929	0					
ANR	853599	AdditiveExpression	input + 1		852929	0		+			
ANR	853600	Identifier	input		852929	0					
ANR	853601	PrimaryExpression	1		852929	1					
ANR	853602	IdentifierDeclStatement	"char * cmd = graph_cmd ( core , ""aggd"" , filename ) ;"	7635:3:218828:218874	852929	1	True				
ANR	853603	IdentifierDecl	"* cmd = graph_cmd ( core , ""aggd"" , filename )"		852929	0					
ANR	853604	IdentifierDeclType	char *		852929	0					
ANR	853605	Identifier	cmd		852929	1					
ANR	853606	AssignmentExpression	"* cmd = graph_cmd ( core , ""aggd"" , filename )"		852929	2		=			
ANR	853607	Identifier	cmd		852929	0					
ANR	853608	CallExpression	"graph_cmd ( core , ""aggd"" , filename )"		852929	1					
ANR	853609	Callee	graph_cmd		852929	0					
ANR	853610	Identifier	graph_cmd		852929	0					
ANR	853611	ArgumentList	core		852929	1					
ANR	853612	Argument	core		852929	0					
ANR	853613	Identifier	core		852929	0					
ANR	853614	Argument	"""aggd"""		852929	1					
ANR	853615	PrimaryExpression	"""aggd"""		852929	0					
ANR	853616	Argument	filename		852929	2					
ANR	853617	Identifier	filename		852929	0					
ANR	853618	IfStatement	if ( cmd && * cmd )		852929	2					
ANR	853619	Condition	cmd && * cmd	7636:7:218883:218893	852929	0	True				
ANR	853620	AndExpression	cmd && * cmd		852929	0		&&			
ANR	853621	Identifier	cmd		852929	0					
ANR	853622	UnaryOperationExpression	* cmd		852929	1					
ANR	853623	UnaryOperator	*		852929	0					
ANR	853624	Identifier	cmd		852929	1					
ANR	853625	CompoundStatement		97:20:3193:3193	852929	1					
ANR	853626	IfStatement	if ( input [ 1 ] == ' ' )		852929	0					
ANR	853627	Condition	input [ 1 ] == ' '	7637:8:218906:218920	852929	0	True				
ANR	853628	EqualityExpression	input [ 1 ] == ' '		852929	0		==			
ANR	853629	ArrayIndexing	input [ 1 ]		852929	0					
ANR	853630	Identifier	input		852929	0					
ANR	853631	PrimaryExpression	1		852929	1					
ANR	853632	PrimaryExpression	' '		852929	1					
ANR	853633	CompoundStatement		98:25:3220:3220	852929	1					
ANR	853634	ExpressionStatement	"r_cons_printf ( ""Saving to file '%s'...\\n"" , filename )"	7638:5:218930:218982	852929	0	True				
ANR	853635	CallExpression	"r_cons_printf ( ""Saving to file '%s'...\\n"" , filename )"		852929	0					
ANR	853636	Callee	r_cons_printf		852929	0					
ANR	853637	Identifier	r_cons_printf		852929	0					
ANR	853638	ArgumentList	"""Saving to file '%s'...\\n"""		852929	1					
ANR	853639	Argument	"""Saving to file '%s'...\\n"""		852929	0					
ANR	853640	PrimaryExpression	"""Saving to file '%s'...\\n"""		852929	0					
ANR	853641	Argument	filename		852929	1					
ANR	853642	Identifier	filename		852929	0					
ANR	853643	ExpressionStatement	r_cons_flush ( )	7639:5:218989:219004	852929	1	True				
ANR	853644	CallExpression	r_cons_flush ( )		852929	0					
ANR	853645	Callee	r_cons_flush		852929	0					
ANR	853646	Identifier	r_cons_flush		852929	0					
ANR	853647	ArgumentList			852929	1					
ANR	853648	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	7641:4:219016:219039	852929	1	True				
ANR	853649	CallExpression	"r_core_cmd0 ( core , cmd )"		852929	0					
ANR	853650	Callee	r_core_cmd0		852929	0					
ANR	853651	Identifier	r_core_cmd0		852929	0					
ANR	853652	ArgumentList	core		852929	1					
ANR	853653	Argument	core		852929	0					
ANR	853654	Identifier	core		852929	0					
ANR	853655	Argument	cmd		852929	1					
ANR	853656	Identifier	cmd		852929	0					
ANR	853657	ExpressionStatement	free ( cmd )	7643:3:219049:219059	852929	3	True				
ANR	853658	CallExpression	free ( cmd )		852929	0					
ANR	853659	Callee	free		852929	0					
ANR	853660	Identifier	free		852929	0					
ANR	853661	ArgumentList	cmd		852929	1					
ANR	853662	Argument	cmd		852929	0					
ANR	853663	Identifier	cmd		852929	0					
ANR	853664	BreakStatement	break ;	7645:2:219067:219072	852929	1	True				
ANR	853665	Label	default :	7647:1:219078:219085	852929	38	True				
ANR	853666	Identifier	default		852929	0					
ANR	853667	ExpressionStatement	"eprintf ( ""Usage: see ag?\\n"" )"	7648:2:219089:219117	852929	39	True				
ANR	853668	CallExpression	"eprintf ( ""Usage: see ag?\\n"" )"		852929	0					
ANR	853669	Callee	eprintf		852929	0					
ANR	853670	Identifier	eprintf		852929	0					
ANR	853671	ArgumentList	"""Usage: see ag?\\n"""		852929	1					
ANR	853672	Argument	"""Usage: see ag?\\n"""		852929	0					
ANR	853673	PrimaryExpression	"""Usage: see ag?\\n"""		852929	0					
ANR	853674	ReturnType	R_API void		852929	1					
ANR	853675	Identifier	r_core_agraph_print		852929	2					
ANR	853676	ParameterList	"RCore * core , int use_utf , const char * input"		852929	3					
ANR	853677	Parameter	RCore * core	7540:32:215657:215667	852929	0	True				
ANR	853678	ParameterType	RCore *		852929	0					
ANR	853679	Identifier	core		852929	1					
ANR	853680	Parameter	int use_utf	7540:45:215670:215680	852929	1	True				
ANR	853681	ParameterType	int		852929	0					
ANR	853682	Identifier	use_utf		852929	1					
ANR	853683	Parameter	const char * input	7540:58:215683:215699	852929	2	True				
ANR	853684	ParameterType	const char *		852929	0					
ANR	853685	Identifier	input		852929	1					
ANR	853686	CFGEntryNode	ENTRY		852929		True				
ANR	853687	CFGExitNode	EXIT		852929		True				
ANR	853688	Symbol	pj_string		852929						
ANR	853689	Symbol	core -> graph -> need_update_dim		852929						
ANR	853690	Symbol	* input		852929						
ANR	853691	Symbol	core -> offset		852929						
ANR	853692	Symbol	agraph_print_node_dot		852929						
ANR	853693	Symbol	r_core_visual_graph		852929						
ANR	853694	Symbol	agraph_print_node_gml		852929						
ANR	853695	Symbol	* core -> graph		852929						
ANR	853696	Symbol	* cmd		852929						
ANR	853697	Symbol	ran		852929						
ANR	853698	Symbol	r_cons_is_interactive		852929						
ANR	853699	Symbol	* * core -> graph		852929						
ANR	853700	Symbol	NULL		852929						
ANR	853701	Symbol	agraph_print_edge_gml		852929						
ANR	853702	Symbol	core -> graph -> is_tiny		852929						
ANR	853703	Symbol	agraph_print_edge_dot		852929						
ANR	853704	Symbol	sdb_querys		852929						
ANR	853705	Symbol	agraph_print_node		852929						
ANR	853706	Symbol	core -> graph -> can -> color		852929						
ANR	853707	Symbol	core		852929						
ANR	853708	Symbol	input		852929						
ANR	853709	Symbol	* * * core		852929						
ANR	853710	Symbol	filename		852929						
ANR	853711	Symbol	oseek		852929						
ANR	853712	Symbol	* core -> graph -> can		852929						
ANR	853713	Symbol	r_config_get_i		852929						
ANR	853714	Symbol	core -> graph -> can -> linemode		852929						
ANR	853715	Symbol	true		852929						
ANR	853716	Symbol	r_str_trim_ro		852929						
ANR	853717	Symbol	cmd		852929						
ANR	853718	Symbol	r_agraph_get_first_node		852929						
ANR	853719	Symbol	* core		852929						
ANR	853720	Symbol	r_config_get		852929						
ANR	853721	Symbol	core -> graph -> force_update_seek		852929						
ANR	853722	Symbol	core -> graph -> need_set_layout		852929						
ANR	853723	Symbol	graph_cmd		852929						
ANR	853724	Symbol	use_utf		852929						
ANR	853725	Symbol	* * core		852929						
ANR	853726	Symbol	core -> config		852929						
ANR	853727	Symbol	core -> graph		852929						
ANR	853728	Symbol	e		852929						
ANR	853729	Symbol	ov		852929						
ANR	853730	Symbol	false		852929						
ANR	853731	Symbol	agraph_print_edge		852929						
ANR	853732	Symbol	r_agraph_get_sdb		852929						
ANR	853733	Symbol	o		852929						
ANR	853734	Symbol	core -> graph -> can		852929						
ANR	853735	Symbol	pj		852929						
ANR	853736	Symbol	pj_new		852929						
ANR	853737	Symbol	core -> graph -> layout		852929						
ANR	853738	Symbol	db		852929						
ANR	853739	Symbol	update_seek		852929						
ANR	853740	Symbol	font		852929						
ANR	853741	Function	cmd_anal_graph	7652:0:219125:230925							
ANR	853742	FunctionDef	"cmd_anal_graph (RCore * core , const char * input)"		853741	0					
ANR	853743	CompoundStatement		7652:59:219184:230925	853741	0					
ANR	853744	ExpressionStatement	"core -> graph -> show_node_titles = r_config_get_i ( core -> config , ""graph.ntitles"" )"	7653:1:219187:219265	853741	0	True				
ANR	853745	AssignmentExpression	"core -> graph -> show_node_titles = r_config_get_i ( core -> config , ""graph.ntitles"" )"		853741	0		=			
ANR	853746	PtrMemberAccess	core -> graph -> show_node_titles		853741	0					
ANR	853747	PtrMemberAccess	core -> graph		853741	0					
ANR	853748	Identifier	core		853741	0					
ANR	853749	Identifier	graph		853741	1					
ANR	853750	Identifier	show_node_titles		853741	1					
ANR	853751	CallExpression	"r_config_get_i ( core -> config , ""graph.ntitles"" )"		853741	1					
ANR	853752	Callee	r_config_get_i		853741	0					
ANR	853753	Identifier	r_config_get_i		853741	0					
ANR	853754	ArgumentList	core -> config		853741	1					
ANR	853755	Argument	core -> config		853741	0					
ANR	853756	PtrMemberAccess	core -> config		853741	0					
ANR	853757	Identifier	core		853741	0					
ANR	853758	Identifier	config		853741	1					
ANR	853759	Argument	"""graph.ntitles"""		853741	1					
ANR	853760	PrimaryExpression	"""graph.ntitles"""		853741	0					
ANR	853761	ExpressionStatement	r_cons_enable_highlight ( false )	7654:1:219268:219299	853741	1	True				
ANR	853762	CallExpression	r_cons_enable_highlight ( false )		853741	0					
ANR	853763	Callee	r_cons_enable_highlight		853741	0					
ANR	853764	Identifier	r_cons_enable_highlight		853741	0					
ANR	853765	ArgumentList	false		853741	1					
ANR	853766	Argument	false		853741	0					
ANR	853767	Identifier	false		853741	0					
ANR	853768	SwitchStatement	switch ( input [ 0 ] )		853741	2					
ANR	853769	Condition	input [ 0 ]	7655:9:219310:219317	853741	0	True				
ANR	853770	ArrayIndexing	input [ 0 ]		853741	0					
ANR	853771	Identifier	input		853741	0					
ANR	853772	PrimaryExpression	0		853741	1					
ANR	853773	CompoundStatement		4:19:135:135	853741	1					
ANR	853774	Label	case 'f' :	7656:1:219323:219331	853741	0	True				
ANR	853775	SwitchStatement	switch ( input [ 1 ] )		853741	1					
ANR	853776	Condition	input [ 1 ]	7657:10:219352:219359	853741	0	True				
ANR	853777	ArrayIndexing	input [ 1 ]		853741	0					
ANR	853778	Identifier	input		853741	0					
ANR	853779	PrimaryExpression	1		853741	1					
ANR	853780	CompoundStatement		17:3:480:567	853741	1					
ANR	853781	Label	case 0 :	7658:2:219366:219372	853741	0	True				
ANR	853782	ExpressionStatement	"r_core_visual_graph ( core , NULL , NULL , false )"	7659:3:219386:219431	853741	1	True				
ANR	853783	CallExpression	"r_core_visual_graph ( core , NULL , NULL , false )"		853741	0					
ANR	853784	Callee	r_core_visual_graph		853741	0					
ANR	853785	Identifier	r_core_visual_graph		853741	0					
ANR	853786	ArgumentList	core		853741	1					
ANR	853787	Argument	core		853741	0					
ANR	853788	Identifier	core		853741	0					
ANR	853789	Argument	NULL		853741	1					
ANR	853790	Identifier	NULL		853741	0					
ANR	853791	Argument	NULL		853741	2					
ANR	853792	Identifier	NULL		853741	0					
ANR	853793	Argument	false		853741	3					
ANR	853794	Identifier	false		853741	0					
ANR	853795	BreakStatement	break ;	7660:3:219436:219441	853741	2	True				
ANR	853796	Label	case ' ' :	7661:2:219445:219453	853741	3	True				
ANR	853797	CompoundStatement		11:3:284:352	853741	4					
ANR	853798	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	7662:3:219469:219537	853741	0	True				
ANR	853799	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		853741	0					
ANR	853800	IdentifierDeclType	RAnalFunction *		853741	0					
ANR	853801	Identifier	fcn		853741	1					
ANR	853802	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		853741	2		=			
ANR	853803	Identifier	fcn		853741	0					
ANR	853804	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		853741	1					
ANR	853805	Callee	r_anal_get_fcn_in		853741	0					
ANR	853806	Identifier	r_anal_get_fcn_in		853741	0					
ANR	853807	ArgumentList	core -> anal		853741	1					
ANR	853808	Argument	core -> anal		853741	0					
ANR	853809	PtrMemberAccess	core -> anal		853741	0					
ANR	853810	Identifier	core		853741	0					
ANR	853811	Identifier	anal		853741	1					
ANR	853812	Argument	core -> offset		853741	1					
ANR	853813	PtrMemberAccess	core -> offset		853741	0					
ANR	853814	Identifier	core		853741	0					
ANR	853815	Identifier	offset		853741	1					
ANR	853816	Argument	0		853741	2					
ANR	853817	PrimaryExpression	0		853741	0					
ANR	853818	ExpressionStatement	"r_core_visual_graph ( core , NULL , fcn , false )"	7663:3:219542:219586	853741	1	True				
ANR	853819	CallExpression	"r_core_visual_graph ( core , NULL , fcn , false )"		853741	0					
ANR	853820	Callee	r_core_visual_graph		853741	0					
ANR	853821	Identifier	r_core_visual_graph		853741	0					
ANR	853822	ArgumentList	core		853741	1					
ANR	853823	Argument	core		853741	0					
ANR	853824	Identifier	core		853741	0					
ANR	853825	Argument	NULL		853741	1					
ANR	853826	Identifier	NULL		853741	0					
ANR	853827	Argument	fcn		853741	2					
ANR	853828	Identifier	fcn		853741	0					
ANR	853829	Argument	false		853741	3					
ANR	853830	Identifier	false		853741	0					
ANR	853831	BreakStatement	break ;	7664:3:219591:219596	853741	2	True				
ANR	853832	Label	case 'v' :	7666:2:219605:219613	853741	5	True				
ANR	853833	ExpressionStatement	"eprintf ( ""\\rRendering graph..."" )"	7667:3:219628:219660	853741	6	True				
ANR	853834	CallExpression	"eprintf ( ""\\rRendering graph..."" )"		853741	0					
ANR	853835	Callee	eprintf		853741	0					
ANR	853836	Identifier	eprintf		853741	0					
ANR	853837	ArgumentList	"""\\rRendering graph..."""		853741	1					
ANR	853838	Argument	"""\\rRendering graph..."""		853741	0					
ANR	853839	PrimaryExpression	"""\\rRendering graph..."""		853741	0					
ANR	853840	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_ROOT ) ;"	7668:3:219665:219752	853741	7	True				
ANR	853841	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_ROOT )"		853741	0					
ANR	853842	IdentifierDeclType	RAnalFunction *		853741	0					
ANR	853843	Identifier	fcn		853741	1					
ANR	853844	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_ROOT )"		853741	2		=			
ANR	853845	Identifier	fcn		853741	0					
ANR	853846	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_ROOT )"		853741	1					
ANR	853847	Callee	r_anal_get_fcn_in		853741	0					
ANR	853848	Identifier	r_anal_get_fcn_in		853741	0					
ANR	853849	ArgumentList	core -> anal		853741	1					
ANR	853850	Argument	core -> anal		853741	0					
ANR	853851	PtrMemberAccess	core -> anal		853741	0					
ANR	853852	Identifier	core		853741	0					
ANR	853853	Identifier	anal		853741	1					
ANR	853854	Argument	core -> offset		853741	1					
ANR	853855	PtrMemberAccess	core -> offset		853741	0					
ANR	853856	Identifier	core		853741	0					
ANR	853857	Identifier	offset		853741	1					
ANR	853858	Argument	R_ANAL_FCN_TYPE_ROOT		853741	2					
ANR	853859	Identifier	R_ANAL_FCN_TYPE_ROOT		853741	0					
ANR	853860	IfStatement	if ( fcn )		853741	8					
ANR	853861	Condition	fcn	7669:7:219761:219763	853741	0	True				
ANR	853862	Identifier	fcn		853741	0					
ANR	853863	CompoundStatement		18:12:581:581	853741	1					
ANR	853864	ExpressionStatement	"r_core_visual_graph ( core , NULL , fcn , 1 )"	7670:4:219772:219812	853741	0	True				
ANR	853865	CallExpression	"r_core_visual_graph ( core , NULL , fcn , 1 )"		853741	0					
ANR	853866	Callee	r_core_visual_graph		853741	0					
ANR	853867	Identifier	r_core_visual_graph		853741	0					
ANR	853868	ArgumentList	core		853741	1					
ANR	853869	Argument	core		853741	0					
ANR	853870	Identifier	core		853741	0					
ANR	853871	Argument	NULL		853741	1					
ANR	853872	Identifier	NULL		853741	0					
ANR	853873	Argument	fcn		853741	2					
ANR	853874	Identifier	fcn		853741	0					
ANR	853875	Argument	1		853741	3					
ANR	853876	PrimaryExpression	1		853741	0					
ANR	853877	ExpressionStatement	r_cons_enable_mouse ( false )	7672:3:219822:219849	853741	9	True				
ANR	853878	CallExpression	r_cons_enable_mouse ( false )		853741	0					
ANR	853879	Callee	r_cons_enable_mouse		853741	0					
ANR	853880	Identifier	r_cons_enable_mouse		853741	0					
ANR	853881	ArgumentList	false		853741	1					
ANR	853882	Argument	false		853741	0					
ANR	853883	Identifier	false		853741	0					
ANR	853884	ExpressionStatement	r_cons_show_cursor ( true )	7673:3:219854:219879	853741	10	True				
ANR	853885	CallExpression	r_cons_show_cursor ( true )		853741	0					
ANR	853886	Callee	r_cons_show_cursor		853741	0					
ANR	853887	Identifier	r_cons_show_cursor		853741	0					
ANR	853888	ArgumentList	true		853741	1					
ANR	853889	Argument	true		853741	0					
ANR	853890	Identifier	true		853741	0					
ANR	853891	BreakStatement	break ;	7674:3:219884:219889	853741	11	True				
ANR	853892	Label	case 't' :	7675:2:219893:219901	853741	12	True				
ANR	853893	CompoundStatement		27:3:855:923	853741	13					
ANR	853894	IdentifierDeclStatement	"int e = r_config_get_i ( core -> config , ""graph.edges"" ) ;"	7676:3:219931:219983	853741	0	True				
ANR	853895	IdentifierDecl	"e = r_config_get_i ( core -> config , ""graph.edges"" )"		853741	0					
ANR	853896	IdentifierDeclType	int		853741	0					
ANR	853897	Identifier	e		853741	1					
ANR	853898	AssignmentExpression	"e = r_config_get_i ( core -> config , ""graph.edges"" )"		853741	2		=			
ANR	853899	Identifier	e		853741	0					
ANR	853900	CallExpression	"r_config_get_i ( core -> config , ""graph.edges"" )"		853741	1					
ANR	853901	Callee	r_config_get_i		853741	0					
ANR	853902	Identifier	r_config_get_i		853741	0					
ANR	853903	ArgumentList	core -> config		853741	1					
ANR	853904	Argument	core -> config		853741	0					
ANR	853905	PtrMemberAccess	core -> config		853741	0					
ANR	853906	Identifier	core		853741	0					
ANR	853907	Identifier	config		853741	1					
ANR	853908	Argument	"""graph.edges"""		853741	1					
ANR	853909	PrimaryExpression	"""graph.edges"""		853741	0					
ANR	853910	ExpressionStatement	"r_config_set_i ( core -> config , ""graph.edges"" , 0 )"	7677:3:219988:220035	853741	1	True				
ANR	853911	CallExpression	"r_config_set_i ( core -> config , ""graph.edges"" , 0 )"		853741	0					
ANR	853912	Callee	r_config_set_i		853741	0					
ANR	853913	Identifier	r_config_set_i		853741	0					
ANR	853914	ArgumentList	core -> config		853741	1					
ANR	853915	Argument	core -> config		853741	0					
ANR	853916	PtrMemberAccess	core -> config		853741	0					
ANR	853917	Identifier	core		853741	0					
ANR	853918	Identifier	config		853741	1					
ANR	853919	Argument	"""graph.edges"""		853741	1					
ANR	853920	PrimaryExpression	"""graph.edges"""		853741	0					
ANR	853921	Argument	0		853741	2					
ANR	853922	PrimaryExpression	0		853741	0					
ANR	853923	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	7678:3:220040:220108	853741	2	True				
ANR	853924	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		853741	0					
ANR	853925	IdentifierDeclType	RAnalFunction *		853741	0					
ANR	853926	Identifier	fcn		853741	1					
ANR	853927	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		853741	2		=			
ANR	853928	Identifier	fcn		853741	0					
ANR	853929	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		853741	1					
ANR	853930	Callee	r_anal_get_fcn_in		853741	0					
ANR	853931	Identifier	r_anal_get_fcn_in		853741	0					
ANR	853932	ArgumentList	core -> anal		853741	1					
ANR	853933	Argument	core -> anal		853741	0					
ANR	853934	PtrMemberAccess	core -> anal		853741	0					
ANR	853935	Identifier	core		853741	0					
ANR	853936	Identifier	anal		853741	1					
ANR	853937	Argument	core -> offset		853741	1					
ANR	853938	PtrMemberAccess	core -> offset		853741	0					
ANR	853939	Identifier	core		853741	0					
ANR	853940	Identifier	offset		853741	1					
ANR	853941	Argument	0		853741	2					
ANR	853942	PrimaryExpression	0		853741	0					
ANR	853943	ExpressionStatement	"r_core_visual_graph ( core , NULL , fcn , 2 )"	7679:3:220113:220153	853741	3	True				
ANR	853944	CallExpression	"r_core_visual_graph ( core , NULL , fcn , 2 )"		853741	0					
ANR	853945	Callee	r_core_visual_graph		853741	0					
ANR	853946	Identifier	r_core_visual_graph		853741	0					
ANR	853947	ArgumentList	core		853741	1					
ANR	853948	Argument	core		853741	0					
ANR	853949	Identifier	core		853741	0					
ANR	853950	Argument	NULL		853741	1					
ANR	853951	Identifier	NULL		853741	0					
ANR	853952	Argument	fcn		853741	2					
ANR	853953	Identifier	fcn		853741	0					
ANR	853954	Argument	2		853741	3					
ANR	853955	PrimaryExpression	2		853741	0					
ANR	853956	ExpressionStatement	"r_config_set_i ( core -> config , ""graph.edges"" , e )"	7680:3:220158:220205	853741	4	True				
ANR	853957	CallExpression	"r_config_set_i ( core -> config , ""graph.edges"" , e )"		853741	0					
ANR	853958	Callee	r_config_set_i		853741	0					
ANR	853959	Identifier	r_config_set_i		853741	0					
ANR	853960	ArgumentList	core -> config		853741	1					
ANR	853961	Argument	core -> config		853741	0					
ANR	853962	PtrMemberAccess	core -> config		853741	0					
ANR	853963	Identifier	core		853741	0					
ANR	853964	Identifier	config		853741	1					
ANR	853965	Argument	"""graph.edges"""		853741	1					
ANR	853966	PrimaryExpression	"""graph.edges"""		853741	0					
ANR	853967	Argument	e		853741	2					
ANR	853968	Identifier	e		853741	0					
ANR	853969	BreakStatement	break ;	7681:3:220210:220215	853741	5	True				
ANR	853970	Label	case 'd' :	7683:2:220224:220232	853741	14	True				
ANR	853971	IfStatement	if ( input [ 2 ] == 'm' )		853741	15					
ANR	853972	Condition	input [ 2 ] == 'm'	7684:7:220251:220265	853741	0	True				
ANR	853973	EqualityExpression	input [ 2 ] == 'm'		853741	0		==			
ANR	853974	ArrayIndexing	input [ 2 ]		853741	0					
ANR	853975	Identifier	input		853741	0					
ANR	853976	PrimaryExpression	2		853741	1					
ANR	853977	PrimaryExpression	'm'		853741	1					
ANR	853978	CompoundStatement		33:24:1083:1083	853741	1					
ANR	853979	ExpressionStatement	"r_core_anal_graph ( core , r_num_math ( core -> num , input + 3 ) , R_CORE_ANAL_GRAPHLINES )"	7685:4:220274:220362	853741	0	True				
ANR	853980	CallExpression	"r_core_anal_graph ( core , r_num_math ( core -> num , input + 3 ) , R_CORE_ANAL_GRAPHLINES )"		853741	0					
ANR	853981	Callee	r_core_anal_graph		853741	0					
ANR	853982	Identifier	r_core_anal_graph		853741	0					
ANR	853983	ArgumentList	core		853741	1					
ANR	853984	Argument	core		853741	0					
ANR	853985	Identifier	core		853741	0					
ANR	853986	Argument	"r_num_math ( core -> num , input + 3 )"		853741	1					
ANR	853987	CallExpression	"r_num_math ( core -> num , input + 3 )"		853741	0					
ANR	853988	Callee	r_num_math		853741	0					
ANR	853989	Identifier	r_num_math		853741	0					
ANR	853990	ArgumentList	core -> num		853741	1					
ANR	853991	Argument	core -> num		853741	0					
ANR	853992	PtrMemberAccess	core -> num		853741	0					
ANR	853993	Identifier	core		853741	0					
ANR	853994	Identifier	num		853741	1					
ANR	853995	Argument	input + 3		853741	1					
ANR	853996	AdditiveExpression	input + 3		853741	0		+			
ANR	853997	Identifier	input		853741	0					
ANR	853998	PrimaryExpression	3		853741	1					
ANR	853999	Argument	R_CORE_ANAL_GRAPHLINES		853741	2					
ANR	854000	Identifier	R_CORE_ANAL_GRAPHLINES		853741	0					
ANR	854001	ElseStatement	else		853741	0					
ANR	854002	CompoundStatement		36:10:1189:1189	853741	0					
ANR	854003	ExpressionStatement	"r_core_anal_graph ( core , r_num_math ( core -> num , input + 2 ) , R_CORE_ANAL_GRAPHBODY )"	7688:4:220380:220467	853741	0	True				
ANR	854004	CallExpression	"r_core_anal_graph ( core , r_num_math ( core -> num , input + 2 ) , R_CORE_ANAL_GRAPHBODY )"		853741	0					
ANR	854005	Callee	r_core_anal_graph		853741	0					
ANR	854006	Identifier	r_core_anal_graph		853741	0					
ANR	854007	ArgumentList	core		853741	1					
ANR	854008	Argument	core		853741	0					
ANR	854009	Identifier	core		853741	0					
ANR	854010	Argument	"r_num_math ( core -> num , input + 2 )"		853741	1					
ANR	854011	CallExpression	"r_num_math ( core -> num , input + 2 )"		853741	0					
ANR	854012	Callee	r_num_math		853741	0					
ANR	854013	Identifier	r_num_math		853741	0					
ANR	854014	ArgumentList	core -> num		853741	1					
ANR	854015	Argument	core -> num		853741	0					
ANR	854016	PtrMemberAccess	core -> num		853741	0					
ANR	854017	Identifier	core		853741	0					
ANR	854018	Identifier	num		853741	1					
ANR	854019	Argument	input + 2		853741	1					
ANR	854020	AdditiveExpression	input + 2		853741	0		+			
ANR	854021	Identifier	input		853741	0					
ANR	854022	PrimaryExpression	2		853741	1					
ANR	854023	Argument	R_CORE_ANAL_GRAPHBODY		853741	2					
ANR	854024	Identifier	R_CORE_ANAL_GRAPHBODY		853741	0					
ANR	854025	BreakStatement	break ;	7691:3:220477:220482	853741	16	True				
ANR	854026	Label	case 'j' :	7692:2:220486:220494	853741	17	True				
ANR	854027	ExpressionStatement	"r_core_anal_graph ( core , r_num_math ( core -> num , input + 2 ) , R_CORE_ANAL_JSON )"	7693:3:220509:220586	853741	18	True				
ANR	854028	CallExpression	"r_core_anal_graph ( core , r_num_math ( core -> num , input + 2 ) , R_CORE_ANAL_JSON )"		853741	0					
ANR	854029	Callee	r_core_anal_graph		853741	0					
ANR	854030	Identifier	r_core_anal_graph		853741	0					
ANR	854031	ArgumentList	core		853741	1					
ANR	854032	Argument	core		853741	0					
ANR	854033	Identifier	core		853741	0					
ANR	854034	Argument	"r_num_math ( core -> num , input + 2 )"		853741	1					
ANR	854035	CallExpression	"r_num_math ( core -> num , input + 2 )"		853741	0					
ANR	854036	Callee	r_num_math		853741	0					
ANR	854037	Identifier	r_num_math		853741	0					
ANR	854038	ArgumentList	core -> num		853741	1					
ANR	854039	Argument	core -> num		853741	0					
ANR	854040	PtrMemberAccess	core -> num		853741	0					
ANR	854041	Identifier	core		853741	0					
ANR	854042	Identifier	num		853741	1					
ANR	854043	Argument	input + 2		853741	1					
ANR	854044	AdditiveExpression	input + 2		853741	0		+			
ANR	854045	Identifier	input		853741	0					
ANR	854046	PrimaryExpression	2		853741	1					
ANR	854047	Argument	R_CORE_ANAL_JSON		853741	2					
ANR	854048	Identifier	R_CORE_ANAL_JSON		853741	0					
ANR	854049	BreakStatement	break ;	7694:3:220591:220596	853741	19	True				
ANR	854050	Label	case 'J' :	7695:2:220600:220608	853741	20	True				
ANR	854051	CompoundStatement		48:3:1583:1656	853741	21					
ANR	854052	IdentifierDeclStatement	RConfigHold * hc = r_config_hold_new ( core -> config ) ;	7697:3:220668:220718	853741	0	True				
ANR	854053	IdentifierDecl	* hc = r_config_hold_new ( core -> config )		853741	0					
ANR	854054	IdentifierDeclType	RConfigHold *		853741	0					
ANR	854055	Identifier	hc		853741	1					
ANR	854056	AssignmentExpression	* hc = r_config_hold_new ( core -> config )		853741	2		=			
ANR	854057	Identifier	hc		853741	0					
ANR	854058	CallExpression	r_config_hold_new ( core -> config )		853741	1					
ANR	854059	Callee	r_config_hold_new		853741	0					
ANR	854060	Identifier	r_config_hold_new		853741	0					
ANR	854061	ArgumentList	core -> config		853741	1					
ANR	854062	Argument	core -> config		853741	0					
ANR	854063	PtrMemberAccess	core -> config		853741	0					
ANR	854064	Identifier	core		853741	0					
ANR	854065	Identifier	config		853741	1					
ANR	854066	ExpressionStatement	"r_config_hold_i ( hc , ""asm.offset"" , NULL )"	7698:3:220723:220763	853741	1	True				
ANR	854067	CallExpression	"r_config_hold_i ( hc , ""asm.offset"" , NULL )"		853741	0					
ANR	854068	Callee	r_config_hold_i		853741	0					
ANR	854069	Identifier	r_config_hold_i		853741	0					
ANR	854070	ArgumentList	hc		853741	1					
ANR	854071	Argument	hc		853741	0					
ANR	854072	Identifier	hc		853741	0					
ANR	854073	Argument	"""asm.offset"""		853741	1					
ANR	854074	PrimaryExpression	"""asm.offset"""		853741	0					
ANR	854075	Argument	NULL		853741	2					
ANR	854076	Identifier	NULL		853741	0					
ANR	854077	IdentifierDeclStatement	"const bool o_graph_offset = r_config_get_i ( core -> config , ""graph.offset"" ) ;"	7699:3:220768:220841	853741	2	True				
ANR	854078	IdentifierDecl	"o_graph_offset = r_config_get_i ( core -> config , ""graph.offset"" )"		853741	0					
ANR	854079	IdentifierDeclType	const bool		853741	0					
ANR	854080	Identifier	o_graph_offset		853741	1					
ANR	854081	AssignmentExpression	"o_graph_offset = r_config_get_i ( core -> config , ""graph.offset"" )"		853741	2		=			
ANR	854082	Identifier	o_graph_offset		853741	0					
ANR	854083	CallExpression	"r_config_get_i ( core -> config , ""graph.offset"" )"		853741	1					
ANR	854084	Callee	r_config_get_i		853741	0					
ANR	854085	Identifier	r_config_get_i		853741	0					
ANR	854086	ArgumentList	core -> config		853741	1					
ANR	854087	Argument	core -> config		853741	0					
ANR	854088	PtrMemberAccess	core -> config		853741	0					
ANR	854089	Identifier	core		853741	0					
ANR	854090	Identifier	config		853741	1					
ANR	854091	Argument	"""graph.offset"""		853741	1					
ANR	854092	PrimaryExpression	"""graph.offset"""		853741	0					
ANR	854093	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.offset"" , o_graph_offset )"	7700:3:220846:220905	853741	3	True				
ANR	854094	CallExpression	"r_config_set_i ( core -> config , ""asm.offset"" , o_graph_offset )"		853741	0					
ANR	854095	Callee	r_config_set_i		853741	0					
ANR	854096	Identifier	r_config_set_i		853741	0					
ANR	854097	ArgumentList	core -> config		853741	1					
ANR	854098	Argument	core -> config		853741	0					
ANR	854099	PtrMemberAccess	core -> config		853741	0					
ANR	854100	Identifier	core		853741	0					
ANR	854101	Identifier	config		853741	1					
ANR	854102	Argument	"""asm.offset"""		853741	1					
ANR	854103	PrimaryExpression	"""asm.offset"""		853741	0					
ANR	854104	Argument	o_graph_offset		853741	2					
ANR	854105	Identifier	o_graph_offset		853741	0					
ANR	854106	ExpressionStatement	"r_core_anal_graph ( core , r_num_math ( core -> num , input + 2 ) , R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM )"	7701:3:220910:221024	853741	4	True				
ANR	854107	CallExpression	"r_core_anal_graph ( core , r_num_math ( core -> num , input + 2 ) , R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM )"		853741	0					
ANR	854108	Callee	r_core_anal_graph		853741	0					
ANR	854109	Identifier	r_core_anal_graph		853741	0					
ANR	854110	ArgumentList	core		853741	1					
ANR	854111	Argument	core		853741	0					
ANR	854112	Identifier	core		853741	0					
ANR	854113	Argument	"r_num_math ( core -> num , input + 2 )"		853741	1					
ANR	854114	CallExpression	"r_num_math ( core -> num , input + 2 )"		853741	0					
ANR	854115	Callee	r_num_math		853741	0					
ANR	854116	Identifier	r_num_math		853741	0					
ANR	854117	ArgumentList	core -> num		853741	1					
ANR	854118	Argument	core -> num		853741	0					
ANR	854119	PtrMemberAccess	core -> num		853741	0					
ANR	854120	Identifier	core		853741	0					
ANR	854121	Identifier	num		853741	1					
ANR	854122	Argument	input + 2		853741	1					
ANR	854123	AdditiveExpression	input + 2		853741	0		+			
ANR	854124	Identifier	input		853741	0					
ANR	854125	PrimaryExpression	2		853741	1					
ANR	854126	Argument	R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM		853741	2					
ANR	854127	InclusiveOrExpression	R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM		853741	0		|			
ANR	854128	Identifier	R_CORE_ANAL_JSON		853741	0					
ANR	854129	Identifier	R_CORE_ANAL_JSON_FORMAT_DISASM		853741	1					
ANR	854130	ExpressionStatement	r_config_hold_restore ( hc )	7703:3:221029:221055	853741	5	True				
ANR	854131	CallExpression	r_config_hold_restore ( hc )		853741	0					
ANR	854132	Callee	r_config_hold_restore		853741	0					
ANR	854133	Identifier	r_config_hold_restore		853741	0					
ANR	854134	ArgumentList	hc		853741	1					
ANR	854135	Argument	hc		853741	0					
ANR	854136	Identifier	hc		853741	0					
ANR	854137	ExpressionStatement	r_config_hold_free ( hc )	7704:3:221060:221083	853741	6	True				
ANR	854138	CallExpression	r_config_hold_free ( hc )		853741	0					
ANR	854139	Callee	r_config_hold_free		853741	0					
ANR	854140	Identifier	r_config_hold_free		853741	0					
ANR	854141	ArgumentList	hc		853741	1					
ANR	854142	Argument	hc		853741	0					
ANR	854143	Identifier	hc		853741	0					
ANR	854144	BreakStatement	break ;	7705:3:221088:221093	853741	7	True				
ANR	854145	Label	case 'g' :	7707:2:221102:221110	853741	22	True				
ANR	854146	CompoundStatement		57:3:1941:2009	853741	23					
ANR	854147	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	7708:3:221126:221194	853741	0	True				
ANR	854148	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		853741	0					
ANR	854149	IdentifierDeclType	RAnalFunction *		853741	0					
ANR	854150	Identifier	fcn		853741	1					
ANR	854151	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		853741	2		=			
ANR	854152	Identifier	fcn		853741	0					
ANR	854153	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		853741	1					
ANR	854154	Callee	r_anal_get_fcn_in		853741	0					
ANR	854155	Identifier	r_anal_get_fcn_in		853741	0					
ANR	854156	ArgumentList	core -> anal		853741	1					
ANR	854157	Argument	core -> anal		853741	0					
ANR	854158	PtrMemberAccess	core -> anal		853741	0					
ANR	854159	Identifier	core		853741	0					
ANR	854160	Identifier	anal		853741	1					
ANR	854161	Argument	core -> offset		853741	1					
ANR	854162	PtrMemberAccess	core -> offset		853741	0					
ANR	854163	Identifier	core		853741	0					
ANR	854164	Identifier	offset		853741	1					
ANR	854165	Argument	0		853741	2					
ANR	854166	PrimaryExpression	0		853741	0					
ANR	854167	ExpressionStatement	"r_core_print_bb_gml ( core , fcn )"	7709:3:221199:221230	853741	1	True				
ANR	854168	CallExpression	"r_core_print_bb_gml ( core , fcn )"		853741	0					
ANR	854169	Callee	r_core_print_bb_gml		853741	0					
ANR	854170	Identifier	r_core_print_bb_gml		853741	0					
ANR	854171	ArgumentList	core		853741	1					
ANR	854172	Argument	core		853741	0					
ANR	854173	Identifier	core		853741	0					
ANR	854174	Argument	fcn		853741	1					
ANR	854175	Identifier	fcn		853741	0					
ANR	854176	BreakStatement	break ;	7710:3:221235:221240	853741	2	True				
ANR	854177	Label	case 'k' :	7712:2:221249:221257	853741	24	True				
ANR	854178	CompoundStatement		61:11:2073:2073	853741	25					
ANR	854179	Statement	r_core_cmdf	7713:3:221273:221283	853741	0	True				
ANR	854180	Statement	(	7713:15:221285:221285	853741	1	True				
ANR	854181	Statement	core	7713:16:221286:221289	853741	2	True				
ANR	854182	Statement	","	7713:20:221290:221290	853741	3	True				
ANR	854183	Statement	"""ag-; .agf* @ %"""	7713:22:221292:221307	853741	4	True				
ANR	854184	Statement	PFMT64u	7713:38:221308:221314	853741	5	True				
ANR	854185	Statement	"""; aggk"""	7713:45:221315:221322	853741	6	True				
ANR	854186	Statement	","	7713:53:221323:221323	853741	7	True				
ANR	854187	Statement	core	7713:55:221325:221328	853741	8	True				
ANR	854188	Statement	->	7713:59:221329:221330	853741	9	True				
ANR	854189	Statement	offset	7713:61:221331:221336	853741	10	True				
ANR	854190	Statement	)	7713:67:221337:221337	853741	11	True				
ANR	854191	ExpressionStatement		7713:68:221338:221338	853741	12	True				
ANR	854192	BreakStatement	break ;	7714:3:221343:221348	853741	13	True				
ANR	854193	Label	case '*' :	7716:2:221357:221365	853741	26	True				
ANR	854194	CompoundStatement		66:3:2195:2263	853741	27					
ANR	854195	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	7717:3:221380:221448	853741	0	True				
ANR	854196	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		853741	0					
ANR	854197	IdentifierDeclType	RAnalFunction *		853741	0					
ANR	854198	Identifier	fcn		853741	1					
ANR	854199	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		853741	2		=			
ANR	854200	Identifier	fcn		853741	0					
ANR	854201	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		853741	1					
ANR	854202	Callee	r_anal_get_fcn_in		853741	0					
ANR	854203	Identifier	r_anal_get_fcn_in		853741	0					
ANR	854204	ArgumentList	core -> anal		853741	1					
ANR	854205	Argument	core -> anal		853741	0					
ANR	854206	PtrMemberAccess	core -> anal		853741	0					
ANR	854207	Identifier	core		853741	0					
ANR	854208	Identifier	anal		853741	1					
ANR	854209	Argument	core -> offset		853741	1					
ANR	854210	PtrMemberAccess	core -> offset		853741	0					
ANR	854211	Identifier	core		853741	0					
ANR	854212	Identifier	offset		853741	1					
ANR	854213	Argument	0		853741	2					
ANR	854214	PrimaryExpression	0		853741	0					
ANR	854215	ExpressionStatement	"r_core_print_bb_custom ( core , fcn )"	7718:3:221453:221487	853741	1	True				
ANR	854216	CallExpression	"r_core_print_bb_custom ( core , fcn )"		853741	0					
ANR	854217	Callee	r_core_print_bb_custom		853741	0					
ANR	854218	Identifier	r_core_print_bb_custom		853741	0					
ANR	854219	ArgumentList	core		853741	1					
ANR	854220	Argument	core		853741	0					
ANR	854221	Identifier	core		853741	0					
ANR	854222	Argument	fcn		853741	1					
ANR	854223	Identifier	fcn		853741	0					
ANR	854224	BreakStatement	break ;	7719:3:221492:221497	853741	2	True				
ANR	854225	Label	case 'w' :	7721:2:221506:221514	853741	28	True				
ANR	854226	IfStatement	"if ( r_config_get_i ( core -> config , ""graph.web"" ) )"		853741	29					
ANR	854227	Condition	"r_config_get_i ( core -> config , ""graph.web"" )"	7722:7:221533:221574	853741	0	True				
ANR	854228	CallExpression	"r_config_get_i ( core -> config , ""graph.web"" )"		853741	0					
ANR	854229	Callee	r_config_get_i		853741	0					
ANR	854230	Identifier	r_config_get_i		853741	0					
ANR	854231	ArgumentList	core -> config		853741	1					
ANR	854232	Argument	core -> config		853741	0					
ANR	854233	PtrMemberAccess	core -> config		853741	0					
ANR	854234	Identifier	core		853741	0					
ANR	854235	Identifier	config		853741	1					
ANR	854236	Argument	"""graph.web"""		853741	1					
ANR	854237	PrimaryExpression	"""graph.web"""		853741	0					
ANR	854238	CompoundStatement		71:51:2392:2392	853741	1					
ANR	854239	ExpressionStatement	"r_core_cmd0 ( core , ""=H /graph/"" )"	7723:4:221583:221615	853741	0	True				
ANR	854240	CallExpression	"r_core_cmd0 ( core , ""=H /graph/"" )"		853741	0					
ANR	854241	Callee	r_core_cmd0		853741	0					
ANR	854242	Identifier	r_core_cmd0		853741	0					
ANR	854243	ArgumentList	core		853741	1					
ANR	854244	Argument	core		853741	0					
ANR	854245	Identifier	core		853741	0					
ANR	854246	Argument	"""=H /graph/"""		853741	1					
ANR	854247	PrimaryExpression	"""=H /graph/"""		853741	0					
ANR	854248	ElseStatement	else		853741	0					
ANR	854249	CompoundStatement		75:4:2516:2564	853741	0					
ANR	854250	Statement	char	7725:4:221633:221636	853741	0	True				
ANR	854251	Statement	*	7725:9:221638:221638	853741	1	True				
ANR	854252	Statement	cmdargs	7725:10:221639:221645	853741	2	True				
ANR	854253	Statement	=	7725:18:221647:221647	853741	3	True				
ANR	854254	Statement	r_str_newf	7725:20:221649:221658	853741	4	True				
ANR	854255	Statement	(	7725:31:221660:221660	853741	5	True				
ANR	854256	Statement	"""agfd @ 0x%"""	7725:32:221661:221672	853741	6	True				
ANR	854257	Statement	PFMT64x	7725:44:221673:221679	853741	7	True				
ANR	854258	Statement	","	7725:51:221680:221680	853741	8	True				
ANR	854259	Statement	core	7725:53:221682:221685	853741	9	True				
ANR	854260	Statement	->	7725:57:221686:221687	853741	10	True				
ANR	854261	Statement	offset	7725:59:221688:221693	853741	11	True				
ANR	854262	Statement	)	7725:65:221694:221694	853741	12	True				
ANR	854263	ExpressionStatement		7725:66:221695:221695	853741	13	True				
ANR	854264	IdentifierDeclStatement	"char * cmd = graph_cmd ( core , cmdargs , input + 2 ) ;"	7726:4:221701:221749	853741	14	True				
ANR	854265	IdentifierDecl	"* cmd = graph_cmd ( core , cmdargs , input + 2 )"		853741	0					
ANR	854266	IdentifierDeclType	char *		853741	0					
ANR	854267	Identifier	cmd		853741	1					
ANR	854268	AssignmentExpression	"* cmd = graph_cmd ( core , cmdargs , input + 2 )"		853741	2		=			
ANR	854269	Identifier	cmd		853741	0					
ANR	854270	CallExpression	"graph_cmd ( core , cmdargs , input + 2 )"		853741	1					
ANR	854271	Callee	graph_cmd		853741	0					
ANR	854272	Identifier	graph_cmd		853741	0					
ANR	854273	ArgumentList	core		853741	1					
ANR	854274	Argument	core		853741	0					
ANR	854275	Identifier	core		853741	0					
ANR	854276	Argument	cmdargs		853741	1					
ANR	854277	Identifier	cmdargs		853741	0					
ANR	854278	Argument	input + 2		853741	2					
ANR	854279	AdditiveExpression	input + 2		853741	0		+			
ANR	854280	Identifier	input		853741	0					
ANR	854281	PrimaryExpression	2		853741	1					
ANR	854282	IfStatement	if ( cmd && * cmd )		853741	15					
ANR	854283	Condition	cmd && * cmd	7727:8:221759:221769	853741	0	True				
ANR	854284	AndExpression	cmd && * cmd		853741	0		&&			
ANR	854285	Identifier	cmd		853741	0					
ANR	854286	UnaryOperationExpression	* cmd		853741	1					
ANR	854287	UnaryOperator	*		853741	0					
ANR	854288	Identifier	cmd		853741	1					
ANR	854289	CompoundStatement		76:21:2587:2587	853741	1					
ANR	854290	IfStatement	if ( * ( input + 2 ) )		853741	0					
ANR	854291	Condition	* ( input + 2 )	7728:9:221783:221794	853741	0	True				
ANR	854292	UnaryOperationExpression	* ( input + 2 )		853741	0					
ANR	854293	UnaryOperator	*		853741	0					
ANR	854294	AdditiveExpression	input + 2		853741	1		+			
ANR	854295	Identifier	input		853741	0					
ANR	854296	PrimaryExpression	2		853741	1					
ANR	854297	CompoundStatement		77:23:2612:2612	853741	1					
ANR	854298	ExpressionStatement	"r_cons_printf ( ""Saving to file %s ...\\n"" , input + 2 )"	7729:6:221805:221857	853741	0	True				
ANR	854299	CallExpression	"r_cons_printf ( ""Saving to file %s ...\\n"" , input + 2 )"		853741	0					
ANR	854300	Callee	r_cons_printf		853741	0					
ANR	854301	Identifier	r_cons_printf		853741	0					
ANR	854302	ArgumentList	"""Saving to file %s ...\\n"""		853741	1					
ANR	854303	Argument	"""Saving to file %s ...\\n"""		853741	0					
ANR	854304	PrimaryExpression	"""Saving to file %s ...\\n"""		853741	0					
ANR	854305	Argument	input + 2		853741	1					
ANR	854306	AdditiveExpression	input + 2		853741	0		+			
ANR	854307	Identifier	input		853741	0					
ANR	854308	PrimaryExpression	2		853741	1					
ANR	854309	ExpressionStatement	r_cons_flush ( )	7730:6:221865:221880	853741	1	True				
ANR	854310	CallExpression	r_cons_flush ( )		853741	0					
ANR	854311	Callee	r_cons_flush		853741	0					
ANR	854312	Identifier	r_cons_flush		853741	0					
ANR	854313	ArgumentList			853741	1					
ANR	854314	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	7732:5:221894:221917	853741	1	True				
ANR	854315	CallExpression	"r_core_cmd0 ( core , cmd )"		853741	0					
ANR	854316	Callee	r_core_cmd0		853741	0					
ANR	854317	Identifier	r_core_cmd0		853741	0					
ANR	854318	ArgumentList	core		853741	1					
ANR	854319	Argument	core		853741	0					
ANR	854320	Identifier	core		853741	0					
ANR	854321	Argument	cmd		853741	1					
ANR	854322	Identifier	cmd		853741	0					
ANR	854323	ExpressionStatement	free ( cmd )	7734:4:221929:221939	853741	16	True				
ANR	854324	CallExpression	free ( cmd )		853741	0					
ANR	854325	Callee	free		853741	0					
ANR	854326	Identifier	free		853741	0					
ANR	854327	ArgumentList	cmd		853741	1					
ANR	854328	Argument	cmd		853741	0					
ANR	854329	Identifier	cmd		853741	0					
ANR	854330	ExpressionStatement	free ( cmdargs )	7735:4:221945:221959	853741	17	True				
ANR	854331	CallExpression	free ( cmdargs )		853741	0					
ANR	854332	Callee	free		853741	0					
ANR	854333	Identifier	free		853741	0					
ANR	854334	ArgumentList	cmdargs		853741	1					
ANR	854335	Argument	cmdargs		853741	0					
ANR	854336	Identifier	cmdargs		853741	0					
ANR	854337	BreakStatement	break ;	7737:3:221969:221974	853741	30	True				
ANR	854338	Label	default :	7738:2:221978:221985	853741	31	True				
ANR	854339	Identifier	default		853741	0					
ANR	854340	ExpressionStatement	"eprintf ( ""Usage: see ag?\\n"" )"	7739:3:221990:222018	853741	32	True				
ANR	854341	CallExpression	"eprintf ( ""Usage: see ag?\\n"" )"		853741	0					
ANR	854342	Callee	eprintf		853741	0					
ANR	854343	Identifier	eprintf		853741	0					
ANR	854344	ArgumentList	"""Usage: see ag?\\n"""		853741	1					
ANR	854345	Argument	"""Usage: see ag?\\n"""		853741	0					
ANR	854346	PrimaryExpression	"""Usage: see ag?\\n"""		853741	0					
ANR	854347	BreakStatement	break ;	7740:3:222023:222028	853741	33	True				
ANR	854348	BreakStatement	break ;	7742:2:222036:222041	853741	2	True				
ANR	854349	Label	case '-' :	7743:1:222044:222052	853741	3	True				
ANR	854350	ExpressionStatement	r_agraph_reset ( core -> graph )	7744:2:222065:222093	853741	4	True				
ANR	854351	CallExpression	r_agraph_reset ( core -> graph )		853741	0					
ANR	854352	Callee	r_agraph_reset		853741	0					
ANR	854353	Identifier	r_agraph_reset		853741	0					
ANR	854354	ArgumentList	core -> graph		853741	1					
ANR	854355	Argument	core -> graph		853741	0					
ANR	854356	PtrMemberAccess	core -> graph		853741	0					
ANR	854357	Identifier	core		853741	0					
ANR	854358	Identifier	graph		853741	1					
ANR	854359	BreakStatement	break ;	7745:2:222097:222102	853741	5	True				
ANR	854360	Label	case 'n' :	7746:1:222105:222113	853741	6	True				
ANR	854361	ExpressionStatement	"cmd_agraph_node ( core , input + 1 )"	7747:2:222126:222159	853741	7	True				
ANR	854362	CallExpression	"cmd_agraph_node ( core , input + 1 )"		853741	0					
ANR	854363	Callee	cmd_agraph_node		853741	0					
ANR	854364	Identifier	cmd_agraph_node		853741	0					
ANR	854365	ArgumentList	core		853741	1					
ANR	854366	Argument	core		853741	0					
ANR	854367	Identifier	core		853741	0					
ANR	854368	Argument	input + 1		853741	1					
ANR	854369	AdditiveExpression	input + 1		853741	0		+			
ANR	854370	Identifier	input		853741	0					
ANR	854371	PrimaryExpression	1		853741	1					
ANR	854372	BreakStatement	break ;	7748:2:222163:222168	853741	8	True				
ANR	854373	Label	case 'e' :	7749:1:222171:222179	853741	9	True				
ANR	854374	ExpressionStatement	"cmd_agraph_edge ( core , input + 1 )"	7750:2:222192:222225	853741	10	True				
ANR	854375	CallExpression	"cmd_agraph_edge ( core , input + 1 )"		853741	0					
ANR	854376	Callee	cmd_agraph_edge		853741	0					
ANR	854377	Identifier	cmd_agraph_edge		853741	0					
ANR	854378	ArgumentList	core		853741	1					
ANR	854379	Argument	core		853741	0					
ANR	854380	Identifier	core		853741	0					
ANR	854381	Argument	input + 1		853741	1					
ANR	854382	AdditiveExpression	input + 1		853741	0		+			
ANR	854383	Identifier	input		853741	0					
ANR	854384	PrimaryExpression	1		853741	1					
ANR	854385	BreakStatement	break ;	7751:2:222229:222234	853741	11	True				
ANR	854386	Label	case 'g' :	7752:1:222237:222245	853741	12	True				
ANR	854387	ExpressionStatement	"r_core_agraph_print ( core , - 1 , input + 1 )"	7753:2:222258:222299	853741	13	True				
ANR	854388	CallExpression	"r_core_agraph_print ( core , - 1 , input + 1 )"		853741	0					
ANR	854389	Callee	r_core_agraph_print		853741	0					
ANR	854390	Identifier	r_core_agraph_print		853741	0					
ANR	854391	ArgumentList	core		853741	1					
ANR	854392	Argument	core		853741	0					
ANR	854393	Identifier	core		853741	0					
ANR	854394	Argument	- 1		853741	1					
ANR	854395	UnaryOperationExpression	- 1		853741	0					
ANR	854396	UnaryOperator	-		853741	0					
ANR	854397	PrimaryExpression	1		853741	1					
ANR	854398	Argument	input + 1		853741	2					
ANR	854399	AdditiveExpression	input + 1		853741	0		+			
ANR	854400	Identifier	input		853741	0					
ANR	854401	PrimaryExpression	1		853741	1					
ANR	854402	BreakStatement	break ;	7754:2:222303:222308	853741	14	True				
ANR	854403	Label	case 's' :	7755:1:222311:222319	853741	15	True				
ANR	854404	ExpressionStatement	"r_core_anal_graph ( core , r_num_math ( core -> num , input + 1 ) , 0 )"	7756:2:222332:222394	853741	16	True				
ANR	854405	CallExpression	"r_core_anal_graph ( core , r_num_math ( core -> num , input + 1 ) , 0 )"		853741	0					
ANR	854406	Callee	r_core_anal_graph		853741	0					
ANR	854407	Identifier	r_core_anal_graph		853741	0					
ANR	854408	ArgumentList	core		853741	1					
ANR	854409	Argument	core		853741	0					
ANR	854410	Identifier	core		853741	0					
ANR	854411	Argument	"r_num_math ( core -> num , input + 1 )"		853741	1					
ANR	854412	CallExpression	"r_num_math ( core -> num , input + 1 )"		853741	0					
ANR	854413	Callee	r_num_math		853741	0					
ANR	854414	Identifier	r_num_math		853741	0					
ANR	854415	ArgumentList	core -> num		853741	1					
ANR	854416	Argument	core -> num		853741	0					
ANR	854417	PtrMemberAccess	core -> num		853741	0					
ANR	854418	Identifier	core		853741	0					
ANR	854419	Identifier	num		853741	1					
ANR	854420	Argument	input + 1		853741	1					
ANR	854421	AdditiveExpression	input + 1		853741	0		+			
ANR	854422	Identifier	input		853741	0					
ANR	854423	PrimaryExpression	1		853741	1					
ANR	854424	Argument	0		853741	2					
ANR	854425	PrimaryExpression	0		853741	0					
ANR	854426	BreakStatement	break ;	7757:2:222398:222403	853741	17	True				
ANR	854427	Label	case 'C' :	7758:1:222406:222414	853741	18	True				
ANR	854428	SwitchStatement	switch ( input [ 1 ] )		853741	19					
ANR	854429	Condition	input [ 1 ]	7759:10:222435:222442	853741	0	True				
ANR	854430	ArrayIndexing	input [ 1 ]		853741	0					
ANR	854431	Identifier	input		853741	0					
ANR	854432	PrimaryExpression	1		853741	1					
ANR	854433	CompoundStatement		108:20:3260:3260	853741	1					
ANR	854434	Label	case 'v' :	7760:2:222449:222457	853741	0	True				
ANR	854435	Label	case 't' :	7761:2:222461:222469	853741	1	True				
ANR	854436	Label	case 'k' :	7762:2:222473:222481	853741	2	True				
ANR	854437	Label	case 'w' :	7763:2:222485:222493	853741	3	True				
ANR	854438	Label	case ' ' :	7764:2:222497:222505	853741	4	True				
ANR	854439	Label	case 0 :	7765:2:222509:222515	853741	5	True				
ANR	854440	CompoundStatement		114:10:3332:3332	853741	6					
ANR	854441	ExpressionStatement	core -> graph -> is_callgraph = true	7766:3:222522:222554	853741	0	True				
ANR	854442	AssignmentExpression	core -> graph -> is_callgraph = true		853741	0		=			
ANR	854443	PtrMemberAccess	core -> graph -> is_callgraph		853741	0					
ANR	854444	PtrMemberAccess	core -> graph		853741	0					
ANR	854445	Identifier	core		853741	0					
ANR	854446	Identifier	graph		853741	1					
ANR	854447	Identifier	is_callgraph		853741	1					
ANR	854448	Identifier	true		853741	1					
ANR	854449	ExpressionStatement	"r_core_cmdf ( core , ""ag-; .agC*; agg%s;"" , input + 1 )"	7767:3:222559:222610	853741	1	True				
ANR	854450	CallExpression	"r_core_cmdf ( core , ""ag-; .agC*; agg%s;"" , input + 1 )"		853741	0					
ANR	854451	Callee	r_core_cmdf		853741	0					
ANR	854452	Identifier	r_core_cmdf		853741	0					
ANR	854453	ArgumentList	core		853741	1					
ANR	854454	Argument	core		853741	0					
ANR	854455	Identifier	core		853741	0					
ANR	854456	Argument	"""ag-; .agC*; agg%s;"""		853741	1					
ANR	854457	PrimaryExpression	"""ag-; .agC*; agg%s;"""		853741	0					
ANR	854458	Argument	input + 1		853741	2					
ANR	854459	AdditiveExpression	input + 1		853741	0		+			
ANR	854460	Identifier	input		853741	0					
ANR	854461	PrimaryExpression	1		853741	1					
ANR	854462	ExpressionStatement	core -> graph -> is_callgraph = false	7768:3:222615:222648	853741	2	True				
ANR	854463	AssignmentExpression	core -> graph -> is_callgraph = false		853741	0		=			
ANR	854464	PtrMemberAccess	core -> graph -> is_callgraph		853741	0					
ANR	854465	PtrMemberAccess	core -> graph		853741	0					
ANR	854466	Identifier	core		853741	0					
ANR	854467	Identifier	graph		853741	1					
ANR	854468	Identifier	is_callgraph		853741	1					
ANR	854469	Identifier	false		853741	1					
ANR	854470	BreakStatement	break ;	7769:3:222653:222658	853741	3	True				
ANR	854471	Label	case 'J' :	7771:2:222667:222675	853741	7	True				
ANR	854472	Label	case 'j' :	7772:2:222679:222687	853741	8	True				
ANR	854473	ExpressionStatement	"r_core_anal_callgraph ( core , UT64_MAX , R_GRAPH_FORMAT_JSON )"	7773:3:222692:222751	853741	9	True				
ANR	854474	CallExpression	"r_core_anal_callgraph ( core , UT64_MAX , R_GRAPH_FORMAT_JSON )"		853741	0					
ANR	854475	Callee	r_core_anal_callgraph		853741	0					
ANR	854476	Identifier	r_core_anal_callgraph		853741	0					
ANR	854477	ArgumentList	core		853741	1					
ANR	854478	Argument	core		853741	0					
ANR	854479	Identifier	core		853741	0					
ANR	854480	Argument	UT64_MAX		853741	1					
ANR	854481	Identifier	UT64_MAX		853741	0					
ANR	854482	Argument	R_GRAPH_FORMAT_JSON		853741	2					
ANR	854483	Identifier	R_GRAPH_FORMAT_JSON		853741	0					
ANR	854484	BreakStatement	break ;	7774:3:222756:222761	853741	10	True				
ANR	854485	Label	case 'g' :	7775:2:222765:222773	853741	11	True				
ANR	854486	ExpressionStatement	"r_core_anal_callgraph ( core , UT64_MAX , R_GRAPH_FORMAT_GML )"	7776:3:222778:222836	853741	12	True				
ANR	854487	CallExpression	"r_core_anal_callgraph ( core , UT64_MAX , R_GRAPH_FORMAT_GML )"		853741	0					
ANR	854488	Callee	r_core_anal_callgraph		853741	0					
ANR	854489	Identifier	r_core_anal_callgraph		853741	0					
ANR	854490	ArgumentList	core		853741	1					
ANR	854491	Argument	core		853741	0					
ANR	854492	Identifier	core		853741	0					
ANR	854493	Argument	UT64_MAX		853741	1					
ANR	854494	Identifier	UT64_MAX		853741	0					
ANR	854495	Argument	R_GRAPH_FORMAT_GML		853741	2					
ANR	854496	Identifier	R_GRAPH_FORMAT_GML		853741	0					
ANR	854497	BreakStatement	break ;	7777:3:222841:222846	853741	13	True				
ANR	854498	Label	case 'd' :	7778:2:222850:222858	853741	14	True				
ANR	854499	ExpressionStatement	"r_core_anal_callgraph ( core , UT64_MAX , R_GRAPH_FORMAT_DOT )"	7779:3:222863:222921	853741	15	True				
ANR	854500	CallExpression	"r_core_anal_callgraph ( core , UT64_MAX , R_GRAPH_FORMAT_DOT )"		853741	0					
ANR	854501	Callee	r_core_anal_callgraph		853741	0					
ANR	854502	Identifier	r_core_anal_callgraph		853741	0					
ANR	854503	ArgumentList	core		853741	1					
ANR	854504	Argument	core		853741	0					
ANR	854505	Identifier	core		853741	0					
ANR	854506	Argument	UT64_MAX		853741	1					
ANR	854507	Identifier	UT64_MAX		853741	0					
ANR	854508	Argument	R_GRAPH_FORMAT_DOT		853741	2					
ANR	854509	Identifier	R_GRAPH_FORMAT_DOT		853741	0					
ANR	854510	BreakStatement	break ;	7780:3:222926:222931	853741	16	True				
ANR	854511	Label	case '*' :	7781:2:222935:222943	853741	17	True				
ANR	854512	ExpressionStatement	"r_core_anal_callgraph ( core , UT64_MAX , R_GRAPH_FORMAT_CMD )"	7782:3:222948:223006	853741	18	True				
ANR	854513	CallExpression	"r_core_anal_callgraph ( core , UT64_MAX , R_GRAPH_FORMAT_CMD )"		853741	0					
ANR	854514	Callee	r_core_anal_callgraph		853741	0					
ANR	854515	Identifier	r_core_anal_callgraph		853741	0					
ANR	854516	ArgumentList	core		853741	1					
ANR	854517	Argument	core		853741	0					
ANR	854518	Identifier	core		853741	0					
ANR	854519	Argument	UT64_MAX		853741	1					
ANR	854520	Identifier	UT64_MAX		853741	0					
ANR	854521	Argument	R_GRAPH_FORMAT_CMD		853741	2					
ANR	854522	Identifier	R_GRAPH_FORMAT_CMD		853741	0					
ANR	854523	BreakStatement	break ;	7783:3:223011:223016	853741	19	True				
ANR	854524	Label	default :	7784:2:223020:223027	853741	20	True				
ANR	854525	Identifier	default		853741	0					
ANR	854526	ExpressionStatement	"eprintf ( ""Usage: see ag?\\n"" )"	7785:3:223032:223060	853741	21	True				
ANR	854527	CallExpression	"eprintf ( ""Usage: see ag?\\n"" )"		853741	0					
ANR	854528	Callee	eprintf		853741	0					
ANR	854529	Identifier	eprintf		853741	0					
ANR	854530	ArgumentList	"""Usage: see ag?\\n"""		853741	1					
ANR	854531	Argument	"""Usage: see ag?\\n"""		853741	0					
ANR	854532	PrimaryExpression	"""Usage: see ag?\\n"""		853741	0					
ANR	854533	BreakStatement	break ;	7786:3:223065:223070	853741	22	True				
ANR	854534	BreakStatement	break ;	7788:2:223078:223083	853741	20	True				
ANR	854535	Label	case 'r' :	7789:1:223086:223094	853741	21	True				
ANR	854536	SwitchStatement	switch ( input [ 1 ] )		853741	22					
ANR	854537	Condition	input [ 1 ]	7790:10:223132:223139	853741	0	True				
ANR	854538	ArrayIndexing	input [ 1 ]		853741	0					
ANR	854539	Identifier	input		853741	0					
ANR	854540	PrimaryExpression	1		853741	1					
ANR	854541	CompoundStatement		139:20:3957:3957	853741	1					
ANR	854542	Label	case 'v' :	7791:2:223146:223154	853741	0	True				
ANR	854543	Label	case 't' :	7792:2:223158:223166	853741	1	True				
ANR	854544	Label	case 'd' :	7793:2:223170:223178	853741	2	True				
ANR	854545	Label	case 'J' :	7794:2:223182:223190	853741	3	True				
ANR	854546	Label	case 'j' :	7795:2:223194:223202	853741	4	True				
ANR	854547	Label	case 'g' :	7796:2:223206:223214	853741	5	True				
ANR	854548	Label	case 'k' :	7797:2:223218:223226	853741	6	True				
ANR	854549	Label	case 'w' :	7798:2:223230:223238	853741	7	True				
ANR	854550	Label	case ' ' :	7799:2:223242:223250	853741	8	True				
ANR	854551	CompoundStatement		148:12:4067:4067	853741	9					
ANR	854552	ExpressionStatement	core -> graph -> is_callgraph = true	7800:3:223257:223289	853741	0	True				
ANR	854553	AssignmentExpression	core -> graph -> is_callgraph = true		853741	0		=			
ANR	854554	PtrMemberAccess	core -> graph -> is_callgraph		853741	0					
ANR	854555	PtrMemberAccess	core -> graph		853741	0					
ANR	854556	Identifier	core		853741	0					
ANR	854557	Identifier	graph		853741	1					
ANR	854558	Identifier	is_callgraph		853741	1					
ANR	854559	Identifier	true		853741	1					
ANR	854560	Statement	r_core_cmdf	7801:3:223294:223304	853741	1	True				
ANR	854561	Statement	(	7801:15:223306:223306	853741	2	True				
ANR	854562	Statement	core	7801:16:223307:223310	853741	3	True				
ANR	854563	Statement	","	7801:20:223311:223311	853741	4	True				
ANR	854564	Statement	"""ag-; .agr* @ %"""	7801:22:223313:223328	853741	5	True				
ANR	854565	Statement	PFMT64u	7801:38:223329:223335	853741	6	True				
ANR	854566	Statement	"""; agg%s;"""	7801:45:223336:223345	853741	7	True				
ANR	854567	Statement	","	7801:55:223346:223346	853741	8	True				
ANR	854568	Statement	core	7801:57:223348:223351	853741	9	True				
ANR	854569	Statement	->	7801:61:223352:223353	853741	10	True				
ANR	854570	Statement	offset	7801:63:223354:223359	853741	11	True				
ANR	854571	Statement	","	7801:69:223360:223360	853741	12	True				
ANR	854572	Statement	input	7801:71:223362:223366	853741	13	True				
ANR	854573	Statement	+	7801:77:223368:223368	853741	14	True				
ANR	854574	Statement	1	7801:79:223370:223370	853741	15	True				
ANR	854575	Statement	)	7801:80:223371:223371	853741	16	True				
ANR	854576	ExpressionStatement		7801:81:223372:223372	853741	17	True				
ANR	854577	ExpressionStatement	core -> graph -> is_callgraph = false	7802:3:223377:223410	853741	18	True				
ANR	854578	AssignmentExpression	core -> graph -> is_callgraph = false		853741	0		=			
ANR	854579	PtrMemberAccess	core -> graph -> is_callgraph		853741	0					
ANR	854580	PtrMemberAccess	core -> graph		853741	0					
ANR	854581	Identifier	core		853741	0					
ANR	854582	Identifier	graph		853741	1					
ANR	854583	Identifier	is_callgraph		853741	1					
ANR	854584	Identifier	false		853741	1					
ANR	854585	BreakStatement	break ;	7803:3:223415:223420	853741	19	True				
ANR	854586	Label	case '*' :	7805:2:223429:223437	853741	10	True				
ANR	854587	CompoundStatement		154:12:4254:4254	853741	11					
ANR	854588	ExpressionStatement	"r_core_anal_coderefs ( core , core -> offset )"	7806:3:223444:223485	853741	0	True				
ANR	854589	CallExpression	"r_core_anal_coderefs ( core , core -> offset )"		853741	0					
ANR	854590	Callee	r_core_anal_coderefs		853741	0					
ANR	854591	Identifier	r_core_anal_coderefs		853741	0					
ANR	854592	ArgumentList	core		853741	1					
ANR	854593	Argument	core		853741	0					
ANR	854594	Identifier	core		853741	0					
ANR	854595	Argument	core -> offset		853741	1					
ANR	854596	PtrMemberAccess	core -> offset		853741	0					
ANR	854597	Identifier	core		853741	0					
ANR	854598	Identifier	offset		853741	1					
ANR	854599	BreakStatement	break ;	7808:3:223495:223500	853741	12	True				
ANR	854600	Label	case 0 :	7809:2:223504:223510	853741	13	True				
ANR	854601	ExpressionStatement	"r_core_cmd0 ( core , ""ag-; .agr* $$; agg;"" )"	7810:3:223515:223556	853741	14	True				
ANR	854602	CallExpression	"r_core_cmd0 ( core , ""ag-; .agr* $$; agg;"" )"		853741	0					
ANR	854603	Callee	r_core_cmd0		853741	0					
ANR	854604	Identifier	r_core_cmd0		853741	0					
ANR	854605	ArgumentList	core		853741	1					
ANR	854606	Argument	core		853741	0					
ANR	854607	Identifier	core		853741	0					
ANR	854608	Argument	"""ag-; .agr* $$; agg;"""		853741	1					
ANR	854609	PrimaryExpression	"""ag-; .agr* $$; agg;"""		853741	0					
ANR	854610	BreakStatement	break ;	7811:3:223561:223566	853741	15	True				
ANR	854611	Label	default :	7812:2:223570:223577	853741	16	True				
ANR	854612	Identifier	default		853741	0					
ANR	854613	ExpressionStatement	"eprintf ( ""Usage: see ag?\\n"" )"	7813:3:223582:223610	853741	17	True				
ANR	854614	CallExpression	"eprintf ( ""Usage: see ag?\\n"" )"		853741	0					
ANR	854615	Callee	eprintf		853741	0					
ANR	854616	Identifier	eprintf		853741	0					
ANR	854617	ArgumentList	"""Usage: see ag?\\n"""		853741	1					
ANR	854618	Argument	"""Usage: see ag?\\n"""		853741	0					
ANR	854619	PrimaryExpression	"""Usage: see ag?\\n"""		853741	0					
ANR	854620	BreakStatement	break ;	7814:3:223615:223620	853741	18	True				
ANR	854621	BreakStatement	break ;	7816:2:223628:223633	853741	23	True				
ANR	854622	Label	case 'R' :	7817:1:223636:223644	853741	24	True				
ANR	854623	SwitchStatement	switch ( input [ 1 ] )		853741	25					
ANR	854624	Condition	input [ 1 ]	7818:10:223677:223684	853741	0	True				
ANR	854625	ArrayIndexing	input [ 1 ]		853741	0					
ANR	854626	Identifier	input		853741	0					
ANR	854627	PrimaryExpression	1		853741	1					
ANR	854628	CompoundStatement		167:20:4502:4502	853741	1					
ANR	854629	Label	case 'v' :	7819:2:223691:223699	853741	0	True				
ANR	854630	Label	case 't' :	7820:2:223703:223711	853741	1	True				
ANR	854631	Label	case 'd' :	7821:2:223715:223723	853741	2	True				
ANR	854632	Label	case 'J' :	7822:2:223727:223735	853741	3	True				
ANR	854633	Label	case 'j' :	7823:2:223739:223747	853741	4	True				
ANR	854634	Label	case 'g' :	7824:2:223751:223759	853741	5	True				
ANR	854635	Label	case 'k' :	7825:2:223763:223771	853741	6	True				
ANR	854636	Label	case 'w' :	7826:2:223775:223783	853741	7	True				
ANR	854637	Label	case ' ' :	7827:2:223787:223795	853741	8	True				
ANR	854638	Label	case 0 :	7828:2:223799:223805	853741	9	True				
ANR	854639	CompoundStatement		177:10:4622:4622	853741	10					
ANR	854640	ExpressionStatement	core -> graph -> is_callgraph = true	7829:3:223812:223844	853741	0	True				
ANR	854641	AssignmentExpression	core -> graph -> is_callgraph = true		853741	0		=			
ANR	854642	PtrMemberAccess	core -> graph -> is_callgraph		853741	0					
ANR	854643	PtrMemberAccess	core -> graph		853741	0					
ANR	854644	Identifier	core		853741	0					
ANR	854645	Identifier	graph		853741	1					
ANR	854646	Identifier	is_callgraph		853741	1					
ANR	854647	Identifier	true		853741	1					
ANR	854648	ExpressionStatement	"r_core_cmdf ( core , ""ag-; .agR*; agg%s;"" , input + 1 )"	7830:3:223849:223900	853741	1	True				
ANR	854649	CallExpression	"r_core_cmdf ( core , ""ag-; .agR*; agg%s;"" , input + 1 )"		853741	0					
ANR	854650	Callee	r_core_cmdf		853741	0					
ANR	854651	Identifier	r_core_cmdf		853741	0					
ANR	854652	ArgumentList	core		853741	1					
ANR	854653	Argument	core		853741	0					
ANR	854654	Identifier	core		853741	0					
ANR	854655	Argument	"""ag-; .agR*; agg%s;"""		853741	1					
ANR	854656	PrimaryExpression	"""ag-; .agR*; agg%s;"""		853741	0					
ANR	854657	Argument	input + 1		853741	2					
ANR	854658	AdditiveExpression	input + 1		853741	0		+			
ANR	854659	Identifier	input		853741	0					
ANR	854660	PrimaryExpression	1		853741	1					
ANR	854661	ExpressionStatement	core -> graph -> is_callgraph = false	7831:3:223905:223938	853741	2	True				
ANR	854662	AssignmentExpression	core -> graph -> is_callgraph = false		853741	0		=			
ANR	854663	PtrMemberAccess	core -> graph -> is_callgraph		853741	0					
ANR	854664	PtrMemberAccess	core -> graph		853741	0					
ANR	854665	Identifier	core		853741	0					
ANR	854666	Identifier	graph		853741	1					
ANR	854667	Identifier	is_callgraph		853741	1					
ANR	854668	Identifier	false		853741	1					
ANR	854669	BreakStatement	break ;	7832:3:223943:223948	853741	3	True				
ANR	854670	Label	case '*' :	7834:2:223957:223965	853741	11	True				
ANR	854671	CompoundStatement		187:3:4921:4939	853741	12					
ANR	854672	IdentifierDeclStatement	"ut64 from = r_config_get_i ( core -> config , ""graph.from"" ) ;"	7835:3:223972:224027	853741	0	True				
ANR	854673	IdentifierDecl	"from = r_config_get_i ( core -> config , ""graph.from"" )"		853741	0					
ANR	854674	IdentifierDeclType	ut64		853741	0					
ANR	854675	Identifier	from		853741	1					
ANR	854676	AssignmentExpression	"from = r_config_get_i ( core -> config , ""graph.from"" )"		853741	2		=			
ANR	854677	Identifier	from		853741	0					
ANR	854678	CallExpression	"r_config_get_i ( core -> config , ""graph.from"" )"		853741	1					
ANR	854679	Callee	r_config_get_i		853741	0					
ANR	854680	Identifier	r_config_get_i		853741	0					
ANR	854681	ArgumentList	core -> config		853741	1					
ANR	854682	Argument	core -> config		853741	0					
ANR	854683	PtrMemberAccess	core -> config		853741	0					
ANR	854684	Identifier	core		853741	0					
ANR	854685	Identifier	config		853741	1					
ANR	854686	Argument	"""graph.from"""		853741	1					
ANR	854687	PrimaryExpression	"""graph.from"""		853741	0					
ANR	854688	IdentifierDeclStatement	"ut64 to = r_config_get_i ( core -> config , ""graph.to"" ) ;"	7836:3:224032:224083	853741	1	True				
ANR	854689	IdentifierDecl	"to = r_config_get_i ( core -> config , ""graph.to"" )"		853741	0					
ANR	854690	IdentifierDeclType	ut64		853741	0					
ANR	854691	Identifier	to		853741	1					
ANR	854692	AssignmentExpression	"to = r_config_get_i ( core -> config , ""graph.to"" )"		853741	2		=			
ANR	854693	Identifier	to		853741	0					
ANR	854694	CallExpression	"r_config_get_i ( core -> config , ""graph.to"" )"		853741	1					
ANR	854695	Callee	r_config_get_i		853741	0					
ANR	854696	Identifier	r_config_get_i		853741	0					
ANR	854697	ArgumentList	core -> config		853741	1					
ANR	854698	Argument	core -> config		853741	0					
ANR	854699	PtrMemberAccess	core -> config		853741	0					
ANR	854700	Identifier	core		853741	0					
ANR	854701	Identifier	config		853741	1					
ANR	854702	Argument	"""graph.to"""		853741	1					
ANR	854703	PrimaryExpression	"""graph.to"""		853741	0					
ANR	854704	IdentifierDeclStatement	RListIter * it ;	7837:3:224088:224101	853741	2	True				
ANR	854705	IdentifierDecl	* it		853741	0					
ANR	854706	IdentifierDeclType	RListIter *		853741	0					
ANR	854707	Identifier	it		853741	1					
ANR	854708	IdentifierDeclStatement	RAnalFunction * fcn ;	7838:3:224106:224124	853741	3	True				
ANR	854709	IdentifierDecl	* fcn		853741	0					
ANR	854710	IdentifierDeclType	RAnalFunction *		853741	0					
ANR	854711	Identifier	fcn		853741	1					
ANR	854712	Statement	r_list_foreach	7839:3:224129:224142	853741	4	True				
ANR	854713	Statement	(	7839:18:224144:224144	853741	5	True				
ANR	854714	Statement	core	7839:19:224145:224148	853741	6	True				
ANR	854715	Statement	->	7839:23:224149:224150	853741	7	True				
ANR	854716	Statement	anal	7839:25:224151:224154	853741	8	True				
ANR	854717	Statement	->	7839:29:224155:224156	853741	9	True				
ANR	854718	Statement	fcns	7839:31:224157:224160	853741	10	True				
ANR	854719	Statement	","	7839:35:224161:224161	853741	11	True				
ANR	854720	Statement	it	7839:37:224163:224164	853741	12	True				
ANR	854721	Statement	","	7839:39:224165:224165	853741	13	True				
ANR	854722	Statement	fcn	7839:41:224167:224169	853741	14	True				
ANR	854723	Statement	)	7839:44:224170:224170	853741	15	True				
ANR	854724	CompoundStatement		188:46:4987:4987	853741	16					
ANR	854725	IfStatement	"if ( ( from == UT64_MAX && to == UT64_MAX ) || R_BETWEEN ( from , fcn -> addr , to ) )"		853741	0					
ANR	854726	Condition	"( from == UT64_MAX && to == UT64_MAX ) || R_BETWEEN ( from , fcn -> addr , to )"	7840:8:224182:224252	853741	0	True				
ANR	854727	OrExpression	"( from == UT64_MAX && to == UT64_MAX ) || R_BETWEEN ( from , fcn -> addr , to )"		853741	0		||			
ANR	854728	AndExpression	from == UT64_MAX && to == UT64_MAX		853741	0		&&			
ANR	854729	EqualityExpression	from == UT64_MAX		853741	0		==			
ANR	854730	Identifier	from		853741	0					
ANR	854731	Identifier	UT64_MAX		853741	1					
ANR	854732	EqualityExpression	to == UT64_MAX		853741	1		==			
ANR	854733	Identifier	to		853741	0					
ANR	854734	Identifier	UT64_MAX		853741	1					
ANR	854735	CallExpression	"R_BETWEEN ( from , fcn -> addr , to )"		853741	1					
ANR	854736	Callee	R_BETWEEN		853741	0					
ANR	854737	Identifier	R_BETWEEN		853741	0					
ANR	854738	ArgumentList	from		853741	1					
ANR	854739	Argument	from		853741	0					
ANR	854740	Identifier	from		853741	0					
ANR	854741	Argument	fcn -> addr		853741	1					
ANR	854742	PtrMemberAccess	fcn -> addr		853741	0					
ANR	854743	Identifier	fcn		853741	0					
ANR	854744	Identifier	addr		853741	1					
ANR	854745	Argument	to		853741	2					
ANR	854746	Identifier	to		853741	0					
ANR	854747	CompoundStatement		189:81:5070:5070	853741	1					
ANR	854748	ExpressionStatement	"r_core_anal_coderefs ( core , fcn -> addr )"	7841:5:224262:224300	853741	0	True				
ANR	854749	CallExpression	"r_core_anal_coderefs ( core , fcn -> addr )"		853741	0					
ANR	854750	Callee	r_core_anal_coderefs		853741	0					
ANR	854751	Identifier	r_core_anal_coderefs		853741	0					
ANR	854752	ArgumentList	core		853741	1					
ANR	854753	Argument	core		853741	0					
ANR	854754	Identifier	core		853741	0					
ANR	854755	Argument	fcn -> addr		853741	1					
ANR	854756	PtrMemberAccess	fcn -> addr		853741	0					
ANR	854757	Identifier	fcn		853741	0					
ANR	854758	Identifier	addr		853741	1					
ANR	854759	BreakStatement	break ;	7844:3:224316:224321	853741	17	True				
ANR	854760	Label	default :	7846:2:224330:224337	853741	13	True				
ANR	854761	Identifier	default		853741	0					
ANR	854762	ExpressionStatement	"eprintf ( ""Usage: see ag?\\n"" )"	7847:3:224342:224370	853741	14	True				
ANR	854763	CallExpression	"eprintf ( ""Usage: see ag?\\n"" )"		853741	0					
ANR	854764	Callee	eprintf		853741	0					
ANR	854765	Identifier	eprintf		853741	0					
ANR	854766	ArgumentList	"""Usage: see ag?\\n"""		853741	1					
ANR	854767	Argument	"""Usage: see ag?\\n"""		853741	0					
ANR	854768	PrimaryExpression	"""Usage: see ag?\\n"""		853741	0					
ANR	854769	BreakStatement	break ;	7848:3:224375:224380	853741	15	True				
ANR	854770	BreakStatement	break ;	7850:2:224388:224393	853741	26	True				
ANR	854771	Label	case 'x' :	7851:1:224396:224404	853741	27	True				
ANR	854772	SwitchStatement	switch ( input [ 1 ] )		853741	28					
ANR	854773	Condition	input [ 1 ]	7852:10:224436:224443	853741	0	True				
ANR	854774	ArrayIndexing	input [ 1 ]		853741	0					
ANR	854775	Identifier	input		853741	0					
ANR	854776	PrimaryExpression	1		853741	1					
ANR	854777	CompoundStatement		201:20:5261:5261	853741	1					
ANR	854778	Label	case 'v' :	7853:2:224450:224458	853741	0	True				
ANR	854779	Label	case 't' :	7854:2:224462:224470	853741	1	True				
ANR	854780	Label	case 'd' :	7855:2:224474:224482	853741	2	True				
ANR	854781	Label	case 'J' :	7856:2:224486:224494	853741	3	True				
ANR	854782	Label	case 'j' :	7857:2:224498:224506	853741	4	True				
ANR	854783	Label	case 'g' :	7858:2:224510:224518	853741	5	True				
ANR	854784	Label	case 'k' :	7859:2:224522:224530	853741	6	True				
ANR	854785	Label	case 'w' :	7860:2:224534:224542	853741	7	True				
ANR	854786	Label	case ' ' :	7861:2:224546:224554	853741	8	True				
ANR	854787	CompoundStatement		210:12:5371:5371	853741	9					
ANR	854788	Statement	r_core_cmdf	7862:3:224561:224571	853741	0	True				
ANR	854789	Statement	(	7862:15:224573:224573	853741	1	True				
ANR	854790	Statement	core	7862:16:224574:224577	853741	2	True				
ANR	854791	Statement	","	7862:20:224578:224578	853741	3	True				
ANR	854792	Statement	"""ag-; .agx* @ %"""	7862:22:224580:224595	853741	4	True				
ANR	854793	Statement	PFMT64u	7862:38:224596:224602	853741	5	True				
ANR	854794	Statement	"""; agg%s;"""	7862:45:224603:224612	853741	6	True				
ANR	854795	Statement	","	7862:55:224613:224613	853741	7	True				
ANR	854796	Statement	core	7862:57:224615:224618	853741	8	True				
ANR	854797	Statement	->	7862:61:224619:224620	853741	9	True				
ANR	854798	Statement	offset	7862:63:224621:224626	853741	10	True				
ANR	854799	Statement	","	7862:69:224627:224627	853741	11	True				
ANR	854800	Statement	input	7862:71:224629:224633	853741	12	True				
ANR	854801	Statement	+	7862:77:224635:224635	853741	13	True				
ANR	854802	Statement	1	7862:79:224637:224637	853741	14	True				
ANR	854803	Statement	)	7862:80:224638:224638	853741	15	True				
ANR	854804	ExpressionStatement		7862:81:224639:224639	853741	16	True				
ANR	854805	BreakStatement	break ;	7863:3:224644:224649	853741	17	True				
ANR	854806	Label	case '*' :	7865:2:224658:224666	853741	10	True				
ANR	854807	CompoundStatement		214:12:5483:5483	853741	11					
ANR	854808	ExpressionStatement	"r_core_anal_codexrefs ( core , core -> offset )"	7866:3:224673:224715	853741	0	True				
ANR	854809	CallExpression	"r_core_anal_codexrefs ( core , core -> offset )"		853741	0					
ANR	854810	Callee	r_core_anal_codexrefs		853741	0					
ANR	854811	Identifier	r_core_anal_codexrefs		853741	0					
ANR	854812	ArgumentList	core		853741	1					
ANR	854813	Argument	core		853741	0					
ANR	854814	Identifier	core		853741	0					
ANR	854815	Argument	core -> offset		853741	1					
ANR	854816	PtrMemberAccess	core -> offset		853741	0					
ANR	854817	Identifier	core		853741	0					
ANR	854818	Identifier	offset		853741	1					
ANR	854819	BreakStatement	break ;	7868:3:224725:224730	853741	12	True				
ANR	854820	Label	case 0 :	7869:2:224734:224740	853741	13	True				
ANR	854821	ExpressionStatement	"r_core_cmd0 ( core , ""ag-; .agx* $$; agg;"" )"	7870:3:224745:224786	853741	14	True				
ANR	854822	CallExpression	"r_core_cmd0 ( core , ""ag-; .agx* $$; agg;"" )"		853741	0					
ANR	854823	Callee	r_core_cmd0		853741	0					
ANR	854824	Identifier	r_core_cmd0		853741	0					
ANR	854825	ArgumentList	core		853741	1					
ANR	854826	Argument	core		853741	0					
ANR	854827	Identifier	core		853741	0					
ANR	854828	Argument	"""ag-; .agx* $$; agg;"""		853741	1					
ANR	854829	PrimaryExpression	"""ag-; .agx* $$; agg;"""		853741	0					
ANR	854830	BreakStatement	break ;	7871:3:224791:224796	853741	15	True				
ANR	854831	Label	default :	7872:2:224800:224807	853741	16	True				
ANR	854832	Identifier	default		853741	0					
ANR	854833	ExpressionStatement	"eprintf ( ""Usage: see ag?\\n"" )"	7873:3:224812:224840	853741	17	True				
ANR	854834	CallExpression	"eprintf ( ""Usage: see ag?\\n"" )"		853741	0					
ANR	854835	Callee	eprintf		853741	0					
ANR	854836	Identifier	eprintf		853741	0					
ANR	854837	ArgumentList	"""Usage: see ag?\\n"""		853741	1					
ANR	854838	Argument	"""Usage: see ag?\\n"""		853741	0					
ANR	854839	PrimaryExpression	"""Usage: see ag?\\n"""		853741	0					
ANR	854840	BreakStatement	break ;	7874:3:224845:224850	853741	18	True				
ANR	854841	BreakStatement	break ;	7876:2:224858:224863	853741	29	True				
ANR	854842	Label	case 'i' :	7877:1:224866:224874	853741	30	True				
ANR	854843	SwitchStatement	switch ( input [ 1 ] )		853741	31					
ANR	854844	Condition	input [ 1 ]	7878:10:224908:224915	853741	0	True				
ANR	854845	ArrayIndexing	input [ 1 ]		853741	0					
ANR	854846	Identifier	input		853741	0					
ANR	854847	PrimaryExpression	1		853741	1					
ANR	854848	CompoundStatement		227:20:5733:5733	853741	1					
ANR	854849	Label	case 'v' :	7879:2:224922:224930	853741	0	True				
ANR	854850	Label	case 't' :	7880:2:224934:224942	853741	1	True				
ANR	854851	Label	case 'd' :	7881:2:224946:224954	853741	2	True				
ANR	854852	Label	case 'J' :	7882:2:224958:224966	853741	3	True				
ANR	854853	Label	case 'j' :	7883:2:224970:224978	853741	4	True				
ANR	854854	Label	case 'g' :	7884:2:224982:224990	853741	5	True				
ANR	854855	Label	case 'k' :	7885:2:224994:225002	853741	6	True				
ANR	854856	Label	case 'w' :	7886:2:225006:225014	853741	7	True				
ANR	854857	Label	case ' ' :	7887:2:225018:225026	853741	8	True				
ANR	854858	Label	case 0 :	7888:2:225030:225036	853741	9	True				
ANR	854859	ExpressionStatement	"r_core_cmdf ( core , ""ag-; .agi*; agg%s;"" , input + 1 )"	7889:3:225041:225092	853741	10	True				
ANR	854860	CallExpression	"r_core_cmdf ( core , ""ag-; .agi*; agg%s;"" , input + 1 )"		853741	0					
ANR	854861	Callee	r_core_cmdf		853741	0					
ANR	854862	Identifier	r_core_cmdf		853741	0					
ANR	854863	ArgumentList	core		853741	1					
ANR	854864	Argument	core		853741	0					
ANR	854865	Identifier	core		853741	0					
ANR	854866	Argument	"""ag-; .agi*; agg%s;"""		853741	1					
ANR	854867	PrimaryExpression	"""ag-; .agi*; agg%s;"""		853741	0					
ANR	854868	Argument	input + 1		853741	2					
ANR	854869	AdditiveExpression	input + 1		853741	0		+			
ANR	854870	Identifier	input		853741	0					
ANR	854871	PrimaryExpression	1		853741	1					
ANR	854872	BreakStatement	break ;	7890:3:225097:225102	853741	11	True				
ANR	854873	Label	case '*' :	7891:2:225106:225114	853741	12	True				
ANR	854874	ExpressionStatement	r_core_anal_importxrefs ( core )	7892:3:225119:225149	853741	13	True				
ANR	854875	CallExpression	r_core_anal_importxrefs ( core )		853741	0					
ANR	854876	Callee	r_core_anal_importxrefs		853741	0					
ANR	854877	Identifier	r_core_anal_importxrefs		853741	0					
ANR	854878	ArgumentList	core		853741	1					
ANR	854879	Argument	core		853741	0					
ANR	854880	Identifier	core		853741	0					
ANR	854881	BreakStatement	break ;	7893:3:225154:225159	853741	14	True				
ANR	854882	Label	default :	7894:2:225163:225170	853741	15	True				
ANR	854883	Identifier	default		853741	0					
ANR	854884	ExpressionStatement	"eprintf ( ""Usage: see ag?\\n"" )"	7895:3:225175:225203	853741	16	True				
ANR	854885	CallExpression	"eprintf ( ""Usage: see ag?\\n"" )"		853741	0					
ANR	854886	Callee	eprintf		853741	0					
ANR	854887	Identifier	eprintf		853741	0					
ANR	854888	ArgumentList	"""Usage: see ag?\\n"""		853741	1					
ANR	854889	Argument	"""Usage: see ag?\\n"""		853741	0					
ANR	854890	PrimaryExpression	"""Usage: see ag?\\n"""		853741	0					
ANR	854891	BreakStatement	break ;	7896:3:225208:225213	853741	17	True				
ANR	854892	BreakStatement	break ;	7898:2:225221:225226	853741	32	True				
ANR	854893	Label	case 'c' :	7899:1:225229:225237	853741	33	True				
ANR	854894	SwitchStatement	switch ( input [ 1 ] )		853741	34					
ANR	854895	Condition	input [ 1 ]	7900:10:225258:225265	853741	0	True				
ANR	854896	ArrayIndexing	input [ 1 ]		853741	0					
ANR	854897	Identifier	input		853741	0					
ANR	854898	PrimaryExpression	1		853741	1					
ANR	854899	CompoundStatement		249:20:6083:6083	853741	1					
ANR	854900	Label	case 'v' :	7901:2:225272:225280	853741	0	True				
ANR	854901	Label	case 't' :	7902:2:225284:225292	853741	1	True				
ANR	854902	Label	case 'k' :	7903:2:225296:225304	853741	2	True				
ANR	854903	Label	case 'w' :	7904:2:225308:225316	853741	3	True				
ANR	854904	Label	case ' ' :	7905:2:225320:225328	853741	4	True				
ANR	854905	CompoundStatement		254:12:6145:6145	853741	5					
ANR	854906	ExpressionStatement	core -> graph -> is_callgraph = true	7906:3:225335:225367	853741	0	True				
ANR	854907	AssignmentExpression	core -> graph -> is_callgraph = true		853741	0		=			
ANR	854908	PtrMemberAccess	core -> graph -> is_callgraph		853741	0					
ANR	854909	PtrMemberAccess	core -> graph		853741	0					
ANR	854910	Identifier	core		853741	0					
ANR	854911	Identifier	graph		853741	1					
ANR	854912	Identifier	is_callgraph		853741	1					
ANR	854913	Identifier	true		853741	1					
ANR	854914	Statement	r_core_cmdf	7907:3:225372:225382	853741	1	True				
ANR	854915	Statement	(	7907:15:225384:225384	853741	2	True				
ANR	854916	Statement	core	7907:16:225385:225388	853741	3	True				
ANR	854917	Statement	","	7907:20:225389:225389	853741	4	True				
ANR	854918	Statement	"""ag-; .agc* @ %"""	7907:22:225391:225406	853741	5	True				
ANR	854919	Statement	PFMT64u	7907:38:225407:225413	853741	6	True				
ANR	854920	Statement	"""; agg%s;"""	7907:45:225414:225423	853741	7	True				
ANR	854921	Statement	","	7907:55:225424:225424	853741	8	True				
ANR	854922	Statement	core	7907:57:225426:225429	853741	9	True				
ANR	854923	Statement	->	7907:61:225430:225431	853741	10	True				
ANR	854924	Statement	offset	7907:63:225432:225437	853741	11	True				
ANR	854925	Statement	","	7907:69:225438:225438	853741	12	True				
ANR	854926	Statement	input	7907:71:225440:225444	853741	13	True				
ANR	854927	Statement	+	7907:77:225446:225446	853741	14	True				
ANR	854928	Statement	1	7907:79:225448:225448	853741	15	True				
ANR	854929	Statement	)	7907:80:225449:225449	853741	16	True				
ANR	854930	ExpressionStatement		7907:81:225450:225450	853741	17	True				
ANR	854931	ExpressionStatement	core -> graph -> is_callgraph = false	7908:3:225455:225488	853741	18	True				
ANR	854932	AssignmentExpression	core -> graph -> is_callgraph = false		853741	0		=			
ANR	854933	PtrMemberAccess	core -> graph -> is_callgraph		853741	0					
ANR	854934	PtrMemberAccess	core -> graph		853741	0					
ANR	854935	Identifier	core		853741	0					
ANR	854936	Identifier	graph		853741	1					
ANR	854937	Identifier	is_callgraph		853741	1					
ANR	854938	Identifier	false		853741	1					
ANR	854939	BreakStatement	break ;	7909:3:225493:225498	853741	19	True				
ANR	854940	Label	case 0 :	7911:2:225507:225513	853741	6	True				
ANR	854941	ExpressionStatement	core -> graph -> is_callgraph = true	7912:3:225518:225550	853741	7	True				
ANR	854942	AssignmentExpression	core -> graph -> is_callgraph = true		853741	0		=			
ANR	854943	PtrMemberAccess	core -> graph -> is_callgraph		853741	0					
ANR	854944	PtrMemberAccess	core -> graph		853741	0					
ANR	854945	Identifier	core		853741	0					
ANR	854946	Identifier	graph		853741	1					
ANR	854947	Identifier	is_callgraph		853741	1					
ANR	854948	Identifier	true		853741	1					
ANR	854949	ExpressionStatement	"r_core_cmd0 ( core , ""ag-; .agc* $$; agg;"" )"	7913:3:225555:225596	853741	8	True				
ANR	854950	CallExpression	"r_core_cmd0 ( core , ""ag-; .agc* $$; agg;"" )"		853741	0					
ANR	854951	Callee	r_core_cmd0		853741	0					
ANR	854952	Identifier	r_core_cmd0		853741	0					
ANR	854953	ArgumentList	core		853741	1					
ANR	854954	Argument	core		853741	0					
ANR	854955	Identifier	core		853741	0					
ANR	854956	Argument	"""ag-; .agc* $$; agg;"""		853741	1					
ANR	854957	PrimaryExpression	"""ag-; .agc* $$; agg;"""		853741	0					
ANR	854958	ExpressionStatement	core -> graph -> is_callgraph = false	7914:3:225601:225634	853741	9	True				
ANR	854959	AssignmentExpression	core -> graph -> is_callgraph = false		853741	0		=			
ANR	854960	PtrMemberAccess	core -> graph -> is_callgraph		853741	0					
ANR	854961	PtrMemberAccess	core -> graph		853741	0					
ANR	854962	Identifier	core		853741	0					
ANR	854963	Identifier	graph		853741	1					
ANR	854964	Identifier	is_callgraph		853741	1					
ANR	854965	Identifier	false		853741	1					
ANR	854966	BreakStatement	break ;	7915:3:225639:225644	853741	10	True				
ANR	854967	Label	case 'g' :	7916:2:225648:225656	853741	11	True				
ANR	854968	CompoundStatement		265:12:6473:6473	853741	12					
ANR	854969	ExpressionStatement	"r_core_anal_callgraph ( core , core -> offset , R_GRAPH_FORMAT_GMLFCN )"	7917:3:225663:225728	853741	0	True				
ANR	854970	CallExpression	"r_core_anal_callgraph ( core , core -> offset , R_GRAPH_FORMAT_GMLFCN )"		853741	0					
ANR	854971	Callee	r_core_anal_callgraph		853741	0					
ANR	854972	Identifier	r_core_anal_callgraph		853741	0					
ANR	854973	ArgumentList	core		853741	1					
ANR	854974	Argument	core		853741	0					
ANR	854975	Identifier	core		853741	0					
ANR	854976	Argument	core -> offset		853741	1					
ANR	854977	PtrMemberAccess	core -> offset		853741	0					
ANR	854978	Identifier	core		853741	0					
ANR	854979	Identifier	offset		853741	1					
ANR	854980	Argument	R_GRAPH_FORMAT_GMLFCN		853741	2					
ANR	854981	Identifier	R_GRAPH_FORMAT_GMLFCN		853741	0					
ANR	854982	BreakStatement	break ;	7918:3:225733:225738	853741	1	True				
ANR	854983	Label	case 'd' :	7920:2:225746:225754	853741	13	True				
ANR	854984	CompoundStatement		269:12:6571:6571	853741	14					
ANR	854985	ExpressionStatement	"r_core_anal_callgraph ( core , core -> offset , R_GRAPH_FORMAT_DOT )"	7921:3:225761:225823	853741	0	True				
ANR	854986	CallExpression	"r_core_anal_callgraph ( core , core -> offset , R_GRAPH_FORMAT_DOT )"		853741	0					
ANR	854987	Callee	r_core_anal_callgraph		853741	0					
ANR	854988	Identifier	r_core_anal_callgraph		853741	0					
ANR	854989	ArgumentList	core		853741	1					
ANR	854990	Argument	core		853741	0					
ANR	854991	Identifier	core		853741	0					
ANR	854992	Argument	core -> offset		853741	1					
ANR	854993	PtrMemberAccess	core -> offset		853741	0					
ANR	854994	Identifier	core		853741	0					
ANR	854995	Identifier	offset		853741	1					
ANR	854996	Argument	R_GRAPH_FORMAT_DOT		853741	2					
ANR	854997	Identifier	R_GRAPH_FORMAT_DOT		853741	0					
ANR	854998	BreakStatement	break ;	7922:3:225828:225833	853741	1	True				
ANR	854999	Label	case 'J' :	7924:2:225841:225849	853741	15	True				
ANR	855000	Label	case 'j' :	7925:2:225853:225861	853741	16	True				
ANR	855001	CompoundStatement		274:12:6678:6678	853741	17					
ANR	855002	ExpressionStatement	"r_core_anal_callgraph ( core , core -> offset , R_GRAPH_FORMAT_JSON )"	7926:3:225868:225931	853741	0	True				
ANR	855003	CallExpression	"r_core_anal_callgraph ( core , core -> offset , R_GRAPH_FORMAT_JSON )"		853741	0					
ANR	855004	Callee	r_core_anal_callgraph		853741	0					
ANR	855005	Identifier	r_core_anal_callgraph		853741	0					
ANR	855006	ArgumentList	core		853741	1					
ANR	855007	Argument	core		853741	0					
ANR	855008	Identifier	core		853741	0					
ANR	855009	Argument	core -> offset		853741	1					
ANR	855010	PtrMemberAccess	core -> offset		853741	0					
ANR	855011	Identifier	core		853741	0					
ANR	855012	Identifier	offset		853741	1					
ANR	855013	Argument	R_GRAPH_FORMAT_JSON		853741	2					
ANR	855014	Identifier	R_GRAPH_FORMAT_JSON		853741	0					
ANR	855015	BreakStatement	break ;	7927:3:225936:225941	853741	1	True				
ANR	855016	Label	case '*' :	7929:2:225949:225957	853741	18	True				
ANR	855017	CompoundStatement		278:12:6774:6774	853741	19					
ANR	855018	ExpressionStatement	"r_core_anal_callgraph ( core , core -> offset , R_GRAPH_FORMAT_CMD )"	7930:3:225964:226026	853741	0	True				
ANR	855019	CallExpression	"r_core_anal_callgraph ( core , core -> offset , R_GRAPH_FORMAT_CMD )"		853741	0					
ANR	855020	Callee	r_core_anal_callgraph		853741	0					
ANR	855021	Identifier	r_core_anal_callgraph		853741	0					
ANR	855022	ArgumentList	core		853741	1					
ANR	855023	Argument	core		853741	0					
ANR	855024	Identifier	core		853741	0					
ANR	855025	Argument	core -> offset		853741	1					
ANR	855026	PtrMemberAccess	core -> offset		853741	0					
ANR	855027	Identifier	core		853741	0					
ANR	855028	Identifier	offset		853741	1					
ANR	855029	Argument	R_GRAPH_FORMAT_CMD		853741	2					
ANR	855030	Identifier	R_GRAPH_FORMAT_CMD		853741	0					
ANR	855031	BreakStatement	break ;	7931:3:226031:226036	853741	1	True				
ANR	855032	Label	default :	7933:2:226044:226051	853741	20	True				
ANR	855033	Identifier	default		853741	0					
ANR	855034	ExpressionStatement	"eprintf ( ""Usage: see ag?\\n"" )"	7934:3:226056:226084	853741	21	True				
ANR	855035	CallExpression	"eprintf ( ""Usage: see ag?\\n"" )"		853741	0					
ANR	855036	Callee	eprintf		853741	0					
ANR	855037	Identifier	eprintf		853741	0					
ANR	855038	ArgumentList	"""Usage: see ag?\\n"""		853741	1					
ANR	855039	Argument	"""Usage: see ag?\\n"""		853741	0					
ANR	855040	PrimaryExpression	"""Usage: see ag?\\n"""		853741	0					
ANR	855041	BreakStatement	break ;	7935:3:226089:226094	853741	22	True				
ANR	855042	BreakStatement	break ;	7937:2:226102:226107	853741	35	True				
ANR	855043	Label	case 'j' :	7938:1:226110:226118	853741	36	True				
ANR	855044	ExpressionStatement	"r_core_cmdf ( core , ""agfj%s"" , input + 1 )"	7939:2:226146:226185	853741	37	True				
ANR	855045	CallExpression	"r_core_cmdf ( core , ""agfj%s"" , input + 1 )"		853741	0					
ANR	855046	Callee	r_core_cmdf		853741	0					
ANR	855047	Identifier	r_core_cmdf		853741	0					
ANR	855048	ArgumentList	core		853741	1					
ANR	855049	Argument	core		853741	0					
ANR	855050	Identifier	core		853741	0					
ANR	855051	Argument	"""agfj%s"""		853741	1					
ANR	855052	PrimaryExpression	"""agfj%s"""		853741	0					
ANR	855053	Argument	input + 1		853741	2					
ANR	855054	AdditiveExpression	input + 1		853741	0		+			
ANR	855055	Identifier	input		853741	0					
ANR	855056	PrimaryExpression	1		853741	1					
ANR	855057	BreakStatement	break ;	7940:2:226189:226194	853741	38	True				
ANR	855058	Label	case 'J' :	7941:1:226197:226205	853741	39	True				
ANR	855059	ExpressionStatement	"r_core_cmdf ( core , ""agfJ%s"" , input + 1 )"	7942:2:226233:226272	853741	40	True				
ANR	855060	CallExpression	"r_core_cmdf ( core , ""agfJ%s"" , input + 1 )"		853741	0					
ANR	855061	Callee	r_core_cmdf		853741	0					
ANR	855062	Identifier	r_core_cmdf		853741	0					
ANR	855063	ArgumentList	core		853741	1					
ANR	855064	Argument	core		853741	0					
ANR	855065	Identifier	core		853741	0					
ANR	855066	Argument	"""agfJ%s"""		853741	1					
ANR	855067	PrimaryExpression	"""agfJ%s"""		853741	0					
ANR	855068	Argument	input + 1		853741	2					
ANR	855069	AdditiveExpression	input + 1		853741	0		+			
ANR	855070	Identifier	input		853741	0					
ANR	855071	PrimaryExpression	1		853741	1					
ANR	855072	BreakStatement	break ;	7943:2:226276:226281	853741	41	True				
ANR	855073	Label	case 'k' :	7944:1:226284:226292	853741	42	True				
ANR	855074	ExpressionStatement	"r_core_cmdf ( core , ""agfk%s"" , input + 1 )"	7945:2:226320:226359	853741	43	True				
ANR	855075	CallExpression	"r_core_cmdf ( core , ""agfk%s"" , input + 1 )"		853741	0					
ANR	855076	Callee	r_core_cmdf		853741	0					
ANR	855077	Identifier	r_core_cmdf		853741	0					
ANR	855078	ArgumentList	core		853741	1					
ANR	855079	Argument	core		853741	0					
ANR	855080	Identifier	core		853741	0					
ANR	855081	Argument	"""agfk%s"""		853741	1					
ANR	855082	PrimaryExpression	"""agfk%s"""		853741	0					
ANR	855083	Argument	input + 1		853741	2					
ANR	855084	AdditiveExpression	input + 1		853741	0		+			
ANR	855085	Identifier	input		853741	0					
ANR	855086	PrimaryExpression	1		853741	1					
ANR	855087	BreakStatement	break ;	7946:2:226363:226368	853741	44	True				
ANR	855088	Label	case 'l' :	7947:1:226371:226379	853741	45	True				
ANR	855089	ExpressionStatement	"r_core_anal_graph ( core , r_num_math ( core -> num , input + 1 ) , R_CORE_ANAL_GRAPHLINES )"	7948:2:226392:226475	853741	46	True				
ANR	855090	CallExpression	"r_core_anal_graph ( core , r_num_math ( core -> num , input + 1 ) , R_CORE_ANAL_GRAPHLINES )"		853741	0					
ANR	855091	Callee	r_core_anal_graph		853741	0					
ANR	855092	Identifier	r_core_anal_graph		853741	0					
ANR	855093	ArgumentList	core		853741	1					
ANR	855094	Argument	core		853741	0					
ANR	855095	Identifier	core		853741	0					
ANR	855096	Argument	"r_num_math ( core -> num , input + 1 )"		853741	1					
ANR	855097	CallExpression	"r_num_math ( core -> num , input + 1 )"		853741	0					
ANR	855098	Callee	r_num_math		853741	0					
ANR	855099	Identifier	r_num_math		853741	0					
ANR	855100	ArgumentList	core -> num		853741	1					
ANR	855101	Argument	core -> num		853741	0					
ANR	855102	PtrMemberAccess	core -> num		853741	0					
ANR	855103	Identifier	core		853741	0					
ANR	855104	Identifier	num		853741	1					
ANR	855105	Argument	input + 1		853741	1					
ANR	855106	AdditiveExpression	input + 1		853741	0		+			
ANR	855107	Identifier	input		853741	0					
ANR	855108	PrimaryExpression	1		853741	1					
ANR	855109	Argument	R_CORE_ANAL_GRAPHLINES		853741	2					
ANR	855110	Identifier	R_CORE_ANAL_GRAPHLINES		853741	0					
ANR	855111	BreakStatement	break ;	7949:2:226479:226484	853741	47	True				
ANR	855112	Label	case 'a' :	7950:1:226487:226495	853741	48	True				
ANR	855113	SwitchStatement	switch ( input [ 1 ] )		853741	49					
ANR	855114	Condition	input [ 1 ]	7951:10:226516:226523	853741	0	True				
ANR	855115	ArrayIndexing	input [ 1 ]		853741	0					
ANR	855116	Identifier	input		853741	0					
ANR	855117	PrimaryExpression	1		853741	1					
ANR	855118	CompoundStatement		300:20:7341:7341	853741	1					
ANR	855119	Label	case 'v' :	7952:2:226530:226538	853741	0	True				
ANR	855120	Label	case 't' :	7953:2:226542:226550	853741	1	True				
ANR	855121	Label	case 'k' :	7954:2:226554:226562	853741	2	True				
ANR	855122	Label	case 'w' :	7955:2:226566:226574	853741	3	True				
ANR	855123	Label	case 'g' :	7956:2:226578:226586	853741	4	True				
ANR	855124	Label	case 'j' :	7957:2:226590:226598	853741	5	True				
ANR	855125	Label	case 'J' :	7958:2:226602:226610	853741	6	True				
ANR	855126	Label	case 'd' :	7959:2:226614:226622	853741	7	True				
ANR	855127	Label	case ' ' :	7960:2:226626:226634	853741	8	True				
ANR	855128	CompoundStatement		309:12:7451:7451	853741	9					
ANR	855129	Statement	r_core_cmdf	7961:3:226641:226651	853741	0	True				
ANR	855130	Statement	(	7961:15:226653:226653	853741	1	True				
ANR	855131	Statement	core	7961:16:226654:226657	853741	2	True				
ANR	855132	Statement	","	7961:20:226658:226658	853741	3	True				
ANR	855133	Statement	"""ag-; .aga* @ %"""	7961:22:226660:226675	853741	4	True				
ANR	855134	Statement	PFMT64u	7961:38:226676:226682	853741	5	True				
ANR	855135	Statement	"""; agg%s;"""	7961:45:226683:226692	853741	6	True				
ANR	855136	Statement	","	7961:55:226693:226693	853741	7	True				
ANR	855137	Statement	core	7961:57:226695:226698	853741	8	True				
ANR	855138	Statement	->	7961:61:226699:226700	853741	9	True				
ANR	855139	Statement	offset	7961:63:226701:226706	853741	10	True				
ANR	855140	Statement	","	7961:69:226707:226707	853741	11	True				
ANR	855141	Statement	input	7961:71:226709:226713	853741	12	True				
ANR	855142	Statement	+	7961:77:226715:226715	853741	13	True				
ANR	855143	Statement	1	7961:79:226717:226717	853741	14	True				
ANR	855144	Statement	)	7961:80:226718:226718	853741	15	True				
ANR	855145	ExpressionStatement		7961:81:226719:226719	853741	16	True				
ANR	855146	BreakStatement	break ;	7962:3:226724:226729	853741	17	True				
ANR	855147	Label	case 0 :	7964:2:226738:226744	853741	10	True				
ANR	855148	ExpressionStatement	"r_core_cmd0 ( core , ""ag-; .aga* $$; agg;"" )"	7965:3:226749:226790	853741	11	True				
ANR	855149	CallExpression	"r_core_cmd0 ( core , ""ag-; .aga* $$; agg;"" )"		853741	0					
ANR	855150	Callee	r_core_cmd0		853741	0					
ANR	855151	Identifier	r_core_cmd0		853741	0					
ANR	855152	ArgumentList	core		853741	1					
ANR	855153	Argument	core		853741	0					
ANR	855154	Identifier	core		853741	0					
ANR	855155	Argument	"""ag-; .aga* $$; agg;"""		853741	1					
ANR	855156	PrimaryExpression	"""ag-; .aga* $$; agg;"""		853741	0					
ANR	855157	BreakStatement	break ;	7966:3:226795:226800	853741	12	True				
ANR	855158	Label	case '*' :	7967:2:226804:226812	853741	13	True				
ANR	855159	CompoundStatement		316:12:7629:7629	853741	14					
ANR	855160	ExpressionStatement	"r_core_anal_datarefs ( core , core -> offset )"	7968:3:226819:226860	853741	0	True				
ANR	855161	CallExpression	"r_core_anal_datarefs ( core , core -> offset )"		853741	0					
ANR	855162	Callee	r_core_anal_datarefs		853741	0					
ANR	855163	Identifier	r_core_anal_datarefs		853741	0					
ANR	855164	ArgumentList	core		853741	1					
ANR	855165	Argument	core		853741	0					
ANR	855166	Identifier	core		853741	0					
ANR	855167	Argument	core -> offset		853741	1					
ANR	855168	PtrMemberAccess	core -> offset		853741	0					
ANR	855169	Identifier	core		853741	0					
ANR	855170	Identifier	offset		853741	1					
ANR	855171	BreakStatement	break ;	7969:3:226865:226870	853741	1	True				
ANR	855172	Label	default :	7971:2:226879:226886	853741	15	True				
ANR	855173	Identifier	default		853741	0					
ANR	855174	ExpressionStatement	"eprintf ( ""Usage: see ag?\\n"" )"	7972:4:226892:226920	853741	16	True				
ANR	855175	CallExpression	"eprintf ( ""Usage: see ag?\\n"" )"		853741	0					
ANR	855176	Callee	eprintf		853741	0					
ANR	855177	Identifier	eprintf		853741	0					
ANR	855178	ArgumentList	"""Usage: see ag?\\n"""		853741	1					
ANR	855179	Argument	"""Usage: see ag?\\n"""		853741	0					
ANR	855180	PrimaryExpression	"""Usage: see ag?\\n"""		853741	0					
ANR	855181	BreakStatement	break ;	7973:4:226926:226931	853741	17	True				
ANR	855182	BreakStatement	break ;	7975:2:226939:226944	853741	50	True				
ANR	855183	Label	case 'A' :	7976:1:226947:226955	853741	51	True				
ANR	855184	SwitchStatement	switch ( input [ 1 ] )		853741	52					
ANR	855185	Condition	input [ 1 ]	7977:10:226993:227000	853741	0	True				
ANR	855186	ArrayIndexing	input [ 1 ]		853741	0					
ANR	855187	Identifier	input		853741	0					
ANR	855188	PrimaryExpression	1		853741	1					
ANR	855189	CompoundStatement		326:20:7818:7818	853741	1					
ANR	855190	Label	case 'v' :	7978:2:227007:227015	853741	0	True				
ANR	855191	Label	case 't' :	7979:2:227019:227027	853741	1	True				
ANR	855192	Label	case 'd' :	7980:2:227031:227039	853741	2	True				
ANR	855193	Label	case 'J' :	7981:2:227043:227051	853741	3	True				
ANR	855194	Label	case 'j' :	7982:2:227055:227063	853741	4	True				
ANR	855195	Label	case 'g' :	7983:2:227067:227075	853741	5	True				
ANR	855196	Label	case 'k' :	7984:2:227079:227087	853741	6	True				
ANR	855197	Label	case 'w' :	7985:2:227091:227099	853741	7	True				
ANR	855198	Label	case ' ' :	7986:2:227103:227111	853741	8	True				
ANR	855199	Label	case 0 :	7987:2:227115:227121	853741	9	True				
ANR	855200	CompoundStatement		336:10:7938:7938	853741	10					
ANR	855201	ExpressionStatement	"r_core_cmdf ( core , ""ag-; .agA*; agg%c;"" , input [ 1 ] )"	7988:3:227128:227178	853741	0	True				
ANR	855202	CallExpression	"r_core_cmdf ( core , ""ag-; .agA*; agg%c;"" , input [ 1 ] )"		853741	0					
ANR	855203	Callee	r_core_cmdf		853741	0					
ANR	855204	Identifier	r_core_cmdf		853741	0					
ANR	855205	ArgumentList	core		853741	1					
ANR	855206	Argument	core		853741	0					
ANR	855207	Identifier	core		853741	0					
ANR	855208	Argument	"""ag-; .agA*; agg%c;"""		853741	1					
ANR	855209	PrimaryExpression	"""ag-; .agA*; agg%c;"""		853741	0					
ANR	855210	Argument	input [ 1 ]		853741	2					
ANR	855211	ArrayIndexing	input [ 1 ]		853741	0					
ANR	855212	Identifier	input		853741	0					
ANR	855213	PrimaryExpression	1		853741	1					
ANR	855214	BreakStatement	break ;	7989:3:227183:227188	853741	1	True				
ANR	855215	Label	case '*' :	7991:2:227197:227205	853741	11	True				
ANR	855216	CompoundStatement		344:3:8161:8179	853741	12					
ANR	855217	IdentifierDeclStatement	"ut64 from = r_config_get_i ( core -> config , ""graph.from"" ) ;"	7992:3:227212:227267	853741	0	True				
ANR	855218	IdentifierDecl	"from = r_config_get_i ( core -> config , ""graph.from"" )"		853741	0					
ANR	855219	IdentifierDeclType	ut64		853741	0					
ANR	855220	Identifier	from		853741	1					
ANR	855221	AssignmentExpression	"from = r_config_get_i ( core -> config , ""graph.from"" )"		853741	2		=			
ANR	855222	Identifier	from		853741	0					
ANR	855223	CallExpression	"r_config_get_i ( core -> config , ""graph.from"" )"		853741	1					
ANR	855224	Callee	r_config_get_i		853741	0					
ANR	855225	Identifier	r_config_get_i		853741	0					
ANR	855226	ArgumentList	core -> config		853741	1					
ANR	855227	Argument	core -> config		853741	0					
ANR	855228	PtrMemberAccess	core -> config		853741	0					
ANR	855229	Identifier	core		853741	0					
ANR	855230	Identifier	config		853741	1					
ANR	855231	Argument	"""graph.from"""		853741	1					
ANR	855232	PrimaryExpression	"""graph.from"""		853741	0					
ANR	855233	IdentifierDeclStatement	"ut64 to = r_config_get_i ( core -> config , ""graph.to"" ) ;"	7993:3:227272:227323	853741	1	True				
ANR	855234	IdentifierDecl	"to = r_config_get_i ( core -> config , ""graph.to"" )"		853741	0					
ANR	855235	IdentifierDeclType	ut64		853741	0					
ANR	855236	Identifier	to		853741	1					
ANR	855237	AssignmentExpression	"to = r_config_get_i ( core -> config , ""graph.to"" )"		853741	2		=			
ANR	855238	Identifier	to		853741	0					
ANR	855239	CallExpression	"r_config_get_i ( core -> config , ""graph.to"" )"		853741	1					
ANR	855240	Callee	r_config_get_i		853741	0					
ANR	855241	Identifier	r_config_get_i		853741	0					
ANR	855242	ArgumentList	core -> config		853741	1					
ANR	855243	Argument	core -> config		853741	0					
ANR	855244	PtrMemberAccess	core -> config		853741	0					
ANR	855245	Identifier	core		853741	0					
ANR	855246	Identifier	config		853741	1					
ANR	855247	Argument	"""graph.to"""		853741	1					
ANR	855248	PrimaryExpression	"""graph.to"""		853741	0					
ANR	855249	IdentifierDeclStatement	RListIter * it ;	7994:3:227328:227341	853741	2	True				
ANR	855250	IdentifierDecl	* it		853741	0					
ANR	855251	IdentifierDeclType	RListIter *		853741	0					
ANR	855252	Identifier	it		853741	1					
ANR	855253	IdentifierDeclStatement	RAnalFunction * fcn ;	7995:3:227346:227364	853741	3	True				
ANR	855254	IdentifierDecl	* fcn		853741	0					
ANR	855255	IdentifierDeclType	RAnalFunction *		853741	0					
ANR	855256	Identifier	fcn		853741	1					
ANR	855257	Statement	r_list_foreach	7996:3:227369:227382	853741	4	True				
ANR	855258	Statement	(	7996:18:227384:227384	853741	5	True				
ANR	855259	Statement	core	7996:19:227385:227388	853741	6	True				
ANR	855260	Statement	->	7996:23:227389:227390	853741	7	True				
ANR	855261	Statement	anal	7996:25:227391:227394	853741	8	True				
ANR	855262	Statement	->	7996:29:227395:227396	853741	9	True				
ANR	855263	Statement	fcns	7996:31:227397:227400	853741	10	True				
ANR	855264	Statement	","	7996:35:227401:227401	853741	11	True				
ANR	855265	Statement	it	7996:37:227403:227404	853741	12	True				
ANR	855266	Statement	","	7996:39:227405:227405	853741	13	True				
ANR	855267	Statement	fcn	7996:41:227407:227409	853741	14	True				
ANR	855268	Statement	)	7996:44:227410:227410	853741	15	True				
ANR	855269	CompoundStatement		345:46:8227:8227	853741	16					
ANR	855270	IfStatement	"if ( ( from == UT64_MAX && to == UT64_MAX ) || R_BETWEEN ( from , fcn -> addr , to ) )"		853741	0					
ANR	855271	Condition	"( from == UT64_MAX && to == UT64_MAX ) || R_BETWEEN ( from , fcn -> addr , to )"	7997:8:227422:227492	853741	0	True				
ANR	855272	OrExpression	"( from == UT64_MAX && to == UT64_MAX ) || R_BETWEEN ( from , fcn -> addr , to )"		853741	0		||			
ANR	855273	AndExpression	from == UT64_MAX && to == UT64_MAX		853741	0		&&			
ANR	855274	EqualityExpression	from == UT64_MAX		853741	0		==			
ANR	855275	Identifier	from		853741	0					
ANR	855276	Identifier	UT64_MAX		853741	1					
ANR	855277	EqualityExpression	to == UT64_MAX		853741	1		==			
ANR	855278	Identifier	to		853741	0					
ANR	855279	Identifier	UT64_MAX		853741	1					
ANR	855280	CallExpression	"R_BETWEEN ( from , fcn -> addr , to )"		853741	1					
ANR	855281	Callee	R_BETWEEN		853741	0					
ANR	855282	Identifier	R_BETWEEN		853741	0					
ANR	855283	ArgumentList	from		853741	1					
ANR	855284	Argument	from		853741	0					
ANR	855285	Identifier	from		853741	0					
ANR	855286	Argument	fcn -> addr		853741	1					
ANR	855287	PtrMemberAccess	fcn -> addr		853741	0					
ANR	855288	Identifier	fcn		853741	0					
ANR	855289	Identifier	addr		853741	1					
ANR	855290	Argument	to		853741	2					
ANR	855291	Identifier	to		853741	0					
ANR	855292	CompoundStatement		346:81:8310:8310	853741	1					
ANR	855293	ExpressionStatement	"r_core_anal_datarefs ( core , fcn -> addr )"	7998:5:227502:227540	853741	0	True				
ANR	855294	CallExpression	"r_core_anal_datarefs ( core , fcn -> addr )"		853741	0					
ANR	855295	Callee	r_core_anal_datarefs		853741	0					
ANR	855296	Identifier	r_core_anal_datarefs		853741	0					
ANR	855297	ArgumentList	core		853741	1					
ANR	855298	Argument	core		853741	0					
ANR	855299	Identifier	core		853741	0					
ANR	855300	Argument	fcn -> addr		853741	1					
ANR	855301	PtrMemberAccess	fcn -> addr		853741	0					
ANR	855302	Identifier	fcn		853741	0					
ANR	855303	Identifier	addr		853741	1					
ANR	855304	BreakStatement	break ;	8001:3:227556:227561	853741	17	True				
ANR	855305	Label	default :	8003:2:227570:227577	853741	13	True				
ANR	855306	Identifier	default		853741	0					
ANR	855307	ExpressionStatement	"eprintf ( ""Usage: see ag?\\n"" )"	8004:3:227582:227610	853741	14	True				
ANR	855308	CallExpression	"eprintf ( ""Usage: see ag?\\n"" )"		853741	0					
ANR	855309	Callee	eprintf		853741	0					
ANR	855310	Identifier	eprintf		853741	0					
ANR	855311	ArgumentList	"""Usage: see ag?\\n"""		853741	1					
ANR	855312	Argument	"""Usage: see ag?\\n"""		853741	0					
ANR	855313	PrimaryExpression	"""Usage: see ag?\\n"""		853741	0					
ANR	855314	BreakStatement	break ;	8005:3:227615:227620	853741	15	True				
ANR	855315	BreakStatement	break ;	8007:2:227628:227633	853741	53	True				
ANR	855316	Label	case 'd' :	8008:1:227636:227644	853741	54	True				
ANR	855317	CompoundStatement		358:9:8480:8540	853741	55					
ANR	855318	IdentifierDeclStatement	int diff_opt = R_CORE_ANAL_GRAPHBODY | R_CORE_ANAL_GRAPHDIFF ;	8009:9:227665:227725	853741	0	True				
ANR	855319	IdentifierDecl	diff_opt = R_CORE_ANAL_GRAPHBODY | R_CORE_ANAL_GRAPHDIFF		853741	0					
ANR	855320	IdentifierDeclType	int		853741	0					
ANR	855321	Identifier	diff_opt		853741	1					
ANR	855322	AssignmentExpression	diff_opt = R_CORE_ANAL_GRAPHBODY | R_CORE_ANAL_GRAPHDIFF		853741	2		=			
ANR	855323	Identifier	diff_opt		853741	0					
ANR	855324	InclusiveOrExpression	R_CORE_ANAL_GRAPHBODY | R_CORE_ANAL_GRAPHDIFF		853741	1		|			
ANR	855325	Identifier	R_CORE_ANAL_GRAPHBODY		853741	0					
ANR	855326	Identifier	R_CORE_ANAL_GRAPHDIFF		853741	1					
ANR	855327	SwitchStatement	switch ( input [ 1 ] )		853741	1					
ANR	855328	Condition	input [ 1 ]	8010:24:227751:227758	853741	0	True				
ANR	855329	ArrayIndexing	input [ 1 ]		853741	0					
ANR	855330	Identifier	input		853741	0					
ANR	855331	PrimaryExpression	1		853741	1					
ANR	855332	CompoundStatement		359:34:8576:8576	853741	1					
ANR	855333	Label	case 'j' :	8011:24:227787:227795	853741	0	True				
ANR	855334	CompoundStatement		361:32:8646:8717	853741	1					
ANR	855335	IdentifierDeclStatement	"ut64 addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset ;"	8012:32:227831:227902	853741	0	True				
ANR	855336	IdentifierDecl	"addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	0					
ANR	855337	IdentifierDeclType	ut64		853741	0					
ANR	855338	Identifier	addr		853741	1					
ANR	855339	AssignmentExpression	"addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	2		=			
ANR	855340	Identifier	addr		853741	0					
ANR	855341	ConditionalExpression	"input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	1					
ANR	855342	Condition	input [ 2 ]		853741	0					
ANR	855343	ArrayIndexing	input [ 2 ]		853741	0					
ANR	855344	Identifier	input		853741	0					
ANR	855345	PrimaryExpression	2		853741	1					
ANR	855346	CallExpression	"r_num_math ( core -> num , input + 2 )"		853741	1					
ANR	855347	Callee	r_num_math		853741	0					
ANR	855348	Identifier	r_num_math		853741	0					
ANR	855349	ArgumentList	core -> num		853741	1					
ANR	855350	Argument	core -> num		853741	0					
ANR	855351	PtrMemberAccess	core -> num		853741	0					
ANR	855352	Identifier	core		853741	0					
ANR	855353	Identifier	num		853741	1					
ANR	855354	Argument	input + 2		853741	1					
ANR	855355	AdditiveExpression	input + 2		853741	0		+			
ANR	855356	Identifier	input		853741	0					
ANR	855357	PrimaryExpression	2		853741	1					
ANR	855358	PtrMemberAccess	core -> offset		853741	2					
ANR	855359	Identifier	core		853741	0					
ANR	855360	Identifier	offset		853741	1					
ANR	855361	ExpressionStatement	"r_core_gdiff_fcn ( core , addr , core -> offset )"	8013:32:227936:227979	853741	1	True				
ANR	855362	CallExpression	"r_core_gdiff_fcn ( core , addr , core -> offset )"		853741	0					
ANR	855363	Callee	r_core_gdiff_fcn		853741	0					
ANR	855364	Identifier	r_core_gdiff_fcn		853741	0					
ANR	855365	ArgumentList	core		853741	1					
ANR	855366	Argument	core		853741	0					
ANR	855367	Identifier	core		853741	0					
ANR	855368	Argument	addr		853741	1					
ANR	855369	Identifier	addr		853741	0					
ANR	855370	Argument	core -> offset		853741	2					
ANR	855371	PtrMemberAccess	core -> offset		853741	0					
ANR	855372	Identifier	core		853741	0					
ANR	855373	Identifier	offset		853741	1					
ANR	855374	ExpressionStatement	"r_core_anal_graph ( core , addr , diff_opt | R_CORE_ANAL_JSON )"	8014:32:228013:228072	853741	2	True				
ANR	855375	CallExpression	"r_core_anal_graph ( core , addr , diff_opt | R_CORE_ANAL_JSON )"		853741	0					
ANR	855376	Callee	r_core_anal_graph		853741	0					
ANR	855377	Identifier	r_core_anal_graph		853741	0					
ANR	855378	ArgumentList	core		853741	1					
ANR	855379	Argument	core		853741	0					
ANR	855380	Identifier	core		853741	0					
ANR	855381	Argument	addr		853741	1					
ANR	855382	Identifier	addr		853741	0					
ANR	855383	Argument	diff_opt | R_CORE_ANAL_JSON		853741	2					
ANR	855384	InclusiveOrExpression	diff_opt | R_CORE_ANAL_JSON		853741	0		|			
ANR	855385	Identifier	diff_opt		853741	0					
ANR	855386	Identifier	R_CORE_ANAL_JSON		853741	1					
ANR	855387	BreakStatement	break ;	8015:32:228106:228111	853741	3	True				
ANR	855388	Label	case 'J' :	8017:24:228163:228171	853741	2	True				
ANR	855389	CompoundStatement		367:32:9022:9093	853741	3					
ANR	855390	IdentifierDeclStatement	"ut64 addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset ;"	8018:32:228207:228278	853741	0	True				
ANR	855391	IdentifierDecl	"addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	0					
ANR	855392	IdentifierDeclType	ut64		853741	0					
ANR	855393	Identifier	addr		853741	1					
ANR	855394	AssignmentExpression	"addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	2		=			
ANR	855395	Identifier	addr		853741	0					
ANR	855396	ConditionalExpression	"input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	1					
ANR	855397	Condition	input [ 2 ]		853741	0					
ANR	855398	ArrayIndexing	input [ 2 ]		853741	0					
ANR	855399	Identifier	input		853741	0					
ANR	855400	PrimaryExpression	2		853741	1					
ANR	855401	CallExpression	"r_num_math ( core -> num , input + 2 )"		853741	1					
ANR	855402	Callee	r_num_math		853741	0					
ANR	855403	Identifier	r_num_math		853741	0					
ANR	855404	ArgumentList	core -> num		853741	1					
ANR	855405	Argument	core -> num		853741	0					
ANR	855406	PtrMemberAccess	core -> num		853741	0					
ANR	855407	Identifier	core		853741	0					
ANR	855408	Identifier	num		853741	1					
ANR	855409	Argument	input + 2		853741	1					
ANR	855410	AdditiveExpression	input + 2		853741	0		+			
ANR	855411	Identifier	input		853741	0					
ANR	855412	PrimaryExpression	2		853741	1					
ANR	855413	PtrMemberAccess	core -> offset		853741	2					
ANR	855414	Identifier	core		853741	0					
ANR	855415	Identifier	offset		853741	1					
ANR	855416	ExpressionStatement	"r_core_gdiff_fcn ( core , addr , core -> offset )"	8019:32:228312:228355	853741	1	True				
ANR	855417	CallExpression	"r_core_gdiff_fcn ( core , addr , core -> offset )"		853741	0					
ANR	855418	Callee	r_core_gdiff_fcn		853741	0					
ANR	855419	Identifier	r_core_gdiff_fcn		853741	0					
ANR	855420	ArgumentList	core		853741	1					
ANR	855421	Argument	core		853741	0					
ANR	855422	Identifier	core		853741	0					
ANR	855423	Argument	addr		853741	1					
ANR	855424	Identifier	addr		853741	0					
ANR	855425	Argument	core -> offset		853741	2					
ANR	855426	PtrMemberAccess	core -> offset		853741	0					
ANR	855427	Identifier	core		853741	0					
ANR	855428	Identifier	offset		853741	1					
ANR	855429	ExpressionStatement	"r_core_anal_graph ( core , addr , diff_opt | R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM )"	8020:32:228389:228481	853741	2	True				
ANR	855430	CallExpression	"r_core_anal_graph ( core , addr , diff_opt | R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM )"		853741	0					
ANR	855431	Callee	r_core_anal_graph		853741	0					
ANR	855432	Identifier	r_core_anal_graph		853741	0					
ANR	855433	ArgumentList	core		853741	1					
ANR	855434	Argument	core		853741	0					
ANR	855435	Identifier	core		853741	0					
ANR	855436	Argument	addr		853741	1					
ANR	855437	Identifier	addr		853741	0					
ANR	855438	Argument	diff_opt | R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM		853741	2					
ANR	855439	InclusiveOrExpression	diff_opt | R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM		853741	0		|			
ANR	855440	Identifier	diff_opt		853741	0					
ANR	855441	InclusiveOrExpression	R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM		853741	1		|			
ANR	855442	Identifier	R_CORE_ANAL_JSON		853741	0					
ANR	855443	Identifier	R_CORE_ANAL_JSON_FORMAT_DISASM		853741	1					
ANR	855444	BreakStatement	break ;	8021:32:228515:228520	853741	3	True				
ANR	855445	Label	case '*' :	8023:24:228572:228580	853741	4	True				
ANR	855446	CompoundStatement		373:32:9431:9502	853741	5					
ANR	855447	IdentifierDeclStatement	"ut64 addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset ;"	8024:32:228616:228687	853741	0	True				
ANR	855448	IdentifierDecl	"addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	0					
ANR	855449	IdentifierDeclType	ut64		853741	0					
ANR	855450	Identifier	addr		853741	1					
ANR	855451	AssignmentExpression	"addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	2		=			
ANR	855452	Identifier	addr		853741	0					
ANR	855453	ConditionalExpression	"input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	1					
ANR	855454	Condition	input [ 2 ]		853741	0					
ANR	855455	ArrayIndexing	input [ 2 ]		853741	0					
ANR	855456	Identifier	input		853741	0					
ANR	855457	PrimaryExpression	2		853741	1					
ANR	855458	CallExpression	"r_num_math ( core -> num , input + 2 )"		853741	1					
ANR	855459	Callee	r_num_math		853741	0					
ANR	855460	Identifier	r_num_math		853741	0					
ANR	855461	ArgumentList	core -> num		853741	1					
ANR	855462	Argument	core -> num		853741	0					
ANR	855463	PtrMemberAccess	core -> num		853741	0					
ANR	855464	Identifier	core		853741	0					
ANR	855465	Identifier	num		853741	1					
ANR	855466	Argument	input + 2		853741	1					
ANR	855467	AdditiveExpression	input + 2		853741	0		+			
ANR	855468	Identifier	input		853741	0					
ANR	855469	PrimaryExpression	2		853741	1					
ANR	855470	PtrMemberAccess	core -> offset		853741	2					
ANR	855471	Identifier	core		853741	0					
ANR	855472	Identifier	offset		853741	1					
ANR	855473	ExpressionStatement	"r_core_gdiff_fcn ( core , addr , core -> offset )"	8025:32:228721:228764	853741	1	True				
ANR	855474	CallExpression	"r_core_gdiff_fcn ( core , addr , core -> offset )"		853741	0					
ANR	855475	Callee	r_core_gdiff_fcn		853741	0					
ANR	855476	Identifier	r_core_gdiff_fcn		853741	0					
ANR	855477	ArgumentList	core		853741	1					
ANR	855478	Argument	core		853741	0					
ANR	855479	Identifier	core		853741	0					
ANR	855480	Argument	addr		853741	1					
ANR	855481	Identifier	addr		853741	0					
ANR	855482	Argument	core -> offset		853741	2					
ANR	855483	PtrMemberAccess	core -> offset		853741	0					
ANR	855484	Identifier	core		853741	0					
ANR	855485	Identifier	offset		853741	1					
ANR	855486	ExpressionStatement	"r_core_anal_graph ( core , addr , diff_opt | R_CORE_ANAL_STAR )"	8026:32:228798:228857	853741	2	True				
ANR	855487	CallExpression	"r_core_anal_graph ( core , addr , diff_opt | R_CORE_ANAL_STAR )"		853741	0					
ANR	855488	Callee	r_core_anal_graph		853741	0					
ANR	855489	Identifier	r_core_anal_graph		853741	0					
ANR	855490	ArgumentList	core		853741	1					
ANR	855491	Argument	core		853741	0					
ANR	855492	Identifier	core		853741	0					
ANR	855493	Argument	addr		853741	1					
ANR	855494	Identifier	addr		853741	0					
ANR	855495	Argument	diff_opt | R_CORE_ANAL_STAR		853741	2					
ANR	855496	InclusiveOrExpression	diff_opt | R_CORE_ANAL_STAR		853741	0		|			
ANR	855497	Identifier	diff_opt		853741	0					
ANR	855498	Identifier	R_CORE_ANAL_STAR		853741	1					
ANR	855499	BreakStatement	break ;	8027:32:228891:228896	853741	3	True				
ANR	855500	Label	case ' ' :	8029:24:228948:228956	853741	6	True				
ANR	855501	Label	case 0 :	8030:24:228982:228988	853741	7	True				
ANR	855502	Label	case 't' :	8031:24:229014:229022	853741	8	True				
ANR	855503	Label	case 'k' :	8032:24:229048:229056	853741	9	True				
ANR	855504	Label	case 'v' :	8033:24:229082:229090	853741	10	True				
ANR	855505	Label	case 'g' :	8034:24:229116:229124	853741	11	True				
ANR	855506	CompoundStatement		384:32:9975:10046	853741	12					
ANR	855507	IdentifierDeclStatement	"ut64 addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset ;"	8035:32:229160:229231	853741	0	True				
ANR	855508	IdentifierDecl	"addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	0					
ANR	855509	IdentifierDeclType	ut64		853741	0					
ANR	855510	Identifier	addr		853741	1					
ANR	855511	AssignmentExpression	"addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	2		=			
ANR	855512	Identifier	addr		853741	0					
ANR	855513	ConditionalExpression	"input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	1					
ANR	855514	Condition	input [ 2 ]		853741	0					
ANR	855515	ArrayIndexing	input [ 2 ]		853741	0					
ANR	855516	Identifier	input		853741	0					
ANR	855517	PrimaryExpression	2		853741	1					
ANR	855518	CallExpression	"r_num_math ( core -> num , input + 2 )"		853741	1					
ANR	855519	Callee	r_num_math		853741	0					
ANR	855520	Identifier	r_num_math		853741	0					
ANR	855521	ArgumentList	core -> num		853741	1					
ANR	855522	Argument	core -> num		853741	0					
ANR	855523	PtrMemberAccess	core -> num		853741	0					
ANR	855524	Identifier	core		853741	0					
ANR	855525	Identifier	num		853741	1					
ANR	855526	Argument	input + 2		853741	1					
ANR	855527	AdditiveExpression	input + 2		853741	0		+			
ANR	855528	Identifier	input		853741	0					
ANR	855529	PrimaryExpression	2		853741	1					
ANR	855530	PtrMemberAccess	core -> offset		853741	2					
ANR	855531	Identifier	core		853741	0					
ANR	855532	Identifier	offset		853741	1					
ANR	855533	Statement	r_core_cmdf	8036:32:229265:229275	853741	1	True				
ANR	855534	Statement	(	8036:44:229277:229277	853741	2	True				
ANR	855535	Statement	core	8036:45:229278:229281	853741	3	True				
ANR	855536	Statement	","	8036:49:229282:229282	853741	4	True				
ANR	855537	Statement	"""ag-; .agd* @ %"""	8036:51:229284:229299	853741	5	True				
ANR	855538	Statement	PFMT64u	8036:67:229300:229306	853741	6	True				
ANR	855539	Statement	"""; agg%s;"""	8036:74:229307:229316	853741	7	True				
ANR	855540	Statement	","	8036:84:229317:229317	853741	8	True				
ANR	855541	Statement	addr	8036:86:229319:229322	853741	9	True				
ANR	855542	Statement	","	8036:90:229323:229323	853741	10	True				
ANR	855543	Statement	input	8036:92:229325:229329	853741	11	True				
ANR	855544	Statement	+	8036:98:229331:229331	853741	12	True				
ANR	855545	Statement	1	8036:100:229333:229333	853741	13	True				
ANR	855546	Statement	)	8036:101:229334:229334	853741	14	True				
ANR	855547	ExpressionStatement		8036:102:229335:229335	853741	15	True				
ANR	855548	BreakStatement	break ;	8037:32:229369:229374	853741	16	True				
ANR	855549	Label	case 'd' :	8039:24:229426:229434	853741	13	True				
ANR	855550	CompoundStatement		389:32:10285:10356	853741	14					
ANR	855551	IdentifierDeclStatement	"ut64 addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset ;"	8040:32:229470:229541	853741	0	True				
ANR	855552	IdentifierDecl	"addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	0					
ANR	855553	IdentifierDeclType	ut64		853741	0					
ANR	855554	Identifier	addr		853741	1					
ANR	855555	AssignmentExpression	"addr = input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	2		=			
ANR	855556	Identifier	addr		853741	0					
ANR	855557	ConditionalExpression	"input [ 2 ] ? r_num_math ( core -> num , input + 2 ) : core -> offset"		853741	1					
ANR	855558	Condition	input [ 2 ]		853741	0					
ANR	855559	ArrayIndexing	input [ 2 ]		853741	0					
ANR	855560	Identifier	input		853741	0					
ANR	855561	PrimaryExpression	2		853741	1					
ANR	855562	CallExpression	"r_num_math ( core -> num , input + 2 )"		853741	1					
ANR	855563	Callee	r_num_math		853741	0					
ANR	855564	Identifier	r_num_math		853741	0					
ANR	855565	ArgumentList	core -> num		853741	1					
ANR	855566	Argument	core -> num		853741	0					
ANR	855567	PtrMemberAccess	core -> num		853741	0					
ANR	855568	Identifier	core		853741	0					
ANR	855569	Identifier	num		853741	1					
ANR	855570	Argument	input + 2		853741	1					
ANR	855571	AdditiveExpression	input + 2		853741	0		+			
ANR	855572	Identifier	input		853741	0					
ANR	855573	PrimaryExpression	2		853741	1					
ANR	855574	PtrMemberAccess	core -> offset		853741	2					
ANR	855575	Identifier	core		853741	0					
ANR	855576	Identifier	offset		853741	1					
ANR	855577	ExpressionStatement	"r_core_gdiff_fcn ( core , addr , core -> offset )"	8041:32:229575:229618	853741	1	True				
ANR	855578	CallExpression	"r_core_gdiff_fcn ( core , addr , core -> offset )"		853741	0					
ANR	855579	Callee	r_core_gdiff_fcn		853741	0					
ANR	855580	Identifier	r_core_gdiff_fcn		853741	0					
ANR	855581	ArgumentList	core		853741	1					
ANR	855582	Argument	core		853741	0					
ANR	855583	Identifier	core		853741	0					
ANR	855584	Argument	addr		853741	1					
ANR	855585	Identifier	addr		853741	0					
ANR	855586	Argument	core -> offset		853741	2					
ANR	855587	PtrMemberAccess	core -> offset		853741	0					
ANR	855588	Identifier	core		853741	0					
ANR	855589	Identifier	offset		853741	1					
ANR	855590	ExpressionStatement	"r_core_anal_graph ( core , addr , diff_opt )"	8042:32:229652:229692	853741	2	True				
ANR	855591	CallExpression	"r_core_anal_graph ( core , addr , diff_opt )"		853741	0					
ANR	855592	Callee	r_core_anal_graph		853741	0					
ANR	855593	Identifier	r_core_anal_graph		853741	0					
ANR	855594	ArgumentList	core		853741	1					
ANR	855595	Argument	core		853741	0					
ANR	855596	Identifier	core		853741	0					
ANR	855597	Argument	addr		853741	1					
ANR	855598	Identifier	addr		853741	0					
ANR	855599	Argument	diff_opt		853741	2					
ANR	855600	Identifier	diff_opt		853741	0					
ANR	855601	BreakStatement	break ;	8043:32:229726:229731	853741	3	True				
ANR	855602	Label	case 'w' :	8045:24:229783:229791	853741	15	True				
ANR	855603	CompoundStatement		396:32:10736:10784	853741	16					
ANR	855604	Statement	char	8046:32:229827:229830	853741	0	True				
ANR	855605	Statement	*	8046:37:229832:229832	853741	1	True				
ANR	855606	Statement	cmdargs	8046:38:229833:229839	853741	2	True				
ANR	855607	Statement	=	8046:46:229841:229841	853741	3	True				
ANR	855608	Statement	r_str_newf	8046:48:229843:229852	853741	4	True				
ANR	855609	Statement	(	8046:59:229854:229854	853741	5	True				
ANR	855610	Statement	"""agdd 0x%"""	8046:60:229855:229864	853741	6	True				
ANR	855611	Statement	PFMT64x	8046:70:229865:229871	853741	7	True				
ANR	855612	Statement	","	8046:77:229872:229872	853741	8	True				
ANR	855613	Statement	core	8046:79:229874:229877	853741	9	True				
ANR	855614	Statement	->	8046:83:229878:229879	853741	10	True				
ANR	855615	Statement	offset	8046:85:229880:229885	853741	11	True				
ANR	855616	Statement	)	8046:91:229886:229886	853741	12	True				
ANR	855617	ExpressionStatement		8046:92:229887:229887	853741	13	True				
ANR	855618	IdentifierDeclStatement	"char * cmd = graph_cmd ( core , cmdargs , input + 2 ) ;"	8047:32:229921:229969	853741	14	True				
ANR	855619	IdentifierDecl	"* cmd = graph_cmd ( core , cmdargs , input + 2 )"		853741	0					
ANR	855620	IdentifierDeclType	char *		853741	0					
ANR	855621	Identifier	cmd		853741	1					
ANR	855622	AssignmentExpression	"* cmd = graph_cmd ( core , cmdargs , input + 2 )"		853741	2		=			
ANR	855623	Identifier	cmd		853741	0					
ANR	855624	CallExpression	"graph_cmd ( core , cmdargs , input + 2 )"		853741	1					
ANR	855625	Callee	graph_cmd		853741	0					
ANR	855626	Identifier	graph_cmd		853741	0					
ANR	855627	ArgumentList	core		853741	1					
ANR	855628	Argument	core		853741	0					
ANR	855629	Identifier	core		853741	0					
ANR	855630	Argument	cmdargs		853741	1					
ANR	855631	Identifier	cmdargs		853741	0					
ANR	855632	Argument	input + 2		853741	2					
ANR	855633	AdditiveExpression	input + 2		853741	0		+			
ANR	855634	Identifier	input		853741	0					
ANR	855635	PrimaryExpression	2		853741	1					
ANR	855636	IfStatement	if ( cmd && * cmd )		853741	15					
ANR	855637	Condition	cmd && * cmd	8048:36:230007:230017	853741	0	True				
ANR	855638	AndExpression	cmd && * cmd		853741	0		&&			
ANR	855639	Identifier	cmd		853741	0					
ANR	855640	UnaryOperationExpression	* cmd		853741	1					
ANR	855641	UnaryOperator	*		853741	0					
ANR	855642	Identifier	cmd		853741	1					
ANR	855643	CompoundStatement		397:49:10835:10835	853741	1					
ANR	855644	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	8049:40:230062:230084	853741	0	True				
ANR	855645	CallExpression	"r_core_cmd0 ( core , cmd )"		853741	0					
ANR	855646	Callee	r_core_cmd0		853741	0					
ANR	855647	Identifier	r_core_cmd0		853741	0					
ANR	855648	ArgumentList	core		853741	1					
ANR	855649	Argument	core		853741	0					
ANR	855650	Identifier	core		853741	0					
ANR	855651	Argument	cmd		853741	1					
ANR	855652	Identifier	cmd		853741	0					
ANR	855653	ExpressionStatement	free ( cmd )	8051:32:230152:230161	853741	16	True				
ANR	855654	CallExpression	free ( cmd )		853741	0					
ANR	855655	Callee	free		853741	0					
ANR	855656	Identifier	free		853741	0					
ANR	855657	ArgumentList	cmd		853741	1					
ANR	855658	Argument	cmd		853741	0					
ANR	855659	Identifier	cmd		853741	0					
ANR	855660	ExpressionStatement	free ( cmdargs )	8052:32:230195:230208	853741	17	True				
ANR	855661	CallExpression	free ( cmdargs )		853741	0					
ANR	855662	Callee	free		853741	0					
ANR	855663	Identifier	free		853741	0					
ANR	855664	ArgumentList	cmdargs		853741	1					
ANR	855665	Argument	cmdargs		853741	0					
ANR	855666	Identifier	cmdargs		853741	0					
ANR	855667	BreakStatement	break ;	8053:32:230242:230247	853741	18	True				
ANR	855668	BreakStatement	break ;	8056:16:230309:230314	853741	2	True				
ANR	855669	Label	case 'v' :	8058:1:230327:230335	853741	56	True				
ANR	855670	ExpressionStatement	"r_core_cmdf ( core , ""agfv%s"" , input + 1 )"	8059:2:230365:230404	853741	57	True				
ANR	855671	CallExpression	"r_core_cmdf ( core , ""agfv%s"" , input + 1 )"		853741	0					
ANR	855672	Callee	r_core_cmdf		853741	0					
ANR	855673	Identifier	r_core_cmdf		853741	0					
ANR	855674	ArgumentList	core		853741	1					
ANR	855675	Argument	core		853741	0					
ANR	855676	Identifier	core		853741	0					
ANR	855677	Argument	"""agfv%s"""		853741	1					
ANR	855678	PrimaryExpression	"""agfv%s"""		853741	0					
ANR	855679	Argument	input + 1		853741	2					
ANR	855680	AdditiveExpression	input + 1		853741	0		+			
ANR	855681	Identifier	input		853741	0					
ANR	855682	PrimaryExpression	1		853741	1					
ANR	855683	BreakStatement	break ;	8060:2:230408:230413	853741	58	True				
ANR	855684	Label	case 'w' :	8061:1:230416:230424	853741	59	True				
ANR	855685	IfStatement	"if ( r_config_get_i ( core -> config , ""graph.web"" ) )"		853741	60					
ANR	855686	Condition	"r_config_get_i ( core -> config , ""graph.web"" )"	8062:6:230440:230481	853741	0	True				
ANR	855687	CallExpression	"r_config_get_i ( core -> config , ""graph.web"" )"		853741	0					
ANR	855688	Callee	r_config_get_i		853741	0					
ANR	855689	Identifier	r_config_get_i		853741	0					
ANR	855690	ArgumentList	core -> config		853741	1					
ANR	855691	Argument	core -> config		853741	0					
ANR	855692	PtrMemberAccess	core -> config		853741	0					
ANR	855693	Identifier	core		853741	0					
ANR	855694	Identifier	config		853741	1					
ANR	855695	Argument	"""graph.web"""		853741	1					
ANR	855696	PrimaryExpression	"""graph.web"""		853741	0					
ANR	855697	CompoundStatement		411:50:11299:11299	853741	1					
ANR	855698	ExpressionStatement	"r_core_cmd0 ( core , ""=H /graph/"" )"	8063:3:230489:230521	853741	0	True				
ANR	855699	CallExpression	"r_core_cmd0 ( core , ""=H /graph/"" )"		853741	0					
ANR	855700	Callee	r_core_cmd0		853741	0					
ANR	855701	Identifier	r_core_cmd0		853741	0					
ANR	855702	ArgumentList	core		853741	1					
ANR	855703	Argument	core		853741	0					
ANR	855704	Identifier	core		853741	0					
ANR	855705	Argument	"""=H /graph/"""		853741	1					
ANR	855706	PrimaryExpression	"""=H /graph/"""		853741	0					
ANR	855707	ElseStatement	else		853741	0					
ANR	855708	CompoundStatement		415:3:11419:11467	853741	0					
ANR	855709	Statement	char	8065:3:230537:230540	853741	0	True				
ANR	855710	Statement	*	8065:8:230542:230542	853741	1	True				
ANR	855711	Statement	cmdargs	8065:9:230543:230549	853741	2	True				
ANR	855712	Statement	=	8065:17:230551:230551	853741	3	True				
ANR	855713	Statement	r_str_newf	8065:19:230553:230562	853741	4	True				
ANR	855714	Statement	(	8065:30:230564:230564	853741	5	True				
ANR	855715	Statement	"""agfd @ 0x%"""	8065:31:230565:230576	853741	6	True				
ANR	855716	Statement	PFMT64x	8065:43:230577:230583	853741	7	True				
ANR	855717	Statement	","	8065:50:230584:230584	853741	8	True				
ANR	855718	Statement	core	8065:52:230586:230589	853741	9	True				
ANR	855719	Statement	->	8065:56:230590:230591	853741	10	True				
ANR	855720	Statement	offset	8065:58:230592:230597	853741	11	True				
ANR	855721	Statement	)	8065:64:230598:230598	853741	12	True				
ANR	855722	ExpressionStatement		8065:65:230599:230599	853741	13	True				
ANR	855723	IdentifierDeclStatement	"char * cmd = graph_cmd ( core , cmdargs , input + 1 ) ;"	8066:3:230604:230652	853741	14	True				
ANR	855724	IdentifierDecl	"* cmd = graph_cmd ( core , cmdargs , input + 1 )"		853741	0					
ANR	855725	IdentifierDeclType	char *		853741	0					
ANR	855726	Identifier	cmd		853741	1					
ANR	855727	AssignmentExpression	"* cmd = graph_cmd ( core , cmdargs , input + 1 )"		853741	2		=			
ANR	855728	Identifier	cmd		853741	0					
ANR	855729	CallExpression	"graph_cmd ( core , cmdargs , input + 1 )"		853741	1					
ANR	855730	Callee	graph_cmd		853741	0					
ANR	855731	Identifier	graph_cmd		853741	0					
ANR	855732	ArgumentList	core		853741	1					
ANR	855733	Argument	core		853741	0					
ANR	855734	Identifier	core		853741	0					
ANR	855735	Argument	cmdargs		853741	1					
ANR	855736	Identifier	cmdargs		853741	0					
ANR	855737	Argument	input + 1		853741	2					
ANR	855738	AdditiveExpression	input + 1		853741	0		+			
ANR	855739	Identifier	input		853741	0					
ANR	855740	PrimaryExpression	1		853741	1					
ANR	855741	IfStatement	if ( cmd && * cmd )		853741	15					
ANR	855742	Condition	cmd && * cmd	8067:7:230661:230671	853741	0	True				
ANR	855743	AndExpression	cmd && * cmd		853741	0		&&			
ANR	855744	Identifier	cmd		853741	0					
ANR	855745	UnaryOperationExpression	* cmd		853741	1					
ANR	855746	UnaryOperator	*		853741	0					
ANR	855747	Identifier	cmd		853741	1					
ANR	855748	CompoundStatement		416:20:11489:11489	853741	1					
ANR	855749	IfStatement	if ( input [ 1 ] )		853741	0					
ANR	855750	Condition	input [ 1 ]	8068:8:230684:230691	853741	0	True				
ANR	855751	ArrayIndexing	input [ 1 ]		853741	0					
ANR	855752	Identifier	input		853741	0					
ANR	855753	PrimaryExpression	1		853741	1					
ANR	855754	CompoundStatement		417:18:11509:11509	853741	1					
ANR	855755	ExpressionStatement	"r_cons_printf ( ""Saving to file %s ...\\n"" , input + 1 )"	8069:5:230701:230753	853741	0	True				
ANR	855756	CallExpression	"r_cons_printf ( ""Saving to file %s ...\\n"" , input + 1 )"		853741	0					
ANR	855757	Callee	r_cons_printf		853741	0					
ANR	855758	Identifier	r_cons_printf		853741	0					
ANR	855759	ArgumentList	"""Saving to file %s ...\\n"""		853741	1					
ANR	855760	Argument	"""Saving to file %s ...\\n"""		853741	0					
ANR	855761	PrimaryExpression	"""Saving to file %s ...\\n"""		853741	0					
ANR	855762	Argument	input + 1		853741	1					
ANR	855763	AdditiveExpression	input + 1		853741	0		+			
ANR	855764	Identifier	input		853741	0					
ANR	855765	PrimaryExpression	1		853741	1					
ANR	855766	ExpressionStatement	r_cons_flush ( )	8070:5:230760:230775	853741	1	True				
ANR	855767	CallExpression	r_cons_flush ( )		853741	0					
ANR	855768	Callee	r_cons_flush		853741	0					
ANR	855769	Identifier	r_cons_flush		853741	0					
ANR	855770	ArgumentList			853741	1					
ANR	855771	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	8072:4:230787:230810	853741	1	True				
ANR	855772	CallExpression	"r_core_cmd0 ( core , cmd )"		853741	0					
ANR	855773	Callee	r_core_cmd0		853741	0					
ANR	855774	Identifier	r_core_cmd0		853741	0					
ANR	855775	ArgumentList	core		853741	1					
ANR	855776	Argument	core		853741	0					
ANR	855777	Identifier	core		853741	0					
ANR	855778	Argument	cmd		853741	1					
ANR	855779	Identifier	cmd		853741	0					
ANR	855780	ExpressionStatement	free ( cmd )	8074:3:230820:230830	853741	16	True				
ANR	855781	CallExpression	free ( cmd )		853741	0					
ANR	855782	Callee	free		853741	0					
ANR	855783	Identifier	free		853741	0					
ANR	855784	ArgumentList	cmd		853741	1					
ANR	855785	Argument	cmd		853741	0					
ANR	855786	Identifier	cmd		853741	0					
ANR	855787	ExpressionStatement	free ( cmdargs )	8075:3:230835:230849	853741	17	True				
ANR	855788	CallExpression	free ( cmdargs )		853741	0					
ANR	855789	Callee	free		853741	0					
ANR	855790	Identifier	free		853741	0					
ANR	855791	ArgumentList	cmdargs		853741	1					
ANR	855792	Argument	cmdargs		853741	0					
ANR	855793	Identifier	cmdargs		853741	0					
ANR	855794	BreakStatement	break ;	8077:2:230857:230862	853741	61	True				
ANR	855795	Label	default :	8078:1:230865:230872	853741	62	True				
ANR	855796	Identifier	default		853741	0					
ANR	855797	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ag )"	8079:2:230876:230911	853741	63	True				
ANR	855798	CallExpression	"r_core_cmd_help ( core , help_msg_ag )"		853741	0					
ANR	855799	Callee	r_core_cmd_help		853741	0					
ANR	855800	Identifier	r_core_cmd_help		853741	0					
ANR	855801	ArgumentList	core		853741	1					
ANR	855802	Argument	core		853741	0					
ANR	855803	Identifier	core		853741	0					
ANR	855804	Argument	help_msg_ag		853741	1					
ANR	855805	Identifier	help_msg_ag		853741	0					
ANR	855806	BreakStatement	break ;	8080:2:230915:230920	853741	64	True				
ANR	855807	ReturnType	static void		853741	1					
ANR	855808	Identifier	cmd_anal_graph		853741	2					
ANR	855809	ParameterList	"RCore * core , const char * input"		853741	3					
ANR	855810	Parameter	RCore * core	7652:27:219152:219162	853741	0	True				
ANR	855811	ParameterType	RCore *		853741	0					
ANR	855812	Identifier	core		853741	1					
ANR	855813	Parameter	const char * input	7652:40:219165:219181	853741	1	True				
ANR	855814	ParameterType	const char *		853741	0					
ANR	855815	Identifier	input		853741	1					
ANR	855816	CFGEntryNode	ENTRY		853741		True				
ANR	855817	CFGExitNode	EXIT		853741		True				
ANR	855818	Symbol	* fcn		853741						
ANR	855819	Symbol	* input		853741						
ANR	855820	Symbol	R_CORE_ANAL_GRAPHDIFF		853741						
ANR	855821	Symbol	core -> offset		853741						
ANR	855822	Symbol	core -> graph -> show_node_titles		853741						
ANR	855823	Symbol	* core -> graph		853741						
ANR	855824	Symbol	from		853741						
ANR	855825	Symbol	* cmd		853741						
ANR	855826	Symbol	core -> num		853741						
ANR	855827	Symbol	NULL		853741						
ANR	855828	Symbol	R_BETWEEN		853741						
ANR	855829	Symbol	R_GRAPH_FORMAT_GMLFCN		853741						
ANR	855830	Symbol	R_GRAPH_FORMAT_JSON		853741						
ANR	855831	Symbol	it		853741						
ANR	855832	Symbol	cmdargs		853741						
ANR	855833	Symbol	core		853741						
ANR	855834	Symbol	input		853741						
ANR	855835	Symbol	R_GRAPH_FORMAT_CMD		853741						
ANR	855836	Symbol	R_CORE_ANAL_JSON_FORMAT_DISASM		853741						
ANR	855837	Symbol	r_config_get_i		853741						
ANR	855838	Symbol	R_ANAL_FCN_TYPE_ROOT		853741						
ANR	855839	Symbol	true		853741						
ANR	855840	Symbol	cmd		853741						
ANR	855841	Symbol	R_GRAPH_FORMAT_GML		853741						
ANR	855842	Symbol	R_GRAPH_FORMAT_DOT		853741						
ANR	855843	Symbol	diff_opt		853741						
ANR	855844	Symbol	* core		853741						
ANR	855845	Symbol	R_CORE_ANAL_GRAPHLINES		853741						
ANR	855846	Symbol	core -> anal		853741						
ANR	855847	Symbol	r_num_math		853741						
ANR	855848	Symbol	fcn		853741						
ANR	855849	Symbol	r_config_hold_new		853741						
ANR	855850	Symbol	graph_cmd		853741						
ANR	855851	Symbol	help_msg_ag		853741						
ANR	855852	Symbol	UT64_MAX		853741						
ANR	855853	Symbol	addr		853741						
ANR	855854	Symbol	* * core		853741						
ANR	855855	Symbol	core -> config		853741						
ANR	855856	Symbol	core -> graph		853741						
ANR	855857	Symbol	e		853741						
ANR	855858	Symbol	false		853741						
ANR	855859	Symbol	R_CORE_ANAL_STAR		853741						
ANR	855860	Symbol	R_CORE_ANAL_GRAPHBODY		853741						
ANR	855861	Symbol	r_anal_get_fcn_in		853741						
ANR	855862	Symbol	core -> graph -> is_callgraph		853741						
ANR	855863	Symbol	o_graph_offset		853741						
ANR	855864	Symbol	* ( input + 2 )		853741						
ANR	855865	Symbol	R_CORE_ANAL_JSON		853741						
ANR	855866	Symbol	fcn -> addr		853741						
ANR	855867	Symbol	hc		853741						
ANR	855868	Symbol	to		853741						
ANR	855869	Function	r_core_anal_refs	8084:0:230928:232970							
ANR	855870	FunctionDef	"r_core_anal_refs (RCore * core , const char * input)"		855869	0					
ANR	855871	CompoundStatement		8084:59:230987:232970	855869	0					
ANR	855872	IdentifierDeclStatement	"int cfg_debug = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	8085:1:230990:231048	855869	0	True				
ANR	855873	IdentifierDecl	"cfg_debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		855869	0					
ANR	855874	IdentifierDeclType	int		855869	0					
ANR	855875	Identifier	cfg_debug		855869	1					
ANR	855876	AssignmentExpression	"cfg_debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		855869	2		=			
ANR	855877	Identifier	cfg_debug		855869	0					
ANR	855878	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		855869	1					
ANR	855879	Callee	r_config_get_i		855869	0					
ANR	855880	Identifier	r_config_get_i		855869	0					
ANR	855881	ArgumentList	core -> config		855869	1					
ANR	855882	Argument	core -> config		855869	0					
ANR	855883	PtrMemberAccess	core -> config		855869	0					
ANR	855884	Identifier	core		855869	0					
ANR	855885	Identifier	config		855869	1					
ANR	855886	Argument	"""cfg.debug"""		855869	1					
ANR	855887	PrimaryExpression	"""cfg.debug"""		855869	0					
ANR	855888	IdentifierDeclStatement	"ut64 from , to ;"	8086:1:231051:231064	855869	1	True				
ANR	855889	IdentifierDecl	from		855869	0					
ANR	855890	IdentifierDeclType	ut64		855869	0					
ANR	855891	Identifier	from		855869	1					
ANR	855892	IdentifierDecl	to		855869	1					
ANR	855893	IdentifierDeclType	ut64		855869	0					
ANR	855894	Identifier	to		855869	1					
ANR	855895	IdentifierDeclStatement	int rad ;	8087:1:231067:231074	855869	2	True				
ANR	855896	IdentifierDecl	rad		855869	0					
ANR	855897	IdentifierDeclType	int		855869	0					
ANR	855898	Identifier	rad		855869	1					
ANR	855899	IfStatement	if ( * input == '?' )		855869	3					
ANR	855900	Condition	* input == '?'	8088:5:231081:231093	855869	0	True				
ANR	855901	EqualityExpression	* input == '?'		855869	0		==			
ANR	855902	UnaryOperationExpression	* input		855869	0					
ANR	855903	UnaryOperator	*		855869	0					
ANR	855904	Identifier	input		855869	1					
ANR	855905	PrimaryExpression	'?'		855869	1					
ANR	855906	CompoundStatement		5:20:108:108	855869	1					
ANR	855907	ExpressionStatement	"r_core_cmd_help ( core , help_msg_aar )"	8089:2:231100:231136	855869	0	True				
ANR	855908	CallExpression	"r_core_cmd_help ( core , help_msg_aar )"		855869	0					
ANR	855909	Callee	r_core_cmd_help		855869	0					
ANR	855910	Identifier	r_core_cmd_help		855869	0					
ANR	855911	ArgumentList	core		855869	1					
ANR	855912	Argument	core		855869	0					
ANR	855913	Identifier	core		855869	0					
ANR	855914	Argument	help_msg_aar		855869	1					
ANR	855915	Identifier	help_msg_aar		855869	0					
ANR	855916	ReturnStatement	return 0 ;	8090:2:231140:231148	855869	1	True				
ANR	855917	PrimaryExpression	0		855869	0					
ANR	855918	IfStatement	if ( * input == 'j' || * input == '*' )		855869	4					
ANR	855919	Condition	* input == 'j' || * input == '*'	8093:5:231159:231188	855869	0	True				
ANR	855920	OrExpression	* input == 'j' || * input == '*'		855869	0		||			
ANR	855921	EqualityExpression	* input == 'j'		855869	0		==			
ANR	855922	UnaryOperationExpression	* input		855869	0					
ANR	855923	UnaryOperator	*		855869	0					
ANR	855924	Identifier	input		855869	1					
ANR	855925	PrimaryExpression	'j'		855869	1					
ANR	855926	EqualityExpression	* input == '*'		855869	1		==			
ANR	855927	UnaryOperationExpression	* input		855869	0					
ANR	855928	UnaryOperator	*		855869	0					
ANR	855929	Identifier	input		855869	1					
ANR	855930	PrimaryExpression	'*'		855869	1					
ANR	855931	CompoundStatement		10:37:203:203	855869	1					
ANR	855932	ExpressionStatement	rad = * input	8094:2:231195:231207	855869	0	True				
ANR	855933	AssignmentExpression	rad = * input		855869	0		=			
ANR	855934	Identifier	rad		855869	0					
ANR	855935	UnaryOperationExpression	* input		855869	1					
ANR	855936	UnaryOperator	*		855869	0					
ANR	855937	Identifier	input		855869	1					
ANR	855938	ExpressionStatement	input ++	8095:2:231211:231218	855869	1	True				
ANR	855939	PostIncDecOperationExpression	input ++		855869	0					
ANR	855940	Identifier	input		855869	0					
ANR	855941	IncDec	++		855869	1					
ANR	855942	ElseStatement	else		855869	0					
ANR	855943	CompoundStatement		13:8:240:240	855869	0					
ANR	855944	ExpressionStatement	rad = 0	8097:2:231232:231239	855869	0	True				
ANR	855945	AssignmentExpression	rad = 0		855869	0		=			
ANR	855946	Identifier	rad		855869	0					
ANR	855947	PrimaryExpression	0		855869	1					
ANR	855948	ExpressionStatement	from = to = 0	8100:1:231246:231259	855869	5	True				
ANR	855949	AssignmentExpression	from = to = 0		855869	0		=			
ANR	855950	Identifier	from		855869	0					
ANR	855951	AssignmentExpression	to = 0		855869	1		=			
ANR	855952	Identifier	to		855869	0					
ANR	855953	PrimaryExpression	0		855869	1					
ANR	855954	IdentifierDeclStatement	char * ptr = r_str_trim_head ( strdup ( input ) ) ;	8101:1:231262:231306	855869	6	True				
ANR	855955	IdentifierDecl	* ptr = r_str_trim_head ( strdup ( input ) )		855869	0					
ANR	855956	IdentifierDeclType	char *		855869	0					
ANR	855957	Identifier	ptr		855869	1					
ANR	855958	AssignmentExpression	* ptr = r_str_trim_head ( strdup ( input ) )		855869	2		=			
ANR	855959	Identifier	ptr		855869	0					
ANR	855960	CallExpression	r_str_trim_head ( strdup ( input ) )		855869	1					
ANR	855961	Callee	r_str_trim_head		855869	0					
ANR	855962	Identifier	r_str_trim_head		855869	0					
ANR	855963	ArgumentList	strdup ( input )		855869	1					
ANR	855964	Argument	strdup ( input )		855869	0					
ANR	855965	CallExpression	strdup ( input )		855869	0					
ANR	855966	Callee	strdup		855869	0					
ANR	855967	Identifier	strdup		855869	0					
ANR	855968	ArgumentList	input		855869	1					
ANR	855969	Argument	input		855869	0					
ANR	855970	Identifier	input		855869	0					
ANR	855971	IdentifierDeclStatement	int n = r_str_word_set0 ( ptr ) ;	8102:1:231309:231338	855869	7	True				
ANR	855972	IdentifierDecl	n = r_str_word_set0 ( ptr )		855869	0					
ANR	855973	IdentifierDeclType	int		855869	0					
ANR	855974	Identifier	n		855869	1					
ANR	855975	AssignmentExpression	n = r_str_word_set0 ( ptr )		855869	2		=			
ANR	855976	Identifier	n		855869	0					
ANR	855977	CallExpression	r_str_word_set0 ( ptr )		855869	1					
ANR	855978	Callee	r_str_word_set0		855869	0					
ANR	855979	Identifier	r_str_word_set0		855869	0					
ANR	855980	ArgumentList	ptr		855869	1					
ANR	855981	Argument	ptr		855869	0					
ANR	855982	Identifier	ptr		855869	0					
ANR	855983	IfStatement	if ( ! n )		855869	8					
ANR	855984	Condition	! n	8103:5:231345:231346	855869	0	True				
ANR	855985	UnaryOperationExpression	! n		855869	0					
ANR	855986	UnaryOperator	!		855869	0					
ANR	855987	Identifier	n		855869	1					
ANR	855988	CompoundStatement		20:9:361:361	855869	1					
ANR	855989	IfStatement	if ( cfg_debug )		855869	0					
ANR	855990	Condition	cfg_debug	8105:6:231418:231426	855869	0	True				
ANR	855991	Identifier	cfg_debug		855869	0					
ANR	855992	CompoundStatement		23:3:446:504	855869	1					
ANR	855993	IdentifierDeclStatement	"RDebugMap * map = r_debug_map_get ( core -> dbg , core -> offset ) ;"	8106:3:231434:231492	855869	0	True				
ANR	855994	IdentifierDecl	"* map = r_debug_map_get ( core -> dbg , core -> offset )"		855869	0					
ANR	855995	IdentifierDeclType	RDebugMap *		855869	0					
ANR	855996	Identifier	map		855869	1					
ANR	855997	AssignmentExpression	"* map = r_debug_map_get ( core -> dbg , core -> offset )"		855869	2		=			
ANR	855998	Identifier	map		855869	0					
ANR	855999	CallExpression	"r_debug_map_get ( core -> dbg , core -> offset )"		855869	1					
ANR	856000	Callee	r_debug_map_get		855869	0					
ANR	856001	Identifier	r_debug_map_get		855869	0					
ANR	856002	ArgumentList	core -> dbg		855869	1					
ANR	856003	Argument	core -> dbg		855869	0					
ANR	856004	PtrMemberAccess	core -> dbg		855869	0					
ANR	856005	Identifier	core		855869	0					
ANR	856006	Identifier	dbg		855869	1					
ANR	856007	Argument	core -> offset		855869	1					
ANR	856008	PtrMemberAccess	core -> offset		855869	0					
ANR	856009	Identifier	core		855869	0					
ANR	856010	Identifier	offset		855869	1					
ANR	856011	IfStatement	if ( map )		855869	1					
ANR	856012	Condition	map	8107:7:231501:231503	855869	0	True				
ANR	856013	Identifier	map		855869	0					
ANR	856014	CompoundStatement		24:12:518:518	855869	1					
ANR	856015	ExpressionStatement	from = map -> addr	8108:4:231512:231528	855869	0	True				
ANR	856016	AssignmentExpression	from = map -> addr		855869	0		=			
ANR	856017	Identifier	from		855869	0					
ANR	856018	PtrMemberAccess	map -> addr		855869	1					
ANR	856019	Identifier	map		855869	0					
ANR	856020	Identifier	addr		855869	1					
ANR	856021	ExpressionStatement	to = map -> addr_end	8109:4:231534:231552	855869	1	True				
ANR	856022	AssignmentExpression	to = map -> addr_end		855869	0		=			
ANR	856023	Identifier	to		855869	0					
ANR	856024	PtrMemberAccess	map -> addr_end		855869	1					
ANR	856025	Identifier	map		855869	0					
ANR	856026	Identifier	addr_end		855869	1					
ANR	856027	ElseStatement	else		855869	0					
ANR	856028	CompoundStatement		38:3:783:794	855869	0					
ANR	856029	IdentifierDeclStatement	"RList * list = r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" ) ;"	8112:3:231573:231644	855869	0	True				
ANR	856030	IdentifierDecl	"* list = r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" )"		855869	0					
ANR	856031	IdentifierDeclType	RList *		855869	0					
ANR	856032	Identifier	list		855869	1					
ANR	856033	AssignmentExpression	"* list = r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" )"		855869	2		=			
ANR	856034	Identifier	list		855869	0					
ANR	856035	CallExpression	"r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" )"		855869	1					
ANR	856036	Callee	r_core_get_boundaries_prot		855869	0					
ANR	856037	Identifier	r_core_get_boundaries_prot		855869	0					
ANR	856038	ArgumentList	core		855869	1					
ANR	856039	Argument	core		855869	0					
ANR	856040	Identifier	core		855869	0					
ANR	856041	Argument	R_PERM_X		855869	1					
ANR	856042	Identifier	R_PERM_X		855869	0					
ANR	856043	Argument	NULL		855869	2					
ANR	856044	Identifier	NULL		855869	0					
ANR	856045	Argument	"""anal"""		855869	3					
ANR	856046	PrimaryExpression	"""anal"""		855869	0					
ANR	856047	IdentifierDeclStatement	RListIter * iter ;	8113:3:231649:231664	855869	1	True				
ANR	856048	IdentifierDecl	* iter		855869	0					
ANR	856049	IdentifierDeclType	RListIter *		855869	0					
ANR	856050	Identifier	iter		855869	1					
ANR	856051	IdentifierDeclStatement	RIOMap * map ;	8114:3:231669:231680	855869	2	True				
ANR	856052	IdentifierDecl	* map		855869	0					
ANR	856053	IdentifierDeclType	RIOMap *		855869	0					
ANR	856054	Identifier	map		855869	1					
ANR	856055	IfStatement	if ( ! list )		855869	3					
ANR	856056	Condition	! list	8115:7:231689:231693	855869	0	True				
ANR	856057	UnaryOperationExpression	! list		855869	0					
ANR	856058	UnaryOperator	!		855869	0					
ANR	856059	Identifier	list		855869	1					
ANR	856060	CompoundStatement		32:14:708:708	855869	1					
ANR	856061	ReturnStatement	return 0 ;	8116:4:231702:231710	855869	0	True				
ANR	856062	PrimaryExpression	0		855869	0					
ANR	856063	IfStatement	if ( rad == 'j' )		855869	4					
ANR	856064	Condition	rad == 'j'	8118:7:231724:231733	855869	0	True				
ANR	856065	EqualityExpression	rad == 'j'		855869	0		==			
ANR	856066	Identifier	rad		855869	0					
ANR	856067	PrimaryExpression	'j'		855869	1					
ANR	856068	CompoundStatement		35:19:748:748	855869	1					
ANR	856069	ExpressionStatement	"r_cons_printf ( ""{"" )"	8119:4:231742:231761	855869	0	True				
ANR	856070	CallExpression	"r_cons_printf ( ""{"" )"		855869	0					
ANR	856071	Callee	r_cons_printf		855869	0					
ANR	856072	Identifier	r_cons_printf		855869	0					
ANR	856073	ArgumentList	"""{"""		855869	1					
ANR	856074	Argument	"""{"""		855869	0					
ANR	856075	PrimaryExpression	"""{"""		855869	0					
ANR	856076	IdentifierDeclStatement	int nth = 0 ;	8121:3:231771:231782	855869	5	True				
ANR	856077	IdentifierDecl	nth = 0		855869	0					
ANR	856078	IdentifierDeclType	int		855869	0					
ANR	856079	Identifier	nth		855869	1					
ANR	856080	AssignmentExpression	nth = 0		855869	2		=			
ANR	856081	Identifier	nth		855869	0					
ANR	856082	PrimaryExpression	0		855869	1					
ANR	856083	Statement	r_list_foreach	8122:3:231787:231800	855869	6	True				
ANR	856084	Statement	(	8122:18:231802:231802	855869	7	True				
ANR	856085	Statement	list	8122:19:231803:231806	855869	8	True				
ANR	856086	Statement	","	8122:23:231807:231807	855869	9	True				
ANR	856087	Statement	iter	8122:25:231809:231812	855869	10	True				
ANR	856088	Statement	","	8122:29:231813:231813	855869	11	True				
ANR	856089	Statement	map	8122:31:231815:231817	855869	12	True				
ANR	856090	Statement	)	8122:34:231818:231818	855869	13	True				
ANR	856091	CompoundStatement		39:36:832:832	855869	14					
ANR	856092	ExpressionStatement	from = map -> itv . addr	8123:4:231826:231846	855869	0	True				
ANR	856093	AssignmentExpression	from = map -> itv . addr		855869	0		=			
ANR	856094	Identifier	from		855869	0					
ANR	856095	MemberAccess	map -> itv . addr		855869	1					
ANR	856096	PtrMemberAccess	map -> itv		855869	0					
ANR	856097	Identifier	map		855869	0					
ANR	856098	Identifier	itv		855869	1					
ANR	856099	Identifier	addr		855869	1					
ANR	856100	ExpressionStatement	to = r_itv_end ( map -> itv )	8124:4:231852:231877	855869	1	True				
ANR	856101	AssignmentExpression	to = r_itv_end ( map -> itv )		855869	0		=			
ANR	856102	Identifier	to		855869	0					
ANR	856103	CallExpression	r_itv_end ( map -> itv )		855869	1					
ANR	856104	Callee	r_itv_end		855869	0					
ANR	856105	Identifier	r_itv_end		855869	0					
ANR	856106	ArgumentList	map -> itv		855869	1					
ANR	856107	Argument	map -> itv		855869	0					
ANR	856108	PtrMemberAccess	map -> itv		855869	0					
ANR	856109	Identifier	map		855869	0					
ANR	856110	Identifier	itv		855869	1					
ANR	856111	IfStatement	if ( r_cons_is_breaked ( ) )		855869	2					
ANR	856112	Condition	r_cons_is_breaked ( )	8125:8:231887:231906	855869	0	True				
ANR	856113	CallExpression	r_cons_is_breaked ( )		855869	0					
ANR	856114	Callee	r_cons_is_breaked		855869	0					
ANR	856115	Identifier	r_cons_is_breaked		855869	0					
ANR	856116	ArgumentList			855869	1					
ANR	856117	CompoundStatement		42:30:921:921	855869	1					
ANR	856118	BreakStatement	break ;	8126:5:231916:231921	855869	0	True				
ANR	856119	IfStatement	if ( ! from && ! to )		855869	3					
ANR	856120	Condition	! from && ! to	8128:8:231937:231948	855869	0	True				
ANR	856121	AndExpression	! from && ! to		855869	0		&&			
ANR	856122	UnaryOperationExpression	! from		855869	0					
ANR	856123	UnaryOperator	!		855869	0					
ANR	856124	Identifier	from		855869	1					
ANR	856125	UnaryOperationExpression	! to		855869	1					
ANR	856126	UnaryOperator	!		855869	0					
ANR	856127	Identifier	to		855869	1					
ANR	856128	CompoundStatement		45:22:963:963	855869	1					
ANR	856129	ExpressionStatement	"eprintf ( ""Cannot determine xref search boundaries\\n"" )"	8129:5:231958:232011	855869	0	True				
ANR	856130	CallExpression	"eprintf ( ""Cannot determine xref search boundaries\\n"" )"		855869	0					
ANR	856131	Callee	eprintf		855869	0					
ANR	856132	Identifier	eprintf		855869	0					
ANR	856133	ArgumentList	"""Cannot determine xref search boundaries\\n"""		855869	1					
ANR	856134	Argument	"""Cannot determine xref search boundaries\\n"""		855869	0					
ANR	856135	PrimaryExpression	"""Cannot determine xref search boundaries\\n"""		855869	0					
ANR	856136	ElseStatement	else		855869	0					
ANR	856137	IfStatement	if ( to - from > UT32_MAX )		855869	0					
ANR	856138	Condition	to - from > UT32_MAX	8130:15:232028:232047	855869	0	True				
ANR	856139	RelationalExpression	to - from > UT32_MAX		855869	0		>			
ANR	856140	AdditiveExpression	to - from		855869	0		-			
ANR	856141	Identifier	to		855869	0					
ANR	856142	Identifier	from		855869	1					
ANR	856143	Identifier	UT32_MAX		855869	1					
ANR	856144	CompoundStatement		47:37:1062:1062	855869	1					
ANR	856145	ExpressionStatement	"eprintf ( ""Skipping huge range\\n"" )"	8131:5:232057:232090	855869	0	True				
ANR	856146	CallExpression	"eprintf ( ""Skipping huge range\\n"" )"		855869	0					
ANR	856147	Callee	eprintf		855869	0					
ANR	856148	Identifier	eprintf		855869	0					
ANR	856149	ArgumentList	"""Skipping huge range\\n"""		855869	1					
ANR	856150	Argument	"""Skipping huge range\\n"""		855869	0					
ANR	856151	PrimaryExpression	"""Skipping huge range\\n"""		855869	0					
ANR	856152	ElseStatement	else		855869	0					
ANR	856153	CompoundStatement		49:11:1115:1115	855869	0					
ANR	856154	IfStatement	if ( rad == 'j' )		855869	0					
ANR	856155	Condition	rad == 'j'	8133:9:232114:232123	855869	0	True				
ANR	856156	EqualityExpression	rad == 'j'		855869	0		==			
ANR	856157	Identifier	rad		855869	0					
ANR	856158	PrimaryExpression	'j'		855869	1					
ANR	856159	CompoundStatement		50:21:1138:1138	855869	1					
ANR	856160	ExpressionStatement	"r_cons_printf ( ""%s\\""mapid\\"":\\""%d\\"",\\""refs\\"":{"" , nth ? "","" : """" , map -> id )"	8134:6:232134:232204	855869	0	True				
ANR	856161	CallExpression	"r_cons_printf ( ""%s\\""mapid\\"":\\""%d\\"",\\""refs\\"":{"" , nth ? "","" : """" , map -> id )"		855869	0					
ANR	856162	Callee	r_cons_printf		855869	0					
ANR	856163	Identifier	r_cons_printf		855869	0					
ANR	856164	ArgumentList	"""%s\\""mapid\\"":\\""%d\\"",\\""refs\\"":{"""		855869	1					
ANR	856165	Argument	"""%s\\""mapid\\"":\\""%d\\"",\\""refs\\"":{"""		855869	0					
ANR	856166	PrimaryExpression	"""%s\\""mapid\\"":\\""%d\\"",\\""refs\\"":{"""		855869	0					
ANR	856167	Argument	"nth ? "","" : """""		855869	1					
ANR	856168	ConditionalExpression	"nth ? "","" : """""		855869	0					
ANR	856169	Condition	nth		855869	0					
ANR	856170	Identifier	nth		855869	0					
ANR	856171	PrimaryExpression	""","""		855869	1					
ANR	856172	PrimaryExpression	""""""		855869	2					
ANR	856173	Argument	map -> id		855869	2					
ANR	856174	PtrMemberAccess	map -> id		855869	0					
ANR	856175	Identifier	map		855869	0					
ANR	856176	Identifier	id		855869	1					
ANR	856177	ExpressionStatement	"r_core_anal_search_xrefs ( core , from , to , rad )"	8136:5:232218:232264	855869	1	True				
ANR	856178	CallExpression	"r_core_anal_search_xrefs ( core , from , to , rad )"		855869	0					
ANR	856179	Callee	r_core_anal_search_xrefs		855869	0					
ANR	856180	Identifier	r_core_anal_search_xrefs		855869	0					
ANR	856181	ArgumentList	core		855869	1					
ANR	856182	Argument	core		855869	0					
ANR	856183	Identifier	core		855869	0					
ANR	856184	Argument	from		855869	1					
ANR	856185	Identifier	from		855869	0					
ANR	856186	Argument	to		855869	2					
ANR	856187	Identifier	to		855869	0					
ANR	856188	Argument	rad		855869	3					
ANR	856189	Identifier	rad		855869	0					
ANR	856190	IfStatement	if ( rad == 'j' )		855869	2					
ANR	856191	Condition	rad == 'j'	8137:9:232275:232284	855869	0	True				
ANR	856192	EqualityExpression	rad == 'j'		855869	0		==			
ANR	856193	Identifier	rad		855869	0					
ANR	856194	PrimaryExpression	'j'		855869	1					
ANR	856195	CompoundStatement		54:21:1299:1299	855869	1					
ANR	856196	ExpressionStatement	"r_cons_printf ( ""}"" )"	8138:6:232295:232314	855869	0	True				
ANR	856197	CallExpression	"r_cons_printf ( ""}"" )"		855869	0					
ANR	856198	Callee	r_cons_printf		855869	0					
ANR	856199	Identifier	r_cons_printf		855869	0					
ANR	856200	ArgumentList	"""}"""		855869	1					
ANR	856201	Argument	"""}"""		855869	0					
ANR	856202	PrimaryExpression	"""}"""		855869	0					
ANR	856203	ExpressionStatement	nth ++	8140:5:232328:232333	855869	3	True				
ANR	856204	PostIncDecOperationExpression	nth ++		855869	0					
ANR	856205	Identifier	nth		855869	0					
ANR	856206	IncDec	++		855869	1					
ANR	856207	IfStatement	if ( rad == 'j' )		855869	15					
ANR	856208	Condition	rad == 'j'	8143:7:232353:232362	855869	0	True				
ANR	856209	EqualityExpression	rad == 'j'		855869	0		==			
ANR	856210	Identifier	rad		855869	0					
ANR	856211	PrimaryExpression	'j'		855869	1					
ANR	856212	CompoundStatement		60:19:1377:1377	855869	1					
ANR	856213	ExpressionStatement	"r_cons_printf ( ""}\\n"" )"	8144:4:232371:232392	855869	0	True				
ANR	856214	CallExpression	"r_cons_printf ( ""}\\n"" )"		855869	0					
ANR	856215	Callee	r_cons_printf		855869	0					
ANR	856216	Identifier	r_cons_printf		855869	0					
ANR	856217	ArgumentList	"""}\\n"""		855869	1					
ANR	856218	Argument	"""}\\n"""		855869	0					
ANR	856219	PrimaryExpression	"""}\\n"""		855869	0					
ANR	856220	ExpressionStatement	free ( ptr )	8146:3:232402:232412	855869	16	True				
ANR	856221	CallExpression	free ( ptr )		855869	0					
ANR	856222	Callee	free		855869	0					
ANR	856223	Identifier	free		855869	0					
ANR	856224	ArgumentList	ptr		855869	1					
ANR	856225	Argument	ptr		855869	0					
ANR	856226	Identifier	ptr		855869	0					
ANR	856227	ExpressionStatement	r_list_free ( list )	8147:3:232417:232435	855869	17	True				
ANR	856228	CallExpression	r_list_free ( list )		855869	0					
ANR	856229	Callee	r_list_free		855869	0					
ANR	856230	Identifier	r_list_free		855869	0					
ANR	856231	ArgumentList	list		855869	1					
ANR	856232	Argument	list		855869	0					
ANR	856233	Identifier	list		855869	0					
ANR	856234	ReturnStatement	return 1 ;	8148:3:232440:232448	855869	18	True				
ANR	856235	PrimaryExpression	1		855869	0					
ANR	856236	ElseStatement	else		855869	0					
ANR	856237	IfStatement	if ( n == 1 )		855869	0					
ANR	856238	Condition	n == 1	8150:12:232466:232471	855869	0	True				
ANR	856239	EqualityExpression	n == 1		855869	0		==			
ANR	856240	Identifier	n		855869	0					
ANR	856241	PrimaryExpression	1		855869	1					
ANR	856242	CompoundStatement		67:20:1486:1486	855869	1					
ANR	856243	ExpressionStatement	from = core -> offset	8151:2:232478:232497	855869	0	True				
ANR	856244	AssignmentExpression	from = core -> offset		855869	0		=			
ANR	856245	Identifier	from		855869	0					
ANR	856246	PtrMemberAccess	core -> offset		855869	1					
ANR	856247	Identifier	core		855869	0					
ANR	856248	Identifier	offset		855869	1					
ANR	856249	ExpressionStatement	"to = core -> offset + r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"	8152:2:232501:232569	855869	1	True				
ANR	856250	AssignmentExpression	"to = core -> offset + r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		855869	0		=			
ANR	856251	Identifier	to		855869	0					
ANR	856252	AdditiveExpression	"core -> offset + r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		855869	1		+			
ANR	856253	PtrMemberAccess	core -> offset		855869	0					
ANR	856254	Identifier	core		855869	0					
ANR	856255	Identifier	offset		855869	1					
ANR	856256	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( ptr , 0 ) )"		855869	1					
ANR	856257	Callee	r_num_math		855869	0					
ANR	856258	Identifier	r_num_math		855869	0					
ANR	856259	ArgumentList	core -> num		855869	1					
ANR	856260	Argument	core -> num		855869	0					
ANR	856261	PtrMemberAccess	core -> num		855869	0					
ANR	856262	Identifier	core		855869	0					
ANR	856263	Identifier	num		855869	1					
ANR	856264	Argument	"r_str_word_get0 ( ptr , 0 )"		855869	1					
ANR	856265	CallExpression	"r_str_word_get0 ( ptr , 0 )"		855869	0					
ANR	856266	Callee	r_str_word_get0		855869	0					
ANR	856267	Identifier	r_str_word_get0		855869	0					
ANR	856268	ArgumentList	ptr		855869	1					
ANR	856269	Argument	ptr		855869	0					
ANR	856270	Identifier	ptr		855869	0					
ANR	856271	Argument	0		855869	1					
ANR	856272	PrimaryExpression	0		855869	0					
ANR	856273	ElseStatement	else		855869	0					
ANR	856274	CompoundStatement		70:8:1591:1591	855869	0					
ANR	856275	ExpressionStatement	"eprintf ( ""Invalid number of arguments\\n"" )"	8154:2:232583:232624	855869	0	True				
ANR	856276	CallExpression	"eprintf ( ""Invalid number of arguments\\n"" )"		855869	0					
ANR	856277	Callee	eprintf		855869	0					
ANR	856278	Identifier	eprintf		855869	0					
ANR	856279	ArgumentList	"""Invalid number of arguments\\n"""		855869	1					
ANR	856280	Argument	"""Invalid number of arguments\\n"""		855869	0					
ANR	856281	PrimaryExpression	"""Invalid number of arguments\\n"""		855869	0					
ANR	856282	ExpressionStatement	free ( ptr )	8156:1:232630:232640	855869	9	True				
ANR	856283	CallExpression	free ( ptr )		855869	0					
ANR	856284	Callee	free		855869	0					
ANR	856285	Identifier	free		855869	0					
ANR	856286	ArgumentList	ptr		855869	1					
ANR	856287	Argument	ptr		855869	0					
ANR	856288	Identifier	ptr		855869	0					
ANR	856289	IfStatement	if ( from == UT64_MAX && to == UT64_MAX )		855869	10					
ANR	856290	Condition	from == UT64_MAX && to == UT64_MAX	8158:5:232648:232681	855869	0	True				
ANR	856291	AndExpression	from == UT64_MAX && to == UT64_MAX		855869	0		&&			
ANR	856292	EqualityExpression	from == UT64_MAX		855869	0		==			
ANR	856293	Identifier	from		855869	0					
ANR	856294	Identifier	UT64_MAX		855869	1					
ANR	856295	EqualityExpression	to == UT64_MAX		855869	1		==			
ANR	856296	Identifier	to		855869	0					
ANR	856297	Identifier	UT64_MAX		855869	1					
ANR	856298	CompoundStatement		75:41:1696:1696	855869	1					
ANR	856299	ReturnStatement	return false ;	8159:2:232688:232700	855869	0	True				
ANR	856300	Identifier	false		855869	0					
ANR	856301	IfStatement	if ( ! from && ! to )		855869	11					
ANR	856302	Condition	! from && ! to	8161:5:232710:232721	855869	0	True				
ANR	856303	AndExpression	! from && ! to		855869	0		&&			
ANR	856304	UnaryOperationExpression	! from		855869	0					
ANR	856305	UnaryOperator	!		855869	0					
ANR	856306	Identifier	from		855869	1					
ANR	856307	UnaryOperationExpression	! to		855869	1					
ANR	856308	UnaryOperator	!		855869	0					
ANR	856309	Identifier	to		855869	1					
ANR	856310	CompoundStatement		78:19:1736:1736	855869	1					
ANR	856311	ReturnStatement	return false ;	8162:2:232728:232740	855869	0	True				
ANR	856312	Identifier	false		855869	0					
ANR	856313	IfStatement	if ( to - from > r_io_size ( core -> io ) )		855869	12					
ANR	856314	Condition	to - from > r_io_size ( core -> io )	8164:5:232750:232781	855869	0	True				
ANR	856315	RelationalExpression	to - from > r_io_size ( core -> io )		855869	0		>			
ANR	856316	AdditiveExpression	to - from		855869	0		-			
ANR	856317	Identifier	to		855869	0					
ANR	856318	Identifier	from		855869	1					
ANR	856319	CallExpression	r_io_size ( core -> io )		855869	1					
ANR	856320	Callee	r_io_size		855869	0					
ANR	856321	Identifier	r_io_size		855869	0					
ANR	856322	ArgumentList	core -> io		855869	1					
ANR	856323	Argument	core -> io		855869	0					
ANR	856324	PtrMemberAccess	core -> io		855869	0					
ANR	856325	Identifier	core		855869	0					
ANR	856326	Identifier	io		855869	1					
ANR	856327	CompoundStatement		81:39:1796:1796	855869	1					
ANR	856328	ReturnStatement	return false ;	8165:2:232788:232800	855869	0	True				
ANR	856329	Identifier	false		855869	0					
ANR	856330	IfStatement	if ( rad == 'j' )		855869	13					
ANR	856331	Condition	rad == 'j'	8167:5:232810:232819	855869	0	True				
ANR	856332	EqualityExpression	rad == 'j'		855869	0		==			
ANR	856333	Identifier	rad		855869	0					
ANR	856334	PrimaryExpression	'j'		855869	1					
ANR	856335	CompoundStatement		84:17:1834:1834	855869	1					
ANR	856336	ExpressionStatement	"r_cons_printf ( ""{"" )"	8168:2:232826:232845	855869	0	True				
ANR	856337	CallExpression	"r_cons_printf ( ""{"" )"		855869	0					
ANR	856338	Callee	r_cons_printf		855869	0					
ANR	856339	Identifier	r_cons_printf		855869	0					
ANR	856340	ArgumentList	"""{"""		855869	1					
ANR	856341	Argument	"""{"""		855869	0					
ANR	856342	PrimaryExpression	"""{"""		855869	0					
ANR	856343	IdentifierDeclStatement	"bool res = r_core_anal_search_xrefs ( core , from , to , rad ) ;"	8170:1:232851:232908	855869	14	True				
ANR	856344	IdentifierDecl	"res = r_core_anal_search_xrefs ( core , from , to , rad )"		855869	0					
ANR	856345	IdentifierDeclType	bool		855869	0					
ANR	856346	Identifier	res		855869	1					
ANR	856347	AssignmentExpression	"res = r_core_anal_search_xrefs ( core , from , to , rad )"		855869	2		=			
ANR	856348	Identifier	res		855869	0					
ANR	856349	CallExpression	"r_core_anal_search_xrefs ( core , from , to , rad )"		855869	1					
ANR	856350	Callee	r_core_anal_search_xrefs		855869	0					
ANR	856351	Identifier	r_core_anal_search_xrefs		855869	0					
ANR	856352	ArgumentList	core		855869	1					
ANR	856353	Argument	core		855869	0					
ANR	856354	Identifier	core		855869	0					
ANR	856355	Argument	from		855869	1					
ANR	856356	Identifier	from		855869	0					
ANR	856357	Argument	to		855869	2					
ANR	856358	Identifier	to		855869	0					
ANR	856359	Argument	rad		855869	3					
ANR	856360	Identifier	rad		855869	0					
ANR	856361	IfStatement	if ( rad == 'j' )		855869	15					
ANR	856362	Condition	rad == 'j'	8171:5:232915:232924	855869	0	True				
ANR	856363	EqualityExpression	rad == 'j'		855869	0		==			
ANR	856364	Identifier	rad		855869	0					
ANR	856365	PrimaryExpression	'j'		855869	1					
ANR	856366	CompoundStatement		88:17:1939:1939	855869	1					
ANR	856367	ExpressionStatement	"r_cons_printf ( ""}\\n"" )"	8172:2:232931:232952	855869	0	True				
ANR	856368	CallExpression	"r_cons_printf ( ""}\\n"" )"		855869	0					
ANR	856369	Callee	r_cons_printf		855869	0					
ANR	856370	Identifier	r_cons_printf		855869	0					
ANR	856371	ArgumentList	"""}\\n"""		855869	1					
ANR	856372	Argument	"""}\\n"""		855869	0					
ANR	856373	PrimaryExpression	"""}\\n"""		855869	0					
ANR	856374	ReturnStatement	return res ;	8174:1:232958:232968	855869	16	True				
ANR	856375	Identifier	res		855869	0					
ANR	856376	ReturnType	R_API int		855869	1					
ANR	856377	Identifier	r_core_anal_refs		855869	2					
ANR	856378	ParameterList	"RCore * core , const char * input"		855869	3					
ANR	856379	Parameter	RCore * core	8084:27:230955:230965	855869	0	True				
ANR	856380	ParameterType	RCore *		855869	0					
ANR	856381	Identifier	core		855869	1					
ANR	856382	Parameter	const char * input	8084:40:230968:230984	855869	1	True				
ANR	856383	ParameterType	const char *		855869	0					
ANR	856384	Identifier	input		855869	1					
ANR	856385	CFGEntryNode	ENTRY		855869		True				
ANR	856386	CFGExitNode	EXIT		855869		True				
ANR	856387	CFGErrorNode	ERROR		855869		True				
ANR	856388	Symbol	UT32_MAX		855869						
ANR	856389	Symbol	map -> itv		855869						
ANR	856390	Symbol	map -> addr		855869						
ANR	856391	Symbol	* map		855869						
ANR	856392	Symbol	map -> id		855869						
ANR	856393	Symbol	* core		855869						
ANR	856394	Symbol	* input		855869						
ANR	856395	Symbol	core -> offset		855869						
ANR	856396	Symbol	r_str_word_set0		855869						
ANR	856397	Symbol	r_num_math		855869						
ANR	856398	Symbol	R_PERM_X		855869						
ANR	856399	Symbol	r_cons_is_breaked		855869						
ANR	856400	Symbol	rad		855869						
ANR	856401	Symbol	core -> io		855869						
ANR	856402	Symbol	from		855869						
ANR	856403	Symbol	r_str_trim_head		855869						
ANR	856404	Symbol	r_debug_map_get		855869						
ANR	856405	Symbol	map -> itv . addr		855869						
ANR	856406	Symbol	core -> num		855869						
ANR	856407	Symbol	UT64_MAX		855869						
ANR	856408	Symbol	map		855869						
ANR	856409	Symbol	core -> config		855869						
ANR	856410	Symbol	res		855869						
ANR	856411	Symbol	NULL		855869						
ANR	856412	Symbol	nth		855869						
ANR	856413	Symbol	cfg_debug		855869						
ANR	856414	Symbol	help_msg_aar		855869						
ANR	856415	Symbol	false		855869						
ANR	856416	Symbol	iter		855869						
ANR	856417	Symbol	r_str_word_get0		855869						
ANR	856418	Symbol	list		855869						
ANR	856419	Symbol	n		855869						
ANR	856420	Symbol	ptr		855869						
ANR	856421	Symbol	r_itv_end		855869						
ANR	856422	Symbol	core		855869						
ANR	856423	Symbol	input		855869						
ANR	856424	Symbol	r_config_get_i		855869						
ANR	856425	Symbol	map -> addr_end		855869						
ANR	856426	Symbol	r_core_anal_search_xrefs		855869						
ANR	856427	Symbol	to		855869						
ANR	856428	Symbol	strdup		855869						
ANR	856429	Symbol	r_core_get_boundaries_prot		855869						
ANR	856430	Symbol	r_io_size		855869						
ANR	856431	Symbol	core -> dbg		855869						
ANR	856432	DeclStmt									
ANR	856433	Decl							const char	const char *	oldstr
ANR	856434	Function	compute_coverage	8179:0:233008:233528							
ANR	856435	FunctionDef	compute_coverage (RCore * core)		856434	0					
ANR	856436	CompoundStatement		8179:41:233049:233528	856434	0					
ANR	856437	IdentifierDeclStatement	RListIter * iter ;	8180:1:233052:233067	856434	0	True				
ANR	856438	IdentifierDecl	* iter		856434	0					
ANR	856439	IdentifierDeclType	RListIter *		856434	0					
ANR	856440	Identifier	iter		856434	1					
ANR	856441	IdentifierDeclStatement	SdbListIter * iter2 ;	8181:1:233070:233088	856434	1	True				
ANR	856442	IdentifierDecl	* iter2		856434	0					
ANR	856443	IdentifierDeclType	SdbListIter *		856434	0					
ANR	856444	Identifier	iter2		856434	1					
ANR	856445	IdentifierDeclStatement	RAnalFunction * fcn ;	8182:1:233091:233109	856434	2	True				
ANR	856446	IdentifierDecl	* fcn		856434	0					
ANR	856447	IdentifierDeclType	RAnalFunction *		856434	0					
ANR	856448	Identifier	fcn		856434	1					
ANR	856449	IdentifierDeclStatement	RIOMap * map ;	8183:1:233112:233123	856434	3	True				
ANR	856450	IdentifierDecl	* map		856434	0					
ANR	856451	IdentifierDeclType	RIOMap *		856434	0					
ANR	856452	Identifier	map		856434	1					
ANR	856453	IdentifierDeclStatement	int cov = 0 ;	8184:1:233126:233137	856434	4	True				
ANR	856454	IdentifierDecl	cov = 0		856434	0					
ANR	856455	IdentifierDeclType	int		856434	0					
ANR	856456	Identifier	cov		856434	1					
ANR	856457	AssignmentExpression	cov = 0		856434	2		=			
ANR	856458	Identifier	cov		856434	0					
ANR	856459	PrimaryExpression	0		856434	1					
ANR	856460	ExpressionStatement	"cov += r_meta_get_size ( core -> anal , R_META_TYPE_DATA )"	8185:1:233140:233192	856434	5	True				
ANR	856461	AssignmentExpression	"cov += r_meta_get_size ( core -> anal , R_META_TYPE_DATA )"		856434	0		+=			
ANR	856462	Identifier	cov		856434	0					
ANR	856463	CallExpression	"r_meta_get_size ( core -> anal , R_META_TYPE_DATA )"		856434	1					
ANR	856464	Callee	r_meta_get_size		856434	0					
ANR	856465	Identifier	r_meta_get_size		856434	0					
ANR	856466	ArgumentList	core -> anal		856434	1					
ANR	856467	Argument	core -> anal		856434	0					
ANR	856468	PtrMemberAccess	core -> anal		856434	0					
ANR	856469	Identifier	core		856434	0					
ANR	856470	Identifier	anal		856434	1					
ANR	856471	Argument	R_META_TYPE_DATA		856434	1					
ANR	856472	Identifier	R_META_TYPE_DATA		856434	0					
ANR	856473	Statement	r_list_foreach	8186:1:233195:233208	856434	6	True				
ANR	856474	Statement	(	8186:16:233210:233210	856434	7	True				
ANR	856475	Statement	core	8186:17:233211:233214	856434	8	True				
ANR	856476	Statement	->	8186:21:233215:233216	856434	9	True				
ANR	856477	Statement	anal	8186:23:233217:233220	856434	10	True				
ANR	856478	Statement	->	8186:27:233221:233222	856434	11	True				
ANR	856479	Statement	fcns	8186:29:233223:233226	856434	12	True				
ANR	856480	Statement	","	8186:33:233227:233227	856434	13	True				
ANR	856481	Statement	iter	8186:35:233229:233232	856434	14	True				
ANR	856482	Statement	","	8186:39:233233:233233	856434	15	True				
ANR	856483	Statement	fcn	8186:41:233235:233237	856434	16	True				
ANR	856484	Statement	)	8186:44:233238:233238	856434	17	True				
ANR	856485	CompoundStatement		8:46:190:190	856434	18					
ANR	856486	Statement	ls_foreach	8187:2:233244:233253	856434	0	True				
ANR	856487	Statement	(	8187:13:233255:233255	856434	1	True				
ANR	856488	Statement	core	8187:14:233256:233259	856434	2	True				
ANR	856489	Statement	->	8187:18:233260:233261	856434	3	True				
ANR	856490	Statement	io	8187:20:233262:233263	856434	4	True				
ANR	856491	Statement	->	8187:22:233264:233265	856434	5	True				
ANR	856492	Statement	maps	8187:24:233266:233269	856434	6	True				
ANR	856493	Statement	","	8187:28:233270:233270	856434	7	True				
ANR	856494	Statement	iter2	8187:30:233272:233276	856434	8	True				
ANR	856495	Statement	","	8187:35:233277:233277	856434	9	True				
ANR	856496	Statement	map	8187:37:233279:233281	856434	10	True				
ANR	856497	Statement	)	8187:40:233282:233282	856434	11	True				
ANR	856498	CompoundStatement		9:42:234:234	856434	12					
ANR	856499	IfStatement	if ( map -> perm & R_PERM_X )		856434	0					
ANR	856500	Condition	map -> perm & R_PERM_X	8188:7:233293:233312	856434	0	True				
ANR	856501	BitAndExpression	map -> perm & R_PERM_X		856434	0		&			
ANR	856502	PtrMemberAccess	map -> perm		856434	0					
ANR	856503	Identifier	map		856434	0					
ANR	856504	Identifier	perm		856434	1					
ANR	856505	Identifier	R_PERM_X		856434	1					
ANR	856506	CompoundStatement		12:4:325:359	856434	1					
ANR	856507	IdentifierDeclStatement	ut64 section_end = map -> itv . addr + map -> itv . size ;	8189:4:233321:233369	856434	0	True				
ANR	856508	IdentifierDecl	section_end = map -> itv . addr + map -> itv . size		856434	0					
ANR	856509	IdentifierDeclType	ut64		856434	0					
ANR	856510	Identifier	section_end		856434	1					
ANR	856511	AssignmentExpression	section_end = map -> itv . addr + map -> itv . size		856434	2		=			
ANR	856512	Identifier	section_end		856434	0					
ANR	856513	AdditiveExpression	map -> itv . addr + map -> itv . size		856434	1		+			
ANR	856514	MemberAccess	map -> itv . addr		856434	0					
ANR	856515	PtrMemberAccess	map -> itv		856434	0					
ANR	856516	Identifier	map		856434	0					
ANR	856517	Identifier	itv		856434	1					
ANR	856518	Identifier	addr		856434	1					
ANR	856519	MemberAccess	map -> itv . size		856434	1					
ANR	856520	PtrMemberAccess	map -> itv		856434	0					
ANR	856521	Identifier	map		856434	0					
ANR	856522	Identifier	itv		856434	1					
ANR	856523	Identifier	size		856434	1					
ANR	856524	IdentifierDeclStatement	ut64 s = r_anal_fcn_realsize ( fcn ) ;	8190:4:233375:233409	856434	1	True				
ANR	856525	IdentifierDecl	s = r_anal_fcn_realsize ( fcn )		856434	0					
ANR	856526	IdentifierDeclType	ut64		856434	0					
ANR	856527	Identifier	s		856434	1					
ANR	856528	AssignmentExpression	s = r_anal_fcn_realsize ( fcn )		856434	2		=			
ANR	856529	Identifier	s		856434	0					
ANR	856530	CallExpression	r_anal_fcn_realsize ( fcn )		856434	1					
ANR	856531	Callee	r_anal_fcn_realsize		856434	0					
ANR	856532	Identifier	r_anal_fcn_realsize		856434	0					
ANR	856533	ArgumentList	fcn		856434	1					
ANR	856534	Argument	fcn		856434	0					
ANR	856535	Identifier	fcn		856434	0					
ANR	856536	IfStatement	if ( fcn -> addr >= map -> itv . addr && ( fcn -> addr + s ) < section_end )		856434	2					
ANR	856537	Condition	fcn -> addr >= map -> itv . addr && ( fcn -> addr + s ) < section_end	8191:8:233419:233477	856434	0	True				
ANR	856538	AndExpression	fcn -> addr >= map -> itv . addr && ( fcn -> addr + s ) < section_end		856434	0		&&			
ANR	856539	RelationalExpression	fcn -> addr >= map -> itv . addr		856434	0		>=			
ANR	856540	PtrMemberAccess	fcn -> addr		856434	0					
ANR	856541	Identifier	fcn		856434	0					
ANR	856542	Identifier	addr		856434	1					
ANR	856543	MemberAccess	map -> itv . addr		856434	1					
ANR	856544	PtrMemberAccess	map -> itv		856434	0					
ANR	856545	Identifier	map		856434	0					
ANR	856546	Identifier	itv		856434	1					
ANR	856547	Identifier	addr		856434	1					
ANR	856548	RelationalExpression	( fcn -> addr + s ) < section_end		856434	1		<			
ANR	856549	AdditiveExpression	fcn -> addr + s		856434	0		+			
ANR	856550	PtrMemberAccess	fcn -> addr		856434	0					
ANR	856551	Identifier	fcn		856434	0					
ANR	856552	Identifier	addr		856434	1					
ANR	856553	Identifier	s		856434	1					
ANR	856554	Identifier	section_end		856434	1					
ANR	856555	CompoundStatement		13:69:430:430	856434	1					
ANR	856556	ExpressionStatement	cov += s	8192:5:233487:233495	856434	0	True				
ANR	856557	AssignmentExpression	cov += s		856434	0		+=			
ANR	856558	Identifier	cov		856434	0					
ANR	856559	Identifier	s		856434	1					
ANR	856560	ReturnStatement	return cov ;	8197:1:233516:233526	856434	19	True				
ANR	856561	Identifier	cov		856434	0					
ANR	856562	ReturnType	static int		856434	1					
ANR	856563	Identifier	compute_coverage		856434	2					
ANR	856564	ParameterList	RCore * core		856434	3					
ANR	856565	Parameter	RCore * core	8179:28:233036:233046	856434	0	True				
ANR	856566	ParameterType	RCore *		856434	0					
ANR	856567	Identifier	core		856434	1					
ANR	856568	CFGEntryNode	ENTRY		856434		True				
ANR	856569	CFGExitNode	EXIT		856434		True				
ANR	856570	Symbol	map -> itv		856434						
ANR	856571	Symbol	* fcn		856434						
ANR	856572	Symbol	* map		856434						
ANR	856573	Symbol	iter2		856434						
ANR	856574	Symbol	* core		856434						
ANR	856575	Symbol	iter		856434						
ANR	856576	Symbol	section_end		856434						
ANR	856577	Symbol	cov		856434						
ANR	856578	Symbol	core -> anal		856434						
ANR	856579	Symbol	fcn		856434						
ANR	856580	Symbol	R_PERM_X		856434						
ANR	856581	Symbol	core		856434						
ANR	856582	Symbol	r_anal_fcn_realsize		856434						
ANR	856583	Symbol	R_META_TYPE_DATA		856434						
ANR	856584	Symbol	map -> itv . size		856434						
ANR	856585	Symbol	s		856434						
ANR	856586	Symbol	r_meta_get_size		856434						
ANR	856587	Symbol	fcn -> addr		856434						
ANR	856588	Symbol	map -> itv . addr		856434						
ANR	856589	Symbol	map		856434						
ANR	856590	Symbol	map -> perm		856434						
ANR	856591	Function	compute_code	8200:0:233531:233739							
ANR	856592	FunctionDef	compute_code (RCore * core)		856591	0					
ANR	856593	CompoundStatement		8200:38:233569:233739	856591	0					
ANR	856594	IdentifierDeclStatement	int code = 0 ;	8201:1:233572:233584	856591	0	True				
ANR	856595	IdentifierDecl	code = 0		856591	0					
ANR	856596	IdentifierDeclType	int		856591	0					
ANR	856597	Identifier	code		856591	1					
ANR	856598	AssignmentExpression	code = 0		856591	2		=			
ANR	856599	Identifier	code		856591	0					
ANR	856600	PrimaryExpression	0		856591	1					
ANR	856601	IdentifierDeclStatement	SdbListIter * iter ;	8202:1:233587:233604	856591	1	True				
ANR	856602	IdentifierDecl	* iter		856591	0					
ANR	856603	IdentifierDeclType	SdbListIter *		856591	0					
ANR	856604	Identifier	iter		856591	1					
ANR	856605	IdentifierDeclStatement	RIOMap * map ;	8203:1:233607:233618	856591	2	True				
ANR	856606	IdentifierDecl	* map		856591	0					
ANR	856607	IdentifierDeclType	RIOMap *		856591	0					
ANR	856608	Identifier	map		856591	1					
ANR	856609	Statement	ls_foreach	8204:1:233621:233630	856591	3	True				
ANR	856610	Statement	(	8204:12:233632:233632	856591	4	True				
ANR	856611	Statement	core	8204:13:233633:233636	856591	5	True				
ANR	856612	Statement	->	8204:17:233637:233638	856591	6	True				
ANR	856613	Statement	io	8204:19:233639:233640	856591	7	True				
ANR	856614	Statement	->	8204:21:233641:233642	856591	8	True				
ANR	856615	Statement	maps	8204:23:233643:233646	856591	9	True				
ANR	856616	Statement	","	8204:27:233647:233647	856591	10	True				
ANR	856617	Statement	iter	8204:29:233649:233652	856591	11	True				
ANR	856618	Statement	","	8204:33:233653:233653	856591	12	True				
ANR	856619	Statement	map	8204:35:233655:233657	856591	13	True				
ANR	856620	Statement	)	8204:38:233658:233658	856591	14	True				
ANR	856621	CompoundStatement		5:40:90:90	856591	15					
ANR	856622	IfStatement	if ( map -> perm & R_PERM_X )		856591	0					
ANR	856623	Condition	map -> perm & R_PERM_X	8205:6:233668:233687	856591	0	True				
ANR	856624	BitAndExpression	map -> perm & R_PERM_X		856591	0		&			
ANR	856625	PtrMemberAccess	map -> perm		856591	0					
ANR	856626	Identifier	map		856591	0					
ANR	856627	Identifier	perm		856591	1					
ANR	856628	Identifier	R_PERM_X		856591	1					
ANR	856629	CompoundStatement		6:28:120:120	856591	1					
ANR	856630	ExpressionStatement	code += map -> itv . size	8206:3:233695:233716	856591	0	True				
ANR	856631	AssignmentExpression	code += map -> itv . size		856591	0		+=			
ANR	856632	Identifier	code		856591	0					
ANR	856633	MemberAccess	map -> itv . size		856591	1					
ANR	856634	PtrMemberAccess	map -> itv		856591	0					
ANR	856635	Identifier	map		856591	0					
ANR	856636	Identifier	itv		856591	1					
ANR	856637	Identifier	size		856591	1					
ANR	856638	ReturnStatement	return code ;	8209:1:233726:233737	856591	16	True				
ANR	856639	Identifier	code		856591	0					
ANR	856640	ReturnType	static int		856591	1					
ANR	856641	Identifier	compute_code		856591	2					
ANR	856642	ParameterList	RCore * core		856591	3					
ANR	856643	Parameter	RCore * core	8200:25:233556:233566	856591	0	True				
ANR	856644	ParameterType	RCore *		856591	0					
ANR	856645	Identifier	core		856591	1					
ANR	856646	CFGEntryNode	ENTRY		856591		True				
ANR	856647	CFGExitNode	EXIT		856591		True				
ANR	856648	Symbol	R_PERM_X		856591						
ANR	856649	Symbol	core		856591						
ANR	856650	Symbol	map -> itv		856591						
ANR	856651	Symbol	code		856591						
ANR	856652	Symbol	map -> itv . size		856591						
ANR	856653	Symbol	* map		856591						
ANR	856654	Symbol	iter		856591						
ANR	856655	Symbol	map		856591						
ANR	856656	Symbol	map -> perm		856591						
ANR	856657	Function	compute_calls	8212:0:233742:234057							
ANR	856658	FunctionDef	compute_calls (RCore * core)		856657	0					
ANR	856659	CompoundStatement		8212:38:233780:234057	856657	0					
ANR	856660	IdentifierDeclStatement	RListIter * iter ;	8213:1:233783:233798	856657	0	True				
ANR	856661	IdentifierDecl	* iter		856657	0					
ANR	856662	IdentifierDeclType	RListIter *		856657	0					
ANR	856663	Identifier	iter		856657	1					
ANR	856664	IdentifierDeclStatement	RAnalFunction * fcn ;	8214:1:233801:233819	856657	1	True				
ANR	856665	IdentifierDecl	* fcn		856657	0					
ANR	856666	IdentifierDeclType	RAnalFunction *		856657	0					
ANR	856667	Identifier	fcn		856657	1					
ANR	856668	IdentifierDeclStatement	RList * xrefs ;	8215:1:233822:233834	856657	2	True				
ANR	856669	IdentifierDecl	* xrefs		856657	0					
ANR	856670	IdentifierDeclType	RList *		856657	0					
ANR	856671	Identifier	xrefs		856657	1					
ANR	856672	IdentifierDeclStatement	int cov = 0 ;	8216:1:233837:233848	856657	3	True				
ANR	856673	IdentifierDecl	cov = 0		856657	0					
ANR	856674	IdentifierDeclType	int		856657	0					
ANR	856675	Identifier	cov		856657	1					
ANR	856676	AssignmentExpression	cov = 0		856657	2		=			
ANR	856677	Identifier	cov		856657	0					
ANR	856678	PrimaryExpression	0		856657	1					
ANR	856679	Statement	r_list_foreach	8217:1:233851:233864	856657	4	True				
ANR	856680	Statement	(	8217:16:233866:233866	856657	5	True				
ANR	856681	Statement	core	8217:17:233867:233870	856657	6	True				
ANR	856682	Statement	->	8217:21:233871:233872	856657	7	True				
ANR	856683	Statement	anal	8217:23:233873:233876	856657	8	True				
ANR	856684	Statement	->	8217:27:233877:233878	856657	9	True				
ANR	856685	Statement	fcns	8217:29:233879:233882	856657	10	True				
ANR	856686	Statement	","	8217:33:233883:233883	856657	11	True				
ANR	856687	Statement	iter	8217:35:233885:233888	856657	12	True				
ANR	856688	Statement	","	8217:39:233889:233889	856657	13	True				
ANR	856689	Statement	fcn	8217:41:233891:233893	856657	14	True				
ANR	856690	Statement	)	8217:44:233894:233894	856657	15	True				
ANR	856691	CompoundStatement		6:46:115:115	856657	16					
ANR	856692	ExpressionStatement	"xrefs = r_anal_fcn_get_xrefs ( core -> anal , fcn )"	8218:2:233900:233946	856657	0	True				
ANR	856693	AssignmentExpression	"xrefs = r_anal_fcn_get_xrefs ( core -> anal , fcn )"		856657	0		=			
ANR	856694	Identifier	xrefs		856657	0					
ANR	856695	CallExpression	"r_anal_fcn_get_xrefs ( core -> anal , fcn )"		856657	1					
ANR	856696	Callee	r_anal_fcn_get_xrefs		856657	0					
ANR	856697	Identifier	r_anal_fcn_get_xrefs		856657	0					
ANR	856698	ArgumentList	core -> anal		856657	1					
ANR	856699	Argument	core -> anal		856657	0					
ANR	856700	PtrMemberAccess	core -> anal		856657	0					
ANR	856701	Identifier	core		856657	0					
ANR	856702	Identifier	anal		856657	1					
ANR	856703	Argument	fcn		856657	1					
ANR	856704	Identifier	fcn		856657	0					
ANR	856705	IfStatement	if ( xrefs )		856657	1					
ANR	856706	Condition	xrefs	8219:6:233954:233958	856657	0	True				
ANR	856707	Identifier	xrefs		856657	0					
ANR	856708	CompoundStatement		8:13:180:180	856657	1					
ANR	856709	ExpressionStatement	cov += r_list_length ( xrefs )	8220:3:233966:233994	856657	0	True				
ANR	856710	AssignmentExpression	cov += r_list_length ( xrefs )		856657	0		+=			
ANR	856711	Identifier	cov		856657	0					
ANR	856712	CallExpression	r_list_length ( xrefs )		856657	1					
ANR	856713	Callee	r_list_length		856657	0					
ANR	856714	Identifier	r_list_length		856657	0					
ANR	856715	ArgumentList	xrefs		856657	1					
ANR	856716	Argument	xrefs		856657	0					
ANR	856717	Identifier	xrefs		856657	0					
ANR	856718	ExpressionStatement	r_list_free ( xrefs )	8221:3:233999:234018	856657	1	True				
ANR	856719	CallExpression	r_list_free ( xrefs )		856657	0					
ANR	856720	Callee	r_list_free		856657	0					
ANR	856721	Identifier	r_list_free		856657	0					
ANR	856722	ArgumentList	xrefs		856657	1					
ANR	856723	Argument	xrefs		856657	0					
ANR	856724	Identifier	xrefs		856657	0					
ANR	856725	ExpressionStatement	xrefs = NULL	8222:3:234023:234035	856657	2	True				
ANR	856726	AssignmentExpression	xrefs = NULL		856657	0		=			
ANR	856727	Identifier	xrefs		856657	0					
ANR	856728	Identifier	NULL		856657	1					
ANR	856729	ReturnStatement	return cov ;	8225:1:234045:234055	856657	17	True				
ANR	856730	Identifier	cov		856657	0					
ANR	856731	ReturnType	static int		856657	1					
ANR	856732	Identifier	compute_calls		856657	2					
ANR	856733	ParameterList	RCore * core		856657	3					
ANR	856734	Parameter	RCore * core	8212:25:233767:233777	856657	0	True				
ANR	856735	ParameterType	RCore *		856657	0					
ANR	856736	Identifier	core		856657	1					
ANR	856737	CFGEntryNode	ENTRY		856657		True				
ANR	856738	CFGExitNode	EXIT		856657		True				
ANR	856739	Symbol	fcn		856657						
ANR	856740	Symbol	core		856657						
ANR	856741	Symbol	NULL		856657						
ANR	856742	Symbol	xrefs		856657						
ANR	856743	Symbol	r_anal_fcn_get_xrefs		856657						
ANR	856744	Symbol	* core		856657						
ANR	856745	Symbol	iter		856657						
ANR	856746	Symbol	cov		856657						
ANR	856747	Symbol	core -> anal		856657						
ANR	856748	Symbol	r_list_length		856657						
ANR	856749	Function	r_core_anal_info	8228:0:234060:235315							
ANR	856750	FunctionDef	"r_core_anal_info (RCore * core , const char * input)"		856749	0					
ANR	856751	CompoundStatement		8228:62:234122:235315	856749	0					
ANR	856752	IdentifierDeclStatement	int fcns = r_list_length ( core -> anal -> fcns ) ;	8229:1:234125:234168	856749	0	True				
ANR	856753	IdentifierDecl	fcns = r_list_length ( core -> anal -> fcns )		856749	0					
ANR	856754	IdentifierDeclType	int		856749	0					
ANR	856755	Identifier	fcns		856749	1					
ANR	856756	AssignmentExpression	fcns = r_list_length ( core -> anal -> fcns )		856749	2		=			
ANR	856757	Identifier	fcns		856749	0					
ANR	856758	CallExpression	r_list_length ( core -> anal -> fcns )		856749	1					
ANR	856759	Callee	r_list_length		856749	0					
ANR	856760	Identifier	r_list_length		856749	0					
ANR	856761	ArgumentList	core -> anal -> fcns		856749	1					
ANR	856762	Argument	core -> anal -> fcns		856749	0					
ANR	856763	PtrMemberAccess	core -> anal -> fcns		856749	0					
ANR	856764	PtrMemberAccess	core -> anal		856749	0					
ANR	856765	Identifier	core		856749	0					
ANR	856766	Identifier	anal		856749	1					
ANR	856767	Identifier	fcns		856749	1					
ANR	856768	IdentifierDeclStatement	"int strs = r_flag_count ( core -> flags , ""str.*"" ) ;"	8230:1:234171:234217	856749	1	True				
ANR	856769	IdentifierDecl	"strs = r_flag_count ( core -> flags , ""str.*"" )"		856749	0					
ANR	856770	IdentifierDeclType	int		856749	0					
ANR	856771	Identifier	strs		856749	1					
ANR	856772	AssignmentExpression	"strs = r_flag_count ( core -> flags , ""str.*"" )"		856749	2		=			
ANR	856773	Identifier	strs		856749	0					
ANR	856774	CallExpression	"r_flag_count ( core -> flags , ""str.*"" )"		856749	1					
ANR	856775	Callee	r_flag_count		856749	0					
ANR	856776	Identifier	r_flag_count		856749	0					
ANR	856777	ArgumentList	core -> flags		856749	1					
ANR	856778	Argument	core -> flags		856749	0					
ANR	856779	PtrMemberAccess	core -> flags		856749	0					
ANR	856780	Identifier	core		856749	0					
ANR	856781	Identifier	flags		856749	1					
ANR	856782	Argument	"""str.*"""		856749	1					
ANR	856783	PrimaryExpression	"""str.*"""		856749	0					
ANR	856784	IdentifierDeclStatement	"int syms = r_flag_count ( core -> flags , ""sym.*"" ) ;"	8231:1:234220:234266	856749	2	True				
ANR	856785	IdentifierDecl	"syms = r_flag_count ( core -> flags , ""sym.*"" )"		856749	0					
ANR	856786	IdentifierDeclType	int		856749	0					
ANR	856787	Identifier	syms		856749	1					
ANR	856788	AssignmentExpression	"syms = r_flag_count ( core -> flags , ""sym.*"" )"		856749	2		=			
ANR	856789	Identifier	syms		856749	0					
ANR	856790	CallExpression	"r_flag_count ( core -> flags , ""sym.*"" )"		856749	1					
ANR	856791	Callee	r_flag_count		856749	0					
ANR	856792	Identifier	r_flag_count		856749	0					
ANR	856793	ArgumentList	core -> flags		856749	1					
ANR	856794	Argument	core -> flags		856749	0					
ANR	856795	PtrMemberAccess	core -> flags		856749	0					
ANR	856796	Identifier	core		856749	0					
ANR	856797	Identifier	flags		856749	1					
ANR	856798	Argument	"""sym.*"""		856749	1					
ANR	856799	PrimaryExpression	"""sym.*"""		856749	0					
ANR	856800	IdentifierDeclStatement	"int imps = r_flag_count ( core -> flags , ""sym.imp.*"" ) ;"	8232:1:234269:234319	856749	3	True				
ANR	856801	IdentifierDecl	"imps = r_flag_count ( core -> flags , ""sym.imp.*"" )"		856749	0					
ANR	856802	IdentifierDeclType	int		856749	0					
ANR	856803	Identifier	imps		856749	1					
ANR	856804	AssignmentExpression	"imps = r_flag_count ( core -> flags , ""sym.imp.*"" )"		856749	2		=			
ANR	856805	Identifier	imps		856749	0					
ANR	856806	CallExpression	"r_flag_count ( core -> flags , ""sym.imp.*"" )"		856749	1					
ANR	856807	Callee	r_flag_count		856749	0					
ANR	856808	Identifier	r_flag_count		856749	0					
ANR	856809	ArgumentList	core -> flags		856749	1					
ANR	856810	Argument	core -> flags		856749	0					
ANR	856811	PtrMemberAccess	core -> flags		856749	0					
ANR	856812	Identifier	core		856749	0					
ANR	856813	Identifier	flags		856749	1					
ANR	856814	Argument	"""sym.imp.*"""		856749	1					
ANR	856815	PrimaryExpression	"""sym.imp.*"""		856749	0					
ANR	856816	IdentifierDeclStatement	int code = compute_code ( core ) ;	8233:1:234322:234352	856749	4	True				
ANR	856817	IdentifierDecl	code = compute_code ( core )		856749	0					
ANR	856818	IdentifierDeclType	int		856749	0					
ANR	856819	Identifier	code		856749	1					
ANR	856820	AssignmentExpression	code = compute_code ( core )		856749	2		=			
ANR	856821	Identifier	code		856749	0					
ANR	856822	CallExpression	compute_code ( core )		856749	1					
ANR	856823	Callee	compute_code		856749	0					
ANR	856824	Identifier	compute_code		856749	0					
ANR	856825	ArgumentList	core		856749	1					
ANR	856826	Argument	core		856749	0					
ANR	856827	Identifier	core		856749	0					
ANR	856828	IdentifierDeclStatement	int covr = compute_coverage ( core ) ;	8234:1:234355:234389	856749	5	True				
ANR	856829	IdentifierDecl	covr = compute_coverage ( core )		856749	0					
ANR	856830	IdentifierDeclType	int		856749	0					
ANR	856831	Identifier	covr		856749	1					
ANR	856832	AssignmentExpression	covr = compute_coverage ( core )		856749	2		=			
ANR	856833	Identifier	covr		856749	0					
ANR	856834	CallExpression	compute_coverage ( core )		856749	1					
ANR	856835	Callee	compute_coverage		856749	0					
ANR	856836	Identifier	compute_coverage		856749	0					
ANR	856837	ArgumentList	core		856749	1					
ANR	856838	Argument	core		856749	0					
ANR	856839	Identifier	core		856749	0					
ANR	856840	IdentifierDeclStatement	int call = compute_calls ( core ) ;	8235:1:234392:234423	856749	6	True				
ANR	856841	IdentifierDecl	call = compute_calls ( core )		856749	0					
ANR	856842	IdentifierDeclType	int		856749	0					
ANR	856843	Identifier	call		856749	1					
ANR	856844	AssignmentExpression	call = compute_calls ( core )		856749	2		=			
ANR	856845	Identifier	call		856749	0					
ANR	856846	CallExpression	compute_calls ( core )		856749	1					
ANR	856847	Callee	compute_calls		856749	0					
ANR	856848	Identifier	compute_calls		856749	0					
ANR	856849	ArgumentList	core		856749	1					
ANR	856850	Argument	core		856749	0					
ANR	856851	Identifier	core		856749	0					
ANR	856852	IdentifierDeclStatement	int xrfs = r_anal_xrefs_count ( core -> anal ) ;	8236:1:234426:234468	856749	7	True				
ANR	856853	IdentifierDecl	xrfs = r_anal_xrefs_count ( core -> anal )		856749	0					
ANR	856854	IdentifierDeclType	int		856749	0					
ANR	856855	Identifier	xrfs		856749	1					
ANR	856856	AssignmentExpression	xrfs = r_anal_xrefs_count ( core -> anal )		856749	2		=			
ANR	856857	Identifier	xrfs		856749	0					
ANR	856858	CallExpression	r_anal_xrefs_count ( core -> anal )		856749	1					
ANR	856859	Callee	r_anal_xrefs_count		856749	0					
ANR	856860	Identifier	r_anal_xrefs_count		856749	0					
ANR	856861	ArgumentList	core -> anal		856749	1					
ANR	856862	Argument	core -> anal		856749	0					
ANR	856863	PtrMemberAccess	core -> anal		856749	0					
ANR	856864	Identifier	core		856749	0					
ANR	856865	Identifier	anal		856749	1					
ANR	856866	IdentifierDeclStatement	int cvpc = ( code > 0 ) ? ( covr * 100 / code ) : 0 ;	8237:1:234471:234516	856749	8	True				
ANR	856867	IdentifierDecl	cvpc = ( code > 0 ) ? ( covr * 100 / code ) : 0		856749	0					
ANR	856868	IdentifierDeclType	int		856749	0					
ANR	856869	Identifier	cvpc		856749	1					
ANR	856870	AssignmentExpression	cvpc = ( code > 0 ) ? ( covr * 100 / code ) : 0		856749	2		=			
ANR	856871	Identifier	cvpc		856749	0					
ANR	856872	ConditionalExpression	( code > 0 ) ? ( covr * 100 / code ) : 0		856749	1					
ANR	856873	Condition	code > 0		856749	0					
ANR	856874	RelationalExpression	code > 0		856749	0		>			
ANR	856875	Identifier	code		856749	0					
ANR	856876	PrimaryExpression	0		856749	1					
ANR	856877	MultiplicativeExpression	covr * 100 / code		856749	1		*			
ANR	856878	Identifier	covr		856749	0					
ANR	856879	MultiplicativeExpression	100 / code		856749	1		/			
ANR	856880	PrimaryExpression	100		856749	0					
ANR	856881	Identifier	code		856749	1					
ANR	856882	PrimaryExpression	0		856749	2					
ANR	856883	IfStatement	if ( * input == 'j' )		856749	9					
ANR	856884	Condition	* input == 'j'	8238:5:234523:234535	856749	0	True				
ANR	856885	EqualityExpression	* input == 'j'		856749	0		==			
ANR	856886	UnaryOperationExpression	* input		856749	0					
ANR	856887	UnaryOperator	*		856749	0					
ANR	856888	Identifier	input		856749	1					
ANR	856889	PrimaryExpression	'j'		856749	1					
ANR	856890	CompoundStatement		12:2:419:437	856749	1					
ANR	856891	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	8239:2:234542:234560	856749	0	True				
ANR	856892	IdentifierDecl	* pj = pj_new ( )		856749	0					
ANR	856893	IdentifierDeclType	PJ *		856749	0					
ANR	856894	Identifier	pj		856749	1					
ANR	856895	AssignmentExpression	* pj = pj_new ( )		856749	2		=			
ANR	856896	Identifier	pj		856749	0					
ANR	856897	CallExpression	pj_new ( )		856749	1					
ANR	856898	Callee	pj_new		856749	0					
ANR	856899	Identifier	pj_new		856749	0					
ANR	856900	ArgumentList			856749	1					
ANR	856901	IfStatement	if ( ! pj )		856749	1					
ANR	856902	Condition	! pj	8240:6:234568:234570	856749	0	True				
ANR	856903	UnaryOperationExpression	! pj		856749	0					
ANR	856904	UnaryOperator	!		856749	0					
ANR	856905	Identifier	pj		856749	1					
ANR	856906	CompoundStatement		13:11:450:450	856749	1					
ANR	856907	ReturnStatement	return ;	8241:3:234578:234584	856749	0	True				
ANR	856908	ExpressionStatement	pj_o ( pj )	8243:2:234592:234601	856749	2	True				
ANR	856909	CallExpression	pj_o ( pj )		856749	0					
ANR	856910	Callee	pj_o		856749	0					
ANR	856911	Identifier	pj_o		856749	0					
ANR	856912	ArgumentList	pj		856749	1					
ANR	856913	Argument	pj		856749	0					
ANR	856914	Identifier	pj		856749	0					
ANR	856915	ExpressionStatement	"pj_ki ( pj , ""fcns"" , fcns )"	8244:2:234605:234629	856749	3	True				
ANR	856916	CallExpression	"pj_ki ( pj , ""fcns"" , fcns )"		856749	0					
ANR	856917	Callee	pj_ki		856749	0					
ANR	856918	Identifier	pj_ki		856749	0					
ANR	856919	ArgumentList	pj		856749	1					
ANR	856920	Argument	pj		856749	0					
ANR	856921	Identifier	pj		856749	0					
ANR	856922	Argument	"""fcns"""		856749	1					
ANR	856923	PrimaryExpression	"""fcns"""		856749	0					
ANR	856924	Argument	fcns		856749	2					
ANR	856925	Identifier	fcns		856749	0					
ANR	856926	ExpressionStatement	"pj_ki ( pj , ""xrefs"" , xrfs )"	8245:2:234633:234658	856749	4	True				
ANR	856927	CallExpression	"pj_ki ( pj , ""xrefs"" , xrfs )"		856749	0					
ANR	856928	Callee	pj_ki		856749	0					
ANR	856929	Identifier	pj_ki		856749	0					
ANR	856930	ArgumentList	pj		856749	1					
ANR	856931	Argument	pj		856749	0					
ANR	856932	Identifier	pj		856749	0					
ANR	856933	Argument	"""xrefs"""		856749	1					
ANR	856934	PrimaryExpression	"""xrefs"""		856749	0					
ANR	856935	Argument	xrfs		856749	2					
ANR	856936	Identifier	xrfs		856749	0					
ANR	856937	ExpressionStatement	"pj_ki ( pj , ""calls"" , call )"	8246:2:234662:234687	856749	5	True				
ANR	856938	CallExpression	"pj_ki ( pj , ""calls"" , call )"		856749	0					
ANR	856939	Callee	pj_ki		856749	0					
ANR	856940	Identifier	pj_ki		856749	0					
ANR	856941	ArgumentList	pj		856749	1					
ANR	856942	Argument	pj		856749	0					
ANR	856943	Identifier	pj		856749	0					
ANR	856944	Argument	"""calls"""		856749	1					
ANR	856945	PrimaryExpression	"""calls"""		856749	0					
ANR	856946	Argument	call		856749	2					
ANR	856947	Identifier	call		856749	0					
ANR	856948	ExpressionStatement	"pj_ki ( pj , ""strings"" , strs )"	8247:2:234691:234718	856749	6	True				
ANR	856949	CallExpression	"pj_ki ( pj , ""strings"" , strs )"		856749	0					
ANR	856950	Callee	pj_ki		856749	0					
ANR	856951	Identifier	pj_ki		856749	0					
ANR	856952	ArgumentList	pj		856749	1					
ANR	856953	Argument	pj		856749	0					
ANR	856954	Identifier	pj		856749	0					
ANR	856955	Argument	"""strings"""		856749	1					
ANR	856956	PrimaryExpression	"""strings"""		856749	0					
ANR	856957	Argument	strs		856749	2					
ANR	856958	Identifier	strs		856749	0					
ANR	856959	ExpressionStatement	"pj_ki ( pj , ""symbols"" , syms )"	8248:2:234722:234749	856749	7	True				
ANR	856960	CallExpression	"pj_ki ( pj , ""symbols"" , syms )"		856749	0					
ANR	856961	Callee	pj_ki		856749	0					
ANR	856962	Identifier	pj_ki		856749	0					
ANR	856963	ArgumentList	pj		856749	1					
ANR	856964	Argument	pj		856749	0					
ANR	856965	Identifier	pj		856749	0					
ANR	856966	Argument	"""symbols"""		856749	1					
ANR	856967	PrimaryExpression	"""symbols"""		856749	0					
ANR	856968	Argument	syms		856749	2					
ANR	856969	Identifier	syms		856749	0					
ANR	856970	ExpressionStatement	"pj_ki ( pj , ""imports"" , imps )"	8249:2:234753:234780	856749	8	True				
ANR	856971	CallExpression	"pj_ki ( pj , ""imports"" , imps )"		856749	0					
ANR	856972	Callee	pj_ki		856749	0					
ANR	856973	Identifier	pj_ki		856749	0					
ANR	856974	ArgumentList	pj		856749	1					
ANR	856975	Argument	pj		856749	0					
ANR	856976	Identifier	pj		856749	0					
ANR	856977	Argument	"""imports"""		856749	1					
ANR	856978	PrimaryExpression	"""imports"""		856749	0					
ANR	856979	Argument	imps		856749	2					
ANR	856980	Identifier	imps		856749	0					
ANR	856981	ExpressionStatement	"pj_ki ( pj , ""covrage"" , covr )"	8250:2:234784:234811	856749	9	True				
ANR	856982	CallExpression	"pj_ki ( pj , ""covrage"" , covr )"		856749	0					
ANR	856983	Callee	pj_ki		856749	0					
ANR	856984	Identifier	pj_ki		856749	0					
ANR	856985	ArgumentList	pj		856749	1					
ANR	856986	Argument	pj		856749	0					
ANR	856987	Identifier	pj		856749	0					
ANR	856988	Argument	"""covrage"""		856749	1					
ANR	856989	PrimaryExpression	"""covrage"""		856749	0					
ANR	856990	Argument	covr		856749	2					
ANR	856991	Identifier	covr		856749	0					
ANR	856992	ExpressionStatement	"pj_ki ( pj , ""codesz"" , code )"	8251:2:234815:234841	856749	10	True				
ANR	856993	CallExpression	"pj_ki ( pj , ""codesz"" , code )"		856749	0					
ANR	856994	Callee	pj_ki		856749	0					
ANR	856995	Identifier	pj_ki		856749	0					
ANR	856996	ArgumentList	pj		856749	1					
ANR	856997	Argument	pj		856749	0					
ANR	856998	Identifier	pj		856749	0					
ANR	856999	Argument	"""codesz"""		856749	1					
ANR	857000	PrimaryExpression	"""codesz"""		856749	0					
ANR	857001	Argument	code		856749	2					
ANR	857002	Identifier	code		856749	0					
ANR	857003	ExpressionStatement	"pj_ki ( pj , ""percent"" , cvpc )"	8252:2:234845:234872	856749	11	True				
ANR	857004	CallExpression	"pj_ki ( pj , ""percent"" , cvpc )"		856749	0					
ANR	857005	Callee	pj_ki		856749	0					
ANR	857006	Identifier	pj_ki		856749	0					
ANR	857007	ArgumentList	pj		856749	1					
ANR	857008	Argument	pj		856749	0					
ANR	857009	Identifier	pj		856749	0					
ANR	857010	Argument	"""percent"""		856749	1					
ANR	857011	PrimaryExpression	"""percent"""		856749	0					
ANR	857012	Argument	cvpc		856749	2					
ANR	857013	Identifier	cvpc		856749	0					
ANR	857014	ExpressionStatement	pj_end ( pj )	8253:2:234876:234887	856749	12	True				
ANR	857015	CallExpression	pj_end ( pj )		856749	0					
ANR	857016	Callee	pj_end		856749	0					
ANR	857017	Identifier	pj_end		856749	0					
ANR	857018	ArgumentList	pj		856749	1					
ANR	857019	Argument	pj		856749	0					
ANR	857020	Identifier	pj		856749	0					
ANR	857021	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	8254:2:234891:234922	856749	13	True				
ANR	857022	CallExpression	r_cons_println ( pj_string ( pj ) )		856749	0					
ANR	857023	Callee	r_cons_println		856749	0					
ANR	857024	Identifier	r_cons_println		856749	0					
ANR	857025	ArgumentList	pj_string ( pj )		856749	1					
ANR	857026	Argument	pj_string ( pj )		856749	0					
ANR	857027	CallExpression	pj_string ( pj )		856749	0					
ANR	857028	Callee	pj_string		856749	0					
ANR	857029	Identifier	pj_string		856749	0					
ANR	857030	ArgumentList	pj		856749	1					
ANR	857031	Argument	pj		856749	0					
ANR	857032	Identifier	pj		856749	0					
ANR	857033	ExpressionStatement	pj_free ( pj )	8255:2:234926:234938	856749	14	True				
ANR	857034	CallExpression	pj_free ( pj )		856749	0					
ANR	857035	Callee	pj_free		856749	0					
ANR	857036	Identifier	pj_free		856749	0					
ANR	857037	ArgumentList	pj		856749	1					
ANR	857038	Argument	pj		856749	0					
ANR	857039	Identifier	pj		856749	0					
ANR	857040	ElseStatement	else		856749	0					
ANR	857041	CompoundStatement		29:8:825:825	856749	0					
ANR	857042	ExpressionStatement	"r_cons_printf ( ""fcns    %d\\n"" , fcns )"	8257:2:234952:234988	856749	0	True				
ANR	857043	CallExpression	"r_cons_printf ( ""fcns    %d\\n"" , fcns )"		856749	0					
ANR	857044	Callee	r_cons_printf		856749	0					
ANR	857045	Identifier	r_cons_printf		856749	0					
ANR	857046	ArgumentList	"""fcns    %d\\n"""		856749	1					
ANR	857047	Argument	"""fcns    %d\\n"""		856749	0					
ANR	857048	PrimaryExpression	"""fcns    %d\\n"""		856749	0					
ANR	857049	Argument	fcns		856749	1					
ANR	857050	Identifier	fcns		856749	0					
ANR	857051	ExpressionStatement	"r_cons_printf ( ""xrefs   %d\\n"" , xrfs )"	8258:2:234992:235028	856749	1	True				
ANR	857052	CallExpression	"r_cons_printf ( ""xrefs   %d\\n"" , xrfs )"		856749	0					
ANR	857053	Callee	r_cons_printf		856749	0					
ANR	857054	Identifier	r_cons_printf		856749	0					
ANR	857055	ArgumentList	"""xrefs   %d\\n"""		856749	1					
ANR	857056	Argument	"""xrefs   %d\\n"""		856749	0					
ANR	857057	PrimaryExpression	"""xrefs   %d\\n"""		856749	0					
ANR	857058	Argument	xrfs		856749	1					
ANR	857059	Identifier	xrfs		856749	0					
ANR	857060	ExpressionStatement	"r_cons_printf ( ""calls   %d\\n"" , call )"	8259:2:235032:235068	856749	2	True				
ANR	857061	CallExpression	"r_cons_printf ( ""calls   %d\\n"" , call )"		856749	0					
ANR	857062	Callee	r_cons_printf		856749	0					
ANR	857063	Identifier	r_cons_printf		856749	0					
ANR	857064	ArgumentList	"""calls   %d\\n"""		856749	1					
ANR	857065	Argument	"""calls   %d\\n"""		856749	0					
ANR	857066	PrimaryExpression	"""calls   %d\\n"""		856749	0					
ANR	857067	Argument	call		856749	1					
ANR	857068	Identifier	call		856749	0					
ANR	857069	ExpressionStatement	"r_cons_printf ( ""strings %d\\n"" , strs )"	8260:2:235072:235108	856749	3	True				
ANR	857070	CallExpression	"r_cons_printf ( ""strings %d\\n"" , strs )"		856749	0					
ANR	857071	Callee	r_cons_printf		856749	0					
ANR	857072	Identifier	r_cons_printf		856749	0					
ANR	857073	ArgumentList	"""strings %d\\n"""		856749	1					
ANR	857074	Argument	"""strings %d\\n"""		856749	0					
ANR	857075	PrimaryExpression	"""strings %d\\n"""		856749	0					
ANR	857076	Argument	strs		856749	1					
ANR	857077	Identifier	strs		856749	0					
ANR	857078	ExpressionStatement	"r_cons_printf ( ""symbols %d\\n"" , syms )"	8261:2:235112:235148	856749	4	True				
ANR	857079	CallExpression	"r_cons_printf ( ""symbols %d\\n"" , syms )"		856749	0					
ANR	857080	Callee	r_cons_printf		856749	0					
ANR	857081	Identifier	r_cons_printf		856749	0					
ANR	857082	ArgumentList	"""symbols %d\\n"""		856749	1					
ANR	857083	Argument	"""symbols %d\\n"""		856749	0					
ANR	857084	PrimaryExpression	"""symbols %d\\n"""		856749	0					
ANR	857085	Argument	syms		856749	1					
ANR	857086	Identifier	syms		856749	0					
ANR	857087	ExpressionStatement	"r_cons_printf ( ""imports %d\\n"" , imps )"	8262:2:235152:235188	856749	5	True				
ANR	857088	CallExpression	"r_cons_printf ( ""imports %d\\n"" , imps )"		856749	0					
ANR	857089	Callee	r_cons_printf		856749	0					
ANR	857090	Identifier	r_cons_printf		856749	0					
ANR	857091	ArgumentList	"""imports %d\\n"""		856749	1					
ANR	857092	Argument	"""imports %d\\n"""		856749	0					
ANR	857093	PrimaryExpression	"""imports %d\\n"""		856749	0					
ANR	857094	Argument	imps		856749	1					
ANR	857095	Identifier	imps		856749	0					
ANR	857096	ExpressionStatement	"r_cons_printf ( ""covrage %d\\n"" , covr )"	8263:2:235192:235228	856749	6	True				
ANR	857097	CallExpression	"r_cons_printf ( ""covrage %d\\n"" , covr )"		856749	0					
ANR	857098	Callee	r_cons_printf		856749	0					
ANR	857099	Identifier	r_cons_printf		856749	0					
ANR	857100	ArgumentList	"""covrage %d\\n"""		856749	1					
ANR	857101	Argument	"""covrage %d\\n"""		856749	0					
ANR	857102	PrimaryExpression	"""covrage %d\\n"""		856749	0					
ANR	857103	Argument	covr		856749	1					
ANR	857104	Identifier	covr		856749	0					
ANR	857105	ExpressionStatement	"r_cons_printf ( ""codesz  %d\\n"" , code )"	8264:2:235232:235268	856749	7	True				
ANR	857106	CallExpression	"r_cons_printf ( ""codesz  %d\\n"" , code )"		856749	0					
ANR	857107	Callee	r_cons_printf		856749	0					
ANR	857108	Identifier	r_cons_printf		856749	0					
ANR	857109	ArgumentList	"""codesz  %d\\n"""		856749	1					
ANR	857110	Argument	"""codesz  %d\\n"""		856749	0					
ANR	857111	PrimaryExpression	"""codesz  %d\\n"""		856749	0					
ANR	857112	Argument	code		856749	1					
ANR	857113	Identifier	code		856749	0					
ANR	857114	ExpressionStatement	"r_cons_printf ( ""percent %d%%\\n"" , cvpc )"	8265:2:235272:235310	856749	8	True				
ANR	857115	CallExpression	"r_cons_printf ( ""percent %d%%\\n"" , cvpc )"		856749	0					
ANR	857116	Callee	r_cons_printf		856749	0					
ANR	857117	Identifier	r_cons_printf		856749	0					
ANR	857118	ArgumentList	"""percent %d%%\\n"""		856749	1					
ANR	857119	Argument	"""percent %d%%\\n"""		856749	0					
ANR	857120	PrimaryExpression	"""percent %d%%\\n"""		856749	0					
ANR	857121	Argument	cvpc		856749	1					
ANR	857122	Identifier	cvpc		856749	0					
ANR	857123	ReturnType	static void		856749	1					
ANR	857124	Identifier	r_core_anal_info		856749	2					
ANR	857125	ParameterList	"RCore * core , const char * input"		856749	3					
ANR	857126	Parameter	RCore * core	8228:30:234090:234100	856749	0	True				
ANR	857127	ParameterType	RCore *		856749	0					
ANR	857128	Identifier	core		856749	1					
ANR	857129	Parameter	const char * input	8228:43:234103:234119	856749	1	True				
ANR	857130	ParameterType	const char *		856749	0					
ANR	857131	Identifier	input		856749	1					
ANR	857132	CFGEntryNode	ENTRY		856749		True				
ANR	857133	CFGExitNode	EXIT		856749		True				
ANR	857134	Symbol	code		856749						
ANR	857135	Symbol	pj_string		856749						
ANR	857136	Symbol	covr		856749						
ANR	857137	Symbol	* core		856749						
ANR	857138	Symbol	cvpc		856749						
ANR	857139	Symbol	* input		856749						
ANR	857140	Symbol	core -> anal		856749						
ANR	857141	Symbol	strs		856749						
ANR	857142	Symbol	imps		856749						
ANR	857143	Symbol	r_anal_xrefs_count		856749						
ANR	857144	Symbol	compute_calls		856749						
ANR	857145	Symbol	* * core		856749						
ANR	857146	Symbol	compute_code		856749						
ANR	857147	Symbol	core -> flags		856749						
ANR	857148	Symbol	core -> anal -> fcns		856749						
ANR	857149	Symbol	fcns		856749						
ANR	857150	Symbol	call		856749						
ANR	857151	Symbol	core		856749						
ANR	857152	Symbol	input		856749						
ANR	857153	Symbol	* core -> anal		856749						
ANR	857154	Symbol	compute_coverage		856749						
ANR	857155	Symbol	r_flag_count		856749						
ANR	857156	Symbol	syms		856749						
ANR	857157	Symbol	pj_new		856749						
ANR	857158	Symbol	pj		856749						
ANR	857159	Symbol	r_list_length		856749						
ANR	857160	Symbol	xrfs		856749						
ANR	857161	Function	cmd_anal_aad	8269:0:235318:235720							
ANR	857162	FunctionDef	"cmd_anal_aad (RCore * core , const char * input)"		857161	0					
ANR	857163	CompoundStatement		8269:57:235375:235720	857161	0					
ANR	857164	IdentifierDeclStatement	RListIter * iter ;	8270:1:235378:235393	857161	0	True				
ANR	857165	IdentifierDecl	* iter		857161	0					
ANR	857166	IdentifierDeclType	RListIter *		857161	0					
ANR	857167	Identifier	iter		857161	1					
ANR	857168	IdentifierDeclStatement	RAnalRef * ref ;	8271:1:235396:235409	857161	1	True				
ANR	857169	IdentifierDecl	* ref		857161	0					
ANR	857170	IdentifierDeclType	RAnalRef *		857161	0					
ANR	857171	Identifier	ref		857161	1					
ANR	857172	IdentifierDeclStatement	RList * list = r_list_newf ( NULL ) ;	8272:1:235412:235444	857161	2	True				
ANR	857173	IdentifierDecl	* list = r_list_newf ( NULL )		857161	0					
ANR	857174	IdentifierDeclType	RList *		857161	0					
ANR	857175	Identifier	list		857161	1					
ANR	857176	AssignmentExpression	* list = r_list_newf ( NULL )		857161	2		=			
ANR	857177	Identifier	list		857161	0					
ANR	857178	CallExpression	r_list_newf ( NULL )		857161	1					
ANR	857179	Callee	r_list_newf		857161	0					
ANR	857180	Identifier	r_list_newf		857161	0					
ANR	857181	ArgumentList	NULL		857161	1					
ANR	857182	Argument	NULL		857161	0					
ANR	857183	Identifier	NULL		857161	0					
ANR	857184	ExpressionStatement	"r_anal_xrefs_from ( core -> anal , list , ""xref"" , R_ANAL_REF_TYPE_DATA , UT64_MAX )"	8273:1:235447:235523	857161	3	True				
ANR	857185	CallExpression	"r_anal_xrefs_from ( core -> anal , list , ""xref"" , R_ANAL_REF_TYPE_DATA , UT64_MAX )"		857161	0					
ANR	857186	Callee	r_anal_xrefs_from		857161	0					
ANR	857187	Identifier	r_anal_xrefs_from		857161	0					
ANR	857188	ArgumentList	core -> anal		857161	1					
ANR	857189	Argument	core -> anal		857161	0					
ANR	857190	PtrMemberAccess	core -> anal		857161	0					
ANR	857191	Identifier	core		857161	0					
ANR	857192	Identifier	anal		857161	1					
ANR	857193	Argument	list		857161	1					
ANR	857194	Identifier	list		857161	0					
ANR	857195	Argument	"""xref"""		857161	2					
ANR	857196	PrimaryExpression	"""xref"""		857161	0					
ANR	857197	Argument	R_ANAL_REF_TYPE_DATA		857161	3					
ANR	857198	Identifier	R_ANAL_REF_TYPE_DATA		857161	0					
ANR	857199	Argument	UT64_MAX		857161	4					
ANR	857200	Identifier	UT64_MAX		857161	0					
ANR	857201	Statement	r_list_foreach	8274:1:235526:235539	857161	4	True				
ANR	857202	Statement	(	8274:16:235541:235541	857161	5	True				
ANR	857203	Statement	list	8274:17:235542:235545	857161	6	True				
ANR	857204	Statement	","	8274:21:235546:235546	857161	7	True				
ANR	857205	Statement	iter	8274:23:235548:235551	857161	8	True				
ANR	857206	Statement	","	8274:27:235552:235552	857161	9	True				
ANR	857207	Statement	ref	8274:29:235554:235556	857161	10	True				
ANR	857208	Statement	)	8274:32:235557:235557	857161	11	True				
ANR	857209	CompoundStatement		6:34:183:183	857161	12					
ANR	857210	IfStatement	"if ( r_io_is_valid_offset ( core -> io , ref -> addr , false ) )"		857161	0					
ANR	857211	Condition	"r_io_is_valid_offset ( core -> io , ref -> addr , false )"	8275:6:235567:235615	857161	0	True				
ANR	857212	CallExpression	"r_io_is_valid_offset ( core -> io , ref -> addr , false )"		857161	0					
ANR	857213	Callee	r_io_is_valid_offset		857161	0					
ANR	857214	Identifier	r_io_is_valid_offset		857161	0					
ANR	857215	ArgumentList	core -> io		857161	1					
ANR	857216	Argument	core -> io		857161	0					
ANR	857217	PtrMemberAccess	core -> io		857161	0					
ANR	857218	Identifier	core		857161	0					
ANR	857219	Identifier	io		857161	1					
ANR	857220	Argument	ref -> addr		857161	1					
ANR	857221	PtrMemberAccess	ref -> addr		857161	0					
ANR	857222	Identifier	ref		857161	0					
ANR	857223	Identifier	addr		857161	1					
ANR	857224	Argument	false		857161	2					
ANR	857225	Identifier	false		857161	0					
ANR	857226	CompoundStatement		7:57:242:242	857161	1					
ANR	857227	ExpressionStatement	"r_core_anal_fcn ( core , ref -> at , ref -> addr , R_ANAL_REF_TYPE_NULL , 1 )"	8276:3:235623:235690	857161	0	True				
ANR	857228	CallExpression	"r_core_anal_fcn ( core , ref -> at , ref -> addr , R_ANAL_REF_TYPE_NULL , 1 )"		857161	0					
ANR	857229	Callee	r_core_anal_fcn		857161	0					
ANR	857230	Identifier	r_core_anal_fcn		857161	0					
ANR	857231	ArgumentList	core		857161	1					
ANR	857232	Argument	core		857161	0					
ANR	857233	Identifier	core		857161	0					
ANR	857234	Argument	ref -> at		857161	1					
ANR	857235	PtrMemberAccess	ref -> at		857161	0					
ANR	857236	Identifier	ref		857161	0					
ANR	857237	Identifier	at		857161	1					
ANR	857238	Argument	ref -> addr		857161	2					
ANR	857239	PtrMemberAccess	ref -> addr		857161	0					
ANR	857240	Identifier	ref		857161	0					
ANR	857241	Identifier	addr		857161	1					
ANR	857242	Argument	R_ANAL_REF_TYPE_NULL		857161	3					
ANR	857243	Identifier	R_ANAL_REF_TYPE_NULL		857161	0					
ANR	857244	Argument	1		857161	4					
ANR	857245	PrimaryExpression	1		857161	0					
ANR	857246	ExpressionStatement	r_list_free ( list )	8279:1:235700:235718	857161	13	True				
ANR	857247	CallExpression	r_list_free ( list )		857161	0					
ANR	857248	Callee	r_list_free		857161	0					
ANR	857249	Identifier	r_list_free		857161	0					
ANR	857250	ArgumentList	list		857161	1					
ANR	857251	Argument	list		857161	0					
ANR	857252	Identifier	list		857161	0					
ANR	857253	ReturnType	static void		857161	1					
ANR	857254	Identifier	cmd_anal_aad		857161	2					
ANR	857255	ParameterList	"RCore * core , const char * input"		857161	3					
ANR	857256	Parameter	RCore * core	8269:25:235343:235353	857161	0	True				
ANR	857257	ParameterType	RCore *		857161	0					
ANR	857258	Identifier	core		857161	1					
ANR	857259	Parameter	const char * input	8269:38:235356:235372	857161	1	True				
ANR	857260	ParameterType	const char *		857161	0					
ANR	857261	Identifier	input		857161	1					
ANR	857262	CFGEntryNode	ENTRY		857161		True				
ANR	857263	CFGExitNode	EXIT		857161		True				
ANR	857264	Symbol	r_io_is_valid_offset		857161						
ANR	857265	Symbol	NULL		857161						
ANR	857266	Symbol	ref -> addr		857161						
ANR	857267	Symbol	r_list_newf		857161						
ANR	857268	Symbol	* core		857161						
ANR	857269	Symbol	false		857161						
ANR	857270	Symbol	ref -> at		857161						
ANR	857271	Symbol	iter		857161						
ANR	857272	Symbol	R_ANAL_REF_TYPE_DATA		857161						
ANR	857273	Symbol	list		857161						
ANR	857274	Symbol	core -> anal		857161						
ANR	857275	Symbol	R_ANAL_REF_TYPE_NULL		857161						
ANR	857276	Symbol	core		857161						
ANR	857277	Symbol	input		857161						
ANR	857278	Symbol	ref		857161						
ANR	857279	Symbol	core -> io		857161						
ANR	857280	Symbol	UT64_MAX		857161						
ANR	857281	Symbol	* ref		857161						
ANR	857282	Function	archIsThumbable	8282:0:235723:235924							
ANR	857283	FunctionDef	archIsThumbable (RCore * core)		857282	0					
ANR	857284	CompoundStatement		8282:41:235764:235924	857282	0					
ANR	857285	IdentifierDeclStatement	RAsm * as = core ? core -> assembler : NULL ;	8283:1:235767:235807	857282	0	True				
ANR	857286	IdentifierDecl	* as = core ? core -> assembler : NULL		857282	0					
ANR	857287	IdentifierDeclType	RAsm *		857282	0					
ANR	857288	Identifier	as		857282	1					
ANR	857289	AssignmentExpression	* as = core ? core -> assembler : NULL		857282	2		=			
ANR	857290	Identifier	as		857282	0					
ANR	857291	ConditionalExpression	core ? core -> assembler : NULL		857282	1					
ANR	857292	Condition	core		857282	0					
ANR	857293	Identifier	core		857282	0					
ANR	857294	PtrMemberAccess	core -> assembler		857282	1					
ANR	857295	Identifier	core		857282	0					
ANR	857296	Identifier	assembler		857282	1					
ANR	857297	Identifier	NULL		857282	2					
ANR	857298	IfStatement	if ( as && as -> cur && as -> bits <= 32 && as -> cur -> name )		857282	1					
ANR	857299	Condition	as && as -> cur && as -> bits <= 32 && as -> cur -> name	8284:5:235814:235861	857282	0	True				
ANR	857300	AndExpression	as && as -> cur && as -> bits <= 32 && as -> cur -> name		857282	0		&&			
ANR	857301	Identifier	as		857282	0					
ANR	857302	AndExpression	as -> cur && as -> bits <= 32 && as -> cur -> name		857282	1		&&			
ANR	857303	PtrMemberAccess	as -> cur		857282	0					
ANR	857304	Identifier	as		857282	0					
ANR	857305	Identifier	cur		857282	1					
ANR	857306	AndExpression	as -> bits <= 32 && as -> cur -> name		857282	1		&&			
ANR	857307	RelationalExpression	as -> bits <= 32		857282	0		<=			
ANR	857308	PtrMemberAccess	as -> bits		857282	0					
ANR	857309	Identifier	as		857282	0					
ANR	857310	Identifier	bits		857282	1					
ANR	857311	PrimaryExpression	32		857282	1					
ANR	857312	PtrMemberAccess	as -> cur -> name		857282	1					
ANR	857313	PtrMemberAccess	as -> cur		857282	0					
ANR	857314	Identifier	as		857282	0					
ANR	857315	Identifier	cur		857282	1					
ANR	857316	Identifier	name		857282	1					
ANR	857317	CompoundStatement		3:55:99:99	857282	1					
ANR	857318	ReturnStatement	"return strstr ( as -> cur -> name , ""arm"" ) ;"	8285:2:235868:235904	857282	0	True				
ANR	857319	CallExpression	"strstr ( as -> cur -> name , ""arm"" )"		857282	0					
ANR	857320	Callee	strstr		857282	0					
ANR	857321	Identifier	strstr		857282	0					
ANR	857322	ArgumentList	as -> cur -> name		857282	1					
ANR	857323	Argument	as -> cur -> name		857282	0					
ANR	857324	PtrMemberAccess	as -> cur -> name		857282	0					
ANR	857325	PtrMemberAccess	as -> cur		857282	0					
ANR	857326	Identifier	as		857282	0					
ANR	857327	Identifier	cur		857282	1					
ANR	857328	Identifier	name		857282	1					
ANR	857329	Argument	"""arm"""		857282	1					
ANR	857330	PrimaryExpression	"""arm"""		857282	0					
ANR	857331	ReturnStatement	return false ;	8287:1:235910:235922	857282	2	True				
ANR	857332	Identifier	false		857282	0					
ANR	857333	ReturnType	static bool		857282	1					
ANR	857334	Identifier	archIsThumbable		857282	2					
ANR	857335	ParameterList	RCore * core		857282	3					
ANR	857336	Parameter	RCore * core	8282:28:235751:235761	857282	0	True				
ANR	857337	ParameterType	RCore *		857282	0					
ANR	857338	Identifier	core		857282	1					
ANR	857339	CFGEntryNode	ENTRY		857282		True				
ANR	857340	CFGExitNode	EXIT		857282		True				
ANR	857341	Symbol	as -> cur -> name		857282						
ANR	857342	Symbol	NULL		857282						
ANR	857343	Symbol	* core		857282						
ANR	857344	Symbol	false		857282						
ANR	857345	Symbol	core -> assembler		857282						
ANR	857346	Symbol	as -> bits		857282						
ANR	857347	Symbol	core		857282						
ANR	857348	Symbol	as		857282						
ANR	857349	Symbol	strstr		857282						
ANR	857350	Symbol	* as -> cur		857282						
ANR	857351	Symbol	* as		857282						
ANR	857352	Symbol	* * as		857282						
ANR	857353	Symbol	as -> cur		857282						
ANR	857354	Function	_CbInRangeAav	8290:0:235927:237298							
ANR	857355	FunctionDef	"_CbInRangeAav (RCore * core , ut64 from , ut64 to , int vsize , bool asterisk , int count)"		857354	0					
ANR	857356	CompoundStatement		8290:96:236023:237298	857354	0					
ANR	857357	IdentifierDeclStatement	"int arch_align = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN ) ;"	8291:1:236026:236094	857354	0	True				
ANR	857358	IdentifierDecl	"arch_align = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		857354	0					
ANR	857359	IdentifierDeclType	int		857354	0					
ANR	857360	Identifier	arch_align		857354	1					
ANR	857361	AssignmentExpression	"arch_align = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		857354	2		=			
ANR	857362	Identifier	arch_align		857354	0					
ANR	857363	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		857354	1					
ANR	857364	Callee	r_anal_archinfo		857354	0					
ANR	857365	Identifier	r_anal_archinfo		857354	0					
ANR	857366	ArgumentList	core -> anal		857354	1					
ANR	857367	Argument	core -> anal		857354	0					
ANR	857368	PtrMemberAccess	core -> anal		857354	0					
ANR	857369	Identifier	core		857354	0					
ANR	857370	Identifier	anal		857354	1					
ANR	857371	Argument	R_ANAL_ARCHINFO_ALIGN		857354	1					
ANR	857372	Identifier	R_ANAL_ARCHINFO_ALIGN		857354	0					
ANR	857373	IdentifierDeclStatement	"bool vinfun = r_config_get_i ( core -> config , ""anal.vinfun"" ) ;"	8292:1:236097:236155	857354	1	True				
ANR	857374	IdentifierDecl	"vinfun = r_config_get_i ( core -> config , ""anal.vinfun"" )"		857354	0					
ANR	857375	IdentifierDeclType	bool		857354	0					
ANR	857376	Identifier	vinfun		857354	1					
ANR	857377	AssignmentExpression	"vinfun = r_config_get_i ( core -> config , ""anal.vinfun"" )"		857354	2		=			
ANR	857378	Identifier	vinfun		857354	0					
ANR	857379	CallExpression	"r_config_get_i ( core -> config , ""anal.vinfun"" )"		857354	1					
ANR	857380	Callee	r_config_get_i		857354	0					
ANR	857381	Identifier	r_config_get_i		857354	0					
ANR	857382	ArgumentList	core -> config		857354	1					
ANR	857383	Argument	core -> config		857354	0					
ANR	857384	PtrMemberAccess	core -> config		857354	0					
ANR	857385	Identifier	core		857354	0					
ANR	857386	Identifier	config		857354	1					
ANR	857387	Argument	"""anal.vinfun"""		857354	1					
ANR	857388	PrimaryExpression	"""anal.vinfun"""		857354	0					
ANR	857389	IdentifierDeclStatement	"int searchAlign = r_config_get_i ( core -> config , ""search.align"" ) ;"	8293:1:236158:236221	857354	2	True				
ANR	857390	IdentifierDecl	"searchAlign = r_config_get_i ( core -> config , ""search.align"" )"		857354	0					
ANR	857391	IdentifierDeclType	int		857354	0					
ANR	857392	Identifier	searchAlign		857354	1					
ANR	857393	AssignmentExpression	"searchAlign = r_config_get_i ( core -> config , ""search.align"" )"		857354	2		=			
ANR	857394	Identifier	searchAlign		857354	0					
ANR	857395	CallExpression	"r_config_get_i ( core -> config , ""search.align"" )"		857354	1					
ANR	857396	Callee	r_config_get_i		857354	0					
ANR	857397	Identifier	r_config_get_i		857354	0					
ANR	857398	ArgumentList	core -> config		857354	1					
ANR	857399	Argument	core -> config		857354	0					
ANR	857400	PtrMemberAccess	core -> config		857354	0					
ANR	857401	Identifier	core		857354	0					
ANR	857402	Identifier	config		857354	1					
ANR	857403	Argument	"""search.align"""		857354	1					
ANR	857404	PrimaryExpression	"""search.align"""		857354	0					
ANR	857405	IdentifierDeclStatement	int align = ( searchAlign > 0 ) ? searchAlign : arch_align ;	8294:1:236224:236278	857354	3	True				
ANR	857406	IdentifierDecl	align = ( searchAlign > 0 ) ? searchAlign : arch_align		857354	0					
ANR	857407	IdentifierDeclType	int		857354	0					
ANR	857408	Identifier	align		857354	1					
ANR	857409	AssignmentExpression	align = ( searchAlign > 0 ) ? searchAlign : arch_align		857354	2		=			
ANR	857410	Identifier	align		857354	0					
ANR	857411	ConditionalExpression	( searchAlign > 0 ) ? searchAlign : arch_align		857354	1					
ANR	857412	Condition	searchAlign > 0		857354	0					
ANR	857413	RelationalExpression	searchAlign > 0		857354	0		>			
ANR	857414	Identifier	searchAlign		857354	0					
ANR	857415	PrimaryExpression	0		857354	1					
ANR	857416	Identifier	searchAlign		857354	1					
ANR	857417	Identifier	arch_align		857354	2					
ANR	857418	IfStatement	if ( align > 1 )		857354	4					
ANR	857419	Condition	align > 1	8295:5:236285:236293	857354	0	True				
ANR	857420	RelationalExpression	align > 1		857354	0		>			
ANR	857421	Identifier	align		857354	0					
ANR	857422	PrimaryExpression	1		857354	1					
ANR	857423	CompoundStatement		6:16:272:272	857354	1					
ANR	857424	IfStatement	if ( ( from % align ) || ( to % align ) )		857354	0					
ANR	857425	Condition	( from % align ) || ( to % align )	8296:6:236304:236333	857354	0	True				
ANR	857426	OrExpression	( from % align ) || ( to % align )		857354	0		||			
ANR	857427	MultiplicativeExpression	from % align		857354	0		%			
ANR	857428	Identifier	from		857354	0					
ANR	857429	Identifier	align		857354	1					
ANR	857430	MultiplicativeExpression	to % align		857354	1		%			
ANR	857431	Identifier	to		857354	0					
ANR	857432	Identifier	align		857354	1					
ANR	857433	CompoundStatement		8:3:317:337	857354	1					
ANR	857434	IdentifierDeclStatement	bool itsFine = false ;	8297:3:236341:236361	857354	0	True				
ANR	857435	IdentifierDecl	itsFine = false		857354	0					
ANR	857436	IdentifierDeclType	bool		857354	0					
ANR	857437	Identifier	itsFine		857354	1					
ANR	857438	AssignmentExpression	itsFine = false		857354	2		=			
ANR	857439	Identifier	false		857354	0					
ANR	857440	Identifier	false		857354	1					
ANR	857441	IfStatement	if ( archIsThumbable ( core ) )		857354	1					
ANR	857442	Condition	archIsThumbable ( core )	8298:7:236370:236391	857354	0	True				
ANR	857443	CallExpression	archIsThumbable ( core )		857354	0					
ANR	857444	Callee	archIsThumbable		857354	0					
ANR	857445	Identifier	archIsThumbable		857354	0					
ANR	857446	ArgumentList	core		857354	1					
ANR	857447	Argument	core		857354	0					
ANR	857448	Identifier	core		857354	0					
ANR	857449	CompoundStatement		9:31:370:370	857354	1					
ANR	857450	IfStatement	if ( ( from & 1 ) || ( to & 1 ) )		857354	0					
ANR	857451	Condition	( from & 1 ) || ( to & 1 )	8299:8:236404:236425	857354	0	True				
ANR	857452	OrExpression	( from & 1 ) || ( to & 1 )		857354	0		||			
ANR	857453	BitAndExpression	from & 1		857354	0		&			
ANR	857454	Identifier	from		857354	0					
ANR	857455	PrimaryExpression	1		857354	1					
ANR	857456	BitAndExpression	to & 1		857354	1		&			
ANR	857457	Identifier	to		857354	0					
ANR	857458	PrimaryExpression	1		857354	1					
ANR	857459	CompoundStatement		10:32:404:404	857354	1					
ANR	857460	ExpressionStatement	itsFine = true	8300:5:236435:236449	857354	0	True				
ANR	857461	AssignmentExpression	itsFine = true		857354	0		=			
ANR	857462	Identifier	itsFine		857354	0					
ANR	857463	Identifier	true		857354	1					
ANR	857464	IfStatement	if ( ! itsFine )		857354	2					
ANR	857465	Condition	! itsFine	8303:7:236469:236476	857354	0	True				
ANR	857466	UnaryOperationExpression	! itsFine		857354	0					
ANR	857467	UnaryOperator	!		857354	0					
ANR	857468	Identifier	itsFine		857354	1					
ANR	857469	CompoundStatement		14:17:455:455	857354	1					
ANR	857470	ReturnStatement	return ;	8304:4:236485:236491	857354	0	True				
ANR	857471	IfStatement	if ( core -> anal -> verbose )		857354	3					
ANR	857472	Condition	core -> anal -> verbose	8306:7:236505:236523	857354	0	True				
ANR	857473	PtrMemberAccess	core -> anal -> verbose		857354	0					
ANR	857474	PtrMemberAccess	core -> anal		857354	0					
ANR	857475	Identifier	core		857354	0					
ANR	857476	Identifier	anal		857354	1					
ANR	857477	Identifier	verbose		857354	1					
ANR	857478	CompoundStatement		17:28:502:502	857354	1					
ANR	857479	Statement	eprintf	8307:4:236532:236538	857354	0	True				
ANR	857480	Statement	(	8307:12:236540:236540	857354	1	True				
ANR	857481	Statement	"""Warning: aav: false positive in 0x%08"""	8307:13:236541:236579	857354	2	True				
ANR	857482	Statement	PFMT64x	8307:52:236580:236586	857354	3	True				
ANR	857483	Statement	"""\\n"""	8307:59:236587:236590	857354	4	True				
ANR	857484	Statement	","	8307:63:236591:236591	857354	5	True				
ANR	857485	Statement	from	8307:65:236593:236596	857354	6	True				
ANR	857486	Statement	)	8307:69:236597:236597	857354	7	True				
ANR	857487	ExpressionStatement		8307:70:236598:236598	857354	8	True				
ANR	857488	IfStatement	if ( ! vinfun )		857354	5					
ANR	857489	Condition	! vinfun	8311:5:236617:236623	857354	0	True				
ANR	857490	UnaryOperationExpression	! vinfun		857354	0					
ANR	857491	UnaryOperator	!		857354	0					
ANR	857492	Identifier	vinfun		857354	1					
ANR	857493	CompoundStatement		23:2:606:667	857354	1					
ANR	857494	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , from , - 1 ) ;"	8312:2:236630:236691	857354	0	True				
ANR	857495	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , from , - 1 )"		857354	0					
ANR	857496	IdentifierDeclType	RAnalFunction *		857354	0					
ANR	857497	Identifier	fcn		857354	1					
ANR	857498	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , from , - 1 )"		857354	2		=			
ANR	857499	Identifier	fcn		857354	0					
ANR	857500	CallExpression	"r_anal_get_fcn_in ( core -> anal , from , - 1 )"		857354	1					
ANR	857501	Callee	r_anal_get_fcn_in		857354	0					
ANR	857502	Identifier	r_anal_get_fcn_in		857354	0					
ANR	857503	ArgumentList	core -> anal		857354	1					
ANR	857504	Argument	core -> anal		857354	0					
ANR	857505	PtrMemberAccess	core -> anal		857354	0					
ANR	857506	Identifier	core		857354	0					
ANR	857507	Identifier	anal		857354	1					
ANR	857508	Argument	from		857354	1					
ANR	857509	Identifier	from		857354	0					
ANR	857510	Argument	- 1		857354	2					
ANR	857511	UnaryOperationExpression	- 1		857354	0					
ANR	857512	UnaryOperator	-		857354	0					
ANR	857513	PrimaryExpression	1		857354	1					
ANR	857514	IfStatement	if ( fcn )		857354	1					
ANR	857515	Condition	fcn	8313:6:236699:236701	857354	0	True				
ANR	857516	Identifier	fcn		857354	0					
ANR	857517	CompoundStatement		24:11:680:680	857354	1					
ANR	857518	ReturnStatement	return ;	8314:3:236709:236715	857354	0	True				
ANR	857519	IfStatement	if ( asterisk )		857354	6					
ANR	857520	Condition	asterisk	8317:5:236729:236736	857354	0	True				
ANR	857521	Identifier	asterisk		857354	0					
ANR	857522	CompoundStatement		28:15:715:715	857354	1					
ANR	857523	Statement	r_cons_printf	8318:2:236743:236755	857354	0	True				
ANR	857524	Statement	(	8318:16:236757:236757	857354	1	True				
ANR	857525	Statement	"""ax 0x%"""	8318:17:236758:236765	857354	2	True				
ANR	857526	Statement	PFMT64x	8318:25:236766:236772	857354	3	True				
ANR	857527	Statement	""" 0x%"""	8318:33:236774:236779	857354	4	True				
ANR	857528	Statement	PFMT64x	8318:39:236780:236786	857354	5	True				
ANR	857529	Statement	"""\\n"""	8318:47:236788:236791	857354	6	True				
ANR	857530	Statement	","	8318:51:236792:236792	857354	7	True				
ANR	857531	Statement	to	8318:53:236794:236795	857354	8	True				
ANR	857532	Statement	","	8318:55:236796:236796	857354	9	True				
ANR	857533	Statement	from	8318:57:236798:236801	857354	10	True				
ANR	857534	Statement	)	8318:61:236802:236802	857354	11	True				
ANR	857535	ExpressionStatement		8318:62:236803:236803	857354	12	True				
ANR	857536	Statement	r_cons_printf	8319:2:236807:236819	857354	13	True				
ANR	857537	Statement	(	8319:16:236821:236821	857354	14	True				
ANR	857538	Statement	"""Cd %d @ 0x%"""	8319:17:236822:236834	857354	15	True				
ANR	857539	Statement	PFMT64x	8319:30:236835:236841	857354	16	True				
ANR	857540	Statement	"""\\n"""	8319:38:236843:236846	857354	17	True				
ANR	857541	Statement	","	8319:42:236847:236847	857354	18	True				
ANR	857542	Statement	vsize	8319:44:236849:236853	857354	19	True				
ANR	857543	Statement	","	8319:49:236854:236854	857354	20	True				
ANR	857544	Statement	from	8319:51:236856:236859	857354	21	True				
ANR	857545	Statement	)	8319:55:236860:236860	857354	22	True				
ANR	857546	ExpressionStatement		8319:56:236861:236861	857354	23	True				
ANR	857547	Statement	r_cons_printf	8320:2:236865:236877	857354	24	True				
ANR	857548	Statement	(	8320:16:236879:236879	857354	25	True				
ANR	857549	Statement	"""f+ aav.0x%08"""	8320:17:236880:236893	857354	26	True				
ANR	857550	Statement	PFMT64x	8320:31:236894:236900	857354	27	True				
ANR	857551	Statement	"""= 0x%08"""	8320:39:236902:236910	857354	28	True				
ANR	857552	Statement	PFMT64x	8320:48:236911:236917	857354	29	True				
ANR	857553	Statement	","	8320:55:236918:236918	857354	30	True				
ANR	857554	Statement	to	8320:57:236920:236921	857354	31	True				
ANR	857555	Statement	","	8320:59:236922:236922	857354	32	True				
ANR	857556	Statement	to	8320:61:236924:236925	857354	33	True				
ANR	857557	Statement	)	8320:63:236926:236926	857354	34	True				
ANR	857558	ExpressionStatement		8320:64:236927:236927	857354	35	True				
ANR	857559	ElseStatement	else		857354	0					
ANR	857560	CompoundStatement		32:8:913:913	857354	0					
ANR	857561	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , from , to , R_ANAL_REF_TYPE_NULL )"	8322:2:236941:237002	857354	0	True				
ANR	857562	CallExpression	"r_anal_xrefs_set ( core -> anal , from , to , R_ANAL_REF_TYPE_NULL )"		857354	0					
ANR	857563	Callee	r_anal_xrefs_set		857354	0					
ANR	857564	Identifier	r_anal_xrefs_set		857354	0					
ANR	857565	ArgumentList	core -> anal		857354	1					
ANR	857566	Argument	core -> anal		857354	0					
ANR	857567	PtrMemberAccess	core -> anal		857354	0					
ANR	857568	Identifier	core		857354	0					
ANR	857569	Identifier	anal		857354	1					
ANR	857570	Argument	from		857354	1					
ANR	857571	Identifier	from		857354	0					
ANR	857572	Argument	to		857354	2					
ANR	857573	Identifier	to		857354	0					
ANR	857574	Argument	R_ANAL_REF_TYPE_NULL		857354	3					
ANR	857575	Identifier	R_ANAL_REF_TYPE_NULL		857354	0					
ANR	857576	Statement	r_core_cmdf	8324:2:237067:237077	857354	1	True				
ANR	857577	Statement	(	8324:14:237079:237079	857354	2	True				
ANR	857578	Statement	core	8324:15:237080:237083	857354	3	True				
ANR	857579	Statement	","	8324:19:237084:237084	857354	4	True				
ANR	857580	Statement	"""Cd %d @ 0x%"""	8324:21:237086:237098	857354	5	True				
ANR	857581	Statement	PFMT64x	8324:34:237099:237105	857354	6	True				
ANR	857582	Statement	"""\\n"""	8324:42:237107:237110	857354	7	True				
ANR	857583	Statement	","	8324:46:237111:237111	857354	8	True				
ANR	857584	Statement	vsize	8324:48:237113:237117	857354	9	True				
ANR	857585	Statement	","	8324:53:237118:237118	857354	10	True				
ANR	857586	Statement	from	8324:55:237120:237123	857354	11	True				
ANR	857587	Statement	)	8324:59:237124:237124	857354	12	True				
ANR	857588	ExpressionStatement		8324:60:237125:237125	857354	13	True				
ANR	857589	IfStatement	"if ( ! r_flag_get_at ( core -> flags , to , false ) )"		857354	14					
ANR	857590	Condition	"! r_flag_get_at ( core -> flags , to , false )"	8325:6:237133:237171	857354	0	True				
ANR	857591	UnaryOperationExpression	"! r_flag_get_at ( core -> flags , to , false )"		857354	0					
ANR	857592	UnaryOperator	!		857354	0					
ANR	857593	CallExpression	"r_flag_get_at ( core -> flags , to , false )"		857354	1					
ANR	857594	Callee	r_flag_get_at		857354	0					
ANR	857595	Identifier	r_flag_get_at		857354	0					
ANR	857596	ArgumentList	core -> flags		857354	1					
ANR	857597	Argument	core -> flags		857354	0					
ANR	857598	PtrMemberAccess	core -> flags		857354	0					
ANR	857599	Identifier	core		857354	0					
ANR	857600	Identifier	flags		857354	1					
ANR	857601	Argument	to		857354	1					
ANR	857602	Identifier	to		857354	0					
ANR	857603	Argument	false		857354	2					
ANR	857604	Identifier	false		857354	0					
ANR	857605	CompoundStatement		36:47:1150:1150	857354	1					
ANR	857606	Statement	char	8326:3:237179:237182	857354	0	True				
ANR	857607	Statement	*	8326:8:237184:237184	857354	1	True				
ANR	857608	Statement	name	8326:9:237185:237188	857354	2	True				
ANR	857609	Statement	=	8326:14:237190:237190	857354	3	True				
ANR	857610	Statement	r_str_newf	8326:16:237192:237201	857354	4	True				
ANR	857611	Statement	(	8326:27:237203:237203	857354	5	True				
ANR	857612	Statement	"""aav.0x%08"""	8326:28:237204:237214	857354	6	True				
ANR	857613	Statement	PFMT64x	8326:39:237215:237221	857354	7	True				
ANR	857614	Statement	","	8326:46:237222:237222	857354	8	True				
ANR	857615	Statement	to	8326:48:237224:237225	857354	9	True				
ANR	857616	Statement	)	8326:50:237226:237226	857354	10	True				
ANR	857617	ExpressionStatement		8326:51:237227:237227	857354	11	True				
ANR	857618	ExpressionStatement	"r_flag_set ( core -> flags , name , to , vsize )"	8327:3:237232:237273	857354	12	True				
ANR	857619	CallExpression	"r_flag_set ( core -> flags , name , to , vsize )"		857354	0					
ANR	857620	Callee	r_flag_set		857354	0					
ANR	857621	Identifier	r_flag_set		857354	0					
ANR	857622	ArgumentList	core -> flags		857354	1					
ANR	857623	Argument	core -> flags		857354	0					
ANR	857624	PtrMemberAccess	core -> flags		857354	0					
ANR	857625	Identifier	core		857354	0					
ANR	857626	Identifier	flags		857354	1					
ANR	857627	Argument	name		857354	1					
ANR	857628	Identifier	name		857354	0					
ANR	857629	Argument	to		857354	2					
ANR	857630	Identifier	to		857354	0					
ANR	857631	Argument	vsize		857354	3					
ANR	857632	Identifier	vsize		857354	0					
ANR	857633	ExpressionStatement	free ( name )	8328:3:237278:237289	857354	13	True				
ANR	857634	CallExpression	free ( name )		857354	0					
ANR	857635	Callee	free		857354	0					
ANR	857636	Identifier	free		857354	0					
ANR	857637	ArgumentList	name		857354	1					
ANR	857638	Argument	name		857354	0					
ANR	857639	Identifier	name		857354	0					
ANR	857640	ReturnType	static void		857354	1					
ANR	857641	Identifier	_CbInRangeAav		857354	2					
ANR	857642	ParameterList	"RCore * core , ut64 from , ut64 to , int vsize , bool asterisk , int count"		857354	3					
ANR	857643	Parameter	RCore * core	8290:26:235953:235963	857354	0	True				
ANR	857644	ParameterType	RCore *		857354	0					
ANR	857645	Identifier	core		857354	1					
ANR	857646	Parameter	ut64 from	8290:39:235966:235974	857354	1	True				
ANR	857647	ParameterType	ut64		857354	0					
ANR	857648	Identifier	from		857354	1					
ANR	857649	Parameter	ut64 to	8290:50:235977:235983	857354	2	True				
ANR	857650	ParameterType	ut64		857354	0					
ANR	857651	Identifier	to		857354	1					
ANR	857652	Parameter	int vsize	8290:59:235986:235994	857354	3	True				
ANR	857653	ParameterType	int		857354	0					
ANR	857654	Identifier	vsize		857354	1					
ANR	857655	Parameter	bool asterisk	8290:70:235997:236009	857354	4	True				
ANR	857656	ParameterType	bool		857354	0					
ANR	857657	Identifier	asterisk		857354	1					
ANR	857658	Parameter	int count	8290:85:236012:236020	857354	5	True				
ANR	857659	ParameterType	int		857354	0					
ANR	857660	Identifier	count		857354	1					
ANR	857661	CFGEntryNode	ENTRY		857354		True				
ANR	857662	CFGExitNode	EXIT		857354		True				
ANR	857663	Symbol	vsize		857354						
ANR	857664	Symbol	asterisk		857354						
ANR	857665	Symbol	r_anal_archinfo		857354						
ANR	857666	Symbol	* core		857354						
ANR	857667	Symbol	searchAlign		857354						
ANR	857668	Symbol	align		857354						
ANR	857669	Symbol	core -> anal		857354						
ANR	857670	Symbol	R_ANAL_REF_TYPE_NULL		857354						
ANR	857671	Symbol	core -> anal -> verbose		857354						
ANR	857672	Symbol	fcn		857354						
ANR	857673	Symbol	arch_align		857354						
ANR	857674	Symbol	vinfun		857354						
ANR	857675	Symbol	itsFine		857354						
ANR	857676	Symbol	from		857354						
ANR	857677	Symbol	archIsThumbable		857354						
ANR	857678	Symbol	* * core		857354						
ANR	857679	Symbol	core -> config		857354						
ANR	857680	Symbol	count		857354						
ANR	857681	Symbol	false		857354						
ANR	857682	Symbol	core -> flags		857354						
ANR	857683	Symbol	core		857354						
ANR	857684	Symbol	R_ANAL_ARCHINFO_ALIGN		857354						
ANR	857685	Symbol	* core -> anal		857354						
ANR	857686	Symbol	r_anal_get_fcn_in		857354						
ANR	857687	Symbol	r_config_get_i		857354						
ANR	857688	Symbol	true		857354						
ANR	857689	Symbol	name		857354						
ANR	857690	Symbol	to		857354						
ANR	857691	Symbol	r_flag_get_at		857354						
ANR	857692	Function	cmd_anal_aav	8333:0:237301:240248							
ANR	857693	FunctionDef	"cmd_anal_aav (RCore * core , const char * input)"		857692	0					
ANR	857694	CompoundStatement		8333:57:237358:240248	857692	0					
ANR	857695	Statement	define	8334:1:237361:237366	857692	0	True				
ANR	857696	Statement	seti	8334:8:237368:237371	857692	1	True				
ANR	857697	Statement	(	8334:12:237372:237372	857692	2	True				
ANR	857698	Statement	x	8334:13:237373:237373	857692	3	True				
ANR	857699	Statement	","	8334:14:237374:237374	857692	4	True				
ANR	857700	Statement	y	8334:15:237375:237375	857692	5	True				
ANR	857701	Statement	)	8334:16:237376:237376	857692	6	True				
ANR	857702	ExpressionStatement	"r_config_set_i ( core -> config , x , y )"	8334:18:237378:237412	857692	7	True				
ANR	857703	CallExpression	"r_config_set_i ( core -> config , x , y )"		857692	0					
ANR	857704	Callee	r_config_set_i		857692	0					
ANR	857705	Identifier	r_config_set_i		857692	0					
ANR	857706	ArgumentList	core -> config		857692	1					
ANR	857707	Argument	core -> config		857692	0					
ANR	857708	PtrMemberAccess	core -> config		857692	0					
ANR	857709	Identifier	core		857692	0					
ANR	857710	Identifier	config		857692	1					
ANR	857711	Argument	x		857692	1					
ANR	857712	Identifier	x		857692	0					
ANR	857713	Argument	y		857692	2					
ANR	857714	Identifier	y		857692	0					
ANR	857715	Statement	define	8335:1:237415:237420	857692	8	True				
ANR	857716	Statement	geti	8335:8:237422:237425	857692	9	True				
ANR	857717	ExpressionStatement	"( x ) r_config_get_i ( core -> config , x )"	8335:12:237426:237461	857692	10	True				
ANR	857718	CastExpression	"( x ) r_config_get_i ( core -> config , x )"		857692	0					
ANR	857719	CastTarget	x		857692	0					
ANR	857720	CallExpression	"r_config_get_i ( core -> config , x )"		857692	1					
ANR	857721	Callee	r_config_get_i		857692	0					
ANR	857722	Identifier	r_config_get_i		857692	0					
ANR	857723	ArgumentList	core -> config		857692	1					
ANR	857724	Argument	core -> config		857692	0					
ANR	857725	PtrMemberAccess	core -> config		857692	0					
ANR	857726	Identifier	core		857692	0					
ANR	857727	Identifier	config		857692	1					
ANR	857728	Argument	x		857692	1					
ANR	857729	Identifier	x		857692	0					
ANR	857730	ExpressionStatement	r_return_if_fail ( * input == 'v' )	8336:1:237464:237496	857692	11	True				
ANR	857731	CallExpression	r_return_if_fail ( * input == 'v' )		857692	0					
ANR	857732	Callee	r_return_if_fail		857692	0					
ANR	857733	Identifier	r_return_if_fail		857692	0					
ANR	857734	ArgumentList	* input == 'v'		857692	1					
ANR	857735	Argument	* input == 'v'		857692	0					
ANR	857736	EqualityExpression	* input == 'v'		857692	0		==			
ANR	857737	UnaryOperationExpression	* input		857692	0					
ANR	857738	UnaryOperator	*		857692	0					
ANR	857739	Identifier	input		857692	1					
ANR	857740	PrimaryExpression	'v'		857692	1					
ANR	857741	IdentifierDeclStatement	"ut64 o_align = geti ( ""search.align"" ) ;"	8337:1:237499:237535	857692	12	True				
ANR	857742	IdentifierDecl	"o_align = geti ( ""search.align"" )"		857692	0					
ANR	857743	IdentifierDeclType	ut64		857692	0					
ANR	857744	Identifier	o_align		857692	1					
ANR	857745	AssignmentExpression	"o_align = geti ( ""search.align"" )"		857692	2		=			
ANR	857746	Identifier	o_align		857692	0					
ANR	857747	CallExpression	"geti ( ""search.align"" )"		857692	1					
ANR	857748	Callee	geti		857692	0					
ANR	857749	Identifier	geti		857692	0					
ANR	857750	ArgumentList	"""search.align"""		857692	1					
ANR	857751	Argument	"""search.align"""		857692	0					
ANR	857752	PrimaryExpression	"""search.align"""		857692	0					
ANR	857753	IdentifierDeclStatement	"const char * analin = r_config_get ( core -> config , ""anal.in"" ) ;"	8338:1:237538:237598	857692	13	True				
ANR	857754	IdentifierDecl	"* analin = r_config_get ( core -> config , ""anal.in"" )"		857692	0					
ANR	857755	IdentifierDeclType	const char *		857692	0					
ANR	857756	Identifier	analin		857692	1					
ANR	857757	AssignmentExpression	"* analin = r_config_get ( core -> config , ""anal.in"" )"		857692	2		=			
ANR	857758	Identifier	analin		857692	0					
ANR	857759	CallExpression	"r_config_get ( core -> config , ""anal.in"" )"		857692	1					
ANR	857760	Callee	r_config_get		857692	0					
ANR	857761	Identifier	r_config_get		857692	0					
ANR	857762	ArgumentList	core -> config		857692	1					
ANR	857763	Argument	core -> config		857692	0					
ANR	857764	PtrMemberAccess	core -> config		857692	0					
ANR	857765	Identifier	core		857692	0					
ANR	857766	Identifier	config		857692	1					
ANR	857767	Argument	"""anal.in"""		857692	1					
ANR	857768	PrimaryExpression	"""anal.in"""		857692	0					
ANR	857769	IdentifierDeclStatement	char * tmp = strdup ( analin ) ;	8339:1:237601:237628	857692	14	True				
ANR	857770	IdentifierDecl	* tmp = strdup ( analin )		857692	0					
ANR	857771	IdentifierDeclType	char *		857692	0					
ANR	857772	Identifier	tmp		857692	1					
ANR	857773	AssignmentExpression	* tmp = strdup ( analin )		857692	2		=			
ANR	857774	Identifier	tmp		857692	0					
ANR	857775	CallExpression	strdup ( analin )		857692	1					
ANR	857776	Callee	strdup		857692	0					
ANR	857777	Identifier	strdup		857692	0					
ANR	857778	ArgumentList	analin		857692	1					
ANR	857779	Argument	analin		857692	0					
ANR	857780	Identifier	analin		857692	0					
ANR	857781	IdentifierDeclStatement	"bool asterisk = strchr ( input , '*' ) ;"	8340:1:237631:237666	857692	15	True				
ANR	857782	IdentifierDecl	"asterisk = strchr ( input , '*' )"		857692	0					
ANR	857783	IdentifierDeclType	bool		857692	0					
ANR	857784	Identifier	asterisk		857692	1					
ANR	857785	AssignmentExpression	"asterisk = strchr ( input , '*' )"		857692	2		=			
ANR	857786	Identifier	asterisk		857692	0					
ANR	857787	CallExpression	"strchr ( input , '*' )"		857692	1					
ANR	857788	Callee	strchr		857692	0					
ANR	857789	Identifier	strchr		857692	0					
ANR	857790	ArgumentList	input		857692	1					
ANR	857791	Argument	input		857692	0					
ANR	857792	Identifier	input		857692	0					
ANR	857793	Argument	'*'		857692	1					
ANR	857794	PrimaryExpression	'*'		857692	0					
ANR	857795	IdentifierDeclStatement	"bool is_debug = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	8341:1:237669:237727	857692	16	True				
ANR	857796	IdentifierDecl	"is_debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		857692	0					
ANR	857797	IdentifierDeclType	bool		857692	0					
ANR	857798	Identifier	is_debug		857692	1					
ANR	857799	AssignmentExpression	"is_debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		857692	2		=			
ANR	857800	Identifier	is_debug		857692	0					
ANR	857801	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		857692	1					
ANR	857802	Callee	r_config_get_i		857692	0					
ANR	857803	Identifier	r_config_get_i		857692	0					
ANR	857804	ArgumentList	core -> config		857692	1					
ANR	857805	Argument	core -> config		857692	0					
ANR	857806	PtrMemberAccess	core -> config		857692	0					
ANR	857807	Identifier	core		857692	0					
ANR	857808	Identifier	config		857692	1					
ANR	857809	Argument	"""cfg.debug"""		857692	1					
ANR	857810	PrimaryExpression	"""cfg.debug"""		857692	0					
ANR	857811	IdentifierDeclStatement	"int archAlign = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN ) ;"	8342:1:237730:237797	857692	17	True				
ANR	857812	IdentifierDecl	"archAlign = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		857692	0					
ANR	857813	IdentifierDeclType	int		857692	0					
ANR	857814	Identifier	archAlign		857692	1					
ANR	857815	AssignmentExpression	"archAlign = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		857692	2		=			
ANR	857816	Identifier	archAlign		857692	0					
ANR	857817	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		857692	1					
ANR	857818	Callee	r_anal_archinfo		857692	0					
ANR	857819	Identifier	r_anal_archinfo		857692	0					
ANR	857820	ArgumentList	core -> anal		857692	1					
ANR	857821	Argument	core -> anal		857692	0					
ANR	857822	PtrMemberAccess	core -> anal		857692	0					
ANR	857823	Identifier	core		857692	0					
ANR	857824	Identifier	anal		857692	1					
ANR	857825	Argument	R_ANAL_ARCHINFO_ALIGN		857692	1					
ANR	857826	Identifier	R_ANAL_ARCHINFO_ALIGN		857692	0					
ANR	857827	ExpressionStatement	"seti ( ""search.align"" , archAlign )"	8343:1:237800:237832	857692	18	True				
ANR	857828	CallExpression	"seti ( ""search.align"" , archAlign )"		857692	0					
ANR	857829	Callee	seti		857692	0					
ANR	857830	Identifier	seti		857692	0					
ANR	857831	ArgumentList	"""search.align"""		857692	1					
ANR	857832	Argument	"""search.align"""		857692	0					
ANR	857833	PrimaryExpression	"""search.align"""		857692	0					
ANR	857834	Argument	archAlign		857692	1					
ANR	857835	Identifier	archAlign		857692	0					
ANR	857836	ExpressionStatement	"r_config_set ( core -> config , ""anal.in"" , ""io.maps.x"" )"	8344:1:237835:237886	857692	19	True				
ANR	857837	CallExpression	"r_config_set ( core -> config , ""anal.in"" , ""io.maps.x"" )"		857692	0					
ANR	857838	Callee	r_config_set		857692	0					
ANR	857839	Identifier	r_config_set		857692	0					
ANR	857840	ArgumentList	core -> config		857692	1					
ANR	857841	Argument	core -> config		857692	0					
ANR	857842	PtrMemberAccess	core -> config		857692	0					
ANR	857843	Identifier	core		857692	0					
ANR	857844	Identifier	config		857692	1					
ANR	857845	Argument	"""anal.in"""		857692	1					
ANR	857846	PrimaryExpression	"""anal.in"""		857692	0					
ANR	857847	Argument	"""io.maps.x"""		857692	2					
ANR	857848	PrimaryExpression	"""io.maps.x"""		857692	0					
ANR	857849	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Finding xrefs in noncode section with anal.in=io.maps"" )"	8345:1:237889:237983	857692	20	True				
ANR	857850	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Finding xrefs in noncode section with anal.in=io.maps"" )"		857692	0		=			
ANR	857851	Identifier	oldstr		857692	0					
ANR	857852	CallExpression	"r_print_rowlog ( core -> print , ""Finding xrefs in noncode section with anal.in=io.maps"" )"		857692	1					
ANR	857853	Callee	r_print_rowlog		857692	0					
ANR	857854	Identifier	r_print_rowlog		857692	0					
ANR	857855	ArgumentList	core -> print		857692	1					
ANR	857856	Argument	core -> print		857692	0					
ANR	857857	PtrMemberAccess	core -> print		857692	0					
ANR	857858	Identifier	core		857692	0					
ANR	857859	Identifier	print		857692	1					
ANR	857860	Argument	"""Finding xrefs in noncode section with anal.in=io.maps"""		857692	1					
ANR	857861	PrimaryExpression	"""Finding xrefs in noncode section with anal.in=io.maps"""		857692	0					
ANR	857862	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8346:1:237986:238027	857692	21	True				
ANR	857863	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		857692	0					
ANR	857864	Callee	r_print_rowlog_done		857692	0					
ANR	857865	Identifier	r_print_rowlog_done		857692	0					
ANR	857866	ArgumentList	core -> print		857692	1					
ANR	857867	Argument	core -> print		857692	0					
ANR	857868	PtrMemberAccess	core -> print		857692	0					
ANR	857869	Identifier	core		857692	0					
ANR	857870	Identifier	print		857692	1					
ANR	857871	Argument	oldstr		857692	1					
ANR	857872	Identifier	oldstr		857692	0					
ANR	857873	IdentifierDeclStatement	int vsize = 4 ;	8348:1:238031:238044	857692	22	True				
ANR	857874	IdentifierDecl	vsize = 4		857692	0					
ANR	857875	IdentifierDeclType	int		857692	0					
ANR	857876	Identifier	vsize		857692	1					
ANR	857877	AssignmentExpression	vsize = 4		857692	2		=			
ANR	857878	Identifier	vsize		857692	0					
ANR	857879	PrimaryExpression	4		857692	1					
ANR	857880	IfStatement	if ( core -> assembler -> bits == 64 )		857692	23					
ANR	857881	Condition	core -> assembler -> bits == 64	8349:5:238066:238092	857692	0	True				
ANR	857882	EqualityExpression	core -> assembler -> bits == 64		857692	0		==			
ANR	857883	PtrMemberAccess	core -> assembler -> bits		857692	0					
ANR	857884	PtrMemberAccess	core -> assembler		857692	0					
ANR	857885	Identifier	core		857692	0					
ANR	857886	Identifier	assembler		857692	1					
ANR	857887	Identifier	bits		857692	1					
ANR	857888	PrimaryExpression	64		857692	1					
ANR	857889	CompoundStatement		17:34:736:736	857692	1					
ANR	857890	ExpressionStatement	vsize = 8	8350:2:238099:238108	857692	0	True				
ANR	857891	AssignmentExpression	vsize = 8		857692	0		=			
ANR	857892	Identifier	vsize		857692	0					
ANR	857893	PrimaryExpression	8		857692	1					
ANR	857894	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Analyze value pointers (aav)"" )"	8354:1:238124:238193	857692	24	True				
ANR	857895	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Analyze value pointers (aav)"" )"		857692	0		=			
ANR	857896	Identifier	oldstr		857692	0					
ANR	857897	CallExpression	"r_print_rowlog ( core -> print , ""Analyze value pointers (aav)"" )"		857692	1					
ANR	857898	Callee	r_print_rowlog		857692	0					
ANR	857899	Identifier	r_print_rowlog		857692	0					
ANR	857900	ArgumentList	core -> print		857692	1					
ANR	857901	Argument	core -> print		857692	0					
ANR	857902	PtrMemberAccess	core -> print		857692	0					
ANR	857903	Identifier	core		857692	0					
ANR	857904	Identifier	print		857692	1					
ANR	857905	Argument	"""Analyze value pointers (aav)"""		857692	1					
ANR	857906	PrimaryExpression	"""Analyze value pointers (aav)"""		857692	0					
ANR	857907	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8355:1:238196:238237	857692	25	True				
ANR	857908	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		857692	0					
ANR	857909	Callee	r_print_rowlog_done		857692	0					
ANR	857910	Identifier	r_print_rowlog_done		857692	0					
ANR	857911	ArgumentList	core -> print		857692	1					
ANR	857912	Argument	core -> print		857692	0					
ANR	857913	PtrMemberAccess	core -> print		857692	0					
ANR	857914	Identifier	core		857692	0					
ANR	857915	Identifier	print		857692	1					
ANR	857916	Argument	oldstr		857692	1					
ANR	857917	Identifier	oldstr		857692	0					
ANR	857918	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	8356:1:238240:238270	857692	26	True				
ANR	857919	CallExpression	"r_cons_break_push ( NULL , NULL )"		857692	0					
ANR	857920	Callee	r_cons_break_push		857692	0					
ANR	857921	Identifier	r_cons_break_push		857692	0					
ANR	857922	ArgumentList	NULL		857692	1					
ANR	857923	Argument	NULL		857692	0					
ANR	857924	Identifier	NULL		857692	0					
ANR	857925	Argument	NULL		857692	1					
ANR	857926	Identifier	NULL		857692	0					
ANR	857927	IfStatement	if ( is_debug )		857692	27					
ANR	857928	Condition	is_debug	8357:5:238277:238284	857692	0	True				
ANR	857929	Identifier	is_debug		857692	0					
ANR	857930	CompoundStatement		28:2:1024:1035	857692	1					
ANR	857931	IdentifierDeclStatement	"RList * list = r_core_get_boundaries_prot ( core , 0 , ""dbg.map"" , ""anal"" ) ;"	8358:2:238291:238360	857692	0	True				
ANR	857932	IdentifierDecl	"* list = r_core_get_boundaries_prot ( core , 0 , ""dbg.map"" , ""anal"" )"		857692	0					
ANR	857933	IdentifierDeclType	RList *		857692	0					
ANR	857934	Identifier	list		857692	1					
ANR	857935	AssignmentExpression	"* list = r_core_get_boundaries_prot ( core , 0 , ""dbg.map"" , ""anal"" )"		857692	2		=			
ANR	857936	Identifier	list		857692	0					
ANR	857937	CallExpression	"r_core_get_boundaries_prot ( core , 0 , ""dbg.map"" , ""anal"" )"		857692	1					
ANR	857938	Callee	r_core_get_boundaries_prot		857692	0					
ANR	857939	Identifier	r_core_get_boundaries_prot		857692	0					
ANR	857940	ArgumentList	core		857692	1					
ANR	857941	Argument	core		857692	0					
ANR	857942	Identifier	core		857692	0					
ANR	857943	Argument	0		857692	1					
ANR	857944	PrimaryExpression	0		857692	0					
ANR	857945	Argument	"""dbg.map"""		857692	2					
ANR	857946	PrimaryExpression	"""dbg.map"""		857692	0					
ANR	857947	Argument	"""anal"""		857692	3					
ANR	857948	PrimaryExpression	"""anal"""		857692	0					
ANR	857949	IdentifierDeclStatement	RListIter * iter ;	8359:2:238364:238379	857692	1	True				
ANR	857950	IdentifierDecl	* iter		857692	0					
ANR	857951	IdentifierDeclType	RListIter *		857692	0					
ANR	857952	Identifier	iter		857692	1					
ANR	857953	IdentifierDeclStatement	RIOMap * map ;	8360:2:238383:238394	857692	2	True				
ANR	857954	IdentifierDecl	* map		857692	0					
ANR	857955	IdentifierDeclType	RIOMap *		857692	0					
ANR	857956	Identifier	map		857692	1					
ANR	857957	IfStatement	if ( ! list )		857692	3					
ANR	857958	Condition	! list	8361:6:238402:238406	857692	0	True				
ANR	857959	UnaryOperationExpression	! list		857692	0					
ANR	857960	UnaryOperator	!		857692	0					
ANR	857961	Identifier	list		857692	1					
ANR	857962	CompoundStatement		29:13:1050:1050	857692	1					
ANR	857963	GotoStatement	goto beach ;	8362:3:238414:238424	857692	0	True				
ANR	857964	Identifier	beach		857692	0					
ANR	857965	Statement	r_list_foreach	8364:2:238432:238445	857692	4	True				
ANR	857966	Statement	(	8364:17:238447:238447	857692	5	True				
ANR	857967	Statement	list	8364:18:238448:238451	857692	6	True				
ANR	857968	Statement	","	8364:22:238452:238452	857692	7	True				
ANR	857969	Statement	iter	8364:24:238454:238457	857692	8	True				
ANR	857970	Statement	","	8364:28:238458:238458	857692	9	True				
ANR	857971	Statement	map	8364:30:238460:238462	857692	10	True				
ANR	857972	Statement	)	8364:33:238463:238463	857692	11	True				
ANR	857973	CompoundStatement		32:35:1106:1106	857692	12					
ANR	857974	IfStatement	if ( r_cons_is_breaked ( ) )		857692	0					
ANR	857975	Condition	r_cons_is_breaked ( )	8365:7:238474:238493	857692	0	True				
ANR	857976	CallExpression	r_cons_is_breaked ( )		857692	0					
ANR	857977	Callee	r_cons_is_breaked		857692	0					
ANR	857978	Identifier	r_cons_is_breaked		857692	0					
ANR	857979	ArgumentList			857692	1					
ANR	857980	CompoundStatement		33:29:1137:1137	857692	1					
ANR	857981	BreakStatement	break ;	8366:4:238502:238507	857692	0	True				
ANR	857982	Statement	oldstr	8368:3:238517:238522	857692	1	True				
ANR	857983	Statement	=	8368:10:238524:238524	857692	2	True				
ANR	857984	Statement	r_print_rowlog	8368:12:238526:238539	857692	3	True				
ANR	857985	Statement	(	8368:27:238541:238541	857692	4	True				
ANR	857986	Statement	core	8368:28:238542:238545	857692	5	True				
ANR	857987	Statement	->	8368:32:238546:238547	857692	6	True				
ANR	857988	Statement	print	8368:34:238548:238552	857692	7	True				
ANR	857989	Statement	","	8368:39:238553:238553	857692	8	True				
ANR	857990	Statement	sdb_fmt	8368:41:238555:238561	857692	9	True				
ANR	857991	Statement	(	8368:49:238563:238563	857692	10	True				
ANR	857992	Statement	"""from 0x%"""	8368:50:238564:238573	857692	11	True				
ANR	857993	Statement	PFMT64x	8368:60:238574:238580	857692	12	True				
ANR	857994	Statement	""" to 0x%"""	8368:67:238581:238589	857692	13	True				
ANR	857995	Statement	PFMT64x	8368:76:238590:238596	857692	14	True				
ANR	857996	Statement	""" (aav)"""	8368:83:238597:238604	857692	15	True				
ANR	857997	Statement	","	8368:91:238605:238605	857692	16	True				
ANR	857998	Statement	map	8368:93:238607:238609	857692	17	True				
ANR	857999	Statement	->	8368:96:238610:238611	857692	18	True				
ANR	858000	Statement	itv	8368:98:238612:238614	857692	19	True				
ANR	858001	Statement	.	8368:101:238615:238615	857692	20	True				
ANR	858002	Statement	addr	8368:102:238616:238619	857692	21	True				
ANR	858003	Statement	","	8368:106:238620:238620	857692	22	True				
ANR	858004	Statement	r_itv_end	8368:108:238622:238630	857692	23	True				
ANR	858005	Statement	(	8368:118:238632:238632	857692	24	True				
ANR	858006	Statement	map	8368:119:238633:238635	857692	25	True				
ANR	858007	Statement	->	8368:122:238636:238637	857692	26	True				
ANR	858008	Statement	itv	8368:124:238638:238640	857692	27	True				
ANR	858009	Statement	)	8368:127:238641:238641	857692	28	True				
ANR	858010	Statement	)	8368:128:238642:238642	857692	29	True				
ANR	858011	Statement	)	8368:129:238643:238643	857692	30	True				
ANR	858012	ExpressionStatement		8368:130:238644:238644	857692	31	True				
ANR	858013	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8369:3:238649:238690	857692	32	True				
ANR	858014	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		857692	0					
ANR	858015	Callee	r_print_rowlog_done		857692	0					
ANR	858016	Identifier	r_print_rowlog_done		857692	0					
ANR	858017	ArgumentList	core -> print		857692	1					
ANR	858018	Argument	core -> print		857692	0					
ANR	858019	PtrMemberAccess	core -> print		857692	0					
ANR	858020	Identifier	core		857692	0					
ANR	858021	Identifier	print		857692	1					
ANR	858022	Argument	oldstr		857692	1					
ANR	858023	Identifier	oldstr		857692	0					
ANR	858024	ExpressionStatement	"( void ) r_core_search_value_in_range ( core , map -> itv , map -> itv . addr , r_itv_end ( map -> itv ) , vsize , asterisk , _CbInRangeAav )"	8370:3:238695:238819	857692	33	True				
ANR	858025	CastExpression	"( void ) r_core_search_value_in_range ( core , map -> itv , map -> itv . addr , r_itv_end ( map -> itv ) , vsize , asterisk , _CbInRangeAav )"		857692	0					
ANR	858026	CastTarget	void		857692	0					
ANR	858027	CallExpression	"r_core_search_value_in_range ( core , map -> itv , map -> itv . addr , r_itv_end ( map -> itv ) , vsize , asterisk , _CbInRangeAav )"		857692	1					
ANR	858028	Callee	r_core_search_value_in_range		857692	0					
ANR	858029	Identifier	r_core_search_value_in_range		857692	0					
ANR	858030	ArgumentList	core		857692	1					
ANR	858031	Argument	core		857692	0					
ANR	858032	Identifier	core		857692	0					
ANR	858033	Argument	map -> itv		857692	1					
ANR	858034	PtrMemberAccess	map -> itv		857692	0					
ANR	858035	Identifier	map		857692	0					
ANR	858036	Identifier	itv		857692	1					
ANR	858037	Argument	map -> itv . addr		857692	2					
ANR	858038	MemberAccess	map -> itv . addr		857692	0					
ANR	858039	PtrMemberAccess	map -> itv		857692	0					
ANR	858040	Identifier	map		857692	0					
ANR	858041	Identifier	itv		857692	1					
ANR	858042	Identifier	addr		857692	1					
ANR	858043	Argument	r_itv_end ( map -> itv )		857692	3					
ANR	858044	CallExpression	r_itv_end ( map -> itv )		857692	0					
ANR	858045	Callee	r_itv_end		857692	0					
ANR	858046	Identifier	r_itv_end		857692	0					
ANR	858047	ArgumentList	map -> itv		857692	1					
ANR	858048	Argument	map -> itv		857692	0					
ANR	858049	PtrMemberAccess	map -> itv		857692	0					
ANR	858050	Identifier	map		857692	0					
ANR	858051	Identifier	itv		857692	1					
ANR	858052	Argument	vsize		857692	4					
ANR	858053	Identifier	vsize		857692	0					
ANR	858054	Argument	asterisk		857692	5					
ANR	858055	Identifier	asterisk		857692	0					
ANR	858056	Argument	_CbInRangeAav		857692	6					
ANR	858057	Identifier	_CbInRangeAav		857692	0					
ANR	858058	ExpressionStatement	r_list_free ( list )	8373:2:238827:238845	857692	13	True				
ANR	858059	CallExpression	r_list_free ( list )		857692	0					
ANR	858060	Callee	r_list_free		857692	0					
ANR	858061	Identifier	r_list_free		857692	0					
ANR	858062	ArgumentList	list		857692	1					
ANR	858063	Argument	list		857692	0					
ANR	858064	Identifier	list		857692	0					
ANR	858065	ElseStatement	else		857692	0					
ANR	858066	CompoundStatement		50:2:1675:1693	857692	0					
ANR	858067	IdentifierDeclStatement	"RList * list = r_core_get_boundaries_prot ( core , 0 , NULL , ""anal"" ) ;"	8375:2:238859:238923	857692	0	True				
ANR	858068	IdentifierDecl	"* list = r_core_get_boundaries_prot ( core , 0 , NULL , ""anal"" )"		857692	0					
ANR	858069	IdentifierDeclType	RList *		857692	0					
ANR	858070	Identifier	list		857692	1					
ANR	858071	AssignmentExpression	"* list = r_core_get_boundaries_prot ( core , 0 , NULL , ""anal"" )"		857692	2		=			
ANR	858072	Identifier	list		857692	0					
ANR	858073	CallExpression	"r_core_get_boundaries_prot ( core , 0 , NULL , ""anal"" )"		857692	1					
ANR	858074	Callee	r_core_get_boundaries_prot		857692	0					
ANR	858075	Identifier	r_core_get_boundaries_prot		857692	0					
ANR	858076	ArgumentList	core		857692	1					
ANR	858077	Argument	core		857692	0					
ANR	858078	Identifier	core		857692	0					
ANR	858079	Argument	0		857692	1					
ANR	858080	PrimaryExpression	0		857692	0					
ANR	858081	Argument	NULL		857692	2					
ANR	858082	Identifier	NULL		857692	0					
ANR	858083	Argument	"""anal"""		857692	3					
ANR	858084	PrimaryExpression	"""anal"""		857692	0					
ANR	858085	IfStatement	if ( ! list )		857692	1					
ANR	858086	Condition	! list	8376:6:238931:238935	857692	0	True				
ANR	858087	UnaryOperationExpression	! list		857692	0					
ANR	858088	UnaryOperator	!		857692	0					
ANR	858089	Identifier	list		857692	1					
ANR	858090	CompoundStatement		44:13:1579:1579	857692	1					
ANR	858091	GotoStatement	goto beach ;	8377:3:238943:238953	857692	0	True				
ANR	858092	Identifier	beach		857692	0					
ANR	858093	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	8379:2:238961:238984	857692	2	True				
ANR	858094	IdentifierDecl	* iter		857692	0					
ANR	858095	IdentifierDeclType	RListIter *		857692	0					
ANR	858096	Identifier	iter		857692	1					
ANR	858097	IdentifierDecl	* iter2		857692	1					
ANR	858098	IdentifierDeclType	RListIter *		857692	0					
ANR	858099	Identifier	iter2		857692	1					
ANR	858100	IdentifierDeclStatement	"RIOMap * map , * map2 ;"	8380:2:238988:239006	857692	3	True				
ANR	858101	IdentifierDecl	* map		857692	0					
ANR	858102	IdentifierDeclType	RIOMap *		857692	0					
ANR	858103	Identifier	map		857692	1					
ANR	858104	IdentifierDecl	* map2		857692	1					
ANR	858105	IdentifierDeclType	RIOMap *		857692	0					
ANR	858106	Identifier	map2		857692	1					
ANR	858107	IdentifierDeclStatement	ut64 from = UT64_MAX ;	8381:2:239010:239030	857692	4	True				
ANR	858108	IdentifierDecl	from = UT64_MAX		857692	0					
ANR	858109	IdentifierDeclType	ut64		857692	0					
ANR	858110	Identifier	from		857692	1					
ANR	858111	AssignmentExpression	from = UT64_MAX		857692	2		=			
ANR	858112	Identifier	UT64_MAX		857692	0					
ANR	858113	Identifier	UT64_MAX		857692	1					
ANR	858114	IdentifierDeclStatement	ut64 to = UT64_MAX ;	8382:2:239034:239052	857692	5	True				
ANR	858115	IdentifierDecl	to = UT64_MAX		857692	0					
ANR	858116	IdentifierDeclType	ut64		857692	0					
ANR	858117	Identifier	to		857692	1					
ANR	858118	AssignmentExpression	to = UT64_MAX		857692	2		=			
ANR	858119	Identifier	UT64_MAX		857692	0					
ANR	858120	Identifier	UT64_MAX		857692	1					
ANR	858121	Statement	r_list_foreach	8384:2:239108:239121	857692	6	True				
ANR	858122	Statement	(	8384:17:239123:239123	857692	7	True				
ANR	858123	Statement	list	8384:18:239124:239127	857692	8	True				
ANR	858124	Statement	","	8384:22:239128:239128	857692	9	True				
ANR	858125	Statement	iter2	8384:24:239130:239134	857692	10	True				
ANR	858126	Statement	","	8384:29:239135:239135	857692	11	True				
ANR	858127	Statement	map2	8384:31:239137:239140	857692	12	True				
ANR	858128	Statement	)	8384:35:239141:239141	857692	13	True				
ANR	858129	CompoundStatement		52:37:1784:1784	857692	14					
ANR	858130	IfStatement	if ( r_cons_is_breaked ( ) )		857692	0					
ANR	858131	Condition	r_cons_is_breaked ( )	8385:7:239152:239171	857692	0	True				
ANR	858132	CallExpression	r_cons_is_breaked ( )		857692	0					
ANR	858133	Callee	r_cons_is_breaked		857692	0					
ANR	858134	Identifier	r_cons_is_breaked		857692	0					
ANR	858135	ArgumentList			857692	1					
ANR	858136	CompoundStatement		53:29:1815:1815	857692	1					
ANR	858137	BreakStatement	break ;	8386:4:239180:239185	857692	0	True				
ANR	858138	ExpressionStatement	from = r_itv_begin ( map2 -> itv )	8389:3:239241:239271	857692	1	True				
ANR	858139	AssignmentExpression	from = r_itv_begin ( map2 -> itv )		857692	0		=			
ANR	858140	Identifier	from		857692	0					
ANR	858141	CallExpression	r_itv_begin ( map2 -> itv )		857692	1					
ANR	858142	Callee	r_itv_begin		857692	0					
ANR	858143	Identifier	r_itv_begin		857692	0					
ANR	858144	ArgumentList	map2 -> itv		857692	1					
ANR	858145	Argument	map2 -> itv		857692	0					
ANR	858146	PtrMemberAccess	map2 -> itv		857692	0					
ANR	858147	Identifier	map2		857692	0					
ANR	858148	Identifier	itv		857692	1					
ANR	858149	ExpressionStatement	to = r_itv_end ( map2 -> itv )	8390:3:239276:239302	857692	2	True				
ANR	858150	AssignmentExpression	to = r_itv_end ( map2 -> itv )		857692	0		=			
ANR	858151	Identifier	to		857692	0					
ANR	858152	CallExpression	r_itv_end ( map2 -> itv )		857692	1					
ANR	858153	Callee	r_itv_end		857692	0					
ANR	858154	Identifier	r_itv_end		857692	0					
ANR	858155	ArgumentList	map2 -> itv		857692	1					
ANR	858156	Argument	map2 -> itv		857692	0					
ANR	858157	PtrMemberAccess	map2 -> itv		857692	0					
ANR	858158	Identifier	map2		857692	0					
ANR	858159	Identifier	itv		857692	1					
ANR	858160	Statement	oldstr	8391:3:239307:239312	857692	3	True				
ANR	858161	Statement	=	8391:10:239314:239314	857692	4	True				
ANR	858162	Statement	r_print_rowlog	8391:12:239316:239329	857692	5	True				
ANR	858163	Statement	(	8391:27:239331:239331	857692	6	True				
ANR	858164	Statement	core	8391:28:239332:239335	857692	7	True				
ANR	858165	Statement	->	8391:32:239336:239337	857692	8	True				
ANR	858166	Statement	print	8391:34:239338:239342	857692	9	True				
ANR	858167	Statement	","	8391:39:239343:239343	857692	10	True				
ANR	858168	Statement	sdb_fmt	8391:41:239345:239351	857692	11	True				
ANR	858169	Statement	(	8391:49:239353:239353	857692	12	True				
ANR	858170	Statement	"""Value from 0x%08"""	8391:50:239354:239371	857692	13	True				
ANR	858171	Statement	PFMT64x	8391:68:239372:239378	857692	14	True				
ANR	858172	Statement	""" to 0x%08"""	8391:76:239380:239390	857692	15	True				
ANR	858173	Statement	PFMT64x	8391:88:239392:239398	857692	16	True				
ANR	858174	Statement	""" (aav)"""	8391:96:239400:239407	857692	17	True				
ANR	858175	Statement	","	8391:104:239408:239408	857692	18	True				
ANR	858176	Statement	from	8391:106:239410:239413	857692	19	True				
ANR	858177	Statement	","	8391:110:239414:239414	857692	20	True				
ANR	858178	Statement	to	8391:112:239416:239417	857692	21	True				
ANR	858179	Statement	)	8391:114:239418:239418	857692	22	True				
ANR	858180	Statement	)	8391:115:239419:239419	857692	23	True				
ANR	858181	ExpressionStatement		8391:116:239420:239420	857692	24	True				
ANR	858182	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8392:3:239425:239466	857692	25	True				
ANR	858183	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		857692	0					
ANR	858184	Callee	r_print_rowlog_done		857692	0					
ANR	858185	Identifier	r_print_rowlog_done		857692	0					
ANR	858186	ArgumentList	core -> print		857692	1					
ANR	858187	Argument	core -> print		857692	0					
ANR	858188	PtrMemberAccess	core -> print		857692	0					
ANR	858189	Identifier	core		857692	0					
ANR	858190	Identifier	print		857692	1					
ANR	858191	Argument	oldstr		857692	1					
ANR	858192	Identifier	oldstr		857692	0					
ANR	858193	Statement	r_list_foreach	8393:3:239471:239484	857692	26	True				
ANR	858194	Statement	(	8393:18:239486:239486	857692	27	True				
ANR	858195	Statement	list	8393:19:239487:239490	857692	28	True				
ANR	858196	Statement	","	8393:23:239491:239491	857692	29	True				
ANR	858197	Statement	iter	8393:25:239493:239496	857692	30	True				
ANR	858198	Statement	","	8393:29:239497:239497	857692	31	True				
ANR	858199	Statement	map	8393:31:239499:239501	857692	32	True				
ANR	858200	Statement	)	8393:34:239502:239502	857692	33	True				
ANR	858201	CompoundStatement		63:4:2183:2214	857692	34					
ANR	858202	IdentifierDeclStatement	ut64 begin = map -> itv . addr ;	8394:4:239510:239536	857692	0	True				
ANR	858203	IdentifierDecl	begin = map -> itv . addr		857692	0					
ANR	858204	IdentifierDeclType	ut64		857692	0					
ANR	858205	Identifier	begin		857692	1					
ANR	858206	AssignmentExpression	begin = map -> itv . addr		857692	2		=			
ANR	858207	Identifier	begin		857692	0					
ANR	858208	MemberAccess	map -> itv . addr		857692	1					
ANR	858209	PtrMemberAccess	map -> itv		857692	0					
ANR	858210	Identifier	map		857692	0					
ANR	858211	Identifier	itv		857692	1					
ANR	858212	Identifier	addr		857692	1					
ANR	858213	IdentifierDeclStatement	ut64 end = r_itv_end ( map -> itv ) ;	8395:4:239542:239573	857692	1	True				
ANR	858214	IdentifierDecl	end = r_itv_end ( map -> itv )		857692	0					
ANR	858215	IdentifierDeclType	ut64		857692	0					
ANR	858216	Identifier	end		857692	1					
ANR	858217	AssignmentExpression	end = r_itv_end ( map -> itv )		857692	2		=			
ANR	858218	Identifier	end		857692	0					
ANR	858219	CallExpression	r_itv_end ( map -> itv )		857692	1					
ANR	858220	Callee	r_itv_end		857692	0					
ANR	858221	Identifier	r_itv_end		857692	0					
ANR	858222	ArgumentList	map -> itv		857692	1					
ANR	858223	Argument	map -> itv		857692	0					
ANR	858224	PtrMemberAccess	map -> itv		857692	0					
ANR	858225	Identifier	map		857692	0					
ANR	858226	Identifier	itv		857692	1					
ANR	858227	IfStatement	if ( r_cons_is_breaked ( ) )		857692	2					
ANR	858228	Condition	r_cons_is_breaked ( )	8396:8:239583:239602	857692	0	True				
ANR	858229	CallExpression	r_cons_is_breaked ( )		857692	0					
ANR	858230	Callee	r_cons_is_breaked		857692	0					
ANR	858231	Identifier	r_cons_is_breaked		857692	0					
ANR	858232	ArgumentList			857692	1					
ANR	858233	CompoundStatement		64:30:2246:2246	857692	1					
ANR	858234	BreakStatement	break ;	8397:5:239612:239617	857692	0	True				
ANR	858235	IfStatement	if ( end - begin > UT32_MAX )		857692	3					
ANR	858236	Condition	end - begin > UT32_MAX	8399:8:239633:239654	857692	0	True				
ANR	858237	RelationalExpression	end - begin > UT32_MAX		857692	0		>			
ANR	858238	AdditiveExpression	end - begin		857692	0		-			
ANR	858239	Identifier	end		857692	0					
ANR	858240	Identifier	begin		857692	1					
ANR	858241	Identifier	UT32_MAX		857692	1					
ANR	858242	CompoundStatement		67:32:2298:2298	857692	1					
ANR	858243	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Skipping huge range"" )"	8400:5:239664:239724	857692	0	True				
ANR	858244	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Skipping huge range"" )"		857692	0		=			
ANR	858245	Identifier	oldstr		857692	0					
ANR	858246	CallExpression	"r_print_rowlog ( core -> print , ""Skipping huge range"" )"		857692	1					
ANR	858247	Callee	r_print_rowlog		857692	0					
ANR	858248	Identifier	r_print_rowlog		857692	0					
ANR	858249	ArgumentList	core -> print		857692	1					
ANR	858250	Argument	core -> print		857692	0					
ANR	858251	PtrMemberAccess	core -> print		857692	0					
ANR	858252	Identifier	core		857692	0					
ANR	858253	Identifier	print		857692	1					
ANR	858254	Argument	"""Skipping huge range"""		857692	1					
ANR	858255	PrimaryExpression	"""Skipping huge range"""		857692	0					
ANR	858256	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8401:5:239731:239772	857692	1	True				
ANR	858257	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		857692	0					
ANR	858258	Callee	r_print_rowlog_done		857692	0					
ANR	858259	Identifier	r_print_rowlog_done		857692	0					
ANR	858260	ArgumentList	core -> print		857692	1					
ANR	858261	Argument	core -> print		857692	0					
ANR	858262	PtrMemberAccess	core -> print		857692	0					
ANR	858263	Identifier	core		857692	0					
ANR	858264	Identifier	print		857692	1					
ANR	858265	Argument	oldstr		857692	1					
ANR	858266	Identifier	oldstr		857692	0					
ANR	858267	ContinueStatement	continue ;	8402:5:239779:239787	857692	2	True				
ANR	858268	Statement	oldstr	8404:4:239799:239804	857692	4	True				
ANR	858269	Statement	=	8404:11:239806:239806	857692	5	True				
ANR	858270	Statement	r_print_rowlog	8404:13:239808:239821	857692	6	True				
ANR	858271	Statement	(	8404:28:239823:239823	857692	7	True				
ANR	858272	Statement	core	8404:29:239824:239827	857692	8	True				
ANR	858273	Statement	->	8404:33:239828:239829	857692	9	True				
ANR	858274	Statement	print	8404:35:239830:239834	857692	10	True				
ANR	858275	Statement	","	8404:40:239835:239835	857692	11	True				
ANR	858276	Statement	sdb_fmt	8404:42:239837:239843	857692	12	True				
ANR	858277	Statement	(	8404:50:239845:239845	857692	13	True				
ANR	858278	Statement	"""0x%08"""	8404:51:239846:239852	857692	14	True				
ANR	858279	Statement	PFMT64x	8404:58:239853:239859	857692	15	True				
ANR	858280	Statement	"""-0x%08"""	8404:65:239860:239867	857692	16	True				
ANR	858281	Statement	PFMT64x	8404:73:239868:239874	857692	17	True				
ANR	858282	Statement	""" in 0x%"""	8404:80:239875:239883	857692	18	True				
ANR	858283	Statement	PFMT64x	8404:89:239884:239890	857692	19	True				
ANR	858284	Statement	"""-0x%"""	8404:96:239891:239896	857692	20	True				
ANR	858285	Statement	PFMT64x	8404:102:239897:239903	857692	21	True				
ANR	858286	Statement	""" (aav)"""	8404:109:239904:239911	857692	22	True				
ANR	858287	Statement	","	8404:117:239912:239912	857692	23	True				
ANR	858288	Statement	from	8404:119:239914:239917	857692	24	True				
ANR	858289	Statement	","	8404:123:239918:239918	857692	25	True				
ANR	858290	Statement	to	8404:125:239920:239921	857692	26	True				
ANR	858291	Statement	","	8404:127:239922:239922	857692	27	True				
ANR	858292	Statement	begin	8404:129:239924:239928	857692	28	True				
ANR	858293	Statement	","	8404:134:239929:239929	857692	29	True				
ANR	858294	Statement	end	8404:136:239931:239933	857692	30	True				
ANR	858295	Statement	)	8404:139:239934:239934	857692	31	True				
ANR	858296	Statement	)	8404:140:239935:239935	857692	32	True				
ANR	858297	ExpressionStatement		8404:141:239936:239936	857692	33	True				
ANR	858298	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8405:4:239942:239983	857692	34	True				
ANR	858299	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		857692	0					
ANR	858300	Callee	r_print_rowlog_done		857692	0					
ANR	858301	Identifier	r_print_rowlog_done		857692	0					
ANR	858302	ArgumentList	core -> print		857692	1					
ANR	858303	Argument	core -> print		857692	0					
ANR	858304	PtrMemberAccess	core -> print		857692	0					
ANR	858305	Identifier	core		857692	0					
ANR	858306	Identifier	print		857692	1					
ANR	858307	Argument	oldstr		857692	1					
ANR	858308	Identifier	oldstr		857692	0					
ANR	858309	ExpressionStatement	"( void ) r_core_search_value_in_range ( core , map -> itv , from , to , vsize , asterisk , _CbInRangeAav )"	8406:4:239989:240082	857692	35	True				
ANR	858310	CastExpression	"( void ) r_core_search_value_in_range ( core , map -> itv , from , to , vsize , asterisk , _CbInRangeAav )"		857692	0					
ANR	858311	CastTarget	void		857692	0					
ANR	858312	CallExpression	"r_core_search_value_in_range ( core , map -> itv , from , to , vsize , asterisk , _CbInRangeAav )"		857692	1					
ANR	858313	Callee	r_core_search_value_in_range		857692	0					
ANR	858314	Identifier	r_core_search_value_in_range		857692	0					
ANR	858315	ArgumentList	core		857692	1					
ANR	858316	Argument	core		857692	0					
ANR	858317	Identifier	core		857692	0					
ANR	858318	Argument	map -> itv		857692	1					
ANR	858319	PtrMemberAccess	map -> itv		857692	0					
ANR	858320	Identifier	map		857692	0					
ANR	858321	Identifier	itv		857692	1					
ANR	858322	Argument	from		857692	2					
ANR	858323	Identifier	from		857692	0					
ANR	858324	Argument	to		857692	3					
ANR	858325	Identifier	to		857692	0					
ANR	858326	Argument	vsize		857692	4					
ANR	858327	Identifier	vsize		857692	0					
ANR	858328	Argument	asterisk		857692	5					
ANR	858329	Identifier	asterisk		857692	0					
ANR	858330	Argument	_CbInRangeAav		857692	6					
ANR	858331	Identifier	_CbInRangeAav		857692	0					
ANR	858332	ExpressionStatement	r_list_free ( list )	8409:2:240096:240114	857692	15	True				
ANR	858333	CallExpression	r_list_free ( list )		857692	0					
ANR	858334	Callee	r_list_free		857692	0					
ANR	858335	Identifier	r_list_free		857692	0					
ANR	858336	ArgumentList	list		857692	1					
ANR	858337	Argument	list		857692	0					
ANR	858338	Identifier	list		857692	0					
ANR	858339	Label	beach :	8411:0:240119:240124	857692	28	True				
ANR	858340	Identifier	beach		857692	0					
ANR	858341	ExpressionStatement	r_cons_break_pop ( )	8412:1:240127:240146	857692	29	True				
ANR	858342	CallExpression	r_cons_break_pop ( )		857692	0					
ANR	858343	Callee	r_cons_break_pop		857692	0					
ANR	858344	Identifier	r_cons_break_pop		857692	0					
ANR	858345	ArgumentList			857692	1					
ANR	858346	ExpressionStatement	"r_config_set ( core -> config , ""anal.in"" , tmp )"	8414:1:240157:240200	857692	30	True				
ANR	858347	CallExpression	"r_config_set ( core -> config , ""anal.in"" , tmp )"		857692	0					
ANR	858348	Callee	r_config_set		857692	0					
ANR	858349	Identifier	r_config_set		857692	0					
ANR	858350	ArgumentList	core -> config		857692	1					
ANR	858351	Argument	core -> config		857692	0					
ANR	858352	PtrMemberAccess	core -> config		857692	0					
ANR	858353	Identifier	core		857692	0					
ANR	858354	Identifier	config		857692	1					
ANR	858355	Argument	"""anal.in"""		857692	1					
ANR	858356	PrimaryExpression	"""anal.in"""		857692	0					
ANR	858357	Argument	tmp		857692	2					
ANR	858358	Identifier	tmp		857692	0					
ANR	858359	ExpressionStatement	free ( tmp )	8415:1:240203:240213	857692	31	True				
ANR	858360	CallExpression	free ( tmp )		857692	0					
ANR	858361	Callee	free		857692	0					
ANR	858362	Identifier	free		857692	0					
ANR	858363	ArgumentList	tmp		857692	1					
ANR	858364	Argument	tmp		857692	0					
ANR	858365	Identifier	tmp		857692	0					
ANR	858366	ExpressionStatement	"seti ( ""search.align"" , o_align )"	8416:1:240216:240246	857692	32	True				
ANR	858367	CallExpression	"seti ( ""search.align"" , o_align )"		857692	0					
ANR	858368	Callee	seti		857692	0					
ANR	858369	Identifier	seti		857692	0					
ANR	858370	ArgumentList	"""search.align"""		857692	1					
ANR	858371	Argument	"""search.align"""		857692	0					
ANR	858372	PrimaryExpression	"""search.align"""		857692	0					
ANR	858373	Argument	o_align		857692	1					
ANR	858374	Identifier	o_align		857692	0					
ANR	858375	ReturnType	static void		857692	1					
ANR	858376	Identifier	cmd_anal_aav		857692	2					
ANR	858377	ParameterList	"RCore * core , const char * input"		857692	3					
ANR	858378	Parameter	RCore * core	8333:25:237326:237336	857692	0	True				
ANR	858379	ParameterType	RCore *		857692	0					
ANR	858380	Identifier	core		857692	1					
ANR	858381	Parameter	const char * input	8333:38:237339:237355	857692	1	True				
ANR	858382	ParameterType	const char *		857692	0					
ANR	858383	Identifier	input		857692	1					
ANR	858384	CFGEntryNode	ENTRY		857692		True				
ANR	858385	CFGExitNode	EXIT		857692		True				
ANR	858386	CFGErrorNode	ERROR		857692		True				
ANR	858387	Symbol	UT32_MAX		857692						
ANR	858388	Symbol	* map		857692						
ANR	858389	Symbol	asterisk		857692						
ANR	858390	Symbol	r_anal_archinfo		857692						
ANR	858391	Symbol	* input		857692						
ANR	858392	Symbol	strchr		857692						
ANR	858393	Symbol	r_itv_begin		857692						
ANR	858394	Symbol	* core -> assembler		857692						
ANR	858395	Symbol	tmp		857692						
ANR	858396	Symbol	from		857692						
ANR	858397	Symbol	oldstr		857692						
ANR	858398	Symbol	NULL		857692						
ANR	858399	Symbol	iter		857692						
ANR	858400	Symbol	list		857692						
ANR	858401	Symbol	* map2		857692						
ANR	858402	Symbol	core		857692						
ANR	858403	Symbol	input		857692						
ANR	858404	Symbol	_CbInRangeAav		857692						
ANR	858405	Symbol	archAlign		857692						
ANR	858406	Symbol	r_config_get_i		857692						
ANR	858407	Symbol	core -> print		857692						
ANR	858408	Symbol	begin		857692						
ANR	858409	Symbol	map -> itv		857692						
ANR	858410	Symbol	vsize		857692						
ANR	858411	Symbol	* core		857692						
ANR	858412	Symbol	r_config_get		857692						
ANR	858413	Symbol	core -> assembler -> bits		857692						
ANR	858414	Symbol	core -> assembler		857692						
ANR	858415	Symbol	o_align		857692						
ANR	858416	Symbol	core -> anal		857692						
ANR	858417	Symbol	r_cons_is_breaked		857692						
ANR	858418	Symbol	end		857692						
ANR	858419	Symbol	map -> itv . addr		857692						
ANR	858420	Symbol	UT64_MAX		857692						
ANR	858421	Symbol	map		857692						
ANR	858422	Symbol	* * core		857692						
ANR	858423	Symbol	core -> config		857692						
ANR	858424	Symbol	geti		857692						
ANR	858425	Symbol	map2		857692						
ANR	858426	Symbol	r_print_rowlog		857692						
ANR	858427	Symbol	iter2		857692						
ANR	858428	Symbol	is_debug		857692						
ANR	858429	Symbol	map2 -> itv		857692						
ANR	858430	Symbol	r_itv_end		857692						
ANR	858431	Symbol	R_ANAL_ARCHINFO_ALIGN		857692						
ANR	858432	Symbol	x		857692						
ANR	858433	Symbol	y		857692						
ANR	858434	Symbol	strdup		857692						
ANR	858435	Symbol	r_core_get_boundaries_prot		857692						
ANR	858436	Symbol	to		857692						
ANR	858437	Symbol	analin		857692						
ANR	858438	Function	cmd_anal_abt	8419:0:240251:242863							
ANR	858439	FunctionDef	"cmd_anal_abt (RCore * core , const char * input)"		858438	0					
ANR	858440	CompoundStatement		8419:57:240308:242863	858438	0					
ANR	858441	SwitchStatement	switch ( * input )		858438	0					
ANR	858442	Condition	* input	8420:9:240319:240324	858438	0	True				
ANR	858443	UnaryOperationExpression	* input		858438	0					
ANR	858444	UnaryOperator	*		858438	0					
ANR	858445	Identifier	input		858438	1					
ANR	858446	CompoundStatement		2:17:18:18	858438	1					
ANR	858447	Label	case 'e' :	8421:1:240330:240338	858438	0	True				
ANR	858448	CompoundStatement		12:2:254:305	858438	1					
ANR	858449	IdentifierDeclStatement	int n = 1 ;	8423:2:240346:240355	858438	0	True				
ANR	858450	IdentifierDecl	n = 1		858438	0					
ANR	858451	IdentifierDeclType	int		858438	0					
ANR	858452	Identifier	n		858438	1					
ANR	858453	AssignmentExpression	n = 1		858438	2		=			
ANR	858454	Identifier	n		858438	0					
ANR	858455	PrimaryExpression	1		858438	1					
ANR	858456	IdentifierDeclStatement	"char * p = strchr ( input + 1 , ' ' ) ;"	8424:2:240359:240392	858438	1	True				
ANR	858457	IdentifierDecl	"* p = strchr ( input + 1 , ' ' )"		858438	0					
ANR	858458	IdentifierDeclType	char *		858438	0					
ANR	858459	Identifier	p		858438	1					
ANR	858460	AssignmentExpression	"* p = strchr ( input + 1 , ' ' )"		858438	2		=			
ANR	858461	Identifier	p		858438	0					
ANR	858462	CallExpression	"strchr ( input + 1 , ' ' )"		858438	1					
ANR	858463	Callee	strchr		858438	0					
ANR	858464	Identifier	strchr		858438	0					
ANR	858465	ArgumentList	input + 1		858438	1					
ANR	858466	Argument	input + 1		858438	0					
ANR	858467	AdditiveExpression	input + 1		858438	0		+			
ANR	858468	Identifier	input		858438	0					
ANR	858469	PrimaryExpression	1		858438	1					
ANR	858470	Argument	' '		858438	1					
ANR	858471	PrimaryExpression	' '		858438	0					
ANR	858472	IfStatement	if ( ! p )		858438	2					
ANR	858473	Condition	! p	8425:6:240400:240401	858438	0	True				
ANR	858474	UnaryOperationExpression	! p		858438	0					
ANR	858475	UnaryOperator	!		858438	0					
ANR	858476	Identifier	p		858438	1					
ANR	858477	CompoundStatement		7:10:95:95	858438	1					
ANR	858478	ExpressionStatement	"eprintf ( ""Usage: abte [addr] # emulate from begining of function to the given address.\\n"" )"	8426:3:240409:240499	858438	0	True				
ANR	858479	CallExpression	"eprintf ( ""Usage: abte [addr] # emulate from begining of function to the given address.\\n"" )"		858438	0					
ANR	858480	Callee	eprintf		858438	0					
ANR	858481	Identifier	eprintf		858438	0					
ANR	858482	ArgumentList	"""Usage: abte [addr] # emulate from begining of function to the given address.\\n"""		858438	1					
ANR	858483	Argument	"""Usage: abte [addr] # emulate from begining of function to the given address.\\n"""		858438	0					
ANR	858484	PrimaryExpression	"""Usage: abte [addr] # emulate from begining of function to the given address.\\n"""		858438	0					
ANR	858485	ReturnStatement	return ;	8427:3:240504:240510	858438	1	True				
ANR	858486	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , p + 1 ) ;"	8429:2:240518:240559	858438	3	True				
ANR	858487	IdentifierDecl	"addr = r_num_math ( core -> num , p + 1 )"		858438	0					
ANR	858488	IdentifierDeclType	ut64		858438	0					
ANR	858489	Identifier	addr		858438	1					
ANR	858490	AssignmentExpression	"addr = r_num_math ( core -> num , p + 1 )"		858438	2		=			
ANR	858491	Identifier	addr		858438	0					
ANR	858492	CallExpression	"r_num_math ( core -> num , p + 1 )"		858438	1					
ANR	858493	Callee	r_num_math		858438	0					
ANR	858494	Identifier	r_num_math		858438	0					
ANR	858495	ArgumentList	core -> num		858438	1					
ANR	858496	Argument	core -> num		858438	0					
ANR	858497	PtrMemberAccess	core -> num		858438	0					
ANR	858498	Identifier	core		858438	0					
ANR	858499	Identifier	num		858438	1					
ANR	858500	Argument	p + 1		858438	1					
ANR	858501	AdditiveExpression	p + 1		858438	0		+			
ANR	858502	Identifier	p		858438	0					
ANR	858503	PrimaryExpression	1		858438	1					
ANR	858504	IdentifierDeclStatement	"RList * paths = r_core_anal_graph_to ( core , addr , n ) ;"	8430:2:240563:240614	858438	4	True				
ANR	858505	IdentifierDecl	"* paths = r_core_anal_graph_to ( core , addr , n )"		858438	0					
ANR	858506	IdentifierDeclType	RList *		858438	0					
ANR	858507	Identifier	paths		858438	1					
ANR	858508	AssignmentExpression	"* paths = r_core_anal_graph_to ( core , addr , n )"		858438	2		=			
ANR	858509	Identifier	paths		858438	0					
ANR	858510	CallExpression	"r_core_anal_graph_to ( core , addr , n )"		858438	1					
ANR	858511	Callee	r_core_anal_graph_to		858438	0					
ANR	858512	Identifier	r_core_anal_graph_to		858438	0					
ANR	858513	ArgumentList	core		858438	1					
ANR	858514	Argument	core		858438	0					
ANR	858515	Identifier	core		858438	0					
ANR	858516	Argument	addr		858438	1					
ANR	858517	Identifier	addr		858438	0					
ANR	858518	Argument	n		858438	2					
ANR	858519	Identifier	n		858438	0					
ANR	858520	IfStatement	if ( paths )		858438	5					
ANR	858521	Condition	paths	8431:6:240622:240626	858438	0	True				
ANR	858522	Identifier	paths		858438	0					
ANR	858523	CompoundStatement		17:3:381:395	858438	1					
ANR	858524	IdentifierDeclStatement	RAnalBlock * bb ;	8432:3:240634:240648	858438	0	True				
ANR	858525	IdentifierDecl	* bb		858438	0					
ANR	858526	IdentifierDeclType	RAnalBlock *		858438	0					
ANR	858527	Identifier	bb		858438	1					
ANR	858528	IdentifierDeclStatement	RList * path ;	8433:3:240653:240664	858438	1	True				
ANR	858529	IdentifierDecl	* path		858438	0					
ANR	858530	IdentifierDeclType	RList *		858438	0					
ANR	858531	Identifier	path		858438	1					
ANR	858532	IdentifierDeclStatement	RListIter * pathi ;	8434:3:240669:240685	858438	2	True				
ANR	858533	IdentifierDecl	* pathi		858438	0					
ANR	858534	IdentifierDeclType	RListIter *		858438	0					
ANR	858535	Identifier	pathi		858438	1					
ANR	858536	IdentifierDeclStatement	RListIter * bbi ;	8435:3:240690:240704	858438	3	True				
ANR	858537	IdentifierDecl	* bbi		858438	0					
ANR	858538	IdentifierDeclType	RListIter *		858438	0					
ANR	858539	Identifier	bbi		858438	1					
ANR	858540	ExpressionStatement	"r_cons_printf ( ""f orip=`dr?PC`\\n"" )"	8436:3:240709:240743	858438	4	True				
ANR	858541	CallExpression	"r_cons_printf ( ""f orip=`dr?PC`\\n"" )"		858438	0					
ANR	858542	Callee	r_cons_printf		858438	0					
ANR	858543	Identifier	r_cons_printf		858438	0					
ANR	858544	ArgumentList	"""f orip=`dr?PC`\\n"""		858438	1					
ANR	858545	Argument	"""f orip=`dr?PC`\\n"""		858438	0					
ANR	858546	PrimaryExpression	"""f orip=`dr?PC`\\n"""		858438	0					
ANR	858547	Statement	r_list_foreach	8437:3:240748:240761	858438	5	True				
ANR	858548	Statement	(	8437:18:240763:240763	858438	6	True				
ANR	858549	Statement	paths	8437:19:240764:240768	858438	7	True				
ANR	858550	Statement	","	8437:24:240769:240769	858438	8	True				
ANR	858551	Statement	pathi	8437:26:240771:240775	858438	9	True				
ANR	858552	Statement	","	8437:31:240776:240776	858438	10	True				
ANR	858553	Statement	path	8437:33:240778:240781	858438	11	True				
ANR	858554	Statement	)	8437:37:240782:240782	858438	12	True				
ANR	858555	CompoundStatement		19:39:475:475	858438	13					
ANR	858556	Statement	r_list_foreach	8438:4:240790:240803	858438	0	True				
ANR	858557	Statement	(	8438:19:240805:240805	858438	1	True				
ANR	858558	Statement	path	8438:20:240806:240809	858438	2	True				
ANR	858559	Statement	","	8438:24:240810:240810	858438	3	True				
ANR	858560	Statement	bbi	8438:26:240812:240814	858438	4	True				
ANR	858561	Statement	","	8438:29:240815:240815	858438	5	True				
ANR	858562	Statement	bb	8438:31:240817:240818	858438	6	True				
ANR	858563	Statement	)	8438:33:240819:240819	858438	7	True				
ANR	858564	CompoundStatement		20:35:512:512	858438	8					
ANR	858565	Statement	r_cons_printf	8439:5:240828:240840	858438	0	True				
ANR	858566	Statement	(	8439:19:240842:240842	858438	1	True				
ANR	858567	Statement	"""# 0x%08"""	8439:20:240843:240851	858438	2	True				
ANR	858568	Statement	PFMT64x	8439:30:240853:240859	858438	3	True				
ANR	858569	Statement	"""\\n"""	8439:38:240861:240864	858438	4	True				
ANR	858570	Statement	","	8439:42:240865:240865	858438	5	True				
ANR	858571	Statement	bb	8439:44:240867:240868	858438	6	True				
ANR	858572	Statement	->	8439:46:240869:240870	858438	7	True				
ANR	858573	Statement	addr	8439:48:240871:240874	858438	8	True				
ANR	858574	Statement	)	8439:52:240875:240875	858438	9	True				
ANR	858575	ExpressionStatement		8439:53:240876:240876	858438	10	True				
ANR	858576	IfStatement	if ( addr >= bb -> addr && addr < bb -> addr + bb -> size )		858438	11					
ANR	858577	Condition	addr >= bb -> addr && addr < bb -> addr + bb -> size	8440:9:240887:240932	858438	0	True				
ANR	858578	AndExpression	addr >= bb -> addr && addr < bb -> addr + bb -> size		858438	0		&&			
ANR	858579	RelationalExpression	addr >= bb -> addr		858438	0		>=			
ANR	858580	Identifier	addr		858438	0					
ANR	858581	PtrMemberAccess	bb -> addr		858438	1					
ANR	858582	Identifier	bb		858438	0					
ANR	858583	Identifier	addr		858438	1					
ANR	858584	RelationalExpression	addr < bb -> addr + bb -> size		858438	1		<			
ANR	858585	Identifier	addr		858438	0					
ANR	858586	AdditiveExpression	bb -> addr + bb -> size		858438	1		+			
ANR	858587	PtrMemberAccess	bb -> addr		858438	0					
ANR	858588	Identifier	bb		858438	0					
ANR	858589	Identifier	addr		858438	1					
ANR	858590	PtrMemberAccess	bb -> size		858438	1					
ANR	858591	Identifier	bb		858438	0					
ANR	858592	Identifier	size		858438	1					
ANR	858593	CompoundStatement		22:57:626:626	858438	1					
ANR	858594	Statement	r_cons_printf	8441:6:240943:240955	858438	0	True				
ANR	858595	Statement	(	8441:20:240957:240957	858438	1	True				
ANR	858596	Statement	"""aepc 0x%08"""	8441:21:240958:240969	858438	2	True				
ANR	858597	Statement	PFMT64x	8441:33:240970:240976	858438	3	True				
ANR	858598	Statement	"""\\n"""	8441:40:240977:240980	858438	4	True				
ANR	858599	Statement	","	8441:44:240981:240981	858438	5	True				
ANR	858600	Statement	bb	8441:46:240983:240984	858438	6	True				
ANR	858601	Statement	->	8441:48:240985:240986	858438	7	True				
ANR	858602	Statement	addr	8441:50:240987:240990	858438	8	True				
ANR	858603	Statement	)	8441:54:240991:240991	858438	9	True				
ANR	858604	ExpressionStatement		8441:55:240992:240992	858438	10	True				
ANR	858605	Statement	r_cons_printf	8442:6:241000:241012	858438	11	True				
ANR	858606	Statement	(	8442:20:241014:241014	858438	12	True				
ANR	858607	Statement	"""aesou 0x%08"""	8442:21:241015:241027	858438	13	True				
ANR	858608	Statement	PFMT64x	8442:34:241028:241034	858438	14	True				
ANR	858609	Statement	"""\\n"""	8442:41:241035:241038	858438	15	True				
ANR	858610	Statement	","	8442:45:241039:241039	858438	16	True				
ANR	858611	Statement	addr	8442:47:241041:241044	858438	17	True				
ANR	858612	Statement	)	8442:51:241045:241045	858438	18	True				
ANR	858613	ExpressionStatement		8442:52:241046:241046	858438	19	True				
ANR	858614	ElseStatement	else		858438	0					
ANR	858615	CompoundStatement		25:12:751:751	858438	0					
ANR	858616	Statement	r_cons_printf	8444:6:241068:241080	858438	0	True				
ANR	858617	Statement	(	8444:20:241082:241082	858438	1	True				
ANR	858618	Statement	"""aepc 0x%08"""	8444:21:241083:241094	858438	2	True				
ANR	858619	Statement	PFMT64x	8444:33:241095:241101	858438	3	True				
ANR	858620	Statement	"""\\n"""	8444:40:241102:241105	858438	4	True				
ANR	858621	Statement	","	8444:44:241106:241106	858438	5	True				
ANR	858622	Statement	bb	8444:46:241108:241109	858438	6	True				
ANR	858623	Statement	->	8444:48:241110:241111	858438	7	True				
ANR	858624	Statement	addr	8444:50:241112:241115	858438	8	True				
ANR	858625	Statement	)	8444:54:241116:241116	858438	9	True				
ANR	858626	ExpressionStatement		8444:55:241117:241117	858438	10	True				
ANR	858627	Statement	r_cons_printf	8445:6:241125:241137	858438	11	True				
ANR	858628	Statement	(	8445:20:241139:241139	858438	12	True				
ANR	858629	Statement	"""aesou 0x%08"""	8445:21:241140:241152	858438	13	True				
ANR	858630	Statement	PFMT64x	8445:34:241153:241159	858438	14	True				
ANR	858631	Statement	"""\\n"""	8445:41:241160:241163	858438	15	True				
ANR	858632	Statement	","	8445:45:241164:241164	858438	16	True				
ANR	858633	Statement	bb	8445:47:241166:241167	858438	17	True				
ANR	858634	Statement	->	8445:49:241168:241169	858438	18	True				
ANR	858635	Statement	addr	8445:51:241170:241173	858438	19	True				
ANR	858636	Statement	+	8445:56:241175:241175	858438	20	True				
ANR	858637	Statement	bb	8445:58:241177:241178	858438	21	True				
ANR	858638	Statement	->	8445:60:241179:241180	858438	22	True				
ANR	858639	Statement	size	8445:62:241181:241184	858438	23	True				
ANR	858640	Statement	)	8445:66:241185:241185	858438	24	True				
ANR	858641	ExpressionStatement		8445:67:241186:241186	858438	25	True				
ANR	858642	ExpressionStatement	r_cons_newline ( )	8448:4:241205:241222	858438	9	True				
ANR	858643	CallExpression	r_cons_newline ( )		858438	0					
ANR	858644	Callee	r_cons_newline		858438	0					
ANR	858645	Identifier	r_cons_newline		858438	0					
ANR	858646	ArgumentList			858438	1					
ANR	858647	ExpressionStatement	r_list_purge ( path )	8449:4:241228:241247	858438	10	True				
ANR	858648	CallExpression	r_list_purge ( path )		858438	0					
ANR	858649	Callee	r_list_purge		858438	0					
ANR	858650	Identifier	r_list_purge		858438	0					
ANR	858651	ArgumentList	path		858438	1					
ANR	858652	Argument	path		858438	0					
ANR	858653	Identifier	path		858438	0					
ANR	858654	ExpressionStatement	free ( path )	8450:4:241253:241264	858438	11	True				
ANR	858655	CallExpression	free ( path )		858438	0					
ANR	858656	Callee	free		858438	0					
ANR	858657	Identifier	free		858438	0					
ANR	858658	ArgumentList	path		858438	1					
ANR	858659	Argument	path		858438	0					
ANR	858660	Identifier	path		858438	0					
ANR	858661	ExpressionStatement	r_list_purge ( paths )	8452:3:241274:241294	858438	14	True				
ANR	858662	CallExpression	r_list_purge ( paths )		858438	0					
ANR	858663	Callee	r_list_purge		858438	0					
ANR	858664	Identifier	r_list_purge		858438	0					
ANR	858665	ArgumentList	paths		858438	1					
ANR	858666	Argument	paths		858438	0					
ANR	858667	Identifier	paths		858438	0					
ANR	858668	ExpressionStatement	"r_cons_printf ( ""aepc orip\\n"" )"	8453:3:241299:241328	858438	15	True				
ANR	858669	CallExpression	"r_cons_printf ( ""aepc orip\\n"" )"		858438	0					
ANR	858670	Callee	r_cons_printf		858438	0					
ANR	858671	Identifier	r_cons_printf		858438	0					
ANR	858672	ArgumentList	"""aepc orip\\n"""		858438	1					
ANR	858673	Argument	"""aepc orip\\n"""		858438	0					
ANR	858674	PrimaryExpression	"""aepc orip\\n"""		858438	0					
ANR	858675	ExpressionStatement	free ( paths )	8454:3:241333:241345	858438	16	True				
ANR	858676	CallExpression	free ( paths )		858438	0					
ANR	858677	Callee	free		858438	0					
ANR	858678	Identifier	free		858438	0					
ANR	858679	ArgumentList	paths		858438	1					
ANR	858680	Argument	paths		858438	0					
ANR	858681	Identifier	paths		858438	0					
ANR	858682	BreakStatement	break ;	8457:2:241357:241362	858438	2	True				
ANR	858683	Label	case '?' :	8458:1:241365:241373	858438	3	True				
ANR	858684	ExpressionStatement	"r_core_cmd_help ( core , help_msg_abt )"	8459:2:241377:241413	858438	4	True				
ANR	858685	CallExpression	"r_core_cmd_help ( core , help_msg_abt )"		858438	0					
ANR	858686	Callee	r_core_cmd_help		858438	0					
ANR	858687	Identifier	r_core_cmd_help		858438	0					
ANR	858688	ArgumentList	core		858438	1					
ANR	858689	Argument	core		858438	0					
ANR	858690	Identifier	core		858438	0					
ANR	858691	Argument	help_msg_abt		858438	1					
ANR	858692	Identifier	help_msg_abt		858438	0					
ANR	858693	BreakStatement	break ;	8460:2:241417:241422	858438	5	True				
ANR	858694	Label	case 'j' :	8461:1:241425:241433	858438	6	True				
ANR	858695	CompoundStatement		62:2:1458:1509	858438	7					
ANR	858696	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	8462:2:241439:241457	858438	0	True				
ANR	858697	IdentifierDecl	* pj = pj_new ( )		858438	0					
ANR	858698	IdentifierDeclType	PJ *		858438	0					
ANR	858699	Identifier	pj		858438	1					
ANR	858700	AssignmentExpression	* pj = pj_new ( )		858438	2		=			
ANR	858701	Identifier	pj		858438	0					
ANR	858702	CallExpression	pj_new ( )		858438	1					
ANR	858703	Callee	pj_new		858438	0					
ANR	858704	Identifier	pj_new		858438	0					
ANR	858705	ArgumentList			858438	1					
ANR	858706	IfStatement	if ( ! pj )		858438	1					
ANR	858707	Condition	! pj	8463:6:241465:241467	858438	0	True				
ANR	858708	UnaryOperationExpression	! pj		858438	0					
ANR	858709	UnaryOperator	!		858438	0					
ANR	858710	Identifier	pj		858438	1					
ANR	858711	CompoundStatement		45:11:1161:1161	858438	1					
ANR	858712	ReturnStatement	return ;	8464:3:241475:241481	858438	0	True				
ANR	858713	IdentifierDeclStatement	ut64 addr = core -> offset ;	8466:2:241489:241513	858438	2	True				
ANR	858714	IdentifierDecl	addr = core -> offset		858438	0					
ANR	858715	IdentifierDeclType	ut64		858438	0					
ANR	858716	Identifier	addr		858438	1					
ANR	858717	AssignmentExpression	addr = core -> offset		858438	2		=			
ANR	858718	Identifier	addr		858438	0					
ANR	858719	PtrMemberAccess	core -> offset		858438	1					
ANR	858720	Identifier	core		858438	0					
ANR	858721	Identifier	offset		858438	1					
ANR	858722	IdentifierDeclStatement	char * p ;	8467:2:241517:241524	858438	3	True				
ANR	858723	IdentifierDecl	* p		858438	0					
ANR	858724	IdentifierDeclType	char *		858438	0					
ANR	858725	Identifier	p		858438	1					
ANR	858726	IdentifierDeclStatement	int n = 1 ;	8468:2:241528:241537	858438	4	True				
ANR	858727	IdentifierDecl	n = 1		858438	0					
ANR	858728	IdentifierDeclType	int		858438	0					
ANR	858729	Identifier	n		858438	1					
ANR	858730	AssignmentExpression	n = 1		858438	2		=			
ANR	858731	Identifier	n		858438	0					
ANR	858732	PrimaryExpression	1		858438	1					
ANR	858733	ExpressionStatement	input ++	8469:2:241541:241548	858438	5	True				
ANR	858734	PostIncDecOperationExpression	input ++		858438	0					
ANR	858735	Identifier	input		858438	0					
ANR	858736	IncDec	++		858438	1					
ANR	858737	IfStatement	if ( * input )		858438	6					
ANR	858738	Condition	* input	8470:6:241556:241561	858438	0	True				
ANR	858739	UnaryOperationExpression	* input		858438	0					
ANR	858740	UnaryOperator	*		858438	0					
ANR	858741	Identifier	input		858438	1					
ANR	858742	CompoundStatement		53:3:1260:1286	858438	1					
ANR	858743	IdentifierDeclStatement	char * tmp = strdup ( input ) ;	8471:3:241569:241595	858438	0	True				
ANR	858744	IdentifierDecl	* tmp = strdup ( input )		858438	0					
ANR	858745	IdentifierDeclType	char *		858438	0					
ANR	858746	Identifier	tmp		858438	1					
ANR	858747	AssignmentExpression	* tmp = strdup ( input )		858438	2		=			
ANR	858748	Identifier	tmp		858438	0					
ANR	858749	CallExpression	strdup ( input )		858438	1					
ANR	858750	Callee	strdup		858438	0					
ANR	858751	Identifier	strdup		858438	0					
ANR	858752	ArgumentList	input		858438	1					
ANR	858753	Argument	input		858438	0					
ANR	858754	Identifier	input		858438	0					
ANR	858755	ExpressionStatement	"p = strchr ( tmp + 1 , ' ' )"	8472:3:241600:241625	858438	1	True				
ANR	858756	AssignmentExpression	"p = strchr ( tmp + 1 , ' ' )"		858438	0		=			
ANR	858757	Identifier	p		858438	0					
ANR	858758	CallExpression	"strchr ( tmp + 1 , ' ' )"		858438	1					
ANR	858759	Callee	strchr		858438	0					
ANR	858760	Identifier	strchr		858438	0					
ANR	858761	ArgumentList	tmp + 1		858438	1					
ANR	858762	Argument	tmp + 1		858438	0					
ANR	858763	AdditiveExpression	tmp + 1		858438	0		+			
ANR	858764	Identifier	tmp		858438	0					
ANR	858765	PrimaryExpression	1		858438	1					
ANR	858766	Argument	' '		858438	1					
ANR	858767	PrimaryExpression	' '		858438	0					
ANR	858768	IfStatement	if ( p )		858438	2					
ANR	858769	Condition	p	8473:7:241634:241634	858438	0	True				
ANR	858770	Identifier	p		858438	0					
ANR	858771	CompoundStatement		55:10:1328:1328	858438	1					
ANR	858772	ExpressionStatement	* p ++ = '\\0'	8474:4:241643:241654	858438	0	True				
ANR	858773	AssignmentExpression	* p ++ = '\\0'		858438	0		=			
ANR	858774	UnaryOperationExpression	* p ++		858438	0					
ANR	858775	UnaryOperator	*		858438	0					
ANR	858776	PostIncDecOperationExpression	p ++		858438	1					
ANR	858777	Identifier	p		858438	0					
ANR	858778	IncDec	++		858438	1					
ANR	858779	PrimaryExpression	'\\0'		858438	1					
ANR	858780	ExpressionStatement	"n = * p ? r_num_math ( core -> num , p ) : 1"	8475:4:241660:241696	858438	1	True				
ANR	858781	AssignmentExpression	"n = * p ? r_num_math ( core -> num , p ) : 1"		858438	0		=			
ANR	858782	Identifier	n		858438	0					
ANR	858783	ConditionalExpression	"* p ? r_num_math ( core -> num , p ) : 1"		858438	1					
ANR	858784	Condition	* p		858438	0					
ANR	858785	UnaryOperationExpression	* p		858438	0					
ANR	858786	UnaryOperator	*		858438	0					
ANR	858787	Identifier	p		858438	1					
ANR	858788	CallExpression	"r_num_math ( core -> num , p )"		858438	1					
ANR	858789	Callee	r_num_math		858438	0					
ANR	858790	Identifier	r_num_math		858438	0					
ANR	858791	ArgumentList	core -> num		858438	1					
ANR	858792	Argument	core -> num		858438	0					
ANR	858793	PtrMemberAccess	core -> num		858438	0					
ANR	858794	Identifier	core		858438	0					
ANR	858795	Identifier	num		858438	1					
ANR	858796	Argument	p		858438	1					
ANR	858797	Identifier	p		858438	0					
ANR	858798	PrimaryExpression	1		858438	2					
ANR	858799	ExpressionStatement	"addr = r_num_math ( core -> num , tmp + 1 )"	8477:3:241706:241744	858438	3	True				
ANR	858800	AssignmentExpression	"addr = r_num_math ( core -> num , tmp + 1 )"		858438	0		=			
ANR	858801	Identifier	addr		858438	0					
ANR	858802	CallExpression	"r_num_math ( core -> num , tmp + 1 )"		858438	1					
ANR	858803	Callee	r_num_math		858438	0					
ANR	858804	Identifier	r_num_math		858438	0					
ANR	858805	ArgumentList	core -> num		858438	1					
ANR	858806	Argument	core -> num		858438	0					
ANR	858807	PtrMemberAccess	core -> num		858438	0					
ANR	858808	Identifier	core		858438	0					
ANR	858809	Identifier	num		858438	1					
ANR	858810	Argument	tmp + 1		858438	1					
ANR	858811	AdditiveExpression	tmp + 1		858438	0		+			
ANR	858812	Identifier	tmp		858438	0					
ANR	858813	PrimaryExpression	1		858438	1					
ANR	858814	ExpressionStatement	free ( tmp )	8478:3:241749:241759	858438	4	True				
ANR	858815	CallExpression	free ( tmp )		858438	0					
ANR	858816	Callee	free		858438	0					
ANR	858817	Identifier	free		858438	0					
ANR	858818	ArgumentList	tmp		858438	1					
ANR	858819	Argument	tmp		858438	0					
ANR	858820	Identifier	tmp		858438	0					
ANR	858821	IdentifierDeclStatement	"RList * paths = r_core_anal_graph_to ( core , addr , n ) ;"	8480:2:241767:241818	858438	7	True				
ANR	858822	IdentifierDecl	"* paths = r_core_anal_graph_to ( core , addr , n )"		858438	0					
ANR	858823	IdentifierDeclType	RList *		858438	0					
ANR	858824	Identifier	paths		858438	1					
ANR	858825	AssignmentExpression	"* paths = r_core_anal_graph_to ( core , addr , n )"		858438	2		=			
ANR	858826	Identifier	paths		858438	0					
ANR	858827	CallExpression	"r_core_anal_graph_to ( core , addr , n )"		858438	1					
ANR	858828	Callee	r_core_anal_graph_to		858438	0					
ANR	858829	Identifier	r_core_anal_graph_to		858438	0					
ANR	858830	ArgumentList	core		858438	1					
ANR	858831	Argument	core		858438	0					
ANR	858832	Identifier	core		858438	0					
ANR	858833	Argument	addr		858438	1					
ANR	858834	Identifier	addr		858438	0					
ANR	858835	Argument	n		858438	2					
ANR	858836	Identifier	n		858438	0					
ANR	858837	IfStatement	if ( paths )		858438	8					
ANR	858838	Condition	paths	8481:6:241826:241830	858438	0	True				
ANR	858839	Identifier	paths		858438	0					
ANR	858840	CompoundStatement		67:3:1585:1599	858438	1					
ANR	858841	IdentifierDeclStatement	RAnalBlock * bb ;	8482:3:241838:241852	858438	0	True				
ANR	858842	IdentifierDecl	* bb		858438	0					
ANR	858843	IdentifierDeclType	RAnalBlock *		858438	0					
ANR	858844	Identifier	bb		858438	1					
ANR	858845	IdentifierDeclStatement	RList * path ;	8483:3:241857:241868	858438	1	True				
ANR	858846	IdentifierDecl	* path		858438	0					
ANR	858847	IdentifierDeclType	RList *		858438	0					
ANR	858848	Identifier	path		858438	1					
ANR	858849	IdentifierDeclStatement	RListIter * pathi ;	8484:3:241873:241889	858438	2	True				
ANR	858850	IdentifierDecl	* pathi		858438	0					
ANR	858851	IdentifierDeclType	RListIter *		858438	0					
ANR	858852	Identifier	pathi		858438	1					
ANR	858853	IdentifierDeclStatement	RListIter * bbi ;	8485:3:241894:241908	858438	3	True				
ANR	858854	IdentifierDecl	* bbi		858438	0					
ANR	858855	IdentifierDeclType	RListIter *		858438	0					
ANR	858856	Identifier	bbi		858438	1					
ANR	858857	ExpressionStatement	pj_a ( pj )	8486:3:241913:241922	858438	4	True				
ANR	858858	CallExpression	pj_a ( pj )		858438	0					
ANR	858859	Callee	pj_a		858438	0					
ANR	858860	Identifier	pj_a		858438	0					
ANR	858861	ArgumentList	pj		858438	1					
ANR	858862	Argument	pj		858438	0					
ANR	858863	Identifier	pj		858438	0					
ANR	858864	Statement	r_list_foreach	8487:3:241927:241940	858438	5	True				
ANR	858865	Statement	(	8487:18:241942:241942	858438	6	True				
ANR	858866	Statement	paths	8487:19:241943:241947	858438	7	True				
ANR	858867	Statement	","	8487:24:241948:241948	858438	8	True				
ANR	858868	Statement	pathi	8487:26:241950:241954	858438	9	True				
ANR	858869	Statement	","	8487:31:241955:241955	858438	10	True				
ANR	858870	Statement	path	8487:33:241957:241960	858438	11	True				
ANR	858871	Statement	)	8487:37:241961:241961	858438	12	True				
ANR	858872	CompoundStatement		69:39:1654:1654	858438	13					
ANR	858873	ExpressionStatement	pj_a ( pj )	8488:4:241969:241978	858438	0	True				
ANR	858874	CallExpression	pj_a ( pj )		858438	0					
ANR	858875	Callee	pj_a		858438	0					
ANR	858876	Identifier	pj_a		858438	0					
ANR	858877	ArgumentList	pj		858438	1					
ANR	858878	Argument	pj		858438	0					
ANR	858879	Identifier	pj		858438	0					
ANR	858880	Statement	r_list_foreach	8489:4:241984:241997	858438	1	True				
ANR	858881	Statement	(	8489:19:241999:241999	858438	2	True				
ANR	858882	Statement	path	8489:20:242000:242003	858438	3	True				
ANR	858883	Statement	","	8489:24:242004:242004	858438	4	True				
ANR	858884	Statement	bbi	8489:26:242006:242008	858438	5	True				
ANR	858885	Statement	","	8489:29:242009:242009	858438	6	True				
ANR	858886	Statement	bb	8489:31:242011:242012	858438	7	True				
ANR	858887	Statement	)	8489:33:242013:242013	858438	8	True				
ANR	858888	CompoundStatement		71:35:1706:1706	858438	9					
ANR	858889	ExpressionStatement	"pj_n ( pj , bb -> addr )"	8490:5:242022:242041	858438	0	True				
ANR	858890	CallExpression	"pj_n ( pj , bb -> addr )"		858438	0					
ANR	858891	Callee	pj_n		858438	0					
ANR	858892	Identifier	pj_n		858438	0					
ANR	858893	ArgumentList	pj		858438	1					
ANR	858894	Argument	pj		858438	0					
ANR	858895	Identifier	pj		858438	0					
ANR	858896	Argument	bb -> addr		858438	1					
ANR	858897	PtrMemberAccess	bb -> addr		858438	0					
ANR	858898	Identifier	bb		858438	0					
ANR	858899	Identifier	addr		858438	1					
ANR	858900	ExpressionStatement	pj_end ( pj )	8492:4:242053:242064	858438	10	True				
ANR	858901	CallExpression	pj_end ( pj )		858438	0					
ANR	858902	Callee	pj_end		858438	0					
ANR	858903	Identifier	pj_end		858438	0					
ANR	858904	ArgumentList	pj		858438	1					
ANR	858905	Argument	pj		858438	0					
ANR	858906	Identifier	pj		858438	0					
ANR	858907	ExpressionStatement	r_list_purge ( path )	8493:4:242070:242089	858438	11	True				
ANR	858908	CallExpression	r_list_purge ( path )		858438	0					
ANR	858909	Callee	r_list_purge		858438	0					
ANR	858910	Identifier	r_list_purge		858438	0					
ANR	858911	ArgumentList	path		858438	1					
ANR	858912	Argument	path		858438	0					
ANR	858913	Identifier	path		858438	0					
ANR	858914	ExpressionStatement	free ( path )	8494:4:242095:242106	858438	12	True				
ANR	858915	CallExpression	free ( path )		858438	0					
ANR	858916	Callee	free		858438	0					
ANR	858917	Identifier	free		858438	0					
ANR	858918	ArgumentList	path		858438	1					
ANR	858919	Argument	path		858438	0					
ANR	858920	Identifier	path		858438	0					
ANR	858921	ExpressionStatement	pj_end ( pj )	8496:3:242116:242127	858438	14	True				
ANR	858922	CallExpression	pj_end ( pj )		858438	0					
ANR	858923	Callee	pj_end		858438	0					
ANR	858924	Identifier	pj_end		858438	0					
ANR	858925	ArgumentList	pj		858438	1					
ANR	858926	Argument	pj		858438	0					
ANR	858927	Identifier	pj		858438	0					
ANR	858928	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	8497:3:242132:242163	858438	15	True				
ANR	858929	CallExpression	r_cons_println ( pj_string ( pj ) )		858438	0					
ANR	858930	Callee	r_cons_println		858438	0					
ANR	858931	Identifier	r_cons_println		858438	0					
ANR	858932	ArgumentList	pj_string ( pj )		858438	1					
ANR	858933	Argument	pj_string ( pj )		858438	0					
ANR	858934	CallExpression	pj_string ( pj )		858438	0					
ANR	858935	Callee	pj_string		858438	0					
ANR	858936	Identifier	pj_string		858438	0					
ANR	858937	ArgumentList	pj		858438	1					
ANR	858938	Argument	pj		858438	0					
ANR	858939	Identifier	pj		858438	0					
ANR	858940	ExpressionStatement	pj_free ( pj )	8498:3:242168:242180	858438	16	True				
ANR	858941	CallExpression	pj_free ( pj )		858438	0					
ANR	858942	Callee	pj_free		858438	0					
ANR	858943	Identifier	pj_free		858438	0					
ANR	858944	ArgumentList	pj		858438	1					
ANR	858945	Argument	pj		858438	0					
ANR	858946	Identifier	pj		858438	0					
ANR	858947	ExpressionStatement	r_list_purge ( paths )	8499:3:242185:242205	858438	17	True				
ANR	858948	CallExpression	r_list_purge ( paths )		858438	0					
ANR	858949	Callee	r_list_purge		858438	0					
ANR	858950	Identifier	r_list_purge		858438	0					
ANR	858951	ArgumentList	paths		858438	1					
ANR	858952	Argument	paths		858438	0					
ANR	858953	Identifier	paths		858438	0					
ANR	858954	ExpressionStatement	free ( paths )	8500:3:242210:242222	858438	18	True				
ANR	858955	CallExpression	free ( paths )		858438	0					
ANR	858956	Callee	free		858438	0					
ANR	858957	Identifier	free		858438	0					
ANR	858958	ArgumentList	paths		858438	1					
ANR	858959	Argument	paths		858438	0					
ANR	858960	Identifier	paths		858438	0					
ANR	858961	BreakStatement	break ;	8503:1:242232:242237	858438	8	True				
ANR	858962	Label	case ' ' :	8504:1:242240:242248	858438	9	True				
ANR	858963	CompoundStatement		96:2:2131:2182	858438	10					
ANR	858964	IdentifierDeclStatement	ut64 addr ;	8505:2:242254:242263	858438	0	True				
ANR	858965	IdentifierDecl	addr		858438	0					
ANR	858966	IdentifierDeclType	ut64		858438	0					
ANR	858967	Identifier	addr		858438	1					
ANR	858968	IdentifierDeclStatement	char * p ;	8506:2:242267:242274	858438	1	True				
ANR	858969	IdentifierDecl	* p		858438	0					
ANR	858970	IdentifierDeclType	char *		858438	0					
ANR	858971	Identifier	p		858438	1					
ANR	858972	IdentifierDeclStatement	int n = 1 ;	8507:2:242278:242287	858438	2	True				
ANR	858973	IdentifierDecl	n = 1		858438	0					
ANR	858974	IdentifierDeclType	int		858438	0					
ANR	858975	Identifier	n		858438	1					
ANR	858976	AssignmentExpression	n = 1		858438	2		=			
ANR	858977	Identifier	n		858438	0					
ANR	858978	PrimaryExpression	1		858438	1					
ANR	858979	ExpressionStatement	"p = strchr ( input + 1 , ' ' )"	8508:2:242291:242318	858438	3	True				
ANR	858980	AssignmentExpression	"p = strchr ( input + 1 , ' ' )"		858438	0		=			
ANR	858981	Identifier	p		858438	0					
ANR	858982	CallExpression	"strchr ( input + 1 , ' ' )"		858438	1					
ANR	858983	Callee	strchr		858438	0					
ANR	858984	Identifier	strchr		858438	0					
ANR	858985	ArgumentList	input + 1		858438	1					
ANR	858986	Argument	input + 1		858438	0					
ANR	858987	AdditiveExpression	input + 1		858438	0		+			
ANR	858988	Identifier	input		858438	0					
ANR	858989	PrimaryExpression	1		858438	1					
ANR	858990	Argument	' '		858438	1					
ANR	858991	PrimaryExpression	' '		858438	0					
ANR	858992	IfStatement	if ( p )		858438	4					
ANR	858993	Condition	p	8509:6:242326:242326	858438	0	True				
ANR	858994	Identifier	p		858438	0					
ANR	858995	CompoundStatement		91:9:2020:2020	858438	1					
ANR	858996	ExpressionStatement	* p = '\\0'	8510:3:242334:242343	858438	0	True				
ANR	858997	AssignmentExpression	* p = '\\0'		858438	0		=			
ANR	858998	UnaryOperationExpression	* p		858438	0					
ANR	858999	UnaryOperator	*		858438	0					
ANR	859000	Identifier	p		858438	1					
ANR	859001	PrimaryExpression	'\\0'		858438	1					
ANR	859002	ExpressionStatement	"n = * ( ++ p ) ? r_num_math ( core -> num , p ) : 1"	8511:3:242348:242388	858438	1	True				
ANR	859003	AssignmentExpression	"n = * ( ++ p ) ? r_num_math ( core -> num , p ) : 1"		858438	0		=			
ANR	859004	Identifier	n		858438	0					
ANR	859005	ConditionalExpression	"* ( ++ p ) ? r_num_math ( core -> num , p ) : 1"		858438	1					
ANR	859006	Condition	* ( ++ p )		858438	0					
ANR	859007	UnaryOperationExpression	* ( ++ p )		858438	0					
ANR	859008	UnaryOperator	*		858438	0					
ANR	859009	UnaryExpression	++ p		858438	1					
ANR	859010	IncDec	++		858438	0					
ANR	859011	Identifier	p		858438	1					
ANR	859012	CallExpression	"r_num_math ( core -> num , p )"		858438	1					
ANR	859013	Callee	r_num_math		858438	0					
ANR	859014	Identifier	r_num_math		858438	0					
ANR	859015	ArgumentList	core -> num		858438	1					
ANR	859016	Argument	core -> num		858438	0					
ANR	859017	PtrMemberAccess	core -> num		858438	0					
ANR	859018	Identifier	core		858438	0					
ANR	859019	Identifier	num		858438	1					
ANR	859020	Argument	p		858438	1					
ANR	859021	Identifier	p		858438	0					
ANR	859022	PrimaryExpression	1		858438	2					
ANR	859023	ExpressionStatement	"addr = r_num_math ( core -> num , input + 1 )"	8513:2:242396:242436	858438	5	True				
ANR	859024	AssignmentExpression	"addr = r_num_math ( core -> num , input + 1 )"		858438	0		=			
ANR	859025	Identifier	addr		858438	0					
ANR	859026	CallExpression	"r_num_math ( core -> num , input + 1 )"		858438	1					
ANR	859027	Callee	r_num_math		858438	0					
ANR	859028	Identifier	r_num_math		858438	0					
ANR	859029	ArgumentList	core -> num		858438	1					
ANR	859030	Argument	core -> num		858438	0					
ANR	859031	PtrMemberAccess	core -> num		858438	0					
ANR	859032	Identifier	core		858438	0					
ANR	859033	Identifier	num		858438	1					
ANR	859034	Argument	input + 1		858438	1					
ANR	859035	AdditiveExpression	input + 1		858438	0		+			
ANR	859036	Identifier	input		858438	0					
ANR	859037	PrimaryExpression	1		858438	1					
ANR	859038	IdentifierDeclStatement	"RList * paths = r_core_anal_graph_to ( core , addr , n ) ;"	8514:2:242440:242491	858438	6	True				
ANR	859039	IdentifierDecl	"* paths = r_core_anal_graph_to ( core , addr , n )"		858438	0					
ANR	859040	IdentifierDeclType	RList *		858438	0					
ANR	859041	Identifier	paths		858438	1					
ANR	859042	AssignmentExpression	"* paths = r_core_anal_graph_to ( core , addr , n )"		858438	2		=			
ANR	859043	Identifier	paths		858438	0					
ANR	859044	CallExpression	"r_core_anal_graph_to ( core , addr , n )"		858438	1					
ANR	859045	Callee	r_core_anal_graph_to		858438	0					
ANR	859046	Identifier	r_core_anal_graph_to		858438	0					
ANR	859047	ArgumentList	core		858438	1					
ANR	859048	Argument	core		858438	0					
ANR	859049	Identifier	core		858438	0					
ANR	859050	Argument	addr		858438	1					
ANR	859051	Identifier	addr		858438	0					
ANR	859052	Argument	n		858438	2					
ANR	859053	Identifier	n		858438	0					
ANR	859054	IfStatement	if ( paths )		858438	7					
ANR	859055	Condition	paths	8515:6:242499:242503	858438	0	True				
ANR	859056	Identifier	paths		858438	0					
ANR	859057	CompoundStatement		101:3:2258:2272	858438	1					
ANR	859058	IdentifierDeclStatement	RAnalBlock * bb ;	8516:3:242511:242525	858438	0	True				
ANR	859059	IdentifierDecl	* bb		858438	0					
ANR	859060	IdentifierDeclType	RAnalBlock *		858438	0					
ANR	859061	Identifier	bb		858438	1					
ANR	859062	IdentifierDeclStatement	RList * path ;	8517:3:242530:242541	858438	1	True				
ANR	859063	IdentifierDecl	* path		858438	0					
ANR	859064	IdentifierDeclType	RList *		858438	0					
ANR	859065	Identifier	path		858438	1					
ANR	859066	IdentifierDeclStatement	RListIter * pathi ;	8518:3:242546:242562	858438	2	True				
ANR	859067	IdentifierDecl	* pathi		858438	0					
ANR	859068	IdentifierDeclType	RListIter *		858438	0					
ANR	859069	Identifier	pathi		858438	1					
ANR	859070	IdentifierDeclStatement	RListIter * bbi ;	8519:3:242567:242581	858438	3	True				
ANR	859071	IdentifierDecl	* bbi		858438	0					
ANR	859072	IdentifierDeclType	RListIter *		858438	0					
ANR	859073	Identifier	bbi		858438	1					
ANR	859074	Statement	r_list_foreach	8520:3:242586:242599	858438	4	True				
ANR	859075	Statement	(	8520:18:242601:242601	858438	5	True				
ANR	859076	Statement	paths	8520:19:242602:242606	858438	6	True				
ANR	859077	Statement	","	8520:24:242607:242607	858438	7	True				
ANR	859078	Statement	pathi	8520:26:242609:242613	858438	8	True				
ANR	859079	Statement	","	8520:31:242614:242614	858438	9	True				
ANR	859080	Statement	path	8520:33:242616:242619	858438	10	True				
ANR	859081	Statement	)	8520:37:242620:242620	858438	11	True				
ANR	859082	CompoundStatement		102:39:2313:2313	858438	12					
ANR	859083	Statement	r_list_foreach	8521:4:242628:242641	858438	0	True				
ANR	859084	Statement	(	8521:19:242643:242643	858438	1	True				
ANR	859085	Statement	path	8521:20:242644:242647	858438	2	True				
ANR	859086	Statement	","	8521:24:242648:242648	858438	3	True				
ANR	859087	Statement	bbi	8521:26:242650:242652	858438	4	True				
ANR	859088	Statement	","	8521:29:242653:242653	858438	5	True				
ANR	859089	Statement	bb	8521:31:242655:242656	858438	6	True				
ANR	859090	Statement	)	8521:33:242657:242657	858438	7	True				
ANR	859091	CompoundStatement		103:35:2350:2350	858438	8					
ANR	859092	Statement	r_cons_printf	8522:5:242666:242678	858438	0	True				
ANR	859093	Statement	(	8522:19:242680:242680	858438	1	True				
ANR	859094	Statement	"""0x%08"""	8522:20:242681:242687	858438	2	True				
ANR	859095	Statement	PFMT64x	8522:28:242689:242695	858438	3	True				
ANR	859096	Statement	"""\\n"""	8522:36:242697:242700	858438	4	True				
ANR	859097	Statement	","	8522:40:242701:242701	858438	5	True				
ANR	859098	Statement	bb	8522:42:242703:242704	858438	6	True				
ANR	859099	Statement	->	8522:44:242705:242706	858438	7	True				
ANR	859100	Statement	addr	8522:46:242707:242710	858438	8	True				
ANR	859101	Statement	)	8522:50:242711:242711	858438	9	True				
ANR	859102	ExpressionStatement		8522:51:242712:242712	858438	10	True				
ANR	859103	ExpressionStatement	r_cons_newline ( )	8524:4:242724:242741	858438	9	True				
ANR	859104	CallExpression	r_cons_newline ( )		858438	0					
ANR	859105	Callee	r_cons_newline		858438	0					
ANR	859106	Identifier	r_cons_newline		858438	0					
ANR	859107	ArgumentList			858438	1					
ANR	859108	ExpressionStatement	r_list_purge ( path )	8525:4:242747:242766	858438	10	True				
ANR	859109	CallExpression	r_list_purge ( path )		858438	0					
ANR	859110	Callee	r_list_purge		858438	0					
ANR	859111	Identifier	r_list_purge		858438	0					
ANR	859112	ArgumentList	path		858438	1					
ANR	859113	Argument	path		858438	0					
ANR	859114	Identifier	path		858438	0					
ANR	859115	ExpressionStatement	free ( path )	8526:4:242772:242783	858438	11	True				
ANR	859116	CallExpression	free ( path )		858438	0					
ANR	859117	Callee	free		858438	0					
ANR	859118	Identifier	free		858438	0					
ANR	859119	ArgumentList	path		858438	1					
ANR	859120	Argument	path		858438	0					
ANR	859121	Identifier	path		858438	0					
ANR	859122	ExpressionStatement	r_list_purge ( paths )	8528:3:242793:242813	858438	13	True				
ANR	859123	CallExpression	r_list_purge ( paths )		858438	0					
ANR	859124	Callee	r_list_purge		858438	0					
ANR	859125	Identifier	r_list_purge		858438	0					
ANR	859126	ArgumentList	paths		858438	1					
ANR	859127	Argument	paths		858438	0					
ANR	859128	Identifier	paths		858438	0					
ANR	859129	ExpressionStatement	free ( paths )	8529:3:242818:242830	858438	14	True				
ANR	859130	CallExpression	free ( paths )		858438	0					
ANR	859131	Callee	free		858438	0					
ANR	859132	Identifier	free		858438	0					
ANR	859133	ArgumentList	paths		858438	1					
ANR	859134	Argument	paths		858438	0					
ANR	859135	Identifier	paths		858438	0					
ANR	859136	Label	case '\\0' :	8532:1:242840:242849	858438	11	True				
ANR	859137	BreakStatement	break ;	8533:2:242853:242858	858438	12	True				
ANR	859138	ReturnType	static void		858438	1					
ANR	859139	Identifier	cmd_anal_abt		858438	2					
ANR	859140	ParameterList	"RCore * core , const char * input"		858438	3					
ANR	859141	Parameter	RCore * core	8419:25:240276:240286	858438	0	True				
ANR	859142	ParameterType	RCore *		858438	0					
ANR	859143	Identifier	core		858438	1					
ANR	859144	Parameter	const char * input	8419:38:240289:240305	858438	1	True				
ANR	859145	ParameterType	const char *		858438	0					
ANR	859146	Identifier	input		858438	1					
ANR	859147	CFGEntryNode	ENTRY		858438		True				
ANR	859148	CFGExitNode	EXIT		858438		True				
ANR	859149	Symbol	bb		858438						
ANR	859150	Symbol	bb -> size		858438						
ANR	859151	Symbol	pj_string		858438						
ANR	859152	Symbol	* input		858438						
ANR	859153	Symbol	* core		858438						
ANR	859154	Symbol	strchr		858438						
ANR	859155	Symbol	help_msg_abt		858438						
ANR	859156	Symbol	core -> offset		858438						
ANR	859157	Symbol	bb -> addr		858438						
ANR	859158	Symbol	r_num_math		858438						
ANR	859159	Symbol	path		858438						
ANR	859160	Symbol	r_core_anal_graph_to		858438						
ANR	859161	Symbol	tmp		858438						
ANR	859162	Symbol	core -> num		858438						
ANR	859163	Symbol	addr		858438						
ANR	859164	Symbol	* bb		858438						
ANR	859165	Symbol	* p ++		858438						
ANR	859166	Symbol	bbi		858438						
ANR	859167	Symbol	n		858438						
ANR	859168	Symbol	p		858438						
ANR	859169	Symbol	core		858438						
ANR	859170	Symbol	input		858438						
ANR	859171	Symbol	paths		858438						
ANR	859172	Symbol	* ( ++ p )		858438						
ANR	859173	Symbol	pj_new		858438						
ANR	859174	Symbol	pj		858438						
ANR	859175	Symbol	* p		858438						
ANR	859176	Symbol	strdup		858438						
ANR	859177	Symbol	pathi		858438						
ANR	859178	Function	is_unknown_file	8537:0:242866:243025							
ANR	859179	FunctionDef	is_unknown_file (RCore * core)		859178	0					
ANR	859180	CompoundStatement		8537:41:242907:243025	859178	0					
ANR	859181	IfStatement	if ( core -> bin -> cur && core -> bin -> cur -> o )		859178	0					
ANR	859182	Condition	core -> bin -> cur && core -> bin -> cur -> o	8538:5:242914:242948	859178	0	True				
ANR	859183	AndExpression	core -> bin -> cur && core -> bin -> cur -> o		859178	0		&&			
ANR	859184	PtrMemberAccess	core -> bin -> cur		859178	0					
ANR	859185	PtrMemberAccess	core -> bin		859178	0					
ANR	859186	Identifier	core		859178	0					
ANR	859187	Identifier	bin		859178	1					
ANR	859188	Identifier	cur		859178	1					
ANR	859189	PtrMemberAccess	core -> bin -> cur -> o		859178	1					
ANR	859190	PtrMemberAccess	core -> bin -> cur		859178	0					
ANR	859191	PtrMemberAccess	core -> bin		859178	0					
ANR	859192	Identifier	core		859178	0					
ANR	859193	Identifier	bin		859178	1					
ANR	859194	Identifier	cur		859178	1					
ANR	859195	Identifier	o		859178	1					
ANR	859196	CompoundStatement		2:42:43:43	859178	1					
ANR	859197	ReturnStatement	return ( r_list_empty ( core -> bin -> cur -> o -> sections ) ) ;	8539:2:242955:243006	859178	0	True				
ANR	859198	CallExpression	r_list_empty ( core -> bin -> cur -> o -> sections )		859178	0					
ANR	859199	Callee	r_list_empty		859178	0					
ANR	859200	Identifier	r_list_empty		859178	0					
ANR	859201	ArgumentList	core -> bin -> cur -> o -> sections		859178	1					
ANR	859202	Argument	core -> bin -> cur -> o -> sections		859178	0					
ANR	859203	PtrMemberAccess	core -> bin -> cur -> o -> sections		859178	0					
ANR	859204	PtrMemberAccess	core -> bin -> cur -> o		859178	0					
ANR	859205	PtrMemberAccess	core -> bin -> cur		859178	0					
ANR	859206	PtrMemberAccess	core -> bin		859178	0					
ANR	859207	Identifier	core		859178	0					
ANR	859208	Identifier	bin		859178	1					
ANR	859209	Identifier	cur		859178	1					
ANR	859210	Identifier	o		859178	1					
ANR	859211	Identifier	sections		859178	1					
ANR	859212	ReturnStatement	return true ;	8541:1:243012:243023	859178	1	True				
ANR	859213	Identifier	true		859178	0					
ANR	859214	ReturnType	static bool		859178	1					
ANR	859215	Identifier	is_unknown_file		859178	2					
ANR	859216	ParameterList	RCore * core		859178	3					
ANR	859217	Parameter	RCore * core	8537:28:242894:242904	859178	0	True				
ANR	859218	ParameterType	RCore *		859178	0					
ANR	859219	Identifier	core		859178	1					
ANR	859220	CFGEntryNode	ENTRY		859178		True				
ANR	859221	CFGExitNode	EXIT		859178		True				
ANR	859222	Symbol	* core -> bin -> cur		859178						
ANR	859223	Symbol	core -> bin -> cur		859178						
ANR	859224	Symbol	* core		859178						
ANR	859225	Symbol	core -> bin -> cur -> o		859178						
ANR	859226	Symbol	core		859178						
ANR	859227	Symbol	* * * core		859178						
ANR	859228	Symbol	* core -> bin -> cur -> o		859178						
ANR	859229	Symbol	core -> bin -> cur -> o -> sections		859178						
ANR	859230	Symbol	true		859178						
ANR	859231	Symbol	r_list_empty		859178						
ANR	859232	Symbol	* core -> bin		859178						
ANR	859233	Symbol	* * * * core		859178						
ANR	859234	Symbol	* * * core -> bin		859178						
ANR	859235	Symbol	core -> bin		859178						
ANR	859236	Symbol	* * core -> bin		859178						
ANR	859237	Symbol	* * core -> bin -> cur		859178						
ANR	859238	Symbol	* * core		859178						
ANR	859239	Function	cmd_anal_all	8544:0:243028:253352							
ANR	859240	FunctionDef	"cmd_anal_all (RCore * core , const char * input)"		859239	0					
ANR	859241	CompoundStatement		8544:56:243084:253352	859239	0					
ANR	859242	SwitchStatement	switch ( * input )		859239	0					
ANR	859243	Condition	* input	8545:9:243095:243100	859239	0	True				
ANR	859244	UnaryOperationExpression	* input		859239	0					
ANR	859245	UnaryOperator	*		859239	0					
ANR	859246	Identifier	input		859239	1					
ANR	859247	CompoundStatement		2:17:18:18	859239	1					
ANR	859248	Label	case '?' :	8546:1:243106:243114	859239	0	True				
ANR	859249	ExpressionStatement	"r_core_cmd_help ( core , help_msg_aa )"	8547:2:243118:243153	859239	1	True				
ANR	859250	CallExpression	"r_core_cmd_help ( core , help_msg_aa )"		859239	0					
ANR	859251	Callee	r_core_cmd_help		859239	0					
ANR	859252	Identifier	r_core_cmd_help		859239	0					
ANR	859253	ArgumentList	core		859239	1					
ANR	859254	Argument	core		859239	0					
ANR	859255	Identifier	core		859239	0					
ANR	859256	Argument	help_msg_aa		859239	1					
ANR	859257	Identifier	help_msg_aa		859239	0					
ANR	859258	BreakStatement	break ;	8548:2:243157:243162	859239	2	True				
ANR	859259	Label	case 'b' :	8549:1:243165:243173	859239	3	True				
ANR	859260	ExpressionStatement	"cmd_anal_blocks ( core , input + 1 )"	8550:2:243186:243219	859239	4	True				
ANR	859261	CallExpression	"cmd_anal_blocks ( core , input + 1 )"		859239	0					
ANR	859262	Callee	cmd_anal_blocks		859239	0					
ANR	859263	Identifier	cmd_anal_blocks		859239	0					
ANR	859264	ArgumentList	core		859239	1					
ANR	859265	Argument	core		859239	0					
ANR	859266	Identifier	core		859239	0					
ANR	859267	Argument	input + 1		859239	1					
ANR	859268	AdditiveExpression	input + 1		859239	0		+			
ANR	859269	Identifier	input		859239	0					
ANR	859270	PrimaryExpression	1		859239	1					
ANR	859271	BreakStatement	break ;	8551:2:243223:243228	859239	5	True				
ANR	859272	Label	case 'f' :	8552:1:243231:243239	859239	6	True				
ANR	859273	IfStatement	if ( input [ 1 ] == 'e' )		859239	7					
ANR	859274	Condition	input [ 1 ] == 'e'	8553:6:243247:243261	859239	0	True				
ANR	859275	EqualityExpression	input [ 1 ] == 'e'		859239	0		==			
ANR	859276	ArrayIndexing	input [ 1 ]		859239	0					
ANR	859277	Identifier	input		859239	0					
ANR	859278	PrimaryExpression	1		859239	1					
ANR	859279	PrimaryExpression	'e'		859239	1					
ANR	859280	CompoundStatement		10:23:179:179	859239	1					
ANR	859281	ExpressionStatement	"r_core_cmd0 ( core , ""aef@@f"" )"	8554:3:243280:243308	859239	0	True				
ANR	859282	CallExpression	"r_core_cmd0 ( core , ""aef@@f"" )"		859239	0					
ANR	859283	Callee	r_core_cmd0		859239	0					
ANR	859284	Identifier	r_core_cmd0		859239	0					
ANR	859285	ArgumentList	core		859239	1					
ANR	859286	Argument	core		859239	0					
ANR	859287	Identifier	core		859239	0					
ANR	859288	Argument	"""aef@@f"""		859239	1					
ANR	859289	PrimaryExpression	"""aef@@f"""		859239	0					
ANR	859290	ElseStatement	else		859239	0					
ANR	859291	IfStatement	if ( input [ 1 ] == 't' )		859239	0					
ANR	859292	Condition	input [ 1 ] == 't'	8555:13:243323:243337	859239	0	True				
ANR	859293	EqualityExpression	input [ 1 ] == 't'		859239	0		==			
ANR	859294	ArrayIndexing	input [ 1 ]		859239	0					
ANR	859295	Identifier	input		859239	0					
ANR	859296	PrimaryExpression	1		859239	1					
ANR	859297	PrimaryExpression	't'		859239	1					
ANR	859298	CompoundStatement		12:30:255:255	859239	1					
ANR	859299	ExpressionStatement	cmd_anal_aaft ( core )	8556:3:243355:243375	859239	0	True				
ANR	859300	CallExpression	cmd_anal_aaft ( core )		859239	0					
ANR	859301	Callee	cmd_anal_aaft		859239	0					
ANR	859302	Identifier	cmd_anal_aaft		859239	0					
ANR	859303	ArgumentList	core		859239	1					
ANR	859304	Argument	core		859239	0					
ANR	859305	Identifier	core		859239	0					
ANR	859306	ElseStatement	else		859239	0					
ANR	859307	IfStatement	if ( input [ 1 ] == 0 )		859239	0					
ANR	859308	Condition	input [ 1 ] == 0	8557:13:243390:243402	859239	0	True				
ANR	859309	EqualityExpression	input [ 1 ] == 0		859239	0		==			
ANR	859310	ArrayIndexing	input [ 1 ]		859239	0					
ANR	859311	Identifier	input		859239	0					
ANR	859312	PrimaryExpression	1		859239	1					
ANR	859313	PrimaryExpression	0		859239	1					
ANR	859314	CompoundStatement		15:3:334:404	859239	1					
ANR	859315	IdentifierDeclStatement	"const bool analHasnext = r_config_get_i ( core -> config , ""anal.hasnext"" ) ;"	8558:3:243419:243489	859239	0	True				
ANR	859316	IdentifierDecl	"analHasnext = r_config_get_i ( core -> config , ""anal.hasnext"" )"		859239	0					
ANR	859317	IdentifierDeclType	const bool		859239	0					
ANR	859318	Identifier	analHasnext		859239	1					
ANR	859319	AssignmentExpression	"analHasnext = r_config_get_i ( core -> config , ""anal.hasnext"" )"		859239	2		=			
ANR	859320	Identifier	analHasnext		859239	0					
ANR	859321	CallExpression	"r_config_get_i ( core -> config , ""anal.hasnext"" )"		859239	1					
ANR	859322	Callee	r_config_get_i		859239	0					
ANR	859323	Identifier	r_config_get_i		859239	0					
ANR	859324	ArgumentList	core -> config		859239	1					
ANR	859325	Argument	core -> config		859239	0					
ANR	859326	PtrMemberAccess	core -> config		859239	0					
ANR	859327	Identifier	core		859239	0					
ANR	859328	Identifier	config		859239	1					
ANR	859329	Argument	"""anal.hasnext"""		859239	1					
ANR	859330	PrimaryExpression	"""anal.hasnext"""		859239	0					
ANR	859331	ExpressionStatement	"r_config_set_i ( core -> config , ""anal.hasnext"" , true )"	8559:3:243494:243545	859239	1	True				
ANR	859332	CallExpression	"r_config_set_i ( core -> config , ""anal.hasnext"" , true )"		859239	0					
ANR	859333	Callee	r_config_set_i		859239	0					
ANR	859334	Identifier	r_config_set_i		859239	0					
ANR	859335	ArgumentList	core -> config		859239	1					
ANR	859336	Argument	core -> config		859239	0					
ANR	859337	PtrMemberAccess	core -> config		859239	0					
ANR	859338	Identifier	core		859239	0					
ANR	859339	Identifier	config		859239	1					
ANR	859340	Argument	"""anal.hasnext"""		859239	1					
ANR	859341	PrimaryExpression	"""anal.hasnext"""		859239	0					
ANR	859342	Argument	true		859239	2					
ANR	859343	Identifier	true		859239	0					
ANR	859344	ExpressionStatement	"r_core_cmd0 ( core , ""afr@@c:isq"" )"	8560:3:243550:243582	859239	2	True				
ANR	859345	CallExpression	"r_core_cmd0 ( core , ""afr@@c:isq"" )"		859239	0					
ANR	859346	Callee	r_core_cmd0		859239	0					
ANR	859347	Identifier	r_core_cmd0		859239	0					
ANR	859348	ArgumentList	core		859239	1					
ANR	859349	Argument	core		859239	0					
ANR	859350	Identifier	core		859239	0					
ANR	859351	Argument	"""afr@@c:isq"""		859239	1					
ANR	859352	PrimaryExpression	"""afr@@c:isq"""		859239	0					
ANR	859353	ExpressionStatement	"r_config_set_i ( core -> config , ""anal.hasnext"" , analHasnext )"	8561:3:243587:243645	859239	3	True				
ANR	859354	CallExpression	"r_config_set_i ( core -> config , ""anal.hasnext"" , analHasnext )"		859239	0					
ANR	859355	Callee	r_config_set_i		859239	0					
ANR	859356	Identifier	r_config_set_i		859239	0					
ANR	859357	ArgumentList	core -> config		859239	1					
ANR	859358	Argument	core -> config		859239	0					
ANR	859359	PtrMemberAccess	core -> config		859239	0					
ANR	859360	Identifier	core		859239	0					
ANR	859361	Identifier	config		859239	1					
ANR	859362	Argument	"""anal.hasnext"""		859239	1					
ANR	859363	PrimaryExpression	"""anal.hasnext"""		859239	0					
ANR	859364	Argument	analHasnext		859239	2					
ANR	859365	Identifier	analHasnext		859239	0					
ANR	859366	ElseStatement	else		859239	0					
ANR	859367	CompoundStatement		19:9:571:571	859239	0					
ANR	859368	ExpressionStatement	"r_cons_printf ( ""Usage: aaf[et] - analyze all functions again\\n"" )"	8563:3:243661:243725	859239	0	True				
ANR	859369	CallExpression	"r_cons_printf ( ""Usage: aaf[et] - analyze all functions again\\n"" )"		859239	0					
ANR	859370	Callee	r_cons_printf		859239	0					
ANR	859371	Identifier	r_cons_printf		859239	0					
ANR	859372	ArgumentList	"""Usage: aaf[et] - analyze all functions again\\n"""		859239	1					
ANR	859373	Argument	"""Usage: aaf[et] - analyze all functions again\\n"""		859239	0					
ANR	859374	PrimaryExpression	"""Usage: aaf[et] - analyze all functions again\\n"""		859239	0					
ANR	859375	ExpressionStatement	"r_cons_printf ( "" aafe = aef@@f\\n"" )"	8564:3:243730:243764	859239	1	True				
ANR	859376	CallExpression	"r_cons_printf ( "" aafe = aef@@f\\n"" )"		859239	0					
ANR	859377	Callee	r_cons_printf		859239	0					
ANR	859378	Identifier	r_cons_printf		859239	0					
ANR	859379	ArgumentList	""" aafe = aef@@f\\n"""		859239	1					
ANR	859380	Argument	""" aafe = aef@@f\\n"""		859239	0					
ANR	859381	PrimaryExpression	""" aafe = aef@@f\\n"""		859239	0					
ANR	859382	ExpressionStatement	"r_cons_printf ( "" aaft = recursive type matching in all functions\\n"" )"	8565:3:243769:243837	859239	2	True				
ANR	859383	CallExpression	"r_cons_printf ( "" aaft = recursive type matching in all functions\\n"" )"		859239	0					
ANR	859384	Callee	r_cons_printf		859239	0					
ANR	859385	Identifier	r_cons_printf		859239	0					
ANR	859386	ArgumentList	""" aaft = recursive type matching in all functions\\n"""		859239	1					
ANR	859387	Argument	""" aaft = recursive type matching in all functions\\n"""		859239	0					
ANR	859388	PrimaryExpression	""" aaft = recursive type matching in all functions\\n"""		859239	0					
ANR	859389	ExpressionStatement	"r_cons_printf ( "" aaf  = afr@@c:isq\\n"" )"	8566:3:243842:243880	859239	3	True				
ANR	859390	CallExpression	"r_cons_printf ( "" aaf  = afr@@c:isq\\n"" )"		859239	0					
ANR	859391	Callee	r_cons_printf		859239	0					
ANR	859392	Identifier	r_cons_printf		859239	0					
ANR	859393	ArgumentList	""" aaf  = afr@@c:isq\\n"""		859239	1					
ANR	859394	Argument	""" aaf  = afr@@c:isq\\n"""		859239	0					
ANR	859395	PrimaryExpression	""" aaf  = afr@@c:isq\\n"""		859239	0					
ANR	859396	BreakStatement	break ;	8568:2:243888:243893	859239	8	True				
ANR	859397	Label	case 'c' :	8569:1:243896:243904	859239	9	True				
ANR	859398	SwitchStatement	switch ( input [ 1 ] )		859239	10					
ANR	859399	Condition	input [ 1 ]	8570:10:243925:243932	859239	0	True				
ANR	859400	ArrayIndexing	input [ 1 ]		859239	0					
ANR	859401	Identifier	input		859239	0					
ANR	859402	PrimaryExpression	1		859239	1					
ANR	859403	CompoundStatement		27:20:850:850	859239	1					
ANR	859404	Label	case '*' :	8571:2:243939:243947	859239	0	True				
ANR	859405	ExpressionStatement	"cmd_anal_calls ( core , input + 1 , true , false )"	8572:3:243962:244007	859239	1	True				
ANR	859406	CallExpression	"cmd_anal_calls ( core , input + 1 , true , false )"		859239	0					
ANR	859407	Callee	cmd_anal_calls		859239	0					
ANR	859408	Identifier	cmd_anal_calls		859239	0					
ANR	859409	ArgumentList	core		859239	1					
ANR	859410	Argument	core		859239	0					
ANR	859411	Identifier	core		859239	0					
ANR	859412	Argument	input + 1		859239	1					
ANR	859413	AdditiveExpression	input + 1		859239	0		+			
ANR	859414	Identifier	input		859239	0					
ANR	859415	PrimaryExpression	1		859239	1					
ANR	859416	Argument	true		859239	2					
ANR	859417	Identifier	true		859239	0					
ANR	859418	Argument	false		859239	3					
ANR	859419	Identifier	false		859239	0					
ANR	859420	BreakStatement	break ;	8573:3:244012:244017	859239	2	True				
ANR	859421	Label	case 'i' :	8574:2:244021:244029	859239	3	True				
ANR	859422	ExpressionStatement	"cmd_anal_calls ( core , input + 1 , input [ 2 ] == '*' , true )"	8575:3:244044:244099	859239	4	True				
ANR	859423	CallExpression	"cmd_anal_calls ( core , input + 1 , input [ 2 ] == '*' , true )"		859239	0					
ANR	859424	Callee	cmd_anal_calls		859239	0					
ANR	859425	Identifier	cmd_anal_calls		859239	0					
ANR	859426	ArgumentList	core		859239	1					
ANR	859427	Argument	core		859239	0					
ANR	859428	Identifier	core		859239	0					
ANR	859429	Argument	input + 1		859239	1					
ANR	859430	AdditiveExpression	input + 1		859239	0		+			
ANR	859431	Identifier	input		859239	0					
ANR	859432	PrimaryExpression	1		859239	1					
ANR	859433	Argument	input [ 2 ] == '*'		859239	2					
ANR	859434	EqualityExpression	input [ 2 ] == '*'		859239	0		==			
ANR	859435	ArrayIndexing	input [ 2 ]		859239	0					
ANR	859436	Identifier	input		859239	0					
ANR	859437	PrimaryExpression	2		859239	1					
ANR	859438	PrimaryExpression	'*'		859239	1					
ANR	859439	Argument	true		859239	3					
ANR	859440	Identifier	true		859239	0					
ANR	859441	BreakStatement	break ;	8576:3:244104:244109	859239	5	True				
ANR	859442	Label	case '?' :	8577:2:244113:244121	859239	6	True				
ANR	859443	ExpressionStatement	"eprintf ( ""Usage: aac, aac* or aaci (imports xrefs only)\\n"" )"	8578:3:244136:244195	859239	7	True				
ANR	859444	CallExpression	"eprintf ( ""Usage: aac, aac* or aaci (imports xrefs only)\\n"" )"		859239	0					
ANR	859445	Callee	eprintf		859239	0					
ANR	859446	Identifier	eprintf		859239	0					
ANR	859447	ArgumentList	"""Usage: aac, aac* or aaci (imports xrefs only)\\n"""		859239	1					
ANR	859448	Argument	"""Usage: aac, aac* or aaci (imports xrefs only)\\n"""		859239	0					
ANR	859449	PrimaryExpression	"""Usage: aac, aac* or aaci (imports xrefs only)\\n"""		859239	0					
ANR	859450	BreakStatement	break ;	8579:3:244200:244205	859239	8	True				
ANR	859451	Label	default :	8580:2:244209:244216	859239	9	True				
ANR	859452	Identifier	default		859239	0					
ANR	859453	ExpressionStatement	"cmd_anal_calls ( core , input + 1 , false , false )"	8581:3:244230:244276	859239	10	True				
ANR	859454	CallExpression	"cmd_anal_calls ( core , input + 1 , false , false )"		859239	0					
ANR	859455	Callee	cmd_anal_calls		859239	0					
ANR	859456	Identifier	cmd_anal_calls		859239	0					
ANR	859457	ArgumentList	core		859239	1					
ANR	859458	Argument	core		859239	0					
ANR	859459	Identifier	core		859239	0					
ANR	859460	Argument	input + 1		859239	1					
ANR	859461	AdditiveExpression	input + 1		859239	0		+			
ANR	859462	Identifier	input		859239	0					
ANR	859463	PrimaryExpression	1		859239	1					
ANR	859464	Argument	false		859239	2					
ANR	859465	Identifier	false		859239	0					
ANR	859466	Argument	false		859239	3					
ANR	859467	Identifier	false		859239	0					
ANR	859468	BreakStatement	break ;	8582:3:244281:244286	859239	11	True				
ANR	859469	Label	case 'j' :	8584:1:244293:244301	859239	11	True				
ANR	859470	ExpressionStatement	"cmd_anal_jumps ( core , input + 1 )"	8585:2:244314:244346	859239	12	True				
ANR	859471	CallExpression	"cmd_anal_jumps ( core , input + 1 )"		859239	0					
ANR	859472	Callee	cmd_anal_jumps		859239	0					
ANR	859473	Identifier	cmd_anal_jumps		859239	0					
ANR	859474	ArgumentList	core		859239	1					
ANR	859475	Argument	core		859239	0					
ANR	859476	Identifier	core		859239	0					
ANR	859477	Argument	input + 1		859239	1					
ANR	859478	AdditiveExpression	input + 1		859239	0		+			
ANR	859479	Identifier	input		859239	0					
ANR	859480	PrimaryExpression	1		859239	1					
ANR	859481	BreakStatement	break ;	8586:2:244350:244355	859239	13	True				
ANR	859482	Label	case 'd' :	8587:1:244358:244366	859239	14	True				
ANR	859483	ExpressionStatement	"cmd_anal_aad ( core , input )"	8588:2:244379:244405	859239	15	True				
ANR	859484	CallExpression	"cmd_anal_aad ( core , input )"		859239	0					
ANR	859485	Callee	cmd_anal_aad		859239	0					
ANR	859486	Identifier	cmd_anal_aad		859239	0					
ANR	859487	ArgumentList	core		859239	1					
ANR	859488	Argument	core		859239	0					
ANR	859489	Identifier	core		859239	0					
ANR	859490	Argument	input		859239	1					
ANR	859491	Identifier	input		859239	0					
ANR	859492	BreakStatement	break ;	8589:2:244409:244414	859239	16	True				
ANR	859493	Label	case 'v' :	8590:1:244417:244425	859239	17	True				
ANR	859494	ExpressionStatement	"cmd_anal_aav ( core , input )"	8591:2:244438:244464	859239	18	True				
ANR	859495	CallExpression	"cmd_anal_aav ( core , input )"		859239	0					
ANR	859496	Callee	cmd_anal_aav		859239	0					
ANR	859497	Identifier	cmd_anal_aav		859239	0					
ANR	859498	ArgumentList	core		859239	1					
ANR	859499	Argument	core		859239	0					
ANR	859500	Identifier	core		859239	0					
ANR	859501	Argument	input		859239	1					
ANR	859502	Identifier	input		859239	0					
ANR	859503	BreakStatement	break ;	8592:2:244468:244473	859239	19	True				
ANR	859504	Label	case 'u' :	8593:1:244476:244484	859239	20	True				
ANR	859505	ExpressionStatement	"r_core_anal_nofunclist ( core , input + 1 )"	8594:2:244536:244576	859239	21	True				
ANR	859506	CallExpression	"r_core_anal_nofunclist ( core , input + 1 )"		859239	0					
ANR	859507	Callee	r_core_anal_nofunclist		859239	0					
ANR	859508	Identifier	r_core_anal_nofunclist		859239	0					
ANR	859509	ArgumentList	core		859239	1					
ANR	859510	Argument	core		859239	0					
ANR	859511	Identifier	core		859239	0					
ANR	859512	Argument	input + 1		859239	1					
ANR	859513	AdditiveExpression	input + 1		859239	0		+			
ANR	859514	Identifier	input		859239	0					
ANR	859515	PrimaryExpression	1		859239	1					
ANR	859516	BreakStatement	break ;	8595:2:244580:244585	859239	22	True				
ANR	859517	Label	case 'i' :	8596:1:244588:244596	859239	23	True				
ANR	859518	ExpressionStatement	"r_core_anal_info ( core , input + 1 )"	8597:2:244609:244643	859239	24	True				
ANR	859519	CallExpression	"r_core_anal_info ( core , input + 1 )"		859239	0					
ANR	859520	Callee	r_core_anal_info		859239	0					
ANR	859521	Identifier	r_core_anal_info		859239	0					
ANR	859522	ArgumentList	core		859239	1					
ANR	859523	Argument	core		859239	0					
ANR	859524	Identifier	core		859239	0					
ANR	859525	Argument	input + 1		859239	1					
ANR	859526	AdditiveExpression	input + 1		859239	0		+			
ANR	859527	Identifier	input		859239	0					
ANR	859528	PrimaryExpression	1		859239	1					
ANR	859529	BreakStatement	break ;	8598:2:244647:244652	859239	25	True				
ANR	859530	Label	case 's' :	8599:1:244655:244663	859239	26	True				
ANR	859531	ExpressionStatement	"r_core_cmd0 ( core , ""af @@= `isq~[0]`"" )"	8600:2:244676:244714	859239	27	True				
ANR	859532	CallExpression	"r_core_cmd0 ( core , ""af @@= `isq~[0]`"" )"		859239	0					
ANR	859533	Callee	r_core_cmd0		859239	0					
ANR	859534	Identifier	r_core_cmd0		859239	0					
ANR	859535	ArgumentList	core		859239	1					
ANR	859536	Argument	core		859239	0					
ANR	859537	Identifier	core		859239	0					
ANR	859538	Argument	"""af @@= `isq~[0]`"""		859239	1					
ANR	859539	PrimaryExpression	"""af @@= `isq~[0]`"""		859239	0					
ANR	859540	ExpressionStatement	"r_core_cmd0 ( core , ""af @@ entry*"" )"	8601:2:244718:244752	859239	28	True				
ANR	859541	CallExpression	"r_core_cmd0 ( core , ""af @@ entry*"" )"		859239	0					
ANR	859542	Callee	r_core_cmd0		859239	0					
ANR	859543	Identifier	r_core_cmd0		859239	0					
ANR	859544	ArgumentList	core		859239	1					
ANR	859545	Argument	core		859239	0					
ANR	859546	Identifier	core		859239	0					
ANR	859547	Argument	"""af @@ entry*"""		859239	1					
ANR	859548	PrimaryExpression	"""af @@ entry*"""		859239	0					
ANR	859549	BreakStatement	break ;	8602:2:244756:244761	859239	29	True				
ANR	859550	Label	case 'S' :	8603:1:244764:244772	859239	30	True				
ANR	859551	ExpressionStatement	"r_core_cmd0 ( core , ""af @@ sym.*"" )"	8604:2:244785:244818	859239	31	True				
ANR	859552	CallExpression	"r_core_cmd0 ( core , ""af @@ sym.*"" )"		859239	0					
ANR	859553	Callee	r_core_cmd0		859239	0					
ANR	859554	Identifier	r_core_cmd0		859239	0					
ANR	859555	ArgumentList	core		859239	1					
ANR	859556	Argument	core		859239	0					
ANR	859557	Identifier	core		859239	0					
ANR	859558	Argument	"""af @@ sym.*"""		859239	1					
ANR	859559	PrimaryExpression	"""af @@ sym.*"""		859239	0					
ANR	859560	ExpressionStatement	"r_core_cmd0 ( core , ""af @@ entry*"" )"	8605:2:244822:244856	859239	32	True				
ANR	859561	CallExpression	"r_core_cmd0 ( core , ""af @@ entry*"" )"		859239	0					
ANR	859562	Callee	r_core_cmd0		859239	0					
ANR	859563	Identifier	r_core_cmd0		859239	0					
ANR	859564	ArgumentList	core		859239	1					
ANR	859565	Argument	core		859239	0					
ANR	859566	Identifier	core		859239	0					
ANR	859567	Argument	"""af @@ entry*"""		859239	1					
ANR	859568	PrimaryExpression	"""af @@ entry*"""		859239	0					
ANR	859569	BreakStatement	break ;	8606:2:244860:244865	859239	33	True				
ANR	859570	Label	case 'F' :	8607:1:244868:244876	859239	34	True				
ANR	859571	IfStatement	if ( ! input [ 1 ] || input [ 1 ] == ' ' || input [ 1 ] == 'a' )		859239	35					
ANR	859572	Condition	! input [ 1 ] || input [ 1 ] == ' ' || input [ 1 ] == 'a'	8608:6:244900:244946	859239	0	True				
ANR	859573	OrExpression	! input [ 1 ] || input [ 1 ] == ' ' || input [ 1 ] == 'a'		859239	0		||			
ANR	859574	UnaryOperationExpression	! input [ 1 ]		859239	0					
ANR	859575	UnaryOperator	!		859239	0					
ANR	859576	ArrayIndexing	input [ 1 ]		859239	1					
ANR	859577	Identifier	input		859239	0					
ANR	859578	PrimaryExpression	1		859239	1					
ANR	859579	OrExpression	input [ 1 ] == ' ' || input [ 1 ] == 'a'		859239	1		||			
ANR	859580	EqualityExpression	input [ 1 ] == ' '		859239	0		==			
ANR	859581	ArrayIndexing	input [ 1 ]		859239	0					
ANR	859582	Identifier	input		859239	0					
ANR	859583	PrimaryExpression	1		859239	1					
ANR	859584	PrimaryExpression	' '		859239	1					
ANR	859585	EqualityExpression	input [ 1 ] == 'a'		859239	1		==			
ANR	859586	ArrayIndexing	input [ 1 ]		859239	0					
ANR	859587	Identifier	input		859239	0					
ANR	859588	PrimaryExpression	1		859239	1					
ANR	859589	PrimaryExpression	'a'		859239	1					
ANR	859590	CompoundStatement		65:55:1864:1864	859239	1					
ANR	859591	ExpressionStatement	"r_core_anal_inflags ( core , input + 1 )"	8609:3:244954:244991	859239	0	True				
ANR	859592	CallExpression	"r_core_anal_inflags ( core , input + 1 )"		859239	0					
ANR	859593	Callee	r_core_anal_inflags		859239	0					
ANR	859594	Identifier	r_core_anal_inflags		859239	0					
ANR	859595	ArgumentList	core		859239	1					
ANR	859596	Argument	core		859239	0					
ANR	859597	Identifier	core		859239	0					
ANR	859598	Argument	input + 1		859239	1					
ANR	859599	AdditiveExpression	input + 1		859239	0		+			
ANR	859600	Identifier	input		859239	0					
ANR	859601	PrimaryExpression	1		859239	1					
ANR	859602	ElseStatement	else		859239	0					
ANR	859603	CompoundStatement		67:9:1917:1917	859239	0					
ANR	859604	ExpressionStatement	"eprintf ( ""Usage: aaF[a] - analyze functions in flag bounds (aaFa uses af/a2f instead of af+/afb+)\\n"" )"	8611:3:245007:245108	859239	0	True				
ANR	859605	CallExpression	"eprintf ( ""Usage: aaF[a] - analyze functions in flag bounds (aaFa uses af/a2f instead of af+/afb+)\\n"" )"		859239	0					
ANR	859606	Callee	eprintf		859239	0					
ANR	859607	Identifier	eprintf		859239	0					
ANR	859608	ArgumentList	"""Usage: aaF[a] - analyze functions in flag bounds (aaFa uses af/a2f instead of af+/afb+)\\n"""		859239	1					
ANR	859609	Argument	"""Usage: aaF[a] - analyze functions in flag bounds (aaFa uses af/a2f instead of af+/afb+)\\n"""		859239	0					
ANR	859610	PrimaryExpression	"""Usage: aaF[a] - analyze functions in flag bounds (aaFa uses af/a2f instead of af+/afb+)\\n"""		859239	0					
ANR	859611	BreakStatement	break ;	8613:2:245116:245121	859239	36	True				
ANR	859612	Label	case 'n' :	8614:1:245124:245132	859239	37	True				
ANR	859613	SwitchStatement	switch ( input [ 1 ] )		859239	38					
ANR	859614	Condition	input [ 1 ]	8615:10:245153:245160	859239	0	True				
ANR	859615	ArrayIndexing	input [ 1 ]		859239	0					
ANR	859616	Identifier	input		859239	0					
ANR	859617	PrimaryExpression	1		859239	1					
ANR	859618	CompoundStatement		72:20:2078:2078	859239	1					
ANR	859619	Label	case 'g' :	8616:2:245167:245175	859239	0	True				
ANR	859620	ExpressionStatement	r_core_anal_autoname_all_golang_fcns ( core )	8617:3:245190:245233	859239	1	True				
ANR	859621	CallExpression	r_core_anal_autoname_all_golang_fcns ( core )		859239	0					
ANR	859622	Callee	r_core_anal_autoname_all_golang_fcns		859239	0					
ANR	859623	Identifier	r_core_anal_autoname_all_golang_fcns		859239	0					
ANR	859624	ArgumentList	core		859239	1					
ANR	859625	Argument	core		859239	0					
ANR	859626	Identifier	core		859239	0					
ANR	859627	BreakStatement	break ;	8618:3:245238:245243	859239	2	True				
ANR	859628	Label	default :	8619:2:245247:245254	859239	3	True				
ANR	859629	Identifier	default		859239	0					
ANR	859630	ExpressionStatement	r_core_anal_autoname_all_fcns ( core )	8620:3:245268:245304	859239	4	True				
ANR	859631	CallExpression	r_core_anal_autoname_all_fcns ( core )		859239	0					
ANR	859632	Callee	r_core_anal_autoname_all_fcns		859239	0					
ANR	859633	Identifier	r_core_anal_autoname_all_fcns		859239	0					
ANR	859634	ArgumentList	core		859239	1					
ANR	859635	Argument	core		859239	0					
ANR	859636	Identifier	core		859239	0					
ANR	859637	BreakStatement	break ;	8622:2:245312:245317	859239	39	True				
ANR	859638	Label	case 'p' :	8623:1:245320:245328	859239	40	True				
ANR	859639	IfStatement	if ( * input == '?' )		859239	41					
ANR	859640	Condition	* input == '?'	8624:6:245345:245357	859239	0	True				
ANR	859641	EqualityExpression	* input == '?'		859239	0		==			
ANR	859642	UnaryOperationExpression	* input		859239	0					
ANR	859643	UnaryOperator	*		859239	0					
ANR	859644	Identifier	input		859239	1					
ANR	859645	PrimaryExpression	'?'		859239	1					
ANR	859646	CompoundStatement		81:21:2275:2275	859239	1					
ANR	859647	ExpressionStatement	"eprintf ( ""Usage: /aap   ; find in memory for function preludes"" )"	8626:3:245406:245470	859239	0	True				
ANR	859648	CallExpression	"eprintf ( ""Usage: /aap   ; find in memory for function preludes"" )"		859239	0					
ANR	859649	Callee	eprintf		859239	0					
ANR	859650	Identifier	eprintf		859239	0					
ANR	859651	ArgumentList	"""Usage: /aap   ; find in memory for function preludes"""		859239	1					
ANR	859652	Argument	"""Usage: /aap   ; find in memory for function preludes"""		859239	0					
ANR	859653	PrimaryExpression	"""Usage: /aap   ; find in memory for function preludes"""		859239	0					
ANR	859654	ElseStatement	else		859239	0					
ANR	859655	CompoundStatement		84:9:2396:2396	859239	0					
ANR	859656	ExpressionStatement	"r_core_search_preludes ( core , true )"	8628:3:245486:245521	859239	0	True				
ANR	859657	CallExpression	"r_core_search_preludes ( core , true )"		859239	0					
ANR	859658	Callee	r_core_search_preludes		859239	0					
ANR	859659	Identifier	r_core_search_preludes		859239	0					
ANR	859660	ArgumentList	core		859239	1					
ANR	859661	Argument	core		859239	0					
ANR	859662	Identifier	core		859239	0					
ANR	859663	Argument	true		859239	1					
ANR	859664	Identifier	true		859239	0					
ANR	859665	BreakStatement	break ;	8630:2:245529:245534	859239	42	True				
ANR	859666	Label	case '\\0' :	8631:1:245537:245546	859239	43	True				
ANR	859667	Label	case 'a' :	8632:1:245557:245565	859239	44	True				
ANR	859668	IfStatement	if ( input [ 0 ] && ( input [ 1 ] == '?' || ( input [ 1 ] && input [ 2 ] == '?' ) ) )		859239	45					
ANR	859669	Condition	input [ 0 ] && ( input [ 1 ] == '?' || ( input [ 1 ] && input [ 2 ] == '?' ) )	8633:6:245573:245634	859239	0	True				
ANR	859670	AndExpression	input [ 0 ] && ( input [ 1 ] == '?' || ( input [ 1 ] && input [ 2 ] == '?' ) )		859239	0		&&			
ANR	859671	ArrayIndexing	input [ 0 ]		859239	0					
ANR	859672	Identifier	input		859239	0					
ANR	859673	PrimaryExpression	0		859239	1					
ANR	859674	OrExpression	input [ 1 ] == '?' || ( input [ 1 ] && input [ 2 ] == '?' )		859239	1		||			
ANR	859675	EqualityExpression	input [ 1 ] == '?'		859239	0		==			
ANR	859676	ArrayIndexing	input [ 1 ]		859239	0					
ANR	859677	Identifier	input		859239	0					
ANR	859678	PrimaryExpression	1		859239	1					
ANR	859679	PrimaryExpression	'?'		859239	1					
ANR	859680	AndExpression	input [ 1 ] && input [ 2 ] == '?'		859239	1		&&			
ANR	859681	ArrayIndexing	input [ 1 ]		859239	0					
ANR	859682	Identifier	input		859239	0					
ANR	859683	PrimaryExpression	1		859239	1					
ANR	859684	EqualityExpression	input [ 2 ] == '?'		859239	1		==			
ANR	859685	ArrayIndexing	input [ 2 ]		859239	0					
ANR	859686	Identifier	input		859239	0					
ANR	859687	PrimaryExpression	2		859239	1					
ANR	859688	PrimaryExpression	'?'		859239	1					
ANR	859689	CompoundStatement		90:70:2552:2552	859239	1					
ANR	859690	ExpressionStatement	"r_cons_println ( ""Usage: See aa? for more help"" )"	8634:3:245642:245689	859239	0	True				
ANR	859691	CallExpression	"r_cons_println ( ""Usage: See aa? for more help"" )"		859239	0					
ANR	859692	Callee	r_cons_println		859239	0					
ANR	859693	Identifier	r_cons_println		859239	0					
ANR	859694	ArgumentList	"""Usage: See aa? for more help"""		859239	1					
ANR	859695	Argument	"""Usage: See aa? for more help"""		859239	0					
ANR	859696	PrimaryExpression	"""Usage: See aa? for more help"""		859239	0					
ANR	859697	ElseStatement	else		859239	0					
ANR	859698	CompoundStatement		122:3:3694:3753	859239	0					
ANR	859699	IdentifierDeclStatement	bool didAap = false ;	8636:3:245705:245724	859239	0	True				
ANR	859700	IdentifierDecl	didAap = false		859239	0					
ANR	859701	IdentifierDeclType	bool		859239	0					
ANR	859702	Identifier	didAap		859239	1					
ANR	859703	AssignmentExpression	didAap = false		859239	2		=			
ANR	859704	Identifier	false		859239	0					
ANR	859705	Identifier	false		859239	1					
ANR	859706	IdentifierDeclStatement	char * dh_orig = NULL ;	8637:3:245729:245749	859239	1	True				
ANR	859707	IdentifierDecl	* dh_orig = NULL		859239	0					
ANR	859708	IdentifierDeclType	char *		859239	0					
ANR	859709	Identifier	dh_orig		859239	1					
ANR	859710	AssignmentExpression	* dh_orig = NULL		859239	2		=			
ANR	859711	Identifier	NULL		859239	0					
ANR	859712	Identifier	NULL		859239	1					
ANR	859713	IfStatement	"if ( ! strncmp ( input , ""aaaaa"" , 5 ) )"		859239	2					
ANR	859714	Condition	"! strncmp ( input , ""aaaaa"" , 5 )"	8638:7:245758:245785	859239	0	True				
ANR	859715	UnaryOperationExpression	"! strncmp ( input , ""aaaaa"" , 5 )"		859239	0					
ANR	859716	UnaryOperator	!		859239	0					
ANR	859717	CallExpression	"strncmp ( input , ""aaaaa"" , 5 )"		859239	1					
ANR	859718	Callee	strncmp		859239	0					
ANR	859719	Identifier	strncmp		859239	0					
ANR	859720	ArgumentList	input		859239	1					
ANR	859721	Argument	input		859239	0					
ANR	859722	Identifier	input		859239	0					
ANR	859723	Argument	"""aaaaa"""		859239	1					
ANR	859724	PrimaryExpression	"""aaaaa"""		859239	0					
ANR	859725	Argument	5		859239	2					
ANR	859726	PrimaryExpression	5		859239	0					
ANR	859727	CompoundStatement		95:37:2703:2703	859239	1					
ANR	859728	ExpressionStatement	"eprintf ( ""An r2 developer is coming to your place to manually analyze this program. Please wait for it\\n"" )"	8639:4:245794:245900	859239	0	True				
ANR	859729	CallExpression	"eprintf ( ""An r2 developer is coming to your place to manually analyze this program. Please wait for it\\n"" )"		859239	0					
ANR	859730	Callee	eprintf		859239	0					
ANR	859731	Identifier	eprintf		859239	0					
ANR	859732	ArgumentList	"""An r2 developer is coming to your place to manually analyze this program. Please wait for it\\n"""		859239	1					
ANR	859733	Argument	"""An r2 developer is coming to your place to manually analyze this program. Please wait for it\\n"""		859239	0					
ANR	859734	PrimaryExpression	"""An r2 developer is coming to your place to manually analyze this program. Please wait for it\\n"""		859239	0					
ANR	859735	IfStatement	if ( r_cons_is_interactive ( ) )		859239	1					
ANR	859736	Condition	r_cons_is_interactive ( )	8640:8:245910:245933	859239	0	True				
ANR	859737	CallExpression	r_cons_is_interactive ( )		859239	0					
ANR	859738	Callee	r_cons_is_interactive		859239	0					
ANR	859739	Identifier	r_cons_is_interactive		859239	0					
ANR	859740	ArgumentList			859239	1					
ANR	859741	CompoundStatement		97:34:2851:2851	859239	1					
ANR	859742	ExpressionStatement	r_cons_any_key ( NULL )	8641:5:245943:245964	859239	0	True				
ANR	859743	CallExpression	r_cons_any_key ( NULL )		859239	0					
ANR	859744	Callee	r_cons_any_key		859239	0					
ANR	859745	Identifier	r_cons_any_key		859239	0					
ANR	859746	ArgumentList	NULL		859239	1					
ANR	859747	Argument	NULL		859239	0					
ANR	859748	Identifier	NULL		859239	0					
ANR	859749	GotoStatement	goto jacuzzi ;	8643:4:245976:245988	859239	2	True				
ANR	859750	Identifier	jacuzzi		859239	0					
ANR	859751	IdentifierDeclStatement	ut64 curseek = core -> offset ;	8645:3:245998:246025	859239	3	True				
ANR	859752	IdentifierDecl	curseek = core -> offset		859239	0					
ANR	859753	IdentifierDeclType	ut64		859239	0					
ANR	859754	Identifier	curseek		859239	1					
ANR	859755	AssignmentExpression	curseek = core -> offset		859239	2		=			
ANR	859756	Identifier	curseek		859239	0					
ANR	859757	PtrMemberAccess	core -> offset		859239	1					
ANR	859758	Identifier	core		859239	0					
ANR	859759	Identifier	offset		859239	1					
ANR	859760	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Analyze all flags starting with sym. and entry0 (aa)"" )"	8646:3:246030:246123	859239	4	True				
ANR	859761	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Analyze all flags starting with sym. and entry0 (aa)"" )"		859239	0		=			
ANR	859762	Identifier	oldstr		859239	0					
ANR	859763	CallExpression	"r_print_rowlog ( core -> print , ""Analyze all flags starting with sym. and entry0 (aa)"" )"		859239	1					
ANR	859764	Callee	r_print_rowlog		859239	0					
ANR	859765	Identifier	r_print_rowlog		859239	0					
ANR	859766	ArgumentList	core -> print		859239	1					
ANR	859767	Argument	core -> print		859239	0					
ANR	859768	PtrMemberAccess	core -> print		859239	0					
ANR	859769	Identifier	core		859239	0					
ANR	859770	Identifier	print		859239	1					
ANR	859771	Argument	"""Analyze all flags starting with sym. and entry0 (aa)"""		859239	1					
ANR	859772	PrimaryExpression	"""Analyze all flags starting with sym. and entry0 (aa)"""		859239	0					
ANR	859773	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	8647:3:246128:246158	859239	5	True				
ANR	859774	CallExpression	"r_cons_break_push ( NULL , NULL )"		859239	0					
ANR	859775	Callee	r_cons_break_push		859239	0					
ANR	859776	Identifier	r_cons_break_push		859239	0					
ANR	859777	ArgumentList	NULL		859239	1					
ANR	859778	Argument	NULL		859239	0					
ANR	859779	Identifier	NULL		859239	0					
ANR	859780	Argument	NULL		859239	1					
ANR	859781	Identifier	NULL		859239	0					
ANR	859782	ExpressionStatement	"r_cons_break_timeout ( r_config_get_i ( core -> config , ""anal.timeout"" ) )"	8648:3:246163:246231	859239	6	True				
ANR	859783	CallExpression	"r_cons_break_timeout ( r_config_get_i ( core -> config , ""anal.timeout"" ) )"		859239	0					
ANR	859784	Callee	r_cons_break_timeout		859239	0					
ANR	859785	Identifier	r_cons_break_timeout		859239	0					
ANR	859786	ArgumentList	"r_config_get_i ( core -> config , ""anal.timeout"" )"		859239	1					
ANR	859787	Argument	"r_config_get_i ( core -> config , ""anal.timeout"" )"		859239	0					
ANR	859788	CallExpression	"r_config_get_i ( core -> config , ""anal.timeout"" )"		859239	0					
ANR	859789	Callee	r_config_get_i		859239	0					
ANR	859790	Identifier	r_config_get_i		859239	0					
ANR	859791	ArgumentList	core -> config		859239	1					
ANR	859792	Argument	core -> config		859239	0					
ANR	859793	PtrMemberAccess	core -> config		859239	0					
ANR	859794	Identifier	core		859239	0					
ANR	859795	Identifier	config		859239	1					
ANR	859796	Argument	"""anal.timeout"""		859239	1					
ANR	859797	PrimaryExpression	"""anal.timeout"""		859239	0					
ANR	859798	ExpressionStatement	r_core_anal_all ( core )	8649:3:246236:246258	859239	7	True				
ANR	859799	CallExpression	r_core_anal_all ( core )		859239	0					
ANR	859800	Callee	r_core_anal_all		859239	0					
ANR	859801	Identifier	r_core_anal_all		859239	0					
ANR	859802	ArgumentList	core		859239	1					
ANR	859803	Argument	core		859239	0					
ANR	859804	Identifier	core		859239	0					
ANR	859805	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8650:3:246263:246304	859239	8	True				
ANR	859806	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	859807	Callee	r_print_rowlog_done		859239	0					
ANR	859808	Identifier	r_print_rowlog_done		859239	0					
ANR	859809	ArgumentList	core -> print		859239	1					
ANR	859810	Argument	core -> print		859239	0					
ANR	859811	PtrMemberAccess	core -> print		859239	0					
ANR	859812	Identifier	core		859239	0					
ANR	859813	Identifier	print		859239	1					
ANR	859814	Argument	oldstr		859239	1					
ANR	859815	Identifier	oldstr		859239	0					
ANR	859816	ExpressionStatement	run_pending_anal ( core )	8653:3:246424:246447	859239	9	True				
ANR	859817	CallExpression	run_pending_anal ( core )		859239	0					
ANR	859818	Callee	run_pending_anal		859239	0					
ANR	859819	Identifier	run_pending_anal		859239	0					
ANR	859820	ArgumentList	core		859239	1					
ANR	859821	Argument	core		859239	0					
ANR	859822	Identifier	core		859239	0					
ANR	859823	ExpressionStatement	"dh_orig = core -> dbg -> h ? strdup ( core -> dbg -> h -> name ) : strdup ( ""esil"" )"	8654:3:246452:246530	859239	10	True				
ANR	859824	AssignmentExpression	"dh_orig = core -> dbg -> h ? strdup ( core -> dbg -> h -> name ) : strdup ( ""esil"" )"		859239	0		=			
ANR	859825	Identifier	dh_orig		859239	0					
ANR	859826	ConditionalExpression	"core -> dbg -> h ? strdup ( core -> dbg -> h -> name ) : strdup ( ""esil"" )"		859239	1					
ANR	859827	Condition	core -> dbg -> h		859239	0					
ANR	859828	PtrMemberAccess	core -> dbg -> h		859239	0					
ANR	859829	PtrMemberAccess	core -> dbg		859239	0					
ANR	859830	Identifier	core		859239	0					
ANR	859831	Identifier	dbg		859239	1					
ANR	859832	Identifier	h		859239	1					
ANR	859833	CallExpression	strdup ( core -> dbg -> h -> name )		859239	1					
ANR	859834	Callee	strdup		859239	0					
ANR	859835	Identifier	strdup		859239	0					
ANR	859836	ArgumentList	core -> dbg -> h -> name		859239	1					
ANR	859837	Argument	core -> dbg -> h -> name		859239	0					
ANR	859838	PtrMemberAccess	core -> dbg -> h -> name		859239	0					
ANR	859839	PtrMemberAccess	core -> dbg -> h		859239	0					
ANR	859840	PtrMemberAccess	core -> dbg		859239	0					
ANR	859841	Identifier	core		859239	0					
ANR	859842	Identifier	dbg		859239	1					
ANR	859843	Identifier	h		859239	1					
ANR	859844	Identifier	name		859239	1					
ANR	859845	CallExpression	"strdup ( ""esil"" )"		859239	2					
ANR	859846	Callee	strdup		859239	0					
ANR	859847	Identifier	strdup		859239	0					
ANR	859848	ArgumentList	"""esil"""		859239	1					
ANR	859849	Argument	"""esil"""		859239	0					
ANR	859850	PrimaryExpression	"""esil"""		859239	0					
ANR	859851	IfStatement	if ( core -> io && core -> io -> desc && core -> io -> desc -> plugin && ! core -> io -> desc -> plugin -> isdbg )		859239	11					
ANR	859852	Condition	core -> io && core -> io -> desc && core -> io -> desc -> plugin && ! core -> io -> desc -> plugin -> isdbg	8657:7:246539:246624	859239	0	True				
ANR	859853	AndExpression	core -> io && core -> io -> desc && core -> io -> desc -> plugin && ! core -> io -> desc -> plugin -> isdbg		859239	0		&&			
ANR	859854	PtrMemberAccess	core -> io		859239	0					
ANR	859855	Identifier	core		859239	0					
ANR	859856	Identifier	io		859239	1					
ANR	859857	AndExpression	core -> io -> desc && core -> io -> desc -> plugin && ! core -> io -> desc -> plugin -> isdbg		859239	1		&&			
ANR	859858	PtrMemberAccess	core -> io -> desc		859239	0					
ANR	859859	PtrMemberAccess	core -> io		859239	0					
ANR	859860	Identifier	core		859239	0					
ANR	859861	Identifier	io		859239	1					
ANR	859862	Identifier	desc		859239	1					
ANR	859863	AndExpression	core -> io -> desc -> plugin && ! core -> io -> desc -> plugin -> isdbg		859239	1		&&			
ANR	859864	PtrMemberAccess	core -> io -> desc -> plugin		859239	0					
ANR	859865	PtrMemberAccess	core -> io -> desc		859239	0					
ANR	859866	PtrMemberAccess	core -> io		859239	0					
ANR	859867	Identifier	core		859239	0					
ANR	859868	Identifier	io		859239	1					
ANR	859869	Identifier	desc		859239	1					
ANR	859870	Identifier	plugin		859239	1					
ANR	859871	UnaryOperationExpression	! core -> io -> desc -> plugin -> isdbg		859239	1					
ANR	859872	UnaryOperator	!		859239	0					
ANR	859873	PtrMemberAccess	core -> io -> desc -> plugin -> isdbg		859239	1					
ANR	859874	PtrMemberAccess	core -> io -> desc -> plugin		859239	0					
ANR	859875	PtrMemberAccess	core -> io -> desc		859239	0					
ANR	859876	PtrMemberAccess	core -> io		859239	0					
ANR	859877	Identifier	core		859239	0					
ANR	859878	Identifier	io		859239	1					
ANR	859879	Identifier	desc		859239	1					
ANR	859880	Identifier	plugin		859239	1					
ANR	859881	Identifier	isdbg		859239	1					
ANR	859882	CompoundStatement		114:95:3542:3542	859239	1					
ANR	859883	ExpressionStatement	R_FREE ( dh_orig )	8659:4:246673:246689	859239	0	True				
ANR	859884	CallExpression	R_FREE ( dh_orig )		859239	0					
ANR	859885	Callee	R_FREE		859239	0					
ANR	859886	Identifier	R_FREE		859239	0					
ANR	859887	ArgumentList	dh_orig		859239	1					
ANR	859888	Argument	dh_orig		859239	0					
ANR	859889	Identifier	dh_orig		859239	0					
ANR	859890	IfStatement	if ( r_cons_is_breaked ( ) )		859239	12					
ANR	859891	Condition	r_cons_is_breaked ( )	8661:7:246703:246722	859239	0	True				
ANR	859892	CallExpression	r_cons_is_breaked ( )		859239	0					
ANR	859893	Callee	r_cons_is_breaked		859239	0					
ANR	859894	Identifier	r_cons_is_breaked		859239	0					
ANR	859895	ArgumentList			859239	1					
ANR	859896	CompoundStatement		118:29:3640:3640	859239	1					
ANR	859897	GotoStatement	goto jacuzzi ;	8662:4:246731:246743	859239	0	True				
ANR	859898	Identifier	jacuzzi		859239	0					
ANR	859899	ExpressionStatement	r_cons_clear_line ( 1 )	8664:3:246753:246774	859239	13	True				
ANR	859900	CallExpression	r_cons_clear_line ( 1 )		859239	0					
ANR	859901	Callee	r_cons_clear_line		859239	0					
ANR	859902	Identifier	r_cons_clear_line		859239	0					
ANR	859903	ArgumentList	1		859239	1					
ANR	859904	Argument	1		859239	0					
ANR	859905	PrimaryExpression	1		859239	0					
ANR	859906	IdentifierDeclStatement	"bool cfg_debug = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	8665:3:246779:246838	859239	14	True				
ANR	859907	IdentifierDecl	"cfg_debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		859239	0					
ANR	859908	IdentifierDeclType	bool		859239	0					
ANR	859909	Identifier	cfg_debug		859239	1					
ANR	859910	AssignmentExpression	"cfg_debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		859239	2		=			
ANR	859911	Identifier	cfg_debug		859239	0					
ANR	859912	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		859239	1					
ANR	859913	Callee	r_config_get_i		859239	0					
ANR	859914	Identifier	r_config_get_i		859239	0					
ANR	859915	ArgumentList	core -> config		859239	1					
ANR	859916	Argument	core -> config		859239	0					
ANR	859917	PtrMemberAccess	core -> config		859239	0					
ANR	859918	Identifier	core		859239	0					
ANR	859919	Identifier	config		859239	1					
ANR	859920	Argument	"""cfg.debug"""		859239	1					
ANR	859921	PrimaryExpression	"""cfg.debug"""		859239	0					
ANR	859922	IfStatement	if ( * input == 'a' )		859239	15					
ANR	859923	Condition	* input == 'a'	8666:7:246847:246859	859239	0	True				
ANR	859924	EqualityExpression	* input == 'a'		859239	0		==			
ANR	859925	UnaryOperationExpression	* input		859239	0					
ANR	859926	UnaryOperator	*		859239	0					
ANR	859927	Identifier	input		859239	1					
ANR	859928	PrimaryExpression	'a'		859239	1					
ANR	859929	CompoundStatement		137:4:4393:4444	859239	1					
ANR	859930	IfStatement	"if ( r_str_startswith ( r_config_get ( core -> config , ""bin.lang"" ) , ""go"" ) )"		859239	0					
ANR	859931	Condition	"r_str_startswith ( r_config_get ( core -> config , ""bin.lang"" ) , ""go"" )"	8667:8:246881:246944	859239	0	True				
ANR	859932	CallExpression	"r_str_startswith ( r_config_get ( core -> config , ""bin.lang"" ) , ""go"" )"		859239	0					
ANR	859933	Callee	r_str_startswith		859239	0					
ANR	859934	Identifier	r_str_startswith		859239	0					
ANR	859935	ArgumentList	"r_config_get ( core -> config , ""bin.lang"" )"		859239	1					
ANR	859936	Argument	"r_config_get ( core -> config , ""bin.lang"" )"		859239	0					
ANR	859937	CallExpression	"r_config_get ( core -> config , ""bin.lang"" )"		859239	0					
ANR	859938	Callee	r_config_get		859239	0					
ANR	859939	Identifier	r_config_get		859239	0					
ANR	859940	ArgumentList	core -> config		859239	1					
ANR	859941	Argument	core -> config		859239	0					
ANR	859942	PtrMemberAccess	core -> config		859239	0					
ANR	859943	Identifier	core		859239	0					
ANR	859944	Identifier	config		859239	1					
ANR	859945	Argument	"""bin.lang"""		859239	1					
ANR	859946	PrimaryExpression	"""bin.lang"""		859239	0					
ANR	859947	Argument	"""go"""		859239	1					
ANR	859948	PrimaryExpression	"""go"""		859239	0					
ANR	859949	CompoundStatement		124:74:3862:3862	859239	1					
ANR	859950	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Find function and symbol names from golang binaries (aang)"" )"	8668:5:246954:247053	859239	0	True				
ANR	859951	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Find function and symbol names from golang binaries (aang)"" )"		859239	0		=			
ANR	859952	Identifier	oldstr		859239	0					
ANR	859953	CallExpression	"r_print_rowlog ( core -> print , ""Find function and symbol names from golang binaries (aang)"" )"		859239	1					
ANR	859954	Callee	r_print_rowlog		859239	0					
ANR	859955	Identifier	r_print_rowlog		859239	0					
ANR	859956	ArgumentList	core -> print		859239	1					
ANR	859957	Argument	core -> print		859239	0					
ANR	859958	PtrMemberAccess	core -> print		859239	0					
ANR	859959	Identifier	core		859239	0					
ANR	859960	Identifier	print		859239	1					
ANR	859961	Argument	"""Find function and symbol names from golang binaries (aang)"""		859239	1					
ANR	859962	PrimaryExpression	"""Find function and symbol names from golang binaries (aang)"""		859239	0					
ANR	859963	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8669:5:247060:247101	859239	1	True				
ANR	859964	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	859965	Callee	r_print_rowlog_done		859239	0					
ANR	859966	Identifier	r_print_rowlog_done		859239	0					
ANR	859967	ArgumentList	core -> print		859239	1					
ANR	859968	Argument	core -> print		859239	0					
ANR	859969	PtrMemberAccess	core -> print		859239	0					
ANR	859970	Identifier	core		859239	0					
ANR	859971	Identifier	print		859239	1					
ANR	859972	Argument	oldstr		859239	1					
ANR	859973	Identifier	oldstr		859239	0					
ANR	859974	ExpressionStatement	r_core_anal_autoname_all_golang_fcns ( core )	8670:5:247108:247151	859239	2	True				
ANR	859975	CallExpression	r_core_anal_autoname_all_golang_fcns ( core )		859239	0					
ANR	859976	Callee	r_core_anal_autoname_all_golang_fcns		859239	0					
ANR	859977	Identifier	r_core_anal_autoname_all_golang_fcns		859239	0					
ANR	859978	ArgumentList	core		859239	1					
ANR	859979	Argument	core		859239	0					
ANR	859980	Identifier	core		859239	0					
ANR	859981	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Analyze all flags starting with sym.go. (aF @@ sym.go.*)"" )"	8671:5:247158:247255	859239	3	True				
ANR	859982	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Analyze all flags starting with sym.go. (aF @@ sym.go.*)"" )"		859239	0		=			
ANR	859983	Identifier	oldstr		859239	0					
ANR	859984	CallExpression	"r_print_rowlog ( core -> print , ""Analyze all flags starting with sym.go. (aF @@ sym.go.*)"" )"		859239	1					
ANR	859985	Callee	r_print_rowlog		859239	0					
ANR	859986	Identifier	r_print_rowlog		859239	0					
ANR	859987	ArgumentList	core -> print		859239	1					
ANR	859988	Argument	core -> print		859239	0					
ANR	859989	PtrMemberAccess	core -> print		859239	0					
ANR	859990	Identifier	core		859239	0					
ANR	859991	Identifier	print		859239	1					
ANR	859992	Argument	"""Analyze all flags starting with sym.go. (aF @@ sym.go.*)"""		859239	1					
ANR	859993	PrimaryExpression	"""Analyze all flags starting with sym.go. (aF @@ sym.go.*)"""		859239	0					
ANR	859994	ExpressionStatement	"r_core_cmd0 ( core , ""aF @@ sym.go.*"" )"	8672:5:247262:247298	859239	4	True				
ANR	859995	CallExpression	"r_core_cmd0 ( core , ""aF @@ sym.go.*"" )"		859239	0					
ANR	859996	Callee	r_core_cmd0		859239	0					
ANR	859997	Identifier	r_core_cmd0		859239	0					
ANR	859998	ArgumentList	core		859239	1					
ANR	859999	Argument	core		859239	0					
ANR	860000	Identifier	core		859239	0					
ANR	860001	Argument	"""aF @@ sym.go.*"""		859239	1					
ANR	860002	PrimaryExpression	"""aF @@ sym.go.*"""		859239	0					
ANR	860003	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8673:5:247305:247346	859239	5	True				
ANR	860004	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860005	Callee	r_print_rowlog_done		859239	0					
ANR	860006	Identifier	r_print_rowlog_done		859239	0					
ANR	860007	ArgumentList	core -> print		859239	1					
ANR	860008	Argument	core -> print		859239	0					
ANR	860009	PtrMemberAccess	core -> print		859239	0					
ANR	860010	Identifier	core		859239	0					
ANR	860011	Identifier	print		859239	1					
ANR	860012	Argument	oldstr		859239	1					
ANR	860013	Identifier	oldstr		859239	0					
ANR	860014	IfStatement	if ( ! cfg_debug )		859239	1					
ANR	860015	Condition	! cfg_debug	8675:8:247362:247371	859239	0	True				
ANR	860016	UnaryOperationExpression	! cfg_debug		859239	0					
ANR	860017	UnaryOperator	!		859239	0					
ANR	860018	Identifier	cfg_debug		859239	1					
ANR	860019	CompoundStatement		132:20:4289:4289	859239	1					
ANR	860020	IfStatement	"if ( dh_orig && strcmp ( dh_orig , ""esil"" ) )"		859239	0					
ANR	860021	Condition	"dh_orig && strcmp ( dh_orig , ""esil"" )"	8676:9:247385:247419	859239	0	True				
ANR	860022	AndExpression	"dh_orig && strcmp ( dh_orig , ""esil"" )"		859239	0		&&			
ANR	860023	Identifier	dh_orig		859239	0					
ANR	860024	CallExpression	"strcmp ( dh_orig , ""esil"" )"		859239	1					
ANR	860025	Callee	strcmp		859239	0					
ANR	860026	Identifier	strcmp		859239	0					
ANR	860027	ArgumentList	dh_orig		859239	1					
ANR	860028	Argument	dh_orig		859239	0					
ANR	860029	Identifier	dh_orig		859239	0					
ANR	860030	Argument	"""esil"""		859239	1					
ANR	860031	PrimaryExpression	"""esil"""		859239	0					
ANR	860032	CompoundStatement		133:46:4337:4337	859239	1					
ANR	860033	ExpressionStatement	"r_core_cmd0 ( core , ""dL esil"" )"	8677:6:247430:247459	859239	0	True				
ANR	860034	CallExpression	"r_core_cmd0 ( core , ""dL esil"" )"		859239	0					
ANR	860035	Callee	r_core_cmd0		859239	0					
ANR	860036	Identifier	r_core_cmd0		859239	0					
ANR	860037	ArgumentList	core		859239	1					
ANR	860038	Argument	core		859239	0					
ANR	860039	Identifier	core		859239	0					
ANR	860040	Argument	"""dL esil"""		859239	1					
ANR	860041	PrimaryExpression	"""dL esil"""		859239	0					
ANR	860042	IdentifierDeclStatement	"int c = r_config_get_i ( core -> config , ""anal.calls"" ) ;"	8680:4:247478:247529	859239	2	True				
ANR	860043	IdentifierDecl	"c = r_config_get_i ( core -> config , ""anal.calls"" )"		859239	0					
ANR	860044	IdentifierDeclType	int		859239	0					
ANR	860045	Identifier	c		859239	1					
ANR	860046	AssignmentExpression	"c = r_config_get_i ( core -> config , ""anal.calls"" )"		859239	2		=			
ANR	860047	Identifier	c		859239	0					
ANR	860048	CallExpression	"r_config_get_i ( core -> config , ""anal.calls"" )"		859239	1					
ANR	860049	Callee	r_config_get_i		859239	0					
ANR	860050	Identifier	r_config_get_i		859239	0					
ANR	860051	ArgumentList	core -> config		859239	1					
ANR	860052	Argument	core -> config		859239	0					
ANR	860053	PtrMemberAccess	core -> config		859239	0					
ANR	860054	Identifier	core		859239	0					
ANR	860055	Identifier	config		859239	1					
ANR	860056	Argument	"""anal.calls"""		859239	1					
ANR	860057	PrimaryExpression	"""anal.calls"""		859239	0					
ANR	860058	ExpressionStatement	"r_config_set_i ( core -> config , ""anal.calls"" , 1 )"	8681:4:247535:247581	859239	3	True				
ANR	860059	CallExpression	"r_config_set_i ( core -> config , ""anal.calls"" , 1 )"		859239	0					
ANR	860060	Callee	r_config_set_i		859239	0					
ANR	860061	Identifier	r_config_set_i		859239	0					
ANR	860062	ArgumentList	core -> config		859239	1					
ANR	860063	Argument	core -> config		859239	0					
ANR	860064	PtrMemberAccess	core -> config		859239	0					
ANR	860065	Identifier	core		859239	0					
ANR	860066	Identifier	config		859239	1					
ANR	860067	Argument	"""anal.calls"""		859239	1					
ANR	860068	PrimaryExpression	"""anal.calls"""		859239	0					
ANR	860069	Argument	1		859239	2					
ANR	860070	PrimaryExpression	1		859239	0					
ANR	860071	ExpressionStatement	"r_core_cmd0 ( core , ""s $S"" )"	8682:4:247587:247613	859239	4	True				
ANR	860072	CallExpression	"r_core_cmd0 ( core , ""s $S"" )"		859239	0					
ANR	860073	Callee	r_core_cmd0		859239	0					
ANR	860074	Identifier	r_core_cmd0		859239	0					
ANR	860075	ArgumentList	core		859239	1					
ANR	860076	Argument	core		859239	0					
ANR	860077	Identifier	core		859239	0					
ANR	860078	Argument	"""s $S"""		859239	1					
ANR	860079	PrimaryExpression	"""s $S"""		859239	0					
ANR	860080	IfStatement	if ( r_cons_is_breaked ( ) )		859239	5					
ANR	860081	Condition	r_cons_is_breaked ( )	8683:8:247623:247642	859239	0	True				
ANR	860082	CallExpression	r_cons_is_breaked ( )		859239	0					
ANR	860083	Callee	r_cons_is_breaked		859239	0					
ANR	860084	Identifier	r_cons_is_breaked		859239	0					
ANR	860085	ArgumentList			859239	1					
ANR	860086	CompoundStatement		140:30:4560:4560	859239	1					
ANR	860087	GotoStatement	goto jacuzzi ;	8684:5:247652:247664	859239	0	True				
ANR	860088	Identifier	jacuzzi		859239	0					
ANR	860089	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Analyze function calls (aac)"" )"	8687:4:247677:247746	859239	6	True				
ANR	860090	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Analyze function calls (aac)"" )"		859239	0		=			
ANR	860091	Identifier	oldstr		859239	0					
ANR	860092	CallExpression	"r_print_rowlog ( core -> print , ""Analyze function calls (aac)"" )"		859239	1					
ANR	860093	Callee	r_print_rowlog		859239	0					
ANR	860094	Identifier	r_print_rowlog		859239	0					
ANR	860095	ArgumentList	core -> print		859239	1					
ANR	860096	Argument	core -> print		859239	0					
ANR	860097	PtrMemberAccess	core -> print		859239	0					
ANR	860098	Identifier	core		859239	0					
ANR	860099	Identifier	print		859239	1					
ANR	860100	Argument	"""Analyze function calls (aac)"""		859239	1					
ANR	860101	PrimaryExpression	"""Analyze function calls (aac)"""		859239	0					
ANR	860102	ExpressionStatement	"( void ) cmd_anal_calls ( core , """" , false , false )"	8688:4:247752:247797	859239	7	True				
ANR	860103	CastExpression	"( void ) cmd_anal_calls ( core , """" , false , false )"		859239	0					
ANR	860104	CastTarget	void		859239	0					
ANR	860105	CallExpression	"cmd_anal_calls ( core , """" , false , false )"		859239	1					
ANR	860106	Callee	cmd_anal_calls		859239	0					
ANR	860107	Identifier	cmd_anal_calls		859239	0					
ANR	860108	ArgumentList	core		859239	1					
ANR	860109	Argument	core		859239	0					
ANR	860110	Identifier	core		859239	0					
ANR	860111	Argument	""""""		859239	1					
ANR	860112	PrimaryExpression	""""""		859239	0					
ANR	860113	Argument	false		859239	2					
ANR	860114	Identifier	false		859239	0					
ANR	860115	Argument	false		859239	3					
ANR	860116	Identifier	false		859239	0					
ANR	860117	ExpressionStatement	"r_core_seek ( core , curseek , 1 )"	8689:4:247812:247842	859239	8	True				
ANR	860118	CallExpression	"r_core_seek ( core , curseek , 1 )"		859239	0					
ANR	860119	Callee	r_core_seek		859239	0					
ANR	860120	Identifier	r_core_seek		859239	0					
ANR	860121	ArgumentList	core		859239	1					
ANR	860122	Argument	core		859239	0					
ANR	860123	Identifier	core		859239	0					
ANR	860124	Argument	curseek		859239	1					
ANR	860125	Identifier	curseek		859239	0					
ANR	860126	Argument	1		859239	2					
ANR	860127	PrimaryExpression	1		859239	0					
ANR	860128	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8692:4:247979:248020	859239	9	True				
ANR	860129	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860130	Callee	r_print_rowlog_done		859239	0					
ANR	860131	Identifier	r_print_rowlog_done		859239	0					
ANR	860132	ArgumentList	core -> print		859239	1					
ANR	860133	Argument	core -> print		859239	0					
ANR	860134	PtrMemberAccess	core -> print		859239	0					
ANR	860135	Identifier	core		859239	0					
ANR	860136	Identifier	print		859239	1					
ANR	860137	Argument	oldstr		859239	1					
ANR	860138	Identifier	oldstr		859239	0					
ANR	860139	IfStatement	if ( r_cons_is_breaked ( ) )		859239	10					
ANR	860140	Condition	r_cons_is_breaked ( )	8693:8:248030:248049	859239	0	True				
ANR	860141	CallExpression	r_cons_is_breaked ( )		859239	0					
ANR	860142	Callee	r_cons_is_breaked		859239	0					
ANR	860143	Identifier	r_cons_is_breaked		859239	0					
ANR	860144	ArgumentList			859239	1					
ANR	860145	CompoundStatement		150:30:4967:4967	859239	1					
ANR	860146	GotoStatement	goto jacuzzi ;	8694:5:248059:248071	859239	0	True				
ANR	860147	Identifier	jacuzzi		859239	0					
ANR	860148	IfStatement	if ( is_unknown_file ( core ) )		859239	11					
ANR	860149	Condition	is_unknown_file ( core )	8697:8:248088:248109	859239	0	True				
ANR	860150	CallExpression	is_unknown_file ( core )		859239	0					
ANR	860151	Callee	is_unknown_file		859239	0					
ANR	860152	Identifier	is_unknown_file		859239	0					
ANR	860153	ArgumentList	core		859239	1					
ANR	860154	Argument	core		859239	0					
ANR	860155	Identifier	core		859239	0					
ANR	860156	CompoundStatement		154:32:5027:5027	859239	1					
ANR	860157	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""find and analyze function preludes (aap)"" )"	8698:5:248119:248200	859239	0	True				
ANR	860158	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""find and analyze function preludes (aap)"" )"		859239	0		=			
ANR	860159	Identifier	oldstr		859239	0					
ANR	860160	CallExpression	"r_print_rowlog ( core -> print , ""find and analyze function preludes (aap)"" )"		859239	1					
ANR	860161	Callee	r_print_rowlog		859239	0					
ANR	860162	Identifier	r_print_rowlog		859239	0					
ANR	860163	ArgumentList	core -> print		859239	1					
ANR	860164	Argument	core -> print		859239	0					
ANR	860165	PtrMemberAccess	core -> print		859239	0					
ANR	860166	Identifier	core		859239	0					
ANR	860167	Identifier	print		859239	1					
ANR	860168	Argument	"""find and analyze function preludes (aap)"""		859239	1					
ANR	860169	PrimaryExpression	"""find and analyze function preludes (aap)"""		859239	0					
ANR	860170	ExpressionStatement	"( void ) r_core_search_preludes ( core , false )"	8699:5:248207:248249	859239	1	True				
ANR	860171	CastExpression	"( void ) r_core_search_preludes ( core , false )"		859239	0					
ANR	860172	CastTarget	void		859239	0					
ANR	860173	CallExpression	"r_core_search_preludes ( core , false )"		859239	1					
ANR	860174	Callee	r_core_search_preludes		859239	0					
ANR	860175	Identifier	r_core_search_preludes		859239	0					
ANR	860176	ArgumentList	core		859239	1					
ANR	860177	Argument	core		859239	0					
ANR	860178	Identifier	core		859239	0					
ANR	860179	Argument	false		859239	1					
ANR	860180	Identifier	false		859239	0					
ANR	860181	ExpressionStatement	didAap = true	8700:5:248265:248278	859239	2	True				
ANR	860182	AssignmentExpression	didAap = true		859239	0		=			
ANR	860183	Identifier	didAap		859239	0					
ANR	860184	Identifier	true		859239	1					
ANR	860185	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8701:5:248285:248326	859239	3	True				
ANR	860186	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860187	Callee	r_print_rowlog_done		859239	0					
ANR	860188	Identifier	r_print_rowlog_done		859239	0					
ANR	860189	ArgumentList	core -> print		859239	1					
ANR	860190	Argument	core -> print		859239	0					
ANR	860191	PtrMemberAccess	core -> print		859239	0					
ANR	860192	Identifier	core		859239	0					
ANR	860193	Identifier	print		859239	1					
ANR	860194	Argument	oldstr		859239	1					
ANR	860195	Identifier	oldstr		859239	0					
ANR	860196	IfStatement	if ( r_cons_is_breaked ( ) )		859239	4					
ANR	860197	Condition	r_cons_is_breaked ( )	8702:9:248337:248356	859239	0	True				
ANR	860198	CallExpression	r_cons_is_breaked ( )		859239	0					
ANR	860199	Callee	r_cons_is_breaked		859239	0					
ANR	860200	Identifier	r_cons_is_breaked		859239	0					
ANR	860201	ArgumentList			859239	1					
ANR	860202	CompoundStatement		159:31:5274:5274	859239	1					
ANR	860203	GotoStatement	goto jacuzzi ;	8703:6:248367:248379	859239	0	True				
ANR	860204	Identifier	jacuzzi		859239	0					
ANR	860205	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Analyze len bytes of instructions for references (aar)"" )"	8707:4:248399:248494	859239	12	True				
ANR	860206	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Analyze len bytes of instructions for references (aar)"" )"		859239	0		=			
ANR	860207	Identifier	oldstr		859239	0					
ANR	860208	CallExpression	"r_print_rowlog ( core -> print , ""Analyze len bytes of instructions for references (aar)"" )"		859239	1					
ANR	860209	Callee	r_print_rowlog		859239	0					
ANR	860210	Identifier	r_print_rowlog		859239	0					
ANR	860211	ArgumentList	core -> print		859239	1					
ANR	860212	Argument	core -> print		859239	0					
ANR	860213	PtrMemberAccess	core -> print		859239	0					
ANR	860214	Identifier	core		859239	0					
ANR	860215	Identifier	print		859239	1					
ANR	860216	Argument	"""Analyze len bytes of instructions for references (aar)"""		859239	1					
ANR	860217	PrimaryExpression	"""Analyze len bytes of instructions for references (aar)"""		859239	0					
ANR	860218	ExpressionStatement	"( void ) r_core_anal_refs ( core , """" )"	8708:4:248500:248533	859239	13	True				
ANR	860219	CastExpression	"( void ) r_core_anal_refs ( core , """" )"		859239	0					
ANR	860220	CastTarget	void		859239	0					
ANR	860221	CallExpression	"r_core_anal_refs ( core , """" )"		859239	1					
ANR	860222	Callee	r_core_anal_refs		859239	0					
ANR	860223	Identifier	r_core_anal_refs		859239	0					
ANR	860224	ArgumentList	core		859239	1					
ANR	860225	Argument	core		859239	0					
ANR	860226	Identifier	core		859239	0					
ANR	860227	Argument	""""""		859239	1					
ANR	860228	PrimaryExpression	""""""		859239	0					
ANR	860229	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8709:4:248548:248589	859239	14	True				
ANR	860230	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860231	Callee	r_print_rowlog_done		859239	0					
ANR	860232	Identifier	r_print_rowlog_done		859239	0					
ANR	860233	ArgumentList	core -> print		859239	1					
ANR	860234	Argument	core -> print		859239	0					
ANR	860235	PtrMemberAccess	core -> print		859239	0					
ANR	860236	Identifier	core		859239	0					
ANR	860237	Identifier	print		859239	1					
ANR	860238	Argument	oldstr		859239	1					
ANR	860239	Identifier	oldstr		859239	0					
ANR	860240	IfStatement	if ( r_cons_is_breaked ( ) )		859239	15					
ANR	860241	Condition	r_cons_is_breaked ( )	8710:8:248599:248618	859239	0	True				
ANR	860242	CallExpression	r_cons_is_breaked ( )		859239	0					
ANR	860243	Callee	r_cons_is_breaked		859239	0					
ANR	860244	Identifier	r_cons_is_breaked		859239	0					
ANR	860245	ArgumentList			859239	1					
ANR	860246	CompoundStatement		167:30:5536:5536	859239	1					
ANR	860247	GotoStatement	goto jacuzzi ;	8711:5:248628:248640	859239	0	True				
ANR	860248	Identifier	jacuzzi		859239	0					
ANR	860249	ExpressionStatement	run_pending_anal ( core )	8713:4:248652:248675	859239	16	True				
ANR	860250	CallExpression	run_pending_anal ( core )		859239	0					
ANR	860251	Callee	run_pending_anal		859239	0					
ANR	860252	Identifier	run_pending_anal		859239	0					
ANR	860253	ArgumentList	core		859239	1					
ANR	860254	Argument	core		859239	0					
ANR	860255	Identifier	core		859239	0					
ANR	860256	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Check for objc references"" )"	8714:4:248681:248747	859239	17	True				
ANR	860257	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Check for objc references"" )"		859239	0		=			
ANR	860258	Identifier	oldstr		859239	0					
ANR	860259	CallExpression	"r_print_rowlog ( core -> print , ""Check for objc references"" )"		859239	1					
ANR	860260	Callee	r_print_rowlog		859239	0					
ANR	860261	Identifier	r_print_rowlog		859239	0					
ANR	860262	ArgumentList	core -> print		859239	1					
ANR	860263	Argument	core -> print		859239	0					
ANR	860264	PtrMemberAccess	core -> print		859239	0					
ANR	860265	Identifier	core		859239	0					
ANR	860266	Identifier	print		859239	1					
ANR	860267	Argument	"""Check for objc references"""		859239	1					
ANR	860268	PrimaryExpression	"""Check for objc references"""		859239	0					
ANR	860269	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8715:4:248753:248794	859239	18	True				
ANR	860270	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860271	Callee	r_print_rowlog_done		859239	0					
ANR	860272	Identifier	r_print_rowlog_done		859239	0					
ANR	860273	ArgumentList	core -> print		859239	1					
ANR	860274	Argument	core -> print		859239	0					
ANR	860275	PtrMemberAccess	core -> print		859239	0					
ANR	860276	Identifier	core		859239	0					
ANR	860277	Identifier	print		859239	1					
ANR	860278	Argument	oldstr		859239	1					
ANR	860279	Identifier	oldstr		859239	0					
ANR	860280	ExpressionStatement	"cmd_anal_objc ( core , input + 1 , true )"	8716:4:248800:248837	859239	19	True				
ANR	860281	CallExpression	"cmd_anal_objc ( core , input + 1 , true )"		859239	0					
ANR	860282	Callee	cmd_anal_objc		859239	0					
ANR	860283	Identifier	cmd_anal_objc		859239	0					
ANR	860284	ArgumentList	core		859239	1					
ANR	860285	Argument	core		859239	0					
ANR	860286	Identifier	core		859239	0					
ANR	860287	Argument	input + 1		859239	1					
ANR	860288	AdditiveExpression	input + 1		859239	0		+			
ANR	860289	Identifier	input		859239	0					
ANR	860290	PrimaryExpression	1		859239	1					
ANR	860291	Argument	true		859239	2					
ANR	860292	Identifier	true		859239	0					
ANR	860293	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Check for vtables"" )"	8717:4:248843:248901	859239	20	True				
ANR	860294	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Check for vtables"" )"		859239	0		=			
ANR	860295	Identifier	oldstr		859239	0					
ANR	860296	CallExpression	"r_print_rowlog ( core -> print , ""Check for vtables"" )"		859239	1					
ANR	860297	Callee	r_print_rowlog		859239	0					
ANR	860298	Identifier	r_print_rowlog		859239	0					
ANR	860299	ArgumentList	core -> print		859239	1					
ANR	860300	Argument	core -> print		859239	0					
ANR	860301	PtrMemberAccess	core -> print		859239	0					
ANR	860302	Identifier	core		859239	0					
ANR	860303	Identifier	print		859239	1					
ANR	860304	Argument	"""Check for vtables"""		859239	1					
ANR	860305	PrimaryExpression	"""Check for vtables"""		859239	0					
ANR	860306	ExpressionStatement	"r_core_cmd0 ( core , ""avrr"" )"	8718:4:248907:248933	859239	21	True				
ANR	860307	CallExpression	"r_core_cmd0 ( core , ""avrr"" )"		859239	0					
ANR	860308	Callee	r_core_cmd0		859239	0					
ANR	860309	Identifier	r_core_cmd0		859239	0					
ANR	860310	ArgumentList	core		859239	1					
ANR	860311	Argument	core		859239	0					
ANR	860312	Identifier	core		859239	0					
ANR	860313	Argument	"""avrr"""		859239	1					
ANR	860314	PrimaryExpression	"""avrr"""		859239	0					
ANR	860315	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8719:4:248939:248980	859239	22	True				
ANR	860316	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860317	Callee	r_print_rowlog_done		859239	0					
ANR	860318	Identifier	r_print_rowlog_done		859239	0					
ANR	860319	ArgumentList	core -> print		859239	1					
ANR	860320	Argument	core -> print		859239	0					
ANR	860321	PtrMemberAccess	core -> print		859239	0					
ANR	860322	Identifier	core		859239	0					
ANR	860323	Identifier	print		859239	1					
ANR	860324	Argument	oldstr		859239	1					
ANR	860325	Identifier	oldstr		859239	0					
ANR	860326	ExpressionStatement	"r_config_set_i ( core -> config , ""anal.calls"" , c )"	8720:4:248986:249032	859239	23	True				
ANR	860327	CallExpression	"r_config_set_i ( core -> config , ""anal.calls"" , c )"		859239	0					
ANR	860328	Callee	r_config_set_i		859239	0					
ANR	860329	Identifier	r_config_set_i		859239	0					
ANR	860330	ArgumentList	core -> config		859239	1					
ANR	860331	Argument	core -> config		859239	0					
ANR	860332	PtrMemberAccess	core -> config		859239	0					
ANR	860333	Identifier	core		859239	0					
ANR	860334	Identifier	config		859239	1					
ANR	860335	Argument	"""anal.calls"""		859239	1					
ANR	860336	PrimaryExpression	"""anal.calls"""		859239	0					
ANR	860337	Argument	c		859239	2					
ANR	860338	Identifier	c		859239	0					
ANR	860339	IfStatement	if ( r_cons_is_breaked ( ) )		859239	24					
ANR	860340	Condition	r_cons_is_breaked ( )	8721:8:249042:249061	859239	0	True				
ANR	860341	CallExpression	r_cons_is_breaked ( )		859239	0					
ANR	860342	Callee	r_cons_is_breaked		859239	0					
ANR	860343	Identifier	r_cons_is_breaked		859239	0					
ANR	860344	ArgumentList			859239	1					
ANR	860345	CompoundStatement		178:30:5979:5979	859239	1					
ANR	860346	GotoStatement	goto jacuzzi ;	8722:5:249071:249083	859239	0	True				
ANR	860347	Identifier	jacuzzi		859239	0					
ANR	860348	IfStatement	"if ( ! r_str_startswith ( r_config_get ( core -> config , ""asm.arch"" ) , ""x86"" ) )"		859239	25					
ANR	860349	Condition	"! r_str_startswith ( r_config_get ( core -> config , ""asm.arch"" ) , ""x86"" )"	8724:8:249099:249164	859239	0	True				
ANR	860350	UnaryOperationExpression	"! r_str_startswith ( r_config_get ( core -> config , ""asm.arch"" ) , ""x86"" )"		859239	0					
ANR	860351	UnaryOperator	!		859239	0					
ANR	860352	CallExpression	"r_str_startswith ( r_config_get ( core -> config , ""asm.arch"" ) , ""x86"" )"		859239	1					
ANR	860353	Callee	r_str_startswith		859239	0					
ANR	860354	Identifier	r_str_startswith		859239	0					
ANR	860355	ArgumentList	"r_config_get ( core -> config , ""asm.arch"" )"		859239	1					
ANR	860356	Argument	"r_config_get ( core -> config , ""asm.arch"" )"		859239	0					
ANR	860357	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		859239	0					
ANR	860358	Callee	r_config_get		859239	0					
ANR	860359	Identifier	r_config_get		859239	0					
ANR	860360	ArgumentList	core -> config		859239	1					
ANR	860361	Argument	core -> config		859239	0					
ANR	860362	PtrMemberAccess	core -> config		859239	0					
ANR	860363	Identifier	core		859239	0					
ANR	860364	Identifier	config		859239	1					
ANR	860365	Argument	"""asm.arch"""		859239	1					
ANR	860366	PrimaryExpression	"""asm.arch"""		859239	0					
ANR	860367	Argument	"""x86"""		859239	1					
ANR	860368	PrimaryExpression	"""x86"""		859239	0					
ANR	860369	CompoundStatement		183:5:6121:6178	859239	1					
ANR	860370	ExpressionStatement	"r_core_cmd0 ( core , ""aav"" )"	8725:5:249174:249199	859239	0	True				
ANR	860371	CallExpression	"r_core_cmd0 ( core , ""aav"" )"		859239	0					
ANR	860372	Callee	r_core_cmd0		859239	0					
ANR	860373	Identifier	r_core_cmd0		859239	0					
ANR	860374	ArgumentList	core		859239	1					
ANR	860375	Argument	core		859239	0					
ANR	860376	Identifier	core		859239	0					
ANR	860377	Argument	"""aav"""		859239	1					
ANR	860378	PrimaryExpression	"""aav"""		859239	0					
ANR	860379	IdentifierDeclStatement	"bool ioCache = r_config_get_i ( core -> config , ""io.pcache"" ) ;"	8726:5:249206:249263	859239	1	True				
ANR	860380	IdentifierDecl	"ioCache = r_config_get_i ( core -> config , ""io.pcache"" )"		859239	0					
ANR	860381	IdentifierDeclType	bool		859239	0					
ANR	860382	Identifier	ioCache		859239	1					
ANR	860383	AssignmentExpression	"ioCache = r_config_get_i ( core -> config , ""io.pcache"" )"		859239	2		=			
ANR	860384	Identifier	ioCache		859239	0					
ANR	860385	CallExpression	"r_config_get_i ( core -> config , ""io.pcache"" )"		859239	1					
ANR	860386	Callee	r_config_get_i		859239	0					
ANR	860387	Identifier	r_config_get_i		859239	0					
ANR	860388	ArgumentList	core -> config		859239	1					
ANR	860389	Argument	core -> config		859239	0					
ANR	860390	PtrMemberAccess	core -> config		859239	0					
ANR	860391	Identifier	core		859239	0					
ANR	860392	Identifier	config		859239	1					
ANR	860393	Argument	"""io.pcache"""		859239	1					
ANR	860394	PrimaryExpression	"""io.pcache"""		859239	0					
ANR	860395	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache"" , 1 )"	8727:5:249270:249315	859239	2	True				
ANR	860396	CallExpression	"r_config_set_i ( core -> config , ""io.pcache"" , 1 )"		859239	0					
ANR	860397	Callee	r_config_set_i		859239	0					
ANR	860398	Identifier	r_config_set_i		859239	0					
ANR	860399	ArgumentList	core -> config		859239	1					
ANR	860400	Argument	core -> config		859239	0					
ANR	860401	PtrMemberAccess	core -> config		859239	0					
ANR	860402	Identifier	core		859239	0					
ANR	860403	Identifier	config		859239	1					
ANR	860404	Argument	"""io.pcache"""		859239	1					
ANR	860405	PrimaryExpression	"""io.pcache"""		859239	0					
ANR	860406	Argument	1		859239	2					
ANR	860407	PrimaryExpression	1		859239	0					
ANR	860408	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Emulate code to find computed references (aae)"" )"	8728:5:249322:249409	859239	3	True				
ANR	860409	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Emulate code to find computed references (aae)"" )"		859239	0		=			
ANR	860410	Identifier	oldstr		859239	0					
ANR	860411	CallExpression	"r_print_rowlog ( core -> print , ""Emulate code to find computed references (aae)"" )"		859239	1					
ANR	860412	Callee	r_print_rowlog		859239	0					
ANR	860413	Identifier	r_print_rowlog		859239	0					
ANR	860414	ArgumentList	core -> print		859239	1					
ANR	860415	Argument	core -> print		859239	0					
ANR	860416	PtrMemberAccess	core -> print		859239	0					
ANR	860417	Identifier	core		859239	0					
ANR	860418	Identifier	print		859239	1					
ANR	860419	Argument	"""Emulate code to find computed references (aae)"""		859239	1					
ANR	860420	PrimaryExpression	"""Emulate code to find computed references (aae)"""		859239	0					
ANR	860421	ExpressionStatement	"r_core_cmd0 ( core , ""aae"" )"	8729:5:249416:249441	859239	4	True				
ANR	860422	CallExpression	"r_core_cmd0 ( core , ""aae"" )"		859239	0					
ANR	860423	Callee	r_core_cmd0		859239	0					
ANR	860424	Identifier	r_core_cmd0		859239	0					
ANR	860425	ArgumentList	core		859239	1					
ANR	860426	Argument	core		859239	0					
ANR	860427	Identifier	core		859239	0					
ANR	860428	Argument	"""aae"""		859239	1					
ANR	860429	PrimaryExpression	"""aae"""		859239	0					
ANR	860430	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8730:5:249448:249489	859239	5	True				
ANR	860431	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860432	Callee	r_print_rowlog_done		859239	0					
ANR	860433	Identifier	r_print_rowlog_done		859239	0					
ANR	860434	ArgumentList	core -> print		859239	1					
ANR	860435	Argument	core -> print		859239	0					
ANR	860436	PtrMemberAccess	core -> print		859239	0					
ANR	860437	Identifier	core		859239	0					
ANR	860438	Identifier	print		859239	1					
ANR	860439	Argument	oldstr		859239	1					
ANR	860440	Identifier	oldstr		859239	0					
ANR	860441	IfStatement	if ( ! ioCache )		859239	6					
ANR	860442	Condition	! ioCache	8731:9:249500:249507	859239	0	True				
ANR	860443	UnaryOperationExpression	! ioCache		859239	0					
ANR	860444	UnaryOperator	!		859239	0					
ANR	860445	Identifier	ioCache		859239	1					
ANR	860446	CompoundStatement		188:19:6425:6425	859239	1					
ANR	860447	ExpressionStatement	"r_core_cmd0 ( core , ""wc-*"" )"	8732:6:249518:249544	859239	0	True				
ANR	860448	CallExpression	"r_core_cmd0 ( core , ""wc-*"" )"		859239	0					
ANR	860449	Callee	r_core_cmd0		859239	0					
ANR	860450	Identifier	r_core_cmd0		859239	0					
ANR	860451	ArgumentList	core		859239	1					
ANR	860452	Argument	core		859239	0					
ANR	860453	Identifier	core		859239	0					
ANR	860454	Argument	"""wc-*"""		859239	1					
ANR	860455	PrimaryExpression	"""wc-*"""		859239	0					
ANR	860456	ExpressionStatement	"r_config_set_i ( core -> config , ""io.pcache"" , ioCache )"	8734:5:249558:249609	859239	7	True				
ANR	860457	CallExpression	"r_config_set_i ( core -> config , ""io.pcache"" , ioCache )"		859239	0					
ANR	860458	Callee	r_config_set_i		859239	0					
ANR	860459	Identifier	r_config_set_i		859239	0					
ANR	860460	ArgumentList	core -> config		859239	1					
ANR	860461	Argument	core -> config		859239	0					
ANR	860462	PtrMemberAccess	core -> config		859239	0					
ANR	860463	Identifier	core		859239	0					
ANR	860464	Identifier	config		859239	1					
ANR	860465	Argument	"""io.pcache"""		859239	1					
ANR	860466	PrimaryExpression	"""io.pcache"""		859239	0					
ANR	860467	Argument	ioCache		859239	2					
ANR	860468	Identifier	ioCache		859239	0					
ANR	860469	IfStatement	if ( r_cons_is_breaked ( ) )		859239	8					
ANR	860470	Condition	r_cons_is_breaked ( )	8735:9:249620:249639	859239	0	True				
ANR	860471	CallExpression	r_cons_is_breaked ( )		859239	0					
ANR	860472	Callee	r_cons_is_breaked		859239	0					
ANR	860473	Identifier	r_cons_is_breaked		859239	0					
ANR	860474	ArgumentList			859239	1					
ANR	860475	CompoundStatement		192:31:6557:6557	859239	1					
ANR	860476	GotoStatement	goto jacuzzi ;	8736:6:249650:249662	859239	0	True				
ANR	860477	Identifier	jacuzzi		859239	0					
ANR	860478	IfStatement	"if ( r_config_get_i ( core -> config , ""anal.autoname"" ) )"		859239	26					
ANR	860479	Condition	"r_config_get_i ( core -> config , ""anal.autoname"" )"	8739:8:249685:249730	859239	0	True				
ANR	860480	CallExpression	"r_config_get_i ( core -> config , ""anal.autoname"" )"		859239	0					
ANR	860481	Callee	r_config_get_i		859239	0					
ANR	860482	Identifier	r_config_get_i		859239	0					
ANR	860483	ArgumentList	core -> config		859239	1					
ANR	860484	Argument	core -> config		859239	0					
ANR	860485	PtrMemberAccess	core -> config		859239	0					
ANR	860486	Identifier	core		859239	0					
ANR	860487	Identifier	config		859239	1					
ANR	860488	Argument	"""anal.autoname"""		859239	1					
ANR	860489	PrimaryExpression	"""anal.autoname"""		859239	0					
ANR	860490	CompoundStatement		196:56:6648:6648	859239	1					
ANR	860491	Statement	oldstr	8740:5:249740:249745	859239	0	True				
ANR	860492	Statement	=	8740:12:249747:249747	859239	1	True				
ANR	860493	Statement	r_print_rowlog	8740:14:249749:249762	859239	2	True				
ANR	860494	Statement	(	8740:29:249764:249764	859239	3	True				
ANR	860495	Statement	core	8740:30:249765:249768	859239	4	True				
ANR	860496	Statement	->	8740:34:249769:249770	859239	5	True				
ANR	860497	Statement	print	8740:36:249771:249775	859239	6	True				
ANR	860498	Statement	","	8740:41:249776:249776	859239	7	True				
ANR	860499	Statement	"""Speculatively constructing a function name """	8740:43:249778:249822	859239	8	True				
ANR	860500	Statement	"""for fcn.* and sym.func.* functions (aan)"""	8741:30:249854:249895	859239	9	True				
ANR	860501	Statement	)	8741:72:249896:249896	859239	10	True				
ANR	860502	ExpressionStatement		8741:73:249897:249897	859239	11	True				
ANR	860503	ExpressionStatement	r_core_anal_autoname_all_fcns ( core )	8742:5:249904:249940	859239	12	True				
ANR	860504	CallExpression	r_core_anal_autoname_all_fcns ( core )		859239	0					
ANR	860505	Callee	r_core_anal_autoname_all_fcns		859239	0					
ANR	860506	Identifier	r_core_anal_autoname_all_fcns		859239	0					
ANR	860507	ArgumentList	core		859239	1					
ANR	860508	Argument	core		859239	0					
ANR	860509	Identifier	core		859239	0					
ANR	860510	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8743:5:249947:249988	859239	13	True				
ANR	860511	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860512	Callee	r_print_rowlog_done		859239	0					
ANR	860513	Identifier	r_print_rowlog_done		859239	0					
ANR	860514	ArgumentList	core -> print		859239	1					
ANR	860515	Argument	core -> print		859239	0					
ANR	860516	PtrMemberAccess	core -> print		859239	0					
ANR	860517	Identifier	core		859239	0					
ANR	860518	Identifier	print		859239	1					
ANR	860519	Argument	oldstr		859239	1					
ANR	860520	Identifier	oldstr		859239	0					
ANR	860521	IfStatement	if ( core -> anal -> opt . vars )		859239	27					
ANR	860522	Condition	core -> anal -> opt . vars	8745:8:250004:250023	859239	0	True				
ANR	860523	MemberAccess	core -> anal -> opt . vars		859239	0					
ANR	860524	PtrMemberAccess	core -> anal -> opt		859239	0					
ANR	860525	PtrMemberAccess	core -> anal		859239	0					
ANR	860526	Identifier	core		859239	0					
ANR	860527	Identifier	anal		859239	1					
ANR	860528	Identifier	opt		859239	1					
ANR	860529	Identifier	vars		859239	1					
ANR	860530	CompoundStatement		204:5:6974:6989	859239	1					
ANR	860531	IdentifierDeclStatement	RAnalFunction * fcni ;	8746:5:250033:250052	859239	0	True				
ANR	860532	IdentifierDecl	* fcni		859239	0					
ANR	860533	IdentifierDeclType	RAnalFunction *		859239	0					
ANR	860534	Identifier	fcni		859239	1					
ANR	860535	IdentifierDeclStatement	RListIter * iter ;	8747:5:250059:250074	859239	1	True				
ANR	860536	IdentifierDecl	* iter		859239	0					
ANR	860537	IdentifierDeclType	RListIter *		859239	0					
ANR	860538	Identifier	iter		859239	1					
ANR	860539	Statement	r_list_foreach	8748:5:250081:250094	859239	2	True				
ANR	860540	Statement	(	8748:20:250096:250096	859239	3	True				
ANR	860541	Statement	core	8748:21:250097:250100	859239	4	True				
ANR	860542	Statement	->	8748:25:250101:250102	859239	5	True				
ANR	860543	Statement	anal	8748:27:250103:250106	859239	6	True				
ANR	860544	Statement	->	8748:31:250107:250108	859239	7	True				
ANR	860545	Statement	fcns	8748:33:250109:250112	859239	8	True				
ANR	860546	Statement	","	8748:37:250113:250113	859239	9	True				
ANR	860547	Statement	iter	8748:39:250115:250118	859239	10	True				
ANR	860548	Statement	","	8748:43:250119:250119	859239	11	True				
ANR	860549	Statement	fcni	8748:45:250121:250124	859239	12	True				
ANR	860550	Statement	)	8748:49:250125:250125	859239	13	True				
ANR	860551	CompoundStatement		209:6:7106:7159	859239	14					
ANR	860552	IfStatement	if ( r_cons_is_breaked ( ) )		859239	0					
ANR	860553	Condition	r_cons_is_breaked ( )	8749:10:250139:250158	859239	0	True				
ANR	860554	CallExpression	r_cons_is_breaked ( )		859239	0					
ANR	860555	Callee	r_cons_is_breaked		859239	0					
ANR	860556	Identifier	r_cons_is_breaked		859239	0					
ANR	860557	ArgumentList			859239	1					
ANR	860558	CompoundStatement		206:32:7076:7076	859239	1					
ANR	860559	BreakStatement	break ;	8750:7:250170:250175	859239	0	True				
ANR	860560	IdentifierDeclStatement	"RList * list = r_anal_var_list ( core -> anal , fcni , 'r' ) ;"	8752:6:250191:250244	859239	1	True				
ANR	860561	IdentifierDecl	"* list = r_anal_var_list ( core -> anal , fcni , 'r' )"		859239	0					
ANR	860562	IdentifierDeclType	RList *		859239	0					
ANR	860563	Identifier	list		859239	1					
ANR	860564	AssignmentExpression	"* list = r_anal_var_list ( core -> anal , fcni , 'r' )"		859239	2		=			
ANR	860565	Identifier	list		859239	0					
ANR	860566	CallExpression	"r_anal_var_list ( core -> anal , fcni , 'r' )"		859239	1					
ANR	860567	Callee	r_anal_var_list		859239	0					
ANR	860568	Identifier	r_anal_var_list		859239	0					
ANR	860569	ArgumentList	core -> anal		859239	1					
ANR	860570	Argument	core -> anal		859239	0					
ANR	860571	PtrMemberAccess	core -> anal		859239	0					
ANR	860572	Identifier	core		859239	0					
ANR	860573	Identifier	anal		859239	1					
ANR	860574	Argument	fcni		859239	1					
ANR	860575	Identifier	fcni		859239	0					
ANR	860576	Argument	'r'		859239	2					
ANR	860577	PrimaryExpression	'r'		859239	0					
ANR	860578	IfStatement	if ( ! r_list_empty ( list ) )		859239	2					
ANR	860579	Condition	! r_list_empty ( list )	8753:10:250256:250275	859239	0	True				
ANR	860580	UnaryOperationExpression	! r_list_empty ( list )		859239	0					
ANR	860581	UnaryOperator	!		859239	0					
ANR	860582	CallExpression	r_list_empty ( list )		859239	1					
ANR	860583	Callee	r_list_empty		859239	0					
ANR	860584	Identifier	r_list_empty		859239	0					
ANR	860585	ArgumentList	list		859239	1					
ANR	860586	Argument	list		859239	0					
ANR	860587	Identifier	list		859239	0					
ANR	860588	CompoundStatement		210:32:7193:7193	859239	1					
ANR	860589	ExpressionStatement	r_list_free ( list )	8754:7:250287:250305	859239	0	True				
ANR	860590	CallExpression	r_list_free ( list )		859239	0					
ANR	860591	Callee	r_list_free		859239	0					
ANR	860592	Identifier	r_list_free		859239	0					
ANR	860593	ArgumentList	list		859239	1					
ANR	860594	Argument	list		859239	0					
ANR	860595	Identifier	list		859239	0					
ANR	860596	ContinueStatement	continue ;	8755:7:250314:250322	859239	1	True				
ANR	860597	ExpressionStatement	"r_core_recover_vars ( core , fcni , true )"	8758:6:250378:250416	859239	3	True				
ANR	860598	CallExpression	"r_core_recover_vars ( core , fcni , true )"		859239	0					
ANR	860599	Callee	r_core_recover_vars		859239	0					
ANR	860600	Identifier	r_core_recover_vars		859239	0					
ANR	860601	ArgumentList	core		859239	1					
ANR	860602	Argument	core		859239	0					
ANR	860603	Identifier	core		859239	0					
ANR	860604	Argument	fcni		859239	1					
ANR	860605	Identifier	fcni		859239	0					
ANR	860606	Argument	true		859239	2					
ANR	860607	Identifier	true		859239	0					
ANR	860608	ExpressionStatement	r_list_free ( list )	8759:6:250424:250442	859239	4	True				
ANR	860609	CallExpression	r_list_free ( list )		859239	0					
ANR	860610	Callee	r_list_free		859239	0					
ANR	860611	Identifier	r_list_free		859239	0					
ANR	860612	ArgumentList	list		859239	1					
ANR	860613	Argument	list		859239	0					
ANR	860614	Identifier	list		859239	0					
ANR	860615	IfStatement	if ( ! sdb_isempty ( core -> anal -> sdb_zigns ) )		859239	28					
ANR	860616	Condition	! sdb_isempty ( core -> anal -> sdb_zigns )	8762:8:250465:250500	859239	0	True				
ANR	860617	UnaryOperationExpression	! sdb_isempty ( core -> anal -> sdb_zigns )		859239	0					
ANR	860618	UnaryOperator	!		859239	0					
ANR	860619	CallExpression	sdb_isempty ( core -> anal -> sdb_zigns )		859239	1					
ANR	860620	Callee	sdb_isempty		859239	0					
ANR	860621	Identifier	sdb_isempty		859239	0					
ANR	860622	ArgumentList	core -> anal -> sdb_zigns		859239	1					
ANR	860623	Argument	core -> anal -> sdb_zigns		859239	0					
ANR	860624	PtrMemberAccess	core -> anal -> sdb_zigns		859239	0					
ANR	860625	PtrMemberAccess	core -> anal		859239	0					
ANR	860626	Identifier	core		859239	0					
ANR	860627	Identifier	anal		859239	1					
ANR	860628	Identifier	sdb_zigns		859239	1					
ANR	860629	CompoundStatement		219:46:7418:7418	859239	1					
ANR	860630	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Check for zignature from zigns folder (z/)"" )"	8763:5:250510:250593	859239	0	True				
ANR	860631	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Check for zignature from zigns folder (z/)"" )"		859239	0		=			
ANR	860632	Identifier	oldstr		859239	0					
ANR	860633	CallExpression	"r_print_rowlog ( core -> print , ""Check for zignature from zigns folder (z/)"" )"		859239	1					
ANR	860634	Callee	r_print_rowlog		859239	0					
ANR	860635	Identifier	r_print_rowlog		859239	0					
ANR	860636	ArgumentList	core -> print		859239	1					
ANR	860637	Argument	core -> print		859239	0					
ANR	860638	PtrMemberAccess	core -> print		859239	0					
ANR	860639	Identifier	core		859239	0					
ANR	860640	Identifier	print		859239	1					
ANR	860641	Argument	"""Check for zignature from zigns folder (z/)"""		859239	1					
ANR	860642	PrimaryExpression	"""Check for zignature from zigns folder (z/)"""		859239	0					
ANR	860643	ExpressionStatement	"r_core_cmd0 ( core , ""z/"" )"	8764:5:250600:250624	859239	1	True				
ANR	860644	CallExpression	"r_core_cmd0 ( core , ""z/"" )"		859239	0					
ANR	860645	Callee	r_core_cmd0		859239	0					
ANR	860646	Identifier	r_core_cmd0		859239	0					
ANR	860647	ArgumentList	core		859239	1					
ANR	860648	Argument	core		859239	0					
ANR	860649	Identifier	core		859239	0					
ANR	860650	Argument	"""z/"""		859239	1					
ANR	860651	PrimaryExpression	"""z/"""		859239	0					
ANR	860652	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8765:5:250631:250672	859239	2	True				
ANR	860653	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860654	Callee	r_print_rowlog_done		859239	0					
ANR	860655	Identifier	r_print_rowlog_done		859239	0					
ANR	860656	ArgumentList	core -> print		859239	1					
ANR	860657	Argument	core -> print		859239	0					
ANR	860658	PtrMemberAccess	core -> print		859239	0					
ANR	860659	Identifier	core		859239	0					
ANR	860660	Identifier	print		859239	1					
ANR	860661	Argument	oldstr		859239	1					
ANR	860662	Identifier	oldstr		859239	0					
ANR	860663	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Type matching analysis for all functions (aaft)"" )"	8768:4:250685:250773	859239	29	True				
ANR	860664	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Type matching analysis for all functions (aaft)"" )"		859239	0		=			
ANR	860665	Identifier	oldstr		859239	0					
ANR	860666	CallExpression	"r_print_rowlog ( core -> print , ""Type matching analysis for all functions (aaft)"" )"		859239	1					
ANR	860667	Callee	r_print_rowlog		859239	0					
ANR	860668	Identifier	r_print_rowlog		859239	0					
ANR	860669	ArgumentList	core -> print		859239	1					
ANR	860670	Argument	core -> print		859239	0					
ANR	860671	PtrMemberAccess	core -> print		859239	0					
ANR	860672	Identifier	core		859239	0					
ANR	860673	Identifier	print		859239	1					
ANR	860674	Argument	"""Type matching analysis for all functions (aaft)"""		859239	1					
ANR	860675	PrimaryExpression	"""Type matching analysis for all functions (aaft)"""		859239	0					
ANR	860676	ExpressionStatement	"r_core_cmd0 ( core , ""aaft"" )"	8769:4:250779:250805	859239	30	True				
ANR	860677	CallExpression	"r_core_cmd0 ( core , ""aaft"" )"		859239	0					
ANR	860678	Callee	r_core_cmd0		859239	0					
ANR	860679	Identifier	r_core_cmd0		859239	0					
ANR	860680	ArgumentList	core		859239	1					
ANR	860681	Argument	core		859239	0					
ANR	860682	Identifier	core		859239	0					
ANR	860683	Argument	"""aaft"""		859239	1					
ANR	860684	PrimaryExpression	"""aaft"""		859239	0					
ANR	860685	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8770:4:250811:250852	859239	31	True				
ANR	860686	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860687	Callee	r_print_rowlog_done		859239	0					
ANR	860688	Identifier	r_print_rowlog_done		859239	0					
ANR	860689	ArgumentList	core -> print		859239	1					
ANR	860690	Argument	core -> print		859239	0					
ANR	860691	PtrMemberAccess	core -> print		859239	0					
ANR	860692	Identifier	core		859239	0					
ANR	860693	Identifier	print		859239	1					
ANR	860694	Argument	oldstr		859239	1					
ANR	860695	Identifier	oldstr		859239	0					
ANR	860696	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Propagate noreturn information"" )"	8772:4:250859:250930	859239	32	True				
ANR	860697	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Propagate noreturn information"" )"		859239	0		=			
ANR	860698	Identifier	oldstr		859239	0					
ANR	860699	CallExpression	"r_print_rowlog ( core -> print , ""Propagate noreturn information"" )"		859239	1					
ANR	860700	Callee	r_print_rowlog		859239	0					
ANR	860701	Identifier	r_print_rowlog		859239	0					
ANR	860702	ArgumentList	core -> print		859239	1					
ANR	860703	Argument	core -> print		859239	0					
ANR	860704	PtrMemberAccess	core -> print		859239	0					
ANR	860705	Identifier	core		859239	0					
ANR	860706	Identifier	print		859239	1					
ANR	860707	Argument	"""Propagate noreturn information"""		859239	1					
ANR	860708	PrimaryExpression	"""Propagate noreturn information"""		859239	0					
ANR	860709	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8773:4:250936:250977	859239	33	True				
ANR	860710	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860711	Callee	r_print_rowlog_done		859239	0					
ANR	860712	Identifier	r_print_rowlog_done		859239	0					
ANR	860713	ArgumentList	core -> print		859239	1					
ANR	860714	Argument	core -> print		859239	0					
ANR	860715	PtrMemberAccess	core -> print		859239	0					
ANR	860716	Identifier	core		859239	0					
ANR	860717	Identifier	print		859239	1					
ANR	860718	Argument	oldstr		859239	1					
ANR	860719	Identifier	oldstr		859239	0					
ANR	860720	ExpressionStatement	r_core_anal_propagate_noreturn ( core )	8774:4:250983:251020	859239	34	True				
ANR	860721	CallExpression	r_core_anal_propagate_noreturn ( core )		859239	0					
ANR	860722	Callee	r_core_anal_propagate_noreturn		859239	0					
ANR	860723	Identifier	r_core_anal_propagate_noreturn		859239	0					
ANR	860724	ArgumentList	core		859239	1					
ANR	860725	Argument	core		859239	0					
ANR	860726	Identifier	core		859239	0					
ANR	860727	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Use -AA or aaaa to perform additional experimental analysis."" )"	8776:4:251027:251128	859239	35	True				
ANR	860728	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Use -AA or aaaa to perform additional experimental analysis."" )"		859239	0		=			
ANR	860729	Identifier	oldstr		859239	0					
ANR	860730	CallExpression	"r_print_rowlog ( core -> print , ""Use -AA or aaaa to perform additional experimental analysis."" )"		859239	1					
ANR	860731	Callee	r_print_rowlog		859239	0					
ANR	860732	Identifier	r_print_rowlog		859239	0					
ANR	860733	ArgumentList	core -> print		859239	1					
ANR	860734	Argument	core -> print		859239	0					
ANR	860735	PtrMemberAccess	core -> print		859239	0					
ANR	860736	Identifier	core		859239	0					
ANR	860737	Identifier	print		859239	1					
ANR	860738	Argument	"""Use -AA or aaaa to perform additional experimental analysis."""		859239	1					
ANR	860739	PrimaryExpression	"""Use -AA or aaaa to perform additional experimental analysis."""		859239	0					
ANR	860740	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8777:4:251134:251175	859239	36	True				
ANR	860741	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860742	Callee	r_print_rowlog_done		859239	0					
ANR	860743	Identifier	r_print_rowlog_done		859239	0					
ANR	860744	ArgumentList	core -> print		859239	1					
ANR	860745	Argument	core -> print		859239	0					
ANR	860746	PtrMemberAccess	core -> print		859239	0					
ANR	860747	Identifier	core		859239	0					
ANR	860748	Identifier	print		859239	1					
ANR	860749	Argument	oldstr		859239	1					
ANR	860750	Identifier	oldstr		859239	0					
ANR	860751	IfStatement	if ( input [ 1 ] == 'a' )		859239	37					
ANR	860752	Condition	input [ 1 ] == 'a'	8779:8:251186:251200	859239	0	True				
ANR	860753	EqualityExpression	input [ 1 ] == 'a'		859239	0		==			
ANR	860754	ArrayIndexing	input [ 1 ]		859239	0					
ANR	860755	Identifier	input		859239	0					
ANR	860756	PrimaryExpression	1		859239	1					
ANR	860757	PrimaryExpression	'a'		859239	1					
ANR	860758	CompoundStatement		236:25:8118:8118	859239	1					
ANR	860759	IfStatement	if ( ! didAap )		859239	0					
ANR	860760	Condition	! didAap	8780:9:251224:251230	859239	0	True				
ANR	860761	UnaryOperationExpression	! didAap		859239	0					
ANR	860762	UnaryOperator	!		859239	0					
ANR	860763	Identifier	didAap		859239	1					
ANR	860764	CompoundStatement		237:18:8148:8148	859239	1					
ANR	860765	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Finding function preludes"" )"	8781:6:251241:251307	859239	0	True				
ANR	860766	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Finding function preludes"" )"		859239	0		=			
ANR	860767	Identifier	oldstr		859239	0					
ANR	860768	CallExpression	"r_print_rowlog ( core -> print , ""Finding function preludes"" )"		859239	1					
ANR	860769	Callee	r_print_rowlog		859239	0					
ANR	860770	Identifier	r_print_rowlog		859239	0					
ANR	860771	ArgumentList	core -> print		859239	1					
ANR	860772	Argument	core -> print		859239	0					
ANR	860773	PtrMemberAccess	core -> print		859239	0					
ANR	860774	Identifier	core		859239	0					
ANR	860775	Identifier	print		859239	1					
ANR	860776	Argument	"""Finding function preludes"""		859239	1					
ANR	860777	PrimaryExpression	"""Finding function preludes"""		859239	0					
ANR	860778	ExpressionStatement	"( void ) r_core_search_preludes ( core , false )"	8782:6:251315:251357	859239	1	True				
ANR	860779	CastExpression	"( void ) r_core_search_preludes ( core , false )"		859239	0					
ANR	860780	CastTarget	void		859239	0					
ANR	860781	CallExpression	"r_core_search_preludes ( core , false )"		859239	1					
ANR	860782	Callee	r_core_search_preludes		859239	0					
ANR	860783	Identifier	r_core_search_preludes		859239	0					
ANR	860784	ArgumentList	core		859239	1					
ANR	860785	Argument	core		859239	0					
ANR	860786	Identifier	core		859239	0					
ANR	860787	Argument	false		859239	1					
ANR	860788	Identifier	false		859239	0					
ANR	860789	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8783:6:251374:251415	859239	2	True				
ANR	860790	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860791	Callee	r_print_rowlog_done		859239	0					
ANR	860792	Identifier	r_print_rowlog_done		859239	0					
ANR	860793	ArgumentList	core -> print		859239	1					
ANR	860794	Argument	core -> print		859239	0					
ANR	860795	PtrMemberAccess	core -> print		859239	0					
ANR	860796	Identifier	core		859239	0					
ANR	860797	Identifier	print		859239	1					
ANR	860798	Argument	oldstr		859239	1					
ANR	860799	Identifier	oldstr		859239	0					
ANR	860800	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Enable constraint types analysis for variables"" )"	8786:5:251430:251517	859239	1	True				
ANR	860801	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Enable constraint types analysis for variables"" )"		859239	0		=			
ANR	860802	Identifier	oldstr		859239	0					
ANR	860803	CallExpression	"r_print_rowlog ( core -> print , ""Enable constraint types analysis for variables"" )"		859239	1					
ANR	860804	Callee	r_print_rowlog		859239	0					
ANR	860805	Identifier	r_print_rowlog		859239	0					
ANR	860806	ArgumentList	core -> print		859239	1					
ANR	860807	Argument	core -> print		859239	0					
ANR	860808	PtrMemberAccess	core -> print		859239	0					
ANR	860809	Identifier	core		859239	0					
ANR	860810	Identifier	print		859239	1					
ANR	860811	Argument	"""Enable constraint types analysis for variables"""		859239	1					
ANR	860812	PrimaryExpression	"""Enable constraint types analysis for variables"""		859239	0					
ANR	860813	ExpressionStatement	"r_config_set ( core -> config , ""anal.types.constraint"" , ""true"" )"	8787:5:251524:251584	859239	2	True				
ANR	860814	CallExpression	"r_config_set ( core -> config , ""anal.types.constraint"" , ""true"" )"		859239	0					
ANR	860815	Callee	r_config_set		859239	0					
ANR	860816	Identifier	r_config_set		859239	0					
ANR	860817	ArgumentList	core -> config		859239	1					
ANR	860818	Argument	core -> config		859239	0					
ANR	860819	PtrMemberAccess	core -> config		859239	0					
ANR	860820	Identifier	core		859239	0					
ANR	860821	Identifier	config		859239	1					
ANR	860822	Argument	"""anal.types.constraint"""		859239	1					
ANR	860823	PrimaryExpression	"""anal.types.constraint"""		859239	0					
ANR	860824	Argument	"""true"""		859239	2					
ANR	860825	PrimaryExpression	"""true"""		859239	0					
ANR	860826	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	8788:5:251591:251632	859239	3	True				
ANR	860827	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		859239	0					
ANR	860828	Callee	r_print_rowlog_done		859239	0					
ANR	860829	Identifier	r_print_rowlog_done		859239	0					
ANR	860830	ArgumentList	core -> print		859239	1					
ANR	860831	Argument	core -> print		859239	0					
ANR	860832	PtrMemberAccess	core -> print		859239	0					
ANR	860833	Identifier	core		859239	0					
ANR	860834	Identifier	print		859239	1					
ANR	860835	Argument	oldstr		859239	1					
ANR	860836	Identifier	oldstr		859239	0					
ANR	860837	ExpressionStatement	"r_core_cmd0 ( core , ""s-"" )"	8790:4:251644:251668	859239	38	True				
ANR	860838	CallExpression	"r_core_cmd0 ( core , ""s-"" )"		859239	0					
ANR	860839	Callee	r_core_cmd0		859239	0					
ANR	860840	Identifier	r_core_cmd0		859239	0					
ANR	860841	ArgumentList	core		859239	1					
ANR	860842	Argument	core		859239	0					
ANR	860843	Identifier	core		859239	0					
ANR	860844	Argument	"""s-"""		859239	1					
ANR	860845	PrimaryExpression	"""s-"""		859239	0					
ANR	860846	IfStatement	if ( dh_orig )		859239	39					
ANR	860847	Condition	dh_orig	8791:8:251678:251684	859239	0	True				
ANR	860848	Identifier	dh_orig		859239	0					
ANR	860849	CompoundStatement		248:17:8602:8602	859239	1					
ANR	860850	ExpressionStatement	"r_core_cmdf ( core , ""dL %s"" , dh_orig )"	8792:5:251694:251730	859239	0	True				
ANR	860851	CallExpression	"r_core_cmdf ( core , ""dL %s"" , dh_orig )"		859239	0					
ANR	860852	Callee	r_core_cmdf		859239	0					
ANR	860853	Identifier	r_core_cmdf		859239	0					
ANR	860854	ArgumentList	core		859239	1					
ANR	860855	Argument	core		859239	0					
ANR	860856	Identifier	core		859239	0					
ANR	860857	Argument	"""dL %s"""		859239	1					
ANR	860858	PrimaryExpression	"""dL %s"""		859239	0					
ANR	860859	Argument	dh_orig		859239	2					
ANR	860860	Identifier	dh_orig		859239	0					
ANR	860861	ExpressionStatement	"r_core_seek ( core , curseek , 1 )"	8795:3:251746:251776	859239	16	True				
ANR	860862	CallExpression	"r_core_seek ( core , curseek , 1 )"		859239	0					
ANR	860863	Callee	r_core_seek		859239	0					
ANR	860864	Identifier	r_core_seek		859239	0					
ANR	860865	ArgumentList	core		859239	1					
ANR	860866	Argument	core		859239	0					
ANR	860867	Identifier	core		859239	0					
ANR	860868	Argument	curseek		859239	1					
ANR	860869	Identifier	curseek		859239	0					
ANR	860870	Argument	1		859239	2					
ANR	860871	PrimaryExpression	1		859239	0					
ANR	860872	Label	jacuzzi :	8796:2:251780:251787	859239	17	True				
ANR	860873	Identifier	jacuzzi		859239	0					
ANR	860874	ExpressionStatement	flag_every_function ( core )	8798:3:251882:251908	859239	18	True				
ANR	860875	CallExpression	flag_every_function ( core )		859239	0					
ANR	860876	Callee	flag_every_function		859239	0					
ANR	860877	Identifier	flag_every_function		859239	0					
ANR	860878	ArgumentList	core		859239	1					
ANR	860879	Argument	core		859239	0					
ANR	860880	Identifier	core		859239	0					
ANR	860881	ExpressionStatement	r_cons_break_pop ( )	8799:3:251913:251932	859239	19	True				
ANR	860882	CallExpression	r_cons_break_pop ( )		859239	0					
ANR	860883	Callee	r_cons_break_pop		859239	0					
ANR	860884	Identifier	r_cons_break_pop		859239	0					
ANR	860885	ArgumentList			859239	1					
ANR	860886	ExpressionStatement	R_FREE ( dh_orig )	8800:3:251937:251953	859239	20	True				
ANR	860887	CallExpression	R_FREE ( dh_orig )		859239	0					
ANR	860888	Callee	R_FREE		859239	0					
ANR	860889	Identifier	R_FREE		859239	0					
ANR	860890	ArgumentList	dh_orig		859239	1					
ANR	860891	Argument	dh_orig		859239	0					
ANR	860892	Identifier	dh_orig		859239	0					
ANR	860893	BreakStatement	break ;	8802:2:251961:251966	859239	46	True				
ANR	860894	Label	case 't' :	8803:1:251969:251977	859239	47	True				
ANR	860895	CompoundStatement		265:2:9032:9103	859239	48					
ANR	860896	IdentifierDeclStatement	ut64 cur = core -> offset ;	8804:2:251992:252015	859239	0	True				
ANR	860897	IdentifierDecl	cur = core -> offset		859239	0					
ANR	860898	IdentifierDeclType	ut64		859239	0					
ANR	860899	Identifier	cur		859239	1					
ANR	860900	AssignmentExpression	cur = core -> offset		859239	2		=			
ANR	860901	Identifier	cur		859239	0					
ANR	860902	PtrMemberAccess	core -> offset		859239	1					
ANR	860903	Identifier	core		859239	0					
ANR	860904	Identifier	offset		859239	1					
ANR	860905	IdentifierDeclStatement	"bool hasnext = r_config_get_i ( core -> config , ""anal.hasnext"" ) ;"	8805:2:252019:252079	859239	1	True				
ANR	860906	IdentifierDecl	"hasnext = r_config_get_i ( core -> config , ""anal.hasnext"" )"		859239	0					
ANR	860907	IdentifierDeclType	bool		859239	0					
ANR	860908	Identifier	hasnext		859239	1					
ANR	860909	AssignmentExpression	"hasnext = r_config_get_i ( core -> config , ""anal.hasnext"" )"		859239	2		=			
ANR	860910	Identifier	hasnext		859239	0					
ANR	860911	CallExpression	"r_config_get_i ( core -> config , ""anal.hasnext"" )"		859239	1					
ANR	860912	Callee	r_config_get_i		859239	0					
ANR	860913	Identifier	r_config_get_i		859239	0					
ANR	860914	ArgumentList	core -> config		859239	1					
ANR	860915	Argument	core -> config		859239	0					
ANR	860916	PtrMemberAccess	core -> config		859239	0					
ANR	860917	Identifier	core		859239	0					
ANR	860918	Identifier	config		859239	1					
ANR	860919	Argument	"""anal.hasnext"""		859239	1					
ANR	860920	PrimaryExpression	"""anal.hasnext"""		859239	0					
ANR	860921	IdentifierDeclStatement	RListIter * iter ;	8806:2:252083:252098	859239	2	True				
ANR	860922	IdentifierDecl	* iter		859239	0					
ANR	860923	IdentifierDeclType	RListIter *		859239	0					
ANR	860924	Identifier	iter		859239	1					
ANR	860925	IdentifierDeclStatement	RIOMap * map ;	8807:2:252102:252113	859239	3	True				
ANR	860926	IdentifierDecl	* map		859239	0					
ANR	860927	IdentifierDeclType	RIOMap *		859239	0					
ANR	860928	Identifier	map		859239	1					
ANR	860929	IdentifierDeclStatement	"RList * list = r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" ) ;"	8808:2:252117:252188	859239	4	True				
ANR	860930	IdentifierDecl	"* list = r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" )"		859239	0					
ANR	860931	IdentifierDeclType	RList *		859239	0					
ANR	860932	Identifier	list		859239	1					
ANR	860933	AssignmentExpression	"* list = r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" )"		859239	2		=			
ANR	860934	Identifier	list		859239	0					
ANR	860935	CallExpression	"r_core_get_boundaries_prot ( core , R_PERM_X , NULL , ""anal"" )"		859239	1					
ANR	860936	Callee	r_core_get_boundaries_prot		859239	0					
ANR	860937	Identifier	r_core_get_boundaries_prot		859239	0					
ANR	860938	ArgumentList	core		859239	1					
ANR	860939	Argument	core		859239	0					
ANR	860940	Identifier	core		859239	0					
ANR	860941	Argument	R_PERM_X		859239	1					
ANR	860942	Identifier	R_PERM_X		859239	0					
ANR	860943	Argument	NULL		859239	2					
ANR	860944	Identifier	NULL		859239	0					
ANR	860945	Argument	"""anal"""		859239	3					
ANR	860946	PrimaryExpression	"""anal"""		859239	0					
ANR	860947	IfStatement	if ( ! list )		859239	5					
ANR	860948	Condition	! list	8809:6:252196:252200	859239	0	True				
ANR	860949	UnaryOperationExpression	! list		859239	0					
ANR	860950	UnaryOperator	!		859239	0					
ANR	860951	Identifier	list		859239	1					
ANR	860952	CompoundStatement		266:13:9118:9118	859239	1					
ANR	860953	BreakStatement	break ;	8810:3:252208:252213	859239	0	True				
ANR	860954	Statement	r_list_foreach	8812:2:252221:252234	859239	6	True				
ANR	860955	Statement	(	8812:17:252236:252236	859239	7	True				
ANR	860956	Statement	list	8812:18:252237:252240	859239	8	True				
ANR	860957	Statement	","	8812:22:252241:252241	859239	9	True				
ANR	860958	Statement	iter	8812:24:252243:252246	859239	10	True				
ANR	860959	Statement	","	8812:28:252247:252247	859239	11	True				
ANR	860960	Statement	map	8812:30:252249:252251	859239	12	True				
ANR	860961	Statement	)	8812:33:252252:252252	859239	13	True				
ANR	860962	CompoundStatement		269:35:9169:9169	859239	14					
ANR	860963	ExpressionStatement	"r_core_seek ( core , map -> itv . addr , 1 )"	8813:3:252259:252295	859239	0	True				
ANR	860964	CallExpression	"r_core_seek ( core , map -> itv . addr , 1 )"		859239	0					
ANR	860965	Callee	r_core_seek		859239	0					
ANR	860966	Identifier	r_core_seek		859239	0					
ANR	860967	ArgumentList	core		859239	1					
ANR	860968	Argument	core		859239	0					
ANR	860969	Identifier	core		859239	0					
ANR	860970	Argument	map -> itv . addr		859239	1					
ANR	860971	MemberAccess	map -> itv . addr		859239	0					
ANR	860972	PtrMemberAccess	map -> itv		859239	0					
ANR	860973	Identifier	map		859239	0					
ANR	860974	Identifier	itv		859239	1					
ANR	860975	Identifier	addr		859239	1					
ANR	860976	Argument	1		859239	2					
ANR	860977	PrimaryExpression	1		859239	0					
ANR	860978	ExpressionStatement	"r_config_set_i ( core -> config , ""anal.hasnext"" , 1 )"	8814:3:252300:252348	859239	1	True				
ANR	860979	CallExpression	"r_config_set_i ( core -> config , ""anal.hasnext"" , 1 )"		859239	0					
ANR	860980	Callee	r_config_set_i		859239	0					
ANR	860981	Identifier	r_config_set_i		859239	0					
ANR	860982	ArgumentList	core -> config		859239	1					
ANR	860983	Argument	core -> config		859239	0					
ANR	860984	PtrMemberAccess	core -> config		859239	0					
ANR	860985	Identifier	core		859239	0					
ANR	860986	Identifier	config		859239	1					
ANR	860987	Argument	"""anal.hasnext"""		859239	1					
ANR	860988	PrimaryExpression	"""anal.hasnext"""		859239	0					
ANR	860989	Argument	1		859239	2					
ANR	860990	PrimaryExpression	1		859239	0					
ANR	860991	ExpressionStatement	"r_core_cmd0 ( core , ""afr"" )"	8815:3:252353:252378	859239	2	True				
ANR	860992	CallExpression	"r_core_cmd0 ( core , ""afr"" )"		859239	0					
ANR	860993	Callee	r_core_cmd0		859239	0					
ANR	860994	Identifier	r_core_cmd0		859239	0					
ANR	860995	ArgumentList	core		859239	1					
ANR	860996	Argument	core		859239	0					
ANR	860997	Identifier	core		859239	0					
ANR	860998	Argument	"""afr"""		859239	1					
ANR	860999	PrimaryExpression	"""afr"""		859239	0					
ANR	861000	ExpressionStatement	"r_config_set_i ( core -> config , ""anal.hasnext"" , hasnext )"	8816:3:252383:252437	859239	3	True				
ANR	861001	CallExpression	"r_config_set_i ( core -> config , ""anal.hasnext"" , hasnext )"		859239	0					
ANR	861002	Callee	r_config_set_i		859239	0					
ANR	861003	Identifier	r_config_set_i		859239	0					
ANR	861004	ArgumentList	core -> config		859239	1					
ANR	861005	Argument	core -> config		859239	0					
ANR	861006	PtrMemberAccess	core -> config		859239	0					
ANR	861007	Identifier	core		859239	0					
ANR	861008	Identifier	config		859239	1					
ANR	861009	Argument	"""anal.hasnext"""		859239	1					
ANR	861010	PrimaryExpression	"""anal.hasnext"""		859239	0					
ANR	861011	Argument	hasnext		859239	2					
ANR	861012	Identifier	hasnext		859239	0					
ANR	861013	ExpressionStatement	r_list_free ( list )	8818:2:252445:252463	859239	15	True				
ANR	861014	CallExpression	r_list_free ( list )		859239	0					
ANR	861015	Callee	r_list_free		859239	0					
ANR	861016	Identifier	r_list_free		859239	0					
ANR	861017	ArgumentList	list		859239	1					
ANR	861018	Argument	list		859239	0					
ANR	861019	Identifier	list		859239	0					
ANR	861020	ExpressionStatement	"r_core_seek ( core , cur , 1 )"	8819:2:252467:252493	859239	16	True				
ANR	861021	CallExpression	"r_core_seek ( core , cur , 1 )"		859239	0					
ANR	861022	Callee	r_core_seek		859239	0					
ANR	861023	Identifier	r_core_seek		859239	0					
ANR	861024	ArgumentList	core		859239	1					
ANR	861025	Argument	core		859239	0					
ANR	861026	Identifier	core		859239	0					
ANR	861027	Argument	cur		859239	1					
ANR	861028	Identifier	cur		859239	0					
ANR	861029	Argument	1		859239	2					
ANR	861030	PrimaryExpression	1		859239	0					
ANR	861031	BreakStatement	break ;	8820:2:252497:252502	859239	17	True				
ANR	861032	Label	case 'T' :	8822:1:252508:252516	859239	49	True				
ANR	861033	ExpressionStatement	"cmd_anal_aftertraps ( core , input + 1 )"	8823:2:252529:252566	859239	50	True				
ANR	861034	CallExpression	"cmd_anal_aftertraps ( core , input + 1 )"		859239	0					
ANR	861035	Callee	cmd_anal_aftertraps		859239	0					
ANR	861036	Identifier	cmd_anal_aftertraps		859239	0					
ANR	861037	ArgumentList	core		859239	1					
ANR	861038	Argument	core		859239	0					
ANR	861039	Identifier	core		859239	0					
ANR	861040	Argument	input + 1		859239	1					
ANR	861041	AdditiveExpression	input + 1		859239	0		+			
ANR	861042	Identifier	input		859239	0					
ANR	861043	PrimaryExpression	1		859239	1					
ANR	861044	BreakStatement	break ;	8824:2:252570:252575	859239	51	True				
ANR	861045	Label	case 'o' :	8825:1:252578:252586	859239	52	True				
ANR	861046	ExpressionStatement	"cmd_anal_objc ( core , input + 1 , false )"	8826:2:252599:252637	859239	53	True				
ANR	861047	CallExpression	"cmd_anal_objc ( core , input + 1 , false )"		859239	0					
ANR	861048	Callee	cmd_anal_objc		859239	0					
ANR	861049	Identifier	cmd_anal_objc		859239	0					
ANR	861050	ArgumentList	core		859239	1					
ANR	861051	Argument	core		859239	0					
ANR	861052	Identifier	core		859239	0					
ANR	861053	Argument	input + 1		859239	1					
ANR	861054	AdditiveExpression	input + 1		859239	0		+			
ANR	861055	Identifier	input		859239	0					
ANR	861056	PrimaryExpression	1		859239	1					
ANR	861057	Argument	false		859239	2					
ANR	861058	Identifier	false		859239	0					
ANR	861059	BreakStatement	break ;	8827:2:252641:252646	859239	54	True				
ANR	861060	Label	case 'e' :	8828:1:252649:252657	859239	55	True				
ANR	861061	IfStatement	if ( input [ 1 ] )		859239	56					
ANR	861062	Condition	input [ 1 ]	8829:6:252674:252681	859239	0	True				
ANR	861063	ArrayIndexing	input [ 1 ]		859239	0					
ANR	861064	Identifier	input		859239	0					
ANR	861065	PrimaryExpression	1		859239	1					
ANR	861066	CompoundStatement		288:3:9644:9680	859239	1					
ANR	861067	IdentifierDeclStatement	const char * len = ( char * ) input + 1 ;	8830:3:252689:252724	859239	0	True				
ANR	861068	IdentifierDecl	* len = ( char * ) input + 1		859239	0					
ANR	861069	IdentifierDeclType	const char *		859239	0					
ANR	861070	Identifier	len		859239	1					
ANR	861071	AssignmentExpression	* len = ( char * ) input + 1		859239	2		=			
ANR	861072	Identifier	len		859239	0					
ANR	861073	AdditiveExpression	( char * ) input + 1		859239	1		+			
ANR	861074	CastExpression	( char * ) input		859239	0					
ANR	861075	CastTarget	char *		859239	0					
ANR	861076	Identifier	input		859239	1					
ANR	861077	PrimaryExpression	1		859239	1					
ANR	861078	IdentifierDeclStatement	"char * addr = strchr ( input + 2 , ' ' ) ;"	8831:3:252729:252765	859239	1	True				
ANR	861079	IdentifierDecl	"* addr = strchr ( input + 2 , ' ' )"		859239	0					
ANR	861080	IdentifierDeclType	char *		859239	0					
ANR	861081	Identifier	addr		859239	1					
ANR	861082	AssignmentExpression	"* addr = strchr ( input + 2 , ' ' )"		859239	2		=			
ANR	861083	Identifier	addr		859239	0					
ANR	861084	CallExpression	"strchr ( input + 2 , ' ' )"		859239	1					
ANR	861085	Callee	strchr		859239	0					
ANR	861086	Identifier	strchr		859239	0					
ANR	861087	ArgumentList	input + 2		859239	1					
ANR	861088	Argument	input + 2		859239	0					
ANR	861089	AdditiveExpression	input + 2		859239	0		+			
ANR	861090	Identifier	input		859239	0					
ANR	861091	PrimaryExpression	2		859239	1					
ANR	861092	Argument	' '		859239	1					
ANR	861093	PrimaryExpression	' '		859239	0					
ANR	861094	IfStatement	if ( addr )		859239	2					
ANR	861095	Condition	addr	8832:7:252774:252777	859239	0	True				
ANR	861096	Identifier	addr		859239	0					
ANR	861097	CompoundStatement		289:13:9695:9695	859239	1					
ANR	861098	ExpressionStatement	* addr ++ = 0	8833:4:252786:252797	859239	0	True				
ANR	861099	AssignmentExpression	* addr ++ = 0		859239	0		=			
ANR	861100	UnaryOperationExpression	* addr ++		859239	0					
ANR	861101	UnaryOperator	*		859239	0					
ANR	861102	PostIncDecOperationExpression	addr ++		859239	1					
ANR	861103	Identifier	addr		859239	0					
ANR	861104	IncDec	++		859239	1					
ANR	861105	PrimaryExpression	0		859239	1					
ANR	861106	ExpressionStatement	"r_core_anal_esil ( core , len , addr )"	8835:3:252807:252841	859239	3	True				
ANR	861107	CallExpression	"r_core_anal_esil ( core , len , addr )"		859239	0					
ANR	861108	Callee	r_core_anal_esil		859239	0					
ANR	861109	Identifier	r_core_anal_esil		859239	0					
ANR	861110	ArgumentList	core		859239	1					
ANR	861111	Argument	core		859239	0					
ANR	861112	Identifier	core		859239	0					
ANR	861113	Argument	len		859239	1					
ANR	861114	Identifier	len		859239	0					
ANR	861115	Argument	addr		859239	2					
ANR	861116	Identifier	addr		859239	0					
ANR	861117	ElseStatement	else		859239	0					
ANR	861118	CompoundStatement		297:3:9835:9900	859239	0					
ANR	861119	IdentifierDeclStatement	ut64 at = core -> offset ;	8837:3:252857:252879	859239	0	True				
ANR	861120	IdentifierDecl	at = core -> offset		859239	0					
ANR	861121	IdentifierDeclType	ut64		859239	0					
ANR	861122	Identifier	at		859239	1					
ANR	861123	AssignmentExpression	at = core -> offset		859239	2		=			
ANR	861124	Identifier	at		859239	0					
ANR	861125	PtrMemberAccess	core -> offset		859239	1					
ANR	861126	Identifier	core		859239	0					
ANR	861127	Identifier	offset		859239	1					
ANR	861128	IdentifierDeclStatement	RIOMap * map ;	8838:3:252884:252895	859239	1	True				
ANR	861129	IdentifierDecl	* map		859239	0					
ANR	861130	IdentifierDeclType	RIOMap *		859239	0					
ANR	861131	Identifier	map		859239	1					
ANR	861132	IdentifierDeclStatement	RListIter * iter ;	8839:3:252900:252915	859239	2	True				
ANR	861133	IdentifierDecl	* iter		859239	0					
ANR	861134	IdentifierDeclType	RListIter *		859239	0					
ANR	861135	Identifier	iter		859239	1					
ANR	861136	IdentifierDeclStatement	"RList * list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""anal"" ) ;"	8840:3:252920:252985	859239	3	True				
ANR	861137	IdentifierDecl	"* list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""anal"" )"		859239	0					
ANR	861138	IdentifierDeclType	RList *		859239	0					
ANR	861139	Identifier	list		859239	1					
ANR	861140	AssignmentExpression	"* list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""anal"" )"		859239	2		=			
ANR	861141	Identifier	list		859239	0					
ANR	861142	CallExpression	"r_core_get_boundaries_prot ( core , - 1 , NULL , ""anal"" )"		859239	1					
ANR	861143	Callee	r_core_get_boundaries_prot		859239	0					
ANR	861144	Identifier	r_core_get_boundaries_prot		859239	0					
ANR	861145	ArgumentList	core		859239	1					
ANR	861146	Argument	core		859239	0					
ANR	861147	Identifier	core		859239	0					
ANR	861148	Argument	- 1		859239	1					
ANR	861149	UnaryOperationExpression	- 1		859239	0					
ANR	861150	UnaryOperator	-		859239	0					
ANR	861151	PrimaryExpression	1		859239	1					
ANR	861152	Argument	NULL		859239	2					
ANR	861153	Identifier	NULL		859239	0					
ANR	861154	Argument	"""anal"""		859239	3					
ANR	861155	PrimaryExpression	"""anal"""		859239	0					
ANR	861156	IfStatement	if ( ! list )		859239	4					
ANR	861157	Condition	! list	8841:7:252994:252998	859239	0	True				
ANR	861158	UnaryOperationExpression	! list		859239	0					
ANR	861159	UnaryOperator	!		859239	0					
ANR	861160	Identifier	list		859239	1					
ANR	861161	CompoundStatement		298:14:9916:9916	859239	1					
ANR	861162	BreakStatement	break ;	8842:4:253007:253012	859239	0	True				
ANR	861163	Statement	r_list_foreach	8844:3:253022:253035	859239	5	True				
ANR	861164	Statement	(	8844:18:253037:253037	859239	6	True				
ANR	861165	Statement	list	8844:19:253038:253041	859239	7	True				
ANR	861166	Statement	","	8844:23:253042:253042	859239	8	True				
ANR	861167	Statement	iter	8844:25:253044:253047	859239	9	True				
ANR	861168	Statement	","	8844:29:253048:253048	859239	10	True				
ANR	861169	Statement	map	8844:31:253050:253052	859239	11	True				
ANR	861170	Statement	)	8844:34:253053:253053	859239	12	True				
ANR	861171	CompoundStatement		301:36:9970:9970	859239	13					
ANR	861172	ExpressionStatement	"r_core_seek ( core , map -> itv . addr , 1 )"	8845:4:253061:253097	859239	0	True				
ANR	861173	CallExpression	"r_core_seek ( core , map -> itv . addr , 1 )"		859239	0					
ANR	861174	Callee	r_core_seek		859239	0					
ANR	861175	Identifier	r_core_seek		859239	0					
ANR	861176	ArgumentList	core		859239	1					
ANR	861177	Argument	core		859239	0					
ANR	861178	Identifier	core		859239	0					
ANR	861179	Argument	map -> itv . addr		859239	1					
ANR	861180	MemberAccess	map -> itv . addr		859239	0					
ANR	861181	PtrMemberAccess	map -> itv		859239	0					
ANR	861182	Identifier	map		859239	0					
ANR	861183	Identifier	itv		859239	1					
ANR	861184	Identifier	addr		859239	1					
ANR	861185	Argument	1		859239	2					
ANR	861186	PrimaryExpression	1		859239	0					
ANR	861187	ExpressionStatement	"r_core_anal_esil ( core , ""$SS"" , NULL )"	8846:4:253103:253139	859239	1	True				
ANR	861188	CallExpression	"r_core_anal_esil ( core , ""$SS"" , NULL )"		859239	0					
ANR	861189	Callee	r_core_anal_esil		859239	0					
ANR	861190	Identifier	r_core_anal_esil		859239	0					
ANR	861191	ArgumentList	core		859239	1					
ANR	861192	Argument	core		859239	0					
ANR	861193	Identifier	core		859239	0					
ANR	861194	Argument	"""$SS"""		859239	1					
ANR	861195	PrimaryExpression	"""$SS"""		859239	0					
ANR	861196	Argument	NULL		859239	2					
ANR	861197	Identifier	NULL		859239	0					
ANR	861198	ExpressionStatement	r_list_free ( list )	8848:3:253149:253167	859239	14	True				
ANR	861199	CallExpression	r_list_free ( list )		859239	0					
ANR	861200	Callee	r_list_free		859239	0					
ANR	861201	Identifier	r_list_free		859239	0					
ANR	861202	ArgumentList	list		859239	1					
ANR	861203	Argument	list		859239	0					
ANR	861204	Identifier	list		859239	0					
ANR	861205	ExpressionStatement	"r_core_seek ( core , at , 1 )"	8849:3:253172:253197	859239	15	True				
ANR	861206	CallExpression	"r_core_seek ( core , at , 1 )"		859239	0					
ANR	861207	Callee	r_core_seek		859239	0					
ANR	861208	Identifier	r_core_seek		859239	0					
ANR	861209	ArgumentList	core		859239	1					
ANR	861210	Argument	core		859239	0					
ANR	861211	Identifier	core		859239	0					
ANR	861212	Argument	at		859239	1					
ANR	861213	Identifier	at		859239	0					
ANR	861214	Argument	1		859239	2					
ANR	861215	PrimaryExpression	1		859239	0					
ANR	861216	BreakStatement	break ;	8851:2:253205:253210	859239	57	True				
ANR	861217	Label	case 'r' :	8852:1:253213:253221	859239	58	True				
ANR	861218	ExpressionStatement	"( void ) r_core_anal_refs ( core , input + 1 )"	8853:2:253225:253265	859239	59	True				
ANR	861219	CastExpression	"( void ) r_core_anal_refs ( core , input + 1 )"		859239	0					
ANR	861220	CastTarget	void		859239	0					
ANR	861221	CallExpression	"r_core_anal_refs ( core , input + 1 )"		859239	1					
ANR	861222	Callee	r_core_anal_refs		859239	0					
ANR	861223	Identifier	r_core_anal_refs		859239	0					
ANR	861224	ArgumentList	core		859239	1					
ANR	861225	Argument	core		859239	0					
ANR	861226	Identifier	core		859239	0					
ANR	861227	Argument	input + 1		859239	1					
ANR	861228	AdditiveExpression	input + 1		859239	0		+			
ANR	861229	Identifier	input		859239	0					
ANR	861230	PrimaryExpression	1		859239	1					
ANR	861231	BreakStatement	break ;	8854:2:253269:253274	859239	60	True				
ANR	861232	Label	default :	8855:1:253277:253284	859239	61	True				
ANR	861233	Identifier	default		859239	0					
ANR	861234	ExpressionStatement	"r_core_cmd_help ( core , help_msg_aa )"	8856:2:253288:253323	859239	62	True				
ANR	861235	CallExpression	"r_core_cmd_help ( core , help_msg_aa )"		859239	0					
ANR	861236	Callee	r_core_cmd_help		859239	0					
ANR	861237	Identifier	r_core_cmd_help		859239	0					
ANR	861238	ArgumentList	core		859239	1					
ANR	861239	Argument	core		859239	0					
ANR	861240	Identifier	core		859239	0					
ANR	861241	Argument	help_msg_aa		859239	1					
ANR	861242	Identifier	help_msg_aa		859239	0					
ANR	861243	BreakStatement	break ;	8857:2:253327:253332	859239	63	True				
ANR	861244	ReturnStatement	return true ;	8860:1:253339:253350	859239	1	True				
ANR	861245	Identifier	true		859239	0					
ANR	861246	ReturnType	static int		859239	1					
ANR	861247	Identifier	cmd_anal_all		859239	2					
ANR	861248	ParameterList	"RCore * core , const char * input"		859239	3					
ANR	861249	Parameter	RCore * core	8544:24:243052:243062	859239	0	True				
ANR	861250	ParameterType	RCore *		859239	0					
ANR	861251	Identifier	core		859239	1					
ANR	861252	Parameter	const char * input	8544:37:243065:243081	859239	1	True				
ANR	861253	ParameterType	const char *		859239	0					
ANR	861254	Identifier	input		859239	1					
ANR	861255	CFGEntryNode	ENTRY		859239		True				
ANR	861256	CFGExitNode	EXIT		859239		True				
ANR	861257	CFGErrorNode	ERROR		859239		True				
ANR	861258	Symbol	* map		859239						
ANR	861259	Symbol	* input		859239						
ANR	861260	Symbol	core -> offset		859239						
ANR	861261	Symbol	strchr		859239						
ANR	861262	Symbol	* core -> dbg -> h		859239						
ANR	861263	Symbol	* addr ++		859239						
ANR	861264	Symbol	strncmp		859239						
ANR	861265	Symbol	curseek		859239						
ANR	861266	Symbol	len		859239						
ANR	861267	Symbol	core -> dbg -> h -> name		859239						
ANR	861268	Symbol	fcni		859239						
ANR	861269	Symbol	hasnext		859239						
ANR	861270	Symbol	* core -> io -> desc		859239						
ANR	861271	Symbol	strcmp		859239						
ANR	861272	Symbol	core -> anal -> opt		859239						
ANR	861273	Symbol	oldstr		859239						
ANR	861274	Symbol	core -> io -> desc -> plugin		859239						
ANR	861275	Symbol	core -> anal -> opt . vars		859239						
ANR	861276	Symbol	r_cons_is_interactive		859239						
ANR	861277	Symbol	NULL		859239						
ANR	861278	Symbol	* * core -> io -> desc		859239						
ANR	861279	Symbol	cfg_debug		859239						
ANR	861280	Symbol	analHasnext		859239						
ANR	861281	Symbol	core -> io -> desc		859239						
ANR	861282	Symbol	iter		859239						
ANR	861283	Symbol	core -> dbg -> h		859239						
ANR	861284	Symbol	list		859239						
ANR	861285	Symbol	core		859239						
ANR	861286	Symbol	input		859239						
ANR	861287	Symbol	* * * core		859239						
ANR	861288	Symbol	core -> io -> desc -> plugin -> isdbg		859239						
ANR	861289	Symbol	at		859239						
ANR	861290	Symbol	r_config_get_i		859239						
ANR	861291	Symbol	true		859239						
ANR	861292	Symbol	r_list_empty		859239						
ANR	861293	Symbol	core -> print		859239						
ANR	861294	Symbol	* core -> dbg		859239						
ANR	861295	Symbol	cur		859239						
ANR	861296	Symbol	map -> itv		859239						
ANR	861297	Symbol	* core -> io -> desc -> plugin		859239						
ANR	861298	Symbol	* core		859239						
ANR	861299	Symbol	r_config_get		859239						
ANR	861300	Symbol	ioCache		859239						
ANR	861301	Symbol	sdb_isempty		859239						
ANR	861302	Symbol	dh_orig		859239						
ANR	861303	Symbol	didAap		859239						
ANR	861304	Symbol	core -> anal		859239						
ANR	861305	Symbol	is_unknown_file		859239						
ANR	861306	Symbol	core -> anal -> sdb_zigns		859239						
ANR	861307	Symbol	R_PERM_X		859239						
ANR	861308	Symbol	r_cons_is_breaked		859239						
ANR	861309	Symbol	core -> io		859239						
ANR	861310	Symbol	map -> itv . addr		859239						
ANR	861311	Symbol	* * * * core		859239						
ANR	861312	Symbol	addr		859239						
ANR	861313	Symbol	map		859239						
ANR	861314	Symbol	* * core		859239						
ANR	861315	Symbol	core -> config		859239						
ANR	861316	Symbol	r_str_startswith		859239						
ANR	861317	Symbol	c		859239						
ANR	861318	Symbol	help_msg_aa		859239						
ANR	861319	Symbol	r_print_rowlog		859239						
ANR	861320	Symbol	false		859239						
ANR	861321	Symbol	* * * core -> io		859239						
ANR	861322	Symbol	* core -> io		859239						
ANR	861323	Symbol	* core -> anal		859239						
ANR	861324	Symbol	r_anal_var_list		859239						
ANR	861325	Symbol	strdup		859239						
ANR	861326	Symbol	r_core_get_boundaries_prot		859239						
ANR	861327	Symbol	core -> dbg		859239						
ANR	861328	Symbol	* * core -> dbg		859239						
ANR	861329	Symbol	* * core -> io		859239						
ANR	861330	Function	anal_fcn_data	8863:0:253355:254364							
ANR	861331	FunctionDef	"anal_fcn_data (RCore * core , const char * input)"		861330	0					
ANR	861332	CompoundStatement		8863:59:253414:254364	861330	0					
ANR	861333	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 ) ;"	8864:1:253417:253486	861330	0	True				
ANR	861334	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		861330	0					
ANR	861335	IdentifierDeclType	RAnalFunction *		861330	0					
ANR	861336	Identifier	fcn		861330	1					
ANR	861337	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		861330	2		=			
ANR	861338	Identifier	fcn		861330	0					
ANR	861339	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		861330	1					
ANR	861340	Callee	r_anal_get_fcn_in		861330	0					
ANR	861341	Identifier	r_anal_get_fcn_in		861330	0					
ANR	861342	ArgumentList	core -> anal		861330	1					
ANR	861343	Argument	core -> anal		861330	0					
ANR	861344	PtrMemberAccess	core -> anal		861330	0					
ANR	861345	Identifier	core		861330	0					
ANR	861346	Identifier	anal		861330	1					
ANR	861347	Argument	core -> offset		861330	1					
ANR	861348	PtrMemberAccess	core -> offset		861330	0					
ANR	861349	Identifier	core		861330	0					
ANR	861350	Identifier	offset		861330	1					
ANR	861351	Argument	- 1		861330	2					
ANR	861352	UnaryOperationExpression	- 1		861330	0					
ANR	861353	UnaryOperator	-		861330	0					
ANR	861354	PrimaryExpression	1		861330	1					
ANR	861355	IdentifierDeclStatement	ut32 fcn_size = r_anal_fcn_size ( fcn ) ;	8865:1:253489:253526	861330	1	True				
ANR	861356	IdentifierDecl	fcn_size = r_anal_fcn_size ( fcn )		861330	0					
ANR	861357	IdentifierDeclType	ut32		861330	0					
ANR	861358	Identifier	fcn_size		861330	1					
ANR	861359	AssignmentExpression	fcn_size = r_anal_fcn_size ( fcn )		861330	2		=			
ANR	861360	Identifier	fcn_size		861330	0					
ANR	861361	CallExpression	r_anal_fcn_size ( fcn )		861330	1					
ANR	861362	Callee	r_anal_fcn_size		861330	0					
ANR	861363	Identifier	r_anal_fcn_size		861330	0					
ANR	861364	ArgumentList	fcn		861330	1					
ANR	861365	Argument	fcn		861330	0					
ANR	861366	Identifier	fcn		861330	0					
ANR	861367	IfStatement	if ( fcn )		861330	2					
ANR	861368	Condition	fcn	8866:5:253533:253535	861330	0	True				
ANR	861369	Identifier	fcn		861330	0					
ANR	861370	CompoundStatement		8:2:184:219	861330	1					
ANR	861371	IdentifierDeclStatement	int i ;	8867:2:253542:253547	861330	0	True				
ANR	861372	IdentifierDecl	i		861330	0					
ANR	861373	IdentifierDeclType	int		861330	0					
ANR	861374	Identifier	i		861330	1					
ANR	861375	IdentifierDeclStatement	bool gap = false ;	8868:2:253551:253567	861330	1	True				
ANR	861376	IdentifierDecl	gap = false		861330	0					
ANR	861377	IdentifierDeclType	bool		861330	0					
ANR	861378	Identifier	gap		861330	1					
ANR	861379	AssignmentExpression	gap = false		861330	2		=			
ANR	861380	Identifier	false		861330	0					
ANR	861381	Identifier	false		861330	1					
ANR	861382	IdentifierDeclStatement	ut64 gap_addr = UT64_MAX ;	8869:2:253571:253595	861330	2	True				
ANR	861383	IdentifierDecl	gap_addr = UT64_MAX		861330	0					
ANR	861384	IdentifierDeclType	ut64		861330	0					
ANR	861385	Identifier	gap_addr		861330	1					
ANR	861386	AssignmentExpression	gap_addr = UT64_MAX		861330	2		=			
ANR	861387	Identifier	UT64_MAX		861330	0					
ANR	861388	Identifier	UT64_MAX		861330	1					
ANR	861389	IdentifierDeclStatement	"char * bitmap = calloc ( 1 , fcn_size ) ;"	8870:2:253599:253634	861330	3	True				
ANR	861390	IdentifierDecl	"* bitmap = calloc ( 1 , fcn_size )"		861330	0					
ANR	861391	IdentifierDeclType	char *		861330	0					
ANR	861392	Identifier	bitmap		861330	1					
ANR	861393	AssignmentExpression	"* bitmap = calloc ( 1 , fcn_size )"		861330	2		=			
ANR	861394	Identifier	bitmap		861330	0					
ANR	861395	CallExpression	"calloc ( 1 , fcn_size )"		861330	1					
ANR	861396	Callee	calloc		861330	0					
ANR	861397	Identifier	calloc		861330	0					
ANR	861398	ArgumentList	1		861330	1					
ANR	861399	Argument	1		861330	0					
ANR	861400	PrimaryExpression	1		861330	0					
ANR	861401	Argument	fcn_size		861330	1					
ANR	861402	Identifier	fcn_size		861330	0					
ANR	861403	IfStatement	if ( bitmap )		861330	4					
ANR	861404	Condition	bitmap	8871:6:253642:253647	861330	0	True				
ANR	861405	Identifier	bitmap		861330	0					
ANR	861406	CompoundStatement		11:3:258:273	861330	1					
ANR	861407	IdentifierDeclStatement	RAnalBlock * b ;	8872:3:253655:253668	861330	0	True				
ANR	861408	IdentifierDecl	* b		861330	0					
ANR	861409	IdentifierDeclType	RAnalBlock *		861330	0					
ANR	861410	Identifier	b		861330	1					
ANR	861411	IdentifierDeclStatement	RListIter * iter ;	8873:3:253673:253688	861330	1	True				
ANR	861412	IdentifierDecl	* iter		861330	0					
ANR	861413	IdentifierDeclType	RListIter *		861330	0					
ANR	861414	Identifier	iter		861330	1					
ANR	861415	Statement	r_list_foreach	8874:3:253693:253706	861330	2	True				
ANR	861416	Statement	(	8874:18:253708:253708	861330	3	True				
ANR	861417	Statement	fcn	8874:19:253709:253711	861330	4	True				
ANR	861418	Statement	->	8874:22:253712:253713	861330	5	True				
ANR	861419	Statement	bbs	8874:24:253714:253716	861330	6	True				
ANR	861420	Statement	","	8874:27:253717:253717	861330	7	True				
ANR	861421	Statement	iter	8874:29:253719:253722	861330	8	True				
ANR	861422	Statement	","	8874:33:253723:253723	861330	9	True				
ANR	861423	Statement	b	8874:35:253725:253725	861330	10	True				
ANR	861424	Statement	)	8874:36:253726:253726	861330	11	True				
ANR	861425	CompoundStatement		14:4:352:389	861330	12					
ANR	861426	IdentifierDeclStatement	int f = b -> addr - fcn -> addr ;	8875:4:253734:253761	861330	0	True				
ANR	861427	IdentifierDecl	f = b -> addr - fcn -> addr		861330	0					
ANR	861428	IdentifierDeclType	int		861330	0					
ANR	861429	Identifier	f		861330	1					
ANR	861430	AssignmentExpression	f = b -> addr - fcn -> addr		861330	2		=			
ANR	861431	Identifier	f		861330	0					
ANR	861432	AdditiveExpression	b -> addr - fcn -> addr		861330	1		-			
ANR	861433	PtrMemberAccess	b -> addr		861330	0					
ANR	861434	Identifier	b		861330	0					
ANR	861435	Identifier	addr		861330	1					
ANR	861436	PtrMemberAccess	fcn -> addr		861330	1					
ANR	861437	Identifier	fcn		861330	0					
ANR	861438	Identifier	addr		861330	1					
ANR	861439	IdentifierDeclStatement	"int t = R_MIN ( f + b -> size , fcn_size ) ;"	8876:4:253767:253804	861330	1	True				
ANR	861440	IdentifierDecl	"t = R_MIN ( f + b -> size , fcn_size )"		861330	0					
ANR	861441	IdentifierDeclType	int		861330	0					
ANR	861442	Identifier	t		861330	1					
ANR	861443	AssignmentExpression	"t = R_MIN ( f + b -> size , fcn_size )"		861330	2		=			
ANR	861444	Identifier	t		861330	0					
ANR	861445	CallExpression	"R_MIN ( f + b -> size , fcn_size )"		861330	1					
ANR	861446	Callee	R_MIN		861330	0					
ANR	861447	Identifier	R_MIN		861330	0					
ANR	861448	ArgumentList	f + b -> size		861330	1					
ANR	861449	Argument	f + b -> size		861330	0					
ANR	861450	AdditiveExpression	f + b -> size		861330	0		+			
ANR	861451	Identifier	f		861330	0					
ANR	861452	PtrMemberAccess	b -> size		861330	1					
ANR	861453	Identifier	b		861330	0					
ANR	861454	Identifier	size		861330	1					
ANR	861455	Argument	fcn_size		861330	1					
ANR	861456	Identifier	fcn_size		861330	0					
ANR	861457	IfStatement	if ( f >= 0 )		861330	2					
ANR	861458	Condition	f >= 0	8877:8:253814:253819	861330	0	True				
ANR	861459	RelationalExpression	f >= 0		861330	0		>=			
ANR	861460	Identifier	f		861330	0					
ANR	861461	PrimaryExpression	0		861330	1					
ANR	861462	CompoundStatement		15:16:407:407	861330	1					
ANR	861463	WhileStatement	while ( f < t )		861330	0					
ANR	861464	Condition	f < t	8878:12:253836:253840	861330	0	True				
ANR	861465	RelationalExpression	f < t		861330	0		<			
ANR	861466	Identifier	f		861330	0					
ANR	861467	Identifier	t		861330	1					
ANR	861468	CompoundStatement		16:19:428:428	861330	1					
ANR	861469	ExpressionStatement	bitmap [ f ++ ] = 1	8879:6:253851:253866	861330	0	True				
ANR	861470	AssignmentExpression	bitmap [ f ++ ] = 1		861330	0		=			
ANR	861471	ArrayIndexing	bitmap [ f ++ ]		861330	0					
ANR	861472	Identifier	bitmap		861330	0					
ANR	861473	PostIncDecOperationExpression	f ++		861330	1					
ANR	861474	Identifier	f		861330	0					
ANR	861475	IncDec	++		861330	1					
ANR	861476	PrimaryExpression	1		861330	1					
ANR	861477	ForStatement	for ( i = 0 ; i < fcn_size ; i ++ )		861330	5					
ANR	861478	ForInit	i = 0 ;	8884:7:253897:253902	861330	0	True				
ANR	861479	AssignmentExpression	i = 0		861330	0		=			
ANR	861480	Identifier	i		861330	0					
ANR	861481	PrimaryExpression	0		861330	1					
ANR	861482	Condition	i < fcn_size	8884:14:253904:253915	861330	1	True				
ANR	861483	RelationalExpression	i < fcn_size		861330	0		<			
ANR	861484	Identifier	i		861330	0					
ANR	861485	Identifier	fcn_size		861330	1					
ANR	861486	PostIncDecOperationExpression	i ++	8884:28:253918:253920	861330	2	True				
ANR	861487	Identifier	i		861330	0					
ANR	861488	IncDec	++		861330	1					
ANR	861489	CompoundStatement		23:3:513:538	861330	3					
ANR	861490	IdentifierDeclStatement	ut64 here = fcn -> addr + i ;	8885:3:253928:253953	861330	0	True				
ANR	861491	IdentifierDecl	here = fcn -> addr + i		861330	0					
ANR	861492	IdentifierDeclType	ut64		861330	0					
ANR	861493	Identifier	here		861330	1					
ANR	861494	AssignmentExpression	here = fcn -> addr + i		861330	2		=			
ANR	861495	Identifier	here		861330	0					
ANR	861496	AdditiveExpression	fcn -> addr + i		861330	1		+			
ANR	861497	PtrMemberAccess	fcn -> addr		861330	0					
ANR	861498	Identifier	fcn		861330	0					
ANR	861499	Identifier	addr		861330	1					
ANR	861500	Identifier	i		861330	1					
ANR	861501	IfStatement	if ( bitmap && bitmap [ i ] )		861330	1					
ANR	861502	Condition	bitmap && bitmap [ i ]	8886:7:253962:253980	861330	0	True				
ANR	861503	AndExpression	bitmap && bitmap [ i ]		861330	0		&&			
ANR	861504	Identifier	bitmap		861330	0					
ANR	861505	ArrayIndexing	bitmap [ i ]		861330	1					
ANR	861506	Identifier	bitmap		861330	0					
ANR	861507	Identifier	i		861330	1					
ANR	861508	CompoundStatement		24:28:568:568	861330	1					
ANR	861509	IfStatement	if ( gap )		861330	0					
ANR	861510	Condition	gap	8887:8:253993:253995	861330	0	True				
ANR	861511	Identifier	gap		861330	0					
ANR	861512	CompoundStatement		25:13:583:583	861330	1					
ANR	861513	Statement	r_cons_printf	8888:5:254005:254017	861330	0	True				
ANR	861514	Statement	(	8888:19:254019:254019	861330	1	True				
ANR	861515	Statement	"""Cd %d @ 0x%08"""	8888:20:254020:254034	861330	2	True				
ANR	861516	Statement	PFMT64x	8888:35:254035:254041	861330	3	True				
ANR	861517	Statement	"""\\n"""	8888:42:254042:254045	861330	4	True				
ANR	861518	Statement	","	8888:46:254046:254046	861330	5	True				
ANR	861519	Statement	here	8888:48:254048:254051	861330	6	True				
ANR	861520	Statement	-	8888:53:254053:254053	861330	7	True				
ANR	861521	Statement	gap_addr	8888:55:254055:254062	861330	8	True				
ANR	861522	Statement	","	8888:63:254063:254063	861330	9	True				
ANR	861523	Statement	gap_addr	8888:65:254065:254072	861330	10	True				
ANR	861524	Statement	)	8888:73:254073:254073	861330	11	True				
ANR	861525	ExpressionStatement		8888:74:254074:254074	861330	12	True				
ANR	861526	ExpressionStatement	gap = false	8889:5:254081:254092	861330	13	True				
ANR	861527	AssignmentExpression	gap = false		861330	0		=			
ANR	861528	Identifier	gap		861330	0					
ANR	861529	Identifier	false		861330	1					
ANR	861530	ExpressionStatement	gap_addr = UT64_MAX	8891:4:254104:254123	861330	1	True				
ANR	861531	AssignmentExpression	gap_addr = UT64_MAX		861330	0		=			
ANR	861532	Identifier	gap_addr		861330	0					
ANR	861533	Identifier	UT64_MAX		861330	1					
ANR	861534	ElseStatement	else		861330	0					
ANR	861535	CompoundStatement		30:10:720:720	861330	0					
ANR	861536	IfStatement	if ( ! gap )		861330	0					
ANR	861537	Condition	! gap	8893:8:254145:254148	861330	0	True				
ANR	861538	UnaryOperationExpression	! gap		861330	0					
ANR	861539	UnaryOperator	!		861330	0					
ANR	861540	Identifier	gap		861330	1					
ANR	861541	CompoundStatement		31:14:736:736	861330	1					
ANR	861542	ExpressionStatement	gap = true	8894:5:254158:254168	861330	0	True				
ANR	861543	AssignmentExpression	gap = true		861330	0		=			
ANR	861544	Identifier	gap		861330	0					
ANR	861545	Identifier	true		861330	1					
ANR	861546	ExpressionStatement	gap_addr = here	8895:5:254175:254190	861330	1	True				
ANR	861547	AssignmentExpression	gap_addr = here		861330	0		=			
ANR	861548	Identifier	gap_addr		861330	0					
ANR	861549	Identifier	here		861330	1					
ANR	861550	IfStatement	if ( gap )		861330	6					
ANR	861551	Condition	gap	8899:6:254213:254215	861330	0	True				
ANR	861552	Identifier	gap		861330	0					
ANR	861553	CompoundStatement		37:11:803:803	861330	1					
ANR	861554	Statement	r_cons_printf	8900:3:254223:254235	861330	0	True				
ANR	861555	Statement	(	8900:17:254237:254237	861330	1	True				
ANR	861556	Statement	"""Cd %d @ 0x%08"""	8900:18:254238:254252	861330	2	True				
ANR	861557	Statement	PFMT64x	8900:33:254253:254259	861330	3	True				
ANR	861558	Statement	"""\\n"""	8900:40:254260:254263	861330	4	True				
ANR	861559	Statement	","	8900:44:254264:254264	861330	5	True				
ANR	861560	Statement	fcn	8900:46:254266:254268	861330	6	True				
ANR	861561	Statement	->	8900:49:254269:254270	861330	7	True				
ANR	861562	Statement	addr	8900:51:254271:254274	861330	8	True				
ANR	861563	Statement	+	8900:56:254276:254276	861330	9	True				
ANR	861564	Statement	fcn_size	8900:58:254278:254285	861330	10	True				
ANR	861565	Statement	-	8900:67:254287:254287	861330	11	True				
ANR	861566	Statement	gap_addr	8900:69:254289:254296	861330	12	True				
ANR	861567	Statement	","	8900:77:254297:254297	861330	13	True				
ANR	861568	Statement	gap_addr	8900:79:254299:254306	861330	14	True				
ANR	861569	Statement	)	8900:87:254307:254307	861330	15	True				
ANR	861570	ExpressionStatement		8900:88:254308:254308	861330	16	True				
ANR	861571	ExpressionStatement	free ( bitmap )	8902:2:254316:254329	861330	7	True				
ANR	861572	CallExpression	free ( bitmap )		861330	0					
ANR	861573	Callee	free		861330	0					
ANR	861574	Identifier	free		861330	0					
ANR	861575	ArgumentList	bitmap		861330	1					
ANR	861576	Argument	bitmap		861330	0					
ANR	861577	Identifier	bitmap		861330	0					
ANR	861578	ReturnStatement	return true ;	8903:2:254333:254344	861330	8	True				
ANR	861579	Identifier	true		861330	0					
ANR	861580	ReturnStatement	return false ;	8905:1:254350:254362	861330	3	True				
ANR	861581	Identifier	false		861330	0					
ANR	861582	ReturnType	static bool		861330	1					
ANR	861583	Identifier	anal_fcn_data		861330	2					
ANR	861584	ParameterList	"RCore * core , const char * input"		861330	3					
ANR	861585	Parameter	RCore * core	8863:27:253382:253392	861330	0	True				
ANR	861586	ParameterType	RCore *		861330	0					
ANR	861587	Identifier	core		861330	1					
ANR	861588	Parameter	const char * input	8863:40:253395:253411	861330	1	True				
ANR	861589	ParameterType	const char *		861330	0					
ANR	861590	Identifier	input		861330	1					
ANR	861591	CFGEntryNode	ENTRY		861330		True				
ANR	861592	CFGExitNode	EXIT		861330		True				
ANR	861593	Symbol	here		861330						
ANR	861594	Symbol	* fcn		861330						
ANR	861595	Symbol	r_anal_fcn_size		861330						
ANR	861596	Symbol	b -> size		861330						
ANR	861597	Symbol	* core		861330						
ANR	861598	Symbol	core -> offset		861330						
ANR	861599	Symbol	fcn_size		861330						
ANR	861600	Symbol	calloc		861330						
ANR	861601	Symbol	core -> anal		861330						
ANR	861602	Symbol	b -> addr		861330						
ANR	861603	Symbol	fcn		861330						
ANR	861604	Symbol	* bitmap		861330						
ANR	861605	Symbol	gap		861330						
ANR	861606	Symbol	bitmap		861330						
ANR	861607	Symbol	UT64_MAX		861330						
ANR	861608	Symbol	b		861330						
ANR	861609	Symbol	gap_addr		861330						
ANR	861610	Symbol	f		861330						
ANR	861611	Symbol	false		861330						
ANR	861612	Symbol	i		861330						
ANR	861613	Symbol	iter		861330						
ANR	861614	Symbol	R_MIN		861330						
ANR	861615	Symbol	* b		861330						
ANR	861616	Symbol	core		861330						
ANR	861617	Symbol	input		861330						
ANR	861618	Symbol	r_anal_get_fcn_in		861330						
ANR	861619	Symbol	* i		861330						
ANR	861620	Symbol	t		861330						
ANR	861621	Symbol	true		861330						
ANR	861622	Symbol	fcn -> addr		861330						
ANR	861623	Function	anal_fcn_data_gaps	8908:0:254367:255044							
ANR	861624	FunctionDef	"anal_fcn_data_gaps (RCore * core , const char * input)"		861623	0					
ANR	861625	CompoundStatement		8908:64:254431:255044	861623	0					
ANR	861626	IdentifierDeclStatement	ut64 end = UT64_MAX ;	8909:1:254434:254453	861623	0	True				
ANR	861627	IdentifierDecl	end = UT64_MAX		861623	0					
ANR	861628	IdentifierDeclType	ut64		861623	0					
ANR	861629	Identifier	end		861623	1					
ANR	861630	AssignmentExpression	end = UT64_MAX		861623	2		=			
ANR	861631	Identifier	UT64_MAX		861623	0					
ANR	861632	Identifier	UT64_MAX		861623	1					
ANR	861633	IdentifierDeclStatement	RAnalFunction * fcn ;	8910:1:254456:254474	861623	1	True				
ANR	861634	IdentifierDecl	* fcn		861623	0					
ANR	861635	IdentifierDeclType	RAnalFunction *		861623	0					
ANR	861636	Identifier	fcn		861623	1					
ANR	861637	IdentifierDeclStatement	RListIter * iter ;	8911:1:254477:254492	861623	2	True				
ANR	861638	IdentifierDecl	* iter		861623	0					
ANR	861639	IdentifierDeclType	RListIter *		861623	0					
ANR	861640	Identifier	iter		861623	1					
ANR	861641	IdentifierDeclStatement	"int i , wordsize = ( core -> assembler -> bits == 64 ) ? 8 : 4 ;"	8912:1:254495:254548	861623	3	True				
ANR	861642	IdentifierDecl	i		861623	0					
ANR	861643	IdentifierDeclType	int		861623	0					
ANR	861644	Identifier	i		861623	1					
ANR	861645	IdentifierDecl	wordsize = ( core -> assembler -> bits == 64 ) ? 8 : 4		861623	1					
ANR	861646	IdentifierDeclType	int		861623	0					
ANR	861647	Identifier	wordsize		861623	1					
ANR	861648	AssignmentExpression	wordsize = ( core -> assembler -> bits == 64 ) ? 8 : 4		861623	2		=			
ANR	861649	Identifier	wordsize		861623	0					
ANR	861650	ConditionalExpression	( core -> assembler -> bits == 64 ) ? 8 : 4		861623	1					
ANR	861651	Condition	core -> assembler -> bits == 64		861623	0					
ANR	861652	EqualityExpression	core -> assembler -> bits == 64		861623	0		==			
ANR	861653	PtrMemberAccess	core -> assembler -> bits		861623	0					
ANR	861654	PtrMemberAccess	core -> assembler		861623	0					
ANR	861655	Identifier	core		861623	0					
ANR	861656	Identifier	assembler		861623	1					
ANR	861657	Identifier	bits		861623	1					
ANR	861658	PrimaryExpression	64		861623	1					
ANR	861659	PrimaryExpression	8		861623	1					
ANR	861660	PrimaryExpression	4		861623	2					
ANR	861661	ExpressionStatement	"r_list_sort ( core -> anal -> fcns , cmpaddr )"	8913:1:254551:254590	861623	4	True				
ANR	861662	CallExpression	"r_list_sort ( core -> anal -> fcns , cmpaddr )"		861623	0					
ANR	861663	Callee	r_list_sort		861623	0					
ANR	861664	Identifier	r_list_sort		861623	0					
ANR	861665	ArgumentList	core -> anal -> fcns		861623	1					
ANR	861666	Argument	core -> anal -> fcns		861623	0					
ANR	861667	PtrMemberAccess	core -> anal -> fcns		861623	0					
ANR	861668	PtrMemberAccess	core -> anal		861623	0					
ANR	861669	Identifier	core		861623	0					
ANR	861670	Identifier	anal		861623	1					
ANR	861671	Identifier	fcns		861623	1					
ANR	861672	Argument	cmpaddr		861623	1					
ANR	861673	Identifier	cmpaddr		861623	0					
ANR	861674	Statement	r_list_foreach	8914:1:254593:254606	861623	5	True				
ANR	861675	Statement	(	8914:16:254608:254608	861623	6	True				
ANR	861676	Statement	core	8914:17:254609:254612	861623	7	True				
ANR	861677	Statement	->	8914:21:254613:254614	861623	8	True				
ANR	861678	Statement	anal	8914:23:254615:254618	861623	9	True				
ANR	861679	Statement	->	8914:27:254619:254620	861623	10	True				
ANR	861680	Statement	fcns	8914:29:254621:254624	861623	11	True				
ANR	861681	Statement	","	8914:33:254625:254625	861623	12	True				
ANR	861682	Statement	iter	8914:35:254627:254630	861623	13	True				
ANR	861683	Statement	","	8914:39:254631:254631	861623	14	True				
ANR	861684	Statement	fcn	8914:41:254633:254635	861623	15	True				
ANR	861685	Statement	)	8914:44:254636:254636	861623	16	True				
ANR	861686	CompoundStatement		7:46:206:206	861623	17					
ANR	861687	IfStatement	if ( end != UT64_MAX )		861623	0					
ANR	861688	Condition	end != UT64_MAX	8915:6:254646:254660	861623	0	True				
ANR	861689	EqualityExpression	end != UT64_MAX		861623	0		!=			
ANR	861690	Identifier	end		861623	0					
ANR	861691	Identifier	UT64_MAX		861623	1					
ANR	861692	CompoundStatement		9:3:236:263	861623	1					
ANR	861693	IdentifierDeclStatement	int range = fcn -> addr - end ;	8916:3:254668:254695	861623	0	True				
ANR	861694	IdentifierDecl	range = fcn -> addr - end		861623	0					
ANR	861695	IdentifierDeclType	int		861623	0					
ANR	861696	Identifier	range		861623	1					
ANR	861697	AssignmentExpression	range = fcn -> addr - end		861623	2		=			
ANR	861698	Identifier	range		861623	0					
ANR	861699	AdditiveExpression	fcn -> addr - end		861623	1		-			
ANR	861700	PtrMemberAccess	fcn -> addr		861623	0					
ANR	861701	Identifier	fcn		861623	0					
ANR	861702	Identifier	addr		861623	1					
ANR	861703	Identifier	end		861623	1					
ANR	861704	IfStatement	if ( range > 0 )		861623	1					
ANR	861705	Condition	range > 0	8917:7:254704:254712	861623	0	True				
ANR	861706	RelationalExpression	range > 0		861623	0		>			
ANR	861707	Identifier	range		861623	0					
ANR	861708	PrimaryExpression	0		861623	1					
ANR	861709	CompoundStatement		10:18:283:283	861623	1					
ANR	861710	ForStatement	for ( i = 0 ; i + wordsize < range ; i += wordsize )		861623	0					
ANR	861711	ForInit	i = 0 ;	8918:9:254726:254731	861623	0	True				
ANR	861712	AssignmentExpression	i = 0		861623	0		=			
ANR	861713	Identifier	i		861623	0					
ANR	861714	PrimaryExpression	0		861623	1					
ANR	861715	Condition	i + wordsize < range	8918:16:254733:254752	861623	1	True				
ANR	861716	RelationalExpression	i + wordsize < range		861623	0		<			
ANR	861717	AdditiveExpression	i + wordsize		861623	0		+			
ANR	861718	Identifier	i		861623	0					
ANR	861719	Identifier	wordsize		861623	1					
ANR	861720	Identifier	range		861623	1					
ANR	861721	AssignmentExpression	i += wordsize	8918:38:254755:254766	861623	2	True	+=			
ANR	861722	Identifier	i		861623	0					
ANR	861723	Identifier	wordsize		861623	1					
ANR	861724	CompoundStatement		11:52:337:337	861623	3					
ANR	861725	Statement	r_cons_printf	8919:5:254776:254788	861623	0	True				
ANR	861726	Statement	(	8919:19:254790:254790	861623	1	True				
ANR	861727	Statement	"""Cd %d @ 0x%08"""	8919:20:254791:254805	861623	2	True				
ANR	861728	Statement	PFMT64x	8919:35:254806:254812	861623	3	True				
ANR	861729	Statement	"""\\n"""	8919:42:254813:254816	861623	4	True				
ANR	861730	Statement	","	8919:46:254817:254817	861623	5	True				
ANR	861731	Statement	wordsize	8919:48:254819:254826	861623	6	True				
ANR	861732	Statement	","	8919:56:254827:254827	861623	7	True				
ANR	861733	Statement	end	8919:58:254829:254831	861623	8	True				
ANR	861734	Statement	+	8919:62:254833:254833	861623	9	True				
ANR	861735	Statement	i	8919:64:254835:254835	861623	10	True				
ANR	861736	Statement	)	8919:65:254836:254836	861623	11	True				
ANR	861737	ExpressionStatement		8919:66:254837:254837	861623	12	True				
ANR	861738	Statement	r_cons_printf	8921:4:254849:254861	861623	1	True				
ANR	861739	Statement	(	8921:18:254863:254863	861623	2	True				
ANR	861740	Statement	"""Cd %d @ 0x%08"""	8921:19:254864:254878	861623	3	True				
ANR	861741	Statement	PFMT64x	8921:34:254879:254885	861623	4	True				
ANR	861742	Statement	"""\\n"""	8921:41:254886:254889	861623	5	True				
ANR	861743	Statement	","	8921:45:254890:254890	861623	6	True				
ANR	861744	Statement	range	8921:47:254892:254896	861623	7	True				
ANR	861745	Statement	-	8921:53:254898:254898	861623	8	True				
ANR	861746	Statement	i	8921:55:254900:254900	861623	9	True				
ANR	861747	Statement	","	8921:56:254901:254901	861623	10	True				
ANR	861748	Statement	end	8921:58:254903:254905	861623	11	True				
ANR	861749	Statement	+	8921:62:254907:254907	861623	12	True				
ANR	861750	Statement	i	8921:64:254909:254909	861623	13	True				
ANR	861751	Statement	)	8921:65:254910:254910	861623	14	True				
ANR	861752	ExpressionStatement		8921:66:254911:254911	861623	15	True				
ANR	861753	ExpressionStatement	end = fcn -> addr + r_anal_fcn_size ( fcn )	8925:2:254986:255025	861623	1	True				
ANR	861754	AssignmentExpression	end = fcn -> addr + r_anal_fcn_size ( fcn )		861623	0		=			
ANR	861755	Identifier	end		861623	0					
ANR	861756	AdditiveExpression	fcn -> addr + r_anal_fcn_size ( fcn )		861623	1		+			
ANR	861757	PtrMemberAccess	fcn -> addr		861623	0					
ANR	861758	Identifier	fcn		861623	0					
ANR	861759	Identifier	addr		861623	1					
ANR	861760	CallExpression	r_anal_fcn_size ( fcn )		861623	1					
ANR	861761	Callee	r_anal_fcn_size		861623	0					
ANR	861762	Identifier	r_anal_fcn_size		861623	0					
ANR	861763	ArgumentList	fcn		861623	1					
ANR	861764	Argument	fcn		861623	0					
ANR	861765	Identifier	fcn		861623	0					
ANR	861766	ReturnStatement	return true ;	8927:1:255031:255042	861623	18	True				
ANR	861767	Identifier	true		861623	0					
ANR	861768	ReturnType	static bool		861623	1					
ANR	861769	Identifier	anal_fcn_data_gaps		861623	2					
ANR	861770	ParameterList	"RCore * core , const char * input"		861623	3					
ANR	861771	Parameter	RCore * core	8908:32:254399:254409	861623	0	True				
ANR	861772	ParameterType	RCore *		861623	0					
ANR	861773	Identifier	core		861623	1					
ANR	861774	Parameter	const char * input	8908:45:254412:254428	861623	1	True				
ANR	861775	ParameterType	const char *		861623	0					
ANR	861776	Identifier	input		861623	1					
ANR	861777	CFGEntryNode	ENTRY		861623		True				
ANR	861778	CFGExitNode	EXIT		861623		True				
ANR	861779	Symbol	* fcn		861623						
ANR	861780	Symbol	r_anal_fcn_size		861623						
ANR	861781	Symbol	core -> assembler -> bits		861623						
ANR	861782	Symbol	* core		861623						
ANR	861783	Symbol	iter		861623						
ANR	861784	Symbol	i		861623						
ANR	861785	Symbol	core -> assembler		861623						
ANR	861786	Symbol	range		861623						
ANR	861787	Symbol	core -> anal -> fcns		861623						
ANR	861788	Symbol	core -> anal		861623						
ANR	861789	Symbol	fcn		861623						
ANR	861790	Symbol	* core -> assembler		861623						
ANR	861791	Symbol	core		861623						
ANR	861792	Symbol	input		861623						
ANR	861793	Symbol	* core -> anal		861623						
ANR	861794	Symbol	wordsize		861623						
ANR	861795	Symbol	cmpaddr		861623						
ANR	861796	Symbol	true		861623						
ANR	861797	Symbol	fcn -> addr		861623						
ANR	861798	Symbol	end		861623						
ANR	861799	Symbol	UT64_MAX		861623						
ANR	861800	Symbol	* * core		861623						
ANR	861801	Function	cmd_anal_rtti	8930:0:255047:255697							
ANR	861802	FunctionDef	"cmd_anal_rtti (RCore * core , const char * input)"		861801	0					
ANR	861803	CompoundStatement		8930:58:255105:255697	861801	0					
ANR	861804	SwitchStatement	switch ( input [ 0 ] )		861801	0					
ANR	861805	Condition	input [ 0 ]	8931:9:255116:255123	861801	0	True				
ANR	861806	ArrayIndexing	input [ 0 ]		861801	0					
ANR	861807	Identifier	input		861801	0					
ANR	861808	PrimaryExpression	0		861801	1					
ANR	861809	CompoundStatement		2:19:20:20	861801	1					
ANR	861810	Label	case '\\0' :	8932:1:255129:255138	861801	0	True				
ANR	861811	Label	case 'j' :	8933:1:255150:255158	861801	1	True				
ANR	861812	ExpressionStatement	"r_anal_rtti_print_at_vtable ( core -> anal , core -> offset , input [ 0 ] )"	8934:2:255172:255236	861801	2	True				
ANR	861813	CallExpression	"r_anal_rtti_print_at_vtable ( core -> anal , core -> offset , input [ 0 ] )"		861801	0					
ANR	861814	Callee	r_anal_rtti_print_at_vtable		861801	0					
ANR	861815	Identifier	r_anal_rtti_print_at_vtable		861801	0					
ANR	861816	ArgumentList	core -> anal		861801	1					
ANR	861817	Argument	core -> anal		861801	0					
ANR	861818	PtrMemberAccess	core -> anal		861801	0					
ANR	861819	Identifier	core		861801	0					
ANR	861820	Identifier	anal		861801	1					
ANR	861821	Argument	core -> offset		861801	1					
ANR	861822	PtrMemberAccess	core -> offset		861801	0					
ANR	861823	Identifier	core		861801	0					
ANR	861824	Identifier	offset		861801	1					
ANR	861825	Argument	input [ 0 ]		861801	2					
ANR	861826	ArrayIndexing	input [ 0 ]		861801	0					
ANR	861827	Identifier	input		861801	0					
ANR	861828	PrimaryExpression	0		861801	1					
ANR	861829	BreakStatement	break ;	8935:2:255240:255245	861801	3	True				
ANR	861830	Label	case 'a' :	8936:1:255248:255256	861801	4	True				
ANR	861831	ExpressionStatement	"r_anal_rtti_print_all ( core -> anal , input [ 1 ] )"	8937:2:255270:255314	861801	5	True				
ANR	861832	CallExpression	"r_anal_rtti_print_all ( core -> anal , input [ 1 ] )"		861801	0					
ANR	861833	Callee	r_anal_rtti_print_all		861801	0					
ANR	861834	Identifier	r_anal_rtti_print_all		861801	0					
ANR	861835	ArgumentList	core -> anal		861801	1					
ANR	861836	Argument	core -> anal		861801	0					
ANR	861837	PtrMemberAccess	core -> anal		861801	0					
ANR	861838	Identifier	core		861801	0					
ANR	861839	Identifier	anal		861801	1					
ANR	861840	Argument	input [ 1 ]		861801	1					
ANR	861841	ArrayIndexing	input [ 1 ]		861801	0					
ANR	861842	Identifier	input		861801	0					
ANR	861843	PrimaryExpression	1		861801	1					
ANR	861844	BreakStatement	break ;	8938:2:255318:255323	861801	6	True				
ANR	861845	Label	case 'r' :	8939:1:255326:255334	861801	7	True				
ANR	861846	ExpressionStatement	r_anal_rtti_recover_all ( core -> anal )	8940:2:255348:255384	861801	8	True				
ANR	861847	CallExpression	r_anal_rtti_recover_all ( core -> anal )		861801	0					
ANR	861848	Callee	r_anal_rtti_recover_all		861801	0					
ANR	861849	Identifier	r_anal_rtti_recover_all		861801	0					
ANR	861850	ArgumentList	core -> anal		861801	1					
ANR	861851	Argument	core -> anal		861801	0					
ANR	861852	PtrMemberAccess	core -> anal		861801	0					
ANR	861853	Identifier	core		861801	0					
ANR	861854	Identifier	anal		861801	1					
ANR	861855	BreakStatement	break ;	8941:2:255388:255393	861801	9	True				
ANR	861856	Label	case 'D' :	8942:1:255396:255404	861801	10	True				
ANR	861857	CompoundStatement		15:2:357:425	861801	11					
ANR	861858	IdentifierDeclStatement	char * name = r_str_trim_dup ( input + 1 ) ;	8943:2:255420:255459	861801	0	True				
ANR	861859	IdentifierDecl	* name = r_str_trim_dup ( input + 1 )		861801	0					
ANR	861860	IdentifierDeclType	char *		861801	0					
ANR	861861	Identifier	name		861801	1					
ANR	861862	AssignmentExpression	* name = r_str_trim_dup ( input + 1 )		861801	2		=			
ANR	861863	Identifier	name		861801	0					
ANR	861864	CallExpression	r_str_trim_dup ( input + 1 )		861801	1					
ANR	861865	Callee	r_str_trim_dup		861801	0					
ANR	861866	Identifier	r_str_trim_dup		861801	0					
ANR	861867	ArgumentList	input + 1		861801	1					
ANR	861868	Argument	input + 1		861801	0					
ANR	861869	AdditiveExpression	input + 1		861801	0		+			
ANR	861870	Identifier	input		861801	0					
ANR	861871	PrimaryExpression	1		861801	1					
ANR	861872	IdentifierDeclStatement	"char * demangled = r_anal_rtti_demangle_class_name ( core -> anal , name ) ;"	8944:2:255463:255531	861801	1	True				
ANR	861873	IdentifierDecl	"* demangled = r_anal_rtti_demangle_class_name ( core -> anal , name )"		861801	0					
ANR	861874	IdentifierDeclType	char *		861801	0					
ANR	861875	Identifier	demangled		861801	1					
ANR	861876	AssignmentExpression	"* demangled = r_anal_rtti_demangle_class_name ( core -> anal , name )"		861801	2		=			
ANR	861877	Identifier	demangled		861801	0					
ANR	861878	CallExpression	"r_anal_rtti_demangle_class_name ( core -> anal , name )"		861801	1					
ANR	861879	Callee	r_anal_rtti_demangle_class_name		861801	0					
ANR	861880	Identifier	r_anal_rtti_demangle_class_name		861801	0					
ANR	861881	ArgumentList	core -> anal		861801	1					
ANR	861882	Argument	core -> anal		861801	0					
ANR	861883	PtrMemberAccess	core -> anal		861801	0					
ANR	861884	Identifier	core		861801	0					
ANR	861885	Identifier	anal		861801	1					
ANR	861886	Argument	name		861801	1					
ANR	861887	Identifier	name		861801	0					
ANR	861888	ExpressionStatement	free ( name )	8945:2:255535:255546	861801	2	True				
ANR	861889	CallExpression	free ( name )		861801	0					
ANR	861890	Callee	free		861801	0					
ANR	861891	Identifier	free		861801	0					
ANR	861892	ArgumentList	name		861801	1					
ANR	861893	Argument	name		861801	0					
ANR	861894	Identifier	name		861801	0					
ANR	861895	IfStatement	if ( demangled )		861801	3					
ANR	861896	Condition	demangled	8946:6:255554:255562	861801	0	True				
ANR	861897	Identifier	demangled		861801	0					
ANR	861898	CompoundStatement		17:17:459:459	861801	1					
ANR	861899	ExpressionStatement	r_cons_println ( demangled )	8947:3:255570:255596	861801	0	True				
ANR	861900	CallExpression	r_cons_println ( demangled )		861801	0					
ANR	861901	Callee	r_cons_println		861801	0					
ANR	861902	Identifier	r_cons_println		861801	0					
ANR	861903	ArgumentList	demangled		861801	1					
ANR	861904	Argument	demangled		861801	0					
ANR	861905	Identifier	demangled		861801	0					
ANR	861906	ExpressionStatement	free ( demangled )	8948:3:255601:255617	861801	1	True				
ANR	861907	CallExpression	free ( demangled )		861801	0					
ANR	861908	Callee	free		861801	0					
ANR	861909	Identifier	free		861801	0					
ANR	861910	ArgumentList	demangled		861801	1					
ANR	861911	Argument	demangled		861801	0					
ANR	861912	Identifier	demangled		861801	0					
ANR	861913	BreakStatement	break ;	8950:2:255625:255630	861801	4	True				
ANR	861914	Label	default :	8952:1:255636:255644	861801	12	True				
ANR	861915	Identifier	default		861801	0					
ANR	861916	ExpressionStatement	"r_core_cmd_help ( core , help_msg_av )"	8953:2:255648:255683	861801	13	True				
ANR	861917	CallExpression	"r_core_cmd_help ( core , help_msg_av )"		861801	0					
ANR	861918	Callee	r_core_cmd_help		861801	0					
ANR	861919	Identifier	r_core_cmd_help		861801	0					
ANR	861920	ArgumentList	core		861801	1					
ANR	861921	Argument	core		861801	0					
ANR	861922	Identifier	core		861801	0					
ANR	861923	Argument	help_msg_av		861801	1					
ANR	861924	Identifier	help_msg_av		861801	0					
ANR	861925	BreakStatement	break ;	8954:2:255687:255692	861801	14	True				
ANR	861926	ReturnType	static void		861801	1					
ANR	861927	Identifier	cmd_anal_rtti		861801	2					
ANR	861928	ParameterList	"RCore * core , const char * input"		861801	3					
ANR	861929	Parameter	RCore * core	8930:26:255073:255083	861801	0	True				
ANR	861930	ParameterType	RCore *		861801	0					
ANR	861931	Identifier	core		861801	1					
ANR	861932	Parameter	const char * input	8930:39:255086:255102	861801	1	True				
ANR	861933	ParameterType	const char *		861801	0					
ANR	861934	Identifier	input		861801	1					
ANR	861935	CFGEntryNode	ENTRY		861801		True				
ANR	861936	CFGExitNode	EXIT		861801		True				
ANR	861937	Symbol	demangled		861801						
ANR	861938	Symbol	core		861801						
ANR	861939	Symbol	input		861801						
ANR	861940	Symbol	r_anal_rtti_demangle_class_name		861801						
ANR	861941	Symbol	* input		861801						
ANR	861942	Symbol	* core		861801						
ANR	861943	Symbol	name		861801						
ANR	861944	Symbol	help_msg_av		861801						
ANR	861945	Symbol	core -> offset		861801						
ANR	861946	Symbol	core -> anal		861801						
ANR	861947	Symbol	r_str_trim_dup		861801						
ANR	861948	Function	cmd_anal_virtual_functions	8958:0:255700:256035							
ANR	861949	FunctionDef	"cmd_anal_virtual_functions (RCore * core , const char * input)"		861948	0					
ANR	861950	CompoundStatement		8958:71:255771:256035	861948	0					
ANR	861951	SwitchStatement	switch ( input [ 0 ] )		861948	0					
ANR	861952	Condition	input [ 0 ]	8959:9:255782:255789	861948	0	True				
ANR	861953	ArrayIndexing	input [ 0 ]		861948	0					
ANR	861954	Identifier	input		861948	0					
ANR	861955	PrimaryExpression	0		861948	1					
ANR	861956	CompoundStatement		2:19:20:20	861948	1					
ANR	861957	Label	case '\\0' :	8960:1:255795:255804	861948	0	True				
ANR	861958	Label	case '*' :	8961:1:255815:255823	861948	1	True				
ANR	861959	Label	case 'j' :	8962:1:255835:255843	861948	2	True				
ANR	861960	ExpressionStatement	"r_anal_list_vtables ( core -> anal , input [ 0 ] )"	8963:2:255856:255898	861948	3	True				
ANR	861961	CallExpression	"r_anal_list_vtables ( core -> anal , input [ 0 ] )"		861948	0					
ANR	861962	Callee	r_anal_list_vtables		861948	0					
ANR	861963	Identifier	r_anal_list_vtables		861948	0					
ANR	861964	ArgumentList	core -> anal		861948	1					
ANR	861965	Argument	core -> anal		861948	0					
ANR	861966	PtrMemberAccess	core -> anal		861948	0					
ANR	861967	Identifier	core		861948	0					
ANR	861968	Identifier	anal		861948	1					
ANR	861969	Argument	input [ 0 ]		861948	1					
ANR	861970	ArrayIndexing	input [ 0 ]		861948	0					
ANR	861971	Identifier	input		861948	0					
ANR	861972	PrimaryExpression	0		861948	1					
ANR	861973	BreakStatement	break ;	8964:2:255902:255907	861948	4	True				
ANR	861974	Label	case 'r' :	8965:1:255910:255918	861948	5	True				
ANR	861975	ExpressionStatement	"cmd_anal_rtti ( core , input + 1 )"	8966:2:255931:255962	861948	6	True				
ANR	861976	CallExpression	"cmd_anal_rtti ( core , input + 1 )"		861948	0					
ANR	861977	Callee	cmd_anal_rtti		861948	0					
ANR	861978	Identifier	cmd_anal_rtti		861948	0					
ANR	861979	ArgumentList	core		861948	1					
ANR	861980	Argument	core		861948	0					
ANR	861981	Identifier	core		861948	0					
ANR	861982	Argument	input + 1		861948	1					
ANR	861983	AdditiveExpression	input + 1		861948	0		+			
ANR	861984	Identifier	input		861948	0					
ANR	861985	PrimaryExpression	1		861948	1					
ANR	861986	BreakStatement	break ;	8967:2:255966:255971	861948	7	True				
ANR	861987	Label	default :	8968:1:255974:255982	861948	8	True				
ANR	861988	Identifier	default		861948	0					
ANR	861989	ExpressionStatement	"r_core_cmd_help ( core , help_msg_av )"	8969:2:255986:256021	861948	9	True				
ANR	861990	CallExpression	"r_core_cmd_help ( core , help_msg_av )"		861948	0					
ANR	861991	Callee	r_core_cmd_help		861948	0					
ANR	861992	Identifier	r_core_cmd_help		861948	0					
ANR	861993	ArgumentList	core		861948	1					
ANR	861994	Argument	core		861948	0					
ANR	861995	Identifier	core		861948	0					
ANR	861996	Argument	help_msg_av		861948	1					
ANR	861997	Identifier	help_msg_av		861948	0					
ANR	861998	BreakStatement	break ;	8970:2:256025:256030	861948	10	True				
ANR	861999	ReturnType	static void		861948	1					
ANR	862000	Identifier	cmd_anal_virtual_functions		861948	2					
ANR	862001	ParameterList	"RCore * core , const char * input"		861948	3					
ANR	862002	Parameter	RCore * core	8958:39:255739:255749	861948	0	True				
ANR	862003	ParameterType	RCore *		861948	0					
ANR	862004	Identifier	core		861948	1					
ANR	862005	Parameter	const char * input	8958:52:255752:255768	861948	1	True				
ANR	862006	ParameterType	const char *		861948	0					
ANR	862007	Identifier	input		861948	1					
ANR	862008	CFGEntryNode	ENTRY		861948		True				
ANR	862009	CFGExitNode	EXIT		861948		True				
ANR	862010	Symbol	core		861948						
ANR	862011	Symbol	input		861948						
ANR	862012	Symbol	* input		861948						
ANR	862013	Symbol	* core		861948						
ANR	862014	Symbol	help_msg_av		861948						
ANR	862015	Symbol	core -> anal		861948						
ANR	862016	Function	cmd_anal_class_method	8976:0:256040:257859							
ANR	862017	FunctionDef	"cmd_anal_class_method (RCore * core , const char * input)"		862016	0					
ANR	862018	CompoundStatement		8976:66:256106:257859	862016	0					
ANR	862019	IdentifierDeclStatement	RAnalClassErr err = R_ANAL_CLASS_ERR_SUCCESS ;	8977:1:256109:256153	862016	0	True				
ANR	862020	IdentifierDecl	err = R_ANAL_CLASS_ERR_SUCCESS		862016	0					
ANR	862021	IdentifierDeclType	RAnalClassErr		862016	0					
ANR	862022	Identifier	err		862016	1					
ANR	862023	AssignmentExpression	err = R_ANAL_CLASS_ERR_SUCCESS		862016	2		=			
ANR	862024	Identifier	R_ANAL_CLASS_ERR_SUCCESS		862016	0					
ANR	862025	Identifier	R_ANAL_CLASS_ERR_SUCCESS		862016	1					
ANR	862026	IdentifierDeclStatement	char c = input [ 0 ] ;	8978:1:256156:256173	862016	1	True				
ANR	862027	IdentifierDecl	c = input [ 0 ]		862016	0					
ANR	862028	IdentifierDeclType	char		862016	0					
ANR	862029	Identifier	c		862016	1					
ANR	862030	AssignmentExpression	c = input [ 0 ]		862016	2		=			
ANR	862031	Identifier	c		862016	0					
ANR	862032	ArrayIndexing	input [ 0 ]		862016	1					
ANR	862033	Identifier	input		862016	0					
ANR	862034	PrimaryExpression	0		862016	1					
ANR	862035	SwitchStatement	switch ( c )		862016	2					
ANR	862036	Condition	c	8979:9:256184:256184	862016	0	True				
ANR	862037	Identifier	c		862016	0					
ANR	862038	CompoundStatement		4:12:80:80	862016	1					
ANR	862039	Label	case ' ' :	8980:1:256190:256198	862016	0	True				
ANR	862040	Label	case '-' :	8981:1:256210:256218	862016	1	True				
ANR	862041	Label	case 'n' :	8982:1:256231:256239	862016	2	True				
ANR	862042	CompoundStatement		24:2:454:478	862016	3					
ANR	862043	IdentifierDeclStatement	const char * str = r_str_trim_ro ( input + 1 ) ;	8983:2:256255:256298	862016	0	True				
ANR	862044	IdentifierDecl	* str = r_str_trim_ro ( input + 1 )		862016	0					
ANR	862045	IdentifierDeclType	const char *		862016	0					
ANR	862046	Identifier	str		862016	1					
ANR	862047	AssignmentExpression	* str = r_str_trim_ro ( input + 1 )		862016	2		=			
ANR	862048	Identifier	str		862016	0					
ANR	862049	CallExpression	r_str_trim_ro ( input + 1 )		862016	1					
ANR	862050	Callee	r_str_trim_ro		862016	0					
ANR	862051	Identifier	r_str_trim_ro		862016	0					
ANR	862052	ArgumentList	input + 1		862016	1					
ANR	862053	Argument	input + 1		862016	0					
ANR	862054	AdditiveExpression	input + 1		862016	0		+			
ANR	862055	Identifier	input		862016	0					
ANR	862056	PrimaryExpression	1		862016	1					
ANR	862057	IfStatement	if ( ! * str )		862016	1					
ANR	862058	Condition	! * str	8984:6:256306:256310	862016	0	True				
ANR	862059	UnaryOperationExpression	! * str		862016	0					
ANR	862060	UnaryOperator	!		862016	0					
ANR	862061	UnaryOperationExpression	* str		862016	1					
ANR	862062	UnaryOperator	*		862016	0					
ANR	862063	Identifier	str		862016	1					
ANR	862064	CompoundStatement		9:13:206:206	862016	1					
ANR	862065	ExpressionStatement	"eprintf ( ""No class name given.\\n"" )"	8985:3:256318:256352	862016	0	True				
ANR	862066	CallExpression	"eprintf ( ""No class name given.\\n"" )"		862016	0					
ANR	862067	Callee	eprintf		862016	0					
ANR	862068	Identifier	eprintf		862016	0					
ANR	862069	ArgumentList	"""No class name given.\\n"""		862016	1					
ANR	862070	Argument	"""No class name given.\\n"""		862016	0					
ANR	862071	PrimaryExpression	"""No class name given.\\n"""		862016	0					
ANR	862072	BreakStatement	break ;	8986:3:256357:256362	862016	1	True				
ANR	862073	IdentifierDeclStatement	char * cstr = strdup ( str ) ;	8988:2:256370:256395	862016	2	True				
ANR	862074	IdentifierDecl	* cstr = strdup ( str )		862016	0					
ANR	862075	IdentifierDeclType	char *		862016	0					
ANR	862076	Identifier	cstr		862016	1					
ANR	862077	AssignmentExpression	* cstr = strdup ( str )		862016	2		=			
ANR	862078	Identifier	cstr		862016	0					
ANR	862079	CallExpression	strdup ( str )		862016	1					
ANR	862080	Callee	strdup		862016	0					
ANR	862081	Identifier	strdup		862016	0					
ANR	862082	ArgumentList	str		862016	1					
ANR	862083	Argument	str		862016	0					
ANR	862084	Identifier	str		862016	0					
ANR	862085	IfStatement	if ( ! cstr )		862016	3					
ANR	862086	Condition	! cstr	8989:6:256403:256407	862016	0	True				
ANR	862087	UnaryOperationExpression	! cstr		862016	0					
ANR	862088	UnaryOperator	!		862016	0					
ANR	862089	Identifier	cstr		862016	1					
ANR	862090	CompoundStatement		14:13:303:303	862016	1					
ANR	862091	BreakStatement	break ;	8990:3:256415:256420	862016	0	True				
ANR	862092	IdentifierDeclStatement	"char * end = strchr ( cstr , ' ' ) ;"	8992:2:256428:256458	862016	4	True				
ANR	862093	IdentifierDecl	"* end = strchr ( cstr , ' ' )"		862016	0					
ANR	862094	IdentifierDeclType	char *		862016	0					
ANR	862095	Identifier	end		862016	1					
ANR	862096	AssignmentExpression	"* end = strchr ( cstr , ' ' )"		862016	2		=			
ANR	862097	Identifier	end		862016	0					
ANR	862098	CallExpression	"strchr ( cstr , ' ' )"		862016	1					
ANR	862099	Callee	strchr		862016	0					
ANR	862100	Identifier	strchr		862016	0					
ANR	862101	ArgumentList	cstr		862016	1					
ANR	862102	Argument	cstr		862016	0					
ANR	862103	Identifier	cstr		862016	0					
ANR	862104	Argument	' '		862016	1					
ANR	862105	PrimaryExpression	' '		862016	0					
ANR	862106	IfStatement	if ( ! end )		862016	5					
ANR	862107	Condition	! end	8993:6:256466:256469	862016	0	True				
ANR	862108	UnaryOperationExpression	! end		862016	0					
ANR	862109	UnaryOperator	!		862016	0					
ANR	862110	Identifier	end		862016	1					
ANR	862111	CompoundStatement		18:12:365:365	862016	1					
ANR	862112	ExpressionStatement	"eprintf ( ""No method name given.\\n"" )"	8994:3:256477:256512	862016	0	True				
ANR	862113	CallExpression	"eprintf ( ""No method name given.\\n"" )"		862016	0					
ANR	862114	Callee	eprintf		862016	0					
ANR	862115	Identifier	eprintf		862016	0					
ANR	862116	ArgumentList	"""No method name given.\\n"""		862016	1					
ANR	862117	Argument	"""No method name given.\\n"""		862016	0					
ANR	862118	PrimaryExpression	"""No method name given.\\n"""		862016	0					
ANR	862119	ExpressionStatement	free ( cstr )	8995:3:256517:256528	862016	1	True				
ANR	862120	CallExpression	free ( cstr )		862016	0					
ANR	862121	Callee	free		862016	0					
ANR	862122	Identifier	free		862016	0					
ANR	862123	ArgumentList	cstr		862016	1					
ANR	862124	Argument	cstr		862016	0					
ANR	862125	Identifier	cstr		862016	0					
ANR	862126	BreakStatement	break ;	8996:3:256533:256538	862016	2	True				
ANR	862127	ExpressionStatement	* end = '\\0'	8998:2:256546:256557	862016	6	True				
ANR	862128	AssignmentExpression	* end = '\\0'		862016	0		=			
ANR	862129	UnaryOperationExpression	* end		862016	0					
ANR	862130	UnaryOperator	*		862016	0					
ANR	862131	Identifier	end		862016	1					
ANR	862132	PrimaryExpression	'\\0'		862016	1					
ANR	862133	IdentifierDeclStatement	char * name_str = end + 1 ;	8999:2:256561:256585	862016	7	True				
ANR	862134	IdentifierDecl	* name_str = end + 1		862016	0					
ANR	862135	IdentifierDeclType	char *		862016	0					
ANR	862136	Identifier	name_str		862016	1					
ANR	862137	AssignmentExpression	* name_str = end + 1		862016	2		=			
ANR	862138	Identifier	name_str		862016	0					
ANR	862139	AdditiveExpression	end + 1		862016	1		+			
ANR	862140	Identifier	end		862016	0					
ANR	862141	PrimaryExpression	1		862016	1					
ANR	862142	IfStatement	if ( c == ' ' || c == 'n' )		862016	8					
ANR	862143	Condition	c == ' ' || c == 'n'	9001:6:256594:256613	862016	0	True				
ANR	862144	OrExpression	c == ' ' || c == 'n'		862016	0		||			
ANR	862145	EqualityExpression	c == ' '		862016	0		==			
ANR	862146	Identifier	c		862016	0					
ANR	862147	PrimaryExpression	' '		862016	1					
ANR	862148	EqualityExpression	c == 'n'		862016	1		==			
ANR	862149	Identifier	c		862016	0					
ANR	862150	PrimaryExpression	'n'		862016	1					
ANR	862151	CompoundStatement		26:28:509:509	862016	1					
ANR	862152	ExpressionStatement	"end = strchr ( name_str , ' ' )"	9002:3:256621:256649	862016	0	True				
ANR	862153	AssignmentExpression	"end = strchr ( name_str , ' ' )"		862016	0		=			
ANR	862154	Identifier	end		862016	0					
ANR	862155	CallExpression	"strchr ( name_str , ' ' )"		862016	1					
ANR	862156	Callee	strchr		862016	0					
ANR	862157	Identifier	strchr		862016	0					
ANR	862158	ArgumentList	name_str		862016	1					
ANR	862159	Argument	name_str		862016	0					
ANR	862160	Identifier	name_str		862016	0					
ANR	862161	Argument	' '		862016	1					
ANR	862162	PrimaryExpression	' '		862016	0					
ANR	862163	IfStatement	if ( ! end )		862016	1					
ANR	862164	Condition	! end	9003:7:256658:256661	862016	0	True				
ANR	862165	UnaryOperationExpression	! end		862016	0					
ANR	862166	UnaryOperator	!		862016	0					
ANR	862167	Identifier	end		862016	1					
ANR	862168	CompoundStatement		28:13:557:557	862016	1					
ANR	862169	IfStatement	if ( c == ' ' )		862016	0					
ANR	862170	Condition	c == ' '	9004:8:256674:256681	862016	0	True				
ANR	862171	EqualityExpression	c == ' '		862016	0		==			
ANR	862172	Identifier	c		862016	0					
ANR	862173	PrimaryExpression	' '		862016	1					
ANR	862174	CompoundStatement		29:18:577:577	862016	1					
ANR	862175	ExpressionStatement	"eprintf ( ""No offset given.\\n"" )"	9005:5:256691:256721	862016	0	True				
ANR	862176	CallExpression	"eprintf ( ""No offset given.\\n"" )"		862016	0					
ANR	862177	Callee	eprintf		862016	0					
ANR	862178	Identifier	eprintf		862016	0					
ANR	862179	ArgumentList	"""No offset given.\\n"""		862016	1					
ANR	862180	Argument	"""No offset given.\\n"""		862016	0					
ANR	862181	PrimaryExpression	"""No offset given.\\n"""		862016	0					
ANR	862182	ElseStatement	else		862016	0					
ANR	862183	IfStatement	if ( c == 'n' )		862016	0					
ANR	862184	Condition	c == 'n'	9006:15:256738:256745	862016	0	True				
ANR	862185	EqualityExpression	c == 'n'		862016	0		==			
ANR	862186	Identifier	c		862016	0					
ANR	862187	PrimaryExpression	'n'		862016	1					
ANR	862188	CompoundStatement		31:25:641:641	862016	1					
ANR	862189	ExpressionStatement	"eprintf ( ""No new method name given.\\n"" )"	9007:5:256755:256794	862016	0	True				
ANR	862190	CallExpression	"eprintf ( ""No new method name given.\\n"" )"		862016	0					
ANR	862191	Callee	eprintf		862016	0					
ANR	862192	Identifier	eprintf		862016	0					
ANR	862193	ArgumentList	"""No new method name given.\\n"""		862016	1					
ANR	862194	Argument	"""No new method name given.\\n"""		862016	0					
ANR	862195	PrimaryExpression	"""No new method name given.\\n"""		862016	0					
ANR	862196	ExpressionStatement	free ( cstr )	9009:4:256806:256817	862016	1	True				
ANR	862197	CallExpression	free ( cstr )		862016	0					
ANR	862198	Callee	free		862016	0					
ANR	862199	Identifier	free		862016	0					
ANR	862200	ArgumentList	cstr		862016	1					
ANR	862201	Argument	cstr		862016	0					
ANR	862202	Identifier	cstr		862016	0					
ANR	862203	BreakStatement	break ;	9010:4:256823:256828	862016	2	True				
ANR	862204	ExpressionStatement	* end = '\\0'	9012:3:256838:256849	862016	2	True				
ANR	862205	AssignmentExpression	* end = '\\0'		862016	0		=			
ANR	862206	UnaryOperationExpression	* end		862016	0					
ANR	862207	UnaryOperator	*		862016	0					
ANR	862208	Identifier	end		862016	1					
ANR	862209	PrimaryExpression	'\\0'		862016	1					
ANR	862210	IfStatement	if ( c == ' ' )		862016	9					
ANR	862211	Condition	c == ' '	9015:6:256862:256869	862016	0	True				
ANR	862212	EqualityExpression	c == ' '		862016	0		==			
ANR	862213	Identifier	c		862016	0					
ANR	862214	PrimaryExpression	' '		862016	1					
ANR	862215	CompoundStatement		47:3:869:885	862016	1					
ANR	862216	IdentifierDeclStatement	char * addr_str = end + 1 ;	9016:3:256877:256901	862016	0	True				
ANR	862217	IdentifierDecl	* addr_str = end + 1		862016	0					
ANR	862218	IdentifierDeclType	char *		862016	0					
ANR	862219	Identifier	addr_str		862016	1					
ANR	862220	AssignmentExpression	* addr_str = end + 1		862016	2		=			
ANR	862221	Identifier	addr_str		862016	0					
ANR	862222	AdditiveExpression	end + 1		862016	1		+			
ANR	862223	Identifier	end		862016	0					
ANR	862224	PrimaryExpression	1		862016	1					
ANR	862225	ExpressionStatement	"end = strchr ( addr_str , ' ' )"	9017:3:256906:256934	862016	1	True				
ANR	862226	AssignmentExpression	"end = strchr ( addr_str , ' ' )"		862016	0		=			
ANR	862227	Identifier	end		862016	0					
ANR	862228	CallExpression	"strchr ( addr_str , ' ' )"		862016	1					
ANR	862229	Callee	strchr		862016	0					
ANR	862230	Identifier	strchr		862016	0					
ANR	862231	ArgumentList	addr_str		862016	1					
ANR	862232	Argument	addr_str		862016	0					
ANR	862233	Identifier	addr_str		862016	0					
ANR	862234	Argument	' '		862016	1					
ANR	862235	PrimaryExpression	' '		862016	0					
ANR	862236	IfStatement	if ( end )		862016	2					
ANR	862237	Condition	end	9018:7:256943:256945	862016	0	True				
ANR	862238	Identifier	end		862016	0					
ANR	862239	CompoundStatement		43:12:841:841	862016	1					
ANR	862240	ExpressionStatement	* end = '\\0'	9019:4:256954:256965	862016	0	True				
ANR	862241	AssignmentExpression	* end = '\\0'		862016	0		=			
ANR	862242	UnaryOperationExpression	* end		862016	0					
ANR	862243	UnaryOperator	*		862016	0					
ANR	862244	Identifier	end		862016	1					
ANR	862245	PrimaryExpression	'\\0'		862016	1					
ANR	862246	IdentifierDeclStatement	RAnalMethod meth ;	9022:3:256976:256992	862016	3	True				
ANR	862247	IdentifierDecl	meth		862016	0					
ANR	862248	IdentifierDeclType	RAnalMethod		862016	0					
ANR	862249	Identifier	meth		862016	1					
ANR	862250	ExpressionStatement	meth . name = name_str	9023:3:256997:257017	862016	4	True				
ANR	862251	AssignmentExpression	meth . name = name_str		862016	0		=			
ANR	862252	MemberAccess	meth . name		862016	0					
ANR	862253	Identifier	meth		862016	0					
ANR	862254	Identifier	name		862016	1					
ANR	862255	Identifier	name_str		862016	1					
ANR	862256	ExpressionStatement	"meth . addr = r_num_get ( core -> num , addr_str )"	9024:3:257022:257065	862016	5	True				
ANR	862257	AssignmentExpression	"meth . addr = r_num_get ( core -> num , addr_str )"		862016	0		=			
ANR	862258	MemberAccess	meth . addr		862016	0					
ANR	862259	Identifier	meth		862016	0					
ANR	862260	Identifier	addr		862016	1					
ANR	862261	CallExpression	"r_num_get ( core -> num , addr_str )"		862016	1					
ANR	862262	Callee	r_num_get		862016	0					
ANR	862263	Identifier	r_num_get		862016	0					
ANR	862264	ArgumentList	core -> num		862016	1					
ANR	862265	Argument	core -> num		862016	0					
ANR	862266	PtrMemberAccess	core -> num		862016	0					
ANR	862267	Identifier	core		862016	0					
ANR	862268	Identifier	num		862016	1					
ANR	862269	Argument	addr_str		862016	1					
ANR	862270	Identifier	addr_str		862016	0					
ANR	862271	ExpressionStatement	meth . vtable_offset = - 1	9025:3:257070:257093	862016	6	True				
ANR	862272	AssignmentExpression	meth . vtable_offset = - 1		862016	0		=			
ANR	862273	MemberAccess	meth . vtable_offset		862016	0					
ANR	862274	Identifier	meth		862016	0					
ANR	862275	Identifier	vtable_offset		862016	1					
ANR	862276	UnaryOperationExpression	- 1		862016	1					
ANR	862277	UnaryOperator	-		862016	0					
ANR	862278	PrimaryExpression	1		862016	1					
ANR	862279	IfStatement	if ( end )		862016	7					
ANR	862280	Condition	end	9026:7:257102:257104	862016	0	True				
ANR	862281	Identifier	end		862016	0					
ANR	862282	CompoundStatement		51:12:1000:1000	862016	1					
ANR	862283	ExpressionStatement	"meth . vtable_offset = ( int ) r_num_get ( core -> num , end + 1 )"	9027:4:257113:257169	862016	0	True				
ANR	862284	AssignmentExpression	"meth . vtable_offset = ( int ) r_num_get ( core -> num , end + 1 )"		862016	0		=			
ANR	862285	MemberAccess	meth . vtable_offset		862016	0					
ANR	862286	Identifier	meth		862016	0					
ANR	862287	Identifier	vtable_offset		862016	1					
ANR	862288	CastExpression	"( int ) r_num_get ( core -> num , end + 1 )"		862016	1					
ANR	862289	CastTarget	int		862016	0					
ANR	862290	CallExpression	"r_num_get ( core -> num , end + 1 )"		862016	1					
ANR	862291	Callee	r_num_get		862016	0					
ANR	862292	Identifier	r_num_get		862016	0					
ANR	862293	ArgumentList	core -> num		862016	1					
ANR	862294	Argument	core -> num		862016	0					
ANR	862295	PtrMemberAccess	core -> num		862016	0					
ANR	862296	Identifier	core		862016	0					
ANR	862297	Identifier	num		862016	1					
ANR	862298	Argument	end + 1		862016	1					
ANR	862299	AdditiveExpression	end + 1		862016	0		+			
ANR	862300	Identifier	end		862016	0					
ANR	862301	PrimaryExpression	1		862016	1					
ANR	862302	ExpressionStatement	"err = r_anal_class_method_set ( core -> anal , cstr , & meth )"	9029:3:257179:257234	862016	8	True				
ANR	862303	AssignmentExpression	"err = r_anal_class_method_set ( core -> anal , cstr , & meth )"		862016	0		=			
ANR	862304	Identifier	err		862016	0					
ANR	862305	CallExpression	"r_anal_class_method_set ( core -> anal , cstr , & meth )"		862016	1					
ANR	862306	Callee	r_anal_class_method_set		862016	0					
ANR	862307	Identifier	r_anal_class_method_set		862016	0					
ANR	862308	ArgumentList	core -> anal		862016	1					
ANR	862309	Argument	core -> anal		862016	0					
ANR	862310	PtrMemberAccess	core -> anal		862016	0					
ANR	862311	Identifier	core		862016	0					
ANR	862312	Identifier	anal		862016	1					
ANR	862313	Argument	cstr		862016	1					
ANR	862314	Identifier	cstr		862016	0					
ANR	862315	Argument	& meth		862016	2					
ANR	862316	UnaryOperationExpression	& meth		862016	0					
ANR	862317	UnaryOperator	&		862016	0					
ANR	862318	Identifier	meth		862016	1					
ANR	862319	ElseStatement	else		862016	0					
ANR	862320	IfStatement	if ( c == 'n' )		862016	0					
ANR	862321	Condition	c == 'n'	9030:13:257249:257256	862016	0	True				
ANR	862322	EqualityExpression	c == 'n'		862016	0		==			
ANR	862323	Identifier	c		862016	0					
ANR	862324	PrimaryExpression	'n'		862016	1					
ANR	862325	CompoundStatement		56:3:1157:1185	862016	1					
ANR	862326	IdentifierDeclStatement	char * new_name_str = end + 1 ;	9031:3:257264:257292	862016	0	True				
ANR	862327	IdentifierDecl	* new_name_str = end + 1		862016	0					
ANR	862328	IdentifierDeclType	char *		862016	0					
ANR	862329	Identifier	new_name_str		862016	1					
ANR	862330	AssignmentExpression	* new_name_str = end + 1		862016	2		=			
ANR	862331	Identifier	new_name_str		862016	0					
ANR	862332	AdditiveExpression	end + 1		862016	1		+			
ANR	862333	Identifier	end		862016	0					
ANR	862334	PrimaryExpression	1		862016	1					
ANR	862335	ExpressionStatement	"end = strchr ( new_name_str , ' ' )"	9032:3:257297:257329	862016	1	True				
ANR	862336	AssignmentExpression	"end = strchr ( new_name_str , ' ' )"		862016	0		=			
ANR	862337	Identifier	end		862016	0					
ANR	862338	CallExpression	"strchr ( new_name_str , ' ' )"		862016	1					
ANR	862339	Callee	strchr		862016	0					
ANR	862340	Identifier	strchr		862016	0					
ANR	862341	ArgumentList	new_name_str		862016	1					
ANR	862342	Argument	new_name_str		862016	0					
ANR	862343	Identifier	new_name_str		862016	0					
ANR	862344	Argument	' '		862016	1					
ANR	862345	PrimaryExpression	' '		862016	0					
ANR	862346	IfStatement	if ( end )		862016	2					
ANR	862347	Condition	end	9033:7:257338:257340	862016	0	True				
ANR	862348	Identifier	end		862016	0					
ANR	862349	CompoundStatement		58:12:1236:1236	862016	1					
ANR	862350	ExpressionStatement	* end = '\\0'	9034:4:257349:257360	862016	0	True				
ANR	862351	AssignmentExpression	* end = '\\0'		862016	0		=			
ANR	862352	UnaryOperationExpression	* end		862016	0					
ANR	862353	UnaryOperator	*		862016	0					
ANR	862354	Identifier	end		862016	1					
ANR	862355	PrimaryExpression	'\\0'		862016	1					
ANR	862356	ExpressionStatement	"err = r_anal_class_method_rename ( core -> anal , cstr , name_str , new_name_str )"	9037:3:257371:257446	862016	3	True				
ANR	862357	AssignmentExpression	"err = r_anal_class_method_rename ( core -> anal , cstr , name_str , new_name_str )"		862016	0		=			
ANR	862358	Identifier	err		862016	0					
ANR	862359	CallExpression	"r_anal_class_method_rename ( core -> anal , cstr , name_str , new_name_str )"		862016	1					
ANR	862360	Callee	r_anal_class_method_rename		862016	0					
ANR	862361	Identifier	r_anal_class_method_rename		862016	0					
ANR	862362	ArgumentList	core -> anal		862016	1					
ANR	862363	Argument	core -> anal		862016	0					
ANR	862364	PtrMemberAccess	core -> anal		862016	0					
ANR	862365	Identifier	core		862016	0					
ANR	862366	Identifier	anal		862016	1					
ANR	862367	Argument	cstr		862016	1					
ANR	862368	Identifier	cstr		862016	0					
ANR	862369	Argument	name_str		862016	2					
ANR	862370	Identifier	name_str		862016	0					
ANR	862371	Argument	new_name_str		862016	3					
ANR	862372	Identifier	new_name_str		862016	0					
ANR	862373	ElseStatement	else		862016	0					
ANR	862374	IfStatement	if ( c == '-' )		862016	0					
ANR	862375	Condition	c == '-'	9038:13:257461:257468	862016	0	True				
ANR	862376	EqualityExpression	c == '-'		862016	0		==			
ANR	862377	Identifier	c		862016	0					
ANR	862378	PrimaryExpression	'-'		862016	1					
ANR	862379	CompoundStatement		63:23:1364:1364	862016	1					
ANR	862380	ExpressionStatement	"err = r_anal_class_method_delete ( core -> anal , cstr , name_str )"	9039:3:257476:257537	862016	0	True				
ANR	862381	AssignmentExpression	"err = r_anal_class_method_delete ( core -> anal , cstr , name_str )"		862016	0		=			
ANR	862382	Identifier	err		862016	0					
ANR	862383	CallExpression	"r_anal_class_method_delete ( core -> anal , cstr , name_str )"		862016	1					
ANR	862384	Callee	r_anal_class_method_delete		862016	0					
ANR	862385	Identifier	r_anal_class_method_delete		862016	0					
ANR	862386	ArgumentList	core -> anal		862016	1					
ANR	862387	Argument	core -> anal		862016	0					
ANR	862388	PtrMemberAccess	core -> anal		862016	0					
ANR	862389	Identifier	core		862016	0					
ANR	862390	Identifier	anal		862016	1					
ANR	862391	Argument	cstr		862016	1					
ANR	862392	Identifier	cstr		862016	0					
ANR	862393	Argument	name_str		862016	2					
ANR	862394	Identifier	name_str		862016	0					
ANR	862395	ExpressionStatement	free ( cstr )	9042:2:257546:257557	862016	10	True				
ANR	862396	CallExpression	free ( cstr )		862016	0					
ANR	862397	Callee	free		862016	0					
ANR	862398	Identifier	free		862016	0					
ANR	862399	ArgumentList	cstr		862016	1					
ANR	862400	Argument	cstr		862016	0					
ANR	862401	Identifier	cstr		862016	0					
ANR	862402	BreakStatement	break ;	9043:2:257561:257566	862016	11	True				
ANR	862403	Label	default :	9045:1:257572:257579	862016	4	True				
ANR	862404	Identifier	default		862016	0					
ANR	862405	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ac )"	9046:2:257583:257618	862016	5	True				
ANR	862406	CallExpression	"r_core_cmd_help ( core , help_msg_ac )"		862016	0					
ANR	862407	Callee	r_core_cmd_help		862016	0					
ANR	862408	Identifier	r_core_cmd_help		862016	0					
ANR	862409	ArgumentList	core		862016	1					
ANR	862410	Argument	core		862016	0					
ANR	862411	Identifier	core		862016	0					
ANR	862412	Argument	help_msg_ac		862016	1					
ANR	862413	Identifier	help_msg_ac		862016	0					
ANR	862414	BreakStatement	break ;	9047:2:257622:257627	862016	6	True				
ANR	862415	SwitchStatement	switch ( err )		862016	3					
ANR	862416	Condition	err	9050:9:257642:257644	862016	0	True				
ANR	862417	Identifier	err		862016	0					
ANR	862418	CompoundStatement		75:14:1540:1540	862016	1					
ANR	862419	Label	case R_ANAL_CLASS_ERR_NONEXISTENT_CLASS :	9051:2:257651:257690	862016	0	True				
ANR	862420	Identifier	R_ANAL_CLASS_ERR_NONEXISTENT_CLASS		862016	0					
ANR	862421	ExpressionStatement	"eprintf ( ""Class does not exist.\\n"" )"	9052:3:257695:257730	862016	1	True				
ANR	862422	CallExpression	"eprintf ( ""Class does not exist.\\n"" )"		862016	0					
ANR	862423	Callee	eprintf		862016	0					
ANR	862424	Identifier	eprintf		862016	0					
ANR	862425	ArgumentList	"""Class does not exist.\\n"""		862016	1					
ANR	862426	Argument	"""Class does not exist.\\n"""		862016	0					
ANR	862427	PrimaryExpression	"""Class does not exist.\\n"""		862016	0					
ANR	862428	BreakStatement	break ;	9053:3:257735:257740	862016	2	True				
ANR	862429	Label	case R_ANAL_CLASS_ERR_NONEXISTENT_ATTR :	9054:2:257744:257782	862016	3	True				
ANR	862430	Identifier	R_ANAL_CLASS_ERR_NONEXISTENT_ATTR		862016	0					
ANR	862431	ExpressionStatement	"eprintf ( ""Method does not exist.\\n"" )"	9055:3:257787:257823	862016	4	True				
ANR	862432	CallExpression	"eprintf ( ""Method does not exist.\\n"" )"		862016	0					
ANR	862433	Callee	eprintf		862016	0					
ANR	862434	Identifier	eprintf		862016	0					
ANR	862435	ArgumentList	"""Method does not exist.\\n"""		862016	1					
ANR	862436	Argument	"""Method does not exist.\\n"""		862016	0					
ANR	862437	PrimaryExpression	"""Method does not exist.\\n"""		862016	0					
ANR	862438	BreakStatement	break ;	9056:3:257828:257833	862016	5	True				
ANR	862439	Label	default :	9057:2:257837:257844	862016	6	True				
ANR	862440	Identifier	default		862016	0					
ANR	862441	BreakStatement	break ;	9058:3:257849:257854	862016	7	True				
ANR	862442	ReturnType	static void		862016	1					
ANR	862443	Identifier	cmd_anal_class_method		862016	2					
ANR	862444	ParameterList	"RCore * core , const char * input"		862016	3					
ANR	862445	Parameter	RCore * core	8976:34:256074:256084	862016	0	True				
ANR	862446	ParameterType	RCore *		862016	0					
ANR	862447	Identifier	core		862016	1					
ANR	862448	Parameter	const char * input	8976:47:256087:256103	862016	1	True				
ANR	862449	ParameterType	const char *		862016	0					
ANR	862450	Identifier	input		862016	1					
ANR	862451	CFGEntryNode	ENTRY		862016		True				
ANR	862452	CFGExitNode	EXIT		862016		True				
ANR	862453	Symbol	cstr		862016						
ANR	862454	Symbol	meth . name		862016						
ANR	862455	Symbol	name_str		862016						
ANR	862456	Symbol	* input		862016						
ANR	862457	Symbol	* core		862016						
ANR	862458	Symbol	& meth		862016						
ANR	862459	Symbol	strchr		862016						
ANR	862460	Symbol	core -> anal		862016						
ANR	862461	Symbol	r_anal_class_method_delete		862016						
ANR	862462	Symbol	end		862016						
ANR	862463	Symbol	r_num_get		862016						
ANR	862464	Symbol	r_anal_class_method_rename		862016						
ANR	862465	Symbol	* str		862016						
ANR	862466	Symbol	core -> num		862016						
ANR	862467	Symbol	R_ANAL_CLASS_ERR_SUCCESS		862016						
ANR	862468	Symbol	c		862016						
ANR	862469	Symbol	err		862016						
ANR	862470	Symbol	help_msg_ac		862016						
ANR	862471	Symbol	new_name_str		862016						
ANR	862472	Symbol	str		862016						
ANR	862473	Symbol	core		862016						
ANR	862474	Symbol	input		862016						
ANR	862475	Symbol	meth . vtable_offset		862016						
ANR	862476	Symbol	r_anal_class_method_set		862016						
ANR	862477	Symbol	r_str_trim_ro		862016						
ANR	862478	Symbol	* end		862016						
ANR	862479	Symbol	addr_str		862016						
ANR	862480	Symbol	meth . addr		862016						
ANR	862481	Symbol	strdup		862016						
ANR	862482	Symbol	meth		862016						
ANR	862483	Function	cmd_anal_class_base	9062:0:257862:259121							
ANR	862484	FunctionDef	"cmd_anal_class_base (RCore * core , const char * input)"		862483	0					
ANR	862485	CompoundStatement		9062:64:257926:259121	862483	0					
ANR	862486	IdentifierDeclStatement	RAnalClassErr err = R_ANAL_CLASS_ERR_SUCCESS ;	9063:1:257929:257973	862483	0	True				
ANR	862487	IdentifierDecl	err = R_ANAL_CLASS_ERR_SUCCESS		862483	0					
ANR	862488	IdentifierDeclType	RAnalClassErr		862483	0					
ANR	862489	Identifier	err		862483	1					
ANR	862490	AssignmentExpression	err = R_ANAL_CLASS_ERR_SUCCESS		862483	2		=			
ANR	862491	Identifier	R_ANAL_CLASS_ERR_SUCCESS		862483	0					
ANR	862492	Identifier	R_ANAL_CLASS_ERR_SUCCESS		862483	1					
ANR	862493	IdentifierDeclStatement	char c = input [ 0 ] ;	9064:1:257976:257993	862483	1	True				
ANR	862494	IdentifierDecl	c = input [ 0 ]		862483	0					
ANR	862495	IdentifierDeclType	char		862483	0					
ANR	862496	Identifier	c		862483	1					
ANR	862497	AssignmentExpression	c = input [ 0 ]		862483	2		=			
ANR	862498	Identifier	c		862483	0					
ANR	862499	ArrayIndexing	input [ 0 ]		862483	1					
ANR	862500	Identifier	input		862483	0					
ANR	862501	PrimaryExpression	0		862483	1					
ANR	862502	SwitchStatement	switch ( c )		862483	2					
ANR	862503	Condition	c	9065:9:258004:258004	862483	0	True				
ANR	862504	Identifier	c		862483	0					
ANR	862505	CompoundStatement		4:12:80:80	862483	1					
ANR	862506	Label	case ' ' :	9066:1:258010:258018	862483	0	True				
ANR	862507	Label	case '-' :	9067:1:258030:258038	862483	1	True				
ANR	862508	CompoundStatement		44:2:782:801	862483	2					
ANR	862509	IdentifierDeclStatement	const char * str = r_str_trim_ro ( input + 1 ) ;	9068:2:258054:258097	862483	0	True				
ANR	862510	IdentifierDecl	* str = r_str_trim_ro ( input + 1 )		862483	0					
ANR	862511	IdentifierDeclType	const char *		862483	0					
ANR	862512	Identifier	str		862483	1					
ANR	862513	AssignmentExpression	* str = r_str_trim_ro ( input + 1 )		862483	2		=			
ANR	862514	Identifier	str		862483	0					
ANR	862515	CallExpression	r_str_trim_ro ( input + 1 )		862483	1					
ANR	862516	Callee	r_str_trim_ro		862483	0					
ANR	862517	Identifier	r_str_trim_ro		862483	0					
ANR	862518	ArgumentList	input + 1		862483	1					
ANR	862519	Argument	input + 1		862483	0					
ANR	862520	AdditiveExpression	input + 1		862483	0		+			
ANR	862521	Identifier	input		862483	0					
ANR	862522	PrimaryExpression	1		862483	1					
ANR	862523	IfStatement	if ( ! * str )		862483	1					
ANR	862524	Condition	! * str	9069:6:258105:258109	862483	0	True				
ANR	862525	UnaryOperationExpression	! * str		862483	0					
ANR	862526	UnaryOperator	!		862483	0					
ANR	862527	UnaryOperationExpression	* str		862483	1					
ANR	862528	UnaryOperator	*		862483	0					
ANR	862529	Identifier	str		862483	1					
ANR	862530	CompoundStatement		8:13:185:185	862483	1					
ANR	862531	ExpressionStatement	"eprintf ( ""No class name given.\\n"" )"	9070:3:258117:258151	862483	0	True				
ANR	862532	CallExpression	"eprintf ( ""No class name given.\\n"" )"		862483	0					
ANR	862533	Callee	eprintf		862483	0					
ANR	862534	Identifier	eprintf		862483	0					
ANR	862535	ArgumentList	"""No class name given.\\n"""		862483	1					
ANR	862536	Argument	"""No class name given.\\n"""		862483	0					
ANR	862537	PrimaryExpression	"""No class name given.\\n"""		862483	0					
ANR	862538	ReturnStatement	return ;	9071:3:258156:258162	862483	1	True				
ANR	862539	IdentifierDeclStatement	char * cstr = strdup ( str ) ;	9073:2:258170:258195	862483	2	True				
ANR	862540	IdentifierDecl	* cstr = strdup ( str )		862483	0					
ANR	862541	IdentifierDeclType	char *		862483	0					
ANR	862542	Identifier	cstr		862483	1					
ANR	862543	AssignmentExpression	* cstr = strdup ( str )		862483	2		=			
ANR	862544	Identifier	cstr		862483	0					
ANR	862545	CallExpression	strdup ( str )		862483	1					
ANR	862546	Callee	strdup		862483	0					
ANR	862547	Identifier	strdup		862483	0					
ANR	862548	ArgumentList	str		862483	1					
ANR	862549	Argument	str		862483	0					
ANR	862550	Identifier	str		862483	0					
ANR	862551	IfStatement	if ( ! cstr )		862483	3					
ANR	862552	Condition	! cstr	9074:6:258203:258207	862483	0	True				
ANR	862553	UnaryOperationExpression	! cstr		862483	0					
ANR	862554	UnaryOperator	!		862483	0					
ANR	862555	Identifier	cstr		862483	1					
ANR	862556	CompoundStatement		13:13:283:283	862483	1					
ANR	862557	BreakStatement	break ;	9075:3:258215:258220	862483	0	True				
ANR	862558	IdentifierDeclStatement	"char * end = strchr ( cstr , ' ' ) ;"	9077:2:258228:258258	862483	4	True				
ANR	862559	IdentifierDecl	"* end = strchr ( cstr , ' ' )"		862483	0					
ANR	862560	IdentifierDeclType	char *		862483	0					
ANR	862561	Identifier	end		862483	1					
ANR	862562	AssignmentExpression	"* end = strchr ( cstr , ' ' )"		862483	2		=			
ANR	862563	Identifier	end		862483	0					
ANR	862564	CallExpression	"strchr ( cstr , ' ' )"		862483	1					
ANR	862565	Callee	strchr		862483	0					
ANR	862566	Identifier	strchr		862483	0					
ANR	862567	ArgumentList	cstr		862483	1					
ANR	862568	Argument	cstr		862483	0					
ANR	862569	Identifier	cstr		862483	0					
ANR	862570	Argument	' '		862483	1					
ANR	862571	PrimaryExpression	' '		862483	0					
ANR	862572	IfStatement	if ( end )		862483	5					
ANR	862573	Condition	end	9078:6:258266:258268	862483	0	True				
ANR	862574	Identifier	end		862483	0					
ANR	862575	CompoundStatement		17:11:344:344	862483	1					
ANR	862576	ExpressionStatement	* end = '\\0'	9079:3:258276:258287	862483	0	True				
ANR	862577	AssignmentExpression	* end = '\\0'		862483	0		=			
ANR	862578	UnaryOperationExpression	* end		862483	0					
ANR	862579	UnaryOperator	*		862483	0					
ANR	862580	Identifier	end		862483	1					
ANR	862581	PrimaryExpression	'\\0'		862483	1					
ANR	862582	ExpressionStatement	end ++	9080:3:258292:258297	862483	1	True				
ANR	862583	PostIncDecOperationExpression	end ++		862483	0					
ANR	862584	Identifier	end		862483	0					
ANR	862585	IncDec	++		862483	1					
ANR	862586	IfStatement	if ( ! end || * end == '\\0' )		862483	6					
ANR	862587	Condition	! end || * end == '\\0'	9083:6:258310:258329	862483	0	True				
ANR	862588	OrExpression	! end || * end == '\\0'		862483	0		||			
ANR	862589	UnaryOperationExpression	! end		862483	0					
ANR	862590	UnaryOperator	!		862483	0					
ANR	862591	Identifier	end		862483	1					
ANR	862592	EqualityExpression	* end == '\\0'		862483	1		==			
ANR	862593	UnaryOperationExpression	* end		862483	0					
ANR	862594	UnaryOperator	*		862483	0					
ANR	862595	Identifier	end		862483	1					
ANR	862596	PrimaryExpression	'\\0'		862483	1					
ANR	862597	CompoundStatement		22:28:405:405	862483	1					
ANR	862598	IfStatement	if ( c == ' ' )		862483	0					
ANR	862599	Condition	c == ' '	9084:7:258341:258348	862483	0	True				
ANR	862600	EqualityExpression	c == ' '		862483	0		==			
ANR	862601	Identifier	c		862483	0					
ANR	862602	PrimaryExpression	' '		862483	1					
ANR	862603	CompoundStatement		23:17:424:424	862483	1					
ANR	862604	ExpressionStatement	"r_anal_class_list_bases ( core -> anal , cstr )"	9085:4:258357:258399	862483	0	True				
ANR	862605	CallExpression	"r_anal_class_list_bases ( core -> anal , cstr )"		862483	0					
ANR	862606	Callee	r_anal_class_list_bases		862483	0					
ANR	862607	Identifier	r_anal_class_list_bases		862483	0					
ANR	862608	ArgumentList	core -> anal		862483	1					
ANR	862609	Argument	core -> anal		862483	0					
ANR	862610	PtrMemberAccess	core -> anal		862483	0					
ANR	862611	Identifier	core		862483	0					
ANR	862612	Identifier	anal		862483	1					
ANR	862613	Argument	cstr		862483	1					
ANR	862614	Identifier	cstr		862483	0					
ANR	862615	ElseStatement	else		862483	0					
ANR	862616	CompoundStatement		25:28:502:502	862483	0					
ANR	862617	ExpressionStatement	"eprintf ( ""No base id given.\\n"" )"	9087:4:258435:258466	862483	0	True				
ANR	862618	CallExpression	"eprintf ( ""No base id given.\\n"" )"		862483	0					
ANR	862619	Callee	eprintf		862483	0					
ANR	862620	Identifier	eprintf		862483	0					
ANR	862621	ArgumentList	"""No base id given.\\n"""		862483	1					
ANR	862622	Argument	"""No base id given.\\n"""		862483	0					
ANR	862623	PrimaryExpression	"""No base id given.\\n"""		862483	0					
ANR	862624	ExpressionStatement	free ( cstr )	9089:3:258476:258487	862483	1	True				
ANR	862625	CallExpression	free ( cstr )		862483	0					
ANR	862626	Callee	free		862483	0					
ANR	862627	Identifier	free		862483	0					
ANR	862628	ArgumentList	cstr		862483	1					
ANR	862629	Argument	cstr		862483	0					
ANR	862630	Identifier	cstr		862483	0					
ANR	862631	BreakStatement	break ;	9090:3:258492:258497	862483	2	True				
ANR	862632	IdentifierDeclStatement	char * base_str = end ;	9093:2:258506:258526	862483	7	True				
ANR	862633	IdentifierDecl	* base_str = end		862483	0					
ANR	862634	IdentifierDeclType	char *		862483	0					
ANR	862635	Identifier	base_str		862483	1					
ANR	862636	AssignmentExpression	* base_str = end		862483	2		=			
ANR	862637	Identifier	end		862483	0					
ANR	862638	Identifier	end		862483	1					
ANR	862639	ExpressionStatement	"end = strchr ( base_str , ' ' )"	9094:2:258530:258558	862483	8	True				
ANR	862640	AssignmentExpression	"end = strchr ( base_str , ' ' )"		862483	0		=			
ANR	862641	Identifier	end		862483	0					
ANR	862642	CallExpression	"strchr ( base_str , ' ' )"		862483	1					
ANR	862643	Callee	strchr		862483	0					
ANR	862644	Identifier	strchr		862483	0					
ANR	862645	ArgumentList	base_str		862483	1					
ANR	862646	Argument	base_str		862483	0					
ANR	862647	Identifier	base_str		862483	0					
ANR	862648	Argument	' '		862483	1					
ANR	862649	PrimaryExpression	' '		862483	0					
ANR	862650	IfStatement	if ( end )		862483	9					
ANR	862651	Condition	end	9095:6:258566:258568	862483	0	True				
ANR	862652	Identifier	end		862483	0					
ANR	862653	CompoundStatement		34:11:644:644	862483	1					
ANR	862654	ExpressionStatement	* end = '\\0'	9096:3:258576:258587	862483	0	True				
ANR	862655	AssignmentExpression	* end = '\\0'		862483	0		=			
ANR	862656	UnaryOperationExpression	* end		862483	0					
ANR	862657	UnaryOperator	*		862483	0					
ANR	862658	Identifier	end		862483	1					
ANR	862659	PrimaryExpression	'\\0'		862483	1					
ANR	862660	IfStatement	if ( c == '-' )		862483	10					
ANR	862661	Condition	c == '-'	9099:6:258600:258607	862483	0	True				
ANR	862662	EqualityExpression	c == '-'		862483	0		==			
ANR	862663	Identifier	c		862483	0					
ANR	862664	PrimaryExpression	'-'		862483	1					
ANR	862665	CompoundStatement		38:16:683:683	862483	1					
ANR	862666	ExpressionStatement	"err = r_anal_class_base_delete ( core -> anal , cstr , base_str )"	9100:3:258615:258674	862483	0	True				
ANR	862667	AssignmentExpression	"err = r_anal_class_base_delete ( core -> anal , cstr , base_str )"		862483	0		=			
ANR	862668	Identifier	err		862483	0					
ANR	862669	CallExpression	"r_anal_class_base_delete ( core -> anal , cstr , base_str )"		862483	1					
ANR	862670	Callee	r_anal_class_base_delete		862483	0					
ANR	862671	Identifier	r_anal_class_base_delete		862483	0					
ANR	862672	ArgumentList	core -> anal		862483	1					
ANR	862673	Argument	core -> anal		862483	0					
ANR	862674	PtrMemberAccess	core -> anal		862483	0					
ANR	862675	Identifier	core		862483	0					
ANR	862676	Identifier	anal		862483	1					
ANR	862677	Argument	cstr		862483	1					
ANR	862678	Identifier	cstr		862483	0					
ANR	862679	Argument	base_str		862483	2					
ANR	862680	Identifier	base_str		862483	0					
ANR	862681	ExpressionStatement	free ( cstr )	9101:3:258679:258690	862483	1	True				
ANR	862682	CallExpression	free ( cstr )		862483	0					
ANR	862683	Callee	free		862483	0					
ANR	862684	Identifier	free		862483	0					
ANR	862685	ArgumentList	cstr		862483	1					
ANR	862686	Argument	cstr		862483	0					
ANR	862687	Identifier	cstr		862483	0					
ANR	862688	BreakStatement	break ;	9102:3:258695:258700	862483	2	True				
ANR	862689	IdentifierDeclStatement	RAnalBaseClass base ;	9105:2:258709:258728	862483	11	True				
ANR	862690	IdentifierDecl	base		862483	0					
ANR	862691	IdentifierDeclType	RAnalBaseClass		862483	0					
ANR	862692	Identifier	base		862483	1					
ANR	862693	ExpressionStatement	base . id = NULL	9106:2:258732:258746	862483	12	True				
ANR	862694	AssignmentExpression	base . id = NULL		862483	0		=			
ANR	862695	MemberAccess	base . id		862483	0					
ANR	862696	Identifier	base		862483	0					
ANR	862697	Identifier	id		862483	1					
ANR	862698	Identifier	NULL		862483	1					
ANR	862699	ExpressionStatement	base . offset = 0	9107:2:258750:258765	862483	13	True				
ANR	862700	AssignmentExpression	base . offset = 0		862483	0		=			
ANR	862701	MemberAccess	base . offset		862483	0					
ANR	862702	Identifier	base		862483	0					
ANR	862703	Identifier	offset		862483	1					
ANR	862704	PrimaryExpression	0		862483	1					
ANR	862705	ExpressionStatement	base . class_name = base_str	9108:2:258769:258795	862483	14	True				
ANR	862706	AssignmentExpression	base . class_name = base_str		862483	0		=			
ANR	862707	MemberAccess	base . class_name		862483	0					
ANR	862708	Identifier	base		862483	0					
ANR	862709	Identifier	class_name		862483	1					
ANR	862710	Identifier	base_str		862483	1					
ANR	862711	IfStatement	if ( end )		862483	15					
ANR	862712	Condition	end	9110:6:258804:258806	862483	0	True				
ANR	862713	Identifier	end		862483	0					
ANR	862714	CompoundStatement		49:11:882:882	862483	1					
ANR	862715	ExpressionStatement	"base . offset = r_num_get ( core -> num , end + 1 )"	9111:3:258814:258858	862483	0	True				
ANR	862716	AssignmentExpression	"base . offset = r_num_get ( core -> num , end + 1 )"		862483	0		=			
ANR	862717	MemberAccess	base . offset		862483	0					
ANR	862718	Identifier	base		862483	0					
ANR	862719	Identifier	offset		862483	1					
ANR	862720	CallExpression	"r_num_get ( core -> num , end + 1 )"		862483	1					
ANR	862721	Callee	r_num_get		862483	0					
ANR	862722	Identifier	r_num_get		862483	0					
ANR	862723	ArgumentList	core -> num		862483	1					
ANR	862724	Argument	core -> num		862483	0					
ANR	862725	PtrMemberAccess	core -> num		862483	0					
ANR	862726	Identifier	core		862483	0					
ANR	862727	Identifier	num		862483	1					
ANR	862728	Argument	end + 1		862483	1					
ANR	862729	AdditiveExpression	end + 1		862483	0		+			
ANR	862730	Identifier	end		862483	0					
ANR	862731	PrimaryExpression	1		862483	1					
ANR	862732	ExpressionStatement	"err = r_anal_class_base_set ( core -> anal , cstr , & base )"	9114:2:258867:258920	862483	16	True				
ANR	862733	AssignmentExpression	"err = r_anal_class_base_set ( core -> anal , cstr , & base )"		862483	0		=			
ANR	862734	Identifier	err		862483	0					
ANR	862735	CallExpression	"r_anal_class_base_set ( core -> anal , cstr , & base )"		862483	1					
ANR	862736	Callee	r_anal_class_base_set		862483	0					
ANR	862737	Identifier	r_anal_class_base_set		862483	0					
ANR	862738	ArgumentList	core -> anal		862483	1					
ANR	862739	Argument	core -> anal		862483	0					
ANR	862740	PtrMemberAccess	core -> anal		862483	0					
ANR	862741	Identifier	core		862483	0					
ANR	862742	Identifier	anal		862483	1					
ANR	862743	Argument	cstr		862483	1					
ANR	862744	Identifier	cstr		862483	0					
ANR	862745	Argument	& base		862483	2					
ANR	862746	UnaryOperationExpression	& base		862483	0					
ANR	862747	UnaryOperator	&		862483	0					
ANR	862748	Identifier	base		862483	1					
ANR	862749	ExpressionStatement	free ( base . id )	9115:2:258924:258938	862483	17	True				
ANR	862750	CallExpression	free ( base . id )		862483	0					
ANR	862751	Callee	free		862483	0					
ANR	862752	Identifier	free		862483	0					
ANR	862753	ArgumentList	base . id		862483	1					
ANR	862754	Argument	base . id		862483	0					
ANR	862755	MemberAccess	base . id		862483	0					
ANR	862756	Identifier	base		862483	0					
ANR	862757	Identifier	id		862483	1					
ANR	862758	ExpressionStatement	free ( cstr )	9116:2:258942:258953	862483	18	True				
ANR	862759	CallExpression	free ( cstr )		862483	0					
ANR	862760	Callee	free		862483	0					
ANR	862761	Identifier	free		862483	0					
ANR	862762	ArgumentList	cstr		862483	1					
ANR	862763	Argument	cstr		862483	0					
ANR	862764	Identifier	cstr		862483	0					
ANR	862765	BreakStatement	break ;	9117:2:258957:258962	862483	19	True				
ANR	862766	Label	default :	9119:1:258968:258975	862483	3	True				
ANR	862767	Identifier	default		862483	0					
ANR	862768	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ac )"	9120:2:258979:259014	862483	4	True				
ANR	862769	CallExpression	"r_core_cmd_help ( core , help_msg_ac )"		862483	0					
ANR	862770	Callee	r_core_cmd_help		862483	0					
ANR	862771	Identifier	r_core_cmd_help		862483	0					
ANR	862772	ArgumentList	core		862483	1					
ANR	862773	Argument	core		862483	0					
ANR	862774	Identifier	core		862483	0					
ANR	862775	Argument	help_msg_ac		862483	1					
ANR	862776	Identifier	help_msg_ac		862483	0					
ANR	862777	BreakStatement	break ;	9121:2:259018:259023	862483	5	True				
ANR	862778	IfStatement	if ( err == R_ANAL_CLASS_ERR_NONEXISTENT_CLASS )		862483	3					
ANR	862779	Condition	err == R_ANAL_CLASS_ERR_NONEXISTENT_CLASS	9124:5:259034:259074	862483	0	True				
ANR	862780	EqualityExpression	err == R_ANAL_CLASS_ERR_NONEXISTENT_CLASS		862483	0		==			
ANR	862781	Identifier	err		862483	0					
ANR	862782	Identifier	R_ANAL_CLASS_ERR_NONEXISTENT_CLASS		862483	1					
ANR	862783	CompoundStatement		63:48:1150:1150	862483	1					
ANR	862784	ExpressionStatement	"eprintf ( ""Class does not exist.\\n"" )"	9125:2:259081:259116	862483	0	True				
ANR	862785	CallExpression	"eprintf ( ""Class does not exist.\\n"" )"		862483	0					
ANR	862786	Callee	eprintf		862483	0					
ANR	862787	Identifier	eprintf		862483	0					
ANR	862788	ArgumentList	"""Class does not exist.\\n"""		862483	1					
ANR	862789	Argument	"""Class does not exist.\\n"""		862483	0					
ANR	862790	PrimaryExpression	"""Class does not exist.\\n"""		862483	0					
ANR	862791	ReturnType	static void		862483	1					
ANR	862792	Identifier	cmd_anal_class_base		862483	2					
ANR	862793	ParameterList	"RCore * core , const char * input"		862483	3					
ANR	862794	Parameter	RCore * core	9062:32:257894:257904	862483	0	True				
ANR	862795	ParameterType	RCore *		862483	0					
ANR	862796	Identifier	core		862483	1					
ANR	862797	Parameter	const char * input	9062:45:257907:257923	862483	1	True				
ANR	862798	ParameterType	const char *		862483	0					
ANR	862799	Identifier	input		862483	1					
ANR	862800	CFGEntryNode	ENTRY		862483		True				
ANR	862801	CFGExitNode	EXIT		862483		True				
ANR	862802	Symbol	cstr		862483						
ANR	862803	Symbol	& base		862483						
ANR	862804	Symbol	base . offset		862483						
ANR	862805	Symbol	* input		862483						
ANR	862806	Symbol	* core		862483						
ANR	862807	Symbol	strchr		862483						
ANR	862808	Symbol	core -> anal		862483						
ANR	862809	Symbol	end		862483						
ANR	862810	Symbol	r_num_get		862483						
ANR	862811	Symbol	* str		862483						
ANR	862812	Symbol	core -> num		862483						
ANR	862813	Symbol	R_ANAL_CLASS_ERR_SUCCESS		862483						
ANR	862814	Symbol	base . id		862483						
ANR	862815	Symbol	c		862483						
ANR	862816	Symbol	NULL		862483						
ANR	862817	Symbol	err		862483						
ANR	862818	Symbol	help_msg_ac		862483						
ANR	862819	Symbol	base_str		862483						
ANR	862820	Symbol	str		862483						
ANR	862821	Symbol	r_anal_class_base_delete		862483						
ANR	862822	Symbol	core		862483						
ANR	862823	Symbol	input		862483						
ANR	862824	Symbol	r_anal_class_base_set		862483						
ANR	862825	Symbol	R_ANAL_CLASS_ERR_NONEXISTENT_CLASS		862483						
ANR	862826	Symbol	r_str_trim_ro		862483						
ANR	862827	Symbol	* end		862483						
ANR	862828	Symbol	strdup		862483						
ANR	862829	Symbol	base . class_name		862483						
ANR	862830	Symbol	base		862483						
ANR	862831	Function	cmd_anal_class_vtable	9129:0:259124:260443							
ANR	862832	FunctionDef	"cmd_anal_class_vtable (RCore * core , const char * input)"		862831	0					
ANR	862833	CompoundStatement		9129:66:259190:260443	862831	0					
ANR	862834	IdentifierDeclStatement	RAnalClassErr err = R_ANAL_CLASS_ERR_SUCCESS ;	9130:1:259193:259237	862831	0	True				
ANR	862835	IdentifierDecl	err = R_ANAL_CLASS_ERR_SUCCESS		862831	0					
ANR	862836	IdentifierDeclType	RAnalClassErr		862831	0					
ANR	862837	Identifier	err		862831	1					
ANR	862838	AssignmentExpression	err = R_ANAL_CLASS_ERR_SUCCESS		862831	2		=			
ANR	862839	Identifier	R_ANAL_CLASS_ERR_SUCCESS		862831	0					
ANR	862840	Identifier	R_ANAL_CLASS_ERR_SUCCESS		862831	1					
ANR	862841	IdentifierDeclStatement	char c = input [ 0 ] ;	9131:1:259240:259257	862831	1	True				
ANR	862842	IdentifierDecl	c = input [ 0 ]		862831	0					
ANR	862843	IdentifierDeclType	char		862831	0					
ANR	862844	Identifier	c		862831	1					
ANR	862845	AssignmentExpression	c = input [ 0 ]		862831	2		=			
ANR	862846	Identifier	c		862831	0					
ANR	862847	ArrayIndexing	input [ 0 ]		862831	1					
ANR	862848	Identifier	input		862831	0					
ANR	862849	PrimaryExpression	0		862831	1					
ANR	862850	SwitchStatement	switch ( c )		862831	2					
ANR	862851	Condition	c	9132:9:259268:259268	862831	0	True				
ANR	862852	Identifier	c		862831	0					
ANR	862853	CompoundStatement		4:12:80:80	862831	1					
ANR	862854	Label	case ' ' :	9133:1:259274:259282	862831	0	True				
ANR	862855	Label	case '-' :	9134:1:259294:259302	862831	1	True				
ANR	862856	CompoundStatement		44:2:810:828	862831	2					
ANR	862857	IdentifierDeclStatement	const char * str = r_str_trim_ro ( input + 1 ) ;	9135:2:259318:259361	862831	0	True				
ANR	862858	IdentifierDecl	* str = r_str_trim_ro ( input + 1 )		862831	0					
ANR	862859	IdentifierDeclType	const char *		862831	0					
ANR	862860	Identifier	str		862831	1					
ANR	862861	AssignmentExpression	* str = r_str_trim_ro ( input + 1 )		862831	2		=			
ANR	862862	Identifier	str		862831	0					
ANR	862863	CallExpression	r_str_trim_ro ( input + 1 )		862831	1					
ANR	862864	Callee	r_str_trim_ro		862831	0					
ANR	862865	Identifier	r_str_trim_ro		862831	0					
ANR	862866	ArgumentList	input + 1		862831	1					
ANR	862867	Argument	input + 1		862831	0					
ANR	862868	AdditiveExpression	input + 1		862831	0		+			
ANR	862869	Identifier	input		862831	0					
ANR	862870	PrimaryExpression	1		862831	1					
ANR	862871	IfStatement	if ( ! * str )		862831	1					
ANR	862872	Condition	! * str	9136:6:259369:259373	862831	0	True				
ANR	862873	UnaryOperationExpression	! * str		862831	0					
ANR	862874	UnaryOperator	!		862831	0					
ANR	862875	UnaryOperationExpression	* str		862831	1					
ANR	862876	UnaryOperator	*		862831	0					
ANR	862877	Identifier	str		862831	1					
ANR	862878	CompoundStatement		8:13:185:185	862831	1					
ANR	862879	ExpressionStatement	"eprintf ( ""No class name given.\\n"" )"	9137:3:259381:259415	862831	0	True				
ANR	862880	CallExpression	"eprintf ( ""No class name given.\\n"" )"		862831	0					
ANR	862881	Callee	eprintf		862831	0					
ANR	862882	Identifier	eprintf		862831	0					
ANR	862883	ArgumentList	"""No class name given.\\n"""		862831	1					
ANR	862884	Argument	"""No class name given.\\n"""		862831	0					
ANR	862885	PrimaryExpression	"""No class name given.\\n"""		862831	0					
ANR	862886	ReturnStatement	return ;	9138:3:259420:259426	862831	1	True				
ANR	862887	IdentifierDeclStatement	char * cstr = strdup ( str ) ;	9140:2:259434:259459	862831	2	True				
ANR	862888	IdentifierDecl	* cstr = strdup ( str )		862831	0					
ANR	862889	IdentifierDeclType	char *		862831	0					
ANR	862890	Identifier	cstr		862831	1					
ANR	862891	AssignmentExpression	* cstr = strdup ( str )		862831	2		=			
ANR	862892	Identifier	cstr		862831	0					
ANR	862893	CallExpression	strdup ( str )		862831	1					
ANR	862894	Callee	strdup		862831	0					
ANR	862895	Identifier	strdup		862831	0					
ANR	862896	ArgumentList	str		862831	1					
ANR	862897	Argument	str		862831	0					
ANR	862898	Identifier	str		862831	0					
ANR	862899	IfStatement	if ( ! cstr )		862831	3					
ANR	862900	Condition	! cstr	9141:6:259467:259471	862831	0	True				
ANR	862901	UnaryOperationExpression	! cstr		862831	0					
ANR	862902	UnaryOperator	!		862831	0					
ANR	862903	Identifier	cstr		862831	1					
ANR	862904	CompoundStatement		13:13:283:283	862831	1					
ANR	862905	BreakStatement	break ;	9142:3:259479:259484	862831	0	True				
ANR	862906	IdentifierDeclStatement	"char * end = strchr ( cstr , ' ' ) ;"	9144:2:259492:259522	862831	4	True				
ANR	862907	IdentifierDecl	"* end = strchr ( cstr , ' ' )"		862831	0					
ANR	862908	IdentifierDeclType	char *		862831	0					
ANR	862909	Identifier	end		862831	1					
ANR	862910	AssignmentExpression	"* end = strchr ( cstr , ' ' )"		862831	2		=			
ANR	862911	Identifier	end		862831	0					
ANR	862912	CallExpression	"strchr ( cstr , ' ' )"		862831	1					
ANR	862913	Callee	strchr		862831	0					
ANR	862914	Identifier	strchr		862831	0					
ANR	862915	ArgumentList	cstr		862831	1					
ANR	862916	Argument	cstr		862831	0					
ANR	862917	Identifier	cstr		862831	0					
ANR	862918	Argument	' '		862831	1					
ANR	862919	PrimaryExpression	' '		862831	0					
ANR	862920	IfStatement	if ( end )		862831	5					
ANR	862921	Condition	end	9145:6:259530:259532	862831	0	True				
ANR	862922	Identifier	end		862831	0					
ANR	862923	CompoundStatement		17:11:344:344	862831	1					
ANR	862924	ExpressionStatement	* end = '\\0'	9146:3:259540:259551	862831	0	True				
ANR	862925	AssignmentExpression	* end = '\\0'		862831	0		=			
ANR	862926	UnaryOperationExpression	* end		862831	0					
ANR	862927	UnaryOperator	*		862831	0					
ANR	862928	Identifier	end		862831	1					
ANR	862929	PrimaryExpression	'\\0'		862831	1					
ANR	862930	ExpressionStatement	end ++	9147:3:259556:259561	862831	1	True				
ANR	862931	PostIncDecOperationExpression	end ++		862831	0					
ANR	862932	Identifier	end		862831	0					
ANR	862933	IncDec	++		862831	1					
ANR	862934	IfStatement	if ( ! end || * end == '\\0' )		862831	6					
ANR	862935	Condition	! end || * end == '\\0'	9150:6:259574:259593	862831	0	True				
ANR	862936	OrExpression	! end || * end == '\\0'		862831	0		||			
ANR	862937	UnaryOperationExpression	! end		862831	0					
ANR	862938	UnaryOperator	!		862831	0					
ANR	862939	Identifier	end		862831	1					
ANR	862940	EqualityExpression	* end == '\\0'		862831	1		==			
ANR	862941	UnaryOperationExpression	* end		862831	0					
ANR	862942	UnaryOperator	*		862831	0					
ANR	862943	Identifier	end		862831	1					
ANR	862944	PrimaryExpression	'\\0'		862831	1					
ANR	862945	CompoundStatement		22:28:405:405	862831	1					
ANR	862946	IfStatement	if ( c == ' ' )		862831	0					
ANR	862947	Condition	c == ' '	9151:7:259605:259612	862831	0	True				
ANR	862948	EqualityExpression	c == ' '		862831	0		==			
ANR	862949	Identifier	c		862831	0					
ANR	862950	PrimaryExpression	' '		862831	1					
ANR	862951	CompoundStatement		23:17:424:424	862831	1					
ANR	862952	ExpressionStatement	"r_anal_class_list_vtables ( core -> anal , cstr )"	9152:4:259621:259665	862831	0	True				
ANR	862953	CallExpression	"r_anal_class_list_vtables ( core -> anal , cstr )"		862831	0					
ANR	862954	Callee	r_anal_class_list_vtables		862831	0					
ANR	862955	Identifier	r_anal_class_list_vtables		862831	0					
ANR	862956	ArgumentList	core -> anal		862831	1					
ANR	862957	Argument	core -> anal		862831	0					
ANR	862958	PtrMemberAccess	core -> anal		862831	0					
ANR	862959	Identifier	core		862831	0					
ANR	862960	Identifier	anal		862831	1					
ANR	862961	Argument	cstr		862831	1					
ANR	862962	Identifier	cstr		862831	0					
ANR	862963	ElseStatement	else		862831	0					
ANR	862964	CompoundStatement		25:28:504:504	862831	0					
ANR	862965	ExpressionStatement	"eprintf ( ""No vtable id given. See acv [class name].\\n"" )"	9154:4:259701:259756	862831	0	True				
ANR	862966	CallExpression	"eprintf ( ""No vtable id given. See acv [class name].\\n"" )"		862831	0					
ANR	862967	Callee	eprintf		862831	0					
ANR	862968	Identifier	eprintf		862831	0					
ANR	862969	ArgumentList	"""No vtable id given. See acv [class name].\\n"""		862831	1					
ANR	862970	Argument	"""No vtable id given. See acv [class name].\\n"""		862831	0					
ANR	862971	PrimaryExpression	"""No vtable id given. See acv [class name].\\n"""		862831	0					
ANR	862972	ExpressionStatement	free ( cstr )	9156:3:259766:259777	862831	1	True				
ANR	862973	CallExpression	free ( cstr )		862831	0					
ANR	862974	Callee	free		862831	0					
ANR	862975	Identifier	free		862831	0					
ANR	862976	ArgumentList	cstr		862831	1					
ANR	862977	Argument	cstr		862831	0					
ANR	862978	Identifier	cstr		862831	0					
ANR	862979	BreakStatement	break ;	9157:3:259782:259787	862831	2	True				
ANR	862980	IdentifierDeclStatement	char * arg1_str = end ;	9160:2:259796:259816	862831	7	True				
ANR	862981	IdentifierDecl	* arg1_str = end		862831	0					
ANR	862982	IdentifierDeclType	char *		862831	0					
ANR	862983	Identifier	arg1_str		862831	1					
ANR	862984	AssignmentExpression	* arg1_str = end		862831	2		=			
ANR	862985	Identifier	end		862831	0					
ANR	862986	Identifier	end		862831	1					
ANR	862987	ExpressionStatement	"end = strchr ( arg1_str , ' ' )"	9161:2:259820:259848	862831	8	True				
ANR	862988	AssignmentExpression	"end = strchr ( arg1_str , ' ' )"		862831	0		=			
ANR	862989	Identifier	end		862831	0					
ANR	862990	CallExpression	"strchr ( arg1_str , ' ' )"		862831	1					
ANR	862991	Callee	strchr		862831	0					
ANR	862992	Identifier	strchr		862831	0					
ANR	862993	ArgumentList	arg1_str		862831	1					
ANR	862994	Argument	arg1_str		862831	0					
ANR	862995	Identifier	arg1_str		862831	0					
ANR	862996	Argument	' '		862831	1					
ANR	862997	PrimaryExpression	' '		862831	0					
ANR	862998	IfStatement	if ( end )		862831	9					
ANR	862999	Condition	end	9162:6:259856:259858	862831	0	True				
ANR	863000	Identifier	end		862831	0					
ANR	863001	CompoundStatement		34:11:670:670	862831	1					
ANR	863002	ExpressionStatement	* end = '\\0'	9163:3:259866:259877	862831	0	True				
ANR	863003	AssignmentExpression	* end = '\\0'		862831	0		=			
ANR	863004	UnaryOperationExpression	* end		862831	0					
ANR	863005	UnaryOperator	*		862831	0					
ANR	863006	Identifier	end		862831	1					
ANR	863007	PrimaryExpression	'\\0'		862831	1					
ANR	863008	IfStatement	if ( c == '-' )		862831	10					
ANR	863009	Condition	c == '-'	9166:6:259890:259897	862831	0	True				
ANR	863010	EqualityExpression	c == '-'		862831	0		==			
ANR	863011	Identifier	c		862831	0					
ANR	863012	PrimaryExpression	'-'		862831	1					
ANR	863013	CompoundStatement		38:16:709:709	862831	1					
ANR	863014	ExpressionStatement	"err = r_anal_class_vtable_delete ( core -> anal , cstr , arg1_str )"	9167:3:259905:259966	862831	0	True				
ANR	863015	AssignmentExpression	"err = r_anal_class_vtable_delete ( core -> anal , cstr , arg1_str )"		862831	0		=			
ANR	863016	Identifier	err		862831	0					
ANR	863017	CallExpression	"r_anal_class_vtable_delete ( core -> anal , cstr , arg1_str )"		862831	1					
ANR	863018	Callee	r_anal_class_vtable_delete		862831	0					
ANR	863019	Identifier	r_anal_class_vtable_delete		862831	0					
ANR	863020	ArgumentList	core -> anal		862831	1					
ANR	863021	Argument	core -> anal		862831	0					
ANR	863022	PtrMemberAccess	core -> anal		862831	0					
ANR	863023	Identifier	core		862831	0					
ANR	863024	Identifier	anal		862831	1					
ANR	863025	Argument	cstr		862831	1					
ANR	863026	Identifier	cstr		862831	0					
ANR	863027	Argument	arg1_str		862831	2					
ANR	863028	Identifier	arg1_str		862831	0					
ANR	863029	ExpressionStatement	free ( cstr )	9168:3:259971:259982	862831	1	True				
ANR	863030	CallExpression	free ( cstr )		862831	0					
ANR	863031	Callee	free		862831	0					
ANR	863032	Identifier	free		862831	0					
ANR	863033	ArgumentList	cstr		862831	1					
ANR	863034	Argument	cstr		862831	0					
ANR	863035	Identifier	cstr		862831	0					
ANR	863036	BreakStatement	break ;	9169:3:259987:259992	862831	2	True				
ANR	863037	IdentifierDeclStatement	RAnalVTable vtable ;	9172:2:260001:260019	862831	11	True				
ANR	863038	IdentifierDecl	vtable		862831	0					
ANR	863039	IdentifierDeclType	RAnalVTable		862831	0					
ANR	863040	Identifier	vtable		862831	1					
ANR	863041	ExpressionStatement	vtable . id = NULL	9173:2:260023:260039	862831	12	True				
ANR	863042	AssignmentExpression	vtable . id = NULL		862831	0		=			
ANR	863043	MemberAccess	vtable . id		862831	0					
ANR	863044	Identifier	vtable		862831	0					
ANR	863045	Identifier	id		862831	1					
ANR	863046	Identifier	NULL		862831	1					
ANR	863047	ExpressionStatement	"vtable . addr = r_num_get ( core -> num , arg1_str )"	9174:2:260043:260088	862831	13	True				
ANR	863048	AssignmentExpression	"vtable . addr = r_num_get ( core -> num , arg1_str )"		862831	0		=			
ANR	863049	MemberAccess	vtable . addr		862831	0					
ANR	863050	Identifier	vtable		862831	0					
ANR	863051	Identifier	addr		862831	1					
ANR	863052	CallExpression	"r_num_get ( core -> num , arg1_str )"		862831	1					
ANR	863053	Callee	r_num_get		862831	0					
ANR	863054	Identifier	r_num_get		862831	0					
ANR	863055	ArgumentList	core -> num		862831	1					
ANR	863056	Argument	core -> num		862831	0					
ANR	863057	PtrMemberAccess	core -> num		862831	0					
ANR	863058	Identifier	core		862831	0					
ANR	863059	Identifier	num		862831	1					
ANR	863060	Argument	arg1_str		862831	1					
ANR	863061	Identifier	arg1_str		862831	0					
ANR	863062	ExpressionStatement	vtable . offset = 0	9175:2:260092:260109	862831	14	True				
ANR	863063	AssignmentExpression	vtable . offset = 0		862831	0		=			
ANR	863064	MemberAccess	vtable . offset		862831	0					
ANR	863065	Identifier	vtable		862831	0					
ANR	863066	Identifier	offset		862831	1					
ANR	863067	PrimaryExpression	0		862831	1					
ANR	863068	IfStatement	if ( end )		862831	15					
ANR	863069	Condition	end	9177:6:260118:260120	862831	0	True				
ANR	863070	Identifier	end		862831	0					
ANR	863071	CompoundStatement		49:11:932:932	862831	1					
ANR	863072	ExpressionStatement	"vtable . offset = r_num_get ( core -> num , end + 1 )"	9178:3:260128:260174	862831	0	True				
ANR	863073	AssignmentExpression	"vtable . offset = r_num_get ( core -> num , end + 1 )"		862831	0		=			
ANR	863074	MemberAccess	vtable . offset		862831	0					
ANR	863075	Identifier	vtable		862831	0					
ANR	863076	Identifier	offset		862831	1					
ANR	863077	CallExpression	"r_num_get ( core -> num , end + 1 )"		862831	1					
ANR	863078	Callee	r_num_get		862831	0					
ANR	863079	Identifier	r_num_get		862831	0					
ANR	863080	ArgumentList	core -> num		862831	1					
ANR	863081	Argument	core -> num		862831	0					
ANR	863082	PtrMemberAccess	core -> num		862831	0					
ANR	863083	Identifier	core		862831	0					
ANR	863084	Identifier	num		862831	1					
ANR	863085	Argument	end + 1		862831	1					
ANR	863086	AdditiveExpression	end + 1		862831	0		+			
ANR	863087	Identifier	end		862831	0					
ANR	863088	PrimaryExpression	1		862831	1					
ANR	863089	ExpressionStatement	"err = r_anal_class_vtable_set ( core -> anal , cstr , & vtable )"	9181:2:260183:260240	862831	16	True				
ANR	863090	AssignmentExpression	"err = r_anal_class_vtable_set ( core -> anal , cstr , & vtable )"		862831	0		=			
ANR	863091	Identifier	err		862831	0					
ANR	863092	CallExpression	"r_anal_class_vtable_set ( core -> anal , cstr , & vtable )"		862831	1					
ANR	863093	Callee	r_anal_class_vtable_set		862831	0					
ANR	863094	Identifier	r_anal_class_vtable_set		862831	0					
ANR	863095	ArgumentList	core -> anal		862831	1					
ANR	863096	Argument	core -> anal		862831	0					
ANR	863097	PtrMemberAccess	core -> anal		862831	0					
ANR	863098	Identifier	core		862831	0					
ANR	863099	Identifier	anal		862831	1					
ANR	863100	Argument	cstr		862831	1					
ANR	863101	Identifier	cstr		862831	0					
ANR	863102	Argument	& vtable		862831	2					
ANR	863103	UnaryOperationExpression	& vtable		862831	0					
ANR	863104	UnaryOperator	&		862831	0					
ANR	863105	Identifier	vtable		862831	1					
ANR	863106	ExpressionStatement	free ( vtable . id )	9182:2:260244:260260	862831	17	True				
ANR	863107	CallExpression	free ( vtable . id )		862831	0					
ANR	863108	Callee	free		862831	0					
ANR	863109	Identifier	free		862831	0					
ANR	863110	ArgumentList	vtable . id		862831	1					
ANR	863111	Argument	vtable . id		862831	0					
ANR	863112	MemberAccess	vtable . id		862831	0					
ANR	863113	Identifier	vtable		862831	0					
ANR	863114	Identifier	id		862831	1					
ANR	863115	ExpressionStatement	free ( cstr )	9183:2:260264:260275	862831	18	True				
ANR	863116	CallExpression	free ( cstr )		862831	0					
ANR	863117	Callee	free		862831	0					
ANR	863118	Identifier	free		862831	0					
ANR	863119	ArgumentList	cstr		862831	1					
ANR	863120	Argument	cstr		862831	0					
ANR	863121	Identifier	cstr		862831	0					
ANR	863122	BreakStatement	break ;	9184:2:260279:260284	862831	19	True				
ANR	863123	Label	default :	9186:1:260290:260297	862831	3	True				
ANR	863124	Identifier	default		862831	0					
ANR	863125	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ac )"	9187:2:260301:260336	862831	4	True				
ANR	863126	CallExpression	"r_core_cmd_help ( core , help_msg_ac )"		862831	0					
ANR	863127	Callee	r_core_cmd_help		862831	0					
ANR	863128	Identifier	r_core_cmd_help		862831	0					
ANR	863129	ArgumentList	core		862831	1					
ANR	863130	Argument	core		862831	0					
ANR	863131	Identifier	core		862831	0					
ANR	863132	Argument	help_msg_ac		862831	1					
ANR	863133	Identifier	help_msg_ac		862831	0					
ANR	863134	BreakStatement	break ;	9188:2:260340:260345	862831	5	True				
ANR	863135	IfStatement	if ( err == R_ANAL_CLASS_ERR_NONEXISTENT_CLASS )		862831	3					
ANR	863136	Condition	err == R_ANAL_CLASS_ERR_NONEXISTENT_CLASS	9191:5:260356:260396	862831	0	True				
ANR	863137	EqualityExpression	err == R_ANAL_CLASS_ERR_NONEXISTENT_CLASS		862831	0		==			
ANR	863138	Identifier	err		862831	0					
ANR	863139	Identifier	R_ANAL_CLASS_ERR_NONEXISTENT_CLASS		862831	1					
ANR	863140	CompoundStatement		63:48:1208:1208	862831	1					
ANR	863141	ExpressionStatement	"eprintf ( ""Class does not exist.\\n"" )"	9192:2:260403:260438	862831	0	True				
ANR	863142	CallExpression	"eprintf ( ""Class does not exist.\\n"" )"		862831	0					
ANR	863143	Callee	eprintf		862831	0					
ANR	863144	Identifier	eprintf		862831	0					
ANR	863145	ArgumentList	"""Class does not exist.\\n"""		862831	1					
ANR	863146	Argument	"""Class does not exist.\\n"""		862831	0					
ANR	863147	PrimaryExpression	"""Class does not exist.\\n"""		862831	0					
ANR	863148	ReturnType	static void		862831	1					
ANR	863149	Identifier	cmd_anal_class_vtable		862831	2					
ANR	863150	ParameterList	"RCore * core , const char * input"		862831	3					
ANR	863151	Parameter	RCore * core	9129:34:259158:259168	862831	0	True				
ANR	863152	ParameterType	RCore *		862831	0					
ANR	863153	Identifier	core		862831	1					
ANR	863154	Parameter	const char * input	9129:47:259171:259187	862831	1	True				
ANR	863155	ParameterType	const char *		862831	0					
ANR	863156	Identifier	input		862831	1					
ANR	863157	CFGEntryNode	ENTRY		862831		True				
ANR	863158	CFGExitNode	EXIT		862831		True				
ANR	863159	Symbol	cstr		862831						
ANR	863160	Symbol	* input		862831						
ANR	863161	Symbol	* core		862831						
ANR	863162	Symbol	strchr		862831						
ANR	863163	Symbol	core -> anal		862831						
ANR	863164	Symbol	vtable . offset		862831						
ANR	863165	Symbol	end		862831						
ANR	863166	Symbol	r_num_get		862831						
ANR	863167	Symbol	* str		862831						
ANR	863168	Symbol	core -> num		862831						
ANR	863169	Symbol	R_ANAL_CLASS_ERR_SUCCESS		862831						
ANR	863170	Symbol	r_anal_class_vtable_set		862831						
ANR	863171	Symbol	c		862831						
ANR	863172	Symbol	NULL		862831						
ANR	863173	Symbol	err		862831						
ANR	863174	Symbol	help_msg_ac		862831						
ANR	863175	Symbol	str		862831						
ANR	863176	Symbol	vtable . id		862831						
ANR	863177	Symbol	core		862831						
ANR	863178	Symbol	input		862831						
ANR	863179	Symbol	& vtable		862831						
ANR	863180	Symbol	r_anal_class_vtable_delete		862831						
ANR	863181	Symbol	vtable		862831						
ANR	863182	Symbol	arg1_str		862831						
ANR	863183	Symbol	R_ANAL_CLASS_ERR_NONEXISTENT_CLASS		862831						
ANR	863184	Symbol	r_str_trim_ro		862831						
ANR	863185	Symbol	* end		862831						
ANR	863186	Symbol	strdup		862831						
ANR	863187	Symbol	vtable . addr		862831						
ANR	863188	Function	cmd_anal_classes	9196:0:260446:261785							
ANR	863189	FunctionDef	"cmd_anal_classes (RCore * core , const char * input)"		863188	0					
ANR	863190	CompoundStatement		9196:61:260507:261785	863188	0					
ANR	863191	SwitchStatement	switch ( input [ 0 ] )		863188	0					
ANR	863192	Condition	input [ 0 ]	9197:9:260518:260525	863188	0	True				
ANR	863193	ArrayIndexing	input [ 0 ]		863188	0					
ANR	863194	Identifier	input		863188	0					
ANR	863195	PrimaryExpression	0		863188	1					
ANR	863196	CompoundStatement		2:19:20:20	863188	1					
ANR	863197	Label	case 'l' :	9198:1:260531:260539	863188	0	True				
ANR	863198	ExpressionStatement	"r_anal_class_list ( core -> anal , input [ 1 ] )"	9199:2:260552:260592	863188	1	True				
ANR	863199	CallExpression	"r_anal_class_list ( core -> anal , input [ 1 ] )"		863188	0					
ANR	863200	Callee	r_anal_class_list		863188	0					
ANR	863201	Identifier	r_anal_class_list		863188	0					
ANR	863202	ArgumentList	core -> anal		863188	1					
ANR	863203	Argument	core -> anal		863188	0					
ANR	863204	PtrMemberAccess	core -> anal		863188	0					
ANR	863205	Identifier	core		863188	0					
ANR	863206	Identifier	anal		863188	1					
ANR	863207	Argument	input [ 1 ]		863188	1					
ANR	863208	ArrayIndexing	input [ 1 ]		863188	0					
ANR	863209	Identifier	input		863188	0					
ANR	863210	PrimaryExpression	1		863188	1					
ANR	863211	BreakStatement	break ;	9200:2:260596:260601	863188	2	True				
ANR	863212	Label	case ' ' :	9201:1:260604:260612	863188	3	True				
ANR	863213	Label	case '-' :	9202:1:260623:260631	863188	4	True				
ANR	863214	Label	case 'n' :	9203:1:260643:260651	863188	5	True				
ANR	863215	CompoundStatement		17:2:292:322	863188	6					
ANR	863216	IdentifierDeclStatement	const char * str = r_str_trim_ro ( input + 1 ) ;	9204:2:260666:260709	863188	0	True				
ANR	863217	IdentifierDecl	* str = r_str_trim_ro ( input + 1 )		863188	0					
ANR	863218	IdentifierDeclType	const char *		863188	0					
ANR	863219	Identifier	str		863188	1					
ANR	863220	AssignmentExpression	* str = r_str_trim_ro ( input + 1 )		863188	2		=			
ANR	863221	Identifier	str		863188	0					
ANR	863222	CallExpression	r_str_trim_ro ( input + 1 )		863188	1					
ANR	863223	Callee	r_str_trim_ro		863188	0					
ANR	863224	Identifier	r_str_trim_ro		863188	0					
ANR	863225	ArgumentList	input + 1		863188	1					
ANR	863226	Argument	input + 1		863188	0					
ANR	863227	AdditiveExpression	input + 1		863188	0		+			
ANR	863228	Identifier	input		863188	0					
ANR	863229	PrimaryExpression	1		863188	1					
ANR	863230	IfStatement	if ( ! * str )		863188	1					
ANR	863231	Condition	! * str	9205:6:260717:260721	863188	0	True				
ANR	863232	UnaryOperationExpression	! * str		863188	0					
ANR	863233	UnaryOperator	!		863188	0					
ANR	863234	UnaryOperationExpression	* str		863188	1					
ANR	863235	UnaryOperator	*		863188	0					
ANR	863236	Identifier	str		863188	1					
ANR	863237	CompoundStatement		10:13:216:216	863188	1					
ANR	863238	BreakStatement	break ;	9206:3:260729:260734	863188	0	True				
ANR	863239	IdentifierDeclStatement	char * cstr = strdup ( str ) ;	9208:2:260742:260767	863188	2	True				
ANR	863240	IdentifierDecl	* cstr = strdup ( str )		863188	0					
ANR	863241	IdentifierDeclType	char *		863188	0					
ANR	863242	Identifier	cstr		863188	1					
ANR	863243	AssignmentExpression	* cstr = strdup ( str )		863188	2		=			
ANR	863244	Identifier	cstr		863188	0					
ANR	863245	CallExpression	strdup ( str )		863188	1					
ANR	863246	Callee	strdup		863188	0					
ANR	863247	Identifier	strdup		863188	0					
ANR	863248	ArgumentList	str		863188	1					
ANR	863249	Argument	str		863188	0					
ANR	863250	Identifier	str		863188	0					
ANR	863251	IfStatement	if ( ! cstr )		863188	3					
ANR	863252	Condition	! cstr	9209:6:260775:260779	863188	0	True				
ANR	863253	UnaryOperationExpression	! cstr		863188	0					
ANR	863254	UnaryOperator	!		863188	0					
ANR	863255	Identifier	cstr		863188	1					
ANR	863256	CompoundStatement		14:13:274:274	863188	1					
ANR	863257	BreakStatement	break ;	9210:3:260787:260792	863188	0	True				
ANR	863258	IdentifierDeclStatement	"char * end = strchr ( cstr , ' ' ) ;"	9212:2:260800:260830	863188	4	True				
ANR	863259	IdentifierDecl	"* end = strchr ( cstr , ' ' )"		863188	0					
ANR	863260	IdentifierDeclType	char *		863188	0					
ANR	863261	Identifier	end		863188	1					
ANR	863262	AssignmentExpression	"* end = strchr ( cstr , ' ' )"		863188	2		=			
ANR	863263	Identifier	end		863188	0					
ANR	863264	CallExpression	"strchr ( cstr , ' ' )"		863188	1					
ANR	863265	Callee	strchr		863188	0					
ANR	863266	Identifier	strchr		863188	0					
ANR	863267	ArgumentList	cstr		863188	1					
ANR	863268	Argument	cstr		863188	0					
ANR	863269	Identifier	cstr		863188	0					
ANR	863270	Argument	' '		863188	1					
ANR	863271	PrimaryExpression	' '		863188	0					
ANR	863272	IfStatement	if ( end )		863188	5					
ANR	863273	Condition	end	9213:6:260838:260840	863188	0	True				
ANR	863274	Identifier	end		863188	0					
ANR	863275	CompoundStatement		18:11:335:335	863188	1					
ANR	863276	ExpressionStatement	* end = '\\0'	9214:3:260848:260859	863188	0	True				
ANR	863277	AssignmentExpression	* end = '\\0'		863188	0		=			
ANR	863278	UnaryOperationExpression	* end		863188	0					
ANR	863279	UnaryOperator	*		863188	0					
ANR	863280	Identifier	end		863188	1					
ANR	863281	PrimaryExpression	'\\0'		863188	1					
ANR	863282	IfStatement	if ( input [ 0 ] == '-' )		863188	6					
ANR	863283	Condition	input [ 0 ] == '-'	9216:6:260871:260885	863188	0	True				
ANR	863284	EqualityExpression	input [ 0 ] == '-'		863188	0		==			
ANR	863285	ArrayIndexing	input [ 0 ]		863188	0					
ANR	863286	Identifier	input		863188	0					
ANR	863287	PrimaryExpression	0		863188	1					
ANR	863288	PrimaryExpression	'-'		863188	1					
ANR	863289	CompoundStatement		21:23:380:380	863188	1					
ANR	863290	ExpressionStatement	"r_anal_class_delete ( core -> anal , cstr )"	9217:3:260893:260931	863188	0	True				
ANR	863291	CallExpression	"r_anal_class_delete ( core -> anal , cstr )"		863188	0					
ANR	863292	Callee	r_anal_class_delete		863188	0					
ANR	863293	Identifier	r_anal_class_delete		863188	0					
ANR	863294	ArgumentList	core -> anal		863188	1					
ANR	863295	Argument	core -> anal		863188	0					
ANR	863296	PtrMemberAccess	core -> anal		863188	0					
ANR	863297	Identifier	core		863188	0					
ANR	863298	Identifier	anal		863188	1					
ANR	863299	Argument	cstr		863188	1					
ANR	863300	Identifier	cstr		863188	0					
ANR	863301	ElseStatement	else		863188	0					
ANR	863302	IfStatement	if ( input [ 0 ] == 'n' )		863188	0					
ANR	863303	Condition	input [ 0 ] == 'n'	9218:12:260945:260959	863188	0	True				
ANR	863304	EqualityExpression	input [ 0 ] == 'n'		863188	0		==			
ANR	863305	ArrayIndexing	input [ 0 ]		863188	0					
ANR	863306	Identifier	input		863188	0					
ANR	863307	PrimaryExpression	0		863188	1					
ANR	863308	PrimaryExpression	'n'		863188	1					
ANR	863309	CompoundStatement		23:29:454:454	863188	1					
ANR	863310	IfStatement	if ( ! end )		863188	0					
ANR	863311	Condition	! end	9219:7:260971:260974	863188	0	True				
ANR	863312	UnaryOperationExpression	! end		863188	0					
ANR	863313	UnaryOperator	!		863188	0					
ANR	863314	Identifier	end		863188	1					
ANR	863315	CompoundStatement		24:13:469:469	863188	1					
ANR	863316	ExpressionStatement	"eprintf ( ""No new class name given.\\n"" )"	9220:4:260983:261021	863188	0	True				
ANR	863317	CallExpression	"eprintf ( ""No new class name given.\\n"" )"		863188	0					
ANR	863318	Callee	eprintf		863188	0					
ANR	863319	Identifier	eprintf		863188	0					
ANR	863320	ArgumentList	"""No new class name given.\\n"""		863188	1					
ANR	863321	Argument	"""No new class name given.\\n"""		863188	0					
ANR	863322	PrimaryExpression	"""No new class name given.\\n"""		863188	0					
ANR	863323	ElseStatement	else		863188	0					
ANR	863324	CompoundStatement		32:4:634:702	863188	0					
ANR	863325	IdentifierDeclStatement	char * new_name = end + 1 ;	9222:4:261039:261063	863188	0	True				
ANR	863326	IdentifierDecl	* new_name = end + 1		863188	0					
ANR	863327	IdentifierDeclType	char *		863188	0					
ANR	863328	Identifier	new_name		863188	1					
ANR	863329	AssignmentExpression	* new_name = end + 1		863188	2		=			
ANR	863330	Identifier	new_name		863188	0					
ANR	863331	AdditiveExpression	end + 1		863188	1		+			
ANR	863332	Identifier	end		863188	0					
ANR	863333	PrimaryExpression	1		863188	1					
ANR	863334	ExpressionStatement	"end = strchr ( new_name , ' ' )"	9223:4:261069:261097	863188	1	True				
ANR	863335	AssignmentExpression	"end = strchr ( new_name , ' ' )"		863188	0		=			
ANR	863336	Identifier	end		863188	0					
ANR	863337	CallExpression	"strchr ( new_name , ' ' )"		863188	1					
ANR	863338	Callee	strchr		863188	0					
ANR	863339	Identifier	strchr		863188	0					
ANR	863340	ArgumentList	new_name		863188	1					
ANR	863341	Argument	new_name		863188	0					
ANR	863342	Identifier	new_name		863188	0					
ANR	863343	Argument	' '		863188	1					
ANR	863344	PrimaryExpression	' '		863188	0					
ANR	863345	IfStatement	if ( end )		863188	2					
ANR	863346	Condition	end	9224:8:261107:261109	863188	0	True				
ANR	863347	Identifier	end		863188	0					
ANR	863348	CompoundStatement		29:13:604:604	863188	1					
ANR	863349	ExpressionStatement	* end = '\\0'	9225:5:261119:261130	863188	0	True				
ANR	863350	AssignmentExpression	* end = '\\0'		863188	0		=			
ANR	863351	UnaryOperationExpression	* end		863188	0					
ANR	863352	UnaryOperator	*		863188	0					
ANR	863353	Identifier	end		863188	1					
ANR	863354	PrimaryExpression	'\\0'		863188	1					
ANR	863355	IdentifierDeclStatement	"RAnalClassErr err = r_anal_class_rename ( core -> anal , cstr , new_name ) ;"	9227:4:261142:261210	863188	3	True				
ANR	863356	IdentifierDecl	"err = r_anal_class_rename ( core -> anal , cstr , new_name )"		863188	0					
ANR	863357	IdentifierDeclType	RAnalClassErr		863188	0					
ANR	863358	Identifier	err		863188	1					
ANR	863359	AssignmentExpression	"err = r_anal_class_rename ( core -> anal , cstr , new_name )"		863188	2		=			
ANR	863360	Identifier	err		863188	0					
ANR	863361	CallExpression	"r_anal_class_rename ( core -> anal , cstr , new_name )"		863188	1					
ANR	863362	Callee	r_anal_class_rename		863188	0					
ANR	863363	Identifier	r_anal_class_rename		863188	0					
ANR	863364	ArgumentList	core -> anal		863188	1					
ANR	863365	Argument	core -> anal		863188	0					
ANR	863366	PtrMemberAccess	core -> anal		863188	0					
ANR	863367	Identifier	core		863188	0					
ANR	863368	Identifier	anal		863188	1					
ANR	863369	Argument	cstr		863188	1					
ANR	863370	Identifier	cstr		863188	0					
ANR	863371	Argument	new_name		863188	2					
ANR	863372	Identifier	new_name		863188	0					
ANR	863373	IfStatement	if ( err == R_ANAL_CLASS_ERR_NONEXISTENT_CLASS )		863188	4					
ANR	863374	Condition	err == R_ANAL_CLASS_ERR_NONEXISTENT_CLASS	9228:8:261220:261260	863188	0	True				
ANR	863375	EqualityExpression	err == R_ANAL_CLASS_ERR_NONEXISTENT_CLASS		863188	0		==			
ANR	863376	Identifier	err		863188	0					
ANR	863377	Identifier	R_ANAL_CLASS_ERR_NONEXISTENT_CLASS		863188	1					
ANR	863378	CompoundStatement		33:51:755:755	863188	1					
ANR	863379	ExpressionStatement	"eprintf ( ""Class does not exist.\\n"" )"	9229:5:261270:261305	863188	0	True				
ANR	863380	CallExpression	"eprintf ( ""Class does not exist.\\n"" )"		863188	0					
ANR	863381	Callee	eprintf		863188	0					
ANR	863382	Identifier	eprintf		863188	0					
ANR	863383	ArgumentList	"""Class does not exist.\\n"""		863188	1					
ANR	863384	Argument	"""Class does not exist.\\n"""		863188	0					
ANR	863385	PrimaryExpression	"""Class does not exist.\\n"""		863188	0					
ANR	863386	ElseStatement	else		863188	0					
ANR	863387	IfStatement	if ( err == R_ANAL_CLASS_ERR_CLASH )		863188	0					
ANR	863388	Condition	err == R_ANAL_CLASS_ERR_CLASH	9230:15:261322:261350	863188	0	True				
ANR	863389	EqualityExpression	err == R_ANAL_CLASS_ERR_CLASH		863188	0		==			
ANR	863390	Identifier	err		863188	0					
ANR	863391	Identifier	R_ANAL_CLASS_ERR_CLASH		863188	1					
ANR	863392	CompoundStatement		35:46:845:845	863188	1					
ANR	863393	ExpressionStatement	"eprintf ( ""A class with this name already exists.\\n"" )"	9231:5:261360:261412	863188	0	True				
ANR	863394	CallExpression	"eprintf ( ""A class with this name already exists.\\n"" )"		863188	0					
ANR	863395	Callee	eprintf		863188	0					
ANR	863396	Identifier	eprintf		863188	0					
ANR	863397	ArgumentList	"""A class with this name already exists.\\n"""		863188	1					
ANR	863398	Argument	"""A class with this name already exists.\\n"""		863188	0					
ANR	863399	PrimaryExpression	"""A class with this name already exists.\\n"""		863188	0					
ANR	863400	ElseStatement	else		863188	0					
ANR	863401	CompoundStatement		39:9:926:926	863188	0					
ANR	863402	ExpressionStatement	"r_anal_class_create ( core -> anal , cstr )"	9235:3:261439:261477	863188	0	True				
ANR	863403	CallExpression	"r_anal_class_create ( core -> anal , cstr )"		863188	0					
ANR	863404	Callee	r_anal_class_create		863188	0					
ANR	863405	Identifier	r_anal_class_create		863188	0					
ANR	863406	ArgumentList	core -> anal		863188	1					
ANR	863407	Argument	core -> anal		863188	0					
ANR	863408	PtrMemberAccess	core -> anal		863188	0					
ANR	863409	Identifier	core		863188	0					
ANR	863410	Identifier	anal		863188	1					
ANR	863411	Argument	cstr		863188	1					
ANR	863412	Identifier	cstr		863188	0					
ANR	863413	ExpressionStatement	free ( cstr )	9237:2:261485:261496	863188	7	True				
ANR	863414	CallExpression	free ( cstr )		863188	0					
ANR	863415	Callee	free		863188	0					
ANR	863416	Identifier	free		863188	0					
ANR	863417	ArgumentList	cstr		863188	1					
ANR	863418	Argument	cstr		863188	0					
ANR	863419	Identifier	cstr		863188	0					
ANR	863420	BreakStatement	break ;	9238:2:261500:261505	863188	8	True				
ANR	863421	Label	case 'v' :	9240:1:261511:261519	863188	7	True				
ANR	863422	ExpressionStatement	"cmd_anal_class_vtable ( core , input + 1 )"	9241:2:261523:261562	863188	8	True				
ANR	863423	CallExpression	"cmd_anal_class_vtable ( core , input + 1 )"		863188	0					
ANR	863424	Callee	cmd_anal_class_vtable		863188	0					
ANR	863425	Identifier	cmd_anal_class_vtable		863188	0					
ANR	863426	ArgumentList	core		863188	1					
ANR	863427	Argument	core		863188	0					
ANR	863428	Identifier	core		863188	0					
ANR	863429	Argument	input + 1		863188	1					
ANR	863430	AdditiveExpression	input + 1		863188	0		+			
ANR	863431	Identifier	input		863188	0					
ANR	863432	PrimaryExpression	1		863188	1					
ANR	863433	BreakStatement	break ;	9242:2:261566:261571	863188	9	True				
ANR	863434	Label	case 'b' :	9243:1:261574:261582	863188	10	True				
ANR	863435	ExpressionStatement	"cmd_anal_class_base ( core , input + 1 )"	9244:2:261595:261632	863188	11	True				
ANR	863436	CallExpression	"cmd_anal_class_base ( core , input + 1 )"		863188	0					
ANR	863437	Callee	cmd_anal_class_base		863188	0					
ANR	863438	Identifier	cmd_anal_class_base		863188	0					
ANR	863439	ArgumentList	core		863188	1					
ANR	863440	Argument	core		863188	0					
ANR	863441	Identifier	core		863188	0					
ANR	863442	Argument	input + 1		863188	1					
ANR	863443	AdditiveExpression	input + 1		863188	0		+			
ANR	863444	Identifier	input		863188	0					
ANR	863445	PrimaryExpression	1		863188	1					
ANR	863446	BreakStatement	break ;	9245:2:261636:261641	863188	12	True				
ANR	863447	Label	case 'm' :	9246:1:261644:261652	863188	13	True				
ANR	863448	ExpressionStatement	"cmd_anal_class_method ( core , input + 1 )"	9247:2:261665:261704	863188	14	True				
ANR	863449	CallExpression	"cmd_anal_class_method ( core , input + 1 )"		863188	0					
ANR	863450	Callee	cmd_anal_class_method		863188	0					
ANR	863451	Identifier	cmd_anal_class_method		863188	0					
ANR	863452	ArgumentList	core		863188	1					
ANR	863453	Argument	core		863188	0					
ANR	863454	Identifier	core		863188	0					
ANR	863455	Argument	input + 1		863188	1					
ANR	863456	AdditiveExpression	input + 1		863188	0		+			
ANR	863457	Identifier	input		863188	0					
ANR	863458	PrimaryExpression	1		863188	1					
ANR	863459	BreakStatement	break ;	9248:2:261708:261713	863188	15	True				
ANR	863460	Label	default :	9249:1:261716:261723	863188	16	True				
ANR	863461	Identifier	default		863188	0					
ANR	863462	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ac )"	9250:2:261736:261771	863188	17	True				
ANR	863463	CallExpression	"r_core_cmd_help ( core , help_msg_ac )"		863188	0					
ANR	863464	Callee	r_core_cmd_help		863188	0					
ANR	863465	Identifier	r_core_cmd_help		863188	0					
ANR	863466	ArgumentList	core		863188	1					
ANR	863467	Argument	core		863188	0					
ANR	863468	Identifier	core		863188	0					
ANR	863469	Argument	help_msg_ac		863188	1					
ANR	863470	Identifier	help_msg_ac		863188	0					
ANR	863471	BreakStatement	break ;	9251:2:261775:261780	863188	18	True				
ANR	863472	ReturnType	static void		863188	1					
ANR	863473	Identifier	cmd_anal_classes		863188	2					
ANR	863474	ParameterList	"RCore * core , const char * input"		863188	3					
ANR	863475	Parameter	RCore * core	9196:29:260475:260485	863188	0	True				
ANR	863476	ParameterType	RCore *		863188	0					
ANR	863477	Identifier	core		863188	1					
ANR	863478	Parameter	const char * input	9196:42:260488:260504	863188	1	True				
ANR	863479	ParameterType	const char *		863188	0					
ANR	863480	Identifier	input		863188	1					
ANR	863481	CFGEntryNode	ENTRY		863188		True				
ANR	863482	CFGExitNode	EXIT		863188		True				
ANR	863483	Symbol	cstr		863188						
ANR	863484	Symbol	err		863188						
ANR	863485	Symbol	help_msg_ac		863188						
ANR	863486	Symbol	* input		863188						
ANR	863487	Symbol	* core		863188						
ANR	863488	Symbol	strchr		863188						
ANR	863489	Symbol	core -> anal		863188						
ANR	863490	Symbol	R_ANAL_CLASS_ERR_CLASH		863188						
ANR	863491	Symbol	str		863188						
ANR	863492	Symbol	core		863188						
ANR	863493	Symbol	input		863188						
ANR	863494	Symbol	R_ANAL_CLASS_ERR_NONEXISTENT_CLASS		863188						
ANR	863495	Symbol	r_str_trim_ro		863188						
ANR	863496	Symbol	end		863188						
ANR	863497	Symbol	* end		863188						
ANR	863498	Symbol	* str		863188						
ANR	863499	Symbol	strdup		863188						
ANR	863500	Symbol	r_anal_class_rename		863188						
ANR	863501	Symbol	new_name		863188						
ANR	863502	Function	show_reg_args	9255:0:261788:262212							
ANR	863503	FunctionDef	"show_reg_args (RCore * core , int nargs , RStrBuf * sb)"		863502	0					
ANR	863504	CompoundStatement		9255:63:261851:262212	863502	0					
ANR	863505	IdentifierDeclStatement	int i ;	9256:1:261854:261859	863502	0	True				
ANR	863506	IdentifierDecl	i		863502	0					
ANR	863507	IdentifierDeclType	int		863502	0					
ANR	863508	Identifier	i		863502	1					
ANR	863509	IdentifierDeclStatement	char regname [ 8 ] ;	9257:1:261862:261877	863502	1	True				
ANR	863510	IdentifierDecl	regname [ 8 ]		863502	0					
ANR	863511	IdentifierDeclType	char [ 8 ]		863502	0					
ANR	863512	Identifier	regname		863502	1					
ANR	863513	PrimaryExpression	8		863502	2					
ANR	863514	IfStatement	if ( nargs < 0 )		863502	2					
ANR	863515	Condition	nargs < 0	9258:5:261884:261892	863502	0	True				
ANR	863516	RelationalExpression	nargs < 0		863502	0		<			
ANR	863517	Identifier	nargs		863502	0					
ANR	863518	PrimaryExpression	0		863502	1					
ANR	863519	CompoundStatement		4:16:43:43	863502	1					
ANR	863520	ExpressionStatement	nargs = 4	9259:2:261899:261908	863502	0	True				
ANR	863521	AssignmentExpression	nargs = 4		863502	0		=			
ANR	863522	Identifier	nargs		863502	0					
ANR	863523	PrimaryExpression	4		863502	1					
ANR	863524	ForStatement	for ( i = 0 ; i < nargs ; i ++ )		863502	3					
ANR	863525	ForInit	i = 0 ;	9261:6:261950:261955	863502	0	True				
ANR	863526	AssignmentExpression	i = 0		863502	0		=			
ANR	863527	Identifier	i		863502	0					
ANR	863528	PrimaryExpression	0		863502	1					
ANR	863529	Condition	i < nargs	9261:13:261957:261965	863502	1	True				
ANR	863530	RelationalExpression	i < nargs		863502	0		<			
ANR	863531	Identifier	i		863502	0					
ANR	863532	Identifier	nargs		863502	1					
ANR	863533	PostIncDecOperationExpression	i ++	9261:24:261968:261970	863502	2	True				
ANR	863534	Identifier	i		863502	0					
ANR	863535	IncDec	++		863502	1					
ANR	863536	CompoundStatement		9:2:175:221	863502	3					
ANR	863537	ExpressionStatement	"snprintf ( regname , sizeof ( regname ) , ""A%d"" , i )"	9262:2:261977:262023	863502	0	True				
ANR	863538	CallExpression	"snprintf ( regname , sizeof ( regname ) , ""A%d"" , i )"		863502	0					
ANR	863539	Callee	snprintf		863502	0					
ANR	863540	Identifier	snprintf		863502	0					
ANR	863541	ArgumentList	regname		863502	1					
ANR	863542	Argument	regname		863502	0					
ANR	863543	Identifier	regname		863502	0					
ANR	863544	Argument	sizeof ( regname )		863502	1					
ANR	863545	SizeofExpression	sizeof ( regname )		863502	0					
ANR	863546	Sizeof	sizeof		863502	0					
ANR	863547	SizeofOperand	regname		863502	1					
ANR	863548	Argument	"""A%d"""		863502	2					
ANR	863549	PrimaryExpression	"""A%d"""		863502	0					
ANR	863550	Argument	i		863502	3					
ANR	863551	Identifier	i		863502	0					
ANR	863552	IdentifierDeclStatement	"ut64 v = r_reg_getv ( core -> anal -> reg , regname ) ;"	9263:2:262027:262073	863502	1	True				
ANR	863553	IdentifierDecl	"v = r_reg_getv ( core -> anal -> reg , regname )"		863502	0					
ANR	863554	IdentifierDeclType	ut64		863502	0					
ANR	863555	Identifier	v		863502	1					
ANR	863556	AssignmentExpression	"v = r_reg_getv ( core -> anal -> reg , regname )"		863502	2		=			
ANR	863557	Identifier	v		863502	0					
ANR	863558	CallExpression	"r_reg_getv ( core -> anal -> reg , regname )"		863502	1					
ANR	863559	Callee	r_reg_getv		863502	0					
ANR	863560	Identifier	r_reg_getv		863502	0					
ANR	863561	ArgumentList	core -> anal -> reg		863502	1					
ANR	863562	Argument	core -> anal -> reg		863502	0					
ANR	863563	PtrMemberAccess	core -> anal -> reg		863502	0					
ANR	863564	PtrMemberAccess	core -> anal		863502	0					
ANR	863565	Identifier	core		863502	0					
ANR	863566	Identifier	anal		863502	1					
ANR	863567	Identifier	reg		863502	1					
ANR	863568	Argument	regname		863502	1					
ANR	863569	Identifier	regname		863502	0					
ANR	863570	IfStatement	if ( sb )		863502	2					
ANR	863571	Condition	sb	9264:6:262081:262082	863502	0	True				
ANR	863572	Identifier	sb		863502	0					
ANR	863573	CompoundStatement		10:10:233:233	863502	1					
ANR	863574	Statement	r_strbuf_appendf	9265:3:262090:262105	863502	0	True				
ANR	863575	Statement	(	9265:20:262107:262107	863502	1	True				
ANR	863576	Statement	sb	9265:21:262108:262109	863502	2	True				
ANR	863577	Statement	","	9265:23:262110:262110	863502	3	True				
ANR	863578	Statement	"""%s0x%08"""	9265:25:262112:262120	863502	4	True				
ANR	863579	Statement	PFMT64x	9265:34:262121:262127	863502	5	True				
ANR	863580	Statement	","	9265:41:262128:262128	863502	6	True				
ANR	863581	Statement	i	9265:43:262130:262130	863502	7	True				
ANR	863582	Statement	?	9265:44:262131:262131	863502	8	True				
ANR	863583	Statement	""", """	9265:45:262132:262135	863502	9	True				
ANR	863584	Statement	:	9265:49:262136:262136	863502	10	True				
ANR	863585	Statement	""""""	9265:50:262137:262138	863502	11	True				
ANR	863586	Statement	","	9265:52:262139:262139	863502	12	True				
ANR	863587	Statement	v	9265:54:262141:262141	863502	13	True				
ANR	863588	Statement	)	9265:55:262142:262142	863502	14	True				
ANR	863589	ExpressionStatement		9265:56:262143:262143	863502	15	True				
ANR	863590	ElseStatement	else		863502	0					
ANR	863591	CompoundStatement		12:9:302:302	863502	0					
ANR	863592	Statement	r_cons_printf	9267:3:262159:262171	863502	0	True				
ANR	863593	Statement	(	9267:17:262173:262173	863502	1	True				
ANR	863594	Statement	"""A%d 0x%08"""	9267:18:262174:262184	863502	2	True				
ANR	863595	Statement	PFMT64x	9267:29:262185:262191	863502	3	True				
ANR	863596	Statement	"""\\n"""	9267:36:262192:262195	863502	4	True				
ANR	863597	Statement	","	9267:40:262196:262196	863502	5	True				
ANR	863598	Statement	i	9267:42:262198:262198	863502	6	True				
ANR	863599	Statement	","	9267:43:262199:262199	863502	7	True				
ANR	863600	Statement	v	9267:45:262201:262201	863502	8	True				
ANR	863601	Statement	)	9267:46:262202:262202	863502	9	True				
ANR	863602	ExpressionStatement		9267:47:262203:262203	863502	10	True				
ANR	863603	ReturnType	static void		863502	1					
ANR	863604	Identifier	show_reg_args		863502	2					
ANR	863605	ParameterList	"RCore * core , int nargs , RStrBuf * sb"		863502	3					
ANR	863606	Parameter	RCore * core	9255:26:261814:261824	863502	0	True				
ANR	863607	ParameterType	RCore *		863502	0					
ANR	863608	Identifier	core		863502	1					
ANR	863609	Parameter	int nargs	9255:39:261827:261835	863502	1	True				
ANR	863610	ParameterType	int		863502	0					
ANR	863611	Identifier	nargs		863502	1					
ANR	863612	Parameter	RStrBuf * sb	9255:50:261838:261848	863502	2	True				
ANR	863613	ParameterType	RStrBuf *		863502	0					
ANR	863614	Identifier	sb		863502	1					
ANR	863615	CFGEntryNode	ENTRY		863502		True				
ANR	863616	CFGExitNode	EXIT		863502		True				
ANR	863617	Symbol	nargs		863502						
ANR	863618	Symbol	core		863502						
ANR	863619	Symbol	regname		863502						
ANR	863620	Symbol	core -> anal -> reg		863502						
ANR	863621	Symbol	* core -> anal		863502						
ANR	863622	Symbol	v		863502						
ANR	863623	Symbol	* core		863502						
ANR	863624	Symbol	i		863502						
ANR	863625	Symbol	r_reg_getv		863502						
ANR	863626	Symbol	core -> anal		863502						
ANR	863627	Symbol	* * core		863502						
ANR	863628	Symbol	sb		863502						
ANR	863629	Function	cmd_anal_aC	9274:0:262292:271820							
ANR	863630	FunctionDef	"cmd_anal_aC (RCore * core , const char * input)"		863629	0					
ANR	863631	CompoundStatement		9274:56:262348:271820	863629	0					
ANR	863632	IdentifierDeclStatement	bool is_aCer = false ;	9275:1:262351:262371	863629	0	True				
ANR	863633	IdentifierDecl	is_aCer = false		863629	0					
ANR	863634	IdentifierDeclType	bool		863629	0					
ANR	863635	Identifier	is_aCer		863629	1					
ANR	863636	AssignmentExpression	is_aCer = false		863629	2		=			
ANR	863637	Identifier	false		863629	0					
ANR	863638	Identifier	false		863629	1					
ANR	863639	IdentifierDeclStatement	RAnalFuncArg * arg ;	9276:1:262374:262391	863629	1	True				
ANR	863640	IdentifierDecl	* arg		863629	0					
ANR	863641	IdentifierDeclType	RAnalFuncArg *		863629	0					
ANR	863642	Identifier	arg		863629	1					
ANR	863643	IdentifierDeclStatement	RListIter * iter ;	9277:1:262394:262409	863629	2	True				
ANR	863644	IdentifierDecl	* iter		863629	0					
ANR	863645	IdentifierDeclType	RListIter *		863629	0					
ANR	863646	Identifier	iter		863629	1					
ANR	863647	IdentifierDeclStatement	RListIter * nextele ;	9278:1:262412:262430	863629	3	True				
ANR	863648	IdentifierDecl	* nextele		863629	0					
ANR	863649	IdentifierDeclType	RListIter *		863629	0					
ANR	863650	Identifier	nextele		863629	1					
ANR	863651	IdentifierDeclStatement	"const char * iarg = strchr ( input , ' ' ) ;"	9279:1:262433:262471	863629	4	True				
ANR	863652	IdentifierDecl	"* iarg = strchr ( input , ' ' )"		863629	0					
ANR	863653	IdentifierDeclType	const char *		863629	0					
ANR	863654	Identifier	iarg		863629	1					
ANR	863655	AssignmentExpression	"* iarg = strchr ( input , ' ' )"		863629	2		=			
ANR	863656	Identifier	iarg		863629	0					
ANR	863657	CallExpression	"strchr ( input , ' ' )"		863629	1					
ANR	863658	Callee	strchr		863629	0					
ANR	863659	Identifier	strchr		863629	0					
ANR	863660	ArgumentList	input		863629	1					
ANR	863661	Argument	input		863629	0					
ANR	863662	Identifier	input		863629	0					
ANR	863663	Argument	' '		863629	1					
ANR	863664	PrimaryExpression	' '		863629	0					
ANR	863665	IfStatement	if ( input [ 0 ] == 'e' && input [ 1 ] == 'f' )		863629	5					
ANR	863666	Condition	input [ 0 ] == 'e' && input [ 1 ] == 'f'	9280:5:262478:262511	863629	0	True				
ANR	863667	AndExpression	input [ 0 ] == 'e' && input [ 1 ] == 'f'		863629	0		&&			
ANR	863668	EqualityExpression	input [ 0 ] == 'e'		863629	0		==			
ANR	863669	ArrayIndexing	input [ 0 ]		863629	0					
ANR	863670	Identifier	input		863629	0					
ANR	863671	PrimaryExpression	0		863629	1					
ANR	863672	PrimaryExpression	'e'		863629	1					
ANR	863673	EqualityExpression	input [ 1 ] == 'f'		863629	1		==			
ANR	863674	ArrayIndexing	input [ 1 ]		863629	0					
ANR	863675	Identifier	input		863629	0					
ANR	863676	PrimaryExpression	1		863629	1					
ANR	863677	PrimaryExpression	'f'		863629	1					
ANR	863678	CompoundStatement		7:41:165:165	863629	1					
ANR	863679	ExpressionStatement	"r_core_cmdf ( core , "".aCe* $$ @@=`pdr~call`"" )"	9282:2:262541:262585	863629	0	True				
ANR	863680	CallExpression	"r_core_cmdf ( core , "".aCe* $$ @@=`pdr~call`"" )"		863629	0					
ANR	863681	Callee	r_core_cmdf		863629	0					
ANR	863682	Identifier	r_core_cmdf		863629	0					
ANR	863683	ArgumentList	core		863629	1					
ANR	863684	Argument	core		863629	0					
ANR	863685	Identifier	core		863629	0					
ANR	863686	Argument	""".aCe* $$ @@=`pdr~call`"""		863629	1					
ANR	863687	PrimaryExpression	""".aCe* $$ @@=`pdr~call`"""		863629	0					
ANR	863688	ReturnStatement	return ;	9283:2:262589:262595	863629	1	True				
ANR	863689	IfStatement	if ( iarg )		863629	6					
ANR	863690	Condition	iarg	9285:5:262605:262608	863629	0	True				
ANR	863691	Identifier	iarg		863629	0					
ANR	863692	CompoundStatement		12:11:262:262	863629	1					
ANR	863693	ExpressionStatement	iarg ++	9286:2:262615:262621	863629	0	True				
ANR	863694	PostIncDecOperationExpression	iarg ++		863629	0					
ANR	863695	Identifier	iarg		863629	0					
ANR	863696	IncDec	++		863629	1					
ANR	863697	IfStatement	if ( ! iarg )		863629	7					
ANR	863698	Condition	! iarg	9288:5:262631:262635	863629	0	True				
ANR	863699	UnaryOperationExpression	! iarg		863629	0					
ANR	863700	UnaryOperator	!		863629	0					
ANR	863701	Identifier	iarg		863629	1					
ANR	863702	CompoundStatement		15:12:289:289	863629	1					
ANR	863703	ExpressionStatement	"eprintf ( ""Usage: aC[e] [addr-of-call] # analyze call args (aCe does esil emulation with abte)\\n"" )"	9289:2:262642:262739	863629	0	True				
ANR	863704	CallExpression	"eprintf ( ""Usage: aC[e] [addr-of-call] # analyze call args (aCe does esil emulation with abte)\\n"" )"		863629	0					
ANR	863705	Callee	eprintf		863629	0					
ANR	863706	Identifier	eprintf		863629	0					
ANR	863707	ArgumentList	"""Usage: aC[e] [addr-of-call] # analyze call args (aCe does esil emulation with abte)\\n"""		863629	1					
ANR	863708	Argument	"""Usage: aC[e] [addr-of-call] # analyze call args (aCe does esil emulation with abte)\\n"""		863629	0					
ANR	863709	PrimaryExpression	"""Usage: aC[e] [addr-of-call] # analyze call args (aCe does esil emulation with abte)\\n"""		863629	0					
ANR	863710	ReturnStatement	return ;	9290:2:262743:262749	863629	1	True				
ANR	863711	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	9292:1:262755:262786	863629	8	True				
ANR	863712	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		863629	0					
ANR	863713	IdentifierDeclType	RStrBuf *		863629	0					
ANR	863714	Identifier	sb		863629	1					
ANR	863715	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		863629	2		=			
ANR	863716	Identifier	sb		863629	0					
ANR	863717	CallExpression	"r_strbuf_new ( """" )"		863629	1					
ANR	863718	Callee	r_strbuf_new		863629	0					
ANR	863719	Identifier	r_strbuf_new		863629	0					
ANR	863720	ArgumentList	""""""		863629	1					
ANR	863721	Argument	""""""		863629	0					
ANR	863722	PrimaryExpression	""""""		863629	0					
ANR	863723	IdentifierDeclStatement	"ut64 pcv = r_num_math ( core -> num , iarg ) ;"	9293:1:262789:262828	863629	9	True				
ANR	863724	IdentifierDecl	"pcv = r_num_math ( core -> num , iarg )"		863629	0					
ANR	863725	IdentifierDeclType	ut64		863629	0					
ANR	863726	Identifier	pcv		863629	1					
ANR	863727	AssignmentExpression	"pcv = r_num_math ( core -> num , iarg )"		863629	2		=			
ANR	863728	Identifier	pcv		863629	0					
ANR	863729	CallExpression	"r_num_math ( core -> num , iarg )"		863629	1					
ANR	863730	Callee	r_num_math		863629	0					
ANR	863731	Identifier	r_num_math		863629	0					
ANR	863732	ArgumentList	core -> num		863629	1					
ANR	863733	Argument	core -> num		863629	0					
ANR	863734	PtrMemberAccess	core -> num		863629	0					
ANR	863735	Identifier	core		863629	0					
ANR	863736	Identifier	num		863629	1					
ANR	863737	Argument	iarg		863629	1					
ANR	863738	Identifier	iarg		863629	0					
ANR	863739	IfStatement	if ( input [ 0 ] == 'e' )		863629	10					
ANR	863740	Condition	input [ 0 ] == 'e'	9294:5:262835:262849	863629	0	True				
ANR	863741	EqualityExpression	input [ 0 ] == 'e'		863629	0		==			
ANR	863742	ArrayIndexing	input [ 0 ]		863629	0					
ANR	863743	Identifier	input		863629	0					
ANR	863744	PrimaryExpression	0		863629	1					
ANR	863745	PrimaryExpression	'e'		863629	1					
ANR	863746	CompoundStatement		21:22:503:503	863629	1					
ANR	863747	ExpressionStatement	is_aCer = ( input [ 1 ] == '*' )	9295:2:262865:262892	863629	0	True				
ANR	863748	AssignmentExpression	is_aCer = ( input [ 1 ] == '*' )		863629	0		=			
ANR	863749	Identifier	is_aCer		863629	0					
ANR	863750	EqualityExpression	input [ 1 ] == '*'		863629	1		==			
ANR	863751	ArrayIndexing	input [ 1 ]		863629	0					
ANR	863752	Identifier	input		863629	0					
ANR	863753	PrimaryExpression	1		863629	1					
ANR	863754	PrimaryExpression	'*'		863629	1					
ANR	863755	Statement	r_core_cmdf	9296:2:262896:262906	863629	1	True				
ANR	863756	Statement	(	9296:14:262908:262908	863629	2	True				
ANR	863757	Statement	core	9296:15:262909:262912	863629	3	True				
ANR	863758	Statement	","	9296:19:262913:262913	863629	4	True				
ANR	863759	Statement	""".abte 0x%08"""	9296:21:262915:262927	863629	5	True				
ANR	863760	Statement	PFMT64x	9296:34:262928:262934	863629	6	True				
ANR	863761	Statement	","	9296:41:262935:262935	863629	7	True				
ANR	863762	Statement	pcv	9296:43:262937:262939	863629	8	True				
ANR	863763	Statement	)	9296:46:262940:262940	863629	9	True				
ANR	863764	ExpressionStatement		9296:47:262941:262941	863629	10	True				
ANR	863765	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , pcv , - 1 ) ;"	9298:1:262947:262991	863629	11	True				
ANR	863766	IdentifierDecl	"* op = r_core_anal_op ( core , pcv , - 1 )"		863629	0					
ANR	863767	IdentifierDeclType	RAnalOp *		863629	0					
ANR	863768	Identifier	op		863629	1					
ANR	863769	AssignmentExpression	"* op = r_core_anal_op ( core , pcv , - 1 )"		863629	2		=			
ANR	863770	Identifier	op		863629	0					
ANR	863771	CallExpression	"r_core_anal_op ( core , pcv , - 1 )"		863629	1					
ANR	863772	Callee	r_core_anal_op		863629	0					
ANR	863773	Identifier	r_core_anal_op		863629	0					
ANR	863774	ArgumentList	core		863629	1					
ANR	863775	Argument	core		863629	0					
ANR	863776	Identifier	core		863629	0					
ANR	863777	Argument	pcv		863629	1					
ANR	863778	Identifier	pcv		863629	0					
ANR	863779	Argument	- 1		863629	2					
ANR	863780	UnaryOperationExpression	- 1		863629	0					
ANR	863781	UnaryOperator	-		863629	0					
ANR	863782	PrimaryExpression	1		863629	1					
ANR	863783	IfStatement	if ( ! op )		863629	12					
ANR	863784	Condition	! op	9299:5:262998:263000	863629	0	True				
ANR	863785	UnaryOperationExpression	! op		863629	0					
ANR	863786	UnaryOperator	!		863629	0					
ANR	863787	Identifier	op		863629	1					
ANR	863788	CompoundStatement		26:10:654:654	863629	1					
ANR	863789	ReturnStatement	return ;	9300:2:263007:263013	863629	0	True				
ANR	863790	IdentifierDeclStatement	bool go_on = true ;	9302:0:263018:263035	863629	13	True				
ANR	863791	IdentifierDecl	go_on = true		863629	0					
ANR	863792	IdentifierDeclType	bool		863629	0					
ANR	863793	Identifier	go_on		863629	1					
ANR	863794	AssignmentExpression	go_on = true		863629	2		=			
ANR	863795	Identifier	true		863629	0					
ANR	863796	Identifier	true		863629	1					
ANR	863797	IfStatement	if ( op -> type != R_ANAL_OP_TYPE_CALL )		863629	14					
ANR	863798	Condition	op -> type != R_ANAL_OP_TYPE_CALL	9303:5:263042:263072	863629	0	True				
ANR	863799	EqualityExpression	op -> type != R_ANAL_OP_TYPE_CALL		863629	0		!=			
ANR	863800	PtrMemberAccess	op -> type		863629	0					
ANR	863801	Identifier	op		863629	0					
ANR	863802	Identifier	type		863629	1					
ANR	863803	Identifier	R_ANAL_OP_TYPE_CALL		863629	1					
ANR	863804	CompoundStatement		30:38:726:726	863629	1					
ANR	863805	ExpressionStatement	"show_reg_args ( core , - 1 , sb )"	9304:2:263079:263107	863629	0	True				
ANR	863806	CallExpression	"show_reg_args ( core , - 1 , sb )"		863629	0					
ANR	863807	Callee	show_reg_args		863629	0					
ANR	863808	Identifier	show_reg_args		863629	0					
ANR	863809	ArgumentList	core		863629	1					
ANR	863810	Argument	core		863629	0					
ANR	863811	Identifier	core		863629	0					
ANR	863812	Argument	- 1		863629	1					
ANR	863813	UnaryOperationExpression	- 1		863629	0					
ANR	863814	UnaryOperator	-		863629	0					
ANR	863815	PrimaryExpression	1		863629	1					
ANR	863816	Argument	sb		863629	2					
ANR	863817	Identifier	sb		863629	0					
ANR	863818	ExpressionStatement	go_on = false	9305:2:263111:263124	863629	1	True				
ANR	863819	AssignmentExpression	go_on = false		863629	0		=			
ANR	863820	Identifier	go_on		863629	0					
ANR	863821	Identifier	false		863629	1					
ANR	863822	IdentifierDeclStatement	const char * fcn_name = NULL ;	9307:1:263130:263157	863629	15	True				
ANR	863823	IdentifierDecl	* fcn_name = NULL		863629	0					
ANR	863824	IdentifierDeclType	const char *		863629	0					
ANR	863825	Identifier	fcn_name		863629	1					
ANR	863826	AssignmentExpression	* fcn_name = NULL		863629	2		=			
ANR	863827	Identifier	NULL		863629	0					
ANR	863828	Identifier	NULL		863629	1					
ANR	863829	IdentifierDeclStatement	RAnalFunction * fcn ;	9308:1:263160:263178	863629	16	True				
ANR	863830	IdentifierDecl	* fcn		863629	0					
ANR	863831	IdentifierDeclType	RAnalFunction *		863629	0					
ANR	863832	Identifier	fcn		863629	1					
ANR	863833	IfStatement	if ( go_on )		863629	17					
ANR	863834	Condition	go_on	9309:5:263185:263189	863629	0	True				
ANR	863835	Identifier	go_on		863629	0					
ANR	863836	CompoundStatement		46:2:1054:1123	863629	1					
ANR	863837	ExpressionStatement	"fcn = r_anal_get_fcn_at ( core -> anal , pcv , 0 )"	9310:2:263196:263240	863629	0	True				
ANR	863838	AssignmentExpression	"fcn = r_anal_get_fcn_at ( core -> anal , pcv , 0 )"		863629	0		=			
ANR	863839	Identifier	fcn		863629	0					
ANR	863840	CallExpression	"r_anal_get_fcn_at ( core -> anal , pcv , 0 )"		863629	1					
ANR	863841	Callee	r_anal_get_fcn_at		863629	0					
ANR	863842	Identifier	r_anal_get_fcn_at		863629	0					
ANR	863843	ArgumentList	core -> anal		863629	1					
ANR	863844	Argument	core -> anal		863629	0					
ANR	863845	PtrMemberAccess	core -> anal		863629	0					
ANR	863846	Identifier	core		863629	0					
ANR	863847	Identifier	anal		863629	1					
ANR	863848	Argument	pcv		863629	1					
ANR	863849	Identifier	pcv		863629	0					
ANR	863850	Argument	0		863629	2					
ANR	863851	PrimaryExpression	0		863629	0					
ANR	863852	IfStatement	if ( fcn )		863629	1					
ANR	863853	Condition	fcn	9311:6:263248:263250	863629	0	True				
ANR	863854	Identifier	fcn		863629	0					
ANR	863855	CompoundStatement		38:11:904:904	863629	1					
ANR	863856	ExpressionStatement	fcn_name = fcn -> name	9312:3:263258:263278	863629	0	True				
ANR	863857	AssignmentExpression	fcn_name = fcn -> name		863629	0		=			
ANR	863858	Identifier	fcn_name		863629	0					
ANR	863859	PtrMemberAccess	fcn -> name		863629	1					
ANR	863860	Identifier	fcn		863629	0					
ANR	863861	Identifier	name		863629	1					
ANR	863862	ElseStatement	else		863629	0					
ANR	863863	CompoundStatement		41:3:945:999	863629	0					
ANR	863864	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( core -> flags , op -> jump ) ;"	9314:3:263294:263348	863629	0	True				
ANR	863865	IdentifierDecl	"* item = r_flag_get_i ( core -> flags , op -> jump )"		863629	0					
ANR	863866	IdentifierDeclType	RFlagItem *		863629	0					
ANR	863867	Identifier	item		863629	1					
ANR	863868	AssignmentExpression	"* item = r_flag_get_i ( core -> flags , op -> jump )"		863629	2		=			
ANR	863869	Identifier	item		863629	0					
ANR	863870	CallExpression	"r_flag_get_i ( core -> flags , op -> jump )"		863629	1					
ANR	863871	Callee	r_flag_get_i		863629	0					
ANR	863872	Identifier	r_flag_get_i		863629	0					
ANR	863873	ArgumentList	core -> flags		863629	1					
ANR	863874	Argument	core -> flags		863629	0					
ANR	863875	PtrMemberAccess	core -> flags		863629	0					
ANR	863876	Identifier	core		863629	0					
ANR	863877	Identifier	flags		863629	1					
ANR	863878	Argument	op -> jump		863629	1					
ANR	863879	PtrMemberAccess	op -> jump		863629	0					
ANR	863880	Identifier	op		863629	0					
ANR	863881	Identifier	jump		863629	1					
ANR	863882	IfStatement	if ( item )		863629	1					
ANR	863883	Condition	item	9315:7:263357:263360	863629	0	True				
ANR	863884	Identifier	item		863629	0					
ANR	863885	CompoundStatement		42:13:1014:1014	863629	1					
ANR	863886	ExpressionStatement	fcn_name = item -> name	9316:4:263369:263390	863629	0	True				
ANR	863887	AssignmentExpression	fcn_name = item -> name		863629	0		=			
ANR	863888	Identifier	fcn_name		863629	0					
ANR	863889	PtrMemberAccess	item -> name		863629	1					
ANR	863890	Identifier	item		863629	0					
ANR	863891	Identifier	name		863629	1					
ANR	863892	IdentifierDeclStatement	"char * key = ( fcn_name ) ? resolve_fcn_name ( core -> anal , fcn_name ) : NULL ;"	9319:2:263403:263472	863629	2	True				
ANR	863893	IdentifierDecl	"* key = ( fcn_name ) ? resolve_fcn_name ( core -> anal , fcn_name ) : NULL"		863629	0					
ANR	863894	IdentifierDeclType	char *		863629	0					
ANR	863895	Identifier	key		863629	1					
ANR	863896	AssignmentExpression	"* key = ( fcn_name ) ? resolve_fcn_name ( core -> anal , fcn_name ) : NULL"		863629	2		=			
ANR	863897	Identifier	key		863629	0					
ANR	863898	ConditionalExpression	"( fcn_name ) ? resolve_fcn_name ( core -> anal , fcn_name ) : NULL"		863629	1					
ANR	863899	Condition	fcn_name		863629	0					
ANR	863900	Identifier	fcn_name		863629	0					
ANR	863901	CallExpression	"resolve_fcn_name ( core -> anal , fcn_name )"		863629	1					
ANR	863902	Callee	resolve_fcn_name		863629	0					
ANR	863903	Identifier	resolve_fcn_name		863629	0					
ANR	863904	ArgumentList	core -> anal		863629	1					
ANR	863905	Argument	core -> anal		863629	0					
ANR	863906	PtrMemberAccess	core -> anal		863629	0					
ANR	863907	Identifier	core		863629	0					
ANR	863908	Identifier	anal		863629	1					
ANR	863909	Argument	fcn_name		863629	1					
ANR	863910	Identifier	fcn_name		863629	0					
ANR	863911	Identifier	NULL		863629	2					
ANR	863912	IfStatement	if ( key )		863629	3					
ANR	863913	Condition	key	9320:6:263480:263482	863629	0	True				
ANR	863914	Identifier	key		863629	0					
ANR	863915	CompoundStatement		49:3:1213:1276	863629	1					
ANR	863916	IdentifierDeclStatement	"const char * fcn_type = r_type_func_ret ( core -> anal -> sdb_types , key ) ;"	9321:3:263490:263557	863629	0	True				
ANR	863917	IdentifierDecl	"* fcn_type = r_type_func_ret ( core -> anal -> sdb_types , key )"		863629	0					
ANR	863918	IdentifierDeclType	const char *		863629	0					
ANR	863919	Identifier	fcn_type		863629	1					
ANR	863920	AssignmentExpression	"* fcn_type = r_type_func_ret ( core -> anal -> sdb_types , key )"		863629	2		=			
ANR	863921	Identifier	fcn_type		863629	0					
ANR	863922	CallExpression	"r_type_func_ret ( core -> anal -> sdb_types , key )"		863629	1					
ANR	863923	Callee	r_type_func_ret		863629	0					
ANR	863924	Identifier	r_type_func_ret		863629	0					
ANR	863925	ArgumentList	core -> anal -> sdb_types		863629	1					
ANR	863926	Argument	core -> anal -> sdb_types		863629	0					
ANR	863927	PtrMemberAccess	core -> anal -> sdb_types		863629	0					
ANR	863928	PtrMemberAccess	core -> anal		863629	0					
ANR	863929	Identifier	core		863629	0					
ANR	863930	Identifier	anal		863629	1					
ANR	863931	Identifier	sdb_types		863629	1					
ANR	863932	Argument	key		863629	1					
ANR	863933	Identifier	key		863629	0					
ANR	863934	IdentifierDeclStatement	"int nargs = r_type_func_args_count ( core -> anal -> sdb_types , key ) ;"	9322:3:263562:263625	863629	1	True				
ANR	863935	IdentifierDecl	"nargs = r_type_func_args_count ( core -> anal -> sdb_types , key )"		863629	0					
ANR	863936	IdentifierDeclType	int		863629	0					
ANR	863937	Identifier	nargs		863629	1					
ANR	863938	AssignmentExpression	"nargs = r_type_func_args_count ( core -> anal -> sdb_types , key )"		863629	2		=			
ANR	863939	Identifier	nargs		863629	0					
ANR	863940	CallExpression	"r_type_func_args_count ( core -> anal -> sdb_types , key )"		863629	1					
ANR	863941	Callee	r_type_func_args_count		863629	0					
ANR	863942	Identifier	r_type_func_args_count		863629	0					
ANR	863943	ArgumentList	core -> anal -> sdb_types		863629	1					
ANR	863944	Argument	core -> anal -> sdb_types		863629	0					
ANR	863945	PtrMemberAccess	core -> anal -> sdb_types		863629	0					
ANR	863946	PtrMemberAccess	core -> anal		863629	0					
ANR	863947	Identifier	core		863629	0					
ANR	863948	Identifier	anal		863629	1					
ANR	863949	Identifier	sdb_types		863629	1					
ANR	863950	Argument	key		863629	1					
ANR	863951	Identifier	key		863629	0					
ANR	863952	IfStatement	if ( fcn_type )		863629	2					
ANR	863953	Condition	fcn_type	9324:7:263662:263669	863629	0	True				
ANR	863954	Identifier	fcn_type		863629	0					
ANR	863955	CompoundStatement		51:17:1323:1323	863629	1					
ANR	863956	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s%s%s("" , r_str_get ( fcn_type ) , ( * fcn_type && fcn_type [ strlen ( fcn_type ) - 1 ] == '*' ) ? """" : "" "" , r_str_get ( key ) )"	9325:4:263678:263827	863629	0	True				
ANR	863957	CallExpression	"r_strbuf_appendf ( sb , ""%s%s%s("" , r_str_get ( fcn_type ) , ( * fcn_type && fcn_type [ strlen ( fcn_type ) - 1 ] == '*' ) ? """" : "" "" , r_str_get ( key ) )"		863629	0					
ANR	863958	Callee	r_strbuf_appendf		863629	0					
ANR	863959	Identifier	r_strbuf_appendf		863629	0					
ANR	863960	ArgumentList	sb		863629	1					
ANR	863961	Argument	sb		863629	0					
ANR	863962	Identifier	sb		863629	0					
ANR	863963	Argument	"""%s%s%s("""		863629	1					
ANR	863964	PrimaryExpression	"""%s%s%s("""		863629	0					
ANR	863965	Argument	r_str_get ( fcn_type )		863629	2					
ANR	863966	CallExpression	r_str_get ( fcn_type )		863629	0					
ANR	863967	Callee	r_str_get		863629	0					
ANR	863968	Identifier	r_str_get		863629	0					
ANR	863969	ArgumentList	fcn_type		863629	1					
ANR	863970	Argument	fcn_type		863629	0					
ANR	863971	Identifier	fcn_type		863629	0					
ANR	863972	Argument	"( * fcn_type && fcn_type [ strlen ( fcn_type ) - 1 ] == '*' ) ? """" : "" """		863629	3					
ANR	863973	ConditionalExpression	"( * fcn_type && fcn_type [ strlen ( fcn_type ) - 1 ] == '*' ) ? """" : "" """		863629	0					
ANR	863974	Condition	* fcn_type && fcn_type [ strlen ( fcn_type ) - 1 ] == '*'		863629	0					
ANR	863975	AndExpression	* fcn_type && fcn_type [ strlen ( fcn_type ) - 1 ] == '*'		863629	0		&&			
ANR	863976	UnaryOperationExpression	* fcn_type		863629	0					
ANR	863977	UnaryOperator	*		863629	0					
ANR	863978	Identifier	fcn_type		863629	1					
ANR	863979	EqualityExpression	fcn_type [ strlen ( fcn_type ) - 1 ] == '*'		863629	1		==			
ANR	863980	ArrayIndexing	fcn_type [ strlen ( fcn_type ) - 1 ]		863629	0					
ANR	863981	Identifier	fcn_type		863629	0					
ANR	863982	AdditiveExpression	strlen ( fcn_type ) - 1		863629	1		-			
ANR	863983	CallExpression	strlen ( fcn_type )		863629	0					
ANR	863984	Callee	strlen		863629	0					
ANR	863985	Identifier	strlen		863629	0					
ANR	863986	ArgumentList	fcn_type		863629	1					
ANR	863987	Argument	fcn_type		863629	0					
ANR	863988	Identifier	fcn_type		863629	0					
ANR	863989	PrimaryExpression	1		863629	1					
ANR	863990	PrimaryExpression	'*'		863629	1					
ANR	863991	PrimaryExpression	""""""		863629	1					
ANR	863992	PrimaryExpression	""" """		863629	2					
ANR	863993	Argument	r_str_get ( key )		863629	4					
ANR	863994	CallExpression	r_str_get ( key )		863629	0					
ANR	863995	Callee	r_str_get		863629	0					
ANR	863996	Identifier	r_str_get		863629	0					
ANR	863997	ArgumentList	key		863629	1					
ANR	863998	Argument	key		863629	0					
ANR	863999	Identifier	key		863629	0					
ANR	864000	IfStatement	if ( ! nargs )		863629	1					
ANR	864001	Condition	! nargs	9328:8:263837:263842	863629	0	True				
ANR	864002	UnaryOperationExpression	! nargs		863629	0					
ANR	864003	UnaryOperator	!		863629	0					
ANR	864004	Identifier	nargs		863629	1					
ANR	864005	CompoundStatement		55:16:1496:1496	863629	1					
ANR	864006	ExpressionStatement	"r_strbuf_appendf ( sb , ""void)\\n"" )"	9329:5:263852:263884	863629	0	True				
ANR	864007	CallExpression	"r_strbuf_appendf ( sb , ""void)\\n"" )"		863629	0					
ANR	864008	Callee	r_strbuf_appendf		863629	0					
ANR	864009	Identifier	r_strbuf_appendf		863629	0					
ANR	864010	ArgumentList	sb		863629	1					
ANR	864011	Argument	sb		863629	0					
ANR	864012	Identifier	sb		863629	0					
ANR	864013	Argument	"""void)\\n"""		863629	1					
ANR	864014	PrimaryExpression	"""void)\\n"""		863629	0					
ANR	864015	ElseStatement	else		863629	0					
ANR	864016	CompoundStatement		58:10:1553:1553	863629	0					
ANR	864017	ExpressionStatement	"eprintf ( ""Cannot find any function type..lets just use some standards?\\n"" )"	9332:4:263908:263982	863629	0	True				
ANR	864018	CallExpression	"eprintf ( ""Cannot find any function type..lets just use some standards?\\n"" )"		863629	0					
ANR	864019	Callee	eprintf		863629	0					
ANR	864020	Identifier	eprintf		863629	0					
ANR	864021	ArgumentList	"""Cannot find any function type..lets just use some standards?\\n"""		863629	1					
ANR	864022	Argument	"""Cannot find any function type..lets just use some standards?\\n"""		863629	0					
ANR	864023	PrimaryExpression	"""Cannot find any function type..lets just use some standards?\\n"""		863629	0					
ANR	864024	ElseStatement	else		863629	0					
ANR	864025	CompoundStatement		61:9:1649:1649	863629	0					
ANR	864026	IfStatement	if ( is_aCer )		863629	0					
ANR	864027	Condition	is_aCer	9335:7:264007:264013	863629	0	True				
ANR	864028	Identifier	is_aCer		863629	0					
ANR	864029	CompoundStatement		62:16:1667:1667	863629	1					
ANR	864030	ExpressionStatement	"show_reg_args ( core , - 1 , sb )"	9336:4:264022:264050	863629	0	True				
ANR	864031	CallExpression	"show_reg_args ( core , - 1 , sb )"		863629	0					
ANR	864032	Callee	show_reg_args		863629	0					
ANR	864033	Identifier	show_reg_args		863629	0					
ANR	864034	ArgumentList	core		863629	1					
ANR	864035	Argument	core		863629	0					
ANR	864036	Identifier	core		863629	0					
ANR	864037	Argument	- 1		863629	1					
ANR	864038	UnaryOperationExpression	- 1		863629	0					
ANR	864039	UnaryOperator	-		863629	0					
ANR	864040	PrimaryExpression	1		863629	1					
ANR	864041	Argument	sb		863629	2					
ANR	864042	Identifier	sb		863629	0					
ANR	864043	ExpressionStatement	go_on = true	9337:4:264056:264068	863629	1	True				
ANR	864044	AssignmentExpression	go_on = true		863629	0		=			
ANR	864045	Identifier	go_on		863629	0					
ANR	864046	Identifier	true		863629	1					
ANR	864047	ElseStatement	else		863629	0					
ANR	864048	CompoundStatement		65:10:1731:1731	863629	0					
ANR	864049	ExpressionStatement	"show_reg_args ( core , - 1 , NULL )"	9339:4:264086:264116	863629	0	True				
ANR	864050	CallExpression	"show_reg_args ( core , - 1 , NULL )"		863629	0					
ANR	864051	Callee	show_reg_args		863629	0					
ANR	864052	Identifier	show_reg_args		863629	0					
ANR	864053	ArgumentList	core		863629	1					
ANR	864054	Argument	core		863629	0					
ANR	864055	Identifier	core		863629	0					
ANR	864056	Argument	- 1		863629	1					
ANR	864057	UnaryOperationExpression	- 1		863629	0					
ANR	864058	UnaryOperator	-		863629	0					
ANR	864059	PrimaryExpression	1		863629	1					
ANR	864060	Argument	NULL		863629	2					
ANR	864061	Identifier	NULL		863629	0					
ANR	864062	ExpressionStatement	go_on = false	9340:4:264122:264135	863629	1	True				
ANR	864063	AssignmentExpression	go_on = false		863629	0		=			
ANR	864064	Identifier	go_on		863629	0					
ANR	864065	Identifier	false		863629	1					
ANR	864066	IfStatement	if ( go_on )		863629	18					
ANR	864067	Condition	go_on	9344:5:264154:264158	863629	0	True				
ANR	864068	Identifier	go_on		863629	0					
ANR	864069	CompoundStatement		130:1:3820:3849	863629	1					
ANR	864070	IdentifierDeclStatement	ut64 s_width = ( core -> anal -> bits == 64 ) ? 8 : 4 ;	9345:2:264165:264210	863629	0	True				
ANR	864071	IdentifierDecl	s_width = ( core -> anal -> bits == 64 ) ? 8 : 4		863629	0					
ANR	864072	IdentifierDeclType	ut64		863629	0					
ANR	864073	Identifier	s_width		863629	1					
ANR	864074	AssignmentExpression	s_width = ( core -> anal -> bits == 64 ) ? 8 : 4		863629	2		=			
ANR	864075	Identifier	s_width		863629	0					
ANR	864076	ConditionalExpression	( core -> anal -> bits == 64 ) ? 8 : 4		863629	1					
ANR	864077	Condition	core -> anal -> bits == 64		863629	0					
ANR	864078	EqualityExpression	core -> anal -> bits == 64		863629	0		==			
ANR	864079	PtrMemberAccess	core -> anal -> bits		863629	0					
ANR	864080	PtrMemberAccess	core -> anal		863629	0					
ANR	864081	Identifier	core		863629	0					
ANR	864082	Identifier	anal		863629	1					
ANR	864083	Identifier	bits		863629	1					
ANR	864084	PrimaryExpression	64		863629	1					
ANR	864085	PrimaryExpression	8		863629	1					
ANR	864086	PrimaryExpression	4		863629	2					
ANR	864087	IdentifierDeclStatement	"const char * sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP ) ;"	9346:2:264214:264278	863629	1	True				
ANR	864088	IdentifierDecl	"* sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		863629	0					
ANR	864089	IdentifierDeclType	const char *		863629	0					
ANR	864090	Identifier	sp		863629	1					
ANR	864091	AssignmentExpression	"* sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		863629	2		=			
ANR	864092	Identifier	sp		863629	0					
ANR	864093	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		863629	1					
ANR	864094	Callee	r_reg_get_name		863629	0					
ANR	864095	Identifier	r_reg_get_name		863629	0					
ANR	864096	ArgumentList	core -> anal -> reg		863629	1					
ANR	864097	Argument	core -> anal -> reg		863629	0					
ANR	864098	PtrMemberAccess	core -> anal -> reg		863629	0					
ANR	864099	PtrMemberAccess	core -> anal		863629	0					
ANR	864100	Identifier	core		863629	0					
ANR	864101	Identifier	anal		863629	1					
ANR	864102	Identifier	reg		863629	1					
ANR	864103	Argument	R_REG_NAME_SP		863629	1					
ANR	864104	Identifier	R_REG_NAME_SP		863629	0					
ANR	864105	IdentifierDeclStatement	"ut64 spv = r_reg_getv ( core -> anal -> reg , sp ) ;"	9347:2:264282:264325	863629	2	True				
ANR	864106	IdentifierDecl	"spv = r_reg_getv ( core -> anal -> reg , sp )"		863629	0					
ANR	864107	IdentifierDeclType	ut64		863629	0					
ANR	864108	Identifier	spv		863629	1					
ANR	864109	AssignmentExpression	"spv = r_reg_getv ( core -> anal -> reg , sp )"		863629	2		=			
ANR	864110	Identifier	spv		863629	0					
ANR	864111	CallExpression	"r_reg_getv ( core -> anal -> reg , sp )"		863629	1					
ANR	864112	Callee	r_reg_getv		863629	0					
ANR	864113	Identifier	r_reg_getv		863629	0					
ANR	864114	ArgumentList	core -> anal -> reg		863629	1					
ANR	864115	Argument	core -> anal -> reg		863629	0					
ANR	864116	PtrMemberAccess	core -> anal -> reg		863629	0					
ANR	864117	PtrMemberAccess	core -> anal		863629	0					
ANR	864118	Identifier	core		863629	0					
ANR	864119	Identifier	anal		863629	1					
ANR	864120	Identifier	reg		863629	1					
ANR	864121	Argument	sp		863629	1					
ANR	864122	Identifier	sp		863629	0					
ANR	864123	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , sp , spv + s_width )"	9348:2:264329:264376	863629	3	True				
ANR	864124	CallExpression	"r_reg_setv ( core -> anal -> reg , sp , spv + s_width )"		863629	0					
ANR	864125	Callee	r_reg_setv		863629	0					
ANR	864126	Identifier	r_reg_setv		863629	0					
ANR	864127	ArgumentList	core -> anal -> reg		863629	1					
ANR	864128	Argument	core -> anal -> reg		863629	0					
ANR	864129	PtrMemberAccess	core -> anal -> reg		863629	0					
ANR	864130	PtrMemberAccess	core -> anal		863629	0					
ANR	864131	Identifier	core		863629	0					
ANR	864132	Identifier	anal		863629	1					
ANR	864133	Identifier	reg		863629	1					
ANR	864134	Argument	sp		863629	1					
ANR	864135	Identifier	sp		863629	0					
ANR	864136	Argument	spv + s_width		863629	2					
ANR	864137	AdditiveExpression	spv + s_width		863629	0		+			
ANR	864138	Identifier	spv		863629	0					
ANR	864139	Identifier	s_width		863629	1					
ANR	864140	IdentifierDeclStatement	"RList * list = r_core_get_func_args ( core , fcn_name ) ;"	9349:2:264429:264480	863629	4	True				
ANR	864141	IdentifierDecl	"* list = r_core_get_func_args ( core , fcn_name )"		863629	0					
ANR	864142	IdentifierDeclType	RList *		863629	0					
ANR	864143	Identifier	list		863629	1					
ANR	864144	AssignmentExpression	"* list = r_core_get_func_args ( core , fcn_name )"		863629	2		=			
ANR	864145	Identifier	list		863629	0					
ANR	864146	CallExpression	"r_core_get_func_args ( core , fcn_name )"		863629	1					
ANR	864147	Callee	r_core_get_func_args		863629	0					
ANR	864148	Identifier	r_core_get_func_args		863629	0					
ANR	864149	ArgumentList	core		863629	1					
ANR	864150	Argument	core		863629	0					
ANR	864151	Identifier	core		863629	0					
ANR	864152	Argument	fcn_name		863629	1					
ANR	864153	Identifier	fcn_name		863629	0					
ANR	864154	IfStatement	if ( ! r_list_empty ( list ) )		863629	5					
ANR	864155	Condition	! r_list_empty ( list )	9350:6:264488:264507	863629	0	True				
ANR	864156	UnaryOperationExpression	! r_list_empty ( list )		863629	0					
ANR	864157	UnaryOperator	!		863629	0					
ANR	864158	CallExpression	r_list_empty ( list )		863629	1					
ANR	864159	Callee	r_list_empty		863629	0					
ANR	864160	Identifier	r_list_empty		863629	0					
ANR	864161	ArgumentList	list		863629	1					
ANR	864162	Argument	list		863629	0					
ANR	864163	Identifier	list		863629	0					
ANR	864164	CompoundStatement		80:3:2198:2219	863629	1					
ANR	864165	IdentifierDeclStatement	bool warning = false ;	9352:3:264522:264542	863629	0	True				
ANR	864166	IdentifierDecl	warning = false		863629	0					
ANR	864167	IdentifierDeclType	bool		863629	0					
ANR	864168	Identifier	warning		863629	1					
ANR	864169	AssignmentExpression	warning = false		863629	2		=			
ANR	864170	Identifier	false		863629	0					
ANR	864171	Identifier	false		863629	1					
ANR	864172	IdentifierDeclStatement	bool on_stack = false ;	9353:3:264547:264568	863629	1	True				
ANR	864173	IdentifierDecl	on_stack = false		863629	0					
ANR	864174	IdentifierDeclType	bool		863629	0					
ANR	864175	Identifier	on_stack		863629	1					
ANR	864176	AssignmentExpression	on_stack = false		863629	2		=			
ANR	864177	Identifier	false		863629	0					
ANR	864178	Identifier	false		863629	1					
ANR	864179	Statement	r_list_foreach	9354:3:264573:264586	863629	2	True				
ANR	864180	Statement	(	9354:18:264588:264588	863629	3	True				
ANR	864181	Statement	list	9354:19:264589:264592	863629	4	True				
ANR	864182	Statement	","	9354:23:264593:264593	863629	5	True				
ANR	864183	Statement	iter	9354:25:264595:264598	863629	6	True				
ANR	864184	Statement	","	9354:29:264599:264599	863629	7	True				
ANR	864185	Statement	arg	9354:31:264601:264603	863629	8	True				
ANR	864186	Statement	)	9354:34:264604:264604	863629	9	True				
ANR	864187	CompoundStatement		81:36:2257:2257	863629	10					
ANR	864188	IfStatement	"if ( r_str_startswith ( arg -> cc_source , ""stack"" ) )"		863629	0					
ANR	864189	Condition	"r_str_startswith ( arg -> cc_source , ""stack"" )"	9355:8:264616:264657	863629	0	True				
ANR	864190	CallExpression	"r_str_startswith ( arg -> cc_source , ""stack"" )"		863629	0					
ANR	864191	Callee	r_str_startswith		863629	0					
ANR	864192	Identifier	r_str_startswith		863629	0					
ANR	864193	ArgumentList	arg -> cc_source		863629	1					
ANR	864194	Argument	arg -> cc_source		863629	0					
ANR	864195	PtrMemberAccess	arg -> cc_source		863629	0					
ANR	864196	Identifier	arg		863629	0					
ANR	864197	Identifier	cc_source		863629	1					
ANR	864198	Argument	"""stack"""		863629	1					
ANR	864199	PrimaryExpression	"""stack"""		863629	0					
ANR	864200	CompoundStatement		82:52:2311:2311	863629	1					
ANR	864201	ExpressionStatement	on_stack = true	9356:5:264667:264682	863629	0	True				
ANR	864202	AssignmentExpression	on_stack = true		863629	0		=			
ANR	864203	Identifier	on_stack		863629	0					
ANR	864204	Identifier	true		863629	1					
ANR	864205	IfStatement	if ( ! arg -> size )		863629	1					
ANR	864206	Condition	! arg -> size	9358:8:264698:264707	863629	0	True				
ANR	864207	UnaryOperationExpression	! arg -> size		863629	0					
ANR	864208	UnaryOperator	!		863629	0					
ANR	864209	PtrMemberAccess	arg -> size		863629	1					
ANR	864210	Identifier	arg		863629	0					
ANR	864211	Identifier	size		863629	1					
ANR	864212	CompoundStatement		85:20:2361:2361	863629	1					
ANR	864213	ExpressionStatement	"r_cons_printf ( ""%s: unk_size"" , arg -> c_type )"	9359:5:264717:264760	863629	0	True				
ANR	864214	CallExpression	"r_cons_printf ( ""%s: unk_size"" , arg -> c_type )"		863629	0					
ANR	864215	Callee	r_cons_printf		863629	0					
ANR	864216	Identifier	r_cons_printf		863629	0					
ANR	864217	ArgumentList	"""%s: unk_size"""		863629	1					
ANR	864218	Argument	"""%s: unk_size"""		863629	0					
ANR	864219	PrimaryExpression	"""%s: unk_size"""		863629	0					
ANR	864220	Argument	arg -> c_type		863629	1					
ANR	864221	PtrMemberAccess	arg -> c_type		863629	0					
ANR	864222	Identifier	arg		863629	0					
ANR	864223	Identifier	c_type		863629	1					
ANR	864224	ExpressionStatement	warning = true	9360:5:264767:264781	863629	1	True				
ANR	864225	AssignmentExpression	warning = true		863629	0		=			
ANR	864226	Identifier	warning		863629	0					
ANR	864227	Identifier	true		863629	1					
ANR	864228	Statement	r_list_foreach	9363:3:264800:264813	863629	2	True				
ANR	864229	Statement	(	9363:18:264815:264815	863629	3	True				
ANR	864230	Statement	list	9363:19:264816:264819	863629	4	True				
ANR	864231	Statement	","	9363:23:264820:264820	863629	5	True				
ANR	864232	Statement	iter	9363:25:264822:264825	863629	6	True				
ANR	864233	Statement	","	9363:29:264826:264826	863629	7	True				
ANR	864234	Statement	arg	9363:31:264828:264830	863629	8	True				
ANR	864235	Statement	)	9363:34:264831:264831	863629	9	True				
ANR	864236	CompoundStatement		90:36:2484:2484	863629	10					
ANR	864237	ExpressionStatement	nextele = r_list_iter_get_next ( iter )	9364:4:264839:264876	863629	0	True				
ANR	864238	AssignmentExpression	nextele = r_list_iter_get_next ( iter )		863629	0		=			
ANR	864239	Identifier	nextele		863629	0					
ANR	864240	CallExpression	r_list_iter_get_next ( iter )		863629	1					
ANR	864241	Callee	r_list_iter_get_next		863629	0					
ANR	864242	Identifier	r_list_iter_get_next		863629	0					
ANR	864243	ArgumentList	iter		863629	1					
ANR	864244	Argument	iter		863629	0					
ANR	864245	Identifier	iter		863629	0					
ANR	864246	IfStatement	if ( ! arg -> fmt )		863629	1					
ANR	864247	Condition	! arg -> fmt	9365:8:264886:264894	863629	0	True				
ANR	864248	UnaryOperationExpression	! arg -> fmt		863629	0					
ANR	864249	UnaryOperator	!		863629	0					
ANR	864250	PtrMemberAccess	arg -> fmt		863629	1					
ANR	864251	Identifier	arg		863629	0					
ANR	864252	Identifier	fmt		863629	1					
ANR	864253	CompoundStatement		92:19:2548:2548	863629	1					
ANR	864254	ExpressionStatement	"r_strbuf_appendf ( sb , ""?%s"" , nextele ? "", "" : """" )"	9366:5:264904:264951	863629	0	True				
ANR	864255	CallExpression	"r_strbuf_appendf ( sb , ""?%s"" , nextele ? "", "" : """" )"		863629	0					
ANR	864256	Callee	r_strbuf_appendf		863629	0					
ANR	864257	Identifier	r_strbuf_appendf		863629	0					
ANR	864258	ArgumentList	sb		863629	1					
ANR	864259	Argument	sb		863629	0					
ANR	864260	Identifier	sb		863629	0					
ANR	864261	Argument	"""?%s"""		863629	1					
ANR	864262	PrimaryExpression	"""?%s"""		863629	0					
ANR	864263	Argument	"nextele ? "", "" : """""		863629	2					
ANR	864264	ConditionalExpression	"nextele ? "", "" : """""		863629	0					
ANR	864265	Condition	nextele		863629	0					
ANR	864266	Identifier	nextele		863629	0					
ANR	864267	PrimaryExpression	""", """		863629	1					
ANR	864268	PrimaryExpression	""""""		863629	2					
ANR	864269	ElseStatement	else		863629	0					
ANR	864270	CompoundStatement		97:5:2758:2778	863629	0					
ANR	864271	IdentifierDeclStatement	ut64 addr = arg -> src ;	9370:5:265107:265127	863629	0	True				
ANR	864272	IdentifierDecl	addr = arg -> src		863629	0					
ANR	864273	IdentifierDeclType	ut64		863629	0					
ANR	864274	Identifier	addr		863629	1					
ANR	864275	AssignmentExpression	addr = arg -> src		863629	2		=			
ANR	864276	Identifier	addr		863629	0					
ANR	864277	PtrMemberAccess	arg -> src		863629	1					
ANR	864278	Identifier	arg		863629	0					
ANR	864279	Identifier	src		863629	1					
ANR	864280	Statement	char	9371:5:265134:265137	863629	1	True				
ANR	864281	Statement	*	9371:10:265139:265139	863629	2	True				
ANR	864282	Statement	res	9371:11:265140:265142	863629	3	True				
ANR	864283	Statement	=	9371:15:265144:265144	863629	4	True				
ANR	864284	Statement	r_core_cmd_strf	9371:17:265146:265160	863629	5	True				
ANR	864285	Statement	(	9371:33:265162:265162	863629	6	True				
ANR	864286	Statement	core	9371:34:265163:265166	863629	7	True				
ANR	864287	Statement	","	9371:38:265167:265167	863629	8	True				
ANR	864288	Statement	"""pfq %s @ 0x%08"""	9371:40:265169:265184	863629	9	True				
ANR	864289	Statement	PFMT64x	9371:57:265186:265192	863629	10	True				
ANR	864290	Statement	","	9371:64:265193:265193	863629	11	True				
ANR	864291	Statement	arg	9371:66:265195:265197	863629	12	True				
ANR	864292	Statement	->	9371:69:265198:265199	863629	13	True				
ANR	864293	Statement	fmt	9371:71:265200:265202	863629	14	True				
ANR	864294	Statement	","	9371:74:265203:265203	863629	15	True				
ANR	864295	Statement	addr	9371:76:265205:265208	863629	16	True				
ANR	864296	Statement	)	9371:80:265209:265209	863629	17	True				
ANR	864297	ExpressionStatement		9371:81:265210:265210	863629	18	True				
ANR	864298	ExpressionStatement	r_str_trim ( res )	9373:5:265288:265304	863629	19	True				
ANR	864299	CallExpression	r_str_trim ( res )		863629	0					
ANR	864300	Callee	r_str_trim		863629	0					
ANR	864301	Identifier	r_str_trim		863629	0					
ANR	864302	ArgumentList	res		863629	1					
ANR	864303	Argument	res		863629	0					
ANR	864304	Identifier	res		863629	0					
ANR	864305	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s"" , res )"	9374:5:265311:265343	863629	20	True				
ANR	864306	CallExpression	"r_strbuf_appendf ( sb , ""%s"" , res )"		863629	0					
ANR	864307	Callee	r_strbuf_appendf		863629	0					
ANR	864308	Identifier	r_strbuf_appendf		863629	0					
ANR	864309	ArgumentList	sb		863629	1					
ANR	864310	Argument	sb		863629	0					
ANR	864311	Identifier	sb		863629	0					
ANR	864312	Argument	"""%s"""		863629	1					
ANR	864313	PrimaryExpression	"""%s"""		863629	0					
ANR	864314	Argument	res		863629	2					
ANR	864315	Identifier	res		863629	0					
ANR	864316	ExpressionStatement	free ( res )	9375:5:265350:265360	863629	21	True				
ANR	864317	CallExpression	free ( res )		863629	0					
ANR	864318	Callee	free		863629	0					
ANR	864319	Identifier	free		863629	0					
ANR	864320	ArgumentList	res		863629	1					
ANR	864321	Argument	res		863629	0					
ANR	864322	Identifier	res		863629	0					
ANR	864323	ExpressionStatement	"r_strbuf_appendf ( sb , "")"" )"	9378:3:265376:265402	863629	11	True				
ANR	864324	CallExpression	"r_strbuf_appendf ( sb , "")"" )"		863629	0					
ANR	864325	Callee	r_strbuf_appendf		863629	0					
ANR	864326	Identifier	r_strbuf_appendf		863629	0					
ANR	864327	ArgumentList	sb		863629	1					
ANR	864328	Argument	sb		863629	0					
ANR	864329	Identifier	sb		863629	0					
ANR	864330	Argument	""")"""		863629	1					
ANR	864331	PrimaryExpression	""")"""		863629	0					
ANR	864332	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , sp , spv )"	9401:2:266107:266144	863629	11	True				
ANR	864333	CallExpression	"r_reg_setv ( core -> anal -> reg , sp , spv )"		863629	0					
ANR	864334	Callee	r_reg_setv		863629	0					
ANR	864335	Identifier	r_reg_setv		863629	0					
ANR	864336	ArgumentList	core -> anal -> reg		863629	1					
ANR	864337	Argument	core -> anal -> reg		863629	0					
ANR	864338	PtrMemberAccess	core -> anal -> reg		863629	0					
ANR	864339	PtrMemberAccess	core -> anal		863629	0					
ANR	864340	Identifier	core		863629	0					
ANR	864341	Identifier	anal		863629	1					
ANR	864342	Identifier	reg		863629	1					
ANR	864343	Argument	sp		863629	1					
ANR	864344	Identifier	sp		863629	0					
ANR	864345	Argument	spv		863629	2					
ANR	864346	Identifier	spv		863629	0					
ANR	864347	ElseStatement	else		863629	0					
ANR	864348	CompoundStatement		108:3:3102:3118	863629	0					
ANR	864349	IdentifierDeclStatement	"int i , nargs = 4 ;"	9381:3:265451:265467	863629	0	True				
ANR	864350	IdentifierDecl	i		863629	0					
ANR	864351	IdentifierDeclType	int		863629	0					
ANR	864352	Identifier	i		863629	1					
ANR	864353	IdentifierDecl	nargs = 4		863629	1					
ANR	864354	IdentifierDeclType	int		863629	0					
ANR	864355	Identifier	nargs		863629	1					
ANR	864356	AssignmentExpression	nargs = 4		863629	2		=			
ANR	864357	Identifier	nargs		863629	0					
ANR	864358	PrimaryExpression	4		863629	1					
ANR	864359	IfStatement	if ( fcn )		863629	1					
ANR	864360	Condition	fcn	9382:7:265494:265496	863629	0	True				
ANR	864361	Identifier	fcn		863629	0					
ANR	864362	CompoundStatement		109:12:3150:3150	863629	1					
ANR	864363	ExpressionStatement	"nargs = r_anal_var_count ( core -> anal , fcn , 's' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"	9384:4:265580:265730	863629	0	True				
ANR	864364	AssignmentExpression	"nargs = r_anal_var_count ( core -> anal , fcn , 's' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"		863629	0		=			
ANR	864365	Identifier	nargs		863629	0					
ANR	864366	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"		863629	1		+			
ANR	864367	CallExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 1 )"		863629	0					
ANR	864368	Callee	r_anal_var_count		863629	0					
ANR	864369	Identifier	r_anal_var_count		863629	0					
ANR	864370	ArgumentList	core -> anal		863629	1					
ANR	864371	Argument	core -> anal		863629	0					
ANR	864372	PtrMemberAccess	core -> anal		863629	0					
ANR	864373	Identifier	core		863629	0					
ANR	864374	Identifier	anal		863629	1					
ANR	864375	Argument	fcn		863629	1					
ANR	864376	Identifier	fcn		863629	0					
ANR	864377	Argument	's'		863629	2					
ANR	864378	PrimaryExpression	's'		863629	0					
ANR	864379	Argument	1		863629	3					
ANR	864380	PrimaryExpression	1		863629	0					
ANR	864381	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"		863629	1		+			
ANR	864382	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 1 )"		863629	0					
ANR	864383	Callee	r_anal_var_count		863629	0					
ANR	864384	Identifier	r_anal_var_count		863629	0					
ANR	864385	ArgumentList	core -> anal		863629	1					
ANR	864386	Argument	core -> anal		863629	0					
ANR	864387	PtrMemberAccess	core -> anal		863629	0					
ANR	864388	Identifier	core		863629	0					
ANR	864389	Identifier	anal		863629	1					
ANR	864390	Argument	fcn		863629	1					
ANR	864391	Identifier	fcn		863629	0					
ANR	864392	Argument	'b'		863629	2					
ANR	864393	PrimaryExpression	'b'		863629	0					
ANR	864394	Argument	1		863629	3					
ANR	864395	PrimaryExpression	1		863629	0					
ANR	864396	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"		863629	1					
ANR	864397	Callee	r_anal_var_count		863629	0					
ANR	864398	Identifier	r_anal_var_count		863629	0					
ANR	864399	ArgumentList	core -> anal		863629	1					
ANR	864400	Argument	core -> anal		863629	0					
ANR	864401	PtrMemberAccess	core -> anal		863629	0					
ANR	864402	Identifier	core		863629	0					
ANR	864403	Identifier	anal		863629	1					
ANR	864404	Argument	fcn		863629	1					
ANR	864405	Identifier	fcn		863629	0					
ANR	864406	Argument	'r'		863629	2					
ANR	864407	PrimaryExpression	'r'		863629	0					
ANR	864408	Argument	1		863629	3					
ANR	864409	PrimaryExpression	1		863629	0					
ANR	864410	IfStatement	if ( nargs > 0 )		863629	2					
ANR	864411	Condition	nargs > 0	9388:7:265744:265752	863629	0	True				
ANR	864412	RelationalExpression	nargs > 0		863629	0		>			
ANR	864413	Identifier	nargs		863629	0					
ANR	864414	PrimaryExpression	0		863629	1					
ANR	864415	CompoundStatement		115:18:3406:3406	863629	1					
ANR	864416	IfStatement	if ( fcn_name )		863629	0					
ANR	864417	Condition	fcn_name	9389:8:265765:265772	863629	0	True				
ANR	864418	Identifier	fcn_name		863629	0					
ANR	864419	CompoundStatement		116:18:3426:3426	863629	1					
ANR	864420	ExpressionStatement	"r_strbuf_appendf ( sb , ""; %s("" , fcn_name )"	9390:5:265782:265822	863629	0	True				
ANR	864421	CallExpression	"r_strbuf_appendf ( sb , ""; %s("" , fcn_name )"		863629	0					
ANR	864422	Callee	r_strbuf_appendf		863629	0					
ANR	864423	Identifier	r_strbuf_appendf		863629	0					
ANR	864424	ArgumentList	sb		863629	1					
ANR	864425	Argument	sb		863629	0					
ANR	864426	Identifier	sb		863629	0					
ANR	864427	Argument	"""; %s("""		863629	1					
ANR	864428	PrimaryExpression	"""; %s("""		863629	0					
ANR	864429	Argument	fcn_name		863629	2					
ANR	864430	Identifier	fcn_name		863629	0					
ANR	864431	ElseStatement	else		863629	0					
ANR	864432	CompoundStatement		118:11:3486:3486	863629	0					
ANR	864433	Statement	r_strbuf_appendf	9392:5:265842:265857	863629	0	True				
ANR	864434	Statement	(	9392:22:265859:265859	863629	1	True				
ANR	864435	Statement	sb	9392:23:265860:265861	863629	2	True				
ANR	864436	Statement	","	9392:25:265862:265862	863629	3	True				
ANR	864437	Statement	"""; 0x%"""	9392:27:265864:265870	863629	4	True				
ANR	864438	Statement	PFMT64x	9392:34:265871:265877	863629	5	True				
ANR	864439	Statement	"""("""	9392:41:265878:265880	863629	6	True				
ANR	864440	Statement	","	9392:44:265881:265881	863629	7	True				
ANR	864441	Statement	pcv	9392:46:265883:265885	863629	8	True				
ANR	864442	Statement	)	9392:49:265886:265886	863629	9	True				
ANR	864443	ExpressionStatement		9392:50:265887:265887	863629	10	True				
ANR	864444	ForStatement	for ( i = 0 ; i < nargs ; i ++ )		863629	1					
ANR	864445	ForInit	i = 0 ;	9394:9:265904:265909	863629	0	True				
ANR	864446	AssignmentExpression	i = 0		863629	0		=			
ANR	864447	Identifier	i		863629	0					
ANR	864448	PrimaryExpression	0		863629	1					
ANR	864449	Condition	i < nargs	9394:16:265911:265919	863629	1	True				
ANR	864450	RelationalExpression	i < nargs		863629	0		<			
ANR	864451	Identifier	i		863629	0					
ANR	864452	Identifier	nargs		863629	1					
ANR	864453	PostIncDecOperationExpression	i ++	9394:27:265922:265924	863629	2	True				
ANR	864454	Identifier	i		863629	0					
ANR	864455	IncDec	++		863629	1					
ANR	864456	CompoundStatement		122:5:3585:3649	863629	3					
ANR	864457	IdentifierDeclStatement	"ut64 v = r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_FASTCALL , i ) ;"	9395:5:265934:265998	863629	0	True				
ANR	864458	IdentifierDecl	"v = r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_FASTCALL , i )"		863629	0					
ANR	864459	IdentifierDeclType	ut64		863629	0					
ANR	864460	Identifier	v		863629	1					
ANR	864461	AssignmentExpression	"v = r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_FASTCALL , i )"		863629	2		=			
ANR	864462	Identifier	v		863629	0					
ANR	864463	CallExpression	"r_debug_arg_get ( core -> dbg , R_ANAL_CC_TYPE_FASTCALL , i )"		863629	1					
ANR	864464	Callee	r_debug_arg_get		863629	0					
ANR	864465	Identifier	r_debug_arg_get		863629	0					
ANR	864466	ArgumentList	core -> dbg		863629	1					
ANR	864467	Argument	core -> dbg		863629	0					
ANR	864468	PtrMemberAccess	core -> dbg		863629	0					
ANR	864469	Identifier	core		863629	0					
ANR	864470	Identifier	dbg		863629	1					
ANR	864471	Argument	R_ANAL_CC_TYPE_FASTCALL		863629	1					
ANR	864472	Identifier	R_ANAL_CC_TYPE_FASTCALL		863629	0					
ANR	864473	Argument	i		863629	2					
ANR	864474	Identifier	i		863629	0					
ANR	864475	Statement	r_strbuf_appendf	9396:5:266005:266020	863629	1	True				
ANR	864476	Statement	(	9396:22:266022:266022	863629	2	True				
ANR	864477	Statement	sb	9396:23:266023:266024	863629	3	True				
ANR	864478	Statement	","	9396:25:266025:266025	863629	4	True				
ANR	864479	Statement	"""%s0x%"""	9396:27:266027:266033	863629	5	True				
ANR	864480	Statement	PFMT64x	9396:34:266034:266040	863629	6	True				
ANR	864481	Statement	","	9396:41:266041:266041	863629	7	True				
ANR	864482	Statement	i	9396:43:266043:266043	863629	8	True				
ANR	864483	Statement	?	9396:44:266044:266044	863629	9	True				
ANR	864484	Statement	""", """	9396:45:266045:266048	863629	10	True				
ANR	864485	Statement	:	9396:49:266049:266049	863629	11	True				
ANR	864486	Statement	""""""	9396:50:266050:266051	863629	12	True				
ANR	864487	Statement	","	9396:52:266052:266052	863629	13	True				
ANR	864488	Statement	v	9396:54:266054:266054	863629	14	True				
ANR	864489	Statement	)	9396:55:266055:266055	863629	15	True				
ANR	864490	ExpressionStatement		9396:56:266056:266056	863629	16	True				
ANR	864491	ExpressionStatement	"r_strbuf_appendf ( sb , "")"" )"	9398:4:266068:266094	863629	2	True				
ANR	864492	CallExpression	"r_strbuf_appendf ( sb , "")"" )"		863629	0					
ANR	864493	Callee	r_strbuf_appendf		863629	0					
ANR	864494	Identifier	r_strbuf_appendf		863629	0					
ANR	864495	ArgumentList	sb		863629	1					
ANR	864496	Argument	sb		863629	0					
ANR	864497	Identifier	sb		863629	0					
ANR	864498	Argument	""")"""		863629	1					
ANR	864499	PrimaryExpression	""")"""		863629	0					
ANR	864500	IdentifierDeclStatement	char * s = r_strbuf_drain ( sb ) ;	9403:1:266169:266198	863629	6	True				
ANR	864501	IdentifierDecl	* s = r_strbuf_drain ( sb )		863629	0					
ANR	864502	IdentifierDeclType	char *		863629	0					
ANR	864503	Identifier	s		863629	1					
ANR	864504	AssignmentExpression	* s = r_strbuf_drain ( sb )		863629	2		=			
ANR	864505	Identifier	s		863629	0					
ANR	864506	CallExpression	r_strbuf_drain ( sb )		863629	1					
ANR	864507	Callee	r_strbuf_drain		863629	0					
ANR	864508	Identifier	r_strbuf_drain		863629	0					
ANR	864509	ArgumentList	sb		863629	1					
ANR	864510	Argument	sb		863629	0					
ANR	864511	Identifier	sb		863629	0					
ANR	864512	IfStatement	if ( is_aCer )		863629	7					
ANR	864513	Condition	is_aCer	9404:5:266205:266211	863629	0	True				
ANR	864514	Identifier	is_aCer		863629	0					
ANR	864515	CompoundStatement		132:2:3869:3906	863629	1					
ANR	864516	IdentifierDeclStatement	"char * u = r_base64_encode_dyn ( s , - 1 ) ;"	9405:2:266218:266255	863629	0	True				
ANR	864517	IdentifierDecl	"* u = r_base64_encode_dyn ( s , - 1 )"		863629	0					
ANR	864518	IdentifierDeclType	char *		863629	0					
ANR	864519	Identifier	u		863629	1					
ANR	864520	AssignmentExpression	"* u = r_base64_encode_dyn ( s , - 1 )"		863629	2		=			
ANR	864521	Identifier	u		863629	0					
ANR	864522	CallExpression	"r_base64_encode_dyn ( s , - 1 )"		863629	1					
ANR	864523	Callee	r_base64_encode_dyn		863629	0					
ANR	864524	Identifier	r_base64_encode_dyn		863629	0					
ANR	864525	ArgumentList	s		863629	1					
ANR	864526	Argument	s		863629	0					
ANR	864527	Identifier	s		863629	0					
ANR	864528	Argument	- 1		863629	1					
ANR	864529	UnaryOperationExpression	- 1		863629	0					
ANR	864530	UnaryOperator	-		863629	0					
ANR	864531	PrimaryExpression	1		863629	1					
ANR	864532	IfStatement	if ( u )		863629	1					
ANR	864533	Condition	u	9406:6:266263:266263	863629	0	True				
ANR	864534	Identifier	u		863629	0					
ANR	864535	CompoundStatement		133:9:3917:3917	863629	1					
ANR	864536	ExpressionStatement	"r_cons_printf ( ""CCu base64:%s\\n"" , u )"	9407:3:266271:266307	863629	0	True				
ANR	864537	CallExpression	"r_cons_printf ( ""CCu base64:%s\\n"" , u )"		863629	0					
ANR	864538	Callee	r_cons_printf		863629	0					
ANR	864539	Identifier	r_cons_printf		863629	0					
ANR	864540	ArgumentList	"""CCu base64:%s\\n"""		863629	1					
ANR	864541	Argument	"""CCu base64:%s\\n"""		863629	0					
ANR	864542	PrimaryExpression	"""CCu base64:%s\\n"""		863629	0					
ANR	864543	Argument	u		863629	1					
ANR	864544	Identifier	u		863629	0					
ANR	864545	ExpressionStatement	free ( u )	9408:3:266312:266320	863629	1	True				
ANR	864546	CallExpression	free ( u )		863629	0					
ANR	864547	Callee	free		863629	0					
ANR	864548	Identifier	free		863629	0					
ANR	864549	ArgumentList	u		863629	1					
ANR	864550	Argument	u		863629	0					
ANR	864551	Identifier	u		863629	0					
ANR	864552	ElseStatement	else		863629	0					
ANR	864553	CompoundStatement		137:8:3985:3985	863629	0					
ANR	864554	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , s )"	9411:2:266338:266363	863629	0	True				
ANR	864555	CallExpression	"r_cons_printf ( ""%s\\n"" , s )"		863629	0					
ANR	864556	Callee	r_cons_printf		863629	0					
ANR	864557	Identifier	r_cons_printf		863629	0					
ANR	864558	ArgumentList	"""%s\\n"""		863629	1					
ANR	864559	Argument	"""%s\\n"""		863629	0					
ANR	864560	PrimaryExpression	"""%s\\n"""		863629	0					
ANR	864561	Argument	s		863629	1					
ANR	864562	Identifier	s		863629	0					
ANR	864563	ExpressionStatement	free ( s )	9413:1:266369:266377	863629	8	True				
ANR	864564	CallExpression	free ( s )		863629	0					
ANR	864565	Callee	free		863629	0					
ANR	864566	Identifier	free		863629	0					
ANR	864567	ArgumentList	s		863629	1					
ANR	864568	Argument	s		863629	0					
ANR	864569	Identifier	s		863629	0					
ANR	864570	Statement	static	9416:0:266382:266387	863629	19	True				
ANR	864571	Statement	int	9416:7:266389:266391	863629	20	True				
ANR	864572	Statement	cmd_anal	9416:11:266393:266400	863629	21	True				
ANR	864573	Statement	(	9416:19:266401:266401	863629	22	True				
ANR	864574	Statement	void	9416:20:266402:266405	863629	23	True				
ANR	864575	Statement	*	9416:25:266407:266407	863629	24	True				
ANR	864576	Statement	data	9416:26:266408:266411	863629	25	True				
ANR	864577	Statement	","	9416:30:266412:266412	863629	26	True				
ANR	864578	Statement	const	9416:32:266414:266418	863629	27	True				
ANR	864579	Statement	char	9416:38:266420:266423	863629	28	True				
ANR	864580	Statement	*	9416:43:266425:266425	863629	29	True				
ANR	864581	Statement	input	9416:44:266426:266430	863629	30	True				
ANR	864582	Statement	)	9416:49:266431:266431	863629	31	True				
ANR	864583	ReturnType	static void		863629	1					
ANR	864584	Identifier	cmd_anal_aC		863629	2					
ANR	864585	ParameterList	"RCore * core , const char * input"		863629	3					
ANR	864586	Parameter	RCore * core	9274:24:262316:262326	863629	0	True				
ANR	864587	ParameterType	RCore *		863629	0					
ANR	864588	Identifier	core		863629	1					
ANR	864589	Parameter	const char * input	9274:37:262329:262345	863629	1	True				
ANR	864590	ParameterType	const char *		863629	0					
ANR	864591	Identifier	input		863629	1					
ANR	864592	CFGEntryNode	ENTRY		863629		True				
ANR	864593	CFGExitNode	EXIT		863629		True				
ANR	864594	Symbol	core -> anal -> reg		863629						
ANR	864595	Symbol	* op		863629						
ANR	864596	Symbol	* fcn		863629						
ANR	864597	Symbol	fcn -> name		863629						
ANR	864598	Symbol	* input		863629						
ANR	864599	Symbol	strchr		863629						
ANR	864600	Symbol	r_core_anal_op		863629						
ANR	864601	Symbol	arg -> size		863629						
ANR	864602	Symbol	arg -> src		863629						
ANR	864603	Symbol	fcn_type		863629						
ANR	864604	Symbol	strlen		863629						
ANR	864605	Symbol	r_base64_encode_dyn		863629						
ANR	864606	Symbol	r_anal_var_count		863629						
ANR	864607	Symbol	warning		863629						
ANR	864608	Symbol	core -> num		863629						
ANR	864609	Symbol	r_flag_get_i		863629						
ANR	864610	Symbol	* fcn_type		863629						
ANR	864611	Symbol	on_stack		863629						
ANR	864612	Symbol	r_str_get		863629						
ANR	864613	Symbol	res		863629						
ANR	864614	Symbol	item		863629						
ANR	864615	Symbol	r_strbuf_new		863629						
ANR	864616	Symbol	NULL		863629						
ANR	864617	Symbol	op -> type		863629						
ANR	864618	Symbol	iter		863629						
ANR	864619	Symbol	list		863629						
ANR	864620	Symbol	r_list_iter_get_next		863629						
ANR	864621	Symbol	core		863629						
ANR	864622	Symbol	input		863629						
ANR	864623	Symbol	R_REG_NAME_SP		863629						
ANR	864624	Symbol	r_reg_get_name		863629						
ANR	864625	Symbol	R_ANAL_OP_TYPE_CALL		863629						
ANR	864626	Symbol	is_aCer		863629						
ANR	864627	Symbol	arg -> c_type		863629						
ANR	864628	Symbol	true		863629						
ANR	864629	Symbol	spv		863629						
ANR	864630	Symbol	r_list_empty		863629						
ANR	864631	Symbol	resolve_fcn_name		863629						
ANR	864632	Symbol	r_reg_getv		863629						
ANR	864633	Symbol	s_width		863629						
ANR	864634	Symbol	* arg		863629						
ANR	864635	Symbol	r_anal_get_fcn_at		863629						
ANR	864636	Symbol	* core		863629						
ANR	864637	Symbol	r_core_get_func_args		863629						
ANR	864638	Symbol	go_on		863629						
ANR	864639	Symbol	core -> anal -> sdb_types		863629						
ANR	864640	Symbol	core -> anal		863629						
ANR	864641	Symbol	sb		863629						
ANR	864642	Symbol	r_num_math		863629						
ANR	864643	Symbol	fcn		863629						
ANR	864644	Symbol	nextele		863629						
ANR	864645	Symbol	r_type_func_args_count		863629						
ANR	864646	Symbol	* item		863629						
ANR	864647	Symbol	arg		863629						
ANR	864648	Symbol	op -> jump		863629						
ANR	864649	Symbol	arg -> fmt		863629						
ANR	864650	Symbol	arg -> cc_source		863629						
ANR	864651	Symbol	addr		863629						
ANR	864652	Symbol	fcn_name		863629						
ANR	864653	Symbol	sp		863629						
ANR	864654	Symbol	key		863629						
ANR	864655	Symbol	* * core		863629						
ANR	864656	Symbol	r_str_startswith		863629						
ANR	864657	Symbol	op		863629						
ANR	864658	Symbol	pcv		863629						
ANR	864659	Symbol	core -> anal -> bits		863629						
ANR	864660	Symbol	R_ANAL_CC_TYPE_FASTCALL		863629						
ANR	864661	Symbol	false		863629						
ANR	864662	Symbol	i		863629						
ANR	864663	Symbol	core -> flags		863629						
ANR	864664	Symbol	r_debug_arg_get		863629						
ANR	864665	Symbol	nargs		863629						
ANR	864666	Symbol	r_type_func_ret		863629						
ANR	864667	Symbol	* core -> anal		863629						
ANR	864668	Symbol	s		863629						
ANR	864669	Symbol	* strlen		863629						
ANR	864670	Symbol	u		863629						
ANR	864671	Symbol	item -> name		863629						
ANR	864672	Symbol	v		863629						
ANR	864673	Symbol	r_strbuf_drain		863629						
ANR	864674	Symbol	iarg		863629						
ANR	864675	Symbol	core -> dbg		863629						
