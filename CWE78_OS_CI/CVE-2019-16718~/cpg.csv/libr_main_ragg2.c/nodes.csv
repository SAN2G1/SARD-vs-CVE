command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4990129	File	data/converged/CVE-2019-16718~_radare2/libr_main_ragg2.c								
ANR	4990130	Function	usage	9:0:160:2255							
ANR	4990131	FunctionDef	usage (int v)		4990130	0					
ANR	4990132	CompoundStatement		9:24:184:2255	4990130	0					
ANR	4990133	Statement	printf	10:1:187:192	4990130	0	True				
ANR	4990134	Statement	(	10:8:194:194	4990130	1	True				
ANR	4990135	Statement	"""Usage: ragg2 [-FOLsrxhvz] [-a arch] [-b bits] [-k os] [-o file] [-I path]\\n"""	10:9:195:271	4990130	2	True				
ANR	4990136	Statement	"""             [-i sc] [-e enc] [-B hex] [-c k=v] [-C file] [-p pad] [-q off]\\n"""	11:2:275:353	4990130	3	True				
ANR	4990137	Statement	"""             [-S string] [-f fmt] [-nN dword] [-dDw off:hex] file|f.asm|-\\n"""	12:2:357:433	4990130	4	True				
ANR	4990138	Statement	)	12:79:434:434	4990130	5	True				
ANR	4990139	ExpressionStatement		12:80:435:435	4990130	6	True				
ANR	4990140	IfStatement	if ( v )		4990130	7					
ANR	4990141	Condition	v	13:5:442:442	4990130	0	True				
ANR	4990142	Identifier	v		4990130	0					
ANR	4990143	CompoundStatement		5:8:260:260	4990130	1					
ANR	4990144	Statement	printf	14:2:449:454	4990130	0	True				
ANR	4990145	Statement	(	14:9:456:456	4990130	1	True				
ANR	4990146	Statement	""" -a [arch]       select architecture (x86, mips, arm)\\n"""	15:3:461:517	4990130	2	True				
ANR	4990147	Statement	""" -b [bits]       register size (32, 64, ..)\\n"""	16:3:522:568	4990130	3	True				
ANR	4990148	Statement	""" -B [hexpairs]   append some hexpair bytes\\n"""	17:3:573:618	4990130	4	True				
ANR	4990149	Statement	""" -c [k=v]        set configuration options\\n"""	18:3:623:668	4990130	5	True				
ANR	4990150	Statement	""" -C [file]       append contents of file\\n"""	19:3:673:716	4990130	6	True				
ANR	4990151	Statement	""" -d [off:dword]  patch dword (4 bytes) at given offset\\n"""	20:3:721:778	4990130	7	True				
ANR	4990152	Statement	""" -D [off:qword]  patch qword (8 bytes) at given offset\\n"""	21:3:783:840	4990130	8	True				
ANR	4990153	Statement	""" -e [encoder]    use specific encoder. see -L\\n"""	22:3:845:893	4990130	9	True				
ANR	4990154	Statement	""" -f [format]     output format (raw, c, pe, elf, mach0, python, javascript)\\n"""	23:3:898:976	4990130	10	True				
ANR	4990155	Statement	""" -F              output native format (osx=mach0, linux=elf, ..)\\n"""	24:3:981:1048	4990130	11	True				
ANR	4990156	Statement	""" -h              show this help\\n"""	25:3:1053:1087	4990130	12	True				
ANR	4990157	Statement	""" -i [shellcode]  include shellcode plugin, uses options. see -L\\n"""	26:3:1092:1158	4990130	13	True				
ANR	4990158	Statement	""" -I [path]       add include path\\n"""	27:3:1163:1199	4990130	14	True				
ANR	4990159	Statement	""" -k [os]         operating system's kernel (linux,bsd,osx,w32)\\n"""	28:3:1204:1269	4990130	15	True				
ANR	4990160	Statement	""" -L              list all plugins (shellcodes and encoders)\\n"""	29:3:1274:1336	4990130	16	True				
ANR	4990161	Statement	""" -n [dword]      append 32bit number (4 bytes)\\n"""	30:3:1341:1390	4990130	17	True				
ANR	4990162	Statement	""" -N [dword]      append 64bit number (8 bytes)\\n"""	31:3:1395:1444	4990130	18	True				
ANR	4990163	Statement	""" -o [file]       output file\\n"""	32:3:1449:1480	4990130	19	True				
ANR	4990164	Statement	""" -O              use default output file (filename without extension or a.out)\\n"""	33:3:1485:1566	4990130	20	True				
ANR	4990165	Statement	""" -p [padding]    add padding after compilation (padding=n10s32)\\n"""	34:3:1571:1637	4990130	21	True				
ANR	4990166	Statement	"""                 ntas : begin nop, trap, 'a', sequence\\n"""	35:3:1642:1699	4990130	22	True				
ANR	4990167	Statement	"""                 NTAS : same as above, but at the end\\n"""	36:3:1704:1760	4990130	23	True				
ANR	4990168	Statement	""" -P [size]       prepend debruijn pattern\\n"""	37:3:1765:1809	4990130	24	True				
ANR	4990169	Statement	""" -q [fragment]   debruijn pattern offset\\n"""	38:3:1814:1857	4990130	25	True				
ANR	4990170	Statement	""" -r              show raw bytes instead of hexpairs\\n"""	39:3:1862:1916	4990130	26	True				
ANR	4990171	Statement	""" -s              show assembler\\n"""	40:3:1921:1955	4990130	27	True				
ANR	4990172	Statement	""" -S [string]     append a string\\n"""	41:3:1960:1995	4990130	28	True				
ANR	4990173	Statement	""" -v              show version\\n"""	42:3:2000:2032	4990130	29	True				
ANR	4990174	Statement	""" -w [off:hex]    patch hexpairs at given offset\\n"""	43:3:2037:2087	4990130	30	True				
ANR	4990175	Statement	""" -x              execute\\n"""	44:3:2092:2119	4990130	31	True				
ANR	4990176	Statement	""" -X [hexpairs]   execute rop chain, using the stack provided\\n"""	45:3:2124:2187	4990130	32	True				
ANR	4990177	Statement	""" -z              output in C string syntax\\n"""	46:3:2192:2237	4990130	33	True				
ANR	4990178	Statement	)	46:49:2238:2238	4990130	34	True				
ANR	4990179	ExpressionStatement		46:50:2239:2239	4990130	35	True				
ANR	4990180	ReturnStatement	return 1 ;	48:1:2245:2253	4990130	8	True				
ANR	4990181	PrimaryExpression	1		4990130	0					
ANR	4990182	ReturnType	static int		4990130	1					
ANR	4990183	Identifier	usage		4990130	2					
ANR	4990184	ParameterList	int v		4990130	3					
ANR	4990185	Parameter	int v	9:17:177:181	4990130	0	True				
ANR	4990186	ParameterType	int		4990130	0					
ANR	4990187	Identifier	v		4990130	1					
ANR	4990188	CFGEntryNode	ENTRY		4990130		True				
ANR	4990189	CFGExitNode	EXIT		4990130		True				
ANR	4990190	Symbol	v		4990130						
ANR	4990191	Function	list	52:0:2259:2647							
ANR	4990192	FunctionDef	list (REgg * egg)		4990191	0					
ANR	4990193	CompoundStatement		52:28:2287:2647	4990191	0					
ANR	4990194	IdentifierDeclStatement	RListIter * iter ;	53:1:2290:2305	4990191	0	True				
ANR	4990195	IdentifierDecl	* iter		4990191	0					
ANR	4990196	IdentifierDeclType	RListIter *		4990191	0					
ANR	4990197	Identifier	iter		4990191	1					
ANR	4990198	IdentifierDeclStatement	REggPlugin * p ;	54:1:2308:2321	4990191	1	True				
ANR	4990199	IdentifierDecl	* p		4990191	0					
ANR	4990200	IdentifierDeclType	REggPlugin *		4990191	0					
ANR	4990201	Identifier	p		4990191	1					
ANR	4990202	ExpressionStatement	"printf ( ""shellcodes:\\n"" )"	55:1:2324:2348	4990191	2	True				
ANR	4990203	CallExpression	"printf ( ""shellcodes:\\n"" )"		4990191	0					
ANR	4990204	Callee	printf		4990191	0					
ANR	4990205	Identifier	printf		4990191	0					
ANR	4990206	ArgumentList	"""shellcodes:\\n"""		4990191	1					
ANR	4990207	Argument	"""shellcodes:\\n"""		4990191	0					
ANR	4990208	PrimaryExpression	"""shellcodes:\\n"""		4990191	0					
ANR	4990209	Statement	r_list_foreach	56:1:2351:2364	4990191	3	True				
ANR	4990210	Statement	(	56:16:2366:2366	4990191	4	True				
ANR	4990211	Statement	egg	56:17:2367:2369	4990191	5	True				
ANR	4990212	Statement	->	56:20:2370:2371	4990191	6	True				
ANR	4990213	Statement	plugins	56:22:2372:2378	4990191	7	True				
ANR	4990214	Statement	","	56:29:2379:2379	4990191	8	True				
ANR	4990215	Statement	iter	56:31:2381:2384	4990191	9	True				
ANR	4990216	Statement	","	56:35:2385:2385	4990191	10	True				
ANR	4990217	Statement	p	56:37:2387:2387	4990191	11	True				
ANR	4990218	Statement	)	56:38:2388:2388	4990191	12	True				
ANR	4990219	CompoundStatement		5:40:102:102	4990191	13					
ANR	4990220	IfStatement	if ( p -> type == R_EGG_PLUGIN_SHELLCODE )		4990191	0					
ANR	4990221	Condition	p -> type == R_EGG_PLUGIN_SHELLCODE	57:6:2398:2430	4990191	0	True				
ANR	4990222	EqualityExpression	p -> type == R_EGG_PLUGIN_SHELLCODE		4990191	0		==			
ANR	4990223	PtrMemberAccess	p -> type		4990191	0					
ANR	4990224	Identifier	p		4990191	0					
ANR	4990225	Identifier	type		4990191	1					
ANR	4990226	Identifier	R_EGG_PLUGIN_SHELLCODE		4990191	1					
ANR	4990227	CompoundStatement		6:41:145:145	4990191	1					
ANR	4990228	ExpressionStatement	"printf ( ""%10s : %s\\n"" , p -> name , p -> desc )"	58:3:2438:2478	4990191	0	True				
ANR	4990229	CallExpression	"printf ( ""%10s : %s\\n"" , p -> name , p -> desc )"		4990191	0					
ANR	4990230	Callee	printf		4990191	0					
ANR	4990231	Identifier	printf		4990191	0					
ANR	4990232	ArgumentList	"""%10s : %s\\n"""		4990191	1					
ANR	4990233	Argument	"""%10s : %s\\n"""		4990191	0					
ANR	4990234	PrimaryExpression	"""%10s : %s\\n"""		4990191	0					
ANR	4990235	Argument	p -> name		4990191	1					
ANR	4990236	PtrMemberAccess	p -> name		4990191	0					
ANR	4990237	Identifier	p		4990191	0					
ANR	4990238	Identifier	name		4990191	1					
ANR	4990239	Argument	p -> desc		4990191	2					
ANR	4990240	PtrMemberAccess	p -> desc		4990191	0					
ANR	4990241	Identifier	p		4990191	0					
ANR	4990242	Identifier	desc		4990191	1					
ANR	4990243	ExpressionStatement	"printf ( ""encoders:\\n"" )"	61:1:2488:2510	4990191	14	True				
ANR	4990244	CallExpression	"printf ( ""encoders:\\n"" )"		4990191	0					
ANR	4990245	Callee	printf		4990191	0					
ANR	4990246	Identifier	printf		4990191	0					
ANR	4990247	ArgumentList	"""encoders:\\n"""		4990191	1					
ANR	4990248	Argument	"""encoders:\\n"""		4990191	0					
ANR	4990249	PrimaryExpression	"""encoders:\\n"""		4990191	0					
ANR	4990250	Statement	r_list_foreach	62:1:2513:2526	4990191	15	True				
ANR	4990251	Statement	(	62:16:2528:2528	4990191	16	True				
ANR	4990252	Statement	egg	62:17:2529:2531	4990191	17	True				
ANR	4990253	Statement	->	62:20:2532:2533	4990191	18	True				
ANR	4990254	Statement	plugins	62:22:2534:2540	4990191	19	True				
ANR	4990255	Statement	","	62:29:2541:2541	4990191	20	True				
ANR	4990256	Statement	iter	62:31:2543:2546	4990191	21	True				
ANR	4990257	Statement	","	62:35:2547:2547	4990191	22	True				
ANR	4990258	Statement	p	62:37:2549:2549	4990191	23	True				
ANR	4990259	Statement	)	62:38:2550:2550	4990191	24	True				
ANR	4990260	CompoundStatement		11:40:264:264	4990191	25					
ANR	4990261	IfStatement	if ( p -> type == R_EGG_PLUGIN_ENCODER )		4990191	0					
ANR	4990262	Condition	p -> type == R_EGG_PLUGIN_ENCODER	63:6:2560:2590	4990191	0	True				
ANR	4990263	EqualityExpression	p -> type == R_EGG_PLUGIN_ENCODER		4990191	0		==			
ANR	4990264	PtrMemberAccess	p -> type		4990191	0					
ANR	4990265	Identifier	p		4990191	0					
ANR	4990266	Identifier	type		4990191	1					
ANR	4990267	Identifier	R_EGG_PLUGIN_ENCODER		4990191	1					
ANR	4990268	CompoundStatement		12:39:305:305	4990191	1					
ANR	4990269	ExpressionStatement	"printf ( ""%10s : %s\\n"" , p -> name , p -> desc )"	64:3:2598:2638	4990191	0	True				
ANR	4990270	CallExpression	"printf ( ""%10s : %s\\n"" , p -> name , p -> desc )"		4990191	0					
ANR	4990271	Callee	printf		4990191	0					
ANR	4990272	Identifier	printf		4990191	0					
ANR	4990273	ArgumentList	"""%10s : %s\\n"""		4990191	1					
ANR	4990274	Argument	"""%10s : %s\\n"""		4990191	0					
ANR	4990275	PrimaryExpression	"""%10s : %s\\n"""		4990191	0					
ANR	4990276	Argument	p -> name		4990191	1					
ANR	4990277	PtrMemberAccess	p -> name		4990191	0					
ANR	4990278	Identifier	p		4990191	0					
ANR	4990279	Identifier	name		4990191	1					
ANR	4990280	Argument	p -> desc		4990191	2					
ANR	4990281	PtrMemberAccess	p -> desc		4990191	0					
ANR	4990282	Identifier	p		4990191	0					
ANR	4990283	Identifier	desc		4990191	1					
ANR	4990284	ReturnType	static void		4990191	1					
ANR	4990285	Identifier	list		4990191	2					
ANR	4990286	ParameterList	REgg * egg		4990191	3					
ANR	4990287	Parameter	REgg * egg	52:17:2276:2284	4990191	0	True				
ANR	4990288	ParameterType	REgg *		4990191	0					
ANR	4990289	Identifier	egg		4990191	1					
ANR	4990290	CFGEntryNode	ENTRY		4990191		True				
ANR	4990291	CFGExitNode	EXIT		4990191		True				
ANR	4990292	Symbol	p		4990191						
ANR	4990293	Symbol	R_EGG_PLUGIN_ENCODER		4990191						
ANR	4990294	Symbol	egg		4990191						
ANR	4990295	Symbol	iter		4990191						
ANR	4990296	Symbol	* p		4990191						
ANR	4990297	Symbol	p -> name		4990191						
ANR	4990298	Symbol	R_EGG_PLUGIN_SHELLCODE		4990191						
ANR	4990299	Symbol	p -> desc		4990191						
ANR	4990300	Symbol	p -> type		4990191						
ANR	4990301	Function	create	69:0:2650:3198							
ANR	4990302	FunctionDef	"create (const char * format , const char * arch , int bits , const ut8 * code , int codelen)"		4990301	0					
ANR	4990303	CompoundStatement		69:96:2746:3198	4990301	0					
ANR	4990304	IdentifierDeclStatement	RBin * bin = r_bin_new ( ) ;	70:1:2749:2773	4990301	0	True				
ANR	4990305	IdentifierDecl	* bin = r_bin_new ( )		4990301	0					
ANR	4990306	IdentifierDeclType	RBin *		4990301	0					
ANR	4990307	Identifier	bin		4990301	1					
ANR	4990308	AssignmentExpression	* bin = r_bin_new ( )		4990301	2		=			
ANR	4990309	Identifier	bin		4990301	0					
ANR	4990310	CallExpression	r_bin_new ( )		4990301	1					
ANR	4990311	Callee	r_bin_new		4990301	0					
ANR	4990312	Identifier	r_bin_new		4990301	0					
ANR	4990313	ArgumentList			4990301	1					
ANR	4990314	IdentifierDeclStatement	RBinArchOptions opts ;	71:1:2776:2796	4990301	1	True				
ANR	4990315	IdentifierDecl	opts		4990301	0					
ANR	4990316	IdentifierDeclType	RBinArchOptions		4990301	0					
ANR	4990317	Identifier	opts		4990301	1					
ANR	4990318	IdentifierDeclStatement	RBuffer * b ;	72:1:2799:2809	4990301	2	True				
ANR	4990319	IdentifierDecl	* b		4990301	0					
ANR	4990320	IdentifierDeclType	RBuffer *		4990301	0					
ANR	4990321	Identifier	b		4990301	1					
ANR	4990322	ExpressionStatement	"r_bin_arch_options_init ( & opts , arch , bits )"	73:1:2812:2855	4990301	3	True				
ANR	4990323	CallExpression	"r_bin_arch_options_init ( & opts , arch , bits )"		4990301	0					
ANR	4990324	Callee	r_bin_arch_options_init		4990301	0					
ANR	4990325	Identifier	r_bin_arch_options_init		4990301	0					
ANR	4990326	ArgumentList	& opts		4990301	1					
ANR	4990327	Argument	& opts		4990301	0					
ANR	4990328	UnaryOperationExpression	& opts		4990301	0					
ANR	4990329	UnaryOperator	&		4990301	0					
ANR	4990330	Identifier	opts		4990301	1					
ANR	4990331	Argument	arch		4990301	1					
ANR	4990332	Identifier	arch		4990301	0					
ANR	4990333	Argument	bits		4990301	2					
ANR	4990334	Identifier	bits		4990301	0					
ANR	4990335	ExpressionStatement	"b = r_bin_create ( bin , format , code , codelen , NULL , 0 , & opts )"	74:1:2858:2919	4990301	4	True				
ANR	4990336	AssignmentExpression	"b = r_bin_create ( bin , format , code , codelen , NULL , 0 , & opts )"		4990301	0		=			
ANR	4990337	Identifier	b		4990301	0					
ANR	4990338	CallExpression	"r_bin_create ( bin , format , code , codelen , NULL , 0 , & opts )"		4990301	1					
ANR	4990339	Callee	r_bin_create		4990301	0					
ANR	4990340	Identifier	r_bin_create		4990301	0					
ANR	4990341	ArgumentList	bin		4990301	1					
ANR	4990342	Argument	bin		4990301	0					
ANR	4990343	Identifier	bin		4990301	0					
ANR	4990344	Argument	format		4990301	1					
ANR	4990345	Identifier	format		4990301	0					
ANR	4990346	Argument	code		4990301	2					
ANR	4990347	Identifier	code		4990301	0					
ANR	4990348	Argument	codelen		4990301	3					
ANR	4990349	Identifier	codelen		4990301	0					
ANR	4990350	Argument	NULL		4990301	4					
ANR	4990351	Identifier	NULL		4990301	0					
ANR	4990352	Argument	0		4990301	5					
ANR	4990353	PrimaryExpression	0		4990301	0					
ANR	4990354	Argument	& opts		4990301	6					
ANR	4990355	UnaryOperationExpression	& opts		4990301	0					
ANR	4990356	UnaryOperator	&		4990301	0					
ANR	4990357	Identifier	opts		4990301	1					
ANR	4990358	IfStatement	if ( b )		4990301	5					
ANR	4990359	Condition	b	75:5:2926:2926	4990301	0	True				
ANR	4990360	Identifier	b		4990301	0					
ANR	4990361	CompoundStatement		9:2:199:237	4990301	1					
ANR	4990362	IdentifierDeclStatement	ut64 blen ;	76:2:2933:2942	4990301	0	True				
ANR	4990363	IdentifierDecl	blen		4990301	0					
ANR	4990364	IdentifierDeclType	ut64		4990301	0					
ANR	4990365	Identifier	blen		4990301	1					
ANR	4990366	IdentifierDeclStatement	"const ut8 * tmp = r_buf_data ( b , & blen ) ;"	77:2:2946:2984	4990301	1	True				
ANR	4990367	IdentifierDecl	"* tmp = r_buf_data ( b , & blen )"		4990301	0					
ANR	4990368	IdentifierDeclType	const ut8 *		4990301	0					
ANR	4990369	Identifier	tmp		4990301	1					
ANR	4990370	AssignmentExpression	"* tmp = r_buf_data ( b , & blen )"		4990301	2		=			
ANR	4990371	Identifier	tmp		4990301	0					
ANR	4990372	CallExpression	"r_buf_data ( b , & blen )"		4990301	1					
ANR	4990373	Callee	r_buf_data		4990301	0					
ANR	4990374	Identifier	r_buf_data		4990301	0					
ANR	4990375	ArgumentList	b		4990301	1					
ANR	4990376	Argument	b		4990301	0					
ANR	4990377	Identifier	b		4990301	0					
ANR	4990378	Argument	& blen		4990301	1					
ANR	4990379	UnaryOperationExpression	& blen		4990301	0					
ANR	4990380	UnaryOperator	&		4990301	0					
ANR	4990381	Identifier	blen		4990301	1					
ANR	4990382	IfStatement	"if ( write ( 1 , tmp , blen ) != blen )"		4990301	2					
ANR	4990383	Condition	"write ( 1 , tmp , blen ) != blen"	78:6:2992:3019	4990301	0	True				
ANR	4990384	EqualityExpression	"write ( 1 , tmp , blen ) != blen"		4990301	0		!=			
ANR	4990385	CallExpression	"write ( 1 , tmp , blen )"		4990301	0					
ANR	4990386	Callee	write		4990301	0					
ANR	4990387	Identifier	write		4990301	0					
ANR	4990388	ArgumentList	1		4990301	1					
ANR	4990389	Argument	1		4990301	0					
ANR	4990390	PrimaryExpression	1		4990301	0					
ANR	4990391	Argument	tmp		4990301	1					
ANR	4990392	Identifier	tmp		4990301	0					
ANR	4990393	Argument	blen		4990301	2					
ANR	4990394	Identifier	blen		4990301	0					
ANR	4990395	Identifier	blen		4990301	1					
ANR	4990396	CompoundStatement		10:36:275:275	4990301	1					
ANR	4990397	ExpressionStatement	"eprintf ( ""Failed to write buffer\\n"" )"	79:3:3027:3063	4990301	0	True				
ANR	4990398	CallExpression	"eprintf ( ""Failed to write buffer\\n"" )"		4990301	0					
ANR	4990399	Callee	eprintf		4990301	0					
ANR	4990400	Identifier	eprintf		4990301	0					
ANR	4990401	ArgumentList	"""Failed to write buffer\\n"""		4990301	1					
ANR	4990402	Argument	"""Failed to write buffer\\n"""		4990301	0					
ANR	4990403	PrimaryExpression	"""Failed to write buffer\\n"""		4990301	0					
ANR	4990404	ExpressionStatement	r_buf_free ( b )	81:2:3071:3085	4990301	3	True				
ANR	4990405	CallExpression	r_buf_free ( b )		4990301	0					
ANR	4990406	Callee	r_buf_free		4990301	0					
ANR	4990407	Identifier	r_buf_free		4990301	0					
ANR	4990408	ArgumentList	b		4990301	1					
ANR	4990409	Argument	b		4990301	0					
ANR	4990410	Identifier	b		4990301	0					
ANR	4990411	ElseStatement	else		4990301	0					
ANR	4990412	CompoundStatement		14:8:348:348	4990301	0					
ANR	4990413	ExpressionStatement	"eprintf ( ""Cannot create binary for this format '%s'.\\n"" , format )"	83:2:3099:3163	4990301	0	True				
ANR	4990414	CallExpression	"eprintf ( ""Cannot create binary for this format '%s'.\\n"" , format )"		4990301	0					
ANR	4990415	Callee	eprintf		4990301	0					
ANR	4990416	Identifier	eprintf		4990301	0					
ANR	4990417	ArgumentList	"""Cannot create binary for this format '%s'.\\n"""		4990301	1					
ANR	4990418	Argument	"""Cannot create binary for this format '%s'.\\n"""		4990301	0					
ANR	4990419	PrimaryExpression	"""Cannot create binary for this format '%s'.\\n"""		4990301	0					
ANR	4990420	Argument	format		4990301	1					
ANR	4990421	Identifier	format		4990301	0					
ANR	4990422	ExpressionStatement	r_bin_free ( bin )	85:1:3169:3185	4990301	6	True				
ANR	4990423	CallExpression	r_bin_free ( bin )		4990301	0					
ANR	4990424	Callee	r_bin_free		4990301	0					
ANR	4990425	Identifier	r_bin_free		4990301	0					
ANR	4990426	ArgumentList	bin		4990301	1					
ANR	4990427	Argument	bin		4990301	0					
ANR	4990428	Identifier	bin		4990301	0					
ANR	4990429	ReturnStatement	return 0 ;	86:1:3188:3196	4990301	7	True				
ANR	4990430	PrimaryExpression	0		4990301	0					
ANR	4990431	ReturnType	static int		4990301	1					
ANR	4990432	Identifier	create		4990301	2					
ANR	4990433	ParameterList	"const char * format , const char * arch , int bits , const ut8 * code , int codelen"		4990301	3					
ANR	4990434	Parameter	const char * format	69:18:2668:2685	4990301	0	True				
ANR	4990435	ParameterType	const char *		4990301	0					
ANR	4990436	Identifier	format		4990301	1					
ANR	4990437	Parameter	const char * arch	69:38:2688:2703	4990301	1	True				
ANR	4990438	ParameterType	const char *		4990301	0					
ANR	4990439	Identifier	arch		4990301	1					
ANR	4990440	Parameter	int bits	69:56:2706:2713	4990301	2	True				
ANR	4990441	ParameterType	int		4990301	0					
ANR	4990442	Identifier	bits		4990301	1					
ANR	4990443	Parameter	const ut8 * code	69:66:2716:2730	4990301	3	True				
ANR	4990444	ParameterType	const ut8 *		4990301	0					
ANR	4990445	Identifier	code		4990301	1					
ANR	4990446	Parameter	int codelen	69:83:2733:2743	4990301	4	True				
ANR	4990447	ParameterType	int		4990301	0					
ANR	4990448	Identifier	codelen		4990301	1					
ANR	4990449	CFGEntryNode	ENTRY		4990301		True				
ANR	4990450	CFGExitNode	EXIT		4990301		True				
ANR	4990451	Symbol	b		4990301						
ANR	4990452	Symbol	code		4990301						
ANR	4990453	Symbol	NULL		4990301						
ANR	4990454	Symbol	& blen		4990301						
ANR	4990455	Symbol	bin		4990301						
ANR	4990456	Symbol	format		4990301						
ANR	4990457	Symbol	bits		4990301						
ANR	4990458	Symbol	r_bin_new		4990301						
ANR	4990459	Symbol	codelen		4990301						
ANR	4990460	Symbol	opts		4990301						
ANR	4990461	Symbol	& opts		4990301						
ANR	4990462	Symbol	tmp		4990301						
ANR	4990463	Symbol	arch		4990301						
ANR	4990464	Symbol	blen		4990301						
ANR	4990465	Symbol	write		4990301						
ANR	4990466	Symbol	r_bin_create		4990301						
ANR	4990467	Symbol	r_buf_data		4990301						
ANR	4990468	Function	openfile	89:0:3201:3595							
ANR	4990469	FunctionDef	"openfile (const char * f , int x)"		4990468	0					
ANR	4990470	CompoundStatement		89:42:3243:3595	4990468	0					
ANR	4990471	IdentifierDeclStatement	"int fd = open ( f , O_RDWR | O_CREAT , 0644 ) ;"	90:1:3246:3287	4990468	0	True				
ANR	4990472	IdentifierDecl	"fd = open ( f , O_RDWR | O_CREAT , 0644 )"		4990468	0					
ANR	4990473	IdentifierDeclType	int		4990468	0					
ANR	4990474	Identifier	fd		4990468	1					
ANR	4990475	AssignmentExpression	"fd = open ( f , O_RDWR | O_CREAT , 0644 )"		4990468	2		=			
ANR	4990476	Identifier	fd		4990468	0					
ANR	4990477	CallExpression	"open ( f , O_RDWR | O_CREAT , 0644 )"		4990468	1					
ANR	4990478	Callee	open		4990468	0					
ANR	4990479	Identifier	open		4990468	0					
ANR	4990480	ArgumentList	f		4990468	1					
ANR	4990481	Argument	f		4990468	0					
ANR	4990482	Identifier	f		4990468	0					
ANR	4990483	Argument	O_RDWR | O_CREAT		4990468	1					
ANR	4990484	InclusiveOrExpression	O_RDWR | O_CREAT		4990468	0		|			
ANR	4990485	Identifier	O_RDWR		4990468	0					
ANR	4990486	Identifier	O_CREAT		4990468	1					
ANR	4990487	Argument	0644		4990468	2					
ANR	4990488	PrimaryExpression	0644		4990468	0					
ANR	4990489	IfStatement	if ( fd == - 1 )		4990468	1					
ANR	4990490	Condition	fd == - 1	91:5:3294:3301	4990468	0	True				
ANR	4990491	EqualityExpression	fd == - 1		4990468	0		==			
ANR	4990492	Identifier	fd		4990468	0					
ANR	4990493	UnaryOperationExpression	- 1		4990468	1					
ANR	4990494	UnaryOperator	-		4990468	0					
ANR	4990495	PrimaryExpression	1		4990468	1					
ANR	4990496	CompoundStatement		3:15:60:60	4990468	1					
ANR	4990497	ExpressionStatement	"fd = open ( f , O_RDWR )"	92:2:3308:3329	4990468	0	True				
ANR	4990498	AssignmentExpression	"fd = open ( f , O_RDWR )"		4990468	0		=			
ANR	4990499	Identifier	fd		4990468	0					
ANR	4990500	CallExpression	"open ( f , O_RDWR )"		4990468	1					
ANR	4990501	Callee	open		4990468	0					
ANR	4990502	Identifier	open		4990468	0					
ANR	4990503	ArgumentList	f		4990468	1					
ANR	4990504	Argument	f		4990468	0					
ANR	4990505	Identifier	f		4990468	0					
ANR	4990506	Argument	O_RDWR		4990468	1					
ANR	4990507	Identifier	O_RDWR		4990468	0					
ANR	4990508	IfStatement	if ( fd == - 1 )		4990468	1					
ANR	4990509	Condition	fd == - 1	93:6:3337:3344	4990468	0	True				
ANR	4990510	EqualityExpression	fd == - 1		4990468	0		==			
ANR	4990511	Identifier	fd		4990468	0					
ANR	4990512	UnaryOperationExpression	- 1		4990468	1					
ANR	4990513	UnaryOperator	-		4990468	0					
ANR	4990514	PrimaryExpression	1		4990468	1					
ANR	4990515	CompoundStatement		5:16:103:103	4990468	1					
ANR	4990516	ReturnStatement	return - 1 ;	94:3:3352:3361	4990468	0	True				
ANR	4990517	UnaryOperationExpression	- 1		4990468	0					
ANR	4990518	UnaryOperator	-		4990468	0					
ANR	4990519	PrimaryExpression	1		4990468	1					
ANR	4990520	IfStatement	if ( x )		4990468	2					
ANR	4990521	Condition	x	98:5:3388:3388	4990468	0	True				
ANR	4990522	Identifier	x		4990468	0					
ANR	4990523	CompoundStatement		10:8:147:147	4990468	1					
ANR	4990524	ExpressionStatement	"fchmod ( fd , 0755 )"	99:2:3395:3412	4990468	0	True				
ANR	4990525	CallExpression	"fchmod ( fd , 0755 )"		4990468	0					
ANR	4990526	Callee	fchmod		4990468	0					
ANR	4990527	Identifier	fchmod		4990468	0					
ANR	4990528	ArgumentList	fd		4990468	1					
ANR	4990529	Argument	fd		4990468	0					
ANR	4990530	Identifier	fd		4990468	0					
ANR	4990531	Argument	0755		4990468	1					
ANR	4990532	PrimaryExpression	0755		4990468	0					
ANR	4990533	IdentifierDeclStatement	"int r = _chsize ( fd , 0 ) ;"	103:1:3438:3461	4990468	3	True				
ANR	4990534	IdentifierDecl	"r = _chsize ( fd , 0 )"		4990468	0					
ANR	4990535	IdentifierDeclType	int		4990468	0					
ANR	4990536	Identifier	r		4990468	1					
ANR	4990537	AssignmentExpression	"r = _chsize ( fd , 0 )"		4990468	2		=			
ANR	4990538	Identifier	r		4990468	0					
ANR	4990539	CallExpression	"_chsize ( fd , 0 )"		4990468	1					
ANR	4990540	Callee	_chsize		4990468	0					
ANR	4990541	Identifier	_chsize		4990468	0					
ANR	4990542	ArgumentList	fd		4990468	1					
ANR	4990543	Argument	fd		4990468	0					
ANR	4990544	Identifier	fd		4990468	0					
ANR	4990545	Argument	0		4990468	1					
ANR	4990546	PrimaryExpression	0		4990468	0					
ANR	4990547	IfStatement	if ( r != 0 )		4990468	4					
ANR	4990548	Condition	r != 0	107:5:3509:3514	4990468	0	True				
ANR	4990549	EqualityExpression	r != 0		4990468	0		!=			
ANR	4990550	Identifier	r		4990468	0					
ANR	4990551	PrimaryExpression	0		4990468	1					
ANR	4990552	CompoundStatement		19:13:273:273	4990468	1					
ANR	4990553	ExpressionStatement	"eprintf ( ""Could not resize\\n"" )"	108:2:3521:3551	4990468	0	True				
ANR	4990554	CallExpression	"eprintf ( ""Could not resize\\n"" )"		4990468	0					
ANR	4990555	Callee	eprintf		4990468	0					
ANR	4990556	Identifier	eprintf		4990468	0					
ANR	4990557	ArgumentList	"""Could not resize\\n"""		4990468	1					
ANR	4990558	Argument	"""Could not resize\\n"""		4990468	0					
ANR	4990559	PrimaryExpression	"""Could not resize\\n"""		4990468	0					
ANR	4990560	ExpressionStatement	close ( 1 )	110:1:3557:3566	4990468	5	True				
ANR	4990561	CallExpression	close ( 1 )		4990468	0					
ANR	4990562	Callee	close		4990468	0					
ANR	4990563	Identifier	close		4990468	0					
ANR	4990564	ArgumentList	1		4990468	1					
ANR	4990565	Argument	1		4990468	0					
ANR	4990566	PrimaryExpression	1		4990468	0					
ANR	4990567	ExpressionStatement	"dup2 ( fd , 1 )"	111:1:3569:3581	4990468	6	True				
ANR	4990568	CallExpression	"dup2 ( fd , 1 )"		4990468	0					
ANR	4990569	Callee	dup2		4990468	0					
ANR	4990570	Identifier	dup2		4990468	0					
ANR	4990571	ArgumentList	fd		4990468	1					
ANR	4990572	Argument	fd		4990468	0					
ANR	4990573	Identifier	fd		4990468	0					
ANR	4990574	Argument	1		4990468	1					
ANR	4990575	PrimaryExpression	1		4990468	0					
ANR	4990576	ReturnStatement	return fd ;	112:1:3584:3593	4990468	7	True				
ANR	4990577	Identifier	fd		4990468	0					
ANR	4990578	ReturnType	static int		4990468	1					
ANR	4990579	Identifier	openfile		4990468	2					
ANR	4990580	ParameterList	"const char * f , int x"		4990468	3					
ANR	4990581	Parameter	const char * f	89:20:3221:3233	4990468	0	True				
ANR	4990582	ParameterType	const char *		4990468	0					
ANR	4990583	Identifier	f		4990468	1					
ANR	4990584	Parameter	int x	89:35:3236:3240	4990468	1	True				
ANR	4990585	ParameterType	int		4990468	0					
ANR	4990586	Identifier	x		4990468	1					
ANR	4990587	CFGEntryNode	ENTRY		4990468		True				
ANR	4990588	CFGExitNode	EXIT		4990468		True				
ANR	4990589	Symbol	O_RDWR		4990468						
ANR	4990590	Symbol	r		4990468						
ANR	4990591	Symbol	f		4990468						
ANR	4990592	Symbol	O_CREAT		4990468						
ANR	4990593	Symbol	x		4990468						
ANR	4990594	Symbol	_chsize		4990468						
ANR	4990595	Symbol	open		4990468						
ANR	4990596	Symbol	fd		4990468						
ANR	4990597	Function	r_main_ragg2	116:0:3624:13299							
ANR	4990598	FunctionDef	"r_main_ragg2 (int argc , char * * argv)"		4990597	0					
ANR	4990599	CompoundStatement		116:46:3670:13299	4990597	0					
ANR	4990600	IdentifierDeclStatement	const char * file = NULL ;	117:1:3673:3696	4990597	0	True				
ANR	4990601	IdentifierDecl	* file = NULL		4990597	0					
ANR	4990602	IdentifierDeclType	const char *		4990597	0					
ANR	4990603	Identifier	file		4990597	1					
ANR	4990604	AssignmentExpression	* file = NULL		4990597	2		=			
ANR	4990605	Identifier	NULL		4990597	0					
ANR	4990606	Identifier	NULL		4990597	1					
ANR	4990607	IdentifierDeclStatement	const char * padding = NULL ;	118:1:3699:3725	4990597	1	True				
ANR	4990608	IdentifierDecl	* padding = NULL		4990597	0					
ANR	4990609	IdentifierDeclType	const char *		4990597	0					
ANR	4990610	Identifier	padding		4990597	1					
ANR	4990611	AssignmentExpression	* padding = NULL		4990597	2		=			
ANR	4990612	Identifier	NULL		4990597	0					
ANR	4990613	Identifier	NULL		4990597	1					
ANR	4990614	IdentifierDeclStatement	const char * pattern = NULL ;	119:1:3728:3754	4990597	2	True				
ANR	4990615	IdentifierDecl	* pattern = NULL		4990597	0					
ANR	4990616	IdentifierDeclType	const char *		4990597	0					
ANR	4990617	Identifier	pattern		4990597	1					
ANR	4990618	AssignmentExpression	* pattern = NULL		4990597	2		=			
ANR	4990619	Identifier	NULL		4990597	0					
ANR	4990620	Identifier	NULL		4990597	1					
ANR	4990621	IdentifierDeclStatement	const char * str = NULL ;	120:1:3757:3779	4990597	3	True				
ANR	4990622	IdentifierDecl	* str = NULL		4990597	0					
ANR	4990623	IdentifierDeclType	const char *		4990597	0					
ANR	4990624	Identifier	str		4990597	1					
ANR	4990625	AssignmentExpression	* str = NULL		4990597	2		=			
ANR	4990626	Identifier	NULL		4990597	0					
ANR	4990627	Identifier	NULL		4990597	1					
ANR	4990628	IdentifierDeclStatement	char * bytes = NULL ;	121:1:3782:3800	4990597	4	True				
ANR	4990629	IdentifierDecl	* bytes = NULL		4990597	0					
ANR	4990630	IdentifierDeclType	char *		4990597	0					
ANR	4990631	Identifier	bytes		4990597	1					
ANR	4990632	AssignmentExpression	* bytes = NULL		4990597	2		=			
ANR	4990633	Identifier	NULL		4990597	0					
ANR	4990634	Identifier	NULL		4990597	1					
ANR	4990635	IdentifierDeclStatement	const char * contents = NULL ;	122:1:3803:3830	4990597	5	True				
ANR	4990636	IdentifierDecl	* contents = NULL		4990597	0					
ANR	4990637	IdentifierDeclType	const char *		4990597	0					
ANR	4990638	Identifier	contents		4990597	1					
ANR	4990639	AssignmentExpression	* contents = NULL		4990597	2		=			
ANR	4990640	Identifier	NULL		4990597	0					
ANR	4990641	Identifier	NULL		4990597	1					
ANR	4990642	IdentifierDeclStatement	const char * arch = R_SYS_ARCH ;	123:1:3833:3862	4990597	6	True				
ANR	4990643	IdentifierDecl	* arch = R_SYS_ARCH		4990597	0					
ANR	4990644	IdentifierDeclType	const char *		4990597	0					
ANR	4990645	Identifier	arch		4990597	1					
ANR	4990646	AssignmentExpression	* arch = R_SYS_ARCH		4990597	2		=			
ANR	4990647	Identifier	R_SYS_ARCH		4990597	0					
ANR	4990648	Identifier	R_SYS_ARCH		4990597	1					
ANR	4990649	IdentifierDeclStatement	const char * os = R_EGG_OS_NAME ;	124:1:3865:3895	4990597	7	True				
ANR	4990650	IdentifierDecl	* os = R_EGG_OS_NAME		4990597	0					
ANR	4990651	IdentifierDeclType	const char *		4990597	0					
ANR	4990652	Identifier	os		4990597	1					
ANR	4990653	AssignmentExpression	* os = R_EGG_OS_NAME		4990597	2		=			
ANR	4990654	Identifier	R_EGG_OS_NAME		4990597	0					
ANR	4990655	Identifier	R_EGG_OS_NAME		4990597	1					
ANR	4990656	IdentifierDeclStatement	"char * format = ""raw"" ;"	125:1:3898:3918	4990597	8	True				
ANR	4990657	IdentifierDecl	"* format = ""raw"""		4990597	0					
ANR	4990658	IdentifierDeclType	char *		4990597	0					
ANR	4990659	Identifier	format		4990597	1					
ANR	4990660	AssignmentExpression	"* format = ""raw"""		4990597	2		=			
ANR	4990661	Identifier	format		4990597	0					
ANR	4990662	PrimaryExpression	"""raw"""		4990597	1					
ANR	4990663	IdentifierDeclStatement	bool show_execute = false ;	126:1:3921:3946	4990597	9	True				
ANR	4990664	IdentifierDecl	show_execute = false		4990597	0					
ANR	4990665	IdentifierDeclType	bool		4990597	0					
ANR	4990666	Identifier	show_execute		4990597	1					
ANR	4990667	AssignmentExpression	show_execute = false		4990597	2		=			
ANR	4990668	Identifier	false		4990597	0					
ANR	4990669	Identifier	false		4990597	1					
ANR	4990670	IdentifierDeclStatement	bool show_execute_rop = false ;	127:1:3949:3978	4990597	10	True				
ANR	4990671	IdentifierDecl	show_execute_rop = false		4990597	0					
ANR	4990672	IdentifierDeclType	bool		4990597	0					
ANR	4990673	Identifier	show_execute_rop		4990597	1					
ANR	4990674	AssignmentExpression	show_execute_rop = false		4990597	2		=			
ANR	4990675	Identifier	false		4990597	0					
ANR	4990676	Identifier	false		4990597	1					
ANR	4990677	IdentifierDeclStatement	int show_hex = 1 ;	128:1:3981:3997	4990597	11	True				
ANR	4990678	IdentifierDecl	show_hex = 1		4990597	0					
ANR	4990679	IdentifierDeclType	int		4990597	0					
ANR	4990680	Identifier	show_hex		4990597	1					
ANR	4990681	AssignmentExpression	show_hex = 1		4990597	2		=			
ANR	4990682	Identifier	show_hex		4990597	0					
ANR	4990683	PrimaryExpression	1		4990597	1					
ANR	4990684	IdentifierDeclStatement	int show_asm = 0 ;	129:1:4000:4016	4990597	12	True				
ANR	4990685	IdentifierDecl	show_asm = 0		4990597	0					
ANR	4990686	IdentifierDeclType	int		4990597	0					
ANR	4990687	Identifier	show_asm		4990597	1					
ANR	4990688	AssignmentExpression	show_asm = 0		4990597	2		=			
ANR	4990689	Identifier	show_asm		4990597	0					
ANR	4990690	PrimaryExpression	0		4990597	1					
ANR	4990691	IdentifierDeclStatement	int show_raw = 0 ;	130:1:4019:4035	4990597	13	True				
ANR	4990692	IdentifierDecl	show_raw = 0		4990597	0					
ANR	4990693	IdentifierDeclType	int		4990597	0					
ANR	4990694	Identifier	show_raw		4990597	1					
ANR	4990695	AssignmentExpression	show_raw = 0		4990597	2		=			
ANR	4990696	Identifier	show_raw		4990597	0					
ANR	4990697	PrimaryExpression	0		4990597	1					
ANR	4990698	IdentifierDeclStatement	int append = 0 ;	131:1:4038:4052	4990597	14	True				
ANR	4990699	IdentifierDecl	append = 0		4990597	0					
ANR	4990700	IdentifierDeclType	int		4990597	0					
ANR	4990701	Identifier	append		4990597	1					
ANR	4990702	AssignmentExpression	append = 0		4990597	2		=			
ANR	4990703	Identifier	append		4990597	0					
ANR	4990704	PrimaryExpression	0		4990597	1					
ANR	4990705	IdentifierDeclStatement	int show_str = 0 ;	132:1:4055:4071	4990597	15	True				
ANR	4990706	IdentifierDecl	show_str = 0		4990597	0					
ANR	4990707	IdentifierDeclType	int		4990597	0					
ANR	4990708	Identifier	show_str		4990597	1					
ANR	4990709	AssignmentExpression	show_str = 0		4990597	2		=			
ANR	4990710	Identifier	show_str		4990597	0					
ANR	4990711	PrimaryExpression	0		4990597	1					
ANR	4990712	IdentifierDeclStatement	ut64 get_offset = 0 ;	133:1:4074:4094	4990597	16	True				
ANR	4990713	IdentifierDecl	get_offset = 0		4990597	0					
ANR	4990714	IdentifierDeclType	ut64		4990597	0					
ANR	4990715	Identifier	get_offset		4990597	1					
ANR	4990716	AssignmentExpression	get_offset = 0		4990597	2		=			
ANR	4990717	Identifier	get_offset		4990597	0					
ANR	4990718	PrimaryExpression	0		4990597	1					
ANR	4990719	IdentifierDeclStatement	char * shellcode = NULL ;	134:1:4097:4119	4990597	17	True				
ANR	4990720	IdentifierDecl	* shellcode = NULL		4990597	0					
ANR	4990721	IdentifierDeclType	char *		4990597	0					
ANR	4990722	Identifier	shellcode		4990597	1					
ANR	4990723	AssignmentExpression	* shellcode = NULL		4990597	2		=			
ANR	4990724	Identifier	NULL		4990597	0					
ANR	4990725	Identifier	NULL		4990597	1					
ANR	4990726	IdentifierDeclStatement	char * encoder = NULL ;	135:1:4122:4142	4990597	18	True				
ANR	4990727	IdentifierDecl	* encoder = NULL		4990597	0					
ANR	4990728	IdentifierDeclType	char *		4990597	0					
ANR	4990729	Identifier	encoder		4990597	1					
ANR	4990730	AssignmentExpression	* encoder = NULL		4990597	2		=			
ANR	4990731	Identifier	NULL		4990597	0					
ANR	4990732	Identifier	NULL		4990597	1					
ANR	4990733	IdentifierDeclStatement	char * sequence = NULL ;	136:1:4145:4166	4990597	19	True				
ANR	4990734	IdentifierDecl	* sequence = NULL		4990597	0					
ANR	4990735	IdentifierDeclType	char *		4990597	0					
ANR	4990736	Identifier	sequence		4990597	1					
ANR	4990737	AssignmentExpression	* sequence = NULL		4990597	2		=			
ANR	4990738	Identifier	NULL		4990597	0					
ANR	4990739	Identifier	NULL		4990597	1					
ANR	4990740	IdentifierDeclStatement	int bits = ( R_SYS_BITS & R_SYS_BITS_64 ) ? 64 : 32 ;	137:1:4169:4216	4990597	20	True				
ANR	4990741	IdentifierDecl	bits = ( R_SYS_BITS & R_SYS_BITS_64 ) ? 64 : 32		4990597	0					
ANR	4990742	IdentifierDeclType	int		4990597	0					
ANR	4990743	Identifier	bits		4990597	1					
ANR	4990744	AssignmentExpression	bits = ( R_SYS_BITS & R_SYS_BITS_64 ) ? 64 : 32		4990597	2		=			
ANR	4990745	Identifier	bits		4990597	0					
ANR	4990746	ConditionalExpression	( R_SYS_BITS & R_SYS_BITS_64 ) ? 64 : 32		4990597	1					
ANR	4990747	Condition	R_SYS_BITS & R_SYS_BITS_64		4990597	0					
ANR	4990748	BitAndExpression	R_SYS_BITS & R_SYS_BITS_64		4990597	0		&			
ANR	4990749	Identifier	R_SYS_BITS		4990597	0					
ANR	4990750	Identifier	R_SYS_BITS_64		4990597	1					
ANR	4990751	PrimaryExpression	64		4990597	1					
ANR	4990752	PrimaryExpression	32		4990597	2					
ANR	4990753	IdentifierDeclStatement	int fmt = 0 ;	138:1:4219:4230	4990597	21	True				
ANR	4990754	IdentifierDecl	fmt = 0		4990597	0					
ANR	4990755	IdentifierDeclType	int		4990597	0					
ANR	4990756	Identifier	fmt		4990597	1					
ANR	4990757	AssignmentExpression	fmt = 0		4990597	2		=			
ANR	4990758	Identifier	fmt		4990597	0					
ANR	4990759	PrimaryExpression	0		4990597	1					
ANR	4990760	IdentifierDeclStatement	const char * ofile = NULL ;	139:1:4233:4257	4990597	22	True				
ANR	4990761	IdentifierDecl	* ofile = NULL		4990597	0					
ANR	4990762	IdentifierDeclType	const char *		4990597	0					
ANR	4990763	Identifier	ofile		4990597	1					
ANR	4990764	AssignmentExpression	* ofile = NULL		4990597	2		=			
ANR	4990765	Identifier	NULL		4990597	0					
ANR	4990766	Identifier	NULL		4990597	1					
ANR	4990767	IdentifierDeclStatement	int ofileauto = 0 ;	140:1:4260:4277	4990597	23	True				
ANR	4990768	IdentifierDecl	ofileauto = 0		4990597	0					
ANR	4990769	IdentifierDeclType	int		4990597	0					
ANR	4990770	Identifier	ofileauto		4990597	1					
ANR	4990771	AssignmentExpression	ofileauto = 0		4990597	2		=			
ANR	4990772	Identifier	ofileauto		4990597	0					
ANR	4990773	PrimaryExpression	0		4990597	1					
ANR	4990774	IdentifierDeclStatement	RBuffer * b ;	141:1:4280:4290	4990597	24	True				
ANR	4990775	IdentifierDecl	* b		4990597	0					
ANR	4990776	IdentifierDeclType	RBuffer *		4990597	0					
ANR	4990777	Identifier	b		4990597	1					
ANR	4990778	IdentifierDeclStatement	"int c , i ;"	142:1:4293:4301	4990597	25	True				
ANR	4990779	IdentifierDecl	c		4990597	0					
ANR	4990780	IdentifierDeclType	int		4990597	0					
ANR	4990781	Identifier	c		4990597	1					
ANR	4990782	IdentifierDecl	i		4990597	1					
ANR	4990783	IdentifierDeclType	int		4990597	0					
ANR	4990784	Identifier	i		4990597	1					
ANR	4990785	IdentifierDeclStatement	REgg * egg = r_egg_new ( ) ;	143:1:4304:4328	4990597	26	True				
ANR	4990786	IdentifierDecl	* egg = r_egg_new ( )		4990597	0					
ANR	4990787	IdentifierDeclType	REgg *		4990597	0					
ANR	4990788	Identifier	egg		4990597	1					
ANR	4990789	AssignmentExpression	* egg = r_egg_new ( )		4990597	2		=			
ANR	4990790	Identifier	egg		4990597	0					
ANR	4990791	CallExpression	r_egg_new ( )		4990597	1					
ANR	4990792	Callee	r_egg_new		4990597	0					
ANR	4990793	Identifier	r_egg_new		4990597	0					
ANR	4990794	ArgumentList			4990597	1					
ANR	4990795	WhileStatement	"while ( ( c = r_getopt ( argc , argv , ""n:N:he:a:b:f:o:sxXrk:FOI:Li:c:p:P:B:C:vd:D:w:zq:S:"" ) ) != - 1 )"		4990597	27					
ANR	4990796	Condition	"( c = r_getopt ( argc , argv , ""n:N:he:a:b:f:o:sxXrk:FOI:Li:c:p:P:B:C:vd:D:w:zq:S:"" ) ) != - 1"	145:8:4339:4425	4990597	0	True				
ANR	4990797	EqualityExpression	"( c = r_getopt ( argc , argv , ""n:N:he:a:b:f:o:sxXrk:FOI:Li:c:p:P:B:C:vd:D:w:zq:S:"" ) ) != - 1"		4990597	0		!=			
ANR	4990798	AssignmentExpression	"c = r_getopt ( argc , argv , ""n:N:he:a:b:f:o:sxXrk:FOI:Li:c:p:P:B:C:vd:D:w:zq:S:"" )"		4990597	0		=			
ANR	4990799	Identifier	c		4990597	0					
ANR	4990800	CallExpression	"r_getopt ( argc , argv , ""n:N:he:a:b:f:o:sxXrk:FOI:Li:c:p:P:B:C:vd:D:w:zq:S:"" )"		4990597	1					
ANR	4990801	Callee	r_getopt		4990597	0					
ANR	4990802	Identifier	r_getopt		4990597	0					
ANR	4990803	ArgumentList	argc		4990597	1					
ANR	4990804	Argument	argc		4990597	0					
ANR	4990805	Identifier	argc		4990597	0					
ANR	4990806	Argument	argv		4990597	1					
ANR	4990807	Identifier	argv		4990597	0					
ANR	4990808	Argument	"""n:N:he:a:b:f:o:sxXrk:FOI:Li:c:p:P:B:C:vd:D:w:zq:S:"""		4990597	2					
ANR	4990809	PrimaryExpression	"""n:N:he:a:b:f:o:sxXrk:FOI:Li:c:p:P:B:C:vd:D:w:zq:S:"""		4990597	0					
ANR	4990810	UnaryOperationExpression	- 1		4990597	1					
ANR	4990811	UnaryOperator	-		4990597	0					
ANR	4990812	PrimaryExpression	1		4990597	1					
ANR	4990813	CompoundStatement		30:97:757:757	4990597	1					
ANR	4990814	SwitchStatement	switch ( c )		4990597	0					
ANR	4990815	Condition	c	146:10:4440:4440	4990597	0	True				
ANR	4990816	Identifier	c		4990597	0					
ANR	4990817	CompoundStatement		31:13:772:772	4990597	1					
ANR	4990818	Label	case 'a' :	147:2:4447:4455	4990597	0	True				
ANR	4990819	ExpressionStatement	arch = r_optarg	148:3:4460:4475	4990597	1	True				
ANR	4990820	AssignmentExpression	arch = r_optarg		4990597	0		=			
ANR	4990821	Identifier	arch		4990597	0					
ANR	4990822	Identifier	r_optarg		4990597	1					
ANR	4990823	IfStatement	"if ( ! strcmp ( arch , ""trace"" ) )"		4990597	2					
ANR	4990824	Condition	"! strcmp ( arch , ""trace"" )"	149:7:4484:4506	4990597	0	True				
ANR	4990825	UnaryOperationExpression	"! strcmp ( arch , ""trace"" )"		4990597	0					
ANR	4990826	UnaryOperator	!		4990597	0					
ANR	4990827	CallExpression	"strcmp ( arch , ""trace"" )"		4990597	1					
ANR	4990828	Callee	strcmp		4990597	0					
ANR	4990829	Identifier	strcmp		4990597	0					
ANR	4990830	ArgumentList	arch		4990597	1					
ANR	4990831	Argument	arch		4990597	0					
ANR	4990832	Identifier	arch		4990597	0					
ANR	4990833	Argument	"""trace"""		4990597	1					
ANR	4990834	PrimaryExpression	"""trace"""		4990597	0					
ANR	4990835	CompoundStatement		34:32:838:838	4990597	1					
ANR	4990836	ExpressionStatement	show_asm = 1	150:4:4515:4527	4990597	0	True				
ANR	4990837	AssignmentExpression	show_asm = 1		4990597	0		=			
ANR	4990838	Identifier	show_asm		4990597	0					
ANR	4990839	PrimaryExpression	1		4990597	1					
ANR	4990840	ExpressionStatement	show_hex = 0	151:4:4533:4545	4990597	1	True				
ANR	4990841	AssignmentExpression	show_hex = 0		4990597	0		=			
ANR	4990842	Identifier	show_hex		4990597	0					
ANR	4990843	PrimaryExpression	0		4990597	1					
ANR	4990844	BreakStatement	break ;	153:3:4555:4560	4990597	3	True				
ANR	4990845	Label	case 'e' :	154:2:4564:4572	4990597	4	True				
ANR	4990846	ExpressionStatement	encoder = r_optarg	155:3:4577:4595	4990597	5	True				
ANR	4990847	AssignmentExpression	encoder = r_optarg		4990597	0		=			
ANR	4990848	Identifier	encoder		4990597	0					
ANR	4990849	Identifier	r_optarg		4990597	1					
ANR	4990850	BreakStatement	break ;	156:3:4600:4605	4990597	6	True				
ANR	4990851	Label	case 'b' :	157:2:4609:4617	4990597	7	True				
ANR	4990852	ExpressionStatement	bits = atoi ( r_optarg )	158:3:4622:4644	4990597	8	True				
ANR	4990853	AssignmentExpression	bits = atoi ( r_optarg )		4990597	0		=			
ANR	4990854	Identifier	bits		4990597	0					
ANR	4990855	CallExpression	atoi ( r_optarg )		4990597	1					
ANR	4990856	Callee	atoi		4990597	0					
ANR	4990857	Identifier	atoi		4990597	0					
ANR	4990858	ArgumentList	r_optarg		4990597	1					
ANR	4990859	Argument	r_optarg		4990597	0					
ANR	4990860	Identifier	r_optarg		4990597	0					
ANR	4990861	BreakStatement	break ;	159:3:4649:4654	4990597	9	True				
ANR	4990862	Label	case 'B' :	160:2:4658:4666	4990597	10	True				
ANR	4990863	ExpressionStatement	"bytes = r_str_append ( bytes , r_optarg )"	161:3:4671:4709	4990597	11	True				
ANR	4990864	AssignmentExpression	"bytes = r_str_append ( bytes , r_optarg )"		4990597	0		=			
ANR	4990865	Identifier	bytes		4990597	0					
ANR	4990866	CallExpression	"r_str_append ( bytes , r_optarg )"		4990597	1					
ANR	4990867	Callee	r_str_append		4990597	0					
ANR	4990868	Identifier	r_str_append		4990597	0					
ANR	4990869	ArgumentList	bytes		4990597	1					
ANR	4990870	Argument	bytes		4990597	0					
ANR	4990871	Identifier	bytes		4990597	0					
ANR	4990872	Argument	r_optarg		4990597	1					
ANR	4990873	Identifier	r_optarg		4990597	0					
ANR	4990874	BreakStatement	break ;	162:3:4714:4719	4990597	12	True				
ANR	4990875	Label	case 'C' :	163:2:4723:4731	4990597	13	True				
ANR	4990876	ExpressionStatement	contents = r_optarg	164:3:4736:4755	4990597	14	True				
ANR	4990877	AssignmentExpression	contents = r_optarg		4990597	0		=			
ANR	4990878	Identifier	contents		4990597	0					
ANR	4990879	Identifier	r_optarg		4990597	1					
ANR	4990880	BreakStatement	break ;	165:3:4760:4765	4990597	15	True				
ANR	4990881	Label	case 'w' :	166:2:4769:4777	4990597	16	True				
ANR	4990882	CompoundStatement		54:3:1150:1177	4990597	17					
ANR	4990883	IdentifierDeclStatement	char * arg = strdup ( r_optarg ) ;	168:3:4787:4816	4990597	0	True				
ANR	4990884	IdentifierDecl	* arg = strdup ( r_optarg )		4990597	0					
ANR	4990885	IdentifierDeclType	char *		4990597	0					
ANR	4990886	Identifier	arg		4990597	1					
ANR	4990887	AssignmentExpression	* arg = strdup ( r_optarg )		4990597	2		=			
ANR	4990888	Identifier	arg		4990597	0					
ANR	4990889	CallExpression	strdup ( r_optarg )		4990597	1					
ANR	4990890	Callee	strdup		4990597	0					
ANR	4990891	Identifier	strdup		4990597	0					
ANR	4990892	ArgumentList	r_optarg		4990597	1					
ANR	4990893	Argument	r_optarg		4990597	0					
ANR	4990894	Identifier	r_optarg		4990597	0					
ANR	4990895	IdentifierDeclStatement	"char * p = strchr ( arg , ':' ) ;"	169:3:4821:4848	4990597	1	True				
ANR	4990896	IdentifierDecl	"* p = strchr ( arg , ':' )"		4990597	0					
ANR	4990897	IdentifierDeclType	char *		4990597	0					
ANR	4990898	Identifier	p		4990597	1					
ANR	4990899	AssignmentExpression	"* p = strchr ( arg , ':' )"		4990597	2		=			
ANR	4990900	Identifier	p		4990597	0					
ANR	4990901	CallExpression	"strchr ( arg , ':' )"		4990597	1					
ANR	4990902	Callee	strchr		4990597	0					
ANR	4990903	Identifier	strchr		4990597	0					
ANR	4990904	ArgumentList	arg		4990597	1					
ANR	4990905	Argument	arg		4990597	0					
ANR	4990906	Identifier	arg		4990597	0					
ANR	4990907	Argument	':'		4990597	1					
ANR	4990908	PrimaryExpression	':'		4990597	0					
ANR	4990909	IfStatement	if ( p )		4990597	2					
ANR	4990910	Condition	p	170:7:4857:4857	4990597	0	True				
ANR	4990911	Identifier	p		4990597	0					
ANR	4990912	CompoundStatement		57:4:1213:1219	4990597	1					
ANR	4990913	IdentifierDeclStatement	"int len , off ;"	171:4:4866:4878	4990597	0	True				
ANR	4990914	IdentifierDecl	len		4990597	0					
ANR	4990915	IdentifierDeclType	int		4990597	0					
ANR	4990916	Identifier	len		4990597	1					
ANR	4990917	IdentifierDecl	off		4990597	1					
ANR	4990918	IdentifierDeclType	int		4990597	0					
ANR	4990919	Identifier	off		4990597	1					
ANR	4990920	IdentifierDeclStatement	ut8 * b ;	172:4:4884:4890	4990597	1	True				
ANR	4990921	IdentifierDecl	* b		4990597	0					
ANR	4990922	IdentifierDeclType	ut8 *		4990597	0					
ANR	4990923	Identifier	b		4990597	1					
ANR	4990924	ExpressionStatement	* p ++ = 0	173:4:4896:4904	4990597	2	True				
ANR	4990925	AssignmentExpression	* p ++ = 0		4990597	0		=			
ANR	4990926	UnaryOperationExpression	* p ++		4990597	0					
ANR	4990927	UnaryOperator	*		4990597	0					
ANR	4990928	PostIncDecOperationExpression	p ++		4990597	1					
ANR	4990929	Identifier	p		4990597	0					
ANR	4990930	IncDec	++		4990597	1					
ANR	4990931	PrimaryExpression	0		4990597	1					
ANR	4990932	ExpressionStatement	"off = r_num_math ( NULL , arg )"	174:4:4910:4938	4990597	3	True				
ANR	4990933	AssignmentExpression	"off = r_num_math ( NULL , arg )"		4990597	0		=			
ANR	4990934	Identifier	off		4990597	0					
ANR	4990935	CallExpression	"r_num_math ( NULL , arg )"		4990597	1					
ANR	4990936	Callee	r_num_math		4990597	0					
ANR	4990937	Identifier	r_num_math		4990597	0					
ANR	4990938	ArgumentList	NULL		4990597	1					
ANR	4990939	Argument	NULL		4990597	0					
ANR	4990940	Identifier	NULL		4990597	0					
ANR	4990941	Argument	arg		4990597	1					
ANR	4990942	Identifier	arg		4990597	0					
ANR	4990943	ExpressionStatement	b = malloc ( strlen ( r_optarg ) + 1 )	175:4:4944:4978	4990597	4	True				
ANR	4990944	AssignmentExpression	b = malloc ( strlen ( r_optarg ) + 1 )		4990597	0		=			
ANR	4990945	Identifier	b		4990597	0					
ANR	4990946	CallExpression	malloc ( strlen ( r_optarg ) + 1 )		4990597	1					
ANR	4990947	Callee	malloc		4990597	0					
ANR	4990948	Identifier	malloc		4990597	0					
ANR	4990949	ArgumentList	strlen ( r_optarg ) + 1		4990597	1					
ANR	4990950	Argument	strlen ( r_optarg ) + 1		4990597	0					
ANR	4990951	AdditiveExpression	strlen ( r_optarg ) + 1		4990597	0		+			
ANR	4990952	CallExpression	strlen ( r_optarg )		4990597	0					
ANR	4990953	Callee	strlen		4990597	0					
ANR	4990954	Identifier	strlen		4990597	0					
ANR	4990955	ArgumentList	r_optarg		4990597	1					
ANR	4990956	Argument	r_optarg		4990597	0					
ANR	4990957	Identifier	r_optarg		4990597	0					
ANR	4990958	PrimaryExpression	1		4990597	1					
ANR	4990959	ExpressionStatement	"len = r_hex_str2bin ( p , b )"	176:4:4984:5010	4990597	5	True				
ANR	4990960	AssignmentExpression	"len = r_hex_str2bin ( p , b )"		4990597	0		=			
ANR	4990961	Identifier	len		4990597	0					
ANR	4990962	CallExpression	"r_hex_str2bin ( p , b )"		4990597	1					
ANR	4990963	Callee	r_hex_str2bin		4990597	0					
ANR	4990964	Identifier	r_hex_str2bin		4990597	0					
ANR	4990965	ArgumentList	p		4990597	1					
ANR	4990966	Argument	p		4990597	0					
ANR	4990967	Identifier	p		4990597	0					
ANR	4990968	Argument	b		4990597	1					
ANR	4990969	Identifier	b		4990597	0					
ANR	4990970	IfStatement	if ( len > 0 )		4990597	6					
ANR	4990971	Condition	len > 0	177:8:5020:5026	4990597	0	True				
ANR	4990972	RelationalExpression	len > 0		4990597	0		>			
ANR	4990973	Identifier	len		4990597	0					
ANR	4990974	PrimaryExpression	0		4990597	1					
ANR	4990975	CompoundStatement		62:17:1358:1358	4990597	1					
ANR	4990976	ExpressionStatement	"r_egg_patch ( egg , off , ( const ut8 * ) b , len )"	178:5:5036:5078	4990597	0	True				
ANR	4990977	CallExpression	"r_egg_patch ( egg , off , ( const ut8 * ) b , len )"		4990597	0					
ANR	4990978	Callee	r_egg_patch		4990597	0					
ANR	4990979	Identifier	r_egg_patch		4990597	0					
ANR	4990980	ArgumentList	egg		4990597	1					
ANR	4990981	Argument	egg		4990597	0					
ANR	4990982	Identifier	egg		4990597	0					
ANR	4990983	Argument	off		4990597	1					
ANR	4990984	Identifier	off		4990597	0					
ANR	4990985	Argument	( const ut8 * ) b		4990597	2					
ANR	4990986	CastExpression	( const ut8 * ) b		4990597	0					
ANR	4990987	CastTarget	const ut8 *		4990597	0					
ANR	4990988	Identifier	b		4990597	1					
ANR	4990989	Argument	len		4990597	3					
ANR	4990990	Identifier	len		4990597	0					
ANR	4990991	ElseStatement	else		4990597	0					
ANR	4990992	CompoundStatement		64:11:1420:1420	4990597	0					
ANR	4990993	ExpressionStatement	"eprintf ( ""Invalid hexstr for -w\\n"" )"	180:5:5098:5133	4990597	0	True				
ANR	4990994	CallExpression	"eprintf ( ""Invalid hexstr for -w\\n"" )"		4990597	0					
ANR	4990995	Callee	eprintf		4990597	0					
ANR	4990996	Identifier	eprintf		4990597	0					
ANR	4990997	ArgumentList	"""Invalid hexstr for -w\\n"""		4990597	1					
ANR	4990998	Argument	"""Invalid hexstr for -w\\n"""		4990597	0					
ANR	4990999	PrimaryExpression	"""Invalid hexstr for -w\\n"""		4990597	0					
ANR	4991000	ExpressionStatement	free ( b )	182:4:5145:5153	4990597	7	True				
ANR	4991001	CallExpression	free ( b )		4990597	0					
ANR	4991002	Callee	free		4990597	0					
ANR	4991003	Identifier	free		4990597	0					
ANR	4991004	ArgumentList	b		4990597	1					
ANR	4991005	Argument	b		4990597	0					
ANR	4991006	Identifier	b		4990597	0					
ANR	4991007	ElseStatement	else		4990597	0					
ANR	4991008	CompoundStatement		68:10:1494:1494	4990597	0					
ANR	4991009	ExpressionStatement	"eprintf ( ""Missing colon in -w\\n"" )"	184:4:5171:5204	4990597	0	True				
ANR	4991010	CallExpression	"eprintf ( ""Missing colon in -w\\n"" )"		4990597	0					
ANR	4991011	Callee	eprintf		4990597	0					
ANR	4991012	Identifier	eprintf		4990597	0					
ANR	4991013	ArgumentList	"""Missing colon in -w\\n"""		4990597	1					
ANR	4991014	Argument	"""Missing colon in -w\\n"""		4990597	0					
ANR	4991015	PrimaryExpression	"""Missing colon in -w\\n"""		4990597	0					
ANR	4991016	ExpressionStatement	free ( arg )	186:3:5214:5224	4990597	3	True				
ANR	4991017	CallExpression	free ( arg )		4990597	0					
ANR	4991018	Callee	free		4990597	0					
ANR	4991019	Identifier	free		4990597	0					
ANR	4991020	ArgumentList	arg		4990597	1					
ANR	4991021	Argument	arg		4990597	0					
ANR	4991022	Identifier	arg		4990597	0					
ANR	4991023	BreakStatement	break ;	188:3:5234:5239	4990597	18	True				
ANR	4991024	Label	case 'n' :	189:2:5243:5251	4990597	19	True				
ANR	4991025	CompoundStatement		76:3:1590:1626	4990597	20					
ANR	4991026	IdentifierDeclStatement	"ut32 n = r_num_math ( NULL , r_optarg ) ;"	191:3:5261:5297	4990597	0	True				
ANR	4991027	IdentifierDecl	"n = r_num_math ( NULL , r_optarg )"		4990597	0					
ANR	4991028	IdentifierDeclType	ut32		4990597	0					
ANR	4991029	Identifier	n		4990597	1					
ANR	4991030	AssignmentExpression	"n = r_num_math ( NULL , r_optarg )"		4990597	2		=			
ANR	4991031	Identifier	n		4990597	0					
ANR	4991032	CallExpression	"r_num_math ( NULL , r_optarg )"		4990597	1					
ANR	4991033	Callee	r_num_math		4990597	0					
ANR	4991034	Identifier	r_num_math		4990597	0					
ANR	4991035	ArgumentList	NULL		4990597	1					
ANR	4991036	Argument	NULL		4990597	0					
ANR	4991037	Identifier	NULL		4990597	0					
ANR	4991038	Argument	r_optarg		4990597	1					
ANR	4991039	Identifier	r_optarg		4990597	0					
ANR	4991040	ExpressionStatement	append = 1	192:3:5302:5312	4990597	1	True				
ANR	4991041	AssignmentExpression	append = 1		4990597	0		=			
ANR	4991042	Identifier	append		4990597	0					
ANR	4991043	PrimaryExpression	1		4990597	1					
ANR	4991044	ExpressionStatement	"r_egg_patch ( egg , - 1 , ( const ut8 * ) & n , 4 )"	193:3:5317:5357	4990597	2	True				
ANR	4991045	CallExpression	"r_egg_patch ( egg , - 1 , ( const ut8 * ) & n , 4 )"		4990597	0					
ANR	4991046	Callee	r_egg_patch		4990597	0					
ANR	4991047	Identifier	r_egg_patch		4990597	0					
ANR	4991048	ArgumentList	egg		4990597	1					
ANR	4991049	Argument	egg		4990597	0					
ANR	4991050	Identifier	egg		4990597	0					
ANR	4991051	Argument	- 1		4990597	1					
ANR	4991052	UnaryOperationExpression	- 1		4990597	0					
ANR	4991053	UnaryOperator	-		4990597	0					
ANR	4991054	PrimaryExpression	1		4990597	1					
ANR	4991055	Argument	( const ut8 * ) & n		4990597	2					
ANR	4991056	CastExpression	( const ut8 * ) & n		4990597	0					
ANR	4991057	CastTarget	const ut8 *		4990597	0					
ANR	4991058	UnaryOperationExpression	& n		4990597	1					
ANR	4991059	UnaryOperator	&		4990597	0					
ANR	4991060	Identifier	n		4990597	1					
ANR	4991061	Argument	4		4990597	3					
ANR	4991062	PrimaryExpression	4		4990597	0					
ANR	4991063	BreakStatement	break ;	195:3:5367:5372	4990597	21	True				
ANR	4991064	Label	case 'N' :	196:2:5376:5384	4990597	22	True				
ANR	4991065	CompoundStatement		83:3:1723:1759	4990597	23					
ANR	4991066	IdentifierDeclStatement	"ut64 n = r_num_math ( NULL , r_optarg ) ;"	198:3:5394:5430	4990597	0	True				
ANR	4991067	IdentifierDecl	"n = r_num_math ( NULL , r_optarg )"		4990597	0					
ANR	4991068	IdentifierDeclType	ut64		4990597	0					
ANR	4991069	Identifier	n		4990597	1					
ANR	4991070	AssignmentExpression	"n = r_num_math ( NULL , r_optarg )"		4990597	2		=			
ANR	4991071	Identifier	n		4990597	0					
ANR	4991072	CallExpression	"r_num_math ( NULL , r_optarg )"		4990597	1					
ANR	4991073	Callee	r_num_math		4990597	0					
ANR	4991074	Identifier	r_num_math		4990597	0					
ANR	4991075	ArgumentList	NULL		4990597	1					
ANR	4991076	Argument	NULL		4990597	0					
ANR	4991077	Identifier	NULL		4990597	0					
ANR	4991078	Argument	r_optarg		4990597	1					
ANR	4991079	Identifier	r_optarg		4990597	0					
ANR	4991080	ExpressionStatement	"r_egg_patch ( egg , - 1 , ( const ut8 * ) & n , 8 )"	199:3:5435:5475	4990597	1	True				
ANR	4991081	CallExpression	"r_egg_patch ( egg , - 1 , ( const ut8 * ) & n , 8 )"		4990597	0					
ANR	4991082	Callee	r_egg_patch		4990597	0					
ANR	4991083	Identifier	r_egg_patch		4990597	0					
ANR	4991084	ArgumentList	egg		4990597	1					
ANR	4991085	Argument	egg		4990597	0					
ANR	4991086	Identifier	egg		4990597	0					
ANR	4991087	Argument	- 1		4990597	1					
ANR	4991088	UnaryOperationExpression	- 1		4990597	0					
ANR	4991089	UnaryOperator	-		4990597	0					
ANR	4991090	PrimaryExpression	1		4990597	1					
ANR	4991091	Argument	( const ut8 * ) & n		4990597	2					
ANR	4991092	CastExpression	( const ut8 * ) & n		4990597	0					
ANR	4991093	CastTarget	const ut8 *		4990597	0					
ANR	4991094	UnaryOperationExpression	& n		4990597	1					
ANR	4991095	UnaryOperator	&		4990597	0					
ANR	4991096	Identifier	n		4990597	1					
ANR	4991097	Argument	8		4990597	3					
ANR	4991098	PrimaryExpression	8		4990597	0					
ANR	4991099	ExpressionStatement	append = 1	200:3:5480:5490	4990597	2	True				
ANR	4991100	AssignmentExpression	append = 1		4990597	0		=			
ANR	4991101	Identifier	append		4990597	0					
ANR	4991102	PrimaryExpression	1		4990597	1					
ANR	4991103	BreakStatement	break ;	202:3:5500:5505	4990597	24	True				
ANR	4991104	Label	case 'd' :	203:2:5509:5517	4990597	25	True				
ANR	4991105	CompoundStatement		91:3:1872:1904	4990597	26					
ANR	4991106	IdentifierDeclStatement	"ut32 off , n ;"	205:3:5527:5538	4990597	0	True				
ANR	4991107	IdentifierDecl	off		4990597	0					
ANR	4991108	IdentifierDeclType	ut32		4990597	0					
ANR	4991109	Identifier	off		4990597	1					
ANR	4991110	IdentifierDecl	n		4990597	1					
ANR	4991111	IdentifierDeclType	ut32		4990597	0					
ANR	4991112	Identifier	n		4990597	1					
ANR	4991113	IdentifierDeclStatement	"char * p = strchr ( r_optarg , ':' ) ;"	206:3:5543:5575	4990597	1	True				
ANR	4991114	IdentifierDecl	"* p = strchr ( r_optarg , ':' )"		4990597	0					
ANR	4991115	IdentifierDeclType	char *		4990597	0					
ANR	4991116	Identifier	p		4990597	1					
ANR	4991117	AssignmentExpression	"* p = strchr ( r_optarg , ':' )"		4990597	2		=			
ANR	4991118	Identifier	p		4990597	0					
ANR	4991119	CallExpression	"strchr ( r_optarg , ':' )"		4990597	1					
ANR	4991120	Callee	strchr		4990597	0					
ANR	4991121	Identifier	strchr		4990597	0					
ANR	4991122	ArgumentList	r_optarg		4990597	1					
ANR	4991123	Argument	r_optarg		4990597	0					
ANR	4991124	Identifier	r_optarg		4990597	0					
ANR	4991125	Argument	':'		4990597	1					
ANR	4991126	PrimaryExpression	':'		4990597	0					
ANR	4991127	IfStatement	if ( p )		4990597	2					
ANR	4991128	Condition	p	207:7:5584:5584	4990597	0	True				
ANR	4991129	Identifier	p		4990597	0					
ANR	4991130	CompoundStatement		92:10:1916:1916	4990597	1					
ANR	4991131	ExpressionStatement	* p = 0	208:4:5593:5599	4990597	0	True				
ANR	4991132	AssignmentExpression	* p = 0		4990597	0		=			
ANR	4991133	UnaryOperationExpression	* p		4990597	0					
ANR	4991134	UnaryOperator	*		4990597	0					
ANR	4991135	Identifier	p		4990597	1					
ANR	4991136	PrimaryExpression	0		4990597	1					
ANR	4991137	ExpressionStatement	"off = r_num_math ( NULL , r_optarg )"	209:4:5605:5638	4990597	1	True				
ANR	4991138	AssignmentExpression	"off = r_num_math ( NULL , r_optarg )"		4990597	0		=			
ANR	4991139	Identifier	off		4990597	0					
ANR	4991140	CallExpression	"r_num_math ( NULL , r_optarg )"		4990597	1					
ANR	4991141	Callee	r_num_math		4990597	0					
ANR	4991142	Identifier	r_num_math		4990597	0					
ANR	4991143	ArgumentList	NULL		4990597	1					
ANR	4991144	Argument	NULL		4990597	0					
ANR	4991145	Identifier	NULL		4990597	0					
ANR	4991146	Argument	r_optarg		4990597	1					
ANR	4991147	Identifier	r_optarg		4990597	0					
ANR	4991148	ExpressionStatement	"n = r_num_math ( NULL , p + 1 )"	210:4:5644:5672	4990597	2	True				
ANR	4991149	AssignmentExpression	"n = r_num_math ( NULL , p + 1 )"		4990597	0		=			
ANR	4991150	Identifier	n		4990597	0					
ANR	4991151	CallExpression	"r_num_math ( NULL , p + 1 )"		4990597	1					
ANR	4991152	Callee	r_num_math		4990597	0					
ANR	4991153	Identifier	r_num_math		4990597	0					
ANR	4991154	ArgumentList	NULL		4990597	1					
ANR	4991155	Argument	NULL		4990597	0					
ANR	4991156	Identifier	NULL		4990597	0					
ANR	4991157	Argument	p + 1		4990597	1					
ANR	4991158	AdditiveExpression	p + 1		4990597	0		+			
ANR	4991159	Identifier	p		4990597	0					
ANR	4991160	PrimaryExpression	1		4990597	1					
ANR	4991161	ExpressionStatement	* p = ':'	211:4:5678:5686	4990597	3	True				
ANR	4991162	AssignmentExpression	* p = ':'		4990597	0		=			
ANR	4991163	UnaryOperationExpression	* p		4990597	0					
ANR	4991164	UnaryOperator	*		4990597	0					
ANR	4991165	Identifier	p		4990597	1					
ANR	4991166	PrimaryExpression	':'		4990597	1					
ANR	4991167	ExpressionStatement	"r_egg_patch ( egg , off , ( const ut8 * ) & n , 4 )"	213:4:5727:5768	4990597	4	True				
ANR	4991168	CallExpression	"r_egg_patch ( egg , off , ( const ut8 * ) & n , 4 )"		4990597	0					
ANR	4991169	Callee	r_egg_patch		4990597	0					
ANR	4991170	Identifier	r_egg_patch		4990597	0					
ANR	4991171	ArgumentList	egg		4990597	1					
ANR	4991172	Argument	egg		4990597	0					
ANR	4991173	Identifier	egg		4990597	0					
ANR	4991174	Argument	off		4990597	1					
ANR	4991175	Identifier	off		4990597	0					
ANR	4991176	Argument	( const ut8 * ) & n		4990597	2					
ANR	4991177	CastExpression	( const ut8 * ) & n		4990597	0					
ANR	4991178	CastTarget	const ut8 *		4990597	0					
ANR	4991179	UnaryOperationExpression	& n		4990597	1					
ANR	4991180	UnaryOperator	&		4990597	0					
ANR	4991181	Identifier	n		4990597	1					
ANR	4991182	Argument	4		4990597	3					
ANR	4991183	PrimaryExpression	4		4990597	0					
ANR	4991184	ElseStatement	else		4990597	0					
ANR	4991185	CompoundStatement		99:10:2109:2109	4990597	0					
ANR	4991186	ExpressionStatement	"eprintf ( ""Missing colon in -d\\n"" )"	215:4:5786:5819	4990597	0	True				
ANR	4991187	CallExpression	"eprintf ( ""Missing colon in -d\\n"" )"		4990597	0					
ANR	4991188	Callee	eprintf		4990597	0					
ANR	4991189	Identifier	eprintf		4990597	0					
ANR	4991190	ArgumentList	"""Missing colon in -d\\n"""		4990597	1					
ANR	4991191	Argument	"""Missing colon in -d\\n"""		4990597	0					
ANR	4991192	PrimaryExpression	"""Missing colon in -d\\n"""		4990597	0					
ANR	4991193	BreakStatement	break ;	218:3:5834:5839	4990597	27	True				
ANR	4991194	Label	case 'D' :	219:2:5843:5851	4990597	28	True				
ANR	4991195	CompoundStatement		106:3:2190:2222	4990597	29					
ANR	4991196	IdentifierDeclStatement	"char * p = strchr ( r_optarg , ':' ) ;"	221:3:5861:5893	4990597	0	True				
ANR	4991197	IdentifierDecl	"* p = strchr ( r_optarg , ':' )"		4990597	0					
ANR	4991198	IdentifierDeclType	char *		4990597	0					
ANR	4991199	Identifier	p		4990597	1					
ANR	4991200	AssignmentExpression	"* p = strchr ( r_optarg , ':' )"		4990597	2		=			
ANR	4991201	Identifier	p		4990597	0					
ANR	4991202	CallExpression	"strchr ( r_optarg , ':' )"		4990597	1					
ANR	4991203	Callee	strchr		4990597	0					
ANR	4991204	Identifier	strchr		4990597	0					
ANR	4991205	ArgumentList	r_optarg		4990597	1					
ANR	4991206	Argument	r_optarg		4990597	0					
ANR	4991207	Identifier	r_optarg		4990597	0					
ANR	4991208	Argument	':'		4990597	1					
ANR	4991209	PrimaryExpression	':'		4990597	0					
ANR	4991210	IfStatement	if ( p )		4990597	1					
ANR	4991211	Condition	p	222:7:5902:5902	4990597	0	True				
ANR	4991212	Identifier	p		4990597	0					
ANR	4991213	CompoundStatement		108:4:2240:2281	4990597	1					
ANR	4991214	IdentifierDeclStatement	"ut64 n , off = r_num_math ( NULL , r_optarg ) ;"	223:4:5911:5952	4990597	0	True				
ANR	4991215	IdentifierDecl	n		4990597	0					
ANR	4991216	IdentifierDeclType	ut64		4990597	0					
ANR	4991217	Identifier	n		4990597	1					
ANR	4991218	IdentifierDecl	"off = r_num_math ( NULL , r_optarg )"		4990597	1					
ANR	4991219	IdentifierDeclType	ut64		4990597	0					
ANR	4991220	Identifier	off		4990597	1					
ANR	4991221	AssignmentExpression	"off = r_num_math ( NULL , r_optarg )"		4990597	2		=			
ANR	4991222	Identifier	off		4990597	0					
ANR	4991223	CallExpression	"r_num_math ( NULL , r_optarg )"		4990597	1					
ANR	4991224	Callee	r_num_math		4990597	0					
ANR	4991225	Identifier	r_num_math		4990597	0					
ANR	4991226	ArgumentList	NULL		4990597	1					
ANR	4991227	Argument	NULL		4990597	0					
ANR	4991228	Identifier	NULL		4990597	0					
ANR	4991229	Argument	r_optarg		4990597	1					
ANR	4991230	Identifier	r_optarg		4990597	0					
ANR	4991231	ExpressionStatement	"n = r_num_math ( NULL , p + 1 )"	224:4:5958:5986	4990597	1	True				
ANR	4991232	AssignmentExpression	"n = r_num_math ( NULL , p + 1 )"		4990597	0		=			
ANR	4991233	Identifier	n		4990597	0					
ANR	4991234	CallExpression	"r_num_math ( NULL , p + 1 )"		4990597	1					
ANR	4991235	Callee	r_num_math		4990597	0					
ANR	4991236	Identifier	r_num_math		4990597	0					
ANR	4991237	ArgumentList	NULL		4990597	1					
ANR	4991238	Argument	NULL		4990597	0					
ANR	4991239	Identifier	NULL		4990597	0					
ANR	4991240	Argument	p + 1		4990597	1					
ANR	4991241	AdditiveExpression	p + 1		4990597	0		+			
ANR	4991242	Identifier	p		4990597	0					
ANR	4991243	PrimaryExpression	1		4990597	1					
ANR	4991244	ExpressionStatement	"r_egg_patch ( egg , off , ( const ut8 * ) & n , 8 )"	226:4:6027:6068	4990597	2	True				
ANR	4991245	CallExpression	"r_egg_patch ( egg , off , ( const ut8 * ) & n , 8 )"		4990597	0					
ANR	4991246	Callee	r_egg_patch		4990597	0					
ANR	4991247	Identifier	r_egg_patch		4990597	0					
ANR	4991248	ArgumentList	egg		4990597	1					
ANR	4991249	Argument	egg		4990597	0					
ANR	4991250	Identifier	egg		4990597	0					
ANR	4991251	Argument	off		4990597	1					
ANR	4991252	Identifier	off		4990597	0					
ANR	4991253	Argument	( const ut8 * ) & n		4990597	2					
ANR	4991254	CastExpression	( const ut8 * ) & n		4990597	0					
ANR	4991255	CastTarget	const ut8 *		4990597	0					
ANR	4991256	UnaryOperationExpression	& n		4990597	1					
ANR	4991257	UnaryOperator	&		4990597	0					
ANR	4991258	Identifier	n		4990597	1					
ANR	4991259	Argument	8		4990597	3					
ANR	4991260	PrimaryExpression	8		4990597	0					
ANR	4991261	ElseStatement	else		4990597	0					
ANR	4991262	CompoundStatement		112:10:2409:2409	4990597	0					
ANR	4991263	ExpressionStatement	"eprintf ( ""Missing colon in -d\\n"" )"	228:4:6086:6119	4990597	0	True				
ANR	4991264	CallExpression	"eprintf ( ""Missing colon in -d\\n"" )"		4990597	0					
ANR	4991265	Callee	eprintf		4990597	0					
ANR	4991266	Identifier	eprintf		4990597	0					
ANR	4991267	ArgumentList	"""Missing colon in -d\\n"""		4990597	1					
ANR	4991268	Argument	"""Missing colon in -d\\n"""		4990597	0					
ANR	4991269	PrimaryExpression	"""Missing colon in -d\\n"""		4990597	0					
ANR	4991270	BreakStatement	break ;	231:3:6134:6139	4990597	30	True				
ANR	4991271	Label	case 'S' :	232:2:6143:6151	4990597	31	True				
ANR	4991272	ExpressionStatement	str = r_optarg	233:3:6156:6170	4990597	32	True				
ANR	4991273	AssignmentExpression	str = r_optarg		4990597	0		=			
ANR	4991274	Identifier	str		4990597	0					
ANR	4991275	Identifier	r_optarg		4990597	1					
ANR	4991276	BreakStatement	break ;	234:3:6175:6180	4990597	33	True				
ANR	4991277	Label	case 'o' :	235:2:6184:6192	4990597	34	True				
ANR	4991278	ExpressionStatement	ofile = r_optarg	236:3:6197:6213	4990597	35	True				
ANR	4991279	AssignmentExpression	ofile = r_optarg		4990597	0		=			
ANR	4991280	Identifier	ofile		4990597	0					
ANR	4991281	Identifier	r_optarg		4990597	1					
ANR	4991282	BreakStatement	break ;	237:3:6218:6223	4990597	36	True				
ANR	4991283	Label	case 'O' :	238:2:6227:6235	4990597	37	True				
ANR	4991284	ExpressionStatement	ofileauto = 1	239:3:6240:6253	4990597	38	True				
ANR	4991285	AssignmentExpression	ofileauto = 1		4990597	0		=			
ANR	4991286	Identifier	ofileauto		4990597	0					
ANR	4991287	PrimaryExpression	1		4990597	1					
ANR	4991288	BreakStatement	break ;	240:3:6258:6263	4990597	39	True				
ANR	4991289	Label	case 'I' :	241:2:6267:6275	4990597	40	True				
ANR	4991290	ExpressionStatement	"r_egg_lang_include_path ( egg , r_optarg )"	242:3:6280:6319	4990597	41	True				
ANR	4991291	CallExpression	"r_egg_lang_include_path ( egg , r_optarg )"		4990597	0					
ANR	4991292	Callee	r_egg_lang_include_path		4990597	0					
ANR	4991293	Identifier	r_egg_lang_include_path		4990597	0					
ANR	4991294	ArgumentList	egg		4990597	1					
ANR	4991295	Argument	egg		4990597	0					
ANR	4991296	Identifier	egg		4990597	0					
ANR	4991297	Argument	r_optarg		4990597	1					
ANR	4991298	Identifier	r_optarg		4990597	0					
ANR	4991299	BreakStatement	break ;	243:3:6324:6329	4990597	42	True				
ANR	4991300	Label	case 'i' :	244:2:6333:6341	4990597	43	True				
ANR	4991301	ExpressionStatement	shellcode = r_optarg	245:4:6347:6367	4990597	44	True				
ANR	4991302	AssignmentExpression	shellcode = r_optarg		4990597	0		=			
ANR	4991303	Identifier	shellcode		4990597	0					
ANR	4991304	Identifier	r_optarg		4990597	1					
ANR	4991305	BreakStatement	break ;	246:4:6373:6378	4990597	45	True				
ANR	4991306	Label	case 'p' :	247:2:6382:6390	4990597	46	True				
ANR	4991307	ExpressionStatement	padding = r_optarg	248:3:6395:6413	4990597	47	True				
ANR	4991308	AssignmentExpression	padding = r_optarg		4990597	0		=			
ANR	4991309	Identifier	padding		4990597	0					
ANR	4991310	Identifier	r_optarg		4990597	1					
ANR	4991311	BreakStatement	break ;	249:3:6418:6423	4990597	48	True				
ANR	4991312	Label	case 'P' :	250:2:6427:6435	4990597	49	True				
ANR	4991313	ExpressionStatement	pattern = r_optarg	251:3:6440:6458	4990597	50	True				
ANR	4991314	AssignmentExpression	pattern = r_optarg		4990597	0		=			
ANR	4991315	Identifier	pattern		4990597	0					
ANR	4991316	Identifier	r_optarg		4990597	1					
ANR	4991317	BreakStatement	break ;	252:3:6463:6468	4990597	51	True				
ANR	4991318	Label	case 'c' :	253:2:6472:6480	4990597	52	True				
ANR	4991319	CompoundStatement		140:3:2819:2851	4990597	53					
ANR	4991320	IdentifierDeclStatement	"char * p = strchr ( r_optarg , '=' ) ;"	255:3:6490:6522	4990597	0	True				
ANR	4991321	IdentifierDecl	"* p = strchr ( r_optarg , '=' )"		4990597	0					
ANR	4991322	IdentifierDeclType	char *		4990597	0					
ANR	4991323	Identifier	p		4990597	1					
ANR	4991324	AssignmentExpression	"* p = strchr ( r_optarg , '=' )"		4990597	2		=			
ANR	4991325	Identifier	p		4990597	0					
ANR	4991326	CallExpression	"strchr ( r_optarg , '=' )"		4990597	1					
ANR	4991327	Callee	strchr		4990597	0					
ANR	4991328	Identifier	strchr		4990597	0					
ANR	4991329	ArgumentList	r_optarg		4990597	1					
ANR	4991330	Argument	r_optarg		4990597	0					
ANR	4991331	Identifier	r_optarg		4990597	0					
ANR	4991332	Argument	'='		4990597	1					
ANR	4991333	PrimaryExpression	'='		4990597	0					
ANR	4991334	IfStatement	if ( p )		4990597	1					
ANR	4991335	Condition	p	256:7:6531:6531	4990597	0	True				
ANR	4991336	Identifier	p		4990597	0					
ANR	4991337	CompoundStatement		141:10:2863:2863	4990597	1					
ANR	4991338	ExpressionStatement	* p ++ = 0	257:4:6540:6548	4990597	0	True				
ANR	4991339	AssignmentExpression	* p ++ = 0		4990597	0		=			
ANR	4991340	UnaryOperationExpression	* p ++		4990597	0					
ANR	4991341	UnaryOperator	*		4990597	0					
ANR	4991342	PostIncDecOperationExpression	p ++		4990597	1					
ANR	4991343	Identifier	p		4990597	0					
ANR	4991344	IncDec	++		4990597	1					
ANR	4991345	PrimaryExpression	0		4990597	1					
ANR	4991346	ExpressionStatement	"r_egg_option_set ( egg , r_optarg , p )"	258:4:6554:6589	4990597	1	True				
ANR	4991347	CallExpression	"r_egg_option_set ( egg , r_optarg , p )"		4990597	0					
ANR	4991348	Callee	r_egg_option_set		4990597	0					
ANR	4991349	Identifier	r_egg_option_set		4990597	0					
ANR	4991350	ArgumentList	egg		4990597	1					
ANR	4991351	Argument	egg		4990597	0					
ANR	4991352	Identifier	egg		4990597	0					
ANR	4991353	Argument	r_optarg		4990597	1					
ANR	4991354	Identifier	r_optarg		4990597	0					
ANR	4991355	Argument	p		4990597	2					
ANR	4991356	Identifier	p		4990597	0					
ANR	4991357	ElseStatement	else		4990597	0					
ANR	4991358	CompoundStatement		144:10:2930:2930	4990597	0					
ANR	4991359	ExpressionStatement	"r_egg_option_set ( egg , r_optarg , ""true"" )"	260:4:6607:6647	4990597	0	True				
ANR	4991360	CallExpression	"r_egg_option_set ( egg , r_optarg , ""true"" )"		4990597	0					
ANR	4991361	Callee	r_egg_option_set		4990597	0					
ANR	4991362	Identifier	r_egg_option_set		4990597	0					
ANR	4991363	ArgumentList	egg		4990597	1					
ANR	4991364	Argument	egg		4990597	0					
ANR	4991365	Identifier	egg		4990597	0					
ANR	4991366	Argument	r_optarg		4990597	1					
ANR	4991367	Identifier	r_optarg		4990597	0					
ANR	4991368	Argument	"""true"""		4990597	2					
ANR	4991369	PrimaryExpression	"""true"""		4990597	0					
ANR	4991370	BreakStatement	break ;	263:3:6662:6667	4990597	54	True				
ANR	4991371	Label	case 'F' :	264:2:6671:6679	4990597	55	True				
ANR	4991372	ExpressionStatement	"format = ""mach0"""	266:3:6698:6714	4990597	56	True				
ANR	4991373	AssignmentExpression	"format = ""mach0"""		4990597	0		=			
ANR	4991374	Identifier	format		4990597	0					
ANR	4991375	PrimaryExpression	"""mach0"""		4990597	1					
ANR	4991376	ExpressionStatement	show_asm = 0	272:3:6787:6799	4990597	57	True				
ANR	4991377	AssignmentExpression	show_asm = 0		4990597	0		=			
ANR	4991378	Identifier	show_asm		4990597	0					
ANR	4991379	PrimaryExpression	0		4990597	1					
ANR	4991380	BreakStatement	break ;	273:3:6804:6809	4990597	58	True				
ANR	4991381	Label	case 'f' :	274:2:6813:6821	4990597	59	True				
ANR	4991382	ExpressionStatement	format = r_optarg	275:3:6826:6843	4990597	60	True				
ANR	4991383	AssignmentExpression	format = r_optarg		4990597	0		=			
ANR	4991384	Identifier	format		4990597	0					
ANR	4991385	Identifier	r_optarg		4990597	1					
ANR	4991386	ExpressionStatement	show_asm = 0	276:3:6848:6860	4990597	61	True				
ANR	4991387	AssignmentExpression	show_asm = 0		4990597	0		=			
ANR	4991388	Identifier	show_asm		4990597	0					
ANR	4991389	PrimaryExpression	0		4990597	1					
ANR	4991390	BreakStatement	break ;	277:3:6865:6870	4990597	62	True				
ANR	4991391	Label	case 's' :	278:2:6874:6882	4990597	63	True				
ANR	4991392	ExpressionStatement	show_asm = 1	279:3:6887:6899	4990597	64	True				
ANR	4991393	AssignmentExpression	show_asm = 1		4990597	0		=			
ANR	4991394	Identifier	show_asm		4990597	0					
ANR	4991395	PrimaryExpression	1		4990597	1					
ANR	4991396	ExpressionStatement	show_hex = 0	280:3:6904:6916	4990597	65	True				
ANR	4991397	AssignmentExpression	show_hex = 0		4990597	0		=			
ANR	4991398	Identifier	show_hex		4990597	0					
ANR	4991399	PrimaryExpression	0		4990597	1					
ANR	4991400	BreakStatement	break ;	281:3:6921:6926	4990597	66	True				
ANR	4991401	Label	case 'k' :	282:2:6930:6938	4990597	67	True				
ANR	4991402	ExpressionStatement	os = r_optarg	283:3:6943:6956	4990597	68	True				
ANR	4991403	AssignmentExpression	os = r_optarg		4990597	0		=			
ANR	4991404	Identifier	os		4990597	0					
ANR	4991405	Identifier	r_optarg		4990597	1					
ANR	4991406	BreakStatement	break ;	284:3:6961:6966	4990597	69	True				
ANR	4991407	Label	case 'r' :	285:2:6970:6978	4990597	70	True				
ANR	4991408	ExpressionStatement	show_raw = 1	286:3:6983:6995	4990597	71	True				
ANR	4991409	AssignmentExpression	show_raw = 1		4990597	0		=			
ANR	4991410	Identifier	show_raw		4990597	0					
ANR	4991411	PrimaryExpression	1		4990597	1					
ANR	4991412	BreakStatement	break ;	287:3:7000:7005	4990597	72	True				
ANR	4991413	Label	case 'x' :	288:2:7009:7017	4990597	73	True				
ANR	4991414	ExpressionStatement	show_execute = true	290:3:7036:7055	4990597	74	True				
ANR	4991415	AssignmentExpression	show_execute = true		4990597	0		=			
ANR	4991416	Identifier	show_execute		4990597	0					
ANR	4991417	Identifier	true		4990597	1					
ANR	4991418	BreakStatement	break ;	291:3:7060:7065	4990597	75	True				
ANR	4991419	Label	case 'X' :	292:2:7069:7077	4990597	76	True				
ANR	4991420	ExpressionStatement	show_execute = 1	294:3:7106:7122	4990597	77	True				
ANR	4991421	AssignmentExpression	show_execute = 1		4990597	0		=			
ANR	4991422	Identifier	show_execute		4990597	0					
ANR	4991423	PrimaryExpression	1		4990597	1					
ANR	4991424	ExpressionStatement	show_execute_rop = 1	295:3:7127:7147	4990597	78	True				
ANR	4991425	AssignmentExpression	show_execute_rop = 1		4990597	0		=			
ANR	4991426	Identifier	show_execute_rop		4990597	0					
ANR	4991427	PrimaryExpression	1		4990597	1					
ANR	4991428	BreakStatement	break ;	296:3:7152:7157	4990597	79	True				
ANR	4991429	Label	case 'L' :	297:2:7161:7169	4990597	80	True				
ANR	4991430	ExpressionStatement	list ( egg )	298:3:7174:7184	4990597	81	True				
ANR	4991431	CallExpression	list ( egg )		4990597	0					
ANR	4991432	Callee	list		4990597	0					
ANR	4991433	Identifier	list		4990597	0					
ANR	4991434	ArgumentList	egg		4990597	1					
ANR	4991435	Argument	egg		4990597	0					
ANR	4991436	Identifier	egg		4990597	0					
ANR	4991437	ExpressionStatement	r_egg_free ( egg )	299:3:7189:7205	4990597	82	True				
ANR	4991438	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4991439	Callee	r_egg_free		4990597	0					
ANR	4991440	Identifier	r_egg_free		4990597	0					
ANR	4991441	ArgumentList	egg		4990597	1					
ANR	4991442	Argument	egg		4990597	0					
ANR	4991443	Identifier	egg		4990597	0					
ANR	4991444	ExpressionStatement	free ( sequence )	300:3:7210:7225	4990597	83	True				
ANR	4991445	CallExpression	free ( sequence )		4990597	0					
ANR	4991446	Callee	free		4990597	0					
ANR	4991447	Identifier	free		4990597	0					
ANR	4991448	ArgumentList	sequence		4990597	1					
ANR	4991449	Argument	sequence		4990597	0					
ANR	4991450	Identifier	sequence		4990597	0					
ANR	4991451	ReturnStatement	return 0 ;	301:3:7230:7238	4990597	84	True				
ANR	4991452	PrimaryExpression	0		4990597	0					
ANR	4991453	Label	case 'h' :	302:2:7242:7250	4990597	85	True				
ANR	4991454	ExpressionStatement	r_egg_free ( egg )	303:3:7255:7271	4990597	86	True				
ANR	4991455	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4991456	Callee	r_egg_free		4990597	0					
ANR	4991457	Identifier	r_egg_free		4990597	0					
ANR	4991458	ArgumentList	egg		4990597	1					
ANR	4991459	Argument	egg		4990597	0					
ANR	4991460	Identifier	egg		4990597	0					
ANR	4991461	ExpressionStatement	free ( sequence )	304:3:7276:7291	4990597	87	True				
ANR	4991462	CallExpression	free ( sequence )		4990597	0					
ANR	4991463	Callee	free		4990597	0					
ANR	4991464	Identifier	free		4990597	0					
ANR	4991465	ArgumentList	sequence		4990597	1					
ANR	4991466	Argument	sequence		4990597	0					
ANR	4991467	Identifier	sequence		4990597	0					
ANR	4991468	ReturnStatement	return usage ( 1 ) ;	305:3:7296:7312	4990597	88	True				
ANR	4991469	CallExpression	usage ( 1 )		4990597	0					
ANR	4991470	Callee	usage		4990597	0					
ANR	4991471	Identifier	usage		4990597	0					
ANR	4991472	ArgumentList	1		4990597	1					
ANR	4991473	Argument	1		4990597	0					
ANR	4991474	PrimaryExpression	1		4990597	0					
ANR	4991475	Label	case 'v' :	306:2:7316:7324	4990597	89	True				
ANR	4991476	ExpressionStatement	free ( sequence )	307:3:7329:7344	4990597	90	True				
ANR	4991477	CallExpression	free ( sequence )		4990597	0					
ANR	4991478	Callee	free		4990597	0					
ANR	4991479	Identifier	free		4990597	0					
ANR	4991480	ArgumentList	sequence		4990597	1					
ANR	4991481	Argument	sequence		4990597	0					
ANR	4991482	Identifier	sequence		4990597	0					
ANR	4991483	ExpressionStatement	r_egg_free ( egg )	308:3:7349:7365	4990597	91	True				
ANR	4991484	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4991485	Callee	r_egg_free		4990597	0					
ANR	4991486	Identifier	r_egg_free		4990597	0					
ANR	4991487	ArgumentList	egg		4990597	1					
ANR	4991488	Argument	egg		4990597	0					
ANR	4991489	Identifier	egg		4990597	0					
ANR	4991490	ReturnStatement	"return r_main_version_print ( ""ragg2"" ) ;"	309:3:7370:7407	4990597	92	True				
ANR	4991491	CallExpression	"r_main_version_print ( ""ragg2"" )"		4990597	0					
ANR	4991492	Callee	r_main_version_print		4990597	0					
ANR	4991493	Identifier	r_main_version_print		4990597	0					
ANR	4991494	ArgumentList	"""ragg2"""		4990597	1					
ANR	4991495	Argument	"""ragg2"""		4990597	0					
ANR	4991496	PrimaryExpression	"""ragg2"""		4990597	0					
ANR	4991497	Label	case 'z' :	310:2:7411:7419	4990597	93	True				
ANR	4991498	ExpressionStatement	show_str = 1	311:3:7424:7436	4990597	94	True				
ANR	4991499	AssignmentExpression	show_str = 1		4990597	0		=			
ANR	4991500	Identifier	show_str		4990597	0					
ANR	4991501	PrimaryExpression	1		4990597	1					
ANR	4991502	BreakStatement	break ;	312:3:7441:7446	4990597	95	True				
ANR	4991503	Label	case 'q' :	313:2:7450:7458	4990597	96	True				
ANR	4991504	ExpressionStatement	get_offset = 1	314:3:7463:7477	4990597	97	True				
ANR	4991505	AssignmentExpression	get_offset = 1		4990597	0		=			
ANR	4991506	Identifier	get_offset		4990597	0					
ANR	4991507	PrimaryExpression	1		4990597	1					
ANR	4991508	ExpressionStatement	sequence = strdup ( r_optarg )	315:3:7482:7510	4990597	98	True				
ANR	4991509	AssignmentExpression	sequence = strdup ( r_optarg )		4990597	0		=			
ANR	4991510	Identifier	sequence		4990597	0					
ANR	4991511	CallExpression	strdup ( r_optarg )		4990597	1					
ANR	4991512	Callee	strdup		4990597	0					
ANR	4991513	Identifier	strdup		4990597	0					
ANR	4991514	ArgumentList	r_optarg		4990597	1					
ANR	4991515	Argument	r_optarg		4990597	0					
ANR	4991516	Identifier	r_optarg		4990597	0					
ANR	4991517	BreakStatement	break ;	316:3:7515:7520	4990597	99	True				
ANR	4991518	Label	default :	317:2:7524:7531	4990597	100	True				
ANR	4991519	Identifier	default		4990597	0					
ANR	4991520	ExpressionStatement	free ( sequence )	318:3:7536:7551	4990597	101	True				
ANR	4991521	CallExpression	free ( sequence )		4990597	0					
ANR	4991522	Callee	free		4990597	0					
ANR	4991523	Identifier	free		4990597	0					
ANR	4991524	ArgumentList	sequence		4990597	1					
ANR	4991525	Argument	sequence		4990597	0					
ANR	4991526	Identifier	sequence		4990597	0					
ANR	4991527	ExpressionStatement	r_egg_free ( egg )	319:3:7556:7572	4990597	102	True				
ANR	4991528	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4991529	Callee	r_egg_free		4990597	0					
ANR	4991530	Identifier	r_egg_free		4990597	0					
ANR	4991531	ArgumentList	egg		4990597	1					
ANR	4991532	Argument	egg		4990597	0					
ANR	4991533	Identifier	egg		4990597	0					
ANR	4991534	ReturnStatement	return 1 ;	320:3:7577:7585	4990597	103	True				
ANR	4991535	PrimaryExpression	1		4990597	0					
ANR	4991536	IfStatement	if ( r_optind == argc && ! shellcode && ! bytes && ! contents && ! encoder && ! padding && ! pattern && ! append && ! get_offset && ! str )		4990597	28					
ANR	4991537	Condition	r_optind == argc && ! shellcode && ! bytes && ! contents && ! encoder && ! padding && ! pattern && ! append && ! get_offset && ! str	324:5:7600:7722	4990597	0	True				
ANR	4991538	AndExpression	r_optind == argc && ! shellcode && ! bytes && ! contents && ! encoder && ! padding && ! pattern && ! append && ! get_offset && ! str		4990597	0		&&			
ANR	4991539	EqualityExpression	r_optind == argc		4990597	0		==			
ANR	4991540	Identifier	r_optind		4990597	0					
ANR	4991541	Identifier	argc		4990597	1					
ANR	4991542	AndExpression	! shellcode && ! bytes && ! contents && ! encoder && ! padding && ! pattern && ! append && ! get_offset && ! str		4990597	1		&&			
ANR	4991543	UnaryOperationExpression	! shellcode		4990597	0					
ANR	4991544	UnaryOperator	!		4990597	0					
ANR	4991545	Identifier	shellcode		4990597	1					
ANR	4991546	AndExpression	! bytes && ! contents && ! encoder && ! padding && ! pattern && ! append && ! get_offset && ! str		4990597	1		&&			
ANR	4991547	UnaryOperationExpression	! bytes		4990597	0					
ANR	4991548	UnaryOperator	!		4990597	0					
ANR	4991549	Identifier	bytes		4990597	1					
ANR	4991550	AndExpression	! contents && ! encoder && ! padding && ! pattern && ! append && ! get_offset && ! str		4990597	1		&&			
ANR	4991551	UnaryOperationExpression	! contents		4990597	0					
ANR	4991552	UnaryOperator	!		4990597	0					
ANR	4991553	Identifier	contents		4990597	1					
ANR	4991554	AndExpression	! encoder && ! padding && ! pattern && ! append && ! get_offset && ! str		4990597	1		&&			
ANR	4991555	UnaryOperationExpression	! encoder		4990597	0					
ANR	4991556	UnaryOperator	!		4990597	0					
ANR	4991557	Identifier	encoder		4990597	1					
ANR	4991558	AndExpression	! padding && ! pattern && ! append && ! get_offset && ! str		4990597	1		&&			
ANR	4991559	UnaryOperationExpression	! padding		4990597	0					
ANR	4991560	UnaryOperator	!		4990597	0					
ANR	4991561	Identifier	padding		4990597	1					
ANR	4991562	AndExpression	! pattern && ! append && ! get_offset && ! str		4990597	1		&&			
ANR	4991563	UnaryOperationExpression	! pattern		4990597	0					
ANR	4991564	UnaryOperator	!		4990597	0					
ANR	4991565	Identifier	pattern		4990597	1					
ANR	4991566	AndExpression	! append && ! get_offset && ! str		4990597	1		&&			
ANR	4991567	UnaryOperationExpression	! append		4990597	0					
ANR	4991568	UnaryOperator	!		4990597	0					
ANR	4991569	Identifier	append		4990597	1					
ANR	4991570	AndExpression	! get_offset && ! str		4990597	1		&&			
ANR	4991571	UnaryOperationExpression	! get_offset		4990597	0					
ANR	4991572	UnaryOperator	!		4990597	0					
ANR	4991573	Identifier	get_offset		4990597	1					
ANR	4991574	UnaryOperationExpression	! str		4990597	1					
ANR	4991575	UnaryOperator	!		4990597	0					
ANR	4991576	Identifier	str		4990597	1					
ANR	4991577	CompoundStatement		209:130:4054:4054	4990597	1					
ANR	4991578	ExpressionStatement	r_egg_free ( egg )	325:2:7729:7745	4990597	0	True				
ANR	4991579	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4991580	Callee	r_egg_free		4990597	0					
ANR	4991581	Identifier	r_egg_free		4990597	0					
ANR	4991582	ArgumentList	egg		4990597	1					
ANR	4991583	Argument	egg		4990597	0					
ANR	4991584	Identifier	egg		4990597	0					
ANR	4991585	ReturnStatement	return usage ( 0 ) ;	326:2:7749:7765	4990597	1	True				
ANR	4991586	CallExpression	usage ( 0 )		4990597	0					
ANR	4991587	Callee	usage		4990597	0					
ANR	4991588	Identifier	usage		4990597	0					
ANR	4991589	ArgumentList	0		4990597	1					
ANR	4991590	Argument	0		4990597	0					
ANR	4991591	PrimaryExpression	0		4990597	0					
ANR	4991592	ElseStatement	else		4990597	0					
ANR	4991593	CompoundStatement		212:8:4104:4104	4990597	0					
ANR	4991594	ExpressionStatement	file = argv [ r_optind ]	328:2:7779:7800	4990597	0	True				
ANR	4991595	AssignmentExpression	file = argv [ r_optind ]		4990597	0		=			
ANR	4991596	Identifier	file		4990597	0					
ANR	4991597	ArrayIndexing	argv [ r_optind ]		4990597	1					
ANR	4991598	Identifier	argv		4990597	0					
ANR	4991599	Identifier	r_optind		4990597	1					
ANR	4991600	IfStatement	if ( bits == 64 )		4990597	29					
ANR	4991601	Condition	bits == 64	331:5:7811:7820	4990597	0	True				
ANR	4991602	EqualityExpression	bits == 64		4990597	0		==			
ANR	4991603	Identifier	bits		4990597	0					
ANR	4991604	PrimaryExpression	64		4990597	1					
ANR	4991605	CompoundStatement		216:17:4152:4152	4990597	1					
ANR	4991606	IfStatement	"if ( ! strcmp ( format , ""mach0"" ) )"		4990597	0					
ANR	4991607	Condition	"! strcmp ( format , ""mach0"" )"	332:6:7831:7855	4990597	0	True				
ANR	4991608	UnaryOperationExpression	"! strcmp ( format , ""mach0"" )"		4990597	0					
ANR	4991609	UnaryOperator	!		4990597	0					
ANR	4991610	CallExpression	"strcmp ( format , ""mach0"" )"		4990597	1					
ANR	4991611	Callee	strcmp		4990597	0					
ANR	4991612	Identifier	strcmp		4990597	0					
ANR	4991613	ArgumentList	format		4990597	1					
ANR	4991614	Argument	format		4990597	0					
ANR	4991615	Identifier	format		4990597	0					
ANR	4991616	Argument	"""mach0"""		4990597	1					
ANR	4991617	PrimaryExpression	"""mach0"""		4990597	0					
ANR	4991618	CompoundStatement		217:33:4187:4187	4990597	1					
ANR	4991619	ExpressionStatement	"format = ""mach064"""	333:3:7863:7881	4990597	0	True				
ANR	4991620	AssignmentExpression	"format = ""mach064"""		4990597	0		=			
ANR	4991621	Identifier	format		4990597	0					
ANR	4991622	PrimaryExpression	"""mach064"""		4990597	1					
ANR	4991623	ElseStatement	else		4990597	0					
ANR	4991624	IfStatement	"if ( ! strcmp ( format , ""elf"" ) )"		4990597	0					
ANR	4991625	Condition	"! strcmp ( format , ""elf"" )"	334:13:7896:7918	4990597	0	True				
ANR	4991626	UnaryOperationExpression	"! strcmp ( format , ""elf"" )"		4990597	0					
ANR	4991627	UnaryOperator	!		4990597	0					
ANR	4991628	CallExpression	"strcmp ( format , ""elf"" )"		4990597	1					
ANR	4991629	Callee	strcmp		4990597	0					
ANR	4991630	Identifier	strcmp		4990597	0					
ANR	4991631	ArgumentList	format		4990597	1					
ANR	4991632	Argument	format		4990597	0					
ANR	4991633	Identifier	format		4990597	0					
ANR	4991634	Argument	"""elf"""		4990597	1					
ANR	4991635	PrimaryExpression	"""elf"""		4990597	0					
ANR	4991636	CompoundStatement		219:38:4250:4250	4990597	1					
ANR	4991637	ExpressionStatement	"format = ""elf64"""	335:3:7926:7942	4990597	0	True				
ANR	4991638	AssignmentExpression	"format = ""elf64"""		4990597	0		=			
ANR	4991639	Identifier	format		4990597	0					
ANR	4991640	PrimaryExpression	"""elf64"""		4990597	1					
ANR	4991641	IfStatement	if ( get_offset )		4990597	30					
ANR	4991642	Condition	get_offset	340:5:7978:7987	4990597	0	True				
ANR	4991643	Identifier	get_offset		4990597	0					
ANR	4991644	CompoundStatement		225:17:4319:4319	4990597	1					
ANR	4991645	IfStatement	"if ( strncmp ( sequence , ""0x"" , 2 ) )"		4990597	0					
ANR	4991646	Condition	"strncmp ( sequence , ""0x"" , 2 )"	341:6:7998:8024	4990597	0	True				
ANR	4991647	CallExpression	"strncmp ( sequence , ""0x"" , 2 )"		4990597	0					
ANR	4991648	Callee	strncmp		4990597	0					
ANR	4991649	Identifier	strncmp		4990597	0					
ANR	4991650	ArgumentList	sequence		4990597	1					
ANR	4991651	Argument	sequence		4990597	0					
ANR	4991652	Identifier	sequence		4990597	0					
ANR	4991653	Argument	"""0x"""		4990597	1					
ANR	4991654	PrimaryExpression	"""0x"""		4990597	0					
ANR	4991655	Argument	2		4990597	2					
ANR	4991656	PrimaryExpression	2		4990597	0					
ANR	4991657	CompoundStatement		226:35:4356:4356	4990597	1					
ANR	4991658	ExpressionStatement	"eprintf ( ""Need hex value with `0x' prefix e.g. 0x41414142\\n"" )"	342:3:8032:8093	4990597	0	True				
ANR	4991659	CallExpression	"eprintf ( ""Need hex value with `0x' prefix e.g. 0x41414142\\n"" )"		4990597	0					
ANR	4991660	Callee	eprintf		4990597	0					
ANR	4991661	Identifier	eprintf		4990597	0					
ANR	4991662	ArgumentList	"""Need hex value with `0x' prefix e.g. 0x41414142\\n"""		4990597	1					
ANR	4991663	Argument	"""Need hex value with `0x' prefix e.g. 0x41414142\\n"""		4990597	0					
ANR	4991664	PrimaryExpression	"""Need hex value with `0x' prefix e.g. 0x41414142\\n"""		4990597	0					
ANR	4991665	ExpressionStatement	free ( sequence )	343:3:8098:8113	4990597	1	True				
ANR	4991666	CallExpression	free ( sequence )		4990597	0					
ANR	4991667	Callee	free		4990597	0					
ANR	4991668	Identifier	free		4990597	0					
ANR	4991669	ArgumentList	sequence		4990597	1					
ANR	4991670	Argument	sequence		4990597	0					
ANR	4991671	Identifier	sequence		4990597	0					
ANR	4991672	ExpressionStatement	r_egg_free ( egg )	344:3:8118:8134	4990597	2	True				
ANR	4991673	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4991674	Callee	r_egg_free		4990597	0					
ANR	4991675	Identifier	r_egg_free		4990597	0					
ANR	4991676	ArgumentList	egg		4990597	1					
ANR	4991677	Argument	egg		4990597	0					
ANR	4991678	Identifier	egg		4990597	0					
ANR	4991679	ReturnStatement	return 1 ;	345:3:8139:8147	4990597	3	True				
ANR	4991680	PrimaryExpression	1		4990597	0					
ANR	4991681	ExpressionStatement	"get_offset = r_num_math ( 0 , sequence )"	348:2:8156:8193	4990597	1	True				
ANR	4991682	AssignmentExpression	"get_offset = r_num_math ( 0 , sequence )"		4990597	0		=			
ANR	4991683	Identifier	get_offset		4990597	0					
ANR	4991684	CallExpression	"r_num_math ( 0 , sequence )"		4990597	1					
ANR	4991685	Callee	r_num_math		4990597	0					
ANR	4991686	Identifier	r_num_math		4990597	0					
ANR	4991687	ArgumentList	0		4990597	1					
ANR	4991688	Argument	0		4990597	0					
ANR	4991689	PrimaryExpression	0		4990597	0					
ANR	4991690	Argument	sequence		4990597	1					
ANR	4991691	Identifier	sequence		4990597	0					
ANR	4991692	ExpressionStatement	"printf ( ""Little endian: %d\\n"" , r_debruijn_offset ( get_offset , false ) )"	349:2:8197:8266	4990597	2	True				
ANR	4991693	CallExpression	"printf ( ""Little endian: %d\\n"" , r_debruijn_offset ( get_offset , false ) )"		4990597	0					
ANR	4991694	Callee	printf		4990597	0					
ANR	4991695	Identifier	printf		4990597	0					
ANR	4991696	ArgumentList	"""Little endian: %d\\n"""		4990597	1					
ANR	4991697	Argument	"""Little endian: %d\\n"""		4990597	0					
ANR	4991698	PrimaryExpression	"""Little endian: %d\\n"""		4990597	0					
ANR	4991699	Argument	"r_debruijn_offset ( get_offset , false )"		4990597	1					
ANR	4991700	CallExpression	"r_debruijn_offset ( get_offset , false )"		4990597	0					
ANR	4991701	Callee	r_debruijn_offset		4990597	0					
ANR	4991702	Identifier	r_debruijn_offset		4990597	0					
ANR	4991703	ArgumentList	get_offset		4990597	1					
ANR	4991704	Argument	get_offset		4990597	0					
ANR	4991705	Identifier	get_offset		4990597	0					
ANR	4991706	Argument	false		4990597	1					
ANR	4991707	Identifier	false		4990597	0					
ANR	4991708	ExpressionStatement	"printf ( ""Big endian: %d\\n"" , r_debruijn_offset ( get_offset , true ) )"	350:2:8270:8335	4990597	3	True				
ANR	4991709	CallExpression	"printf ( ""Big endian: %d\\n"" , r_debruijn_offset ( get_offset , true ) )"		4990597	0					
ANR	4991710	Callee	printf		4990597	0					
ANR	4991711	Identifier	printf		4990597	0					
ANR	4991712	ArgumentList	"""Big endian: %d\\n"""		4990597	1					
ANR	4991713	Argument	"""Big endian: %d\\n"""		4990597	0					
ANR	4991714	PrimaryExpression	"""Big endian: %d\\n"""		4990597	0					
ANR	4991715	Argument	"r_debruijn_offset ( get_offset , true )"		4990597	1					
ANR	4991716	CallExpression	"r_debruijn_offset ( get_offset , true )"		4990597	0					
ANR	4991717	Callee	r_debruijn_offset		4990597	0					
ANR	4991718	Identifier	r_debruijn_offset		4990597	0					
ANR	4991719	ArgumentList	get_offset		4990597	1					
ANR	4991720	Argument	get_offset		4990597	0					
ANR	4991721	Identifier	get_offset		4990597	0					
ANR	4991722	Argument	true		4990597	1					
ANR	4991723	Identifier	true		4990597	0					
ANR	4991724	ExpressionStatement	free ( sequence )	351:2:8339:8354	4990597	4	True				
ANR	4991725	CallExpression	free ( sequence )		4990597	0					
ANR	4991726	Callee	free		4990597	0					
ANR	4991727	Identifier	free		4990597	0					
ANR	4991728	ArgumentList	sequence		4990597	1					
ANR	4991729	Argument	sequence		4990597	0					
ANR	4991730	Identifier	sequence		4990597	0					
ANR	4991731	ExpressionStatement	r_egg_free ( egg )	352:2:8358:8374	4990597	5	True				
ANR	4991732	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4991733	Callee	r_egg_free		4990597	0					
ANR	4991734	Identifier	r_egg_free		4990597	0					
ANR	4991735	ArgumentList	egg		4990597	1					
ANR	4991736	Argument	egg		4990597	0					
ANR	4991737	Identifier	egg		4990597	0					
ANR	4991738	ReturnStatement	return 0 ;	353:2:8378:8386	4990597	6	True				
ANR	4991739	PrimaryExpression	0		4990597	0					
ANR	4991740	ExpressionStatement	"r_egg_setup ( egg , arch , bits , 0 , os )"	357:1:8412:8448	4990597	31	True				
ANR	4991741	CallExpression	"r_egg_setup ( egg , arch , bits , 0 , os )"		4990597	0					
ANR	4991742	Callee	r_egg_setup		4990597	0					
ANR	4991743	Identifier	r_egg_setup		4990597	0					
ANR	4991744	ArgumentList	egg		4990597	1					
ANR	4991745	Argument	egg		4990597	0					
ANR	4991746	Identifier	egg		4990597	0					
ANR	4991747	Argument	arch		4990597	1					
ANR	4991748	Identifier	arch		4990597	0					
ANR	4991749	Argument	bits		4990597	2					
ANR	4991750	Identifier	bits		4990597	0					
ANR	4991751	Argument	0		4990597	3					
ANR	4991752	PrimaryExpression	0		4990597	0					
ANR	4991753	Argument	os		4990597	4					
ANR	4991754	Identifier	os		4990597	0					
ANR	4991755	IfStatement	if ( file )		4990597	32					
ANR	4991756	Condition	file	358:5:8455:8458	4990597	0	True				
ANR	4991757	Identifier	file		4990597	0					
ANR	4991758	CompoundStatement		243:11:4790:4790	4990597	1					
ANR	4991759	IfStatement	"if ( ! strcmp ( file , ""-"" ) )"		4990597	0					
ANR	4991760	Condition	"! strcmp ( file , ""-"" )"	359:6:8469:8487	4990597	0	True				
ANR	4991761	UnaryOperationExpression	"! strcmp ( file , ""-"" )"		4990597	0					
ANR	4991762	UnaryOperator	!		4990597	0					
ANR	4991763	CallExpression	"strcmp ( file , ""-"" )"		4990597	1					
ANR	4991764	Callee	strcmp		4990597	0					
ANR	4991765	Identifier	strcmp		4990597	0					
ANR	4991766	ArgumentList	file		4990597	1					
ANR	4991767	Argument	file		4990597	0					
ANR	4991768	Identifier	file		4990597	0					
ANR	4991769	Argument	"""-"""		4990597	1					
ANR	4991770	PrimaryExpression	"""-"""		4990597	0					
ANR	4991771	CompoundStatement		245:3:4824:4838	4990597	1					
ANR	4991772	IdentifierDeclStatement	char buf [ 1024 ] ;	360:3:8495:8509	4990597	0	True				
ANR	4991773	IdentifierDecl	buf [ 1024 ]		4990597	0					
ANR	4991774	IdentifierDeclType	char [ 1024 ]		4990597	0					
ANR	4991775	Identifier	buf		4990597	1					
ANR	4991776	PrimaryExpression	1024		4990597	2					
ANR	4991777	ForStatement	for ( ; ; )		4990597	1					
ANR	4991778	CompoundStatement		246:12:4852:4852	4990597	0					
ANR	4991779	IfStatement	"if ( ! fgets ( buf , sizeof ( buf ) - 1 , stdin ) )"		4990597	0					
ANR	4991780	Condition	"! fgets ( buf , sizeof ( buf ) - 1 , stdin )"	362:8:8533:8569	4990597	0	True				
ANR	4991781	UnaryOperationExpression	"! fgets ( buf , sizeof ( buf ) - 1 , stdin )"		4990597	0					
ANR	4991782	UnaryOperator	!		4990597	0					
ANR	4991783	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , stdin )"		4990597	1					
ANR	4991784	Callee	fgets		4990597	0					
ANR	4991785	Identifier	fgets		4990597	0					
ANR	4991786	ArgumentList	buf		4990597	1					
ANR	4991787	Argument	buf		4990597	0					
ANR	4991788	Identifier	buf		4990597	0					
ANR	4991789	Argument	sizeof ( buf ) - 1		4990597	1					
ANR	4991790	AdditiveExpression	sizeof ( buf ) - 1		4990597	0		-			
ANR	4991791	SizeofExpression	sizeof ( buf )		4990597	0					
ANR	4991792	Sizeof	sizeof		4990597	0					
ANR	4991793	SizeofOperand	buf		4990597	1					
ANR	4991794	PrimaryExpression	1		4990597	1					
ANR	4991795	Argument	stdin		4990597	2					
ANR	4991796	Identifier	stdin		4990597	0					
ANR	4991797	CompoundStatement		247:47:4901:4901	4990597	1					
ANR	4991798	BreakStatement	break ;	363:5:8579:8584	4990597	0	True				
ANR	4991799	IfStatement	if ( feof ( stdin ) )		4990597	1					
ANR	4991800	Condition	feof ( stdin )	365:8:8600:8611	4990597	0	True				
ANR	4991801	CallExpression	feof ( stdin )		4990597	0					
ANR	4991802	Callee	feof		4990597	0					
ANR	4991803	Identifier	feof		4990597	0					
ANR	4991804	ArgumentList	stdin		4990597	1					
ANR	4991805	Argument	stdin		4990597	0					
ANR	4991806	Identifier	stdin		4990597	0					
ANR	4991807	CompoundStatement		250:22:4943:4943	4990597	1					
ANR	4991808	BreakStatement	break ;	366:5:8621:8626	4990597	0	True				
ANR	4991809	ExpressionStatement	"r_egg_load ( egg , buf , 0 )"	368:4:8638:8662	4990597	2	True				
ANR	4991810	CallExpression	"r_egg_load ( egg , buf , 0 )"		4990597	0					
ANR	4991811	Callee	r_egg_load		4990597	0					
ANR	4991812	Identifier	r_egg_load		4990597	0					
ANR	4991813	ArgumentList	egg		4990597	1					
ANR	4991814	Argument	egg		4990597	0					
ANR	4991815	Identifier	egg		4990597	0					
ANR	4991816	Argument	buf		4990597	1					
ANR	4991817	Identifier	buf		4990597	0					
ANR	4991818	Argument	0		4990597	2					
ANR	4991819	PrimaryExpression	0		4990597	0					
ANR	4991820	ElseStatement	else		4990597	0					
ANR	4991821	IfStatement	"if ( strstr ( file , "".c"" ) )"		4990597	0					
ANR	4991822	Condition	"strstr ( file , "".c"" )"	370:13:8682:8700	4990597	0	True				
ANR	4991823	CallExpression	"strstr ( file , "".c"" )"		4990597	0					
ANR	4991824	Callee	strstr		4990597	0					
ANR	4991825	Identifier	strstr		4990597	0					
ANR	4991826	ArgumentList	file		4990597	1					
ANR	4991827	Argument	file		4990597	0					
ANR	4991828	Identifier	file		4990597	0					
ANR	4991829	Argument	""".c"""		4990597	1					
ANR	4991830	PrimaryExpression	""".c"""		4990597	0					
ANR	4991831	CompoundStatement		266:3:5297:5336	4990597	1					
ANR	4991832	IdentifierDeclStatement	char * fileSanitized = strdup ( file ) ;	371:3:8708:8743	4990597	0	True				
ANR	4991833	IdentifierDecl	* fileSanitized = strdup ( file )		4990597	0					
ANR	4991834	IdentifierDeclType	char *		4990597	0					
ANR	4991835	Identifier	fileSanitized		4990597	1					
ANR	4991836	AssignmentExpression	* fileSanitized = strdup ( file )		4990597	2		=			
ANR	4991837	Identifier	fileSanitized		4990597	0					
ANR	4991838	CallExpression	strdup ( file )		4990597	1					
ANR	4991839	Callee	strdup		4990597	0					
ANR	4991840	Identifier	strdup		4990597	0					
ANR	4991841	ArgumentList	file		4990597	1					
ANR	4991842	Argument	file		4990597	0					
ANR	4991843	Identifier	file		4990597	0					
ANR	4991844	ExpressionStatement	r_str_sanitize ( fileSanitized )	372:3:8748:8778	4990597	1	True				
ANR	4991845	CallExpression	r_str_sanitize ( fileSanitized )		4990597	0					
ANR	4991846	Callee	r_str_sanitize		4990597	0					
ANR	4991847	Identifier	r_str_sanitize		4990597	0					
ANR	4991848	ArgumentList	fileSanitized		4990597	1					
ANR	4991849	Argument	fileSanitized		4990597	0					
ANR	4991850	Identifier	fileSanitized		4990597	0					
ANR	4991851	IdentifierDeclStatement	"char * textFile = r_egg_Cfile_parser ( fileSanitized , arch , os , bits ) ;"	373:3:8783:8850	4990597	2	True				
ANR	4991852	IdentifierDecl	"* textFile = r_egg_Cfile_parser ( fileSanitized , arch , os , bits )"		4990597	0					
ANR	4991853	IdentifierDeclType	char *		4990597	0					
ANR	4991854	Identifier	textFile		4990597	1					
ANR	4991855	AssignmentExpression	"* textFile = r_egg_Cfile_parser ( fileSanitized , arch , os , bits )"		4990597	2		=			
ANR	4991856	Identifier	textFile		4990597	0					
ANR	4991857	CallExpression	"r_egg_Cfile_parser ( fileSanitized , arch , os , bits )"		4990597	1					
ANR	4991858	Callee	r_egg_Cfile_parser		4990597	0					
ANR	4991859	Identifier	r_egg_Cfile_parser		4990597	0					
ANR	4991860	ArgumentList	fileSanitized		4990597	1					
ANR	4991861	Argument	fileSanitized		4990597	0					
ANR	4991862	Identifier	fileSanitized		4990597	0					
ANR	4991863	Argument	arch		4990597	1					
ANR	4991864	Identifier	arch		4990597	0					
ANR	4991865	Argument	os		4990597	2					
ANR	4991866	Identifier	os		4990597	0					
ANR	4991867	Argument	bits		4990597	3					
ANR	4991868	Identifier	bits		4990597	0					
ANR	4991869	IfStatement	if ( ! textFile )		4990597	3					
ANR	4991870	Condition	! textFile	375:7:8860:8868	4990597	0	True				
ANR	4991871	UnaryOperationExpression	! textFile		4990597	0					
ANR	4991872	UnaryOperator	!		4990597	0					
ANR	4991873	Identifier	textFile		4990597	1					
ANR	4991874	CompoundStatement		260:18:5200:5200	4990597	1					
ANR	4991875	ExpressionStatement	"eprintf ( ""Failure while parsing '%s'\\n"" , fileSanitized )"	376:4:8877:8932	4990597	0	True				
ANR	4991876	CallExpression	"eprintf ( ""Failure while parsing '%s'\\n"" , fileSanitized )"		4990597	0					
ANR	4991877	Callee	eprintf		4990597	0					
ANR	4991878	Identifier	eprintf		4990597	0					
ANR	4991879	ArgumentList	"""Failure while parsing '%s'\\n"""		4990597	1					
ANR	4991880	Argument	"""Failure while parsing '%s'\\n"""		4990597	0					
ANR	4991881	PrimaryExpression	"""Failure while parsing '%s'\\n"""		4990597	0					
ANR	4991882	Argument	fileSanitized		4990597	1					
ANR	4991883	Identifier	fileSanitized		4990597	0					
ANR	4991884	GotoStatement	goto fail ;	377:4:8938:8947	4990597	1	True				
ANR	4991885	Identifier	fail		4990597	0					
ANR	4991886	IdentifierDeclStatement	int l ;	380:3:8958:8963	4990597	4	True				
ANR	4991887	IdentifierDecl	l		4990597	0					
ANR	4991888	IdentifierDeclType	int		4990597	0					
ANR	4991889	Identifier	l		4990597	1					
ANR	4991890	IdentifierDeclStatement	"char * buf = r_file_slurp ( textFile , & l ) ;"	381:3:8968:9007	4990597	5	True				
ANR	4991891	IdentifierDecl	"* buf = r_file_slurp ( textFile , & l )"		4990597	0					
ANR	4991892	IdentifierDeclType	char *		4990597	0					
ANR	4991893	Identifier	buf		4990597	1					
ANR	4991894	AssignmentExpression	"* buf = r_file_slurp ( textFile , & l )"		4990597	2		=			
ANR	4991895	Identifier	buf		4990597	0					
ANR	4991896	CallExpression	"r_file_slurp ( textFile , & l )"		4990597	1					
ANR	4991897	Callee	r_file_slurp		4990597	0					
ANR	4991898	Identifier	r_file_slurp		4990597	0					
ANR	4991899	ArgumentList	textFile		4990597	1					
ANR	4991900	Argument	textFile		4990597	0					
ANR	4991901	Identifier	textFile		4990597	0					
ANR	4991902	Argument	& l		4990597	1					
ANR	4991903	UnaryOperationExpression	& l		4990597	0					
ANR	4991904	UnaryOperator	&		4990597	0					
ANR	4991905	Identifier	l		4990597	1					
ANR	4991906	IfStatement	if ( buf && l > 0 )		4990597	6					
ANR	4991907	Condition	buf && l > 0	382:7:9016:9027	4990597	0	True				
ANR	4991908	AndExpression	buf && l > 0		4990597	0		&&			
ANR	4991909	Identifier	buf		4990597	0					
ANR	4991910	RelationalExpression	l > 0		4990597	1		>			
ANR	4991911	Identifier	l		4990597	0					
ANR	4991912	PrimaryExpression	0		4990597	1					
ANR	4991913	CompoundStatement		267:21:5359:5359	4990597	1					
ANR	4991914	ExpressionStatement	"r_egg_raw ( egg , ( const ut8 * ) buf , l )"	383:4:9036:9071	4990597	0	True				
ANR	4991915	CallExpression	"r_egg_raw ( egg , ( const ut8 * ) buf , l )"		4990597	0					
ANR	4991916	Callee	r_egg_raw		4990597	0					
ANR	4991917	Identifier	r_egg_raw		4990597	0					
ANR	4991918	ArgumentList	egg		4990597	1					
ANR	4991919	Argument	egg		4990597	0					
ANR	4991920	Identifier	egg		4990597	0					
ANR	4991921	Argument	( const ut8 * ) buf		4990597	1					
ANR	4991922	CastExpression	( const ut8 * ) buf		4990597	0					
ANR	4991923	CastTarget	const ut8 *		4990597	0					
ANR	4991924	Identifier	buf		4990597	1					
ANR	4991925	Argument	l		4990597	2					
ANR	4991926	Identifier	l		4990597	0					
ANR	4991927	ElseStatement	else		4990597	0					
ANR	4991928	CompoundStatement		269:10:5412:5412	4990597	0					
ANR	4991929	ExpressionStatement	"eprintf ( ""Error loading '%s'\\n"" , textFile )"	385:4:9089:9131	4990597	0	True				
ANR	4991930	CallExpression	"eprintf ( ""Error loading '%s'\\n"" , textFile )"		4990597	0					
ANR	4991931	Callee	eprintf		4990597	0					
ANR	4991932	Identifier	eprintf		4990597	0					
ANR	4991933	ArgumentList	"""Error loading '%s'\\n"""		4990597	1					
ANR	4991934	Argument	"""Error loading '%s'\\n"""		4990597	0					
ANR	4991935	PrimaryExpression	"""Error loading '%s'\\n"""		4990597	0					
ANR	4991936	Argument	textFile		4990597	1					
ANR	4991937	Identifier	textFile		4990597	0					
ANR	4991938	ExpressionStatement	r_file_rm ( textFile )	388:3:9142:9162	4990597	7	True				
ANR	4991939	CallExpression	r_file_rm ( textFile )		4990597	0					
ANR	4991940	Callee	r_file_rm		4990597	0					
ANR	4991941	Identifier	r_file_rm		4990597	0					
ANR	4991942	ArgumentList	textFile		4990597	1					
ANR	4991943	Argument	textFile		4990597	0					
ANR	4991944	Identifier	textFile		4990597	0					
ANR	4991945	ExpressionStatement	free ( fileSanitized )	389:3:9167:9187	4990597	8	True				
ANR	4991946	CallExpression	free ( fileSanitized )		4990597	0					
ANR	4991947	Callee	free		4990597	0					
ANR	4991948	Identifier	free		4990597	0					
ANR	4991949	ArgumentList	fileSanitized		4990597	1					
ANR	4991950	Argument	fileSanitized		4990597	0					
ANR	4991951	Identifier	fileSanitized		4990597	0					
ANR	4991952	ExpressionStatement	free ( textFile )	390:3:9192:9207	4990597	9	True				
ANR	4991953	CallExpression	free ( textFile )		4990597	0					
ANR	4991954	Callee	free		4990597	0					
ANR	4991955	Identifier	free		4990597	0					
ANR	4991956	ArgumentList	textFile		4990597	1					
ANR	4991957	Argument	textFile		4990597	0					
ANR	4991958	Identifier	textFile		4990597	0					
ANR	4991959	ExpressionStatement	free ( buf )	391:3:9212:9222	4990597	10	True				
ANR	4991960	CallExpression	free ( buf )		4990597	0					
ANR	4991961	Callee	free		4990597	0					
ANR	4991962	Identifier	free		4990597	0					
ANR	4991963	ArgumentList	buf		4990597	1					
ANR	4991964	Argument	buf		4990597	0					
ANR	4991965	Identifier	buf		4990597	0					
ANR	4991966	ElseStatement	else		4990597	0					
ANR	4991967	CompoundStatement		277:9:5562:5562	4990597	0					
ANR	4991968	IfStatement	"if ( strstr ( file , "".s"" ) || strstr ( file , "".asm"" ) )"		4990597	0					
ANR	4991969	Condition	"strstr ( file , "".s"" ) || strstr ( file , "".asm"" )"	393:7:9242:9285	4990597	0	True				
ANR	4991970	OrExpression	"strstr ( file , "".s"" ) || strstr ( file , "".asm"" )"		4990597	0		||			
ANR	4991971	CallExpression	"strstr ( file , "".s"" )"		4990597	0					
ANR	4991972	Callee	strstr		4990597	0					
ANR	4991973	Identifier	strstr		4990597	0					
ANR	4991974	ArgumentList	file		4990597	1					
ANR	4991975	Argument	file		4990597	0					
ANR	4991976	Identifier	file		4990597	0					
ANR	4991977	Argument	""".s"""		4990597	1					
ANR	4991978	PrimaryExpression	""".s"""		4990597	0					
ANR	4991979	CallExpression	"strstr ( file , "".asm"" )"		4990597	1					
ANR	4991980	Callee	strstr		4990597	0					
ANR	4991981	Identifier	strstr		4990597	0					
ANR	4991982	ArgumentList	file		4990597	1					
ANR	4991983	Argument	file		4990597	0					
ANR	4991984	Identifier	file		4990597	0					
ANR	4991985	Argument	""".asm"""		4990597	1					
ANR	4991986	PrimaryExpression	""".asm"""		4990597	0					
ANR	4991987	CompoundStatement		278:53:5617:5617	4990597	1					
ANR	4991988	ExpressionStatement	fmt = 'a'	394:4:9294:9303	4990597	0	True				
ANR	4991989	AssignmentExpression	fmt = 'a'		4990597	0		=			
ANR	4991990	Identifier	fmt		4990597	0					
ANR	4991991	PrimaryExpression	'a'		4990597	1					
ANR	4991992	ElseStatement	else		4990597	0					
ANR	4991993	CompoundStatement		280:10:5644:5644	4990597	0					
ANR	4991994	ExpressionStatement	fmt = 0	396:4:9321:9328	4990597	0	True				
ANR	4991995	AssignmentExpression	fmt = 0		4990597	0		=			
ANR	4991996	Identifier	fmt		4990597	0					
ANR	4991997	PrimaryExpression	0		4990597	1					
ANR	4991998	IfStatement	"if ( ! r_egg_include ( egg , file , fmt ) )"		4990597	1					
ANR	4991999	Condition	"! r_egg_include ( egg , file , fmt )"	398:7:9342:9372	4990597	0	True				
ANR	4992000	UnaryOperationExpression	"! r_egg_include ( egg , file , fmt )"		4990597	0					
ANR	4992001	UnaryOperator	!		4990597	0					
ANR	4992002	CallExpression	"r_egg_include ( egg , file , fmt )"		4990597	1					
ANR	4992003	Callee	r_egg_include		4990597	0					
ANR	4992004	Identifier	r_egg_include		4990597	0					
ANR	4992005	ArgumentList	egg		4990597	1					
ANR	4992006	Argument	egg		4990597	0					
ANR	4992007	Identifier	egg		4990597	0					
ANR	4992008	Argument	file		4990597	1					
ANR	4992009	Identifier	file		4990597	0					
ANR	4992010	Argument	fmt		4990597	2					
ANR	4992011	Identifier	fmt		4990597	0					
ANR	4992012	CompoundStatement		283:40:5704:5704	4990597	1					
ANR	4992013	ExpressionStatement	"eprintf ( ""Cannot open '%s'\\n"" , file )"	399:4:9381:9417	4990597	0	True				
ANR	4992014	CallExpression	"eprintf ( ""Cannot open '%s'\\n"" , file )"		4990597	0					
ANR	4992015	Callee	eprintf		4990597	0					
ANR	4992016	Identifier	eprintf		4990597	0					
ANR	4992017	ArgumentList	"""Cannot open '%s'\\n"""		4990597	1					
ANR	4992018	Argument	"""Cannot open '%s'\\n"""		4990597	0					
ANR	4992019	PrimaryExpression	"""Cannot open '%s'\\n"""		4990597	0					
ANR	4992020	Argument	file		4990597	1					
ANR	4992021	Identifier	file		4990597	0					
ANR	4992022	GotoStatement	goto fail ;	400:4:9423:9432	4990597	1	True				
ANR	4992023	Identifier	fail		4990597	0					
ANR	4992024	IfStatement	if ( ! r_egg_compile ( egg ) )		4990597	33					
ANR	4992025	Condition	! r_egg_compile ( egg )	406:5:9488:9507	4990597	0	True				
ANR	4992026	UnaryOperationExpression	! r_egg_compile ( egg )		4990597	0					
ANR	4992027	UnaryOperator	!		4990597	0					
ANR	4992028	CallExpression	r_egg_compile ( egg )		4990597	1					
ANR	4992029	Callee	r_egg_compile		4990597	0					
ANR	4992030	Identifier	r_egg_compile		4990597	0					
ANR	4992031	ArgumentList	egg		4990597	1					
ANR	4992032	Argument	egg		4990597	0					
ANR	4992033	Identifier	egg		4990597	0					
ANR	4992034	CompoundStatement		291:27:5839:5839	4990597	1					
ANR	4992035	IfStatement	if ( ! fmt )		4990597	0					
ANR	4992036	Condition	! fmt	407:6:9518:9521	4990597	0	True				
ANR	4992037	UnaryOperationExpression	! fmt		4990597	0					
ANR	4992038	UnaryOperator	!		4990597	0					
ANR	4992039	Identifier	fmt		4990597	1					
ANR	4992040	CompoundStatement		292:12:5853:5853	4990597	1					
ANR	4992041	ExpressionStatement	"eprintf ( ""r_egg_compile: fail\\n"" )"	408:3:9529:9562	4990597	0	True				
ANR	4992042	CallExpression	"eprintf ( ""r_egg_compile: fail\\n"" )"		4990597	0					
ANR	4992043	Callee	eprintf		4990597	0					
ANR	4992044	Identifier	eprintf		4990597	0					
ANR	4992045	ArgumentList	"""r_egg_compile: fail\\n"""		4990597	1					
ANR	4992046	Argument	"""r_egg_compile: fail\\n"""		4990597	0					
ANR	4992047	PrimaryExpression	"""r_egg_compile: fail\\n"""		4990597	0					
ANR	4992048	ExpressionStatement	r_egg_free ( egg )	409:3:9567:9583	4990597	1	True				
ANR	4992049	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4992050	Callee	r_egg_free		4990597	0					
ANR	4992051	Identifier	r_egg_free		4990597	0					
ANR	4992052	ArgumentList	egg		4990597	1					
ANR	4992053	Argument	egg		4990597	0					
ANR	4992054	Identifier	egg		4990597	0					
ANR	4992055	ReturnStatement	return 1 ;	410:3:9588:9596	4990597	2	True				
ANR	4992056	PrimaryExpression	1		4990597	0					
ANR	4992057	IfStatement	if ( str )		4990597	34					
ANR	4992058	Condition	str	415:5:9642:9644	4990597	0	True				
ANR	4992059	Identifier	str		4990597	0					
ANR	4992060	CompoundStatement		301:2:5980:6000	4990597	1					
ANR	4992061	IdentifierDeclStatement	int l = strlen ( str ) ;	416:2:9651:9671	4990597	0	True				
ANR	4992062	IdentifierDecl	l = strlen ( str )		4990597	0					
ANR	4992063	IdentifierDeclType	int		4990597	0					
ANR	4992064	Identifier	l		4990597	1					
ANR	4992065	AssignmentExpression	l = strlen ( str )		4990597	2		=			
ANR	4992066	Identifier	l		4990597	0					
ANR	4992067	CallExpression	strlen ( str )		4990597	1					
ANR	4992068	Callee	strlen		4990597	0					
ANR	4992069	Identifier	strlen		4990597	0					
ANR	4992070	ArgumentList	str		4990597	1					
ANR	4992071	Argument	str		4990597	0					
ANR	4992072	Identifier	str		4990597	0					
ANR	4992073	IfStatement	if ( l > 0 )		4990597	1					
ANR	4992074	Condition	l > 0	417:6:9679:9683	4990597	0	True				
ANR	4992075	RelationalExpression	l > 0		4990597	0		>			
ANR	4992076	Identifier	l		4990597	0					
ANR	4992077	PrimaryExpression	0		4990597	1					
ANR	4992078	CompoundStatement		302:13:6015:6015	4990597	1					
ANR	4992079	ExpressionStatement	"r_egg_raw ( egg , ( const ut8 * ) str , l )"	418:3:9691:9726	4990597	0	True				
ANR	4992080	CallExpression	"r_egg_raw ( egg , ( const ut8 * ) str , l )"		4990597	0					
ANR	4992081	Callee	r_egg_raw		4990597	0					
ANR	4992082	Identifier	r_egg_raw		4990597	0					
ANR	4992083	ArgumentList	egg		4990597	1					
ANR	4992084	Argument	egg		4990597	0					
ANR	4992085	Identifier	egg		4990597	0					
ANR	4992086	Argument	( const ut8 * ) str		4990597	1					
ANR	4992087	CastExpression	( const ut8 * ) str		4990597	0					
ANR	4992088	CastTarget	const ut8 *		4990597	0					
ANR	4992089	Identifier	str		4990597	1					
ANR	4992090	Argument	l		4990597	2					
ANR	4992091	Identifier	l		4990597	0					
ANR	4992092	IfStatement	if ( contents )		4990597	35					
ANR	4992093	Condition	contents	423:5:9758:9765	4990597	0	True				
ANR	4992094	Identifier	contents		4990597	0					
ANR	4992095	CompoundStatement		310:2:6110:6149	4990597	1					
ANR	4992096	IdentifierDeclStatement	int l ;	424:2:9772:9777	4990597	0	True				
ANR	4992097	IdentifierDecl	l		4990597	0					
ANR	4992098	IdentifierDeclType	int		4990597	0					
ANR	4992099	Identifier	l		4990597	1					
ANR	4992100	IdentifierDeclStatement	"char * buf = r_file_slurp ( contents , & l ) ;"	425:2:9781:9820	4990597	1	True				
ANR	4992101	IdentifierDecl	"* buf = r_file_slurp ( contents , & l )"		4990597	0					
ANR	4992102	IdentifierDeclType	char *		4990597	0					
ANR	4992103	Identifier	buf		4990597	1					
ANR	4992104	AssignmentExpression	"* buf = r_file_slurp ( contents , & l )"		4990597	2		=			
ANR	4992105	Identifier	buf		4990597	0					
ANR	4992106	CallExpression	"r_file_slurp ( contents , & l )"		4990597	1					
ANR	4992107	Callee	r_file_slurp		4990597	0					
ANR	4992108	Identifier	r_file_slurp		4990597	0					
ANR	4992109	ArgumentList	contents		4990597	1					
ANR	4992110	Argument	contents		4990597	0					
ANR	4992111	Identifier	contents		4990597	0					
ANR	4992112	Argument	& l		4990597	1					
ANR	4992113	UnaryOperationExpression	& l		4990597	0					
ANR	4992114	UnaryOperator	&		4990597	0					
ANR	4992115	Identifier	l		4990597	1					
ANR	4992116	IfStatement	if ( buf && l > 0 )		4990597	2					
ANR	4992117	Condition	buf && l > 0	426:6:9828:9839	4990597	0	True				
ANR	4992118	AndExpression	buf && l > 0		4990597	0		&&			
ANR	4992119	Identifier	buf		4990597	0					
ANR	4992120	RelationalExpression	l > 0		4990597	1		>			
ANR	4992121	Identifier	l		4990597	0					
ANR	4992122	PrimaryExpression	0		4990597	1					
ANR	4992123	CompoundStatement		311:20:6171:6171	4990597	1					
ANR	4992124	ExpressionStatement	"r_egg_raw ( egg , ( const ut8 * ) buf , l )"	427:3:9847:9882	4990597	0	True				
ANR	4992125	CallExpression	"r_egg_raw ( egg , ( const ut8 * ) buf , l )"		4990597	0					
ANR	4992126	Callee	r_egg_raw		4990597	0					
ANR	4992127	Identifier	r_egg_raw		4990597	0					
ANR	4992128	ArgumentList	egg		4990597	1					
ANR	4992129	Argument	egg		4990597	0					
ANR	4992130	Identifier	egg		4990597	0					
ANR	4992131	Argument	( const ut8 * ) buf		4990597	1					
ANR	4992132	CastExpression	( const ut8 * ) buf		4990597	0					
ANR	4992133	CastTarget	const ut8 *		4990597	0					
ANR	4992134	Identifier	buf		4990597	1					
ANR	4992135	Argument	l		4990597	2					
ANR	4992136	Identifier	l		4990597	0					
ANR	4992137	ElseStatement	else		4990597	0					
ANR	4992138	CompoundStatement		313:9:6222:6222	4990597	0					
ANR	4992139	ExpressionStatement	"eprintf ( ""Error loading '%s'\\n"" , contents )"	429:3:9898:9940	4990597	0	True				
ANR	4992140	CallExpression	"eprintf ( ""Error loading '%s'\\n"" , contents )"		4990597	0					
ANR	4992141	Callee	eprintf		4990597	0					
ANR	4992142	Identifier	eprintf		4990597	0					
ANR	4992143	ArgumentList	"""Error loading '%s'\\n"""		4990597	1					
ANR	4992144	Argument	"""Error loading '%s'\\n"""		4990597	0					
ANR	4992145	PrimaryExpression	"""Error loading '%s'\\n"""		4990597	0					
ANR	4992146	Argument	contents		4990597	1					
ANR	4992147	Identifier	contents		4990597	0					
ANR	4992148	ExpressionStatement	free ( buf )	431:2:9948:9958	4990597	3	True				
ANR	4992149	CallExpression	free ( buf )		4990597	0					
ANR	4992150	Callee	free		4990597	0					
ANR	4992151	Identifier	free		4990597	0					
ANR	4992152	ArgumentList	buf		4990597	1					
ANR	4992153	Argument	buf		4990597	0					
ANR	4992154	Identifier	buf		4990597	0					
ANR	4992155	IfStatement	if ( shellcode )		4990597	36					
ANR	4992156	Condition	shellcode	435:5:9987:9995	4990597	0	True				
ANR	4992157	Identifier	shellcode		4990597	0					
ANR	4992158	CompoundStatement		320:16:6327:6327	4990597	1					
ANR	4992159	IfStatement	"if ( ! r_egg_shellcode ( egg , shellcode ) )"		4990597	0					
ANR	4992160	Condition	"! r_egg_shellcode ( egg , shellcode )"	436:6:10006:10038	4990597	0	True				
ANR	4992161	UnaryOperationExpression	"! r_egg_shellcode ( egg , shellcode )"		4990597	0					
ANR	4992162	UnaryOperator	!		4990597	0					
ANR	4992163	CallExpression	"r_egg_shellcode ( egg , shellcode )"		4990597	1					
ANR	4992164	Callee	r_egg_shellcode		4990597	0					
ANR	4992165	Identifier	r_egg_shellcode		4990597	0					
ANR	4992166	ArgumentList	egg		4990597	1					
ANR	4992167	Argument	egg		4990597	0					
ANR	4992168	Identifier	egg		4990597	0					
ANR	4992169	Argument	shellcode		4990597	1					
ANR	4992170	Identifier	shellcode		4990597	0					
ANR	4992171	CompoundStatement		321:41:6370:6370	4990597	1					
ANR	4992172	ExpressionStatement	"eprintf ( ""Unknown shellcode '%s'\\n"" , shellcode )"	437:3:10046:10093	4990597	0	True				
ANR	4992173	CallExpression	"eprintf ( ""Unknown shellcode '%s'\\n"" , shellcode )"		4990597	0					
ANR	4992174	Callee	eprintf		4990597	0					
ANR	4992175	Identifier	eprintf		4990597	0					
ANR	4992176	ArgumentList	"""Unknown shellcode '%s'\\n"""		4990597	1					
ANR	4992177	Argument	"""Unknown shellcode '%s'\\n"""		4990597	0					
ANR	4992178	PrimaryExpression	"""Unknown shellcode '%s'\\n"""		4990597	0					
ANR	4992179	Argument	shellcode		4990597	1					
ANR	4992180	Identifier	shellcode		4990597	0					
ANR	4992181	ExpressionStatement	r_egg_free ( egg )	438:3:10098:10114	4990597	1	True				
ANR	4992182	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4992183	Callee	r_egg_free		4990597	0					
ANR	4992184	Identifier	r_egg_free		4990597	0					
ANR	4992185	ArgumentList	egg		4990597	1					
ANR	4992186	Argument	egg		4990597	0					
ANR	4992187	Identifier	egg		4990597	0					
ANR	4992188	ReturnStatement	return 1 ;	439:3:10119:10127	4990597	2	True				
ANR	4992189	PrimaryExpression	1		4990597	0					
ANR	4992190	IfStatement	if ( bytes )		4990597	37					
ANR	4992191	Condition	bytes	444:5:10160:10164	4990597	0	True				
ANR	4992192	Identifier	bytes		4990597	0					
ANR	4992193	CompoundStatement		331:2:6540:6574	4990597	1					
ANR	4992194	IdentifierDeclStatement	ut8 * b = malloc ( strlen ( bytes ) + 1 ) ;	445:2:10171:10207	4990597	0	True				
ANR	4992195	IdentifierDecl	* b = malloc ( strlen ( bytes ) + 1 )		4990597	0					
ANR	4992196	IdentifierDeclType	ut8 *		4990597	0					
ANR	4992197	Identifier	b		4990597	1					
ANR	4992198	AssignmentExpression	* b = malloc ( strlen ( bytes ) + 1 )		4990597	2		=			
ANR	4992199	Identifier	b		4990597	0					
ANR	4992200	CallExpression	malloc ( strlen ( bytes ) + 1 )		4990597	1					
ANR	4992201	Callee	malloc		4990597	0					
ANR	4992202	Identifier	malloc		4990597	0					
ANR	4992203	ArgumentList	strlen ( bytes ) + 1		4990597	1					
ANR	4992204	Argument	strlen ( bytes ) + 1		4990597	0					
ANR	4992205	AdditiveExpression	strlen ( bytes ) + 1		4990597	0		+			
ANR	4992206	CallExpression	strlen ( bytes )		4990597	0					
ANR	4992207	Callee	strlen		4990597	0					
ANR	4992208	Identifier	strlen		4990597	0					
ANR	4992209	ArgumentList	bytes		4990597	1					
ANR	4992210	Argument	bytes		4990597	0					
ANR	4992211	Identifier	bytes		4990597	0					
ANR	4992212	PrimaryExpression	1		4990597	1					
ANR	4992213	IdentifierDeclStatement	"int len = r_hex_str2bin ( bytes , b ) ;"	446:2:10211:10245	4990597	1	True				
ANR	4992214	IdentifierDecl	"len = r_hex_str2bin ( bytes , b )"		4990597	0					
ANR	4992215	IdentifierDeclType	int		4990597	0					
ANR	4992216	Identifier	len		4990597	1					
ANR	4992217	AssignmentExpression	"len = r_hex_str2bin ( bytes , b )"		4990597	2		=			
ANR	4992218	Identifier	len		4990597	0					
ANR	4992219	CallExpression	"r_hex_str2bin ( bytes , b )"		4990597	1					
ANR	4992220	Callee	r_hex_str2bin		4990597	0					
ANR	4992221	Identifier	r_hex_str2bin		4990597	0					
ANR	4992222	ArgumentList	bytes		4990597	1					
ANR	4992223	Argument	bytes		4990597	0					
ANR	4992224	Identifier	bytes		4990597	0					
ANR	4992225	Argument	b		4990597	1					
ANR	4992226	Identifier	b		4990597	0					
ANR	4992227	IfStatement	if ( len > 0 )		4990597	2					
ANR	4992228	Condition	len > 0	447:6:10253:10259	4990597	0	True				
ANR	4992229	RelationalExpression	len > 0		4990597	0		>			
ANR	4992230	Identifier	len		4990597	0					
ANR	4992231	PrimaryExpression	0		4990597	1					
ANR	4992232	CompoundStatement		332:15:6591:6591	4990597	1					
ANR	4992233	IfStatement	"if ( ! r_egg_raw ( egg , b , len ) )"		4990597	0					
ANR	4992234	Condition	"! r_egg_raw ( egg , b , len )"	448:7:10271:10294	4990597	0	True				
ANR	4992235	UnaryOperationExpression	"! r_egg_raw ( egg , b , len )"		4990597	0					
ANR	4992236	UnaryOperator	!		4990597	0					
ANR	4992237	CallExpression	"r_egg_raw ( egg , b , len )"		4990597	1					
ANR	4992238	Callee	r_egg_raw		4990597	0					
ANR	4992239	Identifier	r_egg_raw		4990597	0					
ANR	4992240	ArgumentList	egg		4990597	1					
ANR	4992241	Argument	egg		4990597	0					
ANR	4992242	Identifier	egg		4990597	0					
ANR	4992243	Argument	b		4990597	1					
ANR	4992244	Identifier	b		4990597	0					
ANR	4992245	Argument	len		4990597	2					
ANR	4992246	Identifier	len		4990597	0					
ANR	4992247	CompoundStatement		333:33:6626:6626	4990597	1					
ANR	4992248	ExpressionStatement	"eprintf ( ""Unknown '%s'\\n"" , shellcode )"	449:4:10303:10340	4990597	0	True				
ANR	4992249	CallExpression	"eprintf ( ""Unknown '%s'\\n"" , shellcode )"		4990597	0					
ANR	4992250	Callee	eprintf		4990597	0					
ANR	4992251	Identifier	eprintf		4990597	0					
ANR	4992252	ArgumentList	"""Unknown '%s'\\n"""		4990597	1					
ANR	4992253	Argument	"""Unknown '%s'\\n"""		4990597	0					
ANR	4992254	PrimaryExpression	"""Unknown '%s'\\n"""		4990597	0					
ANR	4992255	Argument	shellcode		4990597	1					
ANR	4992256	Identifier	shellcode		4990597	0					
ANR	4992257	ExpressionStatement	r_egg_free ( egg )	450:4:10346:10362	4990597	1	True				
ANR	4992258	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4992259	Callee	r_egg_free		4990597	0					
ANR	4992260	Identifier	r_egg_free		4990597	0					
ANR	4992261	ArgumentList	egg		4990597	1					
ANR	4992262	Argument	egg		4990597	0					
ANR	4992263	Identifier	egg		4990597	0					
ANR	4992264	ReturnStatement	return 1 ;	451:4:10368:10376	4990597	2	True				
ANR	4992265	PrimaryExpression	1		4990597	0					
ANR	4992266	ElseStatement	else		4990597	0					
ANR	4992267	CompoundStatement		338:9:6721:6721	4990597	0					
ANR	4992268	ExpressionStatement	"eprintf ( ""Invalid hexpair string for -B\\n"" )"	454:3:10397:10440	4990597	0	True				
ANR	4992269	CallExpression	"eprintf ( ""Invalid hexpair string for -B\\n"" )"		4990597	0					
ANR	4992270	Callee	eprintf		4990597	0					
ANR	4992271	Identifier	eprintf		4990597	0					
ANR	4992272	ArgumentList	"""Invalid hexpair string for -B\\n"""		4990597	1					
ANR	4992273	Argument	"""Invalid hexpair string for -B\\n"""		4990597	0					
ANR	4992274	PrimaryExpression	"""Invalid hexpair string for -B\\n"""		4990597	0					
ANR	4992275	ExpressionStatement	free ( b )	456:2:10448:10456	4990597	3	True				
ANR	4992276	CallExpression	free ( b )		4990597	0					
ANR	4992277	Callee	free		4990597	0					
ANR	4992278	Identifier	free		4990597	0					
ANR	4992279	ArgumentList	b		4990597	1					
ANR	4992280	Argument	b		4990597	0					
ANR	4992281	Identifier	b		4990597	0					
ANR	4992282	ExpressionStatement	free ( bytes )	457:2:10460:10472	4990597	4	True				
ANR	4992283	CallExpression	free ( bytes )		4990597	0					
ANR	4992284	Callee	free		4990597	0					
ANR	4992285	Identifier	free		4990597	0					
ANR	4992286	ArgumentList	bytes		4990597	1					
ANR	4992287	Argument	bytes		4990597	0					
ANR	4992288	Identifier	bytes		4990597	0					
ANR	4992289	ExpressionStatement	bytes = NULL	458:2:10476:10488	4990597	5	True				
ANR	4992290	AssignmentExpression	bytes = NULL		4990597	0		=			
ANR	4992291	Identifier	bytes		4990597	0					
ANR	4992292	Identifier	NULL		4990597	1					
ANR	4992293	IfStatement	if ( ofileauto )		4990597	38					
ANR	4992294	Condition	ofileauto	462:5:10548:10556	4990597	0	True				
ANR	4992295	Identifier	ofileauto		4990597	0					
ANR	4992296	CompoundStatement		348:2:6892:6898	4990597	1					
ANR	4992297	IdentifierDeclStatement	int fd ;	463:2:10563:10569	4990597	0	True				
ANR	4992298	IdentifierDecl	fd		4990597	0					
ANR	4992299	IdentifierDeclType	int		4990597	0					
ANR	4992300	Identifier	fd		4990597	1					
ANR	4992301	IfStatement	if ( file )		4990597	1					
ANR	4992302	Condition	file	464:6:10577:10580	4990597	0	True				
ANR	4992303	Identifier	file		4990597	0					
ANR	4992304	CompoundStatement		350:3:6917:6948	4990597	1					
ANR	4992305	IdentifierDeclStatement	"char * o , * q , * p = strdup ( file ) ;"	465:3:10588:10619	4990597	0	True				
ANR	4992306	IdentifierDecl	* o		4990597	0					
ANR	4992307	IdentifierDeclType	char *		4990597	0					
ANR	4992308	Identifier	o		4990597	1					
ANR	4992309	IdentifierDecl	* q		4990597	1					
ANR	4992310	IdentifierDeclType	char *		4990597	0					
ANR	4992311	Identifier	q		4990597	1					
ANR	4992312	IdentifierDecl	* p = strdup ( file )		4990597	2					
ANR	4992313	IdentifierDeclType	char *		4990597	0					
ANR	4992314	Identifier	p		4990597	1					
ANR	4992315	AssignmentExpression	* p = strdup ( file )		4990597	2		=			
ANR	4992316	Identifier	p		4990597	0					
ANR	4992317	CallExpression	strdup ( file )		4990597	1					
ANR	4992318	Callee	strdup		4990597	0					
ANR	4992319	Identifier	strdup		4990597	0					
ANR	4992320	ArgumentList	file		4990597	1					
ANR	4992321	Argument	file		4990597	0					
ANR	4992322	Identifier	file		4990597	0					
ANR	4992323	IfStatement	"if ( ( o = strchr ( p , '.' ) ) )"		4990597	1					
ANR	4992324	Condition	"o = strchr ( p , '.' )"	466:8:10629:10649	4990597	0	True				
ANR	4992325	AssignmentExpression	"o = strchr ( p , '.' )"		4990597	0		=			
ANR	4992326	Identifier	o		4990597	0					
ANR	4992327	CallExpression	"strchr ( p , '.' )"		4990597	1					
ANR	4992328	Callee	strchr		4990597	0					
ANR	4992329	Identifier	strchr		4990597	0					
ANR	4992330	ArgumentList	p		4990597	1					
ANR	4992331	Argument	p		4990597	0					
ANR	4992332	Identifier	p		4990597	0					
ANR	4992333	Argument	'.'		4990597	1					
ANR	4992334	PrimaryExpression	'.'		4990597	0					
ANR	4992335	CompoundStatement		351:32:6982:6982	4990597	1					
ANR	4992336	WhileStatement	"while ( ( q = strchr ( o + 1 , '.' ) ) )"		4990597	0					
ANR	4992337	Condition	"q = strchr ( o + 1 , '.' )"	467:12:10667:10691	4990597	0	True				
ANR	4992338	AssignmentExpression	"q = strchr ( o + 1 , '.' )"		4990597	0		=			
ANR	4992339	Identifier	q		4990597	0					
ANR	4992340	CallExpression	"strchr ( o + 1 , '.' )"		4990597	1					
ANR	4992341	Callee	strchr		4990597	0					
ANR	4992342	Identifier	strchr		4990597	0					
ANR	4992343	ArgumentList	o + 1		4990597	1					
ANR	4992344	Argument	o + 1		4990597	0					
ANR	4992345	AdditiveExpression	o + 1		4990597	0		+			
ANR	4992346	Identifier	o		4990597	0					
ANR	4992347	PrimaryExpression	1		4990597	1					
ANR	4992348	Argument	'.'		4990597	1					
ANR	4992349	PrimaryExpression	'.'		4990597	0					
ANR	4992350	CompoundStatement		352:40:7024:7024	4990597	1					
ANR	4992351	ExpressionStatement	o = q	468:5:10702:10707	4990597	0	True				
ANR	4992352	AssignmentExpression	o = q		4990597	0		=			
ANR	4992353	Identifier	o		4990597	0					
ANR	4992354	Identifier	q		4990597	1					
ANR	4992355	ExpressionStatement	* o = 0	470:4:10719:10725	4990597	1	True				
ANR	4992356	AssignmentExpression	* o = 0		4990597	0		=			
ANR	4992357	UnaryOperationExpression	* o		4990597	0					
ANR	4992358	UnaryOperator	*		4990597	0					
ANR	4992359	Identifier	o		4990597	1					
ANR	4992360	PrimaryExpression	0		4990597	1					
ANR	4992361	ExpressionStatement	"fd = openfile ( p , ISEXEC )"	471:4:10731:10756	4990597	2	True				
ANR	4992362	AssignmentExpression	"fd = openfile ( p , ISEXEC )"		4990597	0		=			
ANR	4992363	Identifier	fd		4990597	0					
ANR	4992364	CallExpression	"openfile ( p , ISEXEC )"		4990597	1					
ANR	4992365	Callee	openfile		4990597	0					
ANR	4992366	Identifier	openfile		4990597	0					
ANR	4992367	ArgumentList	p		4990597	1					
ANR	4992368	Argument	p		4990597	0					
ANR	4992369	Identifier	p		4990597	0					
ANR	4992370	Argument	ISEXEC		4990597	1					
ANR	4992371	Identifier	ISEXEC		4990597	0					
ANR	4992372	ElseStatement	else		4990597	0					
ANR	4992373	CompoundStatement		357:10:7097:7097	4990597	0					
ANR	4992374	ExpressionStatement	"fd = openfile ( ""a.out"" , ISEXEC )"	473:4:10774:10805	4990597	0	True				
ANR	4992375	AssignmentExpression	"fd = openfile ( ""a.out"" , ISEXEC )"		4990597	0		=			
ANR	4992376	Identifier	fd		4990597	0					
ANR	4992377	CallExpression	"openfile ( ""a.out"" , ISEXEC )"		4990597	1					
ANR	4992378	Callee	openfile		4990597	0					
ANR	4992379	Identifier	openfile		4990597	0					
ANR	4992380	ArgumentList	"""a.out"""		4990597	1					
ANR	4992381	Argument	"""a.out"""		4990597	0					
ANR	4992382	PrimaryExpression	"""a.out"""		4990597	0					
ANR	4992383	Argument	ISEXEC		4990597	1					
ANR	4992384	Identifier	ISEXEC		4990597	0					
ANR	4992385	ExpressionStatement	free ( p )	475:3:10815:10823	4990597	2	True				
ANR	4992386	CallExpression	free ( p )		4990597	0					
ANR	4992387	Callee	free		4990597	0					
ANR	4992388	Identifier	free		4990597	0					
ANR	4992389	ArgumentList	p		4990597	1					
ANR	4992390	Argument	p		4990597	0					
ANR	4992391	Identifier	p		4990597	0					
ANR	4992392	ElseStatement	else		4990597	0					
ANR	4992393	CompoundStatement		361:9:7163:7163	4990597	0					
ANR	4992394	ExpressionStatement	"fd = openfile ( ""a.out"" , ISEXEC )"	477:3:10839:10870	4990597	0	True				
ANR	4992395	AssignmentExpression	"fd = openfile ( ""a.out"" , ISEXEC )"		4990597	0		=			
ANR	4992396	Identifier	fd		4990597	0					
ANR	4992397	CallExpression	"openfile ( ""a.out"" , ISEXEC )"		4990597	1					
ANR	4992398	Callee	openfile		4990597	0					
ANR	4992399	Identifier	openfile		4990597	0					
ANR	4992400	ArgumentList	"""a.out"""		4990597	1					
ANR	4992401	Argument	"""a.out"""		4990597	0					
ANR	4992402	PrimaryExpression	"""a.out"""		4990597	0					
ANR	4992403	Argument	ISEXEC		4990597	1					
ANR	4992404	Identifier	ISEXEC		4990597	0					
ANR	4992405	IfStatement	if ( fd == - 1 )		4990597	2					
ANR	4992406	Condition	fd == - 1	479:6:10882:10889	4990597	0	True				
ANR	4992407	EqualityExpression	fd == - 1		4990597	0		==			
ANR	4992408	Identifier	fd		4990597	0					
ANR	4992409	UnaryOperationExpression	- 1		4990597	1					
ANR	4992410	UnaryOperator	-		4990597	0					
ANR	4992411	PrimaryExpression	1		4990597	1					
ANR	4992412	CompoundStatement		364:16:7221:7221	4990597	1					
ANR	4992413	ExpressionStatement	"eprintf ( ""cannot open file '%s'\\n"" , r_optarg )"	480:3:10897:10942	4990597	0	True				
ANR	4992414	CallExpression	"eprintf ( ""cannot open file '%s'\\n"" , r_optarg )"		4990597	0					
ANR	4992415	Callee	eprintf		4990597	0					
ANR	4992416	Identifier	eprintf		4990597	0					
ANR	4992417	ArgumentList	"""cannot open file '%s'\\n"""		4990597	1					
ANR	4992418	Argument	"""cannot open file '%s'\\n"""		4990597	0					
ANR	4992419	PrimaryExpression	"""cannot open file '%s'\\n"""		4990597	0					
ANR	4992420	Argument	r_optarg		4990597	1					
ANR	4992421	Identifier	r_optarg		4990597	0					
ANR	4992422	GotoStatement	goto fail ;	481:3:10947:10956	4990597	1	True				
ANR	4992423	Identifier	fail		4990597	0					
ANR	4992424	IfStatement	if ( ofile )		4990597	39					
ANR	4992425	Condition	ofile	484:5:10970:10974	4990597	0	True				
ANR	4992426	Identifier	ofile		4990597	0					
ANR	4992427	CompoundStatement		369:12:7306:7306	4990597	1					
ANR	4992428	IfStatement	"if ( openfile ( ofile , ISEXEC ) == - 1 )"		4990597	0					
ANR	4992429	Condition	"openfile ( ofile , ISEXEC ) == - 1"	485:6:10985:11014	4990597	0	True				
ANR	4992430	EqualityExpression	"openfile ( ofile , ISEXEC ) == - 1"		4990597	0		==			
ANR	4992431	CallExpression	"openfile ( ofile , ISEXEC )"		4990597	0					
ANR	4992432	Callee	openfile		4990597	0					
ANR	4992433	Identifier	openfile		4990597	0					
ANR	4992434	ArgumentList	ofile		4990597	1					
ANR	4992435	Argument	ofile		4990597	0					
ANR	4992436	Identifier	ofile		4990597	0					
ANR	4992437	Argument	ISEXEC		4990597	1					
ANR	4992438	Identifier	ISEXEC		4990597	0					
ANR	4992439	UnaryOperationExpression	- 1		4990597	1					
ANR	4992440	UnaryOperator	-		4990597	0					
ANR	4992441	PrimaryExpression	1		4990597	1					
ANR	4992442	CompoundStatement		370:38:7346:7346	4990597	1					
ANR	4992443	ExpressionStatement	"eprintf ( ""cannot open file '%s'\\n"" , ofile )"	486:3:11022:11064	4990597	0	True				
ANR	4992444	CallExpression	"eprintf ( ""cannot open file '%s'\\n"" , ofile )"		4990597	0					
ANR	4992445	Callee	eprintf		4990597	0					
ANR	4992446	Identifier	eprintf		4990597	0					
ANR	4992447	ArgumentList	"""cannot open file '%s'\\n"""		4990597	1					
ANR	4992448	Argument	"""cannot open file '%s'\\n"""		4990597	0					
ANR	4992449	PrimaryExpression	"""cannot open file '%s'\\n"""		4990597	0					
ANR	4992450	Argument	ofile		4990597	1					
ANR	4992451	Identifier	ofile		4990597	0					
ANR	4992452	GotoStatement	goto fail ;	487:3:11069:11078	4990597	1	True				
ANR	4992453	Identifier	fail		4990597	0					
ANR	4992454	IfStatement	if ( ! r_egg_assemble ( egg ) )		4990597	40					
ANR	4992455	Condition	! r_egg_assemble ( egg )	492:5:11116:11136	4990597	0	True				
ANR	4992456	UnaryOperationExpression	! r_egg_assemble ( egg )		4990597	0					
ANR	4992457	UnaryOperator	!		4990597	0					
ANR	4992458	CallExpression	r_egg_assemble ( egg )		4990597	1					
ANR	4992459	Callee	r_egg_assemble		4990597	0					
ANR	4992460	Identifier	r_egg_assemble		4990597	0					
ANR	4992461	ArgumentList	egg		4990597	1					
ANR	4992462	Argument	egg		4990597	0					
ANR	4992463	Identifier	egg		4990597	0					
ANR	4992464	CompoundStatement		377:28:7468:7468	4990597	1					
ANR	4992465	ExpressionStatement	"eprintf ( ""r_egg_assemble: invalid assembly\\n"" )"	493:2:11143:11189	4990597	0	True				
ANR	4992466	CallExpression	"eprintf ( ""r_egg_assemble: invalid assembly\\n"" )"		4990597	0					
ANR	4992467	Callee	eprintf		4990597	0					
ANR	4992468	Identifier	eprintf		4990597	0					
ANR	4992469	ArgumentList	"""r_egg_assemble: invalid assembly\\n"""		4990597	1					
ANR	4992470	Argument	"""r_egg_assemble: invalid assembly\\n"""		4990597	0					
ANR	4992471	PrimaryExpression	"""r_egg_assemble: invalid assembly\\n"""		4990597	0					
ANR	4992472	GotoStatement	goto fail ;	494:2:11193:11202	4990597	1	True				
ANR	4992473	Identifier	fail		4990597	0					
ANR	4992474	IfStatement	if ( encoder )		4990597	41					
ANR	4992475	Condition	encoder	496:5:11212:11218	4990597	0	True				
ANR	4992476	Identifier	encoder		4990597	0					
ANR	4992477	CompoundStatement		381:14:7550:7550	4990597	1					
ANR	4992478	IfStatement	"if ( ! r_egg_encode ( egg , encoder ) )"		4990597	0					
ANR	4992479	Condition	"! r_egg_encode ( egg , encoder )"	497:6:11229:11256	4990597	0	True				
ANR	4992480	UnaryOperationExpression	"! r_egg_encode ( egg , encoder )"		4990597	0					
ANR	4992481	UnaryOperator	!		4990597	0					
ANR	4992482	CallExpression	"r_egg_encode ( egg , encoder )"		4990597	1					
ANR	4992483	Callee	r_egg_encode		4990597	0					
ANR	4992484	Identifier	r_egg_encode		4990597	0					
ANR	4992485	ArgumentList	egg		4990597	1					
ANR	4992486	Argument	egg		4990597	0					
ANR	4992487	Identifier	egg		4990597	0					
ANR	4992488	Argument	encoder		4990597	1					
ANR	4992489	Identifier	encoder		4990597	0					
ANR	4992490	CompoundStatement		382:36:7588:7588	4990597	1					
ANR	4992491	ExpressionStatement	"eprintf ( ""Invalid encoder '%s'\\n"" , encoder )"	498:3:11264:11307	4990597	0	True				
ANR	4992492	CallExpression	"eprintf ( ""Invalid encoder '%s'\\n"" , encoder )"		4990597	0					
ANR	4992493	Callee	eprintf		4990597	0					
ANR	4992494	Identifier	eprintf		4990597	0					
ANR	4992495	ArgumentList	"""Invalid encoder '%s'\\n"""		4990597	1					
ANR	4992496	Argument	"""Invalid encoder '%s'\\n"""		4990597	0					
ANR	4992497	PrimaryExpression	"""Invalid encoder '%s'\\n"""		4990597	0					
ANR	4992498	Argument	encoder		4990597	1					
ANR	4992499	Identifier	encoder		4990597	0					
ANR	4992500	ExpressionStatement	r_egg_free ( egg )	499:3:11312:11328	4990597	1	True				
ANR	4992501	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4992502	Callee	r_egg_free		4990597	0					
ANR	4992503	Identifier	r_egg_free		4990597	0					
ANR	4992504	ArgumentList	egg		4990597	1					
ANR	4992505	Argument	egg		4990597	0					
ANR	4992506	Identifier	egg		4990597	0					
ANR	4992507	ReturnStatement	return 1 ;	500:3:11333:11341	4990597	2	True				
ANR	4992508	PrimaryExpression	1		4990597	0					
ANR	4992509	IfStatement	if ( padding )		4990597	42					
ANR	4992510	Condition	padding	505:5:11372:11378	4990597	0	True				
ANR	4992511	Identifier	padding		4990597	0					
ANR	4992512	CompoundStatement		390:14:7710:7710	4990597	1					
ANR	4992513	ExpressionStatement	"r_egg_padding ( egg , padding )"	506:2:11385:11413	4990597	0	True				
ANR	4992514	CallExpression	"r_egg_padding ( egg , padding )"		4990597	0					
ANR	4992515	Callee	r_egg_padding		4990597	0					
ANR	4992516	Identifier	r_egg_padding		4990597	0					
ANR	4992517	ArgumentList	egg		4990597	1					
ANR	4992518	Argument	egg		4990597	0					
ANR	4992519	Identifier	egg		4990597	0					
ANR	4992520	Argument	padding		4990597	1					
ANR	4992521	Identifier	padding		4990597	0					
ANR	4992522	IfStatement	if ( pattern )		4990597	43					
ANR	4992523	Condition	pattern	510:5:11440:11446	4990597	0	True				
ANR	4992524	Identifier	pattern		4990597	0					
ANR	4992525	CompoundStatement		395:14:7778:7778	4990597	1					
ANR	4992526	ExpressionStatement	"r_egg_pattern ( egg , r_num_math ( NULL , pattern ) )"	511:2:11453:11500	4990597	0	True				
ANR	4992527	CallExpression	"r_egg_pattern ( egg , r_num_math ( NULL , pattern ) )"		4990597	0					
ANR	4992528	Callee	r_egg_pattern		4990597	0					
ANR	4992529	Identifier	r_egg_pattern		4990597	0					
ANR	4992530	ArgumentList	egg		4990597	1					
ANR	4992531	Argument	egg		4990597	0					
ANR	4992532	Identifier	egg		4990597	0					
ANR	4992533	Argument	"r_num_math ( NULL , pattern )"		4990597	1					
ANR	4992534	CallExpression	"r_num_math ( NULL , pattern )"		4990597	0					
ANR	4992535	Callee	r_num_math		4990597	0					
ANR	4992536	Identifier	r_num_math		4990597	0					
ANR	4992537	ArgumentList	NULL		4990597	1					
ANR	4992538	Argument	NULL		4990597	0					
ANR	4992539	Identifier	NULL		4990597	0					
ANR	4992540	Argument	pattern		4990597	1					
ANR	4992541	Identifier	pattern		4990597	0					
ANR	4992542	IfStatement	if ( ! egg -> bin )		4990597	44					
ANR	4992543	Condition	! egg -> bin	515:5:11529:11537	4990597	0	True				
ANR	4992544	UnaryOperationExpression	! egg -> bin		4990597	0					
ANR	4992545	UnaryOperator	!		4990597	0					
ANR	4992546	PtrMemberAccess	egg -> bin		4990597	1					
ANR	4992547	Identifier	egg		4990597	0					
ANR	4992548	Identifier	bin		4990597	1					
ANR	4992549	CompoundStatement		400:16:7869:7869	4990597	1					
ANR	4992550	ExpressionStatement	egg -> bin = r_buf_new ( )	516:2:11544:11567	4990597	0	True				
ANR	4992551	AssignmentExpression	egg -> bin = r_buf_new ( )		4990597	0		=			
ANR	4992552	PtrMemberAccess	egg -> bin		4990597	0					
ANR	4992553	Identifier	egg		4990597	0					
ANR	4992554	Identifier	bin		4990597	1					
ANR	4992555	CallExpression	r_buf_new ( )		4990597	1					
ANR	4992556	Callee	r_buf_new		4990597	0					
ANR	4992557	Identifier	r_buf_new		4990597	0					
ANR	4992558	ArgumentList			4990597	1					
ANR	4992559	IfStatement	if ( ! ( b = r_egg_get_bin ( egg ) ) )		4990597	45					
ANR	4992560	Condition	! ( b = r_egg_get_bin ( egg ) )	518:5:11577:11602	4990597	0	True				
ANR	4992561	UnaryOperationExpression	! ( b = r_egg_get_bin ( egg ) )		4990597	0					
ANR	4992562	UnaryOperator	!		4990597	0					
ANR	4992563	AssignmentExpression	b = r_egg_get_bin ( egg )		4990597	1		=			
ANR	4992564	Identifier	b		4990597	0					
ANR	4992565	CallExpression	r_egg_get_bin ( egg )		4990597	1					
ANR	4992566	Callee	r_egg_get_bin		4990597	0					
ANR	4992567	Identifier	r_egg_get_bin		4990597	0					
ANR	4992568	ArgumentList	egg		4990597	1					
ANR	4992569	Argument	egg		4990597	0					
ANR	4992570	Identifier	egg		4990597	0					
ANR	4992571	CompoundStatement		403:33:7934:7934	4990597	1					
ANR	4992572	ExpressionStatement	"eprintf ( ""r_egg_get_bin: invalid egg :(\\n"" )"	519:2:11609:11652	4990597	0	True				
ANR	4992573	CallExpression	"eprintf ( ""r_egg_get_bin: invalid egg :(\\n"" )"		4990597	0					
ANR	4992574	Callee	eprintf		4990597	0					
ANR	4992575	Identifier	eprintf		4990597	0					
ANR	4992576	ArgumentList	"""r_egg_get_bin: invalid egg :(\\n"""		4990597	1					
ANR	4992577	Argument	"""r_egg_get_bin: invalid egg :(\\n"""		4990597	0					
ANR	4992578	PrimaryExpression	"""r_egg_get_bin: invalid egg :(\\n"""		4990597	0					
ANR	4992579	GotoStatement	goto fail ;	520:2:11656:11665	4990597	1	True				
ANR	4992580	Identifier	fail		4990597	0					
ANR	4992581	ExpressionStatement	r_egg_finalize ( egg )	522:1:11671:11691	4990597	46	True				
ANR	4992582	CallExpression	r_egg_finalize ( egg )		4990597	0					
ANR	4992583	Callee	r_egg_finalize		4990597	0					
ANR	4992584	Identifier	r_egg_finalize		4990597	0					
ANR	4992585	ArgumentList	egg		4990597	1					
ANR	4992586	Argument	egg		4990597	0					
ANR	4992587	Identifier	egg		4990597	0					
ANR	4992588	IfStatement	if ( show_asm )		4990597	47					
ANR	4992589	Condition	show_asm	524:5:11699:11706	4990597	0	True				
ANR	4992590	Identifier	show_asm		4990597	0					
ANR	4992591	CompoundStatement		409:15:8038:8038	4990597	1					
ANR	4992592	ExpressionStatement	"printf ( ""%s\\n"" , r_egg_get_assembly ( egg ) )"	525:2:11713:11754	4990597	0	True				
ANR	4992593	CallExpression	"printf ( ""%s\\n"" , r_egg_get_assembly ( egg ) )"		4990597	0					
ANR	4992594	Callee	printf		4990597	0					
ANR	4992595	Identifier	printf		4990597	0					
ANR	4992596	ArgumentList	"""%s\\n"""		4990597	1					
ANR	4992597	Argument	"""%s\\n"""		4990597	0					
ANR	4992598	PrimaryExpression	"""%s\\n"""		4990597	0					
ANR	4992599	Argument	r_egg_get_assembly ( egg )		4990597	1					
ANR	4992600	CallExpression	r_egg_get_assembly ( egg )		4990597	0					
ANR	4992601	Callee	r_egg_get_assembly		4990597	0					
ANR	4992602	Identifier	r_egg_get_assembly		4990597	0					
ANR	4992603	ArgumentList	egg		4990597	1					
ANR	4992604	Argument	egg		4990597	0					
ANR	4992605	Identifier	egg		4990597	0					
ANR	4992606	IfStatement	if ( show_raw || show_hex || show_execute )		4990597	48					
ANR	4992607	Condition	show_raw || show_hex || show_execute	528:5:11765:11800	4990597	0	True				
ANR	4992608	OrExpression	show_raw || show_hex || show_execute		4990597	0		||			
ANR	4992609	Identifier	show_raw		4990597	0					
ANR	4992610	OrExpression	show_hex || show_execute		4990597	1		||			
ANR	4992611	Identifier	show_hex		4990597	0					
ANR	4992612	Identifier	show_execute		4990597	1					
ANR	4992613	CompoundStatement		413:43:8132:8132	4990597	1					
ANR	4992614	IfStatement	if ( show_execute )		4990597	0					
ANR	4992615	Condition	show_execute	529:6:11811:11822	4990597	0	True				
ANR	4992616	Identifier	show_execute		4990597	0					
ANR	4992617	CompoundStatement		415:3:8159:8164	4990597	1					
ANR	4992618	IdentifierDeclStatement	int r ;	530:3:11830:11835	4990597	0	True				
ANR	4992619	IdentifierDecl	r		4990597	0					
ANR	4992620	IdentifierDeclType	int		4990597	0					
ANR	4992621	Identifier	r		4990597	1					
ANR	4992622	IfStatement	if ( show_execute_rop )		4990597	1					
ANR	4992623	Condition	show_execute_rop	531:7:11844:11859	4990597	0	True				
ANR	4992624	Identifier	show_execute_rop		4990597	0					
ANR	4992625	CompoundStatement		416:25:8191:8191	4990597	1					
ANR	4992626	ExpressionStatement	r = r_egg_run_rop ( egg )	532:4:11868:11891	4990597	0	True				
ANR	4992627	AssignmentExpression	r = r_egg_run_rop ( egg )		4990597	0		=			
ANR	4992628	Identifier	r		4990597	0					
ANR	4992629	CallExpression	r_egg_run_rop ( egg )		4990597	1					
ANR	4992630	Callee	r_egg_run_rop		4990597	0					
ANR	4992631	Identifier	r_egg_run_rop		4990597	0					
ANR	4992632	ArgumentList	egg		4990597	1					
ANR	4992633	Argument	egg		4990597	0					
ANR	4992634	Identifier	egg		4990597	0					
ANR	4992635	ElseStatement	else		4990597	0					
ANR	4992636	CompoundStatement		418:10:8232:8232	4990597	0					
ANR	4992637	ExpressionStatement	r = r_egg_run ( egg )	534:4:11909:11928	4990597	0	True				
ANR	4992638	AssignmentExpression	r = r_egg_run ( egg )		4990597	0		=			
ANR	4992639	Identifier	r		4990597	0					
ANR	4992640	CallExpression	r_egg_run ( egg )		4990597	1					
ANR	4992641	Callee	r_egg_run		4990597	0					
ANR	4992642	Identifier	r_egg_run		4990597	0					
ANR	4992643	ArgumentList	egg		4990597	1					
ANR	4992644	Argument	egg		4990597	0					
ANR	4992645	Identifier	egg		4990597	0					
ANR	4992646	ExpressionStatement	r_egg_free ( egg )	536:3:11938:11954	4990597	2	True				
ANR	4992647	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4992648	Callee	r_egg_free		4990597	0					
ANR	4992649	Identifier	r_egg_free		4990597	0					
ANR	4992650	ArgumentList	egg		4990597	1					
ANR	4992651	Argument	egg		4990597	0					
ANR	4992652	Identifier	egg		4990597	0					
ANR	4992653	ReturnStatement	return r ;	537:3:11959:11967	4990597	3	True				
ANR	4992654	Identifier	r		4990597	0					
ANR	4992655	ExpressionStatement	b = r_egg_get_bin ( egg )	539:2:11975:11998	4990597	1	True				
ANR	4992656	AssignmentExpression	b = r_egg_get_bin ( egg )		4990597	0		=			
ANR	4992657	Identifier	b		4990597	0					
ANR	4992658	CallExpression	r_egg_get_bin ( egg )		4990597	1					
ANR	4992659	Callee	r_egg_get_bin		4990597	0					
ANR	4992660	Identifier	r_egg_get_bin		4990597	0					
ANR	4992661	ArgumentList	egg		4990597	1					
ANR	4992662	Argument	egg		4990597	0					
ANR	4992663	Identifier	egg		4990597	0					
ANR	4992664	IfStatement	if ( show_raw )		4990597	2					
ANR	4992665	Condition	show_raw	540:6:12006:12013	4990597	0	True				
ANR	4992666	Identifier	show_raw		4990597	0					
ANR	4992667	CompoundStatement		427:3:8364:8402	4990597	1					
ANR	4992668	IdentifierDeclStatement	ut64 blen ;	541:3:12021:12030	4990597	0	True				
ANR	4992669	IdentifierDecl	blen		4990597	0					
ANR	4992670	IdentifierDeclType	ut64		4990597	0					
ANR	4992671	Identifier	blen		4990597	1					
ANR	4992672	IdentifierDeclStatement	"const ut8 * tmp = r_buf_data ( b , & blen ) ;"	542:3:12035:12073	4990597	1	True				
ANR	4992673	IdentifierDecl	"* tmp = r_buf_data ( b , & blen )"		4990597	0					
ANR	4992674	IdentifierDeclType	const ut8 *		4990597	0					
ANR	4992675	Identifier	tmp		4990597	1					
ANR	4992676	AssignmentExpression	"* tmp = r_buf_data ( b , & blen )"		4990597	2		=			
ANR	4992677	Identifier	tmp		4990597	0					
ANR	4992678	CallExpression	"r_buf_data ( b , & blen )"		4990597	1					
ANR	4992679	Callee	r_buf_data		4990597	0					
ANR	4992680	Identifier	r_buf_data		4990597	0					
ANR	4992681	ArgumentList	b		4990597	1					
ANR	4992682	Argument	b		4990597	0					
ANR	4992683	Identifier	b		4990597	0					
ANR	4992684	Argument	& blen		4990597	1					
ANR	4992685	UnaryOperationExpression	& blen		4990597	0					
ANR	4992686	UnaryOperator	&		4990597	0					
ANR	4992687	Identifier	blen		4990597	1					
ANR	4992688	IfStatement	"if ( write ( 1 , tmp , blen ) != blen )"		4990597	2					
ANR	4992689	Condition	"write ( 1 , tmp , blen ) != blen"	543:7:12082:12109	4990597	0	True				
ANR	4992690	EqualityExpression	"write ( 1 , tmp , blen ) != blen"		4990597	0		!=			
ANR	4992691	CallExpression	"write ( 1 , tmp , blen )"		4990597	0					
ANR	4992692	Callee	write		4990597	0					
ANR	4992693	Identifier	write		4990597	0					
ANR	4992694	ArgumentList	1		4990597	1					
ANR	4992695	Argument	1		4990597	0					
ANR	4992696	PrimaryExpression	1		4990597	0					
ANR	4992697	Argument	tmp		4990597	1					
ANR	4992698	Identifier	tmp		4990597	0					
ANR	4992699	Argument	blen		4990597	2					
ANR	4992700	Identifier	blen		4990597	0					
ANR	4992701	Identifier	blen		4990597	1					
ANR	4992702	CompoundStatement		428:37:8441:8441	4990597	1					
ANR	4992703	ExpressionStatement	"eprintf ( ""Failed to write buffer\\n"" )"	544:4:12118:12154	4990597	0	True				
ANR	4992704	CallExpression	"eprintf ( ""Failed to write buffer\\n"" )"		4990597	0					
ANR	4992705	Callee	eprintf		4990597	0					
ANR	4992706	Identifier	eprintf		4990597	0					
ANR	4992707	ArgumentList	"""Failed to write buffer\\n"""		4990597	1					
ANR	4992708	Argument	"""Failed to write buffer\\n"""		4990597	0					
ANR	4992709	PrimaryExpression	"""Failed to write buffer\\n"""		4990597	0					
ANR	4992710	GotoStatement	goto fail ;	545:4:12160:12169	4990597	1	True				
ANR	4992711	Identifier	fail		4990597	0					
ANR	4992712	ElseStatement	else		4990597	0					
ANR	4992713	CompoundStatement		439:3:8646:8685	4990597	0					
ANR	4992714	IfStatement	if ( ! format )		4990597	0					
ANR	4992715	Condition	! format	548:7:12194:12200	4990597	0	True				
ANR	4992716	UnaryOperationExpression	! format		4990597	0					
ANR	4992717	UnaryOperator	!		4990597	0					
ANR	4992718	Identifier	format		4990597	1					
ANR	4992719	CompoundStatement		433:16:8532:8532	4990597	1					
ANR	4992720	ExpressionStatement	"eprintf ( ""No format specified wtf\\n"" )"	549:4:12209:12246	4990597	0	True				
ANR	4992721	CallExpression	"eprintf ( ""No format specified wtf\\n"" )"		4990597	0					
ANR	4992722	Callee	eprintf		4990597	0					
ANR	4992723	Identifier	eprintf		4990597	0					
ANR	4992724	ArgumentList	"""No format specified wtf\\n"""		4990597	1					
ANR	4992725	Argument	"""No format specified wtf\\n"""		4990597	0					
ANR	4992726	PrimaryExpression	"""No format specified wtf\\n"""		4990597	0					
ANR	4992727	GotoStatement	goto fail ;	550:4:12252:12261	4990597	1	True				
ANR	4992728	Identifier	fail		4990597	0					
ANR	4992729	IdentifierDeclStatement	RPrint * p = r_print_new ( ) ;	552:3:12271:12297	4990597	1	True				
ANR	4992730	IdentifierDecl	* p = r_print_new ( )		4990597	0					
ANR	4992731	IdentifierDeclType	RPrint *		4990597	0					
ANR	4992732	Identifier	p		4990597	1					
ANR	4992733	AssignmentExpression	* p = r_print_new ( )		4990597	2		=			
ANR	4992734	Identifier	p		4990597	0					
ANR	4992735	CallExpression	r_print_new ( )		4990597	1					
ANR	4992736	Callee	r_print_new		4990597	0					
ANR	4992737	Identifier	r_print_new		4990597	0					
ANR	4992738	ArgumentList			4990597	1					
ANR	4992739	IdentifierDeclStatement	ut64 tmpsz ;	553:3:12302:12312	4990597	2	True				
ANR	4992740	IdentifierDecl	tmpsz		4990597	0					
ANR	4992741	IdentifierDeclType	ut64		4990597	0					
ANR	4992742	Identifier	tmpsz		4990597	1					
ANR	4992743	IdentifierDeclStatement	"const ut8 * tmp = r_buf_data ( b , & tmpsz ) ;"	554:3:12317:12356	4990597	3	True				
ANR	4992744	IdentifierDecl	"* tmp = r_buf_data ( b , & tmpsz )"		4990597	0					
ANR	4992745	IdentifierDeclType	const ut8 *		4990597	0					
ANR	4992746	Identifier	tmp		4990597	1					
ANR	4992747	AssignmentExpression	"* tmp = r_buf_data ( b , & tmpsz )"		4990597	2		=			
ANR	4992748	Identifier	tmp		4990597	0					
ANR	4992749	CallExpression	"r_buf_data ( b , & tmpsz )"		4990597	1					
ANR	4992750	Callee	r_buf_data		4990597	0					
ANR	4992751	Identifier	r_buf_data		4990597	0					
ANR	4992752	ArgumentList	b		4990597	1					
ANR	4992753	Argument	b		4990597	0					
ANR	4992754	Identifier	b		4990597	0					
ANR	4992755	Argument	& tmpsz		4990597	1					
ANR	4992756	UnaryOperationExpression	& tmpsz		4990597	0					
ANR	4992757	UnaryOperator	&		4990597	0					
ANR	4992758	Identifier	tmpsz		4990597	1					
ANR	4992759	SwitchStatement	switch ( * format )		4990597	4					
ANR	4992760	Condition	* format	555:11:12369:12375	4990597	0	True				
ANR	4992761	UnaryOperationExpression	* format		4990597	0					
ANR	4992762	UnaryOperator	*		4990597	0					
ANR	4992763	Identifier	format		4990597	1					
ANR	4992764	CompoundStatement		440:20:8707:8707	4990597	1					
ANR	4992765	Label	case 'c' :	556:3:12383:12391	4990597	0	True				
ANR	4992766	ExpressionStatement	"r_print_code ( p , 0 , tmp , tmpsz , 'c' )"	557:4:12397:12433	4990597	1	True				
ANR	4992767	CallExpression	"r_print_code ( p , 0 , tmp , tmpsz , 'c' )"		4990597	0					
ANR	4992768	Callee	r_print_code		4990597	0					
ANR	4992769	Identifier	r_print_code		4990597	0					
ANR	4992770	ArgumentList	p		4990597	1					
ANR	4992771	Argument	p		4990597	0					
ANR	4992772	Identifier	p		4990597	0					
ANR	4992773	Argument	0		4990597	1					
ANR	4992774	PrimaryExpression	0		4990597	0					
ANR	4992775	Argument	tmp		4990597	2					
ANR	4992776	Identifier	tmp		4990597	0					
ANR	4992777	Argument	tmpsz		4990597	3					
ANR	4992778	Identifier	tmpsz		4990597	0					
ANR	4992779	Argument	'c'		4990597	4					
ANR	4992780	PrimaryExpression	'c'		4990597	0					
ANR	4992781	BreakStatement	break ;	558:4:12439:12444	4990597	2	True				
ANR	4992782	Label	case 'j' :	559:3:12449:12457	4990597	3	True				
ANR	4992783	ExpressionStatement	"r_print_code ( p , 0 , tmp , tmpsz , 'j' )"	560:4:12477:12513	4990597	4	True				
ANR	4992784	CallExpression	"r_print_code ( p , 0 , tmp , tmpsz , 'j' )"		4990597	0					
ANR	4992785	Callee	r_print_code		4990597	0					
ANR	4992786	Identifier	r_print_code		4990597	0					
ANR	4992787	ArgumentList	p		4990597	1					
ANR	4992788	Argument	p		4990597	0					
ANR	4992789	Identifier	p		4990597	0					
ANR	4992790	Argument	0		4990597	1					
ANR	4992791	PrimaryExpression	0		4990597	0					
ANR	4992792	Argument	tmp		4990597	2					
ANR	4992793	Identifier	tmp		4990597	0					
ANR	4992794	Argument	tmpsz		4990597	3					
ANR	4992795	Identifier	tmpsz		4990597	0					
ANR	4992796	Argument	'j'		4990597	4					
ANR	4992797	PrimaryExpression	'j'		4990597	0					
ANR	4992798	BreakStatement	break ;	561:4:12519:12524	4990597	5	True				
ANR	4992799	Label	case 'r' :	562:3:12529:12537	4990597	6	True				
ANR	4992800	IfStatement	if ( show_str )		4990597	7					
ANR	4992801	Condition	show_str	563:8:12547:12554	4990597	0	True				
ANR	4992802	Identifier	show_str		4990597	0					
ANR	4992803	CompoundStatement		448:18:8886:8886	4990597	1					
ANR	4992804	ExpressionStatement	"printf ( ""\\"""" )"	564:5:12564:12577	4990597	0	True				
ANR	4992805	CallExpression	"printf ( ""\\"""" )"		4990597	0					
ANR	4992806	Callee	printf		4990597	0					
ANR	4992807	Identifier	printf		4990597	0					
ANR	4992808	ArgumentList	"""\\"""""		4990597	1					
ANR	4992809	Argument	"""\\"""""		4990597	0					
ANR	4992810	PrimaryExpression	"""\\"""""		4990597	0					
ANR	4992811	ForStatement	for ( i = 0 ; i < tmpsz ; i ++ )		4990597	1					
ANR	4992812	ForInit	i = 0 ;	565:10:12589:12594	4990597	0	True				
ANR	4992813	AssignmentExpression	i = 0		4990597	0		=			
ANR	4992814	Identifier	i		4990597	0					
ANR	4992815	PrimaryExpression	0		4990597	1					
ANR	4992816	Condition	i < tmpsz	565:17:12596:12604	4990597	1	True				
ANR	4992817	RelationalExpression	i < tmpsz		4990597	0		<			
ANR	4992818	Identifier	i		4990597	0					
ANR	4992819	Identifier	tmpsz		4990597	1					
ANR	4992820	PostIncDecOperationExpression	i ++	565:28:12607:12609	4990597	2	True				
ANR	4992821	Identifier	i		4990597	0					
ANR	4992822	IncDec	++		4990597	1					
ANR	4992823	CompoundStatement		450:33:8941:8941	4990597	3					
ANR	4992824	ExpressionStatement	"printf ( ""\\\\x%02x"" , tmp [ i ] )"	566:6:12620:12646	4990597	0	True				
ANR	4992825	CallExpression	"printf ( ""\\\\x%02x"" , tmp [ i ] )"		4990597	0					
ANR	4992826	Callee	printf		4990597	0					
ANR	4992827	Identifier	printf		4990597	0					
ANR	4992828	ArgumentList	"""\\\\x%02x"""		4990597	1					
ANR	4992829	Argument	"""\\\\x%02x"""		4990597	0					
ANR	4992830	PrimaryExpression	"""\\\\x%02x"""		4990597	0					
ANR	4992831	Argument	tmp [ i ]		4990597	1					
ANR	4992832	ArrayIndexing	tmp [ i ]		4990597	0					
ANR	4992833	Identifier	tmp		4990597	0					
ANR	4992834	Identifier	i		4990597	1					
ANR	4992835	ExpressionStatement	"printf ( ""\\""\\n"" )"	568:5:12660:12675	4990597	2	True				
ANR	4992836	CallExpression	"printf ( ""\\""\\n"" )"		4990597	0					
ANR	4992837	Callee	printf		4990597	0					
ANR	4992838	Identifier	printf		4990597	0					
ANR	4992839	ArgumentList	"""\\""\\n"""		4990597	1					
ANR	4992840	Argument	"""\\""\\n"""		4990597	0					
ANR	4992841	PrimaryExpression	"""\\""\\n"""		4990597	0					
ANR	4992842	ElseStatement	else		4990597	0					
ANR	4992843	IfStatement	if ( show_hex )		4990597	0					
ANR	4992844	Condition	show_hex	569:15:12692:12699	4990597	0	True				
ANR	4992845	Identifier	show_hex		4990597	0					
ANR	4992846	CompoundStatement		454:25:9031:9031	4990597	1					
ANR	4992847	ExpressionStatement	"r_buf_seek ( b , 0 , R_BUF_SET )"	570:5:12709:12737	4990597	0	True				
ANR	4992848	CallExpression	"r_buf_seek ( b , 0 , R_BUF_SET )"		4990597	0					
ANR	4992849	Callee	r_buf_seek		4990597	0					
ANR	4992850	Identifier	r_buf_seek		4990597	0					
ANR	4992851	ArgumentList	b		4990597	1					
ANR	4992852	Argument	b		4990597	0					
ANR	4992853	Identifier	b		4990597	0					
ANR	4992854	Argument	0		4990597	1					
ANR	4992855	PrimaryExpression	0		4990597	0					
ANR	4992856	Argument	R_BUF_SET		4990597	2					
ANR	4992857	Identifier	R_BUF_SET		4990597	0					
ANR	4992858	ForStatement	for ( i = 0 ; i < tmpsz ; i ++ )		4990597	1					
ANR	4992859	ForInit	i = 0 ;	571:10:12749:12754	4990597	0	True				
ANR	4992860	AssignmentExpression	i = 0		4990597	0		=			
ANR	4992861	Identifier	i		4990597	0					
ANR	4992862	PrimaryExpression	0		4990597	1					
ANR	4992863	Condition	i < tmpsz	571:17:12756:12764	4990597	1	True				
ANR	4992864	RelationalExpression	i < tmpsz		4990597	0		<			
ANR	4992865	Identifier	i		4990597	0					
ANR	4992866	Identifier	tmpsz		4990597	1					
ANR	4992867	PostIncDecOperationExpression	i ++	571:28:12767:12769	4990597	2	True				
ANR	4992868	Identifier	i		4990597	0					
ANR	4992869	IncDec	++		4990597	1					
ANR	4992870	CompoundStatement		456:33:9101:9101	4990597	3					
ANR	4992871	ExpressionStatement	"printf ( ""%02x"" , tmp [ i ] )"	572:6:12780:12803	4990597	0	True				
ANR	4992872	CallExpression	"printf ( ""%02x"" , tmp [ i ] )"		4990597	0					
ANR	4992873	Callee	printf		4990597	0					
ANR	4992874	Identifier	printf		4990597	0					
ANR	4992875	ArgumentList	"""%02x"""		4990597	1					
ANR	4992876	Argument	"""%02x"""		4990597	0					
ANR	4992877	PrimaryExpression	"""%02x"""		4990597	0					
ANR	4992878	Argument	tmp [ i ]		4990597	1					
ANR	4992879	ArrayIndexing	tmp [ i ]		4990597	0					
ANR	4992880	Identifier	tmp		4990597	0					
ANR	4992881	Identifier	i		4990597	1					
ANR	4992882	ExpressionStatement	"printf ( ""\\n"" )"	574:5:12817:12830	4990597	2	True				
ANR	4992883	CallExpression	"printf ( ""\\n"" )"		4990597	0					
ANR	4992884	Callee	printf		4990597	0					
ANR	4992885	Identifier	printf		4990597	0					
ANR	4992886	ArgumentList	"""\\n"""		4990597	1					
ANR	4992887	Argument	"""\\n"""		4990597	0					
ANR	4992888	PrimaryExpression	"""\\n"""		4990597	0					
ANR	4992889	BreakStatement	break ;	576:4:12870:12875	4990597	8	True				
ANR	4992890	Label	case 'p' :	577:3:12880:12888	4990597	9	True				
ANR	4992891	IfStatement	if ( strlen ( format ) >= 2 && format [ 1 ] == 'y' )		4990597	10					
ANR	4992892	Condition	strlen ( format ) >= 2 && format [ 1 ] == 'y'	578:8:12904:12942	4990597	0	True				
ANR	4992893	AndExpression	strlen ( format ) >= 2 && format [ 1 ] == 'y'		4990597	0		&&			
ANR	4992894	RelationalExpression	strlen ( format ) >= 2		4990597	0		>=			
ANR	4992895	CallExpression	strlen ( format )		4990597	0					
ANR	4992896	Callee	strlen		4990597	0					
ANR	4992897	Identifier	strlen		4990597	0					
ANR	4992898	ArgumentList	format		4990597	1					
ANR	4992899	Argument	format		4990597	0					
ANR	4992900	Identifier	format		4990597	0					
ANR	4992901	PrimaryExpression	2		4990597	1					
ANR	4992902	EqualityExpression	format [ 1 ] == 'y'		4990597	1		==			
ANR	4992903	ArrayIndexing	format [ 1 ]		4990597	0					
ANR	4992904	Identifier	format		4990597	0					
ANR	4992905	PrimaryExpression	1		4990597	1					
ANR	4992906	PrimaryExpression	'y'		4990597	1					
ANR	4992907	CompoundStatement		463:49:9274:9274	4990597	1					
ANR	4992908	ExpressionStatement	"r_print_code ( p , 0 , tmp , tmpsz , 'p' )"	579:5:12962:12998	4990597	0	True				
ANR	4992909	CallExpression	"r_print_code ( p , 0 , tmp , tmpsz , 'p' )"		4990597	0					
ANR	4992910	Callee	r_print_code		4990597	0					
ANR	4992911	Identifier	r_print_code		4990597	0					
ANR	4992912	ArgumentList	p		4990597	1					
ANR	4992913	Argument	p		4990597	0					
ANR	4992914	Identifier	p		4990597	0					
ANR	4992915	Argument	0		4990597	1					
ANR	4992916	PrimaryExpression	0		4990597	0					
ANR	4992917	Argument	tmp		4990597	2					
ANR	4992918	Identifier	tmp		4990597	0					
ANR	4992919	Argument	tmpsz		4990597	3					
ANR	4992920	Identifier	tmpsz		4990597	0					
ANR	4992921	Argument	'p'		4990597	4					
ANR	4992922	PrimaryExpression	'p'		4990597	0					
ANR	4992923	BreakStatement	break ;	581:4:13010:13015	4990597	11	True				
ANR	4992924	Label	case 'e' :	582:3:13020:13028	4990597	12	True				
ANR	4992925	Label	case 'm' :	583:3:13040:13048	4990597	13	True				
ANR	4992926	ExpressionStatement	"create ( format , arch , bits , tmp , tmpsz )"	584:4:13063:13102	4990597	14	True				
ANR	4992927	CallExpression	"create ( format , arch , bits , tmp , tmpsz )"		4990597	0					
ANR	4992928	Callee	create		4990597	0					
ANR	4992929	Identifier	create		4990597	0					
ANR	4992930	ArgumentList	format		4990597	1					
ANR	4992931	Argument	format		4990597	0					
ANR	4992932	Identifier	format		4990597	0					
ANR	4992933	Argument	arch		4990597	1					
ANR	4992934	Identifier	arch		4990597	0					
ANR	4992935	Argument	bits		4990597	2					
ANR	4992936	Identifier	bits		4990597	0					
ANR	4992937	Argument	tmp		4990597	3					
ANR	4992938	Identifier	tmp		4990597	0					
ANR	4992939	Argument	tmpsz		4990597	4					
ANR	4992940	Identifier	tmpsz		4990597	0					
ANR	4992941	BreakStatement	break ;	585:4:13108:13113	4990597	15	True				
ANR	4992942	Label	default :	586:3:13118:13125	4990597	16	True				
ANR	4992943	Identifier	default		4990597	0					
ANR	4992944	ExpressionStatement	"eprintf ( ""unknown executable format (%s)\\n"" , format )"	587:4:13131:13183	4990597	17	True				
ANR	4992945	CallExpression	"eprintf ( ""unknown executable format (%s)\\n"" , format )"		4990597	0					
ANR	4992946	Callee	eprintf		4990597	0					
ANR	4992947	Identifier	eprintf		4990597	0					
ANR	4992948	ArgumentList	"""unknown executable format (%s)\\n"""		4990597	1					
ANR	4992949	Argument	"""unknown executable format (%s)\\n"""		4990597	0					
ANR	4992950	PrimaryExpression	"""unknown executable format (%s)\\n"""		4990597	0					
ANR	4992951	Argument	format		4990597	1					
ANR	4992952	Identifier	format		4990597	0					
ANR	4992953	GotoStatement	goto fail ;	588:4:13189:13198	4990597	18	True				
ANR	4992954	Identifier	fail		4990597	0					
ANR	4992955	ExpressionStatement	r_print_free ( p )	590:3:13208:13224	4990597	5	True				
ANR	4992956	CallExpression	r_print_free ( p )		4990597	0					
ANR	4992957	Callee	r_print_free		4990597	0					
ANR	4992958	Identifier	r_print_free		4990597	0					
ANR	4992959	ArgumentList	p		4990597	1					
ANR	4992960	Argument	p		4990597	0					
ANR	4992961	Identifier	p		4990597	0					
ANR	4992962	ExpressionStatement	r_egg_free ( egg )	593:1:13234:13250	4990597	49	True				
ANR	4992963	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4992964	Callee	r_egg_free		4990597	0					
ANR	4992965	Identifier	r_egg_free		4990597	0					
ANR	4992966	ArgumentList	egg		4990597	1					
ANR	4992967	Argument	egg		4990597	0					
ANR	4992968	Identifier	egg		4990597	0					
ANR	4992969	ReturnStatement	return 0 ;	594:1:13253:13261	4990597	50	True				
ANR	4992970	PrimaryExpression	0		4990597	0					
ANR	4992971	Label	fail :	595:0:13263:13267	4990597	51	True				
ANR	4992972	Identifier	fail		4990597	0					
ANR	4992973	ExpressionStatement	r_egg_free ( egg )	596:1:13270:13286	4990597	52	True				
ANR	4992974	CallExpression	r_egg_free ( egg )		4990597	0					
ANR	4992975	Callee	r_egg_free		4990597	0					
ANR	4992976	Identifier	r_egg_free		4990597	0					
ANR	4992977	ArgumentList	egg		4990597	1					
ANR	4992978	Argument	egg		4990597	0					
ANR	4992979	Identifier	egg		4990597	0					
ANR	4992980	ReturnStatement	return 1 ;	597:1:13289:13297	4990597	53	True				
ANR	4992981	PrimaryExpression	1		4990597	0					
ANR	4992982	ReturnType	R_API int		4990597	1					
ANR	4992983	Identifier	r_main_ragg2		4990597	2					
ANR	4992984	ParameterList	"int argc , char * * argv"		4990597	3					
ANR	4992985	Parameter	int argc	116:23:3647:3654	4990597	0	True				
ANR	4992986	ParameterType	int		4990597	0					
ANR	4992987	Identifier	argc		4990597	1					
ANR	4992988	Parameter	char * * argv	116:33:3657:3667	4990597	1	True				
ANR	4992989	ParameterType	char * *		4990597	0					
ANR	4992990	Identifier	argv		4990597	1					
ANR	4992991	CFGEntryNode	ENTRY		4990597		True				
ANR	4992992	CFGExitNode	EXIT		4990597		True				
ANR	4992993	InfiniteForNode	true		4990597		True				
ANR	4992994	Symbol	stdin		4990597						
ANR	4992995	Symbol	egg		4990597						
ANR	4992996	Symbol	R_SYS_ARCH		4990597						
ANR	4992997	Symbol	usage		4990597						
ANR	4992998	Symbol	strchr		4990597						
ANR	4992999	Symbol	show_hex		4990597						
ANR	4993000	Symbol	strncmp		4990597						
ANR	4993001	Symbol	len		4990597						
ANR	4993002	Symbol	r_egg_run_rop		4990597						
ANR	4993003	Symbol	tmp		4990597						
ANR	4993004	Symbol	r_egg_get_assembly		4990597						
ANR	4993005	Symbol	& tmpsz		4990597						
ANR	4993006	Symbol	write		4990597						
ANR	4993007	Symbol	r_file_slurp		4990597						
ANR	4993008	Symbol	ofile		4990597						
ANR	4993009	Symbol	bits		4990597						
ANR	4993010	Symbol	tmpsz		4990597						
ANR	4993011	Symbol	encoder		4990597						
ANR	4993012	Symbol	str		4990597						
ANR	4993013	Symbol	show_raw		4990597						
ANR	4993014	Symbol	r_getopt		4990597						
ANR	4993015	Symbol	contents		4990597						
ANR	4993016	Symbol	openfile		4990597						
ANR	4993017	Symbol	r_optind		4990597						
ANR	4993018	Symbol	show_str		4990597						
ANR	4993019	Symbol	R_EGG_OS_NAME		4990597						
ANR	4993020	Symbol	ofileauto		4990597						
ANR	4993021	Symbol	r_str_append		4990597						
ANR	4993022	Symbol	* tmp		4990597						
ANR	4993023	Symbol	pattern		4990597						
ANR	4993024	Symbol	fileSanitized		4990597						
ANR	4993025	Symbol	* egg		4990597						
ANR	4993026	Symbol	file		4990597						
ANR	4993027	Symbol	r_egg_assemble		4990597						
ANR	4993028	Symbol	R_SYS_BITS		4990597						
ANR	4993029	Symbol	arg		4990597						
ANR	4993030	Symbol	r_egg_raw		4990597						
ANR	4993031	Symbol	r_hex_str2bin		4990597						
ANR	4993032	Symbol	blen		4990597						
ANR	4993033	Symbol	atoi		4990597						
ANR	4993034	Symbol	malloc		4990597						
ANR	4993035	Symbol	b		4990597						
ANR	4993036	Symbol	c		4990597						
ANR	4993037	Symbol	shellcode		4990597						
ANR	4993038	Symbol	r_egg_encode		4990597						
ANR	4993039	Symbol	r_egg_compile		4990597						
ANR	4993040	Symbol	i		4990597						
ANR	4993041	Symbol	l		4990597						
ANR	4993042	Symbol	off		4990597						
ANR	4993043	Symbol	n		4990597						
ANR	4993044	Symbol	textFile		4990597						
ANR	4993045	Symbol	o		4990597						
ANR	4993046	Symbol	p		4990597						
ANR	4993047	Symbol	q		4990597						
ANR	4993048	Symbol	buf		4990597						
ANR	4993049	Symbol	r		4990597						
ANR	4993050	Symbol	show_execute		4990597						
ANR	4993051	Symbol	r_debruijn_offset		4990597						
ANR	4993052	Symbol	arch		4990597						
ANR	4993053	Symbol	r_egg_Cfile_parser		4990597						
ANR	4993054	Symbol	R_BUF_SET		4990597						
ANR	4993055	Symbol	r_print_new		4990597						
ANR	4993056	Symbol	* argv		4990597						
ANR	4993057	Symbol	show_execute_rop		4990597						
ANR	4993058	Symbol	fmt		4990597						
ANR	4993059	Symbol	fgets		4990597						
ANR	4993060	Symbol	strlen		4990597						
ANR	4993061	Symbol	r_buf_new		4990597						
ANR	4993062	Symbol	R_SYS_BITS_64		4990597						
ANR	4993063	Symbol	get_offset		4990597						
ANR	4993064	Symbol	strcmp		4990597						
ANR	4993065	Symbol	NULL		4990597						
ANR	4993066	Symbol	format		4990597						
ANR	4993067	Symbol	r_optarg		4990597						
ANR	4993068	Symbol	sequence		4990597						
ANR	4993069	Symbol	strstr		4990597						
ANR	4993070	Symbol	egg -> bin		4990597						
ANR	4993071	Symbol	* format		4990597						
ANR	4993072	Symbol	true		4990597						
ANR	4993073	Symbol	r_egg_get_bin		4990597						
ANR	4993074	Symbol	r_egg_shellcode		4990597						
ANR	4993075	Symbol	fd		4990597						
ANR	4993076	Symbol	r_egg_include		4990597						
ANR	4993077	Symbol	argv		4990597						
ANR	4993078	Symbol	r_num_math		4990597						
ANR	4993079	Symbol	r_buf_data		4990597						
ANR	4993080	Symbol	argc		4990597						
ANR	4993081	Symbol	r_egg_new		4990597						
ANR	4993082	Symbol	padding		4990597						
ANR	4993083	Symbol	os		4990597						
ANR	4993084	Symbol	& blen		4990597						
ANR	4993085	Symbol	* p ++		4990597						
ANR	4993086	Symbol	false		4990597						
ANR	4993087	Symbol	show_asm		4990597						
ANR	4993088	Symbol	r_main_version_print		4990597						
ANR	4993089	Symbol	& l		4990597						
ANR	4993090	Symbol	* i		4990597						
ANR	4993091	Symbol	& n		4990597						
ANR	4993092	Symbol	* r_optind		4990597						
ANR	4993093	Symbol	bytes		4990597						
ANR	4993094	Symbol	feof		4990597						
ANR	4993095	Symbol	* o		4990597						
ANR	4993096	Symbol	* p		4990597						
ANR	4993097	Symbol	strdup		4990597						
ANR	4993098	Symbol	r_egg_run		4990597						
ANR	4993099	Symbol	append		4990597						
ANR	4993100	Symbol	ISEXEC		4990597						
