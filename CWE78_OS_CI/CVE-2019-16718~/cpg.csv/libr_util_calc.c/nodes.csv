command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5102496	File	data/converged/CVE-2019-16718~_radare2/libr_util_calc.c								
ANR	5102497	Function	Nset	17:0:403:499							
ANR	5102498	FunctionDef	Nset (ut64 v)		5102497	0					
ANR	5102499	CompoundStatement		17:41:444:499	5102497	0					
ANR	5102500	IdentifierDeclStatement	RNumCalcValue n ;	17:1:446:461	5102497	0	True				
ANR	5102501	IdentifierDecl	n		5102497	0					
ANR	5102502	IdentifierDeclType	RNumCalcValue		5102497	0					
ANR	5102503	Identifier	n		5102497	1					
ANR	5102504	ExpressionStatement	n . d = ( double ) v	17:18:463:478	5102497	1	True				
ANR	5102505	AssignmentExpression	n . d = ( double ) v		5102497	0		=			
ANR	5102506	MemberAccess	n . d		5102497	0					
ANR	5102507	Identifier	n		5102497	0					
ANR	5102508	Identifier	d		5102497	1					
ANR	5102509	CastExpression	( double ) v		5102497	1					
ANR	5102510	CastTarget	double		5102497	0					
ANR	5102511	Identifier	v		5102497	1					
ANR	5102512	ExpressionStatement	n . n = v	17:35:480:487	5102497	2	True				
ANR	5102513	AssignmentExpression	n . n = v		5102497	0		=			
ANR	5102514	MemberAccess	n . n		5102497	0					
ANR	5102515	Identifier	n		5102497	0					
ANR	5102516	Identifier	n		5102497	1					
ANR	5102517	Identifier	v		5102497	1					
ANR	5102518	ReturnStatement	return n ;	17:44:489:497	5102497	3	True				
ANR	5102519	Identifier	n		5102497	0					
ANR	5102520	ReturnType	static inline RNumCalcValue		5102497	1					
ANR	5102521	Identifier	Nset		5102497	2					
ANR	5102522	ParameterList	ut64 v		5102497	3					
ANR	5102523	Parameter	ut64 v	17:33:436:441	5102497	0	True				
ANR	5102524	ParameterType	ut64		5102497	0					
ANR	5102525	Identifier	v		5102497	1					
ANR	5102526	CFGEntryNode	ENTRY		5102497		True				
ANR	5102527	CFGExitNode	EXIT		5102497		True				
ANR	5102528	Symbol	v		5102497						
ANR	5102529	Symbol	n . n		5102497						
ANR	5102530	Symbol	n . d		5102497						
ANR	5102531	Symbol	n		5102497						
ANR	5102532	Function	Nsetf	18:0:501:598							
ANR	5102533	FunctionDef	Nsetf (double v)		5102532	0					
ANR	5102534	CompoundStatement		18:44:545:598	5102532	0					
ANR	5102535	IdentifierDeclStatement	RNumCalcValue n ;	18:1:547:562	5102532	0	True				
ANR	5102536	IdentifierDecl	n		5102532	0					
ANR	5102537	IdentifierDeclType	RNumCalcValue		5102532	0					
ANR	5102538	Identifier	n		5102532	1					
ANR	5102539	ExpressionStatement	n . d = v	18:18:564:571	5102532	1	True				
ANR	5102540	AssignmentExpression	n . d = v		5102532	0		=			
ANR	5102541	MemberAccess	n . d		5102532	0					
ANR	5102542	Identifier	n		5102532	0					
ANR	5102543	Identifier	d		5102532	1					
ANR	5102544	Identifier	v		5102532	1					
ANR	5102545	ExpressionStatement	n . n = ( ut64 ) v	18:27:573:586	5102532	2	True				
ANR	5102546	AssignmentExpression	n . n = ( ut64 ) v		5102532	0		=			
ANR	5102547	MemberAccess	n . n		5102532	0					
ANR	5102548	Identifier	n		5102532	0					
ANR	5102549	Identifier	n		5102532	1					
ANR	5102550	CastExpression	( ut64 ) v		5102532	1					
ANR	5102551	CastTarget	ut64		5102532	0					
ANR	5102552	Identifier	v		5102532	1					
ANR	5102553	ReturnStatement	return n ;	18:42:588:596	5102532	3	True				
ANR	5102554	Identifier	n		5102532	0					
ANR	5102555	ReturnType	static inline RNumCalcValue		5102532	1					
ANR	5102556	Identifier	Nsetf		5102532	2					
ANR	5102557	ParameterList	double v		5102532	3					
ANR	5102558	Parameter	double v	18:34:535:542	5102532	0	True				
ANR	5102559	ParameterType	double		5102532	0					
ANR	5102560	Identifier	v		5102532	1					
ANR	5102561	CFGEntryNode	ENTRY		5102532		True				
ANR	5102562	CFGExitNode	EXIT		5102532		True				
ANR	5102563	Symbol	v		5102532						
ANR	5102564	Symbol	n . n		5102532						
ANR	5102565	Symbol	n . d		5102532						
ANR	5102566	Symbol	n		5102532						
ANR	5102567	Function	Naddi	20:0:710:809							
ANR	5102568	FunctionDef	"Naddi (RNumCalcValue n , ut64 v)"		5102567	0					
ANR	5102569	CompoundStatement		20:59:769:809	5102567	0					
ANR	5102570	ExpressionStatement	n . d += ( double ) v	20:1:771:787	5102567	0	True				
ANR	5102571	AssignmentExpression	n . d += ( double ) v		5102567	0		+=			
ANR	5102572	MemberAccess	n . d		5102567	0					
ANR	5102573	Identifier	n		5102567	0					
ANR	5102574	Identifier	d		5102567	1					
ANR	5102575	CastExpression	( double ) v		5102567	1					
ANR	5102576	CastTarget	double		5102567	0					
ANR	5102577	Identifier	v		5102567	1					
ANR	5102578	ExpressionStatement	n . n += v	20:19:789:797	5102567	1	True				
ANR	5102579	AssignmentExpression	n . n += v		5102567	0		+=			
ANR	5102580	MemberAccess	n . n		5102567	0					
ANR	5102581	Identifier	n		5102567	0					
ANR	5102582	Identifier	n		5102567	1					
ANR	5102583	Identifier	v		5102567	1					
ANR	5102584	ReturnStatement	return n ;	20:29:799:807	5102567	2	True				
ANR	5102585	Identifier	n		5102567	0					
ANR	5102586	ReturnType	static inline RNumCalcValue		5102567	1					
ANR	5102587	Identifier	Naddi		5102567	2					
ANR	5102588	ParameterList	"RNumCalcValue n , ut64 v"		5102567	3					
ANR	5102589	Parameter	RNumCalcValue n	20:34:744:758	5102567	0	True				
ANR	5102590	ParameterType	RNumCalcValue		5102567	0					
ANR	5102591	Identifier	n		5102567	1					
ANR	5102592	Parameter	ut64 v	20:51:761:766	5102567	1	True				
ANR	5102593	ParameterType	ut64		5102567	0					
ANR	5102594	Identifier	v		5102567	1					
ANR	5102595	CFGEntryNode	ENTRY		5102567		True				
ANR	5102596	CFGExitNode	EXIT		5102567		True				
ANR	5102597	Symbol	v		5102567						
ANR	5102598	Symbol	n . n		5102567						
ANR	5102599	Symbol	n . d		5102567						
ANR	5102600	Symbol	n		5102567						
ANR	5102601	Function	Nsubi	21:0:811:910							
ANR	5102602	FunctionDef	"Nsubi (RNumCalcValue n , ut64 v)"		5102601	0					
ANR	5102603	CompoundStatement		21:59:870:910	5102601	0					
ANR	5102604	ExpressionStatement	n . d -= ( double ) v	21:1:872:888	5102601	0	True				
ANR	5102605	AssignmentExpression	n . d -= ( double ) v		5102601	0		-=			
ANR	5102606	MemberAccess	n . d		5102601	0					
ANR	5102607	Identifier	n		5102601	0					
ANR	5102608	Identifier	d		5102601	1					
ANR	5102609	CastExpression	( double ) v		5102601	1					
ANR	5102610	CastTarget	double		5102601	0					
ANR	5102611	Identifier	v		5102601	1					
ANR	5102612	ExpressionStatement	n . n -= v	21:19:890:898	5102601	1	True				
ANR	5102613	AssignmentExpression	n . n -= v		5102601	0		-=			
ANR	5102614	MemberAccess	n . n		5102601	0					
ANR	5102615	Identifier	n		5102601	0					
ANR	5102616	Identifier	n		5102601	1					
ANR	5102617	Identifier	v		5102601	1					
ANR	5102618	ReturnStatement	return n ;	21:29:900:908	5102601	2	True				
ANR	5102619	Identifier	n		5102601	0					
ANR	5102620	ReturnType	static inline RNumCalcValue		5102601	1					
ANR	5102621	Identifier	Nsubi		5102601	2					
ANR	5102622	ParameterList	"RNumCalcValue n , ut64 v"		5102601	3					
ANR	5102623	Parameter	RNumCalcValue n	21:34:845:859	5102601	0	True				
ANR	5102624	ParameterType	RNumCalcValue		5102601	0					
ANR	5102625	Identifier	n		5102601	1					
ANR	5102626	Parameter	ut64 v	21:51:862:867	5102601	1	True				
ANR	5102627	ParameterType	ut64		5102601	0					
ANR	5102628	Identifier	v		5102601	1					
ANR	5102629	CFGEntryNode	ENTRY		5102601		True				
ANR	5102630	CFGExitNode	EXIT		5102601		True				
ANR	5102631	Symbol	v		5102601						
ANR	5102632	Symbol	n . n		5102601						
ANR	5102633	Symbol	n . d		5102601						
ANR	5102634	Symbol	n		5102601						
ANR	5102635	Function	Nneg	22:0:912:986							
ANR	5102636	FunctionDef	Nneg (RNumCalcValue n)		5102635	0					
ANR	5102637	CompoundStatement		22:50:962:986	5102635	0					
ANR	5102638	ExpressionStatement	n . n = ~n . n	22:1:964:974	5102635	0	True				
ANR	5102639	AssignmentExpression	n . n = ~n . n		5102635	0		=			
ANR	5102640	MemberAccess	n . n		5102635	0					
ANR	5102641	Identifier	n		5102635	0					
ANR	5102642	Identifier	n		5102635	1					
ANR	5102643	MemberAccess	~n . n		5102635	1					
ANR	5102644	Identifier	~n		5102635	0					
ANR	5102645	Identifier	n		5102635	1					
ANR	5102646	ReturnStatement	return n ;	22:13:976:984	5102635	1	True				
ANR	5102647	Identifier	n		5102635	0					
ANR	5102648	ReturnType	static inline RNumCalcValue		5102635	1					
ANR	5102649	Identifier	Nneg		5102635	2					
ANR	5102650	ParameterList	RNumCalcValue n		5102635	3					
ANR	5102651	Parameter	RNumCalcValue n	22:33:945:959	5102635	0	True				
ANR	5102652	ParameterType	RNumCalcValue		5102635	0					
ANR	5102653	Identifier	n		5102635	1					
ANR	5102654	CFGEntryNode	ENTRY		5102635		True				
ANR	5102655	CFGExitNode	EXIT		5102635		True				
ANR	5102656	Symbol	~n		5102635						
ANR	5102657	Symbol	~n . n		5102635						
ANR	5102658	Symbol	n . n		5102635						
ANR	5102659	Symbol	n		5102635						
ANR	5102660	Function	Norr	23:0:988:1090							
ANR	5102661	FunctionDef	"Norr (RNumCalcValue n , RNumCalcValue v)"		5102660	0					
ANR	5102662	CompoundStatement		23:67:1055:1090	5102660	0					
ANR	5102663	ExpressionStatement	n . d = v . d	23:1:1057:1066	5102660	0	True				
ANR	5102664	AssignmentExpression	n . d = v . d		5102660	0		=			
ANR	5102665	MemberAccess	n . d		5102660	0					
ANR	5102666	Identifier	n		5102660	0					
ANR	5102667	Identifier	d		5102660	1					
ANR	5102668	MemberAccess	v . d		5102660	1					
ANR	5102669	Identifier	v		5102660	0					
ANR	5102670	Identifier	d		5102660	1					
ANR	5102671	ExpressionStatement	n . n |= v . n	23:12:1068:1078	5102660	1	True				
ANR	5102672	AssignmentExpression	n . n |= v . n		5102660	0		|=			
ANR	5102673	MemberAccess	n . n		5102660	0					
ANR	5102674	Identifier	n		5102660	0					
ANR	5102675	Identifier	n		5102660	1					
ANR	5102676	MemberAccess	v . n		5102660	1					
ANR	5102677	Identifier	v		5102660	0					
ANR	5102678	Identifier	n		5102660	1					
ANR	5102679	ReturnStatement	return n ;	23:24:1080:1088	5102660	2	True				
ANR	5102680	Identifier	n		5102660	0					
ANR	5102681	ReturnType	static inline RNumCalcValue		5102660	1					
ANR	5102682	Identifier	Norr		5102660	2					
ANR	5102683	ParameterList	"RNumCalcValue n , RNumCalcValue v"		5102660	3					
ANR	5102684	Parameter	RNumCalcValue n	23:33:1021:1035	5102660	0	True				
ANR	5102685	ParameterType	RNumCalcValue		5102660	0					
ANR	5102686	Identifier	n		5102660	1					
ANR	5102687	Parameter	RNumCalcValue v	23:50:1038:1052	5102660	1	True				
ANR	5102688	ParameterType	RNumCalcValue		5102660	0					
ANR	5102689	Identifier	v		5102660	1					
ANR	5102690	CFGEntryNode	ENTRY		5102660		True				
ANR	5102691	CFGExitNode	EXIT		5102660		True				
ANR	5102692	Symbol	v		5102660						
ANR	5102693	Symbol	v . d		5102660						
ANR	5102694	Symbol	n . n		5102660						
ANR	5102695	Symbol	v . n		5102660						
ANR	5102696	Symbol	n . d		5102660						
ANR	5102697	Symbol	n		5102660						
ANR	5102698	Function	Nxor	24:0:1092:1194							
ANR	5102699	FunctionDef	"Nxor (RNumCalcValue n , RNumCalcValue v)"		5102698	0					
ANR	5102700	CompoundStatement		24:67:1159:1194	5102698	0					
ANR	5102701	ExpressionStatement	n . d = v . d	24:1:1161:1170	5102698	0	True				
ANR	5102702	AssignmentExpression	n . d = v . d		5102698	0		=			
ANR	5102703	MemberAccess	n . d		5102698	0					
ANR	5102704	Identifier	n		5102698	0					
ANR	5102705	Identifier	d		5102698	1					
ANR	5102706	MemberAccess	v . d		5102698	1					
ANR	5102707	Identifier	v		5102698	0					
ANR	5102708	Identifier	d		5102698	1					
ANR	5102709	ExpressionStatement	n . n ^= v . n	24:12:1172:1182	5102698	1	True				
ANR	5102710	AssignmentExpression	n . n ^= v . n		5102698	0		^=			
ANR	5102711	MemberAccess	n . n		5102698	0					
ANR	5102712	Identifier	n		5102698	0					
ANR	5102713	Identifier	n		5102698	1					
ANR	5102714	MemberAccess	v . n		5102698	1					
ANR	5102715	Identifier	v		5102698	0					
ANR	5102716	Identifier	n		5102698	1					
ANR	5102717	ReturnStatement	return n ;	24:24:1184:1192	5102698	2	True				
ANR	5102718	Identifier	n		5102698	0					
ANR	5102719	ReturnType	static inline RNumCalcValue		5102698	1					
ANR	5102720	Identifier	Nxor		5102698	2					
ANR	5102721	ParameterList	"RNumCalcValue n , RNumCalcValue v"		5102698	3					
ANR	5102722	Parameter	RNumCalcValue n	24:33:1125:1139	5102698	0	True				
ANR	5102723	ParameterType	RNumCalcValue		5102698	0					
ANR	5102724	Identifier	n		5102698	1					
ANR	5102725	Parameter	RNumCalcValue v	24:50:1142:1156	5102698	1	True				
ANR	5102726	ParameterType	RNumCalcValue		5102698	0					
ANR	5102727	Identifier	v		5102698	1					
ANR	5102728	CFGEntryNode	ENTRY		5102698		True				
ANR	5102729	CFGExitNode	EXIT		5102698		True				
ANR	5102730	Symbol	v		5102698						
ANR	5102731	Symbol	v . d		5102698						
ANR	5102732	Symbol	n . n		5102698						
ANR	5102733	Symbol	v . n		5102698						
ANR	5102734	Symbol	n . d		5102698						
ANR	5102735	Symbol	n		5102698						
ANR	5102736	Function	Nand	25:0:1196:1298							
ANR	5102737	FunctionDef	"Nand (RNumCalcValue n , RNumCalcValue v)"		5102736	0					
ANR	5102738	CompoundStatement		25:67:1263:1298	5102736	0					
ANR	5102739	ExpressionStatement	n . d = v . d	25:1:1265:1274	5102736	0	True				
ANR	5102740	AssignmentExpression	n . d = v . d		5102736	0		=			
ANR	5102741	MemberAccess	n . d		5102736	0					
ANR	5102742	Identifier	n		5102736	0					
ANR	5102743	Identifier	d		5102736	1					
ANR	5102744	MemberAccess	v . d		5102736	1					
ANR	5102745	Identifier	v		5102736	0					
ANR	5102746	Identifier	d		5102736	1					
ANR	5102747	ExpressionStatement	n . n &= v . n	25:12:1276:1286	5102736	1	True				
ANR	5102748	AssignmentExpression	n . n &= v . n		5102736	0		&=			
ANR	5102749	MemberAccess	n . n		5102736	0					
ANR	5102750	Identifier	n		5102736	0					
ANR	5102751	Identifier	n		5102736	1					
ANR	5102752	MemberAccess	v . n		5102736	1					
ANR	5102753	Identifier	v		5102736	0					
ANR	5102754	Identifier	n		5102736	1					
ANR	5102755	ReturnStatement	return n ;	25:24:1288:1296	5102736	2	True				
ANR	5102756	Identifier	n		5102736	0					
ANR	5102757	ReturnType	static inline RNumCalcValue		5102736	1					
ANR	5102758	Identifier	Nand		5102736	2					
ANR	5102759	ParameterList	"RNumCalcValue n , RNumCalcValue v"		5102736	3					
ANR	5102760	Parameter	RNumCalcValue n	25:33:1229:1243	5102736	0	True				
ANR	5102761	ParameterType	RNumCalcValue		5102736	0					
ANR	5102762	Identifier	n		5102736	1					
ANR	5102763	Parameter	RNumCalcValue v	25:50:1246:1260	5102736	1	True				
ANR	5102764	ParameterType	RNumCalcValue		5102736	0					
ANR	5102765	Identifier	v		5102736	1					
ANR	5102766	CFGEntryNode	ENTRY		5102736		True				
ANR	5102767	CFGExitNode	EXIT		5102736		True				
ANR	5102768	Symbol	v		5102736						
ANR	5102769	Symbol	v . d		5102736						
ANR	5102770	Symbol	n . n		5102736						
ANR	5102771	Symbol	v . n		5102736						
ANR	5102772	Symbol	n . d		5102736						
ANR	5102773	Symbol	n		5102736						
ANR	5102774	Function	Nadd	26:0:1300:1403							
ANR	5102775	FunctionDef	"Nadd (RNumCalcValue n , RNumCalcValue v)"		5102774	0					
ANR	5102776	CompoundStatement		26:67:1367:1403	5102774	0					
ANR	5102777	ExpressionStatement	n . d += v . d	26:1:1369:1379	5102774	0	True				
ANR	5102778	AssignmentExpression	n . d += v . d		5102774	0		+=			
ANR	5102779	MemberAccess	n . d		5102774	0					
ANR	5102780	Identifier	n		5102774	0					
ANR	5102781	Identifier	d		5102774	1					
ANR	5102782	MemberAccess	v . d		5102774	1					
ANR	5102783	Identifier	v		5102774	0					
ANR	5102784	Identifier	d		5102774	1					
ANR	5102785	ExpressionStatement	n . n += v . n	26:13:1381:1391	5102774	1	True				
ANR	5102786	AssignmentExpression	n . n += v . n		5102774	0		+=			
ANR	5102787	MemberAccess	n . n		5102774	0					
ANR	5102788	Identifier	n		5102774	0					
ANR	5102789	Identifier	n		5102774	1					
ANR	5102790	MemberAccess	v . n		5102774	1					
ANR	5102791	Identifier	v		5102774	0					
ANR	5102792	Identifier	n		5102774	1					
ANR	5102793	ReturnStatement	return n ;	26:25:1393:1401	5102774	2	True				
ANR	5102794	Identifier	n		5102774	0					
ANR	5102795	ReturnType	static inline RNumCalcValue		5102774	1					
ANR	5102796	Identifier	Nadd		5102774	2					
ANR	5102797	ParameterList	"RNumCalcValue n , RNumCalcValue v"		5102774	3					
ANR	5102798	Parameter	RNumCalcValue n	26:33:1333:1347	5102774	0	True				
ANR	5102799	ParameterType	RNumCalcValue		5102774	0					
ANR	5102800	Identifier	n		5102774	1					
ANR	5102801	Parameter	RNumCalcValue v	26:50:1350:1364	5102774	1	True				
ANR	5102802	ParameterType	RNumCalcValue		5102774	0					
ANR	5102803	Identifier	v		5102774	1					
ANR	5102804	CFGEntryNode	ENTRY		5102774		True				
ANR	5102805	CFGExitNode	EXIT		5102774		True				
ANR	5102806	Symbol	v		5102774						
ANR	5102807	Symbol	v . d		5102774						
ANR	5102808	Symbol	n . n		5102774						
ANR	5102809	Symbol	v . n		5102774						
ANR	5102810	Symbol	n . d		5102774						
ANR	5102811	Symbol	n		5102774						
ANR	5102812	Function	Nsub	27:0:1405:1508							
ANR	5102813	FunctionDef	"Nsub (RNumCalcValue n , RNumCalcValue v)"		5102812	0					
ANR	5102814	CompoundStatement		27:67:1472:1508	5102812	0					
ANR	5102815	ExpressionStatement	n . d -= v . d	27:1:1474:1484	5102812	0	True				
ANR	5102816	AssignmentExpression	n . d -= v . d		5102812	0		-=			
ANR	5102817	MemberAccess	n . d		5102812	0					
ANR	5102818	Identifier	n		5102812	0					
ANR	5102819	Identifier	d		5102812	1					
ANR	5102820	MemberAccess	v . d		5102812	1					
ANR	5102821	Identifier	v		5102812	0					
ANR	5102822	Identifier	d		5102812	1					
ANR	5102823	ExpressionStatement	n . n -= v . n	27:13:1486:1496	5102812	1	True				
ANR	5102824	AssignmentExpression	n . n -= v . n		5102812	0		-=			
ANR	5102825	MemberAccess	n . n		5102812	0					
ANR	5102826	Identifier	n		5102812	0					
ANR	5102827	Identifier	n		5102812	1					
ANR	5102828	MemberAccess	v . n		5102812	1					
ANR	5102829	Identifier	v		5102812	0					
ANR	5102830	Identifier	n		5102812	1					
ANR	5102831	ReturnStatement	return n ;	27:25:1498:1506	5102812	2	True				
ANR	5102832	Identifier	n		5102812	0					
ANR	5102833	ReturnType	static inline RNumCalcValue		5102812	1					
ANR	5102834	Identifier	Nsub		5102812	2					
ANR	5102835	ParameterList	"RNumCalcValue n , RNumCalcValue v"		5102812	3					
ANR	5102836	Parameter	RNumCalcValue n	27:33:1438:1452	5102812	0	True				
ANR	5102837	ParameterType	RNumCalcValue		5102812	0					
ANR	5102838	Identifier	n		5102812	1					
ANR	5102839	Parameter	RNumCalcValue v	27:50:1455:1469	5102812	1	True				
ANR	5102840	ParameterType	RNumCalcValue		5102812	0					
ANR	5102841	Identifier	v		5102812	1					
ANR	5102842	CFGEntryNode	ENTRY		5102812		True				
ANR	5102843	CFGExitNode	EXIT		5102812		True				
ANR	5102844	Symbol	v		5102812						
ANR	5102845	Symbol	v . d		5102812						
ANR	5102846	Symbol	n . n		5102812						
ANR	5102847	Symbol	v . n		5102812						
ANR	5102848	Symbol	n . d		5102812						
ANR	5102849	Symbol	n		5102812						
ANR	5102850	Function	Nmul	28:0:1510:1616							
ANR	5102851	FunctionDef	"Nmul (RNumCalcValue n , RNumCalcValue v)"		5102850	0					
ANR	5102852	CompoundStatement		28:67:1577:1616	5102850	0					
ANR	5102853	ExpressionStatement	n . d *= v . d	29:1:1580:1590	5102850	0	True				
ANR	5102854	AssignmentExpression	n . d *= v . d		5102850	0		*=			
ANR	5102855	MemberAccess	n . d		5102850	0					
ANR	5102856	Identifier	n		5102850	0					
ANR	5102857	Identifier	d		5102850	1					
ANR	5102858	MemberAccess	v . d		5102850	1					
ANR	5102859	Identifier	v		5102850	0					
ANR	5102860	Identifier	d		5102850	1					
ANR	5102861	ExpressionStatement	n . n *= v . n	30:1:1593:1603	5102850	1	True				
ANR	5102862	AssignmentExpression	n . n *= v . n		5102850	0		*=			
ANR	5102863	MemberAccess	n . n		5102850	0					
ANR	5102864	Identifier	n		5102850	0					
ANR	5102865	Identifier	n		5102850	1					
ANR	5102866	MemberAccess	v . n		5102850	1					
ANR	5102867	Identifier	v		5102850	0					
ANR	5102868	Identifier	n		5102850	1					
ANR	5102869	ReturnStatement	return n ;	31:1:1606:1614	5102850	2	True				
ANR	5102870	Identifier	n		5102850	0					
ANR	5102871	ReturnType	static inline RNumCalcValue		5102850	1					
ANR	5102872	Identifier	Nmul		5102850	2					
ANR	5102873	ParameterList	"RNumCalcValue n , RNumCalcValue v"		5102850	3					
ANR	5102874	Parameter	RNumCalcValue n	28:33:1543:1557	5102850	0	True				
ANR	5102875	ParameterType	RNumCalcValue		5102850	0					
ANR	5102876	Identifier	n		5102850	1					
ANR	5102877	Parameter	RNumCalcValue v	28:50:1560:1574	5102850	1	True				
ANR	5102878	ParameterType	RNumCalcValue		5102850	0					
ANR	5102879	Identifier	v		5102850	1					
ANR	5102880	CFGEntryNode	ENTRY		5102850		True				
ANR	5102881	CFGExitNode	EXIT		5102850		True				
ANR	5102882	Symbol	v		5102850						
ANR	5102883	Symbol	v . d		5102850						
ANR	5102884	Symbol	n . n		5102850						
ANR	5102885	Symbol	v . n		5102850						
ANR	5102886	Symbol	n . d		5102850						
ANR	5102887	Symbol	n		5102850						
ANR	5102888	Function	Nshl	34:0:1619:1723							
ANR	5102889	FunctionDef	"Nshl (RNumCalcValue n , RNumCalcValue v)"		5102888	0					
ANR	5102890	CompoundStatement		34:67:1686:1723	5102888	0					
ANR	5102891	ExpressionStatement	n . d += v . d	34:1:1688:1698	5102888	0	True				
ANR	5102892	AssignmentExpression	n . d += v . d		5102888	0		+=			
ANR	5102893	MemberAccess	n . d		5102888	0					
ANR	5102894	Identifier	n		5102888	0					
ANR	5102895	Identifier	d		5102888	1					
ANR	5102896	MemberAccess	v . d		5102888	1					
ANR	5102897	Identifier	v		5102888	0					
ANR	5102898	Identifier	d		5102888	1					
ANR	5102899	ExpressionStatement	n . n <<= v . n	34:13:1700:1711	5102888	1	True				
ANR	5102900	AssignmentExpression	n . n <<= v . n		5102888	0		<<=			
ANR	5102901	MemberAccess	n . n		5102888	0					
ANR	5102902	Identifier	n		5102888	0					
ANR	5102903	Identifier	n		5102888	1					
ANR	5102904	MemberAccess	v . n		5102888	1					
ANR	5102905	Identifier	v		5102888	0					
ANR	5102906	Identifier	n		5102888	1					
ANR	5102907	ReturnStatement	return n ;	34:26:1713:1721	5102888	2	True				
ANR	5102908	Identifier	n		5102888	0					
ANR	5102909	ReturnType	static inline RNumCalcValue		5102888	1					
ANR	5102910	Identifier	Nshl		5102888	2					
ANR	5102911	ParameterList	"RNumCalcValue n , RNumCalcValue v"		5102888	3					
ANR	5102912	Parameter	RNumCalcValue n	34:33:1652:1666	5102888	0	True				
ANR	5102913	ParameterType	RNumCalcValue		5102888	0					
ANR	5102914	Identifier	n		5102888	1					
ANR	5102915	Parameter	RNumCalcValue v	34:50:1669:1683	5102888	1	True				
ANR	5102916	ParameterType	RNumCalcValue		5102888	0					
ANR	5102917	Identifier	v		5102888	1					
ANR	5102918	CFGEntryNode	ENTRY		5102888		True				
ANR	5102919	CFGExitNode	EXIT		5102888		True				
ANR	5102920	Symbol	v		5102888						
ANR	5102921	Symbol	v . d		5102888						
ANR	5102922	Symbol	n . n		5102888						
ANR	5102923	Symbol	v . n		5102888						
ANR	5102924	Symbol	n . d		5102888						
ANR	5102925	Symbol	n		5102888						
ANR	5102926	Function	Nshr	35:0:1725:1829							
ANR	5102927	FunctionDef	"Nshr (RNumCalcValue n , RNumCalcValue v)"		5102926	0					
ANR	5102928	CompoundStatement		35:67:1792:1829	5102926	0					
ANR	5102929	ExpressionStatement	n . d += v . d	35:1:1794:1804	5102926	0	True				
ANR	5102930	AssignmentExpression	n . d += v . d		5102926	0		+=			
ANR	5102931	MemberAccess	n . d		5102926	0					
ANR	5102932	Identifier	n		5102926	0					
ANR	5102933	Identifier	d		5102926	1					
ANR	5102934	MemberAccess	v . d		5102926	1					
ANR	5102935	Identifier	v		5102926	0					
ANR	5102936	Identifier	d		5102926	1					
ANR	5102937	ExpressionStatement	n . n >>= v . n	35:13:1806:1817	5102926	1	True				
ANR	5102938	AssignmentExpression	n . n >>= v . n		5102926	0		>>=			
ANR	5102939	MemberAccess	n . n		5102926	0					
ANR	5102940	Identifier	n		5102926	0					
ANR	5102941	Identifier	n		5102926	1					
ANR	5102942	MemberAccess	v . n		5102926	1					
ANR	5102943	Identifier	v		5102926	0					
ANR	5102944	Identifier	n		5102926	1					
ANR	5102945	ReturnStatement	return n ;	35:26:1819:1827	5102926	2	True				
ANR	5102946	Identifier	n		5102926	0					
ANR	5102947	ReturnType	static inline RNumCalcValue		5102926	1					
ANR	5102948	Identifier	Nshr		5102926	2					
ANR	5102949	ParameterList	"RNumCalcValue n , RNumCalcValue v"		5102926	3					
ANR	5102950	Parameter	RNumCalcValue n	35:33:1758:1772	5102926	0	True				
ANR	5102951	ParameterType	RNumCalcValue		5102926	0					
ANR	5102952	Identifier	n		5102926	1					
ANR	5102953	Parameter	RNumCalcValue v	35:50:1775:1789	5102926	1	True				
ANR	5102954	ParameterType	RNumCalcValue		5102926	0					
ANR	5102955	Identifier	v		5102926	1					
ANR	5102956	CFGEntryNode	ENTRY		5102926		True				
ANR	5102957	CFGExitNode	EXIT		5102926		True				
ANR	5102958	Symbol	v		5102926						
ANR	5102959	Symbol	v . d		5102926						
ANR	5102960	Symbol	n . n		5102926						
ANR	5102961	Symbol	v . n		5102926						
ANR	5102962	Symbol	n . d		5102926						
ANR	5102963	Symbol	n		5102926						
ANR	5102964	Function	Nrol	36:0:1831:1980							
ANR	5102965	FunctionDef	"Nrol (RNumCalcValue n , RNumCalcValue v)"		5102964	0					
ANR	5102966	CompoundStatement		36:67:1898:1980	5102964	0					
ANR	5102967	ExpressionStatement	n . d += v . d	37:1:1901:1911	5102964	0	True				
ANR	5102968	AssignmentExpression	n . d += v . d		5102964	0		+=			
ANR	5102969	MemberAccess	n . d		5102964	0					
ANR	5102970	Identifier	n		5102964	0					
ANR	5102971	Identifier	d		5102964	1					
ANR	5102972	MemberAccess	v . d		5102964	1					
ANR	5102973	Identifier	v		5102964	0					
ANR	5102974	Identifier	d		5102964	1					
ANR	5102975	ExpressionStatement	n . n = ( n . n << v . n ) | ( n . n >> ( sizeof ( n . n ) * 8 - v . n ) )	38:1:1914:1967	5102964	1	True				
ANR	5102976	AssignmentExpression	n . n = ( n . n << v . n ) | ( n . n >> ( sizeof ( n . n ) * 8 - v . n ) )		5102964	0		=			
ANR	5102977	MemberAccess	n . n		5102964	0					
ANR	5102978	Identifier	n		5102964	0					
ANR	5102979	Identifier	n		5102964	1					
ANR	5102980	InclusiveOrExpression	( n . n << v . n ) | ( n . n >> ( sizeof ( n . n ) * 8 - v . n ) )		5102964	1		|			
ANR	5102981	ShiftExpression	n . n << v . n		5102964	0		<<			
ANR	5102982	MemberAccess	n . n		5102964	0					
ANR	5102983	Identifier	n		5102964	0					
ANR	5102984	Identifier	n		5102964	1					
ANR	5102985	MemberAccess	v . n		5102964	1					
ANR	5102986	Identifier	v		5102964	0					
ANR	5102987	Identifier	n		5102964	1					
ANR	5102988	ShiftExpression	n . n >> ( sizeof ( n . n ) * 8 - v . n )		5102964	1		>>			
ANR	5102989	MemberAccess	n . n		5102964	0					
ANR	5102990	Identifier	n		5102964	0					
ANR	5102991	Identifier	n		5102964	1					
ANR	5102992	AdditiveExpression	sizeof ( n . n ) * 8 - v . n		5102964	1		-			
ANR	5102993	MultiplicativeExpression	sizeof ( n . n ) * 8		5102964	0		*			
ANR	5102994	SizeofExpression	sizeof ( n . n )		5102964	0					
ANR	5102995	Sizeof	sizeof		5102964	0					
ANR	5102996	MemberAccess	n . n		5102964	1					
ANR	5102997	Identifier	n		5102964	0					
ANR	5102998	Identifier	n		5102964	1					
ANR	5102999	PrimaryExpression	8		5102964	1					
ANR	5103000	MemberAccess	v . n		5102964	1					
ANR	5103001	Identifier	v		5102964	0					
ANR	5103002	Identifier	n		5102964	1					
ANR	5103003	ReturnStatement	return n ;	39:1:1970:1978	5102964	2	True				
ANR	5103004	Identifier	n		5102964	0					
ANR	5103005	ReturnType	static inline RNumCalcValue		5102964	1					
ANR	5103006	Identifier	Nrol		5102964	2					
ANR	5103007	ParameterList	"RNumCalcValue n , RNumCalcValue v"		5102964	3					
ANR	5103008	Parameter	RNumCalcValue n	36:33:1864:1878	5102964	0	True				
ANR	5103009	ParameterType	RNumCalcValue		5102964	0					
ANR	5103010	Identifier	n		5102964	1					
ANR	5103011	Parameter	RNumCalcValue v	36:50:1881:1895	5102964	1	True				
ANR	5103012	ParameterType	RNumCalcValue		5102964	0					
ANR	5103013	Identifier	v		5102964	1					
ANR	5103014	CFGEntryNode	ENTRY		5102964		True				
ANR	5103015	CFGExitNode	EXIT		5102964		True				
ANR	5103016	Symbol	v		5102964						
ANR	5103017	Symbol	v . d		5102964						
ANR	5103018	Symbol	n . n		5102964						
ANR	5103019	Symbol	v . n		5102964						
ANR	5103020	Symbol	n . d		5102964						
ANR	5103021	Symbol	n		5102964						
ANR	5103022	Function	Nror	41:0:1982:2131							
ANR	5103023	FunctionDef	"Nror (RNumCalcValue n , RNumCalcValue v)"		5103022	0					
ANR	5103024	CompoundStatement		41:67:2049:2131	5103022	0					
ANR	5103025	ExpressionStatement	n . d += v . d	42:1:2052:2062	5103022	0	True				
ANR	5103026	AssignmentExpression	n . d += v . d		5103022	0		+=			
ANR	5103027	MemberAccess	n . d		5103022	0					
ANR	5103028	Identifier	n		5103022	0					
ANR	5103029	Identifier	d		5103022	1					
ANR	5103030	MemberAccess	v . d		5103022	1					
ANR	5103031	Identifier	v		5103022	0					
ANR	5103032	Identifier	d		5103022	1					
ANR	5103033	ExpressionStatement	n . n = ( n . n >> v . n ) | ( n . n << ( sizeof ( n . n ) * 8 - v . n ) )	43:1:2065:2118	5103022	1	True				
ANR	5103034	AssignmentExpression	n . n = ( n . n >> v . n ) | ( n . n << ( sizeof ( n . n ) * 8 - v . n ) )		5103022	0		=			
ANR	5103035	MemberAccess	n . n		5103022	0					
ANR	5103036	Identifier	n		5103022	0					
ANR	5103037	Identifier	n		5103022	1					
ANR	5103038	InclusiveOrExpression	( n . n >> v . n ) | ( n . n << ( sizeof ( n . n ) * 8 - v . n ) )		5103022	1		|			
ANR	5103039	ShiftExpression	n . n >> v . n		5103022	0		>>			
ANR	5103040	MemberAccess	n . n		5103022	0					
ANR	5103041	Identifier	n		5103022	0					
ANR	5103042	Identifier	n		5103022	1					
ANR	5103043	MemberAccess	v . n		5103022	1					
ANR	5103044	Identifier	v		5103022	0					
ANR	5103045	Identifier	n		5103022	1					
ANR	5103046	ShiftExpression	n . n << ( sizeof ( n . n ) * 8 - v . n )		5103022	1		<<			
ANR	5103047	MemberAccess	n . n		5103022	0					
ANR	5103048	Identifier	n		5103022	0					
ANR	5103049	Identifier	n		5103022	1					
ANR	5103050	AdditiveExpression	sizeof ( n . n ) * 8 - v . n		5103022	1		-			
ANR	5103051	MultiplicativeExpression	sizeof ( n . n ) * 8		5103022	0		*			
ANR	5103052	SizeofExpression	sizeof ( n . n )		5103022	0					
ANR	5103053	Sizeof	sizeof		5103022	0					
ANR	5103054	MemberAccess	n . n		5103022	1					
ANR	5103055	Identifier	n		5103022	0					
ANR	5103056	Identifier	n		5103022	1					
ANR	5103057	PrimaryExpression	8		5103022	1					
ANR	5103058	MemberAccess	v . n		5103022	1					
ANR	5103059	Identifier	v		5103022	0					
ANR	5103060	Identifier	n		5103022	1					
ANR	5103061	ReturnStatement	return n ;	44:1:2121:2129	5103022	2	True				
ANR	5103062	Identifier	n		5103022	0					
ANR	5103063	ReturnType	static inline RNumCalcValue		5103022	1					
ANR	5103064	Identifier	Nror		5103022	2					
ANR	5103065	ParameterList	"RNumCalcValue n , RNumCalcValue v"		5103022	3					
ANR	5103066	Parameter	RNumCalcValue n	41:33:2015:2029	5103022	0	True				
ANR	5103067	ParameterType	RNumCalcValue		5103022	0					
ANR	5103068	Identifier	n		5103022	1					
ANR	5103069	Parameter	RNumCalcValue v	41:50:2032:2046	5103022	1	True				
ANR	5103070	ParameterType	RNumCalcValue		5103022	0					
ANR	5103071	Identifier	v		5103022	1					
ANR	5103072	CFGEntryNode	ENTRY		5103022		True				
ANR	5103073	CFGExitNode	EXIT		5103022		True				
ANR	5103074	Symbol	v		5103022						
ANR	5103075	Symbol	v . d		5103022						
ANR	5103076	Symbol	n . n		5103022						
ANR	5103077	Symbol	v . n		5103022						
ANR	5103078	Symbol	n . d		5103022						
ANR	5103079	Symbol	n		5103022						
ANR	5103080	Function	Nmod	46:0:2133:2328							
ANR	5103081	FunctionDef	"Nmod (RNumCalcValue n , RNumCalcValue v)"		5103080	0					
ANR	5103082	CompoundStatement		46:67:2200:2328	5103080	0					
ANR	5103083	IfStatement	if ( v . d )		5103080	0					
ANR	5103084	Condition	v . d	47:5:2207:2209	5103080	0	True				
ANR	5103085	MemberAccess	v . d		5103080	0					
ANR	5103086	Identifier	v		5103080	0					
ANR	5103087	Identifier	d		5103080	1					
ANR	5103088	CompoundStatement		2:10:11:11	5103080	1					
ANR	5103089	ExpressionStatement	n . d = ( n . d - ( n . d / v . d ) )	48:2:2216:2241	5103080	0	True				
ANR	5103090	AssignmentExpression	n . d = ( n . d - ( n . d / v . d ) )		5103080	0		=			
ANR	5103091	MemberAccess	n . d		5103080	0					
ANR	5103092	Identifier	n		5103080	0					
ANR	5103093	Identifier	d		5103080	1					
ANR	5103094	AdditiveExpression	n . d - ( n . d / v . d )		5103080	1		-			
ANR	5103095	MemberAccess	n . d		5103080	0					
ANR	5103096	Identifier	n		5103080	0					
ANR	5103097	Identifier	d		5103080	1					
ANR	5103098	MultiplicativeExpression	n . d / v . d		5103080	1		/			
ANR	5103099	MemberAccess	n . d		5103080	0					
ANR	5103100	Identifier	n		5103080	0					
ANR	5103101	Identifier	d		5103080	1					
ANR	5103102	MemberAccess	v . d		5103080	1					
ANR	5103103	Identifier	v		5103080	0					
ANR	5103104	Identifier	d		5103080	1					
ANR	5103105	ElseStatement	else		5103080	0					
ANR	5103106	CompoundStatement		4:8:50:50	5103080	0					
ANR	5103107	ExpressionStatement	n . d = 0	50:2:2255:2262	5103080	0	True				
ANR	5103108	AssignmentExpression	n . d = 0		5103080	0		=			
ANR	5103109	MemberAccess	n . d		5103080	0					
ANR	5103110	Identifier	n		5103080	0					
ANR	5103111	Identifier	d		5103080	1					
ANR	5103112	PrimaryExpression	0		5103080	1					
ANR	5103113	IfStatement	if ( v . n )		5103080	1					
ANR	5103114	Condition	v . n	52:5:2272:2274	5103080	0	True				
ANR	5103115	MemberAccess	v . n		5103080	0					
ANR	5103116	Identifier	v		5103080	0					
ANR	5103117	Identifier	n		5103080	1					
ANR	5103118	CompoundStatement		7:10:76:76	5103080	1					
ANR	5103119	ExpressionStatement	n . n %= v . n	53:2:2281:2291	5103080	0	True				
ANR	5103120	AssignmentExpression	n . n %= v . n		5103080	0		%=			
ANR	5103121	MemberAccess	n . n		5103080	0					
ANR	5103122	Identifier	n		5103080	0					
ANR	5103123	Identifier	n		5103080	1					
ANR	5103124	MemberAccess	v . n		5103080	1					
ANR	5103125	Identifier	v		5103080	0					
ANR	5103126	Identifier	n		5103080	1					
ANR	5103127	ElseStatement	else		5103080	0					
ANR	5103128	CompoundStatement		9:8:100:100	5103080	0					
ANR	5103129	ExpressionStatement	n . n = 0	55:2:2305:2312	5103080	0	True				
ANR	5103130	AssignmentExpression	n . n = 0		5103080	0		=			
ANR	5103131	MemberAccess	n . n		5103080	0					
ANR	5103132	Identifier	n		5103080	0					
ANR	5103133	Identifier	n		5103080	1					
ANR	5103134	PrimaryExpression	0		5103080	1					
ANR	5103135	ReturnStatement	return n ;	57:1:2318:2326	5103080	2	True				
ANR	5103136	Identifier	n		5103080	0					
ANR	5103137	ReturnType	static inline RNumCalcValue		5103080	1					
ANR	5103138	Identifier	Nmod		5103080	2					
ANR	5103139	ParameterList	"RNumCalcValue n , RNumCalcValue v"		5103080	3					
ANR	5103140	Parameter	RNumCalcValue n	46:33:2166:2180	5103080	0	True				
ANR	5103141	ParameterType	RNumCalcValue		5103080	0					
ANR	5103142	Identifier	n		5103080	1					
ANR	5103143	Parameter	RNumCalcValue v	46:50:2183:2197	5103080	1	True				
ANR	5103144	ParameterType	RNumCalcValue		5103080	0					
ANR	5103145	Identifier	v		5103080	1					
ANR	5103146	CFGEntryNode	ENTRY		5103080		True				
ANR	5103147	CFGExitNode	EXIT		5103080		True				
ANR	5103148	Symbol	v		5103080						
ANR	5103149	Symbol	v . d		5103080						
ANR	5103150	Symbol	n . n		5103080						
ANR	5103151	Symbol	v . n		5103080						
ANR	5103152	Symbol	n . d		5103080						
ANR	5103153	Symbol	n		5103080						
ANR	5103154	Function	Ndiv	60:0:2331:2511							
ANR	5103155	FunctionDef	"Ndiv (RNumCalcValue n , RNumCalcValue v)"		5103154	0					
ANR	5103156	CompoundStatement		60:67:2398:2511	5103154	0					
ANR	5103157	IfStatement	if ( v . d )		5103154	0					
ANR	5103158	Condition	v . d	61:5:2405:2407	5103154	0	True				
ANR	5103159	MemberAccess	v . d		5103154	0					
ANR	5103160	Identifier	v		5103154	0					
ANR	5103161	Identifier	d		5103154	1					
ANR	5103162	CompoundStatement		2:10:11:11	5103154	1					
ANR	5103163	ExpressionStatement	n . d /= v . d	62:2:2414:2424	5103154	0	True				
ANR	5103164	AssignmentExpression	n . d /= v . d		5103154	0		/=			
ANR	5103165	MemberAccess	n . d		5103154	0					
ANR	5103166	Identifier	n		5103154	0					
ANR	5103167	Identifier	d		5103154	1					
ANR	5103168	MemberAccess	v . d		5103154	1					
ANR	5103169	Identifier	v		5103154	0					
ANR	5103170	Identifier	d		5103154	1					
ANR	5103171	ElseStatement	else		5103154	0					
ANR	5103172	CompoundStatement		4:8:35:35	5103154	0					
ANR	5103173	ExpressionStatement	n . d = 0	64:2:2438:2445	5103154	0	True				
ANR	5103174	AssignmentExpression	n . d = 0		5103154	0		=			
ANR	5103175	MemberAccess	n . d		5103154	0					
ANR	5103176	Identifier	n		5103154	0					
ANR	5103177	Identifier	d		5103154	1					
ANR	5103178	PrimaryExpression	0		5103154	1					
ANR	5103179	IfStatement	if ( v . n )		5103154	1					
ANR	5103180	Condition	v . n	66:5:2455:2457	5103154	0	True				
ANR	5103181	MemberAccess	v . n		5103154	0					
ANR	5103182	Identifier	v		5103154	0					
ANR	5103183	Identifier	n		5103154	1					
ANR	5103184	CompoundStatement		7:10:61:61	5103154	1					
ANR	5103185	ExpressionStatement	n . n /= v . n	67:2:2464:2474	5103154	0	True				
ANR	5103186	AssignmentExpression	n . n /= v . n		5103154	0		/=			
ANR	5103187	MemberAccess	n . n		5103154	0					
ANR	5103188	Identifier	n		5103154	0					
ANR	5103189	Identifier	n		5103154	1					
ANR	5103190	MemberAccess	v . n		5103154	1					
ANR	5103191	Identifier	v		5103154	0					
ANR	5103192	Identifier	n		5103154	1					
ANR	5103193	ElseStatement	else		5103154	0					
ANR	5103194	CompoundStatement		9:8:85:85	5103154	0					
ANR	5103195	ExpressionStatement	n . n = 0	69:2:2488:2495	5103154	0	True				
ANR	5103196	AssignmentExpression	n . n = 0		5103154	0		=			
ANR	5103197	MemberAccess	n . n		5103154	0					
ANR	5103198	Identifier	n		5103154	0					
ANR	5103199	Identifier	n		5103154	1					
ANR	5103200	PrimaryExpression	0		5103154	1					
ANR	5103201	ReturnStatement	return n ;	71:1:2501:2509	5103154	2	True				
ANR	5103202	Identifier	n		5103154	0					
ANR	5103203	ReturnType	static inline RNumCalcValue		5103154	1					
ANR	5103204	Identifier	Ndiv		5103154	2					
ANR	5103205	ParameterList	"RNumCalcValue n , RNumCalcValue v"		5103154	3					
ANR	5103206	Parameter	RNumCalcValue n	60:33:2364:2378	5103154	0	True				
ANR	5103207	ParameterType	RNumCalcValue		5103154	0					
ANR	5103208	Identifier	n		5103154	1					
ANR	5103209	Parameter	RNumCalcValue v	60:50:2381:2395	5103154	1	True				
ANR	5103210	ParameterType	RNumCalcValue		5103154	0					
ANR	5103211	Identifier	v		5103154	1					
ANR	5103212	CFGEntryNode	ENTRY		5103154		True				
ANR	5103213	CFGExitNode	EXIT		5103154		True				
ANR	5103214	Symbol	v		5103154						
ANR	5103215	Symbol	v . d		5103154						
ANR	5103216	Symbol	n . n		5103154						
ANR	5103217	Symbol	v . n		5103154						
ANR	5103218	Symbol	n . d		5103154						
ANR	5103219	Symbol	n		5103154						
ANR	5103220	DeclStmt									
ANR	5103221	Decl							RNumCalcValue	"RNumCalcValue ( RNum * , RNumCalc * , int )"	expr
ANR	5103222	DeclStmt									
ANR	5103223	Decl							RNumCalcValue	"RNumCalcValue ( RNum * , RNumCalc * , int )"	term
ANR	5103224	DeclStmt									
ANR	5103225	Decl							void	"void ( RNum * , RNumCalc * , const char * )"	error
ANR	5103226	DeclStmt									
ANR	5103227	Decl							RNumCalcValue	"RNumCalcValue ( RNum * , RNumCalc * , int )"	prim
ANR	5103228	DeclStmt									
ANR	5103229	Decl							RNumCalcToken	"RNumCalcToken ( RNum * , RNumCalc * )"	get_token
ANR	5103230	Function	error	80:0:2766:2899							
ANR	5103231	FunctionDef	"error (RNum * num , RNumCalc * nc , const char * s)"		5103230	0					
ANR	5103232	CompoundStatement		80:58:2824:2899	5103230	0					
ANR	5103233	ExpressionStatement	nc -> errors ++	81:1:2827:2839	5103230	0	True				
ANR	5103234	PostIncDecOperationExpression	nc -> errors ++		5103230	0					
ANR	5103235	PtrMemberAccess	nc -> errors		5103230	0					
ANR	5103236	Identifier	nc		5103230	0					
ANR	5103237	Identifier	errors		5103230	1					
ANR	5103238	IncDec	++		5103230	1					
ANR	5103239	ExpressionStatement	nc -> calc_err = s	82:1:2842:2858	5103230	1	True				
ANR	5103240	AssignmentExpression	nc -> calc_err = s		5103230	0		=			
ANR	5103241	PtrMemberAccess	nc -> calc_err		5103230	0					
ANR	5103242	Identifier	nc		5103230	0					
ANR	5103243	Identifier	calc_err		5103230	1					
ANR	5103244	Identifier	s		5103230	1					
ANR	5103245	ReturnType	static void		5103230	1					
ANR	5103246	Identifier	error		5103230	2					
ANR	5103247	ParameterList	"RNum * num , RNumCalc * nc , const char * s"		5103230	3					
ANR	5103248	Parameter	RNum * num	80:18:2784:2792	5103230	0	True				
ANR	5103249	ParameterType	RNum *		5103230	0					
ANR	5103250	Identifier	num		5103230	1					
ANR	5103251	Parameter	RNumCalc * nc	80:29:2795:2806	5103230	1	True				
ANR	5103252	ParameterType	RNumCalc *		5103230	0					
ANR	5103253	Identifier	nc		5103230	1					
ANR	5103254	Parameter	const char * s	80:43:2809:2821	5103230	2	True				
ANR	5103255	ParameterType	const char *		5103230	0					
ANR	5103256	Identifier	s		5103230	1					
ANR	5103257	CFGEntryNode	ENTRY		5103230		True				
ANR	5103258	CFGExitNode	EXIT		5103230		True				
ANR	5103259	Symbol	s		5103230						
ANR	5103260	Symbol	nc		5103230						
ANR	5103261	Symbol	num		5103230						
ANR	5103262	Symbol	* nc		5103230						
ANR	5103263	Symbol	nc -> calc_err		5103230						
ANR	5103264	Symbol	nc -> errors		5103230						
ANR	5103265	Function	expr	86:0:2902:3645							
ANR	5103266	FunctionDef	"expr (RNum * num , RNumCalc * nc , int get)"		5103265	0					
ANR	5103267	CompoundStatement		86:60:2962:3645	5103265	0					
ANR	5103268	IdentifierDeclStatement	"RNumCalcValue left = term ( num , nc , get ) ;"	87:1:2965:3005	5103265	0	True				
ANR	5103269	IdentifierDecl	"left = term ( num , nc , get )"		5103265	0					
ANR	5103270	IdentifierDeclType	RNumCalcValue		5103265	0					
ANR	5103271	Identifier	left		5103265	1					
ANR	5103272	AssignmentExpression	"left = term ( num , nc , get )"		5103265	2		=			
ANR	5103273	Identifier	left		5103265	0					
ANR	5103274	CallExpression	"term ( num , nc , get )"		5103265	1					
ANR	5103275	Callee	term		5103265	0					
ANR	5103276	Identifier	term		5103265	0					
ANR	5103277	ArgumentList	num		5103265	1					
ANR	5103278	Argument	num		5103265	0					
ANR	5103279	Identifier	num		5103265	0					
ANR	5103280	Argument	nc		5103265	1					
ANR	5103281	Identifier	nc		5103265	0					
ANR	5103282	Argument	get		5103265	2					
ANR	5103283	Identifier	get		5103265	0					
ANR	5103284	ForStatement	for ( ; ; )		5103265	1					
ANR	5103285	CompoundStatement		3:10:54:54	5103265	0					
ANR	5103286	SwitchStatement	switch ( nc -> curr_tok )		5103265	0					
ANR	5103287	Condition	nc -> curr_tok	89:10:3029:3040	5103265	0	True				
ANR	5103288	PtrMemberAccess	nc -> curr_tok		5103265	0					
ANR	5103289	Identifier	nc		5103265	0					
ANR	5103290	Identifier	curr_tok		5103265	1					
ANR	5103291	CompoundStatement		4:24:80:80	5103265	1					
ANR	5103292	Label	case RNCSHL :	90:2:3047:3058	5103265	0	True				
ANR	5103293	Identifier	RNCSHL		5103265	0					
ANR	5103294	ExpressionStatement	"left = Nshl ( left , term ( num , nc , 1 ) )"	90:15:3060:3097	5103265	1	True				
ANR	5103295	AssignmentExpression	"left = Nshl ( left , term ( num , nc , 1 ) )"		5103265	0		=			
ANR	5103296	Identifier	left		5103265	0					
ANR	5103297	CallExpression	"Nshl ( left , term ( num , nc , 1 ) )"		5103265	1					
ANR	5103298	Callee	Nshl		5103265	0					
ANR	5103299	Identifier	Nshl		5103265	0					
ANR	5103300	ArgumentList	left		5103265	1					
ANR	5103301	Argument	left		5103265	0					
ANR	5103302	Identifier	left		5103265	0					
ANR	5103303	Argument	"term ( num , nc , 1 )"		5103265	1					
ANR	5103304	CallExpression	"term ( num , nc , 1 )"		5103265	0					
ANR	5103305	Callee	term		5103265	0					
ANR	5103306	Identifier	term		5103265	0					
ANR	5103307	ArgumentList	num		5103265	1					
ANR	5103308	Argument	num		5103265	0					
ANR	5103309	Identifier	num		5103265	0					
ANR	5103310	Argument	nc		5103265	1					
ANR	5103311	Identifier	nc		5103265	0					
ANR	5103312	Argument	1		5103265	2					
ANR	5103313	PrimaryExpression	1		5103265	0					
ANR	5103314	BreakStatement	break ;	90:54:3099:3104	5103265	2	True				
ANR	5103315	Label	case RNCSHR :	91:2:3108:3119	5103265	3	True				
ANR	5103316	Identifier	RNCSHR		5103265	0					
ANR	5103317	ExpressionStatement	"left = Nshr ( left , term ( num , nc , 1 ) )"	91:15:3121:3158	5103265	4	True				
ANR	5103318	AssignmentExpression	"left = Nshr ( left , term ( num , nc , 1 ) )"		5103265	0		=			
ANR	5103319	Identifier	left		5103265	0					
ANR	5103320	CallExpression	"Nshr ( left , term ( num , nc , 1 ) )"		5103265	1					
ANR	5103321	Callee	Nshr		5103265	0					
ANR	5103322	Identifier	Nshr		5103265	0					
ANR	5103323	ArgumentList	left		5103265	1					
ANR	5103324	Argument	left		5103265	0					
ANR	5103325	Identifier	left		5103265	0					
ANR	5103326	Argument	"term ( num , nc , 1 )"		5103265	1					
ANR	5103327	CallExpression	"term ( num , nc , 1 )"		5103265	0					
ANR	5103328	Callee	term		5103265	0					
ANR	5103329	Identifier	term		5103265	0					
ANR	5103330	ArgumentList	num		5103265	1					
ANR	5103331	Argument	num		5103265	0					
ANR	5103332	Identifier	num		5103265	0					
ANR	5103333	Argument	nc		5103265	1					
ANR	5103334	Identifier	nc		5103265	0					
ANR	5103335	Argument	1		5103265	2					
ANR	5103336	PrimaryExpression	1		5103265	0					
ANR	5103337	BreakStatement	break ;	91:54:3160:3165	5103265	5	True				
ANR	5103338	Label	case RNCROL :	92:2:3169:3180	5103265	6	True				
ANR	5103339	Identifier	RNCROL		5103265	0					
ANR	5103340	ExpressionStatement	"left = Nrol ( left , term ( num , nc , 1 ) )"	92:15:3182:3219	5103265	7	True				
ANR	5103341	AssignmentExpression	"left = Nrol ( left , term ( num , nc , 1 ) )"		5103265	0		=			
ANR	5103342	Identifier	left		5103265	0					
ANR	5103343	CallExpression	"Nrol ( left , term ( num , nc , 1 ) )"		5103265	1					
ANR	5103344	Callee	Nrol		5103265	0					
ANR	5103345	Identifier	Nrol		5103265	0					
ANR	5103346	ArgumentList	left		5103265	1					
ANR	5103347	Argument	left		5103265	0					
ANR	5103348	Identifier	left		5103265	0					
ANR	5103349	Argument	"term ( num , nc , 1 )"		5103265	1					
ANR	5103350	CallExpression	"term ( num , nc , 1 )"		5103265	0					
ANR	5103351	Callee	term		5103265	0					
ANR	5103352	Identifier	term		5103265	0					
ANR	5103353	ArgumentList	num		5103265	1					
ANR	5103354	Argument	num		5103265	0					
ANR	5103355	Identifier	num		5103265	0					
ANR	5103356	Argument	nc		5103265	1					
ANR	5103357	Identifier	nc		5103265	0					
ANR	5103358	Argument	1		5103265	2					
ANR	5103359	PrimaryExpression	1		5103265	0					
ANR	5103360	BreakStatement	break ;	92:54:3221:3226	5103265	8	True				
ANR	5103361	Label	case RNCROR :	93:2:3230:3241	5103265	9	True				
ANR	5103362	Identifier	RNCROR		5103265	0					
ANR	5103363	ExpressionStatement	"left = Nror ( left , term ( num , nc , 1 ) )"	93:15:3243:3280	5103265	10	True				
ANR	5103364	AssignmentExpression	"left = Nror ( left , term ( num , nc , 1 ) )"		5103265	0		=			
ANR	5103365	Identifier	left		5103265	0					
ANR	5103366	CallExpression	"Nror ( left , term ( num , nc , 1 ) )"		5103265	1					
ANR	5103367	Callee	Nror		5103265	0					
ANR	5103368	Identifier	Nror		5103265	0					
ANR	5103369	ArgumentList	left		5103265	1					
ANR	5103370	Argument	left		5103265	0					
ANR	5103371	Identifier	left		5103265	0					
ANR	5103372	Argument	"term ( num , nc , 1 )"		5103265	1					
ANR	5103373	CallExpression	"term ( num , nc , 1 )"		5103265	0					
ANR	5103374	Callee	term		5103265	0					
ANR	5103375	Identifier	term		5103265	0					
ANR	5103376	ArgumentList	num		5103265	1					
ANR	5103377	Argument	num		5103265	0					
ANR	5103378	Identifier	num		5103265	0					
ANR	5103379	Argument	nc		5103265	1					
ANR	5103380	Identifier	nc		5103265	0					
ANR	5103381	Argument	1		5103265	2					
ANR	5103382	PrimaryExpression	1		5103265	0					
ANR	5103383	BreakStatement	break ;	93:54:3282:3287	5103265	11	True				
ANR	5103384	Label	case RNCPLUS :	94:2:3291:3303	5103265	12	True				
ANR	5103385	Identifier	RNCPLUS		5103265	0					
ANR	5103386	ExpressionStatement	"left = Nadd ( left , term ( num , nc , 1 ) )"	94:16:3305:3342	5103265	13	True				
ANR	5103387	AssignmentExpression	"left = Nadd ( left , term ( num , nc , 1 ) )"		5103265	0		=			
ANR	5103388	Identifier	left		5103265	0					
ANR	5103389	CallExpression	"Nadd ( left , term ( num , nc , 1 ) )"		5103265	1					
ANR	5103390	Callee	Nadd		5103265	0					
ANR	5103391	Identifier	Nadd		5103265	0					
ANR	5103392	ArgumentList	left		5103265	1					
ANR	5103393	Argument	left		5103265	0					
ANR	5103394	Identifier	left		5103265	0					
ANR	5103395	Argument	"term ( num , nc , 1 )"		5103265	1					
ANR	5103396	CallExpression	"term ( num , nc , 1 )"		5103265	0					
ANR	5103397	Callee	term		5103265	0					
ANR	5103398	Identifier	term		5103265	0					
ANR	5103399	ArgumentList	num		5103265	1					
ANR	5103400	Argument	num		5103265	0					
ANR	5103401	Identifier	num		5103265	0					
ANR	5103402	Argument	nc		5103265	1					
ANR	5103403	Identifier	nc		5103265	0					
ANR	5103404	Argument	1		5103265	2					
ANR	5103405	PrimaryExpression	1		5103265	0					
ANR	5103406	BreakStatement	break ;	94:55:3344:3349	5103265	14	True				
ANR	5103407	Label	case RNCMINUS :	95:2:3353:3366	5103265	15	True				
ANR	5103408	Identifier	RNCMINUS		5103265	0					
ANR	5103409	ExpressionStatement	"left = Nsub ( left , term ( num , nc , 1 ) )"	95:17:3368:3405	5103265	16	True				
ANR	5103410	AssignmentExpression	"left = Nsub ( left , term ( num , nc , 1 ) )"		5103265	0		=			
ANR	5103411	Identifier	left		5103265	0					
ANR	5103412	CallExpression	"Nsub ( left , term ( num , nc , 1 ) )"		5103265	1					
ANR	5103413	Callee	Nsub		5103265	0					
ANR	5103414	Identifier	Nsub		5103265	0					
ANR	5103415	ArgumentList	left		5103265	1					
ANR	5103416	Argument	left		5103265	0					
ANR	5103417	Identifier	left		5103265	0					
ANR	5103418	Argument	"term ( num , nc , 1 )"		5103265	1					
ANR	5103419	CallExpression	"term ( num , nc , 1 )"		5103265	0					
ANR	5103420	Callee	term		5103265	0					
ANR	5103421	Identifier	term		5103265	0					
ANR	5103422	ArgumentList	num		5103265	1					
ANR	5103423	Argument	num		5103265	0					
ANR	5103424	Identifier	num		5103265	0					
ANR	5103425	Argument	nc		5103265	1					
ANR	5103426	Identifier	nc		5103265	0					
ANR	5103427	Argument	1		5103265	2					
ANR	5103428	PrimaryExpression	1		5103265	0					
ANR	5103429	BreakStatement	break ;	95:56:3407:3412	5103265	17	True				
ANR	5103430	Label	case RNCXOR :	96:2:3416:3427	5103265	18	True				
ANR	5103431	Identifier	RNCXOR		5103265	0					
ANR	5103432	ExpressionStatement	"left = Nxor ( left , term ( num , nc , 1 ) )"	96:15:3429:3466	5103265	19	True				
ANR	5103433	AssignmentExpression	"left = Nxor ( left , term ( num , nc , 1 ) )"		5103265	0		=			
ANR	5103434	Identifier	left		5103265	0					
ANR	5103435	CallExpression	"Nxor ( left , term ( num , nc , 1 ) )"		5103265	1					
ANR	5103436	Callee	Nxor		5103265	0					
ANR	5103437	Identifier	Nxor		5103265	0					
ANR	5103438	ArgumentList	left		5103265	1					
ANR	5103439	Argument	left		5103265	0					
ANR	5103440	Identifier	left		5103265	0					
ANR	5103441	Argument	"term ( num , nc , 1 )"		5103265	1					
ANR	5103442	CallExpression	"term ( num , nc , 1 )"		5103265	0					
ANR	5103443	Callee	term		5103265	0					
ANR	5103444	Identifier	term		5103265	0					
ANR	5103445	ArgumentList	num		5103265	1					
ANR	5103446	Argument	num		5103265	0					
ANR	5103447	Identifier	num		5103265	0					
ANR	5103448	Argument	nc		5103265	1					
ANR	5103449	Identifier	nc		5103265	0					
ANR	5103450	Argument	1		5103265	2					
ANR	5103451	PrimaryExpression	1		5103265	0					
ANR	5103452	BreakStatement	break ;	96:54:3468:3473	5103265	20	True				
ANR	5103453	Label	case RNCORR :	97:2:3477:3488	5103265	21	True				
ANR	5103454	Identifier	RNCORR		5103265	0					
ANR	5103455	ExpressionStatement	"left = Norr ( left , term ( num , nc , 1 ) )"	97:15:3490:3527	5103265	22	True				
ANR	5103456	AssignmentExpression	"left = Norr ( left , term ( num , nc , 1 ) )"		5103265	0		=			
ANR	5103457	Identifier	left		5103265	0					
ANR	5103458	CallExpression	"Norr ( left , term ( num , nc , 1 ) )"		5103265	1					
ANR	5103459	Callee	Norr		5103265	0					
ANR	5103460	Identifier	Norr		5103265	0					
ANR	5103461	ArgumentList	left		5103265	1					
ANR	5103462	Argument	left		5103265	0					
ANR	5103463	Identifier	left		5103265	0					
ANR	5103464	Argument	"term ( num , nc , 1 )"		5103265	1					
ANR	5103465	CallExpression	"term ( num , nc , 1 )"		5103265	0					
ANR	5103466	Callee	term		5103265	0					
ANR	5103467	Identifier	term		5103265	0					
ANR	5103468	ArgumentList	num		5103265	1					
ANR	5103469	Argument	num		5103265	0					
ANR	5103470	Identifier	num		5103265	0					
ANR	5103471	Argument	nc		5103265	1					
ANR	5103472	Identifier	nc		5103265	0					
ANR	5103473	Argument	1		5103265	2					
ANR	5103474	PrimaryExpression	1		5103265	0					
ANR	5103475	BreakStatement	break ;	97:54:3529:3534	5103265	23	True				
ANR	5103476	Label	case RNCAND :	98:2:3538:3549	5103265	24	True				
ANR	5103477	Identifier	RNCAND		5103265	0					
ANR	5103478	ExpressionStatement	"left = Nand ( left , term ( num , nc , 1 ) )"	98:15:3551:3588	5103265	25	True				
ANR	5103479	AssignmentExpression	"left = Nand ( left , term ( num , nc , 1 ) )"		5103265	0		=			
ANR	5103480	Identifier	left		5103265	0					
ANR	5103481	CallExpression	"Nand ( left , term ( num , nc , 1 ) )"		5103265	1					
ANR	5103482	Callee	Nand		5103265	0					
ANR	5103483	Identifier	Nand		5103265	0					
ANR	5103484	ArgumentList	left		5103265	1					
ANR	5103485	Argument	left		5103265	0					
ANR	5103486	Identifier	left		5103265	0					
ANR	5103487	Argument	"term ( num , nc , 1 )"		5103265	1					
ANR	5103488	CallExpression	"term ( num , nc , 1 )"		5103265	0					
ANR	5103489	Callee	term		5103265	0					
ANR	5103490	Identifier	term		5103265	0					
ANR	5103491	ArgumentList	num		5103265	1					
ANR	5103492	Argument	num		5103265	0					
ANR	5103493	Identifier	num		5103265	0					
ANR	5103494	Argument	nc		5103265	1					
ANR	5103495	Identifier	nc		5103265	0					
ANR	5103496	Argument	1		5103265	2					
ANR	5103497	PrimaryExpression	1		5103265	0					
ANR	5103498	BreakStatement	break ;	98:54:3590:3595	5103265	26	True				
ANR	5103499	Label	default :	99:2:3599:3606	5103265	27	True				
ANR	5103500	Identifier	default		5103265	0					
ANR	5103501	ReturnStatement	return left ;	100:3:3611:3622	5103265	28	True				
ANR	5103502	Identifier	left		5103265	0					
ANR	5103503	ReturnStatement	return left ;	103:1:3632:3643	5103265	2	True				
ANR	5103504	Identifier	left		5103265	0					
ANR	5103505	ReturnType	static RNumCalcValue		5103265	1					
ANR	5103506	Identifier	expr		5103265	2					
ANR	5103507	ParameterList	"RNum * num , RNumCalc * nc , int get"		5103265	3					
ANR	5103508	Parameter	RNum * num	86:26:2928:2936	5103265	0	True				
ANR	5103509	ParameterType	RNum *		5103265	0					
ANR	5103510	Identifier	num		5103265	1					
ANR	5103511	Parameter	RNumCalc * nc	86:37:2939:2950	5103265	1	True				
ANR	5103512	ParameterType	RNumCalc *		5103265	0					
ANR	5103513	Identifier	nc		5103265	1					
ANR	5103514	Parameter	int get	86:51:2953:2959	5103265	2	True				
ANR	5103515	ParameterType	int		5103265	0					
ANR	5103516	Identifier	get		5103265	1					
ANR	5103517	CFGEntryNode	ENTRY		5103265		True				
ANR	5103518	CFGExitNode	EXIT		5103265		True				
ANR	5103519	InfiniteForNode	true		5103265		True				
ANR	5103520	Symbol	Nror		5103265						
ANR	5103521	Symbol	Nrol		5103265						
ANR	5103522	Symbol	Norr		5103265						
ANR	5103523	Symbol	num		5103265						
ANR	5103524	Symbol	nc -> curr_tok		5103265						
ANR	5103525	Symbol	Nxor		5103265						
ANR	5103526	Symbol	Nshr		5103265						
ANR	5103527	Symbol	Nshl		5103265						
ANR	5103528	Symbol	Nand		5103265						
ANR	5103529	Symbol	nc		5103265						
ANR	5103530	Symbol	left		5103265						
ANR	5103531	Symbol	get		5103265						
ANR	5103532	Symbol	Nadd		5103265						
ANR	5103533	Symbol	Nsub		5103265						
ANR	5103534	Symbol	* nc		5103265						
ANR	5103535	Symbol	term		5103265						
ANR	5103536	Function	term	106:0:3648:4232							
ANR	5103537	FunctionDef	"term (RNum * num , RNumCalc * nc , int get)"		5103536	0					
ANR	5103538	CompoundStatement		106:60:3708:4232	5103536	0					
ANR	5103539	IdentifierDeclStatement	"RNumCalcValue left = prim ( num , nc , get ) ;"	107:1:3711:3751	5103536	0	True				
ANR	5103540	IdentifierDecl	"left = prim ( num , nc , get )"		5103536	0					
ANR	5103541	IdentifierDeclType	RNumCalcValue		5103536	0					
ANR	5103542	Identifier	left		5103536	1					
ANR	5103543	AssignmentExpression	"left = prim ( num , nc , get )"		5103536	2		=			
ANR	5103544	Identifier	left		5103536	0					
ANR	5103545	CallExpression	"prim ( num , nc , get )"		5103536	1					
ANR	5103546	Callee	prim		5103536	0					
ANR	5103547	Identifier	prim		5103536	0					
ANR	5103548	ArgumentList	num		5103536	1					
ANR	5103549	Argument	num		5103536	0					
ANR	5103550	Identifier	num		5103536	0					
ANR	5103551	Argument	nc		5103536	1					
ANR	5103552	Identifier	nc		5103536	0					
ANR	5103553	Argument	get		5103536	2					
ANR	5103554	Identifier	get		5103536	0					
ANR	5103555	ForStatement	for ( ; ; )		5103536	1					
ANR	5103556	CompoundStatement		3:10:54:54	5103536	0					
ANR	5103557	IfStatement	if ( nc -> curr_tok == RNCMUL )		5103536	0					
ANR	5103558	Condition	nc -> curr_tok == RNCMUL	109:6:3771:3792	5103536	0	True				
ANR	5103559	EqualityExpression	nc -> curr_tok == RNCMUL		5103536	0		==			
ANR	5103560	PtrMemberAccess	nc -> curr_tok		5103536	0					
ANR	5103561	Identifier	nc		5103536	0					
ANR	5103562	Identifier	curr_tok		5103536	1					
ANR	5103563	Identifier	RNCMUL		5103536	1					
ANR	5103564	CompoundStatement		4:30:86:86	5103536	1					
ANR	5103565	ExpressionStatement	"left = Nmul ( left , prim ( num , nc , 1 ) )"	110:3:3800:3837	5103536	0	True				
ANR	5103566	AssignmentExpression	"left = Nmul ( left , prim ( num , nc , 1 ) )"		5103536	0		=			
ANR	5103567	Identifier	left		5103536	0					
ANR	5103568	CallExpression	"Nmul ( left , prim ( num , nc , 1 ) )"		5103536	1					
ANR	5103569	Callee	Nmul		5103536	0					
ANR	5103570	Identifier	Nmul		5103536	0					
ANR	5103571	ArgumentList	left		5103536	1					
ANR	5103572	Argument	left		5103536	0					
ANR	5103573	Identifier	left		5103536	0					
ANR	5103574	Argument	"prim ( num , nc , 1 )"		5103536	1					
ANR	5103575	CallExpression	"prim ( num , nc , 1 )"		5103536	0					
ANR	5103576	Callee	prim		5103536	0					
ANR	5103577	Identifier	prim		5103536	0					
ANR	5103578	ArgumentList	num		5103536	1					
ANR	5103579	Argument	num		5103536	0					
ANR	5103580	Identifier	num		5103536	0					
ANR	5103581	Argument	nc		5103536	1					
ANR	5103582	Identifier	nc		5103536	0					
ANR	5103583	Argument	1		5103536	2					
ANR	5103584	PrimaryExpression	1		5103536	0					
ANR	5103585	ElseStatement	else		5103536	0					
ANR	5103586	IfStatement	if ( nc -> curr_tok == RNCMOD )		5103536	0					
ANR	5103587	Condition	nc -> curr_tok == RNCMOD	111:13:3852:3873	5103536	0	True				
ANR	5103588	EqualityExpression	nc -> curr_tok == RNCMOD		5103536	0		==			
ANR	5103589	PtrMemberAccess	nc -> curr_tok		5103536	0					
ANR	5103590	Identifier	nc		5103536	0					
ANR	5103591	Identifier	curr_tok		5103536	1					
ANR	5103592	Identifier	RNCMOD		5103536	1					
ANR	5103593	CompoundStatement		7:3:172:207	5103536	1					
ANR	5103594	IdentifierDeclStatement	"RNumCalcValue d = prim ( num , nc , 1 ) ;"	112:3:3881:3916	5103536	0	True				
ANR	5103595	IdentifierDecl	"d = prim ( num , nc , 1 )"		5103536	0					
ANR	5103596	IdentifierDeclType	RNumCalcValue		5103536	0					
ANR	5103597	Identifier	d		5103536	1					
ANR	5103598	AssignmentExpression	"d = prim ( num , nc , 1 )"		5103536	2		=			
ANR	5103599	Identifier	d		5103536	0					
ANR	5103600	CallExpression	"prim ( num , nc , 1 )"		5103536	1					
ANR	5103601	Callee	prim		5103536	0					
ANR	5103602	Identifier	prim		5103536	0					
ANR	5103603	ArgumentList	num		5103536	1					
ANR	5103604	Argument	num		5103536	0					
ANR	5103605	Identifier	num		5103536	0					
ANR	5103606	Argument	nc		5103536	1					
ANR	5103607	Identifier	nc		5103536	0					
ANR	5103608	Argument	1		5103536	2					
ANR	5103609	PrimaryExpression	1		5103536	0					
ANR	5103610	IfStatement	if ( ! d . d )		5103536	1					
ANR	5103611	Condition	! d . d	113:7:3925:3928	5103536	0	True				
ANR	5103612	UnaryOperationExpression	! d . d		5103536	0					
ANR	5103613	UnaryOperator	!		5103536	0					
ANR	5103614	MemberAccess	d . d		5103536	1					
ANR	5103615	Identifier	d		5103536	0					
ANR	5103616	Identifier	d		5103536	1					
ANR	5103617	CompoundStatement		8:13:222:222	5103536	1					
ANR	5103618	ReturnStatement	return d ;	115:4:3975:3983	5103536	0	True				
ANR	5103619	Identifier	d		5103536	0					
ANR	5103620	ExpressionStatement	"left = Nmod ( left , d )"	117:3:3993:4014	5103536	2	True				
ANR	5103621	AssignmentExpression	"left = Nmod ( left , d )"		5103536	0		=			
ANR	5103622	Identifier	left		5103536	0					
ANR	5103623	CallExpression	"Nmod ( left , d )"		5103536	1					
ANR	5103624	Callee	Nmod		5103536	0					
ANR	5103625	Identifier	Nmod		5103536	0					
ANR	5103626	ArgumentList	left		5103536	1					
ANR	5103627	Argument	left		5103536	0					
ANR	5103628	Identifier	left		5103536	0					
ANR	5103629	Argument	d		5103536	1					
ANR	5103630	Identifier	d		5103536	0					
ANR	5103631	ElseStatement	else		5103536	0					
ANR	5103632	IfStatement	if ( nc -> curr_tok == RNCDIV )		5103536	0					
ANR	5103633	Condition	nc -> curr_tok == RNCDIV	118:13:4029:4050	5103536	0	True				
ANR	5103634	EqualityExpression	nc -> curr_tok == RNCDIV		5103536	0		==			
ANR	5103635	PtrMemberAccess	nc -> curr_tok		5103536	0					
ANR	5103636	Identifier	nc		5103536	0					
ANR	5103637	Identifier	curr_tok		5103536	1					
ANR	5103638	Identifier	RNCDIV		5103536	1					
ANR	5103639	CompoundStatement		14:3:349:384	5103536	1					
ANR	5103640	IdentifierDeclStatement	"RNumCalcValue d = prim ( num , nc , 1 ) ;"	119:3:4058:4093	5103536	0	True				
ANR	5103641	IdentifierDecl	"d = prim ( num , nc , 1 )"		5103536	0					
ANR	5103642	IdentifierDeclType	RNumCalcValue		5103536	0					
ANR	5103643	Identifier	d		5103536	1					
ANR	5103644	AssignmentExpression	"d = prim ( num , nc , 1 )"		5103536	2		=			
ANR	5103645	Identifier	d		5103536	0					
ANR	5103646	CallExpression	"prim ( num , nc , 1 )"		5103536	1					
ANR	5103647	Callee	prim		5103536	0					
ANR	5103648	Identifier	prim		5103536	0					
ANR	5103649	ArgumentList	num		5103536	1					
ANR	5103650	Argument	num		5103536	0					
ANR	5103651	Identifier	num		5103536	0					
ANR	5103652	Argument	nc		5103536	1					
ANR	5103653	Identifier	nc		5103536	0					
ANR	5103654	Argument	1		5103536	2					
ANR	5103655	PrimaryExpression	1		5103536	0					
ANR	5103656	IfStatement	if ( num != NULL && ( ! d . d || ! d . n ) )		5103536	1					
ANR	5103657	Condition	num != NULL && ( ! d . d || ! d . n )	120:7:4102:4130	5103536	0	True				
ANR	5103658	AndExpression	num != NULL && ( ! d . d || ! d . n )		5103536	0		&&			
ANR	5103659	EqualityExpression	num != NULL		5103536	0		!=			
ANR	5103660	Identifier	num		5103536	0					
ANR	5103661	Identifier	NULL		5103536	1					
ANR	5103662	OrExpression	! d . d || ! d . n		5103536	1		||			
ANR	5103663	UnaryOperationExpression	! d . d		5103536	0					
ANR	5103664	UnaryOperator	!		5103536	0					
ANR	5103665	MemberAccess	d . d		5103536	1					
ANR	5103666	Identifier	d		5103536	0					
ANR	5103667	Identifier	d		5103536	1					
ANR	5103668	UnaryOperationExpression	! d . n		5103536	1					
ANR	5103669	UnaryOperator	!		5103536	0					
ANR	5103670	MemberAccess	d . n		5103536	1					
ANR	5103671	Identifier	d		5103536	0					
ANR	5103672	Identifier	n		5103536	1					
ANR	5103673	CompoundStatement		15:38:424:424	5103536	1					
ANR	5103674	ExpressionStatement	num -> dbz = 1	121:4:4139:4151	5103536	0	True				
ANR	5103675	AssignmentExpression	num -> dbz = 1		5103536	0		=			
ANR	5103676	PtrMemberAccess	num -> dbz		5103536	0					
ANR	5103677	Identifier	num		5103536	0					
ANR	5103678	Identifier	dbz		5103536	1					
ANR	5103679	PrimaryExpression	1		5103536	1					
ANR	5103680	ReturnStatement	return d ;	122:4:4157:4165	5103536	1	True				
ANR	5103681	Identifier	d		5103536	0					
ANR	5103682	ExpressionStatement	"left = Ndiv ( left , d )"	124:3:4175:4196	5103536	2	True				
ANR	5103683	AssignmentExpression	"left = Ndiv ( left , d )"		5103536	0		=			
ANR	5103684	Identifier	left		5103536	0					
ANR	5103685	CallExpression	"Ndiv ( left , d )"		5103536	1					
ANR	5103686	Callee	Ndiv		5103536	0					
ANR	5103687	Identifier	Ndiv		5103536	0					
ANR	5103688	ArgumentList	left		5103536	1					
ANR	5103689	Argument	left		5103536	0					
ANR	5103690	Identifier	left		5103536	0					
ANR	5103691	Argument	d		5103536	1					
ANR	5103692	Identifier	d		5103536	0					
ANR	5103693	ElseStatement	else		5103536	0					
ANR	5103694	CompoundStatement		20:9:498:498	5103536	0					
ANR	5103695	ReturnStatement	return left ;	126:3:4212:4223	5103536	0	True				
ANR	5103696	Identifier	left		5103536	0					
ANR	5103697	ReturnType	static RNumCalcValue		5103536	1					
ANR	5103698	Identifier	term		5103536	2					
ANR	5103699	ParameterList	"RNum * num , RNumCalc * nc , int get"		5103536	3					
ANR	5103700	Parameter	RNum * num	106:26:3674:3682	5103536	0	True				
ANR	5103701	ParameterType	RNum *		5103536	0					
ANR	5103702	Identifier	num		5103536	1					
ANR	5103703	Parameter	RNumCalc * nc	106:37:3685:3696	5103536	1	True				
ANR	5103704	ParameterType	RNumCalc *		5103536	0					
ANR	5103705	Identifier	nc		5103536	1					
ANR	5103706	Parameter	int get	106:51:3699:3705	5103536	2	True				
ANR	5103707	ParameterType	int		5103536	0					
ANR	5103708	Identifier	get		5103536	1					
ANR	5103709	CFGEntryNode	ENTRY		5103536		True				
ANR	5103710	CFGExitNode	EXIT		5103536		True				
ANR	5103711	InfiniteForNode	true		5103536		True				
ANR	5103712	Symbol	RNCMOD		5103536						
ANR	5103713	Symbol	NULL		5103536						
ANR	5103714	Symbol	d		5103536						
ANR	5103715	Symbol	RNCMUL		5103536						
ANR	5103716	Symbol	d . d		5103536						
ANR	5103717	Symbol	num		5103536						
ANR	5103718	Symbol	nc -> curr_tok		5103536						
ANR	5103719	Symbol	num -> dbz		5103536						
ANR	5103720	Symbol	Ndiv		5103536						
ANR	5103721	Symbol	d . n		5103536						
ANR	5103722	Symbol	* num		5103536						
ANR	5103723	Symbol	Nmod		5103536						
ANR	5103724	Symbol	prim		5103536						
ANR	5103725	Symbol	RNCDIV		5103536						
ANR	5103726	Symbol	Nmul		5103536						
ANR	5103727	Symbol	nc		5103536						
ANR	5103728	Symbol	left		5103536						
ANR	5103729	Symbol	get		5103536						
ANR	5103730	Symbol	* nc		5103536						
ANR	5103731	Function	prim	131:0:4235:5618							
ANR	5103732	FunctionDef	"prim (RNum * num , RNumCalc * nc , int get)"		5103731	0					
ANR	5103733	CompoundStatement		131:60:4295:5618	5103731	0					
ANR	5103734	IdentifierDeclStatement	RNumCalcValue v = { 0 } ;	132:1:4298:4319	5103731	0	True				
ANR	5103735	IdentifierDecl	v = { 0 }		5103731	0					
ANR	5103736	IdentifierDeclType	RNumCalcValue		5103731	0					
ANR	5103737	Identifier	v		5103731	1					
ANR	5103738	AssignmentExpression	v = { 0 }		5103731	2		=			
ANR	5103739	Identifier	v		5103731	0					
ANR	5103740	InitializerList	0		5103731	1					
ANR	5103741	PrimaryExpression	0		5103731	0					
ANR	5103742	IfStatement	if ( get )		5103731	1					
ANR	5103743	Condition	get	133:5:4326:4328	5103731	0	True				
ANR	5103744	Identifier	get		5103731	0					
ANR	5103745	CompoundStatement		3:10:35:35	5103731	1					
ANR	5103746	ExpressionStatement	"get_token ( num , nc )"	134:2:4335:4354	5103731	0	True				
ANR	5103747	CallExpression	"get_token ( num , nc )"		5103731	0					
ANR	5103748	Callee	get_token		5103731	0					
ANR	5103749	Identifier	get_token		5103731	0					
ANR	5103750	ArgumentList	num		5103731	1					
ANR	5103751	Argument	num		5103731	0					
ANR	5103752	Identifier	num		5103731	0					
ANR	5103753	Argument	nc		5103731	1					
ANR	5103754	Identifier	nc		5103731	0					
ANR	5103755	SwitchStatement	switch ( nc -> curr_tok )		5103731	2					
ANR	5103756	Condition	nc -> curr_tok	136:9:4368:4379	5103731	0	True				
ANR	5103757	PtrMemberAccess	nc -> curr_tok		5103731	0					
ANR	5103758	Identifier	nc		5103731	0					
ANR	5103759	Identifier	curr_tok		5103731	1					
ANR	5103760	CompoundStatement		6:23:86:86	5103731	1					
ANR	5103761	Label	case RNCNUMBER :	137:1:4385:4399	5103731	0	True				
ANR	5103762	Identifier	RNCNUMBER		5103731	0					
ANR	5103763	ExpressionStatement	v = nc -> number_value	138:2:4403:4423	5103731	1	True				
ANR	5103764	AssignmentExpression	v = nc -> number_value		5103731	0		=			
ANR	5103765	Identifier	v		5103731	0					
ANR	5103766	PtrMemberAccess	nc -> number_value		5103731	1					
ANR	5103767	Identifier	nc		5103731	0					
ANR	5103768	Identifier	number_value		5103731	1					
ANR	5103769	ExpressionStatement	"get_token ( num , nc )"	139:2:4427:4446	5103731	2	True				
ANR	5103770	CallExpression	"get_token ( num , nc )"		5103731	0					
ANR	5103771	Callee	get_token		5103731	0					
ANR	5103772	Identifier	get_token		5103731	0					
ANR	5103773	ArgumentList	num		5103731	1					
ANR	5103774	Argument	num		5103731	0					
ANR	5103775	Identifier	num		5103731	0					
ANR	5103776	Argument	nc		5103731	1					
ANR	5103777	Identifier	nc		5103731	0					
ANR	5103778	ReturnStatement	return v ;	140:2:4450:4458	5103731	3	True				
ANR	5103779	Identifier	v		5103731	0					
ANR	5103780	Label	case RNCNAME :	141:1:4461:4473	5103731	4	True				
ANR	5103781	Identifier	RNCNAME		5103731	0					
ANR	5103782	ExpressionStatement	r_str_trim ( nc -> string_value )	144:2:4591:4620	5103731	5	True				
ANR	5103783	CallExpression	r_str_trim ( nc -> string_value )		5103731	0					
ANR	5103784	Callee	r_str_trim		5103731	0					
ANR	5103785	Identifier	r_str_trim		5103731	0					
ANR	5103786	ArgumentList	nc -> string_value		5103731	1					
ANR	5103787	Argument	nc -> string_value		5103731	0					
ANR	5103788	PtrMemberAccess	nc -> string_value		5103731	0					
ANR	5103789	Identifier	nc		5103731	0					
ANR	5103790	Identifier	string_value		5103731	1					
ANR	5103791	ExpressionStatement	"v = Nset ( r_num_get ( num , nc -> string_value ) )"	145:2:4624:4668	5103731	6	True				
ANR	5103792	AssignmentExpression	"v = Nset ( r_num_get ( num , nc -> string_value ) )"		5103731	0		=			
ANR	5103793	Identifier	v		5103731	0					
ANR	5103794	CallExpression	"Nset ( r_num_get ( num , nc -> string_value ) )"		5103731	1					
ANR	5103795	Callee	Nset		5103731	0					
ANR	5103796	Identifier	Nset		5103731	0					
ANR	5103797	ArgumentList	"r_num_get ( num , nc -> string_value )"		5103731	1					
ANR	5103798	Argument	"r_num_get ( num , nc -> string_value )"		5103731	0					
ANR	5103799	CallExpression	"r_num_get ( num , nc -> string_value )"		5103731	0					
ANR	5103800	Callee	r_num_get		5103731	0					
ANR	5103801	Identifier	r_num_get		5103731	0					
ANR	5103802	ArgumentList	num		5103731	1					
ANR	5103803	Argument	num		5103731	0					
ANR	5103804	Identifier	num		5103731	0					
ANR	5103805	Argument	nc -> string_value		5103731	1					
ANR	5103806	PtrMemberAccess	nc -> string_value		5103731	0					
ANR	5103807	Identifier	nc		5103731	0					
ANR	5103808	Identifier	string_value		5103731	1					
ANR	5103809	ExpressionStatement	"get_token ( num , nc )"	146:2:4672:4691	5103731	7	True				
ANR	5103810	CallExpression	"get_token ( num , nc )"		5103731	0					
ANR	5103811	Callee	get_token		5103731	0					
ANR	5103812	Identifier	get_token		5103731	0					
ANR	5103813	ArgumentList	num		5103731	1					
ANR	5103814	Argument	num		5103731	0					
ANR	5103815	Identifier	num		5103731	0					
ANR	5103816	Argument	nc		5103731	1					
ANR	5103817	Identifier	nc		5103731	0					
ANR	5103818	IfStatement	if ( nc -> curr_tok == RNCASSIGN )		5103731	8					
ANR	5103819	Condition	nc -> curr_tok == RNCASSIGN	147:6:4699:4724	5103731	0	True				
ANR	5103820	EqualityExpression	nc -> curr_tok == RNCASSIGN		5103731	0		==			
ANR	5103821	PtrMemberAccess	nc -> curr_tok		5103731	0					
ANR	5103822	Identifier	nc		5103731	0					
ANR	5103823	Identifier	curr_tok		5103731	1					
ANR	5103824	Identifier	RNCASSIGN		5103731	1					
ANR	5103825	CompoundStatement		17:34:431:431	5103731	1					
ANR	5103826	ExpressionStatement	"v = expr ( num , nc , 1 )"	148:3:4732:4753	5103731	0	True				
ANR	5103827	AssignmentExpression	"v = expr ( num , nc , 1 )"		5103731	0		=			
ANR	5103828	Identifier	v		5103731	0					
ANR	5103829	CallExpression	"expr ( num , nc , 1 )"		5103731	1					
ANR	5103830	Callee	expr		5103731	0					
ANR	5103831	Identifier	expr		5103731	0					
ANR	5103832	ArgumentList	num		5103731	1					
ANR	5103833	Argument	num		5103731	0					
ANR	5103834	Identifier	num		5103731	0					
ANR	5103835	Argument	nc		5103731	1					
ANR	5103836	Identifier	nc		5103731	0					
ANR	5103837	Argument	1		5103731	2					
ANR	5103838	PrimaryExpression	1		5103731	0					
ANR	5103839	IfStatement	if ( nc -> curr_tok == RNCINC )		5103731	9					
ANR	5103840	Condition	nc -> curr_tok == RNCINC	150:6:4765:4786	5103731	0	True				
ANR	5103841	EqualityExpression	nc -> curr_tok == RNCINC		5103731	0		==			
ANR	5103842	PtrMemberAccess	nc -> curr_tok		5103731	0					
ANR	5103843	Identifier	nc		5103731	0					
ANR	5103844	Identifier	curr_tok		5103731	1					
ANR	5103845	Identifier	RNCINC		5103731	1					
ANR	5103846	CompoundStatement		20:30:493:493	5103731	1					
ANR	5103847	ExpressionStatement	"Naddi ( v , 1 )"	151:3:4794:4806	5103731	0	True				
ANR	5103848	CallExpression	"Naddi ( v , 1 )"		5103731	0					
ANR	5103849	Callee	Naddi		5103731	0					
ANR	5103850	Identifier	Naddi		5103731	0					
ANR	5103851	ArgumentList	v		5103731	1					
ANR	5103852	Argument	v		5103731	0					
ANR	5103853	Identifier	v		5103731	0					
ANR	5103854	Argument	1		5103731	1					
ANR	5103855	PrimaryExpression	1		5103731	0					
ANR	5103856	IfStatement	if ( nc -> curr_tok == RNCDEC )		5103731	10					
ANR	5103857	Condition	nc -> curr_tok == RNCDEC	153:6:4818:4839	5103731	0	True				
ANR	5103858	EqualityExpression	nc -> curr_tok == RNCDEC		5103731	0		==			
ANR	5103859	PtrMemberAccess	nc -> curr_tok		5103731	0					
ANR	5103860	Identifier	nc		5103731	0					
ANR	5103861	Identifier	curr_tok		5103731	1					
ANR	5103862	Identifier	RNCDEC		5103731	1					
ANR	5103863	CompoundStatement		23:30:546:546	5103731	1					
ANR	5103864	ExpressionStatement	"Nsubi ( v , 1 )"	154:3:4847:4859	5103731	0	True				
ANR	5103865	CallExpression	"Nsubi ( v , 1 )"		5103731	0					
ANR	5103866	Callee	Nsubi		5103731	0					
ANR	5103867	Identifier	Nsubi		5103731	0					
ANR	5103868	ArgumentList	v		5103731	1					
ANR	5103869	Argument	v		5103731	0					
ANR	5103870	Identifier	v		5103731	0					
ANR	5103871	Argument	1		5103731	1					
ANR	5103872	PrimaryExpression	1		5103731	0					
ANR	5103873	ReturnStatement	return v ;	156:2:4867:4875	5103731	11	True				
ANR	5103874	Identifier	v		5103731	0					
ANR	5103875	Label	case RNCNEG :	157:1:4878:4889	5103731	12	True				
ANR	5103876	Identifier	RNCNEG		5103731	0					
ANR	5103877	ExpressionStatement	"get_token ( num , nc )"	158:2:4893:4912	5103731	13	True				
ANR	5103878	CallExpression	"get_token ( num , nc )"		5103731	0					
ANR	5103879	Callee	get_token		5103731	0					
ANR	5103880	Identifier	get_token		5103731	0					
ANR	5103881	ArgumentList	num		5103731	1					
ANR	5103882	Argument	num		5103731	0					
ANR	5103883	Identifier	num		5103731	0					
ANR	5103884	Argument	nc		5103731	1					
ANR	5103885	Identifier	nc		5103731	0					
ANR	5103886	ReturnStatement	return Nneg ( nc -> number_value ) ;	159:2:4916:4946	5103731	14	True				
ANR	5103887	CallExpression	Nneg ( nc -> number_value )		5103731	0					
ANR	5103888	Callee	Nneg		5103731	0					
ANR	5103889	Identifier	Nneg		5103731	0					
ANR	5103890	ArgumentList	nc -> number_value		5103731	1					
ANR	5103891	Argument	nc -> number_value		5103731	0					
ANR	5103892	PtrMemberAccess	nc -> number_value		5103731	0					
ANR	5103893	Identifier	nc		5103731	0					
ANR	5103894	Identifier	number_value		5103731	1					
ANR	5103895	Label	case RNCINC :	160:1:4974:4985	5103731	15	True				
ANR	5103896	Identifier	RNCINC		5103731	0					
ANR	5103897	ReturnStatement	"return Naddi ( prim ( num , nc , 1 ) , 1 ) ;"	161:2:4989:5024	5103731	16	True				
ANR	5103898	CallExpression	"Naddi ( prim ( num , nc , 1 ) , 1 )"		5103731	0					
ANR	5103899	Callee	Naddi		5103731	0					
ANR	5103900	Identifier	Naddi		5103731	0					
ANR	5103901	ArgumentList	"prim ( num , nc , 1 )"		5103731	1					
ANR	5103902	Argument	"prim ( num , nc , 1 )"		5103731	0					
ANR	5103903	CallExpression	"prim ( num , nc , 1 )"		5103731	0					
ANR	5103904	Callee	prim		5103731	0					
ANR	5103905	Identifier	prim		5103731	0					
ANR	5103906	ArgumentList	num		5103731	1					
ANR	5103907	Argument	num		5103731	0					
ANR	5103908	Identifier	num		5103731	0					
ANR	5103909	Argument	nc		5103731	1					
ANR	5103910	Identifier	nc		5103731	0					
ANR	5103911	Argument	1		5103731	2					
ANR	5103912	PrimaryExpression	1		5103731	0					
ANR	5103913	Argument	1		5103731	1					
ANR	5103914	PrimaryExpression	1		5103731	0					
ANR	5103915	Label	case RNCDEC :	162:1:5027:5038	5103731	17	True				
ANR	5103916	Identifier	RNCDEC		5103731	0					
ANR	5103917	ReturnStatement	"return Naddi ( prim ( num , nc , 1 ) , - 1 ) ;"	163:2:5042:5078	5103731	18	True				
ANR	5103918	CallExpression	"Naddi ( prim ( num , nc , 1 ) , - 1 )"		5103731	0					
ANR	5103919	Callee	Naddi		5103731	0					
ANR	5103920	Identifier	Naddi		5103731	0					
ANR	5103921	ArgumentList	"prim ( num , nc , 1 )"		5103731	1					
ANR	5103922	Argument	"prim ( num , nc , 1 )"		5103731	0					
ANR	5103923	CallExpression	"prim ( num , nc , 1 )"		5103731	0					
ANR	5103924	Callee	prim		5103731	0					
ANR	5103925	Identifier	prim		5103731	0					
ANR	5103926	ArgumentList	num		5103731	1					
ANR	5103927	Argument	num		5103731	0					
ANR	5103928	Identifier	num		5103731	0					
ANR	5103929	Argument	nc		5103731	1					
ANR	5103930	Identifier	nc		5103731	0					
ANR	5103931	Argument	1		5103731	2					
ANR	5103932	PrimaryExpression	1		5103731	0					
ANR	5103933	Argument	- 1		5103731	1					
ANR	5103934	UnaryOperationExpression	- 1		5103731	0					
ANR	5103935	UnaryOperator	-		5103731	0					
ANR	5103936	PrimaryExpression	1		5103731	1					
ANR	5103937	Label	case RNCORR :	164:1:5081:5092	5103731	19	True				
ANR	5103938	Identifier	RNCORR		5103731	0					
ANR	5103939	ReturnStatement	"return Norr ( v , prim ( num , nc , 1 ) ) ;"	165:2:5096:5130	5103731	20	True				
ANR	5103940	CallExpression	"Norr ( v , prim ( num , nc , 1 ) )"		5103731	0					
ANR	5103941	Callee	Norr		5103731	0					
ANR	5103942	Identifier	Norr		5103731	0					
ANR	5103943	ArgumentList	v		5103731	1					
ANR	5103944	Argument	v		5103731	0					
ANR	5103945	Identifier	v		5103731	0					
ANR	5103946	Argument	"prim ( num , nc , 1 )"		5103731	1					
ANR	5103947	CallExpression	"prim ( num , nc , 1 )"		5103731	0					
ANR	5103948	Callee	prim		5103731	0					
ANR	5103949	Identifier	prim		5103731	0					
ANR	5103950	ArgumentList	num		5103731	1					
ANR	5103951	Argument	num		5103731	0					
ANR	5103952	Identifier	num		5103731	0					
ANR	5103953	Argument	nc		5103731	1					
ANR	5103954	Identifier	nc		5103731	0					
ANR	5103955	Argument	1		5103731	2					
ANR	5103956	PrimaryExpression	1		5103731	0					
ANR	5103957	Label	case RNCMINUS :	166:1:5133:5146	5103731	21	True				
ANR	5103958	Identifier	RNCMINUS		5103731	0					
ANR	5103959	ReturnStatement	"return Nsub ( v , prim ( num , nc , 1 ) ) ;"	167:2:5150:5184	5103731	22	True				
ANR	5103960	CallExpression	"Nsub ( v , prim ( num , nc , 1 ) )"		5103731	0					
ANR	5103961	Callee	Nsub		5103731	0					
ANR	5103962	Identifier	Nsub		5103731	0					
ANR	5103963	ArgumentList	v		5103731	1					
ANR	5103964	Argument	v		5103731	0					
ANR	5103965	Identifier	v		5103731	0					
ANR	5103966	Argument	"prim ( num , nc , 1 )"		5103731	1					
ANR	5103967	CallExpression	"prim ( num , nc , 1 )"		5103731	0					
ANR	5103968	Callee	prim		5103731	0					
ANR	5103969	Identifier	prim		5103731	0					
ANR	5103970	ArgumentList	num		5103731	1					
ANR	5103971	Argument	num		5103731	0					
ANR	5103972	Identifier	num		5103731	0					
ANR	5103973	Argument	nc		5103731	1					
ANR	5103974	Identifier	nc		5103731	0					
ANR	5103975	Argument	1		5103731	2					
ANR	5103976	PrimaryExpression	1		5103731	0					
ANR	5103977	Label	case RNCLEFTP :	168:1:5187:5200	5103731	23	True				
ANR	5103978	Identifier	RNCLEFTP		5103731	0					
ANR	5103979	ExpressionStatement	"v = expr ( num , nc , 1 )"	169:2:5204:5225	5103731	24	True				
ANR	5103980	AssignmentExpression	"v = expr ( num , nc , 1 )"		5103731	0		=			
ANR	5103981	Identifier	v		5103731	0					
ANR	5103982	CallExpression	"expr ( num , nc , 1 )"		5103731	1					
ANR	5103983	Callee	expr		5103731	0					
ANR	5103984	Identifier	expr		5103731	0					
ANR	5103985	ArgumentList	num		5103731	1					
ANR	5103986	Argument	num		5103731	0					
ANR	5103987	Identifier	num		5103731	0					
ANR	5103988	Argument	nc		5103731	1					
ANR	5103989	Identifier	nc		5103731	0					
ANR	5103990	Argument	1		5103731	2					
ANR	5103991	PrimaryExpression	1		5103731	0					
ANR	5103992	IfStatement	if ( nc -> curr_tok == RNCRIGHTP )		5103731	25					
ANR	5103993	Condition	nc -> curr_tok == RNCRIGHTP	170:6:5233:5257	5103731	0	True				
ANR	5103994	EqualityExpression	nc -> curr_tok == RNCRIGHTP		5103731	0		==			
ANR	5103995	PtrMemberAccess	nc -> curr_tok		5103731	0					
ANR	5103996	Identifier	nc		5103731	0					
ANR	5103997	Identifier	curr_tok		5103731	1					
ANR	5103998	Identifier	RNCRIGHTP		5103731	1					
ANR	5103999	CompoundStatement		40:33:964:964	5103731	1					
ANR	5104000	ExpressionStatement	"get_token ( num , nc )"	171:3:5265:5284	5103731	0	True				
ANR	5104001	CallExpression	"get_token ( num , nc )"		5103731	0					
ANR	5104002	Callee	get_token		5103731	0					
ANR	5104003	Identifier	get_token		5103731	0					
ANR	5104004	ArgumentList	num		5103731	1					
ANR	5104005	Argument	num		5103731	0					
ANR	5104006	Identifier	num		5103731	0					
ANR	5104007	Argument	nc		5103731	1					
ANR	5104008	Identifier	nc		5103731	0					
ANR	5104009	ElseStatement	else		5103731	0					
ANR	5104010	CompoundStatement		42:9:999:999	5103731	0					
ANR	5104011	ExpressionStatement	"error ( num , nc , "" ')' expected"" )"	173:3:5300:5332	5103731	0	True				
ANR	5104012	CallExpression	"error ( num , nc , "" ')' expected"" )"		5103731	0					
ANR	5104013	Callee	error		5103731	0					
ANR	5104014	Identifier	error		5103731	0					
ANR	5104015	ArgumentList	num		5103731	1					
ANR	5104016	Argument	num		5103731	0					
ANR	5104017	Identifier	num		5103731	0					
ANR	5104018	Argument	nc		5103731	1					
ANR	5104019	Identifier	nc		5103731	0					
ANR	5104020	Argument	""" ')' expected"""		5103731	2					
ANR	5104021	PrimaryExpression	""" ')' expected"""		5103731	0					
ANR	5104022	Label	case RNCEND :	175:1:5339:5350	5103731	26	True				
ANR	5104023	Identifier	RNCEND		5103731	0					
ANR	5104024	Label	case RNCXOR :	176:1:5353:5364	5103731	27	True				
ANR	5104025	Identifier	RNCXOR		5103731	0					
ANR	5104026	Label	case RNCAND :	177:1:5367:5378	5103731	28	True				
ANR	5104027	Identifier	RNCAND		5103731	0					
ANR	5104028	Label	case RNCPLUS :	178:1:5381:5393	5103731	29	True				
ANR	5104029	Identifier	RNCPLUS		5103731	0					
ANR	5104030	Label	case RNCMOD :	179:1:5396:5407	5103731	30	True				
ANR	5104031	Identifier	RNCMOD		5103731	0					
ANR	5104032	Label	case RNCMUL :	180:1:5410:5421	5103731	31	True				
ANR	5104033	Identifier	RNCMUL		5103731	0					
ANR	5104034	Label	case RNCDIV :	181:1:5424:5435	5103731	32	True				
ANR	5104035	Identifier	RNCDIV		5103731	0					
ANR	5104036	Label	case RNCPRINT :	182:1:5438:5451	5103731	33	True				
ANR	5104037	Identifier	RNCPRINT		5103731	0					
ANR	5104038	Label	case RNCASSIGN :	183:1:5454:5468	5103731	34	True				
ANR	5104039	Identifier	RNCASSIGN		5103731	0					
ANR	5104040	Label	case RNCRIGHTP :	184:1:5471:5485	5103731	35	True				
ANR	5104041	Identifier	RNCRIGHTP		5103731	0					
ANR	5104042	Label	case RNCSHL :	185:1:5488:5499	5103731	36	True				
ANR	5104043	Identifier	RNCSHL		5103731	0					
ANR	5104044	Label	case RNCSHR :	186:1:5502:5513	5103731	37	True				
ANR	5104045	Identifier	RNCSHR		5103731	0					
ANR	5104046	Label	case RNCROL :	187:1:5516:5527	5103731	38	True				
ANR	5104047	Identifier	RNCROL		5103731	0					
ANR	5104048	Label	case RNCROR :	188:1:5530:5541	5103731	39	True				
ANR	5104049	Identifier	RNCROR		5103731	0					
ANR	5104050	ReturnStatement	return v ;	189:2:5545:5553	5103731	40	True				
ANR	5104051	Identifier	v		5103731	0					
ANR	5104052	ReturnStatement	return v ;	192:1:5608:5616	5103731	3	True				
ANR	5104053	Identifier	v		5103731	0					
ANR	5104054	ReturnType	static RNumCalcValue		5103731	1					
ANR	5104055	Identifier	prim		5103731	2					
ANR	5104056	ParameterList	"RNum * num , RNumCalc * nc , int get"		5103731	3					
ANR	5104057	Parameter	RNum * num	131:26:4261:4269	5103731	0	True				
ANR	5104058	ParameterType	RNum *		5103731	0					
ANR	5104059	Identifier	num		5103731	1					
ANR	5104060	Parameter	RNumCalc * nc	131:37:4272:4283	5103731	1	True				
ANR	5104061	ParameterType	RNumCalc *		5103731	0					
ANR	5104062	Identifier	nc		5103731	1					
ANR	5104063	Parameter	int get	131:51:4286:4292	5103731	2	True				
ANR	5104064	ParameterType	int		5103731	0					
ANR	5104065	Identifier	get		5103731	1					
ANR	5104066	CFGEntryNode	ENTRY		5103731		True				
ANR	5104067	CFGExitNode	EXIT		5103731		True				
ANR	5104068	Symbol	nc -> number_value		5103731						
ANR	5104069	Symbol	nc -> string_value		5103731						
ANR	5104070	Symbol	RNCDEC		5103731						
ANR	5104071	Symbol	Norr		5103731						
ANR	5104072	Symbol	num		5103731						
ANR	5104073	Symbol	nc -> curr_tok		5103731						
ANR	5104074	Symbol	Nneg		5103731						
ANR	5104075	Symbol	RNCRIGHTP		5103731						
ANR	5104076	Symbol	Naddi		5103731						
ANR	5104077	Symbol	RNCINC		5103731						
ANR	5104078	Symbol	Nset		5103731						
ANR	5104079	Symbol	prim		5103731						
ANR	5104080	Symbol	nc		5103731						
ANR	5104081	Symbol	v		5103731						
ANR	5104082	Symbol	get		5103731						
ANR	5104083	Symbol	Nsub		5103731						
ANR	5104084	Symbol	* nc		5103731						
ANR	5104085	Symbol	r_num_get		5103731						
ANR	5104086	Symbol	RNCASSIGN		5103731						
ANR	5104087	Symbol	expr		5103731						
ANR	5104088	Function	cin_putback	195:0:5621:5694							
ANR	5104089	FunctionDef	"cin_putback (RNum * num , RNumCalc * nc , char c)"		5104088	0					
ANR	5104090	CompoundStatement		195:58:5679:5694	5104088	0					
ANR	5104091	ExpressionStatement	nc -> oc = c	196:1:5682:5692	5104088	0	True				
ANR	5104092	AssignmentExpression	nc -> oc = c		5104088	0		=			
ANR	5104093	PtrMemberAccess	nc -> oc		5104088	0					
ANR	5104094	Identifier	nc		5104088	0					
ANR	5104095	Identifier	oc		5104088	1					
ANR	5104096	Identifier	c		5104088	1					
ANR	5104097	ReturnType	static void		5104088	1					
ANR	5104098	Identifier	cin_putback		5104088	2					
ANR	5104099	ParameterList	"RNum * num , RNumCalc * nc , char c"		5104088	3					
ANR	5104100	Parameter	RNum * num	195:25:5646:5654	5104088	0	True				
ANR	5104101	ParameterType	RNum *		5104088	0					
ANR	5104102	Identifier	num		5104088	1					
ANR	5104103	Parameter	RNumCalc * nc	195:36:5657:5668	5104088	1	True				
ANR	5104104	ParameterType	RNumCalc *		5104088	0					
ANR	5104105	Identifier	nc		5104088	1					
ANR	5104106	Parameter	char c	195:50:5671:5676	5104088	2	True				
ANR	5104107	ParameterType	char		5104088	0					
ANR	5104108	Identifier	c		5104088	1					
ANR	5104109	CFGEntryNode	ENTRY		5104088		True				
ANR	5104110	CFGExitNode	EXIT		5104088		True				
ANR	5104111	Symbol	c		5104088						
ANR	5104112	Symbol	nc -> oc		5104088						
ANR	5104113	Symbol	nc		5104088						
ANR	5104114	Symbol	num		5104088						
ANR	5104115	Symbol	* nc		5104088						
ANR	5104116	Function	r_num_calc_index	199:6:5703:5926							
ANR	5104117	FunctionDef	"r_num_calc_index (RNum * num , const char * p)"		5104116	0					
ANR	5104118	CompoundStatement		199:61:5758:5926	5104116	0					
ANR	5104119	IfStatement	if ( ! num )		5104116	0					
ANR	5104120	Condition	! num	200:5:5765:5768	5104116	0	True				
ANR	5104121	UnaryOperationExpression	! num		5104116	0					
ANR	5104122	UnaryOperator	!		5104116	0					
ANR	5104123	Identifier	num		5104116	1					
ANR	5104124	CompoundStatement		2:11:12:12	5104116	1					
ANR	5104125	ReturnStatement	return NULL ;	201:2:5775:5786	5104116	0	True				
ANR	5104126	Identifier	NULL		5104116	0					
ANR	5104127	IfStatement	if ( p )		5104116	1					
ANR	5104128	Condition	p	203:5:5796:5796	5104116	0	True				
ANR	5104129	Identifier	p		5104116	0					
ANR	5104130	CompoundStatement		5:8:40:40	5104116	1					
ANR	5104131	ExpressionStatement	num -> nc . calc_buf = p	204:2:5803:5823	5104116	0	True				
ANR	5104132	AssignmentExpression	num -> nc . calc_buf = p		5104116	0		=			
ANR	5104133	MemberAccess	num -> nc . calc_buf		5104116	0					
ANR	5104134	PtrMemberAccess	num -> nc		5104116	0					
ANR	5104135	Identifier	num		5104116	0					
ANR	5104136	Identifier	nc		5104116	1					
ANR	5104137	Identifier	calc_buf		5104116	1					
ANR	5104138	Identifier	p		5104116	1					
ANR	5104139	ExpressionStatement	num -> nc . calc_len = strlen ( p )	205:2:5827:5856	5104116	1	True				
ANR	5104140	AssignmentExpression	num -> nc . calc_len = strlen ( p )		5104116	0		=			
ANR	5104141	MemberAccess	num -> nc . calc_len		5104116	0					
ANR	5104142	PtrMemberAccess	num -> nc		5104116	0					
ANR	5104143	Identifier	num		5104116	0					
ANR	5104144	Identifier	nc		5104116	1					
ANR	5104145	Identifier	calc_len		5104116	1					
ANR	5104146	CallExpression	strlen ( p )		5104116	1					
ANR	5104147	Callee	strlen		5104116	0					
ANR	5104148	Identifier	strlen		5104116	0					
ANR	5104149	ArgumentList	p		5104116	1					
ANR	5104150	Argument	p		5104116	0					
ANR	5104151	Identifier	p		5104116	0					
ANR	5104152	ExpressionStatement	num -> nc . calc_i = 0	206:2:5860:5878	5104116	2	True				
ANR	5104153	AssignmentExpression	num -> nc . calc_i = 0		5104116	0		=			
ANR	5104154	MemberAccess	num -> nc . calc_i		5104116	0					
ANR	5104155	PtrMemberAccess	num -> nc		5104116	0					
ANR	5104156	Identifier	num		5104116	0					
ANR	5104157	Identifier	nc		5104116	1					
ANR	5104158	Identifier	calc_i		5104116	1					
ANR	5104159	PrimaryExpression	0		5104116	1					
ANR	5104160	ReturnStatement	return num -> nc . calc_buf + num -> nc . calc_i ;	208:1:5884:5924	5104116	2	True				
ANR	5104161	AdditiveExpression	num -> nc . calc_buf + num -> nc . calc_i		5104116	0		+			
ANR	5104162	MemberAccess	num -> nc . calc_buf		5104116	0					
ANR	5104163	PtrMemberAccess	num -> nc		5104116	0					
ANR	5104164	Identifier	num		5104116	0					
ANR	5104165	Identifier	nc		5104116	1					
ANR	5104166	Identifier	calc_buf		5104116	1					
ANR	5104167	MemberAccess	num -> nc . calc_i		5104116	1					
ANR	5104168	PtrMemberAccess	num -> nc		5104116	0					
ANR	5104169	Identifier	num		5104116	0					
ANR	5104170	Identifier	nc		5104116	1					
ANR	5104171	Identifier	calc_i		5104116	1					
ANR	5104172	ReturnType	const char *		5104116	1					
ANR	5104173	Identifier	r_num_calc_index		5104116	2					
ANR	5104174	ParameterList	"RNum * num , const char * p"		5104116	3					
ANR	5104175	Parameter	RNum * num	199:35:5732:5740	5104116	0	True				
ANR	5104176	ParameterType	RNum *		5104116	0					
ANR	5104177	Identifier	num		5104116	1					
ANR	5104178	Parameter	const char * p	199:46:5743:5755	5104116	1	True				
ANR	5104179	ParameterType	const char *		5104116	0					
ANR	5104180	Identifier	p		5104116	1					
ANR	5104181	CFGEntryNode	ENTRY		5104116		True				
ANR	5104182	CFGExitNode	EXIT		5104116		True				
ANR	5104183	Symbol	p		5104116						
ANR	5104184	Symbol	num -> nc		5104116						
ANR	5104185	Symbol	* num		5104116						
ANR	5104186	Symbol	num -> nc . calc_i		5104116						
ANR	5104187	Symbol	strlen		5104116						
ANR	5104188	Symbol	NULL		5104116						
ANR	5104189	Symbol	num -> nc . calc_buf		5104116						
ANR	5104190	Symbol	num -> nc . calc_len		5104116						
ANR	5104191	Symbol	num		5104116						
ANR	5104192	Function	cin_get	211:0:5929:6200							
ANR	5104193	FunctionDef	"cin_get (RNum * num , RNumCalc * nc , char * c)"		5104192	0					
ANR	5104194	CompoundStatement		211:53:5982:6200	5104192	0					
ANR	5104195	IfStatement	if ( nc -> oc )		5104192	0					
ANR	5104196	Condition	nc -> oc	212:5:5989:5994	5104192	0	True				
ANR	5104197	PtrMemberAccess	nc -> oc		5104192	0					
ANR	5104198	Identifier	nc		5104192	0					
ANR	5104199	Identifier	oc		5104192	1					
ANR	5104200	CompoundStatement		2:13:14:14	5104192	1					
ANR	5104201	ExpressionStatement	* c = nc -> oc	213:2:6001:6012	5104192	0	True				
ANR	5104202	AssignmentExpression	* c = nc -> oc		5104192	0		=			
ANR	5104203	UnaryOperationExpression	* c		5104192	0					
ANR	5104204	UnaryOperator	*		5104192	0					
ANR	5104205	Identifier	c		5104192	1					
ANR	5104206	PtrMemberAccess	nc -> oc		5104192	1					
ANR	5104207	Identifier	nc		5104192	0					
ANR	5104208	Identifier	oc		5104192	1					
ANR	5104209	ExpressionStatement	nc -> oc = 0	214:2:6016:6026	5104192	1	True				
ANR	5104210	AssignmentExpression	nc -> oc = 0		5104192	0		=			
ANR	5104211	PtrMemberAccess	nc -> oc		5104192	0					
ANR	5104212	Identifier	nc		5104192	0					
ANR	5104213	Identifier	oc		5104192	1					
ANR	5104214	PrimaryExpression	0		5104192	1					
ANR	5104215	ElseStatement	else		5104192	0					
ANR	5104216	CompoundStatement		5:8:53:53	5104192	0					
ANR	5104217	IfStatement	if ( ! nc -> calc_buf || ! * nc -> calc_buf )		5104192	0					
ANR	5104218	Condition	! nc -> calc_buf || ! * nc -> calc_buf	216:6:6044:6074	5104192	0	True				
ANR	5104219	OrExpression	! nc -> calc_buf || ! * nc -> calc_buf		5104192	0		||			
ANR	5104220	UnaryOperationExpression	! nc -> calc_buf		5104192	0					
ANR	5104221	UnaryOperator	!		5104192	0					
ANR	5104222	PtrMemberAccess	nc -> calc_buf		5104192	1					
ANR	5104223	Identifier	nc		5104192	0					
ANR	5104224	Identifier	calc_buf		5104192	1					
ANR	5104225	UnaryOperationExpression	! * nc -> calc_buf		5104192	1					
ANR	5104226	UnaryOperator	!		5104192	0					
ANR	5104227	UnaryOperationExpression	* nc -> calc_buf		5104192	1					
ANR	5104228	UnaryOperator	*		5104192	0					
ANR	5104229	PtrMemberAccess	nc -> calc_buf		5104192	1					
ANR	5104230	Identifier	nc		5104192	0					
ANR	5104231	Identifier	calc_buf		5104192	1					
ANR	5104232	CompoundStatement		6:39:94:94	5104192	1					
ANR	5104233	ReturnStatement	return 0 ;	217:3:6082:6090	5104192	0	True				
ANR	5104234	PrimaryExpression	0		5104192	0					
ANR	5104235	ExpressionStatement	* c = nc -> calc_buf [ nc -> calc_i ]	219:2:6098:6127	5104192	1	True				
ANR	5104236	AssignmentExpression	* c = nc -> calc_buf [ nc -> calc_i ]		5104192	0		=			
ANR	5104237	UnaryOperationExpression	* c		5104192	0					
ANR	5104238	UnaryOperator	*		5104192	0					
ANR	5104239	Identifier	c		5104192	1					
ANR	5104240	ArrayIndexing	nc -> calc_buf [ nc -> calc_i ]		5104192	1					
ANR	5104241	PtrMemberAccess	nc -> calc_buf		5104192	0					
ANR	5104242	Identifier	nc		5104192	0					
ANR	5104243	Identifier	calc_buf		5104192	1					
ANR	5104244	PtrMemberAccess	nc -> calc_i		5104192	1					
ANR	5104245	Identifier	nc		5104192	0					
ANR	5104246	Identifier	calc_i		5104192	1					
ANR	5104247	IfStatement	if ( * c )		5104192	2					
ANR	5104248	Condition	* c	220:6:6135:6136	5104192	0	True				
ANR	5104249	UnaryOperationExpression	* c		5104192	0					
ANR	5104250	UnaryOperator	*		5104192	0					
ANR	5104251	Identifier	c		5104192	1					
ANR	5104252	CompoundStatement		10:10:156:156	5104192	1					
ANR	5104253	ExpressionStatement	nc -> calc_i ++	221:3:6144:6156	5104192	0	True				
ANR	5104254	PostIncDecOperationExpression	nc -> calc_i ++		5104192	0					
ANR	5104255	PtrMemberAccess	nc -> calc_i		5104192	0					
ANR	5104256	Identifier	nc		5104192	0					
ANR	5104257	Identifier	calc_i		5104192	1					
ANR	5104258	IncDec	++		5104192	1					
ANR	5104259	ElseStatement	else		5104192	0					
ANR	5104260	CompoundStatement		12:9:184:184	5104192	0					
ANR	5104261	ReturnStatement	return 0 ;	223:3:6172:6180	5104192	0	True				
ANR	5104262	PrimaryExpression	0		5104192	0					
ANR	5104263	ReturnStatement	return 1 ;	226:1:6190:6198	5104192	1	True				
ANR	5104264	PrimaryExpression	1		5104192	0					
ANR	5104265	ReturnType	static int		5104192	1					
ANR	5104266	Identifier	cin_get		5104192	2					
ANR	5104267	ParameterList	"RNum * num , RNumCalc * nc , char * c"		5104192	3					
ANR	5104268	Parameter	RNum * num	211:19:5948:5956	5104192	0	True				
ANR	5104269	ParameterType	RNum *		5104192	0					
ANR	5104270	Identifier	num		5104192	1					
ANR	5104271	Parameter	RNumCalc * nc	211:30:5959:5970	5104192	1	True				
ANR	5104272	ParameterType	RNumCalc *		5104192	0					
ANR	5104273	Identifier	nc		5104192	1					
ANR	5104274	Parameter	char * c	211:44:5973:5979	5104192	2	True				
ANR	5104275	ParameterType	char *		5104192	0					
ANR	5104276	Identifier	c		5104192	1					
ANR	5104277	CFGEntryNode	ENTRY		5104192		True				
ANR	5104278	CFGExitNode	EXIT		5104192		True				
ANR	5104279	Symbol	* nc -> calc_i		5104192						
ANR	5104280	Symbol	c		5104192						
ANR	5104281	Symbol	* * nc		5104192						
ANR	5104282	Symbol	nc -> oc		5104192						
ANR	5104283	Symbol	nc		5104192						
ANR	5104284	Symbol	nc -> calc_i		5104192						
ANR	5104285	Symbol	num		5104192						
ANR	5104286	Symbol	* nc		5104192						
ANR	5104287	Symbol	* nc -> calc_buf		5104192						
ANR	5104288	Symbol	* c		5104192						
ANR	5104289	Symbol	nc -> calc_buf		5104192						
ANR	5104290	Function	cin_get_num	229:0:6203:6779							
ANR	5104291	FunctionDef	"cin_get_num (RNum * num , RNumCalc * nc , RNumCalcValue * n)"		5104290	0					
ANR	5104292	CompoundStatement		229:66:6269:6779	5104290	0					
ANR	5104293	IdentifierDeclStatement	double d ;	230:1:6272:6280	5104290	0	True				
ANR	5104294	IdentifierDecl	d		5104290	0					
ANR	5104295	IdentifierDeclType	double		5104290	0					
ANR	5104296	Identifier	d		5104290	1					
ANR	5104297	IdentifierDeclStatement	char str [ R_NUMCALC_STRSZ + 1 ] ;	231:1:6283:6312	5104290	1	True				
ANR	5104298	IdentifierDecl	str [ R_NUMCALC_STRSZ + 1 ]		5104290	0					
ANR	5104299	IdentifierDeclType	char [ R_NUMCALC_STRSZ + 1 ]		5104290	0					
ANR	5104300	Identifier	str		5104290	1					
ANR	5104301	AdditiveExpression	R_NUMCALC_STRSZ + 1		5104290	2		+			
ANR	5104302	Identifier	R_NUMCALC_STRSZ		5104290	0					
ANR	5104303	PrimaryExpression	1		5104290	1					
ANR	5104304	IdentifierDeclStatement	int i = 0 ;	232:1:6344:6353	5104290	2	True				
ANR	5104305	IdentifierDecl	i = 0		5104290	0					
ANR	5104306	IdentifierDeclType	int		5104290	0					
ANR	5104307	Identifier	i		5104290	1					
ANR	5104308	AssignmentExpression	i = 0		5104290	2		=			
ANR	5104309	Identifier	i		5104290	0					
ANR	5104310	PrimaryExpression	0		5104290	1					
ANR	5104311	IdentifierDeclStatement	char c ;	233:1:6356:6362	5104290	3	True				
ANR	5104312	IdentifierDecl	c		5104290	0					
ANR	5104313	IdentifierDeclType	char		5104290	0					
ANR	5104314	Identifier	c		5104290	1					
ANR	5104315	ExpressionStatement	str [ 0 ] = 0	234:1:6365:6375	5104290	4	True				
ANR	5104316	AssignmentExpression	str [ 0 ] = 0		5104290	0		=			
ANR	5104317	ArrayIndexing	str [ 0 ]		5104290	0					
ANR	5104318	Identifier	str		5104290	0					
ANR	5104319	PrimaryExpression	0		5104290	1					
ANR	5104320	PrimaryExpression	0		5104290	1					
ANR	5104321	WhileStatement	"while ( cin_get ( num , nc , & c ) )"		5104290	5					
ANR	5104322	Condition	"cin_get ( num , nc , & c )"	235:8:6385:6405	5104290	0	True				
ANR	5104323	CallExpression	"cin_get ( num , nc , & c )"		5104290	0					
ANR	5104324	Callee	cin_get		5104290	0					
ANR	5104325	Identifier	cin_get		5104290	0					
ANR	5104326	ArgumentList	num		5104290	1					
ANR	5104327	Argument	num		5104290	0					
ANR	5104328	Identifier	num		5104290	0					
ANR	5104329	Argument	nc		5104290	1					
ANR	5104330	Identifier	nc		5104290	0					
ANR	5104331	Argument	& c		5104290	2					
ANR	5104332	UnaryOperationExpression	& c		5104290	0					
ANR	5104333	UnaryOperator	&		5104290	0					
ANR	5104334	Identifier	c		5104290	1					
ANR	5104335	CompoundStatement		7:31:138:138	5104290	1					
ANR	5104336	IfStatement	if ( c != '_' && c != ':' && c != '.' && ! isalnum ( ( ut8 ) c ) )		5104290	0					
ANR	5104337	Condition	c != '_' && c != ':' && c != '.' && ! isalnum ( ( ut8 ) c )	236:6:6416:6464	5104290	0	True				
ANR	5104338	AndExpression	c != '_' && c != ':' && c != '.' && ! isalnum ( ( ut8 ) c )		5104290	0		&&			
ANR	5104339	EqualityExpression	c != '_'		5104290	0		!=			
ANR	5104340	Identifier	c		5104290	0					
ANR	5104341	PrimaryExpression	'_'		5104290	1					
ANR	5104342	AndExpression	c != ':' && c != '.' && ! isalnum ( ( ut8 ) c )		5104290	1		&&			
ANR	5104343	EqualityExpression	c != ':'		5104290	0		!=			
ANR	5104344	Identifier	c		5104290	0					
ANR	5104345	PrimaryExpression	':'		5104290	1					
ANR	5104346	AndExpression	c != '.' && ! isalnum ( ( ut8 ) c )		5104290	1		&&			
ANR	5104347	EqualityExpression	c != '.'		5104290	0		!=			
ANR	5104348	Identifier	c		5104290	0					
ANR	5104349	PrimaryExpression	'.'		5104290	1					
ANR	5104350	UnaryOperationExpression	! isalnum ( ( ut8 ) c )		5104290	1					
ANR	5104351	UnaryOperator	!		5104290	0					
ANR	5104352	CallExpression	isalnum ( ( ut8 ) c )		5104290	1					
ANR	5104353	Callee	isalnum		5104290	0					
ANR	5104354	Identifier	isalnum		5104290	0					
ANR	5104355	ArgumentList	( ut8 ) c		5104290	1					
ANR	5104356	Argument	( ut8 ) c		5104290	0					
ANR	5104357	CastExpression	( ut8 ) c		5104290	0					
ANR	5104358	CastTarget	ut8		5104290	0					
ANR	5104359	Identifier	c		5104290	1					
ANR	5104360	CompoundStatement		8:57:197:197	5104290	1					
ANR	5104361	ExpressionStatement	"cin_putback ( num , nc , c )"	237:3:6472:6496	5104290	0	True				
ANR	5104362	CallExpression	"cin_putback ( num , nc , c )"		5104290	0					
ANR	5104363	Callee	cin_putback		5104290	0					
ANR	5104364	Identifier	cin_putback		5104290	0					
ANR	5104365	ArgumentList	num		5104290	1					
ANR	5104366	Argument	num		5104290	0					
ANR	5104367	Identifier	num		5104290	0					
ANR	5104368	Argument	nc		5104290	1					
ANR	5104369	Identifier	nc		5104290	0					
ANR	5104370	Argument	c		5104290	2					
ANR	5104371	Identifier	c		5104290	0					
ANR	5104372	BreakStatement	break ;	238:3:6501:6506	5104290	1	True				
ANR	5104373	IfStatement	if ( i < R_NUMCALC_STRSZ )		5104290	1					
ANR	5104374	Condition	i < R_NUMCALC_STRSZ	240:6:6518:6536	5104290	0	True				
ANR	5104375	RelationalExpression	i < R_NUMCALC_STRSZ		5104290	0		<			
ANR	5104376	Identifier	i		5104290	0					
ANR	5104377	Identifier	R_NUMCALC_STRSZ		5104290	1					
ANR	5104378	CompoundStatement		12:27:269:269	5104290	1					
ANR	5104379	ExpressionStatement	str [ i ++ ] = c	241:3:6544:6556	5104290	0	True				
ANR	5104380	AssignmentExpression	str [ i ++ ] = c		5104290	0		=			
ANR	5104381	ArrayIndexing	str [ i ++ ]		5104290	0					
ANR	5104382	Identifier	str		5104290	0					
ANR	5104383	PostIncDecOperationExpression	i ++		5104290	1					
ANR	5104384	Identifier	i		5104290	0					
ANR	5104385	IncDec	++		5104290	1					
ANR	5104386	Identifier	c		5104290	1					
ANR	5104387	ExpressionStatement	str [ i ] = 0	244:1:6566:6576	5104290	6	True				
ANR	5104388	AssignmentExpression	str [ i ] = 0		5104290	0		=			
ANR	5104389	ArrayIndexing	str [ i ]		5104290	0					
ANR	5104390	Identifier	str		5104290	0					
ANR	5104391	Identifier	i		5104290	1					
ANR	5104392	PrimaryExpression	0		5104290	1					
ANR	5104393	ExpressionStatement	"* n = Nset ( r_num_get ( num , str ) )"	245:1:6579:6611	5104290	7	True				
ANR	5104394	AssignmentExpression	"* n = Nset ( r_num_get ( num , str ) )"		5104290	0		=			
ANR	5104395	UnaryOperationExpression	* n		5104290	0					
ANR	5104396	UnaryOperator	*		5104290	0					
ANR	5104397	Identifier	n		5104290	1					
ANR	5104398	CallExpression	"Nset ( r_num_get ( num , str ) )"		5104290	1					
ANR	5104399	Callee	Nset		5104290	0					
ANR	5104400	Identifier	Nset		5104290	0					
ANR	5104401	ArgumentList	"r_num_get ( num , str )"		5104290	1					
ANR	5104402	Argument	"r_num_get ( num , str )"		5104290	0					
ANR	5104403	CallExpression	"r_num_get ( num , str )"		5104290	0					
ANR	5104404	Callee	r_num_get		5104290	0					
ANR	5104405	Identifier	r_num_get		5104290	0					
ANR	5104406	ArgumentList	num		5104290	1					
ANR	5104407	Argument	num		5104290	0					
ANR	5104408	Identifier	num		5104290	0					
ANR	5104409	Argument	str		5104290	1					
ANR	5104410	Identifier	str		5104290	0					
ANR	5104411	IfStatement	"if ( IS_DIGIT ( * str ) && strchr ( str , '.' ) )"		5104290	8					
ANR	5104412	Condition	"IS_DIGIT ( * str ) && strchr ( str , '.' )"	246:5:6618:6653	5104290	0	True				
ANR	5104413	AndExpression	"IS_DIGIT ( * str ) && strchr ( str , '.' )"		5104290	0		&&			
ANR	5104414	CallExpression	IS_DIGIT ( * str )		5104290	0					
ANR	5104415	Callee	IS_DIGIT		5104290	0					
ANR	5104416	Identifier	IS_DIGIT		5104290	0					
ANR	5104417	ArgumentList	* str		5104290	1					
ANR	5104418	Argument	* str		5104290	0					
ANR	5104419	UnaryOperationExpression	* str		5104290	0					
ANR	5104420	UnaryOperator	*		5104290	0					
ANR	5104421	Identifier	str		5104290	1					
ANR	5104422	CallExpression	"strchr ( str , '.' )"		5104290	1					
ANR	5104423	Callee	strchr		5104290	0					
ANR	5104424	Identifier	strchr		5104290	0					
ANR	5104425	ArgumentList	str		5104290	1					
ANR	5104426	Argument	str		5104290	0					
ANR	5104427	Identifier	str		5104290	0					
ANR	5104428	Argument	'.'		5104290	1					
ANR	5104429	PrimaryExpression	'.'		5104290	0					
ANR	5104430	CompoundStatement		18:43:386:386	5104290	1					
ANR	5104431	IfStatement	"if ( sscanf ( str , ""%lf"" , & d ) < 1 )"		5104290	0					
ANR	5104432	Condition	"sscanf ( str , ""%lf"" , & d ) < 1"	247:6:6664:6690	5104290	0	True				
ANR	5104433	RelationalExpression	"sscanf ( str , ""%lf"" , & d ) < 1"		5104290	0		<			
ANR	5104434	CallExpression	"sscanf ( str , ""%lf"" , & d )"		5104290	0					
ANR	5104435	Callee	sscanf		5104290	0					
ANR	5104436	Identifier	sscanf		5104290	0					
ANR	5104437	ArgumentList	str		5104290	1					
ANR	5104438	Argument	str		5104290	0					
ANR	5104439	Identifier	str		5104290	0					
ANR	5104440	Argument	"""%lf"""		5104290	1					
ANR	5104441	PrimaryExpression	"""%lf"""		5104290	0					
ANR	5104442	Argument	& d		5104290	2					
ANR	5104443	UnaryOperationExpression	& d		5104290	0					
ANR	5104444	UnaryOperator	&		5104290	0					
ANR	5104445	Identifier	d		5104290	1					
ANR	5104446	PrimaryExpression	1		5104290	1					
ANR	5104447	CompoundStatement		19:35:423:423	5104290	1					
ANR	5104448	ReturnStatement	return 0 ;	248:3:6698:6706	5104290	0	True				
ANR	5104449	PrimaryExpression	0		5104290	0					
ANR	5104450	IfStatement	if ( n -> n < d )		5104290	1					
ANR	5104451	Condition	n -> n < d	250:6:6718:6725	5104290	0	True				
ANR	5104452	RelationalExpression	n -> n < d		5104290	0		<			
ANR	5104453	PtrMemberAccess	n -> n		5104290	0					
ANR	5104454	Identifier	n		5104290	0					
ANR	5104455	Identifier	n		5104290	1					
ANR	5104456	Identifier	d		5104290	1					
ANR	5104457	CompoundStatement		22:16:458:458	5104290	1					
ANR	5104458	ExpressionStatement	* n = Nsetf ( d )	251:3:6733:6747	5104290	0	True				
ANR	5104459	AssignmentExpression	* n = Nsetf ( d )		5104290	0		=			
ANR	5104460	UnaryOperationExpression	* n		5104290	0					
ANR	5104461	UnaryOperator	*		5104290	0					
ANR	5104462	Identifier	n		5104290	1					
ANR	5104463	CallExpression	Nsetf ( d )		5104290	1					
ANR	5104464	Callee	Nsetf		5104290	0					
ANR	5104465	Identifier	Nsetf		5104290	0					
ANR	5104466	ArgumentList	d		5104290	1					
ANR	5104467	Argument	d		5104290	0					
ANR	5104468	Identifier	d		5104290	0					
ANR	5104469	ExpressionStatement	n -> d = d	253:2:6755:6763	5104290	2	True				
ANR	5104470	AssignmentExpression	n -> d = d		5104290	0		=			
ANR	5104471	PtrMemberAccess	n -> d		5104290	0					
ANR	5104472	Identifier	n		5104290	0					
ANR	5104473	Identifier	d		5104290	1					
ANR	5104474	Identifier	d		5104290	1					
ANR	5104475	ReturnStatement	return 1 ;	255:1:6769:6777	5104290	9	True				
ANR	5104476	PrimaryExpression	1		5104290	0					
ANR	5104477	ReturnType	static int		5104290	1					
ANR	5104478	Identifier	cin_get_num		5104290	2					
ANR	5104479	ParameterList	"RNum * num , RNumCalc * nc , RNumCalcValue * n"		5104290	3					
ANR	5104480	Parameter	RNum * num	229:23:6226:6234	5104290	0	True				
ANR	5104481	ParameterType	RNum *		5104290	0					
ANR	5104482	Identifier	num		5104290	1					
ANR	5104483	Parameter	RNumCalc * nc	229:34:6237:6248	5104290	1	True				
ANR	5104484	ParameterType	RNumCalc *		5104290	0					
ANR	5104485	Identifier	nc		5104290	1					
ANR	5104486	Parameter	RNumCalcValue * n	229:48:6251:6266	5104290	2	True				
ANR	5104487	ParameterType	RNumCalcValue *		5104290	0					
ANR	5104488	Identifier	n		5104290	1					
ANR	5104489	CFGEntryNode	ENTRY		5104290		True				
ANR	5104490	CFGExitNode	EXIT		5104290		True				
ANR	5104491	Symbol	c		5104290						
ANR	5104492	Symbol	d		5104290						
ANR	5104493	Symbol	isalnum		5104290						
ANR	5104494	Symbol	num		5104290						
ANR	5104495	Symbol	i		5104290						
ANR	5104496	Symbol	& c		5104290						
ANR	5104497	Symbol	strchr		5104290						
ANR	5104498	Symbol	& d		5104290						
ANR	5104499	Symbol	n -> d		5104290						
ANR	5104500	Symbol	n		5104290						
ANR	5104501	Symbol	cin_get		5104290						
ANR	5104502	Symbol	IS_DIGIT		5104290						
ANR	5104503	Symbol	str		5104290						
ANR	5104504	Symbol	Nset		5104290						
ANR	5104505	Symbol	Nsetf		5104290						
ANR	5104506	Symbol	* i		5104290						
ANR	5104507	Symbol	nc		5104290						
ANR	5104508	Symbol	sscanf		5104290						
ANR	5104509	Symbol	R_NUMCALC_STRSZ		5104290						
ANR	5104510	Symbol	* n		5104290						
ANR	5104511	Symbol	r_num_get		5104290						
ANR	5104512	Symbol	* str		5104290						
ANR	5104513	Symbol	n -> n		5104290						
ANR	5104514	Function	get_token	258:0:6782:9577							
ANR	5104515	FunctionDef	"get_token (RNum * num , RNumCalc * nc)"		5104514	0					
ANR	5104516	CompoundStatement		258:56:6838:9577	5104514	0					
ANR	5104517	IdentifierDeclStatement	"char ch = 0 , c = 0 ;"	259:1:6841:6859	5104514	0	True				
ANR	5104518	IdentifierDecl	ch = 0		5104514	0					
ANR	5104519	IdentifierDeclType	char		5104514	0					
ANR	5104520	Identifier	ch		5104514	1					
ANR	5104521	AssignmentExpression	ch = 0		5104514	2		=			
ANR	5104522	Identifier	ch		5104514	0					
ANR	5104523	PrimaryExpression	0		5104514	1					
ANR	5104524	IdentifierDecl	c = 0		5104514	1					
ANR	5104525	IdentifierDeclType	char		5104514	0					
ANR	5104526	Identifier	c		5104514	1					
ANR	5104527	AssignmentExpression	c = 0		5104514	2		=			
ANR	5104528	Identifier	c		5104514	0					
ANR	5104529	PrimaryExpression	0		5104514	1					
ANR	5104530	DoStatement	do		5104514	1					
ANR	5104531	CompoundStatement		4:4:27:27	5104514	0					
ANR	5104532	IfStatement	"if ( ! cin_get ( num , nc , & ch ) )"		5104514	0					
ANR	5104533	Condition	"! cin_get ( num , nc , & ch )"	262:6:6874:6896	5104514	0	True				
ANR	5104534	UnaryOperationExpression	"! cin_get ( num , nc , & ch )"		5104514	0					
ANR	5104535	UnaryOperator	!		5104514	0					
ANR	5104536	CallExpression	"cin_get ( num , nc , & ch )"		5104514	1					
ANR	5104537	Callee	cin_get		5104514	0					
ANR	5104538	Identifier	cin_get		5104514	0					
ANR	5104539	ArgumentList	num		5104514	1					
ANR	5104540	Argument	num		5104514	0					
ANR	5104541	Identifier	num		5104514	0					
ANR	5104542	Argument	nc		5104514	1					
ANR	5104543	Identifier	nc		5104514	0					
ANR	5104544	Argument	& ch		5104514	2					
ANR	5104545	UnaryOperationExpression	& ch		5104514	0					
ANR	5104546	UnaryOperator	&		5104514	0					
ANR	5104547	Identifier	ch		5104514	1					
ANR	5104548	CompoundStatement		5:31:60:60	5104514	1					
ANR	5104549	ReturnStatement	return nc -> curr_tok = RNCEND ;	263:3:6904:6932	5104514	0	True				
ANR	5104550	AssignmentExpression	nc -> curr_tok = RNCEND		5104514	0		=			
ANR	5104551	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104552	Identifier	nc		5104514	0					
ANR	5104553	Identifier	curr_tok		5104514	1					
ANR	5104554	Identifier	RNCEND		5104514	1					
ANR	5104555	Condition	ch != '\\n' && isspace ( ( ut8 ) ch )	265:10:6948:6978	5104514	1	True				
ANR	5104556	AndExpression	ch != '\\n' && isspace ( ( ut8 ) ch )		5104514	0		&&			
ANR	5104557	EqualityExpression	ch != '\\n'		5104514	0		!=			
ANR	5104558	Identifier	ch		5104514	0					
ANR	5104559	PrimaryExpression	'\\n'		5104514	1					
ANR	5104560	CallExpression	isspace ( ( ut8 ) ch )		5104514	1					
ANR	5104561	Callee	isspace		5104514	0					
ANR	5104562	Identifier	isspace		5104514	0					
ANR	5104563	ArgumentList	( ut8 ) ch		5104514	1					
ANR	5104564	Argument	( ut8 ) ch		5104514	0					
ANR	5104565	CastExpression	( ut8 ) ch		5104514	0					
ANR	5104566	CastTarget	ut8		5104514	0					
ANR	5104567	Identifier	ch		5104514	1					
ANR	5104568	SwitchStatement	switch ( ch )		5104514	2					
ANR	5104569	Condition	ch	267:9:6992:6993	5104514	0	True				
ANR	5104570	Identifier	ch		5104514	0					
ANR	5104571	CompoundStatement		10:13:157:157	5104514	1					
ANR	5104572	Label	case 0 :	268:1:6999:7005	5104514	0	True				
ANR	5104573	Label	case ';' :	269:1:7008:7016	5104514	1	True				
ANR	5104574	Label	case '\\n' :	270:1:7019:7028	5104514	2	True				
ANR	5104575	ReturnStatement	return nc -> curr_tok = RNCEND ;	271:2:7032:7060	5104514	3	True				
ANR	5104576	AssignmentExpression	nc -> curr_tok = RNCEND		5104514	0		=			
ANR	5104577	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104578	Identifier	nc		5104514	0					
ANR	5104579	Identifier	curr_tok		5104514	1					
ANR	5104580	Identifier	RNCEND		5104514	1					
ANR	5104581	Label	case '+' :	272:1:7063:7071	5104514	4	True				
ANR	5104582	IfStatement	"if ( cin_get ( num , nc , & c ) && c == '+' )"		5104514	5					
ANR	5104583	Condition	"cin_get ( num , nc , & c ) && c == '+'"	273:6:7113:7145	5104514	0	True				
ANR	5104584	AndExpression	"cin_get ( num , nc , & c ) && c == '+'"		5104514	0		&&			
ANR	5104585	CallExpression	"cin_get ( num , nc , & c )"		5104514	0					
ANR	5104586	Callee	cin_get		5104514	0					
ANR	5104587	Identifier	cin_get		5104514	0					
ANR	5104588	ArgumentList	num		5104514	1					
ANR	5104589	Argument	num		5104514	0					
ANR	5104590	Identifier	num		5104514	0					
ANR	5104591	Argument	nc		5104514	1					
ANR	5104592	Identifier	nc		5104514	0					
ANR	5104593	Argument	& c		5104514	2					
ANR	5104594	UnaryOperationExpression	& c		5104514	0					
ANR	5104595	UnaryOperator	&		5104514	0					
ANR	5104596	Identifier	c		5104514	1					
ANR	5104597	EqualityExpression	c == '+'		5104514	1		==			
ANR	5104598	Identifier	c		5104514	0					
ANR	5104599	PrimaryExpression	'+'		5104514	1					
ANR	5104600	CompoundStatement		16:41:309:309	5104514	1					
ANR	5104601	ReturnStatement	return nc -> curr_tok = RNCINC ;	274:3:7153:7181	5104514	0	True				
ANR	5104602	AssignmentExpression	nc -> curr_tok = RNCINC		5104514	0		=			
ANR	5104603	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104604	Identifier	nc		5104514	0					
ANR	5104605	Identifier	curr_tok		5104514	1					
ANR	5104606	Identifier	RNCINC		5104514	1					
ANR	5104607	ExpressionStatement	"cin_putback ( num , nc , c )"	276:2:7189:7213	5104514	6	True				
ANR	5104608	CallExpression	"cin_putback ( num , nc , c )"		5104514	0					
ANR	5104609	Callee	cin_putback		5104514	0					
ANR	5104610	Identifier	cin_putback		5104514	0					
ANR	5104611	ArgumentList	num		5104514	1					
ANR	5104612	Argument	num		5104514	0					
ANR	5104613	Identifier	num		5104514	0					
ANR	5104614	Argument	nc		5104514	1					
ANR	5104615	Identifier	nc		5104514	0					
ANR	5104616	Argument	c		5104514	2					
ANR	5104617	Identifier	c		5104514	0					
ANR	5104618	ReturnStatement	return nc -> curr_tok = ( RNumCalcToken ) ch ;	277:2:7217:7257	5104514	7	True				
ANR	5104619	AssignmentExpression	nc -> curr_tok = ( RNumCalcToken ) ch		5104514	0		=			
ANR	5104620	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104621	Identifier	nc		5104514	0					
ANR	5104622	Identifier	curr_tok		5104514	1					
ANR	5104623	CastExpression	( RNumCalcToken ) ch		5104514	1					
ANR	5104624	CastTarget	RNumCalcToken		5104514	0					
ANR	5104625	Identifier	ch		5104514	1					
ANR	5104626	Label	case '~' :	279:1:7276:7284	5104514	8	True				
ANR	5104627	IfStatement	"if ( cin_get ( num , nc , & c ) && c == '-' )"		5104514	9					
ANR	5104628	Condition	"cin_get ( num , nc , & c ) && c == '-'"	280:6:7292:7324	5104514	0	True				
ANR	5104629	AndExpression	"cin_get ( num , nc , & c ) && c == '-'"		5104514	0		&&			
ANR	5104630	CallExpression	"cin_get ( num , nc , & c )"		5104514	0					
ANR	5104631	Callee	cin_get		5104514	0					
ANR	5104632	Identifier	cin_get		5104514	0					
ANR	5104633	ArgumentList	num		5104514	1					
ANR	5104634	Argument	num		5104514	0					
ANR	5104635	Identifier	num		5104514	0					
ANR	5104636	Argument	nc		5104514	1					
ANR	5104637	Identifier	nc		5104514	0					
ANR	5104638	Argument	& c		5104514	2					
ANR	5104639	UnaryOperationExpression	& c		5104514	0					
ANR	5104640	UnaryOperator	&		5104514	0					
ANR	5104641	Identifier	c		5104514	1					
ANR	5104642	EqualityExpression	c == '-'		5104514	1		==			
ANR	5104643	Identifier	c		5104514	0					
ANR	5104644	PrimaryExpression	'-'		5104514	1					
ANR	5104645	CompoundStatement		23:41:488:488	5104514	1					
ANR	5104646	ReturnStatement	return nc -> curr_tok = RNCNEG ;	281:3:7332:7360	5104514	0	True				
ANR	5104647	AssignmentExpression	nc -> curr_tok = RNCNEG		5104514	0		=			
ANR	5104648	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104649	Identifier	nc		5104514	0					
ANR	5104650	Identifier	curr_tok		5104514	1					
ANR	5104651	Identifier	RNCNEG		5104514	1					
ANR	5104652	ExpressionStatement	"cin_putback ( num , nc , c )"	283:2:7368:7392	5104514	10	True				
ANR	5104653	CallExpression	"cin_putback ( num , nc , c )"		5104514	0					
ANR	5104654	Callee	cin_putback		5104514	0					
ANR	5104655	Identifier	cin_putback		5104514	0					
ANR	5104656	ArgumentList	num		5104514	1					
ANR	5104657	Argument	num		5104514	0					
ANR	5104658	Identifier	num		5104514	0					
ANR	5104659	Argument	nc		5104514	1					
ANR	5104660	Identifier	nc		5104514	0					
ANR	5104661	Argument	c		5104514	2					
ANR	5104662	Identifier	c		5104514	0					
ANR	5104663	ReturnStatement	return nc -> curr_tok = ( RNumCalcToken ) ch ;	284:2:7396:7436	5104514	11	True				
ANR	5104664	AssignmentExpression	nc -> curr_tok = ( RNumCalcToken ) ch		5104514	0		=			
ANR	5104665	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104666	Identifier	nc		5104514	0					
ANR	5104667	Identifier	curr_tok		5104514	1					
ANR	5104668	CastExpression	( RNumCalcToken ) ch		5104514	1					
ANR	5104669	CastTarget	RNumCalcToken		5104514	0					
ANR	5104670	Identifier	ch		5104514	1					
ANR	5104671	Label	case '-' :	286:1:7459:7467	5104514	12	True				
ANR	5104672	IfStatement	"if ( cin_get ( num , nc , & c ) && c == '-' )"		5104514	13					
ANR	5104673	Condition	"cin_get ( num , nc , & c ) && c == '-'"	287:6:7475:7507	5104514	0	True				
ANR	5104674	AndExpression	"cin_get ( num , nc , & c ) && c == '-'"		5104514	0		&&			
ANR	5104675	CallExpression	"cin_get ( num , nc , & c )"		5104514	0					
ANR	5104676	Callee	cin_get		5104514	0					
ANR	5104677	Identifier	cin_get		5104514	0					
ANR	5104678	ArgumentList	num		5104514	1					
ANR	5104679	Argument	num		5104514	0					
ANR	5104680	Identifier	num		5104514	0					
ANR	5104681	Argument	nc		5104514	1					
ANR	5104682	Identifier	nc		5104514	0					
ANR	5104683	Argument	& c		5104514	2					
ANR	5104684	UnaryOperationExpression	& c		5104514	0					
ANR	5104685	UnaryOperator	&		5104514	0					
ANR	5104686	Identifier	c		5104514	1					
ANR	5104687	EqualityExpression	c == '-'		5104514	1		==			
ANR	5104688	Identifier	c		5104514	0					
ANR	5104689	PrimaryExpression	'-'		5104514	1					
ANR	5104690	CompoundStatement		30:41:671:671	5104514	1					
ANR	5104691	ReturnStatement	return nc -> curr_tok = RNCDEC ;	288:3:7515:7543	5104514	0	True				
ANR	5104692	AssignmentExpression	nc -> curr_tok = RNCDEC		5104514	0		=			
ANR	5104693	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104694	Identifier	nc		5104514	0					
ANR	5104695	Identifier	curr_tok		5104514	1					
ANR	5104696	Identifier	RNCDEC		5104514	1					
ANR	5104697	ExpressionStatement	"cin_putback ( num , nc , c )"	290:2:7551:7575	5104514	14	True				
ANR	5104698	CallExpression	"cin_putback ( num , nc , c )"		5104514	0					
ANR	5104699	Callee	cin_putback		5104514	0					
ANR	5104700	Identifier	cin_putback		5104514	0					
ANR	5104701	ArgumentList	num		5104514	1					
ANR	5104702	Argument	num		5104514	0					
ANR	5104703	Identifier	num		5104514	0					
ANR	5104704	Argument	nc		5104514	1					
ANR	5104705	Identifier	nc		5104514	0					
ANR	5104706	Argument	c		5104514	2					
ANR	5104707	Identifier	c		5104514	0					
ANR	5104708	ReturnStatement	return nc -> curr_tok = ( RNumCalcToken ) ch ;	291:2:7579:7619	5104514	15	True				
ANR	5104709	AssignmentExpression	nc -> curr_tok = ( RNumCalcToken ) ch		5104514	0		=			
ANR	5104710	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104711	Identifier	nc		5104514	0					
ANR	5104712	Identifier	curr_tok		5104514	1					
ANR	5104713	CastExpression	( RNumCalcToken ) ch		5104514	1					
ANR	5104714	CastTarget	RNumCalcToken		5104514	0					
ANR	5104715	Identifier	ch		5104514	1					
ANR	5104716	Label	case '<' :	292:1:7622:7630	5104514	16	True				
ANR	5104717	IfStatement	"if ( cin_get ( num , nc , & c ) && c == '<' )"		5104514	17					
ANR	5104718	Condition	"cin_get ( num , nc , & c ) && c == '<'"	293:6:7638:7670	5104514	0	True				
ANR	5104719	AndExpression	"cin_get ( num , nc , & c ) && c == '<'"		5104514	0		&&			
ANR	5104720	CallExpression	"cin_get ( num , nc , & c )"		5104514	0					
ANR	5104721	Callee	cin_get		5104514	0					
ANR	5104722	Identifier	cin_get		5104514	0					
ANR	5104723	ArgumentList	num		5104514	1					
ANR	5104724	Argument	num		5104514	0					
ANR	5104725	Identifier	num		5104514	0					
ANR	5104726	Argument	nc		5104514	1					
ANR	5104727	Identifier	nc		5104514	0					
ANR	5104728	Argument	& c		5104514	2					
ANR	5104729	UnaryOperationExpression	& c		5104514	0					
ANR	5104730	UnaryOperator	&		5104514	0					
ANR	5104731	Identifier	c		5104514	1					
ANR	5104732	EqualityExpression	c == '<'		5104514	1		==			
ANR	5104733	Identifier	c		5104514	0					
ANR	5104734	PrimaryExpression	'<'		5104514	1					
ANR	5104735	CompoundStatement		36:41:834:834	5104514	1					
ANR	5104736	IfStatement	"if ( cin_get ( num , nc , & c ) && c == '<' )"		5104514	0					
ANR	5104737	Condition	"cin_get ( num , nc , & c ) && c == '<'"	294:7:7682:7714	5104514	0	True				
ANR	5104738	AndExpression	"cin_get ( num , nc , & c ) && c == '<'"		5104514	0		&&			
ANR	5104739	CallExpression	"cin_get ( num , nc , & c )"		5104514	0					
ANR	5104740	Callee	cin_get		5104514	0					
ANR	5104741	Identifier	cin_get		5104514	0					
ANR	5104742	ArgumentList	num		5104514	1					
ANR	5104743	Argument	num		5104514	0					
ANR	5104744	Identifier	num		5104514	0					
ANR	5104745	Argument	nc		5104514	1					
ANR	5104746	Identifier	nc		5104514	0					
ANR	5104747	Argument	& c		5104514	2					
ANR	5104748	UnaryOperationExpression	& c		5104514	0					
ANR	5104749	UnaryOperator	&		5104514	0					
ANR	5104750	Identifier	c		5104514	1					
ANR	5104751	EqualityExpression	c == '<'		5104514	1		==			
ANR	5104752	Identifier	c		5104514	0					
ANR	5104753	PrimaryExpression	'<'		5104514	1					
ANR	5104754	CompoundStatement		37:42:878:878	5104514	1					
ANR	5104755	ReturnStatement	return nc -> curr_tok = RNCROL ;	295:4:7723:7751	5104514	0	True				
ANR	5104756	AssignmentExpression	nc -> curr_tok = RNCROL		5104514	0		=			
ANR	5104757	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104758	Identifier	nc		5104514	0					
ANR	5104759	Identifier	curr_tok		5104514	1					
ANR	5104760	Identifier	RNCROL		5104514	1					
ANR	5104761	ExpressionStatement	"cin_putback ( num , nc , c )"	297:3:7761:7785	5104514	1	True				
ANR	5104762	CallExpression	"cin_putback ( num , nc , c )"		5104514	0					
ANR	5104763	Callee	cin_putback		5104514	0					
ANR	5104764	Identifier	cin_putback		5104514	0					
ANR	5104765	ArgumentList	num		5104514	1					
ANR	5104766	Argument	num		5104514	0					
ANR	5104767	Identifier	num		5104514	0					
ANR	5104768	Argument	nc		5104514	1					
ANR	5104769	Identifier	nc		5104514	0					
ANR	5104770	Argument	c		5104514	2					
ANR	5104771	Identifier	c		5104514	0					
ANR	5104772	ReturnStatement	return nc -> curr_tok = RNCSHL ;	298:3:7790:7818	5104514	2	True				
ANR	5104773	AssignmentExpression	nc -> curr_tok = RNCSHL		5104514	0		=			
ANR	5104774	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104775	Identifier	nc		5104514	0					
ANR	5104776	Identifier	curr_tok		5104514	1					
ANR	5104777	Identifier	RNCSHL		5104514	1					
ANR	5104778	ExpressionStatement	"cin_putback ( num , nc , c )"	300:2:7826:7850	5104514	18	True				
ANR	5104779	CallExpression	"cin_putback ( num , nc , c )"		5104514	0					
ANR	5104780	Callee	cin_putback		5104514	0					
ANR	5104781	Identifier	cin_putback		5104514	0					
ANR	5104782	ArgumentList	num		5104514	1					
ANR	5104783	Argument	num		5104514	0					
ANR	5104784	Identifier	num		5104514	0					
ANR	5104785	Argument	nc		5104514	1					
ANR	5104786	Identifier	nc		5104514	0					
ANR	5104787	Argument	c		5104514	2					
ANR	5104788	Identifier	c		5104514	0					
ANR	5104789	ReturnStatement	return nc -> curr_tok = RNCEND ;	301:2:7854:7882	5104514	19	True				
ANR	5104790	AssignmentExpression	nc -> curr_tok = RNCEND		5104514	0		=			
ANR	5104791	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104792	Identifier	nc		5104514	0					
ANR	5104793	Identifier	curr_tok		5104514	1					
ANR	5104794	Identifier	RNCEND		5104514	1					
ANR	5104795	Label	case '>' :	302:1:7885:7893	5104514	20	True				
ANR	5104796	IfStatement	"if ( cin_get ( num , nc , & c ) && c == '>' )"		5104514	21					
ANR	5104797	Condition	"cin_get ( num , nc , & c ) && c == '>'"	303:6:7901:7933	5104514	0	True				
ANR	5104798	AndExpression	"cin_get ( num , nc , & c ) && c == '>'"		5104514	0		&&			
ANR	5104799	CallExpression	"cin_get ( num , nc , & c )"		5104514	0					
ANR	5104800	Callee	cin_get		5104514	0					
ANR	5104801	Identifier	cin_get		5104514	0					
ANR	5104802	ArgumentList	num		5104514	1					
ANR	5104803	Argument	num		5104514	0					
ANR	5104804	Identifier	num		5104514	0					
ANR	5104805	Argument	nc		5104514	1					
ANR	5104806	Identifier	nc		5104514	0					
ANR	5104807	Argument	& c		5104514	2					
ANR	5104808	UnaryOperationExpression	& c		5104514	0					
ANR	5104809	UnaryOperator	&		5104514	0					
ANR	5104810	Identifier	c		5104514	1					
ANR	5104811	EqualityExpression	c == '>'		5104514	1		==			
ANR	5104812	Identifier	c		5104514	0					
ANR	5104813	PrimaryExpression	'>'		5104514	1					
ANR	5104814	CompoundStatement		46:41:1097:1097	5104514	1					
ANR	5104815	IfStatement	"if ( cin_get ( num , nc , & c ) && c == '>' )"		5104514	0					
ANR	5104816	Condition	"cin_get ( num , nc , & c ) && c == '>'"	304:7:7945:7977	5104514	0	True				
ANR	5104817	AndExpression	"cin_get ( num , nc , & c ) && c == '>'"		5104514	0		&&			
ANR	5104818	CallExpression	"cin_get ( num , nc , & c )"		5104514	0					
ANR	5104819	Callee	cin_get		5104514	0					
ANR	5104820	Identifier	cin_get		5104514	0					
ANR	5104821	ArgumentList	num		5104514	1					
ANR	5104822	Argument	num		5104514	0					
ANR	5104823	Identifier	num		5104514	0					
ANR	5104824	Argument	nc		5104514	1					
ANR	5104825	Identifier	nc		5104514	0					
ANR	5104826	Argument	& c		5104514	2					
ANR	5104827	UnaryOperationExpression	& c		5104514	0					
ANR	5104828	UnaryOperator	&		5104514	0					
ANR	5104829	Identifier	c		5104514	1					
ANR	5104830	EqualityExpression	c == '>'		5104514	1		==			
ANR	5104831	Identifier	c		5104514	0					
ANR	5104832	PrimaryExpression	'>'		5104514	1					
ANR	5104833	CompoundStatement		47:42:1141:1141	5104514	1					
ANR	5104834	ReturnStatement	return nc -> curr_tok = RNCROR ;	305:4:7986:8014	5104514	0	True				
ANR	5104835	AssignmentExpression	nc -> curr_tok = RNCROR		5104514	0		=			
ANR	5104836	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104837	Identifier	nc		5104514	0					
ANR	5104838	Identifier	curr_tok		5104514	1					
ANR	5104839	Identifier	RNCROR		5104514	1					
ANR	5104840	ExpressionStatement	"cin_putback ( num , nc , c )"	307:3:8024:8048	5104514	1	True				
ANR	5104841	CallExpression	"cin_putback ( num , nc , c )"		5104514	0					
ANR	5104842	Callee	cin_putback		5104514	0					
ANR	5104843	Identifier	cin_putback		5104514	0					
ANR	5104844	ArgumentList	num		5104514	1					
ANR	5104845	Argument	num		5104514	0					
ANR	5104846	Identifier	num		5104514	0					
ANR	5104847	Argument	nc		5104514	1					
ANR	5104848	Identifier	nc		5104514	0					
ANR	5104849	Argument	c		5104514	2					
ANR	5104850	Identifier	c		5104514	0					
ANR	5104851	ReturnStatement	return nc -> curr_tok = RNCSHR ;	308:3:8053:8081	5104514	2	True				
ANR	5104852	AssignmentExpression	nc -> curr_tok = RNCSHR		5104514	0		=			
ANR	5104853	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104854	Identifier	nc		5104514	0					
ANR	5104855	Identifier	curr_tok		5104514	1					
ANR	5104856	Identifier	RNCSHR		5104514	1					
ANR	5104857	ExpressionStatement	"cin_putback ( num , nc , c )"	310:2:8089:8113	5104514	22	True				
ANR	5104858	CallExpression	"cin_putback ( num , nc , c )"		5104514	0					
ANR	5104859	Callee	cin_putback		5104514	0					
ANR	5104860	Identifier	cin_putback		5104514	0					
ANR	5104861	ArgumentList	num		5104514	1					
ANR	5104862	Argument	num		5104514	0					
ANR	5104863	Identifier	num		5104514	0					
ANR	5104864	Argument	nc		5104514	1					
ANR	5104865	Identifier	nc		5104514	0					
ANR	5104866	Argument	c		5104514	2					
ANR	5104867	Identifier	c		5104514	0					
ANR	5104868	ReturnStatement	return nc -> curr_tok = RNCEND ;	311:2:8117:8145	5104514	23	True				
ANR	5104869	AssignmentExpression	nc -> curr_tok = RNCEND		5104514	0		=			
ANR	5104870	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104871	Identifier	nc		5104514	0					
ANR	5104872	Identifier	curr_tok		5104514	1					
ANR	5104873	Identifier	RNCEND		5104514	1					
ANR	5104874	Label	case '^' :	312:1:8148:8156	5104514	24	True				
ANR	5104875	Label	case '&' :	313:1:8159:8167	5104514	25	True				
ANR	5104876	Label	case '|' :	314:1:8170:8178	5104514	26	True				
ANR	5104877	Label	case '*' :	315:1:8181:8189	5104514	27	True				
ANR	5104878	Label	case '%' :	316:1:8192:8200	5104514	28	True				
ANR	5104879	Label	case '/' :	317:1:8203:8211	5104514	29	True				
ANR	5104880	Label	case '(' :	318:1:8214:8222	5104514	30	True				
ANR	5104881	Label	case ')' :	319:1:8225:8233	5104514	31	True				
ANR	5104882	Label	case '=' :	320:1:8236:8244	5104514	32	True				
ANR	5104883	ReturnStatement	return nc -> curr_tok = ( RNumCalcToken ) ch ;	321:2:8248:8288	5104514	33	True				
ANR	5104884	AssignmentExpression	nc -> curr_tok = ( RNumCalcToken ) ch		5104514	0		=			
ANR	5104885	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104886	Identifier	nc		5104514	0					
ANR	5104887	Identifier	curr_tok		5104514	1					
ANR	5104888	CastExpression	( RNumCalcToken ) ch		5104514	1					
ANR	5104889	CastTarget	RNumCalcToken		5104514	0					
ANR	5104890	Identifier	ch		5104514	1					
ANR	5104891	Label	case '0' :	322:1:8291:8299	5104514	34	True				
ANR	5104892	Label	case '1' :	322:11:8301:8309	5104514	35	True				
ANR	5104893	Label	case '2' :	322:21:8311:8319	5104514	36	True				
ANR	5104894	Label	case '3' :	322:31:8321:8329	5104514	37	True				
ANR	5104895	Label	case '4' :	322:41:8331:8339	5104514	38	True				
ANR	5104896	Label	case '5' :	323:1:8342:8350	5104514	39	True				
ANR	5104897	Label	case '6' :	323:11:8352:8360	5104514	40	True				
ANR	5104898	Label	case '7' :	323:21:8362:8370	5104514	41	True				
ANR	5104899	Label	case '8' :	323:31:8372:8380	5104514	42	True				
ANR	5104900	Label	case '9' :	323:41:8382:8390	5104514	43	True				
ANR	5104901	Label	case '.' :	324:1:8393:8401	5104514	44	True				
ANR	5104902	ExpressionStatement	"cin_putback ( num , nc , ch )"	325:2:8405:8430	5104514	45	True				
ANR	5104903	CallExpression	"cin_putback ( num , nc , ch )"		5104514	0					
ANR	5104904	Callee	cin_putback		5104514	0					
ANR	5104905	Identifier	cin_putback		5104514	0					
ANR	5104906	ArgumentList	num		5104514	1					
ANR	5104907	Argument	num		5104514	0					
ANR	5104908	Identifier	num		5104514	0					
ANR	5104909	Argument	nc		5104514	1					
ANR	5104910	Identifier	nc		5104514	0					
ANR	5104911	Argument	ch		5104514	2					
ANR	5104912	Identifier	ch		5104514	0					
ANR	5104913	IfStatement	"if ( ! cin_get_num ( num , nc , & nc -> number_value ) )"		5104514	46					
ANR	5104914	Condition	"! cin_get_num ( num , nc , & nc -> number_value )"	326:6:8438:8478	5104514	0	True				
ANR	5104915	UnaryOperationExpression	"! cin_get_num ( num , nc , & nc -> number_value )"		5104514	0					
ANR	5104916	UnaryOperator	!		5104514	0					
ANR	5104917	CallExpression	"cin_get_num ( num , nc , & nc -> number_value )"		5104514	1					
ANR	5104918	Callee	cin_get_num		5104514	0					
ANR	5104919	Identifier	cin_get_num		5104514	0					
ANR	5104920	ArgumentList	num		5104514	1					
ANR	5104921	Argument	num		5104514	0					
ANR	5104922	Identifier	num		5104514	0					
ANR	5104923	Argument	nc		5104514	1					
ANR	5104924	Identifier	nc		5104514	0					
ANR	5104925	Argument	& nc -> number_value		5104514	2					
ANR	5104926	UnaryOperationExpression	& nc -> number_value		5104514	0					
ANR	5104927	UnaryOperator	&		5104514	0					
ANR	5104928	PtrMemberAccess	nc -> number_value		5104514	1					
ANR	5104929	Identifier	nc		5104514	0					
ANR	5104930	Identifier	number_value		5104514	1					
ANR	5104931	CompoundStatement		69:49:1642:1642	5104514	1					
ANR	5104932	ExpressionStatement	"error ( num , nc , ""invalid number conversion"" )"	327:3:8486:8530	5104514	0	True				
ANR	5104933	CallExpression	"error ( num , nc , ""invalid number conversion"" )"		5104514	0					
ANR	5104934	Callee	error		5104514	0					
ANR	5104935	Identifier	error		5104514	0					
ANR	5104936	ArgumentList	num		5104514	1					
ANR	5104937	Argument	num		5104514	0					
ANR	5104938	Identifier	num		5104514	0					
ANR	5104939	Argument	nc		5104514	1					
ANR	5104940	Identifier	nc		5104514	0					
ANR	5104941	Argument	"""invalid number conversion"""		5104514	2					
ANR	5104942	PrimaryExpression	"""invalid number conversion"""		5104514	0					
ANR	5104943	ReturnStatement	return 1 ;	328:3:8535:8543	5104514	1	True				
ANR	5104944	PrimaryExpression	1		5104514	0					
ANR	5104945	ReturnStatement	return nc -> curr_tok = RNCNUMBER ;	330:2:8551:8582	5104514	47	True				
ANR	5104946	AssignmentExpression	nc -> curr_tok = RNCNUMBER		5104514	0		=			
ANR	5104947	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5104948	Identifier	nc		5104514	0					
ANR	5104949	Identifier	curr_tok		5104514	1					
ANR	5104950	Identifier	RNCNUMBER		5104514	1					
ANR	5104951	Statement	define	332:1:8586:8591	5104514	48	True				
ANR	5104952	Statement	isvalidchar	332:8:8593:8603	5104514	49	True				
ANR	5104953	Statement	(	332:19:8604:8604	5104514	50	True				
ANR	5104954	Statement	x	332:20:8605:8605	5104514	51	True				
ANR	5104955	Statement	)	332:21:8606:8606	5104514	52	True				
ANR	5104956	Statement	(	333:1:8611:8611	5104514	53	True				
ANR	5104957	Statement	isalnum	333:2:8612:8618	5104514	54	True				
ANR	5104958	Statement	(	333:9:8619:8619	5104514	55	True				
ANR	5104959	Statement	x	333:10:8620:8620	5104514	56	True				
ANR	5104960	Statement	)	333:11:8621:8621	5104514	57	True				
ANR	5104961	Statement	||	333:13:8623:8624	5104514	58	True				
ANR	5104962	Statement	(	333:16:8626:8626	5104514	59	True				
ANR	5104963	Statement	x	333:17:8627:8627	5104514	60	True				
ANR	5104964	Statement	)	333:18:8628:8628	5104514	61	True				
ANR	5104965	Statement	==	333:19:8629:8630	5104514	62	True				
ANR	5104966	Statement	':'	333:21:8631:8633	5104514	63	True				
ANR	5104967	Statement	||	333:25:8635:8636	5104514	64	True				
ANR	5104968	Statement	(	333:28:8638:8638	5104514	65	True				
ANR	5104969	Statement	x	333:29:8639:8639	5104514	66	True				
ANR	5104970	Statement	)	333:30:8640:8640	5104514	67	True				
ANR	5104971	Statement	==	333:31:8641:8642	5104514	68	True				
ANR	5104972	Statement	'$'	333:33:8643:8645	5104514	69	True				
ANR	5104973	Statement	||	333:37:8647:8648	5104514	70	True				
ANR	5104974	Statement	(	333:40:8650:8650	5104514	71	True				
ANR	5104975	Statement	x	333:41:8651:8651	5104514	72	True				
ANR	5104976	Statement	)	333:42:8652:8652	5104514	73	True				
ANR	5104977	Statement	==	333:43:8653:8654	5104514	74	True				
ANR	5104978	Statement	'.'	333:45:8655:8657	5104514	75	True				
ANR	5104979	Statement	||	333:49:8659:8660	5104514	76	True				
ANR	5104980	Statement	(	333:52:8662:8662	5104514	77	True				
ANR	5104981	Statement	x	333:53:8663:8663	5104514	78	True				
ANR	5104982	Statement	)	333:54:8664:8664	5104514	79	True				
ANR	5104983	Statement	==	333:55:8665:8666	5104514	80	True				
ANR	5104984	Statement	'_'	333:57:8667:8669	5104514	81	True				
ANR	5104985	Statement	||	333:61:8671:8672	5104514	82	True				
ANR	5104986	Statement	(	333:64:8674:8674	5104514	83	True				
ANR	5104987	Statement	x	333:65:8675:8675	5104514	84	True				
ANR	5104988	Statement	)	333:66:8676:8676	5104514	85	True				
ANR	5104989	Statement	==	333:67:8677:8678	5104514	86	True				
ANR	5104990	Statement	'?'	333:69:8679:8681	5104514	87	True				
ANR	5104991	Statement	||	333:73:8683:8684	5104514	88	True				
ANR	5104992	Statement	(	333:76:8686:8686	5104514	89	True				
ANR	5104993	Statement	x	333:77:8687:8687	5104514	90	True				
ANR	5104994	Statement	)	333:78:8688:8688	5104514	91	True				
ANR	5104995	Statement	==	333:79:8689:8690	5104514	92	True				
ANR	5104996	Statement	'\\\\'	333:81:8691:8694	5104514	93	True				
ANR	5104997	Statement	||	334:1:8699:8700	5104514	94	True				
ANR	5104998	Statement	(	334:4:8702:8702	5104514	95	True				
ANR	5104999	Statement	x	334:5:8703:8703	5104514	96	True				
ANR	5105000	Statement	)	334:6:8704:8704	5104514	97	True				
ANR	5105001	Statement	==	334:7:8705:8706	5104514	98	True				
ANR	5105002	Statement	' '	334:9:8707:8709	5104514	99	True				
ANR	5105003	Statement	||	334:13:8711:8712	5104514	100	True				
ANR	5105004	Statement	(	334:16:8714:8714	5104514	101	True				
ANR	5105005	Statement	x	334:17:8715:8715	5104514	102	True				
ANR	5105006	Statement	)	334:18:8716:8716	5104514	103	True				
ANR	5105007	Statement	==	334:19:8717:8718	5104514	104	True				
ANR	5105008	Statement	'['	334:21:8719:8721	5104514	105	True				
ANR	5105009	Statement	||	334:25:8723:8724	5104514	106	True				
ANR	5105010	Statement	(	334:28:8726:8726	5104514	107	True				
ANR	5105011	Statement	x	334:29:8727:8727	5104514	108	True				
ANR	5105012	Statement	)	334:30:8728:8728	5104514	109	True				
ANR	5105013	Statement	==	334:31:8729:8730	5104514	110	True				
ANR	5105014	Statement	']'	334:33:8731:8733	5104514	111	True				
ANR	5105015	Statement	||	334:37:8735:8736	5104514	112	True				
ANR	5105016	Statement	(	334:40:8738:8738	5104514	113	True				
ANR	5105017	Statement	x	334:41:8739:8739	5104514	114	True				
ANR	5105018	Statement	)	334:42:8740:8740	5104514	115	True				
ANR	5105019	Statement	==	334:43:8741:8742	5104514	116	True				
ANR	5105020	Statement	'}'	334:45:8743:8745	5104514	117	True				
ANR	5105021	Statement	||	334:49:8747:8748	5104514	118	True				
ANR	5105022	Statement	(	334:52:8750:8750	5104514	119	True				
ANR	5105023	Statement	x	334:53:8751:8751	5104514	120	True				
ANR	5105024	Statement	)	334:54:8752:8752	5104514	121	True				
ANR	5105025	Statement	==	334:55:8753:8754	5104514	122	True				
ANR	5105026	Statement	'{'	334:57:8755:8757	5104514	123	True				
ANR	5105027	Statement	||	334:61:8759:8760	5104514	124	True				
ANR	5105028	Statement	(	334:64:8762:8762	5104514	125	True				
ANR	5105029	Statement	(	334:65:8763:8763	5104514	126	True				
ANR	5105030	Statement	x	334:66:8764:8764	5104514	127	True				
ANR	5105031	Statement	)	334:67:8765:8765	5104514	128	True				
ANR	5105032	Statement	>=	334:68:8766:8767	5104514	129	True				
ANR	5105033	Statement	'0'	334:70:8768:8770	5104514	130	True				
ANR	5105034	Statement	&&	334:73:8771:8772	5104514	131	True				
ANR	5105035	Statement	(	334:75:8773:8773	5104514	132	True				
ANR	5105036	Statement	x	334:76:8774:8774	5104514	133	True				
ANR	5105037	Statement	)	334:77:8775:8775	5104514	134	True				
ANR	5105038	Statement	<=	334:78:8776:8777	5104514	135	True				
ANR	5105039	Statement	'9'	334:80:8778:8780	5104514	136	True				
ANR	5105040	Statement	)	334:83:8781:8781	5104514	137	True				
ANR	5105041	Statement	)	334:84:8782:8782	5104514	138	True				
ANR	5105042	Label	default :	336:1:8786:8793	5104514	139	True				
ANR	5105043	Identifier	default		5104514	0					
ANR	5105044	CompoundStatement		81:3:1963:1972	5104514	140					
ANR	5105045	IdentifierDeclStatement	int i = 0 ;	338:3:8802:8811	5104514	0	True				
ANR	5105046	IdentifierDecl	i = 0		5104514	0					
ANR	5105047	IdentifierDeclType	int		5104514	0					
ANR	5105048	Identifier	i		5104514	1					
ANR	5105049	AssignmentExpression	i = 0		5104514	2		=			
ANR	5105050	Identifier	i		5104514	0					
ANR	5105051	PrimaryExpression	0		5104514	1					
ANR	5105052	Statement	define	339:1:8814:8819	5104514	1	True				
ANR	5105053	Statement	stringValueAppend	339:8:8821:8837	5104514	2	True				
ANR	5105054	Statement	(	339:25:8838:8838	5104514	3	True				
ANR	5105055	Statement	x	339:26:8839:8839	5104514	4	True				
ANR	5105056	Statement	)	339:27:8840:8840	5104514	5	True				
ANR	5105057	CompoundStatement		83:1:2008:2056	5104514	6					
ANR	5105058	IdentifierDeclStatement	const size_t max = sizeof ( nc -> string_value ) - 1 ;	340:1:8847:8895	5104514	0	True				
ANR	5105059	IdentifierDecl	max = sizeof ( nc -> string_value ) - 1		5104514	0					
ANR	5105060	IdentifierDeclType	const size_t		5104514	0					
ANR	5105061	Identifier	max		5104514	1					
ANR	5105062	AssignmentExpression	max = sizeof ( nc -> string_value ) - 1		5104514	2		=			
ANR	5105063	Identifier	max		5104514	0					
ANR	5105064	AdditiveExpression	sizeof ( nc -> string_value ) - 1		5104514	1		-			
ANR	5105065	SizeofExpression	sizeof ( nc -> string_value )		5104514	0					
ANR	5105066	Sizeof	sizeof		5104514	0					
ANR	5105067	PtrMemberAccess	nc -> string_value		5104514	1					
ANR	5105068	Identifier	nc		5104514	0					
ANR	5105069	Identifier	string_value		5104514	1					
ANR	5105070	PrimaryExpression	1		5104514	1					
ANR	5105071	IfStatement	if ( i < max )		5104514	1					
ANR	5105072	Condition	i < max	341:5:8904:8910	5104514	0	True				
ANR	5105073	RelationalExpression	i < max		5104514	0		<			
ANR	5105074	Identifier	i		5104514	0					
ANR	5105075	Identifier	max		5104514	1					
ANR	5105076	ExpressionStatement	nc -> string_value [ i ++ ] = x	341:14:8913:8938	5104514	1	True				
ANR	5105077	AssignmentExpression	nc -> string_value [ i ++ ] = x		5104514	0		=			
ANR	5105078	ArrayIndexing	nc -> string_value [ i ++ ]		5104514	0					
ANR	5105079	PtrMemberAccess	nc -> string_value		5104514	0					
ANR	5105080	Identifier	nc		5104514	0					
ANR	5105081	Identifier	string_value		5104514	1					
ANR	5105082	PostIncDecOperationExpression	i ++		5104514	1					
ANR	5105083	Identifier	i		5104514	0					
ANR	5105084	IncDec	++		5104514	1					
ANR	5105085	Identifier	x		5104514	1					
ANR	5105086	ElseStatement	else		5104514	0					
ANR	5105087	ExpressionStatement	nc -> string_value [ max ] = 0	342:6:8948:8973	5104514	0	True				
ANR	5105088	AssignmentExpression	nc -> string_value [ max ] = 0		5104514	0		=			
ANR	5105089	ArrayIndexing	nc -> string_value [ max ]		5104514	0					
ANR	5105090	PtrMemberAccess	nc -> string_value		5104514	0					
ANR	5105091	Identifier	nc		5104514	0					
ANR	5105092	Identifier	string_value		5104514	1					
ANR	5105093	Identifier	max		5104514	1					
ANR	5105094	PrimaryExpression	0		5104514	1					
ANR	5105095	ExpressionStatement	stringValueAppend ( ch )	344:3:8982:9003	5104514	7	True				
ANR	5105096	CallExpression	stringValueAppend ( ch )		5104514	0					
ANR	5105097	Callee	stringValueAppend		5104514	0					
ANR	5105098	Identifier	stringValueAppend		5104514	0					
ANR	5105099	ArgumentList	ch		5104514	1					
ANR	5105100	Argument	ch		5104514	0					
ANR	5105101	Identifier	ch		5104514	0					
ANR	5105102	IfStatement	if ( ch == '[' )		5104514	8					
ANR	5105103	Condition	ch == '['	345:7:9012:9020	5104514	0	True				
ANR	5105104	EqualityExpression	ch == '['		5104514	0		==			
ANR	5105105	Identifier	ch		5104514	0					
ANR	5105106	PrimaryExpression	'['		5104514	1					
ANR	5105107	CompoundStatement		88:18:2184:2184	5104514	1					
ANR	5105108	WhileStatement	"while ( cin_get ( num , nc , & ch ) && ch != ']' )"		5104514	0					
ANR	5105109	Condition	"cin_get ( num , nc , & ch ) && ch != ']'"	346:11:9036:9068	5104514	0	True				
ANR	5105110	AndExpression	"cin_get ( num , nc , & ch ) && ch != ']'"		5104514	0		&&			
ANR	5105111	CallExpression	"cin_get ( num , nc , & ch )"		5104514	0					
ANR	5105112	Callee	cin_get		5104514	0					
ANR	5105113	Identifier	cin_get		5104514	0					
ANR	5105114	ArgumentList	num		5104514	1					
ANR	5105115	Argument	num		5104514	0					
ANR	5105116	Identifier	num		5104514	0					
ANR	5105117	Argument	nc		5104514	1					
ANR	5105118	Identifier	nc		5104514	0					
ANR	5105119	Argument	& ch		5104514	2					
ANR	5105120	UnaryOperationExpression	& ch		5104514	0					
ANR	5105121	UnaryOperator	&		5104514	0					
ANR	5105122	Identifier	ch		5104514	1					
ANR	5105123	EqualityExpression	ch != ']'		5104514	1		!=			
ANR	5105124	Identifier	ch		5104514	0					
ANR	5105125	PrimaryExpression	']'		5104514	1					
ANR	5105126	CompoundStatement		89:46:2232:2232	5104514	1					
ANR	5105127	IfStatement	if ( i > R_NUMCALC_STRSZ - 1 )		5104514	0					
ANR	5105128	Condition	i > R_NUMCALC_STRSZ - 1	347:9:9082:9104	5104514	0	True				
ANR	5105129	RelationalExpression	i > R_NUMCALC_STRSZ - 1		5104514	0		>			
ANR	5105130	Identifier	i		5104514	0					
ANR	5105131	AdditiveExpression	R_NUMCALC_STRSZ - 1		5104514	1		-			
ANR	5105132	Identifier	R_NUMCALC_STRSZ		5104514	0					
ANR	5105133	PrimaryExpression	1		5104514	1					
ANR	5105134	CompoundStatement		90:34:2268:2268	5104514	1					
ANR	5105135	ExpressionStatement	"error ( num , nc , ""string too long"" )"	348:6:9115:9149	5104514	0	True				
ANR	5105136	CallExpression	"error ( num , nc , ""string too long"" )"		5104514	0					
ANR	5105137	Callee	error		5104514	0					
ANR	5105138	Identifier	error		5104514	0					
ANR	5105139	ArgumentList	num		5104514	1					
ANR	5105140	Argument	num		5104514	0					
ANR	5105141	Identifier	num		5104514	0					
ANR	5105142	Argument	nc		5104514	1					
ANR	5105143	Identifier	nc		5104514	0					
ANR	5105144	Argument	"""string too long"""		5104514	2					
ANR	5105145	PrimaryExpression	"""string too long"""		5104514	0					
ANR	5105146	ReturnStatement	return 0 ;	349:6:9157:9165	5104514	1	True				
ANR	5105147	PrimaryExpression	0		5104514	0					
ANR	5105148	ExpressionStatement	stringValueAppend ( ch )	351:5:9179:9200	5104514	1	True				
ANR	5105149	CallExpression	stringValueAppend ( ch )		5104514	0					
ANR	5105150	Callee	stringValueAppend		5104514	0					
ANR	5105151	Identifier	stringValueAppend		5104514	0					
ANR	5105152	ArgumentList	ch		5104514	1					
ANR	5105153	Argument	ch		5104514	0					
ANR	5105154	Identifier	ch		5104514	0					
ANR	5105155	ExpressionStatement	stringValueAppend ( ch )	353:4:9212:9233	5104514	1	True				
ANR	5105156	CallExpression	stringValueAppend ( ch )		5104514	0					
ANR	5105157	Callee	stringValueAppend		5104514	0					
ANR	5105158	Identifier	stringValueAppend		5104514	0					
ANR	5105159	ArgumentList	ch		5104514	1					
ANR	5105160	Argument	ch		5104514	0					
ANR	5105161	Identifier	ch		5104514	0					
ANR	5105162	ElseStatement	else		5104514	0					
ANR	5105163	CompoundStatement		97:10:2406:2406	5104514	0					
ANR	5105164	WhileStatement	"while ( cin_get ( num , nc , & ch ) && isvalidchar ( ( unsigned char ) ch ) )"		5104514	0					
ANR	5105165	Condition	"cin_get ( num , nc , & ch ) && isvalidchar ( ( unsigned char ) ch )"	355:11:9258:9314	5104514	0	True				
ANR	5105166	AndExpression	"cin_get ( num , nc , & ch ) && isvalidchar ( ( unsigned char ) ch )"		5104514	0		&&			
ANR	5105167	CallExpression	"cin_get ( num , nc , & ch )"		5104514	0					
ANR	5105168	Callee	cin_get		5104514	0					
ANR	5105169	Identifier	cin_get		5104514	0					
ANR	5105170	ArgumentList	num		5104514	1					
ANR	5105171	Argument	num		5104514	0					
ANR	5105172	Identifier	num		5104514	0					
ANR	5105173	Argument	nc		5104514	1					
ANR	5105174	Identifier	nc		5104514	0					
ANR	5105175	Argument	& ch		5104514	2					
ANR	5105176	UnaryOperationExpression	& ch		5104514	0					
ANR	5105177	UnaryOperator	&		5104514	0					
ANR	5105178	Identifier	ch		5104514	1					
ANR	5105179	CallExpression	isvalidchar ( ( unsigned char ) ch )		5104514	1					
ANR	5105180	Callee	isvalidchar		5104514	0					
ANR	5105181	Identifier	isvalidchar		5104514	0					
ANR	5105182	ArgumentList	( unsigned char ) ch		5104514	1					
ANR	5105183	Argument	( unsigned char ) ch		5104514	0					
ANR	5105184	CastExpression	( unsigned char ) ch		5104514	0					
ANR	5105185	CastTarget	unsigned char		5104514	0					
ANR	5105186	Identifier	ch		5104514	1					
ANR	5105187	CompoundStatement		98:70:2478:2478	5104514	1					
ANR	5105188	IfStatement	if ( i >= R_NUMCALC_STRSZ )		5104514	0					
ANR	5105189	Condition	i >= R_NUMCALC_STRSZ	356:9:9328:9347	5104514	0	True				
ANR	5105190	RelationalExpression	i >= R_NUMCALC_STRSZ		5104514	0		>=			
ANR	5105191	Identifier	i		5104514	0					
ANR	5105192	Identifier	R_NUMCALC_STRSZ		5104514	1					
ANR	5105193	CompoundStatement		99:31:2511:2511	5104514	1					
ANR	5105194	ExpressionStatement	"error ( num , nc , ""string too long"" )"	357:6:9358:9392	5104514	0	True				
ANR	5105195	CallExpression	"error ( num , nc , ""string too long"" )"		5104514	0					
ANR	5105196	Callee	error		5104514	0					
ANR	5105197	Identifier	error		5104514	0					
ANR	5105198	ArgumentList	num		5104514	1					
ANR	5105199	Argument	num		5104514	0					
ANR	5105200	Identifier	num		5104514	0					
ANR	5105201	Argument	nc		5104514	1					
ANR	5105202	Identifier	nc		5104514	0					
ANR	5105203	Argument	"""string too long"""		5104514	2					
ANR	5105204	PrimaryExpression	"""string too long"""		5104514	0					
ANR	5105205	ReturnStatement	return 0 ;	358:6:9400:9408	5104514	1	True				
ANR	5105206	PrimaryExpression	0		5104514	0					
ANR	5105207	ExpressionStatement	stringValueAppend ( ch )	360:5:9422:9443	5104514	1	True				
ANR	5105208	CallExpression	stringValueAppend ( ch )		5104514	0					
ANR	5105209	Callee	stringValueAppend		5104514	0					
ANR	5105210	Identifier	stringValueAppend		5104514	0					
ANR	5105211	ArgumentList	ch		5104514	1					
ANR	5105212	Argument	ch		5104514	0					
ANR	5105213	Identifier	ch		5104514	0					
ANR	5105214	ExpressionStatement	stringValueAppend ( 0 )	363:3:9459:9479	5104514	9	True				
ANR	5105215	CallExpression	stringValueAppend ( 0 )		5104514	0					
ANR	5105216	Callee	stringValueAppend		5104514	0					
ANR	5105217	Identifier	stringValueAppend		5104514	0					
ANR	5105218	ArgumentList	0		5104514	1					
ANR	5105219	Argument	0		5104514	0					
ANR	5105220	PrimaryExpression	0		5104514	0					
ANR	5105221	IfStatement	if ( ch != '\\'' )		5104514	10					
ANR	5105222	Condition	ch != '\\''	364:7:9488:9495	5104514	0	True				
ANR	5105223	EqualityExpression	ch != '\\''		5104514	0		!=			
ANR	5105224	Identifier	ch		5104514	0					
ANR	5105225	PrimaryExpression	'\\''		5104514	1					
ANR	5105226	CompoundStatement		107:17:2659:2659	5104514	1					
ANR	5105227	ExpressionStatement	"cin_putback ( num , nc , ch )"	365:4:9504:9529	5104514	0	True				
ANR	5105228	CallExpression	"cin_putback ( num , nc , ch )"		5104514	0					
ANR	5105229	Callee	cin_putback		5104514	0					
ANR	5105230	Identifier	cin_putback		5104514	0					
ANR	5105231	ArgumentList	num		5104514	1					
ANR	5105232	Argument	num		5104514	0					
ANR	5105233	Identifier	num		5104514	0					
ANR	5105234	Argument	nc		5104514	1					
ANR	5105235	Identifier	nc		5104514	0					
ANR	5105236	Argument	ch		5104514	2					
ANR	5105237	Identifier	ch		5104514	0					
ANR	5105238	ReturnStatement	return nc -> curr_tok = RNCNAME ;	367:3:9539:9568	5104514	11	True				
ANR	5105239	AssignmentExpression	nc -> curr_tok = RNCNAME		5104514	0		=			
ANR	5105240	PtrMemberAccess	nc -> curr_tok		5104514	0					
ANR	5105241	Identifier	nc		5104514	0					
ANR	5105242	Identifier	curr_tok		5104514	1					
ANR	5105243	Identifier	RNCNAME		5104514	1					
ANR	5105244	ReturnType	static RNumCalcToken		5104514	1					
ANR	5105245	Identifier	get_token		5104514	2					
ANR	5105246	ParameterList	"RNum * num , RNumCalc * nc"		5104514	3					
ANR	5105247	Parameter	RNum * num	258:31:6813:6821	5104514	0	True				
ANR	5105248	ParameterType	RNum *		5104514	0					
ANR	5105249	Identifier	num		5104514	1					
ANR	5105250	Parameter	RNumCalc * nc	258:42:6824:6835	5104514	1	True				
ANR	5105251	ParameterType	RNumCalc *		5104514	0					
ANR	5105252	Identifier	nc		5104514	1					
ANR	5105253	CFGEntryNode	ENTRY		5104514		True				
ANR	5105254	CFGExitNode	EXIT		5104514		True				
ANR	5105255	Symbol	nc -> string_value		5104514						
ANR	5105256	Symbol	num		5104514						
ANR	5105257	Symbol	RNCEND		5104514						
ANR	5105258	Symbol	isvalidchar		5104514						
ANR	5105259	Symbol	& ch		5104514						
ANR	5105260	Symbol	* max		5104514						
ANR	5105261	Symbol	RNCINC		5104514						
ANR	5105262	Symbol	RNCROL		5104514						
ANR	5105263	Symbol	RNCNEG		5104514						
ANR	5105264	Symbol	RNCROR		5104514						
ANR	5105265	Symbol	& nc -> number_value		5104514						
ANR	5105266	Symbol	R_NUMCALC_STRSZ		5104514						
ANR	5105267	Symbol	c		5104514						
ANR	5105268	Symbol	RNCDEC		5104514						
ANR	5105269	Symbol	* nc -> string_value		5104514						
ANR	5105270	Symbol	* * nc		5104514						
ANR	5105271	Symbol	RNCNUMBER		5104514						
ANR	5105272	Symbol	ch		5104514						
ANR	5105273	Symbol	max		5104514						
ANR	5105274	Symbol	nc -> curr_tok		5104514						
ANR	5105275	Symbol	isspace		5104514						
ANR	5105276	Symbol	RNCSHL		5104514						
ANR	5105277	Symbol	& c		5104514						
ANR	5105278	Symbol	i		5104514						
ANR	5105279	Symbol	RNCSHR		5104514						
ANR	5105280	Symbol	cin_get		5104514						
ANR	5105281	Symbol	cin_get_num		5104514						
ANR	5105282	Symbol	nc		5104514						
ANR	5105283	Symbol	* nc		5104514						
ANR	5105284	Symbol	x		5104514						
ANR	5105285	Symbol	RNCNAME		5104514						
ANR	5105286	Function	load_token	372:0:9580:9731							
ANR	5105287	FunctionDef	"load_token (RNum * num , RNumCalc * nc , const char * s)"		5105286	0					
ANR	5105288	CompoundStatement		372:63:9643:9731	5105286	0					
ANR	5105289	ExpressionStatement	nc -> calc_i = 0	373:1:9646:9660	5105286	0	True				
ANR	5105290	AssignmentExpression	nc -> calc_i = 0		5105286	0		=			
ANR	5105291	PtrMemberAccess	nc -> calc_i		5105286	0					
ANR	5105292	Identifier	nc		5105286	0					
ANR	5105293	Identifier	calc_i		5105286	1					
ANR	5105294	PrimaryExpression	0		5105286	1					
ANR	5105295	ExpressionStatement	nc -> calc_len = strlen ( s )	374:1:9663:9688	5105286	1	True				
ANR	5105296	AssignmentExpression	nc -> calc_len = strlen ( s )		5105286	0		=			
ANR	5105297	PtrMemberAccess	nc -> calc_len		5105286	0					
ANR	5105298	Identifier	nc		5105286	0					
ANR	5105299	Identifier	calc_len		5105286	1					
ANR	5105300	CallExpression	strlen ( s )		5105286	1					
ANR	5105301	Callee	strlen		5105286	0					
ANR	5105302	Identifier	strlen		5105286	0					
ANR	5105303	ArgumentList	s		5105286	1					
ANR	5105304	Argument	s		5105286	0					
ANR	5105305	Identifier	s		5105286	0					
ANR	5105306	ExpressionStatement	nc -> calc_buf = s	375:1:9691:9707	5105286	2	True				
ANR	5105307	AssignmentExpression	nc -> calc_buf = s		5105286	0		=			
ANR	5105308	PtrMemberAccess	nc -> calc_buf		5105286	0					
ANR	5105309	Identifier	nc		5105286	0					
ANR	5105310	Identifier	calc_buf		5105286	1					
ANR	5105311	Identifier	s		5105286	1					
ANR	5105312	ExpressionStatement	nc -> calc_err = NULL	376:1:9710:9729	5105286	3	True				
ANR	5105313	AssignmentExpression	nc -> calc_err = NULL		5105286	0		=			
ANR	5105314	PtrMemberAccess	nc -> calc_err		5105286	0					
ANR	5105315	Identifier	nc		5105286	0					
ANR	5105316	Identifier	calc_err		5105286	1					
ANR	5105317	Identifier	NULL		5105286	1					
ANR	5105318	ReturnType	static void		5105286	1					
ANR	5105319	Identifier	load_token		5105286	2					
ANR	5105320	ParameterList	"RNum * num , RNumCalc * nc , const char * s"		5105286	3					
ANR	5105321	Parameter	RNum * num	372:23:9603:9611	5105286	0	True				
ANR	5105322	ParameterType	RNum *		5105286	0					
ANR	5105323	Identifier	num		5105286	1					
ANR	5105324	Parameter	RNumCalc * nc	372:34:9614:9625	5105286	1	True				
ANR	5105325	ParameterType	RNumCalc *		5105286	0					
ANR	5105326	Identifier	nc		5105286	1					
ANR	5105327	Parameter	const char * s	372:48:9628:9640	5105286	2	True				
ANR	5105328	ParameterType	const char *		5105286	0					
ANR	5105329	Identifier	s		5105286	1					
ANR	5105330	CFGEntryNode	ENTRY		5105286		True				
ANR	5105331	CFGExitNode	EXIT		5105286		True				
ANR	5105332	Symbol	strlen		5105286						
ANR	5105333	Symbol	s		5105286						
ANR	5105334	Symbol	NULL		5105286						
ANR	5105335	Symbol	nc		5105286						
ANR	5105336	Symbol	nc -> calc_i		5105286						
ANR	5105337	Symbol	num		5105286						
ANR	5105338	Symbol	* nc		5105286						
ANR	5105339	Symbol	nc -> calc_len		5105286						
ANR	5105340	Symbol	nc -> calc_err		5105286						
ANR	5105341	Symbol	nc -> calc_buf		5105286						
ANR	5105342	Function	r_num_calc	379:0:9734:10375							
ANR	5105343	FunctionDef	"r_num_calc (RNum * num , const char * str , const char * * err)"		5105342	0					
ANR	5105344	CompoundStatement		379:68:9802:10375	5105342	0					
ANR	5105345	IdentifierDeclStatement	RNumCalcValue n ;	380:1:9805:9820	5105342	0	True				
ANR	5105346	IdentifierDecl	n		5105342	0					
ANR	5105347	IdentifierDeclType	RNumCalcValue		5105342	0					
ANR	5105348	Identifier	n		5105342	1					
ANR	5105349	IdentifierDeclStatement	"RNumCalc * nc , nc_local ;"	381:1:9823:9845	5105342	1	True				
ANR	5105350	IdentifierDecl	* nc		5105342	0					
ANR	5105351	IdentifierDeclType	RNumCalc *		5105342	0					
ANR	5105352	Identifier	nc		5105342	1					
ANR	5105353	IdentifierDecl	nc_local		5105342	1					
ANR	5105354	IdentifierDeclType	RNumCalc		5105342	0					
ANR	5105355	Identifier	nc_local		5105342	1					
ANR	5105356	IfStatement	if ( ! str || ! * str )		5105342	2					
ANR	5105357	Condition	! str || ! * str	382:5:9852:9864	5105342	0	True				
ANR	5105358	OrExpression	! str || ! * str		5105342	0		||			
ANR	5105359	UnaryOperationExpression	! str		5105342	0					
ANR	5105360	UnaryOperator	!		5105342	0					
ANR	5105361	Identifier	str		5105342	1					
ANR	5105362	UnaryOperationExpression	! * str		5105342	1					
ANR	5105363	UnaryOperator	!		5105342	0					
ANR	5105364	UnaryOperationExpression	* str		5105342	1					
ANR	5105365	UnaryOperator	*		5105342	0					
ANR	5105366	Identifier	str		5105342	1					
ANR	5105367	CompoundStatement		4:20:64:64	5105342	1					
ANR	5105368	Statement	return	383:2:9871:9876	5105342	0	True				
ANR	5105369	Statement	0L	383:9:9878:9879	5105342	1	True				
ANR	5105370	ExpressionStatement	L	383:11:9880:9881	5105342	2	True				
ANR	5105371	Identifier	L		5105342	0					
ANR	5105372	IfStatement	if ( num )		5105342	3					
ANR	5105373	Condition	num	385:5:9891:9893	5105342	0	True				
ANR	5105374	Identifier	num		5105342	0					
ANR	5105375	CompoundStatement		7:10:93:93	5105342	1					
ANR	5105376	ExpressionStatement	nc = & num -> nc	386:2:9900:9913	5105342	0	True				
ANR	5105377	AssignmentExpression	nc = & num -> nc		5105342	0		=			
ANR	5105378	Identifier	nc		5105342	0					
ANR	5105379	UnaryOperationExpression	& num -> nc		5105342	1					
ANR	5105380	UnaryOperator	&		5105342	0					
ANR	5105381	PtrMemberAccess	num -> nc		5105342	1					
ANR	5105382	Identifier	num		5105342	0					
ANR	5105383	Identifier	nc		5105342	1					
ANR	5105384	ExpressionStatement	num -> dbz = 0	387:2:9917:9929	5105342	1	True				
ANR	5105385	AssignmentExpression	num -> dbz = 0		5105342	0		=			
ANR	5105386	PtrMemberAccess	num -> dbz		5105342	0					
ANR	5105387	Identifier	num		5105342	0					
ANR	5105388	Identifier	dbz		5105342	1					
ANR	5105389	PrimaryExpression	0		5105342	1					
ANR	5105390	ElseStatement	else		5105342	0					
ANR	5105391	CompoundStatement		10:8:136:136	5105342	0					
ANR	5105392	ExpressionStatement	nc = & nc_local	389:2:9943:9957	5105342	0	True				
ANR	5105393	AssignmentExpression	nc = & nc_local		5105342	0		=			
ANR	5105394	Identifier	nc		5105342	0					
ANR	5105395	UnaryOperationExpression	& nc_local		5105342	1					
ANR	5105396	UnaryOperator	&		5105342	0					
ANR	5105397	Identifier	nc_local		5105342	1					
ANR	5105398	ExpressionStatement	nc -> curr_tok = RNCPRINT	392:1:9975:9998	5105342	4	True				
ANR	5105399	AssignmentExpression	nc -> curr_tok = RNCPRINT		5105342	0		=			
ANR	5105400	PtrMemberAccess	nc -> curr_tok		5105342	0					
ANR	5105401	Identifier	nc		5105342	0					
ANR	5105402	Identifier	curr_tok		5105342	1					
ANR	5105403	Identifier	RNCPRINT		5105342	1					
ANR	5105404	ExpressionStatement	nc -> number_value . d = 0.0	393:1:10001:10025	5105342	5	True				
ANR	5105405	AssignmentExpression	nc -> number_value . d = 0.0		5105342	0		=			
ANR	5105406	MemberAccess	nc -> number_value . d		5105342	0					
ANR	5105407	PtrMemberAccess	nc -> number_value		5105342	0					
ANR	5105408	Identifier	nc		5105342	0					
ANR	5105409	Identifier	number_value		5105342	1					
ANR	5105410	Identifier	d		5105342	1					
ANR	5105411	PrimaryExpression	0.0		5105342	1					
ANR	5105412	Statement	nc	394:1:10028:10029	5105342	6	True				
ANR	5105413	Statement	->	394:3:10030:10031	5105342	7	True				
ANR	5105414	Statement	number_value	394:5:10032:10043	5105342	8	True				
ANR	5105415	Statement	.	394:17:10044:10044	5105342	9	True				
ANR	5105416	Statement	n	394:18:10045:10045	5105342	10	True				
ANR	5105417	Statement	=	394:20:10047:10047	5105342	11	True				
ANR	5105418	Statement	0L	394:22:10049:10050	5105342	12	True				
ANR	5105419	ExpressionStatement	L	394:24:10051:10052	5105342	13	True				
ANR	5105420	Identifier	L		5105342	0					
ANR	5105421	ExpressionStatement	nc -> errors = 0	395:1:10055:10069	5105342	14	True				
ANR	5105422	AssignmentExpression	nc -> errors = 0		5105342	0		=			
ANR	5105423	PtrMemberAccess	nc -> errors		5105342	0					
ANR	5105424	Identifier	nc		5105342	0					
ANR	5105425	Identifier	errors		5105342	1					
ANR	5105426	PrimaryExpression	0		5105342	1					
ANR	5105427	ExpressionStatement	nc -> oc = 0	396:1:10072:10082	5105342	15	True				
ANR	5105428	AssignmentExpression	nc -> oc = 0		5105342	0		=			
ANR	5105429	PtrMemberAccess	nc -> oc		5105342	0					
ANR	5105430	Identifier	nc		5105342	0					
ANR	5105431	Identifier	oc		5105342	1					
ANR	5105432	PrimaryExpression	0		5105342	1					
ANR	5105433	ExpressionStatement	nc -> calc_err = NULL	397:1:10085:10104	5105342	16	True				
ANR	5105434	AssignmentExpression	nc -> calc_err = NULL		5105342	0		=			
ANR	5105435	PtrMemberAccess	nc -> calc_err		5105342	0					
ANR	5105436	Identifier	nc		5105342	0					
ANR	5105437	Identifier	calc_err		5105342	1					
ANR	5105438	Identifier	NULL		5105342	1					
ANR	5105439	ExpressionStatement	nc -> calc_i = 0	398:1:10107:10121	5105342	17	True				
ANR	5105440	AssignmentExpression	nc -> calc_i = 0		5105342	0		=			
ANR	5105441	PtrMemberAccess	nc -> calc_i		5105342	0					
ANR	5105442	Identifier	nc		5105342	0					
ANR	5105443	Identifier	calc_i		5105342	1					
ANR	5105444	PrimaryExpression	0		5105342	1					
ANR	5105445	ExpressionStatement	nc -> calc_len = 0	399:1:10124:10140	5105342	18	True				
ANR	5105446	AssignmentExpression	nc -> calc_len = 0		5105342	0		=			
ANR	5105447	PtrMemberAccess	nc -> calc_len		5105342	0					
ANR	5105448	Identifier	nc		5105342	0					
ANR	5105449	Identifier	calc_len		5105342	1					
ANR	5105450	PrimaryExpression	0		5105342	1					
ANR	5105451	ExpressionStatement	nc -> calc_buf = NULL	400:1:10143:10162	5105342	19	True				
ANR	5105452	AssignmentExpression	nc -> calc_buf = NULL		5105342	0		=			
ANR	5105453	PtrMemberAccess	nc -> calc_buf		5105342	0					
ANR	5105454	Identifier	nc		5105342	0					
ANR	5105455	Identifier	calc_buf		5105342	1					
ANR	5105456	Identifier	NULL		5105342	1					
ANR	5105457	ExpressionStatement	nc -> under_calc = true	401:1:10165:10186	5105342	20	True				
ANR	5105458	AssignmentExpression	nc -> under_calc = true		5105342	0		=			
ANR	5105459	PtrMemberAccess	nc -> under_calc		5105342	0					
ANR	5105460	Identifier	nc		5105342	0					
ANR	5105461	Identifier	under_calc		5105342	1					
ANR	5105462	Identifier	true		5105342	1					
ANR	5105463	ExpressionStatement	"load_token ( num , nc , str )"	403:1:10190:10215	5105342	21	True				
ANR	5105464	CallExpression	"load_token ( num , nc , str )"		5105342	0					
ANR	5105465	Callee	load_token		5105342	0					
ANR	5105466	Identifier	load_token		5105342	0					
ANR	5105467	ArgumentList	num		5105342	1					
ANR	5105468	Argument	num		5105342	0					
ANR	5105469	Identifier	num		5105342	0					
ANR	5105470	Argument	nc		5105342	1					
ANR	5105471	Identifier	nc		5105342	0					
ANR	5105472	Argument	str		5105342	2					
ANR	5105473	Identifier	str		5105342	0					
ANR	5105474	ExpressionStatement	"get_token ( num , nc )"	404:1:10218:10237	5105342	22	True				
ANR	5105475	CallExpression	"get_token ( num , nc )"		5105342	0					
ANR	5105476	Callee	get_token		5105342	0					
ANR	5105477	Identifier	get_token		5105342	0					
ANR	5105478	ArgumentList	num		5105342	1					
ANR	5105479	Argument	num		5105342	0					
ANR	5105480	Identifier	num		5105342	0					
ANR	5105481	Argument	nc		5105342	1					
ANR	5105482	Identifier	nc		5105342	0					
ANR	5105483	ExpressionStatement	"n = expr ( num , nc , 0 )"	405:1:10240:10261	5105342	23	True				
ANR	5105484	AssignmentExpression	"n = expr ( num , nc , 0 )"		5105342	0		=			
ANR	5105485	Identifier	n		5105342	0					
ANR	5105486	CallExpression	"expr ( num , nc , 0 )"		5105342	1					
ANR	5105487	Callee	expr		5105342	0					
ANR	5105488	Identifier	expr		5105342	0					
ANR	5105489	ArgumentList	num		5105342	1					
ANR	5105490	Argument	num		5105342	0					
ANR	5105491	Identifier	num		5105342	0					
ANR	5105492	Argument	nc		5105342	1					
ANR	5105493	Identifier	nc		5105342	0					
ANR	5105494	Argument	0		5105342	2					
ANR	5105495	PrimaryExpression	0		5105342	0					
ANR	5105496	IfStatement	if ( err )		5105342	24					
ANR	5105497	Condition	err	406:5:10268:10270	5105342	0	True				
ANR	5105498	Identifier	err		5105342	0					
ANR	5105499	CompoundStatement		28:10:470:470	5105342	1					
ANR	5105500	ExpressionStatement	* err = nc -> calc_err	407:2:10277:10296	5105342	0	True				
ANR	5105501	AssignmentExpression	* err = nc -> calc_err		5105342	0		=			
ANR	5105502	UnaryOperationExpression	* err		5105342	0					
ANR	5105503	UnaryOperator	*		5105342	0					
ANR	5105504	Identifier	err		5105342	1					
ANR	5105505	PtrMemberAccess	nc -> calc_err		5105342	1					
ANR	5105506	Identifier	nc		5105342	0					
ANR	5105507	Identifier	calc_err		5105342	1					
ANR	5105508	IfStatement	if ( num )		5105342	25					
ANR	5105509	Condition	num	409:5:10306:10308	5105342	0	True				
ANR	5105510	Identifier	num		5105342	0					
ANR	5105511	CompoundStatement		31:10:508:508	5105342	1					
ANR	5105512	ExpressionStatement	num -> fvalue = n . d	410:2:10315:10332	5105342	0	True				
ANR	5105513	AssignmentExpression	num -> fvalue = n . d		5105342	0		=			
ANR	5105514	PtrMemberAccess	num -> fvalue		5105342	0					
ANR	5105515	Identifier	num		5105342	0					
ANR	5105516	Identifier	fvalue		5105342	1					
ANR	5105517	MemberAccess	n . d		5105342	1					
ANR	5105518	Identifier	n		5105342	0					
ANR	5105519	Identifier	d		5105342	1					
ANR	5105520	ExpressionStatement	nc -> under_calc = false	412:1:10338:10360	5105342	26	True				
ANR	5105521	AssignmentExpression	nc -> under_calc = false		5105342	0		=			
ANR	5105522	PtrMemberAccess	nc -> under_calc		5105342	0					
ANR	5105523	Identifier	nc		5105342	0					
ANR	5105524	Identifier	under_calc		5105342	1					
ANR	5105525	Identifier	false		5105342	1					
ANR	5105526	ReturnStatement	return n . n ;	413:1:10363:10373	5105342	27	True				
ANR	5105527	MemberAccess	n . n		5105342	0					
ANR	5105528	Identifier	n		5105342	0					
ANR	5105529	Identifier	n		5105342	1					
ANR	5105530	ReturnType	R_API ut64		5105342	1					
ANR	5105531	Identifier	r_num_calc		5105342	2					
ANR	5105532	ParameterList	"RNum * num , const char * str , const char * * err"		5105342	3					
ANR	5105533	Parameter	RNum * num	379:22:9756:9764	5105342	0	True				
ANR	5105534	ParameterType	RNum *		5105342	0					
ANR	5105535	Identifier	num		5105342	1					
ANR	5105536	Parameter	const char * str	379:33:9767:9781	5105342	1	True				
ANR	5105537	ParameterType	const char *		5105342	0					
ANR	5105538	Identifier	str		5105342	1					
ANR	5105539	Parameter	const char * * err	379:50:9784:9799	5105342	2	True				
ANR	5105540	ParameterType	const char * *		5105342	0					
ANR	5105541	Identifier	err		5105342	1					
ANR	5105542	CFGEntryNode	ENTRY		5105342		True				
ANR	5105543	CFGExitNode	EXIT		5105342		True				
ANR	5105544	Symbol	nc -> oc		5105342						
ANR	5105545	Symbol	num		5105342						
ANR	5105546	Symbol	RNCPRINT		5105342						
ANR	5105547	Symbol	n . n		5105342						
ANR	5105548	Symbol	& nc_local		5105342						
ANR	5105549	Symbol	nc -> under_calc		5105342						
ANR	5105550	Symbol	expr		5105342						
ANR	5105551	Symbol	* str		5105342						
ANR	5105552	Symbol	& num -> nc		5105342						
ANR	5105553	Symbol	n . d		5105342						
ANR	5105554	Symbol	nc -> calc_buf		5105342						
ANR	5105555	Symbol	num -> fvalue		5105342						
ANR	5105556	Symbol	nc -> number_value		5105342						
ANR	5105557	Symbol	NULL		5105342						
ANR	5105558	Symbol	err		5105342						
ANR	5105559	Symbol	nc -> calc_i		5105342						
ANR	5105560	Symbol	num -> dbz		5105342						
ANR	5105561	Symbol	nc -> curr_tok		5105342						
ANR	5105562	Symbol	false		5105342						
ANR	5105563	Symbol	nc -> number_value . d		5105342						
ANR	5105564	Symbol	nc -> calc_err		5105342						
ANR	5105565	Symbol	nc_local		5105342						
ANR	5105566	Symbol	n		5105342						
ANR	5105567	Symbol	nc -> errors		5105342						
ANR	5105568	Symbol	str		5105342						
ANR	5105569	Symbol	* num		5105342						
ANR	5105570	Symbol	* err		5105342						
ANR	5105571	Symbol	nc		5105342						
ANR	5105572	Symbol	* nc		5105342						
ANR	5105573	Symbol	true		5105342						
ANR	5105574	Symbol	nc -> calc_len		5105342						
ANR	5105575	Function	main	417:0:10390:10747							
ANR	5105576	FunctionDef	"main (int argc , char * argv [ ])"		5105575	0					
ANR	5105577	CompoundStatement		417:33:10423:10747	5105575	0					
ANR	5105578	IdentifierDeclStatement	RNumCalcValue n ;	418:1:10426:10441	5105575	0	True				
ANR	5105579	IdentifierDecl	n		5105575	0					
ANR	5105580	IdentifierDeclType	RNumCalcValue		5105575	0					
ANR	5105581	Identifier	n		5105575	1					
ANR	5105582	IdentifierDeclStatement	RNumCalc nc ;	419:1:10444:10455	5105575	1	True				
ANR	5105583	IdentifierDecl	nc		5105575	0					
ANR	5105584	IdentifierDeclType	RNumCalc		5105575	0					
ANR	5105585	Identifier	nc		5105575	1					
ANR	5105586	WhileStatement	while ( ! feof ( stdin ) )		5105575	2					
ANR	5105587	Condition	! feof ( stdin )	420:8:10465:10477	5105575	0	True				
ANR	5105588	UnaryOperationExpression	! feof ( stdin )		5105575	0					
ANR	5105589	UnaryOperator	!		5105575	0					
ANR	5105590	CallExpression	feof ( stdin )		5105575	1					
ANR	5105591	Callee	feof		5105575	0					
ANR	5105592	Identifier	feof		5105575	0					
ANR	5105593	ArgumentList	stdin		5105575	1					
ANR	5105594	Argument	stdin		5105575	0					
ANR	5105595	Identifier	stdin		5105575	0					
ANR	5105596	CompoundStatement		4:23:56:56	5105575	1					
ANR	5105597	ExpressionStatement	get_token ( nc )	421:2:10484:10498	5105575	0	True				
ANR	5105598	CallExpression	get_token ( nc )		5105575	0					
ANR	5105599	Callee	get_token		5105575	0					
ANR	5105600	Identifier	get_token		5105575	0					
ANR	5105601	ArgumentList	nc		5105575	1					
ANR	5105602	Argument	nc		5105575	0					
ANR	5105603	Identifier	nc		5105575	0					
ANR	5105604	IfStatement	if ( nc . curr_tok == RNCEND )		5105575	1					
ANR	5105605	Condition	nc . curr_tok == RNCEND	422:6:10506:10526	5105575	0	True				
ANR	5105606	EqualityExpression	nc . curr_tok == RNCEND		5105575	0		==			
ANR	5105607	MemberAccess	nc . curr_tok		5105575	0					
ANR	5105608	Identifier	nc		5105575	0					
ANR	5105609	Identifier	curr_tok		5105575	1					
ANR	5105610	Identifier	RNCEND		5105575	1					
ANR	5105611	CompoundStatement		6:29:105:105	5105575	1					
ANR	5105612	BreakStatement	break ;	423:3:10534:10539	5105575	0	True				
ANR	5105613	IfStatement	if ( nc . curr_tok == RNCPRINT )		5105575	2					
ANR	5105614	Condition	nc . curr_tok == RNCPRINT	425:6:10551:10573	5105575	0	True				
ANR	5105615	EqualityExpression	nc . curr_tok == RNCPRINT		5105575	0		==			
ANR	5105616	MemberAccess	nc . curr_tok		5105575	0					
ANR	5105617	Identifier	nc		5105575	0					
ANR	5105618	Identifier	curr_tok		5105575	1					
ANR	5105619	Identifier	RNCPRINT		5105575	1					
ANR	5105620	CompoundStatement		9:31:152:152	5105575	1					
ANR	5105621	ContinueStatement	continue ;	426:3:10581:10589	5105575	0	True				
ANR	5105622	ExpressionStatement	"n = expr ( num , nc , 0 )"	428:2:10597:10618	5105575	3	True				
ANR	5105623	AssignmentExpression	"n = expr ( num , nc , 0 )"		5105575	0		=			
ANR	5105624	Identifier	n		5105575	0					
ANR	5105625	CallExpression	"expr ( num , nc , 0 )"		5105575	1					
ANR	5105626	Callee	expr		5105575	0					
ANR	5105627	Identifier	expr		5105575	0					
ANR	5105628	ArgumentList	num		5105575	1					
ANR	5105629	Argument	num		5105575	0					
ANR	5105630	Identifier	num		5105575	0					
ANR	5105631	Argument	nc		5105575	1					
ANR	5105632	Identifier	nc		5105575	0					
ANR	5105633	Argument	0		5105575	2					
ANR	5105634	PrimaryExpression	0		5105575	0					
ANR	5105635	IfStatement	if ( n . d == ( ( double ) ( int ) n . d ) )		5105575	4					
ANR	5105636	Condition	n . d == ( ( double ) ( int ) n . d )	429:6:10626:10650	5105575	0	True				
ANR	5105637	EqualityExpression	n . d == ( ( double ) ( int ) n . d )		5105575	0		==			
ANR	5105638	MemberAccess	n . d		5105575	0					
ANR	5105639	Identifier	n		5105575	0					
ANR	5105640	Identifier	d		5105575	1					
ANR	5105641	CastExpression	( double ) ( int ) n . d		5105575	1					
ANR	5105642	CastTarget	double		5105575	0					
ANR	5105643	CastExpression	( int ) n . d		5105575	1					
ANR	5105644	CastTarget	int		5105575	0					
ANR	5105645	MemberAccess	n . d		5105575	1					
ANR	5105646	Identifier	n		5105575	0					
ANR	5105647	Identifier	d		5105575	1					
ANR	5105648	CompoundStatement		13:34:230:230	5105575	1					
ANR	5105649	ExpressionStatement	"printf ( ""%llx\\n"" , n . n )"	430:3:10659:10681	5105575	0	True				
ANR	5105650	CallExpression	"printf ( ""%llx\\n"" , n . n )"		5105575	0					
ANR	5105651	Callee	printf		5105575	0					
ANR	5105652	Identifier	printf		5105575	0					
ANR	5105653	ArgumentList	"""%llx\\n"""		5105575	1					
ANR	5105654	Argument	"""%llx\\n"""		5105575	0					
ANR	5105655	PrimaryExpression	"""%llx\\n"""		5105575	0					
ANR	5105656	Argument	n . n		5105575	1					
ANR	5105657	MemberAccess	n . n		5105575	0					
ANR	5105658	Identifier	n		5105575	0					
ANR	5105659	Identifier	n		5105575	1					
ANR	5105660	ElseStatement	else		5105575	0					
ANR	5105661	CompoundStatement		15:9:268:268	5105575	0					
ANR	5105662	ExpressionStatement	"printf ( ""%lf\\n"" , n . d )"	432:3:10697:10718	5105575	0	True				
ANR	5105663	CallExpression	"printf ( ""%lf\\n"" , n . d )"		5105575	0					
ANR	5105664	Callee	printf		5105575	0					
ANR	5105665	Identifier	printf		5105575	0					
ANR	5105666	ArgumentList	"""%lf\\n"""		5105575	1					
ANR	5105667	Argument	"""%lf\\n"""		5105575	0					
ANR	5105668	PrimaryExpression	"""%lf\\n"""		5105575	0					
ANR	5105669	Argument	n . d		5105575	1					
ANR	5105670	MemberAccess	n . d		5105575	0					
ANR	5105671	Identifier	n		5105575	0					
ANR	5105672	Identifier	d		5105575	1					
ANR	5105673	ReturnStatement	return nc -> errors ;	435:1:10728:10745	5105575	3	True				
ANR	5105674	PtrMemberAccess	nc -> errors		5105575	0					
ANR	5105675	Identifier	nc		5105575	0					
ANR	5105676	Identifier	errors		5105575	1					
ANR	5105677	ReturnType	int		5105575	1					
ANR	5105678	Identifier	main		5105575	2					
ANR	5105679	ParameterList	"int argc , char * argv [ ]"		5105575	3					
ANR	5105680	Parameter	int argc	417:9:10399:10406	5105575	0	True				
ANR	5105681	ParameterType	int		5105575	0					
ANR	5105682	Identifier	argc		5105575	1					
ANR	5105683	Parameter	char * argv [ ]	417:19:10409:10420	5105575	1	True				
ANR	5105684	ParameterType	char * [ ]		5105575	0					
ANR	5105685	Identifier	argv		5105575	1					
ANR	5105686	CFGEntryNode	ENTRY		5105575		True				
ANR	5105687	CFGExitNode	EXIT		5105575		True				
ANR	5105688	Symbol	argc		5105575						
ANR	5105689	Symbol	stdin		5105575						
ANR	5105690	Symbol	num		5105575						
ANR	5105691	Symbol	RNCEND		5105575						
ANR	5105692	Symbol	argv		5105575						
ANR	5105693	Symbol	n		5105575						
ANR	5105694	Symbol	RNCPRINT		5105575						
ANR	5105695	Symbol	nc -> errors		5105575						
ANR	5105696	Symbol	nc		5105575						
ANR	5105697	Symbol	n . n		5105575						
ANR	5105698	Symbol	* nc		5105575						
ANR	5105699	Symbol	feof		5105575						
ANR	5105700	Symbol	expr		5105575						
ANR	5105701	Symbol	n . d		5105575						
ANR	5105702	Symbol	nc . curr_tok		5105575						
