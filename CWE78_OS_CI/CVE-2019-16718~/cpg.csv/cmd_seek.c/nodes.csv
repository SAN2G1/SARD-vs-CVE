command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1036251	File	data/converged/CVE-2019-16718~_radare2/cmd_seek.c								
ANR	1036252	DeclStmt									
ANR	1036253	Decl							const char	const char * [ ]	help_msg_s
ANR	1036254	DeclStmt									
ANR	1036255	Decl							const char	const char * [ ]	help_msg_sC
ANR	1036256	DeclStmt									
ANR	1036257	Decl							const char	const char * [ ]	help_msg_sl
ANR	1036258	DeclStmt									
ANR	1036259	Decl							const char	const char * [ ]	help_msg_ss
ANR	1036260	Function	cmd_seek_init	64:0:2262:2442							
ANR	1036261	FunctionDef	cmd_seek_init (RCore * core)		1036260	0					
ANR	1036262	CompoundStatement		64:39:2301:2442	1036260	0					
ANR	1036263	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , s )"	65:1:2304:2335	1036260	0	True				
ANR	1036264	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , s )"		1036260	0					
ANR	1036265	Callee	DEFINE_CMD_DESCRIPTOR		1036260	0					
ANR	1036266	Identifier	DEFINE_CMD_DESCRIPTOR		1036260	0					
ANR	1036267	ArgumentList	core		1036260	1					
ANR	1036268	Argument	core		1036260	0					
ANR	1036269	Identifier	core		1036260	0					
ANR	1036270	Argument	s		1036260	1					
ANR	1036271	Identifier	s		1036260	0					
ANR	1036272	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , sC )"	66:1:2338:2370	1036260	1	True				
ANR	1036273	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , sC )"		1036260	0					
ANR	1036274	Callee	DEFINE_CMD_DESCRIPTOR		1036260	0					
ANR	1036275	Identifier	DEFINE_CMD_DESCRIPTOR		1036260	0					
ANR	1036276	ArgumentList	core		1036260	1					
ANR	1036277	Argument	core		1036260	0					
ANR	1036278	Identifier	core		1036260	0					
ANR	1036279	Argument	sC		1036260	1					
ANR	1036280	Identifier	sC		1036260	0					
ANR	1036281	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , sl )"	67:1:2373:2405	1036260	2	True				
ANR	1036282	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , sl )"		1036260	0					
ANR	1036283	Callee	DEFINE_CMD_DESCRIPTOR		1036260	0					
ANR	1036284	Identifier	DEFINE_CMD_DESCRIPTOR		1036260	0					
ANR	1036285	ArgumentList	core		1036260	1					
ANR	1036286	Argument	core		1036260	0					
ANR	1036287	Identifier	core		1036260	0					
ANR	1036288	Argument	sl		1036260	1					
ANR	1036289	Identifier	sl		1036260	0					
ANR	1036290	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ss )"	68:1:2408:2440	1036260	3	True				
ANR	1036291	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ss )"		1036260	0					
ANR	1036292	Callee	DEFINE_CMD_DESCRIPTOR		1036260	0					
ANR	1036293	Identifier	DEFINE_CMD_DESCRIPTOR		1036260	0					
ANR	1036294	ArgumentList	core		1036260	1					
ANR	1036295	Argument	core		1036260	0					
ANR	1036296	Identifier	core		1036260	0					
ANR	1036297	Argument	ss		1036260	1					
ANR	1036298	Identifier	ss		1036260	0					
ANR	1036299	ReturnType	static void		1036260	1					
ANR	1036300	Identifier	cmd_seek_init		1036260	2					
ANR	1036301	ParameterList	RCore * core		1036260	3					
ANR	1036302	Parameter	RCore * core	64:26:2288:2298	1036260	0	True				
ANR	1036303	ParameterType	RCore *		1036260	0					
ANR	1036304	Identifier	core		1036260	1					
ANR	1036305	CFGEntryNode	ENTRY		1036260		True				
ANR	1036306	CFGExitNode	EXIT		1036260		True				
ANR	1036307	Symbol	sC		1036260						
ANR	1036308	Symbol	ss		1036260						
ANR	1036309	Symbol	core		1036260						
ANR	1036310	Symbol	s		1036260						
ANR	1036311	Symbol	sl		1036260						
ANR	1036312	Function	__init_seek_line	71:0:2445:2776							
ANR	1036313	FunctionDef	__init_seek_line (RCore * core)		1036312	0					
ANR	1036314	CompoundStatement		71:42:2487:2776	1036312	0					
ANR	1036315	IdentifierDeclStatement	"ut64 from , to ;"	72:1:2490:2503	1036312	0	True				
ANR	1036316	IdentifierDecl	from		1036312	0					
ANR	1036317	IdentifierDeclType	ut64		1036312	0					
ANR	1036318	Identifier	from		1036312	1					
ANR	1036319	IdentifierDecl	to		1036312	1					
ANR	1036320	IdentifierDeclType	ut64		1036312	0					
ANR	1036321	Identifier	to		1036312	1					
ANR	1036322	ExpressionStatement	"r_config_bump ( core -> config , ""lines.to"" )"	74:1:2507:2547	1036312	1	True				
ANR	1036323	CallExpression	"r_config_bump ( core -> config , ""lines.to"" )"		1036312	0					
ANR	1036324	Callee	r_config_bump		1036312	0					
ANR	1036325	Identifier	r_config_bump		1036312	0					
ANR	1036326	ArgumentList	core -> config		1036312	1					
ANR	1036327	Argument	core -> config		1036312	0					
ANR	1036328	PtrMemberAccess	core -> config		1036312	0					
ANR	1036329	Identifier	core		1036312	0					
ANR	1036330	Identifier	config		1036312	1					
ANR	1036331	Argument	"""lines.to"""		1036312	1					
ANR	1036332	PrimaryExpression	"""lines.to"""		1036312	0					
ANR	1036333	ExpressionStatement	"from = r_config_get_i ( core -> config , ""lines.from"" )"	75:1:2550:2600	1036312	2	True				
ANR	1036334	AssignmentExpression	"from = r_config_get_i ( core -> config , ""lines.from"" )"		1036312	0		=			
ANR	1036335	Identifier	from		1036312	0					
ANR	1036336	CallExpression	"r_config_get_i ( core -> config , ""lines.from"" )"		1036312	1					
ANR	1036337	Callee	r_config_get_i		1036312	0					
ANR	1036338	Identifier	r_config_get_i		1036312	0					
ANR	1036339	ArgumentList	core -> config		1036312	1					
ANR	1036340	Argument	core -> config		1036312	0					
ANR	1036341	PtrMemberAccess	core -> config		1036312	0					
ANR	1036342	Identifier	core		1036312	0					
ANR	1036343	Identifier	config		1036312	1					
ANR	1036344	Argument	"""lines.from"""		1036312	1					
ANR	1036345	PrimaryExpression	"""lines.from"""		1036312	0					
ANR	1036346	ExpressionStatement	"to = r_config_get_i ( core -> config , ""lines.to"" )"	76:1:2603:2649	1036312	3	True				
ANR	1036347	AssignmentExpression	"to = r_config_get_i ( core -> config , ""lines.to"" )"		1036312	0		=			
ANR	1036348	Identifier	to		1036312	0					
ANR	1036349	CallExpression	"r_config_get_i ( core -> config , ""lines.to"" )"		1036312	1					
ANR	1036350	Callee	r_config_get_i		1036312	0					
ANR	1036351	Identifier	r_config_get_i		1036312	0					
ANR	1036352	ArgumentList	core -> config		1036312	1					
ANR	1036353	Argument	core -> config		1036312	0					
ANR	1036354	PtrMemberAccess	core -> config		1036312	0					
ANR	1036355	Identifier	core		1036312	0					
ANR	1036356	Identifier	config		1036312	1					
ANR	1036357	Argument	"""lines.to"""		1036312	1					
ANR	1036358	PrimaryExpression	"""lines.to"""		1036312	0					
ANR	1036359	IfStatement	"if ( r_core_lines_initcache ( core , from , to ) == - 1 )"		1036312	4					
ANR	1036360	Condition	"r_core_lines_initcache ( core , from , to ) == - 1"	77:5:2656:2700	1036312	0	True				
ANR	1036361	EqualityExpression	"r_core_lines_initcache ( core , from , to ) == - 1"		1036312	0		==			
ANR	1036362	CallExpression	"r_core_lines_initcache ( core , from , to )"		1036312	0					
ANR	1036363	Callee	r_core_lines_initcache		1036312	0					
ANR	1036364	Identifier	r_core_lines_initcache		1036312	0					
ANR	1036365	ArgumentList	core		1036312	1					
ANR	1036366	Argument	core		1036312	0					
ANR	1036367	Identifier	core		1036312	0					
ANR	1036368	Argument	from		1036312	1					
ANR	1036369	Identifier	from		1036312	0					
ANR	1036370	Argument	to		1036312	2					
ANR	1036371	Identifier	to		1036312	0					
ANR	1036372	UnaryOperationExpression	- 1		1036312	1					
ANR	1036373	UnaryOperator	-		1036312	0					
ANR	1036374	PrimaryExpression	1		1036312	1					
ANR	1036375	CompoundStatement		7:52:215:215	1036312	1					
ANR	1036376	ExpressionStatement	"eprintf ( ""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"" )"	78:2:2707:2771	1036312	0	True				
ANR	1036377	CallExpression	"eprintf ( ""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"" )"		1036312	0					
ANR	1036378	Callee	eprintf		1036312	0					
ANR	1036379	Identifier	eprintf		1036312	0					
ANR	1036380	ArgumentList	"""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"""		1036312	1					
ANR	1036381	Argument	"""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"""		1036312	0					
ANR	1036382	PrimaryExpression	"""ERROR: \\""lines.from\\"" and \\""lines.to\\"" must be set\\n"""		1036312	0					
ANR	1036383	ReturnType	static void		1036312	1					
ANR	1036384	Identifier	__init_seek_line		1036312	2					
ANR	1036385	ParameterList	RCore * core		1036312	3					
ANR	1036386	Parameter	RCore * core	71:29:2474:2484	1036312	0	True				
ANR	1036387	ParameterType	RCore *		1036312	0					
ANR	1036388	Identifier	core		1036312	1					
ANR	1036389	CFGEntryNode	ENTRY		1036312		True				
ANR	1036390	CFGExitNode	EXIT		1036312		True				
ANR	1036391	Symbol	core -> config		1036312						
ANR	1036392	Symbol	r_core_lines_initcache		1036312						
ANR	1036393	Symbol	core		1036312						
ANR	1036394	Symbol	r_config_get_i		1036312						
ANR	1036395	Symbol	* core		1036312						
ANR	1036396	Symbol	from		1036312						
ANR	1036397	Symbol	to		1036312						
ANR	1036398	Function	printPadded	82:0:2779:3008							
ANR	1036399	FunctionDef	"printPadded (RCore * core , int pad)"		1036398	0					
ANR	1036400	CompoundStatement		82:46:2825:3008	1036398	0					
ANR	1036401	IfStatement	if ( pad < 1 )		1036398	0					
ANR	1036402	Condition	pad < 1	83:5:2832:2838	1036398	0	True				
ANR	1036403	RelationalExpression	pad < 1		1036398	0		<			
ANR	1036404	Identifier	pad		1036398	0					
ANR	1036405	PrimaryExpression	1		1036398	1					
ANR	1036406	CompoundStatement		2:14:15:15	1036398	1					
ANR	1036407	ExpressionStatement	pad = 8	84:2:2845:2852	1036398	0	True				
ANR	1036408	AssignmentExpression	pad = 8		1036398	0		=			
ANR	1036409	Identifier	pad		1036398	0					
ANR	1036410	PrimaryExpression	8		1036398	1					
ANR	1036411	Statement	char	86:1:2858:2861	1036398	1	True				
ANR	1036412	Statement	*	86:6:2863:2863	1036398	2	True				
ANR	1036413	Statement	fmt	86:7:2864:2866	1036398	3	True				
ANR	1036414	Statement	=	86:11:2868:2868	1036398	4	True				
ANR	1036415	Statement	r_str_newf	86:13:2870:2879	1036398	5	True				
ANR	1036416	Statement	(	86:24:2881:2881	1036398	6	True				
ANR	1036417	Statement	"""0x%%0%d"""	86:25:2882:2890	1036398	7	True				
ANR	1036418	Statement	PFMT64x	86:35:2892:2898	1036398	8	True				
ANR	1036419	Statement	","	86:42:2899:2899	1036398	9	True				
ANR	1036420	Statement	pad	86:44:2901:2903	1036398	10	True				
ANR	1036421	Statement	)	86:47:2904:2904	1036398	11	True				
ANR	1036422	ExpressionStatement		86:48:2905:2905	1036398	12	True				
ANR	1036423	IdentifierDeclStatement	"char * off = r_str_newf ( fmt , core -> offset ) ;"	87:1:2908:2950	1036398	13	True				
ANR	1036424	IdentifierDecl	"* off = r_str_newf ( fmt , core -> offset )"		1036398	0					
ANR	1036425	IdentifierDeclType	char *		1036398	0					
ANR	1036426	Identifier	off		1036398	1					
ANR	1036427	AssignmentExpression	"* off = r_str_newf ( fmt , core -> offset )"		1036398	2		=			
ANR	1036428	Identifier	off		1036398	0					
ANR	1036429	CallExpression	"r_str_newf ( fmt , core -> offset )"		1036398	1					
ANR	1036430	Callee	r_str_newf		1036398	0					
ANR	1036431	Identifier	r_str_newf		1036398	0					
ANR	1036432	ArgumentList	fmt		1036398	1					
ANR	1036433	Argument	fmt		1036398	0					
ANR	1036434	Identifier	fmt		1036398	0					
ANR	1036435	Argument	core -> offset		1036398	1					
ANR	1036436	PtrMemberAccess	core -> offset		1036398	0					
ANR	1036437	Identifier	core		1036398	0					
ANR	1036438	Identifier	offset		1036398	1					
ANR	1036439	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , off )"	88:1:2953:2980	1036398	14	True				
ANR	1036440	CallExpression	"r_cons_printf ( ""%s\\n"" , off )"		1036398	0					
ANR	1036441	Callee	r_cons_printf		1036398	0					
ANR	1036442	Identifier	r_cons_printf		1036398	0					
ANR	1036443	ArgumentList	"""%s\\n"""		1036398	1					
ANR	1036444	Argument	"""%s\\n"""		1036398	0					
ANR	1036445	PrimaryExpression	"""%s\\n"""		1036398	0					
ANR	1036446	Argument	off		1036398	1					
ANR	1036447	Identifier	off		1036398	0					
ANR	1036448	ExpressionStatement	free ( off )	89:1:2983:2993	1036398	15	True				
ANR	1036449	CallExpression	free ( off )		1036398	0					
ANR	1036450	Callee	free		1036398	0					
ANR	1036451	Identifier	free		1036398	0					
ANR	1036452	ArgumentList	off		1036398	1					
ANR	1036453	Argument	off		1036398	0					
ANR	1036454	Identifier	off		1036398	0					
ANR	1036455	ExpressionStatement	free ( fmt )	90:1:2996:3006	1036398	16	True				
ANR	1036456	CallExpression	free ( fmt )		1036398	0					
ANR	1036457	Callee	free		1036398	0					
ANR	1036458	Identifier	free		1036398	0					
ANR	1036459	ArgumentList	fmt		1036398	1					
ANR	1036460	Argument	fmt		1036398	0					
ANR	1036461	Identifier	fmt		1036398	0					
ANR	1036462	ReturnType	static void		1036398	1					
ANR	1036463	Identifier	printPadded		1036398	2					
ANR	1036464	ParameterList	"RCore * core , int pad"		1036398	3					
ANR	1036465	Parameter	RCore * core	82:24:2803:2813	1036398	0	True				
ANR	1036466	ParameterType	RCore *		1036398	0					
ANR	1036467	Identifier	core		1036398	1					
ANR	1036468	Parameter	int pad	82:37:2816:2822	1036398	1	True				
ANR	1036469	ParameterType	int		1036398	0					
ANR	1036470	Identifier	pad		1036398	1					
ANR	1036471	CFGEntryNode	ENTRY		1036398		True				
ANR	1036472	CFGExitNode	EXIT		1036398		True				
ANR	1036473	Symbol	core		1036398						
ANR	1036474	Symbol	pad		1036398						
ANR	1036475	Symbol	* core		1036398						
ANR	1036476	Symbol	core -> offset		1036398						
ANR	1036477	Symbol	r_str_newf		1036398						
ANR	1036478	Symbol	fmt		1036398						
ANR	1036479	Symbol	off		1036398						
ANR	1036480	Function	__get_current_line	93:0:3011:3237							
ANR	1036481	FunctionDef	__get_current_line (RCore * core)		1036480	0					
ANR	1036482	CompoundStatement		93:44:3055:3237	1036480	0					
ANR	1036483	IfStatement	if ( core -> print -> lines_cache_sz > 0 )		1036480	0					
ANR	1036484	Condition	core -> print -> lines_cache_sz > 0	94:5:3062:3092	1036480	0	True				
ANR	1036485	RelationalExpression	core -> print -> lines_cache_sz > 0		1036480	0		>			
ANR	1036486	PtrMemberAccess	core -> print -> lines_cache_sz		1036480	0					
ANR	1036487	PtrMemberAccess	core -> print		1036480	0					
ANR	1036488	Identifier	core		1036480	0					
ANR	1036489	Identifier	print		1036480	1					
ANR	1036490	Identifier	lines_cache_sz		1036480	1					
ANR	1036491	PrimaryExpression	0		1036480	1					
ANR	1036492	CompoundStatement		3:2:43:144	1036480	1					
ANR	1036493	IdentifierDeclStatement	"int curr = r_util_lines_getline ( core -> print -> lines_cache , core -> print -> lines_cache_sz , core -> offset ) ;"	95:2:3099:3200	1036480	0	True				
ANR	1036494	IdentifierDecl	"curr = r_util_lines_getline ( core -> print -> lines_cache , core -> print -> lines_cache_sz , core -> offset )"		1036480	0					
ANR	1036495	IdentifierDeclType	int		1036480	0					
ANR	1036496	Identifier	curr		1036480	1					
ANR	1036497	AssignmentExpression	"curr = r_util_lines_getline ( core -> print -> lines_cache , core -> print -> lines_cache_sz , core -> offset )"		1036480	2		=			
ANR	1036498	Identifier	curr		1036480	0					
ANR	1036499	CallExpression	"r_util_lines_getline ( core -> print -> lines_cache , core -> print -> lines_cache_sz , core -> offset )"		1036480	1					
ANR	1036500	Callee	r_util_lines_getline		1036480	0					
ANR	1036501	Identifier	r_util_lines_getline		1036480	0					
ANR	1036502	ArgumentList	core -> print -> lines_cache		1036480	1					
ANR	1036503	Argument	core -> print -> lines_cache		1036480	0					
ANR	1036504	PtrMemberAccess	core -> print -> lines_cache		1036480	0					
ANR	1036505	PtrMemberAccess	core -> print		1036480	0					
ANR	1036506	Identifier	core		1036480	0					
ANR	1036507	Identifier	print		1036480	1					
ANR	1036508	Identifier	lines_cache		1036480	1					
ANR	1036509	Argument	core -> print -> lines_cache_sz		1036480	1					
ANR	1036510	PtrMemberAccess	core -> print -> lines_cache_sz		1036480	0					
ANR	1036511	PtrMemberAccess	core -> print		1036480	0					
ANR	1036512	Identifier	core		1036480	0					
ANR	1036513	Identifier	print		1036480	1					
ANR	1036514	Identifier	lines_cache_sz		1036480	1					
ANR	1036515	Argument	core -> offset		1036480	2					
ANR	1036516	PtrMemberAccess	core -> offset		1036480	0					
ANR	1036517	Identifier	core		1036480	0					
ANR	1036518	Identifier	offset		1036480	1					
ANR	1036519	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , curr )"	96:2:3204:3232	1036480	1	True				
ANR	1036520	CallExpression	"r_cons_printf ( ""%d\\n"" , curr )"		1036480	0					
ANR	1036521	Callee	r_cons_printf		1036480	0					
ANR	1036522	Identifier	r_cons_printf		1036480	0					
ANR	1036523	ArgumentList	"""%d\\n"""		1036480	1					
ANR	1036524	Argument	"""%d\\n"""		1036480	0					
ANR	1036525	PrimaryExpression	"""%d\\n"""		1036480	0					
ANR	1036526	Argument	curr		1036480	1					
ANR	1036527	Identifier	curr		1036480	0					
ANR	1036528	ReturnType	static void		1036480	1					
ANR	1036529	Identifier	__get_current_line		1036480	2					
ANR	1036530	ParameterList	RCore * core		1036480	3					
ANR	1036531	Parameter	RCore * core	93:31:3042:3052	1036480	0	True				
ANR	1036532	ParameterType	RCore *		1036480	0					
ANR	1036533	Identifier	core		1036480	1					
ANR	1036534	CFGEntryNode	ENTRY		1036480		True				
ANR	1036535	CFGExitNode	EXIT		1036480		True				
ANR	1036536	Symbol	core		1036480						
ANR	1036537	Symbol	* core -> print		1036480						
ANR	1036538	Symbol	core -> print -> lines_cache		1036480						
ANR	1036539	Symbol	* core		1036480						
ANR	1036540	Symbol	r_util_lines_getline		1036480						
ANR	1036541	Symbol	core -> offset		1036480						
ANR	1036542	Symbol	core -> print -> lines_cache_sz		1036480						
ANR	1036543	Symbol	core -> print		1036480						
ANR	1036544	Symbol	curr		1036480						
ANR	1036545	Symbol	* * core		1036480						
ANR	1036546	Function	__seek_line_absolute	100:0:3240:3530							
ANR	1036547	FunctionDef	"__seek_line_absolute (RCore * core , int numline)"		1036546	0					
ANR	1036548	CompoundStatement		100:59:3299:3530	1036546	0					
ANR	1036549	IfStatement	if ( numline < 1 || numline > core -> print -> lines_cache_sz - 1 )		1036546	0					
ANR	1036550	Condition	numline < 1 || numline > core -> print -> lines_cache_sz - 1	101:5:3306:3361	1036546	0	True				
ANR	1036551	OrExpression	numline < 1 || numline > core -> print -> lines_cache_sz - 1		1036546	0		||			
ANR	1036552	RelationalExpression	numline < 1		1036546	0		<			
ANR	1036553	Identifier	numline		1036546	0					
ANR	1036554	PrimaryExpression	1		1036546	1					
ANR	1036555	RelationalExpression	numline > core -> print -> lines_cache_sz - 1		1036546	1		>			
ANR	1036556	Identifier	numline		1036546	0					
ANR	1036557	AdditiveExpression	core -> print -> lines_cache_sz - 1		1036546	1		-			
ANR	1036558	PtrMemberAccess	core -> print -> lines_cache_sz		1036546	0					
ANR	1036559	PtrMemberAccess	core -> print		1036546	0					
ANR	1036560	Identifier	core		1036546	0					
ANR	1036561	Identifier	print		1036546	1					
ANR	1036562	Identifier	lines_cache_sz		1036546	1					
ANR	1036563	PrimaryExpression	1		1036546	1					
ANR	1036564	CompoundStatement		2:63:64:64	1036546	1					
ANR	1036565	ExpressionStatement	"eprintf ( ""ERROR: Line must be between 1 and %d\\n"" , core -> print -> lines_cache_sz - 1 )"	102:2:3368:3451	1036546	0	True				
ANR	1036566	CallExpression	"eprintf ( ""ERROR: Line must be between 1 and %d\\n"" , core -> print -> lines_cache_sz - 1 )"		1036546	0					
ANR	1036567	Callee	eprintf		1036546	0					
ANR	1036568	Identifier	eprintf		1036546	0					
ANR	1036569	ArgumentList	"""ERROR: Line must be between 1 and %d\\n"""		1036546	1					
ANR	1036570	Argument	"""ERROR: Line must be between 1 and %d\\n"""		1036546	0					
ANR	1036571	PrimaryExpression	"""ERROR: Line must be between 1 and %d\\n"""		1036546	0					
ANR	1036572	Argument	core -> print -> lines_cache_sz - 1		1036546	1					
ANR	1036573	AdditiveExpression	core -> print -> lines_cache_sz - 1		1036546	0		-			
ANR	1036574	PtrMemberAccess	core -> print -> lines_cache_sz		1036546	0					
ANR	1036575	PtrMemberAccess	core -> print		1036546	0					
ANR	1036576	Identifier	core		1036546	0					
ANR	1036577	Identifier	print		1036546	1					
ANR	1036578	Identifier	lines_cache_sz		1036546	1					
ANR	1036579	PrimaryExpression	1		1036546	1					
ANR	1036580	ElseStatement	else		1036546	0					
ANR	1036581	CompoundStatement		4:8:161:161	1036546	0					
ANR	1036582	ExpressionStatement	"r_core_seek ( core , core -> print -> lines_cache [ numline - 1 ] , 1 )"	104:2:3465:3525	1036546	0	True				
ANR	1036583	CallExpression	"r_core_seek ( core , core -> print -> lines_cache [ numline - 1 ] , 1 )"		1036546	0					
ANR	1036584	Callee	r_core_seek		1036546	0					
ANR	1036585	Identifier	r_core_seek		1036546	0					
ANR	1036586	ArgumentList	core		1036546	1					
ANR	1036587	Argument	core		1036546	0					
ANR	1036588	Identifier	core		1036546	0					
ANR	1036589	Argument	core -> print -> lines_cache [ numline - 1 ]		1036546	1					
ANR	1036590	ArrayIndexing	core -> print -> lines_cache [ numline - 1 ]		1036546	0					
ANR	1036591	PtrMemberAccess	core -> print -> lines_cache		1036546	0					
ANR	1036592	PtrMemberAccess	core -> print		1036546	0					
ANR	1036593	Identifier	core		1036546	0					
ANR	1036594	Identifier	print		1036546	1					
ANR	1036595	Identifier	lines_cache		1036546	1					
ANR	1036596	AdditiveExpression	numline - 1		1036546	1		-			
ANR	1036597	Identifier	numline		1036546	0					
ANR	1036598	PrimaryExpression	1		1036546	1					
ANR	1036599	Argument	1		1036546	2					
ANR	1036600	PrimaryExpression	1		1036546	0					
ANR	1036601	ReturnType	static void		1036546	1					
ANR	1036602	Identifier	__seek_line_absolute		1036546	2					
ANR	1036603	ParameterList	"RCore * core , int numline"		1036546	3					
ANR	1036604	Parameter	RCore * core	100:33:3273:3283	1036546	0	True				
ANR	1036605	ParameterType	RCore *		1036546	0					
ANR	1036606	Identifier	core		1036546	1					
ANR	1036607	Parameter	int numline	100:46:3286:3296	1036546	1	True				
ANR	1036608	ParameterType	int		1036546	0					
ANR	1036609	Identifier	numline		1036546	1					
ANR	1036610	CFGEntryNode	ENTRY		1036546		True				
ANR	1036611	CFGExitNode	EXIT		1036546		True				
ANR	1036612	Symbol	core		1036546						
ANR	1036613	Symbol	* * * core		1036546						
ANR	1036614	Symbol	* core -> print		1036546						
ANR	1036615	Symbol	* numline		1036546						
ANR	1036616	Symbol	* * core -> print		1036546						
ANR	1036617	Symbol	core -> print -> lines_cache		1036546						
ANR	1036618	Symbol	* core		1036546						
ANR	1036619	Symbol	* core -> print -> lines_cache		1036546						
ANR	1036620	Symbol	core -> print -> lines_cache_sz		1036546						
ANR	1036621	Symbol	core -> print		1036546						
ANR	1036622	Symbol	numline		1036546						
ANR	1036623	Symbol	* * core		1036546						
ANR	1036624	Function	__seek_line_relative	108:0:3533:4026							
ANR	1036625	FunctionDef	"__seek_line_relative (RCore * core , int numlines)"		1036624	0					
ANR	1036626	CompoundStatement		108:60:3593:4026	1036624	0					
ANR	1036627	IdentifierDeclStatement	"int curr = r_util_lines_getline ( core -> print -> lines_cache , core -> print -> lines_cache_sz , core -> offset ) ;"	109:1:3596:3697	1036624	0	True				
ANR	1036628	IdentifierDecl	"curr = r_util_lines_getline ( core -> print -> lines_cache , core -> print -> lines_cache_sz , core -> offset )"		1036624	0					
ANR	1036629	IdentifierDeclType	int		1036624	0					
ANR	1036630	Identifier	curr		1036624	1					
ANR	1036631	AssignmentExpression	"curr = r_util_lines_getline ( core -> print -> lines_cache , core -> print -> lines_cache_sz , core -> offset )"		1036624	2		=			
ANR	1036632	Identifier	curr		1036624	0					
ANR	1036633	CallExpression	"r_util_lines_getline ( core -> print -> lines_cache , core -> print -> lines_cache_sz , core -> offset )"		1036624	1					
ANR	1036634	Callee	r_util_lines_getline		1036624	0					
ANR	1036635	Identifier	r_util_lines_getline		1036624	0					
ANR	1036636	ArgumentList	core -> print -> lines_cache		1036624	1					
ANR	1036637	Argument	core -> print -> lines_cache		1036624	0					
ANR	1036638	PtrMemberAccess	core -> print -> lines_cache		1036624	0					
ANR	1036639	PtrMemberAccess	core -> print		1036624	0					
ANR	1036640	Identifier	core		1036624	0					
ANR	1036641	Identifier	print		1036624	1					
ANR	1036642	Identifier	lines_cache		1036624	1					
ANR	1036643	Argument	core -> print -> lines_cache_sz		1036624	1					
ANR	1036644	PtrMemberAccess	core -> print -> lines_cache_sz		1036624	0					
ANR	1036645	PtrMemberAccess	core -> print		1036624	0					
ANR	1036646	Identifier	core		1036624	0					
ANR	1036647	Identifier	print		1036624	1					
ANR	1036648	Identifier	lines_cache_sz		1036624	1					
ANR	1036649	Argument	core -> offset		1036624	2					
ANR	1036650	PtrMemberAccess	core -> offset		1036624	0					
ANR	1036651	Identifier	core		1036624	0					
ANR	1036652	Identifier	offset		1036624	1					
ANR	1036653	IfStatement	if ( numlines > 0 && curr + numlines >= core -> print -> lines_cache_sz - 1 )		1036624	1					
ANR	1036654	Condition	numlines > 0 && curr + numlines >= core -> print -> lines_cache_sz - 1	110:5:3704:3769	1036624	0	True				
ANR	1036655	AndExpression	numlines > 0 && curr + numlines >= core -> print -> lines_cache_sz - 1		1036624	0		&&			
ANR	1036656	RelationalExpression	numlines > 0		1036624	0		>			
ANR	1036657	Identifier	numlines		1036624	0					
ANR	1036658	PrimaryExpression	0		1036624	1					
ANR	1036659	RelationalExpression	curr + numlines >= core -> print -> lines_cache_sz - 1		1036624	1		>=			
ANR	1036660	AdditiveExpression	curr + numlines		1036624	0		+			
ANR	1036661	Identifier	curr		1036624	0					
ANR	1036662	Identifier	numlines		1036624	1					
ANR	1036663	AdditiveExpression	core -> print -> lines_cache_sz - 1		1036624	1		-			
ANR	1036664	PtrMemberAccess	core -> print -> lines_cache_sz		1036624	0					
ANR	1036665	PtrMemberAccess	core -> print		1036624	0					
ANR	1036666	Identifier	core		1036624	0					
ANR	1036667	Identifier	print		1036624	1					
ANR	1036668	Identifier	lines_cache_sz		1036624	1					
ANR	1036669	PrimaryExpression	1		1036624	1					
ANR	1036670	CompoundStatement		3:73:178:178	1036624	1					
ANR	1036671	ExpressionStatement	"eprintf ( ""ERROR: Line must be < %d\\n"" , core -> print -> lines_cache_sz - 1 )"	111:2:3776:3847	1036624	0	True				
ANR	1036672	CallExpression	"eprintf ( ""ERROR: Line must be < %d\\n"" , core -> print -> lines_cache_sz - 1 )"		1036624	0					
ANR	1036673	Callee	eprintf		1036624	0					
ANR	1036674	Identifier	eprintf		1036624	0					
ANR	1036675	ArgumentList	"""ERROR: Line must be < %d\\n"""		1036624	1					
ANR	1036676	Argument	"""ERROR: Line must be < %d\\n"""		1036624	0					
ANR	1036677	PrimaryExpression	"""ERROR: Line must be < %d\\n"""		1036624	0					
ANR	1036678	Argument	core -> print -> lines_cache_sz - 1		1036624	1					
ANR	1036679	AdditiveExpression	core -> print -> lines_cache_sz - 1		1036624	0		-			
ANR	1036680	PtrMemberAccess	core -> print -> lines_cache_sz		1036624	0					
ANR	1036681	PtrMemberAccess	core -> print		1036624	0					
ANR	1036682	Identifier	core		1036624	0					
ANR	1036683	Identifier	print		1036624	1					
ANR	1036684	Identifier	lines_cache_sz		1036624	1					
ANR	1036685	PrimaryExpression	1		1036624	1					
ANR	1036686	ElseStatement	else		1036624	0					
ANR	1036687	IfStatement	if ( numlines < 0 && curr + numlines < 1 )		1036624	0					
ANR	1036688	Condition	numlines < 0 && curr + numlines < 1	112:12:3861:3895	1036624	0	True				
ANR	1036689	AndExpression	numlines < 0 && curr + numlines < 1		1036624	0		&&			
ANR	1036690	RelationalExpression	numlines < 0		1036624	0		<			
ANR	1036691	Identifier	numlines		1036624	0					
ANR	1036692	PrimaryExpression	0		1036624	1					
ANR	1036693	RelationalExpression	curr + numlines < 1		1036624	1		<			
ANR	1036694	AdditiveExpression	curr + numlines		1036624	0		+			
ANR	1036695	Identifier	curr		1036624	0					
ANR	1036696	Identifier	numlines		1036624	1					
ANR	1036697	PrimaryExpression	1		1036624	1					
ANR	1036698	CompoundStatement		5:49:304:304	1036624	1					
ANR	1036699	ExpressionStatement	"eprintf ( ""ERROR: Line must be > 1\\n"" )"	113:2:3902:3939	1036624	0	True				
ANR	1036700	CallExpression	"eprintf ( ""ERROR: Line must be > 1\\n"" )"		1036624	0					
ANR	1036701	Callee	eprintf		1036624	0					
ANR	1036702	Identifier	eprintf		1036624	0					
ANR	1036703	ArgumentList	"""ERROR: Line must be > 1\\n"""		1036624	1					
ANR	1036704	Argument	"""ERROR: Line must be > 1\\n"""		1036624	0					
ANR	1036705	PrimaryExpression	"""ERROR: Line must be > 1\\n"""		1036624	0					
ANR	1036706	ElseStatement	else		1036624	0					
ANR	1036707	CompoundStatement		7:8:355:355	1036624	0					
ANR	1036708	ExpressionStatement	"r_core_seek ( core , core -> print -> lines_cache [ curr + numlines - 1 ] , 1 )"	115:2:3953:4021	1036624	0	True				
ANR	1036709	CallExpression	"r_core_seek ( core , core -> print -> lines_cache [ curr + numlines - 1 ] , 1 )"		1036624	0					
ANR	1036710	Callee	r_core_seek		1036624	0					
ANR	1036711	Identifier	r_core_seek		1036624	0					
ANR	1036712	ArgumentList	core		1036624	1					
ANR	1036713	Argument	core		1036624	0					
ANR	1036714	Identifier	core		1036624	0					
ANR	1036715	Argument	core -> print -> lines_cache [ curr + numlines - 1 ]		1036624	1					
ANR	1036716	ArrayIndexing	core -> print -> lines_cache [ curr + numlines - 1 ]		1036624	0					
ANR	1036717	PtrMemberAccess	core -> print -> lines_cache		1036624	0					
ANR	1036718	PtrMemberAccess	core -> print		1036624	0					
ANR	1036719	Identifier	core		1036624	0					
ANR	1036720	Identifier	print		1036624	1					
ANR	1036721	Identifier	lines_cache		1036624	1					
ANR	1036722	AdditiveExpression	curr + numlines - 1		1036624	1		+			
ANR	1036723	Identifier	curr		1036624	0					
ANR	1036724	AdditiveExpression	numlines - 1		1036624	1		-			
ANR	1036725	Identifier	numlines		1036624	0					
ANR	1036726	PrimaryExpression	1		1036624	1					
ANR	1036727	Argument	1		1036624	2					
ANR	1036728	PrimaryExpression	1		1036624	0					
ANR	1036729	ReturnType	static void		1036624	1					
ANR	1036730	Identifier	__seek_line_relative		1036624	2					
ANR	1036731	ParameterList	"RCore * core , int numlines"		1036624	3					
ANR	1036732	Parameter	RCore * core	108:33:3566:3576	1036624	0	True				
ANR	1036733	ParameterType	RCore *		1036624	0					
ANR	1036734	Identifier	core		1036624	1					
ANR	1036735	Parameter	int numlines	108:46:3579:3590	1036624	1	True				
ANR	1036736	ParameterType	int		1036624	0					
ANR	1036737	Identifier	numlines		1036624	1					
ANR	1036738	CFGEntryNode	ENTRY		1036624		True				
ANR	1036739	CFGExitNode	EXIT		1036624		True				
ANR	1036740	Symbol	numlines		1036624						
ANR	1036741	Symbol	* * core -> print		1036624						
ANR	1036742	Symbol	core -> print -> lines_cache		1036624						
ANR	1036743	Symbol	* core		1036624						
ANR	1036744	Symbol	core -> offset		1036624						
ANR	1036745	Symbol	* core -> print -> lines_cache		1036624						
ANR	1036746	Symbol	core		1036624						
ANR	1036747	Symbol	* * * core		1036624						
ANR	1036748	Symbol	* core -> print		1036624						
ANR	1036749	Symbol	* curr		1036624						
ANR	1036750	Symbol	* numlines		1036624						
ANR	1036751	Symbol	r_util_lines_getline		1036624						
ANR	1036752	Symbol	core -> print -> lines_cache_sz		1036624						
ANR	1036753	Symbol	core -> print		1036624						
ANR	1036754	Symbol	curr		1036624						
ANR	1036755	Symbol	* * core		1036624						
ANR	1036756	Function	__clean_lines_cache	119:0:4029:4147							
ANR	1036757	FunctionDef	__clean_lines_cache (RCore * core)		1036756	0					
ANR	1036758	CompoundStatement		119:45:4074:4147	1036756	0					
ANR	1036759	ExpressionStatement	core -> print -> lines_cache_sz = - 1	120:1:4077:4109	1036756	0	True				
ANR	1036760	AssignmentExpression	core -> print -> lines_cache_sz = - 1		1036756	0		=			
ANR	1036761	PtrMemberAccess	core -> print -> lines_cache_sz		1036756	0					
ANR	1036762	PtrMemberAccess	core -> print		1036756	0					
ANR	1036763	Identifier	core		1036756	0					
ANR	1036764	Identifier	print		1036756	1					
ANR	1036765	Identifier	lines_cache_sz		1036756	1					
ANR	1036766	UnaryOperationExpression	- 1		1036756	1					
ANR	1036767	UnaryOperator	-		1036756	0					
ANR	1036768	PrimaryExpression	1		1036756	1					
ANR	1036769	ExpressionStatement	R_FREE ( core -> print -> lines_cache )	121:1:4112:4145	1036756	1	True				
ANR	1036770	CallExpression	R_FREE ( core -> print -> lines_cache )		1036756	0					
ANR	1036771	Callee	R_FREE		1036756	0					
ANR	1036772	Identifier	R_FREE		1036756	0					
ANR	1036773	ArgumentList	core -> print -> lines_cache		1036756	1					
ANR	1036774	Argument	core -> print -> lines_cache		1036756	0					
ANR	1036775	PtrMemberAccess	core -> print -> lines_cache		1036756	0					
ANR	1036776	PtrMemberAccess	core -> print		1036756	0					
ANR	1036777	Identifier	core		1036756	0					
ANR	1036778	Identifier	print		1036756	1					
ANR	1036779	Identifier	lines_cache		1036756	1					
ANR	1036780	ReturnType	static void		1036756	1					
ANR	1036781	Identifier	__clean_lines_cache		1036756	2					
ANR	1036782	ParameterList	RCore * core		1036756	3					
ANR	1036783	Parameter	RCore * core	119:32:4061:4071	1036756	0	True				
ANR	1036784	ParameterType	RCore *		1036756	0					
ANR	1036785	Identifier	core		1036756	1					
ANR	1036786	CFGEntryNode	ENTRY		1036756		True				
ANR	1036787	CFGExitNode	EXIT		1036756		True				
ANR	1036788	Symbol	core		1036756						
ANR	1036789	Symbol	* core -> print		1036756						
ANR	1036790	Symbol	core -> print -> lines_cache		1036756						
ANR	1036791	Symbol	* core		1036756						
ANR	1036792	Symbol	core -> print -> lines_cache_sz		1036756						
ANR	1036793	Symbol	core -> print		1036756						
ANR	1036794	Symbol	* * core		1036756						
ANR	1036795	Function	r_core_lines_currline	124:0:4150:4557							
ANR	1036796	FunctionDef	r_core_lines_currline (RCore * core)		1036795	0					
ANR	1036797	CompoundStatement		124:45:4195:4557	1036795	0					
ANR	1036798	IdentifierDeclStatement	int imin = 0 ;	125:1:4219:4231	1036795	0	True				
ANR	1036799	IdentifierDecl	imin = 0		1036795	0					
ANR	1036800	IdentifierDeclType	int		1036795	0					
ANR	1036801	Identifier	imin		1036795	1					
ANR	1036802	AssignmentExpression	imin = 0		1036795	2		=			
ANR	1036803	Identifier	imin		1036795	0					
ANR	1036804	PrimaryExpression	0		1036795	1					
ANR	1036805	IdentifierDeclStatement	int imax = core -> print -> lines_cache_sz ;	126:1:4234:4272	1036795	1	True				
ANR	1036806	IdentifierDecl	imax = core -> print -> lines_cache_sz		1036795	0					
ANR	1036807	IdentifierDeclType	int		1036795	0					
ANR	1036808	Identifier	imax		1036795	1					
ANR	1036809	AssignmentExpression	imax = core -> print -> lines_cache_sz		1036795	2		=			
ANR	1036810	Identifier	imax		1036795	0					
ANR	1036811	PtrMemberAccess	core -> print -> lines_cache_sz		1036795	1					
ANR	1036812	PtrMemberAccess	core -> print		1036795	0					
ANR	1036813	Identifier	core		1036795	0					
ANR	1036814	Identifier	print		1036795	1					
ANR	1036815	Identifier	lines_cache_sz		1036795	1					
ANR	1036816	IdentifierDeclStatement	int imid = 0 ;	127:1:4275:4287	1036795	2	True				
ANR	1036817	IdentifierDecl	imid = 0		1036795	0					
ANR	1036818	IdentifierDeclType	int		1036795	0					
ANR	1036819	Identifier	imid		1036795	1					
ANR	1036820	AssignmentExpression	imid = 0		1036795	2		=			
ANR	1036821	Identifier	imid		1036795	0					
ANR	1036822	PrimaryExpression	0		1036795	1					
ANR	1036823	WhileStatement	while ( imin <= imax )		1036795	3					
ANR	1036824	Condition	imin <= imax	129:8:4298:4309	1036795	0	True				
ANR	1036825	RelationalExpression	imin <= imax		1036795	0		<=			
ANR	1036826	Identifier	imin		1036795	0					
ANR	1036827	Identifier	imax		1036795	1					
ANR	1036828	CompoundStatement		6:22:116:116	1036795	1					
ANR	1036829	ExpressionStatement	imid = imin + ( ( imax - imin ) / 2 )	130:2:4316:4349	1036795	0	True				
ANR	1036830	AssignmentExpression	imid = imin + ( ( imax - imin ) / 2 )		1036795	0		=			
ANR	1036831	Identifier	imid		1036795	0					
ANR	1036832	AdditiveExpression	imin + ( ( imax - imin ) / 2 )		1036795	1		+			
ANR	1036833	Identifier	imin		1036795	0					
ANR	1036834	MultiplicativeExpression	( imax - imin ) / 2		1036795	1		/			
ANR	1036835	AdditiveExpression	imax - imin		1036795	0		-			
ANR	1036836	Identifier	imax		1036795	0					
ANR	1036837	Identifier	imin		1036795	1					
ANR	1036838	PrimaryExpression	2		1036795	1					
ANR	1036839	IfStatement	if ( core -> print -> lines_cache [ imid ] == core -> offset )		1036795	1					
ANR	1036840	Condition	core -> print -> lines_cache [ imid ] == core -> offset	131:6:4357:4402	1036795	0	True				
ANR	1036841	EqualityExpression	core -> print -> lines_cache [ imid ] == core -> offset		1036795	0		==			
ANR	1036842	ArrayIndexing	core -> print -> lines_cache [ imid ]		1036795	0					
ANR	1036843	PtrMemberAccess	core -> print -> lines_cache		1036795	0					
ANR	1036844	PtrMemberAccess	core -> print		1036795	0					
ANR	1036845	Identifier	core		1036795	0					
ANR	1036846	Identifier	print		1036795	1					
ANR	1036847	Identifier	lines_cache		1036795	1					
ANR	1036848	Identifier	imid		1036795	1					
ANR	1036849	PtrMemberAccess	core -> offset		1036795	1					
ANR	1036850	Identifier	core		1036795	0					
ANR	1036851	Identifier	offset		1036795	1					
ANR	1036852	CompoundStatement		8:54:209:209	1036795	1					
ANR	1036853	ReturnStatement	return imid ;	132:3:4410:4421	1036795	0	True				
ANR	1036854	Identifier	imid		1036795	0					
ANR	1036855	ElseStatement	else		1036795	0					
ANR	1036856	IfStatement	if ( core -> print -> lines_cache [ imid ] < core -> offset )		1036795	0					
ANR	1036857	Condition	core -> print -> lines_cache [ imid ] < core -> offset	133:13:4436:4480	1036795	0	True				
ANR	1036858	RelationalExpression	core -> print -> lines_cache [ imid ] < core -> offset		1036795	0		<			
ANR	1036859	ArrayIndexing	core -> print -> lines_cache [ imid ]		1036795	0					
ANR	1036860	PtrMemberAccess	core -> print -> lines_cache		1036795	0					
ANR	1036861	PtrMemberAccess	core -> print		1036795	0					
ANR	1036862	Identifier	core		1036795	0					
ANR	1036863	Identifier	print		1036795	1					
ANR	1036864	Identifier	lines_cache		1036795	1					
ANR	1036865	Identifier	imid		1036795	1					
ANR	1036866	PtrMemberAccess	core -> offset		1036795	1					
ANR	1036867	Identifier	core		1036795	0					
ANR	1036868	Identifier	offset		1036795	1					
ANR	1036869	CompoundStatement		10:60:287:287	1036795	1					
ANR	1036870	ExpressionStatement	imin = imid + 1	134:3:4488:4503	1036795	0	True				
ANR	1036871	AssignmentExpression	imin = imid + 1		1036795	0		=			
ANR	1036872	Identifier	imin		1036795	0					
ANR	1036873	AdditiveExpression	imid + 1		1036795	1		+			
ANR	1036874	Identifier	imid		1036795	0					
ANR	1036875	PrimaryExpression	1		1036795	1					
ANR	1036876	ElseStatement	else		1036795	0					
ANR	1036877	CompoundStatement		12:9:318:318	1036795	0					
ANR	1036878	ExpressionStatement	imax = imid - 1	136:3:4519:4534	1036795	0	True				
ANR	1036879	AssignmentExpression	imax = imid - 1		1036795	0		=			
ANR	1036880	Identifier	imax		1036795	0					
ANR	1036881	AdditiveExpression	imid - 1		1036795	1		-			
ANR	1036882	Identifier	imid		1036795	0					
ANR	1036883	PrimaryExpression	1		1036795	1					
ANR	1036884	ReturnStatement	return imin ;	139:1:4544:4555	1036795	4	True				
ANR	1036885	Identifier	imin		1036795	0					
ANR	1036886	ReturnType	R_API int		1036795	1					
ANR	1036887	Identifier	r_core_lines_currline		1036795	2					
ANR	1036888	ParameterList	RCore * core		1036795	3					
ANR	1036889	Parameter	RCore * core	124:32:4182:4192	1036795	0	True				
ANR	1036890	ParameterType	RCore *		1036795	0					
ANR	1036891	Identifier	core		1036795	1					
ANR	1036892	CFGEntryNode	ENTRY		1036795		True				
ANR	1036893	CFGExitNode	EXIT		1036795		True				
ANR	1036894	Symbol	* * core -> print		1036795						
ANR	1036895	Symbol	core -> print -> lines_cache		1036795						
ANR	1036896	Symbol	* core		1036795						
ANR	1036897	Symbol	core -> offset		1036795						
ANR	1036898	Symbol	* core -> print -> lines_cache		1036795						
ANR	1036899	Symbol	imax		1036795						
ANR	1036900	Symbol	* imid		1036795						
ANR	1036901	Symbol	imid		1036795						
ANR	1036902	Symbol	core		1036795						
ANR	1036903	Symbol	* * * core		1036795						
ANR	1036904	Symbol	* core -> print		1036795						
ANR	1036905	Symbol	imin		1036795						
ANR	1036906	Symbol	core -> print -> lines_cache_sz		1036795						
ANR	1036907	Symbol	core -> print		1036795						
ANR	1036908	Symbol	* * core		1036795						
ANR	1036909	Function	r_core_lines_initcache	142:0:4560:5883							
ANR	1036910	FunctionDef	"r_core_lines_initcache (RCore * core , ut64 start_addr , ut64 end_addr)"		1036909	0					
ANR	1036911	CompoundStatement		142:78:4638:5883	1036909	0					
ANR	1036912	IdentifierDeclStatement	"int i , bsz = core -> blocksize ;"	143:1:4641:4669	1036909	0	True				
ANR	1036913	IdentifierDecl	i		1036909	0					
ANR	1036914	IdentifierDeclType	int		1036909	0					
ANR	1036915	Identifier	i		1036909	1					
ANR	1036916	IdentifierDecl	bsz = core -> blocksize		1036909	1					
ANR	1036917	IdentifierDeclType	int		1036909	0					
ANR	1036918	Identifier	bsz		1036909	1					
ANR	1036919	AssignmentExpression	bsz = core -> blocksize		1036909	2		=			
ANR	1036920	Identifier	bsz		1036909	0					
ANR	1036921	PtrMemberAccess	core -> blocksize		1036909	1					
ANR	1036922	Identifier	core		1036909	0					
ANR	1036923	Identifier	blocksize		1036909	1					
ANR	1036924	IdentifierDeclStatement	ut64 off = start_addr ;	144:1:4672:4693	1036909	1	True				
ANR	1036925	IdentifierDecl	off = start_addr		1036909	0					
ANR	1036926	IdentifierDeclType	ut64		1036909	0					
ANR	1036927	Identifier	off		1036909	1					
ANR	1036928	AssignmentExpression	off = start_addr		1036909	2		=			
ANR	1036929	Identifier	start_addr		1036909	0					
ANR	1036930	Identifier	start_addr		1036909	1					
ANR	1036931	IdentifierDeclStatement	ut64 baddr ;	145:1:4696:4706	1036909	2	True				
ANR	1036932	IdentifierDecl	baddr		1036909	0					
ANR	1036933	IdentifierDeclType	ut64		1036909	0					
ANR	1036934	Identifier	baddr		1036909	1					
ANR	1036935	IfStatement	if ( start_addr == UT64_MAX || end_addr == UT64_MAX )		1036909	3					
ANR	1036936	Condition	start_addr == UT64_MAX || end_addr == UT64_MAX	146:5:4713:4758	1036909	0	True				
ANR	1036937	OrExpression	start_addr == UT64_MAX || end_addr == UT64_MAX		1036909	0		||			
ANR	1036938	EqualityExpression	start_addr == UT64_MAX		1036909	0		==			
ANR	1036939	Identifier	start_addr		1036909	0					
ANR	1036940	Identifier	UT64_MAX		1036909	1					
ANR	1036941	EqualityExpression	end_addr == UT64_MAX		1036909	1		==			
ANR	1036942	Identifier	end_addr		1036909	0					
ANR	1036943	Identifier	UT64_MAX		1036909	1					
ANR	1036944	CompoundStatement		5:53:122:122	1036909	1					
ANR	1036945	ReturnStatement	return - 1 ;	147:2:4765:4774	1036909	0	True				
ANR	1036946	UnaryOperationExpression	- 1		1036909	0					
ANR	1036947	UnaryOperator	-		1036909	0					
ANR	1036948	PrimaryExpression	1		1036909	1					
ANR	1036949	ExpressionStatement	free ( core -> print -> lines_cache )	150:1:4781:4812	1036909	4	True				
ANR	1036950	CallExpression	free ( core -> print -> lines_cache )		1036909	0					
ANR	1036951	Callee	free		1036909	0					
ANR	1036952	Identifier	free		1036909	0					
ANR	1036953	ArgumentList	core -> print -> lines_cache		1036909	1					
ANR	1036954	Argument	core -> print -> lines_cache		1036909	0					
ANR	1036955	PtrMemberAccess	core -> print -> lines_cache		1036909	0					
ANR	1036956	PtrMemberAccess	core -> print		1036909	0					
ANR	1036957	Identifier	core		1036909	0					
ANR	1036958	Identifier	print		1036909	1					
ANR	1036959	Identifier	lines_cache		1036909	1					
ANR	1036960	ExpressionStatement	"core -> print -> lines_cache = R_NEWS0 ( ut64 , bsz )"	151:1:4815:4861	1036909	5	True				
ANR	1036961	AssignmentExpression	"core -> print -> lines_cache = R_NEWS0 ( ut64 , bsz )"		1036909	0		=			
ANR	1036962	PtrMemberAccess	core -> print -> lines_cache		1036909	0					
ANR	1036963	PtrMemberAccess	core -> print		1036909	0					
ANR	1036964	Identifier	core		1036909	0					
ANR	1036965	Identifier	print		1036909	1					
ANR	1036966	Identifier	lines_cache		1036909	1					
ANR	1036967	CallExpression	"R_NEWS0 ( ut64 , bsz )"		1036909	1					
ANR	1036968	Callee	R_NEWS0		1036909	0					
ANR	1036969	Identifier	R_NEWS0		1036909	0					
ANR	1036970	ArgumentList	ut64		1036909	1					
ANR	1036971	Argument	ut64		1036909	0					
ANR	1036972	Identifier	ut64		1036909	0					
ANR	1036973	Argument	bsz		1036909	1					
ANR	1036974	Identifier	bsz		1036909	0					
ANR	1036975	IfStatement	if ( ! core -> print -> lines_cache )		1036909	6					
ANR	1036976	Condition	! core -> print -> lines_cache	152:5:4868:4892	1036909	0	True				
ANR	1036977	UnaryOperationExpression	! core -> print -> lines_cache		1036909	0					
ANR	1036978	UnaryOperator	!		1036909	0					
ANR	1036979	PtrMemberAccess	core -> print -> lines_cache		1036909	1					
ANR	1036980	PtrMemberAccess	core -> print		1036909	0					
ANR	1036981	Identifier	core		1036909	0					
ANR	1036982	Identifier	print		1036909	1					
ANR	1036983	Identifier	lines_cache		1036909	1					
ANR	1036984	CompoundStatement		11:32:256:256	1036909	1					
ANR	1036985	ReturnStatement	return - 1 ;	153:2:4899:4908	1036909	0	True				
ANR	1036986	UnaryOperationExpression	- 1		1036909	0					
ANR	1036987	UnaryOperator	-		1036909	0					
ANR	1036988	PrimaryExpression	1		1036909	1					
ANR	1036989	ExpressionStatement	"baddr = r_config_get_i ( core -> config , ""bin.baddr"" )"	156:1:4915:4965	1036909	7	True				
ANR	1036990	AssignmentExpression	"baddr = r_config_get_i ( core -> config , ""bin.baddr"" )"		1036909	0		=			
ANR	1036991	Identifier	baddr		1036909	0					
ANR	1036992	CallExpression	"r_config_get_i ( core -> config , ""bin.baddr"" )"		1036909	1					
ANR	1036993	Callee	r_config_get_i		1036909	0					
ANR	1036994	Identifier	r_config_get_i		1036909	0					
ANR	1036995	ArgumentList	core -> config		1036909	1					
ANR	1036996	Argument	core -> config		1036909	0					
ANR	1036997	PtrMemberAccess	core -> config		1036909	0					
ANR	1036998	Identifier	core		1036909	0					
ANR	1036999	Identifier	config		1036909	1					
ANR	1037000	Argument	"""bin.baddr"""		1036909	1					
ANR	1037001	PrimaryExpression	"""bin.baddr"""		1036909	0					
ANR	1037002	IdentifierDeclStatement	int line_count = start_addr ? 0 : 1 ;	158:1:4969:5002	1036909	8	True				
ANR	1037003	IdentifierDecl	line_count = start_addr ? 0 : 1		1036909	0					
ANR	1037004	IdentifierDeclType	int		1036909	0					
ANR	1037005	Identifier	line_count		1036909	1					
ANR	1037006	AssignmentExpression	line_count = start_addr ? 0 : 1		1036909	2		=			
ANR	1037007	Identifier	line_count		1036909	0					
ANR	1037008	ConditionalExpression	start_addr ? 0 : 1		1036909	1					
ANR	1037009	Condition	start_addr		1036909	0					
ANR	1037010	Identifier	start_addr		1036909	0					
ANR	1037011	PrimaryExpression	0		1036909	1					
ANR	1037012	PrimaryExpression	1		1036909	2					
ANR	1037013	ExpressionStatement	core -> print -> lines_cache [ 0 ] = start_addr ? 0 : baddr	159:1:5005:5055	1036909	9	True				
ANR	1037014	AssignmentExpression	core -> print -> lines_cache [ 0 ] = start_addr ? 0 : baddr		1036909	0		=			
ANR	1037015	ArrayIndexing	core -> print -> lines_cache [ 0 ]		1036909	0					
ANR	1037016	PtrMemberAccess	core -> print -> lines_cache		1036909	0					
ANR	1037017	PtrMemberAccess	core -> print		1036909	0					
ANR	1037018	Identifier	core		1036909	0					
ANR	1037019	Identifier	print		1036909	1					
ANR	1037020	Identifier	lines_cache		1036909	1					
ANR	1037021	PrimaryExpression	0		1036909	1					
ANR	1037022	ConditionalExpression	start_addr ? 0 : baddr		1036909	1					
ANR	1037023	Condition	start_addr		1036909	0					
ANR	1037024	Identifier	start_addr		1036909	0					
ANR	1037025	PrimaryExpression	0		1036909	1					
ANR	1037026	Identifier	baddr		1036909	2					
ANR	1037027	IdentifierDeclStatement	char * buf = malloc ( bsz ) ;	160:1:5058:5082	1036909	10	True				
ANR	1037028	IdentifierDecl	* buf = malloc ( bsz )		1036909	0					
ANR	1037029	IdentifierDeclType	char *		1036909	0					
ANR	1037030	Identifier	buf		1036909	1					
ANR	1037031	AssignmentExpression	* buf = malloc ( bsz )		1036909	2		=			
ANR	1037032	Identifier	buf		1036909	0					
ANR	1037033	CallExpression	malloc ( bsz )		1036909	1					
ANR	1037034	Callee	malloc		1036909	0					
ANR	1037035	Identifier	malloc		1036909	0					
ANR	1037036	ArgumentList	bsz		1036909	1					
ANR	1037037	Argument	bsz		1036909	0					
ANR	1037038	Identifier	bsz		1036909	0					
ANR	1037039	IfStatement	if ( ! buf )		1036909	11					
ANR	1037040	Condition	! buf	161:5:5089:5092	1036909	0	True				
ANR	1037041	UnaryOperationExpression	! buf		1036909	0					
ANR	1037042	UnaryOperator	!		1036909	0					
ANR	1037043	Identifier	buf		1036909	1					
ANR	1037044	CompoundStatement		20:11:456:456	1036909	1					
ANR	1037045	ReturnStatement	return - 1 ;	162:2:5099:5108	1036909	0	True				
ANR	1037046	UnaryOperationExpression	- 1		1036909	0					
ANR	1037047	UnaryOperator	-		1036909	0					
ANR	1037048	PrimaryExpression	1		1036909	1					
ANR	1037049	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	164:1:5114:5144	1036909	12	True				
ANR	1037050	CallExpression	"r_cons_break_push ( NULL , NULL )"		1036909	0					
ANR	1037051	Callee	r_cons_break_push		1036909	0					
ANR	1037052	Identifier	r_cons_break_push		1036909	0					
ANR	1037053	ArgumentList	NULL		1036909	1					
ANR	1037054	Argument	NULL		1036909	0					
ANR	1037055	Identifier	NULL		1036909	0					
ANR	1037056	Argument	NULL		1036909	1					
ANR	1037057	Identifier	NULL		1036909	0					
ANR	1037058	WhileStatement	while ( off < end_addr )		1036909	13					
ANR	1037059	Condition	off < end_addr	165:8:5154:5167	1036909	0	True				
ANR	1037060	RelationalExpression	off < end_addr		1036909	0		<			
ANR	1037061	Identifier	off		1036909	0					
ANR	1037062	Identifier	end_addr		1036909	1					
ANR	1037063	CompoundStatement		24:24:531:531	1036909	1					
ANR	1037064	IfStatement	if ( r_cons_is_breaked ( ) )		1036909	0					
ANR	1037065	Condition	r_cons_is_breaked ( )	166:6:5178:5197	1036909	0	True				
ANR	1037066	CallExpression	r_cons_is_breaked ( )		1036909	0					
ANR	1037067	Callee	r_cons_is_breaked		1036909	0					
ANR	1037068	Identifier	r_cons_is_breaked		1036909	0					
ANR	1037069	ArgumentList			1036909	1					
ANR	1037070	CompoundStatement		25:28:561:561	1036909	1					
ANR	1037071	BreakStatement	break ;	167:3:5205:5210	1036909	0	True				
ANR	1037072	ExpressionStatement	"r_io_read_at ( core -> io , off , ( ut8 * ) buf , bsz )"	169:2:5218:5264	1036909	1	True				
ANR	1037073	CallExpression	"r_io_read_at ( core -> io , off , ( ut8 * ) buf , bsz )"		1036909	0					
ANR	1037074	Callee	r_io_read_at		1036909	0					
ANR	1037075	Identifier	r_io_read_at		1036909	0					
ANR	1037076	ArgumentList	core -> io		1036909	1					
ANR	1037077	Argument	core -> io		1036909	0					
ANR	1037078	PtrMemberAccess	core -> io		1036909	0					
ANR	1037079	Identifier	core		1036909	0					
ANR	1037080	Identifier	io		1036909	1					
ANR	1037081	Argument	off		1036909	1					
ANR	1037082	Identifier	off		1036909	0					
ANR	1037083	Argument	( ut8 * ) buf		1036909	2					
ANR	1037084	CastExpression	( ut8 * ) buf		1036909	0					
ANR	1037085	CastTarget	ut8 *		1036909	0					
ANR	1037086	Identifier	buf		1036909	1					
ANR	1037087	Argument	bsz		1036909	3					
ANR	1037088	Identifier	bsz		1036909	0					
ANR	1037089	ForStatement	for ( i = 0 ; i < bsz ; i ++ )		1036909	2					
ANR	1037090	ForInit	i = 0 ;	170:7:5273:5278	1036909	0	True				
ANR	1037091	AssignmentExpression	i = 0		1036909	0		=			
ANR	1037092	Identifier	i		1036909	0					
ANR	1037093	PrimaryExpression	0		1036909	1					
ANR	1037094	Condition	i < bsz	170:14:5280:5286	1036909	1	True				
ANR	1037095	RelationalExpression	i < bsz		1036909	0		<			
ANR	1037096	Identifier	i		1036909	0					
ANR	1037097	Identifier	bsz		1036909	1					
ANR	1037098	PostIncDecOperationExpression	i ++	170:23:5289:5291	1036909	2	True				
ANR	1037099	Identifier	i		1036909	0					
ANR	1037100	IncDec	++		1036909	1					
ANR	1037101	CompoundStatement		29:28:655:655	1036909	3					
ANR	1037102	IfStatement	if ( buf [ i ] != '\\n' )		1036909	0					
ANR	1037103	Condition	buf [ i ] != '\\n'	171:7:5303:5316	1036909	0	True				
ANR	1037104	EqualityExpression	buf [ i ] != '\\n'		1036909	0		!=			
ANR	1037105	ArrayIndexing	buf [ i ]		1036909	0					
ANR	1037106	Identifier	buf		1036909	0					
ANR	1037107	Identifier	i		1036909	1					
ANR	1037108	PrimaryExpression	'\\n'		1036909	1					
ANR	1037109	CompoundStatement		30:23:680:680	1036909	1					
ANR	1037110	ContinueStatement	continue ;	172:4:5325:5333	1036909	0	True				
ANR	1037111	IfStatement	if ( ( line_count + 1 ) >= bsz )		1036909	1					
ANR	1037112	Condition	( line_count + 1 ) >= bsz	174:7:5347:5369	1036909	0	True				
ANR	1037113	RelationalExpression	( line_count + 1 ) >= bsz		1036909	0		>=			
ANR	1037114	AdditiveExpression	line_count + 1		1036909	0		+			
ANR	1037115	Identifier	line_count		1036909	0					
ANR	1037116	PrimaryExpression	1		1036909	1					
ANR	1037117	Identifier	bsz		1036909	1					
ANR	1037118	CompoundStatement		33:32:733:733	1036909	1					
ANR	1037119	BreakStatement	break ;	175:4:5378:5383	1036909	0	True				
ANR	1037120	ExpressionStatement	core -> print -> lines_cache [ line_count ] = start_addr ? off + i + 1 : off + i + 1 + baddr	177:3:5393:5476	1036909	2	True				
ANR	1037121	AssignmentExpression	core -> print -> lines_cache [ line_count ] = start_addr ? off + i + 1 : off + i + 1 + baddr		1036909	0		=			
ANR	1037122	ArrayIndexing	core -> print -> lines_cache [ line_count ]		1036909	0					
ANR	1037123	PtrMemberAccess	core -> print -> lines_cache		1036909	0					
ANR	1037124	PtrMemberAccess	core -> print		1036909	0					
ANR	1037125	Identifier	core		1036909	0					
ANR	1037126	Identifier	print		1036909	1					
ANR	1037127	Identifier	lines_cache		1036909	1					
ANR	1037128	Identifier	line_count		1036909	1					
ANR	1037129	ConditionalExpression	start_addr ? off + i + 1 : off + i + 1 + baddr		1036909	1					
ANR	1037130	Condition	start_addr		1036909	0					
ANR	1037131	Identifier	start_addr		1036909	0					
ANR	1037132	AdditiveExpression	off + i + 1		1036909	1		+			
ANR	1037133	Identifier	off		1036909	0					
ANR	1037134	AdditiveExpression	i + 1		1036909	1		+			
ANR	1037135	Identifier	i		1036909	0					
ANR	1037136	PrimaryExpression	1		1036909	1					
ANR	1037137	AdditiveExpression	off + i + 1 + baddr		1036909	2		+			
ANR	1037138	Identifier	off		1036909	0					
ANR	1037139	AdditiveExpression	i + 1 + baddr		1036909	1		+			
ANR	1037140	Identifier	i		1036909	0					
ANR	1037141	AdditiveExpression	1 + baddr		1036909	1		+			
ANR	1037142	PrimaryExpression	1		1036909	0					
ANR	1037143	Identifier	baddr		1036909	1					
ANR	1037144	ExpressionStatement	line_count ++	178:3:5481:5493	1036909	3	True				
ANR	1037145	PostIncDecOperationExpression	line_count ++		1036909	0					
ANR	1037146	Identifier	line_count		1036909	0					
ANR	1037147	IncDec	++		1036909	1					
ANR	1037148	IfStatement	if ( line_count % bsz == 0 )		1036909	4					
ANR	1037149	Condition	line_count % bsz == 0	179:7:5502:5522	1036909	0	True				
ANR	1037150	EqualityExpression	line_count % bsz == 0		1036909	0		==			
ANR	1037151	MultiplicativeExpression	line_count % bsz		1036909	0		%			
ANR	1037152	Identifier	line_count		1036909	0					
ANR	1037153	Identifier	bsz		1036909	1					
ANR	1037154	PrimaryExpression	0		1036909	1					
ANR	1037155	CompoundStatement		39:4:892:979	1036909	1					
ANR	1037156	IdentifierDeclStatement	"ut64 * tmp = realloc ( core -> print -> lines_cache , ( line_count + bsz ) * sizeof ( ut64 ) ) ;"	180:4:5531:5618	1036909	0	True				
ANR	1037157	IdentifierDecl	"* tmp = realloc ( core -> print -> lines_cache , ( line_count + bsz ) * sizeof ( ut64 ) )"		1036909	0					
ANR	1037158	IdentifierDeclType	ut64 *		1036909	0					
ANR	1037159	Identifier	tmp		1036909	1					
ANR	1037160	AssignmentExpression	"* tmp = realloc ( core -> print -> lines_cache , ( line_count + bsz ) * sizeof ( ut64 ) )"		1036909	2		=			
ANR	1037161	Identifier	tmp		1036909	0					
ANR	1037162	CallExpression	"realloc ( core -> print -> lines_cache , ( line_count + bsz ) * sizeof ( ut64 ) )"		1036909	1					
ANR	1037163	Callee	realloc		1036909	0					
ANR	1037164	Identifier	realloc		1036909	0					
ANR	1037165	ArgumentList	core -> print -> lines_cache		1036909	1					
ANR	1037166	Argument	core -> print -> lines_cache		1036909	0					
ANR	1037167	PtrMemberAccess	core -> print -> lines_cache		1036909	0					
ANR	1037168	PtrMemberAccess	core -> print		1036909	0					
ANR	1037169	Identifier	core		1036909	0					
ANR	1037170	Identifier	print		1036909	1					
ANR	1037171	Identifier	lines_cache		1036909	1					
ANR	1037172	Argument	( line_count + bsz ) * sizeof ( ut64 )		1036909	1					
ANR	1037173	MultiplicativeExpression	( line_count + bsz ) * sizeof ( ut64 )		1036909	0		*			
ANR	1037174	AdditiveExpression	line_count + bsz		1036909	0		+			
ANR	1037175	Identifier	line_count		1036909	0					
ANR	1037176	Identifier	bsz		1036909	1					
ANR	1037177	SizeofExpression	sizeof ( ut64 )		1036909	1					
ANR	1037178	Sizeof	sizeof		1036909	0					
ANR	1037179	SizeofOperand	ut64		1036909	1					
ANR	1037180	IfStatement	if ( tmp )		1036909	1					
ANR	1037181	Condition	tmp	182:8:5628:5630	1036909	0	True				
ANR	1037182	Identifier	tmp		1036909	0					
ANR	1037183	CompoundStatement		41:13:994:994	1036909	1					
ANR	1037184	ExpressionStatement	core -> print -> lines_cache = tmp	183:5:5640:5670	1036909	0	True				
ANR	1037185	AssignmentExpression	core -> print -> lines_cache = tmp		1036909	0		=			
ANR	1037186	PtrMemberAccess	core -> print -> lines_cache		1036909	0					
ANR	1037187	PtrMemberAccess	core -> print		1036909	0					
ANR	1037188	Identifier	core		1036909	0					
ANR	1037189	Identifier	print		1036909	1					
ANR	1037190	Identifier	lines_cache		1036909	1					
ANR	1037191	Identifier	tmp		1036909	1					
ANR	1037192	ElseStatement	else		1036909	0					
ANR	1037193	CompoundStatement		43:11:1044:1044	1036909	0					
ANR	1037194	ExpressionStatement	R_FREE ( core -> print -> lines_cache )	185:5:5690:5723	1036909	0	True				
ANR	1037195	CallExpression	R_FREE ( core -> print -> lines_cache )		1036909	0					
ANR	1037196	Callee	R_FREE		1036909	0					
ANR	1037197	Identifier	R_FREE		1036909	0					
ANR	1037198	ArgumentList	core -> print -> lines_cache		1036909	1					
ANR	1037199	Argument	core -> print -> lines_cache		1036909	0					
ANR	1037200	PtrMemberAccess	core -> print -> lines_cache		1036909	0					
ANR	1037201	PtrMemberAccess	core -> print		1036909	0					
ANR	1037202	Identifier	core		1036909	0					
ANR	1037203	Identifier	print		1036909	1					
ANR	1037204	Identifier	lines_cache		1036909	1					
ANR	1037205	GotoStatement	goto beach ;	186:5:5730:5740	1036909	1	True				
ANR	1037206	Identifier	beach		1036909	0					
ANR	1037207	ExpressionStatement	off += bsz	190:2:5759:5769	1036909	3	True				
ANR	1037208	AssignmentExpression	off += bsz		1036909	0		+=			
ANR	1037209	Identifier	off		1036909	0					
ANR	1037210	Identifier	bsz		1036909	1					
ANR	1037211	ExpressionStatement	free ( buf )	192:1:5775:5785	1036909	14	True				
ANR	1037212	CallExpression	free ( buf )		1036909	0					
ANR	1037213	Callee	free		1036909	0					
ANR	1037214	Identifier	free		1036909	0					
ANR	1037215	ArgumentList	buf		1036909	1					
ANR	1037216	Argument	buf		1036909	0					
ANR	1037217	Identifier	buf		1036909	0					
ANR	1037218	ExpressionStatement	r_cons_break_pop ( )	193:1:5788:5807	1036909	15	True				
ANR	1037219	CallExpression	r_cons_break_pop ( )		1036909	0					
ANR	1037220	Callee	r_cons_break_pop		1036909	0					
ANR	1037221	Identifier	r_cons_break_pop		1036909	0					
ANR	1037222	ArgumentList			1036909	1					
ANR	1037223	ReturnStatement	return line_count ;	194:1:5810:5827	1036909	16	True				
ANR	1037224	Identifier	line_count		1036909	0					
ANR	1037225	Label	beach :	195:0:5829:5834	1036909	17	True				
ANR	1037226	Identifier	beach		1036909	0					
ANR	1037227	ExpressionStatement	free ( buf )	196:1:5837:5847	1036909	18	True				
ANR	1037228	CallExpression	free ( buf )		1036909	0					
ANR	1037229	Callee	free		1036909	0					
ANR	1037230	Identifier	free		1036909	0					
ANR	1037231	ArgumentList	buf		1036909	1					
ANR	1037232	Argument	buf		1036909	0					
ANR	1037233	Identifier	buf		1036909	0					
ANR	1037234	ExpressionStatement	r_cons_break_pop ( )	197:1:5850:5869	1036909	19	True				
ANR	1037235	CallExpression	r_cons_break_pop ( )		1036909	0					
ANR	1037236	Callee	r_cons_break_pop		1036909	0					
ANR	1037237	Identifier	r_cons_break_pop		1036909	0					
ANR	1037238	ArgumentList			1036909	1					
ANR	1037239	ReturnStatement	return - 1 ;	198:1:5872:5881	1036909	20	True				
ANR	1037240	UnaryOperationExpression	- 1		1036909	0					
ANR	1037241	UnaryOperator	-		1036909	0					
ANR	1037242	PrimaryExpression	1		1036909	1					
ANR	1037243	ReturnType	R_API int		1036909	1					
ANR	1037244	Identifier	r_core_lines_initcache		1036909	2					
ANR	1037245	ParameterList	"RCore * core , ut64 start_addr , ut64 end_addr"		1036909	3					
ANR	1037246	Parameter	RCore * core	142:33:4593:4603	1036909	0	True				
ANR	1037247	ParameterType	RCore *		1036909	0					
ANR	1037248	Identifier	core		1036909	1					
ANR	1037249	Parameter	ut64 start_addr	142:46:4606:4620	1036909	1	True				
ANR	1037250	ParameterType	ut64		1036909	0					
ANR	1037251	Identifier	start_addr		1036909	1					
ANR	1037252	Parameter	ut64 end_addr	142:63:4623:4635	1036909	2	True				
ANR	1037253	ParameterType	ut64		1036909	0					
ANR	1037254	Identifier	end_addr		1036909	1					
ANR	1037255	CFGEntryNode	ENTRY		1036909		True				
ANR	1037256	CFGExitNode	EXIT		1036909		True				
ANR	1037257	Symbol	baddr		1036909						
ANR	1037258	Symbol	end_addr		1036909						
ANR	1037259	Symbol	* * core -> print		1036909						
ANR	1037260	Symbol	core -> print -> lines_cache		1036909						
ANR	1037261	Symbol	bsz		1036909						
ANR	1037262	Symbol	* core		1036909						
ANR	1037263	Symbol	realloc		1036909						
ANR	1037264	Symbol	r_cons_is_breaked		1036909						
ANR	1037265	Symbol	core -> io		1036909						
ANR	1037266	Symbol	tmp		1036909						
ANR	1037267	Symbol	R_NEWS0		1036909						
ANR	1037268	Symbol	* line_count		1036909						
ANR	1037269	Symbol	start_addr		1036909						
ANR	1037270	Symbol	UT64_MAX		1036909						
ANR	1037271	Symbol	* * core		1036909						
ANR	1037272	Symbol	core -> blocksize		1036909						
ANR	1037273	Symbol	core -> config		1036909						
ANR	1037274	Symbol	malloc		1036909						
ANR	1037275	Symbol	* buf		1036909						
ANR	1037276	Symbol	line_count		1036909						
ANR	1037277	Symbol	NULL		1036909						
ANR	1037278	Symbol	i		1036909						
ANR	1037279	Symbol	* core -> print -> lines_cache		1036909						
ANR	1037280	Symbol	ut64		1036909						
ANR	1037281	Symbol	off		1036909						
ANR	1037282	Symbol	core		1036909						
ANR	1037283	Symbol	* * * core		1036909						
ANR	1037284	Symbol	* core -> print		1036909						
ANR	1037285	Symbol	buf		1036909						
ANR	1037286	Symbol	* i		1036909						
ANR	1037287	Symbol	r_config_get_i		1036909						
ANR	1037288	Symbol	core -> print		1036909						
ANR	1037289	Function	seek_to_register	201:0:5886:6459							
ANR	1037290	FunctionDef	"seek_to_register (RCore * core , const char * input , bool is_silent)"		1037289	0					
ANR	1037291	CompoundStatement		201:77:5963:6459	1037289	0					
ANR	1037292	IdentifierDeclStatement	ut64 off ;	202:1:5966:5974	1037289	0	True				
ANR	1037293	IdentifierDecl	off		1037289	0					
ANR	1037294	IdentifierDeclType	ut64		1037289	0					
ANR	1037295	Identifier	off		1037289	1					
ANR	1037296	IfStatement	if ( core -> io -> debug )		1037289	1					
ANR	1037297	Condition	core -> io -> debug	203:5:5981:5995	1037289	0	True				
ANR	1037298	PtrMemberAccess	core -> io -> debug		1037289	0					
ANR	1037299	PtrMemberAccess	core -> io		1037289	0					
ANR	1037300	Identifier	core		1037289	0					
ANR	1037301	Identifier	io		1037289	1					
ANR	1037302	Identifier	debug		1037289	1					
ANR	1037303	CompoundStatement		3:22:34:34	1037289	1					
ANR	1037304	ExpressionStatement	"off = r_debug_reg_get ( core -> dbg , input )"	204:2:6002:6042	1037289	0	True				
ANR	1037305	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , input )"		1037289	0		=			
ANR	1037306	Identifier	off		1037289	0					
ANR	1037307	CallExpression	"r_debug_reg_get ( core -> dbg , input )"		1037289	1					
ANR	1037308	Callee	r_debug_reg_get		1037289	0					
ANR	1037309	Identifier	r_debug_reg_get		1037289	0					
ANR	1037310	ArgumentList	core -> dbg		1037289	1					
ANR	1037311	Argument	core -> dbg		1037289	0					
ANR	1037312	PtrMemberAccess	core -> dbg		1037289	0					
ANR	1037313	Identifier	core		1037289	0					
ANR	1037314	Identifier	dbg		1037289	1					
ANR	1037315	Argument	input		1037289	1					
ANR	1037316	Identifier	input		1037289	0					
ANR	1037317	IfStatement	if ( ! is_silent )		1037289	1					
ANR	1037318	Condition	! is_silent	205:6:6050:6059	1037289	0	True				
ANR	1037319	UnaryOperationExpression	! is_silent		1037289	0					
ANR	1037320	UnaryOperator	!		1037289	0					
ANR	1037321	Identifier	is_silent		1037289	1					
ANR	1037322	CompoundStatement		5:18:98:98	1037289	1					
ANR	1037323	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"	206:3:6067:6141	1037289	0	True				
ANR	1037324	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"		1037289	0					
ANR	1037325	Callee	r_io_sundo_push		1037289	0					
ANR	1037326	Identifier	r_io_sundo_push		1037289	0					
ANR	1037327	ArgumentList	core -> io		1037289	1					
ANR	1037328	Argument	core -> io		1037289	0					
ANR	1037329	PtrMemberAccess	core -> io		1037289	0					
ANR	1037330	Identifier	core		1037289	0					
ANR	1037331	Identifier	io		1037289	1					
ANR	1037332	Argument	core -> offset		1037289	1					
ANR	1037333	PtrMemberAccess	core -> offset		1037289	0					
ANR	1037334	Identifier	core		1037289	0					
ANR	1037335	Identifier	offset		1037289	1					
ANR	1037336	Argument	r_print_get_cursor ( core -> print )		1037289	2					
ANR	1037337	CallExpression	r_print_get_cursor ( core -> print )		1037289	0					
ANR	1037338	Callee	r_print_get_cursor		1037289	0					
ANR	1037339	Identifier	r_print_get_cursor		1037289	0					
ANR	1037340	ArgumentList	core -> print		1037289	1					
ANR	1037341	Argument	core -> print		1037289	0					
ANR	1037342	PtrMemberAccess	core -> print		1037289	0					
ANR	1037343	Identifier	core		1037289	0					
ANR	1037344	Identifier	print		1037289	1					
ANR	1037345	ExpressionStatement	"r_core_seek ( core , off , 1 )"	208:2:6149:6175	1037289	2	True				
ANR	1037346	CallExpression	"r_core_seek ( core , off , 1 )"		1037289	0					
ANR	1037347	Callee	r_core_seek		1037289	0					
ANR	1037348	Identifier	r_core_seek		1037289	0					
ANR	1037349	ArgumentList	core		1037289	1					
ANR	1037350	Argument	core		1037289	0					
ANR	1037351	Identifier	core		1037289	0					
ANR	1037352	Argument	off		1037289	1					
ANR	1037353	Identifier	off		1037289	0					
ANR	1037354	Argument	1		1037289	2					
ANR	1037355	PrimaryExpression	1		1037289	0					
ANR	1037356	ElseStatement	else		1037289	0					
ANR	1037357	CompoundStatement		10:2:225:252	1037289	0					
ANR	1037358	IdentifierDeclStatement	RReg * orig = core -> dbg -> reg ;	210:2:6189:6216	1037289	0	True				
ANR	1037359	IdentifierDecl	* orig = core -> dbg -> reg		1037289	0					
ANR	1037360	IdentifierDeclType	RReg *		1037289	0					
ANR	1037361	Identifier	orig		1037289	1					
ANR	1037362	AssignmentExpression	* orig = core -> dbg -> reg		1037289	2		=			
ANR	1037363	Identifier	orig		1037289	0					
ANR	1037364	PtrMemberAccess	core -> dbg -> reg		1037289	1					
ANR	1037365	PtrMemberAccess	core -> dbg		1037289	0					
ANR	1037366	Identifier	core		1037289	0					
ANR	1037367	Identifier	dbg		1037289	1					
ANR	1037368	Identifier	reg		1037289	1					
ANR	1037369	ExpressionStatement	core -> dbg -> reg = core -> anal -> reg	211:2:6220:6252	1037289	1	True				
ANR	1037370	AssignmentExpression	core -> dbg -> reg = core -> anal -> reg		1037289	0		=			
ANR	1037371	PtrMemberAccess	core -> dbg -> reg		1037289	0					
ANR	1037372	PtrMemberAccess	core -> dbg		1037289	0					
ANR	1037373	Identifier	core		1037289	0					
ANR	1037374	Identifier	dbg		1037289	1					
ANR	1037375	Identifier	reg		1037289	1					
ANR	1037376	PtrMemberAccess	core -> anal -> reg		1037289	1					
ANR	1037377	PtrMemberAccess	core -> anal		1037289	0					
ANR	1037378	Identifier	core		1037289	0					
ANR	1037379	Identifier	anal		1037289	1					
ANR	1037380	Identifier	reg		1037289	1					
ANR	1037381	ExpressionStatement	"off = r_debug_reg_get ( core -> dbg , input )"	212:2:6256:6296	1037289	2	True				
ANR	1037382	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , input )"		1037289	0		=			
ANR	1037383	Identifier	off		1037289	0					
ANR	1037384	CallExpression	"r_debug_reg_get ( core -> dbg , input )"		1037289	1					
ANR	1037385	Callee	r_debug_reg_get		1037289	0					
ANR	1037386	Identifier	r_debug_reg_get		1037289	0					
ANR	1037387	ArgumentList	core -> dbg		1037289	1					
ANR	1037388	Argument	core -> dbg		1037289	0					
ANR	1037389	PtrMemberAccess	core -> dbg		1037289	0					
ANR	1037390	Identifier	core		1037289	0					
ANR	1037391	Identifier	dbg		1037289	1					
ANR	1037392	Argument	input		1037289	1					
ANR	1037393	Identifier	input		1037289	0					
ANR	1037394	ExpressionStatement	core -> dbg -> reg = orig	213:2:6300:6321	1037289	3	True				
ANR	1037395	AssignmentExpression	core -> dbg -> reg = orig		1037289	0		=			
ANR	1037396	PtrMemberAccess	core -> dbg -> reg		1037289	0					
ANR	1037397	PtrMemberAccess	core -> dbg		1037289	0					
ANR	1037398	Identifier	core		1037289	0					
ANR	1037399	Identifier	dbg		1037289	1					
ANR	1037400	Identifier	reg		1037289	1					
ANR	1037401	Identifier	orig		1037289	1					
ANR	1037402	IfStatement	if ( ! is_silent )		1037289	4					
ANR	1037403	Condition	! is_silent	214:6:6329:6338	1037289	0	True				
ANR	1037404	UnaryOperationExpression	! is_silent		1037289	0					
ANR	1037405	UnaryOperator	!		1037289	0					
ANR	1037406	Identifier	is_silent		1037289	1					
ANR	1037407	CompoundStatement		14:18:377:377	1037289	1					
ANR	1037408	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"	215:3:6346:6420	1037289	0	True				
ANR	1037409	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"		1037289	0					
ANR	1037410	Callee	r_io_sundo_push		1037289	0					
ANR	1037411	Identifier	r_io_sundo_push		1037289	0					
ANR	1037412	ArgumentList	core -> io		1037289	1					
ANR	1037413	Argument	core -> io		1037289	0					
ANR	1037414	PtrMemberAccess	core -> io		1037289	0					
ANR	1037415	Identifier	core		1037289	0					
ANR	1037416	Identifier	io		1037289	1					
ANR	1037417	Argument	core -> offset		1037289	1					
ANR	1037418	PtrMemberAccess	core -> offset		1037289	0					
ANR	1037419	Identifier	core		1037289	0					
ANR	1037420	Identifier	offset		1037289	1					
ANR	1037421	Argument	r_print_get_cursor ( core -> print )		1037289	2					
ANR	1037422	CallExpression	r_print_get_cursor ( core -> print )		1037289	0					
ANR	1037423	Callee	r_print_get_cursor		1037289	0					
ANR	1037424	Identifier	r_print_get_cursor		1037289	0					
ANR	1037425	ArgumentList	core -> print		1037289	1					
ANR	1037426	Argument	core -> print		1037289	0					
ANR	1037427	PtrMemberAccess	core -> print		1037289	0					
ANR	1037428	Identifier	core		1037289	0					
ANR	1037429	Identifier	print		1037289	1					
ANR	1037430	ExpressionStatement	"r_core_seek ( core , off , 1 )"	217:2:6428:6454	1037289	5	True				
ANR	1037431	CallExpression	"r_core_seek ( core , off , 1 )"		1037289	0					
ANR	1037432	Callee	r_core_seek		1037289	0					
ANR	1037433	Identifier	r_core_seek		1037289	0					
ANR	1037434	ArgumentList	core		1037289	1					
ANR	1037435	Argument	core		1037289	0					
ANR	1037436	Identifier	core		1037289	0					
ANR	1037437	Argument	off		1037289	1					
ANR	1037438	Identifier	off		1037289	0					
ANR	1037439	Argument	1		1037289	2					
ANR	1037440	PrimaryExpression	1		1037289	0					
ANR	1037441	ReturnType	static void		1037289	1					
ANR	1037442	Identifier	seek_to_register		1037289	2					
ANR	1037443	ParameterList	"RCore * core , const char * input , bool is_silent"		1037289	3					
ANR	1037444	Parameter	RCore * core	201:29:5915:5925	1037289	0	True				
ANR	1037445	ParameterType	RCore *		1037289	0					
ANR	1037446	Identifier	core		1037289	1					
ANR	1037447	Parameter	const char * input	201:42:5928:5944	1037289	1	True				
ANR	1037448	ParameterType	const char *		1037289	0					
ANR	1037449	Identifier	input		1037289	1					
ANR	1037450	Parameter	bool is_silent	201:61:5947:5960	1037289	2	True				
ANR	1037451	ParameterType	bool		1037289	0					
ANR	1037452	Identifier	is_silent		1037289	1					
ANR	1037453	CFGEntryNode	ENTRY		1037289		True				
ANR	1037454	CFGExitNode	EXIT		1037289		True				
ANR	1037455	Symbol	core -> anal -> reg		1037289						
ANR	1037456	Symbol	r_debug_reg_get		1037289						
ANR	1037457	Symbol	* core		1037289						
ANR	1037458	Symbol	core -> offset		1037289						
ANR	1037459	Symbol	is_silent		1037289						
ANR	1037460	Symbol	core -> anal		1037289						
ANR	1037461	Symbol	off		1037289						
ANR	1037462	Symbol	core		1037289						
ANR	1037463	Symbol	input		1037289						
ANR	1037464	Symbol	* core -> io		1037289						
ANR	1037465	Symbol	* core -> anal		1037289						
ANR	1037466	Symbol	core -> io		1037289						
ANR	1037467	Symbol	orig		1037289						
ANR	1037468	Symbol	core -> io -> debug		1037289						
ANR	1037469	Symbol	core -> dbg -> reg		1037289						
ANR	1037470	Symbol	r_print_get_cursor		1037289						
ANR	1037471	Symbol	core -> print		1037289						
ANR	1037472	Symbol	* core -> dbg		1037289						
ANR	1037473	Symbol	* * core		1037289						
ANR	1037474	Symbol	core -> dbg		1037289						
ANR	1037475	Function	cmd_sort	221:0:6462:7009							
ANR	1037476	FunctionDef	"cmd_sort (void * data , const char * input)"		1037475	0					
ANR	1037477	CompoundStatement		221:51:6513:7009	1037475	0					
ANR	1037478	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	222:1:6526:6553	1037475	0	True				
ANR	1037479	IdentifierDecl	* core = ( RCore * ) data		1037475	0					
ANR	1037480	IdentifierDeclType	RCore *		1037475	0					
ANR	1037481	Identifier	core		1037475	1					
ANR	1037482	AssignmentExpression	* core = ( RCore * ) data		1037475	2		=			
ANR	1037483	Identifier	core		1037475	0					
ANR	1037484	CastExpression	( RCore * ) data		1037475	1					
ANR	1037485	CastTarget	RCore *		1037475	0					
ANR	1037486	Identifier	data		1037475	1					
ANR	1037487	IdentifierDeclStatement	"const char * arg = strchr ( input , ' ' ) ;"	223:1:6556:6593	1037475	1	True				
ANR	1037488	IdentifierDecl	"* arg = strchr ( input , ' ' )"		1037475	0					
ANR	1037489	IdentifierDeclType	const char *		1037475	0					
ANR	1037490	Identifier	arg		1037475	1					
ANR	1037491	AssignmentExpression	"* arg = strchr ( input , ' ' )"		1037475	2		=			
ANR	1037492	Identifier	arg		1037475	0					
ANR	1037493	CallExpression	"strchr ( input , ' ' )"		1037475	1					
ANR	1037494	Callee	strchr		1037475	0					
ANR	1037495	Identifier	strchr		1037475	0					
ANR	1037496	ArgumentList	input		1037475	1					
ANR	1037497	Argument	input		1037475	0					
ANR	1037498	Identifier	input		1037475	0					
ANR	1037499	Argument	' '		1037475	1					
ANR	1037500	PrimaryExpression	' '		1037475	0					
ANR	1037501	IfStatement	if ( arg )		1037475	2					
ANR	1037502	Condition	arg	224:5:6600:6602	1037475	0	True				
ANR	1037503	Identifier	arg		1037475	0					
ANR	1037504	CompoundStatement		4:10:91:91	1037475	1					
ANR	1037505	ExpressionStatement	arg = r_str_trim_ro ( arg + 1 )	225:2:6609:6638	1037475	0	True				
ANR	1037506	AssignmentExpression	arg = r_str_trim_ro ( arg + 1 )		1037475	0		=			
ANR	1037507	Identifier	arg		1037475	0					
ANR	1037508	CallExpression	r_str_trim_ro ( arg + 1 )		1037475	1					
ANR	1037509	Callee	r_str_trim_ro		1037475	0					
ANR	1037510	Identifier	r_str_trim_ro		1037475	0					
ANR	1037511	ArgumentList	arg + 1		1037475	1					
ANR	1037512	Argument	arg + 1		1037475	0					
ANR	1037513	AdditiveExpression	arg + 1		1037475	0		+			
ANR	1037514	Identifier	arg		1037475	0					
ANR	1037515	PrimaryExpression	1		1037475	1					
ANR	1037516	SwitchStatement	switch ( * input )		1037475	3					
ANR	1037517	Condition	* input	227:9:6652:6657	1037475	0	True				
ANR	1037518	UnaryOperationExpression	* input		1037475	0					
ANR	1037519	UnaryOperator	*		1037475	0					
ANR	1037520	Identifier	input		1037475	1					
ANR	1037521	CompoundStatement		7:17:146:146	1037475	1					
ANR	1037522	Label	case '?' :	228:1:6663:6671	1037475	0	True				
ANR	1037523	ExpressionStatement	"eprintf ( ""Usage: sort # sort the contents of the file\\n"" )"	229:2:6686:6743	1037475	1	True				
ANR	1037524	CallExpression	"eprintf ( ""Usage: sort # sort the contents of the file\\n"" )"		1037475	0					
ANR	1037525	Callee	eprintf		1037475	0					
ANR	1037526	Identifier	eprintf		1037475	0					
ANR	1037527	ArgumentList	"""Usage: sort # sort the contents of the file\\n"""		1037475	1					
ANR	1037528	Argument	"""Usage: sort # sort the contents of the file\\n"""		1037475	0					
ANR	1037529	PrimaryExpression	"""Usage: sort # sort the contents of the file\\n"""		1037475	0					
ANR	1037530	BreakStatement	break ;	230:2:6747:6752	1037475	2	True				
ANR	1037531	Label	default :	231:1:6755:6762	1037475	3	True				
ANR	1037532	Identifier	default		1037475	0					
ANR	1037533	IfStatement	if ( ! arg )		1037475	4					
ANR	1037534	Condition	! arg	232:6:6778:6781	1037475	0	True				
ANR	1037535	UnaryOperationExpression	! arg		1037475	0					
ANR	1037536	UnaryOperator	!		1037475	0					
ANR	1037537	Identifier	arg		1037475	1					
ANR	1037538	CompoundStatement		12:12:270:270	1037475	1					
ANR	1037539	ExpressionStatement	"arg = """""	233:3:6789:6797	1037475	0	True				
ANR	1037540	AssignmentExpression	"arg = """""		1037475	0		=			
ANR	1037541	Identifier	arg		1037475	0					
ANR	1037542	PrimaryExpression	""""""		1037475	1					
ANR	1037543	IfStatement	"if ( r_fs_check ( core -> fs , arg ) )"		1037475	5					
ANR	1037544	Condition	"r_fs_check ( core -> fs , arg )"	235:6:6809:6834	1037475	0	True				
ANR	1037545	CallExpression	"r_fs_check ( core -> fs , arg )"		1037475	0					
ANR	1037546	Callee	r_fs_check		1037475	0					
ANR	1037547	Identifier	r_fs_check		1037475	0					
ANR	1037548	ArgumentList	core -> fs		1037475	1					
ANR	1037549	Argument	core -> fs		1037475	0					
ANR	1037550	PtrMemberAccess	core -> fs		1037475	0					
ANR	1037551	Identifier	core		1037475	0					
ANR	1037552	Identifier	fs		1037475	1					
ANR	1037553	Argument	arg		1037475	1					
ANR	1037554	Identifier	arg		1037475	0					
ANR	1037555	CompoundStatement		15:34:323:323	1037475	1					
ANR	1037556	ExpressionStatement	"r_core_cmdf ( core , ""md %s"" , arg )"	236:3:6842:6874	1037475	0	True				
ANR	1037557	CallExpression	"r_core_cmdf ( core , ""md %s"" , arg )"		1037475	0					
ANR	1037558	Callee	r_core_cmdf		1037475	0					
ANR	1037559	Identifier	r_core_cmdf		1037475	0					
ANR	1037560	ArgumentList	core		1037475	1					
ANR	1037561	Argument	core		1037475	0					
ANR	1037562	Identifier	core		1037475	0					
ANR	1037563	Argument	"""md %s"""		1037475	1					
ANR	1037564	PrimaryExpression	"""md %s"""		1037475	0					
ANR	1037565	Argument	arg		1037475	2					
ANR	1037566	Identifier	arg		1037475	0					
ANR	1037567	ElseStatement	else		1037475	0					
ANR	1037568	CompoundStatement		18:3:376:407	1037475	0					
ANR	1037569	IdentifierDeclStatement	char * res = r_syscmd_sort ( arg ) ;	238:3:6890:6921	1037475	0	True				
ANR	1037570	IdentifierDecl	* res = r_syscmd_sort ( arg )		1037475	0					
ANR	1037571	IdentifierDeclType	char *		1037475	0					
ANR	1037572	Identifier	res		1037475	1					
ANR	1037573	AssignmentExpression	* res = r_syscmd_sort ( arg )		1037475	2		=			
ANR	1037574	Identifier	res		1037475	0					
ANR	1037575	CallExpression	r_syscmd_sort ( arg )		1037475	1					
ANR	1037576	Callee	r_syscmd_sort		1037475	0					
ANR	1037577	Identifier	r_syscmd_sort		1037475	0					
ANR	1037578	ArgumentList	arg		1037475	1					
ANR	1037579	Argument	arg		1037475	0					
ANR	1037580	Identifier	arg		1037475	0					
ANR	1037581	IfStatement	if ( res )		1037475	1					
ANR	1037582	Condition	res	239:7:6930:6932	1037475	0	True				
ANR	1037583	Identifier	res		1037475	0					
ANR	1037584	CompoundStatement		19:12:421:421	1037475	1					
ANR	1037585	ExpressionStatement	r_cons_print ( res )	240:4:6941:6959	1037475	0	True				
ANR	1037586	CallExpression	r_cons_print ( res )		1037475	0					
ANR	1037587	Callee	r_cons_print		1037475	0					
ANR	1037588	Identifier	r_cons_print		1037475	0					
ANR	1037589	ArgumentList	res		1037475	1					
ANR	1037590	Argument	res		1037475	0					
ANR	1037591	Identifier	res		1037475	0					
ANR	1037592	ExpressionStatement	free ( res )	241:4:6965:6975	1037475	1	True				
ANR	1037593	CallExpression	free ( res )		1037475	0					
ANR	1037594	Callee	free		1037475	0					
ANR	1037595	Identifier	free		1037475	0					
ANR	1037596	ArgumentList	res		1037475	1					
ANR	1037597	Argument	res		1037475	0					
ANR	1037598	Identifier	res		1037475	0					
ANR	1037599	BreakStatement	break ;	244:2:6988:6993	1037475	6	True				
ANR	1037600	ReturnStatement	return 0 ;	246:1:6999:7007	1037475	4	True				
ANR	1037601	PrimaryExpression	0		1037475	0					
ANR	1037602	ReturnType	static int		1037475	1					
ANR	1037603	Identifier	cmd_sort		1037475	2					
ANR	1037604	ParameterList	"void * data , const char * input"		1037475	3					
ANR	1037605	Parameter	void * data	221:20:6482:6491	1037475	0	True				
ANR	1037606	ParameterType	void *		1037475	0					
ANR	1037607	Identifier	data		1037475	1					
ANR	1037608	Parameter	const char * input	221:32:6494:6510	1037475	1	True				
ANR	1037609	ParameterType	const char *		1037475	0					
ANR	1037610	Identifier	input		1037475	1					
ANR	1037611	CFGEntryNode	ENTRY		1037475		True				
ANR	1037612	CFGExitNode	EXIT		1037475		True				
ANR	1037613	Symbol	input		1037475						
ANR	1037614	Symbol	core		1037475						
ANR	1037615	Symbol	res		1037475						
ANR	1037616	Symbol	data		1037475						
ANR	1037617	Symbol	r_syscmd_sort		1037475						
ANR	1037618	Symbol	arg		1037475						
ANR	1037619	Symbol	r_str_trim_ro		1037475						
ANR	1037620	Symbol	* input		1037475						
ANR	1037621	Symbol	* core		1037475						
ANR	1037622	Symbol	strchr		1037475						
ANR	1037623	Symbol	core -> fs		1037475						
ANR	1037624	Symbol	r_fs_check		1037475						
ANR	1037625	Function	cmd_seek_opcode_backward	249:0:7012:8137							
ANR	1037626	FunctionDef	"cmd_seek_opcode_backward (RCore * core , int numinstr)"		1037625	0					
ANR	1037627	CompoundStatement		249:63:7075:8137	1037625	0					
ANR	1037628	IdentifierDeclStatement	"int i , val = 0 ;"	250:1:7078:7092	1037625	0	True				
ANR	1037629	IdentifierDecl	i		1037625	0					
ANR	1037630	IdentifierDeclType	int		1037625	0					
ANR	1037631	Identifier	i		1037625	1					
ANR	1037632	IdentifierDecl	val = 0		1037625	1					
ANR	1037633	IdentifierDeclType	int		1037625	0					
ANR	1037634	Identifier	val		1037625	1					
ANR	1037635	AssignmentExpression	val = 0		1037625	2		=			
ANR	1037636	Identifier	val		1037625	0					
ANR	1037637	PrimaryExpression	0		1037625	1					
ANR	1037638	IdentifierDeclStatement	ut64 addr = core -> offset ;	252:1:7123:7147	1037625	1	True				
ANR	1037639	IdentifierDecl	addr = core -> offset		1037625	0					
ANR	1037640	IdentifierDeclType	ut64		1037625	0					
ANR	1037641	Identifier	addr		1037625	1					
ANR	1037642	AssignmentExpression	addr = core -> offset		1037625	2		=			
ANR	1037643	Identifier	addr		1037625	0					
ANR	1037644	PtrMemberAccess	core -> offset		1037625	1					
ANR	1037645	Identifier	core		1037625	0					
ANR	1037646	Identifier	offset		1037625	1					
ANR	1037647	IdentifierDeclStatement	int ret = 0 ;	253:1:7150:7161	1037625	2	True				
ANR	1037648	IdentifierDecl	ret = 0		1037625	0					
ANR	1037649	IdentifierDeclType	int		1037625	0					
ANR	1037650	Identifier	ret		1037625	1					
ANR	1037651	AssignmentExpression	ret = 0		1037625	2		=			
ANR	1037652	Identifier	ret		1037625	0					
ANR	1037653	PrimaryExpression	0		1037625	1					
ANR	1037654	IfStatement	"if ( r_core_prevop_addr ( core , core -> offset , numinstr , & addr ) )"		1037625	3					
ANR	1037655	Condition	"r_core_prevop_addr ( core , core -> offset , numinstr , & addr )"	254:5:7168:7223	1037625	0	True				
ANR	1037656	CallExpression	"r_core_prevop_addr ( core , core -> offset , numinstr , & addr )"		1037625	0					
ANR	1037657	Callee	r_core_prevop_addr		1037625	0					
ANR	1037658	Identifier	r_core_prevop_addr		1037625	0					
ANR	1037659	ArgumentList	core		1037625	1					
ANR	1037660	Argument	core		1037625	0					
ANR	1037661	Identifier	core		1037625	0					
ANR	1037662	Argument	core -> offset		1037625	1					
ANR	1037663	PtrMemberAccess	core -> offset		1037625	0					
ANR	1037664	Identifier	core		1037625	0					
ANR	1037665	Identifier	offset		1037625	1					
ANR	1037666	Argument	numinstr		1037625	2					
ANR	1037667	Identifier	numinstr		1037625	0					
ANR	1037668	Argument	& addr		1037625	3					
ANR	1037669	UnaryOperationExpression	& addr		1037625	0					
ANR	1037670	UnaryOperator	&		1037625	0					
ANR	1037671	Identifier	addr		1037625	1					
ANR	1037672	CompoundStatement		6:63:150:150	1037625	1					
ANR	1037673	ExpressionStatement	ret = core -> offset - addr	255:2:7230:7255	1037625	0	True				
ANR	1037674	AssignmentExpression	ret = core -> offset - addr		1037625	0		=			
ANR	1037675	Identifier	ret		1037625	0					
ANR	1037676	AdditiveExpression	core -> offset - addr		1037625	1		-			
ANR	1037677	PtrMemberAccess	core -> offset		1037625	0					
ANR	1037678	Identifier	core		1037625	0					
ANR	1037679	Identifier	offset		1037625	1					
ANR	1037680	Identifier	addr		1037625	1					
ANR	1037681	ElseStatement	else		1037625	0					
ANR	1037682	CompoundStatement		15:2:438:520	1037625	0					
ANR	1037683	ExpressionStatement	"ret = r_core_asm_bwdis_len ( core , & instr_len , & addr , numinstr )"	260:2:7418:7480	1037625	0	True				
ANR	1037684	AssignmentExpression	"ret = r_core_asm_bwdis_len ( core , & instr_len , & addr , numinstr )"		1037625	0		=			
ANR	1037685	Identifier	ret		1037625	0					
ANR	1037686	CallExpression	"r_core_asm_bwdis_len ( core , & instr_len , & addr , numinstr )"		1037625	1					
ANR	1037687	Callee	r_core_asm_bwdis_len		1037625	0					
ANR	1037688	Identifier	r_core_asm_bwdis_len		1037625	0					
ANR	1037689	ArgumentList	core		1037625	1					
ANR	1037690	Argument	core		1037625	0					
ANR	1037691	Identifier	core		1037625	0					
ANR	1037692	Argument	& instr_len		1037625	1					
ANR	1037693	UnaryOperationExpression	& instr_len		1037625	0					
ANR	1037694	UnaryOperator	&		1037625	0					
ANR	1037695	Identifier	instr_len		1037625	1					
ANR	1037696	Argument	& addr		1037625	2					
ANR	1037697	UnaryOperationExpression	& addr		1037625	0					
ANR	1037698	UnaryOperator	&		1037625	0					
ANR	1037699	Identifier	addr		1037625	1					
ANR	1037700	Argument	numinstr		1037625	3					
ANR	1037701	Identifier	numinstr		1037625	0					
ANR	1037702	ExpressionStatement	addr = core -> offset	262:2:7491:7510	1037625	1	True				
ANR	1037703	AssignmentExpression	addr = core -> offset		1037625	0		=			
ANR	1037704	Identifier	addr		1037625	0					
ANR	1037705	PtrMemberAccess	core -> offset		1037625	1					
ANR	1037706	Identifier	core		1037625	0					
ANR	1037707	Identifier	offset		1037625	1					
ANR	1037708	IdentifierDeclStatement	"const int mininstrsize = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE ) ;"	263:2:7514:7596	1037625	2	True				
ANR	1037709	IdentifierDecl	"mininstrsize = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1037625	0					
ANR	1037710	IdentifierDeclType	const int		1037625	0					
ANR	1037711	Identifier	mininstrsize		1037625	1					
ANR	1037712	AssignmentExpression	"mininstrsize = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1037625	2		=			
ANR	1037713	Identifier	mininstrsize		1037625	0					
ANR	1037714	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1037625	1					
ANR	1037715	Callee	r_anal_archinfo		1037625	0					
ANR	1037716	Identifier	r_anal_archinfo		1037625	0					
ANR	1037717	ArgumentList	core -> anal		1037625	1					
ANR	1037718	Argument	core -> anal		1037625	0					
ANR	1037719	PtrMemberAccess	core -> anal		1037625	0					
ANR	1037720	Identifier	core		1037625	0					
ANR	1037721	Identifier	anal		1037625	1					
ANR	1037722	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		1037625	1					
ANR	1037723	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		1037625	0					
ANR	1037724	ForStatement	for ( i = 0 ; i < numinstr ; i ++ )		1037625	3					
ANR	1037725	ForInit	i = 0 ;	264:7:7605:7610	1037625	0	True				
ANR	1037726	AssignmentExpression	i = 0		1037625	0		=			
ANR	1037727	Identifier	i		1037625	0					
ANR	1037728	PrimaryExpression	0		1037625	1					
ANR	1037729	Condition	i < numinstr	264:14:7612:7623	1037625	1	True				
ANR	1037730	RelationalExpression	i < numinstr		1037625	0		<			
ANR	1037731	Identifier	i		1037625	0					
ANR	1037732	Identifier	numinstr		1037625	1					
ANR	1037733	PostIncDecOperationExpression	i ++	264:28:7626:7628	1037625	2	True				
ANR	1037734	Identifier	i		1037625	0					
ANR	1037735	IncDec	++		1037625	1					
ANR	1037736	CompoundStatement		24:3:773:788	1037625	3					
ANR	1037737	IdentifierDeclStatement	"ut64 prev_addr = r_core_prevop_addr_force ( core , addr , 1 ) ;"	265:3:7636:7693	1037625	0	True				
ANR	1037738	IdentifierDecl	"prev_addr = r_core_prevop_addr_force ( core , addr , 1 )"		1037625	0					
ANR	1037739	IdentifierDeclType	ut64		1037625	0					
ANR	1037740	Identifier	prev_addr		1037625	1					
ANR	1037741	AssignmentExpression	"prev_addr = r_core_prevop_addr_force ( core , addr , 1 )"		1037625	2		=			
ANR	1037742	Identifier	prev_addr		1037625	0					
ANR	1037743	CallExpression	"r_core_prevop_addr_force ( core , addr , 1 )"		1037625	1					
ANR	1037744	Callee	r_core_prevop_addr_force		1037625	0					
ANR	1037745	Identifier	r_core_prevop_addr_force		1037625	0					
ANR	1037746	ArgumentList	core		1037625	1					
ANR	1037747	Argument	core		1037625	0					
ANR	1037748	Identifier	core		1037625	0					
ANR	1037749	Argument	addr		1037625	1					
ANR	1037750	Identifier	addr		1037625	0					
ANR	1037751	Argument	1		1037625	2					
ANR	1037752	PrimaryExpression	1		1037625	0					
ANR	1037753	IfStatement	if ( prev_addr == UT64_MAX )		1037625	1					
ANR	1037754	Condition	prev_addr == UT64_MAX	266:7:7702:7722	1037625	0	True				
ANR	1037755	EqualityExpression	prev_addr == UT64_MAX		1037625	0		==			
ANR	1037756	Identifier	prev_addr		1037625	0					
ANR	1037757	Identifier	UT64_MAX		1037625	1					
ANR	1037758	CompoundStatement		18:30:649:649	1037625	1					
ANR	1037759	ExpressionStatement	prev_addr = addr - mininstrsize	267:4:7731:7762	1037625	0	True				
ANR	1037760	AssignmentExpression	prev_addr = addr - mininstrsize		1037625	0		=			
ANR	1037761	Identifier	prev_addr		1037625	0					
ANR	1037762	AdditiveExpression	addr - mininstrsize		1037625	1		-			
ANR	1037763	Identifier	addr		1037625	0					
ANR	1037764	Identifier	mininstrsize		1037625	1					
ANR	1037765	IfStatement	if ( prev_addr == UT64_MAX || prev_addr >= core -> offset )		1037625	2					
ANR	1037766	Condition	prev_addr == UT64_MAX || prev_addr >= core -> offset	269:7:7776:7825	1037625	0	True				
ANR	1037767	OrExpression	prev_addr == UT64_MAX || prev_addr >= core -> offset		1037625	0		||			
ANR	1037768	EqualityExpression	prev_addr == UT64_MAX		1037625	0		==			
ANR	1037769	Identifier	prev_addr		1037625	0					
ANR	1037770	Identifier	UT64_MAX		1037625	1					
ANR	1037771	RelationalExpression	prev_addr >= core -> offset		1037625	1		>=			
ANR	1037772	Identifier	prev_addr		1037625	0					
ANR	1037773	PtrMemberAccess	core -> offset		1037625	1					
ANR	1037774	Identifier	core		1037625	0					
ANR	1037775	Identifier	offset		1037625	1					
ANR	1037776	CompoundStatement		21:59:752:752	1037625	1					
ANR	1037777	BreakStatement	break ;	270:4:7834:7839	1037625	0	True				
ANR	1037778	IdentifierDeclStatement	RAsmOp op = { 0 } ;	272:3:7849:7864	1037625	3	True				
ANR	1037779	IdentifierDecl	op = { 0 }		1037625	0					
ANR	1037780	IdentifierDeclType	RAsmOp		1037625	0					
ANR	1037781	Identifier	op		1037625	1					
ANR	1037782	AssignmentExpression	op = { 0 }		1037625	2		=			
ANR	1037783	Identifier	op		1037625	0					
ANR	1037784	InitializerList	0		1037625	1					
ANR	1037785	PrimaryExpression	0		1037625	0					
ANR	1037786	ExpressionStatement	"r_core_seek ( core , prev_addr , 1 )"	273:3:7869:7901	1037625	4	True				
ANR	1037787	CallExpression	"r_core_seek ( core , prev_addr , 1 )"		1037625	0					
ANR	1037788	Callee	r_core_seek		1037625	0					
ANR	1037789	Identifier	r_core_seek		1037625	0					
ANR	1037790	ArgumentList	core		1037625	1					
ANR	1037791	Argument	core		1037625	0					
ANR	1037792	Identifier	core		1037625	0					
ANR	1037793	Argument	prev_addr		1037625	1					
ANR	1037794	Identifier	prev_addr		1037625	0					
ANR	1037795	Argument	1		1037625	2					
ANR	1037796	PrimaryExpression	1		1037625	0					
ANR	1037797	ExpressionStatement	"r_asm_disassemble ( core -> assembler , & op , core -> block , 32 )"	274:3:7906:7963	1037625	5	True				
ANR	1037798	CallExpression	"r_asm_disassemble ( core -> assembler , & op , core -> block , 32 )"		1037625	0					
ANR	1037799	Callee	r_asm_disassemble		1037625	0					
ANR	1037800	Identifier	r_asm_disassemble		1037625	0					
ANR	1037801	ArgumentList	core -> assembler		1037625	1					
ANR	1037802	Argument	core -> assembler		1037625	0					
ANR	1037803	PtrMemberAccess	core -> assembler		1037625	0					
ANR	1037804	Identifier	core		1037625	0					
ANR	1037805	Identifier	assembler		1037625	1					
ANR	1037806	Argument	& op		1037625	1					
ANR	1037807	UnaryOperationExpression	& op		1037625	0					
ANR	1037808	UnaryOperator	&		1037625	0					
ANR	1037809	Identifier	op		1037625	1					
ANR	1037810	Argument	core -> block		1037625	2					
ANR	1037811	PtrMemberAccess	core -> block		1037625	0					
ANR	1037812	Identifier	core		1037625	0					
ANR	1037813	Identifier	block		1037625	1					
ANR	1037814	Argument	32		1037625	3					
ANR	1037815	PrimaryExpression	32		1037625	0					
ANR	1037816	IfStatement	if ( op . size < mininstrsize )		1037625	6					
ANR	1037817	Condition	op . size < mininstrsize	275:7:7972:7993	1037625	0	True				
ANR	1037818	RelationalExpression	op . size < mininstrsize		1037625	0		<			
ANR	1037819	MemberAccess	op . size		1037625	0					
ANR	1037820	Identifier	op		1037625	0					
ANR	1037821	Identifier	size		1037625	1					
ANR	1037822	Identifier	mininstrsize		1037625	1					
ANR	1037823	CompoundStatement		27:31:920:920	1037625	1					
ANR	1037824	ExpressionStatement	op . size = mininstrsize	276:4:8002:8024	1037625	0	True				
ANR	1037825	AssignmentExpression	op . size = mininstrsize		1037625	0		=			
ANR	1037826	MemberAccess	op . size		1037625	0					
ANR	1037827	Identifier	op		1037625	0					
ANR	1037828	Identifier	size		1037625	1					
ANR	1037829	Identifier	mininstrsize		1037625	1					
ANR	1037830	ExpressionStatement	val += op . size	278:3:8034:8048	1037625	7	True				
ANR	1037831	AssignmentExpression	val += op . size		1037625	0		+=			
ANR	1037832	Identifier	val		1037625	0					
ANR	1037833	MemberAccess	op . size		1037625	1					
ANR	1037834	Identifier	op		1037625	0					
ANR	1037835	Identifier	size		1037625	1					
ANR	1037836	ExpressionStatement	addr = prev_addr	279:3:8053:8069	1037625	8	True				
ANR	1037837	AssignmentExpression	addr = prev_addr		1037625	0		=			
ANR	1037838	Identifier	addr		1037625	0					
ANR	1037839	Identifier	prev_addr		1037625	1					
ANR	1037840	ExpressionStatement	"r_core_seek ( core , addr , true )"	282:1:8079:8109	1037625	4	True				
ANR	1037841	CallExpression	"r_core_seek ( core , addr , true )"		1037625	0					
ANR	1037842	Callee	r_core_seek		1037625	0					
ANR	1037843	Identifier	r_core_seek		1037625	0					
ANR	1037844	ArgumentList	core		1037625	1					
ANR	1037845	Argument	core		1037625	0					
ANR	1037846	Identifier	core		1037625	0					
ANR	1037847	Argument	addr		1037625	1					
ANR	1037848	Identifier	addr		1037625	0					
ANR	1037849	Argument	true		1037625	2					
ANR	1037850	Identifier	true		1037625	0					
ANR	1037851	ExpressionStatement	val += ret	283:1:8112:8122	1037625	5	True				
ANR	1037852	AssignmentExpression	val += ret		1037625	0		+=			
ANR	1037853	Identifier	val		1037625	0					
ANR	1037854	Identifier	ret		1037625	1					
ANR	1037855	ReturnStatement	return val ;	284:1:8125:8135	1037625	6	True				
ANR	1037856	Identifier	val		1037625	0					
ANR	1037857	ReturnType	static int		1037625	1					
ANR	1037858	Identifier	cmd_seek_opcode_backward		1037625	2					
ANR	1037859	ParameterList	"RCore * core , int numinstr"		1037625	3					
ANR	1037860	Parameter	RCore * core	249:36:7048:7058	1037625	0	True				
ANR	1037861	ParameterType	RCore *		1037625	0					
ANR	1037862	Identifier	core		1037625	1					
ANR	1037863	Parameter	int numinstr	249:49:7061:7072	1037625	1	True				
ANR	1037864	ParameterType	int		1037625	0					
ANR	1037865	Identifier	numinstr		1037625	1					
ANR	1037866	CFGEntryNode	ENTRY		1037625		True				
ANR	1037867	CFGExitNode	EXIT		1037625		True				
ANR	1037868	Symbol	r_anal_archinfo		1037625						
ANR	1037869	Symbol	* core		1037625						
ANR	1037870	Symbol	core -> offset		1037625						
ANR	1037871	Symbol	core -> assembler		1037625						
ANR	1037872	Symbol	& op		1037625						
ANR	1037873	Symbol	& instr_len		1037625						
ANR	1037874	Symbol	core -> anal		1037625						
ANR	1037875	Symbol	numinstr		1037625						
ANR	1037876	Symbol	addr		1037625						
ANR	1037877	Symbol	r_core_prevop_addr		1037625						
ANR	1037878	Symbol	UT64_MAX		1037625						
ANR	1037879	Symbol	val		1037625						
ANR	1037880	Symbol	ret		1037625						
ANR	1037881	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		1037625						
ANR	1037882	Symbol	op		1037625						
ANR	1037883	Symbol	& addr		1037625						
ANR	1037884	Symbol	core -> block		1037625						
ANR	1037885	Symbol	i		1037625						
ANR	1037886	Symbol	prev_addr		1037625						
ANR	1037887	Symbol	core		1037625						
ANR	1037888	Symbol	r_core_prevop_addr_force		1037625						
ANR	1037889	Symbol	mininstrsize		1037625						
ANR	1037890	Symbol	r_core_asm_bwdis_len		1037625						
ANR	1037891	Symbol	true		1037625						
ANR	1037892	Symbol	op . size		1037625						
ANR	1037893	Function	cmd_seek_opcode_forward	287:0:8140:8520							
ANR	1037894	FunctionDef	"cmd_seek_opcode_forward (RCore * core , int n)"		1037893	0					
ANR	1037895	CompoundStatement		287:56:8196:8520	1037893	0					
ANR	1037896	IdentifierDeclStatement	"int i , ret , val = 0 ;"	289:1:8226:8245	1037893	0	True				
ANR	1037897	IdentifierDecl	i		1037893	0					
ANR	1037898	IdentifierDeclType	int		1037893	0					
ANR	1037899	Identifier	i		1037893	1					
ANR	1037900	IdentifierDecl	ret		1037893	1					
ANR	1037901	IdentifierDeclType	int		1037893	0					
ANR	1037902	Identifier	ret		1037893	1					
ANR	1037903	IdentifierDecl	val = 0		1037893	2					
ANR	1037904	IdentifierDeclType	int		1037893	0					
ANR	1037905	Identifier	val		1037893	1					
ANR	1037906	AssignmentExpression	val = 0		1037893	2		=			
ANR	1037907	Identifier	val		1037893	0					
ANR	1037908	PrimaryExpression	0		1037893	1					
ANR	1037909	ForStatement	for ( val = i = 0 ; i < n ; i ++ )		1037893	1					
ANR	1037910	ForInit	val = i = 0 ;	290:6:8253:8264	1037893	0	True				
ANR	1037911	AssignmentExpression	val = i = 0		1037893	0		=			
ANR	1037912	Identifier	val		1037893	0					
ANR	1037913	AssignmentExpression	i = 0		1037893	1		=			
ANR	1037914	Identifier	i		1037893	0					
ANR	1037915	PrimaryExpression	0		1037893	1					
ANR	1037916	Condition	i < n	290:19:8266:8270	1037893	1	True				
ANR	1037917	RelationalExpression	i < n		1037893	0		<			
ANR	1037918	Identifier	i		1037893	0					
ANR	1037919	Identifier	n		1037893	1					
ANR	1037920	PostIncDecOperationExpression	i ++	290:26:8273:8275	1037893	2	True				
ANR	1037921	Identifier	i		1037893	0					
ANR	1037922	IncDec	++		1037893	1					
ANR	1037923	CompoundStatement		5:2:85:95	1037893	3					
ANR	1037924	IdentifierDeclStatement	RAnalOp op ;	291:2:8282:8292	1037893	0	True				
ANR	1037925	IdentifierDecl	op		1037893	0					
ANR	1037926	IdentifierDeclType	RAnalOp		1037893	0					
ANR	1037927	Identifier	op		1037893	1					
ANR	1037928	ExpressionStatement	"ret = r_anal_op ( core -> anal , & op , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC )"	292:2:8296:8398	1037893	1	True				
ANR	1037929	AssignmentExpression	"ret = r_anal_op ( core -> anal , & op , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC )"		1037893	0		=			
ANR	1037930	Identifier	ret		1037893	0					
ANR	1037931	CallExpression	"r_anal_op ( core -> anal , & op , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC )"		1037893	1					
ANR	1037932	Callee	r_anal_op		1037893	0					
ANR	1037933	Identifier	r_anal_op		1037893	0					
ANR	1037934	ArgumentList	core -> anal		1037893	1					
ANR	1037935	Argument	core -> anal		1037893	0					
ANR	1037936	PtrMemberAccess	core -> anal		1037893	0					
ANR	1037937	Identifier	core		1037893	0					
ANR	1037938	Identifier	anal		1037893	1					
ANR	1037939	Argument	& op		1037893	1					
ANR	1037940	UnaryOperationExpression	& op		1037893	0					
ANR	1037941	UnaryOperator	&		1037893	0					
ANR	1037942	Identifier	op		1037893	1					
ANR	1037943	Argument	core -> offset		1037893	2					
ANR	1037944	PtrMemberAccess	core -> offset		1037893	0					
ANR	1037945	Identifier	core		1037893	0					
ANR	1037946	Identifier	offset		1037893	1					
ANR	1037947	Argument	core -> block		1037893	3					
ANR	1037948	PtrMemberAccess	core -> block		1037893	0					
ANR	1037949	Identifier	core		1037893	0					
ANR	1037950	Identifier	block		1037893	1					
ANR	1037951	Argument	core -> blocksize		1037893	4					
ANR	1037952	PtrMemberAccess	core -> blocksize		1037893	0					
ANR	1037953	Identifier	core		1037893	0					
ANR	1037954	Identifier	blocksize		1037893	1					
ANR	1037955	Argument	R_ANAL_OP_MASK_BASIC		1037893	5					
ANR	1037956	Identifier	R_ANAL_OP_MASK_BASIC		1037893	0					
ANR	1037957	IfStatement	if ( ret < 1 )		1037893	2					
ANR	1037958	Condition	ret < 1	294:6:8406:8412	1037893	0	True				
ANR	1037959	RelationalExpression	ret < 1		1037893	0		<			
ANR	1037960	Identifier	ret		1037893	0					
ANR	1037961	PrimaryExpression	1		1037893	1					
ANR	1037962	CompoundStatement		8:15:218:218	1037893	1					
ANR	1037963	ExpressionStatement	ret = 1	295:3:8420:8427	1037893	0	True				
ANR	1037964	AssignmentExpression	ret = 1		1037893	0		=			
ANR	1037965	Identifier	ret		1037893	0					
ANR	1037966	PrimaryExpression	1		1037893	1					
ANR	1037967	ExpressionStatement	"r_core_seek_delta ( core , ret )"	297:2:8435:8464	1037893	3	True				
ANR	1037968	CallExpression	"r_core_seek_delta ( core , ret )"		1037893	0					
ANR	1037969	Callee	r_core_seek_delta		1037893	0					
ANR	1037970	Identifier	r_core_seek_delta		1037893	0					
ANR	1037971	ArgumentList	core		1037893	1					
ANR	1037972	Argument	core		1037893	0					
ANR	1037973	Identifier	core		1037893	0					
ANR	1037974	Argument	ret		1037893	1					
ANR	1037975	Identifier	ret		1037893	0					
ANR	1037976	ExpressionStatement	r_anal_op_fini ( & op )	298:2:8468:8488	1037893	4	True				
ANR	1037977	CallExpression	r_anal_op_fini ( & op )		1037893	0					
ANR	1037978	Callee	r_anal_op_fini		1037893	0					
ANR	1037979	Identifier	r_anal_op_fini		1037893	0					
ANR	1037980	ArgumentList	& op		1037893	1					
ANR	1037981	Argument	& op		1037893	0					
ANR	1037982	UnaryOperationExpression	& op		1037893	0					
ANR	1037983	UnaryOperator	&		1037893	0					
ANR	1037984	Identifier	op		1037893	1					
ANR	1037985	ExpressionStatement	val += ret	299:2:8492:8502	1037893	5	True				
ANR	1037986	AssignmentExpression	val += ret		1037893	0		+=			
ANR	1037987	Identifier	val		1037893	0					
ANR	1037988	Identifier	ret		1037893	1					
ANR	1037989	ReturnStatement	return val ;	301:1:8508:8518	1037893	2	True				
ANR	1037990	Identifier	val		1037893	0					
ANR	1037991	ReturnType	static int		1037893	1					
ANR	1037992	Identifier	cmd_seek_opcode_forward		1037893	2					
ANR	1037993	ParameterList	"RCore * core , int n"		1037893	3					
ANR	1037994	Parameter	RCore * core	287:36:8176:8186	1037893	0	True				
ANR	1037995	ParameterType	RCore *		1037893	0					
ANR	1037996	Identifier	core		1037893	1					
ANR	1037997	Parameter	int n	287:49:8189:8193	1037893	1	True				
ANR	1037998	ParameterType	int		1037893	0					
ANR	1037999	Identifier	n		1037893	1					
ANR	1038000	CFGEntryNode	ENTRY		1037893		True				
ANR	1038001	CFGExitNode	EXIT		1037893		True				
ANR	1038002	Symbol	val		1037893						
ANR	1038003	Symbol	ret		1037893						
ANR	1038004	Symbol	core -> blocksize		1037893						
ANR	1038005	Symbol	op		1037893						
ANR	1038006	Symbol	core -> block		1037893						
ANR	1038007	Symbol	* core		1037893						
ANR	1038008	Symbol	i		1037893						
ANR	1038009	Symbol	core -> offset		1037893						
ANR	1038010	Symbol	& op		1037893						
ANR	1038011	Symbol	R_ANAL_OP_MASK_BASIC		1037893						
ANR	1038012	Symbol	core -> anal		1037893						
ANR	1038013	Symbol	n		1037893						
ANR	1038014	Symbol	core		1037893						
ANR	1038015	Symbol	r_anal_op		1037893						
ANR	1038016	Function	cmd_seek_opcode	304:0:8523:8894							
ANR	1038017	FunctionDef	"cmd_seek_opcode (RCore * core , const char * input)"		1038016	0					
ANR	1038018	CompoundStatement		304:60:8583:8894	1038016	0					
ANR	1038019	IfStatement	if ( input [ 0 ] == '?' )		1038016	0					
ANR	1038020	Condition	input [ 0 ] == '?'	305:5:8590:8604	1038016	0	True				
ANR	1038021	EqualityExpression	input [ 0 ] == '?'		1038016	0		==			
ANR	1038022	ArrayIndexing	input [ 0 ]		1038016	0					
ANR	1038023	Identifier	input		1038016	0					
ANR	1038024	PrimaryExpression	0		1038016	1					
ANR	1038025	PrimaryExpression	'?'		1038016	1					
ANR	1038026	CompoundStatement		2:22:23:23	1038016	1					
ANR	1038027	ExpressionStatement	"eprintf ( ""Usage: so [-][n]\\n"" )"	306:2:8611:8641	1038016	0	True				
ANR	1038028	CallExpression	"eprintf ( ""Usage: so [-][n]\\n"" )"		1038016	0					
ANR	1038029	Callee	eprintf		1038016	0					
ANR	1038030	Identifier	eprintf		1038016	0					
ANR	1038031	ArgumentList	"""Usage: so [-][n]\\n"""		1038016	1					
ANR	1038032	Argument	"""Usage: so [-][n]\\n"""		1038016	0					
ANR	1038033	PrimaryExpression	"""Usage: so [-][n]\\n"""		1038016	0					
ANR	1038034	ReturnStatement	return ;	307:2:8645:8651	1038016	1	True				
ANR	1038035	IfStatement	"if ( ! strcmp ( input , ""-"" ) )"		1038016	1					
ANR	1038036	Condition	"! strcmp ( input , ""-"" )"	309:5:8661:8680	1038016	0	True				
ANR	1038037	UnaryOperationExpression	"! strcmp ( input , ""-"" )"		1038016	0					
ANR	1038038	UnaryOperator	!		1038016	0					
ANR	1038039	CallExpression	"strcmp ( input , ""-"" )"		1038016	1					
ANR	1038040	Callee	strcmp		1038016	0					
ANR	1038041	Identifier	strcmp		1038016	0					
ANR	1038042	ArgumentList	input		1038016	1					
ANR	1038043	Argument	input		1038016	0					
ANR	1038044	Identifier	input		1038016	0					
ANR	1038045	Argument	"""-"""		1038016	1					
ANR	1038046	PrimaryExpression	"""-"""		1038016	0					
ANR	1038047	CompoundStatement		6:27:99:99	1038016	1					
ANR	1038048	ExpressionStatement	"input = ""-1"""	310:2:8687:8699	1038016	0	True				
ANR	1038049	AssignmentExpression	"input = ""-1"""		1038016	0		=			
ANR	1038050	Identifier	input		1038016	0					
ANR	1038051	PrimaryExpression	"""-1"""		1038016	1					
ANR	1038052	IdentifierDeclStatement	"int n = r_num_math ( core -> num , input ) ;"	312:1:8705:8742	1038016	2	True				
ANR	1038053	IdentifierDecl	"n = r_num_math ( core -> num , input )"		1038016	0					
ANR	1038054	IdentifierDeclType	int		1038016	0					
ANR	1038055	Identifier	n		1038016	1					
ANR	1038056	AssignmentExpression	"n = r_num_math ( core -> num , input )"		1038016	2		=			
ANR	1038057	Identifier	n		1038016	0					
ANR	1038058	CallExpression	"r_num_math ( core -> num , input )"		1038016	1					
ANR	1038059	Callee	r_num_math		1038016	0					
ANR	1038060	Identifier	r_num_math		1038016	0					
ANR	1038061	ArgumentList	core -> num		1038016	1					
ANR	1038062	Argument	core -> num		1038016	0					
ANR	1038063	PtrMemberAccess	core -> num		1038016	0					
ANR	1038064	Identifier	core		1038016	0					
ANR	1038065	Identifier	num		1038016	1					
ANR	1038066	Argument	input		1038016	1					
ANR	1038067	Identifier	input		1038016	0					
ANR	1038068	IfStatement	if ( n == 0 )		1038016	3					
ANR	1038069	Condition	n == 0	313:5:8749:8754	1038016	0	True				
ANR	1038070	EqualityExpression	n == 0		1038016	0		==			
ANR	1038071	Identifier	n		1038016	0					
ANR	1038072	PrimaryExpression	0		1038016	1					
ANR	1038073	CompoundStatement		10:13:173:173	1038016	1					
ANR	1038074	ExpressionStatement	n = 1	314:2:8761:8766	1038016	0	True				
ANR	1038075	AssignmentExpression	n = 1		1038016	0		=			
ANR	1038076	Identifier	n		1038016	0					
ANR	1038077	PrimaryExpression	1		1038016	1					
ANR	1038078	IdentifierDeclStatement	"int val = ( n < 0 ) ? cmd_seek_opcode_backward ( core , - n ) : cmd_seek_opcode_forward ( core , n ) ;"	316:1:8772:8867	1038016	4	True				
ANR	1038079	IdentifierDecl	"val = ( n < 0 ) ? cmd_seek_opcode_backward ( core , - n ) : cmd_seek_opcode_forward ( core , n )"		1038016	0					
ANR	1038080	IdentifierDeclType	int		1038016	0					
ANR	1038081	Identifier	val		1038016	1					
ANR	1038082	AssignmentExpression	"val = ( n < 0 ) ? cmd_seek_opcode_backward ( core , - n ) : cmd_seek_opcode_forward ( core , n )"		1038016	2		=			
ANR	1038083	Identifier	val		1038016	0					
ANR	1038084	ConditionalExpression	"( n < 0 ) ? cmd_seek_opcode_backward ( core , - n ) : cmd_seek_opcode_forward ( core , n )"		1038016	1					
ANR	1038085	Condition	n < 0		1038016	0					
ANR	1038086	RelationalExpression	n < 0		1038016	0		<			
ANR	1038087	Identifier	n		1038016	0					
ANR	1038088	PrimaryExpression	0		1038016	1					
ANR	1038089	CallExpression	"cmd_seek_opcode_backward ( core , - n )"		1038016	1					
ANR	1038090	Callee	cmd_seek_opcode_backward		1038016	0					
ANR	1038091	Identifier	cmd_seek_opcode_backward		1038016	0					
ANR	1038092	ArgumentList	core		1038016	1					
ANR	1038093	Argument	core		1038016	0					
ANR	1038094	Identifier	core		1038016	0					
ANR	1038095	Argument	- n		1038016	1					
ANR	1038096	UnaryOperationExpression	- n		1038016	0					
ANR	1038097	UnaryOperator	-		1038016	0					
ANR	1038098	Identifier	n		1038016	1					
ANR	1038099	CallExpression	"cmd_seek_opcode_forward ( core , n )"		1038016	2					
ANR	1038100	Callee	cmd_seek_opcode_forward		1038016	0					
ANR	1038101	Identifier	cmd_seek_opcode_forward		1038016	0					
ANR	1038102	ArgumentList	core		1038016	1					
ANR	1038103	Argument	core		1038016	0					
ANR	1038104	Identifier	core		1038016	0					
ANR	1038105	Argument	n		1038016	1					
ANR	1038106	Identifier	n		1038016	0					
ANR	1038107	ExpressionStatement	core -> num -> value = val	319:1:8870:8892	1038016	5	True				
ANR	1038108	AssignmentExpression	core -> num -> value = val		1038016	0		=			
ANR	1038109	PtrMemberAccess	core -> num -> value		1038016	0					
ANR	1038110	PtrMemberAccess	core -> num		1038016	0					
ANR	1038111	Identifier	core		1038016	0					
ANR	1038112	Identifier	num		1038016	1					
ANR	1038113	Identifier	value		1038016	1					
ANR	1038114	Identifier	val		1038016	1					
ANR	1038115	ReturnType	static void		1038016	1					
ANR	1038116	Identifier	cmd_seek_opcode		1038016	2					
ANR	1038117	ParameterList	"RCore * core , const char * input"		1038016	3					
ANR	1038118	Parameter	RCore * core	304:28:8551:8561	1038016	0	True				
ANR	1038119	ParameterType	RCore *		1038016	0					
ANR	1038120	Identifier	core		1038016	1					
ANR	1038121	Parameter	const char * input	304:41:8564:8580	1038016	1	True				
ANR	1038122	ParameterType	const char *		1038016	0					
ANR	1038123	Identifier	input		1038016	1					
ANR	1038124	CFGEntryNode	ENTRY		1038016		True				
ANR	1038125	CFGExitNode	EXIT		1038016		True				
ANR	1038126	Symbol	strcmp		1038016						
ANR	1038127	Symbol	val		1038016						
ANR	1038128	Symbol	* input		1038016						
ANR	1038129	Symbol	* core		1038016						
ANR	1038130	Symbol	core -> num -> value		1038016						
ANR	1038131	Symbol	n		1038016						
ANR	1038132	Symbol	r_num_math		1038016						
ANR	1038133	Symbol	core		1038016						
ANR	1038134	Symbol	input		1038016						
ANR	1038135	Symbol	cmd_seek_opcode_backward		1038016						
ANR	1038136	Symbol	* core -> num		1038016						
ANR	1038137	Symbol	core -> num		1038016						
ANR	1038138	Symbol	cmd_seek_opcode_forward		1038016						
ANR	1038139	Symbol	* * core		1038016						
ANR	1038140	Function	cmd_seek	322:0:8897:20855							
ANR	1038141	FunctionDef	"cmd_seek (void * data , const char * input)"		1038140	0					
ANR	1038142	CompoundStatement		322:51:8948:20855	1038140	0					
ANR	1038143	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	323:1:8951:8979	1038140	0	True				
ANR	1038144	IdentifierDecl	* core = ( RCore * ) data		1038140	0					
ANR	1038145	IdentifierDeclType	RCore *		1038140	0					
ANR	1038146	Identifier	core		1038140	1					
ANR	1038147	AssignmentExpression	* core = ( RCore * ) data		1038140	2		=			
ANR	1038148	Identifier	core		1038140	0					
ANR	1038149	CastExpression	( RCore * ) data		1038140	1					
ANR	1038150	CastTarget	RCore *		1038140	0					
ANR	1038151	Identifier	data		1038140	1					
ANR	1038152	IdentifierDeclStatement	"char * cmd , * p ;"	324:1:8982:8995	1038140	1	True				
ANR	1038153	IdentifierDecl	* cmd		1038140	0					
ANR	1038154	IdentifierDeclType	char *		1038140	0					
ANR	1038155	Identifier	cmd		1038140	1					
ANR	1038156	IdentifierDecl	* p		1038140	1					
ANR	1038157	IdentifierDeclType	char *		1038140	0					
ANR	1038158	Identifier	p		1038140	1					
ANR	1038159	IdentifierDeclStatement	ut64 off = core -> offset ;	325:1:8998:9021	1038140	2	True				
ANR	1038160	IdentifierDecl	off = core -> offset		1038140	0					
ANR	1038161	IdentifierDeclType	ut64		1038140	0					
ANR	1038162	Identifier	off		1038140	1					
ANR	1038163	AssignmentExpression	off = core -> offset		1038140	2		=			
ANR	1038164	Identifier	off		1038140	0					
ANR	1038165	PtrMemberAccess	core -> offset		1038140	1					
ANR	1038166	Identifier	core		1038140	0					
ANR	1038167	Identifier	offset		1038140	1					
ANR	1038168	IfStatement	if ( ! * input )		1038140	3					
ANR	1038169	Condition	! * input	327:5:9029:9035	1038140	0	True				
ANR	1038170	UnaryOperationExpression	! * input		1038140	0					
ANR	1038171	UnaryOperator	!		1038140	0					
ANR	1038172	UnaryOperationExpression	* input		1038140	1					
ANR	1038173	UnaryOperator	*		1038140	0					
ANR	1038174	Identifier	input		1038140	1					
ANR	1038175	CompoundStatement		6:14:89:89	1038140	1					
ANR	1038176	Statement	r_cons_printf	328:2:9042:9054	1038140	0	True				
ANR	1038177	Statement	(	328:16:9056:9056	1038140	1	True				
ANR	1038178	Statement	"""0x%"""	328:17:9057:9061	1038140	2	True				
ANR	1038179	Statement	PFMT64x	328:22:9062:9068	1038140	3	True				
ANR	1038180	Statement	"""\\n"""	328:30:9070:9073	1038140	4	True				
ANR	1038181	Statement	","	328:34:9074:9074	1038140	5	True				
ANR	1038182	Statement	core	328:36:9076:9079	1038140	6	True				
ANR	1038183	Statement	->	328:40:9080:9081	1038140	7	True				
ANR	1038184	Statement	offset	328:42:9082:9087	1038140	8	True				
ANR	1038185	Statement	)	328:48:9088:9088	1038140	9	True				
ANR	1038186	ExpressionStatement		328:49:9089:9089	1038140	10	True				
ANR	1038187	ReturnStatement	return 0 ;	329:2:9093:9101	1038140	11	True				
ANR	1038188	PrimaryExpression	0		1038140	0					
ANR	1038189	IdentifierDeclStatement	char * ptr ;	331:1:9107:9116	1038140	4	True				
ANR	1038190	IdentifierDecl	* ptr		1038140	0					
ANR	1038191	IdentifierDeclType	char *		1038140	0					
ANR	1038192	Identifier	ptr		1038140	1					
ANR	1038193	IfStatement	"if ( ( ptr = strstr ( input , ""+."" ) ) != NULL )"		1038140	5					
ANR	1038194	Condition	"( ptr = strstr ( input , ""+."" ) ) != NULL"	332:5:9123:9158	1038140	0	True				
ANR	1038195	EqualityExpression	"( ptr = strstr ( input , ""+."" ) ) != NULL"		1038140	0		!=			
ANR	1038196	AssignmentExpression	"ptr = strstr ( input , ""+."" )"		1038140	0		=			
ANR	1038197	Identifier	ptr		1038140	0					
ANR	1038198	CallExpression	"strstr ( input , ""+."" )"		1038140	1					
ANR	1038199	Callee	strstr		1038140	0					
ANR	1038200	Identifier	strstr		1038140	0					
ANR	1038201	ArgumentList	input		1038140	1					
ANR	1038202	Argument	input		1038140	0					
ANR	1038203	Identifier	input		1038140	0					
ANR	1038204	Argument	"""+."""		1038140	1					
ANR	1038205	PrimaryExpression	"""+."""		1038140	0					
ANR	1038206	Identifier	NULL		1038140	1					
ANR	1038207	CompoundStatement		12:2:216:242	1038140	1					
ANR	1038208	IdentifierDeclStatement	char * dup = strdup ( input ) ;	333:2:9165:9191	1038140	0	True				
ANR	1038209	IdentifierDecl	* dup = strdup ( input )		1038140	0					
ANR	1038210	IdentifierDeclType	char *		1038140	0					
ANR	1038211	Identifier	dup		1038140	1					
ANR	1038212	AssignmentExpression	* dup = strdup ( input )		1038140	2		=			
ANR	1038213	Identifier	dup		1038140	0					
ANR	1038214	CallExpression	strdup ( input )		1038140	1					
ANR	1038215	Callee	strdup		1038140	0					
ANR	1038216	Identifier	strdup		1038140	0					
ANR	1038217	ArgumentList	input		1038140	1					
ANR	1038218	Argument	input		1038140	0					
ANR	1038219	Identifier	input		1038140	0					
ANR	1038220	ExpressionStatement	dup [ ptr - input ] = x00	334:2:9195:9220	1038140	1	True				
ANR	1038221	AssignmentExpression	dup [ ptr - input ] = x00		1038140	0		=			
ANR	1038222	ArrayIndexing	dup [ ptr - input ]		1038140	0					
ANR	1038223	Identifier	dup		1038140	0					
ANR	1038224	AdditiveExpression	ptr - input		1038140	1		-			
ANR	1038225	Identifier	ptr		1038140	0					
ANR	1038226	Identifier	input		1038140	1					
ANR	1038227	Identifier	x00		1038140	1					
ANR	1038228	ExpressionStatement	"off = r_num_math ( core -> num , dup + 1 )"	335:2:9224:9261	1038140	2	True				
ANR	1038229	AssignmentExpression	"off = r_num_math ( core -> num , dup + 1 )"		1038140	0		=			
ANR	1038230	Identifier	off		1038140	0					
ANR	1038231	CallExpression	"r_num_math ( core -> num , dup + 1 )"		1038140	1					
ANR	1038232	Callee	r_num_math		1038140	0					
ANR	1038233	Identifier	r_num_math		1038140	0					
ANR	1038234	ArgumentList	core -> num		1038140	1					
ANR	1038235	Argument	core -> num		1038140	0					
ANR	1038236	PtrMemberAccess	core -> num		1038140	0					
ANR	1038237	Identifier	core		1038140	0					
ANR	1038238	Identifier	num		1038140	1					
ANR	1038239	Argument	dup + 1		1038140	1					
ANR	1038240	AdditiveExpression	dup + 1		1038140	0		+			
ANR	1038241	Identifier	dup		1038140	0					
ANR	1038242	PrimaryExpression	1		1038140	1					
ANR	1038243	ExpressionStatement	core -> offset = off	336:2:9265:9283	1038140	3	True				
ANR	1038244	AssignmentExpression	core -> offset = off		1038140	0		=			
ANR	1038245	PtrMemberAccess	core -> offset		1038140	0					
ANR	1038246	Identifier	core		1038140	0					
ANR	1038247	Identifier	offset		1038140	1					
ANR	1038248	Identifier	off		1038140	1					
ANR	1038249	ExpressionStatement	free ( dup )	337:2:9287:9297	1038140	4	True				
ANR	1038250	CallExpression	free ( dup )		1038140	0					
ANR	1038251	Callee	free		1038140	0					
ANR	1038252	Identifier	free		1038140	0					
ANR	1038253	ArgumentList	dup		1038140	1					
ANR	1038254	Argument	dup		1038140	0					
ANR	1038255	Identifier	dup		1038140	0					
ANR	1038256	IdentifierDeclStatement	"const char * inputnum = strchr ( input , ' ' ) ;"	339:1:9303:9345	1038140	6	True				
ANR	1038257	IdentifierDecl	"* inputnum = strchr ( input , ' ' )"		1038140	0					
ANR	1038258	IdentifierDeclType	const char *		1038140	0					
ANR	1038259	Identifier	inputnum		1038140	1					
ANR	1038260	AssignmentExpression	"* inputnum = strchr ( input , ' ' )"		1038140	2		=			
ANR	1038261	Identifier	inputnum		1038140	0					
ANR	1038262	CallExpression	"strchr ( input , ' ' )"		1038140	1					
ANR	1038263	Callee	strchr		1038140	0					
ANR	1038264	Identifier	strchr		1038140	0					
ANR	1038265	ArgumentList	input		1038140	1					
ANR	1038266	Argument	input		1038140	0					
ANR	1038267	Identifier	input		1038140	0					
ANR	1038268	Argument	' '		1038140	1					
ANR	1038269	PrimaryExpression	' '		1038140	0					
ANR	1038270	IfStatement	"if ( r_str_cmp ( input , ""ort"" , 3 ) )"		1038140	7					
ANR	1038271	Condition	"r_str_cmp ( input , ""ort"" , 3 )"	340:5:9352:9378	1038140	0	True				
ANR	1038272	CallExpression	"r_str_cmp ( input , ""ort"" , 3 )"		1038140	0					
ANR	1038273	Callee	r_str_cmp		1038140	0					
ANR	1038274	Identifier	r_str_cmp		1038140	0					
ANR	1038275	ArgumentList	input		1038140	1					
ANR	1038276	Argument	input		1038140	0					
ANR	1038277	Identifier	input		1038140	0					
ANR	1038278	Argument	"""ort"""		1038140	1					
ANR	1038279	PrimaryExpression	"""ort"""		1038140	0					
ANR	1038280	Argument	3		1038140	2					
ANR	1038281	PrimaryExpression	3		1038140	0					
ANR	1038282	CompoundStatement		20:2:484:537	1038140	1					
ANR	1038283	IdentifierDeclStatement	const char * u_num = inputnum ? inputnum + 1 : input + 1 ;	341:2:9433:9486	1038140	0	True				
ANR	1038284	IdentifierDecl	* u_num = inputnum ? inputnum + 1 : input + 1		1038140	0					
ANR	1038285	IdentifierDeclType	const char *		1038140	0					
ANR	1038286	Identifier	u_num		1038140	1					
ANR	1038287	AssignmentExpression	* u_num = inputnum ? inputnum + 1 : input + 1		1038140	2		=			
ANR	1038288	Identifier	u_num		1038140	0					
ANR	1038289	ConditionalExpression	inputnum ? inputnum + 1 : input + 1		1038140	1					
ANR	1038290	Condition	inputnum		1038140	0					
ANR	1038291	Identifier	inputnum		1038140	0					
ANR	1038292	AdditiveExpression	inputnum + 1		1038140	1		+			
ANR	1038293	Identifier	inputnum		1038140	0					
ANR	1038294	PrimaryExpression	1		1038140	1					
ANR	1038295	AdditiveExpression	input + 1		1038140	2		+			
ANR	1038296	Identifier	input		1038140	0					
ANR	1038297	PrimaryExpression	1		1038140	1					
ANR	1038298	ExpressionStatement	"off = r_num_math ( core -> num , u_num )"	342:2:9490:9525	1038140	1	True				
ANR	1038299	AssignmentExpression	"off = r_num_math ( core -> num , u_num )"		1038140	0		=			
ANR	1038300	Identifier	off		1038140	0					
ANR	1038301	CallExpression	"r_num_math ( core -> num , u_num )"		1038140	1					
ANR	1038302	Callee	r_num_math		1038140	0					
ANR	1038303	Identifier	r_num_math		1038140	0					
ANR	1038304	ArgumentList	core -> num		1038140	1					
ANR	1038305	Argument	core -> num		1038140	0					
ANR	1038306	PtrMemberAccess	core -> num		1038140	0					
ANR	1038307	Identifier	core		1038140	0					
ANR	1038308	Identifier	num		1038140	1					
ANR	1038309	Argument	u_num		1038140	1					
ANR	1038310	Identifier	u_num		1038140	0					
ANR	1038311	IfStatement	if ( * u_num == '-' )		1038140	2					
ANR	1038312	Condition	* u_num == '-'	343:6:9533:9545	1038140	0	True				
ANR	1038313	EqualityExpression	* u_num == '-'		1038140	0		==			
ANR	1038314	UnaryOperationExpression	* u_num		1038140	0					
ANR	1038315	UnaryOperator	*		1038140	0					
ANR	1038316	Identifier	u_num		1038140	1					
ANR	1038317	PrimaryExpression	'-'		1038140	1					
ANR	1038318	CompoundStatement		22:21:599:599	1038140	1					
ANR	1038319	ExpressionStatement	off = - ( st64 ) off	344:3:9553:9569	1038140	0	True				
ANR	1038320	AssignmentExpression	off = - ( st64 ) off		1038140	0		=			
ANR	1038321	Identifier	off		1038140	0					
ANR	1038322	UnaryOperationExpression	- ( st64 ) off		1038140	1					
ANR	1038323	UnaryOperator	-		1038140	0					
ANR	1038324	CastExpression	( st64 ) off		1038140	1					
ANR	1038325	CastTarget	st64		1038140	0					
ANR	1038326	Identifier	off		1038140	1					
ANR	1038327	IfStatement	if ( input [ 0 ] == ' ' )		1038140	8					
ANR	1038328	Condition	input [ 0 ] == ' '	349:5:9606:9620	1038140	0	True				
ANR	1038329	EqualityExpression	input [ 0 ] == ' '		1038140	0		==			
ANR	1038330	ArrayIndexing	input [ 0 ]		1038140	0					
ANR	1038331	Identifier	input		1038140	0					
ANR	1038332	PrimaryExpression	0		1038140	1					
ANR	1038333	PrimaryExpression	' '		1038140	1					
ANR	1038334	CompoundStatement		28:22:674:674	1038140	1					
ANR	1038335	SwitchStatement	switch ( input [ 1 ] )		1038140	0					
ANR	1038336	Condition	input [ 1 ]	350:10:9635:9642	1038140	0	True				
ANR	1038337	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1038338	Identifier	input		1038140	0					
ANR	1038339	PrimaryExpression	1		1038140	1					
ANR	1038340	CompoundStatement		29:20:696:696	1038140	1					
ANR	1038341	Label	case '-' :	351:2:9649:9657	1038140	0	True				
ANR	1038342	Label	case '+' :	354:2:9696:9704	1038140	1	True				
ANR	1038343	ExpressionStatement	input ++	355:3:9709:9716	1038140	2	True				
ANR	1038344	PostIncDecOperationExpression	input ++		1038140	0					
ANR	1038345	Identifier	input		1038140	0					
ANR	1038346	IncDec	++		1038140	1					
ANR	1038347	BreakStatement	break ;	356:3:9721:9726	1038140	3	True				
ANR	1038348	IdentifierDeclStatement	bool silent = false ;	360:1:9743:9762	1038140	9	True				
ANR	1038349	IdentifierDecl	silent = false		1038140	0					
ANR	1038350	IdentifierDeclType	bool		1038140	0					
ANR	1038351	Identifier	silent		1038140	1					
ANR	1038352	AssignmentExpression	silent = false		1038140	2		=			
ANR	1038353	Identifier	false		1038140	0					
ANR	1038354	Identifier	false		1038140	1					
ANR	1038355	IfStatement	if ( * input == 's' )		1038140	10					
ANR	1038356	Condition	* input == 's'	361:5:9769:9781	1038140	0	True				
ANR	1038357	EqualityExpression	* input == 's'		1038140	0		==			
ANR	1038358	UnaryOperationExpression	* input		1038140	0					
ANR	1038359	UnaryOperator	*		1038140	0					
ANR	1038360	Identifier	input		1038140	1					
ANR	1038361	PrimaryExpression	's'		1038140	1					
ANR	1038362	CompoundStatement		40:20:835:835	1038140	1					
ANR	1038363	ExpressionStatement	silent = true	362:2:9788:9801	1038140	0	True				
ANR	1038364	AssignmentExpression	silent = true		1038140	0		=			
ANR	1038365	Identifier	silent		1038140	0					
ANR	1038366	Identifier	true		1038140	1					
ANR	1038367	ExpressionStatement	input ++	363:2:9805:9812	1038140	1	True				
ANR	1038368	PostIncDecOperationExpression	input ++		1038140	0					
ANR	1038369	Identifier	input		1038140	0					
ANR	1038370	IncDec	++		1038140	1					
ANR	1038371	IfStatement	if ( * input == '?' )		1038140	2					
ANR	1038372	Condition	* input == '?'	364:6:9820:9832	1038140	0	True				
ANR	1038373	EqualityExpression	* input == '?'		1038140	0		==			
ANR	1038374	UnaryOperationExpression	* input		1038140	0					
ANR	1038375	UnaryOperator	*		1038140	0					
ANR	1038376	Identifier	input		1038140	1					
ANR	1038377	PrimaryExpression	'?'		1038140	1					
ANR	1038378	CompoundStatement		43:21:886:886	1038140	1					
ANR	1038379	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ss )"	365:3:9840:9875	1038140	0	True				
ANR	1038380	CallExpression	"r_core_cmd_help ( core , help_msg_ss )"		1038140	0					
ANR	1038381	Callee	r_core_cmd_help		1038140	0					
ANR	1038382	Identifier	r_core_cmd_help		1038140	0					
ANR	1038383	ArgumentList	core		1038140	1					
ANR	1038384	Argument	core		1038140	0					
ANR	1038385	Identifier	core		1038140	0					
ANR	1038386	Argument	help_msg_ss		1038140	1					
ANR	1038387	Identifier	help_msg_ss		1038140	0					
ANR	1038388	ReturnStatement	return 0 ;	366:3:9880:9888	1038140	1	True				
ANR	1038389	PrimaryExpression	0		1038140	0					
ANR	1038390	SwitchStatement	switch ( * input )		1038140	11					
ANR	1038391	Condition	* input	370:9:9907:9912	1038140	0	True				
ANR	1038392	UnaryOperationExpression	* input		1038140	0					
ANR	1038393	UnaryOperator	*		1038140	0					
ANR	1038394	Identifier	input		1038140	1					
ANR	1038395	CompoundStatement		49:17:966:966	1038140	1					
ANR	1038396	Label	case 'r' :	371:1:9918:9926	1038140	0	True				
ANR	1038397	IfStatement	if ( input [ 1 ] && input [ 2 ] )		1038140	1					
ANR	1038398	Condition	input [ 1 ] && input [ 2 ]	372:6:9942:9961	1038140	0	True				
ANR	1038399	AndExpression	input [ 1 ] && input [ 2 ]		1038140	0		&&			
ANR	1038400	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1038401	Identifier	input		1038140	0					
ANR	1038402	PrimaryExpression	1		1038140	1					
ANR	1038403	ArrayIndexing	input [ 2 ]		1038140	1					
ANR	1038404	Identifier	input		1038140	0					
ANR	1038405	PrimaryExpression	2		1038140	1					
ANR	1038406	CompoundStatement		51:28:1015:1015	1038140	1					
ANR	1038407	ExpressionStatement	"seek_to_register ( core , input + 2 , silent )"	373:3:9969:10011	1038140	0	True				
ANR	1038408	CallExpression	"seek_to_register ( core , input + 2 , silent )"		1038140	0					
ANR	1038409	Callee	seek_to_register		1038140	0					
ANR	1038410	Identifier	seek_to_register		1038140	0					
ANR	1038411	ArgumentList	core		1038140	1					
ANR	1038412	Argument	core		1038140	0					
ANR	1038413	Identifier	core		1038140	0					
ANR	1038414	Argument	input + 2		1038140	1					
ANR	1038415	AdditiveExpression	input + 2		1038140	0		+			
ANR	1038416	Identifier	input		1038140	0					
ANR	1038417	PrimaryExpression	2		1038140	1					
ANR	1038418	Argument	silent		1038140	2					
ANR	1038419	Identifier	silent		1038140	0					
ANR	1038420	ElseStatement	else		1038140	0					
ANR	1038421	CompoundStatement		53:9:1073:1073	1038140	0					
ANR	1038422	ExpressionStatement	"eprintf ( ""|Usage| 'sr PC' seek to program counter register\\n"" )"	375:3:10027:10089	1038140	0	True				
ANR	1038423	CallExpression	"eprintf ( ""|Usage| 'sr PC' seek to program counter register\\n"" )"		1038140	0					
ANR	1038424	Callee	eprintf		1038140	0					
ANR	1038425	Identifier	eprintf		1038140	0					
ANR	1038426	ArgumentList	"""|Usage| 'sr PC' seek to program counter register\\n"""		1038140	1					
ANR	1038427	Argument	"""|Usage| 'sr PC' seek to program counter register\\n"""		1038140	0					
ANR	1038428	PrimaryExpression	"""|Usage| 'sr PC' seek to program counter register\\n"""		1038140	0					
ANR	1038429	BreakStatement	break ;	377:2:10097:10102	1038140	2	True				
ANR	1038430	Label	case 'C' :	378:1:10105:10113	1038140	3	True				
ANR	1038431	IfStatement	if ( input [ 1 ] == '*' )		1038140	4					
ANR	1038432	Condition	input [ 1 ] == '*'	379:6:10129:10143	1038140	0	True				
ANR	1038433	EqualityExpression	input [ 1 ] == '*'		1038140	0		==			
ANR	1038434	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1038435	Identifier	input		1038140	0					
ANR	1038436	PrimaryExpression	1		1038140	1					
ANR	1038437	PrimaryExpression	'*'		1038140	1					
ANR	1038438	CompoundStatement		58:23:1197:1197	1038140	1					
ANR	1038439	ExpressionStatement	"r_core_cmd0 ( core , ""C*~^\\""CC"" )"	380:3:10160:10190	1038140	0	True				
ANR	1038440	CallExpression	"r_core_cmd0 ( core , ""C*~^\\""CC"" )"		1038140	0					
ANR	1038441	Callee	r_core_cmd0		1038140	0					
ANR	1038442	Identifier	r_core_cmd0		1038140	0					
ANR	1038443	ArgumentList	core		1038140	1					
ANR	1038444	Argument	core		1038140	0					
ANR	1038445	Identifier	core		1038140	0					
ANR	1038446	Argument	"""C*~^\\""CC"""		1038140	1					
ANR	1038447	PrimaryExpression	"""C*~^\\""CC"""		1038140	0					
ANR	1038448	ElseStatement	else		1038140	0					
ANR	1038449	IfStatement	if ( input [ 1 ] == ' ' )		1038140	0					
ANR	1038450	Condition	input [ 1 ] == ' '	381:13:10205:10219	1038140	0	True				
ANR	1038451	EqualityExpression	input [ 1 ] == ' '		1038140	0		==			
ANR	1038452	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1038453	Identifier	input		1038140	0					
ANR	1038454	PrimaryExpression	1		1038140	1					
ANR	1038455	PrimaryExpression	' '		1038140	1					
ANR	1038456	CompoundStatement		73:3:1527:1556	1038140	1					
ANR	1038457	ClassDefStatement	struct { ut64 addr ; char * str ; } MetaCallback ;	382:11:10235:10291	1038140	0	True				
ANR	1038458	IdentifierDecl	MetaCallback		1038140	0					
ANR	1038459	IdentifierDeclType			1038140	0					
ANR	1038460	Identifier	MetaCallback		1038140	1					
ANR	1038461	IdentifierDeclStatement	int count = 0 ;	386:3:10296:10309	1038140	1	True				
ANR	1038462	IdentifierDecl	count = 0		1038140	0					
ANR	1038463	IdentifierDeclType	int		1038140	0					
ANR	1038464	Identifier	count		1038140	1					
ANR	1038465	AssignmentExpression	count = 0		1038140	2		=			
ANR	1038466	Identifier	count		1038140	0					
ANR	1038467	PrimaryExpression	0		1038140	1					
ANR	1038468	IdentifierDeclStatement	"MetaCallback cb = { 0 , NULL } ;"	387:3:10314:10350	1038140	2	True				
ANR	1038469	IdentifierDecl	"cb = { 0 , NULL }"		1038140	0					
ANR	1038470	IdentifierDeclType	MetaCallback		1038140	0					
ANR	1038471	Identifier	cb		1038140	1					
ANR	1038472	AssignmentExpression	"cb = { 0 , NULL }"		1038140	2		=			
ANR	1038473	Identifier	cb		1038140	0					
ANR	1038474	InitializerList	0		1038140	1					
ANR	1038475	PrimaryExpression	0		1038140	0					
ANR	1038476	Identifier	NULL		1038140	1					
ANR	1038477	IdentifierDeclStatement	ut64 addr ;	390:3:10355:10364	1038140	3	True				
ANR	1038478	IdentifierDecl	addr		1038140	0					
ANR	1038479	IdentifierDeclType	ut64		1038140	0					
ANR	1038480	Identifier	addr		1038140	1					
ANR	1038481	IdentifierDeclStatement	char key [ 128 ] ;	391:3:10369:10382	1038140	4	True				
ANR	1038482	IdentifierDecl	key [ 128 ]		1038140	0					
ANR	1038483	IdentifierDeclType	char [ 128 ]		1038140	0					
ANR	1038484	Identifier	key		1038140	1					
ANR	1038485	PrimaryExpression	128		1038140	2					
ANR	1038486	IdentifierDeclStatement	"const char * val , * comma ;"	392:3:10387:10410	1038140	5	True				
ANR	1038487	IdentifierDecl	* val		1038140	0					
ANR	1038488	IdentifierDeclType	const char *		1038140	0					
ANR	1038489	Identifier	val		1038140	1					
ANR	1038490	IdentifierDecl	* comma		1038140	1					
ANR	1038491	IdentifierDeclType	const char *		1038140	0					
ANR	1038492	Identifier	comma		1038140	1					
ANR	1038493	IdentifierDeclStatement	"char * list = sdb_get ( core -> anal -> sdb_meta , ""meta.C"" , 0 ) ;"	393:3:10415:10471	1038140	6	True				
ANR	1038494	IdentifierDecl	"* list = sdb_get ( core -> anal -> sdb_meta , ""meta.C"" , 0 )"		1038140	0					
ANR	1038495	IdentifierDeclType	char *		1038140	0					
ANR	1038496	Identifier	list		1038140	1					
ANR	1038497	AssignmentExpression	"* list = sdb_get ( core -> anal -> sdb_meta , ""meta.C"" , 0 )"		1038140	2		=			
ANR	1038498	Identifier	list		1038140	0					
ANR	1038499	CallExpression	"sdb_get ( core -> anal -> sdb_meta , ""meta.C"" , 0 )"		1038140	1					
ANR	1038500	Callee	sdb_get		1038140	0					
ANR	1038501	Identifier	sdb_get		1038140	0					
ANR	1038502	ArgumentList	core -> anal -> sdb_meta		1038140	1					
ANR	1038503	Argument	core -> anal -> sdb_meta		1038140	0					
ANR	1038504	PtrMemberAccess	core -> anal -> sdb_meta		1038140	0					
ANR	1038505	PtrMemberAccess	core -> anal		1038140	0					
ANR	1038506	Identifier	core		1038140	0					
ANR	1038507	Identifier	anal		1038140	1					
ANR	1038508	Identifier	sdb_meta		1038140	1					
ANR	1038509	Argument	"""meta.C"""		1038140	1					
ANR	1038510	PrimaryExpression	"""meta.C"""		1038140	0					
ANR	1038511	Argument	0		1038140	2					
ANR	1038512	PrimaryExpression	0		1038140	0					
ANR	1038513	IdentifierDeclStatement	"char * str , * next , * cur = list ;"	394:3:10476:10505	1038140	7	True				
ANR	1038514	IdentifierDecl	* str		1038140	0					
ANR	1038515	IdentifierDeclType	char *		1038140	0					
ANR	1038516	Identifier	str		1038140	1					
ANR	1038517	IdentifierDecl	* next		1038140	1					
ANR	1038518	IdentifierDeclType	char *		1038140	0					
ANR	1038519	Identifier	next		1038140	1					
ANR	1038520	IdentifierDecl	* cur = list		1038140	2					
ANR	1038521	IdentifierDeclType	char *		1038140	0					
ANR	1038522	Identifier	cur		1038140	1					
ANR	1038523	AssignmentExpression	* cur = list		1038140	2		=			
ANR	1038524	Identifier	list		1038140	0					
ANR	1038525	Identifier	list		1038140	1					
ANR	1038526	IfStatement	if ( list )		1038140	8					
ANR	1038527	Condition	list	395:7:10514:10517	1038140	0	True				
ANR	1038528	Identifier	list		1038140	0					
ANR	1038529	CompoundStatement		74:13:1571:1571	1038140	1					
ANR	1038530	ForStatement	for ( ; ; )		1038140	0					
ANR	1038531	CompoundStatement		75:13:1586:1586	1038140	0					
ANR	1038532	ExpressionStatement	"cur = sdb_anext ( cur , & next )"	397:5:10542:10570	1038140	0	True				
ANR	1038533	AssignmentExpression	"cur = sdb_anext ( cur , & next )"		1038140	0		=			
ANR	1038534	Identifier	cur		1038140	0					
ANR	1038535	CallExpression	"sdb_anext ( cur , & next )"		1038140	1					
ANR	1038536	Callee	sdb_anext		1038140	0					
ANR	1038537	Identifier	sdb_anext		1038140	0					
ANR	1038538	ArgumentList	cur		1038140	1					
ANR	1038539	Argument	cur		1038140	0					
ANR	1038540	Identifier	cur		1038140	0					
ANR	1038541	Argument	& next		1038140	1					
ANR	1038542	UnaryOperationExpression	& next		1038140	0					
ANR	1038543	UnaryOperator	&		1038140	0					
ANR	1038544	Identifier	next		1038140	1					
ANR	1038545	ExpressionStatement	addr = sdb_atoi ( cur )	398:5:10577:10598	1038140	1	True				
ANR	1038546	AssignmentExpression	addr = sdb_atoi ( cur )		1038140	0		=			
ANR	1038547	Identifier	addr		1038140	0					
ANR	1038548	CallExpression	sdb_atoi ( cur )		1038140	1					
ANR	1038549	Callee	sdb_atoi		1038140	0					
ANR	1038550	Identifier	sdb_atoi		1038140	0					
ANR	1038551	ArgumentList	cur		1038140	1					
ANR	1038552	Argument	cur		1038140	0					
ANR	1038553	Identifier	cur		1038140	0					
ANR	1038554	Statement	snprintf	399:5:10605:10612	1038140	2	True				
ANR	1038555	Statement	(	399:14:10614:10614	1038140	3	True				
ANR	1038556	Statement	key	399:15:10615:10617	1038140	4	True				
ANR	1038557	Statement	","	399:18:10618:10618	1038140	5	True				
ANR	1038558	Statement	sizeof	399:20:10620:10625	1038140	6	True				
ANR	1038559	Statement	(	399:27:10627:10627	1038140	7	True				
ANR	1038560	Statement	key	399:28:10628:10630	1038140	8	True				
ANR	1038561	Statement	)	399:31:10631:10631	1038140	9	True				
ANR	1038562	Statement	-	399:33:10633:10633	1038140	10	True				
ANR	1038563	Statement	1	399:35:10635:10635	1038140	11	True				
ANR	1038564	Statement	","	399:36:10636:10636	1038140	12	True				
ANR	1038565	Statement	"""meta.C.0x%"""	399:38:10638:10649	1038140	13	True				
ANR	1038566	Statement	PFMT64x	399:50:10650:10656	1038140	14	True				
ANR	1038567	Statement	","	399:57:10657:10657	1038140	15	True				
ANR	1038568	Statement	addr	399:59:10659:10662	1038140	16	True				
ANR	1038569	Statement	)	399:63:10663:10663	1038140	17	True				
ANR	1038570	ExpressionStatement		399:64:10664:10664	1038140	18	True				
ANR	1038571	ExpressionStatement	"val = sdb_const_get ( core -> anal -> sdb_meta , key , 0 )"	400:5:10671:10721	1038140	19	True				
ANR	1038572	AssignmentExpression	"val = sdb_const_get ( core -> anal -> sdb_meta , key , 0 )"		1038140	0		=			
ANR	1038573	Identifier	val		1038140	0					
ANR	1038574	CallExpression	"sdb_const_get ( core -> anal -> sdb_meta , key , 0 )"		1038140	1					
ANR	1038575	Callee	sdb_const_get		1038140	0					
ANR	1038576	Identifier	sdb_const_get		1038140	0					
ANR	1038577	ArgumentList	core -> anal -> sdb_meta		1038140	1					
ANR	1038578	Argument	core -> anal -> sdb_meta		1038140	0					
ANR	1038579	PtrMemberAccess	core -> anal -> sdb_meta		1038140	0					
ANR	1038580	PtrMemberAccess	core -> anal		1038140	0					
ANR	1038581	Identifier	core		1038140	0					
ANR	1038582	Identifier	anal		1038140	1					
ANR	1038583	Identifier	sdb_meta		1038140	1					
ANR	1038584	Argument	key		1038140	1					
ANR	1038585	Identifier	key		1038140	0					
ANR	1038586	Argument	0		1038140	2					
ANR	1038587	PrimaryExpression	0		1038140	0					
ANR	1038588	IfStatement	if ( val )		1038140	20					
ANR	1038589	Condition	val	401:9:10732:10734	1038140	0	True				
ANR	1038590	Identifier	val		1038140	0					
ANR	1038591	CompoundStatement		80:14:1788:1788	1038140	1					
ANR	1038592	ExpressionStatement	"comma = strchr ( val , ',' )"	402:6:10745:10770	1038140	0	True				
ANR	1038593	AssignmentExpression	"comma = strchr ( val , ',' )"		1038140	0		=			
ANR	1038594	Identifier	comma		1038140	0					
ANR	1038595	CallExpression	"strchr ( val , ',' )"		1038140	1					
ANR	1038596	Callee	strchr		1038140	0					
ANR	1038597	Identifier	strchr		1038140	0					
ANR	1038598	ArgumentList	val		1038140	1					
ANR	1038599	Argument	val		1038140	0					
ANR	1038600	Identifier	val		1038140	0					
ANR	1038601	Argument	"','"		1038140	1					
ANR	1038602	PrimaryExpression	"','"		1038140	0					
ANR	1038603	IfStatement	if ( comma )		1038140	1					
ANR	1038604	Condition	comma	403:10:10782:10786	1038140	0	True				
ANR	1038605	Identifier	comma		1038140	0					
ANR	1038606	CompoundStatement		82:17:1840:1840	1038140	1					
ANR	1038607	ExpressionStatement	"str = ( char * ) sdb_decode ( comma + 1 , 0 )"	404:7:10798:10838	1038140	0	True				
ANR	1038608	AssignmentExpression	"str = ( char * ) sdb_decode ( comma + 1 , 0 )"		1038140	0		=			
ANR	1038609	Identifier	str		1038140	0					
ANR	1038610	CastExpression	"( char * ) sdb_decode ( comma + 1 , 0 )"		1038140	1					
ANR	1038611	CastTarget	char *		1038140	0					
ANR	1038612	CallExpression	"sdb_decode ( comma + 1 , 0 )"		1038140	1					
ANR	1038613	Callee	sdb_decode		1038140	0					
ANR	1038614	Identifier	sdb_decode		1038140	0					
ANR	1038615	ArgumentList	comma + 1		1038140	1					
ANR	1038616	Argument	comma + 1		1038140	0					
ANR	1038617	AdditiveExpression	comma + 1		1038140	0		+			
ANR	1038618	Identifier	comma		1038140	0					
ANR	1038619	PrimaryExpression	1		1038140	1					
ANR	1038620	Argument	0		1038140	1					
ANR	1038621	PrimaryExpression	0		1038140	0					
ANR	1038622	IfStatement	"if ( strstr ( str , input + 2 ) )"		1038140	1					
ANR	1038623	Condition	"strstr ( str , input + 2 )"	405:11:10851:10873	1038140	0	True				
ANR	1038624	CallExpression	"strstr ( str , input + 2 )"		1038140	0					
ANR	1038625	Callee	strstr		1038140	0					
ANR	1038626	Identifier	strstr		1038140	0					
ANR	1038627	ArgumentList	str		1038140	1					
ANR	1038628	Argument	str		1038140	0					
ANR	1038629	Identifier	str		1038140	0					
ANR	1038630	Argument	input + 2		1038140	1					
ANR	1038631	AdditiveExpression	input + 2		1038140	0		+			
ANR	1038632	Identifier	input		1038140	0					
ANR	1038633	PrimaryExpression	2		1038140	1					
ANR	1038634	CompoundStatement		84:36:1927:1927	1038140	1					
ANR	1038635	Statement	r_cons_printf	406:8:10886:10898	1038140	0	True				
ANR	1038636	Statement	(	406:22:10900:10900	1038140	1	True				
ANR	1038637	Statement	"""0x%08"""	406:23:10901:10907	1038140	2	True				
ANR	1038638	Statement	PFMT64x	406:30:10908:10914	1038140	3	True				
ANR	1038639	Statement	"""  %s\\n"""	406:38:10916:10923	1038140	4	True				
ANR	1038640	Statement	","	406:46:10924:10924	1038140	5	True				
ANR	1038641	Statement	addr	406:48:10926:10929	1038140	6	True				
ANR	1038642	Statement	","	406:52:10930:10930	1038140	7	True				
ANR	1038643	Statement	str	406:54:10932:10934	1038140	8	True				
ANR	1038644	Statement	)	406:57:10935:10935	1038140	9	True				
ANR	1038645	ExpressionStatement		406:58:10936:10936	1038140	10	True				
ANR	1038646	ExpressionStatement	count ++	407:8:10946:10953	1038140	11	True				
ANR	1038647	PostIncDecOperationExpression	count ++		1038140	0					
ANR	1038648	Identifier	count		1038140	0					
ANR	1038649	IncDec	++		1038140	1					
ANR	1038650	ExpressionStatement	cb . addr = addr	408:8:10963:10977	1038140	12	True				
ANR	1038651	AssignmentExpression	cb . addr = addr		1038140	0		=			
ANR	1038652	MemberAccess	cb . addr		1038140	0					
ANR	1038653	Identifier	cb		1038140	0					
ANR	1038654	Identifier	addr		1038140	1					
ANR	1038655	Identifier	addr		1038140	1					
ANR	1038656	ExpressionStatement	free ( cb . str )	409:8:10987:11000	1038140	13	True				
ANR	1038657	CallExpression	free ( cb . str )		1038140	0					
ANR	1038658	Callee	free		1038140	0					
ANR	1038659	Identifier	free		1038140	0					
ANR	1038660	ArgumentList	cb . str		1038140	1					
ANR	1038661	Argument	cb . str		1038140	0					
ANR	1038662	MemberAccess	cb . str		1038140	0					
ANR	1038663	Identifier	cb		1038140	0					
ANR	1038664	Identifier	str		1038140	1					
ANR	1038665	ExpressionStatement	cb . str = str	410:8:11010:11022	1038140	14	True				
ANR	1038666	AssignmentExpression	cb . str = str		1038140	0		=			
ANR	1038667	MemberAccess	cb . str		1038140	0					
ANR	1038668	Identifier	cb		1038140	0					
ANR	1038669	Identifier	str		1038140	1					
ANR	1038670	Identifier	str		1038140	1					
ANR	1038671	ElseStatement	else		1038140	0					
ANR	1038672	CompoundStatement		90:14:2089:2089	1038140	0					
ANR	1038673	ExpressionStatement	free ( str )	412:8:11048:11058	1038140	0	True				
ANR	1038674	CallExpression	free ( str )		1038140	0					
ANR	1038675	Callee	free		1038140	0					
ANR	1038676	Identifier	free		1038140	0					
ANR	1038677	ArgumentList	str		1038140	1					
ANR	1038678	Argument	str		1038140	0					
ANR	1038679	Identifier	str		1038140	0					
ANR	1038680	ElseStatement	else		1038140	0					
ANR	1038681	CompoundStatement		94:12:2140:2140	1038140	0					
ANR	1038682	ExpressionStatement	"eprintf ( ""sdb_const_get key not found '%s'\\n"" , key )"	416:6:11097:11148	1038140	0	True				
ANR	1038683	CallExpression	"eprintf ( ""sdb_const_get key not found '%s'\\n"" , key )"		1038140	0					
ANR	1038684	Callee	eprintf		1038140	0					
ANR	1038685	Identifier	eprintf		1038140	0					
ANR	1038686	ArgumentList	"""sdb_const_get key not found '%s'\\n"""		1038140	1					
ANR	1038687	Argument	"""sdb_const_get key not found '%s'\\n"""		1038140	0					
ANR	1038688	PrimaryExpression	"""sdb_const_get key not found '%s'\\n"""		1038140	0					
ANR	1038689	Argument	key		1038140	1					
ANR	1038690	Identifier	key		1038140	0					
ANR	1038691	IfStatement	if ( ! next )		1038140	21					
ANR	1038692	Condition	! next	418:9:11166:11170	1038140	0	True				
ANR	1038693	UnaryOperationExpression	! next		1038140	0					
ANR	1038694	UnaryOperator	!		1038140	0					
ANR	1038695	Identifier	next		1038140	1					
ANR	1038696	CompoundStatement		97:16:2224:2224	1038140	1					
ANR	1038697	BreakStatement	break ;	419:6:11181:11186	1038140	0	True				
ANR	1038698	ExpressionStatement	cur = next	421:5:11200:11210	1038140	22	True				
ANR	1038699	AssignmentExpression	cur = next		1038140	0		=			
ANR	1038700	Identifier	cur		1038140	0					
ANR	1038701	Identifier	next		1038140	1					
ANR	1038702	SwitchStatement	switch ( count )		1038140	9					
ANR	1038703	Condition	count	425:11:11235:11239	1038140	0	True				
ANR	1038704	Identifier	count		1038140	0					
ANR	1038705	CompoundStatement		104:18:2293:2293	1038140	1					
ANR	1038706	Label	case 0 :	426:3:11247:11253	1038140	0	True				
ANR	1038707	ExpressionStatement	"eprintf ( ""No matching comments\\n"" )"	427:4:11259:11293	1038140	1	True				
ANR	1038708	CallExpression	"eprintf ( ""No matching comments\\n"" )"		1038140	0					
ANR	1038709	Callee	eprintf		1038140	0					
ANR	1038710	Identifier	eprintf		1038140	0					
ANR	1038711	ArgumentList	"""No matching comments\\n"""		1038140	1					
ANR	1038712	Argument	"""No matching comments\\n"""		1038140	0					
ANR	1038713	PrimaryExpression	"""No matching comments\\n"""		1038140	0					
ANR	1038714	BreakStatement	break ;	428:4:11299:11304	1038140	2	True				
ANR	1038715	Label	case 1 :	429:3:11309:11315	1038140	3	True				
ANR	1038716	ExpressionStatement	off = cb . addr	430:4:11321:11334	1038140	4	True				
ANR	1038717	AssignmentExpression	off = cb . addr		1038140	0		=			
ANR	1038718	Identifier	off		1038140	0					
ANR	1038719	MemberAccess	cb . addr		1038140	1					
ANR	1038720	Identifier	cb		1038140	0					
ANR	1038721	Identifier	addr		1038140	1					
ANR	1038722	IfStatement	if ( ! silent )		1038140	5					
ANR	1038723	Condition	! silent	431:8:11344:11350	1038140	0	True				
ANR	1038724	UnaryOperationExpression	! silent		1038140	0					
ANR	1038725	UnaryOperator	!		1038140	0					
ANR	1038726	Identifier	silent		1038140	1					
ANR	1038727	CompoundStatement		110:17:2404:2404	1038140	1					
ANR	1038728	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"	432:5:11360:11434	1038140	0	True				
ANR	1038729	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"		1038140	0					
ANR	1038730	Callee	r_io_sundo_push		1038140	0					
ANR	1038731	Identifier	r_io_sundo_push		1038140	0					
ANR	1038732	ArgumentList	core -> io		1038140	1					
ANR	1038733	Argument	core -> io		1038140	0					
ANR	1038734	PtrMemberAccess	core -> io		1038140	0					
ANR	1038735	Identifier	core		1038140	0					
ANR	1038736	Identifier	io		1038140	1					
ANR	1038737	Argument	core -> offset		1038140	1					
ANR	1038738	PtrMemberAccess	core -> offset		1038140	0					
ANR	1038739	Identifier	core		1038140	0					
ANR	1038740	Identifier	offset		1038140	1					
ANR	1038741	Argument	r_print_get_cursor ( core -> print )		1038140	2					
ANR	1038742	CallExpression	r_print_get_cursor ( core -> print )		1038140	0					
ANR	1038743	Callee	r_print_get_cursor		1038140	0					
ANR	1038744	Identifier	r_print_get_cursor		1038140	0					
ANR	1038745	ArgumentList	core -> print		1038140	1					
ANR	1038746	Argument	core -> print		1038140	0					
ANR	1038747	PtrMemberAccess	core -> print		1038140	0					
ANR	1038748	Identifier	core		1038140	0					
ANR	1038749	Identifier	print		1038140	1					
ANR	1038750	ExpressionStatement	"r_core_seek ( core , off , 1 )"	434:4:11446:11472	1038140	6	True				
ANR	1038751	CallExpression	"r_core_seek ( core , off , 1 )"		1038140	0					
ANR	1038752	Callee	r_core_seek		1038140	0					
ANR	1038753	Identifier	r_core_seek		1038140	0					
ANR	1038754	ArgumentList	core		1038140	1					
ANR	1038755	Argument	core		1038140	0					
ANR	1038756	Identifier	core		1038140	0					
ANR	1038757	Argument	off		1038140	1					
ANR	1038758	Identifier	off		1038140	0					
ANR	1038759	Argument	1		1038140	2					
ANR	1038760	PrimaryExpression	1		1038140	0					
ANR	1038761	ExpressionStatement	r_core_block_read ( core )	435:4:11478:11502	1038140	7	True				
ANR	1038762	CallExpression	r_core_block_read ( core )		1038140	0					
ANR	1038763	Callee	r_core_block_read		1038140	0					
ANR	1038764	Identifier	r_core_block_read		1038140	0					
ANR	1038765	ArgumentList	core		1038140	1					
ANR	1038766	Argument	core		1038140	0					
ANR	1038767	Identifier	core		1038140	0					
ANR	1038768	BreakStatement	break ;	436:4:11508:11513	1038140	8	True				
ANR	1038769	Label	default :	437:3:11518:11525	1038140	9	True				
ANR	1038770	Identifier	default		1038140	0					
ANR	1038771	ExpressionStatement	"eprintf ( ""Too many results\\n"" )"	438:4:11531:11561	1038140	10	True				
ANR	1038772	CallExpression	"eprintf ( ""Too many results\\n"" )"		1038140	0					
ANR	1038773	Callee	eprintf		1038140	0					
ANR	1038774	Identifier	eprintf		1038140	0					
ANR	1038775	ArgumentList	"""Too many results\\n"""		1038140	1					
ANR	1038776	Argument	"""Too many results\\n"""		1038140	0					
ANR	1038777	PrimaryExpression	"""Too many results\\n"""		1038140	0					
ANR	1038778	BreakStatement	break ;	439:4:11567:11572	1038140	11	True				
ANR	1038779	ExpressionStatement	free ( cb . str )	441:3:11582:11595	1038140	10	True				
ANR	1038780	CallExpression	free ( cb . str )		1038140	0					
ANR	1038781	Callee	free		1038140	0					
ANR	1038782	Identifier	free		1038140	0					
ANR	1038783	ArgumentList	cb . str		1038140	1					
ANR	1038784	Argument	cb . str		1038140	0					
ANR	1038785	MemberAccess	cb . str		1038140	0					
ANR	1038786	Identifier	cb		1038140	0					
ANR	1038787	Identifier	str		1038140	1					
ANR	1038788	ElseStatement	else		1038140	0					
ANR	1038789	CompoundStatement		121:9:2657:2657	1038140	0					
ANR	1038790	ExpressionStatement	"r_core_cmd_help ( core , help_msg_sC )"	443:3:11611:11646	1038140	0	True				
ANR	1038791	CallExpression	"r_core_cmd_help ( core , help_msg_sC )"		1038140	0					
ANR	1038792	Callee	r_core_cmd_help		1038140	0					
ANR	1038793	Identifier	r_core_cmd_help		1038140	0					
ANR	1038794	ArgumentList	core		1038140	1					
ANR	1038795	Argument	core		1038140	0					
ANR	1038796	Identifier	core		1038140	0					
ANR	1038797	Argument	help_msg_sC		1038140	1					
ANR	1038798	Identifier	help_msg_sC		1038140	0					
ANR	1038799	BreakStatement	break ;	445:2:11654:11659	1038140	5	True				
ANR	1038800	Label	case ' ' :	446:1:11662:11670	1038140	6	True				
ANR	1038801	CompoundStatement		127:2:2736:2781	1038140	7					
ANR	1038802	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , input + 1 ) ;"	448:2:11685:11730	1038140	0	True				
ANR	1038803	IdentifierDecl	"addr = r_num_math ( core -> num , input + 1 )"		1038140	0					
ANR	1038804	IdentifierDeclType	ut64		1038140	0					
ANR	1038805	Identifier	addr		1038140	1					
ANR	1038806	AssignmentExpression	"addr = r_num_math ( core -> num , input + 1 )"		1038140	2		=			
ANR	1038807	Identifier	addr		1038140	0					
ANR	1038808	CallExpression	"r_num_math ( core -> num , input + 1 )"		1038140	1					
ANR	1038809	Callee	r_num_math		1038140	0					
ANR	1038810	Identifier	r_num_math		1038140	0					
ANR	1038811	ArgumentList	core -> num		1038140	1					
ANR	1038812	Argument	core -> num		1038140	0					
ANR	1038813	PtrMemberAccess	core -> num		1038140	0					
ANR	1038814	Identifier	core		1038140	0					
ANR	1038815	Identifier	num		1038140	1					
ANR	1038816	Argument	input + 1		1038140	1					
ANR	1038817	AdditiveExpression	input + 1		1038140	0		+			
ANR	1038818	Identifier	input		1038140	0					
ANR	1038819	PrimaryExpression	1		1038140	1					
ANR	1038820	IfStatement	if ( core -> num -> nc . errors )		1038140	1					
ANR	1038821	Condition	core -> num -> nc . errors	449:6:11738:11757	1038140	0	True				
ANR	1038822	MemberAccess	core -> num -> nc . errors		1038140	0					
ANR	1038823	PtrMemberAccess	core -> num -> nc		1038140	0					
ANR	1038824	PtrMemberAccess	core -> num		1038140	0					
ANR	1038825	Identifier	core		1038140	0					
ANR	1038826	Identifier	num		1038140	1					
ANR	1038827	Identifier	nc		1038140	1					
ANR	1038828	Identifier	errors		1038140	1					
ANR	1038829	CompoundStatement		128:28:2811:2811	1038140	1					
ANR	1038830	IfStatement	if ( r_cons_singleton ( ) -> context -> is_interactive )		1038140	0					
ANR	1038831	Condition	r_cons_singleton ( ) -> context -> is_interactive	450:7:11769:11812	1038140	0	True				
ANR	1038832	PtrMemberAccess	r_cons_singleton ( ) -> context -> is_interactive		1038140	0					
ANR	1038833	PtrMemberAccess	r_cons_singleton ( ) -> context		1038140	0					
ANR	1038834	CallExpression	r_cons_singleton ( )		1038140	0					
ANR	1038835	Callee	r_cons_singleton		1038140	0					
ANR	1038836	Identifier	r_cons_singleton		1038140	0					
ANR	1038837	ArgumentList			1038140	1					
ANR	1038838	Identifier	context		1038140	1					
ANR	1038839	Identifier	is_interactive		1038140	1					
ANR	1038840	CompoundStatement		129:53:2866:2866	1038140	1					
ANR	1038841	ExpressionStatement	"eprintf ( ""Cannot seek to unknown address '%s'\\n"" , core -> num -> nc . calc_buf )"	451:4:11821:11894	1038140	0	True				
ANR	1038842	CallExpression	"eprintf ( ""Cannot seek to unknown address '%s'\\n"" , core -> num -> nc . calc_buf )"		1038140	0					
ANR	1038843	Callee	eprintf		1038140	0					
ANR	1038844	Identifier	eprintf		1038140	0					
ANR	1038845	ArgumentList	"""Cannot seek to unknown address '%s'\\n"""		1038140	1					
ANR	1038846	Argument	"""Cannot seek to unknown address '%s'\\n"""		1038140	0					
ANR	1038847	PrimaryExpression	"""Cannot seek to unknown address '%s'\\n"""		1038140	0					
ANR	1038848	Argument	core -> num -> nc . calc_buf		1038140	1					
ANR	1038849	MemberAccess	core -> num -> nc . calc_buf		1038140	0					
ANR	1038850	PtrMemberAccess	core -> num -> nc		1038140	0					
ANR	1038851	PtrMemberAccess	core -> num		1038140	0					
ANR	1038852	Identifier	core		1038140	0					
ANR	1038853	Identifier	num		1038140	1					
ANR	1038854	Identifier	nc		1038140	1					
ANR	1038855	Identifier	calc_buf		1038140	1					
ANR	1038856	BreakStatement	break ;	453:3:11904:11909	1038140	1	True				
ANR	1038857	IfStatement	if ( ! silent )		1038140	2					
ANR	1038858	Condition	! silent	455:6:11921:11927	1038140	0	True				
ANR	1038859	UnaryOperationExpression	! silent		1038140	0					
ANR	1038860	UnaryOperator	!		1038140	0					
ANR	1038861	Identifier	silent		1038140	1					
ANR	1038862	CompoundStatement		134:15:2981:2981	1038140	1					
ANR	1038863	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"	456:3:11935:12009	1038140	0	True				
ANR	1038864	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"		1038140	0					
ANR	1038865	Callee	r_io_sundo_push		1038140	0					
ANR	1038866	Identifier	r_io_sundo_push		1038140	0					
ANR	1038867	ArgumentList	core -> io		1038140	1					
ANR	1038868	Argument	core -> io		1038140	0					
ANR	1038869	PtrMemberAccess	core -> io		1038140	0					
ANR	1038870	Identifier	core		1038140	0					
ANR	1038871	Identifier	io		1038140	1					
ANR	1038872	Argument	core -> offset		1038140	1					
ANR	1038873	PtrMemberAccess	core -> offset		1038140	0					
ANR	1038874	Identifier	core		1038140	0					
ANR	1038875	Identifier	offset		1038140	1					
ANR	1038876	Argument	r_print_get_cursor ( core -> print )		1038140	2					
ANR	1038877	CallExpression	r_print_get_cursor ( core -> print )		1038140	0					
ANR	1038878	Callee	r_print_get_cursor		1038140	0					
ANR	1038879	Identifier	r_print_get_cursor		1038140	0					
ANR	1038880	ArgumentList	core -> print		1038140	1					
ANR	1038881	Argument	core -> print		1038140	0					
ANR	1038882	PtrMemberAccess	core -> print		1038140	0					
ANR	1038883	Identifier	core		1038140	0					
ANR	1038884	Identifier	print		1038140	1					
ANR	1038885	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	458:2:12017:12044	1038140	3	True				
ANR	1038886	CallExpression	"r_core_seek ( core , addr , 1 )"		1038140	0					
ANR	1038887	Callee	r_core_seek		1038140	0					
ANR	1038888	Identifier	r_core_seek		1038140	0					
ANR	1038889	ArgumentList	core		1038140	1					
ANR	1038890	Argument	core		1038140	0					
ANR	1038891	Identifier	core		1038140	0					
ANR	1038892	Argument	addr		1038140	1					
ANR	1038893	Identifier	addr		1038140	0					
ANR	1038894	Argument	1		1038140	2					
ANR	1038895	PrimaryExpression	1		1038140	0					
ANR	1038896	ExpressionStatement	r_core_block_read ( core )	459:2:12048:12072	1038140	4	True				
ANR	1038897	CallExpression	r_core_block_read ( core )		1038140	0					
ANR	1038898	Callee	r_core_block_read		1038140	0					
ANR	1038899	Identifier	r_core_block_read		1038140	0					
ANR	1038900	ArgumentList	core		1038140	1					
ANR	1038901	Argument	core		1038140	0					
ANR	1038902	Identifier	core		1038140	0					
ANR	1038903	BreakStatement	break ;	461:1:12078:12083	1038140	8	True				
ANR	1038904	Label	case '/' :	462:1:12086:12094	1038140	9	True				
ANR	1038905	CompoundStatement		147:2:3404:3435	1038140	10					
ANR	1038906	IdentifierDeclStatement	"const char * pfx = r_config_get ( core -> config , ""search.prefix"" ) ;"	464:2:12109:12171	1038140	0	True				
ANR	1038907	IdentifierDecl	"* pfx = r_config_get ( core -> config , ""search.prefix"" )"		1038140	0					
ANR	1038908	IdentifierDeclType	const char *		1038140	0					
ANR	1038909	Identifier	pfx		1038140	1					
ANR	1038910	AssignmentExpression	"* pfx = r_config_get ( core -> config , ""search.prefix"" )"		1038140	2		=			
ANR	1038911	Identifier	pfx		1038140	0					
ANR	1038912	CallExpression	"r_config_get ( core -> config , ""search.prefix"" )"		1038140	1					
ANR	1038913	Callee	r_config_get		1038140	0					
ANR	1038914	Identifier	r_config_get		1038140	0					
ANR	1038915	ArgumentList	core -> config		1038140	1					
ANR	1038916	Argument	core -> config		1038140	0					
ANR	1038917	PtrMemberAccess	core -> config		1038140	0					
ANR	1038918	Identifier	core		1038140	0					
ANR	1038919	Identifier	config		1038140	1					
ANR	1038920	Argument	"""search.prefix"""		1038140	1					
ANR	1038921	PrimaryExpression	"""search.prefix"""		1038140	0					
ANR	1038922	IdentifierDeclStatement	"const ut64 saved_from = r_config_get_i ( core -> config , ""search.from"" ) ;"	465:2:12175:12243	1038140	1	True				
ANR	1038923	IdentifierDecl	"saved_from = r_config_get_i ( core -> config , ""search.from"" )"		1038140	0					
ANR	1038924	IdentifierDeclType	const ut64		1038140	0					
ANR	1038925	Identifier	saved_from		1038140	1					
ANR	1038926	AssignmentExpression	"saved_from = r_config_get_i ( core -> config , ""search.from"" )"		1038140	2		=			
ANR	1038927	Identifier	saved_from		1038140	0					
ANR	1038928	CallExpression	"r_config_get_i ( core -> config , ""search.from"" )"		1038140	1					
ANR	1038929	Callee	r_config_get_i		1038140	0					
ANR	1038930	Identifier	r_config_get_i		1038140	0					
ANR	1038931	ArgumentList	core -> config		1038140	1					
ANR	1038932	Argument	core -> config		1038140	0					
ANR	1038933	PtrMemberAccess	core -> config		1038140	0					
ANR	1038934	Identifier	core		1038140	0					
ANR	1038935	Identifier	config		1038140	1					
ANR	1038936	Argument	"""search.from"""		1038140	1					
ANR	1038937	PrimaryExpression	"""search.from"""		1038140	0					
ANR	1038938	IdentifierDeclStatement	"const ut64 saved_maxhits = r_config_get_i ( core -> config , ""search.maxhits"" ) ;"	466:2:12247:12321	1038140	2	True				
ANR	1038939	IdentifierDecl	"saved_maxhits = r_config_get_i ( core -> config , ""search.maxhits"" )"		1038140	0					
ANR	1038940	IdentifierDeclType	const ut64		1038140	0					
ANR	1038941	Identifier	saved_maxhits		1038140	1					
ANR	1038942	AssignmentExpression	"saved_maxhits = r_config_get_i ( core -> config , ""search.maxhits"" )"		1038140	2		=			
ANR	1038943	Identifier	saved_maxhits		1038140	0					
ANR	1038944	CallExpression	"r_config_get_i ( core -> config , ""search.maxhits"" )"		1038140	1					
ANR	1038945	Callee	r_config_get_i		1038140	0					
ANR	1038946	Identifier	r_config_get_i		1038140	0					
ANR	1038947	ArgumentList	core -> config		1038140	1					
ANR	1038948	Argument	core -> config		1038140	0					
ANR	1038949	PtrMemberAccess	core -> config		1038140	0					
ANR	1038950	Identifier	core		1038140	0					
ANR	1038951	Identifier	config		1038140	1					
ANR	1038952	Argument	"""search.maxhits"""		1038140	1					
ANR	1038953	PrimaryExpression	"""search.maxhits"""		1038140	0					
ANR	1038954	IdentifierDeclStatement	int kwidx = core -> search -> n_kws ;	468:2:12353:12384	1038140	3	True				
ANR	1038955	IdentifierDecl	kwidx = core -> search -> n_kws		1038140	0					
ANR	1038956	IdentifierDeclType	int		1038140	0					
ANR	1038957	Identifier	kwidx		1038140	1					
ANR	1038958	AssignmentExpression	kwidx = core -> search -> n_kws		1038140	2		=			
ANR	1038959	Identifier	kwidx		1038140	0					
ANR	1038960	PtrMemberAccess	core -> search -> n_kws		1038140	1					
ANR	1038961	PtrMemberAccess	core -> search		1038140	0					
ANR	1038962	Identifier	core		1038140	0					
ANR	1038963	Identifier	search		1038140	1					
ANR	1038964	Identifier	n_kws		1038140	1					
ANR	1038965	IfStatement	if ( kwidx < 0 )		1038140	4					
ANR	1038966	Condition	kwidx < 0	469:6:12449:12457	1038140	0	True				
ANR	1038967	RelationalExpression	kwidx < 0		1038140	0		<			
ANR	1038968	Identifier	kwidx		1038140	0					
ANR	1038969	PrimaryExpression	0		1038140	1					
ANR	1038970	CompoundStatement		148:17:3511:3511	1038140	1					
ANR	1038971	ExpressionStatement	kwidx = 0	470:3:12465:12474	1038140	0	True				
ANR	1038972	AssignmentExpression	kwidx = 0		1038140	0		=			
ANR	1038973	Identifier	kwidx		1038140	0					
ANR	1038974	PrimaryExpression	0		1038140	1					
ANR	1038975	SwitchStatement	switch ( input [ 1 ] )		1038140	5					
ANR	1038976	Condition	input [ 1 ]	472:10:12490:12497	1038140	0	True				
ANR	1038977	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1038978	Identifier	input		1038140	0					
ANR	1038979	PrimaryExpression	1		1038140	1					
ANR	1038980	CompoundStatement		151:20:3551:3551	1038140	1					
ANR	1038981	Label	case ' ' :	473:2:12504:12512	1038140	0	True				
ANR	1038982	Label	case 'v' :	474:2:12516:12524	1038140	1	True				
ANR	1038983	Label	case 'V' :	475:2:12528:12536	1038140	2	True				
ANR	1038984	Label	case 'w' :	476:2:12540:12548	1038140	3	True				
ANR	1038985	Label	case 'W' :	477:2:12552:12560	1038140	4	True				
ANR	1038986	Label	case 'z' :	478:2:12564:12572	1038140	5	True				
ANR	1038987	Label	case 'm' :	479:2:12576:12584	1038140	6	True				
ANR	1038988	Label	case 'c' :	480:2:12588:12596	1038140	7	True				
ANR	1038989	Label	case 'A' :	481:2:12600:12608	1038140	8	True				
ANR	1038990	Label	case 'e' :	482:2:12612:12620	1038140	9	True				
ANR	1038991	Label	case 'E' :	483:2:12624:12632	1038140	10	True				
ANR	1038992	Label	case 'i' :	484:2:12636:12644	1038140	11	True				
ANR	1038993	Label	case 'R' :	485:2:12648:12656	1038140	12	True				
ANR	1038994	Label	case 'r' :	486:2:12660:12668	1038140	13	True				
ANR	1038995	Label	case '/' :	487:2:12672:12680	1038140	14	True				
ANR	1038996	Label	case 'x' :	488:2:12684:12692	1038140	15	True				
ANR	1038997	ExpressionStatement	"r_config_set_i ( core -> config , ""search.from"" , core -> offset + 1 )"	489:3:12697:12759	1038140	16	True				
ANR	1038998	CallExpression	"r_config_set_i ( core -> config , ""search.from"" , core -> offset + 1 )"		1038140	0					
ANR	1038999	Callee	r_config_set_i		1038140	0					
ANR	1039000	Identifier	r_config_set_i		1038140	0					
ANR	1039001	ArgumentList	core -> config		1038140	1					
ANR	1039002	Argument	core -> config		1038140	0					
ANR	1039003	PtrMemberAccess	core -> config		1038140	0					
ANR	1039004	Identifier	core		1038140	0					
ANR	1039005	Identifier	config		1038140	1					
ANR	1039006	Argument	"""search.from"""		1038140	1					
ANR	1039007	PrimaryExpression	"""search.from"""		1038140	0					
ANR	1039008	Argument	core -> offset + 1		1038140	2					
ANR	1039009	AdditiveExpression	core -> offset + 1		1038140	0		+			
ANR	1039010	PtrMemberAccess	core -> offset		1038140	0					
ANR	1039011	Identifier	core		1038140	0					
ANR	1039012	Identifier	offset		1038140	1					
ANR	1039013	PrimaryExpression	1		1038140	1					
ANR	1039014	ExpressionStatement	"r_config_set_i ( core -> config , ""search.maxhits"" , 1 )"	490:3:12764:12814	1038140	17	True				
ANR	1039015	CallExpression	"r_config_set_i ( core -> config , ""search.maxhits"" , 1 )"		1038140	0					
ANR	1039016	Callee	r_config_set_i		1038140	0					
ANR	1039017	Identifier	r_config_set_i		1038140	0					
ANR	1039018	ArgumentList	core -> config		1038140	1					
ANR	1039019	Argument	core -> config		1038140	0					
ANR	1039020	PtrMemberAccess	core -> config		1038140	0					
ANR	1039021	Identifier	core		1038140	0					
ANR	1039022	Identifier	config		1038140	1					
ANR	1039023	Argument	"""search.maxhits"""		1038140	1					
ANR	1039024	PrimaryExpression	"""search.maxhits"""		1038140	0					
ANR	1039025	Argument	1		1038140	2					
ANR	1039026	PrimaryExpression	1		1038140	0					
ANR	1039027	ExpressionStatement	"r_core_cmdf ( core , ""s+1; %s; s-1; s %s%d_0; f-%s%d_0"" , input , pfx , kwidx , pfx , kwidx , pfx , kwidx )"	491:3:12819:12920	1038140	18	True				
ANR	1039028	CallExpression	"r_core_cmdf ( core , ""s+1; %s; s-1; s %s%d_0; f-%s%d_0"" , input , pfx , kwidx , pfx , kwidx , pfx , kwidx )"		1038140	0					
ANR	1039029	Callee	r_core_cmdf		1038140	0					
ANR	1039030	Identifier	r_core_cmdf		1038140	0					
ANR	1039031	ArgumentList	core		1038140	1					
ANR	1039032	Argument	core		1038140	0					
ANR	1039033	Identifier	core		1038140	0					
ANR	1039034	Argument	"""s+1; %s; s-1; s %s%d_0; f-%s%d_0"""		1038140	1					
ANR	1039035	PrimaryExpression	"""s+1; %s; s-1; s %s%d_0; f-%s%d_0"""		1038140	0					
ANR	1039036	Argument	input		1038140	2					
ANR	1039037	Identifier	input		1038140	0					
ANR	1039038	Argument	pfx		1038140	3					
ANR	1039039	Identifier	pfx		1038140	0					
ANR	1039040	Argument	kwidx		1038140	4					
ANR	1039041	Identifier	kwidx		1038140	0					
ANR	1039042	Argument	pfx		1038140	5					
ANR	1039043	Identifier	pfx		1038140	0					
ANR	1039044	Argument	kwidx		1038140	6					
ANR	1039045	Identifier	kwidx		1038140	0					
ANR	1039046	Argument	pfx		1038140	7					
ANR	1039047	Identifier	pfx		1038140	0					
ANR	1039048	Argument	kwidx		1038140	8					
ANR	1039049	Identifier	kwidx		1038140	0					
ANR	1039050	ExpressionStatement	"r_config_set_i ( core -> config , ""search.from"" , saved_from )"	493:3:12925:12981	1038140	19	True				
ANR	1039051	CallExpression	"r_config_set_i ( core -> config , ""search.from"" , saved_from )"		1038140	0					
ANR	1039052	Callee	r_config_set_i		1038140	0					
ANR	1039053	Identifier	r_config_set_i		1038140	0					
ANR	1039054	ArgumentList	core -> config		1038140	1					
ANR	1039055	Argument	core -> config		1038140	0					
ANR	1039056	PtrMemberAccess	core -> config		1038140	0					
ANR	1039057	Identifier	core		1038140	0					
ANR	1039058	Identifier	config		1038140	1					
ANR	1039059	Argument	"""search.from"""		1038140	1					
ANR	1039060	PrimaryExpression	"""search.from"""		1038140	0					
ANR	1039061	Argument	saved_from		1038140	2					
ANR	1039062	Identifier	saved_from		1038140	0					
ANR	1039063	ExpressionStatement	"r_config_set_i ( core -> config , ""search.maxhits"" , saved_maxhits )"	494:3:12986:13048	1038140	20	True				
ANR	1039064	CallExpression	"r_config_set_i ( core -> config , ""search.maxhits"" , saved_maxhits )"		1038140	0					
ANR	1039065	Callee	r_config_set_i		1038140	0					
ANR	1039066	Identifier	r_config_set_i		1038140	0					
ANR	1039067	ArgumentList	core -> config		1038140	1					
ANR	1039068	Argument	core -> config		1038140	0					
ANR	1039069	PtrMemberAccess	core -> config		1038140	0					
ANR	1039070	Identifier	core		1038140	0					
ANR	1039071	Identifier	config		1038140	1					
ANR	1039072	Argument	"""search.maxhits"""		1038140	1					
ANR	1039073	PrimaryExpression	"""search.maxhits"""		1038140	0					
ANR	1039074	Argument	saved_maxhits		1038140	2					
ANR	1039075	Identifier	saved_maxhits		1038140	0					
ANR	1039076	BreakStatement	break ;	495:3:13053:13058	1038140	21	True				
ANR	1039077	Label	case '?' :	496:2:13062:13070	1038140	22	True				
ANR	1039078	ExpressionStatement	"eprintf ( ""Usage: s/.. arg.\\n"" )"	497:3:13075:13105	1038140	23	True				
ANR	1039079	CallExpression	"eprintf ( ""Usage: s/.. arg.\\n"" )"		1038140	0					
ANR	1039080	Callee	eprintf		1038140	0					
ANR	1039081	Identifier	eprintf		1038140	0					
ANR	1039082	ArgumentList	"""Usage: s/.. arg.\\n"""		1038140	1					
ANR	1039083	Argument	"""Usage: s/.. arg.\\n"""		1038140	0					
ANR	1039084	PrimaryExpression	"""Usage: s/.. arg.\\n"""		1038140	0					
ANR	1039085	ExpressionStatement	"r_cons_printf ( ""/?\\n"" )"	498:3:13110:13132	1038140	24	True				
ANR	1039086	CallExpression	"r_cons_printf ( ""/?\\n"" )"		1038140	0					
ANR	1039087	Callee	r_cons_printf		1038140	0					
ANR	1039088	Identifier	r_cons_printf		1038140	0					
ANR	1039089	ArgumentList	"""/?\\n"""		1038140	1					
ANR	1039090	Argument	"""/?\\n"""		1038140	0					
ANR	1039091	PrimaryExpression	"""/?\\n"""		1038140	0					
ANR	1039092	BreakStatement	break ;	499:3:13137:13142	1038140	25	True				
ANR	1039093	Label	default :	500:2:13146:13153	1038140	26	True				
ANR	1039094	Identifier	default		1038140	0					
ANR	1039095	ExpressionStatement	"eprintf ( ""unknown search method\\n"" )"	501:3:13158:13193	1038140	27	True				
ANR	1039096	CallExpression	"eprintf ( ""unknown search method\\n"" )"		1038140	0					
ANR	1039097	Callee	eprintf		1038140	0					
ANR	1039098	Identifier	eprintf		1038140	0					
ANR	1039099	ArgumentList	"""unknown search method\\n"""		1038140	1					
ANR	1039100	Argument	"""unknown search method\\n"""		1038140	0					
ANR	1039101	PrimaryExpression	"""unknown search method\\n"""		1038140	0					
ANR	1039102	BreakStatement	break ;	502:3:13198:13203	1038140	28	True				
ANR	1039103	BreakStatement	break ;	505:1:13213:13218	1038140	11	True				
ANR	1039104	Label	case '.' :	506:1:13221:13229	1038140	12	True				
ANR	1039105	ForStatement	for ( input ++ ; * input == '.' ; input ++ )		1038140	13					
ANR	1039106	ForInit	input ++ ;	507:7:13252:13259	1038140	0	True				
ANR	1039107	PostIncDecOperationExpression	input ++		1038140	0					
ANR	1039108	Identifier	input		1038140	0					
ANR	1039109	IncDec	++		1038140	1					
ANR	1039110	Condition	* input == '.'	507:16:13261:13273	1038140	1	True				
ANR	1039111	EqualityExpression	* input == '.'		1038140	0		==			
ANR	1039112	UnaryOperationExpression	* input		1038140	0					
ANR	1039113	UnaryOperator	*		1038140	0					
ANR	1039114	Identifier	input		1038140	1					
ANR	1039115	PrimaryExpression	'.'		1038140	1					
ANR	1039116	PostIncDecOperationExpression	input ++	507:31:13276:13282	1038140	2	True				
ANR	1039117	Identifier	input		1038140	0					
ANR	1039118	IncDec	++		1038140	1					
ANR	1039119	CompoundStatement		186:40:4336:4336	1038140	3					
ANR	1039120	ExpressionStatement		508:3:13290:13290	1038140	0	True				
ANR	1039121	ExpressionStatement	"r_core_seek_base ( core , input )"	510:2:13298:13328	1038140	14	True				
ANR	1039122	CallExpression	"r_core_seek_base ( core , input )"		1038140	0					
ANR	1039123	Callee	r_core_seek_base		1038140	0					
ANR	1039124	Identifier	r_core_seek_base		1038140	0					
ANR	1039125	ArgumentList	core		1038140	1					
ANR	1039126	Argument	core		1038140	0					
ANR	1039127	Identifier	core		1038140	0					
ANR	1039128	Argument	input		1038140	1					
ANR	1039129	Identifier	input		1038140	0					
ANR	1039130	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"	511:2:13332:13406	1038140	15	True				
ANR	1039131	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"		1038140	0					
ANR	1039132	Callee	r_io_sundo_push		1038140	0					
ANR	1039133	Identifier	r_io_sundo_push		1038140	0					
ANR	1039134	ArgumentList	core -> io		1038140	1					
ANR	1039135	Argument	core -> io		1038140	0					
ANR	1039136	PtrMemberAccess	core -> io		1038140	0					
ANR	1039137	Identifier	core		1038140	0					
ANR	1039138	Identifier	io		1038140	1					
ANR	1039139	Argument	core -> offset		1038140	1					
ANR	1039140	PtrMemberAccess	core -> offset		1038140	0					
ANR	1039141	Identifier	core		1038140	0					
ANR	1039142	Identifier	offset		1038140	1					
ANR	1039143	Argument	r_print_get_cursor ( core -> print )		1038140	2					
ANR	1039144	CallExpression	r_print_get_cursor ( core -> print )		1038140	0					
ANR	1039145	Callee	r_print_get_cursor		1038140	0					
ANR	1039146	Identifier	r_print_get_cursor		1038140	0					
ANR	1039147	ArgumentList	core -> print		1038140	1					
ANR	1039148	Argument	core -> print		1038140	0					
ANR	1039149	PtrMemberAccess	core -> print		1038140	0					
ANR	1039150	Identifier	core		1038140	0					
ANR	1039151	Identifier	print		1038140	1					
ANR	1039152	BreakStatement	break ;	512:2:13410:13415	1038140	16	True				
ANR	1039153	Label	case 'j' :	513:1:13418:13426	1038140	17	True				
ANR	1039154	CompoundStatement		200:3:4695:4709	1038140	18					
ANR	1039155	IdentifierDeclStatement	RList * addrs = r_list_newf ( free ) ;	515:3:13444:13490	1038140	0	True				
ANR	1039156	IdentifierDecl	* addrs = r_list_newf ( free )		1038140	0					
ANR	1039157	IdentifierDeclType	RList *		1038140	0					
ANR	1039158	Identifier	addrs		1038140	1					
ANR	1039159	AssignmentExpression	* addrs = r_list_newf ( free )		1038140	2		=			
ANR	1039160	Identifier	addrs		1038140	0					
ANR	1039161	CallExpression	r_list_newf ( free )		1038140	1					
ANR	1039162	Callee	r_list_newf		1038140	0					
ANR	1039163	Identifier	r_list_newf		1038140	0					
ANR	1039164	ArgumentList	free		1038140	1					
ANR	1039165	Argument	free		1038140	0					
ANR	1039166	Identifier	free		1038140	0					
ANR	1039167	IdentifierDeclStatement	RList * names = r_list_newf ( free ) ;	516:3:13495:13541	1038140	1	True				
ANR	1039168	IdentifierDecl	* names = r_list_newf ( free )		1038140	0					
ANR	1039169	IdentifierDeclType	RList *		1038140	0					
ANR	1039170	Identifier	names		1038140	1					
ANR	1039171	AssignmentExpression	* names = r_list_newf ( free )		1038140	2		=			
ANR	1039172	Identifier	names		1038140	0					
ANR	1039173	CallExpression	r_list_newf ( free )		1038140	1					
ANR	1039174	Callee	r_list_newf		1038140	0					
ANR	1039175	Identifier	r_list_newf		1038140	0					
ANR	1039176	ArgumentList	free		1038140	1					
ANR	1039177	Argument	free		1038140	0					
ANR	1039178	Identifier	free		1038140	0					
ANR	1039179	IdentifierDeclStatement	"RList * list = r_io_sundo_list ( core -> io , '!' ) ;"	517:3:13546:13591	1038140	2	True				
ANR	1039180	IdentifierDecl	"* list = r_io_sundo_list ( core -> io , '!' )"		1038140	0					
ANR	1039181	IdentifierDeclType	RList *		1038140	0					
ANR	1039182	Identifier	list		1038140	1					
ANR	1039183	AssignmentExpression	"* list = r_io_sundo_list ( core -> io , '!' )"		1038140	2		=			
ANR	1039184	Identifier	list		1038140	0					
ANR	1039185	CallExpression	"r_io_sundo_list ( core -> io , '!' )"		1038140	1					
ANR	1039186	Callee	r_io_sundo_list		1038140	0					
ANR	1039187	Identifier	r_io_sundo_list		1038140	0					
ANR	1039188	ArgumentList	core -> io		1038140	1					
ANR	1039189	Argument	core -> io		1038140	0					
ANR	1039190	PtrMemberAccess	core -> io		1038140	0					
ANR	1039191	Identifier	core		1038140	0					
ANR	1039192	Identifier	io		1038140	1					
ANR	1039193	Argument	'!'		1038140	1					
ANR	1039194	PrimaryExpression	'!'		1038140	0					
ANR	1039195	IdentifierDeclStatement	ut64 lsz = 0 ;	518:3:13596:13608	1038140	3	True				
ANR	1039196	IdentifierDecl	lsz = 0		1038140	0					
ANR	1039197	IdentifierDeclType	ut64		1038140	0					
ANR	1039198	Identifier	lsz		1038140	1					
ANR	1039199	AssignmentExpression	lsz = 0		1038140	2		=			
ANR	1039200	Identifier	lsz		1038140	0					
ANR	1039201	PrimaryExpression	0		1038140	1					
ANR	1039202	IdentifierDeclStatement	ut64 i ;	519:3:13613:13619	1038140	4	True				
ANR	1039203	IdentifierDecl	i		1038140	0					
ANR	1039204	IdentifierDeclType	ut64		1038140	0					
ANR	1039205	Identifier	i		1038140	1					
ANR	1039206	IdentifierDeclStatement	RListIter * iter ;	520:3:13624:13639	1038140	5	True				
ANR	1039207	IdentifierDecl	* iter		1038140	0					
ANR	1039208	IdentifierDeclType	RListIter *		1038140	0					
ANR	1039209	Identifier	iter		1038140	1					
ANR	1039210	IdentifierDeclStatement	RIOUndos * undo ;	521:3:13644:13658	1038140	6	True				
ANR	1039211	IdentifierDecl	* undo		1038140	0					
ANR	1039212	IdentifierDeclType	RIOUndos *		1038140	0					
ANR	1039213	Identifier	undo		1038140	1					
ANR	1039214	IfStatement	if ( list )		1038140	7					
ANR	1039215	Condition	list	522:7:13667:13670	1038140	0	True				
ANR	1039216	Identifier	list		1038140	0					
ANR	1039217	CompoundStatement		201:13:4724:4724	1038140	1					
ANR	1039218	Statement	r_list_foreach	523:4:13679:13692	1038140	0	True				
ANR	1039219	Statement	(	523:19:13694:13694	1038140	1	True				
ANR	1039220	Statement	list	523:20:13695:13698	1038140	2	True				
ANR	1039221	Statement	","	523:24:13699:13699	1038140	3	True				
ANR	1039222	Statement	iter	523:26:13701:13704	1038140	4	True				
ANR	1039223	Statement	","	523:30:13705:13705	1038140	5	True				
ANR	1039224	Statement	undo	523:32:13707:13710	1038140	6	True				
ANR	1039225	Statement	)	523:36:13711:13711	1038140	7	True				
ANR	1039226	CompoundStatement		217:5:5108:5142	1038140	8					
ANR	1039227	IdentifierDeclStatement	char * name = NULL ;	524:5:13720:13737	1038140	0	True				
ANR	1039228	IdentifierDecl	* name = NULL		1038140	0					
ANR	1039229	IdentifierDeclType	char *		1038140	0					
ANR	1039230	Identifier	name		1038140	1					
ANR	1039231	AssignmentExpression	* name = NULL		1038140	2		=			
ANR	1039232	Identifier	NULL		1038140	0					
ANR	1039233	Identifier	NULL		1038140	1					
ANR	1039234	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_at ( core -> flags , undo -> off , true ) ;"	526:5:13745:13804	1038140	1	True				
ANR	1039235	IdentifierDecl	"* f = r_flag_get_at ( core -> flags , undo -> off , true )"		1038140	0					
ANR	1039236	IdentifierDeclType	RFlagItem *		1038140	0					
ANR	1039237	Identifier	f		1038140	1					
ANR	1039238	AssignmentExpression	"* f = r_flag_get_at ( core -> flags , undo -> off , true )"		1038140	2		=			
ANR	1039239	Identifier	f		1038140	0					
ANR	1039240	CallExpression	"r_flag_get_at ( core -> flags , undo -> off , true )"		1038140	1					
ANR	1039241	Callee	r_flag_get_at		1038140	0					
ANR	1039242	Identifier	r_flag_get_at		1038140	0					
ANR	1039243	ArgumentList	core -> flags		1038140	1					
ANR	1039244	Argument	core -> flags		1038140	0					
ANR	1039245	PtrMemberAccess	core -> flags		1038140	0					
ANR	1039246	Identifier	core		1038140	0					
ANR	1039247	Identifier	flags		1038140	1					
ANR	1039248	Argument	undo -> off		1038140	1					
ANR	1039249	PtrMemberAccess	undo -> off		1038140	0					
ANR	1039250	Identifier	undo		1038140	0					
ANR	1039251	Identifier	off		1038140	1					
ANR	1039252	Argument	true		1038140	2					
ANR	1039253	Identifier	true		1038140	0					
ANR	1039254	IfStatement	if ( f )		1038140	2					
ANR	1039255	Condition	f	527:9:13815:13815	1038140	0	True				
ANR	1039256	Identifier	f		1038140	0					
ANR	1039257	CompoundStatement		206:12:4869:4869	1038140	1					
ANR	1039258	IfStatement	if ( f -> offset != undo -> off )		1038140	0					
ANR	1039259	Condition	f -> offset != undo -> off	528:10:13830:13851	1038140	0	True				
ANR	1039260	EqualityExpression	f -> offset != undo -> off		1038140	0		!=			
ANR	1039261	PtrMemberAccess	f -> offset		1038140	0					
ANR	1039262	Identifier	f		1038140	0					
ANR	1039263	Identifier	offset		1038140	1					
ANR	1039264	PtrMemberAccess	undo -> off		1038140	1					
ANR	1039265	Identifier	undo		1038140	0					
ANR	1039266	Identifier	off		1038140	1					
ANR	1039267	CompoundStatement		207:34:4905:4905	1038140	1					
ANR	1039268	ExpressionStatement	"name = r_str_newf ( ""%s+%d"" , f -> name , ( int ) ( undo -> off - f -> offset ) )"	529:7:13863:13937	1038140	0	True				
ANR	1039269	AssignmentExpression	"name = r_str_newf ( ""%s+%d"" , f -> name , ( int ) ( undo -> off - f -> offset ) )"		1038140	0		=			
ANR	1039270	Identifier	name		1038140	0					
ANR	1039271	CallExpression	"r_str_newf ( ""%s+%d"" , f -> name , ( int ) ( undo -> off - f -> offset ) )"		1038140	1					
ANR	1039272	Callee	r_str_newf		1038140	0					
ANR	1039273	Identifier	r_str_newf		1038140	0					
ANR	1039274	ArgumentList	"""%s+%d"""		1038140	1					
ANR	1039275	Argument	"""%s+%d"""		1038140	0					
ANR	1039276	PrimaryExpression	"""%s+%d"""		1038140	0					
ANR	1039277	Argument	f -> name		1038140	1					
ANR	1039278	PtrMemberAccess	f -> name		1038140	0					
ANR	1039279	Identifier	f		1038140	0					
ANR	1039280	Identifier	name		1038140	1					
ANR	1039281	Argument	( int ) ( undo -> off - f -> offset )		1038140	2					
ANR	1039282	CastExpression	( int ) ( undo -> off - f -> offset )		1038140	0					
ANR	1039283	CastTarget	int		1038140	0					
ANR	1039284	AdditiveExpression	undo -> off - f -> offset		1038140	1		-			
ANR	1039285	PtrMemberAccess	undo -> off		1038140	0					
ANR	1039286	Identifier	undo		1038140	0					
ANR	1039287	Identifier	off		1038140	1					
ANR	1039288	PtrMemberAccess	f -> offset		1038140	1					
ANR	1039289	Identifier	f		1038140	0					
ANR	1039290	Identifier	offset		1038140	1					
ANR	1039291	ElseStatement	else		1038140	0					
ANR	1039292	CompoundStatement		210:13:5003:5003	1038140	0					
ANR	1039293	ExpressionStatement	name = strdup ( f -> name )	532:7:13961:13984	1038140	0	True				
ANR	1039294	AssignmentExpression	name = strdup ( f -> name )		1038140	0		=			
ANR	1039295	Identifier	name		1038140	0					
ANR	1039296	CallExpression	strdup ( f -> name )		1038140	1					
ANR	1039297	Callee	strdup		1038140	0					
ANR	1039298	Identifier	strdup		1038140	0					
ANR	1039299	ArgumentList	f -> name		1038140	1					
ANR	1039300	Argument	f -> name		1038140	0					
ANR	1039301	PtrMemberAccess	f -> name		1038140	0					
ANR	1039302	Identifier	f		1038140	0					
ANR	1039303	Identifier	name		1038140	1					
ANR	1039304	IfStatement	if ( ! name )		1038140	3					
ANR	1039305	Condition	! name	535:9:14010:14014	1038140	0	True				
ANR	1039306	UnaryOperationExpression	! name		1038140	0					
ANR	1039307	UnaryOperator	!		1038140	0					
ANR	1039308	Identifier	name		1038140	1					
ANR	1039309	CompoundStatement		214:16:5068:5068	1038140	1					
ANR	1039310	ExpressionStatement	"name = strdup ( """" )"	536:6:14025:14043	1038140	0	True				
ANR	1039311	AssignmentExpression	"name = strdup ( """" )"		1038140	0		=			
ANR	1039312	Identifier	name		1038140	0					
ANR	1039313	CallExpression	"strdup ( """" )"		1038140	1					
ANR	1039314	Callee	strdup		1038140	0					
ANR	1039315	Identifier	strdup		1038140	0					
ANR	1039316	ArgumentList	""""""		1038140	1					
ANR	1039317	Argument	""""""		1038140	0					
ANR	1039318	PrimaryExpression	""""""		1038140	0					
ANR	1039319	IdentifierDeclStatement	ut64 * val = malloc ( sizeof ( ut64 ) ) ;	538:5:14057:14091	1038140	4	True				
ANR	1039320	IdentifierDecl	* val = malloc ( sizeof ( ut64 ) )		1038140	0					
ANR	1039321	IdentifierDeclType	ut64 *		1038140	0					
ANR	1039322	Identifier	val		1038140	1					
ANR	1039323	AssignmentExpression	* val = malloc ( sizeof ( ut64 ) )		1038140	2		=			
ANR	1039324	Identifier	val		1038140	0					
ANR	1039325	CallExpression	malloc ( sizeof ( ut64 ) )		1038140	1					
ANR	1039326	Callee	malloc		1038140	0					
ANR	1039327	Identifier	malloc		1038140	0					
ANR	1039328	ArgumentList	sizeof ( ut64 )		1038140	1					
ANR	1039329	Argument	sizeof ( ut64 )		1038140	0					
ANR	1039330	SizeofExpression	sizeof ( ut64 )		1038140	0					
ANR	1039331	Sizeof	sizeof		1038140	0					
ANR	1039332	SizeofOperand	ut64		1038140	1					
ANR	1039333	IfStatement	if ( ! val )		1038140	5					
ANR	1039334	Condition	! val	539:9:14102:14105	1038140	0	True				
ANR	1039335	UnaryOperationExpression	! val		1038140	0					
ANR	1039336	UnaryOperator	!		1038140	0					
ANR	1039337	Identifier	val		1038140	1					
ANR	1039338	CompoundStatement		218:15:5159:5159	1038140	1					
ANR	1039339	ExpressionStatement	free ( name )	540:6:14116:14127	1038140	0	True				
ANR	1039340	CallExpression	free ( name )		1038140	0					
ANR	1039341	Callee	free		1038140	0					
ANR	1039342	Identifier	free		1038140	0					
ANR	1039343	ArgumentList	name		1038140	1					
ANR	1039344	Argument	name		1038140	0					
ANR	1039345	Identifier	name		1038140	0					
ANR	1039346	BreakStatement	break ;	541:6:14135:14140	1038140	1	True				
ANR	1039347	ExpressionStatement	* val = undo -> off	543:5:14154:14170	1038140	6	True				
ANR	1039348	AssignmentExpression	* val = undo -> off		1038140	0		=			
ANR	1039349	UnaryOperationExpression	* val		1038140	0					
ANR	1039350	UnaryOperator	*		1038140	0					
ANR	1039351	Identifier	val		1038140	1					
ANR	1039352	PtrMemberAccess	undo -> off		1038140	1					
ANR	1039353	Identifier	undo		1038140	0					
ANR	1039354	Identifier	off		1038140	1					
ANR	1039355	ExpressionStatement	"r_list_append ( addrs , val )"	544:5:14177:14203	1038140	7	True				
ANR	1039356	CallExpression	"r_list_append ( addrs , val )"		1038140	0					
ANR	1039357	Callee	r_list_append		1038140	0					
ANR	1039358	Identifier	r_list_append		1038140	0					
ANR	1039359	ArgumentList	addrs		1038140	1					
ANR	1039360	Argument	addrs		1038140	0					
ANR	1039361	Identifier	addrs		1038140	0					
ANR	1039362	Argument	val		1038140	1					
ANR	1039363	Identifier	val		1038140	0					
ANR	1039364	ExpressionStatement	"r_list_append ( names , strdup ( name ) )"	545:5:14210:14246	1038140	8	True				
ANR	1039365	CallExpression	"r_list_append ( names , strdup ( name ) )"		1038140	0					
ANR	1039366	Callee	r_list_append		1038140	0					
ANR	1039367	Identifier	r_list_append		1038140	0					
ANR	1039368	ArgumentList	names		1038140	1					
ANR	1039369	Argument	names		1038140	0					
ANR	1039370	Identifier	names		1038140	0					
ANR	1039371	Argument	strdup ( name )		1038140	1					
ANR	1039372	CallExpression	strdup ( name )		1038140	0					
ANR	1039373	Callee	strdup		1038140	0					
ANR	1039374	Identifier	strdup		1038140	0					
ANR	1039375	ArgumentList	name		1038140	1					
ANR	1039376	Argument	name		1038140	0					
ANR	1039377	Identifier	name		1038140	0					
ANR	1039378	ExpressionStatement	lsz ++	546:5:14253:14258	1038140	9	True				
ANR	1039379	PostIncDecOperationExpression	lsz ++		1038140	0					
ANR	1039380	Identifier	lsz		1038140	0					
ANR	1039381	IncDec	++		1038140	1					
ANR	1039382	ExpressionStatement	free ( name )	547:5:14265:14276	1038140	10	True				
ANR	1039383	CallExpression	free ( name )		1038140	0					
ANR	1039384	Callee	free		1038140	0					
ANR	1039385	Identifier	free		1038140	0					
ANR	1039386	ArgumentList	name		1038140	1					
ANR	1039387	Argument	name		1038140	0					
ANR	1039388	Identifier	name		1038140	0					
ANR	1039389	ExpressionStatement	r_list_free ( list )	549:4:14288:14306	1038140	9	True				
ANR	1039390	CallExpression	r_list_free ( list )		1038140	0					
ANR	1039391	Callee	r_list_free		1038140	0					
ANR	1039392	Identifier	r_list_free		1038140	0					
ANR	1039393	ArgumentList	list		1038140	1					
ANR	1039394	Argument	list		1038140	0					
ANR	1039395	Identifier	list		1038140	0					
ANR	1039396	ExpressionStatement	"r_cons_printf ( ""["" )"	551:3:14316:14335	1038140	8	True				
ANR	1039397	CallExpression	"r_cons_printf ( ""["" )"		1038140	0					
ANR	1039398	Callee	r_cons_printf		1038140	0					
ANR	1039399	Identifier	r_cons_printf		1038140	0					
ANR	1039400	ArgumentList	"""["""		1038140	1					
ANR	1039401	Argument	"""["""		1038140	0					
ANR	1039402	PrimaryExpression	"""["""		1038140	0					
ANR	1039403	ForStatement	for ( i = 0 ; i < lsz ; ++ i )		1038140	9					
ANR	1039404	ForInit	i = 0 ;	552:8:14345:14350	1038140	0	True				
ANR	1039405	AssignmentExpression	i = 0		1038140	0		=			
ANR	1039406	Identifier	i		1038140	0					
ANR	1039407	PrimaryExpression	0		1038140	1					
ANR	1039408	Condition	i < lsz	552:15:14352:14358	1038140	1	True				
ANR	1039409	RelationalExpression	i < lsz		1038140	0		<			
ANR	1039410	Identifier	i		1038140	0					
ANR	1039411	Identifier	lsz		1038140	1					
ANR	1039412	UnaryExpression	++ i	552:24:14361:14363	1038140	2	True				
ANR	1039413	IncDec	++		1038140	0					
ANR	1039414	Identifier	i		1038140	1					
ANR	1039415	CompoundStatement		233:4:5465:5507	1038140	3					
ANR	1039416	IdentifierDeclStatement	"ut64 * addr = r_list_get_n ( addrs , i ) ;"	553:4:14372:14408	1038140	0	True				
ANR	1039417	IdentifierDecl	"* addr = r_list_get_n ( addrs , i )"		1038140	0					
ANR	1039418	IdentifierDeclType	ut64 *		1038140	0					
ANR	1039419	Identifier	addr		1038140	1					
ANR	1039420	AssignmentExpression	"* addr = r_list_get_n ( addrs , i )"		1038140	2		=			
ANR	1039421	Identifier	addr		1038140	0					
ANR	1039422	CallExpression	"r_list_get_n ( addrs , i )"		1038140	1					
ANR	1039423	Callee	r_list_get_n		1038140	0					
ANR	1039424	Identifier	r_list_get_n		1038140	0					
ANR	1039425	ArgumentList	addrs		1038140	1					
ANR	1039426	Argument	addrs		1038140	0					
ANR	1039427	Identifier	addrs		1038140	0					
ANR	1039428	Argument	i		1038140	1					
ANR	1039429	Identifier	i		1038140	0					
ANR	1039430	IdentifierDeclStatement	"const char * name = r_list_get_n ( names , i ) ;"	554:4:14414:14456	1038140	1	True				
ANR	1039431	IdentifierDecl	"* name = r_list_get_n ( names , i )"		1038140	0					
ANR	1039432	IdentifierDeclType	const char *		1038140	0					
ANR	1039433	Identifier	name		1038140	1					
ANR	1039434	AssignmentExpression	"* name = r_list_get_n ( names , i )"		1038140	2		=			
ANR	1039435	Identifier	name		1038140	0					
ANR	1039436	CallExpression	"r_list_get_n ( names , i )"		1038140	1					
ANR	1039437	Callee	r_list_get_n		1038140	0					
ANR	1039438	Identifier	r_list_get_n		1038140	0					
ANR	1039439	ArgumentList	names		1038140	1					
ANR	1039440	Argument	names		1038140	0					
ANR	1039441	Identifier	names		1038140	0					
ANR	1039442	Argument	i		1038140	1					
ANR	1039443	Identifier	i		1038140	0					
ANR	1039444	Statement	r_cons_printf	557:4:14551:14563	1038140	2	True				
ANR	1039445	Statement	(	557:18:14565:14565	1038140	3	True				
ANR	1039446	Statement	"""{\\""offset\\"":%"""	557:19:14566:14580	1038140	4	True				
ANR	1039447	Statement	PFMT64d	557:34:14581:14587	1038140	5	True				
ANR	1039448	Statement	""",\\""symbol\\"":\\""%s\\""}"""	557:41:14588:14608	1038140	6	True				
ANR	1039449	Statement	","	557:62:14609:14609	1038140	7	True				
ANR	1039450	Statement	*	557:64:14611:14611	1038140	8	True				
ANR	1039451	Statement	addr	557:65:14612:14615	1038140	9	True				
ANR	1039452	Statement	","	557:69:14616:14616	1038140	10	True				
ANR	1039453	Statement	name	557:71:14618:14621	1038140	11	True				
ANR	1039454	Statement	)	557:75:14622:14622	1038140	12	True				
ANR	1039455	ExpressionStatement		557:76:14623:14623	1038140	13	True				
ANR	1039456	IfStatement	if ( i != lsz - 1 )		1038140	14					
ANR	1039457	Condition	i != lsz - 1	558:8:14633:14644	1038140	0	True				
ANR	1039458	EqualityExpression	i != lsz - 1		1038140	0		!=			
ANR	1039459	Identifier	i		1038140	0					
ANR	1039460	AdditiveExpression	lsz - 1		1038140	1		-			
ANR	1039461	Identifier	lsz		1038140	0					
ANR	1039462	PrimaryExpression	1		1038140	1					
ANR	1039463	CompoundStatement		237:22:5698:5698	1038140	1					
ANR	1039464	ExpressionStatement	"r_cons_printf ( "","" )"	559:5:14654:14673	1038140	0	True				
ANR	1039465	CallExpression	"r_cons_printf ( "","" )"		1038140	0					
ANR	1039466	Callee	r_cons_printf		1038140	0					
ANR	1039467	Identifier	r_cons_printf		1038140	0					
ANR	1039468	ArgumentList	""","""		1038140	1					
ANR	1039469	Argument	""","""		1038140	0					
ANR	1039470	PrimaryExpression	""","""		1038140	0					
ANR	1039471	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	562:3:14689:14710	1038140	10	True				
ANR	1039472	CallExpression	"r_cons_printf ( ""]\\n"" )"		1038140	0					
ANR	1039473	Callee	r_cons_printf		1038140	0					
ANR	1039474	Identifier	r_cons_printf		1038140	0					
ANR	1039475	ArgumentList	"""]\\n"""		1038140	1					
ANR	1039476	Argument	"""]\\n"""		1038140	0					
ANR	1039477	PrimaryExpression	"""]\\n"""		1038140	0					
ANR	1039478	ExpressionStatement	r_list_free ( addrs )	563:3:14715:14734	1038140	11	True				
ANR	1039479	CallExpression	r_list_free ( addrs )		1038140	0					
ANR	1039480	Callee	r_list_free		1038140	0					
ANR	1039481	Identifier	r_list_free		1038140	0					
ANR	1039482	ArgumentList	addrs		1038140	1					
ANR	1039483	Argument	addrs		1038140	0					
ANR	1039484	Identifier	addrs		1038140	0					
ANR	1039485	ExpressionStatement	r_list_free ( names )	564:3:14739:14758	1038140	12	True				
ANR	1039486	CallExpression	r_list_free ( names )		1038140	0					
ANR	1039487	Callee	r_list_free		1038140	0					
ANR	1039488	Identifier	r_list_free		1038140	0					
ANR	1039489	ArgumentList	names		1038140	1					
ANR	1039490	Argument	names		1038140	0					
ANR	1039491	Identifier	names		1038140	0					
ANR	1039492	BreakStatement	break ;	566:2:14766:14771	1038140	19	True				
ANR	1039493	Label	case '*' :	567:1:14774:14782	1038140	20	True				
ANR	1039494	Label	case '=' :	568:1:14793:14801	1038140	21	True				
ANR	1039495	Label	case '!' :	569:1:14812:14820	1038140	22	True				
ANR	1039496	CompoundStatement		254:3:5958:6004	1038140	23					
ANR	1039497	IdentifierDeclStatement	char mode = input [ 0 ] ;	571:3:14837:14857	1038140	0	True				
ANR	1039498	IdentifierDecl	mode = input [ 0 ]		1038140	0					
ANR	1039499	IdentifierDeclType	char		1038140	0					
ANR	1039500	Identifier	mode		1038140	1					
ANR	1039501	AssignmentExpression	mode = input [ 0 ]		1038140	2		=			
ANR	1039502	Identifier	mode		1038140	0					
ANR	1039503	ArrayIndexing	input [ 0 ]		1038140	1					
ANR	1039504	Identifier	input		1038140	0					
ANR	1039505	PrimaryExpression	0		1038140	1					
ANR	1039506	IfStatement	if ( input [ 1 ] == '=' )		1038140	1					
ANR	1039507	Condition	input [ 1 ] == '='	572:7:14866:14880	1038140	0	True				
ANR	1039508	EqualityExpression	input [ 1 ] == '='		1038140	0		==			
ANR	1039509	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1039510	Identifier	input		1038140	0					
ANR	1039511	PrimaryExpression	1		1038140	1					
ANR	1039512	PrimaryExpression	'='		1038140	1					
ANR	1039513	CompoundStatement		251:24:5934:5934	1038140	1					
ANR	1039514	ExpressionStatement	mode = 0	573:4:14889:14897	1038140	0	True				
ANR	1039515	AssignmentExpression	mode = 0		1038140	0		=			
ANR	1039516	Identifier	mode		1038140	0					
ANR	1039517	PrimaryExpression	0		1038140	1					
ANR	1039518	IdentifierDeclStatement	"RList * list = r_io_sundo_list ( core -> io , mode ) ;"	575:3:14907:14953	1038140	2	True				
ANR	1039519	IdentifierDecl	"* list = r_io_sundo_list ( core -> io , mode )"		1038140	0					
ANR	1039520	IdentifierDeclType	RList *		1038140	0					
ANR	1039521	Identifier	list		1038140	1					
ANR	1039522	AssignmentExpression	"* list = r_io_sundo_list ( core -> io , mode )"		1038140	2		=			
ANR	1039523	Identifier	list		1038140	0					
ANR	1039524	CallExpression	"r_io_sundo_list ( core -> io , mode )"		1038140	1					
ANR	1039525	Callee	r_io_sundo_list		1038140	0					
ANR	1039526	Identifier	r_io_sundo_list		1038140	0					
ANR	1039527	ArgumentList	core -> io		1038140	1					
ANR	1039528	Argument	core -> io		1038140	0					
ANR	1039529	PtrMemberAccess	core -> io		1038140	0					
ANR	1039530	Identifier	core		1038140	0					
ANR	1039531	Identifier	io		1038140	1					
ANR	1039532	Argument	mode		1038140	1					
ANR	1039533	Identifier	mode		1038140	0					
ANR	1039534	IfStatement	if ( list )		1038140	3					
ANR	1039535	Condition	list	576:7:14962:14965	1038140	0	True				
ANR	1039536	Identifier	list		1038140	0					
ANR	1039537	CompoundStatement		257:4:6046:6060	1038140	1					
ANR	1039538	IdentifierDeclStatement	RListIter * iter ;	577:4:14974:14989	1038140	0	True				
ANR	1039539	IdentifierDecl	* iter		1038140	0					
ANR	1039540	IdentifierDeclType	RListIter *		1038140	0					
ANR	1039541	Identifier	iter		1038140	1					
ANR	1039542	IdentifierDeclStatement	RIOUndos * undo ;	578:4:14995:15009	1038140	1	True				
ANR	1039543	IdentifierDecl	* undo		1038140	0					
ANR	1039544	IdentifierDeclType	RIOUndos *		1038140	0					
ANR	1039545	Identifier	undo		1038140	1					
ANR	1039546	Statement	r_list_foreach	579:4:15015:15028	1038140	2	True				
ANR	1039547	Statement	(	579:19:15030:15030	1038140	3	True				
ANR	1039548	Statement	list	579:20:15031:15034	1038140	4	True				
ANR	1039549	Statement	","	579:24:15035:15035	1038140	5	True				
ANR	1039550	Statement	iter	579:26:15037:15040	1038140	6	True				
ANR	1039551	Statement	","	579:30:15041:15041	1038140	7	True				
ANR	1039552	Statement	undo	579:32:15043:15046	1038140	8	True				
ANR	1039553	Statement	)	579:36:15047:15047	1038140	9	True				
ANR	1039554	CompoundStatement		261:5:6132:6191	1038140	10					
ANR	1039555	IdentifierDeclStatement	char * name = NULL ;	580:5:15056:15073	1038140	0	True				
ANR	1039556	IdentifierDecl	* name = NULL		1038140	0					
ANR	1039557	IdentifierDeclType	char *		1038140	0					
ANR	1039558	Identifier	name		1038140	1					
ANR	1039559	AssignmentExpression	* name = NULL		1038140	2		=			
ANR	1039560	Identifier	NULL		1038140	0					
ANR	1039561	Identifier	NULL		1038140	1					
ANR	1039562	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_at ( core -> flags , undo -> off , true ) ;"	582:5:15081:15140	1038140	1	True				
ANR	1039563	IdentifierDecl	"* f = r_flag_get_at ( core -> flags , undo -> off , true )"		1038140	0					
ANR	1039564	IdentifierDeclType	RFlagItem *		1038140	0					
ANR	1039565	Identifier	f		1038140	1					
ANR	1039566	AssignmentExpression	"* f = r_flag_get_at ( core -> flags , undo -> off , true )"		1038140	2		=			
ANR	1039567	Identifier	f		1038140	0					
ANR	1039568	CallExpression	"r_flag_get_at ( core -> flags , undo -> off , true )"		1038140	1					
ANR	1039569	Callee	r_flag_get_at		1038140	0					
ANR	1039570	Identifier	r_flag_get_at		1038140	0					
ANR	1039571	ArgumentList	core -> flags		1038140	1					
ANR	1039572	Argument	core -> flags		1038140	0					
ANR	1039573	PtrMemberAccess	core -> flags		1038140	0					
ANR	1039574	Identifier	core		1038140	0					
ANR	1039575	Identifier	flags		1038140	1					
ANR	1039576	Argument	undo -> off		1038140	1					
ANR	1039577	PtrMemberAccess	undo -> off		1038140	0					
ANR	1039578	Identifier	undo		1038140	0					
ANR	1039579	Identifier	off		1038140	1					
ANR	1039580	Argument	true		1038140	2					
ANR	1039581	Identifier	true		1038140	0					
ANR	1039582	IfStatement	if ( f )		1038140	2					
ANR	1039583	Condition	f	583:9:15151:15151	1038140	0	True				
ANR	1039584	Identifier	f		1038140	0					
ANR	1039585	CompoundStatement		262:12:6205:6205	1038140	1					
ANR	1039586	IfStatement	if ( f -> offset != undo -> off )		1038140	0					
ANR	1039587	Condition	f -> offset != undo -> off	584:10:15166:15187	1038140	0	True				
ANR	1039588	EqualityExpression	f -> offset != undo -> off		1038140	0		!=			
ANR	1039589	PtrMemberAccess	f -> offset		1038140	0					
ANR	1039590	Identifier	f		1038140	0					
ANR	1039591	Identifier	offset		1038140	1					
ANR	1039592	PtrMemberAccess	undo -> off		1038140	1					
ANR	1039593	Identifier	undo		1038140	0					
ANR	1039594	Identifier	off		1038140	1					
ANR	1039595	CompoundStatement		263:34:6241:6241	1038140	1					
ANR	1039596	ExpressionStatement	"name = r_str_newf ( ""%s + %d\\n"" , f -> name , ( int ) ( undo -> off - f -> offset ) )"	585:7:15199:15278	1038140	0	True				
ANR	1039597	AssignmentExpression	"name = r_str_newf ( ""%s + %d\\n"" , f -> name , ( int ) ( undo -> off - f -> offset ) )"		1038140	0		=			
ANR	1039598	Identifier	name		1038140	0					
ANR	1039599	CallExpression	"r_str_newf ( ""%s + %d\\n"" , f -> name , ( int ) ( undo -> off - f -> offset ) )"		1038140	1					
ANR	1039600	Callee	r_str_newf		1038140	0					
ANR	1039601	Identifier	r_str_newf		1038140	0					
ANR	1039602	ArgumentList	"""%s + %d\\n"""		1038140	1					
ANR	1039603	Argument	"""%s + %d\\n"""		1038140	0					
ANR	1039604	PrimaryExpression	"""%s + %d\\n"""		1038140	0					
ANR	1039605	Argument	f -> name		1038140	1					
ANR	1039606	PtrMemberAccess	f -> name		1038140	0					
ANR	1039607	Identifier	f		1038140	0					
ANR	1039608	Identifier	name		1038140	1					
ANR	1039609	Argument	( int ) ( undo -> off - f -> offset )		1038140	2					
ANR	1039610	CastExpression	( int ) ( undo -> off - f -> offset )		1038140	0					
ANR	1039611	CastTarget	int		1038140	0					
ANR	1039612	AdditiveExpression	undo -> off - f -> offset		1038140	1		-			
ANR	1039613	PtrMemberAccess	undo -> off		1038140	0					
ANR	1039614	Identifier	undo		1038140	0					
ANR	1039615	Identifier	off		1038140	1					
ANR	1039616	PtrMemberAccess	f -> offset		1038140	1					
ANR	1039617	Identifier	f		1038140	0					
ANR	1039618	Identifier	offset		1038140	1					
ANR	1039619	ElseStatement	else		1038140	0					
ANR	1039620	CompoundStatement		266:13:6344:6344	1038140	0					
ANR	1039621	ExpressionStatement	name = strdup ( f -> name )	588:7:15302:15325	1038140	0	True				
ANR	1039622	AssignmentExpression	name = strdup ( f -> name )		1038140	0		=			
ANR	1039623	Identifier	name		1038140	0					
ANR	1039624	CallExpression	strdup ( f -> name )		1038140	1					
ANR	1039625	Callee	strdup		1038140	0					
ANR	1039626	Identifier	strdup		1038140	0					
ANR	1039627	ArgumentList	f -> name		1038140	1					
ANR	1039628	Argument	f -> name		1038140	0					
ANR	1039629	PtrMemberAccess	f -> name		1038140	0					
ANR	1039630	Identifier	f		1038140	0					
ANR	1039631	Identifier	name		1038140	1					
ANR	1039632	IfStatement	if ( mode )		1038140	3					
ANR	1039633	Condition	mode	591:9:15351:15354	1038140	0	True				
ANR	1039634	Identifier	mode		1038140	0					
ANR	1039635	CompoundStatement		270:15:6408:6408	1038140	1					
ANR	1039636	Statement	r_cons_printf	592:6:15365:15377	1038140	0	True				
ANR	1039637	Statement	(	592:20:15379:15379	1038140	1	True				
ANR	1039638	Statement	"""0x%"""	592:21:15380:15384	1038140	2	True				
ANR	1039639	Statement	PFMT64x	592:26:15385:15391	1038140	3	True				
ANR	1039640	Statement	""" %s\\n"""	592:33:15392:15398	1038140	4	True				
ANR	1039641	Statement	","	592:40:15399:15399	1038140	5	True				
ANR	1039642	Statement	undo	592:42:15401:15404	1038140	6	True				
ANR	1039643	Statement	->	592:46:15405:15406	1038140	7	True				
ANR	1039644	Statement	off	592:48:15407:15409	1038140	8	True				
ANR	1039645	Statement	","	592:51:15410:15410	1038140	9	True				
ANR	1039646	Statement	name	592:53:15412:15415	1038140	10	True				
ANR	1039647	Statement	?	592:57:15416:15416	1038140	11	True				
ANR	1039648	Label	name :	592:59:15418:15422	1038140	12	True				
ANR	1039649	Identifier	name		1038140	0					
ANR	1039650	Statement	""""""	592:65:15424:15425	1038140	13	True				
ANR	1039651	Statement	)	592:67:15426:15426	1038140	14	True				
ANR	1039652	ExpressionStatement		592:68:15427:15427	1038140	15	True				
ANR	1039653	ElseStatement	else		1038140	0					
ANR	1039654	CompoundStatement		272:12:6492:6492	1038140	0					
ANR	1039655	IfStatement	if ( ! name )		1038140	0					
ANR	1039656	Condition	! name	594:10:15453:15457	1038140	0	True				
ANR	1039657	UnaryOperationExpression	! name		1038140	0					
ANR	1039658	UnaryOperator	!		1038140	0					
ANR	1039659	Identifier	name		1038140	1					
ANR	1039660	CompoundStatement		273:17:6511:6511	1038140	1					
ANR	1039661	Statement	name	595:7:15469:15472	1038140	0	True				
ANR	1039662	Statement	=	595:12:15474:15474	1038140	1	True				
ANR	1039663	Statement	r_str_newf	595:14:15476:15485	1038140	2	True				
ANR	1039664	Statement	(	595:25:15487:15487	1038140	3	True				
ANR	1039665	Statement	"""0x%"""	595:26:15488:15492	1038140	4	True				
ANR	1039666	Statement	PFMT64x	595:31:15493:15499	1038140	5	True				
ANR	1039667	Statement	","	595:38:15500:15500	1038140	6	True				
ANR	1039668	Statement	undo	595:40:15502:15505	1038140	7	True				
ANR	1039669	Statement	->	595:44:15506:15507	1038140	8	True				
ANR	1039670	Statement	off	595:46:15508:15510	1038140	9	True				
ANR	1039671	Statement	)	595:49:15511:15511	1038140	10	True				
ANR	1039672	ExpressionStatement		595:50:15512:15512	1038140	11	True				
ANR	1039673	ExpressionStatement	"r_cons_printf ( ""%s%s"" , name , iter -> n ? "" > "" : """" )"	597:6:15528:15575	1038140	1	True				
ANR	1039674	CallExpression	"r_cons_printf ( ""%s%s"" , name , iter -> n ? "" > "" : """" )"		1038140	0					
ANR	1039675	Callee	r_cons_printf		1038140	0					
ANR	1039676	Identifier	r_cons_printf		1038140	0					
ANR	1039677	ArgumentList	"""%s%s"""		1038140	1					
ANR	1039678	Argument	"""%s%s"""		1038140	0					
ANR	1039679	PrimaryExpression	"""%s%s"""		1038140	0					
ANR	1039680	Argument	name		1038140	1					
ANR	1039681	Identifier	name		1038140	0					
ANR	1039682	Argument	"iter -> n ? "" > "" : """""		1038140	2					
ANR	1039683	ConditionalExpression	"iter -> n ? "" > "" : """""		1038140	0					
ANR	1039684	Condition	iter -> n		1038140	0					
ANR	1039685	PtrMemberAccess	iter -> n		1038140	0					
ANR	1039686	Identifier	iter		1038140	0					
ANR	1039687	Identifier	n		1038140	1					
ANR	1039688	PrimaryExpression	""" > """		1038140	1					
ANR	1039689	PrimaryExpression	""""""		1038140	2					
ANR	1039690	ExpressionStatement	free ( name )	599:5:15589:15600	1038140	4	True				
ANR	1039691	CallExpression	free ( name )		1038140	0					
ANR	1039692	Callee	free		1038140	0					
ANR	1039693	Identifier	free		1038140	0					
ANR	1039694	ArgumentList	name		1038140	1					
ANR	1039695	Argument	name		1038140	0					
ANR	1039696	Identifier	name		1038140	0					
ANR	1039697	ExpressionStatement	r_list_free ( list )	601:4:15612:15630	1038140	11	True				
ANR	1039698	CallExpression	r_list_free ( list )		1038140	0					
ANR	1039699	Callee	r_list_free		1038140	0					
ANR	1039700	Identifier	r_list_free		1038140	0					
ANR	1039701	ArgumentList	list		1038140	1					
ANR	1039702	Argument	list		1038140	0					
ANR	1039703	Identifier	list		1038140	0					
ANR	1039704	IfStatement	if ( ! mode )		1038140	12					
ANR	1039705	Condition	! mode	602:8:15640:15644	1038140	0	True				
ANR	1039706	UnaryOperationExpression	! mode		1038140	0					
ANR	1039707	UnaryOperator	!		1038140	0					
ANR	1039708	Identifier	mode		1038140	1					
ANR	1039709	CompoundStatement		281:15:6698:6698	1038140	1					
ANR	1039710	ExpressionStatement	r_cons_newline ( )	603:5:15654:15671	1038140	0	True				
ANR	1039711	CallExpression	r_cons_newline ( )		1038140	0					
ANR	1039712	Callee	r_cons_newline		1038140	0					
ANR	1039713	Identifier	r_cons_newline		1038140	0					
ANR	1039714	ArgumentList			1038140	1					
ANR	1039715	BreakStatement	break ;	607:2:15690:15695	1038140	24	True				
ANR	1039716	Label	case '+' :	608:1:15698:15706	1038140	25	True				
ANR	1039717	IfStatement	if ( input [ 1 ] != '\\0' )		1038140	26					
ANR	1039718	Condition	input [ 1 ] != '\\0'	609:6:15722:15737	1038140	0	True				
ANR	1039719	EqualityExpression	input [ 1 ] != '\\0'		1038140	0		!=			
ANR	1039720	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1039721	Identifier	input		1038140	0					
ANR	1039722	PrimaryExpression	1		1038140	1					
ANR	1039723	PrimaryExpression	'\\0'		1038140	1					
ANR	1039724	CompoundStatement		289:3:6796:6811	1038140	1					
ANR	1039725	IdentifierDeclStatement	int delta = off ;	610:3:15745:15760	1038140	0	True				
ANR	1039726	IdentifierDecl	delta = off		1038140	0					
ANR	1039727	IdentifierDeclType	int		1038140	0					
ANR	1039728	Identifier	delta		1038140	1					
ANR	1039729	AssignmentExpression	delta = off		1038140	2		=			
ANR	1039730	Identifier	off		1038140	0					
ANR	1039731	Identifier	off		1038140	1					
ANR	1039732	IfStatement	if ( input [ 1 ] == '+' )		1038140	1					
ANR	1039733	Condition	input [ 1 ] == '+'	611:7:15769:15783	1038140	0	True				
ANR	1039734	EqualityExpression	input [ 1 ] == '+'		1038140	0		==			
ANR	1039735	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1039736	Identifier	input		1038140	0					
ANR	1039737	PrimaryExpression	1		1038140	1					
ANR	1039738	PrimaryExpression	'+'		1038140	1					
ANR	1039739	CompoundStatement		292:4:6872:6916	1038140	1					
ANR	1039740	ExpressionStatement	delta = core -> blocksize	612:4:15792:15815	1038140	0	True				
ANR	1039741	AssignmentExpression	delta = core -> blocksize		1038140	0		=			
ANR	1039742	Identifier	delta		1038140	0					
ANR	1039743	PtrMemberAccess	core -> blocksize		1038140	1					
ANR	1039744	Identifier	core		1038140	0					
ANR	1039745	Identifier	blocksize		1038140	1					
ANR	1039746	IdentifierDeclStatement	"int mult = r_num_math ( core -> num , input + 2 ) ;"	613:4:15821:15865	1038140	1	True				
ANR	1039747	IdentifierDecl	"mult = r_num_math ( core -> num , input + 2 )"		1038140	0					
ANR	1039748	IdentifierDeclType	int		1038140	0					
ANR	1039749	Identifier	mult		1038140	1					
ANR	1039750	AssignmentExpression	"mult = r_num_math ( core -> num , input + 2 )"		1038140	2		=			
ANR	1039751	Identifier	mult		1038140	0					
ANR	1039752	CallExpression	"r_num_math ( core -> num , input + 2 )"		1038140	1					
ANR	1039753	Callee	r_num_math		1038140	0					
ANR	1039754	Identifier	r_num_math		1038140	0					
ANR	1039755	ArgumentList	core -> num		1038140	1					
ANR	1039756	Argument	core -> num		1038140	0					
ANR	1039757	PtrMemberAccess	core -> num		1038140	0					
ANR	1039758	Identifier	core		1038140	0					
ANR	1039759	Identifier	num		1038140	1					
ANR	1039760	Argument	input + 2		1038140	1					
ANR	1039761	AdditiveExpression	input + 2		1038140	0		+			
ANR	1039762	Identifier	input		1038140	0					
ANR	1039763	PrimaryExpression	2		1038140	1					
ANR	1039764	IfStatement	if ( mult > 0 )		1038140	2					
ANR	1039765	Condition	mult > 0	614:8:15875:15882	1038140	0	True				
ANR	1039766	RelationalExpression	mult > 0		1038140	0		>			
ANR	1039767	Identifier	mult		1038140	0					
ANR	1039768	PrimaryExpression	0		1038140	1					
ANR	1039769	CompoundStatement		293:18:6936:6936	1038140	1					
ANR	1039770	ExpressionStatement	delta /= mult	615:5:15892:15905	1038140	0	True				
ANR	1039771	AssignmentExpression	delta /= mult		1038140	0		/=			
ANR	1039772	Identifier	delta		1038140	0					
ANR	1039773	Identifier	mult		1038140	1					
ANR	1039774	IfStatement	if ( ! silent )		1038140	2					
ANR	1039775	Condition	! silent	619:7:15984:15990	1038140	0	True				
ANR	1039776	UnaryOperationExpression	! silent		1038140	0					
ANR	1039777	UnaryOperator	!		1038140	0					
ANR	1039778	Identifier	silent		1038140	1					
ANR	1039779	CompoundStatement		298:16:7044:7044	1038140	1					
ANR	1039780	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"	620:4:15999:16078	1038140	0	True				
ANR	1039781	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"		1038140	0					
ANR	1039782	Callee	r_io_sundo_push		1038140	0					
ANR	1039783	Identifier	r_io_sundo_push		1038140	0					
ANR	1039784	ArgumentList	core -> io		1038140	1					
ANR	1039785	Argument	core -> io		1038140	0					
ANR	1039786	PtrMemberAccess	core -> io		1038140	0					
ANR	1039787	Identifier	core		1038140	0					
ANR	1039788	Identifier	io		1038140	1					
ANR	1039789	Argument	core -> offset		1038140	1					
ANR	1039790	PtrMemberAccess	core -> offset		1038140	0					
ANR	1039791	Identifier	core		1038140	0					
ANR	1039792	Identifier	offset		1038140	1					
ANR	1039793	Argument	r_print_get_cursor ( core -> print )		1038140	2					
ANR	1039794	CallExpression	r_print_get_cursor ( core -> print )		1038140	0					
ANR	1039795	Callee	r_print_get_cursor		1038140	0					
ANR	1039796	Identifier	r_print_get_cursor		1038140	0					
ANR	1039797	ArgumentList	core -> print		1038140	1					
ANR	1039798	Argument	core -> print		1038140	0					
ANR	1039799	PtrMemberAccess	core -> print		1038140	0					
ANR	1039800	Identifier	core		1038140	0					
ANR	1039801	Identifier	print		1038140	1					
ANR	1039802	ExpressionStatement	"r_core_seek_delta ( core , delta )"	623:3:16088:16119	1038140	3	True				
ANR	1039803	CallExpression	"r_core_seek_delta ( core , delta )"		1038140	0					
ANR	1039804	Callee	r_core_seek_delta		1038140	0					
ANR	1039805	Identifier	r_core_seek_delta		1038140	0					
ANR	1039806	ArgumentList	core		1038140	1					
ANR	1039807	Argument	core		1038140	0					
ANR	1039808	Identifier	core		1038140	0					
ANR	1039809	Argument	delta		1038140	1					
ANR	1039810	Identifier	delta		1038140	0					
ANR	1039811	ExpressionStatement	r_core_block_read ( core )	624:3:16124:16148	1038140	4	True				
ANR	1039812	CallExpression	r_core_block_read ( core )		1038140	0					
ANR	1039813	Callee	r_core_block_read		1038140	0					
ANR	1039814	Identifier	r_core_block_read		1038140	0					
ANR	1039815	ArgumentList	core		1038140	1					
ANR	1039816	Argument	core		1038140	0					
ANR	1039817	Identifier	core		1038140	0					
ANR	1039818	ElseStatement	else		1038140	0					
ANR	1039819	CompoundStatement		305:3:7215:7258	1038140	0					
ANR	1039820	IdentifierDeclStatement	RIOUndos * undo = r_io_sundo_redo ( core -> io ) ;	626:3:16164:16207	1038140	0	True				
ANR	1039821	IdentifierDecl	* undo = r_io_sundo_redo ( core -> io )		1038140	0					
ANR	1039822	IdentifierDeclType	RIOUndos *		1038140	0					
ANR	1039823	Identifier	undo		1038140	1					
ANR	1039824	AssignmentExpression	* undo = r_io_sundo_redo ( core -> io )		1038140	2		=			
ANR	1039825	Identifier	undo		1038140	0					
ANR	1039826	CallExpression	r_io_sundo_redo ( core -> io )		1038140	1					
ANR	1039827	Callee	r_io_sundo_redo		1038140	0					
ANR	1039828	Identifier	r_io_sundo_redo		1038140	0					
ANR	1039829	ArgumentList	core -> io		1038140	1					
ANR	1039830	Argument	core -> io		1038140	0					
ANR	1039831	PtrMemberAccess	core -> io		1038140	0					
ANR	1039832	Identifier	core		1038140	0					
ANR	1039833	Identifier	io		1038140	1					
ANR	1039834	IfStatement	if ( undo )		1038140	1					
ANR	1039835	Condition	undo	627:7:16216:16219	1038140	0	True				
ANR	1039836	Identifier	undo		1038140	0					
ANR	1039837	CompoundStatement		306:13:7273:7273	1038140	1					
ANR	1039838	ExpressionStatement	"r_core_seek ( core , undo -> off , 0 )"	628:4:16228:16260	1038140	0	True				
ANR	1039839	CallExpression	"r_core_seek ( core , undo -> off , 0 )"		1038140	0					
ANR	1039840	Callee	r_core_seek		1038140	0					
ANR	1039841	Identifier	r_core_seek		1038140	0					
ANR	1039842	ArgumentList	core		1038140	1					
ANR	1039843	Argument	core		1038140	0					
ANR	1039844	Identifier	core		1038140	0					
ANR	1039845	Argument	undo -> off		1038140	1					
ANR	1039846	PtrMemberAccess	undo -> off		1038140	0					
ANR	1039847	Identifier	undo		1038140	0					
ANR	1039848	Identifier	off		1038140	1					
ANR	1039849	Argument	0		1038140	2					
ANR	1039850	PrimaryExpression	0		1038140	0					
ANR	1039851	ExpressionStatement	r_core_block_read ( core )	629:4:16266:16290	1038140	1	True				
ANR	1039852	CallExpression	r_core_block_read ( core )		1038140	0					
ANR	1039853	Callee	r_core_block_read		1038140	0					
ANR	1039854	Identifier	r_core_block_read		1038140	0					
ANR	1039855	ArgumentList	core		1038140	1					
ANR	1039856	Argument	core		1038140	0					
ANR	1039857	Identifier	core		1038140	0					
ANR	1039858	BreakStatement	break ;	632:2:16303:16308	1038140	27	True				
ANR	1039859	Label	case '-' :	633:1:16311:16319	1038140	28	True				
ANR	1039860	SwitchStatement	switch ( input [ 1 ] )		1038140	29					
ANR	1039861	Condition	input [ 1 ]	634:10:16339:16346	1038140	0	True				
ANR	1039862	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1039863	Identifier	input		1038140	0					
ANR	1039864	PrimaryExpression	1		1038140	1					
ANR	1039865	CompoundStatement		313:20:7400:7400	1038140	1					
ANR	1039866	Label	case '*' :	635:2:16353:16361	1038140	0	True				
ANR	1039867	ExpressionStatement	r_io_sundo_reset ( core -> io )	636:3:16375:16402	1038140	1	True				
ANR	1039868	CallExpression	r_io_sundo_reset ( core -> io )		1038140	0					
ANR	1039869	Callee	r_io_sundo_reset		1038140	0					
ANR	1039870	Identifier	r_io_sundo_reset		1038140	0					
ANR	1039871	ArgumentList	core -> io		1038140	1					
ANR	1039872	Argument	core -> io		1038140	0					
ANR	1039873	PtrMemberAccess	core -> io		1038140	0					
ANR	1039874	Identifier	core		1038140	0					
ANR	1039875	Identifier	io		1038140	1					
ANR	1039876	BreakStatement	break ;	637:3:16407:16412	1038140	2	True				
ANR	1039877	Label	case 0 :	638:2:16416:16422	1038140	3	True				
ANR	1039878	CompoundStatement		319:4:7492:7544	1038140	4					
ANR	1039879	IdentifierDeclStatement	"RIOUndos * undo = r_io_sundo ( core -> io , core -> offset ) ;"	640:4:16441:16493	1038140	0	True				
ANR	1039880	IdentifierDecl	"* undo = r_io_sundo ( core -> io , core -> offset )"		1038140	0					
ANR	1039881	IdentifierDeclType	RIOUndos *		1038140	0					
ANR	1039882	Identifier	undo		1038140	1					
ANR	1039883	AssignmentExpression	"* undo = r_io_sundo ( core -> io , core -> offset )"		1038140	2		=			
ANR	1039884	Identifier	undo		1038140	0					
ANR	1039885	CallExpression	"r_io_sundo ( core -> io , core -> offset )"		1038140	1					
ANR	1039886	Callee	r_io_sundo		1038140	0					
ANR	1039887	Identifier	r_io_sundo		1038140	0					
ANR	1039888	ArgumentList	core -> io		1038140	1					
ANR	1039889	Argument	core -> io		1038140	0					
ANR	1039890	PtrMemberAccess	core -> io		1038140	0					
ANR	1039891	Identifier	core		1038140	0					
ANR	1039892	Identifier	io		1038140	1					
ANR	1039893	Argument	core -> offset		1038140	1					
ANR	1039894	PtrMemberAccess	core -> offset		1038140	0					
ANR	1039895	Identifier	core		1038140	0					
ANR	1039896	Identifier	offset		1038140	1					
ANR	1039897	IfStatement	if ( undo )		1038140	1					
ANR	1039898	Condition	undo	641:8:16503:16506	1038140	0	True				
ANR	1039899	Identifier	undo		1038140	0					
ANR	1039900	CompoundStatement		320:14:7560:7560	1038140	1					
ANR	1039901	ExpressionStatement	"r_core_seek ( core , undo -> off , 0 )"	642:5:16516:16548	1038140	0	True				
ANR	1039902	CallExpression	"r_core_seek ( core , undo -> off , 0 )"		1038140	0					
ANR	1039903	Callee	r_core_seek		1038140	0					
ANR	1039904	Identifier	r_core_seek		1038140	0					
ANR	1039905	ArgumentList	core		1038140	1					
ANR	1039906	Argument	core		1038140	0					
ANR	1039907	Identifier	core		1038140	0					
ANR	1039908	Argument	undo -> off		1038140	1					
ANR	1039909	PtrMemberAccess	undo -> off		1038140	0					
ANR	1039910	Identifier	undo		1038140	0					
ANR	1039911	Identifier	off		1038140	1					
ANR	1039912	Argument	0		1038140	2					
ANR	1039913	PrimaryExpression	0		1038140	0					
ANR	1039914	ExpressionStatement	r_core_block_read ( core )	643:5:16555:16579	1038140	1	True				
ANR	1039915	CallExpression	r_core_block_read ( core )		1038140	0					
ANR	1039916	Callee	r_core_block_read		1038140	0					
ANR	1039917	Identifier	r_core_block_read		1038140	0					
ANR	1039918	ArgumentList	core		1038140	1					
ANR	1039919	Argument	core		1038140	0					
ANR	1039920	Identifier	core		1038140	0					
ANR	1039921	BreakStatement	break ;	646:3:16595:16600	1038140	5	True				
ANR	1039922	Label	case '-' :	647:2:16604:16612	1038140	6	True				
ANR	1039923	Label	default :	648:2:16625:16632	1038140	7	True				
ANR	1039924	Identifier	default		1038140	0					
ANR	1039925	CompoundStatement		329:4:7694:7710	1038140	8					
ANR	1039926	IdentifierDeclStatement	int delta = - off ;	650:4:16643:16659	1038140	0	True				
ANR	1039927	IdentifierDecl	delta = - off		1038140	0					
ANR	1039928	IdentifierDeclType	int		1038140	0					
ANR	1039929	Identifier	delta		1038140	1					
ANR	1039930	AssignmentExpression	delta = - off		1038140	2		=			
ANR	1039931	Identifier	delta		1038140	0					
ANR	1039932	UnaryOperationExpression	- off		1038140	1					
ANR	1039933	UnaryOperator	-		1038140	0					
ANR	1039934	Identifier	off		1038140	1					
ANR	1039935	IfStatement	if ( input [ 1 ] == '-' )		1038140	1					
ANR	1039936	Condition	input [ 1 ] == '-'	651:8:16669:16683	1038140	0	True				
ANR	1039937	EqualityExpression	input [ 1 ] == '-'		1038140	0		==			
ANR	1039938	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1039939	Identifier	input		1038140	0					
ANR	1039940	PrimaryExpression	1		1038140	1					
ANR	1039941	PrimaryExpression	'-'		1038140	1					
ANR	1039942	CompoundStatement		332:5:7775:7819	1038140	1					
ANR	1039943	ExpressionStatement	delta = - core -> blocksize	652:5:16693:16717	1038140	0	True				
ANR	1039944	AssignmentExpression	delta = - core -> blocksize		1038140	0		=			
ANR	1039945	Identifier	delta		1038140	0					
ANR	1039946	UnaryOperationExpression	- core -> blocksize		1038140	1					
ANR	1039947	UnaryOperator	-		1038140	0					
ANR	1039948	PtrMemberAccess	core -> blocksize		1038140	1					
ANR	1039949	Identifier	core		1038140	0					
ANR	1039950	Identifier	blocksize		1038140	1					
ANR	1039951	IdentifierDeclStatement	"int mult = r_num_math ( core -> num , input + 2 ) ;"	653:5:16724:16768	1038140	1	True				
ANR	1039952	IdentifierDecl	"mult = r_num_math ( core -> num , input + 2 )"		1038140	0					
ANR	1039953	IdentifierDeclType	int		1038140	0					
ANR	1039954	Identifier	mult		1038140	1					
ANR	1039955	AssignmentExpression	"mult = r_num_math ( core -> num , input + 2 )"		1038140	2		=			
ANR	1039956	Identifier	mult		1038140	0					
ANR	1039957	CallExpression	"r_num_math ( core -> num , input + 2 )"		1038140	1					
ANR	1039958	Callee	r_num_math		1038140	0					
ANR	1039959	Identifier	r_num_math		1038140	0					
ANR	1039960	ArgumentList	core -> num		1038140	1					
ANR	1039961	Argument	core -> num		1038140	0					
ANR	1039962	PtrMemberAccess	core -> num		1038140	0					
ANR	1039963	Identifier	core		1038140	0					
ANR	1039964	Identifier	num		1038140	1					
ANR	1039965	Argument	input + 2		1038140	1					
ANR	1039966	AdditiveExpression	input + 2		1038140	0		+			
ANR	1039967	Identifier	input		1038140	0					
ANR	1039968	PrimaryExpression	2		1038140	1					
ANR	1039969	IfStatement	if ( mult > 0 )		1038140	2					
ANR	1039970	Condition	mult > 0	654:9:16779:16786	1038140	0	True				
ANR	1039971	RelationalExpression	mult > 0		1038140	0		>			
ANR	1039972	Identifier	mult		1038140	0					
ANR	1039973	PrimaryExpression	0		1038140	1					
ANR	1039974	CompoundStatement		333:19:7840:7840	1038140	1					
ANR	1039975	ExpressionStatement	delta /= mult	655:6:16797:16810	1038140	0	True				
ANR	1039976	AssignmentExpression	delta /= mult		1038140	0		/=			
ANR	1039977	Identifier	delta		1038140	0					
ANR	1039978	Identifier	mult		1038140	1					
ANR	1039979	IfStatement	if ( ! silent )		1038140	2					
ANR	1039980	Condition	! silent	658:8:16833:16839	1038140	0	True				
ANR	1039981	UnaryOperationExpression	! silent		1038140	0					
ANR	1039982	UnaryOperator	!		1038140	0					
ANR	1039983	Identifier	silent		1038140	1					
ANR	1039984	CompoundStatement		337:17:7893:7893	1038140	1					
ANR	1039985	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"	659:5:16849:16930	1038140	0	True				
ANR	1039986	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"		1038140	0					
ANR	1039987	Callee	r_io_sundo_push		1038140	0					
ANR	1039988	Identifier	r_io_sundo_push		1038140	0					
ANR	1039989	ArgumentList	core -> io		1038140	1					
ANR	1039990	Argument	core -> io		1038140	0					
ANR	1039991	PtrMemberAccess	core -> io		1038140	0					
ANR	1039992	Identifier	core		1038140	0					
ANR	1039993	Identifier	io		1038140	1					
ANR	1039994	Argument	core -> offset		1038140	1					
ANR	1039995	PtrMemberAccess	core -> offset		1038140	0					
ANR	1039996	Identifier	core		1038140	0					
ANR	1039997	Identifier	offset		1038140	1					
ANR	1039998	Argument	r_print_get_cursor ( core -> print )		1038140	2					
ANR	1039999	CallExpression	r_print_get_cursor ( core -> print )		1038140	0					
ANR	1040000	Callee	r_print_get_cursor		1038140	0					
ANR	1040001	Identifier	r_print_get_cursor		1038140	0					
ANR	1040002	ArgumentList	core -> print		1038140	1					
ANR	1040003	Argument	core -> print		1038140	0					
ANR	1040004	PtrMemberAccess	core -> print		1038140	0					
ANR	1040005	Identifier	core		1038140	0					
ANR	1040006	Identifier	print		1038140	1					
ANR	1040007	ExpressionStatement	"r_core_seek_delta ( core , delta )"	662:4:16942:16973	1038140	3	True				
ANR	1040008	CallExpression	"r_core_seek_delta ( core , delta )"		1038140	0					
ANR	1040009	Callee	r_core_seek_delta		1038140	0					
ANR	1040010	Identifier	r_core_seek_delta		1038140	0					
ANR	1040011	ArgumentList	core		1038140	1					
ANR	1040012	Argument	core		1038140	0					
ANR	1040013	Identifier	core		1038140	0					
ANR	1040014	Argument	delta		1038140	1					
ANR	1040015	Identifier	delta		1038140	0					
ANR	1040016	ExpressionStatement	r_core_block_read ( core )	663:4:16979:17003	1038140	4	True				
ANR	1040017	CallExpression	r_core_block_read ( core )		1038140	0					
ANR	1040018	Callee	r_core_block_read		1038140	0					
ANR	1040019	Identifier	r_core_block_read		1038140	0					
ANR	1040020	ArgumentList	core		1038140	1					
ANR	1040021	Argument	core		1038140	0					
ANR	1040022	Identifier	core		1038140	0					
ANR	1040023	BreakStatement	break ;	665:2:17012:17017	1038140	9	True				
ANR	1040024	BreakStatement	break ;	667:2:17025:17030	1038140	30	True				
ANR	1040025	Label	case 'n' :	668:1:17033:17041	1038140	31	True				
ANR	1040026	CompoundStatement		352:3:8212:8310	1038140	32					
ANR	1040027	IfStatement	if ( ! silent )		1038140	0					
ANR	1040028	Condition	! silent	670:7:17062:17068	1038140	0	True				
ANR	1040029	UnaryOperationExpression	! silent		1038140	0					
ANR	1040030	UnaryOperator	!		1038140	0					
ANR	1040031	Identifier	silent		1038140	1					
ANR	1040032	CompoundStatement		349:16:8122:8122	1038140	1					
ANR	1040033	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"	671:4:17077:17151	1038140	0	True				
ANR	1040034	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"		1038140	0					
ANR	1040035	Callee	r_io_sundo_push		1038140	0					
ANR	1040036	Identifier	r_io_sundo_push		1038140	0					
ANR	1040037	ArgumentList	core -> io		1038140	1					
ANR	1040038	Argument	core -> io		1038140	0					
ANR	1040039	PtrMemberAccess	core -> io		1038140	0					
ANR	1040040	Identifier	core		1038140	0					
ANR	1040041	Identifier	io		1038140	1					
ANR	1040042	Argument	core -> offset		1038140	1					
ANR	1040043	PtrMemberAccess	core -> offset		1038140	0					
ANR	1040044	Identifier	core		1038140	0					
ANR	1040045	Identifier	offset		1038140	1					
ANR	1040046	Argument	r_print_get_cursor ( core -> print )		1038140	2					
ANR	1040047	CallExpression	r_print_get_cursor ( core -> print )		1038140	0					
ANR	1040048	Callee	r_print_get_cursor		1038140	0					
ANR	1040049	Identifier	r_print_get_cursor		1038140	0					
ANR	1040050	ArgumentList	core -> print		1038140	1					
ANR	1040051	Argument	core -> print		1038140	0					
ANR	1040052	PtrMemberAccess	core -> print		1038140	0					
ANR	1040053	Identifier	core		1038140	0					
ANR	1040054	Identifier	print		1038140	1					
ANR	1040055	IdentifierDeclStatement	"const char * nkey = ( input [ 1 ] == ' ' ) ? input + 2 : r_config_get ( core -> config , ""scr.nkey"" ) ;"	673:3:17161:17259	1038140	1	True				
ANR	1040056	IdentifierDecl	"* nkey = ( input [ 1 ] == ' ' ) ? input + 2 : r_config_get ( core -> config , ""scr.nkey"" )"		1038140	0					
ANR	1040057	IdentifierDeclType	const char *		1038140	0					
ANR	1040058	Identifier	nkey		1038140	1					
ANR	1040059	AssignmentExpression	"* nkey = ( input [ 1 ] == ' ' ) ? input + 2 : r_config_get ( core -> config , ""scr.nkey"" )"		1038140	2		=			
ANR	1040060	Identifier	nkey		1038140	0					
ANR	1040061	ConditionalExpression	"( input [ 1 ] == ' ' ) ? input + 2 : r_config_get ( core -> config , ""scr.nkey"" )"		1038140	1					
ANR	1040062	Condition	input [ 1 ] == ' '		1038140	0					
ANR	1040063	EqualityExpression	input [ 1 ] == ' '		1038140	0		==			
ANR	1040064	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1040065	Identifier	input		1038140	0					
ANR	1040066	PrimaryExpression	1		1038140	1					
ANR	1040067	PrimaryExpression	' '		1038140	1					
ANR	1040068	AdditiveExpression	input + 2		1038140	1		+			
ANR	1040069	Identifier	input		1038140	0					
ANR	1040070	PrimaryExpression	2		1038140	1					
ANR	1040071	CallExpression	"r_config_get ( core -> config , ""scr.nkey"" )"		1038140	2					
ANR	1040072	Callee	r_config_get		1038140	0					
ANR	1040073	Identifier	r_config_get		1038140	0					
ANR	1040074	ArgumentList	core -> config		1038140	1					
ANR	1040075	Argument	core -> config		1038140	0					
ANR	1040076	PtrMemberAccess	core -> config		1038140	0					
ANR	1040077	Identifier	core		1038140	0					
ANR	1040078	Identifier	config		1038140	1					
ANR	1040079	Argument	"""scr.nkey"""		1038140	1					
ANR	1040080	PrimaryExpression	"""scr.nkey"""		1038140	0					
ANR	1040081	ExpressionStatement	"r_core_seek_next ( core , nkey )"	676:3:17264:17293	1038140	2	True				
ANR	1040082	CallExpression	"r_core_seek_next ( core , nkey )"		1038140	0					
ANR	1040083	Callee	r_core_seek_next		1038140	0					
ANR	1040084	Identifier	r_core_seek_next		1038140	0					
ANR	1040085	ArgumentList	core		1038140	1					
ANR	1040086	Argument	core		1038140	0					
ANR	1040087	Identifier	core		1038140	0					
ANR	1040088	Argument	nkey		1038140	1					
ANR	1040089	Identifier	nkey		1038140	0					
ANR	1040090	BreakStatement	break ;	678:2:17301:17306	1038140	33	True				
ANR	1040091	Label	case 'p' :	679:1:17309:17317	1038140	34	True				
ANR	1040092	CompoundStatement		363:3:8488:8586	1038140	35					
ANR	1040093	IfStatement	if ( ! silent )		1038140	0					
ANR	1040094	Condition	! silent	681:7:17338:17344	1038140	0	True				
ANR	1040095	UnaryOperationExpression	! silent		1038140	0					
ANR	1040096	UnaryOperator	!		1038140	0					
ANR	1040097	Identifier	silent		1038140	1					
ANR	1040098	CompoundStatement		360:16:8398:8398	1038140	1					
ANR	1040099	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"	682:4:17353:17427	1038140	0	True				
ANR	1040100	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"		1038140	0					
ANR	1040101	Callee	r_io_sundo_push		1038140	0					
ANR	1040102	Identifier	r_io_sundo_push		1038140	0					
ANR	1040103	ArgumentList	core -> io		1038140	1					
ANR	1040104	Argument	core -> io		1038140	0					
ANR	1040105	PtrMemberAccess	core -> io		1038140	0					
ANR	1040106	Identifier	core		1038140	0					
ANR	1040107	Identifier	io		1038140	1					
ANR	1040108	Argument	core -> offset		1038140	1					
ANR	1040109	PtrMemberAccess	core -> offset		1038140	0					
ANR	1040110	Identifier	core		1038140	0					
ANR	1040111	Identifier	offset		1038140	1					
ANR	1040112	Argument	r_print_get_cursor ( core -> print )		1038140	2					
ANR	1040113	CallExpression	r_print_get_cursor ( core -> print )		1038140	0					
ANR	1040114	Callee	r_print_get_cursor		1038140	0					
ANR	1040115	Identifier	r_print_get_cursor		1038140	0					
ANR	1040116	ArgumentList	core -> print		1038140	1					
ANR	1040117	Argument	core -> print		1038140	0					
ANR	1040118	PtrMemberAccess	core -> print		1038140	0					
ANR	1040119	Identifier	core		1038140	0					
ANR	1040120	Identifier	print		1038140	1					
ANR	1040121	IdentifierDeclStatement	"const char * nkey = ( input [ 1 ] == ' ' ) ? input + 2 : r_config_get ( core -> config , ""scr.nkey"" ) ;"	684:3:17437:17535	1038140	1	True				
ANR	1040122	IdentifierDecl	"* nkey = ( input [ 1 ] == ' ' ) ? input + 2 : r_config_get ( core -> config , ""scr.nkey"" )"		1038140	0					
ANR	1040123	IdentifierDeclType	const char *		1038140	0					
ANR	1040124	Identifier	nkey		1038140	1					
ANR	1040125	AssignmentExpression	"* nkey = ( input [ 1 ] == ' ' ) ? input + 2 : r_config_get ( core -> config , ""scr.nkey"" )"		1038140	2		=			
ANR	1040126	Identifier	nkey		1038140	0					
ANR	1040127	ConditionalExpression	"( input [ 1 ] == ' ' ) ? input + 2 : r_config_get ( core -> config , ""scr.nkey"" )"		1038140	1					
ANR	1040128	Condition	input [ 1 ] == ' '		1038140	0					
ANR	1040129	EqualityExpression	input [ 1 ] == ' '		1038140	0		==			
ANR	1040130	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1040131	Identifier	input		1038140	0					
ANR	1040132	PrimaryExpression	1		1038140	1					
ANR	1040133	PrimaryExpression	' '		1038140	1					
ANR	1040134	AdditiveExpression	input + 2		1038140	1		+			
ANR	1040135	Identifier	input		1038140	0					
ANR	1040136	PrimaryExpression	2		1038140	1					
ANR	1040137	CallExpression	"r_config_get ( core -> config , ""scr.nkey"" )"		1038140	2					
ANR	1040138	Callee	r_config_get		1038140	0					
ANR	1040139	Identifier	r_config_get		1038140	0					
ANR	1040140	ArgumentList	core -> config		1038140	1					
ANR	1040141	Argument	core -> config		1038140	0					
ANR	1040142	PtrMemberAccess	core -> config		1038140	0					
ANR	1040143	Identifier	core		1038140	0					
ANR	1040144	Identifier	config		1038140	1					
ANR	1040145	Argument	"""scr.nkey"""		1038140	1					
ANR	1040146	PrimaryExpression	"""scr.nkey"""		1038140	0					
ANR	1040147	ExpressionStatement	"r_core_seek_previous ( core , nkey )"	687:3:17540:17573	1038140	2	True				
ANR	1040148	CallExpression	"r_core_seek_previous ( core , nkey )"		1038140	0					
ANR	1040149	Callee	r_core_seek_previous		1038140	0					
ANR	1040150	Identifier	r_core_seek_previous		1038140	0					
ANR	1040151	ArgumentList	core		1038140	1					
ANR	1040152	Argument	core		1038140	0					
ANR	1040153	Identifier	core		1038140	0					
ANR	1040154	Argument	nkey		1038140	1					
ANR	1040155	Identifier	nkey		1038140	0					
ANR	1040156	BreakStatement	break ;	689:2:17581:17586	1038140	36	True				
ANR	1040157	Label	case 'a' :	690:1:17589:17597	1038140	37	True				
ANR	1040158	ExpressionStatement	off = core -> blocksize	691:2:17609:17630	1038140	38	True				
ANR	1040159	AssignmentExpression	off = core -> blocksize		1038140	0		=			
ANR	1040160	Identifier	off		1038140	0					
ANR	1040161	PtrMemberAccess	core -> blocksize		1038140	1					
ANR	1040162	Identifier	core		1038140	0					
ANR	1040163	Identifier	blocksize		1038140	1					
ANR	1040164	IfStatement	if ( input [ 1 ] && input [ 2 ] )		1038140	39					
ANR	1040165	Condition	input [ 1 ] && input [ 2 ]	692:6:17638:17657	1038140	0	True				
ANR	1040166	AndExpression	input [ 1 ] && input [ 2 ]		1038140	0		&&			
ANR	1040167	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1040168	Identifier	input		1038140	0					
ANR	1040169	PrimaryExpression	1		1038140	1					
ANR	1040170	ArrayIndexing	input [ 2 ]		1038140	1					
ANR	1040171	Identifier	input		1038140	0					
ANR	1040172	PrimaryExpression	2		1038140	1					
ANR	1040173	CompoundStatement		371:28:8711:8711	1038140	1					
ANR	1040174	ExpressionStatement	cmd = strdup ( input )	693:3:17665:17685	1038140	0	True				
ANR	1040175	AssignmentExpression	cmd = strdup ( input )		1038140	0		=			
ANR	1040176	Identifier	cmd		1038140	0					
ANR	1040177	CallExpression	strdup ( input )		1038140	1					
ANR	1040178	Callee	strdup		1038140	0					
ANR	1040179	Identifier	strdup		1038140	0					
ANR	1040180	ArgumentList	input		1038140	1					
ANR	1040181	Argument	input		1038140	0					
ANR	1040182	Identifier	input		1038140	0					
ANR	1040183	ExpressionStatement	"p = strchr ( cmd + 2 , ' ' )"	694:3:17690:17715	1038140	1	True				
ANR	1040184	AssignmentExpression	"p = strchr ( cmd + 2 , ' ' )"		1038140	0		=			
ANR	1040185	Identifier	p		1038140	0					
ANR	1040186	CallExpression	"strchr ( cmd + 2 , ' ' )"		1038140	1					
ANR	1040187	Callee	strchr		1038140	0					
ANR	1040188	Identifier	strchr		1038140	0					
ANR	1040189	ArgumentList	cmd + 2		1038140	1					
ANR	1040190	Argument	cmd + 2		1038140	0					
ANR	1040191	AdditiveExpression	cmd + 2		1038140	0		+			
ANR	1040192	Identifier	cmd		1038140	0					
ANR	1040193	PrimaryExpression	2		1038140	1					
ANR	1040194	Argument	' '		1038140	1					
ANR	1040195	PrimaryExpression	' '		1038140	0					
ANR	1040196	IfStatement	if ( p )		1038140	2					
ANR	1040197	Condition	p	695:7:17724:17724	1038140	0	True				
ANR	1040198	Identifier	p		1038140	0					
ANR	1040199	CompoundStatement		374:10:8778:8778	1038140	1					
ANR	1040200	ExpressionStatement	"off = r_num_math ( core -> num , p + 1 )"	696:4:17733:17768	1038140	0	True				
ANR	1040201	AssignmentExpression	"off = r_num_math ( core -> num , p + 1 )"		1038140	0		=			
ANR	1040202	Identifier	off		1038140	0					
ANR	1040203	CallExpression	"r_num_math ( core -> num , p + 1 )"		1038140	1					
ANR	1040204	Callee	r_num_math		1038140	0					
ANR	1040205	Identifier	r_num_math		1038140	0					
ANR	1040206	ArgumentList	core -> num		1038140	1					
ANR	1040207	Argument	core -> num		1038140	0					
ANR	1040208	PtrMemberAccess	core -> num		1038140	0					
ANR	1040209	Identifier	core		1038140	0					
ANR	1040210	Identifier	num		1038140	1					
ANR	1040211	Argument	p + 1		1038140	1					
ANR	1040212	AdditiveExpression	p + 1		1038140	0		+			
ANR	1040213	Identifier	p		1038140	0					
ANR	1040214	PrimaryExpression	1		1038140	1					
ANR	1040215	ExpressionStatement		696:40:17769:17769	1038140	1	True				
ANR	1040216	ExpressionStatement	* p = '\\0'	697:4:17775:17784	1038140	2	True				
ANR	1040217	AssignmentExpression	* p = '\\0'		1038140	0		=			
ANR	1040218	UnaryOperationExpression	* p		1038140	0					
ANR	1040219	UnaryOperator	*		1038140	0					
ANR	1040220	Identifier	p		1038140	1					
ANR	1040221	PrimaryExpression	'\\0'		1038140	1					
ANR	1040222	ExpressionStatement	cmd [ 0 ] = 's'	699:3:17794:17806	1038140	3	True				
ANR	1040223	AssignmentExpression	cmd [ 0 ] = 's'		1038140	0		=			
ANR	1040224	ArrayIndexing	cmd [ 0 ]		1038140	0					
ANR	1040225	Identifier	cmd		1038140	0					
ANR	1040226	PrimaryExpression	0		1038140	1					
ANR	1040227	PrimaryExpression	's'		1038140	1					
ANR	1040228	ExpressionStatement	"r_cmd_call ( core -> rcmd , cmd )"	701:3:17847:17875	1038140	4	True				
ANR	1040229	CallExpression	"r_cmd_call ( core -> rcmd , cmd )"		1038140	0					
ANR	1040230	Callee	r_cmd_call		1038140	0					
ANR	1040231	Identifier	r_cmd_call		1038140	0					
ANR	1040232	ArgumentList	core -> rcmd		1038140	1					
ANR	1040233	Argument	core -> rcmd		1038140	0					
ANR	1040234	PtrMemberAccess	core -> rcmd		1038140	0					
ANR	1040235	Identifier	core		1038140	0					
ANR	1040236	Identifier	rcmd		1038140	1					
ANR	1040237	Argument	cmd		1038140	1					
ANR	1040238	Identifier	cmd		1038140	0					
ANR	1040239	ExpressionStatement	free ( cmd )	702:3:17880:17890	1038140	5	True				
ANR	1040240	CallExpression	free ( cmd )		1038140	0					
ANR	1040241	Callee	free		1038140	0					
ANR	1040242	Identifier	free		1038140	0					
ANR	1040243	ArgumentList	cmd		1038140	1					
ANR	1040244	Argument	cmd		1038140	0					
ANR	1040245	Identifier	cmd		1038140	0					
ANR	1040246	IfStatement	if ( ! silent )		1038140	40					
ANR	1040247	Condition	! silent	704:6:17902:17908	1038140	0	True				
ANR	1040248	UnaryOperationExpression	! silent		1038140	0					
ANR	1040249	UnaryOperator	!		1038140	0					
ANR	1040250	Identifier	silent		1038140	1					
ANR	1040251	CompoundStatement		383:15:8962:8962	1038140	1					
ANR	1040252	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"	705:3:17916:17990	1038140	0	True				
ANR	1040253	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"		1038140	0					
ANR	1040254	Callee	r_io_sundo_push		1038140	0					
ANR	1040255	Identifier	r_io_sundo_push		1038140	0					
ANR	1040256	ArgumentList	core -> io		1038140	1					
ANR	1040257	Argument	core -> io		1038140	0					
ANR	1040258	PtrMemberAccess	core -> io		1038140	0					
ANR	1040259	Identifier	core		1038140	0					
ANR	1040260	Identifier	io		1038140	1					
ANR	1040261	Argument	core -> offset		1038140	1					
ANR	1040262	PtrMemberAccess	core -> offset		1038140	0					
ANR	1040263	Identifier	core		1038140	0					
ANR	1040264	Identifier	offset		1038140	1					
ANR	1040265	Argument	r_print_get_cursor ( core -> print )		1038140	2					
ANR	1040266	CallExpression	r_print_get_cursor ( core -> print )		1038140	0					
ANR	1040267	Callee	r_print_get_cursor		1038140	0					
ANR	1040268	Identifier	r_print_get_cursor		1038140	0					
ANR	1040269	ArgumentList	core -> print		1038140	1					
ANR	1040270	Argument	core -> print		1038140	0					
ANR	1040271	PtrMemberAccess	core -> print		1038140	0					
ANR	1040272	Identifier	core		1038140	0					
ANR	1040273	Identifier	print		1038140	1					
ANR	1040274	ExpressionStatement	"r_core_seek_align ( core , off , 0 )"	707:2:17998:18030	1038140	41	True				
ANR	1040275	CallExpression	"r_core_seek_align ( core , off , 0 )"		1038140	0					
ANR	1040276	Callee	r_core_seek_align		1038140	0					
ANR	1040277	Identifier	r_core_seek_align		1038140	0					
ANR	1040278	ArgumentList	core		1038140	1					
ANR	1040279	Argument	core		1038140	0					
ANR	1040280	Identifier	core		1038140	0					
ANR	1040281	Argument	off		1038140	1					
ANR	1040282	Identifier	off		1038140	0					
ANR	1040283	Argument	0		1038140	2					
ANR	1040284	PrimaryExpression	0		1038140	0					
ANR	1040285	BreakStatement	break ;	708:2:18034:18039	1038140	42	True				
ANR	1040286	Label	case 'b' :	709:1:18042:18050	1038140	43	True				
ANR	1040287	IfStatement	if ( off == 0 )		1038140	44					
ANR	1040288	Condition	off == 0	710:6:18066:18073	1038140	0	True				
ANR	1040289	EqualityExpression	off == 0		1038140	0		==			
ANR	1040290	Identifier	off		1038140	0					
ANR	1040291	PrimaryExpression	0		1038140	1					
ANR	1040292	CompoundStatement		389:16:9127:9127	1038140	1					
ANR	1040293	ExpressionStatement	off = core -> offset	711:3:18081:18099	1038140	0	True				
ANR	1040294	AssignmentExpression	off = core -> offset		1038140	0		=			
ANR	1040295	Identifier	off		1038140	0					
ANR	1040296	PtrMemberAccess	core -> offset		1038140	1					
ANR	1040297	Identifier	core		1038140	0					
ANR	1040298	Identifier	offset		1038140	1					
ANR	1040299	IfStatement	if ( ! silent )		1038140	45					
ANR	1040300	Condition	! silent	713:6:18111:18117	1038140	0	True				
ANR	1040301	UnaryOperationExpression	! silent		1038140	0					
ANR	1040302	UnaryOperator	!		1038140	0					
ANR	1040303	Identifier	silent		1038140	1					
ANR	1040304	CompoundStatement		392:15:9171:9171	1038140	1					
ANR	1040305	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"	714:3:18125:18199	1038140	0	True				
ANR	1040306	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"		1038140	0					
ANR	1040307	Callee	r_io_sundo_push		1038140	0					
ANR	1040308	Identifier	r_io_sundo_push		1038140	0					
ANR	1040309	ArgumentList	core -> io		1038140	1					
ANR	1040310	Argument	core -> io		1038140	0					
ANR	1040311	PtrMemberAccess	core -> io		1038140	0					
ANR	1040312	Identifier	core		1038140	0					
ANR	1040313	Identifier	io		1038140	1					
ANR	1040314	Argument	core -> offset		1038140	1					
ANR	1040315	PtrMemberAccess	core -> offset		1038140	0					
ANR	1040316	Identifier	core		1038140	0					
ANR	1040317	Identifier	offset		1038140	1					
ANR	1040318	Argument	r_print_get_cursor ( core -> print )		1038140	2					
ANR	1040319	CallExpression	r_print_get_cursor ( core -> print )		1038140	0					
ANR	1040320	Callee	r_print_get_cursor		1038140	0					
ANR	1040321	Identifier	r_print_get_cursor		1038140	0					
ANR	1040322	ArgumentList	core -> print		1038140	1					
ANR	1040323	Argument	core -> print		1038140	0					
ANR	1040324	PtrMemberAccess	core -> print		1038140	0					
ANR	1040325	Identifier	core		1038140	0					
ANR	1040326	Identifier	print		1038140	1					
ANR	1040327	ExpressionStatement	"r_core_anal_bb_seek ( core , off )"	716:2:18207:18238	1038140	46	True				
ANR	1040328	CallExpression	"r_core_anal_bb_seek ( core , off )"		1038140	0					
ANR	1040329	Callee	r_core_anal_bb_seek		1038140	0					
ANR	1040330	Identifier	r_core_anal_bb_seek		1038140	0					
ANR	1040331	ArgumentList	core		1038140	1					
ANR	1040332	Argument	core		1038140	0					
ANR	1040333	Identifier	core		1038140	0					
ANR	1040334	Argument	off		1038140	1					
ANR	1040335	Identifier	off		1038140	0					
ANR	1040336	BreakStatement	break ;	717:2:18242:18247	1038140	47	True				
ANR	1040337	Label	case 'f' :	718:1:18250:18258	1038140	48	True				
ANR	1040338	CompoundStatement		398:2:9323:9341	1038140	49					
ANR	1040339	IdentifierDeclStatement	RAnalFunction * fcn ;	719:2:18272:18290	1038140	0	True				
ANR	1040340	IdentifierDecl	* fcn		1038140	0					
ANR	1040341	IdentifierDeclType	RAnalFunction *		1038140	0					
ANR	1040342	Identifier	fcn		1038140	1					
ANR	1040343	SwitchStatement	switch ( input [ 1 ] )		1038140	1					
ANR	1040344	Condition	input [ 1 ]	720:10:18302:18309	1038140	0	True				
ANR	1040345	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1040346	Identifier	input		1038140	0					
ANR	1040347	PrimaryExpression	1		1038140	1					
ANR	1040348	CompoundStatement		399:20:9363:9363	1038140	1					
ANR	1040349	Label	case '\\0' :	721:2:18316:18325	1038140	0	True				
ANR	1040350	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"	722:3:18338:18391	1038140	1	True				
ANR	1040351	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1038140	0		=			
ANR	1040352	Identifier	fcn		1038140	0					
ANR	1040353	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1038140	1					
ANR	1040354	Callee	r_anal_get_fcn_in		1038140	0					
ANR	1040355	Identifier	r_anal_get_fcn_in		1038140	0					
ANR	1040356	ArgumentList	core -> anal		1038140	1					
ANR	1040357	Argument	core -> anal		1038140	0					
ANR	1040358	PtrMemberAccess	core -> anal		1038140	0					
ANR	1040359	Identifier	core		1038140	0					
ANR	1040360	Identifier	anal		1038140	1					
ANR	1040361	Argument	core -> offset		1038140	1					
ANR	1040362	PtrMemberAccess	core -> offset		1038140	0					
ANR	1040363	Identifier	core		1038140	0					
ANR	1040364	Identifier	offset		1038140	1					
ANR	1040365	Argument	0		1038140	2					
ANR	1040366	PrimaryExpression	0		1038140	0					
ANR	1040367	IfStatement	if ( fcn )		1038140	2					
ANR	1040368	Condition	fcn	723:7:18400:18402	1038140	0	True				
ANR	1040369	Identifier	fcn		1038140	0					
ANR	1040370	CompoundStatement		402:12:9456:9456	1038140	1					
ANR	1040371	ExpressionStatement	"r_core_seek ( core , fcn -> addr + r_anal_fcn_size ( fcn ) , 1 )"	724:4:18411:18467	1038140	0	True				
ANR	1040372	CallExpression	"r_core_seek ( core , fcn -> addr + r_anal_fcn_size ( fcn ) , 1 )"		1038140	0					
ANR	1040373	Callee	r_core_seek		1038140	0					
ANR	1040374	Identifier	r_core_seek		1038140	0					
ANR	1040375	ArgumentList	core		1038140	1					
ANR	1040376	Argument	core		1038140	0					
ANR	1040377	Identifier	core		1038140	0					
ANR	1040378	Argument	fcn -> addr + r_anal_fcn_size ( fcn )		1038140	1					
ANR	1040379	AdditiveExpression	fcn -> addr + r_anal_fcn_size ( fcn )		1038140	0		+			
ANR	1040380	PtrMemberAccess	fcn -> addr		1038140	0					
ANR	1040381	Identifier	fcn		1038140	0					
ANR	1040382	Identifier	addr		1038140	1					
ANR	1040383	CallExpression	r_anal_fcn_size ( fcn )		1038140	1					
ANR	1040384	Callee	r_anal_fcn_size		1038140	0					
ANR	1040385	Identifier	r_anal_fcn_size		1038140	0					
ANR	1040386	ArgumentList	fcn		1038140	1					
ANR	1040387	Argument	fcn		1038140	0					
ANR	1040388	Identifier	fcn		1038140	0					
ANR	1040389	Argument	1		1038140	2					
ANR	1040390	PrimaryExpression	1		1038140	0					
ANR	1040391	BreakStatement	break ;	726:3:18477:18482	1038140	3	True				
ANR	1040392	Label	case ' ' :	727:2:18486:18494	1038140	4	True				
ANR	1040393	ExpressionStatement	"fcn = r_anal_fcn_find_name ( core -> anal , input + 2 )"	728:3:18508:18558	1038140	5	True				
ANR	1040394	AssignmentExpression	"fcn = r_anal_fcn_find_name ( core -> anal , input + 2 )"		1038140	0		=			
ANR	1040395	Identifier	fcn		1038140	0					
ANR	1040396	CallExpression	"r_anal_fcn_find_name ( core -> anal , input + 2 )"		1038140	1					
ANR	1040397	Callee	r_anal_fcn_find_name		1038140	0					
ANR	1040398	Identifier	r_anal_fcn_find_name		1038140	0					
ANR	1040399	ArgumentList	core -> anal		1038140	1					
ANR	1040400	Argument	core -> anal		1038140	0					
ANR	1040401	PtrMemberAccess	core -> anal		1038140	0					
ANR	1040402	Identifier	core		1038140	0					
ANR	1040403	Identifier	anal		1038140	1					
ANR	1040404	Argument	input + 2		1038140	1					
ANR	1040405	AdditiveExpression	input + 2		1038140	0		+			
ANR	1040406	Identifier	input		1038140	0					
ANR	1040407	PrimaryExpression	2		1038140	1					
ANR	1040408	IfStatement	if ( fcn )		1038140	6					
ANR	1040409	Condition	fcn	729:7:18567:18569	1038140	0	True				
ANR	1040410	Identifier	fcn		1038140	0					
ANR	1040411	CompoundStatement		408:12:9623:9623	1038140	1					
ANR	1040412	ExpressionStatement	"r_core_seek ( core , fcn -> addr , 1 )"	730:4:18578:18610	1038140	0	True				
ANR	1040413	CallExpression	"r_core_seek ( core , fcn -> addr , 1 )"		1038140	0					
ANR	1040414	Callee	r_core_seek		1038140	0					
ANR	1040415	Identifier	r_core_seek		1038140	0					
ANR	1040416	ArgumentList	core		1038140	1					
ANR	1040417	Argument	core		1038140	0					
ANR	1040418	Identifier	core		1038140	0					
ANR	1040419	Argument	fcn -> addr		1038140	1					
ANR	1040420	PtrMemberAccess	fcn -> addr		1038140	0					
ANR	1040421	Identifier	fcn		1038140	0					
ANR	1040422	Identifier	addr		1038140	1					
ANR	1040423	Argument	1		1038140	2					
ANR	1040424	PrimaryExpression	1		1038140	0					
ANR	1040425	BreakStatement	break ;	732:3:18620:18625	1038140	7	True				
ANR	1040426	Label	case '.' :	733:2:18629:18637	1038140	8	True				
ANR	1040427	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"	734:3:18651:18704	1038140	9	True				
ANR	1040428	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1038140	0		=			
ANR	1040429	Identifier	fcn		1038140	0					
ANR	1040430	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1038140	1					
ANR	1040431	Callee	r_anal_get_fcn_in		1038140	0					
ANR	1040432	Identifier	r_anal_get_fcn_in		1038140	0					
ANR	1040433	ArgumentList	core -> anal		1038140	1					
ANR	1040434	Argument	core -> anal		1038140	0					
ANR	1040435	PtrMemberAccess	core -> anal		1038140	0					
ANR	1040436	Identifier	core		1038140	0					
ANR	1040437	Identifier	anal		1038140	1					
ANR	1040438	Argument	core -> offset		1038140	1					
ANR	1040439	PtrMemberAccess	core -> offset		1038140	0					
ANR	1040440	Identifier	core		1038140	0					
ANR	1040441	Identifier	offset		1038140	1					
ANR	1040442	Argument	0		1038140	2					
ANR	1040443	PrimaryExpression	0		1038140	0					
ANR	1040444	IfStatement	if ( fcn )		1038140	10					
ANR	1040445	Condition	fcn	735:7:18713:18715	1038140	0	True				
ANR	1040446	Identifier	fcn		1038140	0					
ANR	1040447	CompoundStatement		414:12:9769:9769	1038140	1					
ANR	1040448	ExpressionStatement	"r_core_seek ( core , fcn -> addr , 1 )"	736:4:18724:18756	1038140	0	True				
ANR	1040449	CallExpression	"r_core_seek ( core , fcn -> addr , 1 )"		1038140	0					
ANR	1040450	Callee	r_core_seek		1038140	0					
ANR	1040451	Identifier	r_core_seek		1038140	0					
ANR	1040452	ArgumentList	core		1038140	1					
ANR	1040453	Argument	core		1038140	0					
ANR	1040454	Identifier	core		1038140	0					
ANR	1040455	Argument	fcn -> addr		1038140	1					
ANR	1040456	PtrMemberAccess	fcn -> addr		1038140	0					
ANR	1040457	Identifier	fcn		1038140	0					
ANR	1040458	Identifier	addr		1038140	1					
ANR	1040459	Argument	1		1038140	2					
ANR	1040460	PrimaryExpression	1		1038140	0					
ANR	1040461	BreakStatement	break ;	738:3:18766:18771	1038140	11	True				
ANR	1040462	BreakStatement	break ;	740:2:18779:18784	1038140	2	True				
ANR	1040463	Label	case 'o' :	742:1:18790:18798	1038140	50	True				
ANR	1040464	SwitchStatement	switch ( input [ 1 ] )		1038140	51					
ANR	1040465	Condition	input [ 1 ]	743:10:18818:18825	1038140	0	True				
ANR	1040466	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1040467	Identifier	input		1038140	0					
ANR	1040468	PrimaryExpression	1		1038140	1					
ANR	1040469	CompoundStatement		422:20:9879:9879	1038140	1					
ANR	1040470	Label	case 'r' :	744:2:18832:18840	1038140	0	True				
ANR	1040471	IfStatement	if ( input [ 2 ] == 't' )		1038140	1					
ANR	1040472	Condition	input [ 2 ] == 't'	745:7:18849:18863	1038140	0	True				
ANR	1040473	EqualityExpression	input [ 2 ] == 't'		1038140	0		==			
ANR	1040474	ArrayIndexing	input [ 2 ]		1038140	0					
ANR	1040475	Identifier	input		1038140	0					
ANR	1040476	PrimaryExpression	2		1038140	1					
ANR	1040477	PrimaryExpression	't'		1038140	1					
ANR	1040478	CompoundStatement		424:24:9917:9917	1038140	1					
ANR	1040479	ExpressionStatement	"cmd_sort ( core , input )"	746:4:18872:18894	1038140	0	True				
ANR	1040480	CallExpression	"cmd_sort ( core , input )"		1038140	0					
ANR	1040481	Callee	cmd_sort		1038140	0					
ANR	1040482	Identifier	cmd_sort		1038140	0					
ANR	1040483	ArgumentList	core		1038140	1					
ANR	1040484	Argument	core		1038140	0					
ANR	1040485	Identifier	core		1038140	0					
ANR	1040486	Argument	input		1038140	1					
ANR	1040487	Identifier	input		1038140	0					
ANR	1040488	ElseStatement	else		1038140	0					
ANR	1040489	CompoundStatement		426:10:9957:9957	1038140	0					
ANR	1040490	ReturnStatement	return - 1 ;	748:4:18912:18921	1038140	0	True				
ANR	1040491	UnaryOperationExpression	- 1		1038140	0					
ANR	1040492	UnaryOperator	-		1038140	0					
ANR	1040493	PrimaryExpression	1		1038140	1					
ANR	1040494	BreakStatement	break ;	750:3:18931:18936	1038140	2	True				
ANR	1040495	Label	case ' ' :	751:2:18940:18948	1038140	3	True				
ANR	1040496	Label	case '\\0' :	752:2:18952:18961	1038140	4	True				
ANR	1040497	Label	case '+' :	753:2:18965:18973	1038140	5	True				
ANR	1040498	Label	case '-' :	754:2:18977:18985	1038140	6	True				
ANR	1040499	ExpressionStatement	"cmd_seek_opcode ( core , input + 1 )"	755:3:18990:19023	1038140	7	True				
ANR	1040500	CallExpression	"cmd_seek_opcode ( core , input + 1 )"		1038140	0					
ANR	1040501	Callee	cmd_seek_opcode		1038140	0					
ANR	1040502	Identifier	cmd_seek_opcode		1038140	0					
ANR	1040503	ArgumentList	core		1038140	1					
ANR	1040504	Argument	core		1038140	0					
ANR	1040505	Identifier	core		1038140	0					
ANR	1040506	Argument	input + 1		1038140	1					
ANR	1040507	AdditiveExpression	input + 1		1038140	0		+			
ANR	1040508	Identifier	input		1038140	0					
ANR	1040509	PrimaryExpression	1		1038140	1					
ANR	1040510	BreakStatement	break ;	756:3:19028:19033	1038140	8	True				
ANR	1040511	Label	default :	757:2:19037:19044	1038140	9	True				
ANR	1040512	Identifier	default		1038140	0					
ANR	1040513	ReturnStatement	return - 1 ;	758:3:19049:19058	1038140	10	True				
ANR	1040514	UnaryOperationExpression	- 1		1038140	0					
ANR	1040515	UnaryOperator	-		1038140	0					
ANR	1040516	PrimaryExpression	1		1038140	1					
ANR	1040517	BreakStatement	break ;	760:2:19085:19090	1038140	52	True				
ANR	1040518	Label	case 'g' :	761:1:19093:19101	1038140	53	True				
ANR	1040519	CompoundStatement		442:2:10167:10219	1038140	54					
ANR	1040520	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( core -> io , core -> offset ) ;"	763:2:19116:19168	1038140	0	True				
ANR	1040521	IdentifierDecl	"* map = r_io_map_get ( core -> io , core -> offset )"		1038140	0					
ANR	1040522	IdentifierDeclType	RIOMap *		1038140	0					
ANR	1040523	Identifier	map		1038140	1					
ANR	1040524	AssignmentExpression	"* map = r_io_map_get ( core -> io , core -> offset )"		1038140	2		=			
ANR	1040525	Identifier	map		1038140	0					
ANR	1040526	CallExpression	"r_io_map_get ( core -> io , core -> offset )"		1038140	1					
ANR	1040527	Callee	r_io_map_get		1038140	0					
ANR	1040528	Identifier	r_io_map_get		1038140	0					
ANR	1040529	ArgumentList	core -> io		1038140	1					
ANR	1040530	Argument	core -> io		1038140	0					
ANR	1040531	PtrMemberAccess	core -> io		1038140	0					
ANR	1040532	Identifier	core		1038140	0					
ANR	1040533	Identifier	io		1038140	1					
ANR	1040534	Argument	core -> offset		1038140	1					
ANR	1040535	PtrMemberAccess	core -> offset		1038140	0					
ANR	1040536	Identifier	core		1038140	0					
ANR	1040537	Identifier	offset		1038140	1					
ANR	1040538	IfStatement	if ( map )		1038140	1					
ANR	1040539	Condition	map	764:6:19176:19178	1038140	0	True				
ANR	1040540	Identifier	map		1038140	0					
ANR	1040541	CompoundStatement		443:11:10232:10232	1038140	1					
ANR	1040542	ExpressionStatement	"r_core_seek ( core , map -> itv . addr , 1 )"	765:3:19186:19222	1038140	0	True				
ANR	1040543	CallExpression	"r_core_seek ( core , map -> itv . addr , 1 )"		1038140	0					
ANR	1040544	Callee	r_core_seek		1038140	0					
ANR	1040545	Identifier	r_core_seek		1038140	0					
ANR	1040546	ArgumentList	core		1038140	1					
ANR	1040547	Argument	core		1038140	0					
ANR	1040548	Identifier	core		1038140	0					
ANR	1040549	Argument	map -> itv . addr		1038140	1					
ANR	1040550	MemberAccess	map -> itv . addr		1038140	0					
ANR	1040551	PtrMemberAccess	map -> itv		1038140	0					
ANR	1040552	Identifier	map		1038140	0					
ANR	1040553	Identifier	itv		1038140	1					
ANR	1040554	Identifier	addr		1038140	1					
ANR	1040555	Argument	1		1038140	2					
ANR	1040556	PrimaryExpression	1		1038140	0					
ANR	1040557	ElseStatement	else		1038140	0					
ANR	1040558	CompoundStatement		445:9:10284:10284	1038140	0					
ANR	1040559	ExpressionStatement	"r_core_seek ( core , 0 , 1 )"	767:3:19238:19262	1038140	0	True				
ANR	1040560	CallExpression	"r_core_seek ( core , 0 , 1 )"		1038140	0					
ANR	1040561	Callee	r_core_seek		1038140	0					
ANR	1040562	Identifier	r_core_seek		1038140	0					
ANR	1040563	ArgumentList	core		1038140	1					
ANR	1040564	Argument	core		1038140	0					
ANR	1040565	Identifier	core		1038140	0					
ANR	1040566	Argument	0		1038140	1					
ANR	1040567	PrimaryExpression	0		1038140	0					
ANR	1040568	Argument	1		1038140	2					
ANR	1040569	PrimaryExpression	1		1038140	0					
ANR	1040570	BreakStatement	break ;	770:1:19272:19277	1038140	55	True				
ANR	1040571	Label	case 'G' :	771:1:19280:19288	1038140	56	True				
ANR	1040572	CompoundStatement		455:2:10389:10440	1038140	57					
ANR	1040573	IfStatement	if ( ! core -> file )		1038140	0					
ANR	1040574	Condition	! core -> file	773:6:19307:19317	1038140	0	True				
ANR	1040575	UnaryOperationExpression	! core -> file		1038140	0					
ANR	1040576	UnaryOperator	!		1038140	0					
ANR	1040577	PtrMemberAccess	core -> file		1038140	1					
ANR	1040578	Identifier	core		1038140	0					
ANR	1040579	Identifier	file		1038140	1					
ANR	1040580	CompoundStatement		452:19:10371:10371	1038140	1					
ANR	1040581	BreakStatement	break ;	774:3:19325:19330	1038140	0	True				
ANR	1040582	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( core -> io , core -> offset ) ;"	776:2:19338:19389	1038140	1	True				
ANR	1040583	IdentifierDecl	"* map = r_io_map_get ( core -> io , core -> offset )"		1038140	0					
ANR	1040584	IdentifierDeclType	RIOMap *		1038140	0					
ANR	1040585	Identifier	map		1038140	1					
ANR	1040586	AssignmentExpression	"* map = r_io_map_get ( core -> io , core -> offset )"		1038140	2		=			
ANR	1040587	Identifier	map		1038140	0					
ANR	1040588	CallExpression	"r_io_map_get ( core -> io , core -> offset )"		1038140	1					
ANR	1040589	Callee	r_io_map_get		1038140	0					
ANR	1040590	Identifier	r_io_map_get		1038140	0					
ANR	1040591	ArgumentList	core -> io		1038140	1					
ANR	1040592	Argument	core -> io		1038140	0					
ANR	1040593	PtrMemberAccess	core -> io		1038140	0					
ANR	1040594	Identifier	core		1038140	0					
ANR	1040595	Identifier	io		1038140	1					
ANR	1040596	Argument	core -> offset		1038140	1					
ANR	1040597	PtrMemberAccess	core -> offset		1038140	0					
ANR	1040598	Identifier	core		1038140	0					
ANR	1040599	Identifier	offset		1038140	1					
ANR	1040600	IfStatement	if ( map )		1038140	2					
ANR	1040601	Condition	map	778:6:19456:19458	1038140	0	True				
ANR	1040602	Identifier	map		1038140	0					
ANR	1040603	CompoundStatement		457:11:10512:10512	1038140	1					
ANR	1040604	ExpressionStatement	"r_core_seek ( core , map -> itv . addr + map -> itv . size + 2 , 1 )"	779:3:19466:19522	1038140	0	True				
ANR	1040605	CallExpression	"r_core_seek ( core , map -> itv . addr + map -> itv . size + 2 , 1 )"		1038140	0					
ANR	1040606	Callee	r_core_seek		1038140	0					
ANR	1040607	Identifier	r_core_seek		1038140	0					
ANR	1040608	ArgumentList	core		1038140	1					
ANR	1040609	Argument	core		1038140	0					
ANR	1040610	Identifier	core		1038140	0					
ANR	1040611	Argument	map -> itv . addr + map -> itv . size + 2		1038140	1					
ANR	1040612	AdditiveExpression	map -> itv . addr + map -> itv . size + 2		1038140	0		+			
ANR	1040613	MemberAccess	map -> itv . addr		1038140	0					
ANR	1040614	PtrMemberAccess	map -> itv		1038140	0					
ANR	1040615	Identifier	map		1038140	0					
ANR	1040616	Identifier	itv		1038140	1					
ANR	1040617	Identifier	addr		1038140	1					
ANR	1040618	AdditiveExpression	map -> itv . size + 2		1038140	1		+			
ANR	1040619	MemberAccess	map -> itv . size		1038140	0					
ANR	1040620	PtrMemberAccess	map -> itv		1038140	0					
ANR	1040621	Identifier	map		1038140	0					
ANR	1040622	Identifier	itv		1038140	1					
ANR	1040623	Identifier	size		1038140	1					
ANR	1040624	PrimaryExpression	2		1038140	1					
ANR	1040625	Argument	1		1038140	2					
ANR	1040626	PrimaryExpression	1		1038140	0					
ANR	1040627	ElseStatement	else		1038140	0					
ANR	1040628	CompoundStatement		459:9:10584:10584	1038140	0					
ANR	1040629	ExpressionStatement	"r_core_seek ( core , r_io_fd_size ( core -> io , core -> file -> fd ) , 1 )"	781:3:19538:19600	1038140	0	True				
ANR	1040630	CallExpression	"r_core_seek ( core , r_io_fd_size ( core -> io , core -> file -> fd ) , 1 )"		1038140	0					
ANR	1040631	Callee	r_core_seek		1038140	0					
ANR	1040632	Identifier	r_core_seek		1038140	0					
ANR	1040633	ArgumentList	core		1038140	1					
ANR	1040634	Argument	core		1038140	0					
ANR	1040635	Identifier	core		1038140	0					
ANR	1040636	Argument	"r_io_fd_size ( core -> io , core -> file -> fd )"		1038140	1					
ANR	1040637	CallExpression	"r_io_fd_size ( core -> io , core -> file -> fd )"		1038140	0					
ANR	1040638	Callee	r_io_fd_size		1038140	0					
ANR	1040639	Identifier	r_io_fd_size		1038140	0					
ANR	1040640	ArgumentList	core -> io		1038140	1					
ANR	1040641	Argument	core -> io		1038140	0					
ANR	1040642	PtrMemberAccess	core -> io		1038140	0					
ANR	1040643	Identifier	core		1038140	0					
ANR	1040644	Identifier	io		1038140	1					
ANR	1040645	Argument	core -> file -> fd		1038140	1					
ANR	1040646	PtrMemberAccess	core -> file -> fd		1038140	0					
ANR	1040647	PtrMemberAccess	core -> file		1038140	0					
ANR	1040648	Identifier	core		1038140	0					
ANR	1040649	Identifier	file		1038140	1					
ANR	1040650	Identifier	fd		1038140	1					
ANR	1040651	Argument	1		1038140	2					
ANR	1040652	PrimaryExpression	1		1038140	0					
ANR	1040653	BreakStatement	break ;	784:1:19610:19615	1038140	58	True				
ANR	1040654	Label	case 'l' :	785:1:19618:19626	1038140	59	True				
ANR	1040655	CompoundStatement		466:2:10692:10738	1038140	60					
ANR	1040656	IdentifierDeclStatement	"int sl_arg = r_num_math ( core -> num , input + 1 ) ;"	787:2:19641:19687	1038140	0	True				
ANR	1040657	IdentifierDecl	"sl_arg = r_num_math ( core -> num , input + 1 )"		1038140	0					
ANR	1040658	IdentifierDeclType	int		1038140	0					
ANR	1040659	Identifier	sl_arg		1038140	1					
ANR	1040660	AssignmentExpression	"sl_arg = r_num_math ( core -> num , input + 1 )"		1038140	2		=			
ANR	1040661	Identifier	sl_arg		1038140	0					
ANR	1040662	CallExpression	"r_num_math ( core -> num , input + 1 )"		1038140	1					
ANR	1040663	Callee	r_num_math		1038140	0					
ANR	1040664	Identifier	r_num_math		1038140	0					
ANR	1040665	ArgumentList	core -> num		1038140	1					
ANR	1040666	Argument	core -> num		1038140	0					
ANR	1040667	PtrMemberAccess	core -> num		1038140	0					
ANR	1040668	Identifier	core		1038140	0					
ANR	1040669	Identifier	num		1038140	1					
ANR	1040670	Argument	input + 1		1038140	1					
ANR	1040671	AdditiveExpression	input + 1		1038140	0		+			
ANR	1040672	Identifier	input		1038140	0					
ANR	1040673	PrimaryExpression	1		1038140	1					
ANR	1040674	SwitchStatement	switch ( input [ 1 ] )		1038140	1					
ANR	1040675	Condition	input [ 1 ]	788:10:19699:19706	1038140	0	True				
ANR	1040676	ArrayIndexing	input [ 1 ]		1038140	0					
ANR	1040677	Identifier	input		1038140	0					
ANR	1040678	PrimaryExpression	1		1038140	1					
ANR	1040679	CompoundStatement		467:20:10760:10760	1038140	1					
ANR	1040680	Label	case '\\0' :	789:2:19713:19722	1038140	0	True				
ANR	1040681	IfStatement	if ( ! core -> print -> lines_cache )		1038140	1					
ANR	1040682	Condition	! core -> print -> lines_cache	790:7:19739:19763	1038140	0	True				
ANR	1040683	UnaryOperationExpression	! core -> print -> lines_cache		1038140	0					
ANR	1040684	UnaryOperator	!		1038140	0					
ANR	1040685	PtrMemberAccess	core -> print -> lines_cache		1038140	1					
ANR	1040686	PtrMemberAccess	core -> print		1038140	0					
ANR	1040687	Identifier	core		1038140	0					
ANR	1040688	Identifier	print		1038140	1					
ANR	1040689	Identifier	lines_cache		1038140	1					
ANR	1040690	CompoundStatement		469:34:10817:10817	1038140	1					
ANR	1040691	ExpressionStatement	__init_seek_line ( core )	791:4:19772:19795	1038140	0	True				
ANR	1040692	CallExpression	__init_seek_line ( core )		1038140	0					
ANR	1040693	Callee	__init_seek_line		1038140	0					
ANR	1040694	Identifier	__init_seek_line		1038140	0					
ANR	1040695	ArgumentList	core		1038140	1					
ANR	1040696	Argument	core		1038140	0					
ANR	1040697	Identifier	core		1038140	0					
ANR	1040698	ExpressionStatement	__get_current_line ( core )	793:3:19805:19830	1038140	2	True				
ANR	1040699	CallExpression	__get_current_line ( core )		1038140	0					
ANR	1040700	Callee	__get_current_line		1038140	0					
ANR	1040701	Identifier	__get_current_line		1038140	0					
ANR	1040702	ArgumentList	core		1038140	1					
ANR	1040703	Argument	core		1038140	0					
ANR	1040704	Identifier	core		1038140	0					
ANR	1040705	BreakStatement	break ;	794:3:19835:19840	1038140	3	True				
ANR	1040706	Label	case ' ' :	795:2:19844:19852	1038140	4	True				
ANR	1040707	IfStatement	if ( ! core -> print -> lines_cache )		1038140	5					
ANR	1040708	Condition	! core -> print -> lines_cache	796:7:19870:19894	1038140	0	True				
ANR	1040709	UnaryOperationExpression	! core -> print -> lines_cache		1038140	0					
ANR	1040710	UnaryOperator	!		1038140	0					
ANR	1040711	PtrMemberAccess	core -> print -> lines_cache		1038140	1					
ANR	1040712	PtrMemberAccess	core -> print		1038140	0					
ANR	1040713	Identifier	core		1038140	0					
ANR	1040714	Identifier	print		1038140	1					
ANR	1040715	Identifier	lines_cache		1038140	1					
ANR	1040716	CompoundStatement		475:34:10948:10948	1038140	1					
ANR	1040717	ExpressionStatement	__init_seek_line ( core )	797:4:19903:19926	1038140	0	True				
ANR	1040718	CallExpression	__init_seek_line ( core )		1038140	0					
ANR	1040719	Callee	__init_seek_line		1038140	0					
ANR	1040720	Identifier	__init_seek_line		1038140	0					
ANR	1040721	ArgumentList	core		1038140	1					
ANR	1040722	Argument	core		1038140	0					
ANR	1040723	Identifier	core		1038140	0					
ANR	1040724	ExpressionStatement	"__seek_line_absolute ( core , sl_arg )"	799:3:19936:19971	1038140	6	True				
ANR	1040725	CallExpression	"__seek_line_absolute ( core , sl_arg )"		1038140	0					
ANR	1040726	Callee	__seek_line_absolute		1038140	0					
ANR	1040727	Identifier	__seek_line_absolute		1038140	0					
ANR	1040728	ArgumentList	core		1038140	1					
ANR	1040729	Argument	core		1038140	0					
ANR	1040730	Identifier	core		1038140	0					
ANR	1040731	Argument	sl_arg		1038140	1					
ANR	1040732	Identifier	sl_arg		1038140	0					
ANR	1040733	BreakStatement	break ;	800:3:19976:19981	1038140	7	True				
ANR	1040734	Label	case '+' :	801:2:19985:19993	1038140	8	True				
ANR	1040735	Label	case '-' :	802:2:20006:20014	1038140	9	True				
ANR	1040736	IfStatement	if ( ! core -> print -> lines_cache )		1038140	10					
ANR	1040737	Condition	! core -> print -> lines_cache	803:7:20032:20056	1038140	0	True				
ANR	1040738	UnaryOperationExpression	! core -> print -> lines_cache		1038140	0					
ANR	1040739	UnaryOperator	!		1038140	0					
ANR	1040740	PtrMemberAccess	core -> print -> lines_cache		1038140	1					
ANR	1040741	PtrMemberAccess	core -> print		1038140	0					
ANR	1040742	Identifier	core		1038140	0					
ANR	1040743	Identifier	print		1038140	1					
ANR	1040744	Identifier	lines_cache		1038140	1					
ANR	1040745	CompoundStatement		482:34:11110:11110	1038140	1					
ANR	1040746	ExpressionStatement	__init_seek_line ( core )	804:4:20065:20088	1038140	0	True				
ANR	1040747	CallExpression	__init_seek_line ( core )		1038140	0					
ANR	1040748	Callee	__init_seek_line		1038140	0					
ANR	1040749	Identifier	__init_seek_line		1038140	0					
ANR	1040750	ArgumentList	core		1038140	1					
ANR	1040751	Argument	core		1038140	0					
ANR	1040752	Identifier	core		1038140	0					
ANR	1040753	ExpressionStatement	"__seek_line_relative ( core , sl_arg )"	806:3:20098:20133	1038140	11	True				
ANR	1040754	CallExpression	"__seek_line_relative ( core , sl_arg )"		1038140	0					
ANR	1040755	Callee	__seek_line_relative		1038140	0					
ANR	1040756	Identifier	__seek_line_relative		1038140	0					
ANR	1040757	ArgumentList	core		1038140	1					
ANR	1040758	Argument	core		1038140	0					
ANR	1040759	Identifier	core		1038140	0					
ANR	1040760	Argument	sl_arg		1038140	1					
ANR	1040761	Identifier	sl_arg		1038140	0					
ANR	1040762	BreakStatement	break ;	807:3:20138:20143	1038140	12	True				
ANR	1040763	Label	case 'c' :	808:2:20147:20155	1038140	13	True				
ANR	1040764	ExpressionStatement	__clean_lines_cache ( core )	809:3:20169:20195	1038140	14	True				
ANR	1040765	CallExpression	__clean_lines_cache ( core )		1038140	0					
ANR	1040766	Callee	__clean_lines_cache		1038140	0					
ANR	1040767	Identifier	__clean_lines_cache		1038140	0					
ANR	1040768	ArgumentList	core		1038140	1					
ANR	1040769	Argument	core		1038140	0					
ANR	1040770	Identifier	core		1038140	0					
ANR	1040771	BreakStatement	break ;	810:3:20200:20205	1038140	15	True				
ANR	1040772	Label	case 'l' :	811:2:20209:20217	1038140	16	True				
ANR	1040773	IfStatement	if ( ! core -> print -> lines_cache )		1038140	17					
ANR	1040774	Condition	! core -> print -> lines_cache	812:7:20235:20259	1038140	0	True				
ANR	1040775	UnaryOperationExpression	! core -> print -> lines_cache		1038140	0					
ANR	1040776	UnaryOperator	!		1038140	0					
ANR	1040777	PtrMemberAccess	core -> print -> lines_cache		1038140	1					
ANR	1040778	PtrMemberAccess	core -> print		1038140	0					
ANR	1040779	Identifier	core		1038140	0					
ANR	1040780	Identifier	print		1038140	1					
ANR	1040781	Identifier	lines_cache		1038140	1					
ANR	1040782	CompoundStatement		491:34:11313:11313	1038140	1					
ANR	1040783	ExpressionStatement	__init_seek_line ( core )	813:4:20268:20291	1038140	0	True				
ANR	1040784	CallExpression	__init_seek_line ( core )		1038140	0					
ANR	1040785	Callee	__init_seek_line		1038140	0					
ANR	1040786	Identifier	__init_seek_line		1038140	0					
ANR	1040787	ArgumentList	core		1038140	1					
ANR	1040788	Argument	core		1038140	0					
ANR	1040789	Identifier	core		1038140	0					
ANR	1040790	ExpressionStatement	"eprintf ( ""%d lines\\n"" , core -> print -> lines_cache_sz - 1 )"	815:3:20301:20356	1038140	18	True				
ANR	1040791	CallExpression	"eprintf ( ""%d lines\\n"" , core -> print -> lines_cache_sz - 1 )"		1038140	0					
ANR	1040792	Callee	eprintf		1038140	0					
ANR	1040793	Identifier	eprintf		1038140	0					
ANR	1040794	ArgumentList	"""%d lines\\n"""		1038140	1					
ANR	1040795	Argument	"""%d lines\\n"""		1038140	0					
ANR	1040796	PrimaryExpression	"""%d lines\\n"""		1038140	0					
ANR	1040797	Argument	core -> print -> lines_cache_sz - 1		1038140	1					
ANR	1040798	AdditiveExpression	core -> print -> lines_cache_sz - 1		1038140	0		-			
ANR	1040799	PtrMemberAccess	core -> print -> lines_cache_sz		1038140	0					
ANR	1040800	PtrMemberAccess	core -> print		1038140	0					
ANR	1040801	Identifier	core		1038140	0					
ANR	1040802	Identifier	print		1038140	1					
ANR	1040803	Identifier	lines_cache_sz		1038140	1					
ANR	1040804	PrimaryExpression	1		1038140	1					
ANR	1040805	BreakStatement	break ;	816:3:20361:20366	1038140	19	True				
ANR	1040806	Label	case '?' :	817:2:20370:20378	1038140	20	True				
ANR	1040807	ExpressionStatement	"r_core_cmd_help ( core , help_msg_sl )"	818:3:20392:20427	1038140	21	True				
ANR	1040808	CallExpression	"r_core_cmd_help ( core , help_msg_sl )"		1038140	0					
ANR	1040809	Callee	r_core_cmd_help		1038140	0					
ANR	1040810	Identifier	r_core_cmd_help		1038140	0					
ANR	1040811	ArgumentList	core		1038140	1					
ANR	1040812	Argument	core		1038140	0					
ANR	1040813	Identifier	core		1038140	0					
ANR	1040814	Argument	help_msg_sl		1038140	1					
ANR	1040815	Identifier	help_msg_sl		1038140	0					
ANR	1040816	BreakStatement	break ;	819:3:20432:20437	1038140	22	True				
ANR	1040817	BreakStatement	break ;	822:1:20447:20452	1038140	61	True				
ANR	1040818	Label	case ':' :	823:1:20455:20463	1038140	62	True				
ANR	1040819	ExpressionStatement	"printPadded ( core , atoi ( input + 1 ) )"	824:2:20475:20511	1038140	63	True				
ANR	1040820	CallExpression	"printPadded ( core , atoi ( input + 1 ) )"		1038140	0					
ANR	1040821	Callee	printPadded		1038140	0					
ANR	1040822	Identifier	printPadded		1038140	0					
ANR	1040823	ArgumentList	core		1038140	1					
ANR	1040824	Argument	core		1038140	0					
ANR	1040825	Identifier	core		1038140	0					
ANR	1040826	Argument	atoi ( input + 1 )		1038140	1					
ANR	1040827	CallExpression	atoi ( input + 1 )		1038140	0					
ANR	1040828	Callee	atoi		1038140	0					
ANR	1040829	Identifier	atoi		1038140	0					
ANR	1040830	ArgumentList	input + 1		1038140	1					
ANR	1040831	Argument	input + 1		1038140	0					
ANR	1040832	AdditiveExpression	input + 1		1038140	0		+			
ANR	1040833	Identifier	input		1038140	0					
ANR	1040834	PrimaryExpression	1		1038140	1					
ANR	1040835	BreakStatement	break ;	825:2:20515:20520	1038140	64	True				
ANR	1040836	Label	case '?' :	826:1:20523:20531	1038140	65	True				
ANR	1040837	ExpressionStatement	"r_core_cmd_help ( core , help_msg_s )"	827:2:20543:20577	1038140	66	True				
ANR	1040838	CallExpression	"r_core_cmd_help ( core , help_msg_s )"		1038140	0					
ANR	1040839	Callee	r_core_cmd_help		1038140	0					
ANR	1040840	Identifier	r_core_cmd_help		1038140	0					
ANR	1040841	ArgumentList	core		1038140	1					
ANR	1040842	Argument	core		1038140	0					
ANR	1040843	Identifier	core		1038140	0					
ANR	1040844	Argument	help_msg_s		1038140	1					
ANR	1040845	Identifier	help_msg_s		1038140	0					
ANR	1040846	BreakStatement	break ;	828:2:20581:20586	1038140	67	True				
ANR	1040847	Label	default :	829:1:20589:20596	1038140	68	True				
ANR	1040848	Identifier	default		1038140	0					
ANR	1040849	CompoundStatement		510:3:11656:11694	1038140	69					
ANR	1040850	IdentifierDeclStatement	"ut64 n = r_num_math ( core -> num , input ) ;"	831:3:20605:20643	1038140	0	True				
ANR	1040851	IdentifierDecl	"n = r_num_math ( core -> num , input )"		1038140	0					
ANR	1040852	IdentifierDeclType	ut64		1038140	0					
ANR	1040853	Identifier	n		1038140	1					
ANR	1040854	AssignmentExpression	"n = r_num_math ( core -> num , input )"		1038140	2		=			
ANR	1040855	Identifier	n		1038140	0					
ANR	1040856	CallExpression	"r_num_math ( core -> num , input )"		1038140	1					
ANR	1040857	Callee	r_num_math		1038140	0					
ANR	1040858	Identifier	r_num_math		1038140	0					
ANR	1040859	ArgumentList	core -> num		1038140	1					
ANR	1040860	Argument	core -> num		1038140	0					
ANR	1040861	PtrMemberAccess	core -> num		1038140	0					
ANR	1040862	Identifier	core		1038140	0					
ANR	1040863	Identifier	num		1038140	1					
ANR	1040864	Argument	input		1038140	1					
ANR	1040865	Identifier	input		1038140	0					
ANR	1040866	IfStatement	if ( n )		1038140	1					
ANR	1040867	Condition	n	832:7:20652:20652	1038140	0	True				
ANR	1040868	Identifier	n		1038140	0					
ANR	1040869	CompoundStatement		511:10:11706:11706	1038140	1					
ANR	1040870	IfStatement	if ( ! silent )		1038140	0					
ANR	1040871	Condition	! silent	833:8:20665:20671	1038140	0	True				
ANR	1040872	UnaryOperationExpression	! silent		1038140	0					
ANR	1040873	UnaryOperator	!		1038140	0					
ANR	1040874	Identifier	silent		1038140	1					
ANR	1040875	CompoundStatement		512:17:11725:11725	1038140	1					
ANR	1040876	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"	834:5:20681:20755	1038140	0	True				
ANR	1040877	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , r_print_get_cursor ( core -> print ) )"		1038140	0					
ANR	1040878	Callee	r_io_sundo_push		1038140	0					
ANR	1040879	Identifier	r_io_sundo_push		1038140	0					
ANR	1040880	ArgumentList	core -> io		1038140	1					
ANR	1040881	Argument	core -> io		1038140	0					
ANR	1040882	PtrMemberAccess	core -> io		1038140	0					
ANR	1040883	Identifier	core		1038140	0					
ANR	1040884	Identifier	io		1038140	1					
ANR	1040885	Argument	core -> offset		1038140	1					
ANR	1040886	PtrMemberAccess	core -> offset		1038140	0					
ANR	1040887	Identifier	core		1038140	0					
ANR	1040888	Identifier	offset		1038140	1					
ANR	1040889	Argument	r_print_get_cursor ( core -> print )		1038140	2					
ANR	1040890	CallExpression	r_print_get_cursor ( core -> print )		1038140	0					
ANR	1040891	Callee	r_print_get_cursor		1038140	0					
ANR	1040892	Identifier	r_print_get_cursor		1038140	0					
ANR	1040893	ArgumentList	core -> print		1038140	1					
ANR	1040894	Argument	core -> print		1038140	0					
ANR	1040895	PtrMemberAccess	core -> print		1038140	0					
ANR	1040896	Identifier	core		1038140	0					
ANR	1040897	Identifier	print		1038140	1					
ANR	1040898	ExpressionStatement	"r_core_seek ( core , n , 1 )"	836:4:20767:20791	1038140	1	True				
ANR	1040899	CallExpression	"r_core_seek ( core , n , 1 )"		1038140	0					
ANR	1040900	Callee	r_core_seek		1038140	0					
ANR	1040901	Identifier	r_core_seek		1038140	0					
ANR	1040902	ArgumentList	core		1038140	1					
ANR	1040903	Argument	core		1038140	0					
ANR	1040904	Identifier	core		1038140	0					
ANR	1040905	Argument	n		1038140	1					
ANR	1040906	Identifier	n		1038140	0					
ANR	1040907	Argument	1		1038140	2					
ANR	1040908	PrimaryExpression	1		1038140	0					
ANR	1040909	ExpressionStatement	r_core_block_read ( core )	837:4:20797:20821	1038140	2	True				
ANR	1040910	CallExpression	r_core_block_read ( core )		1038140	0					
ANR	1040911	Callee	r_core_block_read		1038140	0					
ANR	1040912	Identifier	r_core_block_read		1038140	0					
ANR	1040913	ArgumentList	core		1038140	1					
ANR	1040914	Argument	core		1038140	0					
ANR	1040915	Identifier	core		1038140	0					
ANR	1040916	BreakStatement	break ;	840:2:20834:20839	1038140	70	True				
ANR	1040917	ReturnStatement	return 0 ;	842:1:20845:20853	1038140	12	True				
ANR	1040918	PrimaryExpression	0		1038140	0					
ANR	1040919	ReturnType	static int		1038140	1					
ANR	1040920	Identifier	cmd_seek		1038140	2					
ANR	1040921	ParameterList	"void * data , const char * input"		1038140	3					
ANR	1040922	Parameter	void * data	322:20:8917:8926	1038140	0	True				
ANR	1040923	ParameterType	void *		1038140	0					
ANR	1040924	Identifier	data		1038140	1					
ANR	1040925	Parameter	const char * input	322:32:8929:8945	1038140	1	True				
ANR	1040926	ParameterType	const char *		1038140	0					
ANR	1040927	Identifier	input		1038140	1					
ANR	1040928	CFGEntryNode	ENTRY		1038140		True				
ANR	1040929	CFGExitNode	EXIT		1038140		True				
ANR	1040930	InfiniteForNode	true		1038140		True				
ANR	1040931	Symbol	sdb_decode		1038140						
ANR	1040932	Symbol	nkey		1038140						
ANR	1040933	Symbol	mult		1038140						
ANR	1040934	Symbol	* fcn		1038140						
ANR	1040935	Symbol	* map		1038140						
ANR	1040936	Symbol	* input		1038140						
ANR	1040937	Symbol	delta		1038140						
ANR	1040938	Symbol	core -> offset		1038140						
ANR	1040939	Symbol	strchr		1038140						
ANR	1040940	Symbol	sdb_const_get		1038140						
ANR	1040941	Symbol	r_cons_singleton ( ) -> context -> is_interactive		1038140						
ANR	1040942	Symbol	* core -> num		1038140						
ANR	1040943	Symbol	* cmd		1038140						
ANR	1040944	Symbol	val		1038140						
ANR	1040945	Symbol	core -> blocksize		1038140						
ANR	1040946	Symbol	u_num		1038140						
ANR	1040947	Symbol	sdb_atoi		1038140						
ANR	1040948	Symbol	r_list_newf		1038140						
ANR	1040949	Symbol	addrs		1038140						
ANR	1040950	Symbol	iter		1038140						
ANR	1040951	Symbol	r_anal_fcn_find_name		1038140						
ANR	1040952	Symbol	sl_arg		1038140						
ANR	1040953	Symbol	core -> num -> nc . calc_buf		1038140						
ANR	1040954	Symbol	str		1038140						
ANR	1040955	Symbol	input		1038140						
ANR	1040956	Symbol	r_config_get_i		1038140						
ANR	1040957	Symbol	sdb_anext		1038140						
ANR	1040958	Symbol	cmd		1038140						
ANR	1040959	Symbol	core -> num -> nc		1038140						
ANR	1040960	Symbol	cur		1038140						
ANR	1040961	Symbol	undo -> off		1038140						
ANR	1040962	Symbol	pfx		1038140						
ANR	1040963	Symbol	f -> name		1038140						
ANR	1040964	Symbol	* core		1038140						
ANR	1040965	Symbol	r_config_get		1038140						
ANR	1040966	Symbol	* val		1038140						
ANR	1040967	Symbol	core -> anal		1038140						
ANR	1040968	Symbol	fcn		1038140						
ANR	1040969	Symbol	cb . str		1038140						
ANR	1040970	Symbol	core -> io		1038140						
ANR	1040971	Symbol	help_msg_sC		1038140						
ANR	1040972	Symbol	* dup		1038140						
ANR	1040973	Symbol	help_msg_s		1038140						
ANR	1040974	Symbol	r_io_sundo		1038140						
ANR	1040975	Symbol	free		1038140						
ANR	1040976	Symbol	map		1038140						
ANR	1040977	Symbol	key		1038140						
ANR	1040978	Symbol	cb		1038140						
ANR	1040979	Symbol	atoi		1038140						
ANR	1040980	Symbol	malloc		1038140						
ANR	1040981	Symbol	silent		1038140						
ANR	1040982	Symbol	& next		1038140						
ANR	1040983	Symbol	cb . addr		1038140						
ANR	1040984	Symbol	f		1038140						
ANR	1040985	Symbol	r_io_sundo_redo		1038140						
ANR	1040986	Symbol	i		1038140						
ANR	1040987	Symbol	* r_cons_singleton ( ) -> context		1038140						
ANR	1040988	Symbol	core -> flags		1038140						
ANR	1040989	Symbol	off		1038140						
ANR	1040990	Symbol	n		1038140						
ANR	1040991	Symbol	p		1038140						
ANR	1040992	Symbol	inputnum		1038140						
ANR	1040993	Symbol	comma		1038140						
ANR	1040994	Symbol	* core -> print		1038140						
ANR	1040995	Symbol	core -> anal -> sdb_meta		1038140						
ANR	1040996	Symbol	* core -> anal		1038140						
ANR	1040997	Symbol	names		1038140						
ANR	1040998	Symbol	f -> offset		1038140						
ANR	1040999	Symbol	core -> search -> n_kws		1038140						
ANR	1041000	Symbol	x00		1038140						
ANR	1041001	Symbol	fcn -> addr		1038140						
ANR	1041002	Symbol	r_flag_get_at		1038140						
ANR	1041003	Symbol	* r_cons_singleton		1038140						
ANR	1041004	Symbol	data		1038140						
ANR	1041005	Symbol	r_anal_fcn_size		1038140						
ANR	1041006	Symbol	core -> print -> lines_cache		1038140						
ANR	1041007	Symbol	mode		1038140						
ANR	1041008	Symbol	r_io_fd_size		1038140						
ANR	1041009	Symbol	iter -> n		1038140						
ANR	1041010	Symbol	* ptr		1038140						
ANR	1041011	Symbol	core -> num		1038140						
ANR	1041012	Symbol	r_print_get_cursor		1038140						
ANR	1041013	Symbol	NULL		1038140						
ANR	1041014	Symbol	help_msg_ss		1038140						
ANR	1041015	Symbol	count		1038140						
ANR	1041016	Symbol	r_list_get_n		1038140						
ANR	1041017	Symbol	* core -> search		1038140						
ANR	1041018	Symbol	list		1038140						
ANR	1041019	Symbol	help_msg_sl		1038140						
ANR	1041020	Symbol	r_str_cmp		1038140						
ANR	1041021	Symbol	core		1038140						
ANR	1041022	Symbol	strstr		1038140						
ANR	1041023	Symbol	* u_num		1038140						
ANR	1041024	Symbol	true		1038140						
ANR	1041025	Symbol	name		1038140						
ANR	1041026	Symbol	core -> file -> fd		1038140						
ANR	1041027	Symbol	core -> print		1038140						
ANR	1041028	Symbol	* undo		1038140						
ANR	1041029	Symbol	next		1038140						
ANR	1041030	Symbol	r_io_sundo_list		1038140						
ANR	1041031	Symbol	map -> itv		1038140						
ANR	1041032	Symbol	core -> num -> nc . errors		1038140						
ANR	1041033	Symbol	kwidx		1038140						
ANR	1041034	Symbol	r_str_newf		1038140						
ANR	1041035	Symbol	r_num_math		1038140						
ANR	1041036	Symbol	* iter		1038140						
ANR	1041037	Symbol	lsz		1038140						
ANR	1041038	Symbol	undo		1038140						
ANR	1041039	Symbol	r_cons_singleton		1038140						
ANR	1041040	Symbol	map -> itv . addr		1038140						
ANR	1041041	Symbol	addr		1038140						
ANR	1041042	Symbol	core -> search		1038140						
ANR	1041043	Symbol	* * core		1038140						
ANR	1041044	Symbol	saved_maxhits		1038140						
ANR	1041045	Symbol	core -> config		1038140						
ANR	1041046	Symbol	core -> file		1038140						
ANR	1041047	Symbol	core -> rcmd		1038140						
ANR	1041048	Symbol	false		1038140						
ANR	1041049	Symbol	sdb_get		1038140						
ANR	1041050	Symbol	* * r_cons_singleton		1038140						
ANR	1041051	Symbol	ptr		1038140						
ANR	1041052	Symbol	* f		1038140						
ANR	1041053	Symbol	* core -> file		1038140						
ANR	1041054	Symbol	r_anal_get_fcn_in		1038140						
ANR	1041055	Symbol	map -> itv . size		1038140						
ANR	1041056	Symbol	saved_from		1038140						
ANR	1041057	Symbol	* p		1038140						
ANR	1041058	Symbol	strdup		1038140						
ANR	1041059	Symbol	core -> print -> lines_cache_sz		1038140						
ANR	1041060	Symbol	r_cons_singleton ( ) -> context		1038140						
ANR	1041061	Symbol	dup		1038140						
ANR	1041062	Symbol	r_io_map_get		1038140						
ANR	1041063	Symbol	MetaCallback		1038140						
