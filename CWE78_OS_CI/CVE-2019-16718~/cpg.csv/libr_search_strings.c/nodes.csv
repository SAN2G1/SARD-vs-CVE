command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5059926	File	data/converged/CVE-2019-16718~_radare2/libr_search_strings.c								
ANR	5059927	ClassDef	<unnamed>	6:0:109:157							
ANR	5059928	DeclStmt									
ANR	5059929	Decl							char	char * [ 3 ]	encodings
ANR	5059930	Function	r_search_get_encoding	15:0:329:651							
ANR	5059931	FunctionDef	r_search_get_encoding (const char * name)		5059930	0					
ANR	5059932	CompoundStatement		15:50:379:651	5059930	0					
ANR	5059933	IdentifierDeclStatement	int i ;	16:1:382:387	5059930	0	True				
ANR	5059934	IdentifierDecl	i		5059930	0					
ANR	5059935	IdentifierDeclType	int		5059930	0					
ANR	5059936	Identifier	i		5059930	1					
ANR	5059937	IfStatement	if ( ! name || ! * name )		5059930	1					
ANR	5059938	Condition	! name || ! * name	17:5:394:408	5059930	0	True				
ANR	5059939	OrExpression	! name || ! * name		5059930	0		||			
ANR	5059940	UnaryOperationExpression	! name		5059930	0					
ANR	5059941	UnaryOperator	!		5059930	0					
ANR	5059942	Identifier	name		5059930	1					
ANR	5059943	UnaryOperationExpression	! * name		5059930	1					
ANR	5059944	UnaryOperator	!		5059930	0					
ANR	5059945	UnaryOperationExpression	* name		5059930	1					
ANR	5059946	UnaryOperator	*		5059930	0					
ANR	5059947	Identifier	name		5059930	1					
ANR	5059948	CompoundStatement		3:22:31:31	5059930	1					
ANR	5059949	ReturnStatement	return ENCODING_ASCII ;	18:2:415:436	5059930	0	True				
ANR	5059950	Identifier	ENCODING_ASCII		5059930	0					
ANR	5059951	IdentifierDeclStatement	ut32 lename = strlen ( name ) ;	20:1:442:469	5059930	2	True				
ANR	5059952	IdentifierDecl	lename = strlen ( name )		5059930	0					
ANR	5059953	IdentifierDeclType	ut32		5059930	0					
ANR	5059954	Identifier	lename		5059930	1					
ANR	5059955	AssignmentExpression	lename = strlen ( name )		5059930	2		=			
ANR	5059956	Identifier	lename		5059930	0					
ANR	5059957	CallExpression	strlen ( name )		5059930	1					
ANR	5059958	Callee	strlen		5059930	0					
ANR	5059959	Identifier	strlen		5059930	0					
ANR	5059960	ArgumentList	name		5059930	1					
ANR	5059961	Argument	name		5059930	0					
ANR	5059962	Identifier	name		5059930	0					
ANR	5059963	ForStatement	for ( i = 0 ; encodings [ i ] ; i ++ )		5059930	3					
ANR	5059964	ForInit	i = 0 ;	21:6:477:482	5059930	0	True				
ANR	5059965	AssignmentExpression	i = 0		5059930	0		=			
ANR	5059966	Identifier	i		5059930	0					
ANR	5059967	PrimaryExpression	0		5059930	1					
ANR	5059968	Condition	encodings [ i ]	21:13:484:495	5059930	1	True				
ANR	5059969	ArrayIndexing	encodings [ i ]		5059930	0					
ANR	5059970	Identifier	encodings		5059930	0					
ANR	5059971	Identifier	i		5059930	1					
ANR	5059972	PostIncDecOperationExpression	i ++	21:27:498:500	5059930	2	True				
ANR	5059973	Identifier	i		5059930	0					
ANR	5059974	IncDec	++		5059930	1					
ANR	5059975	CompoundStatement		8:2:127:174	5059930	3					
ANR	5059976	IdentifierDeclStatement	"ut32 sz = R_MIN ( strlen ( encodings [ i ] ) , lename ) ;"	22:2:507:554	5059930	0	True				
ANR	5059977	IdentifierDecl	"sz = R_MIN ( strlen ( encodings [ i ] ) , lename )"		5059930	0					
ANR	5059978	IdentifierDeclType	ut32		5059930	0					
ANR	5059979	Identifier	sz		5059930	1					
ANR	5059980	AssignmentExpression	"sz = R_MIN ( strlen ( encodings [ i ] ) , lename )"		5059930	2		=			
ANR	5059981	Identifier	sz		5059930	0					
ANR	5059982	CallExpression	"R_MIN ( strlen ( encodings [ i ] ) , lename )"		5059930	1					
ANR	5059983	Callee	R_MIN		5059930	0					
ANR	5059984	Identifier	R_MIN		5059930	0					
ANR	5059985	ArgumentList	strlen ( encodings [ i ] )		5059930	1					
ANR	5059986	Argument	strlen ( encodings [ i ] )		5059930	0					
ANR	5059987	CallExpression	strlen ( encodings [ i ] )		5059930	0					
ANR	5059988	Callee	strlen		5059930	0					
ANR	5059989	Identifier	strlen		5059930	0					
ANR	5059990	ArgumentList	encodings [ i ]		5059930	1					
ANR	5059991	Argument	encodings [ i ]		5059930	0					
ANR	5059992	ArrayIndexing	encodings [ i ]		5059930	0					
ANR	5059993	Identifier	encodings		5059930	0					
ANR	5059994	Identifier	i		5059930	1					
ANR	5059995	Argument	lename		5059930	1					
ANR	5059996	Identifier	lename		5059930	0					
ANR	5059997	IfStatement	"if ( ! r_str_ncasecmp ( name , encodings [ i ] , sz ) )"		5059930	1					
ANR	5059998	Condition	"! r_str_ncasecmp ( name , encodings [ i ] , sz )"	23:6:562:601	5059930	0	True				
ANR	5059999	UnaryOperationExpression	"! r_str_ncasecmp ( name , encodings [ i ] , sz )"		5059930	0					
ANR	5060000	UnaryOperator	!		5059930	0					
ANR	5060001	CallExpression	"r_str_ncasecmp ( name , encodings [ i ] , sz )"		5059930	1					
ANR	5060002	Callee	r_str_ncasecmp		5059930	0					
ANR	5060003	Identifier	r_str_ncasecmp		5059930	0					
ANR	5060004	ArgumentList	name		5059930	1					
ANR	5060005	Argument	name		5059930	0					
ANR	5060006	Identifier	name		5059930	0					
ANR	5060007	Argument	encodings [ i ]		5059930	1					
ANR	5060008	ArrayIndexing	encodings [ i ]		5059930	0					
ANR	5060009	Identifier	encodings		5059930	0					
ANR	5060010	Identifier	i		5059930	1					
ANR	5060011	Argument	sz		5059930	2					
ANR	5060012	Identifier	sz		5059930	0					
ANR	5060013	CompoundStatement		9:48:224:224	5059930	1					
ANR	5060014	ReturnStatement	return i ;	24:3:609:617	5059930	0	True				
ANR	5060015	Identifier	i		5059930	0					
ANR	5060016	ReturnStatement	return ENCODING_ASCII ;	27:1:628:649	5059930	4	True				
ANR	5060017	Identifier	ENCODING_ASCII		5059930	0					
ANR	5060018	ReturnType	R_API int		5059930	1					
ANR	5060019	Identifier	r_search_get_encoding		5059930	2					
ANR	5060020	ParameterList	const char * name		5059930	3					
ANR	5060021	Parameter	const char * name	15:32:361:376	5059930	0	True				
ANR	5060022	ParameterType	const char *		5059930	0					
ANR	5060023	Identifier	name		5059930	1					
ANR	5060024	CFGEntryNode	ENTRY		5059930		True				
ANR	5060025	CFGExitNode	EXIT		5059930		True				
ANR	5060026	Symbol	* name		5059930						
ANR	5060027	Symbol	strlen		5059930						
ANR	5060028	Symbol	ENCODING_ASCII		5059930						
ANR	5060029	Symbol	* encodings		5059930						
ANR	5060030	Symbol	* i		5059930						
ANR	5060031	Symbol	encodings		5059930						
ANR	5060032	Symbol	sz		5059930						
ANR	5060033	Symbol	name		5059930						
ANR	5060034	Symbol	i		5059930						
ANR	5060035	Symbol	lename		5059930						
ANR	5060036	Symbol	R_MIN		5059930						
ANR	5060037	Symbol	r_str_ncasecmp		5059930						
ANR	5060038	Function	is_encoded	30:0:654:1253							
ANR	5060039	FunctionDef	"is_encoded (int encoding , unsigned char c)"		5060038	0					
ANR	5060040	CompoundStatement		30:54:708:1253	5060038	0					
ANR	5060041	SwitchStatement	switch ( encoding )		5060038	0					
ANR	5060042	Condition	encoding	31:9:719:726	5060038	0	True				
ANR	5060043	Identifier	encoding		5060038	0					
ANR	5060044	CompoundStatement		2:19:20:20	5060038	1					
ANR	5060045	Label	case ENCODING_ASCII :	32:1:732:751	5060038	0	True				
ANR	5060046	Identifier	ENCODING_ASCII		5060038	0					
ANR	5060047	BreakStatement	break ;	33:2:755:760	5060038	1	True				
ANR	5060048	Label	case ENCODING_CP850 :	34:1:763:782	5060038	2	True				
ANR	5060049	Identifier	ENCODING_CP850		5060038	0					
ANR	5060050	SwitchStatement	switch ( c )		5060038	3					
ANR	5060051	Condition	c	35:10:794:794	5060038	0	True				
ANR	5060052	Identifier	c		5060038	0					
ANR	5060053	CompoundStatement		6:13:88:88	5060038	1					
ANR	5060054	Label	case 128 :	37:2:812:820	5060038	0	True				
ANR	5060055	Label	case 133 :	38:2:835:843	5060038	1	True				
ANR	5060056	Label	case 135 :	39:2:858:866	5060038	2	True				
ANR	5060057	Label	case 160 :	40:2:885:893	5060038	3	True				
ANR	5060058	Label	case 161 :	41:2:908:916	5060038	4	True				
ANR	5060059	Label	case 129 :	42:2:931:939	5060038	5	True				
ANR	5060060	Label	case 130 :	43:2:956:964	5060038	6	True				
ANR	5060061	Label	case 139 :	44:2:979:987	5060038	7	True				
ANR	5060062	Label	case 162 :	45:2:1004:1012	5060038	8	True				
ANR	5060063	Label	case 163 :	46:2:1027:1035	5060038	9	True				
ANR	5060064	Label	case 164 :	47:2:1050:1058	5060038	10	True				
ANR	5060065	Label	case 165 :	48:2:1070:1078	5060038	11	True				
ANR	5060066	Label	case 181 :	49:2:1093:1101	5060038	12	True				
ANR	5060067	Label	case 144 :	50:2:1116:1124	5060038	13	True				
ANR	5060068	Label	case 214 :	51:2:1139:1147	5060038	14	True				
ANR	5060069	Label	case 224 :	52:2:1162:1170	5060038	15	True				
ANR	5060070	Label	case 233 :	53:2:1185:1193	5060038	16	True				
ANR	5060071	ReturnStatement	return true ;	54:3:1209:1220	5060038	17	True				
ANR	5060072	Identifier	true		5060038	0					
ANR	5060073	BreakStatement	break ;	56:2:1228:1233	5060038	4	True				
ANR	5060074	ReturnStatement	return false ;	58:1:1239:1251	5060038	1	True				
ANR	5060075	Identifier	false		5060038	0					
ANR	5060076	ReturnType	static bool		5060038	1					
ANR	5060077	Identifier	is_encoded		5060038	2					
ANR	5060078	ParameterList	"int encoding , unsigned char c"		5060038	3					
ANR	5060079	Parameter	int encoding	30:23:677:688	5060038	0	True				
ANR	5060080	ParameterType	int		5060038	0					
ANR	5060081	Identifier	encoding		5060038	1					
ANR	5060082	Parameter	unsigned char c	30:37:691:705	5060038	1	True				
ANR	5060083	ParameterType	unsigned char		5060038	0					
ANR	5060084	Identifier	c		5060038	1					
ANR	5060085	CFGEntryNode	ENTRY		5060038		True				
ANR	5060086	CFGExitNode	EXIT		5060038		True				
ANR	5060087	Symbol	c		5060038						
ANR	5060088	Symbol	true		5060038						
ANR	5060089	Symbol	false		5060038						
ANR	5060090	Symbol	encoding		5060038						
ANR	5060091	Function	r_search_strings_update	61:0:1256:2409							
ANR	5060092	FunctionDef	"r_search_strings_update (RSearch * s , ut64 from , const ut8 * buf , int len)"		5060091	0					
ANR	5060093	CompoundStatement		61:82:1338:2409	5060091	0					
ANR	5060094	IdentifierDeclStatement	int i = 0 ;	62:1:1341:1350	5060091	0	True				
ANR	5060095	IdentifierDecl	i = 0		5060091	0					
ANR	5060096	IdentifierDeclType	int		5060091	0					
ANR	5060097	Identifier	i		5060091	1					
ANR	5060098	AssignmentExpression	i = 0		5060091	2		=			
ANR	5060099	Identifier	i		5060091	0					
ANR	5060100	PrimaryExpression	0		5060091	1					
ANR	5060101	IdentifierDeclStatement	int widechar = 0 ;	63:1:1353:1369	5060091	1	True				
ANR	5060102	IdentifierDecl	widechar = 0		5060091	0					
ANR	5060103	IdentifierDeclType	int		5060091	0					
ANR	5060104	Identifier	widechar		5060091	1					
ANR	5060105	AssignmentExpression	widechar = 0		5060091	2		=			
ANR	5060106	Identifier	widechar		5060091	0					
ANR	5060107	PrimaryExpression	0		5060091	1					
ANR	5060108	IdentifierDeclStatement	int matches = 0 ;	64:1:1372:1387	5060091	2	True				
ANR	5060109	IdentifierDecl	matches = 0		5060091	0					
ANR	5060110	IdentifierDeclType	int		5060091	0					
ANR	5060111	Identifier	matches		5060091	1					
ANR	5060112	AssignmentExpression	matches = 0		5060091	2		=			
ANR	5060113	Identifier	matches		5060091	0					
ANR	5060114	PrimaryExpression	0		5060091	1					
ANR	5060115	IdentifierDeclStatement	char str [ 4096 ] ;	65:1:1390:1404	5060091	3	True				
ANR	5060116	IdentifierDecl	str [ 4096 ]		5060091	0					
ANR	5060117	IdentifierDeclType	char [ 4096 ]		5060091	0					
ANR	5060118	Identifier	str		5060091	1					
ANR	5060119	PrimaryExpression	4096		5060091	2					
ANR	5060120	IdentifierDeclStatement	RListIter * iter ;	66:1:1407:1422	5060091	4	True				
ANR	5060121	IdentifierDecl	* iter		5060091	0					
ANR	5060122	IdentifierDeclType	RListIter *		5060091	0					
ANR	5060123	Identifier	iter		5060091	1					
ANR	5060124	IdentifierDeclStatement	RSearchKeyword * kw ;	67:1:1425:1443	5060091	5	True				
ANR	5060125	IdentifierDecl	* kw		5060091	0					
ANR	5060126	IdentifierDeclType	RSearchKeyword *		5060091	0					
ANR	5060127	Identifier	kw		5060091	1					
ANR	5060128	Statement	r_list_foreach	69:1:1447:1460	5060091	6	True				
ANR	5060129	Statement	(	69:16:1462:1462	5060091	7	True				
ANR	5060130	Statement	s	69:17:1463:1463	5060091	8	True				
ANR	5060131	Statement	->	69:18:1464:1465	5060091	9	True				
ANR	5060132	Statement	kws	69:20:1466:1468	5060091	10	True				
ANR	5060133	Statement	","	69:23:1469:1469	5060091	11	True				
ANR	5060134	Statement	iter	69:25:1471:1474	5060091	12	True				
ANR	5060135	Statement	","	69:29:1475:1475	5060091	13	True				
ANR	5060136	Statement	kw	69:31:1477:1478	5060091	14	True				
ANR	5060137	Statement	)	69:33:1479:1479	5060091	15	True				
ANR	5060138	CompoundStatement		9:35:142:142	5060091	16					
ANR	5060139	ForStatement	for ( i = 0 ; i < len ; i ++ )		5060091	0					
ANR	5060140	ForInit	i = 0 ;	70:7:1490:1495	5060091	0	True				
ANR	5060141	AssignmentExpression	i = 0		5060091	0		=			
ANR	5060142	Identifier	i		5060091	0					
ANR	5060143	PrimaryExpression	0		5060091	1					
ANR	5060144	Condition	i < len	70:14:1497:1503	5060091	1	True				
ANR	5060145	RelationalExpression	i < len		5060091	0		<			
ANR	5060146	Identifier	i		5060091	0					
ANR	5060147	Identifier	len		5060091	1					
ANR	5060148	PostIncDecOperationExpression	i ++	70:23:1506:1508	5060091	2	True				
ANR	5060149	Identifier	i		5060091	0					
ANR	5060150	IncDec	++		5060091	1					
ANR	5060151	CompoundStatement		11:3:177:193	5060091	3					
ANR	5060152	IdentifierDeclStatement	char ch = buf [ i ] ;	71:3:1516:1532	5060091	0	True				
ANR	5060153	IdentifierDecl	ch = buf [ i ]		5060091	0					
ANR	5060154	IdentifierDeclType	char		5060091	0					
ANR	5060155	Identifier	ch		5060091	1					
ANR	5060156	AssignmentExpression	ch = buf [ i ]		5060091	2		=			
ANR	5060157	Identifier	ch		5060091	0					
ANR	5060158	ArrayIndexing	buf [ i ]		5060091	1					
ANR	5060159	Identifier	buf		5060091	0					
ANR	5060160	Identifier	i		5060091	1					
ANR	5060161	IfStatement	"if ( IS_PRINTABLE ( ch ) || IS_WHITESPACE ( ch ) || is_encoded ( 0 , ch ) )"		5060091	1					
ANR	5060162	Condition	"IS_PRINTABLE ( ch ) || IS_WHITESPACE ( ch ) || is_encoded ( 0 , ch )"	73:7:1565:1623	5060091	0	True				
ANR	5060163	OrExpression	"IS_PRINTABLE ( ch ) || IS_WHITESPACE ( ch ) || is_encoded ( 0 , ch )"		5060091	0		||			
ANR	5060164	CallExpression	IS_PRINTABLE ( ch )		5060091	0					
ANR	5060165	Callee	IS_PRINTABLE		5060091	0					
ANR	5060166	Identifier	IS_PRINTABLE		5060091	0					
ANR	5060167	ArgumentList	ch		5060091	1					
ANR	5060168	Argument	ch		5060091	0					
ANR	5060169	Identifier	ch		5060091	0					
ANR	5060170	OrExpression	"IS_WHITESPACE ( ch ) || is_encoded ( 0 , ch )"		5060091	1		||			
ANR	5060171	CallExpression	IS_WHITESPACE ( ch )		5060091	0					
ANR	5060172	Callee	IS_WHITESPACE		5060091	0					
ANR	5060173	Identifier	IS_WHITESPACE		5060091	0					
ANR	5060174	ArgumentList	ch		5060091	1					
ANR	5060175	Argument	ch		5060091	0					
ANR	5060176	Identifier	ch		5060091	0					
ANR	5060177	CallExpression	"is_encoded ( 0 , ch )"		5060091	1					
ANR	5060178	Callee	is_encoded		5060091	0					
ANR	5060179	Identifier	is_encoded		5060091	0					
ANR	5060180	ArgumentList	0		5060091	1					
ANR	5060181	Argument	0		5060091	0					
ANR	5060182	PrimaryExpression	0		5060091	0					
ANR	5060183	Argument	ch		5060091	1					
ANR	5060184	Identifier	ch		5060091	0					
ANR	5060185	CompoundStatement		13:68:287:287	5060091	1					
ANR	5060186	ExpressionStatement	str [ matches ] = ch	74:4:1632:1649	5060091	0	True				
ANR	5060187	AssignmentExpression	str [ matches ] = ch		5060091	0		=			
ANR	5060188	ArrayIndexing	str [ matches ]		5060091	0					
ANR	5060189	Identifier	str		5060091	0					
ANR	5060190	Identifier	matches		5060091	1					
ANR	5060191	Identifier	ch		5060091	1					
ANR	5060192	IfStatement	if ( matches < sizeof ( str ) )		5060091	1					
ANR	5060193	Condition	matches < sizeof ( str )	75:8:1659:1680	5060091	0	True				
ANR	5060194	RelationalExpression	matches < sizeof ( str )		5060091	0		<			
ANR	5060195	Identifier	matches		5060091	0					
ANR	5060196	SizeofExpression	sizeof ( str )		5060091	1					
ANR	5060197	Sizeof	sizeof		5060091	0					
ANR	5060198	SizeofOperand	str		5060091	1					
ANR	5060199	CompoundStatement		15:32:344:344	5060091	1					
ANR	5060200	ExpressionStatement	matches ++	76:5:1690:1699	5060091	0	True				
ANR	5060201	PostIncDecOperationExpression	matches ++		5060091	0					
ANR	5060202	Identifier	matches		5060091	0					
ANR	5060203	IncDec	++		5060091	1					
ANR	5060204	ElseStatement	else		5060091	0					
ANR	5060205	CompoundStatement		18:10:378:378	5060091	0					
ANR	5060206	IfStatement	if ( matches && i + 2 < len && buf [ i + 2 ] == '\\0' && buf [ i ] == '\\0' && buf [ i + 1 ] != '\\0' )		5060091	0					
ANR	5060207	Condition	matches && i + 2 < len && buf [ i + 2 ] == '\\0' && buf [ i ] == '\\0' && buf [ i + 1 ] != '\\0'	80:8:1770:1843	5060091	0	True				
ANR	5060208	AndExpression	matches && i + 2 < len && buf [ i + 2 ] == '\\0' && buf [ i ] == '\\0' && buf [ i + 1 ] != '\\0'		5060091	0		&&			
ANR	5060209	Identifier	matches		5060091	0					
ANR	5060210	AndExpression	i + 2 < len && buf [ i + 2 ] == '\\0' && buf [ i ] == '\\0' && buf [ i + 1 ] != '\\0'		5060091	1		&&			
ANR	5060211	RelationalExpression	i + 2 < len		5060091	0		<			
ANR	5060212	AdditiveExpression	i + 2		5060091	0		+			
ANR	5060213	Identifier	i		5060091	0					
ANR	5060214	PrimaryExpression	2		5060091	1					
ANR	5060215	Identifier	len		5060091	1					
ANR	5060216	AndExpression	buf [ i + 2 ] == '\\0' && buf [ i ] == '\\0' && buf [ i + 1 ] != '\\0'		5060091	1		&&			
ANR	5060217	EqualityExpression	buf [ i + 2 ] == '\\0'		5060091	0		==			
ANR	5060218	ArrayIndexing	buf [ i + 2 ]		5060091	0					
ANR	5060219	Identifier	buf		5060091	0					
ANR	5060220	AdditiveExpression	i + 2		5060091	1		+			
ANR	5060221	Identifier	i		5060091	0					
ANR	5060222	PrimaryExpression	2		5060091	1					
ANR	5060223	PrimaryExpression	'\\0'		5060091	1					
ANR	5060224	AndExpression	buf [ i ] == '\\0' && buf [ i + 1 ] != '\\0'		5060091	1		&&			
ANR	5060225	EqualityExpression	buf [ i ] == '\\0'		5060091	0		==			
ANR	5060226	ArrayIndexing	buf [ i ]		5060091	0					
ANR	5060227	Identifier	buf		5060091	0					
ANR	5060228	Identifier	i		5060091	1					
ANR	5060229	PrimaryExpression	'\\0'		5060091	1					
ANR	5060230	EqualityExpression	buf [ i + 1 ] != '\\0'		5060091	1		!=			
ANR	5060231	ArrayIndexing	buf [ i + 1 ]		5060091	0					
ANR	5060232	Identifier	buf		5060091	0					
ANR	5060233	AdditiveExpression	i + 1		5060091	1		+			
ANR	5060234	Identifier	i		5060091	0					
ANR	5060235	PrimaryExpression	1		5060091	1					
ANR	5060236	PrimaryExpression	'\\0'		5060091	1					
ANR	5060237	CompoundStatement		20:84:507:507	5060091	1					
ANR	5060238	ReturnStatement	return 1 ;	82:5:1875:1883	5060091	0	True				
ANR	5060239	PrimaryExpression	1		5060091	0					
ANR	5060240	IfStatement	if ( matches >= s -> string_min && ( s -> string_max == 0 || matches <= s -> string_max ) )		5060091	1					
ANR	5060241	Condition	matches >= s -> string_min && ( s -> string_max == 0 || matches <= s -> string_max )	85:8:1961:2036	5060091	0	True				
ANR	5060242	AndExpression	matches >= s -> string_min && ( s -> string_max == 0 || matches <= s -> string_max )		5060091	0		&&			
ANR	5060243	RelationalExpression	matches >= s -> string_min		5060091	0		>=			
ANR	5060244	Identifier	matches		5060091	0					
ANR	5060245	PtrMemberAccess	s -> string_min		5060091	1					
ANR	5060246	Identifier	s		5060091	0					
ANR	5060247	Identifier	string_min		5060091	1					
ANR	5060248	OrExpression	s -> string_max == 0 || matches <= s -> string_max		5060091	1		||			
ANR	5060249	EqualityExpression	s -> string_max == 0		5060091	0		==			
ANR	5060250	PtrMemberAccess	s -> string_max		5060091	0					
ANR	5060251	Identifier	s		5060091	0					
ANR	5060252	Identifier	string_max		5060091	1					
ANR	5060253	PrimaryExpression	0		5060091	1					
ANR	5060254	RelationalExpression	matches <= s -> string_max		5060091	1		<=			
ANR	5060255	Identifier	matches		5060091	0					
ANR	5060256	PtrMemberAccess	s -> string_max		5060091	1					
ANR	5060257	Identifier	s		5060091	0					
ANR	5060258	Identifier	string_max		5060091	1					
ANR	5060259	CompoundStatement		27:5:733:754	5060091	1					
ANR	5060260	ExpressionStatement	str [ matches ] = '\\0'	86:5:2046:2065	5060091	0	True				
ANR	5060261	AssignmentExpression	str [ matches ] = '\\0'		5060091	0		=			
ANR	5060262	ArrayIndexing	str [ matches ]		5060091	0					
ANR	5060263	Identifier	str		5060091	0					
ANR	5060264	Identifier	matches		5060091	1					
ANR	5060265	PrimaryExpression	'\\0'		5060091	1					
ANR	5060266	IdentifierDeclStatement	int len = strlen ( str ) ;	87:5:2072:2093	5060091	1	True				
ANR	5060267	IdentifierDecl	len = strlen ( str )		5060091	0					
ANR	5060268	IdentifierDeclType	int		5060091	0					
ANR	5060269	Identifier	len		5060091	1					
ANR	5060270	AssignmentExpression	len = strlen ( str )		5060091	2		=			
ANR	5060271	Identifier	len		5060091	0					
ANR	5060272	CallExpression	strlen ( str )		5060091	1					
ANR	5060273	Callee	strlen		5060091	0					
ANR	5060274	Identifier	strlen		5060091	0					
ANR	5060275	ArgumentList	str		5060091	1					
ANR	5060276	Argument	str		5060091	0					
ANR	5060277	Identifier	str		5060091	0					
ANR	5060278	IfStatement	if ( len > 2 )		5060091	2					
ANR	5060279	Condition	len > 2	88:9:2104:2108	5060091	0	True				
ANR	5060280	RelationalExpression	len > 2		5060091	0		>			
ANR	5060281	Identifier	len		5060091	0					
ANR	5060282	PrimaryExpression	2		5060091	1					
ANR	5060283	CompoundStatement		28:16:772:772	5060091	1					
ANR	5060284	IfStatement	if ( widechar )		5060091	0					
ANR	5060285	Condition	widechar	89:10:2123:2130	5060091	0	True				
ANR	5060286	Identifier	widechar		5060091	0					
ANR	5060287	CompoundStatement		30:7:803:836	5060091	1					
ANR	5060288	IdentifierDeclStatement	ut64 off = ( ut64 ) from + i - ( len * 2 ) + 1 ;	90:7:2142:2175	5060091	0	True				
ANR	5060289	IdentifierDecl	off = ( ut64 ) from + i - ( len * 2 ) + 1		5060091	0					
ANR	5060290	IdentifierDeclType	ut64		5060091	0					
ANR	5060291	Identifier	off		5060091	1					
ANR	5060292	AssignmentExpression	off = ( ut64 ) from + i - ( len * 2 ) + 1		5060091	2		=			
ANR	5060293	Identifier	off		5060091	0					
ANR	5060294	AdditiveExpression	( ut64 ) from + i - ( len * 2 ) + 1		5060091	1		+			
ANR	5060295	CastExpression	( ut64 ) from		5060091	0					
ANR	5060296	CastTarget	ut64		5060091	0					
ANR	5060297	Identifier	from		5060091	1					
ANR	5060298	AdditiveExpression	i - ( len * 2 ) + 1		5060091	1		-			
ANR	5060299	Identifier	i		5060091	0					
ANR	5060300	AdditiveExpression	( len * 2 ) + 1		5060091	1		+			
ANR	5060301	MultiplicativeExpression	len * 2		5060091	0		*			
ANR	5060302	Identifier	len		5060091	0					
ANR	5060303	PrimaryExpression	2		5060091	1					
ANR	5060304	PrimaryExpression	1		5060091	1					
ANR	5060305	ExpressionStatement	"r_search_hit_new ( s , kw , off )"	91:7:2184:2213	5060091	1	True				
ANR	5060306	CallExpression	"r_search_hit_new ( s , kw , off )"		5060091	0					
ANR	5060307	Callee	r_search_hit_new		5060091	0					
ANR	5060308	Identifier	r_search_hit_new		5060091	0					
ANR	5060309	ArgumentList	s		5060091	1					
ANR	5060310	Argument	s		5060091	0					
ANR	5060311	Identifier	s		5060091	0					
ANR	5060312	Argument	kw		5060091	1					
ANR	5060313	Identifier	kw		5060091	0					
ANR	5060314	Argument	off		5060091	2					
ANR	5060315	Identifier	off		5060091	0					
ANR	5060316	ElseStatement	else		5060091	0					
ANR	5060317	CompoundStatement		33:7:898:929	5060091	0					
ANR	5060318	IdentifierDeclStatement	ut64 off = ( ut64 ) from + i - matches ;	93:7:2237:2268	5060091	0	True				
ANR	5060319	IdentifierDecl	off = ( ut64 ) from + i - matches		5060091	0					
ANR	5060320	IdentifierDeclType	ut64		5060091	0					
ANR	5060321	Identifier	off		5060091	1					
ANR	5060322	AssignmentExpression	off = ( ut64 ) from + i - matches		5060091	2		=			
ANR	5060323	Identifier	off		5060091	0					
ANR	5060324	AdditiveExpression	( ut64 ) from + i - matches		5060091	1		+			
ANR	5060325	CastExpression	( ut64 ) from		5060091	0					
ANR	5060326	CastTarget	ut64		5060091	0					
ANR	5060327	Identifier	from		5060091	1					
ANR	5060328	AdditiveExpression	i - matches		5060091	1		-			
ANR	5060329	Identifier	i		5060091	0					
ANR	5060330	Identifier	matches		5060091	1					
ANR	5060331	ExpressionStatement	"r_search_hit_new ( s , kw , off )"	94:7:2277:2306	5060091	1	True				
ANR	5060332	CallExpression	"r_search_hit_new ( s , kw , off )"		5060091	0					
ANR	5060333	Callee	r_search_hit_new		5060091	0					
ANR	5060334	Identifier	r_search_hit_new		5060091	0					
ANR	5060335	ArgumentList	s		5060091	1					
ANR	5060336	Argument	s		5060091	0					
ANR	5060337	Identifier	s		5060091	0					
ANR	5060338	Argument	kw		5060091	1					
ANR	5060339	Identifier	kw		5060091	0					
ANR	5060340	Argument	off		5060091	2					
ANR	5060341	Identifier	off		5060091	0					
ANR	5060342	ExpressionStatement	fflush ( stdout )	97:5:2328:2343	5060091	3	True				
ANR	5060343	CallExpression	fflush ( stdout )		5060091	0					
ANR	5060344	Callee	fflush		5060091	0					
ANR	5060345	Identifier	fflush		5060091	0					
ANR	5060346	ArgumentList	stdout		5060091	1					
ANR	5060347	Argument	stdout		5060091	0					
ANR	5060348	Identifier	stdout		5060091	0					
ANR	5060349	ExpressionStatement	matches = 0	99:4:2355:2366	5060091	2	True				
ANR	5060350	AssignmentExpression	matches = 0		5060091	0		=			
ANR	5060351	Identifier	matches		5060091	0					
ANR	5060352	PrimaryExpression	0		5060091	1					
ANR	5060353	ExpressionStatement	widechar = 0	100:4:2372:2384	5060091	3	True				
ANR	5060354	AssignmentExpression	widechar = 0		5060091	0		=			
ANR	5060355	Identifier	widechar		5060091	0					
ANR	5060356	PrimaryExpression	0		5060091	1					
ANR	5060357	ReturnStatement	return 0 ;	104:1:2399:2407	5060091	17	True				
ANR	5060358	PrimaryExpression	0		5060091	0					
ANR	5060359	ReturnType	R_API int		5060091	1					
ANR	5060360	Identifier	r_search_strings_update		5060091	2					
ANR	5060361	ParameterList	"RSearch * s , ut64 from , const ut8 * buf , int len"		5060091	3					
ANR	5060362	Parameter	RSearch * s	61:34:1290:1299	5060091	0	True				
ANR	5060363	ParameterType	RSearch *		5060091	0					
ANR	5060364	Identifier	s		5060091	1					
ANR	5060365	Parameter	ut64 from	61:46:1302:1310	5060091	1	True				
ANR	5060366	ParameterType	ut64		5060091	0					
ANR	5060367	Identifier	from		5060091	1					
ANR	5060368	Parameter	const ut8 * buf	61:57:1313:1326	5060091	2	True				
ANR	5060369	ParameterType	const ut8 *		5060091	0					
ANR	5060370	Identifier	buf		5060091	1					
ANR	5060371	Parameter	int len	61:73:1329:1335	5060091	3	True				
ANR	5060372	ParameterType	int		5060091	0					
ANR	5060373	Identifier	len		5060091	1					
ANR	5060374	CFGEntryNode	ENTRY		5060091		True				
ANR	5060375	CFGExitNode	EXIT		5060091		True				
ANR	5060376	Symbol	* buf		5060091						
ANR	5060377	Symbol	IS_PRINTABLE		5060091						
ANR	5060378	Symbol	* matches		5060091						
ANR	5060379	Symbol	stdout		5060091						
ANR	5060380	Symbol	ch		5060091						
ANR	5060381	Symbol	is_encoded		5060091						
ANR	5060382	Symbol	s -> string_max		5060091						
ANR	5060383	Symbol	i		5060091						
ANR	5060384	Symbol	iter		5060091						
ANR	5060385	Symbol	kw		5060091						
ANR	5060386	Symbol	matches		5060091						
ANR	5060387	Symbol	IS_WHITESPACE		5060091						
ANR	5060388	Symbol	off		5060091						
ANR	5060389	Symbol	str		5060091						
ANR	5060390	Symbol	strlen		5060091						
ANR	5060391	Symbol	buf		5060091						
ANR	5060392	Symbol	s		5060091						
ANR	5060393	Symbol	* i		5060091						
ANR	5060394	Symbol	len		5060091						
ANR	5060395	Symbol	widechar		5060091						
ANR	5060396	Symbol	s -> string_min		5060091						
ANR	5060397	Symbol	from		5060091						
ANR	5060398	Symbol	* str		5060091						
ANR	5060399	Symbol	* s		5060091						
