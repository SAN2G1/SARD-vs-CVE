command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4855800	File	data/converged/CVE-2019-16718~_radare2/libr_io_cache.c								
ANR	4855801	Function	_fcn_tree_calc_max_addr	10:0:210:301							
ANR	4855802	FunctionDef	_fcn_tree_calc_max_addr (RBNode * node)		4855801	0					
ANR	4855803	CompoundStatement		10:50:260:301	4855801	0					
ANR	4855804	IdentifierDeclStatement	RIOCache * c = CACHE_CONTAINER ( node ) ;	11:1:263:299	4855801	0	True				
ANR	4855805	IdentifierDecl	* c = CACHE_CONTAINER ( node )		4855801	0					
ANR	4855806	IdentifierDeclType	RIOCache *		4855801	0					
ANR	4855807	Identifier	c		4855801	1					
ANR	4855808	AssignmentExpression	* c = CACHE_CONTAINER ( node )		4855801	2		=			
ANR	4855809	Identifier	c		4855801	0					
ANR	4855810	CallExpression	CACHE_CONTAINER ( node )		4855801	1					
ANR	4855811	Callee	CACHE_CONTAINER		4855801	0					
ANR	4855812	Identifier	CACHE_CONTAINER		4855801	0					
ANR	4855813	ArgumentList	node		4855801	1					
ANR	4855814	Argument	node		4855801	0					
ANR	4855815	Identifier	node		4855801	0					
ANR	4855816	ReturnType	static void		4855801	1					
ANR	4855817	Identifier	_fcn_tree_calc_max_addr		4855801	2					
ANR	4855818	ParameterList	RBNode * node		4855801	3					
ANR	4855819	Parameter	RBNode * node	10:36:246:257	4855801	0	True				
ANR	4855820	ParameterType	RBNode *		4855801	0					
ANR	4855821	Identifier	node		4855801	1					
ANR	4855822	CFGEntryNode	ENTRY		4855801		True				
ANR	4855823	CFGExitNode	EXIT		4855801		True				
ANR	4855824	Symbol	node		4855801						
ANR	4855825	Symbol	c		4855801						
ANR	4855826	Symbol	CACHE_CONTAINER		4855801						
ANR	4855827	Function	cache_item_free	15:0:316:449							
ANR	4855828	FunctionDef	cache_item_free (RIOCache * cache)		4855827	0					
ANR	4855829	CompoundStatement		15:45:361:449	4855827	0					
ANR	4855830	IfStatement	if ( ! cache )		4855827	0					
ANR	4855831	Condition	! cache	16:5:368:373	4855827	0	True				
ANR	4855832	UnaryOperationExpression	! cache		4855827	0					
ANR	4855833	UnaryOperator	!		4855827	0					
ANR	4855834	Identifier	cache		4855827	1					
ANR	4855835	CompoundStatement		2:13:14:14	4855827	1					
ANR	4855836	ReturnStatement	return ;	17:2:380:386	4855827	0	True				
ANR	4855837	ExpressionStatement	free ( cache -> data )	19:1:392:410	4855827	1	True				
ANR	4855838	CallExpression	free ( cache -> data )		4855827	0					
ANR	4855839	Callee	free		4855827	0					
ANR	4855840	Identifier	free		4855827	0					
ANR	4855841	ArgumentList	cache -> data		4855827	1					
ANR	4855842	Argument	cache -> data		4855827	0					
ANR	4855843	PtrMemberAccess	cache -> data		4855827	0					
ANR	4855844	Identifier	cache		4855827	0					
ANR	4855845	Identifier	data		4855827	1					
ANR	4855846	ExpressionStatement	free ( cache -> odata )	20:1:413:432	4855827	2	True				
ANR	4855847	CallExpression	free ( cache -> odata )		4855827	0					
ANR	4855848	Callee	free		4855827	0					
ANR	4855849	Identifier	free		4855827	0					
ANR	4855850	ArgumentList	cache -> odata		4855827	1					
ANR	4855851	Argument	cache -> odata		4855827	0					
ANR	4855852	PtrMemberAccess	cache -> odata		4855827	0					
ANR	4855853	Identifier	cache		4855827	0					
ANR	4855854	Identifier	odata		4855827	1					
ANR	4855855	ExpressionStatement	free ( cache )	21:1:435:447	4855827	3	True				
ANR	4855856	CallExpression	free ( cache )		4855827	0					
ANR	4855857	Callee	free		4855827	0					
ANR	4855858	Identifier	free		4855827	0					
ANR	4855859	ArgumentList	cache		4855827	1					
ANR	4855860	Argument	cache		4855827	0					
ANR	4855861	Identifier	cache		4855827	0					
ANR	4855862	ReturnType	static void		4855827	1					
ANR	4855863	Identifier	cache_item_free		4855827	2					
ANR	4855864	ParameterList	RIOCache * cache		4855827	3					
ANR	4855865	Parameter	RIOCache * cache	15:28:344:358	4855827	0	True				
ANR	4855866	ParameterType	RIOCache *		4855827	0					
ANR	4855867	Identifier	cache		4855827	1					
ANR	4855868	CFGEntryNode	ENTRY		4855827		True				
ANR	4855869	CFGExitNode	EXIT		4855827		True				
ANR	4855870	Symbol	cache		4855827						
ANR	4855871	Symbol	cache -> odata		4855827						
ANR	4855872	Symbol	cache -> data		4855827						
ANR	4855873	Symbol	* cache		4855827						
ANR	4855874	Function	r_io_cache_at	24:0:452:646							
ANR	4855875	FunctionDef	"r_io_cache_at (RIO * io , ut64 addr)"		4855874	0					
ANR	4855876	CompoundStatement		24:45:497:646	4855874	0					
ANR	4855877	IdentifierDeclStatement	RIOCache * c ;	25:1:500:511	4855874	0	True				
ANR	4855878	IdentifierDecl	* c		4855874	0					
ANR	4855879	IdentifierDeclType	RIOCache *		4855874	0					
ANR	4855880	Identifier	c		4855874	1					
ANR	4855881	IdentifierDeclStatement	RListIter * iter ;	26:1:514:529	4855874	1	True				
ANR	4855882	IdentifierDecl	* iter		4855874	0					
ANR	4855883	IdentifierDeclType	RListIter *		4855874	0					
ANR	4855884	Identifier	iter		4855874	1					
ANR	4855885	Statement	r_list_foreach	27:1:532:545	4855874	2	True				
ANR	4855886	Statement	(	27:16:547:547	4855874	3	True				
ANR	4855887	Statement	io	27:17:548:549	4855874	4	True				
ANR	4855888	Statement	->	27:19:550:551	4855874	5	True				
ANR	4855889	Statement	cache	27:21:552:556	4855874	6	True				
ANR	4855890	Statement	","	27:26:557:557	4855874	7	True				
ANR	4855891	Statement	iter	27:28:559:562	4855874	8	True				
ANR	4855892	Statement	","	27:32:563:563	4855874	9	True				
ANR	4855893	Statement	c	27:34:565:565	4855874	10	True				
ANR	4855894	Statement	)	27:35:566:566	4855874	11	True				
ANR	4855895	CompoundStatement		4:37:70:70	4855874	12					
ANR	4855896	IfStatement	"if ( r_itv_contain ( c -> itv , addr ) )"		4855874	0					
ANR	4855897	Condition	"r_itv_contain ( c -> itv , addr )"	28:6:576:603	4855874	0	True				
ANR	4855898	CallExpression	"r_itv_contain ( c -> itv , addr )"		4855874	0					
ANR	4855899	Callee	r_itv_contain		4855874	0					
ANR	4855900	Identifier	r_itv_contain		4855874	0					
ANR	4855901	ArgumentList	c -> itv		4855874	1					
ANR	4855902	Argument	c -> itv		4855874	0					
ANR	4855903	PtrMemberAccess	c -> itv		4855874	0					
ANR	4855904	Identifier	c		4855874	0					
ANR	4855905	Identifier	itv		4855874	1					
ANR	4855906	Argument	addr		4855874	1					
ANR	4855907	Identifier	addr		4855874	0					
ANR	4855908	CompoundStatement		5:36:108:108	4855874	1					
ANR	4855909	ReturnStatement	return true ;	29:3:611:622	4855874	0	True				
ANR	4855910	Identifier	true		4855874	0					
ANR	4855911	ReturnStatement	return false ;	32:1:632:644	4855874	13	True				
ANR	4855912	Identifier	false		4855874	0					
ANR	4855913	ReturnType	R_API bool		4855874	1					
ANR	4855914	Identifier	r_io_cache_at		4855874	2					
ANR	4855915	ParameterList	"RIO * io , ut64 addr"		4855874	3					
ANR	4855916	Parameter	RIO * io	24:25:477:483	4855874	0	True				
ANR	4855917	ParameterType	RIO *		4855874	0					
ANR	4855918	Identifier	io		4855874	1					
ANR	4855919	Parameter	ut64 addr	24:34:486:494	4855874	1	True				
ANR	4855920	ParameterType	ut64		4855874	0					
ANR	4855921	Identifier	addr		4855874	1					
ANR	4855922	CFGEntryNode	ENTRY		4855874		True				
ANR	4855923	CFGExitNode	EXIT		4855874		True				
ANR	4855924	Symbol	c		4855874						
ANR	4855925	Symbol	io		4855874						
ANR	4855926	Symbol	c -> itv		4855874						
ANR	4855927	Symbol	r_itv_contain		4855874						
ANR	4855928	Symbol	true		4855874						
ANR	4855929	Symbol	false		4855874						
ANR	4855930	Symbol	iter		4855874						
ANR	4855931	Symbol	addr		4855874						
ANR	4855932	Symbol	* c		4855874						
ANR	4855933	Function	r_io_cache_init	35:0:649:789							
ANR	4855934	FunctionDef	r_io_cache_init (RIO * io)		4855933	0					
ANR	4855935	CompoundStatement		35:36:685:789	4855933	0					
ANR	4855936	ExpressionStatement	io -> cache = r_list_newf ( ( RListFree ) cache_item_free )	36:1:688:740	4855933	0	True				
ANR	4855937	AssignmentExpression	io -> cache = r_list_newf ( ( RListFree ) cache_item_free )		4855933	0		=			
ANR	4855938	PtrMemberAccess	io -> cache		4855933	0					
ANR	4855939	Identifier	io		4855933	0					
ANR	4855940	Identifier	cache		4855933	1					
ANR	4855941	CallExpression	r_list_newf ( ( RListFree ) cache_item_free )		4855933	1					
ANR	4855942	Callee	r_list_newf		4855933	0					
ANR	4855943	Identifier	r_list_newf		4855933	0					
ANR	4855944	ArgumentList	( RListFree ) cache_item_free		4855933	1					
ANR	4855945	Argument	( RListFree ) cache_item_free		4855933	0					
ANR	4855946	CastExpression	( RListFree ) cache_item_free		4855933	0					
ANR	4855947	CastTarget	RListFree		4855933	0					
ANR	4855948	Identifier	cache_item_free		4855933	1					
ANR	4855949	ExpressionStatement	io -> buffer = r_cache_new ( )	37:1:743:770	4855933	1	True				
ANR	4855950	AssignmentExpression	io -> buffer = r_cache_new ( )		4855933	0		=			
ANR	4855951	PtrMemberAccess	io -> buffer		4855933	0					
ANR	4855952	Identifier	io		4855933	0					
ANR	4855953	Identifier	buffer		4855933	1					
ANR	4855954	CallExpression	r_cache_new ( )		4855933	1					
ANR	4855955	Callee	r_cache_new		4855933	0					
ANR	4855956	Identifier	r_cache_new		4855933	0					
ANR	4855957	ArgumentList			4855933	1					
ANR	4855958	ExpressionStatement	io -> cached = 0	38:1:773:787	4855933	2	True				
ANR	4855959	AssignmentExpression	io -> cached = 0		4855933	0		=			
ANR	4855960	PtrMemberAccess	io -> cached		4855933	0					
ANR	4855961	Identifier	io		4855933	0					
ANR	4855962	Identifier	cached		4855933	1					
ANR	4855963	PrimaryExpression	0		4855933	1					
ANR	4855964	ReturnType	R_API void		4855933	1					
ANR	4855965	Identifier	r_io_cache_init		4855933	2					
ANR	4855966	ParameterList	RIO * io		4855933	3					
ANR	4855967	Parameter	RIO * io	35:27:676:682	4855933	0	True				
ANR	4855968	ParameterType	RIO *		4855933	0					
ANR	4855969	Identifier	io		4855933	1					
ANR	4855970	CFGEntryNode	ENTRY		4855933		True				
ANR	4855971	CFGExitNode	EXIT		4855933		True				
ANR	4855972	Symbol	io -> buffer		4855933						
ANR	4855973	Symbol	cache_item_free		4855933						
ANR	4855974	Symbol	r_list_newf		4855933						
ANR	4855975	Symbol	io		4855933						
ANR	4855976	Symbol	io -> cached		4855933						
ANR	4855977	Symbol	r_cache_new		4855933						
ANR	4855978	Symbol	io -> cache		4855933						
ANR	4855979	Symbol	* io		4855933						
ANR	4855980	Function	r_io_cache_fini	41:0:792:941							
ANR	4855981	FunctionDef	r_io_cache_fini (RIO * io)		4855980	0					
ANR	4855982	CompoundStatement		41:37:829:941	4855980	0					
ANR	4855983	ExpressionStatement	r_list_free ( io -> cache )	42:1:832:855	4855980	0	True				
ANR	4855984	CallExpression	r_list_free ( io -> cache )		4855980	0					
ANR	4855985	Callee	r_list_free		4855980	0					
ANR	4855986	Identifier	r_list_free		4855980	0					
ANR	4855987	ArgumentList	io -> cache		4855980	1					
ANR	4855988	Argument	io -> cache		4855980	0					
ANR	4855989	PtrMemberAccess	io -> cache		4855980	0					
ANR	4855990	Identifier	io		4855980	0					
ANR	4855991	Identifier	cache		4855980	1					
ANR	4855992	ExpressionStatement	r_cache_free ( io -> buffer )	43:1:858:883	4855980	1	True				
ANR	4855993	CallExpression	r_cache_free ( io -> buffer )		4855980	0					
ANR	4855994	Callee	r_cache_free		4855980	0					
ANR	4855995	Identifier	r_cache_free		4855980	0					
ANR	4855996	ArgumentList	io -> buffer		4855980	1					
ANR	4855997	Argument	io -> buffer		4855980	0					
ANR	4855998	PtrMemberAccess	io -> buffer		4855980	0					
ANR	4855999	Identifier	io		4855980	0					
ANR	4856000	Identifier	buffer		4855980	1					
ANR	4856001	ExpressionStatement	io -> cache = NULL	44:1:886:902	4855980	2	True				
ANR	4856002	AssignmentExpression	io -> cache = NULL		4855980	0		=			
ANR	4856003	PtrMemberAccess	io -> cache		4855980	0					
ANR	4856004	Identifier	io		4855980	0					
ANR	4856005	Identifier	cache		4855980	1					
ANR	4856006	Identifier	NULL		4855980	1					
ANR	4856007	ExpressionStatement	io -> buffer = NULL	45:1:905:922	4855980	3	True				
ANR	4856008	AssignmentExpression	io -> buffer = NULL		4855980	0		=			
ANR	4856009	PtrMemberAccess	io -> buffer		4855980	0					
ANR	4856010	Identifier	io		4855980	0					
ANR	4856011	Identifier	buffer		4855980	1					
ANR	4856012	Identifier	NULL		4855980	1					
ANR	4856013	ExpressionStatement	io -> cached = 0	46:1:925:939	4855980	4	True				
ANR	4856014	AssignmentExpression	io -> cached = 0		4855980	0		=			
ANR	4856015	PtrMemberAccess	io -> cached		4855980	0					
ANR	4856016	Identifier	io		4855980	0					
ANR	4856017	Identifier	cached		4855980	1					
ANR	4856018	PrimaryExpression	0		4855980	1					
ANR	4856019	ReturnType	R_API void		4855980	1					
ANR	4856020	Identifier	r_io_cache_fini		4855980	2					
ANR	4856021	ParameterList	RIO * io		4855980	3					
ANR	4856022	Parameter	RIO * io	41:28:820:826	4855980	0	True				
ANR	4856023	ParameterType	RIO *		4855980	0					
ANR	4856024	Identifier	io		4855980	1					
ANR	4856025	CFGEntryNode	ENTRY		4855980		True				
ANR	4856026	CFGExitNode	EXIT		4855980		True				
ANR	4856027	Symbol	io -> buffer		4855980						
ANR	4856028	Symbol	NULL		4855980						
ANR	4856029	Symbol	io		4855980						
ANR	4856030	Symbol	io -> cached		4855980						
ANR	4856031	Symbol	io -> cache		4855980						
ANR	4856032	Symbol	* io		4855980						
ANR	4856033	Function	r_io_cache_commit	49:0:944:1540							
ANR	4856034	FunctionDef	"r_io_cache_commit (RIO * io , ut64 from , ut64 to)"		4856033	0					
ANR	4856035	CompoundStatement		49:58:1002:1540	4856033	0					
ANR	4856036	IdentifierDeclStatement	RListIter * iter ;	50:1:1005:1020	4856033	0	True				
ANR	4856037	IdentifierDecl	* iter		4856033	0					
ANR	4856038	IdentifierDeclType	RListIter *		4856033	0					
ANR	4856039	Identifier	iter		4856033	1					
ANR	4856040	IdentifierDeclStatement	RIOCache * c ;	51:1:1023:1034	4856033	1	True				
ANR	4856041	IdentifierDecl	* c		4856033	0					
ANR	4856042	IdentifierDeclType	RIOCache *		4856033	0					
ANR	4856043	Identifier	c		4856033	1					
ANR	4856044	Statement	RInterval	52:1:1037:1045	4856033	2	True				
ANR	4856045	Statement	range	52:11:1047:1051	4856033	3	True				
ANR	4856046	Statement	=	52:17:1053:1053	4856033	4	True				
ANR	4856047	Statement	(	52:19:1055:1055	4856033	5	True				
ANR	4856048	Statement	RInterval	52:20:1056:1064	4856033	6	True				
ANR	4856049	Statement	)	52:29:1065:1065	4856033	7	True				
ANR	4856050	CompoundStatement		4:30:63:63	4856033	8					
ANR	4856051	Statement	from	52:31:1067:1070	4856033	0	True				
ANR	4856052	Statement	","	52:35:1071:1071	4856033	1	True				
ANR	4856053	Statement	to	52:37:1073:1074	4856033	2	True				
ANR	4856054	Statement	-	52:40:1076:1076	4856033	3	True				
ANR	4856055	Statement	from	52:42:1078:1081	4856033	4	True				
ANR	4856056	ExpressionStatement		52:47:1083:1083	4856033	9	True				
ANR	4856057	Statement	r_list_foreach	53:1:1086:1099	4856033	10	True				
ANR	4856058	Statement	(	53:16:1101:1101	4856033	11	True				
ANR	4856059	Statement	io	53:17:1102:1103	4856033	12	True				
ANR	4856060	Statement	->	53:19:1104:1105	4856033	13	True				
ANR	4856061	Statement	cache	53:21:1106:1110	4856033	14	True				
ANR	4856062	Statement	","	53:26:1111:1111	4856033	15	True				
ANR	4856063	Statement	iter	53:28:1113:1116	4856033	16	True				
ANR	4856064	Statement	","	53:32:1117:1117	4856033	17	True				
ANR	4856065	Statement	c	53:34:1119:1119	4856033	18	True				
ANR	4856066	Statement	)	53:35:1120:1120	4856033	19	True				
ANR	4856067	CompoundStatement		5:37:119:119	4856033	20					
ANR	4856068	IfStatement	"if ( r_itv_overlap ( c -> itv , range ) )"		4856033	0					
ANR	4856069	Condition	"r_itv_overlap ( c -> itv , range )"	55:6:1181:1209	4856033	0	True				
ANR	4856070	CallExpression	"r_itv_overlap ( c -> itv , range )"		4856033	0					
ANR	4856071	Callee	r_itv_overlap		4856033	0					
ANR	4856072	Identifier	r_itv_overlap		4856033	0					
ANR	4856073	ArgumentList	c -> itv		4856033	1					
ANR	4856074	Argument	c -> itv		4856033	0					
ANR	4856075	PtrMemberAccess	c -> itv		4856033	0					
ANR	4856076	Identifier	c		4856033	0					
ANR	4856077	Identifier	itv		4856033	1					
ANR	4856078	Argument	range		4856033	1					
ANR	4856079	Identifier	range		4856033	0					
ANR	4856080	CompoundStatement		8:3:214:237	4856033	1					
ANR	4856081	IdentifierDeclStatement	int cached = io -> cached ;	56:3:1217:1240	4856033	0	True				
ANR	4856082	IdentifierDecl	cached = io -> cached		4856033	0					
ANR	4856083	IdentifierDeclType	int		4856033	0					
ANR	4856084	Identifier	cached		4856033	1					
ANR	4856085	AssignmentExpression	cached = io -> cached		4856033	2		=			
ANR	4856086	Identifier	cached		4856033	0					
ANR	4856087	PtrMemberAccess	io -> cached		4856033	1					
ANR	4856088	Identifier	io		4856033	0					
ANR	4856089	Identifier	cached		4856033	1					
ANR	4856090	ExpressionStatement	io -> cached = 0	57:3:1245:1259	4856033	1	True				
ANR	4856091	AssignmentExpression	io -> cached = 0		4856033	0		=			
ANR	4856092	PtrMemberAccess	io -> cached		4856033	0					
ANR	4856093	Identifier	io		4856033	0					
ANR	4856094	Identifier	cached		4856033	1					
ANR	4856095	PrimaryExpression	0		4856033	1					
ANR	4856096	IfStatement	"if ( r_io_write_at ( io , r_itv_begin ( c -> itv ) , c -> data , r_itv_size ( c -> itv ) ) )"		4856033	2					
ANR	4856097	Condition	"r_io_write_at ( io , r_itv_begin ( c -> itv ) , c -> data , r_itv_size ( c -> itv ) )"	58:7:1268:1337	4856033	0	True				
ANR	4856098	CallExpression	"r_io_write_at ( io , r_itv_begin ( c -> itv ) , c -> data , r_itv_size ( c -> itv ) )"		4856033	0					
ANR	4856099	Callee	r_io_write_at		4856033	0					
ANR	4856100	Identifier	r_io_write_at		4856033	0					
ANR	4856101	ArgumentList	io		4856033	1					
ANR	4856102	Argument	io		4856033	0					
ANR	4856103	Identifier	io		4856033	0					
ANR	4856104	Argument	r_itv_begin ( c -> itv )		4856033	1					
ANR	4856105	CallExpression	r_itv_begin ( c -> itv )		4856033	0					
ANR	4856106	Callee	r_itv_begin		4856033	0					
ANR	4856107	Identifier	r_itv_begin		4856033	0					
ANR	4856108	ArgumentList	c -> itv		4856033	1					
ANR	4856109	Argument	c -> itv		4856033	0					
ANR	4856110	PtrMemberAccess	c -> itv		4856033	0					
ANR	4856111	Identifier	c		4856033	0					
ANR	4856112	Identifier	itv		4856033	1					
ANR	4856113	Argument	c -> data		4856033	2					
ANR	4856114	PtrMemberAccess	c -> data		4856033	0					
ANR	4856115	Identifier	c		4856033	0					
ANR	4856116	Identifier	data		4856033	1					
ANR	4856117	Argument	r_itv_size ( c -> itv )		4856033	3					
ANR	4856118	CallExpression	r_itv_size ( c -> itv )		4856033	0					
ANR	4856119	Callee	r_itv_size		4856033	0					
ANR	4856120	Identifier	r_itv_size		4856033	0					
ANR	4856121	ArgumentList	c -> itv		4856033	1					
ANR	4856122	Argument	c -> itv		4856033	0					
ANR	4856123	PtrMemberAccess	c -> itv		4856033	0					
ANR	4856124	Identifier	c		4856033	0					
ANR	4856125	Identifier	itv		4856033	1					
ANR	4856126	CompoundStatement		10:79:337:337	4856033	1					
ANR	4856127	ExpressionStatement	c -> written = true	59:4:1346:1363	4856033	0	True				
ANR	4856128	AssignmentExpression	c -> written = true		4856033	0		=			
ANR	4856129	PtrMemberAccess	c -> written		4856033	0					
ANR	4856130	Identifier	c		4856033	0					
ANR	4856131	Identifier	written		4856033	1					
ANR	4856132	Identifier	true		4856033	1					
ANR	4856133	ElseStatement	else		4856033	0					
ANR	4856134	CompoundStatement		12:10:372:372	4856033	0					
ANR	4856135	Statement	eprintf	61:4:1381:1387	4856033	0	True				
ANR	4856136	Statement	(	61:12:1389:1389	4856033	1	True				
ANR	4856137	Statement	"""Error writing change at 0x%08"""	61:13:1390:1420	4856033	2	True				
ANR	4856138	Statement	PFMT64x	61:44:1421:1427	4856033	3	True				
ANR	4856139	Statement	"""\\n"""	61:51:1428:1431	4856033	4	True				
ANR	4856140	Statement	","	61:55:1432:1432	4856033	5	True				
ANR	4856141	Statement	r_itv_begin	61:57:1434:1444	4856033	6	True				
ANR	4856142	Statement	(	61:69:1446:1446	4856033	7	True				
ANR	4856143	Statement	c	61:70:1447:1447	4856033	8	True				
ANR	4856144	Statement	->	61:71:1448:1449	4856033	9	True				
ANR	4856145	Statement	itv	61:73:1450:1452	4856033	10	True				
ANR	4856146	Statement	)	61:76:1453:1453	4856033	11	True				
ANR	4856147	Statement	)	61:77:1454:1454	4856033	12	True				
ANR	4856148	ExpressionStatement		61:78:1455:1455	4856033	13	True				
ANR	4856149	ExpressionStatement	io -> cached = cached	63:3:1465:1484	4856033	3	True				
ANR	4856150	AssignmentExpression	io -> cached = cached		4856033	0		=			
ANR	4856151	PtrMemberAccess	io -> cached		4856033	0					
ANR	4856152	Identifier	io		4856033	0					
ANR	4856153	Identifier	cached		4856033	1					
ANR	4856154	Identifier	cached		4856033	1					
ANR	4856155	ReturnType	R_API void		4856033	1					
ANR	4856156	Identifier	r_io_cache_commit		4856033	2					
ANR	4856157	ParameterList	"RIO * io , ut64 from , ut64 to"		4856033	3					
ANR	4856158	Parameter	RIO * io	49:29:973:979	4856033	0	True				
ANR	4856159	ParameterType	RIO *		4856033	0					
ANR	4856160	Identifier	io		4856033	1					
ANR	4856161	Parameter	ut64 from	49:38:982:990	4856033	1	True				
ANR	4856162	ParameterType	ut64		4856033	0					
ANR	4856163	Identifier	from		4856033	1					
ANR	4856164	Parameter	ut64 to	49:49:993:999	4856033	2	True				
ANR	4856165	ParameterType	ut64		4856033	0					
ANR	4856166	Identifier	to		4856033	1					
ANR	4856167	CFGEntryNode	ENTRY		4856033		True				
ANR	4856168	CFGExitNode	EXIT		4856033		True				
ANR	4856169	Symbol	c		4856033						
ANR	4856170	Symbol	io		4856033						
ANR	4856171	Symbol	c -> itv		4856033						
ANR	4856172	Symbol	iter		4856033						
ANR	4856173	Symbol	range		4856033						
ANR	4856174	Symbol	r_itv_begin		4856033						
ANR	4856175	Symbol	* c		4856033						
ANR	4856176	Symbol	r_itv_overlap		4856033						
ANR	4856177	Symbol	* io		4856033						
ANR	4856178	Symbol	c -> data		4856033						
ANR	4856179	Symbol	c -> written		4856033						
ANR	4856180	Symbol	io -> cached		4856033						
ANR	4856181	Symbol	r_itv_size		4856033						
ANR	4856182	Symbol	cached		4856033						
ANR	4856183	Symbol	true		4856033						
ANR	4856184	Symbol	from		4856033						
ANR	4856185	Symbol	to		4856033						
ANR	4856186	Symbol	r_io_write_at		4856033						
ANR	4856187	Function	r_io_cache_reset	69:0:1543:1637							
ANR	4856188	FunctionDef	"r_io_cache_reset (RIO * io , int set)"		4856187	0					
ANR	4856189	CompoundStatement		69:46:1589:1637	4856187	0					
ANR	4856190	ExpressionStatement	io -> cached = set	70:1:1592:1608	4856187	0	True				
ANR	4856191	AssignmentExpression	io -> cached = set		4856187	0		=			
ANR	4856192	PtrMemberAccess	io -> cached		4856187	0					
ANR	4856193	Identifier	io		4856187	0					
ANR	4856194	Identifier	cached		4856187	1					
ANR	4856195	Identifier	set		4856187	1					
ANR	4856196	ExpressionStatement	r_list_purge ( io -> cache )	71:1:1611:1635	4856187	1	True				
ANR	4856197	CallExpression	r_list_purge ( io -> cache )		4856187	0					
ANR	4856198	Callee	r_list_purge		4856187	0					
ANR	4856199	Identifier	r_list_purge		4856187	0					
ANR	4856200	ArgumentList	io -> cache		4856187	1					
ANR	4856201	Argument	io -> cache		4856187	0					
ANR	4856202	PtrMemberAccess	io -> cache		4856187	0					
ANR	4856203	Identifier	io		4856187	0					
ANR	4856204	Identifier	cache		4856187	1					
ANR	4856205	ReturnType	R_API void		4856187	1					
ANR	4856206	Identifier	r_io_cache_reset		4856187	2					
ANR	4856207	ParameterList	"RIO * io , int set"		4856187	3					
ANR	4856208	Parameter	RIO * io	69:28:1571:1577	4856187	0	True				
ANR	4856209	ParameterType	RIO *		4856187	0					
ANR	4856210	Identifier	io		4856187	1					
ANR	4856211	Parameter	int set	69:37:1580:1586	4856187	1	True				
ANR	4856212	ParameterType	int		4856187	0					
ANR	4856213	Identifier	set		4856187	1					
ANR	4856214	CFGEntryNode	ENTRY		4856187		True				
ANR	4856215	CFGExitNode	EXIT		4856187		True				
ANR	4856216	Symbol	set		4856187						
ANR	4856217	Symbol	io		4856187						
ANR	4856218	Symbol	io -> cached		4856187						
ANR	4856219	Symbol	io -> cache		4856187						
ANR	4856220	Symbol	* io		4856187						
ANR	4856221	Function	r_io_cache_invalidate	74:0:1640:2157							
ANR	4856222	FunctionDef	"r_io_cache_invalidate (RIO * io , ut64 from , ut64 to)"		4856221	0					
ANR	4856223	CompoundStatement		74:61:1701:2157	4856221	0					
ANR	4856224	IdentifierDeclStatement	int invalidated = 0 ;	75:1:1704:1723	4856221	0	True				
ANR	4856225	IdentifierDecl	invalidated = 0		4856221	0					
ANR	4856226	IdentifierDeclType	int		4856221	0					
ANR	4856227	Identifier	invalidated		4856221	1					
ANR	4856228	AssignmentExpression	invalidated = 0		4856221	2		=			
ANR	4856229	Identifier	invalidated		4856221	0					
ANR	4856230	PrimaryExpression	0		4856221	1					
ANR	4856231	IdentifierDeclStatement	"RListIter * iter , * tmp ;"	76:1:1726:1747	4856221	1	True				
ANR	4856232	IdentifierDecl	* iter		4856221	0					
ANR	4856233	IdentifierDeclType	RListIter *		4856221	0					
ANR	4856234	Identifier	iter		4856221	1					
ANR	4856235	IdentifierDecl	* tmp		4856221	1					
ANR	4856236	IdentifierDeclType	RListIter *		4856221	0					
ANR	4856237	Identifier	tmp		4856221	1					
ANR	4856238	IdentifierDeclStatement	RIOCache * c ;	77:1:1750:1761	4856221	2	True				
ANR	4856239	IdentifierDecl	* c		4856221	0					
ANR	4856240	IdentifierDeclType	RIOCache *		4856221	0					
ANR	4856241	Identifier	c		4856221	1					
ANR	4856242	Statement	RInterval	78:1:1764:1772	4856221	3	True				
ANR	4856243	Statement	range	78:11:1774:1778	4856221	4	True				
ANR	4856244	Statement	=	78:17:1780:1780	4856221	5	True				
ANR	4856245	Statement	(	78:19:1782:1782	4856221	6	True				
ANR	4856246	Statement	RInterval	78:20:1783:1791	4856221	7	True				
ANR	4856247	Statement	)	78:29:1792:1792	4856221	8	True				
ANR	4856248	CompoundStatement		5:30:91:91	4856221	9					
ANR	4856249	Statement	from	78:31:1794:1797	4856221	0	True				
ANR	4856250	Statement	","	78:35:1798:1798	4856221	1	True				
ANR	4856251	Statement	to	78:37:1800:1801	4856221	2	True				
ANR	4856252	Statement	-	78:40:1803:1803	4856221	3	True				
ANR	4856253	Statement	from	78:42:1805:1808	4856221	4	True				
ANR	4856254	ExpressionStatement		78:47:1810:1810	4856221	10	True				
ANR	4856255	Statement	r_list_foreach_prev_safe	79:1:1813:1836	4856221	11	True				
ANR	4856256	Statement	(	79:26:1838:1838	4856221	12	True				
ANR	4856257	Statement	io	79:27:1839:1840	4856221	13	True				
ANR	4856258	Statement	->	79:29:1841:1842	4856221	14	True				
ANR	4856259	Statement	cache	79:31:1843:1847	4856221	15	True				
ANR	4856260	Statement	","	79:36:1848:1848	4856221	16	True				
ANR	4856261	Statement	iter	79:38:1850:1853	4856221	17	True				
ANR	4856262	Statement	","	79:42:1854:1854	4856221	18	True				
ANR	4856263	Statement	tmp	79:44:1856:1858	4856221	19	True				
ANR	4856264	Statement	","	79:47:1859:1859	4856221	20	True				
ANR	4856265	Statement	c	79:49:1861:1861	4856221	21	True				
ANR	4856266	Statement	)	79:50:1862:1862	4856221	22	True				
ANR	4856267	CompoundStatement		6:52:162:162	4856221	23					
ANR	4856268	IfStatement	"if ( r_itv_overlap ( c -> itv , range ) )"		4856221	0					
ANR	4856269	Condition	"r_itv_overlap ( c -> itv , range )"	80:6:1872:1900	4856221	0	True				
ANR	4856270	CallExpression	"r_itv_overlap ( c -> itv , range )"		4856221	0					
ANR	4856271	Callee	r_itv_overlap		4856221	0					
ANR	4856272	Identifier	r_itv_overlap		4856221	0					
ANR	4856273	ArgumentList	c -> itv		4856221	1					
ANR	4856274	Argument	c -> itv		4856221	0					
ANR	4856275	PtrMemberAccess	c -> itv		4856221	0					
ANR	4856276	Identifier	c		4856221	0					
ANR	4856277	Identifier	itv		4856221	1					
ANR	4856278	Argument	range		4856221	1					
ANR	4856279	Identifier	range		4856221	0					
ANR	4856280	CompoundStatement		8:3:206:229	4856221	1					
ANR	4856281	IdentifierDeclStatement	int cached = io -> cached ;	81:3:1908:1931	4856221	0	True				
ANR	4856282	IdentifierDecl	cached = io -> cached		4856221	0					
ANR	4856283	IdentifierDeclType	int		4856221	0					
ANR	4856284	Identifier	cached		4856221	1					
ANR	4856285	AssignmentExpression	cached = io -> cached		4856221	2		=			
ANR	4856286	Identifier	cached		4856221	0					
ANR	4856287	PtrMemberAccess	io -> cached		4856221	1					
ANR	4856288	Identifier	io		4856221	0					
ANR	4856289	Identifier	cached		4856221	1					
ANR	4856290	ExpressionStatement	io -> cached = 0	82:3:1936:1950	4856221	1	True				
ANR	4856291	AssignmentExpression	io -> cached = 0		4856221	0		=			
ANR	4856292	PtrMemberAccess	io -> cached		4856221	0					
ANR	4856293	Identifier	io		4856221	0					
ANR	4856294	Identifier	cached		4856221	1					
ANR	4856295	PrimaryExpression	0		4856221	1					
ANR	4856296	ExpressionStatement	"r_io_write_at ( io , r_itv_begin ( c -> itv ) , c -> odata , r_itv_size ( c -> itv ) )"	83:3:1955:2026	4856221	2	True				
ANR	4856297	CallExpression	"r_io_write_at ( io , r_itv_begin ( c -> itv ) , c -> odata , r_itv_size ( c -> itv ) )"		4856221	0					
ANR	4856298	Callee	r_io_write_at		4856221	0					
ANR	4856299	Identifier	r_io_write_at		4856221	0					
ANR	4856300	ArgumentList	io		4856221	1					
ANR	4856301	Argument	io		4856221	0					
ANR	4856302	Identifier	io		4856221	0					
ANR	4856303	Argument	r_itv_begin ( c -> itv )		4856221	1					
ANR	4856304	CallExpression	r_itv_begin ( c -> itv )		4856221	0					
ANR	4856305	Callee	r_itv_begin		4856221	0					
ANR	4856306	Identifier	r_itv_begin		4856221	0					
ANR	4856307	ArgumentList	c -> itv		4856221	1					
ANR	4856308	Argument	c -> itv		4856221	0					
ANR	4856309	PtrMemberAccess	c -> itv		4856221	0					
ANR	4856310	Identifier	c		4856221	0					
ANR	4856311	Identifier	itv		4856221	1					
ANR	4856312	Argument	c -> odata		4856221	2					
ANR	4856313	PtrMemberAccess	c -> odata		4856221	0					
ANR	4856314	Identifier	c		4856221	0					
ANR	4856315	Identifier	odata		4856221	1					
ANR	4856316	Argument	r_itv_size ( c -> itv )		4856221	3					
ANR	4856317	CallExpression	r_itv_size ( c -> itv )		4856221	0					
ANR	4856318	Callee	r_itv_size		4856221	0					
ANR	4856319	Identifier	r_itv_size		4856221	0					
ANR	4856320	ArgumentList	c -> itv		4856221	1					
ANR	4856321	Argument	c -> itv		4856221	0					
ANR	4856322	PtrMemberAccess	c -> itv		4856221	0					
ANR	4856323	Identifier	c		4856221	0					
ANR	4856324	Identifier	itv		4856221	1					
ANR	4856325	ExpressionStatement	io -> cached = cached	84:3:2031:2050	4856221	3	True				
ANR	4856326	AssignmentExpression	io -> cached = cached		4856221	0		=			
ANR	4856327	PtrMemberAccess	io -> cached		4856221	0					
ANR	4856328	Identifier	io		4856221	0					
ANR	4856329	Identifier	cached		4856221	1					
ANR	4856330	Identifier	cached		4856221	1					
ANR	4856331	ExpressionStatement	c -> written = false	85:3:2055:2073	4856221	4	True				
ANR	4856332	AssignmentExpression	c -> written = false		4856221	0		=			
ANR	4856333	PtrMemberAccess	c -> written		4856221	0					
ANR	4856334	Identifier	c		4856221	0					
ANR	4856335	Identifier	written		4856221	1					
ANR	4856336	Identifier	false		4856221	1					
ANR	4856337	ExpressionStatement	"r_list_delete ( io -> cache , iter )"	86:3:2078:2109	4856221	5	True				
ANR	4856338	CallExpression	"r_list_delete ( io -> cache , iter )"		4856221	0					
ANR	4856339	Callee	r_list_delete		4856221	0					
ANR	4856340	Identifier	r_list_delete		4856221	0					
ANR	4856341	ArgumentList	io -> cache		4856221	1					
ANR	4856342	Argument	io -> cache		4856221	0					
ANR	4856343	PtrMemberAccess	io -> cache		4856221	0					
ANR	4856344	Identifier	io		4856221	0					
ANR	4856345	Identifier	cache		4856221	1					
ANR	4856346	Argument	iter		4856221	1					
ANR	4856347	Identifier	iter		4856221	0					
ANR	4856348	ExpressionStatement	invalidated ++	87:3:2114:2127	4856221	6	True				
ANR	4856349	PostIncDecOperationExpression	invalidated ++		4856221	0					
ANR	4856350	Identifier	invalidated		4856221	0					
ANR	4856351	IncDec	++		4856221	1					
ANR	4856352	ReturnStatement	return invalidated ;	90:1:2137:2155	4856221	24	True				
ANR	4856353	Identifier	invalidated		4856221	0					
ANR	4856354	ReturnType	R_API int		4856221	1					
ANR	4856355	Identifier	r_io_cache_invalidate		4856221	2					
ANR	4856356	ParameterList	"RIO * io , ut64 from , ut64 to"		4856221	3					
ANR	4856357	Parameter	RIO * io	74:32:1672:1678	4856221	0	True				
ANR	4856358	ParameterType	RIO *		4856221	0					
ANR	4856359	Identifier	io		4856221	1					
ANR	4856360	Parameter	ut64 from	74:41:1681:1689	4856221	1	True				
ANR	4856361	ParameterType	ut64		4856221	0					
ANR	4856362	Identifier	from		4856221	1					
ANR	4856363	Parameter	ut64 to	74:52:1692:1698	4856221	2	True				
ANR	4856364	ParameterType	ut64		4856221	0					
ANR	4856365	Identifier	to		4856221	1					
ANR	4856366	CFGEntryNode	ENTRY		4856221		True				
ANR	4856367	CFGExitNode	EXIT		4856221		True				
ANR	4856368	Symbol	c		4856221						
ANR	4856369	Symbol	io		4856221						
ANR	4856370	Symbol	c -> itv		4856221						
ANR	4856371	Symbol	false		4856221						
ANR	4856372	Symbol	iter		4856221						
ANR	4856373	Symbol	range		4856221						
ANR	4856374	Symbol	r_itv_begin		4856221						
ANR	4856375	Symbol	io -> cache		4856221						
ANR	4856376	Symbol	* c		4856221						
ANR	4856377	Symbol	r_itv_overlap		4856221						
ANR	4856378	Symbol	* io		4856221						
ANR	4856379	Symbol	c -> written		4856221						
ANR	4856380	Symbol	c -> odata		4856221						
ANR	4856381	Symbol	tmp		4856221						
ANR	4856382	Symbol	io -> cached		4856221						
ANR	4856383	Symbol	r_itv_size		4856221						
ANR	4856384	Symbol	cached		4856221						
ANR	4856385	Symbol	from		4856221						
ANR	4856386	Symbol	to		4856221						
ANR	4856387	Symbol	invalidated		4856221						
ANR	4856388	Function	r_io_cache_list	93:0:2160:3664							
ANR	4856389	FunctionDef	"r_io_cache_list (RIO * io , int rad)"		4856388	0					
ANR	4856390	CompoundStatement		93:44:2204:3664	4856388	0					
ANR	4856391	IdentifierDeclStatement	"int i , j = 0 ;"	94:1:2207:2219	4856388	0	True				
ANR	4856392	IdentifierDecl	i		4856388	0					
ANR	4856393	IdentifierDeclType	int		4856388	0					
ANR	4856394	Identifier	i		4856388	1					
ANR	4856395	IdentifierDecl	j = 0		4856388	1					
ANR	4856396	IdentifierDeclType	int		4856388	0					
ANR	4856397	Identifier	j		4856388	1					
ANR	4856398	AssignmentExpression	j = 0		4856388	2		=			
ANR	4856399	Identifier	j		4856388	0					
ANR	4856400	PrimaryExpression	0		4856388	1					
ANR	4856401	IdentifierDeclStatement	RListIter * iter ;	95:1:2222:2237	4856388	1	True				
ANR	4856402	IdentifierDecl	* iter		4856388	0					
ANR	4856403	IdentifierDeclType	RListIter *		4856388	0					
ANR	4856404	Identifier	iter		4856388	1					
ANR	4856405	IdentifierDeclStatement	RIOCache * c ;	96:1:2240:2251	4856388	2	True				
ANR	4856406	IdentifierDecl	* c		4856388	0					
ANR	4856407	IdentifierDeclType	RIOCache *		4856388	0					
ANR	4856408	Identifier	c		4856388	1					
ANR	4856409	IfStatement	if ( rad == 2 )		4856388	3					
ANR	4856410	Condition	rad == 2	97:5:2258:2265	4856388	0	True				
ANR	4856411	EqualityExpression	rad == 2		4856388	0		==			
ANR	4856412	Identifier	rad		4856388	0					
ANR	4856413	PrimaryExpression	2		4856388	1					
ANR	4856414	CompoundStatement		5:15:63:63	4856388	1					
ANR	4856415	ExpressionStatement	"io -> cb_printf ( ""["" )"	98:2:2272:2291	4856388	0	True				
ANR	4856416	CallExpression	"io -> cb_printf ( ""["" )"		4856388	0					
ANR	4856417	Callee	io -> cb_printf		4856388	0					
ANR	4856418	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856419	Identifier	io		4856388	0					
ANR	4856420	Identifier	cb_printf		4856388	1					
ANR	4856421	ArgumentList	"""["""		4856388	1					
ANR	4856422	Argument	"""["""		4856388	0					
ANR	4856423	PrimaryExpression	"""["""		4856388	0					
ANR	4856424	Statement	r_list_foreach	100:1:2297:2310	4856388	4	True				
ANR	4856425	Statement	(	100:16:2312:2312	4856388	5	True				
ANR	4856426	Statement	io	100:17:2313:2314	4856388	6	True				
ANR	4856427	Statement	->	100:19:2315:2316	4856388	7	True				
ANR	4856428	Statement	cache	100:21:2317:2321	4856388	8	True				
ANR	4856429	Statement	","	100:26:2322:2322	4856388	9	True				
ANR	4856430	Statement	iter	100:28:2324:2327	4856388	10	True				
ANR	4856431	Statement	","	100:32:2328:2328	4856388	11	True				
ANR	4856432	Statement	c	100:34:2330:2330	4856388	12	True				
ANR	4856433	Statement	)	100:35:2331:2331	4856388	13	True				
ANR	4856434	CompoundStatement		9:2:132:172	4856388	14					
ANR	4856435	IdentifierDeclStatement	const int dataSize = r_itv_size ( c -> itv ) ;	101:2:2337:2377	4856388	0	True				
ANR	4856436	IdentifierDecl	dataSize = r_itv_size ( c -> itv )		4856388	0					
ANR	4856437	IdentifierDeclType	const int		4856388	0					
ANR	4856438	Identifier	dataSize		4856388	1					
ANR	4856439	AssignmentExpression	dataSize = r_itv_size ( c -> itv )		4856388	2		=			
ANR	4856440	Identifier	dataSize		4856388	0					
ANR	4856441	CallExpression	r_itv_size ( c -> itv )		4856388	1					
ANR	4856442	Callee	r_itv_size		4856388	0					
ANR	4856443	Identifier	r_itv_size		4856388	0					
ANR	4856444	ArgumentList	c -> itv		4856388	1					
ANR	4856445	Argument	c -> itv		4856388	0					
ANR	4856446	PtrMemberAccess	c -> itv		4856388	0					
ANR	4856447	Identifier	c		4856388	0					
ANR	4856448	Identifier	itv		4856388	1					
ANR	4856449	IfStatement	if ( rad == 1 )		4856388	1					
ANR	4856450	Condition	rad == 1	102:6:2385:2392	4856388	0	True				
ANR	4856451	EqualityExpression	rad == 1		4856388	0		==			
ANR	4856452	Identifier	rad		4856388	0					
ANR	4856453	PrimaryExpression	1		4856388	1					
ANR	4856454	CompoundStatement		10:16:190:190	4856388	1					
ANR	4856455	ExpressionStatement	"io -> cb_printf ( ""wx "" )"	103:3:2400:2421	4856388	0	True				
ANR	4856456	CallExpression	"io -> cb_printf ( ""wx "" )"		4856388	0					
ANR	4856457	Callee	io -> cb_printf		4856388	0					
ANR	4856458	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856459	Identifier	io		4856388	0					
ANR	4856460	Identifier	cb_printf		4856388	1					
ANR	4856461	ArgumentList	"""wx """		4856388	1					
ANR	4856462	Argument	"""wx """		4856388	0					
ANR	4856463	PrimaryExpression	"""wx """		4856388	0					
ANR	4856464	ForStatement	for ( i = 0 ; i < dataSize ; i ++ )		4856388	1					
ANR	4856465	ForInit	i = 0 ;	104:8:2431:2436	4856388	0	True				
ANR	4856466	AssignmentExpression	i = 0		4856388	0		=			
ANR	4856467	Identifier	i		4856388	0					
ANR	4856468	PrimaryExpression	0		4856388	1					
ANR	4856469	Condition	i < dataSize	104:15:2438:2449	4856388	1	True				
ANR	4856470	RelationalExpression	i < dataSize		4856388	0		<			
ANR	4856471	Identifier	i		4856388	0					
ANR	4856472	Identifier	dataSize		4856388	1					
ANR	4856473	PostIncDecOperationExpression	i ++	104:29:2452:2454	4856388	2	True				
ANR	4856474	Identifier	i		4856388	0					
ANR	4856475	IncDec	++		4856388	1					
ANR	4856476	CompoundStatement		12:34:252:252	4856388	3					
ANR	4856477	ExpressionStatement	"io -> cb_printf ( ""%02x"" , ( ut8 ) ( c -> data [ i ] & 0xff ) )"	105:4:2463:2511	4856388	0	True				
ANR	4856478	CallExpression	"io -> cb_printf ( ""%02x"" , ( ut8 ) ( c -> data [ i ] & 0xff ) )"		4856388	0					
ANR	4856479	Callee	io -> cb_printf		4856388	0					
ANR	4856480	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856481	Identifier	io		4856388	0					
ANR	4856482	Identifier	cb_printf		4856388	1					
ANR	4856483	ArgumentList	"""%02x"""		4856388	1					
ANR	4856484	Argument	"""%02x"""		4856388	0					
ANR	4856485	PrimaryExpression	"""%02x"""		4856388	0					
ANR	4856486	Argument	( ut8 ) ( c -> data [ i ] & 0xff )		4856388	1					
ANR	4856487	CastExpression	( ut8 ) ( c -> data [ i ] & 0xff )		4856388	0					
ANR	4856488	CastTarget	ut8		4856388	0					
ANR	4856489	BitAndExpression	c -> data [ i ] & 0xff		4856388	1		&			
ANR	4856490	ArrayIndexing	c -> data [ i ]		4856388	0					
ANR	4856491	PtrMemberAccess	c -> data		4856388	0					
ANR	4856492	Identifier	c		4856388	0					
ANR	4856493	Identifier	data		4856388	1					
ANR	4856494	Identifier	i		4856388	1					
ANR	4856495	PrimaryExpression	0xff		4856388	1					
ANR	4856496	Statement	io	107:3:2521:2522	4856388	2	True				
ANR	4856497	Statement	->	107:5:2523:2524	4856388	3	True				
ANR	4856498	Statement	cb_printf	107:7:2525:2533	4856388	4	True				
ANR	4856499	Statement	(	107:17:2535:2535	4856388	5	True				
ANR	4856500	Statement	""" @ 0x%08"""	107:18:2536:2545	4856388	6	True				
ANR	4856501	Statement	PFMT64x	107:28:2546:2552	4856388	7	True				
ANR	4856502	Statement	","	107:35:2553:2553	4856388	8	True				
ANR	4856503	Statement	r_itv_begin	107:37:2555:2565	4856388	9	True				
ANR	4856504	Statement	(	107:49:2567:2567	4856388	10	True				
ANR	4856505	Statement	c	107:50:2568:2568	4856388	11	True				
ANR	4856506	Statement	->	107:51:2569:2570	4856388	12	True				
ANR	4856507	Statement	itv	107:53:2571:2573	4856388	13	True				
ANR	4856508	Statement	)	107:56:2574:2574	4856388	14	True				
ANR	4856509	Statement	)	107:57:2575:2575	4856388	15	True				
ANR	4856510	ExpressionStatement		107:58:2576:2576	4856388	16	True				
ANR	4856511	ExpressionStatement	"io -> cb_printf ( "" # replaces: "" )"	108:3:2581:2612	4856388	17	True				
ANR	4856512	CallExpression	"io -> cb_printf ( "" # replaces: "" )"		4856388	0					
ANR	4856513	Callee	io -> cb_printf		4856388	0					
ANR	4856514	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856515	Identifier	io		4856388	0					
ANR	4856516	Identifier	cb_printf		4856388	1					
ANR	4856517	ArgumentList	""" # replaces: """		4856388	1					
ANR	4856518	Argument	""" # replaces: """		4856388	0					
ANR	4856519	PrimaryExpression	""" # replaces: """		4856388	0					
ANR	4856520	ForStatement	for ( i = 0 ; i < dataSize ; i ++ )		4856388	18					
ANR	4856521	ForInit	i = 0 ;	109:10:2624:2629	4856388	0	True				
ANR	4856522	AssignmentExpression	i = 0		4856388	0		=			
ANR	4856523	Identifier	i		4856388	0					
ANR	4856524	PrimaryExpression	0		4856388	1					
ANR	4856525	Condition	i < dataSize	109:17:2631:2642	4856388	1	True				
ANR	4856526	RelationalExpression	i < dataSize		4856388	0		<			
ANR	4856527	Identifier	i		4856388	0					
ANR	4856528	Identifier	dataSize		4856388	1					
ANR	4856529	PostIncDecOperationExpression	i ++	109:31:2645:2647	4856388	2	True				
ANR	4856530	Identifier	i		4856388	0					
ANR	4856531	IncDec	++		4856388	1					
ANR	4856532	CompoundStatement		17:36:445:445	4856388	3					
ANR	4856533	ExpressionStatement	"io -> cb_printf ( ""%02x"" , ( ut8 ) ( c -> odata [ i ] & 0xff ) )"	110:4:2656:2705	4856388	0	True				
ANR	4856534	CallExpression	"io -> cb_printf ( ""%02x"" , ( ut8 ) ( c -> odata [ i ] & 0xff ) )"		4856388	0					
ANR	4856535	Callee	io -> cb_printf		4856388	0					
ANR	4856536	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856537	Identifier	io		4856388	0					
ANR	4856538	Identifier	cb_printf		4856388	1					
ANR	4856539	ArgumentList	"""%02x"""		4856388	1					
ANR	4856540	Argument	"""%02x"""		4856388	0					
ANR	4856541	PrimaryExpression	"""%02x"""		4856388	0					
ANR	4856542	Argument	( ut8 ) ( c -> odata [ i ] & 0xff )		4856388	1					
ANR	4856543	CastExpression	( ut8 ) ( c -> odata [ i ] & 0xff )		4856388	0					
ANR	4856544	CastTarget	ut8		4856388	0					
ANR	4856545	BitAndExpression	c -> odata [ i ] & 0xff		4856388	1		&			
ANR	4856546	ArrayIndexing	c -> odata [ i ]		4856388	0					
ANR	4856547	PtrMemberAccess	c -> odata		4856388	0					
ANR	4856548	Identifier	c		4856388	0					
ANR	4856549	Identifier	odata		4856388	1					
ANR	4856550	Identifier	i		4856388	1					
ANR	4856551	PrimaryExpression	0xff		4856388	1					
ANR	4856552	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	112:3:2715:2735	4856388	19	True				
ANR	4856553	CallExpression	"io -> cb_printf ( ""\\n"" )"		4856388	0					
ANR	4856554	Callee	io -> cb_printf		4856388	0					
ANR	4856555	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856556	Identifier	io		4856388	0					
ANR	4856557	Identifier	cb_printf		4856388	1					
ANR	4856558	ArgumentList	"""\\n"""		4856388	1					
ANR	4856559	Argument	"""\\n"""		4856388	0					
ANR	4856560	PrimaryExpression	"""\\n"""		4856388	0					
ANR	4856561	ElseStatement	else		4856388	0					
ANR	4856562	IfStatement	if ( rad == 2 )		4856388	0					
ANR	4856563	Condition	rad == 2	113:13:2750:2757	4856388	0	True				
ANR	4856564	EqualityExpression	rad == 2		4856388	0		==			
ANR	4856565	Identifier	rad		4856388	0					
ANR	4856566	PrimaryExpression	2		4856388	1					
ANR	4856567	CompoundStatement		21:23:555:555	4856388	1					
ANR	4856568	Statement	io	114:3:2765:2766	4856388	0	True				
ANR	4856569	Statement	->	114:5:2767:2768	4856388	1	True				
ANR	4856570	Statement	cb_printf	114:7:2769:2777	4856388	2	True				
ANR	4856571	Statement	(	114:17:2779:2779	4856388	3	True				
ANR	4856572	Statement	"""{\\""idx\\"":%"""	114:18:2780:2791	4856388	4	True				
ANR	4856573	Statement	PFMT64d	114:30:2792:2798	4856388	5	True				
ANR	4856574	Statement	""",\\""addr\\"":%"""	114:37:2799:2811	4856388	6	True				
ANR	4856575	Statement	PFMT64d	114:50:2812:2818	4856388	7	True				
ANR	4856576	Statement	""",\\""size\\"":%d,"""	114:57:2819:2833	4856388	8	True				
ANR	4856577	Statement	","	114:72:2834:2834	4856388	9	True				
ANR	4856578	Statement	j	115:4:2840:2840	4856388	10	True				
ANR	4856579	Statement	","	115:5:2841:2841	4856388	11	True				
ANR	4856580	Statement	r_itv_begin	115:7:2843:2853	4856388	12	True				
ANR	4856581	Statement	(	115:19:2855:2855	4856388	13	True				
ANR	4856582	Statement	c	115:20:2856:2856	4856388	14	True				
ANR	4856583	Statement	->	115:21:2857:2858	4856388	15	True				
ANR	4856584	Statement	itv	115:23:2859:2861	4856388	16	True				
ANR	4856585	Statement	)	115:26:2862:2862	4856388	17	True				
ANR	4856586	Statement	","	115:27:2863:2863	4856388	18	True				
ANR	4856587	Statement	dataSize	115:29:2865:2872	4856388	19	True				
ANR	4856588	Statement	)	115:37:2873:2873	4856388	20	True				
ANR	4856589	ExpressionStatement		115:38:2874:2874	4856388	21	True				
ANR	4856590	ExpressionStatement	"io -> cb_printf ( ""\\""before\\"":\\"""" )"	116:3:2879:2910	4856388	22	True				
ANR	4856591	CallExpression	"io -> cb_printf ( ""\\""before\\"":\\"""" )"		4856388	0					
ANR	4856592	Callee	io -> cb_printf		4856388	0					
ANR	4856593	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856594	Identifier	io		4856388	0					
ANR	4856595	Identifier	cb_printf		4856388	1					
ANR	4856596	ArgumentList	"""\\""before\\"":\\"""""		4856388	1					
ANR	4856597	Argument	"""\\""before\\"":\\"""""		4856388	0					
ANR	4856598	PrimaryExpression	"""\\""before\\"":\\"""""		4856388	0					
ANR	4856599	ForStatement	for ( i = 0 ; i < dataSize ; i ++ )		4856388	23					
ANR	4856600	ForInit	i = 0 ;	117:10:2922:2927	4856388	0	True				
ANR	4856601	AssignmentExpression	i = 0		4856388	0		=			
ANR	4856602	Identifier	i		4856388	0					
ANR	4856603	PrimaryExpression	0		4856388	1					
ANR	4856604	Condition	i < dataSize	117:17:2929:2940	4856388	1	True				
ANR	4856605	RelationalExpression	i < dataSize		4856388	0		<			
ANR	4856606	Identifier	i		4856388	0					
ANR	4856607	Identifier	dataSize		4856388	1					
ANR	4856608	PostIncDecOperationExpression	i ++	117:31:2943:2945	4856388	2	True				
ANR	4856609	Identifier	i		4856388	0					
ANR	4856610	IncDec	++		4856388	1					
ANR	4856611	CompoundStatement		25:36:743:743	4856388	3					
ANR	4856612	ExpressionStatement	"io -> cb_printf ( ""%02x"" , c -> odata [ i ] )"	118:4:2954:2989	4856388	0	True				
ANR	4856613	CallExpression	"io -> cb_printf ( ""%02x"" , c -> odata [ i ] )"		4856388	0					
ANR	4856614	Callee	io -> cb_printf		4856388	0					
ANR	4856615	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856616	Identifier	io		4856388	0					
ANR	4856617	Identifier	cb_printf		4856388	1					
ANR	4856618	ArgumentList	"""%02x"""		4856388	1					
ANR	4856619	Argument	"""%02x"""		4856388	0					
ANR	4856620	PrimaryExpression	"""%02x"""		4856388	0					
ANR	4856621	Argument	c -> odata [ i ]		4856388	1					
ANR	4856622	ArrayIndexing	c -> odata [ i ]		4856388	0					
ANR	4856623	PtrMemberAccess	c -> odata		4856388	0					
ANR	4856624	Identifier	c		4856388	0					
ANR	4856625	Identifier	odata		4856388	1					
ANR	4856626	Identifier	i		4856388	1					
ANR	4856627	ExpressionStatement	"io -> cb_printf ( ""\\"",\\""after\\"":\\"""" )"	120:3:2999:3032	4856388	24	True				
ANR	4856628	CallExpression	"io -> cb_printf ( ""\\"",\\""after\\"":\\"""" )"		4856388	0					
ANR	4856629	Callee	io -> cb_printf		4856388	0					
ANR	4856630	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856631	Identifier	io		4856388	0					
ANR	4856632	Identifier	cb_printf		4856388	1					
ANR	4856633	ArgumentList	"""\\"",\\""after\\"":\\"""""		4856388	1					
ANR	4856634	Argument	"""\\"",\\""after\\"":\\"""""		4856388	0					
ANR	4856635	PrimaryExpression	"""\\"",\\""after\\"":\\"""""		4856388	0					
ANR	4856636	ForStatement	for ( i = 0 ; i < dataSize ; i ++ )		4856388	25					
ANR	4856637	ForInit	i = 0 ;	121:10:3044:3049	4856388	0	True				
ANR	4856638	AssignmentExpression	i = 0		4856388	0		=			
ANR	4856639	Identifier	i		4856388	0					
ANR	4856640	PrimaryExpression	0		4856388	1					
ANR	4856641	Condition	i < dataSize	121:17:3051:3062	4856388	1	True				
ANR	4856642	RelationalExpression	i < dataSize		4856388	0		<			
ANR	4856643	Identifier	i		4856388	0					
ANR	4856644	Identifier	dataSize		4856388	1					
ANR	4856645	PostIncDecOperationExpression	i ++	121:31:3065:3067	4856388	2	True				
ANR	4856646	Identifier	i		4856388	0					
ANR	4856647	IncDec	++		4856388	1					
ANR	4856648	CompoundStatement		29:36:865:865	4856388	3					
ANR	4856649	ExpressionStatement	"io -> cb_printf ( ""%02x"" , c -> data [ i ] )"	122:4:3076:3110	4856388	0	True				
ANR	4856650	CallExpression	"io -> cb_printf ( ""%02x"" , c -> data [ i ] )"		4856388	0					
ANR	4856651	Callee	io -> cb_printf		4856388	0					
ANR	4856652	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856653	Identifier	io		4856388	0					
ANR	4856654	Identifier	cb_printf		4856388	1					
ANR	4856655	ArgumentList	"""%02x"""		4856388	1					
ANR	4856656	Argument	"""%02x"""		4856388	0					
ANR	4856657	PrimaryExpression	"""%02x"""		4856388	0					
ANR	4856658	Argument	c -> data [ i ]		4856388	1					
ANR	4856659	ArrayIndexing	c -> data [ i ]		4856388	0					
ANR	4856660	PtrMemberAccess	c -> data		4856388	0					
ANR	4856661	Identifier	c		4856388	0					
ANR	4856662	Identifier	data		4856388	1					
ANR	4856663	Identifier	i		4856388	1					
ANR	4856664	ExpressionStatement	"io -> cb_printf ( ""\\"",\\""written\\"":%s}%s"" , c -> written ? ""true"" : ""false"" , iter -> n ? "","" : """" )"	124:3:3120:3210	4856388	26	True				
ANR	4856665	CallExpression	"io -> cb_printf ( ""\\"",\\""written\\"":%s}%s"" , c -> written ? ""true"" : ""false"" , iter -> n ? "","" : """" )"		4856388	0					
ANR	4856666	Callee	io -> cb_printf		4856388	0					
ANR	4856667	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856668	Identifier	io		4856388	0					
ANR	4856669	Identifier	cb_printf		4856388	1					
ANR	4856670	ArgumentList	"""\\"",\\""written\\"":%s}%s"""		4856388	1					
ANR	4856671	Argument	"""\\"",\\""written\\"":%s}%s"""		4856388	0					
ANR	4856672	PrimaryExpression	"""\\"",\\""written\\"":%s}%s"""		4856388	0					
ANR	4856673	Argument	"c -> written ? ""true"" : ""false"""		4856388	1					
ANR	4856674	ConditionalExpression	"c -> written ? ""true"" : ""false"""		4856388	0					
ANR	4856675	Condition	c -> written		4856388	0					
ANR	4856676	PtrMemberAccess	c -> written		4856388	0					
ANR	4856677	Identifier	c		4856388	0					
ANR	4856678	Identifier	written		4856388	1					
ANR	4856679	PrimaryExpression	"""true"""		4856388	1					
ANR	4856680	PrimaryExpression	"""false"""		4856388	2					
ANR	4856681	Argument	"iter -> n ? "","" : """""		4856388	2					
ANR	4856682	ConditionalExpression	"iter -> n ? "","" : """""		4856388	0					
ANR	4856683	Condition	iter -> n		4856388	0					
ANR	4856684	PtrMemberAccess	iter -> n		4856388	0					
ANR	4856685	Identifier	iter		4856388	0					
ANR	4856686	Identifier	n		4856388	1					
ANR	4856687	PrimaryExpression	""","""		4856388	1					
ANR	4856688	PrimaryExpression	""""""		4856388	2					
ANR	4856689	ElseStatement	else		4856388	0					
ANR	4856690	IfStatement	if ( rad == 0 )		4856388	0					
ANR	4856691	Condition	rad == 0	126:13:3225:3232	4856388	0	True				
ANR	4856692	EqualityExpression	rad == 0		4856388	0		==			
ANR	4856693	Identifier	rad		4856388	0					
ANR	4856694	PrimaryExpression	0		4856388	1					
ANR	4856695	CompoundStatement		34:23:1030:1030	4856388	1					
ANR	4856696	Statement	io	127:3:3240:3241	4856388	0	True				
ANR	4856697	Statement	->	127:5:3242:3243	4856388	1	True				
ANR	4856698	Statement	cb_printf	127:7:3244:3252	4856388	2	True				
ANR	4856699	Statement	(	127:17:3254:3254	4856388	3	True				
ANR	4856700	Statement	"""idx=%d addr=0x%08"""	127:18:3255:3273	4856388	4	True				
ANR	4856701	Statement	PFMT64x	127:37:3274:3280	4856388	5	True				
ANR	4856702	Statement	""" size=%d """	127:44:3281:3291	4856388	6	True				
ANR	4856703	Statement	","	127:55:3292:3292	4856388	7	True				
ANR	4856704	Statement	j	127:57:3294:3294	4856388	8	True				
ANR	4856705	Statement	","	127:58:3295:3295	4856388	9	True				
ANR	4856706	Statement	r_itv_begin	127:60:3297:3307	4856388	10	True				
ANR	4856707	Statement	(	127:72:3309:3309	4856388	11	True				
ANR	4856708	Statement	c	127:73:3310:3310	4856388	12	True				
ANR	4856709	Statement	->	127:74:3311:3312	4856388	13	True				
ANR	4856710	Statement	itv	127:76:3313:3315	4856388	14	True				
ANR	4856711	Statement	)	127:79:3316:3316	4856388	15	True				
ANR	4856712	Statement	","	127:80:3317:3317	4856388	16	True				
ANR	4856713	Statement	dataSize	127:82:3319:3326	4856388	17	True				
ANR	4856714	Statement	)	127:90:3327:3327	4856388	18	True				
ANR	4856715	ExpressionStatement		127:91:3328:3328	4856388	19	True				
ANR	4856716	ForStatement	for ( i = 0 ; i < dataSize ; i ++ )		4856388	20					
ANR	4856717	ForInit	i = 0 ;	128:8:3338:3343	4856388	0	True				
ANR	4856718	AssignmentExpression	i = 0		4856388	0		=			
ANR	4856719	Identifier	i		4856388	0					
ANR	4856720	PrimaryExpression	0		4856388	1					
ANR	4856721	Condition	i < dataSize	128:15:3345:3356	4856388	1	True				
ANR	4856722	RelationalExpression	i < dataSize		4856388	0		<			
ANR	4856723	Identifier	i		4856388	0					
ANR	4856724	Identifier	dataSize		4856388	1					
ANR	4856725	PostIncDecOperationExpression	i ++	128:29:3359:3361	4856388	2	True				
ANR	4856726	Identifier	i		4856388	0					
ANR	4856727	IncDec	++		4856388	1					
ANR	4856728	CompoundStatement		36:34:1159:1159	4856388	3					
ANR	4856729	ExpressionStatement	"io -> cb_printf ( ""%02x"" , c -> odata [ i ] )"	129:4:3370:3405	4856388	0	True				
ANR	4856730	CallExpression	"io -> cb_printf ( ""%02x"" , c -> odata [ i ] )"		4856388	0					
ANR	4856731	Callee	io -> cb_printf		4856388	0					
ANR	4856732	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856733	Identifier	io		4856388	0					
ANR	4856734	Identifier	cb_printf		4856388	1					
ANR	4856735	ArgumentList	"""%02x"""		4856388	1					
ANR	4856736	Argument	"""%02x"""		4856388	0					
ANR	4856737	PrimaryExpression	"""%02x"""		4856388	0					
ANR	4856738	Argument	c -> odata [ i ]		4856388	1					
ANR	4856739	ArrayIndexing	c -> odata [ i ]		4856388	0					
ANR	4856740	PtrMemberAccess	c -> odata		4856388	0					
ANR	4856741	Identifier	c		4856388	0					
ANR	4856742	Identifier	odata		4856388	1					
ANR	4856743	Identifier	i		4856388	1					
ANR	4856744	ExpressionStatement	"io -> cb_printf ( "" -> "" )"	131:3:3415:3437	4856388	21	True				
ANR	4856745	CallExpression	"io -> cb_printf ( "" -> "" )"		4856388	0					
ANR	4856746	Callee	io -> cb_printf		4856388	0					
ANR	4856747	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856748	Identifier	io		4856388	0					
ANR	4856749	Identifier	cb_printf		4856388	1					
ANR	4856750	ArgumentList	""" -> """		4856388	1					
ANR	4856751	Argument	""" -> """		4856388	0					
ANR	4856752	PrimaryExpression	""" -> """		4856388	0					
ANR	4856753	ForStatement	for ( i = 0 ; i < dataSize ; i ++ )		4856388	22					
ANR	4856754	ForInit	i = 0 ;	132:8:3447:3452	4856388	0	True				
ANR	4856755	AssignmentExpression	i = 0		4856388	0		=			
ANR	4856756	Identifier	i		4856388	0					
ANR	4856757	PrimaryExpression	0		4856388	1					
ANR	4856758	Condition	i < dataSize	132:15:3454:3465	4856388	1	True				
ANR	4856759	RelationalExpression	i < dataSize		4856388	0		<			
ANR	4856760	Identifier	i		4856388	0					
ANR	4856761	Identifier	dataSize		4856388	1					
ANR	4856762	PostIncDecOperationExpression	i ++	132:29:3468:3470	4856388	2	True				
ANR	4856763	Identifier	i		4856388	0					
ANR	4856764	IncDec	++		4856388	1					
ANR	4856765	CompoundStatement		40:34:1268:1268	4856388	3					
ANR	4856766	ExpressionStatement	"io -> cb_printf ( ""%02x"" , c -> data [ i ] )"	133:4:3479:3513	4856388	0	True				
ANR	4856767	CallExpression	"io -> cb_printf ( ""%02x"" , c -> data [ i ] )"		4856388	0					
ANR	4856768	Callee	io -> cb_printf		4856388	0					
ANR	4856769	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856770	Identifier	io		4856388	0					
ANR	4856771	Identifier	cb_printf		4856388	1					
ANR	4856772	ArgumentList	"""%02x"""		4856388	1					
ANR	4856773	Argument	"""%02x"""		4856388	0					
ANR	4856774	PrimaryExpression	"""%02x"""		4856388	0					
ANR	4856775	Argument	c -> data [ i ]		4856388	1					
ANR	4856776	ArrayIndexing	c -> data [ i ]		4856388	0					
ANR	4856777	PtrMemberAccess	c -> data		4856388	0					
ANR	4856778	Identifier	c		4856388	0					
ANR	4856779	Identifier	data		4856388	1					
ANR	4856780	Identifier	i		4856388	1					
ANR	4856781	ExpressionStatement	"io -> cb_printf ( "" %s\\n"" , c -> written ? ""(written)"" : ""(not written)"" )"	135:3:3523:3588	4856388	23	True				
ANR	4856782	CallExpression	"io -> cb_printf ( "" %s\\n"" , c -> written ? ""(written)"" : ""(not written)"" )"		4856388	0					
ANR	4856783	Callee	io -> cb_printf		4856388	0					
ANR	4856784	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856785	Identifier	io		4856388	0					
ANR	4856786	Identifier	cb_printf		4856388	1					
ANR	4856787	ArgumentList	""" %s\\n"""		4856388	1					
ANR	4856788	Argument	""" %s\\n"""		4856388	0					
ANR	4856789	PrimaryExpression	""" %s\\n"""		4856388	0					
ANR	4856790	Argument	"c -> written ? ""(written)"" : ""(not written)"""		4856388	1					
ANR	4856791	ConditionalExpression	"c -> written ? ""(written)"" : ""(not written)"""		4856388	0					
ANR	4856792	Condition	c -> written		4856388	0					
ANR	4856793	PtrMemberAccess	c -> written		4856388	0					
ANR	4856794	Identifier	c		4856388	0					
ANR	4856795	Identifier	written		4856388	1					
ANR	4856796	PrimaryExpression	"""(written)"""		4856388	1					
ANR	4856797	PrimaryExpression	"""(not written)"""		4856388	2					
ANR	4856798	ExpressionStatement	j ++	137:2:3596:3599	4856388	2	True				
ANR	4856799	PostIncDecOperationExpression	j ++		4856388	0					
ANR	4856800	Identifier	j		4856388	0					
ANR	4856801	IncDec	++		4856388	1					
ANR	4856802	IfStatement	if ( rad == 2 )		4856388	15					
ANR	4856803	Condition	rad == 2	139:5:3609:3616	4856388	0	True				
ANR	4856804	EqualityExpression	rad == 2		4856388	0		==			
ANR	4856805	Identifier	rad		4856388	0					
ANR	4856806	PrimaryExpression	2		4856388	1					
ANR	4856807	CompoundStatement		47:15:1414:1414	4856388	1					
ANR	4856808	ExpressionStatement	"io -> cb_printf ( ""]\\n"" )"	140:2:3623:3644	4856388	0	True				
ANR	4856809	CallExpression	"io -> cb_printf ( ""]\\n"" )"		4856388	0					
ANR	4856810	Callee	io -> cb_printf		4856388	0					
ANR	4856811	PtrMemberAccess	io -> cb_printf		4856388	0					
ANR	4856812	Identifier	io		4856388	0					
ANR	4856813	Identifier	cb_printf		4856388	1					
ANR	4856814	ArgumentList	"""]\\n"""		4856388	1					
ANR	4856815	Argument	"""]\\n"""		4856388	0					
ANR	4856816	PrimaryExpression	"""]\\n"""		4856388	0					
ANR	4856817	ReturnStatement	return false ;	142:1:3650:3662	4856388	16	True				
ANR	4856818	Identifier	false		4856388	0					
ANR	4856819	ReturnType	R_API int		4856388	1					
ANR	4856820	Identifier	r_io_cache_list		4856388	2					
ANR	4856821	ParameterList	"RIO * io , int rad"		4856388	3					
ANR	4856822	Parameter	RIO * io	93:26:2186:2192	4856388	0	True				
ANR	4856823	ParameterType	RIO *		4856388	0					
ANR	4856824	Identifier	io		4856388	1					
ANR	4856825	Parameter	int rad	93:35:2195:2201	4856388	1	True				
ANR	4856826	ParameterType	int		4856388	0					
ANR	4856827	Identifier	rad		4856388	1					
ANR	4856828	CFGEntryNode	ENTRY		4856388		True				
ANR	4856829	CFGExitNode	EXIT		4856388		True				
ANR	4856830	Symbol	* c -> data		4856388						
ANR	4856831	Symbol	c		4856388						
ANR	4856832	Symbol	io		4856388						
ANR	4856833	Symbol	c -> itv		4856388						
ANR	4856834	Symbol	* * c		4856388						
ANR	4856835	Symbol	false		4856388						
ANR	4856836	Symbol	i		4856388						
ANR	4856837	Symbol	iter		4856388						
ANR	4856838	Symbol	dataSize		4856388						
ANR	4856839	Symbol	j		4856388						
ANR	4856840	Symbol	* c		4856388						
ANR	4856841	Symbol	c -> data		4856388						
ANR	4856842	Symbol	* c -> odata		4856388						
ANR	4856843	Symbol	* iter		4856388						
ANR	4856844	Symbol	* i		4856388						
ANR	4856845	Symbol	c -> written		4856388						
ANR	4856846	Symbol	rad		4856388						
ANR	4856847	Symbol	c -> odata		4856388						
ANR	4856848	Symbol	r_itv_size		4856388						
ANR	4856849	Symbol	iter -> n		4856388						
ANR	4856850	Function	r_io_cache_write	145:0:3667:4269							
ANR	4856851	FunctionDef	"r_io_cache_write (RIO * io , ut64 addr , const ut8 * buf , int len)"		4856850	0					
ANR	4856852	CompoundStatement		145:73:3740:4269	4856850	0					
ANR	4856853	IdentifierDeclStatement	RIOCache * ch ;	146:1:3743:3755	4856850	0	True				
ANR	4856854	IdentifierDecl	* ch		4856850	0					
ANR	4856855	IdentifierDeclType	RIOCache *		4856850	0					
ANR	4856856	Identifier	ch		4856850	1					
ANR	4856857	ExpressionStatement	ch = R_NEW0 ( RIOCache )	147:1:3758:3780	4856850	1	True				
ANR	4856858	AssignmentExpression	ch = R_NEW0 ( RIOCache )		4856850	0		=			
ANR	4856859	Identifier	ch		4856850	0					
ANR	4856860	CallExpression	R_NEW0 ( RIOCache )		4856850	1					
ANR	4856861	Callee	R_NEW0		4856850	0					
ANR	4856862	Identifier	R_NEW0		4856850	0					
ANR	4856863	ArgumentList	RIOCache		4856850	1					
ANR	4856864	Argument	RIOCache		4856850	0					
ANR	4856865	Identifier	RIOCache		4856850	0					
ANR	4856866	IfStatement	if ( ! ch )		4856850	2					
ANR	4856867	Condition	! ch	148:5:3787:3789	4856850	0	True				
ANR	4856868	UnaryOperationExpression	! ch		4856850	0					
ANR	4856869	UnaryOperator	!		4856850	0					
ANR	4856870	Identifier	ch		4856850	1					
ANR	4856871	CompoundStatement		4:10:51:51	4856850	1					
ANR	4856872	ReturnStatement	return false ;	149:2:3796:3808	4856850	0	True				
ANR	4856873	Identifier	false		4856850	0					
ANR	4856874	Statement	ch	151:1:3814:3815	4856850	3	True				
ANR	4856875	Statement	->	151:3:3816:3817	4856850	4	True				
ANR	4856876	Statement	itv	151:5:3818:3820	4856850	5	True				
ANR	4856877	Statement	=	151:9:3822:3822	4856850	6	True				
ANR	4856878	Statement	(	151:11:3824:3824	4856850	7	True				
ANR	4856879	Statement	RInterval	151:12:3825:3833	4856850	8	True				
ANR	4856880	Statement	)	151:21:3834:3834	4856850	9	True				
ANR	4856881	CompoundStatement		7:22:94:94	4856850	10					
ANR	4856882	Statement	addr	151:23:3836:3839	4856850	0	True				
ANR	4856883	Statement	","	151:27:3840:3840	4856850	1	True				
ANR	4856884	Statement	len	151:29:3842:3844	4856850	2	True				
ANR	4856885	ExpressionStatement		151:33:3846:3846	4856850	11	True				
ANR	4856886	ExpressionStatement	"ch -> odata = ( ut8 * ) calloc ( 1 , len + 1 )"	152:1:3849:3886	4856850	12	True				
ANR	4856887	AssignmentExpression	"ch -> odata = ( ut8 * ) calloc ( 1 , len + 1 )"		4856850	0		=			
ANR	4856888	PtrMemberAccess	ch -> odata		4856850	0					
ANR	4856889	Identifier	ch		4856850	0					
ANR	4856890	Identifier	odata		4856850	1					
ANR	4856891	CastExpression	"( ut8 * ) calloc ( 1 , len + 1 )"		4856850	1					
ANR	4856892	CastTarget	ut8 *		4856850	0					
ANR	4856893	CallExpression	"calloc ( 1 , len + 1 )"		4856850	1					
ANR	4856894	Callee	calloc		4856850	0					
ANR	4856895	Identifier	calloc		4856850	0					
ANR	4856896	ArgumentList	1		4856850	1					
ANR	4856897	Argument	1		4856850	0					
ANR	4856898	PrimaryExpression	1		4856850	0					
ANR	4856899	Argument	len + 1		4856850	1					
ANR	4856900	AdditiveExpression	len + 1		4856850	0		+			
ANR	4856901	Identifier	len		4856850	0					
ANR	4856902	PrimaryExpression	1		4856850	1					
ANR	4856903	IfStatement	if ( ! ch -> odata )		4856850	13					
ANR	4856904	Condition	! ch -> odata	153:5:3893:3902	4856850	0	True				
ANR	4856905	UnaryOperationExpression	! ch -> odata		4856850	0					
ANR	4856906	UnaryOperator	!		4856850	0					
ANR	4856907	PtrMemberAccess	ch -> odata		4856850	1					
ANR	4856908	Identifier	ch		4856850	0					
ANR	4856909	Identifier	odata		4856850	1					
ANR	4856910	CompoundStatement		9:17:164:164	4856850	1					
ANR	4856911	ExpressionStatement	free ( ch )	154:2:3909:3918	4856850	0	True				
ANR	4856912	CallExpression	free ( ch )		4856850	0					
ANR	4856913	Callee	free		4856850	0					
ANR	4856914	Identifier	free		4856850	0					
ANR	4856915	ArgumentList	ch		4856850	1					
ANR	4856916	Argument	ch		4856850	0					
ANR	4856917	Identifier	ch		4856850	0					
ANR	4856918	ReturnStatement	return false ;	155:2:3922:3934	4856850	1	True				
ANR	4856919	Identifier	false		4856850	0					
ANR	4856920	ExpressionStatement	"ch -> data = ( ut8 * ) calloc ( 1 , len + 1 )"	157:1:3940:3976	4856850	14	True				
ANR	4856921	AssignmentExpression	"ch -> data = ( ut8 * ) calloc ( 1 , len + 1 )"		4856850	0		=			
ANR	4856922	PtrMemberAccess	ch -> data		4856850	0					
ANR	4856923	Identifier	ch		4856850	0					
ANR	4856924	Identifier	data		4856850	1					
ANR	4856925	CastExpression	"( ut8 * ) calloc ( 1 , len + 1 )"		4856850	1					
ANR	4856926	CastTarget	ut8 *		4856850	0					
ANR	4856927	CallExpression	"calloc ( 1 , len + 1 )"		4856850	1					
ANR	4856928	Callee	calloc		4856850	0					
ANR	4856929	Identifier	calloc		4856850	0					
ANR	4856930	ArgumentList	1		4856850	1					
ANR	4856931	Argument	1		4856850	0					
ANR	4856932	PrimaryExpression	1		4856850	0					
ANR	4856933	Argument	len + 1		4856850	1					
ANR	4856934	AdditiveExpression	len + 1		4856850	0		+			
ANR	4856935	Identifier	len		4856850	0					
ANR	4856936	PrimaryExpression	1		4856850	1					
ANR	4856937	IfStatement	if ( ! ch -> data )		4856850	15					
ANR	4856938	Condition	! ch -> data	158:5:3983:3991	4856850	0	True				
ANR	4856939	UnaryOperationExpression	! ch -> data		4856850	0					
ANR	4856940	UnaryOperator	!		4856850	0					
ANR	4856941	PtrMemberAccess	ch -> data		4856850	1					
ANR	4856942	Identifier	ch		4856850	0					
ANR	4856943	Identifier	data		4856850	1					
ANR	4856944	CompoundStatement		14:16:253:253	4856850	1					
ANR	4856945	ExpressionStatement	free ( ch -> odata )	159:2:3998:4014	4856850	0	True				
ANR	4856946	CallExpression	free ( ch -> odata )		4856850	0					
ANR	4856947	Callee	free		4856850	0					
ANR	4856948	Identifier	free		4856850	0					
ANR	4856949	ArgumentList	ch -> odata		4856850	1					
ANR	4856950	Argument	ch -> odata		4856850	0					
ANR	4856951	PtrMemberAccess	ch -> odata		4856850	0					
ANR	4856952	Identifier	ch		4856850	0					
ANR	4856953	Identifier	odata		4856850	1					
ANR	4856954	ExpressionStatement	free ( ch )	160:2:4018:4027	4856850	1	True				
ANR	4856955	CallExpression	free ( ch )		4856850	0					
ANR	4856956	Callee	free		4856850	0					
ANR	4856957	Identifier	free		4856850	0					
ANR	4856958	ArgumentList	ch		4856850	1					
ANR	4856959	Argument	ch		4856850	0					
ANR	4856960	Identifier	ch		4856850	0					
ANR	4856961	ReturnStatement	return false ;	161:2:4031:4043	4856850	2	True				
ANR	4856962	Identifier	false		4856850	0					
ANR	4856963	ExpressionStatement	ch -> written = false	163:1:4049:4068	4856850	16	True				
ANR	4856964	AssignmentExpression	ch -> written = false		4856850	0		=			
ANR	4856965	PtrMemberAccess	ch -> written		4856850	0					
ANR	4856966	Identifier	ch		4856850	0					
ANR	4856967	Identifier	written		4856850	1					
ANR	4856968	Identifier	false		4856850	1					
ANR	4856969	CompoundStatement		21:2:334:357	4856850	17					
ANR	4856970	IdentifierDeclStatement	bool cm = io -> cachemode ;	165:2:4075:4098	4856850	0	True				
ANR	4856971	IdentifierDecl	cm = io -> cachemode		4856850	0					
ANR	4856972	IdentifierDeclType	bool		4856850	0					
ANR	4856973	Identifier	cm		4856850	1					
ANR	4856974	AssignmentExpression	cm = io -> cachemode		4856850	2		=			
ANR	4856975	Identifier	cm		4856850	0					
ANR	4856976	PtrMemberAccess	io -> cachemode		4856850	1					
ANR	4856977	Identifier	io		4856850	0					
ANR	4856978	Identifier	cachemode		4856850	1					
ANR	4856979	ExpressionStatement	io -> cachemode = false	166:2:4102:4123	4856850	1	True				
ANR	4856980	AssignmentExpression	io -> cachemode = false		4856850	0		=			
ANR	4856981	PtrMemberAccess	io -> cachemode		4856850	0					
ANR	4856982	Identifier	io		4856850	0					
ANR	4856983	Identifier	cachemode		4856850	1					
ANR	4856984	Identifier	false		4856850	1					
ANR	4856985	ExpressionStatement	"r_io_read_at ( io , addr , ch -> odata , len )"	167:2:4127:4166	4856850	2	True				
ANR	4856986	CallExpression	"r_io_read_at ( io , addr , ch -> odata , len )"		4856850	0					
ANR	4856987	Callee	r_io_read_at		4856850	0					
ANR	4856988	Identifier	r_io_read_at		4856850	0					
ANR	4856989	ArgumentList	io		4856850	1					
ANR	4856990	Argument	io		4856850	0					
ANR	4856991	Identifier	io		4856850	0					
ANR	4856992	Argument	addr		4856850	1					
ANR	4856993	Identifier	addr		4856850	0					
ANR	4856994	Argument	ch -> odata		4856850	2					
ANR	4856995	PtrMemberAccess	ch -> odata		4856850	0					
ANR	4856996	Identifier	ch		4856850	0					
ANR	4856997	Identifier	odata		4856850	1					
ANR	4856998	Argument	len		4856850	3					
ANR	4856999	Identifier	len		4856850	0					
ANR	4857000	ExpressionStatement	io -> cachemode = cm	168:2:4170:4188	4856850	3	True				
ANR	4857001	AssignmentExpression	io -> cachemode = cm		4856850	0		=			
ANR	4857002	PtrMemberAccess	io -> cachemode		4856850	0					
ANR	4857003	Identifier	io		4856850	0					
ANR	4857004	Identifier	cachemode		4856850	1					
ANR	4857005	Identifier	cm		4856850	1					
ANR	4857006	ExpressionStatement	"memcpy ( ch -> data , buf , len )"	170:1:4194:4221	4856850	18	True				
ANR	4857007	CallExpression	"memcpy ( ch -> data , buf , len )"		4856850	0					
ANR	4857008	Callee	memcpy		4856850	0					
ANR	4857009	Identifier	memcpy		4856850	0					
ANR	4857010	ArgumentList	ch -> data		4856850	1					
ANR	4857011	Argument	ch -> data		4856850	0					
ANR	4857012	PtrMemberAccess	ch -> data		4856850	0					
ANR	4857013	Identifier	ch		4856850	0					
ANR	4857014	Identifier	data		4856850	1					
ANR	4857015	Argument	buf		4856850	1					
ANR	4857016	Identifier	buf		4856850	0					
ANR	4857017	Argument	len		4856850	2					
ANR	4857018	Identifier	len		4856850	0					
ANR	4857019	ExpressionStatement	"r_list_append ( io -> cache , ch )"	171:1:4224:4253	4856850	19	True				
ANR	4857020	CallExpression	"r_list_append ( io -> cache , ch )"		4856850	0					
ANR	4857021	Callee	r_list_append		4856850	0					
ANR	4857022	Identifier	r_list_append		4856850	0					
ANR	4857023	ArgumentList	io -> cache		4856850	1					
ANR	4857024	Argument	io -> cache		4856850	0					
ANR	4857025	PtrMemberAccess	io -> cache		4856850	0					
ANR	4857026	Identifier	io		4856850	0					
ANR	4857027	Identifier	cache		4856850	1					
ANR	4857028	Argument	ch		4856850	1					
ANR	4857029	Identifier	ch		4856850	0					
ANR	4857030	ReturnStatement	return true ;	172:1:4256:4267	4856850	20	True				
ANR	4857031	Identifier	true		4856850	0					
ANR	4857032	ReturnType	R_API bool		4856850	1					
ANR	4857033	Identifier	r_io_cache_write		4856850	2					
ANR	4857034	ParameterList	"RIO * io , ut64 addr , const ut8 * buf , int len"		4856850	3					
ANR	4857035	Parameter	RIO * io	145:28:3695:3701	4856850	0	True				
ANR	4857036	ParameterType	RIO *		4856850	0					
ANR	4857037	Identifier	io		4856850	1					
ANR	4857038	Parameter	ut64 addr	145:37:3704:3712	4856850	1	True				
ANR	4857039	ParameterType	ut64		4856850	0					
ANR	4857040	Identifier	addr		4856850	1					
ANR	4857041	Parameter	const ut8 * buf	145:48:3715:3728	4856850	2	True				
ANR	4857042	ParameterType	const ut8 *		4856850	0					
ANR	4857043	Identifier	buf		4856850	1					
ANR	4857044	Parameter	int len	145:64:3731:3737	4856850	3	True				
ANR	4857045	ParameterType	int		4856850	0					
ANR	4857046	Identifier	len		4856850	1					
ANR	4857047	CFGEntryNode	ENTRY		4856850		True				
ANR	4857048	CFGExitNode	EXIT		4856850		True				
ANR	4857049	Symbol	ch		4856850						
ANR	4857050	Symbol	io		4856850						
ANR	4857051	Symbol	false		4856850						
ANR	4857052	Symbol	* ch		4856850						
ANR	4857053	Symbol	cm		4856850						
ANR	4857054	Symbol	calloc		4856850						
ANR	4857055	Symbol	io -> cache		4856850						
ANR	4857056	Symbol	ch -> data		4856850						
ANR	4857057	Symbol	* io		4856850						
ANR	4857058	Symbol	R_NEW0		4856850						
ANR	4857059	Symbol	io -> cachemode		4856850						
ANR	4857060	Symbol	buf		4856850						
ANR	4857061	Symbol	len		4856850						
ANR	4857062	Symbol	ch -> odata		4856850						
ANR	4857063	Symbol	true		4856850						
ANR	4857064	Symbol	RIOCache		4856850						
ANR	4857065	Symbol	ch -> written		4856850						
ANR	4857066	Symbol	addr		4856850						
ANR	4857067	Function	r_io_cache_read	175:0:4272:4857							
ANR	4857068	FunctionDef	"r_io_cache_read (RIO * io , ut64 addr , ut8 * buf , int len)"		4857067	0					
ANR	4857069	CompoundStatement		175:66:4338:4857	4857067	0					
ANR	4857070	IdentifierDeclStatement	"int l , covered = 0 ;"	176:1:4341:4359	4857067	0	True				
ANR	4857071	IdentifierDecl	l		4857067	0					
ANR	4857072	IdentifierDeclType	int		4857067	0					
ANR	4857073	Identifier	l		4857067	1					
ANR	4857074	IdentifierDecl	covered = 0		4857067	1					
ANR	4857075	IdentifierDeclType	int		4857067	0					
ANR	4857076	Identifier	covered		4857067	1					
ANR	4857077	AssignmentExpression	covered = 0		4857067	2		=			
ANR	4857078	Identifier	covered		4857067	0					
ANR	4857079	PrimaryExpression	0		4857067	1					
ANR	4857080	IdentifierDeclStatement	RListIter * iter ;	177:1:4362:4377	4857067	1	True				
ANR	4857081	IdentifierDecl	* iter		4857067	0					
ANR	4857082	IdentifierDeclType	RListIter *		4857067	0					
ANR	4857083	Identifier	iter		4857067	1					
ANR	4857084	IdentifierDeclStatement	RIOCache * c ;	178:1:4380:4391	4857067	2	True				
ANR	4857085	IdentifierDecl	* c		4857067	0					
ANR	4857086	IdentifierDeclType	RIOCache *		4857067	0					
ANR	4857087	Identifier	c		4857067	1					
ANR	4857088	Statement	RInterval	179:1:4394:4402	4857067	3	True				
ANR	4857089	Statement	range	179:11:4404:4408	4857067	4	True				
ANR	4857090	Statement	=	179:17:4410:4410	4857067	5	True				
ANR	4857091	Statement	(	179:19:4412:4412	4857067	6	True				
ANR	4857092	Statement	RInterval	179:20:4413:4421	4857067	7	True				
ANR	4857093	Statement	)	179:29:4422:4422	4857067	8	True				
ANR	4857094	CompoundStatement		5:30:84:84	4857067	9					
ANR	4857095	Statement	addr	179:32:4425:4428	4857067	0	True				
ANR	4857096	Statement	","	179:36:4429:4429	4857067	1	True				
ANR	4857097	Statement	len	179:38:4431:4433	4857067	2	True				
ANR	4857098	ExpressionStatement		179:43:4436:4436	4857067	10	True				
ANR	4857099	Statement	r_list_foreach	180:1:4439:4452	4857067	11	True				
ANR	4857100	Statement	(	180:16:4454:4454	4857067	12	True				
ANR	4857101	Statement	io	180:17:4455:4456	4857067	13	True				
ANR	4857102	Statement	->	180:19:4457:4458	4857067	14	True				
ANR	4857103	Statement	cache	180:21:4459:4463	4857067	15	True				
ANR	4857104	Statement	","	180:26:4464:4464	4857067	16	True				
ANR	4857105	Statement	iter	180:28:4466:4469	4857067	17	True				
ANR	4857106	Statement	","	180:32:4470:4470	4857067	18	True				
ANR	4857107	Statement	c	180:34:4472:4472	4857067	19	True				
ANR	4857108	Statement	)	180:35:4473:4473	4857067	20	True				
ANR	4857109	CompoundStatement		6:37:136:136	4857067	21					
ANR	4857110	IfStatement	"if ( r_itv_overlap ( c -> itv , range ) )"		4857067	0					
ANR	4857111	Condition	"r_itv_overlap ( c -> itv , range )"	181:6:4483:4511	4857067	0	True				
ANR	4857112	CallExpression	"r_itv_overlap ( c -> itv , range )"		4857067	0					
ANR	4857113	Callee	r_itv_overlap		4857067	0					
ANR	4857114	Identifier	r_itv_overlap		4857067	0					
ANR	4857115	ArgumentList	c -> itv		4857067	1					
ANR	4857116	Argument	c -> itv		4857067	0					
ANR	4857117	PtrMemberAccess	c -> itv		4857067	0					
ANR	4857118	Identifier	c		4857067	0					
ANR	4857119	Identifier	itv		4857067	1					
ANR	4857120	Argument	range		4857067	1					
ANR	4857121	Identifier	range		4857067	0					
ANR	4857122	CompoundStatement		8:3:180:219	4857067	1					
ANR	4857123	IdentifierDeclStatement	const ut64 begin = r_itv_begin ( c -> itv ) ;	182:3:4519:4558	4857067	0	True				
ANR	4857124	IdentifierDecl	begin = r_itv_begin ( c -> itv )		4857067	0					
ANR	4857125	IdentifierDeclType	const ut64		4857067	0					
ANR	4857126	Identifier	begin		4857067	1					
ANR	4857127	AssignmentExpression	begin = r_itv_begin ( c -> itv )		4857067	2		=			
ANR	4857128	Identifier	begin		4857067	0					
ANR	4857129	CallExpression	r_itv_begin ( c -> itv )		4857067	1					
ANR	4857130	Callee	r_itv_begin		4857067	0					
ANR	4857131	Identifier	r_itv_begin		4857067	0					
ANR	4857132	ArgumentList	c -> itv		4857067	1					
ANR	4857133	Argument	c -> itv		4857067	0					
ANR	4857134	PtrMemberAccess	c -> itv		4857067	0					
ANR	4857135	Identifier	c		4857067	0					
ANR	4857136	Identifier	itv		4857067	1					
ANR	4857137	IfStatement	if ( addr < begin )		4857067	1					
ANR	4857138	Condition	addr < begin	183:7:4567:4578	4857067	0	True				
ANR	4857139	RelationalExpression	addr < begin		4857067	0		<			
ANR	4857140	Identifier	addr		4857067	0					
ANR	4857141	Identifier	begin		4857067	1					
ANR	4857142	CompoundStatement		9:21:242:242	4857067	1					
ANR	4857143	ExpressionStatement	"l = R_MIN ( addr + len - begin , r_itv_size ( c -> itv ) )"	184:4:4587:4638	4857067	0	True				
ANR	4857144	AssignmentExpression	"l = R_MIN ( addr + len - begin , r_itv_size ( c -> itv ) )"		4857067	0		=			
ANR	4857145	Identifier	l		4857067	0					
ANR	4857146	CallExpression	"R_MIN ( addr + len - begin , r_itv_size ( c -> itv ) )"		4857067	1					
ANR	4857147	Callee	R_MIN		4857067	0					
ANR	4857148	Identifier	R_MIN		4857067	0					
ANR	4857149	ArgumentList	addr + len - begin		4857067	1					
ANR	4857150	Argument	addr + len - begin		4857067	0					
ANR	4857151	AdditiveExpression	addr + len - begin		4857067	0		+			
ANR	4857152	Identifier	addr		4857067	0					
ANR	4857153	AdditiveExpression	len - begin		4857067	1		-			
ANR	4857154	Identifier	len		4857067	0					
ANR	4857155	Identifier	begin		4857067	1					
ANR	4857156	Argument	r_itv_size ( c -> itv )		4857067	1					
ANR	4857157	CallExpression	r_itv_size ( c -> itv )		4857067	0					
ANR	4857158	Callee	r_itv_size		4857067	0					
ANR	4857159	Identifier	r_itv_size		4857067	0					
ANR	4857160	ArgumentList	c -> itv		4857067	1					
ANR	4857161	Argument	c -> itv		4857067	0					
ANR	4857162	PtrMemberAccess	c -> itv		4857067	0					
ANR	4857163	Identifier	c		4857067	0					
ANR	4857164	Identifier	itv		4857067	1					
ANR	4857165	ExpressionStatement	"memcpy ( buf + begin - addr , c -> data , l )"	185:4:4644:4683	4857067	1	True				
ANR	4857166	CallExpression	"memcpy ( buf + begin - addr , c -> data , l )"		4857067	0					
ANR	4857167	Callee	memcpy		4857067	0					
ANR	4857168	Identifier	memcpy		4857067	0					
ANR	4857169	ArgumentList	buf + begin - addr		4857067	1					
ANR	4857170	Argument	buf + begin - addr		4857067	0					
ANR	4857171	AdditiveExpression	buf + begin - addr		4857067	0		+			
ANR	4857172	Identifier	buf		4857067	0					
ANR	4857173	AdditiveExpression	begin - addr		4857067	1		-			
ANR	4857174	Identifier	begin		4857067	0					
ANR	4857175	Identifier	addr		4857067	1					
ANR	4857176	Argument	c -> data		4857067	1					
ANR	4857177	PtrMemberAccess	c -> data		4857067	0					
ANR	4857178	Identifier	c		4857067	0					
ANR	4857179	Identifier	data		4857067	1					
ANR	4857180	Argument	l		4857067	2					
ANR	4857181	Identifier	l		4857067	0					
ANR	4857182	ElseStatement	else		4857067	0					
ANR	4857183	CompoundStatement		12:10:356:356	4857067	0					
ANR	4857184	ExpressionStatement	"l = R_MIN ( r_itv_end ( c -> itv ) - addr , len )"	187:4:4701:4743	4857067	0	True				
ANR	4857185	AssignmentExpression	"l = R_MIN ( r_itv_end ( c -> itv ) - addr , len )"		4857067	0		=			
ANR	4857186	Identifier	l		4857067	0					
ANR	4857187	CallExpression	"R_MIN ( r_itv_end ( c -> itv ) - addr , len )"		4857067	1					
ANR	4857188	Callee	R_MIN		4857067	0					
ANR	4857189	Identifier	R_MIN		4857067	0					
ANR	4857190	ArgumentList	r_itv_end ( c -> itv ) - addr		4857067	1					
ANR	4857191	Argument	r_itv_end ( c -> itv ) - addr		4857067	0					
ANR	4857192	AdditiveExpression	r_itv_end ( c -> itv ) - addr		4857067	0		-			
ANR	4857193	CallExpression	r_itv_end ( c -> itv )		4857067	0					
ANR	4857194	Callee	r_itv_end		4857067	0					
ANR	4857195	Identifier	r_itv_end		4857067	0					
ANR	4857196	ArgumentList	c -> itv		4857067	1					
ANR	4857197	Argument	c -> itv		4857067	0					
ANR	4857198	PtrMemberAccess	c -> itv		4857067	0					
ANR	4857199	Identifier	c		4857067	0					
ANR	4857200	Identifier	itv		4857067	1					
ANR	4857201	Identifier	addr		4857067	1					
ANR	4857202	Argument	len		4857067	1					
ANR	4857203	Identifier	len		4857067	0					
ANR	4857204	ExpressionStatement	"memcpy ( buf , c -> data + addr - begin , l )"	188:4:4749:4788	4857067	1	True				
ANR	4857205	CallExpression	"memcpy ( buf , c -> data + addr - begin , l )"		4857067	0					
ANR	4857206	Callee	memcpy		4857067	0					
ANR	4857207	Identifier	memcpy		4857067	0					
ANR	4857208	ArgumentList	buf		4857067	1					
ANR	4857209	Argument	buf		4857067	0					
ANR	4857210	Identifier	buf		4857067	0					
ANR	4857211	Argument	c -> data + addr - begin		4857067	1					
ANR	4857212	AdditiveExpression	c -> data + addr - begin		4857067	0		+			
ANR	4857213	PtrMemberAccess	c -> data		4857067	0					
ANR	4857214	Identifier	c		4857067	0					
ANR	4857215	Identifier	data		4857067	1					
ANR	4857216	AdditiveExpression	addr - begin		4857067	1		-			
ANR	4857217	Identifier	addr		4857067	0					
ANR	4857218	Identifier	begin		4857067	1					
ANR	4857219	Argument	l		4857067	2					
ANR	4857220	Identifier	l		4857067	0					
ANR	4857221	ExpressionStatement	covered += l	190:3:4798:4810	4857067	2	True				
ANR	4857222	AssignmentExpression	covered += l		4857067	0		+=			
ANR	4857223	Identifier	covered		4857067	0					
ANR	4857224	Identifier	l		4857067	1					
ANR	4857225	ReturnStatement	return ( covered == 0 ) ? false : true ;	193:1:4820:4855	4857067	22	True				
ANR	4857226	ConditionalExpression	( covered == 0 ) ? false : true		4857067	0					
ANR	4857227	Condition	covered == 0		4857067	0					
ANR	4857228	EqualityExpression	covered == 0		4857067	0		==			
ANR	4857229	Identifier	covered		4857067	0					
ANR	4857230	PrimaryExpression	0		4857067	1					
ANR	4857231	Identifier	false		4857067	1					
ANR	4857232	Identifier	true		4857067	2					
ANR	4857233	ReturnType	R_API bool		4857067	1					
ANR	4857234	Identifier	r_io_cache_read		4857067	2					
ANR	4857235	ParameterList	"RIO * io , ut64 addr , ut8 * buf , int len"		4857067	3					
ANR	4857236	Parameter	RIO * io	175:27:4299:4305	4857067	0	True				
ANR	4857237	ParameterType	RIO *		4857067	0					
ANR	4857238	Identifier	io		4857067	1					
ANR	4857239	Parameter	ut64 addr	175:36:4308:4316	4857067	1	True				
ANR	4857240	ParameterType	ut64		4857067	0					
ANR	4857241	Identifier	addr		4857067	1					
ANR	4857242	Parameter	ut8 * buf	175:47:4319:4326	4857067	2	True				
ANR	4857243	ParameterType	ut8 *		4857067	0					
ANR	4857244	Identifier	buf		4857067	1					
ANR	4857245	Parameter	int len	175:57:4329:4335	4857067	3	True				
ANR	4857246	ParameterType	int		4857067	0					
ANR	4857247	Identifier	len		4857067	1					
ANR	4857248	CFGEntryNode	ENTRY		4857067		True				
ANR	4857249	CFGExitNode	EXIT		4857067		True				
ANR	4857250	Symbol	c		4857067						
ANR	4857251	Symbol	io		4857067						
ANR	4857252	Symbol	c -> itv		4857067						
ANR	4857253	Symbol	false		4857067						
ANR	4857254	Symbol	iter		4857067						
ANR	4857255	Symbol	range		4857067						
ANR	4857256	Symbol	r_itv_begin		4857067						
ANR	4857257	Symbol	R_MIN		4857067						
ANR	4857258	Symbol	l		4857067						
ANR	4857259	Symbol	* c		4857067						
ANR	4857260	Symbol	r_itv_overlap		4857067						
ANR	4857261	Symbol	c -> data		4857067						
ANR	4857262	Symbol	r_itv_end		4857067						
ANR	4857263	Symbol	buf		4857067						
ANR	4857264	Symbol	len		4857067						
ANR	4857265	Symbol	r_itv_size		4857067						
ANR	4857266	Symbol	covered		4857067						
ANR	4857267	Symbol	true		4857067						
ANR	4857268	Symbol	addr		4857067						
ANR	4857269	Symbol	begin		4857067						
ANR	4857270	Function	r_io_cache_ll_read	198:0:4935:5032							
ANR	4857271	FunctionDef	"r_io_cache_ll_read (RIO * io , ut64 addr , ut8 * buf , int len)"		4857270	0					
ANR	4857272	CompoundStatement		198:69:5004:5032	4857270	0					
ANR	4857273	ReturnType	R_API bool		4857270	1					
ANR	4857274	Identifier	r_io_cache_ll_read		4857270	2					
ANR	4857275	ParameterList	"RIO * io , ut64 addr , ut8 * buf , int len"		4857270	3					
ANR	4857276	Parameter	RIO * io	198:30:4965:4971	4857270	0	True				
ANR	4857277	ParameterType	RIO *		4857270	0					
ANR	4857278	Identifier	io		4857270	1					
ANR	4857279	Parameter	ut64 addr	198:39:4974:4982	4857270	1	True				
ANR	4857280	ParameterType	ut64		4857270	0					
ANR	4857281	Identifier	addr		4857270	1					
ANR	4857282	Parameter	ut8 * buf	198:50:4985:4992	4857270	2	True				
ANR	4857283	ParameterType	ut8 *		4857270	0					
ANR	4857284	Identifier	buf		4857270	1					
ANR	4857285	Parameter	int len	198:60:4995:5001	4857270	3	True				
ANR	4857286	ParameterType	int		4857270	0					
ANR	4857287	Identifier	len		4857270	1					
ANR	4857288	CFGEntryNode	ENTRY		4857270		True				
ANR	4857289	CFGExitNode	EXIT		4857270		True				
ANR	4857290	Symbol	buf		4857270						
ANR	4857291	Symbol	len		4857270						
ANR	4857292	Symbol	io		4857270						
ANR	4857293	Symbol	addr		4857270						
ANR	4857294	Function	r_io_cache_ll_write	202:0:5035:5107							
ANR	4857295	FunctionDef	"r_io_cache_ll_write (RIO * io , ut64 addr , ut8 * buf , int len)"		4857294	0					
ANR	4857296	CompoundStatement		202:70:5105:5107	4857294	0					
ANR	4857297	ReturnType	R_API bool		4857294	1					
ANR	4857298	Identifier	r_io_cache_ll_write		4857294	2					
ANR	4857299	ParameterList	"RIO * io , ut64 addr , ut8 * buf , int len"		4857294	3					
ANR	4857300	Parameter	RIO * io	202:31:5066:5072	4857294	0	True				
ANR	4857301	ParameterType	RIO *		4857294	0					
ANR	4857302	Identifier	io		4857294	1					
ANR	4857303	Parameter	ut64 addr	202:40:5075:5083	4857294	1	True				
ANR	4857304	ParameterType	ut64		4857294	0					
ANR	4857305	Identifier	addr		4857294	1					
ANR	4857306	Parameter	ut8 * buf	202:51:5086:5093	4857294	2	True				
ANR	4857307	ParameterType	ut8 *		4857294	0					
ANR	4857308	Identifier	buf		4857294	1					
ANR	4857309	Parameter	int len	202:61:5096:5102	4857294	3	True				
ANR	4857310	ParameterType	int		4857294	0					
ANR	4857311	Identifier	len		4857294	1					
ANR	4857312	CFGEntryNode	ENTRY		4857294		True				
ANR	4857313	CFGExitNode	EXIT		4857294		True				
ANR	4857314	Symbol	buf		4857294						
ANR	4857315	Symbol	len		4857294						
ANR	4857316	Symbol	io		4857294						
ANR	4857317	Symbol	addr		4857294						
ANR	4857318	Function	r_io_cache_ll_invalidate	205:0:5110:5177							
ANR	4857319	FunctionDef	"r_io_cache_ll_invalidate (RIO * io , ut64 addr , int len)"		4857318	0					
ANR	4857320	CompoundStatement		205:65:5175:5177	4857318	0					
ANR	4857321	ReturnType	R_API bool		4857318	1					
ANR	4857322	Identifier	r_io_cache_ll_invalidate		4857318	2					
ANR	4857323	ParameterList	"RIO * io , ut64 addr , int len"		4857318	3					
ANR	4857324	Parameter	RIO * io	205:36:5146:5152	4857318	0	True				
ANR	4857325	ParameterType	RIO *		4857318	0					
ANR	4857326	Identifier	io		4857318	1					
ANR	4857327	Parameter	ut64 addr	205:45:5155:5163	4857318	1	True				
ANR	4857328	ParameterType	ut64		4857318	0					
ANR	4857329	Identifier	addr		4857318	1					
ANR	4857330	Parameter	int len	205:56:5166:5172	4857318	2	True				
ANR	4857331	ParameterType	int		4857318	0					
ANR	4857332	Identifier	len		4857318	1					
ANR	4857333	CFGEntryNode	ENTRY		4857318		True				
ANR	4857334	CFGExitNode	EXIT		4857318		True				
ANR	4857335	Symbol	len		4857318						
ANR	4857336	Symbol	io		4857318						
ANR	4857337	Symbol	addr		4857318						
