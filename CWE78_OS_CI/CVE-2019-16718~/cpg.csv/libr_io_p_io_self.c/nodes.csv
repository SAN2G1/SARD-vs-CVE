command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4914261	File	data/converged/CVE-2019-16718~_radare2/libr_io_p_io_self.c								
ANR	4914262	DeclStmt									
ANR	4914263	Decl							void	"void ( RIO * io , task_t task , mach_vm_address_t address , int max )"	macosx_debug_regions
ANR	4914264	DeclStmt									
ANR	4914265	Decl							bool	"bool ( RIO * io , int pid )"	bsd_proc_vmmaps
ANR	4914266	ClassDef	<unnamed>	42:8:971:1042							
ANR	4914267	DeclStmt									
ANR	4914268	Decl							char	char *	name
ANR	4914269	DeclStmt									
ANR	4914270	Decl							ut64	ut64	from
ANR	4914271	DeclStmt									
ANR	4914272	Decl							ut64	ut64	to
ANR	4914273	DeclStmt									
ANR	4914274	Decl							int	int	perm
ANR	4914275	DeclStmt									
ANR	4914276	Decl									RIOSelfSection
ANR	4914277	DeclStmt									
ANR	4914278	Decl							RIOSelfSection	RIOSelfSection [ 1024 ]	self_sections
ANR	4914279	DeclStmt									
ANR	4914280	Decl							int	int	self_sections_count
ANR	4914281	DeclStmt									
ANR	4914282	Decl							bool	bool	mameio
ANR	4914283	Function	self_in_section	53:0:1153:1497							
ANR	4914284	FunctionDef	"self_in_section (RIO * io , ut64 addr , int * left , int * perm)"		4914283	0					
ANR	4914285	CompoundStatement		53:69:1222:1497	4914283	0					
ANR	4914286	IdentifierDeclStatement	int i ;	54:1:1225:1230	4914283	0	True				
ANR	4914287	IdentifierDecl	i		4914283	0					
ANR	4914288	IdentifierDeclType	int		4914283	0					
ANR	4914289	Identifier	i		4914283	1					
ANR	4914290	ForStatement	for ( i = 0 ; i < self_sections_count ; i ++ )		4914283	1					
ANR	4914291	ForInit	i = 0 ;	55:6:1238:1243	4914283	0	True				
ANR	4914292	AssignmentExpression	i = 0		4914283	0		=			
ANR	4914293	Identifier	i		4914283	0					
ANR	4914294	PrimaryExpression	0		4914283	1					
ANR	4914295	Condition	i < self_sections_count	55:13:1245:1267	4914283	1	True				
ANR	4914296	RelationalExpression	i < self_sections_count		4914283	0		<			
ANR	4914297	Identifier	i		4914283	0					
ANR	4914298	Identifier	self_sections_count		4914283	1					
ANR	4914299	PostIncDecOperationExpression	i ++	55:38:1270:1272	4914283	2	True				
ANR	4914300	Identifier	i		4914283	0					
ANR	4914301	IncDec	++		4914283	1					
ANR	4914302	CompoundStatement		3:43:52:52	4914283	3					
ANR	4914303	IfStatement	if ( addr >= self_sections [ i ] . from && addr < self_sections [ i ] . to )		4914283	0					
ANR	4914304	Condition	addr >= self_sections [ i ] . from && addr < self_sections [ i ] . to	56:6:1283:1341	4914283	0	True				
ANR	4914305	AndExpression	addr >= self_sections [ i ] . from && addr < self_sections [ i ] . to		4914283	0		&&			
ANR	4914306	RelationalExpression	addr >= self_sections [ i ] . from		4914283	0		>=			
ANR	4914307	Identifier	addr		4914283	0					
ANR	4914308	MemberAccess	self_sections [ i ] . from		4914283	1					
ANR	4914309	ArrayIndexing	self_sections [ i ]		4914283	0					
ANR	4914310	Identifier	self_sections		4914283	0					
ANR	4914311	Identifier	i		4914283	1					
ANR	4914312	Identifier	from		4914283	1					
ANR	4914313	RelationalExpression	addr < self_sections [ i ] . to		4914283	1		<			
ANR	4914314	Identifier	addr		4914283	0					
ANR	4914315	MemberAccess	self_sections [ i ] . to		4914283	1					
ANR	4914316	ArrayIndexing	self_sections [ i ]		4914283	0					
ANR	4914317	Identifier	self_sections		4914283	0					
ANR	4914318	Identifier	i		4914283	1					
ANR	4914319	Identifier	to		4914283	1					
ANR	4914320	CompoundStatement		4:67:121:121	4914283	1					
ANR	4914321	IfStatement	if ( left )		4914283	0					
ANR	4914322	Condition	left	57:7:1353:1356	4914283	0	True				
ANR	4914323	Identifier	left		4914283	0					
ANR	4914324	CompoundStatement		5:13:136:136	4914283	1					
ANR	4914325	ExpressionStatement	* left = self_sections [ i ] . to - addr	58:4:1365:1397	4914283	0	True				
ANR	4914326	AssignmentExpression	* left = self_sections [ i ] . to - addr		4914283	0		=			
ANR	4914327	UnaryOperationExpression	* left		4914283	0					
ANR	4914328	UnaryOperator	*		4914283	0					
ANR	4914329	Identifier	left		4914283	1					
ANR	4914330	AdditiveExpression	self_sections [ i ] . to - addr		4914283	1		-			
ANR	4914331	MemberAccess	self_sections [ i ] . to		4914283	0					
ANR	4914332	ArrayIndexing	self_sections [ i ]		4914283	0					
ANR	4914333	Identifier	self_sections		4914283	0					
ANR	4914334	Identifier	i		4914283	1					
ANR	4914335	Identifier	to		4914283	1					
ANR	4914336	Identifier	addr		4914283	1					
ANR	4914337	IfStatement	if ( perm )		4914283	1					
ANR	4914338	Condition	perm	60:7:1411:1414	4914283	0	True				
ANR	4914339	Identifier	perm		4914283	0					
ANR	4914340	CompoundStatement		8:13:194:194	4914283	1					
ANR	4914341	ExpressionStatement	* perm = self_sections [ i ] . perm	61:4:1423:1452	4914283	0	True				
ANR	4914342	AssignmentExpression	* perm = self_sections [ i ] . perm		4914283	0		=			
ANR	4914343	UnaryOperationExpression	* perm		4914283	0					
ANR	4914344	UnaryOperator	*		4914283	0					
ANR	4914345	Identifier	perm		4914283	1					
ANR	4914346	MemberAccess	self_sections [ i ] . perm		4914283	1					
ANR	4914347	ArrayIndexing	self_sections [ i ]		4914283	0					
ANR	4914348	Identifier	self_sections		4914283	0					
ANR	4914349	Identifier	i		4914283	1					
ANR	4914350	Identifier	perm		4914283	1					
ANR	4914351	ReturnStatement	return true ;	63:3:1462:1473	4914283	2	True				
ANR	4914352	Identifier	true		4914283	0					
ANR	4914353	ReturnStatement	return false ;	66:1:1483:1495	4914283	2	True				
ANR	4914354	Identifier	false		4914283	0					
ANR	4914355	ReturnType	static int		4914283	1					
ANR	4914356	Identifier	self_in_section		4914283	2					
ANR	4914357	ParameterList	"RIO * io , ut64 addr , int * left , int * perm"		4914283	3					
ANR	4914358	Parameter	RIO * io	53:27:1180:1186	4914283	0	True				
ANR	4914359	ParameterType	RIO *		4914283	0					
ANR	4914360	Identifier	io		4914283	1					
ANR	4914361	Parameter	ut64 addr	53:36:1189:1197	4914283	1	True				
ANR	4914362	ParameterType	ut64		4914283	0					
ANR	4914363	Identifier	addr		4914283	1					
ANR	4914364	Parameter	int * left	53:47:1200:1208	4914283	2	True				
ANR	4914365	ParameterType	int *		4914283	0					
ANR	4914366	Identifier	left		4914283	1					
ANR	4914367	Parameter	int * perm	53:58:1211:1219	4914283	3	True				
ANR	4914368	ParameterType	int *		4914283	0					
ANR	4914369	Identifier	perm		4914283	1					
ANR	4914370	CFGEntryNode	ENTRY		4914283		True				
ANR	4914371	CFGExitNode	EXIT		4914283		True				
ANR	4914372	Symbol	self_sections_count		4914283						
ANR	4914373	Symbol	perm		4914283						
ANR	4914374	Symbol	* perm		4914283						
ANR	4914375	Symbol	* self_sections		4914283						
ANR	4914376	Symbol	io		4914283						
ANR	4914377	Symbol	false		4914283						
ANR	4914378	Symbol	i		4914283						
ANR	4914379	Symbol	self_sections [ i ] . to		4914283						
ANR	4914380	Symbol	self_sections [ i ] . perm		4914283						
ANR	4914381	Symbol	* i		4914283						
ANR	4914382	Symbol	left		4914283						
ANR	4914383	Symbol	self_sections		4914283						
ANR	4914384	Symbol	self_sections [ i ] . from		4914283						
ANR	4914385	Symbol	true		4914283						
ANR	4914386	Symbol	addr		4914283						
ANR	4914387	Symbol	* left		4914283						
ANR	4914388	Function	update_self_regions	69:0:1500:4432							
ANR	4914389	FunctionDef	"update_self_regions (RIO * io , int pid)"		4914388	0					
ANR	4914390	CompoundStatement		69:49:1549:4432	4914388	0					
ANR	4914391	ExpressionStatement	self_sections_count = 0	70:1:1552:1575	4914388	0	True				
ANR	4914392	AssignmentExpression	self_sections_count = 0		4914388	0		=			
ANR	4914393	Identifier	self_sections_count		4914388	0					
ANR	4914394	PrimaryExpression	0		4914388	1					
ANR	4914395	IdentifierDeclStatement	mach_port_t task ;	72:1:1592:1608	4914388	1	True				
ANR	4914396	IdentifierDecl	task		4914388	0					
ANR	4914397	IdentifierDeclType	mach_port_t		4914388	0					
ANR	4914398	Identifier	task		4914388	1					
ANR	4914399	IdentifierDeclStatement	kern_return_t rc ;	73:1:1611:1627	4914388	2	True				
ANR	4914400	IdentifierDecl	rc		4914388	0					
ANR	4914401	IdentifierDeclType	kern_return_t		4914388	0					
ANR	4914402	Identifier	rc		4914388	1					
ANR	4914403	ExpressionStatement	"rc = task_for_pid ( mach_task_self ( ) , pid , & task )"	74:1:1630:1679	4914388	3	True				
ANR	4914404	AssignmentExpression	"rc = task_for_pid ( mach_task_self ( ) , pid , & task )"		4914388	0		=			
ANR	4914405	Identifier	rc		4914388	0					
ANR	4914406	CallExpression	"task_for_pid ( mach_task_self ( ) , pid , & task )"		4914388	1					
ANR	4914407	Callee	task_for_pid		4914388	0					
ANR	4914408	Identifier	task_for_pid		4914388	0					
ANR	4914409	ArgumentList	mach_task_self ( )		4914388	1					
ANR	4914410	Argument	mach_task_self ( )		4914388	0					
ANR	4914411	CallExpression	mach_task_self ( )		4914388	0					
ANR	4914412	Callee	mach_task_self		4914388	0					
ANR	4914413	Identifier	mach_task_self		4914388	0					
ANR	4914414	ArgumentList			4914388	1					
ANR	4914415	Argument	pid		4914388	1					
ANR	4914416	Identifier	pid		4914388	0					
ANR	4914417	Argument	& task		4914388	2					
ANR	4914418	UnaryOperationExpression	& task		4914388	0					
ANR	4914419	UnaryOperator	&		4914388	0					
ANR	4914420	Identifier	task		4914388	1					
ANR	4914421	IfStatement	if ( rc )		4914388	4					
ANR	4914422	Condition	rc	75:5:1686:1687	4914388	0	True				
ANR	4914423	Identifier	rc		4914388	0					
ANR	4914424	CompoundStatement		7:9:140:140	4914388	1					
ANR	4914425	ExpressionStatement	"eprintf ( ""task_for_pid failed\\n"" )"	76:2:1694:1727	4914388	0	True				
ANR	4914426	CallExpression	"eprintf ( ""task_for_pid failed\\n"" )"		4914388	0					
ANR	4914427	Callee	eprintf		4914388	0					
ANR	4914428	Identifier	eprintf		4914388	0					
ANR	4914429	ArgumentList	"""task_for_pid failed\\n"""		4914388	1					
ANR	4914430	Argument	"""task_for_pid failed\\n"""		4914388	0					
ANR	4914431	PrimaryExpression	"""task_for_pid failed\\n"""		4914388	0					
ANR	4914432	ReturnStatement	return false ;	77:2:1731:1743	4914388	1	True				
ANR	4914433	Identifier	false		4914388	0					
ANR	4914434	ExpressionStatement	"macosx_debug_regions ( io , task , ( size_t ) 1 , 1000 )"	79:1:1749:1797	4914388	5	True				
ANR	4914435	CallExpression	"macosx_debug_regions ( io , task , ( size_t ) 1 , 1000 )"		4914388	0					
ANR	4914436	Callee	macosx_debug_regions		4914388	0					
ANR	4914437	Identifier	macosx_debug_regions		4914388	0					
ANR	4914438	ArgumentList	io		4914388	1					
ANR	4914439	Argument	io		4914388	0					
ANR	4914440	Identifier	io		4914388	0					
ANR	4914441	Argument	task		4914388	1					
ANR	4914442	Identifier	task		4914388	0					
ANR	4914443	Argument	( size_t ) 1		4914388	2					
ANR	4914444	CastExpression	( size_t ) 1		4914388	0					
ANR	4914445	CastTarget	size_t		4914388	0					
ANR	4914446	PrimaryExpression	1		4914388	1					
ANR	4914447	Argument	1000		4914388	3					
ANR	4914448	PrimaryExpression	1000		4914388	0					
ANR	4914449	ReturnStatement	return true ;	80:1:1800:1811	4914388	6	True				
ANR	4914450	Identifier	true		4914388	0					
ANR	4914451	ReturnType	static int		4914388	1					
ANR	4914452	Identifier	update_self_regions		4914388	2					
ANR	4914453	ParameterList	"RIO * io , int pid"		4914388	3					
ANR	4914454	Parameter	RIO * io	69:31:1531:1537	4914388	0	True				
ANR	4914455	ParameterType	RIO *		4914388	0					
ANR	4914456	Identifier	io		4914388	1					
ANR	4914457	Parameter	int pid	69:40:1540:1546	4914388	1	True				
ANR	4914458	ParameterType	int		4914388	0					
ANR	4914459	Identifier	pid		4914388	1					
ANR	4914460	CFGEntryNode	ENTRY		4914388		True				
ANR	4914461	CFGExitNode	EXIT		4914388		True				
ANR	4914462	Symbol	self_sections_count		4914388						
ANR	4914463	Symbol	rc		4914388						
ANR	4914464	Symbol	task		4914388						
ANR	4914465	Symbol	io		4914388						
ANR	4914466	Symbol	mach_task_self		4914388						
ANR	4914467	Symbol	false		4914388						
ANR	4914468	Symbol	true		4914388						
ANR	4914469	Symbol	pid		4914388						
ANR	4914470	Symbol	task_for_pid		4914388						
ANR	4914471	Symbol	& task		4914388						
ANR	4914472	Function	__plugin_open	174:0:4435:4542							
ANR	4914473	FunctionDef	"__plugin_open (RIO * io , const char * file , bool many)"		4914472	0					
ANR	4914474	CompoundStatement		174:64:4499:4542	4914472	0					
ANR	4914475	ReturnStatement	"return ( ! strncmp ( file , ""self://"" , 7 ) ) ;"	175:1:4502:4540	4914472	0	True				
ANR	4914476	UnaryOperationExpression	"! strncmp ( file , ""self://"" , 7 )"		4914472	0					
ANR	4914477	UnaryOperator	!		4914472	0					
ANR	4914478	CallExpression	"strncmp ( file , ""self://"" , 7 )"		4914472	1					
ANR	4914479	Callee	strncmp		4914472	0					
ANR	4914480	Identifier	strncmp		4914472	0					
ANR	4914481	ArgumentList	file		4914472	1					
ANR	4914482	Argument	file		4914472	0					
ANR	4914483	Identifier	file		4914472	0					
ANR	4914484	Argument	"""self://"""		4914472	1					
ANR	4914485	PrimaryExpression	"""self://"""		4914472	0					
ANR	4914486	Argument	7		4914472	2					
ANR	4914487	PrimaryExpression	7		4914472	0					
ANR	4914488	ReturnType	static bool		4914472	1					
ANR	4914489	Identifier	__plugin_open		4914472	2					
ANR	4914490	ParameterList	"RIO * io , const char * file , bool many"		4914472	3					
ANR	4914491	Parameter	RIO * io	174:26:4461:4467	4914472	0	True				
ANR	4914492	ParameterType	RIO *		4914472	0					
ANR	4914493	Identifier	io		4914472	1					
ANR	4914494	Parameter	const char * file	174:35:4470:4485	4914472	1	True				
ANR	4914495	ParameterType	const char *		4914472	0					
ANR	4914496	Identifier	file		4914472	1					
ANR	4914497	Parameter	bool many	174:53:4488:4496	4914472	2	True				
ANR	4914498	ParameterType	bool		4914472	0					
ANR	4914499	Identifier	many		4914472	1					
ANR	4914500	CFGEntryNode	ENTRY		4914472		True				
ANR	4914501	CFGExitNode	EXIT		4914472		True				
ANR	4914502	Symbol	strncmp		4914472						
ANR	4914503	Symbol	file		4914472						
ANR	4914504	Symbol	io		4914472						
ANR	4914505	Symbol	many		4914472						
ANR	4914506	Function	__open	178:0:4545:4852							
ANR	4914507	FunctionDef	"__open (RIO * io , const char * file , int rw , int mode)"		4914506	0					
ANR	4914508	CompoundStatement		178:68:4613:4852	4914506	0					
ANR	4914509	IdentifierDeclStatement	"int ret , pid = getpid ( ) ;"	179:1:4616:4640	4914506	0	True				
ANR	4914510	IdentifierDecl	ret		4914506	0					
ANR	4914511	IdentifierDeclType	int		4914506	0					
ANR	4914512	Identifier	ret		4914506	1					
ANR	4914513	IdentifierDecl	pid = getpid ( )		4914506	1					
ANR	4914514	IdentifierDeclType	int		4914506	0					
ANR	4914515	Identifier	pid		4914506	1					
ANR	4914516	AssignmentExpression	pid = getpid ( )		4914506	2		=			
ANR	4914517	Identifier	pid		4914506	0					
ANR	4914518	CallExpression	getpid ( )		4914506	1					
ANR	4914519	Callee	getpid		4914506	0					
ANR	4914520	Identifier	getpid		4914506	0					
ANR	4914521	ArgumentList			4914506	1					
ANR	4914522	IfStatement	if ( r_sandbox_enable ( 0 ) )		4914506	1					
ANR	4914523	Condition	r_sandbox_enable ( 0 )	180:5:4647:4666	4914506	0	True				
ANR	4914524	CallExpression	r_sandbox_enable ( 0 )		4914506	0					
ANR	4914525	Callee	r_sandbox_enable		4914506	0					
ANR	4914526	Identifier	r_sandbox_enable		4914506	0					
ANR	4914527	ArgumentList	0		4914506	1					
ANR	4914528	Argument	0		4914506	0					
ANR	4914529	PrimaryExpression	0		4914506	0					
ANR	4914530	CompoundStatement		3:27:55:55	4914506	1					
ANR	4914531	ReturnStatement	return NULL ;	181:2:4673:4684	4914506	0	True				
ANR	4914532	Identifier	NULL		4914506	0					
ANR	4914533	ExpressionStatement	io -> va = true	183:1:4690:4703	4914506	2	True				
ANR	4914534	AssignmentExpression	io -> va = true		4914506	0		=			
ANR	4914535	PtrMemberAccess	io -> va		4914506	0					
ANR	4914536	Identifier	io		4914506	0					
ANR	4914537	Identifier	va		4914506	1					
ANR	4914538	Identifier	true		4914506	1					
ANR	4914539	ExpressionStatement	"ret = update_self_regions ( io , pid )"	184:1:4713:4748	4914506	3	True				
ANR	4914540	AssignmentExpression	"ret = update_self_regions ( io , pid )"		4914506	0		=			
ANR	4914541	Identifier	ret		4914506	0					
ANR	4914542	CallExpression	"update_self_regions ( io , pid )"		4914506	1					
ANR	4914543	Callee	update_self_regions		4914506	0					
ANR	4914544	Identifier	update_self_regions		4914506	0					
ANR	4914545	ArgumentList	io		4914506	1					
ANR	4914546	Argument	io		4914506	0					
ANR	4914547	Identifier	io		4914506	0					
ANR	4914548	Argument	pid		4914506	1					
ANR	4914549	Identifier	pid		4914506	0					
ANR	4914550	IfStatement	if ( ret )		4914506	4					
ANR	4914551	Condition	ret	185:5:4755:4757	4914506	0	True				
ANR	4914552	Identifier	ret		4914506	0					
ANR	4914553	CompoundStatement		8:10:146:146	4914506	1					
ANR	4914554	ReturnStatement	"return r_io_desc_new ( io , & r_io_plugin_self , file , rw , mode , NULL ) ;"	186:2:4764:4833	4914506	0	True				
ANR	4914555	CallExpression	"r_io_desc_new ( io , & r_io_plugin_self , file , rw , mode , NULL )"		4914506	0					
ANR	4914556	Callee	r_io_desc_new		4914506	0					
ANR	4914557	Identifier	r_io_desc_new		4914506	0					
ANR	4914558	ArgumentList	io		4914506	1					
ANR	4914559	Argument	io		4914506	0					
ANR	4914560	Identifier	io		4914506	0					
ANR	4914561	Argument	& r_io_plugin_self		4914506	1					
ANR	4914562	UnaryOperationExpression	& r_io_plugin_self		4914506	0					
ANR	4914563	UnaryOperator	&		4914506	0					
ANR	4914564	Identifier	r_io_plugin_self		4914506	1					
ANR	4914565	Argument	file		4914506	2					
ANR	4914566	Identifier	file		4914506	0					
ANR	4914567	Argument	rw		4914506	3					
ANR	4914568	Identifier	rw		4914506	0					
ANR	4914569	Argument	mode		4914506	4					
ANR	4914570	Identifier	mode		4914506	0					
ANR	4914571	Argument	NULL		4914506	5					
ANR	4914572	Identifier	NULL		4914506	0					
ANR	4914573	ReturnStatement	return NULL ;	189:1:4839:4850	4914506	5	True				
ANR	4914574	Identifier	NULL		4914506	0					
ANR	4914575	ReturnType	static RIODesc *		4914506	1					
ANR	4914576	Identifier	__open		4914506	2					
ANR	4914577	ParameterList	"RIO * io , const char * file , int rw , int mode"		4914506	3					
ANR	4914578	Parameter	RIO * io	178:23:4568:4574	4914506	0	True				
ANR	4914579	ParameterType	RIO *		4914506	0					
ANR	4914580	Identifier	io		4914506	1					
ANR	4914581	Parameter	const char * file	178:32:4577:4592	4914506	1	True				
ANR	4914582	ParameterType	const char *		4914506	0					
ANR	4914583	Identifier	file		4914506	1					
ANR	4914584	Parameter	int rw	178:50:4595:4600	4914506	2	True				
ANR	4914585	ParameterType	int		4914506	0					
ANR	4914586	Identifier	rw		4914506	1					
ANR	4914587	Parameter	int mode	178:58:4603:4610	4914506	3	True				
ANR	4914588	ParameterType	int		4914506	0					
ANR	4914589	Identifier	mode		4914506	1					
ANR	4914590	CFGEntryNode	ENTRY		4914506		True				
ANR	4914591	CFGExitNode	EXIT		4914506		True				
ANR	4914592	Symbol	ret		4914506						
ANR	4914593	Symbol	io -> va		4914506						
ANR	4914594	Symbol	NULL		4914506						
ANR	4914595	Symbol	rw		4914506						
ANR	4914596	Symbol	io		4914506						
ANR	4914597	Symbol	r_sandbox_enable		4914506						
ANR	4914598	Symbol	r_io_desc_new		4914506						
ANR	4914599	Symbol	pid		4914506						
ANR	4914600	Symbol	* io		4914506						
ANR	4914601	Symbol	mode		4914506						
ANR	4914602	Symbol	& r_io_plugin_self		4914506						
ANR	4914603	Symbol	file		4914506						
ANR	4914604	Symbol	update_self_regions		4914506						
ANR	4914605	Symbol	true		4914506						
ANR	4914606	Symbol	getpid		4914506						
ANR	4914607	Function	__read	192:0:4855:5148							
ANR	4914608	FunctionDef	"__read (RIO * io , RIODesc * fd , ut8 * buf , int len)"		4914607	0					
ANR	4914609	CompoundStatement		192:59:4914:5148	4914607	0					
ANR	4914610	IdentifierDeclStatement	"int left , perm ;"	193:1:4917:4931	4914607	0	True				
ANR	4914611	IdentifierDecl	left		4914607	0					
ANR	4914612	IdentifierDeclType	int		4914607	0					
ANR	4914613	Identifier	left		4914607	1					
ANR	4914614	IdentifierDecl	perm		4914607	1					
ANR	4914615	IdentifierDeclType	int		4914607	0					
ANR	4914616	Identifier	perm		4914607	1					
ANR	4914617	IfStatement	"if ( self_in_section ( io , io -> off , & left , & perm ) )"		4914607	1					
ANR	4914618	Condition	"self_in_section ( io , io -> off , & left , & perm )"	194:5:4938:4980	4914607	0	True				
ANR	4914619	CallExpression	"self_in_section ( io , io -> off , & left , & perm )"		4914607	0					
ANR	4914620	Callee	self_in_section		4914607	0					
ANR	4914621	Identifier	self_in_section		4914607	0					
ANR	4914622	ArgumentList	io		4914607	1					
ANR	4914623	Argument	io		4914607	0					
ANR	4914624	Identifier	io		4914607	0					
ANR	4914625	Argument	io -> off		4914607	1					
ANR	4914626	PtrMemberAccess	io -> off		4914607	0					
ANR	4914627	Identifier	io		4914607	0					
ANR	4914628	Identifier	off		4914607	1					
ANR	4914629	Argument	& left		4914607	2					
ANR	4914630	UnaryOperationExpression	& left		4914607	0					
ANR	4914631	UnaryOperator	&		4914607	0					
ANR	4914632	Identifier	left		4914607	1					
ANR	4914633	Argument	& perm		4914607	3					
ANR	4914634	UnaryOperationExpression	& perm		4914607	0					
ANR	4914635	UnaryOperator	&		4914607	0					
ANR	4914636	Identifier	perm		4914607	1					
ANR	4914637	CompoundStatement		3:50:68:68	4914607	1					
ANR	4914638	IfStatement	if ( perm & R_PERM_R )		4914607	0					
ANR	4914639	Condition	perm & R_PERM_R	195:6:4991:5005	4914607	0	True				
ANR	4914640	BitAndExpression	perm & R_PERM_R		4914607	0		&			
ANR	4914641	Identifier	perm		4914607	0					
ANR	4914642	Identifier	R_PERM_R		4914607	1					
ANR	4914643	CompoundStatement		6:3:133:165	4914607	1					
ANR	4914644	IdentifierDeclStatement	"int newlen = R_MIN ( len , left ) ;"	196:3:5013:5043	4914607	0	True				
ANR	4914645	IdentifierDecl	"newlen = R_MIN ( len , left )"		4914607	0					
ANR	4914646	IdentifierDeclType	int		4914607	0					
ANR	4914647	Identifier	newlen		4914607	1					
ANR	4914648	AssignmentExpression	"newlen = R_MIN ( len , left )"		4914607	2		=			
ANR	4914649	Identifier	newlen		4914607	0					
ANR	4914650	CallExpression	"R_MIN ( len , left )"		4914607	1					
ANR	4914651	Callee	R_MIN		4914607	0					
ANR	4914652	Identifier	R_MIN		4914607	0					
ANR	4914653	ArgumentList	len		4914607	1					
ANR	4914654	Argument	len		4914607	0					
ANR	4914655	Identifier	len		4914607	0					
ANR	4914656	Argument	left		4914607	1					
ANR	4914657	Identifier	left		4914607	0					
ANR	4914658	IdentifierDeclStatement	ut8 * ptr = ( ut8 * ) ( size_t ) io -> off ;	197:3:5048:5080	4914607	1	True				
ANR	4914659	IdentifierDecl	* ptr = ( ut8 * ) ( size_t ) io -> off		4914607	0					
ANR	4914660	IdentifierDeclType	ut8 *		4914607	0					
ANR	4914661	Identifier	ptr		4914607	1					
ANR	4914662	AssignmentExpression	* ptr = ( ut8 * ) ( size_t ) io -> off		4914607	2		=			
ANR	4914663	Identifier	ptr		4914607	0					
ANR	4914664	CastExpression	( ut8 * ) ( size_t ) io -> off		4914607	1					
ANR	4914665	CastTarget	ut8 *		4914607	0					
ANR	4914666	CastExpression	( size_t ) io -> off		4914607	1					
ANR	4914667	CastTarget	size_t		4914607	0					
ANR	4914668	PtrMemberAccess	io -> off		4914607	1					
ANR	4914669	Identifier	io		4914607	0					
ANR	4914670	Identifier	off		4914607	1					
ANR	4914671	ExpressionStatement	"memcpy ( buf , ptr , newlen )"	198:3:5085:5110	4914607	2	True				
ANR	4914672	CallExpression	"memcpy ( buf , ptr , newlen )"		4914607	0					
ANR	4914673	Callee	memcpy		4914607	0					
ANR	4914674	Identifier	memcpy		4914607	0					
ANR	4914675	ArgumentList	buf		4914607	1					
ANR	4914676	Argument	buf		4914607	0					
ANR	4914677	Identifier	buf		4914607	0					
ANR	4914678	Argument	ptr		4914607	1					
ANR	4914679	Identifier	ptr		4914607	0					
ANR	4914680	Argument	newlen		4914607	2					
ANR	4914681	Identifier	newlen		4914607	0					
ANR	4914682	ReturnStatement	return newlen ;	199:3:5115:5128	4914607	3	True				
ANR	4914683	Identifier	newlen		4914607	0					
ANR	4914684	ReturnStatement	return 0 ;	202:1:5138:5146	4914607	2	True				
ANR	4914685	PrimaryExpression	0		4914607	0					
ANR	4914686	ReturnType	static int		4914607	1					
ANR	4914687	Identifier	__read		4914607	2					
ANR	4914688	ParameterList	"RIO * io , RIODesc * fd , ut8 * buf , int len"		4914607	3					
ANR	4914689	Parameter	RIO * io	192:18:4873:4879	4914607	0	True				
ANR	4914690	ParameterType	RIO *		4914607	0					
ANR	4914691	Identifier	io		4914607	1					
ANR	4914692	Parameter	RIODesc * fd	192:27:4882:4892	4914607	1	True				
ANR	4914693	ParameterType	RIODesc *		4914607	0					
ANR	4914694	Identifier	fd		4914607	1					
ANR	4914695	Parameter	ut8 * buf	192:40:4895:4902	4914607	2	True				
ANR	4914696	ParameterType	ut8 *		4914607	0					
ANR	4914697	Identifier	buf		4914607	1					
ANR	4914698	Parameter	int len	192:50:4905:4911	4914607	3	True				
ANR	4914699	ParameterType	int		4914607	0					
ANR	4914700	Identifier	len		4914607	1					
ANR	4914701	CFGEntryNode	ENTRY		4914607		True				
ANR	4914702	CFGExitNode	EXIT		4914607		True				
ANR	4914703	Symbol	perm		4914607						
ANR	4914704	Symbol	& perm		4914607						
ANR	4914705	Symbol	io -> off		4914607						
ANR	4914706	Symbol	io		4914607						
ANR	4914707	Symbol	newlen		4914607						
ANR	4914708	Symbol	R_MIN		4914607						
ANR	4914709	Symbol	& left		4914607						
ANR	4914710	Symbol	* io		4914607						
ANR	4914711	Symbol	ptr		4914607						
ANR	4914712	Symbol	buf		4914607						
ANR	4914713	Symbol	len		4914607						
ANR	4914714	Symbol	left		4914607						
ANR	4914715	Symbol	R_PERM_R		4914607						
ANR	4914716	Symbol	self_in_section		4914607						
ANR	4914717	Symbol	fd		4914607						
ANR	4914718	Function	__write	205:0:5151:5484							
ANR	4914719	FunctionDef	"__write (RIO * io , RIODesc * fd , const ut8 * buf , int len)"		4914718	0					
ANR	4914720	CompoundStatement		205:66:5217:5484	4914718	0					
ANR	4914721	IfStatement	if ( fd -> perm & R_PERM_W )		4914718	0					
ANR	4914722	Condition	fd -> perm & R_PERM_W	206:5:5224:5242	4914718	0	True				
ANR	4914723	BitAndExpression	fd -> perm & R_PERM_W		4914718	0		&			
ANR	4914724	PtrMemberAccess	fd -> perm		4914718	0					
ANR	4914725	Identifier	fd		4914718	0					
ANR	4914726	Identifier	perm		4914718	1					
ANR	4914727	Identifier	R_PERM_W		4914718	1					
ANR	4914728	CompoundStatement		3:2:31:45	4914718	1					
ANR	4914729	IdentifierDeclStatement	"int left , perm ;"	207:2:5249:5263	4914718	0	True				
ANR	4914730	IdentifierDecl	left		4914718	0					
ANR	4914731	IdentifierDeclType	int		4914718	0					
ANR	4914732	Identifier	left		4914718	1					
ANR	4914733	IdentifierDecl	perm		4914718	1					
ANR	4914734	IdentifierDeclType	int		4914718	0					
ANR	4914735	Identifier	perm		4914718	1					
ANR	4914736	IfStatement	"if ( self_in_section ( io , io -> off , & left , & perm ) )"		4914718	1					
ANR	4914737	Condition	"self_in_section ( io , io -> off , & left , & perm )"	208:6:5271:5313	4914718	0	True				
ANR	4914738	CallExpression	"self_in_section ( io , io -> off , & left , & perm )"		4914718	0					
ANR	4914739	Callee	self_in_section		4914718	0					
ANR	4914740	Identifier	self_in_section		4914718	0					
ANR	4914741	ArgumentList	io		4914718	1					
ANR	4914742	Argument	io		4914718	0					
ANR	4914743	Identifier	io		4914718	0					
ANR	4914744	Argument	io -> off		4914718	1					
ANR	4914745	PtrMemberAccess	io -> off		4914718	0					
ANR	4914746	Identifier	io		4914718	0					
ANR	4914747	Identifier	off		4914718	1					
ANR	4914748	Argument	& left		4914718	2					
ANR	4914749	UnaryOperationExpression	& left		4914718	0					
ANR	4914750	UnaryOperator	&		4914718	0					
ANR	4914751	Identifier	left		4914718	1					
ANR	4914752	Argument	& perm		4914718	3					
ANR	4914753	UnaryOperationExpression	& perm		4914718	0					
ANR	4914754	UnaryOperator	&		4914718	0					
ANR	4914755	Identifier	perm		4914718	1					
ANR	4914756	CompoundStatement		6:3:138:170	4914718	1					
ANR	4914757	IdentifierDeclStatement	"int newlen = R_MIN ( len , left ) ;"	209:3:5321:5351	4914718	0	True				
ANR	4914758	IdentifierDecl	"newlen = R_MIN ( len , left )"		4914718	0					
ANR	4914759	IdentifierDeclType	int		4914718	0					
ANR	4914760	Identifier	newlen		4914718	1					
ANR	4914761	AssignmentExpression	"newlen = R_MIN ( len , left )"		4914718	2		=			
ANR	4914762	Identifier	newlen		4914718	0					
ANR	4914763	CallExpression	"R_MIN ( len , left )"		4914718	1					
ANR	4914764	Callee	R_MIN		4914718	0					
ANR	4914765	Identifier	R_MIN		4914718	0					
ANR	4914766	ArgumentList	len		4914718	1					
ANR	4914767	Argument	len		4914718	0					
ANR	4914768	Identifier	len		4914718	0					
ANR	4914769	Argument	left		4914718	1					
ANR	4914770	Identifier	left		4914718	0					
ANR	4914771	IdentifierDeclStatement	ut8 * ptr = ( ut8 * ) ( size_t ) io -> off ;	210:3:5356:5388	4914718	1	True				
ANR	4914772	IdentifierDecl	* ptr = ( ut8 * ) ( size_t ) io -> off		4914718	0					
ANR	4914773	IdentifierDeclType	ut8 *		4914718	0					
ANR	4914774	Identifier	ptr		4914718	1					
ANR	4914775	AssignmentExpression	* ptr = ( ut8 * ) ( size_t ) io -> off		4914718	2		=			
ANR	4914776	Identifier	ptr		4914718	0					
ANR	4914777	CastExpression	( ut8 * ) ( size_t ) io -> off		4914718	1					
ANR	4914778	CastTarget	ut8 *		4914718	0					
ANR	4914779	CastExpression	( size_t ) io -> off		4914718	1					
ANR	4914780	CastTarget	size_t		4914718	0					
ANR	4914781	PtrMemberAccess	io -> off		4914718	1					
ANR	4914782	Identifier	io		4914718	0					
ANR	4914783	Identifier	off		4914718	1					
ANR	4914784	IfStatement	if ( newlen > 0 )		4914718	2					
ANR	4914785	Condition	newlen > 0	211:7:5397:5406	4914718	0	True				
ANR	4914786	RelationalExpression	newlen > 0		4914718	0		>			
ANR	4914787	Identifier	newlen		4914718	0					
ANR	4914788	PrimaryExpression	0		4914718	1					
ANR	4914789	CompoundStatement		7:19:191:191	4914718	1					
ANR	4914790	ExpressionStatement	"memcpy ( ptr , buf , newlen )"	212:4:5415:5440	4914718	0	True				
ANR	4914791	CallExpression	"memcpy ( ptr , buf , newlen )"		4914718	0					
ANR	4914792	Callee	memcpy		4914718	0					
ANR	4914793	Identifier	memcpy		4914718	0					
ANR	4914794	ArgumentList	ptr		4914718	1					
ANR	4914795	Argument	ptr		4914718	0					
ANR	4914796	Identifier	ptr		4914718	0					
ANR	4914797	Argument	buf		4914718	1					
ANR	4914798	Identifier	buf		4914718	0					
ANR	4914799	Argument	newlen		4914718	2					
ANR	4914800	Identifier	newlen		4914718	0					
ANR	4914801	ReturnStatement	return newlen ;	214:3:5450:5463	4914718	3	True				
ANR	4914802	Identifier	newlen		4914718	0					
ANR	4914803	ReturnStatement	return - 1 ;	217:1:5473:5482	4914718	1	True				
ANR	4914804	UnaryOperationExpression	- 1		4914718	0					
ANR	4914805	UnaryOperator	-		4914718	0					
ANR	4914806	PrimaryExpression	1		4914718	1					
ANR	4914807	ReturnType	static int		4914718	1					
ANR	4914808	Identifier	__write		4914718	2					
ANR	4914809	ParameterList	"RIO * io , RIODesc * fd , const ut8 * buf , int len"		4914718	3					
ANR	4914810	Parameter	RIO * io	205:19:5170:5176	4914718	0	True				
ANR	4914811	ParameterType	RIO *		4914718	0					
ANR	4914812	Identifier	io		4914718	1					
ANR	4914813	Parameter	RIODesc * fd	205:28:5179:5189	4914718	1	True				
ANR	4914814	ParameterType	RIODesc *		4914718	0					
ANR	4914815	Identifier	fd		4914718	1					
ANR	4914816	Parameter	const ut8 * buf	205:41:5192:5205	4914718	2	True				
ANR	4914817	ParameterType	const ut8 *		4914718	0					
ANR	4914818	Identifier	buf		4914718	1					
ANR	4914819	Parameter	int len	205:57:5208:5214	4914718	3	True				
ANR	4914820	ParameterType	int		4914718	0					
ANR	4914821	Identifier	len		4914718	1					
ANR	4914822	CFGEntryNode	ENTRY		4914718		True				
ANR	4914823	CFGExitNode	EXIT		4914718		True				
ANR	4914824	Symbol	perm		4914718						
ANR	4914825	Symbol	& perm		4914718						
ANR	4914826	Symbol	io -> off		4914718						
ANR	4914827	Symbol	io		4914718						
ANR	4914828	Symbol	* fd		4914718						
ANR	4914829	Symbol	newlen		4914718						
ANR	4914830	Symbol	R_MIN		4914718						
ANR	4914831	Symbol	& left		4914718						
ANR	4914832	Symbol	* io		4914718						
ANR	4914833	Symbol	ptr		4914718						
ANR	4914834	Symbol	buf		4914718						
ANR	4914835	Symbol	R_PERM_W		4914718						
ANR	4914836	Symbol	len		4914718						
ANR	4914837	Symbol	left		4914718						
ANR	4914838	Symbol	self_in_section		4914718						
ANR	4914839	Symbol	fd -> perm		4914718						
ANR	4914840	Symbol	fd		4914718						
ANR	4914841	Function	__lseek	220:0:5487:5699							
ANR	4914842	FunctionDef	"__lseek (RIO * io , RIODesc * fd , ut64 offset , int whence)"		4914841	0					
ANR	4914843	CompoundStatement		220:67:5554:5699	4914841	0					
ANR	4914844	SwitchStatement	switch ( whence )		4914841	0					
ANR	4914845	Condition	whence	221:9:5565:5570	4914841	0	True				
ANR	4914846	Identifier	whence		4914841	0					
ANR	4914847	CompoundStatement		2:17:18:18	4914841	1					
ANR	4914848	Label	case SEEK_SET :	222:1:5576:5589	4914841	0	True				
ANR	4914849	Identifier	SEEK_SET		4914841	0					
ANR	4914850	ReturnStatement	return offset ;	222:16:5591:5604	4914841	1	True				
ANR	4914851	Identifier	offset		4914841	0					
ANR	4914852	Label	case SEEK_CUR :	223:1:5607:5620	4914841	2	True				
ANR	4914853	Identifier	SEEK_CUR		4914841	0					
ANR	4914854	ReturnStatement	return io -> off + offset ;	223:16:5622:5645	4914841	3	True				
ANR	4914855	AdditiveExpression	io -> off + offset		4914841	0		+			
ANR	4914856	PtrMemberAccess	io -> off		4914841	0					
ANR	4914857	Identifier	io		4914841	0					
ANR	4914858	Identifier	off		4914841	1					
ANR	4914859	Identifier	offset		4914841	1					
ANR	4914860	Label	case SEEK_END :	224:1:5648:5661	4914841	4	True				
ANR	4914861	Identifier	SEEK_END		4914841	0					
ANR	4914862	ReturnStatement	return UT64_MAX ;	224:16:5663:5678	4914841	5	True				
ANR	4914863	Identifier	UT64_MAX		4914841	0					
ANR	4914864	ReturnStatement	return offset ;	226:1:5684:5697	4914841	1	True				
ANR	4914865	Identifier	offset		4914841	0					
ANR	4914866	ReturnType	static ut64		4914841	1					
ANR	4914867	Identifier	__lseek		4914841	2					
ANR	4914868	ParameterList	"RIO * io , RIODesc * fd , ut64 offset , int whence"		4914841	3					
ANR	4914869	Parameter	RIO * io	220:20:5507:5513	4914841	0	True				
ANR	4914870	ParameterType	RIO *		4914841	0					
ANR	4914871	Identifier	io		4914841	1					
ANR	4914872	Parameter	RIODesc * fd	220:29:5516:5526	4914841	1	True				
ANR	4914873	ParameterType	RIODesc *		4914841	0					
ANR	4914874	Identifier	fd		4914841	1					
ANR	4914875	Parameter	ut64 offset	220:42:5529:5539	4914841	2	True				
ANR	4914876	ParameterType	ut64		4914841	0					
ANR	4914877	Identifier	offset		4914841	1					
ANR	4914878	Parameter	int whence	220:55:5542:5551	4914841	3	True				
ANR	4914879	ParameterType	int		4914841	0					
ANR	4914880	Identifier	whence		4914841	1					
ANR	4914881	CFGEntryNode	ENTRY		4914841		True				
ANR	4914882	CFGExitNode	EXIT		4914841		True				
ANR	4914883	Symbol	offset		4914841						
ANR	4914884	Symbol	whence		4914841						
ANR	4914885	Symbol	io -> off		4914841						
ANR	4914886	Symbol	io		4914841						
ANR	4914887	Symbol	UT64_MAX		4914841						
ANR	4914888	Symbol	fd		4914841						
ANR	4914889	Symbol	* io		4914841						
ANR	4914890	Function	__close	229:0:5702:5747							
ANR	4914891	FunctionDef	__close (RIODesc * fd)		4914890	0					
ANR	4914892	CompoundStatement		229:32:5734:5747	4914890	0					
ANR	4914893	ReturnStatement	return 0 ;	230:1:5737:5745	4914890	0	True				
ANR	4914894	PrimaryExpression	0		4914890	0					
ANR	4914895	ReturnType	static int		4914890	1					
ANR	4914896	Identifier	__close		4914890	2					
ANR	4914897	ParameterList	RIODesc * fd		4914890	3					
ANR	4914898	Parameter	RIODesc * fd	229:19:5721:5731	4914890	0	True				
ANR	4914899	ParameterType	RIODesc *		4914890	0					
ANR	4914900	Identifier	fd		4914890	1					
ANR	4914901	CFGEntryNode	ENTRY		4914890		True				
ANR	4914902	CFGExitNode	EXIT		4914890		True				
ANR	4914903	Symbol	fd		4914890						
ANR	4914904	Function	got_alarm	233:0:5750:5897							
ANR	4914905	FunctionDef	got_alarm (int sig)		4914904	0					
ANR	4914906	CompoundStatement		233:31:5781:5897	4914904	0					
ANR	4914907	ExpressionStatement	"kill ( getpid ( ) , SIGUSR1 )"	236:1:5863:5888	4914904	0	True				
ANR	4914908	CallExpression	"kill ( getpid ( ) , SIGUSR1 )"		4914904	0					
ANR	4914909	Callee	kill		4914904	0					
ANR	4914910	Identifier	kill		4914904	0					
ANR	4914911	ArgumentList	getpid ( )		4914904	1					
ANR	4914912	Argument	getpid ( )		4914904	0					
ANR	4914913	CallExpression	getpid ( )		4914904	0					
ANR	4914914	Callee	getpid		4914904	0					
ANR	4914915	Identifier	getpid		4914904	0					
ANR	4914916	ArgumentList			4914904	1					
ANR	4914917	Argument	SIGUSR1		4914904	1					
ANR	4914918	Identifier	SIGUSR1		4914904	0					
ANR	4914919	ReturnType	static void		4914904	1					
ANR	4914920	Identifier	got_alarm		4914904	2					
ANR	4914921	ParameterList	int sig		4914904	3					
ANR	4914922	Parameter	int sig	233:22:5772:5778	4914904	0	True				
ANR	4914923	ParameterType	int		4914904	0					
ANR	4914924	Identifier	sig		4914904	1					
ANR	4914925	CFGEntryNode	ENTRY		4914904		True				
ANR	4914926	CFGExitNode	EXIT		4914904		True				
ANR	4914927	Symbol	sig		4914904						
ANR	4914928	Symbol	SIGUSR1		4914904						
ANR	4914929	Symbol	getpid		4914904						
ANR	4914930	Function	__system	240:0:5900:11059							
ANR	4914931	FunctionDef	"__system (RIO * io , RIODesc * fd , const char * cmd)"		4914930	0					
ANR	4914932	CompoundStatement		240:61:5961:11059	4914930	0					
ANR	4914933	IfStatement	"if ( ! strcmp ( cmd , ""pid"" ) )"		4914930	0					
ANR	4914934	Condition	"! strcmp ( cmd , ""pid"" )"	241:5:5968:5987	4914930	0	True				
ANR	4914935	UnaryOperationExpression	"! strcmp ( cmd , ""pid"" )"		4914930	0					
ANR	4914936	UnaryOperator	!		4914930	0					
ANR	4914937	CallExpression	"strcmp ( cmd , ""pid"" )"		4914930	1					
ANR	4914938	Callee	strcmp		4914930	0					
ANR	4914939	Identifier	strcmp		4914930	0					
ANR	4914940	ArgumentList	cmd		4914930	1					
ANR	4914941	Argument	cmd		4914930	0					
ANR	4914942	Identifier	cmd		4914930	0					
ANR	4914943	Argument	"""pid"""		4914930	1					
ANR	4914944	PrimaryExpression	"""pid"""		4914930	0					
ANR	4914945	CompoundStatement		2:27:28:28	4914930	1					
ANR	4914946	ReturnStatement	"return r_str_newf ( ""%d"" , fd -> fd ) ;"	242:2:5994:6026	4914930	0	True				
ANR	4914947	CallExpression	"r_str_newf ( ""%d"" , fd -> fd )"		4914930	0					
ANR	4914948	Callee	r_str_newf		4914930	0					
ANR	4914949	Identifier	r_str_newf		4914930	0					
ANR	4914950	ArgumentList	"""%d"""		4914930	1					
ANR	4914951	Argument	"""%d"""		4914930	0					
ANR	4914952	PrimaryExpression	"""%d"""		4914930	0					
ANR	4914953	Argument	fd -> fd		4914930	1					
ANR	4914954	PtrMemberAccess	fd -> fd		4914930	0					
ANR	4914955	Identifier	fd		4914930	0					
ANR	4914956	Identifier	fd		4914930	1					
ANR	4914957	ElseStatement	else		4914930	0					
ANR	4914958	IfStatement	"if ( ! strncmp ( cmd , ""pid"" , 3 ) )"		4914930	0					
ANR	4914959	Condition	"! strncmp ( cmd , ""pid"" , 3 )"	243:12:6040:6063	4914930	0	True				
ANR	4914960	UnaryOperationExpression	"! strncmp ( cmd , ""pid"" , 3 )"		4914930	0					
ANR	4914961	UnaryOperator	!		4914930	0					
ANR	4914962	CallExpression	"strncmp ( cmd , ""pid"" , 3 )"		4914930	1					
ANR	4914963	Callee	strncmp		4914930	0					
ANR	4914964	Identifier	strncmp		4914930	0					
ANR	4914965	ArgumentList	cmd		4914930	1					
ANR	4914966	Argument	cmd		4914930	0					
ANR	4914967	Identifier	cmd		4914930	0					
ANR	4914968	Argument	"""pid"""		4914930	1					
ANR	4914969	PrimaryExpression	"""pid"""		4914930	0					
ANR	4914970	Argument	3		4914930	2					
ANR	4914971	PrimaryExpression	3		4914930	0					
ANR	4914972	CompoundStatement		4:38:104:104	4914930	1					
ANR	4914973	ElseStatement	else		4914930	0					
ANR	4914974	IfStatement	"if ( ! strncmp ( cmd , ""kill"" , 4 ) )"		4914930	0					
ANR	4914975	Condition	"! strncmp ( cmd , ""kill"" , 4 )"	246:12:6130:6154	4914930	0	True				
ANR	4914976	UnaryOperationExpression	"! strncmp ( cmd , ""kill"" , 4 )"		4914930	0					
ANR	4914977	UnaryOperator	!		4914930	0					
ANR	4914978	CallExpression	"strncmp ( cmd , ""kill"" , 4 )"		4914930	1					
ANR	4914979	Callee	strncmp		4914930	0					
ANR	4914980	Identifier	strncmp		4914930	0					
ANR	4914981	ArgumentList	cmd		4914930	1					
ANR	4914982	Argument	cmd		4914930	0					
ANR	4914983	Identifier	cmd		4914930	0					
ANR	4914984	Argument	"""kill"""		4914930	1					
ANR	4914985	PrimaryExpression	"""kill"""		4914930	0					
ANR	4914986	Argument	4		4914930	2					
ANR	4914987	PrimaryExpression	4		4914930	0					
ANR	4914988	CompoundStatement		7:39:195:195	4914930	1					
ANR	4914989	IfStatement	if ( r_sandbox_enable ( false ) )		4914930	0					
ANR	4914990	Condition	r_sandbox_enable ( false )	247:6:6165:6188	4914930	0	True				
ANR	4914991	CallExpression	r_sandbox_enable ( false )		4914930	0					
ANR	4914992	Callee	r_sandbox_enable		4914930	0					
ANR	4914993	Identifier	r_sandbox_enable		4914930	0					
ANR	4914994	ArgumentList	false		4914930	1					
ANR	4914995	Argument	false		4914930	0					
ANR	4914996	Identifier	false		4914930	0					
ANR	4914997	CompoundStatement		8:32:229:229	4914930	1					
ANR	4914998	ExpressionStatement	"eprintf ( ""This is unsafe, so disabled by the sandbox\\n"" )"	248:3:6196:6252	4914930	0	True				
ANR	4914999	CallExpression	"eprintf ( ""This is unsafe, so disabled by the sandbox\\n"" )"		4914930	0					
ANR	4915000	Callee	eprintf		4914930	0					
ANR	4915001	Identifier	eprintf		4914930	0					
ANR	4915002	ArgumentList	"""This is unsafe, so disabled by the sandbox\\n"""		4914930	1					
ANR	4915003	Argument	"""This is unsafe, so disabled by the sandbox\\n"""		4914930	0					
ANR	4915004	PrimaryExpression	"""This is unsafe, so disabled by the sandbox\\n"""		4914930	0					
ANR	4915005	ReturnStatement	return NULL ;	249:3:6257:6268	4914930	1	True				
ANR	4915006	Identifier	NULL		4914930	0					
ANR	4915007	ExpressionStatement	"kill ( getpid ( ) , SIGKILL )"	252:2:6300:6325	4914930	1	True				
ANR	4915008	CallExpression	"kill ( getpid ( ) , SIGKILL )"		4914930	0					
ANR	4915009	Callee	kill		4914930	0					
ANR	4915010	Identifier	kill		4914930	0					
ANR	4915011	ArgumentList	getpid ( )		4914930	1					
ANR	4915012	Argument	getpid ( )		4914930	0					
ANR	4915013	CallExpression	getpid ( )		4914930	0					
ANR	4915014	Callee	getpid		4914930	0					
ANR	4915015	Identifier	getpid		4914930	0					
ANR	4915016	ArgumentList			4914930	1					
ANR	4915017	Argument	SIGKILL		4914930	1					
ANR	4915018	Identifier	SIGKILL		4914930	0					
ANR	4915019	ElseStatement	else		4914930	0					
ANR	4915020	IfStatement	"if ( ! strncmp ( cmd , ""call "" , 5 ) )"		4914930	0					
ANR	4915021	Condition	"! strncmp ( cmd , ""call "" , 5 )"	254:12:6346:6371	4914930	0	True				
ANR	4915022	UnaryOperationExpression	"! strncmp ( cmd , ""call "" , 5 )"		4914930	0					
ANR	4915023	UnaryOperator	!		4914930	0					
ANR	4915024	CallExpression	"strncmp ( cmd , ""call "" , 5 )"		4914930	1					
ANR	4915025	Callee	strncmp		4914930	0					
ANR	4915026	Identifier	strncmp		4914930	0					
ANR	4915027	ArgumentList	cmd		4914930	1					
ANR	4915028	Argument	cmd		4914930	0					
ANR	4915029	Identifier	cmd		4914930	0					
ANR	4915030	Argument	"""call """		4914930	1					
ANR	4915031	PrimaryExpression	"""call """		4914930	0					
ANR	4915032	Argument	5		4914930	2					
ANR	4915033	PrimaryExpression	5		4914930	0					
ANR	4915034	CompoundStatement		29:2:750:793	4914930	1					
ANR	4915035	IdentifierDeclStatement	size_t cbptr = 0 ;	255:2:6378:6394	4914930	0	True				
ANR	4915036	IdentifierDecl	cbptr = 0		4914930	0					
ANR	4915037	IdentifierDeclType	size_t		4914930	0					
ANR	4915038	Identifier	cbptr		4914930	1					
ANR	4915039	AssignmentExpression	cbptr = 0		4914930	2		=			
ANR	4915040	Identifier	cbptr		4914930	0					
ANR	4915041	PrimaryExpression	0		4914930	1					
ANR	4915042	IfStatement	if ( r_sandbox_enable ( false ) )		4914930	1					
ANR	4915043	Condition	r_sandbox_enable ( false )	256:6:6402:6425	4914930	0	True				
ANR	4915044	CallExpression	r_sandbox_enable ( false )		4914930	0					
ANR	4915045	Callee	r_sandbox_enable		4914930	0					
ANR	4915046	Identifier	r_sandbox_enable		4914930	0					
ANR	4915047	ArgumentList	false		4914930	1					
ANR	4915048	Argument	false		4914930	0					
ANR	4915049	Identifier	false		4914930	0					
ANR	4915050	CompoundStatement		17:32:466:466	4914930	1					
ANR	4915051	ExpressionStatement	"eprintf ( ""This is unsafe, so disabled by the sandbox\\n"" )"	257:3:6433:6489	4914930	0	True				
ANR	4915052	CallExpression	"eprintf ( ""This is unsafe, so disabled by the sandbox\\n"" )"		4914930	0					
ANR	4915053	Callee	eprintf		4914930	0					
ANR	4915054	Identifier	eprintf		4914930	0					
ANR	4915055	ArgumentList	"""This is unsafe, so disabled by the sandbox\\n"""		4914930	1					
ANR	4915056	Argument	"""This is unsafe, so disabled by the sandbox\\n"""		4914930	0					
ANR	4915057	PrimaryExpression	"""This is unsafe, so disabled by the sandbox\\n"""		4914930	0					
ANR	4915058	ReturnStatement	return NULL ;	258:3:6494:6505	4914930	1	True				
ANR	4915059	Identifier	NULL		4914930	0					
ANR	4915060	IdentifierDeclStatement	ut64 result = 0 ;	260:2:6513:6528	4914930	2	True				
ANR	4915061	IdentifierDecl	result = 0		4914930	0					
ANR	4915062	IdentifierDeclType	ut64		4914930	0					
ANR	4915063	Identifier	result		4914930	1					
ANR	4915064	AssignmentExpression	result = 0		4914930	2		=			
ANR	4915065	Identifier	result		4914930	0					
ANR	4915066	PrimaryExpression	0		4914930	1					
ANR	4915067	IdentifierDeclStatement	char * argv = strdup ( cmd + 5 ) ;	261:2:6532:6561	4914930	3	True				
ANR	4915068	IdentifierDecl	* argv = strdup ( cmd + 5 )		4914930	0					
ANR	4915069	IdentifierDeclType	char *		4914930	0					
ANR	4915070	Identifier	argv		4914930	1					
ANR	4915071	AssignmentExpression	* argv = strdup ( cmd + 5 )		4914930	2		=			
ANR	4915072	Identifier	argv		4914930	0					
ANR	4915073	CallExpression	strdup ( cmd + 5 )		4914930	1					
ANR	4915074	Callee	strdup		4914930	0					
ANR	4915075	Identifier	strdup		4914930	0					
ANR	4915076	ArgumentList	cmd + 5		4914930	1					
ANR	4915077	Argument	cmd + 5		4914930	0					
ANR	4915078	AdditiveExpression	cmd + 5		4914930	0		+			
ANR	4915079	Identifier	cmd		4914930	0					
ANR	4915080	PrimaryExpression	5		4914930	1					
ANR	4915081	IdentifierDeclStatement	int argc = r_str_word_set0 ( argv ) ;	262:2:6565:6598	4914930	4	True				
ANR	4915082	IdentifierDecl	argc = r_str_word_set0 ( argv )		4914930	0					
ANR	4915083	IdentifierDeclType	int		4914930	0					
ANR	4915084	Identifier	argc		4914930	1					
ANR	4915085	AssignmentExpression	argc = r_str_word_set0 ( argv )		4914930	2		=			
ANR	4915086	Identifier	argc		4914930	0					
ANR	4915087	CallExpression	r_str_word_set0 ( argv )		4914930	1					
ANR	4915088	Callee	r_str_word_set0		4914930	0					
ANR	4915089	Identifier	r_str_word_set0		4914930	0					
ANR	4915090	ArgumentList	argv		4914930	1					
ANR	4915091	Argument	argv		4914930	0					
ANR	4915092	Identifier	argv		4914930	0					
ANR	4915093	IfStatement	if ( argc == 0 )		4914930	5					
ANR	4915094	Condition	argc == 0	263:6:6606:6614	4914930	0	True				
ANR	4915095	EqualityExpression	argc == 0		4914930	0		==			
ANR	4915096	Identifier	argc		4914930	0					
ANR	4915097	PrimaryExpression	0		4914930	1					
ANR	4915098	CompoundStatement		24:17:655:655	4914930	1					
ANR	4915099	ExpressionStatement	"eprintf ( ""Usage: =!call [fcnptr] [a0] [a1] ...\\n"" )"	264:3:6622:6672	4914930	0	True				
ANR	4915100	CallExpression	"eprintf ( ""Usage: =!call [fcnptr] [a0] [a1] ...\\n"" )"		4914930	0					
ANR	4915101	Callee	eprintf		4914930	0					
ANR	4915102	Identifier	eprintf		4914930	0					
ANR	4915103	ArgumentList	"""Usage: =!call [fcnptr] [a0] [a1] ...\\n"""		4914930	1					
ANR	4915104	Argument	"""Usage: =!call [fcnptr] [a0] [a1] ...\\n"""		4914930	0					
ANR	4915105	PrimaryExpression	"""Usage: =!call [fcnptr] [a0] [a1] ...\\n"""		4914930	0					
ANR	4915106	ExpressionStatement	free ( argv )	265:3:6677:6688	4914930	1	True				
ANR	4915107	CallExpression	free ( argv )		4914930	0					
ANR	4915108	Callee	free		4914930	0					
ANR	4915109	Identifier	free		4914930	0					
ANR	4915110	ArgumentList	argv		4914930	1					
ANR	4915111	Argument	argv		4914930	0					
ANR	4915112	Identifier	argv		4914930	0					
ANR	4915113	ReturnStatement	return NULL ;	266:3:6693:6704	4914930	2	True				
ANR	4915114	Identifier	NULL		4914930	0					
ANR	4915115	IdentifierDeclStatement	"const char * sym = r_str_word_get0 ( argv , 0 ) ;"	268:2:6712:6755	4914930	6	True				
ANR	4915116	IdentifierDecl	"* sym = r_str_word_get0 ( argv , 0 )"		4914930	0					
ANR	4915117	IdentifierDeclType	const char *		4914930	0					
ANR	4915118	Identifier	sym		4914930	1					
ANR	4915119	AssignmentExpression	"* sym = r_str_word_get0 ( argv , 0 )"		4914930	2		=			
ANR	4915120	Identifier	sym		4914930	0					
ANR	4915121	CallExpression	"r_str_word_get0 ( argv , 0 )"		4914930	1					
ANR	4915122	Callee	r_str_word_get0		4914930	0					
ANR	4915123	Identifier	r_str_word_get0		4914930	0					
ANR	4915124	ArgumentList	argv		4914930	1					
ANR	4915125	Argument	argv		4914930	0					
ANR	4915126	Identifier	argv		4914930	0					
ANR	4915127	Argument	0		4914930	1					
ANR	4915128	PrimaryExpression	0		4914930	0					
ANR	4915129	IfStatement	if ( sym )		4914930	7					
ANR	4915130	Condition	sym	269:6:6763:6765	4914930	0	True				
ANR	4915131	Identifier	sym		4914930	0					
ANR	4915132	CompoundStatement		33:3:881:919	4914930	1					
ANR	4915133	IdentifierDeclStatement	const char * symbol = cmd + 6 ;	270:3:6773:6801	4914930	0	True				
ANR	4915134	IdentifierDecl	* symbol = cmd + 6		4914930	0					
ANR	4915135	IdentifierDeclType	const char *		4914930	0					
ANR	4915136	Identifier	symbol		4914930	1					
ANR	4915137	AssignmentExpression	* symbol = cmd + 6		4914930	2		=			
ANR	4915138	Identifier	symbol		4914930	0					
ANR	4915139	AdditiveExpression	cmd + 6		4914930	1		+			
ANR	4915140	Identifier	cmd		4914930	0					
ANR	4915141	PrimaryExpression	6		4914930	1					
ANR	4915142	IdentifierDeclStatement	void * lib = r_lib_dl_open ( NULL ) ;	271:3:6806:6838	4914930	1	True				
ANR	4915143	IdentifierDecl	* lib = r_lib_dl_open ( NULL )		4914930	0					
ANR	4915144	IdentifierDeclType	void *		4914930	0					
ANR	4915145	Identifier	lib		4914930	1					
ANR	4915146	AssignmentExpression	* lib = r_lib_dl_open ( NULL )		4914930	2		=			
ANR	4915147	Identifier	lib		4914930	0					
ANR	4915148	CallExpression	r_lib_dl_open ( NULL )		4914930	1					
ANR	4915149	Callee	r_lib_dl_open		4914930	0					
ANR	4915150	Identifier	r_lib_dl_open		4914930	0					
ANR	4915151	ArgumentList	NULL		4914930	1					
ANR	4915152	Argument	NULL		4914930	0					
ANR	4915153	Identifier	NULL		4914930	0					
ANR	4915154	IdentifierDeclStatement	"void * ptr = r_lib_dl_sym ( lib , symbol ) ;"	272:3:6843:6881	4914930	2	True				
ANR	4915155	IdentifierDecl	"* ptr = r_lib_dl_sym ( lib , symbol )"		4914930	0					
ANR	4915156	IdentifierDeclType	void *		4914930	0					
ANR	4915157	Identifier	ptr		4914930	1					
ANR	4915158	AssignmentExpression	"* ptr = r_lib_dl_sym ( lib , symbol )"		4914930	2		=			
ANR	4915159	Identifier	ptr		4914930	0					
ANR	4915160	CallExpression	"r_lib_dl_sym ( lib , symbol )"		4914930	1					
ANR	4915161	Callee	r_lib_dl_sym		4914930	0					
ANR	4915162	Identifier	r_lib_dl_sym		4914930	0					
ANR	4915163	ArgumentList	lib		4914930	1					
ANR	4915164	Argument	lib		4914930	0					
ANR	4915165	Identifier	lib		4914930	0					
ANR	4915166	Argument	symbol		4914930	1					
ANR	4915167	Identifier	symbol		4914930	0					
ANR	4915168	IfStatement	if ( ptr )		4914930	3					
ANR	4915169	Condition	ptr	273:7:6890:6892	4914930	0	True				
ANR	4915170	Identifier	ptr		4914930	0					
ANR	4915171	CompoundStatement		34:12:933:933	4914930	1					
ANR	4915172	ExpressionStatement	cbptr = ( ut64 ) ( size_t ) ptr	274:4:6901:6926	4914930	0	True				
ANR	4915173	AssignmentExpression	cbptr = ( ut64 ) ( size_t ) ptr		4914930	0		=			
ANR	4915174	Identifier	cbptr		4914930	0					
ANR	4915175	CastExpression	( ut64 ) ( size_t ) ptr		4914930	1					
ANR	4915176	CastTarget	ut64		4914930	0					
ANR	4915177	CastExpression	( size_t ) ptr		4914930	1					
ANR	4915178	CastTarget	size_t		4914930	0					
ANR	4915179	Identifier	ptr		4914930	1					
ANR	4915180	ElseStatement	else		4914930	0					
ANR	4915181	CompoundStatement		36:10:976:976	4914930	0					
ANR	4915182	ExpressionStatement	"cbptr = r_num_math ( NULL , symbol )"	276:4:6944:6977	4914930	0	True				
ANR	4915183	AssignmentExpression	"cbptr = r_num_math ( NULL , symbol )"		4914930	0		=			
ANR	4915184	Identifier	cbptr		4914930	0					
ANR	4915185	CallExpression	"r_num_math ( NULL , symbol )"		4914930	1					
ANR	4915186	Callee	r_num_math		4914930	0					
ANR	4915187	Identifier	r_num_math		4914930	0					
ANR	4915188	ArgumentList	NULL		4914930	1					
ANR	4915189	Argument	NULL		4914930	0					
ANR	4915190	Identifier	NULL		4914930	0					
ANR	4915191	Argument	symbol		4914930	1					
ANR	4915192	Identifier	symbol		4914930	0					
ANR	4915193	ExpressionStatement	r_lib_dl_close ( lib )	278:3:6987:7007	4914930	4	True				
ANR	4915194	CallExpression	r_lib_dl_close ( lib )		4914930	0					
ANR	4915195	Callee	r_lib_dl_close		4914930	0					
ANR	4915196	Identifier	r_lib_dl_close		4914930	0					
ANR	4915197	ArgumentList	lib		4914930	1					
ANR	4915198	Argument	lib		4914930	0					
ANR	4915199	Identifier	lib		4914930	0					
ANR	4915200	IfStatement	if ( argc == 1 )		4914930	8					
ANR	4915201	Condition	argc == 1	280:6:7019:7027	4914930	0	True				
ANR	4915202	EqualityExpression	argc == 1		4914930	0		==			
ANR	4915203	Identifier	argc		4914930	0					
ANR	4915204	PrimaryExpression	1		4914930	1					
ANR	4915205	CompoundStatement		41:17:1068:1068	4914930	1					
ANR	4915206	Statement	size_t	281:3:7035:7040	4914930	0	True				
ANR	4915207	Statement	(	281:10:7042:7042	4914930	1	True				
ANR	4915208	Statement	*	281:11:7043:7043	4914930	2	True				
ANR	4915209	Statement	cb	281:12:7044:7045	4914930	3	True				
ANR	4915210	Statement	)	281:14:7046:7046	4914930	4	True				
ANR	4915211	Statement	(	281:15:7047:7047	4914930	5	True				
ANR	4915212	Statement	)	281:16:7048:7048	4914930	6	True				
ANR	4915213	Statement	=	281:18:7050:7050	4914930	7	True				
ANR	4915214	Statement	(	281:20:7052:7052	4914930	8	True				
ANR	4915215	Statement	size_t	281:21:7053:7058	4914930	9	True				
ANR	4915216	Statement	(	281:27:7059:7059	4914930	10	True				
ANR	4915217	Statement	*	281:28:7060:7060	4914930	11	True				
ANR	4915218	Statement	)	281:29:7061:7061	4914930	12	True				
ANR	4915219	Statement	(	281:30:7062:7062	4914930	13	True				
ANR	4915220	Statement	)	281:31:7063:7063	4914930	14	True				
ANR	4915221	Statement	)	281:32:7064:7064	4914930	15	True				
ANR	4915222	ExpressionStatement	cbptr	281:33:7065:7070	4914930	16	True				
ANR	4915223	Identifier	cbptr		4914930	0					
ANR	4915224	IfStatement	if ( cb )		4914930	17					
ANR	4915225	Condition	cb	282:7:7079:7080	4914930	0	True				
ANR	4915226	Identifier	cb		4914930	0					
ANR	4915227	CompoundStatement		43:11:1121:1121	4914930	1					
ANR	4915228	ExpressionStatement	result = cb ( )	283:4:7089:7103	4914930	0	True				
ANR	4915229	AssignmentExpression	result = cb ( )		4914930	0		=			
ANR	4915230	Identifier	result		4914930	0					
ANR	4915231	CallExpression	cb ( )		4914930	1					
ANR	4915232	Callee	cb		4914930	0					
ANR	4915233	Identifier	cb		4914930	0					
ANR	4915234	ArgumentList			4914930	1					
ANR	4915235	ElseStatement	else		4914930	0					
ANR	4915236	CompoundStatement		45:10:1153:1153	4914930	0					
ANR	4915237	ExpressionStatement	"eprintf ( ""No callback defined\\n"" )"	285:4:7121:7154	4914930	0	True				
ANR	4915238	CallExpression	"eprintf ( ""No callback defined\\n"" )"		4914930	0					
ANR	4915239	Callee	eprintf		4914930	0					
ANR	4915240	Identifier	eprintf		4914930	0					
ANR	4915241	ArgumentList	"""No callback defined\\n"""		4914930	1					
ANR	4915242	Argument	"""No callback defined\\n"""		4914930	0					
ANR	4915243	PrimaryExpression	"""No callback defined\\n"""		4914930	0					
ANR	4915244	ElseStatement	else		4914930	0					
ANR	4915245	IfStatement	if ( argc == 2 )		4914930	0					
ANR	4915246	Condition	argc == 2	287:13:7174:7182	4914930	0	True				
ANR	4915247	EqualityExpression	argc == 2		4914930	0		==			
ANR	4915248	Identifier	argc		4914930	0					
ANR	4915249	PrimaryExpression	2		4914930	1					
ANR	4915250	CompoundStatement		48:24:1223:1223	4914930	1					
ANR	4915251	Statement	size_t	288:3:7190:7195	4914930	0	True				
ANR	4915252	Statement	(	288:10:7197:7197	4914930	1	True				
ANR	4915253	Statement	*	288:11:7198:7198	4914930	2	True				
ANR	4915254	Statement	cb	288:12:7199:7200	4914930	3	True				
ANR	4915255	Statement	)	288:14:7201:7201	4914930	4	True				
ANR	4915256	Statement	(	288:15:7202:7202	4914930	5	True				
ANR	4915257	Statement	size_t	288:16:7203:7208	4914930	6	True				
ANR	4915258	Statement	a0	288:23:7210:7211	4914930	7	True				
ANR	4915259	Statement	)	288:25:7212:7212	4914930	8	True				
ANR	4915260	Statement	=	288:27:7214:7214	4914930	9	True				
ANR	4915261	Statement	(	288:29:7216:7216	4914930	10	True				
ANR	4915262	Statement	size_t	288:30:7217:7222	4914930	11	True				
ANR	4915263	Statement	(	288:36:7223:7223	4914930	12	True				
ANR	4915264	Statement	*	288:37:7224:7224	4914930	13	True				
ANR	4915265	Statement	)	288:38:7225:7225	4914930	14	True				
ANR	4915266	Statement	(	288:39:7226:7226	4914930	15	True				
ANR	4915267	Statement	size_t	288:40:7227:7232	4914930	16	True				
ANR	4915268	Statement	)	288:46:7233:7233	4914930	17	True				
ANR	4915269	Statement	)	288:47:7234:7234	4914930	18	True				
ANR	4915270	ExpressionStatement	cbptr	288:48:7235:7240	4914930	19	True				
ANR	4915271	Identifier	cbptr		4914930	0					
ANR	4915272	IfStatement	if ( cb )		4914930	20					
ANR	4915273	Condition	cb	289:7:7249:7250	4914930	0	True				
ANR	4915274	Identifier	cb		4914930	0					
ANR	4915275	CompoundStatement		51:4:1297:1351	4914930	1					
ANR	4915276	IdentifierDeclStatement	"ut64 a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) ) ;"	290:4:7259:7313	4914930	0	True				
ANR	4915277	IdentifierDecl	"a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	0					
ANR	4915278	IdentifierDeclType	ut64		4914930	0					
ANR	4915279	Identifier	a0		4914930	1					
ANR	4915280	AssignmentExpression	"a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	2		=			
ANR	4915281	Identifier	a0		4914930	0					
ANR	4915282	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	1					
ANR	4915283	Callee	r_num_math		4914930	0					
ANR	4915284	Identifier	r_num_math		4914930	0					
ANR	4915285	ArgumentList	NULL		4914930	1					
ANR	4915286	Argument	NULL		4914930	0					
ANR	4915287	Identifier	NULL		4914930	0					
ANR	4915288	Argument	"r_str_word_get0 ( argv , 1 )"		4914930	1					
ANR	4915289	CallExpression	"r_str_word_get0 ( argv , 1 )"		4914930	0					
ANR	4915290	Callee	r_str_word_get0		4914930	0					
ANR	4915291	Identifier	r_str_word_get0		4914930	0					
ANR	4915292	ArgumentList	argv		4914930	1					
ANR	4915293	Argument	argv		4914930	0					
ANR	4915294	Identifier	argv		4914930	0					
ANR	4915295	Argument	1		4914930	1					
ANR	4915296	PrimaryExpression	1		4914930	0					
ANR	4915297	ExpressionStatement	result = cb ( a0 )	291:4:7319:7335	4914930	1	True				
ANR	4915298	AssignmentExpression	result = cb ( a0 )		4914930	0		=			
ANR	4915299	Identifier	result		4914930	0					
ANR	4915300	CallExpression	cb ( a0 )		4914930	1					
ANR	4915301	Callee	cb		4914930	0					
ANR	4915302	Identifier	cb		4914930	0					
ANR	4915303	ArgumentList	a0		4914930	1					
ANR	4915304	Argument	a0		4914930	0					
ANR	4915305	Identifier	a0		4914930	0					
ANR	4915306	ElseStatement	else		4914930	0					
ANR	4915307	CompoundStatement		53:10:1385:1385	4914930	0					
ANR	4915308	ExpressionStatement	"eprintf ( ""No callback defined\\n"" )"	293:4:7353:7386	4914930	0	True				
ANR	4915309	CallExpression	"eprintf ( ""No callback defined\\n"" )"		4914930	0					
ANR	4915310	Callee	eprintf		4914930	0					
ANR	4915311	Identifier	eprintf		4914930	0					
ANR	4915312	ArgumentList	"""No callback defined\\n"""		4914930	1					
ANR	4915313	Argument	"""No callback defined\\n"""		4914930	0					
ANR	4915314	PrimaryExpression	"""No callback defined\\n"""		4914930	0					
ANR	4915315	ElseStatement	else		4914930	0					
ANR	4915316	IfStatement	if ( argc == 3 )		4914930	0					
ANR	4915317	Condition	argc == 3	295:13:7406:7414	4914930	0	True				
ANR	4915318	EqualityExpression	argc == 3		4914930	0		==			
ANR	4915319	Identifier	argc		4914930	0					
ANR	4915320	PrimaryExpression	3		4914930	1					
ANR	4915321	CompoundStatement		59:3:1592:1646	4914930	1					
ANR	4915322	Statement	size_t	296:3:7422:7427	4914930	0	True				
ANR	4915323	Statement	(	296:10:7429:7429	4914930	1	True				
ANR	4915324	Statement	*	296:11:7430:7430	4914930	2	True				
ANR	4915325	Statement	cb	296:12:7431:7432	4914930	3	True				
ANR	4915326	Statement	)	296:14:7433:7433	4914930	4	True				
ANR	4915327	Statement	(	296:15:7434:7434	4914930	5	True				
ANR	4915328	Statement	size_t	296:16:7435:7440	4914930	6	True				
ANR	4915329	Statement	a0	296:23:7442:7443	4914930	7	True				
ANR	4915330	Statement	","	296:25:7444:7444	4914930	8	True				
ANR	4915331	Statement	size_t	296:27:7446:7451	4914930	9	True				
ANR	4915332	Statement	a1	296:34:7453:7454	4914930	10	True				
ANR	4915333	Statement	)	296:36:7455:7455	4914930	11	True				
ANR	4915334	Statement	=	296:38:7457:7457	4914930	12	True				
ANR	4915335	Statement	(	296:40:7459:7459	4914930	13	True				
ANR	4915336	Statement	size_t	296:41:7460:7465	4914930	14	True				
ANR	4915337	Statement	(	296:47:7466:7466	4914930	15	True				
ANR	4915338	Statement	*	296:48:7467:7467	4914930	16	True				
ANR	4915339	Statement	)	296:49:7468:7468	4914930	17	True				
ANR	4915340	Statement	(	296:50:7469:7469	4914930	18	True				
ANR	4915341	Statement	size_t	296:51:7470:7475	4914930	19	True				
ANR	4915342	Statement	","	296:57:7476:7476	4914930	20	True				
ANR	4915343	Statement	size_t	296:58:7477:7482	4914930	21	True				
ANR	4915344	Statement	)	296:64:7483:7483	4914930	22	True				
ANR	4915345	Statement	)	296:65:7484:7484	4914930	23	True				
ANR	4915346	ExpressionStatement	cbptr	296:66:7485:7490	4914930	24	True				
ANR	4915347	Identifier	cbptr		4914930	0					
ANR	4915348	IdentifierDeclStatement	"ut64 a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) ) ;"	297:3:7495:7549	4914930	25	True				
ANR	4915349	IdentifierDecl	"a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	0					
ANR	4915350	IdentifierDeclType	ut64		4914930	0					
ANR	4915351	Identifier	a0		4914930	1					
ANR	4915352	AssignmentExpression	"a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	2		=			
ANR	4915353	Identifier	a0		4914930	0					
ANR	4915354	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	1					
ANR	4915355	Callee	r_num_math		4914930	0					
ANR	4915356	Identifier	r_num_math		4914930	0					
ANR	4915357	ArgumentList	NULL		4914930	1					
ANR	4915358	Argument	NULL		4914930	0					
ANR	4915359	Identifier	NULL		4914930	0					
ANR	4915360	Argument	"r_str_word_get0 ( argv , 1 )"		4914930	1					
ANR	4915361	CallExpression	"r_str_word_get0 ( argv , 1 )"		4914930	0					
ANR	4915362	Callee	r_str_word_get0		4914930	0					
ANR	4915363	Identifier	r_str_word_get0		4914930	0					
ANR	4915364	ArgumentList	argv		4914930	1					
ANR	4915365	Argument	argv		4914930	0					
ANR	4915366	Identifier	argv		4914930	0					
ANR	4915367	Argument	1		4914930	1					
ANR	4915368	PrimaryExpression	1		4914930	0					
ANR	4915369	IdentifierDeclStatement	"ut64 a1 = r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) ) ;"	298:3:7554:7608	4914930	26	True				
ANR	4915370	IdentifierDecl	"a1 = r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) )"		4914930	0					
ANR	4915371	IdentifierDeclType	ut64		4914930	0					
ANR	4915372	Identifier	a1		4914930	1					
ANR	4915373	AssignmentExpression	"a1 = r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) )"		4914930	2		=			
ANR	4915374	Identifier	a1		4914930	0					
ANR	4915375	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) )"		4914930	1					
ANR	4915376	Callee	r_num_math		4914930	0					
ANR	4915377	Identifier	r_num_math		4914930	0					
ANR	4915378	ArgumentList	NULL		4914930	1					
ANR	4915379	Argument	NULL		4914930	0					
ANR	4915380	Identifier	NULL		4914930	0					
ANR	4915381	Argument	"r_str_word_get0 ( argv , 2 )"		4914930	1					
ANR	4915382	CallExpression	"r_str_word_get0 ( argv , 2 )"		4914930	0					
ANR	4915383	Callee	r_str_word_get0		4914930	0					
ANR	4915384	Identifier	r_str_word_get0		4914930	0					
ANR	4915385	ArgumentList	argv		4914930	1					
ANR	4915386	Argument	argv		4914930	0					
ANR	4915387	Identifier	argv		4914930	0					
ANR	4915388	Argument	2		4914930	1					
ANR	4915389	PrimaryExpression	2		4914930	0					
ANR	4915390	IfStatement	if ( cb )		4914930	27					
ANR	4915391	Condition	cb	299:7:7617:7618	4914930	0	True				
ANR	4915392	Identifier	cb		4914930	0					
ANR	4915393	CompoundStatement		60:11:1659:1659	4914930	1					
ANR	4915394	ExpressionStatement	"result = cb ( a0 , a1 )"	300:4:7627:7647	4914930	0	True				
ANR	4915395	AssignmentExpression	"result = cb ( a0 , a1 )"		4914930	0		=			
ANR	4915396	Identifier	result		4914930	0					
ANR	4915397	CallExpression	"cb ( a0 , a1 )"		4914930	1					
ANR	4915398	Callee	cb		4914930	0					
ANR	4915399	Identifier	cb		4914930	0					
ANR	4915400	ArgumentList	a0		4914930	1					
ANR	4915401	Argument	a0		4914930	0					
ANR	4915402	Identifier	a0		4914930	0					
ANR	4915403	Argument	a1		4914930	1					
ANR	4915404	Identifier	a1		4914930	0					
ANR	4915405	ElseStatement	else		4914930	0					
ANR	4915406	CompoundStatement		62:10:1697:1697	4914930	0					
ANR	4915407	ExpressionStatement	"eprintf ( ""No callback defined\\n"" )"	302:4:7665:7698	4914930	0	True				
ANR	4915408	CallExpression	"eprintf ( ""No callback defined\\n"" )"		4914930	0					
ANR	4915409	Callee	eprintf		4914930	0					
ANR	4915410	Identifier	eprintf		4914930	0					
ANR	4915411	ArgumentList	"""No callback defined\\n"""		4914930	1					
ANR	4915412	Argument	"""No callback defined\\n"""		4914930	0					
ANR	4915413	PrimaryExpression	"""No callback defined\\n"""		4914930	0					
ANR	4915414	ElseStatement	else		4914930	0					
ANR	4915415	IfStatement	if ( argc == 4 )		4914930	0					
ANR	4915416	Condition	argc == 4	304:13:7718:7726	4914930	0	True				
ANR	4915417	EqualityExpression	argc == 4		4914930	0		==			
ANR	4915418	Identifier	argc		4914930	0					
ANR	4915419	PrimaryExpression	4		4914930	1					
ANR	4915420	CompoundStatement		70:3:1987:2041	4914930	1					
ANR	4915421	Statement	size_t	305:3:7734:7739	4914930	0	True				
ANR	4915422	Statement	(	305:10:7741:7741	4914930	1	True				
ANR	4915423	Statement	*	305:11:7742:7742	4914930	2	True				
ANR	4915424	Statement	cb	305:12:7743:7744	4914930	3	True				
ANR	4915425	Statement	)	305:14:7745:7745	4914930	4	True				
ANR	4915426	Statement	(	305:15:7746:7746	4914930	5	True				
ANR	4915427	Statement	size_t	305:16:7747:7752	4914930	6	True				
ANR	4915428	Statement	a0	305:23:7754:7755	4914930	7	True				
ANR	4915429	Statement	","	305:25:7756:7756	4914930	8	True				
ANR	4915430	Statement	size_t	305:27:7758:7763	4914930	9	True				
ANR	4915431	Statement	a1	305:34:7765:7766	4914930	10	True				
ANR	4915432	Statement	","	305:36:7767:7767	4914930	11	True				
ANR	4915433	Statement	size_t	305:38:7769:7774	4914930	12	True				
ANR	4915434	Statement	a2	305:45:7776:7777	4914930	13	True				
ANR	4915435	Statement	)	305:47:7778:7778	4914930	14	True				
ANR	4915436	Statement	=	305:49:7780:7780	4914930	15	True				
ANR	4915437	Statement	(	306:4:7788:7788	4914930	16	True				
ANR	4915438	Statement	size_t	306:5:7789:7794	4914930	17	True				
ANR	4915439	Statement	(	306:11:7795:7795	4914930	18	True				
ANR	4915440	Statement	*	306:12:7796:7796	4914930	19	True				
ANR	4915441	Statement	)	306:13:7797:7797	4914930	20	True				
ANR	4915442	Statement	(	306:14:7798:7798	4914930	21	True				
ANR	4915443	Statement	size_t	306:15:7799:7804	4914930	22	True				
ANR	4915444	Statement	","	306:21:7805:7805	4914930	23	True				
ANR	4915445	Statement	size_t	306:22:7806:7811	4914930	24	True				
ANR	4915446	Statement	","	306:28:7812:7812	4914930	25	True				
ANR	4915447	Statement	size_t	306:29:7813:7818	4914930	26	True				
ANR	4915448	Statement	)	306:35:7819:7819	4914930	27	True				
ANR	4915449	Statement	)	306:36:7820:7820	4914930	28	True				
ANR	4915450	ExpressionStatement	cbptr	306:37:7821:7826	4914930	29	True				
ANR	4915451	Identifier	cbptr		4914930	0					
ANR	4915452	IdentifierDeclStatement	"ut64 a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) ) ;"	307:3:7831:7885	4914930	30	True				
ANR	4915453	IdentifierDecl	"a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	0					
ANR	4915454	IdentifierDeclType	ut64		4914930	0					
ANR	4915455	Identifier	a0		4914930	1					
ANR	4915456	AssignmentExpression	"a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	2		=			
ANR	4915457	Identifier	a0		4914930	0					
ANR	4915458	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	1					
ANR	4915459	Callee	r_num_math		4914930	0					
ANR	4915460	Identifier	r_num_math		4914930	0					
ANR	4915461	ArgumentList	NULL		4914930	1					
ANR	4915462	Argument	NULL		4914930	0					
ANR	4915463	Identifier	NULL		4914930	0					
ANR	4915464	Argument	"r_str_word_get0 ( argv , 1 )"		4914930	1					
ANR	4915465	CallExpression	"r_str_word_get0 ( argv , 1 )"		4914930	0					
ANR	4915466	Callee	r_str_word_get0		4914930	0					
ANR	4915467	Identifier	r_str_word_get0		4914930	0					
ANR	4915468	ArgumentList	argv		4914930	1					
ANR	4915469	Argument	argv		4914930	0					
ANR	4915470	Identifier	argv		4914930	0					
ANR	4915471	Argument	1		4914930	1					
ANR	4915472	PrimaryExpression	1		4914930	0					
ANR	4915473	IdentifierDeclStatement	"ut64 a1 = r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) ) ;"	308:3:7890:7944	4914930	31	True				
ANR	4915474	IdentifierDecl	"a1 = r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) )"		4914930	0					
ANR	4915475	IdentifierDeclType	ut64		4914930	0					
ANR	4915476	Identifier	a1		4914930	1					
ANR	4915477	AssignmentExpression	"a1 = r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) )"		4914930	2		=			
ANR	4915478	Identifier	a1		4914930	0					
ANR	4915479	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) )"		4914930	1					
ANR	4915480	Callee	r_num_math		4914930	0					
ANR	4915481	Identifier	r_num_math		4914930	0					
ANR	4915482	ArgumentList	NULL		4914930	1					
ANR	4915483	Argument	NULL		4914930	0					
ANR	4915484	Identifier	NULL		4914930	0					
ANR	4915485	Argument	"r_str_word_get0 ( argv , 2 )"		4914930	1					
ANR	4915486	CallExpression	"r_str_word_get0 ( argv , 2 )"		4914930	0					
ANR	4915487	Callee	r_str_word_get0		4914930	0					
ANR	4915488	Identifier	r_str_word_get0		4914930	0					
ANR	4915489	ArgumentList	argv		4914930	1					
ANR	4915490	Argument	argv		4914930	0					
ANR	4915491	Identifier	argv		4914930	0					
ANR	4915492	Argument	2		4914930	1					
ANR	4915493	PrimaryExpression	2		4914930	0					
ANR	4915494	IdentifierDeclStatement	"ut64 a2 = r_num_math ( NULL , r_str_word_get0 ( argv , 3 ) ) ;"	309:3:7949:8003	4914930	32	True				
ANR	4915495	IdentifierDecl	"a2 = r_num_math ( NULL , r_str_word_get0 ( argv , 3 ) )"		4914930	0					
ANR	4915496	IdentifierDeclType	ut64		4914930	0					
ANR	4915497	Identifier	a2		4914930	1					
ANR	4915498	AssignmentExpression	"a2 = r_num_math ( NULL , r_str_word_get0 ( argv , 3 ) )"		4914930	2		=			
ANR	4915499	Identifier	a2		4914930	0					
ANR	4915500	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 3 ) )"		4914930	1					
ANR	4915501	Callee	r_num_math		4914930	0					
ANR	4915502	Identifier	r_num_math		4914930	0					
ANR	4915503	ArgumentList	NULL		4914930	1					
ANR	4915504	Argument	NULL		4914930	0					
ANR	4915505	Identifier	NULL		4914930	0					
ANR	4915506	Argument	"r_str_word_get0 ( argv , 3 )"		4914930	1					
ANR	4915507	CallExpression	"r_str_word_get0 ( argv , 3 )"		4914930	0					
ANR	4915508	Callee	r_str_word_get0		4914930	0					
ANR	4915509	Identifier	r_str_word_get0		4914930	0					
ANR	4915510	ArgumentList	argv		4914930	1					
ANR	4915511	Argument	argv		4914930	0					
ANR	4915512	Identifier	argv		4914930	0					
ANR	4915513	Argument	3		4914930	1					
ANR	4915514	PrimaryExpression	3		4914930	0					
ANR	4915515	IfStatement	if ( cb )		4914930	33					
ANR	4915516	Condition	cb	310:7:8012:8013	4914930	0	True				
ANR	4915517	Identifier	cb		4914930	0					
ANR	4915518	CompoundStatement		71:11:2054:2054	4914930	1					
ANR	4915519	ExpressionStatement	"result = cb ( a0 , a1 , a2 )"	311:4:8022:8046	4914930	0	True				
ANR	4915520	AssignmentExpression	"result = cb ( a0 , a1 , a2 )"		4914930	0		=			
ANR	4915521	Identifier	result		4914930	0					
ANR	4915522	CallExpression	"cb ( a0 , a1 , a2 )"		4914930	1					
ANR	4915523	Callee	cb		4914930	0					
ANR	4915524	Identifier	cb		4914930	0					
ANR	4915525	ArgumentList	a0		4914930	1					
ANR	4915526	Argument	a0		4914930	0					
ANR	4915527	Identifier	a0		4914930	0					
ANR	4915528	Argument	a1		4914930	1					
ANR	4915529	Identifier	a1		4914930	0					
ANR	4915530	Argument	a2		4914930	2					
ANR	4915531	Identifier	a2		4914930	0					
ANR	4915532	ElseStatement	else		4914930	0					
ANR	4915533	CompoundStatement		73:10:2096:2096	4914930	0					
ANR	4915534	ExpressionStatement	"eprintf ( ""No callback defined\\n"" )"	313:4:8064:8097	4914930	0	True				
ANR	4915535	CallExpression	"eprintf ( ""No callback defined\\n"" )"		4914930	0					
ANR	4915536	Callee	eprintf		4914930	0					
ANR	4915537	Identifier	eprintf		4914930	0					
ANR	4915538	ArgumentList	"""No callback defined\\n"""		4914930	1					
ANR	4915539	Argument	"""No callback defined\\n"""		4914930	0					
ANR	4915540	PrimaryExpression	"""No callback defined\\n"""		4914930	0					
ANR	4915541	ElseStatement	else		4914930	0					
ANR	4915542	IfStatement	if ( argc == 5 )		4914930	0					
ANR	4915543	Condition	argc == 5	315:13:8117:8125	4914930	0	True				
ANR	4915544	EqualityExpression	argc == 5		4914930	0		==			
ANR	4915545	Identifier	argc		4914930	0					
ANR	4915546	PrimaryExpression	5		4914930	1					
ANR	4915547	CompoundStatement		82:3:2463:2517	4914930	1					
ANR	4915548	Statement	size_t	316:3:8133:8138	4914930	0	True				
ANR	4915549	Statement	(	316:10:8140:8140	4914930	1	True				
ANR	4915550	Statement	*	316:11:8141:8141	4914930	2	True				
ANR	4915551	Statement	cb	316:12:8142:8143	4914930	3	True				
ANR	4915552	Statement	)	316:14:8144:8144	4914930	4	True				
ANR	4915553	Statement	(	316:15:8145:8145	4914930	5	True				
ANR	4915554	Statement	size_t	316:16:8146:8151	4914930	6	True				
ANR	4915555	Statement	a0	316:23:8153:8154	4914930	7	True				
ANR	4915556	Statement	","	316:25:8155:8155	4914930	8	True				
ANR	4915557	Statement	size_t	316:27:8157:8162	4914930	9	True				
ANR	4915558	Statement	a1	316:34:8164:8165	4914930	10	True				
ANR	4915559	Statement	","	316:36:8166:8166	4914930	11	True				
ANR	4915560	Statement	size_t	316:38:8168:8173	4914930	12	True				
ANR	4915561	Statement	a2	316:45:8175:8176	4914930	13	True				
ANR	4915562	Statement	","	316:47:8177:8177	4914930	14	True				
ANR	4915563	Statement	size_t	316:49:8179:8184	4914930	15	True				
ANR	4915564	Statement	a3	316:56:8186:8187	4914930	16	True				
ANR	4915565	Statement	)	316:58:8188:8188	4914930	17	True				
ANR	4915566	Statement	=	316:60:8190:8190	4914930	18	True				
ANR	4915567	Statement	(	317:4:8198:8198	4914930	19	True				
ANR	4915568	Statement	size_t	317:5:8199:8204	4914930	20	True				
ANR	4915569	Statement	(	317:11:8205:8205	4914930	21	True				
ANR	4915570	Statement	*	317:12:8206:8206	4914930	22	True				
ANR	4915571	Statement	)	317:13:8207:8207	4914930	23	True				
ANR	4915572	Statement	(	317:14:8208:8208	4914930	24	True				
ANR	4915573	Statement	size_t	317:15:8209:8214	4914930	25	True				
ANR	4915574	Statement	","	317:21:8215:8215	4914930	26	True				
ANR	4915575	Statement	size_t	317:22:8216:8221	4914930	27	True				
ANR	4915576	Statement	","	317:28:8222:8222	4914930	28	True				
ANR	4915577	Statement	size_t	317:29:8223:8228	4914930	29	True				
ANR	4915578	Statement	","	317:35:8229:8229	4914930	30	True				
ANR	4915579	Statement	size_t	317:36:8230:8235	4914930	31	True				
ANR	4915580	Statement	)	317:42:8236:8236	4914930	32	True				
ANR	4915581	Statement	)	317:43:8237:8237	4914930	33	True				
ANR	4915582	ExpressionStatement	cbptr	317:44:8238:8243	4914930	34	True				
ANR	4915583	Identifier	cbptr		4914930	0					
ANR	4915584	IdentifierDeclStatement	"ut64 a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) ) ;"	318:3:8248:8302	4914930	35	True				
ANR	4915585	IdentifierDecl	"a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	0					
ANR	4915586	IdentifierDeclType	ut64		4914930	0					
ANR	4915587	Identifier	a0		4914930	1					
ANR	4915588	AssignmentExpression	"a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	2		=			
ANR	4915589	Identifier	a0		4914930	0					
ANR	4915590	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	1					
ANR	4915591	Callee	r_num_math		4914930	0					
ANR	4915592	Identifier	r_num_math		4914930	0					
ANR	4915593	ArgumentList	NULL		4914930	1					
ANR	4915594	Argument	NULL		4914930	0					
ANR	4915595	Identifier	NULL		4914930	0					
ANR	4915596	Argument	"r_str_word_get0 ( argv , 1 )"		4914930	1					
ANR	4915597	CallExpression	"r_str_word_get0 ( argv , 1 )"		4914930	0					
ANR	4915598	Callee	r_str_word_get0		4914930	0					
ANR	4915599	Identifier	r_str_word_get0		4914930	0					
ANR	4915600	ArgumentList	argv		4914930	1					
ANR	4915601	Argument	argv		4914930	0					
ANR	4915602	Identifier	argv		4914930	0					
ANR	4915603	Argument	1		4914930	1					
ANR	4915604	PrimaryExpression	1		4914930	0					
ANR	4915605	IdentifierDeclStatement	"ut64 a1 = r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) ) ;"	319:3:8307:8361	4914930	36	True				
ANR	4915606	IdentifierDecl	"a1 = r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) )"		4914930	0					
ANR	4915607	IdentifierDeclType	ut64		4914930	0					
ANR	4915608	Identifier	a1		4914930	1					
ANR	4915609	AssignmentExpression	"a1 = r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) )"		4914930	2		=			
ANR	4915610	Identifier	a1		4914930	0					
ANR	4915611	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) )"		4914930	1					
ANR	4915612	Callee	r_num_math		4914930	0					
ANR	4915613	Identifier	r_num_math		4914930	0					
ANR	4915614	ArgumentList	NULL		4914930	1					
ANR	4915615	Argument	NULL		4914930	0					
ANR	4915616	Identifier	NULL		4914930	0					
ANR	4915617	Argument	"r_str_word_get0 ( argv , 2 )"		4914930	1					
ANR	4915618	CallExpression	"r_str_word_get0 ( argv , 2 )"		4914930	0					
ANR	4915619	Callee	r_str_word_get0		4914930	0					
ANR	4915620	Identifier	r_str_word_get0		4914930	0					
ANR	4915621	ArgumentList	argv		4914930	1					
ANR	4915622	Argument	argv		4914930	0					
ANR	4915623	Identifier	argv		4914930	0					
ANR	4915624	Argument	2		4914930	1					
ANR	4915625	PrimaryExpression	2		4914930	0					
ANR	4915626	IdentifierDeclStatement	"ut64 a2 = r_num_math ( NULL , r_str_word_get0 ( argv , 3 ) ) ;"	320:3:8366:8420	4914930	37	True				
ANR	4915627	IdentifierDecl	"a2 = r_num_math ( NULL , r_str_word_get0 ( argv , 3 ) )"		4914930	0					
ANR	4915628	IdentifierDeclType	ut64		4914930	0					
ANR	4915629	Identifier	a2		4914930	1					
ANR	4915630	AssignmentExpression	"a2 = r_num_math ( NULL , r_str_word_get0 ( argv , 3 ) )"		4914930	2		=			
ANR	4915631	Identifier	a2		4914930	0					
ANR	4915632	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 3 ) )"		4914930	1					
ANR	4915633	Callee	r_num_math		4914930	0					
ANR	4915634	Identifier	r_num_math		4914930	0					
ANR	4915635	ArgumentList	NULL		4914930	1					
ANR	4915636	Argument	NULL		4914930	0					
ANR	4915637	Identifier	NULL		4914930	0					
ANR	4915638	Argument	"r_str_word_get0 ( argv , 3 )"		4914930	1					
ANR	4915639	CallExpression	"r_str_word_get0 ( argv , 3 )"		4914930	0					
ANR	4915640	Callee	r_str_word_get0		4914930	0					
ANR	4915641	Identifier	r_str_word_get0		4914930	0					
ANR	4915642	ArgumentList	argv		4914930	1					
ANR	4915643	Argument	argv		4914930	0					
ANR	4915644	Identifier	argv		4914930	0					
ANR	4915645	Argument	3		4914930	1					
ANR	4915646	PrimaryExpression	3		4914930	0					
ANR	4915647	IdentifierDeclStatement	"ut64 a3 = r_num_math ( NULL , r_str_word_get0 ( argv , 4 ) ) ;"	321:3:8425:8479	4914930	38	True				
ANR	4915648	IdentifierDecl	"a3 = r_num_math ( NULL , r_str_word_get0 ( argv , 4 ) )"		4914930	0					
ANR	4915649	IdentifierDeclType	ut64		4914930	0					
ANR	4915650	Identifier	a3		4914930	1					
ANR	4915651	AssignmentExpression	"a3 = r_num_math ( NULL , r_str_word_get0 ( argv , 4 ) )"		4914930	2		=			
ANR	4915652	Identifier	a3		4914930	0					
ANR	4915653	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 4 ) )"		4914930	1					
ANR	4915654	Callee	r_num_math		4914930	0					
ANR	4915655	Identifier	r_num_math		4914930	0					
ANR	4915656	ArgumentList	NULL		4914930	1					
ANR	4915657	Argument	NULL		4914930	0					
ANR	4915658	Identifier	NULL		4914930	0					
ANR	4915659	Argument	"r_str_word_get0 ( argv , 4 )"		4914930	1					
ANR	4915660	CallExpression	"r_str_word_get0 ( argv , 4 )"		4914930	0					
ANR	4915661	Callee	r_str_word_get0		4914930	0					
ANR	4915662	Identifier	r_str_word_get0		4914930	0					
ANR	4915663	ArgumentList	argv		4914930	1					
ANR	4915664	Argument	argv		4914930	0					
ANR	4915665	Identifier	argv		4914930	0					
ANR	4915666	Argument	4		4914930	1					
ANR	4915667	PrimaryExpression	4		4914930	0					
ANR	4915668	IfStatement	if ( cb )		4914930	39					
ANR	4915669	Condition	cb	322:7:8488:8489	4914930	0	True				
ANR	4915670	Identifier	cb		4914930	0					
ANR	4915671	CompoundStatement		83:11:2530:2530	4914930	1					
ANR	4915672	ExpressionStatement	"result = cb ( a0 , a1 , a2 , a3 )"	323:4:8498:8526	4914930	0	True				
ANR	4915673	AssignmentExpression	"result = cb ( a0 , a1 , a2 , a3 )"		4914930	0		=			
ANR	4915674	Identifier	result		4914930	0					
ANR	4915675	CallExpression	"cb ( a0 , a1 , a2 , a3 )"		4914930	1					
ANR	4915676	Callee	cb		4914930	0					
ANR	4915677	Identifier	cb		4914930	0					
ANR	4915678	ArgumentList	a0		4914930	1					
ANR	4915679	Argument	a0		4914930	0					
ANR	4915680	Identifier	a0		4914930	0					
ANR	4915681	Argument	a1		4914930	1					
ANR	4915682	Identifier	a1		4914930	0					
ANR	4915683	Argument	a2		4914930	2					
ANR	4915684	Identifier	a2		4914930	0					
ANR	4915685	Argument	a3		4914930	3					
ANR	4915686	Identifier	a3		4914930	0					
ANR	4915687	ElseStatement	else		4914930	0					
ANR	4915688	CompoundStatement		85:10:2576:2576	4914930	0					
ANR	4915689	ExpressionStatement	"eprintf ( ""No callback defined\\n"" )"	325:4:8544:8577	4914930	0	True				
ANR	4915690	CallExpression	"eprintf ( ""No callback defined\\n"" )"		4914930	0					
ANR	4915691	Callee	eprintf		4914930	0					
ANR	4915692	Identifier	eprintf		4914930	0					
ANR	4915693	ArgumentList	"""No callback defined\\n"""		4914930	1					
ANR	4915694	Argument	"""No callback defined\\n"""		4914930	0					
ANR	4915695	PrimaryExpression	"""No callback defined\\n"""		4914930	0					
ANR	4915696	ElseStatement	else		4914930	0					
ANR	4915697	IfStatement	if ( argc == 6 )		4914930	0					
ANR	4915698	Condition	argc == 6	327:13:8597:8605	4914930	0	True				
ANR	4915699	EqualityExpression	argc == 6		4914930	0		==			
ANR	4915700	Identifier	argc		4914930	0					
ANR	4915701	PrimaryExpression	6		4914930	1					
ANR	4915702	CompoundStatement		95:3:3020:3074	4914930	1					
ANR	4915703	Statement	size_t	328:3:8613:8618	4914930	0	True				
ANR	4915704	Statement	(	328:10:8620:8620	4914930	1	True				
ANR	4915705	Statement	*	328:11:8621:8621	4914930	2	True				
ANR	4915706	Statement	cb	328:12:8622:8623	4914930	3	True				
ANR	4915707	Statement	)	328:14:8624:8624	4914930	4	True				
ANR	4915708	Statement	(	328:15:8625:8625	4914930	5	True				
ANR	4915709	Statement	size_t	328:16:8626:8631	4914930	6	True				
ANR	4915710	Statement	a0	328:23:8633:8634	4914930	7	True				
ANR	4915711	Statement	","	328:25:8635:8635	4914930	8	True				
ANR	4915712	Statement	size_t	328:27:8637:8642	4914930	9	True				
ANR	4915713	Statement	a1	328:34:8644:8645	4914930	10	True				
ANR	4915714	Statement	","	328:36:8646:8646	4914930	11	True				
ANR	4915715	Statement	size_t	328:38:8648:8653	4914930	12	True				
ANR	4915716	Statement	a2	328:45:8655:8656	4914930	13	True				
ANR	4915717	Statement	","	328:47:8657:8657	4914930	14	True				
ANR	4915718	Statement	size_t	328:49:8659:8664	4914930	15	True				
ANR	4915719	Statement	a3	328:56:8666:8667	4914930	16	True				
ANR	4915720	Statement	","	328:58:8668:8668	4914930	17	True				
ANR	4915721	Statement	size_t	328:60:8670:8675	4914930	18	True				
ANR	4915722	Statement	a4	328:67:8677:8678	4914930	19	True				
ANR	4915723	Statement	)	328:69:8679:8679	4914930	20	True				
ANR	4915724	Statement	=	328:71:8681:8681	4914930	21	True				
ANR	4915725	Statement	(	329:4:8689:8689	4914930	22	True				
ANR	4915726	Statement	size_t	329:5:8690:8695	4914930	23	True				
ANR	4915727	Statement	(	329:11:8696:8696	4914930	24	True				
ANR	4915728	Statement	*	329:12:8697:8697	4914930	25	True				
ANR	4915729	Statement	)	329:13:8698:8698	4914930	26	True				
ANR	4915730	Statement	(	329:14:8699:8699	4914930	27	True				
ANR	4915731	Statement	size_t	329:15:8700:8705	4914930	28	True				
ANR	4915732	Statement	","	329:21:8706:8706	4914930	29	True				
ANR	4915733	Statement	size_t	329:22:8707:8712	4914930	30	True				
ANR	4915734	Statement	","	329:28:8713:8713	4914930	31	True				
ANR	4915735	Statement	size_t	329:29:8714:8719	4914930	32	True				
ANR	4915736	Statement	","	329:35:8720:8720	4914930	33	True				
ANR	4915737	Statement	size_t	329:36:8721:8726	4914930	34	True				
ANR	4915738	Statement	","	329:42:8727:8727	4914930	35	True				
ANR	4915739	Statement	size_t	329:43:8728:8733	4914930	36	True				
ANR	4915740	Statement	)	329:49:8734:8734	4914930	37	True				
ANR	4915741	Statement	)	329:50:8735:8735	4914930	38	True				
ANR	4915742	ExpressionStatement	cbptr	329:51:8736:8741	4914930	39	True				
ANR	4915743	Identifier	cbptr		4914930	0					
ANR	4915744	IdentifierDeclStatement	"ut64 a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) ) ;"	330:3:8746:8800	4914930	40	True				
ANR	4915745	IdentifierDecl	"a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	0					
ANR	4915746	IdentifierDeclType	ut64		4914930	0					
ANR	4915747	Identifier	a0		4914930	1					
ANR	4915748	AssignmentExpression	"a0 = r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	2		=			
ANR	4915749	Identifier	a0		4914930	0					
ANR	4915750	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 1 ) )"		4914930	1					
ANR	4915751	Callee	r_num_math		4914930	0					
ANR	4915752	Identifier	r_num_math		4914930	0					
ANR	4915753	ArgumentList	NULL		4914930	1					
ANR	4915754	Argument	NULL		4914930	0					
ANR	4915755	Identifier	NULL		4914930	0					
ANR	4915756	Argument	"r_str_word_get0 ( argv , 1 )"		4914930	1					
ANR	4915757	CallExpression	"r_str_word_get0 ( argv , 1 )"		4914930	0					
ANR	4915758	Callee	r_str_word_get0		4914930	0					
ANR	4915759	Identifier	r_str_word_get0		4914930	0					
ANR	4915760	ArgumentList	argv		4914930	1					
ANR	4915761	Argument	argv		4914930	0					
ANR	4915762	Identifier	argv		4914930	0					
ANR	4915763	Argument	1		4914930	1					
ANR	4915764	PrimaryExpression	1		4914930	0					
ANR	4915765	IdentifierDeclStatement	"ut64 a1 = r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) ) ;"	331:3:8805:8859	4914930	41	True				
ANR	4915766	IdentifierDecl	"a1 = r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) )"		4914930	0					
ANR	4915767	IdentifierDeclType	ut64		4914930	0					
ANR	4915768	Identifier	a1		4914930	1					
ANR	4915769	AssignmentExpression	"a1 = r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) )"		4914930	2		=			
ANR	4915770	Identifier	a1		4914930	0					
ANR	4915771	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 2 ) )"		4914930	1					
ANR	4915772	Callee	r_num_math		4914930	0					
ANR	4915773	Identifier	r_num_math		4914930	0					
ANR	4915774	ArgumentList	NULL		4914930	1					
ANR	4915775	Argument	NULL		4914930	0					
ANR	4915776	Identifier	NULL		4914930	0					
ANR	4915777	Argument	"r_str_word_get0 ( argv , 2 )"		4914930	1					
ANR	4915778	CallExpression	"r_str_word_get0 ( argv , 2 )"		4914930	0					
ANR	4915779	Callee	r_str_word_get0		4914930	0					
ANR	4915780	Identifier	r_str_word_get0		4914930	0					
ANR	4915781	ArgumentList	argv		4914930	1					
ANR	4915782	Argument	argv		4914930	0					
ANR	4915783	Identifier	argv		4914930	0					
ANR	4915784	Argument	2		4914930	1					
ANR	4915785	PrimaryExpression	2		4914930	0					
ANR	4915786	IdentifierDeclStatement	"ut64 a2 = r_num_math ( NULL , r_str_word_get0 ( argv , 3 ) ) ;"	332:3:8864:8918	4914930	42	True				
ANR	4915787	IdentifierDecl	"a2 = r_num_math ( NULL , r_str_word_get0 ( argv , 3 ) )"		4914930	0					
ANR	4915788	IdentifierDeclType	ut64		4914930	0					
ANR	4915789	Identifier	a2		4914930	1					
ANR	4915790	AssignmentExpression	"a2 = r_num_math ( NULL , r_str_word_get0 ( argv , 3 ) )"		4914930	2		=			
ANR	4915791	Identifier	a2		4914930	0					
ANR	4915792	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 3 ) )"		4914930	1					
ANR	4915793	Callee	r_num_math		4914930	0					
ANR	4915794	Identifier	r_num_math		4914930	0					
ANR	4915795	ArgumentList	NULL		4914930	1					
ANR	4915796	Argument	NULL		4914930	0					
ANR	4915797	Identifier	NULL		4914930	0					
ANR	4915798	Argument	"r_str_word_get0 ( argv , 3 )"		4914930	1					
ANR	4915799	CallExpression	"r_str_word_get0 ( argv , 3 )"		4914930	0					
ANR	4915800	Callee	r_str_word_get0		4914930	0					
ANR	4915801	Identifier	r_str_word_get0		4914930	0					
ANR	4915802	ArgumentList	argv		4914930	1					
ANR	4915803	Argument	argv		4914930	0					
ANR	4915804	Identifier	argv		4914930	0					
ANR	4915805	Argument	3		4914930	1					
ANR	4915806	PrimaryExpression	3		4914930	0					
ANR	4915807	IdentifierDeclStatement	"ut64 a3 = r_num_math ( NULL , r_str_word_get0 ( argv , 4 ) ) ;"	333:3:8923:8977	4914930	43	True				
ANR	4915808	IdentifierDecl	"a3 = r_num_math ( NULL , r_str_word_get0 ( argv , 4 ) )"		4914930	0					
ANR	4915809	IdentifierDeclType	ut64		4914930	0					
ANR	4915810	Identifier	a3		4914930	1					
ANR	4915811	AssignmentExpression	"a3 = r_num_math ( NULL , r_str_word_get0 ( argv , 4 ) )"		4914930	2		=			
ANR	4915812	Identifier	a3		4914930	0					
ANR	4915813	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 4 ) )"		4914930	1					
ANR	4915814	Callee	r_num_math		4914930	0					
ANR	4915815	Identifier	r_num_math		4914930	0					
ANR	4915816	ArgumentList	NULL		4914930	1					
ANR	4915817	Argument	NULL		4914930	0					
ANR	4915818	Identifier	NULL		4914930	0					
ANR	4915819	Argument	"r_str_word_get0 ( argv , 4 )"		4914930	1					
ANR	4915820	CallExpression	"r_str_word_get0 ( argv , 4 )"		4914930	0					
ANR	4915821	Callee	r_str_word_get0		4914930	0					
ANR	4915822	Identifier	r_str_word_get0		4914930	0					
ANR	4915823	ArgumentList	argv		4914930	1					
ANR	4915824	Argument	argv		4914930	0					
ANR	4915825	Identifier	argv		4914930	0					
ANR	4915826	Argument	4		4914930	1					
ANR	4915827	PrimaryExpression	4		4914930	0					
ANR	4915828	IdentifierDeclStatement	"ut64 a4 = r_num_math ( NULL , r_str_word_get0 ( argv , 5 ) ) ;"	334:3:8982:9036	4914930	44	True				
ANR	4915829	IdentifierDecl	"a4 = r_num_math ( NULL , r_str_word_get0 ( argv , 5 ) )"		4914930	0					
ANR	4915830	IdentifierDeclType	ut64		4914930	0					
ANR	4915831	Identifier	a4		4914930	1					
ANR	4915832	AssignmentExpression	"a4 = r_num_math ( NULL , r_str_word_get0 ( argv , 5 ) )"		4914930	2		=			
ANR	4915833	Identifier	a4		4914930	0					
ANR	4915834	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( argv , 5 ) )"		4914930	1					
ANR	4915835	Callee	r_num_math		4914930	0					
ANR	4915836	Identifier	r_num_math		4914930	0					
ANR	4915837	ArgumentList	NULL		4914930	1					
ANR	4915838	Argument	NULL		4914930	0					
ANR	4915839	Identifier	NULL		4914930	0					
ANR	4915840	Argument	"r_str_word_get0 ( argv , 5 )"		4914930	1					
ANR	4915841	CallExpression	"r_str_word_get0 ( argv , 5 )"		4914930	0					
ANR	4915842	Callee	r_str_word_get0		4914930	0					
ANR	4915843	Identifier	r_str_word_get0		4914930	0					
ANR	4915844	ArgumentList	argv		4914930	1					
ANR	4915845	Argument	argv		4914930	0					
ANR	4915846	Identifier	argv		4914930	0					
ANR	4915847	Argument	5		4914930	1					
ANR	4915848	PrimaryExpression	5		4914930	0					
ANR	4915849	IfStatement	if ( cb )		4914930	45					
ANR	4915850	Condition	cb	335:7:9045:9046	4914930	0	True				
ANR	4915851	Identifier	cb		4914930	0					
ANR	4915852	CompoundStatement		96:11:3087:3087	4914930	1					
ANR	4915853	ExpressionStatement	"result = cb ( a0 , a1 , a2 , a3 , a4 )"	336:4:9055:9087	4914930	0	True				
ANR	4915854	AssignmentExpression	"result = cb ( a0 , a1 , a2 , a3 , a4 )"		4914930	0		=			
ANR	4915855	Identifier	result		4914930	0					
ANR	4915856	CallExpression	"cb ( a0 , a1 , a2 , a3 , a4 )"		4914930	1					
ANR	4915857	Callee	cb		4914930	0					
ANR	4915858	Identifier	cb		4914930	0					
ANR	4915859	ArgumentList	a0		4914930	1					
ANR	4915860	Argument	a0		4914930	0					
ANR	4915861	Identifier	a0		4914930	0					
ANR	4915862	Argument	a1		4914930	1					
ANR	4915863	Identifier	a1		4914930	0					
ANR	4915864	Argument	a2		4914930	2					
ANR	4915865	Identifier	a2		4914930	0					
ANR	4915866	Argument	a3		4914930	3					
ANR	4915867	Identifier	a3		4914930	0					
ANR	4915868	Argument	a4		4914930	4					
ANR	4915869	Identifier	a4		4914930	0					
ANR	4915870	ElseStatement	else		4914930	0					
ANR	4915871	CompoundStatement		98:10:3137:3137	4914930	0					
ANR	4915872	ExpressionStatement	"eprintf ( ""No callback defined\\n"" )"	338:4:9105:9138	4914930	0	True				
ANR	4915873	CallExpression	"eprintf ( ""No callback defined\\n"" )"		4914930	0					
ANR	4915874	Callee	eprintf		4914930	0					
ANR	4915875	Identifier	eprintf		4914930	0					
ANR	4915876	ArgumentList	"""No callback defined\\n"""		4914930	1					
ANR	4915877	Argument	"""No callback defined\\n"""		4914930	0					
ANR	4915878	PrimaryExpression	"""No callback defined\\n"""		4914930	0					
ANR	4915879	ElseStatement	else		4914930	0					
ANR	4915880	CompoundStatement		101:9:3192:3192	4914930	0					
ANR	4915881	ExpressionStatement	"eprintf ( ""Unsupported number of arguments in call\\n"" )"	341:3:9159:9212	4914930	0	True				
ANR	4915882	CallExpression	"eprintf ( ""Unsupported number of arguments in call\\n"" )"		4914930	0					
ANR	4915883	Callee	eprintf		4914930	0					
ANR	4915884	Identifier	eprintf		4914930	0					
ANR	4915885	ArgumentList	"""Unsupported number of arguments in call\\n"""		4914930	1					
ANR	4915886	Argument	"""Unsupported number of arguments in call\\n"""		4914930	0					
ANR	4915887	PrimaryExpression	"""Unsupported number of arguments in call\\n"""		4914930	0					
ANR	4915888	Statement	eprintf	343:2:9220:9226	4914930	9	True				
ANR	4915889	Statement	(	343:10:9228:9228	4914930	10	True				
ANR	4915890	Statement	"""RES %"""	343:11:9229:9235	4914930	11	True				
ANR	4915891	Statement	PFMT64d	343:18:9236:9242	4914930	12	True				
ANR	4915892	Statement	"""\\n"""	343:25:9243:9246	4914930	13	True				
ANR	4915893	Statement	","	343:29:9247:9247	4914930	14	True				
ANR	4915894	Statement	result	343:31:9249:9254	4914930	15	True				
ANR	4915895	Statement	)	343:37:9255:9255	4914930	16	True				
ANR	4915896	ExpressionStatement		343:38:9256:9256	4914930	17	True				
ANR	4915897	ExpressionStatement	free ( argv )	344:2:9260:9271	4914930	18	True				
ANR	4915898	CallExpression	free ( argv )		4914930	0					
ANR	4915899	Callee	free		4914930	0					
ANR	4915900	Identifier	free		4914930	0					
ANR	4915901	ArgumentList	argv		4914930	1					
ANR	4915902	Argument	argv		4914930	0					
ANR	4915903	Identifier	argv		4914930	0					
ANR	4915904	ElseStatement	else		4914930	0					
ANR	4915905	IfStatement	"if ( ! strncmp ( cmd , ""alarm "" , 6 ) )"		4914930	0					
ANR	4915906	Condition	"! strncmp ( cmd , ""alarm "" , 6 )"	346:12:9311:9337	4914930	0	True				
ANR	4915907	UnaryOperationExpression	"! strncmp ( cmd , ""alarm "" , 6 )"		4914930	0					
ANR	4915908	UnaryOperator	!		4914930	0					
ANR	4915909	CallExpression	"strncmp ( cmd , ""alarm "" , 6 )"		4914930	1					
ANR	4915910	Callee	strncmp		4914930	0					
ANR	4915911	Identifier	strncmp		4914930	0					
ANR	4915912	ArgumentList	cmd		4914930	1					
ANR	4915913	Argument	cmd		4914930	0					
ANR	4915914	Identifier	cmd		4914930	0					
ANR	4915915	Argument	"""alarm """		4914930	1					
ANR	4915916	PrimaryExpression	"""alarm """		4914930	0					
ANR	4915917	Argument	6		4914930	2					
ANR	4915918	PrimaryExpression	6		4914930	0					
ANR	4915919	CompoundStatement		107:41:3378:3378	4914930	1					
ANR	4915920	ExpressionStatement	"signal ( SIGALRM , got_alarm )"	347:2:9344:9371	4914930	0	True				
ANR	4915921	CallExpression	"signal ( SIGALRM , got_alarm )"		4914930	0					
ANR	4915922	Callee	signal		4914930	0					
ANR	4915923	Identifier	signal		4914930	0					
ANR	4915924	ArgumentList	SIGALRM		4914930	1					
ANR	4915925	Argument	SIGALRM		4914930	0					
ANR	4915926	Identifier	SIGALRM		4914930	0					
ANR	4915927	Argument	got_alarm		4914930	1					
ANR	4915928	Identifier	got_alarm		4914930	0					
ANR	4915929	ExpressionStatement	alarm ( atoi ( cmd + 6 ) )	349:2:9400:9422	4914930	1	True				
ANR	4915930	CallExpression	alarm ( atoi ( cmd + 6 ) )		4914930	0					
ANR	4915931	Callee	alarm		4914930	0					
ANR	4915932	Identifier	alarm		4914930	0					
ANR	4915933	ArgumentList	atoi ( cmd + 6 )		4914930	1					
ANR	4915934	Argument	atoi ( cmd + 6 )		4914930	0					
ANR	4915935	CallExpression	atoi ( cmd + 6 )		4914930	0					
ANR	4915936	Callee	atoi		4914930	0					
ANR	4915937	Identifier	atoi		4914930	0					
ANR	4915938	ArgumentList	cmd + 6		4914930	1					
ANR	4915939	Argument	cmd + 6		4914930	0					
ANR	4915940	AdditiveExpression	cmd + 6		4914930	0		+			
ANR	4915941	Identifier	cmd		4914930	0					
ANR	4915942	PrimaryExpression	6		4914930	1					
ANR	4915943	ElseStatement	else		4914930	0					
ANR	4915944	IfStatement	"if ( ! strncmp ( cmd , ""dlsym "" , 6 ) )"		4914930	0					
ANR	4915945	Condition	"! strncmp ( cmd , ""dlsym "" , 6 )"	357:12:9620:9646	4914930	0	True				
ANR	4915946	UnaryOperationExpression	"! strncmp ( cmd , ""dlsym "" , 6 )"		4914930	0					
ANR	4915947	UnaryOperator	!		4914930	0					
ANR	4915948	CallExpression	"strncmp ( cmd , ""dlsym "" , 6 )"		4914930	1					
ANR	4915949	Callee	strncmp		4914930	0					
ANR	4915950	Identifier	strncmp		4914930	0					
ANR	4915951	ArgumentList	cmd		4914930	1					
ANR	4915952	Argument	cmd		4914930	0					
ANR	4915953	Identifier	cmd		4914930	0					
ANR	4915954	Argument	"""dlsym """		4914930	1					
ANR	4915955	PrimaryExpression	"""dlsym """		4914930	0					
ANR	4915956	Argument	6		4914930	2					
ANR	4915957	PrimaryExpression	6		4914930	0					
ANR	4915958	CompoundStatement		121:2:3759:3797	4914930	1					
ANR	4915959	IdentifierDeclStatement	const char * symbol = cmd + 6 ;	358:2:9653:9681	4914930	0	True				
ANR	4915960	IdentifierDecl	* symbol = cmd + 6		4914930	0					
ANR	4915961	IdentifierDeclType	const char *		4914930	0					
ANR	4915962	Identifier	symbol		4914930	1					
ANR	4915963	AssignmentExpression	* symbol = cmd + 6		4914930	2		=			
ANR	4915964	Identifier	symbol		4914930	0					
ANR	4915965	AdditiveExpression	cmd + 6		4914930	1		+			
ANR	4915966	Identifier	cmd		4914930	0					
ANR	4915967	PrimaryExpression	6		4914930	1					
ANR	4915968	IdentifierDeclStatement	void * lib = r_lib_dl_open ( NULL ) ;	359:2:9685:9717	4914930	1	True				
ANR	4915969	IdentifierDecl	* lib = r_lib_dl_open ( NULL )		4914930	0					
ANR	4915970	IdentifierDeclType	void *		4914930	0					
ANR	4915971	Identifier	lib		4914930	1					
ANR	4915972	AssignmentExpression	* lib = r_lib_dl_open ( NULL )		4914930	2		=			
ANR	4915973	Identifier	lib		4914930	0					
ANR	4915974	CallExpression	r_lib_dl_open ( NULL )		4914930	1					
ANR	4915975	Callee	r_lib_dl_open		4914930	0					
ANR	4915976	Identifier	r_lib_dl_open		4914930	0					
ANR	4915977	ArgumentList	NULL		4914930	1					
ANR	4915978	Argument	NULL		4914930	0					
ANR	4915979	Identifier	NULL		4914930	0					
ANR	4915980	IdentifierDeclStatement	"void * ptr = r_lib_dl_sym ( lib , symbol ) ;"	360:2:9721:9759	4914930	2	True				
ANR	4915981	IdentifierDecl	"* ptr = r_lib_dl_sym ( lib , symbol )"		4914930	0					
ANR	4915982	IdentifierDeclType	void *		4914930	0					
ANR	4915983	Identifier	ptr		4914930	1					
ANR	4915984	AssignmentExpression	"* ptr = r_lib_dl_sym ( lib , symbol )"		4914930	2		=			
ANR	4915985	Identifier	ptr		4914930	0					
ANR	4915986	CallExpression	"r_lib_dl_sym ( lib , symbol )"		4914930	1					
ANR	4915987	Callee	r_lib_dl_sym		4914930	0					
ANR	4915988	Identifier	r_lib_dl_sym		4914930	0					
ANR	4915989	ArgumentList	lib		4914930	1					
ANR	4915990	Argument	lib		4914930	0					
ANR	4915991	Identifier	lib		4914930	0					
ANR	4915992	Argument	symbol		4914930	1					
ANR	4915993	Identifier	symbol		4914930	0					
ANR	4915994	Statement	eprintf	361:2:9763:9769	4914930	3	True				
ANR	4915995	Statement	(	361:10:9771:9771	4914930	4	True				
ANR	4915996	Statement	"""(%s) 0x%08"""	361:11:9772:9783	4914930	5	True				
ANR	4915997	Statement	PFMT64x	361:23:9784:9790	4914930	6	True				
ANR	4915998	Statement	"""\\n"""	361:30:9791:9794	4914930	7	True				
ANR	4915999	Statement	","	361:34:9795:9795	4914930	8	True				
ANR	4916000	Statement	symbol	361:36:9797:9802	4914930	9	True				
ANR	4916001	Statement	","	361:42:9803:9803	4914930	10	True				
ANR	4916002	Statement	(	361:44:9805:9805	4914930	11	True				
ANR	4916003	Statement	ut64	361:45:9806:9809	4914930	12	True				
ANR	4916004	Statement	)	361:49:9810:9810	4914930	13	True				
ANR	4916005	Statement	(	361:50:9811:9811	4914930	14	True				
ANR	4916006	Statement	size_t	361:51:9812:9817	4914930	15	True				
ANR	4916007	Statement	)	361:57:9818:9818	4914930	16	True				
ANR	4916008	Statement	ptr	361:58:9819:9821	4914930	17	True				
ANR	4916009	Statement	)	361:61:9822:9822	4914930	18	True				
ANR	4916010	ExpressionStatement		361:62:9823:9823	4914930	19	True				
ANR	4916011	ExpressionStatement	r_lib_dl_close ( lib )	362:2:9827:9847	4914930	20	True				
ANR	4916012	CallExpression	r_lib_dl_close ( lib )		4914930	0					
ANR	4916013	Callee	r_lib_dl_close		4914930	0					
ANR	4916014	Identifier	r_lib_dl_close		4914930	0					
ANR	4916015	ArgumentList	lib		4914930	1					
ANR	4916016	Argument	lib		4914930	0					
ANR	4916017	Identifier	lib		4914930	0					
ANR	4916018	ElseStatement	else		4914930	0					
ANR	4916019	IfStatement	"if ( ! strcmp ( cmd , ""mameio"" ) )"		4914930	0					
ANR	4916020	Condition	"! strcmp ( cmd , ""mameio"" )"	363:12:9861:9883	4914930	0	True				
ANR	4916021	UnaryOperationExpression	"! strcmp ( cmd , ""mameio"" )"		4914930	0					
ANR	4916022	UnaryOperator	!		4914930	0					
ANR	4916023	CallExpression	"strcmp ( cmd , ""mameio"" )"		4914930	1					
ANR	4916024	Callee	strcmp		4914930	0					
ANR	4916025	Identifier	strcmp		4914930	0					
ANR	4916026	ArgumentList	cmd		4914930	1					
ANR	4916027	Argument	cmd		4914930	0					
ANR	4916028	Identifier	cmd		4914930	0					
ANR	4916029	Argument	"""mameio"""		4914930	1					
ANR	4916030	PrimaryExpression	"""mameio"""		4914930	0					
ANR	4916031	CompoundStatement		126:2:3964:4020	4914930	1					
ANR	4916032	IdentifierDeclStatement	void * lib = r_lib_dl_open ( NULL ) ;	364:2:9890:9922	4914930	0	True				
ANR	4916033	IdentifierDecl	* lib = r_lib_dl_open ( NULL )		4914930	0					
ANR	4916034	IdentifierDeclType	void *		4914930	0					
ANR	4916035	Identifier	lib		4914930	1					
ANR	4916036	AssignmentExpression	* lib = r_lib_dl_open ( NULL )		4914930	2		=			
ANR	4916037	Identifier	lib		4914930	0					
ANR	4916038	CallExpression	r_lib_dl_open ( NULL )		4914930	1					
ANR	4916039	Callee	r_lib_dl_open		4914930	0					
ANR	4916040	Identifier	r_lib_dl_open		4914930	0					
ANR	4916041	ArgumentList	NULL		4914930	1					
ANR	4916042	Argument	NULL		4914930	0					
ANR	4916043	Identifier	NULL		4914930	0					
ANR	4916044	IdentifierDeclStatement	"void * ptr = r_lib_dl_sym ( lib , ""_ZN12device_debug2goEj"" ) ;"	365:2:9926:9982	4914930	1	True				
ANR	4916045	IdentifierDecl	"* ptr = r_lib_dl_sym ( lib , ""_ZN12device_debug2goEj"" )"		4914930	0					
ANR	4916046	IdentifierDeclType	void *		4914930	0					
ANR	4916047	Identifier	ptr		4914930	1					
ANR	4916048	AssignmentExpression	"* ptr = r_lib_dl_sym ( lib , ""_ZN12device_debug2goEj"" )"		4914930	2		=			
ANR	4916049	Identifier	ptr		4914930	0					
ANR	4916050	CallExpression	"r_lib_dl_sym ( lib , ""_ZN12device_debug2goEj"" )"		4914930	1					
ANR	4916051	Callee	r_lib_dl_sym		4914930	0					
ANR	4916052	Identifier	r_lib_dl_sym		4914930	0					
ANR	4916053	ArgumentList	lib		4914930	1					
ANR	4916054	Argument	lib		4914930	0					
ANR	4916055	Identifier	lib		4914930	0					
ANR	4916056	Argument	"""_ZN12device_debug2goEj"""		4914930	1					
ANR	4916057	PrimaryExpression	"""_ZN12device_debug2goEj"""		4914930	0					
ANR	4916058	IfStatement	if ( ptr )		4914930	2					
ANR	4916059	Condition	ptr	368:6:10109:10111	4914930	0	True				
ANR	4916060	Identifier	ptr		4914930	0					
ANR	4916061	CompoundStatement		129:11:4152:4152	4914930	1					
ANR	4916062	ExpressionStatement	"eprintf ( ""TODO: No MAME IO implemented yet\\n"" )"	370:3:10133:10179	4914930	0	True				
ANR	4916063	CallExpression	"eprintf ( ""TODO: No MAME IO implemented yet\\n"" )"		4914930	0					
ANR	4916064	Callee	eprintf		4914930	0					
ANR	4916065	Identifier	eprintf		4914930	0					
ANR	4916066	ArgumentList	"""TODO: No MAME IO implemented yet\\n"""		4914930	1					
ANR	4916067	Argument	"""TODO: No MAME IO implemented yet\\n"""		4914930	0					
ANR	4916068	PrimaryExpression	"""TODO: No MAME IO implemented yet\\n"""		4914930	0					
ANR	4916069	ExpressionStatement	mameio = true	371:3:10184:10197	4914930	1	True				
ANR	4916070	AssignmentExpression	mameio = true		4914930	0		=			
ANR	4916071	Identifier	mameio		4914930	0					
ANR	4916072	Identifier	true		4914930	1					
ANR	4916073	ElseStatement	else		4914930	0					
ANR	4916074	CompoundStatement		133:9:4246:4246	4914930	0					
ANR	4916075	ExpressionStatement	"eprintf ( ""This process is not a MAME!"" )"	373:3:10213:10252	4914930	0	True				
ANR	4916076	CallExpression	"eprintf ( ""This process is not a MAME!"" )"		4914930	0					
ANR	4916077	Callee	eprintf		4914930	0					
ANR	4916078	Identifier	eprintf		4914930	0					
ANR	4916079	ArgumentList	"""This process is not a MAME!"""		4914930	1					
ANR	4916080	Argument	"""This process is not a MAME!"""		4914930	0					
ANR	4916081	PrimaryExpression	"""This process is not a MAME!"""		4914930	0					
ANR	4916082	ExpressionStatement	r_lib_dl_close ( lib )	375:2:10260:10280	4914930	3	True				
ANR	4916083	CallExpression	r_lib_dl_close ( lib )		4914930	0					
ANR	4916084	Callee	r_lib_dl_close		4914930	0					
ANR	4916085	Identifier	r_lib_dl_close		4914930	0					
ANR	4916086	ArgumentList	lib		4914930	1					
ANR	4916087	Argument	lib		4914930	0					
ANR	4916088	Identifier	lib		4914930	0					
ANR	4916089	ElseStatement	else		4914930	0					
ANR	4916090	IfStatement	"if ( ! strcmp ( cmd , ""maps"" ) )"		4914930	0					
ANR	4916091	Condition	"! strcmp ( cmd , ""maps"" )"	376:12:10294:10314	4914930	0	True				
ANR	4916092	UnaryOperationExpression	"! strcmp ( cmd , ""maps"" )"		4914930	0					
ANR	4916093	UnaryOperator	!		4914930	0					
ANR	4916094	CallExpression	"strcmp ( cmd , ""maps"" )"		4914930	1					
ANR	4916095	Callee	strcmp		4914930	0					
ANR	4916096	Identifier	strcmp		4914930	0					
ANR	4916097	ArgumentList	cmd		4914930	1					
ANR	4916098	Argument	cmd		4914930	0					
ANR	4916099	Identifier	cmd		4914930	0					
ANR	4916100	Argument	"""maps"""		4914930	1					
ANR	4916101	PrimaryExpression	"""maps"""		4914930	0					
ANR	4916102	CompoundStatement		138:2:4359:4364	4914930	1					
ANR	4916103	IdentifierDeclStatement	int i ;	377:2:10321:10326	4914930	0	True				
ANR	4916104	IdentifierDecl	i		4914930	0					
ANR	4916105	IdentifierDeclType	int		4914930	0					
ANR	4916106	Identifier	i		4914930	1					
ANR	4916107	ForStatement	for ( i = 0 ; i < self_sections_count ; i ++ )		4914930	1					
ANR	4916108	ForInit	i = 0 ;	378:7:10335:10340	4914930	0	True				
ANR	4916109	AssignmentExpression	i = 0		4914930	0		=			
ANR	4916110	Identifier	i		4914930	0					
ANR	4916111	PrimaryExpression	0		4914930	1					
ANR	4916112	Condition	i < self_sections_count	378:14:10342:10364	4914930	1	True				
ANR	4916113	RelationalExpression	i < self_sections_count		4914930	0		<			
ANR	4916114	Identifier	i		4914930	0					
ANR	4916115	Identifier	self_sections_count		4914930	1					
ANR	4916116	PostIncDecOperationExpression	i ++	378:39:10367:10369	4914930	2	True				
ANR	4916117	Identifier	i		4914930	0					
ANR	4916118	IncDec	++		4914930	1					
ANR	4916119	CompoundStatement		139:44:4410:4410	4914930	3					
ANR	4916120	Statement	eprintf	379:3:10377:10383	4914930	0	True				
ANR	4916121	Statement	(	379:11:10385:10385	4914930	1	True				
ANR	4916122	Statement	"""0x%08"""	379:12:10386:10392	4914930	2	True				
ANR	4916123	Statement	PFMT64x	379:19:10393:10399	4914930	3	True				
ANR	4916124	Statement	""" - 0x%08"""	379:26:10400:10409	4914930	4	True				
ANR	4916125	Statement	PFMT64x	379:36:10410:10416	4914930	5	True				
ANR	4916126	Statement	""" %s %s\\n"""	379:43:10417:10426	4914930	6	True				
ANR	4916127	Statement	","	379:53:10427:10427	4914930	7	True				
ANR	4916128	Statement	self_sections	380:4:10433:10445	4914930	8	True				
ANR	4916129	Statement	[	380:17:10446:10446	4914930	9	True				
ANR	4916130	Statement	i	380:18:10447:10447	4914930	10	True				
ANR	4916131	Statement	]	380:19:10448:10448	4914930	11	True				
ANR	4916132	Statement	.	380:20:10449:10449	4914930	12	True				
ANR	4916133	Statement	from	380:21:10450:10453	4914930	13	True				
ANR	4916134	Statement	","	380:25:10454:10454	4914930	14	True				
ANR	4916135	Statement	self_sections	380:27:10456:10468	4914930	15	True				
ANR	4916136	Statement	[	380:40:10469:10469	4914930	16	True				
ANR	4916137	Statement	i	380:41:10470:10470	4914930	17	True				
ANR	4916138	Statement	]	380:42:10471:10471	4914930	18	True				
ANR	4916139	Statement	.	380:43:10472:10472	4914930	19	True				
ANR	4916140	Statement	to	380:44:10473:10474	4914930	20	True				
ANR	4916141	Statement	","	380:46:10475:10475	4914930	21	True				
ANR	4916142	Statement	r_str_rwx_i	381:4:10481:10491	4914930	22	True				
ANR	4916143	Statement	(	381:16:10493:10493	4914930	23	True				
ANR	4916144	Statement	self_sections	381:17:10494:10506	4914930	24	True				
ANR	4916145	Statement	[	381:30:10507:10507	4914930	25	True				
ANR	4916146	Statement	i	381:31:10508:10508	4914930	26	True				
ANR	4916147	Statement	]	381:32:10509:10509	4914930	27	True				
ANR	4916148	Statement	.	381:33:10510:10510	4914930	28	True				
ANR	4916149	Statement	perm	381:34:10511:10514	4914930	29	True				
ANR	4916150	Statement	)	381:38:10515:10515	4914930	30	True				
ANR	4916151	Statement	","	381:39:10516:10516	4914930	31	True				
ANR	4916152	Statement	self_sections	382:4:10522:10534	4914930	32	True				
ANR	4916153	Statement	[	382:17:10535:10535	4914930	33	True				
ANR	4916154	Statement	i	382:18:10536:10536	4914930	34	True				
ANR	4916155	Statement	]	382:19:10537:10537	4914930	35	True				
ANR	4916156	Statement	.	382:20:10538:10538	4914930	36	True				
ANR	4916157	Statement	name	382:21:10539:10542	4914930	37	True				
ANR	4916158	Statement	)	382:25:10543:10543	4914930	38	True				
ANR	4916159	ExpressionStatement		382:26:10544:10544	4914930	39	True				
ANR	4916160	ElseStatement	else		4914930	0					
ANR	4916161	CompoundStatement		145:8:4596:4596	4914930	0					
ANR	4916162	ExpressionStatement	"eprintf ( ""|Usage: =![cmd] [args]\\n"" )"	385:2:10562:10598	4914930	0	True				
ANR	4916163	CallExpression	"eprintf ( ""|Usage: =![cmd] [args]\\n"" )"		4914930	0					
ANR	4916164	Callee	eprintf		4914930	0					
ANR	4916165	Identifier	eprintf		4914930	0					
ANR	4916166	ArgumentList	"""|Usage: =![cmd] [args]\\n"""		4914930	1					
ANR	4916167	Argument	"""|Usage: =![cmd] [args]\\n"""		4914930	0					
ANR	4916168	PrimaryExpression	"""|Usage: =![cmd] [args]\\n"""		4914930	0					
ANR	4916169	ExpressionStatement	"eprintf ( ""| =!pid               show getpid()\\n"" )"	386:2:10602:10651	4914930	1	True				
ANR	4916170	CallExpression	"eprintf ( ""| =!pid               show getpid()\\n"" )"		4914930	0					
ANR	4916171	Callee	eprintf		4914930	0					
ANR	4916172	Identifier	eprintf		4914930	0					
ANR	4916173	ArgumentList	"""| =!pid               show getpid()\\n"""		4914930	1					
ANR	4916174	Argument	"""| =!pid               show getpid()\\n"""		4914930	0					
ANR	4916175	PrimaryExpression	"""| =!pid               show getpid()\\n"""		4914930	0					
ANR	4916176	ExpressionStatement	"eprintf ( ""| =!maps              show map regions\\n"" )"	387:2:10655:10707	4914930	2	True				
ANR	4916177	CallExpression	"eprintf ( ""| =!maps              show map regions\\n"" )"		4914930	0					
ANR	4916178	Callee	eprintf		4914930	0					
ANR	4916179	Identifier	eprintf		4914930	0					
ANR	4916180	ArgumentList	"""| =!maps              show map regions\\n"""		4914930	1					
ANR	4916181	Argument	"""| =!maps              show map regions\\n"""		4914930	0					
ANR	4916182	PrimaryExpression	"""| =!maps              show map regions\\n"""		4914930	0					
ANR	4916183	ExpressionStatement	"eprintf ( ""| =!kill              commit suicide\\n"" )"	388:2:10711:10761	4914930	3	True				
ANR	4916184	CallExpression	"eprintf ( ""| =!kill              commit suicide\\n"" )"		4914930	0					
ANR	4916185	Callee	eprintf		4914930	0					
ANR	4916186	Identifier	eprintf		4914930	0					
ANR	4916187	ArgumentList	"""| =!kill              commit suicide\\n"""		4914930	1					
ANR	4916188	Argument	"""| =!kill              commit suicide\\n"""		4914930	0					
ANR	4916189	PrimaryExpression	"""| =!kill              commit suicide\\n"""		4914930	0					
ANR	4916190	ExpressionStatement	"eprintf ( ""| =!alarm [secs]      setup alarm signal to raise r2 prompt\\n"" )"	390:2:10791:10864	4914930	4	True				
ANR	4916191	CallExpression	"eprintf ( ""| =!alarm [secs]      setup alarm signal to raise r2 prompt\\n"" )"		4914930	0					
ANR	4916192	Callee	eprintf		4914930	0					
ANR	4916193	Identifier	eprintf		4914930	0					
ANR	4916194	ArgumentList	"""| =!alarm [secs]      setup alarm signal to raise r2 prompt\\n"""		4914930	1					
ANR	4916195	Argument	"""| =!alarm [secs]      setup alarm signal to raise r2 prompt\\n"""		4914930	0					
ANR	4916196	PrimaryExpression	"""| =!alarm [secs]      setup alarm signal to raise r2 prompt\\n"""		4914930	0					
ANR	4916197	ExpressionStatement	"eprintf ( ""| =!dlsym [sym]       dlopen\\n"" )"	392:2:10875:10917	4914930	5	True				
ANR	4916198	CallExpression	"eprintf ( ""| =!dlsym [sym]       dlopen\\n"" )"		4914930	0					
ANR	4916199	Callee	eprintf		4914930	0					
ANR	4916200	Identifier	eprintf		4914930	0					
ANR	4916201	ArgumentList	"""| =!dlsym [sym]       dlopen\\n"""		4914930	1					
ANR	4916202	Argument	"""| =!dlsym [sym]       dlopen\\n"""		4914930	0					
ANR	4916203	PrimaryExpression	"""| =!dlsym [sym]       dlopen\\n"""		4914930	0					
ANR	4916204	ExpressionStatement	"eprintf ( ""| =!call [sym] [...]  nativelly call a function\\n"" )"	393:2:10921:10982	4914930	6	True				
ANR	4916205	CallExpression	"eprintf ( ""| =!call [sym] [...]  nativelly call a function\\n"" )"		4914930	0					
ANR	4916206	Callee	eprintf		4914930	0					
ANR	4916207	Identifier	eprintf		4914930	0					
ANR	4916208	ArgumentList	"""| =!call [sym] [...]  nativelly call a function\\n"""		4914930	1					
ANR	4916209	Argument	"""| =!call [sym] [...]  nativelly call a function\\n"""		4914930	0					
ANR	4916210	PrimaryExpression	"""| =!call [sym] [...]  nativelly call a function\\n"""		4914930	0					
ANR	4916211	ExpressionStatement	"eprintf ( ""| =!mameio            enter mame IO mode\\n"" )"	394:2:10986:11040	4914930	7	True				
ANR	4916212	CallExpression	"eprintf ( ""| =!mameio            enter mame IO mode\\n"" )"		4914930	0					
ANR	4916213	Callee	eprintf		4914930	0					
ANR	4916214	Identifier	eprintf		4914930	0					
ANR	4916215	ArgumentList	"""| =!mameio            enter mame IO mode\\n"""		4914930	1					
ANR	4916216	Argument	"""| =!mameio            enter mame IO mode\\n"""		4914930	0					
ANR	4916217	PrimaryExpression	"""| =!mameio            enter mame IO mode\\n"""		4914930	0					
ANR	4916218	ReturnStatement	return NULL ;	396:1:11046:11057	4914930	1	True				
ANR	4916219	Identifier	NULL		4914930	0					
ANR	4916220	ReturnType	static char *		4914930	1					
ANR	4916221	Identifier	__system		4914930	2					
ANR	4916222	ParameterList	"RIO * io , RIODesc * fd , const char * cmd"		4914930	3					
ANR	4916223	Parameter	RIO * io	240:22:5922:5928	4914930	0	True				
ANR	4916224	ParameterType	RIO *		4914930	0					
ANR	4916225	Identifier	io		4914930	1					
ANR	4916226	Parameter	RIODesc * fd	240:31:5931:5941	4914930	1	True				
ANR	4916227	ParameterType	RIODesc *		4914930	0					
ANR	4916228	Identifier	fd		4914930	1					
ANR	4916229	Parameter	const char * cmd	240:44:5944:5958	4914930	2	True				
ANR	4916230	ParameterType	const char *		4914930	0					
ANR	4916231	Identifier	cmd		4914930	1					
ANR	4916232	CFGEntryNode	ENTRY		4914930		True				
ANR	4916233	CFGExitNode	EXIT		4914930		True				
ANR	4916234	Symbol	symbol		4914930						
ANR	4916235	Symbol	lib		4914930						
ANR	4916236	Symbol	r_sandbox_enable		4914930						
ANR	4916237	Symbol	sym		4914930						
ANR	4916238	Symbol	r_str_newf		4914930						
ANR	4916239	Symbol	r_str_word_set0		4914930						
ANR	4916240	Symbol	SIGKILL		4914930						
ANR	4916241	Symbol	argv		4914930						
ANR	4916242	Symbol	cbptr		4914930						
ANR	4916243	Symbol	r_num_math		4914930						
ANR	4916244	Symbol	result		4914930						
ANR	4916245	Symbol	strncmp		4914930						
ANR	4916246	Symbol	r_lib_dl_open		4914930						
ANR	4916247	Symbol	mameio		4914930						
ANR	4916248	Symbol	r_lib_dl_sym		4914930						
ANR	4916249	Symbol	cb		4914930						
ANR	4916250	Symbol	strcmp		4914930						
ANR	4916251	Symbol	argc		4914930						
ANR	4916252	Symbol	atoi		4914930						
ANR	4916253	Symbol	self_sections_count		4914930						
ANR	4916254	Symbol	NULL		4914930						
ANR	4916255	Symbol	io		4914930						
ANR	4916256	Symbol	* fd		4914930						
ANR	4916257	Symbol	false		4914930						
ANR	4916258	Symbol	SIGALRM		4914930						
ANR	4916259	Symbol	i		4914930						
ANR	4916260	Symbol	r_str_word_get0		4914930						
ANR	4916261	Symbol	ptr		4914930						
ANR	4916262	Symbol	a0		4914930						
ANR	4916263	Symbol	a1		4914930						
ANR	4916264	Symbol	a2		4914930						
ANR	4916265	Symbol	a3		4914930						
ANR	4916266	Symbol	fd -> fd		4914930						
ANR	4916267	Symbol	a4		4914930						
ANR	4916268	Symbol	true		4914930						
ANR	4916269	Symbol	cmd		4914930						
ANR	4916270	Symbol	strdup		4914930						
ANR	4916271	Symbol	getpid		4914930						
ANR	4916272	Symbol	got_alarm		4914930						
ANR	4916273	Symbol	fd		4914930						
ANR	4916274	DeclStmt									
ANR	4916275	Decl							RIOPlugin	RIOPlugin	r_io_plugin_self
ANR	4916276	DeclStmt									
ANR	4916277	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
ANR	4916278	DeclStmt									
ANR	4916279	Decl							kern_return_t	"kern_return_t ( vm_map_t target_task , mach_vm_address_t * address , mach_vm_size_t * size , natural_t * depth , vm_region_recurse_info_t info , mach_msg_type_number_t * infoCnt )"	mach_vm_region_recurse
ANR	4916280	Function	macosx_debug_regions	432:0:11831:14017							
ANR	4916281	FunctionDef	"macosx_debug_regions (RIO * io , task_t task , mach_vm_address_t address , int max)"		4916280	0					
ANR	4916282	CompoundStatement		432:85:11916:14017	4916280	0					
ANR	4916283	IdentifierDeclStatement	kern_return_t kret ;	433:1:11919:11937	4916280	0	True				
ANR	4916284	IdentifierDecl	kret		4916280	0					
ANR	4916285	IdentifierDeclType	kern_return_t		4916280	0					
ANR	4916286	Identifier	kret		4916280	1					
ANR	4916287	IdentifierDeclStatement	struct vm_region_submap_info_64 info ;	435:1:11941:11977	4916280	1	True				
ANR	4916288	IdentifierDecl	info		4916280	0					
ANR	4916289	IdentifierDeclType	struct vm_region_submap_info_64		4916280	0					
ANR	4916290	Identifier	info		4916280	1					
ANR	4916291	IdentifierDeclStatement	mach_vm_size_t size ;	436:1:11980:11999	4916280	2	True				
ANR	4916292	IdentifierDecl	size		4916280	0					
ANR	4916293	IdentifierDeclType	mach_vm_size_t		4916280	0					
ANR	4916294	Identifier	size		4916280	1					
ANR	4916295	IdentifierDeclStatement	natural_t nsubregions = 1 ;	438:1:12003:12028	4916280	3	True				
ANR	4916296	IdentifierDecl	nsubregions = 1		4916280	0					
ANR	4916297	IdentifierDeclType	natural_t		4916280	0					
ANR	4916298	Identifier	nsubregions		4916280	1					
ANR	4916299	AssignmentExpression	nsubregions = 1		4916280	2		=			
ANR	4916300	Identifier	nsubregions		4916280	0					
ANR	4916301	PrimaryExpression	1		4916280	1					
ANR	4916302	IdentifierDeclStatement	mach_msg_type_number_t count ;	439:1:12031:12059	4916280	4	True				
ANR	4916303	IdentifierDecl	count		4916280	0					
ANR	4916304	IdentifierDeclType	mach_msg_type_number_t		4916280	0					
ANR	4916305	Identifier	count		4916280	1					
ANR	4916306	IdentifierDeclStatement	int num_printed = 0 ;	441:1:12063:12082	4916280	5	True				
ANR	4916307	IdentifierDecl	num_printed = 0		4916280	0					
ANR	4916308	IdentifierDeclType	int		4916280	0					
ANR	4916309	Identifier	num_printed		4916280	1					
ANR	4916310	AssignmentExpression	num_printed = 0		4916280	2		=			
ANR	4916311	Identifier	num_printed		4916280	0					
ANR	4916312	PrimaryExpression	0		4916280	1					
ANR	4916313	Statement	static	442:1:12085:12090	4916280	6	True				
ANR	4916314	Statement	const	442:8:12092:12096	4916280	7	True				
ANR	4916315	Statement	char	442:14:12098:12101	4916280	8	True				
ANR	4916316	Statement	*	442:19:12103:12103	4916280	9	True				
ANR	4916317	Statement	share_mode	442:20:12104:12113	4916280	10	True				
ANR	4916318	Statement	[	442:30:12114:12114	4916280	11	True				
ANR	4916319	Statement	]	442:31:12115:12115	4916280	12	True				
ANR	4916320	Statement	=	442:33:12117:12117	4916280	13	True				
ANR	4916321	CompoundStatement		11:35:202:202	4916280	14					
ANR	4916322	Statement	"""null"""	443:2:12123:12128	4916280	0	True				
ANR	4916323	Statement	","	443:8:12129:12129	4916280	1	True				
ANR	4916324	Statement	"""cow"""	444:2:12133:12137	4916280	2	True				
ANR	4916325	Statement	","	444:7:12138:12138	4916280	3	True				
ANR	4916326	Statement	"""private"""	445:2:12142:12150	4916280	4	True				
ANR	4916327	Statement	","	445:11:12151:12151	4916280	5	True				
ANR	4916328	Statement	"""empty"""	446:2:12155:12161	4916280	6	True				
ANR	4916329	Statement	","	446:9:12162:12162	4916280	7	True				
ANR	4916330	Statement	"""shared"""	447:2:12166:12173	4916280	8	True				
ANR	4916331	Statement	","	447:10:12174:12174	4916280	9	True				
ANR	4916332	Statement	"""true shared"""	448:2:12178:12190	4916280	10	True				
ANR	4916333	Statement	","	448:15:12191:12191	4916280	11	True				
ANR	4916334	Statement	"""prv aliased"""	449:2:12195:12207	4916280	12	True				
ANR	4916335	Statement	","	449:15:12208:12208	4916280	13	True				
ANR	4916336	Statement	"""shm aliased"""	450:2:12212:12224	4916280	14	True				
ANR	4916337	Statement	","	450:15:12225:12225	4916280	15	True				
ANR	4916338	Statement	"""large"""	451:2:12229:12235	4916280	16	True				
ANR	4916339	Statement	","	451:9:12236:12236	4916280	17	True				
ANR	4916340	ExpressionStatement		452:2:12240:12240	4916280	15	True				
ANR	4916341	ForStatement	for ( ; ; )		4916280	16					
ANR	4916342	CompoundStatement		23:10:336:336	4916280	0					
ANR	4916343	ExpressionStatement	count = VM_REGION_SUBMAP_INFO_COUNT_64	455:2:12257:12295	4916280	0	True				
ANR	4916344	AssignmentExpression	count = VM_REGION_SUBMAP_INFO_COUNT_64		4916280	0		=			
ANR	4916345	Identifier	count		4916280	0					
ANR	4916346	Identifier	VM_REGION_SUBMAP_INFO_COUNT_64		4916280	1					
ANR	4916347	ExpressionStatement	"kret = mach_vm_region_recurse ( task , & address , & size , & nsubregions , ( vm_region_recurse_info_t ) & info , & count )"	456:2:12299:12412	4916280	1	True				
ANR	4916348	AssignmentExpression	"kret = mach_vm_region_recurse ( task , & address , & size , & nsubregions , ( vm_region_recurse_info_t ) & info , & count )"		4916280	0		=			
ANR	4916349	Identifier	kret		4916280	0					
ANR	4916350	CallExpression	"mach_vm_region_recurse ( task , & address , & size , & nsubregions , ( vm_region_recurse_info_t ) & info , & count )"		4916280	1					
ANR	4916351	Callee	mach_vm_region_recurse		4916280	0					
ANR	4916352	Identifier	mach_vm_region_recurse		4916280	0					
ANR	4916353	ArgumentList	task		4916280	1					
ANR	4916354	Argument	task		4916280	0					
ANR	4916355	Identifier	task		4916280	0					
ANR	4916356	Argument	& address		4916280	1					
ANR	4916357	UnaryOperationExpression	& address		4916280	0					
ANR	4916358	UnaryOperator	&		4916280	0					
ANR	4916359	Identifier	address		4916280	1					
ANR	4916360	Argument	& size		4916280	2					
ANR	4916361	UnaryOperationExpression	& size		4916280	0					
ANR	4916362	UnaryOperator	&		4916280	0					
ANR	4916363	Identifier	size		4916280	1					
ANR	4916364	Argument	& nsubregions		4916280	3					
ANR	4916365	UnaryOperationExpression	& nsubregions		4916280	0					
ANR	4916366	UnaryOperator	&		4916280	0					
ANR	4916367	Identifier	nsubregions		4916280	1					
ANR	4916368	Argument	( vm_region_recurse_info_t ) & info		4916280	4					
ANR	4916369	CastExpression	( vm_region_recurse_info_t ) & info		4916280	0					
ANR	4916370	CastTarget	vm_region_recurse_info_t		4916280	0					
ANR	4916371	UnaryOperationExpression	& info		4916280	1					
ANR	4916372	UnaryOperator	&		4916280	0					
ANR	4916373	Identifier	info		4916280	1					
ANR	4916374	Argument	& count		4916280	5					
ANR	4916375	UnaryOperationExpression	& count		4916280	0					
ANR	4916376	UnaryOperator	&		4916280	0					
ANR	4916377	Identifier	count		4916280	1					
ANR	4916378	IfStatement	if ( kret != KERN_SUCCESS )		4916280	2					
ANR	4916379	Condition	kret != KERN_SUCCESS	458:6:12420:12439	4916280	0	True				
ANR	4916380	EqualityExpression	kret != KERN_SUCCESS		4916280	0		!=			
ANR	4916381	Identifier	kret		4916280	0					
ANR	4916382	Identifier	KERN_SUCCESS		4916280	1					
ANR	4916383	CompoundStatement		27:28:525:525	4916280	1					
ANR	4916384	IfStatement	if ( ! num_printed )		4916280	0					
ANR	4916385	Condition	! num_printed	459:7:12451:12462	4916280	0	True				
ANR	4916386	UnaryOperationExpression	! num_printed		4916280	0					
ANR	4916387	UnaryOperator	!		4916280	0					
ANR	4916388	Identifier	num_printed		4916280	1					
ANR	4916389	CompoundStatement		28:21:548:548	4916280	1					
ANR	4916390	ExpressionStatement	"eprintf ( ""mach_vm_region_recurse: Error %d - %s"" , kret , mach_error_string ( kret ) )"	460:4:12471:12551	4916280	0	True				
ANR	4916391	CallExpression	"eprintf ( ""mach_vm_region_recurse: Error %d - %s"" , kret , mach_error_string ( kret ) )"		4916280	0					
ANR	4916392	Callee	eprintf		4916280	0					
ANR	4916393	Identifier	eprintf		4916280	0					
ANR	4916394	ArgumentList	"""mach_vm_region_recurse: Error %d - %s"""		4916280	1					
ANR	4916395	Argument	"""mach_vm_region_recurse: Error %d - %s"""		4916280	0					
ANR	4916396	PrimaryExpression	"""mach_vm_region_recurse: Error %d - %s"""		4916280	0					
ANR	4916397	Argument	kret		4916280	1					
ANR	4916398	Identifier	kret		4916280	0					
ANR	4916399	Argument	mach_error_string ( kret )		4916280	2					
ANR	4916400	CallExpression	mach_error_string ( kret )		4916280	0					
ANR	4916401	Callee	mach_error_string		4916280	0					
ANR	4916402	Identifier	mach_error_string		4916280	0					
ANR	4916403	ArgumentList	kret		4916280	1					
ANR	4916404	Argument	kret		4916280	0					
ANR	4916405	Identifier	kret		4916280	0					
ANR	4916406	BreakStatement	break ;	462:3:12561:12566	4916280	1	True				
ANR	4916407	IfStatement	if ( ! info . is_submap )		4916280	3					
ANR	4916408	Condition	! info . is_submap	465:6:12579:12593	4916280	0	True				
ANR	4916409	UnaryOperationExpression	! info . is_submap		4916280	0					
ANR	4916410	UnaryOperator	!		4916280	0					
ANR	4916411	MemberAccess	info . is_submap		4916280	1					
ANR	4916412	Identifier	info		4916280	0					
ANR	4916413	Identifier	is_submap		4916280	1					
ANR	4916414	CompoundStatement		36:3:703:724	4916280	1					
ANR	4916415	IdentifierDeclStatement	int print_size ;	466:3:12601:12615	4916280	0	True				
ANR	4916416	IdentifierDecl	print_size		4916280	0					
ANR	4916417	IdentifierDeclType	int		4916280	0					
ANR	4916418	Identifier	print_size		4916280	1					
ANR	4916419	IdentifierDeclStatement	char * print_size_unit ;	467:3:12620:12641	4916280	1	True				
ANR	4916420	IdentifierDecl	* print_size_unit		4916280	0					
ANR	4916421	IdentifierDeclType	char *		4916280	0					
ANR	4916422	Identifier	print_size_unit		4916280	1					
ANR	4916423	ExpressionStatement	"io -> cb_printf ( num_printed ? ""   ... "" : ""Region "" )"	469:3:12647:12696	4916280	2	True				
ANR	4916424	CallExpression	"io -> cb_printf ( num_printed ? ""   ... "" : ""Region "" )"		4916280	0					
ANR	4916425	Callee	io -> cb_printf		4916280	0					
ANR	4916426	PtrMemberAccess	io -> cb_printf		4916280	0					
ANR	4916427	Identifier	io		4916280	0					
ANR	4916428	Identifier	cb_printf		4916280	1					
ANR	4916429	ArgumentList	"num_printed ? ""   ... "" : ""Region """		4916280	1					
ANR	4916430	Argument	"num_printed ? ""   ... "" : ""Region """		4916280	0					
ANR	4916431	ConditionalExpression	"num_printed ? ""   ... "" : ""Region """		4916280	0					
ANR	4916432	Condition	num_printed		4916280	0					
ANR	4916433	Identifier	num_printed		4916280	0					
ANR	4916434	PrimaryExpression	"""   ... """		4916280	1					
ANR	4916435	PrimaryExpression	"""Region """		4916280	2					
ANR	4916436	ExpressionStatement	print_size = size	472:3:12821:12838	4916280	3	True				
ANR	4916437	AssignmentExpression	print_size = size		4916280	0		=			
ANR	4916438	Identifier	print_size		4916280	0					
ANR	4916439	Identifier	size		4916280	1					
ANR	4916440	IfStatement	if ( print_size > 1024 )		4916280	4					
ANR	4916441	Condition	print_size > 1024	473:7:12847:12863	4916280	0	True				
ANR	4916442	RelationalExpression	print_size > 1024		4916280	0		>			
ANR	4916443	Identifier	print_size		4916280	0					
ANR	4916444	PrimaryExpression	1024		4916280	1					
ANR	4916445	CompoundStatement		42:26:949:949	4916280	1					
ANR	4916446	ExpressionStatement	print_size /= 1024	473:28:12868:12886	4916280	0	True				
ANR	4916447	AssignmentExpression	print_size /= 1024		4916280	0		/=			
ANR	4916448	Identifier	print_size		4916280	0					
ANR	4916449	PrimaryExpression	1024		4916280	1					
ANR	4916450	ExpressionStatement	"print_size_unit = ""K"""	473:48:12888:12909	4916280	1	True				
ANR	4916451	AssignmentExpression	"print_size_unit = ""K"""		4916280	0		=			
ANR	4916452	Identifier	print_size_unit		4916280	0					
ANR	4916453	PrimaryExpression	"""K"""		4916280	1					
ANR	4916454	IfStatement	if ( print_size > 1024 )		4916280	5					
ANR	4916455	Condition	print_size > 1024	474:7:12920:12936	4916280	0	True				
ANR	4916456	RelationalExpression	print_size > 1024		4916280	0		>			
ANR	4916457	Identifier	print_size		4916280	0					
ANR	4916458	PrimaryExpression	1024		4916280	1					
ANR	4916459	CompoundStatement		43:26:1022:1022	4916280	1					
ANR	4916460	ExpressionStatement	print_size /= 1024	474:28:12941:12959	4916280	0	True				
ANR	4916461	AssignmentExpression	print_size /= 1024		4916280	0		/=			
ANR	4916462	Identifier	print_size		4916280	0					
ANR	4916463	PrimaryExpression	1024		4916280	1					
ANR	4916464	ExpressionStatement	"print_size_unit = ""M"""	474:48:12961:12982	4916280	1	True				
ANR	4916465	AssignmentExpression	"print_size_unit = ""M"""		4916280	0		=			
ANR	4916466	Identifier	print_size_unit		4916280	0					
ANR	4916467	PrimaryExpression	"""M"""		4916280	1					
ANR	4916468	IfStatement	if ( print_size > 1024 )		4916280	6					
ANR	4916469	Condition	print_size > 1024	475:7:12993:13009	4916280	0	True				
ANR	4916470	RelationalExpression	print_size > 1024		4916280	0		>			
ANR	4916471	Identifier	print_size		4916280	0					
ANR	4916472	PrimaryExpression	1024		4916280	1					
ANR	4916473	CompoundStatement		44:26:1095:1095	4916280	1					
ANR	4916474	ExpressionStatement	print_size /= 1024	475:28:13014:13032	4916280	0	True				
ANR	4916475	AssignmentExpression	print_size /= 1024		4916280	0		/=			
ANR	4916476	Identifier	print_size		4916280	0					
ANR	4916477	PrimaryExpression	1024		4916280	1					
ANR	4916478	ExpressionStatement	"print_size_unit = ""G"""	475:48:13034:13055	4916280	1	True				
ANR	4916479	AssignmentExpression	"print_size_unit = ""G"""		4916280	0		=			
ANR	4916480	Identifier	print_size_unit		4916280	0					
ANR	4916481	PrimaryExpression	"""G"""		4916280	1					
ANR	4916482	ExpressionStatement	"io -> cb_printf ( "" %p - %p [%d%s](%x/%x; %d, %s, %u p. res, %u p. swp, %u p. drt, %u ref)"" , ( void * ) ( size_t ) ( address ) , ( void * ) ( size_t ) ( address + size ) , print_size , print_size_unit , info . protection , info . max_protection , info . inheritance , share_mode [ info . share_mode ] , info . pages_resident , info . pages_swapped_out , info . pages_dirtied , info . ref_count )"	477:3:13086:13489	4916280	7	True				
ANR	4916483	CallExpression	"io -> cb_printf ( "" %p - %p [%d%s](%x/%x; %d, %s, %u p. res, %u p. swp, %u p. drt, %u ref)"" , ( void * ) ( size_t ) ( address ) , ( void * ) ( size_t ) ( address + size ) , print_size , print_size_unit , info . protection , info . max_protection , info . inheritance , share_mode [ info . share_mode ] , info . pages_resident , info . pages_swapped_out , info . pages_dirtied , info . ref_count )"		4916280	0					
ANR	4916484	Callee	io -> cb_printf		4916280	0					
ANR	4916485	PtrMemberAccess	io -> cb_printf		4916280	0					
ANR	4916486	Identifier	io		4916280	0					
ANR	4916487	Identifier	cb_printf		4916280	1					
ANR	4916488	ArgumentList	""" %p - %p [%d%s](%x/%x; %d, %s, %u p. res, %u p. swp, %u p. drt, %u ref)"""		4916280	1					
ANR	4916489	Argument	""" %p - %p [%d%s](%x/%x; %d, %s, %u p. res, %u p. swp, %u p. drt, %u ref)"""		4916280	0					
ANR	4916490	PrimaryExpression	""" %p - %p [%d%s](%x/%x; %d, %s, %u p. res, %u p. swp, %u p. drt, %u ref)"""		4916280	0					
ANR	4916491	Argument	( void * ) ( size_t ) ( address )		4916280	1					
ANR	4916492	CastExpression	( void * ) ( size_t ) ( address )		4916280	0					
ANR	4916493	CastTarget	void *		4916280	0					
ANR	4916494	CastExpression	( size_t ) ( address )		4916280	1					
ANR	4916495	CastTarget	size_t		4916280	0					
ANR	4916496	Identifier	address		4916280	1					
ANR	4916497	Argument	( void * ) ( size_t ) ( address + size )		4916280	2					
ANR	4916498	CastExpression	( void * ) ( size_t ) ( address + size )		4916280	0					
ANR	4916499	CastTarget	void *		4916280	0					
ANR	4916500	CastExpression	( size_t ) ( address + size )		4916280	1					
ANR	4916501	CastTarget	size_t		4916280	0					
ANR	4916502	AdditiveExpression	address + size		4916280	1		+			
ANR	4916503	Identifier	address		4916280	0					
ANR	4916504	Identifier	size		4916280	1					
ANR	4916505	Argument	print_size		4916280	3					
ANR	4916506	Identifier	print_size		4916280	0					
ANR	4916507	Argument	print_size_unit		4916280	4					
ANR	4916508	Identifier	print_size_unit		4916280	0					
ANR	4916509	Argument	info . protection		4916280	5					
ANR	4916510	MemberAccess	info . protection		4916280	0					
ANR	4916511	Identifier	info		4916280	0					
ANR	4916512	Identifier	protection		4916280	1					
ANR	4916513	Argument	info . max_protection		4916280	6					
ANR	4916514	MemberAccess	info . max_protection		4916280	0					
ANR	4916515	Identifier	info		4916280	0					
ANR	4916516	Identifier	max_protection		4916280	1					
ANR	4916517	Argument	info . inheritance		4916280	7					
ANR	4916518	MemberAccess	info . inheritance		4916280	0					
ANR	4916519	Identifier	info		4916280	0					
ANR	4916520	Identifier	inheritance		4916280	1					
ANR	4916521	Argument	share_mode [ info . share_mode ]		4916280	8					
ANR	4916522	ArrayIndexing	share_mode [ info . share_mode ]		4916280	0					
ANR	4916523	Identifier	share_mode		4916280	0					
ANR	4916524	MemberAccess	info . share_mode		4916280	1					
ANR	4916525	Identifier	info		4916280	0					
ANR	4916526	Identifier	share_mode		4916280	1					
ANR	4916527	Argument	info . pages_resident		4916280	9					
ANR	4916528	MemberAccess	info . pages_resident		4916280	0					
ANR	4916529	Identifier	info		4916280	0					
ANR	4916530	Identifier	pages_resident		4916280	1					
ANR	4916531	Argument	info . pages_swapped_out		4916280	10					
ANR	4916532	MemberAccess	info . pages_swapped_out		4916280	0					
ANR	4916533	Identifier	info		4916280	0					
ANR	4916534	Identifier	pages_swapped_out		4916280	1					
ANR	4916535	Argument	info . pages_dirtied		4916280	11					
ANR	4916536	MemberAccess	info . pages_dirtied		4916280	0					
ANR	4916537	Identifier	info		4916280	0					
ANR	4916538	Identifier	pages_dirtied		4916280	1					
ANR	4916539	Argument	info . ref_count		4916280	12					
ANR	4916540	MemberAccess	info . ref_count		4916280	0					
ANR	4916541	Identifier	info		4916280	0					
ANR	4916542	Identifier	ref_count		4916280	1					
ANR	4916543	ExpressionStatement	self_sections [ self_sections_count ] . from = address	491:3:13495:13544	4916280	8	True				
ANR	4916544	AssignmentExpression	self_sections [ self_sections_count ] . from = address		4916280	0		=			
ANR	4916545	MemberAccess	self_sections [ self_sections_count ] . from		4916280	0					
ANR	4916546	ArrayIndexing	self_sections [ self_sections_count ]		4916280	0					
ANR	4916547	Identifier	self_sections		4916280	0					
ANR	4916548	Identifier	self_sections_count		4916280	1					
ANR	4916549	Identifier	from		4916280	1					
ANR	4916550	Identifier	address		4916280	1					
ANR	4916551	ExpressionStatement	self_sections [ self_sections_count ] . to = address + size	492:3:13549:13601	4916280	9	True				
ANR	4916552	AssignmentExpression	self_sections [ self_sections_count ] . to = address + size		4916280	0		=			
ANR	4916553	MemberAccess	self_sections [ self_sections_count ] . to		4916280	0					
ANR	4916554	ArrayIndexing	self_sections [ self_sections_count ]		4916280	0					
ANR	4916555	Identifier	self_sections		4916280	0					
ANR	4916556	Identifier	self_sections_count		4916280	1					
ANR	4916557	Identifier	to		4916280	1					
ANR	4916558	AdditiveExpression	address + size		4916280	1		+			
ANR	4916559	Identifier	address		4916280	0					
ANR	4916560	Identifier	size		4916280	1					
ANR	4916561	ExpressionStatement	self_sections [ self_sections_count ] . perm = R_PERM_R	493:3:13606:13656	4916280	10	True				
ANR	4916562	AssignmentExpression	self_sections [ self_sections_count ] . perm = R_PERM_R		4916280	0		=			
ANR	4916563	MemberAccess	self_sections [ self_sections_count ] . perm		4916280	0					
ANR	4916564	ArrayIndexing	self_sections [ self_sections_count ]		4916280	0					
ANR	4916565	Identifier	self_sections		4916280	0					
ANR	4916566	Identifier	self_sections_count		4916280	1					
ANR	4916567	Identifier	perm		4916280	1					
ANR	4916568	Identifier	R_PERM_R		4916280	1					
ANR	4916569	ExpressionStatement	self_sections_count ++	494:3:13680:13701	4916280	11	True				
ANR	4916570	PostIncDecOperationExpression	self_sections_count ++		4916280	0					
ANR	4916571	Identifier	self_sections_count		4916280	0					
ANR	4916572	IncDec	++		4916280	1					
ANR	4916573	IfStatement	if ( nsubregions > 1 )		4916280	12					
ANR	4916574	Condition	nsubregions > 1	495:7:13710:13724	4916280	0	True				
ANR	4916575	RelationalExpression	nsubregions > 1		4916280	0		>			
ANR	4916576	Identifier	nsubregions		4916280	0					
ANR	4916577	PrimaryExpression	1		4916280	1					
ANR	4916578	CompoundStatement		64:24:1810:1810	4916280	1					
ANR	4916579	ExpressionStatement	"io -> cb_printf ( "" (%d sub-regions)"" , nsubregions )"	496:4:13733:13781	4916280	0	True				
ANR	4916580	CallExpression	"io -> cb_printf ( "" (%d sub-regions)"" , nsubregions )"		4916280	0					
ANR	4916581	Callee	io -> cb_printf		4916280	0					
ANR	4916582	PtrMemberAccess	io -> cb_printf		4916280	0					
ANR	4916583	Identifier	io		4916280	0					
ANR	4916584	Identifier	cb_printf		4916280	1					
ANR	4916585	ArgumentList	""" (%d sub-regions)"""		4916280	1					
ANR	4916586	Argument	""" (%d sub-regions)"""		4916280	0					
ANR	4916587	PrimaryExpression	""" (%d sub-regions)"""		4916280	0					
ANR	4916588	Argument	nsubregions		4916280	1					
ANR	4916589	Identifier	nsubregions		4916280	0					
ANR	4916590	ExpressionStatement	"io -> cb_printf ( ""\\n"" )"	498:3:13791:13811	4916280	13	True				
ANR	4916591	CallExpression	"io -> cb_printf ( ""\\n"" )"		4916280	0					
ANR	4916592	Callee	io -> cb_printf		4916280	0					
ANR	4916593	PtrMemberAccess	io -> cb_printf		4916280	0					
ANR	4916594	Identifier	io		4916280	0					
ANR	4916595	Identifier	cb_printf		4916280	1					
ANR	4916596	ArgumentList	"""\\n"""		4916280	1					
ANR	4916597	Argument	"""\\n"""		4916280	0					
ANR	4916598	PrimaryExpression	"""\\n"""		4916280	0					
ANR	4916599	ExpressionStatement	num_printed ++	500:3:13817:13830	4916280	14	True				
ANR	4916600	PostIncDecOperationExpression	num_printed ++		4916280	0					
ANR	4916601	Identifier	num_printed		4916280	0					
ANR	4916602	IncDec	++		4916280	1					
ANR	4916603	ExpressionStatement	address += size	501:3:13835:13850	4916280	15	True				
ANR	4916604	AssignmentExpression	address += size		4916280	0		+=			
ANR	4916605	Identifier	address		4916280	0					
ANR	4916606	Identifier	size		4916280	1					
ANR	4916607	ExpressionStatement	size = 0	502:3:13855:13863	4916280	16	True				
ANR	4916608	AssignmentExpression	size = 0		4916280	0		=			
ANR	4916609	Identifier	size		4916280	0					
ANR	4916610	PrimaryExpression	0		4916280	1					
ANR	4916611	ElseStatement	else		4916280	0					
ANR	4916612	CompoundStatement		72:9:1957:1957	4916280	0					
ANR	4916613	ExpressionStatement	nsubregions ++	504:3:13879:13892	4916280	0	True				
ANR	4916614	PostIncDecOperationExpression	nsubregions ++		4916280	0					
ANR	4916615	Identifier	nsubregions		4916280	0					
ANR	4916616	IncDec	++		4916280	1					
ANR	4916617	IfStatement	if ( ( max > 0 ) && ( num_printed >= max ) )		4916280	4					
ANR	4916618	Condition	( max > 0 ) && ( num_printed >= max )	507:6:13905:13937	4916280	0	True				
ANR	4916619	AndExpression	( max > 0 ) && ( num_printed >= max )		4916280	0		&&			
ANR	4916620	RelationalExpression	max > 0		4916280	0		>			
ANR	4916621	Identifier	max		4916280	0					
ANR	4916622	PrimaryExpression	0		4916280	1					
ANR	4916623	RelationalExpression	num_printed >= max		4916280	1		>=			
ANR	4916624	Identifier	num_printed		4916280	0					
ANR	4916625	Identifier	max		4916280	1					
ANR	4916626	CompoundStatement		76:41:2023:2023	4916280	1					
ANR	4916627	ExpressionStatement	"eprintf ( ""Max %d num_printed %d\\n"" , max , num_printed )"	508:3:13945:13998	4916280	0	True				
ANR	4916628	CallExpression	"eprintf ( ""Max %d num_printed %d\\n"" , max , num_printed )"		4916280	0					
ANR	4916629	Callee	eprintf		4916280	0					
ANR	4916630	Identifier	eprintf		4916280	0					
ANR	4916631	ArgumentList	"""Max %d num_printed %d\\n"""		4916280	1					
ANR	4916632	Argument	"""Max %d num_printed %d\\n"""		4916280	0					
ANR	4916633	PrimaryExpression	"""Max %d num_printed %d\\n"""		4916280	0					
ANR	4916634	Argument	max		4916280	1					
ANR	4916635	Identifier	max		4916280	0					
ANR	4916636	Argument	num_printed		4916280	2					
ANR	4916637	Identifier	num_printed		4916280	0					
ANR	4916638	BreakStatement	break ;	509:3:14003:14008	4916280	1	True				
ANR	4916639	ReturnType	void		4916280	1					
ANR	4916640	Identifier	macosx_debug_regions		4916280	2					
ANR	4916641	ParameterList	"RIO * io , task_t task , mach_vm_address_t address , int max"		4916280	3					
ANR	4916642	Parameter	RIO * io	432:27:11858:11864	4916280	0	True				
ANR	4916643	ParameterType	RIO *		4916280	0					
ANR	4916644	Identifier	io		4916280	1					
ANR	4916645	Parameter	task_t task	432:36:11867:11877	4916280	1	True				
ANR	4916646	ParameterType	task_t		4916280	0					
ANR	4916647	Identifier	task		4916280	1					
ANR	4916648	Parameter	mach_vm_address_t address	432:49:11880:11904	4916280	2	True				
ANR	4916649	ParameterType	mach_vm_address_t		4916280	0					
ANR	4916650	Identifier	address		4916280	1					
ANR	4916651	Parameter	int max	432:76:11907:11913	4916280	3	True				
ANR	4916652	ParameterType	int		4916280	0					
ANR	4916653	Identifier	max		4916280	1					
ANR	4916654	CFGEntryNode	ENTRY		4916280		True				
ANR	4916655	CFGExitNode	EXIT		4916280		True				
ANR	4916656	InfiniteForNode	true		4916280		True				
ANR	4916657	Symbol	info . pages_dirtied		4916280						
ANR	4916658	Symbol	* self_sections		4916280						
ANR	4916659	Symbol	mach_vm_region_recurse		4916280						
ANR	4916660	Symbol	self_sections [ self_sections_count ] . from		4916280						
ANR	4916661	Symbol	info . pages_swapped_out		4916280						
ANR	4916662	Symbol	info . pages_resident		4916280						
ANR	4916663	Symbol	& nsubregions		4916280						
ANR	4916664	Symbol	nsubregions		4916280						
ANR	4916665	Symbol	self_sections [ self_sections_count ] . to		4916280						
ANR	4916666	Symbol	num_printed		4916280						
ANR	4916667	Symbol	print_size		4916280						
ANR	4916668	Symbol	R_PERM_R		4916280						
ANR	4916669	Symbol	self_sections		4916280						
ANR	4916670	Symbol	* self_sections_count		4916280						
ANR	4916671	Symbol	KERN_SUCCESS		4916280						
ANR	4916672	Symbol	info . share_mode		4916280						
ANR	4916673	Symbol	info . protection		4916280						
ANR	4916674	Symbol	info		4916280						
ANR	4916675	Symbol	& address		4916280						
ANR	4916676	Symbol	* share_mode		4916280						
ANR	4916677	Symbol	* info . share_mode		4916280						
ANR	4916678	Symbol	self_sections_count		4916280						
ANR	4916679	Symbol	address		4916280						
ANR	4916680	Symbol	print_size_unit		4916280						
ANR	4916681	Symbol	kret		4916280						
ANR	4916682	Symbol	& info		4916280						
ANR	4916683	Symbol	info . is_submap		4916280						
ANR	4916684	Symbol	max		4916280						
ANR	4916685	Symbol	io		4916280						
ANR	4916686	Symbol	count		4916280						
ANR	4916687	Symbol	share_mode		4916280						
ANR	4916688	Symbol	& size		4916280						
ANR	4916689	Symbol	mach_error_string		4916280						
ANR	4916690	Symbol	info . ref_count		4916280						
ANR	4916691	Symbol	info . max_protection		4916280						
ANR	4916692	Symbol	task		4916280						
ANR	4916693	Symbol	size		4916280						
ANR	4916694	Symbol	info . inheritance		4916280						
ANR	4916695	Symbol	& count		4916280						
ANR	4916696	Symbol	self_sections [ self_sections_count ] . perm		4916280						
ANR	4916697	Symbol	* info		4916280						
ANR	4916698	Symbol	VM_REGION_SUBMAP_INFO_COUNT_64		4916280						
ANR	4916699	Function	bsd_proc_vmmaps	514:0:14033:19355							
ANR	4916700	FunctionDef	"bsd_proc_vmmaps (RIO * io , int pid)"		4916699	0					
ANR	4916701	CompoundStatement		514:39:14072:19355	4916699	0					
ANR	4916702	IdentifierDeclStatement	size_t size ;	516:1:14091:14102	4916699	0	True				
ANR	4916703	IdentifierDecl	size		4916699	0					
ANR	4916704	IdentifierDeclType	size_t		4916699	0					
ANR	4916705	Identifier	size		4916699	1					
ANR	4916706	IdentifierDeclStatement	bool ret = false ;	517:1:14105:14121	4916699	1	True				
ANR	4916707	IdentifierDecl	ret = false		4916699	0					
ANR	4916708	IdentifierDeclType	bool		4916699	0					
ANR	4916709	Identifier	ret		4916699	1					
ANR	4916710	AssignmentExpression	ret = false		4916699	2		=			
ANR	4916711	Identifier	false		4916699	0					
ANR	4916712	Identifier	false		4916699	1					
ANR	4916713	IdentifierDeclStatement	"int mib [ 4 ] = { CTL_KERN , KERN_PROC , KERN_PROC_VMMAP , pid } ;"	518:1:14124:14185	4916699	2	True				
ANR	4916714	IdentifierDecl	"mib [ 4 ] = { CTL_KERN , KERN_PROC , KERN_PROC_VMMAP , pid }"		4916699	0					
ANR	4916715	IdentifierDeclType	int [ 4 ]		4916699	0					
ANR	4916716	Identifier	mib		4916699	1					
ANR	4916717	PrimaryExpression	4		4916699	2					
ANR	4916718	AssignmentExpression	"mib [ 4 ] = { CTL_KERN , KERN_PROC , KERN_PROC_VMMAP , pid }"		4916699	3		=			
ANR	4916719	Identifier	mib		4916699	0					
ANR	4916720	InitializerList	CTL_KERN		4916699	1					
ANR	4916721	Identifier	CTL_KERN		4916699	0					
ANR	4916722	Identifier	KERN_PROC		4916699	1					
ANR	4916723	Identifier	KERN_PROC_VMMAP		4916699	2					
ANR	4916724	Identifier	pid		4916699	3					
ANR	4916725	IdentifierDeclStatement	"int s = sysctl ( mib , 4 , NULL , & size , NULL , 0 ) ;"	521:1:14188:14233	4916699	3	True				
ANR	4916726	IdentifierDecl	"s = sysctl ( mib , 4 , NULL , & size , NULL , 0 )"		4916699	0					
ANR	4916727	IdentifierDeclType	int		4916699	0					
ANR	4916728	Identifier	s		4916699	1					
ANR	4916729	AssignmentExpression	"s = sysctl ( mib , 4 , NULL , & size , NULL , 0 )"		4916699	2		=			
ANR	4916730	Identifier	s		4916699	0					
ANR	4916731	CallExpression	"sysctl ( mib , 4 , NULL , & size , NULL , 0 )"		4916699	1					
ANR	4916732	Callee	sysctl		4916699	0					
ANR	4916733	Identifier	sysctl		4916699	0					
ANR	4916734	ArgumentList	mib		4916699	1					
ANR	4916735	Argument	mib		4916699	0					
ANR	4916736	Identifier	mib		4916699	0					
ANR	4916737	Argument	4		4916699	1					
ANR	4916738	PrimaryExpression	4		4916699	0					
ANR	4916739	Argument	NULL		4916699	2					
ANR	4916740	Identifier	NULL		4916699	0					
ANR	4916741	Argument	& size		4916699	3					
ANR	4916742	UnaryOperationExpression	& size		4916699	0					
ANR	4916743	UnaryOperator	&		4916699	0					
ANR	4916744	Identifier	size		4916699	1					
ANR	4916745	Argument	NULL		4916699	4					
ANR	4916746	Identifier	NULL		4916699	0					
ANR	4916747	Argument	0		4916699	5					
ANR	4916748	PrimaryExpression	0		4916699	0					
ANR	4916749	IfStatement	if ( s == - 1 )		4916699	4					
ANR	4916750	Condition	s == - 1	522:5:14240:14246	4916699	0	True				
ANR	4916751	EqualityExpression	s == - 1		4916699	0		==			
ANR	4916752	Identifier	s		4916699	0					
ANR	4916753	UnaryOperationExpression	- 1		4916699	1					
ANR	4916754	UnaryOperator	-		4916699	0					
ANR	4916755	PrimaryExpression	1		4916699	1					
ANR	4916756	CompoundStatement		9:14:176:176	4916699	1					
ANR	4916757	ExpressionStatement	"eprintf ( ""sysctl failed: %s\\n"" , strerror ( errno ) )"	523:2:14253:14302	4916699	0	True				
ANR	4916758	CallExpression	"eprintf ( ""sysctl failed: %s\\n"" , strerror ( errno ) )"		4916699	0					
ANR	4916759	Callee	eprintf		4916699	0					
ANR	4916760	Identifier	eprintf		4916699	0					
ANR	4916761	ArgumentList	"""sysctl failed: %s\\n"""		4916699	1					
ANR	4916762	Argument	"""sysctl failed: %s\\n"""		4916699	0					
ANR	4916763	PrimaryExpression	"""sysctl failed: %s\\n"""		4916699	0					
ANR	4916764	Argument	strerror ( errno )		4916699	1					
ANR	4916765	CallExpression	strerror ( errno )		4916699	0					
ANR	4916766	Callee	strerror		4916699	0					
ANR	4916767	Identifier	strerror		4916699	0					
ANR	4916768	ArgumentList	errno		4916699	1					
ANR	4916769	Argument	errno		4916699	0					
ANR	4916770	Identifier	errno		4916699	0					
ANR	4916771	ReturnStatement	return false ;	524:2:14306:14318	4916699	1	True				
ANR	4916772	Identifier	false		4916699	0					
ANR	4916773	ExpressionStatement	size = size * 4 / 3	527:1:14325:14344	4916699	5	True				
ANR	4916774	AssignmentExpression	size = size * 4 / 3		4916699	0		=			
ANR	4916775	Identifier	size		4916699	0					
ANR	4916776	MultiplicativeExpression	size * 4 / 3		4916699	1		*			
ANR	4916777	Identifier	size		4916699	0					
ANR	4916778	MultiplicativeExpression	4 / 3		4916699	1		/			
ANR	4916779	PrimaryExpression	4		4916699	0					
ANR	4916780	PrimaryExpression	3		4916699	1					
ANR	4916781	IdentifierDeclStatement	ut8 * p = malloc ( size ) ;	528:1:14347:14369	4916699	6	True				
ANR	4916782	IdentifierDecl	* p = malloc ( size )		4916699	0					
ANR	4916783	IdentifierDeclType	ut8 *		4916699	0					
ANR	4916784	Identifier	p		4916699	1					
ANR	4916785	AssignmentExpression	* p = malloc ( size )		4916699	2		=			
ANR	4916786	Identifier	p		4916699	0					
ANR	4916787	CallExpression	malloc ( size )		4916699	1					
ANR	4916788	Callee	malloc		4916699	0					
ANR	4916789	Identifier	malloc		4916699	0					
ANR	4916790	ArgumentList	size		4916699	1					
ANR	4916791	Argument	size		4916699	0					
ANR	4916792	Identifier	size		4916699	0					
ANR	4916793	IfStatement	if ( p )		4916699	7					
ANR	4916794	Condition	p	529:5:14376:14376	4916699	0	True				
ANR	4916795	Identifier	p		4916699	0					
ANR	4916796	CompoundStatement		23:2:461:482	4916699	1					
ANR	4916797	ExpressionStatement	"s = sysctl ( mib , 4 , p , & size , NULL , 0 )"	530:2:14383:14421	4916699	0	True				
ANR	4916798	AssignmentExpression	"s = sysctl ( mib , 4 , p , & size , NULL , 0 )"		4916699	0		=			
ANR	4916799	Identifier	s		4916699	0					
ANR	4916800	CallExpression	"sysctl ( mib , 4 , p , & size , NULL , 0 )"		4916699	1					
ANR	4916801	Callee	sysctl		4916699	0					
ANR	4916802	Identifier	sysctl		4916699	0					
ANR	4916803	ArgumentList	mib		4916699	1					
ANR	4916804	Argument	mib		4916699	0					
ANR	4916805	Identifier	mib		4916699	0					
ANR	4916806	Argument	4		4916699	1					
ANR	4916807	PrimaryExpression	4		4916699	0					
ANR	4916808	Argument	p		4916699	2					
ANR	4916809	Identifier	p		4916699	0					
ANR	4916810	Argument	& size		4916699	3					
ANR	4916811	UnaryOperationExpression	& size		4916699	0					
ANR	4916812	UnaryOperator	&		4916699	0					
ANR	4916813	Identifier	size		4916699	1					
ANR	4916814	Argument	NULL		4916699	4					
ANR	4916815	Identifier	NULL		4916699	0					
ANR	4916816	Argument	0		4916699	5					
ANR	4916817	PrimaryExpression	0		4916699	0					
ANR	4916818	IfStatement	if ( s == - 1 )		4916699	1					
ANR	4916819	Condition	s == - 1	531:6:14429:14435	4916699	0	True				
ANR	4916820	EqualityExpression	s == - 1		4916699	0		==			
ANR	4916821	Identifier	s		4916699	0					
ANR	4916822	UnaryOperationExpression	- 1		4916699	1					
ANR	4916823	UnaryOperator	-		4916699	0					
ANR	4916824	PrimaryExpression	1		4916699	1					
ANR	4916825	CompoundStatement		18:15:365:365	4916699	1					
ANR	4916826	ExpressionStatement	"eprintf ( ""sysctl failed: %s\\n"" , strerror ( errno ) )"	532:3:14443:14492	4916699	0	True				
ANR	4916827	CallExpression	"eprintf ( ""sysctl failed: %s\\n"" , strerror ( errno ) )"		4916699	0					
ANR	4916828	Callee	eprintf		4916699	0					
ANR	4916829	Identifier	eprintf		4916699	0					
ANR	4916830	ArgumentList	"""sysctl failed: %s\\n"""		4916699	1					
ANR	4916831	Argument	"""sysctl failed: %s\\n"""		4916699	0					
ANR	4916832	PrimaryExpression	"""sysctl failed: %s\\n"""		4916699	0					
ANR	4916833	Argument	strerror ( errno )		4916699	1					
ANR	4916834	CallExpression	strerror ( errno )		4916699	0					
ANR	4916835	Callee	strerror		4916699	0					
ANR	4916836	Identifier	strerror		4916699	0					
ANR	4916837	ArgumentList	errno		4916699	1					
ANR	4916838	Argument	errno		4916699	0					
ANR	4916839	Identifier	errno		4916699	0					
ANR	4916840	GotoStatement	goto exit ;	533:3:14497:14506	4916699	1	True				
ANR	4916841	Identifier	exit		4916699	0					
ANR	4916842	IdentifierDeclStatement	ut8 * p_start = p ;	535:2:14514:14530	4916699	2	True				
ANR	4916843	IdentifierDecl	* p_start = p		4916699	0					
ANR	4916844	IdentifierDeclType	ut8 *		4916699	0					
ANR	4916845	Identifier	p_start		4916699	1					
ANR	4916846	AssignmentExpression	* p_start = p		4916699	2		=			
ANR	4916847	Identifier	p		4916699	0					
ANR	4916848	Identifier	p		4916699	1					
ANR	4916849	IdentifierDeclStatement	ut8 * p_end = p + size ;	536:2:14534:14555	4916699	3	True				
ANR	4916850	IdentifierDecl	* p_end = p + size		4916699	0					
ANR	4916851	IdentifierDeclType	ut8 *		4916699	0					
ANR	4916852	Identifier	p_end		4916699	1					
ANR	4916853	AssignmentExpression	* p_end = p + size		4916699	2		=			
ANR	4916854	Identifier	p_end		4916699	0					
ANR	4916855	AdditiveExpression	p + size		4916699	1		+			
ANR	4916856	Identifier	p		4916699	0					
ANR	4916857	Identifier	size		4916699	1					
ANR	4916858	WhileStatement	while ( p_start < p_end )		4916699	4					
ANR	4916859	Condition	p_start < p_end	538:9:14567:14581	4916699	0	True				
ANR	4916860	RelationalExpression	p_start < p_end		4916699	0		<			
ANR	4916861	Identifier	p_start		4916699	0					
ANR	4916862	Identifier	p_end		4916699	1					
ANR	4916863	CompoundStatement		28:3:620:632	4916699	1					
ANR	4916864	IdentifierDeclStatement	struct kinfo_vmentry * entry = ( struct kinfo_vmentry * ) p_start ;	539:3:14589:14650	4916699	0	True				
ANR	4916865	IdentifierDecl	* entry = ( struct kinfo_vmentry * ) p_start		4916699	0					
ANR	4916866	IdentifierDeclType	struct kinfo_vmentry *		4916699	0					
ANR	4916867	Identifier	entry		4916699	1					
ANR	4916868	AssignmentExpression	* entry = ( struct kinfo_vmentry * ) p_start		4916699	2		=			
ANR	4916869	Identifier	entry		4916699	0					
ANR	4916870	CastExpression	( struct kinfo_vmentry * ) p_start		4916699	1					
ANR	4916871	CastTarget	struct kinfo_vmentry *		4916699	0					
ANR	4916872	Identifier	p_start		4916699	1					
ANR	4916873	IdentifierDeclStatement	size_t sz = entry -> kve_structsize ;	540:3:14655:14688	4916699	1	True				
ANR	4916874	IdentifierDecl	sz = entry -> kve_structsize		4916699	0					
ANR	4916875	IdentifierDeclType	size_t		4916699	0					
ANR	4916876	Identifier	sz		4916699	1					
ANR	4916877	AssignmentExpression	sz = entry -> kve_structsize		4916699	2		=			
ANR	4916878	Identifier	sz		4916699	0					
ANR	4916879	PtrMemberAccess	entry -> kve_structsize		4916699	1					
ANR	4916880	Identifier	entry		4916699	0					
ANR	4916881	Identifier	kve_structsize		4916699	1					
ANR	4916882	IdentifierDeclStatement	int perm = 0 ;	541:3:14693:14705	4916699	2	True				
ANR	4916883	IdentifierDecl	perm = 0		4916699	0					
ANR	4916884	IdentifierDeclType	int		4916699	0					
ANR	4916885	Identifier	perm		4916699	1					
ANR	4916886	AssignmentExpression	perm = 0		4916699	2		=			
ANR	4916887	Identifier	perm		4916699	0					
ANR	4916888	PrimaryExpression	0		4916699	1					
ANR	4916889	IfStatement	if ( sz == 0 )		4916699	3					
ANR	4916890	Condition	sz == 0	542:7:14714:14720	4916699	0	True				
ANR	4916891	EqualityExpression	sz == 0		4916699	0		==			
ANR	4916892	Identifier	sz		4916699	0					
ANR	4916893	PrimaryExpression	0		4916699	1					
ANR	4916894	CompoundStatement		29:16:650:650	4916699	1					
ANR	4916895	BreakStatement	break ;	543:4:14729:14734	4916699	0	True				
ANR	4916896	IfStatement	if ( entry -> kve_protection & KVME_PROT_READ )		4916699	4					
ANR	4916897	Condition	entry -> kve_protection & KVME_PROT_READ	546:7:14749:14786	4916699	0	True				
ANR	4916898	BitAndExpression	entry -> kve_protection & KVME_PROT_READ		4916699	0		&			
ANR	4916899	PtrMemberAccess	entry -> kve_protection		4916699	0					
ANR	4916900	Identifier	entry		4916699	0					
ANR	4916901	Identifier	kve_protection		4916699	1					
ANR	4916902	Identifier	KVME_PROT_READ		4916699	1					
ANR	4916903	CompoundStatement		33:47:716:716	4916699	1					
ANR	4916904	ExpressionStatement	perm |= R_PERM_R	547:4:14795:14811	4916699	0	True				
ANR	4916905	AssignmentExpression	perm |= R_PERM_R		4916699	0		|=			
ANR	4916906	Identifier	perm		4916699	0					
ANR	4916907	Identifier	R_PERM_R		4916699	1					
ANR	4916908	IfStatement	if ( entry -> kve_protection & KVME_PROT_WRITE )		4916699	5					
ANR	4916909	Condition	entry -> kve_protection & KVME_PROT_WRITE	549:7:14825:14863	4916699	0	True				
ANR	4916910	BitAndExpression	entry -> kve_protection & KVME_PROT_WRITE		4916699	0		&			
ANR	4916911	PtrMemberAccess	entry -> kve_protection		4916699	0					
ANR	4916912	Identifier	entry		4916699	0					
ANR	4916913	Identifier	kve_protection		4916699	1					
ANR	4916914	Identifier	KVME_PROT_WRITE		4916699	1					
ANR	4916915	CompoundStatement		36:48:793:793	4916699	1					
ANR	4916916	ExpressionStatement	perm |= R_PERM_W	550:4:14872:14888	4916699	0	True				
ANR	4916917	AssignmentExpression	perm |= R_PERM_W		4916699	0		|=			
ANR	4916918	Identifier	perm		4916699	0					
ANR	4916919	Identifier	R_PERM_W		4916699	1					
ANR	4916920	IfStatement	if ( entry -> kve_protection & KVME_PROT_EXEC )		4916699	6					
ANR	4916921	Condition	entry -> kve_protection & KVME_PROT_EXEC	552:7:14902:14939	4916699	0	True				
ANR	4916922	BitAndExpression	entry -> kve_protection & KVME_PROT_EXEC		4916699	0		&			
ANR	4916923	PtrMemberAccess	entry -> kve_protection		4916699	0					
ANR	4916924	Identifier	entry		4916699	0					
ANR	4916925	Identifier	kve_protection		4916699	1					
ANR	4916926	Identifier	KVME_PROT_EXEC		4916699	1					
ANR	4916927	CompoundStatement		39:47:869:869	4916699	1					
ANR	4916928	ExpressionStatement	perm |= R_PERM_X	553:4:14948:14964	4916699	0	True				
ANR	4916929	AssignmentExpression	perm |= R_PERM_X		4916699	0		|=			
ANR	4916930	Identifier	perm		4916699	0					
ANR	4916931	Identifier	R_PERM_X		4916699	1					
ANR	4916932	IfStatement	if ( entry -> kve_path [ 0 ] != '\\0' )		4916699	7					
ANR	4916933	Condition	entry -> kve_path [ 0 ] != '\\0'	556:7:14979:15004	4916699	0	True				
ANR	4916934	EqualityExpression	entry -> kve_path [ 0 ] != '\\0'		4916699	0		!=			
ANR	4916935	ArrayIndexing	entry -> kve_path [ 0 ]		4916699	0					
ANR	4916936	PtrMemberAccess	entry -> kve_path		4916699	0					
ANR	4916937	Identifier	entry		4916699	0					
ANR	4916938	Identifier	kve_path		4916699	1					
ANR	4916939	PrimaryExpression	0		4916699	1					
ANR	4916940	PrimaryExpression	'\\0'		4916699	1					
ANR	4916941	CompoundStatement		43:35:934:934	4916699	1					
ANR	4916942	ExpressionStatement	"io -> cb_printf ( "" %p - %p %s (%s)\\n"" , ( void * ) entry -> kve_start , ( void * ) entry -> kve_end , r_str_rwx_i ( perm ) , entry -> kve_path )"	557:4:15013:15160	4916699	0	True				
ANR	4916943	CallExpression	"io -> cb_printf ( "" %p - %p %s (%s)\\n"" , ( void * ) entry -> kve_start , ( void * ) entry -> kve_end , r_str_rwx_i ( perm ) , entry -> kve_path )"		4916699	0					
ANR	4916944	Callee	io -> cb_printf		4916699	0					
ANR	4916945	PtrMemberAccess	io -> cb_printf		4916699	0					
ANR	4916946	Identifier	io		4916699	0					
ANR	4916947	Identifier	cb_printf		4916699	1					
ANR	4916948	ArgumentList	""" %p - %p %s (%s)\\n"""		4916699	1					
ANR	4916949	Argument	""" %p - %p %s (%s)\\n"""		4916699	0					
ANR	4916950	PrimaryExpression	""" %p - %p %s (%s)\\n"""		4916699	0					
ANR	4916951	Argument	( void * ) entry -> kve_start		4916699	1					
ANR	4916952	CastExpression	( void * ) entry -> kve_start		4916699	0					
ANR	4916953	CastTarget	void *		4916699	0					
ANR	4916954	PtrMemberAccess	entry -> kve_start		4916699	1					
ANR	4916955	Identifier	entry		4916699	0					
ANR	4916956	Identifier	kve_start		4916699	1					
ANR	4916957	Argument	( void * ) entry -> kve_end		4916699	2					
ANR	4916958	CastExpression	( void * ) entry -> kve_end		4916699	0					
ANR	4916959	CastTarget	void *		4916699	0					
ANR	4916960	PtrMemberAccess	entry -> kve_end		4916699	1					
ANR	4916961	Identifier	entry		4916699	0					
ANR	4916962	Identifier	kve_end		4916699	1					
ANR	4916963	Argument	r_str_rwx_i ( perm )		4916699	3					
ANR	4916964	CallExpression	r_str_rwx_i ( perm )		4916699	0					
ANR	4916965	Callee	r_str_rwx_i		4916699	0					
ANR	4916966	Identifier	r_str_rwx_i		4916699	0					
ANR	4916967	ArgumentList	perm		4916699	1					
ANR	4916968	Argument	perm		4916699	0					
ANR	4916969	Identifier	perm		4916699	0					
ANR	4916970	Argument	entry -> kve_path		4916699	4					
ANR	4916971	PtrMemberAccess	entry -> kve_path		4916699	0					
ANR	4916972	Identifier	entry		4916699	0					
ANR	4916973	Identifier	kve_path		4916699	1					
ANR	4916974	ExpressionStatement	self_sections [ self_sections_count ] . from = entry -> kve_start	564:3:15171:15229	4916699	8	True				
ANR	4916975	AssignmentExpression	self_sections [ self_sections_count ] . from = entry -> kve_start		4916699	0		=			
ANR	4916976	MemberAccess	self_sections [ self_sections_count ] . from		4916699	0					
ANR	4916977	ArrayIndexing	self_sections [ self_sections_count ]		4916699	0					
ANR	4916978	Identifier	self_sections		4916699	0					
ANR	4916979	Identifier	self_sections_count		4916699	1					
ANR	4916980	Identifier	from		4916699	1					
ANR	4916981	PtrMemberAccess	entry -> kve_start		4916699	1					
ANR	4916982	Identifier	entry		4916699	0					
ANR	4916983	Identifier	kve_start		4916699	1					
ANR	4916984	ExpressionStatement	self_sections [ self_sections_count ] . to = entry -> kve_end	565:3:15234:15288	4916699	9	True				
ANR	4916985	AssignmentExpression	self_sections [ self_sections_count ] . to = entry -> kve_end		4916699	0		=			
ANR	4916986	MemberAccess	self_sections [ self_sections_count ] . to		4916699	0					
ANR	4916987	ArrayIndexing	self_sections [ self_sections_count ]		4916699	0					
ANR	4916988	Identifier	self_sections		4916699	0					
ANR	4916989	Identifier	self_sections_count		4916699	1					
ANR	4916990	Identifier	to		4916699	1					
ANR	4916991	PtrMemberAccess	entry -> kve_end		4916699	1					
ANR	4916992	Identifier	entry		4916699	0					
ANR	4916993	Identifier	kve_end		4916699	1					
ANR	4916994	ExpressionStatement	self_sections [ self_sections_count ] . name = strdup ( entry -> kve_path )	566:3:15293:15359	4916699	10	True				
ANR	4916995	AssignmentExpression	self_sections [ self_sections_count ] . name = strdup ( entry -> kve_path )		4916699	0		=			
ANR	4916996	MemberAccess	self_sections [ self_sections_count ] . name		4916699	0					
ANR	4916997	ArrayIndexing	self_sections [ self_sections_count ]		4916699	0					
ANR	4916998	Identifier	self_sections		4916699	0					
ANR	4916999	Identifier	self_sections_count		4916699	1					
ANR	4917000	Identifier	name		4916699	1					
ANR	4917001	CallExpression	strdup ( entry -> kve_path )		4916699	1					
ANR	4917002	Callee	strdup		4916699	0					
ANR	4917003	Identifier	strdup		4916699	0					
ANR	4917004	ArgumentList	entry -> kve_path		4916699	1					
ANR	4917005	Argument	entry -> kve_path		4916699	0					
ANR	4917006	PtrMemberAccess	entry -> kve_path		4916699	0					
ANR	4917007	Identifier	entry		4916699	0					
ANR	4917008	Identifier	kve_path		4916699	1					
ANR	4917009	ExpressionStatement	self_sections [ self_sections_count ] . perm = perm	567:3:15364:15410	4916699	11	True				
ANR	4917010	AssignmentExpression	self_sections [ self_sections_count ] . perm = perm		4916699	0		=			
ANR	4917011	MemberAccess	self_sections [ self_sections_count ] . perm		4916699	0					
ANR	4917012	ArrayIndexing	self_sections [ self_sections_count ]		4916699	0					
ANR	4917013	Identifier	self_sections		4916699	0					
ANR	4917014	Identifier	self_sections_count		4916699	1					
ANR	4917015	Identifier	perm		4916699	1					
ANR	4917016	Identifier	perm		4916699	1					
ANR	4917017	ExpressionStatement	self_sections_count ++	568:3:15415:15436	4916699	12	True				
ANR	4917018	PostIncDecOperationExpression	self_sections_count ++		4916699	0					
ANR	4917019	Identifier	self_sections_count		4916699	0					
ANR	4917020	IncDec	++		4916699	1					
ANR	4917021	ExpressionStatement	p_start += sz	569:3:15441:15454	4916699	13	True				
ANR	4917022	AssignmentExpression	p_start += sz		4916699	0		+=			
ANR	4917023	Identifier	p_start		4916699	0					
ANR	4917024	Identifier	sz		4916699	1					
ANR	4917025	ExpressionStatement	ret = true	572:2:15463:15473	4916699	5	True				
ANR	4917026	AssignmentExpression	ret = true		4916699	0		=			
ANR	4917027	Identifier	ret		4916699	0					
ANR	4917028	Identifier	true		4916699	1					
ANR	4917029	ElseStatement	else		4916699	0					
ANR	4917030	CompoundStatement		60:8:1410:1410	4916699	0					
ANR	4917031	ExpressionStatement	"eprintf ( ""buffer allocation failed\\n"" )"	574:2:15487:15525	4916699	0	True				
ANR	4917032	CallExpression	"eprintf ( ""buffer allocation failed\\n"" )"		4916699	0					
ANR	4917033	Callee	eprintf		4916699	0					
ANR	4917034	Identifier	eprintf		4916699	0					
ANR	4917035	ArgumentList	"""buffer allocation failed\\n"""		4916699	1					
ANR	4917036	Argument	"""buffer allocation failed\\n"""		4916699	0					
ANR	4917037	PrimaryExpression	"""buffer allocation failed\\n"""		4916699	0					
ANR	4917038	Label	exit :	577:0:15531:15535	4916699	8	True				
ANR	4917039	Identifier	exit		4916699	0					
ANR	4917040	ExpressionStatement	free ( p )	578:1:15538:15546	4916699	9	True				
ANR	4917041	CallExpression	free ( p )		4916699	0					
ANR	4917042	Callee	free		4916699	0					
ANR	4917043	Identifier	free		4916699	0					
ANR	4917044	ArgumentList	p		4916699	1					
ANR	4917045	Argument	p		4916699	0					
ANR	4917046	Identifier	p		4916699	0					
ANR	4917047	ReturnStatement	return ret ;	579:1:15549:15559	4916699	10	True				
ANR	4917048	Identifier	ret		4916699	0					
ANR	4917049	ReturnType	bool		4916699	1					
ANR	4917050	Identifier	bsd_proc_vmmaps		4916699	2					
ANR	4917051	ParameterList	"RIO * io , int pid"		4916699	3					
ANR	4917052	Parameter	RIO * io	514:21:14054:14060	4916699	0	True				
ANR	4917053	ParameterType	RIO *		4916699	0					
ANR	4917054	Identifier	io		4916699	1					
ANR	4917055	Parameter	int pid	514:30:14063:14069	4916699	1	True				
ANR	4917056	ParameterType	int		4916699	0					
ANR	4917057	Identifier	pid		4916699	1					
ANR	4917058	CFGEntryNode	ENTRY		4916699		True				
ANR	4917059	CFGExitNode	EXIT		4916699		True				
ANR	4917060	Symbol	perm		4916699						
ANR	4917061	Symbol	KVME_PROT_WRITE		4916699						
ANR	4917062	Symbol	* * entry		4916699						
ANR	4917063	Symbol	* self_sections		4916699						
ANR	4917064	Symbol	mib		4916699						
ANR	4917065	Symbol	entry -> kve_start		4916699						
ANR	4917066	Symbol	pid		4916699						
ANR	4917067	Symbol	self_sections [ self_sections_count ] . from		4916699						
ANR	4917068	Symbol	R_PERM_X		4916699						
ANR	4917069	Symbol	* entry -> kve_path		4916699						
ANR	4917070	Symbol	CTL_KERN		4916699						
ANR	4917071	Symbol	self_sections [ self_sections_count ] . name		4916699						
ANR	4917072	Symbol	R_PERM_W		4916699						
ANR	4917073	Symbol	self_sections [ self_sections_count ] . to		4916699						
ANR	4917074	Symbol	entry -> kve_protection		4916699						
ANR	4917075	Symbol	R_PERM_R		4916699						
ANR	4917076	Symbol	self_sections		4916699						
ANR	4917077	Symbol	entry -> kve_end		4916699						
ANR	4917078	Symbol	* self_sections_count		4916699						
ANR	4917079	Symbol	KERN_PROC_VMMAP		4916699						
ANR	4917080	Symbol	p_end		4916699						
ANR	4917081	Symbol	r_str_rwx_i		4916699						
ANR	4917082	Symbol	* entry		4916699						
ANR	4917083	Symbol	entry -> kve_path		4916699						
ANR	4917084	Symbol	ret		4916699						
ANR	4917085	Symbol	malloc		4916699						
ANR	4917086	Symbol	self_sections_count		4916699						
ANR	4917087	Symbol	errno		4916699						
ANR	4917088	Symbol	entry -> kve_structsize		4916699						
ANR	4917089	Symbol	NULL		4916699						
ANR	4917090	Symbol	io		4916699						
ANR	4917091	Symbol	sz		4916699						
ANR	4917092	Symbol	false		4916699						
ANR	4917093	Symbol	KERN_PROC		4916699						
ANR	4917094	Symbol	& size		4916699						
ANR	4917095	Symbol	KVME_PROT_READ		4916699						
ANR	4917096	Symbol	strerror		4916699						
ANR	4917097	Symbol	p		4916699						
ANR	4917098	Symbol	entry		4916699						
ANR	4917099	Symbol	sysctl		4916699						
ANR	4917100	Symbol	p_start		4916699						
ANR	4917101	Symbol	s		4916699						
ANR	4917102	Symbol	size		4916699						
ANR	4917103	Symbol	true		4916699						
ANR	4917104	Symbol	self_sections [ self_sections_count ] . perm		4916699						
ANR	4917105	Symbol	strdup		4916699						
ANR	4917106	Symbol	KVME_PROT_EXEC		4916699						
ANR	4917107	DeclStmt									
ANR	4917108	Decl							RIOPlugin	RIOPlugin	r_io_plugin_self
ANR	4917109	DeclStmt									
ANR	4917110	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
