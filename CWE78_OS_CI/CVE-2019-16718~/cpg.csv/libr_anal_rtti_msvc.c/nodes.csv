command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2505571	File	data/converged/CVE-2019-16718~_radare2/libr_anal_rtti_msvc.c								
ANR	2505572	ClassDef	rtti_complete_object_locator_t	9:8:161:601							
ANR	2505573	DeclStmt									
ANR	2505574	Decl							ut32	ut32	signature
ANR	2505575	DeclStmt									
ANR	2505576	Decl							ut32	ut32	vtable_offset
ANR	2505577	DeclStmt									
ANR	2505578	Decl							ut32	ut32	cd_offset
ANR	2505579	DeclStmt									
ANR	2505580	Decl							ut32	ut32	type_descriptor_addr
ANR	2505581	DeclStmt									
ANR	2505582	Decl							ut32	ut32	class_descriptor_addr
ANR	2505583	DeclStmt									
ANR	2505584	Decl							ut32	ut32	object_base
ANR	2505585	DeclStmt									
ANR	2505586	Decl							rtti_complete_object_locator_t	rtti_complete_object_locator_t	rtti_complete_object_locator
ANR	2505587	ClassDef	rtti_class_hierarchy_descriptor_t	19:8:613:893							
ANR	2505588	DeclStmt									
ANR	2505589	Decl							ut32	ut32	signature
ANR	2505590	DeclStmt									
ANR	2505591	Decl							ut32	ut32	attributes
ANR	2505592	DeclStmt									
ANR	2505593	Decl							ut32	ut32	num_base_classes
ANR	2505594	DeclStmt									
ANR	2505595	Decl							ut32	ut32	base_class_array_addr
ANR	2505596	DeclStmt									
ANR	2505597	Decl							rtti_class_hierarchy_descriptor_t	rtti_class_hierarchy_descriptor_t	rtti_class_hierarchy_descriptor
ANR	2505598	ClassDef	rtti_base_class_descriptor_t	26:8:904:1256							
ANR	2505599	DeclStmt									
ANR	2505600	Decl							ut32	ut32	type_descriptor_addr
ANR	2505601	DeclStmt									
ANR	2505602	Decl							ut32	ut32	num_contained_bases
ANR	2505603	ClassDef	<unnamed>	29:1:1035:1208							
ANR	2505604	DeclStmt									
ANR	2505605	Decl							st32	st32	mdisp
ANR	2505606	DeclStmt									
ANR	2505607	Decl							st32	st32	pdisp
ANR	2505608	DeclStmt									
ANR	2505609	Decl							st32	st32	vdisp
ANR	2505610	DeclStmt									
ANR	2505611	Decl									where
ANR	2505612	DeclStmt									
ANR	2505613	Decl							ut32	ut32	attributes
ANR	2505614	DeclStmt									
ANR	2505615	Decl							rtti_base_class_descriptor_t	rtti_base_class_descriptor_t	rtti_base_class_descriptor
ANR	2505616	ClassDef	rtti_type_descriptor_t	37:8:1267:1366							
ANR	2505617	DeclStmt									
ANR	2505618	Decl							ut64	ut64	vtable_addr
ANR	2505619	DeclStmt									
ANR	2505620	Decl							ut64	ut64	spare
ANR	2505621	DeclStmt									
ANR	2505622	Decl							char	char *	name
ANR	2505623	DeclStmt									
ANR	2505624	Decl							rtti_type_descriptor_t	rtti_type_descriptor_t	rtti_type_descriptor
ANR	2505625	Function	rtti_type_descriptor_fini	43:0:1369:1471							
ANR	2505626	FunctionDef	rtti_type_descriptor_fini (rtti_type_descriptor * td)		2505625	0					
ANR	2505627	CompoundStatement		43:64:1433:1471	2505625	0					
ANR	2505628	ExpressionStatement	free ( td -> name )	44:1:1436:1451	2505625	0	True				
ANR	2505629	CallExpression	free ( td -> name )		2505625	0					
ANR	2505630	Callee	free		2505625	0					
ANR	2505631	Identifier	free		2505625	0					
ANR	2505632	ArgumentList	td -> name		2505625	1					
ANR	2505633	Argument	td -> name		2505625	0					
ANR	2505634	PtrMemberAccess	td -> name		2505625	0					
ANR	2505635	Identifier	td		2505625	0					
ANR	2505636	Identifier	name		2505625	1					
ANR	2505637	ExpressionStatement	td -> name = NULL	45:1:1454:1469	2505625	1	True				
ANR	2505638	AssignmentExpression	td -> name = NULL		2505625	0		=			
ANR	2505639	PtrMemberAccess	td -> name		2505625	0					
ANR	2505640	Identifier	td		2505625	0					
ANR	2505641	Identifier	name		2505625	1					
ANR	2505642	Identifier	NULL		2505625	1					
ANR	2505643	ReturnType	static void		2505625	1					
ANR	2505644	Identifier	rtti_type_descriptor_fini		2505625	2					
ANR	2505645	ParameterList	rtti_type_descriptor * td		2505625	3					
ANR	2505646	Parameter	rtti_type_descriptor * td	43:38:1407:1430	2505625	0	True				
ANR	2505647	ParameterType	rtti_type_descriptor *		2505625	0					
ANR	2505648	Identifier	td		2505625	1					
ANR	2505649	CFGEntryNode	ENTRY		2505625		True				
ANR	2505650	CFGExitNode	EXIT		2505625		True				
ANR	2505651	Symbol	td		2505625						
ANR	2505652	Symbol	NULL		2505625						
ANR	2505653	Symbol	* td		2505625						
ANR	2505654	Symbol	td -> name		2505625						
ANR	2505655	Function	rtti_msvc_addr	48:0:1474:1664							
ANR	2505656	FunctionDef	"rtti_msvc_addr (RVTableContext * context , ut64 col_addr , ut64 col_base , ut32 addr)"		2505655	0					
ANR	2505657	CompoundStatement		48:100:1574:1664	2505655	0					
ANR	2505658	IfStatement	if ( context -> word_size != 8 )		2505655	0					
ANR	2505659	Condition	context -> word_size != 8	49:5:1581:1603	2505655	0	True				
ANR	2505660	EqualityExpression	context -> word_size != 8		2505655	0		!=			
ANR	2505661	PtrMemberAccess	context -> word_size		2505655	0					
ANR	2505662	Identifier	context		2505655	0					
ANR	2505663	Identifier	word_size		2505655	1					
ANR	2505664	PrimaryExpression	8		2505655	1					
ANR	2505665	CompoundStatement		2:30:31:31	2505655	1					
ANR	2505666	ReturnStatement	return addr ;	50:2:1610:1621	2505655	0	True				
ANR	2505667	Identifier	addr		2505655	0					
ANR	2505668	ReturnStatement	return addr + ( col_addr - col_base ) ;	52:1:1627:1662	2505655	1	True				
ANR	2505669	AdditiveExpression	addr + ( col_addr - col_base )		2505655	0		+			
ANR	2505670	Identifier	addr		2505655	0					
ANR	2505671	AdditiveExpression	col_addr - col_base		2505655	1		-			
ANR	2505672	Identifier	col_addr		2505655	0					
ANR	2505673	Identifier	col_base		2505655	1					
ANR	2505674	ReturnType	static inline ut64		2505655	1					
ANR	2505675	Identifier	rtti_msvc_addr		2505655	2					
ANR	2505676	ParameterList	"RVTableContext * context , ut64 col_addr , ut64 col_base , ut32 addr"		2505655	3					
ANR	2505677	Parameter	RVTableContext * context	48:34:1508:1530	2505655	0	True				
ANR	2505678	ParameterType	RVTableContext *		2505655	0					
ANR	2505679	Identifier	context		2505655	1					
ANR	2505680	Parameter	ut64 col_addr	48:59:1533:1545	2505655	1	True				
ANR	2505681	ParameterType	ut64		2505655	0					
ANR	2505682	Identifier	col_addr		2505655	1					
ANR	2505683	Parameter	ut64 col_base	48:74:1548:1560	2505655	2	True				
ANR	2505684	ParameterType	ut64		2505655	0					
ANR	2505685	Identifier	col_base		2505655	1					
ANR	2505686	Parameter	ut32 addr	48:89:1563:1571	2505655	3	True				
ANR	2505687	ParameterType	ut32		2505655	0					
ANR	2505688	Identifier	addr		2505655	1					
ANR	2505689	CFGEntryNode	ENTRY		2505655		True				
ANR	2505690	CFGExitNode	EXIT		2505655		True				
ANR	2505691	Symbol	context -> word_size		2505655						
ANR	2505692	Symbol	context		2505655						
ANR	2505693	Symbol	col_addr		2505655						
ANR	2505694	Symbol	col_base		2505655						
ANR	2505695	Symbol	addr		2505655						
ANR	2505696	Symbol	* context		2505655						
ANR	2505697	Function	rtti_msvc_read_complete_object_locator	55:0:1667:2947							
ANR	2505698	FunctionDef	"rtti_msvc_read_complete_object_locator (RVTableContext * context , ut64 addr , rtti_complete_object_locator * col)"		2505697	0					
ANR	2505699	CompoundStatement		55:122:1789:2947	2505697	0					
ANR	2505700	IfStatement	if ( addr == UT64_MAX )		2505697	0					
ANR	2505701	Condition	addr == UT64_MAX	56:5:1796:1811	2505697	0	True				
ANR	2505702	EqualityExpression	addr == UT64_MAX		2505697	0		==			
ANR	2505703	Identifier	addr		2505697	0					
ANR	2505704	Identifier	UT64_MAX		2505697	1					
ANR	2505705	CompoundStatement		2:23:24:24	2505697	1					
ANR	2505706	ReturnStatement	return false ;	57:2:1818:1830	2505697	0	True				
ANR	2505707	Identifier	false		2505697	0					
ANR	2505708	IdentifierDeclStatement	ut8 buf [ 6 * sizeof ( ut32 ) ] ;	60:1:1837:1863	2505697	1	True				
ANR	2505709	IdentifierDecl	buf [ 6 * sizeof ( ut32 ) ]		2505697	0					
ANR	2505710	IdentifierDeclType	ut8 [ 6 * sizeof ( ut32 ) ]		2505697	0					
ANR	2505711	Identifier	buf		2505697	1					
ANR	2505712	MultiplicativeExpression	6 * sizeof ( ut32 )		2505697	2		*			
ANR	2505713	PrimaryExpression	6		2505697	0					
ANR	2505714	SizeofExpression	sizeof ( ut32 )		2505697	1					
ANR	2505715	Sizeof	sizeof		2505697	0					
ANR	2505716	SizeofOperand	ut32		2505697	1					
ANR	2505717	IdentifierDeclStatement	int colSize = 5 * sizeof ( ut32 ) ;	61:1:1866:1897	2505697	2	True				
ANR	2505718	IdentifierDecl	colSize = 5 * sizeof ( ut32 )		2505697	0					
ANR	2505719	IdentifierDeclType	int		2505697	0					
ANR	2505720	Identifier	colSize		2505697	1					
ANR	2505721	AssignmentExpression	colSize = 5 * sizeof ( ut32 )		2505697	2		=			
ANR	2505722	Identifier	colSize		2505697	0					
ANR	2505723	MultiplicativeExpression	5 * sizeof ( ut32 )		2505697	1		*			
ANR	2505724	PrimaryExpression	5		2505697	0					
ANR	2505725	SizeofExpression	sizeof ( ut32 )		2505697	1					
ANR	2505726	Sizeof	sizeof		2505697	0					
ANR	2505727	SizeofOperand	ut32		2505697	1					
ANR	2505728	IfStatement	if ( context -> word_size == 8 )		2505697	3					
ANR	2505729	Condition	context -> word_size == 8	62:5:1904:1926	2505697	0	True				
ANR	2505730	EqualityExpression	context -> word_size == 8		2505697	0		==			
ANR	2505731	PtrMemberAccess	context -> word_size		2505697	0					
ANR	2505732	Identifier	context		2505697	0					
ANR	2505733	Identifier	word_size		2505697	1					
ANR	2505734	PrimaryExpression	8		2505697	1					
ANR	2505735	CompoundStatement		8:30:139:139	2505697	1					
ANR	2505736	ExpressionStatement	colSize += sizeof ( ut32 )	63:2:1933:1956	2505697	0	True				
ANR	2505737	AssignmentExpression	colSize += sizeof ( ut32 )		2505697	0		+=			
ANR	2505738	Identifier	colSize		2505697	0					
ANR	2505739	SizeofExpression	sizeof ( ut32 )		2505697	1					
ANR	2505740	Sizeof	sizeof		2505697	0					
ANR	2505741	SizeofOperand	ut32		2505697	1					
ANR	2505742	IfStatement	if ( colSize > sizeof ( buf ) )		2505697	4					
ANR	2505743	Condition	colSize > sizeof ( buf )	65:5:1966:1987	2505697	0	True				
ANR	2505744	RelationalExpression	colSize > sizeof ( buf )		2505697	0		>			
ANR	2505745	Identifier	colSize		2505697	0					
ANR	2505746	SizeofExpression	sizeof ( buf )		2505697	1					
ANR	2505747	Sizeof	sizeof		2505697	0					
ANR	2505748	SizeofOperand	buf		2505697	1					
ANR	2505749	CompoundStatement		11:29:200:200	2505697	1					
ANR	2505750	ReturnStatement	return false ;	66:2:1994:2006	2505697	0	True				
ANR	2505751	Identifier	false		2505697	0					
ANR	2505752	IfStatement	"if ( ! context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , buf , colSize ) )"		2505697	5					
ANR	2505753	Condition	"! context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , buf , colSize )"	69:5:2017:2087	2505697	0	True				
ANR	2505754	UnaryOperationExpression	"! context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , buf , colSize )"		2505697	0					
ANR	2505755	UnaryOperator	!		2505697	0					
ANR	2505756	CallExpression	"context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , buf , colSize )"		2505697	1					
ANR	2505757	Callee	context -> anal -> iob . read_at		2505697	0					
ANR	2505758	MemberAccess	context -> anal -> iob . read_at		2505697	0					
ANR	2505759	PtrMemberAccess	context -> anal -> iob		2505697	0					
ANR	2505760	PtrMemberAccess	context -> anal		2505697	0					
ANR	2505761	Identifier	context		2505697	0					
ANR	2505762	Identifier	anal		2505697	1					
ANR	2505763	Identifier	iob		2505697	1					
ANR	2505764	Identifier	read_at		2505697	1					
ANR	2505765	ArgumentList	context -> anal -> iob . io		2505697	1					
ANR	2505766	Argument	context -> anal -> iob . io		2505697	0					
ANR	2505767	MemberAccess	context -> anal -> iob . io		2505697	0					
ANR	2505768	PtrMemberAccess	context -> anal -> iob		2505697	0					
ANR	2505769	PtrMemberAccess	context -> anal		2505697	0					
ANR	2505770	Identifier	context		2505697	0					
ANR	2505771	Identifier	anal		2505697	1					
ANR	2505772	Identifier	iob		2505697	1					
ANR	2505773	Identifier	io		2505697	1					
ANR	2505774	Argument	addr		2505697	1					
ANR	2505775	Identifier	addr		2505697	0					
ANR	2505776	Argument	buf		2505697	2					
ANR	2505777	Identifier	buf		2505697	0					
ANR	2505778	Argument	colSize		2505697	3					
ANR	2505779	Identifier	colSize		2505697	0					
ANR	2505780	CompoundStatement		15:78:300:300	2505697	1					
ANR	2505781	ReturnStatement	return false ;	70:2:2094:2106	2505697	0	True				
ANR	2505782	Identifier	false		2505697	0					
ANR	2505783	IdentifierDeclStatement	"ut32 ( * read_at_32 ) ( const void * src , size_t offset ) = context -> anal -> big_endian ? r_read_at_be32 : r_read_at_le32 ;"	73:1:2113:2225	2505697	6	True				
ANR	2505784	IdentifierDecl	"( * read_at_32 ) ( const void * src , size_t offset ) = context -> anal -> big_endian ? r_read_at_be32 : r_read_at_le32"		2505697	0					
ANR	2505785	IdentifierDeclType	"ut32 ( * ) ( const void * src , size_t offset )"		2505697	0					
ANR	2505786	Identifier	read_at_32		2505697	1					
ANR	2505787	Identifier	src		2505697	2					
ANR	2505788	AssignmentExpression	"( * read_at_32 ) ( const void * src , size_t offset ) = context -> anal -> big_endian ? r_read_at_be32 : r_read_at_le32"		2505697	3		=			
ANR	2505789	Identifier	src		2505697	0					
ANR	2505790	ConditionalExpression	context -> anal -> big_endian ? r_read_at_be32 : r_read_at_le32		2505697	1					
ANR	2505791	Condition	context -> anal -> big_endian		2505697	0					
ANR	2505792	PtrMemberAccess	context -> anal -> big_endian		2505697	0					
ANR	2505793	PtrMemberAccess	context -> anal		2505697	0					
ANR	2505794	Identifier	context		2505697	0					
ANR	2505795	Identifier	anal		2505697	1					
ANR	2505796	Identifier	big_endian		2505697	1					
ANR	2505797	Identifier	r_read_at_be32		2505697	1					
ANR	2505798	Identifier	r_read_at_le32		2505697	2					
ANR	2505799	ExpressionStatement	"col -> signature = read_at_32 ( buf , 0 )"	74:1:2228:2264	2505697	7	True				
ANR	2505800	AssignmentExpression	"col -> signature = read_at_32 ( buf , 0 )"		2505697	0		=			
ANR	2505801	PtrMemberAccess	col -> signature		2505697	0					
ANR	2505802	Identifier	col		2505697	0					
ANR	2505803	Identifier	signature		2505697	1					
ANR	2505804	CallExpression	"read_at_32 ( buf , 0 )"		2505697	1					
ANR	2505805	Callee	read_at_32		2505697	0					
ANR	2505806	Identifier	read_at_32		2505697	0					
ANR	2505807	ArgumentList	buf		2505697	1					
ANR	2505808	Argument	buf		2505697	0					
ANR	2505809	Identifier	buf		2505697	0					
ANR	2505810	Argument	0		2505697	1					
ANR	2505811	PrimaryExpression	0		2505697	0					
ANR	2505812	ExpressionStatement	"col -> vtable_offset = read_at_32 ( buf , 4 )"	75:1:2267:2307	2505697	8	True				
ANR	2505813	AssignmentExpression	"col -> vtable_offset = read_at_32 ( buf , 4 )"		2505697	0		=			
ANR	2505814	PtrMemberAccess	col -> vtable_offset		2505697	0					
ANR	2505815	Identifier	col		2505697	0					
ANR	2505816	Identifier	vtable_offset		2505697	1					
ANR	2505817	CallExpression	"read_at_32 ( buf , 4 )"		2505697	1					
ANR	2505818	Callee	read_at_32		2505697	0					
ANR	2505819	Identifier	read_at_32		2505697	0					
ANR	2505820	ArgumentList	buf		2505697	1					
ANR	2505821	Argument	buf		2505697	0					
ANR	2505822	Identifier	buf		2505697	0					
ANR	2505823	Argument	4		2505697	1					
ANR	2505824	PrimaryExpression	4		2505697	0					
ANR	2505825	ExpressionStatement	"col -> cd_offset = read_at_32 ( buf , 8 )"	76:1:2310:2346	2505697	9	True				
ANR	2505826	AssignmentExpression	"col -> cd_offset = read_at_32 ( buf , 8 )"		2505697	0		=			
ANR	2505827	PtrMemberAccess	col -> cd_offset		2505697	0					
ANR	2505828	Identifier	col		2505697	0					
ANR	2505829	Identifier	cd_offset		2505697	1					
ANR	2505830	CallExpression	"read_at_32 ( buf , 8 )"		2505697	1					
ANR	2505831	Callee	read_at_32		2505697	0					
ANR	2505832	Identifier	read_at_32		2505697	0					
ANR	2505833	ArgumentList	buf		2505697	1					
ANR	2505834	Argument	buf		2505697	0					
ANR	2505835	Identifier	buf		2505697	0					
ANR	2505836	Argument	8		2505697	1					
ANR	2505837	PrimaryExpression	8		2505697	0					
ANR	2505838	IdentifierDeclStatement	"int offsetSize = R_MIN ( context -> word_size , 4 ) ;"	78:1:2350:2396	2505697	10	True				
ANR	2505839	IdentifierDecl	"offsetSize = R_MIN ( context -> word_size , 4 )"		2505697	0					
ANR	2505840	IdentifierDeclType	int		2505697	0					
ANR	2505841	Identifier	offsetSize		2505697	1					
ANR	2505842	AssignmentExpression	"offsetSize = R_MIN ( context -> word_size , 4 )"		2505697	2		=			
ANR	2505843	Identifier	offsetSize		2505697	0					
ANR	2505844	CallExpression	"R_MIN ( context -> word_size , 4 )"		2505697	1					
ANR	2505845	Callee	R_MIN		2505697	0					
ANR	2505846	Identifier	R_MIN		2505697	0					
ANR	2505847	ArgumentList	context -> word_size		2505697	1					
ANR	2505848	Argument	context -> word_size		2505697	0					
ANR	2505849	PtrMemberAccess	context -> word_size		2505697	0					
ANR	2505850	Identifier	context		2505697	0					
ANR	2505851	Identifier	word_size		2505697	1					
ANR	2505852	Argument	4		2505697	1					
ANR	2505853	PrimaryExpression	4		2505697	0					
ANR	2505854	ExpressionStatement	"col -> type_descriptor_addr = ( ut32 ) r_read_ble ( buf + 12 , ( bool ) context -> anal -> big_endian , offsetSize * 8 )"	79:1:2399:2505	2505697	11	True				
ANR	2505855	AssignmentExpression	"col -> type_descriptor_addr = ( ut32 ) r_read_ble ( buf + 12 , ( bool ) context -> anal -> big_endian , offsetSize * 8 )"		2505697	0		=			
ANR	2505856	PtrMemberAccess	col -> type_descriptor_addr		2505697	0					
ANR	2505857	Identifier	col		2505697	0					
ANR	2505858	Identifier	type_descriptor_addr		2505697	1					
ANR	2505859	CastExpression	"( ut32 ) r_read_ble ( buf + 12 , ( bool ) context -> anal -> big_endian , offsetSize * 8 )"		2505697	1					
ANR	2505860	CastTarget	ut32		2505697	0					
ANR	2505861	CallExpression	"r_read_ble ( buf + 12 , ( bool ) context -> anal -> big_endian , offsetSize * 8 )"		2505697	1					
ANR	2505862	Callee	r_read_ble		2505697	0					
ANR	2505863	Identifier	r_read_ble		2505697	0					
ANR	2505864	ArgumentList	buf + 12		2505697	1					
ANR	2505865	Argument	buf + 12		2505697	0					
ANR	2505866	AdditiveExpression	buf + 12		2505697	0		+			
ANR	2505867	Identifier	buf		2505697	0					
ANR	2505868	PrimaryExpression	12		2505697	1					
ANR	2505869	Argument	( bool ) context -> anal -> big_endian		2505697	1					
ANR	2505870	CastExpression	( bool ) context -> anal -> big_endian		2505697	0					
ANR	2505871	CastTarget	bool		2505697	0					
ANR	2505872	PtrMemberAccess	context -> anal -> big_endian		2505697	1					
ANR	2505873	PtrMemberAccess	context -> anal		2505697	0					
ANR	2505874	Identifier	context		2505697	0					
ANR	2505875	Identifier	anal		2505697	1					
ANR	2505876	Identifier	big_endian		2505697	1					
ANR	2505877	Argument	offsetSize * 8		2505697	2					
ANR	2505878	MultiplicativeExpression	offsetSize * 8		2505697	0		*			
ANR	2505879	Identifier	offsetSize		2505697	0					
ANR	2505880	PrimaryExpression	8		2505697	1					
ANR	2505881	ExpressionStatement	"col -> class_descriptor_addr = ( ut32 ) r_read_ble ( buf + 12 + offsetSize , ( bool ) context -> anal -> big_endian , offsetSize * 8 )"	80:1:2508:2628	2505697	12	True				
ANR	2505882	AssignmentExpression	"col -> class_descriptor_addr = ( ut32 ) r_read_ble ( buf + 12 + offsetSize , ( bool ) context -> anal -> big_endian , offsetSize * 8 )"		2505697	0		=			
ANR	2505883	PtrMemberAccess	col -> class_descriptor_addr		2505697	0					
ANR	2505884	Identifier	col		2505697	0					
ANR	2505885	Identifier	class_descriptor_addr		2505697	1					
ANR	2505886	CastExpression	"( ut32 ) r_read_ble ( buf + 12 + offsetSize , ( bool ) context -> anal -> big_endian , offsetSize * 8 )"		2505697	1					
ANR	2505887	CastTarget	ut32		2505697	0					
ANR	2505888	CallExpression	"r_read_ble ( buf + 12 + offsetSize , ( bool ) context -> anal -> big_endian , offsetSize * 8 )"		2505697	1					
ANR	2505889	Callee	r_read_ble		2505697	0					
ANR	2505890	Identifier	r_read_ble		2505697	0					
ANR	2505891	ArgumentList	buf + 12 + offsetSize		2505697	1					
ANR	2505892	Argument	buf + 12 + offsetSize		2505697	0					
ANR	2505893	AdditiveExpression	buf + 12 + offsetSize		2505697	0		+			
ANR	2505894	Identifier	buf		2505697	0					
ANR	2505895	AdditiveExpression	12 + offsetSize		2505697	1		+			
ANR	2505896	PrimaryExpression	12		2505697	0					
ANR	2505897	Identifier	offsetSize		2505697	1					
ANR	2505898	Argument	( bool ) context -> anal -> big_endian		2505697	1					
ANR	2505899	CastExpression	( bool ) context -> anal -> big_endian		2505697	0					
ANR	2505900	CastTarget	bool		2505697	0					
ANR	2505901	PtrMemberAccess	context -> anal -> big_endian		2505697	1					
ANR	2505902	PtrMemberAccess	context -> anal		2505697	0					
ANR	2505903	Identifier	context		2505697	0					
ANR	2505904	Identifier	anal		2505697	1					
ANR	2505905	Identifier	big_endian		2505697	1					
ANR	2505906	Argument	offsetSize * 8		2505697	2					
ANR	2505907	MultiplicativeExpression	offsetSize * 8		2505697	0		*			
ANR	2505908	Identifier	offsetSize		2505697	0					
ANR	2505909	PrimaryExpression	8		2505697	1					
ANR	2505910	IfStatement	if ( context -> word_size == 8 )		2505697	13					
ANR	2505911	Condition	context -> word_size == 8	81:5:2635:2657	2505697	0	True				
ANR	2505912	EqualityExpression	context -> word_size == 8		2505697	0		==			
ANR	2505913	PtrMemberAccess	context -> word_size		2505697	0					
ANR	2505914	Identifier	context		2505697	0					
ANR	2505915	Identifier	word_size		2505697	1					
ANR	2505916	PrimaryExpression	8		2505697	1					
ANR	2505917	CompoundStatement		27:30:870:870	2505697	1					
ANR	2505918	ExpressionStatement	"col -> object_base = read_at_32 ( buf , 20 )"	86:2:2854:2893	2505697	0	True				
ANR	2505919	AssignmentExpression	"col -> object_base = read_at_32 ( buf , 20 )"		2505697	0		=			
ANR	2505920	PtrMemberAccess	col -> object_base		2505697	0					
ANR	2505921	Identifier	col		2505697	0					
ANR	2505922	Identifier	object_base		2505697	1					
ANR	2505923	CallExpression	"read_at_32 ( buf , 20 )"		2505697	1					
ANR	2505924	Callee	read_at_32		2505697	0					
ANR	2505925	Identifier	read_at_32		2505697	0					
ANR	2505926	ArgumentList	buf		2505697	1					
ANR	2505927	Argument	buf		2505697	0					
ANR	2505928	Identifier	buf		2505697	0					
ANR	2505929	Argument	20		2505697	1					
ANR	2505930	PrimaryExpression	20		2505697	0					
ANR	2505931	ElseStatement	else		2505697	0					
ANR	2505932	CompoundStatement		33:8:1113:1113	2505697	0					
ANR	2505933	ExpressionStatement	col -> object_base = 0	88:2:2907:2927	2505697	0	True				
ANR	2505934	AssignmentExpression	col -> object_base = 0		2505697	0		=			
ANR	2505935	PtrMemberAccess	col -> object_base		2505697	0					
ANR	2505936	Identifier	col		2505697	0					
ANR	2505937	Identifier	object_base		2505697	1					
ANR	2505938	PrimaryExpression	0		2505697	1					
ANR	2505939	ReturnStatement	return true ;	91:1:2934:2945	2505697	14	True				
ANR	2505940	Identifier	true		2505697	0					
ANR	2505941	ReturnType	static bool		2505697	1					
ANR	2505942	Identifier	rtti_msvc_read_complete_object_locator		2505697	2					
ANR	2505943	ParameterList	"RVTableContext * context , ut64 addr , rtti_complete_object_locator * col"		2505697	3					
ANR	2505944	Parameter	RVTableContext * context	55:51:1718:1740	2505697	0	True				
ANR	2505945	ParameterType	RVTableContext *		2505697	0					
ANR	2505946	Identifier	context		2505697	1					
ANR	2505947	Parameter	ut64 addr	55:76:1743:1751	2505697	1	True				
ANR	2505948	ParameterType	ut64		2505697	0					
ANR	2505949	Identifier	addr		2505697	1					
ANR	2505950	Parameter	rtti_complete_object_locator * col	55:87:1754:1786	2505697	2	True				
ANR	2505951	ParameterType	rtti_complete_object_locator *		2505697	0					
ANR	2505952	Identifier	col		2505697	1					
ANR	2505953	CFGEntryNode	ENTRY		2505697		True				
ANR	2505954	CFGExitNode	EXIT		2505697		True				
ANR	2505955	Symbol	col		2505697						
ANR	2505956	Symbol	context -> word_size		2505697						
ANR	2505957	Symbol	context -> anal -> iob . read_at		2505697						
ANR	2505958	Symbol	col -> class_descriptor_addr		2505697						
ANR	2505959	Symbol	* * context		2505697						
ANR	2505960	Symbol	col -> object_base		2505697						
ANR	2505961	Symbol	col -> vtable_offset		2505697						
ANR	2505962	Symbol	offsetSize		2505697						
ANR	2505963	Symbol	* col		2505697						
ANR	2505964	Symbol	context -> anal -> iob . io		2505697						
ANR	2505965	Symbol	context		2505697						
ANR	2505966	Symbol	col -> type_descriptor_addr		2505697						
ANR	2505967	Symbol	addr		2505697						
ANR	2505968	Symbol	UT64_MAX		2505697						
ANR	2505969	Symbol	read_at_32		2505697						
ANR	2505970	Symbol	r_read_at_le32		2505697						
ANR	2505971	Symbol	r_read_at_be32		2505697						
ANR	2505972	Symbol	context -> anal -> iob		2505697						
ANR	2505973	Symbol	context -> anal		2505697						
ANR	2505974	Symbol	src		2505697						
ANR	2505975	Symbol	context -> anal -> big_endian		2505697						
ANR	2505976	Symbol	false		2505697						
ANR	2505977	Symbol	R_MIN		2505697						
ANR	2505978	Symbol	colSize		2505697						
ANR	2505979	Symbol	* context		2505697						
ANR	2505980	Symbol	* context -> anal		2505697						
ANR	2505981	Symbol	col -> signature		2505697						
ANR	2505982	Symbol	buf		2505697						
ANR	2505983	Symbol	r_read_ble		2505697						
ANR	2505984	Symbol	true		2505697						
ANR	2505985	Symbol	col -> cd_offset		2505697						
ANR	2505986	Function	rtti_msvc_read_class_hierarchy_descriptor	94:0:2950:4010							
ANR	2505987	FunctionDef	"rtti_msvc_read_class_hierarchy_descriptor (RVTableContext * context , ut64 addr , rtti_class_hierarchy_descriptor * chd)"		2505986	0					
ANR	2505988	CompoundStatement		94:128:3078:4010	2505986	0					
ANR	2505989	IfStatement	if ( addr == UT64_MAX )		2505986	0					
ANR	2505990	Condition	addr == UT64_MAX	95:5:3085:3100	2505986	0	True				
ANR	2505991	EqualityExpression	addr == UT64_MAX		2505986	0		==			
ANR	2505992	Identifier	addr		2505986	0					
ANR	2505993	Identifier	UT64_MAX		2505986	1					
ANR	2505994	CompoundStatement		2:23:24:24	2505986	1					
ANR	2505995	ReturnStatement	return false ;	96:2:3107:3119	2505986	0	True				
ANR	2505996	Identifier	false		2505986	0					
ANR	2505997	IdentifierDeclStatement	ut8 buf [ 4 * sizeof ( ut32 ) ] ;	99:1:3126:3152	2505986	1	True				
ANR	2505998	IdentifierDecl	buf [ 4 * sizeof ( ut32 ) ]		2505986	0					
ANR	2505999	IdentifierDeclType	ut8 [ 4 * sizeof ( ut32 ) ]		2505986	0					
ANR	2506000	Identifier	buf		2505986	1					
ANR	2506001	MultiplicativeExpression	4 * sizeof ( ut32 )		2505986	2		*			
ANR	2506002	PrimaryExpression	4		2505986	0					
ANR	2506003	SizeofExpression	sizeof ( ut32 )		2505986	1					
ANR	2506004	Sizeof	sizeof		2505986	0					
ANR	2506005	SizeofOperand	ut32		2505986	1					
ANR	2506006	IdentifierDeclStatement	"int chdSize = 3 * sizeof ( ut32 ) + R_MIN ( 4 , context -> word_size ) ;"	100:1:3155:3218	2505986	2	True				
ANR	2506007	IdentifierDecl	"chdSize = 3 * sizeof ( ut32 ) + R_MIN ( 4 , context -> word_size )"		2505986	0					
ANR	2506008	IdentifierDeclType	int		2505986	0					
ANR	2506009	Identifier	chdSize		2505986	1					
ANR	2506010	AssignmentExpression	"chdSize = 3 * sizeof ( ut32 ) + R_MIN ( 4 , context -> word_size )"		2505986	2		=			
ANR	2506011	Identifier	chdSize		2505986	0					
ANR	2506012	AdditiveExpression	"3 * sizeof ( ut32 ) + R_MIN ( 4 , context -> word_size )"		2505986	1		+			
ANR	2506013	MultiplicativeExpression	3 * sizeof ( ut32 )		2505986	0		*			
ANR	2506014	PrimaryExpression	3		2505986	0					
ANR	2506015	SizeofExpression	sizeof ( ut32 )		2505986	1					
ANR	2506016	Sizeof	sizeof		2505986	0					
ANR	2506017	SizeofOperand	ut32		2505986	1					
ANR	2506018	CallExpression	"R_MIN ( 4 , context -> word_size )"		2505986	1					
ANR	2506019	Callee	R_MIN		2505986	0					
ANR	2506020	Identifier	R_MIN		2505986	0					
ANR	2506021	ArgumentList	4		2505986	1					
ANR	2506022	Argument	4		2505986	0					
ANR	2506023	PrimaryExpression	4		2505986	0					
ANR	2506024	Argument	context -> word_size		2505986	1					
ANR	2506025	PtrMemberAccess	context -> word_size		2505986	0					
ANR	2506026	Identifier	context		2505986	0					
ANR	2506027	Identifier	word_size		2505986	1					
ANR	2506028	IfStatement	if ( chdSize > sizeof ( buf ) )		2505986	3					
ANR	2506029	Condition	chdSize > sizeof ( buf )	101:5:3225:3246	2505986	0	True				
ANR	2506030	RelationalExpression	chdSize > sizeof ( buf )		2505986	0		>			
ANR	2506031	Identifier	chdSize		2505986	0					
ANR	2506032	SizeofExpression	sizeof ( buf )		2505986	1					
ANR	2506033	Sizeof	sizeof		2505986	0					
ANR	2506034	SizeofOperand	buf		2505986	1					
ANR	2506035	CompoundStatement		8:29:170:170	2505986	1					
ANR	2506036	ReturnStatement	return false ;	102:2:3253:3265	2505986	0	True				
ANR	2506037	Identifier	false		2505986	0					
ANR	2506038	IfStatement	"if ( ! context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , buf , chdSize ) )"		2505986	4					
ANR	2506039	Condition	"! context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , buf , chdSize )"	105:5:3276:3346	2505986	0	True				
ANR	2506040	UnaryOperationExpression	"! context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , buf , chdSize )"		2505986	0					
ANR	2506041	UnaryOperator	!		2505986	0					
ANR	2506042	CallExpression	"context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , buf , chdSize )"		2505986	1					
ANR	2506043	Callee	context -> anal -> iob . read_at		2505986	0					
ANR	2506044	MemberAccess	context -> anal -> iob . read_at		2505986	0					
ANR	2506045	PtrMemberAccess	context -> anal -> iob		2505986	0					
ANR	2506046	PtrMemberAccess	context -> anal		2505986	0					
ANR	2506047	Identifier	context		2505986	0					
ANR	2506048	Identifier	anal		2505986	1					
ANR	2506049	Identifier	iob		2505986	1					
ANR	2506050	Identifier	read_at		2505986	1					
ANR	2506051	ArgumentList	context -> anal -> iob . io		2505986	1					
ANR	2506052	Argument	context -> anal -> iob . io		2505986	0					
ANR	2506053	MemberAccess	context -> anal -> iob . io		2505986	0					
ANR	2506054	PtrMemberAccess	context -> anal -> iob		2505986	0					
ANR	2506055	PtrMemberAccess	context -> anal		2505986	0					
ANR	2506056	Identifier	context		2505986	0					
ANR	2506057	Identifier	anal		2505986	1					
ANR	2506058	Identifier	iob		2505986	1					
ANR	2506059	Identifier	io		2505986	1					
ANR	2506060	Argument	addr		2505986	1					
ANR	2506061	Identifier	addr		2505986	0					
ANR	2506062	Argument	buf		2505986	2					
ANR	2506063	Identifier	buf		2505986	0					
ANR	2506064	Argument	chdSize		2505986	3					
ANR	2506065	Identifier	chdSize		2505986	0					
ANR	2506066	CompoundStatement		12:78:270:270	2505986	1					
ANR	2506067	ReturnStatement	return false ;	106:2:3353:3365	2505986	0	True				
ANR	2506068	Identifier	false		2505986	0					
ANR	2506069	IdentifierDeclStatement	"ut32 ( * read_at_32 ) ( const void * src , size_t offset ) = context -> anal -> big_endian ? r_read_at_be32 : r_read_at_le32 ;"	109:1:3372:3484	2505986	5	True				
ANR	2506070	IdentifierDecl	"( * read_at_32 ) ( const void * src , size_t offset ) = context -> anal -> big_endian ? r_read_at_be32 : r_read_at_le32"		2505986	0					
ANR	2506071	IdentifierDeclType	"ut32 ( * ) ( const void * src , size_t offset )"		2505986	0					
ANR	2506072	Identifier	read_at_32		2505986	1					
ANR	2506073	Identifier	src		2505986	2					
ANR	2506074	AssignmentExpression	"( * read_at_32 ) ( const void * src , size_t offset ) = context -> anal -> big_endian ? r_read_at_be32 : r_read_at_le32"		2505986	3		=			
ANR	2506075	Identifier	src		2505986	0					
ANR	2506076	ConditionalExpression	context -> anal -> big_endian ? r_read_at_be32 : r_read_at_le32		2505986	1					
ANR	2506077	Condition	context -> anal -> big_endian		2505986	0					
ANR	2506078	PtrMemberAccess	context -> anal -> big_endian		2505986	0					
ANR	2506079	PtrMemberAccess	context -> anal		2505986	0					
ANR	2506080	Identifier	context		2505986	0					
ANR	2506081	Identifier	anal		2505986	1					
ANR	2506082	Identifier	big_endian		2505986	1					
ANR	2506083	Identifier	r_read_at_be32		2505986	1					
ANR	2506084	Identifier	r_read_at_le32		2505986	2					
ANR	2506085	ExpressionStatement	"chd -> signature = read_at_32 ( buf , 0 )"	110:1:3487:3523	2505986	6	True				
ANR	2506086	AssignmentExpression	"chd -> signature = read_at_32 ( buf , 0 )"		2505986	0		=			
ANR	2506087	PtrMemberAccess	chd -> signature		2505986	0					
ANR	2506088	Identifier	chd		2505986	0					
ANR	2506089	Identifier	signature		2505986	1					
ANR	2506090	CallExpression	"read_at_32 ( buf , 0 )"		2505986	1					
ANR	2506091	Callee	read_at_32		2505986	0					
ANR	2506092	Identifier	read_at_32		2505986	0					
ANR	2506093	ArgumentList	buf		2505986	1					
ANR	2506094	Argument	buf		2505986	0					
ANR	2506095	Identifier	buf		2505986	0					
ANR	2506096	Argument	0		2505986	1					
ANR	2506097	PrimaryExpression	0		2505986	0					
ANR	2506098	ExpressionStatement	"chd -> attributes = read_at_32 ( buf , 4 )"	111:1:3526:3563	2505986	7	True				
ANR	2506099	AssignmentExpression	"chd -> attributes = read_at_32 ( buf , 4 )"		2505986	0		=			
ANR	2506100	PtrMemberAccess	chd -> attributes		2505986	0					
ANR	2506101	Identifier	chd		2505986	0					
ANR	2506102	Identifier	attributes		2505986	1					
ANR	2506103	CallExpression	"read_at_32 ( buf , 4 )"		2505986	1					
ANR	2506104	Callee	read_at_32		2505986	0					
ANR	2506105	Identifier	read_at_32		2505986	0					
ANR	2506106	ArgumentList	buf		2505986	1					
ANR	2506107	Argument	buf		2505986	0					
ANR	2506108	Identifier	buf		2505986	0					
ANR	2506109	Argument	4		2505986	1					
ANR	2506110	PrimaryExpression	4		2505986	0					
ANR	2506111	ExpressionStatement	"chd -> num_base_classes = read_at_32 ( buf , 8 )"	112:1:3566:3609	2505986	8	True				
ANR	2506112	AssignmentExpression	"chd -> num_base_classes = read_at_32 ( buf , 8 )"		2505986	0		=			
ANR	2506113	PtrMemberAccess	chd -> num_base_classes		2505986	0					
ANR	2506114	Identifier	chd		2505986	0					
ANR	2506115	Identifier	num_base_classes		2505986	1					
ANR	2506116	CallExpression	"read_at_32 ( buf , 8 )"		2505986	1					
ANR	2506117	Callee	read_at_32		2505986	0					
ANR	2506118	Identifier	read_at_32		2505986	0					
ANR	2506119	ArgumentList	buf		2505986	1					
ANR	2506120	Argument	buf		2505986	0					
ANR	2506121	Identifier	buf		2505986	0					
ANR	2506122	Argument	8		2505986	1					
ANR	2506123	PrimaryExpression	8		2505986	0					
ANR	2506124	IfStatement	if ( context -> word_size <= 4 )		2505986	9					
ANR	2506125	Condition	context -> word_size <= 4	113:5:3616:3638	2505986	0	True				
ANR	2506126	RelationalExpression	context -> word_size <= 4		2505986	0		<=			
ANR	2506127	PtrMemberAccess	context -> word_size		2505986	0					
ANR	2506128	Identifier	context		2505986	0					
ANR	2506129	Identifier	word_size		2505986	1					
ANR	2506130	PrimaryExpression	4		2505986	1					
ANR	2506131	CompoundStatement		20:30:562:562	2505986	1					
ANR	2506132	ExpressionStatement	"chd -> base_class_array_addr = ( ut32 ) r_read_ble ( buf + 12 , ( bool ) context -> anal -> big_endian , context -> word_size * 8 )"	114:2:3645:3760	2505986	0	True				
ANR	2506133	AssignmentExpression	"chd -> base_class_array_addr = ( ut32 ) r_read_ble ( buf + 12 , ( bool ) context -> anal -> big_endian , context -> word_size * 8 )"		2505986	0		=			
ANR	2506134	PtrMemberAccess	chd -> base_class_array_addr		2505986	0					
ANR	2506135	Identifier	chd		2505986	0					
ANR	2506136	Identifier	base_class_array_addr		2505986	1					
ANR	2506137	CastExpression	"( ut32 ) r_read_ble ( buf + 12 , ( bool ) context -> anal -> big_endian , context -> word_size * 8 )"		2505986	1					
ANR	2506138	CastTarget	ut32		2505986	0					
ANR	2506139	CallExpression	"r_read_ble ( buf + 12 , ( bool ) context -> anal -> big_endian , context -> word_size * 8 )"		2505986	1					
ANR	2506140	Callee	r_read_ble		2505986	0					
ANR	2506141	Identifier	r_read_ble		2505986	0					
ANR	2506142	ArgumentList	buf + 12		2505986	1					
ANR	2506143	Argument	buf + 12		2505986	0					
ANR	2506144	AdditiveExpression	buf + 12		2505986	0		+			
ANR	2506145	Identifier	buf		2505986	0					
ANR	2506146	PrimaryExpression	12		2505986	1					
ANR	2506147	Argument	( bool ) context -> anal -> big_endian		2505986	1					
ANR	2506148	CastExpression	( bool ) context -> anal -> big_endian		2505986	0					
ANR	2506149	CastTarget	bool		2505986	0					
ANR	2506150	PtrMemberAccess	context -> anal -> big_endian		2505986	1					
ANR	2506151	PtrMemberAccess	context -> anal		2505986	0					
ANR	2506152	Identifier	context		2505986	0					
ANR	2506153	Identifier	anal		2505986	1					
ANR	2506154	Identifier	big_endian		2505986	1					
ANR	2506155	Argument	context -> word_size * 8		2505986	2					
ANR	2506156	MultiplicativeExpression	context -> word_size * 8		2505986	0		*			
ANR	2506157	PtrMemberAccess	context -> word_size		2505986	0					
ANR	2506158	Identifier	context		2505986	0					
ANR	2506159	Identifier	word_size		2505986	1					
ANR	2506160	PrimaryExpression	8		2505986	1					
ANR	2506161	ElseStatement	else		2505986	0					
ANR	2506162	CompoundStatement		22:8:691:691	2505986	0					
ANR	2506163	ExpressionStatement	"chd -> base_class_array_addr = read_at_32 ( buf , 12 )"	119:2:3942:3991	2505986	0	True				
ANR	2506164	AssignmentExpression	"chd -> base_class_array_addr = read_at_32 ( buf , 12 )"		2505986	0		=			
ANR	2506165	PtrMemberAccess	chd -> base_class_array_addr		2505986	0					
ANR	2506166	Identifier	chd		2505986	0					
ANR	2506167	Identifier	base_class_array_addr		2505986	1					
ANR	2506168	CallExpression	"read_at_32 ( buf , 12 )"		2505986	1					
ANR	2506169	Callee	read_at_32		2505986	0					
ANR	2506170	Identifier	read_at_32		2505986	0					
ANR	2506171	ArgumentList	buf		2505986	1					
ANR	2506172	Argument	buf		2505986	0					
ANR	2506173	Identifier	buf		2505986	0					
ANR	2506174	Argument	12		2505986	1					
ANR	2506175	PrimaryExpression	12		2505986	0					
ANR	2506176	ReturnStatement	return true ;	121:1:3997:4008	2505986	10	True				
ANR	2506177	Identifier	true		2505986	0					
ANR	2506178	ReturnType	static bool		2505986	1					
ANR	2506179	Identifier	rtti_msvc_read_class_hierarchy_descriptor		2505986	2					
ANR	2506180	ParameterList	"RVTableContext * context , ut64 addr , rtti_class_hierarchy_descriptor * chd"		2505986	3					
ANR	2506181	Parameter	RVTableContext * context	94:54:3004:3026	2505986	0	True				
ANR	2506182	ParameterType	RVTableContext *		2505986	0					
ANR	2506183	Identifier	context		2505986	1					
ANR	2506184	Parameter	ut64 addr	94:79:3029:3037	2505986	1	True				
ANR	2506185	ParameterType	ut64		2505986	0					
ANR	2506186	Identifier	addr		2505986	1					
ANR	2506187	Parameter	rtti_class_hierarchy_descriptor * chd	94:90:3040:3075	2505986	2	True				
ANR	2506188	ParameterType	rtti_class_hierarchy_descriptor *		2505986	0					
ANR	2506189	Identifier	chd		2505986	1					
ANR	2506190	CFGEntryNode	ENTRY		2505986		True				
ANR	2506191	CFGExitNode	EXIT		2505986		True				
ANR	2506192	Symbol	chd -> num_base_classes		2505986						
ANR	2506193	Symbol	context -> word_size		2505986						
ANR	2506194	Symbol	context -> anal -> iob . read_at		2505986						
ANR	2506195	Symbol	* * context		2505986						
ANR	2506196	Symbol	context -> anal -> iob . io		2505986						
ANR	2506197	Symbol	chd -> attributes		2505986						
ANR	2506198	Symbol	context		2505986						
ANR	2506199	Symbol	addr		2505986						
ANR	2506200	Symbol	UT64_MAX		2505986						
ANR	2506201	Symbol	read_at_32		2505986						
ANR	2506202	Symbol	r_read_at_le32		2505986						
ANR	2506203	Symbol	r_read_at_be32		2505986						
ANR	2506204	Symbol	chd		2505986						
ANR	2506205	Symbol	context -> anal -> iob		2505986						
ANR	2506206	Symbol	context -> anal		2505986						
ANR	2506207	Symbol	src		2505986						
ANR	2506208	Symbol	context -> anal -> big_endian		2505986						
ANR	2506209	Symbol	false		2505986						
ANR	2506210	Symbol	chdSize		2505986						
ANR	2506211	Symbol	R_MIN		2505986						
ANR	2506212	Symbol	chd -> base_class_array_addr		2505986						
ANR	2506213	Symbol	* context		2505986						
ANR	2506214	Symbol	* context -> anal		2505986						
ANR	2506215	Symbol	buf		2505986						
ANR	2506216	Symbol	chd -> signature		2505986						
ANR	2506217	Symbol	* chd		2505986						
ANR	2506218	Symbol	r_read_ble		2505986						
ANR	2506219	Symbol	true		2505986						
ANR	2506220	Function	rtti_msvc_base_class_descriptor_size	124:0:4013:4137							
ANR	2506221	FunctionDef	rtti_msvc_base_class_descriptor_size (RVTableContext * context)		2506220	0					
ANR	2506222	CompoundStatement		124:74:4087:4137	2506220	0					
ANR	2506223	ReturnStatement	return context -> word_size + 5 * sizeof ( ut32 ) ;	125:1:4090:4135	2506220	0	True				
ANR	2506224	AdditiveExpression	context -> word_size + 5 * sizeof ( ut32 )		2506220	0		+			
ANR	2506225	PtrMemberAccess	context -> word_size		2506220	0					
ANR	2506226	Identifier	context		2506220	0					
ANR	2506227	Identifier	word_size		2506220	1					
ANR	2506228	MultiplicativeExpression	5 * sizeof ( ut32 )		2506220	1		*			
ANR	2506229	PrimaryExpression	5		2506220	0					
ANR	2506230	SizeofExpression	sizeof ( ut32 )		2506220	1					
ANR	2506231	Sizeof	sizeof		2506220	0					
ANR	2506232	SizeofOperand	ut32		2506220	1					
ANR	2506233	ReturnType	static ut64		2506220	1					
ANR	2506234	Identifier	rtti_msvc_base_class_descriptor_size		2506220	2					
ANR	2506235	ParameterList	RVTableContext * context		2506220	3					
ANR	2506236	Parameter	RVTableContext * context	124:49:4062:4084	2506220	0	True				
ANR	2506237	ParameterType	RVTableContext *		2506220	0					
ANR	2506238	Identifier	context		2506220	1					
ANR	2506239	CFGEntryNode	ENTRY		2506220		True				
ANR	2506240	CFGExitNode	EXIT		2506220		True				
ANR	2506241	Symbol	context -> word_size		2506220						
ANR	2506242	Symbol	context		2506220						
ANR	2506243	Symbol	* context		2506220						
ANR	2506244	Function	rtti_msvc_read_base_class_descriptor	128:0:4140:5239							
ANR	2506245	FunctionDef	"rtti_msvc_read_base_class_descriptor (RVTableContext * context , ut64 addr , rtti_base_class_descriptor * bcd)"		2506244	0					
ANR	2506246	CompoundStatement		128:118:4258:5239	2506244	0					
ANR	2506247	IfStatement	if ( addr == UT64_MAX )		2506244	0					
ANR	2506248	Condition	addr == UT64_MAX	129:5:4265:4280	2506244	0	True				
ANR	2506249	EqualityExpression	addr == UT64_MAX		2506244	0		==			
ANR	2506250	Identifier	addr		2506244	0					
ANR	2506251	Identifier	UT64_MAX		2506244	1					
ANR	2506252	CompoundStatement		2:23:24:24	2506244	1					
ANR	2506253	ReturnStatement	return false ;	130:2:4287:4299	2506244	0	True				
ANR	2506254	Identifier	false		2506244	0					
ANR	2506255	IdentifierDeclStatement	ut8 buf [ sizeof ( ut64 ) + 5 * sizeof ( ut32 ) ] ;	133:1:4306:4348	2506244	1	True				
ANR	2506256	IdentifierDecl	buf [ sizeof ( ut64 ) + 5 * sizeof ( ut32 ) ]		2506244	0					
ANR	2506257	IdentifierDeclType	ut8 [ sizeof ( ut64 ) + 5 * sizeof ( ut32 ) ]		2506244	0					
ANR	2506258	Identifier	buf		2506244	1					
ANR	2506259	AdditiveExpression	sizeof ( ut64 ) + 5 * sizeof ( ut32 )		2506244	2		+			
ANR	2506260	SizeofExpression	sizeof ( ut64 )		2506244	0					
ANR	2506261	Sizeof	sizeof		2506244	0					
ANR	2506262	SizeofOperand	ut64		2506244	1					
ANR	2506263	MultiplicativeExpression	5 * sizeof ( ut32 )		2506244	1		*			
ANR	2506264	PrimaryExpression	5		2506244	0					
ANR	2506265	SizeofExpression	sizeof ( ut32 )		2506244	1					
ANR	2506266	Sizeof	sizeof		2506244	0					
ANR	2506267	SizeofOperand	ut32		2506244	1					
ANR	2506268	IdentifierDeclStatement	int bcdSize = ( int ) rtti_msvc_base_class_descriptor_size ( context ) ;	134:1:4351:4417	2506244	2	True				
ANR	2506269	IdentifierDecl	bcdSize = ( int ) rtti_msvc_base_class_descriptor_size ( context )		2506244	0					
ANR	2506270	IdentifierDeclType	int		2506244	0					
ANR	2506271	Identifier	bcdSize		2506244	1					
ANR	2506272	AssignmentExpression	bcdSize = ( int ) rtti_msvc_base_class_descriptor_size ( context )		2506244	2		=			
ANR	2506273	Identifier	bcdSize		2506244	0					
ANR	2506274	CastExpression	( int ) rtti_msvc_base_class_descriptor_size ( context )		2506244	1					
ANR	2506275	CastTarget	int		2506244	0					
ANR	2506276	CallExpression	rtti_msvc_base_class_descriptor_size ( context )		2506244	1					
ANR	2506277	Callee	rtti_msvc_base_class_descriptor_size		2506244	0					
ANR	2506278	Identifier	rtti_msvc_base_class_descriptor_size		2506244	0					
ANR	2506279	ArgumentList	context		2506244	1					
ANR	2506280	Argument	context		2506244	0					
ANR	2506281	Identifier	context		2506244	0					
ANR	2506282	IfStatement	if ( bcdSize > sizeof ( buf ) )		2506244	3					
ANR	2506283	Condition	bcdSize > sizeof ( buf )	135:5:4424:4445	2506244	0	True				
ANR	2506284	RelationalExpression	bcdSize > sizeof ( buf )		2506244	0		>			
ANR	2506285	Identifier	bcdSize		2506244	0					
ANR	2506286	SizeofExpression	sizeof ( buf )		2506244	1					
ANR	2506287	Sizeof	sizeof		2506244	0					
ANR	2506288	SizeofOperand	buf		2506244	1					
ANR	2506289	CompoundStatement		8:29:189:189	2506244	1					
ANR	2506290	ReturnStatement	return false ;	136:2:4452:4464	2506244	0	True				
ANR	2506291	Identifier	false		2506244	0					
ANR	2506292	IfStatement	"if ( ! context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , buf , bcdSize ) )"		2506244	4					
ANR	2506293	Condition	"! context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , buf , bcdSize )"	139:5:4475:4545	2506244	0	True				
ANR	2506294	UnaryOperationExpression	"! context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , buf , bcdSize )"		2506244	0					
ANR	2506295	UnaryOperator	!		2506244	0					
ANR	2506296	CallExpression	"context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , buf , bcdSize )"		2506244	1					
ANR	2506297	Callee	context -> anal -> iob . read_at		2506244	0					
ANR	2506298	MemberAccess	context -> anal -> iob . read_at		2506244	0					
ANR	2506299	PtrMemberAccess	context -> anal -> iob		2506244	0					
ANR	2506300	PtrMemberAccess	context -> anal		2506244	0					
ANR	2506301	Identifier	context		2506244	0					
ANR	2506302	Identifier	anal		2506244	1					
ANR	2506303	Identifier	iob		2506244	1					
ANR	2506304	Identifier	read_at		2506244	1					
ANR	2506305	ArgumentList	context -> anal -> iob . io		2506244	1					
ANR	2506306	Argument	context -> anal -> iob . io		2506244	0					
ANR	2506307	MemberAccess	context -> anal -> iob . io		2506244	0					
ANR	2506308	PtrMemberAccess	context -> anal -> iob		2506244	0					
ANR	2506309	PtrMemberAccess	context -> anal		2506244	0					
ANR	2506310	Identifier	context		2506244	0					
ANR	2506311	Identifier	anal		2506244	1					
ANR	2506312	Identifier	iob		2506244	1					
ANR	2506313	Identifier	io		2506244	1					
ANR	2506314	Argument	addr		2506244	1					
ANR	2506315	Identifier	addr		2506244	0					
ANR	2506316	Argument	buf		2506244	2					
ANR	2506317	Identifier	buf		2506244	0					
ANR	2506318	Argument	bcdSize		2506244	3					
ANR	2506319	Identifier	bcdSize		2506244	0					
ANR	2506320	CompoundStatement		12:78:289:289	2506244	1					
ANR	2506321	ReturnStatement	return false ;	140:2:4552:4564	2506244	0	True				
ANR	2506322	Identifier	false		2506244	0					
ANR	2506323	IdentifierDeclStatement	"ut32 ( * read_at_32 ) ( const void * src , size_t offset ) = context -> anal -> big_endian ? r_read_at_be32 : r_read_at_le32 ;"	143:1:4571:4683	2506244	5	True				
ANR	2506324	IdentifierDecl	"( * read_at_32 ) ( const void * src , size_t offset ) = context -> anal -> big_endian ? r_read_at_be32 : r_read_at_le32"		2506244	0					
ANR	2506325	IdentifierDeclType	"ut32 ( * ) ( const void * src , size_t offset )"		2506244	0					
ANR	2506326	Identifier	read_at_32		2506244	1					
ANR	2506327	Identifier	src		2506244	2					
ANR	2506328	AssignmentExpression	"( * read_at_32 ) ( const void * src , size_t offset ) = context -> anal -> big_endian ? r_read_at_be32 : r_read_at_le32"		2506244	3		=			
ANR	2506329	Identifier	src		2506244	0					
ANR	2506330	ConditionalExpression	context -> anal -> big_endian ? r_read_at_be32 : r_read_at_le32		2506244	1					
ANR	2506331	Condition	context -> anal -> big_endian		2506244	0					
ANR	2506332	PtrMemberAccess	context -> anal -> big_endian		2506244	0					
ANR	2506333	PtrMemberAccess	context -> anal		2506244	0					
ANR	2506334	Identifier	context		2506244	0					
ANR	2506335	Identifier	anal		2506244	1					
ANR	2506336	Identifier	big_endian		2506244	1					
ANR	2506337	Identifier	r_read_at_be32		2506244	1					
ANR	2506338	Identifier	r_read_at_le32		2506244	2					
ANR	2506339	IdentifierDeclStatement	"int typeDescriptorAddrSize = R_MIN ( context -> word_size , 4 ) ;"	144:1:4686:4744	2506244	6	True				
ANR	2506340	IdentifierDecl	"typeDescriptorAddrSize = R_MIN ( context -> word_size , 4 )"		2506244	0					
ANR	2506341	IdentifierDeclType	int		2506244	0					
ANR	2506342	Identifier	typeDescriptorAddrSize		2506244	1					
ANR	2506343	AssignmentExpression	"typeDescriptorAddrSize = R_MIN ( context -> word_size , 4 )"		2506244	2		=			
ANR	2506344	Identifier	typeDescriptorAddrSize		2506244	0					
ANR	2506345	CallExpression	"R_MIN ( context -> word_size , 4 )"		2506244	1					
ANR	2506346	Callee	R_MIN		2506244	0					
ANR	2506347	Identifier	R_MIN		2506244	0					
ANR	2506348	ArgumentList	context -> word_size		2506244	1					
ANR	2506349	Argument	context -> word_size		2506244	0					
ANR	2506350	PtrMemberAccess	context -> word_size		2506244	0					
ANR	2506351	Identifier	context		2506244	0					
ANR	2506352	Identifier	word_size		2506244	1					
ANR	2506353	Argument	4		2506244	1					
ANR	2506354	PrimaryExpression	4		2506244	0					
ANR	2506355	ExpressionStatement	"bcd -> type_descriptor_addr = ( ut32 ) r_read_ble ( buf , ( bool ) context -> anal -> big_endian , typeDescriptorAddrSize * 8 )"	145:1:4747:4860	2506244	7	True				
ANR	2506356	AssignmentExpression	"bcd -> type_descriptor_addr = ( ut32 ) r_read_ble ( buf , ( bool ) context -> anal -> big_endian , typeDescriptorAddrSize * 8 )"		2506244	0		=			
ANR	2506357	PtrMemberAccess	bcd -> type_descriptor_addr		2506244	0					
ANR	2506358	Identifier	bcd		2506244	0					
ANR	2506359	Identifier	type_descriptor_addr		2506244	1					
ANR	2506360	CastExpression	"( ut32 ) r_read_ble ( buf , ( bool ) context -> anal -> big_endian , typeDescriptorAddrSize * 8 )"		2506244	1					
ANR	2506361	CastTarget	ut32		2506244	0					
ANR	2506362	CallExpression	"r_read_ble ( buf , ( bool ) context -> anal -> big_endian , typeDescriptorAddrSize * 8 )"		2506244	1					
ANR	2506363	Callee	r_read_ble		2506244	0					
ANR	2506364	Identifier	r_read_ble		2506244	0					
ANR	2506365	ArgumentList	buf		2506244	1					
ANR	2506366	Argument	buf		2506244	0					
ANR	2506367	Identifier	buf		2506244	0					
ANR	2506368	Argument	( bool ) context -> anal -> big_endian		2506244	1					
ANR	2506369	CastExpression	( bool ) context -> anal -> big_endian		2506244	0					
ANR	2506370	CastTarget	bool		2506244	0					
ANR	2506371	PtrMemberAccess	context -> anal -> big_endian		2506244	1					
ANR	2506372	PtrMemberAccess	context -> anal		2506244	0					
ANR	2506373	Identifier	context		2506244	0					
ANR	2506374	Identifier	anal		2506244	1					
ANR	2506375	Identifier	big_endian		2506244	1					
ANR	2506376	Argument	typeDescriptorAddrSize * 8		2506244	2					
ANR	2506377	MultiplicativeExpression	typeDescriptorAddrSize * 8		2506244	0		*			
ANR	2506378	Identifier	typeDescriptorAddrSize		2506244	0					
ANR	2506379	PrimaryExpression	8		2506244	1					
ANR	2506380	IdentifierDeclStatement	size_t offset = ( size_t ) typeDescriptorAddrSize ;	146:1:4863:4910	2506244	8	True				
ANR	2506381	IdentifierDecl	offset = ( size_t ) typeDescriptorAddrSize		2506244	0					
ANR	2506382	IdentifierDeclType	size_t		2506244	0					
ANR	2506383	Identifier	offset		2506244	1					
ANR	2506384	AssignmentExpression	offset = ( size_t ) typeDescriptorAddrSize		2506244	2		=			
ANR	2506385	Identifier	offset		2506244	0					
ANR	2506386	CastExpression	( size_t ) typeDescriptorAddrSize		2506244	1					
ANR	2506387	CastTarget	size_t		2506244	0					
ANR	2506388	Identifier	typeDescriptorAddrSize		2506244	1					
ANR	2506389	ExpressionStatement	"bcd -> num_contained_bases = read_at_32 ( buf , offset )"	147:1:4913:4964	2506244	9	True				
ANR	2506390	AssignmentExpression	"bcd -> num_contained_bases = read_at_32 ( buf , offset )"		2506244	0		=			
ANR	2506391	PtrMemberAccess	bcd -> num_contained_bases		2506244	0					
ANR	2506392	Identifier	bcd		2506244	0					
ANR	2506393	Identifier	num_contained_bases		2506244	1					
ANR	2506394	CallExpression	"read_at_32 ( buf , offset )"		2506244	1					
ANR	2506395	Callee	read_at_32		2506244	0					
ANR	2506396	Identifier	read_at_32		2506244	0					
ANR	2506397	ArgumentList	buf		2506244	1					
ANR	2506398	Argument	buf		2506244	0					
ANR	2506399	Identifier	buf		2506244	0					
ANR	2506400	Argument	offset		2506244	1					
ANR	2506401	Identifier	offset		2506244	0					
ANR	2506402	ExpressionStatement	"bcd -> where . mdisp = read_at_32 ( buf , offset + sizeof ( ut32 ) )"	148:1:4967:5026	2506244	10	True				
ANR	2506403	AssignmentExpression	"bcd -> where . mdisp = read_at_32 ( buf , offset + sizeof ( ut32 ) )"		2506244	0		=			
ANR	2506404	MemberAccess	bcd -> where . mdisp		2506244	0					
ANR	2506405	PtrMemberAccess	bcd -> where		2506244	0					
ANR	2506406	Identifier	bcd		2506244	0					
ANR	2506407	Identifier	where		2506244	1					
ANR	2506408	Identifier	mdisp		2506244	1					
ANR	2506409	CallExpression	"read_at_32 ( buf , offset + sizeof ( ut32 ) )"		2506244	1					
ANR	2506410	Callee	read_at_32		2506244	0					
ANR	2506411	Identifier	read_at_32		2506244	0					
ANR	2506412	ArgumentList	buf		2506244	1					
ANR	2506413	Argument	buf		2506244	0					
ANR	2506414	Identifier	buf		2506244	0					
ANR	2506415	Argument	offset + sizeof ( ut32 )		2506244	1					
ANR	2506416	AdditiveExpression	offset + sizeof ( ut32 )		2506244	0		+			
ANR	2506417	Identifier	offset		2506244	0					
ANR	2506418	SizeofExpression	sizeof ( ut32 )		2506244	1					
ANR	2506419	Sizeof	sizeof		2506244	0					
ANR	2506420	SizeofOperand	ut32		2506244	1					
ANR	2506421	ExpressionStatement	"bcd -> where . pdisp = read_at_32 ( buf , offset + 2 * sizeof ( ut32 ) )"	149:1:5029:5092	2506244	11	True				
ANR	2506422	AssignmentExpression	"bcd -> where . pdisp = read_at_32 ( buf , offset + 2 * sizeof ( ut32 ) )"		2506244	0		=			
ANR	2506423	MemberAccess	bcd -> where . pdisp		2506244	0					
ANR	2506424	PtrMemberAccess	bcd -> where		2506244	0					
ANR	2506425	Identifier	bcd		2506244	0					
ANR	2506426	Identifier	where		2506244	1					
ANR	2506427	Identifier	pdisp		2506244	1					
ANR	2506428	CallExpression	"read_at_32 ( buf , offset + 2 * sizeof ( ut32 ) )"		2506244	1					
ANR	2506429	Callee	read_at_32		2506244	0					
ANR	2506430	Identifier	read_at_32		2506244	0					
ANR	2506431	ArgumentList	buf		2506244	1					
ANR	2506432	Argument	buf		2506244	0					
ANR	2506433	Identifier	buf		2506244	0					
ANR	2506434	Argument	offset + 2 * sizeof ( ut32 )		2506244	1					
ANR	2506435	AdditiveExpression	offset + 2 * sizeof ( ut32 )		2506244	0		+			
ANR	2506436	Identifier	offset		2506244	0					
ANR	2506437	MultiplicativeExpression	2 * sizeof ( ut32 )		2506244	1		*			
ANR	2506438	PrimaryExpression	2		2506244	0					
ANR	2506439	SizeofExpression	sizeof ( ut32 )		2506244	1					
ANR	2506440	Sizeof	sizeof		2506244	0					
ANR	2506441	SizeofOperand	ut32		2506244	1					
ANR	2506442	ExpressionStatement	"bcd -> where . vdisp = read_at_32 ( buf , offset + 3 * sizeof ( ut32 ) )"	150:1:5095:5158	2506244	12	True				
ANR	2506443	AssignmentExpression	"bcd -> where . vdisp = read_at_32 ( buf , offset + 3 * sizeof ( ut32 ) )"		2506244	0		=			
ANR	2506444	MemberAccess	bcd -> where . vdisp		2506244	0					
ANR	2506445	PtrMemberAccess	bcd -> where		2506244	0					
ANR	2506446	Identifier	bcd		2506244	0					
ANR	2506447	Identifier	where		2506244	1					
ANR	2506448	Identifier	vdisp		2506244	1					
ANR	2506449	CallExpression	"read_at_32 ( buf , offset + 3 * sizeof ( ut32 ) )"		2506244	1					
ANR	2506450	Callee	read_at_32		2506244	0					
ANR	2506451	Identifier	read_at_32		2506244	0					
ANR	2506452	ArgumentList	buf		2506244	1					
ANR	2506453	Argument	buf		2506244	0					
ANR	2506454	Identifier	buf		2506244	0					
ANR	2506455	Argument	offset + 3 * sizeof ( ut32 )		2506244	1					
ANR	2506456	AdditiveExpression	offset + 3 * sizeof ( ut32 )		2506244	0		+			
ANR	2506457	Identifier	offset		2506244	0					
ANR	2506458	MultiplicativeExpression	3 * sizeof ( ut32 )		2506244	1		*			
ANR	2506459	PrimaryExpression	3		2506244	0					
ANR	2506460	SizeofExpression	sizeof ( ut32 )		2506244	1					
ANR	2506461	Sizeof	sizeof		2506244	0					
ANR	2506462	SizeofOperand	ut32		2506244	1					
ANR	2506463	ExpressionStatement	"bcd -> attributes = read_at_32 ( buf , offset + 4 * sizeof ( ut32 ) )"	151:1:5161:5223	2506244	13	True				
ANR	2506464	AssignmentExpression	"bcd -> attributes = read_at_32 ( buf , offset + 4 * sizeof ( ut32 ) )"		2506244	0		=			
ANR	2506465	PtrMemberAccess	bcd -> attributes		2506244	0					
ANR	2506466	Identifier	bcd		2506244	0					
ANR	2506467	Identifier	attributes		2506244	1					
ANR	2506468	CallExpression	"read_at_32 ( buf , offset + 4 * sizeof ( ut32 ) )"		2506244	1					
ANR	2506469	Callee	read_at_32		2506244	0					
ANR	2506470	Identifier	read_at_32		2506244	0					
ANR	2506471	ArgumentList	buf		2506244	1					
ANR	2506472	Argument	buf		2506244	0					
ANR	2506473	Identifier	buf		2506244	0					
ANR	2506474	Argument	offset + 4 * sizeof ( ut32 )		2506244	1					
ANR	2506475	AdditiveExpression	offset + 4 * sizeof ( ut32 )		2506244	0		+			
ANR	2506476	Identifier	offset		2506244	0					
ANR	2506477	MultiplicativeExpression	4 * sizeof ( ut32 )		2506244	1		*			
ANR	2506478	PrimaryExpression	4		2506244	0					
ANR	2506479	SizeofExpression	sizeof ( ut32 )		2506244	1					
ANR	2506480	Sizeof	sizeof		2506244	0					
ANR	2506481	SizeofOperand	ut32		2506244	1					
ANR	2506482	ReturnStatement	return true ;	152:1:5226:5237	2506244	14	True				
ANR	2506483	Identifier	true		2506244	0					
ANR	2506484	ReturnType	static bool		2506244	1					
ANR	2506485	Identifier	rtti_msvc_read_base_class_descriptor		2506244	2					
ANR	2506486	ParameterList	"RVTableContext * context , ut64 addr , rtti_base_class_descriptor * bcd"		2506244	3					
ANR	2506487	Parameter	RVTableContext * context	128:49:4189:4211	2506244	0	True				
ANR	2506488	ParameterType	RVTableContext *		2506244	0					
ANR	2506489	Identifier	context		2506244	1					
ANR	2506490	Parameter	ut64 addr	128:74:4214:4222	2506244	1	True				
ANR	2506491	ParameterType	ut64		2506244	0					
ANR	2506492	Identifier	addr		2506244	1					
ANR	2506493	Parameter	rtti_base_class_descriptor * bcd	128:85:4225:4255	2506244	2	True				
ANR	2506494	ParameterType	rtti_base_class_descriptor *		2506244	0					
ANR	2506495	Identifier	bcd		2506244	1					
ANR	2506496	CFGEntryNode	ENTRY		2506244		True				
ANR	2506497	CFGExitNode	EXIT		2506244		True				
ANR	2506498	Symbol	bcd		2506244						
ANR	2506499	Symbol	bcd -> type_descriptor_addr		2506244						
ANR	2506500	Symbol	context -> anal -> iob . read_at		2506244						
ANR	2506501	Symbol	context -> word_size		2506244						
ANR	2506502	Symbol	* * context		2506244						
ANR	2506503	Symbol	bcd -> num_contained_bases		2506244						
ANR	2506504	Symbol	typeDescriptorAddrSize		2506244						
ANR	2506505	Symbol	* bcd		2506244						
ANR	2506506	Symbol	bcd -> where . mdisp		2506244						
ANR	2506507	Symbol	bcd -> where		2506244						
ANR	2506508	Symbol	context -> anal -> iob . io		2506244						
ANR	2506509	Symbol	context		2506244						
ANR	2506510	Symbol	bcd -> where . vdisp		2506244						
ANR	2506511	Symbol	addr		2506244						
ANR	2506512	Symbol	UT64_MAX		2506244						
ANR	2506513	Symbol	r_read_at_le32		2506244						
ANR	2506514	Symbol	read_at_32		2506244						
ANR	2506515	Symbol	r_read_at_be32		2506244						
ANR	2506516	Symbol	bcdSize		2506244						
ANR	2506517	Symbol	context -> anal -> iob		2506244						
ANR	2506518	Symbol	context -> anal		2506244						
ANR	2506519	Symbol	offset		2506244						
ANR	2506520	Symbol	src		2506244						
ANR	2506521	Symbol	context -> anal -> big_endian		2506244						
ANR	2506522	Symbol	false		2506244						
ANR	2506523	Symbol	R_MIN		2506244						
ANR	2506524	Symbol	rtti_msvc_base_class_descriptor_size		2506244						
ANR	2506525	Symbol	* context		2506244						
ANR	2506526	Symbol	* context -> anal		2506244						
ANR	2506527	Symbol	buf		2506244						
ANR	2506528	Symbol	r_read_ble		2506244						
ANR	2506529	Symbol	true		2506244						
ANR	2506530	Symbol	bcd -> attributes		2506244						
ANR	2506531	Symbol	bcd -> where . pdisp		2506244						
ANR	2506532	Function	rtti_msvc_read_base_class_array	155:0:5242:6950							
ANR	2506533	FunctionDef	"rtti_msvc_read_base_class_array (RVTableContext * context , ut32 num_base_classes , ut64 base , ut32 offset)"		2506532	0					
ANR	2506534	CompoundStatement		155:118:5360:6950	2506532	0					
ANR	2506535	IfStatement	if ( base == UT64_MAX || offset == UT32_MAX || num_base_classes == UT32_MAX )		2506532	0					
ANR	2506536	Condition	base == UT64_MAX || offset == UT32_MAX || num_base_classes == UT32_MAX	156:5:5367:5436	2506532	0	True				
ANR	2506537	OrExpression	base == UT64_MAX || offset == UT32_MAX || num_base_classes == UT32_MAX		2506532	0		||			
ANR	2506538	EqualityExpression	base == UT64_MAX		2506532	0		==			
ANR	2506539	Identifier	base		2506532	0					
ANR	2506540	Identifier	UT64_MAX		2506532	1					
ANR	2506541	OrExpression	offset == UT32_MAX || num_base_classes == UT32_MAX		2506532	1		||			
ANR	2506542	EqualityExpression	offset == UT32_MAX		2506532	0		==			
ANR	2506543	Identifier	offset		2506532	0					
ANR	2506544	Identifier	UT32_MAX		2506532	1					
ANR	2506545	EqualityExpression	num_base_classes == UT32_MAX		2506532	1		==			
ANR	2506546	Identifier	num_base_classes		2506532	0					
ANR	2506547	Identifier	UT32_MAX		2506532	1					
ANR	2506548	CompoundStatement		2:77:78:78	2506532	1					
ANR	2506549	ReturnStatement	return NULL ;	157:2:5443:5454	2506532	0	True				
ANR	2506550	Identifier	NULL		2506532	0					
ANR	2506551	IdentifierDeclStatement	RList * ret = r_list_newf ( free ) ;	160:1:5461:5492	2506532	1	True				
ANR	2506552	IdentifierDecl	* ret = r_list_newf ( free )		2506532	0					
ANR	2506553	IdentifierDeclType	RList *		2506532	0					
ANR	2506554	Identifier	ret		2506532	1					
ANR	2506555	AssignmentExpression	* ret = r_list_newf ( free )		2506532	2		=			
ANR	2506556	Identifier	ret		2506532	0					
ANR	2506557	CallExpression	r_list_newf ( free )		2506532	1					
ANR	2506558	Callee	r_list_newf		2506532	0					
ANR	2506559	Identifier	r_list_newf		2506532	0					
ANR	2506560	ArgumentList	free		2506532	1					
ANR	2506561	Argument	free		2506532	0					
ANR	2506562	Identifier	free		2506532	0					
ANR	2506563	IfStatement	if ( ! ret )		2506532	2					
ANR	2506564	Condition	! ret	161:5:5499:5502	2506532	0	True				
ANR	2506565	UnaryOperationExpression	! ret		2506532	0					
ANR	2506566	UnaryOperator	!		2506532	0					
ANR	2506567	Identifier	ret		2506532	1					
ANR	2506568	CompoundStatement		7:11:144:144	2506532	1					
ANR	2506569	ReturnStatement	return NULL ;	162:2:5509:5520	2506532	0	True				
ANR	2506570	Identifier	NULL		2506532	0					
ANR	2506571	IdentifierDeclStatement	ut64 addr = base + offset ;	165:1:5527:5552	2506532	3	True				
ANR	2506572	IdentifierDecl	addr = base + offset		2506532	0					
ANR	2506573	IdentifierDeclType	ut64		2506532	0					
ANR	2506574	Identifier	addr		2506532	1					
ANR	2506575	AssignmentExpression	addr = base + offset		2506532	2		=			
ANR	2506576	Identifier	addr		2506532	0					
ANR	2506577	AdditiveExpression	base + offset		2506532	1		+			
ANR	2506578	Identifier	base		2506532	0					
ANR	2506579	Identifier	offset		2506532	1					
ANR	2506580	IdentifierDeclStatement	"ut64 stride = R_MIN ( context -> word_size , 4 ) ;"	166:1:5555:5598	2506532	4	True				
ANR	2506581	IdentifierDecl	"stride = R_MIN ( context -> word_size , 4 )"		2506532	0					
ANR	2506582	IdentifierDeclType	ut64		2506532	0					
ANR	2506583	Identifier	stride		2506532	1					
ANR	2506584	AssignmentExpression	"stride = R_MIN ( context -> word_size , 4 )"		2506532	2		=			
ANR	2506585	Identifier	stride		2506532	0					
ANR	2506586	CallExpression	"R_MIN ( context -> word_size , 4 )"		2506532	1					
ANR	2506587	Callee	R_MIN		2506532	0					
ANR	2506588	Identifier	R_MIN		2506532	0					
ANR	2506589	ArgumentList	context -> word_size		2506532	1					
ANR	2506590	Argument	context -> word_size		2506532	0					
ANR	2506591	PtrMemberAccess	context -> word_size		2506532	0					
ANR	2506592	Identifier	context		2506532	0					
ANR	2506593	Identifier	word_size		2506532	1					
ANR	2506594	Argument	4		2506532	1					
ANR	2506595	PrimaryExpression	4		2506532	0					
ANR	2506596	IfStatement	if ( num_base_classes > BASE_CLASSES_MAX )		2506532	5					
ANR	2506597	Condition	num_base_classes > BASE_CLASSES_MAX	168:5:5606:5640	2506532	0	True				
ANR	2506598	RelationalExpression	num_base_classes > BASE_CLASSES_MAX		2506532	0		>			
ANR	2506599	Identifier	num_base_classes		2506532	0					
ANR	2506600	Identifier	BASE_CLASSES_MAX		2506532	1					
ANR	2506601	CompoundStatement		14:42:282:282	2506532	1					
ANR	2506602	IfStatement	if ( context -> anal -> verbose )		2506532	0					
ANR	2506603	Condition	context -> anal -> verbose	169:6:5651:5672	2506532	0	True				
ANR	2506604	PtrMemberAccess	context -> anal -> verbose		2506532	0					
ANR	2506605	PtrMemberAccess	context -> anal		2506532	0					
ANR	2506606	Identifier	context		2506532	0					
ANR	2506607	Identifier	anal		2506532	1					
ANR	2506608	Identifier	verbose		2506532	1					
ANR	2506609	CompoundStatement		15:30:314:314	2506532	1					
ANR	2506610	Statement	eprintf	170:3:5680:5686	2506532	0	True				
ANR	2506611	Statement	(	170:11:5688:5688	2506532	1	True				
ANR	2506612	Statement	"""WARNING: Length of base class array at 0x%08"""	170:12:5689:5734	2506532	2	True				
ANR	2506613	Statement	PFMT64x	170:58:5735:5741	2506532	3	True				
ANR	2506614	Statement	""" exceeds %d.\\n"""	170:65:5742:5757	2506532	4	True				
ANR	2506615	Statement	","	170:81:5758:5758	2506532	5	True				
ANR	2506616	Statement	addr	170:83:5760:5763	2506532	6	True				
ANR	2506617	Statement	","	170:87:5764:5764	2506532	7	True				
ANR	2506618	Statement	BASE_CLASSES_MAX	170:89:5766:5781	2506532	8	True				
ANR	2506619	Statement	)	170:105:5782:5782	2506532	9	True				
ANR	2506620	ExpressionStatement		170:106:5783:5783	2506532	10	True				
ANR	2506621	ExpressionStatement	num_base_classes = BASE_CLASSES_MAX	172:2:5791:5826	2506532	1	True				
ANR	2506622	AssignmentExpression	num_base_classes = BASE_CLASSES_MAX		2506532	0		=			
ANR	2506623	Identifier	num_base_classes		2506532	0					
ANR	2506624	Identifier	BASE_CLASSES_MAX		2506532	1					
ANR	2506625	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	175:1:5833:5863	2506532	6	True				
ANR	2506626	CallExpression	"r_cons_break_push ( NULL , NULL )"		2506532	0					
ANR	2506627	Callee	r_cons_break_push		2506532	0					
ANR	2506628	Identifier	r_cons_break_push		2506532	0					
ANR	2506629	ArgumentList	NULL		2506532	1					
ANR	2506630	Argument	NULL		2506532	0					
ANR	2506631	Identifier	NULL		2506532	0					
ANR	2506632	Argument	NULL		2506532	1					
ANR	2506633	Identifier	NULL		2506532	0					
ANR	2506634	WhileStatement	while ( num_base_classes > 0 )		2506532	7					
ANR	2506635	Condition	num_base_classes > 0	176:8:5873:5892	2506532	0	True				
ANR	2506636	RelationalExpression	num_base_classes > 0		2506532	0		>			
ANR	2506637	Identifier	num_base_classes		2506532	0					
ANR	2506638	PrimaryExpression	0		2506532	1					
ANR	2506639	CompoundStatement		50:2:1163:1241	2506532	1					
ANR	2506640	IfStatement	if ( r_cons_is_breaked ( ) )		2506532	0					
ANR	2506641	Condition	r_cons_is_breaked ( )	177:6:5903:5922	2506532	0	True				
ANR	2506642	CallExpression	r_cons_is_breaked ( )		2506532	0					
ANR	2506643	Callee	r_cons_is_breaked		2506532	0					
ANR	2506644	Identifier	r_cons_is_breaked		2506532	0					
ANR	2506645	ArgumentList			2506532	1					
ANR	2506646	CompoundStatement		23:28:564:564	2506532	1					
ANR	2506647	BreakStatement	break ;	178:3:5930:5935	2506532	0	True				
ANR	2506648	IdentifierDeclStatement	ut64 bcdAddr ;	181:2:5944:5956	2506532	1	True				
ANR	2506649	IdentifierDecl	bcdAddr		2506532	0					
ANR	2506650	IdentifierDeclType	ut64		2506532	0					
ANR	2506651	Identifier	bcdAddr		2506532	1					
ANR	2506652	IfStatement	if ( context -> word_size <= 4 )		2506532	2					
ANR	2506653	Condition	context -> word_size <= 4	182:6:5964:5986	2506532	0	True				
ANR	2506654	RelationalExpression	context -> word_size <= 4		2506532	0		<=			
ANR	2506655	PtrMemberAccess	context -> word_size		2506532	0					
ANR	2506656	Identifier	context		2506532	0					
ANR	2506657	Identifier	word_size		2506532	1					
ANR	2506658	PrimaryExpression	4		2506532	1					
ANR	2506659	CompoundStatement		28:31:628:628	2506532	1					
ANR	2506660	IfStatement	"if ( ! context -> read_addr ( context -> anal , addr , & bcdAddr ) )"		2506532	0					
ANR	2506661	Condition	"! context -> read_addr ( context -> anal , addr , & bcdAddr )"	183:7:5998:6048	2506532	0	True				
ANR	2506662	UnaryOperationExpression	"! context -> read_addr ( context -> anal , addr , & bcdAddr )"		2506532	0					
ANR	2506663	UnaryOperator	!		2506532	0					
ANR	2506664	CallExpression	"context -> read_addr ( context -> anal , addr , & bcdAddr )"		2506532	1					
ANR	2506665	Callee	context -> read_addr		2506532	0					
ANR	2506666	PtrMemberAccess	context -> read_addr		2506532	0					
ANR	2506667	Identifier	context		2506532	0					
ANR	2506668	Identifier	read_addr		2506532	1					
ANR	2506669	ArgumentList	context -> anal		2506532	1					
ANR	2506670	Argument	context -> anal		2506532	0					
ANR	2506671	PtrMemberAccess	context -> anal		2506532	0					
ANR	2506672	Identifier	context		2506532	0					
ANR	2506673	Identifier	anal		2506532	1					
ANR	2506674	Argument	addr		2506532	1					
ANR	2506675	Identifier	addr		2506532	0					
ANR	2506676	Argument	& bcdAddr		2506532	2					
ANR	2506677	UnaryOperationExpression	& bcdAddr		2506532	0					
ANR	2506678	UnaryOperator	&		2506532	0					
ANR	2506679	Identifier	bcdAddr		2506532	1					
ANR	2506680	CompoundStatement		29:60:690:690	2506532	1					
ANR	2506681	BreakStatement	break ;	184:4:6057:6062	2506532	0	True				
ANR	2506682	IfStatement	if ( bcdAddr == UT32_MAX )		2506532	1					
ANR	2506683	Condition	bcdAddr == UT32_MAX	186:7:6076:6094	2506532	0	True				
ANR	2506684	EqualityExpression	bcdAddr == UT32_MAX		2506532	0		==			
ANR	2506685	Identifier	bcdAddr		2506532	0					
ANR	2506686	Identifier	UT32_MAX		2506532	1					
ANR	2506687	CompoundStatement		32:28:736:736	2506532	1					
ANR	2506688	BreakStatement	break ;	187:4:6103:6108	2506532	0	True				
ANR	2506689	ElseStatement	else		2506532	0					
ANR	2506690	CompoundStatement		43:3:1045:1075	2506532	0					
ANR	2506691	IdentifierDeclStatement	ut8 tmp [ 4 ] = { 0 } ;	191:3:6172:6188	2506532	0	True				
ANR	2506692	IdentifierDecl	tmp [ 4 ] = { 0 }		2506532	0					
ANR	2506693	IdentifierDeclType	ut8 [ 4 ]		2506532	0					
ANR	2506694	Identifier	tmp		2506532	1					
ANR	2506695	PrimaryExpression	4		2506532	2					
ANR	2506696	AssignmentExpression	tmp [ 4 ] = { 0 }		2506532	3		=			
ANR	2506697	Identifier	tmp		2506532	0					
ANR	2506698	InitializerList	0		2506532	1					
ANR	2506699	PrimaryExpression	0		2506532	0					
ANR	2506700	IfStatement	"if ( ! context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , tmp , 4 ) )"		2506532	1					
ANR	2506701	Condition	"! context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , tmp , 4 )"	192:7:6197:6260	2506532	0	True				
ANR	2506702	UnaryOperationExpression	"! context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , tmp , 4 )"		2506532	0					
ANR	2506703	UnaryOperator	!		2506532	0					
ANR	2506704	CallExpression	"context -> anal -> iob . read_at ( context -> anal -> iob . io , addr , tmp , 4 )"		2506532	1					
ANR	2506705	Callee	context -> anal -> iob . read_at		2506532	0					
ANR	2506706	MemberAccess	context -> anal -> iob . read_at		2506532	0					
ANR	2506707	PtrMemberAccess	context -> anal -> iob		2506532	0					
ANR	2506708	PtrMemberAccess	context -> anal		2506532	0					
ANR	2506709	Identifier	context		2506532	0					
ANR	2506710	Identifier	anal		2506532	1					
ANR	2506711	Identifier	iob		2506532	1					
ANR	2506712	Identifier	read_at		2506532	1					
ANR	2506713	ArgumentList	context -> anal -> iob . io		2506532	1					
ANR	2506714	Argument	context -> anal -> iob . io		2506532	0					
ANR	2506715	MemberAccess	context -> anal -> iob . io		2506532	0					
ANR	2506716	PtrMemberAccess	context -> anal -> iob		2506532	0					
ANR	2506717	PtrMemberAccess	context -> anal		2506532	0					
ANR	2506718	Identifier	context		2506532	0					
ANR	2506719	Identifier	anal		2506532	1					
ANR	2506720	Identifier	iob		2506532	1					
ANR	2506721	Identifier	io		2506532	1					
ANR	2506722	Argument	addr		2506532	1					
ANR	2506723	Identifier	addr		2506532	0					
ANR	2506724	Argument	tmp		2506532	2					
ANR	2506725	Identifier	tmp		2506532	0					
ANR	2506726	Argument	4		2506532	3					
ANR	2506727	PrimaryExpression	4		2506532	0					
ANR	2506728	CompoundStatement		38:73:902:902	2506532	1					
ANR	2506729	ExpressionStatement	r_list_free ( ret )	193:4:6269:6286	2506532	0	True				
ANR	2506730	CallExpression	r_list_free ( ret )		2506532	0					
ANR	2506731	Callee	r_list_free		2506532	0					
ANR	2506732	Identifier	r_list_free		2506532	0					
ANR	2506733	ArgumentList	ret		2506532	1					
ANR	2506734	Argument	ret		2506532	0					
ANR	2506735	Identifier	ret		2506532	0					
ANR	2506736	ReturnStatement	return NULL ;	194:4:6292:6303	2506532	1	True				
ANR	2506737	Identifier	NULL		2506532	0					
ANR	2506738	IdentifierDeclStatement	ut32 ( * read_32 ) ( const void * src ) = context -> anal -> big_endian ? r_read_be32 : r_read_le32 ;	196:3:6313:6401	2506532	2	True				
ANR	2506739	IdentifierDecl	( * read_32 ) ( const void * src ) = context -> anal -> big_endian ? r_read_be32 : r_read_le32		2506532	0					
ANR	2506740	IdentifierDeclType	ut32 ( * ) ( const void * src )		2506532	0					
ANR	2506741	Identifier	read_32		2506532	1					
ANR	2506742	Identifier	src		2506532	2					
ANR	2506743	AssignmentExpression	( * read_32 ) ( const void * src ) = context -> anal -> big_endian ? r_read_be32 : r_read_le32		2506532	3		=			
ANR	2506744	Identifier	src		2506532	0					
ANR	2506745	ConditionalExpression	context -> anal -> big_endian ? r_read_be32 : r_read_le32		2506532	1					
ANR	2506746	Condition	context -> anal -> big_endian		2506532	0					
ANR	2506747	PtrMemberAccess	context -> anal -> big_endian		2506532	0					
ANR	2506748	PtrMemberAccess	context -> anal		2506532	0					
ANR	2506749	Identifier	context		2506532	0					
ANR	2506750	Identifier	anal		2506532	1					
ANR	2506751	Identifier	big_endian		2506532	1					
ANR	2506752	Identifier	r_read_be32		2506532	1					
ANR	2506753	Identifier	r_read_le32		2506532	2					
ANR	2506754	IdentifierDeclStatement	ut32 bcdOffset = read_32 ( tmp ) ;	197:3:6406:6436	2506532	3	True				
ANR	2506755	IdentifierDecl	bcdOffset = read_32 ( tmp )		2506532	0					
ANR	2506756	IdentifierDeclType	ut32		2506532	0					
ANR	2506757	Identifier	bcdOffset		2506532	1					
ANR	2506758	AssignmentExpression	bcdOffset = read_32 ( tmp )		2506532	2		=			
ANR	2506759	Identifier	bcdOffset		2506532	0					
ANR	2506760	CallExpression	read_32 ( tmp )		2506532	1					
ANR	2506761	Callee	read_32		2506532	0					
ANR	2506762	Identifier	read_32		2506532	0					
ANR	2506763	ArgumentList	tmp		2506532	1					
ANR	2506764	Argument	tmp		2506532	0					
ANR	2506765	Identifier	tmp		2506532	0					
ANR	2506766	IfStatement	if ( bcdOffset == UT32_MAX )		2506532	4					
ANR	2506767	Condition	bcdOffset == UT32_MAX	198:7:6445:6465	2506532	0	True				
ANR	2506768	EqualityExpression	bcdOffset == UT32_MAX		2506532	0		==			
ANR	2506769	Identifier	bcdOffset		2506532	0					
ANR	2506770	Identifier	UT32_MAX		2506532	1					
ANR	2506771	CompoundStatement		44:30:1107:1107	2506532	1					
ANR	2506772	BreakStatement	break ;	199:4:6474:6479	2506532	0	True				
ANR	2506773	ExpressionStatement	bcdAddr = base + bcdOffset	201:3:6489:6515	2506532	5	True				
ANR	2506774	AssignmentExpression	bcdAddr = base + bcdOffset		2506532	0		=			
ANR	2506775	Identifier	bcdAddr		2506532	0					
ANR	2506776	AdditiveExpression	base + bcdOffset		2506532	1		+			
ANR	2506777	Identifier	base		2506532	0					
ANR	2506778	Identifier	bcdOffset		2506532	1					
ANR	2506779	IdentifierDeclStatement	rtti_base_class_descriptor * bcd = malloc ( sizeof ( rtti_base_class_descriptor ) ) ;	204:2:6524:6602	2506532	3	True				
ANR	2506780	IdentifierDecl	* bcd = malloc ( sizeof ( rtti_base_class_descriptor ) )		2506532	0					
ANR	2506781	IdentifierDeclType	rtti_base_class_descriptor *		2506532	0					
ANR	2506782	Identifier	bcd		2506532	1					
ANR	2506783	AssignmentExpression	* bcd = malloc ( sizeof ( rtti_base_class_descriptor ) )		2506532	2		=			
ANR	2506784	Identifier	bcd		2506532	0					
ANR	2506785	CallExpression	malloc ( sizeof ( rtti_base_class_descriptor ) )		2506532	1					
ANR	2506786	Callee	malloc		2506532	0					
ANR	2506787	Identifier	malloc		2506532	0					
ANR	2506788	ArgumentList	sizeof ( rtti_base_class_descriptor )		2506532	1					
ANR	2506789	Argument	sizeof ( rtti_base_class_descriptor )		2506532	0					
ANR	2506790	SizeofExpression	sizeof ( rtti_base_class_descriptor )		2506532	0					
ANR	2506791	Sizeof	sizeof		2506532	0					
ANR	2506792	SizeofOperand	rtti_base_class_descriptor		2506532	1					
ANR	2506793	IfStatement	if ( ! bcd )		2506532	4					
ANR	2506794	Condition	! bcd	205:6:6610:6613	2506532	0	True				
ANR	2506795	UnaryOperationExpression	! bcd		2506532	0					
ANR	2506796	UnaryOperator	!		2506532	0					
ANR	2506797	Identifier	bcd		2506532	1					
ANR	2506798	CompoundStatement		51:12:1255:1255	2506532	1					
ANR	2506799	BreakStatement	break ;	206:3:6621:6626	2506532	0	True				
ANR	2506800	IfStatement	"if ( ! rtti_msvc_read_base_class_descriptor ( context , bcdAddr , bcd ) )"		2506532	5					
ANR	2506801	Condition	"! rtti_msvc_read_base_class_descriptor ( context , bcdAddr , bcd )"	208:6:6638:6698	2506532	0	True				
ANR	2506802	UnaryOperationExpression	"! rtti_msvc_read_base_class_descriptor ( context , bcdAddr , bcd )"		2506532	0					
ANR	2506803	UnaryOperator	!		2506532	0					
ANR	2506804	CallExpression	"rtti_msvc_read_base_class_descriptor ( context , bcdAddr , bcd )"		2506532	1					
ANR	2506805	Callee	rtti_msvc_read_base_class_descriptor		2506532	0					
ANR	2506806	Identifier	rtti_msvc_read_base_class_descriptor		2506532	0					
ANR	2506807	ArgumentList	context		2506532	1					
ANR	2506808	Argument	context		2506532	0					
ANR	2506809	Identifier	context		2506532	0					
ANR	2506810	Argument	bcdAddr		2506532	1					
ANR	2506811	Identifier	bcdAddr		2506532	0					
ANR	2506812	Argument	bcd		2506532	2					
ANR	2506813	Identifier	bcd		2506532	0					
ANR	2506814	CompoundStatement		54:69:1340:1340	2506532	1					
ANR	2506815	ExpressionStatement	free ( bcd )	209:3:6706:6716	2506532	0	True				
ANR	2506816	CallExpression	free ( bcd )		2506532	0					
ANR	2506817	Callee	free		2506532	0					
ANR	2506818	Identifier	free		2506532	0					
ANR	2506819	ArgumentList	bcd		2506532	1					
ANR	2506820	Argument	bcd		2506532	0					
ANR	2506821	Identifier	bcd		2506532	0					
ANR	2506822	BreakStatement	break ;	210:3:6721:6726	2506532	1	True				
ANR	2506823	ExpressionStatement	"r_list_append ( ret , bcd )"	212:2:6734:6758	2506532	6	True				
ANR	2506824	CallExpression	"r_list_append ( ret , bcd )"		2506532	0					
ANR	2506825	Callee	r_list_append		2506532	0					
ANR	2506826	Identifier	r_list_append		2506532	0					
ANR	2506827	ArgumentList	ret		2506532	1					
ANR	2506828	Argument	ret		2506532	0					
ANR	2506829	Identifier	ret		2506532	0					
ANR	2506830	Argument	bcd		2506532	1					
ANR	2506831	Identifier	bcd		2506532	0					
ANR	2506832	ExpressionStatement	addr += stride	213:2:6762:6776	2506532	7	True				
ANR	2506833	AssignmentExpression	addr += stride		2506532	0		+=			
ANR	2506834	Identifier	addr		2506532	0					
ANR	2506835	Identifier	stride		2506532	1					
ANR	2506836	ExpressionStatement	num_base_classes --	214:2:6780:6798	2506532	8	True				
ANR	2506837	PostIncDecOperationExpression	num_base_classes --		2506532	0					
ANR	2506838	Identifier	num_base_classes		2506532	0					
ANR	2506839	IncDec	--		2506532	1					
ANR	2506840	ExpressionStatement	r_cons_break_pop ( )	216:1:6804:6823	2506532	8	True				
ANR	2506841	CallExpression	r_cons_break_pop ( )		2506532	0					
ANR	2506842	Callee	r_cons_break_pop		2506532	0					
ANR	2506843	Identifier	r_cons_break_pop		2506532	0					
ANR	2506844	ArgumentList			2506532	1					
ANR	2506845	IfStatement	if ( num_base_classes > 0 )		2506532	9					
ANR	2506846	Condition	num_base_classes > 0	218:5:6831:6850	2506532	0	True				
ANR	2506847	RelationalExpression	num_base_classes > 0		2506532	0		>			
ANR	2506848	Identifier	num_base_classes		2506532	0					
ANR	2506849	PrimaryExpression	0		2506532	1					
ANR	2506850	CompoundStatement		64:27:1492:1492	2506532	1					
ANR	2506851	ExpressionStatement	r_list_free ( ret )	220:2:6899:6916	2506532	0	True				
ANR	2506852	CallExpression	r_list_free ( ret )		2506532	0					
ANR	2506853	Callee	r_list_free		2506532	0					
ANR	2506854	Identifier	r_list_free		2506532	0					
ANR	2506855	ArgumentList	ret		2506532	1					
ANR	2506856	Argument	ret		2506532	0					
ANR	2506857	Identifier	ret		2506532	0					
ANR	2506858	ReturnStatement	return NULL ;	221:2:6920:6931	2506532	1	True				
ANR	2506859	Identifier	NULL		2506532	0					
ANR	2506860	ReturnStatement	return ret ;	224:1:6938:6948	2506532	10	True				
ANR	2506861	Identifier	ret		2506532	0					
ANR	2506862	ReturnType	static RList *		2506532	1					
ANR	2506863	Identifier	rtti_msvc_read_base_class_array		2506532	2					
ANR	2506864	ParameterList	"RVTableContext * context , ut32 num_base_classes , ut64 base , ut32 offset"		2506532	3					
ANR	2506865	Parameter	RVTableContext * context	155:46:5288:5310	2506532	0	True				
ANR	2506866	ParameterType	RVTableContext *		2506532	0					
ANR	2506867	Identifier	context		2506532	1					
ANR	2506868	Parameter	ut32 num_base_classes	155:71:5313:5333	2506532	1	True				
ANR	2506869	ParameterType	ut32		2506532	0					
ANR	2506870	Identifier	num_base_classes		2506532	1					
ANR	2506871	Parameter	ut64 base	155:94:5336:5344	2506532	2	True				
ANR	2506872	ParameterType	ut64		2506532	0					
ANR	2506873	Identifier	base		2506532	1					
ANR	2506874	Parameter	ut32 offset	155:105:5347:5357	2506532	3	True				
ANR	2506875	ParameterType	ut32		2506532	0					
ANR	2506876	Identifier	offset		2506532	1					
ANR	2506877	CFGEntryNode	ENTRY		2506532		True				
ANR	2506878	CFGExitNode	EXIT		2506532		True				
ANR	2506879	Symbol	UT32_MAX		2506532						
ANR	2506880	Symbol	bcd		2506532						
ANR	2506881	Symbol	context -> word_size		2506532						
ANR	2506882	Symbol	context -> anal -> iob . read_at		2506532						
ANR	2506883	Symbol	* * context		2506532						
ANR	2506884	Symbol	num_base_classes		2506532						
ANR	2506885	Symbol	stride		2506532						
ANR	2506886	Symbol	read_32		2506532						
ANR	2506887	Symbol	rtti_msvc_read_base_class_descriptor		2506532						
ANR	2506888	Symbol	r_cons_is_breaked		2506532						
ANR	2506889	Symbol	context -> anal -> verbose		2506532						
ANR	2506890	Symbol	context -> read_addr		2506532						
ANR	2506891	Symbol	tmp		2506532						
ANR	2506892	Symbol	context -> anal -> iob . io		2506532						
ANR	2506893	Symbol	context		2506532						
ANR	2506894	Symbol	& bcdAddr		2506532						
ANR	2506895	Symbol	UT64_MAX		2506532						
ANR	2506896	Symbol	free		2506532						
ANR	2506897	Symbol	addr		2506532						
ANR	2506898	Symbol	ret		2506532						
ANR	2506899	Symbol	context -> anal -> iob		2506532						
ANR	2506900	Symbol	malloc		2506532						
ANR	2506901	Symbol	NULL		2506532						
ANR	2506902	Symbol	context -> anal		2506532						
ANR	2506903	Symbol	r_read_le32		2506532						
ANR	2506904	Symbol	offset		2506532						
ANR	2506905	Symbol	bcdOffset		2506532						
ANR	2506906	Symbol	r_list_newf		2506532						
ANR	2506907	Symbol	src		2506532						
ANR	2506908	Symbol	bcdAddr		2506532						
ANR	2506909	Symbol	context -> anal -> big_endian		2506532						
ANR	2506910	Symbol	R_MIN		2506532						
ANR	2506911	Symbol	r_read_be32		2506532						
ANR	2506912	Symbol	* context		2506532						
ANR	2506913	Symbol	* context -> anal		2506532						
ANR	2506914	Symbol	base		2506532						
ANR	2506915	Symbol	BASE_CLASSES_MAX		2506532						
ANR	2506916	Function	rtti_msvc_read_type_descriptor	227:0:6953:8147							
ANR	2506917	FunctionDef	"rtti_msvc_read_type_descriptor (RVTableContext * context , ut64 addr , rtti_type_descriptor * td)"		2506916	0					
ANR	2506918	CompoundStatement		227:105:7058:8147	2506916	0					
ANR	2506919	IfStatement	if ( addr == UT64_MAX )		2506916	0					
ANR	2506920	Condition	addr == UT64_MAX	228:5:7065:7080	2506916	0	True				
ANR	2506921	EqualityExpression	addr == UT64_MAX		2506916	0		==			
ANR	2506922	Identifier	addr		2506916	0					
ANR	2506923	Identifier	UT64_MAX		2506916	1					
ANR	2506924	CompoundStatement		2:23:24:24	2506916	1					
ANR	2506925	ReturnStatement	return false ;	229:2:7087:7099	2506916	0	True				
ANR	2506926	Identifier	false		2506916	0					
ANR	2506927	IfStatement	"if ( ! context -> read_addr ( context -> anal , addr , & td -> vtable_addr ) )"		2506916	1					
ANR	2506928	Condition	"! context -> read_addr ( context -> anal , addr , & td -> vtable_addr )"	232:5:7110:7168	2506916	0	True				
ANR	2506929	UnaryOperationExpression	"! context -> read_addr ( context -> anal , addr , & td -> vtable_addr )"		2506916	0					
ANR	2506930	UnaryOperator	!		2506916	0					
ANR	2506931	CallExpression	"context -> read_addr ( context -> anal , addr , & td -> vtable_addr )"		2506916	1					
ANR	2506932	Callee	context -> read_addr		2506916	0					
ANR	2506933	PtrMemberAccess	context -> read_addr		2506916	0					
ANR	2506934	Identifier	context		2506916	0					
ANR	2506935	Identifier	read_addr		2506916	1					
ANR	2506936	ArgumentList	context -> anal		2506916	1					
ANR	2506937	Argument	context -> anal		2506916	0					
ANR	2506938	PtrMemberAccess	context -> anal		2506916	0					
ANR	2506939	Identifier	context		2506916	0					
ANR	2506940	Identifier	anal		2506916	1					
ANR	2506941	Argument	addr		2506916	1					
ANR	2506942	Identifier	addr		2506916	0					
ANR	2506943	Argument	& td -> vtable_addr		2506916	2					
ANR	2506944	UnaryOperationExpression	& td -> vtable_addr		2506916	0					
ANR	2506945	UnaryOperator	&		2506916	0					
ANR	2506946	PtrMemberAccess	td -> vtable_addr		2506916	1					
ANR	2506947	Identifier	td		2506916	0					
ANR	2506948	Identifier	vtable_addr		2506916	1					
ANR	2506949	CompoundStatement		6:66:112:112	2506916	1					
ANR	2506950	ReturnStatement	return false ;	233:2:7175:7187	2506916	0	True				
ANR	2506951	Identifier	false		2506916	0					
ANR	2506952	IfStatement	"if ( ! context -> read_addr ( context -> anal , addr + context -> word_size , & td -> spare ) )"		2506916	2					
ANR	2506953	Condition	"! context -> read_addr ( context -> anal , addr + context -> word_size , & td -> spare )"	235:5:7197:7270	2506916	0	True				
ANR	2506954	UnaryOperationExpression	"! context -> read_addr ( context -> anal , addr + context -> word_size , & td -> spare )"		2506916	0					
ANR	2506955	UnaryOperator	!		2506916	0					
ANR	2506956	CallExpression	"context -> read_addr ( context -> anal , addr + context -> word_size , & td -> spare )"		2506916	1					
ANR	2506957	Callee	context -> read_addr		2506916	0					
ANR	2506958	PtrMemberAccess	context -> read_addr		2506916	0					
ANR	2506959	Identifier	context		2506916	0					
ANR	2506960	Identifier	read_addr		2506916	1					
ANR	2506961	ArgumentList	context -> anal		2506916	1					
ANR	2506962	Argument	context -> anal		2506916	0					
ANR	2506963	PtrMemberAccess	context -> anal		2506916	0					
ANR	2506964	Identifier	context		2506916	0					
ANR	2506965	Identifier	anal		2506916	1					
ANR	2506966	Argument	addr + context -> word_size		2506916	1					
ANR	2506967	AdditiveExpression	addr + context -> word_size		2506916	0		+			
ANR	2506968	Identifier	addr		2506916	0					
ANR	2506969	PtrMemberAccess	context -> word_size		2506916	1					
ANR	2506970	Identifier	context		2506916	0					
ANR	2506971	Identifier	word_size		2506916	1					
ANR	2506972	Argument	& td -> spare		2506916	2					
ANR	2506973	UnaryOperationExpression	& td -> spare		2506916	0					
ANR	2506974	UnaryOperator	&		2506916	0					
ANR	2506975	PtrMemberAccess	td -> spare		2506916	1					
ANR	2506976	Identifier	td		2506916	0					
ANR	2506977	Identifier	spare		2506916	1					
ANR	2506978	CompoundStatement		9:81:214:214	2506916	1					
ANR	2506979	ReturnStatement	return false ;	236:2:7277:7289	2506916	0	True				
ANR	2506980	Identifier	false		2506916	0					
ANR	2506981	IdentifierDeclStatement	ut64 nameAddr = addr + 2 * context -> word_size ;	239:1:7296:7341	2506916	3	True				
ANR	2506982	IdentifierDecl	nameAddr = addr + 2 * context -> word_size		2506916	0					
ANR	2506983	IdentifierDeclType	ut64		2506916	0					
ANR	2506984	Identifier	nameAddr		2506916	1					
ANR	2506985	AssignmentExpression	nameAddr = addr + 2 * context -> word_size		2506916	2		=			
ANR	2506986	Identifier	nameAddr		2506916	0					
ANR	2506987	AdditiveExpression	addr + 2 * context -> word_size		2506916	1		+			
ANR	2506988	Identifier	addr		2506916	0					
ANR	2506989	MultiplicativeExpression	2 * context -> word_size		2506916	1		*			
ANR	2506990	PrimaryExpression	2		2506916	0					
ANR	2506991	PtrMemberAccess	context -> word_size		2506916	1					
ANR	2506992	Identifier	context		2506916	0					
ANR	2506993	Identifier	word_size		2506916	1					
ANR	2506994	IdentifierDeclStatement	ut8 buf [ NAME_BUF_SIZE ] ;	240:1:7344:7366	2506916	4	True				
ANR	2506995	IdentifierDecl	buf [ NAME_BUF_SIZE ]		2506916	0					
ANR	2506996	IdentifierDeclType	ut8 [ NAME_BUF_SIZE ]		2506916	0					
ANR	2506997	Identifier	buf		2506916	1					
ANR	2506998	Identifier	NAME_BUF_SIZE		2506916	2					
ANR	2506999	IdentifierDeclStatement	ut64 bufOffset = 0 ;	241:1:7369:7387	2506916	5	True				
ANR	2507000	IdentifierDecl	bufOffset = 0		2506916	0					
ANR	2507001	IdentifierDeclType	ut64		2506916	0					
ANR	2507002	Identifier	bufOffset		2506916	1					
ANR	2507003	AssignmentExpression	bufOffset = 0		2506916	2		=			
ANR	2507004	Identifier	bufOffset		2506916	0					
ANR	2507005	PrimaryExpression	0		2506916	1					
ANR	2507006	IdentifierDeclStatement	size_t nameLen = 0 ;	242:1:7390:7408	2506916	6	True				
ANR	2507007	IdentifierDecl	nameLen = 0		2506916	0					
ANR	2507008	IdentifierDeclType	size_t		2506916	0					
ANR	2507009	Identifier	nameLen		2506916	1					
ANR	2507010	AssignmentExpression	nameLen = 0		2506916	2		=			
ANR	2507011	Identifier	nameLen		2506916	0					
ANR	2507012	PrimaryExpression	0		2506916	1					
ANR	2507013	IdentifierDeclStatement	bool endFound = false ;	243:1:7411:7432	2506916	7	True				
ANR	2507014	IdentifierDecl	endFound = false		2506916	0					
ANR	2507015	IdentifierDeclType	bool		2506916	0					
ANR	2507016	Identifier	endFound		2506916	1					
ANR	2507017	AssignmentExpression	endFound = false		2506916	2		=			
ANR	2507018	Identifier	false		2506916	0					
ANR	2507019	Identifier	false		2506916	1					
ANR	2507020	IdentifierDeclStatement	bool endInvalid = false ;	244:1:7435:7458	2506916	8	True				
ANR	2507021	IdentifierDecl	endInvalid = false		2506916	0					
ANR	2507022	IdentifierDeclType	bool		2506916	0					
ANR	2507023	Identifier	endInvalid		2506916	1					
ANR	2507024	AssignmentExpression	endInvalid = false		2506916	2		=			
ANR	2507025	Identifier	false		2506916	0					
ANR	2507026	Identifier	false		2506916	1					
ANR	2507027	WhileStatement	while ( 1 )		2506916	9					
ANR	2507028	Condition	1	245:8:7468:7468	2506916	0	True				
ANR	2507029	PrimaryExpression	1		2506916	0					
ANR	2507030	CompoundStatement		21:2:511:516	2506916	1					
ANR	2507031	ExpressionStatement	"context -> anal -> iob . read_at ( context -> anal -> iob . io , nameAddr + bufOffset , buf , sizeof ( buf ) )"	246:2:7475:7566	2506916	0	True				
ANR	2507032	CallExpression	"context -> anal -> iob . read_at ( context -> anal -> iob . io , nameAddr + bufOffset , buf , sizeof ( buf ) )"		2506916	0					
ANR	2507033	Callee	context -> anal -> iob . read_at		2506916	0					
ANR	2507034	MemberAccess	context -> anal -> iob . read_at		2506916	0					
ANR	2507035	PtrMemberAccess	context -> anal -> iob		2506916	0					
ANR	2507036	PtrMemberAccess	context -> anal		2506916	0					
ANR	2507037	Identifier	context		2506916	0					
ANR	2507038	Identifier	anal		2506916	1					
ANR	2507039	Identifier	iob		2506916	1					
ANR	2507040	Identifier	read_at		2506916	1					
ANR	2507041	ArgumentList	context -> anal -> iob . io		2506916	1					
ANR	2507042	Argument	context -> anal -> iob . io		2506916	0					
ANR	2507043	MemberAccess	context -> anal -> iob . io		2506916	0					
ANR	2507044	PtrMemberAccess	context -> anal -> iob		2506916	0					
ANR	2507045	PtrMemberAccess	context -> anal		2506916	0					
ANR	2507046	Identifier	context		2506916	0					
ANR	2507047	Identifier	anal		2506916	1					
ANR	2507048	Identifier	iob		2506916	1					
ANR	2507049	Identifier	io		2506916	1					
ANR	2507050	Argument	nameAddr + bufOffset		2506916	1					
ANR	2507051	AdditiveExpression	nameAddr + bufOffset		2506916	0		+			
ANR	2507052	Identifier	nameAddr		2506916	0					
ANR	2507053	Identifier	bufOffset		2506916	1					
ANR	2507054	Argument	buf		2506916	2					
ANR	2507055	Identifier	buf		2506916	0					
ANR	2507056	Argument	sizeof ( buf )		2506916	3					
ANR	2507057	SizeofExpression	sizeof ( buf )		2506916	0					
ANR	2507058	Sizeof	sizeof		2506916	0					
ANR	2507059	SizeofOperand	buf		2506916	1					
ANR	2507060	IdentifierDeclStatement	int i ;	247:2:7570:7575	2506916	1	True				
ANR	2507061	IdentifierDecl	i		2506916	0					
ANR	2507062	IdentifierDeclType	int		2506916	0					
ANR	2507063	Identifier	i		2506916	1					
ANR	2507064	ForStatement	for ( i = 0 ; i < sizeof ( buf ) ; i ++ )		2506916	2					
ANR	2507065	ForInit	i = 0 ;	248:7:7584:7587	2506916	0	True				
ANR	2507066	AssignmentExpression	i = 0		2506916	0		=			
ANR	2507067	Identifier	i		2506916	0					
ANR	2507068	PrimaryExpression	0		2506916	1					
ANR	2507069	Condition	i < sizeof ( buf )	248:12:7589:7602	2506916	1	True				
ANR	2507070	RelationalExpression	i < sizeof ( buf )		2506916	0		<			
ANR	2507071	Identifier	i		2506916	0					
ANR	2507072	SizeofExpression	sizeof ( buf )		2506916	1					
ANR	2507073	Sizeof	sizeof		2506916	0					
ANR	2507074	SizeofOperand	buf		2506916	1					
ANR	2507075	PostIncDecOperationExpression	i ++	248:28:7605:7607	2506916	2	True				
ANR	2507076	Identifier	i		2506916	0					
ANR	2507077	IncDec	++		2506916	1					
ANR	2507078	CompoundStatement		22:33:551:551	2506916	3					
ANR	2507079	IfStatement	if ( buf [ i ] == '\\0' )		2506916	0					
ANR	2507080	Condition	buf [ i ] == '\\0'	249:7:7619:7632	2506916	0	True				
ANR	2507081	EqualityExpression	buf [ i ] == '\\0'		2506916	0		==			
ANR	2507082	ArrayIndexing	buf [ i ]		2506916	0					
ANR	2507083	Identifier	buf		2506916	0					
ANR	2507084	Identifier	i		2506916	1					
ANR	2507085	PrimaryExpression	'\\0'		2506916	1					
ANR	2507086	CompoundStatement		23:23:576:576	2506916	1					
ANR	2507087	ExpressionStatement	endFound = true	250:4:7641:7656	2506916	0	True				
ANR	2507088	AssignmentExpression	endFound = true		2506916	0		=			
ANR	2507089	Identifier	endFound		2506916	0					
ANR	2507090	Identifier	true		2506916	1					
ANR	2507091	BreakStatement	break ;	251:4:7662:7667	2506916	1	True				
ANR	2507092	IfStatement	if ( buf [ i ] == 0xff )		2506916	1					
ANR	2507093	Condition	buf [ i ] == 0xff	253:7:7681:7694	2506916	0	True				
ANR	2507094	EqualityExpression	buf [ i ] == 0xff		2506916	0		==			
ANR	2507095	ArrayIndexing	buf [ i ]		2506916	0					
ANR	2507096	Identifier	buf		2506916	0					
ANR	2507097	Identifier	i		2506916	1					
ANR	2507098	PrimaryExpression	0xff		2506916	1					
ANR	2507099	CompoundStatement		27:23:638:638	2506916	1					
ANR	2507100	ExpressionStatement	endInvalid = true	254:4:7703:7720	2506916	0	True				
ANR	2507101	AssignmentExpression	endInvalid = true		2506916	0		=			
ANR	2507102	Identifier	endInvalid		2506916	0					
ANR	2507103	Identifier	true		2506916	1					
ANR	2507104	BreakStatement	break ;	255:4:7726:7731	2506916	1	True				
ANR	2507105	ExpressionStatement	nameLen ++	257:3:7741:7750	2506916	2	True				
ANR	2507106	PostIncDecOperationExpression	nameLen ++		2506916	0					
ANR	2507107	Identifier	nameLen		2506916	0					
ANR	2507108	IncDec	++		2506916	1					
ANR	2507109	IfStatement	if ( endFound || endInvalid )		2506916	3					
ANR	2507110	Condition	endFound || endInvalid	259:6:7762:7783	2506916	0	True				
ANR	2507111	OrExpression	endFound || endInvalid		2506916	0		||			
ANR	2507112	Identifier	endFound		2506916	0					
ANR	2507113	Identifier	endInvalid		2506916	1					
ANR	2507114	CompoundStatement		33:30:727:727	2506916	1					
ANR	2507115	BreakStatement	break ;	260:3:7791:7796	2506916	0	True				
ANR	2507116	ExpressionStatement	bufOffset += sizeof ( buf )	262:2:7804:7829	2506916	4	True				
ANR	2507117	AssignmentExpression	bufOffset += sizeof ( buf )		2506916	0		+=			
ANR	2507118	Identifier	bufOffset		2506916	0					
ANR	2507119	SizeofExpression	sizeof ( buf )		2506916	1					
ANR	2507120	Sizeof	sizeof		2506916	0					
ANR	2507121	SizeofOperand	buf		2506916	1					
ANR	2507122	IfStatement	if ( endInvalid )		2506916	10					
ANR	2507123	Condition	endInvalid	265:5:7840:7849	2506916	0	True				
ANR	2507124	Identifier	endInvalid		2506916	0					
ANR	2507125	CompoundStatement		39:17:793:793	2506916	1					
ANR	2507126	ReturnStatement	return false ;	266:2:7856:7868	2506916	0	True				
ANR	2507127	Identifier	false		2506916	0					
ANR	2507128	ExpressionStatement	td -> name = malloc ( nameLen + 1 )	269:1:7875:7906	2506916	11	True				
ANR	2507129	AssignmentExpression	td -> name = malloc ( nameLen + 1 )		2506916	0		=			
ANR	2507130	PtrMemberAccess	td -> name		2506916	0					
ANR	2507131	Identifier	td		2506916	0					
ANR	2507132	Identifier	name		2506916	1					
ANR	2507133	CallExpression	malloc ( nameLen + 1 )		2506916	1					
ANR	2507134	Callee	malloc		2506916	0					
ANR	2507135	Identifier	malloc		2506916	0					
ANR	2507136	ArgumentList	nameLen + 1		2506916	1					
ANR	2507137	Argument	nameLen + 1		2506916	0					
ANR	2507138	AdditiveExpression	nameLen + 1		2506916	0		+			
ANR	2507139	Identifier	nameLen		2506916	0					
ANR	2507140	PrimaryExpression	1		2506916	1					
ANR	2507141	IfStatement	if ( ! td -> name )		2506916	12					
ANR	2507142	Condition	! td -> name	270:5:7913:7921	2506916	0	True				
ANR	2507143	UnaryOperationExpression	! td -> name		2506916	0					
ANR	2507144	UnaryOperator	!		2506916	0					
ANR	2507145	PtrMemberAccess	td -> name		2506916	1					
ANR	2507146	Identifier	td		2506916	0					
ANR	2507147	Identifier	name		2506916	1					
ANR	2507148	CompoundStatement		44:16:865:865	2506916	1					
ANR	2507149	ReturnStatement	return false ;	271:2:7928:7940	2506916	0	True				
ANR	2507150	Identifier	false		2506916	0					
ANR	2507151	IfStatement	if ( bufOffset == 0 )		2506916	13					
ANR	2507152	Condition	bufOffset == 0	274:5:7951:7964	2506916	0	True				
ANR	2507153	EqualityExpression	bufOffset == 0		2506916	0		==			
ANR	2507154	Identifier	bufOffset		2506916	0					
ANR	2507155	PrimaryExpression	0		2506916	1					
ANR	2507156	CompoundStatement		48:21:908:908	2506916	1					
ANR	2507157	ExpressionStatement	"memcpy ( td -> name , buf , nameLen + 1 )"	275:2:7971:8006	2506916	0	True				
ANR	2507158	CallExpression	"memcpy ( td -> name , buf , nameLen + 1 )"		2506916	0					
ANR	2507159	Callee	memcpy		2506916	0					
ANR	2507160	Identifier	memcpy		2506916	0					
ANR	2507161	ArgumentList	td -> name		2506916	1					
ANR	2507162	Argument	td -> name		2506916	0					
ANR	2507163	PtrMemberAccess	td -> name		2506916	0					
ANR	2507164	Identifier	td		2506916	0					
ANR	2507165	Identifier	name		2506916	1					
ANR	2507166	Argument	buf		2506916	1					
ANR	2507167	Identifier	buf		2506916	0					
ANR	2507168	Argument	nameLen + 1		2506916	2					
ANR	2507169	AdditiveExpression	nameLen + 1		2506916	0		+			
ANR	2507170	Identifier	nameLen		2506916	0					
ANR	2507171	PrimaryExpression	1		2506916	1					
ANR	2507172	ElseStatement	else		2506916	0					
ANR	2507173	CompoundStatement		50:8:957:957	2506916	0					
ANR	2507174	ExpressionStatement	"context -> anal -> iob . read_at ( context -> anal -> iob . io , nameAddr , ( ut8 * ) td -> name , ( int ) ( nameLen + 1 ) )"	277:2:8020:8127	2506916	0	True				
ANR	2507175	CallExpression	"context -> anal -> iob . read_at ( context -> anal -> iob . io , nameAddr , ( ut8 * ) td -> name , ( int ) ( nameLen + 1 ) )"		2506916	0					
ANR	2507176	Callee	context -> anal -> iob . read_at		2506916	0					
ANR	2507177	MemberAccess	context -> anal -> iob . read_at		2506916	0					
ANR	2507178	PtrMemberAccess	context -> anal -> iob		2506916	0					
ANR	2507179	PtrMemberAccess	context -> anal		2506916	0					
ANR	2507180	Identifier	context		2506916	0					
ANR	2507181	Identifier	anal		2506916	1					
ANR	2507182	Identifier	iob		2506916	1					
ANR	2507183	Identifier	read_at		2506916	1					
ANR	2507184	ArgumentList	context -> anal -> iob . io		2506916	1					
ANR	2507185	Argument	context -> anal -> iob . io		2506916	0					
ANR	2507186	MemberAccess	context -> anal -> iob . io		2506916	0					
ANR	2507187	PtrMemberAccess	context -> anal -> iob		2506916	0					
ANR	2507188	PtrMemberAccess	context -> anal		2506916	0					
ANR	2507189	Identifier	context		2506916	0					
ANR	2507190	Identifier	anal		2506916	1					
ANR	2507191	Identifier	iob		2506916	1					
ANR	2507192	Identifier	io		2506916	1					
ANR	2507193	Argument	nameAddr		2506916	1					
ANR	2507194	Identifier	nameAddr		2506916	0					
ANR	2507195	Argument	( ut8 * ) td -> name		2506916	2					
ANR	2507196	CastExpression	( ut8 * ) td -> name		2506916	0					
ANR	2507197	CastTarget	ut8 *		2506916	0					
ANR	2507198	PtrMemberAccess	td -> name		2506916	1					
ANR	2507199	Identifier	td		2506916	0					
ANR	2507200	Identifier	name		2506916	1					
ANR	2507201	Argument	( int ) ( nameLen + 1 )		2506916	3					
ANR	2507202	CastExpression	( int ) ( nameLen + 1 )		2506916	0					
ANR	2507203	CastTarget	int		2506916	0					
ANR	2507204	AdditiveExpression	nameLen + 1		2506916	1		+			
ANR	2507205	Identifier	nameLen		2506916	0					
ANR	2507206	PrimaryExpression	1		2506916	1					
ANR	2507207	ReturnStatement	return true ;	281:1:8134:8145	2506916	14	True				
ANR	2507208	Identifier	true		2506916	0					
ANR	2507209	ReturnType	static bool		2506916	1					
ANR	2507210	Identifier	rtti_msvc_read_type_descriptor		2506916	2					
ANR	2507211	ParameterList	"RVTableContext * context , ut64 addr , rtti_type_descriptor * td"		2506916	3					
ANR	2507212	Parameter	RVTableContext * context	227:43:6996:7018	2506916	0	True				
ANR	2507213	ParameterType	RVTableContext *		2506916	0					
ANR	2507214	Identifier	context		2506916	1					
ANR	2507215	Parameter	ut64 addr	227:68:7021:7029	2506916	1	True				
ANR	2507216	ParameterType	ut64		2506916	0					
ANR	2507217	Identifier	addr		2506916	1					
ANR	2507218	Parameter	rtti_type_descriptor * td	227:79:7032:7055	2506916	2	True				
ANR	2507219	ParameterType	rtti_type_descriptor *		2506916	0					
ANR	2507220	Identifier	td		2506916	1					
ANR	2507221	CFGEntryNode	ENTRY		2506916		True				
ANR	2507222	CFGExitNode	EXIT		2506916		True				
ANR	2507223	Symbol	endInvalid		2506916						
ANR	2507224	Symbol	context -> word_size		2506916						
ANR	2507225	Symbol	* * context		2506916						
ANR	2507226	Symbol	td -> name		2506916						
ANR	2507227	Symbol	endFound		2506916						
ANR	2507228	Symbol	context -> read_addr		2506916						
ANR	2507229	Symbol	bufOffset		2506916						
ANR	2507230	Symbol	context -> anal -> iob . io		2506916						
ANR	2507231	Symbol	context		2506916						
ANR	2507232	Symbol	addr		2506916						
ANR	2507233	Symbol	UT64_MAX		2506916						
ANR	2507234	Symbol	& td -> spare		2506916						
ANR	2507235	Symbol	context -> anal -> iob		2506916						
ANR	2507236	Symbol	malloc		2506916						
ANR	2507237	Symbol	* buf		2506916						
ANR	2507238	Symbol	context -> anal		2506916						
ANR	2507239	Symbol	false		2506916						
ANR	2507240	Symbol	nameLen		2506916						
ANR	2507241	Symbol	i		2506916						
ANR	2507242	Symbol	* context		2506916						
ANR	2507243	Symbol	* context -> anal		2506916						
ANR	2507244	Symbol	td		2506916						
ANR	2507245	Symbol	nameAddr		2506916						
ANR	2507246	Symbol	buf		2506916						
ANR	2507247	Symbol	* i		2506916						
ANR	2507248	Symbol	* td		2506916						
ANR	2507249	Symbol	& td -> vtable_addr		2506916						
ANR	2507250	Symbol	true		2506916						
ANR	2507251	Function	rtti_msvc_print_complete_object_locator	284:0:8150:8822							
ANR	2507252	FunctionDef	"rtti_msvc_print_complete_object_locator (rtti_complete_object_locator * col , ut64 addr , const char * prefix)"		2507251	0					
ANR	2507253	CompoundStatement		284:118:8268:8822	2507251	0					
ANR	2507254	Statement	r_cons_printf	285:1:8271:8283	2507251	0	True				
ANR	2507255	Statement	(	285:15:8285:8285	2507251	1	True				
ANR	2507256	Statement	"""%sComplete Object Locator at 0x%08"""	285:16:8286:8321	2507251	2	True				
ANR	2507257	Statement	PFMT64x	285:52:8322:8328	2507251	3	True				
ANR	2507258	Statement	""":\\n"""	285:59:8329:8333	2507251	4	True				
ANR	2507259	Statement	"""%s\\tsignature: %#x\\n"""	286:7:8342:8363	2507251	5	True				
ANR	2507260	Statement	"""%s\\tvftableOffset: %#x\\n"""	287:7:8372:8397	2507251	6	True				
ANR	2507261	Statement	"""%s\\tcdOffset: %#x\\n"""	288:7:8406:8426	2507251	7	True				
ANR	2507262	Statement	"""%s\\ttypeDescriptorAddr: 0x%08"""	289:7:8435:8465	2507251	8	True				
ANR	2507263	Statement	PFMT32x	289:38:8466:8472	2507251	9	True				
ANR	2507264	Statement	"""\\n"""	289:45:8473:8476	2507251	10	True				
ANR	2507265	Statement	"""%s\\tclassDescriptorAddr: 0x%08"""	290:7:8485:8516	2507251	11	True				
ANR	2507266	Statement	PFMT32x	290:39:8517:8523	2507251	12	True				
ANR	2507267	Statement	"""\\n"""	290:46:8524:8527	2507251	13	True				
ANR	2507268	Statement	","	290:50:8528:8528	2507251	14	True				
ANR	2507269	Statement	prefix	291:7:8537:8542	2507251	15	True				
ANR	2507270	Statement	","	291:13:8543:8543	2507251	16	True				
ANR	2507271	Statement	addr	291:15:8545:8548	2507251	17	True				
ANR	2507272	Statement	","	291:19:8549:8549	2507251	18	True				
ANR	2507273	Statement	prefix	292:7:8558:8563	2507251	19	True				
ANR	2507274	Statement	","	292:13:8564:8564	2507251	20	True				
ANR	2507275	Statement	col	292:15:8566:8568	2507251	21	True				
ANR	2507276	Statement	->	292:18:8569:8570	2507251	22	True				
ANR	2507277	Statement	signature	292:20:8571:8579	2507251	23	True				
ANR	2507278	Statement	","	292:29:8580:8580	2507251	24	True				
ANR	2507279	Statement	prefix	293:7:8589:8594	2507251	25	True				
ANR	2507280	Statement	","	293:13:8595:8595	2507251	26	True				
ANR	2507281	Statement	col	293:15:8597:8599	2507251	27	True				
ANR	2507282	Statement	->	293:18:8600:8601	2507251	28	True				
ANR	2507283	Statement	vtable_offset	293:20:8602:8614	2507251	29	True				
ANR	2507284	Statement	","	293:33:8615:8615	2507251	30	True				
ANR	2507285	Statement	prefix	294:7:8624:8629	2507251	31	True				
ANR	2507286	Statement	","	294:13:8630:8630	2507251	32	True				
ANR	2507287	Statement	col	294:15:8632:8634	2507251	33	True				
ANR	2507288	Statement	->	294:18:8635:8636	2507251	34	True				
ANR	2507289	Statement	cd_offset	294:20:8637:8645	2507251	35	True				
ANR	2507290	Statement	","	294:29:8646:8646	2507251	36	True				
ANR	2507291	Statement	prefix	295:7:8655:8660	2507251	37	True				
ANR	2507292	Statement	","	295:13:8661:8661	2507251	38	True				
ANR	2507293	Statement	col	295:15:8663:8665	2507251	39	True				
ANR	2507294	Statement	->	295:18:8666:8667	2507251	40	True				
ANR	2507295	Statement	type_descriptor_addr	295:20:8668:8687	2507251	41	True				
ANR	2507296	Statement	","	295:40:8688:8688	2507251	42	True				
ANR	2507297	Statement	prefix	296:7:8697:8702	2507251	43	True				
ANR	2507298	Statement	","	296:13:8703:8703	2507251	44	True				
ANR	2507299	Statement	col	296:15:8705:8707	2507251	45	True				
ANR	2507300	Statement	->	296:18:8708:8709	2507251	46	True				
ANR	2507301	Statement	class_descriptor_addr	296:20:8710:8730	2507251	47	True				
ANR	2507302	Statement	)	296:41:8731:8731	2507251	48	True				
ANR	2507303	ExpressionStatement		296:42:8732:8732	2507251	49	True				
ANR	2507304	Statement	r_cons_printf	297:1:8735:8747	2507251	50	True				
ANR	2507305	Statement	(	297:15:8749:8749	2507251	51	True				
ANR	2507306	Statement	"""%s\\tobjectBase: 0x%08"""	297:16:8750:8772	2507251	52	True				
ANR	2507307	Statement	PFMT32x	297:39:8773:8779	2507251	53	True				
ANR	2507308	Statement	"""\\n\\n"""	297:46:8780:8785	2507251	54	True				
ANR	2507309	Statement	","	297:52:8786:8786	2507251	55	True				
ANR	2507310	Statement	prefix	298:7:8795:8800	2507251	56	True				
ANR	2507311	Statement	","	298:13:8801:8801	2507251	57	True				
ANR	2507312	Statement	col	298:15:8803:8805	2507251	58	True				
ANR	2507313	Statement	->	298:18:8806:8807	2507251	59	True				
ANR	2507314	Statement	object_base	298:20:8808:8818	2507251	60	True				
ANR	2507315	Statement	)	298:31:8819:8819	2507251	61	True				
ANR	2507316	ExpressionStatement		298:32:8820:8820	2507251	62	True				
ANR	2507317	ReturnType	static void		2507251	1					
ANR	2507318	Identifier	rtti_msvc_print_complete_object_locator		2507251	2					
ANR	2507319	ParameterList	"rtti_complete_object_locator * col , ut64 addr , const char * prefix"		2507251	3					
ANR	2507320	Parameter	rtti_complete_object_locator * col	284:52:8202:8234	2507251	0	True				
ANR	2507321	ParameterType	rtti_complete_object_locator *		2507251	0					
ANR	2507322	Identifier	col		2507251	1					
ANR	2507323	Parameter	ut64 addr	284:87:8237:8245	2507251	1	True				
ANR	2507324	ParameterType	ut64		2507251	0					
ANR	2507325	Identifier	addr		2507251	1					
ANR	2507326	Parameter	const char * prefix	284:98:8248:8265	2507251	2	True				
ANR	2507327	ParameterType	const char *		2507251	0					
ANR	2507328	Identifier	prefix		2507251	1					
ANR	2507329	CFGEntryNode	ENTRY		2507251		True				
ANR	2507330	CFGExitNode	EXIT		2507251		True				
ANR	2507331	Symbol	col		2507251						
ANR	2507332	Symbol	prefix		2507251						
ANR	2507333	Symbol	addr		2507251						
ANR	2507334	Function	rtti_msvc_print_complete_object_locator_json	301:0:8825:9258							
ANR	2507335	FunctionDef	rtti_msvc_print_complete_object_locator_json (rtti_complete_object_locator * col)		2507334	0					
ANR	2507336	CompoundStatement		301:92:8917:9258	2507334	0					
ANR	2507337	Statement	r_cons_printf	302:1:8920:8932	2507334	0	True				
ANR	2507338	Statement	(	302:15:8934:8934	2507334	1	True				
ANR	2507339	Statement	"""{\\""signature\\"":%"""	302:16:8935:8952	2507334	2	True				
ANR	2507340	Statement	PFMT32u	302:34:8953:8959	2507334	3	True				
ANR	2507341	Statement	""",\\""vftable_offset\\"":%"""	302:41:8960:8982	2507334	4	True				
ANR	2507342	Statement	PFMT32u	302:64:8983:8989	2507334	5	True				
ANR	2507343	Statement	""",\\""cd_offset\\"":%"""	302:71:8990:9007	2507334	6	True				
ANR	2507344	Statement	PFMT32u	302:89:9008:9014	2507334	7	True				
ANR	2507345	Statement	""","""	302:96:9015:9017	2507334	8	True				
ANR	2507346	Statement	"""\\""type_desc_addr\\"":%"""	303:7:9026:9047	2507334	9	True				
ANR	2507347	Statement	PFMT32u	303:29:9048:9054	2507334	10	True				
ANR	2507348	Statement	""",\\""class_desc_addr\\"":%"""	303:36:9055:9078	2507334	11	True				
ANR	2507349	Statement	PFMT32u	303:60:9079:9085	2507334	12	True				
ANR	2507350	Statement	""",\\""object_base\\"":%"""	303:67:9086:9105	2507334	13	True				
ANR	2507351	Statement	PFMT32u	303:87:9106:9112	2507334	14	True				
ANR	2507352	Statement	"""}"""	303:94:9113:9115	2507334	15	True				
ANR	2507353	Statement	","	303:97:9116:9116	2507334	16	True				
ANR	2507354	Statement	col	304:7:9125:9127	2507334	17	True				
ANR	2507355	Statement	->	304:10:9128:9129	2507334	18	True				
ANR	2507356	Statement	signature	304:12:9130:9138	2507334	19	True				
ANR	2507357	Statement	","	304:21:9139:9139	2507334	20	True				
ANR	2507358	Statement	col	304:23:9141:9143	2507334	21	True				
ANR	2507359	Statement	->	304:26:9144:9145	2507334	22	True				
ANR	2507360	Statement	vtable_offset	304:28:9146:9158	2507334	23	True				
ANR	2507361	Statement	","	304:41:9159:9159	2507334	24	True				
ANR	2507362	Statement	col	304:43:9161:9163	2507334	25	True				
ANR	2507363	Statement	->	304:46:9164:9165	2507334	26	True				
ANR	2507364	Statement	cd_offset	304:48:9166:9174	2507334	27	True				
ANR	2507365	Statement	","	304:57:9175:9175	2507334	28	True				
ANR	2507366	Statement	col	304:59:9177:9179	2507334	29	True				
ANR	2507367	Statement	->	304:62:9180:9181	2507334	30	True				
ANR	2507368	Statement	type_descriptor_addr	304:64:9182:9201	2507334	31	True				
ANR	2507369	Statement	","	304:84:9202:9202	2507334	32	True				
ANR	2507370	Statement	col	305:7:9211:9213	2507334	33	True				
ANR	2507371	Statement	->	305:10:9214:9215	2507334	34	True				
ANR	2507372	Statement	class_descriptor_addr	305:12:9216:9236	2507334	35	True				
ANR	2507373	Statement	","	305:33:9237:9237	2507334	36	True				
ANR	2507374	Statement	col	305:35:9239:9241	2507334	37	True				
ANR	2507375	Statement	->	305:38:9242:9243	2507334	38	True				
ANR	2507376	Statement	object_base	305:40:9244:9254	2507334	39	True				
ANR	2507377	Statement	)	305:51:9255:9255	2507334	40	True				
ANR	2507378	ExpressionStatement		305:52:9256:9256	2507334	41	True				
ANR	2507379	ReturnType	static void		2507334	1					
ANR	2507380	Identifier	rtti_msvc_print_complete_object_locator_json		2507334	2					
ANR	2507381	ParameterList	rtti_complete_object_locator * col		2507334	3					
ANR	2507382	Parameter	rtti_complete_object_locator * col	301:57:8882:8914	2507334	0	True				
ANR	2507383	ParameterType	rtti_complete_object_locator *		2507334	0					
ANR	2507384	Identifier	col		2507334	1					
ANR	2507385	CFGEntryNode	ENTRY		2507334		True				
ANR	2507386	CFGExitNode	EXIT		2507334		True				
ANR	2507387	Symbol	col		2507334						
ANR	2507388	Function	rtti_msvc_print_type_descriptor	308:0:9261:9632							
ANR	2507389	FunctionDef	"rtti_msvc_print_type_descriptor (rtti_type_descriptor * td , ut64 addr , const char * prefix)"		2507388	0					
ANR	2507390	CompoundStatement		308:101:9362:9632	2507388	0					
ANR	2507391	Statement	r_cons_printf	309:1:9365:9377	2507388	0	True				
ANR	2507392	Statement	(	309:15:9379:9379	2507388	1	True				
ANR	2507393	Statement	"""%sType Descriptor at 0x%08"""	309:16:9380:9407	2507388	2	True				
ANR	2507394	Statement	PFMT64x	309:44:9408:9414	2507388	3	True				
ANR	2507395	Statement	""":\\n"""	309:51:9415:9419	2507388	4	True				
ANR	2507396	Statement	"""%s\\tvtableAddr: 0x%08"""	310:7:9428:9450	2507388	5	True				
ANR	2507397	Statement	PFMT64x	310:30:9451:9457	2507388	6	True				
ANR	2507398	Statement	"""\\n"""	310:37:9458:9461	2507388	7	True				
ANR	2507399	Statement	"""%s\\tspare: 0x%08"""	311:7:9470:9487	2507388	8	True				
ANR	2507400	Statement	PFMT64x	311:25:9488:9494	2507388	9	True				
ANR	2507401	Statement	"""\\n"""	311:32:9495:9498	2507388	10	True				
ANR	2507402	Statement	"""%s\\tname: %s\\n\\n"""	312:7:9507:9524	2507388	11	True				
ANR	2507403	Statement	","	312:25:9525:9525	2507388	12	True				
ANR	2507404	Statement	prefix	313:7:9534:9539	2507388	13	True				
ANR	2507405	Statement	","	313:13:9540:9540	2507388	14	True				
ANR	2507406	Statement	addr	313:15:9542:9545	2507388	15	True				
ANR	2507407	Statement	","	313:19:9546:9546	2507388	16	True				
ANR	2507408	Statement	prefix	314:7:9555:9560	2507388	17	True				
ANR	2507409	Statement	","	314:13:9561:9561	2507388	18	True				
ANR	2507410	Statement	td	314:15:9563:9564	2507388	19	True				
ANR	2507411	Statement	->	314:17:9565:9566	2507388	20	True				
ANR	2507412	Statement	vtable_addr	314:19:9567:9577	2507388	21	True				
ANR	2507413	Statement	","	314:30:9578:9578	2507388	22	True				
ANR	2507414	Statement	prefix	315:7:9587:9592	2507388	23	True				
ANR	2507415	Statement	","	315:13:9593:9593	2507388	24	True				
ANR	2507416	Statement	td	315:15:9595:9596	2507388	25	True				
ANR	2507417	Statement	->	315:17:9597:9598	2507388	26	True				
ANR	2507418	Statement	spare	315:19:9599:9603	2507388	27	True				
ANR	2507419	Statement	","	315:24:9604:9604	2507388	28	True				
ANR	2507420	Statement	prefix	316:7:9613:9618	2507388	29	True				
ANR	2507421	Statement	","	316:13:9619:9619	2507388	30	True				
ANR	2507422	Statement	td	316:15:9621:9622	2507388	31	True				
ANR	2507423	Statement	->	316:17:9623:9624	2507388	32	True				
ANR	2507424	Statement	name	316:19:9625:9628	2507388	33	True				
ANR	2507425	Statement	)	316:23:9629:9629	2507388	34	True				
ANR	2507426	ExpressionStatement		316:24:9630:9630	2507388	35	True				
ANR	2507427	ReturnType	static void		2507388	1					
ANR	2507428	Identifier	rtti_msvc_print_type_descriptor		2507388	2					
ANR	2507429	ParameterList	"rtti_type_descriptor * td , ut64 addr , const char * prefix"		2507388	3					
ANR	2507430	Parameter	rtti_type_descriptor * td	308:44:9305:9328	2507388	0	True				
ANR	2507431	ParameterType	rtti_type_descriptor *		2507388	0					
ANR	2507432	Identifier	td		2507388	1					
ANR	2507433	Parameter	ut64 addr	308:70:9331:9339	2507388	1	True				
ANR	2507434	ParameterType	ut64		2507388	0					
ANR	2507435	Identifier	addr		2507388	1					
ANR	2507436	Parameter	const char * prefix	308:81:9342:9359	2507388	2	True				
ANR	2507437	ParameterType	const char *		2507388	0					
ANR	2507438	Identifier	prefix		2507388	1					
ANR	2507439	CFGEntryNode	ENTRY		2507388		True				
ANR	2507440	CFGExitNode	EXIT		2507388		True				
ANR	2507441	Symbol	td		2507388						
ANR	2507442	Symbol	prefix		2507388						
ANR	2507443	Symbol	addr		2507388						
ANR	2507444	Function	rtti_msvc_print_type_descriptor_json	319:0:9635:9843							
ANR	2507445	FunctionDef	rtti_msvc_print_type_descriptor_json (rtti_type_descriptor * td)		2507444	0					
ANR	2507446	CompoundStatement		319:75:9710:9843	2507444	0					
ANR	2507447	Statement	r_cons_printf	320:1:9713:9725	2507444	0	True				
ANR	2507448	Statement	(	320:15:9727:9727	2507444	1	True				
ANR	2507449	Statement	"""{\\""vtable_addr\\"":%"""	320:16:9728:9747	2507444	2	True				
ANR	2507450	Statement	PFMT32u	320:36:9748:9754	2507444	3	True				
ANR	2507451	Statement	""",\\""spare\\"":%"""	320:43:9755:9768	2507444	4	True				
ANR	2507452	Statement	PFMT32u	320:57:9769:9775	2507444	5	True				
ANR	2507453	Statement	""",\\""name\\"":\\""%s\\""}"""	320:64:9776:9794	2507444	6	True				
ANR	2507454	Statement	","	320:83:9795:9795	2507444	7	True				
ANR	2507455	Statement	td	321:7:9804:9805	2507444	8	True				
ANR	2507456	Statement	->	321:9:9806:9807	2507444	9	True				
ANR	2507457	Statement	vtable_addr	321:11:9808:9818	2507444	10	True				
ANR	2507458	Statement	","	321:22:9819:9819	2507444	11	True				
ANR	2507459	Statement	td	321:24:9821:9822	2507444	12	True				
ANR	2507460	Statement	->	321:26:9823:9824	2507444	13	True				
ANR	2507461	Statement	spare	321:28:9825:9829	2507444	14	True				
ANR	2507462	Statement	","	321:33:9830:9830	2507444	15	True				
ANR	2507463	Statement	td	321:35:9832:9833	2507444	16	True				
ANR	2507464	Statement	->	321:37:9834:9835	2507444	17	True				
ANR	2507465	Statement	name	321:39:9836:9839	2507444	18	True				
ANR	2507466	Statement	)	321:43:9840:9840	2507444	19	True				
ANR	2507467	ExpressionStatement		321:44:9841:9841	2507444	20	True				
ANR	2507468	ReturnType	static void		2507444	1					
ANR	2507469	Identifier	rtti_msvc_print_type_descriptor_json		2507444	2					
ANR	2507470	ParameterList	rtti_type_descriptor * td		2507444	3					
ANR	2507471	Parameter	rtti_type_descriptor * td	319:49:9684:9707	2507444	0	True				
ANR	2507472	ParameterType	rtti_type_descriptor *		2507444	0					
ANR	2507473	Identifier	td		2507444	1					
ANR	2507474	CFGEntryNode	ENTRY		2507444		True				
ANR	2507475	CFGExitNode	EXIT		2507444		True				
ANR	2507476	Symbol	td		2507444						
ANR	2507477	Function	rtti_msvc_print_class_hierarchy_descriptor	324:0:9846:10355							
ANR	2507478	FunctionDef	"rtti_msvc_print_class_hierarchy_descriptor (rtti_class_hierarchy_descriptor * chd , ut64 addr , const char * prefix)"		2507477	0					
ANR	2507479	CompoundStatement		324:124:9970:10355	2507477	0					
ANR	2507480	Statement	r_cons_printf	325:1:9973:9985	2507477	0	True				
ANR	2507481	Statement	(	325:15:9987:9987	2507477	1	True				
ANR	2507482	Statement	"""%sClass Hierarchy Descriptor at 0x%08"""	325:16:9988:10026	2507477	2	True				
ANR	2507483	Statement	PFMT64x	325:55:10027:10033	2507477	3	True				
ANR	2507484	Statement	""":\\n"""	325:62:10034:10038	2507477	4	True				
ANR	2507485	Statement	"""%s\\tsignature: %#x\\n"""	326:7:10047:10068	2507477	5	True				
ANR	2507486	Statement	"""%s\\tattributes: %#x\\n"""	327:7:10077:10099	2507477	6	True				
ANR	2507487	Statement	"""%s\\tnumBaseClasses: %#x\\n"""	328:7:10108:10134	2507477	7	True				
ANR	2507488	Statement	"""%s\\tbaseClassArrayAddr: 0x%08"""	329:7:10143:10173	2507477	8	True				
ANR	2507489	Statement	PFMT32x	329:38:10174:10180	2507477	9	True				
ANR	2507490	Statement	"""\\n\\n"""	329:45:10181:10186	2507477	10	True				
ANR	2507491	Statement	","	329:51:10187:10187	2507477	11	True				
ANR	2507492	Statement	prefix	330:7:10196:10201	2507477	12	True				
ANR	2507493	Statement	","	330:13:10202:10202	2507477	13	True				
ANR	2507494	Statement	addr	330:15:10204:10207	2507477	14	True				
ANR	2507495	Statement	","	330:19:10208:10208	2507477	15	True				
ANR	2507496	Statement	prefix	331:7:10217:10222	2507477	16	True				
ANR	2507497	Statement	","	331:13:10223:10223	2507477	17	True				
ANR	2507498	Statement	chd	331:15:10225:10227	2507477	18	True				
ANR	2507499	Statement	->	331:18:10228:10229	2507477	19	True				
ANR	2507500	Statement	signature	331:20:10230:10238	2507477	20	True				
ANR	2507501	Statement	","	331:29:10239:10239	2507477	21	True				
ANR	2507502	Statement	prefix	332:7:10248:10253	2507477	22	True				
ANR	2507503	Statement	","	332:13:10254:10254	2507477	23	True				
ANR	2507504	Statement	chd	332:15:10256:10258	2507477	24	True				
ANR	2507505	Statement	->	332:18:10259:10260	2507477	25	True				
ANR	2507506	Statement	attributes	332:20:10261:10270	2507477	26	True				
ANR	2507507	Statement	","	332:30:10271:10271	2507477	27	True				
ANR	2507508	Statement	prefix	333:7:10280:10285	2507477	28	True				
ANR	2507509	Statement	","	333:13:10286:10286	2507477	29	True				
ANR	2507510	Statement	chd	333:15:10288:10290	2507477	30	True				
ANR	2507511	Statement	->	333:18:10291:10292	2507477	31	True				
ANR	2507512	Statement	num_base_classes	333:20:10293:10308	2507477	32	True				
ANR	2507513	Statement	","	333:36:10309:10309	2507477	33	True				
ANR	2507514	Statement	prefix	334:7:10318:10323	2507477	34	True				
ANR	2507515	Statement	","	334:13:10324:10324	2507477	35	True				
ANR	2507516	Statement	chd	334:15:10326:10328	2507477	36	True				
ANR	2507517	Statement	->	334:18:10329:10330	2507477	37	True				
ANR	2507518	Statement	base_class_array_addr	334:20:10331:10351	2507477	38	True				
ANR	2507519	Statement	)	334:41:10352:10352	2507477	39	True				
ANR	2507520	ExpressionStatement		334:42:10353:10353	2507477	40	True				
ANR	2507521	ReturnType	static void		2507477	1					
ANR	2507522	Identifier	rtti_msvc_print_class_hierarchy_descriptor		2507477	2					
ANR	2507523	ParameterList	"rtti_class_hierarchy_descriptor * chd , ut64 addr , const char * prefix"		2507477	3					
ANR	2507524	Parameter	rtti_class_hierarchy_descriptor * chd	324:55:9901:9936	2507477	0	True				
ANR	2507525	ParameterType	rtti_class_hierarchy_descriptor *		2507477	0					
ANR	2507526	Identifier	chd		2507477	1					
ANR	2507527	Parameter	ut64 addr	324:93:9939:9947	2507477	1	True				
ANR	2507528	ParameterType	ut64		2507477	0					
ANR	2507529	Identifier	addr		2507477	1					
ANR	2507530	Parameter	const char * prefix	324:104:9950:9967	2507477	2	True				
ANR	2507531	ParameterType	const char *		2507477	0					
ANR	2507532	Identifier	prefix		2507477	1					
ANR	2507533	CFGEntryNode	ENTRY		2507477		True				
ANR	2507534	CFGExitNode	EXIT		2507477		True				
ANR	2507535	Symbol	prefix		2507477						
ANR	2507536	Symbol	addr		2507477						
ANR	2507537	Symbol	chd		2507477						
ANR	2507538	Function	rtti_msvc_print_class_hierarchy_descriptor_json	337:0:10358:10701							
ANR	2507539	FunctionDef	rtti_msvc_print_class_hierarchy_descriptor_json (rtti_class_hierarchy_descriptor * chd)		2507538	0					
ANR	2507540	CompoundStatement		337:98:10456:10701	2507538	0					
ANR	2507541	Statement	r_cons_printf	338:1:10459:10471	2507538	0	True				
ANR	2507542	Statement	(	338:15:10473:10473	2507538	1	True				
ANR	2507543	Statement	"""{\\""signature\\"":%"""	338:16:10474:10491	2507538	2	True				
ANR	2507544	Statement	PFMT32u	338:34:10492:10498	2507538	3	True				
ANR	2507545	Statement	""",\\""attributes\\"":%"""	338:41:10499:10517	2507538	4	True				
ANR	2507546	Statement	PFMT32u	338:60:10518:10524	2507538	5	True				
ANR	2507547	Statement	""",\\""num_base_classes\\"":%"""	338:67:10525:10549	2507538	6	True				
ANR	2507548	Statement	PFMT32u	338:92:10550:10556	2507538	7	True				
ANR	2507549	Statement	""","""	338:99:10557:10559	2507538	8	True				
ANR	2507550	Statement	"""\\""base_class_array_addr\\"":%"""	339:7:10568:10596	2507538	9	True				
ANR	2507551	Statement	PFMT32u	339:36:10597:10603	2507538	10	True				
ANR	2507552	Statement	"""}"""	339:43:10604:10606	2507538	11	True				
ANR	2507553	Statement	","	339:46:10607:10607	2507538	12	True				
ANR	2507554	Statement	chd	340:7:10616:10618	2507538	13	True				
ANR	2507555	Statement	->	340:10:10619:10620	2507538	14	True				
ANR	2507556	Statement	signature	340:12:10621:10629	2507538	15	True				
ANR	2507557	Statement	","	340:21:10630:10630	2507538	16	True				
ANR	2507558	Statement	chd	340:23:10632:10634	2507538	17	True				
ANR	2507559	Statement	->	340:26:10635:10636	2507538	18	True				
ANR	2507560	Statement	attributes	340:28:10637:10646	2507538	19	True				
ANR	2507561	Statement	","	340:38:10647:10647	2507538	20	True				
ANR	2507562	Statement	chd	340:40:10649:10651	2507538	21	True				
ANR	2507563	Statement	->	340:43:10652:10653	2507538	22	True				
ANR	2507564	Statement	num_base_classes	340:45:10654:10669	2507538	23	True				
ANR	2507565	Statement	","	340:61:10670:10670	2507538	24	True				
ANR	2507566	Statement	chd	340:63:10672:10674	2507538	25	True				
ANR	2507567	Statement	->	340:66:10675:10676	2507538	26	True				
ANR	2507568	Statement	base_class_array_addr	340:68:10677:10697	2507538	27	True				
ANR	2507569	Statement	)	340:89:10698:10698	2507538	28	True				
ANR	2507570	ExpressionStatement		340:90:10699:10699	2507538	29	True				
ANR	2507571	ReturnType	static void		2507538	1					
ANR	2507572	Identifier	rtti_msvc_print_class_hierarchy_descriptor_json		2507538	2					
ANR	2507573	ParameterList	rtti_class_hierarchy_descriptor * chd		2507538	3					
ANR	2507574	Parameter	rtti_class_hierarchy_descriptor * chd	337:60:10418:10453	2507538	0	True				
ANR	2507575	ParameterType	rtti_class_hierarchy_descriptor *		2507538	0					
ANR	2507576	Identifier	chd		2507538	1					
ANR	2507577	CFGEntryNode	ENTRY		2507538		True				
ANR	2507578	CFGExitNode	EXIT		2507538		True				
ANR	2507579	Symbol	chd		2507538						
ANR	2507580	Function	rtti_msvc_print_base_class_descriptor	343:0:10704:11324							
ANR	2507581	FunctionDef	"rtti_msvc_print_base_class_descriptor (rtti_base_class_descriptor * bcd , const char * prefix)"		2507580	0					
ANR	2507582	CompoundStatement		343:103:10807:11324	2507580	0					
ANR	2507583	Statement	r_cons_printf	344:1:10810:10822	2507580	0	True				
ANR	2507584	Statement	(	344:15:10824:10824	2507580	1	True				
ANR	2507585	Statement	"""%sBase Class Descriptor:\\n"""	344:16:10825:10852	2507580	2	True				
ANR	2507586	Statement	"""%s\\ttypeDescriptorAddr: 0x%08"""	345:7:10861:10891	2507580	3	True				
ANR	2507587	Statement	PFMT32x	345:38:10892:10898	2507580	4	True				
ANR	2507588	Statement	"""\\n"""	345:45:10899:10902	2507580	5	True				
ANR	2507589	Statement	"""%s\\tnumContainedBases: %#x\\n"""	346:7:10911:10940	2507580	6	True				
ANR	2507590	Statement	"""%s\\twhere:\\n"""	347:7:10949:10962	2507580	7	True				
ANR	2507591	Statement	"""%s\\t\\tmdisp: %d\\n"""	348:7:10971:10989	2507580	8	True				
ANR	2507592	Statement	"""%s\\t\\tpdisp: %d\\n"""	349:7:10998:11016	2507580	9	True				
ANR	2507593	Statement	"""%s\\t\\tvdisp: %d\\n"""	350:7:11025:11043	2507580	10	True				
ANR	2507594	Statement	"""%s\\tattributes: %#x\\n\\n"""	351:7:11052:11076	2507580	11	True				
ANR	2507595	Statement	","	351:32:11077:11077	2507580	12	True				
ANR	2507596	Statement	prefix	352:7:11086:11091	2507580	13	True				
ANR	2507597	Statement	","	352:13:11092:11092	2507580	14	True				
ANR	2507598	Statement	prefix	353:7:11101:11106	2507580	15	True				
ANR	2507599	Statement	","	353:13:11107:11107	2507580	16	True				
ANR	2507600	Statement	bcd	353:15:11109:11111	2507580	17	True				
ANR	2507601	Statement	->	353:18:11112:11113	2507580	18	True				
ANR	2507602	Statement	type_descriptor_addr	353:20:11114:11133	2507580	19	True				
ANR	2507603	Statement	","	353:40:11134:11134	2507580	20	True				
ANR	2507604	Statement	prefix	354:7:11143:11148	2507580	21	True				
ANR	2507605	Statement	","	354:13:11149:11149	2507580	22	True				
ANR	2507606	Statement	bcd	354:15:11151:11153	2507580	23	True				
ANR	2507607	Statement	->	354:18:11154:11155	2507580	24	True				
ANR	2507608	Statement	num_contained_bases	354:20:11156:11174	2507580	25	True				
ANR	2507609	Statement	","	354:39:11175:11175	2507580	26	True				
ANR	2507610	Statement	prefix	355:7:11184:11189	2507580	27	True				
ANR	2507611	Statement	","	355:13:11190:11190	2507580	28	True				
ANR	2507612	Statement	prefix	356:7:11199:11204	2507580	29	True				
ANR	2507613	Statement	","	356:13:11205:11205	2507580	30	True				
ANR	2507614	Statement	bcd	356:15:11207:11209	2507580	31	True				
ANR	2507615	Statement	->	356:18:11210:11211	2507580	32	True				
ANR	2507616	Statement	where	356:20:11212:11216	2507580	33	True				
ANR	2507617	Statement	.	356:25:11217:11217	2507580	34	True				
ANR	2507618	Statement	mdisp	356:26:11218:11222	2507580	35	True				
ANR	2507619	Statement	","	356:31:11223:11223	2507580	36	True				
ANR	2507620	Statement	prefix	357:7:11232:11237	2507580	37	True				
ANR	2507621	Statement	","	357:13:11238:11238	2507580	38	True				
ANR	2507622	Statement	bcd	357:15:11240:11242	2507580	39	True				
ANR	2507623	Statement	->	357:18:11243:11244	2507580	40	True				
ANR	2507624	Statement	where	357:20:11245:11249	2507580	41	True				
ANR	2507625	Statement	.	357:25:11250:11250	2507580	42	True				
ANR	2507626	Statement	pdisp	357:26:11251:11255	2507580	43	True				
ANR	2507627	Statement	","	357:31:11256:11256	2507580	44	True				
ANR	2507628	Statement	prefix	358:7:11265:11270	2507580	45	True				
ANR	2507629	Statement	","	358:13:11271:11271	2507580	46	True				
ANR	2507630	Statement	bcd	358:15:11273:11275	2507580	47	True				
ANR	2507631	Statement	->	358:18:11276:11277	2507580	48	True				
ANR	2507632	Statement	where	358:20:11278:11282	2507580	49	True				
ANR	2507633	Statement	.	358:25:11283:11283	2507580	50	True				
ANR	2507634	Statement	vdisp	358:26:11284:11288	2507580	51	True				
ANR	2507635	Statement	","	358:31:11289:11289	2507580	52	True				
ANR	2507636	Statement	prefix	359:7:11298:11303	2507580	53	True				
ANR	2507637	Statement	","	359:13:11304:11304	2507580	54	True				
ANR	2507638	Statement	bcd	359:15:11306:11308	2507580	55	True				
ANR	2507639	Statement	->	359:18:11309:11310	2507580	56	True				
ANR	2507640	Statement	attributes	359:20:11311:11320	2507580	57	True				
ANR	2507641	Statement	)	359:30:11321:11321	2507580	58	True				
ANR	2507642	ExpressionStatement		359:31:11322:11322	2507580	59	True				
ANR	2507643	ReturnType	static void		2507580	1					
ANR	2507644	Identifier	rtti_msvc_print_base_class_descriptor		2507580	2					
ANR	2507645	ParameterList	"rtti_base_class_descriptor * bcd , const char * prefix"		2507580	3					
ANR	2507646	Parameter	rtti_base_class_descriptor * bcd	343:50:10754:10784	2507580	0	True				
ANR	2507647	ParameterType	rtti_base_class_descriptor *		2507580	0					
ANR	2507648	Identifier	bcd		2507580	1					
ANR	2507649	Parameter	const char * prefix	343:83:10787:10804	2507580	1	True				
ANR	2507650	ParameterType	const char *		2507580	0					
ANR	2507651	Identifier	prefix		2507580	1					
ANR	2507652	CFGEntryNode	ENTRY		2507580		True				
ANR	2507653	CFGExitNode	EXIT		2507580		True				
ANR	2507654	Symbol	bcd		2507580						
ANR	2507655	Symbol	prefix		2507580						
ANR	2507656	Function	rtti_msvc_print_base_class_descriptor_json	362:0:11327:11763							
ANR	2507657	FunctionDef	rtti_msvc_print_base_class_descriptor_json (rtti_base_class_descriptor * bcd)		2507656	0					
ANR	2507658	CompoundStatement		362:88:11415:11763	2507656	0					
ANR	2507659	Statement	r_cons_printf	363:1:11418:11430	2507656	0	True				
ANR	2507660	Statement	(	363:15:11432:11432	2507656	1	True				
ANR	2507661	Statement	"""{\\""type_desc_addr\\"":%"""	363:16:11433:11455	2507656	2	True				
ANR	2507662	Statement	PFMT32u	363:39:11456:11462	2507656	3	True				
ANR	2507663	Statement	""",\\""num_contained_bases\\"":%"""	363:46:11463:11490	2507656	4	True				
ANR	2507664	Statement	PFMT32u	363:74:11491:11497	2507656	5	True				
ANR	2507665	Statement	""","""	363:81:11498:11500	2507656	6	True				
ANR	2507666	Statement	"""\\""where\\"":{\\""mdisp\\"":%"""	364:7:11509:11532	2507656	7	True				
ANR	2507667	Statement	PFMT32d	364:31:11533:11539	2507656	8	True				
ANR	2507668	Statement	""",\\""pdisp\\"":%"""	364:38:11540:11553	2507656	9	True				
ANR	2507669	Statement	PFMT32d	364:52:11554:11560	2507656	10	True				
ANR	2507670	Statement	""",\\""vdisp\\"":%"""	364:59:11561:11574	2507656	11	True				
ANR	2507671	Statement	PFMT32d	364:73:11575:11581	2507656	12	True				
ANR	2507672	Statement	"""},"""	364:80:11582:11585	2507656	13	True				
ANR	2507673	Statement	"""\\""attributes\\"":%"""	365:7:11594:11611	2507656	14	True				
ANR	2507674	Statement	PFMT32u	365:25:11612:11618	2507656	15	True				
ANR	2507675	Statement	"""}"""	365:32:11619:11621	2507656	16	True				
ANR	2507676	Statement	","	365:35:11622:11622	2507656	17	True				
ANR	2507677	Statement	bcd	366:7:11631:11633	2507656	18	True				
ANR	2507678	Statement	->	366:10:11634:11635	2507656	19	True				
ANR	2507679	Statement	type_descriptor_addr	366:12:11636:11655	2507656	20	True				
ANR	2507680	Statement	","	366:32:11656:11656	2507656	21	True				
ANR	2507681	Statement	bcd	366:34:11658:11660	2507656	22	True				
ANR	2507682	Statement	->	366:37:11661:11662	2507656	23	True				
ANR	2507683	Statement	num_contained_bases	366:39:11663:11681	2507656	24	True				
ANR	2507684	Statement	","	366:58:11682:11682	2507656	25	True				
ANR	2507685	Statement	bcd	367:7:11691:11693	2507656	26	True				
ANR	2507686	Statement	->	367:10:11694:11695	2507656	27	True				
ANR	2507687	Statement	where	367:12:11696:11700	2507656	28	True				
ANR	2507688	Statement	.	367:17:11701:11701	2507656	29	True				
ANR	2507689	Statement	mdisp	367:18:11702:11706	2507656	30	True				
ANR	2507690	Statement	","	367:23:11707:11707	2507656	31	True				
ANR	2507691	Statement	bcd	367:25:11709:11711	2507656	32	True				
ANR	2507692	Statement	->	367:28:11712:11713	2507656	33	True				
ANR	2507693	Statement	where	367:30:11714:11718	2507656	34	True				
ANR	2507694	Statement	.	367:35:11719:11719	2507656	35	True				
ANR	2507695	Statement	pdisp	367:36:11720:11724	2507656	36	True				
ANR	2507696	Statement	","	367:41:11725:11725	2507656	37	True				
ANR	2507697	Statement	bcd	367:43:11727:11729	2507656	38	True				
ANR	2507698	Statement	->	367:46:11730:11731	2507656	39	True				
ANR	2507699	Statement	where	367:48:11732:11736	2507656	40	True				
ANR	2507700	Statement	.	367:53:11737:11737	2507656	41	True				
ANR	2507701	Statement	vdisp	367:54:11738:11742	2507656	42	True				
ANR	2507702	Statement	","	367:59:11743:11743	2507656	43	True				
ANR	2507703	Statement	bcd	367:61:11745:11747	2507656	44	True				
ANR	2507704	Statement	->	367:64:11748:11749	2507656	45	True				
ANR	2507705	Statement	attributes	367:66:11750:11759	2507656	46	True				
ANR	2507706	Statement	)	367:76:11760:11760	2507656	47	True				
ANR	2507707	ExpressionStatement		367:77:11761:11761	2507656	48	True				
ANR	2507708	ReturnType	static void		2507656	1					
ANR	2507709	Identifier	rtti_msvc_print_base_class_descriptor_json		2507656	2					
ANR	2507710	ParameterList	rtti_base_class_descriptor * bcd		2507656	3					
ANR	2507711	Parameter	rtti_base_class_descriptor * bcd	362:55:11382:11412	2507656	0	True				
ANR	2507712	ParameterType	rtti_base_class_descriptor *		2507656	0					
ANR	2507713	Identifier	bcd		2507656	1					
ANR	2507714	CFGEntryNode	ENTRY		2507656		True				
ANR	2507715	CFGExitNode	EXIT		2507656		True				
ANR	2507716	Symbol	bcd		2507656						
ANR	2507717	Function	r_anal_rtti_msvc_demangle_class_name	380:0:12008:12727							
ANR	2507718	FunctionDef	r_anal_rtti_msvc_demangle_class_name (const char * name)		2507717	0					
ANR	2507719	CompoundStatement		380:67:12075:12727	2507717	0					
ANR	2507720	IfStatement	if ( ! name )		2507717	0					
ANR	2507721	Condition	! name	381:5:12082:12086	2507717	0	True				
ANR	2507722	UnaryOperationExpression	! name		2507717	0					
ANR	2507723	UnaryOperator	!		2507717	0					
ANR	2507724	Identifier	name		2507717	1					
ANR	2507725	CompoundStatement		2:12:13:13	2507717	1					
ANR	2507726	ReturnStatement	return NULL ;	382:2:12093:12104	2507717	0	True				
ANR	2507727	Identifier	NULL		2507717	0					
ANR	2507728	IdentifierDeclStatement	size_t original_len = strlen ( name ) ;	384:1:12110:12145	2507717	1	True				
ANR	2507729	IdentifierDecl	original_len = strlen ( name )		2507717	0					
ANR	2507730	IdentifierDeclType	size_t		2507717	0					
ANR	2507731	Identifier	original_len		2507717	1					
ANR	2507732	AssignmentExpression	original_len = strlen ( name )		2507717	2		=			
ANR	2507733	Identifier	original_len		2507717	0					
ANR	2507734	CallExpression	strlen ( name )		2507717	1					
ANR	2507735	Callee	strlen		2507717	0					
ANR	2507736	Identifier	strlen		2507717	0					
ANR	2507737	ArgumentList	name		2507717	1					
ANR	2507738	Argument	name		2507717	0					
ANR	2507739	Identifier	name		2507717	0					
ANR	2507740	IfStatement	"if ( original_len < 7 || ( strncmp ( name , "".?AV"" , 4 ) != 0 && strncmp ( name , "".?AU"" , 4 ) != 0 ) || strncmp ( name + original_len - 2 , ""@@"" , 2 ) != 0 )"		2507717	2					
ANR	2507741	Condition	"original_len < 7 || ( strncmp ( name , "".?AV"" , 4 ) != 0 && strncmp ( name , "".?AU"" , 4 ) != 0 ) || strncmp ( name + original_len - 2 , ""@@"" , 2 ) != 0"	385:5:12152:12292	2507717	0	True				
ANR	2507742	OrExpression	"original_len < 7 || ( strncmp ( name , "".?AV"" , 4 ) != 0 && strncmp ( name , "".?AU"" , 4 ) != 0 ) || strncmp ( name + original_len - 2 , ""@@"" , 2 ) != 0"		2507717	0		||			
ANR	2507743	RelationalExpression	original_len < 7		2507717	0		<			
ANR	2507744	Identifier	original_len		2507717	0					
ANR	2507745	PrimaryExpression	7		2507717	1					
ANR	2507746	OrExpression	"( strncmp ( name , "".?AV"" , 4 ) != 0 && strncmp ( name , "".?AU"" , 4 ) != 0 ) || strncmp ( name + original_len - 2 , ""@@"" , 2 ) != 0"		2507717	1		||			
ANR	2507747	AndExpression	"strncmp ( name , "".?AV"" , 4 ) != 0 && strncmp ( name , "".?AU"" , 4 ) != 0"		2507717	0		&&			
ANR	2507748	EqualityExpression	"strncmp ( name , "".?AV"" , 4 ) != 0"		2507717	0		!=			
ANR	2507749	CallExpression	"strncmp ( name , "".?AV"" , 4 )"		2507717	0					
ANR	2507750	Callee	strncmp		2507717	0					
ANR	2507751	Identifier	strncmp		2507717	0					
ANR	2507752	ArgumentList	name		2507717	1					
ANR	2507753	Argument	name		2507717	0					
ANR	2507754	Identifier	name		2507717	0					
ANR	2507755	Argument	""".?AV"""		2507717	1					
ANR	2507756	PrimaryExpression	""".?AV"""		2507717	0					
ANR	2507757	Argument	4		2507717	2					
ANR	2507758	PrimaryExpression	4		2507717	0					
ANR	2507759	PrimaryExpression	0		2507717	1					
ANR	2507760	EqualityExpression	"strncmp ( name , "".?AU"" , 4 ) != 0"		2507717	1		!=			
ANR	2507761	CallExpression	"strncmp ( name , "".?AU"" , 4 )"		2507717	0					
ANR	2507762	Callee	strncmp		2507717	0					
ANR	2507763	Identifier	strncmp		2507717	0					
ANR	2507764	ArgumentList	name		2507717	1					
ANR	2507765	Argument	name		2507717	0					
ANR	2507766	Identifier	name		2507717	0					
ANR	2507767	Argument	""".?AU"""		2507717	1					
ANR	2507768	PrimaryExpression	""".?AU"""		2507717	0					
ANR	2507769	Argument	4		2507717	2					
ANR	2507770	PrimaryExpression	4		2507717	0					
ANR	2507771	PrimaryExpression	0		2507717	1					
ANR	2507772	EqualityExpression	"strncmp ( name + original_len - 2 , ""@@"" , 2 ) != 0"		2507717	1		!=			
ANR	2507773	CallExpression	"strncmp ( name + original_len - 2 , ""@@"" , 2 )"		2507717	0					
ANR	2507774	Callee	strncmp		2507717	0					
ANR	2507775	Identifier	strncmp		2507717	0					
ANR	2507776	ArgumentList	name + original_len - 2		2507717	1					
ANR	2507777	Argument	name + original_len - 2		2507717	0					
ANR	2507778	AdditiveExpression	name + original_len - 2		2507717	0		+			
ANR	2507779	Identifier	name		2507717	0					
ANR	2507780	AdditiveExpression	original_len - 2		2507717	1		-			
ANR	2507781	Identifier	original_len		2507717	0					
ANR	2507782	PrimaryExpression	2		2507717	1					
ANR	2507783	Argument	"""@@"""		2507717	1					
ANR	2507784	PrimaryExpression	"""@@"""		2507717	0					
ANR	2507785	Argument	2		2507717	2					
ANR	2507786	PrimaryExpression	2		2507717	0					
ANR	2507787	PrimaryExpression	0		2507717	1					
ANR	2507788	CompoundStatement		8:54:219:219	2507717	1					
ANR	2507789	ReturnStatement	return NULL ;	388:2:12299:12310	2507717	0	True				
ANR	2507790	Identifier	NULL		2507717	0					
ANR	2507791	IdentifierDeclStatement	char * ret = malloc ( ( original_len - 6 ) * 2 + 1 ) ;	390:1:12316:12363	2507717	3	True				
ANR	2507792	IdentifierDecl	* ret = malloc ( ( original_len - 6 ) * 2 + 1 )		2507717	0					
ANR	2507793	IdentifierDeclType	char *		2507717	0					
ANR	2507794	Identifier	ret		2507717	1					
ANR	2507795	AssignmentExpression	* ret = malloc ( ( original_len - 6 ) * 2 + 1 )		2507717	2		=			
ANR	2507796	Identifier	ret		2507717	0					
ANR	2507797	CallExpression	malloc ( ( original_len - 6 ) * 2 + 1 )		2507717	1					
ANR	2507798	Callee	malloc		2507717	0					
ANR	2507799	Identifier	malloc		2507717	0					
ANR	2507800	ArgumentList	( original_len - 6 ) * 2 + 1		2507717	1					
ANR	2507801	Argument	( original_len - 6 ) * 2 + 1		2507717	0					
ANR	2507802	AdditiveExpression	( original_len - 6 ) * 2 + 1		2507717	0		+			
ANR	2507803	MultiplicativeExpression	( original_len - 6 ) * 2		2507717	0		*			
ANR	2507804	AdditiveExpression	original_len - 6		2507717	0		-			
ANR	2507805	Identifier	original_len		2507717	0					
ANR	2507806	PrimaryExpression	6		2507717	1					
ANR	2507807	PrimaryExpression	2		2507717	1					
ANR	2507808	PrimaryExpression	1		2507717	1					
ANR	2507809	IfStatement	if ( ! ret )		2507717	4					
ANR	2507810	Condition	! ret	391:5:12370:12373	2507717	0	True				
ANR	2507811	UnaryOperationExpression	! ret		2507717	0					
ANR	2507812	UnaryOperator	!		2507717	0					
ANR	2507813	Identifier	ret		2507717	1					
ANR	2507814	CompoundStatement		12:11:300:300	2507717	1					
ANR	2507815	ReturnStatement	return NULL ;	392:2:12380:12391	2507717	0	True				
ANR	2507816	Identifier	NULL		2507717	0					
ANR	2507817	IdentifierDeclStatement	char * c = ret ;	394:1:12397:12410	2507717	5	True				
ANR	2507818	IdentifierDecl	* c = ret		2507717	0					
ANR	2507819	IdentifierDeclType	char *		2507717	0					
ANR	2507820	Identifier	c		2507717	1					
ANR	2507821	AssignmentExpression	* c = ret		2507717	2		=			
ANR	2507822	Identifier	ret		2507717	0					
ANR	2507823	Identifier	ret		2507717	1					
ANR	2507824	IdentifierDeclStatement	const char * oc = name + original_len - 3 ;	395:1:12413:12453	2507717	6	True				
ANR	2507825	IdentifierDecl	* oc = name + original_len - 3		2507717	0					
ANR	2507826	IdentifierDeclType	const char *		2507717	0					
ANR	2507827	Identifier	oc		2507717	1					
ANR	2507828	AssignmentExpression	* oc = name + original_len - 3		2507717	2		=			
ANR	2507829	Identifier	oc		2507717	0					
ANR	2507830	AdditiveExpression	name + original_len - 3		2507717	1		+			
ANR	2507831	Identifier	name		2507717	0					
ANR	2507832	AdditiveExpression	original_len - 3		2507717	1		-			
ANR	2507833	Identifier	original_len		2507717	0					
ANR	2507834	PrimaryExpression	3		2507717	1					
ANR	2507835	IdentifierDeclStatement	size_t part_len = 0 ;	396:1:12456:12475	2507717	7	True				
ANR	2507836	IdentifierDecl	part_len = 0		2507717	0					
ANR	2507837	IdentifierDeclType	size_t		2507717	0					
ANR	2507838	Identifier	part_len		2507717	1					
ANR	2507839	AssignmentExpression	part_len = 0		2507717	2		=			
ANR	2507840	Identifier	part_len		2507717	0					
ANR	2507841	PrimaryExpression	0		2507717	1					
ANR	2507842	WhileStatement	while ( oc >= name + 4 )		2507717	8					
ANR	2507843	Condition	oc >= name + 4	397:8:12485:12498	2507717	0	True				
ANR	2507844	RelationalExpression	oc >= name + 4		2507717	0		>=			
ANR	2507845	Identifier	oc		2507717	0					
ANR	2507846	AdditiveExpression	name + 4		2507717	1		+			
ANR	2507847	Identifier	name		2507717	0					
ANR	2507848	PrimaryExpression	4		2507717	1					
ANR	2507849	CompoundStatement		18:24:425:425	2507717	1					
ANR	2507850	IfStatement	if ( * oc == '@' )		2507717	0					
ANR	2507851	Condition	* oc == '@'	398:6:12509:12518	2507717	0	True				
ANR	2507852	EqualityExpression	* oc == '@'		2507717	0		==			
ANR	2507853	UnaryOperationExpression	* oc		2507717	0					
ANR	2507854	UnaryOperator	*		2507717	0					
ANR	2507855	Identifier	oc		2507717	1					
ANR	2507856	PrimaryExpression	'@'		2507717	1					
ANR	2507857	CompoundStatement		19:18:445:445	2507717	1					
ANR	2507858	ExpressionStatement	"memcpy ( c , oc + 1 , part_len )"	399:3:12526:12554	2507717	0	True				
ANR	2507859	CallExpression	"memcpy ( c , oc + 1 , part_len )"		2507717	0					
ANR	2507860	Callee	memcpy		2507717	0					
ANR	2507861	Identifier	memcpy		2507717	0					
ANR	2507862	ArgumentList	c		2507717	1					
ANR	2507863	Argument	c		2507717	0					
ANR	2507864	Identifier	c		2507717	0					
ANR	2507865	Argument	oc + 1		2507717	1					
ANR	2507866	AdditiveExpression	oc + 1		2507717	0		+			
ANR	2507867	Identifier	oc		2507717	0					
ANR	2507868	PrimaryExpression	1		2507717	1					
ANR	2507869	Argument	part_len		2507717	2					
ANR	2507870	Identifier	part_len		2507717	0					
ANR	2507871	ExpressionStatement	c += part_len	400:3:12559:12572	2507717	1	True				
ANR	2507872	AssignmentExpression	c += part_len		2507717	0		+=			
ANR	2507873	Identifier	c		2507717	0					
ANR	2507874	Identifier	part_len		2507717	1					
ANR	2507875	ExpressionStatement	* c ++ = ':'	401:3:12577:12587	2507717	2	True				
ANR	2507876	AssignmentExpression	* c ++ = ':'		2507717	0		=			
ANR	2507877	UnaryOperationExpression	* c ++		2507717	0					
ANR	2507878	UnaryOperator	*		2507717	0					
ANR	2507879	PostIncDecOperationExpression	c ++		2507717	1					
ANR	2507880	Identifier	c		2507717	0					
ANR	2507881	IncDec	++		2507717	1					
ANR	2507882	PrimaryExpression	':'		2507717	1					
ANR	2507883	ExpressionStatement	* c ++ = ':'	402:3:12592:12602	2507717	3	True				
ANR	2507884	AssignmentExpression	* c ++ = ':'		2507717	0		=			
ANR	2507885	UnaryOperationExpression	* c ++		2507717	0					
ANR	2507886	UnaryOperator	*		2507717	0					
ANR	2507887	PostIncDecOperationExpression	c ++		2507717	1					
ANR	2507888	Identifier	c		2507717	0					
ANR	2507889	IncDec	++		2507717	1					
ANR	2507890	PrimaryExpression	':'		2507717	1					
ANR	2507891	ExpressionStatement	part_len = 0	403:3:12607:12619	2507717	4	True				
ANR	2507892	AssignmentExpression	part_len = 0		2507717	0		=			
ANR	2507893	Identifier	part_len		2507717	0					
ANR	2507894	PrimaryExpression	0		2507717	1					
ANR	2507895	ElseStatement	else		2507717	0					
ANR	2507896	CompoundStatement		25:9:554:554	2507717	0					
ANR	2507897	ExpressionStatement	part_len ++	405:3:12635:12645	2507717	0	True				
ANR	2507898	PostIncDecOperationExpression	part_len ++		2507717	0					
ANR	2507899	Identifier	part_len		2507717	0					
ANR	2507900	IncDec	++		2507717	1					
ANR	2507901	ExpressionStatement	oc --	407:2:12653:12657	2507717	1	True				
ANR	2507902	PostIncDecOperationExpression	oc --		2507717	0					
ANR	2507903	Identifier	oc		2507717	0					
ANR	2507904	IncDec	--		2507717	1					
ANR	2507905	ExpressionStatement	"memcpy ( c , oc + 1 , part_len )"	409:1:12663:12691	2507717	9	True				
ANR	2507906	CallExpression	"memcpy ( c , oc + 1 , part_len )"		2507717	0					
ANR	2507907	Callee	memcpy		2507717	0					
ANR	2507908	Identifier	memcpy		2507717	0					
ANR	2507909	ArgumentList	c		2507717	1					
ANR	2507910	Argument	c		2507717	0					
ANR	2507911	Identifier	c		2507717	0					
ANR	2507912	Argument	oc + 1		2507717	1					
ANR	2507913	AdditiveExpression	oc + 1		2507717	0		+			
ANR	2507914	Identifier	oc		2507717	0					
ANR	2507915	PrimaryExpression	1		2507717	1					
ANR	2507916	Argument	part_len		2507717	2					
ANR	2507917	Identifier	part_len		2507717	0					
ANR	2507918	ExpressionStatement	c [ part_len ] = '\\0'	410:1:12694:12712	2507717	10	True				
ANR	2507919	AssignmentExpression	c [ part_len ] = '\\0'		2507717	0		=			
ANR	2507920	ArrayIndexing	c [ part_len ]		2507717	0					
ANR	2507921	Identifier	c		2507717	0					
ANR	2507922	Identifier	part_len		2507717	1					
ANR	2507923	PrimaryExpression	'\\0'		2507717	1					
ANR	2507924	ReturnStatement	return ret ;	411:1:12715:12725	2507717	11	True				
ANR	2507925	Identifier	ret		2507717	0					
ANR	2507926	ReturnType	R_API char *		2507717	1					
ANR	2507927	Identifier	r_anal_rtti_msvc_demangle_class_name		2507717	2					
ANR	2507928	ParameterList	const char * name		2507717	3					
ANR	2507929	Parameter	const char * name	380:49:12057:12072	2507717	0	True				
ANR	2507930	ParameterType	const char *		2507717	0					
ANR	2507931	Identifier	name		2507717	1					
ANR	2507932	CFGEntryNode	ENTRY		2507717		True				
ANR	2507933	CFGExitNode	EXIT		2507717		True				
ANR	2507934	Symbol	ret		2507717						
ANR	2507935	Symbol	malloc		2507717						
ANR	2507936	Symbol	NULL		2507717						
ANR	2507937	Symbol	c		2507717						
ANR	2507938	Symbol	* c ++		2507717						
ANR	2507939	Symbol	* part_len		2507717						
ANR	2507940	Symbol	* c		2507717						
ANR	2507941	Symbol	strlen		2507717						
ANR	2507942	Symbol	strncmp		2507717						
ANR	2507943	Symbol	part_len		2507717						
ANR	2507944	Symbol	original_len		2507717						
ANR	2507945	Symbol	oc		2507717						
ANR	2507946	Symbol	name		2507717						
ANR	2507947	Symbol	* oc		2507717						
ANR	2507948	Function	r_anal_rtti_msvc_print_complete_object_locator	414:0:12730:13184							
ANR	2507949	FunctionDef	"r_anal_rtti_msvc_print_complete_object_locator (RVTableContext * context , ut64 addr , int mode)"		2507948	0					
ANR	2507950	CompoundStatement		414:104:12834:13184	2507948	0					
ANR	2507951	IdentifierDeclStatement	rtti_complete_object_locator col ;	415:1:12837:12869	2507948	0	True				
ANR	2507952	IdentifierDecl	col		2507948	0					
ANR	2507953	IdentifierDeclType	rtti_complete_object_locator		2507948	0					
ANR	2507954	Identifier	col		2507948	1					
ANR	2507955	IfStatement	"if ( ! rtti_msvc_read_complete_object_locator ( context , addr , & col ) )"		2507948	1					
ANR	2507956	Condition	"! rtti_msvc_read_complete_object_locator ( context , addr , & col )"	416:5:12876:12936	2507948	0	True				
ANR	2507957	UnaryOperationExpression	"! rtti_msvc_read_complete_object_locator ( context , addr , & col )"		2507948	0					
ANR	2507958	UnaryOperator	!		2507948	0					
ANR	2507959	CallExpression	"rtti_msvc_read_complete_object_locator ( context , addr , & col )"		2507948	1					
ANR	2507960	Callee	rtti_msvc_read_complete_object_locator		2507948	0					
ANR	2507961	Identifier	rtti_msvc_read_complete_object_locator		2507948	0					
ANR	2507962	ArgumentList	context		2507948	1					
ANR	2507963	Argument	context		2507948	0					
ANR	2507964	Identifier	context		2507948	0					
ANR	2507965	Argument	addr		2507948	1					
ANR	2507966	Identifier	addr		2507948	0					
ANR	2507967	Argument	& col		2507948	2					
ANR	2507968	UnaryOperationExpression	& col		2507948	0					
ANR	2507969	UnaryOperator	&		2507948	0					
ANR	2507970	Identifier	col		2507948	1					
ANR	2507971	CompoundStatement		3:68:104:104	2507948	1					
ANR	2507972	Statement	eprintf	417:2:12943:12949	2507948	0	True				
ANR	2507973	Statement	(	417:10:12951:12951	2507948	1	True				
ANR	2507974	Statement	"""Failed to parse Complete Object Locator at 0x%08"""	417:11:12952:13001	2507948	2	True				
ANR	2507975	Statement	PFMT64x	417:61:13002:13008	2507948	3	True				
ANR	2507976	Statement	"""\\n"""	417:68:13009:13012	2507948	4	True				
ANR	2507977	Statement	","	417:72:13013:13013	2507948	5	True				
ANR	2507978	Statement	addr	417:74:13015:13018	2507948	6	True				
ANR	2507979	Statement	)	417:78:13019:13019	2507948	7	True				
ANR	2507980	ExpressionStatement		417:79:13020:13020	2507948	8	True				
ANR	2507981	ReturnStatement	return ;	418:2:13024:13030	2507948	9	True				
ANR	2507982	IfStatement	if ( mode == 'j' )		2507948	2					
ANR	2507983	Condition	mode == 'j'	421:5:13041:13051	2507948	0	True				
ANR	2507984	EqualityExpression	mode == 'j'		2507948	0		==			
ANR	2507985	Identifier	mode		2507948	0					
ANR	2507986	PrimaryExpression	'j'		2507948	1					
ANR	2507987	CompoundStatement		8:18:219:219	2507948	1					
ANR	2507988	ExpressionStatement	rtti_msvc_print_complete_object_locator_json ( & col )	422:2:13058:13109	2507948	0	True				
ANR	2507989	CallExpression	rtti_msvc_print_complete_object_locator_json ( & col )		2507948	0					
ANR	2507990	Callee	rtti_msvc_print_complete_object_locator_json		2507948	0					
ANR	2507991	Identifier	rtti_msvc_print_complete_object_locator_json		2507948	0					
ANR	2507992	ArgumentList	& col		2507948	1					
ANR	2507993	Argument	& col		2507948	0					
ANR	2507994	UnaryOperationExpression	& col		2507948	0					
ANR	2507995	UnaryOperator	&		2507948	0					
ANR	2507996	Identifier	col		2507948	1					
ANR	2507997	ElseStatement	else		2507948	0					
ANR	2507998	CompoundStatement		10:8:284:284	2507948	0					
ANR	2507999	ExpressionStatement	"rtti_msvc_print_complete_object_locator ( & col , addr , """" )"	424:2:13123:13179	2507948	0	True				
ANR	2508000	CallExpression	"rtti_msvc_print_complete_object_locator ( & col , addr , """" )"		2507948	0					
ANR	2508001	Callee	rtti_msvc_print_complete_object_locator		2507948	0					
ANR	2508002	Identifier	rtti_msvc_print_complete_object_locator		2507948	0					
ANR	2508003	ArgumentList	& col		2507948	1					
ANR	2508004	Argument	& col		2507948	0					
ANR	2508005	UnaryOperationExpression	& col		2507948	0					
ANR	2508006	UnaryOperator	&		2507948	0					
ANR	2508007	Identifier	col		2507948	1					
ANR	2508008	Argument	addr		2507948	1					
ANR	2508009	Identifier	addr		2507948	0					
ANR	2508010	Argument	""""""		2507948	2					
ANR	2508011	PrimaryExpression	""""""		2507948	0					
ANR	2508012	ReturnType	R_API void		2507948	1					
ANR	2508013	Identifier	r_anal_rtti_msvc_print_complete_object_locator		2507948	2					
ANR	2508014	ParameterList	"RVTableContext * context , ut64 addr , int mode"		2507948	3					
ANR	2508015	Parameter	RVTableContext * context	414:58:12788:12810	2507948	0	True				
ANR	2508016	ParameterType	RVTableContext *		2507948	0					
ANR	2508017	Identifier	context		2507948	1					
ANR	2508018	Parameter	ut64 addr	414:83:12813:12821	2507948	1	True				
ANR	2508019	ParameterType	ut64		2507948	0					
ANR	2508020	Identifier	addr		2507948	1					
ANR	2508021	Parameter	int mode	414:94:12824:12831	2507948	2	True				
ANR	2508022	ParameterType	int		2507948	0					
ANR	2508023	Identifier	mode		2507948	1					
ANR	2508024	CFGEntryNode	ENTRY		2507948		True				
ANR	2508025	CFGExitNode	EXIT		2507948		True				
ANR	2508026	Symbol	mode		2507948						
ANR	2508027	Symbol	col		2507948						
ANR	2508028	Symbol	& col		2507948						
ANR	2508029	Symbol	rtti_msvc_read_complete_object_locator		2507948						
ANR	2508030	Symbol	context		2507948						
ANR	2508031	Symbol	addr		2507948						
ANR	2508032	Function	r_anal_rtti_msvc_print_type_descriptor	428:0:13187:13632							
ANR	2508033	FunctionDef	"r_anal_rtti_msvc_print_type_descriptor (RVTableContext * context , ut64 addr , int mode)"		2508032	0					
ANR	2508034	CompoundStatement		428:96:13283:13632	2508032	0					
ANR	2508035	IdentifierDeclStatement	rtti_type_descriptor td = { 0 } ;	429:1:13286:13317	2508032	0	True				
ANR	2508036	IdentifierDecl	td = { 0 }		2508032	0					
ANR	2508037	IdentifierDeclType	rtti_type_descriptor		2508032	0					
ANR	2508038	Identifier	td		2508032	1					
ANR	2508039	AssignmentExpression	td = { 0 }		2508032	2		=			
ANR	2508040	Identifier	td		2508032	0					
ANR	2508041	InitializerList	0		2508032	1					
ANR	2508042	PrimaryExpression	0		2508032	0					
ANR	2508043	IfStatement	"if ( ! rtti_msvc_read_type_descriptor ( context , addr , & td ) )"		2508032	1					
ANR	2508044	Condition	"! rtti_msvc_read_type_descriptor ( context , addr , & td )"	430:5:13324:13375	2508032	0	True				
ANR	2508045	UnaryOperationExpression	"! rtti_msvc_read_type_descriptor ( context , addr , & td )"		2508032	0					
ANR	2508046	UnaryOperator	!		2508032	0					
ANR	2508047	CallExpression	"rtti_msvc_read_type_descriptor ( context , addr , & td )"		2508032	1					
ANR	2508048	Callee	rtti_msvc_read_type_descriptor		2508032	0					
ANR	2508049	Identifier	rtti_msvc_read_type_descriptor		2508032	0					
ANR	2508050	ArgumentList	context		2508032	1					
ANR	2508051	Argument	context		2508032	0					
ANR	2508052	Identifier	context		2508032	0					
ANR	2508053	Argument	addr		2508032	1					
ANR	2508054	Identifier	addr		2508032	0					
ANR	2508055	Argument	& td		2508032	2					
ANR	2508056	UnaryOperationExpression	& td		2508032	0					
ANR	2508057	UnaryOperator	&		2508032	0					
ANR	2508058	Identifier	td		2508032	1					
ANR	2508059	CompoundStatement		3:59:94:94	2508032	1					
ANR	2508060	Statement	eprintf	431:2:13382:13388	2508032	0	True				
ANR	2508061	Statement	(	431:10:13390:13390	2508032	1	True				
ANR	2508062	Statement	"""Failed to parse Type Descriptor at 0x%08"""	431:11:13391:13432	2508032	2	True				
ANR	2508063	Statement	PFMT64x	431:53:13433:13439	2508032	3	True				
ANR	2508064	Statement	"""\\n"""	431:60:13440:13443	2508032	4	True				
ANR	2508065	Statement	","	431:64:13444:13444	2508032	5	True				
ANR	2508066	Statement	addr	431:66:13446:13449	2508032	6	True				
ANR	2508067	Statement	)	431:70:13450:13450	2508032	7	True				
ANR	2508068	ExpressionStatement		431:71:13451:13451	2508032	8	True				
ANR	2508069	ReturnStatement	return ;	432:2:13455:13461	2508032	9	True				
ANR	2508070	IfStatement	if ( mode == 'j' )		2508032	2					
ANR	2508071	Condition	mode == 'j'	435:5:13472:13482	2508032	0	True				
ANR	2508072	EqualityExpression	mode == 'j'		2508032	0		==			
ANR	2508073	Identifier	mode		2508032	0					
ANR	2508074	PrimaryExpression	'j'		2508032	1					
ANR	2508075	CompoundStatement		8:18:201:201	2508032	1					
ANR	2508076	ExpressionStatement	rtti_msvc_print_type_descriptor_json ( & td )	436:2:13489:13531	2508032	0	True				
ANR	2508077	CallExpression	rtti_msvc_print_type_descriptor_json ( & td )		2508032	0					
ANR	2508078	Callee	rtti_msvc_print_type_descriptor_json		2508032	0					
ANR	2508079	Identifier	rtti_msvc_print_type_descriptor_json		2508032	0					
ANR	2508080	ArgumentList	& td		2508032	1					
ANR	2508081	Argument	& td		2508032	0					
ANR	2508082	UnaryOperationExpression	& td		2508032	0					
ANR	2508083	UnaryOperator	&		2508032	0					
ANR	2508084	Identifier	td		2508032	1					
ANR	2508085	ElseStatement	else		2508032	0					
ANR	2508086	CompoundStatement		10:8:257:257	2508032	0					
ANR	2508087	ExpressionStatement	"rtti_msvc_print_type_descriptor ( & td , addr , """" )"	438:2:13545:13592	2508032	0	True				
ANR	2508088	CallExpression	"rtti_msvc_print_type_descriptor ( & td , addr , """" )"		2508032	0					
ANR	2508089	Callee	rtti_msvc_print_type_descriptor		2508032	0					
ANR	2508090	Identifier	rtti_msvc_print_type_descriptor		2508032	0					
ANR	2508091	ArgumentList	& td		2508032	1					
ANR	2508092	Argument	& td		2508032	0					
ANR	2508093	UnaryOperationExpression	& td		2508032	0					
ANR	2508094	UnaryOperator	&		2508032	0					
ANR	2508095	Identifier	td		2508032	1					
ANR	2508096	Argument	addr		2508032	1					
ANR	2508097	Identifier	addr		2508032	0					
ANR	2508098	Argument	""""""		2508032	2					
ANR	2508099	PrimaryExpression	""""""		2508032	0					
ANR	2508100	ExpressionStatement	rtti_type_descriptor_fini ( & td )	441:1:13599:13630	2508032	3	True				
ANR	2508101	CallExpression	rtti_type_descriptor_fini ( & td )		2508032	0					
ANR	2508102	Callee	rtti_type_descriptor_fini		2508032	0					
ANR	2508103	Identifier	rtti_type_descriptor_fini		2508032	0					
ANR	2508104	ArgumentList	& td		2508032	1					
ANR	2508105	Argument	& td		2508032	0					
ANR	2508106	UnaryOperationExpression	& td		2508032	0					
ANR	2508107	UnaryOperator	&		2508032	0					
ANR	2508108	Identifier	td		2508032	1					
ANR	2508109	ReturnType	R_API void		2508032	1					
ANR	2508110	Identifier	r_anal_rtti_msvc_print_type_descriptor		2508032	2					
ANR	2508111	ParameterList	"RVTableContext * context , ut64 addr , int mode"		2508032	3					
ANR	2508112	Parameter	RVTableContext * context	428:50:13237:13259	2508032	0	True				
ANR	2508113	ParameterType	RVTableContext *		2508032	0					
ANR	2508114	Identifier	context		2508032	1					
ANR	2508115	Parameter	ut64 addr	428:75:13262:13270	2508032	1	True				
ANR	2508116	ParameterType	ut64		2508032	0					
ANR	2508117	Identifier	addr		2508032	1					
ANR	2508118	Parameter	int mode	428:86:13273:13280	2508032	2	True				
ANR	2508119	ParameterType	int		2508032	0					
ANR	2508120	Identifier	mode		2508032	1					
ANR	2508121	CFGEntryNode	ENTRY		2508032		True				
ANR	2508122	CFGExitNode	EXIT		2508032		True				
ANR	2508123	Symbol	mode		2508032						
ANR	2508124	Symbol	td		2508032						
ANR	2508125	Symbol	rtti_msvc_read_type_descriptor		2508032						
ANR	2508126	Symbol	context		2508032						
ANR	2508127	Symbol	& td		2508032						
ANR	2508128	Symbol	addr		2508032						
ANR	2508129	Function	r_anal_rtti_msvc_print_class_hierarchy_descriptor	444:0:13635:14107							
ANR	2508130	FunctionDef	"r_anal_rtti_msvc_print_class_hierarchy_descriptor (RVTableContext * context , ut64 addr , int mode)"		2508129	0					
ANR	2508131	CompoundStatement		444:107:13742:14107	2508129	0					
ANR	2508132	IdentifierDeclStatement	rtti_class_hierarchy_descriptor chd ;	445:1:13745:13780	2508129	0	True				
ANR	2508133	IdentifierDecl	chd		2508129	0					
ANR	2508134	IdentifierDeclType	rtti_class_hierarchy_descriptor		2508129	0					
ANR	2508135	Identifier	chd		2508129	1					
ANR	2508136	IfStatement	"if ( ! rtti_msvc_read_class_hierarchy_descriptor ( context , addr , & chd ) )"		2508129	1					
ANR	2508137	Condition	"! rtti_msvc_read_class_hierarchy_descriptor ( context , addr , & chd )"	446:5:13787:13850	2508129	0	True				
ANR	2508138	UnaryOperationExpression	"! rtti_msvc_read_class_hierarchy_descriptor ( context , addr , & chd )"		2508129	0					
ANR	2508139	UnaryOperator	!		2508129	0					
ANR	2508140	CallExpression	"rtti_msvc_read_class_hierarchy_descriptor ( context , addr , & chd )"		2508129	1					
ANR	2508141	Callee	rtti_msvc_read_class_hierarchy_descriptor		2508129	0					
ANR	2508142	Identifier	rtti_msvc_read_class_hierarchy_descriptor		2508129	0					
ANR	2508143	ArgumentList	context		2508129	1					
ANR	2508144	Argument	context		2508129	0					
ANR	2508145	Identifier	context		2508129	0					
ANR	2508146	Argument	addr		2508129	1					
ANR	2508147	Identifier	addr		2508129	0					
ANR	2508148	Argument	& chd		2508129	2					
ANR	2508149	UnaryOperationExpression	& chd		2508129	0					
ANR	2508150	UnaryOperator	&		2508129	0					
ANR	2508151	Identifier	chd		2508129	1					
ANR	2508152	CompoundStatement		3:71:110:110	2508129	1					
ANR	2508153	Statement	eprintf	447:2:13857:13863	2508129	0	True				
ANR	2508154	Statement	(	447:10:13865:13865	2508129	1	True				
ANR	2508155	Statement	"""Failed to parse Class Hierarchy Descriptor at 0x%08"""	447:11:13866:13918	2508129	2	True				
ANR	2508156	Statement	PFMT64x	447:64:13919:13925	2508129	3	True				
ANR	2508157	Statement	"""\\n"""	447:71:13926:13929	2508129	4	True				
ANR	2508158	Statement	","	447:75:13930:13930	2508129	5	True				
ANR	2508159	Statement	addr	447:77:13932:13935	2508129	6	True				
ANR	2508160	Statement	)	447:81:13936:13936	2508129	7	True				
ANR	2508161	ExpressionStatement		447:82:13937:13937	2508129	8	True				
ANR	2508162	ReturnStatement	return ;	448:2:13941:13947	2508129	9	True				
ANR	2508163	IfStatement	if ( mode == 'j' )		2508129	2					
ANR	2508164	Condition	mode == 'j'	451:5:13958:13968	2508129	0	True				
ANR	2508165	EqualityExpression	mode == 'j'		2508129	0		==			
ANR	2508166	Identifier	mode		2508129	0					
ANR	2508167	PrimaryExpression	'j'		2508129	1					
ANR	2508168	CompoundStatement		8:18:228:228	2508129	1					
ANR	2508169	ExpressionStatement	rtti_msvc_print_class_hierarchy_descriptor_json ( & chd )	452:2:13975:14029	2508129	0	True				
ANR	2508170	CallExpression	rtti_msvc_print_class_hierarchy_descriptor_json ( & chd )		2508129	0					
ANR	2508171	Callee	rtti_msvc_print_class_hierarchy_descriptor_json		2508129	0					
ANR	2508172	Identifier	rtti_msvc_print_class_hierarchy_descriptor_json		2508129	0					
ANR	2508173	ArgumentList	& chd		2508129	1					
ANR	2508174	Argument	& chd		2508129	0					
ANR	2508175	UnaryOperationExpression	& chd		2508129	0					
ANR	2508176	UnaryOperator	&		2508129	0					
ANR	2508177	Identifier	chd		2508129	1					
ANR	2508178	ElseStatement	else		2508129	0					
ANR	2508179	CompoundStatement		10:8:296:296	2508129	0					
ANR	2508180	ExpressionStatement	"rtti_msvc_print_class_hierarchy_descriptor ( & chd , addr , """" )"	454:2:14043:14102	2508129	0	True				
ANR	2508181	CallExpression	"rtti_msvc_print_class_hierarchy_descriptor ( & chd , addr , """" )"		2508129	0					
ANR	2508182	Callee	rtti_msvc_print_class_hierarchy_descriptor		2508129	0					
ANR	2508183	Identifier	rtti_msvc_print_class_hierarchy_descriptor		2508129	0					
ANR	2508184	ArgumentList	& chd		2508129	1					
ANR	2508185	Argument	& chd		2508129	0					
ANR	2508186	UnaryOperationExpression	& chd		2508129	0					
ANR	2508187	UnaryOperator	&		2508129	0					
ANR	2508188	Identifier	chd		2508129	1					
ANR	2508189	Argument	addr		2508129	1					
ANR	2508190	Identifier	addr		2508129	0					
ANR	2508191	Argument	""""""		2508129	2					
ANR	2508192	PrimaryExpression	""""""		2508129	0					
ANR	2508193	ReturnType	R_API void		2508129	1					
ANR	2508194	Identifier	r_anal_rtti_msvc_print_class_hierarchy_descriptor		2508129	2					
ANR	2508195	ParameterList	"RVTableContext * context , ut64 addr , int mode"		2508129	3					
ANR	2508196	Parameter	RVTableContext * context	444:61:13696:13718	2508129	0	True				
ANR	2508197	ParameterType	RVTableContext *		2508129	0					
ANR	2508198	Identifier	context		2508129	1					
ANR	2508199	Parameter	ut64 addr	444:86:13721:13729	2508129	1	True				
ANR	2508200	ParameterType	ut64		2508129	0					
ANR	2508201	Identifier	addr		2508129	1					
ANR	2508202	Parameter	int mode	444:97:13732:13739	2508129	2	True				
ANR	2508203	ParameterType	int		2508129	0					
ANR	2508204	Identifier	mode		2508129	1					
ANR	2508205	CFGEntryNode	ENTRY		2508129		True				
ANR	2508206	CFGExitNode	EXIT		2508129		True				
ANR	2508207	Symbol	mode		2508129						
ANR	2508208	Symbol	rtti_msvc_read_class_hierarchy_descriptor		2508129						
ANR	2508209	Symbol	& chd		2508129						
ANR	2508210	Symbol	context		2508129						
ANR	2508211	Symbol	addr		2508129						
ANR	2508212	Symbol	chd		2508129						
ANR	2508213	Function	r_anal_rtti_msvc_print_base_class_descriptor	458:0:14110:14546							
ANR	2508214	FunctionDef	"r_anal_rtti_msvc_print_base_class_descriptor (RVTableContext * context , ut64 addr , int mode)"		2508213	0					
ANR	2508215	CompoundStatement		458:102:14212:14546	2508213	0					
ANR	2508216	IdentifierDeclStatement	rtti_base_class_descriptor bcd ;	459:1:14215:14245	2508213	0	True				
ANR	2508217	IdentifierDecl	bcd		2508213	0					
ANR	2508218	IdentifierDeclType	rtti_base_class_descriptor		2508213	0					
ANR	2508219	Identifier	bcd		2508213	1					
ANR	2508220	IfStatement	"if ( ! rtti_msvc_read_base_class_descriptor ( context , addr , & bcd ) )"		2508213	1					
ANR	2508221	Condition	"! rtti_msvc_read_base_class_descriptor ( context , addr , & bcd )"	460:5:14252:14310	2508213	0	True				
ANR	2508222	UnaryOperationExpression	"! rtti_msvc_read_base_class_descriptor ( context , addr , & bcd )"		2508213	0					
ANR	2508223	UnaryOperator	!		2508213	0					
ANR	2508224	CallExpression	"rtti_msvc_read_base_class_descriptor ( context , addr , & bcd )"		2508213	1					
ANR	2508225	Callee	rtti_msvc_read_base_class_descriptor		2508213	0					
ANR	2508226	Identifier	rtti_msvc_read_base_class_descriptor		2508213	0					
ANR	2508227	ArgumentList	context		2508213	1					
ANR	2508228	Argument	context		2508213	0					
ANR	2508229	Identifier	context		2508213	0					
ANR	2508230	Argument	addr		2508213	1					
ANR	2508231	Identifier	addr		2508213	0					
ANR	2508232	Argument	& bcd		2508213	2					
ANR	2508233	UnaryOperationExpression	& bcd		2508213	0					
ANR	2508234	UnaryOperator	&		2508213	0					
ANR	2508235	Identifier	bcd		2508213	1					
ANR	2508236	CompoundStatement		3:66:100:100	2508213	1					
ANR	2508237	Statement	eprintf	461:2:14317:14323	2508213	0	True				
ANR	2508238	Statement	(	461:10:14325:14325	2508213	1	True				
ANR	2508239	Statement	"""Failed to parse Base Class Descriptor at 0x%08"""	461:11:14326:14373	2508213	2	True				
ANR	2508240	Statement	PFMT64x	461:59:14374:14380	2508213	3	True				
ANR	2508241	Statement	"""\\n"""	461:66:14381:14384	2508213	4	True				
ANR	2508242	Statement	","	461:70:14385:14385	2508213	5	True				
ANR	2508243	Statement	addr	461:72:14387:14390	2508213	6	True				
ANR	2508244	Statement	)	461:76:14391:14391	2508213	7	True				
ANR	2508245	ExpressionStatement		461:77:14392:14392	2508213	8	True				
ANR	2508246	ReturnStatement	return ;	462:2:14396:14402	2508213	9	True				
ANR	2508247	IfStatement	if ( mode == 'j' )		2508213	2					
ANR	2508248	Condition	mode == 'j'	465:5:14413:14423	2508213	0	True				
ANR	2508249	EqualityExpression	mode == 'j'		2508213	0		==			
ANR	2508250	Identifier	mode		2508213	0					
ANR	2508251	PrimaryExpression	'j'		2508213	1					
ANR	2508252	CompoundStatement		8:18:213:213	2508213	1					
ANR	2508253	ExpressionStatement	rtti_msvc_print_base_class_descriptor_json ( & bcd )	466:2:14430:14479	2508213	0	True				
ANR	2508254	CallExpression	rtti_msvc_print_base_class_descriptor_json ( & bcd )		2508213	0					
ANR	2508255	Callee	rtti_msvc_print_base_class_descriptor_json		2508213	0					
ANR	2508256	Identifier	rtti_msvc_print_base_class_descriptor_json		2508213	0					
ANR	2508257	ArgumentList	& bcd		2508213	1					
ANR	2508258	Argument	& bcd		2508213	0					
ANR	2508259	UnaryOperationExpression	& bcd		2508213	0					
ANR	2508260	UnaryOperator	&		2508213	0					
ANR	2508261	Identifier	bcd		2508213	1					
ANR	2508262	ElseStatement	else		2508213	0					
ANR	2508263	CompoundStatement		10:8:276:276	2508213	0					
ANR	2508264	ExpressionStatement	"rtti_msvc_print_base_class_descriptor ( & bcd , """" )"	468:2:14493:14541	2508213	0	True				
ANR	2508265	CallExpression	"rtti_msvc_print_base_class_descriptor ( & bcd , """" )"		2508213	0					
ANR	2508266	Callee	rtti_msvc_print_base_class_descriptor		2508213	0					
ANR	2508267	Identifier	rtti_msvc_print_base_class_descriptor		2508213	0					
ANR	2508268	ArgumentList	& bcd		2508213	1					
ANR	2508269	Argument	& bcd		2508213	0					
ANR	2508270	UnaryOperationExpression	& bcd		2508213	0					
ANR	2508271	UnaryOperator	&		2508213	0					
ANR	2508272	Identifier	bcd		2508213	1					
ANR	2508273	Argument	""""""		2508213	1					
ANR	2508274	PrimaryExpression	""""""		2508213	0					
ANR	2508275	ReturnType	R_API void		2508213	1					
ANR	2508276	Identifier	r_anal_rtti_msvc_print_base_class_descriptor		2508213	2					
ANR	2508277	ParameterList	"RVTableContext * context , ut64 addr , int mode"		2508213	3					
ANR	2508278	Parameter	RVTableContext * context	458:56:14166:14188	2508213	0	True				
ANR	2508279	ParameterType	RVTableContext *		2508213	0					
ANR	2508280	Identifier	context		2508213	1					
ANR	2508281	Parameter	ut64 addr	458:81:14191:14199	2508213	1	True				
ANR	2508282	ParameterType	ut64		2508213	0					
ANR	2508283	Identifier	addr		2508213	1					
ANR	2508284	Parameter	int mode	458:92:14202:14209	2508213	2	True				
ANR	2508285	ParameterType	int		2508213	0					
ANR	2508286	Identifier	mode		2508213	1					
ANR	2508287	CFGEntryNode	ENTRY		2508213		True				
ANR	2508288	CFGExitNode	EXIT		2508213		True				
ANR	2508289	Symbol	mode		2508213						
ANR	2508290	Symbol	bcd		2508213						
ANR	2508291	Symbol	context		2508213						
ANR	2508292	Symbol	addr		2508213						
ANR	2508293	Symbol	rtti_msvc_read_base_class_descriptor		2508213						
ANR	2508294	Symbol	& bcd		2508213						
ANR	2508295	Function	rtti_msvc_print_complete_object_locator_recurse	472:0:14549:18329							
ANR	2508296	FunctionDef	"rtti_msvc_print_complete_object_locator_recurse (RVTableContext * context , ut64 atAddress , int mode , bool strict)"		2508295	0					
ANR	2508297	CompoundStatement		472:124:14673:18329	2508295	0					
ANR	2508298	IdentifierDeclStatement	bool use_json = mode == 'j' ;	473:1:14676:14703	2508295	0	True				
ANR	2508299	IdentifierDecl	use_json = mode == 'j'		2508295	0					
ANR	2508300	IdentifierDeclType	bool		2508295	0					
ANR	2508301	Identifier	use_json		2508295	1					
ANR	2508302	AssignmentExpression	use_json = mode == 'j'		2508295	2		=			
ANR	2508303	Identifier	use_json		2508295	0					
ANR	2508304	EqualityExpression	mode == 'j'		2508295	1		==			
ANR	2508305	Identifier	mode		2508295	0					
ANR	2508306	PrimaryExpression	'j'		2508295	1					
ANR	2508307	IdentifierDeclStatement	ut64 colRefAddr = atAddress - context -> word_size ;	475:1:14707:14755	2508295	1	True				
ANR	2508308	IdentifierDecl	colRefAddr = atAddress - context -> word_size		2508295	0					
ANR	2508309	IdentifierDeclType	ut64		2508295	0					
ANR	2508310	Identifier	colRefAddr		2508295	1					
ANR	2508311	AssignmentExpression	colRefAddr = atAddress - context -> word_size		2508295	2		=			
ANR	2508312	Identifier	colRefAddr		2508295	0					
ANR	2508313	AdditiveExpression	atAddress - context -> word_size		2508295	1		-			
ANR	2508314	Identifier	atAddress		2508295	0					
ANR	2508315	PtrMemberAccess	context -> word_size		2508295	1					
ANR	2508316	Identifier	context		2508295	0					
ANR	2508317	Identifier	word_size		2508295	1					
ANR	2508318	IdentifierDeclStatement	ut64 colAddr ;	476:1:14758:14770	2508295	2	True				
ANR	2508319	IdentifierDecl	colAddr		2508295	0					
ANR	2508320	IdentifierDeclType	ut64		2508295	0					
ANR	2508321	Identifier	colAddr		2508295	1					
ANR	2508322	IfStatement	"if ( ! context -> read_addr ( context -> anal , colRefAddr , & colAddr ) )"		2508295	3					
ANR	2508323	Condition	"! context -> read_addr ( context -> anal , colRefAddr , & colAddr )"	477:5:14777:14833	2508295	0	True				
ANR	2508324	UnaryOperationExpression	"! context -> read_addr ( context -> anal , colRefAddr , & colAddr )"		2508295	0					
ANR	2508325	UnaryOperator	!		2508295	0					
ANR	2508326	CallExpression	"context -> read_addr ( context -> anal , colRefAddr , & colAddr )"		2508295	1					
ANR	2508327	Callee	context -> read_addr		2508295	0					
ANR	2508328	PtrMemberAccess	context -> read_addr		2508295	0					
ANR	2508329	Identifier	context		2508295	0					
ANR	2508330	Identifier	read_addr		2508295	1					
ANR	2508331	ArgumentList	context -> anal		2508295	1					
ANR	2508332	Argument	context -> anal		2508295	0					
ANR	2508333	PtrMemberAccess	context -> anal		2508295	0					
ANR	2508334	Identifier	context		2508295	0					
ANR	2508335	Identifier	anal		2508295	1					
ANR	2508336	Argument	colRefAddr		2508295	1					
ANR	2508337	Identifier	colRefAddr		2508295	0					
ANR	2508338	Argument	& colAddr		2508295	2					
ANR	2508339	UnaryOperationExpression	& colAddr		2508295	0					
ANR	2508340	UnaryOperator	&		2508295	0					
ANR	2508341	Identifier	colAddr		2508295	1					
ANR	2508342	CompoundStatement		6:64:162:162	2508295	1					
ANR	2508343	ReturnStatement	return false ;	478:2:14840:14852	2508295	0	True				
ANR	2508344	Identifier	false		2508295	0					
ANR	2508345	IdentifierDeclStatement	rtti_complete_object_locator col ;	482:1:14887:14919	2508295	4	True				
ANR	2508346	IdentifierDecl	col		2508295	0					
ANR	2508347	IdentifierDeclType	rtti_complete_object_locator		2508295	0					
ANR	2508348	Identifier	col		2508295	1					
ANR	2508349	IfStatement	"if ( ! rtti_msvc_read_complete_object_locator ( context , colAddr , & col ) )"		2508295	5					
ANR	2508350	Condition	"! rtti_msvc_read_complete_object_locator ( context , colAddr , & col )"	483:5:14926:14989	2508295	0	True				
ANR	2508351	UnaryOperationExpression	"! rtti_msvc_read_complete_object_locator ( context , colAddr , & col )"		2508295	0					
ANR	2508352	UnaryOperator	!		2508295	0					
ANR	2508353	CallExpression	"rtti_msvc_read_complete_object_locator ( context , colAddr , & col )"		2508295	1					
ANR	2508354	Callee	rtti_msvc_read_complete_object_locator		2508295	0					
ANR	2508355	Identifier	rtti_msvc_read_complete_object_locator		2508295	0					
ANR	2508356	ArgumentList	context		2508295	1					
ANR	2508357	Argument	context		2508295	0					
ANR	2508358	Identifier	context		2508295	0					
ANR	2508359	Argument	colAddr		2508295	1					
ANR	2508360	Identifier	colAddr		2508295	0					
ANR	2508361	Argument	& col		2508295	2					
ANR	2508362	UnaryOperationExpression	& col		2508295	0					
ANR	2508363	UnaryOperator	&		2508295	0					
ANR	2508364	Identifier	col		2508295	1					
ANR	2508365	CompoundStatement		12:71:318:318	2508295	1					
ANR	2508366	IfStatement	if ( ! strict )		2508295	0					
ANR	2508367	Condition	! strict	484:6:15000:15006	2508295	0	True				
ANR	2508368	UnaryOperationExpression	! strict		2508295	0					
ANR	2508369	UnaryOperator	!		2508295	0					
ANR	2508370	Identifier	strict		2508295	1					
ANR	2508371	CompoundStatement		13:15:335:335	2508295	1					
ANR	2508372	Statement	eprintf	485:3:15014:15020	2508295	0	True				
ANR	2508373	Statement	(	485:11:15022:15022	2508295	1	True				
ANR	2508374	Statement	"""Failed to parse Complete Object Locator at 0x%08"""	485:12:15023:15072	2508295	2	True				
ANR	2508375	Statement	PFMT64x	485:62:15073:15079	2508295	3	True				
ANR	2508376	Statement	""" (referenced from 0x%08"""	485:69:15080:15104	2508295	4	True				
ANR	2508377	Statement	PFMT64x	485:94:15105:15111	2508295	5	True				
ANR	2508378	Statement	""")\\n"""	485:101:15112:15116	2508295	6	True				
ANR	2508379	Statement	","	485:106:15117:15117	2508295	7	True				
ANR	2508380	Statement	colAddr	485:108:15119:15125	2508295	8	True				
ANR	2508381	Statement	","	485:115:15126:15126	2508295	9	True				
ANR	2508382	Statement	colRefAddr	485:117:15128:15137	2508295	10	True				
ANR	2508383	Statement	)	485:127:15138:15138	2508295	11	True				
ANR	2508384	ExpressionStatement		485:128:15139:15139	2508295	12	True				
ANR	2508385	ReturnStatement	return false ;	487:2:15147:15159	2508295	1	True				
ANR	2508386	Identifier	false		2508295	0					
ANR	2508387	IdentifierDeclStatement	"ut64 typeDescriptorAddr = rtti_msvc_addr ( context , colAddr , col . object_base , col . type_descriptor_addr ) ;"	491:1:15186:15288	2508295	6	True				
ANR	2508388	IdentifierDecl	"typeDescriptorAddr = rtti_msvc_addr ( context , colAddr , col . object_base , col . type_descriptor_addr )"		2508295	0					
ANR	2508389	IdentifierDeclType	ut64		2508295	0					
ANR	2508390	Identifier	typeDescriptorAddr		2508295	1					
ANR	2508391	AssignmentExpression	"typeDescriptorAddr = rtti_msvc_addr ( context , colAddr , col . object_base , col . type_descriptor_addr )"		2508295	2		=			
ANR	2508392	Identifier	typeDescriptorAddr		2508295	0					
ANR	2508393	CallExpression	"rtti_msvc_addr ( context , colAddr , col . object_base , col . type_descriptor_addr )"		2508295	1					
ANR	2508394	Callee	rtti_msvc_addr		2508295	0					
ANR	2508395	Identifier	rtti_msvc_addr		2508295	0					
ANR	2508396	ArgumentList	context		2508295	1					
ANR	2508397	Argument	context		2508295	0					
ANR	2508398	Identifier	context		2508295	0					
ANR	2508399	Argument	colAddr		2508295	1					
ANR	2508400	Identifier	colAddr		2508295	0					
ANR	2508401	Argument	col . object_base		2508295	2					
ANR	2508402	MemberAccess	col . object_base		2508295	0					
ANR	2508403	Identifier	col		2508295	0					
ANR	2508404	Identifier	object_base		2508295	1					
ANR	2508405	Argument	col . type_descriptor_addr		2508295	3					
ANR	2508406	MemberAccess	col . type_descriptor_addr		2508295	0					
ANR	2508407	Identifier	col		2508295	0					
ANR	2508408	Identifier	type_descriptor_addr		2508295	1					
ANR	2508409	IdentifierDeclStatement	rtti_type_descriptor td = { 0 } ;	492:1:15291:15322	2508295	7	True				
ANR	2508410	IdentifierDecl	td = { 0 }		2508295	0					
ANR	2508411	IdentifierDeclType	rtti_type_descriptor		2508295	0					
ANR	2508412	Identifier	td		2508295	1					
ANR	2508413	AssignmentExpression	td = { 0 }		2508295	2		=			
ANR	2508414	Identifier	td		2508295	0					
ANR	2508415	InitializerList	0		2508295	1					
ANR	2508416	PrimaryExpression	0		2508295	0					
ANR	2508417	IfStatement	"if ( ! rtti_msvc_read_type_descriptor ( context , typeDescriptorAddr , & td ) )"		2508295	8					
ANR	2508418	Condition	"! rtti_msvc_read_type_descriptor ( context , typeDescriptorAddr , & td )"	493:5:15329:15394	2508295	0	True				
ANR	2508419	UnaryOperationExpression	"! rtti_msvc_read_type_descriptor ( context , typeDescriptorAddr , & td )"		2508295	0					
ANR	2508420	UnaryOperator	!		2508295	0					
ANR	2508421	CallExpression	"rtti_msvc_read_type_descriptor ( context , typeDescriptorAddr , & td )"		2508295	1					
ANR	2508422	Callee	rtti_msvc_read_type_descriptor		2508295	0					
ANR	2508423	Identifier	rtti_msvc_read_type_descriptor		2508295	0					
ANR	2508424	ArgumentList	context		2508295	1					
ANR	2508425	Argument	context		2508295	0					
ANR	2508426	Identifier	context		2508295	0					
ANR	2508427	Argument	typeDescriptorAddr		2508295	1					
ANR	2508428	Identifier	typeDescriptorAddr		2508295	0					
ANR	2508429	Argument	& td		2508295	2					
ANR	2508430	UnaryOperationExpression	& td		2508295	0					
ANR	2508431	UnaryOperator	&		2508295	0					
ANR	2508432	Identifier	td		2508295	1					
ANR	2508433	CompoundStatement		22:73:723:723	2508295	1					
ANR	2508434	IfStatement	if ( ! strict )		2508295	0					
ANR	2508435	Condition	! strict	494:6:15405:15411	2508295	0	True				
ANR	2508436	UnaryOperationExpression	! strict		2508295	0					
ANR	2508437	UnaryOperator	!		2508295	0					
ANR	2508438	Identifier	strict		2508295	1					
ANR	2508439	CompoundStatement		23:15:740:740	2508295	1					
ANR	2508440	Statement	eprintf	495:3:15419:15425	2508295	0	True				
ANR	2508441	Statement	(	495:11:15427:15427	2508295	1	True				
ANR	2508442	Statement	"""Failed to parse Type Descriptor at 0x%08"""	495:12:15428:15469	2508295	2	True				
ANR	2508443	Statement	PFMT64x	495:54:15470:15476	2508295	3	True				
ANR	2508444	Statement	"""\\n"""	495:61:15477:15480	2508295	4	True				
ANR	2508445	Statement	","	495:65:15481:15481	2508295	5	True				
ANR	2508446	Statement	typeDescriptorAddr	495:67:15483:15500	2508295	6	True				
ANR	2508447	Statement	)	495:85:15501:15501	2508295	7	True				
ANR	2508448	ExpressionStatement		495:86:15502:15502	2508295	8	True				
ANR	2508449	ReturnStatement	return false ;	497:2:15510:15522	2508295	1	True				
ANR	2508450	Identifier	false		2508295	0					
ANR	2508451	IdentifierDeclStatement	"ut64 classHierarchyDescriptorAddr = rtti_msvc_addr ( context , colAddr , col . object_base , col . class_descriptor_addr ) ;"	501:1:15560:15673	2508295	9	True				
ANR	2508452	IdentifierDecl	"classHierarchyDescriptorAddr = rtti_msvc_addr ( context , colAddr , col . object_base , col . class_descriptor_addr )"		2508295	0					
ANR	2508453	IdentifierDeclType	ut64		2508295	0					
ANR	2508454	Identifier	classHierarchyDescriptorAddr		2508295	1					
ANR	2508455	AssignmentExpression	"classHierarchyDescriptorAddr = rtti_msvc_addr ( context , colAddr , col . object_base , col . class_descriptor_addr )"		2508295	2		=			
ANR	2508456	Identifier	classHierarchyDescriptorAddr		2508295	0					
ANR	2508457	CallExpression	"rtti_msvc_addr ( context , colAddr , col . object_base , col . class_descriptor_addr )"		2508295	1					
ANR	2508458	Callee	rtti_msvc_addr		2508295	0					
ANR	2508459	Identifier	rtti_msvc_addr		2508295	0					
ANR	2508460	ArgumentList	context		2508295	1					
ANR	2508461	Argument	context		2508295	0					
ANR	2508462	Identifier	context		2508295	0					
ANR	2508463	Argument	colAddr		2508295	1					
ANR	2508464	Identifier	colAddr		2508295	0					
ANR	2508465	Argument	col . object_base		2508295	2					
ANR	2508466	MemberAccess	col . object_base		2508295	0					
ANR	2508467	Identifier	col		2508295	0					
ANR	2508468	Identifier	object_base		2508295	1					
ANR	2508469	Argument	col . class_descriptor_addr		2508295	3					
ANR	2508470	MemberAccess	col . class_descriptor_addr		2508295	0					
ANR	2508471	Identifier	col		2508295	0					
ANR	2508472	Identifier	class_descriptor_addr		2508295	1					
ANR	2508473	IdentifierDeclStatement	rtti_class_hierarchy_descriptor chd ;	502:1:15676:15711	2508295	10	True				
ANR	2508474	IdentifierDecl	chd		2508295	0					
ANR	2508475	IdentifierDeclType	rtti_class_hierarchy_descriptor		2508295	0					
ANR	2508476	Identifier	chd		2508295	1					
ANR	2508477	IfStatement	"if ( ! rtti_msvc_read_class_hierarchy_descriptor ( context , classHierarchyDescriptorAddr , & chd ) )"		2508295	11					
ANR	2508478	Condition	"! rtti_msvc_read_class_hierarchy_descriptor ( context , classHierarchyDescriptorAddr , & chd )"	503:5:15718:15805	2508295	0	True				
ANR	2508479	UnaryOperationExpression	"! rtti_msvc_read_class_hierarchy_descriptor ( context , classHierarchyDescriptorAddr , & chd )"		2508295	0					
ANR	2508480	UnaryOperator	!		2508295	0					
ANR	2508481	CallExpression	"rtti_msvc_read_class_hierarchy_descriptor ( context , classHierarchyDescriptorAddr , & chd )"		2508295	1					
ANR	2508482	Callee	rtti_msvc_read_class_hierarchy_descriptor		2508295	0					
ANR	2508483	Identifier	rtti_msvc_read_class_hierarchy_descriptor		2508295	0					
ANR	2508484	ArgumentList	context		2508295	1					
ANR	2508485	Argument	context		2508295	0					
ANR	2508486	Identifier	context		2508295	0					
ANR	2508487	Argument	classHierarchyDescriptorAddr		2508295	1					
ANR	2508488	Identifier	classHierarchyDescriptorAddr		2508295	0					
ANR	2508489	Argument	& chd		2508295	2					
ANR	2508490	UnaryOperationExpression	& chd		2508295	0					
ANR	2508491	UnaryOperator	&		2508295	0					
ANR	2508492	Identifier	chd		2508295	1					
ANR	2508493	CompoundStatement		32:95:1134:1134	2508295	1					
ANR	2508494	IfStatement	if ( ! strict )		2508295	0					
ANR	2508495	Condition	! strict	504:6:15816:15822	2508295	0	True				
ANR	2508496	UnaryOperationExpression	! strict		2508295	0					
ANR	2508497	UnaryOperator	!		2508295	0					
ANR	2508498	Identifier	strict		2508295	1					
ANR	2508499	CompoundStatement		33:15:1151:1151	2508295	1					
ANR	2508500	Statement	eprintf	505:3:15830:15836	2508295	0	True				
ANR	2508501	Statement	(	505:11:15838:15838	2508295	1	True				
ANR	2508502	Statement	"""Failed to parse Class Hierarchy Descriptor at 0x%08"""	505:12:15839:15891	2508295	2	True				
ANR	2508503	Statement	PFMT64x	505:65:15892:15898	2508295	3	True				
ANR	2508504	Statement	"""\\n"""	505:72:15899:15902	2508295	4	True				
ANR	2508505	Statement	","	505:76:15903:15903	2508295	5	True				
ANR	2508506	Statement	classHierarchyDescriptorAddr	505:78:15905:15932	2508295	6	True				
ANR	2508507	Statement	)	505:106:15933:15933	2508295	7	True				
ANR	2508508	ExpressionStatement		505:107:15934:15934	2508295	8	True				
ANR	2508509	ExpressionStatement	rtti_type_descriptor_fini ( & td )	507:2:15942:15973	2508295	1	True				
ANR	2508510	CallExpression	rtti_type_descriptor_fini ( & td )		2508295	0					
ANR	2508511	Callee	rtti_type_descriptor_fini		2508295	0					
ANR	2508512	Identifier	rtti_type_descriptor_fini		2508295	0					
ANR	2508513	ArgumentList	& td		2508295	1					
ANR	2508514	Argument	& td		2508295	0					
ANR	2508515	UnaryOperationExpression	& td		2508295	0					
ANR	2508516	UnaryOperator	&		2508295	0					
ANR	2508517	Identifier	td		2508295	1					
ANR	2508518	ReturnStatement	return false ;	508:2:15977:15989	2508295	2	True				
ANR	2508519	Identifier	false		2508295	0					
ANR	2508520	IdentifierDeclStatement	ut64 base = chd . base_class_array_addr ;	511:1:15996:16033	2508295	12	True				
ANR	2508521	IdentifierDecl	base = chd . base_class_array_addr		2508295	0					
ANR	2508522	IdentifierDeclType	ut64		2508295	0					
ANR	2508523	Identifier	base		2508295	1					
ANR	2508524	AssignmentExpression	base = chd . base_class_array_addr		2508295	2		=			
ANR	2508525	Identifier	base		2508295	0					
ANR	2508526	MemberAccess	chd . base_class_array_addr		2508295	1					
ANR	2508527	Identifier	chd		2508295	0					
ANR	2508528	Identifier	base_class_array_addr		2508295	1					
ANR	2508529	IdentifierDeclStatement	ut32 baseClassArrayOffset = 0 ;	512:1:16036:16065	2508295	13	True				
ANR	2508530	IdentifierDecl	baseClassArrayOffset = 0		2508295	0					
ANR	2508531	IdentifierDeclType	ut32		2508295	0					
ANR	2508532	Identifier	baseClassArrayOffset		2508295	1					
ANR	2508533	AssignmentExpression	baseClassArrayOffset = 0		2508295	2		=			
ANR	2508534	Identifier	baseClassArrayOffset		2508295	0					
ANR	2508535	PrimaryExpression	0		2508295	1					
ANR	2508536	IfStatement	if ( context -> word_size == 8 )		2508295	14					
ANR	2508537	Condition	context -> word_size == 8	513:5:16072:16094	2508295	0	True				
ANR	2508538	EqualityExpression	context -> word_size == 8		2508295	0		==			
ANR	2508539	PtrMemberAccess	context -> word_size		2508295	0					
ANR	2508540	Identifier	context		2508295	0					
ANR	2508541	Identifier	word_size		2508295	1					
ANR	2508542	PrimaryExpression	8		2508295	1					
ANR	2508543	CompoundStatement		42:30:1423:1423	2508295	1					
ANR	2508544	ExpressionStatement	base = colAddr - col . object_base	514:2:16101:16133	2508295	0	True				
ANR	2508545	AssignmentExpression	base = colAddr - col . object_base		2508295	0		=			
ANR	2508546	Identifier	base		2508295	0					
ANR	2508547	AdditiveExpression	colAddr - col . object_base		2508295	1		-			
ANR	2508548	Identifier	colAddr		2508295	0					
ANR	2508549	MemberAccess	col . object_base		2508295	1					
ANR	2508550	Identifier	col		2508295	0					
ANR	2508551	Identifier	object_base		2508295	1					
ANR	2508552	ExpressionStatement	baseClassArrayOffset = chd . base_class_array_addr	515:2:16137:16185	2508295	1	True				
ANR	2508553	AssignmentExpression	baseClassArrayOffset = chd . base_class_array_addr		2508295	0		=			
ANR	2508554	Identifier	baseClassArrayOffset		2508295	0					
ANR	2508555	MemberAccess	chd . base_class_array_addr		2508295	1					
ANR	2508556	Identifier	chd		2508295	0					
ANR	2508557	Identifier	base_class_array_addr		2508295	1					
ANR	2508558	IdentifierDeclStatement	"RList * baseClassArray = rtti_msvc_read_base_class_array ( context , chd . num_base_classes , base , baseClassArrayOffset ) ;"	518:1:16192:16307	2508295	15	True				
ANR	2508559	IdentifierDecl	"* baseClassArray = rtti_msvc_read_base_class_array ( context , chd . num_base_classes , base , baseClassArrayOffset )"		2508295	0					
ANR	2508560	IdentifierDeclType	RList *		2508295	0					
ANR	2508561	Identifier	baseClassArray		2508295	1					
ANR	2508562	AssignmentExpression	"* baseClassArray = rtti_msvc_read_base_class_array ( context , chd . num_base_classes , base , baseClassArrayOffset )"		2508295	2		=			
ANR	2508563	Identifier	baseClassArray		2508295	0					
ANR	2508564	CallExpression	"rtti_msvc_read_base_class_array ( context , chd . num_base_classes , base , baseClassArrayOffset )"		2508295	1					
ANR	2508565	Callee	rtti_msvc_read_base_class_array		2508295	0					
ANR	2508566	Identifier	rtti_msvc_read_base_class_array		2508295	0					
ANR	2508567	ArgumentList	context		2508295	1					
ANR	2508568	Argument	context		2508295	0					
ANR	2508569	Identifier	context		2508295	0					
ANR	2508570	Argument	chd . num_base_classes		2508295	1					
ANR	2508571	MemberAccess	chd . num_base_classes		2508295	0					
ANR	2508572	Identifier	chd		2508295	0					
ANR	2508573	Identifier	num_base_classes		2508295	1					
ANR	2508574	Argument	base		2508295	2					
ANR	2508575	Identifier	base		2508295	0					
ANR	2508576	Argument	baseClassArrayOffset		2508295	3					
ANR	2508577	Identifier	baseClassArrayOffset		2508295	0					
ANR	2508578	IfStatement	if ( ! baseClassArray )		2508295	16					
ANR	2508579	Condition	! baseClassArray	519:5:16314:16328	2508295	0	True				
ANR	2508580	UnaryOperationExpression	! baseClassArray		2508295	0					
ANR	2508581	UnaryOperator	!		2508295	0					
ANR	2508582	Identifier	baseClassArray		2508295	1					
ANR	2508583	CompoundStatement		48:22:1657:1657	2508295	1					
ANR	2508584	IfStatement	if ( ! strict )		2508295	0					
ANR	2508585	Condition	! strict	520:6:16339:16345	2508295	0	True				
ANR	2508586	UnaryOperationExpression	! strict		2508295	0					
ANR	2508587	UnaryOperator	!		2508295	0					
ANR	2508588	Identifier	strict		2508295	1					
ANR	2508589	CompoundStatement		49:15:1674:1674	2508295	1					
ANR	2508590	Statement	eprintf	521:3:16353:16359	2508295	0	True				
ANR	2508591	Statement	(	521:11:16361:16361	2508295	1	True				
ANR	2508592	Statement	"""Failed to parse Base Class Array starting at 0x%08"""	521:12:16362:16413	2508295	2	True				
ANR	2508593	Statement	PFMT64x	521:64:16414:16420	2508295	3	True				
ANR	2508594	Statement	"""\\n"""	521:71:16421:16424	2508295	4	True				
ANR	2508595	Statement	","	521:75:16425:16425	2508295	5	True				
ANR	2508596	Statement	base	521:77:16427:16430	2508295	6	True				
ANR	2508597	Statement	+	521:82:16432:16432	2508295	7	True				
ANR	2508598	Statement	baseClassArrayOffset	521:84:16434:16453	2508295	8	True				
ANR	2508599	Statement	)	521:104:16454:16454	2508295	9	True				
ANR	2508600	ExpressionStatement		521:105:16455:16455	2508295	10	True				
ANR	2508601	ExpressionStatement	rtti_type_descriptor_fini ( & td )	523:2:16463:16494	2508295	1	True				
ANR	2508602	CallExpression	rtti_type_descriptor_fini ( & td )		2508295	0					
ANR	2508603	Callee	rtti_type_descriptor_fini		2508295	0					
ANR	2508604	Identifier	rtti_type_descriptor_fini		2508295	0					
ANR	2508605	ArgumentList	& td		2508295	1					
ANR	2508606	Argument	& td		2508295	0					
ANR	2508607	UnaryOperationExpression	& td		2508295	0					
ANR	2508608	UnaryOperator	&		2508295	0					
ANR	2508609	Identifier	td		2508295	1					
ANR	2508610	ReturnStatement	return false ;	524:2:16498:16510	2508295	2	True				
ANR	2508611	Identifier	false		2508295	0					
ANR	2508612	IfStatement	if ( use_json )		2508295	17					
ANR	2508613	Condition	use_json	529:5:16532:16539	2508295	0	True				
ANR	2508614	Identifier	use_json		2508295	0					
ANR	2508615	CompoundStatement		58:15:1868:1868	2508295	1					
ANR	2508616	ExpressionStatement	"r_cons_print ( ""{\\""complete_object_locator\\"":"" )"	530:2:16546:16592	2508295	0	True				
ANR	2508617	CallExpression	"r_cons_print ( ""{\\""complete_object_locator\\"":"" )"		2508295	0					
ANR	2508618	Callee	r_cons_print		2508295	0					
ANR	2508619	Identifier	r_cons_print		2508295	0					
ANR	2508620	ArgumentList	"""{\\""complete_object_locator\\"":"""		2508295	1					
ANR	2508621	Argument	"""{\\""complete_object_locator\\"":"""		2508295	0					
ANR	2508622	PrimaryExpression	"""{\\""complete_object_locator\\"":"""		2508295	0					
ANR	2508623	ExpressionStatement	rtti_msvc_print_complete_object_locator_json ( & col )	531:2:16596:16647	2508295	1	True				
ANR	2508624	CallExpression	rtti_msvc_print_complete_object_locator_json ( & col )		2508295	0					
ANR	2508625	Callee	rtti_msvc_print_complete_object_locator_json		2508295	0					
ANR	2508626	Identifier	rtti_msvc_print_complete_object_locator_json		2508295	0					
ANR	2508627	ArgumentList	& col		2508295	1					
ANR	2508628	Argument	& col		2508295	0					
ANR	2508629	UnaryOperationExpression	& col		2508295	0					
ANR	2508630	UnaryOperator	&		2508295	0					
ANR	2508631	Identifier	col		2508295	1					
ANR	2508632	ExpressionStatement	"r_cons_print ( "",\\""type_desc\\"":"" )"	532:2:16651:16683	2508295	2	True				
ANR	2508633	CallExpression	"r_cons_print ( "",\\""type_desc\\"":"" )"		2508295	0					
ANR	2508634	Callee	r_cons_print		2508295	0					
ANR	2508635	Identifier	r_cons_print		2508295	0					
ANR	2508636	ArgumentList	""",\\""type_desc\\"":"""		2508295	1					
ANR	2508637	Argument	""",\\""type_desc\\"":"""		2508295	0					
ANR	2508638	PrimaryExpression	""",\\""type_desc\\"":"""		2508295	0					
ANR	2508639	ExpressionStatement	rtti_msvc_print_type_descriptor_json ( & td )	533:2:16687:16729	2508295	3	True				
ANR	2508640	CallExpression	rtti_msvc_print_type_descriptor_json ( & td )		2508295	0					
ANR	2508641	Callee	rtti_msvc_print_type_descriptor_json		2508295	0					
ANR	2508642	Identifier	rtti_msvc_print_type_descriptor_json		2508295	0					
ANR	2508643	ArgumentList	& td		2508295	1					
ANR	2508644	Argument	& td		2508295	0					
ANR	2508645	UnaryOperationExpression	& td		2508295	0					
ANR	2508646	UnaryOperator	&		2508295	0					
ANR	2508647	Identifier	td		2508295	1					
ANR	2508648	ExpressionStatement	"r_cons_print ( "",\\""class_hierarchy_desc\\"":"" )"	534:2:16733:16776	2508295	4	True				
ANR	2508649	CallExpression	"r_cons_print ( "",\\""class_hierarchy_desc\\"":"" )"		2508295	0					
ANR	2508650	Callee	r_cons_print		2508295	0					
ANR	2508651	Identifier	r_cons_print		2508295	0					
ANR	2508652	ArgumentList	""",\\""class_hierarchy_desc\\"":"""		2508295	1					
ANR	2508653	Argument	""",\\""class_hierarchy_desc\\"":"""		2508295	0					
ANR	2508654	PrimaryExpression	""",\\""class_hierarchy_desc\\"":"""		2508295	0					
ANR	2508655	ExpressionStatement	rtti_msvc_print_class_hierarchy_descriptor_json ( & chd )	535:2:16780:16834	2508295	5	True				
ANR	2508656	CallExpression	rtti_msvc_print_class_hierarchy_descriptor_json ( & chd )		2508295	0					
ANR	2508657	Callee	rtti_msvc_print_class_hierarchy_descriptor_json		2508295	0					
ANR	2508658	Identifier	rtti_msvc_print_class_hierarchy_descriptor_json		2508295	0					
ANR	2508659	ArgumentList	& chd		2508295	1					
ANR	2508660	Argument	& chd		2508295	0					
ANR	2508661	UnaryOperationExpression	& chd		2508295	0					
ANR	2508662	UnaryOperator	&		2508295	0					
ANR	2508663	Identifier	chd		2508295	1					
ANR	2508664	ExpressionStatement	"r_cons_print ( "",\\""base_classes\\"":["" )"	536:2:16838:16874	2508295	6	True				
ANR	2508665	CallExpression	"r_cons_print ( "",\\""base_classes\\"":["" )"		2508295	0					
ANR	2508666	Callee	r_cons_print		2508295	0					
ANR	2508667	Identifier	r_cons_print		2508295	0					
ANR	2508668	ArgumentList	""",\\""base_classes\\"":["""		2508295	1					
ANR	2508669	Argument	""",\\""base_classes\\"":["""		2508295	0					
ANR	2508670	PrimaryExpression	""",\\""base_classes\\"":["""		2508295	0					
ANR	2508671	ElseStatement	else		2508295	0					
ANR	2508672	CompoundStatement		66:8:2210:2210	2508295	0					
ANR	2508673	ExpressionStatement	"rtti_msvc_print_complete_object_locator ( & col , colAddr , """" )"	538:2:16888:16947	2508295	0	True				
ANR	2508674	CallExpression	"rtti_msvc_print_complete_object_locator ( & col , colAddr , """" )"		2508295	0					
ANR	2508675	Callee	rtti_msvc_print_complete_object_locator		2508295	0					
ANR	2508676	Identifier	rtti_msvc_print_complete_object_locator		2508295	0					
ANR	2508677	ArgumentList	& col		2508295	1					
ANR	2508678	Argument	& col		2508295	0					
ANR	2508679	UnaryOperationExpression	& col		2508295	0					
ANR	2508680	UnaryOperator	&		2508295	0					
ANR	2508681	Identifier	col		2508295	1					
ANR	2508682	Argument	colAddr		2508295	1					
ANR	2508683	Identifier	colAddr		2508295	0					
ANR	2508684	Argument	""""""		2508295	2					
ANR	2508685	PrimaryExpression	""""""		2508295	0					
ANR	2508686	ExpressionStatement	"rtti_msvc_print_type_descriptor ( & td , typeDescriptorAddr , ""\\t"" )"	539:2:16951:17014	2508295	1	True				
ANR	2508687	CallExpression	"rtti_msvc_print_type_descriptor ( & td , typeDescriptorAddr , ""\\t"" )"		2508295	0					
ANR	2508688	Callee	rtti_msvc_print_type_descriptor		2508295	0					
ANR	2508689	Identifier	rtti_msvc_print_type_descriptor		2508295	0					
ANR	2508690	ArgumentList	& td		2508295	1					
ANR	2508691	Argument	& td		2508295	0					
ANR	2508692	UnaryOperationExpression	& td		2508295	0					
ANR	2508693	UnaryOperator	&		2508295	0					
ANR	2508694	Identifier	td		2508295	1					
ANR	2508695	Argument	typeDescriptorAddr		2508295	1					
ANR	2508696	Identifier	typeDescriptorAddr		2508295	0					
ANR	2508697	Argument	"""\\t"""		2508295	2					
ANR	2508698	PrimaryExpression	"""\\t"""		2508295	0					
ANR	2508699	ExpressionStatement	"rtti_msvc_print_class_hierarchy_descriptor ( & chd , classHierarchyDescriptorAddr , ""\\t"" )"	540:2:17018:17103	2508295	2	True				
ANR	2508700	CallExpression	"rtti_msvc_print_class_hierarchy_descriptor ( & chd , classHierarchyDescriptorAddr , ""\\t"" )"		2508295	0					
ANR	2508701	Callee	rtti_msvc_print_class_hierarchy_descriptor		2508295	0					
ANR	2508702	Identifier	rtti_msvc_print_class_hierarchy_descriptor		2508295	0					
ANR	2508703	ArgumentList	& chd		2508295	1					
ANR	2508704	Argument	& chd		2508295	0					
ANR	2508705	UnaryOperationExpression	& chd		2508295	0					
ANR	2508706	UnaryOperator	&		2508295	0					
ANR	2508707	Identifier	chd		2508295	1					
ANR	2508708	Argument	classHierarchyDescriptorAddr		2508295	1					
ANR	2508709	Identifier	classHierarchyDescriptorAddr		2508295	0					
ANR	2508710	Argument	"""\\t"""		2508295	2					
ANR	2508711	PrimaryExpression	"""\\t"""		2508295	0					
ANR	2508712	IdentifierDeclStatement	bool json_first = true ;	545:1:17128:17150	2508295	18	True				
ANR	2508713	IdentifierDecl	json_first = true		2508295	0					
ANR	2508714	IdentifierDeclType	bool		2508295	0					
ANR	2508715	Identifier	json_first		2508295	1					
ANR	2508716	AssignmentExpression	json_first = true		2508295	2		=			
ANR	2508717	Identifier	true		2508295	0					
ANR	2508718	Identifier	true		2508295	1					
ANR	2508719	IdentifierDeclStatement	RListIter * bcdIter ;	546:1:17153:17171	2508295	19	True				
ANR	2508720	IdentifierDecl	* bcdIter		2508295	0					
ANR	2508721	IdentifierDeclType	RListIter *		2508295	0					
ANR	2508722	Identifier	bcdIter		2508295	1					
ANR	2508723	IdentifierDeclStatement	rtti_base_class_descriptor * bcd ;	547:1:17174:17205	2508295	20	True				
ANR	2508724	IdentifierDecl	* bcd		2508295	0					
ANR	2508725	IdentifierDeclType	rtti_base_class_descriptor *		2508295	0					
ANR	2508726	Identifier	bcd		2508295	1					
ANR	2508727	Statement	r_list_foreach	548:1:17208:17221	2508295	21	True				
ANR	2508728	Statement	(	548:16:17223:17223	2508295	22	True				
ANR	2508729	Statement	baseClassArray	548:17:17224:17237	2508295	23	True				
ANR	2508730	Statement	","	548:31:17238:17238	2508295	24	True				
ANR	2508731	Statement	bcdIter	548:33:17240:17246	2508295	25	True				
ANR	2508732	Statement	","	548:40:17247:17247	2508295	26	True				
ANR	2508733	Statement	bcd	548:42:17249:17251	2508295	27	True				
ANR	2508734	Statement	)	548:45:17252:17252	2508295	28	True				
ANR	2508735	CompoundStatement		94:2:2990:3022	2508295	29					
ANR	2508736	IfStatement	if ( use_json )		2508295	0					
ANR	2508737	Condition	use_json	549:6:17262:17269	2508295	0	True				
ANR	2508738	Identifier	use_json		2508295	0					
ANR	2508739	CompoundStatement		78:16:2598:2598	2508295	1					
ANR	2508740	IfStatement	if ( json_first )		2508295	0					
ANR	2508741	Condition	json_first	550:7:17281:17290	2508295	0	True				
ANR	2508742	Identifier	json_first		2508295	0					
ANR	2508743	CompoundStatement		79:19:2619:2619	2508295	1					
ANR	2508744	ExpressionStatement	"r_cons_print ( ""{\\""desc\\"":"" )"	551:4:17299:17326	2508295	0	True				
ANR	2508745	CallExpression	"r_cons_print ( ""{\\""desc\\"":"" )"		2508295	0					
ANR	2508746	Callee	r_cons_print		2508295	0					
ANR	2508747	Identifier	r_cons_print		2508295	0					
ANR	2508748	ArgumentList	"""{\\""desc\\"":"""		2508295	1					
ANR	2508749	Argument	"""{\\""desc\\"":"""		2508295	0					
ANR	2508750	PrimaryExpression	"""{\\""desc\\"":"""		2508295	0					
ANR	2508751	ExpressionStatement	json_first = false	552:4:17332:17350	2508295	1	True				
ANR	2508752	AssignmentExpression	json_first = false		2508295	0		=			
ANR	2508753	Identifier	json_first		2508295	0					
ANR	2508754	Identifier	false		2508295	1					
ANR	2508755	ElseStatement	else		2508295	0					
ANR	2508756	CompoundStatement		82:10:2688:2688	2508295	0					
ANR	2508757	ExpressionStatement	"r_cons_print ( "",{\\""desc\\"":"" )"	554:4:17368:17396	2508295	0	True				
ANR	2508758	CallExpression	"r_cons_print ( "",{\\""desc\\"":"" )"		2508295	0					
ANR	2508759	Callee	r_cons_print		2508295	0					
ANR	2508760	Identifier	r_cons_print		2508295	0					
ANR	2508761	ArgumentList	""",{\\""desc\\"":"""		2508295	1					
ANR	2508762	Argument	""",{\\""desc\\"":"""		2508295	0					
ANR	2508763	PrimaryExpression	""",{\\""desc\\"":"""		2508295	0					
ANR	2508764	IfStatement	if ( use_json )		2508295	1					
ANR	2508765	Condition	use_json	558:6:17414:17421	2508295	0	True				
ANR	2508766	Identifier	use_json		2508295	0					
ANR	2508767	CompoundStatement		87:16:2750:2750	2508295	1					
ANR	2508768	ExpressionStatement	rtti_msvc_print_base_class_descriptor_json ( bcd )	559:3:17429:17477	2508295	0	True				
ANR	2508769	CallExpression	rtti_msvc_print_base_class_descriptor_json ( bcd )		2508295	0					
ANR	2508770	Callee	rtti_msvc_print_base_class_descriptor_json		2508295	0					
ANR	2508771	Identifier	rtti_msvc_print_base_class_descriptor_json		2508295	0					
ANR	2508772	ArgumentList	bcd		2508295	1					
ANR	2508773	Argument	bcd		2508295	0					
ANR	2508774	Identifier	bcd		2508295	0					
ANR	2508775	ElseStatement	else		2508295	0					
ANR	2508776	CompoundStatement		89:9:2814:2814	2508295	0					
ANR	2508777	ExpressionStatement	"rtti_msvc_print_base_class_descriptor ( bcd , ""\\t\\t"" )"	561:3:17493:17544	2508295	0	True				
ANR	2508778	CallExpression	"rtti_msvc_print_base_class_descriptor ( bcd , ""\\t\\t"" )"		2508295	0					
ANR	2508779	Callee	rtti_msvc_print_base_class_descriptor		2508295	0					
ANR	2508780	Identifier	rtti_msvc_print_base_class_descriptor		2508295	0					
ANR	2508781	ArgumentList	bcd		2508295	1					
ANR	2508782	Argument	bcd		2508295	0					
ANR	2508783	Identifier	bcd		2508295	0					
ANR	2508784	Argument	"""\\t\\t"""		2508295	1					
ANR	2508785	PrimaryExpression	"""\\t\\t"""		2508295	0					
ANR	2508786	IdentifierDeclStatement	"ut64 baseTypeDescriptorAddr = rtti_msvc_addr ( context , colAddr , col . object_base , bcd -> type_descriptor_addr ) ;"	564:2:17553:17660	2508295	2	True				
ANR	2508787	IdentifierDecl	"baseTypeDescriptorAddr = rtti_msvc_addr ( context , colAddr , col . object_base , bcd -> type_descriptor_addr )"		2508295	0					
ANR	2508788	IdentifierDeclType	ut64		2508295	0					
ANR	2508789	Identifier	baseTypeDescriptorAddr		2508295	1					
ANR	2508790	AssignmentExpression	"baseTypeDescriptorAddr = rtti_msvc_addr ( context , colAddr , col . object_base , bcd -> type_descriptor_addr )"		2508295	2		=			
ANR	2508791	Identifier	baseTypeDescriptorAddr		2508295	0					
ANR	2508792	CallExpression	"rtti_msvc_addr ( context , colAddr , col . object_base , bcd -> type_descriptor_addr )"		2508295	1					
ANR	2508793	Callee	rtti_msvc_addr		2508295	0					
ANR	2508794	Identifier	rtti_msvc_addr		2508295	0					
ANR	2508795	ArgumentList	context		2508295	1					
ANR	2508796	Argument	context		2508295	0					
ANR	2508797	Identifier	context		2508295	0					
ANR	2508798	Argument	colAddr		2508295	1					
ANR	2508799	Identifier	colAddr		2508295	0					
ANR	2508800	Argument	col . object_base		2508295	2					
ANR	2508801	MemberAccess	col . object_base		2508295	0					
ANR	2508802	Identifier	col		2508295	0					
ANR	2508803	Identifier	object_base		2508295	1					
ANR	2508804	Argument	bcd -> type_descriptor_addr		2508295	3					
ANR	2508805	PtrMemberAccess	bcd -> type_descriptor_addr		2508295	0					
ANR	2508806	Identifier	bcd		2508295	0					
ANR	2508807	Identifier	type_descriptor_addr		2508295	1					
ANR	2508808	IdentifierDeclStatement	rtti_type_descriptor btd = { 0 } ;	565:2:17664:17696	2508295	3	True				
ANR	2508809	IdentifierDecl	btd = { 0 }		2508295	0					
ANR	2508810	IdentifierDeclType	rtti_type_descriptor		2508295	0					
ANR	2508811	Identifier	btd		2508295	1					
ANR	2508812	AssignmentExpression	btd = { 0 }		2508295	2		=			
ANR	2508813	Identifier	btd		2508295	0					
ANR	2508814	InitializerList	0		2508295	1					
ANR	2508815	PrimaryExpression	0		2508295	0					
ANR	2508816	IfStatement	"if ( rtti_msvc_read_type_descriptor ( context , baseTypeDescriptorAddr , & btd ) )"		2508295	4					
ANR	2508817	Condition	"rtti_msvc_read_type_descriptor ( context , baseTypeDescriptorAddr , & btd )"	566:6:17704:17773	2508295	0	True				
ANR	2508818	CallExpression	"rtti_msvc_read_type_descriptor ( context , baseTypeDescriptorAddr , & btd )"		2508295	0					
ANR	2508819	Callee	rtti_msvc_read_type_descriptor		2508295	0					
ANR	2508820	Identifier	rtti_msvc_read_type_descriptor		2508295	0					
ANR	2508821	ArgumentList	context		2508295	1					
ANR	2508822	Argument	context		2508295	0					
ANR	2508823	Identifier	context		2508295	0					
ANR	2508824	Argument	baseTypeDescriptorAddr		2508295	1					
ANR	2508825	Identifier	baseTypeDescriptorAddr		2508295	0					
ANR	2508826	Argument	& btd		2508295	2					
ANR	2508827	UnaryOperationExpression	& btd		2508295	0					
ANR	2508828	UnaryOperator	&		2508295	0					
ANR	2508829	Identifier	btd		2508295	1					
ANR	2508830	CompoundStatement		95:78:3102:3102	2508295	1					
ANR	2508831	IfStatement	if ( use_json )		2508295	0					
ANR	2508832	Condition	use_json	567:7:17785:17792	2508295	0	True				
ANR	2508833	Identifier	use_json		2508295	0					
ANR	2508834	CompoundStatement		96:17:3121:3121	2508295	1					
ANR	2508835	ExpressionStatement	"r_cons_print ( "",\\""type_desc\\"":"" )"	568:4:17801:17833	2508295	0	True				
ANR	2508836	CallExpression	"r_cons_print ( "",\\""type_desc\\"":"" )"		2508295	0					
ANR	2508837	Callee	r_cons_print		2508295	0					
ANR	2508838	Identifier	r_cons_print		2508295	0					
ANR	2508839	ArgumentList	""",\\""type_desc\\"":"""		2508295	1					
ANR	2508840	Argument	""",\\""type_desc\\"":"""		2508295	0					
ANR	2508841	PrimaryExpression	""",\\""type_desc\\"":"""		2508295	0					
ANR	2508842	ExpressionStatement	rtti_msvc_print_type_descriptor_json ( & btd )	569:4:17839:17882	2508295	1	True				
ANR	2508843	CallExpression	rtti_msvc_print_type_descriptor_json ( & btd )		2508295	0					
ANR	2508844	Callee	rtti_msvc_print_type_descriptor_json		2508295	0					
ANR	2508845	Identifier	rtti_msvc_print_type_descriptor_json		2508295	0					
ANR	2508846	ArgumentList	& btd		2508295	1					
ANR	2508847	Argument	& btd		2508295	0					
ANR	2508848	UnaryOperationExpression	& btd		2508295	0					
ANR	2508849	UnaryOperator	&		2508295	0					
ANR	2508850	Identifier	btd		2508295	1					
ANR	2508851	ElseStatement	else		2508295	0					
ANR	2508852	CompoundStatement		99:10:3220:3220	2508295	0					
ANR	2508853	ExpressionStatement	"rtti_msvc_print_type_descriptor ( & btd , baseTypeDescriptorAddr , ""\\t\\t\\t"" )"	571:4:17900:17972	2508295	0	True				
ANR	2508854	CallExpression	"rtti_msvc_print_type_descriptor ( & btd , baseTypeDescriptorAddr , ""\\t\\t\\t"" )"		2508295	0					
ANR	2508855	Callee	rtti_msvc_print_type_descriptor		2508295	0					
ANR	2508856	Identifier	rtti_msvc_print_type_descriptor		2508295	0					
ANR	2508857	ArgumentList	& btd		2508295	1					
ANR	2508858	Argument	& btd		2508295	0					
ANR	2508859	UnaryOperationExpression	& btd		2508295	0					
ANR	2508860	UnaryOperator	&		2508295	0					
ANR	2508861	Identifier	btd		2508295	1					
ANR	2508862	Argument	baseTypeDescriptorAddr		2508295	1					
ANR	2508863	Identifier	baseTypeDescriptorAddr		2508295	0					
ANR	2508864	Argument	"""\\t\\t\\t"""		2508295	2					
ANR	2508865	PrimaryExpression	"""\\t\\t\\t"""		2508295	0					
ANR	2508866	ExpressionStatement	rtti_type_descriptor_fini ( & btd )	573:3:17982:18014	2508295	1	True				
ANR	2508867	CallExpression	rtti_type_descriptor_fini ( & btd )		2508295	0					
ANR	2508868	Callee	rtti_type_descriptor_fini		2508295	0					
ANR	2508869	Identifier	rtti_type_descriptor_fini		2508295	0					
ANR	2508870	ArgumentList	& btd		2508295	1					
ANR	2508871	Argument	& btd		2508295	0					
ANR	2508872	UnaryOperationExpression	& btd		2508295	0					
ANR	2508873	UnaryOperator	&		2508295	0					
ANR	2508874	Identifier	btd		2508295	1					
ANR	2508875	ElseStatement	else		2508295	0					
ANR	2508876	CompoundStatement		103:9:3351:3351	2508295	0					
ANR	2508877	IfStatement	if ( ! strict )		2508295	0					
ANR	2508878	Condition	! strict	575:7:18034:18040	2508295	0	True				
ANR	2508879	UnaryOperationExpression	! strict		2508295	0					
ANR	2508880	UnaryOperator	!		2508295	0					
ANR	2508881	Identifier	strict		2508295	1					
ANR	2508882	CompoundStatement		104:16:3369:3369	2508295	1					
ANR	2508883	Statement	eprintf	576:4:18049:18055	2508295	0	True				
ANR	2508884	Statement	(	576:12:18057:18057	2508295	1	True				
ANR	2508885	Statement	"""Failed to parse Type Descriptor at 0x%08"""	576:13:18058:18099	2508295	2	True				
ANR	2508886	Statement	PFMT64x	576:55:18100:18106	2508295	3	True				
ANR	2508887	Statement	"""\\n"""	576:62:18107:18110	2508295	4	True				
ANR	2508888	Statement	","	576:66:18111:18111	2508295	5	True				
ANR	2508889	Statement	baseTypeDescriptorAddr	576:68:18113:18134	2508295	6	True				
ANR	2508890	Statement	)	576:90:18135:18135	2508295	7	True				
ANR	2508891	ExpressionStatement		576:91:18136:18136	2508295	8	True				
ANR	2508892	IfStatement	if ( use_json )		2508295	5					
ANR	2508893	Condition	use_json	580:5:18153:18160	2508295	0	True				
ANR	2508894	Identifier	use_json		2508295	0					
ANR	2508895	CompoundStatement		109:15:3489:3489	2508295	1					
ANR	2508896	ExpressionStatement	"r_cons_print ( ""}"" )"	581:3:18168:18186	2508295	0	True				
ANR	2508897	CallExpression	"r_cons_print ( ""}"" )"		2508295	0					
ANR	2508898	Callee	r_cons_print		2508295	0					
ANR	2508899	Identifier	r_cons_print		2508295	0					
ANR	2508900	ArgumentList	"""}"""		2508295	1					
ANR	2508901	Argument	"""}"""		2508295	0					
ANR	2508902	PrimaryExpression	"""}"""		2508295	0					
ANR	2508903	IfStatement	if ( use_json )		2508295	30					
ANR	2508904	Condition	use_json	584:5:18200:18207	2508295	0	True				
ANR	2508905	Identifier	use_json		2508295	0					
ANR	2508906	CompoundStatement		113:15:3536:3536	2508295	1					
ANR	2508907	ExpressionStatement	"r_cons_print ( ""]"" )"	585:2:18214:18232	2508295	0	True				
ANR	2508908	CallExpression	"r_cons_print ( ""]"" )"		2508295	0					
ANR	2508909	Callee	r_cons_print		2508295	0					
ANR	2508910	Identifier	r_cons_print		2508295	0					
ANR	2508911	ArgumentList	"""]"""		2508295	1					
ANR	2508912	Argument	"""]"""		2508295	0					
ANR	2508913	PrimaryExpression	"""]"""		2508295	0					
ANR	2508914	IfStatement	if ( use_json )		2508295	31					
ANR	2508915	Condition	use_json	588:5:18243:18250	2508295	0	True				
ANR	2508916	Identifier	use_json		2508295	0					
ANR	2508917	CompoundStatement		117:15:3579:3579	2508295	1					
ANR	2508918	ExpressionStatement	"r_cons_print ( ""}"" )"	589:2:18257:18275	2508295	0	True				
ANR	2508919	CallExpression	"r_cons_print ( ""}"" )"		2508295	0					
ANR	2508920	Callee	r_cons_print		2508295	0					
ANR	2508921	Identifier	r_cons_print		2508295	0					
ANR	2508922	ArgumentList	"""}"""		2508295	1					
ANR	2508923	Argument	"""}"""		2508295	0					
ANR	2508924	PrimaryExpression	"""}"""		2508295	0					
ANR	2508925	ExpressionStatement	rtti_type_descriptor_fini ( & td )	592:1:18282:18313	2508295	32	True				
ANR	2508926	CallExpression	rtti_type_descriptor_fini ( & td )		2508295	0					
ANR	2508927	Callee	rtti_type_descriptor_fini		2508295	0					
ANR	2508928	Identifier	rtti_type_descriptor_fini		2508295	0					
ANR	2508929	ArgumentList	& td		2508295	1					
ANR	2508930	Argument	& td		2508295	0					
ANR	2508931	UnaryOperationExpression	& td		2508295	0					
ANR	2508932	UnaryOperator	&		2508295	0					
ANR	2508933	Identifier	td		2508295	1					
ANR	2508934	ReturnStatement	return true ;	593:1:18316:18327	2508295	33	True				
ANR	2508935	Identifier	true		2508295	0					
ANR	2508936	ReturnType	static bool		2508295	1					
ANR	2508937	Identifier	rtti_msvc_print_complete_object_locator_recurse		2508295	2					
ANR	2508938	ParameterList	"RVTableContext * context , ut64 atAddress , int mode , bool strict"		2508295	3					
ANR	2508939	Parameter	RVTableContext * context	472:60:14609:14631	2508295	0	True				
ANR	2508940	ParameterType	RVTableContext *		2508295	0					
ANR	2508941	Identifier	context		2508295	1					
ANR	2508942	Parameter	ut64 atAddress	472:85:14634:14647	2508295	1	True				
ANR	2508943	ParameterType	ut64		2508295	0					
ANR	2508944	Identifier	atAddress		2508295	1					
ANR	2508945	Parameter	int mode	472:101:14650:14657	2508295	2	True				
ANR	2508946	ParameterType	int		2508295	0					
ANR	2508947	Identifier	mode		2508295	1					
ANR	2508948	Parameter	bool strict	472:111:14660:14670	2508295	3	True				
ANR	2508949	ParameterType	bool		2508295	0					
ANR	2508950	Identifier	strict		2508295	1					
ANR	2508951	CFGEntryNode	ENTRY		2508295		True				
ANR	2508952	CFGExitNode	EXIT		2508295		True				
ANR	2508953	Symbol	rtti_msvc_read_base_class_array		2508295						
ANR	2508954	Symbol	col		2508295						
ANR	2508955	Symbol	& chd		2508295						
ANR	2508956	Symbol	bcd		2508295						
ANR	2508957	Symbol	bcd -> type_descriptor_addr		2508295						
ANR	2508958	Symbol	col . type_descriptor_addr		2508295						
ANR	2508959	Symbol	baseClassArray		2508295						
ANR	2508960	Symbol	context -> word_size		2508295						
ANR	2508961	Symbol	& colAddr		2508295						
ANR	2508962	Symbol	rtti_msvc_read_type_descriptor		2508295						
ANR	2508963	Symbol	atAddress		2508295						
ANR	2508964	Symbol	classHierarchyDescriptorAddr		2508295						
ANR	2508965	Symbol	bcdIter		2508295						
ANR	2508966	Symbol	chd . num_base_classes		2508295						
ANR	2508967	Symbol	mode		2508295						
ANR	2508968	Symbol	typeDescriptorAddr		2508295						
ANR	2508969	Symbol	colAddr		2508295						
ANR	2508970	Symbol	* bcd		2508295						
ANR	2508971	Symbol	btd		2508295						
ANR	2508972	Symbol	context -> read_addr		2508295						
ANR	2508973	Symbol	rtti_msvc_read_complete_object_locator		2508295						
ANR	2508974	Symbol	context		2508295						
ANR	2508975	Symbol	strict		2508295						
ANR	2508976	Symbol	col . class_descriptor_addr		2508295						
ANR	2508977	Symbol	chd		2508295						
ANR	2508978	Symbol	& col		2508295						
ANR	2508979	Symbol	colRefAddr		2508295						
ANR	2508980	Symbol	context -> anal		2508295						
ANR	2508981	Symbol	rtti_msvc_addr		2508295						
ANR	2508982	Symbol	baseClassArrayOffset		2508295						
ANR	2508983	Symbol	false		2508295						
ANR	2508984	Symbol	baseTypeDescriptorAddr		2508295						
ANR	2508985	Symbol	chd . base_class_array_addr		2508295						
ANR	2508986	Symbol	* context		2508295						
ANR	2508987	Symbol	col . object_base		2508295						
ANR	2508988	Symbol	td		2508295						
ANR	2508989	Symbol	rtti_msvc_read_class_hierarchy_descriptor		2508295						
ANR	2508990	Symbol	json_first		2508295						
ANR	2508991	Symbol	true		2508295						
ANR	2508992	Symbol	& td		2508295						
ANR	2508993	Symbol	use_json		2508295						
ANR	2508994	Symbol	base		2508295						
ANR	2508995	Symbol	& btd		2508295						
ANR	2508996	Function	r_anal_rtti_msvc_print_at_vtable	596:0:18332:18524							
ANR	2508997	FunctionDef	"r_anal_rtti_msvc_print_at_vtable (RVTableContext * context , ut64 addr , int mode , bool strict)"		2508996	0					
ANR	2508998	CompoundStatement		596:103:18435:18524	2508996	0					
ANR	2508999	ReturnStatement	"return rtti_msvc_print_complete_object_locator_recurse ( context , addr , mode , strict ) ;"	597:1:18438:18522	2508996	0	True				
ANR	2509000	CallExpression	"rtti_msvc_print_complete_object_locator_recurse ( context , addr , mode , strict )"		2508996	0					
ANR	2509001	Callee	rtti_msvc_print_complete_object_locator_recurse		2508996	0					
ANR	2509002	Identifier	rtti_msvc_print_complete_object_locator_recurse		2508996	0					
ANR	2509003	ArgumentList	context		2508996	1					
ANR	2509004	Argument	context		2508996	0					
ANR	2509005	Identifier	context		2508996	0					
ANR	2509006	Argument	addr		2508996	1					
ANR	2509007	Identifier	addr		2508996	0					
ANR	2509008	Argument	mode		2508996	2					
ANR	2509009	Identifier	mode		2508996	0					
ANR	2509010	Argument	strict		2508996	3					
ANR	2509011	Identifier	strict		2508996	0					
ANR	2509012	ReturnType	R_API bool		2508996	1					
ANR	2509013	Identifier	r_anal_rtti_msvc_print_at_vtable		2508996	2					
ANR	2509014	ParameterList	"RVTableContext * context , ut64 addr , int mode , bool strict"		2508996	3					
ANR	2509015	Parameter	RVTableContext * context	596:44:18376:18398	2508996	0	True				
ANR	2509016	ParameterType	RVTableContext *		2508996	0					
ANR	2509017	Identifier	context		2508996	1					
ANR	2509018	Parameter	ut64 addr	596:69:18401:18409	2508996	1	True				
ANR	2509019	ParameterType	ut64		2508996	0					
ANR	2509020	Identifier	addr		2508996	1					
ANR	2509021	Parameter	int mode	596:80:18412:18419	2508996	2	True				
ANR	2509022	ParameterType	int		2508996	0					
ANR	2509023	Identifier	mode		2508996	1					
ANR	2509024	Parameter	bool strict	596:90:18422:18432	2508996	3	True				
ANR	2509025	ParameterType	bool		2508996	0					
ANR	2509026	Identifier	strict		2508996	1					
ANR	2509027	CFGEntryNode	ENTRY		2508996		True				
ANR	2509028	CFGExitNode	EXIT		2508996		True				
ANR	2509029	Symbol	mode		2508996						
ANR	2509030	Symbol	rtti_msvc_print_complete_object_locator_recurse		2508996						
ANR	2509031	Symbol	context		2508996						
ANR	2509032	Symbol	addr		2508996						
ANR	2509033	Symbol	strict		2508996						
ANR	2509034	DeclStmt									
ANR	2509035	Decl							struct recovery_type_descriptor_t	struct recovery_type_descriptor_t	RecoveryTypeDescriptor
ANR	2509036	ClassDef	recovery_base_descriptor_t	602:8:18602:18725							
ANR	2509037	DeclStmt									
ANR	2509038	Decl							rtti_base_class_descriptor	rtti_base_class_descriptor *	bcd
ANR	2509039	DeclStmt									
ANR	2509040	Decl							RecoveryTypeDescriptor	RecoveryTypeDescriptor *	td
ANR	2509041	DeclStmt									
ANR	2509042	Decl							recovery_base_descriptor_t	recovery_base_descriptor_t	RecoveryBaseDescriptor
ANR	2509043	ClassDef	recovery_complete_object_locator_t	607:8:18736:19051							
ANR	2509044	DeclStmt									
ANR	2509045	Decl							ut64	ut64	addr
ANR	2509046	DeclStmt									
ANR	2509047	Decl							bool	bool	valid
ANR	2509048	DeclStmt									
ANR	2509049	Decl							RVTableInfo	RVTableInfo *	vtable
ANR	2509050	DeclStmt									
ANR	2509051	Decl							rtti_complete_object_locator	rtti_complete_object_locator	col
ANR	2509052	DeclStmt									
ANR	2509053	Decl							RecoveryTypeDescriptor	RecoveryTypeDescriptor *	td
ANR	2509054	DeclStmt									
ANR	2509055	Decl							rtti_class_hierarchy_descriptor	rtti_class_hierarchy_descriptor	chd
ANR	2509056	DeclStmt									
ANR	2509057	Decl							RList	RList *	bcd
ANR	2509058	DeclStmt									
ANR	2509059	Decl							RVector	RVector	base_td
ANR	2509060	DeclStmt									
ANR	2509061	Decl							recovery_complete_object_locator_t	recovery_complete_object_locator_t	RecoveryCompleteObjectLocator
ANR	2509062	Function	recovery_complete_object_locator_new	618:0:19054:19324							
ANR	2509063	FunctionDef	recovery_complete_object_locator_new ()		2509062	0					
ANR	2509064	CompoundStatement		618:70:19124:19324	2509062	0					
ANR	2509065	IdentifierDeclStatement	RecoveryCompleteObjectLocator * col = R_NEW0 ( RecoveryCompleteObjectLocator ) ;	619:1:19127:19202	2509062	0	True				
ANR	2509066	IdentifierDecl	* col = R_NEW0 ( RecoveryCompleteObjectLocator )		2509062	0					
ANR	2509067	IdentifierDeclType	RecoveryCompleteObjectLocator *		2509062	0					
ANR	2509068	Identifier	col		2509062	1					
ANR	2509069	AssignmentExpression	* col = R_NEW0 ( RecoveryCompleteObjectLocator )		2509062	2		=			
ANR	2509070	Identifier	col		2509062	0					
ANR	2509071	CallExpression	R_NEW0 ( RecoveryCompleteObjectLocator )		2509062	1					
ANR	2509072	Callee	R_NEW0		2509062	0					
ANR	2509073	Identifier	R_NEW0		2509062	0					
ANR	2509074	ArgumentList	RecoveryCompleteObjectLocator		2509062	1					
ANR	2509075	Argument	RecoveryCompleteObjectLocator		2509062	0					
ANR	2509076	Identifier	RecoveryCompleteObjectLocator		2509062	0					
ANR	2509077	IfStatement	if ( ! col )		2509062	1					
ANR	2509078	Condition	! col	620:5:19209:19212	2509062	0	True				
ANR	2509079	UnaryOperationExpression	! col		2509062	0					
ANR	2509080	UnaryOperator	!		2509062	0					
ANR	2509081	Identifier	col		2509062	1					
ANR	2509082	CompoundStatement		3:11:90:90	2509062	1					
ANR	2509083	ReturnStatement	return NULL ;	621:2:19219:19230	2509062	0	True				
ANR	2509084	Identifier	NULL		2509062	0					
ANR	2509085	ExpressionStatement	"r_vector_init ( & col -> base_td , sizeof ( RecoveryBaseDescriptor ) , NULL , NULL )"	623:1:19236:19309	2509062	2	True				
ANR	2509086	CallExpression	"r_vector_init ( & col -> base_td , sizeof ( RecoveryBaseDescriptor ) , NULL , NULL )"		2509062	0					
ANR	2509087	Callee	r_vector_init		2509062	0					
ANR	2509088	Identifier	r_vector_init		2509062	0					
ANR	2509089	ArgumentList	& col -> base_td		2509062	1					
ANR	2509090	Argument	& col -> base_td		2509062	0					
ANR	2509091	UnaryOperationExpression	& col -> base_td		2509062	0					
ANR	2509092	UnaryOperator	&		2509062	0					
ANR	2509093	PtrMemberAccess	col -> base_td		2509062	1					
ANR	2509094	Identifier	col		2509062	0					
ANR	2509095	Identifier	base_td		2509062	1					
ANR	2509096	Argument	sizeof ( RecoveryBaseDescriptor )		2509062	1					
ANR	2509097	SizeofExpression	sizeof ( RecoveryBaseDescriptor )		2509062	0					
ANR	2509098	Sizeof	sizeof		2509062	0					
ANR	2509099	SizeofOperand	RecoveryBaseDescriptor		2509062	1					
ANR	2509100	Argument	NULL		2509062	2					
ANR	2509101	Identifier	NULL		2509062	0					
ANR	2509102	Argument	NULL		2509062	3					
ANR	2509103	Identifier	NULL		2509062	0					
ANR	2509104	ReturnStatement	return col ;	624:1:19312:19322	2509062	3	True				
ANR	2509105	Identifier	col		2509062	0					
ANR	2509106	ReturnType	RecoveryCompleteObjectLocator *		2509062	1					
ANR	2509107	Identifier	recovery_complete_object_locator_new		2509062	2					
ANR	2509108	ParameterList			2509062	3					
ANR	2509109	CFGEntryNode	ENTRY		2509062		True				
ANR	2509110	CFGExitNode	EXIT		2509062		True				
ANR	2509111	Symbol	R_NEW0		2509062						
ANR	2509112	Symbol	col		2509062						
ANR	2509113	Symbol	NULL		2509062						
ANR	2509114	Symbol	& col -> base_td		2509062						
ANR	2509115	Symbol	RecoveryCompleteObjectLocator		2509062						
ANR	2509116	Function	recovery_complete_object_locator_free	627:0:19327:19505							
ANR	2509117	FunctionDef	recovery_complete_object_locator_free (RecoveryCompleteObjectLocator * col)		2509116	0					
ANR	2509118	CompoundStatement		627:79:19406:19505	2509116	0					
ANR	2509119	IfStatement	if ( ! col )		2509116	0					
ANR	2509120	Condition	! col	628:5:19413:19416	2509116	0	True				
ANR	2509121	UnaryOperationExpression	! col		2509116	0					
ANR	2509122	UnaryOperator	!		2509116	0					
ANR	2509123	Identifier	col		2509116	1					
ANR	2509124	CompoundStatement		2:11:12:12	2509116	1					
ANR	2509125	ReturnStatement	return ;	629:2:19423:19429	2509116	0	True				
ANR	2509126	ExpressionStatement	r_list_free ( col -> bcd )	631:1:19435:19457	2509116	1	True				
ANR	2509127	CallExpression	r_list_free ( col -> bcd )		2509116	0					
ANR	2509128	Callee	r_list_free		2509116	0					
ANR	2509129	Identifier	r_list_free		2509116	0					
ANR	2509130	ArgumentList	col -> bcd		2509116	1					
ANR	2509131	Argument	col -> bcd		2509116	0					
ANR	2509132	PtrMemberAccess	col -> bcd		2509116	0					
ANR	2509133	Identifier	col		2509116	0					
ANR	2509134	Identifier	bcd		2509116	1					
ANR	2509135	ExpressionStatement	r_vector_clear ( & col -> base_td )	632:1:19460:19490	2509116	2	True				
ANR	2509136	CallExpression	r_vector_clear ( & col -> base_td )		2509116	0					
ANR	2509137	Callee	r_vector_clear		2509116	0					
ANR	2509138	Identifier	r_vector_clear		2509116	0					
ANR	2509139	ArgumentList	& col -> base_td		2509116	1					
ANR	2509140	Argument	& col -> base_td		2509116	0					
ANR	2509141	UnaryOperationExpression	& col -> base_td		2509116	0					
ANR	2509142	UnaryOperator	&		2509116	0					
ANR	2509143	PtrMemberAccess	col -> base_td		2509116	1					
ANR	2509144	Identifier	col		2509116	0					
ANR	2509145	Identifier	base_td		2509116	1					
ANR	2509146	ExpressionStatement	free ( col )	633:1:19493:19503	2509116	3	True				
ANR	2509147	CallExpression	free ( col )		2509116	0					
ANR	2509148	Callee	free		2509116	0					
ANR	2509149	Identifier	free		2509116	0					
ANR	2509150	ArgumentList	col		2509116	1					
ANR	2509151	Argument	col		2509116	0					
ANR	2509152	Identifier	col		2509116	0					
ANR	2509153	ReturnType	void		2509116	1					
ANR	2509154	Identifier	recovery_complete_object_locator_free		2509116	2					
ANR	2509155	ParameterList	RecoveryCompleteObjectLocator * col		2509116	3					
ANR	2509156	Parameter	RecoveryCompleteObjectLocator * col	627:43:19370:19403	2509116	0	True				
ANR	2509157	ParameterType	RecoveryCompleteObjectLocator *		2509116	0					
ANR	2509158	Identifier	col		2509116	1					
ANR	2509159	CFGEntryNode	ENTRY		2509116		True				
ANR	2509160	CFGExitNode	EXIT		2509116		True				
ANR	2509161	Symbol	col		2509116						
ANR	2509162	Symbol	* col		2509116						
ANR	2509163	Symbol	& col -> base_td		2509116						
ANR	2509164	Symbol	col -> bcd		2509116						
ANR	2509165	ClassDef	recovery_type_descriptor_t	637:0:19509:19633							
ANR	2509166	DeclStmt									
ANR	2509167	Decl							ut64	ut64	addr
ANR	2509168	DeclStmt									
ANR	2509169	Decl							bool	bool	valid
ANR	2509170	DeclStmt									
ANR	2509171	Decl							rtti_type_descriptor	rtti_type_descriptor	td
ANR	2509172	DeclStmt									
ANR	2509173	Decl							RecoveryCompleteObjectLocator	RecoveryCompleteObjectLocator *	col
ANR	2509174	Function	recovery_type_descriptor_new	644:0:19637:19912							
ANR	2509175	FunctionDef	recovery_type_descriptor_new ()		2509174	0					
ANR	2509176	CompoundStatement		644:55:19692:19912	2509174	0					
ANR	2509177	IdentifierDeclStatement	RecoveryTypeDescriptor * td = R_NEW ( RecoveryTypeDescriptor ) ;	645:1:19695:19754	2509174	0	True				
ANR	2509178	IdentifierDecl	* td = R_NEW ( RecoveryTypeDescriptor )		2509174	0					
ANR	2509179	IdentifierDeclType	RecoveryTypeDescriptor *		2509174	0					
ANR	2509180	Identifier	td		2509174	1					
ANR	2509181	AssignmentExpression	* td = R_NEW ( RecoveryTypeDescriptor )		2509174	2		=			
ANR	2509182	Identifier	td		2509174	0					
ANR	2509183	CallExpression	R_NEW ( RecoveryTypeDescriptor )		2509174	1					
ANR	2509184	Callee	R_NEW		2509174	0					
ANR	2509185	Identifier	R_NEW		2509174	0					
ANR	2509186	ArgumentList	RecoveryTypeDescriptor		2509174	1					
ANR	2509187	Argument	RecoveryTypeDescriptor		2509174	0					
ANR	2509188	Identifier	RecoveryTypeDescriptor		2509174	0					
ANR	2509189	IfStatement	if ( ! td )		2509174	1					
ANR	2509190	Condition	! td	646:5:19761:19763	2509174	0	True				
ANR	2509191	UnaryOperationExpression	! td		2509174	0					
ANR	2509192	UnaryOperator	!		2509174	0					
ANR	2509193	Identifier	td		2509174	1					
ANR	2509194	CompoundStatement		3:10:73:73	2509174	1					
ANR	2509195	ReturnStatement	return NULL ;	647:2:19770:19781	2509174	0	True				
ANR	2509196	Identifier	NULL		2509174	0					
ANR	2509197	ExpressionStatement	td -> addr = 0	650:1:19788:19800	2509174	2	True				
ANR	2509198	AssignmentExpression	td -> addr = 0		2509174	0		=			
ANR	2509199	PtrMemberAccess	td -> addr		2509174	0					
ANR	2509200	Identifier	td		2509174	0					
ANR	2509201	Identifier	addr		2509174	1					
ANR	2509202	PrimaryExpression	0		2509174	1					
ANR	2509203	ExpressionStatement	td -> valid = false	651:1:19803:19820	2509174	3	True				
ANR	2509204	AssignmentExpression	td -> valid = false		2509174	0		=			
ANR	2509205	PtrMemberAccess	td -> valid		2509174	0					
ANR	2509206	Identifier	td		2509174	0					
ANR	2509207	Identifier	valid		2509174	1					
ANR	2509208	Identifier	false		2509174	1					
ANR	2509209	ExpressionStatement	"memset ( & td -> td , 0 , sizeof ( td -> td ) )"	652:1:19823:19859	2509174	4	True				
ANR	2509210	CallExpression	"memset ( & td -> td , 0 , sizeof ( td -> td ) )"		2509174	0					
ANR	2509211	Callee	memset		2509174	0					
ANR	2509212	Identifier	memset		2509174	0					
ANR	2509213	ArgumentList	& td -> td		2509174	1					
ANR	2509214	Argument	& td -> td		2509174	0					
ANR	2509215	UnaryOperationExpression	& td -> td		2509174	0					
ANR	2509216	UnaryOperator	&		2509174	0					
ANR	2509217	PtrMemberAccess	td -> td		2509174	1					
ANR	2509218	Identifier	td		2509174	0					
ANR	2509219	Identifier	td		2509174	1					
ANR	2509220	Argument	0		2509174	1					
ANR	2509221	PrimaryExpression	0		2509174	0					
ANR	2509222	Argument	sizeof ( td -> td )		2509174	2					
ANR	2509223	SizeofExpression	sizeof ( td -> td )		2509174	0					
ANR	2509224	Sizeof	sizeof		2509174	0					
ANR	2509225	PtrMemberAccess	td -> td		2509174	1					
ANR	2509226	Identifier	td		2509174	0					
ANR	2509227	Identifier	td		2509174	1					
ANR	2509228	ExpressionStatement	td -> col = NULL	653:1:19862:19876	2509174	5	True				
ANR	2509229	AssignmentExpression	td -> col = NULL		2509174	0		=			
ANR	2509230	PtrMemberAccess	td -> col		2509174	0					
ANR	2509231	Identifier	td		2509174	0					
ANR	2509232	Identifier	col		2509174	1					
ANR	2509233	Identifier	NULL		2509174	1					
ANR	2509234	ReturnStatement	return td ;	655:1:19901:19910	2509174	6	True				
ANR	2509235	Identifier	td		2509174	0					
ANR	2509236	ReturnType	RecoveryTypeDescriptor *		2509174	1					
ANR	2509237	Identifier	recovery_type_descriptor_new		2509174	2					
ANR	2509238	ParameterList			2509174	3					
ANR	2509239	CFGEntryNode	ENTRY		2509174		True				
ANR	2509240	CFGExitNode	EXIT		2509174		True				
ANR	2509241	Symbol	td		2509174						
ANR	2509242	Symbol	td -> valid		2509174						
ANR	2509243	Symbol	RecoveryTypeDescriptor		2509174						
ANR	2509244	Symbol	td -> col		2509174						
ANR	2509245	Symbol	NULL		2509174						
ANR	2509246	Symbol	* td		2509174						
ANR	2509247	Symbol	td -> td		2509174						
ANR	2509248	Symbol	& td -> td		2509174						
ANR	2509249	Symbol	false		2509174						
ANR	2509250	Symbol	R_NEW		2509174						
ANR	2509251	Symbol	td -> addr		2509174						
ANR	2509252	Function	recovery_type_descriptor_free	658:0:19915:20055							
ANR	2509253	FunctionDef	recovery_type_descriptor_free (RecoveryTypeDescriptor * td)		2509252	0					
ANR	2509254	CompoundStatement		658:63:19978:20055	2509252	0					
ANR	2509255	IfStatement	if ( ! td )		2509252	0					
ANR	2509256	Condition	! td	659:5:19985:19987	2509252	0	True				
ANR	2509257	UnaryOperationExpression	! td		2509252	0					
ANR	2509258	UnaryOperator	!		2509252	0					
ANR	2509259	Identifier	td		2509252	1					
ANR	2509260	CompoundStatement		2:10:11:11	2509252	1					
ANR	2509261	ReturnStatement	return ;	660:2:19994:20000	2509252	0	True				
ANR	2509262	ExpressionStatement	rtti_type_descriptor_fini ( & td -> td )	662:1:20006:20041	2509252	1	True				
ANR	2509263	CallExpression	rtti_type_descriptor_fini ( & td -> td )		2509252	0					
ANR	2509264	Callee	rtti_type_descriptor_fini		2509252	0					
ANR	2509265	Identifier	rtti_type_descriptor_fini		2509252	0					
ANR	2509266	ArgumentList	& td -> td		2509252	1					
ANR	2509267	Argument	& td -> td		2509252	0					
ANR	2509268	UnaryOperationExpression	& td -> td		2509252	0					
ANR	2509269	UnaryOperator	&		2509252	0					
ANR	2509270	PtrMemberAccess	td -> td		2509252	1					
ANR	2509271	Identifier	td		2509252	0					
ANR	2509272	Identifier	td		2509252	1					
ANR	2509273	ExpressionStatement	free ( td )	663:1:20044:20053	2509252	2	True				
ANR	2509274	CallExpression	free ( td )		2509252	0					
ANR	2509275	Callee	free		2509252	0					
ANR	2509276	Identifier	free		2509252	0					
ANR	2509277	ArgumentList	td		2509252	1					
ANR	2509278	Argument	td		2509252	0					
ANR	2509279	Identifier	td		2509252	0					
ANR	2509280	ReturnType	void		2509252	1					
ANR	2509281	Identifier	recovery_type_descriptor_free		2509252	2					
ANR	2509282	ParameterList	RecoveryTypeDescriptor * td		2509252	3					
ANR	2509283	Parameter	RecoveryTypeDescriptor * td	658:35:19950:19975	2509252	0	True				
ANR	2509284	ParameterType	RecoveryTypeDescriptor *		2509252	0					
ANR	2509285	Identifier	td		2509252	1					
ANR	2509286	CFGEntryNode	ENTRY		2509252		True				
ANR	2509287	CFGExitNode	EXIT		2509252		True				
ANR	2509288	Symbol	td		2509252						
ANR	2509289	Symbol	& td -> td		2509252						
ANR	2509290	ClassDef	rtti_msvc_anal_context_t	667:8:20067:20529							
ANR	2509291	DeclStmt									
ANR	2509292	Decl							RVTableContext	RVTableContext *	vt_context
ANR	2509293	DeclStmt									
ANR	2509294	Decl							RPVector	RPVector	vtables
ANR	2509295	DeclStmt									
ANR	2509296	Decl							RPVector	RPVector	complete_object_locators
ANR	2509297	DeclStmt									
ANR	2509298	Decl							HtUP	HtUP *	addr_col
ANR	2509299	DeclStmt									
ANR	2509300	Decl							RPVector	RPVector	type_descriptors
ANR	2509301	DeclStmt									
ANR	2509302	Decl							HtUP	HtUP *	addr_td
ANR	2509303	DeclStmt									
ANR	2509304	Decl							HtUP	HtUP *	col_td_classes
ANR	2509305	DeclStmt									
ANR	2509306	Decl							rtti_msvc_anal_context_t	rtti_msvc_anal_context_t	RRTTIMSVCAnalContext
ANR	2509307	DeclStmt									
ANR	2509308	Decl							RecoveryTypeDescriptor	"RecoveryTypeDescriptor * ( RRTTIMSVCAnalContext * context , ut64 addr , RecoveryCompleteObjectLocator * col )"	recovery_anal_type_descriptor
ANR	2509309	Function	recovery_anal_complete_object_locator	680:0:20667:22907							
ANR	2509310	FunctionDef	"recovery_anal_complete_object_locator (RRTTIMSVCAnalContext * context , ut64 addr , RVTableInfo * vtable)"		2509309	0					
ANR	2509311	CompoundStatement		680:132:20799:22907	2509309	0					
ANR	2509312	IdentifierDeclStatement	"RecoveryCompleteObjectLocator * col = ht_up_find ( context -> addr_col , addr , NULL ) ;"	681:1:20802:20881	2509309	0	True				
ANR	2509313	IdentifierDecl	"* col = ht_up_find ( context -> addr_col , addr , NULL )"		2509309	0					
ANR	2509314	IdentifierDeclType	RecoveryCompleteObjectLocator *		2509309	0					
ANR	2509315	Identifier	col		2509309	1					
ANR	2509316	AssignmentExpression	"* col = ht_up_find ( context -> addr_col , addr , NULL )"		2509309	2		=			
ANR	2509317	Identifier	col		2509309	0					
ANR	2509318	CallExpression	"ht_up_find ( context -> addr_col , addr , NULL )"		2509309	1					
ANR	2509319	Callee	ht_up_find		2509309	0					
ANR	2509320	Identifier	ht_up_find		2509309	0					
ANR	2509321	ArgumentList	context -> addr_col		2509309	1					
ANR	2509322	Argument	context -> addr_col		2509309	0					
ANR	2509323	PtrMemberAccess	context -> addr_col		2509309	0					
ANR	2509324	Identifier	context		2509309	0					
ANR	2509325	Identifier	addr_col		2509309	1					
ANR	2509326	Argument	addr		2509309	1					
ANR	2509327	Identifier	addr		2509309	0					
ANR	2509328	Argument	NULL		2509309	2					
ANR	2509329	Identifier	NULL		2509309	0					
ANR	2509330	IfStatement	if ( col )		2509309	1					
ANR	2509331	Condition	col	682:5:20888:20890	2509309	0	True				
ANR	2509332	Identifier	col		2509309	0					
ANR	2509333	CompoundStatement		3:10:93:93	2509309	1					
ANR	2509334	ReturnStatement	return col ;	683:2:20897:20907	2509309	0	True				
ANR	2509335	Identifier	col		2509309	0					
ANR	2509336	ExpressionStatement	col = recovery_complete_object_locator_new ( )	686:1:20914:20959	2509309	2	True				
ANR	2509337	AssignmentExpression	col = recovery_complete_object_locator_new ( )		2509309	0		=			
ANR	2509338	Identifier	col		2509309	0					
ANR	2509339	CallExpression	recovery_complete_object_locator_new ( )		2509309	1					
ANR	2509340	Callee	recovery_complete_object_locator_new		2509309	0					
ANR	2509341	Identifier	recovery_complete_object_locator_new		2509309	0					
ANR	2509342	ArgumentList			2509309	1					
ANR	2509343	IfStatement	if ( ! col )		2509309	3					
ANR	2509344	Condition	! col	687:5:20966:20969	2509309	0	True				
ANR	2509345	UnaryOperationExpression	! col		2509309	0					
ANR	2509346	UnaryOperator	!		2509309	0					
ANR	2509347	Identifier	col		2509309	1					
ANR	2509348	CompoundStatement		8:11:172:172	2509309	1					
ANR	2509349	ReturnStatement	return NULL ;	688:2:20976:20987	2509309	0	True				
ANR	2509350	Identifier	NULL		2509309	0					
ANR	2509351	ExpressionStatement	"r_pvector_push ( & context -> complete_object_locators , col )"	690:1:20993:21049	2509309	4	True				
ANR	2509352	CallExpression	"r_pvector_push ( & context -> complete_object_locators , col )"		2509309	0					
ANR	2509353	Callee	r_pvector_push		2509309	0					
ANR	2509354	Identifier	r_pvector_push		2509309	0					
ANR	2509355	ArgumentList	& context -> complete_object_locators		2509309	1					
ANR	2509356	Argument	& context -> complete_object_locators		2509309	0					
ANR	2509357	UnaryOperationExpression	& context -> complete_object_locators		2509309	0					
ANR	2509358	UnaryOperator	&		2509309	0					
ANR	2509359	PtrMemberAccess	context -> complete_object_locators		2509309	1					
ANR	2509360	Identifier	context		2509309	0					
ANR	2509361	Identifier	complete_object_locators		2509309	1					
ANR	2509362	Argument	col		2509309	1					
ANR	2509363	Identifier	col		2509309	0					
ANR	2509364	ExpressionStatement	"ht_up_insert ( context -> addr_col , addr , col )"	691:1:21052:21095	2509309	5	True				
ANR	2509365	CallExpression	"ht_up_insert ( context -> addr_col , addr , col )"		2509309	0					
ANR	2509366	Callee	ht_up_insert		2509309	0					
ANR	2509367	Identifier	ht_up_insert		2509309	0					
ANR	2509368	ArgumentList	context -> addr_col		2509309	1					
ANR	2509369	Argument	context -> addr_col		2509309	0					
ANR	2509370	PtrMemberAccess	context -> addr_col		2509309	0					
ANR	2509371	Identifier	context		2509309	0					
ANR	2509372	Identifier	addr_col		2509309	1					
ANR	2509373	Argument	addr		2509309	1					
ANR	2509374	Identifier	addr		2509309	0					
ANR	2509375	Argument	col		2509309	2					
ANR	2509376	Identifier	col		2509309	0					
ANR	2509377	ExpressionStatement	col -> addr = addr	692:1:21098:21114	2509309	6	True				
ANR	2509378	AssignmentExpression	col -> addr = addr		2509309	0		=			
ANR	2509379	PtrMemberAccess	col -> addr		2509309	0					
ANR	2509380	Identifier	col		2509309	0					
ANR	2509381	Identifier	addr		2509309	1					
ANR	2509382	Identifier	addr		2509309	1					
ANR	2509383	ExpressionStatement	"col -> valid = rtti_msvc_read_complete_object_locator ( context -> vt_context , addr , & col -> col )"	693:1:21117:21207	2509309	7	True				
ANR	2509384	AssignmentExpression	"col -> valid = rtti_msvc_read_complete_object_locator ( context -> vt_context , addr , & col -> col )"		2509309	0		=			
ANR	2509385	PtrMemberAccess	col -> valid		2509309	0					
ANR	2509386	Identifier	col		2509309	0					
ANR	2509387	Identifier	valid		2509309	1					
ANR	2509388	CallExpression	"rtti_msvc_read_complete_object_locator ( context -> vt_context , addr , & col -> col )"		2509309	1					
ANR	2509389	Callee	rtti_msvc_read_complete_object_locator		2509309	0					
ANR	2509390	Identifier	rtti_msvc_read_complete_object_locator		2509309	0					
ANR	2509391	ArgumentList	context -> vt_context		2509309	1					
ANR	2509392	Argument	context -> vt_context		2509309	0					
ANR	2509393	PtrMemberAccess	context -> vt_context		2509309	0					
ANR	2509394	Identifier	context		2509309	0					
ANR	2509395	Identifier	vt_context		2509309	1					
ANR	2509396	Argument	addr		2509309	1					
ANR	2509397	Identifier	addr		2509309	0					
ANR	2509398	Argument	& col -> col		2509309	2					
ANR	2509399	UnaryOperationExpression	& col -> col		2509309	0					
ANR	2509400	UnaryOperator	&		2509309	0					
ANR	2509401	PtrMemberAccess	col -> col		2509309	1					
ANR	2509402	Identifier	col		2509309	0					
ANR	2509403	Identifier	col		2509309	1					
ANR	2509404	IfStatement	if ( ! col -> valid )		2509309	8					
ANR	2509405	Condition	! col -> valid	694:5:21214:21224	2509309	0	True				
ANR	2509406	UnaryOperationExpression	! col -> valid		2509309	0					
ANR	2509407	UnaryOperator	!		2509309	0					
ANR	2509408	PtrMemberAccess	col -> valid		2509309	1					
ANR	2509409	Identifier	col		2509309	0					
ANR	2509410	Identifier	valid		2509309	1					
ANR	2509411	CompoundStatement		15:18:427:427	2509309	1					
ANR	2509412	ReturnStatement	return col ;	695:2:21231:21241	2509309	0	True				
ANR	2509413	Identifier	col		2509309	0					
ANR	2509414	ExpressionStatement	col -> vtable = vtable	697:1:21247:21267	2509309	9	True				
ANR	2509415	AssignmentExpression	col -> vtable = vtable		2509309	0		=			
ANR	2509416	PtrMemberAccess	col -> vtable		2509309	0					
ANR	2509417	Identifier	col		2509309	0					
ANR	2509418	Identifier	vtable		2509309	1					
ANR	2509419	Identifier	vtable		2509309	1					
ANR	2509420	IdentifierDeclStatement	"ut64 td_addr = rtti_msvc_addr ( context -> vt_context , col -> addr , col -> col . object_base , col -> col . type_descriptor_addr ) ;"	700:1:21272:21387	2509309	10	True				
ANR	2509421	IdentifierDecl	"td_addr = rtti_msvc_addr ( context -> vt_context , col -> addr , col -> col . object_base , col -> col . type_descriptor_addr )"		2509309	0					
ANR	2509422	IdentifierDeclType	ut64		2509309	0					
ANR	2509423	Identifier	td_addr		2509309	1					
ANR	2509424	AssignmentExpression	"td_addr = rtti_msvc_addr ( context -> vt_context , col -> addr , col -> col . object_base , col -> col . type_descriptor_addr )"		2509309	2		=			
ANR	2509425	Identifier	td_addr		2509309	0					
ANR	2509426	CallExpression	"rtti_msvc_addr ( context -> vt_context , col -> addr , col -> col . object_base , col -> col . type_descriptor_addr )"		2509309	1					
ANR	2509427	Callee	rtti_msvc_addr		2509309	0					
ANR	2509428	Identifier	rtti_msvc_addr		2509309	0					
ANR	2509429	ArgumentList	context -> vt_context		2509309	1					
ANR	2509430	Argument	context -> vt_context		2509309	0					
ANR	2509431	PtrMemberAccess	context -> vt_context		2509309	0					
ANR	2509432	Identifier	context		2509309	0					
ANR	2509433	Identifier	vt_context		2509309	1					
ANR	2509434	Argument	col -> addr		2509309	1					
ANR	2509435	PtrMemberAccess	col -> addr		2509309	0					
ANR	2509436	Identifier	col		2509309	0					
ANR	2509437	Identifier	addr		2509309	1					
ANR	2509438	Argument	col -> col . object_base		2509309	2					
ANR	2509439	MemberAccess	col -> col . object_base		2509309	0					
ANR	2509440	PtrMemberAccess	col -> col		2509309	0					
ANR	2509441	Identifier	col		2509309	0					
ANR	2509442	Identifier	col		2509309	1					
ANR	2509443	Identifier	object_base		2509309	1					
ANR	2509444	Argument	col -> col . type_descriptor_addr		2509309	3					
ANR	2509445	MemberAccess	col -> col . type_descriptor_addr		2509309	0					
ANR	2509446	PtrMemberAccess	col -> col		2509309	0					
ANR	2509447	Identifier	col		2509309	0					
ANR	2509448	Identifier	col		2509309	1					
ANR	2509449	Identifier	type_descriptor_addr		2509309	1					
ANR	2509450	ExpressionStatement	"col -> td = recovery_anal_type_descriptor ( context , td_addr , col )"	701:1:21390:21453	2509309	11	True				
ANR	2509451	AssignmentExpression	"col -> td = recovery_anal_type_descriptor ( context , td_addr , col )"		2509309	0		=			
ANR	2509452	PtrMemberAccess	col -> td		2509309	0					
ANR	2509453	Identifier	col		2509309	0					
ANR	2509454	Identifier	td		2509309	1					
ANR	2509455	CallExpression	"recovery_anal_type_descriptor ( context , td_addr , col )"		2509309	1					
ANR	2509456	Callee	recovery_anal_type_descriptor		2509309	0					
ANR	2509457	Identifier	recovery_anal_type_descriptor		2509309	0					
ANR	2509458	ArgumentList	context		2509309	1					
ANR	2509459	Argument	context		2509309	0					
ANR	2509460	Identifier	context		2509309	0					
ANR	2509461	Argument	td_addr		2509309	1					
ANR	2509462	Identifier	td_addr		2509309	0					
ANR	2509463	Argument	col		2509309	2					
ANR	2509464	Identifier	col		2509309	0					
ANR	2509465	IfStatement	if ( ! col -> td -> valid )		2509309	12					
ANR	2509466	Condition	! col -> td -> valid	702:5:21460:21474	2509309	0	True				
ANR	2509467	UnaryOperationExpression	! col -> td -> valid		2509309	0					
ANR	2509468	UnaryOperator	!		2509309	0					
ANR	2509469	PtrMemberAccess	col -> td -> valid		2509309	1					
ANR	2509470	PtrMemberAccess	col -> td		2509309	0					
ANR	2509471	Identifier	col		2509309	0					
ANR	2509472	Identifier	td		2509309	1					
ANR	2509473	Identifier	valid		2509309	1					
ANR	2509474	CompoundStatement		23:22:677:677	2509309	1					
ANR	2509475	ExpressionStatement	col -> valid = false	703:2:21481:21499	2509309	0	True				
ANR	2509476	AssignmentExpression	col -> valid = false		2509309	0		=			
ANR	2509477	PtrMemberAccess	col -> valid		2509309	0					
ANR	2509478	Identifier	col		2509309	0					
ANR	2509479	Identifier	valid		2509309	1					
ANR	2509480	Identifier	false		2509309	1					
ANR	2509481	ReturnStatement	return col ;	704:2:21503:21513	2509309	1	True				
ANR	2509482	Identifier	col		2509309	0					
ANR	2509483	ExpressionStatement	col -> td -> col = col	706:1:21519:21537	2509309	13	True				
ANR	2509484	AssignmentExpression	col -> td -> col = col		2509309	0		=			
ANR	2509485	PtrMemberAccess	col -> td -> col		2509309	0					
ANR	2509486	PtrMemberAccess	col -> td		2509309	0					
ANR	2509487	Identifier	col		2509309	0					
ANR	2509488	Identifier	td		2509309	1					
ANR	2509489	Identifier	col		2509309	1					
ANR	2509490	Identifier	col		2509309	1					
ANR	2509491	IdentifierDeclStatement	"ut64 chd_addr = rtti_msvc_addr ( context -> vt_context , col -> addr , col -> col . object_base , col -> col . class_descriptor_addr ) ;"	709:1:21542:21659	2509309	14	True				
ANR	2509492	IdentifierDecl	"chd_addr = rtti_msvc_addr ( context -> vt_context , col -> addr , col -> col . object_base , col -> col . class_descriptor_addr )"		2509309	0					
ANR	2509493	IdentifierDeclType	ut64		2509309	0					
ANR	2509494	Identifier	chd_addr		2509309	1					
ANR	2509495	AssignmentExpression	"chd_addr = rtti_msvc_addr ( context -> vt_context , col -> addr , col -> col . object_base , col -> col . class_descriptor_addr )"		2509309	2		=			
ANR	2509496	Identifier	chd_addr		2509309	0					
ANR	2509497	CallExpression	"rtti_msvc_addr ( context -> vt_context , col -> addr , col -> col . object_base , col -> col . class_descriptor_addr )"		2509309	1					
ANR	2509498	Callee	rtti_msvc_addr		2509309	0					
ANR	2509499	Identifier	rtti_msvc_addr		2509309	0					
ANR	2509500	ArgumentList	context -> vt_context		2509309	1					
ANR	2509501	Argument	context -> vt_context		2509309	0					
ANR	2509502	PtrMemberAccess	context -> vt_context		2509309	0					
ANR	2509503	Identifier	context		2509309	0					
ANR	2509504	Identifier	vt_context		2509309	1					
ANR	2509505	Argument	col -> addr		2509309	1					
ANR	2509506	PtrMemberAccess	col -> addr		2509309	0					
ANR	2509507	Identifier	col		2509309	0					
ANR	2509508	Identifier	addr		2509309	1					
ANR	2509509	Argument	col -> col . object_base		2509309	2					
ANR	2509510	MemberAccess	col -> col . object_base		2509309	0					
ANR	2509511	PtrMemberAccess	col -> col		2509309	0					
ANR	2509512	Identifier	col		2509309	0					
ANR	2509513	Identifier	col		2509309	1					
ANR	2509514	Identifier	object_base		2509309	1					
ANR	2509515	Argument	col -> col . class_descriptor_addr		2509309	3					
ANR	2509516	MemberAccess	col -> col . class_descriptor_addr		2509309	0					
ANR	2509517	PtrMemberAccess	col -> col		2509309	0					
ANR	2509518	Identifier	col		2509309	0					
ANR	2509519	Identifier	col		2509309	1					
ANR	2509520	Identifier	class_descriptor_addr		2509309	1					
ANR	2509521	ExpressionStatement	"col -> valid &= rtti_msvc_read_class_hierarchy_descriptor ( context -> vt_context , chd_addr , & col -> chd )"	710:1:21662:21760	2509309	15	True				
ANR	2509522	AssignmentExpression	"col -> valid &= rtti_msvc_read_class_hierarchy_descriptor ( context -> vt_context , chd_addr , & col -> chd )"		2509309	0		&=			
ANR	2509523	PtrMemberAccess	col -> valid		2509309	0					
ANR	2509524	Identifier	col		2509309	0					
ANR	2509525	Identifier	valid		2509309	1					
ANR	2509526	CallExpression	"rtti_msvc_read_class_hierarchy_descriptor ( context -> vt_context , chd_addr , & col -> chd )"		2509309	1					
ANR	2509527	Callee	rtti_msvc_read_class_hierarchy_descriptor		2509309	0					
ANR	2509528	Identifier	rtti_msvc_read_class_hierarchy_descriptor		2509309	0					
ANR	2509529	ArgumentList	context -> vt_context		2509309	1					
ANR	2509530	Argument	context -> vt_context		2509309	0					
ANR	2509531	PtrMemberAccess	context -> vt_context		2509309	0					
ANR	2509532	Identifier	context		2509309	0					
ANR	2509533	Identifier	vt_context		2509309	1					
ANR	2509534	Argument	chd_addr		2509309	1					
ANR	2509535	Identifier	chd_addr		2509309	0					
ANR	2509536	Argument	& col -> chd		2509309	2					
ANR	2509537	UnaryOperationExpression	& col -> chd		2509309	0					
ANR	2509538	UnaryOperator	&		2509309	0					
ANR	2509539	PtrMemberAccess	col -> chd		2509309	1					
ANR	2509540	Identifier	col		2509309	0					
ANR	2509541	Identifier	chd		2509309	1					
ANR	2509542	IfStatement	if ( ! col -> valid )		2509309	16					
ANR	2509543	Condition	! col -> valid	711:5:21767:21777	2509309	0	True				
ANR	2509544	UnaryOperationExpression	! col -> valid		2509309	0					
ANR	2509545	UnaryOperator	!		2509309	0					
ANR	2509546	PtrMemberAccess	col -> valid		2509309	1					
ANR	2509547	Identifier	col		2509309	0					
ANR	2509548	Identifier	valid		2509309	1					
ANR	2509549	CompoundStatement		32:18:980:980	2509309	1					
ANR	2509550	ReturnStatement	return col ;	712:2:21784:21794	2509309	0	True				
ANR	2509551	Identifier	col		2509309	0					
ANR	2509552	IdentifierDeclStatement	ut64 base = col -> chd . base_class_array_addr ;	716:1:21802:21844	2509309	17	True				
ANR	2509553	IdentifierDecl	base = col -> chd . base_class_array_addr		2509309	0					
ANR	2509554	IdentifierDeclType	ut64		2509309	0					
ANR	2509555	Identifier	base		2509309	1					
ANR	2509556	AssignmentExpression	base = col -> chd . base_class_array_addr		2509309	2		=			
ANR	2509557	Identifier	base		2509309	0					
ANR	2509558	MemberAccess	col -> chd . base_class_array_addr		2509309	1					
ANR	2509559	PtrMemberAccess	col -> chd		2509309	0					
ANR	2509560	Identifier	col		2509309	0					
ANR	2509561	Identifier	chd		2509309	1					
ANR	2509562	Identifier	base_class_array_addr		2509309	1					
ANR	2509563	IdentifierDeclStatement	ut32 baseClassArrayOffset = 0 ;	717:1:21847:21876	2509309	18	True				
ANR	2509564	IdentifierDecl	baseClassArrayOffset = 0		2509309	0					
ANR	2509565	IdentifierDeclType	ut32		2509309	0					
ANR	2509566	Identifier	baseClassArrayOffset		2509309	1					
ANR	2509567	AssignmentExpression	baseClassArrayOffset = 0		2509309	2		=			
ANR	2509568	Identifier	baseClassArrayOffset		2509309	0					
ANR	2509569	PrimaryExpression	0		2509309	1					
ANR	2509570	IfStatement	if ( context -> vt_context -> word_size == 8 )		2509309	19					
ANR	2509571	Condition	context -> vt_context -> word_size == 8	718:5:21883:21917	2509309	0	True				
ANR	2509572	EqualityExpression	context -> vt_context -> word_size == 8		2509309	0		==			
ANR	2509573	PtrMemberAccess	context -> vt_context -> word_size		2509309	0					
ANR	2509574	PtrMemberAccess	context -> vt_context		2509309	0					
ANR	2509575	Identifier	context		2509309	0					
ANR	2509576	Identifier	vt_context		2509309	1					
ANR	2509577	Identifier	word_size		2509309	1					
ANR	2509578	PrimaryExpression	8		2509309	1					
ANR	2509579	CompoundStatement		39:42:1120:1120	2509309	1					
ANR	2509580	ExpressionStatement	base = col -> addr - col -> col . object_base	719:2:21924:21963	2509309	0	True				
ANR	2509581	AssignmentExpression	base = col -> addr - col -> col . object_base		2509309	0		=			
ANR	2509582	Identifier	base		2509309	0					
ANR	2509583	AdditiveExpression	col -> addr - col -> col . object_base		2509309	1		-			
ANR	2509584	PtrMemberAccess	col -> addr		2509309	0					
ANR	2509585	Identifier	col		2509309	0					
ANR	2509586	Identifier	addr		2509309	1					
ANR	2509587	MemberAccess	col -> col . object_base		2509309	1					
ANR	2509588	PtrMemberAccess	col -> col		2509309	0					
ANR	2509589	Identifier	col		2509309	0					
ANR	2509590	Identifier	col		2509309	1					
ANR	2509591	Identifier	object_base		2509309	1					
ANR	2509592	ExpressionStatement	baseClassArrayOffset = col -> chd . base_class_array_addr	720:2:21967:22020	2509309	1	True				
ANR	2509593	AssignmentExpression	baseClassArrayOffset = col -> chd . base_class_array_addr		2509309	0		=			
ANR	2509594	Identifier	baseClassArrayOffset		2509309	0					
ANR	2509595	MemberAccess	col -> chd . base_class_array_addr		2509309	1					
ANR	2509596	PtrMemberAccess	col -> chd		2509309	0					
ANR	2509597	Identifier	col		2509309	0					
ANR	2509598	Identifier	chd		2509309	1					
ANR	2509599	Identifier	base_class_array_addr		2509309	1					
ANR	2509600	ExpressionStatement	"col -> bcd = rtti_msvc_read_base_class_array ( context -> vt_context , col -> chd . num_base_classes , base , baseClassArrayOffset )"	723:1:22027:22146	2509309	20	True				
ANR	2509601	AssignmentExpression	"col -> bcd = rtti_msvc_read_base_class_array ( context -> vt_context , col -> chd . num_base_classes , base , baseClassArrayOffset )"		2509309	0		=			
ANR	2509602	PtrMemberAccess	col -> bcd		2509309	0					
ANR	2509603	Identifier	col		2509309	0					
ANR	2509604	Identifier	bcd		2509309	1					
ANR	2509605	CallExpression	"rtti_msvc_read_base_class_array ( context -> vt_context , col -> chd . num_base_classes , base , baseClassArrayOffset )"		2509309	1					
ANR	2509606	Callee	rtti_msvc_read_base_class_array		2509309	0					
ANR	2509607	Identifier	rtti_msvc_read_base_class_array		2509309	0					
ANR	2509608	ArgumentList	context -> vt_context		2509309	1					
ANR	2509609	Argument	context -> vt_context		2509309	0					
ANR	2509610	PtrMemberAccess	context -> vt_context		2509309	0					
ANR	2509611	Identifier	context		2509309	0					
ANR	2509612	Identifier	vt_context		2509309	1					
ANR	2509613	Argument	col -> chd . num_base_classes		2509309	1					
ANR	2509614	MemberAccess	col -> chd . num_base_classes		2509309	0					
ANR	2509615	PtrMemberAccess	col -> chd		2509309	0					
ANR	2509616	Identifier	col		2509309	0					
ANR	2509617	Identifier	chd		2509309	1					
ANR	2509618	Identifier	num_base_classes		2509309	1					
ANR	2509619	Argument	base		2509309	2					
ANR	2509620	Identifier	base		2509309	0					
ANR	2509621	Argument	baseClassArrayOffset		2509309	3					
ANR	2509622	Identifier	baseClassArrayOffset		2509309	0					
ANR	2509623	IfStatement	if ( ! col -> bcd )		2509309	21					
ANR	2509624	Condition	! col -> bcd	724:5:22153:22161	2509309	0	True				
ANR	2509625	UnaryOperationExpression	! col -> bcd		2509309	0					
ANR	2509626	UnaryOperator	!		2509309	0					
ANR	2509627	PtrMemberAccess	col -> bcd		2509309	1					
ANR	2509628	Identifier	col		2509309	0					
ANR	2509629	Identifier	bcd		2509309	1					
ANR	2509630	CompoundStatement		45:16:1364:1364	2509309	1					
ANR	2509631	ExpressionStatement	col -> valid = false	725:2:22168:22186	2509309	0	True				
ANR	2509632	AssignmentExpression	col -> valid = false		2509309	0		=			
ANR	2509633	PtrMemberAccess	col -> valid		2509309	0					
ANR	2509634	Identifier	col		2509309	0					
ANR	2509635	Identifier	valid		2509309	1					
ANR	2509636	Identifier	false		2509309	1					
ANR	2509637	ReturnStatement	return col ;	726:2:22190:22200	2509309	1	True				
ANR	2509638	Identifier	col		2509309	0					
ANR	2509639	ExpressionStatement	"r_vector_reserve ( & col -> base_td , ( size_t ) col -> bcd -> length )"	730:1:22208:22266	2509309	22	True				
ANR	2509640	CallExpression	"r_vector_reserve ( & col -> base_td , ( size_t ) col -> bcd -> length )"		2509309	0					
ANR	2509641	Callee	r_vector_reserve		2509309	0					
ANR	2509642	Identifier	r_vector_reserve		2509309	0					
ANR	2509643	ArgumentList	& col -> base_td		2509309	1					
ANR	2509644	Argument	& col -> base_td		2509309	0					
ANR	2509645	UnaryOperationExpression	& col -> base_td		2509309	0					
ANR	2509646	UnaryOperator	&		2509309	0					
ANR	2509647	PtrMemberAccess	col -> base_td		2509309	1					
ANR	2509648	Identifier	col		2509309	0					
ANR	2509649	Identifier	base_td		2509309	1					
ANR	2509650	Argument	( size_t ) col -> bcd -> length		2509309	1					
ANR	2509651	CastExpression	( size_t ) col -> bcd -> length		2509309	0					
ANR	2509652	CastTarget	size_t		2509309	0					
ANR	2509653	PtrMemberAccess	col -> bcd -> length		2509309	1					
ANR	2509654	PtrMemberAccess	col -> bcd		2509309	0					
ANR	2509655	Identifier	col		2509309	0					
ANR	2509656	Identifier	bcd		2509309	1					
ANR	2509657	Identifier	length		2509309	1					
ANR	2509658	IdentifierDeclStatement	RListIter * bcdIter ;	731:1:22269:22287	2509309	23	True				
ANR	2509659	IdentifierDecl	* bcdIter		2509309	0					
ANR	2509660	IdentifierDeclType	RListIter *		2509309	0					
ANR	2509661	Identifier	bcdIter		2509309	1					
ANR	2509662	IdentifierDeclStatement	rtti_base_class_descriptor * bcd ;	732:1:22290:22321	2509309	24	True				
ANR	2509663	IdentifierDecl	* bcd		2509309	0					
ANR	2509664	IdentifierDeclType	rtti_base_class_descriptor *		2509309	0					
ANR	2509665	Identifier	bcd		2509309	1					
ANR	2509666	Statement	r_list_foreach	733:1:22324:22337	2509309	25	True				
ANR	2509667	Statement	(	733:16:22339:22339	2509309	26	True				
ANR	2509668	Statement	col	733:17:22340:22342	2509309	27	True				
ANR	2509669	Statement	->	733:20:22343:22344	2509309	28	True				
ANR	2509670	Statement	bcd	733:22:22345:22347	2509309	29	True				
ANR	2509671	Statement	","	733:25:22348:22348	2509309	30	True				
ANR	2509672	Statement	bcdIter	733:27:22350:22356	2509309	31	True				
ANR	2509673	Statement	","	733:34:22357:22357	2509309	32	True				
ANR	2509674	Statement	bcd	733:36:22359:22361	2509309	33	True				
ANR	2509675	Statement	)	733:39:22362:22362	2509309	34	True				
ANR	2509676	CompoundStatement		66:2:1971:2042	2509309	35					
ANR	2509677	IdentifierDeclStatement	"ut64 base_td_addr = rtti_msvc_addr ( context -> vt_context , col -> addr , col -> col . object_base , bcd -> type_descriptor_addr ) ;"	734:2:22368:22484	2509309	0	True				
ANR	2509678	IdentifierDecl	"base_td_addr = rtti_msvc_addr ( context -> vt_context , col -> addr , col -> col . object_base , bcd -> type_descriptor_addr )"		2509309	0					
ANR	2509679	IdentifierDeclType	ut64		2509309	0					
ANR	2509680	Identifier	base_td_addr		2509309	1					
ANR	2509681	AssignmentExpression	"base_td_addr = rtti_msvc_addr ( context -> vt_context , col -> addr , col -> col . object_base , bcd -> type_descriptor_addr )"		2509309	2		=			
ANR	2509682	Identifier	base_td_addr		2509309	0					
ANR	2509683	CallExpression	"rtti_msvc_addr ( context -> vt_context , col -> addr , col -> col . object_base , bcd -> type_descriptor_addr )"		2509309	1					
ANR	2509684	Callee	rtti_msvc_addr		2509309	0					
ANR	2509685	Identifier	rtti_msvc_addr		2509309	0					
ANR	2509686	ArgumentList	context -> vt_context		2509309	1					
ANR	2509687	Argument	context -> vt_context		2509309	0					
ANR	2509688	PtrMemberAccess	context -> vt_context		2509309	0					
ANR	2509689	Identifier	context		2509309	0					
ANR	2509690	Identifier	vt_context		2509309	1					
ANR	2509691	Argument	col -> addr		2509309	1					
ANR	2509692	PtrMemberAccess	col -> addr		2509309	0					
ANR	2509693	Identifier	col		2509309	0					
ANR	2509694	Identifier	addr		2509309	1					
ANR	2509695	Argument	col -> col . object_base		2509309	2					
ANR	2509696	MemberAccess	col -> col . object_base		2509309	0					
ANR	2509697	PtrMemberAccess	col -> col		2509309	0					
ANR	2509698	Identifier	col		2509309	0					
ANR	2509699	Identifier	col		2509309	1					
ANR	2509700	Identifier	object_base		2509309	1					
ANR	2509701	Argument	bcd -> type_descriptor_addr		2509309	3					
ANR	2509702	PtrMemberAccess	bcd -> type_descriptor_addr		2509309	0					
ANR	2509703	Identifier	bcd		2509309	0					
ANR	2509704	Identifier	type_descriptor_addr		2509309	1					
ANR	2509705	IdentifierDeclStatement	"RecoveryTypeDescriptor * td = recovery_anal_type_descriptor ( context , base_td_addr , NULL ) ;"	735:2:22488:22576	2509309	1	True				
ANR	2509706	IdentifierDecl	"* td = recovery_anal_type_descriptor ( context , base_td_addr , NULL )"		2509309	0					
ANR	2509707	IdentifierDeclType	RecoveryTypeDescriptor *		2509309	0					
ANR	2509708	Identifier	td		2509309	1					
ANR	2509709	AssignmentExpression	"* td = recovery_anal_type_descriptor ( context , base_td_addr , NULL )"		2509309	2		=			
ANR	2509710	Identifier	td		2509309	0					
ANR	2509711	CallExpression	"recovery_anal_type_descriptor ( context , base_td_addr , NULL )"		2509309	1					
ANR	2509712	Callee	recovery_anal_type_descriptor		2509309	0					
ANR	2509713	Identifier	recovery_anal_type_descriptor		2509309	0					
ANR	2509714	ArgumentList	context		2509309	1					
ANR	2509715	Argument	context		2509309	0					
ANR	2509716	Identifier	context		2509309	0					
ANR	2509717	Argument	base_td_addr		2509309	1					
ANR	2509718	Identifier	base_td_addr		2509309	0					
ANR	2509719	Argument	NULL		2509309	2					
ANR	2509720	Identifier	NULL		2509309	0					
ANR	2509721	IfStatement	if ( td == col -> td )		2509309	2					
ANR	2509722	Condition	td == col -> td	736:6:22584:22596	2509309	0	True				
ANR	2509723	EqualityExpression	td == col -> td		2509309	0		==			
ANR	2509724	Identifier	td		2509309	0					
ANR	2509725	PtrMemberAccess	col -> td		2509309	1					
ANR	2509726	Identifier	col		2509309	0					
ANR	2509727	Identifier	td		2509309	1					
ANR	2509728	CompoundStatement		57:21:1799:1799	2509309	1					
ANR	2509729	ContinueStatement	continue ;	737:3:22604:22612	2509309	0	True				
ANR	2509730	IfStatement	if ( ! td -> valid )		2509309	3					
ANR	2509731	Condition	! td -> valid	739:6:22624:22633	2509309	0	True				
ANR	2509732	UnaryOperationExpression	! td -> valid		2509309	0					
ANR	2509733	UnaryOperator	!		2509309	0					
ANR	2509734	PtrMemberAccess	td -> valid		2509309	1					
ANR	2509735	Identifier	td		2509309	0					
ANR	2509736	Identifier	valid		2509309	1					
ANR	2509737	CompoundStatement		60:18:1836:1836	2509309	1					
ANR	2509738	IfStatement	if ( context -> vt_context -> anal -> verbose )		2509309	0					
ANR	2509739	Condition	context -> vt_context -> anal -> verbose	740:7:22645:22678	2509309	0	True				
ANR	2509740	PtrMemberAccess	context -> vt_context -> anal -> verbose		2509309	0					
ANR	2509741	PtrMemberAccess	context -> vt_context -> anal		2509309	0					
ANR	2509742	PtrMemberAccess	context -> vt_context		2509309	0					
ANR	2509743	Identifier	context		2509309	0					
ANR	2509744	Identifier	vt_context		2509309	1					
ANR	2509745	Identifier	anal		2509309	1					
ANR	2509746	Identifier	verbose		2509309	1					
ANR	2509747	CompoundStatement		61:43:1881:1881	2509309	1					
ANR	2509748	ExpressionStatement	"eprintf ( ""Warning: type descriptor of base is invalid.\\n"" )"	741:4:22687:22745	2509309	0	True				
ANR	2509749	CallExpression	"eprintf ( ""Warning: type descriptor of base is invalid.\\n"" )"		2509309	0					
ANR	2509750	Callee	eprintf		2509309	0					
ANR	2509751	Identifier	eprintf		2509309	0					
ANR	2509752	ArgumentList	"""Warning: type descriptor of base is invalid.\\n"""		2509309	1					
ANR	2509753	Argument	"""Warning: type descriptor of base is invalid.\\n"""		2509309	0					
ANR	2509754	PrimaryExpression	"""Warning: type descriptor of base is invalid.\\n"""		2509309	0					
ANR	2509755	ContinueStatement	continue ;	743:3:22755:22763	2509309	1	True				
ANR	2509756	IdentifierDeclStatement	"RecoveryBaseDescriptor * base_desc = r_vector_push ( & col -> base_td , NULL ) ;"	745:2:22771:22842	2509309	4	True				
ANR	2509757	IdentifierDecl	"* base_desc = r_vector_push ( & col -> base_td , NULL )"		2509309	0					
ANR	2509758	IdentifierDeclType	RecoveryBaseDescriptor *		2509309	0					
ANR	2509759	Identifier	base_desc		2509309	1					
ANR	2509760	AssignmentExpression	"* base_desc = r_vector_push ( & col -> base_td , NULL )"		2509309	2		=			
ANR	2509761	Identifier	base_desc		2509309	0					
ANR	2509762	CallExpression	"r_vector_push ( & col -> base_td , NULL )"		2509309	1					
ANR	2509763	Callee	r_vector_push		2509309	0					
ANR	2509764	Identifier	r_vector_push		2509309	0					
ANR	2509765	ArgumentList	& col -> base_td		2509309	1					
ANR	2509766	Argument	& col -> base_td		2509309	0					
ANR	2509767	UnaryOperationExpression	& col -> base_td		2509309	0					
ANR	2509768	UnaryOperator	&		2509309	0					
ANR	2509769	PtrMemberAccess	col -> base_td		2509309	1					
ANR	2509770	Identifier	col		2509309	0					
ANR	2509771	Identifier	base_td		2509309	1					
ANR	2509772	Argument	NULL		2509309	1					
ANR	2509773	Identifier	NULL		2509309	0					
ANR	2509774	ExpressionStatement	base_desc -> bcd = bcd	746:2:22846:22866	2509309	5	True				
ANR	2509775	AssignmentExpression	base_desc -> bcd = bcd		2509309	0		=			
ANR	2509776	PtrMemberAccess	base_desc -> bcd		2509309	0					
ANR	2509777	Identifier	base_desc		2509309	0					
ANR	2509778	Identifier	bcd		2509309	1					
ANR	2509779	Identifier	bcd		2509309	1					
ANR	2509780	ExpressionStatement	base_desc -> td = td	747:2:22870:22888	2509309	6	True				
ANR	2509781	AssignmentExpression	base_desc -> td = td		2509309	0		=			
ANR	2509782	PtrMemberAccess	base_desc -> td		2509309	0					
ANR	2509783	Identifier	base_desc		2509309	0					
ANR	2509784	Identifier	td		2509309	1					
ANR	2509785	Identifier	td		2509309	1					
ANR	2509786	ReturnStatement	return col ;	750:1:22895:22905	2509309	36	True				
ANR	2509787	Identifier	col		2509309	0					
ANR	2509788	ReturnType	RecoveryCompleteObjectLocator *		2509309	1					
ANR	2509789	Identifier	recovery_anal_complete_object_locator		2509309	2					
ANR	2509790	ParameterList	"RRTTIMSVCAnalContext * context , ut64 addr , RVTableInfo * vtable"		2509309	3					
ANR	2509791	Parameter	RRTTIMSVCAnalContext * context	680:69:20736:20764	2509309	0	True				
ANR	2509792	ParameterType	RRTTIMSVCAnalContext *		2509309	0					
ANR	2509793	Identifier	context		2509309	1					
ANR	2509794	Parameter	ut64 addr	680:100:20767:20775	2509309	1	True				
ANR	2509795	ParameterType	ut64		2509309	0					
ANR	2509796	Identifier	addr		2509309	1					
ANR	2509797	Parameter	RVTableInfo * vtable	680:111:20778:20796	2509309	2	True				
ANR	2509798	ParameterType	RVTableInfo *		2509309	0					
ANR	2509799	Identifier	vtable		2509309	1					
ANR	2509800	CFGEntryNode	ENTRY		2509309		True				
ANR	2509801	CFGExitNode	EXIT		2509309		True				
ANR	2509802	CFGErrorNode	ERROR		2509309		True				
ANR	2509803	Symbol	ht_up_find		2509309						
ANR	2509804	Symbol	rtti_msvc_read_base_class_array		2509309						
ANR	2509805	Symbol	td -> valid		2509309						
ANR	2509806	Symbol	col		2509309						
ANR	2509807	Symbol	col -> col . type_descriptor_addr		2509309						
ANR	2509808	Symbol	col -> chd . base_class_array_addr		2509309						
ANR	2509809	Symbol	* * context		2509309						
ANR	2509810	Symbol	col -> bcd -> length		2509309						
ANR	2509811	Symbol	base_desc		2509309						
ANR	2509812	Symbol	context -> vt_context -> anal		2509309						
ANR	2509813	Symbol	* * context -> vt_context		2509309						
ANR	2509814	Symbol	* bcd		2509309						
ANR	2509815	Symbol	rtti_msvc_read_complete_object_locator		2509309						
ANR	2509816	Symbol	context		2509309						
ANR	2509817	Symbol	* context -> vt_context		2509309						
ANR	2509818	Symbol	& col -> chd		2509309						
ANR	2509819	Symbol	NULL		2509309						
ANR	2509820	Symbol	rtti_msvc_addr		2509309						
ANR	2509821	Symbol	baseClassArrayOffset		2509309						
ANR	2509822	Symbol	col -> col		2509309						
ANR	2509823	Symbol	* context		2509309						
ANR	2509824	Symbol	* base_desc		2509309						
ANR	2509825	Symbol	rtti_msvc_read_class_hierarchy_descriptor		2509309						
ANR	2509826	Symbol	col -> chd . num_base_classes		2509309						
ANR	2509827	Symbol	* * * context		2509309						
ANR	2509828	Symbol	base_desc -> bcd		2509309						
ANR	2509829	Symbol	* td		2509309						
ANR	2509830	Symbol	* col -> td		2509309						
ANR	2509831	Symbol	chd_addr		2509309						
ANR	2509832	Symbol	context -> vt_context -> word_size		2509309						
ANR	2509833	Symbol	context -> vt_context		2509309						
ANR	2509834	Symbol	r_vector_push		2509309						
ANR	2509835	Symbol	& context -> complete_object_locators		2509309						
ANR	2509836	Symbol	td_addr		2509309						
ANR	2509837	Symbol	recovery_anal_type_descriptor		2509309						
ANR	2509838	Symbol	bcd		2509309						
ANR	2509839	Symbol	bcd -> type_descriptor_addr		2509309						
ANR	2509840	Symbol	col -> col . class_descriptor_addr		2509309						
ANR	2509841	Symbol	col -> chd		2509309						
ANR	2509842	Symbol	bcdIter		2509309						
ANR	2509843	Symbol	* * col		2509309						
ANR	2509844	Symbol	* col		2509309						
ANR	2509845	Symbol	col -> vtable		2509309						
ANR	2509846	Symbol	col -> col . object_base		2509309						
ANR	2509847	Symbol	addr		2509309						
ANR	2509848	Symbol	col -> td -> valid		2509309						
ANR	2509849	Symbol	recovery_complete_object_locator_new		2509309						
ANR	2509850	Symbol	col -> addr		2509309						
ANR	2509851	Symbol	base_td_addr		2509309						
ANR	2509852	Symbol	false		2509309						
ANR	2509853	Symbol	context -> addr_col		2509309						
ANR	2509854	Symbol	col -> valid		2509309						
ANR	2509855	Symbol	col -> bcd		2509309						
ANR	2509856	Symbol	context -> vt_context -> anal -> verbose		2509309						
ANR	2509857	Symbol	td		2509309						
ANR	2509858	Symbol	* col -> bcd		2509309						
ANR	2509859	Symbol	col -> td		2509309						
ANR	2509860	Symbol	vtable		2509309						
ANR	2509861	Symbol	base_desc -> td		2509309						
ANR	2509862	Symbol	& col -> base_td		2509309						
ANR	2509863	Symbol	* context -> vt_context -> anal		2509309						
ANR	2509864	Symbol	& col -> col		2509309						
ANR	2509865	Symbol	col -> td -> col		2509309						
ANR	2509866	Symbol	base		2509309						
ANR	2509867	Function	recovery_anal_type_descriptor	753:0:22910:23516							
ANR	2509868	FunctionDef	"recovery_anal_type_descriptor (RRTTIMSVCAnalContext * context , ut64 addr , RecoveryCompleteObjectLocator * col)"		2509867	0					
ANR	2509869	CompoundStatement		753:132:23042:23516	2509867	0					
ANR	2509870	IdentifierDeclStatement	"RecoveryTypeDescriptor * td = ht_up_find ( context -> addr_td , addr , NULL ) ;"	754:1:23045:23115	2509867	0	True				
ANR	2509871	IdentifierDecl	"* td = ht_up_find ( context -> addr_td , addr , NULL )"		2509867	0					
ANR	2509872	IdentifierDeclType	RecoveryTypeDescriptor *		2509867	0					
ANR	2509873	Identifier	td		2509867	1					
ANR	2509874	AssignmentExpression	"* td = ht_up_find ( context -> addr_td , addr , NULL )"		2509867	2		=			
ANR	2509875	Identifier	td		2509867	0					
ANR	2509876	CallExpression	"ht_up_find ( context -> addr_td , addr , NULL )"		2509867	1					
ANR	2509877	Callee	ht_up_find		2509867	0					
ANR	2509878	Identifier	ht_up_find		2509867	0					
ANR	2509879	ArgumentList	context -> addr_td		2509867	1					
ANR	2509880	Argument	context -> addr_td		2509867	0					
ANR	2509881	PtrMemberAccess	context -> addr_td		2509867	0					
ANR	2509882	Identifier	context		2509867	0					
ANR	2509883	Identifier	addr_td		2509867	1					
ANR	2509884	Argument	addr		2509867	1					
ANR	2509885	Identifier	addr		2509867	0					
ANR	2509886	Argument	NULL		2509867	2					
ANR	2509887	Identifier	NULL		2509867	0					
ANR	2509888	IfStatement	if ( td )		2509867	1					
ANR	2509889	Condition	td	755:5:23122:23123	2509867	0	True				
ANR	2509890	Identifier	td		2509867	0					
ANR	2509891	CompoundStatement		3:9:83:83	2509867	1					
ANR	2509892	IfStatement	if ( col != NULL )		2509867	0					
ANR	2509893	Condition	col != NULL	756:6:23134:23144	2509867	0	True				
ANR	2509894	EqualityExpression	col != NULL		2509867	0		!=			
ANR	2509895	Identifier	col		2509867	0					
ANR	2509896	Identifier	NULL		2509867	1					
ANR	2509897	CompoundStatement		4:19:104:104	2509867	1					
ANR	2509898	ExpressionStatement	td -> col = col	757:3:23152:23165	2509867	0	True				
ANR	2509899	AssignmentExpression	td -> col = col		2509867	0		=			
ANR	2509900	PtrMemberAccess	td -> col		2509867	0					
ANR	2509901	Identifier	td		2509867	0					
ANR	2509902	Identifier	col		2509867	1					
ANR	2509903	Identifier	col		2509867	1					
ANR	2509904	ReturnStatement	return td ;	759:2:23173:23182	2509867	1	True				
ANR	2509905	Identifier	td		2509867	0					
ANR	2509906	ExpressionStatement	td = recovery_type_descriptor_new ( )	762:1:23189:23225	2509867	2	True				
ANR	2509907	AssignmentExpression	td = recovery_type_descriptor_new ( )		2509867	0		=			
ANR	2509908	Identifier	td		2509867	0					
ANR	2509909	CallExpression	recovery_type_descriptor_new ( )		2509867	1					
ANR	2509910	Callee	recovery_type_descriptor_new		2509867	0					
ANR	2509911	Identifier	recovery_type_descriptor_new		2509867	0					
ANR	2509912	ArgumentList			2509867	1					
ANR	2509913	IfStatement	if ( ! td )		2509867	3					
ANR	2509914	Condition	! td	763:5:23232:23234	2509867	0	True				
ANR	2509915	UnaryOperationExpression	! td		2509867	0					
ANR	2509916	UnaryOperator	!		2509867	0					
ANR	2509917	Identifier	td		2509867	1					
ANR	2509918	CompoundStatement		11:10:194:194	2509867	1					
ANR	2509919	ReturnStatement	return NULL ;	764:2:23241:23252	2509867	0	True				
ANR	2509920	Identifier	NULL		2509867	0					
ANR	2509921	ExpressionStatement	"r_pvector_push ( & context -> type_descriptors , td )"	766:1:23258:23305	2509867	4	True				
ANR	2509922	CallExpression	"r_pvector_push ( & context -> type_descriptors , td )"		2509867	0					
ANR	2509923	Callee	r_pvector_push		2509867	0					
ANR	2509924	Identifier	r_pvector_push		2509867	0					
ANR	2509925	ArgumentList	& context -> type_descriptors		2509867	1					
ANR	2509926	Argument	& context -> type_descriptors		2509867	0					
ANR	2509927	UnaryOperationExpression	& context -> type_descriptors		2509867	0					
ANR	2509928	UnaryOperator	&		2509867	0					
ANR	2509929	PtrMemberAccess	context -> type_descriptors		2509867	1					
ANR	2509930	Identifier	context		2509867	0					
ANR	2509931	Identifier	type_descriptors		2509867	1					
ANR	2509932	Argument	td		2509867	1					
ANR	2509933	Identifier	td		2509867	0					
ANR	2509934	ExpressionStatement	"ht_up_insert ( context -> addr_td , addr , td )"	767:1:23308:23349	2509867	5	True				
ANR	2509935	CallExpression	"ht_up_insert ( context -> addr_td , addr , td )"		2509867	0					
ANR	2509936	Callee	ht_up_insert		2509867	0					
ANR	2509937	Identifier	ht_up_insert		2509867	0					
ANR	2509938	ArgumentList	context -> addr_td		2509867	1					
ANR	2509939	Argument	context -> addr_td		2509867	0					
ANR	2509940	PtrMemberAccess	context -> addr_td		2509867	0					
ANR	2509941	Identifier	context		2509867	0					
ANR	2509942	Identifier	addr_td		2509867	1					
ANR	2509943	Argument	addr		2509867	1					
ANR	2509944	Identifier	addr		2509867	0					
ANR	2509945	Argument	td		2509867	2					
ANR	2509946	Identifier	td		2509867	0					
ANR	2509947	ExpressionStatement	td -> addr = addr	768:1:23352:23367	2509867	6	True				
ANR	2509948	AssignmentExpression	td -> addr = addr		2509867	0		=			
ANR	2509949	PtrMemberAccess	td -> addr		2509867	0					
ANR	2509950	Identifier	td		2509867	0					
ANR	2509951	Identifier	addr		2509867	1					
ANR	2509952	Identifier	addr		2509867	1					
ANR	2509953	ExpressionStatement	"td -> valid = rtti_msvc_read_type_descriptor ( context -> vt_context , addr , & td -> td )"	769:1:23370:23449	2509867	7	True				
ANR	2509954	AssignmentExpression	"td -> valid = rtti_msvc_read_type_descriptor ( context -> vt_context , addr , & td -> td )"		2509867	0		=			
ANR	2509955	PtrMemberAccess	td -> valid		2509867	0					
ANR	2509956	Identifier	td		2509867	0					
ANR	2509957	Identifier	valid		2509867	1					
ANR	2509958	CallExpression	"rtti_msvc_read_type_descriptor ( context -> vt_context , addr , & td -> td )"		2509867	1					
ANR	2509959	Callee	rtti_msvc_read_type_descriptor		2509867	0					
ANR	2509960	Identifier	rtti_msvc_read_type_descriptor		2509867	0					
ANR	2509961	ArgumentList	context -> vt_context		2509867	1					
ANR	2509962	Argument	context -> vt_context		2509867	0					
ANR	2509963	PtrMemberAccess	context -> vt_context		2509867	0					
ANR	2509964	Identifier	context		2509867	0					
ANR	2509965	Identifier	vt_context		2509867	1					
ANR	2509966	Argument	addr		2509867	1					
ANR	2509967	Identifier	addr		2509867	0					
ANR	2509968	Argument	& td -> td		2509867	2					
ANR	2509969	UnaryOperationExpression	& td -> td		2509867	0					
ANR	2509970	UnaryOperator	&		2509867	0					
ANR	2509971	PtrMemberAccess	td -> td		2509867	1					
ANR	2509972	Identifier	td		2509867	0					
ANR	2509973	Identifier	td		2509867	1					
ANR	2509974	IfStatement	if ( ! td -> valid )		2509867	8					
ANR	2509975	Condition	! td -> valid	770:5:23456:23465	2509867	0	True				
ANR	2509976	UnaryOperationExpression	! td -> valid		2509867	0					
ANR	2509977	UnaryOperator	!		2509867	0					
ANR	2509978	PtrMemberAccess	td -> valid		2509867	1					
ANR	2509979	Identifier	td		2509867	0					
ANR	2509980	Identifier	valid		2509867	1					
ANR	2509981	CompoundStatement		18:17:425:425	2509867	1					
ANR	2509982	ReturnStatement	return td ;	771:2:23472:23481	2509867	0	True				
ANR	2509983	Identifier	td		2509867	0					
ANR	2509984	ExpressionStatement	td -> col = col	774:1:23488:23501	2509867	9	True				
ANR	2509985	AssignmentExpression	td -> col = col		2509867	0		=			
ANR	2509986	PtrMemberAccess	td -> col		2509867	0					
ANR	2509987	Identifier	td		2509867	0					
ANR	2509988	Identifier	col		2509867	1					
ANR	2509989	Identifier	col		2509867	1					
ANR	2509990	ReturnStatement	return td ;	776:1:23505:23514	2509867	10	True				
ANR	2509991	Identifier	td		2509867	0					
ANR	2509992	ReturnType	RecoveryTypeDescriptor *		2509867	1					
ANR	2509993	Identifier	recovery_anal_type_descriptor		2509867	2					
ANR	2509994	ParameterList	"RRTTIMSVCAnalContext * context , ut64 addr , RecoveryCompleteObjectLocator * col"		2509867	3					
ANR	2509995	Parameter	RRTTIMSVCAnalContext * context	753:54:22964:22992	2509867	0	True				
ANR	2509996	ParameterType	RRTTIMSVCAnalContext *		2509867	0					
ANR	2509997	Identifier	context		2509867	1					
ANR	2509998	Parameter	ut64 addr	753:85:22995:23003	2509867	1	True				
ANR	2509999	ParameterType	ut64		2509867	0					
ANR	2510000	Identifier	addr		2509867	1					
ANR	2510001	Parameter	RecoveryCompleteObjectLocator * col	753:96:23006:23039	2509867	2	True				
ANR	2510002	ParameterType	RecoveryCompleteObjectLocator *		2509867	0					
ANR	2510003	Identifier	col		2509867	1					
ANR	2510004	CFGEntryNode	ENTRY		2509867		True				
ANR	2510005	CFGExitNode	EXIT		2509867		True				
ANR	2510006	Symbol	ht_up_find		2509867						
ANR	2510007	Symbol	td -> valid		2509867						
ANR	2510008	Symbol	col		2509867						
ANR	2510009	Symbol	td -> col		2509867						
ANR	2510010	Symbol	NULL		2509867						
ANR	2510011	Symbol	context -> addr_td		2509867						
ANR	2510012	Symbol	rtti_msvc_read_type_descriptor		2509867						
ANR	2510013	Symbol	td -> addr		2509867						
ANR	2510014	Symbol	* context		2509867						
ANR	2510015	Symbol	td		2509867						
ANR	2510016	Symbol	* td		2509867						
ANR	2510017	Symbol	recovery_type_descriptor_new		2509867						
ANR	2510018	Symbol	& td -> td		2509867						
ANR	2510019	Symbol	context		2509867						
ANR	2510020	Symbol	context -> vt_context		2509867						
ANR	2510021	Symbol	addr		2509867						
ANR	2510022	Symbol	& context -> type_descriptors		2509867						
ANR	2510023	Function	unique_class_name	780:0:23520:23976							
ANR	2510024	FunctionDef	"unique_class_name (RAnal * anal , const char * original_name)"		2510023	0					
ANR	2510025	CompoundStatement		780:71:23591:23976	2510023	0					
ANR	2510026	IfStatement	"if ( ! r_anal_class_exists ( anal , original_name ) )"		2510023	0					
ANR	2510027	Condition	"! r_anal_class_exists ( anal , original_name )"	781:5:23598:23639	2510023	0	True				
ANR	2510028	UnaryOperationExpression	"! r_anal_class_exists ( anal , original_name )"		2510023	0					
ANR	2510029	UnaryOperator	!		2510023	0					
ANR	2510030	CallExpression	"r_anal_class_exists ( anal , original_name )"		2510023	1					
ANR	2510031	Callee	r_anal_class_exists		2510023	0					
ANR	2510032	Identifier	r_anal_class_exists		2510023	0					
ANR	2510033	ArgumentList	anal		2510023	1					
ANR	2510034	Argument	anal		2510023	0					
ANR	2510035	Identifier	anal		2510023	0					
ANR	2510036	Argument	original_name		2510023	1					
ANR	2510037	Identifier	original_name		2510023	0					
ANR	2510038	CompoundStatement		2:49:50:50	2510023	1					
ANR	2510039	ReturnStatement	return strdup ( original_name ) ;	782:2:23646:23675	2510023	0	True				
ANR	2510040	CallExpression	strdup ( original_name )		2510023	0					
ANR	2510041	Callee	strdup		2510023	0					
ANR	2510042	Identifier	strdup		2510023	0					
ANR	2510043	ArgumentList	original_name		2510023	1					
ANR	2510044	Argument	original_name		2510023	0					
ANR	2510045	Identifier	original_name		2510023	0					
ANR	2510046	IdentifierDeclStatement	char * name = NULL ;	785:1:23682:23699	2510023	1	True				
ANR	2510047	IdentifierDecl	* name = NULL		2510023	0					
ANR	2510048	IdentifierDeclType	char *		2510023	0					
ANR	2510049	Identifier	name		2510023	1					
ANR	2510050	AssignmentExpression	* name = NULL		2510023	2		=			
ANR	2510051	Identifier	NULL		2510023	0					
ANR	2510052	Identifier	NULL		2510023	1					
ANR	2510053	IfStatement	if ( anal -> verbose )		2510023	2					
ANR	2510054	Condition	anal -> verbose	786:5:23706:23718	2510023	0	True				
ANR	2510055	PtrMemberAccess	anal -> verbose		2510023	0					
ANR	2510056	Identifier	anal		2510023	0					
ANR	2510057	Identifier	verbose		2510023	1					
ANR	2510058	CompoundStatement		7:20:129:129	2510023	1					
ANR	2510059	ExpressionStatement	"eprintf ( ""Warning: class name %s already taken!\\n"" , original_name )"	787:2:23725:23791	2510023	0	True				
ANR	2510060	CallExpression	"eprintf ( ""Warning: class name %s already taken!\\n"" , original_name )"		2510023	0					
ANR	2510061	Callee	eprintf		2510023	0					
ANR	2510062	Identifier	eprintf		2510023	0					
ANR	2510063	ArgumentList	"""Warning: class name %s already taken!\\n"""		2510023	1					
ANR	2510064	Argument	"""Warning: class name %s already taken!\\n"""		2510023	0					
ANR	2510065	PrimaryExpression	"""Warning: class name %s already taken!\\n"""		2510023	0					
ANR	2510066	Argument	original_name		2510023	1					
ANR	2510067	Identifier	original_name		2510023	0					
ANR	2510068	IdentifierDeclStatement	int i = 1 ;	789:1:23797:23806	2510023	3	True				
ANR	2510069	IdentifierDecl	i = 1		2510023	0					
ANR	2510070	IdentifierDeclType	int		2510023	0					
ANR	2510071	Identifier	i		2510023	1					
ANR	2510072	AssignmentExpression	i = 1		2510023	2		=			
ANR	2510073	Identifier	i		2510023	0					
ANR	2510074	PrimaryExpression	1		2510023	1					
ANR	2510075	DoStatement	do		2510023	4					
ANR	2510076	CompoundStatement		12:4:221:221	2510023	0					
ANR	2510077	ExpressionStatement	free ( name )	792:2:23817:23828	2510023	0	True				
ANR	2510078	CallExpression	free ( name )		2510023	0					
ANR	2510079	Callee	free		2510023	0					
ANR	2510080	Identifier	free		2510023	0					
ANR	2510081	ArgumentList	name		2510023	1					
ANR	2510082	Argument	name		2510023	0					
ANR	2510083	Identifier	name		2510023	0					
ANR	2510084	ExpressionStatement	"name = r_str_newf ( ""%s.%d"" , original_name , i ++ )"	793:2:23832:23879	2510023	1	True				
ANR	2510085	AssignmentExpression	"name = r_str_newf ( ""%s.%d"" , original_name , i ++ )"		2510023	0		=			
ANR	2510086	Identifier	name		2510023	0					
ANR	2510087	CallExpression	"r_str_newf ( ""%s.%d"" , original_name , i ++ )"		2510023	1					
ANR	2510088	Callee	r_str_newf		2510023	0					
ANR	2510089	Identifier	r_str_newf		2510023	0					
ANR	2510090	ArgumentList	"""%s.%d"""		2510023	1					
ANR	2510091	Argument	"""%s.%d"""		2510023	0					
ANR	2510092	PrimaryExpression	"""%s.%d"""		2510023	0					
ANR	2510093	Argument	original_name		2510023	1					
ANR	2510094	Identifier	original_name		2510023	0					
ANR	2510095	Argument	i ++		2510023	2					
ANR	2510096	PostIncDecOperationExpression	i ++		2510023	0					
ANR	2510097	Identifier	i		2510023	0					
ANR	2510098	IncDec	++		2510023	1					
ANR	2510099	IfStatement	if ( ! name )		2510023	2					
ANR	2510100	Condition	! name	794:6:23887:23891	2510023	0	True				
ANR	2510101	UnaryOperationExpression	! name		2510023	0					
ANR	2510102	UnaryOperator	!		2510023	0					
ANR	2510103	Identifier	name		2510023	1					
ANR	2510104	CompoundStatement		15:13:302:302	2510023	1					
ANR	2510105	ReturnStatement	return NULL ;	795:3:23899:23910	2510023	0	True				
ANR	2510106	Identifier	NULL		2510023	0					
ANR	2510107	Condition	"r_anal_class_exists ( anal , name )"	797:10:23926:23957	2510023	1	True				
ANR	2510108	CallExpression	"r_anal_class_exists ( anal , name )"		2510023	0					
ANR	2510109	Callee	r_anal_class_exists		2510023	0					
ANR	2510110	Identifier	r_anal_class_exists		2510023	0					
ANR	2510111	ArgumentList	anal		2510023	1					
ANR	2510112	Argument	anal		2510023	0					
ANR	2510113	Identifier	anal		2510023	0					
ANR	2510114	Argument	name		2510023	1					
ANR	2510115	Identifier	name		2510023	0					
ANR	2510116	ReturnStatement	return name ;	799:1:23963:23974	2510023	5	True				
ANR	2510117	Identifier	name		2510023	0					
ANR	2510118	ReturnType	static char *		2510023	1					
ANR	2510119	Identifier	unique_class_name		2510023	2					
ANR	2510120	ParameterList	"RAnal * anal , const char * original_name"		2510023	3					
ANR	2510121	Parameter	RAnal * anal	780:31:23551:23561	2510023	0	True				
ANR	2510122	ParameterType	RAnal *		2510023	0					
ANR	2510123	Identifier	anal		2510023	1					
ANR	2510124	Parameter	const char * original_name	780:44:23564:23588	2510023	1	True				
ANR	2510125	ParameterType	const char *		2510023	0					
ANR	2510126	Identifier	original_name		2510023	1					
ANR	2510127	CFGEntryNode	ENTRY		2510023		True				
ANR	2510128	CFGExitNode	EXIT		2510023		True				
ANR	2510129	Symbol	r_anal_class_exists		2510023						
ANR	2510130	Symbol	* anal		2510023						
ANR	2510131	Symbol	NULL		2510023						
ANR	2510132	Symbol	anal		2510023						
ANR	2510133	Symbol	original_name		2510023						
ANR	2510134	Symbol	anal -> verbose		2510023						
ANR	2510135	Symbol	name		2510023						
ANR	2510136	Symbol	i		2510023						
ANR	2510137	Symbol	strdup		2510023						
ANR	2510138	Symbol	r_str_newf		2510023						
ANR	2510139	Function	recovery_apply_vtable	802:0:23979:24623							
ANR	2510140	FunctionDef	"recovery_apply_vtable (RAnal * anal , const char * class_name , RVTableInfo * vtable_info)"		2510139	0					
ANR	2510141	CompoundStatement		802:97:24076:24623	2510139	0					
ANR	2510142	IfStatement	if ( ! vtable_info )		2510139	0					
ANR	2510143	Condition	! vtable_info	803:5:24083:24094	2510139	0	True				
ANR	2510144	UnaryOperationExpression	! vtable_info		2510139	0					
ANR	2510145	UnaryOperator	!		2510139	0					
ANR	2510146	Identifier	vtable_info		2510139	1					
ANR	2510147	CompoundStatement		2:19:20:20	2510139	1					
ANR	2510148	ReturnStatement	return ;	804:2:24101:24107	2510139	0	True				
ANR	2510149	IdentifierDeclStatement	RAnalVTable vtable ;	807:1:24114:24132	2510139	1	True				
ANR	2510150	IdentifierDecl	vtable		2510139	0					
ANR	2510151	IdentifierDeclType	RAnalVTable		2510139	0					
ANR	2510152	Identifier	vtable		2510139	1					
ANR	2510153	ExpressionStatement	vtable . id = NULL	808:1:24135:24151	2510139	2	True				
ANR	2510154	AssignmentExpression	vtable . id = NULL		2510139	0		=			
ANR	2510155	MemberAccess	vtable . id		2510139	0					
ANR	2510156	Identifier	vtable		2510139	0					
ANR	2510157	Identifier	id		2510139	1					
ANR	2510158	Identifier	NULL		2510139	1					
ANR	2510159	ExpressionStatement	vtable . offset = 0	809:1:24154:24171	2510139	3	True				
ANR	2510160	AssignmentExpression	vtable . offset = 0		2510139	0		=			
ANR	2510161	MemberAccess	vtable . offset		2510139	0					
ANR	2510162	Identifier	vtable		2510139	0					
ANR	2510163	Identifier	offset		2510139	1					
ANR	2510164	PrimaryExpression	0		2510139	1					
ANR	2510165	ExpressionStatement	vtable . addr = vtable_info -> saddr	810:1:24174:24206	2510139	4	True				
ANR	2510166	AssignmentExpression	vtable . addr = vtable_info -> saddr		2510139	0		=			
ANR	2510167	MemberAccess	vtable . addr		2510139	0					
ANR	2510168	Identifier	vtable		2510139	0					
ANR	2510169	Identifier	addr		2510139	1					
ANR	2510170	PtrMemberAccess	vtable_info -> saddr		2510139	1					
ANR	2510171	Identifier	vtable_info		2510139	0					
ANR	2510172	Identifier	saddr		2510139	1					
ANR	2510173	ExpressionStatement	"r_anal_class_vtable_set ( anal , class_name , & vtable )"	811:1:24209:24260	2510139	5	True				
ANR	2510174	CallExpression	"r_anal_class_vtable_set ( anal , class_name , & vtable )"		2510139	0					
ANR	2510175	Callee	r_anal_class_vtable_set		2510139	0					
ANR	2510176	Identifier	r_anal_class_vtable_set		2510139	0					
ANR	2510177	ArgumentList	anal		2510139	1					
ANR	2510178	Argument	anal		2510139	0					
ANR	2510179	Identifier	anal		2510139	0					
ANR	2510180	Argument	class_name		2510139	1					
ANR	2510181	Identifier	class_name		2510139	0					
ANR	2510182	Argument	& vtable		2510139	2					
ANR	2510183	UnaryOperationExpression	& vtable		2510139	0					
ANR	2510184	UnaryOperator	&		2510139	0					
ANR	2510185	Identifier	vtable		2510139	1					
ANR	2510186	ExpressionStatement	r_anal_class_vtable_fini ( & vtable )	812:1:24263:24297	2510139	6	True				
ANR	2510187	CallExpression	r_anal_class_vtable_fini ( & vtable )		2510139	0					
ANR	2510188	Callee	r_anal_class_vtable_fini		2510139	0					
ANR	2510189	Identifier	r_anal_class_vtable_fini		2510139	0					
ANR	2510190	ArgumentList	& vtable		2510139	1					
ANR	2510191	Argument	& vtable		2510139	0					
ANR	2510192	UnaryOperationExpression	& vtable		2510139	0					
ANR	2510193	UnaryOperator	&		2510139	0					
ANR	2510194	Identifier	vtable		2510139	1					
ANR	2510195	IdentifierDeclStatement	RVTableMethodInfo * vmeth ;	814:1:24301:24325	2510139	7	True				
ANR	2510196	IdentifierDecl	* vmeth		2510139	0					
ANR	2510197	IdentifierDeclType	RVTableMethodInfo *		2510139	0					
ANR	2510198	Identifier	vmeth		2510139	1					
ANR	2510199	Statement	r_vector_foreach	815:1:24328:24343	2510139	8	True				
ANR	2510200	Statement	(	815:18:24345:24345	2510139	9	True				
ANR	2510201	Statement	&	815:19:24346:24346	2510139	10	True				
ANR	2510202	Statement	vtable_info	815:20:24347:24357	2510139	11	True				
ANR	2510203	Statement	->	815:31:24358:24359	2510139	12	True				
ANR	2510204	Statement	methods	815:33:24360:24366	2510139	13	True				
ANR	2510205	Statement	","	815:40:24367:24367	2510139	14	True				
ANR	2510206	Statement	vmeth	815:42:24369:24373	2510139	15	True				
ANR	2510207	Statement	)	815:47:24374:24374	2510139	16	True				
ANR	2510208	CompoundStatement		15:2:303:319	2510139	17					
ANR	2510209	IdentifierDeclStatement	RAnalMethod meth ;	816:2:24380:24396	2510139	0	True				
ANR	2510210	IdentifierDecl	meth		2510139	0					
ANR	2510211	IdentifierDeclType	RAnalMethod		2510139	0					
ANR	2510212	Identifier	meth		2510139	1					
ANR	2510213	ExpressionStatement	meth . addr = vmeth -> addr	817:2:24400:24423	2510139	1	True				
ANR	2510214	AssignmentExpression	meth . addr = vmeth -> addr		2510139	0		=			
ANR	2510215	MemberAccess	meth . addr		2510139	0					
ANR	2510216	Identifier	meth		2510139	0					
ANR	2510217	Identifier	addr		2510139	1					
ANR	2510218	PtrMemberAccess	vmeth -> addr		2510139	1					
ANR	2510219	Identifier	vmeth		2510139	0					
ANR	2510220	Identifier	addr		2510139	1					
ANR	2510221	ExpressionStatement	meth . vtable_offset = vmeth -> vtable_offset	818:2:24427:24468	2510139	2	True				
ANR	2510222	AssignmentExpression	meth . vtable_offset = vmeth -> vtable_offset		2510139	0		=			
ANR	2510223	MemberAccess	meth . vtable_offset		2510139	0					
ANR	2510224	Identifier	meth		2510139	0					
ANR	2510225	Identifier	vtable_offset		2510139	1					
ANR	2510226	PtrMemberAccess	vmeth -> vtable_offset		2510139	1					
ANR	2510227	Identifier	vmeth		2510139	0					
ANR	2510228	Identifier	vtable_offset		2510139	1					
ANR	2510229	ExpressionStatement	"meth . name = r_str_newf ( ""virtual_%d"" , meth . vtable_offset )"	819:2:24472:24529	2510139	3	True				
ANR	2510230	AssignmentExpression	"meth . name = r_str_newf ( ""virtual_%d"" , meth . vtable_offset )"		2510139	0		=			
ANR	2510231	MemberAccess	meth . name		2510139	0					
ANR	2510232	Identifier	meth		2510139	0					
ANR	2510233	Identifier	name		2510139	1					
ANR	2510234	CallExpression	"r_str_newf ( ""virtual_%d"" , meth . vtable_offset )"		2510139	1					
ANR	2510235	Callee	r_str_newf		2510139	0					
ANR	2510236	Identifier	r_str_newf		2510139	0					
ANR	2510237	ArgumentList	"""virtual_%d"""		2510139	1					
ANR	2510238	Argument	"""virtual_%d"""		2510139	0					
ANR	2510239	PrimaryExpression	"""virtual_%d"""		2510139	0					
ANR	2510240	Argument	meth . vtable_offset		2510139	1					
ANR	2510241	MemberAccess	meth . vtable_offset		2510139	0					
ANR	2510242	Identifier	meth		2510139	0					
ANR	2510243	Identifier	vtable_offset		2510139	1					
ANR	2510244	ExpressionStatement	"r_anal_class_method_set ( anal , class_name , & meth )"	820:2:24533:24582	2510139	4	True				
ANR	2510245	CallExpression	"r_anal_class_method_set ( anal , class_name , & meth )"		2510139	0					
ANR	2510246	Callee	r_anal_class_method_set		2510139	0					
ANR	2510247	Identifier	r_anal_class_method_set		2510139	0					
ANR	2510248	ArgumentList	anal		2510139	1					
ANR	2510249	Argument	anal		2510139	0					
ANR	2510250	Identifier	anal		2510139	0					
ANR	2510251	Argument	class_name		2510139	1					
ANR	2510252	Identifier	class_name		2510139	0					
ANR	2510253	Argument	& meth		2510139	2					
ANR	2510254	UnaryOperationExpression	& meth		2510139	0					
ANR	2510255	UnaryOperator	&		2510139	0					
ANR	2510256	Identifier	meth		2510139	1					
ANR	2510257	ExpressionStatement	r_anal_class_method_fini ( & meth )	821:2:24586:24618	2510139	5	True				
ANR	2510258	CallExpression	r_anal_class_method_fini ( & meth )		2510139	0					
ANR	2510259	Callee	r_anal_class_method_fini		2510139	0					
ANR	2510260	Identifier	r_anal_class_method_fini		2510139	0					
ANR	2510261	ArgumentList	& meth		2510139	1					
ANR	2510262	Argument	& meth		2510139	0					
ANR	2510263	UnaryOperationExpression	& meth		2510139	0					
ANR	2510264	UnaryOperator	&		2510139	0					
ANR	2510265	Identifier	meth		2510139	1					
ANR	2510266	ReturnType	static void		2510139	1					
ANR	2510267	Identifier	recovery_apply_vtable		2510139	2					
ANR	2510268	ParameterList	"RAnal * anal , const char * class_name , RVTableInfo * vtable_info"		2510139	3					
ANR	2510269	Parameter	RAnal * anal	802:34:24013:24023	2510139	0	True				
ANR	2510270	ParameterType	RAnal *		2510139	0					
ANR	2510271	Identifier	anal		2510139	1					
ANR	2510272	Parameter	const char * class_name	802:47:24026:24047	2510139	1	True				
ANR	2510273	ParameterType	const char *		2510139	0					
ANR	2510274	Identifier	class_name		2510139	1					
ANR	2510275	Parameter	RVTableInfo * vtable_info	802:71:24050:24073	2510139	2	True				
ANR	2510276	ParameterType	RVTableInfo *		2510139	0					
ANR	2510277	Identifier	vtable_info		2510139	1					
ANR	2510278	CFGEntryNode	ENTRY		2510139		True				
ANR	2510279	CFGExitNode	EXIT		2510139		True				
ANR	2510280	Symbol	meth . name		2510139						
ANR	2510281	Symbol	NULL		2510139						
ANR	2510282	Symbol	& meth		2510139						
ANR	2510283	Symbol	r_str_newf		2510139						
ANR	2510284	Symbol	vtable_info		2510139						
ANR	2510285	Symbol	vtable . offset		2510139						
ANR	2510286	Symbol	vtable_info -> saddr		2510139						
ANR	2510287	Symbol	vtable . id		2510139						
ANR	2510288	Symbol	vmeth -> addr		2510139						
ANR	2510289	Symbol	vmeth -> vtable_offset		2510139						
ANR	2510290	Symbol	meth . vtable_offset		2510139						
ANR	2510291	Symbol	* vtable_info		2510139						
ANR	2510292	Symbol	& vtable		2510139						
ANR	2510293	Symbol	vmeth		2510139						
ANR	2510294	Symbol	vtable		2510139						
ANR	2510295	Symbol	anal		2510139						
ANR	2510296	Symbol	meth . addr		2510139						
ANR	2510297	Symbol	class_name		2510139						
ANR	2510298	Symbol	vtable . addr		2510139						
ANR	2510299	Symbol	* vmeth		2510139						
ANR	2510300	Symbol	meth		2510139						
ANR	2510301	DeclStmt									
ANR	2510302	Decl							const char	"const char * ( RRTTIMSVCAnalContext * context , RecoveryCompleteObjectLocator * col )"	recovery_apply_complete_object_locator
ANR	2510303	DeclStmt									
ANR	2510304	Decl							const char	"const char * ( RRTTIMSVCAnalContext * context , RecoveryTypeDescriptor * td )"	recovery_apply_type_descriptor
ANR	2510305	Function	recovery_apply_bases	828:0:24863:25988							
ANR	2510306	FunctionDef	"recovery_apply_bases (RRTTIMSVCAnalContext * context , const char * class_name , RVector * base_descs)"		2510305	0					
ANR	2510307	CompoundStatement		828:109:24972:25988	2510305	0					
ANR	2510308	IdentifierDeclStatement	RecoveryBaseDescriptor * base_desc ;	829:1:24975:25008	2510305	0	True				
ANR	2510309	IdentifierDecl	* base_desc		2510305	0					
ANR	2510310	IdentifierDeclType	RecoveryBaseDescriptor *		2510305	0					
ANR	2510311	Identifier	base_desc		2510305	1					
ANR	2510312	Statement	r_vector_foreach	830:1:25011:25026	2510305	1	True				
ANR	2510313	Statement	(	830:18:25028:25028	2510305	2	True				
ANR	2510314	Statement	base_descs	830:19:25029:25038	2510305	3	True				
ANR	2510315	Statement	","	830:29:25039:25039	2510305	4	True				
ANR	2510316	Statement	base_desc	830:31:25041:25049	2510305	5	True				
ANR	2510317	Statement	)	830:40:25050:25050	2510305	6	True				
ANR	2510318	CompoundStatement		27:2:770:789	2510305	7					
ANR	2510319	IdentifierDeclStatement	RecoveryTypeDescriptor * base_td = base_desc -> td ;	831:2:25056:25103	2510305	0	True				
ANR	2510320	IdentifierDecl	* base_td = base_desc -> td		2510305	0					
ANR	2510321	IdentifierDeclType	RecoveryTypeDescriptor *		2510305	0					
ANR	2510322	Identifier	base_td		2510305	1					
ANR	2510323	AssignmentExpression	* base_td = base_desc -> td		2510305	2		=			
ANR	2510324	Identifier	base_td		2510305	0					
ANR	2510325	PtrMemberAccess	base_desc -> td		2510305	1					
ANR	2510326	Identifier	base_desc		2510305	0					
ANR	2510327	Identifier	td		2510305	1					
ANR	2510328	IfStatement	if ( ! base_td -> valid )		2510305	1					
ANR	2510329	Condition	! base_td -> valid	832:6:25111:25125	2510305	0	True				
ANR	2510330	UnaryOperationExpression	! base_td -> valid		2510305	0					
ANR	2510331	UnaryOperator	!		2510305	0					
ANR	2510332	PtrMemberAccess	base_td -> valid		2510305	1					
ANR	2510333	Identifier	base_td		2510305	0					
ANR	2510334	Identifier	valid		2510305	1					
ANR	2510335	CompoundStatement		5:23:155:155	2510305	1					
ANR	2510336	ExpressionStatement	"eprintf ( ""Warning Base td is invalid!\\n"" )"	833:3:25133:25174	2510305	0	True				
ANR	2510337	CallExpression	"eprintf ( ""Warning Base td is invalid!\\n"" )"		2510305	0					
ANR	2510338	Callee	eprintf		2510305	0					
ANR	2510339	Identifier	eprintf		2510305	0					
ANR	2510340	ArgumentList	"""Warning Base td is invalid!\\n"""		2510305	1					
ANR	2510341	Argument	"""Warning Base td is invalid!\\n"""		2510305	0					
ANR	2510342	PrimaryExpression	"""Warning Base td is invalid!\\n"""		2510305	0					
ANR	2510343	ContinueStatement	continue ;	834:3:25179:25187	2510305	1	True				
ANR	2510344	IdentifierDeclStatement	const char * base_class_name ;	837:2:25196:25223	2510305	2	True				
ANR	2510345	IdentifierDecl	* base_class_name		2510305	0					
ANR	2510346	IdentifierDeclType	const char *		2510305	0					
ANR	2510347	Identifier	base_class_name		2510305	1					
ANR	2510348	IfStatement	if ( ! base_td -> col )		2510305	3					
ANR	2510349	Condition	! base_td -> col	838:6:25231:25243	2510305	0	True				
ANR	2510350	UnaryOperationExpression	! base_td -> col		2510305	0					
ANR	2510351	UnaryOperator	!		2510305	0					
ANR	2510352	PtrMemberAccess	base_td -> col		2510305	1					
ANR	2510353	Identifier	base_td		2510305	0					
ANR	2510354	Identifier	col		2510305	1					
ANR	2510355	CompoundStatement		11:21:273:273	2510305	1					
ANR	2510356	IfStatement	if ( context -> vt_context -> anal -> verbose )		2510305	0					
ANR	2510357	Condition	context -> vt_context -> anal -> verbose	839:7:25255:25288	2510305	0	True				
ANR	2510358	PtrMemberAccess	context -> vt_context -> anal -> verbose		2510305	0					
ANR	2510359	PtrMemberAccess	context -> vt_context -> anal		2510305	0					
ANR	2510360	PtrMemberAccess	context -> vt_context		2510305	0					
ANR	2510361	Identifier	context		2510305	0					
ANR	2510362	Identifier	vt_context		2510305	1					
ANR	2510363	Identifier	anal		2510305	1					
ANR	2510364	Identifier	verbose		2510305	1					
ANR	2510365	CompoundStatement		12:43:318:318	2510305	1					
ANR	2510366	ExpressionStatement	"eprintf ( ""Warning: Base td %s has no col. Falling back to recovery from td only.\\n"" , base_td -> td . name )"	840:4:25297:25399	2510305	0	True				
ANR	2510367	CallExpression	"eprintf ( ""Warning: Base td %s has no col. Falling back to recovery from td only.\\n"" , base_td -> td . name )"		2510305	0					
ANR	2510368	Callee	eprintf		2510305	0					
ANR	2510369	Identifier	eprintf		2510305	0					
ANR	2510370	ArgumentList	"""Warning: Base td %s has no col. Falling back to recovery from td only.\\n"""		2510305	1					
ANR	2510371	Argument	"""Warning: Base td %s has no col. Falling back to recovery from td only.\\n"""		2510305	0					
ANR	2510372	PrimaryExpression	"""Warning: Base td %s has no col. Falling back to recovery from td only.\\n"""		2510305	0					
ANR	2510373	Argument	base_td -> td . name		2510305	1					
ANR	2510374	MemberAccess	base_td -> td . name		2510305	0					
ANR	2510375	PtrMemberAccess	base_td -> td		2510305	0					
ANR	2510376	Identifier	base_td		2510305	0					
ANR	2510377	Identifier	td		2510305	1					
ANR	2510378	Identifier	name		2510305	1					
ANR	2510379	ExpressionStatement	"base_class_name = recovery_apply_type_descriptor ( context , base_td )"	842:3:25409:25476	2510305	1	True				
ANR	2510380	AssignmentExpression	"base_class_name = recovery_apply_type_descriptor ( context , base_td )"		2510305	0		=			
ANR	2510381	Identifier	base_class_name		2510305	0					
ANR	2510382	CallExpression	"recovery_apply_type_descriptor ( context , base_td )"		2510305	1					
ANR	2510383	Callee	recovery_apply_type_descriptor		2510305	0					
ANR	2510384	Identifier	recovery_apply_type_descriptor		2510305	0					
ANR	2510385	ArgumentList	context		2510305	1					
ANR	2510386	Argument	context		2510305	0					
ANR	2510387	Identifier	context		2510305	0					
ANR	2510388	Argument	base_td		2510305	1					
ANR	2510389	Identifier	base_td		2510305	0					
ANR	2510390	ElseStatement	else		2510305	0					
ANR	2510391	CompoundStatement		16:9:514:514	2510305	0					
ANR	2510392	ExpressionStatement	"base_class_name = recovery_apply_complete_object_locator ( context , base_td -> col )"	844:3:25492:25572	2510305	0	True				
ANR	2510393	AssignmentExpression	"base_class_name = recovery_apply_complete_object_locator ( context , base_td -> col )"		2510305	0		=			
ANR	2510394	Identifier	base_class_name		2510305	0					
ANR	2510395	CallExpression	"recovery_apply_complete_object_locator ( context , base_td -> col )"		2510305	1					
ANR	2510396	Callee	recovery_apply_complete_object_locator		2510305	0					
ANR	2510397	Identifier	recovery_apply_complete_object_locator		2510305	0					
ANR	2510398	ArgumentList	context		2510305	1					
ANR	2510399	Argument	context		2510305	0					
ANR	2510400	Identifier	context		2510305	0					
ANR	2510401	Argument	base_td -> col		2510305	1					
ANR	2510402	PtrMemberAccess	base_td -> col		2510305	0					
ANR	2510403	Identifier	base_td		2510305	0					
ANR	2510404	Identifier	col		2510305	1					
ANR	2510405	IfStatement	if ( ! base_class_name )		2510305	4					
ANR	2510406	Condition	! base_class_name	847:6:25585:25600	2510305	0	True				
ANR	2510407	UnaryOperationExpression	! base_class_name		2510305	0					
ANR	2510408	UnaryOperator	!		2510305	0					
ANR	2510409	Identifier	base_class_name		2510305	1					
ANR	2510410	CompoundStatement		20:24:630:630	2510305	1					
ANR	2510411	IfStatement	if ( context -> vt_context -> anal -> verbose )		2510305	0					
ANR	2510412	Condition	context -> vt_context -> anal -> verbose	848:7:25612:25645	2510305	0	True				
ANR	2510413	PtrMemberAccess	context -> vt_context -> anal -> verbose		2510305	0					
ANR	2510414	PtrMemberAccess	context -> vt_context -> anal		2510305	0					
ANR	2510415	PtrMemberAccess	context -> vt_context		2510305	0					
ANR	2510416	Identifier	context		2510305	0					
ANR	2510417	Identifier	vt_context		2510305	1					
ANR	2510418	Identifier	anal		2510305	1					
ANR	2510419	Identifier	verbose		2510305	1					
ANR	2510420	CompoundStatement		21:43:675:675	2510305	1					
ANR	2510421	ExpressionStatement	"eprintf ( ""Failed to convert !base td->col or td to a class\\n"" )"	849:4:25654:25716	2510305	0	True				
ANR	2510422	CallExpression	"eprintf ( ""Failed to convert !base td->col or td to a class\\n"" )"		2510305	0					
ANR	2510423	Callee	eprintf		2510305	0					
ANR	2510424	Identifier	eprintf		2510305	0					
ANR	2510425	ArgumentList	"""Failed to convert !base td->col or td to a class\\n"""		2510305	1					
ANR	2510426	Argument	"""Failed to convert !base td->col or td to a class\\n"""		2510305	0					
ANR	2510427	PrimaryExpression	"""Failed to convert !base td->col or td to a class\\n"""		2510305	0					
ANR	2510428	ContinueStatement	continue ;	851:3:25726:25734	2510305	1	True				
ANR	2510429	IdentifierDeclStatement	RAnalBaseClass base ;	854:2:25743:25762	2510305	5	True				
ANR	2510430	IdentifierDecl	base		2510305	0					
ANR	2510431	IdentifierDeclType	RAnalBaseClass		2510305	0					
ANR	2510432	Identifier	base		2510305	1					
ANR	2510433	ExpressionStatement	base . id = NULL	855:2:25766:25780	2510305	6	True				
ANR	2510434	AssignmentExpression	base . id = NULL		2510305	0		=			
ANR	2510435	MemberAccess	base . id		2510305	0					
ANR	2510436	Identifier	base		2510305	0					
ANR	2510437	Identifier	id		2510305	1					
ANR	2510438	Identifier	NULL		2510305	1					
ANR	2510439	ExpressionStatement	base . offset = ( ut64 ) base_desc -> bcd -> where . mdisp	856:2:25784:25831	2510305	7	True				
ANR	2510440	AssignmentExpression	base . offset = ( ut64 ) base_desc -> bcd -> where . mdisp		2510305	0		=			
ANR	2510441	MemberAccess	base . offset		2510305	0					
ANR	2510442	Identifier	base		2510305	0					
ANR	2510443	Identifier	offset		2510305	1					
ANR	2510444	CastExpression	( ut64 ) base_desc -> bcd -> where . mdisp		2510305	1					
ANR	2510445	CastTarget	ut64		2510305	0					
ANR	2510446	MemberAccess	base_desc -> bcd -> where . mdisp		2510305	1					
ANR	2510447	PtrMemberAccess	base_desc -> bcd -> where		2510305	0					
ANR	2510448	PtrMemberAccess	base_desc -> bcd		2510305	0					
ANR	2510449	Identifier	base_desc		2510305	0					
ANR	2510450	Identifier	bcd		2510305	1					
ANR	2510451	Identifier	where		2510305	1					
ANR	2510452	Identifier	mdisp		2510305	1					
ANR	2510453	ExpressionStatement	base . class_name = strdup ( base_class_name )	857:2:25835:25877	2510305	8	True				
ANR	2510454	AssignmentExpression	base . class_name = strdup ( base_class_name )		2510305	0		=			
ANR	2510455	MemberAccess	base . class_name		2510305	0					
ANR	2510456	Identifier	base		2510305	0					
ANR	2510457	Identifier	class_name		2510305	1					
ANR	2510458	CallExpression	strdup ( base_class_name )		2510305	1					
ANR	2510459	Callee	strdup		2510305	0					
ANR	2510460	Identifier	strdup		2510305	0					
ANR	2510461	ArgumentList	base_class_name		2510305	1					
ANR	2510462	Argument	base_class_name		2510305	0					
ANR	2510463	Identifier	base_class_name		2510305	0					
ANR	2510464	ExpressionStatement	"r_anal_class_base_set ( context -> vt_context -> anal , class_name , & base )"	858:2:25881:25949	2510305	9	True				
ANR	2510465	CallExpression	"r_anal_class_base_set ( context -> vt_context -> anal , class_name , & base )"		2510305	0					
ANR	2510466	Callee	r_anal_class_base_set		2510305	0					
ANR	2510467	Identifier	r_anal_class_base_set		2510305	0					
ANR	2510468	ArgumentList	context -> vt_context -> anal		2510305	1					
ANR	2510469	Argument	context -> vt_context -> anal		2510305	0					
ANR	2510470	PtrMemberAccess	context -> vt_context -> anal		2510305	0					
ANR	2510471	PtrMemberAccess	context -> vt_context		2510305	0					
ANR	2510472	Identifier	context		2510305	0					
ANR	2510473	Identifier	vt_context		2510305	1					
ANR	2510474	Identifier	anal		2510305	1					
ANR	2510475	Argument	class_name		2510305	1					
ANR	2510476	Identifier	class_name		2510305	0					
ANR	2510477	Argument	& base		2510305	2					
ANR	2510478	UnaryOperationExpression	& base		2510305	0					
ANR	2510479	UnaryOperator	&		2510305	0					
ANR	2510480	Identifier	base		2510305	1					
ANR	2510481	ExpressionStatement	r_anal_class_base_fini ( & base )	859:2:25953:25983	2510305	10	True				
ANR	2510482	CallExpression	r_anal_class_base_fini ( & base )		2510305	0					
ANR	2510483	Callee	r_anal_class_base_fini		2510305	0					
ANR	2510484	Identifier	r_anal_class_base_fini		2510305	0					
ANR	2510485	ArgumentList	& base		2510305	1					
ANR	2510486	Argument	& base		2510305	0					
ANR	2510487	UnaryOperationExpression	& base		2510305	0					
ANR	2510488	UnaryOperator	&		2510305	0					
ANR	2510489	Identifier	base		2510305	1					
ANR	2510490	ReturnType	static void		2510305	1					
ANR	2510491	Identifier	recovery_apply_bases		2510305	2					
ANR	2510492	ParameterList	"RRTTIMSVCAnalContext * context , const char * class_name , RVector * base_descs"		2510305	3					
ANR	2510493	Parameter	RRTTIMSVCAnalContext * context	828:33:24896:24924	2510305	0	True				
ANR	2510494	ParameterType	RRTTIMSVCAnalContext *		2510305	0					
ANR	2510495	Identifier	context		2510305	1					
ANR	2510496	Parameter	const char * class_name	828:64:24927:24948	2510305	1	True				
ANR	2510497	ParameterType	const char *		2510305	0					
ANR	2510498	Identifier	class_name		2510305	1					
ANR	2510499	Parameter	RVector * base_descs	828:88:24951:24969	2510305	2	True				
ANR	2510500	ParameterType	RVector *		2510305	0					
ANR	2510501	Identifier	base_descs		2510305	1					
ANR	2510502	CFGEntryNode	ENTRY		2510305		True				
ANR	2510503	CFGExitNode	EXIT		2510305		True				
ANR	2510504	CFGErrorNode	ERROR		2510305		True				
ANR	2510505	Symbol	base_descs		2510305						
ANR	2510506	Symbol	base_td -> td		2510305						
ANR	2510507	Symbol	& base		2510305						
ANR	2510508	Symbol	base . offset		2510305						
ANR	2510509	Symbol	* * base_desc		2510305						
ANR	2510510	Symbol	* * context		2510305						
ANR	2510511	Symbol	base_desc		2510305						
ANR	2510512	Symbol	base_td -> col		2510305						
ANR	2510513	Symbol	context -> vt_context -> anal		2510305						
ANR	2510514	Symbol	recovery_apply_type_descriptor		2510305						
ANR	2510515	Symbol	* * context -> vt_context		2510305						
ANR	2510516	Symbol	base_desc -> bcd -> where . mdisp		2510305						
ANR	2510517	Symbol	context		2510305						
ANR	2510518	Symbol	* context -> vt_context		2510305						
ANR	2510519	Symbol	* base_desc -> bcd		2510305						
ANR	2510520	Symbol	class_name		2510305						
ANR	2510521	Symbol	base . id		2510305						
ANR	2510522	Symbol	base_td -> td . name		2510305						
ANR	2510523	Symbol	NULL		2510305						
ANR	2510524	Symbol	* base_td		2510305						
ANR	2510525	Symbol	base_class_name		2510305						
ANR	2510526	Symbol	recovery_apply_complete_object_locator		2510305						
ANR	2510527	Symbol	context -> vt_context -> anal -> verbose		2510305						
ANR	2510528	Symbol	* base_desc		2510305						
ANR	2510529	Symbol	* context		2510305						
ANR	2510530	Symbol	base_td		2510305						
ANR	2510531	Symbol	base_desc -> bcd -> where		2510305						
ANR	2510532	Symbol	* * * context		2510305						
ANR	2510533	Symbol	base_desc -> bcd		2510305						
ANR	2510534	Symbol	base_desc -> td		2510305						
ANR	2510535	Symbol	base_td -> valid		2510305						
ANR	2510536	Symbol	* context -> vt_context -> anal		2510305						
ANR	2510537	Symbol	context -> vt_context		2510305						
ANR	2510538	Symbol	strdup		2510305						
ANR	2510539	Symbol	base . class_name		2510305						
ANR	2510540	Symbol	base		2510305						
ANR	2510541	Function	recovery_apply_complete_object_locator	864:0:25992:27082							
ANR	2510542	FunctionDef	"recovery_apply_complete_object_locator (RRTTIMSVCAnalContext * context , RecoveryCompleteObjectLocator * col)"		2510541	0					
ANR	2510543	CompoundStatement		864:125:26117:27082	2510541	0					
ANR	2510544	IfStatement	if ( ! col -> valid )		2510541	0					
ANR	2510545	Condition	! col -> valid	865:5:26124:26134	2510541	0	True				
ANR	2510546	UnaryOperationExpression	! col -> valid		2510541	0					
ANR	2510547	UnaryOperator	!		2510541	0					
ANR	2510548	PtrMemberAccess	col -> valid		2510541	1					
ANR	2510549	Identifier	col		2510541	0					
ANR	2510550	Identifier	valid		2510541	1					
ANR	2510551	CompoundStatement		2:18:19:19	2510541	1					
ANR	2510552	ReturnStatement	return NULL ;	866:2:26141:26152	2510541	0	True				
ANR	2510553	Identifier	NULL		2510541	0					
ANR	2510554	IfStatement	if ( ! col -> td )		2510541	1					
ANR	2510555	Condition	! col -> td	869:5:26163:26170	2510541	0	True				
ANR	2510556	UnaryOperationExpression	! col -> td		2510541	0					
ANR	2510557	UnaryOperator	!		2510541	0					
ANR	2510558	PtrMemberAccess	col -> td		2510541	1					
ANR	2510559	Identifier	col		2510541	0					
ANR	2510560	Identifier	td		2510541	1					
ANR	2510561	CompoundStatement		6:15:55:55	2510541	1					
ANR	2510562	IfStatement	if ( context -> vt_context -> anal -> verbose )		2510541	0					
ANR	2510563	Condition	context -> vt_context -> anal -> verbose	870:6:26181:26214	2510541	0	True				
ANR	2510564	PtrMemberAccess	context -> vt_context -> anal -> verbose		2510541	0					
ANR	2510565	PtrMemberAccess	context -> vt_context -> anal		2510541	0					
ANR	2510566	PtrMemberAccess	context -> vt_context		2510541	0					
ANR	2510567	Identifier	context		2510541	0					
ANR	2510568	Identifier	vt_context		2510541	1					
ANR	2510569	Identifier	anal		2510541	1					
ANR	2510570	Identifier	verbose		2510541	1					
ANR	2510571	CompoundStatement		7:42:99:99	2510541	1					
ANR	2510572	Statement	eprintf	871:3:26222:26228	2510541	0	True				
ANR	2510573	Statement	(	871:11:26230:26230	2510541	1	True				
ANR	2510574	Statement	"""Warning: no td for col at 0x%"""	871:12:26231:26261	2510541	2	True				
ANR	2510575	Statement	PFMT64x	871:43:26262:26268	2510541	3	True				
ANR	2510576	Statement	"""\\n"""	871:50:26269:26272	2510541	4	True				
ANR	2510577	Statement	","	871:54:26273:26273	2510541	5	True				
ANR	2510578	Statement	col	871:56:26275:26277	2510541	6	True				
ANR	2510579	Statement	->	871:59:26278:26279	2510541	7	True				
ANR	2510580	Statement	addr	871:61:26280:26283	2510541	8	True				
ANR	2510581	Statement	)	871:65:26284:26284	2510541	9	True				
ANR	2510582	ExpressionStatement		871:66:26285:26285	2510541	10	True				
ANR	2510583	ReturnStatement	return NULL ;	873:2:26293:26304	2510541	1	True				
ANR	2510584	Identifier	NULL		2510541	0					
ANR	2510585	IdentifierDeclStatement	RAnal * anal = context -> vt_context -> anal ;	876:1:26311:26350	2510541	2	True				
ANR	2510586	IdentifierDecl	* anal = context -> vt_context -> anal		2510541	0					
ANR	2510587	IdentifierDeclType	RAnal *		2510541	0					
ANR	2510588	Identifier	anal		2510541	1					
ANR	2510589	AssignmentExpression	* anal = context -> vt_context -> anal		2510541	2		=			
ANR	2510590	Identifier	anal		2510541	0					
ANR	2510591	PtrMemberAccess	context -> vt_context -> anal		2510541	1					
ANR	2510592	PtrMemberAccess	context -> vt_context		2510541	0					
ANR	2510593	Identifier	context		2510541	0					
ANR	2510594	Identifier	vt_context		2510541	1					
ANR	2510595	Identifier	anal		2510541	1					
ANR	2510596	IdentifierDeclStatement	"const char * existing = ht_up_find ( context -> col_td_classes , col -> addr , NULL ) ;"	878:1:26354:26430	2510541	3	True				
ANR	2510597	IdentifierDecl	"* existing = ht_up_find ( context -> col_td_classes , col -> addr , NULL )"		2510541	0					
ANR	2510598	IdentifierDeclType	const char *		2510541	0					
ANR	2510599	Identifier	existing		2510541	1					
ANR	2510600	AssignmentExpression	"* existing = ht_up_find ( context -> col_td_classes , col -> addr , NULL )"		2510541	2		=			
ANR	2510601	Identifier	existing		2510541	0					
ANR	2510602	CallExpression	"ht_up_find ( context -> col_td_classes , col -> addr , NULL )"		2510541	1					
ANR	2510603	Callee	ht_up_find		2510541	0					
ANR	2510604	Identifier	ht_up_find		2510541	0					
ANR	2510605	ArgumentList	context -> col_td_classes		2510541	1					
ANR	2510606	Argument	context -> col_td_classes		2510541	0					
ANR	2510607	PtrMemberAccess	context -> col_td_classes		2510541	0					
ANR	2510608	Identifier	context		2510541	0					
ANR	2510609	Identifier	col_td_classes		2510541	1					
ANR	2510610	Argument	col -> addr		2510541	1					
ANR	2510611	PtrMemberAccess	col -> addr		2510541	0					
ANR	2510612	Identifier	col		2510541	0					
ANR	2510613	Identifier	addr		2510541	1					
ANR	2510614	Argument	NULL		2510541	2					
ANR	2510615	Identifier	NULL		2510541	0					
ANR	2510616	IfStatement	if ( existing != NULL )		2510541	4					
ANR	2510617	Condition	existing != NULL	879:5:26437:26452	2510541	0	True				
ANR	2510618	EqualityExpression	existing != NULL		2510541	0		!=			
ANR	2510619	Identifier	existing		2510541	0					
ANR	2510620	Identifier	NULL		2510541	1					
ANR	2510621	CompoundStatement		16:23:337:337	2510541	1					
ANR	2510622	ReturnStatement	return existing ;	880:2:26459:26474	2510541	0	True				
ANR	2510623	Identifier	existing		2510541	0					
ANR	2510624	IdentifierDeclStatement	char * name = r_anal_rtti_msvc_demangle_class_name ( col -> td -> td . name ) ;	883:1:26481:26549	2510541	5	True				
ANR	2510625	IdentifierDecl	* name = r_anal_rtti_msvc_demangle_class_name ( col -> td -> td . name )		2510541	0					
ANR	2510626	IdentifierDeclType	char *		2510541	0					
ANR	2510627	Identifier	name		2510541	1					
ANR	2510628	AssignmentExpression	* name = r_anal_rtti_msvc_demangle_class_name ( col -> td -> td . name )		2510541	2		=			
ANR	2510629	Identifier	name		2510541	0					
ANR	2510630	CallExpression	r_anal_rtti_msvc_demangle_class_name ( col -> td -> td . name )		2510541	1					
ANR	2510631	Callee	r_anal_rtti_msvc_demangle_class_name		2510541	0					
ANR	2510632	Identifier	r_anal_rtti_msvc_demangle_class_name		2510541	0					
ANR	2510633	ArgumentList	col -> td -> td . name		2510541	1					
ANR	2510634	Argument	col -> td -> td . name		2510541	0					
ANR	2510635	MemberAccess	col -> td -> td . name		2510541	0					
ANR	2510636	PtrMemberAccess	col -> td -> td		2510541	0					
ANR	2510637	PtrMemberAccess	col -> td		2510541	0					
ANR	2510638	Identifier	col		2510541	0					
ANR	2510639	Identifier	td		2510541	1					
ANR	2510640	Identifier	td		2510541	1					
ANR	2510641	Identifier	name		2510541	1					
ANR	2510642	IfStatement	if ( ! name )		2510541	6					
ANR	2510643	Condition	! name	884:5:26556:26560	2510541	0	True				
ANR	2510644	UnaryOperationExpression	! name		2510541	0					
ANR	2510645	UnaryOperator	!		2510541	0					
ANR	2510646	Identifier	name		2510541	1					
ANR	2510647	CompoundStatement		21:12:445:445	2510541	1					
ANR	2510648	IfStatement	if ( context -> vt_context -> anal -> verbose )		2510541	0					
ANR	2510649	Condition	context -> vt_context -> anal -> verbose	885:6:26571:26604	2510541	0	True				
ANR	2510650	PtrMemberAccess	context -> vt_context -> anal -> verbose		2510541	0					
ANR	2510651	PtrMemberAccess	context -> vt_context -> anal		2510541	0					
ANR	2510652	PtrMemberAccess	context -> vt_context		2510541	0					
ANR	2510653	Identifier	context		2510541	0					
ANR	2510654	Identifier	vt_context		2510541	1					
ANR	2510655	Identifier	anal		2510541	1					
ANR	2510656	Identifier	verbose		2510541	1					
ANR	2510657	CompoundStatement		22:42:489:489	2510541	1					
ANR	2510658	ExpressionStatement	"eprintf ( ""Failed to demangle a class name: \\""%s\\""\\n"" , col -> td -> td . name )"	886:3:26612:26683	2510541	0	True				
ANR	2510659	CallExpression	"eprintf ( ""Failed to demangle a class name: \\""%s\\""\\n"" , col -> td -> td . name )"		2510541	0					
ANR	2510660	Callee	eprintf		2510541	0					
ANR	2510661	Identifier	eprintf		2510541	0					
ANR	2510662	ArgumentList	"""Failed to demangle a class name: \\""%s\\""\\n"""		2510541	1					
ANR	2510663	Argument	"""Failed to demangle a class name: \\""%s\\""\\n"""		2510541	0					
ANR	2510664	PrimaryExpression	"""Failed to demangle a class name: \\""%s\\""\\n"""		2510541	0					
ANR	2510665	Argument	col -> td -> td . name		2510541	1					
ANR	2510666	MemberAccess	col -> td -> td . name		2510541	0					
ANR	2510667	PtrMemberAccess	col -> td -> td		2510541	0					
ANR	2510668	PtrMemberAccess	col -> td		2510541	0					
ANR	2510669	Identifier	col		2510541	0					
ANR	2510670	Identifier	td		2510541	1					
ANR	2510671	Identifier	td		2510541	1					
ANR	2510672	Identifier	name		2510541	1					
ANR	2510673	ExpressionStatement	name = strdup ( col -> td -> td . name )	888:2:26691:26723	2510541	1	True				
ANR	2510674	AssignmentExpression	name = strdup ( col -> td -> td . name )		2510541	0		=			
ANR	2510675	Identifier	name		2510541	0					
ANR	2510676	CallExpression	strdup ( col -> td -> td . name )		2510541	1					
ANR	2510677	Callee	strdup		2510541	0					
ANR	2510678	Identifier	strdup		2510541	0					
ANR	2510679	ArgumentList	col -> td -> td . name		2510541	1					
ANR	2510680	Argument	col -> td -> td . name		2510541	0					
ANR	2510681	MemberAccess	col -> td -> td . name		2510541	0					
ANR	2510682	PtrMemberAccess	col -> td -> td		2510541	0					
ANR	2510683	PtrMemberAccess	col -> td		2510541	0					
ANR	2510684	Identifier	col		2510541	0					
ANR	2510685	Identifier	td		2510541	1					
ANR	2510686	Identifier	td		2510541	1					
ANR	2510687	Identifier	name		2510541	1					
ANR	2510688	IfStatement	if ( ! name )		2510541	2					
ANR	2510689	Condition	! name	889:6:26731:26735	2510541	0	True				
ANR	2510690	UnaryOperationExpression	! name		2510541	0					
ANR	2510691	UnaryOperator	!		2510541	0					
ANR	2510692	Identifier	name		2510541	1					
ANR	2510693	CompoundStatement		26:13:620:620	2510541	1					
ANR	2510694	ReturnStatement	return NULL ;	890:3:26743:26754	2510541	0	True				
ANR	2510695	Identifier	NULL		2510541	0					
ANR	2510696	IdentifierDeclStatement	char * tmp = name ;	894:1:26765:26781	2510541	7	True				
ANR	2510697	IdentifierDecl	* tmp = name		2510541	0					
ANR	2510698	IdentifierDeclType	char *		2510541	0					
ANR	2510699	Identifier	tmp		2510541	1					
ANR	2510700	AssignmentExpression	* tmp = name		2510541	2		=			
ANR	2510701	Identifier	name		2510541	0					
ANR	2510702	Identifier	name		2510541	1					
ANR	2510703	ExpressionStatement	"name = unique_class_name ( anal , name )"	895:1:26784:26821	2510541	8	True				
ANR	2510704	AssignmentExpression	"name = unique_class_name ( anal , name )"		2510541	0		=			
ANR	2510705	Identifier	name		2510541	0					
ANR	2510706	CallExpression	"unique_class_name ( anal , name )"		2510541	1					
ANR	2510707	Callee	unique_class_name		2510541	0					
ANR	2510708	Identifier	unique_class_name		2510541	0					
ANR	2510709	ArgumentList	anal		2510541	1					
ANR	2510710	Argument	anal		2510541	0					
ANR	2510711	Identifier	anal		2510541	0					
ANR	2510712	Argument	name		2510541	1					
ANR	2510713	Identifier	name		2510541	0					
ANR	2510714	ExpressionStatement	free ( tmp )	896:1:26824:26834	2510541	9	True				
ANR	2510715	CallExpression	free ( tmp )		2510541	0					
ANR	2510716	Callee	free		2510541	0					
ANR	2510717	Identifier	free		2510541	0					
ANR	2510718	ArgumentList	tmp		2510541	1					
ANR	2510719	Argument	tmp		2510541	0					
ANR	2510720	Identifier	tmp		2510541	0					
ANR	2510721	IfStatement	if ( ! name )		2510541	10					
ANR	2510722	Condition	! name	897:5:26841:26845	2510541	0	True				
ANR	2510723	UnaryOperationExpression	! name		2510541	0					
ANR	2510724	UnaryOperator	!		2510541	0					
ANR	2510725	Identifier	name		2510541	1					
ANR	2510726	CompoundStatement		34:12:730:730	2510541	1					
ANR	2510727	ReturnStatement	return NULL ;	898:2:26852:26863	2510541	0	True				
ANR	2510728	Identifier	NULL		2510541	0					
ANR	2510729	ExpressionStatement	"r_anal_class_create ( anal , name )"	901:1:26870:26902	2510541	11	True				
ANR	2510730	CallExpression	"r_anal_class_create ( anal , name )"		2510541	0					
ANR	2510731	Callee	r_anal_class_create		2510541	0					
ANR	2510732	Identifier	r_anal_class_create		2510541	0					
ANR	2510733	ArgumentList	anal		2510541	1					
ANR	2510734	Argument	anal		2510541	0					
ANR	2510735	Identifier	anal		2510541	0					
ANR	2510736	Argument	name		2510541	1					
ANR	2510737	Identifier	name		2510541	0					
ANR	2510738	ExpressionStatement	"ht_up_insert ( context -> col_td_classes , col -> addr , name )"	902:1:26905:26960	2510541	12	True				
ANR	2510739	CallExpression	"ht_up_insert ( context -> col_td_classes , col -> addr , name )"		2510541	0					
ANR	2510740	Callee	ht_up_insert		2510541	0					
ANR	2510741	Identifier	ht_up_insert		2510541	0					
ANR	2510742	ArgumentList	context -> col_td_classes		2510541	1					
ANR	2510743	Argument	context -> col_td_classes		2510541	0					
ANR	2510744	PtrMemberAccess	context -> col_td_classes		2510541	0					
ANR	2510745	Identifier	context		2510541	0					
ANR	2510746	Identifier	col_td_classes		2510541	1					
ANR	2510747	Argument	col -> addr		2510541	1					
ANR	2510748	PtrMemberAccess	col -> addr		2510541	0					
ANR	2510749	Identifier	col		2510541	0					
ANR	2510750	Identifier	addr		2510541	1					
ANR	2510751	Argument	name		2510541	2					
ANR	2510752	Identifier	name		2510541	0					
ANR	2510753	ExpressionStatement	"recovery_apply_vtable ( anal , name , col -> vtable )"	904:1:26964:27011	2510541	13	True				
ANR	2510754	CallExpression	"recovery_apply_vtable ( anal , name , col -> vtable )"		2510541	0					
ANR	2510755	Callee	recovery_apply_vtable		2510541	0					
ANR	2510756	Identifier	recovery_apply_vtable		2510541	0					
ANR	2510757	ArgumentList	anal		2510541	1					
ANR	2510758	Argument	anal		2510541	0					
ANR	2510759	Identifier	anal		2510541	0					
ANR	2510760	Argument	name		2510541	1					
ANR	2510761	Identifier	name		2510541	0					
ANR	2510762	Argument	col -> vtable		2510541	2					
ANR	2510763	PtrMemberAccess	col -> vtable		2510541	0					
ANR	2510764	Identifier	col		2510541	0					
ANR	2510765	Identifier	vtable		2510541	1					
ANR	2510766	ExpressionStatement	"recovery_apply_bases ( context , name , & col -> base_td )"	905:1:27014:27065	2510541	14	True				
ANR	2510767	CallExpression	"recovery_apply_bases ( context , name , & col -> base_td )"		2510541	0					
ANR	2510768	Callee	recovery_apply_bases		2510541	0					
ANR	2510769	Identifier	recovery_apply_bases		2510541	0					
ANR	2510770	ArgumentList	context		2510541	1					
ANR	2510771	Argument	context		2510541	0					
ANR	2510772	Identifier	context		2510541	0					
ANR	2510773	Argument	name		2510541	1					
ANR	2510774	Identifier	name		2510541	0					
ANR	2510775	Argument	& col -> base_td		2510541	2					
ANR	2510776	UnaryOperationExpression	& col -> base_td		2510541	0					
ANR	2510777	UnaryOperator	&		2510541	0					
ANR	2510778	PtrMemberAccess	col -> base_td		2510541	1					
ANR	2510779	Identifier	col		2510541	0					
ANR	2510780	Identifier	base_td		2510541	1					
ANR	2510781	ReturnStatement	return name ;	907:1:27069:27080	2510541	15	True				
ANR	2510782	Identifier	name		2510541	0					
ANR	2510783	ReturnType	static const char *		2510541	1					
ANR	2510784	Identifier	recovery_apply_complete_object_locator		2510541	2					
ANR	2510785	ParameterList	"RRTTIMSVCAnalContext * context , RecoveryCompleteObjectLocator * col"		2510541	3					
ANR	2510786	Parameter	RRTTIMSVCAnalContext * context	864:58:26050:26078	2510541	0	True				
ANR	2510787	ParameterType	RRTTIMSVCAnalContext *		2510541	0					
ANR	2510788	Identifier	context		2510541	1					
ANR	2510789	Parameter	RecoveryCompleteObjectLocator * col	864:89:26081:26114	2510541	1	True				
ANR	2510790	ParameterType	RecoveryCompleteObjectLocator *		2510541	0					
ANR	2510791	Identifier	col		2510541	1					
ANR	2510792	CFGEntryNode	ENTRY		2510541		True				
ANR	2510793	CFGExitNode	EXIT		2510541		True				
ANR	2510794	Symbol	ht_up_find		2510541						
ANR	2510795	Symbol	col		2510541						
ANR	2510796	Symbol	* * context		2510541						
ANR	2510797	Symbol	context -> col_td_classes		2510541						
ANR	2510798	Symbol	col -> td -> td		2510541						
ANR	2510799	Symbol	context -> vt_context -> anal		2510541						
ANR	2510800	Symbol	* * context -> vt_context		2510541						
ANR	2510801	Symbol	col -> td -> td . name		2510541						
ANR	2510802	Symbol	* * col		2510541						
ANR	2510803	Symbol	* col		2510541						
ANR	2510804	Symbol	tmp		2510541						
ANR	2510805	Symbol	context		2510541						
ANR	2510806	Symbol	col -> vtable		2510541						
ANR	2510807	Symbol	* context -> vt_context		2510541						
ANR	2510808	Symbol	unique_class_name		2510541						
ANR	2510809	Symbol	NULL		2510541						
ANR	2510810	Symbol	col -> addr		2510541						
ANR	2510811	Symbol	r_anal_rtti_msvc_demangle_class_name		2510541						
ANR	2510812	Symbol	col -> valid		2510541						
ANR	2510813	Symbol	context -> vt_context -> anal -> verbose		2510541						
ANR	2510814	Symbol	* context		2510541						
ANR	2510815	Symbol	existing		2510541						
ANR	2510816	Symbol	col -> td		2510541						
ANR	2510817	Symbol	* * * context		2510541						
ANR	2510818	Symbol	anal		2510541						
ANR	2510819	Symbol	* col -> td		2510541						
ANR	2510820	Symbol	& col -> base_td		2510541						
ANR	2510821	Symbol	* context -> vt_context -> anal		2510541						
ANR	2510822	Symbol	name		2510541						
ANR	2510823	Symbol	context -> vt_context		2510541						
ANR	2510824	Symbol	strdup		2510541						
ANR	2510825	Function	recovery_apply_type_descriptor	912:0:27087:27948							
ANR	2510826	FunctionDef	"recovery_apply_type_descriptor (RRTTIMSVCAnalContext * context , RecoveryTypeDescriptor * td)"		2510825	0					
ANR	2510827	CompoundStatement		912:109:27196:27948	2510825	0					
ANR	2510828	IfStatement	if ( ! td -> valid )		2510825	0					
ANR	2510829	Condition	! td -> valid	913:5:27203:27212	2510825	0	True				
ANR	2510830	UnaryOperationExpression	! td -> valid		2510825	0					
ANR	2510831	UnaryOperator	!		2510825	0					
ANR	2510832	PtrMemberAccess	td -> valid		2510825	1					
ANR	2510833	Identifier	td		2510825	0					
ANR	2510834	Identifier	valid		2510825	1					
ANR	2510835	CompoundStatement		2:17:18:18	2510825	1					
ANR	2510836	ReturnStatement	return NULL ;	914:2:27219:27230	2510825	0	True				
ANR	2510837	Identifier	NULL		2510825	0					
ANR	2510838	IdentifierDeclStatement	RAnal * anal = context -> vt_context -> anal ;	917:1:27237:27276	2510825	1	True				
ANR	2510839	IdentifierDecl	* anal = context -> vt_context -> anal		2510825	0					
ANR	2510840	IdentifierDeclType	RAnal *		2510825	0					
ANR	2510841	Identifier	anal		2510825	1					
ANR	2510842	AssignmentExpression	* anal = context -> vt_context -> anal		2510825	2		=			
ANR	2510843	Identifier	anal		2510825	0					
ANR	2510844	PtrMemberAccess	context -> vt_context -> anal		2510825	1					
ANR	2510845	PtrMemberAccess	context -> vt_context		2510825	0					
ANR	2510846	Identifier	context		2510825	0					
ANR	2510847	Identifier	vt_context		2510825	1					
ANR	2510848	Identifier	anal		2510825	1					
ANR	2510849	IdentifierDeclStatement	"const char * existing = ht_up_find ( context -> col_td_classes , td -> addr , NULL ) ;"	919:1:27280:27355	2510825	2	True				
ANR	2510850	IdentifierDecl	"* existing = ht_up_find ( context -> col_td_classes , td -> addr , NULL )"		2510825	0					
ANR	2510851	IdentifierDeclType	const char *		2510825	0					
ANR	2510852	Identifier	existing		2510825	1					
ANR	2510853	AssignmentExpression	"* existing = ht_up_find ( context -> col_td_classes , td -> addr , NULL )"		2510825	2		=			
ANR	2510854	Identifier	existing		2510825	0					
ANR	2510855	CallExpression	"ht_up_find ( context -> col_td_classes , td -> addr , NULL )"		2510825	1					
ANR	2510856	Callee	ht_up_find		2510825	0					
ANR	2510857	Identifier	ht_up_find		2510825	0					
ANR	2510858	ArgumentList	context -> col_td_classes		2510825	1					
ANR	2510859	Argument	context -> col_td_classes		2510825	0					
ANR	2510860	PtrMemberAccess	context -> col_td_classes		2510825	0					
ANR	2510861	Identifier	context		2510825	0					
ANR	2510862	Identifier	col_td_classes		2510825	1					
ANR	2510863	Argument	td -> addr		2510825	1					
ANR	2510864	PtrMemberAccess	td -> addr		2510825	0					
ANR	2510865	Identifier	td		2510825	0					
ANR	2510866	Identifier	addr		2510825	1					
ANR	2510867	Argument	NULL		2510825	2					
ANR	2510868	Identifier	NULL		2510825	0					
ANR	2510869	IfStatement	if ( existing != NULL )		2510825	3					
ANR	2510870	Condition	existing != NULL	920:5:27362:27377	2510825	0	True				
ANR	2510871	EqualityExpression	existing != NULL		2510825	0		!=			
ANR	2510872	Identifier	existing		2510825	0					
ANR	2510873	Identifier	NULL		2510825	1					
ANR	2510874	CompoundStatement		9:23:183:183	2510825	1					
ANR	2510875	ReturnStatement	return existing ;	921:2:27384:27399	2510825	0	True				
ANR	2510876	Identifier	existing		2510825	0					
ANR	2510877	IdentifierDeclStatement	char * name = r_anal_rtti_msvc_demangle_class_name ( td -> td . name ) ;	924:1:27406:27469	2510825	4	True				
ANR	2510878	IdentifierDecl	* name = r_anal_rtti_msvc_demangle_class_name ( td -> td . name )		2510825	0					
ANR	2510879	IdentifierDeclType	char *		2510825	0					
ANR	2510880	Identifier	name		2510825	1					
ANR	2510881	AssignmentExpression	* name = r_anal_rtti_msvc_demangle_class_name ( td -> td . name )		2510825	2		=			
ANR	2510882	Identifier	name		2510825	0					
ANR	2510883	CallExpression	r_anal_rtti_msvc_demangle_class_name ( td -> td . name )		2510825	1					
ANR	2510884	Callee	r_anal_rtti_msvc_demangle_class_name		2510825	0					
ANR	2510885	Identifier	r_anal_rtti_msvc_demangle_class_name		2510825	0					
ANR	2510886	ArgumentList	td -> td . name		2510825	1					
ANR	2510887	Argument	td -> td . name		2510825	0					
ANR	2510888	MemberAccess	td -> td . name		2510825	0					
ANR	2510889	PtrMemberAccess	td -> td		2510825	0					
ANR	2510890	Identifier	td		2510825	0					
ANR	2510891	Identifier	td		2510825	1					
ANR	2510892	Identifier	name		2510825	1					
ANR	2510893	IfStatement	if ( ! name )		2510825	5					
ANR	2510894	Condition	! name	925:5:27476:27480	2510825	0	True				
ANR	2510895	UnaryOperationExpression	! name		2510825	0					
ANR	2510896	UnaryOperator	!		2510825	0					
ANR	2510897	Identifier	name		2510825	1					
ANR	2510898	CompoundStatement		14:12:286:286	2510825	1					
ANR	2510899	IfStatement	if ( context -> vt_context -> anal -> verbose )		2510825	0					
ANR	2510900	Condition	context -> vt_context -> anal -> verbose	926:6:27491:27524	2510825	0	True				
ANR	2510901	PtrMemberAccess	context -> vt_context -> anal -> verbose		2510825	0					
ANR	2510902	PtrMemberAccess	context -> vt_context -> anal		2510825	0					
ANR	2510903	PtrMemberAccess	context -> vt_context		2510825	0					
ANR	2510904	Identifier	context		2510825	0					
ANR	2510905	Identifier	vt_context		2510825	1					
ANR	2510906	Identifier	anal		2510825	1					
ANR	2510907	Identifier	verbose		2510825	1					
ANR	2510908	CompoundStatement		15:42:330:330	2510825	1					
ANR	2510909	ExpressionStatement	"eprintf ( ""Failed to demangle a class name: \\""%s\\""\\n"" , td -> td . name )"	927:3:27532:27597	2510825	0	True				
ANR	2510910	CallExpression	"eprintf ( ""Failed to demangle a class name: \\""%s\\""\\n"" , td -> td . name )"		2510825	0					
ANR	2510911	Callee	eprintf		2510825	0					
ANR	2510912	Identifier	eprintf		2510825	0					
ANR	2510913	ArgumentList	"""Failed to demangle a class name: \\""%s\\""\\n"""		2510825	1					
ANR	2510914	Argument	"""Failed to demangle a class name: \\""%s\\""\\n"""		2510825	0					
ANR	2510915	PrimaryExpression	"""Failed to demangle a class name: \\""%s\\""\\n"""		2510825	0					
ANR	2510916	Argument	td -> td . name		2510825	1					
ANR	2510917	MemberAccess	td -> td . name		2510825	0					
ANR	2510918	PtrMemberAccess	td -> td		2510825	0					
ANR	2510919	Identifier	td		2510825	0					
ANR	2510920	Identifier	td		2510825	1					
ANR	2510921	Identifier	name		2510825	1					
ANR	2510922	ExpressionStatement	name = strdup ( td -> td . name )	929:2:27605:27632	2510825	1	True				
ANR	2510923	AssignmentExpression	name = strdup ( td -> td . name )		2510825	0		=			
ANR	2510924	Identifier	name		2510825	0					
ANR	2510925	CallExpression	strdup ( td -> td . name )		2510825	1					
ANR	2510926	Callee	strdup		2510825	0					
ANR	2510927	Identifier	strdup		2510825	0					
ANR	2510928	ArgumentList	td -> td . name		2510825	1					
ANR	2510929	Argument	td -> td . name		2510825	0					
ANR	2510930	MemberAccess	td -> td . name		2510825	0					
ANR	2510931	PtrMemberAccess	td -> td		2510825	0					
ANR	2510932	Identifier	td		2510825	0					
ANR	2510933	Identifier	td		2510825	1					
ANR	2510934	Identifier	name		2510825	1					
ANR	2510935	IfStatement	if ( ! name )		2510825	2					
ANR	2510936	Condition	! name	930:6:27640:27644	2510825	0	True				
ANR	2510937	UnaryOperationExpression	! name		2510825	0					
ANR	2510938	UnaryOperator	!		2510825	0					
ANR	2510939	Identifier	name		2510825	1					
ANR	2510940	CompoundStatement		19:13:450:450	2510825	1					
ANR	2510941	ReturnStatement	return NULL ;	931:3:27652:27663	2510825	0	True				
ANR	2510942	Identifier	NULL		2510825	0					
ANR	2510943	ExpressionStatement	"r_anal_class_create ( anal , name )"	935:1:27674:27706	2510825	6	True				
ANR	2510944	CallExpression	"r_anal_class_create ( anal , name )"		2510825	0					
ANR	2510945	Callee	r_anal_class_create		2510825	0					
ANR	2510946	Identifier	r_anal_class_create		2510825	0					
ANR	2510947	ArgumentList	anal		2510825	1					
ANR	2510948	Argument	anal		2510825	0					
ANR	2510949	Identifier	anal		2510825	0					
ANR	2510950	Argument	name		2510825	1					
ANR	2510951	Identifier	name		2510825	0					
ANR	2510952	ExpressionStatement	"ht_up_insert ( context -> col_td_classes , td -> addr , name )"	936:1:27709:27763	2510825	7	True				
ANR	2510953	CallExpression	"ht_up_insert ( context -> col_td_classes , td -> addr , name )"		2510825	0					
ANR	2510954	Callee	ht_up_insert		2510825	0					
ANR	2510955	Identifier	ht_up_insert		2510825	0					
ANR	2510956	ArgumentList	context -> col_td_classes		2510825	1					
ANR	2510957	Argument	context -> col_td_classes		2510825	0					
ANR	2510958	PtrMemberAccess	context -> col_td_classes		2510825	0					
ANR	2510959	Identifier	context		2510825	0					
ANR	2510960	Identifier	col_td_classes		2510825	1					
ANR	2510961	Argument	td -> addr		2510825	1					
ANR	2510962	PtrMemberAccess	td -> addr		2510825	0					
ANR	2510963	Identifier	td		2510825	0					
ANR	2510964	Identifier	addr		2510825	1					
ANR	2510965	Argument	name		2510825	2					
ANR	2510966	Identifier	name		2510825	0					
ANR	2510967	IfStatement	if ( ! td -> col || ! td -> col -> valid )		2510825	8					
ANR	2510968	Condition	! td -> col || ! td -> col -> valid	938:5:27771:27797	2510825	0	True				
ANR	2510969	OrExpression	! td -> col || ! td -> col -> valid		2510825	0		||			
ANR	2510970	UnaryOperationExpression	! td -> col		2510825	0					
ANR	2510971	UnaryOperator	!		2510825	0					
ANR	2510972	PtrMemberAccess	td -> col		2510825	1					
ANR	2510973	Identifier	td		2510825	0					
ANR	2510974	Identifier	col		2510825	1					
ANR	2510975	UnaryOperationExpression	! td -> col -> valid		2510825	1					
ANR	2510976	UnaryOperator	!		2510825	0					
ANR	2510977	PtrMemberAccess	td -> col -> valid		2510825	1					
ANR	2510978	PtrMemberAccess	td -> col		2510825	0					
ANR	2510979	Identifier	td		2510825	0					
ANR	2510980	Identifier	col		2510825	1					
ANR	2510981	Identifier	valid		2510825	1					
ANR	2510982	CompoundStatement		27:34:603:603	2510825	1					
ANR	2510983	ReturnStatement	return name ;	939:2:27804:27815	2510825	0	True				
ANR	2510984	Identifier	name		2510825	0					
ANR	2510985	ExpressionStatement	"recovery_apply_vtable ( anal , name , td -> col -> vtable )"	942:1:27822:27873	2510825	9	True				
ANR	2510986	CallExpression	"recovery_apply_vtable ( anal , name , td -> col -> vtable )"		2510825	0					
ANR	2510987	Callee	recovery_apply_vtable		2510825	0					
ANR	2510988	Identifier	recovery_apply_vtable		2510825	0					
ANR	2510989	ArgumentList	anal		2510825	1					
ANR	2510990	Argument	anal		2510825	0					
ANR	2510991	Identifier	anal		2510825	0					
ANR	2510992	Argument	name		2510825	1					
ANR	2510993	Identifier	name		2510825	0					
ANR	2510994	Argument	td -> col -> vtable		2510825	2					
ANR	2510995	PtrMemberAccess	td -> col -> vtable		2510825	0					
ANR	2510996	PtrMemberAccess	td -> col		2510825	0					
ANR	2510997	Identifier	td		2510825	0					
ANR	2510998	Identifier	col		2510825	1					
ANR	2510999	Identifier	vtable		2510825	1					
ANR	2511000	ExpressionStatement	"recovery_apply_bases ( context , name , & td -> col -> base_td )"	943:1:27876:27931	2510825	10	True				
ANR	2511001	CallExpression	"recovery_apply_bases ( context , name , & td -> col -> base_td )"		2510825	0					
ANR	2511002	Callee	recovery_apply_bases		2510825	0					
ANR	2511003	Identifier	recovery_apply_bases		2510825	0					
ANR	2511004	ArgumentList	context		2510825	1					
ANR	2511005	Argument	context		2510825	0					
ANR	2511006	Identifier	context		2510825	0					
ANR	2511007	Argument	name		2510825	1					
ANR	2511008	Identifier	name		2510825	0					
ANR	2511009	Argument	& td -> col -> base_td		2510825	2					
ANR	2511010	UnaryOperationExpression	& td -> col -> base_td		2510825	0					
ANR	2511011	UnaryOperator	&		2510825	0					
ANR	2511012	PtrMemberAccess	td -> col -> base_td		2510825	1					
ANR	2511013	PtrMemberAccess	td -> col		2510825	0					
ANR	2511014	Identifier	td		2510825	0					
ANR	2511015	Identifier	col		2510825	1					
ANR	2511016	Identifier	base_td		2510825	1					
ANR	2511017	ReturnStatement	return name ;	945:1:27935:27946	2510825	11	True				
ANR	2511018	Identifier	name		2510825	0					
ANR	2511019	ReturnType	static const char *		2510825	1					
ANR	2511020	Identifier	recovery_apply_type_descriptor		2510825	2					
ANR	2511021	ParameterList	"RRTTIMSVCAnalContext * context , RecoveryTypeDescriptor * td"		2510825	3					
ANR	2511022	Parameter	RRTTIMSVCAnalContext * context	912:50:27137:27165	2510825	0	True				
ANR	2511023	ParameterType	RRTTIMSVCAnalContext *		2510825	0					
ANR	2511024	Identifier	context		2510825	1					
ANR	2511025	Parameter	RecoveryTypeDescriptor * td	912:81:27168:27193	2510825	1	True				
ANR	2511026	ParameterType	RecoveryTypeDescriptor *		2510825	0					
ANR	2511027	Identifier	td		2510825	1					
ANR	2511028	CFGEntryNode	ENTRY		2510825		True				
ANR	2511029	CFGExitNode	EXIT		2510825		True				
ANR	2511030	Symbol	td -> valid		2510825						
ANR	2511031	Symbol	ht_up_find		2510825						
ANR	2511032	Symbol	td -> td . name		2510825						
ANR	2511033	Symbol	td -> col		2510825						
ANR	2511034	Symbol	td -> col -> vtable		2510825						
ANR	2511035	Symbol	* * context		2510825						
ANR	2511036	Symbol	context -> col_td_classes		2510825						
ANR	2511037	Symbol	context -> vt_context -> anal		2510825						
ANR	2511038	Symbol	td -> addr		2510825						
ANR	2511039	Symbol	* * context -> vt_context		2510825						
ANR	2511040	Symbol	td -> col -> valid		2510825						
ANR	2511041	Symbol	context		2510825						
ANR	2511042	Symbol	* context -> vt_context		2510825						
ANR	2511043	Symbol	* * td		2510825						
ANR	2511044	Symbol	NULL		2510825						
ANR	2511045	Symbol	r_anal_rtti_msvc_demangle_class_name		2510825						
ANR	2511046	Symbol	td -> td		2510825						
ANR	2511047	Symbol	context -> vt_context -> anal -> verbose		2510825						
ANR	2511048	Symbol	* context		2510825						
ANR	2511049	Symbol	td		2510825						
ANR	2511050	Symbol	existing		2510825						
ANR	2511051	Symbol	* * * context		2510825						
ANR	2511052	Symbol	* td		2510825						
ANR	2511053	Symbol	anal		2510825						
ANR	2511054	Symbol	& td -> col -> base_td		2510825						
ANR	2511055	Symbol	name		2510825						
ANR	2511056	Symbol	* context -> vt_context -> anal		2510825						
ANR	2511057	Symbol	context -> vt_context		2510825						
ANR	2511058	Symbol	strdup		2510825						
ANR	2511059	Symbol	* td -> col		2510825						
ANR	2511060	Function	str_value_free	948:0:27951:28004							
ANR	2511061	FunctionDef	str_value_free (HtPPKv * kv)		2511060	0					
ANR	2511062	CompoundStatement		948:32:27983:28004	2511060	0					
ANR	2511063	ExpressionStatement	free ( kv -> value )	949:1:27986:28002	2511060	0	True				
ANR	2511064	CallExpression	free ( kv -> value )		2511060	0					
ANR	2511065	Callee	free		2511060	0					
ANR	2511066	Identifier	free		2511060	0					
ANR	2511067	ArgumentList	kv -> value		2511060	1					
ANR	2511068	Argument	kv -> value		2511060	0					
ANR	2511069	PtrMemberAccess	kv -> value		2511060	0					
ANR	2511070	Identifier	kv		2511060	0					
ANR	2511071	Identifier	value		2511060	1					
ANR	2511072	ReturnType	void		2511060	1					
ANR	2511073	Identifier	str_value_free		2511060	2					
ANR	2511074	ParameterList	HtPPKv * kv		2511060	3					
ANR	2511075	Parameter	HtPPKv * kv	948:20:27971:27980	2511060	0	True				
ANR	2511076	ParameterType	HtPPKv *		2511060	0					
ANR	2511077	Identifier	kv		2511060	1					
ANR	2511078	CFGEntryNode	ENTRY		2511060		True				
ANR	2511079	CFGExitNode	EXIT		2511060		True				
ANR	2511080	Symbol	* kv		2511060						
ANR	2511081	Symbol	kv -> value		2511060						
ANR	2511082	Symbol	kv		2511060						
ANR	2511083	Function	r_anal_rtti_msvc_recover_all	952:0:28007:29596							
ANR	2511084	FunctionDef	"r_anal_rtti_msvc_recover_all (RVTableContext * vt_context , RList * vtables)"		2511083	0					
ANR	2511085	CompoundStatement		952:84:28091:29596	2511083	0					
ANR	2511086	IdentifierDeclStatement	RRTTIMSVCAnalContext context ;	953:1:28094:28122	2511083	0	True				
ANR	2511087	IdentifierDecl	context		2511083	0					
ANR	2511088	IdentifierDeclType	RRTTIMSVCAnalContext		2511083	0					
ANR	2511089	Identifier	context		2511083	1					
ANR	2511090	ExpressionStatement	context . vt_context = vt_context	954:1:28125:28156	2511083	1	True				
ANR	2511091	AssignmentExpression	context . vt_context = vt_context		2511083	0		=			
ANR	2511092	MemberAccess	context . vt_context		2511083	0					
ANR	2511093	Identifier	context		2511083	0					
ANR	2511094	Identifier	vt_context		2511083	1					
ANR	2511095	Identifier	vt_context		2511083	1					
ANR	2511096	ExpressionStatement	"r_pvector_init ( & context . vtables , ( RPVectorFree ) r_anal_vtable_info_free )"	955:1:28159:28231	2511083	2	True				
ANR	2511097	CallExpression	"r_pvector_init ( & context . vtables , ( RPVectorFree ) r_anal_vtable_info_free )"		2511083	0					
ANR	2511098	Callee	r_pvector_init		2511083	0					
ANR	2511099	Identifier	r_pvector_init		2511083	0					
ANR	2511100	ArgumentList	& context . vtables		2511083	1					
ANR	2511101	Argument	& context . vtables		2511083	0					
ANR	2511102	UnaryOperationExpression	& context . vtables		2511083	0					
ANR	2511103	UnaryOperator	&		2511083	0					
ANR	2511104	MemberAccess	context . vtables		2511083	1					
ANR	2511105	Identifier	context		2511083	0					
ANR	2511106	Identifier	vtables		2511083	1					
ANR	2511107	Argument	( RPVectorFree ) r_anal_vtable_info_free		2511083	1					
ANR	2511108	CastExpression	( RPVectorFree ) r_anal_vtable_info_free		2511083	0					
ANR	2511109	CastTarget	RPVectorFree		2511083	0					
ANR	2511110	Identifier	r_anal_vtable_info_free		2511083	1					
ANR	2511111	ExpressionStatement	"r_pvector_init ( & context . complete_object_locators , ( RPVectorFree ) recovery_complete_object_locator_free )"	957:1:28235:28339	2511083	3	True				
ANR	2511112	CallExpression	"r_pvector_init ( & context . complete_object_locators , ( RPVectorFree ) recovery_complete_object_locator_free )"		2511083	0					
ANR	2511113	Callee	r_pvector_init		2511083	0					
ANR	2511114	Identifier	r_pvector_init		2511083	0					
ANR	2511115	ArgumentList	& context . complete_object_locators		2511083	1					
ANR	2511116	Argument	& context . complete_object_locators		2511083	0					
ANR	2511117	UnaryOperationExpression	& context . complete_object_locators		2511083	0					
ANR	2511118	UnaryOperator	&		2511083	0					
ANR	2511119	MemberAccess	context . complete_object_locators		2511083	1					
ANR	2511120	Identifier	context		2511083	0					
ANR	2511121	Identifier	complete_object_locators		2511083	1					
ANR	2511122	Argument	( RPVectorFree ) recovery_complete_object_locator_free		2511083	1					
ANR	2511123	CastExpression	( RPVectorFree ) recovery_complete_object_locator_free		2511083	0					
ANR	2511124	CastTarget	RPVectorFree		2511083	0					
ANR	2511125	Identifier	recovery_complete_object_locator_free		2511083	1					
ANR	2511126	ExpressionStatement	context . addr_col = ht_up_new0 ( )	958:1:28342:28374	2511083	4	True				
ANR	2511127	AssignmentExpression	context . addr_col = ht_up_new0 ( )		2511083	0		=			
ANR	2511128	MemberAccess	context . addr_col		2511083	0					
ANR	2511129	Identifier	context		2511083	0					
ANR	2511130	Identifier	addr_col		2511083	1					
ANR	2511131	CallExpression	ht_up_new0 ( )		2511083	1					
ANR	2511132	Callee	ht_up_new0		2511083	0					
ANR	2511133	Identifier	ht_up_new0		2511083	0					
ANR	2511134	ArgumentList			2511083	1					
ANR	2511135	ExpressionStatement	"r_pvector_init ( & context . type_descriptors , ( RPVectorFree ) recovery_type_descriptor_free )"	959:1:28377:28465	2511083	5	True				
ANR	2511136	CallExpression	"r_pvector_init ( & context . type_descriptors , ( RPVectorFree ) recovery_type_descriptor_free )"		2511083	0					
ANR	2511137	Callee	r_pvector_init		2511083	0					
ANR	2511138	Identifier	r_pvector_init		2511083	0					
ANR	2511139	ArgumentList	& context . type_descriptors		2511083	1					
ANR	2511140	Argument	& context . type_descriptors		2511083	0					
ANR	2511141	UnaryOperationExpression	& context . type_descriptors		2511083	0					
ANR	2511142	UnaryOperator	&		2511083	0					
ANR	2511143	MemberAccess	context . type_descriptors		2511083	1					
ANR	2511144	Identifier	context		2511083	0					
ANR	2511145	Identifier	type_descriptors		2511083	1					
ANR	2511146	Argument	( RPVectorFree ) recovery_type_descriptor_free		2511083	1					
ANR	2511147	CastExpression	( RPVectorFree ) recovery_type_descriptor_free		2511083	0					
ANR	2511148	CastTarget	RPVectorFree		2511083	0					
ANR	2511149	Identifier	recovery_type_descriptor_free		2511083	1					
ANR	2511150	ExpressionStatement	context . addr_td = ht_up_new0 ( )	960:1:28468:28499	2511083	6	True				
ANR	2511151	AssignmentExpression	context . addr_td = ht_up_new0 ( )		2511083	0		=			
ANR	2511152	MemberAccess	context . addr_td		2511083	0					
ANR	2511153	Identifier	context		2511083	0					
ANR	2511154	Identifier	addr_td		2511083	1					
ANR	2511155	CallExpression	ht_up_new0 ( )		2511083	1					
ANR	2511156	Callee	ht_up_new0		2511083	0					
ANR	2511157	Identifier	ht_up_new0		2511083	0					
ANR	2511158	ArgumentList			2511083	1					
ANR	2511159	ExpressionStatement	"context . col_td_classes = ht_up_new ( NULL , ( HtUPKvFreeFunc ) str_value_free , ( HtUPCalcSizeV ) strlen )"	962:1:28503:28599	2511083	7	True				
ANR	2511160	AssignmentExpression	"context . col_td_classes = ht_up_new ( NULL , ( HtUPKvFreeFunc ) str_value_free , ( HtUPCalcSizeV ) strlen )"		2511083	0		=			
ANR	2511161	MemberAccess	context . col_td_classes		2511083	0					
ANR	2511162	Identifier	context		2511083	0					
ANR	2511163	Identifier	col_td_classes		2511083	1					
ANR	2511164	CallExpression	"ht_up_new ( NULL , ( HtUPKvFreeFunc ) str_value_free , ( HtUPCalcSizeV ) strlen )"		2511083	1					
ANR	2511165	Callee	ht_up_new		2511083	0					
ANR	2511166	Identifier	ht_up_new		2511083	0					
ANR	2511167	ArgumentList	NULL		2511083	1					
ANR	2511168	Argument	NULL		2511083	0					
ANR	2511169	Identifier	NULL		2511083	0					
ANR	2511170	Argument	( HtUPKvFreeFunc ) str_value_free		2511083	1					
ANR	2511171	CastExpression	( HtUPKvFreeFunc ) str_value_free		2511083	0					
ANR	2511172	CastTarget	HtUPKvFreeFunc		2511083	0					
ANR	2511173	Identifier	str_value_free		2511083	1					
ANR	2511174	Argument	( HtUPCalcSizeV ) strlen		2511083	2					
ANR	2511175	CastExpression	( HtUPCalcSizeV ) strlen		2511083	0					
ANR	2511176	CastTarget	HtUPCalcSizeV		2511083	0					
ANR	2511177	Identifier	strlen		2511083	1					
ANR	2511178	IdentifierDeclStatement	RListIter * vtableIter ;	964:1:28603:28624	2511083	8	True				
ANR	2511179	IdentifierDecl	* vtableIter		2511083	0					
ANR	2511180	IdentifierDeclType	RListIter *		2511083	0					
ANR	2511181	Identifier	vtableIter		2511083	1					
ANR	2511182	IdentifierDeclStatement	RVTableInfo * table ;	965:1:28627:28645	2511083	9	True				
ANR	2511183	IdentifierDecl	* table		2511083	0					
ANR	2511184	IdentifierDeclType	RVTableInfo *		2511083	0					
ANR	2511185	Identifier	table		2511083	1					
ANR	2511186	Statement	r_list_foreach	966:1:28648:28661	2511083	10	True				
ANR	2511187	Statement	(	966:16:28663:28663	2511083	11	True				
ANR	2511188	Statement	vtables	966:17:28664:28670	2511083	12	True				
ANR	2511189	Statement	","	966:24:28671:28671	2511083	13	True				
ANR	2511190	Statement	vtableIter	966:26:28673:28682	2511083	14	True				
ANR	2511191	Statement	","	966:36:28683:28683	2511083	15	True				
ANR	2511192	Statement	table	966:38:28685:28689	2511083	16	True				
ANR	2511193	Statement	)	966:43:28690:28690	2511083	17	True				
ANR	2511194	CompoundStatement		17:2:662:674	2511083	18					
ANR	2511195	IdentifierDeclStatement	ut64 colRefAddr = table -> saddr - vt_context -> word_size ;	967:2:28696:28750	2511083	0	True				
ANR	2511196	IdentifierDecl	colRefAddr = table -> saddr - vt_context -> word_size		2511083	0					
ANR	2511197	IdentifierDeclType	ut64		2511083	0					
ANR	2511198	Identifier	colRefAddr		2511083	1					
ANR	2511199	AssignmentExpression	colRefAddr = table -> saddr - vt_context -> word_size		2511083	2		=			
ANR	2511200	Identifier	colRefAddr		2511083	0					
ANR	2511201	AdditiveExpression	table -> saddr - vt_context -> word_size		2511083	1		-			
ANR	2511202	PtrMemberAccess	table -> saddr		2511083	0					
ANR	2511203	Identifier	table		2511083	0					
ANR	2511204	Identifier	saddr		2511083	1					
ANR	2511205	PtrMemberAccess	vt_context -> word_size		2511083	1					
ANR	2511206	Identifier	vt_context		2511083	0					
ANR	2511207	Identifier	word_size		2511083	1					
ANR	2511208	IdentifierDeclStatement	ut64 colAddr ;	968:2:28754:28766	2511083	1	True				
ANR	2511209	IdentifierDecl	colAddr		2511083	0					
ANR	2511210	IdentifierDeclType	ut64		2511083	0					
ANR	2511211	Identifier	colAddr		2511083	1					
ANR	2511212	IfStatement	"if ( ! vt_context -> read_addr ( vt_context -> anal , colRefAddr , & colAddr ) )"		2511083	2					
ANR	2511213	Condition	"! vt_context -> read_addr ( vt_context -> anal , colRefAddr , & colAddr )"	969:6:28774:28836	2511083	0	True				
ANR	2511214	UnaryOperationExpression	"! vt_context -> read_addr ( vt_context -> anal , colRefAddr , & colAddr )"		2511083	0					
ANR	2511215	UnaryOperator	!		2511083	0					
ANR	2511216	CallExpression	"vt_context -> read_addr ( vt_context -> anal , colRefAddr , & colAddr )"		2511083	1					
ANR	2511217	Callee	vt_context -> read_addr		2511083	0					
ANR	2511218	PtrMemberAccess	vt_context -> read_addr		2511083	0					
ANR	2511219	Identifier	vt_context		2511083	0					
ANR	2511220	Identifier	read_addr		2511083	1					
ANR	2511221	ArgumentList	vt_context -> anal		2511083	1					
ANR	2511222	Argument	vt_context -> anal		2511083	0					
ANR	2511223	PtrMemberAccess	vt_context -> anal		2511083	0					
ANR	2511224	Identifier	vt_context		2511083	0					
ANR	2511225	Identifier	anal		2511083	1					
ANR	2511226	Argument	colRefAddr		2511083	1					
ANR	2511227	Identifier	colRefAddr		2511083	0					
ANR	2511228	Argument	& colAddr		2511083	2					
ANR	2511229	UnaryOperationExpression	& colAddr		2511083	0					
ANR	2511230	UnaryOperator	&		2511083	0					
ANR	2511231	Identifier	colAddr		2511083	1					
ANR	2511232	CompoundStatement		18:71:747:747	2511083	1					
ANR	2511233	ContinueStatement	continue ;	970:3:28844:28852	2511083	0	True				
ANR	2511234	ExpressionStatement	"recovery_anal_complete_object_locator ( & context , colAddr , table )"	972:2:28860:28924	2511083	3	True				
ANR	2511235	CallExpression	"recovery_anal_complete_object_locator ( & context , colAddr , table )"		2511083	0					
ANR	2511236	Callee	recovery_anal_complete_object_locator		2511083	0					
ANR	2511237	Identifier	recovery_anal_complete_object_locator		2511083	0					
ANR	2511238	ArgumentList	& context		2511083	1					
ANR	2511239	Argument	& context		2511083	0					
ANR	2511240	UnaryOperationExpression	& context		2511083	0					
ANR	2511241	UnaryOperator	&		2511083	0					
ANR	2511242	Identifier	context		2511083	1					
ANR	2511243	Argument	colAddr		2511083	1					
ANR	2511244	Identifier	colAddr		2511083	0					
ANR	2511245	Argument	table		2511083	2					
ANR	2511246	Identifier	table		2511083	0					
ANR	2511247	IdentifierDeclStatement	void * * it ;	975:1:28931:28940	2511083	19	True				
ANR	2511248	IdentifierDecl	* * it		2511083	0					
ANR	2511249	IdentifierDeclType	void * *		2511083	0					
ANR	2511250	Identifier	it		2511083	1					
ANR	2511251	Statement	r_pvector_foreach	977:1:28963:28979	2511083	20	True				
ANR	2511252	Statement	(	977:19:28981:28981	2511083	21	True				
ANR	2511253	Statement	&	977:20:28982:28982	2511083	22	True				
ANR	2511254	Statement	context	977:21:28983:28989	2511083	23	True				
ANR	2511255	Statement	.	977:28:28990:28990	2511083	24	True				
ANR	2511256	Statement	type_descriptors	977:29:28991:29006	2511083	25	True				
ANR	2511257	Statement	","	977:45:29007:29007	2511083	26	True				
ANR	2511258	Statement	it	977:47:29009:29010	2511083	27	True				
ANR	2511259	Statement	)	977:49:29011:29011	2511083	28	True				
ANR	2511260	CompoundStatement		27:2:925:957	2511083	29					
ANR	2511261	IdentifierDeclStatement	RecoveryTypeDescriptor * td = * it ;	978:2:29017:29049	2511083	0	True				
ANR	2511262	IdentifierDecl	* td = * it		2511083	0					
ANR	2511263	IdentifierDeclType	RecoveryTypeDescriptor *		2511083	0					
ANR	2511264	Identifier	td		2511083	1					
ANR	2511265	AssignmentExpression	* td = * it		2511083	2		=			
ANR	2511266	Identifier	td		2511083	0					
ANR	2511267	UnaryOperationExpression	* it		2511083	1					
ANR	2511268	UnaryOperator	*		2511083	0					
ANR	2511269	Identifier	it		2511083	1					
ANR	2511270	IfStatement	if ( ! td -> valid )		2511083	1					
ANR	2511271	Condition	! td -> valid	979:6:29057:29066	2511083	0	True				
ANR	2511272	UnaryOperationExpression	! td -> valid		2511083	0					
ANR	2511273	UnaryOperator	!		2511083	0					
ANR	2511274	PtrMemberAccess	td -> valid		2511083	1					
ANR	2511275	Identifier	td		2511083	0					
ANR	2511276	Identifier	valid		2511083	1					
ANR	2511277	CompoundStatement		28:18:977:977	2511083	1					
ANR	2511278	ContinueStatement	continue ;	980:3:29074:29082	2511083	0	True				
ANR	2511279	ExpressionStatement	"recovery_apply_type_descriptor ( & context , td )"	982:2:29090:29135	2511083	2	True				
ANR	2511280	CallExpression	"recovery_apply_type_descriptor ( & context , td )"		2511083	0					
ANR	2511281	Callee	recovery_apply_type_descriptor		2511083	0					
ANR	2511282	Identifier	recovery_apply_type_descriptor		2511083	0					
ANR	2511283	ArgumentList	& context		2511083	1					
ANR	2511284	Argument	& context		2511083	0					
ANR	2511285	UnaryOperationExpression	& context		2511083	0					
ANR	2511286	UnaryOperator	&		2511083	0					
ANR	2511287	Identifier	context		2511083	1					
ANR	2511288	Argument	td		2511083	1					
ANR	2511289	Identifier	td		2511083	0					
ANR	2511290	ExpressionStatement	r_pvector_clear ( & context . vtables )	994:1:29359:29393	2511083	30	True				
ANR	2511291	CallExpression	r_pvector_clear ( & context . vtables )		2511083	0					
ANR	2511292	Callee	r_pvector_clear		2511083	0					
ANR	2511293	Identifier	r_pvector_clear		2511083	0					
ANR	2511294	ArgumentList	& context . vtables		2511083	1					
ANR	2511295	Argument	& context . vtables		2511083	0					
ANR	2511296	UnaryOperationExpression	& context . vtables		2511083	0					
ANR	2511297	UnaryOperator	&		2511083	0					
ANR	2511298	MemberAccess	context . vtables		2511083	1					
ANR	2511299	Identifier	context		2511083	0					
ANR	2511300	Identifier	vtables		2511083	1					
ANR	2511301	ExpressionStatement	r_pvector_clear ( & context . complete_object_locators )	995:1:29396:29447	2511083	31	True				
ANR	2511302	CallExpression	r_pvector_clear ( & context . complete_object_locators )		2511083	0					
ANR	2511303	Callee	r_pvector_clear		2511083	0					
ANR	2511304	Identifier	r_pvector_clear		2511083	0					
ANR	2511305	ArgumentList	& context . complete_object_locators		2511083	1					
ANR	2511306	Argument	& context . complete_object_locators		2511083	0					
ANR	2511307	UnaryOperationExpression	& context . complete_object_locators		2511083	0					
ANR	2511308	UnaryOperator	&		2511083	0					
ANR	2511309	MemberAccess	context . complete_object_locators		2511083	1					
ANR	2511310	Identifier	context		2511083	0					
ANR	2511311	Identifier	complete_object_locators		2511083	1					
ANR	2511312	ExpressionStatement	ht_up_free ( context . addr_col )	996:1:29450:29479	2511083	32	True				
ANR	2511313	CallExpression	ht_up_free ( context . addr_col )		2511083	0					
ANR	2511314	Callee	ht_up_free		2511083	0					
ANR	2511315	Identifier	ht_up_free		2511083	0					
ANR	2511316	ArgumentList	context . addr_col		2511083	1					
ANR	2511317	Argument	context . addr_col		2511083	0					
ANR	2511318	MemberAccess	context . addr_col		2511083	0					
ANR	2511319	Identifier	context		2511083	0					
ANR	2511320	Identifier	addr_col		2511083	1					
ANR	2511321	ExpressionStatement	r_pvector_clear ( & context . type_descriptors )	997:1:29482:29525	2511083	33	True				
ANR	2511322	CallExpression	r_pvector_clear ( & context . type_descriptors )		2511083	0					
ANR	2511323	Callee	r_pvector_clear		2511083	0					
ANR	2511324	Identifier	r_pvector_clear		2511083	0					
ANR	2511325	ArgumentList	& context . type_descriptors		2511083	1					
ANR	2511326	Argument	& context . type_descriptors		2511083	0					
ANR	2511327	UnaryOperationExpression	& context . type_descriptors		2511083	0					
ANR	2511328	UnaryOperator	&		2511083	0					
ANR	2511329	MemberAccess	context . type_descriptors		2511083	1					
ANR	2511330	Identifier	context		2511083	0					
ANR	2511331	Identifier	type_descriptors		2511083	1					
ANR	2511332	ExpressionStatement	ht_up_free ( context . addr_td )	998:1:29528:29556	2511083	34	True				
ANR	2511333	CallExpression	ht_up_free ( context . addr_td )		2511083	0					
ANR	2511334	Callee	ht_up_free		2511083	0					
ANR	2511335	Identifier	ht_up_free		2511083	0					
ANR	2511336	ArgumentList	context . addr_td		2511083	1					
ANR	2511337	Argument	context . addr_td		2511083	0					
ANR	2511338	MemberAccess	context . addr_td		2511083	0					
ANR	2511339	Identifier	context		2511083	0					
ANR	2511340	Identifier	addr_td		2511083	1					
ANR	2511341	ExpressionStatement	ht_up_free ( context . col_td_classes )	999:1:29559:29594	2511083	35	True				
ANR	2511342	CallExpression	ht_up_free ( context . col_td_classes )		2511083	0					
ANR	2511343	Callee	ht_up_free		2511083	0					
ANR	2511344	Identifier	ht_up_free		2511083	0					
ANR	2511345	ArgumentList	context . col_td_classes		2511083	1					
ANR	2511346	Argument	context . col_td_classes		2511083	0					
ANR	2511347	MemberAccess	context . col_td_classes		2511083	0					
ANR	2511348	Identifier	context		2511083	0					
ANR	2511349	Identifier	col_td_classes		2511083	1					
ANR	2511350	ReturnType	R_API void		2511083	1					
ANR	2511351	Identifier	r_anal_rtti_msvc_recover_all		2511083	2					
ANR	2511352	ParameterList	"RVTableContext * vt_context , RList * vtables"		2511083	3					
ANR	2511353	Parameter	RVTableContext * vt_context	952:40:28047:28072	2511083	0	True				
ANR	2511354	ParameterType	RVTableContext *		2511083	0					
ANR	2511355	Identifier	vt_context		2511083	1					
ANR	2511356	Parameter	RList * vtables	952:68:28075:28088	2511083	1	True				
ANR	2511357	ParameterType	RList *		2511083	0					
ANR	2511358	Identifier	vtables		2511083	1					
ANR	2511359	CFGEntryNode	ENTRY		2511083		True				
ANR	2511360	CFGExitNode	EXIT		2511083		True				
ANR	2511361	CFGErrorNode	ERROR		2511083		True				
ANR	2511362	Symbol	recovery_type_descriptor_free		2511083						
ANR	2511363	Symbol	td -> valid		2511083						
ANR	2511364	Symbol	recovery_complete_object_locator_free		2511083						
ANR	2511365	Symbol	& colAddr		2511083						
ANR	2511366	Symbol	ht_up_new		2511083						
ANR	2511367	Symbol	vt_context		2511083						
ANR	2511368	Symbol	vtables		2511083						
ANR	2511369	Symbol	strlen		2511083						
ANR	2511370	Symbol	colAddr		2511083						
ANR	2511371	Symbol	context . col_td_classes		2511083						
ANR	2511372	Symbol	context		2511083						
ANR	2511373	Symbol	& context . complete_object_locators		2511083						
ANR	2511374	Symbol	vt_context -> anal		2511083						
ANR	2511375	Symbol	table -> saddr		2511083						
ANR	2511376	Symbol	context . addr_td		2511083						
ANR	2511377	Symbol	vtableIter		2511083						
ANR	2511378	Symbol	table		2511083						
ANR	2511379	Symbol	& context . type_descriptors		2511083						
ANR	2511380	Symbol	colRefAddr		2511083						
ANR	2511381	Symbol	NULL		2511083						
ANR	2511382	Symbol	* table		2511083						
ANR	2511383	Symbol	it		2511083						
ANR	2511384	Symbol	ht_up_new0		2511083						
ANR	2511385	Symbol	vt_context -> word_size		2511083						
ANR	2511386	Symbol	& context		2511083						
ANR	2511387	Symbol	context . addr_col		2511083						
ANR	2511388	Symbol	td		2511083						
ANR	2511389	Symbol	& context . vtables		2511083						
ANR	2511390	Symbol	* it		2511083						
ANR	2511391	Symbol	r_anal_vtable_info_free		2511083						
ANR	2511392	Symbol	* td		2511083						
ANR	2511393	Symbol	str_value_free		2511083						
ANR	2511394	Symbol	context . vt_context		2511083						
ANR	2511395	Symbol	* vt_context		2511083						
ANR	2511396	Symbol	vt_context -> read_addr		2511083						
