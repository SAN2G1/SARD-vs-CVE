command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6272338	File	data/converged/CVE-2019-16718~_radare2/sys.c								
ANR	6272339	DeclStmt									
ANR	6272340	Decl							char	char * *	env
ANR	6272341	DeclStmt									
ANR	6272342	Decl							extern char	extern char * * * ( void )	_NSGetEnviron
ANR	6272343	DeclStmt									
ANR	6272344	Decl							int	"int ( int pid , void * buffer , ut32 buffersize )"	proc_pidpath
ANR	6272345	DeclStmt									
ANR	6272346	Decl							extern char	extern char * *	environ
ANR	6272347	ClassDef	<unnamed>	109:13:2228:2940							
ANR	6272348	DeclStmt									
ANR	6272349	Decl							const char	const char *	name
ANR	6272350	DeclStmt									
ANR	6272351	Decl							ut64	ut64	bit
ANR	6272352	DeclStmt									
ANR	6272353	Decl								 [ ]	arch_bit_array
ANR	6272354	Function	r_sys_fork	134:0:2943:3065							
ANR	6272355	FunctionDef	r_sys_fork ()		6272354	0					
ANR	6272356	CompoundStatement		134:23:2966:3065	6272354	0					
ANR	6272357	ReturnStatement	return - 1 ;	137:1:2999:3008	6272354	0	True				
ANR	6272358	UnaryOperationExpression	- 1		6272354	0					
ANR	6272359	UnaryOperator	-		6272354	0					
ANR	6272360	PrimaryExpression	1		6272354	1					
ANR	6272361	ReturnType	R_API int		6272354	1					
ANR	6272362	Identifier	r_sys_fork		6272354	2					
ANR	6272363	ParameterList			6272354	3					
ANR	6272364	CFGEntryNode	ENTRY		6272354		True				
ANR	6272365	CFGExitNode	EXIT		6272354		True				
ANR	6272366	Function	r_sys_exit	146:0:3068:3186							
ANR	6272367	FunctionDef	"r_sys_exit (int status , bool nocleanup)"		6272366	0					
ANR	6272368	CompoundStatement		146:50:3118:3186	6272366	0					
ANR	6272369	IfStatement	if ( nocleanup )		6272366	0					
ANR	6272370	Condition	nocleanup	147:5:3125:3133	6272366	0	True				
ANR	6272371	Identifier	nocleanup		6272366	0					
ANR	6272372	CompoundStatement		2:16:17:17	6272366	1					
ANR	6272373	ExpressionStatement	_exit ( status )	148:2:3140:3154	6272366	0	True				
ANR	6272374	CallExpression	_exit ( status )		6272366	0					
ANR	6272375	Callee	_exit		6272366	0					
ANR	6272376	Identifier	_exit		6272366	0					
ANR	6272377	ArgumentList	status		6272366	1					
ANR	6272378	Argument	status		6272366	0					
ANR	6272379	Identifier	status		6272366	0					
ANR	6272380	ElseStatement	else		6272366	0					
ANR	6272381	CompoundStatement		4:8:45:45	6272366	0					
ANR	6272382	ExpressionStatement	exit ( status )	150:2:3168:3181	6272366	0	True				
ANR	6272383	CallExpression	exit ( status )		6272366	0					
ANR	6272384	Callee	exit		6272366	0					
ANR	6272385	Identifier	exit		6272366	0					
ANR	6272386	ArgumentList	status		6272366	1					
ANR	6272387	Argument	status		6272366	0					
ANR	6272388	Identifier	status		6272366	0					
ANR	6272389	ReturnType	R_API void		6272366	1					
ANR	6272390	Identifier	r_sys_exit		6272366	2					
ANR	6272391	ParameterList	"int status , bool nocleanup"		6272366	3					
ANR	6272392	Parameter	int status	146:22:3090:3099	6272366	0	True				
ANR	6272393	ParameterType	int		6272366	0					
ANR	6272394	Identifier	status		6272366	1					
ANR	6272395	Parameter	bool nocleanup	146:34:3102:3115	6272366	1	True				
ANR	6272396	ParameterType	bool		6272366	0					
ANR	6272397	Identifier	nocleanup		6272366	1					
ANR	6272398	CFGEntryNode	ENTRY		6272366		True				
ANR	6272399	CFGExitNode	EXIT		6272366		True				
ANR	6272400	Symbol	nocleanup		6272366						
ANR	6272401	Symbol	status		6272366						
ANR	6272402	Function	r_sys_now	156:0:3288:3472							
ANR	6272403	FunctionDef	r_sys_now ()		6272402	0					
ANR	6272404	CompoundStatement		156:27:3315:3472	6272402	0					
ANR	6272405	IdentifierDeclStatement	ut64 ret ;	157:1:3318:3326	6272402	0	True				
ANR	6272406	IdentifierDecl	ret		6272402	0					
ANR	6272407	IdentifierDeclType	ut64		6272402	0					
ANR	6272408	Identifier	ret		6272402	1					
ANR	6272409	IdentifierDeclStatement	struct timeval now ;	158:1:3329:3347	6272402	1	True				
ANR	6272410	IdentifierDecl	now		6272402	0					
ANR	6272411	IdentifierDeclType	struct timeval		6272402	0					
ANR	6272412	Identifier	now		6272402	1					
ANR	6272413	ExpressionStatement	"gettimeofday ( & now , NULL )"	159:1:3350:3375	6272402	2	True				
ANR	6272414	CallExpression	"gettimeofday ( & now , NULL )"		6272402	0					
ANR	6272415	Callee	gettimeofday		6272402	0					
ANR	6272416	Identifier	gettimeofday		6272402	0					
ANR	6272417	ArgumentList	& now		6272402	1					
ANR	6272418	Argument	& now		6272402	0					
ANR	6272419	UnaryOperationExpression	& now		6272402	0					
ANR	6272420	UnaryOperator	&		6272402	0					
ANR	6272421	Identifier	now		6272402	1					
ANR	6272422	Argument	NULL		6272402	1					
ANR	6272423	Identifier	NULL		6272402	0					
ANR	6272424	ExpressionStatement	ret = now . tv_sec	160:1:3378:3394	6272402	3	True				
ANR	6272425	AssignmentExpression	ret = now . tv_sec		6272402	0		=			
ANR	6272426	Identifier	ret		6272402	0					
ANR	6272427	MemberAccess	now . tv_sec		6272402	1					
ANR	6272428	Identifier	now		6272402	0					
ANR	6272429	Identifier	tv_sec		6272402	1					
ANR	6272430	ExpressionStatement	ret <<= 20	161:1:3397:3407	6272402	4	True				
ANR	6272431	AssignmentExpression	ret <<= 20		6272402	0		<<=			
ANR	6272432	Identifier	ret		6272402	0					
ANR	6272433	PrimaryExpression	20		6272402	1					
ANR	6272434	ExpressionStatement	ret |= now . tv_usec	162:1:3410:3428	6272402	5	True				
ANR	6272435	AssignmentExpression	ret |= now . tv_usec		6272402	0		|=			
ANR	6272436	Identifier	ret		6272402	0					
ANR	6272437	MemberAccess	now . tv_usec		6272402	1					
ANR	6272438	Identifier	now		6272402	0					
ANR	6272439	Identifier	tv_usec		6272402	1					
ANR	6272440	ReturnStatement	return ret ;	164:1:3460:3470	6272402	6	True				
ANR	6272441	Identifier	ret		6272402	0					
ANR	6272442	ReturnType	R_API ut64		6272402	1					
ANR	6272443	Identifier	r_sys_now		6272402	2					
ANR	6272444	ParameterList			6272402	3					
ANR	6272445	CFGEntryNode	ENTRY		6272402		True				
ANR	6272446	CFGExitNode	EXIT		6272402		True				
ANR	6272447	Symbol	ret		6272402						
ANR	6272448	Symbol	NULL		6272402						
ANR	6272449	Symbol	now		6272402						
ANR	6272450	Symbol	& now		6272402						
ANR	6272451	Symbol	now . tv_sec		6272402						
ANR	6272452	Symbol	now . tv_usec		6272402						
ANR	6272453	Function	r_sys_truncate	167:0:3475:3940							
ANR	6272454	FunctionDef	"r_sys_truncate (const char * file , int sz)"		6272453	0					
ANR	6272455	CompoundStatement		167:51:3526:3940	6272453	0					
ANR	6272456	IdentifierDeclStatement	"int fd = r_sandbox_open ( file , O_RDWR , 0644 ) ;"	169:1:3545:3589	6272453	0	True				
ANR	6272457	IdentifierDecl	"fd = r_sandbox_open ( file , O_RDWR , 0644 )"		6272453	0					
ANR	6272458	IdentifierDeclType	int		6272453	0					
ANR	6272459	Identifier	fd		6272453	1					
ANR	6272460	AssignmentExpression	"fd = r_sandbox_open ( file , O_RDWR , 0644 )"		6272453	2		=			
ANR	6272461	Identifier	fd		6272453	0					
ANR	6272462	CallExpression	"r_sandbox_open ( file , O_RDWR , 0644 )"		6272453	1					
ANR	6272463	Callee	r_sandbox_open		6272453	0					
ANR	6272464	Identifier	r_sandbox_open		6272453	0					
ANR	6272465	ArgumentList	file		6272453	1					
ANR	6272466	Argument	file		6272453	0					
ANR	6272467	Identifier	file		6272453	0					
ANR	6272468	Argument	O_RDWR		6272453	1					
ANR	6272469	Identifier	O_RDWR		6272453	0					
ANR	6272470	Argument	0644		6272453	2					
ANR	6272471	PrimaryExpression	0644		6272453	0					
ANR	6272472	IfStatement	if ( fd == - 1 )		6272453	1					
ANR	6272473	Condition	fd == - 1	170:5:3596:3603	6272453	0	True				
ANR	6272474	EqualityExpression	fd == - 1		6272453	0		==			
ANR	6272475	Identifier	fd		6272453	0					
ANR	6272476	UnaryOperationExpression	- 1		6272453	1					
ANR	6272477	UnaryOperator	-		6272453	0					
ANR	6272478	PrimaryExpression	1		6272453	1					
ANR	6272479	CompoundStatement		4:15:79:79	6272453	1					
ANR	6272480	ReturnStatement	return false ;	171:2:3610:3622	6272453	0	True				
ANR	6272481	Identifier	false		6272453	0					
ANR	6272482	IdentifierDeclStatement	"int r = _chsize ( fd , sz ) ;"	174:1:3644:3668	6272453	2	True				
ANR	6272483	IdentifierDecl	"r = _chsize ( fd , sz )"		6272453	0					
ANR	6272484	IdentifierDeclType	int		6272453	0					
ANR	6272485	Identifier	r		6272453	1					
ANR	6272486	AssignmentExpression	"r = _chsize ( fd , sz )"		6272453	2		=			
ANR	6272487	Identifier	r		6272453	0					
ANR	6272488	CallExpression	"_chsize ( fd , sz )"		6272453	1					
ANR	6272489	Callee	_chsize		6272453	0					
ANR	6272490	Identifier	_chsize		6272453	0					
ANR	6272491	ArgumentList	fd		6272453	1					
ANR	6272492	Argument	fd		6272453	0					
ANR	6272493	Identifier	fd		6272453	0					
ANR	6272494	Argument	sz		6272453	1					
ANR	6272495	Identifier	sz		6272453	0					
ANR	6272496	IfStatement	if ( r != 0 )		6272453	3					
ANR	6272497	Condition	r != 0	178:5:3717:3722	6272453	0	True				
ANR	6272498	EqualityExpression	r != 0		6272453	0		!=			
ANR	6272499	Identifier	r		6272453	0					
ANR	6272500	PrimaryExpression	0		6272453	1					
ANR	6272501	CompoundStatement		12:13:198:198	6272453	1					
ANR	6272502	ExpressionStatement	"eprintf ( ""Could not resize '%s' file\\n"" , file )"	179:2:3729:3775	6272453	0	True				
ANR	6272503	CallExpression	"eprintf ( ""Could not resize '%s' file\\n"" , file )"		6272453	0					
ANR	6272504	Callee	eprintf		6272453	0					
ANR	6272505	Identifier	eprintf		6272453	0					
ANR	6272506	ArgumentList	"""Could not resize '%s' file\\n"""		6272453	1					
ANR	6272507	Argument	"""Could not resize '%s' file\\n"""		6272453	0					
ANR	6272508	PrimaryExpression	"""Could not resize '%s' file\\n"""		6272453	0					
ANR	6272509	Argument	file		6272453	1					
ANR	6272510	Identifier	file		6272453	0					
ANR	6272511	ExpressionStatement	close ( fd )	180:2:3779:3789	6272453	1	True				
ANR	6272512	CallExpression	close ( fd )		6272453	0					
ANR	6272513	Callee	close		6272453	0					
ANR	6272514	Identifier	close		6272453	0					
ANR	6272515	ArgumentList	fd		6272453	1					
ANR	6272516	Argument	fd		6272453	0					
ANR	6272517	Identifier	fd		6272453	0					
ANR	6272518	ReturnStatement	return false ;	181:2:3793:3805	6272453	2	True				
ANR	6272519	Identifier	false		6272453	0					
ANR	6272520	ExpressionStatement	close ( fd )	183:1:3811:3821	6272453	4	True				
ANR	6272521	CallExpression	close ( fd )		6272453	0					
ANR	6272522	Callee	close		6272453	0					
ANR	6272523	Identifier	close		6272453	0					
ANR	6272524	ArgumentList	fd		6272453	1					
ANR	6272525	Argument	fd		6272453	0					
ANR	6272526	Identifier	fd		6272453	0					
ANR	6272527	ReturnStatement	return true ;	184:1:3824:3835	6272453	5	True				
ANR	6272528	Identifier	true		6272453	0					
ANR	6272529	ReturnType	R_API int		6272453	1					
ANR	6272530	Identifier	r_sys_truncate		6272453	2					
ANR	6272531	ParameterList	"const char * file , int sz"		6272453	3					
ANR	6272532	Parameter	const char * file	167:25:3500:3515	6272453	0	True				
ANR	6272533	ParameterType	const char *		6272453	0					
ANR	6272534	Identifier	file		6272453	1					
ANR	6272535	Parameter	int sz	167:43:3518:3523	6272453	1	True				
ANR	6272536	ParameterType	int		6272453	0					
ANR	6272537	Identifier	sz		6272453	1					
ANR	6272538	CFGEntryNode	ENTRY		6272453		True				
ANR	6272539	CFGExitNode	EXIT		6272453		True				
ANR	6272540	Symbol	r_sandbox_open		6272453						
ANR	6272541	Symbol	O_RDWR		6272453						
ANR	6272542	Symbol	r		6272453						
ANR	6272543	Symbol	file		6272453						
ANR	6272544	Symbol	sz		6272453						
ANR	6272545	Symbol	false		6272453						
ANR	6272546	Symbol	true		6272453						
ANR	6272547	Symbol	_chsize		6272453						
ANR	6272548	Symbol	fd		6272453						
ANR	6272549	Function	r_sys_get_osinfo	193:0:3943:4613							
ANR	6272550	FunctionDef	r_sys_get_osinfo ()		6272549	0					
ANR	6272551	CompoundStatement		193:34:3977:4613	6272549	0					
ANR	6272552	ReturnStatement	return r_sys_get_winver ( ) ;	195:1:3996:4021	6272549	0	True				
ANR	6272553	CallExpression	r_sys_get_winver ( )		6272549	0					
ANR	6272554	Callee	r_sys_get_winver		6272549	0					
ANR	6272555	Identifier	r_sys_get_winver		6272549	0					
ANR	6272556	ArgumentList			6272549	1					
ANR	6272557	IdentifierDeclStatement	"os_info * info = calloc ( 1 , sizeof ( os_info ) ) ;"	197:1:4031:4075	6272549	1	True				
ANR	6272558	IdentifierDecl	"* info = calloc ( 1 , sizeof ( os_info ) )"		6272549	0					
ANR	6272559	IdentifierDeclType	os_info *		6272549	0					
ANR	6272560	Identifier	info		6272549	1					
ANR	6272561	AssignmentExpression	"* info = calloc ( 1 , sizeof ( os_info ) )"		6272549	2		=			
ANR	6272562	Identifier	info		6272549	0					
ANR	6272563	CallExpression	"calloc ( 1 , sizeof ( os_info ) )"		6272549	1					
ANR	6272564	Callee	calloc		6272549	0					
ANR	6272565	Identifier	calloc		6272549	0					
ANR	6272566	ArgumentList	1		6272549	1					
ANR	6272567	Argument	1		6272549	0					
ANR	6272568	PrimaryExpression	1		6272549	0					
ANR	6272569	Argument	sizeof ( os_info )		6272549	1					
ANR	6272570	SizeofExpression	sizeof ( os_info )		6272549	0					
ANR	6272571	Sizeof	sizeof		6272549	0					
ANR	6272572	SizeofOperand	os_info		6272549	1					
ANR	6272573	IfStatement	if ( ! info )		6272549	2					
ANR	6272574	Condition	! info	198:5:4082:4086	6272549	0	True				
ANR	6272575	UnaryOperationExpression	! info		6272549	0					
ANR	6272576	UnaryOperator	!		6272549	0					
ANR	6272577	Identifier	info		6272549	1					
ANR	6272578	CompoundStatement		6:12:111:111	6272549	1					
ANR	6272579	ReturnStatement	return NULL ;	199:2:4093:4104	6272549	0	True				
ANR	6272580	Identifier	NULL		6272549	0					
ANR	6272581	IdentifierDeclStatement	int len = 0 ;	201:1:4110:4121	6272549	3	True				
ANR	6272582	IdentifierDecl	len = 0		6272549	0					
ANR	6272583	IdentifierDeclType	int		6272549	0					
ANR	6272584	Identifier	len		6272549	1					
ANR	6272585	AssignmentExpression	len = 0		6272549	2		=			
ANR	6272586	Identifier	len		6272549	0					
ANR	6272587	PrimaryExpression	0		6272549	1					
ANR	6272588	IdentifierDeclStatement	"char * output = r_sys_cmd_str ( ""uname -s"" , NULL , & len ) ;"	202:1:4124:4177	6272549	4	True				
ANR	6272589	IdentifierDecl	"* output = r_sys_cmd_str ( ""uname -s"" , NULL , & len )"		6272549	0					
ANR	6272590	IdentifierDeclType	char *		6272549	0					
ANR	6272591	Identifier	output		6272549	1					
ANR	6272592	AssignmentExpression	"* output = r_sys_cmd_str ( ""uname -s"" , NULL , & len )"		6272549	2		=			
ANR	6272593	Identifier	output		6272549	0					
ANR	6272594	CallExpression	"r_sys_cmd_str ( ""uname -s"" , NULL , & len )"		6272549	1					
ANR	6272595	Callee	r_sys_cmd_str		6272549	0					
ANR	6272596	Identifier	r_sys_cmd_str		6272549	0					
ANR	6272597	ArgumentList	"""uname -s"""		6272549	1					
ANR	6272598	Argument	"""uname -s"""		6272549	0					
ANR	6272599	PrimaryExpression	"""uname -s"""		6272549	0					
ANR	6272600	Argument	NULL		6272549	1					
ANR	6272601	Identifier	NULL		6272549	0					
ANR	6272602	Argument	& len		6272549	2					
ANR	6272603	UnaryOperationExpression	& len		6272549	0					
ANR	6272604	UnaryOperator	&		6272549	0					
ANR	6272605	Identifier	len		6272549	1					
ANR	6272606	IfStatement	if ( len )		6272549	5					
ANR	6272607	Condition	len	203:5:4184:4186	6272549	0	True				
ANR	6272608	Identifier	len		6272549	0					
ANR	6272609	CompoundStatement		11:10:211:211	6272549	1					
ANR	6272610	ExpressionStatement	"strncpy ( info -> name , output , sizeof ( info -> name ) )"	204:2:4193:4242	6272549	0	True				
ANR	6272611	CallExpression	"strncpy ( info -> name , output , sizeof ( info -> name ) )"		6272549	0					
ANR	6272612	Callee	strncpy		6272549	0					
ANR	6272613	Identifier	strncpy		6272549	0					
ANR	6272614	ArgumentList	info -> name		6272549	1					
ANR	6272615	Argument	info -> name		6272549	0					
ANR	6272616	PtrMemberAccess	info -> name		6272549	0					
ANR	6272617	Identifier	info		6272549	0					
ANR	6272618	Identifier	name		6272549	1					
ANR	6272619	Argument	output		6272549	1					
ANR	6272620	Identifier	output		6272549	0					
ANR	6272621	Argument	sizeof ( info -> name )		6272549	2					
ANR	6272622	SizeofExpression	sizeof ( info -> name )		6272549	0					
ANR	6272623	Sizeof	sizeof		6272549	0					
ANR	6272624	PtrMemberAccess	info -> name		6272549	1					
ANR	6272625	Identifier	info		6272549	0					
ANR	6272626	Identifier	name		6272549	1					
ANR	6272627	ExpressionStatement	info -> name [ 31 ] = '\\0'	205:2:4246:4267	6272549	1	True				
ANR	6272628	AssignmentExpression	info -> name [ 31 ] = '\\0'		6272549	0		=			
ANR	6272629	ArrayIndexing	info -> name [ 31 ]		6272549	0					
ANR	6272630	PtrMemberAccess	info -> name		6272549	0					
ANR	6272631	Identifier	info		6272549	0					
ANR	6272632	Identifier	name		6272549	1					
ANR	6272633	PrimaryExpression	31		6272549	1					
ANR	6272634	PrimaryExpression	'\\0'		6272549	1					
ANR	6272635	ExpressionStatement	free ( output )	207:1:4273:4286	6272549	6	True				
ANR	6272636	CallExpression	free ( output )		6272549	0					
ANR	6272637	Callee	free		6272549	0					
ANR	6272638	Identifier	free		6272549	0					
ANR	6272639	ArgumentList	output		6272549	1					
ANR	6272640	Argument	output		6272549	0					
ANR	6272641	Identifier	output		6272549	0					
ANR	6272642	ExpressionStatement	"output = r_sys_cmd_str ( ""uname -r"" , NULL , & len )"	208:1:4289:4336	6272549	7	True				
ANR	6272643	AssignmentExpression	"output = r_sys_cmd_str ( ""uname -r"" , NULL , & len )"		6272549	0		=			
ANR	6272644	Identifier	output		6272549	0					
ANR	6272645	CallExpression	"r_sys_cmd_str ( ""uname -r"" , NULL , & len )"		6272549	1					
ANR	6272646	Callee	r_sys_cmd_str		6272549	0					
ANR	6272647	Identifier	r_sys_cmd_str		6272549	0					
ANR	6272648	ArgumentList	"""uname -r"""		6272549	1					
ANR	6272649	Argument	"""uname -r"""		6272549	0					
ANR	6272650	PrimaryExpression	"""uname -r"""		6272549	0					
ANR	6272651	Argument	NULL		6272549	1					
ANR	6272652	Identifier	NULL		6272549	0					
ANR	6272653	Argument	& len		6272549	2					
ANR	6272654	UnaryOperationExpression	& len		6272549	0					
ANR	6272655	UnaryOperator	&		6272549	0					
ANR	6272656	Identifier	len		6272549	1					
ANR	6272657	IfStatement	if ( len )		6272549	8					
ANR	6272658	Condition	len	209:5:4343:4345	6272549	0	True				
ANR	6272659	Identifier	len		6272549	0					
ANR	6272660	CompoundStatement		18:2:374:406	6272549	1					
ANR	6272661	IdentifierDeclStatement	"char * dot = strtok ( output , ""."" ) ;"	210:2:4352:4384	6272549	0	True				
ANR	6272662	IdentifierDecl	"* dot = strtok ( output , ""."" )"		6272549	0					
ANR	6272663	IdentifierDeclType	char *		6272549	0					
ANR	6272664	Identifier	dot		6272549	1					
ANR	6272665	AssignmentExpression	"* dot = strtok ( output , ""."" )"		6272549	2		=			
ANR	6272666	Identifier	dot		6272549	0					
ANR	6272667	CallExpression	"strtok ( output , ""."" )"		6272549	1					
ANR	6272668	Callee	strtok		6272549	0					
ANR	6272669	Identifier	strtok		6272549	0					
ANR	6272670	ArgumentList	output		6272549	1					
ANR	6272671	Argument	output		6272549	0					
ANR	6272672	Identifier	output		6272549	0					
ANR	6272673	Argument	"""."""		6272549	1					
ANR	6272674	PrimaryExpression	"""."""		6272549	0					
ANR	6272675	IfStatement	if ( dot )		6272549	1					
ANR	6272676	Condition	dot	211:6:4392:4394	6272549	0	True				
ANR	6272677	Identifier	dot		6272549	0					
ANR	6272678	CompoundStatement		19:11:419:419	6272549	1					
ANR	6272679	ExpressionStatement	info -> major = atoi ( dot )	212:3:4402:4426	6272549	0	True				
ANR	6272680	AssignmentExpression	info -> major = atoi ( dot )		6272549	0		=			
ANR	6272681	PtrMemberAccess	info -> major		6272549	0					
ANR	6272682	Identifier	info		6272549	0					
ANR	6272683	Identifier	major		6272549	1					
ANR	6272684	CallExpression	atoi ( dot )		6272549	1					
ANR	6272685	Callee	atoi		6272549	0					
ANR	6272686	Identifier	atoi		6272549	0					
ANR	6272687	ArgumentList	dot		6272549	1					
ANR	6272688	Argument	dot		6272549	0					
ANR	6272689	Identifier	dot		6272549	0					
ANR	6272690	ExpressionStatement	"dot = strtok ( NULL , ""."" )"	214:2:4434:4458	6272549	2	True				
ANR	6272691	AssignmentExpression	"dot = strtok ( NULL , ""."" )"		6272549	0		=			
ANR	6272692	Identifier	dot		6272549	0					
ANR	6272693	CallExpression	"strtok ( NULL , ""."" )"		6272549	1					
ANR	6272694	Callee	strtok		6272549	0					
ANR	6272695	Identifier	strtok		6272549	0					
ANR	6272696	ArgumentList	NULL		6272549	1					
ANR	6272697	Argument	NULL		6272549	0					
ANR	6272698	Identifier	NULL		6272549	0					
ANR	6272699	Argument	"""."""		6272549	1					
ANR	6272700	PrimaryExpression	"""."""		6272549	0					
ANR	6272701	IfStatement	if ( dot )		6272549	3					
ANR	6272702	Condition	dot	215:6:4466:4468	6272549	0	True				
ANR	6272703	Identifier	dot		6272549	0					
ANR	6272704	CompoundStatement		23:11:493:493	6272549	1					
ANR	6272705	ExpressionStatement	info -> minor = atoi ( dot )	216:3:4476:4500	6272549	0	True				
ANR	6272706	AssignmentExpression	info -> minor = atoi ( dot )		6272549	0		=			
ANR	6272707	PtrMemberAccess	info -> minor		6272549	0					
ANR	6272708	Identifier	info		6272549	0					
ANR	6272709	Identifier	minor		6272549	1					
ANR	6272710	CallExpression	atoi ( dot )		6272549	1					
ANR	6272711	Callee	atoi		6272549	0					
ANR	6272712	Identifier	atoi		6272549	0					
ANR	6272713	ArgumentList	dot		6272549	1					
ANR	6272714	Argument	dot		6272549	0					
ANR	6272715	Identifier	dot		6272549	0					
ANR	6272716	ExpressionStatement	"dot = strtok ( NULL , ""."" )"	218:2:4508:4532	6272549	4	True				
ANR	6272717	AssignmentExpression	"dot = strtok ( NULL , ""."" )"		6272549	0		=			
ANR	6272718	Identifier	dot		6272549	0					
ANR	6272719	CallExpression	"strtok ( NULL , ""."" )"		6272549	1					
ANR	6272720	Callee	strtok		6272549	0					
ANR	6272721	Identifier	strtok		6272549	0					
ANR	6272722	ArgumentList	NULL		6272549	1					
ANR	6272723	Argument	NULL		6272549	0					
ANR	6272724	Identifier	NULL		6272549	0					
ANR	6272725	Argument	"""."""		6272549	1					
ANR	6272726	PrimaryExpression	"""."""		6272549	0					
ANR	6272727	IfStatement	if ( dot )		6272549	5					
ANR	6272728	Condition	dot	219:6:4540:4542	6272549	0	True				
ANR	6272729	Identifier	dot		6272549	0					
ANR	6272730	CompoundStatement		27:11:567:567	6272549	1					
ANR	6272731	ExpressionStatement	info -> patch = atoi ( dot )	220:3:4550:4574	6272549	0	True				
ANR	6272732	AssignmentExpression	info -> patch = atoi ( dot )		6272549	0		=			
ANR	6272733	PtrMemberAccess	info -> patch		6272549	0					
ANR	6272734	Identifier	info		6272549	0					
ANR	6272735	Identifier	patch		6272549	1					
ANR	6272736	CallExpression	atoi ( dot )		6272549	1					
ANR	6272737	Callee	atoi		6272549	0					
ANR	6272738	Identifier	atoi		6272549	0					
ANR	6272739	ArgumentList	dot		6272549	1					
ANR	6272740	Argument	dot		6272549	0					
ANR	6272741	Identifier	dot		6272549	0					
ANR	6272742	ExpressionStatement	free ( output )	223:1:4584:4597	6272549	9	True				
ANR	6272743	CallExpression	free ( output )		6272549	0					
ANR	6272744	Callee	free		6272549	0					
ANR	6272745	Identifier	free		6272549	0					
ANR	6272746	ArgumentList	output		6272549	1					
ANR	6272747	Argument	output		6272549	0					
ANR	6272748	Identifier	output		6272549	0					
ANR	6272749	ReturnStatement	return info ;	224:1:4600:4611	6272549	10	True				
ANR	6272750	Identifier	info		6272549	0					
ANR	6272751	ReturnType	R_API os_info *		6272549	1					
ANR	6272752	Identifier	r_sys_get_osinfo		6272549	2					
ANR	6272753	ParameterList			6272549	3					
ANR	6272754	CFGEntryNode	ENTRY		6272549		True				
ANR	6272755	CFGExitNode	EXIT		6272549		True				
ANR	6272756	Symbol	atoi		6272549						
ANR	6272757	Symbol	r_sys_get_winver		6272549						
ANR	6272758	Symbol	* * info		6272549						
ANR	6272759	Symbol	NULL		6272549						
ANR	6272760	Symbol	info -> minor		6272549						
ANR	6272761	Symbol	dot		6272549						
ANR	6272762	Symbol	info -> patch		6272549						
ANR	6272763	Symbol	strtok		6272549						
ANR	6272764	Symbol	calloc		6272549						
ANR	6272765	Symbol	* info -> name		6272549						
ANR	6272766	Symbol	info -> major		6272549						
ANR	6272767	Symbol	output		6272549						
ANR	6272768	Symbol	r_sys_cmd_str		6272549						
ANR	6272769	Symbol	len		6272549						
ANR	6272770	Symbol	info -> name		6272549						
ANR	6272771	Symbol	* info		6272549						
ANR	6272772	Symbol	& len		6272549						
ANR	6272773	Symbol	info		6272549						
ANR	6272774	Function	r_sys_dir	227:0:4616:5403							
ANR	6272775	FunctionDef	r_sys_dir (const char * path)		6272774	0					
ANR	6272776	CompoundStatement		227:41:4657:5403	6272774	0					
ANR	6272777	IdentifierDeclStatement	RList * list = NULL ;	228:1:4660:4678	6272774	0	True				
ANR	6272778	IdentifierDecl	* list = NULL		6272774	0					
ANR	6272779	IdentifierDeclType	RList *		6272774	0					
ANR	6272780	Identifier	list		6272774	1					
ANR	6272781	AssignmentExpression	* list = NULL		6272774	2		=			
ANR	6272782	Identifier	NULL		6272774	0					
ANR	6272783	Identifier	NULL		6272774	1					
ANR	6272784	IdentifierDeclStatement	WIN32_FIND_DATAW entry ;	230:1:4697:4719	6272774	1	True				
ANR	6272785	IdentifierDecl	entry		6272774	0					
ANR	6272786	IdentifierDeclType	WIN32_FIND_DATAW		6272774	0					
ANR	6272787	Identifier	entry		6272774	1					
ANR	6272788	IdentifierDeclStatement	char * cfname ;	231:1:4722:4734	6272774	2	True				
ANR	6272789	IdentifierDecl	* cfname		6272774	0					
ANR	6272790	IdentifierDeclType	char *		6272774	0					
ANR	6272791	Identifier	cfname		6272774	1					
ANR	6272792	IdentifierDeclStatement	"HANDLE fh = r_sandbox_opendir ( path , & entry ) ;"	232:1:4737:4781	6272774	3	True				
ANR	6272793	IdentifierDecl	"fh = r_sandbox_opendir ( path , & entry )"		6272774	0					
ANR	6272794	IdentifierDeclType	HANDLE		6272774	0					
ANR	6272795	Identifier	fh		6272774	1					
ANR	6272796	AssignmentExpression	"fh = r_sandbox_opendir ( path , & entry )"		6272774	2		=			
ANR	6272797	Identifier	fh		6272774	0					
ANR	6272798	CallExpression	"r_sandbox_opendir ( path , & entry )"		6272774	1					
ANR	6272799	Callee	r_sandbox_opendir		6272774	0					
ANR	6272800	Identifier	r_sandbox_opendir		6272774	0					
ANR	6272801	ArgumentList	path		6272774	1					
ANR	6272802	Argument	path		6272774	0					
ANR	6272803	Identifier	path		6272774	0					
ANR	6272804	Argument	& entry		6272774	1					
ANR	6272805	UnaryOperationExpression	& entry		6272774	0					
ANR	6272806	UnaryOperator	&		6272774	0					
ANR	6272807	Identifier	entry		6272774	1					
ANR	6272808	IfStatement	if ( fh == INVALID_HANDLE_VALUE )		6272774	4					
ANR	6272809	Condition	fh == INVALID_HANDLE_VALUE	233:5:4788:4813	6272774	0	True				
ANR	6272810	EqualityExpression	fh == INVALID_HANDLE_VALUE		6272774	0		==			
ANR	6272811	Identifier	fh		6272774	0					
ANR	6272812	Identifier	INVALID_HANDLE_VALUE		6272774	1					
ANR	6272813	CompoundStatement		7:33:158:158	6272774	1					
ANR	6272814	ReturnStatement	return list ;	235:2:4879:4890	6272774	0	True				
ANR	6272815	Identifier	list		6272774	0					
ANR	6272816	ExpressionStatement	list = r_list_newf ( free )	237:1:4896:4921	6272774	5	True				
ANR	6272817	AssignmentExpression	list = r_list_newf ( free )		6272774	0		=			
ANR	6272818	Identifier	list		6272774	0					
ANR	6272819	CallExpression	r_list_newf ( free )		6272774	1					
ANR	6272820	Callee	r_list_newf		6272774	0					
ANR	6272821	Identifier	r_list_newf		6272774	0					
ANR	6272822	ArgumentList	free		6272774	1					
ANR	6272823	Argument	free		6272774	0					
ANR	6272824	Identifier	free		6272774	0					
ANR	6272825	IfStatement	if ( list )		6272774	6					
ANR	6272826	Condition	list	238:5:4928:4931	6272774	0	True				
ANR	6272827	Identifier	list		6272774	0					
ANR	6272828	CompoundStatement		12:11:276:276	6272774	1					
ANR	6272829	DoStatement	do		6272774	0					
ANR	6272830	CompoundStatement		13:5:283:283	6272774	0					
ANR	6272831	IfStatement	if ( ( cfname = r_utf16_to_utf8 ( entry . cFileName ) ) )		6272774	0					
ANR	6272832	Condition	cfname = r_utf16_to_utf8 ( entry . cFileName )	240:7:4950:4993	6272774	0	True				
ANR	6272833	AssignmentExpression	cfname = r_utf16_to_utf8 ( entry . cFileName )		6272774	0		=			
ANR	6272834	Identifier	cfname		6272774	0					
ANR	6272835	CallExpression	r_utf16_to_utf8 ( entry . cFileName )		6272774	1					
ANR	6272836	Callee	r_utf16_to_utf8		6272774	0					
ANR	6272837	Identifier	r_utf16_to_utf8		6272774	0					
ANR	6272838	ArgumentList	entry . cFileName		6272774	1					
ANR	6272839	Argument	entry . cFileName		6272774	0					
ANR	6272840	MemberAccess	entry . cFileName		6272774	0					
ANR	6272841	Identifier	entry		6272774	0					
ANR	6272842	Identifier	cFileName		6272774	1					
ANR	6272843	CompoundStatement		14:53:338:338	6272774	1					
ANR	6272844	ExpressionStatement	"r_list_append ( list , strdup ( cfname ) )"	241:4:5002:5039	6272774	0	True				
ANR	6272845	CallExpression	"r_list_append ( list , strdup ( cfname ) )"		6272774	0					
ANR	6272846	Callee	r_list_append		6272774	0					
ANR	6272847	Identifier	r_list_append		6272774	0					
ANR	6272848	ArgumentList	list		6272774	1					
ANR	6272849	Argument	list		6272774	0					
ANR	6272850	Identifier	list		6272774	0					
ANR	6272851	Argument	strdup ( cfname )		6272774	1					
ANR	6272852	CallExpression	strdup ( cfname )		6272774	0					
ANR	6272853	Callee	strdup		6272774	0					
ANR	6272854	Identifier	strdup		6272774	0					
ANR	6272855	ArgumentList	cfname		6272774	1					
ANR	6272856	Argument	cfname		6272774	0					
ANR	6272857	Identifier	cfname		6272774	0					
ANR	6272858	ExpressionStatement	free ( cfname )	242:4:5045:5058	6272774	1	True				
ANR	6272859	CallExpression	free ( cfname )		6272774	0					
ANR	6272860	Callee	free		6272774	0					
ANR	6272861	Identifier	free		6272774	0					
ANR	6272862	ArgumentList	cfname		6272774	1					
ANR	6272863	Argument	cfname		6272774	0					
ANR	6272864	Identifier	cfname		6272774	0					
ANR	6272865	Condition	"FindNextFileW ( fh , & entry )"	244:11:5076:5101	6272774	1	True				
ANR	6272866	CallExpression	"FindNextFileW ( fh , & entry )"		6272774	0					
ANR	6272867	Callee	FindNextFileW		6272774	0					
ANR	6272868	Identifier	FindNextFileW		6272774	0					
ANR	6272869	ArgumentList	fh		6272774	1					
ANR	6272870	Argument	fh		6272774	0					
ANR	6272871	Identifier	fh		6272774	0					
ANR	6272872	Argument	& entry		6272774	1					
ANR	6272873	UnaryOperationExpression	& entry		6272774	0					
ANR	6272874	UnaryOperator	&		6272774	0					
ANR	6272875	Identifier	entry		6272774	1					
ANR	6272876	ExpressionStatement	FindClose ( fh )	246:1:5109:5123	6272774	7	True				
ANR	6272877	CallExpression	FindClose ( fh )		6272774	0					
ANR	6272878	Callee	FindClose		6272774	0					
ANR	6272879	Identifier	FindClose		6272774	0					
ANR	6272880	ArgumentList	fh		6272774	1					
ANR	6272881	Argument	fh		6272774	0					
ANR	6272882	Identifier	fh		6272774	0					
ANR	6272883	ReturnStatement	return list ;	261:1:5390:5401	6272774	8	True				
ANR	6272884	Identifier	list		6272774	0					
ANR	6272885	ReturnType	R_API RList *		6272774	1					
ANR	6272886	Identifier	r_sys_dir		6272774	2					
ANR	6272887	ParameterList	const char * path		6272774	3					
ANR	6272888	Parameter	const char * path	227:23:4639:4654	6272774	0	True				
ANR	6272889	ParameterType	const char *		6272774	0					
ANR	6272890	Identifier	path		6272774	1					
ANR	6272891	CFGEntryNode	ENTRY		6272774		True				
ANR	6272892	CFGExitNode	EXIT		6272774		True				
ANR	6272893	Symbol	fh		6272774						
ANR	6272894	Symbol	NULL		6272774						
ANR	6272895	Symbol	r_list_newf		6272774						
ANR	6272896	Symbol	r_utf16_to_utf8		6272774						
ANR	6272897	Symbol	entry . cFileName		6272774						
ANR	6272898	Symbol	list		6272774						
ANR	6272899	Symbol	INVALID_HANDLE_VALUE		6272774						
ANR	6272900	Symbol	cfname		6272774						
ANR	6272901	Symbol	FindNextFileW		6272774						
ANR	6272902	Symbol	path		6272774						
ANR	6272903	Symbol	entry		6272774						
ANR	6272904	Symbol	r_sandbox_opendir		6272774						
ANR	6272905	Symbol	& entry		6272774						
ANR	6272906	Symbol	strdup		6272774						
ANR	6272907	Symbol	free		6272774						
ANR	6272908	Function	r_sys_cmd_strf	264:0:5406:5622							
ANR	6272909	FunctionDef	r_sys_cmd_strf (const char * fmt)		6272908	0					
ANR	6272910	CompoundStatement		264:49:5455:5622	6272908	0					
ANR	6272911	IdentifierDeclStatement	"char * ret , cmd [ 4096 ] ;"	265:1:5458:5478	6272908	0	True				
ANR	6272912	IdentifierDecl	* ret		6272908	0					
ANR	6272913	IdentifierDeclType	char *		6272908	0					
ANR	6272914	Identifier	ret		6272908	1					
ANR	6272915	IdentifierDecl	cmd [ 4096 ]		6272908	1					
ANR	6272916	IdentifierDeclType	char [ 4096 ]		6272908	0					
ANR	6272917	Identifier	cmd		6272908	1					
ANR	6272918	PrimaryExpression	4096		6272908	2					
ANR	6272919	IdentifierDeclStatement	va_list ap ;	266:1:5481:5491	6272908	1	True				
ANR	6272920	IdentifierDecl	ap		6272908	0					
ANR	6272921	IdentifierDeclType	va_list		6272908	0					
ANR	6272922	Identifier	ap		6272908	1					
ANR	6272923	ExpressionStatement	"va_start ( ap , fmt )"	267:1:5494:5512	6272908	2	True				
ANR	6272924	CallExpression	"va_start ( ap , fmt )"		6272908	0					
ANR	6272925	Callee	va_start		6272908	0					
ANR	6272926	Identifier	va_start		6272908	0					
ANR	6272927	ArgumentList	ap		6272908	1					
ANR	6272928	Argument	ap		6272908	0					
ANR	6272929	Identifier	ap		6272908	0					
ANR	6272930	Argument	fmt		6272908	1					
ANR	6272931	Identifier	fmt		6272908	0					
ANR	6272932	ExpressionStatement	"vsnprintf ( cmd , sizeof ( cmd ) , fmt , ap )"	268:1:5515:5553	6272908	3	True				
ANR	6272933	CallExpression	"vsnprintf ( cmd , sizeof ( cmd ) , fmt , ap )"		6272908	0					
ANR	6272934	Callee	vsnprintf		6272908	0					
ANR	6272935	Identifier	vsnprintf		6272908	0					
ANR	6272936	ArgumentList	cmd		6272908	1					
ANR	6272937	Argument	cmd		6272908	0					
ANR	6272938	Identifier	cmd		6272908	0					
ANR	6272939	Argument	sizeof ( cmd )		6272908	1					
ANR	6272940	SizeofExpression	sizeof ( cmd )		6272908	0					
ANR	6272941	Sizeof	sizeof		6272908	0					
ANR	6272942	SizeofOperand	cmd		6272908	1					
ANR	6272943	Argument	fmt		6272908	2					
ANR	6272944	Identifier	fmt		6272908	0					
ANR	6272945	Argument	ap		6272908	3					
ANR	6272946	Identifier	ap		6272908	0					
ANR	6272947	ExpressionStatement	"ret = r_sys_cmd_str ( cmd , NULL , NULL )"	269:1:5556:5593	6272908	4	True				
ANR	6272948	AssignmentExpression	"ret = r_sys_cmd_str ( cmd , NULL , NULL )"		6272908	0		=			
ANR	6272949	Identifier	ret		6272908	0					
ANR	6272950	CallExpression	"r_sys_cmd_str ( cmd , NULL , NULL )"		6272908	1					
ANR	6272951	Callee	r_sys_cmd_str		6272908	0					
ANR	6272952	Identifier	r_sys_cmd_str		6272908	0					
ANR	6272953	ArgumentList	cmd		6272908	1					
ANR	6272954	Argument	cmd		6272908	0					
ANR	6272955	Identifier	cmd		6272908	0					
ANR	6272956	Argument	NULL		6272908	1					
ANR	6272957	Identifier	NULL		6272908	0					
ANR	6272958	Argument	NULL		6272908	2					
ANR	6272959	Identifier	NULL		6272908	0					
ANR	6272960	ExpressionStatement	va_end ( ap )	270:1:5596:5607	6272908	5	True				
ANR	6272961	CallExpression	va_end ( ap )		6272908	0					
ANR	6272962	Callee	va_end		6272908	0					
ANR	6272963	Identifier	va_end		6272908	0					
ANR	6272964	ArgumentList	ap		6272908	1					
ANR	6272965	Argument	ap		6272908	0					
ANR	6272966	Identifier	ap		6272908	0					
ANR	6272967	ReturnStatement	return ret ;	271:1:5610:5620	6272908	6	True				
ANR	6272968	Identifier	ret		6272908	0					
ANR	6272969	ReturnType	R_API char *		6272908	1					
ANR	6272970	Identifier	r_sys_cmd_strf		6272908	2					
ANR	6272971	ParameterList	const char * fmt		6272908	3					
ANR	6272972	Parameter	const char * fmt	264:27:5433:5447	6272908	0	True				
ANR	6272973	ParameterType	const char *		6272908	0					
ANR	6272974	Identifier	fmt		6272908	1					
ANR	6272975	CFGEntryNode	ENTRY		6272908		True				
ANR	6272976	CFGExitNode	EXIT		6272908		True				
ANR	6272977	Symbol	ret		6272908						
ANR	6272978	Symbol	r_sys_cmd_str		6272908						
ANR	6272979	Symbol	NULL		6272908						
ANR	6272980	Symbol	cmd		6272908						
ANR	6272981	Symbol	fmt		6272908						
ANR	6272982	Symbol	ap		6272908						
ANR	6272983	Function	r_sys_backtrace	287:0:5941:6712							
ANR	6272984	FunctionDef	r_sys_backtrace ()		6272983	0					
ANR	6272985	CompoundStatement		287:33:5974:6712	6272983	0					
ANR	6272986	IdentifierDeclStatement	void * array [ 10 ] ;	289:1:5999:6014	6272983	0	True				
ANR	6272987	IdentifierDecl	* array [ 10 ]		6272983	0					
ANR	6272988	IdentifierDeclType	void * [ 10 ]		6272983	0					
ANR	6272989	Identifier	array		6272983	1					
ANR	6272990	PrimaryExpression	10		6272983	2					
ANR	6272991	IdentifierDeclStatement	"size_t size = backtrace ( array , 10 ) ;"	290:1:6017:6052	6272983	1	True				
ANR	6272992	IdentifierDecl	"size = backtrace ( array , 10 )"		6272983	0					
ANR	6272993	IdentifierDeclType	size_t		6272983	0					
ANR	6272994	Identifier	size		6272983	1					
ANR	6272995	AssignmentExpression	"size = backtrace ( array , 10 )"		6272983	2		=			
ANR	6272996	Identifier	size		6272983	0					
ANR	6272997	CallExpression	"backtrace ( array , 10 )"		6272983	1					
ANR	6272998	Callee	backtrace		6272983	0					
ANR	6272999	Identifier	backtrace		6272983	0					
ANR	6273000	ArgumentList	array		6272983	1					
ANR	6273001	Argument	array		6272983	0					
ANR	6273002	Identifier	array		6272983	0					
ANR	6273003	Argument	10		6272983	1					
ANR	6273004	PrimaryExpression	10		6272983	0					
ANR	6273005	ExpressionStatement	"eprintf ( ""Backtrace %zd stack frames.\\n"" , size )"	291:1:6055:6102	6272983	2	True				
ANR	6273006	CallExpression	"eprintf ( ""Backtrace %zd stack frames.\\n"" , size )"		6272983	0					
ANR	6273007	Callee	eprintf		6272983	0					
ANR	6273008	Identifier	eprintf		6272983	0					
ANR	6273009	ArgumentList	"""Backtrace %zd stack frames.\\n"""		6272983	1					
ANR	6273010	Argument	"""Backtrace %zd stack frames.\\n"""		6272983	0					
ANR	6273011	PrimaryExpression	"""Backtrace %zd stack frames.\\n"""		6272983	0					
ANR	6273012	Argument	size		6272983	1					
ANR	6273013	Identifier	size		6272983	0					
ANR	6273014	ExpressionStatement	"backtrace_symbols_fd ( array , size , 2 )"	292:1:6105:6142	6272983	3	True				
ANR	6273015	CallExpression	"backtrace_symbols_fd ( array , size , 2 )"		6272983	0					
ANR	6273016	Callee	backtrace_symbols_fd		6272983	0					
ANR	6273017	Identifier	backtrace_symbols_fd		6272983	0					
ANR	6273018	ArgumentList	array		6272983	1					
ANR	6273019	Argument	array		6272983	0					
ANR	6273020	Identifier	array		6272983	0					
ANR	6273021	Argument	size		6272983	1					
ANR	6273022	Identifier	size		6272983	0					
ANR	6273023	Argument	2		6272983	2					
ANR	6273024	PrimaryExpression	2		6272983	0					
ANR	6273025	ReturnType	R_API void		6272983	1					
ANR	6273026	Identifier	r_sys_backtrace		6272983	2					
ANR	6273027	ParameterList			6272983	3					
ANR	6273028	CFGEntryNode	ENTRY		6272983		True				
ANR	6273029	CFGExitNode	EXIT		6272983		True				
ANR	6273030	Symbol	size		6272983						
ANR	6273031	Symbol	array		6272983						
ANR	6273032	Symbol	backtrace		6272983						
ANR	6273033	Function	r_sys_sleep	319:0:6715:6985							
ANR	6273034	FunctionDef	r_sys_sleep (int secs)		6273033	0					
ANR	6273035	CompoundStatement		319:32:6747:6985	6273033	0					
ANR	6273036	IdentifierDeclStatement	struct timespec rqtp ;	321:1:6774:6794	6273033	0	True				
ANR	6273037	IdentifierDecl	rqtp		6273033	0					
ANR	6273038	IdentifierDeclType	struct timespec		6273033	0					
ANR	6273039	Identifier	rqtp		6273033	1					
ANR	6273040	ExpressionStatement	rqtp . tv_sec = secs	322:1:6797:6815	6273033	1	True				
ANR	6273041	AssignmentExpression	rqtp . tv_sec = secs		6273033	0		=			
ANR	6273042	MemberAccess	rqtp . tv_sec		6273033	0					
ANR	6273043	Identifier	rqtp		6273033	0					
ANR	6273044	Identifier	tv_sec		6273033	1					
ANR	6273045	Identifier	secs		6273033	1					
ANR	6273046	ExpressionStatement	rqtp . tv_nsec = 0	323:1:6818:6834	6273033	2	True				
ANR	6273047	AssignmentExpression	rqtp . tv_nsec = 0		6273033	0		=			
ANR	6273048	MemberAccess	rqtp . tv_nsec		6273033	0					
ANR	6273049	Identifier	rqtp		6273033	0					
ANR	6273050	Identifier	tv_nsec		6273033	1					
ANR	6273051	PrimaryExpression	0		6273033	1					
ANR	6273052	ReturnStatement	"return clock_nanosleep ( CLOCK_MONOTONIC , 0 , & rqtp , NULL ) ;"	324:1:6837:6893	6273033	3	True				
ANR	6273053	CallExpression	"clock_nanosleep ( CLOCK_MONOTONIC , 0 , & rqtp , NULL )"		6273033	0					
ANR	6273054	Callee	clock_nanosleep		6273033	0					
ANR	6273055	Identifier	clock_nanosleep		6273033	0					
ANR	6273056	ArgumentList	CLOCK_MONOTONIC		6273033	1					
ANR	6273057	Argument	CLOCK_MONOTONIC		6273033	0					
ANR	6273058	Identifier	CLOCK_MONOTONIC		6273033	0					
ANR	6273059	Argument	0		6273033	1					
ANR	6273060	PrimaryExpression	0		6273033	0					
ANR	6273061	Argument	& rqtp		6273033	2					
ANR	6273062	UnaryOperationExpression	& rqtp		6273033	0					
ANR	6273063	UnaryOperator	&		6273033	0					
ANR	6273064	Identifier	rqtp		6273033	1					
ANR	6273065	Argument	NULL		6273033	3					
ANR	6273066	Identifier	NULL		6273033	0					
ANR	6273067	ReturnType	R_API int		6273033	1					
ANR	6273068	Identifier	r_sys_sleep		6273033	2					
ANR	6273069	ParameterList	int secs		6273033	3					
ANR	6273070	Parameter	int secs	319:22:6737:6744	6273033	0	True				
ANR	6273071	ParameterType	int		6273033	0					
ANR	6273072	Identifier	secs		6273033	1					
ANR	6273073	CFGEntryNode	ENTRY		6273033		True				
ANR	6273074	CFGExitNode	EXIT		6273033		True				
ANR	6273075	Symbol	NULL		6273033						
ANR	6273076	Symbol	rqtp . tv_sec		6273033						
ANR	6273077	Symbol	& rqtp		6273033						
ANR	6273078	Symbol	CLOCK_MONOTONIC		6273033						
ANR	6273079	Symbol	secs		6273033						
ANR	6273080	Symbol	rqtp . tv_nsec		6273033						
ANR	6273081	Symbol	rqtp		6273033						
ANR	6273082	Symbol	clock_nanosleep		6273033						
ANR	6273083	Function	r_sys_usleep	333:0:6988:7352							
ANR	6273084	FunctionDef	r_sys_usleep (int usecs)		6273083	0					
ANR	6273085	CompoundStatement		333:34:7022:7352	6273083	0					
ANR	6273086	IdentifierDeclStatement	struct timespec rqtp ;	335:1:7049:7069	6273083	0	True				
ANR	6273087	IdentifierDecl	rqtp		6273083	0					
ANR	6273088	IdentifierDeclType	struct timespec		6273083	0					
ANR	6273089	Identifier	rqtp		6273083	1					
ANR	6273090	ExpressionStatement	rqtp . tv_sec = usecs / 1000000	336:1:7072:7101	6273083	1	True				
ANR	6273091	AssignmentExpression	rqtp . tv_sec = usecs / 1000000		6273083	0		=			
ANR	6273092	MemberAccess	rqtp . tv_sec		6273083	0					
ANR	6273093	Identifier	rqtp		6273083	0					
ANR	6273094	Identifier	tv_sec		6273083	1					
ANR	6273095	MultiplicativeExpression	usecs / 1000000		6273083	1		/			
ANR	6273096	Identifier	usecs		6273083	0					
ANR	6273097	PrimaryExpression	1000000		6273083	1					
ANR	6273098	ExpressionStatement	rqtp . tv_nsec = ( usecs - ( rqtp . tv_sec * 1000000 ) ) * 1000	337:1:7104:7159	6273083	2	True				
ANR	6273099	AssignmentExpression	rqtp . tv_nsec = ( usecs - ( rqtp . tv_sec * 1000000 ) ) * 1000		6273083	0		=			
ANR	6273100	MemberAccess	rqtp . tv_nsec		6273083	0					
ANR	6273101	Identifier	rqtp		6273083	0					
ANR	6273102	Identifier	tv_nsec		6273083	1					
ANR	6273103	MultiplicativeExpression	( usecs - ( rqtp . tv_sec * 1000000 ) ) * 1000		6273083	1		*			
ANR	6273104	AdditiveExpression	usecs - ( rqtp . tv_sec * 1000000 )		6273083	0		-			
ANR	6273105	Identifier	usecs		6273083	0					
ANR	6273106	MultiplicativeExpression	rqtp . tv_sec * 1000000		6273083	1		*			
ANR	6273107	MemberAccess	rqtp . tv_sec		6273083	0					
ANR	6273108	Identifier	rqtp		6273083	0					
ANR	6273109	Identifier	tv_sec		6273083	1					
ANR	6273110	PrimaryExpression	1000000		6273083	1					
ANR	6273111	PrimaryExpression	1000		6273083	1					
ANR	6273112	ReturnStatement	"return clock_nanosleep ( CLOCK_MONOTONIC , 0 , & rqtp , NULL ) ;"	338:1:7162:7218	6273083	3	True				
ANR	6273113	CallExpression	"clock_nanosleep ( CLOCK_MONOTONIC , 0 , & rqtp , NULL )"		6273083	0					
ANR	6273114	Callee	clock_nanosleep		6273083	0					
ANR	6273115	Identifier	clock_nanosleep		6273083	0					
ANR	6273116	ArgumentList	CLOCK_MONOTONIC		6273083	1					
ANR	6273117	Argument	CLOCK_MONOTONIC		6273083	0					
ANR	6273118	Identifier	CLOCK_MONOTONIC		6273083	0					
ANR	6273119	Argument	0		6273083	1					
ANR	6273120	PrimaryExpression	0		6273083	0					
ANR	6273121	Argument	& rqtp		6273083	2					
ANR	6273122	UnaryOperationExpression	& rqtp		6273083	0					
ANR	6273123	UnaryOperator	&		6273083	0					
ANR	6273124	Identifier	rqtp		6273083	1					
ANR	6273125	Argument	NULL		6273083	3					
ANR	6273126	Identifier	NULL		6273083	0					
ANR	6273127	ReturnType	R_API int		6273083	1					
ANR	6273128	Identifier	r_sys_usleep		6273083	2					
ANR	6273129	ParameterList	int usecs		6273083	3					
ANR	6273130	Parameter	int usecs	333:23:7011:7019	6273083	0	True				
ANR	6273131	ParameterType	int		6273083	0					
ANR	6273132	Identifier	usecs		6273083	1					
ANR	6273133	CFGEntryNode	ENTRY		6273083		True				
ANR	6273134	CFGExitNode	EXIT		6273083		True				
ANR	6273135	Symbol	usecs		6273083						
ANR	6273136	Symbol	NULL		6273083						
ANR	6273137	Symbol	rqtp . tv_sec		6273083						
ANR	6273138	Symbol	& rqtp		6273083						
ANR	6273139	Symbol	CLOCK_MONOTONIC		6273083						
ANR	6273140	Symbol	rqtp . tv_nsec		6273083						
ANR	6273141	Symbol	rqtp		6273083						
ANR	6273142	Symbol	clock_nanosleep		6273083						
ANR	6273143	Function	r_sys_clearenv	349:0:7355:7856							
ANR	6273144	FunctionDef	r_sys_clearenv ()		6273143	0					
ANR	6273145	CompoundStatement		349:31:7386:7856	6273143	0					
ANR	6273146	IfStatement	if ( ! env )		6273143	0					
ANR	6273147	Condition	! env	353:5:7455:7458	6273143	0	True				
ANR	6273148	UnaryOperationExpression	! env		6273143	0					
ANR	6273149	UnaryOperator	!		6273143	0					
ANR	6273150	Identifier	env		6273143	1					
ANR	6273151	CompoundStatement		5:11:74:74	6273143	1					
ANR	6273152	ExpressionStatement	env = r_sys_get_environ ( )	354:2:7465:7491	6273143	0	True				
ANR	6273153	AssignmentExpression	env = r_sys_get_environ ( )		6273143	0		=			
ANR	6273154	Identifier	env		6273143	0					
ANR	6273155	CallExpression	r_sys_get_environ ( )		6273143	1					
ANR	6273156	Callee	r_sys_get_environ		6273143	0					
ANR	6273157	Identifier	r_sys_get_environ		6273143	0					
ANR	6273158	ArgumentList			6273143	1					
ANR	6273159	ReturnStatement	return 0 ;	355:2:7495:7503	6273143	1	True				
ANR	6273160	PrimaryExpression	0		6273143	0					
ANR	6273161	IfStatement	if ( env )		6273143	1					
ANR	6273162	Condition	env	357:5:7513:7515	6273143	0	True				
ANR	6273163	Identifier	env		6273143	0					
ANR	6273164	CompoundStatement		10:2:135:149	6273143	1					
ANR	6273165	IdentifierDeclStatement	char * * e = env ;	358:2:7522:7536	6273143	0	True				
ANR	6273166	IdentifierDecl	* * e = env		6273143	0					
ANR	6273167	IdentifierDeclType	char * *		6273143	0					
ANR	6273168	Identifier	e		6273143	1					
ANR	6273169	AssignmentExpression	* * e = env		6273143	2		=			
ANR	6273170	Identifier	env		6273143	0					
ANR	6273171	Identifier	env		6273143	1					
ANR	6273172	WhileStatement	while ( * e )		6273143	1					
ANR	6273173	Condition	* e	359:9:7547:7548	6273143	0	True				
ANR	6273174	UnaryOperationExpression	* e		6273143	0					
ANR	6273175	UnaryOperator	*		6273143	0					
ANR	6273176	Identifier	e		6273143	1					
ANR	6273177	CompoundStatement		11:13:164:164	6273143	1					
ANR	6273178	ExpressionStatement	* e ++ = NULL	360:3:7556:7567	6273143	0	True				
ANR	6273179	AssignmentExpression	* e ++ = NULL		6273143	0		=			
ANR	6273180	UnaryOperationExpression	* e ++		6273143	0					
ANR	6273181	UnaryOperator	*		6273143	0					
ANR	6273182	PostIncDecOperationExpression	e ++		6273143	1					
ANR	6273183	Identifier	e		6273143	0					
ANR	6273184	IncDec	++		6273143	1					
ANR	6273185	Identifier	NULL		6273143	1					
ANR	6273186	ReturnStatement	return 0 ;	371:1:7666:7674	6273143	2	True				
ANR	6273187	PrimaryExpression	0		6273143	0					
ANR	6273188	ReturnType	R_API int		6273143	1					
ANR	6273189	Identifier	r_sys_clearenv		6273143	2					
ANR	6273190	ParameterList			6273143	3					
ANR	6273191	CFGEntryNode	ENTRY		6273143		True				
ANR	6273192	CFGExitNode	EXIT		6273143		True				
ANR	6273193	Symbol	r_sys_get_environ		6273143						
ANR	6273194	Symbol	NULL		6273143						
ANR	6273195	Symbol	e		6273143						
ANR	6273196	Symbol	env		6273143						
ANR	6273197	Symbol	* e ++		6273143						
ANR	6273198	Symbol	* e		6273143						
ANR	6273199	Function	r_sys_setenv	382:0:7859:8407							
ANR	6273200	FunctionDef	"r_sys_setenv (const char * key , const char * value)"		6273199	0					
ANR	6273201	CompoundStatement		382:59:7918:8407	6273199	0					
ANR	6273202	IfStatement	if ( ! key )		6273199	0					
ANR	6273203	Condition	! key	383:5:7925:7928	6273199	0	True				
ANR	6273204	UnaryOperationExpression	! key		6273199	0					
ANR	6273205	UnaryOperator	!		6273199	0					
ANR	6273206	Identifier	key		6273199	1					
ANR	6273207	CompoundStatement		2:11:12:12	6273199	1					
ANR	6273208	ReturnStatement	return 0 ;	384:2:7935:7943	6273199	0	True				
ANR	6273209	PrimaryExpression	0		6273199	0					
ANR	6273210	IfStatement	if ( ! value )		6273199	1					
ANR	6273211	Condition	! value	387:5:7966:7971	6273199	0	True				
ANR	6273212	UnaryOperationExpression	! value		6273199	0					
ANR	6273213	UnaryOperator	!		6273199	0					
ANR	6273214	Identifier	value		6273199	1					
ANR	6273215	CompoundStatement		6:13:55:55	6273199	1					
ANR	6273216	ExpressionStatement	unsetenv ( key )	388:2:7978:7992	6273199	0	True				
ANR	6273217	CallExpression	unsetenv ( key )		6273199	0					
ANR	6273218	Callee	unsetenv		6273199	0					
ANR	6273219	Identifier	unsetenv		6273199	0					
ANR	6273220	ArgumentList	key		6273199	1					
ANR	6273221	Argument	key		6273199	0					
ANR	6273222	Identifier	key		6273199	0					
ANR	6273223	ReturnStatement	return 0 ;	389:2:7996:8004	6273199	1	True				
ANR	6273224	PrimaryExpression	0		6273199	0					
ANR	6273225	ReturnStatement	"return setenv ( key , value , 1 ) ;"	391:1:8010:8039	6273199	2	True				
ANR	6273226	CallExpression	"setenv ( key , value , 1 )"		6273199	0					
ANR	6273227	Callee	setenv		6273199	0					
ANR	6273228	Identifier	setenv		6273199	0					
ANR	6273229	ArgumentList	key		6273199	1					
ANR	6273230	Argument	key		6273199	0					
ANR	6273231	Identifier	key		6273199	0					
ANR	6273232	Argument	value		6273199	1					
ANR	6273233	Identifier	value		6273199	0					
ANR	6273234	Argument	1		6273199	2					
ANR	6273235	PrimaryExpression	1		6273199	0					
ANR	6273236	ReturnType	R_API int		6273199	1					
ANR	6273237	Identifier	r_sys_setenv		6273199	2					
ANR	6273238	ParameterList	"const char * key , const char * value"		6273199	3					
ANR	6273239	Parameter	const char * key	382:23:7882:7896	6273199	0	True				
ANR	6273240	ParameterType	const char *		6273199	0					
ANR	6273241	Identifier	key		6273199	1					
ANR	6273242	Parameter	const char * value	382:40:7899:7915	6273199	1	True				
ANR	6273243	ParameterType	const char *		6273199	0					
ANR	6273244	Identifier	value		6273199	1					
ANR	6273245	CFGEntryNode	ENTRY		6273199		True				
ANR	6273246	CFGExitNode	EXIT		6273199		True				
ANR	6273247	Symbol	setenv		6273199						
ANR	6273248	Symbol	value		6273199						
ANR	6273249	Symbol	key		6273199						
ANR	6273250	DeclStmt									
ANR	6273251	Decl							char	char *	crash_handler_cmd
ANR	6273252	Function	signal_handler	411:0:8463:8671							
ANR	6273253	FunctionDef	signal_handler (int signum)		6273252	0					
ANR	6273254	CompoundStatement		411:39:8502:8671	6273252	0					
ANR	6273255	IdentifierDeclStatement	char cmd [ 1024 ] ;	412:1:8505:8519	6273252	0	True				
ANR	6273256	IdentifierDecl	cmd [ 1024 ]		6273252	0					
ANR	6273257	IdentifierDeclType	char [ 1024 ]		6273252	0					
ANR	6273258	Identifier	cmd		6273252	1					
ANR	6273259	PrimaryExpression	1024		6273252	2					
ANR	6273260	IfStatement	if ( ! crash_handler_cmd )		6273252	1					
ANR	6273261	Condition	! crash_handler_cmd	413:5:8526:8543	6273252	0	True				
ANR	6273262	UnaryOperationExpression	! crash_handler_cmd		6273252	0					
ANR	6273263	UnaryOperator	!		6273252	0					
ANR	6273264	Identifier	crash_handler_cmd		6273252	1					
ANR	6273265	CompoundStatement		3:25:43:43	6273252	1					
ANR	6273266	ReturnStatement	return ;	414:2:8550:8556	6273252	0	True				
ANR	6273267	ExpressionStatement	"snprintf ( cmd , sizeof ( cmd ) - 1 , crash_handler_cmd , getpid ( ) )"	416:1:8562:8623	6273252	2	True				
ANR	6273268	CallExpression	"snprintf ( cmd , sizeof ( cmd ) - 1 , crash_handler_cmd , getpid ( ) )"		6273252	0					
ANR	6273269	Callee	snprintf		6273252	0					
ANR	6273270	Identifier	snprintf		6273252	0					
ANR	6273271	ArgumentList	cmd		6273252	1					
ANR	6273272	Argument	cmd		6273252	0					
ANR	6273273	Identifier	cmd		6273252	0					
ANR	6273274	Argument	sizeof ( cmd ) - 1		6273252	1					
ANR	6273275	AdditiveExpression	sizeof ( cmd ) - 1		6273252	0		-			
ANR	6273276	SizeofExpression	sizeof ( cmd )		6273252	0					
ANR	6273277	Sizeof	sizeof		6273252	0					
ANR	6273278	SizeofOperand	cmd		6273252	1					
ANR	6273279	PrimaryExpression	1		6273252	1					
ANR	6273280	Argument	crash_handler_cmd		6273252	2					
ANR	6273281	Identifier	crash_handler_cmd		6273252	0					
ANR	6273282	Argument	getpid ( )		6273252	3					
ANR	6273283	CallExpression	getpid ( )		6273252	0					
ANR	6273284	Callee	getpid		6273252	0					
ANR	6273285	Identifier	getpid		6273252	0					
ANR	6273286	ArgumentList			6273252	1					
ANR	6273287	ExpressionStatement	r_sys_backtrace ( )	417:1:8626:8644	6273252	3	True				
ANR	6273288	CallExpression	r_sys_backtrace ( )		6273252	0					
ANR	6273289	Callee	r_sys_backtrace		6273252	0					
ANR	6273290	Identifier	r_sys_backtrace		6273252	0					
ANR	6273291	ArgumentList			6273252	1					
ANR	6273292	ExpressionStatement	exit ( r_sys_cmd ( cmd ) )	418:1:8647:8669	6273252	4	True				
ANR	6273293	CallExpression	exit ( r_sys_cmd ( cmd ) )		6273252	0					
ANR	6273294	Callee	exit		6273252	0					
ANR	6273295	Identifier	exit		6273252	0					
ANR	6273296	ArgumentList	r_sys_cmd ( cmd )		6273252	1					
ANR	6273297	Argument	r_sys_cmd ( cmd )		6273252	0					
ANR	6273298	CallExpression	r_sys_cmd ( cmd )		6273252	0					
ANR	6273299	Callee	r_sys_cmd		6273252	0					
ANR	6273300	Identifier	r_sys_cmd		6273252	0					
ANR	6273301	ArgumentList	cmd		6273252	1					
ANR	6273302	Argument	cmd		6273252	0					
ANR	6273303	Identifier	cmd		6273252	0					
ANR	6273304	ReturnType	static void		6273252	1					
ANR	6273305	Identifier	signal_handler		6273252	2					
ANR	6273306	ParameterList	int signum		6273252	3					
ANR	6273307	Parameter	int signum	411:27:8490:8499	6273252	0	True				
ANR	6273308	ParameterType	int		6273252	0					
ANR	6273309	Identifier	signum		6273252	1					
ANR	6273310	CFGEntryNode	ENTRY		6273252		True				
ANR	6273311	CFGExitNode	EXIT		6273252		True				
ANR	6273312	Symbol	signum		6273252						
ANR	6273313	Symbol	crash_handler_cmd		6273252						
ANR	6273314	Symbol	r_sys_cmd		6273252						
ANR	6273315	Symbol	cmd		6273252						
ANR	6273316	Symbol	getpid		6273252						
ANR	6273317	Function	checkcmd	421:0:8674:8842							
ANR	6273318	FunctionDef	checkcmd (const char * c)		6273317	0					
ANR	6273319	CompoundStatement		421:35:8709:8842	6273317	0					
ANR	6273320	IdentifierDeclStatement	char oc = 0 ;	422:1:8712:8723	6273317	0	True				
ANR	6273321	IdentifierDecl	oc = 0		6273317	0					
ANR	6273322	IdentifierDeclType	char		6273317	0					
ANR	6273323	Identifier	oc		6273317	1					
ANR	6273324	AssignmentExpression	oc = 0		6273317	2		=			
ANR	6273325	Identifier	oc		6273317	0					
ANR	6273326	PrimaryExpression	0		6273317	1					
ANR	6273327	ForStatement	for ( ; * c ; c ++ )		6273317	1					
ANR	6273328	Condition	* c	423:7:8732:8733	6273317	0	True				
ANR	6273329	UnaryOperationExpression	* c		6273317	0					
ANR	6273330	UnaryOperator	*		6273317	0					
ANR	6273331	Identifier	c		6273317	1					
ANR	6273332	PostIncDecOperationExpression	c ++	423:10:8735:8737	6273317	1	True				
ANR	6273333	Identifier	c		6273317	0					
ANR	6273334	IncDec	++		6273317	1					
ANR	6273335	CompoundStatement		3:15:30:30	6273317	2					
ANR	6273336	IfStatement	if ( oc == '%' )		6273317	0					
ANR	6273337	Condition	oc == '%'	424:6:8748:8756	6273317	0	True				
ANR	6273338	EqualityExpression	oc == '%'		6273317	0		==			
ANR	6273339	Identifier	oc		6273317	0					
ANR	6273340	PrimaryExpression	'%'		6273317	1					
ANR	6273341	CompoundStatement		4:17:49:49	6273317	1					
ANR	6273342	IfStatement	if ( * c != 'd' && * c != '%' )		6273317	0					
ANR	6273343	Condition	* c != 'd' && * c != '%'	425:7:8768:8789	6273317	0	True				
ANR	6273344	AndExpression	* c != 'd' && * c != '%'		6273317	0		&&			
ANR	6273345	EqualityExpression	* c != 'd'		6273317	0		!=			
ANR	6273346	UnaryOperationExpression	* c		6273317	0					
ANR	6273347	UnaryOperator	*		6273317	0					
ANR	6273348	Identifier	c		6273317	1					
ANR	6273349	PrimaryExpression	'd'		6273317	1					
ANR	6273350	EqualityExpression	* c != '%'		6273317	1		!=			
ANR	6273351	UnaryOperationExpression	* c		6273317	0					
ANR	6273352	UnaryOperator	*		6273317	0					
ANR	6273353	Identifier	c		6273317	1					
ANR	6273354	PrimaryExpression	'%'		6273317	1					
ANR	6273355	CompoundStatement		5:31:82:82	6273317	1					
ANR	6273356	ReturnStatement	return 0 ;	426:4:8798:8806	6273317	0	True				
ANR	6273357	PrimaryExpression	0		6273317	0					
ANR	6273358	ExpressionStatement	oc = * c	429:2:8819:8826	6273317	1	True				
ANR	6273359	AssignmentExpression	oc = * c		6273317	0		=			
ANR	6273360	Identifier	oc		6273317	0					
ANR	6273361	UnaryOperationExpression	* c		6273317	1					
ANR	6273362	UnaryOperator	*		6273317	0					
ANR	6273363	Identifier	c		6273317	1					
ANR	6273364	ReturnStatement	return 1 ;	431:1:8832:8840	6273317	2	True				
ANR	6273365	PrimaryExpression	1		6273317	0					
ANR	6273366	ReturnType	static int		6273317	1					
ANR	6273367	Identifier	checkcmd		6273317	2					
ANR	6273368	ParameterList	const char * c		6273317	3					
ANR	6273369	Parameter	const char * c	421:20:8694:8706	6273317	0	True				
ANR	6273370	ParameterType	const char *		6273317	0					
ANR	6273371	Identifier	c		6273317	1					
ANR	6273372	CFGEntryNode	ENTRY		6273317		True				
ANR	6273373	CFGExitNode	EXIT		6273317		True				
ANR	6273374	Symbol	c		6273317						
ANR	6273375	Symbol	oc		6273317						
ANR	6273376	Symbol	* c		6273317						
ANR	6273377	Function	r_sys_crash_handler	435:0:8852:9788							
ANR	6273378	FunctionDef	r_sys_crash_handler (const char * cmd)		6273377	0					
ANR	6273379	CompoundStatement		435:47:8899:9788	6273377	0					
ANR	6273380	IdentifierDeclStatement	struct sigaction sigact ;	437:1:8915:8938	6273377	0	True				
ANR	6273381	IdentifierDecl	sigact		6273377	0					
ANR	6273382	IdentifierDeclType	struct sigaction		6273377	0					
ANR	6273383	Identifier	sigact		6273377	1					
ANR	6273384	IfStatement	if ( ! checkcmd ( cmd ) )		6273377	1					
ANR	6273385	Condition	! checkcmd ( cmd )	438:5:8945:8959	6273377	0	True				
ANR	6273386	UnaryOperationExpression	! checkcmd ( cmd )		6273377	0					
ANR	6273387	UnaryOperator	!		6273377	0					
ANR	6273388	CallExpression	checkcmd ( cmd )		6273377	1					
ANR	6273389	Callee	checkcmd		6273377	0					
ANR	6273390	Identifier	checkcmd		6273377	0					
ANR	6273391	ArgumentList	cmd		6273377	1					
ANR	6273392	Argument	cmd		6273377	0					
ANR	6273393	Identifier	cmd		6273377	0					
ANR	6273394	CompoundStatement		4:22:62:62	6273377	1					
ANR	6273395	ReturnStatement	return false ;	439:2:8966:8978	6273377	0	True				
ANR	6273396	Identifier	false		6273377	0					
ANR	6273397	IdentifierDeclStatement	void * array [ 1 ] ;	442:1:9006:9020	6273377	2	True				
ANR	6273398	IdentifierDecl	* array [ 1 ]		6273377	0					
ANR	6273399	IdentifierDeclType	void * [ 1 ]		6273377	0					
ANR	6273400	Identifier	array		6273377	1					
ANR	6273401	PrimaryExpression	1		6273377	2					
ANR	6273402	ExpressionStatement	"backtrace ( array , 1 )"	444:1:9088:9108	6273377	3	True				
ANR	6273403	CallExpression	"backtrace ( array , 1 )"		6273377	0					
ANR	6273404	Callee	backtrace		6273377	0					
ANR	6273405	Identifier	backtrace		6273377	0					
ANR	6273406	ArgumentList	array		6273377	1					
ANR	6273407	Argument	array		6273377	0					
ANR	6273408	Identifier	array		6273377	0					
ANR	6273409	Argument	1		6273377	1					
ANR	6273410	PrimaryExpression	1		6273377	0					
ANR	6273411	ExpressionStatement	free ( crash_handler_cmd )	447:1:9119:9143	6273377	4	True				
ANR	6273412	CallExpression	free ( crash_handler_cmd )		6273377	0					
ANR	6273413	Callee	free		6273377	0					
ANR	6273414	Identifier	free		6273377	0					
ANR	6273415	ArgumentList	crash_handler_cmd		6273377	1					
ANR	6273416	Argument	crash_handler_cmd		6273377	0					
ANR	6273417	Identifier	crash_handler_cmd		6273377	0					
ANR	6273418	ExpressionStatement	crash_handler_cmd = strdup ( cmd )	448:1:9146:9178	6273377	5	True				
ANR	6273419	AssignmentExpression	crash_handler_cmd = strdup ( cmd )		6273377	0		=			
ANR	6273420	Identifier	crash_handler_cmd		6273377	0					
ANR	6273421	CallExpression	strdup ( cmd )		6273377	1					
ANR	6273422	Callee	strdup		6273377	0					
ANR	6273423	Identifier	strdup		6273377	0					
ANR	6273424	ArgumentList	cmd		6273377	1					
ANR	6273425	Argument	cmd		6273377	0					
ANR	6273426	Identifier	cmd		6273377	0					
ANR	6273427	ExpressionStatement	sigact . sa_handler = signal_handler	449:1:9181:9215	6273377	6	True				
ANR	6273428	AssignmentExpression	sigact . sa_handler = signal_handler		6273377	0		=			
ANR	6273429	MemberAccess	sigact . sa_handler		6273377	0					
ANR	6273430	Identifier	sigact		6273377	0					
ANR	6273431	Identifier	sa_handler		6273377	1					
ANR	6273432	Identifier	signal_handler		6273377	1					
ANR	6273433	ExpressionStatement	sigemptyset ( & sigact . sa_mask )	450:1:9218:9247	6273377	7	True				
ANR	6273434	CallExpression	sigemptyset ( & sigact . sa_mask )		6273377	0					
ANR	6273435	Callee	sigemptyset		6273377	0					
ANR	6273436	Identifier	sigemptyset		6273377	0					
ANR	6273437	ArgumentList	& sigact . sa_mask		6273377	1					
ANR	6273438	Argument	& sigact . sa_mask		6273377	0					
ANR	6273439	UnaryOperationExpression	& sigact . sa_mask		6273377	0					
ANR	6273440	UnaryOperator	&		6273377	0					
ANR	6273441	MemberAccess	sigact . sa_mask		6273377	1					
ANR	6273442	Identifier	sigact		6273377	0					
ANR	6273443	Identifier	sa_mask		6273377	1					
ANR	6273444	ExpressionStatement	sigact . sa_flags = 0	451:1:9250:9269	6273377	8	True				
ANR	6273445	AssignmentExpression	sigact . sa_flags = 0		6273377	0		=			
ANR	6273446	MemberAccess	sigact . sa_flags		6273377	0					
ANR	6273447	Identifier	sigact		6273377	0					
ANR	6273448	Identifier	sa_flags		6273377	1					
ANR	6273449	PrimaryExpression	0		6273377	1					
ANR	6273450	ExpressionStatement	"sigaddset ( & sigact . sa_mask , SIGINT )"	452:1:9272:9307	6273377	9	True				
ANR	6273451	CallExpression	"sigaddset ( & sigact . sa_mask , SIGINT )"		6273377	0					
ANR	6273452	Callee	sigaddset		6273377	0					
ANR	6273453	Identifier	sigaddset		6273377	0					
ANR	6273454	ArgumentList	& sigact . sa_mask		6273377	1					
ANR	6273455	Argument	& sigact . sa_mask		6273377	0					
ANR	6273456	UnaryOperationExpression	& sigact . sa_mask		6273377	0					
ANR	6273457	UnaryOperator	&		6273377	0					
ANR	6273458	MemberAccess	sigact . sa_mask		6273377	1					
ANR	6273459	Identifier	sigact		6273377	0					
ANR	6273460	Identifier	sa_mask		6273377	1					
ANR	6273461	Argument	SIGINT		6273377	1					
ANR	6273462	Identifier	SIGINT		6273377	0					
ANR	6273463	ExpressionStatement	"sigaddset ( & sigact . sa_mask , SIGSEGV )"	453:1:9310:9346	6273377	10	True				
ANR	6273464	CallExpression	"sigaddset ( & sigact . sa_mask , SIGSEGV )"		6273377	0					
ANR	6273465	Callee	sigaddset		6273377	0					
ANR	6273466	Identifier	sigaddset		6273377	0					
ANR	6273467	ArgumentList	& sigact . sa_mask		6273377	1					
ANR	6273468	Argument	& sigact . sa_mask		6273377	0					
ANR	6273469	UnaryOperationExpression	& sigact . sa_mask		6273377	0					
ANR	6273470	UnaryOperator	&		6273377	0					
ANR	6273471	MemberAccess	sigact . sa_mask		6273377	1					
ANR	6273472	Identifier	sigact		6273377	0					
ANR	6273473	Identifier	sa_mask		6273377	1					
ANR	6273474	Argument	SIGSEGV		6273377	1					
ANR	6273475	Identifier	SIGSEGV		6273377	0					
ANR	6273476	ExpressionStatement	"sigaddset ( & sigact . sa_mask , SIGBUS )"	454:1:9349:9384	6273377	11	True				
ANR	6273477	CallExpression	"sigaddset ( & sigact . sa_mask , SIGBUS )"		6273377	0					
ANR	6273478	Callee	sigaddset		6273377	0					
ANR	6273479	Identifier	sigaddset		6273377	0					
ANR	6273480	ArgumentList	& sigact . sa_mask		6273377	1					
ANR	6273481	Argument	& sigact . sa_mask		6273377	0					
ANR	6273482	UnaryOperationExpression	& sigact . sa_mask		6273377	0					
ANR	6273483	UnaryOperator	&		6273377	0					
ANR	6273484	MemberAccess	sigact . sa_mask		6273377	1					
ANR	6273485	Identifier	sigact		6273377	0					
ANR	6273486	Identifier	sa_mask		6273377	1					
ANR	6273487	Argument	SIGBUS		6273377	1					
ANR	6273488	Identifier	SIGBUS		6273377	0					
ANR	6273489	ExpressionStatement	"sigaddset ( & sigact . sa_mask , SIGQUIT )"	455:1:9387:9423	6273377	12	True				
ANR	6273490	CallExpression	"sigaddset ( & sigact . sa_mask , SIGQUIT )"		6273377	0					
ANR	6273491	Callee	sigaddset		6273377	0					
ANR	6273492	Identifier	sigaddset		6273377	0					
ANR	6273493	ArgumentList	& sigact . sa_mask		6273377	1					
ANR	6273494	Argument	& sigact . sa_mask		6273377	0					
ANR	6273495	UnaryOperationExpression	& sigact . sa_mask		6273377	0					
ANR	6273496	UnaryOperator	&		6273377	0					
ANR	6273497	MemberAccess	sigact . sa_mask		6273377	1					
ANR	6273498	Identifier	sigact		6273377	0					
ANR	6273499	Identifier	sa_mask		6273377	1					
ANR	6273500	Argument	SIGQUIT		6273377	1					
ANR	6273501	Identifier	SIGQUIT		6273377	0					
ANR	6273502	ExpressionStatement	"sigaddset ( & sigact . sa_mask , SIGHUP )"	456:1:9426:9461	6273377	13	True				
ANR	6273503	CallExpression	"sigaddset ( & sigact . sa_mask , SIGHUP )"		6273377	0					
ANR	6273504	Callee	sigaddset		6273377	0					
ANR	6273505	Identifier	sigaddset		6273377	0					
ANR	6273506	ArgumentList	& sigact . sa_mask		6273377	1					
ANR	6273507	Argument	& sigact . sa_mask		6273377	0					
ANR	6273508	UnaryOperationExpression	& sigact . sa_mask		6273377	0					
ANR	6273509	UnaryOperator	&		6273377	0					
ANR	6273510	MemberAccess	sigact . sa_mask		6273377	1					
ANR	6273511	Identifier	sigact		6273377	0					
ANR	6273512	Identifier	sa_mask		6273377	1					
ANR	6273513	Argument	SIGHUP		6273377	1					
ANR	6273514	Identifier	SIGHUP		6273377	0					
ANR	6273515	ExpressionStatement	"sigaction ( SIGINT , & sigact , ( struct sigaction * ) NULL )"	458:1:9465:9518	6273377	14	True				
ANR	6273516	CallExpression	"sigaction ( SIGINT , & sigact , ( struct sigaction * ) NULL )"		6273377	0					
ANR	6273517	Callee	sigaction		6273377	0					
ANR	6273518	Identifier	sigaction		6273377	0					
ANR	6273519	ArgumentList	SIGINT		6273377	1					
ANR	6273520	Argument	SIGINT		6273377	0					
ANR	6273521	Identifier	SIGINT		6273377	0					
ANR	6273522	Argument	& sigact		6273377	1					
ANR	6273523	UnaryOperationExpression	& sigact		6273377	0					
ANR	6273524	UnaryOperator	&		6273377	0					
ANR	6273525	Identifier	sigact		6273377	1					
ANR	6273526	Argument	( struct sigaction * ) NULL		6273377	2					
ANR	6273527	CastExpression	( struct sigaction * ) NULL		6273377	0					
ANR	6273528	CastTarget	struct sigaction *		6273377	0					
ANR	6273529	Identifier	NULL		6273377	1					
ANR	6273530	ExpressionStatement	"sigaction ( SIGSEGV , & sigact , ( struct sigaction * ) NULL )"	459:1:9521:9575	6273377	15	True				
ANR	6273531	CallExpression	"sigaction ( SIGSEGV , & sigact , ( struct sigaction * ) NULL )"		6273377	0					
ANR	6273532	Callee	sigaction		6273377	0					
ANR	6273533	Identifier	sigaction		6273377	0					
ANR	6273534	ArgumentList	SIGSEGV		6273377	1					
ANR	6273535	Argument	SIGSEGV		6273377	0					
ANR	6273536	Identifier	SIGSEGV		6273377	0					
ANR	6273537	Argument	& sigact		6273377	1					
ANR	6273538	UnaryOperationExpression	& sigact		6273377	0					
ANR	6273539	UnaryOperator	&		6273377	0					
ANR	6273540	Identifier	sigact		6273377	1					
ANR	6273541	Argument	( struct sigaction * ) NULL		6273377	2					
ANR	6273542	CastExpression	( struct sigaction * ) NULL		6273377	0					
ANR	6273543	CastTarget	struct sigaction *		6273377	0					
ANR	6273544	Identifier	NULL		6273377	1					
ANR	6273545	ExpressionStatement	"sigaction ( SIGBUS , & sigact , ( struct sigaction * ) NULL )"	460:1:9578:9631	6273377	16	True				
ANR	6273546	CallExpression	"sigaction ( SIGBUS , & sigact , ( struct sigaction * ) NULL )"		6273377	0					
ANR	6273547	Callee	sigaction		6273377	0					
ANR	6273548	Identifier	sigaction		6273377	0					
ANR	6273549	ArgumentList	SIGBUS		6273377	1					
ANR	6273550	Argument	SIGBUS		6273377	0					
ANR	6273551	Identifier	SIGBUS		6273377	0					
ANR	6273552	Argument	& sigact		6273377	1					
ANR	6273553	UnaryOperationExpression	& sigact		6273377	0					
ANR	6273554	UnaryOperator	&		6273377	0					
ANR	6273555	Identifier	sigact		6273377	1					
ANR	6273556	Argument	( struct sigaction * ) NULL		6273377	2					
ANR	6273557	CastExpression	( struct sigaction * ) NULL		6273377	0					
ANR	6273558	CastTarget	struct sigaction *		6273377	0					
ANR	6273559	Identifier	NULL		6273377	1					
ANR	6273560	ExpressionStatement	"sigaction ( SIGQUIT , & sigact , ( struct sigaction * ) NULL )"	461:1:9634:9688	6273377	17	True				
ANR	6273561	CallExpression	"sigaction ( SIGQUIT , & sigact , ( struct sigaction * ) NULL )"		6273377	0					
ANR	6273562	Callee	sigaction		6273377	0					
ANR	6273563	Identifier	sigaction		6273377	0					
ANR	6273564	ArgumentList	SIGQUIT		6273377	1					
ANR	6273565	Argument	SIGQUIT		6273377	0					
ANR	6273566	Identifier	SIGQUIT		6273377	0					
ANR	6273567	Argument	& sigact		6273377	1					
ANR	6273568	UnaryOperationExpression	& sigact		6273377	0					
ANR	6273569	UnaryOperator	&		6273377	0					
ANR	6273570	Identifier	sigact		6273377	1					
ANR	6273571	Argument	( struct sigaction * ) NULL		6273377	2					
ANR	6273572	CastExpression	( struct sigaction * ) NULL		6273377	0					
ANR	6273573	CastTarget	struct sigaction *		6273377	0					
ANR	6273574	Identifier	NULL		6273377	1					
ANR	6273575	ExpressionStatement	"sigaction ( SIGHUP , & sigact , ( struct sigaction * ) NULL )"	462:1:9691:9744	6273377	18	True				
ANR	6273576	CallExpression	"sigaction ( SIGHUP , & sigact , ( struct sigaction * ) NULL )"		6273377	0					
ANR	6273577	Callee	sigaction		6273377	0					
ANR	6273578	Identifier	sigaction		6273377	0					
ANR	6273579	ArgumentList	SIGHUP		6273377	1					
ANR	6273580	Argument	SIGHUP		6273377	0					
ANR	6273581	Identifier	SIGHUP		6273377	0					
ANR	6273582	Argument	& sigact		6273377	1					
ANR	6273583	UnaryOperationExpression	& sigact		6273377	0					
ANR	6273584	UnaryOperator	&		6273377	0					
ANR	6273585	Identifier	sigact		6273377	1					
ANR	6273586	Argument	( struct sigaction * ) NULL		6273377	2					
ANR	6273587	CastExpression	( struct sigaction * ) NULL		6273377	0					
ANR	6273588	CastTarget	struct sigaction *		6273377	0					
ANR	6273589	Identifier	NULL		6273377	1					
ANR	6273590	ReturnStatement	return true ;	463:1:9747:9758	6273377	19	True				
ANR	6273591	Identifier	true		6273377	0					
ANR	6273592	ReturnType	R_API int		6273377	1					
ANR	6273593	Identifier	r_sys_crash_handler		6273377	2					
ANR	6273594	ParameterList	const char * cmd		6273377	3					
ANR	6273595	Parameter	const char * cmd	435:30:8882:8896	6273377	0	True				
ANR	6273596	ParameterType	const char *		6273377	0					
ANR	6273597	Identifier	cmd		6273377	1					
ANR	6273598	CFGEntryNode	ENTRY		6273377		True				
ANR	6273599	CFGExitNode	EXIT		6273377		True				
ANR	6273600	Symbol	sigact . sa_flags		6273377						
ANR	6273601	Symbol	NULL		6273377						
ANR	6273602	Symbol	SIGQUIT		6273377						
ANR	6273603	Symbol	SIGBUS		6273377						
ANR	6273604	Symbol	false		6273377						
ANR	6273605	Symbol	checkcmd		6273377						
ANR	6273606	Symbol	sigact . sa_handler		6273377						
ANR	6273607	Symbol	& sigact		6273377						
ANR	6273608	Symbol	sigact		6273377						
ANR	6273609	Symbol	SIGSEGV		6273377						
ANR	6273610	Symbol	array		6273377						
ANR	6273611	Symbol	crash_handler_cmd		6273377						
ANR	6273612	Symbol	SIGINT		6273377						
ANR	6273613	Symbol	signal_handler		6273377						
ANR	6273614	Symbol	& sigact . sa_mask		6273377						
ANR	6273615	Symbol	true		6273377						
ANR	6273616	Symbol	SIGHUP		6273377						
ANR	6273617	Symbol	cmd		6273377						
ANR	6273618	Symbol	strdup		6273377						
ANR	6273619	Function	r_sys_getenv	469:0:9791:10753							
ANR	6273620	FunctionDef	r_sys_getenv (const char * key)		6273619	0					
ANR	6273621	CompoundStatement		469:42:9833:10753	6273619	0					
ANR	6273622	IdentifierDeclStatement	DWORD dwRet ;	471:1:9852:9863	6273619	0	True				
ANR	6273623	IdentifierDecl	dwRet		6273619	0					
ANR	6273624	IdentifierDeclType	DWORD		6273619	0					
ANR	6273625	Identifier	dwRet		6273619	1					
ANR	6273626	IdentifierDeclStatement	"LPTSTR envbuf = NULL , key_ = NULL , tmp_ptr ;"	472:1:9866:9908	6273619	1	True				
ANR	6273627	IdentifierDecl	envbuf = NULL		6273619	0					
ANR	6273628	IdentifierDeclType	LPTSTR		6273619	0					
ANR	6273629	Identifier	envbuf		6273619	1					
ANR	6273630	AssignmentExpression	envbuf = NULL		6273619	2		=			
ANR	6273631	Identifier	NULL		6273619	0					
ANR	6273632	Identifier	NULL		6273619	1					
ANR	6273633	IdentifierDecl	key_ = NULL		6273619	1					
ANR	6273634	IdentifierDeclType	LPTSTR		6273619	0					
ANR	6273635	Identifier	key_		6273619	1					
ANR	6273636	AssignmentExpression	key_ = NULL		6273619	2		=			
ANR	6273637	Identifier	NULL		6273619	0					
ANR	6273638	Identifier	NULL		6273619	1					
ANR	6273639	IdentifierDecl	tmp_ptr		6273619	2					
ANR	6273640	IdentifierDeclType	LPTSTR		6273619	0					
ANR	6273641	Identifier	tmp_ptr		6273619	1					
ANR	6273642	IdentifierDeclStatement	char * val = NULL ;	473:1:9911:9927	6273619	2	True				
ANR	6273643	IdentifierDecl	* val = NULL		6273619	0					
ANR	6273644	IdentifierDeclType	char *		6273619	0					
ANR	6273645	Identifier	val		6273619	1					
ANR	6273646	AssignmentExpression	* val = NULL		6273619	2		=			
ANR	6273647	Identifier	NULL		6273619	0					
ANR	6273648	Identifier	NULL		6273619	1					
ANR	6273649	IfStatement	if ( ! key )		6273619	3					
ANR	6273650	Condition	! key	475:5:9935:9938	6273619	0	True				
ANR	6273651	UnaryOperationExpression	! key		6273619	0					
ANR	6273652	UnaryOperator	!		6273619	0					
ANR	6273653	Identifier	key		6273619	1					
ANR	6273654	CompoundStatement		7:11:107:107	6273619	1					
ANR	6273655	ReturnStatement	return NULL ;	476:2:9945:9956	6273619	0	True				
ANR	6273656	Identifier	NULL		6273619	0					
ANR	6273657	ExpressionStatement	envbuf = ( LPTSTR ) malloc ( sizeof ( TCHAR ) * TMP_BUFSIZE )	478:1:9962:10016	6273619	4	True				
ANR	6273658	AssignmentExpression	envbuf = ( LPTSTR ) malloc ( sizeof ( TCHAR ) * TMP_BUFSIZE )		6273619	0		=			
ANR	6273659	Identifier	envbuf		6273619	0					
ANR	6273660	CastExpression	( LPTSTR ) malloc ( sizeof ( TCHAR ) * TMP_BUFSIZE )		6273619	1					
ANR	6273661	CastTarget	LPTSTR		6273619	0					
ANR	6273662	CallExpression	malloc ( sizeof ( TCHAR ) * TMP_BUFSIZE )		6273619	1					
ANR	6273663	Callee	malloc		6273619	0					
ANR	6273664	Identifier	malloc		6273619	0					
ANR	6273665	ArgumentList	sizeof ( TCHAR ) * TMP_BUFSIZE		6273619	1					
ANR	6273666	Argument	sizeof ( TCHAR ) * TMP_BUFSIZE		6273619	0					
ANR	6273667	MultiplicativeExpression	sizeof ( TCHAR ) * TMP_BUFSIZE		6273619	0		*			
ANR	6273668	SizeofExpression	sizeof ( TCHAR )		6273619	0					
ANR	6273669	Sizeof	sizeof		6273619	0					
ANR	6273670	SizeofOperand	TCHAR		6273619	1					
ANR	6273671	Identifier	TMP_BUFSIZE		6273619	1					
ANR	6273672	IfStatement	if ( ! envbuf )		6273619	5					
ANR	6273673	Condition	! envbuf	479:5:10023:10029	6273619	0	True				
ANR	6273674	UnaryOperationExpression	! envbuf		6273619	0					
ANR	6273675	UnaryOperator	!		6273619	0					
ANR	6273676	Identifier	envbuf		6273619	1					
ANR	6273677	CompoundStatement		11:14:198:198	6273619	1					
ANR	6273678	GotoStatement	goto err_r_sys_get_env ;	480:2:10036:10058	6273619	0	True				
ANR	6273679	Identifier	err_r_sys_get_env		6273619	0					
ANR	6273680	ExpressionStatement	key_ = r_sys_conv_utf8_to_win ( key )	482:1:10064:10099	6273619	6	True				
ANR	6273681	AssignmentExpression	key_ = r_sys_conv_utf8_to_win ( key )		6273619	0		=			
ANR	6273682	Identifier	key_		6273619	0					
ANR	6273683	CallExpression	r_sys_conv_utf8_to_win ( key )		6273619	1					
ANR	6273684	Callee	r_sys_conv_utf8_to_win		6273619	0					
ANR	6273685	Identifier	r_sys_conv_utf8_to_win		6273619	0					
ANR	6273686	ArgumentList	key		6273619	1					
ANR	6273687	Argument	key		6273619	0					
ANR	6273688	Identifier	key		6273619	0					
ANR	6273689	ExpressionStatement	"dwRet = GetEnvironmentVariable ( key_ , envbuf , TMP_BUFSIZE )"	483:1:10102:10160	6273619	7	True				
ANR	6273690	AssignmentExpression	"dwRet = GetEnvironmentVariable ( key_ , envbuf , TMP_BUFSIZE )"		6273619	0		=			
ANR	6273691	Identifier	dwRet		6273619	0					
ANR	6273692	CallExpression	"GetEnvironmentVariable ( key_ , envbuf , TMP_BUFSIZE )"		6273619	1					
ANR	6273693	Callee	GetEnvironmentVariable		6273619	0					
ANR	6273694	Identifier	GetEnvironmentVariable		6273619	0					
ANR	6273695	ArgumentList	key_		6273619	1					
ANR	6273696	Argument	key_		6273619	0					
ANR	6273697	Identifier	key_		6273619	0					
ANR	6273698	Argument	envbuf		6273619	1					
ANR	6273699	Identifier	envbuf		6273619	0					
ANR	6273700	Argument	TMP_BUFSIZE		6273619	2					
ANR	6273701	Identifier	TMP_BUFSIZE		6273619	0					
ANR	6273702	IfStatement	if ( dwRet == 0 )		6273619	8					
ANR	6273703	Condition	dwRet == 0	484:5:10167:10176	6273619	0	True				
ANR	6273704	EqualityExpression	dwRet == 0		6273619	0		==			
ANR	6273705	Identifier	dwRet		6273619	0					
ANR	6273706	PrimaryExpression	0		6273619	1					
ANR	6273707	CompoundStatement		16:17:345:345	6273619	1					
ANR	6273708	IfStatement	if ( GetLastError ( ) == ERROR_ENVVAR_NOT_FOUND )		6273619	0					
ANR	6273709	Condition	GetLastError ( ) == ERROR_ENVVAR_NOT_FOUND	485:6:10187:10227	6273619	0	True				
ANR	6273710	EqualityExpression	GetLastError ( ) == ERROR_ENVVAR_NOT_FOUND		6273619	0		==			
ANR	6273711	CallExpression	GetLastError ( )		6273619	0					
ANR	6273712	Callee	GetLastError		6273619	0					
ANR	6273713	Identifier	GetLastError		6273619	0					
ANR	6273714	ArgumentList			6273619	1					
ANR	6273715	Identifier	ERROR_ENVVAR_NOT_FOUND		6273619	1					
ANR	6273716	CompoundStatement		17:49:396:396	6273619	1					
ANR	6273717	GotoStatement	goto err_r_sys_get_env ;	486:3:10235:10257	6273619	0	True				
ANR	6273718	Identifier	err_r_sys_get_env		6273619	0					
ANR	6273719	ElseStatement	else		6273619	0					
ANR	6273720	IfStatement	if ( TMP_BUFSIZE < dwRet )		6273619	0					
ANR	6273721	Condition	TMP_BUFSIZE < dwRet	488:12:10275:10293	6273619	0	True				
ANR	6273722	RelationalExpression	TMP_BUFSIZE < dwRet		6273619	0		<			
ANR	6273723	Identifier	TMP_BUFSIZE		6273619	0					
ANR	6273724	Identifier	dwRet		6273619	1					
ANR	6273725	CompoundStatement		20:33:462:462	6273619	1					
ANR	6273726	ExpressionStatement	"tmp_ptr = ( LPTSTR ) realloc ( envbuf , dwRet * sizeof ( TCHAR ) )"	489:2:10300:10358	6273619	0	True				
ANR	6273727	AssignmentExpression	"tmp_ptr = ( LPTSTR ) realloc ( envbuf , dwRet * sizeof ( TCHAR ) )"		6273619	0		=			
ANR	6273728	Identifier	tmp_ptr		6273619	0					
ANR	6273729	CastExpression	"( LPTSTR ) realloc ( envbuf , dwRet * sizeof ( TCHAR ) )"		6273619	1					
ANR	6273730	CastTarget	LPTSTR		6273619	0					
ANR	6273731	CallExpression	"realloc ( envbuf , dwRet * sizeof ( TCHAR ) )"		6273619	1					
ANR	6273732	Callee	realloc		6273619	0					
ANR	6273733	Identifier	realloc		6273619	0					
ANR	6273734	ArgumentList	envbuf		6273619	1					
ANR	6273735	Argument	envbuf		6273619	0					
ANR	6273736	Identifier	envbuf		6273619	0					
ANR	6273737	Argument	dwRet * sizeof ( TCHAR )		6273619	1					
ANR	6273738	MultiplicativeExpression	dwRet * sizeof ( TCHAR )		6273619	0		*			
ANR	6273739	Identifier	dwRet		6273619	0					
ANR	6273740	SizeofExpression	sizeof ( TCHAR )		6273619	1					
ANR	6273741	Sizeof	sizeof		6273619	0					
ANR	6273742	SizeofOperand	TCHAR		6273619	1					
ANR	6273743	IfStatement	if ( ! tmp_ptr )		6273619	1					
ANR	6273744	Condition	! tmp_ptr	490:6:10366:10373	6273619	0	True				
ANR	6273745	UnaryOperationExpression	! tmp_ptr		6273619	0					
ANR	6273746	UnaryOperator	!		6273619	0					
ANR	6273747	Identifier	tmp_ptr		6273619	1					
ANR	6273748	CompoundStatement		22:16:542:542	6273619	1					
ANR	6273749	GotoStatement	goto err_r_sys_get_env ;	491:3:10381:10403	6273619	0	True				
ANR	6273750	Identifier	err_r_sys_get_env		6273619	0					
ANR	6273751	ExpressionStatement	envbuf = tmp_ptr	493:2:10411:10427	6273619	2	True				
ANR	6273752	AssignmentExpression	envbuf = tmp_ptr		6273619	0		=			
ANR	6273753	Identifier	envbuf		6273619	0					
ANR	6273754	Identifier	tmp_ptr		6273619	1					
ANR	6273755	ExpressionStatement	"dwRet = GetEnvironmentVariable ( key_ , envbuf , dwRet )"	494:2:10431:10483	6273619	3	True				
ANR	6273756	AssignmentExpression	"dwRet = GetEnvironmentVariable ( key_ , envbuf , dwRet )"		6273619	0		=			
ANR	6273757	Identifier	dwRet		6273619	0					
ANR	6273758	CallExpression	"GetEnvironmentVariable ( key_ , envbuf , dwRet )"		6273619	1					
ANR	6273759	Callee	GetEnvironmentVariable		6273619	0					
ANR	6273760	Identifier	GetEnvironmentVariable		6273619	0					
ANR	6273761	ArgumentList	key_		6273619	1					
ANR	6273762	Argument	key_		6273619	0					
ANR	6273763	Identifier	key_		6273619	0					
ANR	6273764	Argument	envbuf		6273619	1					
ANR	6273765	Identifier	envbuf		6273619	0					
ANR	6273766	Argument	dwRet		6273619	2					
ANR	6273767	Identifier	dwRet		6273619	0					
ANR	6273768	IfStatement	if ( ! dwRet )		6273619	4					
ANR	6273769	Condition	! dwRet	495:6:10491:10496	6273619	0	True				
ANR	6273770	UnaryOperationExpression	! dwRet		6273619	0					
ANR	6273771	UnaryOperator	!		6273619	0					
ANR	6273772	Identifier	dwRet		6273619	1					
ANR	6273773	CompoundStatement		27:14:665:665	6273619	1					
ANR	6273774	GotoStatement	goto err_r_sys_get_env ;	496:3:10504:10526	6273619	0	True				
ANR	6273775	Identifier	err_r_sys_get_env		6273619	0					
ANR	6273776	ExpressionStatement	"val = r_sys_conv_win_to_utf8_l ( envbuf , ( int ) dwRet )"	499:1:10536:10587	6273619	9	True				
ANR	6273777	AssignmentExpression	"val = r_sys_conv_win_to_utf8_l ( envbuf , ( int ) dwRet )"		6273619	0		=			
ANR	6273778	Identifier	val		6273619	0					
ANR	6273779	CallExpression	"r_sys_conv_win_to_utf8_l ( envbuf , ( int ) dwRet )"		6273619	1					
ANR	6273780	Callee	r_sys_conv_win_to_utf8_l		6273619	0					
ANR	6273781	Identifier	r_sys_conv_win_to_utf8_l		6273619	0					
ANR	6273782	ArgumentList	envbuf		6273619	1					
ANR	6273783	Argument	envbuf		6273619	0					
ANR	6273784	Identifier	envbuf		6273619	0					
ANR	6273785	Argument	( int ) dwRet		6273619	1					
ANR	6273786	CastExpression	( int ) dwRet		6273619	0					
ANR	6273787	CastTarget	int		6273619	0					
ANR	6273788	Identifier	dwRet		6273619	1					
ANR	6273789	Label	err_r_sys_get_env :	500:0:10589:10606	6273619	10	True				
ANR	6273790	Identifier	err_r_sys_get_env		6273619	0					
ANR	6273791	ExpressionStatement	free ( key_ )	501:1:10609:10620	6273619	11	True				
ANR	6273792	CallExpression	free ( key_ )		6273619	0					
ANR	6273793	Callee	free		6273619	0					
ANR	6273794	Identifier	free		6273619	0					
ANR	6273795	ArgumentList	key_		6273619	1					
ANR	6273796	Argument	key_		6273619	0					
ANR	6273797	Identifier	key_		6273619	0					
ANR	6273798	ExpressionStatement	free ( envbuf )	502:1:10623:10636	6273619	12	True				
ANR	6273799	CallExpression	free ( envbuf )		6273619	0					
ANR	6273800	Callee	free		6273619	0					
ANR	6273801	Identifier	free		6273619	0					
ANR	6273802	ArgumentList	envbuf		6273619	1					
ANR	6273803	Argument	envbuf		6273619	0					
ANR	6273804	Identifier	envbuf		6273619	0					
ANR	6273805	ReturnStatement	return val ;	503:1:10639:10649	6273619	13	True				
ANR	6273806	Identifier	val		6273619	0					
ANR	6273807	ReturnType	R_API char *		6273619	1					
ANR	6273808	Identifier	r_sys_getenv		6273619	2					
ANR	6273809	ParameterList	const char * key		6273619	3					
ANR	6273810	Parameter	const char * key	469:25:9816:9830	6273619	0	True				
ANR	6273811	ParameterType	const char *		6273619	0					
ANR	6273812	Identifier	key		6273619	1					
ANR	6273813	CFGEntryNode	ENTRY		6273619		True				
ANR	6273814	CFGExitNode	EXIT		6273619		True				
ANR	6273815	Symbol	val		6273619						
ANR	6273816	Symbol	malloc		6273619						
ANR	6273817	Symbol	GetEnvironmentVariable		6273619						
ANR	6273818	Symbol	NULL		6273619						
ANR	6273819	Symbol	realloc		6273619						
ANR	6273820	Symbol	tmp_ptr		6273619						
ANR	6273821	Symbol	ERROR_ENVVAR_NOT_FOUND		6273619						
ANR	6273822	Symbol	TMP_BUFSIZE		6273619						
ANR	6273823	Symbol	key_		6273619						
ANR	6273824	Symbol	dwRet		6273619						
ANR	6273825	Symbol	GetLastError		6273619						
ANR	6273826	Symbol	envbuf		6273619						
ANR	6273827	Symbol	r_sys_conv_win_to_utf8_l		6273619						
ANR	6273828	Symbol	key		6273619						
ANR	6273829	Symbol	r_sys_conv_utf8_to_win		6273619						
ANR	6273830	Function	r_sys_getdir	514:0:10756:10871							
ANR	6273831	FunctionDef	r_sys_getdir ()		6273830	0					
ANR	6273832	CompoundStatement		514:31:10787:10871	6273830	0					
ANR	6273833	ReturnStatement	"return _getcwd ( NULL , 0 ) ;"	516:1:10806:10830	6273830	0	True				
ANR	6273834	CallExpression	"_getcwd ( NULL , 0 )"		6273830	0					
ANR	6273835	Callee	_getcwd		6273830	0					
ANR	6273836	Identifier	_getcwd		6273830	0					
ANR	6273837	ArgumentList	NULL		6273830	1					
ANR	6273838	Argument	NULL		6273830	0					
ANR	6273839	Identifier	NULL		6273830	0					
ANR	6273840	Argument	0		6273830	1					
ANR	6273841	PrimaryExpression	0		6273830	0					
ANR	6273842	ReturnType	R_API char *		6273830	1					
ANR	6273843	Identifier	r_sys_getdir		6273830	2					
ANR	6273844	ParameterList			6273830	3					
ANR	6273845	CFGEntryNode	ENTRY		6273830		True				
ANR	6273846	CFGExitNode	EXIT		6273830		True				
ANR	6273847	Symbol	_getcwd		6273830						
ANR	6273848	Symbol	NULL		6273830						
ANR	6273849	Function	r_sys_chdir	522:0:10874:10945							
ANR	6273850	FunctionDef	r_sys_chdir (const char * s)		6273849	0					
ANR	6273851	CompoundStatement		522:37:10911:10945	6273849	0					
ANR	6273852	ReturnStatement	return r_sandbox_chdir ( s ) == 0 ;	523:1:10914:10943	6273849	0	True				
ANR	6273853	EqualityExpression	r_sandbox_chdir ( s ) == 0		6273849	0		==			
ANR	6273854	CallExpression	r_sandbox_chdir ( s )		6273849	0					
ANR	6273855	Callee	r_sandbox_chdir		6273849	0					
ANR	6273856	Identifier	r_sandbox_chdir		6273849	0					
ANR	6273857	ArgumentList	s		6273849	1					
ANR	6273858	Argument	s		6273849	0					
ANR	6273859	Identifier	s		6273849	0					
ANR	6273860	PrimaryExpression	0		6273849	1					
ANR	6273861	ReturnType	R_API int		6273849	1					
ANR	6273862	Identifier	r_sys_chdir		6273849	2					
ANR	6273863	ParameterList	const char * s		6273849	3					
ANR	6273864	Parameter	const char * s	522:22:10896:10908	6273849	0	True				
ANR	6273865	ParameterType	const char *		6273849	0					
ANR	6273866	Identifier	s		6273849	1					
ANR	6273867	CFGEntryNode	ENTRY		6273849		True				
ANR	6273868	CFGExitNode	EXIT		6273849		True				
ANR	6273869	Symbol	s		6273849						
ANR	6273870	Symbol	r_sandbox_chdir		6273849						
ANR	6273871	Function	r_sys_aslr	526:0:10948:11752							
ANR	6273872	FunctionDef	r_sys_aslr (int val)		6273871	0					
ANR	6273873	CompoundStatement		526:31:10979:11752	6273871	0					
ANR	6273874	IdentifierDeclStatement	bool ret = true ;	527:1:10982:10997	6273871	0	True				
ANR	6273875	IdentifierDecl	ret = true		6273871	0					
ANR	6273876	IdentifierDeclType	bool		6273871	0					
ANR	6273877	Identifier	ret		6273871	1					
ANR	6273878	AssignmentExpression	ret = true		6273871	2		=			
ANR	6273879	Identifier	true		6273871	0					
ANR	6273880	Identifier	true		6273871	1					
ANR	6273881	IdentifierDeclStatement	"const char * rva = ""/proc/sys/kernel/randomize_va_space"" ;"	529:1:11014:11069	6273871	1	True				
ANR	6273882	IdentifierDecl	"* rva = ""/proc/sys/kernel/randomize_va_space"""		6273871	0					
ANR	6273883	IdentifierDeclType	const char *		6273871	0					
ANR	6273884	Identifier	rva		6273871	1					
ANR	6273885	AssignmentExpression	"* rva = ""/proc/sys/kernel/randomize_va_space"""		6273871	2		=			
ANR	6273886	Identifier	rva		6273871	0					
ANR	6273887	PrimaryExpression	"""/proc/sys/kernel/randomize_va_space"""		6273871	1					
ANR	6273888	IdentifierDeclStatement	char buf [ 3 ] = { 0 } ;	530:1:11072:11089	6273871	2	True				
ANR	6273889	IdentifierDecl	buf [ 3 ] = { 0 }		6273871	0					
ANR	6273890	IdentifierDeclType	char [ 3 ]		6273871	0					
ANR	6273891	Identifier	buf		6273871	1					
ANR	6273892	PrimaryExpression	3		6273871	2					
ANR	6273893	AssignmentExpression	buf [ 3 ] = { 0 }		6273871	3		=			
ANR	6273894	Identifier	buf		6273871	0					
ANR	6273895	InitializerList	0		6273871	1					
ANR	6273896	PrimaryExpression	0		6273871	0					
ANR	6273897	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%d\\n"" , val != 0 ? 2 : 0 )"	531:1:11092:11145	6273871	3	True				
ANR	6273898	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%d\\n"" , val != 0 ? 2 : 0 )"		6273871	0					
ANR	6273899	Callee	snprintf		6273871	0					
ANR	6273900	Identifier	snprintf		6273871	0					
ANR	6273901	ArgumentList	buf		6273871	1					
ANR	6273902	Argument	buf		6273871	0					
ANR	6273903	Identifier	buf		6273871	0					
ANR	6273904	Argument	sizeof ( buf )		6273871	1					
ANR	6273905	SizeofExpression	sizeof ( buf )		6273871	0					
ANR	6273906	Sizeof	sizeof		6273871	0					
ANR	6273907	SizeofOperand	buf		6273871	1					
ANR	6273908	Argument	"""%d\\n"""		6273871	2					
ANR	6273909	PrimaryExpression	"""%d\\n"""		6273871	0					
ANR	6273910	Argument	val != 0 ? 2 : 0		6273871	3					
ANR	6273911	ConditionalExpression	val != 0 ? 2 : 0		6273871	0					
ANR	6273912	Condition	val != 0		6273871	0					
ANR	6273913	EqualityExpression	val != 0		6273871	0		!=			
ANR	6273914	Identifier	val		6273871	0					
ANR	6273915	PrimaryExpression	0		6273871	1					
ANR	6273916	PrimaryExpression	2		6273871	1					
ANR	6273917	PrimaryExpression	0		6273871	2					
ANR	6273918	IdentifierDeclStatement	"int fd = r_sandbox_open ( rva , O_WRONLY , 0644 ) ;"	532:1:11148:11193	6273871	4	True				
ANR	6273919	IdentifierDecl	"fd = r_sandbox_open ( rva , O_WRONLY , 0644 )"		6273871	0					
ANR	6273920	IdentifierDeclType	int		6273871	0					
ANR	6273921	Identifier	fd		6273871	1					
ANR	6273922	AssignmentExpression	"fd = r_sandbox_open ( rva , O_WRONLY , 0644 )"		6273871	2		=			
ANR	6273923	Identifier	fd		6273871	0					
ANR	6273924	CallExpression	"r_sandbox_open ( rva , O_WRONLY , 0644 )"		6273871	1					
ANR	6273925	Callee	r_sandbox_open		6273871	0					
ANR	6273926	Identifier	r_sandbox_open		6273871	0					
ANR	6273927	ArgumentList	rva		6273871	1					
ANR	6273928	Argument	rva		6273871	0					
ANR	6273929	Identifier	rva		6273871	0					
ANR	6273930	Argument	O_WRONLY		6273871	1					
ANR	6273931	Identifier	O_WRONLY		6273871	0					
ANR	6273932	Argument	0644		6273871	2					
ANR	6273933	PrimaryExpression	0644		6273871	0					
ANR	6273934	IfStatement	if ( fd != - 1 )		6273871	5					
ANR	6273935	Condition	fd != - 1	533:5:11200:11207	6273871	0	True				
ANR	6273936	EqualityExpression	fd != - 1		6273871	0		!=			
ANR	6273937	Identifier	fd		6273871	0					
ANR	6273938	UnaryOperationExpression	- 1		6273871	1					
ANR	6273939	UnaryOperator	-		6273871	0					
ANR	6273940	PrimaryExpression	1		6273871	1					
ANR	6273941	CompoundStatement		8:15:230:230	6273871	1					
ANR	6273942	IfStatement	"if ( r_sandbox_write ( fd , ( ut8 * ) buf , sizeof ( buf ) ) != sizeof ( buf ) )"		6273871	0					
ANR	6273943	Condition	"r_sandbox_write ( fd , ( ut8 * ) buf , sizeof ( buf ) ) != sizeof ( buf )"	534:6:11218:11279	6273871	0	True				
ANR	6273944	EqualityExpression	"r_sandbox_write ( fd , ( ut8 * ) buf , sizeof ( buf ) ) != sizeof ( buf )"		6273871	0		!=			
ANR	6273945	CallExpression	"r_sandbox_write ( fd , ( ut8 * ) buf , sizeof ( buf ) )"		6273871	0					
ANR	6273946	Callee	r_sandbox_write		6273871	0					
ANR	6273947	Identifier	r_sandbox_write		6273871	0					
ANR	6273948	ArgumentList	fd		6273871	1					
ANR	6273949	Argument	fd		6273871	0					
ANR	6273950	Identifier	fd		6273871	0					
ANR	6273951	Argument	( ut8 * ) buf		6273871	1					
ANR	6273952	CastExpression	( ut8 * ) buf		6273871	0					
ANR	6273953	CastTarget	ut8 *		6273871	0					
ANR	6273954	Identifier	buf		6273871	1					
ANR	6273955	Argument	sizeof ( buf )		6273871	2					
ANR	6273956	SizeofExpression	sizeof ( buf )		6273871	0					
ANR	6273957	Sizeof	sizeof		6273871	0					
ANR	6273958	SizeofOperand	buf		6273871	1					
ANR	6273959	SizeofExpression	sizeof ( buf )		6273871	1					
ANR	6273960	Sizeof	sizeof		6273871	0					
ANR	6273961	SizeofOperand	buf		6273871	1					
ANR	6273962	CompoundStatement		9:70:302:302	6273871	1					
ANR	6273963	ExpressionStatement	"eprintf ( ""Failed to set RVA\\n"" )"	535:3:11287:11318	6273871	0	True				
ANR	6273964	CallExpression	"eprintf ( ""Failed to set RVA\\n"" )"		6273871	0					
ANR	6273965	Callee	eprintf		6273871	0					
ANR	6273966	Identifier	eprintf		6273871	0					
ANR	6273967	ArgumentList	"""Failed to set RVA\\n"""		6273871	1					
ANR	6273968	Argument	"""Failed to set RVA\\n"""		6273871	0					
ANR	6273969	PrimaryExpression	"""Failed to set RVA\\n"""		6273871	0					
ANR	6273970	ExpressionStatement	ret = false	536:3:11323:11334	6273871	1	True				
ANR	6273971	AssignmentExpression	ret = false		6273871	0		=			
ANR	6273972	Identifier	ret		6273871	0					
ANR	6273973	Identifier	false		6273871	1					
ANR	6273974	ExpressionStatement	close ( fd )	538:2:11342:11352	6273871	1	True				
ANR	6273975	CallExpression	close ( fd )		6273871	0					
ANR	6273976	Callee	close		6273871	0					
ANR	6273977	Identifier	close		6273871	0					
ANR	6273978	ArgumentList	fd		6273871	1					
ANR	6273979	Argument	fd		6273871	0					
ANR	6273980	Identifier	fd		6273871	0					
ANR	6273981	ReturnStatement	return ret ;	554:1:11740:11750	6273871	6	True				
ANR	6273982	Identifier	ret		6273871	0					
ANR	6273983	ReturnType	R_API bool		6273871	1					
ANR	6273984	Identifier	r_sys_aslr		6273871	2					
ANR	6273985	ParameterList	int val		6273871	3					
ANR	6273986	Parameter	int val	526:22:10970:10976	6273871	0	True				
ANR	6273987	ParameterType	int		6273871	0					
ANR	6273988	Identifier	val		6273871	1					
ANR	6273989	CFGEntryNode	ENTRY		6273871		True				
ANR	6273990	CFGExitNode	EXIT		6273871		True				
ANR	6273991	Symbol	val		6273871						
ANR	6273992	Symbol	ret		6273871						
ANR	6273993	Symbol	buf		6273871						
ANR	6273994	Symbol	r_sandbox_open		6273871						
ANR	6273995	Symbol	true		6273871						
ANR	6273996	Symbol	false		6273871						
ANR	6273997	Symbol	r_sandbox_write		6273871						
ANR	6273998	Symbol	rva		6273871						
ANR	6273999	Symbol	O_WRONLY		6273871						
ANR	6274000	Symbol	fd		6273871						
ANR	6274001	Function	r_sys_thp_mode	557:0:11755:12102							
ANR	6274002	FunctionDef	r_sys_thp_mode ()		6274001	0					
ANR	6274003	CompoundStatement		557:31:11786:12102	6274001	0					
ANR	6274004	IdentifierDeclStatement	"const char * thp = ""/sys/kernel/mm/transparent_hugepage/enabled"" ;"	559:1:11803:11866	6274001	0	True				
ANR	6274005	IdentifierDecl	"* thp = ""/sys/kernel/mm/transparent_hugepage/enabled"""		6274001	0					
ANR	6274006	IdentifierDeclType	const char *		6274001	0					
ANR	6274007	Identifier	thp		6274001	1					
ANR	6274008	AssignmentExpression	"* thp = ""/sys/kernel/mm/transparent_hugepage/enabled"""		6274001	2		=			
ANR	6274009	Identifier	thp		6274001	0					
ANR	6274010	PrimaryExpression	"""/sys/kernel/mm/transparent_hugepage/enabled"""		6274001	1					
ANR	6274011	IdentifierDeclStatement	int sz ;	560:1:11869:11875	6274001	1	True				
ANR	6274012	IdentifierDecl	sz		6274001	0					
ANR	6274013	IdentifierDeclType	int		6274001	0					
ANR	6274014	Identifier	sz		6274001	1					
ANR	6274015	IdentifierDeclStatement	int ret = 0 ;	561:1:11878:11889	6274001	2	True				
ANR	6274016	IdentifierDecl	ret = 0		6274001	0					
ANR	6274017	IdentifierDeclType	int		6274001	0					
ANR	6274018	Identifier	ret		6274001	1					
ANR	6274019	AssignmentExpression	ret = 0		6274001	2		=			
ANR	6274020	Identifier	ret		6274001	0					
ANR	6274021	PrimaryExpression	0		6274001	1					
ANR	6274022	IdentifierDeclStatement	"char * val = r_file_slurp ( thp , & sz ) ;"	562:1:11892:11927	6274001	3	True				
ANR	6274023	IdentifierDecl	"* val = r_file_slurp ( thp , & sz )"		6274001	0					
ANR	6274024	IdentifierDeclType	char *		6274001	0					
ANR	6274025	Identifier	val		6274001	1					
ANR	6274026	AssignmentExpression	"* val = r_file_slurp ( thp , & sz )"		6274001	2		=			
ANR	6274027	Identifier	val		6274001	0					
ANR	6274028	CallExpression	"r_file_slurp ( thp , & sz )"		6274001	1					
ANR	6274029	Callee	r_file_slurp		6274001	0					
ANR	6274030	Identifier	r_file_slurp		6274001	0					
ANR	6274031	ArgumentList	thp		6274001	1					
ANR	6274032	Argument	thp		6274001	0					
ANR	6274033	Identifier	thp		6274001	0					
ANR	6274034	Argument	& sz		6274001	1					
ANR	6274035	UnaryOperationExpression	& sz		6274001	0					
ANR	6274036	UnaryOperator	&		6274001	0					
ANR	6274037	Identifier	sz		6274001	1					
ANR	6274038	IfStatement	if ( val )		6274001	4					
ANR	6274039	Condition	val	563:5:11935:11937	6274001	0	True				
ANR	6274040	Identifier	val		6274001	0					
ANR	6274041	CompoundStatement		7:10:153:153	6274001	1					
ANR	6274042	IfStatement	"if ( strstr ( val , ""[madvise]"" ) )"		6274001	0					
ANR	6274043	Condition	"strstr ( val , ""[madvise]"" )"	564:6:11948:11972	6274001	0	True				
ANR	6274044	CallExpression	"strstr ( val , ""[madvise]"" )"		6274001	0					
ANR	6274045	Callee	strstr		6274001	0					
ANR	6274046	Identifier	strstr		6274001	0					
ANR	6274047	ArgumentList	val		6274001	1					
ANR	6274048	Argument	val		6274001	0					
ANR	6274049	Identifier	val		6274001	0					
ANR	6274050	Argument	"""[madvise]"""		6274001	1					
ANR	6274051	PrimaryExpression	"""[madvise]"""		6274001	0					
ANR	6274052	CompoundStatement		8:33:188:188	6274001	1					
ANR	6274053	ExpressionStatement	ret = 1	565:3:11980:11987	6274001	0	True				
ANR	6274054	AssignmentExpression	ret = 1		6274001	0		=			
ANR	6274055	Identifier	ret		6274001	0					
ANR	6274056	PrimaryExpression	1		6274001	1					
ANR	6274057	ElseStatement	else		6274001	0					
ANR	6274058	IfStatement	"if ( strstr ( val , ""[always]"" ) )"		6274001	0					
ANR	6274059	Condition	"strstr ( val , ""[always]"" )"	566:13:12002:12025	6274001	0	True				
ANR	6274060	CallExpression	"strstr ( val , ""[always]"" )"		6274001	0					
ANR	6274061	Callee	strstr		6274001	0					
ANR	6274062	Identifier	strstr		6274001	0					
ANR	6274063	ArgumentList	val		6274001	1					
ANR	6274064	Argument	val		6274001	0					
ANR	6274065	Identifier	val		6274001	0					
ANR	6274066	Argument	"""[always]"""		6274001	1					
ANR	6274067	PrimaryExpression	"""[always]"""		6274001	0					
ANR	6274068	CompoundStatement		10:39:241:241	6274001	1					
ANR	6274069	ExpressionStatement	ret = 2	567:3:12033:12040	6274001	0	True				
ANR	6274070	AssignmentExpression	ret = 2		6274001	0		=			
ANR	6274071	Identifier	ret		6274001	0					
ANR	6274072	PrimaryExpression	2		6274001	1					
ANR	6274073	ExpressionStatement	free ( val )	569:2:12048:12058	6274001	1	True				
ANR	6274074	CallExpression	free ( val )		6274001	0					
ANR	6274075	Callee	free		6274001	0					
ANR	6274076	Identifier	free		6274001	0					
ANR	6274077	ArgumentList	val		6274001	1					
ANR	6274078	Argument	val		6274001	0					
ANR	6274079	Identifier	val		6274001	0					
ANR	6274080	ReturnStatement	return ret ;	572:1:12065:12075	6274001	5	True				
ANR	6274081	Identifier	ret		6274001	0					
ANR	6274082	ReturnType	R_API int		6274001	1					
ANR	6274083	Identifier	r_sys_thp_mode		6274001	2					
ANR	6274084	ParameterList			6274001	3					
ANR	6274085	CFGEntryNode	ENTRY		6274001		True				
ANR	6274086	CFGExitNode	EXIT		6274001		True				
ANR	6274087	Symbol	ret		6274001						
ANR	6274088	Symbol	val		6274001						
ANR	6274089	Symbol	& sz		6274001						
ANR	6274090	Symbol	r_file_slurp		6274001						
ANR	6274091	Symbol	strstr		6274001						
ANR	6274092	Symbol	sz		6274001						
ANR	6274093	Symbol	thp		6274001						
ANR	6274094	Function	r_sys_cmd_str_full	579:0:12118:15334							
ANR	6274095	FunctionDef	"r_sys_cmd_str_full (const char * cmd , const char * input , char * * output , int * len , char * * sterr)"		6274094	0					
ANR	6274096	CompoundStatement		579:104:12222:15334	6274094	0					
ANR	6274097	IdentifierDeclStatement	char * mysterr = NULL ;	580:1:12225:12245	6274094	0	True				
ANR	6274098	IdentifierDecl	* mysterr = NULL		6274094	0					
ANR	6274099	IdentifierDeclType	char *		6274094	0					
ANR	6274100	Identifier	mysterr		6274094	1					
ANR	6274101	AssignmentExpression	* mysterr = NULL		6274094	2		=			
ANR	6274102	Identifier	NULL		6274094	0					
ANR	6274103	Identifier	NULL		6274094	1					
ANR	6274104	IfStatement	if ( ! sterr )		6274094	1					
ANR	6274105	Condition	! sterr	581:5:12252:12257	6274094	0	True				
ANR	6274106	UnaryOperationExpression	! sterr		6274094	0					
ANR	6274107	UnaryOperator	!		6274094	0					
ANR	6274108	Identifier	sterr		6274094	1					
ANR	6274109	CompoundStatement		3:13:37:37	6274094	1					
ANR	6274110	ExpressionStatement	sterr = & mysterr	582:2:12264:12280	6274094	0	True				
ANR	6274111	AssignmentExpression	sterr = & mysterr		6274094	0		=			
ANR	6274112	Identifier	sterr		6274094	0					
ANR	6274113	UnaryOperationExpression	& mysterr		6274094	1					
ANR	6274114	UnaryOperator	&		6274094	0					
ANR	6274115	Identifier	mysterr		6274094	1					
ANR	6274116	IdentifierDeclStatement	"char buffer [ 1024 ] , * outputptr = NULL ;"	584:1:12286:12322	6274094	2	True				
ANR	6274117	IdentifierDecl	buffer [ 1024 ]		6274094	0					
ANR	6274118	IdentifierDeclType	char [ 1024 ]		6274094	0					
ANR	6274119	Identifier	buffer		6274094	1					
ANR	6274120	PrimaryExpression	1024		6274094	2					
ANR	6274121	IdentifierDecl	* outputptr = NULL		6274094	1					
ANR	6274122	IdentifierDeclType	char *		6274094	0					
ANR	6274123	Identifier	outputptr		6274094	1					
ANR	6274124	AssignmentExpression	* outputptr = NULL		6274094	2		=			
ANR	6274125	Identifier	NULL		6274094	0					
ANR	6274126	Identifier	NULL		6274094	1					
ANR	6274127	IdentifierDeclStatement	char * inputptr = ( char * ) input ;	585:1:12325:12355	6274094	3	True				
ANR	6274128	IdentifierDecl	* inputptr = ( char * ) input		6274094	0					
ANR	6274129	IdentifierDeclType	char *		6274094	0					
ANR	6274130	Identifier	inputptr		6274094	1					
ANR	6274131	AssignmentExpression	* inputptr = ( char * ) input		6274094	2		=			
ANR	6274132	Identifier	inputptr		6274094	0					
ANR	6274133	CastExpression	( char * ) input		6274094	1					
ANR	6274134	CastTarget	char *		6274094	0					
ANR	6274135	Identifier	input		6274094	1					
ANR	6274136	IdentifierDeclStatement	"int pid , bytes = 0 , status ;"	586:1:12358:12384	6274094	4	True				
ANR	6274137	IdentifierDecl	pid		6274094	0					
ANR	6274138	IdentifierDeclType	int		6274094	0					
ANR	6274139	Identifier	pid		6274094	1					
ANR	6274140	IdentifierDecl	bytes = 0		6274094	1					
ANR	6274141	IdentifierDeclType	int		6274094	0					
ANR	6274142	Identifier	bytes		6274094	1					
ANR	6274143	AssignmentExpression	bytes = 0		6274094	2		=			
ANR	6274144	Identifier	bytes		6274094	0					
ANR	6274145	PrimaryExpression	0		6274094	1					
ANR	6274146	IdentifierDecl	status		6274094	2					
ANR	6274147	IdentifierDeclType	int		6274094	0					
ANR	6274148	Identifier	status		6274094	1					
ANR	6274149	IdentifierDeclStatement	"int sh_in [ 2 ] , sh_out [ 2 ] , sh_err [ 2 ] ;"	587:1:12387:12421	6274094	5	True				
ANR	6274150	IdentifierDecl	sh_in [ 2 ]		6274094	0					
ANR	6274151	IdentifierDeclType	int [ 2 ]		6274094	0					
ANR	6274152	Identifier	sh_in		6274094	1					
ANR	6274153	PrimaryExpression	2		6274094	2					
ANR	6274154	IdentifierDecl	sh_out [ 2 ]		6274094	1					
ANR	6274155	IdentifierDeclType	int [ 2 ]		6274094	0					
ANR	6274156	Identifier	sh_out		6274094	1					
ANR	6274157	PrimaryExpression	2		6274094	2					
ANR	6274158	IdentifierDecl	sh_err [ 2 ]		6274094	2					
ANR	6274159	IdentifierDeclType	int [ 2 ]		6274094	0					
ANR	6274160	Identifier	sh_err		6274094	1					
ANR	6274161	PrimaryExpression	2		6274094	2					
ANR	6274162	IfStatement	if ( len )		6274094	6					
ANR	6274163	Condition	len	589:5:12429:12431	6274094	0	True				
ANR	6274164	Identifier	len		6274094	0					
ANR	6274165	CompoundStatement		11:10:211:211	6274094	1					
ANR	6274166	ExpressionStatement	* len = 0	590:2:12438:12446	6274094	0	True				
ANR	6274167	AssignmentExpression	* len = 0		6274094	0		=			
ANR	6274168	UnaryOperationExpression	* len		6274094	0					
ANR	6274169	UnaryOperator	*		6274094	0					
ANR	6274170	Identifier	len		6274094	1					
ANR	6274171	PrimaryExpression	0		6274094	1					
ANR	6274172	IfStatement	if ( pipe ( sh_in ) )		6274094	7					
ANR	6274173	Condition	pipe ( sh_in )	592:5:12456:12467	6274094	0	True				
ANR	6274174	CallExpression	pipe ( sh_in )		6274094	0					
ANR	6274175	Callee	pipe		6274094	0					
ANR	6274176	Identifier	pipe		6274094	0					
ANR	6274177	ArgumentList	sh_in		6274094	1					
ANR	6274178	Argument	sh_in		6274094	0					
ANR	6274179	Identifier	sh_in		6274094	0					
ANR	6274180	CompoundStatement		14:19:247:247	6274094	1					
ANR	6274181	ReturnStatement	return false ;	593:2:12474:12486	6274094	0	True				
ANR	6274182	Identifier	false		6274094	0					
ANR	6274183	IfStatement	if ( output )		6274094	8					
ANR	6274184	Condition	output	595:5:12496:12501	6274094	0	True				
ANR	6274185	Identifier	output		6274094	0					
ANR	6274186	CompoundStatement		17:13:281:281	6274094	1					
ANR	6274187	IfStatement	if ( pipe ( sh_out ) )		6274094	0					
ANR	6274188	Condition	pipe ( sh_out )	596:6:12512:12524	6274094	0	True				
ANR	6274189	CallExpression	pipe ( sh_out )		6274094	0					
ANR	6274190	Callee	pipe		6274094	0					
ANR	6274191	Identifier	pipe		6274094	0					
ANR	6274192	ArgumentList	sh_out		6274094	1					
ANR	6274193	Argument	sh_out		6274094	0					
ANR	6274194	Identifier	sh_out		6274094	0					
ANR	6274195	CompoundStatement		18:21:304:304	6274094	1					
ANR	6274196	ExpressionStatement	close ( sh_in [ 0 ] )	597:3:12532:12548	6274094	0	True				
ANR	6274197	CallExpression	close ( sh_in [ 0 ] )		6274094	0					
ANR	6274198	Callee	close		6274094	0					
ANR	6274199	Identifier	close		6274094	0					
ANR	6274200	ArgumentList	sh_in [ 0 ]		6274094	1					
ANR	6274201	Argument	sh_in [ 0 ]		6274094	0					
ANR	6274202	ArrayIndexing	sh_in [ 0 ]		6274094	0					
ANR	6274203	Identifier	sh_in		6274094	0					
ANR	6274204	PrimaryExpression	0		6274094	1					
ANR	6274205	ExpressionStatement	close ( sh_in [ 1 ] )	598:3:12553:12569	6274094	1	True				
ANR	6274206	CallExpression	close ( sh_in [ 1 ] )		6274094	0					
ANR	6274207	Callee	close		6274094	0					
ANR	6274208	Identifier	close		6274094	0					
ANR	6274209	ArgumentList	sh_in [ 1 ]		6274094	1					
ANR	6274210	Argument	sh_in [ 1 ]		6274094	0					
ANR	6274211	ArrayIndexing	sh_in [ 1 ]		6274094	0					
ANR	6274212	Identifier	sh_in		6274094	0					
ANR	6274213	PrimaryExpression	1		6274094	1					
ANR	6274214	ExpressionStatement	close ( sh_out [ 0 ] )	599:3:12574:12591	6274094	2	True				
ANR	6274215	CallExpression	close ( sh_out [ 0 ] )		6274094	0					
ANR	6274216	Callee	close		6274094	0					
ANR	6274217	Identifier	close		6274094	0					
ANR	6274218	ArgumentList	sh_out [ 0 ]		6274094	1					
ANR	6274219	Argument	sh_out [ 0 ]		6274094	0					
ANR	6274220	ArrayIndexing	sh_out [ 0 ]		6274094	0					
ANR	6274221	Identifier	sh_out		6274094	0					
ANR	6274222	PrimaryExpression	0		6274094	1					
ANR	6274223	ExpressionStatement	close ( sh_out [ 1 ] )	600:3:12596:12613	6274094	3	True				
ANR	6274224	CallExpression	close ( sh_out [ 1 ] )		6274094	0					
ANR	6274225	Callee	close		6274094	0					
ANR	6274226	Identifier	close		6274094	0					
ANR	6274227	ArgumentList	sh_out [ 1 ]		6274094	1					
ANR	6274228	Argument	sh_out [ 1 ]		6274094	0					
ANR	6274229	ArrayIndexing	sh_out [ 1 ]		6274094	0					
ANR	6274230	Identifier	sh_out		6274094	0					
ANR	6274231	PrimaryExpression	1		6274094	1					
ANR	6274232	ReturnStatement	return false ;	601:3:12618:12630	6274094	4	True				
ANR	6274233	Identifier	false		6274094	0					
ANR	6274234	IfStatement	if ( pipe ( sh_err ) )		6274094	9					
ANR	6274235	Condition	pipe ( sh_err )	604:5:12644:12656	6274094	0	True				
ANR	6274236	CallExpression	pipe ( sh_err )		6274094	0					
ANR	6274237	Callee	pipe		6274094	0					
ANR	6274238	Identifier	pipe		6274094	0					
ANR	6274239	ArgumentList	sh_err		6274094	1					
ANR	6274240	Argument	sh_err		6274094	0					
ANR	6274241	Identifier	sh_err		6274094	0					
ANR	6274242	CompoundStatement		26:20:436:436	6274094	1					
ANR	6274243	ExpressionStatement	close ( sh_in [ 0 ] )	605:2:12663:12679	6274094	0	True				
ANR	6274244	CallExpression	close ( sh_in [ 0 ] )		6274094	0					
ANR	6274245	Callee	close		6274094	0					
ANR	6274246	Identifier	close		6274094	0					
ANR	6274247	ArgumentList	sh_in [ 0 ]		6274094	1					
ANR	6274248	Argument	sh_in [ 0 ]		6274094	0					
ANR	6274249	ArrayIndexing	sh_in [ 0 ]		6274094	0					
ANR	6274250	Identifier	sh_in		6274094	0					
ANR	6274251	PrimaryExpression	0		6274094	1					
ANR	6274252	ExpressionStatement	close ( sh_in [ 1 ] )	606:2:12683:12699	6274094	1	True				
ANR	6274253	CallExpression	close ( sh_in [ 1 ] )		6274094	0					
ANR	6274254	Callee	close		6274094	0					
ANR	6274255	Identifier	close		6274094	0					
ANR	6274256	ArgumentList	sh_in [ 1 ]		6274094	1					
ANR	6274257	Argument	sh_in [ 1 ]		6274094	0					
ANR	6274258	ArrayIndexing	sh_in [ 1 ]		6274094	0					
ANR	6274259	Identifier	sh_in		6274094	0					
ANR	6274260	PrimaryExpression	1		6274094	1					
ANR	6274261	ReturnStatement	return false ;	607:2:12703:12715	6274094	2	True				
ANR	6274262	Identifier	false		6274094	0					
ANR	6274263	SwitchStatement	switch ( ( pid = r_sys_fork ( ) ) )		6274094	10					
ANR	6274264	Condition	pid = r_sys_fork ( )	610:9:12730:12750	6274094	0	True				
ANR	6274265	AssignmentExpression	pid = r_sys_fork ( )		6274094	0		=			
ANR	6274266	Identifier	pid		6274094	0					
ANR	6274267	CallExpression	r_sys_fork ( )		6274094	1					
ANR	6274268	Callee	r_sys_fork		6274094	0					
ANR	6274269	Identifier	r_sys_fork		6274094	0					
ANR	6274270	ArgumentList			6274094	1					
ANR	6274271	CompoundStatement		131:2:2712:2727	6274094	1					
ANR	6274272	Statement	case	611:1:12756:12759	6274094	0	True				
ANR	6274273	Statement	-	611:6:12761:12761	6274094	1	True				
ANR	6274274	Label	1 :	611:7:12762:12763	6274094	2	True				
ANR	6274275	ReturnStatement	return false ;	612:2:12767:12779	6274094	3	True				
ANR	6274276	Identifier	false		6274094	0					
ANR	6274277	Label	case 0 :	613:1:12782:12788	6274094	4	True				
ANR	6274278	ExpressionStatement	"dup2 ( sh_in [ 0 ] , 0 )"	614:2:12792:12810	6274094	5	True				
ANR	6274279	CallExpression	"dup2 ( sh_in [ 0 ] , 0 )"		6274094	0					
ANR	6274280	Callee	dup2		6274094	0					
ANR	6274281	Identifier	dup2		6274094	0					
ANR	6274282	ArgumentList	sh_in [ 0 ]		6274094	1					
ANR	6274283	Argument	sh_in [ 0 ]		6274094	0					
ANR	6274284	ArrayIndexing	sh_in [ 0 ]		6274094	0					
ANR	6274285	Identifier	sh_in		6274094	0					
ANR	6274286	PrimaryExpression	0		6274094	1					
ANR	6274287	Argument	0		6274094	1					
ANR	6274288	PrimaryExpression	0		6274094	0					
ANR	6274289	ExpressionStatement	close ( sh_in [ 0 ] )	615:2:12814:12830	6274094	6	True				
ANR	6274290	CallExpression	close ( sh_in [ 0 ] )		6274094	0					
ANR	6274291	Callee	close		6274094	0					
ANR	6274292	Identifier	close		6274094	0					
ANR	6274293	ArgumentList	sh_in [ 0 ]		6274094	1					
ANR	6274294	Argument	sh_in [ 0 ]		6274094	0					
ANR	6274295	ArrayIndexing	sh_in [ 0 ]		6274094	0					
ANR	6274296	Identifier	sh_in		6274094	0					
ANR	6274297	PrimaryExpression	0		6274094	1					
ANR	6274298	ExpressionStatement	close ( sh_in [ 1 ] )	616:2:12834:12850	6274094	7	True				
ANR	6274299	CallExpression	close ( sh_in [ 1 ] )		6274094	0					
ANR	6274300	Callee	close		6274094	0					
ANR	6274301	Identifier	close		6274094	0					
ANR	6274302	ArgumentList	sh_in [ 1 ]		6274094	1					
ANR	6274303	Argument	sh_in [ 1 ]		6274094	0					
ANR	6274304	ArrayIndexing	sh_in [ 1 ]		6274094	0					
ANR	6274305	Identifier	sh_in		6274094	0					
ANR	6274306	PrimaryExpression	1		6274094	1					
ANR	6274307	IfStatement	if ( output )		6274094	8					
ANR	6274308	Condition	output	617:6:12858:12863	6274094	0	True				
ANR	6274309	Identifier	output		6274094	0					
ANR	6274310	CompoundStatement		39:14:643:643	6274094	1					
ANR	6274311	ExpressionStatement	"dup2 ( sh_out [ 1 ] , 1 )"	618:3:12871:12890	6274094	0	True				
ANR	6274312	CallExpression	"dup2 ( sh_out [ 1 ] , 1 )"		6274094	0					
ANR	6274313	Callee	dup2		6274094	0					
ANR	6274314	Identifier	dup2		6274094	0					
ANR	6274315	ArgumentList	sh_out [ 1 ]		6274094	1					
ANR	6274316	Argument	sh_out [ 1 ]		6274094	0					
ANR	6274317	ArrayIndexing	sh_out [ 1 ]		6274094	0					
ANR	6274318	Identifier	sh_out		6274094	0					
ANR	6274319	PrimaryExpression	1		6274094	1					
ANR	6274320	Argument	1		6274094	1					
ANR	6274321	PrimaryExpression	1		6274094	0					
ANR	6274322	ExpressionStatement	close ( sh_out [ 0 ] )	619:3:12895:12912	6274094	1	True				
ANR	6274323	CallExpression	close ( sh_out [ 0 ] )		6274094	0					
ANR	6274324	Callee	close		6274094	0					
ANR	6274325	Identifier	close		6274094	0					
ANR	6274326	ArgumentList	sh_out [ 0 ]		6274094	1					
ANR	6274327	Argument	sh_out [ 0 ]		6274094	0					
ANR	6274328	ArrayIndexing	sh_out [ 0 ]		6274094	0					
ANR	6274329	Identifier	sh_out		6274094	0					
ANR	6274330	PrimaryExpression	0		6274094	1					
ANR	6274331	ExpressionStatement	close ( sh_out [ 1 ] )	620:3:12917:12934	6274094	2	True				
ANR	6274332	CallExpression	close ( sh_out [ 1 ] )		6274094	0					
ANR	6274333	Callee	close		6274094	0					
ANR	6274334	Identifier	close		6274094	0					
ANR	6274335	ArgumentList	sh_out [ 1 ]		6274094	1					
ANR	6274336	Argument	sh_out [ 1 ]		6274094	0					
ANR	6274337	ArrayIndexing	sh_out [ 1 ]		6274094	0					
ANR	6274338	Identifier	sh_out		6274094	0					
ANR	6274339	PrimaryExpression	1		6274094	1					
ANR	6274340	IfStatement	if ( sterr )		6274094	9					
ANR	6274341	Condition	sterr	622:6:12946:12950	6274094	0	True				
ANR	6274342	Identifier	sterr		6274094	0					
ANR	6274343	CompoundStatement		44:13:730:730	6274094	1					
ANR	6274344	ExpressionStatement	"dup2 ( sh_err [ 1 ] , 2 )"	623:3:12958:12977	6274094	0	True				
ANR	6274345	CallExpression	"dup2 ( sh_err [ 1 ] , 2 )"		6274094	0					
ANR	6274346	Callee	dup2		6274094	0					
ANR	6274347	Identifier	dup2		6274094	0					
ANR	6274348	ArgumentList	sh_err [ 1 ]		6274094	1					
ANR	6274349	Argument	sh_err [ 1 ]		6274094	0					
ANR	6274350	ArrayIndexing	sh_err [ 1 ]		6274094	0					
ANR	6274351	Identifier	sh_err		6274094	0					
ANR	6274352	PrimaryExpression	1		6274094	1					
ANR	6274353	Argument	2		6274094	1					
ANR	6274354	PrimaryExpression	2		6274094	0					
ANR	6274355	ElseStatement	else		6274094	0					
ANR	6274356	CompoundStatement		46:9:766:766	6274094	0					
ANR	6274357	ExpressionStatement	close ( 2 )	625:3:12994:13003	6274094	0	True				
ANR	6274358	CallExpression	close ( 2 )		6274094	0					
ANR	6274359	Callee	close		6274094	0					
ANR	6274360	Identifier	close		6274094	0					
ANR	6274361	ArgumentList	2		6274094	1					
ANR	6274362	Argument	2		6274094	0					
ANR	6274363	PrimaryExpression	2		6274094	0					
ANR	6274364	ExpressionStatement	close ( sh_err [ 0 ] )	627:2:13011:13028	6274094	10	True				
ANR	6274365	CallExpression	close ( sh_err [ 0 ] )		6274094	0					
ANR	6274366	Callee	close		6274094	0					
ANR	6274367	Identifier	close		6274094	0					
ANR	6274368	ArgumentList	sh_err [ 0 ]		6274094	1					
ANR	6274369	Argument	sh_err [ 0 ]		6274094	0					
ANR	6274370	ArrayIndexing	sh_err [ 0 ]		6274094	0					
ANR	6274371	Identifier	sh_err		6274094	0					
ANR	6274372	PrimaryExpression	0		6274094	1					
ANR	6274373	ExpressionStatement	close ( sh_err [ 1 ] )	628:2:13032:13049	6274094	11	True				
ANR	6274374	CallExpression	close ( sh_err [ 1 ] )		6274094	0					
ANR	6274375	Callee	close		6274094	0					
ANR	6274376	Identifier	close		6274094	0					
ANR	6274377	ArgumentList	sh_err [ 1 ]		6274094	1					
ANR	6274378	Argument	sh_err [ 1 ]		6274094	0					
ANR	6274379	ArrayIndexing	sh_err [ 1 ]		6274094	0					
ANR	6274380	Identifier	sh_err		6274094	0					
ANR	6274381	PrimaryExpression	1		6274094	1					
ANR	6274382	ExpressionStatement	"exit ( r_sandbox_system ( cmd , 0 ) )"	629:2:13053:13085	6274094	12	True				
ANR	6274383	CallExpression	"exit ( r_sandbox_system ( cmd , 0 ) )"		6274094	0					
ANR	6274384	Callee	exit		6274094	0					
ANR	6274385	Identifier	exit		6274094	0					
ANR	6274386	ArgumentList	"r_sandbox_system ( cmd , 0 )"		6274094	1					
ANR	6274387	Argument	"r_sandbox_system ( cmd , 0 )"		6274094	0					
ANR	6274388	CallExpression	"r_sandbox_system ( cmd , 0 )"		6274094	0					
ANR	6274389	Callee	r_sandbox_system		6274094	0					
ANR	6274390	Identifier	r_sandbox_system		6274094	0					
ANR	6274391	ArgumentList	cmd		6274094	1					
ANR	6274392	Argument	cmd		6274094	0					
ANR	6274393	Identifier	cmd		6274094	0					
ANR	6274394	Argument	0		6274094	1					
ANR	6274395	PrimaryExpression	0		6274094	0					
ANR	6274396	Label	default :	630:1:13088:13095	6274094	13	True				
ANR	6274397	Identifier	default		6274094	0					
ANR	6274398	ExpressionStatement	"outputptr = strdup ( """" )"	631:2:13099:13122	6274094	14	True				
ANR	6274399	AssignmentExpression	"outputptr = strdup ( """" )"		6274094	0		=			
ANR	6274400	Identifier	outputptr		6274094	0					
ANR	6274401	CallExpression	"strdup ( """" )"		6274094	1					
ANR	6274402	Callee	strdup		6274094	0					
ANR	6274403	Identifier	strdup		6274094	0					
ANR	6274404	ArgumentList	""""""		6274094	1					
ANR	6274405	Argument	""""""		6274094	0					
ANR	6274406	PrimaryExpression	""""""		6274094	0					
ANR	6274407	IfStatement	if ( ! outputptr )		6274094	15					
ANR	6274408	Condition	! outputptr	632:6:13130:13139	6274094	0	True				
ANR	6274409	UnaryOperationExpression	! outputptr		6274094	0					
ANR	6274410	UnaryOperator	!		6274094	0					
ANR	6274411	Identifier	outputptr		6274094	1					
ANR	6274412	CompoundStatement		54:18:919:919	6274094	1					
ANR	6274413	ReturnStatement	return false ;	633:3:13147:13159	6274094	0	True				
ANR	6274414	Identifier	false		6274094	0					
ANR	6274415	IfStatement	if ( sterr )		6274094	16					
ANR	6274416	Condition	sterr	635:6:13171:13175	6274094	0	True				
ANR	6274417	Identifier	sterr		6274094	0					
ANR	6274418	CompoundStatement		57:13:955:955	6274094	1					
ANR	6274419	ExpressionStatement	"* sterr = strdup ( """" )"	636:3:13183:13203	6274094	0	True				
ANR	6274420	AssignmentExpression	"* sterr = strdup ( """" )"		6274094	0		=			
ANR	6274421	UnaryOperationExpression	* sterr		6274094	0					
ANR	6274422	UnaryOperator	*		6274094	0					
ANR	6274423	Identifier	sterr		6274094	1					
ANR	6274424	CallExpression	"strdup ( """" )"		6274094	1					
ANR	6274425	Callee	strdup		6274094	0					
ANR	6274426	Identifier	strdup		6274094	0					
ANR	6274427	ArgumentList	""""""		6274094	1					
ANR	6274428	Argument	""""""		6274094	0					
ANR	6274429	PrimaryExpression	""""""		6274094	0					
ANR	6274430	IfStatement	if ( ! * sterr )		6274094	1					
ANR	6274431	Condition	! * sterr	637:7:13212:13218	6274094	0	True				
ANR	6274432	UnaryOperationExpression	! * sterr		6274094	0					
ANR	6274433	UnaryOperator	!		6274094	0					
ANR	6274434	UnaryOperationExpression	* sterr		6274094	1					
ANR	6274435	UnaryOperator	*		6274094	0					
ANR	6274436	Identifier	sterr		6274094	1					
ANR	6274437	CompoundStatement		59:16:998:998	6274094	1					
ANR	6274438	ExpressionStatement	free ( outputptr )	638:4:13227:13243	6274094	0	True				
ANR	6274439	CallExpression	free ( outputptr )		6274094	0					
ANR	6274440	Callee	free		6274094	0					
ANR	6274441	Identifier	free		6274094	0					
ANR	6274442	ArgumentList	outputptr		6274094	1					
ANR	6274443	Argument	outputptr		6274094	0					
ANR	6274444	Identifier	outputptr		6274094	0					
ANR	6274445	ReturnStatement	return false ;	639:4:13249:13261	6274094	1	True				
ANR	6274446	Identifier	false		6274094	0					
ANR	6274447	IfStatement	if ( output )		6274094	17					
ANR	6274448	Condition	output	642:6:13278:13283	6274094	0	True				
ANR	6274449	Identifier	output		6274094	0					
ANR	6274450	CompoundStatement		64:14:1063:1063	6274094	1					
ANR	6274451	ExpressionStatement	close ( sh_out [ 1 ] )	643:3:13291:13308	6274094	0	True				
ANR	6274452	CallExpression	close ( sh_out [ 1 ] )		6274094	0					
ANR	6274453	Callee	close		6274094	0					
ANR	6274454	Identifier	close		6274094	0					
ANR	6274455	ArgumentList	sh_out [ 1 ]		6274094	1					
ANR	6274456	Argument	sh_out [ 1 ]		6274094	0					
ANR	6274457	ArrayIndexing	sh_out [ 1 ]		6274094	0					
ANR	6274458	Identifier	sh_out		6274094	0					
ANR	6274459	PrimaryExpression	1		6274094	1					
ANR	6274460	ExpressionStatement	close ( sh_err [ 1 ] )	645:2:13316:13333	6274094	18	True				
ANR	6274461	CallExpression	close ( sh_err [ 1 ] )		6274094	0					
ANR	6274462	Callee	close		6274094	0					
ANR	6274463	Identifier	close		6274094	0					
ANR	6274464	ArgumentList	sh_err [ 1 ]		6274094	1					
ANR	6274465	Argument	sh_err [ 1 ]		6274094	0					
ANR	6274466	ArrayIndexing	sh_err [ 1 ]		6274094	0					
ANR	6274467	Identifier	sh_err		6274094	0					
ANR	6274468	PrimaryExpression	1		6274094	1					
ANR	6274469	ExpressionStatement	close ( sh_in [ 0 ] )	646:2:13337:13353	6274094	19	True				
ANR	6274470	CallExpression	close ( sh_in [ 0 ] )		6274094	0					
ANR	6274471	Callee	close		6274094	0					
ANR	6274472	Identifier	close		6274094	0					
ANR	6274473	ArgumentList	sh_in [ 0 ]		6274094	1					
ANR	6274474	Argument	sh_in [ 0 ]		6274094	0					
ANR	6274475	ArrayIndexing	sh_in [ 0 ]		6274094	0					
ANR	6274476	Identifier	sh_in		6274094	0					
ANR	6274477	PrimaryExpression	0		6274094	1					
ANR	6274478	IfStatement	if ( ! inputptr || ! * inputptr )		6274094	20					
ANR	6274479	Condition	! inputptr || ! * inputptr	647:6:13361:13383	6274094	0	True				
ANR	6274480	OrExpression	! inputptr || ! * inputptr		6274094	0		||			
ANR	6274481	UnaryOperationExpression	! inputptr		6274094	0					
ANR	6274482	UnaryOperator	!		6274094	0					
ANR	6274483	Identifier	inputptr		6274094	1					
ANR	6274484	UnaryOperationExpression	! * inputptr		6274094	1					
ANR	6274485	UnaryOperator	!		6274094	0					
ANR	6274486	UnaryOperationExpression	* inputptr		6274094	1					
ANR	6274487	UnaryOperator	*		6274094	0					
ANR	6274488	Identifier	inputptr		6274094	1					
ANR	6274489	CompoundStatement		69:31:1163:1163	6274094	1					
ANR	6274490	ExpressionStatement	close ( sh_in [ 1 ] )	648:3:13391:13407	6274094	0	True				
ANR	6274491	CallExpression	close ( sh_in [ 1 ] )		6274094	0					
ANR	6274492	Callee	close		6274094	0					
ANR	6274493	Identifier	close		6274094	0					
ANR	6274494	ArgumentList	sh_in [ 1 ]		6274094	1					
ANR	6274495	Argument	sh_in [ 1 ]		6274094	0					
ANR	6274496	ArrayIndexing	sh_in [ 1 ]		6274094	0					
ANR	6274497	Identifier	sh_in		6274094	0					
ANR	6274498	PrimaryExpression	1		6274094	1					
ANR	6274499	ExpressionStatement	"signal ( SIGPIPE , SIG_IGN )"	651:2:13465:13490	6274094	21	True				
ANR	6274500	CallExpression	"signal ( SIGPIPE , SIG_IGN )"		6274094	0					
ANR	6274501	Callee	signal		6274094	0					
ANR	6274502	Identifier	signal		6274094	0					
ANR	6274503	ArgumentList	SIGPIPE		6274094	1					
ANR	6274504	Argument	SIGPIPE		6274094	0					
ANR	6274505	Identifier	SIGPIPE		6274094	0					
ANR	6274506	Argument	SIG_IGN		6274094	1					
ANR	6274507	Identifier	SIG_IGN		6274094	0					
ANR	6274508	ForStatement	for ( ; ; )		6274094	22					
ANR	6274509	CompoundStatement		76:3:1307:1314	6274094	0					
ANR	6274510	IdentifierDeclStatement	"fd_set rfds , wfds ;"	653:3:13508:13525	6274094	0	True				
ANR	6274511	IdentifierDecl	rfds		6274094	0					
ANR	6274512	IdentifierDeclType	fd_set		6274094	0					
ANR	6274513	Identifier	rfds		6274094	1					
ANR	6274514	IdentifierDecl	wfds		6274094	1					
ANR	6274515	IdentifierDeclType	fd_set		6274094	0					
ANR	6274516	Identifier	wfds		6274094	1					
ANR	6274517	IdentifierDeclStatement	int nfd ;	654:3:13530:13537	6274094	1	True				
ANR	6274518	IdentifierDecl	nfd		6274094	0					
ANR	6274519	IdentifierDeclType	int		6274094	0					
ANR	6274520	Identifier	nfd		6274094	1					
ANR	6274521	ExpressionStatement	FD_ZERO ( & rfds )	655:3:13542:13557	6274094	2	True				
ANR	6274522	CallExpression	FD_ZERO ( & rfds )		6274094	0					
ANR	6274523	Callee	FD_ZERO		6274094	0					
ANR	6274524	Identifier	FD_ZERO		6274094	0					
ANR	6274525	ArgumentList	& rfds		6274094	1					
ANR	6274526	Argument	& rfds		6274094	0					
ANR	6274527	UnaryOperationExpression	& rfds		6274094	0					
ANR	6274528	UnaryOperator	&		6274094	0					
ANR	6274529	Identifier	rfds		6274094	1					
ANR	6274530	ExpressionStatement	FD_ZERO ( & wfds )	656:3:13562:13577	6274094	3	True				
ANR	6274531	CallExpression	FD_ZERO ( & wfds )		6274094	0					
ANR	6274532	Callee	FD_ZERO		6274094	0					
ANR	6274533	Identifier	FD_ZERO		6274094	0					
ANR	6274534	ArgumentList	& wfds		6274094	1					
ANR	6274535	Argument	& wfds		6274094	0					
ANR	6274536	UnaryOperationExpression	& wfds		6274094	0					
ANR	6274537	UnaryOperator	&		6274094	0					
ANR	6274538	Identifier	wfds		6274094	1					
ANR	6274539	IfStatement	if ( output )		6274094	4					
ANR	6274540	Condition	output	657:7:13586:13591	6274094	0	True				
ANR	6274541	Identifier	output		6274094	0					
ANR	6274542	CompoundStatement		79:15:1371:1371	6274094	1					
ANR	6274543	ExpressionStatement	"FD_SET ( sh_out [ 0 ] , & rfds )"	658:4:13600:13625	6274094	0	True				
ANR	6274544	CallExpression	"FD_SET ( sh_out [ 0 ] , & rfds )"		6274094	0					
ANR	6274545	Callee	FD_SET		6274094	0					
ANR	6274546	Identifier	FD_SET		6274094	0					
ANR	6274547	ArgumentList	sh_out [ 0 ]		6274094	1					
ANR	6274548	Argument	sh_out [ 0 ]		6274094	0					
ANR	6274549	ArrayIndexing	sh_out [ 0 ]		6274094	0					
ANR	6274550	Identifier	sh_out		6274094	0					
ANR	6274551	PrimaryExpression	0		6274094	1					
ANR	6274552	Argument	& rfds		6274094	1					
ANR	6274553	UnaryOperationExpression	& rfds		6274094	0					
ANR	6274554	UnaryOperator	&		6274094	0					
ANR	6274555	Identifier	rfds		6274094	1					
ANR	6274556	IfStatement	if ( sterr )		6274094	5					
ANR	6274557	Condition	sterr	660:7:13639:13643	6274094	0	True				
ANR	6274558	Identifier	sterr		6274094	0					
ANR	6274559	CompoundStatement		82:14:1423:1423	6274094	1					
ANR	6274560	ExpressionStatement	"FD_SET ( sh_err [ 0 ] , & rfds )"	661:4:13652:13677	6274094	0	True				
ANR	6274561	CallExpression	"FD_SET ( sh_err [ 0 ] , & rfds )"		6274094	0					
ANR	6274562	Callee	FD_SET		6274094	0					
ANR	6274563	Identifier	FD_SET		6274094	0					
ANR	6274564	ArgumentList	sh_err [ 0 ]		6274094	1					
ANR	6274565	Argument	sh_err [ 0 ]		6274094	0					
ANR	6274566	ArrayIndexing	sh_err [ 0 ]		6274094	0					
ANR	6274567	Identifier	sh_err		6274094	0					
ANR	6274568	PrimaryExpression	0		6274094	1					
ANR	6274569	Argument	& rfds		6274094	1					
ANR	6274570	UnaryOperationExpression	& rfds		6274094	0					
ANR	6274571	UnaryOperator	&		6274094	0					
ANR	6274572	Identifier	rfds		6274094	1					
ANR	6274573	IfStatement	if ( inputptr && * inputptr )		6274094	6					
ANR	6274574	Condition	inputptr && * inputptr	663:7:13691:13711	6274094	0	True				
ANR	6274575	AndExpression	inputptr && * inputptr		6274094	0		&&			
ANR	6274576	Identifier	inputptr		6274094	0					
ANR	6274577	UnaryOperationExpression	* inputptr		6274094	1					
ANR	6274578	UnaryOperator	*		6274094	0					
ANR	6274579	Identifier	inputptr		6274094	1					
ANR	6274580	CompoundStatement		85:30:1491:1491	6274094	1					
ANR	6274581	ExpressionStatement	"FD_SET ( sh_in [ 1 ] , & wfds )"	664:4:13720:13744	6274094	0	True				
ANR	6274582	CallExpression	"FD_SET ( sh_in [ 1 ] , & wfds )"		6274094	0					
ANR	6274583	Callee	FD_SET		6274094	0					
ANR	6274584	Identifier	FD_SET		6274094	0					
ANR	6274585	ArgumentList	sh_in [ 1 ]		6274094	1					
ANR	6274586	Argument	sh_in [ 1 ]		6274094	0					
ANR	6274587	ArrayIndexing	sh_in [ 1 ]		6274094	0					
ANR	6274588	Identifier	sh_in		6274094	0					
ANR	6274589	PrimaryExpression	1		6274094	1					
ANR	6274590	Argument	& wfds		6274094	1					
ANR	6274591	UnaryOperationExpression	& wfds		6274094	0					
ANR	6274592	UnaryOperator	&		6274094	0					
ANR	6274593	Identifier	wfds		6274094	1					
ANR	6274594	ExpressionStatement	"memset ( buffer , 0 , sizeof ( buffer ) )"	666:3:13754:13789	6274094	7	True				
ANR	6274595	CallExpression	"memset ( buffer , 0 , sizeof ( buffer ) )"		6274094	0					
ANR	6274596	Callee	memset		6274094	0					
ANR	6274597	Identifier	memset		6274094	0					
ANR	6274598	ArgumentList	buffer		6274094	1					
ANR	6274599	Argument	buffer		6274094	0					
ANR	6274600	Identifier	buffer		6274094	0					
ANR	6274601	Argument	0		6274094	1					
ANR	6274602	PrimaryExpression	0		6274094	0					
ANR	6274603	Argument	sizeof ( buffer )		6274094	2					
ANR	6274604	SizeofExpression	sizeof ( buffer )		6274094	0					
ANR	6274605	Sizeof	sizeof		6274094	0					
ANR	6274606	SizeofOperand	buffer		6274094	1					
ANR	6274607	ExpressionStatement	"nfd = select ( sh_err [ 0 ] + 1 , & rfds , & wfds , NULL , NULL )"	667:3:13794:13848	6274094	8	True				
ANR	6274608	AssignmentExpression	"nfd = select ( sh_err [ 0 ] + 1 , & rfds , & wfds , NULL , NULL )"		6274094	0		=			
ANR	6274609	Identifier	nfd		6274094	0					
ANR	6274610	CallExpression	"select ( sh_err [ 0 ] + 1 , & rfds , & wfds , NULL , NULL )"		6274094	1					
ANR	6274611	Callee	select		6274094	0					
ANR	6274612	Identifier	select		6274094	0					
ANR	6274613	ArgumentList	sh_err [ 0 ] + 1		6274094	1					
ANR	6274614	Argument	sh_err [ 0 ] + 1		6274094	0					
ANR	6274615	AdditiveExpression	sh_err [ 0 ] + 1		6274094	0		+			
ANR	6274616	ArrayIndexing	sh_err [ 0 ]		6274094	0					
ANR	6274617	Identifier	sh_err		6274094	0					
ANR	6274618	PrimaryExpression	0		6274094	1					
ANR	6274619	PrimaryExpression	1		6274094	1					
ANR	6274620	Argument	& rfds		6274094	1					
ANR	6274621	UnaryOperationExpression	& rfds		6274094	0					
ANR	6274622	UnaryOperator	&		6274094	0					
ANR	6274623	Identifier	rfds		6274094	1					
ANR	6274624	Argument	& wfds		6274094	2					
ANR	6274625	UnaryOperationExpression	& wfds		6274094	0					
ANR	6274626	UnaryOperator	&		6274094	0					
ANR	6274627	Identifier	wfds		6274094	1					
ANR	6274628	Argument	NULL		6274094	3					
ANR	6274629	Identifier	NULL		6274094	0					
ANR	6274630	Argument	NULL		6274094	4					
ANR	6274631	Identifier	NULL		6274094	0					
ANR	6274632	IfStatement	if ( nfd < 0 )		6274094	9					
ANR	6274633	Condition	nfd < 0	668:7:13857:13863	6274094	0	True				
ANR	6274634	RelationalExpression	nfd < 0		6274094	0		<			
ANR	6274635	Identifier	nfd		6274094	0					
ANR	6274636	PrimaryExpression	0		6274094	1					
ANR	6274637	CompoundStatement		90:16:1643:1643	6274094	1					
ANR	6274638	BreakStatement	break ;	669:4:13872:13877	6274094	0	True				
ANR	6274639	IfStatement	"if ( output && FD_ISSET ( sh_out [ 0 ] , & rfds ) )"		6274094	10					
ANR	6274640	Condition	"output && FD_ISSET ( sh_out [ 0 ] , & rfds )"	671:7:13891:13927	6274094	0	True				
ANR	6274641	AndExpression	"output && FD_ISSET ( sh_out [ 0 ] , & rfds )"		6274094	0		&&			
ANR	6274642	Identifier	output		6274094	0					
ANR	6274643	CallExpression	"FD_ISSET ( sh_out [ 0 ] , & rfds )"		6274094	1					
ANR	6274644	Callee	FD_ISSET		6274094	0					
ANR	6274645	Identifier	FD_ISSET		6274094	0					
ANR	6274646	ArgumentList	sh_out [ 0 ]		6274094	1					
ANR	6274647	Argument	sh_out [ 0 ]		6274094	0					
ANR	6274648	ArrayIndexing	sh_out [ 0 ]		6274094	0					
ANR	6274649	Identifier	sh_out		6274094	0					
ANR	6274650	PrimaryExpression	0		6274094	1					
ANR	6274651	Argument	& rfds		6274094	1					
ANR	6274652	UnaryOperationExpression	& rfds		6274094	0					
ANR	6274653	UnaryOperator	&		6274094	0					
ANR	6274654	Identifier	rfds		6274094	1					
ANR	6274655	CompoundStatement		93:46:1707:1707	6274094	1					
ANR	6274656	IfStatement	"if ( ! ( bytes = read ( sh_out [ 0 ] , buffer , sizeof ( buffer ) - 1 ) ) )"		6274094	0					
ANR	6274657	Condition	"! ( bytes = read ( sh_out [ 0 ] , buffer , sizeof ( buffer ) - 1 ) )"	672:8:13940:13993	6274094	0	True				
ANR	6274658	UnaryOperationExpression	"! ( bytes = read ( sh_out [ 0 ] , buffer , sizeof ( buffer ) - 1 ) )"		6274094	0					
ANR	6274659	UnaryOperator	!		6274094	0					
ANR	6274660	AssignmentExpression	"bytes = read ( sh_out [ 0 ] , buffer , sizeof ( buffer ) - 1 )"		6274094	1		=			
ANR	6274661	Identifier	bytes		6274094	0					
ANR	6274662	CallExpression	"read ( sh_out [ 0 ] , buffer , sizeof ( buffer ) - 1 )"		6274094	1					
ANR	6274663	Callee	read		6274094	0					
ANR	6274664	Identifier	read		6274094	0					
ANR	6274665	ArgumentList	sh_out [ 0 ]		6274094	1					
ANR	6274666	Argument	sh_out [ 0 ]		6274094	0					
ANR	6274667	ArrayIndexing	sh_out [ 0 ]		6274094	0					
ANR	6274668	Identifier	sh_out		6274094	0					
ANR	6274669	PrimaryExpression	0		6274094	1					
ANR	6274670	Argument	buffer		6274094	1					
ANR	6274671	Identifier	buffer		6274094	0					
ANR	6274672	Argument	sizeof ( buffer ) - 1		6274094	2					
ANR	6274673	AdditiveExpression	sizeof ( buffer ) - 1		6274094	0		-			
ANR	6274674	SizeofExpression	sizeof ( buffer )		6274094	0					
ANR	6274675	Sizeof	sizeof		6274094	0					
ANR	6274676	SizeofOperand	buffer		6274094	1					
ANR	6274677	PrimaryExpression	1		6274094	1					
ANR	6274678	CompoundStatement		94:64:1773:1773	6274094	1					
ANR	6274679	BreakStatement	break ;	673:5:14003:14008	6274094	0	True				
ANR	6274680	ExpressionStatement	buffer [ sizeof ( buffer ) - 1 ] = '\\0'	675:4:14020:14054	6274094	1	True				
ANR	6274681	AssignmentExpression	buffer [ sizeof ( buffer ) - 1 ] = '\\0'		6274094	0		=			
ANR	6274682	ArrayIndexing	buffer [ sizeof ( buffer ) - 1 ]		6274094	0					
ANR	6274683	Identifier	buffer		6274094	0					
ANR	6274684	AdditiveExpression	sizeof ( buffer ) - 1		6274094	1		-			
ANR	6274685	SizeofExpression	sizeof ( buffer )		6274094	0					
ANR	6274686	Sizeof	sizeof		6274094	0					
ANR	6274687	SizeofOperand	buffer		6274094	1					
ANR	6274688	PrimaryExpression	1		6274094	1					
ANR	6274689	PrimaryExpression	'\\0'		6274094	1					
ANR	6274690	IfStatement	if ( len )		6274094	2					
ANR	6274691	Condition	len	676:8:14064:14066	6274094	0	True				
ANR	6274692	Identifier	len		6274094	0					
ANR	6274693	CompoundStatement		98:13:1846:1846	6274094	1					
ANR	6274694	ExpressionStatement	* len += bytes	677:5:14076:14089	6274094	0	True				
ANR	6274695	AssignmentExpression	* len += bytes		6274094	0		+=			
ANR	6274696	UnaryOperationExpression	* len		6274094	0					
ANR	6274697	UnaryOperator	*		6274094	0					
ANR	6274698	Identifier	len		6274094	1					
ANR	6274699	Identifier	bytes		6274094	1					
ANR	6274700	ExpressionStatement	"outputptr = r_str_append ( outputptr , buffer )"	679:4:14101:14145	6274094	3	True				
ANR	6274701	AssignmentExpression	"outputptr = r_str_append ( outputptr , buffer )"		6274094	0		=			
ANR	6274702	Identifier	outputptr		6274094	0					
ANR	6274703	CallExpression	"r_str_append ( outputptr , buffer )"		6274094	1					
ANR	6274704	Callee	r_str_append		6274094	0					
ANR	6274705	Identifier	r_str_append		6274094	0					
ANR	6274706	ArgumentList	outputptr		6274094	1					
ANR	6274707	Argument	outputptr		6274094	0					
ANR	6274708	Identifier	outputptr		6274094	0					
ANR	6274709	Argument	buffer		6274094	1					
ANR	6274710	Identifier	buffer		6274094	0					
ANR	6274711	ElseStatement	else		6274094	0					
ANR	6274712	IfStatement	"if ( FD_ISSET ( sh_err [ 0 ] , & rfds ) && sterr )"		6274094	0					
ANR	6274713	Condition	"FD_ISSET ( sh_err [ 0 ] , & rfds ) && sterr"	680:14:14161:14196	6274094	0	True				
ANR	6274714	AndExpression	"FD_ISSET ( sh_err [ 0 ] , & rfds ) && sterr"		6274094	0		&&			
ANR	6274715	CallExpression	"FD_ISSET ( sh_err [ 0 ] , & rfds )"		6274094	0					
ANR	6274716	Callee	FD_ISSET		6274094	0					
ANR	6274717	Identifier	FD_ISSET		6274094	0					
ANR	6274718	ArgumentList	sh_err [ 0 ]		6274094	1					
ANR	6274719	Argument	sh_err [ 0 ]		6274094	0					
ANR	6274720	ArrayIndexing	sh_err [ 0 ]		6274094	0					
ANR	6274721	Identifier	sh_err		6274094	0					
ANR	6274722	PrimaryExpression	0		6274094	1					
ANR	6274723	Argument	& rfds		6274094	1					
ANR	6274724	UnaryOperationExpression	& rfds		6274094	0					
ANR	6274725	UnaryOperator	&		6274094	0					
ANR	6274726	Identifier	rfds		6274094	1					
ANR	6274727	Identifier	sterr		6274094	1					
ANR	6274728	CompoundStatement		102:52:1976:1976	6274094	1					
ANR	6274729	IfStatement	"if ( ! read ( sh_err [ 0 ] , buffer , sizeof ( buffer ) - 1 ) )"		6274094	0					
ANR	6274730	Condition	"! read ( sh_err [ 0 ] , buffer , sizeof ( buffer ) - 1 )"	681:8:14209:14252	6274094	0	True				
ANR	6274731	UnaryOperationExpression	"! read ( sh_err [ 0 ] , buffer , sizeof ( buffer ) - 1 )"		6274094	0					
ANR	6274732	UnaryOperator	!		6274094	0					
ANR	6274733	CallExpression	"read ( sh_err [ 0 ] , buffer , sizeof ( buffer ) - 1 )"		6274094	1					
ANR	6274734	Callee	read		6274094	0					
ANR	6274735	Identifier	read		6274094	0					
ANR	6274736	ArgumentList	sh_err [ 0 ]		6274094	1					
ANR	6274737	Argument	sh_err [ 0 ]		6274094	0					
ANR	6274738	ArrayIndexing	sh_err [ 0 ]		6274094	0					
ANR	6274739	Identifier	sh_err		6274094	0					
ANR	6274740	PrimaryExpression	0		6274094	1					
ANR	6274741	Argument	buffer		6274094	1					
ANR	6274742	Identifier	buffer		6274094	0					
ANR	6274743	Argument	sizeof ( buffer ) - 1		6274094	2					
ANR	6274744	AdditiveExpression	sizeof ( buffer ) - 1		6274094	0		-			
ANR	6274745	SizeofExpression	sizeof ( buffer )		6274094	0					
ANR	6274746	Sizeof	sizeof		6274094	0					
ANR	6274747	SizeofOperand	buffer		6274094	1					
ANR	6274748	PrimaryExpression	1		6274094	1					
ANR	6274749	CompoundStatement		103:54:2032:2032	6274094	1					
ANR	6274750	BreakStatement	break ;	682:5:14262:14267	6274094	0	True				
ANR	6274751	ExpressionStatement	buffer [ sizeof ( buffer ) - 1 ] = '\\0'	684:4:14279:14313	6274094	1	True				
ANR	6274752	AssignmentExpression	buffer [ sizeof ( buffer ) - 1 ] = '\\0'		6274094	0		=			
ANR	6274753	ArrayIndexing	buffer [ sizeof ( buffer ) - 1 ]		6274094	0					
ANR	6274754	Identifier	buffer		6274094	0					
ANR	6274755	AdditiveExpression	sizeof ( buffer ) - 1		6274094	1		-			
ANR	6274756	SizeofExpression	sizeof ( buffer )		6274094	0					
ANR	6274757	Sizeof	sizeof		6274094	0					
ANR	6274758	SizeofOperand	buffer		6274094	1					
ANR	6274759	PrimaryExpression	1		6274094	1					
ANR	6274760	PrimaryExpression	'\\0'		6274094	1					
ANR	6274761	ExpressionStatement	"* sterr = r_str_append ( * sterr , buffer )"	685:4:14319:14357	6274094	2	True				
ANR	6274762	AssignmentExpression	"* sterr = r_str_append ( * sterr , buffer )"		6274094	0		=			
ANR	6274763	UnaryOperationExpression	* sterr		6274094	0					
ANR	6274764	UnaryOperator	*		6274094	0					
ANR	6274765	Identifier	sterr		6274094	1					
ANR	6274766	CallExpression	"r_str_append ( * sterr , buffer )"		6274094	1					
ANR	6274767	Callee	r_str_append		6274094	0					
ANR	6274768	Identifier	r_str_append		6274094	0					
ANR	6274769	ArgumentList	* sterr		6274094	1					
ANR	6274770	Argument	* sterr		6274094	0					
ANR	6274771	UnaryOperationExpression	* sterr		6274094	0					
ANR	6274772	UnaryOperator	*		6274094	0					
ANR	6274773	Identifier	sterr		6274094	1					
ANR	6274774	Argument	buffer		6274094	1					
ANR	6274775	Identifier	buffer		6274094	0					
ANR	6274776	ElseStatement	else		6274094	0					
ANR	6274777	IfStatement	"if ( FD_ISSET ( sh_in [ 1 ] , & wfds ) && inputptr && * inputptr )"		6274094	0					
ANR	6274778	Condition	"FD_ISSET ( sh_in [ 1 ] , & wfds ) && inputptr && * inputptr"	686:14:14373:14423	6274094	0	True				
ANR	6274779	AndExpression	"FD_ISSET ( sh_in [ 1 ] , & wfds ) && inputptr && * inputptr"		6274094	0		&&			
ANR	6274780	CallExpression	"FD_ISSET ( sh_in [ 1 ] , & wfds )"		6274094	0					
ANR	6274781	Callee	FD_ISSET		6274094	0					
ANR	6274782	Identifier	FD_ISSET		6274094	0					
ANR	6274783	ArgumentList	sh_in [ 1 ]		6274094	1					
ANR	6274784	Argument	sh_in [ 1 ]		6274094	0					
ANR	6274785	ArrayIndexing	sh_in [ 1 ]		6274094	0					
ANR	6274786	Identifier	sh_in		6274094	0					
ANR	6274787	PrimaryExpression	1		6274094	1					
ANR	6274788	Argument	& wfds		6274094	1					
ANR	6274789	UnaryOperationExpression	& wfds		6274094	0					
ANR	6274790	UnaryOperator	&		6274094	0					
ANR	6274791	Identifier	wfds		6274094	1					
ANR	6274792	AndExpression	inputptr && * inputptr		6274094	1		&&			
ANR	6274793	Identifier	inputptr		6274094	0					
ANR	6274794	UnaryOperationExpression	* inputptr		6274094	1					
ANR	6274795	UnaryOperator	*		6274094	0					
ANR	6274796	Identifier	inputptr		6274094	1					
ANR	6274797	CompoundStatement		109:4:2209:2245	6274094	1					
ANR	6274798	IdentifierDeclStatement	int inputptr_len = strlen ( inputptr ) ;	687:4:14432:14468	6274094	0	True				
ANR	6274799	IdentifierDecl	inputptr_len = strlen ( inputptr )		6274094	0					
ANR	6274800	IdentifierDeclType	int		6274094	0					
ANR	6274801	Identifier	inputptr_len		6274094	1					
ANR	6274802	AssignmentExpression	inputptr_len = strlen ( inputptr )		6274094	2		=			
ANR	6274803	Identifier	inputptr_len		6274094	0					
ANR	6274804	CallExpression	strlen ( inputptr )		6274094	1					
ANR	6274805	Callee	strlen		6274094	0					
ANR	6274806	Identifier	strlen		6274094	0					
ANR	6274807	ArgumentList	inputptr		6274094	1					
ANR	6274808	Argument	inputptr		6274094	0					
ANR	6274809	Identifier	inputptr		6274094	0					
ANR	6274810	ExpressionStatement	"bytes = write ( sh_in [ 1 ] , inputptr , inputptr_len )"	688:4:14474:14522	6274094	1	True				
ANR	6274811	AssignmentExpression	"bytes = write ( sh_in [ 1 ] , inputptr , inputptr_len )"		6274094	0		=			
ANR	6274812	Identifier	bytes		6274094	0					
ANR	6274813	CallExpression	"write ( sh_in [ 1 ] , inputptr , inputptr_len )"		6274094	1					
ANR	6274814	Callee	write		6274094	0					
ANR	6274815	Identifier	write		6274094	0					
ANR	6274816	ArgumentList	sh_in [ 1 ]		6274094	1					
ANR	6274817	Argument	sh_in [ 1 ]		6274094	0					
ANR	6274818	ArrayIndexing	sh_in [ 1 ]		6274094	0					
ANR	6274819	Identifier	sh_in		6274094	0					
ANR	6274820	PrimaryExpression	1		6274094	1					
ANR	6274821	Argument	inputptr		6274094	1					
ANR	6274822	Identifier	inputptr		6274094	0					
ANR	6274823	Argument	inputptr_len		6274094	2					
ANR	6274824	Identifier	inputptr_len		6274094	0					
ANR	6274825	IfStatement	if ( bytes != inputptr_len )		6274094	2					
ANR	6274826	Condition	bytes != inputptr_len	689:8:14532:14552	6274094	0	True				
ANR	6274827	EqualityExpression	bytes != inputptr_len		6274094	0		!=			
ANR	6274828	Identifier	bytes		6274094	0					
ANR	6274829	Identifier	inputptr_len		6274094	1					
ANR	6274830	CompoundStatement		111:31:2332:2332	6274094	1					
ANR	6274831	BreakStatement	break ;	690:5:14562:14567	6274094	0	True				
ANR	6274832	ExpressionStatement	inputptr += bytes	692:4:14579:14596	6274094	3	True				
ANR	6274833	AssignmentExpression	inputptr += bytes		6274094	0		+=			
ANR	6274834	Identifier	inputptr		6274094	0					
ANR	6274835	Identifier	bytes		6274094	1					
ANR	6274836	IfStatement	if ( ! * inputptr )		6274094	4					
ANR	6274837	Condition	! * inputptr	693:8:14606:14615	6274094	0	True				
ANR	6274838	UnaryOperationExpression	! * inputptr		6274094	0					
ANR	6274839	UnaryOperator	!		6274094	0					
ANR	6274840	UnaryOperationExpression	* inputptr		6274094	1					
ANR	6274841	UnaryOperator	*		6274094	0					
ANR	6274842	Identifier	inputptr		6274094	1					
ANR	6274843	CompoundStatement		115:20:2395:2395	6274094	1					
ANR	6274844	ExpressionStatement	close ( sh_in [ 1 ] )	694:5:14625:14641	6274094	0	True				
ANR	6274845	CallExpression	close ( sh_in [ 1 ] )		6274094	0					
ANR	6274846	Callee	close		6274094	0					
ANR	6274847	Identifier	close		6274094	0					
ANR	6274848	ArgumentList	sh_in [ 1 ]		6274094	1					
ANR	6274849	Argument	sh_in [ 1 ]		6274094	0					
ANR	6274850	ArrayIndexing	sh_in [ 1 ]		6274094	0					
ANR	6274851	Identifier	sh_in		6274094	0					
ANR	6274852	PrimaryExpression	1		6274094	1					
ANR	6274853	IfStatement	if ( ! output && ! sterr )		6274094	1					
ANR	6274854	Condition	! output && ! sterr	697:9:14765:14781	6274094	0	True				
ANR	6274855	AndExpression	! output && ! sterr		6274094	0		&&			
ANR	6274856	UnaryOperationExpression	! output		6274094	0					
ANR	6274857	UnaryOperator	!		6274094	0					
ANR	6274858	Identifier	output		6274094	1					
ANR	6274859	UnaryOperationExpression	! sterr		6274094	1					
ANR	6274860	UnaryOperator	!		6274094	0					
ANR	6274861	Identifier	sterr		6274094	1					
ANR	6274862	CompoundStatement		119:28:2561:2561	6274094	1					
ANR	6274863	BreakStatement	break ;	698:6:14792:14797	6274094	0	True				
ANR	6274864	IfStatement	if ( output )		6274094	23					
ANR	6274865	Condition	output	703:6:14827:14832	6274094	0	True				
ANR	6274866	Identifier	output		6274094	0					
ANR	6274867	CompoundStatement		125:14:2612:2612	6274094	1					
ANR	6274868	ExpressionStatement	close ( sh_out [ 0 ] )	704:3:14840:14857	6274094	0	True				
ANR	6274869	CallExpression	close ( sh_out [ 0 ] )		6274094	0					
ANR	6274870	Callee	close		6274094	0					
ANR	6274871	Identifier	close		6274094	0					
ANR	6274872	ArgumentList	sh_out [ 0 ]		6274094	1					
ANR	6274873	Argument	sh_out [ 0 ]		6274094	0					
ANR	6274874	ArrayIndexing	sh_out [ 0 ]		6274094	0					
ANR	6274875	Identifier	sh_out		6274094	0					
ANR	6274876	PrimaryExpression	0		6274094	1					
ANR	6274877	ExpressionStatement	close ( sh_err [ 0 ] )	706:2:14865:14882	6274094	24	True				
ANR	6274878	CallExpression	close ( sh_err [ 0 ] )		6274094	0					
ANR	6274879	Callee	close		6274094	0					
ANR	6274880	Identifier	close		6274094	0					
ANR	6274881	ArgumentList	sh_err [ 0 ]		6274094	1					
ANR	6274882	Argument	sh_err [ 0 ]		6274094	0					
ANR	6274883	ArrayIndexing	sh_err [ 0 ]		6274094	0					
ANR	6274884	Identifier	sh_err		6274094	0					
ANR	6274885	PrimaryExpression	0		6274094	1					
ANR	6274886	ExpressionStatement	close ( sh_in [ 1 ] )	707:2:14886:14902	6274094	25	True				
ANR	6274887	CallExpression	close ( sh_in [ 1 ] )		6274094	0					
ANR	6274888	Callee	close		6274094	0					
ANR	6274889	Identifier	close		6274094	0					
ANR	6274890	ArgumentList	sh_in [ 1 ]		6274094	1					
ANR	6274891	Argument	sh_in [ 1 ]		6274094	0					
ANR	6274892	ArrayIndexing	sh_in [ 1 ]		6274094	0					
ANR	6274893	Identifier	sh_in		6274094	0					
ANR	6274894	PrimaryExpression	1		6274094	1					
ANR	6274895	ExpressionStatement	"waitpid ( pid , & status , 0 )"	708:2:14906:14931	6274094	26	True				
ANR	6274896	CallExpression	"waitpid ( pid , & status , 0 )"		6274094	0					
ANR	6274897	Callee	waitpid		6274094	0					
ANR	6274898	Identifier	waitpid		6274094	0					
ANR	6274899	ArgumentList	pid		6274094	1					
ANR	6274900	Argument	pid		6274094	0					
ANR	6274901	Identifier	pid		6274094	0					
ANR	6274902	Argument	& status		6274094	1					
ANR	6274903	UnaryOperationExpression	& status		6274094	0					
ANR	6274904	UnaryOperator	&		6274094	0					
ANR	6274905	Identifier	status		6274094	1					
ANR	6274906	Argument	0		6274094	2					
ANR	6274907	PrimaryExpression	0		6274094	0					
ANR	6274908	IdentifierDeclStatement	bool ret = true ;	709:2:14935:14950	6274094	27	True				
ANR	6274909	IdentifierDecl	ret = true		6274094	0					
ANR	6274910	IdentifierDeclType	bool		6274094	0					
ANR	6274911	Identifier	ret		6274094	1					
ANR	6274912	AssignmentExpression	ret = true		6274094	2		=			
ANR	6274913	Identifier	true		6274094	0					
ANR	6274914	Identifier	true		6274094	1					
ANR	6274915	IfStatement	if ( status )		6274094	28					
ANR	6274916	Condition	status	710:6:14958:14963	6274094	0	True				
ANR	6274917	Identifier	status		6274094	0					
ANR	6274918	CompoundStatement		132:14:2743:2743	6274094	1					
ANR	6274919	ExpressionStatement	ret = false	716:3:15208:15219	6274094	0	True				
ANR	6274920	AssignmentExpression	ret = false		6274094	0		=			
ANR	6274921	Identifier	ret		6274094	0					
ANR	6274922	Identifier	false		6274094	1					
ANR	6274923	IfStatement	if ( output )		6274094	29					
ANR	6274924	Condition	output	719:6:15232:15237	6274094	0	True				
ANR	6274925	Identifier	output		6274094	0					
ANR	6274926	CompoundStatement		141:14:3017:3017	6274094	1					
ANR	6274927	ExpressionStatement	* output = outputptr	720:3:15245:15264	6274094	0	True				
ANR	6274928	AssignmentExpression	* output = outputptr		6274094	0		=			
ANR	6274929	UnaryOperationExpression	* output		6274094	0					
ANR	6274930	UnaryOperator	*		6274094	0					
ANR	6274931	Identifier	output		6274094	1					
ANR	6274932	Identifier	outputptr		6274094	1					
ANR	6274933	ElseStatement	else		6274094	0					
ANR	6274934	CompoundStatement		143:9:3052:3052	6274094	0					
ANR	6274935	ExpressionStatement	free ( outputptr )	722:3:15280:15296	6274094	0	True				
ANR	6274936	CallExpression	free ( outputptr )		6274094	0					
ANR	6274937	Callee	free		6274094	0					
ANR	6274938	Identifier	free		6274094	0					
ANR	6274939	ArgumentList	outputptr		6274094	1					
ANR	6274940	Argument	outputptr		6274094	0					
ANR	6274941	Identifier	outputptr		6274094	0					
ANR	6274942	ReturnStatement	return ret ;	724:2:15304:15314	6274094	30	True				
ANR	6274943	Identifier	ret		6274094	0					
ANR	6274944	ReturnStatement	return false ;	726:1:15320:15332	6274094	11	True				
ANR	6274945	Identifier	false		6274094	0					
ANR	6274946	ReturnType	R_API int		6274094	1					
ANR	6274947	Identifier	r_sys_cmd_str_full		6274094	2					
ANR	6274948	ParameterList	"const char * cmd , const char * input , char * * output , int * len , char * * sterr"		6274094	3					
ANR	6274949	Parameter	const char * cmd	579:29:12147:12161	6274094	0	True				
ANR	6274950	ParameterType	const char *		6274094	0					
ANR	6274951	Identifier	cmd		6274094	1					
ANR	6274952	Parameter	const char * input	579:46:12164:12180	6274094	1	True				
ANR	6274953	ParameterType	const char *		6274094	0					
ANR	6274954	Identifier	input		6274094	1					
ANR	6274955	Parameter	char * * output	579:65:12183:12195	6274094	2	True				
ANR	6274956	ParameterType	char * *		6274094	0					
ANR	6274957	Identifier	output		6274094	1					
ANR	6274958	Parameter	int * len	579:80:12198:12205	6274094	3	True				
ANR	6274959	ParameterType	int *		6274094	0					
ANR	6274960	Identifier	len		6274094	1					
ANR	6274961	Parameter	char * * sterr	579:90:12208:12219	6274094	4	True				
ANR	6274962	ParameterType	char * *		6274094	0					
ANR	6274963	Identifier	sterr		6274094	1					
ANR	6274964	CFGEntryNode	ENTRY		6274094		True				
ANR	6274965	CFGExitNode	EXIT		6274094		True				
ANR	6274966	InfiniteForNode	true		6274094		True				
ANR	6274967	Symbol	r_str_append		6274094						
ANR	6274968	Symbol	select		6274094						
ANR	6274969	Symbol	* sterr		6274094						
ANR	6274970	Symbol	* sh_out		6274094						
ANR	6274971	Symbol	sh_out		6274094						
ANR	6274972	Symbol	pid		6274094						
ANR	6274973	Symbol	sh_in		6274094						
ANR	6274974	Symbol	& wfds		6274094						
ANR	6274975	Symbol	inputptr_len		6274094						
ANR	6274976	Symbol	output		6274094						
ANR	6274977	Symbol	strlen		6274094						
ANR	6274978	Symbol	len		6274094						
ANR	6274979	Symbol	FD_ISSET		6274094						
ANR	6274980	Symbol	sh_err		6274094						
ANR	6274981	Symbol	pipe		6274094						
ANR	6274982	Symbol	buffer		6274094						
ANR	6274983	Symbol	r_sys_fork		6274094						
ANR	6274984	Symbol	SIGPIPE		6274094						
ANR	6274985	Symbol	write		6274094						
ANR	6274986	Symbol	ret		6274094						
ANR	6274987	Symbol	r_sandbox_system		6274094						
ANR	6274988	Symbol	* buffer		6274094						
ANR	6274989	Symbol	NULL		6274094						
ANR	6274990	Symbol	outputptr		6274094						
ANR	6274991	Symbol	read		6274094						
ANR	6274992	Symbol	& mysterr		6274094						
ANR	6274993	Symbol	false		6274094						
ANR	6274994	Symbol	SIG_IGN		6274094						
ANR	6274995	Symbol	wfds		6274094						
ANR	6274996	Symbol	inputptr		6274094						
ANR	6274997	Symbol	* sh_err		6274094						
ANR	6274998	Symbol	nfd		6274094						
ANR	6274999	Symbol	& rfds		6274094						
ANR	6275000	Symbol	& status		6274094						
ANR	6275001	Symbol	sterr		6274094						
ANR	6275002	Symbol	input		6274094						
ANR	6275003	Symbol	* inputptr		6274094						
ANR	6275004	Symbol	mysterr		6274094						
ANR	6275005	Symbol	bytes		6274094						
ANR	6275006	Symbol	rfds		6274094						
ANR	6275007	Symbol	true		6274094						
ANR	6275008	Symbol	cmd		6274094						
ANR	6275009	Symbol	strdup		6274094						
ANR	6275010	Symbol	* output		6274094						
ANR	6275011	Symbol	status		6274094						
ANR	6275012	Symbol	* len		6274094						
ANR	6275013	Symbol	* sh_in		6274094						
ANR	6275014	Function	r_sys_cmd_str_full	729:0:15354:15525							
ANR	6275015	FunctionDef	"r_sys_cmd_str_full (const char * cmd , const char * input , char * * output , int * len , char * * sterr)"		6275014	0					
ANR	6275016	CompoundStatement		729:104:15458:15525	6275014	0					
ANR	6275017	ReturnStatement	"return r_sys_cmd_str_full_w32 ( cmd , input , output , len , sterr ) ;"	730:1:15461:15523	6275014	0	True				
ANR	6275018	CallExpression	"r_sys_cmd_str_full_w32 ( cmd , input , output , len , sterr )"		6275014	0					
ANR	6275019	Callee	r_sys_cmd_str_full_w32		6275014	0					
ANR	6275020	Identifier	r_sys_cmd_str_full_w32		6275014	0					
ANR	6275021	ArgumentList	cmd		6275014	1					
ANR	6275022	Argument	cmd		6275014	0					
ANR	6275023	Identifier	cmd		6275014	0					
ANR	6275024	Argument	input		6275014	1					
ANR	6275025	Identifier	input		6275014	0					
ANR	6275026	Argument	output		6275014	2					
ANR	6275027	Identifier	output		6275014	0					
ANR	6275028	Argument	len		6275014	3					
ANR	6275029	Identifier	len		6275014	0					
ANR	6275030	Argument	sterr		6275014	4					
ANR	6275031	Identifier	sterr		6275014	0					
ANR	6275032	ReturnType	R_API int		6275014	1					
ANR	6275033	Identifier	r_sys_cmd_str_full		6275014	2					
ANR	6275034	ParameterList	"const char * cmd , const char * input , char * * output , int * len , char * * sterr"		6275014	3					
ANR	6275035	Parameter	const char * cmd	729:29:15383:15397	6275014	0	True				
ANR	6275036	ParameterType	const char *		6275014	0					
ANR	6275037	Identifier	cmd		6275014	1					
ANR	6275038	Parameter	const char * input	729:46:15400:15416	6275014	1	True				
ANR	6275039	ParameterType	const char *		6275014	0					
ANR	6275040	Identifier	input		6275014	1					
ANR	6275041	Parameter	char * * output	729:65:15419:15431	6275014	2	True				
ANR	6275042	ParameterType	char * *		6275014	0					
ANR	6275043	Identifier	output		6275014	1					
ANR	6275044	Parameter	int * len	729:80:15434:15441	6275014	3	True				
ANR	6275045	ParameterType	int *		6275014	0					
ANR	6275046	Identifier	len		6275014	1					
ANR	6275047	Parameter	char * * sterr	729:90:15444:15455	6275014	4	True				
ANR	6275048	ParameterType	char * *		6275014	0					
ANR	6275049	Identifier	sterr		6275014	1					
ANR	6275050	CFGEntryNode	ENTRY		6275014		True				
ANR	6275051	CFGExitNode	EXIT		6275014		True				
ANR	6275052	Symbol	output		6275014						
ANR	6275053	Symbol	input		6275014						
ANR	6275054	Symbol	len		6275014						
ANR	6275055	Symbol	cmd		6275014						
ANR	6275056	Symbol	sterr		6275014						
ANR	6275057	Symbol	r_sys_cmd_str_full_w32		6275014						
ANR	6275058	Function	r_sys_cmd_str_full	733:0:15533:15723							
ANR	6275059	FunctionDef	"r_sys_cmd_str_full (const char * cmd , const char * input , char * * output , int * len , char * * sterr)"		6275058	0					
ANR	6275060	CompoundStatement		733:104:15637:15723	6275058	0					
ANR	6275061	ExpressionStatement	"eprintf ( ""r_sys_cmd_str: not yet implemented for this platform\\n"" )"	734:1:15640:15706	6275058	0	True				
ANR	6275062	CallExpression	"eprintf ( ""r_sys_cmd_str: not yet implemented for this platform\\n"" )"		6275058	0					
ANR	6275063	Callee	eprintf		6275058	0					
ANR	6275064	Identifier	eprintf		6275058	0					
ANR	6275065	ArgumentList	"""r_sys_cmd_str: not yet implemented for this platform\\n"""		6275058	1					
ANR	6275066	Argument	"""r_sys_cmd_str: not yet implemented for this platform\\n"""		6275058	0					
ANR	6275067	PrimaryExpression	"""r_sys_cmd_str: not yet implemented for this platform\\n"""		6275058	0					
ANR	6275068	ReturnStatement	return false ;	735:1:15709:15721	6275058	1	True				
ANR	6275069	Identifier	false		6275058	0					
ANR	6275070	ReturnType	R_API int		6275058	1					
ANR	6275071	Identifier	r_sys_cmd_str_full		6275058	2					
ANR	6275072	ParameterList	"const char * cmd , const char * input , char * * output , int * len , char * * sterr"		6275058	3					
ANR	6275073	Parameter	const char * cmd	733:29:15562:15576	6275058	0	True				
ANR	6275074	ParameterType	const char *		6275058	0					
ANR	6275075	Identifier	cmd		6275058	1					
ANR	6275076	Parameter	const char * input	733:46:15579:15595	6275058	1	True				
ANR	6275077	ParameterType	const char *		6275058	0					
ANR	6275078	Identifier	input		6275058	1					
ANR	6275079	Parameter	char * * output	733:65:15598:15610	6275058	2	True				
ANR	6275080	ParameterType	char * *		6275058	0					
ANR	6275081	Identifier	output		6275058	1					
ANR	6275082	Parameter	int * len	733:80:15613:15620	6275058	3	True				
ANR	6275083	ParameterType	int *		6275058	0					
ANR	6275084	Identifier	len		6275058	1					
ANR	6275085	Parameter	char * * sterr	733:90:15623:15634	6275058	4	True				
ANR	6275086	ParameterType	char * *		6275058	0					
ANR	6275087	Identifier	sterr		6275058	1					
ANR	6275088	CFGEntryNode	ENTRY		6275058		True				
ANR	6275089	CFGExitNode	EXIT		6275058		True				
ANR	6275090	Symbol	output		6275058						
ANR	6275091	Symbol	input		6275058						
ANR	6275092	Symbol	len		6275058						
ANR	6275093	Symbol	false		6275058						
ANR	6275094	Symbol	cmd		6275058						
ANR	6275095	Symbol	sterr		6275058						
ANR	6275096	Function	r_sys_cmdf	739:0:15733:15931							
ANR	6275097	FunctionDef	r_sys_cmdf (const char * fmt)		6275096	0					
ANR	6275098	CompoundStatement		739:44:15777:15931	6275096	0					
ANR	6275099	IdentifierDeclStatement	int ret ;	740:1:15780:15787	6275096	0	True				
ANR	6275100	IdentifierDecl	ret		6275096	0					
ANR	6275101	IdentifierDeclType	int		6275096	0					
ANR	6275102	Identifier	ret		6275096	1					
ANR	6275103	IdentifierDeclStatement	char cmd [ 4096 ] ;	741:1:15790:15804	6275096	1	True				
ANR	6275104	IdentifierDecl	cmd [ 4096 ]		6275096	0					
ANR	6275105	IdentifierDeclType	char [ 4096 ]		6275096	0					
ANR	6275106	Identifier	cmd		6275096	1					
ANR	6275107	PrimaryExpression	4096		6275096	2					
ANR	6275108	IdentifierDeclStatement	va_list ap ;	742:1:15807:15817	6275096	2	True				
ANR	6275109	IdentifierDecl	ap		6275096	0					
ANR	6275110	IdentifierDeclType	va_list		6275096	0					
ANR	6275111	Identifier	ap		6275096	1					
ANR	6275112	ExpressionStatement	"va_start ( ap , fmt )"	743:1:15820:15837	6275096	3	True				
ANR	6275113	CallExpression	"va_start ( ap , fmt )"		6275096	0					
ANR	6275114	Callee	va_start		6275096	0					
ANR	6275115	Identifier	va_start		6275096	0					
ANR	6275116	ArgumentList	ap		6275096	1					
ANR	6275117	Argument	ap		6275096	0					
ANR	6275118	Identifier	ap		6275096	0					
ANR	6275119	Argument	fmt		6275096	1					
ANR	6275120	Identifier	fmt		6275096	0					
ANR	6275121	ExpressionStatement	"vsnprintf ( cmd , sizeof ( cmd ) , fmt , ap )"	744:1:15840:15878	6275096	4	True				
ANR	6275122	CallExpression	"vsnprintf ( cmd , sizeof ( cmd ) , fmt , ap )"		6275096	0					
ANR	6275123	Callee	vsnprintf		6275096	0					
ANR	6275124	Identifier	vsnprintf		6275096	0					
ANR	6275125	ArgumentList	cmd		6275096	1					
ANR	6275126	Argument	cmd		6275096	0					
ANR	6275127	Identifier	cmd		6275096	0					
ANR	6275128	Argument	sizeof ( cmd )		6275096	1					
ANR	6275129	SizeofExpression	sizeof ( cmd )		6275096	0					
ANR	6275130	Sizeof	sizeof		6275096	0					
ANR	6275131	SizeofOperand	cmd		6275096	1					
ANR	6275132	Argument	fmt		6275096	2					
ANR	6275133	Identifier	fmt		6275096	0					
ANR	6275134	Argument	ap		6275096	3					
ANR	6275135	Identifier	ap		6275096	0					
ANR	6275136	ExpressionStatement	ret = r_sys_cmd ( cmd )	745:1:15881:15902	6275096	5	True				
ANR	6275137	AssignmentExpression	ret = r_sys_cmd ( cmd )		6275096	0		=			
ANR	6275138	Identifier	ret		6275096	0					
ANR	6275139	CallExpression	r_sys_cmd ( cmd )		6275096	1					
ANR	6275140	Callee	r_sys_cmd		6275096	0					
ANR	6275141	Identifier	r_sys_cmd		6275096	0					
ANR	6275142	ArgumentList	cmd		6275096	1					
ANR	6275143	Argument	cmd		6275096	0					
ANR	6275144	Identifier	cmd		6275096	0					
ANR	6275145	ExpressionStatement	va_end ( ap )	746:1:15905:15916	6275096	6	True				
ANR	6275146	CallExpression	va_end ( ap )		6275096	0					
ANR	6275147	Callee	va_end		6275096	0					
ANR	6275148	Identifier	va_end		6275096	0					
ANR	6275149	ArgumentList	ap		6275096	1					
ANR	6275150	Argument	ap		6275096	0					
ANR	6275151	Identifier	ap		6275096	0					
ANR	6275152	ReturnStatement	return ret ;	747:1:15919:15929	6275096	7	True				
ANR	6275153	Identifier	ret		6275096	0					
ANR	6275154	ReturnType	R_API int		6275096	1					
ANR	6275155	Identifier	r_sys_cmdf		6275096	2					
ANR	6275156	ParameterList	const char * fmt		6275096	3					
ANR	6275157	Parameter	const char * fmt	739:22:15755:15769	6275096	0	True				
ANR	6275158	ParameterType	const char *		6275096	0					
ANR	6275159	Identifier	fmt		6275096	1					
ANR	6275160	CFGEntryNode	ENTRY		6275096		True				
ANR	6275161	CFGExitNode	EXIT		6275096		True				
ANR	6275162	Symbol	ret		6275096						
ANR	6275163	Symbol	r_sys_cmd		6275096						
ANR	6275164	Symbol	cmd		6275096						
ANR	6275165	Symbol	fmt		6275096						
ANR	6275166	Symbol	ap		6275096						
ANR	6275167	Function	r_sys_cmdbg	750:0:15934:16383							
ANR	6275168	FunctionDef	r_sys_cmdbg (const char * str)		6275167	0					
ANR	6275169	CompoundStatement		750:40:15974:16383	6275167	0					
ANR	6275170	IdentifierDeclStatement	"int ret , pid = r_sys_fork ( ) ;"	752:1:15990:16018	6275167	0	True				
ANR	6275171	IdentifierDecl	ret		6275167	0					
ANR	6275172	IdentifierDeclType	int		6275167	0					
ANR	6275173	Identifier	ret		6275167	1					
ANR	6275174	IdentifierDecl	pid = r_sys_fork ( )		6275167	1					
ANR	6275175	IdentifierDeclType	int		6275167	0					
ANR	6275176	Identifier	pid		6275167	1					
ANR	6275177	AssignmentExpression	pid = r_sys_fork ( )		6275167	2		=			
ANR	6275178	Identifier	pid		6275167	0					
ANR	6275179	CallExpression	r_sys_fork ( )		6275167	1					
ANR	6275180	Callee	r_sys_fork		6275167	0					
ANR	6275181	Identifier	r_sys_fork		6275167	0					
ANR	6275182	ArgumentList			6275167	1					
ANR	6275183	IfStatement	if ( pid == - 1 )		6275167	1					
ANR	6275184	Condition	pid == - 1	753:5:16025:16033	6275167	0	True				
ANR	6275185	EqualityExpression	pid == - 1		6275167	0		==			
ANR	6275186	Identifier	pid		6275167	0					
ANR	6275187	UnaryOperationExpression	- 1		6275167	1					
ANR	6275188	UnaryOperator	-		6275167	0					
ANR	6275189	PrimaryExpression	1		6275167	1					
ANR	6275190	CompoundStatement		4:16:61:61	6275167	1					
ANR	6275191	ReturnStatement	return - 1 ;	754:2:16040:16049	6275167	0	True				
ANR	6275192	UnaryOperationExpression	- 1		6275167	0					
ANR	6275193	UnaryOperator	-		6275167	0					
ANR	6275194	PrimaryExpression	1		6275167	1					
ANR	6275195	IfStatement	if ( pid )		6275167	2					
ANR	6275196	Condition	pid	756:5:16059:16061	6275167	0	True				
ANR	6275197	Identifier	pid		6275167	0					
ANR	6275198	CompoundStatement		7:10:89:89	6275167	1					
ANR	6275199	ReturnStatement	return pid ;	757:2:16068:16078	6275167	0	True				
ANR	6275200	Identifier	pid		6275167	0					
ANR	6275201	ExpressionStatement	"ret = r_sandbox_system ( str , 0 )"	759:1:16084:16115	6275167	3	True				
ANR	6275202	AssignmentExpression	"ret = r_sandbox_system ( str , 0 )"		6275167	0		=			
ANR	6275203	Identifier	ret		6275167	0					
ANR	6275204	CallExpression	"r_sandbox_system ( str , 0 )"		6275167	1					
ANR	6275205	Callee	r_sandbox_system		6275167	0					
ANR	6275206	Identifier	r_sandbox_system		6275167	0					
ANR	6275207	ArgumentList	str		6275167	1					
ANR	6275208	Argument	str		6275167	0					
ANR	6275209	Identifier	str		6275167	0					
ANR	6275210	Argument	0		6275167	1					
ANR	6275211	PrimaryExpression	0		6275167	0					
ANR	6275212	ExpressionStatement	"eprintf ( ""{exit: %d, pid: %d, cmd: \\""%s\\""}"" , ret , pid , str )"	760:1:16118:16177	6275167	4	True				
ANR	6275213	CallExpression	"eprintf ( ""{exit: %d, pid: %d, cmd: \\""%s\\""}"" , ret , pid , str )"		6275167	0					
ANR	6275214	Callee	eprintf		6275167	0					
ANR	6275215	Identifier	eprintf		6275167	0					
ANR	6275216	ArgumentList	"""{exit: %d, pid: %d, cmd: \\""%s\\""}"""		6275167	1					
ANR	6275217	Argument	"""{exit: %d, pid: %d, cmd: \\""%s\\""}"""		6275167	0					
ANR	6275218	PrimaryExpression	"""{exit: %d, pid: %d, cmd: \\""%s\\""}"""		6275167	0					
ANR	6275219	Argument	ret		6275167	1					
ANR	6275220	Identifier	ret		6275167	0					
ANR	6275221	Argument	pid		6275167	2					
ANR	6275222	Identifier	pid		6275167	0					
ANR	6275223	Argument	str		6275167	3					
ANR	6275224	Identifier	str		6275167	0					
ANR	6275225	ExpressionStatement	exit ( 0 )	761:1:16180:16188	6275167	5	True				
ANR	6275226	CallExpression	exit ( 0 )		6275167	0					
ANR	6275227	Callee	exit		6275167	0					
ANR	6275228	Identifier	exit		6275167	0					
ANR	6275229	ArgumentList	0		6275167	1					
ANR	6275230	Argument	0		6275167	0					
ANR	6275231	PrimaryExpression	0		6275167	0					
ANR	6275232	ReturnStatement	return - 1 ;	762:1:16191:16200	6275167	6	True				
ANR	6275233	UnaryOperationExpression	- 1		6275167	0					
ANR	6275234	UnaryOperator	-		6275167	0					
ANR	6275235	PrimaryExpression	1		6275167	1					
ANR	6275236	ReturnType	R_API int		6275167	1					
ANR	6275237	Identifier	r_sys_cmdbg		6275167	2					
ANR	6275238	ParameterList	const char * str		6275167	3					
ANR	6275239	Parameter	const char * str	750:23:15957:15971	6275167	0	True				
ANR	6275240	ParameterType	const char *		6275167	0					
ANR	6275241	Identifier	str		6275167	1					
ANR	6275242	CFGEntryNode	ENTRY		6275167		True				
ANR	6275243	CFGExitNode	EXIT		6275167		True				
ANR	6275244	Symbol	str		6275167						
ANR	6275245	Symbol	ret		6275167						
ANR	6275246	Symbol	r_sandbox_system		6275167						
ANR	6275247	Symbol	pid		6275167						
ANR	6275248	Symbol	r_sys_fork		6275167						
ANR	6275249	Function	r_sys_cmd	773:0:16386:16931							
ANR	6275250	FunctionDef	r_sys_cmd (const char * str)		6275249	0					
ANR	6275251	CompoundStatement		773:37:16423:16931	6275249	0					
ANR	6275252	IfStatement	if ( r_sandbox_enable ( 0 ) )		6275249	0					
ANR	6275253	Condition	r_sandbox_enable ( 0 )	774:5:16430:16449	6275249	0	True				
ANR	6275254	CallExpression	r_sandbox_enable ( 0 )		6275249	0					
ANR	6275255	Callee	r_sandbox_enable		6275249	0					
ANR	6275256	Identifier	r_sandbox_enable		6275249	0					
ANR	6275257	ArgumentList	0		6275249	1					
ANR	6275258	Argument	0		6275249	0					
ANR	6275259	PrimaryExpression	0		6275249	0					
ANR	6275260	CompoundStatement		2:27:28:28	6275249	1					
ANR	6275261	ReturnStatement	return false ;	775:2:16456:16468	6275249	0	True				
ANR	6275262	Identifier	false		6275249	0					
ANR	6275263	IdentifierDeclStatement	"int st , pid , fds [ 2 ] ;"	779:1:16524:16543	6275249	1	True				
ANR	6275264	IdentifierDecl	st		6275249	0					
ANR	6275265	IdentifierDeclType	int		6275249	0					
ANR	6275266	Identifier	st		6275249	1					
ANR	6275267	IdentifierDecl	pid		6275249	1					
ANR	6275268	IdentifierDeclType	int		6275249	0					
ANR	6275269	Identifier	pid		6275249	1					
ANR	6275270	IdentifierDecl	fds [ 2 ]		6275249	2					
ANR	6275271	IdentifierDeclType	int [ 2 ]		6275249	0					
ANR	6275272	Identifier	fds		6275249	1					
ANR	6275273	PrimaryExpression	2		6275249	2					
ANR	6275274	IfStatement	if ( pipe ( fds ) )		6275249	2					
ANR	6275275	Condition	pipe ( fds )	780:5:16550:16559	6275249	0	True				
ANR	6275276	CallExpression	pipe ( fds )		6275249	0					
ANR	6275277	Callee	pipe		6275249	0					
ANR	6275278	Identifier	pipe		6275249	0					
ANR	6275279	ArgumentList	fds		6275249	1					
ANR	6275280	Argument	fds		6275249	0					
ANR	6275281	Identifier	fds		6275249	0					
ANR	6275282	CompoundStatement		8:17:138:138	6275249	1					
ANR	6275283	ReturnStatement	return - 1 ;	781:2:16566:16575	6275249	0	True				
ANR	6275284	UnaryOperationExpression	- 1		6275249	0					
ANR	6275285	UnaryOperator	-		6275249	0					
ANR	6275286	PrimaryExpression	1		6275249	1					
ANR	6275287	ExpressionStatement	pid = vfork ( )	783:1:16581:16595	6275249	3	True				
ANR	6275288	AssignmentExpression	pid = vfork ( )		6275249	0		=			
ANR	6275289	Identifier	pid		6275249	0					
ANR	6275290	CallExpression	vfork ( )		6275249	1					
ANR	6275291	Callee	vfork		6275249	0					
ANR	6275292	Identifier	vfork		6275249	0					
ANR	6275293	ArgumentList			6275249	1					
ANR	6275294	IfStatement	if ( pid == - 1 )		6275249	4					
ANR	6275295	Condition	pid == - 1	784:5:16602:16610	6275249	0	True				
ANR	6275296	EqualityExpression	pid == - 1		6275249	0		==			
ANR	6275297	Identifier	pid		6275249	0					
ANR	6275298	UnaryOperationExpression	- 1		6275249	1					
ANR	6275299	UnaryOperator	-		6275249	0					
ANR	6275300	PrimaryExpression	1		6275249	1					
ANR	6275301	CompoundStatement		12:16:189:189	6275249	1					
ANR	6275302	ReturnStatement	return - 1 ;	785:2:16617:16626	6275249	0	True				
ANR	6275303	UnaryOperationExpression	- 1		6275249	0					
ANR	6275304	UnaryOperator	-		6275249	0					
ANR	6275305	PrimaryExpression	1		6275249	1					
ANR	6275306	IfStatement	if ( ! pid )		6275249	5					
ANR	6275307	Condition	! pid	787:5:16636:16639	6275249	0	True				
ANR	6275308	UnaryOperationExpression	! pid		6275249	0					
ANR	6275309	UnaryOperator	!		6275249	0					
ANR	6275310	Identifier	pid		6275249	1					
ANR	6275311	CompoundStatement		15:11:218:218	6275249	1					
ANR	6275312	ExpressionStatement	"dup2 ( 1 , fds [ 1 ] )"	788:2:16646:16662	6275249	0	True				
ANR	6275313	CallExpression	"dup2 ( 1 , fds [ 1 ] )"		6275249	0					
ANR	6275314	Callee	dup2		6275249	0					
ANR	6275315	Identifier	dup2		6275249	0					
ANR	6275316	ArgumentList	1		6275249	1					
ANR	6275317	Argument	1		6275249	0					
ANR	6275318	PrimaryExpression	1		6275249	0					
ANR	6275319	Argument	fds [ 1 ]		6275249	1					
ANR	6275320	ArrayIndexing	fds [ 1 ]		6275249	0					
ANR	6275321	Identifier	fds		6275249	0					
ANR	6275322	PrimaryExpression	1		6275249	1					
ANR	6275323	ExpressionStatement	"r_sandbox_system ( str , 0 )"	791:2:16745:16770	6275249	1	True				
ANR	6275324	CallExpression	"r_sandbox_system ( str , 0 )"		6275249	0					
ANR	6275325	Callee	r_sandbox_system		6275249	0					
ANR	6275326	Identifier	r_sandbox_system		6275249	0					
ANR	6275327	ArgumentList	str		6275249	1					
ANR	6275328	Argument	str		6275249	0					
ANR	6275329	Identifier	str		6275249	0					
ANR	6275330	Argument	0		6275249	1					
ANR	6275331	PrimaryExpression	0		6275249	0					
ANR	6275332	ExpressionStatement	_exit ( 127 )	792:2:16774:16785	6275249	2	True				
ANR	6275333	CallExpression	_exit ( 127 )		6275249	0					
ANR	6275334	Callee	_exit		6275249	0					
ANR	6275335	Identifier	_exit		6275249	0					
ANR	6275336	ArgumentList	127		6275249	1					
ANR	6275337	Argument	127		6275249	0					
ANR	6275338	PrimaryExpression	127		6275249	0					
ANR	6275339	ElseStatement	else		6275249	0					
ANR	6275340	CompoundStatement		21:8:383:383	6275249	0					
ANR	6275341	ExpressionStatement	"dup2 ( 1 , fds [ 0 ] )"	794:2:16811:16827	6275249	0	True				
ANR	6275342	CallExpression	"dup2 ( 1 , fds [ 0 ] )"		6275249	0					
ANR	6275343	Callee	dup2		6275249	0					
ANR	6275344	Identifier	dup2		6275249	0					
ANR	6275345	ArgumentList	1		6275249	1					
ANR	6275346	Argument	1		6275249	0					
ANR	6275347	PrimaryExpression	1		6275249	0					
ANR	6275348	Argument	fds [ 0 ]		6275249	1					
ANR	6275349	ArrayIndexing	fds [ 0 ]		6275249	0					
ANR	6275350	Identifier	fds		6275249	0					
ANR	6275351	PrimaryExpression	0		6275249	1					
ANR	6275352	ExpressionStatement	"waitpid ( pid , & st , 0 )"	795:2:16831:16852	6275249	1	True				
ANR	6275353	CallExpression	"waitpid ( pid , & st , 0 )"		6275249	0					
ANR	6275354	Callee	waitpid		6275249	0					
ANR	6275355	Identifier	waitpid		6275249	0					
ANR	6275356	ArgumentList	pid		6275249	1					
ANR	6275357	Argument	pid		6275249	0					
ANR	6275358	Identifier	pid		6275249	0					
ANR	6275359	Argument	& st		6275249	1					
ANR	6275360	UnaryOperationExpression	& st		6275249	0					
ANR	6275361	UnaryOperator	&		6275249	0					
ANR	6275362	Identifier	st		6275249	1					
ANR	6275363	Argument	0		6275249	2					
ANR	6275364	PrimaryExpression	0		6275249	0					
ANR	6275365	ReturnStatement	return WEXITSTATUS ( st ) ;	797:1:16858:16881	6275249	6	True				
ANR	6275366	CallExpression	WEXITSTATUS ( st )		6275249	0					
ANR	6275367	Callee	WEXITSTATUS		6275249	0					
ANR	6275368	Identifier	WEXITSTATUS		6275249	0					
ANR	6275369	ArgumentList	st		6275249	1					
ANR	6275370	Argument	st		6275249	0					
ANR	6275371	Identifier	st		6275249	0					
ANR	6275372	ReturnType	R_API int		6275249	1					
ANR	6275373	Identifier	r_sys_cmd		6275249	2					
ANR	6275374	ParameterList	const char * str		6275249	3					
ANR	6275375	Parameter	const char * str	773:20:16406:16420	6275249	0	True				
ANR	6275376	ParameterType	const char *		6275249	0					
ANR	6275377	Identifier	str		6275249	1					
ANR	6275378	CFGEntryNode	ENTRY		6275249		True				
ANR	6275379	CFGExitNode	EXIT		6275249		True				
ANR	6275380	Symbol	str		6275249						
ANR	6275381	Symbol	* fds		6275249						
ANR	6275382	Symbol	st		6275249						
ANR	6275383	Symbol	fds		6275249						
ANR	6275384	Symbol	r_sandbox_enable		6275249						
ANR	6275385	Symbol	vfork		6275249						
ANR	6275386	Symbol	false		6275249						
ANR	6275387	Symbol	pid		6275249						
ANR	6275388	Symbol	pipe		6275249						
ANR	6275389	Symbol	& st		6275249						
ANR	6275390	Symbol	WEXITSTATUS		6275249						
ANR	6275391	Function	r_sys_cmd_str	803:0:16934:17140							
ANR	6275392	FunctionDef	"r_sys_cmd_str (const char * cmd , const char * input , int * len)"		6275391	0					
ANR	6275393	CompoundStatement		803:72:17006:17140	6275391	0					
ANR	6275394	IdentifierDeclStatement	char * output = NULL ;	804:1:17009:17028	6275391	0	True				
ANR	6275395	IdentifierDecl	* output = NULL		6275391	0					
ANR	6275396	IdentifierDeclType	char *		6275391	0					
ANR	6275397	Identifier	output		6275391	1					
ANR	6275398	AssignmentExpression	* output = NULL		6275391	2		=			
ANR	6275399	Identifier	NULL		6275391	0					
ANR	6275400	Identifier	NULL		6275391	1					
ANR	6275401	IfStatement	"if ( r_sys_cmd_str_full ( cmd , input , & output , len , NULL ) )"		6275391	1					
ANR	6275402	Condition	"r_sys_cmd_str_full ( cmd , input , & output , len , NULL )"	805:5:17035:17085	6275391	0	True				
ANR	6275403	CallExpression	"r_sys_cmd_str_full ( cmd , input , & output , len , NULL )"		6275391	0					
ANR	6275404	Callee	r_sys_cmd_str_full		6275391	0					
ANR	6275405	Identifier	r_sys_cmd_str_full		6275391	0					
ANR	6275406	ArgumentList	cmd		6275391	1					
ANR	6275407	Argument	cmd		6275391	0					
ANR	6275408	Identifier	cmd		6275391	0					
ANR	6275409	Argument	input		6275391	1					
ANR	6275410	Identifier	input		6275391	0					
ANR	6275411	Argument	& output		6275391	2					
ANR	6275412	UnaryOperationExpression	& output		6275391	0					
ANR	6275413	UnaryOperator	&		6275391	0					
ANR	6275414	Identifier	output		6275391	1					
ANR	6275415	Argument	len		6275391	3					
ANR	6275416	Identifier	len		6275391	0					
ANR	6275417	Argument	NULL		6275391	4					
ANR	6275418	Identifier	NULL		6275391	0					
ANR	6275419	CompoundStatement		3:58:81:81	6275391	1					
ANR	6275420	ReturnStatement	return output ;	806:2:17092:17105	6275391	0	True				
ANR	6275421	Identifier	output		6275391	0					
ANR	6275422	ExpressionStatement	free ( output )	808:1:17111:17124	6275391	2	True				
ANR	6275423	CallExpression	free ( output )		6275391	0					
ANR	6275424	Callee	free		6275391	0					
ANR	6275425	Identifier	free		6275391	0					
ANR	6275426	ArgumentList	output		6275391	1					
ANR	6275427	Argument	output		6275391	0					
ANR	6275428	Identifier	output		6275391	0					
ANR	6275429	ReturnStatement	return NULL ;	809:1:17127:17138	6275391	3	True				
ANR	6275430	Identifier	NULL		6275391	0					
ANR	6275431	ReturnType	R_API char *		6275391	1					
ANR	6275432	Identifier	r_sys_cmd_str		6275391	2					
ANR	6275433	ParameterList	"const char * cmd , const char * input , int * len"		6275391	3					
ANR	6275434	Parameter	const char * cmd	803:26:16960:16974	6275391	0	True				
ANR	6275435	ParameterType	const char *		6275391	0					
ANR	6275436	Identifier	cmd		6275391	1					
ANR	6275437	Parameter	const char * input	803:43:16977:16993	6275391	1	True				
ANR	6275438	ParameterType	const char *		6275391	0					
ANR	6275439	Identifier	input		6275391	1					
ANR	6275440	Parameter	int * len	803:62:16996:17003	6275391	2	True				
ANR	6275441	ParameterType	int *		6275391	0					
ANR	6275442	Identifier	len		6275391	1					
ANR	6275443	CFGEntryNode	ENTRY		6275391		True				
ANR	6275444	CFGExitNode	EXIT		6275391		True				
ANR	6275445	Symbol	output		6275391						
ANR	6275446	Symbol	input		6275391						
ANR	6275447	Symbol	NULL		6275391						
ANR	6275448	Symbol	r_sys_cmd_str_full		6275391						
ANR	6275449	Symbol	len		6275391						
ANR	6275450	Symbol	cmd		6275391						
ANR	6275451	Symbol	& output		6275391						
ANR	6275452	Function	r_sys_mkdir	812:0:17143:17421							
ANR	6275453	FunctionDef	r_sys_mkdir (const char * dir)		6275452	0					
ANR	6275454	CompoundStatement		812:40:17183:17421	6275452	0					
ANR	6275455	IdentifierDeclStatement	bool ret ;	813:1:17186:17194	6275452	0	True				
ANR	6275456	IdentifierDecl	ret		6275452	0					
ANR	6275457	IdentifierDeclType	bool		6275452	0					
ANR	6275458	Identifier	ret		6275452	1					
ANR	6275459	IfStatement	if ( r_sandbox_enable ( 0 ) )		6275452	1					
ANR	6275460	Condition	r_sandbox_enable ( 0 )	815:5:17202:17221	6275452	0	True				
ANR	6275461	CallExpression	r_sandbox_enable ( 0 )		6275452	0					
ANR	6275462	Callee	r_sandbox_enable		6275452	0					
ANR	6275463	Identifier	r_sandbox_enable		6275452	0					
ANR	6275464	ArgumentList	0		6275452	1					
ANR	6275465	Argument	0		6275452	0					
ANR	6275466	PrimaryExpression	0		6275452	0					
ANR	6275467	CompoundStatement		4:27:40:40	6275452	1					
ANR	6275468	ReturnStatement	return false ;	816:2:17228:17240	6275452	0	True				
ANR	6275469	Identifier	false		6275452	0					
ANR	6275470	IdentifierDeclStatement	LPTSTR dir_ = r_sys_conv_utf8_to_win ( dir ) ;	819:1:17262:17304	6275452	2	True				
ANR	6275471	IdentifierDecl	dir_ = r_sys_conv_utf8_to_win ( dir )		6275452	0					
ANR	6275472	IdentifierDeclType	LPTSTR		6275452	0					
ANR	6275473	Identifier	dir_		6275452	1					
ANR	6275474	AssignmentExpression	dir_ = r_sys_conv_utf8_to_win ( dir )		6275452	2		=			
ANR	6275475	Identifier	dir_		6275452	0					
ANR	6275476	CallExpression	r_sys_conv_utf8_to_win ( dir )		6275452	1					
ANR	6275477	Callee	r_sys_conv_utf8_to_win		6275452	0					
ANR	6275478	Identifier	r_sys_conv_utf8_to_win		6275452	0					
ANR	6275479	ArgumentList	dir		6275452	1					
ANR	6275480	Argument	dir		6275452	0					
ANR	6275481	Identifier	dir		6275452	0					
ANR	6275482	ExpressionStatement	"ret = CreateDirectory ( dir_ , NULL ) != 0"	821:1:17308:17347	6275452	3	True				
ANR	6275483	AssignmentExpression	"ret = CreateDirectory ( dir_ , NULL ) != 0"		6275452	0		=			
ANR	6275484	Identifier	ret		6275452	0					
ANR	6275485	EqualityExpression	"CreateDirectory ( dir_ , NULL ) != 0"		6275452	1		!=			
ANR	6275486	CallExpression	"CreateDirectory ( dir_ , NULL )"		6275452	0					
ANR	6275487	Callee	CreateDirectory		6275452	0					
ANR	6275488	Identifier	CreateDirectory		6275452	0					
ANR	6275489	ArgumentList	dir_		6275452	1					
ANR	6275490	Argument	dir_		6275452	0					
ANR	6275491	Identifier	dir_		6275452	0					
ANR	6275492	Argument	NULL		6275452	1					
ANR	6275493	Identifier	NULL		6275452	0					
ANR	6275494	PrimaryExpression	0		6275452	1					
ANR	6275495	ExpressionStatement	free ( dir_ )	822:1:17350:17361	6275452	4	True				
ANR	6275496	CallExpression	free ( dir_ )		6275452	0					
ANR	6275497	Callee	free		6275452	0					
ANR	6275498	Identifier	free		6275452	0					
ANR	6275499	ArgumentList	dir_		6275452	1					
ANR	6275500	Argument	dir_		6275452	0					
ANR	6275501	Identifier	dir_		6275452	0					
ANR	6275502	ReturnStatement	return ret ;	826:1:17409:17419	6275452	5	True				
ANR	6275503	Identifier	ret		6275452	0					
ANR	6275504	ReturnType	R_API bool		6275452	1					
ANR	6275505	Identifier	r_sys_mkdir		6275452	2					
ANR	6275506	ParameterList	const char * dir		6275452	3					
ANR	6275507	Parameter	const char * dir	812:23:17166:17180	6275452	0	True				
ANR	6275508	ParameterType	const char *		6275452	0					
ANR	6275509	Identifier	dir		6275452	1					
ANR	6275510	CFGEntryNode	ENTRY		6275452		True				
ANR	6275511	CFGExitNode	EXIT		6275452		True				
ANR	6275512	Symbol	ret		6275452						
ANR	6275513	Symbol	NULL		6275452						
ANR	6275514	Symbol	r_sandbox_enable		6275452						
ANR	6275515	Symbol	false		6275452						
ANR	6275516	Symbol	dir		6275452						
ANR	6275517	Symbol	dir_		6275452						
ANR	6275518	Symbol	r_sys_conv_utf8_to_win		6275452						
ANR	6275519	Symbol	CreateDirectory		6275452						
ANR	6275520	Function	r_sys_mkdirp	829:0:17424:18223							
ANR	6275521	FunctionDef	r_sys_mkdirp (const char * dir)		6275520	0					
ANR	6275522	CompoundStatement		829:41:17465:18223	6275520	0					
ANR	6275523	IdentifierDeclStatement	bool ret = true ;	830:1:17468:17483	6275520	0	True				
ANR	6275524	IdentifierDecl	ret = true		6275520	0					
ANR	6275525	IdentifierDeclType	bool		6275520	0					
ANR	6275526	Identifier	ret		6275520	1					
ANR	6275527	AssignmentExpression	ret = true		6275520	2		=			
ANR	6275528	Identifier	true		6275520	0					
ANR	6275529	Identifier	true		6275520	1					
ANR	6275530	IdentifierDeclStatement	char slash = R_SYS_DIR [ 0 ] ;	831:1:17486:17511	6275520	1	True				
ANR	6275531	IdentifierDecl	slash = R_SYS_DIR [ 0 ]		6275520	0					
ANR	6275532	IdentifierDeclType	char		6275520	0					
ANR	6275533	Identifier	slash		6275520	1					
ANR	6275534	AssignmentExpression	slash = R_SYS_DIR [ 0 ]		6275520	2		=			
ANR	6275535	Identifier	slash		6275520	0					
ANR	6275536	ArrayIndexing	R_SYS_DIR [ 0 ]		6275520	1					
ANR	6275537	Identifier	R_SYS_DIR		6275520	0					
ANR	6275538	PrimaryExpression	0		6275520	1					
ANR	6275539	IdentifierDeclStatement	"char * path = strdup ( dir ) , * ptr = path ;"	832:1:17514:17552	6275520	2	True				
ANR	6275540	IdentifierDecl	* path = strdup ( dir )		6275520	0					
ANR	6275541	IdentifierDeclType	char *		6275520	0					
ANR	6275542	Identifier	path		6275520	1					
ANR	6275543	AssignmentExpression	* path = strdup ( dir )		6275520	2		=			
ANR	6275544	Identifier	path		6275520	0					
ANR	6275545	CallExpression	strdup ( dir )		6275520	1					
ANR	6275546	Callee	strdup		6275520	0					
ANR	6275547	Identifier	strdup		6275520	0					
ANR	6275548	ArgumentList	dir		6275520	1					
ANR	6275549	Argument	dir		6275520	0					
ANR	6275550	Identifier	dir		6275520	0					
ANR	6275551	IdentifierDecl	* ptr = path		6275520	1					
ANR	6275552	IdentifierDeclType	char *		6275520	0					
ANR	6275553	Identifier	ptr		6275520	1					
ANR	6275554	AssignmentExpression	* ptr = path		6275520	2		=			
ANR	6275555	Identifier	path		6275520	0					
ANR	6275556	Identifier	path		6275520	1					
ANR	6275557	IfStatement	if ( ! path )		6275520	3					
ANR	6275558	Condition	! path	833:5:17559:17563	6275520	0	True				
ANR	6275559	UnaryOperationExpression	! path		6275520	0					
ANR	6275560	UnaryOperator	!		6275520	0					
ANR	6275561	Identifier	path		6275520	1					
ANR	6275562	CompoundStatement		5:12:100:100	6275520	1					
ANR	6275563	ExpressionStatement	"eprintf ( ""r_sys_mkdirp: Unable to allocate memory\\n"" )"	834:2:17570:17623	6275520	0	True				
ANR	6275564	CallExpression	"eprintf ( ""r_sys_mkdirp: Unable to allocate memory\\n"" )"		6275520	0					
ANR	6275565	Callee	eprintf		6275520	0					
ANR	6275566	Identifier	eprintf		6275520	0					
ANR	6275567	ArgumentList	"""r_sys_mkdirp: Unable to allocate memory\\n"""		6275520	1					
ANR	6275568	Argument	"""r_sys_mkdirp: Unable to allocate memory\\n"""		6275520	0					
ANR	6275569	PrimaryExpression	"""r_sys_mkdirp: Unable to allocate memory\\n"""		6275520	0					
ANR	6275570	ReturnStatement	return false ;	835:2:17627:17639	6275520	1	True				
ANR	6275571	Identifier	false		6275520	0					
ANR	6275572	IfStatement	if ( * ptr == slash )		6275520	4					
ANR	6275573	Condition	* ptr == slash	837:5:17649:17661	6275520	0	True				
ANR	6275574	EqualityExpression	* ptr == slash		6275520	0		==			
ANR	6275575	UnaryOperationExpression	* ptr		6275520	0					
ANR	6275576	UnaryOperator	*		6275520	0					
ANR	6275577	Identifier	ptr		6275520	1					
ANR	6275578	Identifier	slash		6275520	1					
ANR	6275579	CompoundStatement		9:20:198:198	6275520	1					
ANR	6275580	ExpressionStatement	ptr ++	838:2:17668:17673	6275520	0	True				
ANR	6275581	PostIncDecOperationExpression	ptr ++		6275520	0					
ANR	6275582	Identifier	ptr		6275520	0					
ANR	6275583	IncDec	++		6275520	1					
ANR	6275584	CompoundStatement		14:2:233:262	6275520	5					
ANR	6275585	IdentifierDeclStatement	"char * p = strstr ( ptr , "":\\\\"" ) ;"	842:2:17699:17728	6275520	0	True				
ANR	6275586	IdentifierDecl	"* p = strstr ( ptr , "":\\\\"" )"		6275520	0					
ANR	6275587	IdentifierDeclType	char *		6275520	0					
ANR	6275588	Identifier	p		6275520	1					
ANR	6275589	AssignmentExpression	"* p = strstr ( ptr , "":\\\\"" )"		6275520	2		=			
ANR	6275590	Identifier	p		6275520	0					
ANR	6275591	CallExpression	"strstr ( ptr , "":\\\\"" )"		6275520	1					
ANR	6275592	Callee	strstr		6275520	0					
ANR	6275593	Identifier	strstr		6275520	0					
ANR	6275594	ArgumentList	ptr		6275520	1					
ANR	6275595	Argument	ptr		6275520	0					
ANR	6275596	Identifier	ptr		6275520	0					
ANR	6275597	Argument	""":\\\\"""		6275520	1					
ANR	6275598	PrimaryExpression	""":\\\\"""		6275520	0					
ANR	6275599	IfStatement	if ( p )		6275520	1					
ANR	6275600	Condition	p	843:6:17736:17736	6275520	0	True				
ANR	6275601	Identifier	p		6275520	0					
ANR	6275602	CompoundStatement		15:9:273:273	6275520	1					
ANR	6275603	ExpressionStatement	ptr = p + 2	844:3:17744:17755	6275520	0	True				
ANR	6275604	AssignmentExpression	ptr = p + 2		6275520	0		=			
ANR	6275605	Identifier	ptr		6275520	0					
ANR	6275606	AdditiveExpression	p + 2		6275520	1		+			
ANR	6275607	Identifier	p		6275520	0					
ANR	6275608	PrimaryExpression	2		6275520	1					
ANR	6275609	ForStatement	for ( ; ; )		6275520	6					
ANR	6275610	CompoundStatement		20:10:315:315	6275520	0					
ANR	6275611	ForStatement	for ( ; * ptr ; ptr ++ )		6275520	0					
ANR	6275612	Condition	* ptr	850:9:17813:17816	6275520	0	True				
ANR	6275613	UnaryOperationExpression	* ptr		6275520	0					
ANR	6275614	UnaryOperator	*		6275520	0					
ANR	6275615	Identifier	ptr		6275520	1					
ANR	6275616	PostIncDecOperationExpression	ptr ++	850:15:17819:17823	6275520	1	True				
ANR	6275617	Identifier	ptr		6275520	0					
ANR	6275618	IncDec	++		6275520	1					
ANR	6275619	CompoundStatement		22:22:360:360	6275520	2					
ANR	6275620	IfStatement	if ( * ptr == '/' || * ptr == '\\\\' )		6275520	0					
ANR	6275621	Condition	* ptr == '/' || * ptr == '\\\\'	851:7:17835:17861	6275520	0	True				
ANR	6275622	OrExpression	* ptr == '/' || * ptr == '\\\\'		6275520	0		||			
ANR	6275623	EqualityExpression	* ptr == '/'		6275520	0		==			
ANR	6275624	UnaryOperationExpression	* ptr		6275520	0					
ANR	6275625	UnaryOperator	*		6275520	0					
ANR	6275626	Identifier	ptr		6275520	1					
ANR	6275627	PrimaryExpression	'/'		6275520	1					
ANR	6275628	EqualityExpression	* ptr == '\\\\'		6275520	1		==			
ANR	6275629	UnaryOperationExpression	* ptr		6275520	0					
ANR	6275630	UnaryOperator	*		6275520	0					
ANR	6275631	Identifier	ptr		6275520	1					
ANR	6275632	PrimaryExpression	'\\\\'		6275520	1					
ANR	6275633	CompoundStatement		23:36:398:398	6275520	1					
ANR	6275634	ExpressionStatement	slash = * ptr	852:4:17870:17882	6275520	0	True				
ANR	6275635	AssignmentExpression	slash = * ptr		6275520	0		=			
ANR	6275636	Identifier	slash		6275520	0					
ANR	6275637	UnaryOperationExpression	* ptr		6275520	1					
ANR	6275638	UnaryOperator	*		6275520	0					
ANR	6275639	Identifier	ptr		6275520	1					
ANR	6275640	BreakStatement	break ;	853:4:17888:17893	6275520	1	True				
ANR	6275641	IfStatement	if ( ! * ptr )		6275520	1					
ANR	6275642	Condition	! * ptr	856:6:17910:17914	6275520	0	True				
ANR	6275643	UnaryOperationExpression	! * ptr		6275520	0					
ANR	6275644	UnaryOperator	!		6275520	0					
ANR	6275645	UnaryOperationExpression	* ptr		6275520	1					
ANR	6275646	UnaryOperator	*		6275520	0					
ANR	6275647	Identifier	ptr		6275520	1					
ANR	6275648	CompoundStatement		28:13:451:451	6275520	1					
ANR	6275649	BreakStatement	break ;	857:3:17922:17927	6275520	0	True				
ANR	6275650	ExpressionStatement	* ptr = 0	859:2:17935:17943	6275520	2	True				
ANR	6275651	AssignmentExpression	* ptr = 0		6275520	0		=			
ANR	6275652	UnaryOperationExpression	* ptr		6275520	0					
ANR	6275653	UnaryOperator	*		6275520	0					
ANR	6275654	Identifier	ptr		6275520	1					
ANR	6275655	PrimaryExpression	0		6275520	1					
ANR	6275656	IfStatement	if ( ! r_sys_mkdir ( path ) && r_sys_mkdir_failed ( ) )		6275520	3					
ANR	6275657	Condition	! r_sys_mkdir ( path ) && r_sys_mkdir_failed ( )	860:6:17951:17994	6275520	0	True				
ANR	6275658	AndExpression	! r_sys_mkdir ( path ) && r_sys_mkdir_failed ( )		6275520	0		&&			
ANR	6275659	UnaryOperationExpression	! r_sys_mkdir ( path )		6275520	0					
ANR	6275660	UnaryOperator	!		6275520	0					
ANR	6275661	CallExpression	r_sys_mkdir ( path )		6275520	1					
ANR	6275662	Callee	r_sys_mkdir		6275520	0					
ANR	6275663	Identifier	r_sys_mkdir		6275520	0					
ANR	6275664	ArgumentList	path		6275520	1					
ANR	6275665	Argument	path		6275520	0					
ANR	6275666	Identifier	path		6275520	0					
ANR	6275667	CallExpression	r_sys_mkdir_failed ( )		6275520	1					
ANR	6275668	Callee	r_sys_mkdir_failed		6275520	0					
ANR	6275669	Identifier	r_sys_mkdir_failed		6275520	0					
ANR	6275670	ArgumentList			6275520	1					
ANR	6275671	CompoundStatement		32:52:531:531	6275520	1					
ANR	6275672	ExpressionStatement	"eprintf ( ""r_sys_mkdirp: fail '%s' of '%s'\\n"" , path , dir )"	861:3:18002:18058	6275520	0	True				
ANR	6275673	CallExpression	"eprintf ( ""r_sys_mkdirp: fail '%s' of '%s'\\n"" , path , dir )"		6275520	0					
ANR	6275674	Callee	eprintf		6275520	0					
ANR	6275675	Identifier	eprintf		6275520	0					
ANR	6275676	ArgumentList	"""r_sys_mkdirp: fail '%s' of '%s'\\n"""		6275520	1					
ANR	6275677	Argument	"""r_sys_mkdirp: fail '%s' of '%s'\\n"""		6275520	0					
ANR	6275678	PrimaryExpression	"""r_sys_mkdirp: fail '%s' of '%s'\\n"""		6275520	0					
ANR	6275679	Argument	path		6275520	1					
ANR	6275680	Identifier	path		6275520	0					
ANR	6275681	Argument	dir		6275520	2					
ANR	6275682	Identifier	dir		6275520	0					
ANR	6275683	ExpressionStatement	free ( path )	862:3:18063:18074	6275520	1	True				
ANR	6275684	CallExpression	free ( path )		6275520	0					
ANR	6275685	Callee	free		6275520	0					
ANR	6275686	Identifier	free		6275520	0					
ANR	6275687	ArgumentList	path		6275520	1					
ANR	6275688	Argument	path		6275520	0					
ANR	6275689	Identifier	path		6275520	0					
ANR	6275690	ReturnStatement	return false ;	863:3:18079:18091	6275520	2	True				
ANR	6275691	Identifier	false		6275520	0					
ANR	6275692	ExpressionStatement	* ptr = slash	865:2:18099:18111	6275520	4	True				
ANR	6275693	AssignmentExpression	* ptr = slash		6275520	0		=			
ANR	6275694	UnaryOperationExpression	* ptr		6275520	0					
ANR	6275695	UnaryOperator	*		6275520	0					
ANR	6275696	Identifier	ptr		6275520	1					
ANR	6275697	Identifier	slash		6275520	1					
ANR	6275698	ExpressionStatement	ptr ++	866:2:18115:18120	6275520	5	True				
ANR	6275699	PostIncDecOperationExpression	ptr ++		6275520	0					
ANR	6275700	Identifier	ptr		6275520	0					
ANR	6275701	IncDec	++		6275520	1					
ANR	6275702	IfStatement	if ( ! r_sys_mkdir ( path ) && r_sys_mkdir_failed ( ) )		6275520	7					
ANR	6275703	Condition	! r_sys_mkdir ( path ) && r_sys_mkdir_failed ( )	868:5:18130:18173	6275520	0	True				
ANR	6275704	AndExpression	! r_sys_mkdir ( path ) && r_sys_mkdir_failed ( )		6275520	0		&&			
ANR	6275705	UnaryOperationExpression	! r_sys_mkdir ( path )		6275520	0					
ANR	6275706	UnaryOperator	!		6275520	0					
ANR	6275707	CallExpression	r_sys_mkdir ( path )		6275520	1					
ANR	6275708	Callee	r_sys_mkdir		6275520	0					
ANR	6275709	Identifier	r_sys_mkdir		6275520	0					
ANR	6275710	ArgumentList	path		6275520	1					
ANR	6275711	Argument	path		6275520	0					
ANR	6275712	Identifier	path		6275520	0					
ANR	6275713	CallExpression	r_sys_mkdir_failed ( )		6275520	1					
ANR	6275714	Callee	r_sys_mkdir_failed		6275520	0					
ANR	6275715	Identifier	r_sys_mkdir_failed		6275520	0					
ANR	6275716	ArgumentList			6275520	1					
ANR	6275717	CompoundStatement		40:51:710:710	6275520	1					
ANR	6275718	ExpressionStatement	ret = false	869:2:18180:18191	6275520	0	True				
ANR	6275719	AssignmentExpression	ret = false		6275520	0		=			
ANR	6275720	Identifier	ret		6275520	0					
ANR	6275721	Identifier	false		6275520	1					
ANR	6275722	ExpressionStatement	free ( path )	871:1:18197:18208	6275520	8	True				
ANR	6275723	CallExpression	free ( path )		6275520	0					
ANR	6275724	Callee	free		6275520	0					
ANR	6275725	Identifier	free		6275520	0					
ANR	6275726	ArgumentList	path		6275520	1					
ANR	6275727	Argument	path		6275520	0					
ANR	6275728	Identifier	path		6275520	0					
ANR	6275729	ReturnStatement	return ret ;	872:1:18211:18221	6275520	9	True				
ANR	6275730	Identifier	ret		6275520	0					
ANR	6275731	ReturnType	R_API bool		6275520	1					
ANR	6275732	Identifier	r_sys_mkdirp		6275520	2					
ANR	6275733	ParameterList	const char * dir		6275520	3					
ANR	6275734	Parameter	const char * dir	829:24:17448:17462	6275520	0	True				
ANR	6275735	ParameterType	const char *		6275520	0					
ANR	6275736	Identifier	dir		6275520	1					
ANR	6275737	CFGEntryNode	ENTRY		6275520		True				
ANR	6275738	CFGExitNode	EXIT		6275520		True				
ANR	6275739	InfiniteForNode	true		6275520		True				
ANR	6275740	Symbol	ret		6275520						
ANR	6275741	Symbol	false		6275520						
ANR	6275742	Symbol	* R_SYS_DIR		6275520						
ANR	6275743	Symbol	r_sys_mkdir_failed		6275520						
ANR	6275744	Symbol	dir		6275520						
ANR	6275745	Symbol	ptr		6275520						
ANR	6275746	Symbol	r_sys_mkdir		6275520						
ANR	6275747	Symbol	p		6275520						
ANR	6275748	Symbol	path		6275520						
ANR	6275749	Symbol	R_SYS_DIR		6275520						
ANR	6275750	Symbol	strstr		6275520						
ANR	6275751	Symbol	true		6275520						
ANR	6275752	Symbol	* ptr		6275520						
ANR	6275753	Symbol	slash		6275520						
ANR	6275754	Symbol	strdup		6275520						
ANR	6275755	Function	r_sys_perror_str	875:0:18226:18843							
ANR	6275756	FunctionDef	r_sys_perror_str (const char * fun)		6275755	0					
ANR	6275757	CompoundStatement		875:45:18271:18843	6275755	0					
ANR	6275758	Statement	pragma	877:1:18287:18292	6275755	0	True				
ANR	6275759	Statement	push_macro	877:8:18294:18303	6275755	1	True				
ANR	6275760	Statement	(	877:18:18304:18304	6275755	2	True				
ANR	6275761	Statement	"""perror"""	877:19:18305:18312	6275755	3	True				
ANR	6275762	Statement	)	877:27:18313:18313	6275755	4	True				
ANR	6275763	IdentifierDeclStatement	undef perror perror ( fun ) ;	878:1:18316:18342	6275755	5	True				
ANR	6275764	IdentifierDecl	perror ( fun )		6275755	0					
ANR	6275765	IdentifierDeclType	undef perror		6275755	0					
ANR	6275766	Identifier	perror		6275755	1					
ANR	6275767	Identifier	fun		6275755	2					
ANR	6275768	Statement	pragma	880:1:18345:18350	6275755	6	True				
ANR	6275769	Statement	pop_macro	880:8:18352:18360	6275755	7	True				
ANR	6275770	Statement	(	880:17:18361:18361	6275755	8	True				
ANR	6275771	Statement	"""perror"""	880:18:18362:18369	6275755	9	True				
ANR	6275772	Statement	)	880:26:18370:18370	6275755	10	True				
ANR	6275773	ReturnType	R_API void		6275755	1					
ANR	6275774	Identifier	r_sys_perror_str		6275755	2					
ANR	6275775	ParameterList	const char * fun		6275755	3					
ANR	6275776	Parameter	const char * fun	875:28:18254:18268	6275755	0	True				
ANR	6275777	ParameterType	const char *		6275755	0					
ANR	6275778	Identifier	fun		6275755	1					
ANR	6275779	CFGEntryNode	ENTRY		6275755		True				
ANR	6275780	CFGExitNode	EXIT		6275755		True				
ANR	6275781	Symbol	perror		6275755						
ANR	6275782	Symbol	fun		6275755						
ANR	6275783	Function	r_sys_arch_match	905:0:18846:19251							
ANR	6275784	FunctionDef	"r_sys_arch_match (const char * archstr , const char * arch)"		6275783	0					
ANR	6275785	CompoundStatement		905:67:18913:19251	6275783	0					
ANR	6275786	IdentifierDeclStatement	char * ptr ;	906:1:18916:18925	6275783	0	True				
ANR	6275787	IdentifierDecl	* ptr		6275783	0					
ANR	6275788	IdentifierDeclType	char *		6275783	0					
ANR	6275789	Identifier	ptr		6275783	1					
ANR	6275790	IfStatement	if ( ! archstr || ! arch || ! * archstr || ! * arch )		6275783	1					
ANR	6275791	Condition	! archstr || ! arch || ! * archstr || ! * arch	907:5:18932:18971	6275783	0	True				
ANR	6275792	OrExpression	! archstr || ! arch || ! * archstr || ! * arch		6275783	0		||			
ANR	6275793	UnaryOperationExpression	! archstr		6275783	0					
ANR	6275794	UnaryOperator	!		6275783	0					
ANR	6275795	Identifier	archstr		6275783	1					
ANR	6275796	OrExpression	! arch || ! * archstr || ! * arch		6275783	1		||			
ANR	6275797	UnaryOperationExpression	! arch		6275783	0					
ANR	6275798	UnaryOperator	!		6275783	0					
ANR	6275799	Identifier	arch		6275783	1					
ANR	6275800	OrExpression	! * archstr || ! * arch		6275783	1		||			
ANR	6275801	UnaryOperationExpression	! * archstr		6275783	0					
ANR	6275802	UnaryOperator	!		6275783	0					
ANR	6275803	UnaryOperationExpression	* archstr		6275783	1					
ANR	6275804	UnaryOperator	*		6275783	0					
ANR	6275805	Identifier	archstr		6275783	1					
ANR	6275806	UnaryOperationExpression	! * arch		6275783	1					
ANR	6275807	UnaryOperator	!		6275783	0					
ANR	6275808	UnaryOperationExpression	* arch		6275783	1					
ANR	6275809	UnaryOperator	*		6275783	0					
ANR	6275810	Identifier	arch		6275783	1					
ANR	6275811	CompoundStatement		3:47:60:60	6275783	1					
ANR	6275812	ReturnStatement	return true ;	908:2:18978:18989	6275783	0	True				
ANR	6275813	Identifier	true		6275783	0					
ANR	6275814	IfStatement	"if ( ! strcmp ( archstr , ""*"" ) || ! strcmp ( archstr , ""any"" ) )"		6275783	2					
ANR	6275815	Condition	"! strcmp ( archstr , ""*"" ) || ! strcmp ( archstr , ""any"" )"	910:5:18999:19048	6275783	0	True				
ANR	6275816	OrExpression	"! strcmp ( archstr , ""*"" ) || ! strcmp ( archstr , ""any"" )"		6275783	0		||			
ANR	6275817	UnaryOperationExpression	"! strcmp ( archstr , ""*"" )"		6275783	0					
ANR	6275818	UnaryOperator	!		6275783	0					
ANR	6275819	CallExpression	"strcmp ( archstr , ""*"" )"		6275783	1					
ANR	6275820	Callee	strcmp		6275783	0					
ANR	6275821	Identifier	strcmp		6275783	0					
ANR	6275822	ArgumentList	archstr		6275783	1					
ANR	6275823	Argument	archstr		6275783	0					
ANR	6275824	Identifier	archstr		6275783	0					
ANR	6275825	Argument	"""*"""		6275783	1					
ANR	6275826	PrimaryExpression	"""*"""		6275783	0					
ANR	6275827	UnaryOperationExpression	"! strcmp ( archstr , ""any"" )"		6275783	1					
ANR	6275828	UnaryOperator	!		6275783	0					
ANR	6275829	CallExpression	"strcmp ( archstr , ""any"" )"		6275783	1					
ANR	6275830	Callee	strcmp		6275783	0					
ANR	6275831	Identifier	strcmp		6275783	0					
ANR	6275832	ArgumentList	archstr		6275783	1					
ANR	6275833	Argument	archstr		6275783	0					
ANR	6275834	Identifier	archstr		6275783	0					
ANR	6275835	Argument	"""any"""		6275783	1					
ANR	6275836	PrimaryExpression	"""any"""		6275783	0					
ANR	6275837	CompoundStatement		6:57:137:137	6275783	1					
ANR	6275838	ReturnStatement	return true ;	911:2:19055:19066	6275783	0	True				
ANR	6275839	Identifier	true		6275783	0					
ANR	6275840	IfStatement	"if ( ! strcmp ( archstr , arch ) )"		6275783	3					
ANR	6275841	Condition	"! strcmp ( archstr , arch )"	913:5:19076:19098	6275783	0	True				
ANR	6275842	UnaryOperationExpression	"! strcmp ( archstr , arch )"		6275783	0					
ANR	6275843	UnaryOperator	!		6275783	0					
ANR	6275844	CallExpression	"strcmp ( archstr , arch )"		6275783	1					
ANR	6275845	Callee	strcmp		6275783	0					
ANR	6275846	Identifier	strcmp		6275783	0					
ANR	6275847	ArgumentList	archstr		6275783	1					
ANR	6275848	Argument	archstr		6275783	0					
ANR	6275849	Identifier	archstr		6275783	0					
ANR	6275850	Argument	arch		6275783	1					
ANR	6275851	Identifier	arch		6275783	0					
ANR	6275852	CompoundStatement		9:30:187:187	6275783	1					
ANR	6275853	ReturnStatement	return true ;	914:2:19105:19116	6275783	0	True				
ANR	6275854	Identifier	true		6275783	0					
ANR	6275855	IfStatement	"if ( ( ptr = strstr ( archstr , arch ) ) )"		6275783	4					
ANR	6275856	Condition	"ptr = strstr ( archstr , arch )"	916:5:19126:19155	6275783	0	True				
ANR	6275857	AssignmentExpression	"ptr = strstr ( archstr , arch )"		6275783	0		=			
ANR	6275858	Identifier	ptr		6275783	0					
ANR	6275859	CallExpression	"strstr ( archstr , arch )"		6275783	1					
ANR	6275860	Callee	strstr		6275783	0					
ANR	6275861	Identifier	strstr		6275783	0					
ANR	6275862	ArgumentList	archstr		6275783	1					
ANR	6275863	Argument	archstr		6275783	0					
ANR	6275864	Identifier	archstr		6275783	0					
ANR	6275865	Argument	arch		6275783	1					
ANR	6275866	Identifier	arch		6275783	0					
ANR	6275867	CompoundStatement		13:2:248:275	6275783	1					
ANR	6275868	IdentifierDeclStatement	char p = ptr [ strlen ( arch ) ] ;	917:2:19162:19189	6275783	0	True				
ANR	6275869	IdentifierDecl	p = ptr [ strlen ( arch ) ]		6275783	0					
ANR	6275870	IdentifierDeclType	char		6275783	0					
ANR	6275871	Identifier	p		6275783	1					
ANR	6275872	AssignmentExpression	p = ptr [ strlen ( arch ) ]		6275783	2		=			
ANR	6275873	Identifier	p		6275783	0					
ANR	6275874	ArrayIndexing	ptr [ strlen ( arch ) ]		6275783	1					
ANR	6275875	Identifier	ptr		6275783	0					
ANR	6275876	CallExpression	strlen ( arch )		6275783	1					
ANR	6275877	Callee	strlen		6275783	0					
ANR	6275878	Identifier	strlen		6275783	0					
ANR	6275879	ArgumentList	arch		6275783	1					
ANR	6275880	Argument	arch		6275783	0					
ANR	6275881	Identifier	arch		6275783	0					
ANR	6275882	IfStatement	"if ( ! p || p == ',' )"		6275783	1					
ANR	6275883	Condition	"! p || p == ','"	918:6:19197:19208	6275783	0	True				
ANR	6275884	OrExpression	"! p || p == ','"		6275783	0		||			
ANR	6275885	UnaryOperationExpression	! p		6275783	0					
ANR	6275886	UnaryOperator	!		6275783	0					
ANR	6275887	Identifier	p		6275783	1					
ANR	6275888	EqualityExpression	"p == ','"		6275783	1		==			
ANR	6275889	Identifier	p		6275783	0					
ANR	6275890	PrimaryExpression	"','"		6275783	1					
ANR	6275891	CompoundStatement		14:20:297:297	6275783	1					
ANR	6275892	ReturnStatement	return true ;	919:3:19216:19227	6275783	0	True				
ANR	6275893	Identifier	true		6275783	0					
ANR	6275894	ReturnStatement	return false ;	922:1:19237:19249	6275783	5	True				
ANR	6275895	Identifier	false		6275783	0					
ANR	6275896	ReturnType	R_API bool		6275783	1					
ANR	6275897	Identifier	r_sys_arch_match		6275783	2					
ANR	6275898	ParameterList	"const char * archstr , const char * arch"		6275783	3					
ANR	6275899	Parameter	const char * archstr	905:28:18874:18892	6275783	0	True				
ANR	6275900	ParameterType	const char *		6275783	0					
ANR	6275901	Identifier	archstr		6275783	1					
ANR	6275902	Parameter	const char * arch	905:49:18895:18910	6275783	1	True				
ANR	6275903	ParameterType	const char *		6275783	0					
ANR	6275904	Identifier	arch		6275783	1					
ANR	6275905	CFGEntryNode	ENTRY		6275783		True				
ANR	6275906	CFGExitNode	EXIT		6275783		True				
ANR	6275907	Symbol	strcmp		6275783						
ANR	6275908	Symbol	false		6275783						
ANR	6275909	Symbol	* archstr		6275783						
ANR	6275910	Symbol	ptr		6275783						
ANR	6275911	Symbol	* arch		6275783						
ANR	6275912	Symbol	p		6275783						
ANR	6275913	Symbol	strlen		6275783						
ANR	6275914	Symbol	archstr		6275783						
ANR	6275915	Symbol	* strlen		6275783						
ANR	6275916	Symbol	strstr		6275783						
ANR	6275917	Symbol	true		6275783						
ANR	6275918	Symbol	* ptr		6275783						
ANR	6275919	Symbol	arch		6275783						
ANR	6275920	Function	r_sys_arch_id	925:0:19254:19449							
ANR	6275921	FunctionDef	r_sys_arch_id (const char * arch)		6275920	0					
ANR	6275922	CompoundStatement		925:42:19296:19449	6275920	0					
ANR	6275923	IdentifierDeclStatement	int i ;	926:1:19299:19304	6275920	0	True				
ANR	6275924	IdentifierDecl	i		6275920	0					
ANR	6275925	IdentifierDeclType	int		6275920	0					
ANR	6275926	Identifier	i		6275920	1					
ANR	6275927	ForStatement	for ( i = 0 ; arch_bit_array [ i ] . name ; i ++ )		6275920	1					
ANR	6275928	ForInit	i = 0 ;	927:6:19312:19317	6275920	0	True				
ANR	6275929	AssignmentExpression	i = 0		6275920	0		=			
ANR	6275930	Identifier	i		6275920	0					
ANR	6275931	PrimaryExpression	0		6275920	1					
ANR	6275932	Condition	arch_bit_array [ i ] . name	927:13:19319:19340	6275920	1	True				
ANR	6275933	MemberAccess	arch_bit_array [ i ] . name		6275920	0					
ANR	6275934	ArrayIndexing	arch_bit_array [ i ]		6275920	0					
ANR	6275935	Identifier	arch_bit_array		6275920	0					
ANR	6275936	Identifier	i		6275920	1					
ANR	6275937	Identifier	name		6275920	1					
ANR	6275938	PostIncDecOperationExpression	i ++	927:37:19343:19345	6275920	2	True				
ANR	6275939	Identifier	i		6275920	0					
ANR	6275940	IncDec	++		6275920	1					
ANR	6275941	CompoundStatement		3:42:51:51	6275920	3					
ANR	6275942	IfStatement	"if ( ! strcmp ( arch , arch_bit_array [ i ] . name ) )"		6275920	0					
ANR	6275943	Condition	"! strcmp ( arch , arch_bit_array [ i ] . name )"	928:6:19356:19393	6275920	0	True				
ANR	6275944	UnaryOperationExpression	"! strcmp ( arch , arch_bit_array [ i ] . name )"		6275920	0					
ANR	6275945	UnaryOperator	!		6275920	0					
ANR	6275946	CallExpression	"strcmp ( arch , arch_bit_array [ i ] . name )"		6275920	1					
ANR	6275947	Callee	strcmp		6275920	0					
ANR	6275948	Identifier	strcmp		6275920	0					
ANR	6275949	ArgumentList	arch		6275920	1					
ANR	6275950	Argument	arch		6275920	0					
ANR	6275951	Identifier	arch		6275920	0					
ANR	6275952	Argument	arch_bit_array [ i ] . name		6275920	1					
ANR	6275953	MemberAccess	arch_bit_array [ i ] . name		6275920	0					
ANR	6275954	ArrayIndexing	arch_bit_array [ i ]		6275920	0					
ANR	6275955	Identifier	arch_bit_array		6275920	0					
ANR	6275956	Identifier	i		6275920	1					
ANR	6275957	Identifier	name		6275920	1					
ANR	6275958	CompoundStatement		4:46:99:99	6275920	1					
ANR	6275959	ReturnStatement	return arch_bit_array [ i ] . bit ;	929:3:19401:19429	6275920	0	True				
ANR	6275960	MemberAccess	arch_bit_array [ i ] . bit		6275920	0					
ANR	6275961	ArrayIndexing	arch_bit_array [ i ]		6275920	0					
ANR	6275962	Identifier	arch_bit_array		6275920	0					
ANR	6275963	Identifier	i		6275920	1					
ANR	6275964	Identifier	bit		6275920	1					
ANR	6275965	ReturnStatement	return 0 ;	932:1:19439:19447	6275920	2	True				
ANR	6275966	PrimaryExpression	0		6275920	0					
ANR	6275967	ReturnType	R_API int		6275920	1					
ANR	6275968	Identifier	r_sys_arch_id		6275920	2					
ANR	6275969	ParameterList	const char * arch		6275920	3					
ANR	6275970	Parameter	const char * arch	925:24:19278:19293	6275920	0	True				
ANR	6275971	ParameterType	const char *		6275920	0					
ANR	6275972	Identifier	arch		6275920	1					
ANR	6275973	CFGEntryNode	ENTRY		6275920		True				
ANR	6275974	CFGExitNode	EXIT		6275920		True				
ANR	6275975	Symbol	* arch_bit_array		6275920						
ANR	6275976	Symbol	strcmp		6275920						
ANR	6275977	Symbol	arch_bit_array [ i ] . name		6275920						
ANR	6275978	Symbol	* i		6275920						
ANR	6275979	Symbol	arch_bit_array		6275920						
ANR	6275980	Symbol	arch_bit_array [ i ] . bit		6275920						
ANR	6275981	Symbol	i		6275920						
ANR	6275982	Symbol	arch		6275920						
ANR	6275983	Function	r_sys_arch_str	935:6:19458:19644							
ANR	6275984	FunctionDef	r_sys_arch_str (int arch)		6275983	0					
ANR	6275985	CompoundStatement		935:43:19495:19644	6275983	0					
ANR	6275986	IdentifierDeclStatement	int i ;	936:1:19498:19503	6275983	0	True				
ANR	6275987	IdentifierDecl	i		6275983	0					
ANR	6275988	IdentifierDeclType	int		6275983	0					
ANR	6275989	Identifier	i		6275983	1					
ANR	6275990	ForStatement	for ( i = 0 ; arch_bit_array [ i ] . name ; i ++ )		6275983	1					
ANR	6275991	ForInit	i = 0 ;	937:6:19511:19516	6275983	0	True				
ANR	6275992	AssignmentExpression	i = 0		6275983	0		=			
ANR	6275993	Identifier	i		6275983	0					
ANR	6275994	PrimaryExpression	0		6275983	1					
ANR	6275995	Condition	arch_bit_array [ i ] . name	937:13:19518:19539	6275983	1	True				
ANR	6275996	MemberAccess	arch_bit_array [ i ] . name		6275983	0					
ANR	6275997	ArrayIndexing	arch_bit_array [ i ]		6275983	0					
ANR	6275998	Identifier	arch_bit_array		6275983	0					
ANR	6275999	Identifier	i		6275983	1					
ANR	6276000	Identifier	name		6275983	1					
ANR	6276001	PostIncDecOperationExpression	i ++	937:37:19542:19544	6275983	2	True				
ANR	6276002	Identifier	i		6275983	0					
ANR	6276003	IncDec	++		6275983	1					
ANR	6276004	CompoundStatement		3:42:51:51	6275983	3					
ANR	6276005	IfStatement	if ( arch & arch_bit_array [ i ] . bit )		6275983	0					
ANR	6276006	Condition	arch & arch_bit_array [ i ] . bit	938:6:19555:19582	6275983	0	True				
ANR	6276007	BitAndExpression	arch & arch_bit_array [ i ] . bit		6275983	0		&			
ANR	6276008	Identifier	arch		6275983	0					
ANR	6276009	MemberAccess	arch_bit_array [ i ] . bit		6275983	1					
ANR	6276010	ArrayIndexing	arch_bit_array [ i ]		6275983	0					
ANR	6276011	Identifier	arch_bit_array		6275983	0					
ANR	6276012	Identifier	i		6275983	1					
ANR	6276013	Identifier	bit		6275983	1					
ANR	6276014	CompoundStatement		4:36:89:89	6275983	1					
ANR	6276015	ReturnStatement	return arch_bit_array [ i ] . name ;	939:3:19590:19619	6275983	0	True				
ANR	6276016	MemberAccess	arch_bit_array [ i ] . name		6275983	0					
ANR	6276017	ArrayIndexing	arch_bit_array [ i ]		6275983	0					
ANR	6276018	Identifier	arch_bit_array		6275983	0					
ANR	6276019	Identifier	i		6275983	1					
ANR	6276020	Identifier	name		6275983	1					
ANR	6276021	ReturnStatement	"return ""none"" ;"	942:1:19629:19642	6275983	2	True				
ANR	6276022	PrimaryExpression	"""none"""		6275983	0					
ANR	6276023	ReturnType	const char *		6275983	1					
ANR	6276024	Identifier	r_sys_arch_str		6275983	2					
ANR	6276025	ParameterList	int arch		6275983	3					
ANR	6276026	Parameter	int arch	935:33:19485:19492	6275983	0	True				
ANR	6276027	ParameterType	int		6275983	0					
ANR	6276028	Identifier	arch		6275983	1					
ANR	6276029	CFGEntryNode	ENTRY		6275983		True				
ANR	6276030	CFGExitNode	EXIT		6275983		True				
ANR	6276031	Symbol	* arch_bit_array		6275983						
ANR	6276032	Symbol	arch_bit_array [ i ] . name		6275983						
ANR	6276033	Symbol	* i		6275983						
ANR	6276034	Symbol	arch_bit_array		6275983						
ANR	6276035	Symbol	arch_bit_array [ i ] . bit		6275983						
ANR	6276036	Symbol	i		6275983						
ANR	6276037	Symbol	arch		6275983						
ANR	6276038	Function	r_sys_run	946:0:19666:20611							
ANR	6276039	FunctionDef	"r_sys_run (const ut8 * buf , int len)"		6276038	0					
ANR	6276040	CompoundStatement		946:45:19711:20611	6276038	0					
ANR	6276041	IdentifierDeclStatement	const int sz = 4096 ;	947:1:19714:19733	6276038	0	True				
ANR	6276042	IdentifierDecl	sz = 4096		6276038	0					
ANR	6276043	IdentifierDeclType	const int		6276038	0					
ANR	6276044	Identifier	sz		6276038	1					
ANR	6276045	AssignmentExpression	sz = 4096		6276038	2		=			
ANR	6276046	Identifier	sz		6276038	0					
ANR	6276047	PrimaryExpression	4096		6276038	1					
ANR	6276048	IdentifierDeclStatement	"int pdelta , ret , ( * cb ) ( ) ;"	948:1:19736:19760	6276038	1	True				
ANR	6276049	IdentifierDecl	pdelta		6276038	0					
ANR	6276050	IdentifierDeclType	int		6276038	0					
ANR	6276051	Identifier	pdelta		6276038	1					
ANR	6276052	IdentifierDecl	ret		6276038	1					
ANR	6276053	IdentifierDeclType	int		6276038	0					
ANR	6276054	Identifier	ret		6276038	1					
ANR	6276055	IdentifierDecl	( * cb ) ( )		6276038	2					
ANR	6276056	IdentifierDeclType	int ( * ) ( )		6276038	0					
ANR	6276057	Identifier	cb		6276038	1					
ANR	6276058	IdentifierDeclStatement	"int st , pid ;"	950:1:19776:19787	6276038	2	True				
ANR	6276059	IdentifierDecl	st		6276038	0					
ANR	6276060	IdentifierDeclType	int		6276038	0					
ANR	6276061	Identifier	st		6276038	1					
ANR	6276062	IdentifierDecl	pid		6276038	1					
ANR	6276063	IdentifierDeclType	int		6276038	0					
ANR	6276064	Identifier	pid		6276038	1					
ANR	6276065	IdentifierDeclStatement	"ut8 * ptr , * p = malloc ( ( sz + len ) << 1 ) ;"	953:1:19845:19884	6276038	3	True				
ANR	6276066	IdentifierDecl	* ptr		6276038	0					
ANR	6276067	IdentifierDeclType	ut8 *		6276038	0					
ANR	6276068	Identifier	ptr		6276038	1					
ANR	6276069	IdentifierDecl	* p = malloc ( ( sz + len ) << 1 )		6276038	1					
ANR	6276070	IdentifierDeclType	ut8 *		6276038	0					
ANR	6276071	Identifier	p		6276038	1					
ANR	6276072	AssignmentExpression	* p = malloc ( ( sz + len ) << 1 )		6276038	2		=			
ANR	6276073	Identifier	p		6276038	0					
ANR	6276074	CallExpression	malloc ( ( sz + len ) << 1 )		6276038	1					
ANR	6276075	Callee	malloc		6276038	0					
ANR	6276076	Identifier	malloc		6276038	0					
ANR	6276077	ArgumentList	( sz + len ) << 1		6276038	1					
ANR	6276078	Argument	( sz + len ) << 1		6276038	0					
ANR	6276079	ShiftExpression	( sz + len ) << 1		6276038	0		<<			
ANR	6276080	AdditiveExpression	sz + len		6276038	0		+			
ANR	6276081	Identifier	sz		6276038	0					
ANR	6276082	Identifier	len		6276038	1					
ANR	6276083	PrimaryExpression	1		6276038	1					
ANR	6276084	ExpressionStatement	ptr = p	954:1:19887:19894	6276038	4	True				
ANR	6276085	AssignmentExpression	ptr = p		6276038	0		=			
ANR	6276086	Identifier	ptr		6276038	0					
ANR	6276087	Identifier	p		6276038	1					
ANR	6276088	ExpressionStatement	pdelta = ( ( size_t ) ( p ) ) & ( 4096 - 1 )	955:1:19897:19932	6276038	5	True				
ANR	6276089	AssignmentExpression	pdelta = ( ( size_t ) ( p ) ) & ( 4096 - 1 )		6276038	0		=			
ANR	6276090	Identifier	pdelta		6276038	0					
ANR	6276091	BitAndExpression	( ( size_t ) ( p ) ) & ( 4096 - 1 )		6276038	1		&			
ANR	6276092	CastExpression	( size_t ) ( p )		6276038	0					
ANR	6276093	CastTarget	size_t		6276038	0					
ANR	6276094	Identifier	p		6276038	1					
ANR	6276095	AdditiveExpression	4096 - 1		6276038	1		-			
ANR	6276096	PrimaryExpression	4096		6276038	0					
ANR	6276097	PrimaryExpression	1		6276038	1					
ANR	6276098	IfStatement	if ( pdelta )		6276038	6					
ANR	6276099	Condition	pdelta	956:5:19939:19944	6276038	0	True				
ANR	6276100	Identifier	pdelta		6276038	0					
ANR	6276101	CompoundStatement		11:13:235:235	6276038	1					
ANR	6276102	ExpressionStatement	ptr += ( 4096 - pdelta )	957:2:19951:19973	6276038	0	True				
ANR	6276103	AssignmentExpression	ptr += ( 4096 - pdelta )		6276038	0		+=			
ANR	6276104	Identifier	ptr		6276038	0					
ANR	6276105	AdditiveExpression	4096 - pdelta		6276038	1		-			
ANR	6276106	PrimaryExpression	4096		6276038	0					
ANR	6276107	Identifier	pdelta		6276038	1					
ANR	6276108	IfStatement	if ( ! ptr || ! buf )		6276038	7					
ANR	6276109	Condition	! ptr || ! buf	959:5:19983:19994	6276038	0	True				
ANR	6276110	OrExpression	! ptr || ! buf		6276038	0		||			
ANR	6276111	UnaryOperationExpression	! ptr		6276038	0					
ANR	6276112	UnaryOperator	!		6276038	0					
ANR	6276113	Identifier	ptr		6276038	1					
ANR	6276114	UnaryOperationExpression	! buf		6276038	1					
ANR	6276115	UnaryOperator	!		6276038	0					
ANR	6276116	Identifier	buf		6276038	1					
ANR	6276117	CompoundStatement		14:19:285:285	6276038	1					
ANR	6276118	ExpressionStatement	"eprintf ( ""r_sys_run: Cannot run empty buffer\\n"" )"	960:2:20001:20049	6276038	0	True				
ANR	6276119	CallExpression	"eprintf ( ""r_sys_run: Cannot run empty buffer\\n"" )"		6276038	0					
ANR	6276120	Callee	eprintf		6276038	0					
ANR	6276121	Identifier	eprintf		6276038	0					
ANR	6276122	ArgumentList	"""r_sys_run: Cannot run empty buffer\\n"""		6276038	1					
ANR	6276123	Argument	"""r_sys_run: Cannot run empty buffer\\n"""		6276038	0					
ANR	6276124	PrimaryExpression	"""r_sys_run: Cannot run empty buffer\\n"""		6276038	0					
ANR	6276125	ExpressionStatement	free ( p )	961:2:20053:20061	6276038	1	True				
ANR	6276126	CallExpression	free ( p )		6276038	0					
ANR	6276127	Callee	free		6276038	0					
ANR	6276128	Identifier	free		6276038	0					
ANR	6276129	ArgumentList	p		6276038	1					
ANR	6276130	Argument	p		6276038	0					
ANR	6276131	Identifier	p		6276038	0					
ANR	6276132	ReturnStatement	return false ;	962:2:20065:20077	6276038	2	True				
ANR	6276133	Identifier	false		6276038	0					
ANR	6276134	ExpressionStatement	"memcpy ( ptr , buf , len )"	964:1:20083:20105	6276038	8	True				
ANR	6276135	CallExpression	"memcpy ( ptr , buf , len )"		6276038	0					
ANR	6276136	Callee	memcpy		6276038	0					
ANR	6276137	Identifier	memcpy		6276038	0					
ANR	6276138	ArgumentList	ptr		6276038	1					
ANR	6276139	Argument	ptr		6276038	0					
ANR	6276140	Identifier	ptr		6276038	0					
ANR	6276141	Argument	buf		6276038	1					
ANR	6276142	Identifier	buf		6276038	0					
ANR	6276143	Argument	len		6276038	2					
ANR	6276144	Identifier	len		6276038	0					
ANR	6276145	ExpressionStatement	"r_mem_protect ( ptr , sz , ""rx"" )"	965:1:20108:20137	6276038	9	True				
ANR	6276146	CallExpression	"r_mem_protect ( ptr , sz , ""rx"" )"		6276038	0					
ANR	6276147	Callee	r_mem_protect		6276038	0					
ANR	6276148	Identifier	r_mem_protect		6276038	0					
ANR	6276149	ArgumentList	ptr		6276038	1					
ANR	6276150	Argument	ptr		6276038	0					
ANR	6276151	Identifier	ptr		6276038	0					
ANR	6276152	Argument	sz		6276038	1					
ANR	6276153	Identifier	sz		6276038	0					
ANR	6276154	Argument	"""rx"""		6276038	2					
ANR	6276155	PrimaryExpression	"""rx"""		6276038	0					
ANR	6276156	Statement	cb	967:1:20198:20199	6276038	10	True				
ANR	6276157	Statement	=	967:4:20201:20201	6276038	11	True				
ANR	6276158	Statement	(	967:6:20203:20203	6276038	12	True				
ANR	6276159	Statement	int	967:7:20204:20206	6276038	13	True				
ANR	6276160	Statement	(	967:11:20208:20208	6276038	14	True				
ANR	6276161	Statement	*	967:12:20209:20209	6276038	15	True				
ANR	6276162	Statement	)	967:13:20210:20210	6276038	16	True				
ANR	6276163	Statement	(	967:14:20211:20211	6276038	17	True				
ANR	6276164	Statement	)	967:15:20212:20212	6276038	18	True				
ANR	6276165	Statement	)	967:16:20213:20213	6276038	19	True				
ANR	6276166	ExpressionStatement	ptr	967:17:20214:20217	6276038	20	True				
ANR	6276167	Identifier	ptr		6276038	0					
ANR	6276168	ExpressionStatement	pid = r_sys_fork ( )	970:1:20246:20265	6276038	21	True				
ANR	6276169	AssignmentExpression	pid = r_sys_fork ( )		6276038	0		=			
ANR	6276170	Identifier	pid		6276038	0					
ANR	6276171	CallExpression	r_sys_fork ( )		6276038	1					
ANR	6276172	Callee	r_sys_fork		6276038	0					
ANR	6276173	Identifier	r_sys_fork		6276038	0					
ANR	6276174	ArgumentList			6276038	1					
ANR	6276175	IfStatement	if ( pid < 0 )		6276038	22					
ANR	6276176	Condition	pid < 0	974:5:20296:20302	6276038	0	True				
ANR	6276177	RelationalExpression	pid < 0		6276038	0		<			
ANR	6276178	Identifier	pid		6276038	0					
ANR	6276179	PrimaryExpression	0		6276038	1					
ANR	6276180	CompoundStatement		29:14:593:593	6276038	1					
ANR	6276181	ReturnStatement	return cb ( ) ;	975:2:20309:20321	6276038	0	True				
ANR	6276182	CallExpression	cb ( )		6276038	0					
ANR	6276183	Callee	cb		6276038	0					
ANR	6276184	Identifier	cb		6276038	0					
ANR	6276185	ArgumentList			6276038	1					
ANR	6276186	IfStatement	if ( ! pid )		6276038	23					
ANR	6276187	Condition	! pid	977:5:20331:20334	6276038	0	True				
ANR	6276188	UnaryOperationExpression	! pid		6276038	0					
ANR	6276189	UnaryOperator	!		6276038	0					
ANR	6276190	Identifier	pid		6276038	1					
ANR	6276191	CompoundStatement		32:11:625:625	6276038	1					
ANR	6276192	ExpressionStatement	ret = cb ( )	978:2:20341:20352	6276038	0	True				
ANR	6276193	AssignmentExpression	ret = cb ( )		6276038	0		=			
ANR	6276194	Identifier	ret		6276038	0					
ANR	6276195	CallExpression	cb ( )		6276038	1					
ANR	6276196	Callee	cb		6276038	0					
ANR	6276197	Identifier	cb		6276038	0					
ANR	6276198	ArgumentList			6276038	1					
ANR	6276199	ExpressionStatement	exit ( ret )	979:2:20356:20366	6276038	1	True				
ANR	6276200	CallExpression	exit ( ret )		6276038	0					
ANR	6276201	Callee	exit		6276038	0					
ANR	6276202	Identifier	exit		6276038	0					
ANR	6276203	ArgumentList	ret		6276038	1					
ANR	6276204	Argument	ret		6276038	0					
ANR	6276205	Identifier	ret		6276038	0					
ANR	6276206	ReturnStatement	return ret ;	980:2:20370:20380	6276038	2	True				
ANR	6276207	Identifier	ret		6276038	0					
ANR	6276208	ExpressionStatement	st = 0	982:1:20386:20392	6276038	24	True				
ANR	6276209	AssignmentExpression	st = 0		6276038	0		=			
ANR	6276210	Identifier	st		6276038	0					
ANR	6276211	PrimaryExpression	0		6276038	1					
ANR	6276212	ExpressionStatement	"waitpid ( pid , & st , 0 )"	983:1:20395:20416	6276038	25	True				
ANR	6276213	CallExpression	"waitpid ( pid , & st , 0 )"		6276038	0					
ANR	6276214	Callee	waitpid		6276038	0					
ANR	6276215	Identifier	waitpid		6276038	0					
ANR	6276216	ArgumentList	pid		6276038	1					
ANR	6276217	Argument	pid		6276038	0					
ANR	6276218	Identifier	pid		6276038	0					
ANR	6276219	Argument	& st		6276038	1					
ANR	6276220	UnaryOperationExpression	& st		6276038	0					
ANR	6276221	UnaryOperator	&		6276038	0					
ANR	6276222	Identifier	st		6276038	1					
ANR	6276223	Argument	0		6276038	2					
ANR	6276224	PrimaryExpression	0		6276038	0					
ANR	6276225	IfStatement	if ( WIFSIGNALED ( st ) )		6276038	26					
ANR	6276226	Condition	WIFSIGNALED ( st )	984:5:20423:20438	6276038	0	True				
ANR	6276227	CallExpression	WIFSIGNALED ( st )		6276038	0					
ANR	6276228	Callee	WIFSIGNALED		6276038	0					
ANR	6276229	Identifier	WIFSIGNALED		6276038	0					
ANR	6276230	ArgumentList	st		6276038	1					
ANR	6276231	Argument	st		6276038	0					
ANR	6276232	Identifier	st		6276038	0					
ANR	6276233	CompoundStatement		40:2:733:755	6276038	1					
ANR	6276234	IdentifierDeclStatement	int num = WTERMSIG ( st ) ;	985:2:20445:20467	6276038	0	True				
ANR	6276235	IdentifierDecl	num = WTERMSIG ( st )		6276038	0					
ANR	6276236	IdentifierDeclType	int		6276038	0					
ANR	6276237	Identifier	num		6276038	1					
ANR	6276238	AssignmentExpression	num = WTERMSIG ( st )		6276038	2		=			
ANR	6276239	Identifier	num		6276038	0					
ANR	6276240	CallExpression	WTERMSIG ( st )		6276038	1					
ANR	6276241	Callee	WTERMSIG		6276038	0					
ANR	6276242	Identifier	WTERMSIG		6276038	0					
ANR	6276243	ArgumentList	st		6276038	1					
ANR	6276244	Argument	st		6276038	0					
ANR	6276245	Identifier	st		6276038	0					
ANR	6276246	ExpressionStatement	"eprintf ( ""Got signal %d\\n"" , num )"	986:2:20471:20503	6276038	1	True				
ANR	6276247	CallExpression	"eprintf ( ""Got signal %d\\n"" , num )"		6276038	0					
ANR	6276248	Callee	eprintf		6276038	0					
ANR	6276249	Identifier	eprintf		6276038	0					
ANR	6276250	ArgumentList	"""Got signal %d\\n"""		6276038	1					
ANR	6276251	Argument	"""Got signal %d\\n"""		6276038	0					
ANR	6276252	PrimaryExpression	"""Got signal %d\\n"""		6276038	0					
ANR	6276253	Argument	num		6276038	1					
ANR	6276254	Identifier	num		6276038	0					
ANR	6276255	ExpressionStatement	ret = num	987:2:20507:20516	6276038	2	True				
ANR	6276256	AssignmentExpression	ret = num		6276038	0		=			
ANR	6276257	Identifier	ret		6276038	0					
ANR	6276258	Identifier	num		6276038	1					
ANR	6276259	ElseStatement	else		6276038	0					
ANR	6276260	CompoundStatement		43:8:814:814	6276038	0					
ANR	6276261	ExpressionStatement	ret = WEXITSTATUS ( st )	989:2:20530:20552	6276038	0	True				
ANR	6276262	AssignmentExpression	ret = WEXITSTATUS ( st )		6276038	0		=			
ANR	6276263	Identifier	ret		6276038	0					
ANR	6276264	CallExpression	WEXITSTATUS ( st )		6276038	1					
ANR	6276265	Callee	WEXITSTATUS		6276038	0					
ANR	6276266	Identifier	WEXITSTATUS		6276038	0					
ANR	6276267	ArgumentList	st		6276038	1					
ANR	6276268	Argument	st		6276038	0					
ANR	6276269	Identifier	st		6276038	0					
ANR	6276270	ExpressionStatement	free ( p )	994:1:20588:20596	6276038	27	True				
ANR	6276271	CallExpression	free ( p )		6276038	0					
ANR	6276272	Callee	free		6276038	0					
ANR	6276273	Identifier	free		6276038	0					
ANR	6276274	ArgumentList	p		6276038	1					
ANR	6276275	Argument	p		6276038	0					
ANR	6276276	Identifier	p		6276038	0					
ANR	6276277	ReturnStatement	return ret ;	995:1:20599:20609	6276038	28	True				
ANR	6276278	Identifier	ret		6276038	0					
ANR	6276279	ReturnType	R_API int		6276038	1					
ANR	6276280	Identifier	r_sys_run		6276038	2					
ANR	6276281	ParameterList	"const ut8 * buf , int len"		6276038	3					
ANR	6276282	Parameter	const ut8 * buf	946:20:19686:19699	6276038	0	True				
ANR	6276283	ParameterType	const ut8 *		6276038	0					
ANR	6276284	Identifier	buf		6276038	1					
ANR	6276285	Parameter	int len	946:36:19702:19708	6276038	1	True				
ANR	6276286	ParameterType	int		6276038	0					
ANR	6276287	Identifier	len		6276038	1					
ANR	6276288	CFGEntryNode	ENTRY		6276038		True				
ANR	6276289	CFGExitNode	EXIT		6276038		True				
ANR	6276290	Symbol	ret		6276038						
ANR	6276291	Symbol	st		6276038						
ANR	6276292	Symbol	malloc		6276038						
ANR	6276293	Symbol	WIFSIGNALED		6276038						
ANR	6276294	Symbol	sz		6276038						
ANR	6276295	Symbol	pdelta		6276038						
ANR	6276296	Symbol	num		6276038						
ANR	6276297	Symbol	false		6276038						
ANR	6276298	Symbol	pid		6276038						
ANR	6276299	Symbol	& st		6276038						
ANR	6276300	Symbol	WEXITSTATUS		6276038						
ANR	6276301	Symbol	ptr		6276038						
ANR	6276302	Symbol	p		6276038						
ANR	6276303	Symbol	buf		6276038						
ANR	6276304	Symbol	len		6276038						
ANR	6276305	Symbol	WTERMSIG		6276038						
ANR	6276306	Symbol	r_sys_fork		6276038						
ANR	6276307	Symbol	cb		6276038						
ANR	6276308	Function	r_sys_run_rop	998:0:20614:21567							
ANR	6276309	FunctionDef	"r_sys_run_rop (const ut8 * buf , int len)"		6276308	0					
ANR	6276310	CompoundStatement		998:49:20663:21567	6276308	0					
ANR	6276311	IdentifierDeclStatement	int st ;	1000:1:20679:20685	6276308	0	True				
ANR	6276312	IdentifierDecl	st		6276308	0					
ANR	6276313	IdentifierDeclType	int		6276308	0					
ANR	6276314	Identifier	st		6276308	1					
ANR	6276315	IdentifierDeclStatement	ut8 * bufptr = malloc ( len ) ;	1003:1:20744:20770	6276308	1	True				
ANR	6276316	IdentifierDecl	* bufptr = malloc ( len )		6276308	0					
ANR	6276317	IdentifierDeclType	ut8 *		6276308	0					
ANR	6276318	Identifier	bufptr		6276308	1					
ANR	6276319	AssignmentExpression	* bufptr = malloc ( len )		6276308	2		=			
ANR	6276320	Identifier	bufptr		6276308	0					
ANR	6276321	CallExpression	malloc ( len )		6276308	1					
ANR	6276322	Callee	malloc		6276308	0					
ANR	6276323	Identifier	malloc		6276308	0					
ANR	6276324	ArgumentList	len		6276308	1					
ANR	6276325	Argument	len		6276308	0					
ANR	6276326	Identifier	len		6276308	0					
ANR	6276327	IfStatement	if ( ! bufptr )		6276308	2					
ANR	6276328	Condition	! bufptr	1004:5:20777:20783	6276308	0	True				
ANR	6276329	UnaryOperationExpression	! bufptr		6276308	0					
ANR	6276330	UnaryOperator	!		6276308	0					
ANR	6276331	Identifier	bufptr		6276308	1					
ANR	6276332	CompoundStatement		7:14:122:122	6276308	1					
ANR	6276333	ExpressionStatement	"eprintf ( ""r_sys_run_rop: Cannot allocate buffer\\n"" )"	1005:2:20790:20841	6276308	0	True				
ANR	6276334	CallExpression	"eprintf ( ""r_sys_run_rop: Cannot allocate buffer\\n"" )"		6276308	0					
ANR	6276335	Callee	eprintf		6276308	0					
ANR	6276336	Identifier	eprintf		6276308	0					
ANR	6276337	ArgumentList	"""r_sys_run_rop: Cannot allocate buffer\\n"""		6276308	1					
ANR	6276338	Argument	"""r_sys_run_rop: Cannot allocate buffer\\n"""		6276308	0					
ANR	6276339	PrimaryExpression	"""r_sys_run_rop: Cannot allocate buffer\\n"""		6276308	0					
ANR	6276340	ReturnStatement	return false ;	1006:2:20845:20857	6276308	1	True				
ANR	6276341	Identifier	false		6276308	0					
ANR	6276342	IfStatement	if ( ! buf )		6276308	3					
ANR	6276343	Condition	! buf	1009:5:20868:20871	6276308	0	True				
ANR	6276344	UnaryOperationExpression	! buf		6276308	0					
ANR	6276345	UnaryOperator	!		6276308	0					
ANR	6276346	Identifier	buf		6276308	1					
ANR	6276347	CompoundStatement		12:11:210:210	6276308	1					
ANR	6276348	ExpressionStatement	"eprintf ( ""r_sys_run_rop: Cannot execute empty rop chain\\n"" )"	1010:2:20878:20937	6276308	0	True				
ANR	6276349	CallExpression	"eprintf ( ""r_sys_run_rop: Cannot execute empty rop chain\\n"" )"		6276308	0					
ANR	6276350	Callee	eprintf		6276308	0					
ANR	6276351	Identifier	eprintf		6276308	0					
ANR	6276352	ArgumentList	"""r_sys_run_rop: Cannot execute empty rop chain\\n"""		6276308	1					
ANR	6276353	Argument	"""r_sys_run_rop: Cannot execute empty rop chain\\n"""		6276308	0					
ANR	6276354	PrimaryExpression	"""r_sys_run_rop: Cannot execute empty rop chain\\n"""		6276308	0					
ANR	6276355	ExpressionStatement	free ( bufptr )	1011:2:20941:20954	6276308	1	True				
ANR	6276356	CallExpression	free ( bufptr )		6276308	0					
ANR	6276357	Callee	free		6276308	0					
ANR	6276358	Identifier	free		6276308	0					
ANR	6276359	ArgumentList	bufptr		6276308	1					
ANR	6276360	Argument	bufptr		6276308	0					
ANR	6276361	Identifier	bufptr		6276308	0					
ANR	6276362	ReturnStatement	return false ;	1012:2:20958:20970	6276308	2	True				
ANR	6276363	Identifier	false		6276308	0					
ANR	6276364	ExpressionStatement	"memcpy ( bufptr , buf , len )"	1014:1:20976:21001	6276308	4	True				
ANR	6276365	CallExpression	"memcpy ( bufptr , buf , len )"		6276308	0					
ANR	6276366	Callee	memcpy		6276308	0					
ANR	6276367	Identifier	memcpy		6276308	0					
ANR	6276368	ArgumentList	bufptr		6276308	1					
ANR	6276369	Argument	bufptr		6276308	0					
ANR	6276370	Identifier	bufptr		6276308	0					
ANR	6276371	Argument	buf		6276308	1					
ANR	6276372	Identifier	buf		6276308	0					
ANR	6276373	Argument	len		6276308	2					
ANR	6276374	Identifier	len		6276308	0					
ANR	6276375	IdentifierDeclStatement	pid_t pid = r_sys_fork ( ) ;	1017:1:21030:21055	6276308	5	True				
ANR	6276376	IdentifierDecl	pid = r_sys_fork ( )		6276308	0					
ANR	6276377	IdentifierDeclType	pid_t		6276308	0					
ANR	6276378	Identifier	pid		6276308	1					
ANR	6276379	AssignmentExpression	pid = r_sys_fork ( )		6276308	2		=			
ANR	6276380	Identifier	pid		6276308	0					
ANR	6276381	CallExpression	r_sys_fork ( )		6276308	1					
ANR	6276382	Callee	r_sys_fork		6276308	0					
ANR	6276383	Identifier	r_sys_fork		6276308	0					
ANR	6276384	ArgumentList			6276308	1					
ANR	6276385	IfStatement	if ( pid < 0 )		6276308	6					
ANR	6276386	Condition	pid < 0	1021:5:21086:21092	6276308	0	True				
ANR	6276387	RelationalExpression	pid < 0		6276308	0		<			
ANR	6276388	Identifier	pid		6276308	0					
ANR	6276389	PrimaryExpression	0		6276308	1					
ANR	6276390	CompoundStatement		24:14:431:431	6276308	1					
ANR	6276391	ExpressionStatement	R_SYS_ASM_START_ROP ( )	1022:2:21099:21121	6276308	0	True				
ANR	6276392	CallExpression	R_SYS_ASM_START_ROP ( )		6276308	0					
ANR	6276393	Callee	R_SYS_ASM_START_ROP		6276308	0					
ANR	6276394	Identifier	R_SYS_ASM_START_ROP		6276308	0					
ANR	6276395	ArgumentList			6276308	1					
ANR	6276396	ElseStatement	else		6276308	0					
ANR	6276397	CompoundStatement		26:8:467:467	6276308	0					
ANR	6276398	ExpressionStatement	R_SYS_ASM_START_ROP ( )	1024:2:21135:21157	6276308	0	True				
ANR	6276399	CallExpression	R_SYS_ASM_START_ROP ( )		6276308	0					
ANR	6276400	Callee	R_SYS_ASM_START_ROP		6276308	0					
ANR	6276401	Identifier	R_SYS_ASM_START_ROP		6276308	0					
ANR	6276402	ArgumentList			6276308	1					
ANR	6276403	ExpressionStatement	exit ( 0 )	1025:2:21161:21169	6276308	1	True				
ANR	6276404	CallExpression	exit ( 0 )		6276308	0					
ANR	6276405	Callee	exit		6276308	0					
ANR	6276406	Identifier	exit		6276308	0					
ANR	6276407	ArgumentList	0		6276308	1					
ANR	6276408	Argument	0		6276308	0					
ANR	6276409	PrimaryExpression	0		6276308	0					
ANR	6276410	ReturnStatement	return 0 ;	1026:16:21187:21195	6276308	2	True				
ANR	6276411	PrimaryExpression	0		6276308	0					
ANR	6276412	ExpressionStatement	st = 0	1028:1:21201:21207	6276308	7	True				
ANR	6276413	AssignmentExpression	st = 0		6276308	0		=			
ANR	6276414	Identifier	st		6276308	0					
ANR	6276415	PrimaryExpression	0		6276308	1					
ANR	6276416	IfStatement	"if ( waitpid ( pid , & st , 0 ) == - 1 )"		6276308	8					
ANR	6276417	Condition	"waitpid ( pid , & st , 0 ) == - 1"	1029:5:21214:21240	6276308	0	True				
ANR	6276418	EqualityExpression	"waitpid ( pid , & st , 0 ) == - 1"		6276308	0		==			
ANR	6276419	CallExpression	"waitpid ( pid , & st , 0 )"		6276308	0					
ANR	6276420	Callee	waitpid		6276308	0					
ANR	6276421	Identifier	waitpid		6276308	0					
ANR	6276422	ArgumentList	pid		6276308	1					
ANR	6276423	Argument	pid		6276308	0					
ANR	6276424	Identifier	pid		6276308	0					
ANR	6276425	Argument	& st		6276308	1					
ANR	6276426	UnaryOperationExpression	& st		6276308	0					
ANR	6276427	UnaryOperator	&		6276308	0					
ANR	6276428	Identifier	st		6276308	1					
ANR	6276429	Argument	0		6276308	2					
ANR	6276430	PrimaryExpression	0		6276308	0					
ANR	6276431	UnaryOperationExpression	- 1		6276308	1					
ANR	6276432	UnaryOperator	-		6276308	0					
ANR	6276433	PrimaryExpression	1		6276308	1					
ANR	6276434	CompoundStatement		32:34:579:579	6276308	1					
ANR	6276435	ExpressionStatement	"eprintf ( ""r_sys_run_rop: waitpid failed\\n"" )"	1030:12:21257:21300	6276308	0	True				
ANR	6276436	CallExpression	"eprintf ( ""r_sys_run_rop: waitpid failed\\n"" )"		6276308	0					
ANR	6276437	Callee	eprintf		6276308	0					
ANR	6276438	Identifier	eprintf		6276308	0					
ANR	6276439	ArgumentList	"""r_sys_run_rop: waitpid failed\\n"""		6276308	1					
ANR	6276440	Argument	"""r_sys_run_rop: waitpid failed\\n"""		6276308	0					
ANR	6276441	PrimaryExpression	"""r_sys_run_rop: waitpid failed\\n"""		6276308	0					
ANR	6276442	ExpressionStatement	free ( bufptr )	1031:12:21314:21327	6276308	1	True				
ANR	6276443	CallExpression	free ( bufptr )		6276308	0					
ANR	6276444	Callee	free		6276308	0					
ANR	6276445	Identifier	free		6276308	0					
ANR	6276446	ArgumentList	bufptr		6276308	1					
ANR	6276447	Argument	bufptr		6276308	0					
ANR	6276448	Identifier	bufptr		6276308	0					
ANR	6276449	ReturnStatement	return - 1 ;	1032:12:21341:21350	6276308	2	True				
ANR	6276450	UnaryOperationExpression	- 1		6276308	0					
ANR	6276451	UnaryOperator	-		6276308	0					
ANR	6276452	PrimaryExpression	1		6276308	1					
ANR	6276453	IfStatement	if ( WIFSIGNALED ( st ) )		6276308	9					
ANR	6276454	Condition	WIFSIGNALED ( st )	1034:5:21367:21382	6276308	0	True				
ANR	6276455	CallExpression	WIFSIGNALED ( st )		6276308	0					
ANR	6276456	Callee	WIFSIGNALED		6276308	0					
ANR	6276457	Identifier	WIFSIGNALED		6276308	0					
ANR	6276458	ArgumentList	st		6276308	1					
ANR	6276459	Argument	st		6276308	0					
ANR	6276460	Identifier	st		6276308	0					
ANR	6276461	CompoundStatement		38:2:725:748	6276308	1					
ANR	6276462	IdentifierDeclStatement	int num = WTERMSIG ( st ) ;	1035:2:21389:21412	6276308	0	True				
ANR	6276463	IdentifierDecl	num = WTERMSIG ( st )		6276308	0					
ANR	6276464	IdentifierDeclType	int		6276308	0					
ANR	6276465	Identifier	num		6276308	1					
ANR	6276466	AssignmentExpression	num = WTERMSIG ( st )		6276308	2		=			
ANR	6276467	Identifier	num		6276308	0					
ANR	6276468	CallExpression	WTERMSIG ( st )		6276308	1					
ANR	6276469	Callee	WTERMSIG		6276308	0					
ANR	6276470	Identifier	WTERMSIG		6276308	0					
ANR	6276471	ArgumentList	st		6276308	1					
ANR	6276472	Argument	st		6276308	0					
ANR	6276473	Identifier	st		6276308	0					
ANR	6276474	ExpressionStatement	"eprintf ( ""Got signal %d\\n"" , num )"	1036:2:21416:21448	6276308	1	True				
ANR	6276475	CallExpression	"eprintf ( ""Got signal %d\\n"" , num )"		6276308	0					
ANR	6276476	Callee	eprintf		6276308	0					
ANR	6276477	Identifier	eprintf		6276308	0					
ANR	6276478	ArgumentList	"""Got signal %d\\n"""		6276308	1					
ANR	6276479	Argument	"""Got signal %d\\n"""		6276308	0					
ANR	6276480	PrimaryExpression	"""Got signal %d\\n"""		6276308	0					
ANR	6276481	Argument	num		6276308	1					
ANR	6276482	Identifier	num		6276308	0					
ANR	6276483	ExpressionStatement	ret = num	1037:2:21452:21461	6276308	2	True				
ANR	6276484	AssignmentExpression	ret = num		6276308	0		=			
ANR	6276485	Identifier	ret		6276308	0					
ANR	6276486	Identifier	num		6276308	1					
ANR	6276487	ElseStatement	else		6276308	0					
ANR	6276488	CompoundStatement		41:8:807:807	6276308	0					
ANR	6276489	ExpressionStatement	ret = WEXITSTATUS ( st )	1039:2:21475:21497	6276308	0	True				
ANR	6276490	AssignmentExpression	ret = WEXITSTATUS ( st )		6276308	0		=			
ANR	6276491	Identifier	ret		6276308	0					
ANR	6276492	CallExpression	WEXITSTATUS ( st )		6276308	1					
ANR	6276493	Callee	WEXITSTATUS		6276308	0					
ANR	6276494	Identifier	WEXITSTATUS		6276308	0					
ANR	6276495	ArgumentList	st		6276308	1					
ANR	6276496	Argument	st		6276308	0					
ANR	6276497	Identifier	st		6276308	0					
ANR	6276498	ExpressionStatement	free ( bufptr )	1044:1:21541:21554	6276308	10	True				
ANR	6276499	CallExpression	free ( bufptr )		6276308	0					
ANR	6276500	Callee	free		6276308	0					
ANR	6276501	Identifier	free		6276308	0					
ANR	6276502	ArgumentList	bufptr		6276308	1					
ANR	6276503	Argument	bufptr		6276308	0					
ANR	6276504	Identifier	bufptr		6276308	0					
ANR	6276505	ReturnStatement	return 0 ;	1045:1:21557:21565	6276308	11	True				
ANR	6276506	PrimaryExpression	0		6276308	0					
ANR	6276507	ReturnType	R_API int		6276308	1					
ANR	6276508	Identifier	r_sys_run_rop		6276308	2					
ANR	6276509	ParameterList	"const ut8 * buf , int len"		6276308	3					
ANR	6276510	Parameter	const ut8 * buf	998:24:20638:20651	6276308	0	True				
ANR	6276511	ParameterType	const ut8 *		6276308	0					
ANR	6276512	Identifier	buf		6276308	1					
ANR	6276513	Parameter	int len	998:40:20654:20660	6276308	1	True				
ANR	6276514	ParameterType	int		6276308	0					
ANR	6276515	Identifier	len		6276308	1					
ANR	6276516	CFGEntryNode	ENTRY		6276308		True				
ANR	6276517	CFGExitNode	EXIT		6276308		True				
ANR	6276518	Symbol	bufptr		6276308						
ANR	6276519	Symbol	ret		6276308						
ANR	6276520	Symbol	st		6276308						
ANR	6276521	Symbol	malloc		6276308						
ANR	6276522	Symbol	WIFSIGNALED		6276308						
ANR	6276523	Symbol	num		6276308						
ANR	6276524	Symbol	false		6276308						
ANR	6276525	Symbol	pid		6276308						
ANR	6276526	Symbol	& st		6276308						
ANR	6276527	Symbol	WEXITSTATUS		6276308						
ANR	6276528	Symbol	buf		6276308						
ANR	6276529	Symbol	len		6276308						
ANR	6276530	Symbol	WTERMSIG		6276308						
ANR	6276531	Symbol	r_sys_fork		6276308						
ANR	6276532	Symbol	waitpid		6276308						
ANR	6276533	Function	r_is_heap	1048:0:21570:21783							
ANR	6276534	FunctionDef	r_is_heap (void * p)		6276533	0					
ANR	6276535	CompoundStatement		1048:31:21601:21783	6276533	0					
ANR	6276536	IdentifierDeclStatement	void * q = malloc ( 8 ) ;	1049:1:21604:21624	6276533	0	True				
ANR	6276537	IdentifierDecl	* q = malloc ( 8 )		6276533	0					
ANR	6276538	IdentifierDeclType	void *		6276533	0					
ANR	6276539	Identifier	q		6276533	1					
ANR	6276540	AssignmentExpression	* q = malloc ( 8 )		6276533	2		=			
ANR	6276541	Identifier	q		6276533	0					
ANR	6276542	CallExpression	malloc ( 8 )		6276533	1					
ANR	6276543	Callee	malloc		6276533	0					
ANR	6276544	Identifier	malloc		6276533	0					
ANR	6276545	ArgumentList	8		6276533	1					
ANR	6276546	Argument	8		6276533	0					
ANR	6276547	PrimaryExpression	8		6276533	0					
ANR	6276548	IdentifierDeclStatement	ut64 mask = UT64_MAX ;	1050:1:21627:21647	6276533	1	True				
ANR	6276549	IdentifierDecl	mask = UT64_MAX		6276533	0					
ANR	6276550	IdentifierDeclType	ut64		6276533	0					
ANR	6276551	Identifier	mask		6276533	1					
ANR	6276552	AssignmentExpression	mask = UT64_MAX		6276533	2		=			
ANR	6276553	Identifier	UT64_MAX		6276533	0					
ANR	6276554	Identifier	UT64_MAX		6276533	1					
ANR	6276555	IdentifierDeclStatement	ut64 addr = ( ut64 ) ( size_t ) q ;	1051:1:21650:21677	6276533	2	True				
ANR	6276556	IdentifierDecl	addr = ( ut64 ) ( size_t ) q		6276533	0					
ANR	6276557	IdentifierDeclType	ut64		6276533	0					
ANR	6276558	Identifier	addr		6276533	1					
ANR	6276559	AssignmentExpression	addr = ( ut64 ) ( size_t ) q		6276533	2		=			
ANR	6276560	Identifier	addr		6276533	0					
ANR	6276561	CastExpression	( ut64 ) ( size_t ) q		6276533	1					
ANR	6276562	CastTarget	ut64		6276533	0					
ANR	6276563	CastExpression	( size_t ) q		6276533	1					
ANR	6276564	CastTarget	size_t		6276533	0					
ANR	6276565	Identifier	q		6276533	1					
ANR	6276566	ExpressionStatement	addr >>= 16	1052:1:21680:21691	6276533	3	True				
ANR	6276567	AssignmentExpression	addr >>= 16		6276533	0		>>=			
ANR	6276568	Identifier	addr		6276533	0					
ANR	6276569	PrimaryExpression	16		6276533	1					
ANR	6276570	ExpressionStatement	addr <<= 16	1053:1:21694:21705	6276533	4	True				
ANR	6276571	AssignmentExpression	addr <<= 16		6276533	0		<<=			
ANR	6276572	Identifier	addr		6276533	0					
ANR	6276573	PrimaryExpression	16		6276533	1					
ANR	6276574	ExpressionStatement	mask >>= 16	1054:1:21708:21719	6276533	5	True				
ANR	6276575	AssignmentExpression	mask >>= 16		6276533	0		>>=			
ANR	6276576	Identifier	mask		6276533	0					
ANR	6276577	PrimaryExpression	16		6276533	1					
ANR	6276578	ExpressionStatement	mask <<= 16	1055:1:21722:21733	6276533	6	True				
ANR	6276579	AssignmentExpression	mask <<= 16		6276533	0		<<=			
ANR	6276580	Identifier	mask		6276533	0					
ANR	6276581	PrimaryExpression	16		6276533	1					
ANR	6276582	ExpressionStatement	free ( q )	1056:1:21736:21744	6276533	7	True				
ANR	6276583	CallExpression	free ( q )		6276533	0					
ANR	6276584	Callee	free		6276533	0					
ANR	6276585	Identifier	free		6276533	0					
ANR	6276586	ArgumentList	q		6276533	1					
ANR	6276587	Argument	q		6276533	0					
ANR	6276588	Identifier	q		6276533	0					
ANR	6276589	ReturnStatement	return ( ( ( ut64 ) ( size_t ) p ) == mask ) ;	1057:1:21747:21781	6276533	8	True				
ANR	6276590	EqualityExpression	( ( ut64 ) ( size_t ) p ) == mask		6276533	0		==			
ANR	6276591	CastExpression	( ut64 ) ( size_t ) p		6276533	0					
ANR	6276592	CastTarget	ut64		6276533	0					
ANR	6276593	CastExpression	( size_t ) p		6276533	1					
ANR	6276594	CastTarget	size_t		6276533	0					
ANR	6276595	Identifier	p		6276533	1					
ANR	6276596	Identifier	mask		6276533	1					
ANR	6276597	ReturnType	R_API bool		6276533	1					
ANR	6276598	Identifier	r_is_heap		6276533	2					
ANR	6276599	ParameterList	void * p		6276533	3					
ANR	6276600	Parameter	void * p	1048:22:21592:21598	6276533	0	True				
ANR	6276601	ParameterType	void *		6276533	0					
ANR	6276602	Identifier	p		6276533	1					
ANR	6276603	CFGEntryNode	ENTRY		6276533		True				
ANR	6276604	CFGExitNode	EXIT		6276533		True				
ANR	6276605	Symbol	p		6276533						
ANR	6276606	Symbol	q		6276533						
ANR	6276607	Symbol	malloc		6276533						
ANR	6276608	Symbol	UT64_MAX		6276533						
ANR	6276609	Symbol	addr		6276533						
ANR	6276610	Symbol	mask		6276533						
ANR	6276611	Function	r_sys_pid_to_path	1060:0:21786:24936							
ANR	6276612	FunctionDef	r_sys_pid_to_path (int pid)		6276611	0					
ANR	6276613	CompoundStatement		1060:39:21825:24936	6276611	0					
ANR	6276614	IdentifierDeclStatement	HANDLE processHandle ;	1063:1:21886:21906	6276611	0	True				
ANR	6276615	IdentifierDecl	processHandle		6276611	0					
ANR	6276616	IdentifierDeclType	HANDLE		6276611	0					
ANR	6276617	Identifier	processHandle		6276611	1					
ANR	6276618	IdentifierDeclStatement	const DWORD maxlength = MAX_PATH ;	1064:1:21909:21941	6276611	1	True				
ANR	6276619	IdentifierDecl	maxlength = MAX_PATH		6276611	0					
ANR	6276620	IdentifierDeclType	const DWORD		6276611	0					
ANR	6276621	Identifier	maxlength		6276611	1					
ANR	6276622	AssignmentExpression	maxlength = MAX_PATH		6276611	2		=			
ANR	6276623	Identifier	MAX_PATH		6276611	0					
ANR	6276624	Identifier	MAX_PATH		6276611	1					
ANR	6276625	IdentifierDeclStatement	TCHAR filename [ MAX_PATH ] ;	1065:1:21944:21968	6276611	2	True				
ANR	6276626	IdentifierDecl	filename [ MAX_PATH ]		6276611	0					
ANR	6276627	IdentifierDeclType	TCHAR [ MAX_PATH ]		6276611	0					
ANR	6276628	Identifier	filename		6276611	1					
ANR	6276629	Identifier	MAX_PATH		6276611	2					
ANR	6276630	IdentifierDeclStatement	const char * result ;	1066:1:21971:21989	6276611	3	True				
ANR	6276631	IdentifierDecl	* result		6276611	0					
ANR	6276632	IdentifierDeclType	const char *		6276611	0					
ANR	6276633	Identifier	result		6276611	1					
ANR	6276634	ExpressionStatement	"processHandle = OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , pid )"	1068:1:21993:22078	6276611	4	True				
ANR	6276635	AssignmentExpression	"processHandle = OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , pid )"		6276611	0		=			
ANR	6276636	Identifier	processHandle		6276611	0					
ANR	6276637	CallExpression	"OpenProcess ( PROCESS_QUERY_INFORMATION | PROCESS_VM_READ , FALSE , pid )"		6276611	1					
ANR	6276638	Callee	OpenProcess		6276611	0					
ANR	6276639	Identifier	OpenProcess		6276611	0					
ANR	6276640	ArgumentList	PROCESS_QUERY_INFORMATION | PROCESS_VM_READ		6276611	1					
ANR	6276641	Argument	PROCESS_QUERY_INFORMATION | PROCESS_VM_READ		6276611	0					
ANR	6276642	InclusiveOrExpression	PROCESS_QUERY_INFORMATION | PROCESS_VM_READ		6276611	0		|			
ANR	6276643	Identifier	PROCESS_QUERY_INFORMATION		6276611	0					
ANR	6276644	Identifier	PROCESS_VM_READ		6276611	1					
ANR	6276645	Argument	FALSE		6276611	1					
ANR	6276646	Identifier	FALSE		6276611	0					
ANR	6276647	Argument	pid		6276611	2					
ANR	6276648	Identifier	pid		6276611	0					
ANR	6276649	IfStatement	if ( ! processHandle )		6276611	5					
ANR	6276650	Condition	! processHandle	1069:5:22085:22098	6276611	0	True				
ANR	6276651	UnaryOperationExpression	! processHandle		6276611	0					
ANR	6276652	UnaryOperator	!		6276611	0					
ANR	6276653	Identifier	processHandle		6276611	1					
ANR	6276654	CompoundStatement		10:21:275:275	6276611	1					
ANR	6276655	ExpressionStatement	"eprintf ( ""r_sys_pid_to_path: Cannot open process.\\n"" )"	1070:2:22105:22158	6276611	0	True				
ANR	6276656	CallExpression	"eprintf ( ""r_sys_pid_to_path: Cannot open process.\\n"" )"		6276611	0					
ANR	6276657	Callee	eprintf		6276611	0					
ANR	6276658	Identifier	eprintf		6276611	0					
ANR	6276659	ArgumentList	"""r_sys_pid_to_path: Cannot open process.\\n"""		6276611	1					
ANR	6276660	Argument	"""r_sys_pid_to_path: Cannot open process.\\n"""		6276611	0					
ANR	6276661	PrimaryExpression	"""r_sys_pid_to_path: Cannot open process.\\n"""		6276611	0					
ANR	6276662	ReturnStatement	return NULL ;	1071:2:22162:22173	6276611	1	True				
ANR	6276663	Identifier	NULL		6276611	0					
ANR	6276664	IdentifierDeclStatement	"DWORD length = GetModuleFileNameEx ( processHandle , NULL , filename , maxlength ) ;"	1073:1:22179:22256	6276611	6	True				
ANR	6276665	IdentifierDecl	"length = GetModuleFileNameEx ( processHandle , NULL , filename , maxlength )"		6276611	0					
ANR	6276666	IdentifierDeclType	DWORD		6276611	0					
ANR	6276667	Identifier	length		6276611	1					
ANR	6276668	AssignmentExpression	"length = GetModuleFileNameEx ( processHandle , NULL , filename , maxlength )"		6276611	2		=			
ANR	6276669	Identifier	length		6276611	0					
ANR	6276670	CallExpression	"GetModuleFileNameEx ( processHandle , NULL , filename , maxlength )"		6276611	1					
ANR	6276671	Callee	GetModuleFileNameEx		6276611	0					
ANR	6276672	Identifier	GetModuleFileNameEx		6276611	0					
ANR	6276673	ArgumentList	processHandle		6276611	1					
ANR	6276674	Argument	processHandle		6276611	0					
ANR	6276675	Identifier	processHandle		6276611	0					
ANR	6276676	Argument	NULL		6276611	1					
ANR	6276677	Identifier	NULL		6276611	0					
ANR	6276678	Argument	filename		6276611	2					
ANR	6276679	Identifier	filename		6276611	0					
ANR	6276680	Argument	maxlength		6276611	3					
ANR	6276681	Identifier	maxlength		6276611	0					
ANR	6276682	IfStatement	if ( length == 0 )		6276611	7					
ANR	6276683	Condition	length == 0	1074:5:22263:22273	6276611	0	True				
ANR	6276684	EqualityExpression	length == 0		6276611	0		==			
ANR	6276685	Identifier	length		6276611	0					
ANR	6276686	PrimaryExpression	0		6276611	1					
ANR	6276687	CompoundStatement		50:2:1407:1429	6276611	1					
ANR	6276688	ExpressionStatement	"length = GetProcessImageFileName ( processHandle , filename , maxlength )"	1076:2:22334:22403	6276611	0	True				
ANR	6276689	AssignmentExpression	"length = GetProcessImageFileName ( processHandle , filename , maxlength )"		6276611	0		=			
ANR	6276690	Identifier	length		6276611	0					
ANR	6276691	CallExpression	"GetProcessImageFileName ( processHandle , filename , maxlength )"		6276611	1					
ANR	6276692	Callee	GetProcessImageFileName		6276611	0					
ANR	6276693	Identifier	GetProcessImageFileName		6276611	0					
ANR	6276694	ArgumentList	processHandle		6276611	1					
ANR	6276695	Argument	processHandle		6276611	0					
ANR	6276696	Identifier	processHandle		6276611	0					
ANR	6276697	Argument	filename		6276611	1					
ANR	6276698	Identifier	filename		6276611	0					
ANR	6276699	Argument	maxlength		6276611	2					
ANR	6276700	Identifier	maxlength		6276611	0					
ANR	6276701	ExpressionStatement	CloseHandle ( processHandle )	1077:2:22407:22434	6276611	1	True				
ANR	6276702	CallExpression	CloseHandle ( processHandle )		6276611	0					
ANR	6276703	Callee	CloseHandle		6276611	0					
ANR	6276704	Identifier	CloseHandle		6276611	0					
ANR	6276705	ArgumentList	processHandle		6276611	1					
ANR	6276706	Argument	processHandle		6276611	0					
ANR	6276707	Identifier	processHandle		6276611	0					
ANR	6276708	IfStatement	if ( length == 0 )		6276611	2					
ANR	6276709	Condition	length == 0	1078:6:22442:22452	6276611	0	True				
ANR	6276710	EqualityExpression	length == 0		6276611	0		==			
ANR	6276711	Identifier	length		6276611	0					
ANR	6276712	PrimaryExpression	0		6276611	1					
ANR	6276713	CompoundStatement		19:19:629:629	6276611	1					
ANR	6276714	ExpressionStatement	"eprintf ( ""r_sys_pid_to_path: Error calling GetProcessImageFileName\\n"" )"	1079:3:22460:22530	6276611	0	True				
ANR	6276715	CallExpression	"eprintf ( ""r_sys_pid_to_path: Error calling GetProcessImageFileName\\n"" )"		6276611	0					
ANR	6276716	Callee	eprintf		6276611	0					
ANR	6276717	Identifier	eprintf		6276611	0					
ANR	6276718	ArgumentList	"""r_sys_pid_to_path: Error calling GetProcessImageFileName\\n"""		6276611	1					
ANR	6276719	Argument	"""r_sys_pid_to_path: Error calling GetProcessImageFileName\\n"""		6276611	0					
ANR	6276720	PrimaryExpression	"""r_sys_pid_to_path: Error calling GetProcessImageFileName\\n"""		6276611	0					
ANR	6276721	ReturnStatement	return NULL ;	1080:3:22535:22546	6276611	1	True				
ANR	6276722	Identifier	NULL		6276611	0					
ANR	6276723	IdentifierDeclStatement	char * name = r_sys_conv_win_to_utf8 ( filename ) ;	1083:2:22589:22635	6276611	3	True				
ANR	6276724	IdentifierDecl	* name = r_sys_conv_win_to_utf8 ( filename )		6276611	0					
ANR	6276725	IdentifierDeclType	char *		6276611	0					
ANR	6276726	Identifier	name		6276611	1					
ANR	6276727	AssignmentExpression	* name = r_sys_conv_win_to_utf8 ( filename )		6276611	2		=			
ANR	6276728	Identifier	name		6276611	0					
ANR	6276729	CallExpression	r_sys_conv_win_to_utf8 ( filename )		6276611	1					
ANR	6276730	Callee	r_sys_conv_win_to_utf8		6276611	0					
ANR	6276731	Identifier	r_sys_conv_win_to_utf8		6276611	0					
ANR	6276732	ArgumentList	filename		6276611	1					
ANR	6276733	Argument	filename		6276611	0					
ANR	6276734	Identifier	filename		6276611	0					
ANR	6276735	IfStatement	if ( ! name )		6276611	4					
ANR	6276736	Condition	! name	1084:6:22643:22647	6276611	0	True				
ANR	6276737	UnaryOperationExpression	! name		6276611	0					
ANR	6276738	UnaryOperator	!		6276611	0					
ANR	6276739	Identifier	name		6276611	1					
ANR	6276740	CompoundStatement		25:13:824:824	6276611	1					
ANR	6276741	ExpressionStatement	"eprintf ( ""r_sys_pid_to_path: Error converting to utf8\\n"" )"	1085:3:22655:22712	6276611	0	True				
ANR	6276742	CallExpression	"eprintf ( ""r_sys_pid_to_path: Error converting to utf8\\n"" )"		6276611	0					
ANR	6276743	Callee	eprintf		6276611	0					
ANR	6276744	Identifier	eprintf		6276611	0					
ANR	6276745	ArgumentList	"""r_sys_pid_to_path: Error converting to utf8\\n"""		6276611	1					
ANR	6276746	Argument	"""r_sys_pid_to_path: Error converting to utf8\\n"""		6276611	0					
ANR	6276747	PrimaryExpression	"""r_sys_pid_to_path: Error converting to utf8\\n"""		6276611	0					
ANR	6276748	ReturnStatement	return NULL ;	1086:3:22717:22728	6276611	1	True				
ANR	6276749	Identifier	NULL		6276611	0					
ANR	6276750	IdentifierDeclStatement	"char * tmp = strchr ( name + 1 , '\\\\' ) ;"	1088:2:22736:22771	6276611	5	True				
ANR	6276751	IdentifierDecl	"* tmp = strchr ( name + 1 , '\\\\' )"		6276611	0					
ANR	6276752	IdentifierDeclType	char *		6276611	0					
ANR	6276753	Identifier	tmp		6276611	1					
ANR	6276754	AssignmentExpression	"* tmp = strchr ( name + 1 , '\\\\' )"		6276611	2		=			
ANR	6276755	Identifier	tmp		6276611	0					
ANR	6276756	CallExpression	"strchr ( name + 1 , '\\\\' )"		6276611	1					
ANR	6276757	Callee	strchr		6276611	0					
ANR	6276758	Identifier	strchr		6276611	0					
ANR	6276759	ArgumentList	name + 1		6276611	1					
ANR	6276760	Argument	name + 1		6276611	0					
ANR	6276761	AdditiveExpression	name + 1		6276611	0		+			
ANR	6276762	Identifier	name		6276611	0					
ANR	6276763	PrimaryExpression	1		6276611	1					
ANR	6276764	Argument	'\\\\'		6276611	1					
ANR	6276765	PrimaryExpression	'\\\\'		6276611	0					
ANR	6276766	IfStatement	if ( ! tmp )		6276611	6					
ANR	6276767	Condition	! tmp	1089:6:22779:22782	6276611	0	True				
ANR	6276768	UnaryOperationExpression	! tmp		6276611	0					
ANR	6276769	UnaryOperator	!		6276611	0					
ANR	6276770	Identifier	tmp		6276611	1					
ANR	6276771	CompoundStatement		30:12:959:959	6276611	1					
ANR	6276772	ExpressionStatement	free ( name )	1090:3:22790:22801	6276611	0	True				
ANR	6276773	CallExpression	free ( name )		6276611	0					
ANR	6276774	Callee	free		6276611	0					
ANR	6276775	Identifier	free		6276611	0					
ANR	6276776	ArgumentList	name		6276611	1					
ANR	6276777	Argument	name		6276611	0					
ANR	6276778	Identifier	name		6276611	0					
ANR	6276779	ExpressionStatement	"eprintf ( ""r_sys_pid_to_path: Malformed NT path\\n"" )"	1091:3:22806:22856	6276611	1	True				
ANR	6276780	CallExpression	"eprintf ( ""r_sys_pid_to_path: Malformed NT path\\n"" )"		6276611	0					
ANR	6276781	Callee	eprintf		6276611	0					
ANR	6276782	Identifier	eprintf		6276611	0					
ANR	6276783	ArgumentList	"""r_sys_pid_to_path: Malformed NT path\\n"""		6276611	1					
ANR	6276784	Argument	"""r_sys_pid_to_path: Malformed NT path\\n"""		6276611	0					
ANR	6276785	PrimaryExpression	"""r_sys_pid_to_path: Malformed NT path\\n"""		6276611	0					
ANR	6276786	ReturnStatement	return NULL ;	1092:3:22861:22872	6276611	2	True				
ANR	6276787	Identifier	NULL		6276611	0					
ANR	6276788	ExpressionStatement	"tmp = strchr ( tmp + 1 , '\\\\' )"	1094:2:22880:22908	6276611	7	True				
ANR	6276789	AssignmentExpression	"tmp = strchr ( tmp + 1 , '\\\\' )"		6276611	0		=			
ANR	6276790	Identifier	tmp		6276611	0					
ANR	6276791	CallExpression	"strchr ( tmp + 1 , '\\\\' )"		6276611	1					
ANR	6276792	Callee	strchr		6276611	0					
ANR	6276793	Identifier	strchr		6276611	0					
ANR	6276794	ArgumentList	tmp + 1		6276611	1					
ANR	6276795	Argument	tmp + 1		6276611	0					
ANR	6276796	AdditiveExpression	tmp + 1		6276611	0		+			
ANR	6276797	Identifier	tmp		6276611	0					
ANR	6276798	PrimaryExpression	1		6276611	1					
ANR	6276799	Argument	'\\\\'		6276611	1					
ANR	6276800	PrimaryExpression	'\\\\'		6276611	0					
ANR	6276801	IfStatement	if ( ! tmp )		6276611	8					
ANR	6276802	Condition	! tmp	1095:6:22916:22919	6276611	0	True				
ANR	6276803	UnaryOperationExpression	! tmp		6276611	0					
ANR	6276804	UnaryOperator	!		6276611	0					
ANR	6276805	Identifier	tmp		6276611	1					
ANR	6276806	CompoundStatement		36:12:1096:1096	6276611	1					
ANR	6276807	ExpressionStatement	free ( name )	1096:3:22927:22938	6276611	0	True				
ANR	6276808	CallExpression	free ( name )		6276611	0					
ANR	6276809	Callee	free		6276611	0					
ANR	6276810	Identifier	free		6276611	0					
ANR	6276811	ArgumentList	name		6276611	1					
ANR	6276812	Argument	name		6276611	0					
ANR	6276813	Identifier	name		6276611	0					
ANR	6276814	ExpressionStatement	"eprintf ( ""r_sys_pid_to_path: Malformed NT path\\n"" )"	1097:3:22943:22993	6276611	1	True				
ANR	6276815	CallExpression	"eprintf ( ""r_sys_pid_to_path: Malformed NT path\\n"" )"		6276611	0					
ANR	6276816	Callee	eprintf		6276611	0					
ANR	6276817	Identifier	eprintf		6276611	0					
ANR	6276818	ArgumentList	"""r_sys_pid_to_path: Malformed NT path\\n"""		6276611	1					
ANR	6276819	Argument	"""r_sys_pid_to_path: Malformed NT path\\n"""		6276611	0					
ANR	6276820	PrimaryExpression	"""r_sys_pid_to_path: Malformed NT path\\n"""		6276611	0					
ANR	6276821	ReturnStatement	return NULL ;	1098:3:22998:23009	6276611	2	True				
ANR	6276822	Identifier	NULL		6276611	0					
ANR	6276823	ExpressionStatement	length = tmp - name	1100:2:23017:23036	6276611	9	True				
ANR	6276824	AssignmentExpression	length = tmp - name		6276611	0		=			
ANR	6276825	Identifier	length		6276611	0					
ANR	6276826	AdditiveExpression	tmp - name		6276611	1		-			
ANR	6276827	Identifier	tmp		6276611	0					
ANR	6276828	Identifier	name		6276611	1					
ANR	6276829	ExpressionStatement	tmp = malloc ( length + 1 )	1101:2:23040:23065	6276611	10	True				
ANR	6276830	AssignmentExpression	tmp = malloc ( length + 1 )		6276611	0		=			
ANR	6276831	Identifier	tmp		6276611	0					
ANR	6276832	CallExpression	malloc ( length + 1 )		6276611	1					
ANR	6276833	Callee	malloc		6276611	0					
ANR	6276834	Identifier	malloc		6276611	0					
ANR	6276835	ArgumentList	length + 1		6276611	1					
ANR	6276836	Argument	length + 1		6276611	0					
ANR	6276837	AdditiveExpression	length + 1		6276611	0		+			
ANR	6276838	Identifier	length		6276611	0					
ANR	6276839	PrimaryExpression	1		6276611	1					
ANR	6276840	IfStatement	if ( ! tmp )		6276611	11					
ANR	6276841	Condition	! tmp	1102:6:23073:23076	6276611	0	True				
ANR	6276842	UnaryOperationExpression	! tmp		6276611	0					
ANR	6276843	UnaryOperator	!		6276611	0					
ANR	6276844	Identifier	tmp		6276611	1					
ANR	6276845	CompoundStatement		43:12:1253:1253	6276611	1					
ANR	6276846	ExpressionStatement	free ( name )	1103:3:23084:23095	6276611	0	True				
ANR	6276847	CallExpression	free ( name )		6276611	0					
ANR	6276848	Callee	free		6276611	0					
ANR	6276849	Identifier	free		6276611	0					
ANR	6276850	ArgumentList	name		6276611	1					
ANR	6276851	Argument	name		6276611	0					
ANR	6276852	Identifier	name		6276611	0					
ANR	6276853	ExpressionStatement	"eprintf ( ""r_sys_pid_to_path: Error allocating memory\\n"" )"	1104:3:23100:23156	6276611	1	True				
ANR	6276854	CallExpression	"eprintf ( ""r_sys_pid_to_path: Error allocating memory\\n"" )"		6276611	0					
ANR	6276855	Callee	eprintf		6276611	0					
ANR	6276856	Identifier	eprintf		6276611	0					
ANR	6276857	ArgumentList	"""r_sys_pid_to_path: Error allocating memory\\n"""		6276611	1					
ANR	6276858	Argument	"""r_sys_pid_to_path: Error allocating memory\\n"""		6276611	0					
ANR	6276859	PrimaryExpression	"""r_sys_pid_to_path: Error allocating memory\\n"""		6276611	0					
ANR	6276860	ReturnStatement	return NULL ;	1105:3:23161:23172	6276611	2	True				
ANR	6276861	Identifier	NULL		6276611	0					
ANR	6276862	ExpressionStatement	"strncpy ( tmp , name , length )"	1107:2:23180:23207	6276611	12	True				
ANR	6276863	CallExpression	"strncpy ( tmp , name , length )"		6276611	0					
ANR	6276864	Callee	strncpy		6276611	0					
ANR	6276865	Identifier	strncpy		6276611	0					
ANR	6276866	ArgumentList	tmp		6276611	1					
ANR	6276867	Argument	tmp		6276611	0					
ANR	6276868	Identifier	tmp		6276611	0					
ANR	6276869	Argument	name		6276611	1					
ANR	6276870	Identifier	name		6276611	0					
ANR	6276871	Argument	length		6276611	2					
ANR	6276872	Identifier	length		6276611	0					
ANR	6276873	ExpressionStatement	tmp [ length ] = '\\0'	1108:2:23211:23229	6276611	13	True				
ANR	6276874	AssignmentExpression	tmp [ length ] = '\\0'		6276611	0		=			
ANR	6276875	ArrayIndexing	tmp [ length ]		6276611	0					
ANR	6276876	Identifier	tmp		6276611	0					
ANR	6276877	Identifier	length		6276611	1					
ANR	6276878	PrimaryExpression	'\\0'		6276611	1					
ANR	6276879	IdentifierDeclStatement	TCHAR device [ MAX_PATH ] ;	1109:2:23233:23255	6276611	14	True				
ANR	6276880	IdentifierDecl	device [ MAX_PATH ]		6276611	0					
ANR	6276881	IdentifierDeclType	TCHAR [ MAX_PATH ]		6276611	0					
ANR	6276882	Identifier	device		6276611	1					
ANR	6276883	Identifier	MAX_PATH		6276611	2					
ANR	6276884	ForStatement	"for ( TCHAR drv [ ] = TEXT ( ""A:"" ) ; drv [ 0 ] <= TEXT ( 'Z' ) ; drv [ 0 ] ++ )"		6276611	15					
ANR	6276885	ForInit	"TCHAR drv [ ] = TEXT ( ""A:"" ) ;"	1110:7:23264:23288	6276611	0	True				
ANR	6276886	IdentifierDeclStatement	"TCHAR drv [ ] = TEXT ( ""A:"" ) ;"		6276611	0					
ANR	6276887	IdentifierDecl	"drv [ ] = TEXT ( ""A:"" )"		6276611	0					
ANR	6276888	IdentifierDeclType	TCHAR [ ]		6276611	0					
ANR	6276889	Identifier	drv		6276611	1					
ANR	6276890	AssignmentExpression	"drv [ ] = TEXT ( ""A:"" )"		6276611	2		=			
ANR	6276891	Identifier	drv		6276611	0					
ANR	6276892	CallExpression	"TEXT ( ""A:"" )"		6276611	1					
ANR	6276893	Callee	TEXT		6276611	0					
ANR	6276894	Identifier	TEXT		6276611	0					
ANR	6276895	ArgumentList	"""A:"""		6276611	1					
ANR	6276896	Argument	"""A:"""		6276611	0					
ANR	6276897	PrimaryExpression	"""A:"""		6276611	0					
ANR	6276898	Condition	drv [ 0 ] <= TEXT ( 'Z' )	1110:33:23290:23308	6276611	1	True				
ANR	6276899	RelationalExpression	drv [ 0 ] <= TEXT ( 'Z' )		6276611	0		<=			
ANR	6276900	ArrayIndexing	drv [ 0 ]		6276611	0					
ANR	6276901	Identifier	drv		6276611	0					
ANR	6276902	PrimaryExpression	0		6276611	1					
ANR	6276903	CallExpression	TEXT ( 'Z' )		6276611	1					
ANR	6276904	Callee	TEXT		6276611	0					
ANR	6276905	Identifier	TEXT		6276611	0					
ANR	6276906	ArgumentList	'Z'		6276611	1					
ANR	6276907	Argument	'Z'		6276611	0					
ANR	6276908	PrimaryExpression	'Z'		6276611	0					
ANR	6276909	PostIncDecOperationExpression	drv [ 0 ] ++	1110:54:23311:23318	6276611	2	True				
ANR	6276910	ArrayIndexing	drv [ 0 ]		6276611	0					
ANR	6276911	Identifier	drv		6276611	0					
ANR	6276912	PrimaryExpression	0		6276611	1					
ANR	6276913	IncDec	++		6276611	1					
ANR	6276914	CompoundStatement		51:64:1495:1495	6276611	3					
ANR	6276915	IfStatement	"if ( QueryDosDevice ( drv , device , maxlength ) > 0 )"		6276611	0					
ANR	6276916	Condition	"QueryDosDevice ( drv , device , maxlength ) > 0"	1111:7:23330:23372	6276611	0	True				
ANR	6276917	RelationalExpression	"QueryDosDevice ( drv , device , maxlength ) > 0"		6276611	0		>			
ANR	6276918	CallExpression	"QueryDosDevice ( drv , device , maxlength )"		6276611	0					
ANR	6276919	Callee	QueryDosDevice		6276611	0					
ANR	6276920	Identifier	QueryDosDevice		6276611	0					
ANR	6276921	ArgumentList	drv		6276611	1					
ANR	6276922	Argument	drv		6276611	0					
ANR	6276923	Identifier	drv		6276611	0					
ANR	6276924	Argument	device		6276611	1					
ANR	6276925	Identifier	device		6276611	0					
ANR	6276926	Argument	maxlength		6276611	2					
ANR	6276927	Identifier	maxlength		6276611	0					
ANR	6276928	PrimaryExpression	0		6276611	1					
ANR	6276929	CompoundStatement		53:4:1555:1598	6276611	1					
ANR	6276930	IdentifierDeclStatement	char * dvc = r_sys_conv_win_to_utf8 ( device ) ;	1112:4:23381:23424	6276611	0	True				
ANR	6276931	IdentifierDecl	* dvc = r_sys_conv_win_to_utf8 ( device )		6276611	0					
ANR	6276932	IdentifierDeclType	char *		6276611	0					
ANR	6276933	Identifier	dvc		6276611	1					
ANR	6276934	AssignmentExpression	* dvc = r_sys_conv_win_to_utf8 ( device )		6276611	2		=			
ANR	6276935	Identifier	dvc		6276611	0					
ANR	6276936	CallExpression	r_sys_conv_win_to_utf8 ( device )		6276611	1					
ANR	6276937	Callee	r_sys_conv_win_to_utf8		6276611	0					
ANR	6276938	Identifier	r_sys_conv_win_to_utf8		6276611	0					
ANR	6276939	ArgumentList	device		6276611	1					
ANR	6276940	Argument	device		6276611	0					
ANR	6276941	Identifier	device		6276611	0					
ANR	6276942	IfStatement	if ( ! dvc )		6276611	1					
ANR	6276943	Condition	! dvc	1113:8:23434:23437	6276611	0	True				
ANR	6276944	UnaryOperationExpression	! dvc		6276611	0					
ANR	6276945	UnaryOperator	!		6276611	0					
ANR	6276946	Identifier	dvc		6276611	1					
ANR	6276947	CompoundStatement		54:14:1614:1614	6276611	1					
ANR	6276948	ExpressionStatement	free ( name )	1114:5:23447:23458	6276611	0	True				
ANR	6276949	CallExpression	free ( name )		6276611	0					
ANR	6276950	Callee	free		6276611	0					
ANR	6276951	Identifier	free		6276611	0					
ANR	6276952	ArgumentList	name		6276611	1					
ANR	6276953	Argument	name		6276611	0					
ANR	6276954	Identifier	name		6276611	0					
ANR	6276955	ExpressionStatement	free ( tmp )	1115:5:23465:23475	6276611	1	True				
ANR	6276956	CallExpression	free ( tmp )		6276611	0					
ANR	6276957	Callee	free		6276611	0					
ANR	6276958	Identifier	free		6276611	0					
ANR	6276959	ArgumentList	tmp		6276611	1					
ANR	6276960	Argument	tmp		6276611	0					
ANR	6276961	Identifier	tmp		6276611	0					
ANR	6276962	ExpressionStatement	"eprintf ( ""r_sys_pid_to_path: Error converting to utf8\\n"" )"	1116:5:23482:23539	6276611	2	True				
ANR	6276963	CallExpression	"eprintf ( ""r_sys_pid_to_path: Error converting to utf8\\n"" )"		6276611	0					
ANR	6276964	Callee	eprintf		6276611	0					
ANR	6276965	Identifier	eprintf		6276611	0					
ANR	6276966	ArgumentList	"""r_sys_pid_to_path: Error converting to utf8\\n"""		6276611	1					
ANR	6276967	Argument	"""r_sys_pid_to_path: Error converting to utf8\\n"""		6276611	0					
ANR	6276968	PrimaryExpression	"""r_sys_pid_to_path: Error converting to utf8\\n"""		6276611	0					
ANR	6276969	ReturnStatement	return NULL ;	1117:5:23546:23557	6276611	3	True				
ANR	6276970	Identifier	NULL		6276611	0					
ANR	6276971	IfStatement	"if ( ! strcmp ( tmp , dvc ) )"		6276611	2					
ANR	6276972	Condition	"! strcmp ( tmp , dvc )"	1119:8:23573:23590	6276611	0	True				
ANR	6276973	UnaryOperationExpression	"! strcmp ( tmp , dvc )"		6276611	0					
ANR	6276974	UnaryOperator	!		6276611	0					
ANR	6276975	CallExpression	"strcmp ( tmp , dvc )"		6276611	1					
ANR	6276976	Callee	strcmp		6276611	0					
ANR	6276977	Identifier	strcmp		6276611	0					
ANR	6276978	ArgumentList	tmp		6276611	1					
ANR	6276979	Argument	tmp		6276611	0					
ANR	6276980	Identifier	tmp		6276611	0					
ANR	6276981	Argument	dvc		6276611	1					
ANR	6276982	Identifier	dvc		6276611	0					
ANR	6276983	CompoundStatement		63:5:1808:1846	6276611	1					
ANR	6276984	ExpressionStatement	free ( tmp )	1120:5:23600:23610	6276611	0	True				
ANR	6276985	CallExpression	free ( tmp )		6276611	0					
ANR	6276986	Callee	free		6276611	0					
ANR	6276987	Identifier	free		6276611	0					
ANR	6276988	ArgumentList	tmp		6276611	1					
ANR	6276989	Argument	tmp		6276611	0					
ANR	6276990	Identifier	tmp		6276611	0					
ANR	6276991	ExpressionStatement	free ( dvc )	1121:5:23617:23627	6276611	1	True				
ANR	6276992	CallExpression	free ( dvc )		6276611	0					
ANR	6276993	Callee	free		6276611	0					
ANR	6276994	Identifier	free		6276611	0					
ANR	6276995	ArgumentList	dvc		6276611	1					
ANR	6276996	Argument	dvc		6276611	0					
ANR	6276997	Identifier	dvc		6276611	0					
ANR	6276998	IdentifierDeclStatement	char * d = r_sys_conv_win_to_utf8 ( drv ) ;	1122:5:23634:23672	6276611	2	True				
ANR	6276999	IdentifierDecl	* d = r_sys_conv_win_to_utf8 ( drv )		6276611	0					
ANR	6277000	IdentifierDeclType	char *		6276611	0					
ANR	6277001	Identifier	d		6276611	1					
ANR	6277002	AssignmentExpression	* d = r_sys_conv_win_to_utf8 ( drv )		6276611	2		=			
ANR	6277003	Identifier	d		6276611	0					
ANR	6277004	CallExpression	r_sys_conv_win_to_utf8 ( drv )		6276611	1					
ANR	6277005	Callee	r_sys_conv_win_to_utf8		6276611	0					
ANR	6277006	Identifier	r_sys_conv_win_to_utf8		6276611	0					
ANR	6277007	ArgumentList	drv		6276611	1					
ANR	6277008	Argument	drv		6276611	0					
ANR	6277009	Identifier	drv		6276611	0					
ANR	6277010	IfStatement	if ( ! d )		6276611	3					
ANR	6277011	Condition	! d	1123:9:23683:23684	6276611	0	True				
ANR	6277012	UnaryOperationExpression	! d		6276611	0					
ANR	6277013	UnaryOperator	!		6276611	0					
ANR	6277014	Identifier	d		6276611	1					
ANR	6277015	CompoundStatement		64:13:1861:1861	6276611	1					
ANR	6277016	ExpressionStatement	free ( name )	1124:6:23695:23706	6276611	0	True				
ANR	6277017	CallExpression	free ( name )		6276611	0					
ANR	6277018	Callee	free		6276611	0					
ANR	6277019	Identifier	free		6276611	0					
ANR	6277020	ArgumentList	name		6276611	1					
ANR	6277021	Argument	name		6276611	0					
ANR	6277022	Identifier	name		6276611	0					
ANR	6277023	ExpressionStatement	"eprintf ( ""r_sys_pid_to_path: Error converting to utf8\\n"" )"	1125:6:23714:23771	6276611	1	True				
ANR	6277024	CallExpression	"eprintf ( ""r_sys_pid_to_path: Error converting to utf8\\n"" )"		6276611	0					
ANR	6277025	Callee	eprintf		6276611	0					
ANR	6277026	Identifier	eprintf		6276611	0					
ANR	6277027	ArgumentList	"""r_sys_pid_to_path: Error converting to utf8\\n"""		6276611	1					
ANR	6277028	Argument	"""r_sys_pid_to_path: Error converting to utf8\\n"""		6276611	0					
ANR	6277029	PrimaryExpression	"""r_sys_pid_to_path: Error converting to utf8\\n"""		6276611	0					
ANR	6277030	ReturnStatement	return NULL ;	1126:6:23779:23790	6276611	2	True				
ANR	6277031	Identifier	NULL		6276611	0					
ANR	6277032	ExpressionStatement	"tmp = r_str_newf ( ""%s%s"" , d , & name [ length ] )"	1128:5:23804:23847	6276611	4	True				
ANR	6277033	AssignmentExpression	"tmp = r_str_newf ( ""%s%s"" , d , & name [ length ] )"		6276611	0		=			
ANR	6277034	Identifier	tmp		6276611	0					
ANR	6277035	CallExpression	"r_str_newf ( ""%s%s"" , d , & name [ length ] )"		6276611	1					
ANR	6277036	Callee	r_str_newf		6276611	0					
ANR	6277037	Identifier	r_str_newf		6276611	0					
ANR	6277038	ArgumentList	"""%s%s"""		6276611	1					
ANR	6277039	Argument	"""%s%s"""		6276611	0					
ANR	6277040	PrimaryExpression	"""%s%s"""		6276611	0					
ANR	6277041	Argument	d		6276611	1					
ANR	6277042	Identifier	d		6276611	0					
ANR	6277043	Argument	& name [ length ]		6276611	2					
ANR	6277044	UnaryOperationExpression	& name [ length ]		6276611	0					
ANR	6277045	UnaryOperator	&		6276611	0					
ANR	6277046	ArrayIndexing	name [ length ]		6276611	1					
ANR	6277047	Identifier	name		6276611	0					
ANR	6277048	Identifier	length		6276611	1					
ANR	6277049	ExpressionStatement	free ( d )	1129:5:23854:23862	6276611	5	True				
ANR	6277050	CallExpression	free ( d )		6276611	0					
ANR	6277051	Callee	free		6276611	0					
ANR	6277052	Identifier	free		6276611	0					
ANR	6277053	ArgumentList	d		6276611	1					
ANR	6277054	Argument	d		6276611	0					
ANR	6277055	Identifier	d		6276611	0					
ANR	6277056	IfStatement	if ( ! tmp )		6276611	6					
ANR	6277057	Condition	! tmp	1130:9:23873:23876	6276611	0	True				
ANR	6277058	UnaryOperationExpression	! tmp		6276611	0					
ANR	6277059	UnaryOperator	!		6276611	0					
ANR	6277060	Identifier	tmp		6276611	1					
ANR	6277061	CompoundStatement		71:15:2053:2053	6276611	1					
ANR	6277062	ExpressionStatement	free ( name )	1131:6:23887:23898	6276611	0	True				
ANR	6277063	CallExpression	free ( name )		6276611	0					
ANR	6277064	Callee	free		6276611	0					
ANR	6277065	Identifier	free		6276611	0					
ANR	6277066	ArgumentList	name		6276611	1					
ANR	6277067	Argument	name		6276611	0					
ANR	6277068	Identifier	name		6276611	0					
ANR	6277069	ExpressionStatement	"eprintf ( ""r_sys_pid_to_path: Error calling r_str_newf\\n"" )"	1132:6:23906:23963	6276611	1	True				
ANR	6277070	CallExpression	"eprintf ( ""r_sys_pid_to_path: Error calling r_str_newf\\n"" )"		6276611	0					
ANR	6277071	Callee	eprintf		6276611	0					
ANR	6277072	Identifier	eprintf		6276611	0					
ANR	6277073	ArgumentList	"""r_sys_pid_to_path: Error calling r_str_newf\\n"""		6276611	1					
ANR	6277074	Argument	"""r_sys_pid_to_path: Error calling r_str_newf\\n"""		6276611	0					
ANR	6277075	PrimaryExpression	"""r_sys_pid_to_path: Error calling r_str_newf\\n"""		6276611	0					
ANR	6277076	ReturnStatement	return NULL ;	1133:6:23971:23982	6276611	2	True				
ANR	6277077	Identifier	NULL		6276611	0					
ANR	6277078	ExpressionStatement	result = strdup ( tmp )	1135:5:23996:24017	6276611	7	True				
ANR	6277079	AssignmentExpression	result = strdup ( tmp )		6276611	0		=			
ANR	6277080	Identifier	result		6276611	0					
ANR	6277081	CallExpression	strdup ( tmp )		6276611	1					
ANR	6277082	Callee	strdup		6276611	0					
ANR	6277083	Identifier	strdup		6276611	0					
ANR	6277084	ArgumentList	tmp		6276611	1					
ANR	6277085	Argument	tmp		6276611	0					
ANR	6277086	Identifier	tmp		6276611	0					
ANR	6277087	BreakStatement	break ;	1136:5:24024:24029	6276611	8	True				
ANR	6277088	ExpressionStatement	free ( dvc )	1138:4:24041:24051	6276611	3	True				
ANR	6277089	CallExpression	free ( dvc )		6276611	0					
ANR	6277090	Callee	free		6276611	0					
ANR	6277091	Identifier	free		6276611	0					
ANR	6277092	ArgumentList	dvc		6276611	1					
ANR	6277093	Argument	dvc		6276611	0					
ANR	6277094	Identifier	dvc		6276611	0					
ANR	6277095	ExpressionStatement	free ( name )	1141:2:24064:24075	6276611	16	True				
ANR	6277096	CallExpression	free ( name )		6276611	0					
ANR	6277097	Callee	free		6276611	0					
ANR	6277098	Identifier	free		6276611	0					
ANR	6277099	ArgumentList	name		6276611	1					
ANR	6277100	Argument	name		6276611	0					
ANR	6277101	Identifier	name		6276611	0					
ANR	6277102	ExpressionStatement	free ( tmp )	1142:2:24079:24089	6276611	17	True				
ANR	6277103	CallExpression	free ( tmp )		6276611	0					
ANR	6277104	Callee	free		6276611	0					
ANR	6277105	Identifier	free		6276611	0					
ANR	6277106	ArgumentList	tmp		6276611	1					
ANR	6277107	Argument	tmp		6276611	0					
ANR	6277108	Identifier	tmp		6276611	0					
ANR	6277109	ElseStatement	else		6276611	0					
ANR	6277110	CompoundStatement		84:8:2273:2273	6276611	0					
ANR	6277111	ExpressionStatement	CloseHandle ( processHandle )	1144:2:24103:24130	6276611	0	True				
ANR	6277112	CallExpression	CloseHandle ( processHandle )		6276611	0					
ANR	6277113	Callee	CloseHandle		6276611	0					
ANR	6277114	Identifier	CloseHandle		6276611	0					
ANR	6277115	ArgumentList	processHandle		6276611	1					
ANR	6277116	Argument	processHandle		6276611	0					
ANR	6277117	Identifier	processHandle		6276611	0					
ANR	6277118	ExpressionStatement	result = r_sys_conv_win_to_utf8 ( filename )	1145:2:24134:24176	6276611	1	True				
ANR	6277119	AssignmentExpression	result = r_sys_conv_win_to_utf8 ( filename )		6276611	0		=			
ANR	6277120	Identifier	result		6276611	0					
ANR	6277121	CallExpression	r_sys_conv_win_to_utf8 ( filename )		6276611	1					
ANR	6277122	Callee	r_sys_conv_win_to_utf8		6276611	0					
ANR	6277123	Identifier	r_sys_conv_win_to_utf8		6276611	0					
ANR	6277124	ArgumentList	filename		6276611	1					
ANR	6277125	Argument	filename		6276611	0					
ANR	6277126	Identifier	filename		6276611	0					
ANR	6277127	ReturnStatement	return result ;	1147:1:24182:24195	6276611	8	True				
ANR	6277128	Identifier	result		6276611	0					
ANR	6277129	ReturnType	R_API char *		6276611	1					
ANR	6277130	Identifier	r_sys_pid_to_path		6276611	2					
ANR	6277131	ParameterList	int pid		6276611	3					
ANR	6277132	Parameter	int pid	1060:30:21816:21822	6276611	0	True				
ANR	6277133	ParameterType	int		6276611	0					
ANR	6277134	Identifier	pid		6276611	1					
ANR	6277135	CFGEntryNode	ENTRY		6276611		True				
ANR	6277136	CFGExitNode	EXIT		6276611		True				
ANR	6277137	Symbol	* tmp		6276611						
ANR	6277138	Symbol	GetModuleFileNameEx		6276611						
ANR	6277139	Symbol	strchr		6276611						
ANR	6277140	Symbol	QueryDosDevice		6276611						
ANR	6277141	Symbol	pid		6276611						
ANR	6277142	Symbol	TEXT		6276611						
ANR	6277143	Symbol	r_str_newf		6276611						
ANR	6277144	Symbol	processHandle		6276611						
ANR	6277145	Symbol	result		6276611						
ANR	6277146	Symbol	dvc		6276611						
ANR	6277147	Symbol	tmp		6276611						
ANR	6277148	Symbol	* length		6276611						
ANR	6277149	Symbol	OpenProcess		6276611						
ANR	6277150	Symbol	strcmp		6276611						
ANR	6277151	Symbol	malloc		6276611						
ANR	6277152	Symbol	GetProcessImageFileName		6276611						
ANR	6277153	Symbol	NULL		6276611						
ANR	6277154	Symbol	d		6276611						
ANR	6277155	Symbol	maxlength		6276611						
ANR	6277156	Symbol	length		6276611						
ANR	6277157	Symbol	drv		6276611						
ANR	6277158	Symbol	* drv		6276611						
ANR	6277159	Symbol	filename		6276611						
ANR	6277160	Symbol	PROCESS_VM_READ		6276611						
ANR	6277161	Symbol	name		6276611						
ANR	6277162	Symbol	MAX_PATH		6276611						
ANR	6277163	Symbol	FALSE		6276611						
ANR	6277164	Symbol	strdup		6276611						
ANR	6277165	Symbol	PROCESS_QUERY_INFORMATION		6276611						
ANR	6277166	Symbol	r_sys_conv_win_to_utf8		6276611						
ANR	6277167	Symbol	device		6276611						
ANR	6277168	Function	r_sys_get_environ	1185:0:24975:25199							
ANR	6277169	FunctionDef	r_sys_get_environ ()		6277168	0					
ANR	6277170	CompoundStatement		1185:34:25009:25199	6277168	0					
ANR	6277171	ExpressionStatement	env = * _NSGetEnviron ( )	1187:1:25043:25065	6277168	0	True				
ANR	6277172	AssignmentExpression	env = * _NSGetEnviron ( )		6277168	0		=			
ANR	6277173	Identifier	env		6277168	0					
ANR	6277174	UnaryOperationExpression	* _NSGetEnviron ( )		6277168	1					
ANR	6277175	UnaryOperator	*		6277168	0					
ANR	6277176	CallExpression	_NSGetEnviron ( )		6277168	1					
ANR	6277177	Callee	_NSGetEnviron		6277168	0					
ANR	6277178	Identifier	_NSGetEnviron		6277168	0					
ANR	6277179	ArgumentList			6277168	1					
ANR	6277180	IfStatement	if ( ! env )		6277168	1					
ANR	6277181	Condition	! env	1192:5:25135:25138	6277168	0	True				
ANR	6277182	UnaryOperationExpression	! env		6277168	0					
ANR	6277183	UnaryOperator	!		6277168	0					
ANR	6277184	Identifier	env		6277168	1					
ANR	6277185	CompoundStatement		8:11:131:131	6277168	1					
ANR	6277186	ExpressionStatement	"env = r_lib_dl_sym ( NULL , ""environ"" )"	1193:2:25145:25181	6277168	0	True				
ANR	6277187	AssignmentExpression	"env = r_lib_dl_sym ( NULL , ""environ"" )"		6277168	0		=			
ANR	6277188	Identifier	env		6277168	0					
ANR	6277189	CallExpression	"r_lib_dl_sym ( NULL , ""environ"" )"		6277168	1					
ANR	6277190	Callee	r_lib_dl_sym		6277168	0					
ANR	6277191	Identifier	r_lib_dl_sym		6277168	0					
ANR	6277192	ArgumentList	NULL		6277168	1					
ANR	6277193	Argument	NULL		6277168	0					
ANR	6277194	Identifier	NULL		6277168	0					
ANR	6277195	Argument	"""environ"""		6277168	1					
ANR	6277196	PrimaryExpression	"""environ"""		6277168	0					
ANR	6277197	ReturnStatement	return env ;	1195:1:25187:25197	6277168	2	True				
ANR	6277198	Identifier	env		6277168	0					
ANR	6277199	ReturnType	R_API char * *		6277168	1					
ANR	6277200	Identifier	r_sys_get_environ		6277168	2					
ANR	6277201	ParameterList			6277168	3					
ANR	6277202	CFGEntryNode	ENTRY		6277168		True				
ANR	6277203	CFGExitNode	EXIT		6277168		True				
ANR	6277204	Symbol	NULL		6277168						
ANR	6277205	Symbol	* _NSGetEnviron		6277168						
ANR	6277206	Symbol	* _NSGetEnviron ( )		6277168						
ANR	6277207	Symbol	r_lib_dl_sym		6277168						
ANR	6277208	Symbol	env		6277168						
ANR	6277209	Symbol	_NSGetEnviron		6277168						
ANR	6277210	Function	r_sys_set_environ	1198:0:25202:25254							
ANR	6277211	FunctionDef	r_sys_set_environ (char * * e)		6277210	0					
ANR	6277212	CompoundStatement		1198:40:25242:25254	6277210	0					
ANR	6277213	ExpressionStatement	env = e	1199:1:25245:25252	6277210	0	True				
ANR	6277214	AssignmentExpression	env = e		6277210	0		=			
ANR	6277215	Identifier	env		6277210	0					
ANR	6277216	Identifier	e		6277210	1					
ANR	6277217	ReturnType	R_API void		6277210	1					
ANR	6277218	Identifier	r_sys_set_environ		6277210	2					
ANR	6277219	ParameterList	char * * e		6277210	3					
ANR	6277220	Parameter	char * * e	1198:30:25232:25239	6277210	0	True				
ANR	6277221	ParameterType	char * *		6277210	0					
ANR	6277222	Identifier	e		6277210	1					
ANR	6277223	CFGEntryNode	ENTRY		6277210		True				
ANR	6277224	CFGExitNode	EXIT		6277210		True				
ANR	6277225	Symbol	e		6277210						
ANR	6277226	Symbol	env		6277210						
ANR	6277227	Function	r_sys_whoami	1202:0:25257:25459							
ANR	6277228	FunctionDef	r_sys_whoami (char * buf)		6277227	0					
ANR	6277229	CompoundStatement		1202:37:25294:25459	6277227	0					
ANR	6277230	IdentifierDeclStatement	char _buf [ 32 ] ;	1203:1:25297:25310	6277227	0	True				
ANR	6277231	IdentifierDecl	_buf [ 32 ]		6277227	0					
ANR	6277232	IdentifierDeclType	char [ 32 ]		6277227	0					
ANR	6277233	Identifier	_buf		6277227	1					
ANR	6277234	PrimaryExpression	32		6277227	2					
ANR	6277235	IdentifierDeclStatement	int pid = getpid ( ) ;	1204:1:25313:25332	6277227	1	True				
ANR	6277236	IdentifierDecl	pid = getpid ( )		6277227	0					
ANR	6277237	IdentifierDeclType	int		6277227	0					
ANR	6277238	Identifier	pid		6277227	1					
ANR	6277239	AssignmentExpression	pid = getpid ( )		6277227	2		=			
ANR	6277240	Identifier	pid		6277227	0					
ANR	6277241	CallExpression	getpid ( )		6277227	1					
ANR	6277242	Callee	getpid		6277227	0					
ANR	6277243	Identifier	getpid		6277227	0					
ANR	6277244	ArgumentList			6277227	1					
ANR	6277245	IdentifierDeclStatement	int hasbuf = ( buf ) ? 1 : 0 ;	1205:1:25335:25359	6277227	2	True				
ANR	6277246	IdentifierDecl	hasbuf = ( buf ) ? 1 : 0		6277227	0					
ANR	6277247	IdentifierDeclType	int		6277227	0					
ANR	6277248	Identifier	hasbuf		6277227	1					
ANR	6277249	AssignmentExpression	hasbuf = ( buf ) ? 1 : 0		6277227	2		=			
ANR	6277250	Identifier	hasbuf		6277227	0					
ANR	6277251	ConditionalExpression	( buf ) ? 1 : 0		6277227	1					
ANR	6277252	Condition	buf		6277227	0					
ANR	6277253	Identifier	buf		6277227	0					
ANR	6277254	PrimaryExpression	1		6277227	1					
ANR	6277255	PrimaryExpression	0		6277227	2					
ANR	6277256	IfStatement	if ( ! hasbuf )		6277227	3					
ANR	6277257	Condition	! hasbuf	1206:5:25366:25372	6277227	0	True				
ANR	6277258	UnaryOperationExpression	! hasbuf		6277227	0					
ANR	6277259	UnaryOperator	!		6277227	0					
ANR	6277260	Identifier	hasbuf		6277227	1					
ANR	6277261	CompoundStatement		5:14:80:80	6277227	1					
ANR	6277262	ExpressionStatement	buf = _buf	1207:2:25379:25389	6277227	0	True				
ANR	6277263	AssignmentExpression	buf = _buf		6277227	0		=			
ANR	6277264	Identifier	buf		6277227	0					
ANR	6277265	Identifier	_buf		6277227	1					
ANR	6277266	ExpressionStatement	"sprintf ( buf , ""pid%d"" , pid )"	1209:1:25395:25422	6277227	4	True				
ANR	6277267	CallExpression	"sprintf ( buf , ""pid%d"" , pid )"		6277227	0					
ANR	6277268	Callee	sprintf		6277227	0					
ANR	6277269	Identifier	sprintf		6277227	0					
ANR	6277270	ArgumentList	buf		6277227	1					
ANR	6277271	Argument	buf		6277227	0					
ANR	6277272	Identifier	buf		6277227	0					
ANR	6277273	Argument	"""pid%d"""		6277227	1					
ANR	6277274	PrimaryExpression	"""pid%d"""		6277227	0					
ANR	6277275	Argument	pid		6277227	2					
ANR	6277276	Identifier	pid		6277227	0					
ANR	6277277	ReturnStatement	return hasbuf ? buf : strdup ( buf ) ;	1210:1:25425:25457	6277227	5	True				
ANR	6277278	ConditionalExpression	hasbuf ? buf : strdup ( buf )		6277227	0					
ANR	6277279	Condition	hasbuf		6277227	0					
ANR	6277280	Identifier	hasbuf		6277227	0					
ANR	6277281	Identifier	buf		6277227	1					
ANR	6277282	CallExpression	strdup ( buf )		6277227	2					
ANR	6277283	Callee	strdup		6277227	0					
ANR	6277284	Identifier	strdup		6277227	0					
ANR	6277285	ArgumentList	buf		6277227	1					
ANR	6277286	Argument	buf		6277227	0					
ANR	6277287	Identifier	buf		6277227	0					
ANR	6277288	ReturnType	R_API char *		6277227	1					
ANR	6277289	Identifier	r_sys_whoami		6277227	2					
ANR	6277290	ParameterList	char * buf		6277227	3					
ANR	6277291	Parameter	char * buf	1202:26:25283:25291	6277227	0	True				
ANR	6277292	ParameterType	char *		6277227	0					
ANR	6277293	Identifier	buf		6277227	1					
ANR	6277294	CFGEntryNode	ENTRY		6277227		True				
ANR	6277295	CFGExitNode	EXIT		6277227		True				
ANR	6277296	Symbol	buf		6277227						
ANR	6277297	Symbol	_buf		6277227						
ANR	6277298	Symbol	pid		6277227						
ANR	6277299	Symbol	strdup		6277227						
ANR	6277300	Symbol	getpid		6277227						
ANR	6277301	Symbol	hasbuf		6277227						
ANR	6277302	Function	r_sys_getpid	1213:0:25462:25651							
ANR	6277303	FunctionDef	r_sys_getpid ()		6277302	0					
ANR	6277304	CompoundStatement		1213:25:25487:25651	6277302	0					
ANR	6277305	ReturnStatement	return getpid ( ) ;	1215:1:25503:25519	6277302	0	True				
ANR	6277306	CallExpression	getpid ( )		6277302	0					
ANR	6277307	Callee	getpid		6277302	0					
ANR	6277308	Identifier	getpid		6277302	0					
ANR	6277309	ArgumentList			6277302	1					
ANR	6277310	ReturnType	R_API int		6277302	1					
ANR	6277311	Identifier	r_sys_getpid		6277302	2					
ANR	6277312	ParameterList			6277302	3					
ANR	6277313	CFGEntryNode	ENTRY		6277302		True				
ANR	6277314	CFGExitNode	EXIT		6277302		True				
ANR	6277315	Symbol	getpid		6277302						
ANR	6277316	Function	r_sys_tts	1224:0:25654:26091							
ANR	6277317	FunctionDef	"r_sys_tts (const char * txt , bool bg)"		6277316	0					
ANR	6277318	CompoundStatement		1224:47:25701:26091	6277316	0					
ANR	6277319	IdentifierDeclStatement	int i ;	1225:1:25704:25709	6277316	0	True				
ANR	6277320	IdentifierDecl	i		6277316	0					
ANR	6277321	IdentifierDeclType	int		6277316	0					
ANR	6277322	Identifier	i		6277316	1					
ANR	6277323	ExpressionStatement	"r_return_val_if_fail ( txt , false )"	1226:1:25712:25745	6277316	1	True				
ANR	6277324	CallExpression	"r_return_val_if_fail ( txt , false )"		6277316	0					
ANR	6277325	Callee	r_return_val_if_fail		6277316	0					
ANR	6277326	Identifier	r_return_val_if_fail		6277316	0					
ANR	6277327	ArgumentList	txt		6277316	1					
ANR	6277328	Argument	txt		6277316	0					
ANR	6277329	Identifier	txt		6277316	0					
ANR	6277330	Argument	false		6277316	1					
ANR	6277331	Identifier	false		6277316	0					
ANR	6277332	IdentifierDeclStatement	"const char * says [ ] = { ""say"" , ""termux-tts-speak"" , NULL } ;"	1227:1:25748:25807	6277316	2	True				
ANR	6277333	IdentifierDecl	"* says [ ] = { ""say"" , ""termux-tts-speak"" , NULL }"		6277316	0					
ANR	6277334	IdentifierDeclType	const char * [ ]		6277316	0					
ANR	6277335	Identifier	says		6277316	1					
ANR	6277336	AssignmentExpression	"* says [ ] = { ""say"" , ""termux-tts-speak"" , NULL }"		6277316	2		=			
ANR	6277337	Identifier	says		6277316	0					
ANR	6277338	InitializerList	"""say"""		6277316	1					
ANR	6277339	PrimaryExpression	"""say"""		6277316	0					
ANR	6277340	PrimaryExpression	"""termux-tts-speak"""		6277316	1					
ANR	6277341	Identifier	NULL		6277316	2					
ANR	6277342	ForStatement	for ( i = 0 ; says [ i ] ; i ++ )		6277316	3					
ANR	6277343	ForInit	i = 0 ;	1230:6:25815:25820	6277316	0	True				
ANR	6277344	AssignmentExpression	i = 0		6277316	0		=			
ANR	6277345	Identifier	i		6277316	0					
ANR	6277346	PrimaryExpression	0		6277316	1					
ANR	6277347	Condition	says [ i ]	1230:13:25822:25828	6277316	1	True				
ANR	6277348	ArrayIndexing	says [ i ]		6277316	0					
ANR	6277349	Identifier	says		6277316	0					
ANR	6277350	Identifier	i		6277316	1					
ANR	6277351	PostIncDecOperationExpression	i ++	1230:22:25831:25833	6277316	2	True				
ANR	6277352	Identifier	i		6277316	0					
ANR	6277353	IncDec	++		6277316	1					
ANR	6277354	CompoundStatement		8:2:138:175	6277316	3					
ANR	6277355	IdentifierDeclStatement	char * sayPath = r_file_path ( says [ i ] ) ;	1231:2:25840:25877	6277316	0	True				
ANR	6277356	IdentifierDecl	* sayPath = r_file_path ( says [ i ] )		6277316	0					
ANR	6277357	IdentifierDeclType	char *		6277316	0					
ANR	6277358	Identifier	sayPath		6277316	1					
ANR	6277359	AssignmentExpression	* sayPath = r_file_path ( says [ i ] )		6277316	2		=			
ANR	6277360	Identifier	sayPath		6277316	0					
ANR	6277361	CallExpression	r_file_path ( says [ i ] )		6277316	1					
ANR	6277362	Callee	r_file_path		6277316	0					
ANR	6277363	Identifier	r_file_path		6277316	0					
ANR	6277364	ArgumentList	says [ i ]		6277316	1					
ANR	6277365	Argument	says [ i ]		6277316	0					
ANR	6277366	ArrayIndexing	says [ i ]		6277316	0					
ANR	6277367	Identifier	says		6277316	0					
ANR	6277368	Identifier	i		6277316	1					
ANR	6277369	IfStatement	if ( sayPath )		6277316	1					
ANR	6277370	Condition	sayPath	1232:6:25885:25891	6277316	0	True				
ANR	6277371	Identifier	sayPath		6277316	0					
ANR	6277372	CompoundStatement		10:3:197:252	6277316	1					
ANR	6277373	IdentifierDeclStatement	"char * line = r_str_replace ( strdup ( txt ) , ""'"" , ""\\"""" , 1 ) ;"	1233:3:25899:25954	6277316	0	True				
ANR	6277374	IdentifierDecl	"* line = r_str_replace ( strdup ( txt ) , ""'"" , ""\\"""" , 1 )"		6277316	0					
ANR	6277375	IdentifierDeclType	char *		6277316	0					
ANR	6277376	Identifier	line		6277316	1					
ANR	6277377	AssignmentExpression	"* line = r_str_replace ( strdup ( txt ) , ""'"" , ""\\"""" , 1 )"		6277316	2		=			
ANR	6277378	Identifier	line		6277316	0					
ANR	6277379	CallExpression	"r_str_replace ( strdup ( txt ) , ""'"" , ""\\"""" , 1 )"		6277316	1					
ANR	6277380	Callee	r_str_replace		6277316	0					
ANR	6277381	Identifier	r_str_replace		6277316	0					
ANR	6277382	ArgumentList	strdup ( txt )		6277316	1					
ANR	6277383	Argument	strdup ( txt )		6277316	0					
ANR	6277384	CallExpression	strdup ( txt )		6277316	0					
ANR	6277385	Callee	strdup		6277316	0					
ANR	6277386	Identifier	strdup		6277316	0					
ANR	6277387	ArgumentList	txt		6277316	1					
ANR	6277388	Argument	txt		6277316	0					
ANR	6277389	Identifier	txt		6277316	0					
ANR	6277390	Argument	"""'"""		6277316	1					
ANR	6277391	PrimaryExpression	"""'"""		6277316	0					
ANR	6277392	Argument	"""\\"""""		6277316	2					
ANR	6277393	PrimaryExpression	"""\\"""""		6277316	0					
ANR	6277394	Argument	1		6277316	3					
ANR	6277395	PrimaryExpression	1		6277316	0					
ANR	6277396	ExpressionStatement	"r_sys_cmdf ( ""\\""%s\\"" '%s'%s"" , sayPath , line , bg ? "" &"" : """" )"	1234:3:25959:26016	6277316	1	True				
ANR	6277397	CallExpression	"r_sys_cmdf ( ""\\""%s\\"" '%s'%s"" , sayPath , line , bg ? "" &"" : """" )"		6277316	0					
ANR	6277398	Callee	r_sys_cmdf		6277316	0					
ANR	6277399	Identifier	r_sys_cmdf		6277316	0					
ANR	6277400	ArgumentList	"""\\""%s\\"" '%s'%s"""		6277316	1					
ANR	6277401	Argument	"""\\""%s\\"" '%s'%s"""		6277316	0					
ANR	6277402	PrimaryExpression	"""\\""%s\\"" '%s'%s"""		6277316	0					
ANR	6277403	Argument	sayPath		6277316	1					
ANR	6277404	Identifier	sayPath		6277316	0					
ANR	6277405	Argument	line		6277316	2					
ANR	6277406	Identifier	line		6277316	0					
ANR	6277407	Argument	"bg ? "" &"" : """""		6277316	3					
ANR	6277408	ConditionalExpression	"bg ? "" &"" : """""		6277316	0					
ANR	6277409	Condition	bg		6277316	0					
ANR	6277410	Identifier	bg		6277316	0					
ANR	6277411	PrimaryExpression	""" &"""		6277316	1					
ANR	6277412	PrimaryExpression	""""""		6277316	2					
ANR	6277413	ExpressionStatement	free ( line )	1235:3:26021:26032	6277316	2	True				
ANR	6277414	CallExpression	free ( line )		6277316	0					
ANR	6277415	Callee	free		6277316	0					
ANR	6277416	Identifier	free		6277316	0					
ANR	6277417	ArgumentList	line		6277316	1					
ANR	6277418	Argument	line		6277316	0					
ANR	6277419	Identifier	line		6277316	0					
ANR	6277420	ExpressionStatement	free ( sayPath )	1236:3:26037:26051	6277316	3	True				
ANR	6277421	CallExpression	free ( sayPath )		6277316	0					
ANR	6277422	Callee	free		6277316	0					
ANR	6277423	Identifier	free		6277316	0					
ANR	6277424	ArgumentList	sayPath		6277316	1					
ANR	6277425	Argument	sayPath		6277316	0					
ANR	6277426	Identifier	sayPath		6277316	0					
ANR	6277427	ReturnStatement	return true ;	1237:3:26056:26067	6277316	4	True				
ANR	6277428	Identifier	true		6277316	0					
ANR	6277429	ReturnStatement	return false ;	1240:1:26077:26089	6277316	4	True				
ANR	6277430	Identifier	false		6277316	0					
ANR	6277431	ReturnType	R_API bool		6277316	1					
ANR	6277432	Identifier	r_sys_tts		6277316	2					
ANR	6277433	ParameterList	"const char * txt , bool bg"		6277316	3					
ANR	6277434	Parameter	const char * txt	1224:21:25675:25689	6277316	0	True				
ANR	6277435	ParameterType	const char *		6277316	0					
ANR	6277436	Identifier	txt		6277316	1					
ANR	6277437	Parameter	bool bg	1224:38:25692:25698	6277316	1	True				
ANR	6277438	ParameterType	bool		6277316	0					
ANR	6277439	Identifier	bg		6277316	1					
ANR	6277440	CFGEntryNode	ENTRY		6277316		True				
ANR	6277441	CFGExitNode	EXIT		6277316		True				
ANR	6277442	Symbol	NULL		6277316						
ANR	6277443	Symbol	bg		6277316						
ANR	6277444	Symbol	line		6277316						
ANR	6277445	Symbol	false		6277316						
ANR	6277446	Symbol	i		6277316						
ANR	6277447	Symbol	txt		6277316						
ANR	6277448	Symbol	sayPath		6277316						
ANR	6277449	Symbol	* i		6277316						
ANR	6277450	Symbol	r_str_replace		6277316						
ANR	6277451	Symbol	true		6277316						
ANR	6277452	Symbol	* says		6277316						
ANR	6277453	Symbol	r_file_path		6277316						
ANR	6277454	Symbol	strdup		6277316						
ANR	6277455	Symbol	says		6277316						
ANR	6277456	Function	r_sys_prefix	1243:6:26100:26426							
ANR	6277457	FunctionDef	r_sys_prefix (const char * pfx)		6277456	0					
ANR	6277458	CompoundStatement		1243:48:26142:26426	6277456	0					
ANR	6277459	Statement	static	1244:1:26145:26150	6277456	0	True				
ANR	6277460	IdentifierDeclStatement	char * prefix = NULL ;	1244:8:26152:26171	6277456	1	True				
ANR	6277461	IdentifierDecl	* prefix = NULL		6277456	0					
ANR	6277462	IdentifierDeclType	char *		6277456	0					
ANR	6277463	Identifier	prefix		6277456	1					
ANR	6277464	AssignmentExpression	* prefix = NULL		6277456	2		=			
ANR	6277465	Identifier	NULL		6277456	0					
ANR	6277466	Identifier	NULL		6277456	1					
ANR	6277467	IfStatement	if ( ! prefix )		6277456	2					
ANR	6277468	Condition	! prefix	1245:5:26178:26184	6277456	0	True				
ANR	6277469	UnaryOperationExpression	! prefix		6277456	0					
ANR	6277470	UnaryOperator	!		6277456	0					
ANR	6277471	Identifier	prefix		6277456	1					
ANR	6277472	CompoundStatement		3:14:44:44	6277456	1					
ANR	6277473	ExpressionStatement	prefix = r_sys_get_src_dir_w32 ( )	1247:2:26218:26251	6277456	0	True				
ANR	6277474	AssignmentExpression	prefix = r_sys_get_src_dir_w32 ( )		6277456	0		=			
ANR	6277475	Identifier	prefix		6277456	0					
ANR	6277476	CallExpression	r_sys_get_src_dir_w32 ( )		6277456	1					
ANR	6277477	Callee	r_sys_get_src_dir_w32		6277456	0					
ANR	6277478	Identifier	r_sys_get_src_dir_w32		6277456	0					
ANR	6277479	ArgumentList			6277456	1					
ANR	6277480	IfStatement	if ( ! prefix )		6277456	1					
ANR	6277481	Condition	! prefix	1248:6:26259:26265	6277456	0	True				
ANR	6277482	UnaryOperationExpression	! prefix		6277456	0					
ANR	6277483	UnaryOperator	!		6277456	0					
ANR	6277484	Identifier	prefix		6277456	1					
ANR	6277485	CompoundStatement		6:15:125:125	6277456	1					
ANR	6277486	ExpressionStatement	prefix = strdup ( R2_PREFIX )	1249:3:26273:26300	6277456	0	True				
ANR	6277487	AssignmentExpression	prefix = strdup ( R2_PREFIX )		6277456	0		=			
ANR	6277488	Identifier	prefix		6277456	0					
ANR	6277489	CallExpression	strdup ( R2_PREFIX )		6277456	1					
ANR	6277490	Callee	strdup		6277456	0					
ANR	6277491	Identifier	strdup		6277456	0					
ANR	6277492	ArgumentList	R2_PREFIX		6277456	1					
ANR	6277493	Argument	R2_PREFIX		6277456	0					
ANR	6277494	Identifier	R2_PREFIX		6277456	0					
ANR	6277495	IfStatement	if ( pfx )		6277456	3					
ANR	6277496	Condition	pfx	1255:5:26358:26360	6277456	0	True				
ANR	6277497	Identifier	pfx		6277456	0					
ANR	6277498	CompoundStatement		13:10:220:220	6277456	1					
ANR	6277499	ExpressionStatement	free ( prefix )	1256:2:26367:26380	6277456	0	True				
ANR	6277500	CallExpression	free ( prefix )		6277456	0					
ANR	6277501	Callee	free		6277456	0					
ANR	6277502	Identifier	free		6277456	0					
ANR	6277503	ArgumentList	prefix		6277456	1					
ANR	6277504	Argument	prefix		6277456	0					
ANR	6277505	Identifier	prefix		6277456	0					
ANR	6277506	ExpressionStatement	prefix = strdup ( pfx )	1257:2:26384:26405	6277456	1	True				
ANR	6277507	AssignmentExpression	prefix = strdup ( pfx )		6277456	0		=			
ANR	6277508	Identifier	prefix		6277456	0					
ANR	6277509	CallExpression	strdup ( pfx )		6277456	1					
ANR	6277510	Callee	strdup		6277456	0					
ANR	6277511	Identifier	strdup		6277456	0					
ANR	6277512	ArgumentList	pfx		6277456	1					
ANR	6277513	Argument	pfx		6277456	0					
ANR	6277514	Identifier	pfx		6277456	0					
ANR	6277515	ReturnStatement	return prefix ;	1259:1:26411:26424	6277456	4	True				
ANR	6277516	Identifier	prefix		6277456	0					
ANR	6277517	ReturnType	const char *		6277456	1					
ANR	6277518	Identifier	r_sys_prefix		6277456	2					
ANR	6277519	ParameterList	const char * pfx		6277456	3					
ANR	6277520	Parameter	const char * pfx	1243:31:26125:26139	6277456	0	True				
ANR	6277521	ParameterType	const char *		6277456	0					
ANR	6277522	Identifier	pfx		6277456	1					
ANR	6277523	CFGEntryNode	ENTRY		6277456		True				
ANR	6277524	CFGExitNode	EXIT		6277456		True				
ANR	6277525	Symbol	pfx		6277456						
ANR	6277526	Symbol	NULL		6277456						
ANR	6277527	Symbol	r_sys_get_src_dir_w32		6277456						
ANR	6277528	Symbol	prefix		6277456						
ANR	6277529	Symbol	strdup		6277456						
ANR	6277530	Symbol	R2_PREFIX		6277456						
