command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	274865	File	data/converged/CVE-2019-16718~_radare2/apprentice.c								
ANR	274866	ClassDef	r_magic_entry	60:0:2231:2310							
ANR	274867	DeclStmt									
ANR	274868	Decl							struct r_magic	struct r_magic *	mp
ANR	274869	DeclStmt									
ANR	274870	Decl							ut32	ut32	cont_count
ANR	274871	DeclStmt									
ANR	274872	Decl							ut32	ut32	max_count
ANR	274873	DeclStmt									
ANR	274874	Decl							int	int [ FILE_NAMES_SIZE ]	magic_file_formats
ANR	274875	DeclStmt									
ANR	274876	Decl							const size_t	const size_t	file_nformats
ANR	274877	DeclStmt									
ANR	274878	Decl							const char	const char * [ FILE_NAMES_SIZE ]	magic_file_names
ANR	274879	DeclStmt									
ANR	274880	Decl							const size_t	const size_t	file_nnames
ANR	274881	DeclStmt									
ANR	274882	Decl							int	"int ( RMagic * ms , struct r_magic * , const char * * , int )"	getvalue
ANR	274883	DeclStmt									
ANR	274884	Decl							int	int ( int )	hextoint
ANR	274885	DeclStmt									
ANR	274886	Decl							const char	"const char * ( RMagic * , const char * , char * , int , int * , int )"	getstr
ANR	274887	DeclStmt									
ANR	274888	Decl							int	"int ( RMagic * , struct r_magic_entry * * , ut32 * , const char * , size_t , int )"	parse
ANR	274889	DeclStmt									
ANR	274890	Decl							int	"int ( RMagic * , struct r_magic_entry * * , ut32 * , const char * )"	parse_mime
ANR	274891	DeclStmt									
ANR	274892	Decl							void	void ( const char * * )	eatsize
ANR	274893	DeclStmt									
ANR	274894	Decl							int	"int ( RMagic * , const char * , int , struct mlist * )"	apprentice_1
ANR	274895	DeclStmt									
ANR	274896	Decl							size_t	size_t ( const struct r_magic * )	apprentice_r_magic_strength
ANR	274897	DeclStmt									
ANR	274898	Decl							int	"int ( const void * , const void * )"	apprentice_sort
ANR	274899	DeclStmt									
ANR	274900	Decl							int	"int ( RMagic * , struct r_magic * * , ut32 * , const char * , int )"	apprentice_load
ANR	274901	DeclStmt									
ANR	274902	Decl							void	"void ( struct r_magic * , ut32 )"	byteswap
ANR	274903	DeclStmt									
ANR	274904	Decl							void	void ( struct r_magic * )	bs1
ANR	274905	DeclStmt									
ANR	274906	Decl							ut16	ut16 ( ut16 )	swap2
ANR	274907	DeclStmt									
ANR	274908	Decl							ut32	ut32 ( ut32 )	swap4
ANR	274909	DeclStmt									
ANR	274910	Decl							ut64	ut64 ( ut64 )	swap8
ANR	274911	DeclStmt									
ANR	274912	Decl							char	"char * ( const char * , int )"	mkdbname
ANR	274913	DeclStmt									
ANR	274914	Decl							int	"int ( RMagic * , struct r_magic * * , ut32 * , const char * )"	apprentice_map
ANR	274915	DeclStmt									
ANR	274916	Decl							int	"int ( RMagic * , struct r_magic * * , ut32 * , const char * )"	apprentice_compile
ANR	274917	DeclStmt									
ANR	274918	Decl							int	"int ( const char * , int )"	check_format_type
ANR	274919	DeclStmt									
ANR	274920	Decl							int	"int ( RMagic * , struct r_magic * )"	check_format
ANR	274921	DeclStmt									
ANR	274922	Decl							int	int ( char )	get_op
ANR	274923	DeclStmt									
ANR	274924	Decl							size_t	size_t	maxmagic
ANR	274925	DeclStmt									
ANR	274926	Decl							size_t	size_t	magicsize
ANR	274927	DeclStmt									
ANR	274928	Decl							const char	const char [ ]	usg_hdr
ANR	274929	DeclStmt									
ANR	274930	Decl							const char	const char [ ]	mime_marker
ANR	274931	DeclStmt									
ANR	274932	Decl							const size_t	const size_t	mime_marker_len
ANR	274933	ClassDef	type_tbl_s	100:13:3942:6039							
ANR	274934	DeclStmt									
ANR	274935	Decl							const char	const char [ 16 ]	name
ANR	274936	DeclStmt									
ANR	274937	Decl							const size_t	const size_t	len
ANR	274938	DeclStmt									
ANR	274939	Decl							const int	const int	type
ANR	274940	DeclStmt									
ANR	274941	Decl							const int	const int	format
ANR	274942	DeclStmt									
ANR	274943	Decl							type_tbl_s	type_tbl_s [ ]	type_tbl
ANR	274944	Function	get_type	151:0:6042:6275							
ANR	274945	FunctionDef	"get_type (const char * l , const char * * t)"		274944	0					
ANR	274946	CompoundStatement		151:51:6093:6275	274944	0					
ANR	274947	IdentifierDeclStatement	const struct type_tbl_s * p ;	152:1:6096:6122	274944	0	True				
ANR	274948	IdentifierDecl	* p		274944	0					
ANR	274949	IdentifierDeclType	const struct type_tbl_s *		274944	0					
ANR	274950	Identifier	p		274944	1					
ANR	274951	ForStatement	for ( p = type_tbl ; p -> len ; p ++ )		274944	1					
ANR	274952	ForInit	p = type_tbl ;	154:6:6131:6143	274944	0	True				
ANR	274953	AssignmentExpression	p = type_tbl		274944	0		=			
ANR	274954	Identifier	p		274944	0					
ANR	274955	Identifier	type_tbl		274944	1					
ANR	274956	Condition	p -> len	154:20:6145:6150	274944	1	True				
ANR	274957	PtrMemberAccess	p -> len		274944	0					
ANR	274958	Identifier	p		274944	0					
ANR	274959	Identifier	len		274944	1					
ANR	274960	PostIncDecOperationExpression	p ++	154:28:6153:6155	274944	2	True				
ANR	274961	Identifier	p		274944	0					
ANR	274962	IncDec	++		274944	1					
ANR	274963	CompoundStatement		4:33:64:64	274944	3					
ANR	274964	IfStatement	"if ( strncmp ( l , p -> name , p -> len ) == 0 )"		274944	0					
ANR	274965	Condition	"strncmp ( l , p -> name , p -> len ) == 0"	155:6:6166:6198	274944	0	True				
ANR	274966	EqualityExpression	"strncmp ( l , p -> name , p -> len ) == 0"		274944	0		==			
ANR	274967	CallExpression	"strncmp ( l , p -> name , p -> len )"		274944	0					
ANR	274968	Callee	strncmp		274944	0					
ANR	274969	Identifier	strncmp		274944	0					
ANR	274970	ArgumentList	l		274944	1					
ANR	274971	Argument	l		274944	0					
ANR	274972	Identifier	l		274944	0					
ANR	274973	Argument	p -> name		274944	1					
ANR	274974	PtrMemberAccess	p -> name		274944	0					
ANR	274975	Identifier	p		274944	0					
ANR	274976	Identifier	name		274944	1					
ANR	274977	Argument	p -> len		274944	2					
ANR	274978	PtrMemberAccess	p -> len		274944	0					
ANR	274979	Identifier	p		274944	0					
ANR	274980	Identifier	len		274944	1					
ANR	274981	PrimaryExpression	0		274944	1					
ANR	274982	CompoundStatement		5:41:107:107	274944	1					
ANR	274983	IfStatement	if ( t )		274944	0					
ANR	274984	Condition	t	156:7:6210:6210	274944	0	True				
ANR	274985	Identifier	t		274944	0					
ANR	274986	CompoundStatement		6:10:119:119	274944	1					
ANR	274987	ExpressionStatement	* t = l + p -> len	157:4:6219:6234	274944	0	True				
ANR	274988	AssignmentExpression	* t = l + p -> len		274944	0		=			
ANR	274989	UnaryOperationExpression	* t		274944	0					
ANR	274990	UnaryOperator	*		274944	0					
ANR	274991	Identifier	t		274944	1					
ANR	274992	AdditiveExpression	l + p -> len		274944	1		+			
ANR	274993	Identifier	l		274944	0					
ANR	274994	PtrMemberAccess	p -> len		274944	1					
ANR	274995	Identifier	p		274944	0					
ANR	274996	Identifier	len		274944	1					
ANR	274997	BreakStatement	break ;	159:3:6244:6249	274944	1	True				
ANR	274998	ReturnStatement	return p -> type ;	162:1:6259:6273	274944	2	True				
ANR	274999	PtrMemberAccess	p -> type		274944	0					
ANR	275000	Identifier	p		274944	0					
ANR	275001	Identifier	type		274944	1					
ANR	275002	ReturnType	static int		274944	1					
ANR	275003	Identifier	get_type		274944	2					
ANR	275004	ParameterList	"const char * l , const char * * t"		274944	3					
ANR	275005	Parameter	const char * l	151:20:6062:6074	274944	0	True				
ANR	275006	ParameterType	const char *		274944	0					
ANR	275007	Identifier	l		274944	1					
ANR	275008	Parameter	const char * * t	151:35:6077:6090	274944	1	True				
ANR	275009	ParameterType	const char * *		274944	0					
ANR	275010	Identifier	t		274944	1					
ANR	275011	CFGEntryNode	ENTRY		274944		True				
ANR	275012	CFGExitNode	EXIT		274944		True				
ANR	275013	Symbol	p		274944						
ANR	275014	Symbol	strncmp		274944						
ANR	275015	Symbol	t		274944						
ANR	275016	Symbol	p -> len		274944						
ANR	275017	Symbol	* p		274944						
ANR	275018	Symbol	p -> name		274944						
ANR	275019	Symbol	l		274944						
ANR	275020	Symbol	type_tbl		274944						
ANR	275021	Symbol	p -> type		274944						
ANR	275022	Symbol	* t		274944						
ANR	275023	Function	init_file_tables	165:0:6278:6574							
ANR	275024	FunctionDef	init_file_tables ()		275023	0					
ANR	275025	CompoundStatement		165:35:6313:6574	275023	0					
ANR	275026	Statement	static	166:1:6316:6321	275023	0	True				
ANR	275027	IdentifierDeclStatement	int done = 0 ;	166:8:6323:6335	275023	1	True				
ANR	275028	IdentifierDecl	done = 0		275023	0					
ANR	275029	IdentifierDeclType	int		275023	0					
ANR	275030	Identifier	done		275023	1					
ANR	275031	AssignmentExpression	done = 0		275023	2		=			
ANR	275032	Identifier	done		275023	0					
ANR	275033	PrimaryExpression	0		275023	1					
ANR	275034	IdentifierDeclStatement	const struct type_tbl_s * p ;	167:1:6338:6364	275023	2	True				
ANR	275035	IdentifierDecl	* p		275023	0					
ANR	275036	IdentifierDeclType	const struct type_tbl_s *		275023	0					
ANR	275037	Identifier	p		275023	1					
ANR	275038	IfStatement	if ( done )		275023	3					
ANR	275039	Condition	done	168:5:6371:6374	275023	0	True				
ANR	275040	Identifier	done		275023	0					
ANR	275041	CompoundStatement		4:11:63:63	275023	1					
ANR	275042	ReturnStatement	return ;	169:2:6381:6387	275023	0	True				
ANR	275043	ExpressionStatement	done ++	171:1:6393:6399	275023	4	True				
ANR	275044	PostIncDecOperationExpression	done ++		275023	0					
ANR	275045	Identifier	done		275023	0					
ANR	275046	IncDec	++		275023	1					
ANR	275047	ForStatement	for ( p = type_tbl ; p -> len ; p ++ )		275023	5					
ANR	275048	ForInit	p = type_tbl ;	172:6:6407:6419	275023	0	True				
ANR	275049	AssignmentExpression	p = type_tbl		275023	0		=			
ANR	275050	Identifier	p		275023	0					
ANR	275051	Identifier	type_tbl		275023	1					
ANR	275052	Condition	p -> len	172:20:6421:6426	275023	1	True				
ANR	275053	PtrMemberAccess	p -> len		275023	0					
ANR	275054	Identifier	p		275023	0					
ANR	275055	Identifier	len		275023	1					
ANR	275056	PostIncDecOperationExpression	p ++	172:28:6429:6431	275023	2	True				
ANR	275057	Identifier	p		275023	0					
ANR	275058	IncDec	++		275023	1					
ANR	275059	CompoundStatement		8:33:120:120	275023	3					
ANR	275060	IfStatement	if ( p -> type >= FILE_NAMES_SIZE )		275023	0					
ANR	275061	Condition	p -> type >= FILE_NAMES_SIZE	173:6:6442:6467	275023	0	True				
ANR	275062	RelationalExpression	p -> type >= FILE_NAMES_SIZE		275023	0		>=			
ANR	275063	PtrMemberAccess	p -> type		275023	0					
ANR	275064	Identifier	p		275023	0					
ANR	275065	Identifier	type		275023	1					
ANR	275066	Identifier	FILE_NAMES_SIZE		275023	1					
ANR	275067	CompoundStatement		9:34:156:156	275023	1					
ANR	275068	ContinueStatement	continue ;	174:3:6475:6483	275023	0	True				
ANR	275069	ExpressionStatement	magic_file_names [ p -> type ] = p -> name	176:2:6491:6526	275023	1	True				
ANR	275070	AssignmentExpression	magic_file_names [ p -> type ] = p -> name		275023	0		=			
ANR	275071	ArrayIndexing	magic_file_names [ p -> type ]		275023	0					
ANR	275072	Identifier	magic_file_names		275023	0					
ANR	275073	PtrMemberAccess	p -> type		275023	1					
ANR	275074	Identifier	p		275023	0					
ANR	275075	Identifier	type		275023	1					
ANR	275076	PtrMemberAccess	p -> name		275023	1					
ANR	275077	Identifier	p		275023	0					
ANR	275078	Identifier	name		275023	1					
ANR	275079	ExpressionStatement	magic_file_formats [ p -> type ] = p -> format	177:2:6530:6569	275023	2	True				
ANR	275080	AssignmentExpression	magic_file_formats [ p -> type ] = p -> format		275023	0		=			
ANR	275081	ArrayIndexing	magic_file_formats [ p -> type ]		275023	0					
ANR	275082	Identifier	magic_file_formats		275023	0					
ANR	275083	PtrMemberAccess	p -> type		275023	1					
ANR	275084	Identifier	p		275023	0					
ANR	275085	Identifier	type		275023	1					
ANR	275086	PtrMemberAccess	p -> format		275023	1					
ANR	275087	Identifier	p		275023	0					
ANR	275088	Identifier	format		275023	1					
ANR	275089	ReturnType	static void		275023	1					
ANR	275090	Identifier	init_file_tables		275023	2					
ANR	275091	ParameterList			275023	3					
ANR	275092	CFGEntryNode	ENTRY		275023		True				
ANR	275093	CFGExitNode	EXIT		275023		True				
ANR	275094	Symbol	p -> format		275023						
ANR	275095	Symbol	magic_file_formats		275023						
ANR	275096	Symbol	* magic_file_formats		275023						
ANR	275097	Symbol	FILE_NAMES_SIZE		275023						
ANR	275098	Symbol	* p -> type		275023						
ANR	275099	Symbol	type_tbl		275023						
ANR	275100	Symbol	done		275023						
ANR	275101	Symbol	p -> type		275023						
ANR	275102	Symbol	p		275023						
ANR	275103	Symbol	p -> len		275023						
ANR	275104	Symbol	* magic_file_names		275023						
ANR	275105	Symbol	* p		275023						
ANR	275106	Symbol	* * p		275023						
ANR	275107	Symbol	p -> name		275023						
ANR	275108	Symbol	magic_file_names		275023						
ANR	275109	Function	apprentice_1	184:0:6617:7944							
ANR	275110	FunctionDef	"apprentice_1 (RMagic * ms , const char * fn , int action , struct mlist * mlist)"		275109	0					
ANR	275111	CompoundStatement		184:85:6702:7944	275109	0					
ANR	275112	IdentifierDeclStatement	struct r_magic * magic = NULL ;	185:1:6705:6733	275109	0	True				
ANR	275113	IdentifierDecl	* magic = NULL		275109	0					
ANR	275114	IdentifierDeclType	struct r_magic *		275109	0					
ANR	275115	Identifier	magic		275109	1					
ANR	275116	AssignmentExpression	* magic = NULL		275109	2		=			
ANR	275117	Identifier	NULL		275109	0					
ANR	275118	Identifier	NULL		275109	1					
ANR	275119	IdentifierDeclStatement	ut32 nmagic = 0 ;	186:1:6736:6751	275109	1	True				
ANR	275120	IdentifierDecl	nmagic = 0		275109	0					
ANR	275121	IdentifierDeclType	ut32		275109	0					
ANR	275122	Identifier	nmagic		275109	1					
ANR	275123	AssignmentExpression	nmagic = 0		275109	2		=			
ANR	275124	Identifier	nmagic		275109	0					
ANR	275125	PrimaryExpression	0		275109	1					
ANR	275126	IdentifierDeclStatement	struct mlist * ml ;	187:1:6754:6770	275109	2	True				
ANR	275127	IdentifierDecl	* ml		275109	0					
ANR	275128	IdentifierDeclType	struct mlist *		275109	0					
ANR	275129	Identifier	ml		275109	1					
ANR	275130	IdentifierDeclStatement	int rv = - 1 ;	188:1:6773:6784	275109	3	True				
ANR	275131	IdentifierDecl	rv = - 1		275109	0					
ANR	275132	IdentifierDeclType	int		275109	0					
ANR	275133	Identifier	rv		275109	1					
ANR	275134	AssignmentExpression	rv = - 1		275109	2		=			
ANR	275135	Identifier	rv		275109	0					
ANR	275136	UnaryOperationExpression	- 1		275109	1					
ANR	275137	UnaryOperator	-		275109	0					
ANR	275138	PrimaryExpression	1		275109	1					
ANR	275139	IdentifierDeclStatement	int mapped ;	189:1:6787:6797	275109	4	True				
ANR	275140	IdentifierDecl	mapped		275109	0					
ANR	275141	IdentifierDeclType	int		275109	0					
ANR	275142	Identifier	mapped		275109	1					
ANR	275143	IfStatement	if ( ! ms )		275109	5					
ANR	275144	Condition	! ms	191:5:6805:6807	275109	0	True				
ANR	275145	UnaryOperationExpression	! ms		275109	0					
ANR	275146	UnaryOperator	!		275109	0					
ANR	275147	Identifier	ms		275109	1					
ANR	275148	CompoundStatement		8:10:107:107	275109	1					
ANR	275149	ReturnStatement	return - 1 ;	192:2:6814:6823	275109	0	True				
ANR	275150	UnaryOperationExpression	- 1		275109	0					
ANR	275151	UnaryOperator	-		275109	0					
ANR	275152	PrimaryExpression	1		275109	1					
ANR	275153	ExpressionStatement	ms -> haderr = 0	194:1:6829:6843	275109	6	True				
ANR	275154	AssignmentExpression	ms -> haderr = 0		275109	0		=			
ANR	275155	PtrMemberAccess	ms -> haderr		275109	0					
ANR	275156	Identifier	ms		275109	0					
ANR	275157	Identifier	haderr		275109	1					
ANR	275158	PrimaryExpression	0		275109	1					
ANR	275159	IfStatement	if ( magicsize != FILE_MAGICSIZE )		275109	7					
ANR	275160	Condition	magicsize != FILE_MAGICSIZE	195:5:6850:6876	275109	0	True				
ANR	275161	EqualityExpression	magicsize != FILE_MAGICSIZE		275109	0		!=			
ANR	275162	Identifier	magicsize		275109	0					
ANR	275163	Identifier	FILE_MAGICSIZE		275109	1					
ANR	275164	CompoundStatement		12:34:176:176	275109	1					
ANR	275165	ExpressionStatement	"file_error ( ms , 0 , ""magic element size %lu != %lu"" , ( unsigned long ) ( size_t ) sizeof ( * magic ) , ( unsigned long ) FILE_MAGICSIZE )"	196:2:6883:7016	275109	0	True				
ANR	275166	CallExpression	"file_error ( ms , 0 , ""magic element size %lu != %lu"" , ( unsigned long ) ( size_t ) sizeof ( * magic ) , ( unsigned long ) FILE_MAGICSIZE )"		275109	0					
ANR	275167	Callee	file_error		275109	0					
ANR	275168	Identifier	file_error		275109	0					
ANR	275169	ArgumentList	ms		275109	1					
ANR	275170	Argument	ms		275109	0					
ANR	275171	Identifier	ms		275109	0					
ANR	275172	Argument	0		275109	1					
ANR	275173	PrimaryExpression	0		275109	0					
ANR	275174	Argument	"""magic element size %lu != %lu"""		275109	2					
ANR	275175	PrimaryExpression	"""magic element size %lu != %lu"""		275109	0					
ANR	275176	Argument	( unsigned long ) ( size_t ) sizeof ( * magic )		275109	3					
ANR	275177	CastExpression	( unsigned long ) ( size_t ) sizeof ( * magic )		275109	0					
ANR	275178	CastTarget	unsigned long		275109	0					
ANR	275179	CastExpression	( size_t ) sizeof ( * magic )		275109	1					
ANR	275180	CastTarget	size_t		275109	0					
ANR	275181	SizeofExpression	sizeof ( * magic )		275109	1					
ANR	275182	Sizeof	sizeof		275109	0					
ANR	275183	UnaryOperationExpression	* magic		275109	1					
ANR	275184	UnaryOperator	*		275109	0					
ANR	275185	Identifier	magic		275109	1					
ANR	275186	Argument	( unsigned long ) FILE_MAGICSIZE		275109	4					
ANR	275187	CastExpression	( unsigned long ) FILE_MAGICSIZE		275109	0					
ANR	275188	CastTarget	unsigned long		275109	0					
ANR	275189	Identifier	FILE_MAGICSIZE		275109	1					
ANR	275190	ReturnStatement	return - 1 ;	199:2:7020:7029	275109	1	True				
ANR	275191	UnaryOperationExpression	- 1		275109	0					
ANR	275192	UnaryOperator	-		275109	0					
ANR	275193	PrimaryExpression	1		275109	1					
ANR	275194	ExpressionStatement	ms -> file = fn	202:1:7036:7049	275109	8	True				
ANR	275195	AssignmentExpression	ms -> file = fn		275109	0		=			
ANR	275196	PtrMemberAccess	ms -> file		275109	0					
ANR	275197	Identifier	ms		275109	0					
ANR	275198	Identifier	file		275109	1					
ANR	275199	Identifier	fn		275109	1					
ANR	275200	IfStatement	if ( action == FILE_COMPILE )		275109	9					
ANR	275201	Condition	action == FILE_COMPILE	203:5:7104:7125	275109	0	True				
ANR	275202	EqualityExpression	action == FILE_COMPILE		275109	0		==			
ANR	275203	Identifier	action		275109	0					
ANR	275204	Identifier	FILE_COMPILE		275109	1					
ANR	275205	CompoundStatement		20:29:425:425	275109	1					
ANR	275206	ExpressionStatement	"rv = apprentice_load ( ms , & magic , & nmagic , fn , action )"	204:2:7132:7186	275109	0	True				
ANR	275207	AssignmentExpression	"rv = apprentice_load ( ms , & magic , & nmagic , fn , action )"		275109	0		=			
ANR	275208	Identifier	rv		275109	0					
ANR	275209	CallExpression	"apprentice_load ( ms , & magic , & nmagic , fn , action )"		275109	1					
ANR	275210	Callee	apprentice_load		275109	0					
ANR	275211	Identifier	apprentice_load		275109	0					
ANR	275212	ArgumentList	ms		275109	1					
ANR	275213	Argument	ms		275109	0					
ANR	275214	Identifier	ms		275109	0					
ANR	275215	Argument	& magic		275109	1					
ANR	275216	UnaryOperationExpression	& magic		275109	0					
ANR	275217	UnaryOperator	&		275109	0					
ANR	275218	Identifier	magic		275109	1					
ANR	275219	Argument	& nmagic		275109	2					
ANR	275220	UnaryOperationExpression	& nmagic		275109	0					
ANR	275221	UnaryOperator	&		275109	0					
ANR	275222	Identifier	nmagic		275109	1					
ANR	275223	Argument	fn		275109	3					
ANR	275224	Identifier	fn		275109	0					
ANR	275225	Argument	action		275109	4					
ANR	275226	Identifier	action		275109	0					
ANR	275227	IfStatement	if ( rv != 0 )		275109	1					
ANR	275228	Condition	rv != 0	205:6:7194:7200	275109	0	True				
ANR	275229	EqualityExpression	rv != 0		275109	0		!=			
ANR	275230	Identifier	rv		275109	0					
ANR	275231	PrimaryExpression	0		275109	1					
ANR	275232	CompoundStatement		22:15:500:500	275109	1					
ANR	275233	ReturnStatement	return - 1 ;	206:3:7208:7217	275109	0	True				
ANR	275234	UnaryOperationExpression	- 1		275109	0					
ANR	275235	UnaryOperator	-		275109	0					
ANR	275236	PrimaryExpression	1		275109	1					
ANR	275237	ExpressionStatement	"rv = apprentice_compile ( ms , & magic , & nmagic , fn )"	208:2:7225:7274	275109	2	True				
ANR	275238	AssignmentExpression	"rv = apprentice_compile ( ms , & magic , & nmagic , fn )"		275109	0		=			
ANR	275239	Identifier	rv		275109	0					
ANR	275240	CallExpression	"apprentice_compile ( ms , & magic , & nmagic , fn )"		275109	1					
ANR	275241	Callee	apprentice_compile		275109	0					
ANR	275242	Identifier	apprentice_compile		275109	0					
ANR	275243	ArgumentList	ms		275109	1					
ANR	275244	Argument	ms		275109	0					
ANR	275245	Identifier	ms		275109	0					
ANR	275246	Argument	& magic		275109	1					
ANR	275247	UnaryOperationExpression	& magic		275109	0					
ANR	275248	UnaryOperator	&		275109	0					
ANR	275249	Identifier	magic		275109	1					
ANR	275250	Argument	& nmagic		275109	2					
ANR	275251	UnaryOperationExpression	& nmagic		275109	0					
ANR	275252	UnaryOperator	&		275109	0					
ANR	275253	Identifier	nmagic		275109	1					
ANR	275254	Argument	fn		275109	3					
ANR	275255	Identifier	fn		275109	0					
ANR	275256	ExpressionStatement	free ( magic )	209:2:7278:7290	275109	3	True				
ANR	275257	CallExpression	free ( magic )		275109	0					
ANR	275258	Callee	free		275109	0					
ANR	275259	Identifier	free		275109	0					
ANR	275260	ArgumentList	magic		275109	1					
ANR	275261	Argument	magic		275109	0					
ANR	275262	Identifier	magic		275109	0					
ANR	275263	ReturnStatement	return rv ;	210:2:7294:7303	275109	4	True				
ANR	275264	Identifier	rv		275109	0					
ANR	275265	IfStatement	"if ( ( rv = apprentice_map ( ms , & magic , & nmagic , fn ) ) == - 1 )"		275109	10					
ANR	275266	Condition	"( rv = apprentice_map ( ms , & magic , & nmagic , fn ) ) == - 1"	213:5:7314:7366	275109	0	True				
ANR	275267	EqualityExpression	"( rv = apprentice_map ( ms , & magic , & nmagic , fn ) ) == - 1"		275109	0		==			
ANR	275268	AssignmentExpression	"rv = apprentice_map ( ms , & magic , & nmagic , fn )"		275109	0		=			
ANR	275269	Identifier	rv		275109	0					
ANR	275270	CallExpression	"apprentice_map ( ms , & magic , & nmagic , fn )"		275109	1					
ANR	275271	Callee	apprentice_map		275109	0					
ANR	275272	Identifier	apprentice_map		275109	0					
ANR	275273	ArgumentList	ms		275109	1					
ANR	275274	Argument	ms		275109	0					
ANR	275275	Identifier	ms		275109	0					
ANR	275276	Argument	& magic		275109	1					
ANR	275277	UnaryOperationExpression	& magic		275109	0					
ANR	275278	UnaryOperator	&		275109	0					
ANR	275279	Identifier	magic		275109	1					
ANR	275280	Argument	& nmagic		275109	2					
ANR	275281	UnaryOperationExpression	& nmagic		275109	0					
ANR	275282	UnaryOperator	&		275109	0					
ANR	275283	Identifier	nmagic		275109	1					
ANR	275284	Argument	fn		275109	3					
ANR	275285	Identifier	fn		275109	0					
ANR	275286	UnaryOperationExpression	- 1		275109	1					
ANR	275287	UnaryOperator	-		275109	0					
ANR	275288	PrimaryExpression	1		275109	1					
ANR	275289	CompoundStatement		30:60:666:666	275109	1					
ANR	275290	ExpressionStatement	"rv = apprentice_load ( ms , & magic , & nmagic , fn , action )"	216:2:7468:7522	275109	0	True				
ANR	275291	AssignmentExpression	"rv = apprentice_load ( ms , & magic , & nmagic , fn , action )"		275109	0		=			
ANR	275292	Identifier	rv		275109	0					
ANR	275293	CallExpression	"apprentice_load ( ms , & magic , & nmagic , fn , action )"		275109	1					
ANR	275294	Callee	apprentice_load		275109	0					
ANR	275295	Identifier	apprentice_load		275109	0					
ANR	275296	ArgumentList	ms		275109	1					
ANR	275297	Argument	ms		275109	0					
ANR	275298	Identifier	ms		275109	0					
ANR	275299	Argument	& magic		275109	1					
ANR	275300	UnaryOperationExpression	& magic		275109	0					
ANR	275301	UnaryOperator	&		275109	0					
ANR	275302	Identifier	magic		275109	1					
ANR	275303	Argument	& nmagic		275109	2					
ANR	275304	UnaryOperationExpression	& nmagic		275109	0					
ANR	275305	UnaryOperator	&		275109	0					
ANR	275306	Identifier	nmagic		275109	1					
ANR	275307	Argument	fn		275109	3					
ANR	275308	Identifier	fn		275109	0					
ANR	275309	Argument	action		275109	4					
ANR	275310	Identifier	action		275109	0					
ANR	275311	IfStatement	if ( rv != 0 )		275109	1					
ANR	275312	Condition	rv != 0	217:6:7530:7536	275109	0	True				
ANR	275313	EqualityExpression	rv != 0		275109	0		!=			
ANR	275314	Identifier	rv		275109	0					
ANR	275315	PrimaryExpression	0		275109	1					
ANR	275316	CompoundStatement		34:15:836:836	275109	1					
ANR	275317	ReturnStatement	return - 1 ;	218:3:7544:7553	275109	0	True				
ANR	275318	UnaryOperationExpression	- 1		275109	0					
ANR	275319	UnaryOperator	-		275109	0					
ANR	275320	PrimaryExpression	1		275109	1					
ANR	275321	ExpressionStatement	mapped = rv	222:1:7564:7575	275109	11	True				
ANR	275322	AssignmentExpression	mapped = rv		275109	0		=			
ANR	275323	Identifier	mapped		275109	0					
ANR	275324	Identifier	rv		275109	1					
ANR	275325	IfStatement	if ( ! magic )		275109	12					
ANR	275326	Condition	! magic	224:5:7583:7588	275109	0	True				
ANR	275327	UnaryOperationExpression	! magic		275109	0					
ANR	275328	UnaryOperator	!		275109	0					
ANR	275329	Identifier	magic		275109	1					
ANR	275330	CompoundStatement		41:13:888:888	275109	1					
ANR	275331	ExpressionStatement	"file_delmagic ( magic , mapped , nmagic )"	225:2:7595:7632	275109	0	True				
ANR	275332	CallExpression	"file_delmagic ( magic , mapped , nmagic )"		275109	0					
ANR	275333	Callee	file_delmagic		275109	0					
ANR	275334	Identifier	file_delmagic		275109	0					
ANR	275335	ArgumentList	magic		275109	1					
ANR	275336	Argument	magic		275109	0					
ANR	275337	Identifier	magic		275109	0					
ANR	275338	Argument	mapped		275109	1					
ANR	275339	Identifier	mapped		275109	0					
ANR	275340	Argument	nmagic		275109	2					
ANR	275341	Identifier	nmagic		275109	0					
ANR	275342	ReturnStatement	return - 1 ;	226:2:7636:7645	275109	1	True				
ANR	275343	UnaryOperationExpression	- 1		275109	0					
ANR	275344	UnaryOperator	-		275109	0					
ANR	275345	PrimaryExpression	1		275109	1					
ANR	275346	IfStatement	if ( ! ( ml = malloc ( sizeof ( * ml ) ) ) )		275109	13					
ANR	275347	Condition	! ( ml = malloc ( sizeof ( * ml ) ) )	229:5:7656:7684	275109	0	True				
ANR	275348	UnaryOperationExpression	! ( ml = malloc ( sizeof ( * ml ) ) )		275109	0					
ANR	275349	UnaryOperator	!		275109	0					
ANR	275350	AssignmentExpression	ml = malloc ( sizeof ( * ml ) )		275109	1		=			
ANR	275351	Identifier	ml		275109	0					
ANR	275352	CallExpression	malloc ( sizeof ( * ml ) )		275109	1					
ANR	275353	Callee	malloc		275109	0					
ANR	275354	Identifier	malloc		275109	0					
ANR	275355	ArgumentList	sizeof ( * ml )		275109	1					
ANR	275356	Argument	sizeof ( * ml )		275109	0					
ANR	275357	SizeofExpression	sizeof ( * ml )		275109	0					
ANR	275358	Sizeof	sizeof		275109	0					
ANR	275359	UnaryOperationExpression	* ml		275109	1					
ANR	275360	UnaryOperator	*		275109	0					
ANR	275361	Identifier	ml		275109	1					
ANR	275362	CompoundStatement		46:36:984:984	275109	1					
ANR	275363	ExpressionStatement	"file_delmagic ( magic , mapped , nmagic )"	230:2:7691:7728	275109	0	True				
ANR	275364	CallExpression	"file_delmagic ( magic , mapped , nmagic )"		275109	0					
ANR	275365	Callee	file_delmagic		275109	0					
ANR	275366	Identifier	file_delmagic		275109	0					
ANR	275367	ArgumentList	magic		275109	1					
ANR	275368	Argument	magic		275109	0					
ANR	275369	Identifier	magic		275109	0					
ANR	275370	Argument	mapped		275109	1					
ANR	275371	Identifier	mapped		275109	0					
ANR	275372	Argument	nmagic		275109	2					
ANR	275373	Identifier	nmagic		275109	0					
ANR	275374	ExpressionStatement	"file_oomem ( ms , sizeof ( * ml ) )"	231:2:7732:7761	275109	1	True				
ANR	275375	CallExpression	"file_oomem ( ms , sizeof ( * ml ) )"		275109	0					
ANR	275376	Callee	file_oomem		275109	0					
ANR	275377	Identifier	file_oomem		275109	0					
ANR	275378	ArgumentList	ms		275109	1					
ANR	275379	Argument	ms		275109	0					
ANR	275380	Identifier	ms		275109	0					
ANR	275381	Argument	sizeof ( * ml )		275109	1					
ANR	275382	SizeofExpression	sizeof ( * ml )		275109	0					
ANR	275383	Sizeof	sizeof		275109	0					
ANR	275384	UnaryOperationExpression	* ml		275109	1					
ANR	275385	UnaryOperator	*		275109	0					
ANR	275386	Identifier	ml		275109	1					
ANR	275387	ReturnStatement	return - 1 ;	232:2:7765:7774	275109	2	True				
ANR	275388	UnaryOperationExpression	- 1		275109	0					
ANR	275389	UnaryOperator	-		275109	0					
ANR	275390	PrimaryExpression	1		275109	1					
ANR	275391	ExpressionStatement	ml -> magic = magic	235:1:7781:7798	275109	14	True				
ANR	275392	AssignmentExpression	ml -> magic = magic		275109	0		=			
ANR	275393	PtrMemberAccess	ml -> magic		275109	0					
ANR	275394	Identifier	ml		275109	0					
ANR	275395	Identifier	magic		275109	1					
ANR	275396	Identifier	magic		275109	1					
ANR	275397	ExpressionStatement	ml -> nmagic = nmagic	236:1:7801:7820	275109	15	True				
ANR	275398	AssignmentExpression	ml -> nmagic = nmagic		275109	0		=			
ANR	275399	PtrMemberAccess	ml -> nmagic		275109	0					
ANR	275400	Identifier	ml		275109	0					
ANR	275401	Identifier	nmagic		275109	1					
ANR	275402	Identifier	nmagic		275109	1					
ANR	275403	ExpressionStatement	ml -> mapped = mapped	237:1:7823:7842	275109	16	True				
ANR	275404	AssignmentExpression	ml -> mapped = mapped		275109	0		=			
ANR	275405	PtrMemberAccess	ml -> mapped		275109	0					
ANR	275406	Identifier	ml		275109	0					
ANR	275407	Identifier	mapped		275109	1					
ANR	275408	Identifier	mapped		275109	1					
ANR	275409	ExpressionStatement	mlist -> prev -> next = ml	239:1:7846:7868	275109	17	True				
ANR	275410	AssignmentExpression	mlist -> prev -> next = ml		275109	0		=			
ANR	275411	PtrMemberAccess	mlist -> prev -> next		275109	0					
ANR	275412	PtrMemberAccess	mlist -> prev		275109	0					
ANR	275413	Identifier	mlist		275109	0					
ANR	275414	Identifier	prev		275109	1					
ANR	275415	Identifier	next		275109	1					
ANR	275416	Identifier	ml		275109	1					
ANR	275417	ExpressionStatement	ml -> prev = mlist -> prev	240:1:7871:7893	275109	18	True				
ANR	275418	AssignmentExpression	ml -> prev = mlist -> prev		275109	0		=			
ANR	275419	PtrMemberAccess	ml -> prev		275109	0					
ANR	275420	Identifier	ml		275109	0					
ANR	275421	Identifier	prev		275109	1					
ANR	275422	PtrMemberAccess	mlist -> prev		275109	1					
ANR	275423	Identifier	mlist		275109	0					
ANR	275424	Identifier	prev		275109	1					
ANR	275425	ExpressionStatement	ml -> next = mlist	241:1:7896:7912	275109	19	True				
ANR	275426	AssignmentExpression	ml -> next = mlist		275109	0		=			
ANR	275427	PtrMemberAccess	ml -> next		275109	0					
ANR	275428	Identifier	ml		275109	0					
ANR	275429	Identifier	next		275109	1					
ANR	275430	Identifier	mlist		275109	1					
ANR	275431	ExpressionStatement	mlist -> prev = ml	242:1:7915:7931	275109	20	True				
ANR	275432	AssignmentExpression	mlist -> prev = ml		275109	0		=			
ANR	275433	PtrMemberAccess	mlist -> prev		275109	0					
ANR	275434	Identifier	mlist		275109	0					
ANR	275435	Identifier	prev		275109	1					
ANR	275436	Identifier	ml		275109	1					
ANR	275437	ReturnStatement	return 0 ;	243:1:7934:7942	275109	21	True				
ANR	275438	PrimaryExpression	0		275109	0					
ANR	275439	ReturnType	static int		275109	1					
ANR	275440	Identifier	apprentice_1		275109	2					
ANR	275441	ParameterList	"RMagic * ms , const char * fn , int action , struct mlist * mlist"		275109	3					
ANR	275442	Parameter	RMagic * ms	184:24:6641:6650	275109	0	True				
ANR	275443	ParameterType	RMagic *		275109	0					
ANR	275444	Identifier	ms		275109	1					
ANR	275445	Parameter	const char * fn	184:36:6653:6666	275109	1	True				
ANR	275446	ParameterType	const char *		275109	0					
ANR	275447	Identifier	fn		275109	1					
ANR	275448	Parameter	int action	184:52:6669:6678	275109	2	True				
ANR	275449	ParameterType	int		275109	0					
ANR	275450	Identifier	action		275109	1					
ANR	275451	Parameter	struct mlist * mlist	184:64:6681:6699	275109	3	True				
ANR	275452	ParameterType	struct mlist *		275109	0					
ANR	275453	Identifier	mlist		275109	1					
ANR	275454	CFGEntryNode	ENTRY		275109		True				
ANR	275455	CFGExitNode	EXIT		275109		True				
ANR	275456	Symbol	magic		275109						
ANR	275457	Symbol	magicsize		275109						
ANR	275458	Symbol	rv		275109						
ANR	275459	Symbol	ml -> next		275109						
ANR	275460	Symbol	& magic		275109						
ANR	275461	Symbol	* ml		275109						
ANR	275462	Symbol	* mlist		275109						
ANR	275463	Symbol	mlist -> prev		275109						
ANR	275464	Symbol	ml -> prev		275109						
ANR	275465	Symbol	fn		275109						
ANR	275466	Symbol	ml -> nmagic		275109						
ANR	275467	Symbol	* ms		275109						
ANR	275468	Symbol	* mlist -> prev		275109						
ANR	275469	Symbol	ml -> magic		275109						
ANR	275470	Symbol	action		275109						
ANR	275471	Symbol	FILE_COMPILE		275109						
ANR	275472	Symbol	nmagic		275109						
ANR	275473	Symbol	ml		275109						
ANR	275474	Symbol	malloc		275109						
ANR	275475	Symbol	FILE_MAGICSIZE		275109						
ANR	275476	Symbol	NULL		275109						
ANR	275477	Symbol	apprentice_load		275109						
ANR	275478	Symbol	ms		275109						
ANR	275479	Symbol	mlist -> prev -> next		275109						
ANR	275480	Symbol	ms -> haderr		275109						
ANR	275481	Symbol	* * mlist		275109						
ANR	275482	Symbol	& nmagic		275109						
ANR	275483	Symbol	apprentice_compile		275109						
ANR	275484	Symbol	ms -> file		275109						
ANR	275485	Symbol	ml -> mapped		275109						
ANR	275486	Symbol	mapped		275109						
ANR	275487	Symbol	mlist		275109						
ANR	275488	Symbol	* magic		275109						
ANR	275489	Symbol	apprentice_map		275109						
ANR	275490	Function	file_delmagic	246:0:7947:8237							
ANR	275491	FunctionDef	"file_delmagic (struct r_magic * p , int type , size_t entries)"		275490	0					
ANR	275492	CompoundStatement		246:64:8011:8237	275490	0					
ANR	275493	IfStatement	if ( p )		275490	0					
ANR	275494	Condition	p	247:5:8018:8018	275490	0	True				
ANR	275495	Identifier	p		275490	0					
ANR	275496	CompoundStatement		2:8:9:9	275490	1					
ANR	275497	SwitchStatement	switch ( type )		275490	0					
ANR	275498	Condition	type	248:10:8033:8036	275490	0	True				
ANR	275499	Identifier	type		275490	0					
ANR	275500	CompoundStatement		3:16:27:27	275490	1					
ANR	275501	Label	case 2 :	250:1:8055:8061	275490	0	True				
ANR	275502	ExpressionStatement	p --	251:2:8065:8068	275490	1	True				
ANR	275503	PostIncDecOperationExpression	p --		275490	0					
ANR	275504	Identifier	p		275490	0					
ANR	275505	IncDec	--		275490	1					
ANR	275506	ExpressionStatement	"( void ) munmap ( ( void * ) p , sizeof ( * p ) * ( entries + 1 ) )"	252:2:8072:8125	275490	2	True				
ANR	275507	CastExpression	"( void ) munmap ( ( void * ) p , sizeof ( * p ) * ( entries + 1 ) )"		275490	0					
ANR	275508	CastTarget	void		275490	0					
ANR	275509	CallExpression	"munmap ( ( void * ) p , sizeof ( * p ) * ( entries + 1 ) )"		275490	1					
ANR	275510	Callee	munmap		275490	0					
ANR	275511	Identifier	munmap		275490	0					
ANR	275512	ArgumentList	( void * ) p		275490	1					
ANR	275513	Argument	( void * ) p		275490	0					
ANR	275514	CastExpression	( void * ) p		275490	0					
ANR	275515	CastTarget	void *		275490	0					
ANR	275516	Identifier	p		275490	1					
ANR	275517	Argument	sizeof ( * p ) * ( entries + 1 )		275490	1					
ANR	275518	MultiplicativeExpression	sizeof ( * p ) * ( entries + 1 )		275490	0		*			
ANR	275519	SizeofExpression	sizeof ( * p )		275490	0					
ANR	275520	Sizeof	sizeof		275490	0					
ANR	275521	UnaryOperationExpression	* p		275490	1					
ANR	275522	UnaryOperator	*		275490	0					
ANR	275523	Identifier	p		275490	1					
ANR	275524	AdditiveExpression	entries + 1		275490	1		+			
ANR	275525	Identifier	entries		275490	0					
ANR	275526	PrimaryExpression	1		275490	1					
ANR	275527	BreakStatement	break ;	253:2:8129:8134	275490	3	True				
ANR	275528	Label	case 1 :	255:1:8144:8150	275490	4	True				
ANR	275529	ExpressionStatement	p --	256:2:8154:8157	275490	5	True				
ANR	275530	PostIncDecOperationExpression	p --		275490	0					
ANR	275531	Identifier	p		275490	0					
ANR	275532	IncDec	--		275490	1					
ANR	275533	Label	case 0 :	258:1:8178:8184	275490	6	True				
ANR	275534	ExpressionStatement	R_FREE ( p )	259:2:8188:8198	275490	7	True				
ANR	275535	CallExpression	R_FREE ( p )		275490	0					
ANR	275536	Callee	R_FREE		275490	0					
ANR	275537	Identifier	R_FREE		275490	0					
ANR	275538	ArgumentList	p		275490	1					
ANR	275539	Argument	p		275490	0					
ANR	275540	Identifier	p		275490	0					
ANR	275541	BreakStatement	break ;	260:2:8202:8207	275490	8	True				
ANR	275542	Label	default :	261:1:8210:8217	275490	9	True				
ANR	275543	Identifier	default		275490	0					
ANR	275544	ExpressionStatement	abort ( )	262:2:8221:8229	275490	10	True				
ANR	275545	CallExpression	abort ( )		275490	0					
ANR	275546	Callee	abort		275490	0					
ANR	275547	Identifier	abort		275490	0					
ANR	275548	ArgumentList			275490	1					
ANR	275549	ReturnType	void		275490	1					
ANR	275550	Identifier	file_delmagic		275490	2					
ANR	275551	ParameterList	"struct r_magic * p , int type , size_t entries"		275490	3					
ANR	275552	Parameter	struct r_magic * p	246:19:7966:7982	275490	0	True				
ANR	275553	ParameterType	struct r_magic *		275490	0					
ANR	275554	Identifier	p		275490	1					
ANR	275555	Parameter	int type	246:38:7985:7992	275490	1	True				
ANR	275556	ParameterType	int		275490	0					
ANR	275557	Identifier	type		275490	1					
ANR	275558	Parameter	size_t entries	246:48:7995:8008	275490	2	True				
ANR	275559	ParameterType	size_t		275490	0					
ANR	275560	Identifier	entries		275490	1					
ANR	275561	CFGEntryNode	ENTRY		275490		True				
ANR	275562	CFGExitNode	EXIT		275490		True				
ANR	275563	Symbol	p		275490						
ANR	275564	Symbol	entries		275490						
ANR	275565	Symbol	* p		275490						
ANR	275566	Symbol	type		275490						
ANR	275567	Function	file_apprentice	268:0:8298:9132							
ANR	275568	FunctionDef	"file_apprentice (RMagic * ms , const char * fn , int action)"		275567	0					
ANR	275569	CompoundStatement		268:71:8369:9132	275567	0					
ANR	275570	IdentifierDeclStatement	"char * p , * mfn ;"	269:1:8372:8385	275567	0	True				
ANR	275571	IdentifierDecl	* p		275567	0					
ANR	275572	IdentifierDeclType	char *		275567	0					
ANR	275573	Identifier	p		275567	1					
ANR	275574	IdentifierDecl	* mfn		275567	1					
ANR	275575	IdentifierDeclType	char *		275567	0					
ANR	275576	Identifier	mfn		275567	1					
ANR	275577	IdentifierDeclStatement	"int file_err , errs = - 1 ;"	270:1:8388:8411	275567	1	True				
ANR	275578	IdentifierDecl	file_err		275567	0					
ANR	275579	IdentifierDeclType	int		275567	0					
ANR	275580	Identifier	file_err		275567	1					
ANR	275581	IdentifierDecl	errs = - 1		275567	1					
ANR	275582	IdentifierDeclType	int		275567	0					
ANR	275583	Identifier	errs		275567	1					
ANR	275584	AssignmentExpression	errs = - 1		275567	2		=			
ANR	275585	Identifier	errs		275567	0					
ANR	275586	UnaryOperationExpression	- 1		275567	1					
ANR	275587	UnaryOperator	-		275567	0					
ANR	275588	PrimaryExpression	1		275567	1					
ANR	275589	IdentifierDeclStatement	struct mlist * mlist ;	271:1:8414:8433	275567	2	True				
ANR	275590	IdentifierDecl	* mlist		275567	0					
ANR	275591	IdentifierDeclType	struct mlist *		275567	0					
ANR	275592	Identifier	mlist		275567	1					
ANR	275593	ExpressionStatement	init_file_tables ( )	273:1:8437:8456	275567	3	True				
ANR	275594	CallExpression	init_file_tables ( )		275567	0					
ANR	275595	Callee	init_file_tables		275567	0					
ANR	275596	Identifier	init_file_tables		275567	0					
ANR	275597	ArgumentList			275567	1					
ANR	275598	IfStatement	if ( ! fn )		275567	4					
ANR	275599	Condition	! fn	275:5:8464:8466	275567	0	True				
ANR	275600	UnaryOperationExpression	! fn		275567	0					
ANR	275601	UnaryOperator	!		275567	0					
ANR	275602	Identifier	fn		275567	1					
ANR	275603	CompoundStatement		8:10:99:99	275567	1					
ANR	275604	ExpressionStatement	"fn = getenv ( ""MAGIC"" )"	276:2:8473:8494	275567	0	True				
ANR	275605	AssignmentExpression	"fn = getenv ( ""MAGIC"" )"		275567	0		=			
ANR	275606	Identifier	fn		275567	0					
ANR	275607	CallExpression	"getenv ( ""MAGIC"" )"		275567	1					
ANR	275608	Callee	getenv		275567	0					
ANR	275609	Identifier	getenv		275567	0					
ANR	275610	ArgumentList	"""MAGIC"""		275567	1					
ANR	275611	Argument	"""MAGIC"""		275567	0					
ANR	275612	PrimaryExpression	"""MAGIC"""		275567	0					
ANR	275613	IfStatement	if ( ! fn )		275567	5					
ANR	275614	Condition	! fn	278:5:8504:8506	275567	0	True				
ANR	275615	UnaryOperationExpression	! fn		275567	0					
ANR	275616	UnaryOperator	!		275567	0					
ANR	275617	Identifier	fn		275567	1					
ANR	275618	CompoundStatement		11:10:139:139	275567	1					
ANR	275619	ExpressionStatement	fn = MAGICFILE	279:2:8513:8527	275567	0	True				
ANR	275620	AssignmentExpression	fn = MAGICFILE		275567	0		=			
ANR	275621	Identifier	fn		275567	0					
ANR	275622	Identifier	MAGICFILE		275567	1					
ANR	275623	IfStatement	if ( ! ( mfn = strdup ( fn ) ) )		275567	6					
ANR	275624	Condition	! ( mfn = strdup ( fn ) )	282:5:8538:8557	275567	0	True				
ANR	275625	UnaryOperationExpression	! ( mfn = strdup ( fn ) )		275567	0					
ANR	275626	UnaryOperator	!		275567	0					
ANR	275627	AssignmentExpression	mfn = strdup ( fn )		275567	1		=			
ANR	275628	Identifier	mfn		275567	0					
ANR	275629	CallExpression	strdup ( fn )		275567	1					
ANR	275630	Callee	strdup		275567	0					
ANR	275631	Identifier	strdup		275567	0					
ANR	275632	ArgumentList	fn		275567	1					
ANR	275633	Argument	fn		275567	0					
ANR	275634	Identifier	fn		275567	0					
ANR	275635	CompoundStatement		15:27:190:190	275567	1					
ANR	275636	ExpressionStatement	"file_oomem ( ms , strlen ( fn ) )"	283:2:8564:8592	275567	0	True				
ANR	275637	CallExpression	"file_oomem ( ms , strlen ( fn ) )"		275567	0					
ANR	275638	Callee	file_oomem		275567	0					
ANR	275639	Identifier	file_oomem		275567	0					
ANR	275640	ArgumentList	ms		275567	1					
ANR	275641	Argument	ms		275567	0					
ANR	275642	Identifier	ms		275567	0					
ANR	275643	Argument	strlen ( fn )		275567	1					
ANR	275644	CallExpression	strlen ( fn )		275567	0					
ANR	275645	Callee	strlen		275567	0					
ANR	275646	Identifier	strlen		275567	0					
ANR	275647	ArgumentList	fn		275567	1					
ANR	275648	Argument	fn		275567	0					
ANR	275649	Identifier	fn		275567	0					
ANR	275650	ReturnStatement	return NULL ;	284:2:8596:8607	275567	1	True				
ANR	275651	Identifier	NULL		275567	0					
ANR	275652	ExpressionStatement	fn = mfn	286:1:8613:8621	275567	7	True				
ANR	275653	AssignmentExpression	fn = mfn		275567	0		=			
ANR	275654	Identifier	fn		275567	0					
ANR	275655	Identifier	mfn		275567	1					
ANR	275656	IfStatement	if ( ! ( mlist = malloc ( sizeof ( * mlist ) ) ) )		275567	8					
ANR	275657	Condition	! ( mlist = malloc ( sizeof ( * mlist ) ) )	288:5:8629:8663	275567	0	True				
ANR	275658	UnaryOperationExpression	! ( mlist = malloc ( sizeof ( * mlist ) ) )		275567	0					
ANR	275659	UnaryOperator	!		275567	0					
ANR	275660	AssignmentExpression	mlist = malloc ( sizeof ( * mlist ) )		275567	1		=			
ANR	275661	Identifier	mlist		275567	0					
ANR	275662	CallExpression	malloc ( sizeof ( * mlist ) )		275567	1					
ANR	275663	Callee	malloc		275567	0					
ANR	275664	Identifier	malloc		275567	0					
ANR	275665	ArgumentList	sizeof ( * mlist )		275567	1					
ANR	275666	Argument	sizeof ( * mlist )		275567	0					
ANR	275667	SizeofExpression	sizeof ( * mlist )		275567	0					
ANR	275668	Sizeof	sizeof		275567	0					
ANR	275669	UnaryOperationExpression	* mlist		275567	1					
ANR	275670	UnaryOperator	*		275567	0					
ANR	275671	Identifier	mlist		275567	1					
ANR	275672	CompoundStatement		21:42:296:296	275567	1					
ANR	275673	ExpressionStatement	free ( mfn )	289:2:8670:8680	275567	0	True				
ANR	275674	CallExpression	free ( mfn )		275567	0					
ANR	275675	Callee	free		275567	0					
ANR	275676	Identifier	free		275567	0					
ANR	275677	ArgumentList	mfn		275567	1					
ANR	275678	Argument	mfn		275567	0					
ANR	275679	Identifier	mfn		275567	0					
ANR	275680	ExpressionStatement	"file_oomem ( ms , sizeof ( * mlist ) )"	290:2:8684:8716	275567	1	True				
ANR	275681	CallExpression	"file_oomem ( ms , sizeof ( * mlist ) )"		275567	0					
ANR	275682	Callee	file_oomem		275567	0					
ANR	275683	Identifier	file_oomem		275567	0					
ANR	275684	ArgumentList	ms		275567	1					
ANR	275685	Argument	ms		275567	0					
ANR	275686	Identifier	ms		275567	0					
ANR	275687	Argument	sizeof ( * mlist )		275567	1					
ANR	275688	SizeofExpression	sizeof ( * mlist )		275567	0					
ANR	275689	Sizeof	sizeof		275567	0					
ANR	275690	UnaryOperationExpression	* mlist		275567	1					
ANR	275691	UnaryOperator	*		275567	0					
ANR	275692	Identifier	mlist		275567	1					
ANR	275693	ReturnStatement	return NULL ;	291:2:8720:8731	275567	2	True				
ANR	275694	Identifier	NULL		275567	0					
ANR	275695	ExpressionStatement	mlist -> next = mlist -> prev = mlist	293:1:8737:8770	275567	9	True				
ANR	275696	AssignmentExpression	mlist -> next = mlist -> prev = mlist		275567	0		=			
ANR	275697	PtrMemberAccess	mlist -> next		275567	0					
ANR	275698	Identifier	mlist		275567	0					
ANR	275699	Identifier	next		275567	1					
ANR	275700	AssignmentExpression	mlist -> prev = mlist		275567	1		=			
ANR	275701	PtrMemberAccess	mlist -> prev		275567	0					
ANR	275702	Identifier	mlist		275567	0					
ANR	275703	Identifier	prev		275567	1					
ANR	275704	Identifier	mlist		275567	1					
ANR	275705	WhileStatement	while ( fn )		275567	10					
ANR	275706	Condition	fn	295:8:8781:8782	275567	0	True				
ANR	275707	Identifier	fn		275567	0					
ANR	275708	CompoundStatement		28:12:415:415	275567	1					
ANR	275709	ExpressionStatement	"p = strchr ( fn , PATHSEP )"	296:2:8789:8813	275567	0	True				
ANR	275710	AssignmentExpression	"p = strchr ( fn , PATHSEP )"		275567	0		=			
ANR	275711	Identifier	p		275567	0					
ANR	275712	CallExpression	"strchr ( fn , PATHSEP )"		275567	1					
ANR	275713	Callee	strchr		275567	0					
ANR	275714	Identifier	strchr		275567	0					
ANR	275715	ArgumentList	fn		275567	1					
ANR	275716	Argument	fn		275567	0					
ANR	275717	Identifier	fn		275567	0					
ANR	275718	Argument	PATHSEP		275567	1					
ANR	275719	Identifier	PATHSEP		275567	0					
ANR	275720	IfStatement	if ( p )		275567	1					
ANR	275721	Condition	p	297:6:8821:8821	275567	0	True				
ANR	275722	Identifier	p		275567	0					
ANR	275723	CompoundStatement		30:9:454:454	275567	1					
ANR	275724	ExpressionStatement	* p ++ = '\\0'	298:3:8829:8840	275567	0	True				
ANR	275725	AssignmentExpression	* p ++ = '\\0'		275567	0		=			
ANR	275726	UnaryOperationExpression	* p ++		275567	0					
ANR	275727	UnaryOperator	*		275567	0					
ANR	275728	PostIncDecOperationExpression	p ++		275567	1					
ANR	275729	Identifier	p		275567	0					
ANR	275730	IncDec	++		275567	1					
ANR	275731	PrimaryExpression	'\\0'		275567	1					
ANR	275732	IfStatement	if ( * fn == '\\0' )		275567	2					
ANR	275733	Condition	* fn == '\\0'	300:6:8852:8862	275567	0	True				
ANR	275734	EqualityExpression	* fn == '\\0'		275567	0		==			
ANR	275735	UnaryOperationExpression	* fn		275567	0					
ANR	275736	UnaryOperator	*		275567	0					
ANR	275737	Identifier	fn		275567	1					
ANR	275738	PrimaryExpression	'\\0'		275567	1					
ANR	275739	CompoundStatement		33:19:495:495	275567	1					
ANR	275740	BreakStatement	break ;	301:3:8870:8875	275567	0	True				
ANR	275741	ExpressionStatement	"file_err = apprentice_1 ( ms , fn , action , mlist )"	303:2:8883:8930	275567	3	True				
ANR	275742	AssignmentExpression	"file_err = apprentice_1 ( ms , fn , action , mlist )"		275567	0		=			
ANR	275743	Identifier	file_err		275567	0					
ANR	275744	CallExpression	"apprentice_1 ( ms , fn , action , mlist )"		275567	1					
ANR	275745	Callee	apprentice_1		275567	0					
ANR	275746	Identifier	apprentice_1		275567	0					
ANR	275747	ArgumentList	ms		275567	1					
ANR	275748	Argument	ms		275567	0					
ANR	275749	Identifier	ms		275567	0					
ANR	275750	Argument	fn		275567	1					
ANR	275751	Identifier	fn		275567	0					
ANR	275752	Argument	action		275567	2					
ANR	275753	Identifier	action		275567	0					
ANR	275754	Argument	mlist		275567	3					
ANR	275755	Identifier	mlist		275567	0					
ANR	275756	ExpressionStatement	"errs = R_MAX ( errs , file_err )"	304:2:8934:8963	275567	4	True				
ANR	275757	AssignmentExpression	"errs = R_MAX ( errs , file_err )"		275567	0		=			
ANR	275758	Identifier	errs		275567	0					
ANR	275759	CallExpression	"R_MAX ( errs , file_err )"		275567	1					
ANR	275760	Callee	R_MAX		275567	0					
ANR	275761	Identifier	R_MAX		275567	0					
ANR	275762	ArgumentList	errs		275567	1					
ANR	275763	Argument	errs		275567	0					
ANR	275764	Identifier	errs		275567	0					
ANR	275765	Argument	file_err		275567	1					
ANR	275766	Identifier	file_err		275567	0					
ANR	275767	ExpressionStatement	fn = p	305:2:8967:8973	275567	5	True				
ANR	275768	AssignmentExpression	fn = p		275567	0		=			
ANR	275769	Identifier	fn		275567	0					
ANR	275770	Identifier	p		275567	1					
ANR	275771	IfStatement	if ( errs == - 1 )		275567	11					
ANR	275772	Condition	errs == - 1	307:5:8983:8992	275567	0	True				
ANR	275773	EqualityExpression	errs == - 1		275567	0		==			
ANR	275774	Identifier	errs		275567	0					
ANR	275775	UnaryOperationExpression	- 1		275567	1					
ANR	275776	UnaryOperator	-		275567	0					
ANR	275777	PrimaryExpression	1		275567	1					
ANR	275778	CompoundStatement		40:17:625:625	275567	1					
ANR	275779	ExpressionStatement	free ( mfn )	308:2:8999:9009	275567	0	True				
ANR	275780	CallExpression	free ( mfn )		275567	0					
ANR	275781	Callee	free		275567	0					
ANR	275782	Identifier	free		275567	0					
ANR	275783	ArgumentList	mfn		275567	1					
ANR	275784	Argument	mfn		275567	0					
ANR	275785	Identifier	mfn		275567	0					
ANR	275786	ExpressionStatement	R_FREE ( mlist )	309:2:9013:9027	275567	1	True				
ANR	275787	CallExpression	R_FREE ( mlist )		275567	0					
ANR	275788	Callee	R_FREE		275567	0					
ANR	275789	Identifier	R_FREE		275567	0					
ANR	275790	ArgumentList	mlist		275567	1					
ANR	275791	Argument	mlist		275567	0					
ANR	275792	Identifier	mlist		275567	0					
ANR	275793	ExpressionStatement	"file_error ( ms , 0 , ""could not find any magic files!"" )"	310:2:9031:9084	275567	2	True				
ANR	275794	CallExpression	"file_error ( ms , 0 , ""could not find any magic files!"" )"		275567	0					
ANR	275795	Callee	file_error		275567	0					
ANR	275796	Identifier	file_error		275567	0					
ANR	275797	ArgumentList	ms		275567	1					
ANR	275798	Argument	ms		275567	0					
ANR	275799	Identifier	ms		275567	0					
ANR	275800	Argument	0		275567	1					
ANR	275801	PrimaryExpression	0		275567	0					
ANR	275802	Argument	"""could not find any magic files!"""		275567	2					
ANR	275803	PrimaryExpression	"""could not find any magic files!"""		275567	0					
ANR	275804	ReturnStatement	return NULL ;	311:2:9088:9099	275567	3	True				
ANR	275805	Identifier	NULL		275567	0					
ANR	275806	ExpressionStatement	free ( mfn )	313:1:9105:9115	275567	12	True				
ANR	275807	CallExpression	free ( mfn )		275567	0					
ANR	275808	Callee	free		275567	0					
ANR	275809	Identifier	free		275567	0					
ANR	275810	ArgumentList	mfn		275567	1					
ANR	275811	Argument	mfn		275567	0					
ANR	275812	Identifier	mfn		275567	0					
ANR	275813	ReturnStatement	return mlist ;	314:1:9118:9130	275567	13	True				
ANR	275814	Identifier	mlist		275567	0					
ANR	275815	ReturnType	struct mlist *		275567	1					
ANR	275816	Identifier	file_apprentice		275567	2					
ANR	275817	ParameterList	"RMagic * ms , const char * fn , int action"		275567	3					
ANR	275818	Parameter	RMagic * ms	268:31:8329:8338	275567	0	True				
ANR	275819	ParameterType	RMagic *		275567	0					
ANR	275820	Identifier	ms		275567	1					
ANR	275821	Parameter	const char * fn	268:43:8341:8354	275567	1	True				
ANR	275822	ParameterType	const char *		275567	0					
ANR	275823	Identifier	fn		275567	1					
ANR	275824	Parameter	int action	268:59:8357:8366	275567	2	True				
ANR	275825	ParameterType	int		275567	0					
ANR	275826	Identifier	action		275567	1					
ANR	275827	CFGEntryNode	ENTRY		275567		True				
ANR	275828	CFGExitNode	EXIT		275567		True				
ANR	275829	Symbol	errs		275567						
ANR	275830	Symbol	malloc		275567						
ANR	275831	Symbol	NULL		275567						
ANR	275832	Symbol	mlist -> next		275567						
ANR	275833	Symbol	ms		275567						
ANR	275834	Symbol	* mlist		275567						
ANR	275835	Symbol	mlist -> prev		275567						
ANR	275836	Symbol	PATHSEP		275567						
ANR	275837	Symbol	apprentice_1		275567						
ANR	275838	Symbol	* p ++		275567						
ANR	275839	Symbol	fn		275567						
ANR	275840	Symbol	strchr		275567						
ANR	275841	Symbol	* fn		275567						
ANR	275842	Symbol	file_err		275567						
ANR	275843	Symbol	p		275567						
ANR	275844	Symbol	strlen		275567						
ANR	275845	Symbol	mfn		275567						
ANR	275846	Symbol	MAGICFILE		275567						
ANR	275847	Symbol	R_MAX		275567						
ANR	275848	Symbol	action		275567						
ANR	275849	Symbol	mlist		275567						
ANR	275850	Symbol	strdup		275567						
ANR	275851	Symbol	getenv		275567						
ANR	275852	Function	apprentice_r_magic_strength	320:0:9199:10984							
ANR	275853	FunctionDef	apprentice_r_magic_strength (const struct r_magic * m)		275852	0					
ANR	275854	CompoundStatement		320:67:9266:10984	275852	0					
ANR	275855	Statement	define	321:1:9269:9274	275852	0	True				
ANR	275856	Statement	MULT	321:8:9276:9279	275852	1	True				
ANR	275857	Statement	10	321:13:9281:9282	275852	2	True				
ANR	275858	IdentifierDeclStatement	size_t val = 2 * MULT ;	322:1:9285:9306	275852	3	True				
ANR	275859	IdentifierDecl	val = 2 * MULT		275852	0					
ANR	275860	IdentifierDeclType	size_t		275852	0					
ANR	275861	Identifier	val		275852	1					
ANR	275862	AssignmentExpression	val = 2 * MULT		275852	2		=			
ANR	275863	Identifier	val		275852	0					
ANR	275864	MultiplicativeExpression	2 * MULT		275852	1		*			
ANR	275865	PrimaryExpression	2		275852	0					
ANR	275866	Identifier	MULT		275852	1					
ANR	275867	SwitchStatement	switch ( m -> type )		275852	4					
ANR	275868	Condition	m -> type	324:9:9342:9348	275852	0	True				
ANR	275869	PtrMemberAccess	m -> type		275852	0					
ANR	275870	Identifier	m		275852	0					
ANR	275871	Identifier	type		275852	1					
ANR	275872	CompoundStatement		5:18:84:84	275852	1					
ANR	275873	Label	case FILE_DEFAULT :	325:1:9354:9371	275852	0	True				
ANR	275874	Identifier	FILE_DEFAULT		275852	0					
ANR	275875	ReturnStatement	return 0 ;	326:2:9407:9415	275852	1	True				
ANR	275876	PrimaryExpression	0		275852	0					
ANR	275877	Label	case FILE_BYTE :	327:1:9418:9432	275852	2	True				
ANR	275878	Identifier	FILE_BYTE		275852	0					
ANR	275879	ExpressionStatement	val += 1 * MULT	328:2:9436:9451	275852	3	True				
ANR	275880	AssignmentExpression	val += 1 * MULT		275852	0		+=			
ANR	275881	Identifier	val		275852	0					
ANR	275882	MultiplicativeExpression	1 * MULT		275852	1		*			
ANR	275883	PrimaryExpression	1		275852	0					
ANR	275884	Identifier	MULT		275852	1					
ANR	275885	BreakStatement	break ;	329:2:9455:9460	275852	4	True				
ANR	275886	Label	case FILE_SHORT :	330:1:9463:9478	275852	5	True				
ANR	275887	Identifier	FILE_SHORT		275852	0					
ANR	275888	Label	case FILE_LESHORT :	331:1:9481:9498	275852	6	True				
ANR	275889	Identifier	FILE_LESHORT		275852	0					
ANR	275890	Label	case FILE_BESHORT :	332:1:9501:9518	275852	7	True				
ANR	275891	Identifier	FILE_BESHORT		275852	0					
ANR	275892	ExpressionStatement	val += 2 * MULT	333:2:9522:9537	275852	8	True				
ANR	275893	AssignmentExpression	val += 2 * MULT		275852	0		+=			
ANR	275894	Identifier	val		275852	0					
ANR	275895	MultiplicativeExpression	2 * MULT		275852	1		*			
ANR	275896	PrimaryExpression	2		275852	0					
ANR	275897	Identifier	MULT		275852	1					
ANR	275898	BreakStatement	break ;	334:2:9541:9546	275852	9	True				
ANR	275899	Label	case FILE_LONG :	335:1:9549:9563	275852	10	True				
ANR	275900	Identifier	FILE_LONG		275852	0					
ANR	275901	Label	case FILE_LELONG :	336:1:9566:9582	275852	11	True				
ANR	275902	Identifier	FILE_LELONG		275852	0					
ANR	275903	Label	case FILE_BELONG :	337:1:9585:9601	275852	12	True				
ANR	275904	Identifier	FILE_BELONG		275852	0					
ANR	275905	Label	case FILE_MELONG :	338:1:9604:9620	275852	13	True				
ANR	275906	Identifier	FILE_MELONG		275852	0					
ANR	275907	ExpressionStatement	val += 4 * MULT	339:2:9624:9639	275852	14	True				
ANR	275908	AssignmentExpression	val += 4 * MULT		275852	0		+=			
ANR	275909	Identifier	val		275852	0					
ANR	275910	MultiplicativeExpression	4 * MULT		275852	1		*			
ANR	275911	PrimaryExpression	4		275852	0					
ANR	275912	Identifier	MULT		275852	1					
ANR	275913	BreakStatement	break ;	340:2:9643:9648	275852	15	True				
ANR	275914	Label	case FILE_PSTRING :	341:1:9651:9668	275852	16	True				
ANR	275915	Identifier	FILE_PSTRING		275852	0					
ANR	275916	Label	case FILE_STRING :	342:1:9671:9687	275852	17	True				
ANR	275917	Identifier	FILE_STRING		275852	0					
ANR	275918	ExpressionStatement	val += m -> vallen * MULT	343:2:9691:9714	275852	18	True				
ANR	275919	AssignmentExpression	val += m -> vallen * MULT		275852	0		+=			
ANR	275920	Identifier	val		275852	0					
ANR	275921	MultiplicativeExpression	m -> vallen * MULT		275852	1		*			
ANR	275922	PtrMemberAccess	m -> vallen		275852	0					
ANR	275923	Identifier	m		275852	0					
ANR	275924	Identifier	vallen		275852	1					
ANR	275925	Identifier	MULT		275852	1					
ANR	275926	BreakStatement	break ;	344:2:9718:9723	275852	19	True				
ANR	275927	Label	case FILE_BESTRING16 :	345:1:9726:9746	275852	20	True				
ANR	275928	Identifier	FILE_BESTRING16		275852	0					
ANR	275929	Label	case FILE_LESTRING16 :	346:1:9749:9769	275852	21	True				
ANR	275930	Identifier	FILE_LESTRING16		275852	0					
ANR	275931	ExpressionStatement	val += m -> vallen * MULT / 2	347:2:9773:9800	275852	22	True				
ANR	275932	AssignmentExpression	val += m -> vallen * MULT / 2		275852	0		+=			
ANR	275933	Identifier	val		275852	0					
ANR	275934	MultiplicativeExpression	m -> vallen * MULT / 2		275852	1		*			
ANR	275935	PtrMemberAccess	m -> vallen		275852	0					
ANR	275936	Identifier	m		275852	0					
ANR	275937	Identifier	vallen		275852	1					
ANR	275938	MultiplicativeExpression	MULT / 2		275852	1		/			
ANR	275939	Identifier	MULT		275852	0					
ANR	275940	PrimaryExpression	2		275852	1					
ANR	275941	BreakStatement	break ;	348:2:9804:9809	275852	23	True				
ANR	275942	Label	case FILE_SEARCH :	349:1:9812:9828	275852	24	True				
ANR	275943	Identifier	FILE_SEARCH		275852	0					
ANR	275944	Label	case FILE_REGEX :	350:1:9831:9846	275852	25	True				
ANR	275945	Identifier	FILE_REGEX		275852	0					
ANR	275946	ExpressionStatement	"val += m -> vallen * R_MAX ( MULT / m -> vallen , 1 )"	351:2:9850:9896	275852	26	True				
ANR	275947	AssignmentExpression	"val += m -> vallen * R_MAX ( MULT / m -> vallen , 1 )"		275852	0		+=			
ANR	275948	Identifier	val		275852	0					
ANR	275949	MultiplicativeExpression	"m -> vallen * R_MAX ( MULT / m -> vallen , 1 )"		275852	1		*			
ANR	275950	PtrMemberAccess	m -> vallen		275852	0					
ANR	275951	Identifier	m		275852	0					
ANR	275952	Identifier	vallen		275852	1					
ANR	275953	CallExpression	"R_MAX ( MULT / m -> vallen , 1 )"		275852	1					
ANR	275954	Callee	R_MAX		275852	0					
ANR	275955	Identifier	R_MAX		275852	0					
ANR	275956	ArgumentList	MULT / m -> vallen		275852	1					
ANR	275957	Argument	MULT / m -> vallen		275852	0					
ANR	275958	MultiplicativeExpression	MULT / m -> vallen		275852	0		/			
ANR	275959	Identifier	MULT		275852	0					
ANR	275960	PtrMemberAccess	m -> vallen		275852	1					
ANR	275961	Identifier	m		275852	0					
ANR	275962	Identifier	vallen		275852	1					
ANR	275963	Argument	1		275852	1					
ANR	275964	PrimaryExpression	1		275852	0					
ANR	275965	BreakStatement	break ;	352:2:9900:9905	275852	27	True				
ANR	275966	Label	case FILE_DATE :	353:1:9908:9922	275852	28	True				
ANR	275967	Identifier	FILE_DATE		275852	0					
ANR	275968	Label	case FILE_LEDATE :	354:1:9925:9941	275852	29	True				
ANR	275969	Identifier	FILE_LEDATE		275852	0					
ANR	275970	Label	case FILE_BEDATE :	355:1:9944:9960	275852	30	True				
ANR	275971	Identifier	FILE_BEDATE		275852	0					
ANR	275972	Label	case FILE_MEDATE :	356:1:9963:9979	275852	31	True				
ANR	275973	Identifier	FILE_MEDATE		275852	0					
ANR	275974	Label	case FILE_LDATE :	357:1:9982:9997	275852	32	True				
ANR	275975	Identifier	FILE_LDATE		275852	0					
ANR	275976	Label	case FILE_LELDATE :	358:1:10000:10017	275852	33	True				
ANR	275977	Identifier	FILE_LELDATE		275852	0					
ANR	275978	Label	case FILE_BELDATE :	359:1:10020:10037	275852	34	True				
ANR	275979	Identifier	FILE_BELDATE		275852	0					
ANR	275980	Label	case FILE_MELDATE :	360:1:10040:10057	275852	35	True				
ANR	275981	Identifier	FILE_MELDATE		275852	0					
ANR	275982	Label	case FILE_FLOAT :	361:1:10060:10075	275852	36	True				
ANR	275983	Identifier	FILE_FLOAT		275852	0					
ANR	275984	Label	case FILE_BEFLOAT :	362:1:10078:10095	275852	37	True				
ANR	275985	Identifier	FILE_BEFLOAT		275852	0					
ANR	275986	Label	case FILE_LEFLOAT :	363:1:10098:10115	275852	38	True				
ANR	275987	Identifier	FILE_LEFLOAT		275852	0					
ANR	275988	ExpressionStatement	val += 4 * MULT	364:2:10119:10134	275852	39	True				
ANR	275989	AssignmentExpression	val += 4 * MULT		275852	0		+=			
ANR	275990	Identifier	val		275852	0					
ANR	275991	MultiplicativeExpression	4 * MULT		275852	1		*			
ANR	275992	PrimaryExpression	4		275852	0					
ANR	275993	Identifier	MULT		275852	1					
ANR	275994	BreakStatement	break ;	365:2:10138:10143	275852	40	True				
ANR	275995	Label	case FILE_QUAD :	366:1:10146:10160	275852	41	True				
ANR	275996	Identifier	FILE_QUAD		275852	0					
ANR	275997	Label	case FILE_BEQUAD :	367:1:10163:10179	275852	42	True				
ANR	275998	Identifier	FILE_BEQUAD		275852	0					
ANR	275999	Label	case FILE_LEQUAD :	368:1:10182:10198	275852	43	True				
ANR	276000	Identifier	FILE_LEQUAD		275852	0					
ANR	276001	Label	case FILE_QDATE :	369:1:10201:10216	275852	44	True				
ANR	276002	Identifier	FILE_QDATE		275852	0					
ANR	276003	Label	case FILE_LEQDATE :	370:1:10219:10236	275852	45	True				
ANR	276004	Identifier	FILE_LEQDATE		275852	0					
ANR	276005	Label	case FILE_BEQDATE :	371:1:10239:10256	275852	46	True				
ANR	276006	Identifier	FILE_BEQDATE		275852	0					
ANR	276007	Label	case FILE_QLDATE :	372:1:10259:10275	275852	47	True				
ANR	276008	Identifier	FILE_QLDATE		275852	0					
ANR	276009	Label	case FILE_LEQLDATE :	373:1:10278:10296	275852	48	True				
ANR	276010	Identifier	FILE_LEQLDATE		275852	0					
ANR	276011	Label	case FILE_BEQLDATE :	374:1:10299:10317	275852	49	True				
ANR	276012	Identifier	FILE_BEQLDATE		275852	0					
ANR	276013	Label	case FILE_DOUBLE :	375:1:10320:10336	275852	50	True				
ANR	276014	Identifier	FILE_DOUBLE		275852	0					
ANR	276015	Label	case FILE_BEDOUBLE :	376:1:10339:10357	275852	51	True				
ANR	276016	Identifier	FILE_BEDOUBLE		275852	0					
ANR	276017	Label	case FILE_LEDOUBLE :	377:1:10360:10378	275852	52	True				
ANR	276018	Identifier	FILE_LEDOUBLE		275852	0					
ANR	276019	ExpressionStatement	val += 8 * MULT	378:2:10382:10397	275852	53	True				
ANR	276020	AssignmentExpression	val += 8 * MULT		275852	0		+=			
ANR	276021	Identifier	val		275852	0					
ANR	276022	MultiplicativeExpression	8 * MULT		275852	1		*			
ANR	276023	PrimaryExpression	8		275852	0					
ANR	276024	Identifier	MULT		275852	1					
ANR	276025	BreakStatement	break ;	379:2:10401:10406	275852	54	True				
ANR	276026	Label	default :	380:1:10409:10416	275852	55	True				
ANR	276027	Identifier	default		275852	0					
ANR	276028	ExpressionStatement	"eprintf ( ""Bad type %d\\n"" , m -> type )"	381:2:10420:10454	275852	56	True				
ANR	276029	CallExpression	"eprintf ( ""Bad type %d\\n"" , m -> type )"		275852	0					
ANR	276030	Callee	eprintf		275852	0					
ANR	276031	Identifier	eprintf		275852	0					
ANR	276032	ArgumentList	"""Bad type %d\\n"""		275852	1					
ANR	276033	Argument	"""Bad type %d\\n"""		275852	0					
ANR	276034	PrimaryExpression	"""Bad type %d\\n"""		275852	0					
ANR	276035	Argument	m -> type		275852	1					
ANR	276036	PtrMemberAccess	m -> type		275852	0					
ANR	276037	Identifier	m		275852	0					
ANR	276038	Identifier	type		275852	1					
ANR	276039	ExpressionStatement	abort ( )	382:2:10458:10465	275852	57	True				
ANR	276040	CallExpression	abort ( )		275852	0					
ANR	276041	Callee	abort		275852	0					
ANR	276042	Identifier	abort		275852	0					
ANR	276043	ArgumentList			275852	1					
ANR	276044	SwitchStatement	switch ( m -> reln )		275852	5					
ANR	276045	Condition	m -> reln	385:9:10480:10486	275852	0	True				
ANR	276046	PtrMemberAccess	m -> reln		275852	0					
ANR	276047	Identifier	m		275852	0					
ANR	276048	Identifier	reln		275852	1					
ANR	276049	CompoundStatement		66:18:1222:1222	275852	1					
ANR	276050	Label	case 'x' :	386:1:10492:10500	275852	0	True				
ANR	276051	Label	case '!' :	387:1:10535:10543	275852	1	True				
ANR	276052	ExpressionStatement	val = 0	388:2:10592:10599	275852	2	True				
ANR	276053	AssignmentExpression	val = 0		275852	0		=			
ANR	276054	Identifier	val		275852	0					
ANR	276055	PrimaryExpression	0		275852	1					
ANR	276056	BreakStatement	break ;	389:2:10603:10608	275852	3	True				
ANR	276057	Label	case '=' :	390:1:10611:10619	275852	4	True				
ANR	276058	ExpressionStatement	val += MULT	391:2:10649:10660	275852	5	True				
ANR	276059	AssignmentExpression	val += MULT		275852	0		+=			
ANR	276060	Identifier	val		275852	0					
ANR	276061	Identifier	MULT		275852	1					
ANR	276062	BreakStatement	break ;	392:2:10664:10669	275852	6	True				
ANR	276063	Label	case '>' :	393:1:10672:10680	275852	7	True				
ANR	276064	Label	case '<' :	394:1:10683:10691	275852	8	True				
ANR	276065	ExpressionStatement	val -= 2 * MULT	395:2:10734:10749	275852	9	True				
ANR	276066	AssignmentExpression	val -= 2 * MULT		275852	0		-=			
ANR	276067	Identifier	val		275852	0					
ANR	276068	MultiplicativeExpression	2 * MULT		275852	1		*			
ANR	276069	PrimaryExpression	2		275852	0					
ANR	276070	Identifier	MULT		275852	1					
ANR	276071	BreakStatement	break ;	396:2:10753:10758	275852	10	True				
ANR	276072	Label	case '^' :	397:1:10761:10769	275852	11	True				
ANR	276073	Label	case '&' :	398:1:10772:10780	275852	12	True				
ANR	276074	ExpressionStatement	val -= MULT	399:2:10828:10839	275852	13	True				
ANR	276075	AssignmentExpression	val -= MULT		275852	0		-=			
ANR	276076	Identifier	val		275852	0					
ANR	276077	Identifier	MULT		275852	1					
ANR	276078	BreakStatement	break ;	400:2:10843:10848	275852	14	True				
ANR	276079	Label	default :	401:1:10851:10858	275852	15	True				
ANR	276080	Identifier	default		275852	0					
ANR	276081	ExpressionStatement	"eprintf ( ""Bad relation %c\\n"" , m -> reln )"	402:2:10862:10900	275852	16	True				
ANR	276082	CallExpression	"eprintf ( ""Bad relation %c\\n"" , m -> reln )"		275852	0					
ANR	276083	Callee	eprintf		275852	0					
ANR	276084	Identifier	eprintf		275852	0					
ANR	276085	ArgumentList	"""Bad relation %c\\n"""		275852	1					
ANR	276086	Argument	"""Bad relation %c\\n"""		275852	0					
ANR	276087	PrimaryExpression	"""Bad relation %c\\n"""		275852	0					
ANR	276088	Argument	m -> reln		275852	1					
ANR	276089	PtrMemberAccess	m -> reln		275852	0					
ANR	276090	Identifier	m		275852	0					
ANR	276091	Identifier	reln		275852	1					
ANR	276092	ExpressionStatement	abort ( )	403:2:10904:10911	275852	17	True				
ANR	276093	CallExpression	abort ( )		275852	0					
ANR	276094	Callee	abort		275852	0					
ANR	276095	Identifier	abort		275852	0					
ANR	276096	ArgumentList			275852	1					
ANR	276097	ReturnStatement	return val ? val : 1 ;	405:1:10917:10935	275852	6	True				
ANR	276098	ConditionalExpression	val ? val : 1		275852	0					
ANR	276099	Condition	val		275852	0					
ANR	276100	Identifier	val		275852	0					
ANR	276101	Identifier	val		275852	1					
ANR	276102	PrimaryExpression	1		275852	2					
ANR	276103	ReturnType	static size_t		275852	1					
ANR	276104	Identifier	apprentice_r_magic_strength		275852	2					
ANR	276105	ParameterList	const struct r_magic * m		275852	3					
ANR	276106	Parameter	const struct r_magic * m	320:42:9241:9263	275852	0	True				
ANR	276107	ParameterType	const struct r_magic *		275852	0					
ANR	276108	Identifier	m		275852	1					
ANR	276109	CFGEntryNode	ENTRY		275852		True				
ANR	276110	CFGExitNode	EXIT		275852		True				
ANR	276111	Symbol	val		275852						
ANR	276112	Symbol	m -> type		275852						
ANR	276113	Symbol	MULT		275852						
ANR	276114	Symbol	* m		275852						
ANR	276115	Symbol	m -> reln		275852						
ANR	276116	Symbol	R_MAX		275852						
ANR	276117	Symbol	m -> vallen		275852						
ANR	276118	Symbol	m		275852						
ANR	276119	Function	apprentice_sort	411:0:11064:11374							
ANR	276120	FunctionDef	"apprentice_sort (const void * a , const void * b)"		276119	0					
ANR	276121	CompoundStatement		411:57:11121:11374	276119	0					
ANR	276122	IdentifierDeclStatement	const struct r_magic_entry * ma = a ;	412:1:11124:11158	276119	0	True				
ANR	276123	IdentifierDecl	* ma = a		276119	0					
ANR	276124	IdentifierDeclType	const struct r_magic_entry *		276119	0					
ANR	276125	Identifier	ma		276119	1					
ANR	276126	AssignmentExpression	* ma = a		276119	2		=			
ANR	276127	Identifier	a		276119	0					
ANR	276128	Identifier	a		276119	1					
ANR	276129	IdentifierDeclStatement	const struct r_magic_entry * mb = b ;	413:1:11161:11195	276119	1	True				
ANR	276130	IdentifierDecl	* mb = b		276119	0					
ANR	276131	IdentifierDeclType	const struct r_magic_entry *		276119	0					
ANR	276132	Identifier	mb		276119	1					
ANR	276133	AssignmentExpression	* mb = b		276119	2		=			
ANR	276134	Identifier	b		276119	0					
ANR	276135	Identifier	b		276119	1					
ANR	276136	IdentifierDeclStatement	size_t sa = apprentice_r_magic_strength ( ma -> mp ) ;	414:1:11198:11246	276119	2	True				
ANR	276137	IdentifierDecl	sa = apprentice_r_magic_strength ( ma -> mp )		276119	0					
ANR	276138	IdentifierDeclType	size_t		276119	0					
ANR	276139	Identifier	sa		276119	1					
ANR	276140	AssignmentExpression	sa = apprentice_r_magic_strength ( ma -> mp )		276119	2		=			
ANR	276141	Identifier	sa		276119	0					
ANR	276142	CallExpression	apprentice_r_magic_strength ( ma -> mp )		276119	1					
ANR	276143	Callee	apprentice_r_magic_strength		276119	0					
ANR	276144	Identifier	apprentice_r_magic_strength		276119	0					
ANR	276145	ArgumentList	ma -> mp		276119	1					
ANR	276146	Argument	ma -> mp		276119	0					
ANR	276147	PtrMemberAccess	ma -> mp		276119	0					
ANR	276148	Identifier	ma		276119	0					
ANR	276149	Identifier	mp		276119	1					
ANR	276150	IdentifierDeclStatement	size_t sb = apprentice_r_magic_strength ( mb -> mp ) ;	415:1:11249:11297	276119	3	True				
ANR	276151	IdentifierDecl	sb = apprentice_r_magic_strength ( mb -> mp )		276119	0					
ANR	276152	IdentifierDeclType	size_t		276119	0					
ANR	276153	Identifier	sb		276119	1					
ANR	276154	AssignmentExpression	sb = apprentice_r_magic_strength ( mb -> mp )		276119	2		=			
ANR	276155	Identifier	sb		276119	0					
ANR	276156	CallExpression	apprentice_r_magic_strength ( mb -> mp )		276119	1					
ANR	276157	Callee	apprentice_r_magic_strength		276119	0					
ANR	276158	Identifier	apprentice_r_magic_strength		276119	0					
ANR	276159	ArgumentList	mb -> mp		276119	1					
ANR	276160	Argument	mb -> mp		276119	0					
ANR	276161	PtrMemberAccess	mb -> mp		276119	0					
ANR	276162	Identifier	mb		276119	0					
ANR	276163	Identifier	mp		276119	1					
ANR	276164	IfStatement	if ( sa == sb )		276119	4					
ANR	276165	Condition	sa == sb	416:5:11304:11311	276119	0	True				
ANR	276166	EqualityExpression	sa == sb		276119	0		==			
ANR	276167	Identifier	sa		276119	0					
ANR	276168	Identifier	sb		276119	1					
ANR	276169	CompoundStatement		6:15:192:192	276119	1					
ANR	276170	ReturnStatement	return 0 ;	417:2:11318:11326	276119	0	True				
ANR	276171	PrimaryExpression	0		276119	0					
ANR	276172	IfStatement	if ( sa > sb )		276119	5					
ANR	276173	Condition	sa > sb	419:5:11336:11342	276119	0	True				
ANR	276174	RelationalExpression	sa > sb		276119	0		>			
ANR	276175	Identifier	sa		276119	0					
ANR	276176	Identifier	sb		276119	1					
ANR	276177	CompoundStatement		9:14:223:223	276119	1					
ANR	276178	ReturnStatement	return - 1 ;	420:2:11349:11358	276119	0	True				
ANR	276179	UnaryOperationExpression	- 1		276119	0					
ANR	276180	UnaryOperator	-		276119	0					
ANR	276181	PrimaryExpression	1		276119	1					
ANR	276182	ReturnStatement	return 1 ;	422:1:11364:11372	276119	6	True				
ANR	276183	PrimaryExpression	1		276119	0					
ANR	276184	ReturnType	static int		276119	1					
ANR	276185	Identifier	apprentice_sort		276119	2					
ANR	276186	ParameterList	"const void * a , const void * b"		276119	3					
ANR	276187	Parameter	const void * a	411:27:11091:11103	276119	0	True				
ANR	276188	ParameterType	const void *		276119	0					
ANR	276189	Identifier	a		276119	1					
ANR	276190	Parameter	const void * b	411:42:11106:11118	276119	1	True				
ANR	276191	ParameterType	const void *		276119	0					
ANR	276192	Identifier	b		276119	1					
ANR	276193	CFGEntryNode	ENTRY		276119		True				
ANR	276194	CFGExitNode	EXIT		276119		True				
ANR	276195	Symbol	a		276119						
ANR	276196	Symbol	apprentice_r_magic_strength		276119						
ANR	276197	Symbol	b		276119						
ANR	276198	Symbol	mb -> mp		276119						
ANR	276199	Symbol	ma		276119						
ANR	276200	Symbol	mb		276119						
ANR	276201	Symbol	ma -> mp		276119						
ANR	276202	Symbol	* mb		276119						
ANR	276203	Symbol	* ma		276119						
ANR	276204	Symbol	sa		276119						
ANR	276205	Symbol	sb		276119						
ANR	276206	Function	set_test_type	425:0:11377:12624							
ANR	276207	FunctionDef	"set_test_type (struct r_magic * mstart , struct r_magic * m)"		276206	0					
ANR	276208	CompoundStatement		425:69:11446:12624	276206	0					
ANR	276209	SwitchStatement	switch ( m -> type )		276206	0					
ANR	276210	Condition	m -> type	426:9:11457:11463	276206	0	True				
ANR	276211	PtrMemberAccess	m -> type		276206	0					
ANR	276212	Identifier	m		276206	0					
ANR	276213	Identifier	type		276206	1					
ANR	276214	CompoundStatement		2:18:19:19	276206	1					
ANR	276215	Label	case FILE_BYTE :	427:1:11469:11483	276206	0	True				
ANR	276216	Identifier	FILE_BYTE		276206	0					
ANR	276217	Label	case FILE_SHORT :	428:1:11486:11501	276206	1	True				
ANR	276218	Identifier	FILE_SHORT		276206	0					
ANR	276219	Label	case FILE_LONG :	429:1:11504:11518	276206	2	True				
ANR	276220	Identifier	FILE_LONG		276206	0					
ANR	276221	Label	case FILE_DATE :	430:1:11521:11535	276206	3	True				
ANR	276222	Identifier	FILE_DATE		276206	0					
ANR	276223	Label	case FILE_BESHORT :	431:1:11538:11555	276206	4	True				
ANR	276224	Identifier	FILE_BESHORT		276206	0					
ANR	276225	Label	case FILE_BELONG :	432:1:11558:11574	276206	5	True				
ANR	276226	Identifier	FILE_BELONG		276206	0					
ANR	276227	Label	case FILE_BEDATE :	433:1:11577:11593	276206	6	True				
ANR	276228	Identifier	FILE_BEDATE		276206	0					
ANR	276229	Label	case FILE_LESHORT :	434:1:11596:11613	276206	7	True				
ANR	276230	Identifier	FILE_LESHORT		276206	0					
ANR	276231	Label	case FILE_LELONG :	435:1:11616:11632	276206	8	True				
ANR	276232	Identifier	FILE_LELONG		276206	0					
ANR	276233	Label	case FILE_LEDATE :	436:1:11635:11651	276206	9	True				
ANR	276234	Identifier	FILE_LEDATE		276206	0					
ANR	276235	Label	case FILE_LDATE :	437:1:11654:11669	276206	10	True				
ANR	276236	Identifier	FILE_LDATE		276206	0					
ANR	276237	Label	case FILE_BELDATE :	438:1:11672:11689	276206	11	True				
ANR	276238	Identifier	FILE_BELDATE		276206	0					
ANR	276239	Label	case FILE_LELDATE :	439:1:11692:11709	276206	12	True				
ANR	276240	Identifier	FILE_LELDATE		276206	0					
ANR	276241	Label	case FILE_MEDATE :	440:1:11712:11728	276206	13	True				
ANR	276242	Identifier	FILE_MEDATE		276206	0					
ANR	276243	Label	case FILE_MELDATE :	441:1:11731:11748	276206	14	True				
ANR	276244	Identifier	FILE_MELDATE		276206	0					
ANR	276245	Label	case FILE_MELONG :	442:1:11751:11767	276206	15	True				
ANR	276246	Identifier	FILE_MELONG		276206	0					
ANR	276247	Label	case FILE_QUAD :	443:1:11770:11784	276206	16	True				
ANR	276248	Identifier	FILE_QUAD		276206	0					
ANR	276249	Label	case FILE_LEQUAD :	444:1:11787:11803	276206	17	True				
ANR	276250	Identifier	FILE_LEQUAD		276206	0					
ANR	276251	Label	case FILE_BEQUAD :	445:1:11806:11822	276206	18	True				
ANR	276252	Identifier	FILE_BEQUAD		276206	0					
ANR	276253	Label	case FILE_QDATE :	446:1:11825:11840	276206	19	True				
ANR	276254	Identifier	FILE_QDATE		276206	0					
ANR	276255	Label	case FILE_LEQDATE :	447:1:11843:11860	276206	20	True				
ANR	276256	Identifier	FILE_LEQDATE		276206	0					
ANR	276257	Label	case FILE_BEQDATE :	448:1:11863:11880	276206	21	True				
ANR	276258	Identifier	FILE_BEQDATE		276206	0					
ANR	276259	Label	case FILE_QLDATE :	449:1:11883:11899	276206	22	True				
ANR	276260	Identifier	FILE_QLDATE		276206	0					
ANR	276261	Label	case FILE_LEQLDATE :	450:1:11902:11920	276206	23	True				
ANR	276262	Identifier	FILE_LEQLDATE		276206	0					
ANR	276263	Label	case FILE_BEQLDATE :	451:1:11923:11941	276206	24	True				
ANR	276264	Identifier	FILE_BEQLDATE		276206	0					
ANR	276265	Label	case FILE_FLOAT :	452:1:11944:11959	276206	25	True				
ANR	276266	Identifier	FILE_FLOAT		276206	0					
ANR	276267	Label	case FILE_BEFLOAT :	453:1:11962:11979	276206	26	True				
ANR	276268	Identifier	FILE_BEFLOAT		276206	0					
ANR	276269	Label	case FILE_LEFLOAT :	454:1:11982:11999	276206	27	True				
ANR	276270	Identifier	FILE_LEFLOAT		276206	0					
ANR	276271	Label	case FILE_DOUBLE :	455:1:12002:12018	276206	28	True				
ANR	276272	Identifier	FILE_DOUBLE		276206	0					
ANR	276273	Label	case FILE_BEDOUBLE :	456:1:12021:12039	276206	29	True				
ANR	276274	Identifier	FILE_BEDOUBLE		276206	0					
ANR	276275	Label	case FILE_LEDOUBLE :	457:1:12042:12060	276206	30	True				
ANR	276276	Identifier	FILE_LEDOUBLE		276206	0					
ANR	276277	Label	case FILE_STRING :	458:1:12063:12079	276206	31	True				
ANR	276278	Identifier	FILE_STRING		276206	0					
ANR	276279	Label	case FILE_PSTRING :	459:1:12082:12099	276206	32	True				
ANR	276280	Identifier	FILE_PSTRING		276206	0					
ANR	276281	Label	case FILE_BESTRING16 :	460:1:12102:12122	276206	33	True				
ANR	276282	Identifier	FILE_BESTRING16		276206	0					
ANR	276283	Label	case FILE_LESTRING16 :	461:1:12125:12145	276206	34	True				
ANR	276284	Identifier	FILE_LESTRING16		276206	0					
ANR	276285	ExpressionStatement	mstart -> flag |= BINTEST	463:2:12179:12202	276206	35	True				
ANR	276286	AssignmentExpression	mstart -> flag |= BINTEST		276206	0		|=			
ANR	276287	PtrMemberAccess	mstart -> flag		276206	0					
ANR	276288	Identifier	mstart		276206	0					
ANR	276289	Identifier	flag		276206	1					
ANR	276290	Identifier	BINTEST		276206	1					
ANR	276291	BreakStatement	break ;	464:2:12206:12211	276206	36	True				
ANR	276292	Label	case FILE_REGEX :	465:1:12214:12229	276206	37	True				
ANR	276293	Identifier	FILE_REGEX		276206	0					
ANR	276294	Label	case FILE_SEARCH :	466:1:12232:12248	276206	38	True				
ANR	276295	Identifier	FILE_SEARCH		276206	0					
ANR	276296	IfStatement	"if ( file_looks_utf8 ( ( const ut8 * ) m -> value . s , m -> vallen , NULL , NULL ) == 0 )"		276206	39					
ANR	276297	Condition	"file_looks_utf8 ( ( const ut8 * ) m -> value . s , m -> vallen , NULL , NULL ) == 0"	468:6:12299:12367	276206	0	True				
ANR	276298	EqualityExpression	"file_looks_utf8 ( ( const ut8 * ) m -> value . s , m -> vallen , NULL , NULL ) == 0"		276206	0		==			
ANR	276299	CallExpression	"file_looks_utf8 ( ( const ut8 * ) m -> value . s , m -> vallen , NULL , NULL )"		276206	0					
ANR	276300	Callee	file_looks_utf8		276206	0					
ANR	276301	Identifier	file_looks_utf8		276206	0					
ANR	276302	ArgumentList	( const ut8 * ) m -> value . s		276206	1					
ANR	276303	Argument	( const ut8 * ) m -> value . s		276206	0					
ANR	276304	CastExpression	( const ut8 * ) m -> value . s		276206	0					
ANR	276305	CastTarget	const ut8 *		276206	0					
ANR	276306	MemberAccess	m -> value . s		276206	1					
ANR	276307	PtrMemberAccess	m -> value		276206	0					
ANR	276308	Identifier	m		276206	0					
ANR	276309	Identifier	value		276206	1					
ANR	276310	Identifier	s		276206	1					
ANR	276311	Argument	m -> vallen		276206	1					
ANR	276312	PtrMemberAccess	m -> vallen		276206	0					
ANR	276313	Identifier	m		276206	0					
ANR	276314	Identifier	vallen		276206	1					
ANR	276315	Argument	NULL		276206	2					
ANR	276316	Identifier	NULL		276206	0					
ANR	276317	Argument	NULL		276206	3					
ANR	276318	Identifier	NULL		276206	0					
ANR	276319	PrimaryExpression	0		276206	1					
ANR	276320	CompoundStatement		44:77:923:923	276206	1					
ANR	276321	ExpressionStatement	mstart -> flag |= BINTEST	469:3:12375:12398	276206	0	True				
ANR	276322	AssignmentExpression	mstart -> flag |= BINTEST		276206	0		|=			
ANR	276323	PtrMemberAccess	mstart -> flag		276206	0					
ANR	276324	Identifier	mstart		276206	0					
ANR	276325	Identifier	flag		276206	1					
ANR	276326	Identifier	BINTEST		276206	1					
ANR	276327	BreakStatement	break ;	471:2:12406:12411	276206	40	True				
ANR	276328	Label	case FILE_DEFAULT :	472:1:12414:12431	276206	41	True				
ANR	276329	Identifier	FILE_DEFAULT		276206	0					
ANR	276330	BreakStatement	break ;	475:2:12517:12522	276206	42	True				
ANR	276331	Label	case FILE_INVALID :	476:1:12525:12542	276206	43	True				
ANR	276332	Identifier	FILE_INVALID		276206	0					
ANR	276333	Label	default :	477:1:12545:12552	276206	44	True				
ANR	276334	Identifier	default		276206	0					
ANR	276335	BreakStatement	break ;	479:2:12614:12619	276206	45	True				
ANR	276336	ReturnType	static void		276206	1					
ANR	276337	Identifier	set_test_type		276206	2					
ANR	276338	ParameterList	"struct r_magic * mstart , struct r_magic * m"		276206	3					
ANR	276339	Parameter	struct r_magic * mstart	425:26:11403:11424	276206	0	True				
ANR	276340	ParameterType	struct r_magic *		276206	0					
ANR	276341	Identifier	mstart		276206	1					
ANR	276342	Parameter	struct r_magic * m	425:50:11427:11443	276206	1	True				
ANR	276343	ParameterType	struct r_magic *		276206	0					
ANR	276344	Identifier	m		276206	1					
ANR	276345	CFGEntryNode	ENTRY		276206		True				
ANR	276346	CFGExitNode	EXIT		276206		True				
ANR	276347	Symbol	m -> type		276206						
ANR	276348	Symbol	NULL		276206						
ANR	276349	Symbol	m -> value		276206						
ANR	276350	Symbol	mstart -> flag		276206						
ANR	276351	Symbol	BINTEST		276206						
ANR	276352	Symbol	* m		276206						
ANR	276353	Symbol	* mstart		276206						
ANR	276354	Symbol	m -> value . s		276206						
ANR	276355	Symbol	m -> vallen		276206						
ANR	276356	Symbol	file_looks_utf8		276206						
ANR	276357	Symbol	m		276206						
ANR	276358	Symbol	mstart		276206						
ANR	276359	Function	load_1	486:0:12662:13800							
ANR	276360	FunctionDef	"load_1 (RMagic * ms , int action , const char * file , int * errs , struct r_magic_entry * * marray , ut32 * marraycount)"		276359	0					
ANR	276361	CompoundStatement		486:122:12784:13800	276359	0					
ANR	276362	IdentifierDeclStatement	char line [ BUFSIZ ] ;	487:1:12787:12804	276359	0	True				
ANR	276363	IdentifierDecl	line [ BUFSIZ ]		276359	0					
ANR	276364	IdentifierDeclType	char [ BUFSIZ ]		276359	0					
ANR	276365	Identifier	line		276359	1					
ANR	276366	Identifier	BUFSIZ		276359	2					
ANR	276367	IdentifierDeclStatement	size_t lineno = 0 ;	488:1:12807:12824	276359	1	True				
ANR	276368	IdentifierDecl	lineno = 0		276359	0					
ANR	276369	IdentifierDeclType	size_t		276359	0					
ANR	276370	Identifier	lineno		276359	1					
ANR	276371	AssignmentExpression	lineno = 0		276359	2		=			
ANR	276372	Identifier	lineno		276359	0					
ANR	276373	PrimaryExpression	0		276359	1					
ANR	276374	IdentifierDeclStatement	"FILE * f = r_sandbox_fopen ( ms -> file = file , ""r"" ) ;"	489:1:12827:12875	276359	2	True				
ANR	276375	IdentifierDecl	"* f = r_sandbox_fopen ( ms -> file = file , ""r"" )"		276359	0					
ANR	276376	IdentifierDeclType	FILE *		276359	0					
ANR	276377	Identifier	f		276359	1					
ANR	276378	AssignmentExpression	"* f = r_sandbox_fopen ( ms -> file = file , ""r"" )"		276359	2		=			
ANR	276379	Identifier	f		276359	0					
ANR	276380	CallExpression	"r_sandbox_fopen ( ms -> file = file , ""r"" )"		276359	1					
ANR	276381	Callee	r_sandbox_fopen		276359	0					
ANR	276382	Identifier	r_sandbox_fopen		276359	0					
ANR	276383	ArgumentList	ms -> file = file		276359	1					
ANR	276384	Argument	ms -> file = file		276359	0					
ANR	276385	AssignmentExpression	ms -> file = file		276359	0		=			
ANR	276386	PtrMemberAccess	ms -> file		276359	0					
ANR	276387	Identifier	ms		276359	0					
ANR	276388	Identifier	file		276359	1					
ANR	276389	Identifier	file		276359	1					
ANR	276390	Argument	"""r"""		276359	1					
ANR	276391	PrimaryExpression	"""r"""		276359	0					
ANR	276392	IfStatement	if ( ! f )		276359	3					
ANR	276393	Condition	! f	490:5:12882:12883	276359	0	True				
ANR	276394	UnaryOperationExpression	! f		276359	0					
ANR	276395	UnaryOperator	!		276359	0					
ANR	276396	Identifier	f		276359	1					
ANR	276397	CompoundStatement		5:9:101:101	276359	1					
ANR	276398	IfStatement	if ( errno != ENOENT )		276359	0					
ANR	276399	Condition	errno != ENOENT	491:6:12894:12908	276359	0	True				
ANR	276400	EqualityExpression	errno != ENOENT		276359	0		!=			
ANR	276401	Identifier	errno		276359	0					
ANR	276402	Identifier	ENOENT		276359	1					
ANR	276403	CompoundStatement		6:23:126:126	276359	1					
ANR	276404	ExpressionStatement	"file_error ( ms , errno , ""cannot read magic file `%s'"" , file )"	492:3:12916:12975	276359	0	True				
ANR	276405	CallExpression	"file_error ( ms , errno , ""cannot read magic file `%s'"" , file )"		276359	0					
ANR	276406	Callee	file_error		276359	0					
ANR	276407	Identifier	file_error		276359	0					
ANR	276408	ArgumentList	ms		276359	1					
ANR	276409	Argument	ms		276359	0					
ANR	276410	Identifier	ms		276359	0					
ANR	276411	Argument	errno		276359	1					
ANR	276412	Identifier	errno		276359	0					
ANR	276413	Argument	"""cannot read magic file `%s'"""		276359	2					
ANR	276414	PrimaryExpression	"""cannot read magic file `%s'"""		276359	0					
ANR	276415	Argument	file		276359	3					
ANR	276416	Identifier	file		276359	0					
ANR	276417	ExpressionStatement	( * errs ) ++	494:2:12983:12992	276359	1	True				
ANR	276418	PostIncDecOperationExpression	( * errs ) ++		276359	0					
ANR	276419	UnaryOperationExpression	* errs		276359	0					
ANR	276420	UnaryOperator	*		276359	0					
ANR	276421	Identifier	errs		276359	1					
ANR	276422	IncDec	++		276359	1					
ANR	276423	ElseStatement	else		276359	0					
ANR	276424	CompoundStatement		10:8:217:217	276359	0					
ANR	276425	ForStatement	"for ( ms -> line = 1 ; fgets ( line , sizeof ( line ) , f ) != NULL ; ms -> line ++ )"		276359	0					
ANR	276426	ForInit	ms -> line = 1 ;	497:7:13044:13056	276359	0	True				
ANR	276427	AssignmentExpression	ms -> line = 1		276359	0		=			
ANR	276428	PtrMemberAccess	ms -> line		276359	0					
ANR	276429	Identifier	ms		276359	0					
ANR	276430	Identifier	line		276359	1					
ANR	276431	PrimaryExpression	1		276359	1					
ANR	276432	Condition	"fgets ( line , sizeof ( line ) , f ) != NULL"	497:21:13058:13095	276359	1	True				
ANR	276433	EqualityExpression	"fgets ( line , sizeof ( line ) , f ) != NULL"		276359	0		!=			
ANR	276434	CallExpression	"fgets ( line , sizeof ( line ) , f )"		276359	0					
ANR	276435	Callee	fgets		276359	0					
ANR	276436	Identifier	fgets		276359	0					
ANR	276437	ArgumentList	line		276359	1					
ANR	276438	Argument	line		276359	0					
ANR	276439	Identifier	line		276359	0					
ANR	276440	Argument	sizeof ( line )		276359	1					
ANR	276441	SizeofExpression	sizeof ( line )		276359	0					
ANR	276442	Sizeof	sizeof		276359	0					
ANR	276443	SizeofOperand	line		276359	1					
ANR	276444	Argument	f		276359	2					
ANR	276445	Identifier	f		276359	0					
ANR	276446	Identifier	NULL		276359	1					
ANR	276447	PostIncDecOperationExpression	ms -> line ++	497:61:13098:13107	276359	2	True				
ANR	276448	PtrMemberAccess	ms -> line		276359	0					
ANR	276449	Identifier	ms		276359	0					
ANR	276450	Identifier	line		276359	1					
ANR	276451	IncDec	++		276359	1					
ANR	276452	CompoundStatement		13:3:330:356	276359	3					
ANR	276453	IdentifierDeclStatement	size_t len = strlen ( line ) ;	498:3:13115:13141	276359	0	True				
ANR	276454	IdentifierDecl	len = strlen ( line )		276359	0					
ANR	276455	IdentifierDeclType	size_t		276359	0					
ANR	276456	Identifier	len		276359	1					
ANR	276457	AssignmentExpression	len = strlen ( line )		276359	2		=			
ANR	276458	Identifier	len		276359	0					
ANR	276459	CallExpression	strlen ( line )		276359	1					
ANR	276460	Callee	strlen		276359	0					
ANR	276461	Identifier	strlen		276359	0					
ANR	276462	ArgumentList	line		276359	1					
ANR	276463	Argument	line		276359	0					
ANR	276464	Identifier	line		276359	0					
ANR	276465	IfStatement	if ( len == 0 )		276359	1					
ANR	276466	Condition	len == 0	499:7:13150:13157	276359	0	True				
ANR	276467	EqualityExpression	len == 0		276359	0		==			
ANR	276468	Identifier	len		276359	0					
ANR	276469	PrimaryExpression	0		276359	1					
ANR	276470	CompoundStatement		14:17:375:375	276359	1					
ANR	276471	ContinueStatement	continue ;	500:4:13196:13204	276359	0	True				
ANR	276472	IfStatement	if ( line [ len - 1 ] == '\\n' )		276359	2					
ANR	276473	Condition	line [ len - 1 ] == '\\n'	502:7:13218:13238	276359	0	True				
ANR	276474	EqualityExpression	line [ len - 1 ] == '\\n'		276359	0		==			
ANR	276475	ArrayIndexing	line [ len - 1 ]		276359	0					
ANR	276476	Identifier	line		276359	0					
ANR	276477	AdditiveExpression	len - 1		276359	1		-			
ANR	276478	Identifier	len		276359	0					
ANR	276479	PrimaryExpression	1		276359	1					
ANR	276480	PrimaryExpression	'\\n'		276359	1					
ANR	276481	CompoundStatement		17:30:456:456	276359	1					
ANR	276482	ExpressionStatement	lineno ++	503:4:13247:13255	276359	0	True				
ANR	276483	PostIncDecOperationExpression	lineno ++		276359	0					
ANR	276484	Identifier	lineno		276359	0					
ANR	276485	IncDec	++		276359	1					
ANR	276486	ExpressionStatement	line [ len - 1 ] = '\\0'	504:4:13261:13281	276359	1	True				
ANR	276487	AssignmentExpression	line [ len - 1 ] = '\\0'		276359	0		=			
ANR	276488	ArrayIndexing	line [ len - 1 ]		276359	0					
ANR	276489	Identifier	line		276359	0					
ANR	276490	AdditiveExpression	len - 1		276359	1		-			
ANR	276491	Identifier	len		276359	0					
ANR	276492	PrimaryExpression	1		276359	1					
ANR	276493	PrimaryExpression	'\\0'		276359	1					
ANR	276494	IfStatement	if ( line [ 0 ] == '\\0' )		276359	3					
ANR	276495	Condition	line [ 0 ] == '\\0'	506:7:13316:13330	276359	0	True				
ANR	276496	EqualityExpression	line [ 0 ] == '\\0'		276359	0		==			
ANR	276497	ArrayIndexing	line [ 0 ]		276359	0					
ANR	276498	Identifier	line		276359	0					
ANR	276499	PrimaryExpression	0		276359	1					
ANR	276500	PrimaryExpression	'\\0'		276359	1					
ANR	276501	CompoundStatement		21:24:548:548	276359	1					
ANR	276502	ContinueStatement	continue ;	507:4:13365:13373	276359	0	True				
ANR	276503	IfStatement	if ( line [ 0 ] == '#' )		276359	4					
ANR	276504	Condition	line [ 0 ] == '#'	509:7:13387:13400	276359	0	True				
ANR	276505	EqualityExpression	line [ 0 ] == '#'		276359	0		==			
ANR	276506	ArrayIndexing	line [ 0 ]		276359	0					
ANR	276507	Identifier	line		276359	0					
ANR	276508	PrimaryExpression	0		276359	1					
ANR	276509	PrimaryExpression	'#'		276359	1					
ANR	276510	CompoundStatement		24:23:618:618	276359	1					
ANR	276511	ContinueStatement	continue ;	510:4:13437:13445	276359	0	True				
ANR	276512	IfStatement	"if ( len > mime_marker_len && memcmp ( line , mime_marker , mime_marker_len ) == 0 )"		276359	5					
ANR	276513	Condition	"len > mime_marker_len && memcmp ( line , mime_marker , mime_marker_len ) == 0"	512:7:13459:13538	276359	0	True				
ANR	276514	AndExpression	"len > mime_marker_len && memcmp ( line , mime_marker , mime_marker_len ) == 0"		276359	0		&&			
ANR	276515	RelationalExpression	len > mime_marker_len		276359	0		>			
ANR	276516	Identifier	len		276359	0					
ANR	276517	Identifier	mime_marker_len		276359	1					
ANR	276518	EqualityExpression	"memcmp ( line , mime_marker , mime_marker_len ) == 0"		276359	1		==			
ANR	276519	CallExpression	"memcmp ( line , mime_marker , mime_marker_len )"		276359	0					
ANR	276520	Callee	memcmp		276359	0					
ANR	276521	Identifier	memcmp		276359	0					
ANR	276522	ArgumentList	line		276359	1					
ANR	276523	Argument	line		276359	0					
ANR	276524	Identifier	line		276359	0					
ANR	276525	Argument	mime_marker		276359	1					
ANR	276526	Identifier	mime_marker		276359	0					
ANR	276527	Argument	mime_marker_len		276359	2					
ANR	276528	Identifier	mime_marker_len		276359	0					
ANR	276529	PrimaryExpression	0		276359	1					
ANR	276530	CompoundStatement		28:57:756:756	276359	1					
ANR	276531	IfStatement	"if ( parse_mime ( ms , marray , marraycount , line + mime_marker_len ) != 0 )"		276359	0					
ANR	276532	Condition	"parse_mime ( ms , marray , marraycount , line + mime_marker_len ) != 0"	515:8:13571:13644	276359	0	True				
ANR	276533	EqualityExpression	"parse_mime ( ms , marray , marraycount , line + mime_marker_len ) != 0"		276359	0		!=			
ANR	276534	CallExpression	"parse_mime ( ms , marray , marraycount , line + mime_marker_len )"		276359	0					
ANR	276535	Callee	parse_mime		276359	0					
ANR	276536	Identifier	parse_mime		276359	0					
ANR	276537	ArgumentList	ms		276359	1					
ANR	276538	Argument	ms		276359	0					
ANR	276539	Identifier	ms		276359	0					
ANR	276540	Argument	marray		276359	1					
ANR	276541	Identifier	marray		276359	0					
ANR	276542	Argument	marraycount		276359	2					
ANR	276543	Identifier	marraycount		276359	0					
ANR	276544	Argument	line + mime_marker_len		276359	3					
ANR	276545	AdditiveExpression	line + mime_marker_len		276359	0		+			
ANR	276546	Identifier	line		276359	0					
ANR	276547	Identifier	mime_marker_len		276359	1					
ANR	276548	PrimaryExpression	0		276359	1					
ANR	276549	CompoundStatement		31:39:862:862	276359	1					
ANR	276550	ExpressionStatement	( * errs ) ++	517:5:13654:13663	276359	0	True				
ANR	276551	PostIncDecOperationExpression	( * errs ) ++		276359	0					
ANR	276552	UnaryOperationExpression	* errs		276359	0					
ANR	276553	UnaryOperator	*		276359	0					
ANR	276554	Identifier	errs		276359	1					
ANR	276555	IncDec	++		276359	1					
ANR	276556	ContinueStatement	continue ;	519:4:13675:13683	276359	1	True				
ANR	276557	IfStatement	"if ( parse ( ms , marray , marraycount , line , lineno , action ) != 0 )"		276359	6					
ANR	276558	Condition	"parse ( ms , marray , marraycount , line , lineno , action ) != 0"	521:7:13697:13754	276359	0	True				
ANR	276559	EqualityExpression	"parse ( ms , marray , marraycount , line , lineno , action ) != 0"		276359	0		!=			
ANR	276560	CallExpression	"parse ( ms , marray , marraycount , line , lineno , action )"		276359	0					
ANR	276561	Callee	parse		276359	0					
ANR	276562	Identifier	parse		276359	0					
ANR	276563	ArgumentList	ms		276359	1					
ANR	276564	Argument	ms		276359	0					
ANR	276565	Identifier	ms		276359	0					
ANR	276566	Argument	marray		276359	1					
ANR	276567	Identifier	marray		276359	0					
ANR	276568	Argument	marraycount		276359	2					
ANR	276569	Identifier	marraycount		276359	0					
ANR	276570	Argument	line		276359	3					
ANR	276571	Identifier	line		276359	0					
ANR	276572	Argument	lineno		276359	4					
ANR	276573	Identifier	lineno		276359	0					
ANR	276574	Argument	action		276359	5					
ANR	276575	Identifier	action		276359	0					
ANR	276576	PrimaryExpression	0		276359	1					
ANR	276577	CompoundStatement		36:67:972:972	276359	1					
ANR	276578	ExpressionStatement	( * errs ) ++	522:4:13763:13772	276359	0	True				
ANR	276579	PostIncDecOperationExpression	( * errs ) ++		276359	0					
ANR	276580	UnaryOperationExpression	* errs		276359	0					
ANR	276581	UnaryOperator	*		276359	0					
ANR	276582	Identifier	errs		276359	1					
ANR	276583	IncDec	++		276359	1					
ANR	276584	ExpressionStatement	fclose ( f )	525:2:13785:13795	276359	1	True				
ANR	276585	CallExpression	fclose ( f )		276359	0					
ANR	276586	Callee	fclose		276359	0					
ANR	276587	Identifier	fclose		276359	0					
ANR	276588	ArgumentList	f		276359	1					
ANR	276589	Argument	f		276359	0					
ANR	276590	Identifier	f		276359	0					
ANR	276591	ReturnType	static void		276359	1					
ANR	276592	Identifier	load_1		276359	2					
ANR	276593	ParameterList	"RMagic * ms , int action , const char * file , int * errs , struct r_magic_entry * * marray , ut32 * marraycount"		276359	3					
ANR	276594	Parameter	RMagic * ms	486:19:12681:12690	276359	0	True				
ANR	276595	ParameterType	RMagic *		276359	0					
ANR	276596	Identifier	ms		276359	1					
ANR	276597	Parameter	int action	486:31:12693:12702	276359	1	True				
ANR	276598	ParameterType	int		276359	0					
ANR	276599	Identifier	action		276359	1					
ANR	276600	Parameter	const char * file	486:43:12705:12720	276359	2	True				
ANR	276601	ParameterType	const char *		276359	0					
ANR	276602	Identifier	file		276359	1					
ANR	276603	Parameter	int * errs	486:61:12723:12731	276359	3	True				
ANR	276604	ParameterType	int *		276359	0					
ANR	276605	Identifier	errs		276359	1					
ANR	276606	Parameter	struct r_magic_entry * * marray	486:72:12734:12762	276359	4	True				
ANR	276607	ParameterType	struct r_magic_entry * *		276359	0					
ANR	276608	Identifier	marray		276359	1					
ANR	276609	Parameter	ut32 * marraycount	486:103:12765:12781	276359	5	True				
ANR	276610	ParameterType	ut32 *		276359	0					
ANR	276611	Identifier	marraycount		276359	1					
ANR	276612	CFGEntryNode	ENTRY		276359		True				
ANR	276613	CFGExitNode	EXIT		276359		True				
ANR	276614	Symbol	marray		276359						
ANR	276615	Symbol	errs		276359						
ANR	276616	Symbol	line		276359						
ANR	276617	Symbol	parse_mime		276359						
ANR	276618	Symbol	* line		276359						
ANR	276619	Symbol	fgets		276359						
ANR	276620	Symbol	* ms		276359						
ANR	276621	Symbol	strlen		276359						
ANR	276622	Symbol	marraycount		276359						
ANR	276623	Symbol	file		276359						
ANR	276624	Symbol	memcmp		276359						
ANR	276625	Symbol	mime_marker		276359						
ANR	276626	Symbol	len		276359						
ANR	276627	Symbol	mime_marker_len		276359						
ANR	276628	Symbol	action		276359						
ANR	276629	Symbol	errno		276359						
ANR	276630	Symbol	NULL		276359						
ANR	276631	Symbol	ms		276359						
ANR	276632	Symbol	f		276359						
ANR	276633	Symbol	ms -> line		276359						
ANR	276634	Symbol	ENOENT		276359						
ANR	276635	Symbol	parse		276359						
ANR	276636	Symbol	ms -> file		276359						
ANR	276637	Symbol	lineno		276359						
ANR	276638	Symbol	r_sandbox_fopen		276359						
ANR	276639	Symbol	* errs		276359						
ANR	276640	Symbol	* len		276359						
ANR	276641	Function	apprentice_load	533:0:13899:18203							
ANR	276642	FunctionDef	"apprentice_load (RMagic * ms , struct r_magic * * magicp , ut32 * nmagicp , const char * fn , int action)"		276641	0					
ANR	276643	CompoundStatement		533:107:14006:18203	276641	0					
ANR	276644	IdentifierDeclStatement	"ut32 marraycount , i , mentrycount = 0 , starttest ;"	534:1:14009:14056	276641	0	True				
ANR	276645	IdentifierDecl	marraycount		276641	0					
ANR	276646	IdentifierDeclType	ut32		276641	0					
ANR	276647	Identifier	marraycount		276641	1					
ANR	276648	IdentifierDecl	i		276641	1					
ANR	276649	IdentifierDeclType	ut32		276641	0					
ANR	276650	Identifier	i		276641	1					
ANR	276651	IdentifierDecl	mentrycount = 0		276641	2					
ANR	276652	IdentifierDeclType	ut32		276641	0					
ANR	276653	Identifier	mentrycount		276641	1					
ANR	276654	AssignmentExpression	mentrycount = 0		276641	2		=			
ANR	276655	Identifier	mentrycount		276641	0					
ANR	276656	PrimaryExpression	0		276641	1					
ANR	276657	IdentifierDecl	starttest		276641	3					
ANR	276658	IdentifierDeclType	ut32		276641	0					
ANR	276659	Identifier	starttest		276641	1					
ANR	276660	IdentifierDeclStatement	struct r_magic_entry * marray ;	535:1:14059:14087	276641	1	True				
ANR	276661	IdentifierDecl	* marray		276641	0					
ANR	276662	IdentifierDeclType	struct r_magic_entry *		276641	0					
ANR	276663	Identifier	marray		276641	1					
ANR	276664	IdentifierDeclStatement	struct stat st ;	536:1:14090:14104	276641	2	True				
ANR	276665	IdentifierDecl	st		276641	0					
ANR	276666	IdentifierDeclType	struct stat		276641	0					
ANR	276667	Identifier	st		276641	1					
ANR	276668	IdentifierDeclStatement	int errs = 0 ;	537:1:14107:14119	276641	3	True				
ANR	276669	IdentifierDecl	errs = 0		276641	0					
ANR	276670	IdentifierDeclType	int		276641	0					
ANR	276671	Identifier	errs		276641	1					
ANR	276672	AssignmentExpression	errs = 0		276641	2		=			
ANR	276673	Identifier	errs		276641	0					
ANR	276674	PrimaryExpression	0		276641	1					
ANR	276675	IdentifierDeclStatement	DIR * dir ;	539:1:14139:14147	276641	4	True				
ANR	276676	IdentifierDecl	* dir		276641	0					
ANR	276677	IdentifierDeclType	DIR *		276641	0					
ANR	276678	Identifier	dir		276641	1					
ANR	276679	IdentifierDeclStatement	struct dirent * d ;	540:1:14150:14166	276641	5	True				
ANR	276680	IdentifierDecl	* d		276641	0					
ANR	276681	IdentifierDeclType	struct dirent *		276641	0					
ANR	276682	Identifier	d		276641	1					
ANR	276683	IdentifierDeclStatement	char subfn [ MAXPATHLEN ] ;	541:1:14169:14191	276641	6	True				
ANR	276684	IdentifierDecl	subfn [ MAXPATHLEN ]		276641	0					
ANR	276685	IdentifierDeclType	char [ MAXPATHLEN ]		276641	0					
ANR	276686	Identifier	subfn		276641	1					
ANR	276687	Identifier	MAXPATHLEN		276641	2					
ANR	276688	ExpressionStatement	ms -> flags |= R_MAGIC_CHECK	550:1:14324:14350	276641	7	True				
ANR	276689	AssignmentExpression	ms -> flags |= R_MAGIC_CHECK		276641	0		|=			
ANR	276690	PtrMemberAccess	ms -> flags		276641	0					
ANR	276691	Identifier	ms		276641	0					
ANR	276692	Identifier	flags		276641	1					
ANR	276693	Identifier	R_MAGIC_CHECK		276641	1					
ANR	276694	ExpressionStatement	maxmagic = MAXMAGIS	552:8:14398:14417	276641	8	True				
ANR	276695	AssignmentExpression	maxmagic = MAXMAGIS		276641	0		=			
ANR	276696	Identifier	maxmagic		276641	0					
ANR	276697	Identifier	MAXMAGIS		276641	1					
ANR	276698	IfStatement	"if ( ! ( marray = calloc ( maxmagic , sizeof ( * marray ) ) ) )"		276641	9					
ANR	276699	Condition	"! ( marray = calloc ( maxmagic , sizeof ( * marray ) ) )"	553:5:14424:14470	276641	0	True				
ANR	276700	UnaryOperationExpression	"! ( marray = calloc ( maxmagic , sizeof ( * marray ) ) )"		276641	0					
ANR	276701	UnaryOperator	!		276641	0					
ANR	276702	AssignmentExpression	"marray = calloc ( maxmagic , sizeof ( * marray ) )"		276641	1		=			
ANR	276703	Identifier	marray		276641	0					
ANR	276704	CallExpression	"calloc ( maxmagic , sizeof ( * marray ) )"		276641	1					
ANR	276705	Callee	calloc		276641	0					
ANR	276706	Identifier	calloc		276641	0					
ANR	276707	ArgumentList	maxmagic		276641	1					
ANR	276708	Argument	maxmagic		276641	0					
ANR	276709	Identifier	maxmagic		276641	0					
ANR	276710	Argument	sizeof ( * marray )		276641	1					
ANR	276711	SizeofExpression	sizeof ( * marray )		276641	0					
ANR	276712	Sizeof	sizeof		276641	0					
ANR	276713	UnaryOperationExpression	* marray		276641	1					
ANR	276714	UnaryOperator	*		276641	0					
ANR	276715	Identifier	marray		276641	1					
ANR	276716	CompoundStatement		21:54:466:466	276641	1					
ANR	276717	ExpressionStatement	"file_oomem ( ms , maxmagic * sizeof ( * marray ) )"	554:2:14477:14521	276641	0	True				
ANR	276718	CallExpression	"file_oomem ( ms , maxmagic * sizeof ( * marray ) )"		276641	0					
ANR	276719	Callee	file_oomem		276641	0					
ANR	276720	Identifier	file_oomem		276641	0					
ANR	276721	ArgumentList	ms		276641	1					
ANR	276722	Argument	ms		276641	0					
ANR	276723	Identifier	ms		276641	0					
ANR	276724	Argument	maxmagic * sizeof ( * marray )		276641	1					
ANR	276725	MultiplicativeExpression	maxmagic * sizeof ( * marray )		276641	0		*			
ANR	276726	Identifier	maxmagic		276641	0					
ANR	276727	SizeofExpression	sizeof ( * marray )		276641	1					
ANR	276728	Sizeof	sizeof		276641	0					
ANR	276729	UnaryOperationExpression	* marray		276641	1					
ANR	276730	UnaryOperator	*		276641	0					
ANR	276731	Identifier	marray		276641	1					
ANR	276732	ReturnStatement	return - 1 ;	555:2:14525:14534	276641	1	True				
ANR	276733	UnaryOperationExpression	- 1		276641	0					
ANR	276734	UnaryOperator	-		276641	0					
ANR	276735	PrimaryExpression	1		276641	1					
ANR	276736	ExpressionStatement	marraycount = 0	557:1:14540:14555	276641	10	True				
ANR	276737	AssignmentExpression	marraycount = 0		276641	0		=			
ANR	276738	Identifier	marraycount		276641	0					
ANR	276739	PrimaryExpression	0		276641	1					
ANR	276740	IfStatement	if ( action == FILE_CHECK )		276641	11					
ANR	276741	Condition	action == FILE_CHECK	560:5:14613:14632	276641	0	True				
ANR	276742	EqualityExpression	action == FILE_CHECK		276641	0		==			
ANR	276743	Identifier	action		276641	0					
ANR	276744	Identifier	FILE_CHECK		276641	1					
ANR	276745	CompoundStatement		28:27:628:628	276641	1					
ANR	276746	ExpressionStatement	"eprintf ( ""%s\\n"" , usg_hdr )"	561:2:14639:14664	276641	0	True				
ANR	276747	CallExpression	"eprintf ( ""%s\\n"" , usg_hdr )"		276641	0					
ANR	276748	Callee	eprintf		276641	0					
ANR	276749	Identifier	eprintf		276641	0					
ANR	276750	ArgumentList	"""%s\\n"""		276641	1					
ANR	276751	Argument	"""%s\\n"""		276641	0					
ANR	276752	PrimaryExpression	"""%s\\n"""		276641	0					
ANR	276753	Argument	usg_hdr		276641	1					
ANR	276754	Identifier	usg_hdr		276641	0					
ANR	276755	IfStatement	"if ( stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode ) )"		276641	12					
ANR	276756	Condition	"stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode )"	565:5:14705:14747	276641	0	True				
ANR	276757	AndExpression	"stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode )"		276641	0		&&			
ANR	276758	EqualityExpression	"stat ( fn , & st ) == 0"		276641	0		==			
ANR	276759	CallExpression	"stat ( fn , & st )"		276641	0					
ANR	276760	Callee	stat		276641	0					
ANR	276761	Identifier	stat		276641	0					
ANR	276762	ArgumentList	fn		276641	1					
ANR	276763	Argument	fn		276641	0					
ANR	276764	Identifier	fn		276641	0					
ANR	276765	Argument	& st		276641	1					
ANR	276766	UnaryOperationExpression	& st		276641	0					
ANR	276767	UnaryOperator	&		276641	0					
ANR	276768	Identifier	st		276641	1					
ANR	276769	PrimaryExpression	0		276641	1					
ANR	276770	CallExpression	S_ISDIR ( st . st_mode )		276641	1					
ANR	276771	Callee	S_ISDIR		276641	0					
ANR	276772	Identifier	S_ISDIR		276641	0					
ANR	276773	ArgumentList	st . st_mode		276641	1					
ANR	276774	Argument	st . st_mode		276641	0					
ANR	276775	MemberAccess	st . st_mode		276641	0					
ANR	276776	Identifier	st		276641	0					
ANR	276777	Identifier	st_mode		276641	1					
ANR	276778	CompoundStatement		33:50:743:743	276641	1					
ANR	276779	IfStatement	if ( r_sandbox_enable ( 0 ) && ! r_sandbox_check_path ( fn ) )		276641	0					
ANR	276780	Condition	r_sandbox_enable ( 0 ) && ! r_sandbox_check_path ( fn )	566:6:14758:14807	276641	0	True				
ANR	276781	AndExpression	r_sandbox_enable ( 0 ) && ! r_sandbox_check_path ( fn )		276641	0		&&			
ANR	276782	CallExpression	r_sandbox_enable ( 0 )		276641	0					
ANR	276783	Callee	r_sandbox_enable		276641	0					
ANR	276784	Identifier	r_sandbox_enable		276641	0					
ANR	276785	ArgumentList	0		276641	1					
ANR	276786	Argument	0		276641	0					
ANR	276787	PrimaryExpression	0		276641	0					
ANR	276788	UnaryOperationExpression	! r_sandbox_check_path ( fn )		276641	1					
ANR	276789	UnaryOperator	!		276641	0					
ANR	276790	CallExpression	r_sandbox_check_path ( fn )		276641	1					
ANR	276791	Callee	r_sandbox_check_path		276641	0					
ANR	276792	Identifier	r_sandbox_check_path		276641	0					
ANR	276793	ArgumentList	fn		276641	1					
ANR	276794	Argument	fn		276641	0					
ANR	276795	Identifier	fn		276641	0					
ANR	276796	CompoundStatement		34:58:803:803	276641	1					
ANR	276797	ExpressionStatement	free ( marray )	567:3:14815:14828	276641	0	True				
ANR	276798	CallExpression	free ( marray )		276641	0					
ANR	276799	Callee	free		276641	0					
ANR	276800	Identifier	free		276641	0					
ANR	276801	ArgumentList	marray		276641	1					
ANR	276802	Argument	marray		276641	0					
ANR	276803	Identifier	marray		276641	0					
ANR	276804	ReturnStatement	return - 1 ;	568:3:14833:14843	276641	1	True				
ANR	276805	UnaryOperationExpression	- 1		276641	0					
ANR	276806	UnaryOperator	-		276641	0					
ANR	276807	PrimaryExpression	1		276641	1					
ANR	276808	IfStatement	if ( ( wcpath = r_utf8_to_utf16 ( fn ) ) )		276641	1					
ANR	276809	Condition	wcpath = r_utf8_to_utf16 ( fn )	571:6:14895:14925	276641	0	True				
ANR	276810	AssignmentExpression	wcpath = r_utf8_to_utf16 ( fn )		276641	0		=			
ANR	276811	Identifier	wcpath		276641	0					
ANR	276812	CallExpression	r_utf8_to_utf16 ( fn )		276641	1					
ANR	276813	Callee	r_utf8_to_utf16		276641	0					
ANR	276814	Identifier	r_utf8_to_utf16		276641	0					
ANR	276815	ArgumentList	fn		276641	1					
ANR	276816	Argument	fn		276641	0					
ANR	276817	Identifier	fn		276641	0					
ANR	276818	CompoundStatement		39:39:921:921	276641	1					
ANR	276819	Statement	swprintf	572:3:14933:14940	276641	0	True				
ANR	276820	Statement	(	572:12:14942:14942	276641	1	True				
ANR	276821	Statement	dir	572:13:14943:14945	276641	2	True				
ANR	276822	Statement	","	572:16:14946:14946	276641	3	True				
ANR	276823	Statement	_countof	572:18:14948:14955	276641	4	True				
ANR	276824	Statement	(	572:27:14957:14957	276641	5	True				
ANR	276825	Statement	dir	572:28:14958:14960	276641	6	True				
ANR	276826	Statement	)	572:31:14961:14961	276641	7	True				
ANR	276827	Statement	","	572:32:14962:14962	276641	8	True				
ANR	276828	Statement	L	572:34:14964:14964	276641	9	True				
ANR	276829	Statement	"""%ls\\\\*.*"""	572:35:14965:14974	276641	10	True				
ANR	276830	Statement	","	572:45:14975:14975	276641	11	True				
ANR	276831	Statement	wcpath	572:47:14977:14982	276641	12	True				
ANR	276832	Statement	)	572:53:14983:14983	276641	13	True				
ANR	276833	ExpressionStatement		572:54:14984:14984	276641	14	True				
ANR	276834	ExpressionStatement	"hdir = FindFirstFileW ( dir , & entry )"	573:3:14989:15024	276641	15	True				
ANR	276835	AssignmentExpression	"hdir = FindFirstFileW ( dir , & entry )"		276641	0		=			
ANR	276836	Identifier	hdir		276641	0					
ANR	276837	CallExpression	"FindFirstFileW ( dir , & entry )"		276641	1					
ANR	276838	Callee	FindFirstFileW		276641	0					
ANR	276839	Identifier	FindFirstFileW		276641	0					
ANR	276840	ArgumentList	dir		276641	1					
ANR	276841	Argument	dir		276641	0					
ANR	276842	Identifier	dir		276641	0					
ANR	276843	Argument	& entry		276641	1					
ANR	276844	UnaryOperationExpression	& entry		276641	0					
ANR	276845	UnaryOperator	&		276641	0					
ANR	276846	Identifier	entry		276641	1					
ANR	276847	IfStatement	if ( ! ( hdir == INVALID_HANDLE_VALUE ) )		276641	16					
ANR	276848	Condition	! ( hdir == INVALID_HANDLE_VALUE )	574:7:15033:15063	276641	0	True				
ANR	276849	UnaryOperationExpression	! ( hdir == INVALID_HANDLE_VALUE )		276641	0					
ANR	276850	UnaryOperator	!		276641	0					
ANR	276851	EqualityExpression	hdir == INVALID_HANDLE_VALUE		276641	1		==			
ANR	276852	Identifier	hdir		276641	0					
ANR	276853	Identifier	INVALID_HANDLE_VALUE		276641	1					
ANR	276854	CompoundStatement		42:40:1059:1059	276641	1					
ANR	276855	DoStatement	do		276641	0					
ANR	276856	CompoundStatement		43:7:1068:1068	276641	0					
ANR	276857	Statement	if	576:5:15082:15083	276641	0	True				
ANR	276858	Statement	(	576:8:15085:15085	276641	1	True				
ANR	276859	Statement	wcsncmp	576:9:15086:15092	276641	2	True				
ANR	276860	Statement	(	576:17:15094:15094	276641	3	True				
ANR	276861	Statement	entry	576:18:15095:15099	276641	4	True				
ANR	276862	Statement	.	576:23:15100:15100	276641	5	True				
ANR	276863	Statement	cFileName	576:24:15101:15109	276641	6	True				
ANR	276864	Statement	","	576:33:15110:15110	276641	7	True				
ANR	276865	Statement	L	576:35:15112:15112	276641	8	True				
ANR	276866	Statement	"""."""	576:36:15113:15115	276641	9	True				
ANR	276867	Statement	","	576:39:15116:15116	276641	10	True				
ANR	276868	Statement	1	576:41:15118:15118	276641	11	True				
ANR	276869	Statement	)	576:42:15119:15119	276641	12	True				
ANR	276870	Statement	==	576:44:15121:15122	276641	13	True				
ANR	276871	Statement	0	576:47:15124:15124	276641	14	True				
ANR	276872	Statement	)	576:48:15125:15125	276641	15	True				
ANR	276873	ContinueStatement	continue ;	576:50:15127:15135	276641	16	True				
ANR	276874	IfStatement	if ( ( cfname = r_utf16_to_utf8 ( entry . cFileName ) ) )		276641	17					
ANR	276875	Condition	cfname = r_utf16_to_utf8 ( entry . cFileName )	577:9:15146:15189	276641	0	True				
ANR	276876	AssignmentExpression	cfname = r_utf16_to_utf8 ( entry . cFileName )		276641	0		=			
ANR	276877	Identifier	cfname		276641	0					
ANR	276878	CallExpression	r_utf16_to_utf8 ( entry . cFileName )		276641	1					
ANR	276879	Callee	r_utf16_to_utf8		276641	0					
ANR	276880	Identifier	r_utf16_to_utf8		276641	0					
ANR	276881	ArgumentList	entry . cFileName		276641	1					
ANR	276882	Argument	entry . cFileName		276641	0					
ANR	276883	MemberAccess	entry . cFileName		276641	0					
ANR	276884	Identifier	entry		276641	0					
ANR	276885	Identifier	cFileName		276641	1					
ANR	276886	CompoundStatement		45:55:1185:1185	276641	1					
ANR	276887	ExpressionStatement	"snprintf ( subfn , sizeof ( subfn ) , ""%s/%s"" , fn , cfname )"	578:6:15200:15253	276641	0	True				
ANR	276888	CallExpression	"snprintf ( subfn , sizeof ( subfn ) , ""%s/%s"" , fn , cfname )"		276641	0					
ANR	276889	Callee	snprintf		276641	0					
ANR	276890	Identifier	snprintf		276641	0					
ANR	276891	ArgumentList	subfn		276641	1					
ANR	276892	Argument	subfn		276641	0					
ANR	276893	Identifier	subfn		276641	0					
ANR	276894	Argument	sizeof ( subfn )		276641	1					
ANR	276895	SizeofExpression	sizeof ( subfn )		276641	0					
ANR	276896	Sizeof	sizeof		276641	0					
ANR	276897	SizeofOperand	subfn		276641	1					
ANR	276898	Argument	"""%s/%s"""		276641	2					
ANR	276899	PrimaryExpression	"""%s/%s"""		276641	0					
ANR	276900	Argument	fn		276641	3					
ANR	276901	Identifier	fn		276641	0					
ANR	276902	Argument	cfname		276641	4					
ANR	276903	Identifier	cfname		276641	0					
ANR	276904	IfStatement	"if ( stat ( subfn , & st ) == 0 && S_ISREG ( st . st_mode ) )"		276641	1					
ANR	276905	Condition	"stat ( subfn , & st ) == 0 && S_ISREG ( st . st_mode )"	579:10:15265:15310	276641	0	True				
ANR	276906	AndExpression	"stat ( subfn , & st ) == 0 && S_ISREG ( st . st_mode )"		276641	0		&&			
ANR	276907	EqualityExpression	"stat ( subfn , & st ) == 0"		276641	0		==			
ANR	276908	CallExpression	"stat ( subfn , & st )"		276641	0					
ANR	276909	Callee	stat		276641	0					
ANR	276910	Identifier	stat		276641	0					
ANR	276911	ArgumentList	subfn		276641	1					
ANR	276912	Argument	subfn		276641	0					
ANR	276913	Identifier	subfn		276641	0					
ANR	276914	Argument	& st		276641	1					
ANR	276915	UnaryOperationExpression	& st		276641	0					
ANR	276916	UnaryOperator	&		276641	0					
ANR	276917	Identifier	st		276641	1					
ANR	276918	PrimaryExpression	0		276641	1					
ANR	276919	CallExpression	S_ISREG ( st . st_mode )		276641	1					
ANR	276920	Callee	S_ISREG		276641	0					
ANR	276921	Identifier	S_ISREG		276641	0					
ANR	276922	ArgumentList	st . st_mode		276641	1					
ANR	276923	Argument	st . st_mode		276641	0					
ANR	276924	MemberAccess	st . st_mode		276641	0					
ANR	276925	Identifier	st		276641	0					
ANR	276926	Identifier	st_mode		276641	1					
ANR	276927	CompoundStatement		47:58:1306:1306	276641	1					
ANR	276928	ExpressionStatement	"load_1 ( ms , action , subfn , & errs , & marray , & marraycount )"	580:7:15322:15378	276641	0	True				
ANR	276929	CallExpression	"load_1 ( ms , action , subfn , & errs , & marray , & marraycount )"		276641	0					
ANR	276930	Callee	load_1		276641	0					
ANR	276931	Identifier	load_1		276641	0					
ANR	276932	ArgumentList	ms		276641	1					
ANR	276933	Argument	ms		276641	0					
ANR	276934	Identifier	ms		276641	0					
ANR	276935	Argument	action		276641	1					
ANR	276936	Identifier	action		276641	0					
ANR	276937	Argument	subfn		276641	2					
ANR	276938	Identifier	subfn		276641	0					
ANR	276939	Argument	& errs		276641	3					
ANR	276940	UnaryOperationExpression	& errs		276641	0					
ANR	276941	UnaryOperator	&		276641	0					
ANR	276942	Identifier	errs		276641	1					
ANR	276943	Argument	& marray		276641	4					
ANR	276944	UnaryOperationExpression	& marray		276641	0					
ANR	276945	UnaryOperator	&		276641	0					
ANR	276946	Identifier	marray		276641	1					
ANR	276947	Argument	& marraycount		276641	5					
ANR	276948	UnaryOperationExpression	& marraycount		276641	0					
ANR	276949	UnaryOperator	&		276641	0					
ANR	276950	Identifier	marraycount		276641	1					
ANR	276951	ExpressionStatement	free ( cfname )	582:6:15394:15407	276641	2	True				
ANR	276952	CallExpression	free ( cfname )		276641	0					
ANR	276953	Callee	free		276641	0					
ANR	276954	Identifier	free		276641	0					
ANR	276955	ArgumentList	cfname		276641	1					
ANR	276956	Argument	cfname		276641	0					
ANR	276957	Identifier	cfname		276641	0					
ANR	276958	Condition	"FindNextFileW ( hdir , & entry )"	584:13:15429:15456	276641	1	True				
ANR	276959	CallExpression	"FindNextFileW ( hdir , & entry )"		276641	0					
ANR	276960	Callee	FindNextFileW		276641	0					
ANR	276961	Identifier	FindNextFileW		276641	0					
ANR	276962	ArgumentList	hdir		276641	1					
ANR	276963	Argument	hdir		276641	0					
ANR	276964	Identifier	hdir		276641	0					
ANR	276965	Argument	& entry		276641	1					
ANR	276966	UnaryOperationExpression	& entry		276641	0					
ANR	276967	UnaryOperator	&		276641	0					
ANR	276968	Identifier	entry		276641	1					
ANR	276969	ExpressionStatement	FindClose ( hdir )	585:4:15464:15480	276641	1	True				
ANR	276970	CallExpression	FindClose ( hdir )		276641	0					
ANR	276971	Callee	FindClose		276641	0					
ANR	276972	Identifier	FindClose		276641	0					
ANR	276973	ArgumentList	hdir		276641	1					
ANR	276974	Argument	hdir		276641	0					
ANR	276975	Identifier	hdir		276641	0					
ANR	276976	ExpressionStatement	free ( wcpath )	587:3:15490:15503	276641	17	True				
ANR	276977	CallExpression	free ( wcpath )		276641	0					
ANR	276978	Callee	free		276641	0					
ANR	276979	Identifier	free		276641	0					
ANR	276980	ArgumentList	wcpath		276641	1					
ANR	276981	Argument	wcpath		276641	0					
ANR	276982	Identifier	wcpath		276641	0					
ANR	276983	ElseStatement	else		276641	0					
ANR	276984	CompoundStatement		56:9:1507:1507	276641	0					
ANR	276985	ExpressionStatement	errs ++	589:3:15519:15525	276641	0	True				
ANR	276986	PostIncDecOperationExpression	errs ++		276641	0					
ANR	276987	Identifier	errs		276641	0					
ANR	276988	IncDec	++		276641	1					
ANR	276989	ElseStatement	else		276641	0					
ANR	276990	CompoundStatement		77:8:1929:1929	276641	0					
ANR	276991	ExpressionStatement	"load_1 ( ms , action , fn , & errs , & marray , & marraycount )"	610:2:15940:15993	276641	0	True				
ANR	276992	CallExpression	"load_1 ( ms , action , fn , & errs , & marray , & marraycount )"		276641	0					
ANR	276993	Callee	load_1		276641	0					
ANR	276994	Identifier	load_1		276641	0					
ANR	276995	ArgumentList	ms		276641	1					
ANR	276996	Argument	ms		276641	0					
ANR	276997	Identifier	ms		276641	0					
ANR	276998	Argument	action		276641	1					
ANR	276999	Identifier	action		276641	0					
ANR	277000	Argument	fn		276641	2					
ANR	277001	Identifier	fn		276641	0					
ANR	277002	Argument	& errs		276641	3					
ANR	277003	UnaryOperationExpression	& errs		276641	0					
ANR	277004	UnaryOperator	&		276641	0					
ANR	277005	Identifier	errs		276641	1					
ANR	277006	Argument	& marray		276641	4					
ANR	277007	UnaryOperationExpression	& marray		276641	0					
ANR	277008	UnaryOperator	&		276641	0					
ANR	277009	Identifier	marray		276641	1					
ANR	277010	Argument	& marraycount		276641	5					
ANR	277011	UnaryOperationExpression	& marraycount		276641	0					
ANR	277012	UnaryOperator	&		276641	0					
ANR	277013	Identifier	marraycount		276641	1					
ANR	277014	IfStatement	if ( errs )		276641	13					
ANR	277015	Condition	errs	612:5:16003:16006	276641	0	True				
ANR	277016	Identifier	errs		276641	0					
ANR	277017	CompoundStatement		80:11:2002:2002	276641	1					
ANR	277018	GotoStatement	goto out ;	613:2:16013:16021	276641	0	True				
ANR	277019	Identifier	out		276641	0					
ANR	277020	ForStatement	for ( i = 0 ; i < marraycount ; )		276641	14					
ANR	277021	ForInit	i = 0 ;	617:6:16059:16064	276641	0	True				
ANR	277022	AssignmentExpression	i = 0		276641	0		=			
ANR	277023	Identifier	i		276641	0					
ANR	277024	PrimaryExpression	0		276641	1					
ANR	277025	Condition	i < marraycount	617:13:16066:16080	276641	1	True				
ANR	277026	RelationalExpression	i < marraycount		276641	0		<			
ANR	277027	Identifier	i		276641	0					
ANR	277028	Identifier	marraycount		276641	1					
ANR	277029	CompoundStatement		85:32:2078:2078	276641	2					
ANR	277030	IfStatement	if ( marray [ i ] . mp -> cont_level != 0 )		276641	0					
ANR	277031	Condition	marray [ i ] . mp -> cont_level != 0	618:6:16093:16121	276641	0	True				
ANR	277032	EqualityExpression	marray [ i ] . mp -> cont_level != 0		276641	0		!=			
ANR	277033	PtrMemberAccess	marray [ i ] . mp -> cont_level		276641	0					
ANR	277034	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277035	ArrayIndexing	marray [ i ]		276641	0					
ANR	277036	Identifier	marray		276641	0					
ANR	277037	Identifier	i		276641	1					
ANR	277038	Identifier	mp		276641	1					
ANR	277039	Identifier	cont_level		276641	1					
ANR	277040	PrimaryExpression	0		276641	1					
ANR	277041	CompoundStatement		86:37:2117:2117	276641	1					
ANR	277042	ExpressionStatement	i ++	619:3:16129:16132	276641	0	True				
ANR	277043	PostIncDecOperationExpression	i ++		276641	0					
ANR	277044	Identifier	i		276641	0					
ANR	277045	IncDec	++		276641	1					
ANR	277046	ContinueStatement	continue ;	620:3:16137:16145	276641	1	True				
ANR	277047	ExpressionStatement	starttest = i	623:2:16154:16167	276641	1	True				
ANR	277048	AssignmentExpression	starttest = i		276641	0		=			
ANR	277049	Identifier	starttest		276641	0					
ANR	277050	Identifier	i		276641	1					
ANR	277051	DoStatement	do		276641	2					
ANR	277052	CompoundStatement		92:5:2167:2167	276641	0					
ANR	277053	ExpressionStatement	"set_test_type ( marray [ starttest ] . mp , marray [ i ] . mp )"	625:3:16179:16228	276641	0	True				
ANR	277054	CallExpression	"set_test_type ( marray [ starttest ] . mp , marray [ i ] . mp )"		276641	0					
ANR	277055	Callee	set_test_type		276641	0					
ANR	277056	Identifier	set_test_type		276641	0					
ANR	277057	ArgumentList	marray [ starttest ] . mp		276641	1					
ANR	277058	Argument	marray [ starttest ] . mp		276641	0					
ANR	277059	MemberAccess	marray [ starttest ] . mp		276641	0					
ANR	277060	ArrayIndexing	marray [ starttest ]		276641	0					
ANR	277061	Identifier	marray		276641	0					
ANR	277062	Identifier	starttest		276641	1					
ANR	277063	Identifier	mp		276641	1					
ANR	277064	Argument	marray [ i ] . mp		276641	1					
ANR	277065	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277066	ArrayIndexing	marray [ i ]		276641	0					
ANR	277067	Identifier	marray		276641	0					
ANR	277068	Identifier	i		276641	1					
ANR	277069	Identifier	mp		276641	1					
ANR	277070	IfStatement	if ( ms -> flags & R_MAGIC_DEBUG )		276641	1					
ANR	277071	Condition	ms -> flags & R_MAGIC_DEBUG	626:7:16237:16261	276641	0	True				
ANR	277072	BitAndExpression	ms -> flags & R_MAGIC_DEBUG		276641	0		&			
ANR	277073	PtrMemberAccess	ms -> flags		276641	0					
ANR	277074	Identifier	ms		276641	0					
ANR	277075	Identifier	flags		276641	1					
ANR	277076	Identifier	R_MAGIC_DEBUG		276641	1					
ANR	277077	CompoundStatement		94:34:2257:2257	276641	1					
ANR	277078	ExpressionStatement	"( void ) fprintf ( stderr , ""%s%s%s: %s\\n"" , marray [ i ] . mp -> mimetype , marray [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , marray [ i ] . mp -> desc [ 0 ] ? marray [ i ] . mp -> desc : ""(no description)"" , marray [ i ] . mp -> flag & BINTEST ? ""binary"" : ""text"" )"	627:4:16270:16513	276641	0	True				
ANR	277079	CastExpression	"( void ) fprintf ( stderr , ""%s%s%s: %s\\n"" , marray [ i ] . mp -> mimetype , marray [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , marray [ i ] . mp -> desc [ 0 ] ? marray [ i ] . mp -> desc : ""(no description)"" , marray [ i ] . mp -> flag & BINTEST ? ""binary"" : ""text"" )"		276641	0					
ANR	277080	CastTarget	void		276641	0					
ANR	277081	CallExpression	"fprintf ( stderr , ""%s%s%s: %s\\n"" , marray [ i ] . mp -> mimetype , marray [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , marray [ i ] . mp -> desc [ 0 ] ? marray [ i ] . mp -> desc : ""(no description)"" , marray [ i ] . mp -> flag & BINTEST ? ""binary"" : ""text"" )"		276641	1					
ANR	277082	Callee	fprintf		276641	0					
ANR	277083	Identifier	fprintf		276641	0					
ANR	277084	ArgumentList	stderr		276641	1					
ANR	277085	Argument	stderr		276641	0					
ANR	277086	Identifier	stderr		276641	0					
ANR	277087	Argument	"""%s%s%s: %s\\n"""		276641	1					
ANR	277088	PrimaryExpression	"""%s%s%s: %s\\n"""		276641	0					
ANR	277089	Argument	marray [ i ] . mp -> mimetype		276641	2					
ANR	277090	PtrMemberAccess	marray [ i ] . mp -> mimetype		276641	0					
ANR	277091	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277092	ArrayIndexing	marray [ i ]		276641	0					
ANR	277093	Identifier	marray		276641	0					
ANR	277094	Identifier	i		276641	1					
ANR	277095	Identifier	mp		276641	1					
ANR	277096	Identifier	mimetype		276641	1					
ANR	277097	Argument	"marray [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; """		276641	3					
ANR	277098	ConditionalExpression	"marray [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; """		276641	0					
ANR	277099	Condition	marray [ i ] . mp -> mimetype [ 0 ] == '\\0'		276641	0					
ANR	277100	EqualityExpression	marray [ i ] . mp -> mimetype [ 0 ] == '\\0'		276641	0		==			
ANR	277101	ArrayIndexing	marray [ i ] . mp -> mimetype [ 0 ]		276641	0					
ANR	277102	PtrMemberAccess	marray [ i ] . mp -> mimetype		276641	0					
ANR	277103	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277104	ArrayIndexing	marray [ i ]		276641	0					
ANR	277105	Identifier	marray		276641	0					
ANR	277106	Identifier	i		276641	1					
ANR	277107	Identifier	mp		276641	1					
ANR	277108	Identifier	mimetype		276641	1					
ANR	277109	PrimaryExpression	0		276641	1					
ANR	277110	PrimaryExpression	'\\0'		276641	1					
ANR	277111	PrimaryExpression	""""""		276641	1					
ANR	277112	PrimaryExpression	"""; """		276641	2					
ANR	277113	Argument	"marray [ i ] . mp -> desc [ 0 ] ? marray [ i ] . mp -> desc : ""(no description)"""		276641	4					
ANR	277114	ConditionalExpression	"marray [ i ] . mp -> desc [ 0 ] ? marray [ i ] . mp -> desc : ""(no description)"""		276641	0					
ANR	277115	Condition	marray [ i ] . mp -> desc [ 0 ]		276641	0					
ANR	277116	ArrayIndexing	marray [ i ] . mp -> desc [ 0 ]		276641	0					
ANR	277117	PtrMemberAccess	marray [ i ] . mp -> desc		276641	0					
ANR	277118	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277119	ArrayIndexing	marray [ i ]		276641	0					
ANR	277120	Identifier	marray		276641	0					
ANR	277121	Identifier	i		276641	1					
ANR	277122	Identifier	mp		276641	1					
ANR	277123	Identifier	desc		276641	1					
ANR	277124	PrimaryExpression	0		276641	1					
ANR	277125	PtrMemberAccess	marray [ i ] . mp -> desc		276641	1					
ANR	277126	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277127	ArrayIndexing	marray [ i ]		276641	0					
ANR	277128	Identifier	marray		276641	0					
ANR	277129	Identifier	i		276641	1					
ANR	277130	Identifier	mp		276641	1					
ANR	277131	Identifier	desc		276641	1					
ANR	277132	PrimaryExpression	"""(no description)"""		276641	2					
ANR	277133	Argument	"marray [ i ] . mp -> flag & BINTEST ? ""binary"" : ""text"""		276641	5					
ANR	277134	ConditionalExpression	"marray [ i ] . mp -> flag & BINTEST ? ""binary"" : ""text"""		276641	0					
ANR	277135	Condition	marray [ i ] . mp -> flag & BINTEST		276641	0					
ANR	277136	BitAndExpression	marray [ i ] . mp -> flag & BINTEST		276641	0		&			
ANR	277137	PtrMemberAccess	marray [ i ] . mp -> flag		276641	0					
ANR	277138	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277139	ArrayIndexing	marray [ i ]		276641	0					
ANR	277140	Identifier	marray		276641	0					
ANR	277141	Identifier	i		276641	1					
ANR	277142	Identifier	mp		276641	1					
ANR	277143	Identifier	flag		276641	1					
ANR	277144	Identifier	BINTEST		276641	1					
ANR	277145	PrimaryExpression	"""binary"""		276641	1					
ANR	277146	PrimaryExpression	"""text"""		276641	2					
ANR	277147	IfStatement	if ( marray [ i ] . mp -> flag & BINTEST )		276641	1					
ANR	277148	Condition	marray [ i ] . mp -> flag & BINTEST	632:8:16523:16550	276641	0	True				
ANR	277149	BitAndExpression	marray [ i ] . mp -> flag & BINTEST		276641	0		&			
ANR	277150	PtrMemberAccess	marray [ i ] . mp -> flag		276641	0					
ANR	277151	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277152	ArrayIndexing	marray [ i ]		276641	0					
ANR	277153	Identifier	marray		276641	0					
ANR	277154	Identifier	i		276641	1					
ANR	277155	Identifier	mp		276641	1					
ANR	277156	Identifier	flag		276641	1					
ANR	277157	Identifier	BINTEST		276641	1					
ANR	277158	CompoundStatement		100:38:2546:2546	276641	1					
ANR	277159	Statement	define	633:1:16556:16561	276641	0	True				
ANR	277160	Statement	SYMBOL	633:8:16563:16568	276641	1	True				
ANR	277161	Statement	"""text"""	633:15:16570:16575	276641	2	True				
ANR	277162	Statement	define	634:1:16578:16583	276641	3	True				
ANR	277163	Statement	SYMLEN	634:8:16585:16590	276641	4	True				
ANR	277164	Statement	sizeof	634:15:16592:16597	276641	5	True				
ANR	277165	ExpressionStatement	"( SYMBOL ) char * p = strstr ( marray [ i ] . mp -> desc , ""text"" )"	634:22:16599:16657	276641	6	True				
ANR	277166	AssignmentExpression	"( SYMBOL ) char * p = strstr ( marray [ i ] . mp -> desc , ""text"" )"		276641	0		=			
ANR	277167	MultiplicativeExpression	( SYMBOL ) char * p		276641	0		*			
ANR	277168	CastExpression	( SYMBOL ) char		276641	0					
ANR	277169	CastTarget	SYMBOL		276641	0					
ANR	277170	Identifier	char		276641	1					
ANR	277171	Identifier	p		276641	1					
ANR	277172	CallExpression	"strstr ( marray [ i ] . mp -> desc , ""text"" )"		276641	1					
ANR	277173	Callee	strstr		276641	0					
ANR	277174	Identifier	strstr		276641	0					
ANR	277175	ArgumentList	marray [ i ] . mp -> desc		276641	1					
ANR	277176	Argument	marray [ i ] . mp -> desc		276641	0					
ANR	277177	PtrMemberAccess	marray [ i ] . mp -> desc		276641	0					
ANR	277178	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277179	ArrayIndexing	marray [ i ]		276641	0					
ANR	277180	Identifier	marray		276641	0					
ANR	277181	Identifier	i		276641	1					
ANR	277182	Identifier	mp		276641	1					
ANR	277183	Identifier	desc		276641	1					
ANR	277184	Argument	"""text"""		276641	1					
ANR	277185	PrimaryExpression	"""text"""		276641	0					
ANR	277186	IfStatement	if ( p && ( p == marray [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + SYMLEN - marray [ i ] . mp -> desc == MAXstring || ( p [ SYMLEN ] == '\\0' || isspace ( ( unsigned char ) p [ SYMLEN ] ) ) ) )		276641	7					
ANR	277187	Condition	p && ( p == marray [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + SYMLEN - marray [ i ] . mp -> desc == MAXstring || ( p [ SYMLEN ] == '\\0' || isspace ( ( unsigned char ) p [ SYMLEN ] ) ) )	636:9:16668:16859	276641	0	True				
ANR	277188	AndExpression	p && ( p == marray [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + SYMLEN - marray [ i ] . mp -> desc == MAXstring || ( p [ SYMLEN ] == '\\0' || isspace ( ( unsigned char ) p [ SYMLEN ] ) ) )		276641	0		&&			
ANR	277189	Identifier	p		276641	0					
ANR	277190	AndExpression	( p == marray [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + SYMLEN - marray [ i ] . mp -> desc == MAXstring || ( p [ SYMLEN ] == '\\0' || isspace ( ( unsigned char ) p [ SYMLEN ] ) ) )		276641	1		&&			
ANR	277191	OrExpression	p == marray [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] )		276641	0		||			
ANR	277192	EqualityExpression	p == marray [ i ] . mp -> desc		276641	0		==			
ANR	277193	Identifier	p		276641	0					
ANR	277194	PtrMemberAccess	marray [ i ] . mp -> desc		276641	1					
ANR	277195	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277196	ArrayIndexing	marray [ i ]		276641	0					
ANR	277197	Identifier	marray		276641	0					
ANR	277198	Identifier	i		276641	1					
ANR	277199	Identifier	mp		276641	1					
ANR	277200	Identifier	desc		276641	1					
ANR	277201	CallExpression	isspace ( ( unsigned char ) p [ - 1 ] )		276641	1					
ANR	277202	Callee	isspace		276641	0					
ANR	277203	Identifier	isspace		276641	0					
ANR	277204	ArgumentList	( unsigned char ) p [ - 1 ]		276641	1					
ANR	277205	Argument	( unsigned char ) p [ - 1 ]		276641	0					
ANR	277206	CastExpression	( unsigned char ) p [ - 1 ]		276641	0					
ANR	277207	CastTarget	unsigned char		276641	0					
ANR	277208	ArrayIndexing	p [ - 1 ]		276641	1					
ANR	277209	Identifier	p		276641	0					
ANR	277210	UnaryOperationExpression	- 1		276641	1					
ANR	277211	UnaryOperator	-		276641	0					
ANR	277212	PrimaryExpression	1		276641	1					
ANR	277213	OrExpression	p + SYMLEN - marray [ i ] . mp -> desc == MAXstring || ( p [ SYMLEN ] == '\\0' || isspace ( ( unsigned char ) p [ SYMLEN ] ) )		276641	1		||			
ANR	277214	EqualityExpression	p + SYMLEN - marray [ i ] . mp -> desc == MAXstring		276641	0		==			
ANR	277215	AdditiveExpression	p + SYMLEN - marray [ i ] . mp -> desc		276641	0		+			
ANR	277216	Identifier	p		276641	0					
ANR	277217	AdditiveExpression	SYMLEN - marray [ i ] . mp -> desc		276641	1		-			
ANR	277218	Identifier	SYMLEN		276641	0					
ANR	277219	PtrMemberAccess	marray [ i ] . mp -> desc		276641	1					
ANR	277220	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277221	ArrayIndexing	marray [ i ]		276641	0					
ANR	277222	Identifier	marray		276641	0					
ANR	277223	Identifier	i		276641	1					
ANR	277224	Identifier	mp		276641	1					
ANR	277225	Identifier	desc		276641	1					
ANR	277226	Identifier	MAXstring		276641	1					
ANR	277227	OrExpression	p [ SYMLEN ] == '\\0' || isspace ( ( unsigned char ) p [ SYMLEN ] )		276641	1		||			
ANR	277228	EqualityExpression	p [ SYMLEN ] == '\\0'		276641	0		==			
ANR	277229	ArrayIndexing	p [ SYMLEN ]		276641	0					
ANR	277230	Identifier	p		276641	0					
ANR	277231	Identifier	SYMLEN		276641	1					
ANR	277232	PrimaryExpression	'\\0'		276641	1					
ANR	277233	CallExpression	isspace ( ( unsigned char ) p [ SYMLEN ] )		276641	1					
ANR	277234	Callee	isspace		276641	0					
ANR	277235	Identifier	isspace		276641	0					
ANR	277236	ArgumentList	( unsigned char ) p [ SYMLEN ]		276641	1					
ANR	277237	Argument	( unsigned char ) p [ SYMLEN ]		276641	0					
ANR	277238	CastExpression	( unsigned char ) p [ SYMLEN ]		276641	0					
ANR	277239	CastTarget	unsigned char		276641	0					
ANR	277240	ArrayIndexing	p [ SYMLEN ]		276641	1					
ANR	277241	Identifier	p		276641	0					
ANR	277242	Identifier	SYMLEN		276641	1					
ANR	277243	CompoundStatement		106:69:2855:2855	276641	1					
ANR	277244	ExpressionStatement	"( void ) fprintf ( stderr , ""*** Possible binary test for text type\\n"" )"	639:6:16870:16948	276641	0	True				
ANR	277245	CastExpression	"( void ) fprintf ( stderr , ""*** Possible binary test for text type\\n"" )"		276641	0					
ANR	277246	CastTarget	void		276641	0					
ANR	277247	CallExpression	"fprintf ( stderr , ""*** Possible binary test for text type\\n"" )"		276641	1					
ANR	277248	Callee	fprintf		276641	0					
ANR	277249	Identifier	fprintf		276641	0					
ANR	277250	ArgumentList	stderr		276641	1					
ANR	277251	Argument	stderr		276641	0					
ANR	277252	Identifier	stderr		276641	0					
ANR	277253	Argument	"""*** Possible binary test for text type\\n"""		276641	1					
ANR	277254	PrimaryExpression	"""*** Possible binary test for text type\\n"""		276641	0					
ANR	277255	Statement	undef	642:1:16958:16962	276641	8	True				
ANR	277256	Statement	SYMBOL	642:7:16964:16969	276641	9	True				
ANR	277257	Statement	undef	643:1:16972:16976	276641	10	True				
ANR	277258	Statement	SYMLEN	643:7:16978:16983	276641	11	True				
ANR	277259	Condition	++ i < marraycount && marray [ i ] . mp -> cont_level != 0	646:11:17007:17056	276641	1	True				
ANR	277260	AndExpression	++ i < marraycount && marray [ i ] . mp -> cont_level != 0		276641	0		&&			
ANR	277261	RelationalExpression	++ i < marraycount		276641	0		<			
ANR	277262	UnaryExpression	++ i		276641	0					
ANR	277263	IncDec	++		276641	0					
ANR	277264	Identifier	i		276641	1					
ANR	277265	Identifier	marraycount		276641	1					
ANR	277266	EqualityExpression	marray [ i ] . mp -> cont_level != 0		276641	1		!=			
ANR	277267	PtrMemberAccess	marray [ i ] . mp -> cont_level		276641	0					
ANR	277268	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277269	ArrayIndexing	marray [ i ]		276641	0					
ANR	277270	Identifier	marray		276641	0					
ANR	277271	Identifier	i		276641	1					
ANR	277272	Identifier	mp		276641	1					
ANR	277273	Identifier	cont_level		276641	1					
ANR	277274	PrimaryExpression	0		276641	1					
ANR	277275	ExpressionStatement	"qsort ( marray , marraycount , sizeof ( * marray ) , apprentice_sort )"	649:1:17065:17127	276641	15	True				
ANR	277276	CallExpression	"qsort ( marray , marraycount , sizeof ( * marray ) , apprentice_sort )"		276641	0					
ANR	277277	Callee	qsort		276641	0					
ANR	277278	Identifier	qsort		276641	0					
ANR	277279	ArgumentList	marray		276641	1					
ANR	277280	Argument	marray		276641	0					
ANR	277281	Identifier	marray		276641	0					
ANR	277282	Argument	marraycount		276641	1					
ANR	277283	Identifier	marraycount		276641	0					
ANR	277284	Argument	sizeof ( * marray )		276641	2					
ANR	277285	SizeofExpression	sizeof ( * marray )		276641	0					
ANR	277286	Sizeof	sizeof		276641	0					
ANR	277287	UnaryOperationExpression	* marray		276641	1					
ANR	277288	UnaryOperator	*		276641	0					
ANR	277289	Identifier	marray		276641	1					
ANR	277290	Argument	apprentice_sort		276641	3					
ANR	277291	Identifier	apprentice_sort		276641	0					
ANR	277292	ForStatement	for ( i = 0 ; i < marraycount ; i ++ )		276641	16					
ANR	277293	ForInit	i = 0 ;	654:6:17216:17221	276641	0	True				
ANR	277294	AssignmentExpression	i = 0		276641	0		=			
ANR	277295	Identifier	i		276641	0					
ANR	277296	PrimaryExpression	0		276641	1					
ANR	277297	Condition	i < marraycount	654:13:17223:17237	276641	1	True				
ANR	277298	RelationalExpression	i < marraycount		276641	0		<			
ANR	277299	Identifier	i		276641	0					
ANR	277300	Identifier	marraycount		276641	1					
ANR	277301	PostIncDecOperationExpression	i ++	654:30:17240:17242	276641	2	True				
ANR	277302	Identifier	i		276641	0					
ANR	277303	IncDec	++		276641	1					
ANR	277304	CompoundStatement		122:35:3238:3238	276641	3					
ANR	277305	IfStatement	if ( marray [ i ] . mp -> cont_level == 0 && marray [ i ] . mp -> type == FILE_DEFAULT )		276641	0					
ANR	277306	Condition	marray [ i ] . mp -> cont_level == 0 && marray [ i ] . mp -> type == FILE_DEFAULT	655:6:17253:17325	276641	0	True				
ANR	277307	AndExpression	marray [ i ] . mp -> cont_level == 0 && marray [ i ] . mp -> type == FILE_DEFAULT		276641	0		&&			
ANR	277308	EqualityExpression	marray [ i ] . mp -> cont_level == 0		276641	0		==			
ANR	277309	PtrMemberAccess	marray [ i ] . mp -> cont_level		276641	0					
ANR	277310	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277311	ArrayIndexing	marray [ i ]		276641	0					
ANR	277312	Identifier	marray		276641	0					
ANR	277313	Identifier	i		276641	1					
ANR	277314	Identifier	mp		276641	1					
ANR	277315	Identifier	cont_level		276641	1					
ANR	277316	PrimaryExpression	0		276641	1					
ANR	277317	EqualityExpression	marray [ i ] . mp -> type == FILE_DEFAULT		276641	1		==			
ANR	277318	PtrMemberAccess	marray [ i ] . mp -> type		276641	0					
ANR	277319	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277320	ArrayIndexing	marray [ i ]		276641	0					
ANR	277321	Identifier	marray		276641	0					
ANR	277322	Identifier	i		276641	1					
ANR	277323	Identifier	mp		276641	1					
ANR	277324	Identifier	type		276641	1					
ANR	277325	Identifier	FILE_DEFAULT		276641	1					
ANR	277326	CompoundStatement		124:42:3321:3321	276641	1					
ANR	277327	WhileStatement	while ( ++ i < marraycount )		276641	0					
ANR	277328	Condition	++ i < marraycount	657:10:17340:17356	276641	0	True				
ANR	277329	RelationalExpression	++ i < marraycount		276641	0		<			
ANR	277330	UnaryExpression	++ i		276641	0					
ANR	277331	IncDec	++		276641	0					
ANR	277332	Identifier	i		276641	1					
ANR	277333	Identifier	marraycount		276641	1					
ANR	277334	CompoundStatement		125:29:3352:3352	276641	1					
ANR	277335	IfStatement	if ( marray [ i ] . mp -> cont_level == 0 )		276641	0					
ANR	277336	Condition	marray [ i ] . mp -> cont_level == 0	658:8:17369:17397	276641	0	True				
ANR	277337	EqualityExpression	marray [ i ] . mp -> cont_level == 0		276641	0		==			
ANR	277338	PtrMemberAccess	marray [ i ] . mp -> cont_level		276641	0					
ANR	277339	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277340	ArrayIndexing	marray [ i ]		276641	0					
ANR	277341	Identifier	marray		276641	0					
ANR	277342	Identifier	i		276641	1					
ANR	277343	Identifier	mp		276641	1					
ANR	277344	Identifier	cont_level		276641	1					
ANR	277345	PrimaryExpression	0		276641	1					
ANR	277346	CompoundStatement		126:39:3393:3393	276641	1					
ANR	277347	BreakStatement	break ;	659:5:17407:17412	276641	0	True				
ANR	277348	IfStatement	if ( i != marraycount )		276641	1					
ANR	277349	Condition	i != marraycount	662:7:17432:17447	276641	0	True				
ANR	277350	EqualityExpression	i != marraycount		276641	0		!=			
ANR	277351	Identifier	i		276641	0					
ANR	277352	Identifier	marraycount		276641	1					
ANR	277353	CompoundStatement		130:25:3443:3443	276641	1					
ANR	277354	ExpressionStatement	ms -> line = marray [ i ] . mp -> lineno	663:4:17456:17487	276641	0	True				
ANR	277355	AssignmentExpression	ms -> line = marray [ i ] . mp -> lineno		276641	0		=			
ANR	277356	PtrMemberAccess	ms -> line		276641	0					
ANR	277357	Identifier	ms		276641	0					
ANR	277358	Identifier	line		276641	1					
ANR	277359	PtrMemberAccess	marray [ i ] . mp -> lineno		276641	1					
ANR	277360	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277361	ArrayIndexing	marray [ i ]		276641	0					
ANR	277362	Identifier	marray		276641	0					
ANR	277363	Identifier	i		276641	1					
ANR	277364	Identifier	mp		276641	1					
ANR	277365	Identifier	lineno		276641	1					
ANR	277366	ExpressionStatement	"file_magwarn ( ms , ""level 0 \\""default\\"" did not sort last"" )"	664:4:17510:17568	276641	1	True				
ANR	277367	CallExpression	"file_magwarn ( ms , ""level 0 \\""default\\"" did not sort last"" )"		276641	0					
ANR	277368	Callee	file_magwarn		276641	0					
ANR	277369	Identifier	file_magwarn		276641	0					
ANR	277370	ArgumentList	ms		276641	1					
ANR	277371	Argument	ms		276641	0					
ANR	277372	Identifier	ms		276641	0					
ANR	277373	Argument	"""level 0 \\""default\\"" did not sort last"""		276641	1					
ANR	277374	PrimaryExpression	"""level 0 \\""default\\"" did not sort last"""		276641	0					
ANR	277375	BreakStatement	break ;	666:3:17578:17583	276641	2	True				
ANR	277376	ForStatement	for ( i = 0 ; i < marraycount ; i ++ )		276641	17					
ANR	277377	ForInit	i = 0 ;	670:6:17599:17604	276641	0	True				
ANR	277378	AssignmentExpression	i = 0		276641	0		=			
ANR	277379	Identifier	i		276641	0					
ANR	277380	PrimaryExpression	0		276641	1					
ANR	277381	Condition	i < marraycount	670:13:17606:17620	276641	1	True				
ANR	277382	RelationalExpression	i < marraycount		276641	0		<			
ANR	277383	Identifier	i		276641	0					
ANR	277384	Identifier	marraycount		276641	1					
ANR	277385	PostIncDecOperationExpression	i ++	670:30:17623:17625	276641	2	True				
ANR	277386	Identifier	i		276641	0					
ANR	277387	IncDec	++		276641	1					
ANR	277388	CompoundStatement		138:35:3621:3621	276641	3					
ANR	277389	ExpressionStatement	mentrycount += marray [ i ] . cont_count	671:2:17632:17667	276641	0	True				
ANR	277390	AssignmentExpression	mentrycount += marray [ i ] . cont_count		276641	0		+=			
ANR	277391	Identifier	mentrycount		276641	0					
ANR	277392	MemberAccess	marray [ i ] . cont_count		276641	1					
ANR	277393	ArrayIndexing	marray [ i ]		276641	0					
ANR	277394	Identifier	marray		276641	0					
ANR	277395	Identifier	i		276641	1					
ANR	277396	Identifier	cont_count		276641	1					
ANR	277397	IfStatement	if ( ! ( * magicp = malloc ( 1 + ( sizeof ( * * magicp ) * mentrycount ) ) ) )		276641	18					
ANR	277398	Condition	! ( * magicp = malloc ( 1 + ( sizeof ( * * magicp ) * mentrycount ) ) )	674:5:17678:17736	276641	0	True				
ANR	277399	UnaryOperationExpression	! ( * magicp = malloc ( 1 + ( sizeof ( * * magicp ) * mentrycount ) ) )		276641	0					
ANR	277400	UnaryOperator	!		276641	0					
ANR	277401	AssignmentExpression	* magicp = malloc ( 1 + ( sizeof ( * * magicp ) * mentrycount ) )		276641	1		=			
ANR	277402	UnaryOperationExpression	* magicp		276641	0					
ANR	277403	UnaryOperator	*		276641	0					
ANR	277404	Identifier	magicp		276641	1					
ANR	277405	CallExpression	malloc ( 1 + ( sizeof ( * * magicp ) * mentrycount ) )		276641	1					
ANR	277406	Callee	malloc		276641	0					
ANR	277407	Identifier	malloc		276641	0					
ANR	277408	ArgumentList	1 + ( sizeof ( * * magicp ) * mentrycount )		276641	1					
ANR	277409	Argument	1 + ( sizeof ( * * magicp ) * mentrycount )		276641	0					
ANR	277410	AdditiveExpression	1 + ( sizeof ( * * magicp ) * mentrycount )		276641	0		+			
ANR	277411	PrimaryExpression	1		276641	0					
ANR	277412	MultiplicativeExpression	sizeof ( * * magicp ) * mentrycount		276641	1		*			
ANR	277413	SizeofExpression	sizeof ( * * magicp )		276641	0					
ANR	277414	Sizeof	sizeof		276641	0					
ANR	277415	UnaryOperationExpression	* * magicp		276641	1					
ANR	277416	UnaryOperator	*		276641	0					
ANR	277417	UnaryOperationExpression	* magicp		276641	1					
ANR	277418	UnaryOperator	*		276641	0					
ANR	277419	Identifier	magicp		276641	1					
ANR	277420	Identifier	mentrycount		276641	1					
ANR	277421	CompoundStatement		142:66:3732:3732	276641	1					
ANR	277422	ExpressionStatement	"file_oomem ( ms , sizeof ( * * magicp ) * mentrycount )"	675:2:17743:17791	276641	0	True				
ANR	277423	CallExpression	"file_oomem ( ms , sizeof ( * * magicp ) * mentrycount )"		276641	0					
ANR	277424	Callee	file_oomem		276641	0					
ANR	277425	Identifier	file_oomem		276641	0					
ANR	277426	ArgumentList	ms		276641	1					
ANR	277427	Argument	ms		276641	0					
ANR	277428	Identifier	ms		276641	0					
ANR	277429	Argument	sizeof ( * * magicp ) * mentrycount		276641	1					
ANR	277430	MultiplicativeExpression	sizeof ( * * magicp ) * mentrycount		276641	0		*			
ANR	277431	SizeofExpression	sizeof ( * * magicp )		276641	0					
ANR	277432	Sizeof	sizeof		276641	0					
ANR	277433	UnaryOperationExpression	* * magicp		276641	1					
ANR	277434	UnaryOperator	*		276641	0					
ANR	277435	UnaryOperationExpression	* magicp		276641	1					
ANR	277436	UnaryOperator	*		276641	0					
ANR	277437	Identifier	magicp		276641	1					
ANR	277438	Identifier	mentrycount		276641	1					
ANR	277439	ExpressionStatement	errs ++	676:2:17795:17801	276641	1	True				
ANR	277440	PostIncDecOperationExpression	errs ++		276641	0					
ANR	277441	Identifier	errs		276641	0					
ANR	277442	IncDec	++		276641	1					
ANR	277443	GotoStatement	goto out ;	677:2:17805:17813	276641	2	True				
ANR	277444	Identifier	out		276641	0					
ANR	277445	ExpressionStatement	mentrycount = 0	680:1:17820:17835	276641	19	True				
ANR	277446	AssignmentExpression	mentrycount = 0		276641	0		=			
ANR	277447	Identifier	mentrycount		276641	0					
ANR	277448	PrimaryExpression	0		276641	1					
ANR	277449	ForStatement	for ( i = 0 ; i < marraycount ; i ++ )		276641	20					
ANR	277450	ForInit	i = 0 ;	681:6:17843:17848	276641	0	True				
ANR	277451	AssignmentExpression	i = 0		276641	0		=			
ANR	277452	Identifier	i		276641	0					
ANR	277453	PrimaryExpression	0		276641	1					
ANR	277454	Condition	i < marraycount	681:13:17850:17864	276641	1	True				
ANR	277455	RelationalExpression	i < marraycount		276641	0		<			
ANR	277456	Identifier	i		276641	0					
ANR	277457	Identifier	marraycount		276641	1					
ANR	277458	PostIncDecOperationExpression	i ++	681:30:17867:17869	276641	2	True				
ANR	277459	Identifier	i		276641	0					
ANR	277460	IncDec	++		276641	1					
ANR	277461	CompoundStatement		149:35:3865:3865	276641	3					
ANR	277462	ExpressionStatement	"( void ) memcpy ( * magicp + mentrycount , marray [ i ] . mp , marray [ i ] . cont_count * sizeof ( * * magicp ) )"	682:2:17876:17974	276641	0	True				
ANR	277463	CastExpression	"( void ) memcpy ( * magicp + mentrycount , marray [ i ] . mp , marray [ i ] . cont_count * sizeof ( * * magicp ) )"		276641	0					
ANR	277464	CastTarget	void		276641	0					
ANR	277465	CallExpression	"memcpy ( * magicp + mentrycount , marray [ i ] . mp , marray [ i ] . cont_count * sizeof ( * * magicp ) )"		276641	1					
ANR	277466	Callee	memcpy		276641	0					
ANR	277467	Identifier	memcpy		276641	0					
ANR	277468	ArgumentList	* magicp + mentrycount		276641	1					
ANR	277469	Argument	* magicp + mentrycount		276641	0					
ANR	277470	AdditiveExpression	* magicp + mentrycount		276641	0		+			
ANR	277471	UnaryOperationExpression	* magicp		276641	0					
ANR	277472	UnaryOperator	*		276641	0					
ANR	277473	Identifier	magicp		276641	1					
ANR	277474	Identifier	mentrycount		276641	1					
ANR	277475	Argument	marray [ i ] . mp		276641	1					
ANR	277476	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277477	ArrayIndexing	marray [ i ]		276641	0					
ANR	277478	Identifier	marray		276641	0					
ANR	277479	Identifier	i		276641	1					
ANR	277480	Identifier	mp		276641	1					
ANR	277481	Argument	marray [ i ] . cont_count * sizeof ( * * magicp )		276641	2					
ANR	277482	MultiplicativeExpression	marray [ i ] . cont_count * sizeof ( * * magicp )		276641	0		*			
ANR	277483	MemberAccess	marray [ i ] . cont_count		276641	0					
ANR	277484	ArrayIndexing	marray [ i ]		276641	0					
ANR	277485	Identifier	marray		276641	0					
ANR	277486	Identifier	i		276641	1					
ANR	277487	Identifier	cont_count		276641	1					
ANR	277488	SizeofExpression	sizeof ( * * magicp )		276641	1					
ANR	277489	Sizeof	sizeof		276641	0					
ANR	277490	UnaryOperationExpression	* * magicp		276641	1					
ANR	277491	UnaryOperator	*		276641	0					
ANR	277492	UnaryOperationExpression	* magicp		276641	1					
ANR	277493	UnaryOperator	*		276641	0					
ANR	277494	Identifier	magicp		276641	1					
ANR	277495	ExpressionStatement	mentrycount += marray [ i ] . cont_count	684:2:17978:18013	276641	1	True				
ANR	277496	AssignmentExpression	mentrycount += marray [ i ] . cont_count		276641	0		+=			
ANR	277497	Identifier	mentrycount		276641	0					
ANR	277498	MemberAccess	marray [ i ] . cont_count		276641	1					
ANR	277499	ArrayIndexing	marray [ i ]		276641	0					
ANR	277500	Identifier	marray		276641	0					
ANR	277501	Identifier	i		276641	1					
ANR	277502	Identifier	cont_count		276641	1					
ANR	277503	Label	out :	686:0:18018:18021	276641	21	True				
ANR	277504	Identifier	out		276641	0					
ANR	277505	ForStatement	for ( i = 0 ; i < marraycount ; i ++ )		276641	22					
ANR	277506	ForInit	i = 0 ;	687:6:18029:18034	276641	0	True				
ANR	277507	AssignmentExpression	i = 0		276641	0		=			
ANR	277508	Identifier	i		276641	0					
ANR	277509	PrimaryExpression	0		276641	1					
ANR	277510	Condition	i < marraycount	687:13:18036:18050	276641	1	True				
ANR	277511	RelationalExpression	i < marraycount		276641	0		<			
ANR	277512	Identifier	i		276641	0					
ANR	277513	Identifier	marraycount		276641	1					
ANR	277514	PostIncDecOperationExpression	i ++	687:30:18053:18055	276641	2	True				
ANR	277515	Identifier	i		276641	0					
ANR	277516	IncDec	++		276641	1					
ANR	277517	CompoundStatement		155:35:4051:4051	276641	3					
ANR	277518	ExpressionStatement	free ( marray [ i ] . mp )	688:2:18062:18081	276641	0	True				
ANR	277519	CallExpression	free ( marray [ i ] . mp )		276641	0					
ANR	277520	Callee	free		276641	0					
ANR	277521	Identifier	free		276641	0					
ANR	277522	ArgumentList	marray [ i ] . mp		276641	1					
ANR	277523	Argument	marray [ i ] . mp		276641	0					
ANR	277524	MemberAccess	marray [ i ] . mp		276641	0					
ANR	277525	ArrayIndexing	marray [ i ]		276641	0					
ANR	277526	Identifier	marray		276641	0					
ANR	277527	Identifier	i		276641	1					
ANR	277528	Identifier	mp		276641	1					
ANR	277529	ExpressionStatement	free ( marray )	690:1:18087:18100	276641	23	True				
ANR	277530	CallExpression	free ( marray )		276641	0					
ANR	277531	Callee	free		276641	0					
ANR	277532	Identifier	free		276641	0					
ANR	277533	ArgumentList	marray		276641	1					
ANR	277534	Argument	marray		276641	0					
ANR	277535	Identifier	marray		276641	0					
ANR	277536	IfStatement	if ( errs )		276641	24					
ANR	277537	Condition	errs	691:5:18107:18110	276641	0	True				
ANR	277538	Identifier	errs		276641	0					
ANR	277539	CompoundStatement		159:11:4106:4106	276641	1					
ANR	277540	ExpressionStatement	* magicp = NULL	692:2:18117:18131	276641	0	True				
ANR	277541	AssignmentExpression	* magicp = NULL		276641	0		=			
ANR	277542	UnaryOperationExpression	* magicp		276641	0					
ANR	277543	UnaryOperator	*		276641	0					
ANR	277544	Identifier	magicp		276641	1					
ANR	277545	Identifier	NULL		276641	1					
ANR	277546	ExpressionStatement	* nmagicp = 0	693:2:18135:18147	276641	1	True				
ANR	277547	AssignmentExpression	* nmagicp = 0		276641	0		=			
ANR	277548	UnaryOperationExpression	* nmagicp		276641	0					
ANR	277549	UnaryOperator	*		276641	0					
ANR	277550	Identifier	nmagicp		276641	1					
ANR	277551	PrimaryExpression	0		276641	1					
ANR	277552	ReturnStatement	return errs ;	694:2:18151:18162	276641	2	True				
ANR	277553	Identifier	errs		276641	0					
ANR	277554	ExpressionStatement	* nmagicp = mentrycount	696:1:18168:18190	276641	25	True				
ANR	277555	AssignmentExpression	* nmagicp = mentrycount		276641	0		=			
ANR	277556	UnaryOperationExpression	* nmagicp		276641	0					
ANR	277557	UnaryOperator	*		276641	0					
ANR	277558	Identifier	nmagicp		276641	1					
ANR	277559	Identifier	mentrycount		276641	1					
ANR	277560	ReturnStatement	return 0 ;	697:1:18193:18201	276641	26	True				
ANR	277561	PrimaryExpression	0		276641	0					
ANR	277562	ReturnType	static int		276641	1					
ANR	277563	Identifier	apprentice_load		276641	2					
ANR	277564	ParameterList	"RMagic * ms , struct r_magic * * magicp , ut32 * nmagicp , const char * fn , int action"		276641	3					
ANR	277565	Parameter	RMagic * ms	533:27:13926:13935	276641	0	True				
ANR	277566	ParameterType	RMagic *		276641	0					
ANR	277567	Identifier	ms		276641	1					
ANR	277568	Parameter	struct r_magic * * magicp	533:39:13938:13960	276641	1	True				
ANR	277569	ParameterType	struct r_magic * *		276641	0					
ANR	277570	Identifier	magicp		276641	1					
ANR	277571	Parameter	ut32 * nmagicp	533:64:13963:13975	276641	2	True				
ANR	277572	ParameterType	ut32 *		276641	0					
ANR	277573	Identifier	nmagicp		276641	1					
ANR	277574	Parameter	const char * fn	533:79:13978:13991	276641	3	True				
ANR	277575	ParameterType	const char *		276641	0					
ANR	277576	Identifier	fn		276641	1					
ANR	277577	Parameter	int action	533:95:13994:14003	276641	4	True				
ANR	277578	ParameterType	int		276641	0					
ANR	277579	Identifier	action		276641	1					
ANR	277580	CFGEntryNode	ENTRY		276641		True				
ANR	277581	CFGExitNode	EXIT		276641		True				
ANR	277582	Symbol	marray		276641						
ANR	277583	Symbol	errs		276641						
ANR	277584	Symbol	subfn		276641						
ANR	277585	Symbol	* * marray [ i ] . mp		276641						
ANR	277586	Symbol	& marray		276641						
ANR	277587	Symbol	* marray		276641						
ANR	277588	Symbol	marray [ i ] . mp -> flag		276641						
ANR	277589	Symbol	st . st_mode		276641						
ANR	277590	Symbol	& st		276641						
ANR	277591	Symbol	FILE_CHECK		276641						
ANR	277592	Symbol	* marray [ i ] . mp -> mimetype		276641						
ANR	277593	Symbol	dir		276641						
ANR	277594	Symbol	usg_hdr		276641						
ANR	277595	Symbol	* nmagicp		276641						
ANR	277596	Symbol	marray [ i ] . mp		276641						
ANR	277597	Symbol	hdir		276641						
ANR	277598	Symbol	* * magicp		276641						
ANR	277599	Symbol	action		276641						
ANR	277600	Symbol	FindFirstFileW		276641						
ANR	277601	Symbol	& errs		276641						
ANR	277602	Symbol	* * i		276641						
ANR	277603	Symbol	NULL		276641						
ANR	277604	Symbol	nmagicp		276641						
ANR	277605	Symbol	marray [ i ] . mp -> cont_level		276641						
ANR	277606	Symbol	ms		276641						
ANR	277607	Symbol	BINTEST		276641						
ANR	277608	Symbol	FILE_DEFAULT		276641						
ANR	277609	Symbol	* * marray		276641						
ANR	277610	Symbol	isspace		276641						
ANR	277611	Symbol	* starttest		276641						
ANR	277612	Symbol	stderr		276641						
ANR	277613	Symbol	cfname		276641						
ANR	277614	Symbol	entry		276641						
ANR	277615	Symbol	marray [ starttest ] . mp		276641						
ANR	277616	Symbol	* * * marray		276641						
ANR	277617	Symbol	strstr		276641						
ANR	277618	Symbol	* * * i		276641						
ANR	277619	Symbol	ms -> flags		276641						
ANR	277620	Symbol	apprentice_sort		276641						
ANR	277621	Symbol	* SYMLEN		276641						
ANR	277622	Symbol	SYMLEN		276641						
ANR	277623	Symbol	marray [ i ] . mp -> type		276641						
ANR	277624	Symbol	maxmagic		276641						
ANR	277625	Symbol	r_sandbox_enable		276641						
ANR	277626	Symbol	fn		276641						
ANR	277627	Symbol	wcpath		276641						
ANR	277628	Symbol	r_utf16_to_utf8		276641						
ANR	277629	Symbol	calloc		276641						
ANR	277630	Symbol	entry . cFileName		276641						
ANR	277631	Symbol	* ms		276641						
ANR	277632	Symbol	starttest		276641						
ANR	277633	Symbol	r_utf8_to_utf16		276641						
ANR	277634	Symbol	marraycount		276641						
ANR	277635	Symbol	marray [ i ] . mp -> lineno		276641						
ANR	277636	Symbol	R_MAGIC_DEBUG		276641						
ANR	277637	Symbol	* marray [ i ] . mp		276641						
ANR	277638	Symbol	* magicp		276641						
ANR	277639	Symbol	st		276641						
ANR	277640	Symbol	malloc		276641						
ANR	277641	Symbol	stat		276641						
ANR	277642	Symbol	marray [ i ] . mp -> desc		276641						
ANR	277643	Symbol	magicp		276641						
ANR	277644	Symbol	d		276641						
ANR	277645	Symbol	marray [ i ] . cont_count		276641						
ANR	277646	Symbol	i		276641						
ANR	277647	Symbol	r_sandbox_check_path		276641						
ANR	277648	Symbol	ms -> line		276641						
ANR	277649	Symbol	MAXMAGIS		276641						
ANR	277650	Symbol	INVALID_HANDLE_VALUE		276641						
ANR	277651	Symbol	MAXstring		276641						
ANR	277652	Symbol	FindNextFileW		276641						
ANR	277653	Symbol	& marraycount		276641						
ANR	277654	Symbol	p		276641						
ANR	277655	Symbol	& entry		276641						
ANR	277656	Symbol	S_ISREG		276641						
ANR	277657	Symbol	* i		276641						
ANR	277658	Symbol	* marray [ i ] . mp -> desc		276641						
ANR	277659	Symbol	char		276641						
ANR	277660	Symbol	S_ISDIR		276641						
ANR	277661	Symbol	* p		276641						
ANR	277662	Symbol	mentrycount		276641						
ANR	277663	Symbol	marray [ i ] . mp -> mimetype		276641						
ANR	277664	Symbol	R_MAGIC_CHECK		276641						
ANR	277665	Function	file_signextend	703:0:18270:19584							
ANR	277666	FunctionDef	"file_signextend (RMagic * ms , struct r_magic * m , ut64 v)"		277665	0					
ANR	277667	CompoundStatement		703:60:18330:19584	277665	0					
ANR	277668	IfStatement	if ( ! ( m -> flag & UNSIGNED ) )		277665	0					
ANR	277669	Condition	! ( m -> flag & UNSIGNED )	704:5:18337:18357	277665	0	True				
ANR	277670	UnaryOperationExpression	! ( m -> flag & UNSIGNED )		277665	0					
ANR	277671	UnaryOperator	!		277665	0					
ANR	277672	BitAndExpression	m -> flag & UNSIGNED		277665	1		&			
ANR	277673	PtrMemberAccess	m -> flag		277665	0					
ANR	277674	Identifier	m		277665	0					
ANR	277675	Identifier	flag		277665	1					
ANR	277676	Identifier	UNSIGNED		277665	1					
ANR	277677	CompoundStatement		2:28:29:29	277665	1					
ANR	277678	SwitchStatement	switch ( m -> type )		277665	0					
ANR	277679	Condition	m -> type	705:10:18372:18378	277665	0	True				
ANR	277680	PtrMemberAccess	m -> type		277665	0					
ANR	277681	Identifier	m		277665	0					
ANR	277682	Identifier	type		277665	1					
ANR	277683	CompoundStatement		3:19:50:50	277665	1					
ANR	277684	Label	case FILE_BYTE :	711:2:18534:18548	277665	0	True				
ANR	277685	Identifier	FILE_BYTE		277665	0					
ANR	277686	ExpressionStatement	v = ( char ) v	712:3:18553:18565	277665	1	True				
ANR	277687	AssignmentExpression	v = ( char ) v		277665	0		=			
ANR	277688	Identifier	v		277665	0					
ANR	277689	CastExpression	( char ) v		277665	1					
ANR	277690	CastTarget	char		277665	0					
ANR	277691	Identifier	v		277665	1					
ANR	277692	BreakStatement	break ;	713:3:18570:18575	277665	2	True				
ANR	277693	Label	case FILE_SHORT :	714:2:18579:18594	277665	3	True				
ANR	277694	Identifier	FILE_SHORT		277665	0					
ANR	277695	Label	case FILE_BESHORT :	715:2:18598:18615	277665	4	True				
ANR	277696	Identifier	FILE_BESHORT		277665	0					
ANR	277697	Label	case FILE_LESHORT :	716:2:18619:18636	277665	5	True				
ANR	277698	Identifier	FILE_LESHORT		277665	0					
ANR	277699	ExpressionStatement	v = ( short ) v	717:3:18641:18654	277665	6	True				
ANR	277700	AssignmentExpression	v = ( short ) v		277665	0		=			
ANR	277701	Identifier	v		277665	0					
ANR	277702	CastExpression	( short ) v		277665	1					
ANR	277703	CastTarget	short		277665	0					
ANR	277704	Identifier	v		277665	1					
ANR	277705	BreakStatement	break ;	718:3:18659:18664	277665	7	True				
ANR	277706	Label	case FILE_DATE :	719:2:18668:18682	277665	8	True				
ANR	277707	Identifier	FILE_DATE		277665	0					
ANR	277708	Label	case FILE_BEDATE :	720:2:18686:18702	277665	9	True				
ANR	277709	Identifier	FILE_BEDATE		277665	0					
ANR	277710	Label	case FILE_LEDATE :	721:2:18706:18722	277665	10	True				
ANR	277711	Identifier	FILE_LEDATE		277665	0					
ANR	277712	Label	case FILE_MEDATE :	722:2:18726:18742	277665	11	True				
ANR	277713	Identifier	FILE_MEDATE		277665	0					
ANR	277714	Label	case FILE_LDATE :	723:2:18746:18761	277665	12	True				
ANR	277715	Identifier	FILE_LDATE		277665	0					
ANR	277716	Label	case FILE_BELDATE :	724:2:18765:18782	277665	13	True				
ANR	277717	Identifier	FILE_BELDATE		277665	0					
ANR	277718	Label	case FILE_LELDATE :	725:2:18786:18803	277665	14	True				
ANR	277719	Identifier	FILE_LELDATE		277665	0					
ANR	277720	Label	case FILE_MELDATE :	726:2:18807:18824	277665	15	True				
ANR	277721	Identifier	FILE_MELDATE		277665	0					
ANR	277722	Label	case FILE_LONG :	727:2:18828:18842	277665	16	True				
ANR	277723	Identifier	FILE_LONG		277665	0					
ANR	277724	Label	case FILE_BELONG :	728:2:18846:18862	277665	17	True				
ANR	277725	Identifier	FILE_BELONG		277665	0					
ANR	277726	Label	case FILE_LELONG :	729:2:18866:18882	277665	18	True				
ANR	277727	Identifier	FILE_LELONG		277665	0					
ANR	277728	Label	case FILE_MELONG :	730:2:18886:18902	277665	19	True				
ANR	277729	Identifier	FILE_MELONG		277665	0					
ANR	277730	Label	case FILE_FLOAT :	731:2:18906:18921	277665	20	True				
ANR	277731	Identifier	FILE_FLOAT		277665	0					
ANR	277732	Label	case FILE_BEFLOAT :	732:2:18925:18942	277665	21	True				
ANR	277733	Identifier	FILE_BEFLOAT		277665	0					
ANR	277734	Label	case FILE_LEFLOAT :	733:2:18946:18963	277665	22	True				
ANR	277735	Identifier	FILE_LEFLOAT		277665	0					
ANR	277736	ExpressionStatement	v = ( int32_t ) v	734:3:18968:18983	277665	23	True				
ANR	277737	AssignmentExpression	v = ( int32_t ) v		277665	0		=			
ANR	277738	Identifier	v		277665	0					
ANR	277739	CastExpression	( int32_t ) v		277665	1					
ANR	277740	CastTarget	int32_t		277665	0					
ANR	277741	Identifier	v		277665	1					
ANR	277742	BreakStatement	break ;	735:3:18988:18993	277665	24	True				
ANR	277743	Label	case FILE_QUAD :	736:2:18997:19011	277665	25	True				
ANR	277744	Identifier	FILE_QUAD		277665	0					
ANR	277745	Label	case FILE_BEQUAD :	737:2:19015:19031	277665	26	True				
ANR	277746	Identifier	FILE_BEQUAD		277665	0					
ANR	277747	Label	case FILE_LEQUAD :	738:2:19035:19051	277665	27	True				
ANR	277748	Identifier	FILE_LEQUAD		277665	0					
ANR	277749	Label	case FILE_QDATE :	739:2:19055:19070	277665	28	True				
ANR	277750	Identifier	FILE_QDATE		277665	0					
ANR	277751	Label	case FILE_QLDATE :	740:2:19074:19090	277665	29	True				
ANR	277752	Identifier	FILE_QLDATE		277665	0					
ANR	277753	Label	case FILE_BEQDATE :	741:2:19094:19111	277665	30	True				
ANR	277754	Identifier	FILE_BEQDATE		277665	0					
ANR	277755	Label	case FILE_BEQLDATE :	742:2:19115:19133	277665	31	True				
ANR	277756	Identifier	FILE_BEQLDATE		277665	0					
ANR	277757	Label	case FILE_LEQDATE :	743:2:19137:19154	277665	32	True				
ANR	277758	Identifier	FILE_LEQDATE		277665	0					
ANR	277759	Label	case FILE_LEQLDATE :	744:2:19158:19176	277665	33	True				
ANR	277760	Identifier	FILE_LEQLDATE		277665	0					
ANR	277761	Label	case FILE_DOUBLE :	745:2:19180:19196	277665	34	True				
ANR	277762	Identifier	FILE_DOUBLE		277665	0					
ANR	277763	Label	case FILE_BEDOUBLE :	746:2:19200:19218	277665	35	True				
ANR	277764	Identifier	FILE_BEDOUBLE		277665	0					
ANR	277765	Label	case FILE_LEDOUBLE :	747:2:19222:19240	277665	36	True				
ANR	277766	Identifier	FILE_LEDOUBLE		277665	0					
ANR	277767	ExpressionStatement	v = ( int64_t ) v	748:3:19245:19260	277665	37	True				
ANR	277768	AssignmentExpression	v = ( int64_t ) v		277665	0		=			
ANR	277769	Identifier	v		277665	0					
ANR	277770	CastExpression	( int64_t ) v		277665	1					
ANR	277771	CastTarget	int64_t		277665	0					
ANR	277772	Identifier	v		277665	1					
ANR	277773	BreakStatement	break ;	749:3:19265:19270	277665	38	True				
ANR	277774	Label	case FILE_STRING :	750:2:19274:19290	277665	39	True				
ANR	277775	Identifier	FILE_STRING		277665	0					
ANR	277776	Label	case FILE_PSTRING :	751:2:19294:19311	277665	40	True				
ANR	277777	Identifier	FILE_PSTRING		277665	0					
ANR	277778	Label	case FILE_BESTRING16 :	752:2:19315:19335	277665	41	True				
ANR	277779	Identifier	FILE_BESTRING16		277665	0					
ANR	277780	Label	case FILE_LESTRING16 :	753:2:19339:19359	277665	42	True				
ANR	277781	Identifier	FILE_LESTRING16		277665	0					
ANR	277782	Label	case FILE_REGEX :	754:2:19363:19378	277665	43	True				
ANR	277783	Identifier	FILE_REGEX		277665	0					
ANR	277784	Label	case FILE_SEARCH :	755:2:19382:19398	277665	44	True				
ANR	277785	Identifier	FILE_SEARCH		277665	0					
ANR	277786	Label	case FILE_DEFAULT :	756:2:19402:19419	277665	45	True				
ANR	277787	Identifier	FILE_DEFAULT		277665	0					
ANR	277788	BreakStatement	break ;	757:3:19424:19429	277665	46	True				
ANR	277789	Label	default :	758:2:19433:19440	277665	47	True				
ANR	277790	Identifier	default		277665	0					
ANR	277791	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		277665	48					
ANR	277792	Condition	ms -> flags & R_MAGIC_CHECK	759:7:19449:19473	277665	0	True				
ANR	277793	BitAndExpression	ms -> flags & R_MAGIC_CHECK		277665	0		&			
ANR	277794	PtrMemberAccess	ms -> flags		277665	0					
ANR	277795	Identifier	ms		277665	0					
ANR	277796	Identifier	flags		277665	1					
ANR	277797	Identifier	R_MAGIC_CHECK		277665	1					
ANR	277798	CompoundStatement		57:34:1145:1145	277665	1					
ANR	277799	ExpressionStatement	"file_magwarn ( ms , ""cannot happen: m->type=%d\\n"" , m -> type )"	760:4:19482:19544	277665	0	True				
ANR	277800	CallExpression	"file_magwarn ( ms , ""cannot happen: m->type=%d\\n"" , m -> type )"		277665	0					
ANR	277801	Callee	file_magwarn		277665	0					
ANR	277802	Identifier	file_magwarn		277665	0					
ANR	277803	ArgumentList	ms		277665	1					
ANR	277804	Argument	ms		277665	0					
ANR	277805	Identifier	ms		277665	0					
ANR	277806	Argument	"""cannot happen: m->type=%d\\n"""		277665	1					
ANR	277807	PrimaryExpression	"""cannot happen: m->type=%d\\n"""		277665	0					
ANR	277808	Argument	m -> type		277665	2					
ANR	277809	PtrMemberAccess	m -> type		277665	0					
ANR	277810	Identifier	m		277665	0					
ANR	277811	Identifier	type		277665	1					
ANR	277812	ReturnStatement	return ~0U ;	763:3:19554:19564	277665	49	True				
ANR	277813	Identifier	~0U		277665	0					
ANR	277814	ReturnStatement	return v ;	766:1:19574:19582	277665	1	True				
ANR	277815	Identifier	v		277665	0					
ANR	277816	ReturnType	ut64		277665	1					
ANR	277817	Identifier	file_signextend		277665	2					
ANR	277818	ParameterList	"RMagic * ms , struct r_magic * m , ut64 v"		277665	3					
ANR	277819	Parameter	RMagic * ms	703:21:18291:18300	277665	0	True				
ANR	277820	ParameterType	RMagic *		277665	0					
ANR	277821	Identifier	ms		277665	1					
ANR	277822	Parameter	struct r_magic * m	703:33:18303:18319	277665	1	True				
ANR	277823	ParameterType	struct r_magic *		277665	0					
ANR	277824	Identifier	m		277665	1					
ANR	277825	Parameter	ut64 v	703:52:18322:18327	277665	2	True				
ANR	277826	ParameterType	ut64		277665	0					
ANR	277827	Identifier	v		277665	1					
ANR	277828	CFGEntryNode	ENTRY		277665		True				
ANR	277829	CFGExitNode	EXIT		277665		True				
ANR	277830	Symbol	m -> type		277665						
ANR	277831	Symbol	~0U		277665						
ANR	277832	Symbol	ms		277665						
ANR	277833	Symbol	v		277665						
ANR	277834	Symbol	UNSIGNED		277665						
ANR	277835	Symbol	* m		277665						
ANR	277836	Symbol	m -> flag		277665						
ANR	277837	Symbol	ms -> flags		277665						
ANR	277838	Symbol	m		277665						
ANR	277839	Symbol	R_MAGIC_CHECK		277665						
ANR	277840	Symbol	* ms		277665						
ANR	277841	Function	string_modifier_check	769:0:19587:20799							
ANR	277842	FunctionDef	"string_modifier_check (RMagic * ms , struct r_magic * m)"		277841	0					
ANR	277843	CompoundStatement		769:64:19651:20799	277841	0					
ANR	277844	IfStatement	if ( ( ms -> flags & R_MAGIC_CHECK ) == 0 )		277841	0					
ANR	277845	Condition	( ms -> flags & R_MAGIC_CHECK ) == 0	770:5:19658:19689	277841	0	True				
ANR	277846	EqualityExpression	( ms -> flags & R_MAGIC_CHECK ) == 0		277841	0		==			
ANR	277847	BitAndExpression	ms -> flags & R_MAGIC_CHECK		277841	0		&			
ANR	277848	PtrMemberAccess	ms -> flags		277841	0					
ANR	277849	Identifier	ms		277841	0					
ANR	277850	Identifier	flags		277841	1					
ANR	277851	Identifier	R_MAGIC_CHECK		277841	1					
ANR	277852	PrimaryExpression	0		277841	1					
ANR	277853	CompoundStatement		2:39:40:40	277841	1					
ANR	277854	ReturnStatement	return 0 ;	771:2:19696:19704	277841	0	True				
ANR	277855	PrimaryExpression	0		277841	0					
ANR	277856	SwitchStatement	switch ( m -> type )		277841	1					
ANR	277857	Condition	m -> type	774:9:19719:19725	277841	0	True				
ANR	277858	PtrMemberAccess	m -> type		277841	0					
ANR	277859	Identifier	m		277841	0					
ANR	277860	Identifier	type		277841	1					
ANR	277861	CompoundStatement		6:18:76:76	277841	1					
ANR	277862	Label	case FILE_BESTRING16 :	775:1:19731:19751	277841	0	True				
ANR	277863	Identifier	FILE_BESTRING16		277841	0					
ANR	277864	Label	case FILE_LESTRING16 :	776:1:19754:19774	277841	1	True				
ANR	277865	Identifier	FILE_LESTRING16		277841	0					
ANR	277866	IfStatement	if ( m -> str_flags != 0 )		277841	2					
ANR	277867	Condition	m -> str_flags != 0	777:6:19782:19798	277841	0	True				
ANR	277868	EqualityExpression	m -> str_flags != 0		277841	0		!=			
ANR	277869	PtrMemberAccess	m -> str_flags		277841	0					
ANR	277870	Identifier	m		277841	0					
ANR	277871	Identifier	str_flags		277841	1					
ANR	277872	PrimaryExpression	0		277841	1					
ANR	277873	CompoundStatement		9:25:149:149	277841	1					
ANR	277874	ExpressionStatement	"file_magwarn ( ms , ""no modifiers allowed for 16-bit strings\\n"" )"	778:3:19806:19874	277841	0	True				
ANR	277875	CallExpression	"file_magwarn ( ms , ""no modifiers allowed for 16-bit strings\\n"" )"		277841	0					
ANR	277876	Callee	file_magwarn		277841	0					
ANR	277877	Identifier	file_magwarn		277841	0					
ANR	277878	ArgumentList	ms		277841	1					
ANR	277879	Argument	ms		277841	0					
ANR	277880	Identifier	ms		277841	0					
ANR	277881	Argument	"""no modifiers allowed for 16-bit strings\\n"""		277841	1					
ANR	277882	PrimaryExpression	"""no modifiers allowed for 16-bit strings\\n"""		277841	0					
ANR	277883	ReturnStatement	return - 1 ;	780:3:19879:19888	277841	1	True				
ANR	277884	UnaryOperationExpression	- 1		277841	0					
ANR	277885	UnaryOperator	-		277841	0					
ANR	277886	PrimaryExpression	1		277841	1					
ANR	277887	BreakStatement	break ;	782:2:19896:19901	277841	3	True				
ANR	277888	Label	case FILE_STRING :	783:1:19904:19920	277841	4	True				
ANR	277889	Identifier	FILE_STRING		277841	0					
ANR	277890	Label	case FILE_PSTRING :	784:1:19923:19940	277841	5	True				
ANR	277891	Identifier	FILE_PSTRING		277841	0					
ANR	277892	IfStatement	if ( ( m -> str_flags & REGEX_OFFSET_START ) != 0 )		277841	6					
ANR	277893	Condition	( m -> str_flags & REGEX_OFFSET_START ) != 0	785:6:19948:19987	277841	0	True				
ANR	277894	EqualityExpression	( m -> str_flags & REGEX_OFFSET_START ) != 0		277841	0		!=			
ANR	277895	BitAndExpression	m -> str_flags & REGEX_OFFSET_START		277841	0		&			
ANR	277896	PtrMemberAccess	m -> str_flags		277841	0					
ANR	277897	Identifier	m		277841	0					
ANR	277898	Identifier	str_flags		277841	1					
ANR	277899	Identifier	REGEX_OFFSET_START		277841	1					
ANR	277900	PrimaryExpression	0		277841	1					
ANR	277901	CompoundStatement		17:48:338:338	277841	1					
ANR	277902	ExpressionStatement	"file_magwarn ( ms , ""'/%c' only allowed on regex and search\\n"" , CHAR_REGEX_OFFSET_START )"	786:3:19995:20094	277841	0	True				
ANR	277903	CallExpression	"file_magwarn ( ms , ""'/%c' only allowed on regex and search\\n"" , CHAR_REGEX_OFFSET_START )"		277841	0					
ANR	277904	Callee	file_magwarn		277841	0					
ANR	277905	Identifier	file_magwarn		277841	0					
ANR	277906	ArgumentList	ms		277841	1					
ANR	277907	Argument	ms		277841	0					
ANR	277908	Identifier	ms		277841	0					
ANR	277909	Argument	"""'/%c' only allowed on regex and search\\n"""		277841	1					
ANR	277910	PrimaryExpression	"""'/%c' only allowed on regex and search\\n"""		277841	0					
ANR	277911	Argument	CHAR_REGEX_OFFSET_START		277841	2					
ANR	277912	Identifier	CHAR_REGEX_OFFSET_START		277841	0					
ANR	277913	ReturnStatement	return - 1 ;	789:3:20099:20108	277841	1	True				
ANR	277914	UnaryOperationExpression	- 1		277841	0					
ANR	277915	UnaryOperator	-		277841	0					
ANR	277916	PrimaryExpression	1		277841	1					
ANR	277917	BreakStatement	break ;	791:2:20116:20121	277841	7	True				
ANR	277918	Label	case FILE_SEARCH :	792:1:20124:20140	277841	8	True				
ANR	277919	Identifier	FILE_SEARCH		277841	0					
ANR	277920	IfStatement	if ( m -> str_range == 0 )		277841	9					
ANR	277921	Condition	m -> str_range == 0	793:6:20148:20164	277841	0	True				
ANR	277922	EqualityExpression	m -> str_range == 0		277841	0		==			
ANR	277923	PtrMemberAccess	m -> str_range		277841	0					
ANR	277924	Identifier	m		277841	0					
ANR	277925	Identifier	str_range		277841	1					
ANR	277926	PrimaryExpression	0		277841	1					
ANR	277927	CompoundStatement		25:25:515:515	277841	1					
ANR	277928	ExpressionStatement	"file_magwarn ( ms , ""missing range; defaulting to %d\\n"" , STRING_DEFAULT_RANGE )"	794:3:20172:20282	277841	0	True				
ANR	277929	CallExpression	"file_magwarn ( ms , ""missing range; defaulting to %d\\n"" , STRING_DEFAULT_RANGE )"		277841	0					
ANR	277930	Callee	file_magwarn		277841	0					
ANR	277931	Identifier	file_magwarn		277841	0					
ANR	277932	ArgumentList	ms		277841	1					
ANR	277933	Argument	ms		277841	0					
ANR	277934	Identifier	ms		277841	0					
ANR	277935	Argument	"""missing range; defaulting to %d\\n"""		277841	1					
ANR	277936	PrimaryExpression	"""missing range; defaulting to %d\\n"""		277841	0					
ANR	277937	Argument	STRING_DEFAULT_RANGE		277841	2					
ANR	277938	Identifier	STRING_DEFAULT_RANGE		277841	0					
ANR	277939	ExpressionStatement	m -> str_range = STRING_DEFAULT_RANGE	797:3:20287:20322	277841	1	True				
ANR	277940	AssignmentExpression	m -> str_range = STRING_DEFAULT_RANGE		277841	0		=			
ANR	277941	PtrMemberAccess	m -> str_range		277841	0					
ANR	277942	Identifier	m		277841	0					
ANR	277943	Identifier	str_range		277841	1					
ANR	277944	Identifier	STRING_DEFAULT_RANGE		277841	1					
ANR	277945	ReturnStatement	return - 1 ;	798:3:20327:20336	277841	2	True				
ANR	277946	UnaryOperationExpression	- 1		277841	0					
ANR	277947	UnaryOperator	-		277841	0					
ANR	277948	PrimaryExpression	1		277841	1					
ANR	277949	BreakStatement	break ;	800:2:20344:20349	277841	10	True				
ANR	277950	Label	case FILE_REGEX :	801:1:20352:20367	277841	11	True				
ANR	277951	Identifier	FILE_REGEX		277841	0					
ANR	277952	IfStatement	if ( ( m -> str_flags & STRING_COMPACT_BLANK ) != 0 )		277841	12					
ANR	277953	Condition	( m -> str_flags & STRING_COMPACT_BLANK ) != 0	802:6:20375:20416	277841	0	True				
ANR	277954	EqualityExpression	( m -> str_flags & STRING_COMPACT_BLANK ) != 0		277841	0		!=			
ANR	277955	BitAndExpression	m -> str_flags & STRING_COMPACT_BLANK		277841	0		&			
ANR	277956	PtrMemberAccess	m -> str_flags		277841	0					
ANR	277957	Identifier	m		277841	0					
ANR	277958	Identifier	str_flags		277841	1					
ANR	277959	Identifier	STRING_COMPACT_BLANK		277841	1					
ANR	277960	PrimaryExpression	0		277841	1					
ANR	277961	CompoundStatement		34:50:767:767	277841	1					
ANR	277962	ExpressionStatement	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_BLANK )"	803:3:20424:20499	277841	0	True				
ANR	277963	CallExpression	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_BLANK )"		277841	0					
ANR	277964	Callee	file_magwarn		277841	0					
ANR	277965	Identifier	file_magwarn		277841	0					
ANR	277966	ArgumentList	ms		277841	1					
ANR	277967	Argument	ms		277841	0					
ANR	277968	Identifier	ms		277841	0					
ANR	277969	Argument	"""'/%c' not allowed on regex\\n"""		277841	1					
ANR	277970	PrimaryExpression	"""'/%c' not allowed on regex\\n"""		277841	0					
ANR	277971	Argument	CHAR_COMPACT_BLANK		277841	2					
ANR	277972	Identifier	CHAR_COMPACT_BLANK		277841	0					
ANR	277973	ReturnStatement	return - 1 ;	805:3:20504:20513	277841	1	True				
ANR	277974	UnaryOperationExpression	- 1		277841	0					
ANR	277975	UnaryOperator	-		277841	0					
ANR	277976	PrimaryExpression	1		277841	1					
ANR	277977	IfStatement	if ( ( m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK ) != 0 )		277841	13					
ANR	277978	Condition	( m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK ) != 0	807:6:20525:20575	277841	0	True				
ANR	277979	EqualityExpression	( m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK ) != 0		277841	0		!=			
ANR	277980	BitAndExpression	m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK		277841	0		&			
ANR	277981	PtrMemberAccess	m -> str_flags		277841	0					
ANR	277982	Identifier	m		277841	0					
ANR	277983	Identifier	str_flags		277841	1					
ANR	277984	Identifier	STRING_COMPACT_OPTIONAL_BLANK		277841	1					
ANR	277985	PrimaryExpression	0		277841	1					
ANR	277986	CompoundStatement		39:59:926:926	277841	1					
ANR	277987	ExpressionStatement	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_OPTIONAL_BLANK )"	808:3:20583:20667	277841	0	True				
ANR	277988	CallExpression	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_OPTIONAL_BLANK )"		277841	0					
ANR	277989	Callee	file_magwarn		277841	0					
ANR	277990	Identifier	file_magwarn		277841	0					
ANR	277991	ArgumentList	ms		277841	1					
ANR	277992	Argument	ms		277841	0					
ANR	277993	Identifier	ms		277841	0					
ANR	277994	Argument	"""'/%c' not allowed on regex\\n"""		277841	1					
ANR	277995	PrimaryExpression	"""'/%c' not allowed on regex\\n"""		277841	0					
ANR	277996	Argument	CHAR_COMPACT_OPTIONAL_BLANK		277841	2					
ANR	277997	Identifier	CHAR_COMPACT_OPTIONAL_BLANK		277841	0					
ANR	277998	ReturnStatement	return - 1 ;	810:3:20672:20681	277841	1	True				
ANR	277999	UnaryOperationExpression	- 1		277841	0					
ANR	278000	UnaryOperator	-		277841	0					
ANR	278001	PrimaryExpression	1		277841	1					
ANR	278002	BreakStatement	break ;	812:2:20689:20694	277841	14	True				
ANR	278003	Label	default :	813:1:20697:20704	277841	15	True				
ANR	278004	Identifier	default		277841	0					
ANR	278005	ExpressionStatement	"file_magwarn ( ms , ""coding error: m->type=%d\\n"" , m -> type )"	814:2:20708:20770	277841	16	True				
ANR	278006	CallExpression	"file_magwarn ( ms , ""coding error: m->type=%d\\n"" , m -> type )"		277841	0					
ANR	278007	Callee	file_magwarn		277841	0					
ANR	278008	Identifier	file_magwarn		277841	0					
ANR	278009	ArgumentList	ms		277841	1					
ANR	278010	Argument	ms		277841	0					
ANR	278011	Identifier	ms		277841	0					
ANR	278012	Argument	"""coding error: m->type=%d\\n"""		277841	1					
ANR	278013	PrimaryExpression	"""coding error: m->type=%d\\n"""		277841	0					
ANR	278014	Argument	m -> type		277841	2					
ANR	278015	PtrMemberAccess	m -> type		277841	0					
ANR	278016	Identifier	m		277841	0					
ANR	278017	Identifier	type		277841	1					
ANR	278018	ReturnStatement	return - 1 ;	816:2:20774:20783	277841	17	True				
ANR	278019	UnaryOperationExpression	- 1		277841	0					
ANR	278020	UnaryOperator	-		277841	0					
ANR	278021	PrimaryExpression	1		277841	1					
ANR	278022	ReturnStatement	return 0 ;	818:1:20789:20797	277841	2	True				
ANR	278023	PrimaryExpression	0		277841	0					
ANR	278024	ReturnType	static int		277841	1					
ANR	278025	Identifier	string_modifier_check		277841	2					
ANR	278026	ParameterList	"RMagic * ms , struct r_magic * m"		277841	3					
ANR	278027	Parameter	RMagic * ms	769:33:19620:19629	277841	0	True				
ANR	278028	ParameterType	RMagic *		277841	0					
ANR	278029	Identifier	ms		277841	1					
ANR	278030	Parameter	struct r_magic * m	769:45:19632:19648	277841	1	True				
ANR	278031	ParameterType	struct r_magic *		277841	0					
ANR	278032	Identifier	m		277841	1					
ANR	278033	CFGEntryNode	ENTRY		277841		True				
ANR	278034	CFGExitNode	EXIT		277841		True				
ANR	278035	Symbol	CHAR_COMPACT_OPTIONAL_BLANK		277841						
ANR	278036	Symbol	CHAR_COMPACT_BLANK		277841						
ANR	278037	Symbol	ms		277841						
ANR	278038	Symbol	REGEX_OFFSET_START		277841						
ANR	278039	Symbol	m -> str_flags		277841						
ANR	278040	Symbol	m -> str_range		277841						
ANR	278041	Symbol	STRING_COMPACT_OPTIONAL_BLANK		277841						
ANR	278042	Symbol	m		277841						
ANR	278043	Symbol	STRING_DEFAULT_RANGE		277841						
ANR	278044	Symbol	* ms		277841						
ANR	278045	Symbol	m -> type		277841						
ANR	278046	Symbol	STRING_COMPACT_BLANK		277841						
ANR	278047	Symbol	* m		277841						
ANR	278048	Symbol	ms -> flags		277841						
ANR	278049	Symbol	R_MAGIC_CHECK		277841						
ANR	278050	Symbol	CHAR_REGEX_OFFSET_START		277841						
ANR	278051	Function	get_op	821:0:20802:21121							
ANR	278052	FunctionDef	get_op (char c)		278051	0					
ANR	278053	CompoundStatement		821:26:20828:21121	278051	0					
ANR	278054	SwitchStatement	switch ( c )		278051	0					
ANR	278055	Condition	c	822:9:20839:20839	278051	0	True				
ANR	278056	Identifier	c		278051	0					
ANR	278057	CompoundStatement		2:12:13:13	278051	1					
ANR	278058	Label	case '&' :	823:1:20845:20853	278051	0	True				
ANR	278059	ReturnStatement	return FILE_OPAND ;	823:11:20855:20872	278051	1	True				
ANR	278060	Identifier	FILE_OPAND		278051	0					
ANR	278061	Label	case '|' :	824:1:20875:20883	278051	2	True				
ANR	278062	ReturnStatement	return FILE_OPOR ;	824:11:20885:20901	278051	3	True				
ANR	278063	Identifier	FILE_OPOR		278051	0					
ANR	278064	Label	case '^' :	825:1:20904:20912	278051	4	True				
ANR	278065	ReturnStatement	return FILE_OPXOR ;	825:11:20914:20931	278051	5	True				
ANR	278066	Identifier	FILE_OPXOR		278051	0					
ANR	278067	Label	case '+' :	826:1:20934:20942	278051	6	True				
ANR	278068	ReturnStatement	return FILE_OPADD ;	826:11:20944:20961	278051	7	True				
ANR	278069	Identifier	FILE_OPADD		278051	0					
ANR	278070	Label	case '-' :	827:1:20964:20972	278051	8	True				
ANR	278071	ReturnStatement	return FILE_OPMINUS ;	827:11:20974:20993	278051	9	True				
ANR	278072	Identifier	FILE_OPMINUS		278051	0					
ANR	278073	Label	case '*' :	828:1:20996:21004	278051	10	True				
ANR	278074	ReturnStatement	return FILE_OPMULTIPLY ;	828:11:21006:21028	278051	11	True				
ANR	278075	Identifier	FILE_OPMULTIPLY		278051	0					
ANR	278076	Label	case '/' :	829:1:21031:21039	278051	12	True				
ANR	278077	ReturnStatement	return FILE_OPDIVIDE ;	829:11:21041:21061	278051	13	True				
ANR	278078	Identifier	FILE_OPDIVIDE		278051	0					
ANR	278079	Label	case '%' :	830:1:21064:21072	278051	14	True				
ANR	278080	ReturnStatement	return FILE_OPMODULO ;	830:11:21074:21094	278051	15	True				
ANR	278081	Identifier	FILE_OPMODULO		278051	0					
ANR	278082	Label	default :	831:1:21097:21104	278051	16	True				
ANR	278083	Identifier	default		278051	0					
ANR	278084	ReturnStatement	return - 1 ;	831:11:21107:21116	278051	17	True				
ANR	278085	UnaryOperationExpression	- 1		278051	0					
ANR	278086	UnaryOperator	-		278051	0					
ANR	278087	PrimaryExpression	1		278051	1					
ANR	278088	ReturnType	static int		278051	1					
ANR	278089	Identifier	get_op		278051	2					
ANR	278090	ParameterList	char c		278051	3					
ANR	278091	Parameter	char c	821:18:20820:20825	278051	0	True				
ANR	278092	ParameterType	char		278051	0					
ANR	278093	Identifier	c		278051	1					
ANR	278094	CFGEntryNode	ENTRY		278051		True				
ANR	278095	CFGExitNode	EXIT		278051		True				
ANR	278096	Symbol	c		278051						
ANR	278097	Symbol	FILE_OPOR		278051						
ANR	278098	Symbol	FILE_OPMINUS		278051						
ANR	278099	Symbol	FILE_OPMODULO		278051						
ANR	278100	Symbol	FILE_OPMULTIPLY		278051						
ANR	278101	Symbol	FILE_OPADD		278051						
ANR	278102	Symbol	FILE_OPAND		278051						
ANR	278103	Symbol	FILE_OPDIVIDE		278051						
ANR	278104	Symbol	FILE_OPXOR		278051						
ANR	278105	Function	get_cond	835:0:21124:21593							
ANR	278106	FunctionDef	"get_cond (const char * l , const char * * t)"		278105	0					
ANR	278107	CompoundStatement		835:51:21175:21593	278105	0					
ANR	278108	IdentifierDeclStatement	const struct cond_tbl_s * p ;	836:1:21178:21204	278105	0	True				
ANR	278109	IdentifierDecl	* p		278105	0					
ANR	278110	IdentifierDeclType	const struct cond_tbl_s *		278105	0					
ANR	278111	Identifier	p		278105	1					
ANR	278112	Statement	static	837:1:21207:21212	278105	1	True				
ANR	278113	Statement	const	837:8:21214:21218	278105	2	True				
ANR	278114	ClassDefStatement	struct cond_tbl_s { char name [ 8 ] ; size_t len ; int cond ; }	837:14:21220:21283	278105	3	True				
ANR	278115	Identifier	cond_tbl_s		278105	0					
ANR	278116	Statement	cond_tbl	841:3:21285:21292	278105	4	True				
ANR	278117	Statement	[	841:11:21293:21293	278105	5	True				
ANR	278118	Statement	]	841:12:21294:21294	278105	6	True				
ANR	278119	Statement	=	841:14:21296:21296	278105	7	True				
ANR	278120	CompoundStatement		7:16:122:122	278105	8					
ANR	278121	CompoundStatement		8:2:126:126	278105	0					
ANR	278122	Statement	"""if"""	842:4:21304:21307	278105	0	True				
ANR	278123	Statement	","	842:8:21308:21308	278105	1	True				
ANR	278124	Statement	2	842:11:21311:21311	278105	2	True				
ANR	278125	Statement	","	842:12:21312:21312	278105	3	True				
ANR	278126	Statement	COND_IF	842:14:21314:21320	278105	4	True				
ANR	278127	Statement	","	842:23:21323:21323	278105	1	True				
ANR	278128	CompoundStatement		9:2:151:151	278105	2					
ANR	278129	Statement	"""elif"""	843:4:21329:21334	278105	0	True				
ANR	278130	Statement	","	843:10:21335:21335	278105	1	True				
ANR	278131	Statement	4	843:12:21337:21337	278105	2	True				
ANR	278132	Statement	","	843:13:21338:21338	278105	3	True				
ANR	278133	Statement	COND_ELIF	843:15:21340:21348	278105	4	True				
ANR	278134	Statement	","	843:26:21351:21351	278105	3	True				
ANR	278135	CompoundStatement		10:2:179:179	278105	4					
ANR	278136	Statement	"""else"""	844:4:21357:21362	278105	0	True				
ANR	278137	Statement	","	844:10:21363:21363	278105	1	True				
ANR	278138	Statement	4	844:12:21365:21365	278105	2	True				
ANR	278139	Statement	","	844:13:21366:21366	278105	3	True				
ANR	278140	Statement	COND_ELSE	844:15:21368:21376	278105	4	True				
ANR	278141	Statement	","	844:26:21379:21379	278105	5	True				
ANR	278142	CompoundStatement		11:2:207:207	278105	6					
ANR	278143	Statement	""""""	845:4:21385:21386	278105	0	True				
ANR	278144	Statement	","	845:6:21387:21387	278105	1	True				
ANR	278145	Statement	0	845:9:21390:21390	278105	2	True				
ANR	278146	Statement	","	845:10:21391:21391	278105	3	True				
ANR	278147	Statement	COND_NONE	845:12:21393:21401	278105	4	True				
ANR	278148	Statement	","	845:23:21404:21404	278105	7	True				
ANR	278149	ExpressionStatement		846:2:21408:21408	278105	9	True				
ANR	278150	ForStatement	for ( p = cond_tbl ; p -> len ; p ++ )		278105	10					
ANR	278151	ForInit	p = cond_tbl ;	848:6:21417:21429	278105	0	True				
ANR	278152	AssignmentExpression	p = cond_tbl		278105	0		=			
ANR	278153	Identifier	p		278105	0					
ANR	278154	Identifier	cond_tbl		278105	1					
ANR	278155	Condition	p -> len	848:20:21431:21436	278105	1	True				
ANR	278156	PtrMemberAccess	p -> len		278105	0					
ANR	278157	Identifier	p		278105	0					
ANR	278158	Identifier	len		278105	1					
ANR	278159	PostIncDecOperationExpression	p ++	848:28:21439:21441	278105	2	True				
ANR	278160	Identifier	p		278105	0					
ANR	278161	IncDec	++		278105	1					
ANR	278162	CompoundStatement		14:33:268:268	278105	3					
ANR	278163	IfStatement	"if ( strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( ut8 ) l [ p -> len ] ) )"		278105	0					
ANR	278164	Condition	"strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( ut8 ) l [ p -> len ] )"	849:6:21452:21516	278105	0	True				
ANR	278165	AndExpression	"strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( ut8 ) l [ p -> len ] )"		278105	0		&&			
ANR	278166	EqualityExpression	"strncmp ( l , p -> name , p -> len ) == 0"		278105	0		==			
ANR	278167	CallExpression	"strncmp ( l , p -> name , p -> len )"		278105	0					
ANR	278168	Callee	strncmp		278105	0					
ANR	278169	Identifier	strncmp		278105	0					
ANR	278170	ArgumentList	l		278105	1					
ANR	278171	Argument	l		278105	0					
ANR	278172	Identifier	l		278105	0					
ANR	278173	Argument	p -> name		278105	1					
ANR	278174	PtrMemberAccess	p -> name		278105	0					
ANR	278175	Identifier	p		278105	0					
ANR	278176	Identifier	name		278105	1					
ANR	278177	Argument	p -> len		278105	2					
ANR	278178	PtrMemberAccess	p -> len		278105	0					
ANR	278179	Identifier	p		278105	0					
ANR	278180	Identifier	len		278105	1					
ANR	278181	PrimaryExpression	0		278105	1					
ANR	278182	CallExpression	isspace ( ( ut8 ) l [ p -> len ] )		278105	1					
ANR	278183	Callee	isspace		278105	0					
ANR	278184	Identifier	isspace		278105	0					
ANR	278185	ArgumentList	( ut8 ) l [ p -> len ]		278105	1					
ANR	278186	Argument	( ut8 ) l [ p -> len ]		278105	0					
ANR	278187	CastExpression	( ut8 ) l [ p -> len ]		278105	0					
ANR	278188	CastTarget	ut8		278105	0					
ANR	278189	ArrayIndexing	l [ p -> len ]		278105	1					
ANR	278190	Identifier	l		278105	0					
ANR	278191	PtrMemberAccess	p -> len		278105	1					
ANR	278192	Identifier	p		278105	0					
ANR	278193	Identifier	len		278105	1					
ANR	278194	CompoundStatement		16:30:343:343	278105	1					
ANR	278195	IfStatement	if ( t )		278105	0					
ANR	278196	Condition	t	851:7:21528:21528	278105	0	True				
ANR	278197	Identifier	t		278105	0					
ANR	278198	CompoundStatement		17:10:355:355	278105	1					
ANR	278199	ExpressionStatement	* t = l + p -> len	852:4:21537:21552	278105	0	True				
ANR	278200	AssignmentExpression	* t = l + p -> len		278105	0		=			
ANR	278201	UnaryOperationExpression	* t		278105	0					
ANR	278202	UnaryOperator	*		278105	0					
ANR	278203	Identifier	t		278105	1					
ANR	278204	AdditiveExpression	l + p -> len		278105	1		+			
ANR	278205	Identifier	l		278105	0					
ANR	278206	PtrMemberAccess	p -> len		278105	1					
ANR	278207	Identifier	p		278105	0					
ANR	278208	Identifier	len		278105	1					
ANR	278209	BreakStatement	break ;	854:3:21562:21567	278105	1	True				
ANR	278210	ReturnStatement	return p -> cond ;	857:1:21577:21591	278105	11	True				
ANR	278211	PtrMemberAccess	p -> cond		278105	0					
ANR	278212	Identifier	p		278105	0					
ANR	278213	Identifier	cond		278105	1					
ANR	278214	ReturnType	static int		278105	1					
ANR	278215	Identifier	get_cond		278105	2					
ANR	278216	ParameterList	"const char * l , const char * * t"		278105	3					
ANR	278217	Parameter	const char * l	835:20:21144:21156	278105	0	True				
ANR	278218	ParameterType	const char *		278105	0					
ANR	278219	Identifier	l		278105	1					
ANR	278220	Parameter	const char * * t	835:35:21159:21172	278105	1	True				
ANR	278221	ParameterType	const char * *		278105	0					
ANR	278222	Identifier	t		278105	1					
ANR	278223	CFGEntryNode	ENTRY		278105		True				
ANR	278224	CFGExitNode	EXIT		278105		True				
ANR	278225	Symbol	* p -> len		278105						
ANR	278226	Symbol	isspace		278105						
ANR	278227	Symbol	cond_tbl		278105						
ANR	278228	Symbol	l		278105						
ANR	278229	Symbol	p -> cond		278105						
ANR	278230	Symbol	p		278105						
ANR	278231	Symbol	strncmp		278105						
ANR	278232	Symbol	t		278105						
ANR	278233	Symbol	* l		278105						
ANR	278234	Symbol	p -> len		278105						
ANR	278235	Symbol	* p		278105						
ANR	278236	Symbol	p -> name		278105						
ANR	278237	Symbol	* * p		278105						
ANR	278238	Symbol	* t		278105						
ANR	278239	Function	check_cond	860:0:21596:22484							
ANR	278240	FunctionDef	"check_cond (RMagic * ms , int cond , ut32 cont_level)"		278239	0					
ANR	278241	CompoundStatement		860:61:21657:22484	278239	0					
ANR	278242	IdentifierDeclStatement	int last_cond ;	861:1:21660:21673	278239	0	True				
ANR	278243	IdentifierDecl	last_cond		278239	0					
ANR	278244	IdentifierDeclType	int		278239	0					
ANR	278245	Identifier	last_cond		278239	1					
ANR	278246	ExpressionStatement	last_cond = ms -> c . li [ cont_level ] . last_cond	862:1:21676:21718	278239	1	True				
ANR	278247	AssignmentExpression	last_cond = ms -> c . li [ cont_level ] . last_cond		278239	0		=			
ANR	278248	Identifier	last_cond		278239	0					
ANR	278249	MemberAccess	ms -> c . li [ cont_level ] . last_cond		278239	1					
ANR	278250	ArrayIndexing	ms -> c . li [ cont_level ]		278239	0					
ANR	278251	MemberAccess	ms -> c . li		278239	0					
ANR	278252	PtrMemberAccess	ms -> c		278239	0					
ANR	278253	Identifier	ms		278239	0					
ANR	278254	Identifier	c		278239	1					
ANR	278255	Identifier	li		278239	1					
ANR	278256	Identifier	cont_level		278239	1					
ANR	278257	Identifier	last_cond		278239	1					
ANR	278258	SwitchStatement	switch ( cond )		278239	2					
ANR	278259	Condition	cond	864:9:21730:21733	278239	0	True				
ANR	278260	Identifier	cond		278239	0					
ANR	278261	CompoundStatement		5:15:78:78	278239	1					
ANR	278262	Label	case COND_IF :	865:1:21739:21751	278239	0	True				
ANR	278263	Identifier	COND_IF		278239	0					
ANR	278264	IfStatement	if ( last_cond != COND_NONE && last_cond != COND_ELIF )		278239	1					
ANR	278265	Condition	last_cond != COND_NONE && last_cond != COND_ELIF	866:6:21759:21806	278239	0	True				
ANR	278266	AndExpression	last_cond != COND_NONE && last_cond != COND_ELIF		278239	0		&&			
ANR	278267	EqualityExpression	last_cond != COND_NONE		278239	0		!=			
ANR	278268	Identifier	last_cond		278239	0					
ANR	278269	Identifier	COND_NONE		278239	1					
ANR	278270	EqualityExpression	last_cond != COND_ELIF		278239	1		!=			
ANR	278271	Identifier	last_cond		278239	0					
ANR	278272	Identifier	COND_ELIF		278239	1					
ANR	278273	CompoundStatement		7:56:151:151	278239	1					
ANR	278274	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278239	0					
ANR	278275	Condition	ms -> flags & R_MAGIC_CHECK	867:7:21818:21842	278239	0	True				
ANR	278276	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278239	0		&			
ANR	278277	PtrMemberAccess	ms -> flags		278239	0					
ANR	278278	Identifier	ms		278239	0					
ANR	278279	Identifier	flags		278239	1					
ANR	278280	Identifier	R_MAGIC_CHECK		278239	1					
ANR	278281	CompoundStatement		8:34:187:187	278239	1					
ANR	278282	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `if'"" )"	868:4:21851:21890	278239	0	True				
ANR	278283	CallExpression	"file_magwarn ( ms , ""syntax error: `if'"" )"		278239	0					
ANR	278284	Callee	file_magwarn		278239	0					
ANR	278285	Identifier	file_magwarn		278239	0					
ANR	278286	ArgumentList	ms		278239	1					
ANR	278287	Argument	ms		278239	0					
ANR	278288	Identifier	ms		278239	0					
ANR	278289	Argument	"""syntax error: `if'"""		278239	1					
ANR	278290	PrimaryExpression	"""syntax error: `if'"""		278239	0					
ANR	278291	ReturnStatement	return - 1 ;	870:3:21900:21909	278239	1	True				
ANR	278292	UnaryOperationExpression	- 1		278239	0					
ANR	278293	UnaryOperator	-		278239	0					
ANR	278294	PrimaryExpression	1		278239	1					
ANR	278295	ExpressionStatement	last_cond = COND_IF	872:2:21917:21936	278239	2	True				
ANR	278296	AssignmentExpression	last_cond = COND_IF		278239	0		=			
ANR	278297	Identifier	last_cond		278239	0					
ANR	278298	Identifier	COND_IF		278239	1					
ANR	278299	BreakStatement	break ;	873:2:21940:21945	278239	3	True				
ANR	278300	Label	case COND_ELIF :	874:1:21948:21962	278239	4	True				
ANR	278301	Identifier	COND_ELIF		278239	0					
ANR	278302	IfStatement	if ( last_cond != COND_IF && last_cond != COND_ELIF )		278239	5					
ANR	278303	Condition	last_cond != COND_IF && last_cond != COND_ELIF	875:6:21970:22015	278239	0	True				
ANR	278304	AndExpression	last_cond != COND_IF && last_cond != COND_ELIF		278239	0		&&			
ANR	278305	EqualityExpression	last_cond != COND_IF		278239	0		!=			
ANR	278306	Identifier	last_cond		278239	0					
ANR	278307	Identifier	COND_IF		278239	1					
ANR	278308	EqualityExpression	last_cond != COND_ELIF		278239	1		!=			
ANR	278309	Identifier	last_cond		278239	0					
ANR	278310	Identifier	COND_ELIF		278239	1					
ANR	278311	CompoundStatement		16:54:360:360	278239	1					
ANR	278312	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278239	0					
ANR	278313	Condition	ms -> flags & R_MAGIC_CHECK	876:7:22027:22051	278239	0	True				
ANR	278314	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278239	0		&			
ANR	278315	PtrMemberAccess	ms -> flags		278239	0					
ANR	278316	Identifier	ms		278239	0					
ANR	278317	Identifier	flags		278239	1					
ANR	278318	Identifier	R_MAGIC_CHECK		278239	1					
ANR	278319	CompoundStatement		17:34:396:396	278239	1					
ANR	278320	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `elif'"" )"	877:4:22060:22101	278239	0	True				
ANR	278321	CallExpression	"file_magwarn ( ms , ""syntax error: `elif'"" )"		278239	0					
ANR	278322	Callee	file_magwarn		278239	0					
ANR	278323	Identifier	file_magwarn		278239	0					
ANR	278324	ArgumentList	ms		278239	1					
ANR	278325	Argument	ms		278239	0					
ANR	278326	Identifier	ms		278239	0					
ANR	278327	Argument	"""syntax error: `elif'"""		278239	1					
ANR	278328	PrimaryExpression	"""syntax error: `elif'"""		278239	0					
ANR	278329	ReturnStatement	return - 1 ;	879:3:22111:22120	278239	1	True				
ANR	278330	UnaryOperationExpression	- 1		278239	0					
ANR	278331	UnaryOperator	-		278239	0					
ANR	278332	PrimaryExpression	1		278239	1					
ANR	278333	ExpressionStatement	last_cond = COND_ELIF	881:2:22128:22149	278239	6	True				
ANR	278334	AssignmentExpression	last_cond = COND_ELIF		278239	0		=			
ANR	278335	Identifier	last_cond		278239	0					
ANR	278336	Identifier	COND_ELIF		278239	1					
ANR	278337	BreakStatement	break ;	882:2:22153:22158	278239	7	True				
ANR	278338	Label	case COND_ELSE :	883:1:22161:22175	278239	8	True				
ANR	278339	Identifier	COND_ELSE		278239	0					
ANR	278340	IfStatement	if ( last_cond != COND_IF && last_cond != COND_ELIF )		278239	9					
ANR	278341	Condition	last_cond != COND_IF && last_cond != COND_ELIF	884:6:22183:22228	278239	0	True				
ANR	278342	AndExpression	last_cond != COND_IF && last_cond != COND_ELIF		278239	0		&&			
ANR	278343	EqualityExpression	last_cond != COND_IF		278239	0		!=			
ANR	278344	Identifier	last_cond		278239	0					
ANR	278345	Identifier	COND_IF		278239	1					
ANR	278346	EqualityExpression	last_cond != COND_ELIF		278239	1		!=			
ANR	278347	Identifier	last_cond		278239	0					
ANR	278348	Identifier	COND_ELIF		278239	1					
ANR	278349	CompoundStatement		25:54:573:573	278239	1					
ANR	278350	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278239	0					
ANR	278351	Condition	ms -> flags & R_MAGIC_CHECK	885:7:22240:22264	278239	0	True				
ANR	278352	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278239	0		&			
ANR	278353	PtrMemberAccess	ms -> flags		278239	0					
ANR	278354	Identifier	ms		278239	0					
ANR	278355	Identifier	flags		278239	1					
ANR	278356	Identifier	R_MAGIC_CHECK		278239	1					
ANR	278357	CompoundStatement		26:34:609:609	278239	1					
ANR	278358	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `else'"" )"	886:4:22273:22314	278239	0	True				
ANR	278359	CallExpression	"file_magwarn ( ms , ""syntax error: `else'"" )"		278239	0					
ANR	278360	Callee	file_magwarn		278239	0					
ANR	278361	Identifier	file_magwarn		278239	0					
ANR	278362	ArgumentList	ms		278239	1					
ANR	278363	Argument	ms		278239	0					
ANR	278364	Identifier	ms		278239	0					
ANR	278365	Argument	"""syntax error: `else'"""		278239	1					
ANR	278366	PrimaryExpression	"""syntax error: `else'"""		278239	0					
ANR	278367	ReturnStatement	return - 1 ;	888:3:22324:22333	278239	1	True				
ANR	278368	UnaryOperationExpression	- 1		278239	0					
ANR	278369	UnaryOperator	-		278239	0					
ANR	278370	PrimaryExpression	1		278239	1					
ANR	278371	ExpressionStatement	last_cond = COND_NONE	890:2:22341:22362	278239	10	True				
ANR	278372	AssignmentExpression	last_cond = COND_NONE		278239	0		=			
ANR	278373	Identifier	last_cond		278239	0					
ANR	278374	Identifier	COND_NONE		278239	1					
ANR	278375	BreakStatement	break ;	891:2:22366:22371	278239	11	True				
ANR	278376	Label	case COND_NONE :	892:1:22374:22388	278239	12	True				
ANR	278377	Identifier	COND_NONE		278239	0					
ANR	278378	ExpressionStatement	last_cond = COND_NONE	893:2:22392:22413	278239	13	True				
ANR	278379	AssignmentExpression	last_cond = COND_NONE		278239	0		=			
ANR	278380	Identifier	last_cond		278239	0					
ANR	278381	Identifier	COND_NONE		278239	1					
ANR	278382	BreakStatement	break ;	894:2:22417:22422	278239	14	True				
ANR	278383	ExpressionStatement	ms -> c . li [ cont_level ] . last_cond = last_cond	897:1:22429:22471	278239	3	True				
ANR	278384	AssignmentExpression	ms -> c . li [ cont_level ] . last_cond = last_cond		278239	0		=			
ANR	278385	MemberAccess	ms -> c . li [ cont_level ] . last_cond		278239	0					
ANR	278386	ArrayIndexing	ms -> c . li [ cont_level ]		278239	0					
ANR	278387	MemberAccess	ms -> c . li		278239	0					
ANR	278388	PtrMemberAccess	ms -> c		278239	0					
ANR	278389	Identifier	ms		278239	0					
ANR	278390	Identifier	c		278239	1					
ANR	278391	Identifier	li		278239	1					
ANR	278392	Identifier	cont_level		278239	1					
ANR	278393	Identifier	last_cond		278239	1					
ANR	278394	Identifier	last_cond		278239	1					
ANR	278395	ReturnStatement	return 0 ;	898:1:22474:22482	278239	4	True				
ANR	278396	PrimaryExpression	0		278239	0					
ANR	278397	ReturnType	static int		278239	1					
ANR	278398	Identifier	check_cond		278239	2					
ANR	278399	ParameterList	"RMagic * ms , int cond , ut32 cont_level"		278239	3					
ANR	278400	Parameter	RMagic * ms	860:22:21618:21627	278239	0	True				
ANR	278401	ParameterType	RMagic *		278239	0					
ANR	278402	Identifier	ms		278239	1					
ANR	278403	Parameter	int cond	860:34:21630:21637	278239	1	True				
ANR	278404	ParameterType	int		278239	0					
ANR	278405	Identifier	cond		278239	1					
ANR	278406	Parameter	ut32 cont_level	860:44:21640:21654	278239	2	True				
ANR	278407	ParameterType	ut32		278239	0					
ANR	278408	Identifier	cont_level		278239	1					
ANR	278409	CFGEntryNode	ENTRY		278239		True				
ANR	278410	CFGExitNode	EXIT		278239		True				
ANR	278411	Symbol	COND_NONE		278239						
ANR	278412	Symbol	COND_IF		278239						
ANR	278413	Symbol	* ms -> c		278239						
ANR	278414	Symbol	ms		278239						
ANR	278415	Symbol	* ms -> c . li		278239						
ANR	278416	Symbol	cond		278239						
ANR	278417	Symbol	ms -> c . li		278239						
ANR	278418	Symbol	* cont_level		278239						
ANR	278419	Symbol	ms -> c . li [ cont_level ] . last_cond		278239						
ANR	278420	Symbol	* ms		278239						
ANR	278421	Symbol	* * ms		278239						
ANR	278422	Symbol	COND_ELIF		278239						
ANR	278423	Symbol	cont_level		278239						
ANR	278424	Symbol	last_cond		278239						
ANR	278425	Symbol	ms -> c		278239						
ANR	278426	Symbol	ms -> flags		278239						
ANR	278427	Symbol	R_MAGIC_CHECK		278239						
ANR	278428	Function	parse	904:0:22562:30678							
ANR	278429	FunctionDef	"parse (RMagic * ms , struct r_magic_entry * * mentryp , ut32 * nmentryp , const char * line , size_t lineno , int action)"		278428	0					
ANR	278430	CompoundStatement		904:122:22684:30678	278428	0					
ANR	278431	Statement	static	905:1:22687:22692	278428	0	True				
ANR	278432	IdentifierDeclStatement	ut32 last_cont_level = 0 ;	905:8:22694:22718	278428	1	True				
ANR	278433	IdentifierDecl	last_cont_level = 0		278428	0					
ANR	278434	IdentifierDeclType	ut32		278428	0					
ANR	278435	Identifier	last_cont_level		278428	1					
ANR	278436	AssignmentExpression	last_cont_level = 0		278428	2		=			
ANR	278437	Identifier	last_cont_level		278428	0					
ANR	278438	PrimaryExpression	0		278428	1					
ANR	278439	IdentifierDeclStatement	size_t i ;	906:1:22721:22729	278428	2	True				
ANR	278440	IdentifierDecl	i		278428	0					
ANR	278441	IdentifierDeclType	size_t		278428	0					
ANR	278442	Identifier	i		278428	1					
ANR	278443	IdentifierDeclStatement	struct r_magic_entry * me ;	907:1:22732:22756	278428	3	True				
ANR	278444	IdentifierDecl	* me		278428	0					
ANR	278445	IdentifierDeclType	struct r_magic_entry *		278428	0					
ANR	278446	Identifier	me		278428	1					
ANR	278447	IdentifierDeclStatement	struct r_magic * m ;	908:1:22759:22776	278428	4	True				
ANR	278448	IdentifierDecl	* m		278428	0					
ANR	278449	IdentifierDeclType	struct r_magic *		278428	0					
ANR	278450	Identifier	m		278428	1					
ANR	278451	IdentifierDeclStatement	const char * l = line ;	909:1:22779:22799	278428	5	True				
ANR	278452	IdentifierDecl	* l = line		278428	0					
ANR	278453	IdentifierDeclType	const char *		278428	0					
ANR	278454	Identifier	l		278428	1					
ANR	278455	AssignmentExpression	* l = line		278428	2		=			
ANR	278456	Identifier	line		278428	0					
ANR	278457	Identifier	line		278428	1					
ANR	278458	IdentifierDeclStatement	char * t ;	910:1:22802:22809	278428	6	True				
ANR	278459	IdentifierDecl	* t		278428	0					
ANR	278460	IdentifierDeclType	char *		278428	0					
ANR	278461	Identifier	t		278428	1					
ANR	278462	IdentifierDeclStatement	int op ;	911:1:22812:22818	278428	7	True				
ANR	278463	IdentifierDecl	op		278428	0					
ANR	278464	IdentifierDeclType	int		278428	0					
ANR	278465	Identifier	op		278428	1					
ANR	278466	IdentifierDeclStatement	ut32 cont_level = 0 ;	912:1:22821:22840	278428	8	True				
ANR	278467	IdentifierDecl	cont_level = 0		278428	0					
ANR	278468	IdentifierDeclType	ut32		278428	0					
ANR	278469	Identifier	cont_level		278428	1					
ANR	278470	AssignmentExpression	cont_level = 0		278428	2		=			
ANR	278471	Identifier	cont_level		278428	0					
ANR	278472	PrimaryExpression	0		278428	1					
ANR	278473	ForStatement	"for ( ; * l == '>' ; l ++ , cont_level ++ )"		278428	9					
ANR	278474	Condition	* l == '>'	914:8:22851:22859	278428	0	True				
ANR	278475	EqualityExpression	* l == '>'		278428	0		==			
ANR	278476	UnaryOperationExpression	* l		278428	0					
ANR	278477	UnaryOperator	*		278428	0					
ANR	278478	Identifier	l		278428	1					
ANR	278479	PrimaryExpression	'>'		278428	1					
ANR	278480	Expression	"l ++ , cont_level ++"	914:19:22862:22878	278428	1	True				
ANR	278481	PostIncDecOperationExpression	l ++		278428	0					
ANR	278482	Identifier	l		278428	0					
ANR	278483	IncDec	++		278428	1					
ANR	278484	PostIncDecOperationExpression	cont_level ++		278428	1					
ANR	278485	Identifier	cont_level		278428	0					
ANR	278486	IncDec	++		278428	1					
ANR	278487	CompoundStatement		11:38:196:196	278428	2					
ANR	278488	ExpressionStatement		915:2:22885:22885	278428	0	True				
ANR	278489	IfStatement	if ( cont_level == 0 || cont_level > last_cont_level )		278428	10					
ANR	278490	Condition	cont_level == 0 || cont_level > last_cont_level	917:5:22895:22941	278428	0	True				
ANR	278491	OrExpression	cont_level == 0 || cont_level > last_cont_level		278428	0		||			
ANR	278492	EqualityExpression	cont_level == 0		278428	0		==			
ANR	278493	Identifier	cont_level		278428	0					
ANR	278494	PrimaryExpression	0		278428	1					
ANR	278495	RelationalExpression	cont_level > last_cont_level		278428	1		>			
ANR	278496	Identifier	cont_level		278428	0					
ANR	278497	Identifier	last_cont_level		278428	1					
ANR	278498	CompoundStatement		14:54:259:259	278428	1					
ANR	278499	IfStatement	"if ( file_check_mem ( ms , cont_level ) == - 1 )"		278428	0					
ANR	278500	Condition	"file_check_mem ( ms , cont_level ) == - 1"	918:6:22952:22988	278428	0	True				
ANR	278501	EqualityExpression	"file_check_mem ( ms , cont_level ) == - 1"		278428	0		==			
ANR	278502	CallExpression	"file_check_mem ( ms , cont_level )"		278428	0					
ANR	278503	Callee	file_check_mem		278428	0					
ANR	278504	Identifier	file_check_mem		278428	0					
ANR	278505	ArgumentList	ms		278428	1					
ANR	278506	Argument	ms		278428	0					
ANR	278507	Identifier	ms		278428	0					
ANR	278508	Argument	cont_level		278428	1					
ANR	278509	Identifier	cont_level		278428	0					
ANR	278510	UnaryOperationExpression	- 1		278428	1					
ANR	278511	UnaryOperator	-		278428	0					
ANR	278512	PrimaryExpression	1		278428	1					
ANR	278513	CompoundStatement		15:45:306:306	278428	1					
ANR	278514	ReturnStatement	return - 1 ;	919:3:22996:23005	278428	0	True				
ANR	278515	UnaryOperationExpression	- 1		278428	0					
ANR	278516	UnaryOperator	-		278428	0					
ANR	278517	PrimaryExpression	1		278428	1					
ANR	278518	ExpressionStatement	last_cont_level = cont_level	922:1:23015:23043	278428	11	True				
ANR	278519	AssignmentExpression	last_cont_level = cont_level		278428	0		=			
ANR	278520	Identifier	last_cont_level		278428	0					
ANR	278521	Identifier	cont_level		278428	1					
ANR	278522	Statement	define	923:1:23046:23051	278428	12	True				
ANR	278523	Statement	ALLOC_CHUNK	923:8:23053:23063	278428	13	True				
ANR	278524	Statement	(	923:20:23065:23065	278428	14	True				
ANR	278525	Statement	size_t	923:21:23066:23071	278428	15	True				
ANR	278526	Statement	)	923:27:23072:23072	278428	16	True				
ANR	278527	Statement	10	923:28:23073:23074	278428	17	True				
ANR	278528	Statement	define	924:1:23077:23082	278428	18	True				
ANR	278529	Statement	ALLOC_INCR	924:8:23084:23093	278428	19	True				
ANR	278530	Statement	(	924:19:23095:23095	278428	20	True				
ANR	278531	Statement	size_t	924:20:23096:23101	278428	21	True				
ANR	278532	Statement	)	924:26:23102:23102	278428	22	True				
ANR	278533	Statement	200	924:27:23103:23105	278428	23	True				
ANR	278534	IfStatement	if ( cont_level != 0 )		278428	24					
ANR	278535	Condition	cont_level != 0	925:5:23112:23126	278428	0	True				
ANR	278536	EqualityExpression	cont_level != 0		278428	0		!=			
ANR	278537	Identifier	cont_level		278428	0					
ANR	278538	PrimaryExpression	0		278428	1					
ANR	278539	CompoundStatement		22:22:444:444	278428	1					
ANR	278540	IfStatement	if ( * nmentryp == 0 )		278428	0					
ANR	278541	Condition	* nmentryp == 0	926:6:23137:23150	278428	0	True				
ANR	278542	EqualityExpression	* nmentryp == 0		278428	0		==			
ANR	278543	UnaryOperationExpression	* nmentryp		278428	0					
ANR	278544	UnaryOperator	*		278428	0					
ANR	278545	Identifier	nmentryp		278428	1					
ANR	278546	PrimaryExpression	0		278428	1					
ANR	278547	CompoundStatement		23:22:468:468	278428	1					
ANR	278548	ExpressionStatement	"file_error ( ms , 0 , ""No current entry for continuation"" )"	927:3:23158:23212	278428	0	True				
ANR	278549	CallExpression	"file_error ( ms , 0 , ""No current entry for continuation"" )"		278428	0					
ANR	278550	Callee	file_error		278428	0					
ANR	278551	Identifier	file_error		278428	0					
ANR	278552	ArgumentList	ms		278428	1					
ANR	278553	Argument	ms		278428	0					
ANR	278554	Identifier	ms		278428	0					
ANR	278555	Argument	0		278428	1					
ANR	278556	PrimaryExpression	0		278428	0					
ANR	278557	Argument	"""No current entry for continuation"""		278428	2					
ANR	278558	PrimaryExpression	"""No current entry for continuation"""		278428	0					
ANR	278559	ReturnStatement	return - 1 ;	928:3:23217:23226	278428	1	True				
ANR	278560	UnaryOperationExpression	- 1		278428	0					
ANR	278561	UnaryOperator	-		278428	0					
ANR	278562	PrimaryExpression	1		278428	1					
ANR	278563	ExpressionStatement	me = & ( * mentryp ) [ * nmentryp - 1 ]	930:2:23234:23265	278428	1	True				
ANR	278564	AssignmentExpression	me = & ( * mentryp ) [ * nmentryp - 1 ]		278428	0		=			
ANR	278565	Identifier	me		278428	0					
ANR	278566	UnaryOperationExpression	& ( * mentryp ) [ * nmentryp - 1 ]		278428	1					
ANR	278567	UnaryOperator	&		278428	0					
ANR	278568	ArrayIndexing	( * mentryp ) [ * nmentryp - 1 ]		278428	1					
ANR	278569	UnaryOperationExpression	* mentryp		278428	0					
ANR	278570	UnaryOperator	*		278428	0					
ANR	278571	Identifier	mentryp		278428	1					
ANR	278572	AdditiveExpression	* nmentryp - 1		278428	1		-			
ANR	278573	UnaryOperationExpression	* nmentryp		278428	0					
ANR	278574	UnaryOperator	*		278428	0					
ANR	278575	Identifier	nmentryp		278428	1					
ANR	278576	PrimaryExpression	1		278428	1					
ANR	278577	IfStatement	if ( me -> cont_count == me -> max_count )		278428	2					
ANR	278578	Condition	me -> cont_count == me -> max_count	931:6:23273:23303	278428	0	True				
ANR	278579	EqualityExpression	me -> cont_count == me -> max_count		278428	0		==			
ANR	278580	PtrMemberAccess	me -> cont_count		278428	0					
ANR	278581	Identifier	me		278428	0					
ANR	278582	Identifier	cont_count		278428	1					
ANR	278583	PtrMemberAccess	me -> max_count		278428	1					
ANR	278584	Identifier	me		278428	0					
ANR	278585	Identifier	max_count		278428	1					
ANR	278586	CompoundStatement		30:3:649:689	278428	1					
ANR	278587	IdentifierDeclStatement	struct r_magic * nm ;	932:3:23311:23329	278428	0	True				
ANR	278588	IdentifierDecl	* nm		278428	0					
ANR	278589	IdentifierDeclType	struct r_magic *		278428	0					
ANR	278590	Identifier	nm		278428	1					
ANR	278591	IdentifierDeclStatement	size_t cnt = me -> max_count + ALLOC_CHUNK ;	933:3:23334:23374	278428	1	True				
ANR	278592	IdentifierDecl	cnt = me -> max_count + ALLOC_CHUNK		278428	0					
ANR	278593	IdentifierDeclType	size_t		278428	0					
ANR	278594	Identifier	cnt		278428	1					
ANR	278595	AssignmentExpression	cnt = me -> max_count + ALLOC_CHUNK		278428	2		=			
ANR	278596	Identifier	cnt		278428	0					
ANR	278597	AdditiveExpression	me -> max_count + ALLOC_CHUNK		278428	1		+			
ANR	278598	PtrMemberAccess	me -> max_count		278428	0					
ANR	278599	Identifier	me		278428	0					
ANR	278600	Identifier	max_count		278428	1					
ANR	278601	Identifier	ALLOC_CHUNK		278428	1					
ANR	278602	IfStatement	"if ( ! ( nm = realloc ( me -> mp , sizeof ( * nm ) * cnt ) ) )"		278428	2					
ANR	278603	Condition	"! ( nm = realloc ( me -> mp , sizeof ( * nm ) * cnt ) )"	934:7:23383:23425	278428	0	True				
ANR	278604	UnaryOperationExpression	"! ( nm = realloc ( me -> mp , sizeof ( * nm ) * cnt ) )"		278428	0					
ANR	278605	UnaryOperator	!		278428	0					
ANR	278606	AssignmentExpression	"nm = realloc ( me -> mp , sizeof ( * nm ) * cnt )"		278428	1		=			
ANR	278607	Identifier	nm		278428	0					
ANR	278608	CallExpression	"realloc ( me -> mp , sizeof ( * nm ) * cnt )"		278428	1					
ANR	278609	Callee	realloc		278428	0					
ANR	278610	Identifier	realloc		278428	0					
ANR	278611	ArgumentList	me -> mp		278428	1					
ANR	278612	Argument	me -> mp		278428	0					
ANR	278613	PtrMemberAccess	me -> mp		278428	0					
ANR	278614	Identifier	me		278428	0					
ANR	278615	Identifier	mp		278428	1					
ANR	278616	Argument	sizeof ( * nm ) * cnt		278428	1					
ANR	278617	MultiplicativeExpression	sizeof ( * nm ) * cnt		278428	0		*			
ANR	278618	SizeofExpression	sizeof ( * nm )		278428	0					
ANR	278619	Sizeof	sizeof		278428	0					
ANR	278620	UnaryOperationExpression	* nm		278428	1					
ANR	278621	UnaryOperator	*		278428	0					
ANR	278622	Identifier	nm		278428	1					
ANR	278623	Identifier	cnt		278428	1					
ANR	278624	CompoundStatement		31:52:743:743	278428	1					
ANR	278625	ExpressionStatement	"file_oomem ( ms , sizeof ( * nm ) * cnt )"	935:4:23434:23468	278428	0	True				
ANR	278626	CallExpression	"file_oomem ( ms , sizeof ( * nm ) * cnt )"		278428	0					
ANR	278627	Callee	file_oomem		278428	0					
ANR	278628	Identifier	file_oomem		278428	0					
ANR	278629	ArgumentList	ms		278428	1					
ANR	278630	Argument	ms		278428	0					
ANR	278631	Identifier	ms		278428	0					
ANR	278632	Argument	sizeof ( * nm ) * cnt		278428	1					
ANR	278633	MultiplicativeExpression	sizeof ( * nm ) * cnt		278428	0		*			
ANR	278634	SizeofExpression	sizeof ( * nm )		278428	0					
ANR	278635	Sizeof	sizeof		278428	0					
ANR	278636	UnaryOperationExpression	* nm		278428	1					
ANR	278637	UnaryOperator	*		278428	0					
ANR	278638	Identifier	nm		278428	1					
ANR	278639	Identifier	cnt		278428	1					
ANR	278640	ReturnStatement	return - 1 ;	936:4:23474:23483	278428	1	True				
ANR	278641	UnaryOperationExpression	- 1		278428	0					
ANR	278642	UnaryOperator	-		278428	0					
ANR	278643	PrimaryExpression	1		278428	1					
ANR	278644	ExpressionStatement	me -> mp = nm	938:3:23493:23504	278428	3	True				
ANR	278645	AssignmentExpression	me -> mp = nm		278428	0		=			
ANR	278646	PtrMemberAccess	me -> mp		278428	0					
ANR	278647	Identifier	me		278428	0					
ANR	278648	Identifier	mp		278428	1					
ANR	278649	Identifier	nm		278428	1					
ANR	278650	ExpressionStatement	me -> max_count = cnt	939:3:23509:23528	278428	4	True				
ANR	278651	AssignmentExpression	me -> max_count = cnt		278428	0		=			
ANR	278652	PtrMemberAccess	me -> max_count		278428	0					
ANR	278653	Identifier	me		278428	0					
ANR	278654	Identifier	max_count		278428	1					
ANR	278655	Identifier	cnt		278428	1					
ANR	278656	ExpressionStatement	m = & me -> mp [ me -> cont_count ++ ]	941:2:23536:23565	278428	3	True				
ANR	278657	AssignmentExpression	m = & me -> mp [ me -> cont_count ++ ]		278428	0		=			
ANR	278658	Identifier	m		278428	0					
ANR	278659	UnaryOperationExpression	& me -> mp [ me -> cont_count ++ ]		278428	1					
ANR	278660	UnaryOperator	&		278428	0					
ANR	278661	ArrayIndexing	me -> mp [ me -> cont_count ++ ]		278428	1					
ANR	278662	PtrMemberAccess	me -> mp		278428	0					
ANR	278663	Identifier	me		278428	0					
ANR	278664	Identifier	mp		278428	1					
ANR	278665	PostIncDecOperationExpression	me -> cont_count ++		278428	1					
ANR	278666	PtrMemberAccess	me -> cont_count		278428	0					
ANR	278667	Identifier	me		278428	0					
ANR	278668	Identifier	cont_count		278428	1					
ANR	278669	IncDec	++		278428	1					
ANR	278670	ExpressionStatement	"( void ) memset ( m , 0 , sizeof ( * m ) )"	942:2:23569:23600	278428	4	True				
ANR	278671	CastExpression	"( void ) memset ( m , 0 , sizeof ( * m ) )"		278428	0					
ANR	278672	CastTarget	void		278428	0					
ANR	278673	CallExpression	"memset ( m , 0 , sizeof ( * m ) )"		278428	1					
ANR	278674	Callee	memset		278428	0					
ANR	278675	Identifier	memset		278428	0					
ANR	278676	ArgumentList	m		278428	1					
ANR	278677	Argument	m		278428	0					
ANR	278678	Identifier	m		278428	0					
ANR	278679	Argument	0		278428	1					
ANR	278680	PrimaryExpression	0		278428	0					
ANR	278681	Argument	sizeof ( * m )		278428	2					
ANR	278682	SizeofExpression	sizeof ( * m )		278428	0					
ANR	278683	Sizeof	sizeof		278428	0					
ANR	278684	UnaryOperationExpression	* m		278428	1					
ANR	278685	UnaryOperator	*		278428	0					
ANR	278686	Identifier	m		278428	1					
ANR	278687	ExpressionStatement	m -> cont_level = cont_level	943:2:23604:23630	278428	5	True				
ANR	278688	AssignmentExpression	m -> cont_level = cont_level		278428	0		=			
ANR	278689	PtrMemberAccess	m -> cont_level		278428	0					
ANR	278690	Identifier	m		278428	0					
ANR	278691	Identifier	cont_level		278428	1					
ANR	278692	Identifier	cont_level		278428	1					
ANR	278693	ElseStatement	else		278428	0					
ANR	278694	CompoundStatement		41:8:955:955	278428	0					
ANR	278695	IfStatement	if ( * nmentryp == maxmagic )		278428	0					
ANR	278696	Condition	* nmentryp == maxmagic	945:6:23648:23668	278428	0	True				
ANR	278697	EqualityExpression	* nmentryp == maxmagic		278428	0		==			
ANR	278698	UnaryOperationExpression	* nmentryp		278428	0					
ANR	278699	UnaryOperator	*		278428	0					
ANR	278700	Identifier	nmentryp		278428	1					
ANR	278701	Identifier	maxmagic		278428	1					
ANR	278702	CompoundStatement		43:3:991:1015	278428	1					
ANR	278703	IdentifierDeclStatement	struct r_magic_entry * mp ;	946:3:23676:23700	278428	0	True				
ANR	278704	IdentifierDecl	* mp		278428	0					
ANR	278705	IdentifierDeclType	struct r_magic_entry *		278428	0					
ANR	278706	Identifier	mp		278428	1					
ANR	278707	ExpressionStatement	maxmagic += ALLOC_INCR	948:3:23706:23728	278428	1	True				
ANR	278708	AssignmentExpression	maxmagic += ALLOC_INCR		278428	0		+=			
ANR	278709	Identifier	maxmagic		278428	0					
ANR	278710	Identifier	ALLOC_INCR		278428	1					
ANR	278711	IfStatement	"if ( ! ( mp = realloc ( * mentryp , sizeof ( * mp ) * maxmagic ) ) )"		278428	2					
ANR	278712	Condition	"! ( mp = realloc ( * mentryp , sizeof ( * mp ) * maxmagic ) )"	949:7:23737:23787	278428	0	True				
ANR	278713	UnaryOperationExpression	"! ( mp = realloc ( * mentryp , sizeof ( * mp ) * maxmagic ) )"		278428	0					
ANR	278714	UnaryOperator	!		278428	0					
ANR	278715	AssignmentExpression	"mp = realloc ( * mentryp , sizeof ( * mp ) * maxmagic )"		278428	1		=			
ANR	278716	Identifier	mp		278428	0					
ANR	278717	CallExpression	"realloc ( * mentryp , sizeof ( * mp ) * maxmagic )"		278428	1					
ANR	278718	Callee	realloc		278428	0					
ANR	278719	Identifier	realloc		278428	0					
ANR	278720	ArgumentList	* mentryp		278428	1					
ANR	278721	Argument	* mentryp		278428	0					
ANR	278722	UnaryOperationExpression	* mentryp		278428	0					
ANR	278723	UnaryOperator	*		278428	0					
ANR	278724	Identifier	mentryp		278428	1					
ANR	278725	Argument	sizeof ( * mp ) * maxmagic		278428	1					
ANR	278726	MultiplicativeExpression	sizeof ( * mp ) * maxmagic		278428	0		*			
ANR	278727	SizeofExpression	sizeof ( * mp )		278428	0					
ANR	278728	Sizeof	sizeof		278428	0					
ANR	278729	UnaryOperationExpression	* mp		278428	1					
ANR	278730	UnaryOperator	*		278428	0					
ANR	278731	Identifier	mp		278428	1					
ANR	278732	Identifier	maxmagic		278428	1					
ANR	278733	CompoundStatement		46:60:1105:1105	278428	1					
ANR	278734	ExpressionStatement	"file_oomem ( ms , sizeof ( * mp ) * maxmagic )"	950:4:23796:23836	278428	0	True				
ANR	278735	CallExpression	"file_oomem ( ms , sizeof ( * mp ) * maxmagic )"		278428	0					
ANR	278736	Callee	file_oomem		278428	0					
ANR	278737	Identifier	file_oomem		278428	0					
ANR	278738	ArgumentList	ms		278428	1					
ANR	278739	Argument	ms		278428	0					
ANR	278740	Identifier	ms		278428	0					
ANR	278741	Argument	sizeof ( * mp ) * maxmagic		278428	1					
ANR	278742	MultiplicativeExpression	sizeof ( * mp ) * maxmagic		278428	0		*			
ANR	278743	SizeofExpression	sizeof ( * mp )		278428	0					
ANR	278744	Sizeof	sizeof		278428	0					
ANR	278745	UnaryOperationExpression	* mp		278428	1					
ANR	278746	UnaryOperator	*		278428	0					
ANR	278747	Identifier	mp		278428	1					
ANR	278748	Identifier	maxmagic		278428	1					
ANR	278749	ReturnStatement	return - 1 ;	951:4:23842:23851	278428	1	True				
ANR	278750	UnaryOperationExpression	- 1		278428	0					
ANR	278751	UnaryOperator	-		278428	0					
ANR	278752	PrimaryExpression	1		278428	1					
ANR	278753	ExpressionStatement	"( void ) memset ( & mp [ * nmentryp ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"	953:3:23861:23919	278428	3	True				
ANR	278754	CastExpression	"( void ) memset ( & mp [ * nmentryp ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"		278428	0					
ANR	278755	CastTarget	void		278428	0					
ANR	278756	CallExpression	"memset ( & mp [ * nmentryp ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"		278428	1					
ANR	278757	Callee	memset		278428	0					
ANR	278758	Identifier	memset		278428	0					
ANR	278759	ArgumentList	& mp [ * nmentryp ]		278428	1					
ANR	278760	Argument	& mp [ * nmentryp ]		278428	0					
ANR	278761	UnaryOperationExpression	& mp [ * nmentryp ]		278428	0					
ANR	278762	UnaryOperator	&		278428	0					
ANR	278763	ArrayIndexing	mp [ * nmentryp ]		278428	1					
ANR	278764	Identifier	mp		278428	0					
ANR	278765	UnaryOperationExpression	* nmentryp		278428	1					
ANR	278766	UnaryOperator	*		278428	0					
ANR	278767	Identifier	nmentryp		278428	1					
ANR	278768	Argument	0		278428	1					
ANR	278769	PrimaryExpression	0		278428	0					
ANR	278770	Argument	sizeof ( * mp ) * ALLOC_INCR		278428	2					
ANR	278771	MultiplicativeExpression	sizeof ( * mp ) * ALLOC_INCR		278428	0		*			
ANR	278772	SizeofExpression	sizeof ( * mp )		278428	0					
ANR	278773	Sizeof	sizeof		278428	0					
ANR	278774	UnaryOperationExpression	* mp		278428	1					
ANR	278775	UnaryOperator	*		278428	0					
ANR	278776	Identifier	mp		278428	1					
ANR	278777	Identifier	ALLOC_INCR		278428	1					
ANR	278778	ExpressionStatement	* mentryp = mp	954:3:23924:23937	278428	4	True				
ANR	278779	AssignmentExpression	* mentryp = mp		278428	0		=			
ANR	278780	UnaryOperationExpression	* mentryp		278428	0					
ANR	278781	UnaryOperator	*		278428	0					
ANR	278782	Identifier	mentryp		278428	1					
ANR	278783	Identifier	mp		278428	1					
ANR	278784	ExpressionStatement	me = & ( * mentryp ) [ * nmentryp ]	956:2:23945:23972	278428	1	True				
ANR	278785	AssignmentExpression	me = & ( * mentryp ) [ * nmentryp ]		278428	0		=			
ANR	278786	Identifier	me		278428	0					
ANR	278787	UnaryOperationExpression	& ( * mentryp ) [ * nmentryp ]		278428	1					
ANR	278788	UnaryOperator	&		278428	0					
ANR	278789	ArrayIndexing	( * mentryp ) [ * nmentryp ]		278428	1					
ANR	278790	UnaryOperationExpression	* mentryp		278428	0					
ANR	278791	UnaryOperator	*		278428	0					
ANR	278792	Identifier	mentryp		278428	1					
ANR	278793	UnaryOperationExpression	* nmentryp		278428	1					
ANR	278794	UnaryOperator	*		278428	0					
ANR	278795	Identifier	nmentryp		278428	1					
ANR	278796	IfStatement	if ( ! me -> mp )		278428	2					
ANR	278797	Condition	! me -> mp	957:6:23980:23986	278428	0	True				
ANR	278798	UnaryOperationExpression	! me -> mp		278428	0					
ANR	278799	UnaryOperator	!		278428	0					
ANR	278800	PtrMemberAccess	me -> mp		278428	1					
ANR	278801	Identifier	me		278428	0					
ANR	278802	Identifier	mp		278428	1					
ANR	278803	CompoundStatement		54:15:1304:1304	278428	1					
ANR	278804	IfStatement	if ( ! ( m = malloc ( sizeof ( * m ) * ALLOC_CHUNK ) ) )		278428	0					
ANR	278805	Condition	! ( m = malloc ( sizeof ( * m ) * ALLOC_CHUNK ) )	958:7:23998:24038	278428	0	True				
ANR	278806	UnaryOperationExpression	! ( m = malloc ( sizeof ( * m ) * ALLOC_CHUNK ) )		278428	0					
ANR	278807	UnaryOperator	!		278428	0					
ANR	278808	AssignmentExpression	m = malloc ( sizeof ( * m ) * ALLOC_CHUNK )		278428	1		=			
ANR	278809	Identifier	m		278428	0					
ANR	278810	CallExpression	malloc ( sizeof ( * m ) * ALLOC_CHUNK )		278428	1					
ANR	278811	Callee	malloc		278428	0					
ANR	278812	Identifier	malloc		278428	0					
ANR	278813	ArgumentList	sizeof ( * m ) * ALLOC_CHUNK		278428	1					
ANR	278814	Argument	sizeof ( * m ) * ALLOC_CHUNK		278428	0					
ANR	278815	MultiplicativeExpression	sizeof ( * m ) * ALLOC_CHUNK		278428	0		*			
ANR	278816	SizeofExpression	sizeof ( * m )		278428	0					
ANR	278817	Sizeof	sizeof		278428	0					
ANR	278818	UnaryOperationExpression	* m		278428	1					
ANR	278819	UnaryOperator	*		278428	0					
ANR	278820	Identifier	m		278428	1					
ANR	278821	Identifier	ALLOC_CHUNK		278428	1					
ANR	278822	CompoundStatement		55:50:1356:1356	278428	1					
ANR	278823	ExpressionStatement	"file_oomem ( ms , sizeof ( * m ) * ALLOC_CHUNK )"	959:4:24047:24089	278428	0	True				
ANR	278824	CallExpression	"file_oomem ( ms , sizeof ( * m ) * ALLOC_CHUNK )"		278428	0					
ANR	278825	Callee	file_oomem		278428	0					
ANR	278826	Identifier	file_oomem		278428	0					
ANR	278827	ArgumentList	ms		278428	1					
ANR	278828	Argument	ms		278428	0					
ANR	278829	Identifier	ms		278428	0					
ANR	278830	Argument	sizeof ( * m ) * ALLOC_CHUNK		278428	1					
ANR	278831	MultiplicativeExpression	sizeof ( * m ) * ALLOC_CHUNK		278428	0		*			
ANR	278832	SizeofExpression	sizeof ( * m )		278428	0					
ANR	278833	Sizeof	sizeof		278428	0					
ANR	278834	UnaryOperationExpression	* m		278428	1					
ANR	278835	UnaryOperator	*		278428	0					
ANR	278836	Identifier	m		278428	1					
ANR	278837	Identifier	ALLOC_CHUNK		278428	1					
ANR	278838	ReturnStatement	return - 1 ;	960:4:24095:24104	278428	1	True				
ANR	278839	UnaryOperationExpression	- 1		278428	0					
ANR	278840	UnaryOperator	-		278428	0					
ANR	278841	PrimaryExpression	1		278428	1					
ANR	278842	ExpressionStatement	me -> mp = m	962:3:24114:24124	278428	1	True				
ANR	278843	AssignmentExpression	me -> mp = m		278428	0		=			
ANR	278844	PtrMemberAccess	me -> mp		278428	0					
ANR	278845	Identifier	me		278428	0					
ANR	278846	Identifier	mp		278428	1					
ANR	278847	Identifier	m		278428	1					
ANR	278848	ExpressionStatement	me -> max_count = ALLOC_CHUNK	963:3:24129:24156	278428	2	True				
ANR	278849	AssignmentExpression	me -> max_count = ALLOC_CHUNK		278428	0		=			
ANR	278850	PtrMemberAccess	me -> max_count		278428	0					
ANR	278851	Identifier	me		278428	0					
ANR	278852	Identifier	max_count		278428	1					
ANR	278853	Identifier	ALLOC_CHUNK		278428	1					
ANR	278854	ElseStatement	else		278428	0					
ANR	278855	CompoundStatement		61:9:1482:1482	278428	0					
ANR	278856	ExpressionStatement	m = me -> mp	965:3:24172:24182	278428	0	True				
ANR	278857	AssignmentExpression	m = me -> mp		278428	0		=			
ANR	278858	Identifier	m		278428	0					
ANR	278859	PtrMemberAccess	me -> mp		278428	1					
ANR	278860	Identifier	me		278428	0					
ANR	278861	Identifier	mp		278428	1					
ANR	278862	ExpressionStatement	"( void ) memset ( m , 0 , sizeof ( * m ) )"	967:2:24190:24221	278428	3	True				
ANR	278863	CastExpression	"( void ) memset ( m , 0 , sizeof ( * m ) )"		278428	0					
ANR	278864	CastTarget	void		278428	0					
ANR	278865	CallExpression	"memset ( m , 0 , sizeof ( * m ) )"		278428	1					
ANR	278866	Callee	memset		278428	0					
ANR	278867	Identifier	memset		278428	0					
ANR	278868	ArgumentList	m		278428	1					
ANR	278869	Argument	m		278428	0					
ANR	278870	Identifier	m		278428	0					
ANR	278871	Argument	0		278428	1					
ANR	278872	PrimaryExpression	0		278428	0					
ANR	278873	Argument	sizeof ( * m )		278428	2					
ANR	278874	SizeofExpression	sizeof ( * m )		278428	0					
ANR	278875	Sizeof	sizeof		278428	0					
ANR	278876	UnaryOperationExpression	* m		278428	1					
ANR	278877	UnaryOperator	*		278428	0					
ANR	278878	Identifier	m		278428	1					
ANR	278879	ExpressionStatement	m -> cont_level = 0	968:2:24225:24242	278428	4	True				
ANR	278880	AssignmentExpression	m -> cont_level = 0		278428	0		=			
ANR	278881	PtrMemberAccess	m -> cont_level		278428	0					
ANR	278882	Identifier	m		278428	0					
ANR	278883	Identifier	cont_level		278428	1					
ANR	278884	PrimaryExpression	0		278428	1					
ANR	278885	ExpressionStatement	me -> cont_count = 1	969:2:24246:24264	278428	5	True				
ANR	278886	AssignmentExpression	me -> cont_count = 1		278428	0		=			
ANR	278887	PtrMemberAccess	me -> cont_count		278428	0					
ANR	278888	Identifier	me		278428	0					
ANR	278889	Identifier	cont_count		278428	1					
ANR	278890	PrimaryExpression	1		278428	1					
ANR	278891	ExpressionStatement	m -> lineno = lineno	971:1:24270:24288	278428	25	True				
ANR	278892	AssignmentExpression	m -> lineno = lineno		278428	0		=			
ANR	278893	PtrMemberAccess	m -> lineno		278428	0					
ANR	278894	Identifier	m		278428	0					
ANR	278895	Identifier	lineno		278428	1					
ANR	278896	Identifier	lineno		278428	1					
ANR	278897	IfStatement	if ( * l == '&' )		278428	26					
ANR	278898	Condition	* l == '&'	973:5:24296:24304	278428	0	True				
ANR	278899	EqualityExpression	* l == '&'		278428	0		==			
ANR	278900	UnaryOperationExpression	* l		278428	0					
ANR	278901	UnaryOperator	*		278428	0					
ANR	278902	Identifier	l		278428	1					
ANR	278903	PrimaryExpression	'&'		278428	1					
ANR	278904	CompoundStatement		70:16:1622:1622	278428	1					
ANR	278905	ExpressionStatement	++ l	974:16:24366:24369	278428	0	True				
ANR	278906	UnaryExpression	++ l		278428	0					
ANR	278907	IncDec	++		278428	0					
ANR	278908	Identifier	l		278428	1					
ANR	278909	ExpressionStatement	m -> flag |= OFFADD	975:16:24414:24431	278428	1	True				
ANR	278910	AssignmentExpression	m -> flag |= OFFADD		278428	0		|=			
ANR	278911	PtrMemberAccess	m -> flag		278428	0					
ANR	278912	Identifier	m		278428	0					
ANR	278913	Identifier	flag		278428	1					
ANR	278914	Identifier	OFFADD		278428	1					
ANR	278915	IfStatement	if ( * l == '(' )		278428	27					
ANR	278916	Condition	* l == '('	977:5:24448:24456	278428	0	True				
ANR	278917	EqualityExpression	* l == '('		278428	0		==			
ANR	278918	UnaryOperationExpression	* l		278428	0					
ANR	278919	UnaryOperator	*		278428	0					
ANR	278920	Identifier	l		278428	1					
ANR	278921	PrimaryExpression	'('		278428	1					
ANR	278922	CompoundStatement		74:16:1774:1774	278428	1					
ANR	278923	ExpressionStatement	++ l	978:2:24463:24466	278428	0	True				
ANR	278924	UnaryExpression	++ l		278428	0					
ANR	278925	IncDec	++		278428	0					
ANR	278926	Identifier	l		278428	1					
ANR	278927	ExpressionStatement	m -> flag |= INDIR	979:2:24487:24503	278428	1	True				
ANR	278928	AssignmentExpression	m -> flag |= INDIR		278428	0		|=			
ANR	278929	PtrMemberAccess	m -> flag		278428	0					
ANR	278930	Identifier	m		278428	0					
ANR	278931	Identifier	flag		278428	1					
ANR	278932	Identifier	INDIR		278428	1					
ANR	278933	IfStatement	if ( m -> flag & OFFADD )		278428	2					
ANR	278934	Condition	m -> flag & OFFADD	980:6:24511:24526	278428	0	True				
ANR	278935	BitAndExpression	m -> flag & OFFADD		278428	0		&			
ANR	278936	PtrMemberAccess	m -> flag		278428	0					
ANR	278937	Identifier	m		278428	0					
ANR	278938	Identifier	flag		278428	1					
ANR	278939	Identifier	OFFADD		278428	1					
ANR	278940	CompoundStatement		77:24:1844:1844	278428	1					
ANR	278941	ExpressionStatement	m -> flag = ( m -> flag & ~OFFADD ) | INDIROFFADD	981:3:24534:24577	278428	0	True				
ANR	278942	AssignmentExpression	m -> flag = ( m -> flag & ~OFFADD ) | INDIROFFADD		278428	0		=			
ANR	278943	PtrMemberAccess	m -> flag		278428	0					
ANR	278944	Identifier	m		278428	0					
ANR	278945	Identifier	flag		278428	1					
ANR	278946	InclusiveOrExpression	( m -> flag & ~OFFADD ) | INDIROFFADD		278428	1		|			
ANR	278947	BitAndExpression	m -> flag & ~OFFADD		278428	0		&			
ANR	278948	PtrMemberAccess	m -> flag		278428	0					
ANR	278949	Identifier	m		278428	0					
ANR	278950	Identifier	flag		278428	1					
ANR	278951	Identifier	~OFFADD		278428	1					
ANR	278952	Identifier	INDIROFFADD		278428	1					
ANR	278953	IfStatement	if ( * l == '&' )		278428	3					
ANR	278954	Condition	* l == '&'	984:6:24590:24598	278428	0	True				
ANR	278955	EqualityExpression	* l == '&'		278428	0		==			
ANR	278956	UnaryOperationExpression	* l		278428	0					
ANR	278957	UnaryOperator	*		278428	0					
ANR	278958	Identifier	l		278428	1					
ANR	278959	PrimaryExpression	'&'		278428	1					
ANR	278960	CompoundStatement		81:17:1916:1916	278428	1					
ANR	278961	ExpressionStatement	++ l	985:3:24646:24649	278428	0	True				
ANR	278962	UnaryExpression	++ l		278428	0					
ANR	278963	IncDec	++		278428	0					
ANR	278964	Identifier	l		278428	1					
ANR	278965	ExpressionStatement	m -> flag |= OFFADD	986:3:24681:24698	278428	1	True				
ANR	278966	AssignmentExpression	m -> flag |= OFFADD		278428	0		|=			
ANR	278967	PtrMemberAccess	m -> flag		278428	0					
ANR	278968	Identifier	m		278428	0					
ANR	278969	Identifier	flag		278428	1					
ANR	278970	Identifier	OFFADD		278428	1					
ANR	278971	IfStatement	if ( m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) ) )		278428	28					
ANR	278972	Condition	m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) )	990:5:24762:24817	278428	0	True				
ANR	278973	AndExpression	m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) )		278428	0		&&			
ANR	278974	EqualityExpression	m -> cont_level == 0		278428	0		==			
ANR	278975	PtrMemberAccess	m -> cont_level		278428	0					
ANR	278976	Identifier	m		278428	0					
ANR	278977	Identifier	cont_level		278428	1					
ANR	278978	PrimaryExpression	0		278428	1					
ANR	278979	BitAndExpression	m -> flag & ( OFFADD | INDIROFFADD )		278428	1		&			
ANR	278980	PtrMemberAccess	m -> flag		278428	0					
ANR	278981	Identifier	m		278428	0					
ANR	278982	Identifier	flag		278428	1					
ANR	278983	InclusiveOrExpression	OFFADD | INDIROFFADD		278428	1		|			
ANR	278984	Identifier	OFFADD		278428	0					
ANR	278985	Identifier	INDIROFFADD		278428	1					
ANR	278986	CompoundStatement		87:63:2135:2135	278428	1					
ANR	278987	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278428	0					
ANR	278988	Condition	ms -> flags & R_MAGIC_CHECK	991:6:24828:24852	278428	0	True				
ANR	278989	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278428	0		&			
ANR	278990	PtrMemberAccess	ms -> flags		278428	0					
ANR	278991	Identifier	ms		278428	0					
ANR	278992	Identifier	flags		278428	1					
ANR	278993	Identifier	R_MAGIC_CHECK		278428	1					
ANR	278994	CompoundStatement		88:33:2170:2170	278428	1					
ANR	278995	ExpressionStatement	"file_magwarn ( ms , ""relative offset at level 0"" )"	992:3:24860:24907	278428	0	True				
ANR	278996	CallExpression	"file_magwarn ( ms , ""relative offset at level 0"" )"		278428	0					
ANR	278997	Callee	file_magwarn		278428	0					
ANR	278998	Identifier	file_magwarn		278428	0					
ANR	278999	ArgumentList	ms		278428	1					
ANR	279000	Argument	ms		278428	0					
ANR	279001	Identifier	ms		278428	0					
ANR	279002	Argument	"""relative offset at level 0"""		278428	1					
ANR	279003	PrimaryExpression	"""relative offset at level 0"""		278428	0					
ANR	279004	ExpressionStatement	"m -> offset = ( ut32 ) strtoul ( l , & t , 0 )"	997:1:24955:24990	278428	29	True				
ANR	279005	AssignmentExpression	"m -> offset = ( ut32 ) strtoul ( l , & t , 0 )"		278428	0		=			
ANR	279006	PtrMemberAccess	m -> offset		278428	0					
ANR	279007	Identifier	m		278428	0					
ANR	279008	Identifier	offset		278428	1					
ANR	279009	CastExpression	"( ut32 ) strtoul ( l , & t , 0 )"		278428	1					
ANR	279010	CastTarget	ut32		278428	0					
ANR	279011	CallExpression	"strtoul ( l , & t , 0 )"		278428	1					
ANR	279012	Callee	strtoul		278428	0					
ANR	279013	Identifier	strtoul		278428	0					
ANR	279014	ArgumentList	l		278428	1					
ANR	279015	Argument	l		278428	0					
ANR	279016	Identifier	l		278428	0					
ANR	279017	Argument	& t		278428	1					
ANR	279018	UnaryOperationExpression	& t		278428	0					
ANR	279019	UnaryOperator	&		278428	0					
ANR	279020	Identifier	t		278428	1					
ANR	279021	Argument	0		278428	2					
ANR	279022	PrimaryExpression	0		278428	0					
ANR	279023	IfStatement	if ( ( l == t ) && ( ms -> flags & R_MAGIC_CHECK ) )		278428	30					
ANR	279024	Condition	( l == t ) && ( ms -> flags & R_MAGIC_CHECK )	998:5:24997:25035	278428	0	True				
ANR	279025	AndExpression	( l == t ) && ( ms -> flags & R_MAGIC_CHECK )		278428	0		&&			
ANR	279026	EqualityExpression	l == t		278428	0		==			
ANR	279027	Identifier	l		278428	0					
ANR	279028	Identifier	t		278428	1					
ANR	279029	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278428	1		&			
ANR	279030	PtrMemberAccess	ms -> flags		278428	0					
ANR	279031	Identifier	ms		278428	0					
ANR	279032	Identifier	flags		278428	1					
ANR	279033	Identifier	R_MAGIC_CHECK		278428	1					
ANR	279034	CompoundStatement		95:46:2353:2353	278428	1					
ANR	279035	ExpressionStatement	"file_magwarn ( ms , ""offset `%s' invalid"" , l )"	999:2:25042:25085	278428	0	True				
ANR	279036	CallExpression	"file_magwarn ( ms , ""offset `%s' invalid"" , l )"		278428	0					
ANR	279037	Callee	file_magwarn		278428	0					
ANR	279038	Identifier	file_magwarn		278428	0					
ANR	279039	ArgumentList	ms		278428	1					
ANR	279040	Argument	ms		278428	0					
ANR	279041	Identifier	ms		278428	0					
ANR	279042	Argument	"""offset `%s' invalid"""		278428	1					
ANR	279043	PrimaryExpression	"""offset `%s' invalid"""		278428	0					
ANR	279044	Argument	l		278428	2					
ANR	279045	Identifier	l		278428	0					
ANR	279046	ExpressionStatement	l = t	1001:1:25091:25096	278428	31	True				
ANR	279047	AssignmentExpression	l = t		278428	0		=			
ANR	279048	Identifier	l		278428	0					
ANR	279049	Identifier	t		278428	1					
ANR	279050	IfStatement	if ( m -> flag & INDIR )		278428	32					
ANR	279051	Condition	m -> flag & INDIR	1003:5:25104:25118	278428	0	True				
ANR	279052	BitAndExpression	m -> flag & INDIR		278428	0		&			
ANR	279053	PtrMemberAccess	m -> flag		278428	0					
ANR	279054	Identifier	m		278428	0					
ANR	279055	Identifier	flag		278428	1					
ANR	279056	Identifier	INDIR		278428	1					
ANR	279057	CompoundStatement		100:22:2436:2436	278428	1					
ANR	279058	ExpressionStatement	m -> in_type = FILE_LONG	1004:2:25125:25147	278428	0	True				
ANR	279059	AssignmentExpression	m -> in_type = FILE_LONG		278428	0		=			
ANR	279060	PtrMemberAccess	m -> in_type		278428	0					
ANR	279061	Identifier	m		278428	0					
ANR	279062	Identifier	in_type		278428	1					
ANR	279063	Identifier	FILE_LONG		278428	1					
ANR	279064	ExpressionStatement	m -> in_offset = 0	1005:2:25151:25167	278428	1	True				
ANR	279065	AssignmentExpression	m -> in_offset = 0		278428	0		=			
ANR	279066	PtrMemberAccess	m -> in_offset		278428	0					
ANR	279067	Identifier	m		278428	0					
ANR	279068	Identifier	in_offset		278428	1					
ANR	279069	PrimaryExpression	0		278428	1					
ANR	279070	IfStatement	if ( * l == '.' )		278428	2					
ANR	279071	Condition	* l == '.'	1009:6:25213:25221	278428	0	True				
ANR	279072	EqualityExpression	* l == '.'		278428	0		==			
ANR	279073	UnaryOperationExpression	* l		278428	0					
ANR	279074	UnaryOperator	*		278428	0					
ANR	279075	Identifier	l		278428	1					
ANR	279076	PrimaryExpression	'.'		278428	1					
ANR	279077	CompoundStatement		106:17:2539:2539	278428	1					
ANR	279078	ExpressionStatement	l ++	1010:3:25229:25232	278428	0	True				
ANR	279079	PostIncDecOperationExpression	l ++		278428	0					
ANR	279080	Identifier	l		278428	0					
ANR	279081	IncDec	++		278428	1					
ANR	279082	SwitchStatement	switch ( * l )		278428	1					
ANR	279083	Condition	* l	1011:11:25245:25246	278428	0	True				
ANR	279084	UnaryOperationExpression	* l		278428	0					
ANR	279085	UnaryOperator	*		278428	0					
ANR	279086	Identifier	l		278428	1					
ANR	279087	CompoundStatement		108:15:2564:2564	278428	1					
ANR	279088	Label	case 'l' :	1012:3:25254:25262	278428	0	True				
ANR	279089	ExpressionStatement	m -> in_type = FILE_LELONG	1013:4:25268:25292	278428	1	True				
ANR	279090	AssignmentExpression	m -> in_type = FILE_LELONG		278428	0		=			
ANR	279091	PtrMemberAccess	m -> in_type		278428	0					
ANR	279092	Identifier	m		278428	0					
ANR	279093	Identifier	in_type		278428	1					
ANR	279094	Identifier	FILE_LELONG		278428	1					
ANR	279095	BreakStatement	break ;	1014:4:25298:25303	278428	2	True				
ANR	279096	Label	case 'L' :	1015:3:25308:25316	278428	3	True				
ANR	279097	ExpressionStatement	m -> in_type = FILE_BELONG	1016:4:25322:25346	278428	4	True				
ANR	279098	AssignmentExpression	m -> in_type = FILE_BELONG		278428	0		=			
ANR	279099	PtrMemberAccess	m -> in_type		278428	0					
ANR	279100	Identifier	m		278428	0					
ANR	279101	Identifier	in_type		278428	1					
ANR	279102	Identifier	FILE_BELONG		278428	1					
ANR	279103	BreakStatement	break ;	1017:4:25352:25357	278428	5	True				
ANR	279104	Label	case 'm' :	1018:3:25362:25370	278428	6	True				
ANR	279105	ExpressionStatement	m -> in_type = FILE_MELONG	1019:4:25376:25400	278428	7	True				
ANR	279106	AssignmentExpression	m -> in_type = FILE_MELONG		278428	0		=			
ANR	279107	PtrMemberAccess	m -> in_type		278428	0					
ANR	279108	Identifier	m		278428	0					
ANR	279109	Identifier	in_type		278428	1					
ANR	279110	Identifier	FILE_MELONG		278428	1					
ANR	279111	BreakStatement	break ;	1020:4:25406:25411	278428	8	True				
ANR	279112	Label	case 'h' :	1021:3:25416:25424	278428	9	True				
ANR	279113	Label	case 's' :	1022:3:25429:25437	278428	10	True				
ANR	279114	ExpressionStatement	m -> in_type = FILE_LESHORT	1023:4:25443:25468	278428	11	True				
ANR	279115	AssignmentExpression	m -> in_type = FILE_LESHORT		278428	0		=			
ANR	279116	PtrMemberAccess	m -> in_type		278428	0					
ANR	279117	Identifier	m		278428	0					
ANR	279118	Identifier	in_type		278428	1					
ANR	279119	Identifier	FILE_LESHORT		278428	1					
ANR	279120	BreakStatement	break ;	1024:4:25474:25479	278428	12	True				
ANR	279121	Label	case 'H' :	1025:3:25484:25492	278428	13	True				
ANR	279122	Label	case 'S' :	1026:3:25497:25505	278428	14	True				
ANR	279123	ExpressionStatement	m -> in_type = FILE_BESHORT	1027:4:25511:25536	278428	15	True				
ANR	279124	AssignmentExpression	m -> in_type = FILE_BESHORT		278428	0		=			
ANR	279125	PtrMemberAccess	m -> in_type		278428	0					
ANR	279126	Identifier	m		278428	0					
ANR	279127	Identifier	in_type		278428	1					
ANR	279128	Identifier	FILE_BESHORT		278428	1					
ANR	279129	BreakStatement	break ;	1028:4:25542:25547	278428	16	True				
ANR	279130	Label	case 'c' :	1029:3:25552:25560	278428	17	True				
ANR	279131	Label	case 'b' :	1030:3:25565:25573	278428	18	True				
ANR	279132	Label	case 'C' :	1031:3:25578:25586	278428	19	True				
ANR	279133	Label	case 'B' :	1032:3:25591:25599	278428	20	True				
ANR	279134	ExpressionStatement	m -> in_type = FILE_BYTE	1033:4:25605:25627	278428	21	True				
ANR	279135	AssignmentExpression	m -> in_type = FILE_BYTE		278428	0		=			
ANR	279136	PtrMemberAccess	m -> in_type		278428	0					
ANR	279137	Identifier	m		278428	0					
ANR	279138	Identifier	in_type		278428	1					
ANR	279139	Identifier	FILE_BYTE		278428	1					
ANR	279140	BreakStatement	break ;	1034:4:25633:25638	278428	22	True				
ANR	279141	Label	case 'e' :	1035:3:25643:25651	278428	23	True				
ANR	279142	Label	case 'f' :	1036:3:25656:25664	278428	24	True				
ANR	279143	Label	case 'g' :	1037:3:25669:25677	278428	25	True				
ANR	279144	ExpressionStatement	m -> in_type = FILE_LEDOUBLE	1038:4:25683:25709	278428	26	True				
ANR	279145	AssignmentExpression	m -> in_type = FILE_LEDOUBLE		278428	0		=			
ANR	279146	PtrMemberAccess	m -> in_type		278428	0					
ANR	279147	Identifier	m		278428	0					
ANR	279148	Identifier	in_type		278428	1					
ANR	279149	Identifier	FILE_LEDOUBLE		278428	1					
ANR	279150	BreakStatement	break ;	1039:4:25715:25720	278428	27	True				
ANR	279151	Label	case 'E' :	1040:3:25725:25733	278428	28	True				
ANR	279152	Label	case 'F' :	1041:3:25738:25746	278428	29	True				
ANR	279153	Label	case 'G' :	1042:3:25751:25759	278428	30	True				
ANR	279154	ExpressionStatement	m -> in_type = FILE_BEDOUBLE	1043:4:25765:25791	278428	31	True				
ANR	279155	AssignmentExpression	m -> in_type = FILE_BEDOUBLE		278428	0		=			
ANR	279156	PtrMemberAccess	m -> in_type		278428	0					
ANR	279157	Identifier	m		278428	0					
ANR	279158	Identifier	in_type		278428	1					
ANR	279159	Identifier	FILE_BEDOUBLE		278428	1					
ANR	279160	BreakStatement	break ;	1044:4:25797:25802	278428	32	True				
ANR	279161	Label	default :	1045:3:25807:25814	278428	33	True				
ANR	279162	Identifier	default		278428	0					
ANR	279163	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278428	34					
ANR	279164	Condition	ms -> flags & R_MAGIC_CHECK	1046:8:25824:25848	278428	0	True				
ANR	279165	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278428	0		&			
ANR	279166	PtrMemberAccess	ms -> flags		278428	0					
ANR	279167	Identifier	ms		278428	0					
ANR	279168	Identifier	flags		278428	1					
ANR	279169	Identifier	R_MAGIC_CHECK		278428	1					
ANR	279170	CompoundStatement		143:35:3166:3166	278428	1					
ANR	279171	ExpressionStatement	"file_magwarn ( ms , ""indirect offset type `%c' invalid"" , * l )"	1047:5:25858:25928	278428	0	True				
ANR	279172	CallExpression	"file_magwarn ( ms , ""indirect offset type `%c' invalid"" , * l )"		278428	0					
ANR	279173	Callee	file_magwarn		278428	0					
ANR	279174	Identifier	file_magwarn		278428	0					
ANR	279175	ArgumentList	ms		278428	1					
ANR	279176	Argument	ms		278428	0					
ANR	279177	Identifier	ms		278428	0					
ANR	279178	Argument	"""indirect offset type `%c' invalid"""		278428	1					
ANR	279179	PrimaryExpression	"""indirect offset type `%c' invalid"""		278428	0					
ANR	279180	Argument	* l		278428	2					
ANR	279181	UnaryOperationExpression	* l		278428	0					
ANR	279182	UnaryOperator	*		278428	0					
ANR	279183	Identifier	l		278428	1					
ANR	279184	BreakStatement	break ;	1051:4:25940:25945	278428	35	True				
ANR	279185	ExpressionStatement	l ++	1053:3:25955:25958	278428	2	True				
ANR	279186	PostIncDecOperationExpression	l ++		278428	0					
ANR	279187	Identifier	l		278428	0					
ANR	279188	IncDec	++		278428	1					
ANR	279189	ExpressionStatement	m -> in_op = 0	1056:2:25967:25979	278428	3	True				
ANR	279190	AssignmentExpression	m -> in_op = 0		278428	0		=			
ANR	279191	PtrMemberAccess	m -> in_op		278428	0					
ANR	279192	Identifier	m		278428	0					
ANR	279193	Identifier	in_op		278428	1					
ANR	279194	PrimaryExpression	0		278428	1					
ANR	279195	IfStatement	if ( * l == '~' )		278428	4					
ANR	279196	Condition	* l == '~'	1057:6:25987:25995	278428	0	True				
ANR	279197	EqualityExpression	* l == '~'		278428	0		==			
ANR	279198	UnaryOperationExpression	* l		278428	0					
ANR	279199	UnaryOperator	*		278428	0					
ANR	279200	Identifier	l		278428	1					
ANR	279201	PrimaryExpression	'~'		278428	1					
ANR	279202	CompoundStatement		154:17:3313:3313	278428	1					
ANR	279203	ExpressionStatement	m -> in_op |= FILE_OPINVERSE	1058:3:26003:26029	278428	0	True				
ANR	279204	AssignmentExpression	m -> in_op |= FILE_OPINVERSE		278428	0		|=			
ANR	279205	PtrMemberAccess	m -> in_op		278428	0					
ANR	279206	Identifier	m		278428	0					
ANR	279207	Identifier	in_op		278428	1					
ANR	279208	Identifier	FILE_OPINVERSE		278428	1					
ANR	279209	ExpressionStatement	l ++	1059:3:26034:26037	278428	1	True				
ANR	279210	PostIncDecOperationExpression	l ++		278428	0					
ANR	279211	Identifier	l		278428	0					
ANR	279212	IncDec	++		278428	1					
ANR	279213	IfStatement	if ( ( op = get_op ( * l ) ) != - 1 )		278428	5					
ANR	279214	Condition	( op = get_op ( * l ) ) != - 1	1061:6:26049:26071	278428	0	True				
ANR	279215	EqualityExpression	( op = get_op ( * l ) ) != - 1		278428	0		!=			
ANR	279216	AssignmentExpression	op = get_op ( * l )		278428	0		=			
ANR	279217	Identifier	op		278428	0					
ANR	279218	CallExpression	get_op ( * l )		278428	1					
ANR	279219	Callee	get_op		278428	0					
ANR	279220	Identifier	get_op		278428	0					
ANR	279221	ArgumentList	* l		278428	1					
ANR	279222	Argument	* l		278428	0					
ANR	279223	UnaryOperationExpression	* l		278428	0					
ANR	279224	UnaryOperator	*		278428	0					
ANR	279225	Identifier	l		278428	1					
ANR	279226	UnaryOperationExpression	- 1		278428	1					
ANR	279227	UnaryOperator	-		278428	0					
ANR	279228	PrimaryExpression	1		278428	1					
ANR	279229	CompoundStatement		158:31:3389:3389	278428	1					
ANR	279230	ExpressionStatement	m -> in_op |= op	1062:3:26079:26093	278428	0	True				
ANR	279231	AssignmentExpression	m -> in_op |= op		278428	0		|=			
ANR	279232	PtrMemberAccess	m -> in_op		278428	0					
ANR	279233	Identifier	m		278428	0					
ANR	279234	Identifier	in_op		278428	1					
ANR	279235	Identifier	op		278428	1					
ANR	279236	ExpressionStatement	l ++	1063:3:26098:26101	278428	1	True				
ANR	279237	PostIncDecOperationExpression	l ++		278428	0					
ANR	279238	Identifier	l		278428	0					
ANR	279239	IncDec	++		278428	1					
ANR	279240	IfStatement	if ( * l == '(' )		278428	6					
ANR	279241	Condition	* l == '('	1065:6:26113:26121	278428	0	True				
ANR	279242	EqualityExpression	* l == '('		278428	0		==			
ANR	279243	UnaryOperationExpression	* l		278428	0					
ANR	279244	UnaryOperator	*		278428	0					
ANR	279245	Identifier	l		278428	1					
ANR	279246	PrimaryExpression	'('		278428	1					
ANR	279247	CompoundStatement		162:17:3439:3439	278428	1					
ANR	279248	ExpressionStatement	m -> in_op |= FILE_OPINDIRECT	1066:3:26129:26156	278428	0	True				
ANR	279249	AssignmentExpression	m -> in_op |= FILE_OPINDIRECT		278428	0		|=			
ANR	279250	PtrMemberAccess	m -> in_op		278428	0					
ANR	279251	Identifier	m		278428	0					
ANR	279252	Identifier	in_op		278428	1					
ANR	279253	Identifier	FILE_OPINDIRECT		278428	1					
ANR	279254	ExpressionStatement	l ++	1067:3:26161:26164	278428	1	True				
ANR	279255	PostIncDecOperationExpression	l ++		278428	0					
ANR	279256	Identifier	l		278428	0					
ANR	279257	IncDec	++		278428	1					
ANR	279258	IfStatement	if ( isdigit ( ( ut8 ) * l ) || * l == '-' )		278428	7					
ANR	279259	Condition	isdigit ( ( ut8 ) * l ) || * l == '-'	1069:6:26176:26204	278428	0	True				
ANR	279260	OrExpression	isdigit ( ( ut8 ) * l ) || * l == '-'		278428	0		||			
ANR	279261	CallExpression	isdigit ( ( ut8 ) * l )		278428	0					
ANR	279262	Callee	isdigit		278428	0					
ANR	279263	Identifier	isdigit		278428	0					
ANR	279264	ArgumentList	( ut8 ) * l		278428	1					
ANR	279265	Argument	( ut8 ) * l		278428	0					
ANR	279266	CastExpression	( ut8 ) * l		278428	0					
ANR	279267	CastTarget	ut8		278428	0					
ANR	279268	UnaryOperationExpression	* l		278428	1					
ANR	279269	UnaryOperator	*		278428	0					
ANR	279270	Identifier	l		278428	1					
ANR	279271	EqualityExpression	* l == '-'		278428	1		==			
ANR	279272	UnaryOperationExpression	* l		278428	0					
ANR	279273	UnaryOperator	*		278428	0					
ANR	279274	Identifier	l		278428	1					
ANR	279275	PrimaryExpression	'-'		278428	1					
ANR	279276	CompoundStatement		166:37:3522:3522	278428	1					
ANR	279277	ExpressionStatement	"m -> in_offset = ( int32_t ) strtol ( l , & t , 0 )"	1070:3:26212:26252	278428	0	True				
ANR	279278	AssignmentExpression	"m -> in_offset = ( int32_t ) strtol ( l , & t , 0 )"		278428	0		=			
ANR	279279	PtrMemberAccess	m -> in_offset		278428	0					
ANR	279280	Identifier	m		278428	0					
ANR	279281	Identifier	in_offset		278428	1					
ANR	279282	CastExpression	"( int32_t ) strtol ( l , & t , 0 )"		278428	1					
ANR	279283	CastTarget	int32_t		278428	0					
ANR	279284	CallExpression	"strtol ( l , & t , 0 )"		278428	1					
ANR	279285	Callee	strtol		278428	0					
ANR	279286	Identifier	strtol		278428	0					
ANR	279287	ArgumentList	l		278428	1					
ANR	279288	Argument	l		278428	0					
ANR	279289	Identifier	l		278428	0					
ANR	279290	Argument	& t		278428	1					
ANR	279291	UnaryOperationExpression	& t		278428	0					
ANR	279292	UnaryOperator	&		278428	0					
ANR	279293	Identifier	t		278428	1					
ANR	279294	Argument	0		278428	2					
ANR	279295	PrimaryExpression	0		278428	0					
ANR	279296	IfStatement	if ( l == t )		278428	1					
ANR	279297	Condition	l == t	1071:7:26261:26266	278428	0	True				
ANR	279298	EqualityExpression	l == t		278428	0		==			
ANR	279299	Identifier	l		278428	0					
ANR	279300	Identifier	t		278428	1					
ANR	279301	CompoundStatement		168:15:3584:3584	278428	1					
ANR	279302	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278428	0					
ANR	279303	Condition	ms -> flags & R_MAGIC_CHECK	1072:8:26279:26303	278428	0	True				
ANR	279304	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278428	0		&			
ANR	279305	PtrMemberAccess	ms -> flags		278428	0					
ANR	279306	Identifier	ms		278428	0					
ANR	279307	Identifier	flags		278428	1					
ANR	279308	Identifier	R_MAGIC_CHECK		278428	1					
ANR	279309	CompoundStatement		169:35:3621:3621	278428	1					
ANR	279310	ExpressionStatement	"file_magwarn ( ms , ""in_offset `%s' invalid"" , l )"	1073:5:26313:26365	278428	0	True				
ANR	279311	CallExpression	"file_magwarn ( ms , ""in_offset `%s' invalid"" , l )"		278428	0					
ANR	279312	Callee	file_magwarn		278428	0					
ANR	279313	Identifier	file_magwarn		278428	0					
ANR	279314	ArgumentList	ms		278428	1					
ANR	279315	Argument	ms		278428	0					
ANR	279316	Identifier	ms		278428	0					
ANR	279317	Argument	"""in_offset `%s' invalid"""		278428	1					
ANR	279318	PrimaryExpression	"""in_offset `%s' invalid"""		278428	0					
ANR	279319	Argument	l		278428	2					
ANR	279320	Identifier	l		278428	0					
ANR	279321	ExpressionStatement	l = t	1077:3:26381:26386	278428	2	True				
ANR	279322	AssignmentExpression	l = t		278428	0		=			
ANR	279323	Identifier	l		278428	0					
ANR	279324	Identifier	t		278428	1					
ANR	279325	IfStatement	if ( * l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' ) )		278428	8					
ANR	279326	Condition	* l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' )	1079:6:26398:26460	278428	0	True				
ANR	279327	OrExpression	* l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' )		278428	0		||			
ANR	279328	EqualityExpression	* l ++ != ')'		278428	0		!=			
ANR	279329	UnaryOperationExpression	* l ++		278428	0					
ANR	279330	UnaryOperator	*		278428	0					
ANR	279331	PostIncDecOperationExpression	l ++		278428	1					
ANR	279332	Identifier	l		278428	0					
ANR	279333	IncDec	++		278428	1					
ANR	279334	PrimaryExpression	')'		278428	1					
ANR	279335	AndExpression	( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')'		278428	1		&&			
ANR	279336	BitAndExpression	m -> in_op & FILE_OPINDIRECT		278428	0		&			
ANR	279337	PtrMemberAccess	m -> in_op		278428	0					
ANR	279338	Identifier	m		278428	0					
ANR	279339	Identifier	in_op		278428	1					
ANR	279340	Identifier	FILE_OPINDIRECT		278428	1					
ANR	279341	EqualityExpression	* l ++ != ')'		278428	1		!=			
ANR	279342	UnaryOperationExpression	* l ++		278428	0					
ANR	279343	UnaryOperator	*		278428	0					
ANR	279344	PostIncDecOperationExpression	l ++		278428	1					
ANR	279345	Identifier	l		278428	0					
ANR	279346	IncDec	++		278428	1					
ANR	279347	PrimaryExpression	')'		278428	1					
ANR	279348	CompoundStatement		177:50:3778:3778	278428	1					
ANR	279349	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278428	0					
ANR	279350	Condition	ms -> flags & R_MAGIC_CHECK	1081:7:26472:26496	278428	0	True				
ANR	279351	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278428	0		&			
ANR	279352	PtrMemberAccess	ms -> flags		278428	0					
ANR	279353	Identifier	ms		278428	0					
ANR	279354	Identifier	flags		278428	1					
ANR	279355	Identifier	R_MAGIC_CHECK		278428	1					
ANR	279356	CompoundStatement		178:34:3814:3814	278428	1					
ANR	279357	ExpressionStatement	"file_magwarn ( ms , ""missing ')' in indirect offset"" )"	1082:4:26505:26561	278428	0	True				
ANR	279358	CallExpression	"file_magwarn ( ms , ""missing ')' in indirect offset"" )"		278428	0					
ANR	279359	Callee	file_magwarn		278428	0					
ANR	279360	Identifier	file_magwarn		278428	0					
ANR	279361	ArgumentList	ms		278428	1					
ANR	279362	Argument	ms		278428	0					
ANR	279363	Identifier	ms		278428	0					
ANR	279364	Argument	"""missing ')' in indirect offset"""		278428	1					
ANR	279365	PrimaryExpression	"""missing ')' in indirect offset"""		278428	0					
ANR	279366	ExpressionStatement	EATAB	1087:1:26576:26581	278428	33	True				
ANR	279367	Identifier	EATAB		278428	0					
ANR	279368	ExpressionStatement	"m -> cond = get_cond ( l , & l )"	1089:1:26585:26610	278428	34	True				
ANR	279369	AssignmentExpression	"m -> cond = get_cond ( l , & l )"		278428	0		=			
ANR	279370	PtrMemberAccess	m -> cond		278428	0					
ANR	279371	Identifier	m		278428	0					
ANR	279372	Identifier	cond		278428	1					
ANR	279373	CallExpression	"get_cond ( l , & l )"		278428	1					
ANR	279374	Callee	get_cond		278428	0					
ANR	279375	Identifier	get_cond		278428	0					
ANR	279376	ArgumentList	l		278428	1					
ANR	279377	Argument	l		278428	0					
ANR	279378	Identifier	l		278428	0					
ANR	279379	Argument	& l		278428	1					
ANR	279380	UnaryOperationExpression	& l		278428	0					
ANR	279381	UnaryOperator	&		278428	0					
ANR	279382	Identifier	l		278428	1					
ANR	279383	IfStatement	"if ( check_cond ( ms , m -> cond , cont_level ) == - 1 )"		278428	35					
ANR	279384	Condition	"check_cond ( ms , m -> cond , cont_level ) == - 1"	1090:5:26617:26658	278428	0	True				
ANR	279385	EqualityExpression	"check_cond ( ms , m -> cond , cont_level ) == - 1"		278428	0		==			
ANR	279386	CallExpression	"check_cond ( ms , m -> cond , cont_level )"		278428	0					
ANR	279387	Callee	check_cond		278428	0					
ANR	279388	Identifier	check_cond		278428	0					
ANR	279389	ArgumentList	ms		278428	1					
ANR	279390	Argument	ms		278428	0					
ANR	279391	Identifier	ms		278428	0					
ANR	279392	Argument	m -> cond		278428	1					
ANR	279393	PtrMemberAccess	m -> cond		278428	0					
ANR	279394	Identifier	m		278428	0					
ANR	279395	Identifier	cond		278428	1					
ANR	279396	Argument	cont_level		278428	2					
ANR	279397	Identifier	cont_level		278428	0					
ANR	279398	UnaryOperationExpression	- 1		278428	1					
ANR	279399	UnaryOperator	-		278428	0					
ANR	279400	PrimaryExpression	1		278428	1					
ANR	279401	CompoundStatement		187:49:3976:3976	278428	1					
ANR	279402	ReturnStatement	return - 1 ;	1091:2:26665:26674	278428	0	True				
ANR	279403	UnaryOperationExpression	- 1		278428	0					
ANR	279404	UnaryOperator	-		278428	0					
ANR	279405	PrimaryExpression	1		278428	1					
ANR	279406	ExpressionStatement	EATAB	1093:1:26680:26685	278428	36	True				
ANR	279407	Identifier	EATAB		278428	0					
ANR	279408	IfStatement	if ( * l == 'u' )		278428	37					
ANR	279409	Condition	* l == 'u'	1095:5:26693:26701	278428	0	True				
ANR	279410	EqualityExpression	* l == 'u'		278428	0		==			
ANR	279411	UnaryOperationExpression	* l		278428	0					
ANR	279412	UnaryOperator	*		278428	0					
ANR	279413	Identifier	l		278428	1					
ANR	279414	PrimaryExpression	'u'		278428	1					
ANR	279415	CompoundStatement		192:16:4019:4019	278428	1					
ANR	279416	ExpressionStatement	++ l	1096:2:26708:26711	278428	0	True				
ANR	279417	UnaryExpression	++ l		278428	0					
ANR	279418	IncDec	++		278428	0					
ANR	279419	Identifier	l		278428	1					
ANR	279420	ExpressionStatement	m -> flag |= UNSIGNED	1097:2:26715:26734	278428	1	True				
ANR	279421	AssignmentExpression	m -> flag |= UNSIGNED		278428	0		|=			
ANR	279422	PtrMemberAccess	m -> flag		278428	0					
ANR	279423	Identifier	m		278428	0					
ANR	279424	Identifier	flag		278428	1					
ANR	279425	Identifier	UNSIGNED		278428	1					
ANR	279426	ExpressionStatement	"m -> type = get_type ( l , & l )"	1100:1:26741:26766	278428	38	True				
ANR	279427	AssignmentExpression	"m -> type = get_type ( l , & l )"		278428	0		=			
ANR	279428	PtrMemberAccess	m -> type		278428	0					
ANR	279429	Identifier	m		278428	0					
ANR	279430	Identifier	type		278428	1					
ANR	279431	CallExpression	"get_type ( l , & l )"		278428	1					
ANR	279432	Callee	get_type		278428	0					
ANR	279433	Identifier	get_type		278428	0					
ANR	279434	ArgumentList	l		278428	1					
ANR	279435	Argument	l		278428	0					
ANR	279436	Identifier	l		278428	0					
ANR	279437	Argument	& l		278428	1					
ANR	279438	UnaryOperationExpression	& l		278428	0					
ANR	279439	UnaryOperator	&		278428	0					
ANR	279440	Identifier	l		278428	1					
ANR	279441	IfStatement	if ( m -> type == FILE_INVALID )		278428	39					
ANR	279442	Condition	m -> type == FILE_INVALID	1101:5:26773:26795	278428	0	True				
ANR	279443	EqualityExpression	m -> type == FILE_INVALID		278428	0		==			
ANR	279444	PtrMemberAccess	m -> type		278428	0					
ANR	279445	Identifier	m		278428	0					
ANR	279446	Identifier	type		278428	1					
ANR	279447	Identifier	FILE_INVALID		278428	1					
ANR	279448	CompoundStatement		198:30:4113:4113	278428	1					
ANR	279449	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278428	0					
ANR	279450	Condition	ms -> flags & R_MAGIC_CHECK	1102:6:26806:26830	278428	0	True				
ANR	279451	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278428	0		&			
ANR	279452	PtrMemberAccess	ms -> flags		278428	0					
ANR	279453	Identifier	ms		278428	0					
ANR	279454	Identifier	flags		278428	1					
ANR	279455	Identifier	R_MAGIC_CHECK		278428	1					
ANR	279456	CompoundStatement		199:33:4148:4148	278428	1					
ANR	279457	ExpressionStatement	"file_magwarn ( ms , ""type `%s' invalid"" , l )"	1103:3:26838:26879	278428	0	True				
ANR	279458	CallExpression	"file_magwarn ( ms , ""type `%s' invalid"" , l )"		278428	0					
ANR	279459	Callee	file_magwarn		278428	0					
ANR	279460	Identifier	file_magwarn		278428	0					
ANR	279461	ArgumentList	ms		278428	1					
ANR	279462	Argument	ms		278428	0					
ANR	279463	Identifier	ms		278428	0					
ANR	279464	Argument	"""type `%s' invalid"""		278428	1					
ANR	279465	PrimaryExpression	"""type `%s' invalid"""		278428	0					
ANR	279466	Argument	l		278428	2					
ANR	279467	Identifier	l		278428	0					
ANR	279468	ReturnStatement	return - 1 ;	1105:2:26887:26896	278428	1	True				
ANR	279469	UnaryOperationExpression	- 1		278428	0					
ANR	279470	UnaryOperator	-		278428	0					
ANR	279471	PrimaryExpression	1		278428	1					
ANR	279472	ExpressionStatement	m -> mask_op = 0	1111:1:27034:27048	278428	40	True				
ANR	279473	AssignmentExpression	m -> mask_op = 0		278428	0		=			
ANR	279474	PtrMemberAccess	m -> mask_op		278428	0					
ANR	279475	Identifier	m		278428	0					
ANR	279476	Identifier	mask_op		278428	1					
ANR	279477	PrimaryExpression	0		278428	1					
ANR	279478	IfStatement	if ( * l == '~' )		278428	41					
ANR	279479	Condition	* l == '~'	1112:5:27055:27063	278428	0	True				
ANR	279480	EqualityExpression	* l == '~'		278428	0		==			
ANR	279481	UnaryOperationExpression	* l		278428	0					
ANR	279482	UnaryOperator	*		278428	0					
ANR	279483	Identifier	l		278428	1					
ANR	279484	PrimaryExpression	'~'		278428	1					
ANR	279485	CompoundStatement		209:16:4381:4381	278428	1					
ANR	279486	IfStatement	if ( ! MAGIC_IS_STRING ( m -> type ) )		278428	0					
ANR	279487	Condition	! MAGIC_IS_STRING ( m -> type )	1113:6:27074:27099	278428	0	True				
ANR	279488	UnaryOperationExpression	! MAGIC_IS_STRING ( m -> type )		278428	0					
ANR	279489	UnaryOperator	!		278428	0					
ANR	279490	CallExpression	MAGIC_IS_STRING ( m -> type )		278428	1					
ANR	279491	Callee	MAGIC_IS_STRING		278428	0					
ANR	279492	Identifier	MAGIC_IS_STRING		278428	0					
ANR	279493	ArgumentList	m -> type		278428	1					
ANR	279494	Argument	m -> type		278428	0					
ANR	279495	PtrMemberAccess	m -> type		278428	0					
ANR	279496	Identifier	m		278428	0					
ANR	279497	Identifier	type		278428	1					
ANR	279498	CompoundStatement		210:34:4417:4417	278428	1					
ANR	279499	ExpressionStatement	m -> mask_op |= FILE_OPINVERSE	1114:3:27107:27135	278428	0	True				
ANR	279500	AssignmentExpression	m -> mask_op |= FILE_OPINVERSE		278428	0		|=			
ANR	279501	PtrMemberAccess	m -> mask_op		278428	0					
ANR	279502	Identifier	m		278428	0					
ANR	279503	Identifier	mask_op		278428	1					
ANR	279504	Identifier	FILE_OPINVERSE		278428	1					
ANR	279505	ElseStatement	else		278428	0					
ANR	279506	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278428	0					
ANR	279507	Condition	ms -> flags & R_MAGIC_CHECK	1115:13:27150:27174	278428	0	True				
ANR	279508	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278428	0		&			
ANR	279509	PtrMemberAccess	ms -> flags		278428	0					
ANR	279510	Identifier	ms		278428	0					
ANR	279511	Identifier	flags		278428	1					
ANR	279512	Identifier	R_MAGIC_CHECK		278428	1					
ANR	279513	CompoundStatement		212:40:4492:4492	278428	1					
ANR	279514	ExpressionStatement	"file_magwarn ( ms , ""'~' invalid for string types"" )"	1116:3:27182:27231	278428	0	True				
ANR	279515	CallExpression	"file_magwarn ( ms , ""'~' invalid for string types"" )"		278428	0					
ANR	279516	Callee	file_magwarn		278428	0					
ANR	279517	Identifier	file_magwarn		278428	0					
ANR	279518	ArgumentList	ms		278428	1					
ANR	279519	Argument	ms		278428	0					
ANR	279520	Identifier	ms		278428	0					
ANR	279521	Argument	"""'~' invalid for string types"""		278428	1					
ANR	279522	PrimaryExpression	"""'~' invalid for string types"""		278428	0					
ANR	279523	ExpressionStatement	++ l	1118:2:27239:27242	278428	1	True				
ANR	279524	UnaryExpression	++ l		278428	0					
ANR	279525	IncDec	++		278428	0					
ANR	279526	Identifier	l		278428	1					
ANR	279527	ExpressionStatement	m -> str_range = 0	1120:1:27248:27264	278428	42	True				
ANR	279528	AssignmentExpression	m -> str_range = 0		278428	0		=			
ANR	279529	PtrMemberAccess	m -> str_range		278428	0					
ANR	279530	Identifier	m		278428	0					
ANR	279531	Identifier	str_range		278428	1					
ANR	279532	PrimaryExpression	0		278428	1					
ANR	279533	ExpressionStatement	m -> str_flags = 0	1121:1:27267:27283	278428	43	True				
ANR	279534	AssignmentExpression	m -> str_flags = 0		278428	0		=			
ANR	279535	PtrMemberAccess	m -> str_flags		278428	0					
ANR	279536	Identifier	m		278428	0					
ANR	279537	Identifier	str_flags		278428	1					
ANR	279538	PrimaryExpression	0		278428	1					
ANR	279539	ExpressionStatement	m -> num_mask = 0	1122:1:27286:27301	278428	44	True				
ANR	279540	AssignmentExpression	m -> num_mask = 0		278428	0		=			
ANR	279541	PtrMemberAccess	m -> num_mask		278428	0					
ANR	279542	Identifier	m		278428	0					
ANR	279543	Identifier	num_mask		278428	1					
ANR	279544	PrimaryExpression	0		278428	1					
ANR	279545	IfStatement	if ( ( op = get_op ( * l ) ) != - 1 )		278428	45					
ANR	279546	Condition	( op = get_op ( * l ) ) != - 1	1123:5:27308:27331	278428	0	True				
ANR	279547	EqualityExpression	( op = get_op ( * l ) ) != - 1		278428	0		!=			
ANR	279548	AssignmentExpression	op = get_op ( * l )		278428	0		=			
ANR	279549	Identifier	op		278428	0					
ANR	279550	CallExpression	get_op ( * l )		278428	1					
ANR	279551	Callee	get_op		278428	0					
ANR	279552	Identifier	get_op		278428	0					
ANR	279553	ArgumentList	* l		278428	1					
ANR	279554	Argument	* l		278428	0					
ANR	279555	UnaryOperationExpression	* l		278428	0					
ANR	279556	UnaryOperator	*		278428	0					
ANR	279557	Identifier	l		278428	1					
ANR	279558	UnaryOperationExpression	- 1		278428	1					
ANR	279559	UnaryOperator	-		278428	0					
ANR	279560	PrimaryExpression	1		278428	1					
ANR	279561	CompoundStatement		220:31:4649:4649	278428	1					
ANR	279562	IfStatement	if ( ! MAGIC_IS_STRING ( m -> type ) )		278428	0					
ANR	279563	Condition	! MAGIC_IS_STRING ( m -> type )	1124:6:27342:27367	278428	0	True				
ANR	279564	UnaryOperationExpression	! MAGIC_IS_STRING ( m -> type )		278428	0					
ANR	279565	UnaryOperator	!		278428	0					
ANR	279566	CallExpression	MAGIC_IS_STRING ( m -> type )		278428	1					
ANR	279567	Callee	MAGIC_IS_STRING		278428	0					
ANR	279568	Identifier	MAGIC_IS_STRING		278428	0					
ANR	279569	ArgumentList	m -> type		278428	1					
ANR	279570	Argument	m -> type		278428	0					
ANR	279571	PtrMemberAccess	m -> type		278428	0					
ANR	279572	Identifier	m		278428	0					
ANR	279573	Identifier	type		278428	1					
ANR	279574	CompoundStatement		222:3:4690:4698	278428	1					
ANR	279575	IdentifierDeclStatement	ut64 val ;	1125:3:27375:27383	278428	0	True				
ANR	279576	IdentifierDecl	val		278428	0					
ANR	279577	IdentifierDeclType	ut64		278428	0					
ANR	279578	Identifier	val		278428	1					
ANR	279579	ExpressionStatement	++ l	1126:3:27388:27391	278428	1	True				
ANR	279580	UnaryExpression	++ l		278428	0					
ANR	279581	IncDec	++		278428	0					
ANR	279582	Identifier	l		278428	1					
ANR	279583	ExpressionStatement	m -> mask_op |= op	1127:3:27396:27412	278428	2	True				
ANR	279584	AssignmentExpression	m -> mask_op |= op		278428	0		|=			
ANR	279585	PtrMemberAccess	m -> mask_op		278428	0					
ANR	279586	Identifier	m		278428	0					
ANR	279587	Identifier	mask_op		278428	1					
ANR	279588	Identifier	op		278428	1					
ANR	279589	ExpressionStatement	"val = ( ut64 ) strtoull ( l , & t , 0 )"	1128:3:27417:27448	278428	3	True				
ANR	279590	AssignmentExpression	"val = ( ut64 ) strtoull ( l , & t , 0 )"		278428	0		=			
ANR	279591	Identifier	val		278428	0					
ANR	279592	CastExpression	"( ut64 ) strtoull ( l , & t , 0 )"		278428	1					
ANR	279593	CastTarget	ut64		278428	0					
ANR	279594	CallExpression	"strtoull ( l , & t , 0 )"		278428	1					
ANR	279595	Callee	strtoull		278428	0					
ANR	279596	Identifier	strtoull		278428	0					
ANR	279597	ArgumentList	l		278428	1					
ANR	279598	Argument	l		278428	0					
ANR	279599	Identifier	l		278428	0					
ANR	279600	Argument	& t		278428	1					
ANR	279601	UnaryOperationExpression	& t		278428	0					
ANR	279602	UnaryOperator	&		278428	0					
ANR	279603	Identifier	t		278428	1					
ANR	279604	Argument	0		278428	2					
ANR	279605	PrimaryExpression	0		278428	0					
ANR	279606	ExpressionStatement	l = t	1129:3:27453:27458	278428	4	True				
ANR	279607	AssignmentExpression	l = t		278428	0		=			
ANR	279608	Identifier	l		278428	0					
ANR	279609	Identifier	t		278428	1					
ANR	279610	ExpressionStatement	"m -> num_mask = file_signextend ( ms , m , val )"	1130:3:27463:27505	278428	5	True				
ANR	279611	AssignmentExpression	"m -> num_mask = file_signextend ( ms , m , val )"		278428	0		=			
ANR	279612	PtrMemberAccess	m -> num_mask		278428	0					
ANR	279613	Identifier	m		278428	0					
ANR	279614	Identifier	num_mask		278428	1					
ANR	279615	CallExpression	"file_signextend ( ms , m , val )"		278428	1					
ANR	279616	Callee	file_signextend		278428	0					
ANR	279617	Identifier	file_signextend		278428	0					
ANR	279618	ArgumentList	ms		278428	1					
ANR	279619	Argument	ms		278428	0					
ANR	279620	Identifier	ms		278428	0					
ANR	279621	Argument	m		278428	1					
ANR	279622	Identifier	m		278428	0					
ANR	279623	Argument	val		278428	2					
ANR	279624	Identifier	val		278428	0					
ANR	279625	ExpressionStatement	eatsize ( & l )	1131:3:27510:27522	278428	6	True				
ANR	279626	CallExpression	eatsize ( & l )		278428	0					
ANR	279627	Callee	eatsize		278428	0					
ANR	279628	Identifier	eatsize		278428	0					
ANR	279629	ArgumentList	& l		278428	1					
ANR	279630	Argument	& l		278428	0					
ANR	279631	UnaryOperationExpression	& l		278428	0					
ANR	279632	UnaryOperator	&		278428	0					
ANR	279633	Identifier	l		278428	1					
ANR	279634	ElseStatement	else		278428	0					
ANR	279635	IfStatement	if ( op == FILE_OPDIVIDE )		278428	0					
ANR	279636	Condition	op == FILE_OPDIVIDE	1133:11:27539:27557	278428	0	True				
ANR	279637	EqualityExpression	op == FILE_OPDIVIDE		278428	0		==			
ANR	279638	Identifier	op		278428	0					
ANR	279639	Identifier	FILE_OPDIVIDE		278428	1					
ANR	279640	CompoundStatement		231:3:4880:4898	278428	1					
ANR	279641	IdentifierDeclStatement	int have_range = 0 ;	1134:3:27565:27583	278428	0	True				
ANR	279642	IdentifierDecl	have_range = 0		278428	0					
ANR	279643	IdentifierDeclType	int		278428	0					
ANR	279644	Identifier	have_range		278428	1					
ANR	279645	AssignmentExpression	have_range = 0		278428	2		=			
ANR	279646	Identifier	have_range		278428	0					
ANR	279647	PrimaryExpression	0		278428	1					
ANR	279648	WhileStatement	while ( ! isspace ( ( ut8 ) * ++ l ) )		278428	1					
ANR	279649	Condition	! isspace ( ( ut8 ) * ++ l )	1135:10:27595:27614	278428	0	True				
ANR	279650	UnaryOperationExpression	! isspace ( ( ut8 ) * ++ l )		278428	0					
ANR	279651	UnaryOperator	!		278428	0					
ANR	279652	CallExpression	isspace ( ( ut8 ) * ++ l )		278428	1					
ANR	279653	Callee	isspace		278428	0					
ANR	279654	Identifier	isspace		278428	0					
ANR	279655	ArgumentList	( ut8 ) * ++ l		278428	1					
ANR	279656	Argument	( ut8 ) * ++ l		278428	0					
ANR	279657	CastExpression	( ut8 ) * ++ l		278428	0					
ANR	279658	CastTarget	ut8		278428	0					
ANR	279659	UnaryOperationExpression	* ++ l		278428	1					
ANR	279660	UnaryOperator	*		278428	0					
ANR	279661	UnaryExpression	++ l		278428	1					
ANR	279662	IncDec	++		278428	0					
ANR	279663	Identifier	l		278428	1					
ANR	279664	CompoundStatement		232:32:4932:4932	278428	1					
ANR	279665	SwitchStatement	switch ( * l )		278428	0					
ANR	279666	Condition	* l	1136:12:27631:27632	278428	0	True				
ANR	279667	UnaryOperationExpression	* l		278428	0					
ANR	279668	UnaryOperator	*		278428	0					
ANR	279669	Identifier	l		278428	1					
ANR	279670	CompoundStatement		233:16:4950:4950	278428	1					
ANR	279671	Label	case '0' :	1137:4:27641:27649	278428	0	True				
ANR	279672	Label	case '1' :	1137:15:27652:27660	278428	1	True				
ANR	279673	Label	case '2' :	1137:26:27663:27671	278428	2	True				
ANR	279674	Label	case '3' :	1138:4:27677:27685	278428	3	True				
ANR	279675	Label	case '4' :	1138:15:27688:27696	278428	4	True				
ANR	279676	Label	case '5' :	1138:26:27699:27707	278428	5	True				
ANR	279677	Label	case '6' :	1139:4:27713:27721	278428	6	True				
ANR	279678	Label	case '7' :	1139:15:27724:27732	278428	7	True				
ANR	279679	Label	case '8' :	1139:26:27735:27743	278428	8	True				
ANR	279680	Label	case '9' :	1140:4:27749:27757	278428	9	True				
ANR	279681	IfStatement	if ( have_range && ( ms -> flags & R_MAGIC_CHECK ) )		278428	10					
ANR	279682	Condition	have_range && ( ms -> flags & R_MAGIC_CHECK )	1141:9:27768:27814	278428	0	True				
ANR	279683	AndExpression	have_range && ( ms -> flags & R_MAGIC_CHECK )		278428	0		&&			
ANR	279684	Identifier	have_range		278428	0					
ANR	279685	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278428	1		&			
ANR	279686	PtrMemberAccess	ms -> flags		278428	0					
ANR	279687	Identifier	ms		278428	0					
ANR	279688	Identifier	flags		278428	1					
ANR	279689	Identifier	R_MAGIC_CHECK		278428	1					
ANR	279690	CompoundStatement		239:35:5132:5132	278428	1					
ANR	279691	ExpressionStatement	"file_magwarn ( ms , ""multiple ranges"" )"	1143:6:27825:27868	278428	0	True				
ANR	279692	CallExpression	"file_magwarn ( ms , ""multiple ranges"" )"		278428	0					
ANR	279693	Callee	file_magwarn		278428	0					
ANR	279694	Identifier	file_magwarn		278428	0					
ANR	279695	ArgumentList	ms		278428	1					
ANR	279696	Argument	ms		278428	0					
ANR	279697	Identifier	ms		278428	0					
ANR	279698	Argument	"""multiple ranges"""		278428	1					
ANR	279699	PrimaryExpression	"""multiple ranges"""		278428	0					
ANR	279700	ExpressionStatement	have_range = 1	1146:5:27882:27896	278428	11	True				
ANR	279701	AssignmentExpression	have_range = 1		278428	0		=			
ANR	279702	Identifier	have_range		278428	0					
ANR	279703	PrimaryExpression	1		278428	1					
ANR	279704	ExpressionStatement	"m -> str_range = strtoul ( l , & t , 0 )"	1147:5:27903:27935	278428	12	True				
ANR	279705	AssignmentExpression	"m -> str_range = strtoul ( l , & t , 0 )"		278428	0		=			
ANR	279706	PtrMemberAccess	m -> str_range		278428	0					
ANR	279707	Identifier	m		278428	0					
ANR	279708	Identifier	str_range		278428	1					
ANR	279709	CallExpression	"strtoul ( l , & t , 0 )"		278428	1					
ANR	279710	Callee	strtoul		278428	0					
ANR	279711	Identifier	strtoul		278428	0					
ANR	279712	ArgumentList	l		278428	1					
ANR	279713	Argument	l		278428	0					
ANR	279714	Identifier	l		278428	0					
ANR	279715	Argument	& t		278428	1					
ANR	279716	UnaryOperationExpression	& t		278428	0					
ANR	279717	UnaryOperator	&		278428	0					
ANR	279718	Identifier	t		278428	1					
ANR	279719	Argument	0		278428	2					
ANR	279720	PrimaryExpression	0		278428	0					
ANR	279721	IfStatement	if ( m -> str_range == 0 )		278428	13					
ANR	279722	Condition	m -> str_range == 0	1148:9:27946:27962	278428	0	True				
ANR	279723	EqualityExpression	m -> str_range == 0		278428	0		==			
ANR	279724	PtrMemberAccess	m -> str_range		278428	0					
ANR	279725	Identifier	m		278428	0					
ANR	279726	Identifier	str_range		278428	1					
ANR	279727	PrimaryExpression	0		278428	1					
ANR	279728	CompoundStatement		245:28:5280:5280	278428	1					
ANR	279729	ExpressionStatement	"file_magwarn ( ms , ""zero range"" )"	1149:6:27973:28011	278428	0	True				
ANR	279730	CallExpression	"file_magwarn ( ms , ""zero range"" )"		278428	0					
ANR	279731	Callee	file_magwarn		278428	0					
ANR	279732	Identifier	file_magwarn		278428	0					
ANR	279733	ArgumentList	ms		278428	1					
ANR	279734	Argument	ms		278428	0					
ANR	279735	Identifier	ms		278428	0					
ANR	279736	Argument	"""zero range"""		278428	1					
ANR	279737	PrimaryExpression	"""zero range"""		278428	0					
ANR	279738	ExpressionStatement	l = t - 1	1152:5:28025:28034	278428	14	True				
ANR	279739	AssignmentExpression	l = t - 1		278428	0		=			
ANR	279740	Identifier	l		278428	0					
ANR	279741	AdditiveExpression	t - 1		278428	1		-			
ANR	279742	Identifier	t		278428	0					
ANR	279743	PrimaryExpression	1		278428	1					
ANR	279744	BreakStatement	break ;	1153:5:28041:28046	278428	15	True				
ANR	279745	Label	case CHAR_COMPACT_BLANK :	1154:4:28052:28075	278428	16	True				
ANR	279746	Identifier	CHAR_COMPACT_BLANK		278428	0					
ANR	279747	ExpressionStatement	m -> str_flags |= STRING_COMPACT_BLANK	1155:5:28082:28118	278428	17	True				
ANR	279748	AssignmentExpression	m -> str_flags |= STRING_COMPACT_BLANK		278428	0		|=			
ANR	279749	PtrMemberAccess	m -> str_flags		278428	0					
ANR	279750	Identifier	m		278428	0					
ANR	279751	Identifier	str_flags		278428	1					
ANR	279752	Identifier	STRING_COMPACT_BLANK		278428	1					
ANR	279753	BreakStatement	break ;	1156:5:28125:28130	278428	18	True				
ANR	279754	Label	case CHAR_COMPACT_OPTIONAL_BLANK :	1157:4:28136:28168	278428	19	True				
ANR	279755	Identifier	CHAR_COMPACT_OPTIONAL_BLANK		278428	0					
ANR	279756	ExpressionStatement	m -> str_flags |= STRING_COMPACT_OPTIONAL_BLANK	1158:5:28175:28229	278428	20	True				
ANR	279757	AssignmentExpression	m -> str_flags |= STRING_COMPACT_OPTIONAL_BLANK		278428	0		|=			
ANR	279758	PtrMemberAccess	m -> str_flags		278428	0					
ANR	279759	Identifier	m		278428	0					
ANR	279760	Identifier	str_flags		278428	1					
ANR	279761	Identifier	STRING_COMPACT_OPTIONAL_BLANK		278428	1					
ANR	279762	BreakStatement	break ;	1160:5:28236:28241	278428	21	True				
ANR	279763	Label	case CHAR_IGNORE_LOWERCASE :	1161:4:28247:28273	278428	22	True				
ANR	279764	Identifier	CHAR_IGNORE_LOWERCASE		278428	0					
ANR	279765	ExpressionStatement	m -> str_flags |= STRING_IGNORE_LOWERCASE	1162:5:28280:28319	278428	23	True				
ANR	279766	AssignmentExpression	m -> str_flags |= STRING_IGNORE_LOWERCASE		278428	0		|=			
ANR	279767	PtrMemberAccess	m -> str_flags		278428	0					
ANR	279768	Identifier	m		278428	0					
ANR	279769	Identifier	str_flags		278428	1					
ANR	279770	Identifier	STRING_IGNORE_LOWERCASE		278428	1					
ANR	279771	BreakStatement	break ;	1163:5:28326:28331	278428	24	True				
ANR	279772	Label	case CHAR_IGNORE_UPPERCASE :	1164:4:28337:28363	278428	25	True				
ANR	279773	Identifier	CHAR_IGNORE_UPPERCASE		278428	0					
ANR	279774	ExpressionStatement	m -> str_flags |= STRING_IGNORE_UPPERCASE	1165:5:28370:28409	278428	26	True				
ANR	279775	AssignmentExpression	m -> str_flags |= STRING_IGNORE_UPPERCASE		278428	0		|=			
ANR	279776	PtrMemberAccess	m -> str_flags		278428	0					
ANR	279777	Identifier	m		278428	0					
ANR	279778	Identifier	str_flags		278428	1					
ANR	279779	Identifier	STRING_IGNORE_UPPERCASE		278428	1					
ANR	279780	BreakStatement	break ;	1166:5:28416:28421	278428	27	True				
ANR	279781	Label	case CHAR_REGEX_OFFSET_START :	1167:4:28427:28455	278428	28	True				
ANR	279782	Identifier	CHAR_REGEX_OFFSET_START		278428	0					
ANR	279783	ExpressionStatement	m -> str_flags |= REGEX_OFFSET_START	1168:5:28462:28496	278428	29	True				
ANR	279784	AssignmentExpression	m -> str_flags |= REGEX_OFFSET_START		278428	0		|=			
ANR	279785	PtrMemberAccess	m -> str_flags		278428	0					
ANR	279786	Identifier	m		278428	0					
ANR	279787	Identifier	str_flags		278428	1					
ANR	279788	Identifier	REGEX_OFFSET_START		278428	1					
ANR	279789	BreakStatement	break ;	1169:5:28503:28508	278428	30	True				
ANR	279790	Label	default :	1170:4:28514:28521	278428	31	True				
ANR	279791	Identifier	default		278428	0					
ANR	279792	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278428	32					
ANR	279793	Condition	ms -> flags & R_MAGIC_CHECK	1171:9:28532:28556	278428	0	True				
ANR	279794	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278428	0		&			
ANR	279795	PtrMemberAccess	ms -> flags		278428	0					
ANR	279796	Identifier	ms		278428	0					
ANR	279797	Identifier	flags		278428	1					
ANR	279798	Identifier	R_MAGIC_CHECK		278428	1					
ANR	279799	CompoundStatement		268:36:5874:5874	278428	1					
ANR	279800	ExpressionStatement	"file_magwarn ( ms , ""string extension `%c' invalid"" , * l )"	1172:6:28567:28635	278428	0	True				
ANR	279801	CallExpression	"file_magwarn ( ms , ""string extension `%c' invalid"" , * l )"		278428	0					
ANR	279802	Callee	file_magwarn		278428	0					
ANR	279803	Identifier	file_magwarn		278428	0					
ANR	279804	ArgumentList	ms		278428	1					
ANR	279805	Argument	ms		278428	0					
ANR	279806	Identifier	ms		278428	0					
ANR	279807	Argument	"""string extension `%c' invalid"""		278428	1					
ANR	279808	PrimaryExpression	"""string extension `%c' invalid"""		278428	0					
ANR	279809	Argument	* l		278428	2					
ANR	279810	UnaryOperationExpression	* l		278428	0					
ANR	279811	UnaryOperator	*		278428	0					
ANR	279812	Identifier	l		278428	1					
ANR	279813	ReturnStatement	return - 1 ;	1176:5:28649:28658	278428	33	True				
ANR	279814	UnaryOperationExpression	- 1		278428	0					
ANR	279815	UnaryOperator	-		278428	0					
ANR	279816	PrimaryExpression	1		278428	1					
ANR	279817	IfStatement	if ( l [ 1 ] == '/' && ! isspace ( ( ut8 ) l [ 2 ] ) )		278428	1					
ANR	279818	Condition	l [ 1 ] == '/' && ! isspace ( ( ut8 ) l [ 2 ] )	1179:8:28719:28753	278428	0	True				
ANR	279819	AndExpression	l [ 1 ] == '/' && ! isspace ( ( ut8 ) l [ 2 ] )		278428	0		&&			
ANR	279820	EqualityExpression	l [ 1 ] == '/'		278428	0		==			
ANR	279821	ArrayIndexing	l [ 1 ]		278428	0					
ANR	279822	Identifier	l		278428	0					
ANR	279823	PrimaryExpression	1		278428	1					
ANR	279824	PrimaryExpression	'/'		278428	1					
ANR	279825	UnaryOperationExpression	! isspace ( ( ut8 ) l [ 2 ] )		278428	1					
ANR	279826	UnaryOperator	!		278428	0					
ANR	279827	CallExpression	isspace ( ( ut8 ) l [ 2 ] )		278428	1					
ANR	279828	Callee	isspace		278428	0					
ANR	279829	Identifier	isspace		278428	0					
ANR	279830	ArgumentList	( ut8 ) l [ 2 ]		278428	1					
ANR	279831	Argument	( ut8 ) l [ 2 ]		278428	0					
ANR	279832	CastExpression	( ut8 ) l [ 2 ]		278428	0					
ANR	279833	CastTarget	ut8		278428	0					
ANR	279834	ArrayIndexing	l [ 2 ]		278428	1					
ANR	279835	Identifier	l		278428	0					
ANR	279836	PrimaryExpression	2		278428	1					
ANR	279837	CompoundStatement		276:45:6071:6071	278428	1					
ANR	279838	ExpressionStatement	l ++	1180:5:28763:28766	278428	0	True				
ANR	279839	PostIncDecOperationExpression	l ++		278428	0					
ANR	279840	Identifier	l		278428	0					
ANR	279841	IncDec	++		278428	1					
ANR	279842	IfStatement	"if ( string_modifier_check ( ms , m ) == - 1 )"		278428	2					
ANR	279843	Condition	"string_modifier_check ( ms , m ) == - 1"	1183:7:28786:28820	278428	0	True				
ANR	279844	EqualityExpression	"string_modifier_check ( ms , m ) == - 1"		278428	0		==			
ANR	279845	CallExpression	"string_modifier_check ( ms , m )"		278428	0					
ANR	279846	Callee	string_modifier_check		278428	0					
ANR	279847	Identifier	string_modifier_check		278428	0					
ANR	279848	ArgumentList	ms		278428	1					
ANR	279849	Argument	ms		278428	0					
ANR	279850	Identifier	ms		278428	0					
ANR	279851	Argument	m		278428	1					
ANR	279852	Identifier	m		278428	0					
ANR	279853	UnaryOperationExpression	- 1		278428	1					
ANR	279854	UnaryOperator	-		278428	0					
ANR	279855	PrimaryExpression	1		278428	1					
ANR	279856	CompoundStatement		280:44:6138:6138	278428	1					
ANR	279857	ReturnStatement	return - 1 ;	1184:4:28829:28838	278428	0	True				
ANR	279858	UnaryOperationExpression	- 1		278428	0					
ANR	279859	UnaryOperator	-		278428	0					
ANR	279860	PrimaryExpression	1		278428	1					
ANR	279861	ElseStatement	else		278428	0					
ANR	279862	CompoundStatement		283:9:6169:6169	278428	0					
ANR	279863	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278428	0					
ANR	279864	Condition	ms -> flags & R_MAGIC_CHECK	1187:7:28863:28887	278428	0	True				
ANR	279865	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278428	0		&			
ANR	279866	PtrMemberAccess	ms -> flags		278428	0					
ANR	279867	Identifier	ms		278428	0					
ANR	279868	Identifier	flags		278428	1					
ANR	279869	Identifier	R_MAGIC_CHECK		278428	1					
ANR	279870	CompoundStatement		284:34:6205:6205	278428	1					
ANR	279871	ExpressionStatement	"file_magwarn ( ms , ""invalid string op: %c"" , * t )"	1188:4:28896:28942	278428	0	True				
ANR	279872	CallExpression	"file_magwarn ( ms , ""invalid string op: %c"" , * t )"		278428	0					
ANR	279873	Callee	file_magwarn		278428	0					
ANR	279874	Identifier	file_magwarn		278428	0					
ANR	279875	ArgumentList	ms		278428	1					
ANR	279876	Argument	ms		278428	0					
ANR	279877	Identifier	ms		278428	0					
ANR	279878	Argument	"""invalid string op: %c"""		278428	1					
ANR	279879	PrimaryExpression	"""invalid string op: %c"""		278428	0					
ANR	279880	Argument	* t		278428	2					
ANR	279881	UnaryOperationExpression	* t		278428	0					
ANR	279882	UnaryOperator	*		278428	0					
ANR	279883	Identifier	t		278428	1					
ANR	279884	ReturnStatement	return - 1 ;	1190:3:28952:28961	278428	1	True				
ANR	279885	UnaryOperationExpression	- 1		278428	0					
ANR	279886	UnaryOperator	-		278428	0					
ANR	279887	PrimaryExpression	1		278428	1					
ANR	279888	ExpressionStatement	EATAB	1197:1:29104:29109	278428	46	True				
ANR	279889	Identifier	EATAB		278428	0					
ANR	279890	SwitchStatement	switch ( * l )		278428	47					
ANR	279891	Condition	* l	1199:9:29121:29122	278428	0	True				
ANR	279892	UnaryOperationExpression	* l		278428	0					
ANR	279893	UnaryOperator	*		278428	0					
ANR	279894	Identifier	l		278428	1					
ANR	279895	CompoundStatement		296:13:6440:6440	278428	1					
ANR	279896	Label	case '>' :	1200:1:29128:29136	278428	0	True				
ANR	279897	Label	case '<' :	1201:1:29139:29147	278428	1	True				
ANR	279898	Label	case '&' :	1203:1:29209:29217	278428	2	True				
ANR	279899	Label	case '^' :	1204:1:29220:29228	278428	3	True				
ANR	279900	Label	case '=' :	1205:1:29231:29239	278428	4	True				
ANR	279901	ExpressionStatement	m -> reln = * l	1206:4:29245:29257	278428	5	True				
ANR	279902	AssignmentExpression	m -> reln = * l		278428	0		=			
ANR	279903	PtrMemberAccess	m -> reln		278428	0					
ANR	279904	Identifier	m		278428	0					
ANR	279905	Identifier	reln		278428	1					
ANR	279906	UnaryOperationExpression	* l		278428	1					
ANR	279907	UnaryOperator	*		278428	0					
ANR	279908	Identifier	l		278428	1					
ANR	279909	ExpressionStatement	++ l	1207:4:29263:29266	278428	6	True				
ANR	279910	UnaryExpression	++ l		278428	0					
ANR	279911	IncDec	++		278428	0					
ANR	279912	Identifier	l		278428	1					
ANR	279913	IfStatement	if ( * l == '=' )		278428	7					
ANR	279914	Condition	* l == '='	1208:6:29274:29282	278428	0	True				
ANR	279915	EqualityExpression	* l == '='		278428	0		==			
ANR	279916	UnaryOperationExpression	* l		278428	0					
ANR	279917	UnaryOperator	*		278428	0					
ANR	279918	Identifier	l		278428	1					
ANR	279919	PrimaryExpression	'='		278428	1					
ANR	279920	CompoundStatement		305:17:6600:6600	278428	1					
ANR	279921	ExpressionStatement	++ l	1210:5:29329:29332	278428	0	True				
ANR	279922	UnaryExpression	++ l		278428	0					
ANR	279923	IncDec	++		278428	0					
ANR	279924	Identifier	l		278428	1					
ANR	279925	BreakStatement	break ;	1212:2:29340:29345	278428	8	True				
ANR	279926	Label	case '!' :	1213:1:29348:29356	278428	9	True				
ANR	279927	ExpressionStatement	m -> reln = * l	1214:2:29360:29372	278428	10	True				
ANR	279928	AssignmentExpression	m -> reln = * l		278428	0		=			
ANR	279929	PtrMemberAccess	m -> reln		278428	0					
ANR	279930	Identifier	m		278428	0					
ANR	279931	Identifier	reln		278428	1					
ANR	279932	UnaryOperationExpression	* l		278428	1					
ANR	279933	UnaryOperator	*		278428	0					
ANR	279934	Identifier	l		278428	1					
ANR	279935	ExpressionStatement	++ l	1215:2:29376:29379	278428	11	True				
ANR	279936	UnaryExpression	++ l		278428	0					
ANR	279937	IncDec	++		278428	0					
ANR	279938	Identifier	l		278428	1					
ANR	279939	BreakStatement	break ;	1216:2:29383:29388	278428	12	True				
ANR	279940	Label	default :	1217:1:29391:29398	278428	13	True				
ANR	279941	Identifier	default		278428	0					
ANR	279942	ExpressionStatement	m -> reln = '='	1218:4:29404:29417	278428	14	True				
ANR	279943	AssignmentExpression	m -> reln = '='		278428	0		=			
ANR	279944	PtrMemberAccess	m -> reln		278428	0					
ANR	279945	Identifier	m		278428	0					
ANR	279946	Identifier	reln		278428	1					
ANR	279947	PrimaryExpression	'='		278428	1					
ANR	279948	IfStatement	if ( * l == 'x' && ( ( isascii ( ( ut8 ) l [ 1 ] ) && isspace ( ( ut8 ) l [ 1 ] ) ) || ! l [ 1 ] ) )		278428	15					
ANR	279949	Condition	* l == 'x' && ( ( isascii ( ( ut8 ) l [ 1 ] ) && isspace ( ( ut8 ) l [ 1 ] ) ) || ! l [ 1 ] )	1219:6:29452:29522	278428	0	True				
ANR	279950	AndExpression	* l == 'x' && ( ( isascii ( ( ut8 ) l [ 1 ] ) && isspace ( ( ut8 ) l [ 1 ] ) ) || ! l [ 1 ] )		278428	0		&&			
ANR	279951	EqualityExpression	* l == 'x'		278428	0		==			
ANR	279952	UnaryOperationExpression	* l		278428	0					
ANR	279953	UnaryOperator	*		278428	0					
ANR	279954	Identifier	l		278428	1					
ANR	279955	PrimaryExpression	'x'		278428	1					
ANR	279956	OrExpression	( isascii ( ( ut8 ) l [ 1 ] ) && isspace ( ( ut8 ) l [ 1 ] ) ) || ! l [ 1 ]		278428	1		||			
ANR	279957	AndExpression	isascii ( ( ut8 ) l [ 1 ] ) && isspace ( ( ut8 ) l [ 1 ] )		278428	0		&&			
ANR	279958	CallExpression	isascii ( ( ut8 ) l [ 1 ] )		278428	0					
ANR	279959	Callee	isascii		278428	0					
ANR	279960	Identifier	isascii		278428	0					
ANR	279961	ArgumentList	( ut8 ) l [ 1 ]		278428	1					
ANR	279962	Argument	( ut8 ) l [ 1 ]		278428	0					
ANR	279963	CastExpression	( ut8 ) l [ 1 ]		278428	0					
ANR	279964	CastTarget	ut8		278428	0					
ANR	279965	ArrayIndexing	l [ 1 ]		278428	1					
ANR	279966	Identifier	l		278428	0					
ANR	279967	PrimaryExpression	1		278428	1					
ANR	279968	CallExpression	isspace ( ( ut8 ) l [ 1 ] )		278428	1					
ANR	279969	Callee	isspace		278428	0					
ANR	279970	Identifier	isspace		278428	0					
ANR	279971	ArgumentList	( ut8 ) l [ 1 ]		278428	1					
ANR	279972	Argument	( ut8 ) l [ 1 ]		278428	0					
ANR	279973	CastExpression	( ut8 ) l [ 1 ]		278428	0					
ANR	279974	CastTarget	ut8		278428	0					
ANR	279975	ArrayIndexing	l [ 1 ]		278428	1					
ANR	279976	Identifier	l		278428	0					
ANR	279977	PrimaryExpression	1		278428	1					
ANR	279978	UnaryOperationExpression	! l [ 1 ]		278428	1					
ANR	279979	UnaryOperator	!		278428	0					
ANR	279980	ArrayIndexing	l [ 1 ]		278428	1					
ANR	279981	Identifier	l		278428	0					
ANR	279982	PrimaryExpression	1		278428	1					
ANR	279983	CompoundStatement		317:36:6840:6840	278428	1					
ANR	279984	ExpressionStatement	m -> reln = * l	1221:3:29530:29542	278428	0	True				
ANR	279985	AssignmentExpression	m -> reln = * l		278428	0		=			
ANR	279986	PtrMemberAccess	m -> reln		278428	0					
ANR	279987	Identifier	m		278428	0					
ANR	279988	Identifier	reln		278428	1					
ANR	279989	UnaryOperationExpression	* l		278428	1					
ANR	279990	UnaryOperator	*		278428	0					
ANR	279991	Identifier	l		278428	1					
ANR	279992	ExpressionStatement	++ l	1222:3:29547:29550	278428	1	True				
ANR	279993	UnaryExpression	++ l		278428	0					
ANR	279994	IncDec	++		278428	0					
ANR	279995	Identifier	l		278428	1					
ANR	279996	BreakStatement	break ;	1224:2:29558:29563	278428	16	True				
ANR	279997	IfStatement	"if ( m -> reln != 'x' && getvalue ( ms , m , & l , action ) )"		278428	48					
ANR	279998	Condition	"m -> reln != 'x' && getvalue ( ms , m , & l , action )"	1229:5:29631:29676	278428	0	True				
ANR	279999	AndExpression	"m -> reln != 'x' && getvalue ( ms , m , & l , action )"		278428	0		&&			
ANR	280000	EqualityExpression	m -> reln != 'x'		278428	0		!=			
ANR	280001	PtrMemberAccess	m -> reln		278428	0					
ANR	280002	Identifier	m		278428	0					
ANR	280003	Identifier	reln		278428	1					
ANR	280004	PrimaryExpression	'x'		278428	1					
ANR	280005	CallExpression	"getvalue ( ms , m , & l , action )"		278428	1					
ANR	280006	Callee	getvalue		278428	0					
ANR	280007	Identifier	getvalue		278428	0					
ANR	280008	ArgumentList	ms		278428	1					
ANR	280009	Argument	ms		278428	0					
ANR	280010	Identifier	ms		278428	0					
ANR	280011	Argument	m		278428	1					
ANR	280012	Identifier	m		278428	0					
ANR	280013	Argument	& l		278428	2					
ANR	280014	UnaryOperationExpression	& l		278428	0					
ANR	280015	UnaryOperator	&		278428	0					
ANR	280016	Identifier	l		278428	1					
ANR	280017	Argument	action		278428	3					
ANR	280018	Identifier	action		278428	0					
ANR	280019	CompoundStatement		326:53:6994:6994	278428	1					
ANR	280020	ReturnStatement	return - 1 ;	1230:2:29683:29692	278428	0	True				
ANR	280021	UnaryOperationExpression	- 1		278428	0					
ANR	280022	UnaryOperator	-		278428	0					
ANR	280023	PrimaryExpression	1		278428	1					
ANR	280024	ExpressionStatement	EATAB	1242:1:29887:29892	278428	49	True				
ANR	280025	Identifier	EATAB		278428	0					
ANR	280026	IfStatement	if ( l [ 0 ] == '\\b' )		278428	50					
ANR	280027	Condition	l [ 0 ] == '\\b'	1243:5:29899:29910	278428	0	True				
ANR	280028	EqualityExpression	l [ 0 ] == '\\b'		278428	0		==			
ANR	280029	ArrayIndexing	l [ 0 ]		278428	0					
ANR	280030	Identifier	l		278428	0					
ANR	280031	PrimaryExpression	0		278428	1					
ANR	280032	PrimaryExpression	'\\b'		278428	1					
ANR	280033	CompoundStatement		340:19:7228:7228	278428	1					
ANR	280034	ExpressionStatement	++ l	1244:2:29917:29920	278428	0	True				
ANR	280035	UnaryExpression	++ l		278428	0					
ANR	280036	IncDec	++		278428	0					
ANR	280037	Identifier	l		278428	1					
ANR	280038	ExpressionStatement	m -> flag |= NOSPACE	1245:2:29924:29942	278428	1	True				
ANR	280039	AssignmentExpression	m -> flag |= NOSPACE		278428	0		|=			
ANR	280040	PtrMemberAccess	m -> flag		278428	0					
ANR	280041	Identifier	m		278428	0					
ANR	280042	Identifier	flag		278428	1					
ANR	280043	Identifier	NOSPACE		278428	1					
ANR	280044	ElseStatement	else		278428	0					
ANR	280045	IfStatement	if ( ( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' ) )		278428	0					
ANR	280046	Condition	( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' )	1246:12:29956:29986	278428	0	True				
ANR	280047	AndExpression	( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' )		278428	0		&&			
ANR	280048	EqualityExpression	l [ 0 ] == '\\\\'		278428	0		==			
ANR	280049	ArrayIndexing	l [ 0 ]		278428	0					
ANR	280050	Identifier	l		278428	0					
ANR	280051	PrimaryExpression	0		278428	1					
ANR	280052	PrimaryExpression	'\\\\'		278428	1					
ANR	280053	EqualityExpression	l [ 1 ] == 'b'		278428	1		==			
ANR	280054	ArrayIndexing	l [ 1 ]		278428	0					
ANR	280055	Identifier	l		278428	0					
ANR	280056	PrimaryExpression	1		278428	1					
ANR	280057	PrimaryExpression	'b'		278428	1					
ANR	280058	CompoundStatement		343:45:7304:7304	278428	1					
ANR	280059	ExpressionStatement	++ l	1247:2:29993:29996	278428	0	True				
ANR	280060	UnaryExpression	++ l		278428	0					
ANR	280061	IncDec	++		278428	0					
ANR	280062	Identifier	l		278428	1					
ANR	280063	ExpressionStatement	++ l	1248:2:30000:30003	278428	1	True				
ANR	280064	UnaryExpression	++ l		278428	0					
ANR	280065	IncDec	++		278428	0					
ANR	280066	Identifier	l		278428	1					
ANR	280067	ExpressionStatement	m -> flag |= NOSPACE	1249:2:30007:30025	278428	2	True				
ANR	280068	AssignmentExpression	m -> flag |= NOSPACE		278428	0		|=			
ANR	280069	PtrMemberAccess	m -> flag		278428	0					
ANR	280070	Identifier	m		278428	0					
ANR	280071	Identifier	flag		278428	1					
ANR	280072	Identifier	NOSPACE		278428	1					
ANR	280073	ForStatement	for ( i = 0 ; ( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc ) ; )		278428	51					
ANR	280074	ForInit	i = 0 ;	1251:6:30036:30041	278428	0	True				
ANR	280075	AssignmentExpression	i = 0		278428	0		=			
ANR	280076	Identifier	i		278428	0					
ANR	280077	PrimaryExpression	0		278428	1					
ANR	280078	Condition	( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc )	1251:13:30043:30095	278428	1	True				
ANR	280079	AndExpression	( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc )		278428	0		&&			
ANR	280080	EqualityExpression	( m -> desc [ i ++ ] = * l ++ ) != '\\0'		278428	0		!=			
ANR	280081	AssignmentExpression	m -> desc [ i ++ ] = * l ++		278428	0		=			
ANR	280082	ArrayIndexing	m -> desc [ i ++ ]		278428	0					
ANR	280083	PtrMemberAccess	m -> desc		278428	0					
ANR	280084	Identifier	m		278428	0					
ANR	280085	Identifier	desc		278428	1					
ANR	280086	PostIncDecOperationExpression	i ++		278428	1					
ANR	280087	Identifier	i		278428	0					
ANR	280088	IncDec	++		278428	1					
ANR	280089	UnaryOperationExpression	* l ++		278428	1					
ANR	280090	UnaryOperator	*		278428	0					
ANR	280091	PostIncDecOperationExpression	l ++		278428	1					
ANR	280092	Identifier	l		278428	0					
ANR	280093	IncDec	++		278428	1					
ANR	280094	PrimaryExpression	'\\0'		278428	1					
ANR	280095	RelationalExpression	i < sizeof ( m -> desc )		278428	1		<			
ANR	280096	Identifier	i		278428	0					
ANR	280097	SizeofExpression	sizeof ( m -> desc )		278428	1					
ANR	280098	Sizeof	sizeof		278428	0					
ANR	280099	PtrMemberAccess	m -> desc		278428	1					
ANR	280100	Identifier	m		278428	0					
ANR	280101	Identifier	desc		278428	1					
ANR	280102	CompoundStatement		348:69:7414:7414	278428	2					
ANR	280103	IfStatement	if ( i == sizeof ( m -> desc ) )		278428	52					
ANR	280104	Condition	i == sizeof ( m -> desc )	1252:5:30107:30127	278428	0	True				
ANR	280105	EqualityExpression	i == sizeof ( m -> desc )		278428	0		==			
ANR	280106	Identifier	i		278428	0					
ANR	280107	SizeofExpression	sizeof ( m -> desc )		278428	1					
ANR	280108	Sizeof	sizeof		278428	0					
ANR	280109	PtrMemberAccess	m -> desc		278428	1					
ANR	280110	Identifier	m		278428	0					
ANR	280111	Identifier	desc		278428	1					
ANR	280112	CompoundStatement		349:28:7445:7445	278428	1					
ANR	280113	ExpressionStatement	m -> desc [ sizeof ( m -> desc ) - 1 ] = '\\0'	1253:2:30134:30170	278428	0	True				
ANR	280114	AssignmentExpression	m -> desc [ sizeof ( m -> desc ) - 1 ] = '\\0'		278428	0		=			
ANR	280115	ArrayIndexing	m -> desc [ sizeof ( m -> desc ) - 1 ]		278428	0					
ANR	280116	PtrMemberAccess	m -> desc		278428	0					
ANR	280117	Identifier	m		278428	0					
ANR	280118	Identifier	desc		278428	1					
ANR	280119	AdditiveExpression	sizeof ( m -> desc ) - 1		278428	1		-			
ANR	280120	SizeofExpression	sizeof ( m -> desc )		278428	0					
ANR	280121	Sizeof	sizeof		278428	0					
ANR	280122	PtrMemberAccess	m -> desc		278428	1					
ANR	280123	Identifier	m		278428	0					
ANR	280124	Identifier	desc		278428	1					
ANR	280125	PrimaryExpression	1		278428	1					
ANR	280126	PrimaryExpression	'\\0'		278428	1					
ANR	280127	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278428	1					
ANR	280128	Condition	ms -> flags & R_MAGIC_CHECK	1254:6:30178:30202	278428	0	True				
ANR	280129	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278428	0		&			
ANR	280130	PtrMemberAccess	ms -> flags		278428	0					
ANR	280131	Identifier	ms		278428	0					
ANR	280132	Identifier	flags		278428	1					
ANR	280133	Identifier	R_MAGIC_CHECK		278428	1					
ANR	280134	CompoundStatement		351:33:7520:7520	278428	1					
ANR	280135	ExpressionStatement	"file_magwarn ( ms , ""description `%s' truncated"" , m -> desc )"	1255:3:30210:30266	278428	0	True				
ANR	280136	CallExpression	"file_magwarn ( ms , ""description `%s' truncated"" , m -> desc )"		278428	0					
ANR	280137	Callee	file_magwarn		278428	0					
ANR	280138	Identifier	file_magwarn		278428	0					
ANR	280139	ArgumentList	ms		278428	1					
ANR	280140	Argument	ms		278428	0					
ANR	280141	Identifier	ms		278428	0					
ANR	280142	Argument	"""description `%s' truncated"""		278428	1					
ANR	280143	PrimaryExpression	"""description `%s' truncated"""		278428	0					
ANR	280144	Argument	m -> desc		278428	2					
ANR	280145	PtrMemberAccess	m -> desc		278428	0					
ANR	280146	Identifier	m		278428	0					
ANR	280147	Identifier	desc		278428	1					
ANR	280148	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		278428	53					
ANR	280149	Condition	ms -> flags & R_MAGIC_CHECK	1263:5:30399:30423	278428	0	True				
ANR	280150	BitAndExpression	ms -> flags & R_MAGIC_CHECK		278428	0		&			
ANR	280151	PtrMemberAccess	ms -> flags		278428	0					
ANR	280152	Identifier	ms		278428	0					
ANR	280153	Identifier	flags		278428	1					
ANR	280154	Identifier	R_MAGIC_CHECK		278428	1					
ANR	280155	CompoundStatement		360:32:7741:7741	278428	1					
ANR	280156	IfStatement	"if ( check_format ( ms , m ) == - 1 )"		278428	0					
ANR	280157	Condition	"check_format ( ms , m ) == - 1"	1264:6:30434:30459	278428	0	True				
ANR	280158	EqualityExpression	"check_format ( ms , m ) == - 1"		278428	0		==			
ANR	280159	CallExpression	"check_format ( ms , m )"		278428	0					
ANR	280160	Callee	check_format		278428	0					
ANR	280161	Identifier	check_format		278428	0					
ANR	280162	ArgumentList	ms		278428	1					
ANR	280163	Argument	ms		278428	0					
ANR	280164	Identifier	ms		278428	0					
ANR	280165	Argument	m		278428	1					
ANR	280166	Identifier	m		278428	0					
ANR	280167	UnaryOperationExpression	- 1		278428	1					
ANR	280168	UnaryOperator	-		278428	0					
ANR	280169	PrimaryExpression	1		278428	1					
ANR	280170	CompoundStatement		361:34:7777:7777	278428	1					
ANR	280171	ReturnStatement	return - 1 ;	1265:3:30467:30476	278428	0	True				
ANR	280172	UnaryOperationExpression	- 1		278428	0					
ANR	280173	UnaryOperator	-		278428	0					
ANR	280174	PrimaryExpression	1		278428	1					
ANR	280175	IfStatement	if ( action == FILE_CHECK )		278428	54					
ANR	280176	Condition	action == FILE_CHECK	1268:5:30490:30509	278428	0	True				
ANR	280177	EqualityExpression	action == FILE_CHECK		278428	0		==			
ANR	280178	Identifier	action		278428	0					
ANR	280179	Identifier	FILE_CHECK		278428	1					
ANR	280180	CompoundStatement		365:27:7827:7827	278428	1					
ANR	280181	ExpressionStatement	file_mdump ( m )	1269:2:30516:30530	278428	0	True				
ANR	280182	CallExpression	file_mdump ( m )		278428	0					
ANR	280183	Callee	file_mdump		278428	0					
ANR	280184	Identifier	file_mdump		278428	0					
ANR	280185	ArgumentList	m		278428	1					
ANR	280186	Argument	m		278428	0					
ANR	280187	Identifier	m		278428	0					
ANR	280188	ExpressionStatement	m -> mimetype [ 0 ] = '\\0'	1271:1:30536:30557	278428	55	True				
ANR	280189	AssignmentExpression	m -> mimetype [ 0 ] = '\\0'		278428	0		=			
ANR	280190	ArrayIndexing	m -> mimetype [ 0 ]		278428	0					
ANR	280191	PtrMemberAccess	m -> mimetype		278428	0					
ANR	280192	Identifier	m		278428	0					
ANR	280193	Identifier	mimetype		278428	1					
ANR	280194	PrimaryExpression	0		278428	1					
ANR	280195	PrimaryExpression	'\\0'		278428	1					
ANR	280196	IfStatement	if ( m -> cont_level == 0 )		278428	56					
ANR	280197	Condition	m -> cont_level == 0	1272:5:30600:30617	278428	0	True				
ANR	280198	EqualityExpression	m -> cont_level == 0		278428	0		==			
ANR	280199	PtrMemberAccess	m -> cont_level		278428	0					
ANR	280200	Identifier	m		278428	0					
ANR	280201	Identifier	cont_level		278428	1					
ANR	280202	PrimaryExpression	0		278428	1					
ANR	280203	CompoundStatement		369:25:7935:7935	278428	1					
ANR	280204	ExpressionStatement	++ ( * nmentryp )	1273:2:30624:30637	278428	0	True				
ANR	280205	UnaryExpression	++ ( * nmentryp )		278428	0					
ANR	280206	IncDec	++		278428	0					
ANR	280207	UnaryOperationExpression	* nmentryp		278428	1					
ANR	280208	UnaryOperator	*		278428	0					
ANR	280209	Identifier	nmentryp		278428	1					
ANR	280210	ReturnStatement	return 0 ;	1275:1:30668:30676	278428	57	True				
ANR	280211	PrimaryExpression	0		278428	0					
ANR	280212	ReturnType	static int		278428	1					
ANR	280213	Identifier	parse		278428	2					
ANR	280214	ParameterList	"RMagic * ms , struct r_magic_entry * * mentryp , ut32 * nmentryp , const char * line , size_t lineno , int action"		278428	3					
ANR	280215	Parameter	RMagic * ms	904:17:22579:22588	278428	0	True				
ANR	280216	ParameterType	RMagic *		278428	0					
ANR	280217	Identifier	ms		278428	1					
ANR	280218	Parameter	struct r_magic_entry * * mentryp	904:29:22591:22620	278428	1	True				
ANR	280219	ParameterType	struct r_magic_entry * *		278428	0					
ANR	280220	Identifier	mentryp		278428	1					
ANR	280221	Parameter	ut32 * nmentryp	904:61:22623:22636	278428	2	True				
ANR	280222	ParameterType	ut32 *		278428	0					
ANR	280223	Identifier	nmentryp		278428	1					
ANR	280224	Parameter	const char * line	904:77:22639:22654	278428	3	True				
ANR	280225	ParameterType	const char *		278428	0					
ANR	280226	Identifier	line		278428	1					
ANR	280227	Parameter	size_t lineno	904:95:22657:22669	278428	4	True				
ANR	280228	ParameterType	size_t		278428	0					
ANR	280229	Identifier	lineno		278428	1					
ANR	280230	Parameter	int action	904:110:22672:22681	278428	5	True				
ANR	280231	ParameterType	int		278428	0					
ANR	280232	Identifier	action		278428	1					
ANR	280233	CFGEntryNode	ENTRY		278428		True				
ANR	280234	CFGExitNode	EXIT		278428		True				
ANR	280235	Symbol	FILE_BEDOUBLE		278428						
ANR	280236	Symbol	INDIR		278428						
ANR	280237	Symbol	m -> cond		278428						
ANR	280238	Symbol	* m -> mimetype		278428						
ANR	280239	Symbol	m -> in_offset		278428						
ANR	280240	Symbol	REGEX_OFFSET_START		278428						
ANR	280241	Symbol	FILE_CHECK		278428						
ANR	280242	Symbol	me -> mp		278428						
ANR	280243	Symbol	m -> type		278428						
ANR	280244	Symbol	FILE_LELONG		278428						
ANR	280245	Symbol	OFFADD		278428						
ANR	280246	Symbol	action		278428						
ANR	280247	Symbol	isdigit		278428						
ANR	280248	Symbol	FILE_BELONG		278428						
ANR	280249	Symbol	FILE_INVALID		278428						
ANR	280250	Symbol	val		278428						
ANR	280251	Symbol	isspace		278428						
ANR	280252	Symbol	string_modifier_check		278428						
ANR	280253	Symbol	ms -> flags		278428						
ANR	280254	Symbol	m -> lineno		278428						
ANR	280255	Symbol	FILE_LONG		278428						
ANR	280256	Symbol	* m -> desc		278428						
ANR	280257	Symbol	UNSIGNED		278428						
ANR	280258	Symbol	m -> flag		278428						
ANR	280259	Symbol	* mp		278428						
ANR	280260	Symbol	file_check_mem		278428						
ANR	280261	Symbol	mentryp		278428						
ANR	280262	Symbol	* ms		278428						
ANR	280263	Symbol	FILE_BESHORT		278428						
ANR	280264	Symbol	strtoull		278428						
ANR	280265	Symbol	cont_level		278428						
ANR	280266	Symbol	FILE_OPINDIRECT		278428						
ANR	280267	Symbol	get_type		278428						
ANR	280268	Symbol	have_range		278428						
ANR	280269	Symbol	MAGIC_IS_STRING		278428						
ANR	280270	Symbol	strtol		278428						
ANR	280271	Symbol	m -> in_type		278428						
ANR	280272	Symbol	m -> mimetype		278428						
ANR	280273	Symbol	* me		278428						
ANR	280274	Symbol	* * m		278428						
ANR	280275	Symbol	isascii		278428						
ANR	280276	Symbol	* ++ l		278428						
ANR	280277	Symbol	malloc		278428						
ANR	280278	Symbol	* nm		278428						
ANR	280279	Symbol	cnt		278428						
ANR	280280	Symbol	i		278428						
ANR	280281	Symbol	* l ++		278428						
ANR	280282	Symbol	l		278428						
ANR	280283	Symbol	m		278428						
ANR	280284	Symbol	NOSPACE		278428						
ANR	280285	Symbol	me -> max_count		278428						
ANR	280286	Symbol	t		278428						
ANR	280287	Symbol	FILE_MELONG		278428						
ANR	280288	Symbol	INDIROFFADD		278428						
ANR	280289	Symbol	ALLOC_CHUNK		278428						
ANR	280290	Symbol	realloc		278428						
ANR	280291	Symbol	STRING_COMPACT_OPTIONAL_BLANK		278428						
ANR	280292	Symbol	m -> num_mask		278428						
ANR	280293	Symbol	m -> desc		278428						
ANR	280294	Symbol	me		278428						
ANR	280295	Symbol	m -> in_op		278428						
ANR	280296	Symbol	get_cond		278428						
ANR	280297	Symbol	mp		278428						
ANR	280298	Symbol	FILE_LESHORT		278428						
ANR	280299	Symbol	ms		278428						
ANR	280300	Symbol	m -> str_range		278428						
ANR	280301	Symbol	ALLOC_INCR		278428						
ANR	280302	Symbol	FILE_OPINVERSE		278428						
ANR	280303	Symbol	FILE_BYTE		278428						
ANR	280304	Symbol	last_cont_level		278428						
ANR	280305	Symbol	m -> cont_level		278428						
ANR	280306	Symbol	nm		278428						
ANR	280307	Symbol	line		278428						
ANR	280308	Symbol	maxmagic		278428						
ANR	280309	Symbol	m -> str_flags		278428						
ANR	280310	Symbol	FILE_OPDIVIDE		278428						
ANR	280311	Symbol	~OFFADD		278428						
ANR	280312	Symbol	getvalue		278428						
ANR	280313	Symbol	m -> mask_op		278428						
ANR	280314	Symbol	m -> reln		278428						
ANR	280315	Symbol	strtoul		278428						
ANR	280316	Symbol	nmentryp		278428						
ANR	280317	Symbol	STRING_IGNORE_UPPERCASE		278428						
ANR	280318	Symbol	STRING_IGNORE_LOWERCASE		278428						
ANR	280319	Symbol	op		278428						
ANR	280320	Symbol	get_op		278428						
ANR	280321	Symbol	file_signextend		278428						
ANR	280322	Symbol	check_cond		278428						
ANR	280323	Symbol	FILE_LEDOUBLE		278428						
ANR	280324	Symbol	* mentryp		278428						
ANR	280325	Symbol	STRING_COMPACT_BLANK		278428						
ANR	280326	Symbol	m -> offset		278428						
ANR	280327	Symbol	& l		278428						
ANR	280328	Symbol	lineno		278428						
ANR	280329	Symbol	* nmentryp		278428						
ANR	280330	Symbol	* l		278428						
ANR	280331	Symbol	* m		278428						
ANR	280332	Symbol	check_format		278428						
ANR	280333	Symbol	& t		278428						
ANR	280334	Symbol	me -> cont_count		278428						
ANR	280335	Symbol	R_MAGIC_CHECK		278428						
ANR	280336	Symbol	* t		278428						
ANR	280337	Function	parse_mime	1282:0:30775:31734							
ANR	280338	FunctionDef	"parse_mime (RMagic * ms , struct r_magic_entry * * mentryp , ut32 * nmentryp , const char * line)"		280337	0					
ANR	280339	CompoundStatement		1282:100:30875:31734	280337	0					
ANR	280340	IdentifierDeclStatement	size_t i ;	1283:1:30878:30886	280337	0	True				
ANR	280341	IdentifierDecl	i		280337	0					
ANR	280342	IdentifierDeclType	size_t		280337	0					
ANR	280343	Identifier	i		280337	1					
ANR	280344	IdentifierDeclStatement	const char * l = line ;	1284:1:30889:30909	280337	1	True				
ANR	280345	IdentifierDecl	* l = line		280337	0					
ANR	280346	IdentifierDeclType	const char *		280337	0					
ANR	280347	Identifier	l		280337	1					
ANR	280348	AssignmentExpression	* l = line		280337	2		=			
ANR	280349	Identifier	line		280337	0					
ANR	280350	Identifier	line		280337	1					
ANR	280351	IdentifierDeclStatement	struct r_magic * m ;	1285:1:30912:30929	280337	2	True				
ANR	280352	IdentifierDecl	* m		280337	0					
ANR	280353	IdentifierDeclType	struct r_magic *		280337	0					
ANR	280354	Identifier	m		280337	1					
ANR	280355	IdentifierDeclStatement	struct r_magic_entry * me ;	1286:1:30932:30956	280337	3	True				
ANR	280356	IdentifierDecl	* me		280337	0					
ANR	280357	IdentifierDeclType	struct r_magic_entry *		280337	0					
ANR	280358	Identifier	me		280337	1					
ANR	280359	IfStatement	if ( * nmentryp == 0 )		280337	4					
ANR	280360	Condition	* nmentryp == 0	1288:5:30964:30977	280337	0	True				
ANR	280361	EqualityExpression	* nmentryp == 0		280337	0		==			
ANR	280362	UnaryOperationExpression	* nmentryp		280337	0					
ANR	280363	UnaryOperator	*		280337	0					
ANR	280364	Identifier	nmentryp		280337	1					
ANR	280365	PrimaryExpression	0		280337	1					
ANR	280366	CompoundStatement		7:21:104:104	280337	1					
ANR	280367	ExpressionStatement	"file_error ( ms , 0 , ""No current entry for MIME type"" )"	1289:2:30984:31035	280337	0	True				
ANR	280368	CallExpression	"file_error ( ms , 0 , ""No current entry for MIME type"" )"		280337	0					
ANR	280369	Callee	file_error		280337	0					
ANR	280370	Identifier	file_error		280337	0					
ANR	280371	ArgumentList	ms		280337	1					
ANR	280372	Argument	ms		280337	0					
ANR	280373	Identifier	ms		280337	0					
ANR	280374	Argument	0		280337	1					
ANR	280375	PrimaryExpression	0		280337	0					
ANR	280376	Argument	"""No current entry for MIME type"""		280337	2					
ANR	280377	PrimaryExpression	"""No current entry for MIME type"""		280337	0					
ANR	280378	ReturnStatement	return - 1 ;	1290:2:31039:31048	280337	1	True				
ANR	280379	UnaryOperationExpression	- 1		280337	0					
ANR	280380	UnaryOperator	-		280337	0					
ANR	280381	PrimaryExpression	1		280337	1					
ANR	280382	ExpressionStatement	me = & ( * mentryp ) [ * nmentryp - 1 ]	1293:1:31055:31086	280337	5	True				
ANR	280383	AssignmentExpression	me = & ( * mentryp ) [ * nmentryp - 1 ]		280337	0		=			
ANR	280384	Identifier	me		280337	0					
ANR	280385	UnaryOperationExpression	& ( * mentryp ) [ * nmentryp - 1 ]		280337	1					
ANR	280386	UnaryOperator	&		280337	0					
ANR	280387	ArrayIndexing	( * mentryp ) [ * nmentryp - 1 ]		280337	1					
ANR	280388	UnaryOperationExpression	* mentryp		280337	0					
ANR	280389	UnaryOperator	*		280337	0					
ANR	280390	Identifier	mentryp		280337	1					
ANR	280391	AdditiveExpression	* nmentryp - 1		280337	1		-			
ANR	280392	UnaryOperationExpression	* nmentryp		280337	0					
ANR	280393	UnaryOperator	*		280337	0					
ANR	280394	Identifier	nmentryp		280337	1					
ANR	280395	PrimaryExpression	1		280337	1					
ANR	280396	ExpressionStatement	m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]	1294:1:31089:31146	280337	6	True				
ANR	280397	AssignmentExpression	m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		280337	0		=			
ANR	280398	Identifier	m		280337	0					
ANR	280399	UnaryOperationExpression	& me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		280337	1					
ANR	280400	UnaryOperator	&		280337	0					
ANR	280401	ArrayIndexing	me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		280337	1					
ANR	280402	PtrMemberAccess	me -> mp		280337	0					
ANR	280403	Identifier	me		280337	0					
ANR	280404	Identifier	mp		280337	1					
ANR	280405	ConditionalExpression	me -> cont_count == 0 ? 0 : me -> cont_count - 1		280337	1					
ANR	280406	Condition	me -> cont_count == 0		280337	0					
ANR	280407	EqualityExpression	me -> cont_count == 0		280337	0		==			
ANR	280408	PtrMemberAccess	me -> cont_count		280337	0					
ANR	280409	Identifier	me		280337	0					
ANR	280410	Identifier	cont_count		280337	1					
ANR	280411	PrimaryExpression	0		280337	1					
ANR	280412	PrimaryExpression	0		280337	1					
ANR	280413	AdditiveExpression	me -> cont_count - 1		280337	2		-			
ANR	280414	PtrMemberAccess	me -> cont_count		280337	0					
ANR	280415	Identifier	me		280337	0					
ANR	280416	Identifier	cont_count		280337	1					
ANR	280417	PrimaryExpression	1		280337	1					
ANR	280418	IfStatement	if ( m -> mimetype [ 0 ] != '\\0' )		280337	7					
ANR	280419	Condition	m -> mimetype [ 0 ] != '\\0'	1296:5:31154:31175	280337	0	True				
ANR	280420	EqualityExpression	m -> mimetype [ 0 ] != '\\0'		280337	0		!=			
ANR	280421	ArrayIndexing	m -> mimetype [ 0 ]		280337	0					
ANR	280422	PtrMemberAccess	m -> mimetype		280337	0					
ANR	280423	Identifier	m		280337	0					
ANR	280424	Identifier	mimetype		280337	1					
ANR	280425	PrimaryExpression	0		280337	1					
ANR	280426	PrimaryExpression	'\\0'		280337	1					
ANR	280427	CompoundStatement		15:29:302:302	280337	1					
ANR	280428	Statement	file_error	1297:2:31182:31191	280337	0	True				
ANR	280429	Statement	(	1297:12:31192:31192	280337	1	True				
ANR	280430	Statement	ms	1297:13:31193:31194	280337	2	True				
ANR	280431	Statement	","	1297:15:31195:31195	280337	3	True				
ANR	280432	Statement	0	1297:17:31197:31197	280337	4	True				
ANR	280433	Statement	","	1297:18:31198:31198	280337	5	True				
ANR	280434	Statement	"""Current entry already has a MIME type: %s\\n"""	1297:20:31200:31244	280337	6	True				
ANR	280435	Statement	"""Description: %s\\nNew type: %s"""	1298:6:31252:31282	280337	7	True				
ANR	280436	Statement	","	1298:37:31283:31283	280337	8	True				
ANR	280437	Statement	m	1298:39:31285:31285	280337	9	True				
ANR	280438	Statement	->	1298:40:31286:31287	280337	10	True				
ANR	280439	Statement	mimetype	1298:42:31288:31295	280337	11	True				
ANR	280440	Statement	","	1298:50:31296:31296	280337	12	True				
ANR	280441	Statement	m	1298:52:31298:31298	280337	13	True				
ANR	280442	Statement	->	1298:53:31299:31300	280337	14	True				
ANR	280443	Statement	desc	1298:55:31301:31304	280337	15	True				
ANR	280444	Statement	","	1298:59:31305:31305	280337	16	True				
ANR	280445	Statement	l	1298:61:31307:31307	280337	17	True				
ANR	280446	Statement	)	1298:62:31308:31308	280337	18	True				
ANR	280447	ExpressionStatement		1298:63:31309:31309	280337	19	True				
ANR	280448	ReturnStatement	return - 1 ;	1299:2:31313:31322	280337	20	True				
ANR	280449	UnaryOperationExpression	- 1		280337	0					
ANR	280450	UnaryOperator	-		280337	0					
ANR	280451	PrimaryExpression	1		280337	1					
ANR	280452	ExpressionStatement	EATAB	1302:1:31329:31334	280337	8	True				
ANR	280453	Identifier	EATAB		280337	0					
ANR	280454	ForStatement	"for ( i = 0 ; * l && ( ( isascii ( ( ut8 ) * l ) && isalnum ( ( ut8 ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> mimetype ) ; m -> mimetype [ i ++ ] = * l ++ )"		280337	9					
ANR	280455	ForInit	i = 0 ;	1303:6:31342:31347	280337	0	True				
ANR	280456	AssignmentExpression	i = 0		280337	0		=			
ANR	280457	Identifier	i		280337	0					
ANR	280458	PrimaryExpression	0		280337	1					
ANR	280459	Condition	"* l && ( ( isascii ( ( ut8 ) * l ) && isalnum ( ( ut8 ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> mimetype )"	1304:2:31351:31449	280337	1	True				
ANR	280460	AndExpression	"* l && ( ( isascii ( ( ut8 ) * l ) && isalnum ( ( ut8 ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> mimetype )"		280337	0		&&			
ANR	280461	UnaryOperationExpression	* l		280337	0					
ANR	280462	UnaryOperator	*		280337	0					
ANR	280463	Identifier	l		280337	1					
ANR	280464	AndExpression	"( ( isascii ( ( ut8 ) * l ) && isalnum ( ( ut8 ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> mimetype )"		280337	1		&&			
ANR	280465	OrExpression	"( isascii ( ( ut8 ) * l ) && isalnum ( ( ut8 ) * l ) ) || strchr ( ""-+/."" , * l )"		280337	0		||			
ANR	280466	AndExpression	isascii ( ( ut8 ) * l ) && isalnum ( ( ut8 ) * l )		280337	0		&&			
ANR	280467	CallExpression	isascii ( ( ut8 ) * l )		280337	0					
ANR	280468	Callee	isascii		280337	0					
ANR	280469	Identifier	isascii		280337	0					
ANR	280470	ArgumentList	( ut8 ) * l		280337	1					
ANR	280471	Argument	( ut8 ) * l		280337	0					
ANR	280472	CastExpression	( ut8 ) * l		280337	0					
ANR	280473	CastTarget	ut8		280337	0					
ANR	280474	UnaryOperationExpression	* l		280337	1					
ANR	280475	UnaryOperator	*		280337	0					
ANR	280476	Identifier	l		280337	1					
ANR	280477	CallExpression	isalnum ( ( ut8 ) * l )		280337	1					
ANR	280478	Callee	isalnum		280337	0					
ANR	280479	Identifier	isalnum		280337	0					
ANR	280480	ArgumentList	( ut8 ) * l		280337	1					
ANR	280481	Argument	( ut8 ) * l		280337	0					
ANR	280482	CastExpression	( ut8 ) * l		280337	0					
ANR	280483	CastTarget	ut8		280337	0					
ANR	280484	UnaryOperationExpression	* l		280337	1					
ANR	280485	UnaryOperator	*		280337	0					
ANR	280486	Identifier	l		280337	1					
ANR	280487	CallExpression	"strchr ( ""-+/."" , * l )"		280337	1					
ANR	280488	Callee	strchr		280337	0					
ANR	280489	Identifier	strchr		280337	0					
ANR	280490	ArgumentList	"""-+/."""		280337	1					
ANR	280491	Argument	"""-+/."""		280337	0					
ANR	280492	PrimaryExpression	"""-+/."""		280337	0					
ANR	280493	Argument	* l		280337	1					
ANR	280494	UnaryOperationExpression	* l		280337	0					
ANR	280495	UnaryOperator	*		280337	0					
ANR	280496	Identifier	l		280337	1					
ANR	280497	RelationalExpression	i < sizeof ( m -> mimetype )		280337	1		<			
ANR	280498	Identifier	i		280337	0					
ANR	280499	SizeofExpression	sizeof ( m -> mimetype )		280337	1					
ANR	280500	Sizeof	sizeof		280337	0					
ANR	280501	PtrMemberAccess	m -> mimetype		280337	1					
ANR	280502	Identifier	m		280337	0					
ANR	280503	Identifier	mimetype		280337	1					
ANR	280504	AssignmentExpression	m -> mimetype [ i ++ ] = * l ++	1305:2:31454:31476	280337	2	True	=			
ANR	280505	ArrayIndexing	m -> mimetype [ i ++ ]		280337	0					
ANR	280506	PtrMemberAccess	m -> mimetype		280337	0					
ANR	280507	Identifier	m		280337	0					
ANR	280508	Identifier	mimetype		280337	1					
ANR	280509	PostIncDecOperationExpression	i ++		280337	1					
ANR	280510	Identifier	i		280337	0					
ANR	280511	IncDec	++		280337	1					
ANR	280512	UnaryOperationExpression	* l ++		280337	1					
ANR	280513	UnaryOperator	*		280337	0					
ANR	280514	PostIncDecOperationExpression	l ++		280337	1					
ANR	280515	Identifier	l		280337	0					
ANR	280516	IncDec	++		280337	1					
ANR	280517	CompoundStatement		24:27:603:603	280337	3					
ANR	280518	IfStatement	if ( i == sizeof ( m -> mimetype ) )		280337	10					
ANR	280519	Condition	i == sizeof ( m -> mimetype )	1306:5:31487:31511	280337	0	True				
ANR	280520	EqualityExpression	i == sizeof ( m -> mimetype )		280337	0		==			
ANR	280521	Identifier	i		280337	0					
ANR	280522	SizeofExpression	sizeof ( m -> mimetype )		280337	1					
ANR	280523	Sizeof	sizeof		280337	0					
ANR	280524	PtrMemberAccess	m -> mimetype		280337	1					
ANR	280525	Identifier	m		280337	0					
ANR	280526	Identifier	mimetype		280337	1					
ANR	280527	CompoundStatement		25:32:638:638	280337	1					
ANR	280528	ExpressionStatement	m -> desc [ sizeof ( m -> mimetype ) - 1 ] = '\\0'	1307:2:31518:31558	280337	0	True				
ANR	280529	AssignmentExpression	m -> desc [ sizeof ( m -> mimetype ) - 1 ] = '\\0'		280337	0		=			
ANR	280530	ArrayIndexing	m -> desc [ sizeof ( m -> mimetype ) - 1 ]		280337	0					
ANR	280531	PtrMemberAccess	m -> desc		280337	0					
ANR	280532	Identifier	m		280337	0					
ANR	280533	Identifier	desc		280337	1					
ANR	280534	AdditiveExpression	sizeof ( m -> mimetype ) - 1		280337	1		-			
ANR	280535	SizeofExpression	sizeof ( m -> mimetype )		280337	0					
ANR	280536	Sizeof	sizeof		280337	0					
ANR	280537	PtrMemberAccess	m -> mimetype		280337	1					
ANR	280538	Identifier	m		280337	0					
ANR	280539	Identifier	mimetype		280337	1					
ANR	280540	PrimaryExpression	1		280337	1					
ANR	280541	PrimaryExpression	'\\0'		280337	1					
ANR	280542	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		280337	1					
ANR	280543	Condition	ms -> flags & R_MAGIC_CHECK	1308:6:31566:31590	280337	0	True				
ANR	280544	BitAndExpression	ms -> flags & R_MAGIC_CHECK		280337	0		&			
ANR	280545	PtrMemberAccess	ms -> flags		280337	0					
ANR	280546	Identifier	ms		280337	0					
ANR	280547	Identifier	flags		280337	1					
ANR	280548	Identifier	R_MAGIC_CHECK		280337	1					
ANR	280549	CompoundStatement		27:33:717:717	280337	1					
ANR	280550	ExpressionStatement	"file_magwarn ( ms , ""MIME type `%s' truncated %zu"" , m -> mimetype , i )"	1309:3:31598:31667	280337	0	True				
ANR	280551	CallExpression	"file_magwarn ( ms , ""MIME type `%s' truncated %zu"" , m -> mimetype , i )"		280337	0					
ANR	280552	Callee	file_magwarn		280337	0					
ANR	280553	Identifier	file_magwarn		280337	0					
ANR	280554	ArgumentList	ms		280337	1					
ANR	280555	Argument	ms		280337	0					
ANR	280556	Identifier	ms		280337	0					
ANR	280557	Argument	"""MIME type `%s' truncated %zu"""		280337	1					
ANR	280558	PrimaryExpression	"""MIME type `%s' truncated %zu"""		280337	0					
ANR	280559	Argument	m -> mimetype		280337	2					
ANR	280560	PtrMemberAccess	m -> mimetype		280337	0					
ANR	280561	Identifier	m		280337	0					
ANR	280562	Identifier	mimetype		280337	1					
ANR	280563	Argument	i		280337	3					
ANR	280564	Identifier	i		280337	0					
ANR	280565	ElseStatement	else		280337	0					
ANR	280566	CompoundStatement		31:8:805:805	280337	0					
ANR	280567	ExpressionStatement	m -> mimetype [ i ] = '\\0'	1313:2:31685:31706	280337	0	True				
ANR	280568	AssignmentExpression	m -> mimetype [ i ] = '\\0'		280337	0		=			
ANR	280569	ArrayIndexing	m -> mimetype [ i ]		280337	0					
ANR	280570	PtrMemberAccess	m -> mimetype		280337	0					
ANR	280571	Identifier	m		280337	0					
ANR	280572	Identifier	mimetype		280337	1					
ANR	280573	Identifier	i		280337	1					
ANR	280574	PrimaryExpression	'\\0'		280337	1					
ANR	280575	ReturnStatement	return ( i > 0 ) ? 0 : - 1 ;	1316:1:31713:31732	280337	11	True				
ANR	280576	ConditionalExpression	( i > 0 ) ? 0 : - 1		280337	0					
ANR	280577	Condition	i > 0		280337	0					
ANR	280578	RelationalExpression	i > 0		280337	0		>			
ANR	280579	Identifier	i		280337	0					
ANR	280580	PrimaryExpression	0		280337	1					
ANR	280581	PrimaryExpression	0		280337	1					
ANR	280582	UnaryOperationExpression	- 1		280337	2					
ANR	280583	UnaryOperator	-		280337	0					
ANR	280584	PrimaryExpression	1		280337	1					
ANR	280585	ReturnType	static int		280337	1					
ANR	280586	Identifier	parse_mime		280337	2					
ANR	280587	ParameterList	"RMagic * ms , struct r_magic_entry * * mentryp , ut32 * nmentryp , const char * line"		280337	3					
ANR	280588	Parameter	RMagic * ms	1282:22:30797:30806	280337	0	True				
ANR	280589	ParameterType	RMagic *		280337	0					
ANR	280590	Identifier	ms		280337	1					
ANR	280591	Parameter	struct r_magic_entry * * mentryp	1282:34:30809:30838	280337	1	True				
ANR	280592	ParameterType	struct r_magic_entry * *		280337	0					
ANR	280593	Identifier	mentryp		280337	1					
ANR	280594	Parameter	ut32 * nmentryp	1282:66:30841:30854	280337	2	True				
ANR	280595	ParameterType	ut32 *		280337	0					
ANR	280596	Identifier	nmentryp		280337	1					
ANR	280597	Parameter	const char * line	1282:82:30857:30872	280337	3	True				
ANR	280598	ParameterType	const char *		280337	0					
ANR	280599	Identifier	line		280337	1					
ANR	280600	CFGEntryNode	ENTRY		280337		True				
ANR	280601	CFGExitNode	EXIT		280337		True				
ANR	280602	Symbol	* m -> mimetype		280337						
ANR	280603	Symbol	* m -> desc		280337						
ANR	280604	Symbol	line		280337						
ANR	280605	Symbol	strchr		280337						
ANR	280606	Symbol	me -> mp		280337						
ANR	280607	Symbol	mentryp		280337						
ANR	280608	Symbol	* ms		280337						
ANR	280609	Symbol	m -> desc		280337						
ANR	280610	Symbol	m -> mimetype		280337						
ANR	280611	Symbol	me		280337						
ANR	280612	Symbol	nmentryp		280337						
ANR	280613	Symbol	* me		280337						
ANR	280614	Symbol	* * m		280337						
ANR	280615	Symbol	isascii		280337						
ANR	280616	Symbol	isalnum		280337						
ANR	280617	Symbol	ms		280337						
ANR	280618	Symbol	i		280337						
ANR	280619	Symbol	* l ++		280337						
ANR	280620	Symbol	l		280337						
ANR	280621	Symbol	m		280337						
ANR	280622	Symbol	* mentryp		280337						
ANR	280623	Symbol	* nmentryp		280337						
ANR	280624	Symbol	* i		280337						
ANR	280625	Symbol	* l		280337						
ANR	280626	Symbol	* m		280337						
ANR	280627	Symbol	ms -> flags		280337						
ANR	280628	Symbol	me -> cont_count		280337						
ANR	280629	Symbol	R_MAGIC_CHECK		280337						
ANR	280630	Function	check_format_type	1319:0:31737:33492							
ANR	280631	FunctionDef	"check_format_type (const char * ptr , int type)"		280630	0					
ANR	280632	CompoundStatement		1319:56:31793:33492	280630	0					
ANR	280633	IdentifierDeclStatement	int quad = 0 ;	1320:1:31796:31808	280630	0	True				
ANR	280634	IdentifierDecl	quad = 0		280630	0					
ANR	280635	IdentifierDeclType	int		280630	0					
ANR	280636	Identifier	quad		280630	1					
ANR	280637	AssignmentExpression	quad = 0		280630	2		=			
ANR	280638	Identifier	quad		280630	0					
ANR	280639	PrimaryExpression	0		280630	1					
ANR	280640	IfStatement	if ( * ptr == '\\0' )		280630	1					
ANR	280641	Condition	* ptr == '\\0'	1321:5:31815:31826	280630	0	True				
ANR	280642	EqualityExpression	* ptr == '\\0'		280630	0		==			
ANR	280643	UnaryOperationExpression	* ptr		280630	0					
ANR	280644	UnaryOperator	*		280630	0					
ANR	280645	Identifier	ptr		280630	1					
ANR	280646	PrimaryExpression	'\\0'		280630	1					
ANR	280647	CompoundStatement		3:19:35:35	280630	1					
ANR	280648	ReturnStatement	return - 1 ;	1323:2:31868:31877	280630	0	True				
ANR	280649	UnaryOperationExpression	- 1		280630	0					
ANR	280650	UnaryOperator	-		280630	0					
ANR	280651	PrimaryExpression	1		280630	1					
ANR	280652	SwitchStatement	switch ( type )		280630	2					
ANR	280653	Condition	type	1326:9:31892:31895	280630	0	True				
ANR	280654	Identifier	type		280630	0					
ANR	280655	CompoundStatement		8:15:104:104	280630	1					
ANR	280656	Label	case FILE_FMT_QUAD :	1327:1:31901:31919	280630	0	True				
ANR	280657	Identifier	FILE_FMT_QUAD		280630	0					
ANR	280658	ExpressionStatement	quad = 1	1328:2:31923:31931	280630	1	True				
ANR	280659	AssignmentExpression	quad = 1		280630	0		=			
ANR	280660	Identifier	quad		280630	0					
ANR	280661	PrimaryExpression	1		280630	1					
ANR	280662	Label	case FILE_FMT_NUM :	1330:1:31952:31969	280630	2	True				
ANR	280663	Identifier	FILE_FMT_NUM		280630	0					
ANR	280664	IfStatement	if ( * ptr == '-' )		280630	3					
ANR	280665	Condition	* ptr == '-'	1331:6:31977:31987	280630	0	True				
ANR	280666	EqualityExpression	* ptr == '-'		280630	0		==			
ANR	280667	UnaryOperationExpression	* ptr		280630	0					
ANR	280668	UnaryOperator	*		280630	0					
ANR	280669	Identifier	ptr		280630	1					
ANR	280670	PrimaryExpression	'-'		280630	1					
ANR	280671	CompoundStatement		13:19:196:196	280630	1					
ANR	280672	ExpressionStatement	ptr ++	1332:3:31995:32000	280630	0	True				
ANR	280673	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280674	Identifier	ptr		280630	0					
ANR	280675	IncDec	++		280630	1					
ANR	280676	IfStatement	if ( * ptr == '.' )		280630	4					
ANR	280677	Condition	* ptr == '.'	1334:6:32012:32022	280630	0	True				
ANR	280678	EqualityExpression	* ptr == '.'		280630	0		==			
ANR	280679	UnaryOperationExpression	* ptr		280630	0					
ANR	280680	UnaryOperator	*		280630	0					
ANR	280681	Identifier	ptr		280630	1					
ANR	280682	PrimaryExpression	'.'		280630	1					
ANR	280683	CompoundStatement		16:19:231:231	280630	1					
ANR	280684	ExpressionStatement	ptr ++	1335:3:32030:32035	280630	0	True				
ANR	280685	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280686	Identifier	ptr		280630	0					
ANR	280687	IncDec	++		280630	1					
ANR	280688	WhileStatement	while ( isdigit ( ( ut8 ) * ptr ) )		280630	5					
ANR	280689	Condition	isdigit ( ( ut8 ) * ptr )	1337:9:32050:32068	280630	0	True				
ANR	280690	CallExpression	isdigit ( ( ut8 ) * ptr )		280630	0					
ANR	280691	Callee	isdigit		280630	0					
ANR	280692	Identifier	isdigit		280630	0					
ANR	280693	ArgumentList	( ut8 ) * ptr		280630	1					
ANR	280694	Argument	( ut8 ) * ptr		280630	0					
ANR	280695	CastExpression	( ut8 ) * ptr		280630	0					
ANR	280696	CastTarget	ut8		280630	0					
ANR	280697	UnaryOperationExpression	* ptr		280630	1					
ANR	280698	UnaryOperator	*		280630	0					
ANR	280699	Identifier	ptr		280630	1					
ANR	280700	CompoundStatement		19:30:277:277	280630	1					
ANR	280701	ExpressionStatement	ptr ++	1338:3:32076:32081	280630	0	True				
ANR	280702	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280703	Identifier	ptr		280630	0					
ANR	280704	IncDec	++		280630	1					
ANR	280705	IfStatement	if ( * ptr == '.' )		280630	6					
ANR	280706	Condition	* ptr == '.'	1340:6:32093:32103	280630	0	True				
ANR	280707	EqualityExpression	* ptr == '.'		280630	0		==			
ANR	280708	UnaryOperationExpression	* ptr		280630	0					
ANR	280709	UnaryOperator	*		280630	0					
ANR	280710	Identifier	ptr		280630	1					
ANR	280711	PrimaryExpression	'.'		280630	1					
ANR	280712	CompoundStatement		22:19:312:312	280630	1					
ANR	280713	ExpressionStatement	ptr ++	1341:3:32111:32116	280630	0	True				
ANR	280714	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280715	Identifier	ptr		280630	0					
ANR	280716	IncDec	++		280630	1					
ANR	280717	WhileStatement	while ( isdigit ( ( ut8 ) * ptr ) )		280630	7					
ANR	280718	Condition	isdigit ( ( ut8 ) * ptr )	1343:9:32131:32149	280630	0	True				
ANR	280719	CallExpression	isdigit ( ( ut8 ) * ptr )		280630	0					
ANR	280720	Callee	isdigit		280630	0					
ANR	280721	Identifier	isdigit		280630	0					
ANR	280722	ArgumentList	( ut8 ) * ptr		280630	1					
ANR	280723	Argument	( ut8 ) * ptr		280630	0					
ANR	280724	CastExpression	( ut8 ) * ptr		280630	0					
ANR	280725	CastTarget	ut8		280630	0					
ANR	280726	UnaryOperationExpression	* ptr		280630	1					
ANR	280727	UnaryOperator	*		280630	0					
ANR	280728	Identifier	ptr		280630	1					
ANR	280729	CompoundStatement		25:30:358:358	280630	1					
ANR	280730	ExpressionStatement	ptr ++	1344:3:32157:32162	280630	0	True				
ANR	280731	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280732	Identifier	ptr		280630	0					
ANR	280733	IncDec	++		280630	1					
ANR	280734	IfStatement	if ( quad )		280630	8					
ANR	280735	Condition	quad	1346:6:32174:32177	280630	0	True				
ANR	280736	Identifier	quad		280630	0					
ANR	280737	CompoundStatement		28:12:386:386	280630	1					
ANR	280738	IfStatement	if ( * ptr ++ != 'l' )		280630	0					
ANR	280739	Condition	* ptr ++ != 'l'	1347:7:32189:32201	280630	0	True				
ANR	280740	EqualityExpression	* ptr ++ != 'l'		280630	0		!=			
ANR	280741	UnaryOperationExpression	* ptr ++		280630	0					
ANR	280742	UnaryOperator	*		280630	0					
ANR	280743	PostIncDecOperationExpression	ptr ++		280630	1					
ANR	280744	Identifier	ptr		280630	0					
ANR	280745	IncDec	++		280630	1					
ANR	280746	PrimaryExpression	'l'		280630	1					
ANR	280747	CompoundStatement		29:22:410:410	280630	1					
ANR	280748	ReturnStatement	return - 1 ;	1348:4:32210:32219	280630	0	True				
ANR	280749	UnaryOperationExpression	- 1		280630	0					
ANR	280750	UnaryOperator	-		280630	0					
ANR	280751	PrimaryExpression	1		280630	1					
ANR	280752	IfStatement	if ( * ptr ++ != 'l' )		280630	1					
ANR	280753	Condition	* ptr ++ != 'l'	1350:7:32233:32245	280630	0	True				
ANR	280754	EqualityExpression	* ptr ++ != 'l'		280630	0		!=			
ANR	280755	UnaryOperationExpression	* ptr ++		280630	0					
ANR	280756	UnaryOperator	*		280630	0					
ANR	280757	PostIncDecOperationExpression	ptr ++		280630	1					
ANR	280758	Identifier	ptr		280630	0					
ANR	280759	IncDec	++		280630	1					
ANR	280760	PrimaryExpression	'l'		280630	1					
ANR	280761	CompoundStatement		32:22:454:454	280630	1					
ANR	280762	ReturnStatement	return - 1 ;	1351:4:32254:32263	280630	0	True				
ANR	280763	UnaryOperationExpression	- 1		280630	0					
ANR	280764	UnaryOperator	-		280630	0					
ANR	280765	PrimaryExpression	1		280630	1					
ANR	280766	SwitchStatement	switch ( * ptr ++ )		280630	9					
ANR	280767	Condition	* ptr ++	1354:10:32284:32289	280630	0	True				
ANR	280768	UnaryOperationExpression	* ptr ++		280630	0					
ANR	280769	UnaryOperator	*		280630	0					
ANR	280770	PostIncDecOperationExpression	ptr ++		280630	1					
ANR	280771	Identifier	ptr		280630	0					
ANR	280772	IncDec	++		280630	1					
ANR	280773	CompoundStatement		36:18:498:498	280630	1					
ANR	280774	Label	case 'l' :	1355:2:32296:32304	280630	0	True				
ANR	280775	SwitchStatement	switch ( * ptr ++ )		280630	1					
ANR	280776	Condition	* ptr ++	1356:11:32317:32322	280630	0	True				
ANR	280777	UnaryOperationExpression	* ptr ++		280630	0					
ANR	280778	UnaryOperator	*		280630	0					
ANR	280779	PostIncDecOperationExpression	ptr ++		280630	1					
ANR	280780	Identifier	ptr		280630	0					
ANR	280781	IncDec	++		280630	1					
ANR	280782	CompoundStatement		38:19:531:531	280630	1					
ANR	280783	Label	case 'i' :	1357:3:32330:32338	280630	0	True				
ANR	280784	Label	case 'd' :	1358:3:32343:32351	280630	1	True				
ANR	280785	Label	case 'u' :	1359:3:32356:32364	280630	2	True				
ANR	280786	Label	case 'x' :	1360:3:32369:32377	280630	3	True				
ANR	280787	Label	case 'X' :	1361:3:32382:32390	280630	4	True				
ANR	280788	ReturnStatement	return 0 ;	1362:4:32396:32404	280630	5	True				
ANR	280789	PrimaryExpression	0		280630	0					
ANR	280790	Label	default :	1363:3:32409:32416	280630	6	True				
ANR	280791	Identifier	default		280630	0					
ANR	280792	ReturnStatement	return - 1 ;	1364:4:32422:32431	280630	7	True				
ANR	280793	UnaryOperationExpression	- 1		280630	0					
ANR	280794	UnaryOperator	-		280630	0					
ANR	280795	PrimaryExpression	1		280630	1					
ANR	280796	Label	case 'h' :	1366:2:32440:32448	280630	2	True				
ANR	280797	SwitchStatement	switch ( * ptr ++ )		280630	3					
ANR	280798	Condition	* ptr ++	1367:11:32461:32466	280630	0	True				
ANR	280799	UnaryOperationExpression	* ptr ++		280630	0					
ANR	280800	UnaryOperator	*		280630	0					
ANR	280801	PostIncDecOperationExpression	ptr ++		280630	1					
ANR	280802	Identifier	ptr		280630	0					
ANR	280803	IncDec	++		280630	1					
ANR	280804	CompoundStatement		49:19:675:675	280630	1					
ANR	280805	Label	case 'h' :	1368:3:32474:32482	280630	0	True				
ANR	280806	SwitchStatement	switch ( * ptr ++ )		280630	1					
ANR	280807	Condition	* ptr ++	1369:12:32496:32501	280630	0	True				
ANR	280808	UnaryOperationExpression	* ptr ++		280630	0					
ANR	280809	UnaryOperator	*		280630	0					
ANR	280810	PostIncDecOperationExpression	ptr ++		280630	1					
ANR	280811	Identifier	ptr		280630	0					
ANR	280812	IncDec	++		280630	1					
ANR	280813	CompoundStatement		51:20:710:710	280630	1					
ANR	280814	Label	case 'i' :	1370:4:32510:32518	280630	0	True				
ANR	280815	Label	case 'd' :	1371:4:32524:32532	280630	1	True				
ANR	280816	Label	case 'u' :	1372:4:32538:32546	280630	2	True				
ANR	280817	Label	case 'x' :	1373:4:32552:32560	280630	3	True				
ANR	280818	Label	case 'X' :	1374:4:32566:32574	280630	4	True				
ANR	280819	ReturnStatement	return 0 ;	1375:5:32581:32589	280630	5	True				
ANR	280820	PrimaryExpression	0		280630	0					
ANR	280821	Label	default :	1376:4:32595:32602	280630	6	True				
ANR	280822	Identifier	default		280630	0					
ANR	280823	ReturnStatement	return - 1 ;	1377:5:32609:32618	280630	7	True				
ANR	280824	UnaryOperationExpression	- 1		280630	0					
ANR	280825	UnaryOperator	-		280630	0					
ANR	280826	PrimaryExpression	1		280630	1					
ANR	280827	Label	case 'd' :	1379:3:32629:32637	280630	2	True				
ANR	280828	ReturnStatement	return 0 ;	1380:4:32643:32651	280630	3	True				
ANR	280829	PrimaryExpression	0		280630	0					
ANR	280830	Label	default :	1381:3:32656:32663	280630	4	True				
ANR	280831	Identifier	default		280630	0					
ANR	280832	ReturnStatement	return - 1 ;	1382:4:32669:32678	280630	5	True				
ANR	280833	UnaryOperationExpression	- 1		280630	0					
ANR	280834	UnaryOperator	-		280630	0					
ANR	280835	PrimaryExpression	1		280630	1					
ANR	280836	Label	case 'i' :	1384:2:32687:32695	280630	4	True				
ANR	280837	Label	case 'c' :	1385:2:32699:32707	280630	5	True				
ANR	280838	Label	case 'd' :	1386:2:32711:32719	280630	6	True				
ANR	280839	Label	case 'u' :	1387:2:32723:32731	280630	7	True				
ANR	280840	Label	case 'x' :	1388:2:32735:32743	280630	8	True				
ANR	280841	Label	case 'X' :	1389:2:32747:32755	280630	9	True				
ANR	280842	ReturnStatement	return 0 ;	1390:3:32760:32768	280630	10	True				
ANR	280843	PrimaryExpression	0		280630	0					
ANR	280844	Label	default :	1391:2:32772:32779	280630	11	True				
ANR	280845	Identifier	default		280630	0					
ANR	280846	ReturnStatement	return - 1 ;	1392:3:32784:32793	280630	12	True				
ANR	280847	UnaryOperationExpression	- 1		280630	0					
ANR	280848	UnaryOperator	-		280630	0					
ANR	280849	PrimaryExpression	1		280630	1					
ANR	280850	Label	case FILE_FMT_FLOAT :	1394:1:32800:32819	280630	10	True				
ANR	280851	Identifier	FILE_FMT_FLOAT		280630	0					
ANR	280852	Label	case FILE_FMT_DOUBLE :	1395:1:32822:32842	280630	11	True				
ANR	280853	Identifier	FILE_FMT_DOUBLE		280630	0					
ANR	280854	IfStatement	if ( * ptr == '-' )		280630	12					
ANR	280855	Condition	* ptr == '-'	1396:6:32850:32860	280630	0	True				
ANR	280856	EqualityExpression	* ptr == '-'		280630	0		==			
ANR	280857	UnaryOperationExpression	* ptr		280630	0					
ANR	280858	UnaryOperator	*		280630	0					
ANR	280859	Identifier	ptr		280630	1					
ANR	280860	PrimaryExpression	'-'		280630	1					
ANR	280861	CompoundStatement		78:19:1069:1069	280630	1					
ANR	280862	ExpressionStatement	ptr ++	1397:3:32868:32873	280630	0	True				
ANR	280863	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280864	Identifier	ptr		280630	0					
ANR	280865	IncDec	++		280630	1					
ANR	280866	IfStatement	if ( * ptr == '.' )		280630	13					
ANR	280867	Condition	* ptr == '.'	1399:6:32885:32895	280630	0	True				
ANR	280868	EqualityExpression	* ptr == '.'		280630	0		==			
ANR	280869	UnaryOperationExpression	* ptr		280630	0					
ANR	280870	UnaryOperator	*		280630	0					
ANR	280871	Identifier	ptr		280630	1					
ANR	280872	PrimaryExpression	'.'		280630	1					
ANR	280873	CompoundStatement		81:19:1104:1104	280630	1					
ANR	280874	ExpressionStatement	ptr ++	1400:3:32903:32908	280630	0	True				
ANR	280875	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280876	Identifier	ptr		280630	0					
ANR	280877	IncDec	++		280630	1					
ANR	280878	WhileStatement	while ( isdigit ( ( ut8 ) * ptr ) )		280630	14					
ANR	280879	Condition	isdigit ( ( ut8 ) * ptr )	1402:9:32923:32941	280630	0	True				
ANR	280880	CallExpression	isdigit ( ( ut8 ) * ptr )		280630	0					
ANR	280881	Callee	isdigit		280630	0					
ANR	280882	Identifier	isdigit		280630	0					
ANR	280883	ArgumentList	( ut8 ) * ptr		280630	1					
ANR	280884	Argument	( ut8 ) * ptr		280630	0					
ANR	280885	CastExpression	( ut8 ) * ptr		280630	0					
ANR	280886	CastTarget	ut8		280630	0					
ANR	280887	UnaryOperationExpression	* ptr		280630	1					
ANR	280888	UnaryOperator	*		280630	0					
ANR	280889	Identifier	ptr		280630	1					
ANR	280890	CompoundStatement		84:30:1150:1150	280630	1					
ANR	280891	ExpressionStatement	ptr ++	1403:3:32949:32954	280630	0	True				
ANR	280892	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280893	Identifier	ptr		280630	0					
ANR	280894	IncDec	++		280630	1					
ANR	280895	IfStatement	if ( * ptr == '.' )		280630	15					
ANR	280896	Condition	* ptr == '.'	1405:6:32966:32976	280630	0	True				
ANR	280897	EqualityExpression	* ptr == '.'		280630	0		==			
ANR	280898	UnaryOperationExpression	* ptr		280630	0					
ANR	280899	UnaryOperator	*		280630	0					
ANR	280900	Identifier	ptr		280630	1					
ANR	280901	PrimaryExpression	'.'		280630	1					
ANR	280902	CompoundStatement		87:19:1185:1185	280630	1					
ANR	280903	ExpressionStatement	ptr ++	1406:3:32984:32989	280630	0	True				
ANR	280904	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280905	Identifier	ptr		280630	0					
ANR	280906	IncDec	++		280630	1					
ANR	280907	WhileStatement	while ( isdigit ( ( ut8 ) * ptr ) )		280630	16					
ANR	280908	Condition	isdigit ( ( ut8 ) * ptr )	1408:9:33004:33022	280630	0	True				
ANR	280909	CallExpression	isdigit ( ( ut8 ) * ptr )		280630	0					
ANR	280910	Callee	isdigit		280630	0					
ANR	280911	Identifier	isdigit		280630	0					
ANR	280912	ArgumentList	( ut8 ) * ptr		280630	1					
ANR	280913	Argument	( ut8 ) * ptr		280630	0					
ANR	280914	CastExpression	( ut8 ) * ptr		280630	0					
ANR	280915	CastTarget	ut8		280630	0					
ANR	280916	UnaryOperationExpression	* ptr		280630	1					
ANR	280917	UnaryOperator	*		280630	0					
ANR	280918	Identifier	ptr		280630	1					
ANR	280919	CompoundStatement		90:30:1231:1231	280630	1					
ANR	280920	ExpressionStatement	ptr ++	1409:3:33030:33035	280630	0	True				
ANR	280921	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280922	Identifier	ptr		280630	0					
ANR	280923	IncDec	++		280630	1					
ANR	280924	SwitchStatement	switch ( * ptr ++ )		280630	17					
ANR	280925	Condition	* ptr ++	1412:10:33052:33057	280630	0	True				
ANR	280926	UnaryOperationExpression	* ptr ++		280630	0					
ANR	280927	UnaryOperator	*		280630	0					
ANR	280928	PostIncDecOperationExpression	ptr ++		280630	1					
ANR	280929	Identifier	ptr		280630	0					
ANR	280930	IncDec	++		280630	1					
ANR	280931	CompoundStatement		94:18:1266:1266	280630	1					
ANR	280932	Label	case 'e' :	1413:2:33064:33072	280630	0	True				
ANR	280933	Label	case 'E' :	1414:2:33076:33084	280630	1	True				
ANR	280934	Label	case 'f' :	1415:2:33088:33096	280630	2	True				
ANR	280935	Label	case 'F' :	1416:2:33100:33108	280630	3	True				
ANR	280936	Label	case 'g' :	1417:2:33112:33120	280630	4	True				
ANR	280937	Label	case 'G' :	1418:2:33124:33132	280630	5	True				
ANR	280938	ReturnStatement	return 0 ;	1419:3:33137:33145	280630	6	True				
ANR	280939	PrimaryExpression	0		280630	0					
ANR	280940	Label	default :	1421:2:33150:33157	280630	7	True				
ANR	280941	Identifier	default		280630	0					
ANR	280942	ReturnStatement	return - 1 ;	1422:3:33162:33171	280630	8	True				
ANR	280943	UnaryOperationExpression	- 1		280630	0					
ANR	280944	UnaryOperator	-		280630	0					
ANR	280945	PrimaryExpression	1		280630	1					
ANR	280946	Label	case FILE_FMT_STR :	1424:1:33178:33195	280630	18	True				
ANR	280947	Identifier	FILE_FMT_STR		280630	0					
ANR	280948	IfStatement	if ( * ptr == '-' )		280630	19					
ANR	280949	Condition	* ptr == '-'	1425:6:33203:33213	280630	0	True				
ANR	280950	EqualityExpression	* ptr == '-'		280630	0		==			
ANR	280951	UnaryOperationExpression	* ptr		280630	0					
ANR	280952	UnaryOperator	*		280630	0					
ANR	280953	Identifier	ptr		280630	1					
ANR	280954	PrimaryExpression	'-'		280630	1					
ANR	280955	CompoundStatement		107:19:1422:1422	280630	1					
ANR	280956	ExpressionStatement	ptr ++	1426:3:33221:33226	280630	0	True				
ANR	280957	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280958	Identifier	ptr		280630	0					
ANR	280959	IncDec	++		280630	1					
ANR	280960	WhileStatement	while ( isdigit ( ( ut8 ) * ptr ) )		280630	20					
ANR	280961	Condition	isdigit ( ( ut8 ) * ptr )	1428:9:33241:33259	280630	0	True				
ANR	280962	CallExpression	isdigit ( ( ut8 ) * ptr )		280630	0					
ANR	280963	Callee	isdigit		280630	0					
ANR	280964	Identifier	isdigit		280630	0					
ANR	280965	ArgumentList	( ut8 ) * ptr		280630	1					
ANR	280966	Argument	( ut8 ) * ptr		280630	0					
ANR	280967	CastExpression	( ut8 ) * ptr		280630	0					
ANR	280968	CastTarget	ut8		280630	0					
ANR	280969	UnaryOperationExpression	* ptr		280630	1					
ANR	280970	UnaryOperator	*		280630	0					
ANR	280971	Identifier	ptr		280630	1					
ANR	280972	CompoundStatement		110:30:1468:1468	280630	1					
ANR	280973	ExpressionStatement	ptr ++	1429:3:33267:33272	280630	0	True				
ANR	280974	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280975	Identifier	ptr		280630	0					
ANR	280976	IncDec	++		280630	1					
ANR	280977	IfStatement	if ( * ptr == '.' )		280630	21					
ANR	280978	Condition	* ptr == '.'	1431:6:33284:33294	280630	0	True				
ANR	280979	EqualityExpression	* ptr == '.'		280630	0		==			
ANR	280980	UnaryOperationExpression	* ptr		280630	0					
ANR	280981	UnaryOperator	*		280630	0					
ANR	280982	Identifier	ptr		280630	1					
ANR	280983	PrimaryExpression	'.'		280630	1					
ANR	280984	CompoundStatement		113:19:1503:1503	280630	1					
ANR	280985	ExpressionStatement	ptr ++	1432:3:33302:33307	280630	0	True				
ANR	280986	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	280987	Identifier	ptr		280630	0					
ANR	280988	IncDec	++		280630	1					
ANR	280989	WhileStatement	while ( isdigit ( ( ut8 ) * ptr ) )		280630	1					
ANR	280990	Condition	isdigit ( ( ut8 ) * ptr )	1433:10:33319:33337	280630	0	True				
ANR	280991	CallExpression	isdigit ( ( ut8 ) * ptr )		280630	0					
ANR	280992	Callee	isdigit		280630	0					
ANR	280993	Identifier	isdigit		280630	0					
ANR	280994	ArgumentList	( ut8 ) * ptr		280630	1					
ANR	280995	Argument	( ut8 ) * ptr		280630	0					
ANR	280996	CastExpression	( ut8 ) * ptr		280630	0					
ANR	280997	CastTarget	ut8		280630	0					
ANR	280998	UnaryOperationExpression	* ptr		280630	1					
ANR	280999	UnaryOperator	*		280630	0					
ANR	281000	Identifier	ptr		280630	1					
ANR	281001	CompoundStatement		115:31:1546:1546	280630	1					
ANR	281002	ExpressionStatement	ptr ++	1434:4:33346:33351	280630	0	True				
ANR	281003	PostIncDecOperationExpression	ptr ++		280630	0					
ANR	281004	Identifier	ptr		280630	0					
ANR	281005	IncDec	++		280630	1					
ANR	281006	IfStatement	if ( * ptr ++ == 's' )		280630	22					
ANR	281007	Condition	* ptr ++ == 's'	1438:6:33369:33381	280630	0	True				
ANR	281008	EqualityExpression	* ptr ++ == 's'		280630	0		==			
ANR	281009	UnaryOperationExpression	* ptr ++		280630	0					
ANR	281010	UnaryOperator	*		280630	0					
ANR	281011	PostIncDecOperationExpression	ptr ++		280630	1					
ANR	281012	Identifier	ptr		280630	0					
ANR	281013	IncDec	++		280630	1					
ANR	281014	PrimaryExpression	's'		280630	1					
ANR	281015	CompoundStatement		120:21:1590:1590	280630	1					
ANR	281016	ReturnStatement	return 0 ;	1439:3:33389:33397	280630	0	True				
ANR	281017	PrimaryExpression	0		280630	0					
ANR	281018	ReturnStatement	return - 1 ;	1441:2:33405:33414	280630	23	True				
ANR	281019	UnaryOperationExpression	- 1		280630	0					
ANR	281020	UnaryOperator	-		280630	0					
ANR	281021	PrimaryExpression	1		280630	1					
ANR	281022	Label	default :	1442:1:33417:33424	280630	24	True				
ANR	281023	Identifier	default		280630	0					
ANR	281024	ExpressionStatement	abort ( )	1444:2:33451:33459	280630	25	True				
ANR	281025	CallExpression	abort ( )		280630	0					
ANR	281026	Callee	abort		280630	0					
ANR	281027	Identifier	abort		280630	0					
ANR	281028	ArgumentList			280630	1					
ANR	281029	ReturnStatement	return - 1 ;	1447:1:33481:33490	280630	3	True				
ANR	281030	UnaryOperationExpression	- 1		280630	0					
ANR	281031	UnaryOperator	-		280630	0					
ANR	281032	PrimaryExpression	1		280630	1					
ANR	281033	ReturnType	static int		280630	1					
ANR	281034	Identifier	check_format_type		280630	2					
ANR	281035	ParameterList	"const char * ptr , int type"		280630	3					
ANR	281036	Parameter	const char * ptr	1319:29:31766:31780	280630	0	True				
ANR	281037	ParameterType	const char *		280630	0					
ANR	281038	Identifier	ptr		280630	1					
ANR	281039	Parameter	int type	1319:46:31783:31790	280630	1	True				
ANR	281040	ParameterType	int		280630	0					
ANR	281041	Identifier	type		280630	1					
ANR	281042	CFGEntryNode	ENTRY		280630		True				
ANR	281043	CFGExitNode	EXIT		280630		True				
ANR	281044	Symbol	quad		280630						
ANR	281045	Symbol	* ptr ++		280630						
ANR	281046	Symbol	* ptr		280630						
ANR	281047	Symbol	type		280630						
ANR	281048	Symbol	isdigit		280630						
ANR	281049	Symbol	ptr		280630						
ANR	281050	Function	check_format	1454:0:33592:34807							
ANR	281051	FunctionDef	"check_format (RMagic * ms , struct r_magic * m)"		281050	0					
ANR	281052	CompoundStatement		1454:55:33647:34807	281050	0					
ANR	281053	IdentifierDeclStatement	char * ptr ;	1455:1:33650:33659	281050	0	True				
ANR	281054	IdentifierDecl	* ptr		281050	0					
ANR	281055	IdentifierDeclType	char *		281050	0					
ANR	281056	Identifier	ptr		281050	1					
ANR	281057	ForStatement	for ( ptr = m -> desc ; * ptr ; ptr ++ )		281050	1					
ANR	281058	ForInit	ptr = m -> desc ;	1457:6:33668:33681	281050	0	True				
ANR	281059	AssignmentExpression	ptr = m -> desc		281050	0		=			
ANR	281060	Identifier	ptr		281050	0					
ANR	281061	PtrMemberAccess	m -> desc		281050	1					
ANR	281062	Identifier	m		281050	0					
ANR	281063	Identifier	desc		281050	1					
ANR	281064	Condition	* ptr	1457:21:33683:33686	281050	1	True				
ANR	281065	UnaryOperationExpression	* ptr		281050	0					
ANR	281066	UnaryOperator	*		281050	0					
ANR	281067	Identifier	ptr		281050	1					
ANR	281068	PostIncDecOperationExpression	ptr ++	1457:27:33689:33693	281050	2	True				
ANR	281069	Identifier	ptr		281050	0					
ANR	281070	IncDec	++		281050	1					
ANR	281071	CompoundStatement		4:34:48:48	281050	3					
ANR	281072	IfStatement	if ( * ptr == '%' )		281050	0					
ANR	281073	Condition	* ptr == '%'	1458:6:33704:33714	281050	0	True				
ANR	281074	EqualityExpression	* ptr == '%'		281050	0		==			
ANR	281075	UnaryOperationExpression	* ptr		281050	0					
ANR	281076	UnaryOperator	*		281050	0					
ANR	281077	Identifier	ptr		281050	1					
ANR	281078	PrimaryExpression	'%'		281050	1					
ANR	281079	CompoundStatement		5:19:69:69	281050	1					
ANR	281080	BreakStatement	break ;	1459:3:33722:33727	281050	0	True				
ANR	281081	IfStatement	if ( * ptr == '\\0' )		281050	2					
ANR	281082	Condition	* ptr == '\\0'	1462:5:33741:33752	281050	0	True				
ANR	281083	EqualityExpression	* ptr == '\\0'		281050	0		==			
ANR	281084	UnaryOperationExpression	* ptr		281050	0					
ANR	281085	UnaryOperator	*		281050	0					
ANR	281086	Identifier	ptr		281050	1					
ANR	281087	PrimaryExpression	'\\0'		281050	1					
ANR	281088	CompoundStatement		9:19:107:107	281050	1					
ANR	281089	ReturnStatement	return 1 ;	1464:2:33788:33796	281050	0	True				
ANR	281090	PrimaryExpression	1		281050	0					
ANR	281091	IfStatement	if ( file_nformats != file_nnames )		281050	3					
ANR	281092	Condition	file_nformats != file_nnames	1467:5:33807:33834	281050	0	True				
ANR	281093	EqualityExpression	file_nformats != file_nnames		281050	0		!=			
ANR	281094	Identifier	file_nformats		281050	0					
ANR	281095	Identifier	file_nnames		281050	1					
ANR	281096	CompoundStatement		14:35:189:189	281050	1					
ANR	281097	ReturnStatement	return - 1 ;	1468:2:33841:33850	281050	0	True				
ANR	281098	UnaryOperationExpression	- 1		281050	0					
ANR	281099	UnaryOperator	-		281050	0					
ANR	281100	PrimaryExpression	1		281050	1					
ANR	281101	IfStatement	if ( m -> type >= file_nformats )		281050	4					
ANR	281102	Condition	m -> type >= file_nformats	1471:5:33863:33886	281050	0	True				
ANR	281103	RelationalExpression	m -> type >= file_nformats		281050	0		>=			
ANR	281104	PtrMemberAccess	m -> type		281050	0					
ANR	281105	Identifier	m		281050	0					
ANR	281106	Identifier	type		281050	1					
ANR	281107	Identifier	file_nformats		281050	1					
ANR	281108	CompoundStatement		18:31:241:241	281050	1					
ANR	281109	Statement	file_magwarn	1472:2:33893:33904	281050	0	True				
ANR	281110	Statement	(	1472:14:33905:33905	281050	1	True				
ANR	281111	Statement	ms	1472:15:33906:33907	281050	2	True				
ANR	281112	Statement	","	1472:17:33908:33908	281050	3	True				
ANR	281113	Statement	"""Internal error inconsistency between """	1472:19:33910:33948	281050	4	True				
ANR	281114	Statement	"""m->type and format strings"""	1473:6:33956:33983	281050	5	True				
ANR	281115	Statement	)	1473:34:33984:33984	281050	6	True				
ANR	281116	ExpressionStatement		1473:35:33985:33985	281050	7	True				
ANR	281117	ReturnStatement	return - 1 ;	1474:2:33989:33998	281050	8	True				
ANR	281118	UnaryOperationExpression	- 1		281050	0					
ANR	281119	UnaryOperator	-		281050	0					
ANR	281120	PrimaryExpression	1		281050	1					
ANR	281121	IfStatement	if ( magic_file_formats [ m -> type ] == FILE_FMT_NONE )		281050	5					
ANR	281122	Condition	magic_file_formats [ m -> type ] == FILE_FMT_NONE	1476:5:34008:34051	281050	0	True				
ANR	281123	EqualityExpression	magic_file_formats [ m -> type ] == FILE_FMT_NONE		281050	0		==			
ANR	281124	ArrayIndexing	magic_file_formats [ m -> type ]		281050	0					
ANR	281125	Identifier	magic_file_formats		281050	0					
ANR	281126	PtrMemberAccess	m -> type		281050	1					
ANR	281127	Identifier	m		281050	0					
ANR	281128	Identifier	type		281050	1					
ANR	281129	Identifier	FILE_FMT_NONE		281050	1					
ANR	281130	CompoundStatement		23:51:406:406	281050	1					
ANR	281131	Statement	file_magwarn	1477:2:34058:34069	281050	0	True				
ANR	281132	Statement	(	1477:14:34070:34070	281050	1	True				
ANR	281133	Statement	ms	1477:15:34071:34072	281050	2	True				
ANR	281134	Statement	","	1477:17:34073:34073	281050	3	True				
ANR	281135	Statement	"""No format string for `%s' with description """	1477:19:34075:34119	281050	4	True				
ANR	281136	Statement	"""`%s'"""	1478:6:34127:34132	281050	5	True				
ANR	281137	Statement	","	1478:12:34133:34133	281050	6	True				
ANR	281138	Statement	m	1478:14:34135:34135	281050	7	True				
ANR	281139	Statement	->	1478:15:34136:34137	281050	8	True				
ANR	281140	Statement	desc	1478:17:34138:34141	281050	9	True				
ANR	281141	Statement	","	1478:21:34142:34142	281050	10	True				
ANR	281142	Statement	magic_file_names	1478:23:34144:34159	281050	11	True				
ANR	281143	Statement	[	1478:39:34160:34160	281050	12	True				
ANR	281144	Statement	m	1478:40:34161:34161	281050	13	True				
ANR	281145	Statement	->	1478:41:34162:34163	281050	14	True				
ANR	281146	Statement	type	1478:43:34164:34167	281050	15	True				
ANR	281147	Statement	]	1478:47:34168:34168	281050	16	True				
ANR	281148	Statement	)	1478:48:34169:34169	281050	17	True				
ANR	281149	ExpressionStatement		1478:49:34170:34170	281050	18	True				
ANR	281150	ReturnStatement	return - 1 ;	1479:2:34174:34183	281050	19	True				
ANR	281151	UnaryOperationExpression	- 1		281050	0					
ANR	281152	UnaryOperator	-		281050	0					
ANR	281153	PrimaryExpression	1		281050	1					
ANR	281154	ExpressionStatement	ptr ++	1482:1:34190:34195	281050	6	True				
ANR	281155	PostIncDecOperationExpression	ptr ++		281050	0					
ANR	281156	Identifier	ptr		281050	0					
ANR	281157	IncDec	++		281050	1					
ANR	281158	IfStatement	"if ( ptr && check_format_type ( ptr , magic_file_formats [ m -> type ] ) == - 1 )"		281050	7					
ANR	281159	Condition	"ptr && check_format_type ( ptr , magic_file_formats [ m -> type ] ) == - 1"	1483:5:34202:34265	281050	0	True				
ANR	281160	AndExpression	"ptr && check_format_type ( ptr , magic_file_formats [ m -> type ] ) == - 1"		281050	0		&&			
ANR	281161	Identifier	ptr		281050	0					
ANR	281162	EqualityExpression	"check_format_type ( ptr , magic_file_formats [ m -> type ] ) == - 1"		281050	1		==			
ANR	281163	CallExpression	"check_format_type ( ptr , magic_file_formats [ m -> type ] )"		281050	0					
ANR	281164	Callee	check_format_type		281050	0					
ANR	281165	Identifier	check_format_type		281050	0					
ANR	281166	ArgumentList	ptr		281050	1					
ANR	281167	Argument	ptr		281050	0					
ANR	281168	Identifier	ptr		281050	0					
ANR	281169	Argument	magic_file_formats [ m -> type ]		281050	1					
ANR	281170	ArrayIndexing	magic_file_formats [ m -> type ]		281050	0					
ANR	281171	Identifier	magic_file_formats		281050	0					
ANR	281172	PtrMemberAccess	m -> type		281050	1					
ANR	281173	Identifier	m		281050	0					
ANR	281174	Identifier	type		281050	1					
ANR	281175	UnaryOperationExpression	- 1		281050	1					
ANR	281176	UnaryOperator	-		281050	0					
ANR	281177	PrimaryExpression	1		281050	1					
ANR	281178	CompoundStatement		30:71:620:620	281050	1					
ANR	281179	Statement	file_magwarn	1488:2:34378:34389	281050	0	True				
ANR	281180	Statement	(	1488:14:34390:34390	281050	1	True				
ANR	281181	Statement	ms	1488:15:34391:34392	281050	2	True				
ANR	281182	Statement	","	1488:17:34393:34393	281050	3	True				
ANR	281183	Statement	"""Printf format `%c' is not valid for type """	1488:19:34395:34437	281050	4	True				
ANR	281184	Statement	"""`%s' in description `%s'"""	1489:6:34445:34470	281050	5	True				
ANR	281185	Statement	","	1489:32:34471:34471	281050	6	True				
ANR	281186	Statement	ptr	1490:6:34479:34481	281050	7	True				
ANR	281187	Statement	&&	1490:10:34483:34484	281050	8	True				
ANR	281188	Statement	*	1490:13:34486:34486	281050	9	True				
ANR	281189	Statement	ptr	1490:14:34487:34489	281050	10	True				
ANR	281190	Statement	?	1490:18:34491:34491	281050	11	True				
ANR	281191	Statement	*	1490:20:34493:34493	281050	12	True				
ANR	281192	Label	ptr :	1490:21:34494:34498	281050	13	True				
ANR	281193	Identifier	ptr		281050	0					
ANR	281194	Statement	'?'	1490:27:34500:34502	281050	14	True				
ANR	281195	Statement	","	1490:30:34503:34503	281050	15	True				
ANR	281196	Statement	magic_file_names	1491:6:34511:34526	281050	16	True				
ANR	281197	Statement	[	1491:22:34527:34527	281050	17	True				
ANR	281198	Statement	m	1491:23:34528:34528	281050	18	True				
ANR	281199	Statement	->	1491:24:34529:34530	281050	19	True				
ANR	281200	Statement	type	1491:26:34531:34534	281050	20	True				
ANR	281201	Statement	]	1491:30:34535:34535	281050	21	True				
ANR	281202	Statement	","	1491:31:34536:34536	281050	22	True				
ANR	281203	Statement	m	1491:33:34538:34538	281050	23	True				
ANR	281204	Statement	->	1491:34:34539:34540	281050	24	True				
ANR	281205	Statement	desc	1491:36:34541:34544	281050	25	True				
ANR	281206	Statement	)	1491:40:34545:34545	281050	26	True				
ANR	281207	ExpressionStatement		1491:41:34546:34546	281050	27	True				
ANR	281208	ReturnStatement	return - 1 ;	1492:2:34550:34559	281050	28	True				
ANR	281209	UnaryOperationExpression	- 1		281050	0					
ANR	281210	UnaryOperator	-		281050	0					
ANR	281211	PrimaryExpression	1		281050	1					
ANR	281212	ForStatement	for ( ; * ptr ; ptr ++ )		281050	8					
ANR	281213	Condition	* ptr	1495:8:34573:34576	281050	0	True				
ANR	281214	UnaryOperationExpression	* ptr		281050	0					
ANR	281215	UnaryOperator	*		281050	0					
ANR	281216	Identifier	ptr		281050	1					
ANR	281217	PostIncDecOperationExpression	ptr ++	1495:14:34579:34583	281050	1	True				
ANR	281218	Identifier	ptr		281050	0					
ANR	281219	IncDec	++		281050	1					
ANR	281220	CompoundStatement		42:21:938:938	281050	2					
ANR	281221	IfStatement	if ( * ptr == '%' )		281050	0					
ANR	281222	Condition	* ptr == '%'	1496:6:34594:34604	281050	0	True				
ANR	281223	EqualityExpression	* ptr == '%'		281050	0		==			
ANR	281224	UnaryOperationExpression	* ptr		281050	0					
ANR	281225	UnaryOperator	*		281050	0					
ANR	281226	Identifier	ptr		281050	1					
ANR	281227	PrimaryExpression	'%'		281050	1					
ANR	281228	CompoundStatement		43:19:959:959	281050	1					
ANR	281229	Statement	file_magwarn	1497:3:34612:34623	281050	0	True				
ANR	281230	Statement	(	1497:16:34625:34625	281050	1	True				
ANR	281231	Statement	ms	1497:17:34626:34627	281050	2	True				
ANR	281232	Statement	","	1497:19:34628:34628	281050	3	True				
ANR	281233	Statement	"""Too many format strings (should have at most one) """	1498:7:34637:34688	281050	4	True				
ANR	281234	Statement	"""for `%s' with description `%s'"""	1499:7:34697:34728	281050	5	True				
ANR	281235	Statement	","	1499:39:34729:34729	281050	6	True				
ANR	281236	Statement	magic_file_names	1500:7:34738:34753	281050	7	True				
ANR	281237	Statement	[	1500:23:34754:34754	281050	8	True				
ANR	281238	Statement	m	1500:24:34755:34755	281050	9	True				
ANR	281239	Statement	->	1500:25:34756:34757	281050	10	True				
ANR	281240	Statement	type	1500:27:34758:34761	281050	11	True				
ANR	281241	Statement	]	1500:31:34762:34762	281050	12	True				
ANR	281242	Statement	","	1500:32:34763:34763	281050	13	True				
ANR	281243	Statement	m	1500:34:34765:34765	281050	14	True				
ANR	281244	Statement	->	1500:35:34766:34767	281050	15	True				
ANR	281245	Statement	desc	1500:37:34768:34771	281050	16	True				
ANR	281246	Statement	)	1500:41:34772:34772	281050	17	True				
ANR	281247	ExpressionStatement		1500:42:34773:34773	281050	18	True				
ANR	281248	ReturnStatement	return - 1 ;	1501:3:34778:34787	281050	19	True				
ANR	281249	UnaryOperationExpression	- 1		281050	0					
ANR	281250	UnaryOperator	-		281050	0					
ANR	281251	PrimaryExpression	1		281050	1					
ANR	281252	ReturnStatement	return 0 ;	1504:1:34797:34805	281050	9	True				
ANR	281253	PrimaryExpression	0		281050	0					
ANR	281254	ReturnType	static int		281050	1					
ANR	281255	Identifier	check_format		281050	2					
ANR	281256	ParameterList	"RMagic * ms , struct r_magic * m"		281050	3					
ANR	281257	Parameter	RMagic * ms	1454:24:33616:33625	281050	0	True				
ANR	281258	ParameterType	RMagic *		281050	0					
ANR	281259	Identifier	ms		281050	1					
ANR	281260	Parameter	struct r_magic * m	1454:36:33628:33644	281050	1	True				
ANR	281261	ParameterType	struct r_magic *		281050	0					
ANR	281262	Identifier	m		281050	1					
ANR	281263	CFGEntryNode	ENTRY		281050		True				
ANR	281264	CFGExitNode	EXIT		281050		True				
ANR	281265	Symbol	check_format_type		281050						
ANR	281266	Symbol	ms		281050						
ANR	281267	Symbol	magic_file_formats		281050						
ANR	281268	Symbol	* magic_file_formats		281050						
ANR	281269	Symbol	file_nnames		281050						
ANR	281270	Symbol	m		281050						
ANR	281271	Symbol	ptr		281050						
ANR	281272	Symbol	m -> type		281050						
ANR	281273	Symbol	m -> desc		281050						
ANR	281274	Symbol	* m		281050						
ANR	281275	Symbol	FILE_FMT_NONE		281050						
ANR	281276	Symbol	* ptr		281050						
ANR	281277	Symbol	file_nformats		281050						
ANR	281278	Symbol	* m -> type		281050						
ANR	281279	Symbol	* * m		281050						
ANR	281280	Function	getvalue	1512:0:35042:36131							
ANR	281281	FunctionDef	"getvalue (RMagic * ms , struct r_magic * m , const char * * p , int action)"		281280	0					
ANR	281282	CompoundStatement		1512:79:35121:36131	281280	0					
ANR	281283	IdentifierDeclStatement	int slen ;	1513:1:35124:35132	281280	0	True				
ANR	281284	IdentifierDecl	slen		281280	0					
ANR	281285	IdentifierDeclType	int		281280	0					
ANR	281286	Identifier	slen		281280	1					
ANR	281287	SwitchStatement	switch ( m -> type )		281280	1					
ANR	281288	Condition	m -> type	1515:9:35144:35150	281280	0	True				
ANR	281289	PtrMemberAccess	m -> type		281280	0					
ANR	281290	Identifier	m		281280	0					
ANR	281291	Identifier	type		281280	1					
ANR	281292	CompoundStatement		4:18:31:31	281280	1					
ANR	281293	Label	case FILE_BESTRING16 :	1516:1:35156:35176	281280	0	True				
ANR	281294	Identifier	FILE_BESTRING16		281280	0					
ANR	281295	Label	case FILE_LESTRING16 :	1517:1:35179:35199	281280	1	True				
ANR	281296	Identifier	FILE_LESTRING16		281280	0					
ANR	281297	Label	case FILE_STRING :	1518:1:35202:35218	281280	2	True				
ANR	281298	Identifier	FILE_STRING		281280	0					
ANR	281299	Label	case FILE_PSTRING :	1519:1:35221:35238	281280	3	True				
ANR	281300	Identifier	FILE_PSTRING		281280	0					
ANR	281301	Label	case FILE_REGEX :	1520:1:35241:35256	281280	4	True				
ANR	281302	Identifier	FILE_REGEX		281280	0					
ANR	281303	Label	case FILE_SEARCH :	1521:1:35259:35275	281280	5	True				
ANR	281304	Identifier	FILE_SEARCH		281280	0					
ANR	281305	ExpressionStatement	"* p = getstr ( ms , * p , m -> value . s , sizeof ( m -> value . s ) , & slen , action )"	1522:2:35279:35346	281280	6	True				
ANR	281306	AssignmentExpression	"* p = getstr ( ms , * p , m -> value . s , sizeof ( m -> value . s ) , & slen , action )"		281280	0		=			
ANR	281307	UnaryOperationExpression	* p		281280	0					
ANR	281308	UnaryOperator	*		281280	0					
ANR	281309	Identifier	p		281280	1					
ANR	281310	CallExpression	"getstr ( ms , * p , m -> value . s , sizeof ( m -> value . s ) , & slen , action )"		281280	1					
ANR	281311	Callee	getstr		281280	0					
ANR	281312	Identifier	getstr		281280	0					
ANR	281313	ArgumentList	ms		281280	1					
ANR	281314	Argument	ms		281280	0					
ANR	281315	Identifier	ms		281280	0					
ANR	281316	Argument	* p		281280	1					
ANR	281317	UnaryOperationExpression	* p		281280	0					
ANR	281318	UnaryOperator	*		281280	0					
ANR	281319	Identifier	p		281280	1					
ANR	281320	Argument	m -> value . s		281280	2					
ANR	281321	MemberAccess	m -> value . s		281280	0					
ANR	281322	PtrMemberAccess	m -> value		281280	0					
ANR	281323	Identifier	m		281280	0					
ANR	281324	Identifier	value		281280	1					
ANR	281325	Identifier	s		281280	1					
ANR	281326	Argument	sizeof ( m -> value . s )		281280	3					
ANR	281327	SizeofExpression	sizeof ( m -> value . s )		281280	0					
ANR	281328	Sizeof	sizeof		281280	0					
ANR	281329	MemberAccess	m -> value . s		281280	1					
ANR	281330	PtrMemberAccess	m -> value		281280	0					
ANR	281331	Identifier	m		281280	0					
ANR	281332	Identifier	value		281280	1					
ANR	281333	Identifier	s		281280	1					
ANR	281334	Argument	& slen		281280	4					
ANR	281335	UnaryOperationExpression	& slen		281280	0					
ANR	281336	UnaryOperator	&		281280	0					
ANR	281337	Identifier	slen		281280	1					
ANR	281338	Argument	action		281280	5					
ANR	281339	Identifier	action		281280	0					
ANR	281340	IfStatement	if ( ! * p )		281280	7					
ANR	281341	Condition	! * p	1523:6:35354:35356	281280	0	True				
ANR	281342	UnaryOperationExpression	! * p		281280	0					
ANR	281343	UnaryOperator	!		281280	0					
ANR	281344	UnaryOperationExpression	* p		281280	1					
ANR	281345	UnaryOperator	*		281280	0					
ANR	281346	Identifier	p		281280	1					
ANR	281347	CompoundStatement		12:11:237:237	281280	1					
ANR	281348	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		281280	0					
ANR	281349	Condition	ms -> flags & R_MAGIC_CHECK	1524:7:35368:35392	281280	0	True				
ANR	281350	BitAndExpression	ms -> flags & R_MAGIC_CHECK		281280	0		&			
ANR	281351	PtrMemberAccess	ms -> flags		281280	0					
ANR	281352	Identifier	ms		281280	0					
ANR	281353	Identifier	flags		281280	1					
ANR	281354	Identifier	R_MAGIC_CHECK		281280	1					
ANR	281355	CompoundStatement		13:34:273:273	281280	1					
ANR	281356	ExpressionStatement	"file_magwarn ( ms , ""cannot get string from `%s'"" , m -> value . s )"	1525:4:35401:35466	281280	0	True				
ANR	281357	CallExpression	"file_magwarn ( ms , ""cannot get string from `%s'"" , m -> value . s )"		281280	0					
ANR	281358	Callee	file_magwarn		281280	0					
ANR	281359	Identifier	file_magwarn		281280	0					
ANR	281360	ArgumentList	ms		281280	1					
ANR	281361	Argument	ms		281280	0					
ANR	281362	Identifier	ms		281280	0					
ANR	281363	Argument	"""cannot get string from `%s'"""		281280	1					
ANR	281364	PrimaryExpression	"""cannot get string from `%s'"""		281280	0					
ANR	281365	Argument	m -> value . s		281280	2					
ANR	281366	MemberAccess	m -> value . s		281280	0					
ANR	281367	PtrMemberAccess	m -> value		281280	0					
ANR	281368	Identifier	m		281280	0					
ANR	281369	Identifier	value		281280	1					
ANR	281370	Identifier	s		281280	1					
ANR	281371	ReturnStatement	return - 1 ;	1528:3:35476:35485	281280	1	True				
ANR	281372	UnaryOperationExpression	- 1		281280	0					
ANR	281373	UnaryOperator	-		281280	0					
ANR	281374	PrimaryExpression	1		281280	1					
ANR	281375	ExpressionStatement	m -> vallen = slen	1530:2:35493:35509	281280	8	True				
ANR	281376	AssignmentExpression	m -> vallen = slen		281280	0		=			
ANR	281377	PtrMemberAccess	m -> vallen		281280	0					
ANR	281378	Identifier	m		281280	0					
ANR	281379	Identifier	vallen		281280	1					
ANR	281380	Identifier	slen		281280	1					
ANR	281381	IfStatement	if ( m -> type == FILE_PSTRING )		281280	9					
ANR	281382	Condition	m -> type == FILE_PSTRING	1531:6:35517:35539	281280	0	True				
ANR	281383	EqualityExpression	m -> type == FILE_PSTRING		281280	0		==			
ANR	281384	PtrMemberAccess	m -> type		281280	0					
ANR	281385	Identifier	m		281280	0					
ANR	281386	Identifier	type		281280	1					
ANR	281387	Identifier	FILE_PSTRING		281280	1					
ANR	281388	CompoundStatement		20:31:420:420	281280	1					
ANR	281389	ExpressionStatement	m -> vallen ++	1532:3:35547:35558	281280	0	True				
ANR	281390	PostIncDecOperationExpression	m -> vallen ++		281280	0					
ANR	281391	PtrMemberAccess	m -> vallen		281280	0					
ANR	281392	Identifier	m		281280	0					
ANR	281393	Identifier	vallen		281280	1					
ANR	281394	IncDec	++		281280	1					
ANR	281395	ReturnStatement	return 0 ;	1534:2:35566:35574	281280	10	True				
ANR	281396	PrimaryExpression	0		281280	0					
ANR	281397	Label	case FILE_FLOAT :	1535:1:35577:35592	281280	11	True				
ANR	281398	Identifier	FILE_FLOAT		281280	0					
ANR	281399	Label	case FILE_BEFLOAT :	1536:1:35595:35612	281280	12	True				
ANR	281400	Identifier	FILE_BEFLOAT		281280	0					
ANR	281401	Label	case FILE_LEFLOAT :	1537:1:35615:35632	281280	13	True				
ANR	281402	Identifier	FILE_LEFLOAT		281280	0					
ANR	281403	IfStatement	if ( m -> reln != 'x' )		281280	14					
ANR	281404	Condition	m -> reln != 'x'	1538:6:35640:35653	281280	0	True				
ANR	281405	EqualityExpression	m -> reln != 'x'		281280	0		!=			
ANR	281406	PtrMemberAccess	m -> reln		281280	0					
ANR	281407	Identifier	m		281280	0					
ANR	281408	Identifier	reln		281280	1					
ANR	281409	PrimaryExpression	'x'		281280	1					
ANR	281410	CompoundStatement		28:3:539:547	281280	1					
ANR	281411	IdentifierDeclStatement	char * ep ;	1539:3:35661:35669	281280	0	True				
ANR	281412	IdentifierDecl	* ep		281280	0					
ANR	281413	IdentifierDeclType	char *		281280	0					
ANR	281414	Identifier	ep		281280	1					
ANR	281415	ExpressionStatement	"m -> value . f = strtof ( * p , & ep )"	1541:3:35693:35721	281280	1	True				
ANR	281416	AssignmentExpression	"m -> value . f = strtof ( * p , & ep )"		281280	0		=			
ANR	281417	MemberAccess	m -> value . f		281280	0					
ANR	281418	PtrMemberAccess	m -> value		281280	0					
ANR	281419	Identifier	m		281280	0					
ANR	281420	Identifier	value		281280	1					
ANR	281421	Identifier	f		281280	1					
ANR	281422	CallExpression	"strtof ( * p , & ep )"		281280	1					
ANR	281423	Callee	strtof		281280	0					
ANR	281424	Identifier	strtof		281280	0					
ANR	281425	ArgumentList	* p		281280	1					
ANR	281426	Argument	* p		281280	0					
ANR	281427	UnaryOperationExpression	* p		281280	0					
ANR	281428	UnaryOperator	*		281280	0					
ANR	281429	Identifier	p		281280	1					
ANR	281430	Argument	& ep		281280	1					
ANR	281431	UnaryOperationExpression	& ep		281280	0					
ANR	281432	UnaryOperator	&		281280	0					
ANR	281433	Identifier	ep		281280	1					
ANR	281434	ExpressionStatement	* p = ep	1545:3:35779:35786	281280	2	True				
ANR	281435	AssignmentExpression	* p = ep		281280	0		=			
ANR	281436	UnaryOperationExpression	* p		281280	0					
ANR	281437	UnaryOperator	*		281280	0					
ANR	281438	Identifier	p		281280	1					
ANR	281439	Identifier	ep		281280	1					
ANR	281440	ReturnStatement	return 0 ;	1547:2:35794:35802	281280	15	True				
ANR	281441	PrimaryExpression	0		281280	0					
ANR	281442	Label	case FILE_DOUBLE :	1548:1:35805:35821	281280	16	True				
ANR	281443	Identifier	FILE_DOUBLE		281280	0					
ANR	281444	Label	case FILE_BEDOUBLE :	1549:1:35824:35842	281280	17	True				
ANR	281445	Identifier	FILE_BEDOUBLE		281280	0					
ANR	281446	Label	case FILE_LEDOUBLE :	1550:1:35845:35863	281280	18	True				
ANR	281447	Identifier	FILE_LEDOUBLE		281280	0					
ANR	281448	IfStatement	if ( m -> reln != 'x' )		281280	19					
ANR	281449	Condition	m -> reln != 'x'	1551:6:35871:35884	281280	0	True				
ANR	281450	EqualityExpression	m -> reln != 'x'		281280	0		!=			
ANR	281451	PtrMemberAccess	m -> reln		281280	0					
ANR	281452	Identifier	m		281280	0					
ANR	281453	Identifier	reln		281280	1					
ANR	281454	PrimaryExpression	'x'		281280	1					
ANR	281455	CompoundStatement		41:3:770:778	281280	1					
ANR	281456	IdentifierDeclStatement	char * ep ;	1552:3:35892:35900	281280	0	True				
ANR	281457	IdentifierDecl	* ep		281280	0					
ANR	281458	IdentifierDeclType	char *		281280	0					
ANR	281459	Identifier	ep		281280	1					
ANR	281460	ExpressionStatement	"m -> value . d = strtod ( * p , & ep )"	1553:3:35905:35933	281280	1	True				
ANR	281461	AssignmentExpression	"m -> value . d = strtod ( * p , & ep )"		281280	0		=			
ANR	281462	MemberAccess	m -> value . d		281280	0					
ANR	281463	PtrMemberAccess	m -> value		281280	0					
ANR	281464	Identifier	m		281280	0					
ANR	281465	Identifier	value		281280	1					
ANR	281466	Identifier	d		281280	1					
ANR	281467	CallExpression	"strtod ( * p , & ep )"		281280	1					
ANR	281468	Callee	strtod		281280	0					
ANR	281469	Identifier	strtod		281280	0					
ANR	281470	ArgumentList	* p		281280	1					
ANR	281471	Argument	* p		281280	0					
ANR	281472	UnaryOperationExpression	* p		281280	0					
ANR	281473	UnaryOperator	*		281280	0					
ANR	281474	Identifier	p		281280	1					
ANR	281475	Argument	& ep		281280	1					
ANR	281476	UnaryOperationExpression	& ep		281280	0					
ANR	281477	UnaryOperator	&		281280	0					
ANR	281478	Identifier	ep		281280	1					
ANR	281479	ExpressionStatement	* p = ep	1554:3:35938:35945	281280	2	True				
ANR	281480	AssignmentExpression	* p = ep		281280	0		=			
ANR	281481	UnaryOperationExpression	* p		281280	0					
ANR	281482	UnaryOperator	*		281280	0					
ANR	281483	Identifier	p		281280	1					
ANR	281484	Identifier	ep		281280	1					
ANR	281485	ReturnStatement	return 0 ;	1556:2:35953:35961	281280	20	True				
ANR	281486	PrimaryExpression	0		281280	0					
ANR	281487	Label	default :	1557:1:35964:35971	281280	21	True				
ANR	281488	Identifier	default		281280	0					
ANR	281489	IfStatement	if ( m -> reln != 'x' )		281280	22					
ANR	281490	Condition	m -> reln != 'x'	1558:6:35979:35992	281280	0	True				
ANR	281491	EqualityExpression	m -> reln != 'x'		281280	0		!=			
ANR	281492	PtrMemberAccess	m -> reln		281280	0					
ANR	281493	Identifier	m		281280	0					
ANR	281494	Identifier	reln		281280	1					
ANR	281495	PrimaryExpression	'x'		281280	1					
ANR	281496	CompoundStatement		48:3:878:886	281280	1					
ANR	281497	IdentifierDeclStatement	char * ep ;	1559:3:36000:36008	281280	0	True				
ANR	281498	IdentifierDecl	* ep		281280	0					
ANR	281499	IdentifierDeclType	char *		281280	0					
ANR	281500	Identifier	ep		281280	1					
ANR	281501	ExpressionStatement	"m -> value . q = file_signextend ( ms , m , ( ut64 ) strtoull ( * p , & ep , 0 ) )"	1560:3:36013:36083	281280	1	True				
ANR	281502	AssignmentExpression	"m -> value . q = file_signextend ( ms , m , ( ut64 ) strtoull ( * p , & ep , 0 ) )"		281280	0		=			
ANR	281503	MemberAccess	m -> value . q		281280	0					
ANR	281504	PtrMemberAccess	m -> value		281280	0					
ANR	281505	Identifier	m		281280	0					
ANR	281506	Identifier	value		281280	1					
ANR	281507	Identifier	q		281280	1					
ANR	281508	CallExpression	"file_signextend ( ms , m , ( ut64 ) strtoull ( * p , & ep , 0 ) )"		281280	1					
ANR	281509	Callee	file_signextend		281280	0					
ANR	281510	Identifier	file_signextend		281280	0					
ANR	281511	ArgumentList	ms		281280	1					
ANR	281512	Argument	ms		281280	0					
ANR	281513	Identifier	ms		281280	0					
ANR	281514	Argument	m		281280	1					
ANR	281515	Identifier	m		281280	0					
ANR	281516	Argument	"( ut64 ) strtoull ( * p , & ep , 0 )"		281280	2					
ANR	281517	CastExpression	"( ut64 ) strtoull ( * p , & ep , 0 )"		281280	0					
ANR	281518	CastTarget	ut64		281280	0					
ANR	281519	CallExpression	"strtoull ( * p , & ep , 0 )"		281280	1					
ANR	281520	Callee	strtoull		281280	0					
ANR	281521	Identifier	strtoull		281280	0					
ANR	281522	ArgumentList	* p		281280	1					
ANR	281523	Argument	* p		281280	0					
ANR	281524	UnaryOperationExpression	* p		281280	0					
ANR	281525	UnaryOperator	*		281280	0					
ANR	281526	Identifier	p		281280	1					
ANR	281527	Argument	& ep		281280	1					
ANR	281528	UnaryOperationExpression	& ep		281280	0					
ANR	281529	UnaryOperator	&		281280	0					
ANR	281530	Identifier	ep		281280	1					
ANR	281531	Argument	0		281280	2					
ANR	281532	PrimaryExpression	0		281280	0					
ANR	281533	ExpressionStatement	* p = ep	1562:3:36088:36095	281280	2	True				
ANR	281534	AssignmentExpression	* p = ep		281280	0		=			
ANR	281535	UnaryOperationExpression	* p		281280	0					
ANR	281536	UnaryOperator	*		281280	0					
ANR	281537	Identifier	p		281280	1					
ANR	281538	Identifier	ep		281280	1					
ANR	281539	ExpressionStatement	eatsize ( p )	1563:3:36100:36110	281280	3	True				
ANR	281540	CallExpression	eatsize ( p )		281280	0					
ANR	281541	Callee	eatsize		281280	0					
ANR	281542	Identifier	eatsize		281280	0					
ANR	281543	ArgumentList	p		281280	1					
ANR	281544	Argument	p		281280	0					
ANR	281545	Identifier	p		281280	0					
ANR	281546	ReturnStatement	return 0 ;	1565:2:36118:36126	281280	23	True				
ANR	281547	PrimaryExpression	0		281280	0					
ANR	281548	ReturnType	static int		281280	1					
ANR	281549	Identifier	getvalue		281280	2					
ANR	281550	ParameterList	"RMagic * ms , struct r_magic * m , const char * * p , int action"		281280	3					
ANR	281551	Parameter	RMagic * ms	1512:20:35062:35071	281280	0	True				
ANR	281552	ParameterType	RMagic *		281280	0					
ANR	281553	Identifier	ms		281280	1					
ANR	281554	Parameter	struct r_magic * m	1512:32:35074:35090	281280	1	True				
ANR	281555	ParameterType	struct r_magic *		281280	0					
ANR	281556	Identifier	m		281280	1					
ANR	281557	Parameter	const char * * p	1512:51:35093:35106	281280	2	True				
ANR	281558	ParameterType	const char * *		281280	0					
ANR	281559	Identifier	p		281280	1					
ANR	281560	Parameter	int action	1512:67:35109:35118	281280	3	True				
ANR	281561	ParameterType	int		281280	0					
ANR	281562	Identifier	action		281280	1					
ANR	281563	CFGEntryNode	ENTRY		281280		True				
ANR	281564	CFGExitNode	EXIT		281280		True				
ANR	281565	Symbol	* ms		281280						
ANR	281566	Symbol	strtoull		281280						
ANR	281567	Symbol	m -> type		281280						
ANR	281568	Symbol	getstr		281280						
ANR	281569	Symbol	m -> reln		281280						
ANR	281570	Symbol	action		281280						
ANR	281571	Symbol	m -> value		281280						
ANR	281572	Symbol	file_signextend		281280						
ANR	281573	Symbol	ms		281280						
ANR	281574	Symbol	m -> value . s		281280						
ANR	281575	Symbol	FILE_PSTRING		281280						
ANR	281576	Symbol	m -> value . q		281280						
ANR	281577	Symbol	ep		281280						
ANR	281578	Symbol	m		281280						
ANR	281579	Symbol	& slen		281280						
ANR	281580	Symbol	strtod		281280						
ANR	281581	Symbol	strtof		281280						
ANR	281582	Symbol	p		281280						
ANR	281583	Symbol	& ep		281280						
ANR	281584	Symbol	slen		281280						
ANR	281585	Symbol	* m		281280						
ANR	281586	Symbol	m -> value . f		281280						
ANR	281587	Symbol	m -> value . d		281280						
ANR	281588	Symbol	* p		281280						
ANR	281589	Symbol	m -> vallen		281280						
ANR	281590	Symbol	ms -> flags		281280						
ANR	281591	Symbol	R_MAGIC_CHECK		281280						
ANR	281592	Function	getstr	1575:0:36352:38755							
ANR	281593	FunctionDef	"getstr (RMagic * ms , const char * s , char * p , int plen , int * slen , int action)"		281592	0					
ANR	281594	CompoundStatement		1575:96:36448:38755	281592	0					
ANR	281595	IdentifierDeclStatement	const char * origs = s ;	1576:1:36451:36472	281592	0	True				
ANR	281596	IdentifierDecl	* origs = s		281592	0					
ANR	281597	IdentifierDeclType	const char *		281592	0					
ANR	281598	Identifier	origs		281592	1					
ANR	281599	AssignmentExpression	* origs = s		281592	2		=			
ANR	281600	Identifier	s		281592	0					
ANR	281601	Identifier	s		281592	1					
ANR	281602	IdentifierDeclStatement	char * origp = p ;	1577:1:36475:36490	281592	1	True				
ANR	281603	IdentifierDecl	* origp = p		281592	0					
ANR	281604	IdentifierDeclType	char *		281592	0					
ANR	281605	Identifier	origp		281592	1					
ANR	281606	AssignmentExpression	* origp = p		281592	2		=			
ANR	281607	Identifier	p		281592	0					
ANR	281608	Identifier	p		281592	1					
ANR	281609	IdentifierDeclStatement	char * pmax = p + plen - 1 ;	1578:1:36493:36518	281592	2	True				
ANR	281610	IdentifierDecl	* pmax = p + plen - 1		281592	0					
ANR	281611	IdentifierDeclType	char *		281592	0					
ANR	281612	Identifier	pmax		281592	1					
ANR	281613	AssignmentExpression	* pmax = p + plen - 1		281592	2		=			
ANR	281614	Identifier	pmax		281592	0					
ANR	281615	AdditiveExpression	p + plen - 1		281592	1		+			
ANR	281616	Identifier	p		281592	0					
ANR	281617	AdditiveExpression	plen - 1		281592	1		-			
ANR	281618	Identifier	plen		281592	0					
ANR	281619	PrimaryExpression	1		281592	1					
ANR	281620	IdentifierDeclStatement	"int c , val ;"	1579:1:36521:36531	281592	3	True				
ANR	281621	IdentifierDecl	c		281592	0					
ANR	281622	IdentifierDeclType	int		281592	0					
ANR	281623	Identifier	c		281592	1					
ANR	281624	IdentifierDecl	val		281592	1					
ANR	281625	IdentifierDeclType	int		281592	0					
ANR	281626	Identifier	val		281592	1					
ANR	281627	WhileStatement	while ( ( c = * s ++ ) != '\\0' )		281592	4					
ANR	281628	Condition	( c = * s ++ ) != '\\0'	1581:8:36542:36559	281592	0	True				
ANR	281629	EqualityExpression	( c = * s ++ ) != '\\0'		281592	0		!=			
ANR	281630	AssignmentExpression	c = * s ++		281592	0		=			
ANR	281631	Identifier	c		281592	0					
ANR	281632	UnaryOperationExpression	* s ++		281592	1					
ANR	281633	UnaryOperator	*		281592	0					
ANR	281634	PostIncDecOperationExpression	s ++		281592	1					
ANR	281635	Identifier	s		281592	0					
ANR	281636	IncDec	++		281592	1					
ANR	281637	PrimaryExpression	'\\0'		281592	1					
ANR	281638	CompoundStatement		7:28:113:113	281592	1					
ANR	281639	IfStatement	if ( isspace ( ( ut8 ) c ) )		281592	0					
ANR	281640	Condition	isspace ( ( ut8 ) c )	1582:6:36570:36585	281592	0	True				
ANR	281641	CallExpression	isspace ( ( ut8 ) c )		281592	0					
ANR	281642	Callee	isspace		281592	0					
ANR	281643	Identifier	isspace		281592	0					
ANR	281644	ArgumentList	( ut8 ) c		281592	1					
ANR	281645	Argument	( ut8 ) c		281592	0					
ANR	281646	CastExpression	( ut8 ) c		281592	0					
ANR	281647	CastTarget	ut8		281592	0					
ANR	281648	Identifier	c		281592	1					
ANR	281649	CompoundStatement		8:24:139:139	281592	1					
ANR	281650	BreakStatement	break ;	1583:3:36593:36598	281592	0	True				
ANR	281651	IfStatement	if ( p >= pmax )		281592	1					
ANR	281652	Condition	p >= pmax	1585:6:36610:36618	281592	0	True				
ANR	281653	RelationalExpression	p >= pmax		281592	0		>=			
ANR	281654	Identifier	p		281592	0					
ANR	281655	Identifier	pmax		281592	1					
ANR	281656	CompoundStatement		11:17:172:172	281592	1					
ANR	281657	ExpressionStatement	"file_error ( ms , 0 , ""string too long: `%s'"" , origs )"	1586:3:36626:36675	281592	0	True				
ANR	281658	CallExpression	"file_error ( ms , 0 , ""string too long: `%s'"" , origs )"		281592	0					
ANR	281659	Callee	file_error		281592	0					
ANR	281660	Identifier	file_error		281592	0					
ANR	281661	ArgumentList	ms		281592	1					
ANR	281662	Argument	ms		281592	0					
ANR	281663	Identifier	ms		281592	0					
ANR	281664	Argument	0		281592	1					
ANR	281665	PrimaryExpression	0		281592	0					
ANR	281666	Argument	"""string too long: `%s'"""		281592	2					
ANR	281667	PrimaryExpression	"""string too long: `%s'"""		281592	0					
ANR	281668	Argument	origs		281592	3					
ANR	281669	Identifier	origs		281592	0					
ANR	281670	ReturnStatement	return NULL ;	1587:3:36680:36691	281592	1	True				
ANR	281671	Identifier	NULL		281592	0					
ANR	281672	IfStatement	if ( c == '\\\\' )		281592	2					
ANR	281673	Condition	c == '\\\\'	1589:6:36703:36711	281592	0	True				
ANR	281674	EqualityExpression	c == '\\\\'		281592	0		==			
ANR	281675	Identifier	c		281592	0					
ANR	281676	PrimaryExpression	'\\\\'		281592	1					
ANR	281677	CompoundStatement		15:17:265:265	281592	1					
ANR	281678	SwitchStatement	switch ( ( c = * s ++ ) )		281592	0					
ANR	281679	Condition	c = * s ++	1590:11:36727:36736	281592	0	True				
ANR	281680	AssignmentExpression	c = * s ++		281592	0		=			
ANR	281681	Identifier	c		281592	0					
ANR	281682	UnaryOperationExpression	* s ++		281592	1					
ANR	281683	UnaryOperator	*		281592	0					
ANR	281684	PostIncDecOperationExpression	s ++		281592	1					
ANR	281685	Identifier	s		281592	0					
ANR	281686	IncDec	++		281592	1					
ANR	281687	CompoundStatement		16:23:290:290	281592	1					
ANR	281688	Label	case '\\0' :	1591:3:36744:36753	281592	0	True				
ANR	281689	IfStatement	if ( action == FILE_COMPILE )		281592	1					
ANR	281690	Condition	action == FILE_COMPILE	1592:8:36763:36784	281592	0	True				
ANR	281691	EqualityExpression	action == FILE_COMPILE		281592	0		==			
ANR	281692	Identifier	action		281592	0					
ANR	281693	Identifier	FILE_COMPILE		281592	1					
ANR	281694	CompoundStatement		18:32:338:338	281592	1					
ANR	281695	ExpressionStatement	"file_magwarn ( ms , ""incomplete escape"" )"	1593:5:36794:36832	281592	0	True				
ANR	281696	CallExpression	"file_magwarn ( ms , ""incomplete escape"" )"		281592	0					
ANR	281697	Callee	file_magwarn		281592	0					
ANR	281698	Identifier	file_magwarn		281592	0					
ANR	281699	ArgumentList	ms		281592	1					
ANR	281700	Argument	ms		281592	0					
ANR	281701	Identifier	ms		281592	0					
ANR	281702	Argument	"""incomplete escape"""		281592	1					
ANR	281703	PrimaryExpression	"""incomplete escape"""		281592	0					
ANR	281704	GotoStatement	goto out ;	1595:4:36844:36852	281592	2	True				
ANR	281705	Identifier	out		281592	0					
ANR	281706	Label	case '\\t' :	1596:3:36857:36866	281592	3	True				
ANR	281707	IfStatement	if ( action == FILE_COMPILE )		281592	4					
ANR	281708	Condition	action == FILE_COMPILE	1597:8:36876:36897	281592	0	True				
ANR	281709	EqualityExpression	action == FILE_COMPILE		281592	0		==			
ANR	281710	Identifier	action		281592	0					
ANR	281711	Identifier	FILE_COMPILE		281592	1					
ANR	281712	CompoundStatement		23:32:451:451	281592	1					
ANR	281713	ExpressionStatement	"file_magwarn ( ms , ""escaped tab found, use \\\\t instead"" )"	1598:5:36907:36970	281592	0	True				
ANR	281714	CallExpression	"file_magwarn ( ms , ""escaped tab found, use \\\\t instead"" )"		281592	0					
ANR	281715	Callee	file_magwarn		281592	0					
ANR	281716	Identifier	file_magwarn		281592	0					
ANR	281717	ArgumentList	ms		281592	1					
ANR	281718	Argument	ms		281592	0					
ANR	281719	Identifier	ms		281592	0					
ANR	281720	Argument	"""escaped tab found, use \\\\t instead"""		281592	1					
ANR	281721	PrimaryExpression	"""escaped tab found, use \\\\t instead"""		281592	0					
ANR	281722	ExpressionStatement	action ++	1600:5:36977:36985	281592	1	True				
ANR	281723	PostIncDecOperationExpression	action ++		281592	0					
ANR	281724	Identifier	action		281592	0					
ANR	281725	IncDec	++		281592	1					
ANR	281726	Label	default :	1603:3:37016:37023	281592	5	True				
ANR	281727	Identifier	default		281592	0					
ANR	281728	IfStatement	if ( action == FILE_COMPILE )		281592	6					
ANR	281729	Condition	action == FILE_COMPILE	1604:8:37033:37054	281592	0	True				
ANR	281730	EqualityExpression	action == FILE_COMPILE		281592	0		==			
ANR	281731	Identifier	action		281592	0					
ANR	281732	Identifier	FILE_COMPILE		281592	1					
ANR	281733	CompoundStatement		30:32:608:608	281592	1					
ANR	281734	IfStatement	if ( isprint ( ( ut8 ) c ) )		281592	0					
ANR	281735	Condition	isprint ( ( ut8 ) c )	1605:9:37068:37083	281592	0	True				
ANR	281736	CallExpression	isprint ( ( ut8 ) c )		281592	0					
ANR	281737	Callee	isprint		281592	0					
ANR	281738	Identifier	isprint		281592	0					
ANR	281739	ArgumentList	( ut8 ) c		281592	1					
ANR	281740	Argument	( ut8 ) c		281592	0					
ANR	281741	CastExpression	( ut8 ) c		281592	0					
ANR	281742	CastTarget	ut8		281592	0					
ANR	281743	Identifier	c		281592	1					
ANR	281744	CompoundStatement		31:27:637:637	281592	1					
ANR	281745	ExpressionStatement	"file_magwarn ( ms , ""no need to escape `%c'"" , c )"	1606:6:37094:37147	281592	0	True				
ANR	281746	CallExpression	"file_magwarn ( ms , ""no need to escape `%c'"" , c )"		281592	0					
ANR	281747	Callee	file_magwarn		281592	0					
ANR	281748	Identifier	file_magwarn		281592	0					
ANR	281749	ArgumentList	ms		281592	1					
ANR	281750	Argument	ms		281592	0					
ANR	281751	Identifier	ms		281592	0					
ANR	281752	Argument	"""no need to escape `%c'"""		281592	1					
ANR	281753	PrimaryExpression	"""no need to escape `%c'"""		281592	0					
ANR	281754	Argument	c		281592	2					
ANR	281755	Identifier	c		281592	0					
ANR	281756	ElseStatement	else		281592	0					
ANR	281757	CompoundStatement		34:12:712:712	281592	0					
ANR	281758	ExpressionStatement	"file_magwarn ( ms , ""unknown escape sequence: \\\\%03o"" , c )"	1609:6:37169:37231	281592	0	True				
ANR	281759	CallExpression	"file_magwarn ( ms , ""unknown escape sequence: \\\\%03o"" , c )"		281592	0					
ANR	281760	Callee	file_magwarn		281592	0					
ANR	281761	Identifier	file_magwarn		281592	0					
ANR	281762	ArgumentList	ms		281592	1					
ANR	281763	Argument	ms		281592	0					
ANR	281764	Identifier	ms		281592	0					
ANR	281765	Argument	"""unknown escape sequence: \\\\%03o"""		281592	1					
ANR	281766	PrimaryExpression	"""unknown escape sequence: \\\\%03o"""		281592	0					
ANR	281767	Argument	c		281592	2					
ANR	281768	Identifier	c		281592	0					
ANR	281769	Label	case ' ' :	1615:3:37319:37327	281592	7	True				
ANR	281770	Label	case '\\'' :	1621:3:37434:37443	281592	8	True				
ANR	281771	Label	"case '""' :"	1622:3:37448:37456	281592	9	True				
ANR	281772	Label	case '?' :	1623:3:37461:37469	281592	10	True				
ANR	281773	Label	case '>' :	1626:3:37500:37508	281592	11	True				
ANR	281774	Label	case '<' :	1627:3:37513:37521	281592	12	True				
ANR	281775	Label	case '&' :	1628:3:37526:37534	281592	13	True				
ANR	281776	Label	case '^' :	1629:3:37539:37547	281592	14	True				
ANR	281777	Label	case '=' :	1630:3:37552:37560	281592	15	True				
ANR	281778	Label	case '!' :	1631:3:37565:37573	281592	16	True				
ANR	281779	Label	case '\\\\' :	1633:3:37608:37617	281592	17	True				
ANR	281780	ExpressionStatement	* p ++ = ( char ) c	1634:4:37623:37638	281592	18	True				
ANR	281781	AssignmentExpression	* p ++ = ( char ) c		281592	0		=			
ANR	281782	UnaryOperationExpression	* p ++		281592	0					
ANR	281783	UnaryOperator	*		281592	0					
ANR	281784	PostIncDecOperationExpression	p ++		281592	1					
ANR	281785	Identifier	p		281592	0					
ANR	281786	IncDec	++		281592	1					
ANR	281787	CastExpression	( char ) c		281592	1					
ANR	281788	CastTarget	char		281592	0					
ANR	281789	Identifier	c		281592	1					
ANR	281790	BreakStatement	break ;	1635:4:37644:37649	281592	19	True				
ANR	281791	Label	case 'a' :	1636:3:37654:37662	281592	20	True				
ANR	281792	ExpressionStatement	* p ++ = '\\a'	1636:13:37664:37675	281592	21	True				
ANR	281793	AssignmentExpression	* p ++ = '\\a'		281592	0		=			
ANR	281794	UnaryOperationExpression	* p ++		281592	0					
ANR	281795	UnaryOperator	*		281592	0					
ANR	281796	PostIncDecOperationExpression	p ++		281592	1					
ANR	281797	Identifier	p		281592	0					
ANR	281798	IncDec	++		281592	1					
ANR	281799	PrimaryExpression	'\\a'		281592	1					
ANR	281800	BreakStatement	break ;	1636:26:37677:37682	281592	22	True				
ANR	281801	Label	case 'b' :	1637:3:37687:37695	281592	23	True				
ANR	281802	ExpressionStatement	* p ++ = '\\b'	1637:13:37697:37708	281592	24	True				
ANR	281803	AssignmentExpression	* p ++ = '\\b'		281592	0		=			
ANR	281804	UnaryOperationExpression	* p ++		281592	0					
ANR	281805	UnaryOperator	*		281592	0					
ANR	281806	PostIncDecOperationExpression	p ++		281592	1					
ANR	281807	Identifier	p		281592	0					
ANR	281808	IncDec	++		281592	1					
ANR	281809	PrimaryExpression	'\\b'		281592	1					
ANR	281810	BreakStatement	break ;	1637:26:37710:37715	281592	25	True				
ANR	281811	Label	case 'f' :	1638:3:37720:37728	281592	26	True				
ANR	281812	ExpressionStatement	* p ++ = '\\f'	1638:13:37730:37741	281592	27	True				
ANR	281813	AssignmentExpression	* p ++ = '\\f'		281592	0		=			
ANR	281814	UnaryOperationExpression	* p ++		281592	0					
ANR	281815	UnaryOperator	*		281592	0					
ANR	281816	PostIncDecOperationExpression	p ++		281592	1					
ANR	281817	Identifier	p		281592	0					
ANR	281818	IncDec	++		281592	1					
ANR	281819	PrimaryExpression	'\\f'		281592	1					
ANR	281820	BreakStatement	break ;	1638:26:37743:37748	281592	28	True				
ANR	281821	Label	case 'n' :	1639:3:37753:37761	281592	29	True				
ANR	281822	ExpressionStatement	* p ++ = '\\n'	1639:13:37763:37774	281592	30	True				
ANR	281823	AssignmentExpression	* p ++ = '\\n'		281592	0		=			
ANR	281824	UnaryOperationExpression	* p ++		281592	0					
ANR	281825	UnaryOperator	*		281592	0					
ANR	281826	PostIncDecOperationExpression	p ++		281592	1					
ANR	281827	Identifier	p		281592	0					
ANR	281828	IncDec	++		281592	1					
ANR	281829	PrimaryExpression	'\\n'		281592	1					
ANR	281830	BreakStatement	break ;	1639:26:37776:37781	281592	31	True				
ANR	281831	Label	case 'r' :	1640:3:37786:37794	281592	32	True				
ANR	281832	ExpressionStatement	* p ++ = '\\r'	1640:13:37796:37807	281592	33	True				
ANR	281833	AssignmentExpression	* p ++ = '\\r'		281592	0		=			
ANR	281834	UnaryOperationExpression	* p ++		281592	0					
ANR	281835	UnaryOperator	*		281592	0					
ANR	281836	PostIncDecOperationExpression	p ++		281592	1					
ANR	281837	Identifier	p		281592	0					
ANR	281838	IncDec	++		281592	1					
ANR	281839	PrimaryExpression	'\\r'		281592	1					
ANR	281840	BreakStatement	break ;	1640:26:37809:37814	281592	34	True				
ANR	281841	Label	case 't' :	1641:3:37819:37827	281592	35	True				
ANR	281842	ExpressionStatement	* p ++ = '\\t'	1641:13:37829:37840	281592	36	True				
ANR	281843	AssignmentExpression	* p ++ = '\\t'		281592	0		=			
ANR	281844	UnaryOperationExpression	* p ++		281592	0					
ANR	281845	UnaryOperator	*		281592	0					
ANR	281846	PostIncDecOperationExpression	p ++		281592	1					
ANR	281847	Identifier	p		281592	0					
ANR	281848	IncDec	++		281592	1					
ANR	281849	PrimaryExpression	'\\t'		281592	1					
ANR	281850	BreakStatement	break ;	1641:26:37842:37847	281592	37	True				
ANR	281851	Label	case 'v' :	1642:3:37852:37860	281592	38	True				
ANR	281852	ExpressionStatement	* p ++ = '\\v'	1642:13:37862:37873	281592	39	True				
ANR	281853	AssignmentExpression	* p ++ = '\\v'		281592	0		=			
ANR	281854	UnaryOperationExpression	* p ++		281592	0					
ANR	281855	UnaryOperator	*		281592	0					
ANR	281856	PostIncDecOperationExpression	p ++		281592	1					
ANR	281857	Identifier	p		281592	0					
ANR	281858	IncDec	++		281592	1					
ANR	281859	PrimaryExpression	'\\v'		281592	1					
ANR	281860	BreakStatement	break ;	1642:26:37875:37880	281592	40	True				
ANR	281861	Label	case '0' :	1644:3:37921:37929	281592	41	True				
ANR	281862	Label	case '1' :	1645:3:37934:37942	281592	42	True				
ANR	281863	Label	case '2' :	1646:3:37947:37955	281592	43	True				
ANR	281864	Label	case '3' :	1647:3:37960:37968	281592	44	True				
ANR	281865	Label	case '4' :	1648:3:37973:37981	281592	45	True				
ANR	281866	Label	case '5' :	1649:3:37986:37994	281592	46	True				
ANR	281867	Label	case '6' :	1650:3:37999:38007	281592	47	True				
ANR	281868	Label	case '7' :	1651:3:38012:38020	281592	48	True				
ANR	281869	ExpressionStatement	val = c - '0'	1652:4:38026:38039	281592	49	True				
ANR	281870	AssignmentExpression	val = c - '0'		281592	0		=			
ANR	281871	Identifier	val		281592	0					
ANR	281872	AdditiveExpression	c - '0'		281592	1		-			
ANR	281873	Identifier	c		281592	0					
ANR	281874	PrimaryExpression	'0'		281592	1					
ANR	281875	ExpressionStatement	c = * s ++	1653:4:38045:38053	281592	50	True				
ANR	281876	AssignmentExpression	c = * s ++		281592	0		=			
ANR	281877	Identifier	c		281592	0					
ANR	281878	UnaryOperationExpression	* s ++		281592	1					
ANR	281879	UnaryOperator	*		281592	0					
ANR	281880	PostIncDecOperationExpression	s ++		281592	1					
ANR	281881	Identifier	s		281592	0					
ANR	281882	IncDec	++		281592	1					
ANR	281883	IfStatement	if ( c >= '0' && c <= '7' )		281592	51					
ANR	281884	Condition	c >= '0' && c <= '7'	1654:8:38080:38099	281592	0	True				
ANR	281885	AndExpression	c >= '0' && c <= '7'		281592	0		&&			
ANR	281886	RelationalExpression	c >= '0'		281592	0		>=			
ANR	281887	Identifier	c		281592	0					
ANR	281888	PrimaryExpression	'0'		281592	1					
ANR	281889	RelationalExpression	c <= '7'		281592	1		<=			
ANR	281890	Identifier	c		281592	0					
ANR	281891	PrimaryExpression	'7'		281592	1					
ANR	281892	CompoundStatement		80:30:1653:1653	281592	1					
ANR	281893	ExpressionStatement	val = ( val << 3 ) | ( c - '0' )	1655:5:38109:38137	281592	0	True				
ANR	281894	AssignmentExpression	val = ( val << 3 ) | ( c - '0' )		281592	0		=			
ANR	281895	Identifier	val		281592	0					
ANR	281896	InclusiveOrExpression	( val << 3 ) | ( c - '0' )		281592	1		|			
ANR	281897	ShiftExpression	val << 3		281592	0		<<			
ANR	281898	Identifier	val		281592	0					
ANR	281899	PrimaryExpression	3		281592	1					
ANR	281900	AdditiveExpression	c - '0'		281592	1		-			
ANR	281901	Identifier	c		281592	0					
ANR	281902	PrimaryExpression	'0'		281592	1					
ANR	281903	ExpressionStatement	c = * s ++	1656:5:38144:38152	281592	1	True				
ANR	281904	AssignmentExpression	c = * s ++		281592	0		=			
ANR	281905	Identifier	c		281592	0					
ANR	281906	UnaryOperationExpression	* s ++		281592	1					
ANR	281907	UnaryOperator	*		281592	0					
ANR	281908	PostIncDecOperationExpression	s ++		281592	1					
ANR	281909	Identifier	s		281592	0					
ANR	281910	IncDec	++		281592	1					
ANR	281911	IfStatement	if ( c >= '0' && c <= '7' )		281592	2					
ANR	281912	Condition	c >= '0' && c <= '7'	1657:9:38180:38199	281592	0	True				
ANR	281913	AndExpression	c >= '0' && c <= '7'		281592	0		&&			
ANR	281914	RelationalExpression	c >= '0'		281592	0		>=			
ANR	281915	Identifier	c		281592	0					
ANR	281916	PrimaryExpression	'0'		281592	1					
ANR	281917	RelationalExpression	c <= '7'		281592	1		<=			
ANR	281918	Identifier	c		281592	0					
ANR	281919	PrimaryExpression	'7'		281592	1					
ANR	281920	CompoundStatement		83:31:1753:1753	281592	1					
ANR	281921	ExpressionStatement	val = ( val << 3 ) | ( c - '0' )	1658:6:38210:38236	281592	0	True				
ANR	281922	AssignmentExpression	val = ( val << 3 ) | ( c - '0' )		281592	0		=			
ANR	281923	Identifier	val		281592	0					
ANR	281924	InclusiveOrExpression	( val << 3 ) | ( c - '0' )		281592	1		|			
ANR	281925	ShiftExpression	val << 3		281592	0		<<			
ANR	281926	Identifier	val		281592	0					
ANR	281927	PrimaryExpression	3		281592	1					
ANR	281928	AdditiveExpression	c - '0'		281592	1		-			
ANR	281929	Identifier	c		281592	0					
ANR	281930	PrimaryExpression	'0'		281592	1					
ANR	281931	ElseStatement	else		281592	0					
ANR	281932	CompoundStatement		85:12:1801:1801	281592	0					
ANR	281933	ExpressionStatement	-- s	1660:6:38258:38261	281592	0	True				
ANR	281934	UnaryExpression	-- s		281592	0					
ANR	281935	IncDec	--		281592	0					
ANR	281936	Identifier	s		281592	1					
ANR	281937	ElseStatement	else		281592	0					
ANR	281938	CompoundStatement		88:11:1832:1832	281592	0					
ANR	281939	ExpressionStatement	-- s	1663:5:38288:38291	281592	0	True				
ANR	281940	UnaryExpression	-- s		281592	0					
ANR	281941	IncDec	--		281592	0					
ANR	281942	Identifier	s		281592	1					
ANR	281943	ExpressionStatement	* p ++ = ( char ) val	1665:4:38303:38319	281592	52	True				
ANR	281944	AssignmentExpression	* p ++ = ( char ) val		281592	0		=			
ANR	281945	UnaryOperationExpression	* p ++		281592	0					
ANR	281946	UnaryOperator	*		281592	0					
ANR	281947	PostIncDecOperationExpression	p ++		281592	1					
ANR	281948	Identifier	p		281592	0					
ANR	281949	IncDec	++		281592	1					
ANR	281950	CastExpression	( char ) val		281592	1					
ANR	281951	CastTarget	char		281592	0					
ANR	281952	Identifier	val		281592	1					
ANR	281953	BreakStatement	break ;	1666:4:38325:38330	281592	53	True				
ANR	281954	Label	case 'x' :	1669:3:38371:38379	281592	54	True				
ANR	281955	ExpressionStatement	val = 'x'	1670:4:38385:38394	281592	55	True				
ANR	281956	AssignmentExpression	val = 'x'		281592	0		=			
ANR	281957	Identifier	val		281592	0					
ANR	281958	PrimaryExpression	'x'		281592	1					
ANR	281959	ExpressionStatement	c = hextoint ( * s ++ )	1671:4:38427:38445	281592	56	True				
ANR	281960	AssignmentExpression	c = hextoint ( * s ++ )		281592	0		=			
ANR	281961	Identifier	c		281592	0					
ANR	281962	CallExpression	hextoint ( * s ++ )		281592	1					
ANR	281963	Callee	hextoint		281592	0					
ANR	281964	Identifier	hextoint		281592	0					
ANR	281965	ArgumentList	* s ++		281592	1					
ANR	281966	Argument	* s ++		281592	0					
ANR	281967	UnaryOperationExpression	* s ++		281592	0					
ANR	281968	UnaryOperator	*		281592	0					
ANR	281969	PostIncDecOperationExpression	s ++		281592	1					
ANR	281970	Identifier	s		281592	0					
ANR	281971	IncDec	++		281592	1					
ANR	281972	IfStatement	if ( c >= 0 )		281592	57					
ANR	281973	Condition	c >= 0	1672:8:38475:38480	281592	0	True				
ANR	281974	RelationalExpression	c >= 0		281592	0		>=			
ANR	281975	Identifier	c		281592	0					
ANR	281976	PrimaryExpression	0		281592	1					
ANR	281977	CompoundStatement		98:16:2034:2034	281592	1					
ANR	281978	ExpressionStatement	val = c	1673:5:38490:38497	281592	0	True				
ANR	281979	AssignmentExpression	val = c		281592	0		=			
ANR	281980	Identifier	val		281592	0					
ANR	281981	Identifier	c		281592	1					
ANR	281982	ExpressionStatement	c = hextoint ( * s ++ )	1674:5:38504:38522	281592	1	True				
ANR	281983	AssignmentExpression	c = hextoint ( * s ++ )		281592	0		=			
ANR	281984	Identifier	c		281592	0					
ANR	281985	CallExpression	hextoint ( * s ++ )		281592	1					
ANR	281986	Callee	hextoint		281592	0					
ANR	281987	Identifier	hextoint		281592	0					
ANR	281988	ArgumentList	* s ++		281592	1					
ANR	281989	Argument	* s ++		281592	0					
ANR	281990	UnaryOperationExpression	* s ++		281592	0					
ANR	281991	UnaryOperator	*		281592	0					
ANR	281992	PostIncDecOperationExpression	s ++		281592	1					
ANR	281993	Identifier	s		281592	0					
ANR	281994	IncDec	++		281592	1					
ANR	281995	IfStatement	if ( c >= 0 )		281592	2					
ANR	281996	Condition	c >= 0	1675:9:38533:38538	281592	0	True				
ANR	281997	RelationalExpression	c >= 0		281592	0		>=			
ANR	281998	Identifier	c		281592	0					
ANR	281999	PrimaryExpression	0		281592	1					
ANR	282000	CompoundStatement		101:17:2092:2092	281592	1					
ANR	282001	ExpressionStatement	val = ( val << 4 ) + c	1676:6:38549:38569	281592	0	True				
ANR	282002	AssignmentExpression	val = ( val << 4 ) + c		281592	0		=			
ANR	282003	Identifier	val		281592	0					
ANR	282004	AdditiveExpression	( val << 4 ) + c		281592	1		+			
ANR	282005	ShiftExpression	val << 4		281592	0		<<			
ANR	282006	Identifier	val		281592	0					
ANR	282007	PrimaryExpression	4		281592	1					
ANR	282008	Identifier	c		281592	1					
ANR	282009	ElseStatement	else		281592	0					
ANR	282010	CompoundStatement		103:12:2134:2134	281592	0					
ANR	282011	ExpressionStatement	-- s	1678:6:38591:38594	281592	0	True				
ANR	282012	UnaryExpression	-- s		281592	0					
ANR	282013	IncDec	--		281592	0					
ANR	282014	Identifier	s		281592	1					
ANR	282015	ElseStatement	else		281592	0					
ANR	282016	CompoundStatement		106:11:2165:2165	281592	0					
ANR	282017	ExpressionStatement	-- s	1681:5:38621:38624	281592	0	True				
ANR	282018	UnaryExpression	-- s		281592	0					
ANR	282019	IncDec	--		281592	0					
ANR	282020	Identifier	s		281592	1					
ANR	282021	ExpressionStatement	* p ++ = ( char ) val	1683:4:38636:38652	281592	58	True				
ANR	282022	AssignmentExpression	* p ++ = ( char ) val		281592	0		=			
ANR	282023	UnaryOperationExpression	* p ++		281592	0					
ANR	282024	UnaryOperator	*		281592	0					
ANR	282025	PostIncDecOperationExpression	p ++		281592	1					
ANR	282026	Identifier	p		281592	0					
ANR	282027	IncDec	++		281592	1					
ANR	282028	CastExpression	( char ) val		281592	1					
ANR	282029	CastTarget	char		281592	0					
ANR	282030	Identifier	val		281592	1					
ANR	282031	BreakStatement	break ;	1684:4:38658:38663	281592	59	True				
ANR	282032	ElseStatement	else		281592	0					
ANR	282033	CompoundStatement		112:9:2230:2230	281592	0					
ANR	282034	ExpressionStatement	* p ++ = ( char ) c	1687:3:38684:38698	281592	0	True				
ANR	282035	AssignmentExpression	* p ++ = ( char ) c		281592	0		=			
ANR	282036	UnaryOperationExpression	* p ++		281592	0					
ANR	282037	UnaryOperator	*		281592	0					
ANR	282038	PostIncDecOperationExpression	p ++		281592	1					
ANR	282039	Identifier	p		281592	0					
ANR	282040	IncDec	++		281592	1					
ANR	282041	CastExpression	( char ) c		281592	1					
ANR	282042	CastTarget	char		281592	0					
ANR	282043	Identifier	c		281592	1					
ANR	282044	Label	out :	1690:0:38707:38710	281592	5	True				
ANR	282045	Identifier	out		281592	0					
ANR	282046	ExpressionStatement	* p = '\\0'	1691:1:38713:38722	281592	6	True				
ANR	282047	AssignmentExpression	* p = '\\0'		281592	0		=			
ANR	282048	UnaryOperationExpression	* p		281592	0					
ANR	282049	UnaryOperator	*		281592	0					
ANR	282050	Identifier	p		281592	1					
ANR	282051	PrimaryExpression	'\\0'		281592	1					
ANR	282052	ExpressionStatement	* slen = p - origp	1692:1:38725:38742	281592	7	True				
ANR	282053	AssignmentExpression	* slen = p - origp		281592	0		=			
ANR	282054	UnaryOperationExpression	* slen		281592	0					
ANR	282055	UnaryOperator	*		281592	0					
ANR	282056	Identifier	slen		281592	1					
ANR	282057	AdditiveExpression	p - origp		281592	1		-			
ANR	282058	Identifier	p		281592	0					
ANR	282059	Identifier	origp		281592	1					
ANR	282060	ReturnStatement	return s ;	1693:1:38745:38753	281592	8	True				
ANR	282061	Identifier	s		281592	0					
ANR	282062	ReturnType	static const char *		281592	1					
ANR	282063	Identifier	getstr		281592	2					
ANR	282064	ParameterList	"RMagic * ms , const char * s , char * p , int plen , int * slen , int action"		281592	3					
ANR	282065	Parameter	RMagic * ms	1575:27:36379:36388	281592	0	True				
ANR	282066	ParameterType	RMagic *		281592	0					
ANR	282067	Identifier	ms		281592	1					
ANR	282068	Parameter	const char * s	1575:39:36391:36403	281592	1	True				
ANR	282069	ParameterType	const char *		281592	0					
ANR	282070	Identifier	s		281592	1					
ANR	282071	Parameter	char * p	1575:54:36406:36412	281592	2	True				
ANR	282072	ParameterType	char *		281592	0					
ANR	282073	Identifier	p		281592	1					
ANR	282074	Parameter	int plen	1575:63:36415:36422	281592	3	True				
ANR	282075	ParameterType	int		281592	0					
ANR	282076	Identifier	plen		281592	1					
ANR	282077	Parameter	int * slen	1575:73:36425:36433	281592	4	True				
ANR	282078	ParameterType	int *		281592	0					
ANR	282079	Identifier	slen		281592	1					
ANR	282080	Parameter	int action	1575:84:36436:36445	281592	5	True				
ANR	282081	ParameterType	int		281592	0					
ANR	282082	Identifier	action		281592	1					
ANR	282083	CFGEntryNode	ENTRY		281592		True				
ANR	282084	CFGExitNode	EXIT		281592		True				
ANR	282085	Symbol	pmax		281592						
ANR	282086	Symbol	val		281592						
ANR	282087	Symbol	* s ++		281592						
ANR	282088	Symbol	origs		281592						
ANR	282089	Symbol	c		281592						
ANR	282090	Symbol	NULL		281592						
ANR	282091	Symbol	ms		281592						
ANR	282092	Symbol	* p ++		281592						
ANR	282093	Symbol	isspace		281592						
ANR	282094	Symbol	isprint		281592						
ANR	282095	Symbol	p		281592						
ANR	282096	Symbol	plen		281592						
ANR	282097	Symbol	hextoint		281592						
ANR	282098	Symbol	s		281592						
ANR	282099	Symbol	slen		281592						
ANR	282100	Symbol	action		281592						
ANR	282101	Symbol	* p		281592						
ANR	282102	Symbol	FILE_COMPILE		281592						
ANR	282103	Symbol	* slen		281592						
ANR	282104	Symbol	origp		281592						
ANR	282105	Function	hextoint	1698:0:38811:39058							
ANR	282106	FunctionDef	hextoint (int c)		282105	0					
ANR	282107	CompoundStatement		1698:27:38838:39058	282105	0					
ANR	282108	IfStatement	if ( ! isascii ( ( ut8 ) c ) )		282105	0					
ANR	282109	Condition	! isascii ( ( ut8 ) c )	1699:5:38845:38861	282105	0	True				
ANR	282110	UnaryOperationExpression	! isascii ( ( ut8 ) c )		282105	0					
ANR	282111	UnaryOperator	!		282105	0					
ANR	282112	CallExpression	isascii ( ( ut8 ) c )		282105	1					
ANR	282113	Callee	isascii		282105	0					
ANR	282114	Identifier	isascii		282105	0					
ANR	282115	ArgumentList	( ut8 ) c		282105	1					
ANR	282116	Argument	( ut8 ) c		282105	0					
ANR	282117	CastExpression	( ut8 ) c		282105	0					
ANR	282118	CastTarget	ut8		282105	0					
ANR	282119	Identifier	c		282105	1					
ANR	282120	CompoundStatement		2:24:25:25	282105	1					
ANR	282121	ReturnStatement	return - 1 ;	1700:2:38868:38877	282105	0	True				
ANR	282122	UnaryOperationExpression	- 1		282105	0					
ANR	282123	UnaryOperator	-		282105	0					
ANR	282124	PrimaryExpression	1		282105	1					
ANR	282125	IfStatement	if ( isdigit ( ( ut8 ) c ) )		282105	1					
ANR	282126	Condition	isdigit ( ( ut8 ) c )	1702:5:38887:38902	282105	0	True				
ANR	282127	CallExpression	isdigit ( ( ut8 ) c )		282105	0					
ANR	282128	Callee	isdigit		282105	0					
ANR	282129	Identifier	isdigit		282105	0					
ANR	282130	ArgumentList	( ut8 ) c		282105	1					
ANR	282131	Argument	( ut8 ) c		282105	0					
ANR	282132	CastExpression	( ut8 ) c		282105	0					
ANR	282133	CastTarget	ut8		282105	0					
ANR	282134	Identifier	c		282105	1					
ANR	282135	CompoundStatement		5:23:66:66	282105	1					
ANR	282136	ReturnStatement	return c - '0' ;	1703:2:38909:38923	282105	0	True				
ANR	282137	AdditiveExpression	c - '0'		282105	0		-			
ANR	282138	Identifier	c		282105	0					
ANR	282139	PrimaryExpression	'0'		282105	1					
ANR	282140	IfStatement	if ( ( c >= 'a' ) && ( c <= 'f' ) )		282105	2					
ANR	282141	Condition	( c >= 'a' ) && ( c <= 'f' )	1705:5:38933:38956	282105	0	True				
ANR	282142	AndExpression	( c >= 'a' ) && ( c <= 'f' )		282105	0		&&			
ANR	282143	RelationalExpression	c >= 'a'		282105	0		>=			
ANR	282144	Identifier	c		282105	0					
ANR	282145	PrimaryExpression	'a'		282105	1					
ANR	282146	RelationalExpression	c <= 'f'		282105	1		<=			
ANR	282147	Identifier	c		282105	0					
ANR	282148	PrimaryExpression	'f'		282105	1					
ANR	282149	CompoundStatement		8:31:120:120	282105	1					
ANR	282150	ReturnStatement	return c + 10 - 'a' ;	1706:2:38963:38982	282105	0	True				
ANR	282151	AdditiveExpression	c + 10 - 'a'		282105	0		+			
ANR	282152	Identifier	c		282105	0					
ANR	282153	AdditiveExpression	10 - 'a'		282105	1		-			
ANR	282154	PrimaryExpression	10		282105	0					
ANR	282155	PrimaryExpression	'a'		282105	1					
ANR	282156	IfStatement	if ( ( c >= 'A' ) && ( c <= 'F' ) )		282105	3					
ANR	282157	Condition	( c >= 'A' ) && ( c <= 'F' )	1708:5:38992:39015	282105	0	True				
ANR	282158	AndExpression	( c >= 'A' ) && ( c <= 'F' )		282105	0		&&			
ANR	282159	RelationalExpression	c >= 'A'		282105	0		>=			
ANR	282160	Identifier	c		282105	0					
ANR	282161	PrimaryExpression	'A'		282105	1					
ANR	282162	RelationalExpression	c <= 'F'		282105	1		<=			
ANR	282163	Identifier	c		282105	0					
ANR	282164	PrimaryExpression	'F'		282105	1					
ANR	282165	CompoundStatement		11:31:179:179	282105	1					
ANR	282166	ReturnStatement	return c + 10 - 'A' ;	1709:2:39022:39041	282105	0	True				
ANR	282167	AdditiveExpression	c + 10 - 'A'		282105	0		+			
ANR	282168	Identifier	c		282105	0					
ANR	282169	AdditiveExpression	10 - 'A'		282105	1		-			
ANR	282170	PrimaryExpression	10		282105	0					
ANR	282171	PrimaryExpression	'A'		282105	1					
ANR	282172	ReturnStatement	return - 1 ;	1711:1:39047:39056	282105	4	True				
ANR	282173	UnaryOperationExpression	- 1		282105	0					
ANR	282174	UnaryOperator	-		282105	0					
ANR	282175	PrimaryExpression	1		282105	1					
ANR	282176	ReturnType	static int		282105	1					
ANR	282177	Identifier	hextoint		282105	2					
ANR	282178	ParameterList	int c		282105	3					
ANR	282179	Parameter	int c	1698:20:38831:38835	282105	0	True				
ANR	282180	ParameterType	int		282105	0					
ANR	282181	Identifier	c		282105	1					
ANR	282182	CFGEntryNode	ENTRY		282105		True				
ANR	282183	CFGExitNode	EXIT		282105		True				
ANR	282184	Symbol	c		282105						
ANR	282185	Symbol	isdigit		282105						
ANR	282186	Symbol	isascii		282105						
ANR	282187	Function	file_showstr	1718:0:39119:39764							
ANR	282188	FunctionDef	"file_showstr (FILE * fp , const char * s , size_t len)"		282187	0					
ANR	282189	CompoundStatement		1718:55:39174:39764	282187	0					
ANR	282190	ForStatement	for ( ; ; )		282187	0					
ANR	282191	CompoundStatement		3:2:15:28	282187	0					
ANR	282192	IdentifierDeclStatement	char c = * s ++ ;	1720:2:39190:39203	282187	0	True				
ANR	282193	IdentifierDecl	c = * s ++		282187	0					
ANR	282194	IdentifierDeclType	char		282187	0					
ANR	282195	Identifier	c		282187	1					
ANR	282196	AssignmentExpression	c = * s ++		282187	2		=			
ANR	282197	Identifier	c		282187	0					
ANR	282198	UnaryOperationExpression	* s ++		282187	1					
ANR	282199	UnaryOperator	*		282187	0					
ANR	282200	PostIncDecOperationExpression	s ++		282187	1					
ANR	282201	Identifier	s		282187	0					
ANR	282202	IncDec	++		282187	1					
ANR	282203	IfStatement	if ( len == ~0U )		282187	1					
ANR	282204	Condition	len == ~0U	1721:6:39211:39220	282187	0	True				
ANR	282205	EqualityExpression	len == ~0U		282187	0		==			
ANR	282206	Identifier	len		282187	0					
ANR	282207	Identifier	~0U		282187	1					
ANR	282208	CompoundStatement		4:18:48:48	282187	1					
ANR	282209	IfStatement	if ( c == '\\0' )		282187	0					
ANR	282210	Condition	c == '\\0'	1722:7:39232:39240	282187	0	True				
ANR	282211	EqualityExpression	c == '\\0'		282187	0		==			
ANR	282212	Identifier	c		282187	0					
ANR	282213	PrimaryExpression	'\\0'		282187	1					
ANR	282214	CompoundStatement		5:18:68:68	282187	1					
ANR	282215	BreakStatement	break ;	1723:4:39249:39254	282187	0	True				
ANR	282216	ElseStatement	else		282187	0					
ANR	282217	CompoundStatement		8:9:95:95	282187	0					
ANR	282218	IfStatement	if ( len -- == 0 )		282187	0					
ANR	282219	Condition	len -- == 0	1726:7:39279:39288	282187	0	True				
ANR	282220	EqualityExpression	len -- == 0		282187	0		==			
ANR	282221	PostIncDecOperationExpression	len --		282187	0					
ANR	282222	Identifier	len		282187	0					
ANR	282223	IncDec	--		282187	1					
ANR	282224	PrimaryExpression	0		282187	1					
ANR	282225	CompoundStatement		9:19:116:116	282187	1					
ANR	282226	BreakStatement	break ;	1727:4:39297:39302	282187	0	True				
ANR	282227	IfStatement	if ( c >= 040 && c <= 0176 )		282187	2					
ANR	282228	Condition	c >= 040 && c <= 0176	1730:6:39319:39339	282187	0	True				
ANR	282229	AndExpression	c >= 040 && c <= 0176		282187	0		&&			
ANR	282230	RelationalExpression	c >= 040		282187	0		>=			
ANR	282231	Identifier	c		282187	0					
ANR	282232	PrimaryExpression	040		282187	1					
ANR	282233	RelationalExpression	c <= 0176		282187	1		<=			
ANR	282234	Identifier	c		282187	0					
ANR	282235	PrimaryExpression	0176		282187	1					
ANR	282236	CompoundStatement		13:29:167:167	282187	1					
ANR	282237	ExpressionStatement	"fputc ( c , fp )"	1731:3:39378:39391	282187	0	True				
ANR	282238	CallExpression	"fputc ( c , fp )"		282187	0					
ANR	282239	Callee	fputc		282187	0					
ANR	282240	Identifier	fputc		282187	0					
ANR	282241	ArgumentList	c		282187	1					
ANR	282242	Argument	c		282187	0					
ANR	282243	Identifier	c		282187	0					
ANR	282244	Argument	fp		282187	1					
ANR	282245	Identifier	fp		282187	0					
ANR	282246	ElseStatement	else		282187	0					
ANR	282247	CompoundStatement		15:9:227:227	282187	0					
ANR	282248	ExpressionStatement	"fputc ( '\\\\' , fp )"	1733:3:39407:39423	282187	0	True				
ANR	282249	CallExpression	"fputc ( '\\\\' , fp )"		282187	0					
ANR	282250	Callee	fputc		282187	0					
ANR	282251	Identifier	fputc		282187	0					
ANR	282252	ArgumentList	'\\\\'		282187	1					
ANR	282253	Argument	'\\\\'		282187	0					
ANR	282254	PrimaryExpression	'\\\\'		282187	0					
ANR	282255	Argument	fp		282187	1					
ANR	282256	Identifier	fp		282187	0					
ANR	282257	SwitchStatement	switch ( c )		282187	1					
ANR	282258	Condition	c	1734:11:39436:39436	282187	0	True				
ANR	282259	Identifier	c		282187	0					
ANR	282260	CompoundStatement		17:14:264:264	282187	1					
ANR	282261	Label	case '\\a' :	1735:3:39444:39453	282187	0	True				
ANR	282262	ExpressionStatement	"fputc ( 'a' , fp )"	1735:14:39455:39469	282187	1	True				
ANR	282263	CallExpression	"fputc ( 'a' , fp )"		282187	0					
ANR	282264	Callee	fputc		282187	0					
ANR	282265	Identifier	fputc		282187	0					
ANR	282266	ArgumentList	'a'		282187	1					
ANR	282267	Argument	'a'		282187	0					
ANR	282268	PrimaryExpression	'a'		282187	0					
ANR	282269	Argument	fp		282187	1					
ANR	282270	Identifier	fp		282187	0					
ANR	282271	BreakStatement	break ;	1735:30:39471:39476	282187	2	True				
ANR	282272	Label	case '\\b' :	1736:3:39481:39490	282187	3	True				
ANR	282273	ExpressionStatement	"fputc ( 'b' , fp )"	1736:14:39492:39506	282187	4	True				
ANR	282274	CallExpression	"fputc ( 'b' , fp )"		282187	0					
ANR	282275	Callee	fputc		282187	0					
ANR	282276	Identifier	fputc		282187	0					
ANR	282277	ArgumentList	'b'		282187	1					
ANR	282278	Argument	'b'		282187	0					
ANR	282279	PrimaryExpression	'b'		282187	0					
ANR	282280	Argument	fp		282187	1					
ANR	282281	Identifier	fp		282187	0					
ANR	282282	BreakStatement	break ;	1736:30:39508:39513	282187	5	True				
ANR	282283	Label	case '\\f' :	1737:3:39518:39527	282187	6	True				
ANR	282284	ExpressionStatement	"fputc ( 'f' , fp )"	1737:14:39529:39543	282187	7	True				
ANR	282285	CallExpression	"fputc ( 'f' , fp )"		282187	0					
ANR	282286	Callee	fputc		282187	0					
ANR	282287	Identifier	fputc		282187	0					
ANR	282288	ArgumentList	'f'		282187	1					
ANR	282289	Argument	'f'		282187	0					
ANR	282290	PrimaryExpression	'f'		282187	0					
ANR	282291	Argument	fp		282187	1					
ANR	282292	Identifier	fp		282187	0					
ANR	282293	BreakStatement	break ;	1737:30:39545:39550	282187	8	True				
ANR	282294	Label	case '\\n' :	1738:3:39555:39564	282187	9	True				
ANR	282295	ExpressionStatement	"fputc ( 'n' , fp )"	1738:14:39566:39580	282187	10	True				
ANR	282296	CallExpression	"fputc ( 'n' , fp )"		282187	0					
ANR	282297	Callee	fputc		282187	0					
ANR	282298	Identifier	fputc		282187	0					
ANR	282299	ArgumentList	'n'		282187	1					
ANR	282300	Argument	'n'		282187	0					
ANR	282301	PrimaryExpression	'n'		282187	0					
ANR	282302	Argument	fp		282187	1					
ANR	282303	Identifier	fp		282187	0					
ANR	282304	BreakStatement	break ;	1738:30:39582:39587	282187	11	True				
ANR	282305	Label	case '\\r' :	1739:3:39592:39601	282187	12	True				
ANR	282306	ExpressionStatement	"fputc ( 'r' , fp )"	1739:14:39603:39617	282187	13	True				
ANR	282307	CallExpression	"fputc ( 'r' , fp )"		282187	0					
ANR	282308	Callee	fputc		282187	0					
ANR	282309	Identifier	fputc		282187	0					
ANR	282310	ArgumentList	'r'		282187	1					
ANR	282311	Argument	'r'		282187	0					
ANR	282312	PrimaryExpression	'r'		282187	0					
ANR	282313	Argument	fp		282187	1					
ANR	282314	Identifier	fp		282187	0					
ANR	282315	BreakStatement	break ;	1739:30:39619:39624	282187	14	True				
ANR	282316	Label	case '\\t' :	1740:3:39629:39638	282187	15	True				
ANR	282317	ExpressionStatement	"fputc ( 't' , fp )"	1740:14:39640:39654	282187	16	True				
ANR	282318	CallExpression	"fputc ( 't' , fp )"		282187	0					
ANR	282319	Callee	fputc		282187	0					
ANR	282320	Identifier	fputc		282187	0					
ANR	282321	ArgumentList	't'		282187	1					
ANR	282322	Argument	't'		282187	0					
ANR	282323	PrimaryExpression	't'		282187	0					
ANR	282324	Argument	fp		282187	1					
ANR	282325	Identifier	fp		282187	0					
ANR	282326	BreakStatement	break ;	1740:30:39656:39661	282187	17	True				
ANR	282327	Label	case '\\v' :	1741:3:39666:39675	282187	18	True				
ANR	282328	ExpressionStatement	"fputc ( 'v' , fp )"	1741:14:39677:39691	282187	19	True				
ANR	282329	CallExpression	"fputc ( 'v' , fp )"		282187	0					
ANR	282330	Callee	fputc		282187	0					
ANR	282331	Identifier	fputc		282187	0					
ANR	282332	ArgumentList	'v'		282187	1					
ANR	282333	Argument	'v'		282187	0					
ANR	282334	PrimaryExpression	'v'		282187	0					
ANR	282335	Argument	fp		282187	1					
ANR	282336	Identifier	fp		282187	0					
ANR	282337	BreakStatement	break ;	1741:30:39693:39698	282187	20	True				
ANR	282338	Label	default :	1742:3:39703:39710	282187	21	True				
ANR	282339	Identifier	default		282187	0					
ANR	282340	ExpressionStatement	"fprintf ( fp , ""%.3o"" , c & 0377 )"	1742:14:39714:39743	282187	22	True				
ANR	282341	CallExpression	"fprintf ( fp , ""%.3o"" , c & 0377 )"		282187	0					
ANR	282342	Callee	fprintf		282187	0					
ANR	282343	Identifier	fprintf		282187	0					
ANR	282344	ArgumentList	fp		282187	1					
ANR	282345	Argument	fp		282187	0					
ANR	282346	Identifier	fp		282187	0					
ANR	282347	Argument	"""%.3o"""		282187	1					
ANR	282348	PrimaryExpression	"""%.3o"""		282187	0					
ANR	282349	Argument	c & 0377		282187	2					
ANR	282350	BitAndExpression	c & 0377		282187	0		&			
ANR	282351	Identifier	c		282187	0					
ANR	282352	PrimaryExpression	0377		282187	1					
ANR	282353	BreakStatement	break ;	1742:45:39745:39750	282187	23	True				
ANR	282354	ReturnType	void		282187	1					
ANR	282355	Identifier	file_showstr		282187	2					
ANR	282356	ParameterList	"FILE * fp , const char * s , size_t len"		282187	3					
ANR	282357	Parameter	FILE * fp	1718:18:39137:39144	282187	0	True				
ANR	282358	ParameterType	FILE *		282187	0					
ANR	282359	Identifier	fp		282187	1					
ANR	282360	Parameter	const char * s	1718:28:39147:39159	282187	1	True				
ANR	282361	ParameterType	const char *		282187	0					
ANR	282362	Identifier	s		282187	1					
ANR	282363	Parameter	size_t len	1718:43:39162:39171	282187	2	True				
ANR	282364	ParameterType	size_t		282187	0					
ANR	282365	Identifier	len		282187	1					
ANR	282366	CFGEntryNode	ENTRY		282187		True				
ANR	282367	CFGExitNode	EXIT		282187		True				
ANR	282368	InfiniteForNode	true		282187		True				
ANR	282369	Symbol	* s ++		282187						
ANR	282370	Symbol	~0U		282187						
ANR	282371	Symbol	s		282187						
ANR	282372	Symbol	c		282187						
ANR	282373	Symbol	len		282187						
ANR	282374	Symbol	fp		282187						
ANR	282375	Function	eatsize	1751:0:39831:40149							
ANR	282376	FunctionDef	eatsize (const char * * p)		282375	0					
ANR	282377	CompoundStatement		1751:36:39867:40149	282375	0					
ANR	282378	IdentifierDeclStatement	const char * l = * p ;	1752:1:39870:39888	282375	0	True				
ANR	282379	IdentifierDecl	* l = * p		282375	0					
ANR	282380	IdentifierDeclType	const char *		282375	0					
ANR	282381	Identifier	l		282375	1					
ANR	282382	AssignmentExpression	* l = * p		282375	2		=			
ANR	282383	Identifier	l		282375	0					
ANR	282384	UnaryOperationExpression	* p		282375	1					
ANR	282385	UnaryOperator	*		282375	0					
ANR	282386	Identifier	p		282375	1					
ANR	282387	IfStatement	if ( LOWCASE ( * l ) == 'u' )		282375	1					
ANR	282388	Condition	LOWCASE ( * l ) == 'u'	1754:5:39896:39914	282375	0	True				
ANR	282389	EqualityExpression	LOWCASE ( * l ) == 'u'		282375	0		==			
ANR	282390	CallExpression	LOWCASE ( * l )		282375	0					
ANR	282391	Callee	LOWCASE		282375	0					
ANR	282392	Identifier	LOWCASE		282375	0					
ANR	282393	ArgumentList	* l		282375	1					
ANR	282394	Argument	* l		282375	0					
ANR	282395	UnaryOperationExpression	* l		282375	0					
ANR	282396	UnaryOperator	*		282375	0					
ANR	282397	Identifier	l		282375	1					
ANR	282398	PrimaryExpression	'u'		282375	1					
ANR	282399	CompoundStatement		4:26:49:49	282375	1					
ANR	282400	ExpressionStatement	l ++	1755:2:39921:39924	282375	0	True				
ANR	282401	PostIncDecOperationExpression	l ++		282375	0					
ANR	282402	Identifier	l		282375	0					
ANR	282403	IncDec	++		282375	1					
ANR	282404	SwitchStatement	switch ( LOWCASE ( * l ) )		282375	2					
ANR	282405	Condition	LOWCASE ( * l )	1758:9:39939:39950	282375	0	True				
ANR	282406	CallExpression	LOWCASE ( * l )		282375	0					
ANR	282407	Callee	LOWCASE		282375	0					
ANR	282408	Identifier	LOWCASE		282375	0					
ANR	282409	ArgumentList	* l		282375	1					
ANR	282410	Argument	* l		282375	0					
ANR	282411	UnaryOperationExpression	* l		282375	0					
ANR	282412	UnaryOperator	*		282375	0					
ANR	282413	Identifier	l		282375	1					
ANR	282414	CompoundStatement		8:23:85:85	282375	1					
ANR	282415	Label	case 'l' :	1759:1:39956:39964	282375	0	True				
ANR	282416	Label	case 's' :	1760:1:39981:39989	282375	1	True				
ANR	282417	Label	case 'h' :	1761:1:40007:40015	282375	2	True				
ANR	282418	Label	case 'b' :	1762:1:40033:40041	282375	3	True				
ANR	282419	Label	case 'c' :	1763:1:40063:40071	282375	4	True				
ANR	282420	ExpressionStatement	l ++	1764:2:40094:40097	282375	5	True				
ANR	282421	PostIncDecOperationExpression	l ++		282375	0					
ANR	282422	Identifier	l		282375	0					
ANR	282423	IncDec	++		282375	1					
ANR	282424	Label	default :	1766:1:40118:40125	282375	6	True				
ANR	282425	Identifier	default		282375	0					
ANR	282426	BreakStatement	break ;	1767:2:40129:40134	282375	7	True				
ANR	282427	ExpressionStatement	* p = l	1770:1:40141:40147	282375	3	True				
ANR	282428	AssignmentExpression	* p = l		282375	0		=			
ANR	282429	UnaryOperationExpression	* p		282375	0					
ANR	282430	UnaryOperator	*		282375	0					
ANR	282431	Identifier	p		282375	1					
ANR	282432	Identifier	l		282375	1					
ANR	282433	ReturnType	static void		282375	1					
ANR	282434	Identifier	eatsize		282375	2					
ANR	282435	ParameterList	const char * * p		282375	3					
ANR	282436	Parameter	const char * * p	1751:20:39851:39864	282375	0	True				
ANR	282437	ParameterType	const char * *		282375	0					
ANR	282438	Identifier	p		282375	1					
ANR	282439	CFGEntryNode	ENTRY		282375		True				
ANR	282440	CFGExitNode	EXIT		282375		True				
ANR	282441	Symbol	p		282375						
ANR	282442	Symbol	LOWCASE		282375						
ANR	282443	Symbol	* l		282375						
ANR	282444	Symbol	* p		282375						
ANR	282445	Symbol	l		282375						
ANR	282446	Function	apprentice_map	1776:0:40186:42215							
ANR	282447	FunctionDef	"apprentice_map (RMagic * ms , struct r_magic * * magicp , ut32 * nmagicp , const char * fn)"		282446	0					
ANR	282448	CompoundStatement		1776:94:40280:42215	282446	0					
ANR	282449	IdentifierDeclStatement	int fd ;	1777:1:40283:40289	282446	0	True				
ANR	282450	IdentifierDecl	fd		282446	0					
ANR	282451	IdentifierDeclType	int		282446	0					
ANR	282452	Identifier	fd		282446	1					
ANR	282453	IdentifierDeclStatement	struct stat st ;	1778:1:40292:40306	282446	1	True				
ANR	282454	IdentifierDecl	st		282446	0					
ANR	282455	IdentifierDeclType	struct stat		282446	0					
ANR	282456	Identifier	st		282446	1					
ANR	282457	IdentifierDeclStatement	ut32 * ptr ;	1779:1:40309:40318	282446	2	True				
ANR	282458	IdentifierDecl	* ptr		282446	0					
ANR	282459	IdentifierDeclType	ut32 *		282446	0					
ANR	282460	Identifier	ptr		282446	1					
ANR	282461	IdentifierDeclStatement	ut32 version ;	1780:1:40321:40333	282446	3	True				
ANR	282462	IdentifierDecl	version		282446	0					
ANR	282463	IdentifierDeclType	ut32		282446	0					
ANR	282464	Identifier	version		282446	1					
ANR	282465	IdentifierDeclStatement	int needsbyteswap ;	1781:1:40336:40353	282446	4	True				
ANR	282466	IdentifierDecl	needsbyteswap		282446	0					
ANR	282467	IdentifierDeclType	int		282446	0					
ANR	282468	Identifier	needsbyteswap		282446	1					
ANR	282469	IdentifierDeclStatement	char * dbname = NULL ;	1782:1:40356:40375	282446	5	True				
ANR	282470	IdentifierDecl	* dbname = NULL		282446	0					
ANR	282471	IdentifierDeclType	char *		282446	0					
ANR	282472	Identifier	dbname		282446	1					
ANR	282473	AssignmentExpression	* dbname = NULL		282446	2		=			
ANR	282474	Identifier	NULL		282446	0					
ANR	282475	Identifier	NULL		282446	1					
ANR	282476	IdentifierDeclStatement	void * mm = NULL ;	1783:1:40378:40393	282446	6	True				
ANR	282477	IdentifierDecl	* mm = NULL		282446	0					
ANR	282478	IdentifierDeclType	void *		282446	0					
ANR	282479	Identifier	mm		282446	1					
ANR	282480	AssignmentExpression	* mm = NULL		282446	2		=			
ANR	282481	Identifier	NULL		282446	0					
ANR	282482	Identifier	NULL		282446	1					
ANR	282483	ExpressionStatement	"dbname = mkdbname ( fn , 0 )"	1785:1:40397:40422	282446	7	True				
ANR	282484	AssignmentExpression	"dbname = mkdbname ( fn , 0 )"		282446	0		=			
ANR	282485	Identifier	dbname		282446	0					
ANR	282486	CallExpression	"mkdbname ( fn , 0 )"		282446	1					
ANR	282487	Callee	mkdbname		282446	0					
ANR	282488	Identifier	mkdbname		282446	0					
ANR	282489	ArgumentList	fn		282446	1					
ANR	282490	Argument	fn		282446	0					
ANR	282491	Identifier	fn		282446	0					
ANR	282492	Argument	0		282446	1					
ANR	282493	PrimaryExpression	0		282446	0					
ANR	282494	IfStatement	if ( ! dbname )		282446	8					
ANR	282495	Condition	! dbname	1786:5:40429:40435	282446	0	True				
ANR	282496	UnaryOperationExpression	! dbname		282446	0					
ANR	282497	UnaryOperator	!		282446	0					
ANR	282498	Identifier	dbname		282446	1					
ANR	282499	CompoundStatement		11:14:157:157	282446	1					
ANR	282500	GotoStatement	goto error2 ;	1787:2:40442:40453	282446	0	True				
ANR	282501	Identifier	error2		282446	0					
ANR	282502	IfStatement	"if ( ( fd = r_sandbox_open ( dbname , O_RDONLY | O_BINARY , 0 ) ) == - 1 )"		282446	9					
ANR	282503	Condition	"( fd = r_sandbox_open ( dbname , O_RDONLY | O_BINARY , 0 ) ) == - 1"	1790:5:40464:40523	282446	0	True				
ANR	282504	EqualityExpression	"( fd = r_sandbox_open ( dbname , O_RDONLY | O_BINARY , 0 ) ) == - 1"		282446	0		==			
ANR	282505	AssignmentExpression	"fd = r_sandbox_open ( dbname , O_RDONLY | O_BINARY , 0 )"		282446	0		=			
ANR	282506	Identifier	fd		282446	0					
ANR	282507	CallExpression	"r_sandbox_open ( dbname , O_RDONLY | O_BINARY , 0 )"		282446	1					
ANR	282508	Callee	r_sandbox_open		282446	0					
ANR	282509	Identifier	r_sandbox_open		282446	0					
ANR	282510	ArgumentList	dbname		282446	1					
ANR	282511	Argument	dbname		282446	0					
ANR	282512	Identifier	dbname		282446	0					
ANR	282513	Argument	O_RDONLY | O_BINARY		282446	1					
ANR	282514	InclusiveOrExpression	O_RDONLY | O_BINARY		282446	0		|			
ANR	282515	Identifier	O_RDONLY		282446	0					
ANR	282516	Identifier	O_BINARY		282446	1					
ANR	282517	Argument	0		282446	2					
ANR	282518	PrimaryExpression	0		282446	0					
ANR	282519	UnaryOperationExpression	- 1		282446	1					
ANR	282520	UnaryOperator	-		282446	0					
ANR	282521	PrimaryExpression	1		282446	1					
ANR	282522	CompoundStatement		15:67:245:245	282446	1					
ANR	282523	GotoStatement	goto error2 ;	1791:2:40530:40541	282446	0	True				
ANR	282524	Identifier	error2		282446	0					
ANR	282525	IfStatement	"if ( fstat ( fd , & st ) == - 1 )"		282446	10					
ANR	282526	Condition	"fstat ( fd , & st ) == - 1"	1794:5:40552:40571	282446	0	True				
ANR	282527	EqualityExpression	"fstat ( fd , & st ) == - 1"		282446	0		==			
ANR	282528	CallExpression	"fstat ( fd , & st )"		282446	0					
ANR	282529	Callee	fstat		282446	0					
ANR	282530	Identifier	fstat		282446	0					
ANR	282531	ArgumentList	fd		282446	1					
ANR	282532	Argument	fd		282446	0					
ANR	282533	Identifier	fd		282446	0					
ANR	282534	Argument	& st		282446	1					
ANR	282535	UnaryOperationExpression	& st		282446	0					
ANR	282536	UnaryOperator	&		282446	0					
ANR	282537	Identifier	st		282446	1					
ANR	282538	UnaryOperationExpression	- 1		282446	1					
ANR	282539	UnaryOperator	-		282446	0					
ANR	282540	PrimaryExpression	1		282446	1					
ANR	282541	CompoundStatement		19:27:293:293	282446	1					
ANR	282542	ExpressionStatement	"file_error ( ms , errno , ""cannot stat `%s'"" , dbname )"	1795:2:40578:40628	282446	0	True				
ANR	282543	CallExpression	"file_error ( ms , errno , ""cannot stat `%s'"" , dbname )"		282446	0					
ANR	282544	Callee	file_error		282446	0					
ANR	282545	Identifier	file_error		282446	0					
ANR	282546	ArgumentList	ms		282446	1					
ANR	282547	Argument	ms		282446	0					
ANR	282548	Identifier	ms		282446	0					
ANR	282549	Argument	errno		282446	1					
ANR	282550	Identifier	errno		282446	0					
ANR	282551	Argument	"""cannot stat `%s'"""		282446	2					
ANR	282552	PrimaryExpression	"""cannot stat `%s'"""		282446	0					
ANR	282553	Argument	dbname		282446	3					
ANR	282554	Identifier	dbname		282446	0					
ANR	282555	GotoStatement	goto error1 ;	1796:2:40632:40643	282446	1	True				
ANR	282556	Identifier	error1		282446	0					
ANR	282557	IfStatement	if ( st . st_size < 8 )		282446	11					
ANR	282558	Condition	st . st_size < 8	1798:5:40653:40666	282446	0	True				
ANR	282559	RelationalExpression	st . st_size < 8		282446	0		<			
ANR	282560	MemberAccess	st . st_size		282446	0					
ANR	282561	Identifier	st		282446	0					
ANR	282562	Identifier	st_size		282446	1					
ANR	282563	PrimaryExpression	8		282446	1					
ANR	282564	CompoundStatement		23:21:388:388	282446	1					
ANR	282565	ExpressionStatement	"file_error ( ms , 0 , ""file `%s' is too small"" , dbname )"	1799:2:40673:40725	282446	0	True				
ANR	282566	CallExpression	"file_error ( ms , 0 , ""file `%s' is too small"" , dbname )"		282446	0					
ANR	282567	Callee	file_error		282446	0					
ANR	282568	Identifier	file_error		282446	0					
ANR	282569	ArgumentList	ms		282446	1					
ANR	282570	Argument	ms		282446	0					
ANR	282571	Identifier	ms		282446	0					
ANR	282572	Argument	0		282446	1					
ANR	282573	PrimaryExpression	0		282446	0					
ANR	282574	Argument	"""file `%s' is too small"""		282446	2					
ANR	282575	PrimaryExpression	"""file `%s' is too small"""		282446	0					
ANR	282576	Argument	dbname		282446	3					
ANR	282577	Identifier	dbname		282446	0					
ANR	282578	GotoStatement	goto error1 ;	1800:2:40729:40740	282446	1	True				
ANR	282579	Identifier	error1		282446	0					
ANR	282580	IfStatement	"if ( ( mm = mmap ( 0 , ( size_t ) st . st_size , PROT_READ , MAP_PRIVATE | MAP_FILE , fd , ( off_t ) 0 ) ) == MAP_FAILED )"		282446	12					
ANR	282581	Condition	"( mm = mmap ( 0 , ( size_t ) st . st_size , PROT_READ , MAP_PRIVATE | MAP_FILE , fd , ( off_t ) 0 ) ) == MAP_FAILED"	1804:5:40764:40891	282446	0	True				
ANR	282582	EqualityExpression	"( mm = mmap ( 0 , ( size_t ) st . st_size , PROT_READ , MAP_PRIVATE | MAP_FILE , fd , ( off_t ) 0 ) ) == MAP_FAILED"		282446	0		==			
ANR	282583	AssignmentExpression	"mm = mmap ( 0 , ( size_t ) st . st_size , PROT_READ , MAP_PRIVATE | MAP_FILE , fd , ( off_t ) 0 )"		282446	0		=			
ANR	282584	Identifier	mm		282446	0					
ANR	282585	CallExpression	"mmap ( 0 , ( size_t ) st . st_size , PROT_READ , MAP_PRIVATE | MAP_FILE , fd , ( off_t ) 0 )"		282446	1					
ANR	282586	Callee	mmap		282446	0					
ANR	282587	Identifier	mmap		282446	0					
ANR	282588	ArgumentList	0		282446	1					
ANR	282589	Argument	0		282446	0					
ANR	282590	PrimaryExpression	0		282446	0					
ANR	282591	Argument	( size_t ) st . st_size		282446	1					
ANR	282592	CastExpression	( size_t ) st . st_size		282446	0					
ANR	282593	CastTarget	size_t		282446	0					
ANR	282594	MemberAccess	st . st_size		282446	1					
ANR	282595	Identifier	st		282446	0					
ANR	282596	Identifier	st_size		282446	1					
ANR	282597	Argument	PROT_READ		282446	2					
ANR	282598	Identifier	PROT_READ		282446	0					
ANR	282599	Argument	MAP_PRIVATE | MAP_FILE		282446	3					
ANR	282600	InclusiveOrExpression	MAP_PRIVATE | MAP_FILE		282446	0		|			
ANR	282601	Identifier	MAP_PRIVATE		282446	0					
ANR	282602	Identifier	MAP_FILE		282446	1					
ANR	282603	Argument	fd		282446	4					
ANR	282604	Identifier	fd		282446	0					
ANR	282605	Argument	( off_t ) 0		282446	5					
ANR	282606	CastExpression	( off_t ) 0		282446	0					
ANR	282607	CastTarget	off_t		282446	0					
ANR	282608	PrimaryExpression	0		282446	1					
ANR	282609	Identifier	MAP_FAILED		282446	1					
ANR	282610	CompoundStatement		30:57:613:613	282446	1					
ANR	282611	ExpressionStatement	"file_error ( ms , errno , ""cannot map `%s'"" , dbname )"	1806:2:40898:40947	282446	0	True				
ANR	282612	CallExpression	"file_error ( ms , errno , ""cannot map `%s'"" , dbname )"		282446	0					
ANR	282613	Callee	file_error		282446	0					
ANR	282614	Identifier	file_error		282446	0					
ANR	282615	ArgumentList	ms		282446	1					
ANR	282616	Argument	ms		282446	0					
ANR	282617	Identifier	ms		282446	0					
ANR	282618	Argument	errno		282446	1					
ANR	282619	Identifier	errno		282446	0					
ANR	282620	Argument	"""cannot map `%s'"""		282446	2					
ANR	282621	PrimaryExpression	"""cannot map `%s'"""		282446	0					
ANR	282622	Argument	dbname		282446	3					
ANR	282623	Identifier	dbname		282446	0					
ANR	282624	GotoStatement	goto error1 ;	1807:2:40951:40962	282446	1	True				
ANR	282625	Identifier	error1		282446	0					
ANR	282626	Statement	define	1809:1:40968:40973	282446	13	True				
ANR	282627	Statement	RET	1809:8:40975:40977	282446	14	True				
ANR	282628	Statement	2	1809:12:40979:40979	282446	15	True				
ANR	282629	ExpressionStatement	* magicp = mm	1821:1:41211:41223	282446	16	True				
ANR	282630	AssignmentExpression	* magicp = mm		282446	0		=			
ANR	282631	UnaryOperationExpression	* magicp		282446	0					
ANR	282632	UnaryOperator	*		282446	0					
ANR	282633	Identifier	magicp		282446	1					
ANR	282634	Identifier	mm		282446	1					
ANR	282635	ExpressionStatement	( void ) close ( fd )	1822:1:41226:41242	282446	17	True				
ANR	282636	CastExpression	( void ) close ( fd )		282446	0					
ANR	282637	CastTarget	void		282446	0					
ANR	282638	CallExpression	close ( fd )		282446	1					
ANR	282639	Callee	close		282446	0					
ANR	282640	Identifier	close		282446	0					
ANR	282641	ArgumentList	fd		282446	1					
ANR	282642	Argument	fd		282446	0					
ANR	282643	Identifier	fd		282446	0					
ANR	282644	ExpressionStatement	fd = - 1	1823:1:41245:41252	282446	18	True				
ANR	282645	AssignmentExpression	fd = - 1		282446	0		=			
ANR	282646	Identifier	fd		282446	0					
ANR	282647	UnaryOperationExpression	- 1		282446	1					
ANR	282648	UnaryOperator	-		282446	0					
ANR	282649	PrimaryExpression	1		282446	1					
ANR	282650	ExpressionStatement	ptr = ( ut32 * ) ( void * ) * magicp	1824:1:41255:41284	282446	19	True				
ANR	282651	AssignmentExpression	ptr = ( ut32 * ) ( void * ) * magicp		282446	0		=			
ANR	282652	Identifier	ptr		282446	0					
ANR	282653	CastExpression	( ut32 * ) ( void * ) * magicp		282446	1					
ANR	282654	CastTarget	ut32 *		282446	0					
ANR	282655	CastExpression	( void * ) * magicp		282446	1					
ANR	282656	CastTarget	void *		282446	0					
ANR	282657	UnaryOperationExpression	* magicp		282446	1					
ANR	282658	UnaryOperator	*		282446	0					
ANR	282659	Identifier	magicp		282446	1					
ANR	282660	IfStatement	if ( * ptr != MAGICNO )		282446	20					
ANR	282661	Condition	* ptr != MAGICNO	1826:5:41292:41306	282446	0	True				
ANR	282662	EqualityExpression	* ptr != MAGICNO		282446	0		!=			
ANR	282663	UnaryOperationExpression	* ptr		282446	0					
ANR	282664	UnaryOperator	*		282446	0					
ANR	282665	Identifier	ptr		282446	1					
ANR	282666	Identifier	MAGICNO		282446	1					
ANR	282667	CompoundStatement		51:22:1028:1028	282446	1					
ANR	282668	IfStatement	if ( swap4 ( * ptr ) != MAGICNO )		282446	0					
ANR	282669	Condition	swap4 ( * ptr ) != MAGICNO	1827:6:41317:41338	282446	0	True				
ANR	282670	EqualityExpression	swap4 ( * ptr ) != MAGICNO		282446	0		!=			
ANR	282671	CallExpression	swap4 ( * ptr )		282446	0					
ANR	282672	Callee	swap4		282446	0					
ANR	282673	Identifier	swap4		282446	0					
ANR	282674	ArgumentList	* ptr		282446	1					
ANR	282675	Argument	* ptr		282446	0					
ANR	282676	UnaryOperationExpression	* ptr		282446	0					
ANR	282677	UnaryOperator	*		282446	0					
ANR	282678	Identifier	ptr		282446	1					
ANR	282679	Identifier	MAGICNO		282446	1					
ANR	282680	CompoundStatement		52:30:1060:1060	282446	1					
ANR	282681	ExpressionStatement	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"	1829:3:41401:41447	282446	0	True				
ANR	282682	CallExpression	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"		282446	0					
ANR	282683	Callee	file_error		282446	0					
ANR	282684	Identifier	file_error		282446	0					
ANR	282685	ArgumentList	ms		282446	1					
ANR	282686	Argument	ms		282446	0					
ANR	282687	Identifier	ms		282446	0					
ANR	282688	Argument	0		282446	1					
ANR	282689	PrimaryExpression	0		282446	0					
ANR	282690	Argument	"""bad magic in `%s'"""		282446	2					
ANR	282691	PrimaryExpression	"""bad magic in `%s'"""		282446	0					
ANR	282692	Argument	dbname		282446	3					
ANR	282693	Identifier	dbname		282446	0					
ANR	282694	GotoStatement	goto error1 ;	1830:3:41452:41463	282446	1	True				
ANR	282695	Identifier	error1		282446	0					
ANR	282696	ExpressionStatement	needsbyteswap = 1	1832:2:41471:41488	282446	1	True				
ANR	282697	AssignmentExpression	needsbyteswap = 1		282446	0		=			
ANR	282698	Identifier	needsbyteswap		282446	0					
ANR	282699	PrimaryExpression	1		282446	1					
ANR	282700	ElseStatement	else		282446	0					
ANR	282701	CompoundStatement		58:8:1217:1217	282446	0					
ANR	282702	ExpressionStatement	needsbyteswap = 0	1834:2:41502:41519	282446	0	True				
ANR	282703	AssignmentExpression	needsbyteswap = 0		282446	0		=			
ANR	282704	Identifier	needsbyteswap		282446	0					
ANR	282705	PrimaryExpression	0		282446	1					
ANR	282706	ExpressionStatement	version = needsbyteswap ? swap4 ( ptr [ 1 ] ) : ptr [ 1 ]	1837:1:41526:41572	282446	21	True				
ANR	282707	AssignmentExpression	version = needsbyteswap ? swap4 ( ptr [ 1 ] ) : ptr [ 1 ]		282446	0		=			
ANR	282708	Identifier	version		282446	0					
ANR	282709	ConditionalExpression	needsbyteswap ? swap4 ( ptr [ 1 ] ) : ptr [ 1 ]		282446	1					
ANR	282710	Condition	needsbyteswap		282446	0					
ANR	282711	Identifier	needsbyteswap		282446	0					
ANR	282712	CallExpression	swap4 ( ptr [ 1 ] )		282446	1					
ANR	282713	Callee	swap4		282446	0					
ANR	282714	Identifier	swap4		282446	0					
ANR	282715	ArgumentList	ptr [ 1 ]		282446	1					
ANR	282716	Argument	ptr [ 1 ]		282446	0					
ANR	282717	ArrayIndexing	ptr [ 1 ]		282446	0					
ANR	282718	Identifier	ptr		282446	0					
ANR	282719	PrimaryExpression	1		282446	1					
ANR	282720	ArrayIndexing	ptr [ 1 ]		282446	2					
ANR	282721	Identifier	ptr		282446	0					
ANR	282722	PrimaryExpression	1		282446	1					
ANR	282723	IfStatement	if ( version != VERSIONNO )		282446	22					
ANR	282724	Condition	version != VERSIONNO	1838:5:41579:41598	282446	0	True				
ANR	282725	EqualityExpression	version != VERSIONNO		282446	0		!=			
ANR	282726	Identifier	version		282446	0					
ANR	282727	Identifier	VERSIONNO		282446	1					
ANR	282728	CompoundStatement		63:27:1320:1320	282446	1					
ANR	282729	Statement	file_error	1839:2:41605:41614	282446	0	True				
ANR	282730	Statement	(	1839:12:41615:41615	282446	1	True				
ANR	282731	Statement	ms	1839:13:41616:41617	282446	2	True				
ANR	282732	Statement	","	1839:15:41618:41618	282446	3	True				
ANR	282733	Statement	0	1839:17:41620:41620	282446	4	True				
ANR	282734	Statement	","	1839:18:41621:41621	282446	5	True				
ANR	282735	Statement	"""File %d.%d supports only %d version magic """	1839:20:41623:41666	282446	6	True				
ANR	282736	Statement	"""files. `%s' is version %d"""	1840:6:41674:41700	282446	7	True				
ANR	282737	Statement	","	1840:33:41701:41701	282446	8	True				
ANR	282738	Statement	FILE_VERSION_MAJOR	1840:35:41703:41720	282446	9	True				
ANR	282739	Statement	","	1840:53:41721:41721	282446	10	True				
ANR	282740	Statement	patchlevel	1840:55:41723:41732	282446	11	True				
ANR	282741	Statement	","	1840:65:41733:41733	282446	12	True				
ANR	282742	Statement	VERSIONNO	1841:6:41741:41749	282446	13	True				
ANR	282743	Statement	","	1841:15:41750:41750	282446	14	True				
ANR	282744	Statement	dbname	1841:17:41752:41757	282446	15	True				
ANR	282745	Statement	","	1841:23:41758:41758	282446	16	True				
ANR	282746	Statement	version	1841:25:41760:41766	282446	17	True				
ANR	282747	Statement	)	1841:32:41767:41767	282446	18	True				
ANR	282748	ExpressionStatement		1841:33:41768:41768	282446	19	True				
ANR	282749	GotoStatement	goto error1 ;	1842:2:41772:41783	282446	20	True				
ANR	282750	Identifier	error1		282446	0					
ANR	282751	ExpressionStatement	* nmagicp = ( ut32 ) ( st . st_size / sizeof ( struct r_magic ) )	1844:1:41789:41844	282446	23	True				
ANR	282752	AssignmentExpression	* nmagicp = ( ut32 ) ( st . st_size / sizeof ( struct r_magic ) )		282446	0		=			
ANR	282753	UnaryOperationExpression	* nmagicp		282446	0					
ANR	282754	UnaryOperator	*		282446	0					
ANR	282755	Identifier	nmagicp		282446	1					
ANR	282756	CastExpression	( ut32 ) ( st . st_size / sizeof ( struct r_magic ) )		282446	1					
ANR	282757	CastTarget	ut32		282446	0					
ANR	282758	MultiplicativeExpression	st . st_size / sizeof ( struct r_magic )		282446	1		/			
ANR	282759	MemberAccess	st . st_size		282446	0					
ANR	282760	Identifier	st		282446	0					
ANR	282761	Identifier	st_size		282446	1					
ANR	282762	SizeofExpression	sizeof ( struct r_magic )		282446	1					
ANR	282763	Sizeof	sizeof		282446	0					
ANR	282764	SizeofOperand	struct r_magic		282446	1					
ANR	282765	IfStatement	if ( * nmagicp > 0 )		282446	24					
ANR	282766	Condition	* nmagicp > 0	1845:5:41851:41862	282446	0	True				
ANR	282767	RelationalExpression	* nmagicp > 0		282446	0		>			
ANR	282768	UnaryOperationExpression	* nmagicp		282446	0					
ANR	282769	UnaryOperator	*		282446	0					
ANR	282770	Identifier	nmagicp		282446	1					
ANR	282771	PrimaryExpression	0		282446	1					
ANR	282772	CompoundStatement		70:19:1584:1584	282446	1					
ANR	282773	ExpressionStatement	( * nmagicp ) --	1846:2:41869:41881	282446	0	True				
ANR	282774	PostIncDecOperationExpression	( * nmagicp ) --		282446	0					
ANR	282775	UnaryOperationExpression	* nmagicp		282446	0					
ANR	282776	UnaryOperator	*		282446	0					
ANR	282777	Identifier	nmagicp		282446	1					
ANR	282778	IncDec	--		282446	1					
ANR	282779	ExpressionStatement	( * magicp ) ++	1848:1:41887:41898	282446	25	True				
ANR	282780	PostIncDecOperationExpression	( * magicp ) ++		282446	0					
ANR	282781	UnaryOperationExpression	* magicp		282446	0					
ANR	282782	UnaryOperator	*		282446	0					
ANR	282783	Identifier	magicp		282446	1					
ANR	282784	IncDec	++		282446	1					
ANR	282785	IfStatement	if ( needsbyteswap )		282446	26					
ANR	282786	Condition	needsbyteswap	1849:5:41905:41917	282446	0	True				
ANR	282787	Identifier	needsbyteswap		282446	0					
ANR	282788	CompoundStatement		74:20:1639:1639	282446	1					
ANR	282789	ExpressionStatement	"byteswap ( * magicp , * nmagicp )"	1850:2:41924:41952	282446	0	True				
ANR	282790	CallExpression	"byteswap ( * magicp , * nmagicp )"		282446	0					
ANR	282791	Callee	byteswap		282446	0					
ANR	282792	Identifier	byteswap		282446	0					
ANR	282793	ArgumentList	* magicp		282446	1					
ANR	282794	Argument	* magicp		282446	0					
ANR	282795	UnaryOperationExpression	* magicp		282446	0					
ANR	282796	UnaryOperator	*		282446	0					
ANR	282797	Identifier	magicp		282446	1					
ANR	282798	Argument	* nmagicp		282446	1					
ANR	282799	UnaryOperationExpression	* nmagicp		282446	0					
ANR	282800	UnaryOperator	*		282446	0					
ANR	282801	Identifier	nmagicp		282446	1					
ANR	282802	ExpressionStatement	free ( dbname )	1852:1:41958:41971	282446	27	True				
ANR	282803	CallExpression	free ( dbname )		282446	0					
ANR	282804	Callee	free		282446	0					
ANR	282805	Identifier	free		282446	0					
ANR	282806	ArgumentList	dbname		282446	1					
ANR	282807	Argument	dbname		282446	0					
ANR	282808	Identifier	dbname		282446	0					
ANR	282809	ReturnStatement	return RET ;	1853:1:41974:41984	282446	28	True				
ANR	282810	Identifier	RET		282446	0					
ANR	282811	Label	error1 :	1855:0:41987:41993	282446	29	True				
ANR	282812	Identifier	error1		282446	0					
ANR	282813	IfStatement	if ( fd != - 1 )		282446	30					
ANR	282814	Condition	fd != - 1	1856:5:42000:42007	282446	0	True				
ANR	282815	EqualityExpression	fd != - 1		282446	0		!=			
ANR	282816	Identifier	fd		282446	0					
ANR	282817	UnaryOperationExpression	- 1		282446	1					
ANR	282818	UnaryOperator	-		282446	0					
ANR	282819	PrimaryExpression	1		282446	1					
ANR	282820	CompoundStatement		81:15:1729:1729	282446	1					
ANR	282821	ExpressionStatement	( void ) close ( fd )	1857:2:42014:42030	282446	0	True				
ANR	282822	CastExpression	( void ) close ( fd )		282446	0					
ANR	282823	CastTarget	void		282446	0					
ANR	282824	CallExpression	close ( fd )		282446	1					
ANR	282825	Callee	close		282446	0					
ANR	282826	Identifier	close		282446	0					
ANR	282827	ArgumentList	fd		282446	1					
ANR	282828	Argument	fd		282446	0					
ANR	282829	Identifier	fd		282446	0					
ANR	282830	IfStatement	if ( mm )		282446	31					
ANR	282831	Condition	mm	1859:5:42040:42041	282446	0	True				
ANR	282832	Identifier	mm		282446	0					
ANR	282833	CompoundStatement		84:9:1763:1763	282446	1					
ANR	282834	ExpressionStatement	"( void ) munmap ( ( void * ) mm , ( size_t ) st . st_size )"	1861:2:42061:42105	282446	0	True				
ANR	282835	CastExpression	"( void ) munmap ( ( void * ) mm , ( size_t ) st . st_size )"		282446	0					
ANR	282836	CastTarget	void		282446	0					
ANR	282837	CallExpression	"munmap ( ( void * ) mm , ( size_t ) st . st_size )"		282446	1					
ANR	282838	Callee	munmap		282446	0					
ANR	282839	Identifier	munmap		282446	0					
ANR	282840	ArgumentList	( void * ) mm		282446	1					
ANR	282841	Argument	( void * ) mm		282446	0					
ANR	282842	CastExpression	( void * ) mm		282446	0					
ANR	282843	CastTarget	void *		282446	0					
ANR	282844	Identifier	mm		282446	1					
ANR	282845	Argument	( size_t ) st . st_size		282446	1					
ANR	282846	CastExpression	( size_t ) st . st_size		282446	0					
ANR	282847	CastTarget	size_t		282446	0					
ANR	282848	MemberAccess	st . st_size		282446	1					
ANR	282849	Identifier	st		282446	0					
ANR	282850	Identifier	st_size		282446	1					
ANR	282851	ElseStatement	else		282446	0					
ANR	282852	CompoundStatement		90:8:1859:1859	282446	0					
ANR	282853	ExpressionStatement	* magicp = NULL	1866:2:42144:42158	282446	0	True				
ANR	282854	AssignmentExpression	* magicp = NULL		282446	0		=			
ANR	282855	UnaryOperationExpression	* magicp		282446	0					
ANR	282856	UnaryOperator	*		282446	0					
ANR	282857	Identifier	magicp		282446	1					
ANR	282858	Identifier	NULL		282446	1					
ANR	282859	ExpressionStatement	* nmagicp = 0	1867:2:42162:42174	282446	1	True				
ANR	282860	AssignmentExpression	* nmagicp = 0		282446	0		=			
ANR	282861	UnaryOperationExpression	* nmagicp		282446	0					
ANR	282862	UnaryOperator	*		282446	0					
ANR	282863	Identifier	nmagicp		282446	1					
ANR	282864	PrimaryExpression	0		282446	1					
ANR	282865	Label	error2 :	1869:0:42179:42185	282446	32	True				
ANR	282866	Identifier	error2		282446	0					
ANR	282867	ExpressionStatement	free ( dbname )	1870:1:42188:42201	282446	33	True				
ANR	282868	CallExpression	free ( dbname )		282446	0					
ANR	282869	Callee	free		282446	0					
ANR	282870	Identifier	free		282446	0					
ANR	282871	ArgumentList	dbname		282446	1					
ANR	282872	Argument	dbname		282446	0					
ANR	282873	Identifier	dbname		282446	0					
ANR	282874	ReturnStatement	return - 1 ;	1871:1:42204:42213	282446	34	True				
ANR	282875	UnaryOperationExpression	- 1		282446	0					
ANR	282876	UnaryOperator	-		282446	0					
ANR	282877	PrimaryExpression	1		282446	1					
ANR	282878	ReturnType	static int		282446	1					
ANR	282879	Identifier	apprentice_map		282446	2					
ANR	282880	ParameterList	"RMagic * ms , struct r_magic * * magicp , ut32 * nmagicp , const char * fn"		282446	3					
ANR	282881	Parameter	RMagic * ms	1776:26:40212:40221	282446	0	True				
ANR	282882	ParameterType	RMagic *		282446	0					
ANR	282883	Identifier	ms		282446	1					
ANR	282884	Parameter	struct r_magic * * magicp	1776:38:40224:40246	282446	1	True				
ANR	282885	ParameterType	struct r_magic * *		282446	0					
ANR	282886	Identifier	magicp		282446	1					
ANR	282887	Parameter	ut32 * nmagicp	1776:63:40249:40261	282446	2	True				
ANR	282888	ParameterType	ut32 *		282446	0					
ANR	282889	Identifier	nmagicp		282446	1					
ANR	282890	Parameter	const char * fn	1776:78:40264:40277	282446	3	True				
ANR	282891	ParameterType	const char *		282446	0					
ANR	282892	Identifier	fn		282446	1					
ANR	282893	CFGEntryNode	ENTRY		282446		True				
ANR	282894	CFGExitNode	EXIT		282446		True				
ANR	282895	Symbol	VERSIONNO		282446						
ANR	282896	Symbol	RET		282446						
ANR	282897	Symbol	O_BINARY		282446						
ANR	282898	Symbol	fn		282446						
ANR	282899	Symbol	& st		282446						
ANR	282900	Symbol	swap4		282446						
ANR	282901	Symbol	MAP_PRIVATE		282446						
ANR	282902	Symbol	MAP_FAILED		282446						
ANR	282903	Symbol	* nmagicp		282446						
ANR	282904	Symbol	MAP_FILE		282446						
ANR	282905	Symbol	* ptr		282446						
ANR	282906	Symbol	* magicp		282446						
ANR	282907	Symbol	mm		282446						
ANR	282908	Symbol	st		282446						
ANR	282909	Symbol	errno		282446						
ANR	282910	Symbol	NULL		282446						
ANR	282911	Symbol	magicp		282446						
ANR	282912	Symbol	nmagicp		282446						
ANR	282913	Symbol	ms		282446						
ANR	282914	Symbol	fstat		282446						
ANR	282915	Symbol	PROT_READ		282446						
ANR	282916	Symbol	version		282446						
ANR	282917	Symbol	ptr		282446						
ANR	282918	Symbol	needsbyteswap		282446						
ANR	282919	Symbol	mkdbname		282446						
ANR	282920	Symbol	r_sandbox_open		282446						
ANR	282921	Symbol	O_RDONLY		282446						
ANR	282922	Symbol	st . st_size		282446						
ANR	282923	Symbol	dbname		282446						
ANR	282924	Symbol	MAGICNO		282446						
ANR	282925	Symbol	mmap		282446						
ANR	282926	Symbol	fd		282446						
ANR	282927	DeclStmt									
ANR	282928	Decl							const ut32	const ut32 [ ]	ar
ANR	282929	Function	apprentice_compile	1881:0:42305:43205							
ANR	282930	FunctionDef	"apprentice_compile (RMagic * ms , struct r_magic * * magicp , ut32 * nmagicp , const char * fn)"		282929	0					
ANR	282931	CompoundStatement		1881:98:42403:43205	282929	0					
ANR	282932	IdentifierDeclStatement	int fd ;	1882:1:42406:42412	282929	0	True				
ANR	282933	IdentifierDecl	fd		282929	0					
ANR	282934	IdentifierDeclType	int		282929	0					
ANR	282935	Identifier	fd		282929	1					
ANR	282936	IdentifierDeclStatement	char * dbname ;	1883:1:42415:42427	282929	1	True				
ANR	282937	IdentifierDecl	* dbname		282929	0					
ANR	282938	IdentifierDeclType	char *		282929	0					
ANR	282939	Identifier	dbname		282929	1					
ANR	282940	IdentifierDeclStatement	int rv = - 1 ;	1884:1:42430:42441	282929	2	True				
ANR	282941	IdentifierDecl	rv = - 1		282929	0					
ANR	282942	IdentifierDeclType	int		282929	0					
ANR	282943	Identifier	rv		282929	1					
ANR	282944	AssignmentExpression	rv = - 1		282929	2		=			
ANR	282945	Identifier	rv		282929	0					
ANR	282946	UnaryOperationExpression	- 1		282929	1					
ANR	282947	UnaryOperator	-		282929	0					
ANR	282948	PrimaryExpression	1		282929	1					
ANR	282949	ExpressionStatement	"dbname = mkdbname ( fn , 1 )"	1886:1:42445:42469	282929	3	True				
ANR	282950	AssignmentExpression	"dbname = mkdbname ( fn , 1 )"		282929	0		=			
ANR	282951	Identifier	dbname		282929	0					
ANR	282952	CallExpression	"mkdbname ( fn , 1 )"		282929	1					
ANR	282953	Callee	mkdbname		282929	0					
ANR	282954	Identifier	mkdbname		282929	0					
ANR	282955	ArgumentList	fn		282929	1					
ANR	282956	Argument	fn		282929	0					
ANR	282957	Identifier	fn		282929	0					
ANR	282958	Argument	1		282929	1					
ANR	282959	PrimaryExpression	1		282929	0					
ANR	282960	IfStatement	if ( ! dbname )		282929	4					
ANR	282961	Condition	! dbname	1888:5:42477:42483	282929	0	True				
ANR	282962	UnaryOperationExpression	! dbname		282929	0					
ANR	282963	UnaryOperator	!		282929	0					
ANR	282964	Identifier	dbname		282929	1					
ANR	282965	CompoundStatement		8:14:82:82	282929	1					
ANR	282966	GotoStatement	goto out ;	1889:2:42490:42498	282929	0	True				
ANR	282967	Identifier	out		282929	0					
ANR	282968	IfStatement	"if ( ( fd = r_sandbox_open ( dbname , O_WRONLY | O_CREAT | O_TRUNC | O_BINARY , 0644 ) ) == - 1 )"		282929	5					
ANR	282969	Condition	"( fd = r_sandbox_open ( dbname , O_WRONLY | O_CREAT | O_TRUNC | O_BINARY , 0644 ) ) == - 1"	1892:5:42509:42584	282929	0	True				
ANR	282970	EqualityExpression	"( fd = r_sandbox_open ( dbname , O_WRONLY | O_CREAT | O_TRUNC | O_BINARY , 0644 ) ) == - 1"		282929	0		==			
ANR	282971	AssignmentExpression	"fd = r_sandbox_open ( dbname , O_WRONLY | O_CREAT | O_TRUNC | O_BINARY , 0644 )"		282929	0		=			
ANR	282972	Identifier	fd		282929	0					
ANR	282973	CallExpression	"r_sandbox_open ( dbname , O_WRONLY | O_CREAT | O_TRUNC | O_BINARY , 0644 )"		282929	1					
ANR	282974	Callee	r_sandbox_open		282929	0					
ANR	282975	Identifier	r_sandbox_open		282929	0					
ANR	282976	ArgumentList	dbname		282929	1					
ANR	282977	Argument	dbname		282929	0					
ANR	282978	Identifier	dbname		282929	0					
ANR	282979	Argument	O_WRONLY | O_CREAT | O_TRUNC | O_BINARY		282929	1					
ANR	282980	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC | O_BINARY		282929	0		|			
ANR	282981	Identifier	O_WRONLY		282929	0					
ANR	282982	InclusiveOrExpression	O_CREAT | O_TRUNC | O_BINARY		282929	1		|			
ANR	282983	Identifier	O_CREAT		282929	0					
ANR	282984	InclusiveOrExpression	O_TRUNC | O_BINARY		282929	1		|			
ANR	282985	Identifier	O_TRUNC		282929	0					
ANR	282986	Identifier	O_BINARY		282929	1					
ANR	282987	Argument	0644		282929	2					
ANR	282988	PrimaryExpression	0644		282929	0					
ANR	282989	UnaryOperationExpression	- 1		282929	1					
ANR	282990	UnaryOperator	-		282929	0					
ANR	282991	PrimaryExpression	1		282929	1					
ANR	282992	CompoundStatement		12:83:183:183	282929	1					
ANR	282993	ExpressionStatement	"file_error ( ms , errno , ""cannot open `%s'"" , dbname )"	1893:2:42591:42640	282929	0	True				
ANR	282994	CallExpression	"file_error ( ms , errno , ""cannot open `%s'"" , dbname )"		282929	0					
ANR	282995	Callee	file_error		282929	0					
ANR	282996	Identifier	file_error		282929	0					
ANR	282997	ArgumentList	ms		282929	1					
ANR	282998	Argument	ms		282929	0					
ANR	282999	Identifier	ms		282929	0					
ANR	283000	Argument	errno		282929	1					
ANR	283001	Identifier	errno		282929	0					
ANR	283002	Argument	"""cannot open `%s'"""		282929	2					
ANR	283003	PrimaryExpression	"""cannot open `%s'"""		282929	0					
ANR	283004	Argument	dbname		282929	3					
ANR	283005	Identifier	dbname		282929	0					
ANR	283006	GotoStatement	goto out ;	1894:2:42644:42652	282929	1	True				
ANR	283007	Identifier	out		282929	0					
ANR	283008	IfStatement	"if ( write ( fd , ar , sizeof ( ar ) ) != ( int ) sizeof ( ar ) )"		282929	6					
ANR	283009	Condition	"write ( fd , ar , sizeof ( ar ) ) != ( int ) sizeof ( ar )"	1897:5:42663:42708	282929	0	True				
ANR	283010	EqualityExpression	"write ( fd , ar , sizeof ( ar ) ) != ( int ) sizeof ( ar )"		282929	0		!=			
ANR	283011	CallExpression	"write ( fd , ar , sizeof ( ar ) )"		282929	0					
ANR	283012	Callee	write		282929	0					
ANR	283013	Identifier	write		282929	0					
ANR	283014	ArgumentList	fd		282929	1					
ANR	283015	Argument	fd		282929	0					
ANR	283016	Identifier	fd		282929	0					
ANR	283017	Argument	ar		282929	1					
ANR	283018	Identifier	ar		282929	0					
ANR	283019	Argument	sizeof ( ar )		282929	2					
ANR	283020	SizeofExpression	sizeof ( ar )		282929	0					
ANR	283021	Sizeof	sizeof		282929	0					
ANR	283022	SizeofOperand	ar		282929	1					
ANR	283023	CastExpression	( int ) sizeof ( ar )		282929	1					
ANR	283024	CastTarget	int		282929	0					
ANR	283025	SizeofExpression	sizeof ( ar )		282929	1					
ANR	283026	Sizeof	sizeof		282929	0					
ANR	283027	SizeofOperand	ar		282929	1					
ANR	283028	CompoundStatement		17:53:307:307	282929	1					
ANR	283029	ExpressionStatement	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"	1898:2:42715:42766	282929	0	True				
ANR	283030	CallExpression	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"		282929	0					
ANR	283031	Callee	file_error		282929	0					
ANR	283032	Identifier	file_error		282929	0					
ANR	283033	ArgumentList	ms		282929	1					
ANR	283034	Argument	ms		282929	0					
ANR	283035	Identifier	ms		282929	0					
ANR	283036	Argument	errno		282929	1					
ANR	283037	Identifier	errno		282929	0					
ANR	283038	Argument	"""error writing `%s'"""		282929	2					
ANR	283039	PrimaryExpression	"""error writing `%s'"""		282929	0					
ANR	283040	Argument	dbname		282929	3					
ANR	283041	Identifier	dbname		282929	0					
ANR	283042	GotoStatement	goto beach ;	1899:2:42770:42780	282929	1	True				
ANR	283043	Identifier	beach		282929	0					
ANR	283044	IfStatement	"if ( lseek ( fd , ( off_t ) sizeof ( struct r_magic ) , SEEK_SET ) != sizeof ( struct r_magic ) )"		282929	7					
ANR	283045	Condition	"lseek ( fd , ( off_t ) sizeof ( struct r_magic ) , SEEK_SET ) != sizeof ( struct r_magic )"	1902:5:42791:42873	282929	0	True				
ANR	283046	EqualityExpression	"lseek ( fd , ( off_t ) sizeof ( struct r_magic ) , SEEK_SET ) != sizeof ( struct r_magic )"		282929	0		!=			
ANR	283047	CallExpression	"lseek ( fd , ( off_t ) sizeof ( struct r_magic ) , SEEK_SET )"		282929	0					
ANR	283048	Callee	lseek		282929	0					
ANR	283049	Identifier	lseek		282929	0					
ANR	283050	ArgumentList	fd		282929	1					
ANR	283051	Argument	fd		282929	0					
ANR	283052	Identifier	fd		282929	0					
ANR	283053	Argument	( off_t ) sizeof ( struct r_magic )		282929	1					
ANR	283054	CastExpression	( off_t ) sizeof ( struct r_magic )		282929	0					
ANR	283055	CastTarget	off_t		282929	0					
ANR	283056	SizeofExpression	sizeof ( struct r_magic )		282929	1					
ANR	283057	Sizeof	sizeof		282929	0					
ANR	283058	SizeofOperand	struct r_magic		282929	1					
ANR	283059	Argument	SEEK_SET		282929	2					
ANR	283060	Identifier	SEEK_SET		282929	0					
ANR	283061	SizeofExpression	sizeof ( struct r_magic )		282929	1					
ANR	283062	Sizeof	sizeof		282929	0					
ANR	283063	SizeofOperand	struct r_magic		282929	1					
ANR	283064	CompoundStatement		23:33:472:472	282929	1					
ANR	283065	ExpressionStatement	"file_error ( ms , errno , ""error seeking `%s'"" , dbname )"	1904:2:42880:42931	282929	0	True				
ANR	283066	CallExpression	"file_error ( ms , errno , ""error seeking `%s'"" , dbname )"		282929	0					
ANR	283067	Callee	file_error		282929	0					
ANR	283068	Identifier	file_error		282929	0					
ANR	283069	ArgumentList	ms		282929	1					
ANR	283070	Argument	ms		282929	0					
ANR	283071	Identifier	ms		282929	0					
ANR	283072	Argument	errno		282929	1					
ANR	283073	Identifier	errno		282929	0					
ANR	283074	Argument	"""error seeking `%s'"""		282929	2					
ANR	283075	PrimaryExpression	"""error seeking `%s'"""		282929	0					
ANR	283076	Argument	dbname		282929	3					
ANR	283077	Identifier	dbname		282929	0					
ANR	283078	GotoStatement	goto beach ;	1905:2:42935:42945	282929	1	True				
ANR	283079	Identifier	beach		282929	0					
ANR	283080	IfStatement	"if ( write ( fd , * magicp , ( sizeof ( struct r_magic ) * * nmagicp ) ) != ( int ) ( sizeof ( struct r_magic ) * * nmagicp ) )"		282929	8					
ANR	283081	Condition	"write ( fd , * magicp , ( sizeof ( struct r_magic ) * * nmagicp ) ) != ( int ) ( sizeof ( struct r_magic ) * * nmagicp )"	1908:5:42956:43061	282929	0	True				
ANR	283082	EqualityExpression	"write ( fd , * magicp , ( sizeof ( struct r_magic ) * * nmagicp ) ) != ( int ) ( sizeof ( struct r_magic ) * * nmagicp )"		282929	0		!=			
ANR	283083	CallExpression	"write ( fd , * magicp , ( sizeof ( struct r_magic ) * * nmagicp ) )"		282929	0					
ANR	283084	Callee	write		282929	0					
ANR	283085	Identifier	write		282929	0					
ANR	283086	ArgumentList	fd		282929	1					
ANR	283087	Argument	fd		282929	0					
ANR	283088	Identifier	fd		282929	0					
ANR	283089	Argument	* magicp		282929	1					
ANR	283090	UnaryOperationExpression	* magicp		282929	0					
ANR	283091	UnaryOperator	*		282929	0					
ANR	283092	Identifier	magicp		282929	1					
ANR	283093	Argument	sizeof ( struct r_magic ) * * nmagicp		282929	2					
ANR	283094	MultiplicativeExpression	sizeof ( struct r_magic ) * * nmagicp		282929	0		*			
ANR	283095	SizeofExpression	sizeof ( struct r_magic )		282929	0					
ANR	283096	Sizeof	sizeof		282929	0					
ANR	283097	SizeofOperand	struct r_magic		282929	1					
ANR	283098	UnaryOperationExpression	* nmagicp		282929	1					
ANR	283099	UnaryOperator	*		282929	0					
ANR	283100	Identifier	nmagicp		282929	1					
ANR	283101	CastExpression	( int ) ( sizeof ( struct r_magic ) * * nmagicp )		282929	1					
ANR	283102	CastTarget	int		282929	0					
ANR	283103	MultiplicativeExpression	sizeof ( struct r_magic ) * * nmagicp		282929	1		*			
ANR	283104	SizeofExpression	sizeof ( struct r_magic )		282929	0					
ANR	283105	Sizeof	sizeof		282929	0					
ANR	283106	SizeofOperand	struct r_magic		282929	1					
ANR	283107	UnaryOperationExpression	* nmagicp		282929	1					
ANR	283108	UnaryOperator	*		282929	0					
ANR	283109	Identifier	nmagicp		282929	1					
ANR	283110	CompoundStatement		29:51:660:660	282929	1					
ANR	283111	ExpressionStatement	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"	1910:2:43068:43119	282929	0	True				
ANR	283112	CallExpression	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"		282929	0					
ANR	283113	Callee	file_error		282929	0					
ANR	283114	Identifier	file_error		282929	0					
ANR	283115	ArgumentList	ms		282929	1					
ANR	283116	Argument	ms		282929	0					
ANR	283117	Identifier	ms		282929	0					
ANR	283118	Argument	errno		282929	1					
ANR	283119	Identifier	errno		282929	0					
ANR	283120	Argument	"""error writing `%s'"""		282929	2					
ANR	283121	PrimaryExpression	"""error writing `%s'"""		282929	0					
ANR	283122	Argument	dbname		282929	3					
ANR	283123	Identifier	dbname		282929	0					
ANR	283124	GotoStatement	goto beach ;	1911:2:43123:43133	282929	1	True				
ANR	283125	Identifier	beach		282929	0					
ANR	283126	ExpressionStatement	rv = 0	1914:1:43140:43146	282929	9	True				
ANR	283127	AssignmentExpression	rv = 0		282929	0		=			
ANR	283128	Identifier	rv		282929	0					
ANR	283129	PrimaryExpression	0		282929	1					
ANR	283130	Label	beach :	1915:0:43148:43153	282929	10	True				
ANR	283131	Identifier	beach		282929	0					
ANR	283132	ExpressionStatement	( void ) close ( fd )	1916:1:43156:43171	282929	11	True				
ANR	283133	CastExpression	( void ) close ( fd )		282929	0					
ANR	283134	CastTarget	void		282929	0					
ANR	283135	CallExpression	close ( fd )		282929	1					
ANR	283136	Callee	close		282929	0					
ANR	283137	Identifier	close		282929	0					
ANR	283138	ArgumentList	fd		282929	1					
ANR	283139	Argument	fd		282929	0					
ANR	283140	Identifier	fd		282929	0					
ANR	283141	Label	out :	1917:0:43173:43176	282929	12	True				
ANR	283142	Identifier	out		282929	0					
ANR	283143	ExpressionStatement	free ( dbname )	1918:1:43179:43191	282929	13	True				
ANR	283144	CallExpression	free ( dbname )		282929	0					
ANR	283145	Callee	free		282929	0					
ANR	283146	Identifier	free		282929	0					
ANR	283147	ArgumentList	dbname		282929	1					
ANR	283148	Argument	dbname		282929	0					
ANR	283149	Identifier	dbname		282929	0					
ANR	283150	ReturnStatement	return rv ;	1919:1:43194:43203	282929	14	True				
ANR	283151	Identifier	rv		282929	0					
ANR	283152	ReturnType	static int		282929	1					
ANR	283153	Identifier	apprentice_compile		282929	2					
ANR	283154	ParameterList	"RMagic * ms , struct r_magic * * magicp , ut32 * nmagicp , const char * fn"		282929	3					
ANR	283155	Parameter	RMagic * ms	1881:30:42335:42344	282929	0	True				
ANR	283156	ParameterType	RMagic *		282929	0					
ANR	283157	Identifier	ms		282929	1					
ANR	283158	Parameter	struct r_magic * * magicp	1881:42:42347:42369	282929	1	True				
ANR	283159	ParameterType	struct r_magic * *		282929	0					
ANR	283160	Identifier	magicp		282929	1					
ANR	283161	Parameter	ut32 * nmagicp	1881:67:42372:42384	282929	2	True				
ANR	283162	ParameterType	ut32 *		282929	0					
ANR	283163	Identifier	nmagicp		282929	1					
ANR	283164	Parameter	const char * fn	1881:82:42387:42400	282929	3	True				
ANR	283165	ParameterType	const char *		282929	0					
ANR	283166	Identifier	fn		282929	1					
ANR	283167	CFGEntryNode	ENTRY		282929		True				
ANR	283168	CFGExitNode	EXIT		282929		True				
ANR	283169	Symbol	SEEK_SET		282929						
ANR	283170	Symbol	errno		282929						
ANR	283171	Symbol	lseek		282929						
ANR	283172	Symbol	magicp		282929						
ANR	283173	Symbol	nmagicp		282929						
ANR	283174	Symbol	rv		282929						
ANR	283175	Symbol	O_BINARY		282929						
ANR	283176	Symbol	ms		282929						
ANR	283177	Symbol	O_CREAT		282929						
ANR	283178	Symbol	fn		282929						
ANR	283179	Symbol	* nmagicp		282929						
ANR	283180	Symbol	mkdbname		282929						
ANR	283181	Symbol	ar		282929						
ANR	283182	Symbol	r_sandbox_open		282929						
ANR	283183	Symbol	O_TRUNC		282929						
ANR	283184	Symbol	dbname		282929						
ANR	283185	Symbol	* magicp		282929						
ANR	283186	Symbol	O_WRONLY		282929						
ANR	283187	Symbol	write		282929						
ANR	283188	Symbol	fd		282929						
ANR	283189	DeclStmt									
ANR	283190	Decl							const char	const char [ ]	ext
ANR	283191	Function	mkdbname	1926:0:43266:43703							
ANR	283192	FunctionDef	"mkdbname (const char * fn , int strip)"		283191	0					
ANR	283193	CompoundStatement		1926:49:43315:43703	283191	0					
ANR	283194	IdentifierDeclStatement	char * buf = NULL ;	1927:1:43318:43334	283191	0	True				
ANR	283195	IdentifierDecl	* buf = NULL		283191	0					
ANR	283196	IdentifierDeclType	char *		283191	0					
ANR	283197	Identifier	buf		283191	1					
ANR	283198	AssignmentExpression	* buf = NULL		283191	2		=			
ANR	283199	Identifier	NULL		283191	0					
ANR	283200	Identifier	NULL		283191	1					
ANR	283201	IdentifierDeclStatement	"int fnlen , extlen ;"	1928:1:43337:43354	283191	1	True				
ANR	283202	IdentifierDecl	fnlen		283191	0					
ANR	283203	IdentifierDeclType	int		283191	0					
ANR	283204	Identifier	fnlen		283191	1					
ANR	283205	IdentifierDecl	extlen		283191	1					
ANR	283206	IdentifierDeclType	int		283191	0					
ANR	283207	Identifier	extlen		283191	1					
ANR	283208	IfStatement	if ( strip )		283191	2					
ANR	283209	Condition	strip	1929:5:43361:43365	283191	0	True				
ANR	283210	Identifier	strip		283191	0					
ANR	283211	CompoundStatement		5:2:56:69	283191	1					
ANR	283212	IdentifierDeclStatement	const char * p ;	1930:2:43372:43385	283191	0	True				
ANR	283213	IdentifierDecl	* p		283191	0					
ANR	283214	IdentifierDeclType	const char *		283191	0					
ANR	283215	Identifier	p		283191	1					
ANR	283216	IfStatement	"if ( ( p = strrchr ( fn , '/' ) ) != NULL )"		283191	1					
ANR	283217	Condition	"( p = strrchr ( fn , '/' ) ) != NULL"	1931:6:43393:43423	283191	0	True				
ANR	283218	EqualityExpression	"( p = strrchr ( fn , '/' ) ) != NULL"		283191	0		!=			
ANR	283219	AssignmentExpression	"p = strrchr ( fn , '/' )"		283191	0		=			
ANR	283220	Identifier	p		283191	0					
ANR	283221	CallExpression	"strrchr ( fn , '/' )"		283191	1					
ANR	283222	Callee	strrchr		283191	0					
ANR	283223	Identifier	strrchr		283191	0					
ANR	283224	ArgumentList	fn		283191	1					
ANR	283225	Argument	fn		283191	0					
ANR	283226	Identifier	fn		283191	0					
ANR	283227	Argument	'/'		283191	1					
ANR	283228	PrimaryExpression	'/'		283191	0					
ANR	283229	Identifier	NULL		283191	1					
ANR	283230	CompoundStatement		6:39:110:110	283191	1					
ANR	283231	ExpressionStatement	fn = ++ p	1932:3:43431:43439	283191	0	True				
ANR	283232	AssignmentExpression	fn = ++ p		283191	0		=			
ANR	283233	Identifier	fn		283191	0					
ANR	283234	UnaryExpression	++ p		283191	1					
ANR	283235	IncDec	++		283191	0					
ANR	283236	Identifier	p		283191	1					
ANR	283237	ExpressionStatement	fnlen = strlen ( fn )	1935:1:43449:43468	283191	3	True				
ANR	283238	AssignmentExpression	fnlen = strlen ( fn )		283191	0		=			
ANR	283239	Identifier	fnlen		283191	0					
ANR	283240	CallExpression	strlen ( fn )		283191	1					
ANR	283241	Callee	strlen		283191	0					
ANR	283242	Identifier	strlen		283191	0					
ANR	283243	ArgumentList	fn		283191	1					
ANR	283244	Argument	fn		283191	0					
ANR	283245	Identifier	fn		283191	0					
ANR	283246	ExpressionStatement	extlen = strlen ( ext )	1936:1:43471:43492	283191	4	True				
ANR	283247	AssignmentExpression	extlen = strlen ( ext )		283191	0		=			
ANR	283248	Identifier	extlen		283191	0					
ANR	283249	CallExpression	strlen ( ext )		283191	1					
ANR	283250	Callee	strlen		283191	0					
ANR	283251	Identifier	strlen		283191	0					
ANR	283252	ArgumentList	ext		283191	1					
ANR	283253	Argument	ext		283191	0					
ANR	283254	Identifier	ext		283191	0					
ANR	283255	IfStatement	if ( fnlen + extlen + 1 > MAXPATHLEN )		283191	5					
ANR	283256	Condition	fnlen + extlen + 1 > MAXPATHLEN	1937:5:43499:43529	283191	0	True				
ANR	283257	RelationalExpression	fnlen + extlen + 1 > MAXPATHLEN		283191	0		>			
ANR	283258	AdditiveExpression	fnlen + extlen + 1		283191	0		+			
ANR	283259	Identifier	fnlen		283191	0					
ANR	283260	AdditiveExpression	extlen + 1		283191	1		+			
ANR	283261	Identifier	extlen		283191	0					
ANR	283262	PrimaryExpression	1		283191	1					
ANR	283263	Identifier	MAXPATHLEN		283191	1					
ANR	283264	CompoundStatement		12:38:216:216	283191	1					
ANR	283265	ReturnStatement	return NULL ;	1938:2:43536:43547	283191	0	True				
ANR	283266	Identifier	NULL		283191	0					
ANR	283267	ExpressionStatement	buf = malloc ( fnlen + extlen + 1 )	1940:1:43553:43586	283191	6	True				
ANR	283268	AssignmentExpression	buf = malloc ( fnlen + extlen + 1 )		283191	0		=			
ANR	283269	Identifier	buf		283191	0					
ANR	283270	CallExpression	malloc ( fnlen + extlen + 1 )		283191	1					
ANR	283271	Callee	malloc		283191	0					
ANR	283272	Identifier	malloc		283191	0					
ANR	283273	ArgumentList	fnlen + extlen + 1		283191	1					
ANR	283274	Argument	fnlen + extlen + 1		283191	0					
ANR	283275	AdditiveExpression	fnlen + extlen + 1		283191	0		+			
ANR	283276	Identifier	fnlen		283191	0					
ANR	283277	AdditiveExpression	extlen + 1		283191	1		+			
ANR	283278	Identifier	extlen		283191	0					
ANR	283279	PrimaryExpression	1		283191	1					
ANR	283280	IfStatement	if ( buf )		283191	7					
ANR	283281	Condition	buf	1941:5:43593:43595	283191	0	True				
ANR	283282	Identifier	buf		283191	0					
ANR	283283	CompoundStatement		16:10:282:282	283191	1					
ANR	283284	ExpressionStatement	"memcpy ( buf , fn , fnlen )"	1942:2:43602:43625	283191	0	True				
ANR	283285	CallExpression	"memcpy ( buf , fn , fnlen )"		283191	0					
ANR	283286	Callee	memcpy		283191	0					
ANR	283287	Identifier	memcpy		283191	0					
ANR	283288	ArgumentList	buf		283191	1					
ANR	283289	Argument	buf		283191	0					
ANR	283290	Identifier	buf		283191	0					
ANR	283291	Argument	fn		283191	1					
ANR	283292	Identifier	fn		283191	0					
ANR	283293	Argument	fnlen		283191	2					
ANR	283294	Identifier	fnlen		283191	0					
ANR	283295	ExpressionStatement	"memcpy ( buf + fnlen , ext , extlen )"	1943:2:43629:43660	283191	1	True				
ANR	283296	CallExpression	"memcpy ( buf + fnlen , ext , extlen )"		283191	0					
ANR	283297	Callee	memcpy		283191	0					
ANR	283298	Identifier	memcpy		283191	0					
ANR	283299	ArgumentList	buf + fnlen		283191	1					
ANR	283300	Argument	buf + fnlen		283191	0					
ANR	283301	AdditiveExpression	buf + fnlen		283191	0		+			
ANR	283302	Identifier	buf		283191	0					
ANR	283303	Identifier	fnlen		283191	1					
ANR	283304	Argument	ext		283191	1					
ANR	283305	Identifier	ext		283191	0					
ANR	283306	Argument	extlen		283191	2					
ANR	283307	Identifier	extlen		283191	0					
ANR	283308	ExpressionStatement	buf [ fnlen + extlen ] = 0	1944:2:43664:43685	283191	2	True				
ANR	283309	AssignmentExpression	buf [ fnlen + extlen ] = 0		283191	0		=			
ANR	283310	ArrayIndexing	buf [ fnlen + extlen ]		283191	0					
ANR	283311	Identifier	buf		283191	0					
ANR	283312	AdditiveExpression	fnlen + extlen		283191	1		+			
ANR	283313	Identifier	fnlen		283191	0					
ANR	283314	Identifier	extlen		283191	1					
ANR	283315	PrimaryExpression	0		283191	1					
ANR	283316	ReturnStatement	return buf ;	1946:1:43691:43701	283191	8	True				
ANR	283317	Identifier	buf		283191	0					
ANR	283318	ReturnType	static char *		283191	1					
ANR	283319	Identifier	mkdbname		283191	2					
ANR	283320	ParameterList	"const char * fn , int strip"		283191	3					
ANR	283321	Parameter	const char * fn	1926:22:43288:43301	283191	0	True				
ANR	283322	ParameterType	const char *		283191	0					
ANR	283323	Identifier	fn		283191	1					
ANR	283324	Parameter	int strip	1926:38:43304:43312	283191	1	True				
ANR	283325	ParameterType	int		283191	0					
ANR	283326	Identifier	strip		283191	1					
ANR	283327	CFGEntryNode	ENTRY		283191		True				
ANR	283328	CFGExitNode	EXIT		283191		True				
ANR	283329	Symbol	ext		283191						
ANR	283330	Symbol	malloc		283191						
ANR	283331	Symbol	* buf		283191						
ANR	283332	Symbol	NULL		283191						
ANR	283333	Symbol	* fnlen		283191						
ANR	283334	Symbol	fn		283191						
ANR	283335	Symbol	* extlen		283191						
ANR	283336	Symbol	p		283191						
ANR	283337	Symbol	strlen		283191						
ANR	283338	Symbol	MAXPATHLEN		283191						
ANR	283339	Symbol	buf		283191						
ANR	283340	Symbol	strip		283191						
ANR	283341	Symbol	strrchr		283191						
ANR	283342	Symbol	fnlen		283191						
ANR	283343	Symbol	extlen		283191						
ANR	283344	Function	byteswap	1952:0:43751:43873							
ANR	283345	FunctionDef	"byteswap (struct r_magic * magic , ut32 nmagic)"		283344	0					
ANR	283346	CompoundStatement		1952:57:43808:43873	283344	0					
ANR	283347	IdentifierDeclStatement	ut32 i ;	1953:1:43811:43817	283344	0	True				
ANR	283348	IdentifierDecl	i		283344	0					
ANR	283349	IdentifierDeclType	ut32		283344	0					
ANR	283350	Identifier	i		283344	1					
ANR	283351	ForStatement	for ( i = 0 ; i < nmagic ; i ++ )		283344	1					
ANR	283352	ForInit	i = 0 ;	1954:6:43825:43830	283344	0	True				
ANR	283353	AssignmentExpression	i = 0		283344	0		=			
ANR	283354	Identifier	i		283344	0					
ANR	283355	PrimaryExpression	0		283344	1					
ANR	283356	Condition	i < nmagic	1954:13:43832:43841	283344	1	True				
ANR	283357	RelationalExpression	i < nmagic		283344	0		<			
ANR	283358	Identifier	i		283344	0					
ANR	283359	Identifier	nmagic		283344	1					
ANR	283360	PostIncDecOperationExpression	i ++	1954:25:43844:43846	283344	2	True				
ANR	283361	Identifier	i		283344	0					
ANR	283362	IncDec	++		283344	1					
ANR	283363	CompoundStatement		3:30:40:40	283344	3					
ANR	283364	ExpressionStatement	bs1 ( & magic [ i ] )	1955:2:43853:43868	283344	0	True				
ANR	283365	CallExpression	bs1 ( & magic [ i ] )		283344	0					
ANR	283366	Callee	bs1		283344	0					
ANR	283367	Identifier	bs1		283344	0					
ANR	283368	ArgumentList	& magic [ i ]		283344	1					
ANR	283369	Argument	& magic [ i ]		283344	0					
ANR	283370	UnaryOperationExpression	& magic [ i ]		283344	0					
ANR	283371	UnaryOperator	&		283344	0					
ANR	283372	ArrayIndexing	magic [ i ]		283344	1					
ANR	283373	Identifier	magic		283344	0					
ANR	283374	Identifier	i		283344	1					
ANR	283375	ReturnType	static void		283344	1					
ANR	283376	Identifier	byteswap		283344	2					
ANR	283377	ParameterList	"struct r_magic * magic , ut32 nmagic"		283344	3					
ANR	283378	Parameter	struct r_magic * magic	1952:21:43772:43792	283344	0	True				
ANR	283379	ParameterType	struct r_magic *		283344	0					
ANR	283380	Identifier	magic		283344	1					
ANR	283381	Parameter	ut32 nmagic	1952:44:43795:43805	283344	1	True				
ANR	283382	ParameterType	ut32		283344	0					
ANR	283383	Identifier	nmagic		283344	1					
ANR	283384	CFGEntryNode	ENTRY		283344		True				
ANR	283385	CFGExitNode	EXIT		283344		True				
ANR	283386	Symbol	magic		283344						
ANR	283387	Symbol	i		283344						
ANR	283388	Symbol	nmagic		283344						
ANR	283389	Function	swap2	1962:0:43899:44038							
ANR	283390	FunctionDef	swap2 (ut16 sv)		283389	0					
ANR	283391	CompoundStatement		1962:27:43926:44038	283389	0					
ANR	283392	IdentifierDeclStatement	ut16 rv ;	1963:1:43929:43936	283389	0	True				
ANR	283393	IdentifierDecl	rv		283389	0					
ANR	283394	IdentifierDeclType	ut16		283389	0					
ANR	283395	Identifier	rv		283389	1					
ANR	283396	IdentifierDeclStatement	ut8 * s = ( ut8 * ) ( void * ) & sv ;	1964:1:43939:43966	283389	1	True				
ANR	283397	IdentifierDecl	* s = ( ut8 * ) ( void * ) & sv		283389	0					
ANR	283398	IdentifierDeclType	ut8 *		283389	0					
ANR	283399	Identifier	s		283389	1					
ANR	283400	AssignmentExpression	* s = ( ut8 * ) ( void * ) & sv		283389	2		=			
ANR	283401	Identifier	s		283389	0					
ANR	283402	CastExpression	( ut8 * ) ( void * ) & sv		283389	1					
ANR	283403	CastTarget	ut8 *		283389	0					
ANR	283404	CastExpression	( void * ) & sv		283389	1					
ANR	283405	CastTarget	void *		283389	0					
ANR	283406	UnaryOperationExpression	& sv		283389	1					
ANR	283407	UnaryOperator	&		283389	0					
ANR	283408	Identifier	sv		283389	1					
ANR	283409	IdentifierDeclStatement	ut8 * d = ( ut8 * ) ( void * ) & rv ;	1965:1:43969:43996	283389	2	True				
ANR	283410	IdentifierDecl	* d = ( ut8 * ) ( void * ) & rv		283389	0					
ANR	283411	IdentifierDeclType	ut8 *		283389	0					
ANR	283412	Identifier	d		283389	1					
ANR	283413	AssignmentExpression	* d = ( ut8 * ) ( void * ) & rv		283389	2		=			
ANR	283414	Identifier	d		283389	0					
ANR	283415	CastExpression	( ut8 * ) ( void * ) & rv		283389	1					
ANR	283416	CastTarget	ut8 *		283389	0					
ANR	283417	CastExpression	( void * ) & rv		283389	1					
ANR	283418	CastTarget	void *		283389	0					
ANR	283419	UnaryOperationExpression	& rv		283389	1					
ANR	283420	UnaryOperator	&		283389	0					
ANR	283421	Identifier	rv		283389	1					
ANR	283422	ExpressionStatement	d [ 0 ] = s [ 1 ]	1966:1:43999:44010	283389	3	True				
ANR	283423	AssignmentExpression	d [ 0 ] = s [ 1 ]		283389	0		=			
ANR	283424	ArrayIndexing	d [ 0 ]		283389	0					
ANR	283425	Identifier	d		283389	0					
ANR	283426	PrimaryExpression	0		283389	1					
ANR	283427	ArrayIndexing	s [ 1 ]		283389	1					
ANR	283428	Identifier	s		283389	0					
ANR	283429	PrimaryExpression	1		283389	1					
ANR	283430	ExpressionStatement	d [ 1 ] = s [ 0 ]	1967:1:44013:44024	283389	4	True				
ANR	283431	AssignmentExpression	d [ 1 ] = s [ 0 ]		283389	0		=			
ANR	283432	ArrayIndexing	d [ 1 ]		283389	0					
ANR	283433	Identifier	d		283389	0					
ANR	283434	PrimaryExpression	1		283389	1					
ANR	283435	ArrayIndexing	s [ 0 ]		283389	1					
ANR	283436	Identifier	s		283389	0					
ANR	283437	PrimaryExpression	0		283389	1					
ANR	283438	ReturnStatement	return rv ;	1968:1:44027:44036	283389	5	True				
ANR	283439	Identifier	rv		283389	0					
ANR	283440	ReturnType	static ut16		283389	1					
ANR	283441	Identifier	swap2		283389	2					
ANR	283442	ParameterList	ut16 sv		283389	3					
ANR	283443	Parameter	ut16 sv	1962:18:43917:43923	283389	0	True				
ANR	283444	ParameterType	ut16		283389	0					
ANR	283445	Identifier	sv		283389	1					
ANR	283446	CFGEntryNode	ENTRY		283389		True				
ANR	283447	CFGExitNode	EXIT		283389		True				
ANR	283448	Symbol	sv		283389						
ANR	283449	Symbol	s		283389						
ANR	283450	Symbol	rv		283389						
ANR	283451	Symbol	d		283389						
ANR	283452	Symbol	& sv		283389						
ANR	283453	Symbol	* s		283389						
ANR	283454	Symbol	* d		283389						
ANR	283455	Symbol	& rv		283389						
ANR	283456	Function	swap4	1974:0:44063:44230							
ANR	283457	FunctionDef	swap4 (ut32 sv)		283456	0					
ANR	283458	CompoundStatement		1974:27:44090:44230	283456	0					
ANR	283459	IdentifierDeclStatement	ut32 rv ;	1975:1:44093:44100	283456	0	True				
ANR	283460	IdentifierDecl	rv		283456	0					
ANR	283461	IdentifierDeclType	ut32		283456	0					
ANR	283462	Identifier	rv		283456	1					
ANR	283463	IdentifierDeclStatement	ut8 * s = ( ut8 * ) ( void * ) & sv ;	1976:1:44103:44130	283456	1	True				
ANR	283464	IdentifierDecl	* s = ( ut8 * ) ( void * ) & sv		283456	0					
ANR	283465	IdentifierDeclType	ut8 *		283456	0					
ANR	283466	Identifier	s		283456	1					
ANR	283467	AssignmentExpression	* s = ( ut8 * ) ( void * ) & sv		283456	2		=			
ANR	283468	Identifier	s		283456	0					
ANR	283469	CastExpression	( ut8 * ) ( void * ) & sv		283456	1					
ANR	283470	CastTarget	ut8 *		283456	0					
ANR	283471	CastExpression	( void * ) & sv		283456	1					
ANR	283472	CastTarget	void *		283456	0					
ANR	283473	UnaryOperationExpression	& sv		283456	1					
ANR	283474	UnaryOperator	&		283456	0					
ANR	283475	Identifier	sv		283456	1					
ANR	283476	IdentifierDeclStatement	ut8 * d = ( ut8 * ) ( void * ) & rv ;	1977:1:44133:44160	283456	2	True				
ANR	283477	IdentifierDecl	* d = ( ut8 * ) ( void * ) & rv		283456	0					
ANR	283478	IdentifierDeclType	ut8 *		283456	0					
ANR	283479	Identifier	d		283456	1					
ANR	283480	AssignmentExpression	* d = ( ut8 * ) ( void * ) & rv		283456	2		=			
ANR	283481	Identifier	d		283456	0					
ANR	283482	CastExpression	( ut8 * ) ( void * ) & rv		283456	1					
ANR	283483	CastTarget	ut8 *		283456	0					
ANR	283484	CastExpression	( void * ) & rv		283456	1					
ANR	283485	CastTarget	void *		283456	0					
ANR	283486	UnaryOperationExpression	& rv		283456	1					
ANR	283487	UnaryOperator	&		283456	0					
ANR	283488	Identifier	rv		283456	1					
ANR	283489	ExpressionStatement	d [ 0 ] = s [ 3 ]	1978:1:44163:44174	283456	3	True				
ANR	283490	AssignmentExpression	d [ 0 ] = s [ 3 ]		283456	0		=			
ANR	283491	ArrayIndexing	d [ 0 ]		283456	0					
ANR	283492	Identifier	d		283456	0					
ANR	283493	PrimaryExpression	0		283456	1					
ANR	283494	ArrayIndexing	s [ 3 ]		283456	1					
ANR	283495	Identifier	s		283456	0					
ANR	283496	PrimaryExpression	3		283456	1					
ANR	283497	ExpressionStatement	d [ 1 ] = s [ 2 ]	1979:1:44177:44188	283456	4	True				
ANR	283498	AssignmentExpression	d [ 1 ] = s [ 2 ]		283456	0		=			
ANR	283499	ArrayIndexing	d [ 1 ]		283456	0					
ANR	283500	Identifier	d		283456	0					
ANR	283501	PrimaryExpression	1		283456	1					
ANR	283502	ArrayIndexing	s [ 2 ]		283456	1					
ANR	283503	Identifier	s		283456	0					
ANR	283504	PrimaryExpression	2		283456	1					
ANR	283505	ExpressionStatement	d [ 2 ] = s [ 1 ]	1980:1:44191:44202	283456	5	True				
ANR	283506	AssignmentExpression	d [ 2 ] = s [ 1 ]		283456	0		=			
ANR	283507	ArrayIndexing	d [ 2 ]		283456	0					
ANR	283508	Identifier	d		283456	0					
ANR	283509	PrimaryExpression	2		283456	1					
ANR	283510	ArrayIndexing	s [ 1 ]		283456	1					
ANR	283511	Identifier	s		283456	0					
ANR	283512	PrimaryExpression	1		283456	1					
ANR	283513	ExpressionStatement	d [ 3 ] = s [ 0 ]	1981:1:44205:44216	283456	6	True				
ANR	283514	AssignmentExpression	d [ 3 ] = s [ 0 ]		283456	0		=			
ANR	283515	ArrayIndexing	d [ 3 ]		283456	0					
ANR	283516	Identifier	d		283456	0					
ANR	283517	PrimaryExpression	3		283456	1					
ANR	283518	ArrayIndexing	s [ 0 ]		283456	1					
ANR	283519	Identifier	s		283456	0					
ANR	283520	PrimaryExpression	0		283456	1					
ANR	283521	ReturnStatement	return rv ;	1982:1:44219:44228	283456	7	True				
ANR	283522	Identifier	rv		283456	0					
ANR	283523	ReturnType	static ut32		283456	1					
ANR	283524	Identifier	swap4		283456	2					
ANR	283525	ParameterList	ut32 sv		283456	3					
ANR	283526	Parameter	ut32 sv	1974:18:44081:44087	283456	0	True				
ANR	283527	ParameterType	ut32		283456	0					
ANR	283528	Identifier	sv		283456	1					
ANR	283529	CFGEntryNode	ENTRY		283456		True				
ANR	283530	CFGExitNode	EXIT		283456		True				
ANR	283531	Symbol	sv		283456						
ANR	283532	Symbol	s		283456						
ANR	283533	Symbol	rv		283456						
ANR	283534	Symbol	d		283456						
ANR	283535	Symbol	& sv		283456						
ANR	283536	Symbol	* s		283456						
ANR	283537	Symbol	* d		283456						
ANR	283538	Symbol	& rv		283456						
ANR	283539	Function	swap8	1988:0:44255:44609							
ANR	283540	FunctionDef	swap8 (ut64 sv)		283539	0					
ANR	283541	CompoundStatement		1988:27:44282:44609	283539	0					
ANR	283542	IdentifierDeclStatement	ut64 rv ;	1989:1:44285:44292	283539	0	True				
ANR	283543	IdentifierDecl	rv		283539	0					
ANR	283544	IdentifierDeclType	ut64		283539	0					
ANR	283545	Identifier	rv		283539	1					
ANR	283546	IdentifierDeclStatement	ut8 * s = ( ut8 * ) ( void * ) & sv ;	1990:1:44295:44322	283539	1	True				
ANR	283547	IdentifierDecl	* s = ( ut8 * ) ( void * ) & sv		283539	0					
ANR	283548	IdentifierDeclType	ut8 *		283539	0					
ANR	283549	Identifier	s		283539	1					
ANR	283550	AssignmentExpression	* s = ( ut8 * ) ( void * ) & sv		283539	2		=			
ANR	283551	Identifier	s		283539	0					
ANR	283552	CastExpression	( ut8 * ) ( void * ) & sv		283539	1					
ANR	283553	CastTarget	ut8 *		283539	0					
ANR	283554	CastExpression	( void * ) & sv		283539	1					
ANR	283555	CastTarget	void *		283539	0					
ANR	283556	UnaryOperationExpression	& sv		283539	1					
ANR	283557	UnaryOperator	&		283539	0					
ANR	283558	Identifier	sv		283539	1					
ANR	283559	IdentifierDeclStatement	ut8 * d = ( ut8 * ) ( void * ) & rv ;	1991:1:44325:44352	283539	2	True				
ANR	283560	IdentifierDecl	* d = ( ut8 * ) ( void * ) & rv		283539	0					
ANR	283561	IdentifierDeclType	ut8 *		283539	0					
ANR	283562	Identifier	d		283539	1					
ANR	283563	AssignmentExpression	* d = ( ut8 * ) ( void * ) & rv		283539	2		=			
ANR	283564	Identifier	d		283539	0					
ANR	283565	CastExpression	( ut8 * ) ( void * ) & rv		283539	1					
ANR	283566	CastTarget	ut8 *		283539	0					
ANR	283567	CastExpression	( void * ) & rv		283539	1					
ANR	283568	CastTarget	void *		283539	0					
ANR	283569	UnaryOperationExpression	& rv		283539	1					
ANR	283570	UnaryOperator	&		283539	0					
ANR	283571	Identifier	rv		283539	1					
ANR	283572	ExpressionStatement	d [ 0 ] = s [ 3 ]	1993:1:44361:44372	283539	3	True				
ANR	283573	AssignmentExpression	d [ 0 ] = s [ 3 ]		283539	0		=			
ANR	283574	ArrayIndexing	d [ 0 ]		283539	0					
ANR	283575	Identifier	d		283539	0					
ANR	283576	PrimaryExpression	0		283539	1					
ANR	283577	ArrayIndexing	s [ 3 ]		283539	1					
ANR	283578	Identifier	s		283539	0					
ANR	283579	PrimaryExpression	3		283539	1					
ANR	283580	ExpressionStatement	d [ 1 ] = s [ 2 ]	1994:1:44375:44386	283539	4	True				
ANR	283581	AssignmentExpression	d [ 1 ] = s [ 2 ]		283539	0		=			
ANR	283582	ArrayIndexing	d [ 1 ]		283539	0					
ANR	283583	Identifier	d		283539	0					
ANR	283584	PrimaryExpression	1		283539	1					
ANR	283585	ArrayIndexing	s [ 2 ]		283539	1					
ANR	283586	Identifier	s		283539	0					
ANR	283587	PrimaryExpression	2		283539	1					
ANR	283588	ExpressionStatement	d [ 2 ] = s [ 1 ]	1995:1:44389:44400	283539	5	True				
ANR	283589	AssignmentExpression	d [ 2 ] = s [ 1 ]		283539	0		=			
ANR	283590	ArrayIndexing	d [ 2 ]		283539	0					
ANR	283591	Identifier	d		283539	0					
ANR	283592	PrimaryExpression	2		283539	1					
ANR	283593	ArrayIndexing	s [ 1 ]		283539	1					
ANR	283594	Identifier	s		283539	0					
ANR	283595	PrimaryExpression	1		283539	1					
ANR	283596	ExpressionStatement	d [ 3 ] = s [ 0 ]	1996:1:44403:44414	283539	6	True				
ANR	283597	AssignmentExpression	d [ 3 ] = s [ 0 ]		283539	0		=			
ANR	283598	ArrayIndexing	d [ 3 ]		283539	0					
ANR	283599	Identifier	d		283539	0					
ANR	283600	PrimaryExpression	3		283539	1					
ANR	283601	ArrayIndexing	s [ 0 ]		283539	1					
ANR	283602	Identifier	s		283539	0					
ANR	283603	PrimaryExpression	0		283539	1					
ANR	283604	ExpressionStatement	d [ 4 ] = s [ 7 ]	1997:1:44417:44428	283539	7	True				
ANR	283605	AssignmentExpression	d [ 4 ] = s [ 7 ]		283539	0		=			
ANR	283606	ArrayIndexing	d [ 4 ]		283539	0					
ANR	283607	Identifier	d		283539	0					
ANR	283608	PrimaryExpression	4		283539	1					
ANR	283609	ArrayIndexing	s [ 7 ]		283539	1					
ANR	283610	Identifier	s		283539	0					
ANR	283611	PrimaryExpression	7		283539	1					
ANR	283612	ExpressionStatement	d [ 5 ] = s [ 6 ]	1998:1:44431:44442	283539	8	True				
ANR	283613	AssignmentExpression	d [ 5 ] = s [ 6 ]		283539	0		=			
ANR	283614	ArrayIndexing	d [ 5 ]		283539	0					
ANR	283615	Identifier	d		283539	0					
ANR	283616	PrimaryExpression	5		283539	1					
ANR	283617	ArrayIndexing	s [ 6 ]		283539	1					
ANR	283618	Identifier	s		283539	0					
ANR	283619	PrimaryExpression	6		283539	1					
ANR	283620	ExpressionStatement	d [ 6 ] = s [ 5 ]	1999:1:44445:44456	283539	9	True				
ANR	283621	AssignmentExpression	d [ 6 ] = s [ 5 ]		283539	0		=			
ANR	283622	ArrayIndexing	d [ 6 ]		283539	0					
ANR	283623	Identifier	d		283539	0					
ANR	283624	PrimaryExpression	6		283539	1					
ANR	283625	ArrayIndexing	s [ 5 ]		283539	1					
ANR	283626	Identifier	s		283539	0					
ANR	283627	PrimaryExpression	5		283539	1					
ANR	283628	ExpressionStatement	d [ 7 ] = s [ 4 ]	2000:1:44459:44470	283539	10	True				
ANR	283629	AssignmentExpression	d [ 7 ] = s [ 4 ]		283539	0		=			
ANR	283630	ArrayIndexing	d [ 7 ]		283539	0					
ANR	283631	Identifier	d		283539	0					
ANR	283632	PrimaryExpression	7		283539	1					
ANR	283633	ArrayIndexing	s [ 4 ]		283539	1					
ANR	283634	Identifier	s		283539	0					
ANR	283635	PrimaryExpression	4		283539	1					
ANR	283636	ReturnStatement	return rv ;	2011:1:44598:44607	283539	11	True				
ANR	283637	Identifier	rv		283539	0					
ANR	283638	ReturnType	static ut64		283539	1					
ANR	283639	Identifier	swap8		283539	2					
ANR	283640	ParameterList	ut64 sv		283539	3					
ANR	283641	Parameter	ut64 sv	1988:18:44273:44279	283539	0	True				
ANR	283642	ParameterType	ut64		283539	0					
ANR	283643	Identifier	sv		283539	1					
ANR	283644	CFGEntryNode	ENTRY		283539		True				
ANR	283645	CFGExitNode	EXIT		283539		True				
ANR	283646	Symbol	sv		283539						
ANR	283647	Symbol	s		283539						
ANR	283648	Symbol	rv		283539						
ANR	283649	Symbol	d		283539						
ANR	283650	Symbol	& sv		283539						
ANR	283651	Symbol	* s		283539						
ANR	283652	Symbol	* d		283539						
ANR	283653	Symbol	& rv		283539						
ANR	283654	Function	bs1	2017:0:44652:45038							
ANR	283655	FunctionDef	bs1 (struct r_magic * m)		283654	0					
ANR	283656	CompoundStatement		2017:35:44687:45038	283654	0					
ANR	283657	ExpressionStatement	m -> cont_level = swap2 ( m -> cont_level )	2018:1:44690:44726	283654	0	True				
ANR	283658	AssignmentExpression	m -> cont_level = swap2 ( m -> cont_level )		283654	0		=			
ANR	283659	PtrMemberAccess	m -> cont_level		283654	0					
ANR	283660	Identifier	m		283654	0					
ANR	283661	Identifier	cont_level		283654	1					
ANR	283662	CallExpression	swap2 ( m -> cont_level )		283654	1					
ANR	283663	Callee	swap2		283654	0					
ANR	283664	Identifier	swap2		283654	0					
ANR	283665	ArgumentList	m -> cont_level		283654	1					
ANR	283666	Argument	m -> cont_level		283654	0					
ANR	283667	PtrMemberAccess	m -> cont_level		283654	0					
ANR	283668	Identifier	m		283654	0					
ANR	283669	Identifier	cont_level		283654	1					
ANR	283670	ExpressionStatement	m -> offset = swap4 ( ( ut32 ) m -> offset )	2019:1:44729:44763	283654	1	True				
ANR	283671	AssignmentExpression	m -> offset = swap4 ( ( ut32 ) m -> offset )		283654	0		=			
ANR	283672	PtrMemberAccess	m -> offset		283654	0					
ANR	283673	Identifier	m		283654	0					
ANR	283674	Identifier	offset		283654	1					
ANR	283675	CallExpression	swap4 ( ( ut32 ) m -> offset )		283654	1					
ANR	283676	Callee	swap4		283654	0					
ANR	283677	Identifier	swap4		283654	0					
ANR	283678	ArgumentList	( ut32 ) m -> offset		283654	1					
ANR	283679	Argument	( ut32 ) m -> offset		283654	0					
ANR	283680	CastExpression	( ut32 ) m -> offset		283654	0					
ANR	283681	CastTarget	ut32		283654	0					
ANR	283682	PtrMemberAccess	m -> offset		283654	1					
ANR	283683	Identifier	m		283654	0					
ANR	283684	Identifier	offset		283654	1					
ANR	283685	ExpressionStatement	m -> in_offset = swap4 ( ( ut32 ) m -> in_offset )	2020:1:44766:44806	283654	2	True				
ANR	283686	AssignmentExpression	m -> in_offset = swap4 ( ( ut32 ) m -> in_offset )		283654	0		=			
ANR	283687	PtrMemberAccess	m -> in_offset		283654	0					
ANR	283688	Identifier	m		283654	0					
ANR	283689	Identifier	in_offset		283654	1					
ANR	283690	CallExpression	swap4 ( ( ut32 ) m -> in_offset )		283654	1					
ANR	283691	Callee	swap4		283654	0					
ANR	283692	Identifier	swap4		283654	0					
ANR	283693	ArgumentList	( ut32 ) m -> in_offset		283654	1					
ANR	283694	Argument	( ut32 ) m -> in_offset		283654	0					
ANR	283695	CastExpression	( ut32 ) m -> in_offset		283654	0					
ANR	283696	CastTarget	ut32		283654	0					
ANR	283697	PtrMemberAccess	m -> in_offset		283654	1					
ANR	283698	Identifier	m		283654	0					
ANR	283699	Identifier	in_offset		283654	1					
ANR	283700	ExpressionStatement	m -> lineno = swap4 ( ( ut32 ) m -> lineno )	2021:1:44809:44843	283654	3	True				
ANR	283701	AssignmentExpression	m -> lineno = swap4 ( ( ut32 ) m -> lineno )		283654	0		=			
ANR	283702	PtrMemberAccess	m -> lineno		283654	0					
ANR	283703	Identifier	m		283654	0					
ANR	283704	Identifier	lineno		283654	1					
ANR	283705	CallExpression	swap4 ( ( ut32 ) m -> lineno )		283654	1					
ANR	283706	Callee	swap4		283654	0					
ANR	283707	Identifier	swap4		283654	0					
ANR	283708	ArgumentList	( ut32 ) m -> lineno		283654	1					
ANR	283709	Argument	( ut32 ) m -> lineno		283654	0					
ANR	283710	CastExpression	( ut32 ) m -> lineno		283654	0					
ANR	283711	CastTarget	ut32		283654	0					
ANR	283712	PtrMemberAccess	m -> lineno		283654	1					
ANR	283713	Identifier	m		283654	0					
ANR	283714	Identifier	lineno		283654	1					
ANR	283715	IfStatement	if ( MAGIC_IS_STRING ( m -> type ) )		283654	4					
ANR	283716	Condition	MAGIC_IS_STRING ( m -> type )	2022:5:44850:44874	283654	0	True				
ANR	283717	CallExpression	MAGIC_IS_STRING ( m -> type )		283654	0					
ANR	283718	Callee	MAGIC_IS_STRING		283654	0					
ANR	283719	Identifier	MAGIC_IS_STRING		283654	0					
ANR	283720	ArgumentList	m -> type		283654	1					
ANR	283721	Argument	m -> type		283654	0					
ANR	283722	PtrMemberAccess	m -> type		283654	0					
ANR	283723	Identifier	m		283654	0					
ANR	283724	Identifier	type		283654	1					
ANR	283725	CompoundStatement		6:32:189:189	283654	1					
ANR	283726	ExpressionStatement	m -> str_range = swap4 ( m -> str_range )	2023:2:44881:44915	283654	0	True				
ANR	283727	AssignmentExpression	m -> str_range = swap4 ( m -> str_range )		283654	0		=			
ANR	283728	PtrMemberAccess	m -> str_range		283654	0					
ANR	283729	Identifier	m		283654	0					
ANR	283730	Identifier	str_range		283654	1					
ANR	283731	CallExpression	swap4 ( m -> str_range )		283654	1					
ANR	283732	Callee	swap4		283654	0					
ANR	283733	Identifier	swap4		283654	0					
ANR	283734	ArgumentList	m -> str_range		283654	1					
ANR	283735	Argument	m -> str_range		283654	0					
ANR	283736	PtrMemberAccess	m -> str_range		283654	0					
ANR	283737	Identifier	m		283654	0					
ANR	283738	Identifier	str_range		283654	1					
ANR	283739	ExpressionStatement	m -> str_flags = swap4 ( m -> str_flags )	2024:2:44919:44953	283654	1	True				
ANR	283740	AssignmentExpression	m -> str_flags = swap4 ( m -> str_flags )		283654	0		=			
ANR	283741	PtrMemberAccess	m -> str_flags		283654	0					
ANR	283742	Identifier	m		283654	0					
ANR	283743	Identifier	str_flags		283654	1					
ANR	283744	CallExpression	swap4 ( m -> str_flags )		283654	1					
ANR	283745	Callee	swap4		283654	0					
ANR	283746	Identifier	swap4		283654	0					
ANR	283747	ArgumentList	m -> str_flags		283654	1					
ANR	283748	Argument	m -> str_flags		283654	0					
ANR	283749	PtrMemberAccess	m -> str_flags		283654	0					
ANR	283750	Identifier	m		283654	0					
ANR	283751	Identifier	str_flags		283654	1					
ANR	283752	ElseStatement	else		283654	0					
ANR	283753	CompoundStatement		9:8:275:275	283654	0					
ANR	283754	ExpressionStatement	m -> value . q = swap8 ( m -> value . q )	2026:2:44967:44997	283654	0	True				
ANR	283755	AssignmentExpression	m -> value . q = swap8 ( m -> value . q )		283654	0		=			
ANR	283756	MemberAccess	m -> value . q		283654	0					
ANR	283757	PtrMemberAccess	m -> value		283654	0					
ANR	283758	Identifier	m		283654	0					
ANR	283759	Identifier	value		283654	1					
ANR	283760	Identifier	q		283654	1					
ANR	283761	CallExpression	swap8 ( m -> value . q )		283654	1					
ANR	283762	Callee	swap8		283654	0					
ANR	283763	Identifier	swap8		283654	0					
ANR	283764	ArgumentList	m -> value . q		283654	1					
ANR	283765	Argument	m -> value . q		283654	0					
ANR	283766	MemberAccess	m -> value . q		283654	0					
ANR	283767	PtrMemberAccess	m -> value		283654	0					
ANR	283768	Identifier	m		283654	0					
ANR	283769	Identifier	value		283654	1					
ANR	283770	Identifier	q		283654	1					
ANR	283771	ExpressionStatement	m -> num_mask = swap8 ( m -> num_mask )	2027:2:45001:45033	283654	1	True				
ANR	283772	AssignmentExpression	m -> num_mask = swap8 ( m -> num_mask )		283654	0		=			
ANR	283773	PtrMemberAccess	m -> num_mask		283654	0					
ANR	283774	Identifier	m		283654	0					
ANR	283775	Identifier	num_mask		283654	1					
ANR	283776	CallExpression	swap8 ( m -> num_mask )		283654	1					
ANR	283777	Callee	swap8		283654	0					
ANR	283778	Identifier	swap8		283654	0					
ANR	283779	ArgumentList	m -> num_mask		283654	1					
ANR	283780	Argument	m -> num_mask		283654	0					
ANR	283781	PtrMemberAccess	m -> num_mask		283654	0					
ANR	283782	Identifier	m		283654	0					
ANR	283783	Identifier	num_mask		283654	1					
ANR	283784	ReturnType	static void		283654	1					
ANR	283785	Identifier	bs1		283654	2					
ANR	283786	ParameterList	struct r_magic * m		283654	3					
ANR	283787	Parameter	struct r_magic * m	2017:16:44668:44684	283654	0	True				
ANR	283788	ParameterType	struct r_magic *		283654	0					
ANR	283789	Identifier	m		283654	1					
ANR	283790	CFGEntryNode	ENTRY		283654		True				
ANR	283791	CFGExitNode	EXIT		283654		True				
ANR	283792	Symbol	m -> in_offset		283654						
ANR	283793	Symbol	m -> value		283654						
ANR	283794	Symbol	m -> str_flags		283654						
ANR	283795	Symbol	swap8		283654						
ANR	283796	Symbol	m -> value . q		283654						
ANR	283797	Symbol	m -> str_range		283654						
ANR	283798	Symbol	m		283654						
ANR	283799	Symbol	swap4		283654						
ANR	283800	Symbol	m -> num_mask		283654						
ANR	283801	Symbol	m -> type		283654						
ANR	283802	Symbol	m -> offset		283654						
ANR	283803	Symbol	swap2		283654						
ANR	283804	Symbol	MAGIC_IS_STRING		283654						
ANR	283805	Symbol	* m		283654						
ANR	283806	Symbol	m -> cont_level		283654						
ANR	283807	Symbol	m -> lineno		283654						
