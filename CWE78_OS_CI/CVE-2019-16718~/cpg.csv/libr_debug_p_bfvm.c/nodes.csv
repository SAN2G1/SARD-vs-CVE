command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4685467	File	data/converged/CVE-2019-16718~_radare2/libr_debug_p_bfvm.c								
ANR	4685468	Function	bfvm_op	8:0:146:332							
ANR	4685469	FunctionDef	bfvm_op (BfvmCPU * c)		4685468	0					
ANR	4685470	CompoundStatement		8:31:177:332	4685468	0					
ANR	4685471	IdentifierDeclStatement	ut8 buf [ 4 ] = { 0 } ;	10:1:205:221	4685468	0	True				
ANR	4685472	IdentifierDecl	buf [ 4 ] = { 0 }		4685468	0					
ANR	4685473	IdentifierDeclType	ut8 [ 4 ]		4685468	0					
ANR	4685474	Identifier	buf		4685468	1					
ANR	4685475	PrimaryExpression	4		4685468	2					
ANR	4685476	AssignmentExpression	buf [ 4 ] = { 0 }		4685468	3		=			
ANR	4685477	Identifier	buf		4685468	0					
ANR	4685478	InitializerList	0		4685468	1					
ANR	4685479	PrimaryExpression	0		4685468	0					
ANR	4685480	IfStatement	"if ( c && c -> iob . read_at && ! c -> iob . read_at ( c -> iob . io , c -> eip , buf , 4 ) )"		4685468	1					
ANR	4685481	Condition	"c && c -> iob . read_at && ! c -> iob . read_at ( c -> iob . io , c -> eip , buf , 4 )"	11:5:228:293	4685468	0	True				
ANR	4685482	AndExpression	"c && c -> iob . read_at && ! c -> iob . read_at ( c -> iob . io , c -> eip , buf , 4 )"		4685468	0		&&			
ANR	4685483	Identifier	c		4685468	0					
ANR	4685484	AndExpression	"c -> iob . read_at && ! c -> iob . read_at ( c -> iob . io , c -> eip , buf , 4 )"		4685468	1		&&			
ANR	4685485	MemberAccess	c -> iob . read_at		4685468	0					
ANR	4685486	PtrMemberAccess	c -> iob		4685468	0					
ANR	4685487	Identifier	c		4685468	0					
ANR	4685488	Identifier	iob		4685468	1					
ANR	4685489	Identifier	read_at		4685468	1					
ANR	4685490	UnaryOperationExpression	"! c -> iob . read_at ( c -> iob . io , c -> eip , buf , 4 )"		4685468	1					
ANR	4685491	UnaryOperator	!		4685468	0					
ANR	4685492	CallExpression	"c -> iob . read_at ( c -> iob . io , c -> eip , buf , 4 )"		4685468	1					
ANR	4685493	Callee	c -> iob . read_at		4685468	0					
ANR	4685494	MemberAccess	c -> iob . read_at		4685468	0					
ANR	4685495	PtrMemberAccess	c -> iob		4685468	0					
ANR	4685496	Identifier	c		4685468	0					
ANR	4685497	Identifier	iob		4685468	1					
ANR	4685498	Identifier	read_at		4685468	1					
ANR	4685499	ArgumentList	c -> iob . io		4685468	1					
ANR	4685500	Argument	c -> iob . io		4685468	0					
ANR	4685501	MemberAccess	c -> iob . io		4685468	0					
ANR	4685502	PtrMemberAccess	c -> iob		4685468	0					
ANR	4685503	Identifier	c		4685468	0					
ANR	4685504	Identifier	iob		4685468	1					
ANR	4685505	Identifier	io		4685468	1					
ANR	4685506	Argument	c -> eip		4685468	1					
ANR	4685507	PtrMemberAccess	c -> eip		4685468	0					
ANR	4685508	Identifier	c		4685468	0					
ANR	4685509	Identifier	eip		4685468	1					
ANR	4685510	Argument	buf		4685468	2					
ANR	4685511	Identifier	buf		4685468	0					
ANR	4685512	Argument	4		4685468	3					
ANR	4685513	PrimaryExpression	4		4685468	0					
ANR	4685514	CompoundStatement		4:73:118:118	4685468	1					
ANR	4685515	ReturnStatement	return 0xff ;	12:2:300:311	4685468	0	True				
ANR	4685516	PrimaryExpression	0xff		4685468	0					
ANR	4685517	ReturnStatement	return buf [ 0 ] ;	14:1:317:330	4685468	2	True				
ANR	4685518	ArrayIndexing	buf [ 0 ]		4685468	0					
ANR	4685519	Identifier	buf		4685468	0					
ANR	4685520	PrimaryExpression	0		4685468	1					
ANR	4685521	ReturnType	static ut8		4685468	1					
ANR	4685522	Identifier	bfvm_op		4685468	2					
ANR	4685523	ParameterList	BfvmCPU * c		4685468	3					
ANR	4685524	Parameter	BfvmCPU * c	8:19:165:174	4685468	0	True				
ANR	4685525	ParameterType	BfvmCPU *		4685468	0					
ANR	4685526	Identifier	c		4685468	1					
ANR	4685527	CFGEntryNode	ENTRY		4685468		True				
ANR	4685528	CFGExitNode	EXIT		4685468		True				
ANR	4685529	Symbol	buf		4685468						
ANR	4685530	Symbol	* buf		4685468						
ANR	4685531	Symbol	c		4685468						
ANR	4685532	Symbol	c -> iob . io		4685468						
ANR	4685533	Symbol	c -> iob		4685468						
ANR	4685534	Symbol	c -> eip		4685468						
ANR	4685535	Symbol	c -> iob . read_at		4685468						
ANR	4685536	Symbol	* c		4685468						
ANR	4685537	Function	bfvm_in_trap	17:0:335:458							
ANR	4685538	FunctionDef	bfvm_in_trap (BfvmCPU * c)		4685537	0					
ANR	4685539	CompoundStatement		17:35:370:458	4685537	0					
ANR	4685540	SwitchStatement	switch ( bfvm_op ( c ) )		4685537	0					
ANR	4685541	Condition	bfvm_op ( c )	18:9:381:391	4685537	0	True				
ANR	4685542	CallExpression	bfvm_op ( c )		4685537	0					
ANR	4685543	Callee	bfvm_op		4685537	0					
ANR	4685544	Identifier	bfvm_op		4685537	0					
ANR	4685545	ArgumentList	c		4685537	1					
ANR	4685546	Argument	c		4685537	0					
ANR	4685547	Identifier	c		4685537	0					
ANR	4685548	CompoundStatement		2:22:23:23	4685537	1					
ANR	4685549	Label	case 0x00 :	19:1:397:406	4685537	0	True				
ANR	4685550	Label	case 0xcc :	20:1:409:418	4685537	1	True				
ANR	4685551	Label	case 0xff :	21:1:421:430	4685537	2	True				
ANR	4685552	ReturnStatement	return 1 ;	22:2:434:442	4685537	3	True				
ANR	4685553	PrimaryExpression	1		4685537	0					
ANR	4685554	ReturnStatement	return 0 ;	24:1:448:456	4685537	1	True				
ANR	4685555	PrimaryExpression	0		4685537	0					
ANR	4685556	ReturnType	R_API int		4685537	1					
ANR	4685557	Identifier	bfvm_in_trap		4685537	2					
ANR	4685558	ParameterList	BfvmCPU * c		4685537	3					
ANR	4685559	Parameter	BfvmCPU * c	17:23:358:367	4685537	0	True				
ANR	4685560	ParameterType	BfvmCPU *		4685537	0					
ANR	4685561	Identifier	c		4685537	1					
ANR	4685562	CFGEntryNode	ENTRY		4685537		True				
ANR	4685563	CFGExitNode	EXIT		4685537		True				
ANR	4685564	Symbol	c		4685537						
ANR	4685565	Symbol	bfvm_op		4685537						
ANR	4685566	Function	bfvm_reset	27:0:461:819							
ANR	4685567	FunctionDef	bfvm_reset (BfvmCPU * c)		4685566	0					
ANR	4685568	CompoundStatement		27:34:495:819	4685566	0					
ANR	4685569	ExpressionStatement	"memset ( c -> mem , '\\0' , c -> size )"	28:1:498:528	4685566	0	True				
ANR	4685570	CallExpression	"memset ( c -> mem , '\\0' , c -> size )"		4685566	0					
ANR	4685571	Callee	memset		4685566	0					
ANR	4685572	Identifier	memset		4685566	0					
ANR	4685573	ArgumentList	c -> mem		4685566	1					
ANR	4685574	Argument	c -> mem		4685566	0					
ANR	4685575	PtrMemberAccess	c -> mem		4685566	0					
ANR	4685576	Identifier	c		4685566	0					
ANR	4685577	Identifier	mem		4685566	1					
ANR	4685578	Argument	'\\0'		4685566	1					
ANR	4685579	PrimaryExpression	'\\0'		4685566	0					
ANR	4685580	Argument	c -> size		4685566	2					
ANR	4685581	PtrMemberAccess	c -> size		4685566	0					
ANR	4685582	Identifier	c		4685566	0					
ANR	4685583	Identifier	size		4685566	1					
ANR	4685584	ExpressionStatement	"memset ( c -> input_buf , '\\0' , c -> input_size )"	29:1:531:573	4685566	1	True				
ANR	4685585	CallExpression	"memset ( c -> input_buf , '\\0' , c -> input_size )"		4685566	0					
ANR	4685586	Callee	memset		4685566	0					
ANR	4685587	Identifier	memset		4685566	0					
ANR	4685588	ArgumentList	c -> input_buf		4685566	1					
ANR	4685589	Argument	c -> input_buf		4685566	0					
ANR	4685590	PtrMemberAccess	c -> input_buf		4685566	0					
ANR	4685591	Identifier	c		4685566	0					
ANR	4685592	Identifier	input_buf		4685566	1					
ANR	4685593	Argument	'\\0'		4685566	1					
ANR	4685594	PrimaryExpression	'\\0'		4685566	0					
ANR	4685595	Argument	c -> input_size		4685566	2					
ANR	4685596	PtrMemberAccess	c -> input_size		4685566	0					
ANR	4685597	Identifier	c		4685566	0					
ANR	4685598	Identifier	input_size		4685566	1					
ANR	4685599	ExpressionStatement	"memset ( c -> screen_buf , '\\0' , c -> screen_size )"	30:1:576:620	4685566	2	True				
ANR	4685600	CallExpression	"memset ( c -> screen_buf , '\\0' , c -> screen_size )"		4685566	0					
ANR	4685601	Callee	memset		4685566	0					
ANR	4685602	Identifier	memset		4685566	0					
ANR	4685603	ArgumentList	c -> screen_buf		4685566	1					
ANR	4685604	Argument	c -> screen_buf		4685566	0					
ANR	4685605	PtrMemberAccess	c -> screen_buf		4685566	0					
ANR	4685606	Identifier	c		4685566	0					
ANR	4685607	Identifier	screen_buf		4685566	1					
ANR	4685608	Argument	'\\0'		4685566	1					
ANR	4685609	PrimaryExpression	'\\0'		4685566	0					
ANR	4685610	Argument	c -> screen_size		4685566	2					
ANR	4685611	PtrMemberAccess	c -> screen_size		4685566	0					
ANR	4685612	Identifier	c		4685566	0					
ANR	4685613	Identifier	screen_size		4685566	1					
ANR	4685614	ExpressionStatement	c -> base = BFVM_DATA_ADDR	31:1:623:647	4685566	3	True				
ANR	4685615	AssignmentExpression	c -> base = BFVM_DATA_ADDR		4685566	0		=			
ANR	4685616	PtrMemberAccess	c -> base		4685566	0					
ANR	4685617	Identifier	c		4685566	0					
ANR	4685618	Identifier	base		4685566	1					
ANR	4685619	Identifier	BFVM_DATA_ADDR		4685566	1					
ANR	4685620	ExpressionStatement	c -> input = BFVM_INPUT_ADDR	32:1:650:676	4685566	4	True				
ANR	4685621	AssignmentExpression	c -> input = BFVM_INPUT_ADDR		4685566	0		=			
ANR	4685622	PtrMemberAccess	c -> input		4685566	0					
ANR	4685623	Identifier	c		4685566	0					
ANR	4685624	Identifier	input		4685566	1					
ANR	4685625	Identifier	BFVM_INPUT_ADDR		4685566	1					
ANR	4685626	ExpressionStatement	c -> input_idx = 0	33:1:679:695	4685566	5	True				
ANR	4685627	AssignmentExpression	c -> input_idx = 0		4685566	0		=			
ANR	4685628	PtrMemberAccess	c -> input_idx		4685566	0					
ANR	4685629	Identifier	c		4685566	0					
ANR	4685630	Identifier	input_idx		4685566	1					
ANR	4685631	PrimaryExpression	0		4685566	1					
ANR	4685632	ExpressionStatement	c -> screen = BFVM_SCREEN_ADDR	34:1:698:726	4685566	6	True				
ANR	4685633	AssignmentExpression	c -> screen = BFVM_SCREEN_ADDR		4685566	0		=			
ANR	4685634	PtrMemberAccess	c -> screen		4685566	0					
ANR	4685635	Identifier	c		4685566	0					
ANR	4685636	Identifier	screen		4685566	1					
ANR	4685637	Identifier	BFVM_SCREEN_ADDR		4685566	1					
ANR	4685638	ExpressionStatement	c -> screen_idx = 0	35:1:729:746	4685566	7	True				
ANR	4685639	AssignmentExpression	c -> screen_idx = 0		4685566	0		=			
ANR	4685640	PtrMemberAccess	c -> screen_idx		4685566	0					
ANR	4685641	Identifier	c		4685566	0					
ANR	4685642	Identifier	screen_idx		4685566	1					
ANR	4685643	PrimaryExpression	0		4685566	1					
ANR	4685644	ExpressionStatement	c -> eip = 0	36:1:749:759	4685566	8	True				
ANR	4685645	AssignmentExpression	c -> eip = 0		4685566	0		=			
ANR	4685646	PtrMemberAccess	c -> eip		4685566	0					
ANR	4685647	Identifier	c		4685566	0					
ANR	4685648	Identifier	eip		4685566	1					
ANR	4685649	PrimaryExpression	0		4685566	1					
ANR	4685650	ExpressionStatement	c -> ptr = 0	37:1:788:798	4685566	9	True				
ANR	4685651	AssignmentExpression	c -> ptr = 0		4685566	0		=			
ANR	4685652	PtrMemberAccess	c -> ptr		4685566	0					
ANR	4685653	Identifier	c		4685566	0					
ANR	4685654	Identifier	ptr		4685566	1					
ANR	4685655	PrimaryExpression	0		4685566	1					
ANR	4685656	ExpressionStatement	c -> esp = c -> base	38:1:801:817	4685566	10	True				
ANR	4685657	AssignmentExpression	c -> esp = c -> base		4685566	0		=			
ANR	4685658	PtrMemberAccess	c -> esp		4685566	0					
ANR	4685659	Identifier	c		4685566	0					
ANR	4685660	Identifier	esp		4685566	1					
ANR	4685661	PtrMemberAccess	c -> base		4685566	1					
ANR	4685662	Identifier	c		4685566	0					
ANR	4685663	Identifier	base		4685566	1					
ANR	4685664	ReturnType	R_API void		4685566	1					
ANR	4685665	Identifier	bfvm_reset		4685566	2					
ANR	4685666	ParameterList	BfvmCPU * c		4685566	3					
ANR	4685667	Parameter	BfvmCPU * c	27:22:483:492	4685566	0	True				
ANR	4685668	ParameterType	BfvmCPU *		4685566	0					
ANR	4685669	Identifier	c		4685566	1					
ANR	4685670	CFGEntryNode	ENTRY		4685566		True				
ANR	4685671	CFGExitNode	EXIT		4685566		True				
ANR	4685672	Symbol	c -> screen_idx		4685566						
ANR	4685673	Symbol	BFVM_DATA_ADDR		4685566						
ANR	4685674	Symbol	c -> input_idx		4685566						
ANR	4685675	Symbol	c -> screen		4685566						
ANR	4685676	Symbol	c		4685566						
ANR	4685677	Symbol	c -> ptr		4685566						
ANR	4685678	Symbol	c -> eip		4685566						
ANR	4685679	Symbol	c -> size		4685566						
ANR	4685680	Symbol	* c		4685566						
ANR	4685681	Symbol	BFVM_SCREEN_ADDR		4685566						
ANR	4685682	Symbol	c -> screen_buf		4685566						
ANR	4685683	Symbol	c -> esp		4685566						
ANR	4685684	Symbol	c -> base		4685566						
ANR	4685685	Symbol	c -> screen_size		4685566						
ANR	4685686	Symbol	c -> input_size		4685566						
ANR	4685687	Symbol	c -> input_buf		4685566						
ANR	4685688	Symbol	BFVM_INPUT_ADDR		4685566						
ANR	4685689	Symbol	c -> input		4685566						
ANR	4685690	Symbol	c -> mem		4685566						
ANR	4685691	Function	bfvm_init	41:0:822:1431							
ANR	4685692	FunctionDef	"bfvm_init (BfvmCPU * c , ut32 size , int circular)"		4685691	0					
ANR	4685693	CompoundStatement		41:57:879:1431	4685691	0					
ANR	4685694	ExpressionStatement	"memset ( c , '\\0' , sizeof ( BfvmCPU ) )"	42:1:882:916	4685691	0	True				
ANR	4685695	CallExpression	"memset ( c , '\\0' , sizeof ( BfvmCPU ) )"		4685691	0					
ANR	4685696	Callee	memset		4685691	0					
ANR	4685697	Identifier	memset		4685691	0					
ANR	4685698	ArgumentList	c		4685691	1					
ANR	4685699	Argument	c		4685691	0					
ANR	4685700	Identifier	c		4685691	0					
ANR	4685701	Argument	'\\0'		4685691	1					
ANR	4685702	PrimaryExpression	'\\0'		4685691	0					
ANR	4685703	Argument	sizeof ( BfvmCPU )		4685691	2					
ANR	4685704	SizeofExpression	sizeof ( BfvmCPU )		4685691	0					
ANR	4685705	Sizeof	sizeof		4685691	0					
ANR	4685706	SizeofOperand	BfvmCPU		4685691	1					
ANR	4685707	ExpressionStatement	c -> mem = ( ut8 * ) malloc ( size )	45:1:932:961	4685691	1	True				
ANR	4685708	AssignmentExpression	c -> mem = ( ut8 * ) malloc ( size )		4685691	0		=			
ANR	4685709	PtrMemberAccess	c -> mem		4685691	0					
ANR	4685710	Identifier	c		4685691	0					
ANR	4685711	Identifier	mem		4685691	1					
ANR	4685712	CastExpression	( ut8 * ) malloc ( size )		4685691	1					
ANR	4685713	CastTarget	ut8 *		4685691	0					
ANR	4685714	CallExpression	malloc ( size )		4685691	1					
ANR	4685715	Callee	malloc		4685691	0					
ANR	4685716	Identifier	malloc		4685691	0					
ANR	4685717	ArgumentList	size		4685691	1					
ANR	4685718	Argument	size		4685691	0					
ANR	4685719	Identifier	size		4685691	0					
ANR	4685720	IfStatement	if ( ! c -> mem )		4685691	2					
ANR	4685721	Condition	! c -> mem	46:5:968:974	4685691	0	True				
ANR	4685722	UnaryOperationExpression	! c -> mem		4685691	0					
ANR	4685723	UnaryOperator	!		4685691	0					
ANR	4685724	PtrMemberAccess	c -> mem		4685691	1					
ANR	4685725	Identifier	c		4685691	0					
ANR	4685726	Identifier	mem		4685691	1					
ANR	4685727	CompoundStatement		6:14:97:97	4685691	1					
ANR	4685728	ReturnStatement	return 0 ;	47:2:981:989	4685691	0	True				
ANR	4685729	PrimaryExpression	0		4685691	0					
ANR	4685730	ExpressionStatement	"memset ( c -> mem , '\\0' , size )"	49:1:995:1022	4685691	3	True				
ANR	4685731	CallExpression	"memset ( c -> mem , '\\0' , size )"		4685691	0					
ANR	4685732	Callee	memset		4685691	0					
ANR	4685733	Identifier	memset		4685691	0					
ANR	4685734	ArgumentList	c -> mem		4685691	1					
ANR	4685735	Argument	c -> mem		4685691	0					
ANR	4685736	PtrMemberAccess	c -> mem		4685691	0					
ANR	4685737	Identifier	c		4685691	0					
ANR	4685738	Identifier	mem		4685691	1					
ANR	4685739	Argument	'\\0'		4685691	1					
ANR	4685740	PrimaryExpression	'\\0'		4685691	0					
ANR	4685741	Argument	size		4685691	2					
ANR	4685742	Identifier	size		4685691	0					
ANR	4685743	ExpressionStatement	c -> circular = circular	52:1:1039:1061	4685691	4	True				
ANR	4685744	AssignmentExpression	c -> circular = circular		4685691	0		=			
ANR	4685745	PtrMemberAccess	c -> circular		4685691	0					
ANR	4685746	Identifier	c		4685691	0					
ANR	4685747	Identifier	circular		4685691	1					
ANR	4685748	Identifier	circular		4685691	1					
ANR	4685749	ExpressionStatement	c -> size = size	53:1:1064:1078	4685691	5	True				
ANR	4685750	AssignmentExpression	c -> size = size		4685691	0		=			
ANR	4685751	PtrMemberAccess	c -> size		4685691	0					
ANR	4685752	Identifier	c		4685691	0					
ANR	4685753	Identifier	size		4685691	1					
ANR	4685754	Identifier	size		4685691	1					
ANR	4685755	ExpressionStatement	c -> screen = BFVM_SCREEN_ADDR	57:1:1148:1176	4685691	6	True				
ANR	4685756	AssignmentExpression	c -> screen = BFVM_SCREEN_ADDR		4685691	0		=			
ANR	4685757	PtrMemberAccess	c -> screen		4685691	0					
ANR	4685758	Identifier	c		4685691	0					
ANR	4685759	Identifier	screen		4685691	1					
ANR	4685760	Identifier	BFVM_SCREEN_ADDR		4685691	1					
ANR	4685761	ExpressionStatement	c -> screen_size = BFVM_SCREEN_SIZE	58:1:1179:1212	4685691	7	True				
ANR	4685762	AssignmentExpression	c -> screen_size = BFVM_SCREEN_SIZE		4685691	0		=			
ANR	4685763	PtrMemberAccess	c -> screen_size		4685691	0					
ANR	4685764	Identifier	c		4685691	0					
ANR	4685765	Identifier	screen_size		4685691	1					
ANR	4685766	Identifier	BFVM_SCREEN_SIZE		4685691	1					
ANR	4685767	ExpressionStatement	c -> screen_buf = ( ut8 * ) malloc ( c -> screen_size )	59:1:1215:1260	4685691	8	True				
ANR	4685768	AssignmentExpression	c -> screen_buf = ( ut8 * ) malloc ( c -> screen_size )		4685691	0		=			
ANR	4685769	PtrMemberAccess	c -> screen_buf		4685691	0					
ANR	4685770	Identifier	c		4685691	0					
ANR	4685771	Identifier	screen_buf		4685691	1					
ANR	4685772	CastExpression	( ut8 * ) malloc ( c -> screen_size )		4685691	1					
ANR	4685773	CastTarget	ut8 *		4685691	0					
ANR	4685774	CallExpression	malloc ( c -> screen_size )		4685691	1					
ANR	4685775	Callee	malloc		4685691	0					
ANR	4685776	Identifier	malloc		4685691	0					
ANR	4685777	ArgumentList	c -> screen_size		4685691	1					
ANR	4685778	Argument	c -> screen_size		4685691	0					
ANR	4685779	PtrMemberAccess	c -> screen_size		4685691	0					
ANR	4685780	Identifier	c		4685691	0					
ANR	4685781	Identifier	screen_size		4685691	1					
ANR	4685782	ExpressionStatement	"memset ( c -> screen_buf , '\\0' , c -> screen_size )"	60:1:1263:1307	4685691	9	True				
ANR	4685783	CallExpression	"memset ( c -> screen_buf , '\\0' , c -> screen_size )"		4685691	0					
ANR	4685784	Callee	memset		4685691	0					
ANR	4685785	Identifier	memset		4685691	0					
ANR	4685786	ArgumentList	c -> screen_buf		4685691	1					
ANR	4685787	Argument	c -> screen_buf		4685691	0					
ANR	4685788	PtrMemberAccess	c -> screen_buf		4685691	0					
ANR	4685789	Identifier	c		4685691	0					
ANR	4685790	Identifier	screen_buf		4685691	1					
ANR	4685791	Argument	'\\0'		4685691	1					
ANR	4685792	PrimaryExpression	'\\0'		4685691	0					
ANR	4685793	Argument	c -> screen_size		4685691	2					
ANR	4685794	PtrMemberAccess	c -> screen_size		4685691	0					
ANR	4685795	Identifier	c		4685691	0					
ANR	4685796	Identifier	screen_size		4685691	1					
ANR	4685797	ExpressionStatement	c -> input_size = BFVM_INPUT_SIZE	63:1:1324:1355	4685691	10	True				
ANR	4685798	AssignmentExpression	c -> input_size = BFVM_INPUT_SIZE		4685691	0		=			
ANR	4685799	PtrMemberAccess	c -> input_size		4685691	0					
ANR	4685800	Identifier	c		4685691	0					
ANR	4685801	Identifier	input_size		4685691	1					
ANR	4685802	Identifier	BFVM_INPUT_SIZE		4685691	1					
ANR	4685803	ExpressionStatement	c -> input_buf = ( ut8 * ) malloc ( c -> input_size )	64:1:1358:1401	4685691	11	True				
ANR	4685804	AssignmentExpression	c -> input_buf = ( ut8 * ) malloc ( c -> input_size )		4685691	0		=			
ANR	4685805	PtrMemberAccess	c -> input_buf		4685691	0					
ANR	4685806	Identifier	c		4685691	0					
ANR	4685807	Identifier	input_buf		4685691	1					
ANR	4685808	CastExpression	( ut8 * ) malloc ( c -> input_size )		4685691	1					
ANR	4685809	CastTarget	ut8 *		4685691	0					
ANR	4685810	CallExpression	malloc ( c -> input_size )		4685691	1					
ANR	4685811	Callee	malloc		4685691	0					
ANR	4685812	Identifier	malloc		4685691	0					
ANR	4685813	ArgumentList	c -> input_size		4685691	1					
ANR	4685814	Argument	c -> input_size		4685691	0					
ANR	4685815	PtrMemberAccess	c -> input_size		4685691	0					
ANR	4685816	Identifier	c		4685691	0					
ANR	4685817	Identifier	input_size		4685691	1					
ANR	4685818	ExpressionStatement	bfvm_reset ( c )	65:1:1404:1418	4685691	12	True				
ANR	4685819	CallExpression	bfvm_reset ( c )		4685691	0					
ANR	4685820	Callee	bfvm_reset		4685691	0					
ANR	4685821	Identifier	bfvm_reset		4685691	0					
ANR	4685822	ArgumentList	c		4685691	1					
ANR	4685823	Argument	c		4685691	0					
ANR	4685824	Identifier	c		4685691	0					
ANR	4685825	ReturnStatement	return 1 ;	66:1:1421:1429	4685691	13	True				
ANR	4685826	PrimaryExpression	1		4685691	0					
ANR	4685827	ReturnType	R_API int		4685691	1					
ANR	4685828	Identifier	bfvm_init		4685691	2					
ANR	4685829	ParameterList	"BfvmCPU * c , ut32 size , int circular"		4685691	3					
ANR	4685830	Parameter	BfvmCPU * c	41:20:842:851	4685691	0	True				
ANR	4685831	ParameterType	BfvmCPU *		4685691	0					
ANR	4685832	Identifier	c		4685691	1					
ANR	4685833	Parameter	ut32 size	41:32:854:862	4685691	1	True				
ANR	4685834	ParameterType	ut32		4685691	0					
ANR	4685835	Identifier	size		4685691	1					
ANR	4685836	Parameter	int circular	41:43:865:876	4685691	2	True				
ANR	4685837	ParameterType	int		4685691	0					
ANR	4685838	Identifier	circular		4685691	1					
ANR	4685839	CFGEntryNode	ENTRY		4685691		True				
ANR	4685840	CFGExitNode	EXIT		4685691		True				
ANR	4685841	Symbol	malloc		4685691						
ANR	4685842	Symbol	BFVM_INPUT_SIZE		4685691						
ANR	4685843	Symbol	c -> screen		4685691						
ANR	4685844	Symbol	c		4685691						
ANR	4685845	Symbol	BFVM_SCREEN_SIZE		4685691						
ANR	4685846	Symbol	c -> size		4685691						
ANR	4685847	Symbol	circular		4685691						
ANR	4685848	Symbol	* c		4685691						
ANR	4685849	Symbol	BFVM_SCREEN_ADDR		4685691						
ANR	4685850	Symbol	c -> circular		4685691						
ANR	4685851	Symbol	c -> screen_buf		4685691						
ANR	4685852	Symbol	c -> screen_size		4685691						
ANR	4685853	Symbol	size		4685691						
ANR	4685854	Symbol	c -> input_size		4685691						
ANR	4685855	Symbol	c -> input_buf		4685691						
ANR	4685856	Symbol	c -> mem		4685691						
ANR	4685857	Function	bfvm_new	69:0:1434:1583							
ANR	4685858	FunctionDef	bfvm_new (RIOBind * iob)		4685857	0					
ANR	4685859	CompoundStatement		69:38:1472:1583	4685857	0					
ANR	4685860	IdentifierDeclStatement	BfvmCPU * c = R_NEW0 ( BfvmCPU ) ;	70:1:1475:1504	4685857	0	True				
ANR	4685861	IdentifierDecl	* c = R_NEW0 ( BfvmCPU )		4685857	0					
ANR	4685862	IdentifierDeclType	BfvmCPU *		4685857	0					
ANR	4685863	Identifier	c		4685857	1					
ANR	4685864	AssignmentExpression	* c = R_NEW0 ( BfvmCPU )		4685857	2		=			
ANR	4685865	Identifier	c		4685857	0					
ANR	4685866	CallExpression	R_NEW0 ( BfvmCPU )		4685857	1					
ANR	4685867	Callee	R_NEW0		4685857	0					
ANR	4685868	Identifier	R_NEW0		4685857	0					
ANR	4685869	ArgumentList	BfvmCPU		4685857	1					
ANR	4685870	Argument	BfvmCPU		4685857	0					
ANR	4685871	Identifier	BfvmCPU		4685857	0					
ANR	4685872	ExpressionStatement	"bfvm_init ( c , 4096 , 1 )"	71:1:1507:1529	4685857	1	True				
ANR	4685873	CallExpression	"bfvm_init ( c , 4096 , 1 )"		4685857	0					
ANR	4685874	Callee	bfvm_init		4685857	0					
ANR	4685875	Identifier	bfvm_init		4685857	0					
ANR	4685876	ArgumentList	c		4685857	1					
ANR	4685877	Argument	c		4685857	0					
ANR	4685878	Identifier	c		4685857	0					
ANR	4685879	Argument	4096		4685857	1					
ANR	4685880	PrimaryExpression	4096		4685857	0					
ANR	4685881	Argument	1		4685857	2					
ANR	4685882	PrimaryExpression	1		4685857	0					
ANR	4685883	ExpressionStatement	"memcpy ( & c -> iob , iob , sizeof ( c -> iob ) )"	72:1:1532:1570	4685857	2	True				
ANR	4685884	CallExpression	"memcpy ( & c -> iob , iob , sizeof ( c -> iob ) )"		4685857	0					
ANR	4685885	Callee	memcpy		4685857	0					
ANR	4685886	Identifier	memcpy		4685857	0					
ANR	4685887	ArgumentList	& c -> iob		4685857	1					
ANR	4685888	Argument	& c -> iob		4685857	0					
ANR	4685889	UnaryOperationExpression	& c -> iob		4685857	0					
ANR	4685890	UnaryOperator	&		4685857	0					
ANR	4685891	PtrMemberAccess	c -> iob		4685857	1					
ANR	4685892	Identifier	c		4685857	0					
ANR	4685893	Identifier	iob		4685857	1					
ANR	4685894	Argument	iob		4685857	1					
ANR	4685895	Identifier	iob		4685857	0					
ANR	4685896	Argument	sizeof ( c -> iob )		4685857	2					
ANR	4685897	SizeofExpression	sizeof ( c -> iob )		4685857	0					
ANR	4685898	Sizeof	sizeof		4685857	0					
ANR	4685899	PtrMemberAccess	c -> iob		4685857	1					
ANR	4685900	Identifier	c		4685857	0					
ANR	4685901	Identifier	iob		4685857	1					
ANR	4685902	ReturnStatement	return c ;	73:1:1573:1581	4685857	3	True				
ANR	4685903	Identifier	c		4685857	0					
ANR	4685904	ReturnType	R_API BfvmCPU *		4685857	1					
ANR	4685905	Identifier	bfvm_new		4685857	2					
ANR	4685906	ParameterList	RIOBind * iob		4685857	3					
ANR	4685907	Parameter	RIOBind * iob	69:24:1458:1469	4685857	0	True				
ANR	4685908	ParameterType	RIOBind *		4685857	0					
ANR	4685909	Identifier	iob		4685857	1					
ANR	4685910	CFGEntryNode	ENTRY		4685857		True				
ANR	4685911	CFGExitNode	EXIT		4685857		True				
ANR	4685912	Symbol	& c -> iob		4685857						
ANR	4685913	Symbol	R_NEW0		4685857						
ANR	4685914	Symbol	c		4685857						
ANR	4685915	Symbol	c -> iob		4685857						
ANR	4685916	Symbol	BfvmCPU		4685857						
ANR	4685917	Symbol	iob		4685857						
ANR	4685918	Symbol	* c		4685857						
ANR	4685919	Function	bfvm_free	76:0:1586:1722							
ANR	4685920	FunctionDef	bfvm_free (BfvmCPU * c)		4685919	0					
ANR	4685921	CompoundStatement		76:37:1623:1722	4685919	0					
ANR	4685922	ExpressionStatement	free ( c -> mem )	77:1:1626:1639	4685919	0	True				
ANR	4685923	CallExpression	free ( c -> mem )		4685919	0					
ANR	4685924	Callee	free		4685919	0					
ANR	4685925	Identifier	free		4685919	0					
ANR	4685926	ArgumentList	c -> mem		4685919	1					
ANR	4685927	Argument	c -> mem		4685919	0					
ANR	4685928	PtrMemberAccess	c -> mem		4685919	0					
ANR	4685929	Identifier	c		4685919	0					
ANR	4685930	Identifier	mem		4685919	1					
ANR	4685931	ExpressionStatement	c -> mem = 0	78:1:1642:1652	4685919	1	True				
ANR	4685932	AssignmentExpression	c -> mem = 0		4685919	0		=			
ANR	4685933	PtrMemberAccess	c -> mem		4685919	0					
ANR	4685934	Identifier	c		4685919	0					
ANR	4685935	Identifier	mem		4685919	1					
ANR	4685936	PrimaryExpression	0		4685919	1					
ANR	4685937	ExpressionStatement	free ( c -> screen_buf )	79:1:1655:1675	4685919	2	True				
ANR	4685938	CallExpression	free ( c -> screen_buf )		4685919	0					
ANR	4685939	Callee	free		4685919	0					
ANR	4685940	Identifier	free		4685919	0					
ANR	4685941	ArgumentList	c -> screen_buf		4685919	1					
ANR	4685942	Argument	c -> screen_buf		4685919	0					
ANR	4685943	PtrMemberAccess	c -> screen_buf		4685919	0					
ANR	4685944	Identifier	c		4685919	0					
ANR	4685945	Identifier	screen_buf		4685919	1					
ANR	4685946	ExpressionStatement	c -> screen_buf = 0	80:1:1678:1695	4685919	3	True				
ANR	4685947	AssignmentExpression	c -> screen_buf = 0		4685919	0		=			
ANR	4685948	PtrMemberAccess	c -> screen_buf		4685919	0					
ANR	4685949	Identifier	c		4685919	0					
ANR	4685950	Identifier	screen_buf		4685919	1					
ANR	4685951	PrimaryExpression	0		4685919	1					
ANR	4685952	ExpressionStatement	free ( c )	81:1:1698:1706	4685919	4	True				
ANR	4685953	CallExpression	free ( c )		4685919	0					
ANR	4685954	Callee	free		4685919	0					
ANR	4685955	Identifier	free		4685919	0					
ANR	4685956	ArgumentList	c		4685919	1					
ANR	4685957	Argument	c		4685919	0					
ANR	4685958	Identifier	c		4685919	0					
ANR	4685959	ReturnStatement	return NULL ;	82:1:1709:1720	4685919	5	True				
ANR	4685960	Identifier	NULL		4685919	0					
ANR	4685961	ReturnType	R_API BfvmCPU *		4685919	1					
ANR	4685962	Identifier	bfvm_free		4685919	2					
ANR	4685963	ParameterList	BfvmCPU * c		4685919	3					
ANR	4685964	Parameter	BfvmCPU * c	76:25:1611:1620	4685919	0	True				
ANR	4685965	ParameterType	BfvmCPU *		4685919	0					
ANR	4685966	Identifier	c		4685919	1					
ANR	4685967	CFGEntryNode	ENTRY		4685919		True				
ANR	4685968	CFGExitNode	EXIT		4685919		True				
ANR	4685969	Symbol	c		4685919						
ANR	4685970	Symbol	NULL		4685919						
ANR	4685971	Symbol	c -> mem		4685919						
ANR	4685972	Symbol	* c		4685919						
ANR	4685973	Symbol	c -> screen_buf		4685919						
ANR	4685974	Function	bfvm_get_ptr_at	85:0:1725:1901							
ANR	4685975	FunctionDef	"bfvm_get_ptr_at (BfvmCPU * c , ut64 at)"		4685974	0					
ANR	4685976	CompoundStatement		85:48:1773:1901	4685974	0					
ANR	4685977	IfStatement	if ( at >= c -> base )		4685974	0					
ANR	4685978	Condition	at >= c -> base	86:5:1780:1792	4685974	0	True				
ANR	4685979	RelationalExpression	at >= c -> base		4685974	0		>=			
ANR	4685980	Identifier	at		4685974	0					
ANR	4685981	PtrMemberAccess	c -> base		4685974	1					
ANR	4685982	Identifier	c		4685974	0					
ANR	4685983	Identifier	base		4685974	1					
ANR	4685984	CompoundStatement		2:20:21:21	4685974	1					
ANR	4685985	ExpressionStatement	at -= c -> base	87:2:1799:1812	4685974	0	True				
ANR	4685986	AssignmentExpression	at -= c -> base		4685974	0		-=			
ANR	4685987	Identifier	at		4685974	0					
ANR	4685988	PtrMemberAccess	c -> base		4685974	1					
ANR	4685989	Identifier	c		4685974	0					
ANR	4685990	Identifier	base		4685974	1					
ANR	4685991	ElseStatement	else		4685974	0					
ANR	4685992	IfStatement	if ( at >= c -> size )		4685974	0					
ANR	4685993	Condition	at >= c -> size	88:12:1826:1838	4685974	0	True				
ANR	4685994	RelationalExpression	at >= c -> size		4685974	0		>=			
ANR	4685995	Identifier	at		4685974	0					
ANR	4685996	PtrMemberAccess	c -> size		4685974	1					
ANR	4685997	Identifier	c		4685974	0					
ANR	4685998	Identifier	size		4685974	1					
ANR	4685999	CompoundStatement		4:27:67:67	4685974	1					
ANR	4686000	ExpressionStatement	at = c -> circular ? 0 : c -> size - 1	89:2:1845:1875	4685974	0	True				
ANR	4686001	AssignmentExpression	at = c -> circular ? 0 : c -> size - 1		4685974	0		=			
ANR	4686002	Identifier	at		4685974	0					
ANR	4686003	ConditionalExpression	c -> circular ? 0 : c -> size - 1		4685974	1					
ANR	4686004	Condition	c -> circular		4685974	0					
ANR	4686005	PtrMemberAccess	c -> circular		4685974	0					
ANR	4686006	Identifier	c		4685974	0					
ANR	4686007	Identifier	circular		4685974	1					
ANR	4686008	PrimaryExpression	0		4685974	1					
ANR	4686009	AdditiveExpression	c -> size - 1		4685974	2		-			
ANR	4686010	PtrMemberAccess	c -> size		4685974	0					
ANR	4686011	Identifier	c		4685974	0					
ANR	4686012	Identifier	size		4685974	1					
ANR	4686013	PrimaryExpression	1		4685974	1					
ANR	4686014	ReturnStatement	return c -> mem + at ;	91:1:1881:1899	4685974	1	True				
ANR	4686015	AdditiveExpression	c -> mem + at		4685974	0		+			
ANR	4686016	PtrMemberAccess	c -> mem		4685974	0					
ANR	4686017	Identifier	c		4685974	0					
ANR	4686018	Identifier	mem		4685974	1					
ANR	4686019	Identifier	at		4685974	1					
ANR	4686020	ReturnType	R_API ut8 *		4685974	1					
ANR	4686021	Identifier	bfvm_get_ptr_at		4685974	2					
ANR	4686022	ParameterList	"BfvmCPU * c , ut64 at"		4685974	3					
ANR	4686023	Parameter	BfvmCPU * c	85:27:1752:1761	4685974	0	True				
ANR	4686024	ParameterType	BfvmCPU *		4685974	0					
ANR	4686025	Identifier	c		4685974	1					
ANR	4686026	Parameter	ut64 at	85:39:1764:1770	4685974	1	True				
ANR	4686027	ParameterType	ut64		4685974	0					
ANR	4686028	Identifier	at		4685974	1					
ANR	4686029	CFGEntryNode	ENTRY		4685974		True				
ANR	4686030	CFGExitNode	EXIT		4685974		True				
ANR	4686031	Symbol	c -> base		4685974						
ANR	4686032	Symbol	c		4685974						
ANR	4686033	Symbol	at		4685974						
ANR	4686034	Symbol	c -> size		4685974						
ANR	4686035	Symbol	c -> mem		4685974						
ANR	4686036	Symbol	* c		4685974						
ANR	4686037	Symbol	c -> circular		4685974						
ANR	4686038	Function	bfvm_get_ptr	94:0:1904:2003							
ANR	4686039	FunctionDef	bfvm_get_ptr (BfvmCPU * c)		4686038	0					
ANR	4686040	CompoundStatement		94:36:1940:2003	4686038	0					
ANR	4686041	ReturnStatement	"return bfvm_get_ptr_at ( c , c -> ptr ) ;"	96:1:1967:2001	4686038	0	True				
ANR	4686042	CallExpression	"bfvm_get_ptr_at ( c , c -> ptr )"		4686038	0					
ANR	4686043	Callee	bfvm_get_ptr_at		4686038	0					
ANR	4686044	Identifier	bfvm_get_ptr_at		4686038	0					
ANR	4686045	ArgumentList	c		4686038	1					
ANR	4686046	Argument	c		4686038	0					
ANR	4686047	Identifier	c		4686038	0					
ANR	4686048	Argument	c -> ptr		4686038	1					
ANR	4686049	PtrMemberAccess	c -> ptr		4686038	0					
ANR	4686050	Identifier	c		4686038	0					
ANR	4686051	Identifier	ptr		4686038	1					
ANR	4686052	ReturnType	R_API ut8 *		4686038	1					
ANR	4686053	Identifier	bfvm_get_ptr		4686038	2					
ANR	4686054	ParameterList	BfvmCPU * c		4686038	3					
ANR	4686055	Parameter	BfvmCPU * c	94:24:1928:1937	4686038	0	True				
ANR	4686056	ParameterType	BfvmCPU *		4686038	0					
ANR	4686057	Identifier	c		4686038	1					
ANR	4686058	CFGEntryNode	ENTRY		4686038		True				
ANR	4686059	CFGExitNode	EXIT		4686038		True				
ANR	4686060	Symbol	c		4686038						
ANR	4686061	Symbol	c -> ptr		4686038						
ANR	4686062	Symbol	* c		4686038						
ANR	4686063	Symbol	bfvm_get_ptr_at		4686038						
ANR	4686064	Function	bfvm_get	99:0:2006:2091							
ANR	4686065	FunctionDef	bfvm_get (BfvmCPU * c)		4686064	0					
ANR	4686066	CompoundStatement		99:31:2037:2091	4686064	0					
ANR	4686067	IdentifierDeclStatement	ut8 * ptr = bfvm_get_ptr ( c ) ;	100:1:2040:2067	4686064	0	True				
ANR	4686068	IdentifierDecl	* ptr = bfvm_get_ptr ( c )		4686064	0					
ANR	4686069	IdentifierDeclType	ut8 *		4686064	0					
ANR	4686070	Identifier	ptr		4686064	1					
ANR	4686071	AssignmentExpression	* ptr = bfvm_get_ptr ( c )		4686064	2		=			
ANR	4686072	Identifier	ptr		4686064	0					
ANR	4686073	CallExpression	bfvm_get_ptr ( c )		4686064	1					
ANR	4686074	Callee	bfvm_get_ptr		4686064	0					
ANR	4686075	Identifier	bfvm_get_ptr		4686064	0					
ANR	4686076	ArgumentList	c		4686064	1					
ANR	4686077	Argument	c		4686064	0					
ANR	4686078	Identifier	c		4686064	0					
ANR	4686079	ReturnStatement	return ptr ? * ptr : 0 ;	101:1:2070:2089	4686064	1	True				
ANR	4686080	ConditionalExpression	ptr ? * ptr : 0		4686064	0					
ANR	4686081	Condition	ptr		4686064	0					
ANR	4686082	Identifier	ptr		4686064	0					
ANR	4686083	UnaryOperationExpression	* ptr		4686064	1					
ANR	4686084	UnaryOperator	*		4686064	0					
ANR	4686085	Identifier	ptr		4686064	1					
ANR	4686086	PrimaryExpression	0		4686064	2					
ANR	4686087	ReturnType	R_API ut8		4686064	1					
ANR	4686088	Identifier	bfvm_get		4686064	2					
ANR	4686089	ParameterList	BfvmCPU * c		4686064	3					
ANR	4686090	Parameter	BfvmCPU * c	99:19:2025:2034	4686064	0	True				
ANR	4686091	ParameterType	BfvmCPU *		4686064	0					
ANR	4686092	Identifier	c		4686064	1					
ANR	4686093	CFGEntryNode	ENTRY		4686064		True				
ANR	4686094	CFGExitNode	EXIT		4686064		True				
ANR	4686095	Symbol	c		4686064						
ANR	4686096	Symbol	* ptr		4686064						
ANR	4686097	Symbol	bfvm_get_ptr		4686064						
ANR	4686098	Symbol	ptr		4686064						
ANR	4686099	Function	bfvm_inc	104:0:2094:2193							
ANR	4686100	FunctionDef	bfvm_inc (BfvmCPU * c)		4686099	0					
ANR	4686101	CompoundStatement		104:32:2126:2193	4686099	0					
ANR	4686102	IdentifierDeclStatement	ut8 * mem = bfvm_get_ptr ( c ) ;	105:1:2129:2156	4686099	0	True				
ANR	4686103	IdentifierDecl	* mem = bfvm_get_ptr ( c )		4686099	0					
ANR	4686104	IdentifierDeclType	ut8 *		4686099	0					
ANR	4686105	Identifier	mem		4686099	1					
ANR	4686106	AssignmentExpression	* mem = bfvm_get_ptr ( c )		4686099	2		=			
ANR	4686107	Identifier	mem		4686099	0					
ANR	4686108	CallExpression	bfvm_get_ptr ( c )		4686099	1					
ANR	4686109	Callee	bfvm_get_ptr		4686099	0					
ANR	4686110	Identifier	bfvm_get_ptr		4686099	0					
ANR	4686111	ArgumentList	c		4686099	1					
ANR	4686112	Argument	c		4686099	0					
ANR	4686113	Identifier	c		4686099	0					
ANR	4686114	IfStatement	if ( mem != NULL )		4686099	1					
ANR	4686115	Condition	mem != NULL	106:5:2163:2173	4686099	0	True				
ANR	4686116	EqualityExpression	mem != NULL		4686099	0		!=			
ANR	4686117	Identifier	mem		4686099	0					
ANR	4686118	Identifier	NULL		4686099	1					
ANR	4686119	CompoundStatement		3:18:49:49	4686099	1					
ANR	4686120	ExpressionStatement	mem [ 0 ] ++	107:2:2180:2188	4686099	0	True				
ANR	4686121	PostIncDecOperationExpression	mem [ 0 ] ++		4686099	0					
ANR	4686122	ArrayIndexing	mem [ 0 ]		4686099	0					
ANR	4686123	Identifier	mem		4686099	0					
ANR	4686124	PrimaryExpression	0		4686099	1					
ANR	4686125	IncDec	++		4686099	1					
ANR	4686126	ReturnType	R_API void		4686099	1					
ANR	4686127	Identifier	bfvm_inc		4686099	2					
ANR	4686128	ParameterList	BfvmCPU * c		4686099	3					
ANR	4686129	Parameter	BfvmCPU * c	104:20:2114:2123	4686099	0	True				
ANR	4686130	ParameterType	BfvmCPU *		4686099	0					
ANR	4686131	Identifier	c		4686099	1					
ANR	4686132	CFGEntryNode	ENTRY		4686099		True				
ANR	4686133	CFGExitNode	EXIT		4686099		True				
ANR	4686134	Symbol	c		4686099						
ANR	4686135	Symbol	NULL		4686099						
ANR	4686136	Symbol	mem		4686099						
ANR	4686137	Symbol	bfvm_get_ptr		4686099						
ANR	4686138	Symbol	* mem		4686099						
ANR	4686139	Function	bfvm_dec	111:0:2196:2295							
ANR	4686140	FunctionDef	bfvm_dec (BfvmCPU * c)		4686139	0					
ANR	4686141	CompoundStatement		111:32:2228:2295	4686139	0					
ANR	4686142	IdentifierDeclStatement	ut8 * mem = bfvm_get_ptr ( c ) ;	112:1:2231:2258	4686139	0	True				
ANR	4686143	IdentifierDecl	* mem = bfvm_get_ptr ( c )		4686139	0					
ANR	4686144	IdentifierDeclType	ut8 *		4686139	0					
ANR	4686145	Identifier	mem		4686139	1					
ANR	4686146	AssignmentExpression	* mem = bfvm_get_ptr ( c )		4686139	2		=			
ANR	4686147	Identifier	mem		4686139	0					
ANR	4686148	CallExpression	bfvm_get_ptr ( c )		4686139	1					
ANR	4686149	Callee	bfvm_get_ptr		4686139	0					
ANR	4686150	Identifier	bfvm_get_ptr		4686139	0					
ANR	4686151	ArgumentList	c		4686139	1					
ANR	4686152	Argument	c		4686139	0					
ANR	4686153	Identifier	c		4686139	0					
ANR	4686154	IfStatement	if ( mem != NULL )		4686139	1					
ANR	4686155	Condition	mem != NULL	113:5:2265:2275	4686139	0	True				
ANR	4686156	EqualityExpression	mem != NULL		4686139	0		!=			
ANR	4686157	Identifier	mem		4686139	0					
ANR	4686158	Identifier	NULL		4686139	1					
ANR	4686159	CompoundStatement		3:18:49:49	4686139	1					
ANR	4686160	ExpressionStatement	mem [ 0 ] --	114:2:2282:2290	4686139	0	True				
ANR	4686161	PostIncDecOperationExpression	mem [ 0 ] --		4686139	0					
ANR	4686162	ArrayIndexing	mem [ 0 ]		4686139	0					
ANR	4686163	Identifier	mem		4686139	0					
ANR	4686164	PrimaryExpression	0		4686139	1					
ANR	4686165	IncDec	--		4686139	1					
ANR	4686166	ReturnType	R_API void		4686139	1					
ANR	4686167	Identifier	bfvm_dec		4686139	2					
ANR	4686168	ParameterList	BfvmCPU * c		4686139	3					
ANR	4686169	Parameter	BfvmCPU * c	111:20:2216:2225	4686139	0	True				
ANR	4686170	ParameterType	BfvmCPU *		4686139	0					
ANR	4686171	Identifier	c		4686139	1					
ANR	4686172	CFGEntryNode	ENTRY		4686139		True				
ANR	4686173	CFGExitNode	EXIT		4686139		True				
ANR	4686174	Symbol	c		4686139						
ANR	4686175	Symbol	NULL		4686139						
ANR	4686176	Symbol	mem		4686139						
ANR	4686177	Symbol	bfvm_get_ptr		4686139						
ANR	4686178	Symbol	* mem		4686139						
ANR	4686179	Function	bfvm_reg_set	118:0:2298:2637							
ANR	4686180	FunctionDef	"bfvm_reg_set (BfvmCPU * c , const char * str)"		4686179	0					
ANR	4686181	CompoundStatement		118:52:2350:2637	4686179	0					
ANR	4686182	IdentifierDeclStatement	"char * ptr = strchr ( str , ' ' ) ;"	119:1:2353:2382	4686179	0	True				
ANR	4686183	IdentifierDecl	"* ptr = strchr ( str , ' ' )"		4686179	0					
ANR	4686184	IdentifierDeclType	char *		4686179	0					
ANR	4686185	Identifier	ptr		4686179	1					
ANR	4686186	AssignmentExpression	"* ptr = strchr ( str , ' ' )"		4686179	2		=			
ANR	4686187	Identifier	ptr		4686179	0					
ANR	4686188	CallExpression	"strchr ( str , ' ' )"		4686179	1					
ANR	4686189	Callee	strchr		4686179	0					
ANR	4686190	Identifier	strchr		4686179	0					
ANR	4686191	ArgumentList	str		4686179	1					
ANR	4686192	Argument	str		4686179	0					
ANR	4686193	Identifier	str		4686179	0					
ANR	4686194	Argument	' '		4686179	1					
ANR	4686195	PrimaryExpression	' '		4686179	0					
ANR	4686196	IfStatement	if ( ! ptr )		4686179	1					
ANR	4686197	Condition	! ptr	120:5:2389:2392	4686179	0	True				
ANR	4686198	UnaryOperationExpression	! ptr		4686179	0					
ANR	4686199	UnaryOperator	!		4686179	0					
ANR	4686200	Identifier	ptr		4686179	1					
ANR	4686201	CompoundStatement		3:11:44:44	4686179	1					
ANR	4686202	ReturnStatement	return 0 ;	121:2:2399:2407	4686179	0	True				
ANR	4686203	PrimaryExpression	0		4686179	0					
ANR	4686204	IfStatement	"if ( strstr ( str , ""eip"" ) )"		4686179	2					
ANR	4686205	Condition	"strstr ( str , ""eip"" )"	123:5:2417:2435	4686179	0	True				
ANR	4686206	CallExpression	"strstr ( str , ""eip"" )"		4686179	0					
ANR	4686207	Callee	strstr		4686179	0					
ANR	4686208	Identifier	strstr		4686179	0					
ANR	4686209	ArgumentList	str		4686179	1					
ANR	4686210	Argument	str		4686179	0					
ANR	4686211	Identifier	str		4686179	0					
ANR	4686212	Argument	"""eip"""		4686179	1					
ANR	4686213	PrimaryExpression	"""eip"""		4686179	0					
ANR	4686214	CompoundStatement		6:26:87:87	4686179	1					
ANR	4686215	ExpressionStatement	"c -> eip = r_num_math ( NULL , ptr + 1 )"	124:2:2442:2475	4686179	0	True				
ANR	4686216	AssignmentExpression	"c -> eip = r_num_math ( NULL , ptr + 1 )"		4686179	0		=			
ANR	4686217	PtrMemberAccess	c -> eip		4686179	0					
ANR	4686218	Identifier	c		4686179	0					
ANR	4686219	Identifier	eip		4686179	1					
ANR	4686220	CallExpression	"r_num_math ( NULL , ptr + 1 )"		4686179	1					
ANR	4686221	Callee	r_num_math		4686179	0					
ANR	4686222	Identifier	r_num_math		4686179	0					
ANR	4686223	ArgumentList	NULL		4686179	1					
ANR	4686224	Argument	NULL		4686179	0					
ANR	4686225	Identifier	NULL		4686179	0					
ANR	4686226	Argument	ptr + 1		4686179	1					
ANR	4686227	AdditiveExpression	ptr + 1		4686179	0		+			
ANR	4686228	Identifier	ptr		4686179	0					
ANR	4686229	PrimaryExpression	1		4686179	1					
ANR	4686230	ElseStatement	else		4686179	0					
ANR	4686231	IfStatement	"if ( strstr ( str , ""esp"" ) )"		4686179	0					
ANR	4686232	Condition	"strstr ( str , ""esp"" )"	125:12:2489:2507	4686179	0	True				
ANR	4686233	CallExpression	"strstr ( str , ""esp"" )"		4686179	0					
ANR	4686234	Callee	strstr		4686179	0					
ANR	4686235	Identifier	strstr		4686179	0					
ANR	4686236	ArgumentList	str		4686179	1					
ANR	4686237	Argument	str		4686179	0					
ANR	4686238	Identifier	str		4686179	0					
ANR	4686239	Argument	"""esp"""		4686179	1					
ANR	4686240	PrimaryExpression	"""esp"""		4686179	0					
ANR	4686241	CompoundStatement		8:33:159:159	4686179	1					
ANR	4686242	ExpressionStatement	"c -> esp = r_num_math ( NULL , ptr + 1 )"	126:2:2514:2547	4686179	0	True				
ANR	4686243	AssignmentExpression	"c -> esp = r_num_math ( NULL , ptr + 1 )"		4686179	0		=			
ANR	4686244	PtrMemberAccess	c -> esp		4686179	0					
ANR	4686245	Identifier	c		4686179	0					
ANR	4686246	Identifier	esp		4686179	1					
ANR	4686247	CallExpression	"r_num_math ( NULL , ptr + 1 )"		4686179	1					
ANR	4686248	Callee	r_num_math		4686179	0					
ANR	4686249	Identifier	r_num_math		4686179	0					
ANR	4686250	ArgumentList	NULL		4686179	1					
ANR	4686251	Argument	NULL		4686179	0					
ANR	4686252	Identifier	NULL		4686179	0					
ANR	4686253	Argument	ptr + 1		4686179	1					
ANR	4686254	AdditiveExpression	ptr + 1		4686179	0		+			
ANR	4686255	Identifier	ptr		4686179	0					
ANR	4686256	PrimaryExpression	1		4686179	1					
ANR	4686257	ElseStatement	else		4686179	0					
ANR	4686258	IfStatement	"if ( strstr ( str , ""ptr"" ) )"		4686179	0					
ANR	4686259	Condition	"strstr ( str , ""ptr"" )"	127:12:2561:2579	4686179	0	True				
ANR	4686260	CallExpression	"strstr ( str , ""ptr"" )"		4686179	0					
ANR	4686261	Callee	strstr		4686179	0					
ANR	4686262	Identifier	strstr		4686179	0					
ANR	4686263	ArgumentList	str		4686179	1					
ANR	4686264	Argument	str		4686179	0					
ANR	4686265	Identifier	str		4686179	0					
ANR	4686266	Argument	"""ptr"""		4686179	1					
ANR	4686267	PrimaryExpression	"""ptr"""		4686179	0					
ANR	4686268	CompoundStatement		10:33:231:231	4686179	1					
ANR	4686269	ExpressionStatement	"c -> ptr = r_num_math ( NULL , ptr + 1 )"	128:2:2586:2621	4686179	0	True				
ANR	4686270	AssignmentExpression	"c -> ptr = r_num_math ( NULL , ptr + 1 )"		4686179	0		=			
ANR	4686271	PtrMemberAccess	c -> ptr		4686179	0					
ANR	4686272	Identifier	c		4686179	0					
ANR	4686273	Identifier	ptr		4686179	1					
ANR	4686274	CallExpression	"r_num_math ( NULL , ptr + 1 )"		4686179	1					
ANR	4686275	Callee	r_num_math		4686179	0					
ANR	4686276	Identifier	r_num_math		4686179	0					
ANR	4686277	ArgumentList	NULL		4686179	1					
ANR	4686278	Argument	NULL		4686179	0					
ANR	4686279	Identifier	NULL		4686179	0					
ANR	4686280	Argument	ptr + 1		4686179	1					
ANR	4686281	AdditiveExpression	ptr + 1		4686179	0		+			
ANR	4686282	Identifier	ptr		4686179	0					
ANR	4686283	PrimaryExpression	1		4686179	1					
ANR	4686284	ReturnStatement	return 1 ;	130:1:2627:2635	4686179	3	True				
ANR	4686285	PrimaryExpression	1		4686179	0					
ANR	4686286	ReturnType	R_API int		4686179	1					
ANR	4686287	Identifier	bfvm_reg_set		4686179	2					
ANR	4686288	ParameterList	"BfvmCPU * c , const char * str"		4686179	3					
ANR	4686289	Parameter	BfvmCPU * c	118:23:2321:2330	4686179	0	True				
ANR	4686290	ParameterType	BfvmCPU *		4686179	0					
ANR	4686291	Identifier	c		4686179	1					
ANR	4686292	Parameter	const char * str	118:35:2333:2347	4686179	1	True				
ANR	4686293	ParameterType	const char *		4686179	0					
ANR	4686294	Identifier	str		4686179	1					
ANR	4686295	CFGEntryNode	ENTRY		4686179		True				
ANR	4686296	CFGExitNode	EXIT		4686179		True				
ANR	4686297	Symbol	str		4686179						
ANR	4686298	Symbol	c		4686179						
ANR	4686299	Symbol	NULL		4686179						
ANR	4686300	Symbol	c -> ptr		4686179						
ANR	4686301	Symbol	strstr		4686179						
ANR	4686302	Symbol	c -> eip		4686179						
ANR	4686303	Symbol	strchr		4686179						
ANR	4686304	Symbol	* c		4686179						
ANR	4686305	Symbol	ptr		4686179						
ANR	4686306	Symbol	r_num_math		4686179						
ANR	4686307	Symbol	c -> esp		4686179						
ANR	4686308	Function	bfvm_peek	134:0:2663:2865							
ANR	4686309	FunctionDef	bfvm_peek (BfvmCPU * c)		4686308	0					
ANR	4686310	CompoundStatement		134:33:2696:2865	4686308	0					
ANR	4686311	IdentifierDeclStatement	int idx = c -> input_idx ;	135:1:2699:2721	4686308	0	True				
ANR	4686312	IdentifierDecl	idx = c -> input_idx		4686308	0					
ANR	4686313	IdentifierDeclType	int		4686308	0					
ANR	4686314	Identifier	idx		4686308	1					
ANR	4686315	AssignmentExpression	idx = c -> input_idx		4686308	2		=			
ANR	4686316	Identifier	idx		4686308	0					
ANR	4686317	PtrMemberAccess	c -> input_idx		4686308	1					
ANR	4686318	Identifier	c		4686308	0					
ANR	4686319	Identifier	input_idx		4686308	1					
ANR	4686320	IdentifierDeclStatement	ut8 * ptr = bfvm_get_ptr ( c ) ;	136:1:2724:2751	4686308	1	True				
ANR	4686321	IdentifierDecl	* ptr = bfvm_get_ptr ( c )		4686308	0					
ANR	4686322	IdentifierDeclType	ut8 *		4686308	0					
ANR	4686323	Identifier	ptr		4686308	1					
ANR	4686324	AssignmentExpression	* ptr = bfvm_get_ptr ( c )		4686308	2		=			
ANR	4686325	Identifier	ptr		4686308	0					
ANR	4686326	CallExpression	bfvm_get_ptr ( c )		4686308	1					
ANR	4686327	Callee	bfvm_get_ptr		4686308	0					
ANR	4686328	Identifier	bfvm_get_ptr		4686308	0					
ANR	4686329	ArgumentList	c		4686308	1					
ANR	4686330	Argument	c		4686308	0					
ANR	4686331	Identifier	c		4686308	0					
ANR	4686332	IfStatement	if ( idx >= c -> input_size )		4686308	2					
ANR	4686333	Condition	idx >= c -> input_size	138:5:2759:2778	4686308	0	True				
ANR	4686334	RelationalExpression	idx >= c -> input_size		4686308	0		>=			
ANR	4686335	Identifier	idx		4686308	0					
ANR	4686336	PtrMemberAccess	c -> input_size		4686308	1					
ANR	4686337	Identifier	c		4686308	0					
ANR	4686338	Identifier	input_size		4686308	1					
ANR	4686339	CompoundStatement		5:27:84:84	4686308	1					
ANR	4686340	ExpressionStatement	idx = 0	139:2:2785:2792	4686308	0	True				
ANR	4686341	AssignmentExpression	idx = 0		4686308	0		=			
ANR	4686342	Identifier	idx		4686308	0					
ANR	4686343	PrimaryExpression	0		4686308	1					
ANR	4686344	IfStatement	if ( ptr )		4686308	3					
ANR	4686345	Condition	ptr	142:5:2803:2805	4686308	0	True				
ANR	4686346	Identifier	ptr		4686308	0					
ANR	4686347	CompoundStatement		9:10:111:111	4686308	1					
ANR	4686348	ExpressionStatement	* ptr = c -> input_buf [ idx ]	143:2:2812:2836	4686308	0	True				
ANR	4686349	AssignmentExpression	* ptr = c -> input_buf [ idx ]		4686308	0		=			
ANR	4686350	UnaryOperationExpression	* ptr		4686308	0					
ANR	4686351	UnaryOperator	*		4686308	0					
ANR	4686352	Identifier	ptr		4686308	1					
ANR	4686353	ArrayIndexing	c -> input_buf [ idx ]		4686308	1					
ANR	4686354	PtrMemberAccess	c -> input_buf		4686308	0					
ANR	4686355	Identifier	c		4686308	0					
ANR	4686356	Identifier	input_buf		4686308	1					
ANR	4686357	Identifier	idx		4686308	1					
ANR	4686358	ExpressionStatement	c -> input_idx = idx + 1	144:2:2840:2860	4686308	1	True				
ANR	4686359	AssignmentExpression	c -> input_idx = idx + 1		4686308	0		=			
ANR	4686360	PtrMemberAccess	c -> input_idx		4686308	0					
ANR	4686361	Identifier	c		4686308	0					
ANR	4686362	Identifier	input_idx		4686308	1					
ANR	4686363	AdditiveExpression	idx + 1		4686308	1		+			
ANR	4686364	Identifier	idx		4686308	0					
ANR	4686365	PrimaryExpression	1		4686308	1					
ANR	4686366	ReturnType	R_API void		4686308	1					
ANR	4686367	Identifier	bfvm_peek		4686308	2					
ANR	4686368	ParameterList	BfvmCPU * c		4686308	3					
ANR	4686369	Parameter	BfvmCPU * c	134:21:2684:2693	4686308	0	True				
ANR	4686370	ParameterType	BfvmCPU *		4686308	0					
ANR	4686371	Identifier	c		4686308	1					
ANR	4686372	CFGEntryNode	ENTRY		4686308		True				
ANR	4686373	CFGExitNode	EXIT		4686308		True				
ANR	4686374	Symbol	c -> input_idx		4686308						
ANR	4686375	Symbol	* c -> input_buf		4686308						
ANR	4686376	Symbol	c		4686308						
ANR	4686377	Symbol	c -> input_size		4686308						
ANR	4686378	Symbol	* * c		4686308						
ANR	4686379	Symbol	c -> input_buf		4686308						
ANR	4686380	Symbol	* idx		4686308						
ANR	4686381	Symbol	* ptr		4686308						
ANR	4686382	Symbol	bfvm_get_ptr		4686308						
ANR	4686383	Symbol	idx		4686308						
ANR	4686384	Symbol	* c		4686308						
ANR	4686385	Symbol	ptr		4686308						
ANR	4686386	Function	bfvm_poke	148:0:2868:2989							
ANR	4686387	FunctionDef	bfvm_poke (BfvmCPU * c)		4686386	0					
ANR	4686388	CompoundStatement		148:33:2901:2989	4686386	0					
ANR	4686389	IdentifierDeclStatement	int idx = c -> screen_idx ;	149:1:2904:2927	4686386	0	True				
ANR	4686390	IdentifierDecl	idx = c -> screen_idx		4686386	0					
ANR	4686391	IdentifierDeclType	int		4686386	0					
ANR	4686392	Identifier	idx		4686386	1					
ANR	4686393	AssignmentExpression	idx = c -> screen_idx		4686386	2		=			
ANR	4686394	Identifier	idx		4686386	0					
ANR	4686395	PtrMemberAccess	c -> screen_idx		4686386	1					
ANR	4686396	Identifier	c		4686386	0					
ANR	4686397	Identifier	screen_idx		4686386	1					
ANR	4686398	ExpressionStatement	c -> screen_buf [ idx ] = bfvm_get ( c )	150:1:2930:2963	4686386	1	True				
ANR	4686399	AssignmentExpression	c -> screen_buf [ idx ] = bfvm_get ( c )		4686386	0		=			
ANR	4686400	ArrayIndexing	c -> screen_buf [ idx ]		4686386	0					
ANR	4686401	PtrMemberAccess	c -> screen_buf		4686386	0					
ANR	4686402	Identifier	c		4686386	0					
ANR	4686403	Identifier	screen_buf		4686386	1					
ANR	4686404	Identifier	idx		4686386	1					
ANR	4686405	CallExpression	bfvm_get ( c )		4686386	1					
ANR	4686406	Callee	bfvm_get		4686386	0					
ANR	4686407	Identifier	bfvm_get		4686386	0					
ANR	4686408	ArgumentList	c		4686386	1					
ANR	4686409	Argument	c		4686386	0					
ANR	4686410	Identifier	c		4686386	0					
ANR	4686411	ExpressionStatement	c -> screen_idx = idx + 1	151:1:2966:2987	4686386	2	True				
ANR	4686412	AssignmentExpression	c -> screen_idx = idx + 1		4686386	0		=			
ANR	4686413	PtrMemberAccess	c -> screen_idx		4686386	0					
ANR	4686414	Identifier	c		4686386	0					
ANR	4686415	Identifier	screen_idx		4686386	1					
ANR	4686416	AdditiveExpression	idx + 1		4686386	1		+			
ANR	4686417	Identifier	idx		4686386	0					
ANR	4686418	PrimaryExpression	1		4686386	1					
ANR	4686419	ReturnType	R_API void		4686386	1					
ANR	4686420	Identifier	bfvm_poke		4686386	2					
ANR	4686421	ParameterList	BfvmCPU * c		4686386	3					
ANR	4686422	Parameter	BfvmCPU * c	148:21:2889:2898	4686386	0	True				
ANR	4686423	ParameterType	BfvmCPU *		4686386	0					
ANR	4686424	Identifier	c		4686386	1					
ANR	4686425	CFGEntryNode	ENTRY		4686386		True				
ANR	4686426	CFGExitNode	EXIT		4686386		True				
ANR	4686427	Symbol	c -> screen_idx		4686386						
ANR	4686428	Symbol	c		4686386						
ANR	4686429	Symbol	bfvm_get		4686386						
ANR	4686430	Symbol	* idx		4686386						
ANR	4686431	Symbol	* * c		4686386						
ANR	4686432	Symbol	* c -> screen_buf		4686386						
ANR	4686433	Symbol	idx		4686386						
ANR	4686434	Symbol	* c		4686386						
ANR	4686435	Symbol	c -> screen_buf		4686386						
ANR	4686436	Function	bfvm_trace_op	154:0:2992:3350							
ANR	4686437	FunctionDef	"bfvm_trace_op (BfvmCPU * c , ut8 op)"		4686436	0					
ANR	4686438	CompoundStatement		154:44:3036:3350	4686436	0					
ANR	4686439	IdentifierDeclStatement	ut8 g ;	155:1:3039:3044	4686436	0	True				
ANR	4686440	IdentifierDecl	g		4686436	0					
ANR	4686441	IdentifierDeclType	ut8		4686436	0					
ANR	4686442	Identifier	g		4686436	1					
ANR	4686443	SwitchStatement	switch ( op )		4686436	1					
ANR	4686444	Condition	op	156:9:3055:3056	4686436	0	True				
ANR	4686445	Identifier	op		4686436	0					
ANR	4686446	CompoundStatement		3:13:22:22	4686436	1					
ANR	4686447	Label	case '\\0' :	157:1:3062:3071	4686436	0	True				
ANR	4686448	ExpressionStatement	"eprintf ( "" ; trap (%02x)\\n"" , op )"	158:2:3075:3107	4686436	1	True				
ANR	4686449	CallExpression	"eprintf ( "" ; trap (%02x)\\n"" , op )"		4686436	0					
ANR	4686450	Callee	eprintf		4686436	0					
ANR	4686451	Identifier	eprintf		4686436	0					
ANR	4686452	ArgumentList	""" ; trap (%02x)\\n"""		4686436	1					
ANR	4686453	Argument	""" ; trap (%02x)\\n"""		4686436	0					
ANR	4686454	PrimaryExpression	""" ; trap (%02x)\\n"""		4686436	0					
ANR	4686455	Argument	op		4686436	1					
ANR	4686456	Identifier	op		4686436	0					
ANR	4686457	Label	case '.' :	159:1:3110:3118	4686436	2	True				
ANR	4686458	Label	"case ',' :"	160:1:3121:3129	4686436	3	True				
ANR	4686459	Label	case '+' :	161:1:3132:3140	4686436	4	True				
ANR	4686460	Label	case '-' :	162:1:3143:3151	4686436	5	True				
ANR	4686461	Label	case '>' :	163:1:3154:3162	4686436	6	True				
ANR	4686462	Label	case '<' :	164:1:3165:3173	4686436	7	True				
ANR	4686463	ExpressionStatement	"eprintf ( ""%c"" , op )"	165:2:3177:3195	4686436	8	True				
ANR	4686464	CallExpression	"eprintf ( ""%c"" , op )"		4686436	0					
ANR	4686465	Callee	eprintf		4686436	0					
ANR	4686466	Identifier	eprintf		4686436	0					
ANR	4686467	ArgumentList	"""%c"""		4686436	1					
ANR	4686468	Argument	"""%c"""		4686436	0					
ANR	4686469	PrimaryExpression	"""%c"""		4686436	0					
ANR	4686470	Argument	op		4686436	1					
ANR	4686471	Identifier	op		4686436	0					
ANR	4686472	BreakStatement	break ;	166:2:3199:3204	4686436	9	True				
ANR	4686473	Label	case '[' :	167:1:3207:3215	4686436	10	True				
ANR	4686474	Label	case ']' :	168:1:3218:3226	4686436	11	True				
ANR	4686475	ExpressionStatement	g = bfvm_get ( c )	169:2:3230:3246	4686436	12	True				
ANR	4686476	AssignmentExpression	g = bfvm_get ( c )		4686436	0		=			
ANR	4686477	Identifier	g		4686436	0					
ANR	4686478	CallExpression	bfvm_get ( c )		4686436	1					
ANR	4686479	Callee	bfvm_get		4686436	0					
ANR	4686480	Identifier	bfvm_get		4686436	0					
ANR	4686481	ArgumentList	c		4686436	1					
ANR	4686482	Argument	c		4686436	0					
ANR	4686483	Identifier	c		4686436	0					
ANR	4686484	ExpressionStatement	"eprintf ( ""%c  ; [ptr] = %d\\n"" , op , g )"	170:2:3250:3287	4686436	13	True				
ANR	4686485	CallExpression	"eprintf ( ""%c  ; [ptr] = %d\\n"" , op , g )"		4686436	0					
ANR	4686486	Callee	eprintf		4686436	0					
ANR	4686487	Identifier	eprintf		4686436	0					
ANR	4686488	ArgumentList	"""%c  ; [ptr] = %d\\n"""		4686436	1					
ANR	4686489	Argument	"""%c  ; [ptr] = %d\\n"""		4686436	0					
ANR	4686490	PrimaryExpression	"""%c  ; [ptr] = %d\\n"""		4686436	0					
ANR	4686491	Argument	op		4686436	1					
ANR	4686492	Identifier	op		4686436	0					
ANR	4686493	Argument	g		4686436	2					
ANR	4686494	Identifier	g		4686436	0					
ANR	4686495	IfStatement	if ( g != 0 )		4686436	14					
ANR	4686496	Condition	g != 0	171:6:3295:3300	4686436	0	True				
ANR	4686497	EqualityExpression	g != 0		4686436	0		!=			
ANR	4686498	Identifier	g		4686436	0					
ANR	4686499	PrimaryExpression	0		4686436	1					
ANR	4686500	CompoundStatement		18:14:266:266	4686436	1					
ANR	4686501	ExpressionStatement	"eprintf ( ""["" )"	172:3:3308:3321	4686436	0	True				
ANR	4686502	CallExpression	"eprintf ( ""["" )"		4686436	0					
ANR	4686503	Callee	eprintf		4686436	0					
ANR	4686504	Identifier	eprintf		4686436	0					
ANR	4686505	ArgumentList	"""["""		4686436	1					
ANR	4686506	Argument	"""["""		4686436	0					
ANR	4686507	PrimaryExpression	"""["""		4686436	0					
ANR	4686508	BreakStatement	break ;	174:2:3329:3334	4686436	15	True				
ANR	4686509	ReturnStatement	return 0 ;	176:1:3340:3348	4686436	2	True				
ANR	4686510	PrimaryExpression	0		4686436	0					
ANR	4686511	ReturnType	R_API int		4686436	1					
ANR	4686512	Identifier	bfvm_trace_op		4686436	2					
ANR	4686513	ParameterList	"BfvmCPU * c , ut8 op"		4686436	3					
ANR	4686514	Parameter	BfvmCPU * c	154:24:3016:3025	4686436	0	True				
ANR	4686515	ParameterType	BfvmCPU *		4686436	0					
ANR	4686516	Identifier	c		4686436	1					
ANR	4686517	Parameter	ut8 op	154:36:3028:3033	4686436	1	True				
ANR	4686518	ParameterType	ut8		4686436	0					
ANR	4686519	Identifier	op		4686436	1					
ANR	4686520	CFGEntryNode	ENTRY		4686436		True				
ANR	4686521	CFGExitNode	EXIT		4686436		True				
ANR	4686522	Symbol	op		4686436						
ANR	4686523	Symbol	c		4686436						
ANR	4686524	Symbol	bfvm_get		4686436						
ANR	4686525	Symbol	g		4686436						
ANR	4686526	Function	bfvm_step	181:0:3389:4153							
ANR	4686527	FunctionDef	"bfvm_step (BfvmCPU * c , int over)"		4686526	0					
ANR	4686528	CompoundStatement		181:42:3431:4153	4686526	0					
ANR	4686529	IdentifierDeclStatement	"ut8 op2 , op = bfvm_op ( c ) ;"	182:1:3434:3459	4686526	0	True				
ANR	4686530	IdentifierDecl	op2		4686526	0					
ANR	4686531	IdentifierDeclType	ut8		4686526	0					
ANR	4686532	Identifier	op2		4686526	1					
ANR	4686533	IdentifierDecl	op = bfvm_op ( c )		4686526	1					
ANR	4686534	IdentifierDeclType	ut8		4686526	0					
ANR	4686535	Identifier	op		4686526	1					
ANR	4686536	AssignmentExpression	op = bfvm_op ( c )		4686526	2		=			
ANR	4686537	Identifier	op		4686526	0					
ANR	4686538	CallExpression	bfvm_op ( c )		4686526	1					
ANR	4686539	Callee	bfvm_op		4686526	0					
ANR	4686540	Identifier	bfvm_op		4686526	0					
ANR	4686541	ArgumentList	c		4686526	1					
ANR	4686542	Argument	c		4686526	0					
ANR	4686543	Identifier	c		4686526	0					
ANR	4686544	DoStatement	do		4686526	1					
ANR	4686545	CompoundStatement		5:2:38:61	4686526	0					
ANR	4686546	IdentifierDeclStatement	"T bfvm_trace_op ( c , op ) ;"	185:2:3470:3493	4686526	0	True				
ANR	4686547	IdentifierDecl	"bfvm_trace_op ( c , op )"		4686526	0					
ANR	4686548	IdentifierDeclType	T		4686526	0					
ANR	4686549	Identifier	bfvm_trace_op		4686526	1					
ANR	4686550	Expression	"c , op"		4686526	2					
ANR	4686551	Identifier	c		4686526	0					
ANR	4686552	Identifier	op		4686526	1					
ANR	4686553	SwitchStatement	switch ( op )		4686526	1					
ANR	4686554	Condition	op	186:10:3505:3506	4686526	0	True				
ANR	4686555	Identifier	op		4686526	0					
ANR	4686556	CompoundStatement		6:14:77:77	4686526	1					
ANR	4686557	Label	case '\\0' :	187:2:3513:3522	4686526	0	True				
ANR	4686558	ReturnStatement	return 1 ;	189:3:3541:3549	4686526	1	True				
ANR	4686559	PrimaryExpression	1		4686526	0					
ANR	4686560	Label	case '.' :	190:2:3553:3561	4686526	2	True				
ANR	4686561	ExpressionStatement	bfvm_poke ( c )	192:3:3589:3602	4686526	3	True				
ANR	4686562	CallExpression	bfvm_poke ( c )		4686526	0					
ANR	4686563	Callee	bfvm_poke		4686526	0					
ANR	4686564	Identifier	bfvm_poke		4686526	0					
ANR	4686565	ArgumentList	c		4686526	1					
ANR	4686566	Argument	c		4686526	0					
ANR	4686567	Identifier	c		4686526	0					
ANR	4686568	BreakStatement	break ;	193:3:3607:3612	4686526	4	True				
ANR	4686569	Label	"case ',' :"	194:2:3616:3624	4686526	5	True				
ANR	4686570	ExpressionStatement	bfvm_peek ( c )	195:3:3629:3642	4686526	6	True				
ANR	4686571	CallExpression	bfvm_peek ( c )		4686526	0					
ANR	4686572	Callee	bfvm_peek		4686526	0					
ANR	4686573	Identifier	bfvm_peek		4686526	0					
ANR	4686574	ArgumentList	c		4686526	1					
ANR	4686575	Argument	c		4686526	0					
ANR	4686576	Identifier	c		4686526	0					
ANR	4686577	BreakStatement	break ;	197:3:3666:3671	4686526	7	True				
ANR	4686578	Label	case '+' :	198:2:3675:3683	4686526	8	True				
ANR	4686579	ExpressionStatement	bfvm_inc ( c )	199:3:3688:3700	4686526	9	True				
ANR	4686580	CallExpression	bfvm_inc ( c )		4686526	0					
ANR	4686581	Callee	bfvm_inc		4686526	0					
ANR	4686582	Identifier	bfvm_inc		4686526	0					
ANR	4686583	ArgumentList	c		4686526	1					
ANR	4686584	Argument	c		4686526	0					
ANR	4686585	Identifier	c		4686526	0					
ANR	4686586	BreakStatement	break ;	200:3:3705:3710	4686526	10	True				
ANR	4686587	Label	case '-' :	201:2:3714:3722	4686526	11	True				
ANR	4686588	ExpressionStatement	bfvm_dec ( c )	202:3:3727:3739	4686526	12	True				
ANR	4686589	CallExpression	bfvm_dec ( c )		4686526	0					
ANR	4686590	Callee	bfvm_dec		4686526	0					
ANR	4686591	Identifier	bfvm_dec		4686526	0					
ANR	4686592	ArgumentList	c		4686526	1					
ANR	4686593	Argument	c		4686526	0					
ANR	4686594	Identifier	c		4686526	0					
ANR	4686595	BreakStatement	break ;	203:3:3744:3749	4686526	13	True				
ANR	4686596	Label	case '>' :	204:2:3753:3761	4686526	14	True				
ANR	4686597	ExpressionStatement	c -> ptr ++	205:3:3766:3774	4686526	15	True				
ANR	4686598	PostIncDecOperationExpression	c -> ptr ++		4686526	0					
ANR	4686599	PtrMemberAccess	c -> ptr		4686526	0					
ANR	4686600	Identifier	c		4686526	0					
ANR	4686601	Identifier	ptr		4686526	1					
ANR	4686602	IncDec	++		4686526	1					
ANR	4686603	BreakStatement	break ;	206:3:3779:3784	4686526	16	True				
ANR	4686604	Label	case '<' :	207:2:3788:3796	4686526	17	True				
ANR	4686605	ExpressionStatement	c -> ptr --	208:3:3801:3809	4686526	18	True				
ANR	4686606	PostIncDecOperationExpression	c -> ptr --		4686526	0					
ANR	4686607	PtrMemberAccess	c -> ptr		4686526	0					
ANR	4686608	Identifier	c		4686526	0					
ANR	4686609	Identifier	ptr		4686526	1					
ANR	4686610	IncDec	--		4686526	1					
ANR	4686611	BreakStatement	break ;	209:3:3814:3819	4686526	19	True				
ANR	4686612	Label	case '[' :	210:2:3823:3831	4686526	20	True				
ANR	4686613	BreakStatement	break ;	211:3:3836:3841	4686526	21	True				
ANR	4686614	Label	case ']' :	212:2:3845:3853	4686526	22	True				
ANR	4686615	IfStatement	if ( bfvm_get ( c ) != 0 )		4686526	23					
ANR	4686616	Condition	bfvm_get ( c ) != 0	213:7:3862:3878	4686526	0	True				
ANR	4686617	EqualityExpression	bfvm_get ( c ) != 0		4686526	0		!=			
ANR	4686618	CallExpression	bfvm_get ( c )		4686526	0					
ANR	4686619	Callee	bfvm_get		4686526	0					
ANR	4686620	Identifier	bfvm_get		4686526	0					
ANR	4686621	ArgumentList	c		4686526	1					
ANR	4686622	Argument	c		4686526	0					
ANR	4686623	Identifier	c		4686526	0					
ANR	4686624	PrimaryExpression	0		4686526	1					
ANR	4686625	CompoundStatement		33:26:449:449	4686526	1					
ANR	4686626	DoStatement	do		4686526	0					
ANR	4686627	CompoundStatement		34:7:458:458	4686526	0					
ANR	4686628	IfStatement	if ( c -> eip < ( c -> eip - 1 ) )		4686526	0					
ANR	4686629	Condition	c -> eip < ( c -> eip - 1 )	216:9:3930:3948	4686526	0	True				
ANR	4686630	RelationalExpression	c -> eip < ( c -> eip - 1 )		4686526	0		<			
ANR	4686631	PtrMemberAccess	c -> eip		4686526	0					
ANR	4686632	Identifier	c		4686526	0					
ANR	4686633	Identifier	eip		4686526	1					
ANR	4686634	AdditiveExpression	c -> eip - 1		4686526	1		-			
ANR	4686635	PtrMemberAccess	c -> eip		4686526	0					
ANR	4686636	Identifier	c		4686526	0					
ANR	4686637	Identifier	eip		4686526	1					
ANR	4686638	PrimaryExpression	1		4686526	1					
ANR	4686639	CompoundStatement		36:30:519:519	4686526	1					
ANR	4686640	ExpressionStatement	c -> eip = 0	217:6:3959:3969	4686526	0	True				
ANR	4686641	AssignmentExpression	c -> eip = 0		4686526	0		=			
ANR	4686642	PtrMemberAccess	c -> eip		4686526	0					
ANR	4686643	Identifier	c		4686526	0					
ANR	4686644	Identifier	eip		4686526	1					
ANR	4686645	PrimaryExpression	0		4686526	1					
ANR	4686646	BreakStatement	break ;	218:6:3977:3982	4686526	1	True				
ANR	4686647	ExpressionStatement	c -> eip --	220:5:3996:4004	4686526	1	True				
ANR	4686648	PostIncDecOperationExpression	c -> eip --		4686526	0					
ANR	4686649	PtrMemberAccess	c -> eip		4686526	0					
ANR	4686650	Identifier	c		4686526	0					
ANR	4686651	Identifier	eip		4686526	1					
ANR	4686652	IncDec	--		4686526	1					
ANR	4686653	Condition	bfvm_op ( c ) != '['	221:13:4019:4034	4686526	1	True				
ANR	4686654	EqualityExpression	bfvm_op ( c ) != '['		4686526	0		!=			
ANR	4686655	CallExpression	bfvm_op ( c )		4686526	0					
ANR	4686656	Callee	bfvm_op		4686526	0					
ANR	4686657	Identifier	bfvm_op		4686526	0					
ANR	4686658	ArgumentList	c		4686526	1					
ANR	4686659	Argument	c		4686526	0					
ANR	4686660	Identifier	c		4686526	0					
ANR	4686661	PrimaryExpression	'['		4686526	1					
ANR	4686662	BreakStatement	break ;	223:3:4046:4051	4686526	24	True				
ANR	4686663	Label	default :	224:2:4055:4062	4686526	25	True				
ANR	4686664	Identifier	default		4686526	0					
ANR	4686665	BreakStatement	break ;	225:3:4067:4072	4686526	26	True				
ANR	4686666	ExpressionStatement	c -> eip ++	227:2:4080:4088	4686526	2	True				
ANR	4686667	PostIncDecOperationExpression	c -> eip ++		4686526	0					
ANR	4686668	PtrMemberAccess	c -> eip		4686526	0					
ANR	4686669	Identifier	c		4686526	0					
ANR	4686670	Identifier	eip		4686526	1					
ANR	4686671	IncDec	++		4686526	1					
ANR	4686672	ExpressionStatement	op2 = bfvm_op ( c )	228:2:4092:4109	4686526	3	True				
ANR	4686673	AssignmentExpression	op2 = bfvm_op ( c )		4686526	0		=			
ANR	4686674	Identifier	op2		4686526	0					
ANR	4686675	CallExpression	bfvm_op ( c )		4686526	1					
ANR	4686676	Callee	bfvm_op		4686526	0					
ANR	4686677	Identifier	bfvm_op		4686526	0					
ANR	4686678	ArgumentList	c		4686526	1					
ANR	4686679	Argument	c		4686526	0					
ANR	4686680	Identifier	c		4686526	0					
ANR	4686681	Condition	over && op == op2	229:10:4121:4137	4686526	1	True				
ANR	4686682	AndExpression	over && op == op2		4686526	0		&&			
ANR	4686683	Identifier	over		4686526	0					
ANR	4686684	EqualityExpression	op == op2		4686526	1		==			
ANR	4686685	Identifier	op		4686526	0					
ANR	4686686	Identifier	op2		4686526	1					
ANR	4686687	ReturnStatement	return 0 ;	231:1:4143:4151	4686526	2	True				
ANR	4686688	PrimaryExpression	0		4686526	0					
ANR	4686689	ReturnType	R_API int		4686526	1					
ANR	4686690	Identifier	bfvm_step		4686526	2					
ANR	4686691	ParameterList	"BfvmCPU * c , int over"		4686526	3					
ANR	4686692	Parameter	BfvmCPU * c	181:20:3409:3418	4686526	0	True				
ANR	4686693	ParameterType	BfvmCPU *		4686526	0					
ANR	4686694	Identifier	c		4686526	1					
ANR	4686695	Parameter	int over	181:32:3421:3428	4686526	1	True				
ANR	4686696	ParameterType	int		4686526	0					
ANR	4686697	Identifier	over		4686526	1					
ANR	4686698	CFGEntryNode	ENTRY		4686526		True				
ANR	4686699	CFGExitNode	EXIT		4686526		True				
ANR	4686700	Symbol	over		4686526						
ANR	4686701	Symbol	op2		4686526						
ANR	4686702	Symbol	op		4686526						
ANR	4686703	Symbol	c		4686526						
ANR	4686704	Symbol	bfvm_trace_op		4686526						
ANR	4686705	Symbol	c -> ptr		4686526						
ANR	4686706	Symbol	bfvm_get		4686526						
ANR	4686707	Symbol	c -> eip		4686526						
ANR	4686708	Symbol	bfvm_op		4686526						
ANR	4686709	Symbol	* c		4686526						
ANR	4686710	Function	bfvm_contsc	234:0:4156:4577							
ANR	4686711	FunctionDef	bfvm_contsc (BfvmCPU * c)		4686710	0					
ANR	4686712	CompoundStatement		234:34:4190:4577	4686710	0					
ANR	4686713	ExpressionStatement	c -> breaked = 0	235:1:4193:4207	4686710	0	True				
ANR	4686714	AssignmentExpression	c -> breaked = 0		4686710	0		=			
ANR	4686715	PtrMemberAccess	c -> breaked		4686710	0					
ANR	4686716	Identifier	c		4686710	0					
ANR	4686717	Identifier	breaked		4686710	1					
ANR	4686718	PrimaryExpression	0		4686710	1					
ANR	4686719	WhileStatement	while ( ! c -> breaked )		4686710	1					
ANR	4686720	Condition	! c -> breaked	236:8:4217:4227	4686710	0	True				
ANR	4686721	UnaryOperationExpression	! c -> breaked		4686710	0					
ANR	4686722	UnaryOperator	!		4686710	0					
ANR	4686723	PtrMemberAccess	c -> breaked		4686710	1					
ANR	4686724	Identifier	c		4686710	0					
ANR	4686725	Identifier	breaked		4686710	1					
ANR	4686726	CompoundStatement		3:21:39:39	4686710	1					
ANR	4686727	ExpressionStatement	"bfvm_step ( c , 0 )"	237:2:4234:4250	4686710	0	True				
ANR	4686728	CallExpression	"bfvm_step ( c , 0 )"		4686710	0					
ANR	4686729	Callee	bfvm_step		4686710	0					
ANR	4686730	Identifier	bfvm_step		4686710	0					
ANR	4686731	ArgumentList	c		4686710	1					
ANR	4686732	Argument	c		4686710	0					
ANR	4686733	Identifier	c		4686710	0					
ANR	4686734	Argument	0		4686710	1					
ANR	4686735	PrimaryExpression	0		4686710	0					
ANR	4686736	IfStatement	if ( bfvm_in_trap ( c ) )		4686710	1					
ANR	4686737	Condition	bfvm_in_trap ( c )	238:6:4258:4273	4686710	0	True				
ANR	4686738	CallExpression	bfvm_in_trap ( c )		4686710	0					
ANR	4686739	Callee	bfvm_in_trap		4686710	0					
ANR	4686740	Identifier	bfvm_in_trap		4686710	0					
ANR	4686741	ArgumentList	c		4686710	1					
ANR	4686742	Argument	c		4686710	0					
ANR	4686743	Identifier	c		4686710	0					
ANR	4686744	CompoundStatement		5:24:85:85	4686710	1					
ANR	4686745	Statement	eprintf	239:3:4281:4287	4686710	0	True				
ANR	4686746	Statement	(	239:11:4289:4289	4686710	1	True				
ANR	4686747	Statement	"""Trap instruction at 0x%08"""	239:12:4290:4316	4686710	2	True				
ANR	4686748	Statement	PFMT64x	239:39:4317:4323	4686710	3	True				
ANR	4686749	Statement	"""\\n"""	239:46:4324:4327	4686710	4	True				
ANR	4686750	Statement	","	239:50:4328:4328	4686710	5	True				
ANR	4686751	Statement	c	239:52:4330:4330	4686710	6	True				
ANR	4686752	Statement	->	239:53:4331:4332	4686710	7	True				
ANR	4686753	Statement	eip	239:55:4333:4335	4686710	8	True				
ANR	4686754	Statement	)	239:58:4336:4336	4686710	9	True				
ANR	4686755	ExpressionStatement		239:59:4337:4337	4686710	10	True				
ANR	4686756	BreakStatement	break ;	240:3:4342:4347	4686710	11	True				
ANR	4686757	SwitchStatement	switch ( bfvm_op ( c ) )		4686710	2					
ANR	4686758	Condition	bfvm_op ( c )	242:10:4363:4373	4686710	0	True				
ANR	4686759	CallExpression	bfvm_op ( c )		4686710	0					
ANR	4686760	Callee	bfvm_op		4686710	0					
ANR	4686761	Identifier	bfvm_op		4686710	0					
ANR	4686762	ArgumentList	c		4686710	1					
ANR	4686763	Argument	c		4686710	0					
ANR	4686764	Identifier	c		4686710	0					
ANR	4686765	CompoundStatement		9:23:185:185	4686710	1					
ANR	4686766	Label	"case ',' :"	243:2:4380:4388	4686710	0	True				
ANR	4686767	ExpressionStatement	"eprintf ( ""contsc: read from input trap\\n"" )"	244:3:4393:4434	4686710	1	True				
ANR	4686768	CallExpression	"eprintf ( ""contsc: read from input trap\\n"" )"		4686710	0					
ANR	4686769	Callee	eprintf		4686710	0					
ANR	4686770	Identifier	eprintf		4686710	0					
ANR	4686771	ArgumentList	"""contsc: read from input trap\\n"""		4686710	1					
ANR	4686772	Argument	"""contsc: read from input trap\\n"""		4686710	0					
ANR	4686773	PrimaryExpression	"""contsc: read from input trap\\n"""		4686710	0					
ANR	4686774	ExpressionStatement	c -> breaked = 1	245:3:4439:4453	4686710	2	True				
ANR	4686775	AssignmentExpression	c -> breaked = 1		4686710	0		=			
ANR	4686776	PtrMemberAccess	c -> breaked		4686710	0					
ANR	4686777	Identifier	c		4686710	0					
ANR	4686778	Identifier	breaked		4686710	1					
ANR	4686779	PrimaryExpression	1		4686710	1					
ANR	4686780	ContinueStatement	continue ;	246:3:4458:4466	4686710	3	True				
ANR	4686781	Label	case '.' :	247:2:4470:4478	4686710	4	True				
ANR	4686782	ExpressionStatement	"eprintf ( ""contsc: print to screen trap\\n"" )"	248:3:4483:4525	4686710	5	True				
ANR	4686783	CallExpression	"eprintf ( ""contsc: print to screen trap\\n"" )"		4686710	0					
ANR	4686784	Callee	eprintf		4686710	0					
ANR	4686785	Identifier	eprintf		4686710	0					
ANR	4686786	ArgumentList	"""contsc: print to screen trap\\n"""		4686710	1					
ANR	4686787	Argument	"""contsc: print to screen trap\\n"""		4686710	0					
ANR	4686788	PrimaryExpression	"""contsc: print to screen trap\\n"""		4686710	0					
ANR	4686789	ExpressionStatement	c -> breaked = 1	249:3:4530:4544	4686710	6	True				
ANR	4686790	AssignmentExpression	c -> breaked = 1		4686710	0		=			
ANR	4686791	PtrMemberAccess	c -> breaked		4686710	0					
ANR	4686792	Identifier	c		4686710	0					
ANR	4686793	Identifier	breaked		4686710	1					
ANR	4686794	PrimaryExpression	1		4686710	1					
ANR	4686795	ContinueStatement	continue ;	250:3:4549:4557	4686710	7	True				
ANR	4686796	ReturnStatement	return 0 ;	253:1:4567:4575	4686710	2	True				
ANR	4686797	PrimaryExpression	0		4686710	0					
ANR	4686798	ReturnType	R_API int		4686710	1					
ANR	4686799	Identifier	bfvm_contsc		4686710	2					
ANR	4686800	ParameterList	BfvmCPU * c		4686710	3					
ANR	4686801	Parameter	BfvmCPU * c	234:22:4178:4187	4686710	0	True				
ANR	4686802	ParameterType	BfvmCPU *		4686710	0					
ANR	4686803	Identifier	c		4686710	1					
ANR	4686804	CFGEntryNode	ENTRY		4686710		True				
ANR	4686805	CFGExitNode	EXIT		4686710		True				
ANR	4686806	Symbol	bfvm_in_trap		4686710						
ANR	4686807	Symbol	c		4686710						
ANR	4686808	Symbol	bfvm_op		4686710						
ANR	4686809	Symbol	* c		4686710						
ANR	4686810	Symbol	c -> breaked		4686710						
ANR	4686811	Function	bfvm_cont	256:0:4580:4818							
ANR	4686812	FunctionDef	"bfvm_cont (BfvmCPU * c , ut64 until)"		4686811	0					
ANR	4686813	CompoundStatement		256:44:4624:4818	4686811	0					
ANR	4686814	ExpressionStatement	c -> breaked = 0	257:1:4627:4641	4686811	0	True				
ANR	4686815	AssignmentExpression	c -> breaked = 0		4686811	0		=			
ANR	4686816	PtrMemberAccess	c -> breaked		4686811	0					
ANR	4686817	Identifier	c		4686811	0					
ANR	4686818	Identifier	breaked		4686811	1					
ANR	4686819	PrimaryExpression	0		4686811	1					
ANR	4686820	WhileStatement	while ( ! c -> breaked && c -> eip != until )		4686811	1					
ANR	4686821	Condition	! c -> breaked && c -> eip != until	258:8:4651:4680	4686811	0	True				
ANR	4686822	AndExpression	! c -> breaked && c -> eip != until		4686811	0		&&			
ANR	4686823	UnaryOperationExpression	! c -> breaked		4686811	0					
ANR	4686824	UnaryOperator	!		4686811	0					
ANR	4686825	PtrMemberAccess	c -> breaked		4686811	1					
ANR	4686826	Identifier	c		4686811	0					
ANR	4686827	Identifier	breaked		4686811	1					
ANR	4686828	EqualityExpression	c -> eip != until		4686811	1		!=			
ANR	4686829	PtrMemberAccess	c -> eip		4686811	0					
ANR	4686830	Identifier	c		4686811	0					
ANR	4686831	Identifier	eip		4686811	1					
ANR	4686832	Identifier	until		4686811	1					
ANR	4686833	CompoundStatement		3:40:58:58	4686811	1					
ANR	4686834	ExpressionStatement	"bfvm_step ( c , 0 )"	259:2:4687:4703	4686811	0	True				
ANR	4686835	CallExpression	"bfvm_step ( c , 0 )"		4686811	0					
ANR	4686836	Callee	bfvm_step		4686811	0					
ANR	4686837	Identifier	bfvm_step		4686811	0					
ANR	4686838	ArgumentList	c		4686811	1					
ANR	4686839	Argument	c		4686811	0					
ANR	4686840	Identifier	c		4686811	0					
ANR	4686841	Argument	0		4686811	1					
ANR	4686842	PrimaryExpression	0		4686811	0					
ANR	4686843	IfStatement	if ( bfvm_in_trap ( c ) )		4686811	1					
ANR	4686844	Condition	bfvm_in_trap ( c )	260:6:4711:4726	4686811	0	True				
ANR	4686845	CallExpression	bfvm_in_trap ( c )		4686811	0					
ANR	4686846	Callee	bfvm_in_trap		4686811	0					
ANR	4686847	Identifier	bfvm_in_trap		4686811	0					
ANR	4686848	ArgumentList	c		4686811	1					
ANR	4686849	Argument	c		4686811	0					
ANR	4686850	Identifier	c		4686811	0					
ANR	4686851	CompoundStatement		5:24:104:104	4686811	1					
ANR	4686852	Statement	eprintf	261:3:4734:4740	4686811	0	True				
ANR	4686853	Statement	(	261:11:4742:4742	4686811	1	True				
ANR	4686854	Statement	"""Trap instruction at 0x%"""	261:12:4743:4767	4686811	2	True				
ANR	4686855	Statement	PFMT64x	261:37:4768:4774	4686811	3	True				
ANR	4686856	Statement	"""\\n"""	261:44:4775:4778	4686811	4	True				
ANR	4686857	Statement	","	261:48:4779:4779	4686811	5	True				
ANR	4686858	Statement	c	261:50:4781:4781	4686811	6	True				
ANR	4686859	Statement	->	261:51:4782:4783	4686811	7	True				
ANR	4686860	Statement	eip	261:53:4784:4786	4686811	8	True				
ANR	4686861	Statement	)	261:56:4787:4787	4686811	9	True				
ANR	4686862	ExpressionStatement		261:57:4788:4788	4686811	10	True				
ANR	4686863	BreakStatement	break ;	262:3:4793:4798	4686811	11	True				
ANR	4686864	ReturnStatement	return 0 ;	265:1:4808:4816	4686811	2	True				
ANR	4686865	PrimaryExpression	0		4686811	0					
ANR	4686866	ReturnType	R_API int		4686811	1					
ANR	4686867	Identifier	bfvm_cont		4686811	2					
ANR	4686868	ParameterList	"BfvmCPU * c , ut64 until"		4686811	3					
ANR	4686869	Parameter	BfvmCPU * c	256:20:4600:4609	4686811	0	True				
ANR	4686870	ParameterType	BfvmCPU *		4686811	0					
ANR	4686871	Identifier	c		4686811	1					
ANR	4686872	Parameter	ut64 until	256:32:4612:4621	4686811	1	True				
ANR	4686873	ParameterType	ut64		4686811	0					
ANR	4686874	Identifier	until		4686811	1					
ANR	4686875	CFGEntryNode	ENTRY		4686811		True				
ANR	4686876	CFGExitNode	EXIT		4686811		True				
ANR	4686877	Symbol	bfvm_in_trap		4686811						
ANR	4686878	Symbol	c		4686811						
ANR	4686879	Symbol	c -> eip		4686811						
ANR	4686880	Symbol	until		4686811						
ANR	4686881	Symbol	* c		4686811						
ANR	4686882	Symbol	c -> breaked		4686811						
ANR	4686883	Function	bfvm_trace	268:0:4821:4928							
ANR	4686884	FunctionDef	"bfvm_trace (BfvmCPU * c , ut64 until)"		4686883	0					
ANR	4686885	CompoundStatement		268:45:4866:4928	4686883	0					
ANR	4686886	ExpressionStatement	c -> trace = 1	269:1:4869:4879	4686883	0	True				
ANR	4686887	AssignmentExpression	c -> trace = 1		4686883	0		=			
ANR	4686888	PtrMemberAccess	c -> trace		4686883	0					
ANR	4686889	Identifier	c		4686883	0					
ANR	4686890	Identifier	trace		4686883	1					
ANR	4686891	PrimaryExpression	1		4686883	1					
ANR	4686892	ExpressionStatement	"bfvm_cont ( c , until )"	270:1:4882:4902	4686883	1	True				
ANR	4686893	CallExpression	"bfvm_cont ( c , until )"		4686883	0					
ANR	4686894	Callee	bfvm_cont		4686883	0					
ANR	4686895	Identifier	bfvm_cont		4686883	0					
ANR	4686896	ArgumentList	c		4686883	1					
ANR	4686897	Argument	c		4686883	0					
ANR	4686898	Identifier	c		4686883	0					
ANR	4686899	Argument	until		4686883	1					
ANR	4686900	Identifier	until		4686883	0					
ANR	4686901	ExpressionStatement	c -> trace = 0	271:1:4905:4915	4686883	2	True				
ANR	4686902	AssignmentExpression	c -> trace = 0		4686883	0		=			
ANR	4686903	PtrMemberAccess	c -> trace		4686883	0					
ANR	4686904	Identifier	c		4686883	0					
ANR	4686905	Identifier	trace		4686883	1					
ANR	4686906	PrimaryExpression	0		4686883	1					
ANR	4686907	ReturnStatement	return 0 ;	272:1:4918:4926	4686883	3	True				
ANR	4686908	PrimaryExpression	0		4686883	0					
ANR	4686909	ReturnType	R_API int		4686883	1					
ANR	4686910	Identifier	bfvm_trace		4686883	2					
ANR	4686911	ParameterList	"BfvmCPU * c , ut64 until"		4686883	3					
ANR	4686912	Parameter	BfvmCPU * c	268:21:4842:4851	4686883	0	True				
ANR	4686913	ParameterType	BfvmCPU *		4686883	0					
ANR	4686914	Identifier	c		4686883	1					
ANR	4686915	Parameter	ut64 until	268:33:4854:4863	4686883	1	True				
ANR	4686916	ParameterType	ut64		4686883	0					
ANR	4686917	Identifier	until		4686883	1					
ANR	4686918	CFGEntryNode	ENTRY		4686883		True				
ANR	4686919	CFGExitNode	EXIT		4686883		True				
ANR	4686920	Symbol	c		4686883						
ANR	4686921	Symbol	until		4686883						
ANR	4686922	Symbol	* c		4686883						
ANR	4686923	Symbol	c -> trace		4686883						
ANR	4686924	Function	bfvm_show_regs	275:0:4931:5452							
ANR	4686925	FunctionDef	"bfvm_show_regs (BfvmCPU * c , int rad)"		4686924	0					
ANR	4686926	CompoundStatement		275:47:4978:5452	4686924	0					
ANR	4686927	IfStatement	if ( rad )		4686924	0					
ANR	4686928	Condition	rad	276:5:4985:4987	4686924	0	True				
ANR	4686929	Identifier	rad		4686924	0					
ANR	4686930	CompoundStatement		2:10:11:11	4686924	1					
ANR	4686931	ExpressionStatement	"eprintf ( ""fs regs\\n"" )"	277:2:4994:5015	4686924	0	True				
ANR	4686932	CallExpression	"eprintf ( ""fs regs\\n"" )"		4686924	0					
ANR	4686933	Callee	eprintf		4686924	0					
ANR	4686934	Identifier	eprintf		4686924	0					
ANR	4686935	ArgumentList	"""fs regs\\n"""		4686924	1					
ANR	4686936	Argument	"""fs regs\\n"""		4686924	0					
ANR	4686937	PrimaryExpression	"""fs regs\\n"""		4686924	0					
ANR	4686938	Statement	eprintf	278:2:5019:5025	4686924	1	True				
ANR	4686939	Statement	(	278:10:5027:5027	4686924	2	True				
ANR	4686940	Statement	"""f eip @ 0x%08"""	278:11:5028:5042	4686924	3	True				
ANR	4686941	Statement	PFMT64x	278:26:5043:5049	4686924	4	True				
ANR	4686942	Statement	"""\\n"""	278:33:5050:5053	4686924	5	True				
ANR	4686943	Statement	","	278:37:5054:5054	4686924	6	True				
ANR	4686944	Statement	(	278:39:5056:5056	4686924	7	True				
ANR	4686945	Statement	ut64	278:40:5057:5060	4686924	8	True				
ANR	4686946	Statement	)	278:44:5061:5061	4686924	9	True				
ANR	4686947	Statement	c	278:45:5062:5062	4686924	10	True				
ANR	4686948	Statement	->	278:46:5063:5064	4686924	11	True				
ANR	4686949	Statement	eip	278:48:5065:5067	4686924	12	True				
ANR	4686950	Statement	)	278:51:5068:5068	4686924	13	True				
ANR	4686951	ExpressionStatement		278:52:5069:5069	4686924	14	True				
ANR	4686952	Statement	eprintf	279:2:5073:5079	4686924	15	True				
ANR	4686953	Statement	(	279:10:5081:5081	4686924	16	True				
ANR	4686954	Statement	"""f esp @ 0x%08"""	279:11:5082:5096	4686924	17	True				
ANR	4686955	Statement	PFMT64x	279:26:5097:5103	4686924	18	True				
ANR	4686956	Statement	"""\\n"""	279:33:5104:5107	4686924	19	True				
ANR	4686957	Statement	","	279:37:5108:5108	4686924	20	True				
ANR	4686958	Statement	(	279:39:5110:5110	4686924	21	True				
ANR	4686959	Statement	ut64	279:40:5111:5114	4686924	22	True				
ANR	4686960	Statement	)	279:44:5115:5115	4686924	23	True				
ANR	4686961	Statement	c	279:45:5116:5116	4686924	24	True				
ANR	4686962	Statement	->	279:46:5117:5118	4686924	25	True				
ANR	4686963	Statement	esp	279:48:5119:5121	4686924	26	True				
ANR	4686964	Statement	)	279:51:5122:5122	4686924	27	True				
ANR	4686965	ExpressionStatement		279:52:5123:5123	4686924	28	True				
ANR	4686966	Statement	eprintf	280:2:5127:5133	4686924	29	True				
ANR	4686967	Statement	(	280:10:5135:5135	4686924	30	True				
ANR	4686968	Statement	"""f ptr @ 0x%08"""	280:11:5136:5150	4686924	31	True				
ANR	4686969	Statement	PFMT64x	280:26:5151:5157	4686924	32	True				
ANR	4686970	Statement	"""\\n"""	280:33:5158:5161	4686924	33	True				
ANR	4686971	Statement	","	280:37:5162:5162	4686924	34	True				
ANR	4686972	Statement	(	280:39:5164:5164	4686924	35	True				
ANR	4686973	Statement	ut64	280:40:5165:5168	4686924	36	True				
ANR	4686974	Statement	)	280:44:5169:5169	4686924	37	True				
ANR	4686975	Statement	c	280:45:5170:5170	4686924	38	True				
ANR	4686976	Statement	->	280:46:5171:5172	4686924	39	True				
ANR	4686977	Statement	ptr	280:48:5173:5175	4686924	40	True				
ANR	4686978	Statement	+	280:51:5176:5176	4686924	41	True				
ANR	4686979	Statement	c	280:52:5177:5177	4686924	42	True				
ANR	4686980	Statement	->	280:53:5178:5179	4686924	43	True				
ANR	4686981	Statement	base	280:55:5180:5183	4686924	44	True				
ANR	4686982	Statement	)	280:59:5184:5184	4686924	45	True				
ANR	4686983	ExpressionStatement		280:60:5185:5185	4686924	46	True				
ANR	4686984	ExpressionStatement	"eprintf ( ""fs *\\n"" )"	281:2:5189:5207	4686924	47	True				
ANR	4686985	CallExpression	"eprintf ( ""fs *\\n"" )"		4686924	0					
ANR	4686986	Callee	eprintf		4686924	0					
ANR	4686987	Identifier	eprintf		4686924	0					
ANR	4686988	ArgumentList	"""fs *\\n"""		4686924	1					
ANR	4686989	Argument	"""fs *\\n"""		4686924	0					
ANR	4686990	PrimaryExpression	"""fs *\\n"""		4686924	0					
ANR	4686991	ElseStatement	else		4686924	0					
ANR	4686992	CompoundStatement		9:2:242:263	4686924	0					
ANR	4686993	IdentifierDeclStatement	ut8 ch = bfvm_get ( c ) ;	283:2:5221:5242	4686924	0	True				
ANR	4686994	IdentifierDecl	ch = bfvm_get ( c )		4686924	0					
ANR	4686995	IdentifierDeclType	ut8		4686924	0					
ANR	4686996	Identifier	ch		4686924	1					
ANR	4686997	AssignmentExpression	ch = bfvm_get ( c )		4686924	2		=			
ANR	4686998	Identifier	ch		4686924	0					
ANR	4686999	CallExpression	bfvm_get ( c )		4686924	1					
ANR	4687000	Callee	bfvm_get		4686924	0					
ANR	4687001	Identifier	bfvm_get		4686924	0					
ANR	4687002	ArgumentList	c		4686924	1					
ANR	4687003	Argument	c		4686924	0					
ANR	4687004	Identifier	c		4686924	0					
ANR	4687005	Statement	eprintf	284:2:5246:5252	4686924	1	True				
ANR	4687006	Statement	(	284:10:5254:5254	4686924	2	True				
ANR	4687007	Statement	"""  eip  0x%08"""	284:11:5255:5268	4686924	3	True				
ANR	4687008	Statement	PFMT64x	284:25:5269:5275	4686924	4	True				
ANR	4687009	Statement	"""     esp  0x%08"""	284:32:5276:5292	4686924	5	True				
ANR	4687010	Statement	PFMT64x	284:49:5293:5299	4686924	6	True				
ANR	4687011	Statement	"""\\n"""	284:56:5300:5303	4686924	7	True				
ANR	4687012	Statement	","	284:60:5304:5304	4686924	8	True				
ANR	4687013	Statement	(	285:3:5309:5309	4686924	9	True				
ANR	4687014	Statement	ut64	285:4:5310:5313	4686924	10	True				
ANR	4687015	Statement	)	285:8:5314:5314	4686924	11	True				
ANR	4687016	Statement	c	285:9:5315:5315	4686924	12	True				
ANR	4687017	Statement	->	285:10:5316:5317	4686924	13	True				
ANR	4687018	Statement	eip	285:12:5318:5320	4686924	14	True				
ANR	4687019	Statement	","	285:15:5321:5321	4686924	15	True				
ANR	4687020	Statement	(	285:17:5323:5323	4686924	16	True				
ANR	4687021	Statement	ut64	285:18:5324:5327	4686924	17	True				
ANR	4687022	Statement	)	285:22:5328:5328	4686924	18	True				
ANR	4687023	Statement	c	285:23:5329:5329	4686924	19	True				
ANR	4687024	Statement	->	285:24:5330:5331	4686924	20	True				
ANR	4687025	Statement	esp	285:26:5332:5334	4686924	21	True				
ANR	4687026	Statement	)	285:29:5335:5335	4686924	22	True				
ANR	4687027	ExpressionStatement		285:30:5336:5336	4686924	23	True				
ANR	4687028	ExpressionStatement	"eprintf ( ""  ptr  0x%08x     [ptr]  %d = 0x%02x '%c'\\n"" , ( ut32 ) c -> ptr , ch , ch , IS_PRINTABLE ( ch ) ? ch : ' ' )"	286:2:5340:5447	4686924	24	True				
ANR	4687029	CallExpression	"eprintf ( ""  ptr  0x%08x     [ptr]  %d = 0x%02x '%c'\\n"" , ( ut32 ) c -> ptr , ch , ch , IS_PRINTABLE ( ch ) ? ch : ' ' )"		4686924	0					
ANR	4687030	Callee	eprintf		4686924	0					
ANR	4687031	Identifier	eprintf		4686924	0					
ANR	4687032	ArgumentList	"""  ptr  0x%08x     [ptr]  %d = 0x%02x '%c'\\n"""		4686924	1					
ANR	4687033	Argument	"""  ptr  0x%08x     [ptr]  %d = 0x%02x '%c'\\n"""		4686924	0					
ANR	4687034	PrimaryExpression	"""  ptr  0x%08x     [ptr]  %d = 0x%02x '%c'\\n"""		4686924	0					
ANR	4687035	Argument	( ut32 ) c -> ptr		4686924	1					
ANR	4687036	CastExpression	( ut32 ) c -> ptr		4686924	0					
ANR	4687037	CastTarget	ut32		4686924	0					
ANR	4687038	PtrMemberAccess	c -> ptr		4686924	1					
ANR	4687039	Identifier	c		4686924	0					
ANR	4687040	Identifier	ptr		4686924	1					
ANR	4687041	Argument	ch		4686924	2					
ANR	4687042	Identifier	ch		4686924	0					
ANR	4687043	Argument	ch		4686924	3					
ANR	4687044	Identifier	ch		4686924	0					
ANR	4687045	Argument	IS_PRINTABLE ( ch ) ? ch : ' '		4686924	4					
ANR	4687046	ConditionalExpression	IS_PRINTABLE ( ch ) ? ch : ' '		4686924	0					
ANR	4687047	Condition	IS_PRINTABLE ( ch )		4686924	0					
ANR	4687048	CallExpression	IS_PRINTABLE ( ch )		4686924	0					
ANR	4687049	Callee	IS_PRINTABLE		4686924	0					
ANR	4687050	Identifier	IS_PRINTABLE		4686924	0					
ANR	4687051	ArgumentList	ch		4686924	1					
ANR	4687052	Argument	ch		4686924	0					
ANR	4687053	Identifier	ch		4686924	0					
ANR	4687054	Identifier	ch		4686924	1					
ANR	4687055	PrimaryExpression	' '		4686924	2					
ANR	4687056	ReturnType	R_API void		4686924	1					
ANR	4687057	Identifier	bfvm_show_regs		4686924	2					
ANR	4687058	ParameterList	"BfvmCPU * c , int rad"		4686924	3					
ANR	4687059	Parameter	BfvmCPU * c	275:26:4957:4966	4686924	0	True				
ANR	4687060	ParameterType	BfvmCPU *		4686924	0					
ANR	4687061	Identifier	c		4686924	1					
ANR	4687062	Parameter	int rad	275:38:4969:4975	4686924	1	True				
ANR	4687063	ParameterType	int		4686924	0					
ANR	4687064	Identifier	rad		4686924	1					
ANR	4687065	CFGEntryNode	ENTRY		4686924		True				
ANR	4687066	CFGExitNode	EXIT		4686924		True				
ANR	4687067	Symbol	c		4686924						
ANR	4687068	Symbol	IS_PRINTABLE		4686924						
ANR	4687069	Symbol	c -> ptr		4686924						
ANR	4687070	Symbol	rad		4686924						
ANR	4687071	Symbol	ch		4686924						
ANR	4687072	Symbol	bfvm_get		4686924						
ANR	4687073	Symbol	* c		4686924						
ANR	4687074	Function	bfvm_maps	291:0:5455:6891							
ANR	4687075	FunctionDef	"bfvm_maps (BfvmCPU * c , int rad)"		4687074	0					
ANR	4687076	CompoundStatement		291:42:5497:6891	4687074	0					
ANR	4687077	IfStatement	if ( rad )		4687074	0					
ANR	4687078	Condition	rad	292:5:5504:5506	4687074	0	True				
ANR	4687079	Identifier	rad		4687074	0					
ANR	4687080	CompoundStatement		2:10:11:11	4687074	1					
ANR	4687081	ExpressionStatement	"eprintf ( ""fs sections\\n"" )"	293:2:5513:5538	4687074	0	True				
ANR	4687082	CallExpression	"eprintf ( ""fs sections\\n"" )"		4687074	0					
ANR	4687083	Callee	eprintf		4687074	0					
ANR	4687084	Identifier	eprintf		4687074	0					
ANR	4687085	ArgumentList	"""fs sections\\n"""		4687074	1					
ANR	4687086	Argument	"""fs sections\\n"""		4687074	0					
ANR	4687087	PrimaryExpression	"""fs sections\\n"""		4687074	0					
ANR	4687088	ExpressionStatement	"eprintf ( ""e cmd.vprompt=px@screen\\n"" )"	294:2:5542:5579	4687074	1	True				
ANR	4687089	CallExpression	"eprintf ( ""e cmd.vprompt=px@screen\\n"" )"		4687074	0					
ANR	4687090	Callee	eprintf		4687074	0					
ANR	4687091	Identifier	eprintf		4687074	0					
ANR	4687092	ArgumentList	"""e cmd.vprompt=px@screen\\n"""		4687074	1					
ANR	4687093	Argument	"""e cmd.vprompt=px@screen\\n"""		4687074	0					
ANR	4687094	PrimaryExpression	"""e cmd.vprompt=px@screen\\n"""		4687074	0					
ANR	4687095	Statement	eprintf	295:2:5583:5589	4687074	2	True				
ANR	4687096	Statement	(	295:10:5591:5591	4687074	3	True				
ANR	4687097	Statement	"""f section_code @ 0x%08"""	295:11:5592:5615	4687074	4	True				
ANR	4687098	Statement	PFMT64x	295:35:5616:5622	4687074	5	True				
ANR	4687099	Statement	"""\\n"""	295:42:5623:5626	4687074	6	True				
ANR	4687100	Statement	","	295:46:5627:5627	4687074	7	True				
ANR	4687101	Statement	(	295:48:5629:5629	4687074	8	True				
ANR	4687102	Statement	ut64	295:49:5630:5633	4687074	9	True				
ANR	4687103	Statement	)	295:53:5634:5634	4687074	10	True				
ANR	4687104	Statement	BFVM_CODE_ADDR	295:54:5635:5648	4687074	11	True				
ANR	4687105	Statement	)	295:68:5649:5649	4687074	12	True				
ANR	4687106	ExpressionStatement		295:69:5650:5650	4687074	13	True				
ANR	4687107	Statement	eprintf	296:2:5654:5660	4687074	14	True				
ANR	4687108	Statement	(	296:10:5662:5662	4687074	15	True				
ANR	4687109	Statement	"""f section_code_end @ 0x%08"""	296:11:5663:5690	4687074	16	True				
ANR	4687110	Statement	PFMT64x	296:39:5691:5697	4687074	17	True				
ANR	4687111	Statement	"""\\n"""	296:46:5698:5701	4687074	18	True				
ANR	4687112	Statement	","	296:50:5702:5702	4687074	19	True				
ANR	4687113	Statement	(	296:52:5704:5704	4687074	20	True				
ANR	4687114	Statement	ut64	296:53:5705:5708	4687074	21	True				
ANR	4687115	Statement	)	296:57:5709:5709	4687074	22	True				
ANR	4687116	Statement	BFVM_CODE_ADDR	296:58:5710:5723	4687074	23	True				
ANR	4687117	Statement	+	296:72:5724:5724	4687074	24	True				
ANR	4687118	Statement	BFVM_CODE_SIZE	296:73:5725:5738	4687074	25	True				
ANR	4687119	Statement	)	296:87:5739:5739	4687074	26	True				
ANR	4687120	ExpressionStatement		296:88:5740:5740	4687074	27	True				
ANR	4687121	Statement	eprintf	297:2:5744:5750	4687074	28	True				
ANR	4687122	Statement	(	297:10:5752:5752	4687074	29	True				
ANR	4687123	Statement	"""f section_data @ 0x%08"""	297:11:5753:5776	4687074	30	True				
ANR	4687124	Statement	PFMT64x	297:35:5777:5783	4687074	31	True				
ANR	4687125	Statement	"""\\n"""	297:42:5784:5787	4687074	32	True				
ANR	4687126	Statement	","	297:46:5788:5788	4687074	33	True				
ANR	4687127	Statement	(	297:48:5790:5790	4687074	34	True				
ANR	4687128	Statement	ut64	297:49:5791:5794	4687074	35	True				
ANR	4687129	Statement	)	297:53:5795:5795	4687074	36	True				
ANR	4687130	Statement	c	297:54:5796:5796	4687074	37	True				
ANR	4687131	Statement	->	297:55:5797:5798	4687074	38	True				
ANR	4687132	Statement	base	297:57:5799:5802	4687074	39	True				
ANR	4687133	Statement	)	297:61:5803:5803	4687074	40	True				
ANR	4687134	ExpressionStatement		297:62:5804:5804	4687074	41	True				
ANR	4687135	Statement	eprintf	298:2:5808:5814	4687074	42	True				
ANR	4687136	Statement	(	298:10:5816:5816	4687074	43	True				
ANR	4687137	Statement	"""f section_data_end @ 0x%08"""	298:11:5817:5844	4687074	44	True				
ANR	4687138	Statement	PFMT64x	298:39:5845:5851	4687074	45	True				
ANR	4687139	Statement	"""\\n"""	298:46:5852:5855	4687074	46	True				
ANR	4687140	Statement	","	298:50:5856:5856	4687074	47	True				
ANR	4687141	Statement	(	298:52:5858:5858	4687074	48	True				
ANR	4687142	Statement	ut64	298:53:5859:5862	4687074	49	True				
ANR	4687143	Statement	)	298:57:5863:5863	4687074	50	True				
ANR	4687144	Statement	c	298:58:5864:5864	4687074	51	True				
ANR	4687145	Statement	->	298:59:5865:5866	4687074	52	True				
ANR	4687146	Statement	base	298:61:5867:5870	4687074	53	True				
ANR	4687147	Statement	+	298:65:5871:5871	4687074	54	True				
ANR	4687148	Statement	c	298:66:5872:5872	4687074	55	True				
ANR	4687149	Statement	->	298:67:5873:5874	4687074	56	True				
ANR	4687150	Statement	size	298:69:5875:5878	4687074	57	True				
ANR	4687151	Statement	)	298:73:5879:5879	4687074	58	True				
ANR	4687152	ExpressionStatement		298:74:5880:5880	4687074	59	True				
ANR	4687153	Statement	eprintf	299:2:5884:5890	4687074	60	True				
ANR	4687154	Statement	(	299:10:5892:5892	4687074	61	True				
ANR	4687155	Statement	"""f screen @ 0x%08"""	299:11:5893:5910	4687074	62	True				
ANR	4687156	Statement	PFMT64x	299:29:5911:5917	4687074	63	True				
ANR	4687157	Statement	"""\\n"""	299:36:5918:5921	4687074	64	True				
ANR	4687158	Statement	","	299:40:5922:5922	4687074	65	True				
ANR	4687159	Statement	(	299:42:5924:5924	4687074	66	True				
ANR	4687160	Statement	ut64	299:43:5925:5928	4687074	67	True				
ANR	4687161	Statement	)	299:47:5929:5929	4687074	68	True				
ANR	4687162	Statement	c	299:48:5930:5930	4687074	69	True				
ANR	4687163	Statement	->	299:49:5931:5932	4687074	70	True				
ANR	4687164	Statement	screen	299:51:5933:5938	4687074	71	True				
ANR	4687165	Statement	)	299:57:5939:5939	4687074	72	True				
ANR	4687166	ExpressionStatement		299:58:5940:5940	4687074	73	True				
ANR	4687167	Statement	eprintf	300:2:5944:5950	4687074	74	True				
ANR	4687168	Statement	(	300:10:5952:5952	4687074	75	True				
ANR	4687169	Statement	"""f section_screen @ 0x%08"""	300:11:5953:5978	4687074	76	True				
ANR	4687170	Statement	PFMT64x	300:37:5979:5985	4687074	77	True				
ANR	4687171	Statement	"""\\n"""	300:44:5986:5989	4687074	78	True				
ANR	4687172	Statement	","	300:48:5990:5990	4687074	79	True				
ANR	4687173	Statement	(	300:50:5992:5992	4687074	80	True				
ANR	4687174	Statement	ut64	300:51:5993:5996	4687074	81	True				
ANR	4687175	Statement	)	300:55:5997:5997	4687074	82	True				
ANR	4687176	Statement	c	300:56:5998:5998	4687074	83	True				
ANR	4687177	Statement	->	300:57:5999:6000	4687074	84	True				
ANR	4687178	Statement	screen	300:59:6001:6006	4687074	85	True				
ANR	4687179	Statement	)	300:65:6007:6007	4687074	86	True				
ANR	4687180	ExpressionStatement		300:66:6008:6008	4687074	87	True				
ANR	4687181	Statement	eprintf	301:2:6012:6018	4687074	88	True				
ANR	4687182	Statement	(	301:10:6020:6020	4687074	89	True				
ANR	4687183	Statement	"""f section_screen_end @ 0x%08"""	301:11:6021:6050	4687074	90	True				
ANR	4687184	Statement	PFMT64x	301:41:6051:6057	4687074	91	True				
ANR	4687185	Statement	"""\\n"""	301:48:6058:6061	4687074	92	True				
ANR	4687186	Statement	","	301:52:6062:6062	4687074	93	True				
ANR	4687187	Statement	(	301:54:6064:6064	4687074	94	True				
ANR	4687188	Statement	ut64	301:55:6065:6068	4687074	95	True				
ANR	4687189	Statement	)	301:59:6069:6069	4687074	96	True				
ANR	4687190	Statement	c	301:60:6070:6070	4687074	97	True				
ANR	4687191	Statement	->	301:61:6071:6072	4687074	98	True				
ANR	4687192	Statement	screen	301:63:6073:6078	4687074	99	True				
ANR	4687193	Statement	+	301:69:6079:6079	4687074	100	True				
ANR	4687194	Statement	c	301:70:6080:6080	4687074	101	True				
ANR	4687195	Statement	->	301:71:6081:6082	4687074	102	True				
ANR	4687196	Statement	screen_size	301:73:6083:6093	4687074	103	True				
ANR	4687197	Statement	)	301:84:6094:6094	4687074	104	True				
ANR	4687198	ExpressionStatement		301:85:6095:6095	4687074	105	True				
ANR	4687199	Statement	eprintf	302:2:6099:6105	4687074	106	True				
ANR	4687200	Statement	(	302:10:6107:6107	4687074	107	True				
ANR	4687201	Statement	"""f input @ 0x%08"""	302:11:6108:6124	4687074	108	True				
ANR	4687202	Statement	PFMT64x	302:28:6125:6131	4687074	109	True				
ANR	4687203	Statement	"""\\n"""	302:35:6132:6135	4687074	110	True				
ANR	4687204	Statement	","	302:39:6136:6136	4687074	111	True				
ANR	4687205	Statement	(	302:41:6138:6138	4687074	112	True				
ANR	4687206	Statement	ut64	302:42:6139:6142	4687074	113	True				
ANR	4687207	Statement	)	302:46:6143:6143	4687074	114	True				
ANR	4687208	Statement	c	302:47:6144:6144	4687074	115	True				
ANR	4687209	Statement	->	302:48:6145:6146	4687074	116	True				
ANR	4687210	Statement	input	302:50:6147:6151	4687074	117	True				
ANR	4687211	Statement	)	302:55:6152:6152	4687074	118	True				
ANR	4687212	ExpressionStatement		302:56:6153:6153	4687074	119	True				
ANR	4687213	Statement	eprintf	303:2:6157:6163	4687074	120	True				
ANR	4687214	Statement	(	303:10:6165:6165	4687074	121	True				
ANR	4687215	Statement	"""f section_input @ 0x%08"""	303:11:6166:6190	4687074	122	True				
ANR	4687216	Statement	PFMT64x	303:36:6191:6197	4687074	123	True				
ANR	4687217	Statement	"""\\n"""	303:43:6198:6201	4687074	124	True				
ANR	4687218	Statement	","	303:47:6202:6202	4687074	125	True				
ANR	4687219	Statement	(	303:49:6204:6204	4687074	126	True				
ANR	4687220	Statement	ut64	303:50:6205:6208	4687074	127	True				
ANR	4687221	Statement	)	303:54:6209:6209	4687074	128	True				
ANR	4687222	Statement	c	303:55:6210:6210	4687074	129	True				
ANR	4687223	Statement	->	303:56:6211:6212	4687074	130	True				
ANR	4687224	Statement	input	303:58:6213:6217	4687074	131	True				
ANR	4687225	Statement	)	303:63:6218:6218	4687074	132	True				
ANR	4687226	ExpressionStatement		303:64:6219:6219	4687074	133	True				
ANR	4687227	Statement	eprintf	304:2:6223:6229	4687074	134	True				
ANR	4687228	Statement	(	304:10:6231:6231	4687074	135	True				
ANR	4687229	Statement	"""f section_input_end @ 0x%08"""	304:11:6232:6260	4687074	136	True				
ANR	4687230	Statement	PFMT64x	304:40:6261:6267	4687074	137	True				
ANR	4687231	Statement	"""\\n"""	304:47:6268:6271	4687074	138	True				
ANR	4687232	Statement	","	304:51:6272:6272	4687074	139	True				
ANR	4687233	Statement	(	304:53:6274:6274	4687074	140	True				
ANR	4687234	Statement	ut64	304:54:6275:6278	4687074	141	True				
ANR	4687235	Statement	)	304:58:6279:6279	4687074	142	True				
ANR	4687236	Statement	c	304:59:6280:6280	4687074	143	True				
ANR	4687237	Statement	->	304:60:6281:6282	4687074	144	True				
ANR	4687238	Statement	input	304:62:6283:6287	4687074	145	True				
ANR	4687239	Statement	+	304:67:6288:6288	4687074	146	True				
ANR	4687240	Statement	c	304:68:6289:6289	4687074	147	True				
ANR	4687241	Statement	->	304:69:6290:6291	4687074	148	True				
ANR	4687242	Statement	input_size	304:71:6292:6301	4687074	149	True				
ANR	4687243	Statement	)	304:81:6302:6302	4687074	150	True				
ANR	4687244	ExpressionStatement		304:82:6303:6303	4687074	151	True				
ANR	4687245	ExpressionStatement	"eprintf ( ""fs *\\n"" )"	305:2:6307:6325	4687074	152	True				
ANR	4687246	CallExpression	"eprintf ( ""fs *\\n"" )"		4687074	0					
ANR	4687247	Callee	eprintf		4687074	0					
ANR	4687248	Identifier	eprintf		4687074	0					
ANR	4687249	ArgumentList	"""fs *\\n"""		4687074	1					
ANR	4687250	Argument	"""fs *\\n"""		4687074	0					
ANR	4687251	PrimaryExpression	"""fs *\\n"""		4687074	0					
ANR	4687252	ElseStatement	else		4687074	0					
ANR	4687253	CompoundStatement		16:8:837:837	4687074	0					
ANR	4687254	Statement	eprintf	307:2:6339:6345	4687074	0	True				
ANR	4687255	Statement	(	307:10:6347:6347	4687074	1	True				
ANR	4687256	Statement	"""0x%08"""	307:11:6348:6354	4687074	2	True				
ANR	4687257	Statement	PFMT64x	307:18:6355:6361	4687074	3	True				
ANR	4687258	Statement	""" - 0x%08"""	307:25:6362:6371	4687074	4	True				
ANR	4687259	Statement	PFMT64x	307:35:6372:6378	4687074	5	True				
ANR	4687260	Statement	""" rwxu 0x%08"""	307:42:6379:6391	4687074	6	True				
ANR	4687261	Statement	PFMT64x	307:55:6392:6398	4687074	7	True				
ANR	4687262	Statement	""" .code\\n"""	307:62:6399:6408	4687074	8	True				
ANR	4687263	Statement	","	307:72:6409:6409	4687074	9	True				
ANR	4687264	Statement	(	308:3:6414:6414	4687074	10	True				
ANR	4687265	Statement	ut64	308:4:6415:6418	4687074	11	True				
ANR	4687266	Statement	)	308:8:6419:6419	4687074	12	True				
ANR	4687267	Statement	0	308:9:6420:6420	4687074	13	True				
ANR	4687268	Statement	","	308:10:6421:6421	4687074	14	True				
ANR	4687269	Statement	(	308:12:6423:6423	4687074	15	True				
ANR	4687270	Statement	ut64	308:13:6424:6427	4687074	16	True				
ANR	4687271	Statement	)	308:17:6428:6428	4687074	17	True				
ANR	4687272	Statement	c	308:18:6429:6429	4687074	18	True				
ANR	4687273	Statement	->	308:19:6430:6431	4687074	19	True				
ANR	4687274	Statement	size	308:21:6432:6435	4687074	20	True				
ANR	4687275	Statement	","	308:25:6436:6436	4687074	21	True				
ANR	4687276	Statement	(	308:27:6438:6438	4687074	22	True				
ANR	4687277	Statement	ut64	308:28:6439:6442	4687074	23	True				
ANR	4687278	Statement	)	308:32:6443:6443	4687074	24	True				
ANR	4687279	Statement	c	308:33:6444:6444	4687074	25	True				
ANR	4687280	Statement	->	308:34:6445:6446	4687074	26	True				
ANR	4687281	Statement	size	308:36:6447:6450	4687074	27	True				
ANR	4687282	Statement	)	308:40:6451:6451	4687074	28	True				
ANR	4687283	ExpressionStatement		308:41:6452:6452	4687074	29	True				
ANR	4687284	Statement	eprintf	309:2:6456:6462	4687074	30	True				
ANR	4687285	Statement	(	309:10:6464:6464	4687074	31	True				
ANR	4687286	Statement	"""0x%08"""	309:11:6465:6471	4687074	32	True				
ANR	4687287	Statement	PFMT64x	309:18:6472:6478	4687074	33	True				
ANR	4687288	Statement	""" - 0x%08"""	309:25:6479:6488	4687074	34	True				
ANR	4687289	Statement	PFMT64x	309:35:6489:6495	4687074	35	True				
ANR	4687290	Statement	""" rw-- 0x%08"""	309:42:6496:6508	4687074	36	True				
ANR	4687291	Statement	PFMT64x	309:55:6509:6515	4687074	37	True				
ANR	4687292	Statement	""" .data\\n"""	309:62:6516:6525	4687074	38	True				
ANR	4687293	Statement	","	309:72:6526:6526	4687074	39	True				
ANR	4687294	Statement	(	310:3:6531:6531	4687074	40	True				
ANR	4687295	Statement	ut64	310:4:6532:6535	4687074	41	True				
ANR	4687296	Statement	)	310:8:6536:6536	4687074	42	True				
ANR	4687297	Statement	c	310:9:6537:6537	4687074	43	True				
ANR	4687298	Statement	->	310:10:6538:6539	4687074	44	True				
ANR	4687299	Statement	base	310:12:6540:6543	4687074	45	True				
ANR	4687300	Statement	","	310:16:6544:6544	4687074	46	True				
ANR	4687301	Statement	(	310:18:6546:6546	4687074	47	True				
ANR	4687302	Statement	ut64	310:19:6547:6550	4687074	48	True				
ANR	4687303	Statement	)	310:23:6551:6551	4687074	49	True				
ANR	4687304	Statement	(	310:24:6552:6552	4687074	50	True				
ANR	4687305	Statement	c	310:25:6553:6553	4687074	51	True				
ANR	4687306	Statement	->	310:26:6554:6555	4687074	52	True				
ANR	4687307	Statement	base	310:28:6556:6559	4687074	53	True				
ANR	4687308	Statement	+	310:32:6560:6560	4687074	54	True				
ANR	4687309	Statement	c	310:33:6561:6561	4687074	55	True				
ANR	4687310	Statement	->	310:34:6562:6563	4687074	56	True				
ANR	4687311	Statement	size	310:36:6564:6567	4687074	57	True				
ANR	4687312	Statement	)	310:40:6568:6568	4687074	58	True				
ANR	4687313	Statement	","	310:41:6569:6569	4687074	59	True				
ANR	4687314	Statement	(	310:43:6571:6571	4687074	60	True				
ANR	4687315	Statement	ut64	310:44:6572:6575	4687074	61	True				
ANR	4687316	Statement	)	310:48:6576:6576	4687074	62	True				
ANR	4687317	Statement	c	310:49:6577:6577	4687074	63	True				
ANR	4687318	Statement	->	310:50:6578:6579	4687074	64	True				
ANR	4687319	Statement	size	310:52:6580:6583	4687074	65	True				
ANR	4687320	Statement	)	310:56:6584:6584	4687074	66	True				
ANR	4687321	ExpressionStatement		310:57:6585:6585	4687074	67	True				
ANR	4687322	Statement	eprintf	311:2:6589:6595	4687074	68	True				
ANR	4687323	Statement	(	311:10:6597:6597	4687074	69	True				
ANR	4687324	Statement	"""0x%08"""	311:11:6598:6604	4687074	70	True				
ANR	4687325	Statement	PFMT64x	311:18:6605:6611	4687074	71	True				
ANR	4687326	Statement	""" - 0x%08"""	311:25:6612:6621	4687074	72	True				
ANR	4687327	Statement	PFMT64x	311:35:6622:6628	4687074	73	True				
ANR	4687328	Statement	""" rw-- 0x%08"""	311:42:6629:6641	4687074	74	True				
ANR	4687329	Statement	PFMT64x	311:55:6642:6648	4687074	75	True				
ANR	4687330	Statement	""" .screen\\n"""	311:62:6649:6660	4687074	76	True				
ANR	4687331	Statement	","	311:74:6661:6661	4687074	77	True				
ANR	4687332	Statement	(	312:3:6666:6666	4687074	78	True				
ANR	4687333	Statement	ut64	312:4:6667:6670	4687074	79	True				
ANR	4687334	Statement	)	312:8:6671:6671	4687074	80	True				
ANR	4687335	Statement	c	312:9:6672:6672	4687074	81	True				
ANR	4687336	Statement	->	312:10:6673:6674	4687074	82	True				
ANR	4687337	Statement	screen	312:12:6675:6680	4687074	83	True				
ANR	4687338	Statement	","	312:18:6681:6681	4687074	84	True				
ANR	4687339	Statement	(	312:20:6683:6683	4687074	85	True				
ANR	4687340	Statement	ut64	312:21:6684:6687	4687074	86	True				
ANR	4687341	Statement	)	312:25:6688:6688	4687074	87	True				
ANR	4687342	Statement	(	312:26:6689:6689	4687074	88	True				
ANR	4687343	Statement	c	312:27:6690:6690	4687074	89	True				
ANR	4687344	Statement	->	312:28:6691:6692	4687074	90	True				
ANR	4687345	Statement	screen	312:30:6693:6698	4687074	91	True				
ANR	4687346	Statement	+	312:36:6699:6699	4687074	92	True				
ANR	4687347	Statement	c	312:37:6700:6700	4687074	93	True				
ANR	4687348	Statement	->	312:38:6701:6702	4687074	94	True				
ANR	4687349	Statement	screen_size	312:40:6703:6713	4687074	95	True				
ANR	4687350	Statement	)	312:51:6714:6714	4687074	96	True				
ANR	4687351	Statement	","	312:52:6715:6715	4687074	97	True				
ANR	4687352	Statement	(	312:54:6717:6717	4687074	98	True				
ANR	4687353	Statement	ut64	312:55:6718:6721	4687074	99	True				
ANR	4687354	Statement	)	312:59:6722:6722	4687074	100	True				
ANR	4687355	Statement	c	312:60:6723:6723	4687074	101	True				
ANR	4687356	Statement	->	312:61:6724:6725	4687074	102	True				
ANR	4687357	Statement	screen_size	312:63:6726:6736	4687074	103	True				
ANR	4687358	Statement	)	312:74:6737:6737	4687074	104	True				
ANR	4687359	ExpressionStatement		312:75:6738:6738	4687074	105	True				
ANR	4687360	Statement	eprintf	313:2:6742:6748	4687074	106	True				
ANR	4687361	Statement	(	313:10:6750:6750	4687074	107	True				
ANR	4687362	Statement	"""0x%08"""	313:11:6751:6757	4687074	108	True				
ANR	4687363	Statement	PFMT64x	313:18:6758:6764	4687074	109	True				
ANR	4687364	Statement	""" - 0x%08"""	313:25:6765:6774	4687074	110	True				
ANR	4687365	Statement	PFMT64x	313:35:6775:6781	4687074	111	True				
ANR	4687366	Statement	""" rw-- 0x%08"""	313:42:6782:6794	4687074	112	True				
ANR	4687367	Statement	PFMT64x	313:55:6795:6801	4687074	113	True				
ANR	4687368	Statement	""" .input\\n"""	313:62:6802:6812	4687074	114	True				
ANR	4687369	Statement	","	313:73:6813:6813	4687074	115	True				
ANR	4687370	Statement	(	314:3:6818:6818	4687074	116	True				
ANR	4687371	Statement	ut64	314:4:6819:6822	4687074	117	True				
ANR	4687372	Statement	)	314:8:6823:6823	4687074	118	True				
ANR	4687373	Statement	c	314:9:6824:6824	4687074	119	True				
ANR	4687374	Statement	->	314:10:6825:6826	4687074	120	True				
ANR	4687375	Statement	input	314:12:6827:6831	4687074	121	True				
ANR	4687376	Statement	","	314:17:6832:6832	4687074	122	True				
ANR	4687377	Statement	(	314:19:6834:6834	4687074	123	True				
ANR	4687378	Statement	ut64	314:20:6835:6838	4687074	124	True				
ANR	4687379	Statement	)	314:24:6839:6839	4687074	125	True				
ANR	4687380	Statement	(	314:25:6840:6840	4687074	126	True				
ANR	4687381	Statement	c	314:26:6841:6841	4687074	127	True				
ANR	4687382	Statement	->	314:27:6842:6843	4687074	128	True				
ANR	4687383	Statement	input	314:29:6844:6848	4687074	129	True				
ANR	4687384	Statement	+	314:34:6849:6849	4687074	130	True				
ANR	4687385	Statement	c	314:35:6850:6850	4687074	131	True				
ANR	4687386	Statement	->	314:36:6851:6852	4687074	132	True				
ANR	4687387	Statement	input_size	314:38:6853:6862	4687074	133	True				
ANR	4687388	Statement	)	314:48:6863:6863	4687074	134	True				
ANR	4687389	Statement	","	314:49:6864:6864	4687074	135	True				
ANR	4687390	Statement	(	314:51:6866:6866	4687074	136	True				
ANR	4687391	Statement	ut64	314:52:6867:6870	4687074	137	True				
ANR	4687392	Statement	)	314:56:6871:6871	4687074	138	True				
ANR	4687393	Statement	c	314:57:6872:6872	4687074	139	True				
ANR	4687394	Statement	->	314:58:6873:6874	4687074	140	True				
ANR	4687395	Statement	input_size	314:60:6875:6884	4687074	141	True				
ANR	4687396	Statement	)	314:70:6885:6885	4687074	142	True				
ANR	4687397	ExpressionStatement		314:71:6886:6886	4687074	143	True				
ANR	4687398	ReturnType	R_API void		4687074	1					
ANR	4687399	Identifier	bfvm_maps		4687074	2					
ANR	4687400	ParameterList	"BfvmCPU * c , int rad"		4687074	3					
ANR	4687401	Parameter	BfvmCPU * c	291:21:5476:5485	4687074	0	True				
ANR	4687402	ParameterType	BfvmCPU *		4687074	0					
ANR	4687403	Identifier	c		4687074	1					
ANR	4687404	Parameter	int rad	291:33:5488:5494	4687074	1	True				
ANR	4687405	ParameterType	int		4687074	0					
ANR	4687406	Identifier	rad		4687074	1					
ANR	4687407	CFGEntryNode	ENTRY		4687074		True				
ANR	4687408	CFGExitNode	EXIT		4687074		True				
ANR	4687409	Symbol	c		4687074						
ANR	4687410	Symbol	rad		4687074						
