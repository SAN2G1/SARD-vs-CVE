command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	464786	File	data/converged/CVE-2019-16718~_radare2/be_arm.c								
ANR	464787	Function	db_get_inst	57:0:1344:1536							
ANR	464788	FunctionDef	"db_get_inst (const ut8 * buf , int size)"		464787	0					
ANR	464789	CompoundStatement		57:50:1394:1536	464787	0					
ANR	464790	IdentifierDeclStatement	ut32 result = 0 ;	58:2:1398:1413	464787	0	True				
ANR	464791	IdentifierDecl	result = 0		464787	0					
ANR	464792	IdentifierDeclType	ut32		464787	0					
ANR	464793	Identifier	result		464787	1					
ANR	464794	AssignmentExpression	result = 0		464787	2		=			
ANR	464795	Identifier	result		464787	0					
ANR	464796	PrimaryExpression	0		464787	1					
ANR	464797	SwitchStatement	switch ( size )		464787	1					
ANR	464798	Condition	size	60:9:1425:1428	464787	0	True				
ANR	464799	Identifier	size		464787	0					
ANR	464800	CompoundStatement		4:15:36:36	464787	1					
ANR	464801	Label	case 4 :	61:1:1434:1440	464787	0	True				
ANR	464802	ExpressionStatement	result = * ( ut32 * ) buf	62:2:1444:1464	464787	1	True				
ANR	464803	AssignmentExpression	result = * ( ut32 * ) buf		464787	0		=			
ANR	464804	Identifier	result		464787	0					
ANR	464805	UnaryOperationExpression	* ( ut32 * ) buf		464787	1					
ANR	464806	UnaryOperator	*		464787	0					
ANR	464807	CastExpression	( ut32 * ) buf		464787	1					
ANR	464808	CastTarget	ut32 *		464787	0					
ANR	464809	Identifier	buf		464787	1					
ANR	464810	BreakStatement	break ;	63:2:1468:1473	464787	2	True				
ANR	464811	Label	case 2 :	64:1:1476:1482	464787	3	True				
ANR	464812	ExpressionStatement	result = * ( ut16 * ) buf	65:2:1486:1506	464787	4	True				
ANR	464813	AssignmentExpression	result = * ( ut16 * ) buf		464787	0		=			
ANR	464814	Identifier	result		464787	0					
ANR	464815	UnaryOperationExpression	* ( ut16 * ) buf		464787	1					
ANR	464816	UnaryOperator	*		464787	0					
ANR	464817	CastExpression	( ut16 * ) buf		464787	1					
ANR	464818	CastTarget	ut16 *		464787	0					
ANR	464819	Identifier	buf		464787	1					
ANR	464820	BreakStatement	break ;	66:2:1510:1515	464787	5	True				
ANR	464821	ReturnStatement	return result ;	68:1:1521:1534	464787	2	True				
ANR	464822	Identifier	result		464787	0					
ANR	464823	ReturnType	static ut32		464787	1					
ANR	464824	Identifier	db_get_inst		464787	2					
ANR	464825	ParameterList	"const ut8 * buf , int size"		464787	3					
ANR	464826	Parameter	const ut8 * buf	57:24:1368:1381	464787	0	True				
ANR	464827	ParameterType	const ut8 *		464787	0					
ANR	464828	Identifier	buf		464787	1					
ANR	464829	Parameter	int size	57:40:1384:1391	464787	1	True				
ANR	464830	ParameterType	int		464787	0					
ANR	464831	Identifier	size		464787	1					
ANR	464832	CFGEntryNode	ENTRY		464787		True				
ANR	464833	CFGExitNode	EXIT		464787		True				
ANR	464834	Symbol	result		464787						
ANR	464835	Symbol	buf		464787						
ANR	464836	Symbol	* buf		464787						
ANR	464837	Symbol	* ( ut16 * ) buf		464787						
ANR	464838	Symbol	size		464787						
ANR	464839	Symbol	* ( ut32 * ) buf		464787						
ANR	464840	Function	arm_disasm_branch	71:0:1539:1968							
ANR	464841	FunctionDef	"arm_disasm_branch (struct winedbg_arm_insn * arminsn , ut32 inst)"		464840	0					
ANR	464842	CompoundStatement		71:75:1614:1968	464840	0					
ANR	464843	IdentifierDeclStatement	short link = ( inst >> 24 ) & 0x01 ;	72:1:1617:1649	464840	0	True				
ANR	464844	IdentifierDecl	link = ( inst >> 24 ) & 0x01		464840	0					
ANR	464845	IdentifierDeclType	short		464840	0					
ANR	464846	Identifier	link		464840	1					
ANR	464847	AssignmentExpression	link = ( inst >> 24 ) & 0x01		464840	2		=			
ANR	464848	Identifier	link		464840	0					
ANR	464849	BitAndExpression	( inst >> 24 ) & 0x01		464840	1		&			
ANR	464850	ShiftExpression	inst >> 24		464840	0		>>			
ANR	464851	Identifier	inst		464840	0					
ANR	464852	PrimaryExpression	24		464840	1					
ANR	464853	PrimaryExpression	0x01		464840	1					
ANR	464854	IdentifierDeclStatement	int offset = ( inst << 2 ) & 0x03ffffff ;	73:1:1652:1689	464840	1	True				
ANR	464855	IdentifierDecl	offset = ( inst << 2 ) & 0x03ffffff		464840	0					
ANR	464856	IdentifierDeclType	int		464840	0					
ANR	464857	Identifier	offset		464840	1					
ANR	464858	AssignmentExpression	offset = ( inst << 2 ) & 0x03ffffff		464840	2		=			
ANR	464859	Identifier	offset		464840	0					
ANR	464860	BitAndExpression	( inst << 2 ) & 0x03ffffff		464840	1		&			
ANR	464861	ShiftExpression	inst << 2		464840	0		<<			
ANR	464862	Identifier	inst		464840	0					
ANR	464863	PrimaryExpression	2		464840	1					
ANR	464864	PrimaryExpression	0x03ffffff		464840	1					
ANR	464865	IfStatement	if ( offset & 0x02000000 )		464840	2					
ANR	464866	Condition	offset & 0x02000000	75:5:1697:1715	464840	0	True				
ANR	464867	BitAndExpression	offset & 0x02000000		464840	0		&			
ANR	464868	Identifier	offset		464840	0					
ANR	464869	PrimaryExpression	0x02000000		464840	1					
ANR	464870	CompoundStatement		5:25:102:102	464840	1					
ANR	464871	ExpressionStatement	offset |= 0xfc000000	76:2:1721:1741	464840	0	True				
ANR	464872	AssignmentExpression	offset |= 0xfc000000		464840	0		|=			
ANR	464873	Identifier	offset		464840	0					
ANR	464874	PrimaryExpression	0xfc000000		464840	1					
ANR	464875	ExpressionStatement	offset += 8	78:1:1747:1758	464840	3	True				
ANR	464876	AssignmentExpression	offset += 8		464840	0		+=			
ANR	464877	Identifier	offset		464840	0					
ANR	464878	PrimaryExpression	8		464840	1					
ANR	464879	Statement	arminsn	79:1:1761:1767	464840	4	True				
ANR	464880	Statement	->	79:8:1768:1769	464840	5	True				
ANR	464881	Statement	str_asm	79:10:1770:1776	464840	6	True				
ANR	464882	Statement	=	79:18:1778:1778	464840	7	True				
ANR	464883	Statement	r_str_appendf	79:20:1780:1792	464840	8	True				
ANR	464884	Statement	(	79:34:1794:1794	464840	9	True				
ANR	464885	Statement	arminsn	79:35:1795:1801	464840	10	True				
ANR	464886	Statement	->	79:42:1802:1803	464840	11	True				
ANR	464887	Statement	str_asm	79:44:1804:1810	464840	12	True				
ANR	464888	Statement	","	79:51:1811:1811	464840	13	True				
ANR	464889	Statement	"""b%s%s 0x%"""	79:53:1813:1823	464840	14	True				
ANR	464890	Statement	PFMT64x	79:64:1824:1830	464840	15	True				
ANR	464891	Statement	","	79:71:1831:1831	464840	16	True				
ANR	464892	Statement	link	79:73:1833:1836	464840	17	True				
ANR	464893	Statement	?	79:78:1838:1838	464840	18	True				
ANR	464894	Statement	"""l"""	79:80:1840:1842	464840	19	True				
ANR	464895	Statement	:	79:84:1844:1844	464840	20	True				
ANR	464896	Statement	""""""	79:86:1846:1847	464840	21	True				
ANR	464897	Statement	","	79:88:1848:1848	464840	22	True				
ANR	464898	Statement	get_cond	79:90:1850:1857	464840	23	True				
ANR	464899	Statement	(	79:99:1859:1859	464840	24	True				
ANR	464900	Statement	inst	79:100:1860:1863	464840	25	True				
ANR	464901	Statement	)	79:104:1864:1864	464840	26	True				
ANR	464902	Statement	","	79:105:1865:1865	464840	27	True				
ANR	464903	Statement	arminsn	79:107:1867:1873	464840	28	True				
ANR	464904	Statement	->	79:114:1874:1875	464840	29	True				
ANR	464905	Statement	pc	79:116:1876:1877	464840	30	True				
ANR	464906	Statement	+	79:118:1878:1878	464840	31	True				
ANR	464907	Statement	offset	79:119:1879:1884	464840	32	True				
ANR	464908	Statement	)	79:125:1885:1885	464840	33	True				
ANR	464909	ExpressionStatement		79:126:1886:1886	464840	34	True				
ANR	464910	ExpressionStatement	arminsn -> jmp = arminsn -> pc + offset	81:1:1890:1923	464840	35	True				
ANR	464911	AssignmentExpression	arminsn -> jmp = arminsn -> pc + offset		464840	0		=			
ANR	464912	PtrMemberAccess	arminsn -> jmp		464840	0					
ANR	464913	Identifier	arminsn		464840	0					
ANR	464914	Identifier	jmp		464840	1					
ANR	464915	AdditiveExpression	arminsn -> pc + offset		464840	1		+			
ANR	464916	PtrMemberAccess	arminsn -> pc		464840	0					
ANR	464917	Identifier	arminsn		464840	0					
ANR	464918	Identifier	pc		464840	1					
ANR	464919	Identifier	offset		464840	1					
ANR	464920	ExpressionStatement	arminsn -> fail = arminsn -> pc + 4	82:1:1926:1955	464840	36	True				
ANR	464921	AssignmentExpression	arminsn -> fail = arminsn -> pc + 4		464840	0		=			
ANR	464922	PtrMemberAccess	arminsn -> fail		464840	0					
ANR	464923	Identifier	arminsn		464840	0					
ANR	464924	Identifier	fail		464840	1					
ANR	464925	AdditiveExpression	arminsn -> pc + 4		464840	1		+			
ANR	464926	PtrMemberAccess	arminsn -> pc		464840	0					
ANR	464927	Identifier	arminsn		464840	0					
ANR	464928	Identifier	pc		464840	1					
ANR	464929	PrimaryExpression	4		464840	1					
ANR	464930	ReturnStatement	return 0 ;	83:1:1958:1966	464840	37	True				
ANR	464931	PrimaryExpression	0		464840	0					
ANR	464932	ReturnType	static ut32		464840	1					
ANR	464933	Identifier	arm_disasm_branch		464840	2					
ANR	464934	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		464840	3					
ANR	464935	Parameter	struct winedbg_arm_insn * arminsn	71:30:1569:1600	464840	0	True				
ANR	464936	ParameterType	struct winedbg_arm_insn *		464840	0					
ANR	464937	Identifier	arminsn		464840	1					
ANR	464938	Parameter	ut32 inst	71:64:1603:1611	464840	1	True				
ANR	464939	ParameterType	ut32		464840	0					
ANR	464940	Identifier	inst		464840	1					
ANR	464941	CFGEntryNode	ENTRY		464840		True				
ANR	464942	CFGExitNode	EXIT		464840		True				
ANR	464943	Symbol	* arminsn		464840						
ANR	464944	Symbol	arminsn -> pc		464840						
ANR	464945	Symbol	offset		464840						
ANR	464946	Symbol	inst		464840						
ANR	464947	Symbol	link		464840						
ANR	464948	Symbol	arminsn		464840						
ANR	464949	Symbol	arminsn -> fail		464840						
ANR	464950	Symbol	arminsn -> jmp		464840						
ANR	464951	Function	arm_disasm_mul	86:0:1971:2635							
ANR	464952	FunctionDef	"arm_disasm_mul (struct winedbg_arm_insn * arminsn , ut32 inst)"		464951	0					
ANR	464953	CompoundStatement		86:72:2043:2635	464951	0					
ANR	464954	IdentifierDeclStatement	short accu = ( inst >> 21 ) & 0x01 ;	87:1:2046:2078	464951	0	True				
ANR	464955	IdentifierDecl	accu = ( inst >> 21 ) & 0x01		464951	0					
ANR	464956	IdentifierDeclType	short		464951	0					
ANR	464957	Identifier	accu		464951	1					
ANR	464958	AssignmentExpression	accu = ( inst >> 21 ) & 0x01		464951	2		=			
ANR	464959	Identifier	accu		464951	0					
ANR	464960	BitAndExpression	( inst >> 21 ) & 0x01		464951	1		&			
ANR	464961	ShiftExpression	inst >> 21		464951	0		>>			
ANR	464962	Identifier	inst		464951	0					
ANR	464963	PrimaryExpression	21		464951	1					
ANR	464964	PrimaryExpression	0x01		464951	1					
ANR	464965	IdentifierDeclStatement	short condcodes = ( inst >> 20 ) & 0x01 ;	88:1:2081:2118	464951	1	True				
ANR	464966	IdentifierDecl	condcodes = ( inst >> 20 ) & 0x01		464951	0					
ANR	464967	IdentifierDeclType	short		464951	0					
ANR	464968	Identifier	condcodes		464951	1					
ANR	464969	AssignmentExpression	condcodes = ( inst >> 20 ) & 0x01		464951	2		=			
ANR	464970	Identifier	condcodes		464951	0					
ANR	464971	BitAndExpression	( inst >> 20 ) & 0x01		464951	1		&			
ANR	464972	ShiftExpression	inst >> 20		464951	0		>>			
ANR	464973	Identifier	inst		464951	0					
ANR	464974	PrimaryExpression	20		464951	1					
ANR	464975	PrimaryExpression	0x01		464951	1					
ANR	464976	IfStatement	if ( accu )		464951	2					
ANR	464977	Condition	accu	90:5:2126:2129	464951	0	True				
ANR	464978	Identifier	accu		464951	0					
ANR	464979	CompoundStatement		5:11:88:88	464951	1					
ANR	464980	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mla%s%s %s, %s, %s, %s"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"	91:2:2136:2388	464951	0	True				
ANR	464981	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mla%s%s %s, %s, %s, %s"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"		464951	0		=			
ANR	464982	PtrMemberAccess	arminsn -> str_asm		464951	0					
ANR	464983	Identifier	arminsn		464951	0					
ANR	464984	Identifier	str_asm		464951	1					
ANR	464985	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mla%s%s %s, %s, %s, %s"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"		464951	1					
ANR	464986	Callee	r_str_appendf		464951	0					
ANR	464987	Identifier	r_str_appendf		464951	0					
ANR	464988	ArgumentList	arminsn -> str_asm		464951	1					
ANR	464989	Argument	arminsn -> str_asm		464951	0					
ANR	464990	PtrMemberAccess	arminsn -> str_asm		464951	0					
ANR	464991	Identifier	arminsn		464951	0					
ANR	464992	Identifier	str_asm		464951	1					
ANR	464993	Argument	"""mla%s%s %s, %s, %s, %s"""		464951	1					
ANR	464994	PrimaryExpression	"""mla%s%s %s, %s, %s, %s"""		464951	0					
ANR	464995	Argument	get_cond ( inst )		464951	2					
ANR	464996	CallExpression	get_cond ( inst )		464951	0					
ANR	464997	Callee	get_cond		464951	0					
ANR	464998	Identifier	get_cond		464951	0					
ANR	464999	ArgumentList	inst		464951	1					
ANR	465000	Argument	inst		464951	0					
ANR	465001	Identifier	inst		464951	0					
ANR	465002	Argument	"condcodes ? ""s"" : """""		464951	3					
ANR	465003	ConditionalExpression	"condcodes ? ""s"" : """""		464951	0					
ANR	465004	Condition	condcodes		464951	0					
ANR	465005	Identifier	condcodes		464951	0					
ANR	465006	PrimaryExpression	"""s"""		464951	1					
ANR	465007	PrimaryExpression	""""""		464951	2					
ANR	465008	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		464951	4					
ANR	465009	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		464951	0					
ANR	465010	Identifier	tbl_regs		464951	0					
ANR	465011	CallExpression	"get_nibble ( inst , 4 )"		464951	1					
ANR	465012	Callee	get_nibble		464951	0					
ANR	465013	Identifier	get_nibble		464951	0					
ANR	465014	ArgumentList	inst		464951	1					
ANR	465015	Argument	inst		464951	0					
ANR	465016	Identifier	inst		464951	0					
ANR	465017	Argument	4		464951	1					
ANR	465018	PrimaryExpression	4		464951	0					
ANR	465019	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		464951	5					
ANR	465020	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		464951	0					
ANR	465021	Identifier	tbl_regs		464951	0					
ANR	465022	CallExpression	"get_nibble ( inst , 0 )"		464951	1					
ANR	465023	Callee	get_nibble		464951	0					
ANR	465024	Identifier	get_nibble		464951	0					
ANR	465025	ArgumentList	inst		464951	1					
ANR	465026	Argument	inst		464951	0					
ANR	465027	Identifier	inst		464951	0					
ANR	465028	Argument	0		464951	1					
ANR	465029	PrimaryExpression	0		464951	0					
ANR	465030	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		464951	6					
ANR	465031	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		464951	0					
ANR	465032	Identifier	tbl_regs		464951	0					
ANR	465033	CallExpression	"get_nibble ( inst , 2 )"		464951	1					
ANR	465034	Callee	get_nibble		464951	0					
ANR	465035	Identifier	get_nibble		464951	0					
ANR	465036	ArgumentList	inst		464951	1					
ANR	465037	Argument	inst		464951	0					
ANR	465038	Identifier	inst		464951	0					
ANR	465039	Argument	2		464951	1					
ANR	465040	PrimaryExpression	2		464951	0					
ANR	465041	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		464951	7					
ANR	465042	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		464951	0					
ANR	465043	Identifier	tbl_regs		464951	0					
ANR	465044	CallExpression	"get_nibble ( inst , 3 )"		464951	1					
ANR	465045	Callee	get_nibble		464951	0					
ANR	465046	Identifier	get_nibble		464951	0					
ANR	465047	ArgumentList	inst		464951	1					
ANR	465048	Argument	inst		464951	0					
ANR	465049	Identifier	inst		464951	0					
ANR	465050	Argument	3		464951	1					
ANR	465051	PrimaryExpression	3		464951	0					
ANR	465052	ElseStatement	else		464951	0					
ANR	465053	CompoundStatement		10:6:355:355	464951	0					
ANR	465054	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mul%s%s %s, %s, %s"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] )"	96:2:2403:2619	464951	0	True				
ANR	465055	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mul%s%s %s, %s, %s"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] )"		464951	0		=			
ANR	465056	PtrMemberAccess	arminsn -> str_asm		464951	0					
ANR	465057	Identifier	arminsn		464951	0					
ANR	465058	Identifier	str_asm		464951	1					
ANR	465059	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mul%s%s %s, %s, %s"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] )"		464951	1					
ANR	465060	Callee	r_str_appendf		464951	0					
ANR	465061	Identifier	r_str_appendf		464951	0					
ANR	465062	ArgumentList	arminsn -> str_asm		464951	1					
ANR	465063	Argument	arminsn -> str_asm		464951	0					
ANR	465064	PtrMemberAccess	arminsn -> str_asm		464951	0					
ANR	465065	Identifier	arminsn		464951	0					
ANR	465066	Identifier	str_asm		464951	1					
ANR	465067	Argument	"""mul%s%s %s, %s, %s"""		464951	1					
ANR	465068	PrimaryExpression	"""mul%s%s %s, %s, %s"""		464951	0					
ANR	465069	Argument	get_cond ( inst )		464951	2					
ANR	465070	CallExpression	get_cond ( inst )		464951	0					
ANR	465071	Callee	get_cond		464951	0					
ANR	465072	Identifier	get_cond		464951	0					
ANR	465073	ArgumentList	inst		464951	1					
ANR	465074	Argument	inst		464951	0					
ANR	465075	Identifier	inst		464951	0					
ANR	465076	Argument	"condcodes ? ""s"" : """""		464951	3					
ANR	465077	ConditionalExpression	"condcodes ? ""s"" : """""		464951	0					
ANR	465078	Condition	condcodes		464951	0					
ANR	465079	Identifier	condcodes		464951	0					
ANR	465080	PrimaryExpression	"""s"""		464951	1					
ANR	465081	PrimaryExpression	""""""		464951	2					
ANR	465082	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		464951	4					
ANR	465083	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		464951	0					
ANR	465084	Identifier	tbl_regs		464951	0					
ANR	465085	CallExpression	"get_nibble ( inst , 4 )"		464951	1					
ANR	465086	Callee	get_nibble		464951	0					
ANR	465087	Identifier	get_nibble		464951	0					
ANR	465088	ArgumentList	inst		464951	1					
ANR	465089	Argument	inst		464951	0					
ANR	465090	Identifier	inst		464951	0					
ANR	465091	Argument	4		464951	1					
ANR	465092	PrimaryExpression	4		464951	0					
ANR	465093	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		464951	5					
ANR	465094	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		464951	0					
ANR	465095	Identifier	tbl_regs		464951	0					
ANR	465096	CallExpression	"get_nibble ( inst , 0 )"		464951	1					
ANR	465097	Callee	get_nibble		464951	0					
ANR	465098	Identifier	get_nibble		464951	0					
ANR	465099	ArgumentList	inst		464951	1					
ANR	465100	Argument	inst		464951	0					
ANR	465101	Identifier	inst		464951	0					
ANR	465102	Argument	0		464951	1					
ANR	465103	PrimaryExpression	0		464951	0					
ANR	465104	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		464951	6					
ANR	465105	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		464951	0					
ANR	465106	Identifier	tbl_regs		464951	0					
ANR	465107	CallExpression	"get_nibble ( inst , 2 )"		464951	1					
ANR	465108	Callee	get_nibble		464951	0					
ANR	465109	Identifier	get_nibble		464951	0					
ANR	465110	ArgumentList	inst		464951	1					
ANR	465111	Argument	inst		464951	0					
ANR	465112	Identifier	inst		464951	0					
ANR	465113	Argument	2		464951	1					
ANR	465114	PrimaryExpression	2		464951	0					
ANR	465115	ReturnStatement	return 0 ;	100:1:2625:2633	464951	3	True				
ANR	465116	PrimaryExpression	0		464951	0					
ANR	465117	ReturnType	static ut32		464951	1					
ANR	465118	Identifier	arm_disasm_mul		464951	2					
ANR	465119	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		464951	3					
ANR	465120	Parameter	struct winedbg_arm_insn * arminsn	86:27:1998:2029	464951	0	True				
ANR	465121	ParameterType	struct winedbg_arm_insn *		464951	0					
ANR	465122	Identifier	arminsn		464951	1					
ANR	465123	Parameter	ut32 inst	86:61:2032:2040	464951	1	True				
ANR	465124	ParameterType	ut32		464951	0					
ANR	465125	Identifier	inst		464951	1					
ANR	465126	CFGEntryNode	ENTRY		464951		True				
ANR	465127	CFGExitNode	EXIT		464951		True				
ANR	465128	Symbol	* arminsn		464951						
ANR	465129	Symbol	get_nibble		464951						
ANR	465130	Symbol	get_cond		464951						
ANR	465131	Symbol	condcodes		464951						
ANR	465132	Symbol	* tbl_regs		464951						
ANR	465133	Symbol	tbl_regs		464951						
ANR	465134	Symbol	inst		464951						
ANR	465135	Symbol	r_str_appendf		464951						
ANR	465136	Symbol	accu		464951						
ANR	465137	Symbol	* get_nibble		464951						
ANR	465138	Symbol	arminsn		464951						
ANR	465139	Symbol	arminsn -> str_asm		464951						
ANR	465140	Function	arm_disasm_longmul	103:0:2638:3137							
ANR	465141	FunctionDef	"arm_disasm_longmul (struct winedbg_arm_insn * arminsn , ut32 inst)"		465140	0					
ANR	465142	CompoundStatement		103:76:2714:3137	465140	0					
ANR	465143	IdentifierDeclStatement	short sign = ( inst >> 22 ) & 0x01 ;	104:1:2717:2749	465140	0	True				
ANR	465144	IdentifierDecl	sign = ( inst >> 22 ) & 0x01		465140	0					
ANR	465145	IdentifierDeclType	short		465140	0					
ANR	465146	Identifier	sign		465140	1					
ANR	465147	AssignmentExpression	sign = ( inst >> 22 ) & 0x01		465140	2		=			
ANR	465148	Identifier	sign		465140	0					
ANR	465149	BitAndExpression	( inst >> 22 ) & 0x01		465140	1		&			
ANR	465150	ShiftExpression	inst >> 22		465140	0		>>			
ANR	465151	Identifier	inst		465140	0					
ANR	465152	PrimaryExpression	22		465140	1					
ANR	465153	PrimaryExpression	0x01		465140	1					
ANR	465154	IdentifierDeclStatement	short accu = ( inst >> 21 ) & 0x01 ;	105:1:2752:2784	465140	1	True				
ANR	465155	IdentifierDecl	accu = ( inst >> 21 ) & 0x01		465140	0					
ANR	465156	IdentifierDeclType	short		465140	0					
ANR	465157	Identifier	accu		465140	1					
ANR	465158	AssignmentExpression	accu = ( inst >> 21 ) & 0x01		465140	2		=			
ANR	465159	Identifier	accu		465140	0					
ANR	465160	BitAndExpression	( inst >> 21 ) & 0x01		465140	1		&			
ANR	465161	ShiftExpression	inst >> 21		465140	0		>>			
ANR	465162	Identifier	inst		465140	0					
ANR	465163	PrimaryExpression	21		465140	1					
ANR	465164	PrimaryExpression	0x01		465140	1					
ANR	465165	IdentifierDeclStatement	short condcodes = ( inst >> 20 ) & 0x01 ;	106:1:2787:2824	465140	2	True				
ANR	465166	IdentifierDecl	condcodes = ( inst >> 20 ) & 0x01		465140	0					
ANR	465167	IdentifierDeclType	short		465140	0					
ANR	465168	Identifier	condcodes		465140	1					
ANR	465169	AssignmentExpression	condcodes = ( inst >> 20 ) & 0x01		465140	2		=			
ANR	465170	Identifier	condcodes		465140	0					
ANR	465171	BitAndExpression	( inst >> 20 ) & 0x01		465140	1		&			
ANR	465172	ShiftExpression	inst >> 20		465140	0		>>			
ANR	465173	Identifier	inst		465140	0					
ANR	465174	PrimaryExpression	20		465140	1					
ANR	465175	PrimaryExpression	0x01		465140	1					
ANR	465176	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s %s, %s, %s, %s"" , sign ? ""s"" : ""u"" , accu ? ""mlal"" : ""mull"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] )"	108:1:2828:3124	465140	3	True				
ANR	465177	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s %s, %s, %s, %s"" , sign ? ""s"" : ""u"" , accu ? ""mlal"" : ""mull"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] )"		465140	0		=			
ANR	465178	PtrMemberAccess	arminsn -> str_asm		465140	0					
ANR	465179	Identifier	arminsn		465140	0					
ANR	465180	Identifier	str_asm		465140	1					
ANR	465181	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s %s, %s, %s, %s"" , sign ? ""s"" : ""u"" , accu ? ""mlal"" : ""mull"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] )"		465140	1					
ANR	465182	Callee	r_str_appendf		465140	0					
ANR	465183	Identifier	r_str_appendf		465140	0					
ANR	465184	ArgumentList	arminsn -> str_asm		465140	1					
ANR	465185	Argument	arminsn -> str_asm		465140	0					
ANR	465186	PtrMemberAccess	arminsn -> str_asm		465140	0					
ANR	465187	Identifier	arminsn		465140	0					
ANR	465188	Identifier	str_asm		465140	1					
ANR	465189	Argument	"""%s%s%s%s %s, %s, %s, %s"""		465140	1					
ANR	465190	PrimaryExpression	"""%s%s%s%s %s, %s, %s, %s"""		465140	0					
ANR	465191	Argument	"sign ? ""s"" : ""u"""		465140	2					
ANR	465192	ConditionalExpression	"sign ? ""s"" : ""u"""		465140	0					
ANR	465193	Condition	sign		465140	0					
ANR	465194	Identifier	sign		465140	0					
ANR	465195	PrimaryExpression	"""s"""		465140	1					
ANR	465196	PrimaryExpression	"""u"""		465140	2					
ANR	465197	Argument	"accu ? ""mlal"" : ""mull"""		465140	3					
ANR	465198	ConditionalExpression	"accu ? ""mlal"" : ""mull"""		465140	0					
ANR	465199	Condition	accu		465140	0					
ANR	465200	Identifier	accu		465140	0					
ANR	465201	PrimaryExpression	"""mlal"""		465140	1					
ANR	465202	PrimaryExpression	"""mull"""		465140	2					
ANR	465203	Argument	get_cond ( inst )		465140	4					
ANR	465204	CallExpression	get_cond ( inst )		465140	0					
ANR	465205	Callee	get_cond		465140	0					
ANR	465206	Identifier	get_cond		465140	0					
ANR	465207	ArgumentList	inst		465140	1					
ANR	465208	Argument	inst		465140	0					
ANR	465209	Identifier	inst		465140	0					
ANR	465210	Argument	"condcodes ? ""s"" : """""		465140	5					
ANR	465211	ConditionalExpression	"condcodes ? ""s"" : """""		465140	0					
ANR	465212	Condition	condcodes		465140	0					
ANR	465213	Identifier	condcodes		465140	0					
ANR	465214	PrimaryExpression	"""s"""		465140	1					
ANR	465215	PrimaryExpression	""""""		465140	2					
ANR	465216	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		465140	6					
ANR	465217	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		465140	0					
ANR	465218	Identifier	tbl_regs		465140	0					
ANR	465219	CallExpression	"get_nibble ( inst , 3 )"		465140	1					
ANR	465220	Callee	get_nibble		465140	0					
ANR	465221	Identifier	get_nibble		465140	0					
ANR	465222	ArgumentList	inst		465140	1					
ANR	465223	Argument	inst		465140	0					
ANR	465224	Identifier	inst		465140	0					
ANR	465225	Argument	3		465140	1					
ANR	465226	PrimaryExpression	3		465140	0					
ANR	465227	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		465140	7					
ANR	465228	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		465140	0					
ANR	465229	Identifier	tbl_regs		465140	0					
ANR	465230	CallExpression	"get_nibble ( inst , 4 )"		465140	1					
ANR	465231	Callee	get_nibble		465140	0					
ANR	465232	Identifier	get_nibble		465140	0					
ANR	465233	ArgumentList	inst		465140	1					
ANR	465234	Argument	inst		465140	0					
ANR	465235	Identifier	inst		465140	0					
ANR	465236	Argument	4		465140	1					
ANR	465237	PrimaryExpression	4		465140	0					
ANR	465238	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465140	8					
ANR	465239	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465140	0					
ANR	465240	Identifier	tbl_regs		465140	0					
ANR	465241	CallExpression	"get_nibble ( inst , 0 )"		465140	1					
ANR	465242	Callee	get_nibble		465140	0					
ANR	465243	Identifier	get_nibble		465140	0					
ANR	465244	ArgumentList	inst		465140	1					
ANR	465245	Argument	inst		465140	0					
ANR	465246	Identifier	inst		465140	0					
ANR	465247	Argument	0		465140	1					
ANR	465248	PrimaryExpression	0		465140	0					
ANR	465249	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		465140	9					
ANR	465250	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		465140	0					
ANR	465251	Identifier	tbl_regs		465140	0					
ANR	465252	CallExpression	"get_nibble ( inst , 2 )"		465140	1					
ANR	465253	Callee	get_nibble		465140	0					
ANR	465254	Identifier	get_nibble		465140	0					
ANR	465255	ArgumentList	inst		465140	1					
ANR	465256	Argument	inst		465140	0					
ANR	465257	Identifier	inst		465140	0					
ANR	465258	Argument	2		465140	1					
ANR	465259	PrimaryExpression	2		465140	0					
ANR	465260	ReturnStatement	return 0 ;	112:1:3127:3135	465140	4	True				
ANR	465261	PrimaryExpression	0		465140	0					
ANR	465262	ReturnType	static ut32		465140	1					
ANR	465263	Identifier	arm_disasm_longmul		465140	2					
ANR	465264	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		465140	3					
ANR	465265	Parameter	struct winedbg_arm_insn * arminsn	103:31:2669:2700	465140	0	True				
ANR	465266	ParameterType	struct winedbg_arm_insn *		465140	0					
ANR	465267	Identifier	arminsn		465140	1					
ANR	465268	Parameter	ut32 inst	103:65:2703:2711	465140	1	True				
ANR	465269	ParameterType	ut32		465140	0					
ANR	465270	Identifier	inst		465140	1					
ANR	465271	CFGEntryNode	ENTRY		465140		True				
ANR	465272	CFGExitNode	EXIT		465140		True				
ANR	465273	Symbol	get_cond		465140						
ANR	465274	Symbol	tbl_regs		465140						
ANR	465275	Symbol	sign		465140						
ANR	465276	Symbol	arminsn		465140						
ANR	465277	Symbol	arminsn -> str_asm		465140						
ANR	465278	Symbol	* arminsn		465140						
ANR	465279	Symbol	get_nibble		465140						
ANR	465280	Symbol	condcodes		465140						
ANR	465281	Symbol	* tbl_regs		465140						
ANR	465282	Symbol	inst		465140						
ANR	465283	Symbol	r_str_appendf		465140						
ANR	465284	Symbol	accu		465140						
ANR	465285	Symbol	* get_nibble		465140						
ANR	465286	Function	arm_disasm_swp	115:0:3140:3475							
ANR	465287	FunctionDef	"arm_disasm_swp (struct winedbg_arm_insn * arminsn , ut32 inst)"		465286	0					
ANR	465288	CompoundStatement		115:72:3212:3475	465286	0					
ANR	465289	IdentifierDeclStatement	short byte = ( inst >> 22 ) & 0x01 ;	116:1:3215:3247	465286	0	True				
ANR	465290	IdentifierDecl	byte = ( inst >> 22 ) & 0x01		465286	0					
ANR	465291	IdentifierDeclType	short		465286	0					
ANR	465292	Identifier	byte		465286	1					
ANR	465293	AssignmentExpression	byte = ( inst >> 22 ) & 0x01		465286	2		=			
ANR	465294	Identifier	byte		465286	0					
ANR	465295	BitAndExpression	( inst >> 22 ) & 0x01		465286	1		&			
ANR	465296	ShiftExpression	inst >> 22		465286	0		>>			
ANR	465297	Identifier	inst		465286	0					
ANR	465298	PrimaryExpression	22		465286	1					
ANR	465299	PrimaryExpression	0x01		465286	1					
ANR	465300	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""swp%s%s %s, %s, [%s]"" , get_cond ( inst ) , byte ? ""b"" : """" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] )"	118:1:3251:3462	465286	1	True				
ANR	465301	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""swp%s%s %s, %s, [%s]"" , get_cond ( inst ) , byte ? ""b"" : """" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] )"		465286	0		=			
ANR	465302	PtrMemberAccess	arminsn -> str_asm		465286	0					
ANR	465303	Identifier	arminsn		465286	0					
ANR	465304	Identifier	str_asm		465286	1					
ANR	465305	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""swp%s%s %s, %s, [%s]"" , get_cond ( inst ) , byte ? ""b"" : """" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] )"		465286	1					
ANR	465306	Callee	r_str_appendf		465286	0					
ANR	465307	Identifier	r_str_appendf		465286	0					
ANR	465308	ArgumentList	arminsn -> str_asm		465286	1					
ANR	465309	Argument	arminsn -> str_asm		465286	0					
ANR	465310	PtrMemberAccess	arminsn -> str_asm		465286	0					
ANR	465311	Identifier	arminsn		465286	0					
ANR	465312	Identifier	str_asm		465286	1					
ANR	465313	Argument	"""swp%s%s %s, %s, [%s]"""		465286	1					
ANR	465314	PrimaryExpression	"""swp%s%s %s, %s, [%s]"""		465286	0					
ANR	465315	Argument	get_cond ( inst )		465286	2					
ANR	465316	CallExpression	get_cond ( inst )		465286	0					
ANR	465317	Callee	get_cond		465286	0					
ANR	465318	Identifier	get_cond		465286	0					
ANR	465319	ArgumentList	inst		465286	1					
ANR	465320	Argument	inst		465286	0					
ANR	465321	Identifier	inst		465286	0					
ANR	465322	Argument	"byte ? ""b"" : """""		465286	3					
ANR	465323	ConditionalExpression	"byte ? ""b"" : """""		465286	0					
ANR	465324	Condition	byte		465286	0					
ANR	465325	Identifier	byte		465286	0					
ANR	465326	PrimaryExpression	"""b"""		465286	1					
ANR	465327	PrimaryExpression	""""""		465286	2					
ANR	465328	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		465286	4					
ANR	465329	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		465286	0					
ANR	465330	Identifier	tbl_regs		465286	0					
ANR	465331	CallExpression	"get_nibble ( inst , 3 )"		465286	1					
ANR	465332	Callee	get_nibble		465286	0					
ANR	465333	Identifier	get_nibble		465286	0					
ANR	465334	ArgumentList	inst		465286	1					
ANR	465335	Argument	inst		465286	0					
ANR	465336	Identifier	inst		465286	0					
ANR	465337	Argument	3		465286	1					
ANR	465338	PrimaryExpression	3		465286	0					
ANR	465339	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465286	5					
ANR	465340	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465286	0					
ANR	465341	Identifier	tbl_regs		465286	0					
ANR	465342	CallExpression	"get_nibble ( inst , 0 )"		465286	1					
ANR	465343	Callee	get_nibble		465286	0					
ANR	465344	Identifier	get_nibble		465286	0					
ANR	465345	ArgumentList	inst		465286	1					
ANR	465346	Argument	inst		465286	0					
ANR	465347	Identifier	inst		465286	0					
ANR	465348	Argument	0		465286	1					
ANR	465349	PrimaryExpression	0		465286	0					
ANR	465350	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		465286	6					
ANR	465351	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		465286	0					
ANR	465352	Identifier	tbl_regs		465286	0					
ANR	465353	CallExpression	"get_nibble ( inst , 4 )"		465286	1					
ANR	465354	Callee	get_nibble		465286	0					
ANR	465355	Identifier	get_nibble		465286	0					
ANR	465356	ArgumentList	inst		465286	1					
ANR	465357	Argument	inst		465286	0					
ANR	465358	Identifier	inst		465286	0					
ANR	465359	Argument	4		465286	1					
ANR	465360	PrimaryExpression	4		465286	0					
ANR	465361	ReturnStatement	return 0 ;	121:1:3465:3473	465286	2	True				
ANR	465362	PrimaryExpression	0		465286	0					
ANR	465363	ReturnType	static ut32		465286	1					
ANR	465364	Identifier	arm_disasm_swp		465286	2					
ANR	465365	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		465286	3					
ANR	465366	Parameter	struct winedbg_arm_insn * arminsn	115:27:3167:3198	465286	0	True				
ANR	465367	ParameterType	struct winedbg_arm_insn *		465286	0					
ANR	465368	Identifier	arminsn		465286	1					
ANR	465369	Parameter	ut32 inst	115:61:3201:3209	465286	1	True				
ANR	465370	ParameterType	ut32		465286	0					
ANR	465371	Identifier	inst		465286	1					
ANR	465372	CFGEntryNode	ENTRY		465286		True				
ANR	465373	CFGExitNode	EXIT		465286		True				
ANR	465374	Symbol	* arminsn		465286						
ANR	465375	Symbol	get_nibble		465286						
ANR	465376	Symbol	get_cond		465286						
ANR	465377	Symbol	byte		465286						
ANR	465378	Symbol	tbl_regs		465286						
ANR	465379	Symbol	* tbl_regs		465286						
ANR	465380	Symbol	inst		465286						
ANR	465381	Symbol	r_str_appendf		465286						
ANR	465382	Symbol	* get_nibble		465286						
ANR	465383	Symbol	arminsn		465286						
ANR	465384	Symbol	arminsn -> str_asm		465286						
ANR	465385	Function	arm_disasm_branchreg	124:0:3478:3682							
ANR	465386	FunctionDef	"arm_disasm_branchreg (struct winedbg_arm_insn * arminsn , ut32 inst)"		465385	0					
ANR	465387	CompoundStatement		124:78:3556:3682	465385	0					
ANR	465388	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""b%s %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 0 ) ] )"	125:1:3559:3669	465385	0	True				
ANR	465389	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""b%s %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 0 ) ] )"		465385	0		=			
ANR	465390	PtrMemberAccess	arminsn -> str_asm		465385	0					
ANR	465391	Identifier	arminsn		465385	0					
ANR	465392	Identifier	str_asm		465385	1					
ANR	465393	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""b%s %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 0 ) ] )"		465385	1					
ANR	465394	Callee	r_str_appendf		465385	0					
ANR	465395	Identifier	r_str_appendf		465385	0					
ANR	465396	ArgumentList	arminsn -> str_asm		465385	1					
ANR	465397	Argument	arminsn -> str_asm		465385	0					
ANR	465398	PtrMemberAccess	arminsn -> str_asm		465385	0					
ANR	465399	Identifier	arminsn		465385	0					
ANR	465400	Identifier	str_asm		465385	1					
ANR	465401	Argument	"""b%s %s"""		465385	1					
ANR	465402	PrimaryExpression	"""b%s %s"""		465385	0					
ANR	465403	Argument	get_cond ( inst )		465385	2					
ANR	465404	CallExpression	get_cond ( inst )		465385	0					
ANR	465405	Callee	get_cond		465385	0					
ANR	465406	Identifier	get_cond		465385	0					
ANR	465407	ArgumentList	inst		465385	1					
ANR	465408	Argument	inst		465385	0					
ANR	465409	Identifier	inst		465385	0					
ANR	465410	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465385	3					
ANR	465411	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465385	0					
ANR	465412	Identifier	tbl_regs		465385	0					
ANR	465413	CallExpression	"get_nibble ( inst , 0 )"		465385	1					
ANR	465414	Callee	get_nibble		465385	0					
ANR	465415	Identifier	get_nibble		465385	0					
ANR	465416	ArgumentList	inst		465385	1					
ANR	465417	Argument	inst		465385	0					
ANR	465418	Identifier	inst		465385	0					
ANR	465419	Argument	0		465385	1					
ANR	465420	PrimaryExpression	0		465385	0					
ANR	465421	ReturnStatement	return 0 ;	126:1:3672:3680	465385	1	True				
ANR	465422	PrimaryExpression	0		465385	0					
ANR	465423	ReturnType	static ut32		465385	1					
ANR	465424	Identifier	arm_disasm_branchreg		465385	2					
ANR	465425	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		465385	3					
ANR	465426	Parameter	struct winedbg_arm_insn * arminsn	124:33:3511:3542	465385	0	True				
ANR	465427	ParameterType	struct winedbg_arm_insn *		465385	0					
ANR	465428	Identifier	arminsn		465385	1					
ANR	465429	Parameter	ut32 inst	124:67:3545:3553	465385	1	True				
ANR	465430	ParameterType	ut32		465385	0					
ANR	465431	Identifier	inst		465385	1					
ANR	465432	CFGEntryNode	ENTRY		465385		True				
ANR	465433	CFGExitNode	EXIT		465385		True				
ANR	465434	Symbol	* arminsn		465385						
ANR	465435	Symbol	get_cond		465385						
ANR	465436	Symbol	get_nibble		465385						
ANR	465437	Symbol	tbl_regs		465385						
ANR	465438	Symbol	* tbl_regs		465385						
ANR	465439	Symbol	inst		465385						
ANR	465440	Symbol	r_str_appendf		465385						
ANR	465441	Symbol	* get_nibble		465385						
ANR	465442	Symbol	arminsn		465385						
ANR	465443	Symbol	arminsn -> str_asm		465385						
ANR	465444	Function	arm_disasm_branchxchg	129:0:3685:3891							
ANR	465445	FunctionDef	"arm_disasm_branchxchg (struct winedbg_arm_insn * arminsn , ut32 inst)"		465444	0					
ANR	465446	CompoundStatement		129:79:3764:3891	465444	0					
ANR	465447	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""bx%s %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 0 ) ] )"	130:1:3767:3878	465444	0	True				
ANR	465448	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""bx%s %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 0 ) ] )"		465444	0		=			
ANR	465449	PtrMemberAccess	arminsn -> str_asm		465444	0					
ANR	465450	Identifier	arminsn		465444	0					
ANR	465451	Identifier	str_asm		465444	1					
ANR	465452	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""bx%s %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 0 ) ] )"		465444	1					
ANR	465453	Callee	r_str_appendf		465444	0					
ANR	465454	Identifier	r_str_appendf		465444	0					
ANR	465455	ArgumentList	arminsn -> str_asm		465444	1					
ANR	465456	Argument	arminsn -> str_asm		465444	0					
ANR	465457	PtrMemberAccess	arminsn -> str_asm		465444	0					
ANR	465458	Identifier	arminsn		465444	0					
ANR	465459	Identifier	str_asm		465444	1					
ANR	465460	Argument	"""bx%s %s"""		465444	1					
ANR	465461	PrimaryExpression	"""bx%s %s"""		465444	0					
ANR	465462	Argument	get_cond ( inst )		465444	2					
ANR	465463	CallExpression	get_cond ( inst )		465444	0					
ANR	465464	Callee	get_cond		465444	0					
ANR	465465	Identifier	get_cond		465444	0					
ANR	465466	ArgumentList	inst		465444	1					
ANR	465467	Argument	inst		465444	0					
ANR	465468	Identifier	inst		465444	0					
ANR	465469	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465444	3					
ANR	465470	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465444	0					
ANR	465471	Identifier	tbl_regs		465444	0					
ANR	465472	CallExpression	"get_nibble ( inst , 0 )"		465444	1					
ANR	465473	Callee	get_nibble		465444	0					
ANR	465474	Identifier	get_nibble		465444	0					
ANR	465475	ArgumentList	inst		465444	1					
ANR	465476	Argument	inst		465444	0					
ANR	465477	Identifier	inst		465444	0					
ANR	465478	Argument	0		465444	1					
ANR	465479	PrimaryExpression	0		465444	0					
ANR	465480	ReturnStatement	return 0 ;	131:1:3881:3889	465444	1	True				
ANR	465481	PrimaryExpression	0		465444	0					
ANR	465482	ReturnType	static ut32		465444	1					
ANR	465483	Identifier	arm_disasm_branchxchg		465444	2					
ANR	465484	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		465444	3					
ANR	465485	Parameter	struct winedbg_arm_insn * arminsn	129:34:3719:3750	465444	0	True				
ANR	465486	ParameterType	struct winedbg_arm_insn *		465444	0					
ANR	465487	Identifier	arminsn		465444	1					
ANR	465488	Parameter	ut32 inst	129:68:3753:3761	465444	1	True				
ANR	465489	ParameterType	ut32		465444	0					
ANR	465490	Identifier	inst		465444	1					
ANR	465491	CFGEntryNode	ENTRY		465444		True				
ANR	465492	CFGExitNode	EXIT		465444		True				
ANR	465493	Symbol	* arminsn		465444						
ANR	465494	Symbol	get_nibble		465444						
ANR	465495	Symbol	get_cond		465444						
ANR	465496	Symbol	* tbl_regs		465444						
ANR	465497	Symbol	tbl_regs		465444						
ANR	465498	Symbol	inst		465444						
ANR	465499	Symbol	r_str_appendf		465444						
ANR	465500	Symbol	* get_nibble		465444						
ANR	465501	Symbol	arminsn		465444						
ANR	465502	Symbol	arminsn -> str_asm		465444						
ANR	465503	Function	arm_disasm_mrstrans	134:0:3894:4164							
ANR	465504	FunctionDef	"arm_disasm_mrstrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		465503	0					
ANR	465505	CompoundStatement		134:77:3971:4164	465503	0					
ANR	465506	IdentifierDeclStatement	short src = ( inst >> 22 ) & 0x01 ;	135:1:3974:4005	465503	0	True				
ANR	465507	IdentifierDecl	src = ( inst >> 22 ) & 0x01		465503	0					
ANR	465508	IdentifierDeclType	short		465503	0					
ANR	465509	Identifier	src		465503	1					
ANR	465510	AssignmentExpression	src = ( inst >> 22 ) & 0x01		465503	2		=			
ANR	465511	Identifier	src		465503	0					
ANR	465512	BitAndExpression	( inst >> 22 ) & 0x01		465503	1		&			
ANR	465513	ShiftExpression	inst >> 22		465503	0		>>			
ANR	465514	Identifier	inst		465503	0					
ANR	465515	PrimaryExpression	22		465503	1					
ANR	465516	PrimaryExpression	0x01		465503	1					
ANR	465517	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mrs%s %s, %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 3 ) ] , src ? ""spsr"" : ""cpsr"" )"	137:1:4009:4151	465503	1	True				
ANR	465518	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mrs%s %s, %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 3 ) ] , src ? ""spsr"" : ""cpsr"" )"		465503	0		=			
ANR	465519	PtrMemberAccess	arminsn -> str_asm		465503	0					
ANR	465520	Identifier	arminsn		465503	0					
ANR	465521	Identifier	str_asm		465503	1					
ANR	465522	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mrs%s %s, %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 3 ) ] , src ? ""spsr"" : ""cpsr"" )"		465503	1					
ANR	465523	Callee	r_str_appendf		465503	0					
ANR	465524	Identifier	r_str_appendf		465503	0					
ANR	465525	ArgumentList	arminsn -> str_asm		465503	1					
ANR	465526	Argument	arminsn -> str_asm		465503	0					
ANR	465527	PtrMemberAccess	arminsn -> str_asm		465503	0					
ANR	465528	Identifier	arminsn		465503	0					
ANR	465529	Identifier	str_asm		465503	1					
ANR	465530	Argument	"""mrs%s %s, %s"""		465503	1					
ANR	465531	PrimaryExpression	"""mrs%s %s, %s"""		465503	0					
ANR	465532	Argument	get_cond ( inst )		465503	2					
ANR	465533	CallExpression	get_cond ( inst )		465503	0					
ANR	465534	Callee	get_cond		465503	0					
ANR	465535	Identifier	get_cond		465503	0					
ANR	465536	ArgumentList	inst		465503	1					
ANR	465537	Argument	inst		465503	0					
ANR	465538	Identifier	inst		465503	0					
ANR	465539	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		465503	3					
ANR	465540	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		465503	0					
ANR	465541	Identifier	tbl_regs		465503	0					
ANR	465542	CallExpression	"get_nibble ( inst , 3 )"		465503	1					
ANR	465543	Callee	get_nibble		465503	0					
ANR	465544	Identifier	get_nibble		465503	0					
ANR	465545	ArgumentList	inst		465503	1					
ANR	465546	Argument	inst		465503	0					
ANR	465547	Identifier	inst		465503	0					
ANR	465548	Argument	3		465503	1					
ANR	465549	PrimaryExpression	3		465503	0					
ANR	465550	Argument	"src ? ""spsr"" : ""cpsr"""		465503	4					
ANR	465551	ConditionalExpression	"src ? ""spsr"" : ""cpsr"""		465503	0					
ANR	465552	Condition	src		465503	0					
ANR	465553	Identifier	src		465503	0					
ANR	465554	PrimaryExpression	"""spsr"""		465503	1					
ANR	465555	PrimaryExpression	"""cpsr"""		465503	2					
ANR	465556	ReturnStatement	return 0 ;	139:1:4154:4162	465503	2	True				
ANR	465557	PrimaryExpression	0		465503	0					
ANR	465558	ReturnType	static ut32		465503	1					
ANR	465559	Identifier	arm_disasm_mrstrans		465503	2					
ANR	465560	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		465503	3					
ANR	465561	Parameter	struct winedbg_arm_insn * arminsn	134:32:3926:3957	465503	0	True				
ANR	465562	ParameterType	struct winedbg_arm_insn *		465503	0					
ANR	465563	Identifier	arminsn		465503	1					
ANR	465564	Parameter	ut32 inst	134:66:3960:3968	465503	1	True				
ANR	465565	ParameterType	ut32		465503	0					
ANR	465566	Identifier	inst		465503	1					
ANR	465567	CFGEntryNode	ENTRY		465503		True				
ANR	465568	CFGExitNode	EXIT		465503		True				
ANR	465569	Symbol	* arminsn		465503						
ANR	465570	Symbol	get_cond		465503						
ANR	465571	Symbol	get_nibble		465503						
ANR	465572	Symbol	src		465503						
ANR	465573	Symbol	tbl_regs		465503						
ANR	465574	Symbol	* tbl_regs		465503						
ANR	465575	Symbol	inst		465503						
ANR	465576	Symbol	r_str_appendf		465503						
ANR	465577	Symbol	* get_nibble		465503						
ANR	465578	Symbol	arminsn		465503						
ANR	465579	Symbol	arminsn -> str_asm		465503						
ANR	465580	Function	arm_disasm_msrtrans	142:0:4167:4721							
ANR	465581	FunctionDef	"arm_disasm_msrtrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		465580	0					
ANR	465582	CompoundStatement		142:77:4244:4721	465580	0					
ANR	465583	IdentifierDeclStatement	short immediate = ( inst >> 25 ) & 0x01 ;	143:1:4247:4284	465580	0	True				
ANR	465584	IdentifierDecl	immediate = ( inst >> 25 ) & 0x01		465580	0					
ANR	465585	IdentifierDeclType	short		465580	0					
ANR	465586	Identifier	immediate		465580	1					
ANR	465587	AssignmentExpression	immediate = ( inst >> 25 ) & 0x01		465580	2		=			
ANR	465588	Identifier	immediate		465580	0					
ANR	465589	BitAndExpression	( inst >> 25 ) & 0x01		465580	1		&			
ANR	465590	ShiftExpression	inst >> 25		465580	0		>>			
ANR	465591	Identifier	inst		465580	0					
ANR	465592	PrimaryExpression	25		465580	1					
ANR	465593	PrimaryExpression	0x01		465580	1					
ANR	465594	IdentifierDeclStatement	short dst = ( inst >> 22 ) & 0x01 ;	144:1:4287:4318	465580	1	True				
ANR	465595	IdentifierDecl	dst = ( inst >> 22 ) & 0x01		465580	0					
ANR	465596	IdentifierDeclType	short		465580	0					
ANR	465597	Identifier	dst		465580	1					
ANR	465598	AssignmentExpression	dst = ( inst >> 22 ) & 0x01		465580	2		=			
ANR	465599	Identifier	dst		465580	0					
ANR	465600	BitAndExpression	( inst >> 22 ) & 0x01		465580	1		&			
ANR	465601	ShiftExpression	inst >> 22		465580	0		>>			
ANR	465602	Identifier	inst		465580	0					
ANR	465603	PrimaryExpression	22		465580	1					
ANR	465604	PrimaryExpression	0x01		465580	1					
ANR	465605	IdentifierDeclStatement	short simple = ( inst >> 16 ) & 0x01 ;	145:1:4321:4355	465580	2	True				
ANR	465606	IdentifierDecl	simple = ( inst >> 16 ) & 0x01		465580	0					
ANR	465607	IdentifierDeclType	short		465580	0					
ANR	465608	Identifier	simple		465580	1					
ANR	465609	AssignmentExpression	simple = ( inst >> 16 ) & 0x01		465580	2		=			
ANR	465610	Identifier	simple		465580	0					
ANR	465611	BitAndExpression	( inst >> 16 ) & 0x01		465580	1		&			
ANR	465612	ShiftExpression	inst >> 16		465580	0		>>			
ANR	465613	Identifier	inst		465580	0					
ANR	465614	PrimaryExpression	16		465580	1					
ANR	465615	PrimaryExpression	0x01		465580	1					
ANR	465616	IfStatement	if ( simple || ! immediate )		465580	3					
ANR	465617	Condition	simple || ! immediate	147:5:4363:4382	465580	0	True				
ANR	465618	OrExpression	simple || ! immediate		465580	0		||			
ANR	465619	Identifier	simple		465580	0					
ANR	465620	UnaryOperationExpression	! immediate		465580	1					
ANR	465621	UnaryOperator	!		465580	0					
ANR	465622	Identifier	immediate		465580	1					
ANR	465623	CompoundStatement		6:27:140:140	465580	1					
ANR	465624	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""msr%s %s, %s"" , get_cond ( inst ) , dst ? ""spsr"" : ""cpsr"" , tbl_regs [ get_nibble ( inst , 0 ) ] )"	148:2:4389:4532	465580	0	True				
ANR	465625	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""msr%s %s, %s"" , get_cond ( inst ) , dst ? ""spsr"" : ""cpsr"" , tbl_regs [ get_nibble ( inst , 0 ) ] )"		465580	0		=			
ANR	465626	PtrMemberAccess	arminsn -> str_asm		465580	0					
ANR	465627	Identifier	arminsn		465580	0					
ANR	465628	Identifier	str_asm		465580	1					
ANR	465629	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""msr%s %s, %s"" , get_cond ( inst ) , dst ? ""spsr"" : ""cpsr"" , tbl_regs [ get_nibble ( inst , 0 ) ] )"		465580	1					
ANR	465630	Callee	r_str_appendf		465580	0					
ANR	465631	Identifier	r_str_appendf		465580	0					
ANR	465632	ArgumentList	arminsn -> str_asm		465580	1					
ANR	465633	Argument	arminsn -> str_asm		465580	0					
ANR	465634	PtrMemberAccess	arminsn -> str_asm		465580	0					
ANR	465635	Identifier	arminsn		465580	0					
ANR	465636	Identifier	str_asm		465580	1					
ANR	465637	Argument	"""msr%s %s, %s"""		465580	1					
ANR	465638	PrimaryExpression	"""msr%s %s, %s"""		465580	0					
ANR	465639	Argument	get_cond ( inst )		465580	2					
ANR	465640	CallExpression	get_cond ( inst )		465580	0					
ANR	465641	Callee	get_cond		465580	0					
ANR	465642	Identifier	get_cond		465580	0					
ANR	465643	ArgumentList	inst		465580	1					
ANR	465644	Argument	inst		465580	0					
ANR	465645	Identifier	inst		465580	0					
ANR	465646	Argument	"dst ? ""spsr"" : ""cpsr"""		465580	3					
ANR	465647	ConditionalExpression	"dst ? ""spsr"" : ""cpsr"""		465580	0					
ANR	465648	Condition	dst		465580	0					
ANR	465649	Identifier	dst		465580	0					
ANR	465650	PrimaryExpression	"""spsr"""		465580	1					
ANR	465651	PrimaryExpression	"""cpsr"""		465580	2					
ANR	465652	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465580	4					
ANR	465653	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465580	0					
ANR	465654	Identifier	tbl_regs		465580	0					
ANR	465655	CallExpression	"get_nibble ( inst , 0 )"		465580	1					
ANR	465656	Callee	get_nibble		465580	0					
ANR	465657	Identifier	get_nibble		465580	0					
ANR	465658	ArgumentList	inst		465580	1					
ANR	465659	Argument	inst		465580	0					
ANR	465660	Identifier	inst		465580	0					
ANR	465661	Argument	0		465580	1					
ANR	465662	PrimaryExpression	0		465580	0					
ANR	465663	ReturnStatement	return 0 ;	150:2:4536:4544	465580	1	True				
ANR	465664	PrimaryExpression	0		465580	0					
ANR	465665	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""msr%s %s, #%u"" , get_cond ( inst ) , dst ? ""spsr"" : ""cpsr"" , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"	152:1:4550:4708	465580	4	True				
ANR	465666	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""msr%s %s, #%u"" , get_cond ( inst ) , dst ? ""spsr"" : ""cpsr"" , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"		465580	0		=			
ANR	465667	PtrMemberAccess	arminsn -> str_asm		465580	0					
ANR	465668	Identifier	arminsn		465580	0					
ANR	465669	Identifier	str_asm		465580	1					
ANR	465670	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""msr%s %s, #%u"" , get_cond ( inst ) , dst ? ""spsr"" : ""cpsr"" , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"		465580	1					
ANR	465671	Callee	r_str_appendf		465580	0					
ANR	465672	Identifier	r_str_appendf		465580	0					
ANR	465673	ArgumentList	arminsn -> str_asm		465580	1					
ANR	465674	Argument	arminsn -> str_asm		465580	0					
ANR	465675	PtrMemberAccess	arminsn -> str_asm		465580	0					
ANR	465676	Identifier	arminsn		465580	0					
ANR	465677	Identifier	str_asm		465580	1					
ANR	465678	Argument	"""msr%s %s, #%u"""		465580	1					
ANR	465679	PrimaryExpression	"""msr%s %s, #%u"""		465580	0					
ANR	465680	Argument	get_cond ( inst )		465580	2					
ANR	465681	CallExpression	get_cond ( inst )		465580	0					
ANR	465682	Callee	get_cond		465580	0					
ANR	465683	Identifier	get_cond		465580	0					
ANR	465684	ArgumentList	inst		465580	1					
ANR	465685	Argument	inst		465580	0					
ANR	465686	Identifier	inst		465580	0					
ANR	465687	Argument	"dst ? ""spsr"" : ""cpsr"""		465580	3					
ANR	465688	ConditionalExpression	"dst ? ""spsr"" : ""cpsr"""		465580	0					
ANR	465689	Condition	dst		465580	0					
ANR	465690	Identifier	dst		465580	0					
ANR	465691	PrimaryExpression	"""spsr"""		465580	1					
ANR	465692	PrimaryExpression	"""cpsr"""		465580	2					
ANR	465693	Argument	"ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) )"		465580	4					
ANR	465694	CallExpression	"ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) )"		465580	0					
ANR	465695	Callee	ROR32		465580	0					
ANR	465696	Identifier	ROR32		465580	0					
ANR	465697	ArgumentList	inst & 0xff		465580	1					
ANR	465698	Argument	inst & 0xff		465580	0					
ANR	465699	BitAndExpression	inst & 0xff		465580	0		&			
ANR	465700	Identifier	inst		465580	0					
ANR	465701	PrimaryExpression	0xff		465580	1					
ANR	465702	Argument	"2 * get_nibble ( inst , 2 )"		465580	1					
ANR	465703	MultiplicativeExpression	"2 * get_nibble ( inst , 2 )"		465580	0		*			
ANR	465704	PrimaryExpression	2		465580	0					
ANR	465705	CallExpression	"get_nibble ( inst , 2 )"		465580	1					
ANR	465706	Callee	get_nibble		465580	0					
ANR	465707	Identifier	get_nibble		465580	0					
ANR	465708	ArgumentList	inst		465580	1					
ANR	465709	Argument	inst		465580	0					
ANR	465710	Identifier	inst		465580	0					
ANR	465711	Argument	2		465580	1					
ANR	465712	PrimaryExpression	2		465580	0					
ANR	465713	ReturnStatement	return 0 ;	154:1:4711:4719	465580	5	True				
ANR	465714	PrimaryExpression	0		465580	0					
ANR	465715	ReturnType	static ut32		465580	1					
ANR	465716	Identifier	arm_disasm_msrtrans		465580	2					
ANR	465717	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		465580	3					
ANR	465718	Parameter	struct winedbg_arm_insn * arminsn	142:32:4199:4230	465580	0	True				
ANR	465719	ParameterType	struct winedbg_arm_insn *		465580	0					
ANR	465720	Identifier	arminsn		465580	1					
ANR	465721	Parameter	ut32 inst	142:66:4233:4241	465580	1	True				
ANR	465722	ParameterType	ut32		465580	0					
ANR	465723	Identifier	inst		465580	1					
ANR	465724	CFGEntryNode	ENTRY		465580		True				
ANR	465725	CFGExitNode	EXIT		465580		True				
ANR	465726	Symbol	get_cond		465580						
ANR	465727	Symbol	dst		465580						
ANR	465728	Symbol	tbl_regs		465580						
ANR	465729	Symbol	arminsn		465580						
ANR	465730	Symbol	simple		465580						
ANR	465731	Symbol	arminsn -> str_asm		465580						
ANR	465732	Symbol	* arminsn		465580						
ANR	465733	Symbol	get_nibble		465580						
ANR	465734	Symbol	immediate		465580						
ANR	465735	Symbol	* tbl_regs		465580						
ANR	465736	Symbol	inst		465580						
ANR	465737	Symbol	r_str_appendf		465580						
ANR	465738	Symbol	* get_nibble		465580						
ANR	465739	Symbol	ROR32		465580						
ANR	465740	Function	arm_disasm_wordmov	157:0:4724:5041							
ANR	465741	FunctionDef	"arm_disasm_wordmov (struct winedbg_arm_insn * arminsn , ut32 inst)"		465740	0					
ANR	465742	CompoundStatement		157:76:4800:5041	465740	0					
ANR	465743	IdentifierDeclStatement	short top = ( inst >> 22 ) & 0x01 ;	158:1:4803:4834	465740	0	True				
ANR	465744	IdentifierDecl	top = ( inst >> 22 ) & 0x01		465740	0					
ANR	465745	IdentifierDeclType	short		465740	0					
ANR	465746	Identifier	top		465740	1					
ANR	465747	AssignmentExpression	top = ( inst >> 22 ) & 0x01		465740	2		=			
ANR	465748	Identifier	top		465740	0					
ANR	465749	BitAndExpression	( inst >> 22 ) & 0x01		465740	1		&			
ANR	465750	ShiftExpression	inst >> 22		465740	0		>>			
ANR	465751	Identifier	inst		465740	0					
ANR	465752	PrimaryExpression	22		465740	1					
ANR	465753	PrimaryExpression	0x01		465740	1					
ANR	465754	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mov%s%s %s, #%u"" , top ? ""t"" : ""w"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 3 ) ] , ( get_nibble ( inst , 4 ) << 12 ) | ( inst & 0x0fff ) )"	160:1:4838:5028	465740	1	True				
ANR	465755	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mov%s%s %s, #%u"" , top ? ""t"" : ""w"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 3 ) ] , ( get_nibble ( inst , 4 ) << 12 ) | ( inst & 0x0fff ) )"		465740	0		=			
ANR	465756	PtrMemberAccess	arminsn -> str_asm		465740	0					
ANR	465757	Identifier	arminsn		465740	0					
ANR	465758	Identifier	str_asm		465740	1					
ANR	465759	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mov%s%s %s, #%u"" , top ? ""t"" : ""w"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 3 ) ] , ( get_nibble ( inst , 4 ) << 12 ) | ( inst & 0x0fff ) )"		465740	1					
ANR	465760	Callee	r_str_appendf		465740	0					
ANR	465761	Identifier	r_str_appendf		465740	0					
ANR	465762	ArgumentList	arminsn -> str_asm		465740	1					
ANR	465763	Argument	arminsn -> str_asm		465740	0					
ANR	465764	PtrMemberAccess	arminsn -> str_asm		465740	0					
ANR	465765	Identifier	arminsn		465740	0					
ANR	465766	Identifier	str_asm		465740	1					
ANR	465767	Argument	"""mov%s%s %s, #%u"""		465740	1					
ANR	465768	PrimaryExpression	"""mov%s%s %s, #%u"""		465740	0					
ANR	465769	Argument	"top ? ""t"" : ""w"""		465740	2					
ANR	465770	ConditionalExpression	"top ? ""t"" : ""w"""		465740	0					
ANR	465771	Condition	top		465740	0					
ANR	465772	Identifier	top		465740	0					
ANR	465773	PrimaryExpression	"""t"""		465740	1					
ANR	465774	PrimaryExpression	"""w"""		465740	2					
ANR	465775	Argument	get_cond ( inst )		465740	3					
ANR	465776	CallExpression	get_cond ( inst )		465740	0					
ANR	465777	Callee	get_cond		465740	0					
ANR	465778	Identifier	get_cond		465740	0					
ANR	465779	ArgumentList	inst		465740	1					
ANR	465780	Argument	inst		465740	0					
ANR	465781	Identifier	inst		465740	0					
ANR	465782	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		465740	4					
ANR	465783	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		465740	0					
ANR	465784	Identifier	tbl_regs		465740	0					
ANR	465785	CallExpression	"get_nibble ( inst , 3 )"		465740	1					
ANR	465786	Callee	get_nibble		465740	0					
ANR	465787	Identifier	get_nibble		465740	0					
ANR	465788	ArgumentList	inst		465740	1					
ANR	465789	Argument	inst		465740	0					
ANR	465790	Identifier	inst		465740	0					
ANR	465791	Argument	3		465740	1					
ANR	465792	PrimaryExpression	3		465740	0					
ANR	465793	Argument	"( get_nibble ( inst , 4 ) << 12 ) | ( inst & 0x0fff )"		465740	5					
ANR	465794	InclusiveOrExpression	"( get_nibble ( inst , 4 ) << 12 ) | ( inst & 0x0fff )"		465740	0		|			
ANR	465795	ShiftExpression	"get_nibble ( inst , 4 ) << 12"		465740	0		<<			
ANR	465796	CallExpression	"get_nibble ( inst , 4 )"		465740	0					
ANR	465797	Callee	get_nibble		465740	0					
ANR	465798	Identifier	get_nibble		465740	0					
ANR	465799	ArgumentList	inst		465740	1					
ANR	465800	Argument	inst		465740	0					
ANR	465801	Identifier	inst		465740	0					
ANR	465802	Argument	4		465740	1					
ANR	465803	PrimaryExpression	4		465740	0					
ANR	465804	PrimaryExpression	12		465740	1					
ANR	465805	BitAndExpression	inst & 0x0fff		465740	1		&			
ANR	465806	Identifier	inst		465740	0					
ANR	465807	PrimaryExpression	0x0fff		465740	1					
ANR	465808	ReturnStatement	return 0 ;	163:1:5031:5039	465740	2	True				
ANR	465809	PrimaryExpression	0		465740	0					
ANR	465810	ReturnType	static ut32		465740	1					
ANR	465811	Identifier	arm_disasm_wordmov		465740	2					
ANR	465812	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		465740	3					
ANR	465813	Parameter	struct winedbg_arm_insn * arminsn	157:31:4755:4786	465740	0	True				
ANR	465814	ParameterType	struct winedbg_arm_insn *		465740	0					
ANR	465815	Identifier	arminsn		465740	1					
ANR	465816	Parameter	ut32 inst	157:65:4789:4797	465740	1	True				
ANR	465817	ParameterType	ut32		465740	0					
ANR	465818	Identifier	inst		465740	1					
ANR	465819	CFGEntryNode	ENTRY		465740		True				
ANR	465820	CFGExitNode	EXIT		465740		True				
ANR	465821	Symbol	* arminsn		465740						
ANR	465822	Symbol	get_nibble		465740						
ANR	465823	Symbol	get_cond		465740						
ANR	465824	Symbol	top		465740						
ANR	465825	Symbol	* tbl_regs		465740						
ANR	465826	Symbol	tbl_regs		465740						
ANR	465827	Symbol	inst		465740						
ANR	465828	Symbol	r_str_appendf		465740						
ANR	465829	Symbol	* get_nibble		465740						
ANR	465830	Symbol	arminsn		465740						
ANR	465831	Symbol	arminsn -> str_asm		465740						
ANR	465832	Function	arm_disasm_nop	166:0:5044:5209							
ANR	465833	FunctionDef	"arm_disasm_nop (struct winedbg_arm_insn * arminsn , ut32 inst)"		465832	0					
ANR	465834	CompoundStatement		166:72:5116:5209	465832	0					
ANR	465835	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""nop%s"" , get_cond ( inst ) )"	167:1:5119:5196	465832	0	True				
ANR	465836	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""nop%s"" , get_cond ( inst ) )"		465832	0		=			
ANR	465837	PtrMemberAccess	arminsn -> str_asm		465832	0					
ANR	465838	Identifier	arminsn		465832	0					
ANR	465839	Identifier	str_asm		465832	1					
ANR	465840	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""nop%s"" , get_cond ( inst ) )"		465832	1					
ANR	465841	Callee	r_str_appendf		465832	0					
ANR	465842	Identifier	r_str_appendf		465832	0					
ANR	465843	ArgumentList	arminsn -> str_asm		465832	1					
ANR	465844	Argument	arminsn -> str_asm		465832	0					
ANR	465845	PtrMemberAccess	arminsn -> str_asm		465832	0					
ANR	465846	Identifier	arminsn		465832	0					
ANR	465847	Identifier	str_asm		465832	1					
ANR	465848	Argument	"""nop%s"""		465832	1					
ANR	465849	PrimaryExpression	"""nop%s"""		465832	0					
ANR	465850	Argument	get_cond ( inst )		465832	2					
ANR	465851	CallExpression	get_cond ( inst )		465832	0					
ANR	465852	Callee	get_cond		465832	0					
ANR	465853	Identifier	get_cond		465832	0					
ANR	465854	ArgumentList	inst		465832	1					
ANR	465855	Argument	inst		465832	0					
ANR	465856	Identifier	inst		465832	0					
ANR	465857	ReturnStatement	return 0 ;	168:1:5199:5207	465832	1	True				
ANR	465858	PrimaryExpression	0		465832	0					
ANR	465859	ReturnType	static ut32		465832	1					
ANR	465860	Identifier	arm_disasm_nop		465832	2					
ANR	465861	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		465832	3					
ANR	465862	Parameter	struct winedbg_arm_insn * arminsn	166:27:5071:5102	465832	0	True				
ANR	465863	ParameterType	struct winedbg_arm_insn *		465832	0					
ANR	465864	Identifier	arminsn		465832	1					
ANR	465865	Parameter	ut32 inst	166:61:5105:5113	465832	1	True				
ANR	465866	ParameterType	ut32		465832	0					
ANR	465867	Identifier	inst		465832	1					
ANR	465868	CFGEntryNode	ENTRY		465832		True				
ANR	465869	CFGExitNode	EXIT		465832		True				
ANR	465870	Symbol	* arminsn		465832						
ANR	465871	Symbol	get_cond		465832						
ANR	465872	Symbol	inst		465832						
ANR	465873	Symbol	r_str_appendf		465832						
ANR	465874	Symbol	arminsn		465832						
ANR	465875	Symbol	arminsn -> str_asm		465832						
ANR	465876	Function	arm_disasm_dataprocessing	171:0:5212:7042							
ANR	465877	FunctionDef	"arm_disasm_dataprocessing (struct winedbg_arm_insn * arminsn , ut32 inst)"		465876	0					
ANR	465878	CompoundStatement		171:83:5295:7042	465876	0					
ANR	465879	IdentifierDeclStatement	short condcodes = ( inst >> 20 ) & 0x01 ;	172:1:5298:5335	465876	0	True				
ANR	465880	IdentifierDecl	condcodes = ( inst >> 20 ) & 0x01		465876	0					
ANR	465881	IdentifierDeclType	short		465876	0					
ANR	465882	Identifier	condcodes		465876	1					
ANR	465883	AssignmentExpression	condcodes = ( inst >> 20 ) & 0x01		465876	2		=			
ANR	465884	Identifier	condcodes		465876	0					
ANR	465885	BitAndExpression	( inst >> 20 ) & 0x01		465876	1		&			
ANR	465886	ShiftExpression	inst >> 20		465876	0		>>			
ANR	465887	Identifier	inst		465876	0					
ANR	465888	PrimaryExpression	20		465876	1					
ANR	465889	PrimaryExpression	0x01		465876	1					
ANR	465890	IdentifierDeclStatement	short opcode = ( inst >> 21 ) & 0x0f ;	173:1:5338:5375	465876	1	True				
ANR	465891	IdentifierDecl	opcode = ( inst >> 21 ) & 0x0f		465876	0					
ANR	465892	IdentifierDeclType	short		465876	0					
ANR	465893	Identifier	opcode		465876	1					
ANR	465894	AssignmentExpression	opcode = ( inst >> 21 ) & 0x0f		465876	2		=			
ANR	465895	Identifier	opcode		465876	0					
ANR	465896	BitAndExpression	( inst >> 21 ) & 0x0f		465876	1		&			
ANR	465897	ShiftExpression	inst >> 21		465876	0		>>			
ANR	465898	Identifier	inst		465876	0					
ANR	465899	PrimaryExpression	21		465876	1					
ANR	465900	PrimaryExpression	0x0f		465876	1					
ANR	465901	IdentifierDeclStatement	short immediate = ( inst >> 25 ) & 0x01 ;	174:1:5378:5415	465876	2	True				
ANR	465902	IdentifierDecl	immediate = ( inst >> 25 ) & 0x01		465876	0					
ANR	465903	IdentifierDeclType	short		465876	0					
ANR	465904	Identifier	immediate		465876	1					
ANR	465905	AssignmentExpression	immediate = ( inst >> 25 ) & 0x01		465876	2		=			
ANR	465906	Identifier	immediate		465876	0					
ANR	465907	BitAndExpression	( inst >> 25 ) & 0x01		465876	1		&			
ANR	465908	ShiftExpression	inst >> 25		465876	0		>>			
ANR	465909	Identifier	inst		465876	0					
ANR	465910	PrimaryExpression	25		465876	1					
ANR	465911	PrimaryExpression	0x01		465876	1					
ANR	465912	IdentifierDeclStatement	short no_op1 = ( opcode & 0x0d ) == 0x0d ;	175:1:5418:5459	465876	3	True				
ANR	465913	IdentifierDecl	no_op1 = ( opcode & 0x0d ) == 0x0d		465876	0					
ANR	465914	IdentifierDeclType	short		465876	0					
ANR	465915	Identifier	no_op1		465876	1					
ANR	465916	AssignmentExpression	no_op1 = ( opcode & 0x0d ) == 0x0d		465876	2		=			
ANR	465917	Identifier	no_op1		465876	0					
ANR	465918	EqualityExpression	( opcode & 0x0d ) == 0x0d		465876	1		==			
ANR	465919	BitAndExpression	opcode & 0x0d		465876	0		&			
ANR	465920	Identifier	opcode		465876	0					
ANR	465921	PrimaryExpression	0x0d		465876	1					
ANR	465922	PrimaryExpression	0x0d		465876	1					
ANR	465923	IdentifierDeclStatement	short no_dst = ( opcode & 0x0c ) == 0x08 ;	176:1:5462:5503	465876	4	True				
ANR	465924	IdentifierDecl	no_dst = ( opcode & 0x0c ) == 0x08		465876	0					
ANR	465925	IdentifierDeclType	short		465876	0					
ANR	465926	Identifier	no_dst		465876	1					
ANR	465927	AssignmentExpression	no_dst = ( opcode & 0x0c ) == 0x08		465876	2		=			
ANR	465928	Identifier	no_dst		465876	0					
ANR	465929	EqualityExpression	( opcode & 0x0c ) == 0x08		465876	1		==			
ANR	465930	BitAndExpression	opcode & 0x0c		465876	0		&			
ANR	465931	Identifier	opcode		465876	0					
ANR	465932	PrimaryExpression	0x0c		465876	1					
ANR	465933	PrimaryExpression	0x08		465876	1					
ANR	465934	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s"" , tbl_dataops [ opcode ] , condcodes ? ""s"" : """" , get_cond ( inst ) )"	178:1:5507:5628	465876	5	True				
ANR	465935	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s"" , tbl_dataops [ opcode ] , condcodes ? ""s"" : """" , get_cond ( inst ) )"		465876	0		=			
ANR	465936	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	465937	Identifier	arminsn		465876	0					
ANR	465938	Identifier	str_asm		465876	1					
ANR	465939	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s%s"" , tbl_dataops [ opcode ] , condcodes ? ""s"" : """" , get_cond ( inst ) )"		465876	1					
ANR	465940	Callee	r_str_appendf		465876	0					
ANR	465941	Identifier	r_str_appendf		465876	0					
ANR	465942	ArgumentList	arminsn -> str_asm		465876	1					
ANR	465943	Argument	arminsn -> str_asm		465876	0					
ANR	465944	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	465945	Identifier	arminsn		465876	0					
ANR	465946	Identifier	str_asm		465876	1					
ANR	465947	Argument	"""%s%s%s"""		465876	1					
ANR	465948	PrimaryExpression	"""%s%s%s"""		465876	0					
ANR	465949	Argument	tbl_dataops [ opcode ]		465876	2					
ANR	465950	ArrayIndexing	tbl_dataops [ opcode ]		465876	0					
ANR	465951	Identifier	tbl_dataops		465876	0					
ANR	465952	Identifier	opcode		465876	1					
ANR	465953	Argument	"condcodes ? ""s"" : """""		465876	3					
ANR	465954	ConditionalExpression	"condcodes ? ""s"" : """""		465876	0					
ANR	465955	Condition	condcodes		465876	0					
ANR	465956	Identifier	condcodes		465876	0					
ANR	465957	PrimaryExpression	"""s"""		465876	1					
ANR	465958	PrimaryExpression	""""""		465876	2					
ANR	465959	Argument	get_cond ( inst )		465876	4					
ANR	465960	CallExpression	get_cond ( inst )		465876	0					
ANR	465961	Callee	get_cond		465876	0					
ANR	465962	Identifier	get_cond		465876	0					
ANR	465963	ArgumentList	inst		465876	1					
ANR	465964	Argument	inst		465876	0					
ANR	465965	Identifier	inst		465876	0					
ANR	465966	IfStatement	if ( ! no_dst )		465876	6					
ANR	465967	Condition	! no_dst	179:5:5635:5641	465876	0	True				
ANR	465968	UnaryOperationExpression	! no_dst		465876	0					
ANR	465969	UnaryOperator	!		465876	0					
ANR	465970	Identifier	no_dst		465876	1					
ANR	465971	CompoundStatement		9:14:348:348	465876	1					
ANR	465972	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"	180:2:5648:5740	465876	0	True				
ANR	465973	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"		465876	0		=			
ANR	465974	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	465975	Identifier	arminsn		465876	0					
ANR	465976	Identifier	str_asm		465876	1					
ANR	465977	CallExpression	"r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"		465876	1					
ANR	465978	Callee	r_str_appendf		465876	0					
ANR	465979	Identifier	r_str_appendf		465876	0					
ANR	465980	ArgumentList	arminsn -> str_asm		465876	1					
ANR	465981	Argument	arminsn -> str_asm		465876	0					
ANR	465982	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	465983	Identifier	arminsn		465876	0					
ANR	465984	Identifier	str_asm		465876	1					
ANR	465985	Argument	""" %s, """		465876	1					
ANR	465986	PrimaryExpression	""" %s, """		465876	0					
ANR	465987	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		465876	2					
ANR	465988	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		465876	0					
ANR	465989	Identifier	tbl_regs		465876	0					
ANR	465990	CallExpression	"get_nibble ( inst , 3 )"		465876	1					
ANR	465991	Callee	get_nibble		465876	0					
ANR	465992	Identifier	get_nibble		465876	0					
ANR	465993	ArgumentList	inst		465876	1					
ANR	465994	Argument	inst		465876	0					
ANR	465995	Identifier	inst		465876	0					
ANR	465996	Argument	3		465876	1					
ANR	465997	PrimaryExpression	3		465876	0					
ANR	465998	ElseStatement	else		465876	0					
ANR	465999	CompoundStatement		12:6:455:455	465876	0					
ANR	466000	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" "" )"	183:2:5755:5811	465876	0	True				
ANR	466001	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" "" )"		465876	0		=			
ANR	466002	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466003	Identifier	arminsn		465876	0					
ANR	466004	Identifier	str_asm		465876	1					
ANR	466005	CallExpression	"r_str_appendf ( arminsn -> str_asm , "" "" )"		465876	1					
ANR	466006	Callee	r_str_appendf		465876	0					
ANR	466007	Identifier	r_str_appendf		465876	0					
ANR	466008	ArgumentList	arminsn -> str_asm		465876	1					
ANR	466009	Argument	arminsn -> str_asm		465876	0					
ANR	466010	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466011	Identifier	arminsn		465876	0					
ANR	466012	Identifier	str_asm		465876	1					
ANR	466013	Argument	""" """		465876	1					
ANR	466014	PrimaryExpression	""" """		465876	0					
ANR	466015	IfStatement	if ( no_op1 )		465876	7					
ANR	466016	Condition	no_op1	185:5:5822:5827	465876	0	True				
ANR	466017	Identifier	no_op1		465876	0					
ANR	466018	CompoundStatement		15:13:534:534	465876	1					
ANR	466019	IfStatement	if ( immediate )		465876	0					
ANR	466020	Condition	immediate	186:6:5838:5846	465876	0	True				
ANR	466021	Identifier	immediate		465876	0					
ANR	466022	CompoundStatement		16:17:553:553	465876	1					
ANR	466023	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""#%u"" , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"	187:3:5854:5959	465876	0	True				
ANR	466024	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""#%u"" , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"		465876	0		=			
ANR	466025	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466026	Identifier	arminsn		465876	0					
ANR	466027	Identifier	str_asm		465876	1					
ANR	466028	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""#%u"" , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"		465876	1					
ANR	466029	Callee	r_str_appendf		465876	0					
ANR	466030	Identifier	r_str_appendf		465876	0					
ANR	466031	ArgumentList	arminsn -> str_asm		465876	1					
ANR	466032	Argument	arminsn -> str_asm		465876	0					
ANR	466033	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466034	Identifier	arminsn		465876	0					
ANR	466035	Identifier	str_asm		465876	1					
ANR	466036	Argument	"""#%u"""		465876	1					
ANR	466037	PrimaryExpression	"""#%u"""		465876	0					
ANR	466038	Argument	"ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) )"		465876	2					
ANR	466039	CallExpression	"ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) )"		465876	0					
ANR	466040	Callee	ROR32		465876	0					
ANR	466041	Identifier	ROR32		465876	0					
ANR	466042	ArgumentList	inst & 0xff		465876	1					
ANR	466043	Argument	inst & 0xff		465876	0					
ANR	466044	BitAndExpression	inst & 0xff		465876	0		&			
ANR	466045	Identifier	inst		465876	0					
ANR	466046	PrimaryExpression	0xff		465876	1					
ANR	466047	Argument	"2 * get_nibble ( inst , 2 )"		465876	1					
ANR	466048	MultiplicativeExpression	"2 * get_nibble ( inst , 2 )"		465876	0		*			
ANR	466049	PrimaryExpression	2		465876	0					
ANR	466050	CallExpression	"get_nibble ( inst , 2 )"		465876	1					
ANR	466051	Callee	get_nibble		465876	0					
ANR	466052	Identifier	get_nibble		465876	0					
ANR	466053	ArgumentList	inst		465876	1					
ANR	466054	Argument	inst		465876	0					
ANR	466055	Identifier	inst		465876	0					
ANR	466056	Argument	2		465876	1					
ANR	466057	PrimaryExpression	2		465876	0					
ANR	466058	ElseStatement	else		465876	0					
ANR	466059	CompoundStatement		19:7:676:676	465876	0					
ANR	466060	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ get_nibble ( inst , 0 ) ] )"	190:3:5977:6066	465876	0	True				
ANR	466061	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ get_nibble ( inst , 0 ) ] )"		465876	0		=			
ANR	466062	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466063	Identifier	arminsn		465876	0					
ANR	466064	Identifier	str_asm		465876	1					
ANR	466065	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ get_nibble ( inst , 0 ) ] )"		465876	1					
ANR	466066	Callee	r_str_appendf		465876	0					
ANR	466067	Identifier	r_str_appendf		465876	0					
ANR	466068	ArgumentList	arminsn -> str_asm		465876	1					
ANR	466069	Argument	arminsn -> str_asm		465876	0					
ANR	466070	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466071	Identifier	arminsn		465876	0					
ANR	466072	Identifier	str_asm		465876	1					
ANR	466073	Argument	"""%s"""		465876	1					
ANR	466074	PrimaryExpression	"""%s"""		465876	0					
ANR	466075	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465876	2					
ANR	466076	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465876	0					
ANR	466077	Identifier	tbl_regs		465876	0					
ANR	466078	CallExpression	"get_nibble ( inst , 0 )"		465876	1					
ANR	466079	Callee	get_nibble		465876	0					
ANR	466080	Identifier	get_nibble		465876	0					
ANR	466081	ArgumentList	inst		465876	1					
ANR	466082	Argument	inst		465876	0					
ANR	466083	Identifier	inst		465876	0					
ANR	466084	Argument	0		465876	1					
ANR	466085	PrimaryExpression	0		465876	0					
ANR	466086	ElseStatement	else		465876	0					
ANR	466087	CompoundStatement		22:8:784:784	465876	0					
ANR	466088	IfStatement	if ( immediate )		465876	0					
ANR	466089	Condition	immediate	193:6:6088:6096	465876	0	True				
ANR	466090	Identifier	immediate		465876	0					
ANR	466091	CompoundStatement		23:17:803:803	465876	1					
ANR	466092	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, #%u"" , tbl_regs [ get_nibble ( inst , 4 ) ] , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"	194:3:6104:6250	465876	0	True				
ANR	466093	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, #%u"" , tbl_regs [ get_nibble ( inst , 4 ) ] , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"		465876	0		=			
ANR	466094	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466095	Identifier	arminsn		465876	0					
ANR	466096	Identifier	str_asm		465876	1					
ANR	466097	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, #%u"" , tbl_regs [ get_nibble ( inst , 4 ) ] , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"		465876	1					
ANR	466098	Callee	r_str_appendf		465876	0					
ANR	466099	Identifier	r_str_appendf		465876	0					
ANR	466100	ArgumentList	arminsn -> str_asm		465876	1					
ANR	466101	Argument	arminsn -> str_asm		465876	0					
ANR	466102	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466103	Identifier	arminsn		465876	0					
ANR	466104	Identifier	str_asm		465876	1					
ANR	466105	Argument	"""%s, #%u"""		465876	1					
ANR	466106	PrimaryExpression	"""%s, #%u"""		465876	0					
ANR	466107	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		465876	2					
ANR	466108	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		465876	0					
ANR	466109	Identifier	tbl_regs		465876	0					
ANR	466110	CallExpression	"get_nibble ( inst , 4 )"		465876	1					
ANR	466111	Callee	get_nibble		465876	0					
ANR	466112	Identifier	get_nibble		465876	0					
ANR	466113	ArgumentList	inst		465876	1					
ANR	466114	Argument	inst		465876	0					
ANR	466115	Identifier	inst		465876	0					
ANR	466116	Argument	4		465876	1					
ANR	466117	PrimaryExpression	4		465876	0					
ANR	466118	Argument	"ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) )"		465876	3					
ANR	466119	CallExpression	"ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) )"		465876	0					
ANR	466120	Callee	ROR32		465876	0					
ANR	466121	Identifier	ROR32		465876	0					
ANR	466122	ArgumentList	inst & 0xff		465876	1					
ANR	466123	Argument	inst & 0xff		465876	0					
ANR	466124	BitAndExpression	inst & 0xff		465876	0		&			
ANR	466125	Identifier	inst		465876	0					
ANR	466126	PrimaryExpression	0xff		465876	1					
ANR	466127	Argument	"2 * get_nibble ( inst , 2 )"		465876	1					
ANR	466128	MultiplicativeExpression	"2 * get_nibble ( inst , 2 )"		465876	0		*			
ANR	466129	PrimaryExpression	2		465876	0					
ANR	466130	CallExpression	"get_nibble ( inst , 2 )"		465876	1					
ANR	466131	Callee	get_nibble		465876	0					
ANR	466132	Identifier	get_nibble		465876	0					
ANR	466133	ArgumentList	inst		465876	1					
ANR	466134	Argument	inst		465876	0					
ANR	466135	Identifier	inst		465876	0					
ANR	466136	Argument	2		465876	1					
ANR	466137	PrimaryExpression	2		465876	0					
ANR	466138	ElseStatement	else		465876	0					
ANR	466139	IfStatement	if ( ( ( inst >> 4 ) & 0xff ) == 0x00 )		465876	0					
ANR	466140	Condition	( ( inst >> 4 ) & 0xff ) == 0x00	197:11:6267:6294	465876	0	True				
ANR	466141	EqualityExpression	( ( inst >> 4 ) & 0xff ) == 0x00		465876	0		==			
ANR	466142	BitAndExpression	( inst >> 4 ) & 0xff		465876	0		&			
ANR	466143	ShiftExpression	inst >> 4		465876	0		>>			
ANR	466144	Identifier	inst		465876	0					
ANR	466145	PrimaryExpression	4		465876	1					
ANR	466146	PrimaryExpression	0xff		465876	1					
ANR	466147	PrimaryExpression	0x00		465876	1					
ANR	466148	CompoundStatement		27:41:1001:1001	465876	1					
ANR	466149	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	198:3:6317:6447	465876	0	True				
ANR	466150	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		465876	0		=			
ANR	466151	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466152	Identifier	arminsn		465876	0					
ANR	466153	Identifier	str_asm		465876	1					
ANR	466154	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		465876	1					
ANR	466155	Callee	r_str_appendf		465876	0					
ANR	466156	Identifier	r_str_appendf		465876	0					
ANR	466157	ArgumentList	arminsn -> str_asm		465876	1					
ANR	466158	Argument	arminsn -> str_asm		465876	0					
ANR	466159	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466160	Identifier	arminsn		465876	0					
ANR	466161	Identifier	str_asm		465876	1					
ANR	466162	Argument	"""%s, %s"""		465876	1					
ANR	466163	PrimaryExpression	"""%s, %s"""		465876	0					
ANR	466164	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		465876	2					
ANR	466165	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		465876	0					
ANR	466166	Identifier	tbl_regs		465876	0					
ANR	466167	CallExpression	"get_nibble ( inst , 4 )"		465876	1					
ANR	466168	Callee	get_nibble		465876	0					
ANR	466169	Identifier	get_nibble		465876	0					
ANR	466170	ArgumentList	inst		465876	1					
ANR	466171	Argument	inst		465876	0					
ANR	466172	Identifier	inst		465876	0					
ANR	466173	Argument	4		465876	1					
ANR	466174	PrimaryExpression	4		465876	0					
ANR	466175	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465876	3					
ANR	466176	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465876	0					
ANR	466177	Identifier	tbl_regs		465876	0					
ANR	466178	CallExpression	"get_nibble ( inst , 0 )"		465876	1					
ANR	466179	Callee	get_nibble		465876	0					
ANR	466180	Identifier	get_nibble		465876	0					
ANR	466181	ArgumentList	inst		465876	1					
ANR	466182	Argument	inst		465876	0					
ANR	466183	Identifier	inst		465876	0					
ANR	466184	Argument	0		465876	1					
ANR	466185	PrimaryExpression	0		465876	0					
ANR	466186	ElseStatement	else		465876	0					
ANR	466187	IfStatement	if ( ( ( inst >> 4 ) & 0x09 ) == 0x01 )		465876	0					
ANR	466188	Condition	( ( inst >> 4 ) & 0x09 ) == 0x01	201:11:6464:6491	465876	0	True				
ANR	466189	EqualityExpression	( ( inst >> 4 ) & 0x09 ) == 0x01		465876	0		==			
ANR	466190	BitAndExpression	( inst >> 4 ) & 0x09		465876	0		&			
ANR	466191	ShiftExpression	inst >> 4		465876	0		>>			
ANR	466192	Identifier	inst		465876	0					
ANR	466193	PrimaryExpression	4		465876	1					
ANR	466194	PrimaryExpression	0x09		465876	1					
ANR	466195	PrimaryExpression	0x01		465876	1					
ANR	466196	CompoundStatement		31:41:1198:1198	465876	1					
ANR	466197	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , tbl_regs [ ( inst >> 8 ) & 0x0f ] )"	202:3:6520:6724	465876	0	True				
ANR	466198	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , tbl_regs [ ( inst >> 8 ) & 0x0f ] )"		465876	0		=			
ANR	466199	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466200	Identifier	arminsn		465876	0					
ANR	466201	Identifier	str_asm		465876	1					
ANR	466202	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , tbl_regs [ ( inst >> 8 ) & 0x0f ] )"		465876	1					
ANR	466203	Callee	r_str_appendf		465876	0					
ANR	466204	Identifier	r_str_appendf		465876	0					
ANR	466205	ArgumentList	arminsn -> str_asm		465876	1					
ANR	466206	Argument	arminsn -> str_asm		465876	0					
ANR	466207	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466208	Identifier	arminsn		465876	0					
ANR	466209	Identifier	str_asm		465876	1					
ANR	466210	Argument	"""%s, %s, %s %s"""		465876	1					
ANR	466211	PrimaryExpression	"""%s, %s, %s %s"""		465876	0					
ANR	466212	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		465876	2					
ANR	466213	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		465876	0					
ANR	466214	Identifier	tbl_regs		465876	0					
ANR	466215	CallExpression	"get_nibble ( inst , 4 )"		465876	1					
ANR	466216	Callee	get_nibble		465876	0					
ANR	466217	Identifier	get_nibble		465876	0					
ANR	466218	ArgumentList	inst		465876	1					
ANR	466219	Argument	inst		465876	0					
ANR	466220	Identifier	inst		465876	0					
ANR	466221	Argument	4		465876	1					
ANR	466222	PrimaryExpression	4		465876	0					
ANR	466223	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465876	3					
ANR	466224	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465876	0					
ANR	466225	Identifier	tbl_regs		465876	0					
ANR	466226	CallExpression	"get_nibble ( inst , 0 )"		465876	1					
ANR	466227	Callee	get_nibble		465876	0					
ANR	466228	Identifier	get_nibble		465876	0					
ANR	466229	ArgumentList	inst		465876	1					
ANR	466230	Argument	inst		465876	0					
ANR	466231	Identifier	inst		465876	0					
ANR	466232	Argument	0		465876	1					
ANR	466233	PrimaryExpression	0		465876	0					
ANR	466234	Argument	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		465876	4					
ANR	466235	ArrayIndexing	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		465876	0					
ANR	466236	Identifier	tbl_shifts		465876	0					
ANR	466237	BitAndExpression	( inst >> 5 ) & 0x03		465876	1		&			
ANR	466238	ShiftExpression	inst >> 5		465876	0		>>			
ANR	466239	Identifier	inst		465876	0					
ANR	466240	PrimaryExpression	5		465876	1					
ANR	466241	PrimaryExpression	0x03		465876	1					
ANR	466242	Argument	tbl_regs [ ( inst >> 8 ) & 0x0f ]		465876	5					
ANR	466243	ArrayIndexing	tbl_regs [ ( inst >> 8 ) & 0x0f ]		465876	0					
ANR	466244	Identifier	tbl_regs		465876	0					
ANR	466245	BitAndExpression	( inst >> 8 ) & 0x0f		465876	1		&			
ANR	466246	ShiftExpression	inst >> 8		465876	0		>>			
ANR	466247	Identifier	inst		465876	0					
ANR	466248	PrimaryExpression	8		465876	1					
ANR	466249	PrimaryExpression	0x0f		465876	1					
ANR	466250	ElseStatement	else		465876	0					
ANR	466251	IfStatement	if ( ( ( inst >> 4 ) & 0x01 ) == 0x00 )		465876	0					
ANR	466252	Condition	( ( inst >> 4 ) & 0x01 ) == 0x00	206:11:6741:6768	465876	0	True				
ANR	466253	EqualityExpression	( ( inst >> 4 ) & 0x01 ) == 0x00		465876	0		==			
ANR	466254	BitAndExpression	( inst >> 4 ) & 0x01		465876	0		&			
ANR	466255	ShiftExpression	inst >> 4		465876	0		>>			
ANR	466256	Identifier	inst		465876	0					
ANR	466257	PrimaryExpression	4		465876	1					
ANR	466258	PrimaryExpression	0x01		465876	1					
ANR	466259	PrimaryExpression	0x00		465876	1					
ANR	466260	CompoundStatement		36:41:1475:1475	465876	1					
ANR	466261	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"	207:3:6798:6993	465876	0	True				
ANR	466262	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"		465876	0		=			
ANR	466263	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466264	Identifier	arminsn		465876	0					
ANR	466265	Identifier	str_asm		465876	1					
ANR	466266	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"		465876	1					
ANR	466267	Callee	r_str_appendf		465876	0					
ANR	466268	Identifier	r_str_appendf		465876	0					
ANR	466269	ArgumentList	arminsn -> str_asm		465876	1					
ANR	466270	Argument	arminsn -> str_asm		465876	0					
ANR	466271	PtrMemberAccess	arminsn -> str_asm		465876	0					
ANR	466272	Identifier	arminsn		465876	0					
ANR	466273	Identifier	str_asm		465876	1					
ANR	466274	Argument	"""%s, %s, %s #%d"""		465876	1					
ANR	466275	PrimaryExpression	"""%s, %s, %s #%d"""		465876	0					
ANR	466276	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		465876	2					
ANR	466277	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		465876	0					
ANR	466278	Identifier	tbl_regs		465876	0					
ANR	466279	CallExpression	"get_nibble ( inst , 4 )"		465876	1					
ANR	466280	Callee	get_nibble		465876	0					
ANR	466281	Identifier	get_nibble		465876	0					
ANR	466282	ArgumentList	inst		465876	1					
ANR	466283	Argument	inst		465876	0					
ANR	466284	Identifier	inst		465876	0					
ANR	466285	Argument	4		465876	1					
ANR	466286	PrimaryExpression	4		465876	0					
ANR	466287	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465876	3					
ANR	466288	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		465876	0					
ANR	466289	Identifier	tbl_regs		465876	0					
ANR	466290	CallExpression	"get_nibble ( inst , 0 )"		465876	1					
ANR	466291	Callee	get_nibble		465876	0					
ANR	466292	Identifier	get_nibble		465876	0					
ANR	466293	ArgumentList	inst		465876	1					
ANR	466294	Argument	inst		465876	0					
ANR	466295	Identifier	inst		465876	0					
ANR	466296	Argument	0		465876	1					
ANR	466297	PrimaryExpression	0		465876	0					
ANR	466298	Argument	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		465876	4					
ANR	466299	ArrayIndexing	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		465876	0					
ANR	466300	Identifier	tbl_shifts		465876	0					
ANR	466301	BitAndExpression	( inst >> 5 ) & 0x03		465876	1		&			
ANR	466302	ShiftExpression	inst >> 5		465876	0		>>			
ANR	466303	Identifier	inst		465876	0					
ANR	466304	PrimaryExpression	5		465876	1					
ANR	466305	PrimaryExpression	0x03		465876	1					
ANR	466306	Argument	( inst >> 7 ) & 0x1f		465876	5					
ANR	466307	BitAndExpression	( inst >> 7 ) & 0x1f		465876	0		&			
ANR	466308	ShiftExpression	inst >> 7		465876	0		>>			
ANR	466309	Identifier	inst		465876	0					
ANR	466310	PrimaryExpression	7		465876	1					
ANR	466311	PrimaryExpression	0x1f		465876	1					
ANR	466312	ElseStatement	else		465876	0					
ANR	466313	CompoundStatement		41:7:1710:1710	465876	0					
ANR	466314	ReturnStatement	return inst ;	212:3:7011:7022	465876	0	True				
ANR	466315	Identifier	inst		465876	0					
ANR	466316	ReturnStatement	return 0 ;	215:1:7032:7040	465876	8	True				
ANR	466317	PrimaryExpression	0		465876	0					
ANR	466318	ReturnType	static ut32		465876	1					
ANR	466319	Identifier	arm_disasm_dataprocessing		465876	2					
ANR	466320	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		465876	3					
ANR	466321	Parameter	struct winedbg_arm_insn * arminsn	171:38:5250:5281	465876	0	True				
ANR	466322	ParameterType	struct winedbg_arm_insn *		465876	0					
ANR	466323	Identifier	arminsn		465876	1					
ANR	466324	Parameter	ut32 inst	171:72:5284:5292	465876	1	True				
ANR	466325	ParameterType	ut32		465876	0					
ANR	466326	Identifier	inst		465876	1					
ANR	466327	CFGEntryNode	ENTRY		465876		True				
ANR	466328	CFGExitNode	EXIT		465876		True				
ANR	466329	Symbol	get_cond		465876						
ANR	466330	Symbol	tbl_shifts		465876						
ANR	466331	Symbol	* inst		465876						
ANR	466332	Symbol	* tbl_shifts		465876						
ANR	466333	Symbol	tbl_regs		465876						
ANR	466334	Symbol	arminsn		465876						
ANR	466335	Symbol	opcode		465876						
ANR	466336	Symbol	no_op1		465876						
ANR	466337	Symbol	arminsn -> str_asm		465876						
ANR	466338	Symbol	* arminsn		465876						
ANR	466339	Symbol	get_nibble		465876						
ANR	466340	Symbol	immediate		465876						
ANR	466341	Symbol	tbl_dataops		465876						
ANR	466342	Symbol	condcodes		465876						
ANR	466343	Symbol	* tbl_regs		465876						
ANR	466344	Symbol	inst		465876						
ANR	466345	Symbol	r_str_appendf		465876						
ANR	466346	Symbol	* tbl_dataops		465876						
ANR	466347	Symbol	* get_nibble		465876						
ANR	466348	Symbol	no_dst		465876						
ANR	466349	Symbol	ROR32		465876						
ANR	466350	Symbol	* opcode		465876						
ANR	466351	Function	arm_disasm_singletrans	218:0:7045:9044							
ANR	466352	FunctionDef	"arm_disasm_singletrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		466351	0					
ANR	466353	CompoundStatement		218:80:7125:9044	466351	0					
ANR	466354	IdentifierDeclStatement	short load = ( inst >> 20 ) & 0x01 ;	219:1:7128:7165	466351	0	True				
ANR	466355	IdentifierDecl	load = ( inst >> 20 ) & 0x01		466351	0					
ANR	466356	IdentifierDeclType	short		466351	0					
ANR	466357	Identifier	load		466351	1					
ANR	466358	AssignmentExpression	load = ( inst >> 20 ) & 0x01		466351	2		=			
ANR	466359	Identifier	load		466351	0					
ANR	466360	BitAndExpression	( inst >> 20 ) & 0x01		466351	1		&			
ANR	466361	ShiftExpression	inst >> 20		466351	0		>>			
ANR	466362	Identifier	inst		466351	0					
ANR	466363	PrimaryExpression	20		466351	1					
ANR	466364	PrimaryExpression	0x01		466351	1					
ANR	466365	IdentifierDeclStatement	short writeback = ( inst >> 21 ) & 0x01 ;	220:1:7168:7205	466351	1	True				
ANR	466366	IdentifierDecl	writeback = ( inst >> 21 ) & 0x01		466351	0					
ANR	466367	IdentifierDeclType	short		466351	0					
ANR	466368	Identifier	writeback		466351	1					
ANR	466369	AssignmentExpression	writeback = ( inst >> 21 ) & 0x01		466351	2		=			
ANR	466370	Identifier	writeback		466351	0					
ANR	466371	BitAndExpression	( inst >> 21 ) & 0x01		466351	1		&			
ANR	466372	ShiftExpression	inst >> 21		466351	0		>>			
ANR	466373	Identifier	inst		466351	0					
ANR	466374	PrimaryExpression	21		466351	1					
ANR	466375	PrimaryExpression	0x01		466351	1					
ANR	466376	IdentifierDeclStatement	short byte = ( inst >> 22 ) & 0x01 ;	221:1:7208:7245	466351	2	True				
ANR	466377	IdentifierDecl	byte = ( inst >> 22 ) & 0x01		466351	0					
ANR	466378	IdentifierDeclType	short		466351	0					
ANR	466379	Identifier	byte		466351	1					
ANR	466380	AssignmentExpression	byte = ( inst >> 22 ) & 0x01		466351	2		=			
ANR	466381	Identifier	byte		466351	0					
ANR	466382	BitAndExpression	( inst >> 22 ) & 0x01		466351	1		&			
ANR	466383	ShiftExpression	inst >> 22		466351	0		>>			
ANR	466384	Identifier	inst		466351	0					
ANR	466385	PrimaryExpression	22		466351	1					
ANR	466386	PrimaryExpression	0x01		466351	1					
ANR	466387	IdentifierDeclStatement	short direction = ( inst >> 23 ) & 0x01 ;	222:1:7248:7285	466351	3	True				
ANR	466388	IdentifierDecl	direction = ( inst >> 23 ) & 0x01		466351	0					
ANR	466389	IdentifierDeclType	short		466351	0					
ANR	466390	Identifier	direction		466351	1					
ANR	466391	AssignmentExpression	direction = ( inst >> 23 ) & 0x01		466351	2		=			
ANR	466392	Identifier	direction		466351	0					
ANR	466393	BitAndExpression	( inst >> 23 ) & 0x01		466351	1		&			
ANR	466394	ShiftExpression	inst >> 23		466351	0		>>			
ANR	466395	Identifier	inst		466351	0					
ANR	466396	PrimaryExpression	23		466351	1					
ANR	466397	PrimaryExpression	0x01		466351	1					
ANR	466398	IdentifierDeclStatement	short indexing = ( inst >> 24 ) & 0x01 ;	223:1:7288:7325	466351	4	True				
ANR	466399	IdentifierDecl	indexing = ( inst >> 24 ) & 0x01		466351	0					
ANR	466400	IdentifierDeclType	short		466351	0					
ANR	466401	Identifier	indexing		466351	1					
ANR	466402	AssignmentExpression	indexing = ( inst >> 24 ) & 0x01		466351	2		=			
ANR	466403	Identifier	indexing		466351	0					
ANR	466404	BitAndExpression	( inst >> 24 ) & 0x01		466351	1		&			
ANR	466405	ShiftExpression	inst >> 24		466351	0		>>			
ANR	466406	Identifier	inst		466351	0					
ANR	466407	PrimaryExpression	24		466351	1					
ANR	466408	PrimaryExpression	0x01		466351	1					
ANR	466409	IdentifierDeclStatement	short immediate = ! ( ( inst >> 25 ) & 0x01 ) ;	224:1:7328:7368	466351	5	True				
ANR	466410	IdentifierDecl	immediate = ! ( ( inst >> 25 ) & 0x01 )		466351	0					
ANR	466411	IdentifierDeclType	short		466351	0					
ANR	466412	Identifier	immediate		466351	1					
ANR	466413	AssignmentExpression	immediate = ! ( ( inst >> 25 ) & 0x01 )		466351	2		=			
ANR	466414	Identifier	immediate		466351	0					
ANR	466415	UnaryOperationExpression	! ( ( inst >> 25 ) & 0x01 )		466351	1					
ANR	466416	UnaryOperator	!		466351	0					
ANR	466417	BitAndExpression	( inst >> 25 ) & 0x01		466351	1		&			
ANR	466418	ShiftExpression	inst >> 25		466351	0		>>			
ANR	466419	Identifier	inst		466351	0					
ANR	466420	PrimaryExpression	25		466351	1					
ANR	466421	PrimaryExpression	0x01		466351	1					
ANR	466422	IdentifierDeclStatement	short offset = inst & 0x0fff ;	225:1:7371:7402	466351	6	True				
ANR	466423	IdentifierDecl	offset = inst & 0x0fff		466351	0					
ANR	466424	IdentifierDeclType	short		466351	0					
ANR	466425	Identifier	offset		466351	1					
ANR	466426	AssignmentExpression	offset = inst & 0x0fff		466351	2		=			
ANR	466427	Identifier	offset		466351	0					
ANR	466428	BitAndExpression	inst & 0x0fff		466351	1		&			
ANR	466429	Identifier	inst		466351	0					
ANR	466430	PrimaryExpression	0x0fff		466351	1					
ANR	466431	IfStatement	if ( ! direction )		466351	7					
ANR	466432	Condition	! direction	227:5:7410:7419	466351	0	True				
ANR	466433	UnaryOperationExpression	! direction		466351	0					
ANR	466434	UnaryOperator	!		466351	0					
ANR	466435	Identifier	direction		466351	1					
ANR	466436	CompoundStatement		10:17:296:296	466351	1					
ANR	466437	ExpressionStatement	offset *= - 1	228:2:7426:7438	466351	0	True				
ANR	466438	AssignmentExpression	offset *= - 1		466351	0		*=			
ANR	466439	Identifier	offset		466351	0					
ANR	466440	UnaryOperationExpression	- 1		466351	1					
ANR	466441	UnaryOperator	-		466351	0					
ANR	466442	PrimaryExpression	1		466351	1					
ANR	466443	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s"" , load ? ""ldr"" : ""str"" , byte ? ""b"" : """" , writeback ? ""t"" : """" , get_cond ( inst ) )"	231:1:7445:7589	466351	8	True				
ANR	466444	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s"" , load ? ""ldr"" : ""str"" , byte ? ""b"" : """" , writeback ? ""t"" : """" , get_cond ( inst ) )"		466351	0		=			
ANR	466445	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466446	Identifier	arminsn		466351	0					
ANR	466447	Identifier	str_asm		466351	1					
ANR	466448	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s"" , load ? ""ldr"" : ""str"" , byte ? ""b"" : """" , writeback ? ""t"" : """" , get_cond ( inst ) )"		466351	1					
ANR	466449	Callee	r_str_appendf		466351	0					
ANR	466450	Identifier	r_str_appendf		466351	0					
ANR	466451	ArgumentList	arminsn -> str_asm		466351	1					
ANR	466452	Argument	arminsn -> str_asm		466351	0					
ANR	466453	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466454	Identifier	arminsn		466351	0					
ANR	466455	Identifier	str_asm		466351	1					
ANR	466456	Argument	"""%s%s%s%s"""		466351	1					
ANR	466457	PrimaryExpression	"""%s%s%s%s"""		466351	0					
ANR	466458	Argument	"load ? ""ldr"" : ""str"""		466351	2					
ANR	466459	ConditionalExpression	"load ? ""ldr"" : ""str"""		466351	0					
ANR	466460	Condition	load		466351	0					
ANR	466461	Identifier	load		466351	0					
ANR	466462	PrimaryExpression	"""ldr"""		466351	1					
ANR	466463	PrimaryExpression	"""str"""		466351	2					
ANR	466464	Argument	"byte ? ""b"" : """""		466351	3					
ANR	466465	ConditionalExpression	"byte ? ""b"" : """""		466351	0					
ANR	466466	Condition	byte		466351	0					
ANR	466467	Identifier	byte		466351	0					
ANR	466468	PrimaryExpression	"""b"""		466351	1					
ANR	466469	PrimaryExpression	""""""		466351	2					
ANR	466470	Argument	"writeback ? ""t"" : """""		466351	4					
ANR	466471	ConditionalExpression	"writeback ? ""t"" : """""		466351	0					
ANR	466472	Condition	writeback		466351	0					
ANR	466473	Identifier	writeback		466351	0					
ANR	466474	PrimaryExpression	"""t"""		466351	1					
ANR	466475	PrimaryExpression	""""""		466351	2					
ANR	466476	Argument	get_cond ( inst )		466351	5					
ANR	466477	CallExpression	get_cond ( inst )		466351	0					
ANR	466478	Callee	get_cond		466351	0					
ANR	466479	Identifier	get_cond		466351	0					
ANR	466480	ArgumentList	inst		466351	1					
ANR	466481	Argument	inst		466351	0					
ANR	466482	Identifier	inst		466351	0					
ANR	466483	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"	233:1:7592:7684	466351	9	True				
ANR	466484	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"		466351	0		=			
ANR	466485	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466486	Identifier	arminsn		466351	0					
ANR	466487	Identifier	str_asm		466351	1					
ANR	466488	CallExpression	"r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"		466351	1					
ANR	466489	Callee	r_str_appendf		466351	0					
ANR	466490	Identifier	r_str_appendf		466351	0					
ANR	466491	ArgumentList	arminsn -> str_asm		466351	1					
ANR	466492	Argument	arminsn -> str_asm		466351	0					
ANR	466493	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466494	Identifier	arminsn		466351	0					
ANR	466495	Identifier	str_asm		466351	1					
ANR	466496	Argument	""" %s, """		466351	1					
ANR	466497	PrimaryExpression	""" %s, """		466351	0					
ANR	466498	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		466351	2					
ANR	466499	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		466351	0					
ANR	466500	Identifier	tbl_regs		466351	0					
ANR	466501	CallExpression	"get_nibble ( inst , 3 )"		466351	1					
ANR	466502	Callee	get_nibble		466351	0					
ANR	466503	Identifier	get_nibble		466351	0					
ANR	466504	ArgumentList	inst		466351	1					
ANR	466505	Argument	inst		466351	0					
ANR	466506	Identifier	inst		466351	0					
ANR	466507	Argument	3		466351	1					
ANR	466508	PrimaryExpression	3		466351	0					
ANR	466509	IfStatement	if ( indexing )		466351	10					
ANR	466510	Condition	indexing	234:5:7691:7698	466351	0	True				
ANR	466511	Identifier	indexing		466351	0					
ANR	466512	CompoundStatement		17:15:575:575	466351	1					
ANR	466513	IfStatement	if ( immediate )		466351	0					
ANR	466514	Condition	immediate	235:6:7709:7717	466351	0	True				
ANR	466515	Identifier	immediate		466351	0					
ANR	466516	CompoundStatement		18:17:594:594	466351	1					
ANR	466517	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"	236:3:7725:7829	466351	0	True				
ANR	466518	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		466351	0		=			
ANR	466519	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466520	Identifier	arminsn		466351	0					
ANR	466521	Identifier	str_asm		466351	1					
ANR	466522	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s, #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		466351	1					
ANR	466523	Callee	r_str_appendf		466351	0					
ANR	466524	Identifier	r_str_appendf		466351	0					
ANR	466525	ArgumentList	arminsn -> str_asm		466351	1					
ANR	466526	Argument	arminsn -> str_asm		466351	0					
ANR	466527	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466528	Identifier	arminsn		466351	0					
ANR	466529	Identifier	str_asm		466351	1					
ANR	466530	Argument	"""[%s, #%d]"""		466351	1					
ANR	466531	PrimaryExpression	"""[%s, #%d]"""		466351	0					
ANR	466532	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466351	2					
ANR	466533	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466351	0					
ANR	466534	Identifier	tbl_regs		466351	0					
ANR	466535	CallExpression	"get_nibble ( inst , 4 )"		466351	1					
ANR	466536	Callee	get_nibble		466351	0					
ANR	466537	Identifier	get_nibble		466351	0					
ANR	466538	ArgumentList	inst		466351	1					
ANR	466539	Argument	inst		466351	0					
ANR	466540	Identifier	inst		466351	0					
ANR	466541	Argument	4		466351	1					
ANR	466542	PrimaryExpression	4		466351	0					
ANR	466543	Argument	offset		466351	3					
ANR	466544	Identifier	offset		466351	0					
ANR	466545	ElseStatement	else		466351	0					
ANR	466546	IfStatement	if ( ( ( inst >> 4 ) & 0xff ) == 0x00 )		466351	0					
ANR	466547	Condition	( ( inst >> 4 ) & 0xff ) == 0x00	238:11:7846:7873	466351	0	True				
ANR	466548	EqualityExpression	( ( inst >> 4 ) & 0xff ) == 0x00		466351	0		==			
ANR	466549	BitAndExpression	( inst >> 4 ) & 0xff		466351	0		&			
ANR	466550	ShiftExpression	inst >> 4		466351	0		>>			
ANR	466551	Identifier	inst		466351	0					
ANR	466552	PrimaryExpression	4		466351	1					
ANR	466553	PrimaryExpression	0xff		466351	1					
ANR	466554	PrimaryExpression	0x00		466351	1					
ANR	466555	CompoundStatement		21:41:750:750	466351	1					
ANR	466556	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, %s]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	239:3:7896:8028	466351	0	True				
ANR	466557	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, %s]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		466351	0		=			
ANR	466558	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466559	Identifier	arminsn		466351	0					
ANR	466560	Identifier	str_asm		466351	1					
ANR	466561	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s, %s]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		466351	1					
ANR	466562	Callee	r_str_appendf		466351	0					
ANR	466563	Identifier	r_str_appendf		466351	0					
ANR	466564	ArgumentList	arminsn -> str_asm		466351	1					
ANR	466565	Argument	arminsn -> str_asm		466351	0					
ANR	466566	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466567	Identifier	arminsn		466351	0					
ANR	466568	Identifier	str_asm		466351	1					
ANR	466569	Argument	"""[%s, %s]"""		466351	1					
ANR	466570	PrimaryExpression	"""[%s, %s]"""		466351	0					
ANR	466571	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466351	2					
ANR	466572	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466351	0					
ANR	466573	Identifier	tbl_regs		466351	0					
ANR	466574	CallExpression	"get_nibble ( inst , 4 )"		466351	1					
ANR	466575	Callee	get_nibble		466351	0					
ANR	466576	Identifier	get_nibble		466351	0					
ANR	466577	ArgumentList	inst		466351	1					
ANR	466578	Argument	inst		466351	0					
ANR	466579	Identifier	inst		466351	0					
ANR	466580	Argument	4		466351	1					
ANR	466581	PrimaryExpression	4		466351	0					
ANR	466582	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		466351	3					
ANR	466583	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		466351	0					
ANR	466584	Identifier	tbl_regs		466351	0					
ANR	466585	CallExpression	"get_nibble ( inst , 0 )"		466351	1					
ANR	466586	Callee	get_nibble		466351	0					
ANR	466587	Identifier	get_nibble		466351	0					
ANR	466588	ArgumentList	inst		466351	1					
ANR	466589	Argument	inst		466351	0					
ANR	466590	Identifier	inst		466351	0					
ANR	466591	Argument	0		466351	1					
ANR	466592	PrimaryExpression	0		466351	0					
ANR	466593	ElseStatement	else		466351	0					
ANR	466594	IfStatement	if ( ( ( inst >> 4 ) & 0x01 ) == 0x00 )		466351	0					
ANR	466595	Condition	( ( inst >> 4 ) & 0x01 ) == 0x00	242:11:8045:8072	466351	0	True				
ANR	466596	EqualityExpression	( ( inst >> 4 ) & 0x01 ) == 0x00		466351	0		==			
ANR	466597	BitAndExpression	( inst >> 4 ) & 0x01		466351	0		&			
ANR	466598	ShiftExpression	inst >> 4		466351	0		>>			
ANR	466599	Identifier	inst		466351	0					
ANR	466600	PrimaryExpression	4		466351	1					
ANR	466601	PrimaryExpression	0x01		466351	1					
ANR	466602	PrimaryExpression	0x00		466351	1					
ANR	466603	CompoundStatement		25:41:949:949	466351	1					
ANR	466604	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, %s, %s #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"	243:3:8129:8326	466351	0	True				
ANR	466605	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, %s, %s #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"		466351	0		=			
ANR	466606	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466607	Identifier	arminsn		466351	0					
ANR	466608	Identifier	str_asm		466351	1					
ANR	466609	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s, %s, %s #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"		466351	1					
ANR	466610	Callee	r_str_appendf		466351	0					
ANR	466611	Identifier	r_str_appendf		466351	0					
ANR	466612	ArgumentList	arminsn -> str_asm		466351	1					
ANR	466613	Argument	arminsn -> str_asm		466351	0					
ANR	466614	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466615	Identifier	arminsn		466351	0					
ANR	466616	Identifier	str_asm		466351	1					
ANR	466617	Argument	"""[%s, %s, %s #%d]"""		466351	1					
ANR	466618	PrimaryExpression	"""[%s, %s, %s #%d]"""		466351	0					
ANR	466619	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466351	2					
ANR	466620	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466351	0					
ANR	466621	Identifier	tbl_regs		466351	0					
ANR	466622	CallExpression	"get_nibble ( inst , 4 )"		466351	1					
ANR	466623	Callee	get_nibble		466351	0					
ANR	466624	Identifier	get_nibble		466351	0					
ANR	466625	ArgumentList	inst		466351	1					
ANR	466626	Argument	inst		466351	0					
ANR	466627	Identifier	inst		466351	0					
ANR	466628	Argument	4		466351	1					
ANR	466629	PrimaryExpression	4		466351	0					
ANR	466630	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		466351	3					
ANR	466631	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		466351	0					
ANR	466632	Identifier	tbl_regs		466351	0					
ANR	466633	CallExpression	"get_nibble ( inst , 0 )"		466351	1					
ANR	466634	Callee	get_nibble		466351	0					
ANR	466635	Identifier	get_nibble		466351	0					
ANR	466636	ArgumentList	inst		466351	1					
ANR	466637	Argument	inst		466351	0					
ANR	466638	Identifier	inst		466351	0					
ANR	466639	Argument	0		466351	1					
ANR	466640	PrimaryExpression	0		466351	0					
ANR	466641	Argument	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		466351	4					
ANR	466642	ArrayIndexing	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		466351	0					
ANR	466643	Identifier	tbl_shifts		466351	0					
ANR	466644	BitAndExpression	( inst >> 5 ) & 0x03		466351	1		&			
ANR	466645	ShiftExpression	inst >> 5		466351	0		>>			
ANR	466646	Identifier	inst		466351	0					
ANR	466647	PrimaryExpression	5		466351	1					
ANR	466648	PrimaryExpression	0x03		466351	1					
ANR	466649	Argument	( inst >> 7 ) & 0x1f		466351	5					
ANR	466650	BitAndExpression	( inst >> 7 ) & 0x1f		466351	0		&			
ANR	466651	ShiftExpression	inst >> 7		466351	0		>>			
ANR	466652	Identifier	inst		466351	0					
ANR	466653	PrimaryExpression	7		466351	1					
ANR	466654	PrimaryExpression	0x1f		466351	1					
ANR	466655	ElseStatement	else		466351	0					
ANR	466656	CompoundStatement		30:7:1213:1213	466351	0					
ANR	466657	ReturnStatement	return inst ;	248:3:8344:8355	466351	0	True				
ANR	466658	Identifier	inst		466351	0					
ANR	466659	ElseStatement	else		466351	0					
ANR	466660	CompoundStatement		33:8:1243:1243	466351	0					
ANR	466661	IfStatement	if ( immediate )		466351	0					
ANR	466662	Condition	immediate	251:6:8377:8385	466351	0	True				
ANR	466663	Identifier	immediate		466351	0					
ANR	466664	CompoundStatement		34:17:1262:1262	466351	1					
ANR	466665	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"	252:3:8393:8497	466351	0	True				
ANR	466666	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		466351	0		=			
ANR	466667	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466668	Identifier	arminsn		466351	0					
ANR	466669	Identifier	str_asm		466351	1					
ANR	466670	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s], #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		466351	1					
ANR	466671	Callee	r_str_appendf		466351	0					
ANR	466672	Identifier	r_str_appendf		466351	0					
ANR	466673	ArgumentList	arminsn -> str_asm		466351	1					
ANR	466674	Argument	arminsn -> str_asm		466351	0					
ANR	466675	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466676	Identifier	arminsn		466351	0					
ANR	466677	Identifier	str_asm		466351	1					
ANR	466678	Argument	"""[%s], #%d"""		466351	1					
ANR	466679	PrimaryExpression	"""[%s], #%d"""		466351	0					
ANR	466680	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466351	2					
ANR	466681	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466351	0					
ANR	466682	Identifier	tbl_regs		466351	0					
ANR	466683	CallExpression	"get_nibble ( inst , 4 )"		466351	1					
ANR	466684	Callee	get_nibble		466351	0					
ANR	466685	Identifier	get_nibble		466351	0					
ANR	466686	ArgumentList	inst		466351	1					
ANR	466687	Argument	inst		466351	0					
ANR	466688	Identifier	inst		466351	0					
ANR	466689	Argument	4		466351	1					
ANR	466690	PrimaryExpression	4		466351	0					
ANR	466691	Argument	offset		466351	3					
ANR	466692	Identifier	offset		466351	0					
ANR	466693	ElseStatement	else		466351	0					
ANR	466694	IfStatement	if ( ( ( inst >> 4 ) & 0xff ) == 0x00 )		466351	0					
ANR	466695	Condition	( ( inst >> 4 ) & 0xff ) == 0x00	254:11:8514:8541	466351	0	True				
ANR	466696	EqualityExpression	( ( inst >> 4 ) & 0xff ) == 0x00		466351	0		==			
ANR	466697	BitAndExpression	( inst >> 4 ) & 0xff		466351	0		&			
ANR	466698	ShiftExpression	inst >> 4		466351	0		>>			
ANR	466699	Identifier	inst		466351	0					
ANR	466700	PrimaryExpression	4		466351	1					
ANR	466701	PrimaryExpression	0xff		466351	1					
ANR	466702	PrimaryExpression	0x00		466351	1					
ANR	466703	CompoundStatement		37:41:1418:1418	466351	1					
ANR	466704	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	255:3:8564:8696	466351	0	True				
ANR	466705	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		466351	0		=			
ANR	466706	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466707	Identifier	arminsn		466351	0					
ANR	466708	Identifier	str_asm		466351	1					
ANR	466709	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s], %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		466351	1					
ANR	466710	Callee	r_str_appendf		466351	0					
ANR	466711	Identifier	r_str_appendf		466351	0					
ANR	466712	ArgumentList	arminsn -> str_asm		466351	1					
ANR	466713	Argument	arminsn -> str_asm		466351	0					
ANR	466714	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466715	Identifier	arminsn		466351	0					
ANR	466716	Identifier	str_asm		466351	1					
ANR	466717	Argument	"""[%s], %s"""		466351	1					
ANR	466718	PrimaryExpression	"""[%s], %s"""		466351	0					
ANR	466719	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466351	2					
ANR	466720	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466351	0					
ANR	466721	Identifier	tbl_regs		466351	0					
ANR	466722	CallExpression	"get_nibble ( inst , 4 )"		466351	1					
ANR	466723	Callee	get_nibble		466351	0					
ANR	466724	Identifier	get_nibble		466351	0					
ANR	466725	ArgumentList	inst		466351	1					
ANR	466726	Argument	inst		466351	0					
ANR	466727	Identifier	inst		466351	0					
ANR	466728	Argument	4		466351	1					
ANR	466729	PrimaryExpression	4		466351	0					
ANR	466730	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		466351	3					
ANR	466731	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		466351	0					
ANR	466732	Identifier	tbl_regs		466351	0					
ANR	466733	CallExpression	"get_nibble ( inst , 0 )"		466351	1					
ANR	466734	Callee	get_nibble		466351	0					
ANR	466735	Identifier	get_nibble		466351	0					
ANR	466736	ArgumentList	inst		466351	1					
ANR	466737	Argument	inst		466351	0					
ANR	466738	Identifier	inst		466351	0					
ANR	466739	Argument	0		466351	1					
ANR	466740	PrimaryExpression	0		466351	0					
ANR	466741	ElseStatement	else		466351	0					
ANR	466742	IfStatement	if ( ( ( inst >> 4 ) & 0x01 ) == 0x00 )		466351	0					
ANR	466743	Condition	( ( inst >> 4 ) & 0x01 ) == 0x00	258:11:8713:8740	466351	0	True				
ANR	466744	EqualityExpression	( ( inst >> 4 ) & 0x01 ) == 0x00		466351	0		==			
ANR	466745	BitAndExpression	( inst >> 4 ) & 0x01		466351	0		&			
ANR	466746	ShiftExpression	inst >> 4		466351	0		>>			
ANR	466747	Identifier	inst		466351	0					
ANR	466748	PrimaryExpression	4		466351	1					
ANR	466749	PrimaryExpression	0x01		466351	1					
ANR	466750	PrimaryExpression	0x00		466351	1					
ANR	466751	CompoundStatement		41:41:1617:1617	466351	1					
ANR	466752	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], %s, %s #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"	259:3:8798:8995	466351	0	True				
ANR	466753	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], %s, %s #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"		466351	0		=			
ANR	466754	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466755	Identifier	arminsn		466351	0					
ANR	466756	Identifier	str_asm		466351	1					
ANR	466757	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s], %s, %s #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"		466351	1					
ANR	466758	Callee	r_str_appendf		466351	0					
ANR	466759	Identifier	r_str_appendf		466351	0					
ANR	466760	ArgumentList	arminsn -> str_asm		466351	1					
ANR	466761	Argument	arminsn -> str_asm		466351	0					
ANR	466762	PtrMemberAccess	arminsn -> str_asm		466351	0					
ANR	466763	Identifier	arminsn		466351	0					
ANR	466764	Identifier	str_asm		466351	1					
ANR	466765	Argument	"""[%s], %s, %s #%d"""		466351	1					
ANR	466766	PrimaryExpression	"""[%s], %s, %s #%d"""		466351	0					
ANR	466767	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466351	2					
ANR	466768	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466351	0					
ANR	466769	Identifier	tbl_regs		466351	0					
ANR	466770	CallExpression	"get_nibble ( inst , 4 )"		466351	1					
ANR	466771	Callee	get_nibble		466351	0					
ANR	466772	Identifier	get_nibble		466351	0					
ANR	466773	ArgumentList	inst		466351	1					
ANR	466774	Argument	inst		466351	0					
ANR	466775	Identifier	inst		466351	0					
ANR	466776	Argument	4		466351	1					
ANR	466777	PrimaryExpression	4		466351	0					
ANR	466778	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		466351	3					
ANR	466779	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		466351	0					
ANR	466780	Identifier	tbl_regs		466351	0					
ANR	466781	CallExpression	"get_nibble ( inst , 0 )"		466351	1					
ANR	466782	Callee	get_nibble		466351	0					
ANR	466783	Identifier	get_nibble		466351	0					
ANR	466784	ArgumentList	inst		466351	1					
ANR	466785	Argument	inst		466351	0					
ANR	466786	Identifier	inst		466351	0					
ANR	466787	Argument	0		466351	1					
ANR	466788	PrimaryExpression	0		466351	0					
ANR	466789	Argument	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		466351	4					
ANR	466790	ArrayIndexing	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		466351	0					
ANR	466791	Identifier	tbl_shifts		466351	0					
ANR	466792	BitAndExpression	( inst >> 5 ) & 0x03		466351	1		&			
ANR	466793	ShiftExpression	inst >> 5		466351	0		>>			
ANR	466794	Identifier	inst		466351	0					
ANR	466795	PrimaryExpression	5		466351	1					
ANR	466796	PrimaryExpression	0x03		466351	1					
ANR	466797	Argument	( inst >> 7 ) & 0x1f		466351	5					
ANR	466798	BitAndExpression	( inst >> 7 ) & 0x1f		466351	0		&			
ANR	466799	ShiftExpression	inst >> 7		466351	0		>>			
ANR	466800	Identifier	inst		466351	0					
ANR	466801	PrimaryExpression	7		466351	1					
ANR	466802	PrimaryExpression	0x1f		466351	1					
ANR	466803	ElseStatement	else		466351	0					
ANR	466804	CompoundStatement		46:7:1882:1882	466351	0					
ANR	466805	ReturnStatement	return inst ;	264:3:9013:9024	466351	0	True				
ANR	466806	Identifier	inst		466351	0					
ANR	466807	ReturnStatement	return 0 ;	267:1:9034:9042	466351	11	True				
ANR	466808	PrimaryExpression	0		466351	0					
ANR	466809	ReturnType	static ut32		466351	1					
ANR	466810	Identifier	arm_disasm_singletrans		466351	2					
ANR	466811	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		466351	3					
ANR	466812	Parameter	struct winedbg_arm_insn * arminsn	218:35:7080:7111	466351	0	True				
ANR	466813	ParameterType	struct winedbg_arm_insn *		466351	0					
ANR	466814	Identifier	arminsn		466351	1					
ANR	466815	Parameter	ut32 inst	218:69:7114:7122	466351	1	True				
ANR	466816	ParameterType	ut32		466351	0					
ANR	466817	Identifier	inst		466351	1					
ANR	466818	CFGEntryNode	ENTRY		466351		True				
ANR	466819	CFGExitNode	EXIT		466351		True				
ANR	466820	Symbol	get_cond		466351						
ANR	466821	Symbol	tbl_shifts		466351						
ANR	466822	Symbol	* inst		466351						
ANR	466823	Symbol	indexing		466351						
ANR	466824	Symbol	offset		466351						
ANR	466825	Symbol	* tbl_shifts		466351						
ANR	466826	Symbol	byte		466351						
ANR	466827	Symbol	tbl_regs		466351						
ANR	466828	Symbol	arminsn		466351						
ANR	466829	Symbol	arminsn -> str_asm		466351						
ANR	466830	Symbol	* arminsn		466351						
ANR	466831	Symbol	get_nibble		466351						
ANR	466832	Symbol	load		466351						
ANR	466833	Symbol	writeback		466351						
ANR	466834	Symbol	immediate		466351						
ANR	466835	Symbol	* tbl_regs		466351						
ANR	466836	Symbol	inst		466351						
ANR	466837	Symbol	r_str_appendf		466351						
ANR	466838	Symbol	* get_nibble		466351						
ANR	466839	Symbol	direction		466351						
ANR	466840	Function	arm_disasm_halfwordtrans	270:0:9047:10392							
ANR	466841	FunctionDef	"arm_disasm_halfwordtrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		466840	0					
ANR	466842	CompoundStatement		270:82:9129:10392	466840	0					
ANR	466843	IdentifierDeclStatement	short halfword = ( inst >> 5 ) & 0x01 ;	271:1:9132:9169	466840	0	True				
ANR	466844	IdentifierDecl	halfword = ( inst >> 5 ) & 0x01		466840	0					
ANR	466845	IdentifierDeclType	short		466840	0					
ANR	466846	Identifier	halfword		466840	1					
ANR	466847	AssignmentExpression	halfword = ( inst >> 5 ) & 0x01		466840	2		=			
ANR	466848	Identifier	halfword		466840	0					
ANR	466849	BitAndExpression	( inst >> 5 ) & 0x01		466840	1		&			
ANR	466850	ShiftExpression	inst >> 5		466840	0		>>			
ANR	466851	Identifier	inst		466840	0					
ANR	466852	PrimaryExpression	5		466840	1					
ANR	466853	PrimaryExpression	0x01		466840	1					
ANR	466854	IdentifierDeclStatement	short sign = ( inst >> 6 ) & 0x01 ;	272:1:9172:9209	466840	1	True				
ANR	466855	IdentifierDecl	sign = ( inst >> 6 ) & 0x01		466840	0					
ANR	466856	IdentifierDeclType	short		466840	0					
ANR	466857	Identifier	sign		466840	1					
ANR	466858	AssignmentExpression	sign = ( inst >> 6 ) & 0x01		466840	2		=			
ANR	466859	Identifier	sign		466840	0					
ANR	466860	BitAndExpression	( inst >> 6 ) & 0x01		466840	1		&			
ANR	466861	ShiftExpression	inst >> 6		466840	0		>>			
ANR	466862	Identifier	inst		466840	0					
ANR	466863	PrimaryExpression	6		466840	1					
ANR	466864	PrimaryExpression	0x01		466840	1					
ANR	466865	IdentifierDeclStatement	short load = ( inst >> 20 ) & 0x01 ;	273:1:9212:9249	466840	2	True				
ANR	466866	IdentifierDecl	load = ( inst >> 20 ) & 0x01		466840	0					
ANR	466867	IdentifierDeclType	short		466840	0					
ANR	466868	Identifier	load		466840	1					
ANR	466869	AssignmentExpression	load = ( inst >> 20 ) & 0x01		466840	2		=			
ANR	466870	Identifier	load		466840	0					
ANR	466871	BitAndExpression	( inst >> 20 ) & 0x01		466840	1		&			
ANR	466872	ShiftExpression	inst >> 20		466840	0		>>			
ANR	466873	Identifier	inst		466840	0					
ANR	466874	PrimaryExpression	20		466840	1					
ANR	466875	PrimaryExpression	0x01		466840	1					
ANR	466876	IdentifierDeclStatement	short writeback = ( inst >> 21 ) & 0x01 ;	274:1:9252:9289	466840	3	True				
ANR	466877	IdentifierDecl	writeback = ( inst >> 21 ) & 0x01		466840	0					
ANR	466878	IdentifierDeclType	short		466840	0					
ANR	466879	Identifier	writeback		466840	1					
ANR	466880	AssignmentExpression	writeback = ( inst >> 21 ) & 0x01		466840	2		=			
ANR	466881	Identifier	writeback		466840	0					
ANR	466882	BitAndExpression	( inst >> 21 ) & 0x01		466840	1		&			
ANR	466883	ShiftExpression	inst >> 21		466840	0		>>			
ANR	466884	Identifier	inst		466840	0					
ANR	466885	PrimaryExpression	21		466840	1					
ANR	466886	PrimaryExpression	0x01		466840	1					
ANR	466887	IdentifierDeclStatement	short immediate = ( inst >> 22 ) & 0x01 ;	275:1:9292:9329	466840	4	True				
ANR	466888	IdentifierDecl	immediate = ( inst >> 22 ) & 0x01		466840	0					
ANR	466889	IdentifierDeclType	short		466840	0					
ANR	466890	Identifier	immediate		466840	1					
ANR	466891	AssignmentExpression	immediate = ( inst >> 22 ) & 0x01		466840	2		=			
ANR	466892	Identifier	immediate		466840	0					
ANR	466893	BitAndExpression	( inst >> 22 ) & 0x01		466840	1		&			
ANR	466894	ShiftExpression	inst >> 22		466840	0		>>			
ANR	466895	Identifier	inst		466840	0					
ANR	466896	PrimaryExpression	22		466840	1					
ANR	466897	PrimaryExpression	0x01		466840	1					
ANR	466898	IdentifierDeclStatement	short direction = ( inst >> 23 ) & 0x01 ;	276:1:9332:9369	466840	5	True				
ANR	466899	IdentifierDecl	direction = ( inst >> 23 ) & 0x01		466840	0					
ANR	466900	IdentifierDeclType	short		466840	0					
ANR	466901	Identifier	direction		466840	1					
ANR	466902	AssignmentExpression	direction = ( inst >> 23 ) & 0x01		466840	2		=			
ANR	466903	Identifier	direction		466840	0					
ANR	466904	BitAndExpression	( inst >> 23 ) & 0x01		466840	1		&			
ANR	466905	ShiftExpression	inst >> 23		466840	0		>>			
ANR	466906	Identifier	inst		466840	0					
ANR	466907	PrimaryExpression	23		466840	1					
ANR	466908	PrimaryExpression	0x01		466840	1					
ANR	466909	IdentifierDeclStatement	short indexing = ( inst >> 24 ) & 0x01 ;	277:1:9372:9409	466840	6	True				
ANR	466910	IdentifierDecl	indexing = ( inst >> 24 ) & 0x01		466840	0					
ANR	466911	IdentifierDeclType	short		466840	0					
ANR	466912	Identifier	indexing		466840	1					
ANR	466913	AssignmentExpression	indexing = ( inst >> 24 ) & 0x01		466840	2		=			
ANR	466914	Identifier	indexing		466840	0					
ANR	466915	BitAndExpression	( inst >> 24 ) & 0x01		466840	1		&			
ANR	466916	ShiftExpression	inst >> 24		466840	0		>>			
ANR	466917	Identifier	inst		466840	0					
ANR	466918	PrimaryExpression	24		466840	1					
ANR	466919	PrimaryExpression	0x01		466840	1					
ANR	466920	IdentifierDeclStatement	short offset = ( ( inst >> 4 ) & 0xf0 ) + ( inst & 0x0f ) ;	278:1:9412:9466	466840	7	True				
ANR	466921	IdentifierDecl	offset = ( ( inst >> 4 ) & 0xf0 ) + ( inst & 0x0f )		466840	0					
ANR	466922	IdentifierDeclType	short		466840	0					
ANR	466923	Identifier	offset		466840	1					
ANR	466924	AssignmentExpression	offset = ( ( inst >> 4 ) & 0xf0 ) + ( inst & 0x0f )		466840	2		=			
ANR	466925	Identifier	offset		466840	0					
ANR	466926	AdditiveExpression	( ( inst >> 4 ) & 0xf0 ) + ( inst & 0x0f )		466840	1		+			
ANR	466927	BitAndExpression	( inst >> 4 ) & 0xf0		466840	0		&			
ANR	466928	ShiftExpression	inst >> 4		466840	0		>>			
ANR	466929	Identifier	inst		466840	0					
ANR	466930	PrimaryExpression	4		466840	1					
ANR	466931	PrimaryExpression	0xf0		466840	1					
ANR	466932	BitAndExpression	inst & 0x0f		466840	1		&			
ANR	466933	Identifier	inst		466840	0					
ANR	466934	PrimaryExpression	0x0f		466840	1					
ANR	466935	IfStatement	if ( ! direction )		466840	8					
ANR	466936	Condition	! direction	280:5:9474:9483	466840	0	True				
ANR	466937	UnaryOperationExpression	! direction		466840	0					
ANR	466938	UnaryOperator	!		466840	0					
ANR	466939	Identifier	direction		466840	1					
ANR	466940	CompoundStatement		11:16:355:355	466840	1					
ANR	466941	ExpressionStatement	offset *= - 1	281:2:9489:9501	466840	0	True				
ANR	466942	AssignmentExpression	offset *= - 1		466840	0		*=			
ANR	466943	Identifier	offset		466840	0					
ANR	466944	UnaryOperationExpression	- 1		466840	1					
ANR	466945	UnaryOperator	-		466840	0					
ANR	466946	PrimaryExpression	1		466840	1					
ANR	466947	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s%s"" , load ? ""ldr"" : ""str"" , sign ? ""s"" : """" , halfword ? ""h"" : ( sign ? ""b"" : """" ) , writeback ? ""t"" : """" , get_cond ( inst ) )"	284:1:9508:9690	466840	9	True				
ANR	466948	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s%s"" , load ? ""ldr"" : ""str"" , sign ? ""s"" : """" , halfword ? ""h"" : ( sign ? ""b"" : """" ) , writeback ? ""t"" : """" , get_cond ( inst ) )"		466840	0		=			
ANR	466949	PtrMemberAccess	arminsn -> str_asm		466840	0					
ANR	466950	Identifier	arminsn		466840	0					
ANR	466951	Identifier	str_asm		466840	1					
ANR	466952	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s%s"" , load ? ""ldr"" : ""str"" , sign ? ""s"" : """" , halfword ? ""h"" : ( sign ? ""b"" : """" ) , writeback ? ""t"" : """" , get_cond ( inst ) )"		466840	1					
ANR	466953	Callee	r_str_appendf		466840	0					
ANR	466954	Identifier	r_str_appendf		466840	0					
ANR	466955	ArgumentList	arminsn -> str_asm		466840	1					
ANR	466956	Argument	arminsn -> str_asm		466840	0					
ANR	466957	PtrMemberAccess	arminsn -> str_asm		466840	0					
ANR	466958	Identifier	arminsn		466840	0					
ANR	466959	Identifier	str_asm		466840	1					
ANR	466960	Argument	"""%s%s%s%s%s"""		466840	1					
ANR	466961	PrimaryExpression	"""%s%s%s%s%s"""		466840	0					
ANR	466962	Argument	"load ? ""ldr"" : ""str"""		466840	2					
ANR	466963	ConditionalExpression	"load ? ""ldr"" : ""str"""		466840	0					
ANR	466964	Condition	load		466840	0					
ANR	466965	Identifier	load		466840	0					
ANR	466966	PrimaryExpression	"""ldr"""		466840	1					
ANR	466967	PrimaryExpression	"""str"""		466840	2					
ANR	466968	Argument	"sign ? ""s"" : """""		466840	3					
ANR	466969	ConditionalExpression	"sign ? ""s"" : """""		466840	0					
ANR	466970	Condition	sign		466840	0					
ANR	466971	Identifier	sign		466840	0					
ANR	466972	PrimaryExpression	"""s"""		466840	1					
ANR	466973	PrimaryExpression	""""""		466840	2					
ANR	466974	Argument	"halfword ? ""h"" : ( sign ? ""b"" : """" )"		466840	4					
ANR	466975	ConditionalExpression	"halfword ? ""h"" : ( sign ? ""b"" : """" )"		466840	0					
ANR	466976	Condition	halfword		466840	0					
ANR	466977	Identifier	halfword		466840	0					
ANR	466978	PrimaryExpression	"""h"""		466840	1					
ANR	466979	ConditionalExpression	"sign ? ""b"" : """""		466840	2					
ANR	466980	Condition	sign		466840	0					
ANR	466981	Identifier	sign		466840	0					
ANR	466982	PrimaryExpression	"""b"""		466840	1					
ANR	466983	PrimaryExpression	""""""		466840	2					
ANR	466984	Argument	"writeback ? ""t"" : """""		466840	5					
ANR	466985	ConditionalExpression	"writeback ? ""t"" : """""		466840	0					
ANR	466986	Condition	writeback		466840	0					
ANR	466987	Identifier	writeback		466840	0					
ANR	466988	PrimaryExpression	"""t"""		466840	1					
ANR	466989	PrimaryExpression	""""""		466840	2					
ANR	466990	Argument	get_cond ( inst )		466840	6					
ANR	466991	CallExpression	get_cond ( inst )		466840	0					
ANR	466992	Callee	get_cond		466840	0					
ANR	466993	Identifier	get_cond		466840	0					
ANR	466994	ArgumentList	inst		466840	1					
ANR	466995	Argument	inst		466840	0					
ANR	466996	Identifier	inst		466840	0					
ANR	466997	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"	286:1:9693:9785	466840	10	True				
ANR	466998	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"		466840	0		=			
ANR	466999	PtrMemberAccess	arminsn -> str_asm		466840	0					
ANR	467000	Identifier	arminsn		466840	0					
ANR	467001	Identifier	str_asm		466840	1					
ANR	467002	CallExpression	"r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"		466840	1					
ANR	467003	Callee	r_str_appendf		466840	0					
ANR	467004	Identifier	r_str_appendf		466840	0					
ANR	467005	ArgumentList	arminsn -> str_asm		466840	1					
ANR	467006	Argument	arminsn -> str_asm		466840	0					
ANR	467007	PtrMemberAccess	arminsn -> str_asm		466840	0					
ANR	467008	Identifier	arminsn		466840	0					
ANR	467009	Identifier	str_asm		466840	1					
ANR	467010	Argument	""" %s, """		466840	1					
ANR	467011	PrimaryExpression	""" %s, """		466840	0					
ANR	467012	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		466840	2					
ANR	467013	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		466840	0					
ANR	467014	Identifier	tbl_regs		466840	0					
ANR	467015	CallExpression	"get_nibble ( inst , 3 )"		466840	1					
ANR	467016	Callee	get_nibble		466840	0					
ANR	467017	Identifier	get_nibble		466840	0					
ANR	467018	ArgumentList	inst		466840	1					
ANR	467019	Argument	inst		466840	0					
ANR	467020	Identifier	inst		466840	0					
ANR	467021	Argument	3		466840	1					
ANR	467022	PrimaryExpression	3		466840	0					
ANR	467023	IfStatement	if ( indexing )		466840	11					
ANR	467024	Condition	indexing	287:5:9792:9799	466840	0	True				
ANR	467025	Identifier	indexing		466840	0					
ANR	467026	CompoundStatement		18:15:672:672	466840	1					
ANR	467027	IfStatement	if ( immediate )		466840	0					
ANR	467028	Condition	immediate	288:6:9810:9818	466840	0	True				
ANR	467029	Identifier	immediate		466840	0					
ANR	467030	CompoundStatement		19:17:691:691	466840	1					
ANR	467031	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"	289:3:9826:9930	466840	0	True				
ANR	467032	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		466840	0		=			
ANR	467033	PtrMemberAccess	arminsn -> str_asm		466840	0					
ANR	467034	Identifier	arminsn		466840	0					
ANR	467035	Identifier	str_asm		466840	1					
ANR	467036	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s, #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		466840	1					
ANR	467037	Callee	r_str_appendf		466840	0					
ANR	467038	Identifier	r_str_appendf		466840	0					
ANR	467039	ArgumentList	arminsn -> str_asm		466840	1					
ANR	467040	Argument	arminsn -> str_asm		466840	0					
ANR	467041	PtrMemberAccess	arminsn -> str_asm		466840	0					
ANR	467042	Identifier	arminsn		466840	0					
ANR	467043	Identifier	str_asm		466840	1					
ANR	467044	Argument	"""[%s, #%d]"""		466840	1					
ANR	467045	PrimaryExpression	"""[%s, #%d]"""		466840	0					
ANR	467046	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466840	2					
ANR	467047	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466840	0					
ANR	467048	Identifier	tbl_regs		466840	0					
ANR	467049	CallExpression	"get_nibble ( inst , 4 )"		466840	1					
ANR	467050	Callee	get_nibble		466840	0					
ANR	467051	Identifier	get_nibble		466840	0					
ANR	467052	ArgumentList	inst		466840	1					
ANR	467053	Argument	inst		466840	0					
ANR	467054	Identifier	inst		466840	0					
ANR	467055	Argument	4		466840	1					
ANR	467056	PrimaryExpression	4		466840	0					
ANR	467057	Argument	offset		466840	3					
ANR	467058	Identifier	offset		466840	0					
ANR	467059	ElseStatement	else		466840	0					
ANR	467060	CompoundStatement		22:7:813:813	466840	0					
ANR	467061	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, %s]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	292:3:9948:10080	466840	0	True				
ANR	467062	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, %s]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		466840	0		=			
ANR	467063	PtrMemberAccess	arminsn -> str_asm		466840	0					
ANR	467064	Identifier	arminsn		466840	0					
ANR	467065	Identifier	str_asm		466840	1					
ANR	467066	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s, %s]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		466840	1					
ANR	467067	Callee	r_str_appendf		466840	0					
ANR	467068	Identifier	r_str_appendf		466840	0					
ANR	467069	ArgumentList	arminsn -> str_asm		466840	1					
ANR	467070	Argument	arminsn -> str_asm		466840	0					
ANR	467071	PtrMemberAccess	arminsn -> str_asm		466840	0					
ANR	467072	Identifier	arminsn		466840	0					
ANR	467073	Identifier	str_asm		466840	1					
ANR	467074	Argument	"""[%s, %s]"""		466840	1					
ANR	467075	PrimaryExpression	"""[%s, %s]"""		466840	0					
ANR	467076	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466840	2					
ANR	467077	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466840	0					
ANR	467078	Identifier	tbl_regs		466840	0					
ANR	467079	CallExpression	"get_nibble ( inst , 4 )"		466840	1					
ANR	467080	Callee	get_nibble		466840	0					
ANR	467081	Identifier	get_nibble		466840	0					
ANR	467082	ArgumentList	inst		466840	1					
ANR	467083	Argument	inst		466840	0					
ANR	467084	Identifier	inst		466840	0					
ANR	467085	Argument	4		466840	1					
ANR	467086	PrimaryExpression	4		466840	0					
ANR	467087	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		466840	3					
ANR	467088	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		466840	0					
ANR	467089	Identifier	tbl_regs		466840	0					
ANR	467090	CallExpression	"get_nibble ( inst , 0 )"		466840	1					
ANR	467091	Callee	get_nibble		466840	0					
ANR	467092	Identifier	get_nibble		466840	0					
ANR	467093	ArgumentList	inst		466840	1					
ANR	467094	Argument	inst		466840	0					
ANR	467095	Identifier	inst		466840	0					
ANR	467096	Argument	0		466840	1					
ANR	467097	PrimaryExpression	0		466840	0					
ANR	467098	ElseStatement	else		466840	0					
ANR	467099	CompoundStatement		26:8:964:964	466840	0					
ANR	467100	IfStatement	if ( immediate )		466840	0					
ANR	467101	Condition	immediate	296:6:10102:10110	466840	0	True				
ANR	467102	Identifier	immediate		466840	0					
ANR	467103	CompoundStatement		27:17:983:983	466840	1					
ANR	467104	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"	297:3:10118:10222	466840	0	True				
ANR	467105	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		466840	0		=			
ANR	467106	PtrMemberAccess	arminsn -> str_asm		466840	0					
ANR	467107	Identifier	arminsn		466840	0					
ANR	467108	Identifier	str_asm		466840	1					
ANR	467109	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s], #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		466840	1					
ANR	467110	Callee	r_str_appendf		466840	0					
ANR	467111	Identifier	r_str_appendf		466840	0					
ANR	467112	ArgumentList	arminsn -> str_asm		466840	1					
ANR	467113	Argument	arminsn -> str_asm		466840	0					
ANR	467114	PtrMemberAccess	arminsn -> str_asm		466840	0					
ANR	467115	Identifier	arminsn		466840	0					
ANR	467116	Identifier	str_asm		466840	1					
ANR	467117	Argument	"""[%s], #%d"""		466840	1					
ANR	467118	PrimaryExpression	"""[%s], #%d"""		466840	0					
ANR	467119	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466840	2					
ANR	467120	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466840	0					
ANR	467121	Identifier	tbl_regs		466840	0					
ANR	467122	CallExpression	"get_nibble ( inst , 4 )"		466840	1					
ANR	467123	Callee	get_nibble		466840	0					
ANR	467124	Identifier	get_nibble		466840	0					
ANR	467125	ArgumentList	inst		466840	1					
ANR	467126	Argument	inst		466840	0					
ANR	467127	Identifier	inst		466840	0					
ANR	467128	Argument	4		466840	1					
ANR	467129	PrimaryExpression	4		466840	0					
ANR	467130	Argument	offset		466840	3					
ANR	467131	Identifier	offset		466840	0					
ANR	467132	ElseStatement	else		466840	0					
ANR	467133	CompoundStatement		30:7:1105:1105	466840	0					
ANR	467134	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	300:3:10240:10372	466840	0	True				
ANR	467135	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		466840	0		=			
ANR	467136	PtrMemberAccess	arminsn -> str_asm		466840	0					
ANR	467137	Identifier	arminsn		466840	0					
ANR	467138	Identifier	str_asm		466840	1					
ANR	467139	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s], %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		466840	1					
ANR	467140	Callee	r_str_appendf		466840	0					
ANR	467141	Identifier	r_str_appendf		466840	0					
ANR	467142	ArgumentList	arminsn -> str_asm		466840	1					
ANR	467143	Argument	arminsn -> str_asm		466840	0					
ANR	467144	PtrMemberAccess	arminsn -> str_asm		466840	0					
ANR	467145	Identifier	arminsn		466840	0					
ANR	467146	Identifier	str_asm		466840	1					
ANR	467147	Argument	"""[%s], %s"""		466840	1					
ANR	467148	PrimaryExpression	"""[%s], %s"""		466840	0					
ANR	467149	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466840	2					
ANR	467150	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		466840	0					
ANR	467151	Identifier	tbl_regs		466840	0					
ANR	467152	CallExpression	"get_nibble ( inst , 4 )"		466840	1					
ANR	467153	Callee	get_nibble		466840	0					
ANR	467154	Identifier	get_nibble		466840	0					
ANR	467155	ArgumentList	inst		466840	1					
ANR	467156	Argument	inst		466840	0					
ANR	467157	Identifier	inst		466840	0					
ANR	467158	Argument	4		466840	1					
ANR	467159	PrimaryExpression	4		466840	0					
ANR	467160	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		466840	3					
ANR	467161	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		466840	0					
ANR	467162	Identifier	tbl_regs		466840	0					
ANR	467163	CallExpression	"get_nibble ( inst , 0 )"		466840	1					
ANR	467164	Callee	get_nibble		466840	0					
ANR	467165	Identifier	get_nibble		466840	0					
ANR	467166	ArgumentList	inst		466840	1					
ANR	467167	Argument	inst		466840	0					
ANR	467168	Identifier	inst		466840	0					
ANR	467169	Argument	0		466840	1					
ANR	467170	PrimaryExpression	0		466840	0					
ANR	467171	ReturnStatement	return 0 ;	304:1:10382:10390	466840	12	True				
ANR	467172	PrimaryExpression	0		466840	0					
ANR	467173	ReturnType	static ut32		466840	1					
ANR	467174	Identifier	arm_disasm_halfwordtrans		466840	2					
ANR	467175	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		466840	3					
ANR	467176	Parameter	struct winedbg_arm_insn * arminsn	270:37:9084:9115	466840	0	True				
ANR	467177	ParameterType	struct winedbg_arm_insn *		466840	0					
ANR	467178	Identifier	arminsn		466840	1					
ANR	467179	Parameter	ut32 inst	270:71:9118:9126	466840	1	True				
ANR	467180	ParameterType	ut32		466840	0					
ANR	467181	Identifier	inst		466840	1					
ANR	467182	CFGEntryNode	ENTRY		466840		True				
ANR	467183	CFGExitNode	EXIT		466840		True				
ANR	467184	Symbol	get_cond		466840						
ANR	467185	Symbol	indexing		466840						
ANR	467186	Symbol	offset		466840						
ANR	467187	Symbol	tbl_regs		466840						
ANR	467188	Symbol	sign		466840						
ANR	467189	Symbol	arminsn		466840						
ANR	467190	Symbol	halfword		466840						
ANR	467191	Symbol	arminsn -> str_asm		466840						
ANR	467192	Symbol	* arminsn		466840						
ANR	467193	Symbol	get_nibble		466840						
ANR	467194	Symbol	load		466840						
ANR	467195	Symbol	writeback		466840						
ANR	467196	Symbol	immediate		466840						
ANR	467197	Symbol	* tbl_regs		466840						
ANR	467198	Symbol	inst		466840						
ANR	467199	Symbol	r_str_appendf		466840						
ANR	467200	Symbol	* get_nibble		466840						
ANR	467201	Symbol	direction		466840						
ANR	467202	Function	arm_disasm_blocktrans	307:0:10395:11264							
ANR	467203	FunctionDef	"arm_disasm_blocktrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		467202	0					
ANR	467204	CompoundStatement		307:79:10474:11264	467202	0					
ANR	467205	IdentifierDeclStatement	short load = ( inst >> 20 ) & 0x01 ;	308:1:10477:10514	467202	0	True				
ANR	467206	IdentifierDecl	load = ( inst >> 20 ) & 0x01		467202	0					
ANR	467207	IdentifierDeclType	short		467202	0					
ANR	467208	Identifier	load		467202	1					
ANR	467209	AssignmentExpression	load = ( inst >> 20 ) & 0x01		467202	2		=			
ANR	467210	Identifier	load		467202	0					
ANR	467211	BitAndExpression	( inst >> 20 ) & 0x01		467202	1		&			
ANR	467212	ShiftExpression	inst >> 20		467202	0		>>			
ANR	467213	Identifier	inst		467202	0					
ANR	467214	PrimaryExpression	20		467202	1					
ANR	467215	PrimaryExpression	0x01		467202	1					
ANR	467216	IdentifierDeclStatement	short writeback = ( inst >> 21 ) & 0x01 ;	309:1:10517:10554	467202	1	True				
ANR	467217	IdentifierDecl	writeback = ( inst >> 21 ) & 0x01		467202	0					
ANR	467218	IdentifierDeclType	short		467202	0					
ANR	467219	Identifier	writeback		467202	1					
ANR	467220	AssignmentExpression	writeback = ( inst >> 21 ) & 0x01		467202	2		=			
ANR	467221	Identifier	writeback		467202	0					
ANR	467222	BitAndExpression	( inst >> 21 ) & 0x01		467202	1		&			
ANR	467223	ShiftExpression	inst >> 21		467202	0		>>			
ANR	467224	Identifier	inst		467202	0					
ANR	467225	PrimaryExpression	21		467202	1					
ANR	467226	PrimaryExpression	0x01		467202	1					
ANR	467227	IdentifierDeclStatement	short psr = ( inst >> 22 ) & 0x01 ;	310:1:10557:10594	467202	2	True				
ANR	467228	IdentifierDecl	psr = ( inst >> 22 ) & 0x01		467202	0					
ANR	467229	IdentifierDeclType	short		467202	0					
ANR	467230	Identifier	psr		467202	1					
ANR	467231	AssignmentExpression	psr = ( inst >> 22 ) & 0x01		467202	2		=			
ANR	467232	Identifier	psr		467202	0					
ANR	467233	BitAndExpression	( inst >> 22 ) & 0x01		467202	1		&			
ANR	467234	ShiftExpression	inst >> 22		467202	0		>>			
ANR	467235	Identifier	inst		467202	0					
ANR	467236	PrimaryExpression	22		467202	1					
ANR	467237	PrimaryExpression	0x01		467202	1					
ANR	467238	IdentifierDeclStatement	short addrmode = ( inst >> 23 ) & 0x03 ;	311:1:10597:10634	467202	3	True				
ANR	467239	IdentifierDecl	addrmode = ( inst >> 23 ) & 0x03		467202	0					
ANR	467240	IdentifierDeclType	short		467202	0					
ANR	467241	Identifier	addrmode		467202	1					
ANR	467242	AssignmentExpression	addrmode = ( inst >> 23 ) & 0x03		467202	2		=			
ANR	467243	Identifier	addrmode		467202	0					
ANR	467244	BitAndExpression	( inst >> 23 ) & 0x03		467202	1		&			
ANR	467245	ShiftExpression	inst >> 23		467202	0		>>			
ANR	467246	Identifier	inst		467202	0					
ANR	467247	PrimaryExpression	23		467202	1					
ANR	467248	PrimaryExpression	0x03		467202	1					
ANR	467249	IdentifierDeclStatement	short i ;	312:1:10637:10644	467202	4	True				
ANR	467250	IdentifierDecl	i		467202	0					
ANR	467251	IdentifierDeclType	short		467202	0					
ANR	467252	Identifier	i		467202	1					
ANR	467253	IdentifierDeclStatement	short last = 15 ;	313:1:10647:10660	467202	5	True				
ANR	467254	IdentifierDecl	last = 15		467202	0					
ANR	467255	IdentifierDeclType	short		467202	0					
ANR	467256	Identifier	last		467202	1					
ANR	467257	AssignmentExpression	last = 15		467202	2		=			
ANR	467258	Identifier	last		467202	0					
ANR	467259	PrimaryExpression	15		467202	1					
ANR	467260	ForStatement	for ( i = 15 ; i >= 0 ; i -- )		467202	6					
ANR	467261	ForInit	i = 15 ;	315:6:10669:10673	467202	0	True				
ANR	467262	AssignmentExpression	i = 15		467202	0		=			
ANR	467263	Identifier	i		467202	0					
ANR	467264	PrimaryExpression	15		467202	1					
ANR	467265	Condition	i >= 0	315:11:10674:10677	467202	1	True				
ANR	467266	RelationalExpression	i >= 0		467202	0		>=			
ANR	467267	Identifier	i		467202	0					
ANR	467268	PrimaryExpression	0		467202	1					
ANR	467269	PostIncDecOperationExpression	i --	315:16:10679:10681	467202	2	True				
ANR	467270	Identifier	i		467202	0					
ANR	467271	IncDec	--		467202	1					
ANR	467272	CompoundStatement		9:21:209:209	467202	3					
ANR	467273	IfStatement	if ( ( inst >> i ) & 1 )		467202	0					
ANR	467274	Condition	( inst >> i ) & 1	316:6:10692:10704	467202	0	True				
ANR	467275	BitAndExpression	( inst >> i ) & 1		467202	0		&			
ANR	467276	ShiftExpression	inst >> i		467202	0		>>			
ANR	467277	Identifier	inst		467202	0					
ANR	467278	Identifier	i		467202	1					
ANR	467279	PrimaryExpression	1		467202	1					
ANR	467280	CompoundStatement		10:21:232:232	467202	1					
ANR	467281	ExpressionStatement	last = i	317:3:10712:10720	467202	0	True				
ANR	467282	AssignmentExpression	last = i		467202	0		=			
ANR	467283	Identifier	last		467202	0					
ANR	467284	Identifier	i		467202	1					
ANR	467285	BreakStatement	break ;	318:3:10725:10730	467202	1	True				
ANR	467286	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s %s%s, {"" , load ? ""ldm"" : ""stm"" , tbl_addrmode [ addrmode ] , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 4 ) ] , writeback ? ""!"" : """" )"	322:1:10741:10930	467202	7	True				
ANR	467287	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s %s%s, {"" , load ? ""ldm"" : ""stm"" , tbl_addrmode [ addrmode ] , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 4 ) ] , writeback ? ""!"" : """" )"		467202	0		=			
ANR	467288	PtrMemberAccess	arminsn -> str_asm		467202	0					
ANR	467289	Identifier	arminsn		467202	0					
ANR	467290	Identifier	str_asm		467202	1					
ANR	467291	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s%s %s%s, {"" , load ? ""ldm"" : ""stm"" , tbl_addrmode [ addrmode ] , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 4 ) ] , writeback ? ""!"" : """" )"		467202	1					
ANR	467292	Callee	r_str_appendf		467202	0					
ANR	467293	Identifier	r_str_appendf		467202	0					
ANR	467294	ArgumentList	arminsn -> str_asm		467202	1					
ANR	467295	Argument	arminsn -> str_asm		467202	0					
ANR	467296	PtrMemberAccess	arminsn -> str_asm		467202	0					
ANR	467297	Identifier	arminsn		467202	0					
ANR	467298	Identifier	str_asm		467202	1					
ANR	467299	Argument	"""%s%s%s %s%s, {"""		467202	1					
ANR	467300	PrimaryExpression	"""%s%s%s %s%s, {"""		467202	0					
ANR	467301	Argument	"load ? ""ldm"" : ""stm"""		467202	2					
ANR	467302	ConditionalExpression	"load ? ""ldm"" : ""stm"""		467202	0					
ANR	467303	Condition	load		467202	0					
ANR	467304	Identifier	load		467202	0					
ANR	467305	PrimaryExpression	"""ldm"""		467202	1					
ANR	467306	PrimaryExpression	"""stm"""		467202	2					
ANR	467307	Argument	tbl_addrmode [ addrmode ]		467202	3					
ANR	467308	ArrayIndexing	tbl_addrmode [ addrmode ]		467202	0					
ANR	467309	Identifier	tbl_addrmode		467202	0					
ANR	467310	Identifier	addrmode		467202	1					
ANR	467311	Argument	get_cond ( inst )		467202	4					
ANR	467312	CallExpression	get_cond ( inst )		467202	0					
ANR	467313	Callee	get_cond		467202	0					
ANR	467314	Identifier	get_cond		467202	0					
ANR	467315	ArgumentList	inst		467202	1					
ANR	467316	Argument	inst		467202	0					
ANR	467317	Identifier	inst		467202	0					
ANR	467318	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		467202	5					
ANR	467319	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		467202	0					
ANR	467320	Identifier	tbl_regs		467202	0					
ANR	467321	CallExpression	"get_nibble ( inst , 4 )"		467202	1					
ANR	467322	Callee	get_nibble		467202	0					
ANR	467323	Identifier	get_nibble		467202	0					
ANR	467324	ArgumentList	inst		467202	1					
ANR	467325	Argument	inst		467202	0					
ANR	467326	Identifier	inst		467202	0					
ANR	467327	Argument	4		467202	1					
ANR	467328	PrimaryExpression	4		467202	0					
ANR	467329	Argument	"writeback ? ""!"" : """""		467202	6					
ANR	467330	ConditionalExpression	"writeback ? ""!"" : """""		467202	0					
ANR	467331	Condition	writeback		467202	0					
ANR	467332	Identifier	writeback		467202	0					
ANR	467333	PrimaryExpression	"""!"""		467202	1					
ANR	467334	PrimaryExpression	""""""		467202	2					
ANR	467335	ForStatement	for ( i = 0 ; i <= 15 ; i ++ )		467202	8					
ANR	467336	ForInit	i = 0 ;	324:6:10938:10941	467202	0	True				
ANR	467337	AssignmentExpression	i = 0		467202	0		=			
ANR	467338	Identifier	i		467202	0					
ANR	467339	PrimaryExpression	0		467202	1					
ANR	467340	Condition	i <= 15	324:10:10942:10946	467202	1	True				
ANR	467341	RelationalExpression	i <= 15		467202	0		<=			
ANR	467342	Identifier	i		467202	0					
ANR	467343	PrimaryExpression	15		467202	1					
ANR	467344	PostIncDecOperationExpression	i ++	324:16:10948:10950	467202	2	True				
ANR	467345	Identifier	i		467202	0					
ANR	467346	IncDec	++		467202	1					
ANR	467347	CompoundStatement		18:21:478:478	467202	3					
ANR	467348	IfStatement	if ( ( inst >> i ) & 1 )		467202	0					
ANR	467349	Condition	( inst >> i ) & 1	325:6:10961:10973	467202	0	True				
ANR	467350	BitAndExpression	( inst >> i ) & 1		467202	0		&			
ANR	467351	ShiftExpression	inst >> i		467202	0		>>			
ANR	467352	Identifier	inst		467202	0					
ANR	467353	Identifier	i		467202	1					
ANR	467354	PrimaryExpression	1		467202	1					
ANR	467355	CompoundStatement		19:21:501:501	467202	1					
ANR	467356	IfStatement	if ( i == last )		467202	0					
ANR	467357	Condition	i == last	326:7:10985:10993	467202	0	True				
ANR	467358	EqualityExpression	i == last		467202	0		==			
ANR	467359	Identifier	i		467202	0					
ANR	467360	Identifier	last		467202	1					
ANR	467361	CompoundStatement		20:18:521:521	467202	1					
ANR	467362	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"	327:4:11002:11072	467202	0	True				
ANR	467363	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"		467202	0		=			
ANR	467364	PtrMemberAccess	arminsn -> str_asm		467202	0					
ANR	467365	Identifier	arminsn		467202	0					
ANR	467366	Identifier	str_asm		467202	1					
ANR	467367	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"		467202	1					
ANR	467368	Callee	r_str_appendf		467202	0					
ANR	467369	Identifier	r_str_appendf		467202	0					
ANR	467370	ArgumentList	arminsn -> str_asm		467202	1					
ANR	467371	Argument	arminsn -> str_asm		467202	0					
ANR	467372	PtrMemberAccess	arminsn -> str_asm		467202	0					
ANR	467373	Identifier	arminsn		467202	0					
ANR	467374	Identifier	str_asm		467202	1					
ANR	467375	Argument	"""%s"""		467202	1					
ANR	467376	PrimaryExpression	"""%s"""		467202	0					
ANR	467377	Argument	tbl_regs [ i ]		467202	2					
ANR	467378	ArrayIndexing	tbl_regs [ i ]		467202	0					
ANR	467379	Identifier	tbl_regs		467202	0					
ANR	467380	Identifier	i		467202	1					
ANR	467381	ElseStatement	else		467202	0					
ANR	467382	CompoundStatement		22:10:609:609	467202	0					
ANR	467383	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"	329:4:11090:11162	467202	0	True				
ANR	467384	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"		467202	0		=			
ANR	467385	PtrMemberAccess	arminsn -> str_asm		467202	0					
ANR	467386	Identifier	arminsn		467202	0					
ANR	467387	Identifier	str_asm		467202	1					
ANR	467388	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"		467202	1					
ANR	467389	Callee	r_str_appendf		467202	0					
ANR	467390	Identifier	r_str_appendf		467202	0					
ANR	467391	ArgumentList	arminsn -> str_asm		467202	1					
ANR	467392	Argument	arminsn -> str_asm		467202	0					
ANR	467393	PtrMemberAccess	arminsn -> str_asm		467202	0					
ANR	467394	Identifier	arminsn		467202	0					
ANR	467395	Identifier	str_asm		467202	1					
ANR	467396	Argument	"""%s, """		467202	1					
ANR	467397	PrimaryExpression	"""%s, """		467202	0					
ANR	467398	Argument	tbl_regs [ i ]		467202	2					
ANR	467399	ArrayIndexing	tbl_regs [ i ]		467202	0					
ANR	467400	Identifier	tbl_regs		467202	0					
ANR	467401	Identifier	i		467202	1					
ANR	467402	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""}%s"" , psr ? ""^"" : """" )"	333:1:11177:11251	467202	9	True				
ANR	467403	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""}%s"" , psr ? ""^"" : """" )"		467202	0		=			
ANR	467404	PtrMemberAccess	arminsn -> str_asm		467202	0					
ANR	467405	Identifier	arminsn		467202	0					
ANR	467406	Identifier	str_asm		467202	1					
ANR	467407	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""}%s"" , psr ? ""^"" : """" )"		467202	1					
ANR	467408	Callee	r_str_appendf		467202	0					
ANR	467409	Identifier	r_str_appendf		467202	0					
ANR	467410	ArgumentList	arminsn -> str_asm		467202	1					
ANR	467411	Argument	arminsn -> str_asm		467202	0					
ANR	467412	PtrMemberAccess	arminsn -> str_asm		467202	0					
ANR	467413	Identifier	arminsn		467202	0					
ANR	467414	Identifier	str_asm		467202	1					
ANR	467415	Argument	"""}%s"""		467202	1					
ANR	467416	PrimaryExpression	"""}%s"""		467202	0					
ANR	467417	Argument	"psr ? ""^"" : """""		467202	2					
ANR	467418	ConditionalExpression	"psr ? ""^"" : """""		467202	0					
ANR	467419	Condition	psr		467202	0					
ANR	467420	Identifier	psr		467202	0					
ANR	467421	PrimaryExpression	"""^"""		467202	1					
ANR	467422	PrimaryExpression	""""""		467202	2					
ANR	467423	ReturnStatement	return 0 ;	334:1:11254:11262	467202	10	True				
ANR	467424	PrimaryExpression	0		467202	0					
ANR	467425	ReturnType	static ut32		467202	1					
ANR	467426	Identifier	arm_disasm_blocktrans		467202	2					
ANR	467427	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		467202	3					
ANR	467428	Parameter	struct winedbg_arm_insn * arminsn	307:34:10429:10460	467202	0	True				
ANR	467429	ParameterType	struct winedbg_arm_insn *		467202	0					
ANR	467430	Identifier	arminsn		467202	1					
ANR	467431	Parameter	ut32 inst	307:68:10463:10471	467202	1	True				
ANR	467432	ParameterType	ut32		467202	0					
ANR	467433	Identifier	inst		467202	1					
ANR	467434	CFGEntryNode	ENTRY		467202		True				
ANR	467435	CFGExitNode	EXIT		467202		True				
ANR	467436	Symbol	get_cond		467202						
ANR	467437	Symbol	last		467202						
ANR	467438	Symbol	* tbl_addrmode		467202						
ANR	467439	Symbol	tbl_regs		467202						
ANR	467440	Symbol	i		467202						
ANR	467441	Symbol	arminsn		467202						
ANR	467442	Symbol	addrmode		467202						
ANR	467443	Symbol	psr		467202						
ANR	467444	Symbol	arminsn -> str_asm		467202						
ANR	467445	Symbol	* arminsn		467202						
ANR	467446	Symbol	get_nibble		467202						
ANR	467447	Symbol	* addrmode		467202						
ANR	467448	Symbol	* i		467202						
ANR	467449	Symbol	load		467202						
ANR	467450	Symbol	writeback		467202						
ANR	467451	Symbol	* tbl_regs		467202						
ANR	467452	Symbol	inst		467202						
ANR	467453	Symbol	r_str_appendf		467202						
ANR	467454	Symbol	* get_nibble		467202						
ANR	467455	Symbol	tbl_addrmode		467202						
ANR	467456	Function	arm_disasm_swi	337:0:11267:11480							
ANR	467457	FunctionDef	"arm_disasm_swi (struct winedbg_arm_insn * arminsn , ut32 inst)"		467456	0					
ANR	467458	CompoundStatement		337:72:11339:11480	467456	0					
ANR	467459	IdentifierDeclStatement	ut32 comment = inst & 0x00ffffff ;	338:1:11342:11374	467456	0	True				
ANR	467460	IdentifierDecl	comment = inst & 0x00ffffff		467456	0					
ANR	467461	IdentifierDeclType	ut32		467456	0					
ANR	467462	Identifier	comment		467456	1					
ANR	467463	AssignmentExpression	comment = inst & 0x00ffffff		467456	2		=			
ANR	467464	Identifier	comment		467456	0					
ANR	467465	BitAndExpression	inst & 0x00ffffff		467456	1		&			
ANR	467466	Identifier	inst		467456	0					
ANR	467467	PrimaryExpression	0x00ffffff		467456	1					
ANR	467468	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""swi%s #%d"" , get_cond ( inst ) , comment )"	339:1:11377:11467	467456	1	True				
ANR	467469	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""swi%s #%d"" , get_cond ( inst ) , comment )"		467456	0		=			
ANR	467470	PtrMemberAccess	arminsn -> str_asm		467456	0					
ANR	467471	Identifier	arminsn		467456	0					
ANR	467472	Identifier	str_asm		467456	1					
ANR	467473	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""swi%s #%d"" , get_cond ( inst ) , comment )"		467456	1					
ANR	467474	Callee	r_str_appendf		467456	0					
ANR	467475	Identifier	r_str_appendf		467456	0					
ANR	467476	ArgumentList	arminsn -> str_asm		467456	1					
ANR	467477	Argument	arminsn -> str_asm		467456	0					
ANR	467478	PtrMemberAccess	arminsn -> str_asm		467456	0					
ANR	467479	Identifier	arminsn		467456	0					
ANR	467480	Identifier	str_asm		467456	1					
ANR	467481	Argument	"""swi%s #%d"""		467456	1					
ANR	467482	PrimaryExpression	"""swi%s #%d"""		467456	0					
ANR	467483	Argument	get_cond ( inst )		467456	2					
ANR	467484	CallExpression	get_cond ( inst )		467456	0					
ANR	467485	Callee	get_cond		467456	0					
ANR	467486	Identifier	get_cond		467456	0					
ANR	467487	ArgumentList	inst		467456	1					
ANR	467488	Argument	inst		467456	0					
ANR	467489	Identifier	inst		467456	0					
ANR	467490	Argument	comment		467456	3					
ANR	467491	Identifier	comment		467456	0					
ANR	467492	ReturnStatement	return 0 ;	340:1:11470:11478	467456	2	True				
ANR	467493	PrimaryExpression	0		467456	0					
ANR	467494	ReturnType	static ut32		467456	1					
ANR	467495	Identifier	arm_disasm_swi		467456	2					
ANR	467496	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		467456	3					
ANR	467497	Parameter	struct winedbg_arm_insn * arminsn	337:27:11294:11325	467456	0	True				
ANR	467498	ParameterType	struct winedbg_arm_insn *		467456	0					
ANR	467499	Identifier	arminsn		467456	1					
ANR	467500	Parameter	ut32 inst	337:61:11328:11336	467456	1	True				
ANR	467501	ParameterType	ut32		467456	0					
ANR	467502	Identifier	inst		467456	1					
ANR	467503	CFGEntryNode	ENTRY		467456		True				
ANR	467504	CFGExitNode	EXIT		467456		True				
ANR	467505	Symbol	* arminsn		467456						
ANR	467506	Symbol	get_cond		467456						
ANR	467507	Symbol	inst		467456						
ANR	467508	Symbol	r_str_appendf		467456						
ANR	467509	Symbol	arminsn		467456						
ANR	467510	Symbol	comment		467456						
ANR	467511	Symbol	arminsn -> str_asm		467456						
ANR	467512	Function	arm_disasm_coproctrans	343:0:11483:11979							
ANR	467513	FunctionDef	"arm_disasm_coproctrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		467512	0					
ANR	467514	CompoundStatement		343:80:11563:11979	467512	0					
ANR	467515	IdentifierDeclStatement	ut16 CRm = inst & 0x0f ;	344:1:11566:11591	467512	0	True				
ANR	467516	IdentifierDecl	CRm = inst & 0x0f		467512	0					
ANR	467517	IdentifierDeclType	ut16		467512	0					
ANR	467518	Identifier	CRm		467512	1					
ANR	467519	AssignmentExpression	CRm = inst & 0x0f		467512	2		=			
ANR	467520	Identifier	CRm		467512	0					
ANR	467521	BitAndExpression	inst & 0x0f		467512	1		&			
ANR	467522	Identifier	inst		467512	0					
ANR	467523	PrimaryExpression	0x0f		467512	1					
ANR	467524	IdentifierDeclStatement	ut16 CP = ( inst >> 5 ) & 0x07 ;	345:1:11594:11627	467512	1	True				
ANR	467525	IdentifierDecl	CP = ( inst >> 5 ) & 0x07		467512	0					
ANR	467526	IdentifierDeclType	ut16		467512	0					
ANR	467527	Identifier	CP		467512	1					
ANR	467528	AssignmentExpression	CP = ( inst >> 5 ) & 0x07		467512	2		=			
ANR	467529	Identifier	CP		467512	0					
ANR	467530	BitAndExpression	( inst >> 5 ) & 0x07		467512	1		&			
ANR	467531	ShiftExpression	inst >> 5		467512	0		>>			
ANR	467532	Identifier	inst		467512	0					
ANR	467533	PrimaryExpression	5		467512	1					
ANR	467534	PrimaryExpression	0x07		467512	1					
ANR	467535	IdentifierDeclStatement	ut16 CPnum = ( inst >> 8 ) & 0x0f ;	346:1:11630:11663	467512	2	True				
ANR	467536	IdentifierDecl	CPnum = ( inst >> 8 ) & 0x0f		467512	0					
ANR	467537	IdentifierDeclType	ut16		467512	0					
ANR	467538	Identifier	CPnum		467512	1					
ANR	467539	AssignmentExpression	CPnum = ( inst >> 8 ) & 0x0f		467512	2		=			
ANR	467540	Identifier	CPnum		467512	0					
ANR	467541	BitAndExpression	( inst >> 8 ) & 0x0f		467512	1		&			
ANR	467542	ShiftExpression	inst >> 8		467512	0		>>			
ANR	467543	Identifier	inst		467512	0					
ANR	467544	PrimaryExpression	8		467512	1					
ANR	467545	PrimaryExpression	0x0f		467512	1					
ANR	467546	IdentifierDeclStatement	ut16 CRn = ( inst >> 16 ) & 0x0f ;	347:1:11666:11699	467512	3	True				
ANR	467547	IdentifierDecl	CRn = ( inst >> 16 ) & 0x0f		467512	0					
ANR	467548	IdentifierDeclType	ut16		467512	0					
ANR	467549	Identifier	CRn		467512	1					
ANR	467550	AssignmentExpression	CRn = ( inst >> 16 ) & 0x0f		467512	2		=			
ANR	467551	Identifier	CRn		467512	0					
ANR	467552	BitAndExpression	( inst >> 16 ) & 0x0f		467512	1		&			
ANR	467553	ShiftExpression	inst >> 16		467512	0		>>			
ANR	467554	Identifier	inst		467512	0					
ANR	467555	PrimaryExpression	16		467512	1					
ANR	467556	PrimaryExpression	0x0f		467512	1					
ANR	467557	IdentifierDeclStatement	ut16 load = ( inst >> 20 ) & 0x01 ;	348:1:11702:11735	467512	4	True				
ANR	467558	IdentifierDecl	load = ( inst >> 20 ) & 0x01		467512	0					
ANR	467559	IdentifierDeclType	ut16		467512	0					
ANR	467560	Identifier	load		467512	1					
ANR	467561	AssignmentExpression	load = ( inst >> 20 ) & 0x01		467512	2		=			
ANR	467562	Identifier	load		467512	0					
ANR	467563	BitAndExpression	( inst >> 20 ) & 0x01		467512	1		&			
ANR	467564	ShiftExpression	inst >> 20		467512	0		>>			
ANR	467565	Identifier	inst		467512	0					
ANR	467566	PrimaryExpression	20		467512	1					
ANR	467567	PrimaryExpression	0x01		467512	1					
ANR	467568	IdentifierDeclStatement	ut16 CP_Opc = ( inst >> 21 ) & 0x07 ;	349:1:11738:11771	467512	5	True				
ANR	467569	IdentifierDecl	CP_Opc = ( inst >> 21 ) & 0x07		467512	0					
ANR	467570	IdentifierDeclType	ut16		467512	0					
ANR	467571	Identifier	CP_Opc		467512	1					
ANR	467572	AssignmentExpression	CP_Opc = ( inst >> 21 ) & 0x07		467512	2		=			
ANR	467573	Identifier	CP_Opc		467512	0					
ANR	467574	BitAndExpression	( inst >> 21 ) & 0x07		467512	1		&			
ANR	467575	ShiftExpression	inst >> 21		467512	0		>>			
ANR	467576	Identifier	inst		467512	0					
ANR	467577	PrimaryExpression	21		467512	1					
ANR	467578	PrimaryExpression	0x07		467512	1					
ANR	467579	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s %u, %u, %s, cr%u, cr%u, {%u}"" , load ? ""mrc"" : ""mcr"" , get_cond ( inst ) , CPnum , CP , tbl_regs [ get_nibble ( inst , 3 ) ] , CRn , CRm , CP_Opc )"	351:1:11775:11966	467512	6	True				
ANR	467580	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s %u, %u, %s, cr%u, cr%u, {%u}"" , load ? ""mrc"" : ""mcr"" , get_cond ( inst ) , CPnum , CP , tbl_regs [ get_nibble ( inst , 3 ) ] , CRn , CRm , CP_Opc )"		467512	0		=			
ANR	467581	PtrMemberAccess	arminsn -> str_asm		467512	0					
ANR	467582	Identifier	arminsn		467512	0					
ANR	467583	Identifier	str_asm		467512	1					
ANR	467584	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s %u, %u, %s, cr%u, cr%u, {%u}"" , load ? ""mrc"" : ""mcr"" , get_cond ( inst ) , CPnum , CP , tbl_regs [ get_nibble ( inst , 3 ) ] , CRn , CRm , CP_Opc )"		467512	1					
ANR	467585	Callee	r_str_appendf		467512	0					
ANR	467586	Identifier	r_str_appendf		467512	0					
ANR	467587	ArgumentList	arminsn -> str_asm		467512	1					
ANR	467588	Argument	arminsn -> str_asm		467512	0					
ANR	467589	PtrMemberAccess	arminsn -> str_asm		467512	0					
ANR	467590	Identifier	arminsn		467512	0					
ANR	467591	Identifier	str_asm		467512	1					
ANR	467592	Argument	"""%s%s %u, %u, %s, cr%u, cr%u, {%u}"""		467512	1					
ANR	467593	PrimaryExpression	"""%s%s %u, %u, %s, cr%u, cr%u, {%u}"""		467512	0					
ANR	467594	Argument	"load ? ""mrc"" : ""mcr"""		467512	2					
ANR	467595	ConditionalExpression	"load ? ""mrc"" : ""mcr"""		467512	0					
ANR	467596	Condition	load		467512	0					
ANR	467597	Identifier	load		467512	0					
ANR	467598	PrimaryExpression	"""mrc"""		467512	1					
ANR	467599	PrimaryExpression	"""mcr"""		467512	2					
ANR	467600	Argument	get_cond ( inst )		467512	3					
ANR	467601	CallExpression	get_cond ( inst )		467512	0					
ANR	467602	Callee	get_cond		467512	0					
ANR	467603	Identifier	get_cond		467512	0					
ANR	467604	ArgumentList	inst		467512	1					
ANR	467605	Argument	inst		467512	0					
ANR	467606	Identifier	inst		467512	0					
ANR	467607	Argument	CPnum		467512	4					
ANR	467608	Identifier	CPnum		467512	0					
ANR	467609	Argument	CP		467512	5					
ANR	467610	Identifier	CP		467512	0					
ANR	467611	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		467512	6					
ANR	467612	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		467512	0					
ANR	467613	Identifier	tbl_regs		467512	0					
ANR	467614	CallExpression	"get_nibble ( inst , 3 )"		467512	1					
ANR	467615	Callee	get_nibble		467512	0					
ANR	467616	Identifier	get_nibble		467512	0					
ANR	467617	ArgumentList	inst		467512	1					
ANR	467618	Argument	inst		467512	0					
ANR	467619	Identifier	inst		467512	0					
ANR	467620	Argument	3		467512	1					
ANR	467621	PrimaryExpression	3		467512	0					
ANR	467622	Argument	CRn		467512	7					
ANR	467623	Identifier	CRn		467512	0					
ANR	467624	Argument	CRm		467512	8					
ANR	467625	Identifier	CRm		467512	0					
ANR	467626	Argument	CP_Opc		467512	9					
ANR	467627	Identifier	CP_Opc		467512	0					
ANR	467628	ReturnStatement	return 0 ;	353:1:11969:11977	467512	7	True				
ANR	467629	PrimaryExpression	0		467512	0					
ANR	467630	ReturnType	static ut32		467512	1					
ANR	467631	Identifier	arm_disasm_coproctrans		467512	2					
ANR	467632	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		467512	3					
ANR	467633	Parameter	struct winedbg_arm_insn * arminsn	343:35:11518:11549	467512	0	True				
ANR	467634	ParameterType	struct winedbg_arm_insn *		467512	0					
ANR	467635	Identifier	arminsn		467512	1					
ANR	467636	Parameter	ut32 inst	343:69:11552:11560	467512	1	True				
ANR	467637	ParameterType	ut32		467512	0					
ANR	467638	Identifier	inst		467512	1					
ANR	467639	CFGEntryNode	ENTRY		467512		True				
ANR	467640	CFGExitNode	EXIT		467512		True				
ANR	467641	Symbol	get_cond		467512						
ANR	467642	Symbol	tbl_regs		467512						
ANR	467643	Symbol	arminsn		467512						
ANR	467644	Symbol	CP		467512						
ANR	467645	Symbol	arminsn -> str_asm		467512						
ANR	467646	Symbol	CPnum		467512						
ANR	467647	Symbol	* arminsn		467512						
ANR	467648	Symbol	get_nibble		467512						
ANR	467649	Symbol	load		467512						
ANR	467650	Symbol	* tbl_regs		467512						
ANR	467651	Symbol	inst		467512						
ANR	467652	Symbol	r_str_appendf		467512						
ANR	467653	Symbol	CP_Opc		467512						
ANR	467654	Symbol	* get_nibble		467512						
ANR	467655	Symbol	CRn		467512						
ANR	467656	Symbol	CRm		467512						
ANR	467657	Function	arm_disasm_coprocdataop	356:0:11982:12433							
ANR	467658	FunctionDef	"arm_disasm_coprocdataop (struct winedbg_arm_insn * arminsn , ut32 inst)"		467657	0					
ANR	467659	CompoundStatement		356:81:12063:12433	467657	0					
ANR	467660	IdentifierDeclStatement	ut16 CRm = inst & 0x0f ;	357:1:12066:12091	467657	0	True				
ANR	467661	IdentifierDecl	CRm = inst & 0x0f		467657	0					
ANR	467662	IdentifierDeclType	ut16		467657	0					
ANR	467663	Identifier	CRm		467657	1					
ANR	467664	AssignmentExpression	CRm = inst & 0x0f		467657	2		=			
ANR	467665	Identifier	CRm		467657	0					
ANR	467666	BitAndExpression	inst & 0x0f		467657	1		&			
ANR	467667	Identifier	inst		467657	0					
ANR	467668	PrimaryExpression	0x0f		467657	1					
ANR	467669	IdentifierDeclStatement	ut16 CP = ( inst >> 5 ) & 0x07 ;	358:1:12094:12127	467657	1	True				
ANR	467670	IdentifierDecl	CP = ( inst >> 5 ) & 0x07		467657	0					
ANR	467671	IdentifierDeclType	ut16		467657	0					
ANR	467672	Identifier	CP		467657	1					
ANR	467673	AssignmentExpression	CP = ( inst >> 5 ) & 0x07		467657	2		=			
ANR	467674	Identifier	CP		467657	0					
ANR	467675	BitAndExpression	( inst >> 5 ) & 0x07		467657	1		&			
ANR	467676	ShiftExpression	inst >> 5		467657	0		>>			
ANR	467677	Identifier	inst		467657	0					
ANR	467678	PrimaryExpression	5		467657	1					
ANR	467679	PrimaryExpression	0x07		467657	1					
ANR	467680	IdentifierDeclStatement	ut16 CPnum = ( inst >> 8 ) & 0x0f ;	359:1:12130:12163	467657	2	True				
ANR	467681	IdentifierDecl	CPnum = ( inst >> 8 ) & 0x0f		467657	0					
ANR	467682	IdentifierDeclType	ut16		467657	0					
ANR	467683	Identifier	CPnum		467657	1					
ANR	467684	AssignmentExpression	CPnum = ( inst >> 8 ) & 0x0f		467657	2		=			
ANR	467685	Identifier	CPnum		467657	0					
ANR	467686	BitAndExpression	( inst >> 8 ) & 0x0f		467657	1		&			
ANR	467687	ShiftExpression	inst >> 8		467657	0		>>			
ANR	467688	Identifier	inst		467657	0					
ANR	467689	PrimaryExpression	8		467657	1					
ANR	467690	PrimaryExpression	0x0f		467657	1					
ANR	467691	IdentifierDeclStatement	ut16 CRd = ( inst >> 12 ) & 0x0f ;	360:1:12166:12199	467657	3	True				
ANR	467692	IdentifierDecl	CRd = ( inst >> 12 ) & 0x0f		467657	0					
ANR	467693	IdentifierDeclType	ut16		467657	0					
ANR	467694	Identifier	CRd		467657	1					
ANR	467695	AssignmentExpression	CRd = ( inst >> 12 ) & 0x0f		467657	2		=			
ANR	467696	Identifier	CRd		467657	0					
ANR	467697	BitAndExpression	( inst >> 12 ) & 0x0f		467657	1		&			
ANR	467698	ShiftExpression	inst >> 12		467657	0		>>			
ANR	467699	Identifier	inst		467657	0					
ANR	467700	PrimaryExpression	12		467657	1					
ANR	467701	PrimaryExpression	0x0f		467657	1					
ANR	467702	IdentifierDeclStatement	ut16 CRn = ( inst >> 16 ) & 0x0f ;	361:1:12202:12235	467657	4	True				
ANR	467703	IdentifierDecl	CRn = ( inst >> 16 ) & 0x0f		467657	0					
ANR	467704	IdentifierDeclType	ut16		467657	0					
ANR	467705	Identifier	CRn		467657	1					
ANR	467706	AssignmentExpression	CRn = ( inst >> 16 ) & 0x0f		467657	2		=			
ANR	467707	Identifier	CRn		467657	0					
ANR	467708	BitAndExpression	( inst >> 16 ) & 0x0f		467657	1		&			
ANR	467709	ShiftExpression	inst >> 16		467657	0		>>			
ANR	467710	Identifier	inst		467657	0					
ANR	467711	PrimaryExpression	16		467657	1					
ANR	467712	PrimaryExpression	0x0f		467657	1					
ANR	467713	IdentifierDeclStatement	ut16 CP_Opc = ( inst >> 20 ) & 0x0f ;	362:1:12238:12271	467657	5	True				
ANR	467714	IdentifierDecl	CP_Opc = ( inst >> 20 ) & 0x0f		467657	0					
ANR	467715	IdentifierDeclType	ut16		467657	0					
ANR	467716	Identifier	CP_Opc		467657	1					
ANR	467717	AssignmentExpression	CP_Opc = ( inst >> 20 ) & 0x0f		467657	2		=			
ANR	467718	Identifier	CP_Opc		467657	0					
ANR	467719	BitAndExpression	( inst >> 20 ) & 0x0f		467657	1		&			
ANR	467720	ShiftExpression	inst >> 20		467657	0		>>			
ANR	467721	Identifier	inst		467657	0					
ANR	467722	PrimaryExpression	20		467657	1					
ANR	467723	PrimaryExpression	0x0f		467657	1					
ANR	467724	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""cdp%s %u, %u, cr%u, cr%u, cr%u, {%u}"" , get_cond ( inst ) , CPnum , CP , CRd , CRn , CRm , CP_Opc )"	364:1:12275:12420	467657	6	True				
ANR	467725	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""cdp%s %u, %u, cr%u, cr%u, cr%u, {%u}"" , get_cond ( inst ) , CPnum , CP , CRd , CRn , CRm , CP_Opc )"		467657	0		=			
ANR	467726	PtrMemberAccess	arminsn -> str_asm		467657	0					
ANR	467727	Identifier	arminsn		467657	0					
ANR	467728	Identifier	str_asm		467657	1					
ANR	467729	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""cdp%s %u, %u, cr%u, cr%u, cr%u, {%u}"" , get_cond ( inst ) , CPnum , CP , CRd , CRn , CRm , CP_Opc )"		467657	1					
ANR	467730	Callee	r_str_appendf		467657	0					
ANR	467731	Identifier	r_str_appendf		467657	0					
ANR	467732	ArgumentList	arminsn -> str_asm		467657	1					
ANR	467733	Argument	arminsn -> str_asm		467657	0					
ANR	467734	PtrMemberAccess	arminsn -> str_asm		467657	0					
ANR	467735	Identifier	arminsn		467657	0					
ANR	467736	Identifier	str_asm		467657	1					
ANR	467737	Argument	"""cdp%s %u, %u, cr%u, cr%u, cr%u, {%u}"""		467657	1					
ANR	467738	PrimaryExpression	"""cdp%s %u, %u, cr%u, cr%u, cr%u, {%u}"""		467657	0					
ANR	467739	Argument	get_cond ( inst )		467657	2					
ANR	467740	CallExpression	get_cond ( inst )		467657	0					
ANR	467741	Callee	get_cond		467657	0					
ANR	467742	Identifier	get_cond		467657	0					
ANR	467743	ArgumentList	inst		467657	1					
ANR	467744	Argument	inst		467657	0					
ANR	467745	Identifier	inst		467657	0					
ANR	467746	Argument	CPnum		467657	3					
ANR	467747	Identifier	CPnum		467657	0					
ANR	467748	Argument	CP		467657	4					
ANR	467749	Identifier	CP		467657	0					
ANR	467750	Argument	CRd		467657	5					
ANR	467751	Identifier	CRd		467657	0					
ANR	467752	Argument	CRn		467657	6					
ANR	467753	Identifier	CRn		467657	0					
ANR	467754	Argument	CRm		467657	7					
ANR	467755	Identifier	CRm		467657	0					
ANR	467756	Argument	CP_Opc		467657	8					
ANR	467757	Identifier	CP_Opc		467657	0					
ANR	467758	ReturnStatement	return 0 ;	366:1:12423:12431	467657	7	True				
ANR	467759	PrimaryExpression	0		467657	0					
ANR	467760	ReturnType	static ut32		467657	1					
ANR	467761	Identifier	arm_disasm_coprocdataop		467657	2					
ANR	467762	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		467657	3					
ANR	467763	Parameter	struct winedbg_arm_insn * arminsn	356:36:12018:12049	467657	0	True				
ANR	467764	ParameterType	struct winedbg_arm_insn *		467657	0					
ANR	467765	Identifier	arminsn		467657	1					
ANR	467766	Parameter	ut32 inst	356:70:12052:12060	467657	1	True				
ANR	467767	ParameterType	ut32		467657	0					
ANR	467768	Identifier	inst		467657	1					
ANR	467769	CFGEntryNode	ENTRY		467657		True				
ANR	467770	CFGExitNode	EXIT		467657		True				
ANR	467771	Symbol	* arminsn		467657						
ANR	467772	Symbol	get_cond		467657						
ANR	467773	Symbol	CRd		467657						
ANR	467774	Symbol	inst		467657						
ANR	467775	Symbol	r_str_appendf		467657						
ANR	467776	Symbol	CP_Opc		467657						
ANR	467777	Symbol	arminsn		467657						
ANR	467778	Symbol	CP		467657						
ANR	467779	Symbol	CRn		467657						
ANR	467780	Symbol	arminsn -> str_asm		467657						
ANR	467781	Symbol	CRm		467657						
ANR	467782	Symbol	CPnum		467657						
ANR	467783	Function	arm_disasm_coprocdatatrans	369:0:12436:13325							
ANR	467784	FunctionDef	"arm_disasm_coprocdatatrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		467783	0					
ANR	467785	CompoundStatement		369:84:12520:13325	467783	0					
ANR	467786	IdentifierDeclStatement	ut16 CPnum = ( inst >> 8 ) & 0x0f ;	370:1:12523:12556	467783	0	True				
ANR	467787	IdentifierDecl	CPnum = ( inst >> 8 ) & 0x0f		467783	0					
ANR	467788	IdentifierDeclType	ut16		467783	0					
ANR	467789	Identifier	CPnum		467783	1					
ANR	467790	AssignmentExpression	CPnum = ( inst >> 8 ) & 0x0f		467783	2		=			
ANR	467791	Identifier	CPnum		467783	0					
ANR	467792	BitAndExpression	( inst >> 8 ) & 0x0f		467783	1		&			
ANR	467793	ShiftExpression	inst >> 8		467783	0		>>			
ANR	467794	Identifier	inst		467783	0					
ANR	467795	PrimaryExpression	8		467783	1					
ANR	467796	PrimaryExpression	0x0f		467783	1					
ANR	467797	IdentifierDeclStatement	ut16 CRd = ( inst >> 12 ) & 0x0f ;	371:1:12559:12592	467783	1	True				
ANR	467798	IdentifierDecl	CRd = ( inst >> 12 ) & 0x0f		467783	0					
ANR	467799	IdentifierDeclType	ut16		467783	0					
ANR	467800	Identifier	CRd		467783	1					
ANR	467801	AssignmentExpression	CRd = ( inst >> 12 ) & 0x0f		467783	2		=			
ANR	467802	Identifier	CRd		467783	0					
ANR	467803	BitAndExpression	( inst >> 12 ) & 0x0f		467783	1		&			
ANR	467804	ShiftExpression	inst >> 12		467783	0		>>			
ANR	467805	Identifier	inst		467783	0					
ANR	467806	PrimaryExpression	12		467783	1					
ANR	467807	PrimaryExpression	0x0f		467783	1					
ANR	467808	IdentifierDeclStatement	ut16 load = ( inst >> 20 ) & 0x01 ;	372:1:12595:12631	467783	2	True				
ANR	467809	IdentifierDecl	load = ( inst >> 20 ) & 0x01		467783	0					
ANR	467810	IdentifierDeclType	ut16		467783	0					
ANR	467811	Identifier	load		467783	1					
ANR	467812	AssignmentExpression	load = ( inst >> 20 ) & 0x01		467783	2		=			
ANR	467813	Identifier	load		467783	0					
ANR	467814	BitAndExpression	( inst >> 20 ) & 0x01		467783	1		&			
ANR	467815	ShiftExpression	inst >> 20		467783	0		>>			
ANR	467816	Identifier	inst		467783	0					
ANR	467817	PrimaryExpression	20		467783	1					
ANR	467818	PrimaryExpression	0x01		467783	1					
ANR	467819	IdentifierDeclStatement	ut16 writeback = ( inst >> 21 ) & 0x01 ;	373:1:12634:12670	467783	3	True				
ANR	467820	IdentifierDecl	writeback = ( inst >> 21 ) & 0x01		467783	0					
ANR	467821	IdentifierDeclType	ut16		467783	0					
ANR	467822	Identifier	writeback		467783	1					
ANR	467823	AssignmentExpression	writeback = ( inst >> 21 ) & 0x01		467783	2		=			
ANR	467824	Identifier	writeback		467783	0					
ANR	467825	BitAndExpression	( inst >> 21 ) & 0x01		467783	1		&			
ANR	467826	ShiftExpression	inst >> 21		467783	0		>>			
ANR	467827	Identifier	inst		467783	0					
ANR	467828	PrimaryExpression	21		467783	1					
ANR	467829	PrimaryExpression	0x01		467783	1					
ANR	467830	IdentifierDeclStatement	ut16 translen = ( inst >> 22 ) & 0x01 ;	374:1:12673:12709	467783	4	True				
ANR	467831	IdentifierDecl	translen = ( inst >> 22 ) & 0x01		467783	0					
ANR	467832	IdentifierDeclType	ut16		467783	0					
ANR	467833	Identifier	translen		467783	1					
ANR	467834	AssignmentExpression	translen = ( inst >> 22 ) & 0x01		467783	2		=			
ANR	467835	Identifier	translen		467783	0					
ANR	467836	BitAndExpression	( inst >> 22 ) & 0x01		467783	1		&			
ANR	467837	ShiftExpression	inst >> 22		467783	0		>>			
ANR	467838	Identifier	inst		467783	0					
ANR	467839	PrimaryExpression	22		467783	1					
ANR	467840	PrimaryExpression	0x01		467783	1					
ANR	467841	IdentifierDeclStatement	ut16 direction = ( inst >> 23 ) & 0x01 ;	375:1:12712:12748	467783	5	True				
ANR	467842	IdentifierDecl	direction = ( inst >> 23 ) & 0x01		467783	0					
ANR	467843	IdentifierDeclType	ut16		467783	0					
ANR	467844	Identifier	direction		467783	1					
ANR	467845	AssignmentExpression	direction = ( inst >> 23 ) & 0x01		467783	2		=			
ANR	467846	Identifier	direction		467783	0					
ANR	467847	BitAndExpression	( inst >> 23 ) & 0x01		467783	1		&			
ANR	467848	ShiftExpression	inst >> 23		467783	0		>>			
ANR	467849	Identifier	inst		467783	0					
ANR	467850	PrimaryExpression	23		467783	1					
ANR	467851	PrimaryExpression	0x01		467783	1					
ANR	467852	IdentifierDeclStatement	ut16 indexing = ( inst >> 24 ) & 0x01 ;	376:1:12751:12787	467783	6	True				
ANR	467853	IdentifierDecl	indexing = ( inst >> 24 ) & 0x01		467783	0					
ANR	467854	IdentifierDeclType	ut16		467783	0					
ANR	467855	Identifier	indexing		467783	1					
ANR	467856	AssignmentExpression	indexing = ( inst >> 24 ) & 0x01		467783	2		=			
ANR	467857	Identifier	indexing		467783	0					
ANR	467858	BitAndExpression	( inst >> 24 ) & 0x01		467783	1		&			
ANR	467859	ShiftExpression	inst >> 24		467783	0		>>			
ANR	467860	Identifier	inst		467783	0					
ANR	467861	PrimaryExpression	24		467783	1					
ANR	467862	PrimaryExpression	0x01		467783	1					
ANR	467863	IdentifierDeclStatement	short offset = ( inst & 0xff ) << 2 ;	377:1:12790:12826	467783	7	True				
ANR	467864	IdentifierDecl	offset = ( inst & 0xff ) << 2		467783	0					
ANR	467865	IdentifierDeclType	short		467783	0					
ANR	467866	Identifier	offset		467783	1					
ANR	467867	AssignmentExpression	offset = ( inst & 0xff ) << 2		467783	2		=			
ANR	467868	Identifier	offset		467783	0					
ANR	467869	ShiftExpression	( inst & 0xff ) << 2		467783	1		<<			
ANR	467870	BitAndExpression	inst & 0xff		467783	0		&			
ANR	467871	Identifier	inst		467783	0					
ANR	467872	PrimaryExpression	0xff		467783	1					
ANR	467873	PrimaryExpression	2		467783	1					
ANR	467874	IfStatement	if ( ! direction )		467783	8					
ANR	467875	Condition	! direction	379:5:12834:12843	467783	0	True				
ANR	467876	UnaryOperationExpression	! direction		467783	0					
ANR	467877	UnaryOperator	!		467783	0					
ANR	467878	Identifier	direction		467783	1					
ANR	467879	CompoundStatement		11:17:325:325	467783	1					
ANR	467880	ExpressionStatement	offset *= - 1	380:2:12850:12862	467783	0	True				
ANR	467881	AssignmentExpression	offset *= - 1		467783	0		*=			
ANR	467882	Identifier	offset		467783	0					
ANR	467883	UnaryOperationExpression	- 1		467783	1					
ANR	467884	UnaryOperator	-		467783	0					
ANR	467885	PrimaryExpression	1		467783	1					
ANR	467886	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s"" , load ? ""ldc"" : ""stc"" , translen ? ""l"" : """" , get_cond ( inst ) )"	383:1:12869:12990	467783	9	True				
ANR	467887	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s"" , load ? ""ldc"" : ""stc"" , translen ? ""l"" : """" , get_cond ( inst ) )"		467783	0		=			
ANR	467888	PtrMemberAccess	arminsn -> str_asm		467783	0					
ANR	467889	Identifier	arminsn		467783	0					
ANR	467890	Identifier	str_asm		467783	1					
ANR	467891	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s%s"" , load ? ""ldc"" : ""stc"" , translen ? ""l"" : """" , get_cond ( inst ) )"		467783	1					
ANR	467892	Callee	r_str_appendf		467783	0					
ANR	467893	Identifier	r_str_appendf		467783	0					
ANR	467894	ArgumentList	arminsn -> str_asm		467783	1					
ANR	467895	Argument	arminsn -> str_asm		467783	0					
ANR	467896	PtrMemberAccess	arminsn -> str_asm		467783	0					
ANR	467897	Identifier	arminsn		467783	0					
ANR	467898	Identifier	str_asm		467783	1					
ANR	467899	Argument	"""%s%s%s"""		467783	1					
ANR	467900	PrimaryExpression	"""%s%s%s"""		467783	0					
ANR	467901	Argument	"load ? ""ldc"" : ""stc"""		467783	2					
ANR	467902	ConditionalExpression	"load ? ""ldc"" : ""stc"""		467783	0					
ANR	467903	Condition	load		467783	0					
ANR	467904	Identifier	load		467783	0					
ANR	467905	PrimaryExpression	"""ldc"""		467783	1					
ANR	467906	PrimaryExpression	"""stc"""		467783	2					
ANR	467907	Argument	"translen ? ""l"" : """""		467783	3					
ANR	467908	ConditionalExpression	"translen ? ""l"" : """""		467783	0					
ANR	467909	Condition	translen		467783	0					
ANR	467910	Identifier	translen		467783	0					
ANR	467911	PrimaryExpression	"""l"""		467783	1					
ANR	467912	PrimaryExpression	""""""		467783	2					
ANR	467913	Argument	get_cond ( inst )		467783	4					
ANR	467914	CallExpression	get_cond ( inst )		467783	0					
ANR	467915	Callee	get_cond		467783	0					
ANR	467916	Identifier	get_cond		467783	0					
ANR	467917	ArgumentList	inst		467783	1					
ANR	467918	Argument	inst		467783	0					
ANR	467919	Identifier	inst		467783	0					
ANR	467920	IfStatement	if ( indexing )		467783	10					
ANR	467921	Condition	indexing	384:5:12997:13004	467783	0	True				
ANR	467922	Identifier	indexing		467783	0					
ANR	467923	CompoundStatement		16:15:486:486	467783	1					
ANR	467924	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %u, cr%u, [%s, #%d]%s"" , CPnum , CRd , tbl_regs [ get_nibble ( inst , 4 ) ] , offset , writeback ? ""!"" : """" )"	385:2:13011:13165	467783	0	True				
ANR	467925	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %u, cr%u, [%s, #%d]%s"" , CPnum , CRd , tbl_regs [ get_nibble ( inst , 4 ) ] , offset , writeback ? ""!"" : """" )"		467783	0		=			
ANR	467926	PtrMemberAccess	arminsn -> str_asm		467783	0					
ANR	467927	Identifier	arminsn		467783	0					
ANR	467928	Identifier	str_asm		467783	1					
ANR	467929	CallExpression	"r_str_appendf ( arminsn -> str_asm , "" %u, cr%u, [%s, #%d]%s"" , CPnum , CRd , tbl_regs [ get_nibble ( inst , 4 ) ] , offset , writeback ? ""!"" : """" )"		467783	1					
ANR	467930	Callee	r_str_appendf		467783	0					
ANR	467931	Identifier	r_str_appendf		467783	0					
ANR	467932	ArgumentList	arminsn -> str_asm		467783	1					
ANR	467933	Argument	arminsn -> str_asm		467783	0					
ANR	467934	PtrMemberAccess	arminsn -> str_asm		467783	0					
ANR	467935	Identifier	arminsn		467783	0					
ANR	467936	Identifier	str_asm		467783	1					
ANR	467937	Argument	""" %u, cr%u, [%s, #%d]%s"""		467783	1					
ANR	467938	PrimaryExpression	""" %u, cr%u, [%s, #%d]%s"""		467783	0					
ANR	467939	Argument	CPnum		467783	2					
ANR	467940	Identifier	CPnum		467783	0					
ANR	467941	Argument	CRd		467783	3					
ANR	467942	Identifier	CRd		467783	0					
ANR	467943	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		467783	4					
ANR	467944	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		467783	0					
ANR	467945	Identifier	tbl_regs		467783	0					
ANR	467946	CallExpression	"get_nibble ( inst , 4 )"		467783	1					
ANR	467947	Callee	get_nibble		467783	0					
ANR	467948	Identifier	get_nibble		467783	0					
ANR	467949	ArgumentList	inst		467783	1					
ANR	467950	Argument	inst		467783	0					
ANR	467951	Identifier	inst		467783	0					
ANR	467952	Argument	4		467783	1					
ANR	467953	PrimaryExpression	4		467783	0					
ANR	467954	Argument	offset		467783	5					
ANR	467955	Identifier	offset		467783	0					
ANR	467956	Argument	"writeback ? ""!"" : """""		467783	6					
ANR	467957	ConditionalExpression	"writeback ? ""!"" : """""		467783	0					
ANR	467958	Condition	writeback		467783	0					
ANR	467959	Identifier	writeback		467783	0					
ANR	467960	PrimaryExpression	"""!"""		467783	1					
ANR	467961	PrimaryExpression	""""""		467783	2					
ANR	467962	ElseStatement	else		467783	0					
ANR	467963	CompoundStatement		19:8:654:654	467783	0					
ANR	467964	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %u, cr%u, [%s], #%d"" , CPnum , CRd , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"	388:2:13179:13309	467783	0	True				
ANR	467965	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %u, cr%u, [%s], #%d"" , CPnum , CRd , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		467783	0		=			
ANR	467966	PtrMemberAccess	arminsn -> str_asm		467783	0					
ANR	467967	Identifier	arminsn		467783	0					
ANR	467968	Identifier	str_asm		467783	1					
ANR	467969	CallExpression	"r_str_appendf ( arminsn -> str_asm , "" %u, cr%u, [%s], #%d"" , CPnum , CRd , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		467783	1					
ANR	467970	Callee	r_str_appendf		467783	0					
ANR	467971	Identifier	r_str_appendf		467783	0					
ANR	467972	ArgumentList	arminsn -> str_asm		467783	1					
ANR	467973	Argument	arminsn -> str_asm		467783	0					
ANR	467974	PtrMemberAccess	arminsn -> str_asm		467783	0					
ANR	467975	Identifier	arminsn		467783	0					
ANR	467976	Identifier	str_asm		467783	1					
ANR	467977	Argument	""" %u, cr%u, [%s], #%d"""		467783	1					
ANR	467978	PrimaryExpression	""" %u, cr%u, [%s], #%d"""		467783	0					
ANR	467979	Argument	CPnum		467783	2					
ANR	467980	Identifier	CPnum		467783	0					
ANR	467981	Argument	CRd		467783	3					
ANR	467982	Identifier	CRd		467783	0					
ANR	467983	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		467783	4					
ANR	467984	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		467783	0					
ANR	467985	Identifier	tbl_regs		467783	0					
ANR	467986	CallExpression	"get_nibble ( inst , 4 )"		467783	1					
ANR	467987	Callee	get_nibble		467783	0					
ANR	467988	Identifier	get_nibble		467783	0					
ANR	467989	ArgumentList	inst		467783	1					
ANR	467990	Argument	inst		467783	0					
ANR	467991	Identifier	inst		467783	0					
ANR	467992	Argument	4		467783	1					
ANR	467993	PrimaryExpression	4		467783	0					
ANR	467994	Argument	offset		467783	5					
ANR	467995	Identifier	offset		467783	0					
ANR	467996	ReturnStatement	return 0 ;	391:1:13315:13323	467783	11	True				
ANR	467997	PrimaryExpression	0		467783	0					
ANR	467998	ReturnType	static ut32		467783	1					
ANR	467999	Identifier	arm_disasm_coprocdatatrans		467783	2					
ANR	468000	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		467783	3					
ANR	468001	Parameter	struct winedbg_arm_insn * arminsn	369:39:12475:12506	467783	0	True				
ANR	468002	ParameterType	struct winedbg_arm_insn *		467783	0					
ANR	468003	Identifier	arminsn		467783	1					
ANR	468004	Parameter	ut32 inst	369:73:12509:12517	467783	1	True				
ANR	468005	ParameterType	ut32		467783	0					
ANR	468006	Identifier	inst		467783	1					
ANR	468007	CFGEntryNode	ENTRY		467783		True				
ANR	468008	CFGExitNode	EXIT		467783		True				
ANR	468009	Symbol	get_cond		467783						
ANR	468010	Symbol	indexing		467783						
ANR	468011	Symbol	offset		467783						
ANR	468012	Symbol	tbl_regs		467783						
ANR	468013	Symbol	arminsn		467783						
ANR	468014	Symbol	arminsn -> str_asm		467783						
ANR	468015	Symbol	CPnum		467783						
ANR	468016	Symbol	* arminsn		467783						
ANR	468017	Symbol	get_nibble		467783						
ANR	468018	Symbol	CRd		467783						
ANR	468019	Symbol	load		467783						
ANR	468020	Symbol	writeback		467783						
ANR	468021	Symbol	translen		467783						
ANR	468022	Symbol	* tbl_regs		467783						
ANR	468023	Symbol	inst		467783						
ANR	468024	Symbol	r_str_appendf		467783						
ANR	468025	Symbol	* get_nibble		467783						
ANR	468026	Symbol	direction		467783						
ANR	468027	Function	thumb_disasm_hireg	394:0:13328:13991							
ANR	468028	FunctionDef	"thumb_disasm_hireg (struct winedbg_arm_insn * arminsn , ut16 inst)"		468027	0					
ANR	468029	CompoundStatement		394:76:13404:13991	468027	0					
ANR	468030	IdentifierDeclStatement	short dst = inst & 0x07 ;	395:1:13407:13430	468027	0	True				
ANR	468031	IdentifierDecl	dst = inst & 0x07		468027	0					
ANR	468032	IdentifierDeclType	short		468027	0					
ANR	468033	Identifier	dst		468027	1					
ANR	468034	AssignmentExpression	dst = inst & 0x07		468027	2		=			
ANR	468035	Identifier	dst		468027	0					
ANR	468036	BitAndExpression	inst & 0x07		468027	1		&			
ANR	468037	Identifier	inst		468027	0					
ANR	468038	PrimaryExpression	0x07		468027	1					
ANR	468039	IdentifierDeclStatement	short src = ( inst >> 3 ) & 0x07 ;	396:1:13433:13463	468027	1	True				
ANR	468040	IdentifierDecl	src = ( inst >> 3 ) & 0x07		468027	0					
ANR	468041	IdentifierDeclType	short		468027	0					
ANR	468042	Identifier	src		468027	1					
ANR	468043	AssignmentExpression	src = ( inst >> 3 ) & 0x07		468027	2		=			
ANR	468044	Identifier	src		468027	0					
ANR	468045	BitAndExpression	( inst >> 3 ) & 0x07		468027	1		&			
ANR	468046	ShiftExpression	inst >> 3		468027	0		>>			
ANR	468047	Identifier	inst		468027	0					
ANR	468048	PrimaryExpression	3		468027	1					
ANR	468049	PrimaryExpression	0x07		468027	1					
ANR	468050	IdentifierDeclStatement	short h2 = ( inst >> 6 ) & 0x01 ;	397:1:13466:13496	468027	2	True				
ANR	468051	IdentifierDecl	h2 = ( inst >> 6 ) & 0x01		468027	0					
ANR	468052	IdentifierDeclType	short		468027	0					
ANR	468053	Identifier	h2		468027	1					
ANR	468054	AssignmentExpression	h2 = ( inst >> 6 ) & 0x01		468027	2		=			
ANR	468055	Identifier	h2		468027	0					
ANR	468056	BitAndExpression	( inst >> 6 ) & 0x01		468027	1		&			
ANR	468057	ShiftExpression	inst >> 6		468027	0		>>			
ANR	468058	Identifier	inst		468027	0					
ANR	468059	PrimaryExpression	6		468027	1					
ANR	468060	PrimaryExpression	0x01		468027	1					
ANR	468061	IdentifierDeclStatement	short h1 = ( inst >> 7 ) & 0x01 ;	398:1:13499:13529	468027	3	True				
ANR	468062	IdentifierDecl	h1 = ( inst >> 7 ) & 0x01		468027	0					
ANR	468063	IdentifierDeclType	short		468027	0					
ANR	468064	Identifier	h1		468027	1					
ANR	468065	AssignmentExpression	h1 = ( inst >> 7 ) & 0x01		468027	2		=			
ANR	468066	Identifier	h1		468027	0					
ANR	468067	BitAndExpression	( inst >> 7 ) & 0x01		468027	1		&			
ANR	468068	ShiftExpression	inst >> 7		468027	0		>>			
ANR	468069	Identifier	inst		468027	0					
ANR	468070	PrimaryExpression	7		468027	1					
ANR	468071	PrimaryExpression	0x01		468027	1					
ANR	468072	IdentifierDeclStatement	short op = ( inst >> 8 ) & 0x03 ;	399:1:13532:13562	468027	4	True				
ANR	468073	IdentifierDecl	op = ( inst >> 8 ) & 0x03		468027	0					
ANR	468074	IdentifierDeclType	short		468027	0					
ANR	468075	Identifier	op		468027	1					
ANR	468076	AssignmentExpression	op = ( inst >> 8 ) & 0x03		468027	2		=			
ANR	468077	Identifier	op		468027	0					
ANR	468078	BitAndExpression	( inst >> 8 ) & 0x03		468027	1		&			
ANR	468079	ShiftExpression	inst >> 8		468027	0		>>			
ANR	468080	Identifier	inst		468027	0					
ANR	468081	PrimaryExpression	8		468027	1					
ANR	468082	PrimaryExpression	0x03		468027	1					
ANR	468083	IfStatement	if ( h1 )		468027	5					
ANR	468084	Condition	h1	401:5:13570:13571	468027	0	True				
ANR	468085	Identifier	h1		468027	0					
ANR	468086	CompoundStatement		8:9:169:169	468027	1					
ANR	468087	ExpressionStatement	dst += 8	402:2:13578:13586	468027	0	True				
ANR	468088	AssignmentExpression	dst += 8		468027	0		+=			
ANR	468089	Identifier	dst		468027	0					
ANR	468090	PrimaryExpression	8		468027	1					
ANR	468091	IfStatement	if ( h2 )		468027	6					
ANR	468092	Condition	h2	404:5:13596:13597	468027	0	True				
ANR	468093	Identifier	h2		468027	0					
ANR	468094	CompoundStatement		11:9:195:195	468027	1					
ANR	468095	ExpressionStatement	src += 8	405:2:13604:13612	468027	0	True				
ANR	468096	AssignmentExpression	src += 8		468027	0		+=			
ANR	468097	Identifier	src		468027	0					
ANR	468098	PrimaryExpression	8		468027	1					
ANR	468099	IfStatement	if ( op == 2 && dst == src )		468027	7					
ANR	468100	Condition	op == 2 && dst == src	408:5:13623:13643	468027	0	True				
ANR	468101	AndExpression	op == 2 && dst == src		468027	0		&&			
ANR	468102	EqualityExpression	op == 2		468027	0		==			
ANR	468103	Identifier	op		468027	0					
ANR	468104	PrimaryExpression	2		468027	1					
ANR	468105	EqualityExpression	dst == src		468027	1		==			
ANR	468106	Identifier	dst		468027	0					
ANR	468107	Identifier	src		468027	1					
ANR	468108	CompoundStatement		15:28:241:241	468027	1					
ANR	468109	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""nop"" )"	409:2:13667:13725	468027	0	True				
ANR	468110	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""nop"" )"		468027	0		=			
ANR	468111	PtrMemberAccess	arminsn -> str_asm		468027	0					
ANR	468112	Identifier	arminsn		468027	0					
ANR	468113	Identifier	str_asm		468027	1					
ANR	468114	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""nop"" )"		468027	1					
ANR	468115	Callee	r_str_appendf		468027	0					
ANR	468116	Identifier	r_str_appendf		468027	0					
ANR	468117	ArgumentList	arminsn -> str_asm		468027	1					
ANR	468118	Argument	arminsn -> str_asm		468027	0					
ANR	468119	PtrMemberAccess	arminsn -> str_asm		468027	0					
ANR	468120	Identifier	arminsn		468027	0					
ANR	468121	Identifier	str_asm		468027	1					
ANR	468122	Argument	"""nop"""		468027	1					
ANR	468123	PrimaryExpression	"""nop"""		468027	0					
ANR	468124	ReturnStatement	return 0 ;	410:2:13729:13737	468027	1	True				
ANR	468125	PrimaryExpression	0		468027	0					
ANR	468126	IfStatement	if ( op == 3 )		468027	8					
ANR	468127	Condition	op == 3	413:5:13748:13754	468027	0	True				
ANR	468128	EqualityExpression	op == 3		468027	0		==			
ANR	468129	Identifier	op		468027	0					
ANR	468130	PrimaryExpression	3		468027	1					
ANR	468131	CompoundStatement		20:14:352:352	468027	1					
ANR	468132	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""b%sx %s"" , h1 ? ""l"" : """" , tbl_regs [ src ] )"	414:2:13761:13849	468027	0	True				
ANR	468133	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""b%sx %s"" , h1 ? ""l"" : """" , tbl_regs [ src ] )"		468027	0		=			
ANR	468134	PtrMemberAccess	arminsn -> str_asm		468027	0					
ANR	468135	Identifier	arminsn		468027	0					
ANR	468136	Identifier	str_asm		468027	1					
ANR	468137	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""b%sx %s"" , h1 ? ""l"" : """" , tbl_regs [ src ] )"		468027	1					
ANR	468138	Callee	r_str_appendf		468027	0					
ANR	468139	Identifier	r_str_appendf		468027	0					
ANR	468140	ArgumentList	arminsn -> str_asm		468027	1					
ANR	468141	Argument	arminsn -> str_asm		468027	0					
ANR	468142	PtrMemberAccess	arminsn -> str_asm		468027	0					
ANR	468143	Identifier	arminsn		468027	0					
ANR	468144	Identifier	str_asm		468027	1					
ANR	468145	Argument	"""b%sx %s"""		468027	1					
ANR	468146	PrimaryExpression	"""b%sx %s"""		468027	0					
ANR	468147	Argument	"h1 ? ""l"" : """""		468027	2					
ANR	468148	ConditionalExpression	"h1 ? ""l"" : """""		468027	0					
ANR	468149	Condition	h1		468027	0					
ANR	468150	Identifier	h1		468027	0					
ANR	468151	PrimaryExpression	"""l"""		468027	1					
ANR	468152	PrimaryExpression	""""""		468027	2					
ANR	468153	Argument	tbl_regs [ src ]		468027	3					
ANR	468154	ArrayIndexing	tbl_regs [ src ]		468027	0					
ANR	468155	Identifier	tbl_regs		468027	0					
ANR	468156	Identifier	src		468027	1					
ANR	468157	ElseStatement	else		468027	0					
ANR	468158	CompoundStatement		23:6:455:455	468027	0					
ANR	468159	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s"" , tbl_hiops_t [ op ] , tbl_regs [ dst ] , tbl_regs [ src ] )"	417:2:13864:13975	468027	0	True				
ANR	468160	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s"" , tbl_hiops_t [ op ] , tbl_regs [ dst ] , tbl_regs [ src ] )"		468027	0		=			
ANR	468161	PtrMemberAccess	arminsn -> str_asm		468027	0					
ANR	468162	Identifier	arminsn		468027	0					
ANR	468163	Identifier	str_asm		468027	1					
ANR	468164	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, %s"" , tbl_hiops_t [ op ] , tbl_regs [ dst ] , tbl_regs [ src ] )"		468027	1					
ANR	468165	Callee	r_str_appendf		468027	0					
ANR	468166	Identifier	r_str_appendf		468027	0					
ANR	468167	ArgumentList	arminsn -> str_asm		468027	1					
ANR	468168	Argument	arminsn -> str_asm		468027	0					
ANR	468169	PtrMemberAccess	arminsn -> str_asm		468027	0					
ANR	468170	Identifier	arminsn		468027	0					
ANR	468171	Identifier	str_asm		468027	1					
ANR	468172	Argument	"""%s %s, %s"""		468027	1					
ANR	468173	PrimaryExpression	"""%s %s, %s"""		468027	0					
ANR	468174	Argument	tbl_hiops_t [ op ]		468027	2					
ANR	468175	ArrayIndexing	tbl_hiops_t [ op ]		468027	0					
ANR	468176	Identifier	tbl_hiops_t		468027	0					
ANR	468177	Identifier	op		468027	1					
ANR	468178	Argument	tbl_regs [ dst ]		468027	3					
ANR	468179	ArrayIndexing	tbl_regs [ dst ]		468027	0					
ANR	468180	Identifier	tbl_regs		468027	0					
ANR	468181	Identifier	dst		468027	1					
ANR	468182	Argument	tbl_regs [ src ]		468027	4					
ANR	468183	ArrayIndexing	tbl_regs [ src ]		468027	0					
ANR	468184	Identifier	tbl_regs		468027	0					
ANR	468185	Identifier	src		468027	1					
ANR	468186	ReturnStatement	return 0 ;	419:1:13981:13989	468027	9	True				
ANR	468187	PrimaryExpression	0		468027	0					
ANR	468188	ReturnType	static ut16		468027	1					
ANR	468189	Identifier	thumb_disasm_hireg		468027	2					
ANR	468190	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		468027	3					
ANR	468191	Parameter	struct winedbg_arm_insn * arminsn	394:31:13359:13390	468027	0	True				
ANR	468192	ParameterType	struct winedbg_arm_insn *		468027	0					
ANR	468193	Identifier	arminsn		468027	1					
ANR	468194	Parameter	ut16 inst	394:65:13393:13401	468027	1	True				
ANR	468195	ParameterType	ut16		468027	0					
ANR	468196	Identifier	inst		468027	1					
ANR	468197	CFGEntryNode	ENTRY		468027		True				
ANR	468198	CFGExitNode	EXIT		468027		True				
ANR	468199	Symbol	op		468027						
ANR	468200	Symbol	dst		468027						
ANR	468201	Symbol	* op		468027						
ANR	468202	Symbol	src		468027						
ANR	468203	Symbol	tbl_regs		468027						
ANR	468204	Symbol	h1		468027						
ANR	468205	Symbol	* tbl_hiops_t		468027						
ANR	468206	Symbol	arminsn		468027						
ANR	468207	Symbol	h2		468027						
ANR	468208	Symbol	arminsn -> str_asm		468027						
ANR	468209	Symbol	* src		468027						
ANR	468210	Symbol	* arminsn		468027						
ANR	468211	Symbol	* dst		468027						
ANR	468212	Symbol	* tbl_regs		468027						
ANR	468213	Symbol	inst		468027						
ANR	468214	Symbol	r_str_appendf		468027						
ANR	468215	Symbol	tbl_hiops_t		468027						
ANR	468216	Function	thumb_disasm_aluop	422:0:13994:14291							
ANR	468217	FunctionDef	"thumb_disasm_aluop (struct winedbg_arm_insn * arminsn , ut16 inst)"		468216	0					
ANR	468218	CompoundStatement		422:76:14070:14291	468216	0					
ANR	468219	IdentifierDeclStatement	short dst = inst & 0x07 ;	423:1:14073:14096	468216	0	True				
ANR	468220	IdentifierDecl	dst = inst & 0x07		468216	0					
ANR	468221	IdentifierDeclType	short		468216	0					
ANR	468222	Identifier	dst		468216	1					
ANR	468223	AssignmentExpression	dst = inst & 0x07		468216	2		=			
ANR	468224	Identifier	dst		468216	0					
ANR	468225	BitAndExpression	inst & 0x07		468216	1		&			
ANR	468226	Identifier	inst		468216	0					
ANR	468227	PrimaryExpression	0x07		468216	1					
ANR	468228	IdentifierDeclStatement	short src = ( inst >> 3 ) & 0x07 ;	424:1:14099:14129	468216	1	True				
ANR	468229	IdentifierDecl	src = ( inst >> 3 ) & 0x07		468216	0					
ANR	468230	IdentifierDeclType	short		468216	0					
ANR	468231	Identifier	src		468216	1					
ANR	468232	AssignmentExpression	src = ( inst >> 3 ) & 0x07		468216	2		=			
ANR	468233	Identifier	src		468216	0					
ANR	468234	BitAndExpression	( inst >> 3 ) & 0x07		468216	1		&			
ANR	468235	ShiftExpression	inst >> 3		468216	0		>>			
ANR	468236	Identifier	inst		468216	0					
ANR	468237	PrimaryExpression	3		468216	1					
ANR	468238	PrimaryExpression	0x07		468216	1					
ANR	468239	IdentifierDeclStatement	short op = ( inst >> 6 ) & 0x0f ;	425:1:14132:14162	468216	2	True				
ANR	468240	IdentifierDecl	op = ( inst >> 6 ) & 0x0f		468216	0					
ANR	468241	IdentifierDeclType	short		468216	0					
ANR	468242	Identifier	op		468216	1					
ANR	468243	AssignmentExpression	op = ( inst >> 6 ) & 0x0f		468216	2		=			
ANR	468244	Identifier	op		468216	0					
ANR	468245	BitAndExpression	( inst >> 6 ) & 0x0f		468216	1		&			
ANR	468246	ShiftExpression	inst >> 6		468216	0		>>			
ANR	468247	Identifier	inst		468216	0					
ANR	468248	PrimaryExpression	6		468216	1					
ANR	468249	PrimaryExpression	0x0f		468216	1					
ANR	468250	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s"" , tbl_aluops_t [ op ] , tbl_regs [ dst ] , tbl_regs [ src ] )"	427:1:14166:14278	468216	3	True				
ANR	468251	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s"" , tbl_aluops_t [ op ] , tbl_regs [ dst ] , tbl_regs [ src ] )"		468216	0		=			
ANR	468252	PtrMemberAccess	arminsn -> str_asm		468216	0					
ANR	468253	Identifier	arminsn		468216	0					
ANR	468254	Identifier	str_asm		468216	1					
ANR	468255	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, %s"" , tbl_aluops_t [ op ] , tbl_regs [ dst ] , tbl_regs [ src ] )"		468216	1					
ANR	468256	Callee	r_str_appendf		468216	0					
ANR	468257	Identifier	r_str_appendf		468216	0					
ANR	468258	ArgumentList	arminsn -> str_asm		468216	1					
ANR	468259	Argument	arminsn -> str_asm		468216	0					
ANR	468260	PtrMemberAccess	arminsn -> str_asm		468216	0					
ANR	468261	Identifier	arminsn		468216	0					
ANR	468262	Identifier	str_asm		468216	1					
ANR	468263	Argument	"""%s %s, %s"""		468216	1					
ANR	468264	PrimaryExpression	"""%s %s, %s"""		468216	0					
ANR	468265	Argument	tbl_aluops_t [ op ]		468216	2					
ANR	468266	ArrayIndexing	tbl_aluops_t [ op ]		468216	0					
ANR	468267	Identifier	tbl_aluops_t		468216	0					
ANR	468268	Identifier	op		468216	1					
ANR	468269	Argument	tbl_regs [ dst ]		468216	3					
ANR	468270	ArrayIndexing	tbl_regs [ dst ]		468216	0					
ANR	468271	Identifier	tbl_regs		468216	0					
ANR	468272	Identifier	dst		468216	1					
ANR	468273	Argument	tbl_regs [ src ]		468216	4					
ANR	468274	ArrayIndexing	tbl_regs [ src ]		468216	0					
ANR	468275	Identifier	tbl_regs		468216	0					
ANR	468276	Identifier	src		468216	1					
ANR	468277	ReturnStatement	return 0 ;	428:1:14281:14289	468216	4	True				
ANR	468278	PrimaryExpression	0		468216	0					
ANR	468279	ReturnType	static ut16		468216	1					
ANR	468280	Identifier	thumb_disasm_aluop		468216	2					
ANR	468281	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		468216	3					
ANR	468282	Parameter	struct winedbg_arm_insn * arminsn	422:31:14025:14056	468216	0	True				
ANR	468283	ParameterType	struct winedbg_arm_insn *		468216	0					
ANR	468284	Identifier	arminsn		468216	1					
ANR	468285	Parameter	ut16 inst	422:65:14059:14067	468216	1	True				
ANR	468286	ParameterType	ut16		468216	0					
ANR	468287	Identifier	inst		468216	1					
ANR	468288	CFGEntryNode	ENTRY		468216		True				
ANR	468289	CFGExitNode	EXIT		468216		True				
ANR	468290	Symbol	op		468216						
ANR	468291	Symbol	dst		468216						
ANR	468292	Symbol	* op		468216						
ANR	468293	Symbol	src		468216						
ANR	468294	Symbol	tbl_regs		468216						
ANR	468295	Symbol	tbl_aluops_t		468216						
ANR	468296	Symbol	arminsn		468216						
ANR	468297	Symbol	arminsn -> str_asm		468216						
ANR	468298	Symbol	* src		468216						
ANR	468299	Symbol	* tbl_aluops_t		468216						
ANR	468300	Symbol	* dst		468216						
ANR	468301	Symbol	* arminsn		468216						
ANR	468302	Symbol	* tbl_regs		468216						
ANR	468303	Symbol	inst		468216						
ANR	468304	Symbol	r_str_appendf		468216						
ANR	468305	Function	thumb_disasm_pushpop	431:0:14294:15062							
ANR	468306	FunctionDef	"thumb_disasm_pushpop (struct winedbg_arm_insn * arminsn , ut16 inst)"		468305	0					
ANR	468307	CompoundStatement		431:78:14372:15062	468305	0					
ANR	468308	IdentifierDeclStatement	short lrpc = ( inst >> 8 ) & 0x01 ;	432:1:14375:14407	468305	0	True				
ANR	468309	IdentifierDecl	lrpc = ( inst >> 8 ) & 0x01		468305	0					
ANR	468310	IdentifierDeclType	short		468305	0					
ANR	468311	Identifier	lrpc		468305	1					
ANR	468312	AssignmentExpression	lrpc = ( inst >> 8 ) & 0x01		468305	2		=			
ANR	468313	Identifier	lrpc		468305	0					
ANR	468314	BitAndExpression	( inst >> 8 ) & 0x01		468305	1		&			
ANR	468315	ShiftExpression	inst >> 8		468305	0		>>			
ANR	468316	Identifier	inst		468305	0					
ANR	468317	PrimaryExpression	8		468305	1					
ANR	468318	PrimaryExpression	0x01		468305	1					
ANR	468319	IdentifierDeclStatement	short load = ( inst >> 11 ) & 0x01 ;	433:1:14410:14442	468305	1	True				
ANR	468320	IdentifierDecl	load = ( inst >> 11 ) & 0x01		468305	0					
ANR	468321	IdentifierDeclType	short		468305	0					
ANR	468322	Identifier	load		468305	1					
ANR	468323	AssignmentExpression	load = ( inst >> 11 ) & 0x01		468305	2		=			
ANR	468324	Identifier	load		468305	0					
ANR	468325	BitAndExpression	( inst >> 11 ) & 0x01		468305	1		&			
ANR	468326	ShiftExpression	inst >> 11		468305	0		>>			
ANR	468327	Identifier	inst		468305	0					
ANR	468328	PrimaryExpression	11		468305	1					
ANR	468329	PrimaryExpression	0x01		468305	1					
ANR	468330	IdentifierDeclStatement	short i ;	434:1:14445:14452	468305	2	True				
ANR	468331	IdentifierDecl	i		468305	0					
ANR	468332	IdentifierDeclType	short		468305	0					
ANR	468333	Identifier	i		468305	1					
ANR	468334	IdentifierDeclStatement	short last ;	435:1:14455:14465	468305	3	True				
ANR	468335	IdentifierDecl	last		468305	0					
ANR	468336	IdentifierDeclType	short		468305	0					
ANR	468337	Identifier	last		468305	1					
ANR	468338	ForStatement	for ( i = 7 ; i >= 0 ; i -- )		468305	4					
ANR	468339	ForInit	i = 7 ;	437:6:14474:14477	468305	0	True				
ANR	468340	AssignmentExpression	i = 7		468305	0		=			
ANR	468341	Identifier	i		468305	0					
ANR	468342	PrimaryExpression	7		468305	1					
ANR	468343	Condition	i >= 0	437:10:14478:14481	468305	1	True				
ANR	468344	RelationalExpression	i >= 0		468305	0		>=			
ANR	468345	Identifier	i		468305	0					
ANR	468346	PrimaryExpression	0		468305	1					
ANR	468347	PostIncDecOperationExpression	i --	437:15:14483:14485	468305	2	True				
ANR	468348	Identifier	i		468305	0					
ANR	468349	IncDec	--		468305	1					
ANR	468350	CompoundStatement		7:20:115:115	468305	3					
ANR	468351	IfStatement	if ( ( inst >> i ) & 1 )		468305	0					
ANR	468352	Condition	( inst >> i ) & 1	438:6:14496:14508	468305	0	True				
ANR	468353	BitAndExpression	( inst >> i ) & 1		468305	0		&			
ANR	468354	ShiftExpression	inst >> i		468305	0		>>			
ANR	468355	Identifier	inst		468305	0					
ANR	468356	Identifier	i		468305	1					
ANR	468357	PrimaryExpression	1		468305	1					
ANR	468358	CompoundStatement		8:21:138:138	468305	1					
ANR	468359	BreakStatement	break ;	439:3:14516:14521	468305	0	True				
ANR	468360	ExpressionStatement	last = i	442:1:14531:14539	468305	5	True				
ANR	468361	AssignmentExpression	last = i		468305	0		=			
ANR	468362	Identifier	last		468305	0					
ANR	468363	Identifier	i		468305	1					
ANR	468364	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s {"" , load ? ""pop"" : ""push"" )"	444:1:14543:14625	468305	6	True				
ANR	468365	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s {"" , load ? ""pop"" : ""push"" )"		468305	0		=			
ANR	468366	PtrMemberAccess	arminsn -> str_asm		468305	0					
ANR	468367	Identifier	arminsn		468305	0					
ANR	468368	Identifier	str_asm		468305	1					
ANR	468369	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s {"" , load ? ""pop"" : ""push"" )"		468305	1					
ANR	468370	Callee	r_str_appendf		468305	0					
ANR	468371	Identifier	r_str_appendf		468305	0					
ANR	468372	ArgumentList	arminsn -> str_asm		468305	1					
ANR	468373	Argument	arminsn -> str_asm		468305	0					
ANR	468374	PtrMemberAccess	arminsn -> str_asm		468305	0					
ANR	468375	Identifier	arminsn		468305	0					
ANR	468376	Identifier	str_asm		468305	1					
ANR	468377	Argument	"""%s {"""		468305	1					
ANR	468378	PrimaryExpression	"""%s {"""		468305	0					
ANR	468379	Argument	"load ? ""pop"" : ""push"""		468305	2					
ANR	468380	ConditionalExpression	"load ? ""pop"" : ""push"""		468305	0					
ANR	468381	Condition	load		468305	0					
ANR	468382	Identifier	load		468305	0					
ANR	468383	PrimaryExpression	"""pop"""		468305	1					
ANR	468384	PrimaryExpression	"""push"""		468305	2					
ANR	468385	ForStatement	for ( i = 0 ; i <= 7 ; i ++ )		468305	7					
ANR	468386	ForInit	i = 0 ;	446:6:14634:14637	468305	0	True				
ANR	468387	AssignmentExpression	i = 0		468305	0		=			
ANR	468388	Identifier	i		468305	0					
ANR	468389	PrimaryExpression	0		468305	1					
ANR	468390	Condition	i <= 7	446:10:14638:14641	468305	1	True				
ANR	468391	RelationalExpression	i <= 7		468305	0		<=			
ANR	468392	Identifier	i		468305	0					
ANR	468393	PrimaryExpression	7		468305	1					
ANR	468394	PostIncDecOperationExpression	i ++	446:15:14643:14645	468305	2	True				
ANR	468395	Identifier	i		468305	0					
ANR	468396	IncDec	++		468305	1					
ANR	468397	CompoundStatement		16:20:275:275	468305	3					
ANR	468398	IfStatement	if ( ( inst >> i ) & 1 )		468305	0					
ANR	468399	Condition	( inst >> i ) & 1	447:6:14656:14668	468305	0	True				
ANR	468400	BitAndExpression	( inst >> i ) & 1		468305	0		&			
ANR	468401	ShiftExpression	inst >> i		468305	0		>>			
ANR	468402	Identifier	inst		468305	0					
ANR	468403	Identifier	i		468305	1					
ANR	468404	PrimaryExpression	1		468305	1					
ANR	468405	CompoundStatement		17:21:298:298	468305	1					
ANR	468406	IfStatement	if ( i == last )		468305	0					
ANR	468407	Condition	i == last	448:7:14680:14688	468305	0	True				
ANR	468408	EqualityExpression	i == last		468305	0		==			
ANR	468409	Identifier	i		468305	0					
ANR	468410	Identifier	last		468305	1					
ANR	468411	CompoundStatement		18:18:318:318	468305	1					
ANR	468412	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"	449:4:14697:14767	468305	0	True				
ANR	468413	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"		468305	0		=			
ANR	468414	PtrMemberAccess	arminsn -> str_asm		468305	0					
ANR	468415	Identifier	arminsn		468305	0					
ANR	468416	Identifier	str_asm		468305	1					
ANR	468417	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"		468305	1					
ANR	468418	Callee	r_str_appendf		468305	0					
ANR	468419	Identifier	r_str_appendf		468305	0					
ANR	468420	ArgumentList	arminsn -> str_asm		468305	1					
ANR	468421	Argument	arminsn -> str_asm		468305	0					
ANR	468422	PtrMemberAccess	arminsn -> str_asm		468305	0					
ANR	468423	Identifier	arminsn		468305	0					
ANR	468424	Identifier	str_asm		468305	1					
ANR	468425	Argument	"""%s"""		468305	1					
ANR	468426	PrimaryExpression	"""%s"""		468305	0					
ANR	468427	Argument	tbl_regs [ i ]		468305	2					
ANR	468428	ArrayIndexing	tbl_regs [ i ]		468305	0					
ANR	468429	Identifier	tbl_regs		468305	0					
ANR	468430	Identifier	i		468305	1					
ANR	468431	ElseStatement	else		468305	0					
ANR	468432	CompoundStatement		21:8:409:409	468305	0					
ANR	468433	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"	452:4:14788:14860	468305	0	True				
ANR	468434	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"		468305	0		=			
ANR	468435	PtrMemberAccess	arminsn -> str_asm		468305	0					
ANR	468436	Identifier	arminsn		468305	0					
ANR	468437	Identifier	str_asm		468305	1					
ANR	468438	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"		468305	1					
ANR	468439	Callee	r_str_appendf		468305	0					
ANR	468440	Identifier	r_str_appendf		468305	0					
ANR	468441	ArgumentList	arminsn -> str_asm		468305	1					
ANR	468442	Argument	arminsn -> str_asm		468305	0					
ANR	468443	PtrMemberAccess	arminsn -> str_asm		468305	0					
ANR	468444	Identifier	arminsn		468305	0					
ANR	468445	Identifier	str_asm		468305	1					
ANR	468446	Argument	"""%s, """		468305	1					
ANR	468447	PrimaryExpression	"""%s, """		468305	0					
ANR	468448	Argument	tbl_regs [ i ]		468305	2					
ANR	468449	ArrayIndexing	tbl_regs [ i ]		468305	0					
ANR	468450	Identifier	tbl_regs		468305	0					
ANR	468451	Identifier	i		468305	1					
ANR	468452	IfStatement	if ( lrpc )		468305	8					
ANR	468453	Condition	lrpc	456:5:14879:14882	468305	0	True				
ANR	468454	Identifier	lrpc		468305	0					
ANR	468455	CompoundStatement		26:11:512:512	468305	1					
ANR	468456	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s"" , last ? "", "" : """" , load ? ""pc"" : ""lr"" )"	457:2:14889:14986	468305	0	True				
ANR	468457	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s"" , last ? "", "" : """" , load ? ""pc"" : ""lr"" )"		468305	0		=			
ANR	468458	PtrMemberAccess	arminsn -> str_asm		468305	0					
ANR	468459	Identifier	arminsn		468305	0					
ANR	468460	Identifier	str_asm		468305	1					
ANR	468461	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s"" , last ? "", "" : """" , load ? ""pc"" : ""lr"" )"		468305	1					
ANR	468462	Callee	r_str_appendf		468305	0					
ANR	468463	Identifier	r_str_appendf		468305	0					
ANR	468464	ArgumentList	arminsn -> str_asm		468305	1					
ANR	468465	Argument	arminsn -> str_asm		468305	0					
ANR	468466	PtrMemberAccess	arminsn -> str_asm		468305	0					
ANR	468467	Identifier	arminsn		468305	0					
ANR	468468	Identifier	str_asm		468305	1					
ANR	468469	Argument	"""%s%s"""		468305	1					
ANR	468470	PrimaryExpression	"""%s%s"""		468305	0					
ANR	468471	Argument	"last ? "", "" : """""		468305	2					
ANR	468472	ConditionalExpression	"last ? "", "" : """""		468305	0					
ANR	468473	Condition	last		468305	0					
ANR	468474	Identifier	last		468305	0					
ANR	468475	PrimaryExpression	""", """		468305	1					
ANR	468476	PrimaryExpression	""""""		468305	2					
ANR	468477	Argument	"load ? ""pc"" : ""lr"""		468305	3					
ANR	468478	ConditionalExpression	"load ? ""pc"" : ""lr"""		468305	0					
ANR	468479	Condition	load		468305	0					
ANR	468480	Identifier	load		468305	0					
ANR	468481	PrimaryExpression	"""pc"""		468305	1					
ANR	468482	PrimaryExpression	"""lr"""		468305	2					
ANR	468483	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""}"" )"	460:1:14993:15049	468305	9	True				
ANR	468484	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""}"" )"		468305	0		=			
ANR	468485	PtrMemberAccess	arminsn -> str_asm		468305	0					
ANR	468486	Identifier	arminsn		468305	0					
ANR	468487	Identifier	str_asm		468305	1					
ANR	468488	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""}"" )"		468305	1					
ANR	468489	Callee	r_str_appendf		468305	0					
ANR	468490	Identifier	r_str_appendf		468305	0					
ANR	468491	ArgumentList	arminsn -> str_asm		468305	1					
ANR	468492	Argument	arminsn -> str_asm		468305	0					
ANR	468493	PtrMemberAccess	arminsn -> str_asm		468305	0					
ANR	468494	Identifier	arminsn		468305	0					
ANR	468495	Identifier	str_asm		468305	1					
ANR	468496	Argument	"""}"""		468305	1					
ANR	468497	PrimaryExpression	"""}"""		468305	0					
ANR	468498	ReturnStatement	return 0 ;	461:1:15052:15060	468305	10	True				
ANR	468499	PrimaryExpression	0		468305	0					
ANR	468500	ReturnType	static ut16		468305	1					
ANR	468501	Identifier	thumb_disasm_pushpop		468305	2					
ANR	468502	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		468305	3					
ANR	468503	Parameter	struct winedbg_arm_insn * arminsn	431:33:14327:14358	468305	0	True				
ANR	468504	ParameterType	struct winedbg_arm_insn *		468305	0					
ANR	468505	Identifier	arminsn		468305	1					
ANR	468506	Parameter	ut16 inst	431:67:14361:14369	468305	1	True				
ANR	468507	ParameterType	ut16		468305	0					
ANR	468508	Identifier	inst		468305	1					
ANR	468509	CFGEntryNode	ENTRY		468305		True				
ANR	468510	CFGExitNode	EXIT		468305		True				
ANR	468511	Symbol	* arminsn		468305						
ANR	468512	Symbol	* i		468305						
ANR	468513	Symbol	load		468305						
ANR	468514	Symbol	last		468305						
ANR	468515	Symbol	* tbl_regs		468305						
ANR	468516	Symbol	tbl_regs		468305						
ANR	468517	Symbol	inst		468305						
ANR	468518	Symbol	r_str_appendf		468305						
ANR	468519	Symbol	i		468305						
ANR	468520	Symbol	arminsn		468305						
ANR	468521	Symbol	lrpc		468305						
ANR	468522	Symbol	arminsn -> str_asm		468305						
ANR	468523	Function	thumb_disasm_blocktrans	464:0:15065:15722							
ANR	468524	FunctionDef	"thumb_disasm_blocktrans (struct winedbg_arm_insn * arminsn , ut16 inst)"		468523	0					
ANR	468525	CompoundStatement		464:81:15146:15722	468523	0					
ANR	468526	IdentifierDeclStatement	short load = ( inst >> 11 ) & 0x01 ;	465:1:15149:15181	468523	0	True				
ANR	468527	IdentifierDecl	load = ( inst >> 11 ) & 0x01		468523	0					
ANR	468528	IdentifierDeclType	short		468523	0					
ANR	468529	Identifier	load		468523	1					
ANR	468530	AssignmentExpression	load = ( inst >> 11 ) & 0x01		468523	2		=			
ANR	468531	Identifier	load		468523	0					
ANR	468532	BitAndExpression	( inst >> 11 ) & 0x01		468523	1		&			
ANR	468533	ShiftExpression	inst >> 11		468523	0		>>			
ANR	468534	Identifier	inst		468523	0					
ANR	468535	PrimaryExpression	11		468523	1					
ANR	468536	PrimaryExpression	0x01		468523	1					
ANR	468537	IdentifierDeclStatement	short i ;	466:1:15184:15191	468523	1	True				
ANR	468538	IdentifierDecl	i		468523	0					
ANR	468539	IdentifierDeclType	short		468523	0					
ANR	468540	Identifier	i		468523	1					
ANR	468541	IdentifierDeclStatement	short last ;	467:1:15194:15204	468523	2	True				
ANR	468542	IdentifierDecl	last		468523	0					
ANR	468543	IdentifierDeclType	short		468523	0					
ANR	468544	Identifier	last		468523	1					
ANR	468545	ForStatement	for ( i = 7 ; i >= 0 ; i -- )		468523	3					
ANR	468546	ForInit	i = 7 ;	469:6:15213:15216	468523	0	True				
ANR	468547	AssignmentExpression	i = 7		468523	0		=			
ANR	468548	Identifier	i		468523	0					
ANR	468549	PrimaryExpression	7		468523	1					
ANR	468550	Condition	i >= 0	469:10:15217:15220	468523	1	True				
ANR	468551	RelationalExpression	i >= 0		468523	0		>=			
ANR	468552	Identifier	i		468523	0					
ANR	468553	PrimaryExpression	0		468523	1					
ANR	468554	PostIncDecOperationExpression	i --	469:15:15222:15224	468523	2	True				
ANR	468555	Identifier	i		468523	0					
ANR	468556	IncDec	--		468523	1					
ANR	468557	CompoundStatement		6:20:80:80	468523	3					
ANR	468558	IfStatement	if ( ( inst >> i ) & 1 )		468523	0					
ANR	468559	Condition	( inst >> i ) & 1	470:6:15235:15247	468523	0	True				
ANR	468560	BitAndExpression	( inst >> i ) & 1		468523	0		&			
ANR	468561	ShiftExpression	inst >> i		468523	0		>>			
ANR	468562	Identifier	inst		468523	0					
ANR	468563	Identifier	i		468523	1					
ANR	468564	PrimaryExpression	1		468523	1					
ANR	468565	CompoundStatement		7:21:103:103	468523	1					
ANR	468566	BreakStatement	break ;	471:3:15255:15260	468523	0	True				
ANR	468567	ExpressionStatement	last = i	474:1:15270:15278	468523	4	True				
ANR	468568	AssignmentExpression	last = i		468523	0		=			
ANR	468569	Identifier	last		468523	0					
ANR	468570	Identifier	i		468523	1					
ANR	468571	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s!, {"" , load ? ""ldmia"" : ""stmia"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] )"	476:1:15282:15402	468523	5	True				
ANR	468572	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s!, {"" , load ? ""ldmia"" : ""stmia"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] )"		468523	0		=			
ANR	468573	PtrMemberAccess	arminsn -> str_asm		468523	0					
ANR	468574	Identifier	arminsn		468523	0					
ANR	468575	Identifier	str_asm		468523	1					
ANR	468576	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s!, {"" , load ? ""ldmia"" : ""stmia"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] )"		468523	1					
ANR	468577	Callee	r_str_appendf		468523	0					
ANR	468578	Identifier	r_str_appendf		468523	0					
ANR	468579	ArgumentList	arminsn -> str_asm		468523	1					
ANR	468580	Argument	arminsn -> str_asm		468523	0					
ANR	468581	PtrMemberAccess	arminsn -> str_asm		468523	0					
ANR	468582	Identifier	arminsn		468523	0					
ANR	468583	Identifier	str_asm		468523	1					
ANR	468584	Argument	"""%s %s!, {"""		468523	1					
ANR	468585	PrimaryExpression	"""%s %s!, {"""		468523	0					
ANR	468586	Argument	"load ? ""ldmia"" : ""stmia"""		468523	2					
ANR	468587	ConditionalExpression	"load ? ""ldmia"" : ""stmia"""		468523	0					
ANR	468588	Condition	load		468523	0					
ANR	468589	Identifier	load		468523	0					
ANR	468590	PrimaryExpression	"""ldmia"""		468523	1					
ANR	468591	PrimaryExpression	"""stmia"""		468523	2					
ANR	468592	Argument	tbl_regs [ ( inst >> 8 ) & 0x07 ]		468523	3					
ANR	468593	ArrayIndexing	tbl_regs [ ( inst >> 8 ) & 0x07 ]		468523	0					
ANR	468594	Identifier	tbl_regs		468523	0					
ANR	468595	BitAndExpression	( inst >> 8 ) & 0x07		468523	1		&			
ANR	468596	ShiftExpression	inst >> 8		468523	0		>>			
ANR	468597	Identifier	inst		468523	0					
ANR	468598	PrimaryExpression	8		468523	1					
ANR	468599	PrimaryExpression	0x07		468523	1					
ANR	468600	ForStatement	for ( i = 0 ; i <= 7 ; i ++ )		468523	6					
ANR	468601	ForInit	i = 0 ;	478:6:15411:15414	468523	0	True				
ANR	468602	AssignmentExpression	i = 0		468523	0		=			
ANR	468603	Identifier	i		468523	0					
ANR	468604	PrimaryExpression	0		468523	1					
ANR	468605	Condition	i <= 7	478:10:15415:15418	468523	1	True				
ANR	468606	RelationalExpression	i <= 7		468523	0		<=			
ANR	468607	Identifier	i		468523	0					
ANR	468608	PrimaryExpression	7		468523	1					
ANR	468609	PostIncDecOperationExpression	i ++	478:15:15420:15422	468523	2	True				
ANR	468610	Identifier	i		468523	0					
ANR	468611	IncDec	++		468523	1					
ANR	468612	CompoundStatement		15:20:278:278	468523	3					
ANR	468613	IfStatement	if ( ( inst >> i ) & 1 )		468523	0					
ANR	468614	Condition	( inst >> i ) & 1	479:6:15433:15445	468523	0	True				
ANR	468615	BitAndExpression	( inst >> i ) & 1		468523	0		&			
ANR	468616	ShiftExpression	inst >> i		468523	0		>>			
ANR	468617	Identifier	inst		468523	0					
ANR	468618	Identifier	i		468523	1					
ANR	468619	PrimaryExpression	1		468523	1					
ANR	468620	CompoundStatement		16:21:301:301	468523	1					
ANR	468621	IfStatement	if ( i == last )		468523	0					
ANR	468622	Condition	i == last	480:7:15457:15465	468523	0	True				
ANR	468623	EqualityExpression	i == last		468523	0		==			
ANR	468624	Identifier	i		468523	0					
ANR	468625	Identifier	last		468523	1					
ANR	468626	CompoundStatement		17:18:321:321	468523	1					
ANR	468627	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"	481:4:15474:15544	468523	0	True				
ANR	468628	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"		468523	0		=			
ANR	468629	PtrMemberAccess	arminsn -> str_asm		468523	0					
ANR	468630	Identifier	arminsn		468523	0					
ANR	468631	Identifier	str_asm		468523	1					
ANR	468632	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"		468523	1					
ANR	468633	Callee	r_str_appendf		468523	0					
ANR	468634	Identifier	r_str_appendf		468523	0					
ANR	468635	ArgumentList	arminsn -> str_asm		468523	1					
ANR	468636	Argument	arminsn -> str_asm		468523	0					
ANR	468637	PtrMemberAccess	arminsn -> str_asm		468523	0					
ANR	468638	Identifier	arminsn		468523	0					
ANR	468639	Identifier	str_asm		468523	1					
ANR	468640	Argument	"""%s"""		468523	1					
ANR	468641	PrimaryExpression	"""%s"""		468523	0					
ANR	468642	Argument	tbl_regs [ i ]		468523	2					
ANR	468643	ArrayIndexing	tbl_regs [ i ]		468523	0					
ANR	468644	Identifier	tbl_regs		468523	0					
ANR	468645	Identifier	i		468523	1					
ANR	468646	ElseStatement	else		468523	0					
ANR	468647	CompoundStatement		20:8:412:412	468523	0					
ANR	468648	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"	484:4:15565:15637	468523	0	True				
ANR	468649	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"		468523	0		=			
ANR	468650	PtrMemberAccess	arminsn -> str_asm		468523	0					
ANR	468651	Identifier	arminsn		468523	0					
ANR	468652	Identifier	str_asm		468523	1					
ANR	468653	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"		468523	1					
ANR	468654	Callee	r_str_appendf		468523	0					
ANR	468655	Identifier	r_str_appendf		468523	0					
ANR	468656	ArgumentList	arminsn -> str_asm		468523	1					
ANR	468657	Argument	arminsn -> str_asm		468523	0					
ANR	468658	PtrMemberAccess	arminsn -> str_asm		468523	0					
ANR	468659	Identifier	arminsn		468523	0					
ANR	468660	Identifier	str_asm		468523	1					
ANR	468661	Argument	"""%s, """		468523	1					
ANR	468662	PrimaryExpression	"""%s, """		468523	0					
ANR	468663	Argument	tbl_regs [ i ]		468523	2					
ANR	468664	ArrayIndexing	tbl_regs [ i ]		468523	0					
ANR	468665	Identifier	tbl_regs		468523	0					
ANR	468666	Identifier	i		468523	1					
ANR	468667	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""}"" )"	489:1:15653:15709	468523	7	True				
ANR	468668	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""}"" )"		468523	0		=			
ANR	468669	PtrMemberAccess	arminsn -> str_asm		468523	0					
ANR	468670	Identifier	arminsn		468523	0					
ANR	468671	Identifier	str_asm		468523	1					
ANR	468672	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""}"" )"		468523	1					
ANR	468673	Callee	r_str_appendf		468523	0					
ANR	468674	Identifier	r_str_appendf		468523	0					
ANR	468675	ArgumentList	arminsn -> str_asm		468523	1					
ANR	468676	Argument	arminsn -> str_asm		468523	0					
ANR	468677	PtrMemberAccess	arminsn -> str_asm		468523	0					
ANR	468678	Identifier	arminsn		468523	0					
ANR	468679	Identifier	str_asm		468523	1					
ANR	468680	Argument	"""}"""		468523	1					
ANR	468681	PrimaryExpression	"""}"""		468523	0					
ANR	468682	ReturnStatement	return 0 ;	490:1:15712:15720	468523	8	True				
ANR	468683	PrimaryExpression	0		468523	0					
ANR	468684	ReturnType	static ut16		468523	1					
ANR	468685	Identifier	thumb_disasm_blocktrans		468523	2					
ANR	468686	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		468523	3					
ANR	468687	Parameter	struct winedbg_arm_insn * arminsn	464:36:15101:15132	468523	0	True				
ANR	468688	ParameterType	struct winedbg_arm_insn *		468523	0					
ANR	468689	Identifier	arminsn		468523	1					
ANR	468690	Parameter	ut16 inst	464:70:15135:15143	468523	1	True				
ANR	468691	ParameterType	ut16		468523	0					
ANR	468692	Identifier	inst		468523	1					
ANR	468693	CFGEntryNode	ENTRY		468523		True				
ANR	468694	CFGExitNode	EXIT		468523		True				
ANR	468695	Symbol	* arminsn		468523						
ANR	468696	Symbol	* inst		468523						
ANR	468697	Symbol	* i		468523						
ANR	468698	Symbol	load		468523						
ANR	468699	Symbol	last		468523						
ANR	468700	Symbol	* tbl_regs		468523						
ANR	468701	Symbol	tbl_regs		468523						
ANR	468702	Symbol	inst		468523						
ANR	468703	Symbol	r_str_appendf		468523						
ANR	468704	Symbol	i		468523						
ANR	468705	Symbol	arminsn		468523						
ANR	468706	Symbol	arminsn -> str_asm		468523						
ANR	468707	Function	thumb_disasm_condbranch	493:0:15725:16040							
ANR	468708	FunctionDef	"thumb_disasm_condbranch (struct winedbg_arm_insn * arminsn , ut16 inst)"		468707	0					
ANR	468709	CompoundStatement		493:81:15806:16040	468707	0					
ANR	468710	IdentifierDeclStatement	ut16 offset = inst & 0x00ff ;	494:1:15809:15836	468707	0	True				
ANR	468711	IdentifierDecl	offset = inst & 0x00ff		468707	0					
ANR	468712	IdentifierDeclType	ut16		468707	0					
ANR	468713	Identifier	offset		468707	1					
ANR	468714	AssignmentExpression	offset = inst & 0x00ff		468707	2		=			
ANR	468715	Identifier	offset		468707	0					
ANR	468716	BitAndExpression	inst & 0x00ff		468707	1		&			
ANR	468717	Identifier	inst		468707	0					
ANR	468718	PrimaryExpression	0x00ff		468707	1					
ANR	468719	Statement	arminsn	495:1:15839:15845	468707	1	True				
ANR	468720	Statement	->	495:8:15846:15847	468707	2	True				
ANR	468721	Statement	str_asm	495:10:15848:15854	468707	3	True				
ANR	468722	Statement	=	495:18:15856:15856	468707	4	True				
ANR	468723	Statement	r_str_appendf	495:20:15858:15870	468707	5	True				
ANR	468724	Statement	(	495:34:15872:15872	468707	6	True				
ANR	468725	Statement	arminsn	495:35:15873:15879	468707	7	True				
ANR	468726	Statement	->	495:42:15880:15881	468707	8	True				
ANR	468727	Statement	str_asm	495:44:15882:15888	468707	9	True				
ANR	468728	Statement	","	495:51:15889:15889	468707	10	True				
ANR	468729	Statement	"""b%s 0x%"""	495:53:15891:15899	468707	11	True				
ANR	468730	Statement	PFMT64x	495:62:15900:15906	468707	12	True				
ANR	468731	Statement	","	495:69:15907:15907	468707	13	True				
ANR	468732	Statement	tbl_cond	495:71:15909:15916	468707	14	True				
ANR	468733	Statement	[	495:79:15917:15917	468707	15	True				
ANR	468734	Statement	(	495:80:15918:15918	468707	16	True				
ANR	468735	Statement	inst	495:81:15919:15922	468707	17	True				
ANR	468736	Statement	>>	495:86:15924:15925	468707	18	True				
ANR	468737	Statement	8	495:89:15927:15927	468707	19	True				
ANR	468738	Statement	)	495:90:15928:15928	468707	20	True				
ANR	468739	Statement	&	495:92:15930:15930	468707	21	True				
ANR	468740	Statement	0x0f	495:94:15932:15935	468707	22	True				
ANR	468741	Statement	]	495:98:15936:15936	468707	23	True				
ANR	468742	Statement	","	495:99:15937:15937	468707	24	True				
ANR	468743	Statement	arminsn	495:101:15939:15945	468707	25	True				
ANR	468744	Statement	->	495:108:15946:15947	468707	26	True				
ANR	468745	Statement	pc	495:110:15948:15949	468707	27	True				
ANR	468746	Statement	+	495:112:15950:15950	468707	28	True				
ANR	468747	Statement	offset	495:113:15951:15956	468707	29	True				
ANR	468748	Statement	)	495:119:15957:15957	468707	30	True				
ANR	468749	ExpressionStatement		495:120:15958:15958	468707	31	True				
ANR	468750	ExpressionStatement	arminsn -> jmp = arminsn -> pc + offset	497:1:15962:15995	468707	32	True				
ANR	468751	AssignmentExpression	arminsn -> jmp = arminsn -> pc + offset		468707	0		=			
ANR	468752	PtrMemberAccess	arminsn -> jmp		468707	0					
ANR	468753	Identifier	arminsn		468707	0					
ANR	468754	Identifier	jmp		468707	1					
ANR	468755	AdditiveExpression	arminsn -> pc + offset		468707	1		+			
ANR	468756	PtrMemberAccess	arminsn -> pc		468707	0					
ANR	468757	Identifier	arminsn		468707	0					
ANR	468758	Identifier	pc		468707	1					
ANR	468759	Identifier	offset		468707	1					
ANR	468760	ExpressionStatement	arminsn -> fail = arminsn -> pc + 4	498:1:15998:16027	468707	33	True				
ANR	468761	AssignmentExpression	arminsn -> fail = arminsn -> pc + 4		468707	0		=			
ANR	468762	PtrMemberAccess	arminsn -> fail		468707	0					
ANR	468763	Identifier	arminsn		468707	0					
ANR	468764	Identifier	fail		468707	1					
ANR	468765	AdditiveExpression	arminsn -> pc + 4		468707	1		+			
ANR	468766	PtrMemberAccess	arminsn -> pc		468707	0					
ANR	468767	Identifier	arminsn		468707	0					
ANR	468768	Identifier	pc		468707	1					
ANR	468769	PrimaryExpression	4		468707	1					
ANR	468770	ReturnStatement	return 0 ;	499:1:16030:16038	468707	34	True				
ANR	468771	PrimaryExpression	0		468707	0					
ANR	468772	ReturnType	static ut16		468707	1					
ANR	468773	Identifier	thumb_disasm_condbranch		468707	2					
ANR	468774	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		468707	3					
ANR	468775	Parameter	struct winedbg_arm_insn * arminsn	493:36:15761:15792	468707	0	True				
ANR	468776	ParameterType	struct winedbg_arm_insn *		468707	0					
ANR	468777	Identifier	arminsn		468707	1					
ANR	468778	Parameter	ut16 inst	493:70:15795:15803	468707	1	True				
ANR	468779	ParameterType	ut16		468707	0					
ANR	468780	Identifier	inst		468707	1					
ANR	468781	CFGEntryNode	ENTRY		468707		True				
ANR	468782	CFGExitNode	EXIT		468707		True				
ANR	468783	Symbol	* arminsn		468707						
ANR	468784	Symbol	arminsn -> pc		468707						
ANR	468785	Symbol	offset		468707						
ANR	468786	Symbol	inst		468707						
ANR	468787	Symbol	arminsn		468707						
ANR	468788	Symbol	arminsn -> fail		468707						
ANR	468789	Symbol	arminsn -> jmp		468707						
ANR	468790	Function	thumb_disasm_uncondbranch	502:0:16043:16366							
ANR	468791	FunctionDef	"thumb_disasm_uncondbranch (struct winedbg_arm_insn * arminsn , ut16 inst)"		468790	0					
ANR	468792	CompoundStatement		502:83:16126:16366	468790	0					
ANR	468793	IdentifierDeclStatement	short offset = ( inst & 0x07ff ) << 1 ;	503:1:16129:16164	468790	0	True				
ANR	468794	IdentifierDecl	offset = ( inst & 0x07ff ) << 1		468790	0					
ANR	468795	IdentifierDeclType	short		468790	0					
ANR	468796	Identifier	offset		468790	1					
ANR	468797	AssignmentExpression	offset = ( inst & 0x07ff ) << 1		468790	2		=			
ANR	468798	Identifier	offset		468790	0					
ANR	468799	ShiftExpression	( inst & 0x07ff ) << 1		468790	1		<<			
ANR	468800	BitAndExpression	inst & 0x07ff		468790	0		&			
ANR	468801	Identifier	inst		468790	0					
ANR	468802	PrimaryExpression	0x07ff		468790	1					
ANR	468803	PrimaryExpression	1		468790	1					
ANR	468804	IfStatement	if ( offset & 0x0800 )		468790	1					
ANR	468805	Condition	offset & 0x0800	505:5:16172:16186	468790	0	True				
ANR	468806	BitAndExpression	offset & 0x0800		468790	0		&			
ANR	468807	Identifier	offset		468790	0					
ANR	468808	PrimaryExpression	0x0800		468790	1					
ANR	468809	CompoundStatement		4:22:62:62	468790	1					
ANR	468810	ExpressionStatement	offset |= 0xf000	506:2:16193:16209	468790	0	True				
ANR	468811	AssignmentExpression	offset |= 0xf000		468790	0		|=			
ANR	468812	Identifier	offset		468790	0					
ANR	468813	PrimaryExpression	0xf000		468790	1					
ANR	468814	ExpressionStatement	offset += 4	508:1:16215:16226	468790	2	True				
ANR	468815	AssignmentExpression	offset += 4		468790	0		+=			
ANR	468816	Identifier	offset		468790	0					
ANR	468817	PrimaryExpression	4		468790	1					
ANR	468818	Statement	arminsn	509:1:16229:16235	468790	3	True				
ANR	468819	Statement	->	509:8:16236:16237	468790	4	True				
ANR	468820	Statement	str_asm	509:10:16238:16244	468790	5	True				
ANR	468821	Statement	=	509:18:16246:16246	468790	6	True				
ANR	468822	Statement	r_str_appendf	509:20:16248:16260	468790	7	True				
ANR	468823	Statement	(	509:34:16262:16262	468790	8	True				
ANR	468824	Statement	arminsn	509:35:16263:16269	468790	9	True				
ANR	468825	Statement	->	509:42:16270:16271	468790	10	True				
ANR	468826	Statement	str_asm	509:44:16272:16278	468790	11	True				
ANR	468827	Statement	","	509:51:16279:16279	468790	12	True				
ANR	468828	Statement	"""b 0x%"""	509:53:16281:16287	468790	13	True				
ANR	468829	Statement	PFMT64x	509:60:16288:16294	468790	14	True				
ANR	468830	Statement	","	509:67:16295:16295	468790	15	True				
ANR	468831	Statement	arminsn	509:69:16297:16303	468790	16	True				
ANR	468832	Statement	->	509:76:16304:16305	468790	17	True				
ANR	468833	Statement	pc	509:78:16306:16307	468790	18	True				
ANR	468834	Statement	+	509:80:16308:16308	468790	19	True				
ANR	468835	Statement	offset	509:81:16309:16314	468790	20	True				
ANR	468836	Statement	)	509:87:16315:16315	468790	21	True				
ANR	468837	ExpressionStatement		509:88:16316:16316	468790	22	True				
ANR	468838	ExpressionStatement	arminsn -> jmp = arminsn -> pc + offset	511:1:16320:16353	468790	23	True				
ANR	468839	AssignmentExpression	arminsn -> jmp = arminsn -> pc + offset		468790	0		=			
ANR	468840	PtrMemberAccess	arminsn -> jmp		468790	0					
ANR	468841	Identifier	arminsn		468790	0					
ANR	468842	Identifier	jmp		468790	1					
ANR	468843	AdditiveExpression	arminsn -> pc + offset		468790	1		+			
ANR	468844	PtrMemberAccess	arminsn -> pc		468790	0					
ANR	468845	Identifier	arminsn		468790	0					
ANR	468846	Identifier	pc		468790	1					
ANR	468847	Identifier	offset		468790	1					
ANR	468848	ReturnStatement	return 0 ;	512:1:16356:16364	468790	24	True				
ANR	468849	PrimaryExpression	0		468790	0					
ANR	468850	ReturnType	static ut16		468790	1					
ANR	468851	Identifier	thumb_disasm_uncondbranch		468790	2					
ANR	468852	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		468790	3					
ANR	468853	Parameter	struct winedbg_arm_insn * arminsn	502:38:16081:16112	468790	0	True				
ANR	468854	ParameterType	struct winedbg_arm_insn *		468790	0					
ANR	468855	Identifier	arminsn		468790	1					
ANR	468856	Parameter	ut16 inst	502:72:16115:16123	468790	1	True				
ANR	468857	ParameterType	ut16		468790	0					
ANR	468858	Identifier	inst		468790	1					
ANR	468859	CFGEntryNode	ENTRY		468790		True				
ANR	468860	CFGExitNode	EXIT		468790		True				
ANR	468861	Symbol	* arminsn		468790						
ANR	468862	Symbol	arminsn -> pc		468790						
ANR	468863	Symbol	offset		468790						
ANR	468864	Symbol	inst		468790						
ANR	468865	Symbol	arminsn		468790						
ANR	468866	Symbol	arminsn -> jmp		468790						
ANR	468867	Function	thumb_disasm_loadadr	515:0:16369:16662							
ANR	468868	FunctionDef	"thumb_disasm_loadadr (struct winedbg_arm_insn * arminsn , ut16 inst)"		468867	0					
ANR	468869	CompoundStatement		515:78:16447:16662	468867	0					
ANR	468870	IdentifierDeclStatement	ut16 src = ( inst >> 11 ) & 0x01 ;	516:1:16450:16480	468867	0	True				
ANR	468871	IdentifierDecl	src = ( inst >> 11 ) & 0x01		468867	0					
ANR	468872	IdentifierDeclType	ut16		468867	0					
ANR	468873	Identifier	src		468867	1					
ANR	468874	AssignmentExpression	src = ( inst >> 11 ) & 0x01		468867	2		=			
ANR	468875	Identifier	src		468867	0					
ANR	468876	BitAndExpression	( inst >> 11 ) & 0x01		468867	1		&			
ANR	468877	ShiftExpression	inst >> 11		468867	0		>>			
ANR	468878	Identifier	inst		468867	0					
ANR	468879	PrimaryExpression	11		468867	1					
ANR	468880	PrimaryExpression	0x01		468867	1					
ANR	468881	IdentifierDeclStatement	ut16 offset = ( inst & 0xff ) << 2 ;	517:1:16483:16515	468867	1	True				
ANR	468882	IdentifierDecl	offset = ( inst & 0xff ) << 2		468867	0					
ANR	468883	IdentifierDeclType	ut16		468867	0					
ANR	468884	Identifier	offset		468867	1					
ANR	468885	AssignmentExpression	offset = ( inst & 0xff ) << 2		468867	2		=			
ANR	468886	Identifier	offset		468867	0					
ANR	468887	ShiftExpression	( inst & 0xff ) << 2		468867	1		<<			
ANR	468888	BitAndExpression	inst & 0xff		468867	0		&			
ANR	468889	Identifier	inst		468867	0					
ANR	468890	PrimaryExpression	0xff		468867	1					
ANR	468891	PrimaryExpression	2		468867	1					
ANR	468892	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""add %s, %s, #%d"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , src ? ""sp"" : ""pc"" , offset )"	519:1:16519:16649	468867	2	True				
ANR	468893	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""add %s, %s, #%d"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , src ? ""sp"" : ""pc"" , offset )"		468867	0		=			
ANR	468894	PtrMemberAccess	arminsn -> str_asm		468867	0					
ANR	468895	Identifier	arminsn		468867	0					
ANR	468896	Identifier	str_asm		468867	1					
ANR	468897	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""add %s, %s, #%d"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , src ? ""sp"" : ""pc"" , offset )"		468867	1					
ANR	468898	Callee	r_str_appendf		468867	0					
ANR	468899	Identifier	r_str_appendf		468867	0					
ANR	468900	ArgumentList	arminsn -> str_asm		468867	1					
ANR	468901	Argument	arminsn -> str_asm		468867	0					
ANR	468902	PtrMemberAccess	arminsn -> str_asm		468867	0					
ANR	468903	Identifier	arminsn		468867	0					
ANR	468904	Identifier	str_asm		468867	1					
ANR	468905	Argument	"""add %s, %s, #%d"""		468867	1					
ANR	468906	PrimaryExpression	"""add %s, %s, #%d"""		468867	0					
ANR	468907	Argument	tbl_regs [ ( inst >> 8 ) & 0x07 ]		468867	2					
ANR	468908	ArrayIndexing	tbl_regs [ ( inst >> 8 ) & 0x07 ]		468867	0					
ANR	468909	Identifier	tbl_regs		468867	0					
ANR	468910	BitAndExpression	( inst >> 8 ) & 0x07		468867	1		&			
ANR	468911	ShiftExpression	inst >> 8		468867	0		>>			
ANR	468912	Identifier	inst		468867	0					
ANR	468913	PrimaryExpression	8		468867	1					
ANR	468914	PrimaryExpression	0x07		468867	1					
ANR	468915	Argument	"src ? ""sp"" : ""pc"""		468867	3					
ANR	468916	ConditionalExpression	"src ? ""sp"" : ""pc"""		468867	0					
ANR	468917	Condition	src		468867	0					
ANR	468918	Identifier	src		468867	0					
ANR	468919	PrimaryExpression	"""sp"""		468867	1					
ANR	468920	PrimaryExpression	"""pc"""		468867	2					
ANR	468921	Argument	offset		468867	4					
ANR	468922	Identifier	offset		468867	0					
ANR	468923	ReturnStatement	return 0 ;	521:1:16652:16660	468867	3	True				
ANR	468924	PrimaryExpression	0		468867	0					
ANR	468925	ReturnType	static ut16		468867	1					
ANR	468926	Identifier	thumb_disasm_loadadr		468867	2					
ANR	468927	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		468867	3					
ANR	468928	Parameter	struct winedbg_arm_insn * arminsn	515:33:16402:16433	468867	0	True				
ANR	468929	ParameterType	struct winedbg_arm_insn *		468867	0					
ANR	468930	Identifier	arminsn		468867	1					
ANR	468931	Parameter	ut16 inst	515:67:16436:16444	468867	1	True				
ANR	468932	ParameterType	ut16		468867	0					
ANR	468933	Identifier	inst		468867	1					
ANR	468934	CFGEntryNode	ENTRY		468867		True				
ANR	468935	CFGExitNode	EXIT		468867		True				
ANR	468936	Symbol	* arminsn		468867						
ANR	468937	Symbol	* inst		468867						
ANR	468938	Symbol	offset		468867						
ANR	468939	Symbol	src		468867						
ANR	468940	Symbol	* tbl_regs		468867						
ANR	468941	Symbol	tbl_regs		468867						
ANR	468942	Symbol	inst		468867						
ANR	468943	Symbol	r_str_appendf		468867						
ANR	468944	Symbol	arminsn		468867						
ANR	468945	Symbol	arminsn -> str_asm		468867						
ANR	468946	Function	thumb_disasm_swi	524:0:16665:16857							
ANR	468947	FunctionDef	"thumb_disasm_swi (struct winedbg_arm_insn * arminsn , ut16 inst)"		468946	0					
ANR	468948	CompoundStatement		524:74:16739:16857	468946	0					
ANR	468949	IdentifierDeclStatement	ut16 comment = inst & 0x00ff ;	525:1:16742:16770	468946	0	True				
ANR	468950	IdentifierDecl	comment = inst & 0x00ff		468946	0					
ANR	468951	IdentifierDeclType	ut16		468946	0					
ANR	468952	Identifier	comment		468946	1					
ANR	468953	AssignmentExpression	comment = inst & 0x00ff		468946	2		=			
ANR	468954	Identifier	comment		468946	0					
ANR	468955	BitAndExpression	inst & 0x00ff		468946	1		&			
ANR	468956	Identifier	inst		468946	0					
ANR	468957	PrimaryExpression	0x00ff		468946	1					
ANR	468958	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""swi #%d"" , comment )"	526:1:16773:16844	468946	1	True				
ANR	468959	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""swi #%d"" , comment )"		468946	0		=			
ANR	468960	PtrMemberAccess	arminsn -> str_asm		468946	0					
ANR	468961	Identifier	arminsn		468946	0					
ANR	468962	Identifier	str_asm		468946	1					
ANR	468963	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""swi #%d"" , comment )"		468946	1					
ANR	468964	Callee	r_str_appendf		468946	0					
ANR	468965	Identifier	r_str_appendf		468946	0					
ANR	468966	ArgumentList	arminsn -> str_asm		468946	1					
ANR	468967	Argument	arminsn -> str_asm		468946	0					
ANR	468968	PtrMemberAccess	arminsn -> str_asm		468946	0					
ANR	468969	Identifier	arminsn		468946	0					
ANR	468970	Identifier	str_asm		468946	1					
ANR	468971	Argument	"""swi #%d"""		468946	1					
ANR	468972	PrimaryExpression	"""swi #%d"""		468946	0					
ANR	468973	Argument	comment		468946	2					
ANR	468974	Identifier	comment		468946	0					
ANR	468975	ReturnStatement	return 0 ;	527:1:16847:16855	468946	2	True				
ANR	468976	PrimaryExpression	0		468946	0					
ANR	468977	ReturnType	static ut16		468946	1					
ANR	468978	Identifier	thumb_disasm_swi		468946	2					
ANR	468979	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		468946	3					
ANR	468980	Parameter	struct winedbg_arm_insn * arminsn	524:29:16694:16725	468946	0	True				
ANR	468981	ParameterType	struct winedbg_arm_insn *		468946	0					
ANR	468982	Identifier	arminsn		468946	1					
ANR	468983	Parameter	ut16 inst	524:63:16728:16736	468946	1	True				
ANR	468984	ParameterType	ut16		468946	0					
ANR	468985	Identifier	inst		468946	1					
ANR	468986	CFGEntryNode	ENTRY		468946		True				
ANR	468987	CFGExitNode	EXIT		468946		True				
ANR	468988	Symbol	* arminsn		468946						
ANR	468989	Symbol	inst		468946						
ANR	468990	Symbol	r_str_appendf		468946						
ANR	468991	Symbol	arminsn		468946						
ANR	468992	Symbol	comment		468946						
ANR	468993	Symbol	arminsn -> str_asm		468946						
ANR	468994	Function	thumb_disasm_nop	530:0:16860:17008							
ANR	468995	FunctionDef	"thumb_disasm_nop (struct winedbg_arm_insn * arminsn , ut16 inst)"		468994	0					
ANR	468996	CompoundStatement		530:74:16934:17008	468994	0					
ANR	468997	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""nop"" )"	531:1:16937:16995	468994	0	True				
ANR	468998	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""nop"" )"		468994	0		=			
ANR	468999	PtrMemberAccess	arminsn -> str_asm		468994	0					
ANR	469000	Identifier	arminsn		468994	0					
ANR	469001	Identifier	str_asm		468994	1					
ANR	469002	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""nop"" )"		468994	1					
ANR	469003	Callee	r_str_appendf		468994	0					
ANR	469004	Identifier	r_str_appendf		468994	0					
ANR	469005	ArgumentList	arminsn -> str_asm		468994	1					
ANR	469006	Argument	arminsn -> str_asm		468994	0					
ANR	469007	PtrMemberAccess	arminsn -> str_asm		468994	0					
ANR	469008	Identifier	arminsn		468994	0					
ANR	469009	Identifier	str_asm		468994	1					
ANR	469010	Argument	"""nop"""		468994	1					
ANR	469011	PrimaryExpression	"""nop"""		468994	0					
ANR	469012	ReturnStatement	return 0 ;	532:1:16998:17006	468994	1	True				
ANR	469013	PrimaryExpression	0		468994	0					
ANR	469014	ReturnType	static ut16		468994	1					
ANR	469015	Identifier	thumb_disasm_nop		468994	2					
ANR	469016	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		468994	3					
ANR	469017	Parameter	struct winedbg_arm_insn * arminsn	530:29:16889:16920	468994	0	True				
ANR	469018	ParameterType	struct winedbg_arm_insn *		468994	0					
ANR	469019	Identifier	arminsn		468994	1					
ANR	469020	Parameter	ut16 inst	530:63:16923:16931	468994	1	True				
ANR	469021	ParameterType	ut16		468994	0					
ANR	469022	Identifier	inst		468994	1					
ANR	469023	CFGEntryNode	ENTRY		468994		True				
ANR	469024	CFGExitNode	EXIT		468994		True				
ANR	469025	Symbol	* arminsn		468994						
ANR	469026	Symbol	inst		468994						
ANR	469027	Symbol	r_str_appendf		468994						
ANR	469028	Symbol	arminsn		468994						
ANR	469029	Symbol	arminsn -> str_asm		468994						
ANR	469030	Function	thumb_disasm_ldrpcrel	535:0:17011:17251							
ANR	469031	FunctionDef	"thumb_disasm_ldrpcrel (struct winedbg_arm_insn * arminsn , ut16 inst)"		469030	0					
ANR	469032	CompoundStatement		535:79:17090:17251	469030	0					
ANR	469033	IdentifierDeclStatement	ut16 offset = ( inst & 0xff ) << 2 ;	536:1:17093:17125	469030	0	True				
ANR	469034	IdentifierDecl	offset = ( inst & 0xff ) << 2		469030	0					
ANR	469035	IdentifierDeclType	ut16		469030	0					
ANR	469036	Identifier	offset		469030	1					
ANR	469037	AssignmentExpression	offset = ( inst & 0xff ) << 2		469030	2		=			
ANR	469038	Identifier	offset		469030	0					
ANR	469039	ShiftExpression	( inst & 0xff ) << 2		469030	1		<<			
ANR	469040	BitAndExpression	inst & 0xff		469030	0		&			
ANR	469041	Identifier	inst		469030	0					
ANR	469042	PrimaryExpression	0xff		469030	1					
ANR	469043	PrimaryExpression	2		469030	1					
ANR	469044	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""ldr %s, [pc, #%u]"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , offset )"	537:1:17128:17238	469030	1	True				
ANR	469045	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""ldr %s, [pc, #%u]"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , offset )"		469030	0		=			
ANR	469046	PtrMemberAccess	arminsn -> str_asm		469030	0					
ANR	469047	Identifier	arminsn		469030	0					
ANR	469048	Identifier	str_asm		469030	1					
ANR	469049	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""ldr %s, [pc, #%u]"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , offset )"		469030	1					
ANR	469050	Callee	r_str_appendf		469030	0					
ANR	469051	Identifier	r_str_appendf		469030	0					
ANR	469052	ArgumentList	arminsn -> str_asm		469030	1					
ANR	469053	Argument	arminsn -> str_asm		469030	0					
ANR	469054	PtrMemberAccess	arminsn -> str_asm		469030	0					
ANR	469055	Identifier	arminsn		469030	0					
ANR	469056	Identifier	str_asm		469030	1					
ANR	469057	Argument	"""ldr %s, [pc, #%u]"""		469030	1					
ANR	469058	PrimaryExpression	"""ldr %s, [pc, #%u]"""		469030	0					
ANR	469059	Argument	tbl_regs [ ( inst >> 8 ) & 0x07 ]		469030	2					
ANR	469060	ArrayIndexing	tbl_regs [ ( inst >> 8 ) & 0x07 ]		469030	0					
ANR	469061	Identifier	tbl_regs		469030	0					
ANR	469062	BitAndExpression	( inst >> 8 ) & 0x07		469030	1		&			
ANR	469063	ShiftExpression	inst >> 8		469030	0		>>			
ANR	469064	Identifier	inst		469030	0					
ANR	469065	PrimaryExpression	8		469030	1					
ANR	469066	PrimaryExpression	0x07		469030	1					
ANR	469067	Argument	offset		469030	3					
ANR	469068	Identifier	offset		469030	0					
ANR	469069	ReturnStatement	return 0 ;	538:1:17241:17249	469030	2	True				
ANR	469070	PrimaryExpression	0		469030	0					
ANR	469071	ReturnType	static ut16		469030	1					
ANR	469072	Identifier	thumb_disasm_ldrpcrel		469030	2					
ANR	469073	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		469030	3					
ANR	469074	Parameter	struct winedbg_arm_insn * arminsn	535:34:17045:17076	469030	0	True				
ANR	469075	ParameterType	struct winedbg_arm_insn *		469030	0					
ANR	469076	Identifier	arminsn		469030	1					
ANR	469077	Parameter	ut16 inst	535:68:17079:17087	469030	1	True				
ANR	469078	ParameterType	ut16		469030	0					
ANR	469079	Identifier	inst		469030	1					
ANR	469080	CFGEntryNode	ENTRY		469030		True				
ANR	469081	CFGExitNode	EXIT		469030		True				
ANR	469082	Symbol	* arminsn		469030						
ANR	469083	Symbol	* inst		469030						
ANR	469084	Symbol	offset		469030						
ANR	469085	Symbol	* tbl_regs		469030						
ANR	469086	Symbol	tbl_regs		469030						
ANR	469087	Symbol	inst		469030						
ANR	469088	Symbol	r_str_appendf		469030						
ANR	469089	Symbol	arminsn		469030						
ANR	469090	Symbol	arminsn -> str_asm		469030						
ANR	469091	Function	thumb_disasm_ldrsprel	541:0:17254:17525							
ANR	469092	FunctionDef	"thumb_disasm_ldrsprel (struct winedbg_arm_insn * arminsn , ut16 inst)"		469091	0					
ANR	469093	CompoundStatement		541:79:17333:17525	469091	0					
ANR	469094	IdentifierDeclStatement	ut16 offset = ( inst & 0xff ) << 2 ;	542:1:17336:17368	469091	0	True				
ANR	469095	IdentifierDecl	offset = ( inst & 0xff ) << 2		469091	0					
ANR	469096	IdentifierDeclType	ut16		469091	0					
ANR	469097	Identifier	offset		469091	1					
ANR	469098	AssignmentExpression	offset = ( inst & 0xff ) << 2		469091	2		=			
ANR	469099	Identifier	offset		469091	0					
ANR	469100	ShiftExpression	( inst & 0xff ) << 2		469091	1		<<			
ANR	469101	BitAndExpression	inst & 0xff		469091	0		&			
ANR	469102	Identifier	inst		469091	0					
ANR	469103	PrimaryExpression	0xff		469091	1					
ANR	469104	PrimaryExpression	2		469091	1					
ANR	469105	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, [sp, #%u]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , offset )"	543:1:17371:17512	469091	1	True				
ANR	469106	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, [sp, #%u]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , offset )"		469091	0		=			
ANR	469107	PtrMemberAccess	arminsn -> str_asm		469091	0					
ANR	469108	Identifier	arminsn		469091	0					
ANR	469109	Identifier	str_asm		469091	1					
ANR	469110	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, [sp, #%u]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , offset )"		469091	1					
ANR	469111	Callee	r_str_appendf		469091	0					
ANR	469112	Identifier	r_str_appendf		469091	0					
ANR	469113	ArgumentList	arminsn -> str_asm		469091	1					
ANR	469114	Argument	arminsn -> str_asm		469091	0					
ANR	469115	PtrMemberAccess	arminsn -> str_asm		469091	0					
ANR	469116	Identifier	arminsn		469091	0					
ANR	469117	Identifier	str_asm		469091	1					
ANR	469118	Argument	"""%s %s, [sp, #%u]"""		469091	1					
ANR	469119	PrimaryExpression	"""%s %s, [sp, #%u]"""		469091	0					
ANR	469120	Argument	"( inst & 0x0800 ) ? ""ldr"" : ""str"""		469091	2					
ANR	469121	ConditionalExpression	"( inst & 0x0800 ) ? ""ldr"" : ""str"""		469091	0					
ANR	469122	Condition	inst & 0x0800		469091	0					
ANR	469123	BitAndExpression	inst & 0x0800		469091	0		&			
ANR	469124	Identifier	inst		469091	0					
ANR	469125	PrimaryExpression	0x0800		469091	1					
ANR	469126	PrimaryExpression	"""ldr"""		469091	1					
ANR	469127	PrimaryExpression	"""str"""		469091	2					
ANR	469128	Argument	tbl_regs [ ( inst >> 8 ) & 0x07 ]		469091	3					
ANR	469129	ArrayIndexing	tbl_regs [ ( inst >> 8 ) & 0x07 ]		469091	0					
ANR	469130	Identifier	tbl_regs		469091	0					
ANR	469131	BitAndExpression	( inst >> 8 ) & 0x07		469091	1		&			
ANR	469132	ShiftExpression	inst >> 8		469091	0		>>			
ANR	469133	Identifier	inst		469091	0					
ANR	469134	PrimaryExpression	8		469091	1					
ANR	469135	PrimaryExpression	0x07		469091	1					
ANR	469136	Argument	offset		469091	4					
ANR	469137	Identifier	offset		469091	0					
ANR	469138	ReturnStatement	return 0 ;	545:1:17515:17523	469091	2	True				
ANR	469139	PrimaryExpression	0		469091	0					
ANR	469140	ReturnType	static ut16		469091	1					
ANR	469141	Identifier	thumb_disasm_ldrsprel		469091	2					
ANR	469142	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		469091	3					
ANR	469143	Parameter	struct winedbg_arm_insn * arminsn	541:34:17288:17319	469091	0	True				
ANR	469144	ParameterType	struct winedbg_arm_insn *		469091	0					
ANR	469145	Identifier	arminsn		469091	1					
ANR	469146	Parameter	ut16 inst	541:68:17322:17330	469091	1	True				
ANR	469147	ParameterType	ut16		469091	0					
ANR	469148	Identifier	inst		469091	1					
ANR	469149	CFGEntryNode	ENTRY		469091		True				
ANR	469150	CFGExitNode	EXIT		469091		True				
ANR	469151	Symbol	* arminsn		469091						
ANR	469152	Symbol	* inst		469091						
ANR	469153	Symbol	offset		469091						
ANR	469154	Symbol	* tbl_regs		469091						
ANR	469155	Symbol	tbl_regs		469091						
ANR	469156	Symbol	inst		469091						
ANR	469157	Symbol	r_str_appendf		469091						
ANR	469158	Symbol	arminsn		469091						
ANR	469159	Symbol	arminsn -> str_asm		469091						
ANR	469160	Function	thumb_disasm_addsprel	548:0:17528:17860							
ANR	469161	FunctionDef	"thumb_disasm_addsprel (struct winedbg_arm_insn * arminsn , ut16 inst)"		469160	0					
ANR	469162	CompoundStatement		548:79:17607:17860	469160	0					
ANR	469163	IdentifierDeclStatement	ut16 offset = ( inst & 0x7f ) << 2 ;	549:1:17610:17642	469160	0	True				
ANR	469164	IdentifierDecl	offset = ( inst & 0x7f ) << 2		469160	0					
ANR	469165	IdentifierDeclType	ut16		469160	0					
ANR	469166	Identifier	offset		469160	1					
ANR	469167	AssignmentExpression	offset = ( inst & 0x7f ) << 2		469160	2		=			
ANR	469168	Identifier	offset		469160	0					
ANR	469169	ShiftExpression	( inst & 0x7f ) << 2		469160	1		<<			
ANR	469170	BitAndExpression	inst & 0x7f		469160	0		&			
ANR	469171	Identifier	inst		469160	0					
ANR	469172	PrimaryExpression	0x7f		469160	1					
ANR	469173	PrimaryExpression	2		469160	1					
ANR	469174	IfStatement	if ( ( inst >> 7 ) & 0x01 )		469160	1					
ANR	469175	Condition	( inst >> 7 ) & 0x01	550:5:17649:17666	469160	0	True				
ANR	469176	BitAndExpression	( inst >> 7 ) & 0x01		469160	0		&			
ANR	469177	ShiftExpression	inst >> 7		469160	0		>>			
ANR	469178	Identifier	inst		469160	0					
ANR	469179	PrimaryExpression	7		469160	1					
ANR	469180	PrimaryExpression	0x01		469160	1					
ANR	469181	CompoundStatement		3:25:61:61	469160	1					
ANR	469182	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""sub sp, sp, #%u"" , offset )"	551:2:17673:17751	469160	0	True				
ANR	469183	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""sub sp, sp, #%u"" , offset )"		469160	0		=			
ANR	469184	PtrMemberAccess	arminsn -> str_asm		469160	0					
ANR	469185	Identifier	arminsn		469160	0					
ANR	469186	Identifier	str_asm		469160	1					
ANR	469187	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""sub sp, sp, #%u"" , offset )"		469160	1					
ANR	469188	Callee	r_str_appendf		469160	0					
ANR	469189	Identifier	r_str_appendf		469160	0					
ANR	469190	ArgumentList	arminsn -> str_asm		469160	1					
ANR	469191	Argument	arminsn -> str_asm		469160	0					
ANR	469192	PtrMemberAccess	arminsn -> str_asm		469160	0					
ANR	469193	Identifier	arminsn		469160	0					
ANR	469194	Identifier	str_asm		469160	1					
ANR	469195	Argument	"""sub sp, sp, #%u"""		469160	1					
ANR	469196	PrimaryExpression	"""sub sp, sp, #%u"""		469160	0					
ANR	469197	Argument	offset		469160	2					
ANR	469198	Identifier	offset		469160	0					
ANR	469199	ElseStatement	else		469160	0					
ANR	469200	CompoundStatement		6:6:154:154	469160	0					
ANR	469201	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""add sp, sp, #%u"" , offset )"	554:2:17766:17844	469160	0	True				
ANR	469202	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""add sp, sp, #%u"" , offset )"		469160	0		=			
ANR	469203	PtrMemberAccess	arminsn -> str_asm		469160	0					
ANR	469204	Identifier	arminsn		469160	0					
ANR	469205	Identifier	str_asm		469160	1					
ANR	469206	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""add sp, sp, #%u"" , offset )"		469160	1					
ANR	469207	Callee	r_str_appendf		469160	0					
ANR	469208	Identifier	r_str_appendf		469160	0					
ANR	469209	ArgumentList	arminsn -> str_asm		469160	1					
ANR	469210	Argument	arminsn -> str_asm		469160	0					
ANR	469211	PtrMemberAccess	arminsn -> str_asm		469160	0					
ANR	469212	Identifier	arminsn		469160	0					
ANR	469213	Identifier	str_asm		469160	1					
ANR	469214	Argument	"""add sp, sp, #%u"""		469160	1					
ANR	469215	PrimaryExpression	"""add sp, sp, #%u"""		469160	0					
ANR	469216	Argument	offset		469160	2					
ANR	469217	Identifier	offset		469160	0					
ANR	469218	ReturnStatement	return 0 ;	556:1:17850:17858	469160	2	True				
ANR	469219	PrimaryExpression	0		469160	0					
ANR	469220	ReturnType	static ut16		469160	1					
ANR	469221	Identifier	thumb_disasm_addsprel		469160	2					
ANR	469222	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		469160	3					
ANR	469223	Parameter	struct winedbg_arm_insn * arminsn	548:34:17562:17593	469160	0	True				
ANR	469224	ParameterType	struct winedbg_arm_insn *		469160	0					
ANR	469225	Identifier	arminsn		469160	1					
ANR	469226	Parameter	ut16 inst	548:68:17596:17604	469160	1	True				
ANR	469227	ParameterType	ut16		469160	0					
ANR	469228	Identifier	inst		469160	1					
ANR	469229	CFGEntryNode	ENTRY		469160		True				
ANR	469230	CFGExitNode	EXIT		469160		True				
ANR	469231	Symbol	* arminsn		469160						
ANR	469232	Symbol	offset		469160						
ANR	469233	Symbol	inst		469160						
ANR	469234	Symbol	r_str_appendf		469160						
ANR	469235	Symbol	arminsn		469160						
ANR	469236	Symbol	arminsn -> str_asm		469160						
ANR	469237	Function	thumb_disasm_ldrimm	559:0:17863:18219							
ANR	469238	FunctionDef	"thumb_disasm_ldrimm (struct winedbg_arm_insn * arminsn , ut16 inst)"		469237	0					
ANR	469239	CompoundStatement		559:77:17940:18219	469237	0					
ANR	469240	IdentifierDeclStatement	ut16 offset = ( inst & 0x07c0 ) >> 6 ;	560:1:17943:17977	469237	0	True				
ANR	469241	IdentifierDecl	offset = ( inst & 0x07c0 ) >> 6		469237	0					
ANR	469242	IdentifierDeclType	ut16		469237	0					
ANR	469243	Identifier	offset		469237	1					
ANR	469244	AssignmentExpression	offset = ( inst & 0x07c0 ) >> 6		469237	2		=			
ANR	469245	Identifier	offset		469237	0					
ANR	469246	ShiftExpression	( inst & 0x07c0 ) >> 6		469237	1		>>			
ANR	469247	BitAndExpression	inst & 0x07c0		469237	0		&			
ANR	469248	Identifier	inst		469237	0					
ANR	469249	PrimaryExpression	0x07c0		469237	1					
ANR	469250	PrimaryExpression	6		469237	1					
ANR	469251	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s %s, [%s, #%u]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , ( inst & 0x1000 ) ? ""b"" : """" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , ( inst & 0x1000 ) ? offset : ( offset << 2 ) )"	561:1:17980:18206	469237	1	True				
ANR	469252	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s %s, [%s, #%u]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , ( inst & 0x1000 ) ? ""b"" : """" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , ( inst & 0x1000 ) ? offset : ( offset << 2 ) )"		469237	0		=			
ANR	469253	PtrMemberAccess	arminsn -> str_asm		469237	0					
ANR	469254	Identifier	arminsn		469237	0					
ANR	469255	Identifier	str_asm		469237	1					
ANR	469256	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s %s, [%s, #%u]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , ( inst & 0x1000 ) ? ""b"" : """" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , ( inst & 0x1000 ) ? offset : ( offset << 2 ) )"		469237	1					
ANR	469257	Callee	r_str_appendf		469237	0					
ANR	469258	Identifier	r_str_appendf		469237	0					
ANR	469259	ArgumentList	arminsn -> str_asm		469237	1					
ANR	469260	Argument	arminsn -> str_asm		469237	0					
ANR	469261	PtrMemberAccess	arminsn -> str_asm		469237	0					
ANR	469262	Identifier	arminsn		469237	0					
ANR	469263	Identifier	str_asm		469237	1					
ANR	469264	Argument	"""%s%s %s, [%s, #%u]"""		469237	1					
ANR	469265	PrimaryExpression	"""%s%s %s, [%s, #%u]"""		469237	0					
ANR	469266	Argument	"( inst & 0x0800 ) ? ""ldr"" : ""str"""		469237	2					
ANR	469267	ConditionalExpression	"( inst & 0x0800 ) ? ""ldr"" : ""str"""		469237	0					
ANR	469268	Condition	inst & 0x0800		469237	0					
ANR	469269	BitAndExpression	inst & 0x0800		469237	0		&			
ANR	469270	Identifier	inst		469237	0					
ANR	469271	PrimaryExpression	0x0800		469237	1					
ANR	469272	PrimaryExpression	"""ldr"""		469237	1					
ANR	469273	PrimaryExpression	"""str"""		469237	2					
ANR	469274	Argument	"( inst & 0x1000 ) ? ""b"" : """""		469237	3					
ANR	469275	ConditionalExpression	"( inst & 0x1000 ) ? ""b"" : """""		469237	0					
ANR	469276	Condition	inst & 0x1000		469237	0					
ANR	469277	BitAndExpression	inst & 0x1000		469237	0		&			
ANR	469278	Identifier	inst		469237	0					
ANR	469279	PrimaryExpression	0x1000		469237	1					
ANR	469280	PrimaryExpression	"""b"""		469237	1					
ANR	469281	PrimaryExpression	""""""		469237	2					
ANR	469282	Argument	tbl_regs [ inst & 0x07 ]		469237	4					
ANR	469283	ArrayIndexing	tbl_regs [ inst & 0x07 ]		469237	0					
ANR	469284	Identifier	tbl_regs		469237	0					
ANR	469285	BitAndExpression	inst & 0x07		469237	1		&			
ANR	469286	Identifier	inst		469237	0					
ANR	469287	PrimaryExpression	0x07		469237	1					
ANR	469288	Argument	tbl_regs [ ( inst >> 3 ) & 0x07 ]		469237	5					
ANR	469289	ArrayIndexing	tbl_regs [ ( inst >> 3 ) & 0x07 ]		469237	0					
ANR	469290	Identifier	tbl_regs		469237	0					
ANR	469291	BitAndExpression	( inst >> 3 ) & 0x07		469237	1		&			
ANR	469292	ShiftExpression	inst >> 3		469237	0		>>			
ANR	469293	Identifier	inst		469237	0					
ANR	469294	PrimaryExpression	3		469237	1					
ANR	469295	PrimaryExpression	0x07		469237	1					
ANR	469296	Argument	( inst & 0x1000 ) ? offset : ( offset << 2 )		469237	6					
ANR	469297	ConditionalExpression	( inst & 0x1000 ) ? offset : ( offset << 2 )		469237	0					
ANR	469298	Condition	inst & 0x1000		469237	0					
ANR	469299	BitAndExpression	inst & 0x1000		469237	0		&			
ANR	469300	Identifier	inst		469237	0					
ANR	469301	PrimaryExpression	0x1000		469237	1					
ANR	469302	Identifier	offset		469237	1					
ANR	469303	ShiftExpression	offset << 2		469237	2		<<			
ANR	469304	Identifier	offset		469237	0					
ANR	469305	PrimaryExpression	2		469237	1					
ANR	469306	ReturnStatement	return 0 ;	565:1:18209:18217	469237	2	True				
ANR	469307	PrimaryExpression	0		469237	0					
ANR	469308	ReturnType	static ut16		469237	1					
ANR	469309	Identifier	thumb_disasm_ldrimm		469237	2					
ANR	469310	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		469237	3					
ANR	469311	Parameter	struct winedbg_arm_insn * arminsn	559:32:17895:17926	469237	0	True				
ANR	469312	ParameterType	struct winedbg_arm_insn *		469237	0					
ANR	469313	Identifier	arminsn		469237	1					
ANR	469314	Parameter	ut16 inst	559:66:17929:17937	469237	1	True				
ANR	469315	ParameterType	ut16		469237	0					
ANR	469316	Identifier	inst		469237	1					
ANR	469317	CFGEntryNode	ENTRY		469237		True				
ANR	469318	CFGExitNode	EXIT		469237		True				
ANR	469319	Symbol	* arminsn		469237						
ANR	469320	Symbol	* inst		469237						
ANR	469321	Symbol	offset		469237						
ANR	469322	Symbol	tbl_regs		469237						
ANR	469323	Symbol	* tbl_regs		469237						
ANR	469324	Symbol	inst		469237						
ANR	469325	Symbol	r_str_appendf		469237						
ANR	469326	Symbol	arminsn		469237						
ANR	469327	Symbol	arminsn -> str_asm		469237						
ANR	469328	Function	thumb_disasm_ldrhimm	568:0:18222:18519							
ANR	469329	FunctionDef	"thumb_disasm_ldrhimm (struct winedbg_arm_insn * arminsn , ut16 inst)"		469328	0					
ANR	469330	CompoundStatement		568:78:18300:18519	469328	0					
ANR	469331	IdentifierDeclStatement	ut16 offset = ( inst & 0x07c0 ) >> 5 ;	569:1:18303:18337	469328	0	True				
ANR	469332	IdentifierDecl	offset = ( inst & 0x07c0 ) >> 5		469328	0					
ANR	469333	IdentifierDeclType	ut16		469328	0					
ANR	469334	Identifier	offset		469328	1					
ANR	469335	AssignmentExpression	offset = ( inst & 0x07c0 ) >> 5		469328	2		=			
ANR	469336	Identifier	offset		469328	0					
ANR	469337	ShiftExpression	( inst & 0x07c0 ) >> 5		469328	1		>>			
ANR	469338	BitAndExpression	inst & 0x07c0		469328	0		&			
ANR	469339	Identifier	inst		469328	0					
ANR	469340	PrimaryExpression	0x07c0		469328	1					
ANR	469341	PrimaryExpression	5		469328	1					
ANR	469342	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, [%s, #%u]"" , ( inst & 0x0800 ) ? ""ldrh"" : ""strh"" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , offset )"	570:1:18340:18506	469328	1	True				
ANR	469343	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, [%s, #%u]"" , ( inst & 0x0800 ) ? ""ldrh"" : ""strh"" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , offset )"		469328	0		=			
ANR	469344	PtrMemberAccess	arminsn -> str_asm		469328	0					
ANR	469345	Identifier	arminsn		469328	0					
ANR	469346	Identifier	str_asm		469328	1					
ANR	469347	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, [%s, #%u]"" , ( inst & 0x0800 ) ? ""ldrh"" : ""strh"" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , offset )"		469328	1					
ANR	469348	Callee	r_str_appendf		469328	0					
ANR	469349	Identifier	r_str_appendf		469328	0					
ANR	469350	ArgumentList	arminsn -> str_asm		469328	1					
ANR	469351	Argument	arminsn -> str_asm		469328	0					
ANR	469352	PtrMemberAccess	arminsn -> str_asm		469328	0					
ANR	469353	Identifier	arminsn		469328	0					
ANR	469354	Identifier	str_asm		469328	1					
ANR	469355	Argument	"""%s %s, [%s, #%u]"""		469328	1					
ANR	469356	PrimaryExpression	"""%s %s, [%s, #%u]"""		469328	0					
ANR	469357	Argument	"( inst & 0x0800 ) ? ""ldrh"" : ""strh"""		469328	2					
ANR	469358	ConditionalExpression	"( inst & 0x0800 ) ? ""ldrh"" : ""strh"""		469328	0					
ANR	469359	Condition	inst & 0x0800		469328	0					
ANR	469360	BitAndExpression	inst & 0x0800		469328	0		&			
ANR	469361	Identifier	inst		469328	0					
ANR	469362	PrimaryExpression	0x0800		469328	1					
ANR	469363	PrimaryExpression	"""ldrh"""		469328	1					
ANR	469364	PrimaryExpression	"""strh"""		469328	2					
ANR	469365	Argument	tbl_regs [ inst & 0x07 ]		469328	3					
ANR	469366	ArrayIndexing	tbl_regs [ inst & 0x07 ]		469328	0					
ANR	469367	Identifier	tbl_regs		469328	0					
ANR	469368	BitAndExpression	inst & 0x07		469328	1		&			
ANR	469369	Identifier	inst		469328	0					
ANR	469370	PrimaryExpression	0x07		469328	1					
ANR	469371	Argument	tbl_regs [ ( inst >> 3 ) & 0x07 ]		469328	4					
ANR	469372	ArrayIndexing	tbl_regs [ ( inst >> 3 ) & 0x07 ]		469328	0					
ANR	469373	Identifier	tbl_regs		469328	0					
ANR	469374	BitAndExpression	( inst >> 3 ) & 0x07		469328	1		&			
ANR	469375	ShiftExpression	inst >> 3		469328	0		>>			
ANR	469376	Identifier	inst		469328	0					
ANR	469377	PrimaryExpression	3		469328	1					
ANR	469378	PrimaryExpression	0x07		469328	1					
ANR	469379	Argument	offset		469328	5					
ANR	469380	Identifier	offset		469328	0					
ANR	469381	ReturnStatement	return 0 ;	572:1:18509:18517	469328	2	True				
ANR	469382	PrimaryExpression	0		469328	0					
ANR	469383	ReturnType	static ut16		469328	1					
ANR	469384	Identifier	thumb_disasm_ldrhimm		469328	2					
ANR	469385	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		469328	3					
ANR	469386	Parameter	struct winedbg_arm_insn * arminsn	568:33:18255:18286	469328	0	True				
ANR	469387	ParameterType	struct winedbg_arm_insn *		469328	0					
ANR	469388	Identifier	arminsn		469328	1					
ANR	469389	Parameter	ut16 inst	568:67:18289:18297	469328	1	True				
ANR	469390	ParameterType	ut16		469328	0					
ANR	469391	Identifier	inst		469328	1					
ANR	469392	CFGEntryNode	ENTRY		469328		True				
ANR	469393	CFGExitNode	EXIT		469328		True				
ANR	469394	Symbol	* arminsn		469328						
ANR	469395	Symbol	* inst		469328						
ANR	469396	Symbol	offset		469328						
ANR	469397	Symbol	tbl_regs		469328						
ANR	469398	Symbol	* tbl_regs		469328						
ANR	469399	Symbol	inst		469328						
ANR	469400	Symbol	r_str_appendf		469328						
ANR	469401	Symbol	arminsn		469328						
ANR	469402	Symbol	arminsn -> str_asm		469328						
ANR	469403	Function	thumb_disasm_ldrreg	575:0:18522:18832							
ANR	469404	FunctionDef	"thumb_disasm_ldrreg (struct winedbg_arm_insn * arminsn , ut16 inst)"		469403	0					
ANR	469405	CompoundStatement		575:77:18599:18832	469403	0					
ANR	469406	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s %s, [%s, %s]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , ( inst & 0x0400 ) ? ""b"" : """" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"	576:1:18602:18819	469403	0	True				
ANR	469407	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s %s, [%s, %s]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , ( inst & 0x0400 ) ? ""b"" : """" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"		469403	0		=			
ANR	469408	PtrMemberAccess	arminsn -> str_asm		469403	0					
ANR	469409	Identifier	arminsn		469403	0					
ANR	469410	Identifier	str_asm		469403	1					
ANR	469411	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s %s, [%s, %s]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , ( inst & 0x0400 ) ? ""b"" : """" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"		469403	1					
ANR	469412	Callee	r_str_appendf		469403	0					
ANR	469413	Identifier	r_str_appendf		469403	0					
ANR	469414	ArgumentList	arminsn -> str_asm		469403	1					
ANR	469415	Argument	arminsn -> str_asm		469403	0					
ANR	469416	PtrMemberAccess	arminsn -> str_asm		469403	0					
ANR	469417	Identifier	arminsn		469403	0					
ANR	469418	Identifier	str_asm		469403	1					
ANR	469419	Argument	"""%s%s %s, [%s, %s]"""		469403	1					
ANR	469420	PrimaryExpression	"""%s%s %s, [%s, %s]"""		469403	0					
ANR	469421	Argument	"( inst & 0x0800 ) ? ""ldr"" : ""str"""		469403	2					
ANR	469422	ConditionalExpression	"( inst & 0x0800 ) ? ""ldr"" : ""str"""		469403	0					
ANR	469423	Condition	inst & 0x0800		469403	0					
ANR	469424	BitAndExpression	inst & 0x0800		469403	0		&			
ANR	469425	Identifier	inst		469403	0					
ANR	469426	PrimaryExpression	0x0800		469403	1					
ANR	469427	PrimaryExpression	"""ldr"""		469403	1					
ANR	469428	PrimaryExpression	"""str"""		469403	2					
ANR	469429	Argument	"( inst & 0x0400 ) ? ""b"" : """""		469403	3					
ANR	469430	ConditionalExpression	"( inst & 0x0400 ) ? ""b"" : """""		469403	0					
ANR	469431	Condition	inst & 0x0400		469403	0					
ANR	469432	BitAndExpression	inst & 0x0400		469403	0		&			
ANR	469433	Identifier	inst		469403	0					
ANR	469434	PrimaryExpression	0x0400		469403	1					
ANR	469435	PrimaryExpression	"""b"""		469403	1					
ANR	469436	PrimaryExpression	""""""		469403	2					
ANR	469437	Argument	tbl_regs [ inst & 0x07 ]		469403	4					
ANR	469438	ArrayIndexing	tbl_regs [ inst & 0x07 ]		469403	0					
ANR	469439	Identifier	tbl_regs		469403	0					
ANR	469440	BitAndExpression	inst & 0x07		469403	1		&			
ANR	469441	Identifier	inst		469403	0					
ANR	469442	PrimaryExpression	0x07		469403	1					
ANR	469443	Argument	tbl_regs [ ( inst >> 3 ) & 0x07 ]		469403	5					
ANR	469444	ArrayIndexing	tbl_regs [ ( inst >> 3 ) & 0x07 ]		469403	0					
ANR	469445	Identifier	tbl_regs		469403	0					
ANR	469446	BitAndExpression	( inst >> 3 ) & 0x07		469403	1		&			
ANR	469447	ShiftExpression	inst >> 3		469403	0		>>			
ANR	469448	Identifier	inst		469403	0					
ANR	469449	PrimaryExpression	3		469403	1					
ANR	469450	PrimaryExpression	0x07		469403	1					
ANR	469451	Argument	tbl_regs [ ( inst >> 6 ) & 0x07 ]		469403	6					
ANR	469452	ArrayIndexing	tbl_regs [ ( inst >> 6 ) & 0x07 ]		469403	0					
ANR	469453	Identifier	tbl_regs		469403	0					
ANR	469454	BitAndExpression	( inst >> 6 ) & 0x07		469403	1		&			
ANR	469455	ShiftExpression	inst >> 6		469403	0		>>			
ANR	469456	Identifier	inst		469403	0					
ANR	469457	PrimaryExpression	6		469403	1					
ANR	469458	PrimaryExpression	0x07		469403	1					
ANR	469459	ReturnStatement	return 0 ;	580:1:18822:18830	469403	1	True				
ANR	469460	PrimaryExpression	0		469403	0					
ANR	469461	ReturnType	static ut16		469403	1					
ANR	469462	Identifier	thumb_disasm_ldrreg		469403	2					
ANR	469463	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		469403	3					
ANR	469464	Parameter	struct winedbg_arm_insn * arminsn	575:32:18554:18585	469403	0	True				
ANR	469465	ParameterType	struct winedbg_arm_insn *		469403	0					
ANR	469466	Identifier	arminsn		469403	1					
ANR	469467	Parameter	ut16 inst	575:66:18588:18596	469403	1	True				
ANR	469468	ParameterType	ut16		469403	0					
ANR	469469	Identifier	inst		469403	1					
ANR	469470	CFGEntryNode	ENTRY		469403		True				
ANR	469471	CFGExitNode	EXIT		469403		True				
ANR	469472	Symbol	* arminsn		469403						
ANR	469473	Symbol	* inst		469403						
ANR	469474	Symbol	tbl_regs		469403						
ANR	469475	Symbol	* tbl_regs		469403						
ANR	469476	Symbol	inst		469403						
ANR	469477	Symbol	r_str_appendf		469403						
ANR	469478	Symbol	arminsn		469403						
ANR	469479	Symbol	arminsn -> str_asm		469403						
ANR	469480	Function	thumb_disasm_ldrsreg	583:0:18835:19124							
ANR	469481	FunctionDef	"thumb_disasm_ldrsreg (struct winedbg_arm_insn * arminsn , ut16 inst)"		469480	0					
ANR	469482	CompoundStatement		583:78:18913:19124	469480	0					
ANR	469483	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, [%s, %s]"" , tbl_sregops_t [ ( inst >> 10 ) & 0x03 ] , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"	584:1:18916:19111	469480	0	True				
ANR	469484	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, [%s, %s]"" , tbl_sregops_t [ ( inst >> 10 ) & 0x03 ] , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"		469480	0		=			
ANR	469485	PtrMemberAccess	arminsn -> str_asm		469480	0					
ANR	469486	Identifier	arminsn		469480	0					
ANR	469487	Identifier	str_asm		469480	1					
ANR	469488	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, [%s, %s]"" , tbl_sregops_t [ ( inst >> 10 ) & 0x03 ] , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"		469480	1					
ANR	469489	Callee	r_str_appendf		469480	0					
ANR	469490	Identifier	r_str_appendf		469480	0					
ANR	469491	ArgumentList	arminsn -> str_asm		469480	1					
ANR	469492	Argument	arminsn -> str_asm		469480	0					
ANR	469493	PtrMemberAccess	arminsn -> str_asm		469480	0					
ANR	469494	Identifier	arminsn		469480	0					
ANR	469495	Identifier	str_asm		469480	1					
ANR	469496	Argument	"""%s %s, [%s, %s]"""		469480	1					
ANR	469497	PrimaryExpression	"""%s %s, [%s, %s]"""		469480	0					
ANR	469498	Argument	tbl_sregops_t [ ( inst >> 10 ) & 0x03 ]		469480	2					
ANR	469499	ArrayIndexing	tbl_sregops_t [ ( inst >> 10 ) & 0x03 ]		469480	0					
ANR	469500	Identifier	tbl_sregops_t		469480	0					
ANR	469501	BitAndExpression	( inst >> 10 ) & 0x03		469480	1		&			
ANR	469502	ShiftExpression	inst >> 10		469480	0		>>			
ANR	469503	Identifier	inst		469480	0					
ANR	469504	PrimaryExpression	10		469480	1					
ANR	469505	PrimaryExpression	0x03		469480	1					
ANR	469506	Argument	tbl_regs [ inst & 0x07 ]		469480	3					
ANR	469507	ArrayIndexing	tbl_regs [ inst & 0x07 ]		469480	0					
ANR	469508	Identifier	tbl_regs		469480	0					
ANR	469509	BitAndExpression	inst & 0x07		469480	1		&			
ANR	469510	Identifier	inst		469480	0					
ANR	469511	PrimaryExpression	0x07		469480	1					
ANR	469512	Argument	tbl_regs [ ( inst >> 3 ) & 0x07 ]		469480	4					
ANR	469513	ArrayIndexing	tbl_regs [ ( inst >> 3 ) & 0x07 ]		469480	0					
ANR	469514	Identifier	tbl_regs		469480	0					
ANR	469515	BitAndExpression	( inst >> 3 ) & 0x07		469480	1		&			
ANR	469516	ShiftExpression	inst >> 3		469480	0		>>			
ANR	469517	Identifier	inst		469480	0					
ANR	469518	PrimaryExpression	3		469480	1					
ANR	469519	PrimaryExpression	0x07		469480	1					
ANR	469520	Argument	tbl_regs [ ( inst >> 6 ) & 0x07 ]		469480	5					
ANR	469521	ArrayIndexing	tbl_regs [ ( inst >> 6 ) & 0x07 ]		469480	0					
ANR	469522	Identifier	tbl_regs		469480	0					
ANR	469523	BitAndExpression	( inst >> 6 ) & 0x07		469480	1		&			
ANR	469524	ShiftExpression	inst >> 6		469480	0		>>			
ANR	469525	Identifier	inst		469480	0					
ANR	469526	PrimaryExpression	6		469480	1					
ANR	469527	PrimaryExpression	0x07		469480	1					
ANR	469528	ReturnStatement	return 0 ;	587:1:19114:19122	469480	1	True				
ANR	469529	PrimaryExpression	0		469480	0					
ANR	469530	ReturnType	static ut16		469480	1					
ANR	469531	Identifier	thumb_disasm_ldrsreg		469480	2					
ANR	469532	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		469480	3					
ANR	469533	Parameter	struct winedbg_arm_insn * arminsn	583:33:18868:18899	469480	0	True				
ANR	469534	ParameterType	struct winedbg_arm_insn *		469480	0					
ANR	469535	Identifier	arminsn		469480	1					
ANR	469536	Parameter	ut16 inst	583:67:18902:18910	469480	1	True				
ANR	469537	ParameterType	ut16		469480	0					
ANR	469538	Identifier	inst		469480	1					
ANR	469539	CFGEntryNode	ENTRY		469480		True				
ANR	469540	CFGExitNode	EXIT		469480		True				
ANR	469541	Symbol	* arminsn		469480						
ANR	469542	Symbol	* inst		469480						
ANR	469543	Symbol	* tbl_regs		469480						
ANR	469544	Symbol	tbl_regs		469480						
ANR	469545	Symbol	inst		469480						
ANR	469546	Symbol	r_str_appendf		469480						
ANR	469547	Symbol	arminsn		469480						
ANR	469548	Symbol	tbl_sregops_t		469480						
ANR	469549	Symbol	* tbl_sregops_t		469480						
ANR	469550	Symbol	arminsn -> str_asm		469480						
ANR	469551	Function	thumb_disasm_immop	590:0:19127:19380							
ANR	469552	FunctionDef	"thumb_disasm_immop (struct winedbg_arm_insn * arminsn , ut16 inst)"		469551	0					
ANR	469553	CompoundStatement		590:76:19203:19380	469551	0					
ANR	469554	IdentifierDeclStatement	ut16 op = ( inst >> 11 ) & 0x03 ;	591:1:19206:19235	469551	0	True				
ANR	469555	IdentifierDecl	op = ( inst >> 11 ) & 0x03		469551	0					
ANR	469556	IdentifierDeclType	ut16		469551	0					
ANR	469557	Identifier	op		469551	1					
ANR	469558	AssignmentExpression	op = ( inst >> 11 ) & 0x03		469551	2		=			
ANR	469559	Identifier	op		469551	0					
ANR	469560	BitAndExpression	( inst >> 11 ) & 0x03		469551	1		&			
ANR	469561	ShiftExpression	inst >> 11		469551	0		>>			
ANR	469562	Identifier	inst		469551	0					
ANR	469563	PrimaryExpression	11		469551	1					
ANR	469564	PrimaryExpression	0x03		469551	1					
ANR	469565	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, #%u"" , tbl_immops_t [ op ] , tbl_regs [ ( inst >> 8 ) & 0x07 ] , inst & 0xff )"	592:1:19238:19367	469551	1	True				
ANR	469566	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, #%u"" , tbl_immops_t [ op ] , tbl_regs [ ( inst >> 8 ) & 0x07 ] , inst & 0xff )"		469551	0		=			
ANR	469567	PtrMemberAccess	arminsn -> str_asm		469551	0					
ANR	469568	Identifier	arminsn		469551	0					
ANR	469569	Identifier	str_asm		469551	1					
ANR	469570	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, #%u"" , tbl_immops_t [ op ] , tbl_regs [ ( inst >> 8 ) & 0x07 ] , inst & 0xff )"		469551	1					
ANR	469571	Callee	r_str_appendf		469551	0					
ANR	469572	Identifier	r_str_appendf		469551	0					
ANR	469573	ArgumentList	arminsn -> str_asm		469551	1					
ANR	469574	Argument	arminsn -> str_asm		469551	0					
ANR	469575	PtrMemberAccess	arminsn -> str_asm		469551	0					
ANR	469576	Identifier	arminsn		469551	0					
ANR	469577	Identifier	str_asm		469551	1					
ANR	469578	Argument	"""%s %s, #%u"""		469551	1					
ANR	469579	PrimaryExpression	"""%s %s, #%u"""		469551	0					
ANR	469580	Argument	tbl_immops_t [ op ]		469551	2					
ANR	469581	ArrayIndexing	tbl_immops_t [ op ]		469551	0					
ANR	469582	Identifier	tbl_immops_t		469551	0					
ANR	469583	Identifier	op		469551	1					
ANR	469584	Argument	tbl_regs [ ( inst >> 8 ) & 0x07 ]		469551	3					
ANR	469585	ArrayIndexing	tbl_regs [ ( inst >> 8 ) & 0x07 ]		469551	0					
ANR	469586	Identifier	tbl_regs		469551	0					
ANR	469587	BitAndExpression	( inst >> 8 ) & 0x07		469551	1		&			
ANR	469588	ShiftExpression	inst >> 8		469551	0		>>			
ANR	469589	Identifier	inst		469551	0					
ANR	469590	PrimaryExpression	8		469551	1					
ANR	469591	PrimaryExpression	0x07		469551	1					
ANR	469592	Argument	inst & 0xff		469551	4					
ANR	469593	BitAndExpression	inst & 0xff		469551	0		&			
ANR	469594	Identifier	inst		469551	0					
ANR	469595	PrimaryExpression	0xff		469551	1					
ANR	469596	ReturnStatement	return 0 ;	594:1:19370:19378	469551	2	True				
ANR	469597	PrimaryExpression	0		469551	0					
ANR	469598	ReturnType	static ut16		469551	1					
ANR	469599	Identifier	thumb_disasm_immop		469551	2					
ANR	469600	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		469551	3					
ANR	469601	Parameter	struct winedbg_arm_insn * arminsn	590:31:19158:19189	469551	0	True				
ANR	469602	ParameterType	struct winedbg_arm_insn *		469551	0					
ANR	469603	Identifier	arminsn		469551	1					
ANR	469604	Parameter	ut16 inst	590:65:19192:19200	469551	1	True				
ANR	469605	ParameterType	ut16		469551	0					
ANR	469606	Identifier	inst		469551	1					
ANR	469607	CFGEntryNode	ENTRY		469551		True				
ANR	469608	CFGExitNode	EXIT		469551		True				
ANR	469609	Symbol	* arminsn		469551						
ANR	469610	Symbol	tbl_immops_t		469551						
ANR	469611	Symbol	op		469551						
ANR	469612	Symbol	* inst		469551						
ANR	469613	Symbol	* op		469551						
ANR	469614	Symbol	tbl_regs		469551						
ANR	469615	Symbol	* tbl_regs		469551						
ANR	469616	Symbol	* tbl_immops_t		469551						
ANR	469617	Symbol	inst		469551						
ANR	469618	Symbol	r_str_appendf		469551						
ANR	469619	Symbol	arminsn		469551						
ANR	469620	Symbol	arminsn -> str_asm		469551						
ANR	469621	Function	thumb_disasm_addsub	597:0:19383:19894							
ANR	469622	FunctionDef	"thumb_disasm_addsub (struct winedbg_arm_insn * arminsn , ut16 inst)"		469621	0					
ANR	469623	CompoundStatement		597:77:19460:19894	469621	0					
ANR	469624	IdentifierDeclStatement	ut16 op = ( inst >> 9 ) & 0x01 ;	598:1:19463:19491	469621	0	True				
ANR	469625	IdentifierDecl	op = ( inst >> 9 ) & 0x01		469621	0					
ANR	469626	IdentifierDeclType	ut16		469621	0					
ANR	469627	Identifier	op		469621	1					
ANR	469628	AssignmentExpression	op = ( inst >> 9 ) & 0x01		469621	2		=			
ANR	469629	Identifier	op		469621	0					
ANR	469630	BitAndExpression	( inst >> 9 ) & 0x01		469621	1		&			
ANR	469631	ShiftExpression	inst >> 9		469621	0		>>			
ANR	469632	Identifier	inst		469621	0					
ANR	469633	PrimaryExpression	9		469621	1					
ANR	469634	PrimaryExpression	0x01		469621	1					
ANR	469635	IdentifierDeclStatement	ut16 immediate = ( inst >> 10 ) & 0x01 ;	599:1:19494:19530	469621	1	True				
ANR	469636	IdentifierDecl	immediate = ( inst >> 10 ) & 0x01		469621	0					
ANR	469637	IdentifierDeclType	ut16		469621	0					
ANR	469638	Identifier	immediate		469621	1					
ANR	469639	AssignmentExpression	immediate = ( inst >> 10 ) & 0x01		469621	2		=			
ANR	469640	Identifier	immediate		469621	0					
ANR	469641	BitAndExpression	( inst >> 10 ) & 0x01		469621	1		&			
ANR	469642	ShiftExpression	inst >> 10		469621	0		>>			
ANR	469643	Identifier	inst		469621	0					
ANR	469644	PrimaryExpression	10		469621	1					
ANR	469645	PrimaryExpression	0x01		469621	1					
ANR	469646	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s, "" , op ? ""sub"" : ""add"" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] )"	601:1:19534:19676	469621	2	True				
ANR	469647	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s, "" , op ? ""sub"" : ""add"" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] )"		469621	0		=			
ANR	469648	PtrMemberAccess	arminsn -> str_asm		469621	0					
ANR	469649	Identifier	arminsn		469621	0					
ANR	469650	Identifier	str_asm		469621	1					
ANR	469651	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, %s, "" , op ? ""sub"" : ""add"" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] )"		469621	1					
ANR	469652	Callee	r_str_appendf		469621	0					
ANR	469653	Identifier	r_str_appendf		469621	0					
ANR	469654	ArgumentList	arminsn -> str_asm		469621	1					
ANR	469655	Argument	arminsn -> str_asm		469621	0					
ANR	469656	PtrMemberAccess	arminsn -> str_asm		469621	0					
ANR	469657	Identifier	arminsn		469621	0					
ANR	469658	Identifier	str_asm		469621	1					
ANR	469659	Argument	"""%s %s, %s, """		469621	1					
ANR	469660	PrimaryExpression	"""%s %s, %s, """		469621	0					
ANR	469661	Argument	"op ? ""sub"" : ""add"""		469621	2					
ANR	469662	ConditionalExpression	"op ? ""sub"" : ""add"""		469621	0					
ANR	469663	Condition	op		469621	0					
ANR	469664	Identifier	op		469621	0					
ANR	469665	PrimaryExpression	"""sub"""		469621	1					
ANR	469666	PrimaryExpression	"""add"""		469621	2					
ANR	469667	Argument	tbl_regs [ inst & 0x07 ]		469621	3					
ANR	469668	ArrayIndexing	tbl_regs [ inst & 0x07 ]		469621	0					
ANR	469669	Identifier	tbl_regs		469621	0					
ANR	469670	BitAndExpression	inst & 0x07		469621	1		&			
ANR	469671	Identifier	inst		469621	0					
ANR	469672	PrimaryExpression	0x07		469621	1					
ANR	469673	Argument	tbl_regs [ ( inst >> 3 ) & 0x07 ]		469621	4					
ANR	469674	ArrayIndexing	tbl_regs [ ( inst >> 3 ) & 0x07 ]		469621	0					
ANR	469675	Identifier	tbl_regs		469621	0					
ANR	469676	BitAndExpression	( inst >> 3 ) & 0x07		469621	1		&			
ANR	469677	ShiftExpression	inst >> 3		469621	0		>>			
ANR	469678	Identifier	inst		469621	0					
ANR	469679	PrimaryExpression	3		469621	1					
ANR	469680	PrimaryExpression	0x07		469621	1					
ANR	469681	IfStatement	if ( immediate )		469621	3					
ANR	469682	Condition	immediate	603:5:19683:19691	469621	0	True				
ANR	469683	Identifier	immediate		469621	0					
ANR	469684	CompoundStatement		7:16:233:233	469621	1					
ANR	469685	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""#%d"" , ( inst >> 6 ) & 0x07 )"	604:2:19698:19776	469621	0	True				
ANR	469686	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""#%d"" , ( inst >> 6 ) & 0x07 )"		469621	0		=			
ANR	469687	PtrMemberAccess	arminsn -> str_asm		469621	0					
ANR	469688	Identifier	arminsn		469621	0					
ANR	469689	Identifier	str_asm		469621	1					
ANR	469690	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""#%d"" , ( inst >> 6 ) & 0x07 )"		469621	1					
ANR	469691	Callee	r_str_appendf		469621	0					
ANR	469692	Identifier	r_str_appendf		469621	0					
ANR	469693	ArgumentList	arminsn -> str_asm		469621	1					
ANR	469694	Argument	arminsn -> str_asm		469621	0					
ANR	469695	PtrMemberAccess	arminsn -> str_asm		469621	0					
ANR	469696	Identifier	arminsn		469621	0					
ANR	469697	Identifier	str_asm		469621	1					
ANR	469698	Argument	"""#%d"""		469621	1					
ANR	469699	PrimaryExpression	"""#%d"""		469621	0					
ANR	469700	Argument	( inst >> 6 ) & 0x07		469621	2					
ANR	469701	BitAndExpression	( inst >> 6 ) & 0x07		469621	0		&			
ANR	469702	ShiftExpression	inst >> 6		469621	0		>>			
ANR	469703	Identifier	inst		469621	0					
ANR	469704	PrimaryExpression	6		469621	1					
ANR	469705	PrimaryExpression	0x07		469621	1					
ANR	469706	ElseStatement	else		469621	0					
ANR	469707	CompoundStatement		10:6:326:326	469621	0					
ANR	469708	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"	607:2:19791:19878	469621	0	True				
ANR	469709	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"		469621	0		=			
ANR	469710	PtrMemberAccess	arminsn -> str_asm		469621	0					
ANR	469711	Identifier	arminsn		469621	0					
ANR	469712	Identifier	str_asm		469621	1					
ANR	469713	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"		469621	1					
ANR	469714	Callee	r_str_appendf		469621	0					
ANR	469715	Identifier	r_str_appendf		469621	0					
ANR	469716	ArgumentList	arminsn -> str_asm		469621	1					
ANR	469717	Argument	arminsn -> str_asm		469621	0					
ANR	469718	PtrMemberAccess	arminsn -> str_asm		469621	0					
ANR	469719	Identifier	arminsn		469621	0					
ANR	469720	Identifier	str_asm		469621	1					
ANR	469721	Argument	"""%s"""		469621	1					
ANR	469722	PrimaryExpression	"""%s"""		469621	0					
ANR	469723	Argument	tbl_regs [ ( inst >> 6 ) & 0x07 ]		469621	2					
ANR	469724	ArrayIndexing	tbl_regs [ ( inst >> 6 ) & 0x07 ]		469621	0					
ANR	469725	Identifier	tbl_regs		469621	0					
ANR	469726	BitAndExpression	( inst >> 6 ) & 0x07		469621	1		&			
ANR	469727	ShiftExpression	inst >> 6		469621	0		>>			
ANR	469728	Identifier	inst		469621	0					
ANR	469729	PrimaryExpression	6		469621	1					
ANR	469730	PrimaryExpression	0x07		469621	1					
ANR	469731	ReturnStatement	return 0 ;	609:1:19884:19892	469621	4	True				
ANR	469732	PrimaryExpression	0		469621	0					
ANR	469733	ReturnType	static ut16		469621	1					
ANR	469734	Identifier	thumb_disasm_addsub		469621	2					
ANR	469735	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		469621	3					
ANR	469736	Parameter	struct winedbg_arm_insn * arminsn	597:32:19415:19446	469621	0	True				
ANR	469737	ParameterType	struct winedbg_arm_insn *		469621	0					
ANR	469738	Identifier	arminsn		469621	1					
ANR	469739	Parameter	ut16 inst	597:66:19449:19457	469621	1	True				
ANR	469740	ParameterType	ut16		469621	0					
ANR	469741	Identifier	inst		469621	1					
ANR	469742	CFGEntryNode	ENTRY		469621		True				
ANR	469743	CFGExitNode	EXIT		469621		True				
ANR	469744	Symbol	* arminsn		469621						
ANR	469745	Symbol	op		469621						
ANR	469746	Symbol	* inst		469621						
ANR	469747	Symbol	immediate		469621						
ANR	469748	Symbol	tbl_regs		469621						
ANR	469749	Symbol	* tbl_regs		469621						
ANR	469750	Symbol	inst		469621						
ANR	469751	Symbol	r_str_appendf		469621						
ANR	469752	Symbol	arminsn		469621						
ANR	469753	Symbol	arminsn -> str_asm		469621						
ANR	469754	Function	thumb_disasm_movshift	612:0:19897:20185							
ANR	469755	FunctionDef	"thumb_disasm_movshift (struct winedbg_arm_insn * arminsn , ut16 inst)"		469754	0					
ANR	469756	CompoundStatement		612:79:19976:20185	469754	0					
ANR	469757	IdentifierDeclStatement	ut16 op = ( inst >> 11 ) & 0x03 ;	613:1:19979:20008	469754	0	True				
ANR	469758	IdentifierDecl	op = ( inst >> 11 ) & 0x03		469754	0					
ANR	469759	IdentifierDeclType	ut16		469754	0					
ANR	469760	Identifier	op		469754	1					
ANR	469761	AssignmentExpression	op = ( inst >> 11 ) & 0x03		469754	2		=			
ANR	469762	Identifier	op		469754	0					
ANR	469763	BitAndExpression	( inst >> 11 ) & 0x03		469754	1		&			
ANR	469764	ShiftExpression	inst >> 11		469754	0		>>			
ANR	469765	Identifier	inst		469754	0					
ANR	469766	PrimaryExpression	11		469754	1					
ANR	469767	PrimaryExpression	0x03		469754	1					
ANR	469768	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s, #%u"" , tbl_shifts [ op ] , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , ( inst >> 6 ) & 0x1f )"	614:1:20011:20172	469754	1	True				
ANR	469769	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s, #%u"" , tbl_shifts [ op ] , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , ( inst >> 6 ) & 0x1f )"		469754	0		=			
ANR	469770	PtrMemberAccess	arminsn -> str_asm		469754	0					
ANR	469771	Identifier	arminsn		469754	0					
ANR	469772	Identifier	str_asm		469754	1					
ANR	469773	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, %s, #%u"" , tbl_shifts [ op ] , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , ( inst >> 6 ) & 0x1f )"		469754	1					
ANR	469774	Callee	r_str_appendf		469754	0					
ANR	469775	Identifier	r_str_appendf		469754	0					
ANR	469776	ArgumentList	arminsn -> str_asm		469754	1					
ANR	469777	Argument	arminsn -> str_asm		469754	0					
ANR	469778	PtrMemberAccess	arminsn -> str_asm		469754	0					
ANR	469779	Identifier	arminsn		469754	0					
ANR	469780	Identifier	str_asm		469754	1					
ANR	469781	Argument	"""%s %s, %s, #%u"""		469754	1					
ANR	469782	PrimaryExpression	"""%s %s, %s, #%u"""		469754	0					
ANR	469783	Argument	tbl_shifts [ op ]		469754	2					
ANR	469784	ArrayIndexing	tbl_shifts [ op ]		469754	0					
ANR	469785	Identifier	tbl_shifts		469754	0					
ANR	469786	Identifier	op		469754	1					
ANR	469787	Argument	tbl_regs [ inst & 0x07 ]		469754	3					
ANR	469788	ArrayIndexing	tbl_regs [ inst & 0x07 ]		469754	0					
ANR	469789	Identifier	tbl_regs		469754	0					
ANR	469790	BitAndExpression	inst & 0x07		469754	1		&			
ANR	469791	Identifier	inst		469754	0					
ANR	469792	PrimaryExpression	0x07		469754	1					
ANR	469793	Argument	tbl_regs [ ( inst >> 3 ) & 0x07 ]		469754	4					
ANR	469794	ArrayIndexing	tbl_regs [ ( inst >> 3 ) & 0x07 ]		469754	0					
ANR	469795	Identifier	tbl_regs		469754	0					
ANR	469796	BitAndExpression	( inst >> 3 ) & 0x07		469754	1		&			
ANR	469797	ShiftExpression	inst >> 3		469754	0		>>			
ANR	469798	Identifier	inst		469754	0					
ANR	469799	PrimaryExpression	3		469754	1					
ANR	469800	PrimaryExpression	0x07		469754	1					
ANR	469801	Argument	( inst >> 6 ) & 0x1f		469754	5					
ANR	469802	BitAndExpression	( inst >> 6 ) & 0x1f		469754	0		&			
ANR	469803	ShiftExpression	inst >> 6		469754	0		>>			
ANR	469804	Identifier	inst		469754	0					
ANR	469805	PrimaryExpression	6		469754	1					
ANR	469806	PrimaryExpression	0x1f		469754	1					
ANR	469807	ReturnStatement	return 0 ;	616:1:20175:20183	469754	2	True				
ANR	469808	PrimaryExpression	0		469754	0					
ANR	469809	ReturnType	static ut16		469754	1					
ANR	469810	Identifier	thumb_disasm_movshift		469754	2					
ANR	469811	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		469754	3					
ANR	469812	Parameter	struct winedbg_arm_insn * arminsn	612:34:19931:19962	469754	0	True				
ANR	469813	ParameterType	struct winedbg_arm_insn *		469754	0					
ANR	469814	Identifier	arminsn		469754	1					
ANR	469815	Parameter	ut16 inst	612:68:19965:19973	469754	1	True				
ANR	469816	ParameterType	ut16		469754	0					
ANR	469817	Identifier	inst		469754	1					
ANR	469818	CFGEntryNode	ENTRY		469754		True				
ANR	469819	CFGExitNode	EXIT		469754		True				
ANR	469820	Symbol	* arminsn		469754						
ANR	469821	Symbol	op		469754						
ANR	469822	Symbol	tbl_shifts		469754						
ANR	469823	Symbol	* inst		469754						
ANR	469824	Symbol	* tbl_shifts		469754						
ANR	469825	Symbol	* op		469754						
ANR	469826	Symbol	* tbl_regs		469754						
ANR	469827	Symbol	tbl_regs		469754						
ANR	469828	Symbol	inst		469754						
ANR	469829	Symbol	r_str_appendf		469754						
ANR	469830	Symbol	arminsn		469754						
ANR	469831	Symbol	arminsn -> str_asm		469754						
ANR	469832	Function	thumb2_disasm_branchlinked	619:0:20188:20491							
ANR	469833	FunctionDef	"thumb2_disasm_branchlinked (struct winedbg_arm_insn * arminsn , ut32 inst)"		469832	0					
ANR	469834	CompoundStatement		619:84:20272:20491	469832	0					
ANR	469835	IdentifierDeclStatement	ut32 offset = ( ( ( inst & 0x07ff0000 ) >> 4 ) | ( ( inst & 0x000007ff ) << 1 ) ) + 4 ;	620:1:20275:20350	469832	0	True				
ANR	469836	IdentifierDecl	offset = ( ( ( inst & 0x07ff0000 ) >> 4 ) | ( ( inst & 0x000007ff ) << 1 ) ) + 4		469832	0					
ANR	469837	IdentifierDeclType	ut32		469832	0					
ANR	469838	Identifier	offset		469832	1					
ANR	469839	AssignmentExpression	offset = ( ( ( inst & 0x07ff0000 ) >> 4 ) | ( ( inst & 0x000007ff ) << 1 ) ) + 4		469832	2		=			
ANR	469840	Identifier	offset		469832	0					
ANR	469841	AdditiveExpression	( ( ( inst & 0x07ff0000 ) >> 4 ) | ( ( inst & 0x000007ff ) << 1 ) ) + 4		469832	1		+			
ANR	469842	InclusiveOrExpression	( ( inst & 0x07ff0000 ) >> 4 ) | ( ( inst & 0x000007ff ) << 1 )		469832	0		|			
ANR	469843	ShiftExpression	( inst & 0x07ff0000 ) >> 4		469832	0		>>			
ANR	469844	BitAndExpression	inst & 0x07ff0000		469832	0		&			
ANR	469845	Identifier	inst		469832	0					
ANR	469846	PrimaryExpression	0x07ff0000		469832	1					
ANR	469847	PrimaryExpression	4		469832	1					
ANR	469848	ShiftExpression	( inst & 0x000007ff ) << 1		469832	1		<<			
ANR	469849	BitAndExpression	inst & 0x000007ff		469832	0		&			
ANR	469850	Identifier	inst		469832	0					
ANR	469851	PrimaryExpression	0x000007ff		469832	1					
ANR	469852	PrimaryExpression	1		469832	1					
ANR	469853	PrimaryExpression	4		469832	1					
ANR	469854	Statement	arminsn	621:1:20353:20359	469832	1	True				
ANR	469855	Statement	->	621:8:20360:20361	469832	2	True				
ANR	469856	Statement	str_asm	621:10:20362:20368	469832	3	True				
ANR	469857	Statement	=	621:18:20370:20370	469832	4	True				
ANR	469858	Statement	r_str_appendf	621:20:20372:20384	469832	5	True				
ANR	469859	Statement	(	621:34:20386:20386	469832	6	True				
ANR	469860	Statement	arminsn	621:35:20387:20393	469832	7	True				
ANR	469861	Statement	->	621:42:20394:20395	469832	8	True				
ANR	469862	Statement	str_asm	621:44:20396:20402	469832	9	True				
ANR	469863	Statement	","	621:51:20403:20403	469832	10	True				
ANR	469864	Statement	"""bl 0x%"""	621:53:20405:20412	469832	11	True				
ANR	469865	Statement	PFMT64x	621:61:20413:20419	469832	12	True				
ANR	469866	Statement	","	621:68:20420:20420	469832	13	True				
ANR	469867	Statement	arminsn	621:70:20422:20428	469832	14	True				
ANR	469868	Statement	->	621:77:20429:20430	469832	15	True				
ANR	469869	Statement	pc	621:79:20431:20432	469832	16	True				
ANR	469870	Statement	+	621:81:20433:20433	469832	17	True				
ANR	469871	Statement	offset	621:82:20434:20439	469832	18	True				
ANR	469872	Statement	)	621:88:20440:20440	469832	19	True				
ANR	469873	ExpressionStatement		621:89:20441:20441	469832	20	True				
ANR	469874	ExpressionStatement	arminsn -> jmp = arminsn -> pc + offset	623:1:20445:20478	469832	21	True				
ANR	469875	AssignmentExpression	arminsn -> jmp = arminsn -> pc + offset		469832	0		=			
ANR	469876	PtrMemberAccess	arminsn -> jmp		469832	0					
ANR	469877	Identifier	arminsn		469832	0					
ANR	469878	Identifier	jmp		469832	1					
ANR	469879	AdditiveExpression	arminsn -> pc + offset		469832	1		+			
ANR	469880	PtrMemberAccess	arminsn -> pc		469832	0					
ANR	469881	Identifier	arminsn		469832	0					
ANR	469882	Identifier	pc		469832	1					
ANR	469883	Identifier	offset		469832	1					
ANR	469884	ReturnStatement	return 0 ;	624:1:20481:20489	469832	22	True				
ANR	469885	PrimaryExpression	0		469832	0					
ANR	469886	ReturnType	static ut32		469832	1					
ANR	469887	Identifier	thumb2_disasm_branchlinked		469832	2					
ANR	469888	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		469832	3					
ANR	469889	Parameter	struct winedbg_arm_insn * arminsn	619:39:20227:20258	469832	0	True				
ANR	469890	ParameterType	struct winedbg_arm_insn *		469832	0					
ANR	469891	Identifier	arminsn		469832	1					
ANR	469892	Parameter	ut32 inst	619:73:20261:20269	469832	1	True				
ANR	469893	ParameterType	ut32		469832	0					
ANR	469894	Identifier	inst		469832	1					
ANR	469895	CFGEntryNode	ENTRY		469832		True				
ANR	469896	CFGExitNode	EXIT		469832		True				
ANR	469897	Symbol	* arminsn		469832						
ANR	469898	Symbol	arminsn -> pc		469832						
ANR	469899	Symbol	offset		469832						
ANR	469900	Symbol	inst		469832						
ANR	469901	Symbol	arminsn		469832						
ANR	469902	Symbol	arminsn -> jmp		469832						
ANR	469903	Function	thumb2_disasm_misc	627:0:20494:21432							
ANR	469904	FunctionDef	"thumb2_disasm_misc (struct winedbg_arm_insn * arminsn , ut32 inst)"		469903	0					
ANR	469905	CompoundStatement		627:76:20570:21432	469903	0					
ANR	469906	IdentifierDeclStatement	ut16 op1 = ( inst >> 20 ) & 0x03 ;	628:1:20573:20603	469903	0	True				
ANR	469907	IdentifierDecl	op1 = ( inst >> 20 ) & 0x03		469903	0					
ANR	469908	IdentifierDeclType	ut16		469903	0					
ANR	469909	Identifier	op1		469903	1					
ANR	469910	AssignmentExpression	op1 = ( inst >> 20 ) & 0x03		469903	2		=			
ANR	469911	Identifier	op1		469903	0					
ANR	469912	BitAndExpression	( inst >> 20 ) & 0x03		469903	1		&			
ANR	469913	ShiftExpression	inst >> 20		469903	0		>>			
ANR	469914	Identifier	inst		469903	0					
ANR	469915	PrimaryExpression	20		469903	1					
ANR	469916	PrimaryExpression	0x03		469903	1					
ANR	469917	IdentifierDeclStatement	ut16 op2 = ( inst >> 4 ) & 0x03 ;	629:1:20606:20635	469903	1	True				
ANR	469918	IdentifierDecl	op2 = ( inst >> 4 ) & 0x03		469903	0					
ANR	469919	IdentifierDeclType	ut16		469903	0					
ANR	469920	Identifier	op2		469903	1					
ANR	469921	AssignmentExpression	op2 = ( inst >> 4 ) & 0x03		469903	2		=			
ANR	469922	Identifier	op2		469903	0					
ANR	469923	BitAndExpression	( inst >> 4 ) & 0x03		469903	1		&			
ANR	469924	ShiftExpression	inst >> 4		469903	0		>>			
ANR	469925	Identifier	inst		469903	0					
ANR	469926	PrimaryExpression	4		469903	1					
ANR	469927	PrimaryExpression	0x03		469903	1					
ANR	469928	IfStatement	"if ( get_nibble ( inst , 4 ) != get_nibble ( inst , 0 ) )"		469903	2					
ANR	469929	Condition	"get_nibble ( inst , 4 ) != get_nibble ( inst , 0 )"	631:5:20643:20686	469903	0	True				
ANR	469930	EqualityExpression	"get_nibble ( inst , 4 ) != get_nibble ( inst , 0 )"		469903	0		!=			
ANR	469931	CallExpression	"get_nibble ( inst , 4 )"		469903	0					
ANR	469932	Callee	get_nibble		469903	0					
ANR	469933	Identifier	get_nibble		469903	0					
ANR	469934	ArgumentList	inst		469903	1					
ANR	469935	Argument	inst		469903	0					
ANR	469936	Identifier	inst		469903	0					
ANR	469937	Argument	4		469903	1					
ANR	469938	PrimaryExpression	4		469903	0					
ANR	469939	CallExpression	"get_nibble ( inst , 0 )"		469903	1					
ANR	469940	Callee	get_nibble		469903	0					
ANR	469941	Identifier	get_nibble		469903	0					
ANR	469942	ArgumentList	inst		469903	1					
ANR	469943	Argument	inst		469903	0					
ANR	469944	Identifier	inst		469903	0					
ANR	469945	Argument	0		469903	1					
ANR	469946	PrimaryExpression	0		469903	0					
ANR	469947	CompoundStatement		5:51:118:118	469903	1					
ANR	469948	ReturnStatement	return inst ;	632:2:20693:20704	469903	0	True				
ANR	469949	Identifier	inst		469903	0					
ANR	469950	IfStatement	if ( op1 == 3 && op2 == 0 )		469903	3					
ANR	469951	Condition	op1 == 3 && op2 == 0	635:5:20715:20734	469903	0	True				
ANR	469952	AndExpression	op1 == 3 && op2 == 0		469903	0		&&			
ANR	469953	EqualityExpression	op1 == 3		469903	0		==			
ANR	469954	Identifier	op1		469903	0					
ANR	469955	PrimaryExpression	3		469903	1					
ANR	469956	EqualityExpression	op2 == 0		469903	1		==			
ANR	469957	Identifier	op2		469903	0					
ANR	469958	PrimaryExpression	0		469903	1					
ANR	469959	CompoundStatement		9:27:166:166	469903	1					
ANR	469960	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""clz %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	636:2:20741:20875	469903	0	True				
ANR	469961	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""clz %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		469903	0		=			
ANR	469962	PtrMemberAccess	arminsn -> str_asm		469903	0					
ANR	469963	Identifier	arminsn		469903	0					
ANR	469964	Identifier	str_asm		469903	1					
ANR	469965	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""clz %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		469903	1					
ANR	469966	Callee	r_str_appendf		469903	0					
ANR	469967	Identifier	r_str_appendf		469903	0					
ANR	469968	ArgumentList	arminsn -> str_asm		469903	1					
ANR	469969	Argument	arminsn -> str_asm		469903	0					
ANR	469970	PtrMemberAccess	arminsn -> str_asm		469903	0					
ANR	469971	Identifier	arminsn		469903	0					
ANR	469972	Identifier	str_asm		469903	1					
ANR	469973	Argument	"""clz %s, %s """		469903	1					
ANR	469974	PrimaryExpression	"""clz %s, %s """		469903	0					
ANR	469975	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		469903	2					
ANR	469976	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		469903	0					
ANR	469977	Identifier	tbl_regs		469903	0					
ANR	469978	CallExpression	"get_nibble ( inst , 2 )"		469903	1					
ANR	469979	Callee	get_nibble		469903	0					
ANR	469980	Identifier	get_nibble		469903	0					
ANR	469981	ArgumentList	inst		469903	1					
ANR	469982	Argument	inst		469903	0					
ANR	469983	Identifier	inst		469903	0					
ANR	469984	Argument	2		469903	1					
ANR	469985	PrimaryExpression	2		469903	0					
ANR	469986	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		469903	3					
ANR	469987	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		469903	0					
ANR	469988	Identifier	tbl_regs		469903	0					
ANR	469989	CallExpression	"get_nibble ( inst , 0 )"		469903	1					
ANR	469990	Callee	get_nibble		469903	0					
ANR	469991	Identifier	get_nibble		469903	0					
ANR	469992	ArgumentList	inst		469903	1					
ANR	469993	Argument	inst		469903	0					
ANR	469994	Identifier	inst		469903	0					
ANR	469995	Argument	0		469903	1					
ANR	469996	PrimaryExpression	0		469903	0					
ANR	469997	ReturnStatement	return 0 ;	638:2:20879:20887	469903	1	True				
ANR	469998	PrimaryExpression	0		469903	0					
ANR	469999	IfStatement	if ( op1 == 1 )		469903	4					
ANR	470000	Condition	op1 == 1	641:5:20898:20905	469903	0	True				
ANR	470001	EqualityExpression	op1 == 1		469903	0		==			
ANR	470002	Identifier	op1		469903	0					
ANR	470003	PrimaryExpression	1		469903	1					
ANR	470004	CompoundStatement		15:15:337:337	469903	1					
ANR	470005	SwitchStatement	switch ( op2 )		469903	0					
ANR	470006	Condition	op2	642:10:20920:20922	469903	0	True				
ANR	470007	Identifier	op2		469903	0					
ANR	470008	CompoundStatement		16:15:354:354	469903	1					
ANR	470009	Label	case 0 :	643:2:20929:20935	469903	0	True				
ANR	470010	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""rev "" )"	644:3:20940:20999	469903	1	True				
ANR	470011	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""rev "" )"		469903	0		=			
ANR	470012	PtrMemberAccess	arminsn -> str_asm		469903	0					
ANR	470013	Identifier	arminsn		469903	0					
ANR	470014	Identifier	str_asm		469903	1					
ANR	470015	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""rev "" )"		469903	1					
ANR	470016	Callee	r_str_appendf		469903	0					
ANR	470017	Identifier	r_str_appendf		469903	0					
ANR	470018	ArgumentList	arminsn -> str_asm		469903	1					
ANR	470019	Argument	arminsn -> str_asm		469903	0					
ANR	470020	PtrMemberAccess	arminsn -> str_asm		469903	0					
ANR	470021	Identifier	arminsn		469903	0					
ANR	470022	Identifier	str_asm		469903	1					
ANR	470023	Argument	"""rev """		469903	1					
ANR	470024	PrimaryExpression	"""rev """		469903	0					
ANR	470025	BreakStatement	break ;	645:3:21004:21009	469903	2	True				
ANR	470026	Label	case 1 :	646:2:21013:21019	469903	3	True				
ANR	470027	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""rev16 "" )"	647:3:21024:21085	469903	4	True				
ANR	470028	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""rev16 "" )"		469903	0		=			
ANR	470029	PtrMemberAccess	arminsn -> str_asm		469903	0					
ANR	470030	Identifier	arminsn		469903	0					
ANR	470031	Identifier	str_asm		469903	1					
ANR	470032	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""rev16 "" )"		469903	1					
ANR	470033	Callee	r_str_appendf		469903	0					
ANR	470034	Identifier	r_str_appendf		469903	0					
ANR	470035	ArgumentList	arminsn -> str_asm		469903	1					
ANR	470036	Argument	arminsn -> str_asm		469903	0					
ANR	470037	PtrMemberAccess	arminsn -> str_asm		469903	0					
ANR	470038	Identifier	arminsn		469903	0					
ANR	470039	Identifier	str_asm		469903	1					
ANR	470040	Argument	"""rev16 """		469903	1					
ANR	470041	PrimaryExpression	"""rev16 """		469903	0					
ANR	470042	BreakStatement	break ;	648:3:21090:21095	469903	5	True				
ANR	470043	Label	case 2 :	649:2:21099:21105	469903	6	True				
ANR	470044	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""rbit "" )"	650:3:21110:21170	469903	7	True				
ANR	470045	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""rbit "" )"		469903	0		=			
ANR	470046	PtrMemberAccess	arminsn -> str_asm		469903	0					
ANR	470047	Identifier	arminsn		469903	0					
ANR	470048	Identifier	str_asm		469903	1					
ANR	470049	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""rbit "" )"		469903	1					
ANR	470050	Callee	r_str_appendf		469903	0					
ANR	470051	Identifier	r_str_appendf		469903	0					
ANR	470052	ArgumentList	arminsn -> str_asm		469903	1					
ANR	470053	Argument	arminsn -> str_asm		469903	0					
ANR	470054	PtrMemberAccess	arminsn -> str_asm		469903	0					
ANR	470055	Identifier	arminsn		469903	0					
ANR	470056	Identifier	str_asm		469903	1					
ANR	470057	Argument	"""rbit """		469903	1					
ANR	470058	PrimaryExpression	"""rbit """		469903	0					
ANR	470059	BreakStatement	break ;	651:3:21175:21180	469903	8	True				
ANR	470060	Label	case 3 :	652:2:21184:21190	469903	9	True				
ANR	470061	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""revsh "" )"	653:3:21195:21256	469903	10	True				
ANR	470062	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""revsh "" )"		469903	0		=			
ANR	470063	PtrMemberAccess	arminsn -> str_asm		469903	0					
ANR	470064	Identifier	arminsn		469903	0					
ANR	470065	Identifier	str_asm		469903	1					
ANR	470066	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""revsh "" )"		469903	1					
ANR	470067	Callee	r_str_appendf		469903	0					
ANR	470068	Identifier	r_str_appendf		469903	0					
ANR	470069	ArgumentList	arminsn -> str_asm		469903	1					
ANR	470070	Argument	arminsn -> str_asm		469903	0					
ANR	470071	PtrMemberAccess	arminsn -> str_asm		469903	0					
ANR	470072	Identifier	arminsn		469903	0					
ANR	470073	Identifier	str_asm		469903	1					
ANR	470074	Argument	"""revsh """		469903	1					
ANR	470075	PrimaryExpression	"""revsh """		469903	0					
ANR	470076	BreakStatement	break ;	654:3:21261:21266	469903	11	True				
ANR	470077	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	656:2:21274:21400	469903	1	True				
ANR	470078	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		469903	0		=			
ANR	470079	PtrMemberAccess	arminsn -> str_asm		469903	0					
ANR	470080	Identifier	arminsn		469903	0					
ANR	470081	Identifier	str_asm		469903	1					
ANR	470082	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		469903	1					
ANR	470083	Callee	r_str_appendf		469903	0					
ANR	470084	Identifier	r_str_appendf		469903	0					
ANR	470085	ArgumentList	arminsn -> str_asm		469903	1					
ANR	470086	Argument	arminsn -> str_asm		469903	0					
ANR	470087	PtrMemberAccess	arminsn -> str_asm		469903	0					
ANR	470088	Identifier	arminsn		469903	0					
ANR	470089	Identifier	str_asm		469903	1					
ANR	470090	Argument	"""%s, %s """		469903	1					
ANR	470091	PrimaryExpression	"""%s, %s """		469903	0					
ANR	470092	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		469903	2					
ANR	470093	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		469903	0					
ANR	470094	Identifier	tbl_regs		469903	0					
ANR	470095	CallExpression	"get_nibble ( inst , 2 )"		469903	1					
ANR	470096	Callee	get_nibble		469903	0					
ANR	470097	Identifier	get_nibble		469903	0					
ANR	470098	ArgumentList	inst		469903	1					
ANR	470099	Argument	inst		469903	0					
ANR	470100	Identifier	inst		469903	0					
ANR	470101	Argument	2		469903	1					
ANR	470102	PrimaryExpression	2		469903	0					
ANR	470103	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		469903	3					
ANR	470104	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		469903	0					
ANR	470105	Identifier	tbl_regs		469903	0					
ANR	470106	CallExpression	"get_nibble ( inst , 0 )"		469903	1					
ANR	470107	Callee	get_nibble		469903	0					
ANR	470108	Identifier	get_nibble		469903	0					
ANR	470109	ArgumentList	inst		469903	1					
ANR	470110	Argument	inst		469903	0					
ANR	470111	Identifier	inst		469903	0					
ANR	470112	Argument	0		469903	1					
ANR	470113	PrimaryExpression	0		469903	0					
ANR	470114	ReturnStatement	return 0 ;	657:2:21404:21412	469903	2	True				
ANR	470115	PrimaryExpression	0		469903	0					
ANR	470116	ReturnStatement	return inst ;	660:1:21419:21430	469903	5	True				
ANR	470117	Identifier	inst		469903	0					
ANR	470118	ReturnType	static ut32		469903	1					
ANR	470119	Identifier	thumb2_disasm_misc		469903	2					
ANR	470120	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		469903	3					
ANR	470121	Parameter	struct winedbg_arm_insn * arminsn	627:31:20525:20556	469903	0	True				
ANR	470122	ParameterType	struct winedbg_arm_insn *		469903	0					
ANR	470123	Identifier	arminsn		469903	1					
ANR	470124	Parameter	ut32 inst	627:65:20559:20567	469903	1	True				
ANR	470125	ParameterType	ut32		469903	0					
ANR	470126	Identifier	inst		469903	1					
ANR	470127	CFGEntryNode	ENTRY		469903		True				
ANR	470128	CFGExitNode	EXIT		469903		True				
ANR	470129	Symbol	op2		469903						
ANR	470130	Symbol	* arminsn		469903						
ANR	470131	Symbol	op1		469903						
ANR	470132	Symbol	get_nibble		469903						
ANR	470133	Symbol	tbl_regs		469903						
ANR	470134	Symbol	* tbl_regs		469903						
ANR	470135	Symbol	inst		469903						
ANR	470136	Symbol	r_str_appendf		469903						
ANR	470137	Symbol	* get_nibble		469903						
ANR	470138	Symbol	arminsn		469903						
ANR	470139	Symbol	arminsn -> str_asm		469903						
ANR	470140	Function	thumb2_disasm_mul	663:0:21435:22398							
ANR	470141	FunctionDef	"thumb2_disasm_mul (struct winedbg_arm_insn * arminsn , ut32 inst)"		470140	0					
ANR	470142	CompoundStatement		663:75:21510:22398	470140	0					
ANR	470143	IdentifierDeclStatement	ut16 op1 = ( inst >> 20 ) & 0x07 ;	664:1:21513:21543	470140	0	True				
ANR	470144	IdentifierDecl	op1 = ( inst >> 20 ) & 0x07		470140	0					
ANR	470145	IdentifierDeclType	ut16		470140	0					
ANR	470146	Identifier	op1		470140	1					
ANR	470147	AssignmentExpression	op1 = ( inst >> 20 ) & 0x07		470140	2		=			
ANR	470148	Identifier	op1		470140	0					
ANR	470149	BitAndExpression	( inst >> 20 ) & 0x07		470140	1		&			
ANR	470150	ShiftExpression	inst >> 20		470140	0		>>			
ANR	470151	Identifier	inst		470140	0					
ANR	470152	PrimaryExpression	20		470140	1					
ANR	470153	PrimaryExpression	0x07		470140	1					
ANR	470154	IdentifierDeclStatement	ut16 op2 = ( inst >> 4 ) & 0x03 ;	665:1:21546:21575	470140	1	True				
ANR	470155	IdentifierDecl	op2 = ( inst >> 4 ) & 0x03		470140	0					
ANR	470156	IdentifierDeclType	ut16		470140	0					
ANR	470157	Identifier	op2		470140	1					
ANR	470158	AssignmentExpression	op2 = ( inst >> 4 ) & 0x03		470140	2		=			
ANR	470159	Identifier	op2		470140	0					
ANR	470160	BitAndExpression	( inst >> 4 ) & 0x03		470140	1		&			
ANR	470161	ShiftExpression	inst >> 4		470140	0		>>			
ANR	470162	Identifier	inst		470140	0					
ANR	470163	PrimaryExpression	4		470140	1					
ANR	470164	PrimaryExpression	0x03		470140	1					
ANR	470165	IfStatement	if ( op1 )		470140	2					
ANR	470166	Condition	op1	667:5:21583:21585	470140	0	True				
ANR	470167	Identifier	op1		470140	0					
ANR	470168	CompoundStatement		5:10:77:77	470140	1					
ANR	470169	ReturnStatement	return inst ;	668:2:21592:21603	470140	0	True				
ANR	470170	Identifier	inst		470140	0					
ANR	470171	IfStatement	"if ( op2 == 0 && get_nibble ( inst , 3 ) != 0xf )"		470140	3					
ANR	470172	Condition	"op2 == 0 && get_nibble ( inst , 3 ) != 0xf"	671:5:21614:21652	470140	0	True				
ANR	470173	AndExpression	"op2 == 0 && get_nibble ( inst , 3 ) != 0xf"		470140	0		&&			
ANR	470174	EqualityExpression	op2 == 0		470140	0		==			
ANR	470175	Identifier	op2		470140	0					
ANR	470176	PrimaryExpression	0		470140	1					
ANR	470177	EqualityExpression	"get_nibble ( inst , 3 ) != 0xf"		470140	1		!=			
ANR	470178	CallExpression	"get_nibble ( inst , 3 )"		470140	0					
ANR	470179	Callee	get_nibble		470140	0					
ANR	470180	Identifier	get_nibble		470140	0					
ANR	470181	ArgumentList	inst		470140	1					
ANR	470182	Argument	inst		470140	0					
ANR	470183	Identifier	inst		470140	0					
ANR	470184	Argument	3		470140	1					
ANR	470185	PrimaryExpression	3		470140	0					
ANR	470186	PrimaryExpression	0xf		470140	1					
ANR	470187	CompoundStatement		9:46:144:144	470140	1					
ANR	470188	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mla %s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"	672:2:21659:21873	470140	0	True				
ANR	470189	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mla %s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"		470140	0		=			
ANR	470190	PtrMemberAccess	arminsn -> str_asm		470140	0					
ANR	470191	Identifier	arminsn		470140	0					
ANR	470192	Identifier	str_asm		470140	1					
ANR	470193	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mla %s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"		470140	1					
ANR	470194	Callee	r_str_appendf		470140	0					
ANR	470195	Identifier	r_str_appendf		470140	0					
ANR	470196	ArgumentList	arminsn -> str_asm		470140	1					
ANR	470197	Argument	arminsn -> str_asm		470140	0					
ANR	470198	PtrMemberAccess	arminsn -> str_asm		470140	0					
ANR	470199	Identifier	arminsn		470140	0					
ANR	470200	Identifier	str_asm		470140	1					
ANR	470201	Argument	"""mla %s, %s, %s, %s """		470140	1					
ANR	470202	PrimaryExpression	"""mla %s, %s, %s, %s """		470140	0					
ANR	470203	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		470140	2					
ANR	470204	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		470140	0					
ANR	470205	Identifier	tbl_regs		470140	0					
ANR	470206	CallExpression	"get_nibble ( inst , 2 )"		470140	1					
ANR	470207	Callee	get_nibble		470140	0					
ANR	470208	Identifier	get_nibble		470140	0					
ANR	470209	ArgumentList	inst		470140	1					
ANR	470210	Argument	inst		470140	0					
ANR	470211	Identifier	inst		470140	0					
ANR	470212	Argument	2		470140	1					
ANR	470213	PrimaryExpression	2		470140	0					
ANR	470214	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		470140	3					
ANR	470215	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		470140	0					
ANR	470216	Identifier	tbl_regs		470140	0					
ANR	470217	CallExpression	"get_nibble ( inst , 4 )"		470140	1					
ANR	470218	Callee	get_nibble		470140	0					
ANR	470219	Identifier	get_nibble		470140	0					
ANR	470220	ArgumentList	inst		470140	1					
ANR	470221	Argument	inst		470140	0					
ANR	470222	Identifier	inst		470140	0					
ANR	470223	Argument	4		470140	1					
ANR	470224	PrimaryExpression	4		470140	0					
ANR	470225	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		470140	4					
ANR	470226	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		470140	0					
ANR	470227	Identifier	tbl_regs		470140	0					
ANR	470228	CallExpression	"get_nibble ( inst , 0 )"		470140	1					
ANR	470229	Callee	get_nibble		470140	0					
ANR	470230	Identifier	get_nibble		470140	0					
ANR	470231	ArgumentList	inst		470140	1					
ANR	470232	Argument	inst		470140	0					
ANR	470233	Identifier	inst		470140	0					
ANR	470234	Argument	0		470140	1					
ANR	470235	PrimaryExpression	0		470140	0					
ANR	470236	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		470140	5					
ANR	470237	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		470140	0					
ANR	470238	Identifier	tbl_regs		470140	0					
ANR	470239	CallExpression	"get_nibble ( inst , 3 )"		470140	1					
ANR	470240	Callee	get_nibble		470140	0					
ANR	470241	Identifier	get_nibble		470140	0					
ANR	470242	ArgumentList	inst		470140	1					
ANR	470243	Argument	inst		470140	0					
ANR	470244	Identifier	inst		470140	0					
ANR	470245	Argument	3		470140	1					
ANR	470246	PrimaryExpression	3		470140	0					
ANR	470247	ReturnStatement	return 0 ;	676:2:21877:21885	470140	1	True				
ANR	470248	PrimaryExpression	0		470140	0					
ANR	470249	IfStatement	"if ( op2 == 0 && get_nibble ( inst , 3 ) == 0xf )"		470140	4					
ANR	470250	Condition	"op2 == 0 && get_nibble ( inst , 3 ) == 0xf"	679:5:21896:21934	470140	0	True				
ANR	470251	AndExpression	"op2 == 0 && get_nibble ( inst , 3 ) == 0xf"		470140	0		&&			
ANR	470252	EqualityExpression	op2 == 0		470140	0		==			
ANR	470253	Identifier	op2		470140	0					
ANR	470254	PrimaryExpression	0		470140	1					
ANR	470255	EqualityExpression	"get_nibble ( inst , 3 ) == 0xf"		470140	1		==			
ANR	470256	CallExpression	"get_nibble ( inst , 3 )"		470140	0					
ANR	470257	Callee	get_nibble		470140	0					
ANR	470258	Identifier	get_nibble		470140	0					
ANR	470259	ArgumentList	inst		470140	1					
ANR	470260	Argument	inst		470140	0					
ANR	470261	Identifier	inst		470140	0					
ANR	470262	Argument	3		470140	1					
ANR	470263	PrimaryExpression	3		470140	0					
ANR	470264	PrimaryExpression	0xf		470140	1					
ANR	470265	CompoundStatement		17:46:426:426	470140	1					
ANR	470266	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mul %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	680:2:21941:22115	470140	0	True				
ANR	470267	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mul %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		470140	0		=			
ANR	470268	PtrMemberAccess	arminsn -> str_asm		470140	0					
ANR	470269	Identifier	arminsn		470140	0					
ANR	470270	Identifier	str_asm		470140	1					
ANR	470271	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mul %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		470140	1					
ANR	470272	Callee	r_str_appendf		470140	0					
ANR	470273	Identifier	r_str_appendf		470140	0					
ANR	470274	ArgumentList	arminsn -> str_asm		470140	1					
ANR	470275	Argument	arminsn -> str_asm		470140	0					
ANR	470276	PtrMemberAccess	arminsn -> str_asm		470140	0					
ANR	470277	Identifier	arminsn		470140	0					
ANR	470278	Identifier	str_asm		470140	1					
ANR	470279	Argument	"""mul %s, %s, %s """		470140	1					
ANR	470280	PrimaryExpression	"""mul %s, %s, %s """		470140	0					
ANR	470281	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		470140	2					
ANR	470282	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		470140	0					
ANR	470283	Identifier	tbl_regs		470140	0					
ANR	470284	CallExpression	"get_nibble ( inst , 2 )"		470140	1					
ANR	470285	Callee	get_nibble		470140	0					
ANR	470286	Identifier	get_nibble		470140	0					
ANR	470287	ArgumentList	inst		470140	1					
ANR	470288	Argument	inst		470140	0					
ANR	470289	Identifier	inst		470140	0					
ANR	470290	Argument	2		470140	1					
ANR	470291	PrimaryExpression	2		470140	0					
ANR	470292	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		470140	3					
ANR	470293	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		470140	0					
ANR	470294	Identifier	tbl_regs		470140	0					
ANR	470295	CallExpression	"get_nibble ( inst , 4 )"		470140	1					
ANR	470296	Callee	get_nibble		470140	0					
ANR	470297	Identifier	get_nibble		470140	0					
ANR	470298	ArgumentList	inst		470140	1					
ANR	470299	Argument	inst		470140	0					
ANR	470300	Identifier	inst		470140	0					
ANR	470301	Argument	4		470140	1					
ANR	470302	PrimaryExpression	4		470140	0					
ANR	470303	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		470140	4					
ANR	470304	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		470140	0					
ANR	470305	Identifier	tbl_regs		470140	0					
ANR	470306	CallExpression	"get_nibble ( inst , 0 )"		470140	1					
ANR	470307	Callee	get_nibble		470140	0					
ANR	470308	Identifier	get_nibble		470140	0					
ANR	470309	ArgumentList	inst		470140	1					
ANR	470310	Argument	inst		470140	0					
ANR	470311	Identifier	inst		470140	0					
ANR	470312	Argument	0		470140	1					
ANR	470313	PrimaryExpression	0		470140	0					
ANR	470314	ReturnStatement	return 0 ;	683:2:22119:22127	470140	1	True				
ANR	470315	PrimaryExpression	0		470140	0					
ANR	470316	IfStatement	if ( op2 == 1 )		470140	5					
ANR	470317	Condition	op2 == 1	686:5:22138:22145	470140	0	True				
ANR	470318	EqualityExpression	op2 == 1		470140	0		==			
ANR	470319	Identifier	op2		470140	0					
ANR	470320	PrimaryExpression	1		470140	1					
ANR	470321	CompoundStatement		24:15:637:637	470140	1					
ANR	470322	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mls %s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"	687:2:22152:22366	470140	0	True				
ANR	470323	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mls %s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"		470140	0		=			
ANR	470324	PtrMemberAccess	arminsn -> str_asm		470140	0					
ANR	470325	Identifier	arminsn		470140	0					
ANR	470326	Identifier	str_asm		470140	1					
ANR	470327	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mls %s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"		470140	1					
ANR	470328	Callee	r_str_appendf		470140	0					
ANR	470329	Identifier	r_str_appendf		470140	0					
ANR	470330	ArgumentList	arminsn -> str_asm		470140	1					
ANR	470331	Argument	arminsn -> str_asm		470140	0					
ANR	470332	PtrMemberAccess	arminsn -> str_asm		470140	0					
ANR	470333	Identifier	arminsn		470140	0					
ANR	470334	Identifier	str_asm		470140	1					
ANR	470335	Argument	"""mls %s, %s, %s, %s """		470140	1					
ANR	470336	PrimaryExpression	"""mls %s, %s, %s, %s """		470140	0					
ANR	470337	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		470140	2					
ANR	470338	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		470140	0					
ANR	470339	Identifier	tbl_regs		470140	0					
ANR	470340	CallExpression	"get_nibble ( inst , 2 )"		470140	1					
ANR	470341	Callee	get_nibble		470140	0					
ANR	470342	Identifier	get_nibble		470140	0					
ANR	470343	ArgumentList	inst		470140	1					
ANR	470344	Argument	inst		470140	0					
ANR	470345	Identifier	inst		470140	0					
ANR	470346	Argument	2		470140	1					
ANR	470347	PrimaryExpression	2		470140	0					
ANR	470348	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		470140	3					
ANR	470349	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		470140	0					
ANR	470350	Identifier	tbl_regs		470140	0					
ANR	470351	CallExpression	"get_nibble ( inst , 4 )"		470140	1					
ANR	470352	Callee	get_nibble		470140	0					
ANR	470353	Identifier	get_nibble		470140	0					
ANR	470354	ArgumentList	inst		470140	1					
ANR	470355	Argument	inst		470140	0					
ANR	470356	Identifier	inst		470140	0					
ANR	470357	Argument	4		470140	1					
ANR	470358	PrimaryExpression	4		470140	0					
ANR	470359	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		470140	4					
ANR	470360	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		470140	0					
ANR	470361	Identifier	tbl_regs		470140	0					
ANR	470362	CallExpression	"get_nibble ( inst , 0 )"		470140	1					
ANR	470363	Callee	get_nibble		470140	0					
ANR	470364	Identifier	get_nibble		470140	0					
ANR	470365	ArgumentList	inst		470140	1					
ANR	470366	Argument	inst		470140	0					
ANR	470367	Identifier	inst		470140	0					
ANR	470368	Argument	0		470140	1					
ANR	470369	PrimaryExpression	0		470140	0					
ANR	470370	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		470140	5					
ANR	470371	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		470140	0					
ANR	470372	Identifier	tbl_regs		470140	0					
ANR	470373	CallExpression	"get_nibble ( inst , 3 )"		470140	1					
ANR	470374	Callee	get_nibble		470140	0					
ANR	470375	Identifier	get_nibble		470140	0					
ANR	470376	ArgumentList	inst		470140	1					
ANR	470377	Argument	inst		470140	0					
ANR	470378	Identifier	inst		470140	0					
ANR	470379	Argument	3		470140	1					
ANR	470380	PrimaryExpression	3		470140	0					
ANR	470381	ReturnStatement	return 0 ;	691:2:22370:22378	470140	1	True				
ANR	470382	PrimaryExpression	0		470140	0					
ANR	470383	ReturnStatement	return inst ;	694:1:22385:22396	470140	6	True				
ANR	470384	Identifier	inst		470140	0					
ANR	470385	ReturnType	static ut32		470140	1					
ANR	470386	Identifier	thumb2_disasm_mul		470140	2					
ANR	470387	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		470140	3					
ANR	470388	Parameter	struct winedbg_arm_insn * arminsn	663:30:21465:21496	470140	0	True				
ANR	470389	ParameterType	struct winedbg_arm_insn *		470140	0					
ANR	470390	Identifier	arminsn		470140	1					
ANR	470391	Parameter	ut32 inst	663:64:21499:21507	470140	1	True				
ANR	470392	ParameterType	ut32		470140	0					
ANR	470393	Identifier	inst		470140	1					
ANR	470394	CFGEntryNode	ENTRY		470140		True				
ANR	470395	CFGExitNode	EXIT		470140		True				
ANR	470396	Symbol	op2		470140						
ANR	470397	Symbol	* arminsn		470140						
ANR	470398	Symbol	op1		470140						
ANR	470399	Symbol	get_nibble		470140						
ANR	470400	Symbol	* tbl_regs		470140						
ANR	470401	Symbol	tbl_regs		470140						
ANR	470402	Symbol	inst		470140						
ANR	470403	Symbol	r_str_appendf		470140						
ANR	470404	Symbol	* get_nibble		470140						
ANR	470405	Symbol	arminsn		470140						
ANR	470406	Symbol	arminsn -> str_asm		470140						
ANR	470407	Function	thumb2_disasm_longmuldiv	697:0:22401:23626							
ANR	470408	FunctionDef	"thumb2_disasm_longmuldiv (struct winedbg_arm_insn * arminsn , ut32 inst)"		470407	0					
ANR	470409	CompoundStatement		697:82:22483:23626	470407	0					
ANR	470410	IdentifierDeclStatement	ut16 op1 = ( inst >> 20 ) & 0x07 ;	698:1:22486:22516	470407	0	True				
ANR	470411	IdentifierDecl	op1 = ( inst >> 20 ) & 0x07		470407	0					
ANR	470412	IdentifierDeclType	ut16		470407	0					
ANR	470413	Identifier	op1		470407	1					
ANR	470414	AssignmentExpression	op1 = ( inst >> 20 ) & 0x07		470407	2		=			
ANR	470415	Identifier	op1		470407	0					
ANR	470416	BitAndExpression	( inst >> 20 ) & 0x07		470407	1		&			
ANR	470417	ShiftExpression	inst >> 20		470407	0		>>			
ANR	470418	Identifier	inst		470407	0					
ANR	470419	PrimaryExpression	20		470407	1					
ANR	470420	PrimaryExpression	0x07		470407	1					
ANR	470421	IdentifierDeclStatement	ut16 op2 = ( inst >> 4 ) & 0x0f ;	699:1:22519:22548	470407	1	True				
ANR	470422	IdentifierDecl	op2 = ( inst >> 4 ) & 0x0f		470407	0					
ANR	470423	IdentifierDeclType	ut16		470407	0					
ANR	470424	Identifier	op2		470407	1					
ANR	470425	AssignmentExpression	op2 = ( inst >> 4 ) & 0x0f		470407	2		=			
ANR	470426	Identifier	op2		470407	0					
ANR	470427	BitAndExpression	( inst >> 4 ) & 0x0f		470407	1		&			
ANR	470428	ShiftExpression	inst >> 4		470407	0		>>			
ANR	470429	Identifier	inst		470407	0					
ANR	470430	PrimaryExpression	4		470407	1					
ANR	470431	PrimaryExpression	0x0f		470407	1					
ANR	470432	IfStatement	if ( op2 == 0 )		470407	2					
ANR	470433	Condition	op2 == 0	701:5:22556:22563	470407	0	True				
ANR	470434	EqualityExpression	op2 == 0		470407	0		==			
ANR	470435	Identifier	op2		470407	0					
ANR	470436	PrimaryExpression	0		470407	1					
ANR	470437	CompoundStatement		5:15:82:82	470407	1					
ANR	470438	SwitchStatement	switch ( op1 )		470407	0					
ANR	470439	Condition	op1	702:10:22578:22580	470407	0	True				
ANR	470440	Identifier	op1		470407	0					
ANR	470441	CompoundStatement		6:15:99:99	470407	1					
ANR	470442	Label	case 0 :	703:2:22587:22593	470407	0	True				
ANR	470443	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""smull "" )"	704:3:22598:22659	470407	1	True				
ANR	470444	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""smull "" )"		470407	0		=			
ANR	470445	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470446	Identifier	arminsn		470407	0					
ANR	470447	Identifier	str_asm		470407	1					
ANR	470448	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""smull "" )"		470407	1					
ANR	470449	Callee	r_str_appendf		470407	0					
ANR	470450	Identifier	r_str_appendf		470407	0					
ANR	470451	ArgumentList	arminsn -> str_asm		470407	1					
ANR	470452	Argument	arminsn -> str_asm		470407	0					
ANR	470453	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470454	Identifier	arminsn		470407	0					
ANR	470455	Identifier	str_asm		470407	1					
ANR	470456	Argument	"""smull """		470407	1					
ANR	470457	PrimaryExpression	"""smull """		470407	0					
ANR	470458	BreakStatement	break ;	705:3:22664:22669	470407	2	True				
ANR	470459	Label	case 2 :	706:2:22673:22679	470407	3	True				
ANR	470460	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""umull "" )"	707:3:22684:22745	470407	4	True				
ANR	470461	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""umull "" )"		470407	0		=			
ANR	470462	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470463	Identifier	arminsn		470407	0					
ANR	470464	Identifier	str_asm		470407	1					
ANR	470465	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""umull "" )"		470407	1					
ANR	470466	Callee	r_str_appendf		470407	0					
ANR	470467	Identifier	r_str_appendf		470407	0					
ANR	470468	ArgumentList	arminsn -> str_asm		470407	1					
ANR	470469	Argument	arminsn -> str_asm		470407	0					
ANR	470470	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470471	Identifier	arminsn		470407	0					
ANR	470472	Identifier	str_asm		470407	1					
ANR	470473	Argument	"""umull """		470407	1					
ANR	470474	PrimaryExpression	"""umull """		470407	0					
ANR	470475	BreakStatement	break ;	708:3:22750:22755	470407	5	True				
ANR	470476	Label	case 4 :	709:2:22759:22765	470407	6	True				
ANR	470477	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""smlal "" )"	710:3:22770:22831	470407	7	True				
ANR	470478	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""smlal "" )"		470407	0		=			
ANR	470479	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470480	Identifier	arminsn		470407	0					
ANR	470481	Identifier	str_asm		470407	1					
ANR	470482	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""smlal "" )"		470407	1					
ANR	470483	Callee	r_str_appendf		470407	0					
ANR	470484	Identifier	r_str_appendf		470407	0					
ANR	470485	ArgumentList	arminsn -> str_asm		470407	1					
ANR	470486	Argument	arminsn -> str_asm		470407	0					
ANR	470487	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470488	Identifier	arminsn		470407	0					
ANR	470489	Identifier	str_asm		470407	1					
ANR	470490	Argument	"""smlal """		470407	1					
ANR	470491	PrimaryExpression	"""smlal """		470407	0					
ANR	470492	BreakStatement	break ;	711:3:22836:22841	470407	8	True				
ANR	470493	Label	case 6 :	712:2:22845:22851	470407	9	True				
ANR	470494	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""umlal "" )"	713:3:22856:22917	470407	10	True				
ANR	470495	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""umlal "" )"		470407	0		=			
ANR	470496	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470497	Identifier	arminsn		470407	0					
ANR	470498	Identifier	str_asm		470407	1					
ANR	470499	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""umlal "" )"		470407	1					
ANR	470500	Callee	r_str_appendf		470407	0					
ANR	470501	Identifier	r_str_appendf		470407	0					
ANR	470502	ArgumentList	arminsn -> str_asm		470407	1					
ANR	470503	Argument	arminsn -> str_asm		470407	0					
ANR	470504	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470505	Identifier	arminsn		470407	0					
ANR	470506	Identifier	str_asm		470407	1					
ANR	470507	Argument	"""umlal """		470407	1					
ANR	470508	PrimaryExpression	"""umlal """		470407	0					
ANR	470509	BreakStatement	break ;	714:3:22922:22927	470407	11	True				
ANR	470510	Label	default :	715:2:22931:22938	470407	12	True				
ANR	470511	Identifier	default		470407	0					
ANR	470512	ReturnStatement	return inst ;	716:3:22943:22954	470407	13	True				
ANR	470513	Identifier	inst		470407	0					
ANR	470514	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	718:2:22962:23168	470407	1	True				
ANR	470515	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		470407	0		=			
ANR	470516	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470517	Identifier	arminsn		470407	0					
ANR	470518	Identifier	str_asm		470407	1					
ANR	470519	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		470407	1					
ANR	470520	Callee	r_str_appendf		470407	0					
ANR	470521	Identifier	r_str_appendf		470407	0					
ANR	470522	ArgumentList	arminsn -> str_asm		470407	1					
ANR	470523	Argument	arminsn -> str_asm		470407	0					
ANR	470524	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470525	Identifier	arminsn		470407	0					
ANR	470526	Identifier	str_asm		470407	1					
ANR	470527	Argument	"""%s, %s, %s, %s """		470407	1					
ANR	470528	PrimaryExpression	"""%s, %s, %s, %s """		470407	0					
ANR	470529	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		470407	2					
ANR	470530	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		470407	0					
ANR	470531	Identifier	tbl_regs		470407	0					
ANR	470532	CallExpression	"get_nibble ( inst , 3 )"		470407	1					
ANR	470533	Callee	get_nibble		470407	0					
ANR	470534	Identifier	get_nibble		470407	0					
ANR	470535	ArgumentList	inst		470407	1					
ANR	470536	Argument	inst		470407	0					
ANR	470537	Identifier	inst		470407	0					
ANR	470538	Argument	3		470407	1					
ANR	470539	PrimaryExpression	3		470407	0					
ANR	470540	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		470407	3					
ANR	470541	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		470407	0					
ANR	470542	Identifier	tbl_regs		470407	0					
ANR	470543	CallExpression	"get_nibble ( inst , 2 )"		470407	1					
ANR	470544	Callee	get_nibble		470407	0					
ANR	470545	Identifier	get_nibble		470407	0					
ANR	470546	ArgumentList	inst		470407	1					
ANR	470547	Argument	inst		470407	0					
ANR	470548	Identifier	inst		470407	0					
ANR	470549	Argument	2		470407	1					
ANR	470550	PrimaryExpression	2		470407	0					
ANR	470551	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		470407	4					
ANR	470552	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		470407	0					
ANR	470553	Identifier	tbl_regs		470407	0					
ANR	470554	CallExpression	"get_nibble ( inst , 4 )"		470407	1					
ANR	470555	Callee	get_nibble		470407	0					
ANR	470556	Identifier	get_nibble		470407	0					
ANR	470557	ArgumentList	inst		470407	1					
ANR	470558	Argument	inst		470407	0					
ANR	470559	Identifier	inst		470407	0					
ANR	470560	Argument	4		470407	1					
ANR	470561	PrimaryExpression	4		470407	0					
ANR	470562	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		470407	5					
ANR	470563	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		470407	0					
ANR	470564	Identifier	tbl_regs		470407	0					
ANR	470565	CallExpression	"get_nibble ( inst , 0 )"		470407	1					
ANR	470566	Callee	get_nibble		470407	0					
ANR	470567	Identifier	get_nibble		470407	0					
ANR	470568	ArgumentList	inst		470407	1					
ANR	470569	Argument	inst		470407	0					
ANR	470570	Identifier	inst		470407	0					
ANR	470571	Argument	0		470407	1					
ANR	470572	PrimaryExpression	0		470407	0					
ANR	470573	ReturnStatement	return 0 ;	721:2:23172:23180	470407	2	True				
ANR	470574	PrimaryExpression	0		470407	0					
ANR	470575	IfStatement	if ( op2 == 0xffff )		470407	3					
ANR	470576	Condition	op2 == 0xffff	724:5:23191:23203	470407	0	True				
ANR	470577	EqualityExpression	op2 == 0xffff		470407	0		==			
ANR	470578	Identifier	op2		470407	0					
ANR	470579	PrimaryExpression	0xffff		470407	1					
ANR	470580	CompoundStatement		28:20:722:722	470407	1					
ANR	470581	SwitchStatement	switch ( op1 )		470407	0					
ANR	470582	Condition	op1	725:10:23218:23220	470407	0	True				
ANR	470583	Identifier	op1		470407	0					
ANR	470584	CompoundStatement		29:15:739:739	470407	1					
ANR	470585	Label	case 1 :	726:2:23227:23233	470407	0	True				
ANR	470586	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""sdiv "" )"	727:3:23238:23298	470407	1	True				
ANR	470587	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""sdiv "" )"		470407	0		=			
ANR	470588	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470589	Identifier	arminsn		470407	0					
ANR	470590	Identifier	str_asm		470407	1					
ANR	470591	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""sdiv "" )"		470407	1					
ANR	470592	Callee	r_str_appendf		470407	0					
ANR	470593	Identifier	r_str_appendf		470407	0					
ANR	470594	ArgumentList	arminsn -> str_asm		470407	1					
ANR	470595	Argument	arminsn -> str_asm		470407	0					
ANR	470596	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470597	Identifier	arminsn		470407	0					
ANR	470598	Identifier	str_asm		470407	1					
ANR	470599	Argument	"""sdiv """		470407	1					
ANR	470600	PrimaryExpression	"""sdiv """		470407	0					
ANR	470601	BreakStatement	break ;	728:3:23303:23308	470407	2	True				
ANR	470602	Label	case 3 :	729:2:23312:23318	470407	3	True				
ANR	470603	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""udiv "" )"	730:3:23323:23383	470407	4	True				
ANR	470604	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""udiv "" )"		470407	0		=			
ANR	470605	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470606	Identifier	arminsn		470407	0					
ANR	470607	Identifier	str_asm		470407	1					
ANR	470608	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""udiv "" )"		470407	1					
ANR	470609	Callee	r_str_appendf		470407	0					
ANR	470610	Identifier	r_str_appendf		470407	0					
ANR	470611	ArgumentList	arminsn -> str_asm		470407	1					
ANR	470612	Argument	arminsn -> str_asm		470407	0					
ANR	470613	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470614	Identifier	arminsn		470407	0					
ANR	470615	Identifier	str_asm		470407	1					
ANR	470616	Argument	"""udiv """		470407	1					
ANR	470617	PrimaryExpression	"""udiv """		470407	0					
ANR	470618	BreakStatement	break ;	731:3:23388:23393	470407	5	True				
ANR	470619	Label	default :	732:2:23397:23404	470407	6	True				
ANR	470620	Identifier	default		470407	0					
ANR	470621	ReturnStatement	return inst ;	733:3:23409:23420	470407	7	True				
ANR	470622	Identifier	inst		470407	0					
ANR	470623	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	735:2:23428:23594	470407	1	True				
ANR	470624	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		470407	0		=			
ANR	470625	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470626	Identifier	arminsn		470407	0					
ANR	470627	Identifier	str_asm		470407	1					
ANR	470628	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		470407	1					
ANR	470629	Callee	r_str_appendf		470407	0					
ANR	470630	Identifier	r_str_appendf		470407	0					
ANR	470631	ArgumentList	arminsn -> str_asm		470407	1					
ANR	470632	Argument	arminsn -> str_asm		470407	0					
ANR	470633	PtrMemberAccess	arminsn -> str_asm		470407	0					
ANR	470634	Identifier	arminsn		470407	0					
ANR	470635	Identifier	str_asm		470407	1					
ANR	470636	Argument	"""%s, %s, %s """		470407	1					
ANR	470637	PrimaryExpression	"""%s, %s, %s """		470407	0					
ANR	470638	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		470407	2					
ANR	470639	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		470407	0					
ANR	470640	Identifier	tbl_regs		470407	0					
ANR	470641	CallExpression	"get_nibble ( inst , 2 )"		470407	1					
ANR	470642	Callee	get_nibble		470407	0					
ANR	470643	Identifier	get_nibble		470407	0					
ANR	470644	ArgumentList	inst		470407	1					
ANR	470645	Argument	inst		470407	0					
ANR	470646	Identifier	inst		470407	0					
ANR	470647	Argument	2		470407	1					
ANR	470648	PrimaryExpression	2		470407	0					
ANR	470649	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		470407	3					
ANR	470650	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		470407	0					
ANR	470651	Identifier	tbl_regs		470407	0					
ANR	470652	CallExpression	"get_nibble ( inst , 4 )"		470407	1					
ANR	470653	Callee	get_nibble		470407	0					
ANR	470654	Identifier	get_nibble		470407	0					
ANR	470655	ArgumentList	inst		470407	1					
ANR	470656	Argument	inst		470407	0					
ANR	470657	Identifier	inst		470407	0					
ANR	470658	Argument	4		470407	1					
ANR	470659	PrimaryExpression	4		470407	0					
ANR	470660	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		470407	4					
ANR	470661	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		470407	0					
ANR	470662	Identifier	tbl_regs		470407	0					
ANR	470663	CallExpression	"get_nibble ( inst , 0 )"		470407	1					
ANR	470664	Callee	get_nibble		470407	0					
ANR	470665	Identifier	get_nibble		470407	0					
ANR	470666	ArgumentList	inst		470407	1					
ANR	470667	Argument	inst		470407	0					
ANR	470668	Identifier	inst		470407	0					
ANR	470669	Argument	0		470407	1					
ANR	470670	PrimaryExpression	0		470407	0					
ANR	470671	ReturnStatement	return 0 ;	737:2:23598:23606	470407	2	True				
ANR	470672	PrimaryExpression	0		470407	0					
ANR	470673	ReturnStatement	return inst ;	740:1:23613:23624	470407	4	True				
ANR	470674	Identifier	inst		470407	0					
ANR	470675	ReturnType	static ut32		470407	1					
ANR	470676	Identifier	thumb2_disasm_longmuldiv		470407	2					
ANR	470677	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		470407	3					
ANR	470678	Parameter	struct winedbg_arm_insn * arminsn	697:37:22438:22469	470407	0	True				
ANR	470679	ParameterType	struct winedbg_arm_insn *		470407	0					
ANR	470680	Identifier	arminsn		470407	1					
ANR	470681	Parameter	ut32 inst	697:71:22472:22480	470407	1	True				
ANR	470682	ParameterType	ut32		470407	0					
ANR	470683	Identifier	inst		470407	1					
ANR	470684	CFGEntryNode	ENTRY		470407		True				
ANR	470685	CFGExitNode	EXIT		470407		True				
ANR	470686	Symbol	op2		470407						
ANR	470687	Symbol	* arminsn		470407						
ANR	470688	Symbol	op1		470407						
ANR	470689	Symbol	get_nibble		470407						
ANR	470690	Symbol	* tbl_regs		470407						
ANR	470691	Symbol	tbl_regs		470407						
ANR	470692	Symbol	inst		470407						
ANR	470693	Symbol	r_str_appendf		470407						
ANR	470694	Symbol	* get_nibble		470407						
ANR	470695	Symbol	arminsn		470407						
ANR	470696	Symbol	arminsn -> str_asm		470407						
ANR	470697	Function	thumb2_disasm_coprocmov1	743:0:23629:24362							
ANR	470698	FunctionDef	"thumb2_disasm_coprocmov1 (struct winedbg_arm_insn * arminsn , ut32 inst)"		470697	0					
ANR	470699	CompoundStatement		743:82:23711:24362	470697	0					
ANR	470700	IdentifierDeclStatement	ut16 opc1 = ( inst >> 21 ) & 0x07 ;	744:1:23714:23745	470697	0	True				
ANR	470701	IdentifierDecl	opc1 = ( inst >> 21 ) & 0x07		470697	0					
ANR	470702	IdentifierDeclType	ut16		470697	0					
ANR	470703	Identifier	opc1		470697	1					
ANR	470704	AssignmentExpression	opc1 = ( inst >> 21 ) & 0x07		470697	2		=			
ANR	470705	Identifier	opc1		470697	0					
ANR	470706	BitAndExpression	( inst >> 21 ) & 0x07		470697	1		&			
ANR	470707	ShiftExpression	inst >> 21		470697	0		>>			
ANR	470708	Identifier	inst		470697	0					
ANR	470709	PrimaryExpression	21		470697	1					
ANR	470710	PrimaryExpression	0x07		470697	1					
ANR	470711	IdentifierDeclStatement	ut16 opc2 = ( inst >> 5 ) & 0x07 ;	745:1:23748:23778	470697	1	True				
ANR	470712	IdentifierDecl	opc2 = ( inst >> 5 ) & 0x07		470697	0					
ANR	470713	IdentifierDeclType	ut16		470697	0					
ANR	470714	Identifier	opc2		470697	1					
ANR	470715	AssignmentExpression	opc2 = ( inst >> 5 ) & 0x07		470697	2		=			
ANR	470716	Identifier	opc2		470697	0					
ANR	470717	BitAndExpression	( inst >> 5 ) & 0x07		470697	1		&			
ANR	470718	ShiftExpression	inst >> 5		470697	0		>>			
ANR	470719	Identifier	inst		470697	0					
ANR	470720	PrimaryExpression	5		470697	1					
ANR	470721	PrimaryExpression	0x07		470697	1					
ANR	470722	IfStatement	if ( opc2 )		470697	2					
ANR	470723	Condition	opc2	747:5:23786:23789	470697	0	True				
ANR	470724	Identifier	opc2		470697	0					
ANR	470725	CompoundStatement		5:11:80:80	470697	1					
ANR	470726	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s\\tp%u, #%u, %s, cr%u, cr%u, #%u"" , ( inst & 0x00100000 ) ? ""mrc"" : ""mcr"" , ( inst & 0x10000000 ) ? ""2"" : """" , get_nibble ( inst , 2 ) , opc1 , tbl_regs [ get_nibble ( inst , 3 ) ] , get_nibble ( inst , 4 ) , get_nibble ( inst , 0 ) , opc2 )"	748:2:23796:24069	470697	0	True				
ANR	470727	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s\\tp%u, #%u, %s, cr%u, cr%u, #%u"" , ( inst & 0x00100000 ) ? ""mrc"" : ""mcr"" , ( inst & 0x10000000 ) ? ""2"" : """" , get_nibble ( inst , 2 ) , opc1 , tbl_regs [ get_nibble ( inst , 3 ) ] , get_nibble ( inst , 4 ) , get_nibble ( inst , 0 ) , opc2 )"		470697	0		=			
ANR	470728	PtrMemberAccess	arminsn -> str_asm		470697	0					
ANR	470729	Identifier	arminsn		470697	0					
ANR	470730	Identifier	str_asm		470697	1					
ANR	470731	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s\\tp%u, #%u, %s, cr%u, cr%u, #%u"" , ( inst & 0x00100000 ) ? ""mrc"" : ""mcr"" , ( inst & 0x10000000 ) ? ""2"" : """" , get_nibble ( inst , 2 ) , opc1 , tbl_regs [ get_nibble ( inst , 3 ) ] , get_nibble ( inst , 4 ) , get_nibble ( inst , 0 ) , opc2 )"		470697	1					
ANR	470732	Callee	r_str_appendf		470697	0					
ANR	470733	Identifier	r_str_appendf		470697	0					
ANR	470734	ArgumentList	arminsn -> str_asm		470697	1					
ANR	470735	Argument	arminsn -> str_asm		470697	0					
ANR	470736	PtrMemberAccess	arminsn -> str_asm		470697	0					
ANR	470737	Identifier	arminsn		470697	0					
ANR	470738	Identifier	str_asm		470697	1					
ANR	470739	Argument	"""%s%s\\tp%u, #%u, %s, cr%u, cr%u, #%u"""		470697	1					
ANR	470740	PrimaryExpression	"""%s%s\\tp%u, #%u, %s, cr%u, cr%u, #%u"""		470697	0					
ANR	470741	Argument	"( inst & 0x00100000 ) ? ""mrc"" : ""mcr"""		470697	2					
ANR	470742	ConditionalExpression	"( inst & 0x00100000 ) ? ""mrc"" : ""mcr"""		470697	0					
ANR	470743	Condition	inst & 0x00100000		470697	0					
ANR	470744	BitAndExpression	inst & 0x00100000		470697	0		&			
ANR	470745	Identifier	inst		470697	0					
ANR	470746	PrimaryExpression	0x00100000		470697	1					
ANR	470747	PrimaryExpression	"""mrc"""		470697	1					
ANR	470748	PrimaryExpression	"""mcr"""		470697	2					
ANR	470749	Argument	"( inst & 0x10000000 ) ? ""2"" : """""		470697	3					
ANR	470750	ConditionalExpression	"( inst & 0x10000000 ) ? ""2"" : """""		470697	0					
ANR	470751	Condition	inst & 0x10000000		470697	0					
ANR	470752	BitAndExpression	inst & 0x10000000		470697	0		&			
ANR	470753	Identifier	inst		470697	0					
ANR	470754	PrimaryExpression	0x10000000		470697	1					
ANR	470755	PrimaryExpression	"""2"""		470697	1					
ANR	470756	PrimaryExpression	""""""		470697	2					
ANR	470757	Argument	"get_nibble ( inst , 2 )"		470697	4					
ANR	470758	CallExpression	"get_nibble ( inst , 2 )"		470697	0					
ANR	470759	Callee	get_nibble		470697	0					
ANR	470760	Identifier	get_nibble		470697	0					
ANR	470761	ArgumentList	inst		470697	1					
ANR	470762	Argument	inst		470697	0					
ANR	470763	Identifier	inst		470697	0					
ANR	470764	Argument	2		470697	1					
ANR	470765	PrimaryExpression	2		470697	0					
ANR	470766	Argument	opc1		470697	5					
ANR	470767	Identifier	opc1		470697	0					
ANR	470768	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		470697	6					
ANR	470769	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		470697	0					
ANR	470770	Identifier	tbl_regs		470697	0					
ANR	470771	CallExpression	"get_nibble ( inst , 3 )"		470697	1					
ANR	470772	Callee	get_nibble		470697	0					
ANR	470773	Identifier	get_nibble		470697	0					
ANR	470774	ArgumentList	inst		470697	1					
ANR	470775	Argument	inst		470697	0					
ANR	470776	Identifier	inst		470697	0					
ANR	470777	Argument	3		470697	1					
ANR	470778	PrimaryExpression	3		470697	0					
ANR	470779	Argument	"get_nibble ( inst , 4 )"		470697	7					
ANR	470780	CallExpression	"get_nibble ( inst , 4 )"		470697	0					
ANR	470781	Callee	get_nibble		470697	0					
ANR	470782	Identifier	get_nibble		470697	0					
ANR	470783	ArgumentList	inst		470697	1					
ANR	470784	Argument	inst		470697	0					
ANR	470785	Identifier	inst		470697	0					
ANR	470786	Argument	4		470697	1					
ANR	470787	PrimaryExpression	4		470697	0					
ANR	470788	Argument	"get_nibble ( inst , 0 )"		470697	8					
ANR	470789	CallExpression	"get_nibble ( inst , 0 )"		470697	0					
ANR	470790	Callee	get_nibble		470697	0					
ANR	470791	Identifier	get_nibble		470697	0					
ANR	470792	ArgumentList	inst		470697	1					
ANR	470793	Argument	inst		470697	0					
ANR	470794	Identifier	inst		470697	0					
ANR	470795	Argument	0		470697	1					
ANR	470796	PrimaryExpression	0		470697	0					
ANR	470797	Argument	opc2		470697	9					
ANR	470798	Identifier	opc2		470697	0					
ANR	470799	ElseStatement	else		470697	0					
ANR	470800	CompoundStatement		11:6:368:368	470697	0					
ANR	470801	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s\\tp%u, #%u, %s, cr%u, cr%u"" , ( inst & 0x00100000 ) ? ""mrc"" : ""mcr"" , ( inst & 0x10000000 ) ? ""2"" : """" , get_nibble ( inst , 2 ) , opc1 , tbl_regs [ get_nibble ( inst , 3 ) ] , get_nibble ( inst , 4 ) , get_nibble ( inst , 0 ) )"	754:2:24084:24346	470697	0	True				
ANR	470802	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s\\tp%u, #%u, %s, cr%u, cr%u"" , ( inst & 0x00100000 ) ? ""mrc"" : ""mcr"" , ( inst & 0x10000000 ) ? ""2"" : """" , get_nibble ( inst , 2 ) , opc1 , tbl_regs [ get_nibble ( inst , 3 ) ] , get_nibble ( inst , 4 ) , get_nibble ( inst , 0 ) )"		470697	0		=			
ANR	470803	PtrMemberAccess	arminsn -> str_asm		470697	0					
ANR	470804	Identifier	arminsn		470697	0					
ANR	470805	Identifier	str_asm		470697	1					
ANR	470806	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s\\tp%u, #%u, %s, cr%u, cr%u"" , ( inst & 0x00100000 ) ? ""mrc"" : ""mcr"" , ( inst & 0x10000000 ) ? ""2"" : """" , get_nibble ( inst , 2 ) , opc1 , tbl_regs [ get_nibble ( inst , 3 ) ] , get_nibble ( inst , 4 ) , get_nibble ( inst , 0 ) )"		470697	1					
ANR	470807	Callee	r_str_appendf		470697	0					
ANR	470808	Identifier	r_str_appendf		470697	0					
ANR	470809	ArgumentList	arminsn -> str_asm		470697	1					
ANR	470810	Argument	arminsn -> str_asm		470697	0					
ANR	470811	PtrMemberAccess	arminsn -> str_asm		470697	0					
ANR	470812	Identifier	arminsn		470697	0					
ANR	470813	Identifier	str_asm		470697	1					
ANR	470814	Argument	"""%s%s\\tp%u, #%u, %s, cr%u, cr%u"""		470697	1					
ANR	470815	PrimaryExpression	"""%s%s\\tp%u, #%u, %s, cr%u, cr%u"""		470697	0					
ANR	470816	Argument	"( inst & 0x00100000 ) ? ""mrc"" : ""mcr"""		470697	2					
ANR	470817	ConditionalExpression	"( inst & 0x00100000 ) ? ""mrc"" : ""mcr"""		470697	0					
ANR	470818	Condition	inst & 0x00100000		470697	0					
ANR	470819	BitAndExpression	inst & 0x00100000		470697	0		&			
ANR	470820	Identifier	inst		470697	0					
ANR	470821	PrimaryExpression	0x00100000		470697	1					
ANR	470822	PrimaryExpression	"""mrc"""		470697	1					
ANR	470823	PrimaryExpression	"""mcr"""		470697	2					
ANR	470824	Argument	"( inst & 0x10000000 ) ? ""2"" : """""		470697	3					
ANR	470825	ConditionalExpression	"( inst & 0x10000000 ) ? ""2"" : """""		470697	0					
ANR	470826	Condition	inst & 0x10000000		470697	0					
ANR	470827	BitAndExpression	inst & 0x10000000		470697	0		&			
ANR	470828	Identifier	inst		470697	0					
ANR	470829	PrimaryExpression	0x10000000		470697	1					
ANR	470830	PrimaryExpression	"""2"""		470697	1					
ANR	470831	PrimaryExpression	""""""		470697	2					
ANR	470832	Argument	"get_nibble ( inst , 2 )"		470697	4					
ANR	470833	CallExpression	"get_nibble ( inst , 2 )"		470697	0					
ANR	470834	Callee	get_nibble		470697	0					
ANR	470835	Identifier	get_nibble		470697	0					
ANR	470836	ArgumentList	inst		470697	1					
ANR	470837	Argument	inst		470697	0					
ANR	470838	Identifier	inst		470697	0					
ANR	470839	Argument	2		470697	1					
ANR	470840	PrimaryExpression	2		470697	0					
ANR	470841	Argument	opc1		470697	5					
ANR	470842	Identifier	opc1		470697	0					
ANR	470843	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		470697	6					
ANR	470844	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		470697	0					
ANR	470845	Identifier	tbl_regs		470697	0					
ANR	470846	CallExpression	"get_nibble ( inst , 3 )"		470697	1					
ANR	470847	Callee	get_nibble		470697	0					
ANR	470848	Identifier	get_nibble		470697	0					
ANR	470849	ArgumentList	inst		470697	1					
ANR	470850	Argument	inst		470697	0					
ANR	470851	Identifier	inst		470697	0					
ANR	470852	Argument	3		470697	1					
ANR	470853	PrimaryExpression	3		470697	0					
ANR	470854	Argument	"get_nibble ( inst , 4 )"		470697	7					
ANR	470855	CallExpression	"get_nibble ( inst , 4 )"		470697	0					
ANR	470856	Callee	get_nibble		470697	0					
ANR	470857	Identifier	get_nibble		470697	0					
ANR	470858	ArgumentList	inst		470697	1					
ANR	470859	Argument	inst		470697	0					
ANR	470860	Identifier	inst		470697	0					
ANR	470861	Argument	4		470697	1					
ANR	470862	PrimaryExpression	4		470697	0					
ANR	470863	Argument	"get_nibble ( inst , 0 )"		470697	8					
ANR	470864	CallExpression	"get_nibble ( inst , 0 )"		470697	0					
ANR	470865	Callee	get_nibble		470697	0					
ANR	470866	Identifier	get_nibble		470697	0					
ANR	470867	ArgumentList	inst		470697	1					
ANR	470868	Argument	inst		470697	0					
ANR	470869	Identifier	inst		470697	0					
ANR	470870	Argument	0		470697	1					
ANR	470871	PrimaryExpression	0		470697	0					
ANR	470872	ReturnStatement	return 0 ;	759:1:24352:24360	470697	3	True				
ANR	470873	PrimaryExpression	0		470697	0					
ANR	470874	ReturnType	static ut32		470697	1					
ANR	470875	Identifier	thumb2_disasm_coprocmov1		470697	2					
ANR	470876	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		470697	3					
ANR	470877	Parameter	struct winedbg_arm_insn * arminsn	743:37:23666:23697	470697	0	True				
ANR	470878	ParameterType	struct winedbg_arm_insn *		470697	0					
ANR	470879	Identifier	arminsn		470697	1					
ANR	470880	Parameter	ut32 inst	743:71:23700:23708	470697	1	True				
ANR	470881	ParameterType	ut32		470697	0					
ANR	470882	Identifier	inst		470697	1					
ANR	470883	CFGEntryNode	ENTRY		470697		True				
ANR	470884	CFGExitNode	EXIT		470697		True				
ANR	470885	Symbol	* arminsn		470697						
ANR	470886	Symbol	get_nibble		470697						
ANR	470887	Symbol	opc2		470697						
ANR	470888	Symbol	tbl_regs		470697						
ANR	470889	Symbol	* tbl_regs		470697						
ANR	470890	Symbol	inst		470697						
ANR	470891	Symbol	r_str_appendf		470697						
ANR	470892	Symbol	* get_nibble		470697						
ANR	470893	Symbol	arminsn		470697						
ANR	470894	Symbol	opc1		470697						
ANR	470895	Symbol	arminsn -> str_asm		470697						
ANR	470896	ClassDef	inst_arm	762:0:24365:24457							
ANR	470897	DeclStmt									
ANR	470898	Decl							ut32	ut32	mask
ANR	470899	DeclStmt									
ANR	470900	Decl							ut32	ut32	pattern
ANR	470901	DeclStmt									
ANR	470902	Decl							"ut32 ( * ) ( struct winedbg_arm_insn * , ut32 )"	"ut32 ( * ) ( struct winedbg_arm_insn * , ut32 )"	func
ANR	470903	DeclStmt									
ANR	470904	Decl							const struct inst_arm	const struct inst_arm [ ]	tbl_arm
ANR	470905	ClassDef	inst_thumb16	790:0:25451:25547							
ANR	470906	DeclStmt									
ANR	470907	Decl							ut16	ut16	mask
ANR	470908	DeclStmt									
ANR	470909	Decl							ut16	ut16	pattern
ANR	470910	DeclStmt									
ANR	470911	Decl							"ut16 ( * ) ( struct winedbg_arm_insn * , ut16 )"	"ut16 ( * ) ( struct winedbg_arm_insn * , ut16 )"	func
ANR	470912	DeclStmt									
ANR	470913	Decl							const struct inst_thumb16	const struct inst_thumb16 [ ]	tbl_thumb16
ANR	470914	DeclStmt									
ANR	470915	Decl							const struct inst_arm	const struct inst_arm [ ]	tbl_thumb32
ANR	470916	Function	arm_set_pc	830:0:26906:26986							
ANR	470917	FunctionDef	"arm_set_pc (struct winedbg_arm_insn * arminsn , ut64 pc)"		470916	0					
ANR	470918	CompoundStatement		830:59:26965:26986	470916	0					
ANR	470919	ExpressionStatement	arminsn -> pc = pc	831:1:26968:26984	470916	0	True				
ANR	470920	AssignmentExpression	arminsn -> pc = pc		470916	0		=			
ANR	470921	PtrMemberAccess	arminsn -> pc		470916	0					
ANR	470922	Identifier	arminsn		470916	0					
ANR	470923	Identifier	pc		470916	1					
ANR	470924	Identifier	pc		470916	1					
ANR	470925	ReturnType	void		470916	1					
ANR	470926	Identifier	arm_set_pc		470916	2					
ANR	470927	ParameterList	"struct winedbg_arm_insn * arminsn , ut64 pc"		470916	3					
ANR	470928	Parameter	struct winedbg_arm_insn * arminsn	830:16:26922:26953	470916	0	True				
ANR	470929	ParameterType	struct winedbg_arm_insn *		470916	0					
ANR	470930	Identifier	arminsn		470916	1					
ANR	470931	Parameter	ut64 pc	830:50:26956:26962	470916	1	True				
ANR	470932	ParameterType	ut64		470916	0					
ANR	470933	Identifier	pc		470916	1					
ANR	470934	CFGEntryNode	ENTRY		470916		True				
ANR	470935	CFGExitNode	EXIT		470916		True				
ANR	470936	Symbol	* arminsn		470916						
ANR	470937	Symbol	arminsn -> pc		470916						
ANR	470938	Symbol	pc		470916						
ANR	470939	Symbol	arminsn		470916						
ANR	470940	Function	arm_set_input_buffer	834:0:26989:27088							
ANR	470941	FunctionDef	"arm_set_input_buffer (struct winedbg_arm_insn * arminsn , const ut8 * buf)"		470940	0					
ANR	470942	CompoundStatement		834:76:27065:27088	470940	0					
ANR	470943	ExpressionStatement	arminsn -> buf = buf	835:1:27068:27086	470940	0	True				
ANR	470944	AssignmentExpression	arminsn -> buf = buf		470940	0		=			
ANR	470945	PtrMemberAccess	arminsn -> buf		470940	0					
ANR	470946	Identifier	arminsn		470940	0					
ANR	470947	Identifier	buf		470940	1					
ANR	470948	Identifier	buf		470940	1					
ANR	470949	ReturnType	void		470940	1					
ANR	470950	Identifier	arm_set_input_buffer		470940	2					
ANR	470951	ParameterList	"struct winedbg_arm_insn * arminsn , const ut8 * buf"		470940	3					
ANR	470952	Parameter	struct winedbg_arm_insn * arminsn	834:26:27015:27046	470940	0	True				
ANR	470953	ParameterType	struct winedbg_arm_insn *		470940	0					
ANR	470954	Identifier	arminsn		470940	1					
ANR	470955	Parameter	const ut8 * buf	834:60:27049:27062	470940	1	True				
ANR	470956	ParameterType	const ut8 *		470940	0					
ANR	470957	Identifier	buf		470940	1					
ANR	470958	CFGEntryNode	ENTRY		470940		True				
ANR	470959	CFGExitNode	EXIT		470940		True				
ANR	470960	Symbol	* arminsn		470940						
ANR	470961	Symbol	buf		470940						
ANR	470962	Symbol	arminsn -> buf		470940						
ANR	470963	Symbol	arminsn		470940						
ANR	470964	Function	arm_set_thumb	838:0:27091:27182							
ANR	470965	FunctionDef	"arm_set_thumb (struct winedbg_arm_insn * arminsn , int thumb)"		470964	0					
ANR	470966	CompoundStatement		838:64:27155:27182	470964	0					
ANR	470967	ExpressionStatement	arminsn -> thumb = thumb	839:1:27158:27180	470964	0	True				
ANR	470968	AssignmentExpression	arminsn -> thumb = thumb		470964	0		=			
ANR	470969	PtrMemberAccess	arminsn -> thumb		470964	0					
ANR	470970	Identifier	arminsn		470964	0					
ANR	470971	Identifier	thumb		470964	1					
ANR	470972	Identifier	thumb		470964	1					
ANR	470973	ReturnType	void		470964	1					
ANR	470974	Identifier	arm_set_thumb		470964	2					
ANR	470975	ParameterList	"struct winedbg_arm_insn * arminsn , int thumb"		470964	3					
ANR	470976	Parameter	struct winedbg_arm_insn * arminsn	838:19:27110:27141	470964	0	True				
ANR	470977	ParameterType	struct winedbg_arm_insn *		470964	0					
ANR	470978	Identifier	arminsn		470964	1					
ANR	470979	Parameter	int thumb	838:53:27144:27152	470964	1	True				
ANR	470980	ParameterType	int		470964	0					
ANR	470981	Identifier	thumb		470964	1					
ANR	470982	CFGEntryNode	ENTRY		470964		True				
ANR	470983	CFGExitNode	EXIT		470964		True				
ANR	470984	Symbol	* arminsn		470964						
ANR	470985	Symbol	arminsn -> thumb		470964						
ANR	470986	Symbol	thumb		470964						
ANR	470987	Symbol	arminsn		470964						
ANR	470988	Function	winedbg_arm_insn_asm	842:0:27185:27274							
ANR	470989	FunctionDef	winedbg_arm_insn_asm (struct winedbg_arm_insn * arminsn)		470988	0					
ANR	470990	CompoundStatement		842:61:27246:27274	470988	0					
ANR	470991	ReturnStatement	return arminsn -> str_asm ;	843:1:27249:27272	470988	0	True				
ANR	470992	PtrMemberAccess	arminsn -> str_asm		470988	0					
ANR	470993	Identifier	arminsn		470988	0					
ANR	470994	Identifier	str_asm		470988	1					
ANR	470995	ReturnType	char *		470988	1					
ANR	470996	Identifier	winedbg_arm_insn_asm		470988	2					
ANR	470997	ParameterList	struct winedbg_arm_insn * arminsn		470988	3					
ANR	470998	Parameter	struct winedbg_arm_insn * arminsn	842:27:27212:27243	470988	0	True				
ANR	470999	ParameterType	struct winedbg_arm_insn *		470988	0					
ANR	471000	Identifier	arminsn		470988	1					
ANR	471001	CFGEntryNode	ENTRY		470988		True				
ANR	471002	CFGExitNode	EXIT		470988		True				
ANR	471003	Symbol	* arminsn		470988						
ANR	471004	Symbol	arminsn		470988						
ANR	471005	Symbol	arminsn -> str_asm		470988						
ANR	471006	Function	winedbg_arm_insn_hex	846:0:27277:27366							
ANR	471007	FunctionDef	winedbg_arm_insn_hex (struct winedbg_arm_insn * arminsn)		471006	0					
ANR	471008	CompoundStatement		846:61:27338:27366	471006	0					
ANR	471009	ReturnStatement	return arminsn -> str_hex ;	847:1:27341:27364	471006	0	True				
ANR	471010	PtrMemberAccess	arminsn -> str_hex		471006	0					
ANR	471011	Identifier	arminsn		471006	0					
ANR	471012	Identifier	str_hex		471006	1					
ANR	471013	ReturnType	char *		471006	1					
ANR	471014	Identifier	winedbg_arm_insn_hex		471006	2					
ANR	471015	ParameterList	struct winedbg_arm_insn * arminsn		471006	3					
ANR	471016	Parameter	struct winedbg_arm_insn * arminsn	846:27:27304:27335	471006	0	True				
ANR	471017	ParameterType	struct winedbg_arm_insn *		471006	0					
ANR	471018	Identifier	arminsn		471006	1					
ANR	471019	CFGEntryNode	ENTRY		471006		True				
ANR	471020	CFGExitNode	EXIT		471006		True				
ANR	471021	Symbol	* arminsn		471006						
ANR	471022	Symbol	arminsn		471006						
ANR	471023	Symbol	arminsn -> str_hex		471006						
ANR	471024	Function	arm_free	850:0:27369:27500							
ANR	471025	FunctionDef	arm_free (struct winedbg_arm_insn * arminsn)		471024	0					
ANR	471026	CompoundStatement		850:49:27418:27500	471024	0					
ANR	471027	ExpressionStatement	free ( arminsn -> str_hex )	851:1:27421:27443	471024	0	True				
ANR	471028	CallExpression	free ( arminsn -> str_hex )		471024	0					
ANR	471029	Callee	free		471024	0					
ANR	471030	Identifier	free		471024	0					
ANR	471031	ArgumentList	arminsn -> str_hex		471024	1					
ANR	471032	Argument	arminsn -> str_hex		471024	0					
ANR	471033	PtrMemberAccess	arminsn -> str_hex		471024	0					
ANR	471034	Identifier	arminsn		471024	0					
ANR	471035	Identifier	str_hex		471024	1					
ANR	471036	ExpressionStatement	free ( arminsn -> str_asm )	852:1:27446:27468	471024	1	True				
ANR	471037	CallExpression	free ( arminsn -> str_asm )		471024	0					
ANR	471038	Callee	free		471024	0					
ANR	471039	Identifier	free		471024	0					
ANR	471040	ArgumentList	arminsn -> str_asm		471024	1					
ANR	471041	Argument	arminsn -> str_asm		471024	0					
ANR	471042	PtrMemberAccess	arminsn -> str_asm		471024	0					
ANR	471043	Identifier	arminsn		471024	0					
ANR	471044	Identifier	str_asm		471024	1					
ANR	471045	ExpressionStatement	free ( arminsn )	853:1:27471:27484	471024	2	True				
ANR	471046	CallExpression	free ( arminsn )		471024	0					
ANR	471047	Callee	free		471024	0					
ANR	471048	Identifier	free		471024	0					
ANR	471049	ArgumentList	arminsn		471024	1					
ANR	471050	Argument	arminsn		471024	0					
ANR	471051	Identifier	arminsn		471024	0					
ANR	471052	ReturnStatement	return NULL ;	854:1:27487:27498	471024	3	True				
ANR	471053	Identifier	NULL		471024	0					
ANR	471054	ReturnType	void *		471024	1					
ANR	471055	Identifier	arm_free		471024	2					
ANR	471056	ParameterList	struct winedbg_arm_insn * arminsn		471024	3					
ANR	471057	Parameter	struct winedbg_arm_insn * arminsn	850:15:27384:27415	471024	0	True				
ANR	471058	ParameterType	struct winedbg_arm_insn *		471024	0					
ANR	471059	Identifier	arminsn		471024	1					
ANR	471060	CFGEntryNode	ENTRY		471024		True				
ANR	471061	CFGExitNode	EXIT		471024		True				
ANR	471062	Symbol	* arminsn		471024						
ANR	471063	Symbol	NULL		471024						
ANR	471064	Symbol	arminsn		471024						
ANR	471065	Symbol	arminsn -> str_hex		471024						
ANR	471066	Symbol	arminsn -> str_asm		471024						
ANR	471067	Function	arm_new	857:0:27503:27711							
ANR	471068	FunctionDef	arm_new ()		471067	0					
ANR	471069	CompoundStatement		857:35:27538:27711	471067	0					
ANR	471070	IdentifierDeclStatement	struct winedbg_arm_insn * ret ;	858:1:27541:27569	471067	0	True				
ANR	471071	IdentifierDecl	* ret		471067	0					
ANR	471072	IdentifierDeclType	struct winedbg_arm_insn *		471067	0					
ANR	471073	Identifier	ret		471067	1					
ANR	471074	ExpressionStatement	ret = malloc ( sizeof ( struct winedbg_arm_insn ) )	859:1:27572:27617	471067	1	True				
ANR	471075	AssignmentExpression	ret = malloc ( sizeof ( struct winedbg_arm_insn ) )		471067	0		=			
ANR	471076	Identifier	ret		471067	0					
ANR	471077	CallExpression	malloc ( sizeof ( struct winedbg_arm_insn ) )		471067	1					
ANR	471078	Callee	malloc		471067	0					
ANR	471079	Identifier	malloc		471067	0					
ANR	471080	ArgumentList	sizeof ( struct winedbg_arm_insn )		471067	1					
ANR	471081	Argument	sizeof ( struct winedbg_arm_insn )		471067	0					
ANR	471082	SizeofExpression	sizeof ( struct winedbg_arm_insn )		471067	0					
ANR	471083	Sizeof	sizeof		471067	0					
ANR	471084	SizeofOperand	struct winedbg_arm_insn		471067	1					
ANR	471085	ExpressionStatement	ret -> pc = 0	860:1:27620:27631	471067	2	True				
ANR	471086	AssignmentExpression	ret -> pc = 0		471067	0		=			
ANR	471087	PtrMemberAccess	ret -> pc		471067	0					
ANR	471088	Identifier	ret		471067	0					
ANR	471089	Identifier	pc		471067	1					
ANR	471090	PrimaryExpression	0		471067	1					
ANR	471091	ExpressionStatement	ret -> thumb = false	861:1:27634:27652	471067	3	True				
ANR	471092	AssignmentExpression	ret -> thumb = false		471067	0		=			
ANR	471093	PtrMemberAccess	ret -> thumb		471067	0					
ANR	471094	Identifier	ret		471067	0					
ANR	471095	Identifier	thumb		471067	1					
ANR	471096	Identifier	false		471067	1					
ANR	471097	ExpressionStatement	ret -> str_hex = NULL	862:1:27655:27674	471067	4	True				
ANR	471098	AssignmentExpression	ret -> str_hex = NULL		471067	0		=			
ANR	471099	PtrMemberAccess	ret -> str_hex		471067	0					
ANR	471100	Identifier	ret		471067	0					
ANR	471101	Identifier	str_hex		471067	1					
ANR	471102	Identifier	NULL		471067	1					
ANR	471103	ExpressionStatement	ret -> str_asm = NULL	863:1:27677:27696	471067	5	True				
ANR	471104	AssignmentExpression	ret -> str_asm = NULL		471067	0		=			
ANR	471105	PtrMemberAccess	ret -> str_asm		471067	0					
ANR	471106	Identifier	ret		471067	0					
ANR	471107	Identifier	str_asm		471067	1					
ANR	471108	Identifier	NULL		471067	1					
ANR	471109	ReturnStatement	return ret ;	864:1:27699:27709	471067	6	True				
ANR	471110	Identifier	ret		471067	0					
ANR	471111	ReturnType	struct winedbg_arm_insn *		471067	1					
ANR	471112	Identifier	arm_new		471067	2					
ANR	471113	ParameterList			471067	3					
ANR	471114	CFGEntryNode	ENTRY		471067		True				
ANR	471115	CFGExitNode	EXIT		471067		True				
ANR	471116	Symbol	ret		471067						
ANR	471117	Symbol	ret -> str_asm		471067						
ANR	471118	Symbol	malloc		471067						
ANR	471119	Symbol	ret -> str_hex		471067						
ANR	471120	Symbol	NULL		471067						
ANR	471121	Symbol	ret -> pc		471067						
ANR	471122	Symbol	ret -> thumb		471067						
ANR	471123	Symbol	false		471067						
ANR	471124	Symbol	* ret		471067						
ANR	471125	Function	arm_disasm_one_insn	867:0:27714:29811							
ANR	471126	FunctionDef	arm_disasm_one_insn (struct winedbg_arm_insn * arminsn)		471125	0					
ANR	471127	CompoundStatement		867:58:27772:29811	471125	0					
ANR	471128	IdentifierDeclStatement	struct inst_arm * a_ptr = ( struct inst_arm * ) & tbl_arm ;	868:1:27775:27827	471125	0	True				
ANR	471129	IdentifierDecl	* a_ptr = ( struct inst_arm * ) & tbl_arm		471125	0					
ANR	471130	IdentifierDeclType	struct inst_arm *		471125	0					
ANR	471131	Identifier	a_ptr		471125	1					
ANR	471132	AssignmentExpression	* a_ptr = ( struct inst_arm * ) & tbl_arm		471125	2		=			
ANR	471133	Identifier	a_ptr		471125	0					
ANR	471134	CastExpression	( struct inst_arm * ) & tbl_arm		471125	1					
ANR	471135	CastTarget	struct inst_arm *		471125	0					
ANR	471136	UnaryOperationExpression	& tbl_arm		471125	1					
ANR	471137	UnaryOperator	&		471125	0					
ANR	471138	Identifier	tbl_arm		471125	1					
ANR	471139	IdentifierDeclStatement	struct inst_thumb16 * t_ptr = ( struct inst_thumb16 * ) & tbl_thumb16 ;	869:1:27830:27894	471125	1	True				
ANR	471140	IdentifierDecl	* t_ptr = ( struct inst_thumb16 * ) & tbl_thumb16		471125	0					
ANR	471141	IdentifierDeclType	struct inst_thumb16 *		471125	0					
ANR	471142	Identifier	t_ptr		471125	1					
ANR	471143	AssignmentExpression	* t_ptr = ( struct inst_thumb16 * ) & tbl_thumb16		471125	2		=			
ANR	471144	Identifier	t_ptr		471125	0					
ANR	471145	CastExpression	( struct inst_thumb16 * ) & tbl_thumb16		471125	1					
ANR	471146	CastTarget	struct inst_thumb16 *		471125	0					
ANR	471147	UnaryOperationExpression	& tbl_thumb16		471125	1					
ANR	471148	UnaryOperator	&		471125	0					
ANR	471149	Identifier	tbl_thumb16		471125	1					
ANR	471150	IdentifierDeclStatement	struct inst_arm * t2_ptr = ( struct inst_arm * ) & tbl_thumb32 ;	870:1:27897:27954	471125	2	True				
ANR	471151	IdentifierDecl	* t2_ptr = ( struct inst_arm * ) & tbl_thumb32		471125	0					
ANR	471152	IdentifierDeclType	struct inst_arm *		471125	0					
ANR	471153	Identifier	t2_ptr		471125	1					
ANR	471154	AssignmentExpression	* t2_ptr = ( struct inst_arm * ) & tbl_thumb32		471125	2		=			
ANR	471155	Identifier	t2_ptr		471125	0					
ANR	471156	CastExpression	( struct inst_arm * ) & tbl_thumb32		471125	1					
ANR	471157	CastTarget	struct inst_arm *		471125	0					
ANR	471158	UnaryOperationExpression	& tbl_thumb32		471125	1					
ANR	471159	UnaryOperator	&		471125	0					
ANR	471160	Identifier	tbl_thumb32		471125	1					
ANR	471161	IdentifierDeclStatement	ut32 inst ;	871:1:27957:27966	471125	3	True				
ANR	471162	IdentifierDecl	inst		471125	0					
ANR	471163	IdentifierDeclType	ut32		471125	0					
ANR	471164	Identifier	inst		471125	1					
ANR	471165	IdentifierDeclStatement	ut16 tinst ;	872:1:27969:27979	471125	4	True				
ANR	471166	IdentifierDecl	tinst		471125	0					
ANR	471167	IdentifierDeclType	ut16		471125	0					
ANR	471168	Identifier	tinst		471125	1					
ANR	471169	IdentifierDeclStatement	int size ;	873:1:27982:27990	471125	5	True				
ANR	471170	IdentifierDecl	size		471125	0					
ANR	471171	IdentifierDeclType	int		471125	0					
ANR	471172	Identifier	size		471125	1					
ANR	471173	IdentifierDeclStatement	int matched = 0 ;	874:1:27993:28008	471125	6	True				
ANR	471174	IdentifierDecl	matched = 0		471125	0					
ANR	471175	IdentifierDeclType	int		471125	0					
ANR	471176	Identifier	matched		471125	1					
ANR	471177	AssignmentExpression	matched = 0		471125	2		=			
ANR	471178	Identifier	matched		471125	0					
ANR	471179	PrimaryExpression	0		471125	1					
ANR	471180	Statement	arminsn	876:1:28012:28018	471125	7	True				
ANR	471181	Statement	->	876:8:28019:28020	471125	8	True				
ANR	471182	Statement	jmp	876:10:28021:28023	471125	9	True				
ANR	471183	Statement	=	876:14:28025:28025	471125	10	True				
ANR	471184	Statement	arminsn	876:16:28027:28033	471125	11	True				
ANR	471185	Statement	->	876:23:28034:28035	471125	12	True				
ANR	471186	Statement	fail	876:25:28036:28039	471125	13	True				
ANR	471187	Statement	=	876:30:28041:28041	471125	14	True				
ANR	471188	Statement	-	876:32:28043:28043	471125	15	True				
ANR	471189	Statement	1L	876:33:28044:28045	471125	16	True				
ANR	471190	ExpressionStatement	L	876:35:28046:28047	471125	17	True				
ANR	471191	Identifier	L		471125	0					
ANR	471192	IfStatement	if ( ! arminsn -> thumb )		471125	18					
ANR	471193	Condition	! arminsn -> thumb	877:5:28054:28068	471125	0	True				
ANR	471194	UnaryOperationExpression	! arminsn -> thumb		471125	0					
ANR	471195	UnaryOperator	!		471125	0					
ANR	471196	PtrMemberAccess	arminsn -> thumb		471125	1					
ANR	471197	Identifier	arminsn		471125	0					
ANR	471198	Identifier	thumb		471125	1					
ANR	471199	CompoundStatement		11:22:298:298	471125	1					
ANR	471200	ExpressionStatement	size = ARM_INSN_SIZE	878:2:28075:28095	471125	0	True				
ANR	471201	AssignmentExpression	size = ARM_INSN_SIZE		471125	0		=			
ANR	471202	Identifier	size		471125	0					
ANR	471203	Identifier	ARM_INSN_SIZE		471125	1					
ANR	471204	ExpressionStatement	"inst = db_get_inst ( arminsn -> buf , size )"	879:2:28099:28137	471125	1	True				
ANR	471205	AssignmentExpression	"inst = db_get_inst ( arminsn -> buf , size )"		471125	0		=			
ANR	471206	Identifier	inst		471125	0					
ANR	471207	CallExpression	"db_get_inst ( arminsn -> buf , size )"		471125	1					
ANR	471208	Callee	db_get_inst		471125	0					
ANR	471209	Identifier	db_get_inst		471125	0					
ANR	471210	ArgumentList	arminsn -> buf		471125	1					
ANR	471211	Argument	arminsn -> buf		471125	0					
ANR	471212	PtrMemberAccess	arminsn -> buf		471125	0					
ANR	471213	Identifier	arminsn		471125	0					
ANR	471214	Identifier	buf		471125	1					
ANR	471215	Argument	size		471125	1					
ANR	471216	Identifier	size		471125	0					
ANR	471217	WhileStatement	while ( a_ptr -> func )		471125	2					
ANR	471218	Condition	a_ptr -> func	880:9:28148:28158	471125	0	True				
ANR	471219	PtrMemberAccess	a_ptr -> func		471125	0					
ANR	471220	Identifier	a_ptr		471125	0					
ANR	471221	Identifier	func		471125	1					
ANR	471222	CompoundStatement		14:22:388:388	471125	1					
ANR	471223	IfStatement	if ( ( inst & a_ptr -> mask ) == a_ptr -> pattern )		471125	0					
ANR	471224	Condition	( inst & a_ptr -> mask ) == a_ptr -> pattern	881:7:28170:28208	471125	0	True				
ANR	471225	EqualityExpression	( inst & a_ptr -> mask ) == a_ptr -> pattern		471125	0		==			
ANR	471226	BitAndExpression	inst & a_ptr -> mask		471125	0		&			
ANR	471227	Identifier	inst		471125	0					
ANR	471228	PtrMemberAccess	a_ptr -> mask		471125	1					
ANR	471229	Identifier	a_ptr		471125	0					
ANR	471230	Identifier	mask		471125	1					
ANR	471231	PtrMemberAccess	a_ptr -> pattern		471125	1					
ANR	471232	Identifier	a_ptr		471125	0					
ANR	471233	Identifier	pattern		471125	1					
ANR	471234	CompoundStatement		15:48:438:438	471125	1					
ANR	471235	ExpressionStatement	matched = 1	882:4:28217:28228	471125	0	True				
ANR	471236	AssignmentExpression	matched = 1		471125	0		=			
ANR	471237	Identifier	matched		471125	0					
ANR	471238	PrimaryExpression	1		471125	1					
ANR	471239	BreakStatement	break ;	883:4:28234:28239	471125	1	True				
ANR	471240	ExpressionStatement	a_ptr ++	885:3:28249:28256	471125	1	True				
ANR	471241	PostIncDecOperationExpression	a_ptr ++		471125	0					
ANR	471242	Identifier	a_ptr		471125	0					
ANR	471243	IncDec	++		471125	1					
ANR	471244	IfStatement	if ( ! matched )		471125	3					
ANR	471245	Condition	! matched	888:6:28269:28276	471125	0	True				
ANR	471246	UnaryOperationExpression	! matched		471125	0					
ANR	471247	UnaryOperator	!		471125	0					
ANR	471248	Identifier	matched		471125	1					
ANR	471249	CompoundStatement		22:16:506:506	471125	1					
ANR	471250	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""Unknown ARM Instruction: %08x"" , inst )"	889:3:28284:28374	471125	0	True				
ANR	471251	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""Unknown ARM Instruction: %08x"" , inst )"		471125	0		=			
ANR	471252	PtrMemberAccess	arminsn -> str_asm		471125	0					
ANR	471253	Identifier	arminsn		471125	0					
ANR	471254	Identifier	str_asm		471125	1					
ANR	471255	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""Unknown ARM Instruction: %08x"" , inst )"		471125	1					
ANR	471256	Callee	r_str_appendf		471125	0					
ANR	471257	Identifier	r_str_appendf		471125	0					
ANR	471258	ArgumentList	arminsn -> str_asm		471125	1					
ANR	471259	Argument	arminsn -> str_asm		471125	0					
ANR	471260	PtrMemberAccess	arminsn -> str_asm		471125	0					
ANR	471261	Identifier	arminsn		471125	0					
ANR	471262	Identifier	str_asm		471125	1					
ANR	471263	Argument	"""Unknown ARM Instruction: %08x"""		471125	1					
ANR	471264	PrimaryExpression	"""Unknown ARM Instruction: %08x"""		471125	0					
ANR	471265	Argument	inst		471125	2					
ANR	471266	Identifier	inst		471125	0					
ANR	471267	ElseStatement	else		471125	0					
ANR	471268	CompoundStatement		25:7:614:614	471125	0					
ANR	471269	ExpressionStatement	"a_ptr -> func ( arminsn , inst )"	892:3:28392:28418	471125	0	True				
ANR	471270	CallExpression	"a_ptr -> func ( arminsn , inst )"		471125	0					
ANR	471271	Callee	a_ptr -> func		471125	0					
ANR	471272	PtrMemberAccess	a_ptr -> func		471125	0					
ANR	471273	Identifier	a_ptr		471125	0					
ANR	471274	Identifier	func		471125	1					
ANR	471275	ArgumentList	arminsn		471125	1					
ANR	471276	Argument	arminsn		471125	0					
ANR	471277	Identifier	arminsn		471125	0					
ANR	471278	Argument	inst		471125	1					
ANR	471279	Identifier	inst		471125	0					
ANR	471280	ExpressionStatement	"arminsn -> str_hex = r_str_appendf ( arminsn -> str_hex , ""%02x%02x%02x%02x"" , * ( ( ut8 * ) ( & inst ) ) , * ( ( ut8 * ) ( & inst ) + 1 ) , * ( ( ut8 * ) ( & inst ) + 2 ) , * ( ( ut8 * ) ( & inst ) + 3 ) )"	894:2:28426:28581	471125	4	True				
ANR	471281	AssignmentExpression	"arminsn -> str_hex = r_str_appendf ( arminsn -> str_hex , ""%02x%02x%02x%02x"" , * ( ( ut8 * ) ( & inst ) ) , * ( ( ut8 * ) ( & inst ) + 1 ) , * ( ( ut8 * ) ( & inst ) + 2 ) , * ( ( ut8 * ) ( & inst ) + 3 ) )"		471125	0		=			
ANR	471282	PtrMemberAccess	arminsn -> str_hex		471125	0					
ANR	471283	Identifier	arminsn		471125	0					
ANR	471284	Identifier	str_hex		471125	1					
ANR	471285	CallExpression	"r_str_appendf ( arminsn -> str_hex , ""%02x%02x%02x%02x"" , * ( ( ut8 * ) ( & inst ) ) , * ( ( ut8 * ) ( & inst ) + 1 ) , * ( ( ut8 * ) ( & inst ) + 2 ) , * ( ( ut8 * ) ( & inst ) + 3 ) )"		471125	1					
ANR	471286	Callee	r_str_appendf		471125	0					
ANR	471287	Identifier	r_str_appendf		471125	0					
ANR	471288	ArgumentList	arminsn -> str_hex		471125	1					
ANR	471289	Argument	arminsn -> str_hex		471125	0					
ANR	471290	PtrMemberAccess	arminsn -> str_hex		471125	0					
ANR	471291	Identifier	arminsn		471125	0					
ANR	471292	Identifier	str_hex		471125	1					
ANR	471293	Argument	"""%02x%02x%02x%02x"""		471125	1					
ANR	471294	PrimaryExpression	"""%02x%02x%02x%02x"""		471125	0					
ANR	471295	Argument	* ( ( ut8 * ) ( & inst ) )		471125	2					
ANR	471296	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) )		471125	0					
ANR	471297	UnaryOperator	*		471125	0					
ANR	471298	CastExpression	( ut8 * ) ( & inst )		471125	1					
ANR	471299	CastTarget	ut8 *		471125	0					
ANR	471300	UnaryOperationExpression	& inst		471125	1					
ANR	471301	UnaryOperator	&		471125	0					
ANR	471302	Identifier	inst		471125	1					
ANR	471303	Argument	* ( ( ut8 * ) ( & inst ) + 1 )		471125	3					
ANR	471304	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) + 1 )		471125	0					
ANR	471305	UnaryOperator	*		471125	0					
ANR	471306	AdditiveExpression	( ut8 * ) ( & inst ) + 1		471125	1		+			
ANR	471307	CastExpression	( ut8 * ) ( & inst )		471125	0					
ANR	471308	CastTarget	ut8 *		471125	0					
ANR	471309	UnaryOperationExpression	& inst		471125	1					
ANR	471310	UnaryOperator	&		471125	0					
ANR	471311	Identifier	inst		471125	1					
ANR	471312	PrimaryExpression	1		471125	1					
ANR	471313	Argument	* ( ( ut8 * ) ( & inst ) + 2 )		471125	4					
ANR	471314	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) + 2 )		471125	0					
ANR	471315	UnaryOperator	*		471125	0					
ANR	471316	AdditiveExpression	( ut8 * ) ( & inst ) + 2		471125	1		+			
ANR	471317	CastExpression	( ut8 * ) ( & inst )		471125	0					
ANR	471318	CastTarget	ut8 *		471125	0					
ANR	471319	UnaryOperationExpression	& inst		471125	1					
ANR	471320	UnaryOperator	&		471125	0					
ANR	471321	Identifier	inst		471125	1					
ANR	471322	PrimaryExpression	2		471125	1					
ANR	471323	Argument	* ( ( ut8 * ) ( & inst ) + 3 )		471125	5					
ANR	471324	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) + 3 )		471125	0					
ANR	471325	UnaryOperator	*		471125	0					
ANR	471326	AdditiveExpression	( ut8 * ) ( & inst ) + 3		471125	1		+			
ANR	471327	CastExpression	( ut8 * ) ( & inst )		471125	0					
ANR	471328	CastTarget	ut8 *		471125	0					
ANR	471329	UnaryOperationExpression	& inst		471125	1					
ANR	471330	UnaryOperator	&		471125	0					
ANR	471331	Identifier	inst		471125	1					
ANR	471332	PrimaryExpression	3		471125	1					
ANR	471333	ReturnStatement	return size ;	896:2:28585:28596	471125	5	True				
ANR	471334	Identifier	size		471125	0					
ANR	471335	ElseStatement	else		471125	0					
ANR	471336	CompoundStatement		31:8:833:833	471125	0					
ANR	471337	ExpressionStatement	"tinst = db_get_inst ( arminsn -> buf , THUMB_INSN_SIZE )"	898:2:28610:28660	471125	0	True				
ANR	471338	AssignmentExpression	"tinst = db_get_inst ( arminsn -> buf , THUMB_INSN_SIZE )"		471125	0		=			
ANR	471339	Identifier	tinst		471125	0					
ANR	471340	CallExpression	"db_get_inst ( arminsn -> buf , THUMB_INSN_SIZE )"		471125	1					
ANR	471341	Callee	db_get_inst		471125	0					
ANR	471342	Identifier	db_get_inst		471125	0					
ANR	471343	ArgumentList	arminsn -> buf		471125	1					
ANR	471344	Argument	arminsn -> buf		471125	0					
ANR	471345	PtrMemberAccess	arminsn -> buf		471125	0					
ANR	471346	Identifier	arminsn		471125	0					
ANR	471347	Identifier	buf		471125	1					
ANR	471348	Argument	THUMB_INSN_SIZE		471125	1					
ANR	471349	Identifier	THUMB_INSN_SIZE		471125	0					
ANR	471350	SwitchStatement	switch ( tinst & 0xf800 )		471125	1					
ANR	471351	Condition	tinst & 0xf800	899:10:28672:28685	471125	0	True				
ANR	471352	BitAndExpression	tinst & 0xf800		471125	0		&			
ANR	471353	Identifier	tinst		471125	0					
ANR	471354	PrimaryExpression	0xf800		471125	1					
ANR	471355	CompoundStatement		33:26:915:915	471125	1					
ANR	471356	Label	case 0xe800 :	900:2:28692:28703	471125	0	True				
ANR	471357	Label	case 0xf000 :	901:2:28707:28718	471125	1	True				
ANR	471358	Label	case 0xf800 :	902:2:28722:28733	471125	2	True				
ANR	471359	ExpressionStatement	size = THUMB2_INSN_SIZE	903:3:28738:28761	471125	3	True				
ANR	471360	AssignmentExpression	size = THUMB2_INSN_SIZE		471125	0		=			
ANR	471361	Identifier	size		471125	0					
ANR	471362	Identifier	THUMB2_INSN_SIZE		471125	1					
ANR	471363	ExpressionStatement	"inst = db_get_inst ( arminsn -> buf + 1 , THUMB_INSN_SIZE )"	904:3:28766:28817	471125	4	True				
ANR	471364	AssignmentExpression	"inst = db_get_inst ( arminsn -> buf + 1 , THUMB_INSN_SIZE )"		471125	0		=			
ANR	471365	Identifier	inst		471125	0					
ANR	471366	CallExpression	"db_get_inst ( arminsn -> buf + 1 , THUMB_INSN_SIZE )"		471125	1					
ANR	471367	Callee	db_get_inst		471125	0					
ANR	471368	Identifier	db_get_inst		471125	0					
ANR	471369	ArgumentList	arminsn -> buf + 1		471125	1					
ANR	471370	Argument	arminsn -> buf + 1		471125	0					
ANR	471371	AdditiveExpression	arminsn -> buf + 1		471125	0		+			
ANR	471372	PtrMemberAccess	arminsn -> buf		471125	0					
ANR	471373	Identifier	arminsn		471125	0					
ANR	471374	Identifier	buf		471125	1					
ANR	471375	PrimaryExpression	1		471125	1					
ANR	471376	Argument	THUMB_INSN_SIZE		471125	1					
ANR	471377	Identifier	THUMB_INSN_SIZE		471125	0					
ANR	471378	ExpressionStatement	inst |= ( tinst << 16 )	905:3:28822:28843	471125	5	True				
ANR	471379	AssignmentExpression	inst |= ( tinst << 16 )		471125	0		|=			
ANR	471380	Identifier	inst		471125	0					
ANR	471381	ShiftExpression	tinst << 16		471125	1		<<			
ANR	471382	Identifier	tinst		471125	0					
ANR	471383	PrimaryExpression	16		471125	1					
ANR	471384	WhileStatement	while ( t2_ptr -> func )		471125	6					
ANR	471385	Condition	t2_ptr -> func	907:10:28856:28867	471125	0	True				
ANR	471386	PtrMemberAccess	t2_ptr -> func		471125	0					
ANR	471387	Identifier	t2_ptr		471125	0					
ANR	471388	Identifier	func		471125	1					
ANR	471389	CompoundStatement		41:24:1097:1097	471125	1					
ANR	471390	IfStatement	if ( ( inst & t2_ptr -> mask ) == t2_ptr -> pattern )		471125	0					
ANR	471391	Condition	( inst & t2_ptr -> mask ) == t2_ptr -> pattern	908:8:28880:28920	471125	0	True				
ANR	471392	EqualityExpression	( inst & t2_ptr -> mask ) == t2_ptr -> pattern		471125	0		==			
ANR	471393	BitAndExpression	inst & t2_ptr -> mask		471125	0		&			
ANR	471394	Identifier	inst		471125	0					
ANR	471395	PtrMemberAccess	t2_ptr -> mask		471125	1					
ANR	471396	Identifier	t2_ptr		471125	0					
ANR	471397	Identifier	mask		471125	1					
ANR	471398	PtrMemberAccess	t2_ptr -> pattern		471125	1					
ANR	471399	Identifier	t2_ptr		471125	0					
ANR	471400	Identifier	pattern		471125	1					
ANR	471401	CompoundStatement		42:51:1150:1150	471125	1					
ANR	471402	ExpressionStatement	matched = 1	909:5:28930:28941	471125	0	True				
ANR	471403	AssignmentExpression	matched = 1		471125	0		=			
ANR	471404	Identifier	matched		471125	0					
ANR	471405	PrimaryExpression	1		471125	1					
ANR	471406	BreakStatement	break ;	910:5:28948:28953	471125	1	True				
ANR	471407	ExpressionStatement	t2_ptr ++	912:4:28965:28973	471125	1	True				
ANR	471408	PostIncDecOperationExpression	t2_ptr ++		471125	0					
ANR	471409	Identifier	t2_ptr		471125	0					
ANR	471410	IncDec	++		471125	1					
ANR	471411	IfStatement	if ( ! matched )		471125	7					
ANR	471412	Condition	! matched	915:7:28988:28995	471125	0	True				
ANR	471413	UnaryOperationExpression	! matched		471125	0					
ANR	471414	UnaryOperator	!		471125	0					
ANR	471415	Identifier	matched		471125	1					
ANR	471416	CompoundStatement		49:17:1225:1225	471125	1					
ANR	471417	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""Unknown Thumb2 Instruction: %08x"" , inst )"	916:4:29004:29097	471125	0	True				
ANR	471418	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""Unknown Thumb2 Instruction: %08x"" , inst )"		471125	0		=			
ANR	471419	PtrMemberAccess	arminsn -> str_asm		471125	0					
ANR	471420	Identifier	arminsn		471125	0					
ANR	471421	Identifier	str_asm		471125	1					
ANR	471422	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""Unknown Thumb2 Instruction: %08x"" , inst )"		471125	1					
ANR	471423	Callee	r_str_appendf		471125	0					
ANR	471424	Identifier	r_str_appendf		471125	0					
ANR	471425	ArgumentList	arminsn -> str_asm		471125	1					
ANR	471426	Argument	arminsn -> str_asm		471125	0					
ANR	471427	PtrMemberAccess	arminsn -> str_asm		471125	0					
ANR	471428	Identifier	arminsn		471125	0					
ANR	471429	Identifier	str_asm		471125	1					
ANR	471430	Argument	"""Unknown Thumb2 Instruction: %08x"""		471125	1					
ANR	471431	PrimaryExpression	"""Unknown Thumb2 Instruction: %08x"""		471125	0					
ANR	471432	Argument	inst		471125	2					
ANR	471433	Identifier	inst		471125	0					
ANR	471434	ElseStatement	else		471125	0					
ANR	471435	CompoundStatement		52:8:1339:1339	471125	0					
ANR	471436	ExpressionStatement	"t2_ptr -> func ( arminsn , inst )"	919:4:29118:29145	471125	0	True				
ANR	471437	CallExpression	"t2_ptr -> func ( arminsn , inst )"		471125	0					
ANR	471438	Callee	t2_ptr -> func		471125	0					
ANR	471439	PtrMemberAccess	t2_ptr -> func		471125	0					
ANR	471440	Identifier	t2_ptr		471125	0					
ANR	471441	Identifier	func		471125	1					
ANR	471442	ArgumentList	arminsn		471125	1					
ANR	471443	Argument	arminsn		471125	0					
ANR	471444	Identifier	arminsn		471125	0					
ANR	471445	Argument	inst		471125	1					
ANR	471446	Identifier	inst		471125	0					
ANR	471447	ExpressionStatement	"arminsn -> str_hex = r_str_appendf ( arminsn -> str_hex , ""%02x%02x%02x%02x"" , * ( ( ut8 * ) ( & inst ) ) , * ( ( ut8 * ) ( & inst ) + 1 ) , * ( ( ut8 * ) ( & inst ) + 2 ) , * ( ( ut8 * ) ( & inst ) + 3 ) )"	921:3:29156:29312	471125	8	True				
ANR	471448	AssignmentExpression	"arminsn -> str_hex = r_str_appendf ( arminsn -> str_hex , ""%02x%02x%02x%02x"" , * ( ( ut8 * ) ( & inst ) ) , * ( ( ut8 * ) ( & inst ) + 1 ) , * ( ( ut8 * ) ( & inst ) + 2 ) , * ( ( ut8 * ) ( & inst ) + 3 ) )"		471125	0		=			
ANR	471449	PtrMemberAccess	arminsn -> str_hex		471125	0					
ANR	471450	Identifier	arminsn		471125	0					
ANR	471451	Identifier	str_hex		471125	1					
ANR	471452	CallExpression	"r_str_appendf ( arminsn -> str_hex , ""%02x%02x%02x%02x"" , * ( ( ut8 * ) ( & inst ) ) , * ( ( ut8 * ) ( & inst ) + 1 ) , * ( ( ut8 * ) ( & inst ) + 2 ) , * ( ( ut8 * ) ( & inst ) + 3 ) )"		471125	1					
ANR	471453	Callee	r_str_appendf		471125	0					
ANR	471454	Identifier	r_str_appendf		471125	0					
ANR	471455	ArgumentList	arminsn -> str_hex		471125	1					
ANR	471456	Argument	arminsn -> str_hex		471125	0					
ANR	471457	PtrMemberAccess	arminsn -> str_hex		471125	0					
ANR	471458	Identifier	arminsn		471125	0					
ANR	471459	Identifier	str_hex		471125	1					
ANR	471460	Argument	"""%02x%02x%02x%02x"""		471125	1					
ANR	471461	PrimaryExpression	"""%02x%02x%02x%02x"""		471125	0					
ANR	471462	Argument	* ( ( ut8 * ) ( & inst ) )		471125	2					
ANR	471463	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) )		471125	0					
ANR	471464	UnaryOperator	*		471125	0					
ANR	471465	CastExpression	( ut8 * ) ( & inst )		471125	1					
ANR	471466	CastTarget	ut8 *		471125	0					
ANR	471467	UnaryOperationExpression	& inst		471125	1					
ANR	471468	UnaryOperator	&		471125	0					
ANR	471469	Identifier	inst		471125	1					
ANR	471470	Argument	* ( ( ut8 * ) ( & inst ) + 1 )		471125	3					
ANR	471471	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) + 1 )		471125	0					
ANR	471472	UnaryOperator	*		471125	0					
ANR	471473	AdditiveExpression	( ut8 * ) ( & inst ) + 1		471125	1		+			
ANR	471474	CastExpression	( ut8 * ) ( & inst )		471125	0					
ANR	471475	CastTarget	ut8 *		471125	0					
ANR	471476	UnaryOperationExpression	& inst		471125	1					
ANR	471477	UnaryOperator	&		471125	0					
ANR	471478	Identifier	inst		471125	1					
ANR	471479	PrimaryExpression	1		471125	1					
ANR	471480	Argument	* ( ( ut8 * ) ( & inst ) + 2 )		471125	4					
ANR	471481	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) + 2 )		471125	0					
ANR	471482	UnaryOperator	*		471125	0					
ANR	471483	AdditiveExpression	( ut8 * ) ( & inst ) + 2		471125	1		+			
ANR	471484	CastExpression	( ut8 * ) ( & inst )		471125	0					
ANR	471485	CastTarget	ut8 *		471125	0					
ANR	471486	UnaryOperationExpression	& inst		471125	1					
ANR	471487	UnaryOperator	&		471125	0					
ANR	471488	Identifier	inst		471125	1					
ANR	471489	PrimaryExpression	2		471125	1					
ANR	471490	Argument	* ( ( ut8 * ) ( & inst ) + 3 )		471125	5					
ANR	471491	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) + 3 )		471125	0					
ANR	471492	UnaryOperator	*		471125	0					
ANR	471493	AdditiveExpression	( ut8 * ) ( & inst ) + 3		471125	1		+			
ANR	471494	CastExpression	( ut8 * ) ( & inst )		471125	0					
ANR	471495	CastTarget	ut8 *		471125	0					
ANR	471496	UnaryOperationExpression	& inst		471125	1					
ANR	471497	UnaryOperator	&		471125	0					
ANR	471498	Identifier	inst		471125	1					
ANR	471499	PrimaryExpression	3		471125	1					
ANR	471500	ReturnStatement	return size ;	923:3:29317:29328	471125	9	True				
ANR	471501	Identifier	size		471125	0					
ANR	471502	Label	default :	924:2:29332:29339	471125	10	True				
ANR	471503	Identifier	default		471125	0					
ANR	471504	BreakStatement	break ;	925:3:29344:29349	471125	11	True				
ANR	471505	ExpressionStatement	size = THUMB_INSN_SIZE	928:2:29358:29380	471125	2	True				
ANR	471506	AssignmentExpression	size = THUMB_INSN_SIZE		471125	0		=			
ANR	471507	Identifier	size		471125	0					
ANR	471508	Identifier	THUMB_INSN_SIZE		471125	1					
ANR	471509	WhileStatement	while ( t_ptr -> func )		471125	3					
ANR	471510	Condition	t_ptr -> func	929:9:29391:29401	471125	0	True				
ANR	471511	PtrMemberAccess	t_ptr -> func		471125	0					
ANR	471512	Identifier	t_ptr		471125	0					
ANR	471513	Identifier	func		471125	1					
ANR	471514	CompoundStatement		63:22:1631:1631	471125	1					
ANR	471515	IfStatement	if ( ( tinst & t_ptr -> mask ) == t_ptr -> pattern )		471125	0					
ANR	471516	Condition	( tinst & t_ptr -> mask ) == t_ptr -> pattern	930:7:29413:29452	471125	0	True				
ANR	471517	EqualityExpression	( tinst & t_ptr -> mask ) == t_ptr -> pattern		471125	0		==			
ANR	471518	BitAndExpression	tinst & t_ptr -> mask		471125	0		&			
ANR	471519	Identifier	tinst		471125	0					
ANR	471520	PtrMemberAccess	t_ptr -> mask		471125	1					
ANR	471521	Identifier	t_ptr		471125	0					
ANR	471522	Identifier	mask		471125	1					
ANR	471523	PtrMemberAccess	t_ptr -> pattern		471125	1					
ANR	471524	Identifier	t_ptr		471125	0					
ANR	471525	Identifier	pattern		471125	1					
ANR	471526	CompoundStatement		64:49:1682:1682	471125	1					
ANR	471527	ExpressionStatement	matched = 1	931:4:29461:29472	471125	0	True				
ANR	471528	AssignmentExpression	matched = 1		471125	0		=			
ANR	471529	Identifier	matched		471125	0					
ANR	471530	PrimaryExpression	1		471125	1					
ANR	471531	BreakStatement	break ;	932:4:29478:29483	471125	1	True				
ANR	471532	ExpressionStatement	t_ptr ++	934:3:29493:29500	471125	1	True				
ANR	471533	PostIncDecOperationExpression	t_ptr ++		471125	0					
ANR	471534	Identifier	t_ptr		471125	0					
ANR	471535	IncDec	++		471125	1					
ANR	471536	IfStatement	if ( ! matched )		471125	4					
ANR	471537	Condition	! matched	937:6:29513:29520	471125	0	True				
ANR	471538	UnaryOperationExpression	! matched		471125	0					
ANR	471539	UnaryOperator	!		471125	0					
ANR	471540	Identifier	matched		471125	1					
ANR	471541	CompoundStatement		71:16:1750:1750	471125	1					
ANR	471542	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""Unknown Thumb Instruction: %04x"" , tinst )"	938:3:29528:29621	471125	0	True				
ANR	471543	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""Unknown Thumb Instruction: %04x"" , tinst )"		471125	0		=			
ANR	471544	PtrMemberAccess	arminsn -> str_asm		471125	0					
ANR	471545	Identifier	arminsn		471125	0					
ANR	471546	Identifier	str_asm		471125	1					
ANR	471547	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""Unknown Thumb Instruction: %04x"" , tinst )"		471125	1					
ANR	471548	Callee	r_str_appendf		471125	0					
ANR	471549	Identifier	r_str_appendf		471125	0					
ANR	471550	ArgumentList	arminsn -> str_asm		471125	1					
ANR	471551	Argument	arminsn -> str_asm		471125	0					
ANR	471552	PtrMemberAccess	arminsn -> str_asm		471125	0					
ANR	471553	Identifier	arminsn		471125	0					
ANR	471554	Identifier	str_asm		471125	1					
ANR	471555	Argument	"""Unknown Thumb Instruction: %04x"""		471125	1					
ANR	471556	PrimaryExpression	"""Unknown Thumb Instruction: %04x"""		471125	0					
ANR	471557	Argument	tinst		471125	2					
ANR	471558	Identifier	tinst		471125	0					
ANR	471559	ElseStatement	else		471125	0					
ANR	471560	CompoundStatement		74:7:1861:1861	471125	0					
ANR	471561	ExpressionStatement	"t_ptr -> func ( arminsn , tinst )"	941:3:29639:29666	471125	0	True				
ANR	471562	CallExpression	"t_ptr -> func ( arminsn , tinst )"		471125	0					
ANR	471563	Callee	t_ptr -> func		471125	0					
ANR	471564	PtrMemberAccess	t_ptr -> func		471125	0					
ANR	471565	Identifier	t_ptr		471125	0					
ANR	471566	Identifier	func		471125	1					
ANR	471567	ArgumentList	arminsn		471125	1					
ANR	471568	Argument	arminsn		471125	0					
ANR	471569	Identifier	arminsn		471125	0					
ANR	471570	Argument	tinst		471125	1					
ANR	471571	Identifier	tinst		471125	0					
ANR	471572	ExpressionStatement	"arminsn -> str_hex = r_str_appendf ( arminsn -> str_hex , ""%02x%02x"" , * ( ( ut8 * ) ( & tinst ) ) , * ( ( ut8 * ) ( & tinst ) + 1 ) )"	943:2:29674:29777	471125	5	True				
ANR	471573	AssignmentExpression	"arminsn -> str_hex = r_str_appendf ( arminsn -> str_hex , ""%02x%02x"" , * ( ( ut8 * ) ( & tinst ) ) , * ( ( ut8 * ) ( & tinst ) + 1 ) )"		471125	0		=			
ANR	471574	PtrMemberAccess	arminsn -> str_hex		471125	0					
ANR	471575	Identifier	arminsn		471125	0					
ANR	471576	Identifier	str_hex		471125	1					
ANR	471577	CallExpression	"r_str_appendf ( arminsn -> str_hex , ""%02x%02x"" , * ( ( ut8 * ) ( & tinst ) ) , * ( ( ut8 * ) ( & tinst ) + 1 ) )"		471125	1					
ANR	471578	Callee	r_str_appendf		471125	0					
ANR	471579	Identifier	r_str_appendf		471125	0					
ANR	471580	ArgumentList	arminsn -> str_hex		471125	1					
ANR	471581	Argument	arminsn -> str_hex		471125	0					
ANR	471582	PtrMemberAccess	arminsn -> str_hex		471125	0					
ANR	471583	Identifier	arminsn		471125	0					
ANR	471584	Identifier	str_hex		471125	1					
ANR	471585	Argument	"""%02x%02x"""		471125	1					
ANR	471586	PrimaryExpression	"""%02x%02x"""		471125	0					
ANR	471587	Argument	* ( ( ut8 * ) ( & tinst ) )		471125	2					
ANR	471588	UnaryOperationExpression	* ( ( ut8 * ) ( & tinst ) )		471125	0					
ANR	471589	UnaryOperator	*		471125	0					
ANR	471590	CastExpression	( ut8 * ) ( & tinst )		471125	1					
ANR	471591	CastTarget	ut8 *		471125	0					
ANR	471592	UnaryOperationExpression	& tinst		471125	1					
ANR	471593	UnaryOperator	&		471125	0					
ANR	471594	Identifier	tinst		471125	1					
ANR	471595	Argument	* ( ( ut8 * ) ( & tinst ) + 1 )		471125	3					
ANR	471596	UnaryOperationExpression	* ( ( ut8 * ) ( & tinst ) + 1 )		471125	0					
ANR	471597	UnaryOperator	*		471125	0					
ANR	471598	AdditiveExpression	( ut8 * ) ( & tinst ) + 1		471125	1		+			
ANR	471599	CastExpression	( ut8 * ) ( & tinst )		471125	0					
ANR	471600	CastTarget	ut8 *		471125	0					
ANR	471601	UnaryOperationExpression	& tinst		471125	1					
ANR	471602	UnaryOperator	&		471125	0					
ANR	471603	Identifier	tinst		471125	1					
ANR	471604	PrimaryExpression	1		471125	1					
ANR	471605	ReturnStatement	return size ;	944:2:29781:29792	471125	6	True				
ANR	471606	Identifier	size		471125	0					
ANR	471607	ReturnStatement	return size ;	946:1:29798:29809	471125	19	True				
ANR	471608	Identifier	size		471125	0					
ANR	471609	ReturnType	int		471125	1					
ANR	471610	Identifier	arm_disasm_one_insn		471125	2					
ANR	471611	ParameterList	struct winedbg_arm_insn * arminsn		471125	3					
ANR	471612	Parameter	struct winedbg_arm_insn * arminsn	867:24:27738:27769	471125	0	True				
ANR	471613	ParameterType	struct winedbg_arm_insn *		471125	0					
ANR	471614	Identifier	arminsn		471125	1					
ANR	471615	CFGEntryNode	ENTRY		471125		True				
ANR	471616	CFGExitNode	EXIT		471125		True				
ANR	471617	Symbol	t2_ptr -> pattern		471125						
ANR	471618	Symbol	& tbl_thumb16		471125						
ANR	471619	Symbol	t_ptr -> mask		471125						
ANR	471620	Symbol	THUMB2_INSN_SIZE		471125						
ANR	471621	Symbol	* ( ( ut8 * ) ( & tinst ) )		471125						
ANR	471622	Symbol	& inst		471125						
ANR	471623	Symbol	arminsn -> str_asm		471125						
ANR	471624	Symbol	t2_ptr -> func		471125						
ANR	471625	Symbol	THUMB_INSN_SIZE		471125						
ANR	471626	Symbol	a_ptr		471125						
ANR	471627	Symbol	db_get_inst		471125						
ANR	471628	Symbol	& tbl_arm		471125						
ANR	471629	Symbol	& tinst		471125						
ANR	471630	Symbol	* t_ptr		471125						
ANR	471631	Symbol	t_ptr -> func		471125						
ANR	471632	Symbol	arminsn -> buf		471125						
ANR	471633	Symbol	t_ptr -> pattern		471125						
ANR	471634	Symbol	arminsn		471125						
ANR	471635	Symbol	a_ptr -> mask		471125						
ANR	471636	Symbol	ARM_INSN_SIZE		471125						
ANR	471637	Symbol	t_ptr		471125						
ANR	471638	Symbol	tinst		471125						
ANR	471639	Symbol	arminsn -> str_hex		471125						
ANR	471640	Symbol	* arminsn		471125						
ANR	471641	Symbol	* ( ( ut8 * ) ( & inst ) + 1 )		471125						
ANR	471642	Symbol	arminsn -> thumb		471125						
ANR	471643	Symbol	* ( ( ut8 * ) ( & inst ) + 2 )		471125						
ANR	471644	Symbol	t2_ptr		471125						
ANR	471645	Symbol	* ( ( ut8 * ) ( & inst ) + 3 )		471125						
ANR	471646	Symbol	size		471125						
ANR	471647	Symbol	a_ptr -> pattern		471125						
ANR	471648	Symbol	* ( ( ut8 * ) ( & tinst ) + 1 )		471125						
ANR	471649	Symbol	inst		471125						
ANR	471650	Symbol	r_str_appendf		471125						
ANR	471651	Symbol	& tbl_thumb32		471125						
ANR	471652	Symbol	* ( ( ut8 * ) ( & inst ) )		471125						
ANR	471653	Symbol	matched		471125						
ANR	471654	Symbol	t2_ptr -> mask		471125						
ANR	471655	Symbol	* t2_ptr		471125						
ANR	471656	Symbol	a_ptr -> func		471125						
ANR	471657	Symbol	* a_ptr		471125						
