command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5124531	File	data/converged/CVE-2019-16718~_radare2/libr_util_format.c								
ANR	5124532	Function	updateAddr	33:0:922:1622							
ANR	5124533	FunctionDef	"updateAddr (const ut8 * buf , int len , int endian , ut64 * addr , ut64 * addr64)"		5124532	0					
ANR	5124534	CompoundStatement		33:87:1009:1622	5124532	0					
ANR	5124535	IdentifierDeclStatement	float f = 0.0 ;	34:1:1012:1025	5124532	0	True				
ANR	5124536	IdentifierDecl	f = 0.0		5124532	0					
ANR	5124537	IdentifierDeclType	float		5124532	0					
ANR	5124538	Identifier	f		5124532	1					
ANR	5124539	AssignmentExpression	f = 0.0		5124532	2		=			
ANR	5124540	Identifier	f		5124532	0					
ANR	5124541	PrimaryExpression	0.0		5124532	1					
ANR	5124542	IfStatement	if ( len >= THRESHOLD - 7 && len < THRESHOLD )		5124532	1					
ANR	5124543	Condition	len >= THRESHOLD - 7 && len < THRESHOLD	37:5:1225:1263	5124532	0	True				
ANR	5124544	AndExpression	len >= THRESHOLD - 7 && len < THRESHOLD		5124532	0		&&			
ANR	5124545	RelationalExpression	len >= THRESHOLD - 7		5124532	0		>=			
ANR	5124546	Identifier	len		5124532	0					
ANR	5124547	AdditiveExpression	THRESHOLD - 7		5124532	1		-			
ANR	5124548	Identifier	THRESHOLD		5124532	0					
ANR	5124549	PrimaryExpression	7		5124532	1					
ANR	5124550	RelationalExpression	len < THRESHOLD		5124532	1		<			
ANR	5124551	Identifier	len		5124532	0					
ANR	5124552	Identifier	THRESHOLD		5124532	1					
ANR	5124553	CompoundStatement		5:46:256:256	5124532	1					
ANR	5124554	ExpressionStatement	len = len + THRESHOLD	38:2:1270:1291	5124532	0	True				
ANR	5124555	AssignmentExpression	len = len + THRESHOLD		5124532	0		=			
ANR	5124556	Identifier	len		5124532	0					
ANR	5124557	AdditiveExpression	len + THRESHOLD		5124532	1		+			
ANR	5124558	Identifier	len		5124532	0					
ANR	5124559	Identifier	THRESHOLD		5124532	1					
ANR	5124560	ElseStatement	else		5124532	0					
ANR	5124561	CompoundStatement		7:8:324:324	5124532	0					
ANR	5124562	ExpressionStatement	len = 999	40:2:1338:1347	5124532	0	True				
ANR	5124563	AssignmentExpression	len = 999		5124532	0		=			
ANR	5124564	Identifier	len		5124532	0					
ANR	5124565	PrimaryExpression	999		5124532	1					
ANR	5124566	IfStatement	if ( len >= sizeof ( float ) )		5124532	2					
ANR	5124567	Condition	len >= sizeof ( float )	42:5:1357:1377	5124532	0	True				
ANR	5124568	RelationalExpression	len >= sizeof ( float )		5124532	0		>=			
ANR	5124569	Identifier	len		5124532	0					
ANR	5124570	SizeofExpression	sizeof ( float )		5124532	1					
ANR	5124571	Sizeof	sizeof		5124532	0					
ANR	5124572	SizeofOperand	float		5124532	1					
ANR	5124573	CompoundStatement		10:28:370:370	5124532	1					
ANR	5124574	ExpressionStatement	"r_mem_swaporcopy ( ( ut8 * ) & f , buf , sizeof ( float ) , endian )"	43:2:1384:1440	5124532	0	True				
ANR	5124575	CallExpression	"r_mem_swaporcopy ( ( ut8 * ) & f , buf , sizeof ( float ) , endian )"		5124532	0					
ANR	5124576	Callee	r_mem_swaporcopy		5124532	0					
ANR	5124577	Identifier	r_mem_swaporcopy		5124532	0					
ANR	5124578	ArgumentList	( ut8 * ) & f		5124532	1					
ANR	5124579	Argument	( ut8 * ) & f		5124532	0					
ANR	5124580	CastExpression	( ut8 * ) & f		5124532	0					
ANR	5124581	CastTarget	ut8 *		5124532	0					
ANR	5124582	UnaryOperationExpression	& f		5124532	1					
ANR	5124583	UnaryOperator	&		5124532	0					
ANR	5124584	Identifier	f		5124532	1					
ANR	5124585	Argument	buf		5124532	1					
ANR	5124586	Identifier	buf		5124532	0					
ANR	5124587	Argument	sizeof ( float )		5124532	2					
ANR	5124588	SizeofExpression	sizeof ( float )		5124532	0					
ANR	5124589	Sizeof	sizeof		5124532	0					
ANR	5124590	SizeofOperand	float		5124532	1					
ANR	5124591	Argument	endian		5124532	3					
ANR	5124592	Identifier	endian		5124532	0					
ANR	5124593	IfStatement	if ( addr && len > 3 )		5124532	3					
ANR	5124594	Condition	addr && len > 3	45:5:1450:1464	5124532	0	True				
ANR	5124595	AndExpression	addr && len > 3		5124532	0		&&			
ANR	5124596	Identifier	addr		5124532	0					
ANR	5124597	RelationalExpression	len > 3		5124532	1		>			
ANR	5124598	Identifier	len		5124532	0					
ANR	5124599	PrimaryExpression	3		5124532	1					
ANR	5124600	CompoundStatement		14:2:461:502	5124532	1					
ANR	5124601	IdentifierDeclStatement	"ut32 tmpaddr = r_read_ble32 ( buf , endian ) ;"	46:2:1471:1512	5124532	0	True				
ANR	5124602	IdentifierDecl	"tmpaddr = r_read_ble32 ( buf , endian )"		5124532	0					
ANR	5124603	IdentifierDeclType	ut32		5124532	0					
ANR	5124604	Identifier	tmpaddr		5124532	1					
ANR	5124605	AssignmentExpression	"tmpaddr = r_read_ble32 ( buf , endian )"		5124532	2		=			
ANR	5124606	Identifier	tmpaddr		5124532	0					
ANR	5124607	CallExpression	"r_read_ble32 ( buf , endian )"		5124532	1					
ANR	5124608	Callee	r_read_ble32		5124532	0					
ANR	5124609	Identifier	r_read_ble32		5124532	0					
ANR	5124610	ArgumentList	buf		5124532	1					
ANR	5124611	Argument	buf		5124532	0					
ANR	5124612	Identifier	buf		5124532	0					
ANR	5124613	Argument	endian		5124532	1					
ANR	5124614	Identifier	endian		5124532	0					
ANR	5124615	ExpressionStatement	* addr = ( ut64 ) tmpaddr	47:2:1516:1537	5124532	1	True				
ANR	5124616	AssignmentExpression	* addr = ( ut64 ) tmpaddr		5124532	0		=			
ANR	5124617	UnaryOperationExpression	* addr		5124532	0					
ANR	5124618	UnaryOperator	*		5124532	0					
ANR	5124619	Identifier	addr		5124532	1					
ANR	5124620	CastExpression	( ut64 ) tmpaddr		5124532	1					
ANR	5124621	CastTarget	ut64		5124532	0					
ANR	5124622	Identifier	tmpaddr		5124532	1					
ANR	5124623	IfStatement	if ( addr64 && len > 7 )		5124532	4					
ANR	5124624	Condition	addr64 && len > 7	49:5:1547:1563	5124532	0	True				
ANR	5124625	AndExpression	addr64 && len > 7		5124532	0		&&			
ANR	5124626	Identifier	addr64		5124532	0					
ANR	5124627	RelationalExpression	len > 7		5124532	1		>			
ANR	5124628	Identifier	len		5124532	0					
ANR	5124629	PrimaryExpression	7		5124532	1					
ANR	5124630	CompoundStatement		17:24:556:556	5124532	1					
ANR	5124631	ExpressionStatement	"* addr64 = r_read_ble64 ( buf , endian )"	50:2:1570:1606	5124532	0	True				
ANR	5124632	AssignmentExpression	"* addr64 = r_read_ble64 ( buf , endian )"		5124532	0		=			
ANR	5124633	UnaryOperationExpression	* addr64		5124532	0					
ANR	5124634	UnaryOperator	*		5124532	0					
ANR	5124635	Identifier	addr64		5124532	1					
ANR	5124636	CallExpression	"r_read_ble64 ( buf , endian )"		5124532	1					
ANR	5124637	Callee	r_read_ble64		5124532	0					
ANR	5124638	Identifier	r_read_ble64		5124532	0					
ANR	5124639	ArgumentList	buf		5124532	1					
ANR	5124640	Argument	buf		5124532	0					
ANR	5124641	Identifier	buf		5124532	0					
ANR	5124642	Argument	endian		5124532	1					
ANR	5124643	Identifier	endian		5124532	0					
ANR	5124644	ReturnStatement	return f ;	52:1:1612:1620	5124532	5	True				
ANR	5124645	Identifier	f		5124532	0					
ANR	5124646	ReturnType	static float		5124532	1					
ANR	5124647	Identifier	updateAddr		5124532	2					
ANR	5124648	ParameterList	"const ut8 * buf , int len , int endian , ut64 * addr , ut64 * addr64"		5124532	3					
ANR	5124649	Parameter	const ut8 * buf	33:24:946:959	5124532	0	True				
ANR	5124650	ParameterType	const ut8 *		5124532	0					
ANR	5124651	Identifier	buf		5124532	1					
ANR	5124652	Parameter	int len	33:40:962:968	5124532	1	True				
ANR	5124653	ParameterType	int		5124532	0					
ANR	5124654	Identifier	len		5124532	1					
ANR	5124655	Parameter	int endian	33:49:971:980	5124532	2	True				
ANR	5124656	ParameterType	int		5124532	0					
ANR	5124657	Identifier	endian		5124532	1					
ANR	5124658	Parameter	ut64 * addr	33:61:983:992	5124532	3	True				
ANR	5124659	ParameterType	ut64 *		5124532	0					
ANR	5124660	Identifier	addr		5124532	1					
ANR	5124661	Parameter	ut64 * addr64	33:73:995:1006	5124532	4	True				
ANR	5124662	ParameterType	ut64 *		5124532	0					
ANR	5124663	Identifier	addr64		5124532	1					
ANR	5124664	CFGEntryNode	ENTRY		5124532		True				
ANR	5124665	CFGExitNode	EXIT		5124532		True				
ANR	5124666	Symbol	tmpaddr		5124532						
ANR	5124667	Symbol	f		5124532						
ANR	5124668	Symbol	* addr64		5124532						
ANR	5124669	Symbol	& f		5124532						
ANR	5124670	Symbol	endian		5124532						
ANR	5124671	Symbol	buf		5124532						
ANR	5124672	Symbol	THRESHOLD		5124532						
ANR	5124673	Symbol	len		5124532						
ANR	5124674	Symbol	addr64		5124532						
ANR	5124675	Symbol	* addr		5124532						
ANR	5124676	Symbol	addr		5124532						
ANR	5124677	Symbol	r_read_ble32		5124532						
ANR	5124678	Symbol	r_read_ble64		5124532						
ANR	5124679	Function	r_get_size	55:0:1625:2030							
ANR	5124680	FunctionDef	"r_get_size (RNum * num , ut8 * buf , int endian , const char * s)"		5124679	0					
ANR	5124681	CompoundStatement		55:70:1695:2030	5124679	0					
ANR	5124682	IdentifierDeclStatement	"int size = 0 , len = strlen ( s ) ;"	56:1:1698:1728	5124679	0	True				
ANR	5124683	IdentifierDecl	size = 0		5124679	0					
ANR	5124684	IdentifierDeclType	int		5124679	0					
ANR	5124685	Identifier	size		5124679	1					
ANR	5124686	AssignmentExpression	size = 0		5124679	2		=			
ANR	5124687	Identifier	size		5124679	0					
ANR	5124688	PrimaryExpression	0		5124679	1					
ANR	5124689	IdentifierDecl	len = strlen ( s )		5124679	1					
ANR	5124690	IdentifierDeclType	int		5124679	0					
ANR	5124691	Identifier	len		5124679	1					
ANR	5124692	AssignmentExpression	len = strlen ( s )		5124679	2		=			
ANR	5124693	Identifier	len		5124679	0					
ANR	5124694	CallExpression	strlen ( s )		5124679	1					
ANR	5124695	Callee	strlen		5124679	0					
ANR	5124696	Identifier	strlen		5124679	0					
ANR	5124697	ArgumentList	s		5124679	1					
ANR	5124698	Argument	s		5124679	0					
ANR	5124699	Identifier	s		5124679	0					
ANR	5124700	IdentifierDeclStatement	ut64 addr ;	57:1:1731:1740	5124679	1	True				
ANR	5124701	IdentifierDecl	addr		5124679	0					
ANR	5124702	IdentifierDeclType	ut64		5124679	0					
ANR	5124703	Identifier	addr		5124679	1					
ANR	5124704	IfStatement	if ( s [ 0 ] == '*' && len >= 4 )		5124679	2					
ANR	5124705	Condition	s [ 0 ] == '*' && len >= 4	59:5:1748:1770	5124679	0	True				
ANR	5124706	AndExpression	s [ 0 ] == '*' && len >= 4		5124679	0		&&			
ANR	5124707	EqualityExpression	s [ 0 ] == '*'		5124679	0		==			
ANR	5124708	ArrayIndexing	s [ 0 ]		5124679	0					
ANR	5124709	Identifier	s		5124679	0					
ANR	5124710	PrimaryExpression	0		5124679	1					
ANR	5124711	PrimaryExpression	'*'		5124679	1					
ANR	5124712	RelationalExpression	len >= 4		5124679	1		>=			
ANR	5124713	Identifier	len		5124679	0					
ANR	5124714	PrimaryExpression	4		5124679	1					
ANR	5124715	CompoundStatement		6:2:113:154	5124679	1					
ANR	5124716	IdentifierDeclStatement	"int offset = ( int ) r_num_math ( num , s + 1 ) ;"	60:2:1809:1850	5124679	0	True				
ANR	5124717	IdentifierDecl	"offset = ( int ) r_num_math ( num , s + 1 )"		5124679	0					
ANR	5124718	IdentifierDeclType	int		5124679	0					
ANR	5124719	Identifier	offset		5124679	1					
ANR	5124720	AssignmentExpression	"offset = ( int ) r_num_math ( num , s + 1 )"		5124679	2		=			
ANR	5124721	Identifier	offset		5124679	0					
ANR	5124722	CastExpression	"( int ) r_num_math ( num , s + 1 )"		5124679	1					
ANR	5124723	CastTarget	int		5124679	0					
ANR	5124724	CallExpression	"r_num_math ( num , s + 1 )"		5124679	1					
ANR	5124725	Callee	r_num_math		5124679	0					
ANR	5124726	Identifier	r_num_math		5124679	0					
ANR	5124727	ArgumentList	num		5124679	1					
ANR	5124728	Argument	num		5124679	0					
ANR	5124729	Identifier	num		5124679	0					
ANR	5124730	Argument	s + 1		5124679	1					
ANR	5124731	AdditiveExpression	s + 1		5124679	0		+			
ANR	5124732	Identifier	s		5124679	0					
ANR	5124733	PrimaryExpression	1		5124679	1					
ANR	5124734	ExpressionStatement	"( void ) updateAddr ( buf + offset , 999 , endian , & addr , NULL )"	61:2:1854:1911	5124679	1	True				
ANR	5124735	CastExpression	"( void ) updateAddr ( buf + offset , 999 , endian , & addr , NULL )"		5124679	0					
ANR	5124736	CastTarget	void		5124679	0					
ANR	5124737	CallExpression	"updateAddr ( buf + offset , 999 , endian , & addr , NULL )"		5124679	1					
ANR	5124738	Callee	updateAddr		5124679	0					
ANR	5124739	Identifier	updateAddr		5124679	0					
ANR	5124740	ArgumentList	buf + offset		5124679	1					
ANR	5124741	Argument	buf + offset		5124679	0					
ANR	5124742	AdditiveExpression	buf + offset		5124679	0		+			
ANR	5124743	Identifier	buf		5124679	0					
ANR	5124744	Identifier	offset		5124679	1					
ANR	5124745	Argument	999		5124679	1					
ANR	5124746	PrimaryExpression	999		5124679	0					
ANR	5124747	Argument	endian		5124679	2					
ANR	5124748	Identifier	endian		5124679	0					
ANR	5124749	Argument	& addr		5124679	3					
ANR	5124750	UnaryOperationExpression	& addr		5124679	0					
ANR	5124751	UnaryOperator	&		5124679	0					
ANR	5124752	Identifier	addr		5124679	1					
ANR	5124753	Argument	NULL		5124679	4					
ANR	5124754	Identifier	NULL		5124679	0					
ANR	5124755	ReturnStatement	return addr ;	62:2:1915:1926	5124679	2	True				
ANR	5124756	Identifier	addr		5124679	0					
ANR	5124757	ElseStatement	else		5124679	0					
ANR	5124758	CompoundStatement		9:8:240:240	5124679	0					
ANR	5124759	ExpressionStatement	"size = r_num_math ( num , s )"	65:2:1985:2011	5124679	0	True				
ANR	5124760	AssignmentExpression	"size = r_num_math ( num , s )"		5124679	0		=			
ANR	5124761	Identifier	size		5124679	0					
ANR	5124762	CallExpression	"r_num_math ( num , s )"		5124679	1					
ANR	5124763	Callee	r_num_math		5124679	0					
ANR	5124764	Identifier	r_num_math		5124679	0					
ANR	5124765	ArgumentList	num		5124679	1					
ANR	5124766	Argument	num		5124679	0					
ANR	5124767	Identifier	num		5124679	0					
ANR	5124768	Argument	s		5124679	1					
ANR	5124769	Identifier	s		5124679	0					
ANR	5124770	ReturnStatement	return size ;	67:1:2017:2028	5124679	3	True				
ANR	5124771	Identifier	size		5124679	0					
ANR	5124772	ReturnType	static int		5124679	1					
ANR	5124773	Identifier	r_get_size		5124679	2					
ANR	5124774	ParameterList	"RNum * num , ut8 * buf , int endian , const char * s"		5124679	3					
ANR	5124775	Parameter	RNum * num	55:22:1647:1655	5124679	0	True				
ANR	5124776	ParameterType	RNum *		5124679	0					
ANR	5124777	Identifier	num		5124679	1					
ANR	5124778	Parameter	ut8 * buf	55:33:1658:1665	5124679	1	True				
ANR	5124779	ParameterType	ut8 *		5124679	0					
ANR	5124780	Identifier	buf		5124679	1					
ANR	5124781	Parameter	int endian	55:43:1668:1677	5124679	2	True				
ANR	5124782	ParameterType	int		5124679	0					
ANR	5124783	Identifier	endian		5124679	1					
ANR	5124784	Parameter	const char * s	55:55:1680:1692	5124679	3	True				
ANR	5124785	ParameterType	const char *		5124679	0					
ANR	5124786	Identifier	s		5124679	1					
ANR	5124787	CFGEntryNode	ENTRY		5124679		True				
ANR	5124788	CFGExitNode	EXIT		5124679		True				
ANR	5124789	Symbol	NULL		5124679						
ANR	5124790	Symbol	& addr		5124679						
ANR	5124791	Symbol	offset		5124679						
ANR	5124792	Symbol	num		5124679						
ANR	5124793	Symbol	endian		5124679						
ANR	5124794	Symbol	r_num_math		5124679						
ANR	5124795	Symbol	strlen		5124679						
ANR	5124796	Symbol	buf		5124679						
ANR	5124797	Symbol	s		5124679						
ANR	5124798	Symbol	len		5124679						
ANR	5124799	Symbol	size		5124679						
ANR	5124800	Symbol	addr		5124679						
ANR	5124801	Symbol	* s		5124679						
ANR	5124802	Function	r_print_format_quadword	70:0:2033:3790							
ANR	5124803	FunctionDef	"r_print_format_quadword (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5124802	0					
ANR	5124804	CompoundStatement		71:61:2169:3790	5124802	0					
ANR	5124805	IdentifierDeclStatement	ut64 addr64 ;	72:1:2172:2183	5124802	0	True				
ANR	5124806	IdentifierDecl	addr64		5124802	0					
ANR	5124807	IdentifierDeclType	ut64		5124802	0					
ANR	5124808	Identifier	addr64		5124802	1					
ANR	5124809	IdentifierDeclStatement	int elem = - 1 ;	73:1:2186:2199	5124802	1	True				
ANR	5124810	IdentifierDecl	elem = - 1		5124802	0					
ANR	5124811	IdentifierDeclType	int		5124802	0					
ANR	5124812	Identifier	elem		5124802	1					
ANR	5124813	AssignmentExpression	elem = - 1		5124802	2		=			
ANR	5124814	Identifier	elem		5124802	0					
ANR	5124815	UnaryOperationExpression	- 1		5124802	1					
ANR	5124816	UnaryOperator	-		5124802	0					
ANR	5124817	PrimaryExpression	1		5124802	1					
ANR	5124818	IfStatement	if ( size >= ARRAYINDEX_COEF )		5124802	2					
ANR	5124819	Condition	size >= ARRAYINDEX_COEF	74:5:2206:2228	5124802	0	True				
ANR	5124820	RelationalExpression	size >= ARRAYINDEX_COEF		5124802	0		>=			
ANR	5124821	Identifier	size		5124802	0					
ANR	5124822	Identifier	ARRAYINDEX_COEF		5124802	1					
ANR	5124823	CompoundStatement		4:30:61:61	5124802	1					
ANR	5124824	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	75:2:2235:2268	5124802	0	True				
ANR	5124825	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5124802	0		=			
ANR	5124826	Identifier	elem		5124802	0					
ANR	5124827	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5124802	1		-			
ANR	5124828	MultiplicativeExpression	size / ARRAYINDEX_COEF		5124802	0		/			
ANR	5124829	Identifier	size		5124802	0					
ANR	5124830	Identifier	ARRAYINDEX_COEF		5124802	1					
ANR	5124831	PrimaryExpression	1		5124802	1					
ANR	5124832	ExpressionStatement	size %= ARRAYINDEX_COEF	76:2:2272:2295	5124802	1	True				
ANR	5124833	AssignmentExpression	size %= ARRAYINDEX_COEF		5124802	0		%=			
ANR	5124834	Identifier	size		5124802	0					
ANR	5124835	Identifier	ARRAYINDEX_COEF		5124802	1					
ANR	5124836	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , NULL , & addr64 )"	78:1:2301:2354	5124802	3	True				
ANR	5124837	CallExpression	"updateAddr ( buf + i , size - i , endian , NULL , & addr64 )"		5124802	0					
ANR	5124838	Callee	updateAddr		5124802	0					
ANR	5124839	Identifier	updateAddr		5124802	0					
ANR	5124840	ArgumentList	buf + i		5124802	1					
ANR	5124841	Argument	buf + i		5124802	0					
ANR	5124842	AdditiveExpression	buf + i		5124802	0		+			
ANR	5124843	Identifier	buf		5124802	0					
ANR	5124844	Identifier	i		5124802	1					
ANR	5124845	Argument	size - i		5124802	1					
ANR	5124846	AdditiveExpression	size - i		5124802	0		-			
ANR	5124847	Identifier	size		5124802	0					
ANR	5124848	Identifier	i		5124802	1					
ANR	5124849	Argument	endian		5124802	2					
ANR	5124850	Identifier	endian		5124802	0					
ANR	5124851	Argument	NULL		5124802	3					
ANR	5124852	Identifier	NULL		5124802	0					
ANR	5124853	Argument	& addr64		5124802	4					
ANR	5124854	UnaryOperationExpression	& addr64		5124802	0					
ANR	5124855	UnaryOperator	&		5124802	0					
ANR	5124856	Identifier	addr64		5124802	1					
ANR	5124857	IfStatement	if ( MUSTSET )		5124802	4					
ANR	5124858	Condition	MUSTSET	79:5:2361:2367	5124802	0	True				
ANR	5124859	Identifier	MUSTSET		5124802	0					
ANR	5124860	CompoundStatement		9:14:200:200	5124802	1					
ANR	5124861	Statement	p	80:2:2374:2374	5124802	0	True				
ANR	5124862	Statement	->	80:3:2375:2376	5124802	1	True				
ANR	5124863	Statement	cb_printf	80:5:2377:2385	5124802	2	True				
ANR	5124864	Statement	(	80:15:2387:2387	5124802	3	True				
ANR	5124865	Statement	"""wv8 %s @ 0x%08"""	80:16:2388:2403	5124802	4	True				
ANR	5124866	Statement	PFMT64x	80:32:2404:2410	5124802	5	True				
ANR	5124867	Statement	"""\\n"""	80:39:2411:2414	5124802	6	True				
ANR	5124868	Statement	","	80:43:2415:2415	5124802	7	True				
ANR	5124869	Statement	setval	80:45:2417:2422	5124802	8	True				
ANR	5124870	Statement	","	80:51:2423:2423	5124802	9	True				
ANR	5124871	Statement	seeki	80:53:2425:2429	5124802	10	True				
ANR	5124872	Statement	+	80:58:2430:2430	5124802	11	True				
ANR	5124873	Statement	(	80:59:2431:2431	5124802	12	True				
ANR	5124874	Statement	(	80:60:2432:2432	5124802	13	True				
ANR	5124875	Statement	elem	80:61:2433:2436	5124802	14	True				
ANR	5124876	Statement	>=	80:65:2437:2438	5124802	15	True				
ANR	5124877	Statement	0	80:67:2439:2439	5124802	16	True				
ANR	5124878	Statement	)	80:68:2440:2440	5124802	17	True				
ANR	5124879	Statement	?	80:69:2441:2441	5124802	18	True				
ANR	5124880	Statement	elem	80:70:2442:2445	5124802	19	True				
ANR	5124881	Statement	*	80:74:2446:2446	5124802	20	True				
ANR	5124882	Label	8 :	80:75:2447:2448	5124802	21	True				
ANR	5124883	Statement	0	80:77:2449:2449	5124802	22	True				
ANR	5124884	Statement	)	80:78:2450:2450	5124802	23	True				
ANR	5124885	Statement	)	80:79:2451:2451	5124802	24	True				
ANR	5124886	ExpressionStatement		80:80:2452:2452	5124802	25	True				
ANR	5124887	ElseStatement	else		5124802	0					
ANR	5124888	IfStatement	if ( MUSTSEE )		5124802	0					
ANR	5124889	Condition	MUSTSEE	81:12:2466:2472	5124802	0	True				
ANR	5124890	Identifier	MUSTSEE		5124802	0					
ANR	5124891	CompoundStatement		11:21:305:305	5124802	1					
ANR	5124892	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5124802	0					
ANR	5124893	Condition	! SEEVALUE && ! ISQUIET	82:6:2483:2503	5124802	0	True				
ANR	5124894	AndExpression	! SEEVALUE && ! ISQUIET		5124802	0		&&			
ANR	5124895	UnaryOperationExpression	! SEEVALUE		5124802	0					
ANR	5124896	UnaryOperator	!		5124802	0					
ANR	5124897	Identifier	SEEVALUE		5124802	1					
ANR	5124898	UnaryOperationExpression	! ISQUIET		5124802	1					
ANR	5124899	UnaryOperator	!		5124802	0					
ANR	5124900	Identifier	ISQUIET		5124802	1					
ANR	5124901	CompoundStatement		12:29:336:336	5124802	1					
ANR	5124902	Statement	p	83:3:2511:2511	5124802	0	True				
ANR	5124903	Statement	->	83:4:2512:2513	5124802	1	True				
ANR	5124904	Statement	cb_printf	83:6:2514:2522	5124802	2	True				
ANR	5124905	Statement	(	83:16:2524:2524	5124802	3	True				
ANR	5124906	Statement	"""0x%08"""	83:17:2525:2531	5124802	4	True				
ANR	5124907	Statement	PFMT64x	83:24:2532:2538	5124802	5	True				
ANR	5124908	Statement	""" = (qword)"""	83:31:2539:2550	5124802	6	True				
ANR	5124909	Statement	","	83:43:2551:2551	5124802	7	True				
ANR	5124910	Statement	seeki	84:4:2557:2561	5124802	8	True				
ANR	5124911	Statement	+	84:10:2563:2563	5124802	9	True				
ANR	5124912	Statement	(	84:12:2565:2565	5124802	10	True				
ANR	5124913	Statement	(	84:13:2566:2566	5124802	11	True				
ANR	5124914	Statement	elem	84:14:2567:2570	5124802	12	True				
ANR	5124915	Statement	>=	84:19:2572:2573	5124802	13	True				
ANR	5124916	Statement	0	84:22:2575:2575	5124802	14	True				
ANR	5124917	Statement	)	84:23:2576:2576	5124802	15	True				
ANR	5124918	Statement	?	84:24:2577:2577	5124802	16	True				
ANR	5124919	Statement	elem	84:26:2579:2582	5124802	17	True				
ANR	5124920	Statement	*	84:31:2584:2584	5124802	18	True				
ANR	5124921	Label	2 :	84:33:2586:2587	5124802	19	True				
ANR	5124922	Statement	0	84:36:2589:2589	5124802	20	True				
ANR	5124923	Statement	)	84:37:2590:2590	5124802	21	True				
ANR	5124924	Statement	)	84:38:2591:2591	5124802	22	True				
ANR	5124925	ExpressionStatement		84:39:2592:2592	5124802	23	True				
ANR	5124926	IfStatement	if ( size == - 1 )		5124802	1					
ANR	5124927	Condition	size == - 1	86:6:2604:2613	5124802	0	True				
ANR	5124928	EqualityExpression	size == - 1		5124802	0		==			
ANR	5124929	Identifier	size		5124802	0					
ANR	5124930	UnaryOperationExpression	- 1		5124802	1					
ANR	5124931	UnaryOperator	-		5124802	0					
ANR	5124932	PrimaryExpression	1		5124802	1					
ANR	5124933	CompoundStatement		16:18:446:446	5124802	1					
ANR	5124934	IfStatement	if ( addr64 == UT32_MAX || ( ( st64 ) addr64 < 0 && ( st64 ) addr64 > - 4096 ) )		5124802	0					
ANR	5124935	Condition	addr64 == UT32_MAX || ( ( st64 ) addr64 < 0 && ( st64 ) addr64 > - 4096 )	87:7:2625:2688	5124802	0	True				
ANR	5124936	OrExpression	addr64 == UT32_MAX || ( ( st64 ) addr64 < 0 && ( st64 ) addr64 > - 4096 )		5124802	0		||			
ANR	5124937	EqualityExpression	addr64 == UT32_MAX		5124802	0		==			
ANR	5124938	Identifier	addr64		5124802	0					
ANR	5124939	Identifier	UT32_MAX		5124802	1					
ANR	5124940	AndExpression	( st64 ) addr64 < 0 && ( st64 ) addr64 > - 4096		5124802	1		&&			
ANR	5124941	RelationalExpression	( st64 ) addr64 < 0		5124802	0		<			
ANR	5124942	CastExpression	( st64 ) addr64		5124802	0					
ANR	5124943	CastTarget	st64		5124802	0					
ANR	5124944	Identifier	addr64		5124802	1					
ANR	5124945	PrimaryExpression	0		5124802	1					
ANR	5124946	RelationalExpression	( st64 ) addr64 > - 4096		5124802	1		>			
ANR	5124947	CastExpression	( st64 ) addr64		5124802	0					
ANR	5124948	CastTarget	st64		5124802	0					
ANR	5124949	Identifier	addr64		5124802	1					
ANR	5124950	UnaryOperationExpression	- 4096		5124802	1					
ANR	5124951	UnaryOperator	-		5124802	0					
ANR	5124952	PrimaryExpression	4096		5124802	1					
ANR	5124953	CompoundStatement		17:73:521:521	5124802	1					
ANR	5124954	ExpressionStatement	"p -> cb_printf ( ""%d"" , ( int ) ( addr64 ) )"	88:4:2697:2731	5124802	0	True				
ANR	5124955	CallExpression	"p -> cb_printf ( ""%d"" , ( int ) ( addr64 ) )"		5124802	0					
ANR	5124956	Callee	p -> cb_printf		5124802	0					
ANR	5124957	PtrMemberAccess	p -> cb_printf		5124802	0					
ANR	5124958	Identifier	p		5124802	0					
ANR	5124959	Identifier	cb_printf		5124802	1					
ANR	5124960	ArgumentList	"""%d"""		5124802	1					
ANR	5124961	Argument	"""%d"""		5124802	0					
ANR	5124962	PrimaryExpression	"""%d"""		5124802	0					
ANR	5124963	Argument	( int ) ( addr64 )		5124802	1					
ANR	5124964	CastExpression	( int ) ( addr64 )		5124802	0					
ANR	5124965	CastTarget	int		5124802	0					
ANR	5124966	Identifier	addr64		5124802	1					
ANR	5124967	ElseStatement	else		5124802	0					
ANR	5124968	CompoundStatement		19:10:573:573	5124802	0					
ANR	5124969	Statement	p	90:4:2749:2749	5124802	0	True				
ANR	5124970	Statement	->	90:5:2750:2751	5124802	1	True				
ANR	5124971	Statement	cb_printf	90:7:2752:2760	5124802	2	True				
ANR	5124972	Statement	(	90:17:2762:2762	5124802	3	True				
ANR	5124973	Statement	"""0x%016"""	90:18:2763:2770	5124802	4	True				
ANR	5124974	Statement	PFMT64x	90:26:2771:2777	5124802	5	True				
ANR	5124975	Statement	","	90:33:2778:2778	5124802	6	True				
ANR	5124976	Statement	addr64	90:35:2780:2785	5124802	7	True				
ANR	5124977	Statement	)	90:41:2786:2786	5124802	8	True				
ANR	5124978	ExpressionStatement		90:42:2787:2787	5124802	9	True				
ANR	5124979	ElseStatement	else		5124802	0					
ANR	5124980	CompoundStatement		22:9:633:633	5124802	0					
ANR	5124981	IfStatement	if ( ! SEEVALUE )		5124802	0					
ANR	5124982	Condition	! SEEVALUE	93:7:2812:2820	5124802	0	True				
ANR	5124983	UnaryOperationExpression	! SEEVALUE		5124802	0					
ANR	5124984	UnaryOperator	!		5124802	0					
ANR	5124985	Identifier	SEEVALUE		5124802	1					
ANR	5124986	CompoundStatement		23:18:653:653	5124802	1					
ANR	5124987	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	94:4:2829:2848	5124802	0	True				
ANR	5124988	CallExpression	"p -> cb_printf ( ""[ "" )"		5124802	0					
ANR	5124989	Callee	p -> cb_printf		5124802	0					
ANR	5124990	PtrMemberAccess	p -> cb_printf		5124802	0					
ANR	5124991	Identifier	p		5124802	0					
ANR	5124992	Identifier	cb_printf		5124802	1					
ANR	5124993	ArgumentList	"""[ """		5124802	1					
ANR	5124994	Argument	"""[ """		5124802	0					
ANR	5124995	PrimaryExpression	"""[ """		5124802	0					
ANR	5124996	WhileStatement	while ( size -- )		5124802	1					
ANR	5124997	Condition	size --	96:10:2865:2870	5124802	0	True				
ANR	5124998	PostIncDecOperationExpression	size --		5124802	0					
ANR	5124999	Identifier	size		5124802	0					
ANR	5125000	IncDec	--		5124802	1					
ANR	5125001	CompoundStatement		26:18:703:703	5124802	1					
ANR	5125002	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , NULL , & addr64 )"	97:4:2879:2932	5124802	0	True				
ANR	5125003	CallExpression	"updateAddr ( buf + i , size - i , endian , NULL , & addr64 )"		5124802	0					
ANR	5125004	Callee	updateAddr		5124802	0					
ANR	5125005	Identifier	updateAddr		5124802	0					
ANR	5125006	ArgumentList	buf + i		5124802	1					
ANR	5125007	Argument	buf + i		5124802	0					
ANR	5125008	AdditiveExpression	buf + i		5124802	0		+			
ANR	5125009	Identifier	buf		5124802	0					
ANR	5125010	Identifier	i		5124802	1					
ANR	5125011	Argument	size - i		5124802	1					
ANR	5125012	AdditiveExpression	size - i		5124802	0		-			
ANR	5125013	Identifier	size		5124802	0					
ANR	5125014	Identifier	i		5124802	1					
ANR	5125015	Argument	endian		5124802	2					
ANR	5125016	Identifier	endian		5124802	0					
ANR	5125017	Argument	NULL		5124802	3					
ANR	5125018	Identifier	NULL		5124802	0					
ANR	5125019	Argument	& addr64		5124802	4					
ANR	5125020	UnaryOperationExpression	& addr64		5124802	0					
ANR	5125021	UnaryOperator	&		5124802	0					
ANR	5125022	Identifier	addr64		5124802	1					
ANR	5125023	IfStatement	if ( elem == - 1 || elem == 0 )		5124802	1					
ANR	5125024	Condition	elem == - 1 || elem == 0	98:8:2942:2964	5124802	0	True				
ANR	5125025	OrExpression	elem == - 1 || elem == 0		5124802	0		||			
ANR	5125026	EqualityExpression	elem == - 1		5124802	0		==			
ANR	5125027	Identifier	elem		5124802	0					
ANR	5125028	UnaryOperationExpression	- 1		5124802	1					
ANR	5125029	UnaryOperator	-		5124802	0					
ANR	5125030	PrimaryExpression	1		5124802	1					
ANR	5125031	EqualityExpression	elem == 0		5124802	1		==			
ANR	5125032	Identifier	elem		5124802	0					
ANR	5125033	PrimaryExpression	0		5124802	1					
ANR	5125034	CompoundStatement		28:33:797:797	5124802	1					
ANR	5125035	Statement	p	99:5:2974:2974	5124802	0	True				
ANR	5125036	Statement	->	99:6:2975:2976	5124802	1	True				
ANR	5125037	Statement	cb_printf	99:8:2977:2985	5124802	2	True				
ANR	5125038	Statement	(	99:18:2987:2987	5124802	3	True				
ANR	5125039	Statement	"""0x%016"""	99:19:2988:2995	5124802	4	True				
ANR	5125040	Statement	PFMT64x	99:27:2996:3002	5124802	5	True				
ANR	5125041	Statement	","	99:34:3003:3003	5124802	6	True				
ANR	5125042	Statement	addr64	99:36:3005:3010	5124802	7	True				
ANR	5125043	Statement	)	99:42:3011:3011	5124802	8	True				
ANR	5125044	ExpressionStatement		99:43:3012:3012	5124802	9	True				
ANR	5125045	IfStatement	if ( elem == 0 )		5124802	10					
ANR	5125046	Condition	elem == 0	100:9:3023:3031	5124802	0	True				
ANR	5125047	EqualityExpression	elem == 0		5124802	0		==			
ANR	5125048	Identifier	elem		5124802	0					
ANR	5125049	PrimaryExpression	0		5124802	1					
ANR	5125050	CompoundStatement		30:20:864:864	5124802	1					
ANR	5125051	ExpressionStatement	elem = - 2	101:6:3042:3051	5124802	0	True				
ANR	5125052	AssignmentExpression	elem = - 2		5124802	0		=			
ANR	5125053	Identifier	elem		5124802	0					
ANR	5125054	UnaryOperationExpression	- 2		5124802	1					
ANR	5125055	UnaryOperator	-		5124802	0					
ANR	5125056	PrimaryExpression	2		5124802	1					
ANR	5125057	IfStatement	if ( size != 0 && elem == - 1 )		5124802	2					
ANR	5125058	Condition	size != 0 && elem == - 1	104:8:3074:3096	5124802	0	True				
ANR	5125059	AndExpression	size != 0 && elem == - 1		5124802	0		&&			
ANR	5125060	EqualityExpression	size != 0		5124802	0		!=			
ANR	5125061	Identifier	size		5124802	0					
ANR	5125062	PrimaryExpression	0		5124802	1					
ANR	5125063	EqualityExpression	elem == - 1		5124802	1		==			
ANR	5125064	Identifier	elem		5124802	0					
ANR	5125065	UnaryOperationExpression	- 1		5124802	1					
ANR	5125066	UnaryOperator	-		5124802	0					
ANR	5125067	PrimaryExpression	1		5124802	1					
ANR	5125068	CompoundStatement		34:33:929:929	5124802	1					
ANR	5125069	ExpressionStatement	"p -> cb_printf ( "", "" )"	105:5:3106:3125	5124802	0	True				
ANR	5125070	CallExpression	"p -> cb_printf ( "", "" )"		5124802	0					
ANR	5125071	Callee	p -> cb_printf		5124802	0					
ANR	5125072	PtrMemberAccess	p -> cb_printf		5124802	0					
ANR	5125073	Identifier	p		5124802	0					
ANR	5125074	Identifier	cb_printf		5124802	1					
ANR	5125075	ArgumentList	""", """		5124802	1					
ANR	5125076	Argument	""", """		5124802	0					
ANR	5125077	PrimaryExpression	""", """		5124802	0					
ANR	5125078	IfStatement	if ( elem > - 1 )		5124802	3					
ANR	5125079	Condition	elem > - 1	107:8:3141:3149	5124802	0	True				
ANR	5125080	RelationalExpression	elem > - 1		5124802	0		>			
ANR	5125081	Identifier	elem		5124802	0					
ANR	5125082	UnaryOperationExpression	- 1		5124802	1					
ANR	5125083	UnaryOperator	-		5124802	0					
ANR	5125084	PrimaryExpression	1		5124802	1					
ANR	5125085	CompoundStatement		37:19:982:982	5124802	1					
ANR	5125086	ExpressionStatement	elem --	108:5:3159:3165	5124802	0	True				
ANR	5125087	PostIncDecOperationExpression	elem --		5124802	0					
ANR	5125088	Identifier	elem		5124802	0					
ANR	5125089	IncDec	--		5124802	1					
ANR	5125090	ExpressionStatement	i += 8	110:4:3177:3183	5124802	4	True				
ANR	5125091	AssignmentExpression	i += 8		5124802	0		+=			
ANR	5125092	Identifier	i		5124802	0					
ANR	5125093	PrimaryExpression	8		5124802	1					
ANR	5125094	IfStatement	if ( ! SEEVALUE )		5124802	2					
ANR	5125095	Condition	! SEEVALUE	112:7:3197:3205	5124802	0	True				
ANR	5125096	UnaryOperationExpression	! SEEVALUE		5124802	0					
ANR	5125097	UnaryOperator	!		5124802	0					
ANR	5125098	Identifier	SEEVALUE		5124802	1					
ANR	5125099	CompoundStatement		42:18:1038:1038	5124802	1					
ANR	5125100	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	113:4:3214:3233	5124802	0	True				
ANR	5125101	CallExpression	"p -> cb_printf ( "" ]"" )"		5124802	0					
ANR	5125102	Callee	p -> cb_printf		5124802	0					
ANR	5125103	PtrMemberAccess	p -> cb_printf		5124802	0					
ANR	5125104	Identifier	p		5124802	0					
ANR	5125105	Identifier	cb_printf		5124802	1					
ANR	5125106	ArgumentList	""" ]"""		5124802	1					
ANR	5125107	Argument	""" ]"""		5124802	0					
ANR	5125108	PrimaryExpression	""" ]"""		5124802	0					
ANR	5125109	ElseStatement	else		5124802	0					
ANR	5125110	IfStatement	if ( MUSTSEEJSON || MUSTSEESTRUCT )		5124802	0					
ANR	5125111	Condition	MUSTSEEJSON || MUSTSEESTRUCT	116:12:3256:3283	5124802	0	True				
ANR	5125112	OrExpression	MUSTSEEJSON || MUSTSEESTRUCT		5124802	0		||			
ANR	5125113	Identifier	MUSTSEEJSON		5124802	0					
ANR	5125114	Identifier	MUSTSEESTRUCT		5124802	1					
ANR	5125115	CompoundStatement		46:42:1116:1116	5124802	1					
ANR	5125116	IfStatement	if ( size == - 1 )		5124802	0					
ANR	5125117	Condition	size == - 1	117:6:3294:3303	5124802	0	True				
ANR	5125118	EqualityExpression	size == - 1		5124802	0		==			
ANR	5125119	Identifier	size		5124802	0					
ANR	5125120	UnaryOperationExpression	- 1		5124802	1					
ANR	5125121	UnaryOperator	-		5124802	0					
ANR	5125122	PrimaryExpression	1		5124802	1					
ANR	5125123	CompoundStatement		47:18:1136:1136	5124802	1					
ANR	5125124	Statement	p	118:3:3311:3311	5124802	0	True				
ANR	5125125	Statement	->	118:4:3312:3313	5124802	1	True				
ANR	5125126	Statement	cb_printf	118:6:3314:3322	5124802	2	True				
ANR	5125127	Statement	(	118:16:3324:3324	5124802	3	True				
ANR	5125128	Statement	"""%"""	118:17:3325:3327	5124802	4	True				
ANR	5125129	Statement	PFMT64d	118:20:3328:3334	5124802	5	True				
ANR	5125130	Statement	","	118:27:3335:3335	5124802	6	True				
ANR	5125131	Statement	addr64	118:29:3337:3342	5124802	7	True				
ANR	5125132	Statement	)	118:35:3343:3343	5124802	8	True				
ANR	5125133	ExpressionStatement		118:36:3344:3344	5124802	9	True				
ANR	5125134	ElseStatement	else		5124802	0					
ANR	5125135	CompoundStatement		49:9:1185:1185	5124802	0					
ANR	5125136	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	120:3:3360:3379	5124802	0	True				
ANR	5125137	CallExpression	"p -> cb_printf ( ""[ "" )"		5124802	0					
ANR	5125138	Callee	p -> cb_printf		5124802	0					
ANR	5125139	PtrMemberAccess	p -> cb_printf		5124802	0					
ANR	5125140	Identifier	p		5124802	0					
ANR	5125141	Identifier	cb_printf		5124802	1					
ANR	5125142	ArgumentList	"""[ """		5124802	1					
ANR	5125143	Argument	"""[ """		5124802	0					
ANR	5125144	PrimaryExpression	"""[ """		5124802	0					
ANR	5125145	WhileStatement	while ( size -- )		5124802	1					
ANR	5125146	Condition	size --	121:10:3391:3396	5124802	0	True				
ANR	5125147	PostIncDecOperationExpression	size --		5124802	0					
ANR	5125148	Identifier	size		5124802	0					
ANR	5125149	IncDec	--		5124802	1					
ANR	5125150	CompoundStatement		51:18:1229:1229	5124802	1					
ANR	5125151	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , NULL , & addr64 )"	122:4:3405:3458	5124802	0	True				
ANR	5125152	CallExpression	"updateAddr ( buf + i , size - i , endian , NULL , & addr64 )"		5124802	0					
ANR	5125153	Callee	updateAddr		5124802	0					
ANR	5125154	Identifier	updateAddr		5124802	0					
ANR	5125155	ArgumentList	buf + i		5124802	1					
ANR	5125156	Argument	buf + i		5124802	0					
ANR	5125157	AdditiveExpression	buf + i		5124802	0		+			
ANR	5125158	Identifier	buf		5124802	0					
ANR	5125159	Identifier	i		5124802	1					
ANR	5125160	Argument	size - i		5124802	1					
ANR	5125161	AdditiveExpression	size - i		5124802	0		-			
ANR	5125162	Identifier	size		5124802	0					
ANR	5125163	Identifier	i		5124802	1					
ANR	5125164	Argument	endian		5124802	2					
ANR	5125165	Identifier	endian		5124802	0					
ANR	5125166	Argument	NULL		5124802	3					
ANR	5125167	Identifier	NULL		5124802	0					
ANR	5125168	Argument	& addr64		5124802	4					
ANR	5125169	UnaryOperationExpression	& addr64		5124802	0					
ANR	5125170	UnaryOperator	&		5124802	0					
ANR	5125171	Identifier	addr64		5124802	1					
ANR	5125172	IfStatement	if ( elem == - 1 || elem == 0 )		5124802	1					
ANR	5125173	Condition	elem == - 1 || elem == 0	123:8:3468:3490	5124802	0	True				
ANR	5125174	OrExpression	elem == - 1 || elem == 0		5124802	0		||			
ANR	5125175	EqualityExpression	elem == - 1		5124802	0		==			
ANR	5125176	Identifier	elem		5124802	0					
ANR	5125177	UnaryOperationExpression	- 1		5124802	1					
ANR	5125178	UnaryOperator	-		5124802	0					
ANR	5125179	PrimaryExpression	1		5124802	1					
ANR	5125180	EqualityExpression	elem == 0		5124802	1		==			
ANR	5125181	Identifier	elem		5124802	0					
ANR	5125182	PrimaryExpression	0		5124802	1					
ANR	5125183	CompoundStatement		53:33:1323:1323	5124802	1					
ANR	5125184	Statement	p	124:5:3500:3500	5124802	0	True				
ANR	5125185	Statement	->	124:6:3501:3502	5124802	1	True				
ANR	5125186	Statement	cb_printf	124:8:3503:3511	5124802	2	True				
ANR	5125187	Statement	(	124:18:3513:3513	5124802	3	True				
ANR	5125188	Statement	"""%"""	124:19:3514:3516	5124802	4	True				
ANR	5125189	Statement	PFMT64d	124:22:3517:3523	5124802	5	True				
ANR	5125190	Statement	","	124:29:3524:3524	5124802	6	True				
ANR	5125191	Statement	addr64	124:31:3526:3531	5124802	7	True				
ANR	5125192	Statement	)	124:37:3532:3532	5124802	8	True				
ANR	5125193	ExpressionStatement		124:38:3533:3533	5124802	9	True				
ANR	5125194	IfStatement	if ( elem == 0 )		5124802	10					
ANR	5125195	Condition	elem == 0	125:9:3544:3552	5124802	0	True				
ANR	5125196	EqualityExpression	elem == 0		5124802	0		==			
ANR	5125197	Identifier	elem		5124802	0					
ANR	5125198	PrimaryExpression	0		5124802	1					
ANR	5125199	CompoundStatement		55:20:1385:1385	5124802	1					
ANR	5125200	ExpressionStatement	elem = - 2	126:6:3563:3572	5124802	0	True				
ANR	5125201	AssignmentExpression	elem = - 2		5124802	0		=			
ANR	5125202	Identifier	elem		5124802	0					
ANR	5125203	UnaryOperationExpression	- 2		5124802	1					
ANR	5125204	UnaryOperator	-		5124802	0					
ANR	5125205	PrimaryExpression	2		5124802	1					
ANR	5125206	IfStatement	if ( size != 0 && elem == - 1 )		5124802	2					
ANR	5125207	Condition	size != 0 && elem == - 1	129:8:3595:3617	5124802	0	True				
ANR	5125208	AndExpression	size != 0 && elem == - 1		5124802	0		&&			
ANR	5125209	EqualityExpression	size != 0		5124802	0		!=			
ANR	5125210	Identifier	size		5124802	0					
ANR	5125211	PrimaryExpression	0		5124802	1					
ANR	5125212	EqualityExpression	elem == - 1		5124802	1		==			
ANR	5125213	Identifier	elem		5124802	0					
ANR	5125214	UnaryOperationExpression	- 1		5124802	1					
ANR	5125215	UnaryOperator	-		5124802	0					
ANR	5125216	PrimaryExpression	1		5124802	1					
ANR	5125217	CompoundStatement		59:33:1450:1450	5124802	1					
ANR	5125218	ExpressionStatement	"p -> cb_printf ( "", "" )"	130:5:3627:3646	5124802	0	True				
ANR	5125219	CallExpression	"p -> cb_printf ( "", "" )"		5124802	0					
ANR	5125220	Callee	p -> cb_printf		5124802	0					
ANR	5125221	PtrMemberAccess	p -> cb_printf		5124802	0					
ANR	5125222	Identifier	p		5124802	0					
ANR	5125223	Identifier	cb_printf		5124802	1					
ANR	5125224	ArgumentList	""", """		5124802	1					
ANR	5125225	Argument	""", """		5124802	0					
ANR	5125226	PrimaryExpression	""", """		5124802	0					
ANR	5125227	IfStatement	if ( elem > - 1 )		5124802	3					
ANR	5125228	Condition	elem > - 1	132:8:3662:3670	5124802	0	True				
ANR	5125229	RelationalExpression	elem > - 1		5124802	0		>			
ANR	5125230	Identifier	elem		5124802	0					
ANR	5125231	UnaryOperationExpression	- 1		5124802	1					
ANR	5125232	UnaryOperator	-		5124802	0					
ANR	5125233	PrimaryExpression	1		5124802	1					
ANR	5125234	CompoundStatement		62:19:1503:1503	5124802	1					
ANR	5125235	ExpressionStatement	elem --	133:5:3680:3686	5124802	0	True				
ANR	5125236	PostIncDecOperationExpression	elem --		5124802	0					
ANR	5125237	Identifier	elem		5124802	0					
ANR	5125238	IncDec	--		5124802	1					
ANR	5125239	ExpressionStatement	i += 8	135:4:3698:3704	5124802	4	True				
ANR	5125240	AssignmentExpression	i += 8		5124802	0		+=			
ANR	5125241	Identifier	i		5124802	0					
ANR	5125242	PrimaryExpression	8		5124802	1					
ANR	5125243	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	137:3:3714:3733	5124802	2	True				
ANR	5125244	CallExpression	"p -> cb_printf ( "" ]"" )"		5124802	0					
ANR	5125245	Callee	p -> cb_printf		5124802	0					
ANR	5125246	PtrMemberAccess	p -> cb_printf		5124802	0					
ANR	5125247	Identifier	p		5124802	0					
ANR	5125248	Identifier	cb_printf		5124802	1					
ANR	5125249	ArgumentList	""" ]"""		5124802	1					
ANR	5125250	Argument	""" ]"""		5124802	0					
ANR	5125251	PrimaryExpression	""" ]"""		5124802	0					
ANR	5125252	IfStatement	if ( MUSTSEEJSON )		5124802	1					
ANR	5125253	Condition	MUSTSEEJSON	139:6:3745:3755	5124802	0	True				
ANR	5125254	Identifier	MUSTSEEJSON		5124802	0					
ANR	5125255	CompoundStatement		69:19:1588:1588	5124802	1					
ANR	5125256	ExpressionStatement	"p -> cb_printf ( ""}"" )"	140:3:3763:3781	5124802	0	True				
ANR	5125257	CallExpression	"p -> cb_printf ( ""}"" )"		5124802	0					
ANR	5125258	Callee	p -> cb_printf		5124802	0					
ANR	5125259	PtrMemberAccess	p -> cb_printf		5124802	0					
ANR	5125260	Identifier	p		5124802	0					
ANR	5125261	Identifier	cb_printf		5124802	1					
ANR	5125262	ArgumentList	"""}"""		5124802	1					
ANR	5125263	Argument	"""}"""		5124802	0					
ANR	5125264	PrimaryExpression	"""}"""		5124802	0					
ANR	5125265	ReturnType	static void		5124802	1					
ANR	5125266	Identifier	r_print_format_quadword		5124802	2					
ANR	5125267	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5124802	3					
ANR	5125268	Parameter	const RPrint * p	70:36:2069:2083	5124802	0	True				
ANR	5125269	ParameterType	const RPrint *		5124802	0					
ANR	5125270	Identifier	p		5124802	1					
ANR	5125271	Parameter	int endian	70:53:2086:2095	5124802	1	True				
ANR	5125272	ParameterType	int		5124802	0					
ANR	5125273	Identifier	endian		5124802	1					
ANR	5125274	Parameter	int mode	70:65:2098:2105	5124802	2	True				
ANR	5125275	ParameterType	int		5124802	0					
ANR	5125276	Identifier	mode		5124802	1					
ANR	5125277	Parameter	const char * setval	71:2:2110:2127	5124802	3	True				
ANR	5125278	ParameterType	const char *		5124802	0					
ANR	5125279	Identifier	setval		5124802	1					
ANR	5125280	Parameter	ut64 seeki	71:22:2130:2139	5124802	4	True				
ANR	5125281	ParameterType	ut64		5124802	0					
ANR	5125282	Identifier	seeki		5124802	1					
ANR	5125283	Parameter	ut8 * buf	71:34:2142:2149	5124802	5	True				
ANR	5125284	ParameterType	ut8 *		5124802	0					
ANR	5125285	Identifier	buf		5124802	1					
ANR	5125286	Parameter	int i	71:44:2152:2156	5124802	6	True				
ANR	5125287	ParameterType	int		5124802	0					
ANR	5125288	Identifier	i		5124802	1					
ANR	5125289	Parameter	int size	71:51:2159:2166	5124802	7	True				
ANR	5125290	ParameterType	int		5124802	0					
ANR	5125291	Identifier	size		5124802	1					
ANR	5125292	CFGEntryNode	ENTRY		5124802		True				
ANR	5125293	CFGExitNode	EXIT		5124802		True				
ANR	5125294	Symbol	elem		5124802						
ANR	5125295	Symbol	UT32_MAX		5124802						
ANR	5125296	Symbol	NULL		5124802						
ANR	5125297	Symbol	& addr64		5124802						
ANR	5125298	Symbol	MUSTSEEJSON		5124802						
ANR	5125299	Symbol	MUSTSEESTRUCT		5124802						
ANR	5125300	Symbol	i		5124802						
ANR	5125301	Symbol	ISQUIET		5124802						
ANR	5125302	Symbol	endian		5124802						
ANR	5125303	Symbol	MUSTSEE		5124802						
ANR	5125304	Symbol	p		5124802						
ANR	5125305	Symbol	mode		5124802						
ANR	5125306	Symbol	ARRAYINDEX_COEF		5124802						
ANR	5125307	Symbol	buf		5124802						
ANR	5125308	Symbol	size		5124802						
ANR	5125309	Symbol	seeki		5124802						
ANR	5125310	Symbol	SEEVALUE		5124802						
ANR	5125311	Symbol	addr64		5124802						
ANR	5125312	Symbol	setval		5124802						
ANR	5125313	Symbol	MUSTSET		5124802						
ANR	5125314	Function	r_print_format_byte	145:0:3793:5175							
ANR	5125315	FunctionDef	"r_print_format_byte (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5125314	0					
ANR	5125316	CompoundStatement		146:61:3925:5175	5125314	0					
ANR	5125317	IdentifierDeclStatement	int elem = - 1 ;	147:1:3928:3941	5125314	0	True				
ANR	5125318	IdentifierDecl	elem = - 1		5125314	0					
ANR	5125319	IdentifierDeclType	int		5125314	0					
ANR	5125320	Identifier	elem		5125314	1					
ANR	5125321	AssignmentExpression	elem = - 1		5125314	2		=			
ANR	5125322	Identifier	elem		5125314	0					
ANR	5125323	UnaryOperationExpression	- 1		5125314	1					
ANR	5125324	UnaryOperator	-		5125314	0					
ANR	5125325	PrimaryExpression	1		5125314	1					
ANR	5125326	IfStatement	if ( size >= ARRAYINDEX_COEF )		5125314	1					
ANR	5125327	Condition	size >= ARRAYINDEX_COEF	148:5:3948:3970	5125314	0	True				
ANR	5125328	RelationalExpression	size >= ARRAYINDEX_COEF		5125314	0		>=			
ANR	5125329	Identifier	size		5125314	0					
ANR	5125330	Identifier	ARRAYINDEX_COEF		5125314	1					
ANR	5125331	CompoundStatement		3:30:47:47	5125314	1					
ANR	5125332	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	149:2:3977:4010	5125314	0	True				
ANR	5125333	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5125314	0		=			
ANR	5125334	Identifier	elem		5125314	0					
ANR	5125335	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5125314	1		-			
ANR	5125336	MultiplicativeExpression	size / ARRAYINDEX_COEF		5125314	0		/			
ANR	5125337	Identifier	size		5125314	0					
ANR	5125338	Identifier	ARRAYINDEX_COEF		5125314	1					
ANR	5125339	PrimaryExpression	1		5125314	1					
ANR	5125340	ExpressionStatement	size %= ARRAYINDEX_COEF	150:2:4014:4037	5125314	1	True				
ANR	5125341	AssignmentExpression	size %= ARRAYINDEX_COEF		5125314	0		%=			
ANR	5125342	Identifier	size		5125314	0					
ANR	5125343	Identifier	ARRAYINDEX_COEF		5125314	1					
ANR	5125344	IfStatement	if ( MUSTSET )		5125314	2					
ANR	5125345	Condition	MUSTSET	152:5:4047:4053	5125314	0	True				
ANR	5125346	Identifier	MUSTSET		5125314	0					
ANR	5125347	CompoundStatement		7:14:130:130	5125314	1					
ANR	5125348	Statement	p	153:2:4060:4060	5125314	0	True				
ANR	5125349	Statement	->	153:3:4061:4062	5125314	1	True				
ANR	5125350	Statement	cb_printf	153:5:4063:4071	5125314	2	True				
ANR	5125351	Statement	(	153:15:4073:4073	5125314	3	True				
ANR	5125352	Statement	"""\\""w %s\\"" @ 0x%08"""	153:16:4074:4091	5125314	4	True				
ANR	5125353	Statement	PFMT64x	153:34:4092:4098	5125314	5	True				
ANR	5125354	Statement	"""\\n"""	153:41:4099:4102	5125314	6	True				
ANR	5125355	Statement	","	153:45:4103:4103	5125314	7	True				
ANR	5125356	Statement	setval	153:47:4105:4110	5125314	8	True				
ANR	5125357	Statement	","	153:53:4111:4111	5125314	9	True				
ANR	5125358	Statement	seeki	153:55:4113:4117	5125314	10	True				
ANR	5125359	Statement	+	153:61:4119:4119	5125314	11	True				
ANR	5125360	Statement	(	153:63:4121:4121	5125314	12	True				
ANR	5125361	Statement	(	153:64:4122:4122	5125314	13	True				
ANR	5125362	Statement	elem	153:65:4123:4126	5125314	14	True				
ANR	5125363	Statement	>=	153:70:4128:4129	5125314	15	True				
ANR	5125364	Statement	0	153:73:4131:4131	5125314	16	True				
ANR	5125365	Statement	)	153:74:4132:4132	5125314	17	True				
ANR	5125366	Statement	?	153:76:4134:4134	5125314	18	True				
ANR	5125367	Label	elem :	153:78:4136:4141	5125314	19	True				
ANR	5125368	Identifier	elem		5125314	0					
ANR	5125369	Statement	0	153:85:4143:4143	5125314	20	True				
ANR	5125370	Statement	)	153:86:4144:4144	5125314	21	True				
ANR	5125371	Statement	)	153:87:4145:4145	5125314	22	True				
ANR	5125372	ExpressionStatement		153:88:4146:4146	5125314	23	True				
ANR	5125373	ElseStatement	else		5125314	0					
ANR	5125374	IfStatement	if ( MUSTSEE )		5125314	0					
ANR	5125375	Condition	MUSTSEE	154:12:4160:4166	5125314	0	True				
ANR	5125376	Identifier	MUSTSEE		5125314	0					
ANR	5125377	CompoundStatement		9:21:243:243	5125314	1					
ANR	5125378	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5125314	0					
ANR	5125379	Condition	! SEEVALUE && ! ISQUIET	155:6:4177:4197	5125314	0	True				
ANR	5125380	AndExpression	! SEEVALUE && ! ISQUIET		5125314	0		&&			
ANR	5125381	UnaryOperationExpression	! SEEVALUE		5125314	0					
ANR	5125382	UnaryOperator	!		5125314	0					
ANR	5125383	Identifier	SEEVALUE		5125314	1					
ANR	5125384	UnaryOperationExpression	! ISQUIET		5125314	1					
ANR	5125385	UnaryOperator	!		5125314	0					
ANR	5125386	Identifier	ISQUIET		5125314	1					
ANR	5125387	CompoundStatement		10:29:274:274	5125314	1					
ANR	5125388	Statement	p	156:3:4205:4205	5125314	0	True				
ANR	5125389	Statement	->	156:4:4206:4207	5125314	1	True				
ANR	5125390	Statement	cb_printf	156:6:4208:4216	5125314	2	True				
ANR	5125391	Statement	(	156:16:4218:4218	5125314	3	True				
ANR	5125392	Statement	"""0x%08"""	156:17:4219:4225	5125314	4	True				
ANR	5125393	Statement	PFMT64x	156:24:4226:4232	5125314	5	True				
ANR	5125394	Statement	""" = """	156:31:4233:4237	5125314	6	True				
ANR	5125395	Statement	","	156:36:4238:4238	5125314	7	True				
ANR	5125396	Statement	seeki	156:38:4240:4244	5125314	8	True				
ANR	5125397	Statement	+	156:44:4246:4246	5125314	9	True				
ANR	5125398	Statement	(	156:46:4248:4248	5125314	10	True				
ANR	5125399	Statement	(	156:47:4249:4249	5125314	11	True				
ANR	5125400	Statement	elem	156:48:4250:4253	5125314	12	True				
ANR	5125401	Statement	>=	156:53:4255:4256	5125314	13	True				
ANR	5125402	Statement	0	156:56:4258:4258	5125314	14	True				
ANR	5125403	Statement	)	156:57:4259:4259	5125314	15	True				
ANR	5125404	Statement	?	156:59:4261:4261	5125314	16	True				
ANR	5125405	Label	elem :	156:61:4263:4268	5125314	17	True				
ANR	5125406	Identifier	elem		5125314	0					
ANR	5125407	Statement	0	156:68:4270:4270	5125314	18	True				
ANR	5125408	Statement	)	156:69:4271:4271	5125314	19	True				
ANR	5125409	Statement	)	156:70:4272:4272	5125314	20	True				
ANR	5125410	ExpressionStatement		156:71:4273:4273	5125314	21	True				
ANR	5125411	IfStatement	if ( size == - 1 )		5125314	1					
ANR	5125412	Condition	size == - 1	158:6:4285:4294	5125314	0	True				
ANR	5125413	EqualityExpression	size == - 1		5125314	0		==			
ANR	5125414	Identifier	size		5125314	0					
ANR	5125415	UnaryOperationExpression	- 1		5125314	1					
ANR	5125416	UnaryOperator	-		5125314	0					
ANR	5125417	PrimaryExpression	1		5125314	1					
ANR	5125418	CompoundStatement		13:18:371:371	5125314	1					
ANR	5125419	ExpressionStatement	"p -> cb_printf ( ""0x%02x"" , buf [ i ] )"	159:3:4302:4333	5125314	0	True				
ANR	5125420	CallExpression	"p -> cb_printf ( ""0x%02x"" , buf [ i ] )"		5125314	0					
ANR	5125421	Callee	p -> cb_printf		5125314	0					
ANR	5125422	PtrMemberAccess	p -> cb_printf		5125314	0					
ANR	5125423	Identifier	p		5125314	0					
ANR	5125424	Identifier	cb_printf		5125314	1					
ANR	5125425	ArgumentList	"""0x%02x"""		5125314	1					
ANR	5125426	Argument	"""0x%02x"""		5125314	0					
ANR	5125427	PrimaryExpression	"""0x%02x"""		5125314	0					
ANR	5125428	Argument	buf [ i ]		5125314	1					
ANR	5125429	ArrayIndexing	buf [ i ]		5125314	0					
ANR	5125430	Identifier	buf		5125314	0					
ANR	5125431	Identifier	i		5125314	1					
ANR	5125432	ElseStatement	else		5125314	0					
ANR	5125433	CompoundStatement		15:9:418:418	5125314	0					
ANR	5125434	IfStatement	if ( ! SEEVALUE )		5125314	0					
ANR	5125435	Condition	! SEEVALUE	161:7:4353:4361	5125314	0	True				
ANR	5125436	UnaryOperationExpression	! SEEVALUE		5125314	0					
ANR	5125437	UnaryOperator	!		5125314	0					
ANR	5125438	Identifier	SEEVALUE		5125314	1					
ANR	5125439	CompoundStatement		16:18:438:438	5125314	1					
ANR	5125440	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	162:4:4370:4389	5125314	0	True				
ANR	5125441	CallExpression	"p -> cb_printf ( ""[ "" )"		5125314	0					
ANR	5125442	Callee	p -> cb_printf		5125314	0					
ANR	5125443	PtrMemberAccess	p -> cb_printf		5125314	0					
ANR	5125444	Identifier	p		5125314	0					
ANR	5125445	Identifier	cb_printf		5125314	1					
ANR	5125446	ArgumentList	"""[ """		5125314	1					
ANR	5125447	Argument	"""[ """		5125314	0					
ANR	5125448	PrimaryExpression	"""[ """		5125314	0					
ANR	5125449	WhileStatement	while ( size -- )		5125314	1					
ANR	5125450	Condition	size --	164:10:4406:4411	5125314	0	True				
ANR	5125451	PostIncDecOperationExpression	size --		5125314	0					
ANR	5125452	Identifier	size		5125314	0					
ANR	5125453	IncDec	--		5125314	1					
ANR	5125454	CompoundStatement		19:18:488:488	5125314	1					
ANR	5125455	IfStatement	if ( elem == - 1 || elem == 0 )		5125314	0					
ANR	5125456	Condition	elem == - 1 || elem == 0	165:8:4424:4446	5125314	0	True				
ANR	5125457	OrExpression	elem == - 1 || elem == 0		5125314	0		||			
ANR	5125458	EqualityExpression	elem == - 1		5125314	0		==			
ANR	5125459	Identifier	elem		5125314	0					
ANR	5125460	UnaryOperationExpression	- 1		5125314	1					
ANR	5125461	UnaryOperator	-		5125314	0					
ANR	5125462	PrimaryExpression	1		5125314	1					
ANR	5125463	EqualityExpression	elem == 0		5125314	1		==			
ANR	5125464	Identifier	elem		5125314	0					
ANR	5125465	PrimaryExpression	0		5125314	1					
ANR	5125466	CompoundStatement		20:33:523:523	5125314	1					
ANR	5125467	ExpressionStatement	"p -> cb_printf ( ""0x%02x"" , buf [ i ] )"	166:5:4456:4487	5125314	0	True				
ANR	5125468	CallExpression	"p -> cb_printf ( ""0x%02x"" , buf [ i ] )"		5125314	0					
ANR	5125469	Callee	p -> cb_printf		5125314	0					
ANR	5125470	PtrMemberAccess	p -> cb_printf		5125314	0					
ANR	5125471	Identifier	p		5125314	0					
ANR	5125472	Identifier	cb_printf		5125314	1					
ANR	5125473	ArgumentList	"""0x%02x"""		5125314	1					
ANR	5125474	Argument	"""0x%02x"""		5125314	0					
ANR	5125475	PrimaryExpression	"""0x%02x"""		5125314	0					
ANR	5125476	Argument	buf [ i ]		5125314	1					
ANR	5125477	ArrayIndexing	buf [ i ]		5125314	0					
ANR	5125478	Identifier	buf		5125314	0					
ANR	5125479	Identifier	i		5125314	1					
ANR	5125480	IfStatement	if ( elem == 0 )		5125314	1					
ANR	5125481	Condition	elem == 0	167:9:4498:4506	5125314	0	True				
ANR	5125482	EqualityExpression	elem == 0		5125314	0		==			
ANR	5125483	Identifier	elem		5125314	0					
ANR	5125484	PrimaryExpression	0		5125314	1					
ANR	5125485	CompoundStatement		22:20:583:583	5125314	1					
ANR	5125486	ExpressionStatement	elem = - 2	168:6:4517:4526	5125314	0	True				
ANR	5125487	AssignmentExpression	elem = - 2		5125314	0		=			
ANR	5125488	Identifier	elem		5125314	0					
ANR	5125489	UnaryOperationExpression	- 2		5125314	1					
ANR	5125490	UnaryOperator	-		5125314	0					
ANR	5125491	PrimaryExpression	2		5125314	1					
ANR	5125492	IfStatement	if ( size != 0 && elem == - 1 )		5125314	1					
ANR	5125493	Condition	size != 0 && elem == - 1	171:8:4549:4571	5125314	0	True				
ANR	5125494	AndExpression	size != 0 && elem == - 1		5125314	0		&&			
ANR	5125495	EqualityExpression	size != 0		5125314	0		!=			
ANR	5125496	Identifier	size		5125314	0					
ANR	5125497	PrimaryExpression	0		5125314	1					
ANR	5125498	EqualityExpression	elem == - 1		5125314	1		==			
ANR	5125499	Identifier	elem		5125314	0					
ANR	5125500	UnaryOperationExpression	- 1		5125314	1					
ANR	5125501	UnaryOperator	-		5125314	0					
ANR	5125502	PrimaryExpression	1		5125314	1					
ANR	5125503	CompoundStatement		26:33:648:648	5125314	1					
ANR	5125504	ExpressionStatement	"p -> cb_printf ( "", "" )"	172:5:4581:4600	5125314	0	True				
ANR	5125505	CallExpression	"p -> cb_printf ( "", "" )"		5125314	0					
ANR	5125506	Callee	p -> cb_printf		5125314	0					
ANR	5125507	PtrMemberAccess	p -> cb_printf		5125314	0					
ANR	5125508	Identifier	p		5125314	0					
ANR	5125509	Identifier	cb_printf		5125314	1					
ANR	5125510	ArgumentList	""", """		5125314	1					
ANR	5125511	Argument	""", """		5125314	0					
ANR	5125512	PrimaryExpression	""", """		5125314	0					
ANR	5125513	IfStatement	if ( elem > - 1 )		5125314	2					
ANR	5125514	Condition	elem > - 1	174:8:4616:4624	5125314	0	True				
ANR	5125515	RelationalExpression	elem > - 1		5125314	0		>			
ANR	5125516	Identifier	elem		5125314	0					
ANR	5125517	UnaryOperationExpression	- 1		5125314	1					
ANR	5125518	UnaryOperator	-		5125314	0					
ANR	5125519	PrimaryExpression	1		5125314	1					
ANR	5125520	CompoundStatement		29:19:701:701	5125314	1					
ANR	5125521	ExpressionStatement	elem --	175:5:4634:4640	5125314	0	True				
ANR	5125522	PostIncDecOperationExpression	elem --		5125314	0					
ANR	5125523	Identifier	elem		5125314	0					
ANR	5125524	IncDec	--		5125314	1					
ANR	5125525	ExpressionStatement	i ++	177:4:4652:4655	5125314	3	True				
ANR	5125526	PostIncDecOperationExpression	i ++		5125314	0					
ANR	5125527	Identifier	i		5125314	0					
ANR	5125528	IncDec	++		5125314	1					
ANR	5125529	IfStatement	if ( ! SEEVALUE )		5125314	2					
ANR	5125530	Condition	! SEEVALUE	179:7:4669:4677	5125314	0	True				
ANR	5125531	UnaryOperationExpression	! SEEVALUE		5125314	0					
ANR	5125532	UnaryOperator	!		5125314	0					
ANR	5125533	Identifier	SEEVALUE		5125314	1					
ANR	5125534	CompoundStatement		34:18:754:754	5125314	1					
ANR	5125535	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	180:4:4686:4705	5125314	0	True				
ANR	5125536	CallExpression	"p -> cb_printf ( "" ]"" )"		5125314	0					
ANR	5125537	Callee	p -> cb_printf		5125314	0					
ANR	5125538	PtrMemberAccess	p -> cb_printf		5125314	0					
ANR	5125539	Identifier	p		5125314	0					
ANR	5125540	Identifier	cb_printf		5125314	1					
ANR	5125541	ArgumentList	""" ]"""		5125314	1					
ANR	5125542	Argument	""" ]"""		5125314	0					
ANR	5125543	PrimaryExpression	""" ]"""		5125314	0					
ANR	5125544	ElseStatement	else		5125314	0					
ANR	5125545	IfStatement	if ( MUSTSEEJSON || MUSTSEESTRUCT )		5125314	0					
ANR	5125546	Condition	MUSTSEEJSON || MUSTSEESTRUCT	183:12:4728:4755	5125314	0	True				
ANR	5125547	OrExpression	MUSTSEEJSON || MUSTSEESTRUCT		5125314	0		||			
ANR	5125548	Identifier	MUSTSEEJSON		5125314	0					
ANR	5125549	Identifier	MUSTSEESTRUCT		5125314	1					
ANR	5125550	CompoundStatement		38:42:832:832	5125314	1					
ANR	5125551	IfStatement	if ( size == - 1 )		5125314	0					
ANR	5125552	Condition	size == - 1	184:6:4766:4775	5125314	0	True				
ANR	5125553	EqualityExpression	size == - 1		5125314	0		==			
ANR	5125554	Identifier	size		5125314	0					
ANR	5125555	UnaryOperationExpression	- 1		5125314	1					
ANR	5125556	UnaryOperator	-		5125314	0					
ANR	5125557	PrimaryExpression	1		5125314	1					
ANR	5125558	CompoundStatement		39:18:852:852	5125314	1					
ANR	5125559	ExpressionStatement	"p -> cb_printf ( ""%d"" , buf [ i ] )"	185:3:4783:4810	5125314	0	True				
ANR	5125560	CallExpression	"p -> cb_printf ( ""%d"" , buf [ i ] )"		5125314	0					
ANR	5125561	Callee	p -> cb_printf		5125314	0					
ANR	5125562	PtrMemberAccess	p -> cb_printf		5125314	0					
ANR	5125563	Identifier	p		5125314	0					
ANR	5125564	Identifier	cb_printf		5125314	1					
ANR	5125565	ArgumentList	"""%d"""		5125314	1					
ANR	5125566	Argument	"""%d"""		5125314	0					
ANR	5125567	PrimaryExpression	"""%d"""		5125314	0					
ANR	5125568	Argument	buf [ i ]		5125314	1					
ANR	5125569	ArrayIndexing	buf [ i ]		5125314	0					
ANR	5125570	Identifier	buf		5125314	0					
ANR	5125571	Identifier	i		5125314	1					
ANR	5125572	ElseStatement	else		5125314	0					
ANR	5125573	CompoundStatement		43:3:924:946	5125314	0					
ANR	5125574	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	187:3:4826:4845	5125314	0	True				
ANR	5125575	CallExpression	"p -> cb_printf ( ""[ "" )"		5125314	0					
ANR	5125576	Callee	p -> cb_printf		5125314	0					
ANR	5125577	PtrMemberAccess	p -> cb_printf		5125314	0					
ANR	5125578	Identifier	p		5125314	0					
ANR	5125579	Identifier	cb_printf		5125314	1					
ANR	5125580	ArgumentList	"""[ """		5125314	1					
ANR	5125581	Argument	"""[ """		5125314	0					
ANR	5125582	PrimaryExpression	"""[ """		5125314	0					
ANR	5125583	IdentifierDeclStatement	"const char * comma = """" ;"	188:3:4850:4872	5125314	1	True				
ANR	5125584	IdentifierDecl	"* comma = """""		5125314	0					
ANR	5125585	IdentifierDeclType	const char *		5125314	0					
ANR	5125586	Identifier	comma		5125314	1					
ANR	5125587	AssignmentExpression	"* comma = """""		5125314	2		=			
ANR	5125588	Identifier	comma		5125314	0					
ANR	5125589	PrimaryExpression	""""""		5125314	1					
ANR	5125590	WhileStatement	while ( size -- )		5125314	2					
ANR	5125591	Condition	size --	189:10:4884:4889	5125314	0	True				
ANR	5125592	PostIncDecOperationExpression	size --		5125314	0					
ANR	5125593	Identifier	size		5125314	0					
ANR	5125594	IncDec	--		5125314	1					
ANR	5125595	CompoundStatement		44:18:966:966	5125314	1					
ANR	5125596	IfStatement	if ( elem == - 1 || elem == 0 )		5125314	0					
ANR	5125597	Condition	elem == - 1 || elem == 0	190:8:4902:4924	5125314	0	True				
ANR	5125598	OrExpression	elem == - 1 || elem == 0		5125314	0		||			
ANR	5125599	EqualityExpression	elem == - 1		5125314	0		==			
ANR	5125600	Identifier	elem		5125314	0					
ANR	5125601	UnaryOperationExpression	- 1		5125314	1					
ANR	5125602	UnaryOperator	-		5125314	0					
ANR	5125603	PrimaryExpression	1		5125314	1					
ANR	5125604	EqualityExpression	elem == 0		5125314	1		==			
ANR	5125605	Identifier	elem		5125314	0					
ANR	5125606	PrimaryExpression	0		5125314	1					
ANR	5125607	CompoundStatement		45:33:1001:1001	5125314	1					
ANR	5125608	ExpressionStatement	"p -> cb_printf ( ""%s%d"" , comma , buf [ i ] )"	191:5:4934:4970	5125314	0	True				
ANR	5125609	CallExpression	"p -> cb_printf ( ""%s%d"" , comma , buf [ i ] )"		5125314	0					
ANR	5125610	Callee	p -> cb_printf		5125314	0					
ANR	5125611	PtrMemberAccess	p -> cb_printf		5125314	0					
ANR	5125612	Identifier	p		5125314	0					
ANR	5125613	Identifier	cb_printf		5125314	1					
ANR	5125614	ArgumentList	"""%s%d"""		5125314	1					
ANR	5125615	Argument	"""%s%d"""		5125314	0					
ANR	5125616	PrimaryExpression	"""%s%d"""		5125314	0					
ANR	5125617	Argument	comma		5125314	1					
ANR	5125618	Identifier	comma		5125314	0					
ANR	5125619	Argument	buf [ i ]		5125314	2					
ANR	5125620	ArrayIndexing	buf [ i ]		5125314	0					
ANR	5125621	Identifier	buf		5125314	0					
ANR	5125622	Identifier	i		5125314	1					
ANR	5125623	ExpressionStatement	"comma = "","""	192:5:4977:4988	5125314	1	True				
ANR	5125624	AssignmentExpression	"comma = "","""		5125314	0		=			
ANR	5125625	Identifier	comma		5125314	0					
ANR	5125626	PrimaryExpression	""","""		5125314	1					
ANR	5125627	IfStatement	if ( elem == 0 )		5125314	2					
ANR	5125628	Condition	elem == 0	193:9:4999:5007	5125314	0	True				
ANR	5125629	EqualityExpression	elem == 0		5125314	0		==			
ANR	5125630	Identifier	elem		5125314	0					
ANR	5125631	PrimaryExpression	0		5125314	1					
ANR	5125632	CompoundStatement		48:20:1084:1084	5125314	1					
ANR	5125633	ExpressionStatement	elem = - 2	194:6:5018:5027	5125314	0	True				
ANR	5125634	AssignmentExpression	elem = - 2		5125314	0		=			
ANR	5125635	Identifier	elem		5125314	0					
ANR	5125636	UnaryOperationExpression	- 2		5125314	1					
ANR	5125637	UnaryOperator	-		5125314	0					
ANR	5125638	PrimaryExpression	2		5125314	1					
ANR	5125639	IfStatement	if ( elem > - 1 )		5125314	1					
ANR	5125640	Condition	elem > - 1	197:8:5050:5058	5125314	0	True				
ANR	5125641	RelationalExpression	elem > - 1		5125314	0		>			
ANR	5125642	Identifier	elem		5125314	0					
ANR	5125643	UnaryOperationExpression	- 1		5125314	1					
ANR	5125644	UnaryOperator	-		5125314	0					
ANR	5125645	PrimaryExpression	1		5125314	1					
ANR	5125646	CompoundStatement		52:19:1135:1135	5125314	1					
ANR	5125647	ExpressionStatement	elem --	198:5:5068:5074	5125314	0	True				
ANR	5125648	PostIncDecOperationExpression	elem --		5125314	0					
ANR	5125649	Identifier	elem		5125314	0					
ANR	5125650	IncDec	--		5125314	1					
ANR	5125651	ExpressionStatement	i ++	200:4:5086:5089	5125314	2	True				
ANR	5125652	PostIncDecOperationExpression	i ++		5125314	0					
ANR	5125653	Identifier	i		5125314	0					
ANR	5125654	IncDec	++		5125314	1					
ANR	5125655	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	202:3:5099:5118	5125314	3	True				
ANR	5125656	CallExpression	"p -> cb_printf ( "" ]"" )"		5125314	0					
ANR	5125657	Callee	p -> cb_printf		5125314	0					
ANR	5125658	PtrMemberAccess	p -> cb_printf		5125314	0					
ANR	5125659	Identifier	p		5125314	0					
ANR	5125660	Identifier	cb_printf		5125314	1					
ANR	5125661	ArgumentList	""" ]"""		5125314	1					
ANR	5125662	Argument	""" ]"""		5125314	0					
ANR	5125663	PrimaryExpression	""" ]"""		5125314	0					
ANR	5125664	IfStatement	if ( MUSTSEEJSON )		5125314	1					
ANR	5125665	Condition	MUSTSEEJSON	204:6:5130:5140	5125314	0	True				
ANR	5125666	Identifier	MUSTSEEJSON		5125314	0					
ANR	5125667	CompoundStatement		59:19:1217:1217	5125314	1					
ANR	5125668	ExpressionStatement	"p -> cb_printf ( ""}"" )"	205:3:5148:5166	5125314	0	True				
ANR	5125669	CallExpression	"p -> cb_printf ( ""}"" )"		5125314	0					
ANR	5125670	Callee	p -> cb_printf		5125314	0					
ANR	5125671	PtrMemberAccess	p -> cb_printf		5125314	0					
ANR	5125672	Identifier	p		5125314	0					
ANR	5125673	Identifier	cb_printf		5125314	1					
ANR	5125674	ArgumentList	"""}"""		5125314	1					
ANR	5125675	Argument	"""}"""		5125314	0					
ANR	5125676	PrimaryExpression	"""}"""		5125314	0					
ANR	5125677	ReturnType	static void		5125314	1					
ANR	5125678	Identifier	r_print_format_byte		5125314	2					
ANR	5125679	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5125314	3					
ANR	5125680	Parameter	const RPrint * p	145:32:3825:3839	5125314	0	True				
ANR	5125681	ParameterType	const RPrint *		5125314	0					
ANR	5125682	Identifier	p		5125314	1					
ANR	5125683	Parameter	int endian	145:49:3842:3851	5125314	1	True				
ANR	5125684	ParameterType	int		5125314	0					
ANR	5125685	Identifier	endian		5125314	1					
ANR	5125686	Parameter	int mode	145:61:3854:3861	5125314	2	True				
ANR	5125687	ParameterType	int		5125314	0					
ANR	5125688	Identifier	mode		5125314	1					
ANR	5125689	Parameter	const char * setval	146:2:3866:3883	5125314	3	True				
ANR	5125690	ParameterType	const char *		5125314	0					
ANR	5125691	Identifier	setval		5125314	1					
ANR	5125692	Parameter	ut64 seeki	146:22:3886:3895	5125314	4	True				
ANR	5125693	ParameterType	ut64		5125314	0					
ANR	5125694	Identifier	seeki		5125314	1					
ANR	5125695	Parameter	ut8 * buf	146:34:3898:3905	5125314	5	True				
ANR	5125696	ParameterType	ut8 *		5125314	0					
ANR	5125697	Identifier	buf		5125314	1					
ANR	5125698	Parameter	int i	146:44:3908:3912	5125314	6	True				
ANR	5125699	ParameterType	int		5125314	0					
ANR	5125700	Identifier	i		5125314	1					
ANR	5125701	Parameter	int size	146:51:3915:3922	5125314	7	True				
ANR	5125702	ParameterType	int		5125314	0					
ANR	5125703	Identifier	size		5125314	1					
ANR	5125704	CFGEntryNode	ENTRY		5125314		True				
ANR	5125705	CFGExitNode	EXIT		5125314		True				
ANR	5125706	Symbol	elem		5125314						
ANR	5125707	Symbol	* buf		5125314						
ANR	5125708	Symbol	MUSTSEEJSON		5125314						
ANR	5125709	Symbol	MUSTSEESTRUCT		5125314						
ANR	5125710	Symbol	i		5125314						
ANR	5125711	Symbol	ISQUIET		5125314						
ANR	5125712	Symbol	endian		5125314						
ANR	5125713	Symbol	MUSTSEE		5125314						
ANR	5125714	Symbol	p		5125314						
ANR	5125715	Symbol	mode		5125314						
ANR	5125716	Symbol	ARRAYINDEX_COEF		5125314						
ANR	5125717	Symbol	buf		5125314						
ANR	5125718	Symbol	comma		5125314						
ANR	5125719	Symbol	* i		5125314						
ANR	5125720	Symbol	size		5125314						
ANR	5125721	Symbol	seeki		5125314						
ANR	5125722	Symbol	SEEVALUE		5125314						
ANR	5125723	Symbol	setval		5125314						
ANR	5125724	Symbol	MUSTSET		5125314						
ANR	5125725	Function	r_print_format_uleb	211:0:5213:7109							
ANR	5125726	FunctionDef	"r_print_format_uleb (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5125725	0					
ANR	5125727	CompoundStatement		212:61:5344:7109	5125725	0					
ANR	5125728	IdentifierDeclStatement	int elem = - 1 ;	213:1:5347:5360	5125725	0	True				
ANR	5125729	IdentifierDecl	elem = - 1		5125725	0					
ANR	5125730	IdentifierDeclType	int		5125725	0					
ANR	5125731	Identifier	elem		5125725	1					
ANR	5125732	AssignmentExpression	elem = - 1		5125725	2		=			
ANR	5125733	Identifier	elem		5125725	0					
ANR	5125734	UnaryOperationExpression	- 1		5125725	1					
ANR	5125735	UnaryOperator	-		5125725	0					
ANR	5125736	PrimaryExpression	1		5125725	1					
ANR	5125737	IdentifierDeclStatement	"int s = 0 , offset = 0 ;"	214:1:5363:5384	5125725	1	True				
ANR	5125738	IdentifierDecl	s = 0		5125725	0					
ANR	5125739	IdentifierDeclType	int		5125725	0					
ANR	5125740	Identifier	s		5125725	1					
ANR	5125741	AssignmentExpression	s = 0		5125725	2		=			
ANR	5125742	Identifier	s		5125725	0					
ANR	5125743	PrimaryExpression	0		5125725	1					
ANR	5125744	IdentifierDecl	offset = 0		5125725	1					
ANR	5125745	IdentifierDeclType	int		5125725	0					
ANR	5125746	Identifier	offset		5125725	1					
ANR	5125747	AssignmentExpression	offset = 0		5125725	2		=			
ANR	5125748	Identifier	offset		5125725	0					
ANR	5125749	PrimaryExpression	0		5125725	1					
ANR	5125750	IdentifierDeclStatement	ut64 value = 0 ;	215:1:5387:5401	5125725	2	True				
ANR	5125751	IdentifierDecl	value = 0		5125725	0					
ANR	5125752	IdentifierDeclType	ut64		5125725	0					
ANR	5125753	Identifier	value		5125725	1					
ANR	5125754	AssignmentExpression	value = 0		5125725	2		=			
ANR	5125755	Identifier	value		5125725	0					
ANR	5125756	PrimaryExpression	0		5125725	1					
ANR	5125757	IfStatement	if ( size >= ARRAYINDEX_COEF )		5125725	3					
ANR	5125758	Condition	size >= ARRAYINDEX_COEF	216:5:5408:5430	5125725	0	True				
ANR	5125759	RelationalExpression	size >= ARRAYINDEX_COEF		5125725	0		>=			
ANR	5125760	Identifier	size		5125725	0					
ANR	5125761	Identifier	ARRAYINDEX_COEF		5125725	1					
ANR	5125762	CompoundStatement		5:30:88:88	5125725	1					
ANR	5125763	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	217:2:5437:5470	5125725	0	True				
ANR	5125764	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5125725	0		=			
ANR	5125765	Identifier	elem		5125725	0					
ANR	5125766	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5125725	1		-			
ANR	5125767	MultiplicativeExpression	size / ARRAYINDEX_COEF		5125725	0		/			
ANR	5125768	Identifier	size		5125725	0					
ANR	5125769	Identifier	ARRAYINDEX_COEF		5125725	1					
ANR	5125770	PrimaryExpression	1		5125725	1					
ANR	5125771	ExpressionStatement	size %= ARRAYINDEX_COEF	218:2:5474:5497	5125725	1	True				
ANR	5125772	AssignmentExpression	size %= ARRAYINDEX_COEF		5125725	0		%=			
ANR	5125773	Identifier	size		5125725	0					
ANR	5125774	Identifier	ARRAYINDEX_COEF		5125725	1					
ANR	5125775	IfStatement	if ( MUSTSET )		5125725	4					
ANR	5125776	Condition	MUSTSET	220:5:5507:5513	5125725	0	True				
ANR	5125777	Identifier	MUSTSET		5125725	0					
ANR	5125778	CompoundStatement		11:2:187:196	5125725	1					
ANR	5125779	IdentifierDeclStatement	ut8 * tmp ;	221:2:5520:5528	5125725	0	True				
ANR	5125780	IdentifierDecl	* tmp		5125725	0					
ANR	5125781	IdentifierDeclType	ut8 *		5125725	0					
ANR	5125782	Identifier	tmp		5125725	1					
ANR	5125783	IdentifierDeclStatement	char * nbr ;	222:2:5532:5541	5125725	1	True				
ANR	5125784	IdentifierDecl	* nbr		5125725	0					
ANR	5125785	IdentifierDeclType	char *		5125725	0					
ANR	5125786	Identifier	nbr		5125725	1					
ANR	5125787	DoStatement	do		5125725	2					
ANR	5125788	CompoundStatement		12:5:203:203	5125725	0					
ANR	5125789	ExpressionStatement	"r_uleb128_decode ( buf + i , & s , & value )"	224:3:5553:5589	5125725	0	True				
ANR	5125790	CallExpression	"r_uleb128_decode ( buf + i , & s , & value )"		5125725	0					
ANR	5125791	Callee	r_uleb128_decode		5125725	0					
ANR	5125792	Identifier	r_uleb128_decode		5125725	0					
ANR	5125793	ArgumentList	buf + i		5125725	1					
ANR	5125794	Argument	buf + i		5125725	0					
ANR	5125795	AdditiveExpression	buf + i		5125725	0		+			
ANR	5125796	Identifier	buf		5125725	0					
ANR	5125797	Identifier	i		5125725	1					
ANR	5125798	Argument	& s		5125725	1					
ANR	5125799	UnaryOperationExpression	& s		5125725	0					
ANR	5125800	UnaryOperator	&		5125725	0					
ANR	5125801	Identifier	s		5125725	1					
ANR	5125802	Argument	& value		5125725	2					
ANR	5125803	UnaryOperationExpression	& value		5125725	0					
ANR	5125804	UnaryOperator	&		5125725	0					
ANR	5125805	Identifier	value		5125725	1					
ANR	5125806	ExpressionStatement	i += s	225:3:5594:5600	5125725	1	True				
ANR	5125807	AssignmentExpression	i += s		5125725	0		+=			
ANR	5125808	Identifier	i		5125725	0					
ANR	5125809	Identifier	s		5125725	1					
ANR	5125810	ExpressionStatement	offset += s	226:3:5605:5616	5125725	2	True				
ANR	5125811	AssignmentExpression	offset += s		5125725	0		+=			
ANR	5125812	Identifier	offset		5125725	0					
ANR	5125813	Identifier	s		5125725	1					
ANR	5125814	Condition	elem --	227:11:5629:5634	5125725	1	True				
ANR	5125815	PostIncDecOperationExpression	elem --		5125725	0					
ANR	5125816	Identifier	elem		5125725	0					
ANR	5125817	IncDec	--		5125725	1					
ANR	5125818	ExpressionStatement	"tmp = ( ut8 * ) r_uleb128_encode ( r_num_math ( NULL , setval ) , & s )"	228:2:5640:5701	5125725	3	True				
ANR	5125819	AssignmentExpression	"tmp = ( ut8 * ) r_uleb128_encode ( r_num_math ( NULL , setval ) , & s )"		5125725	0		=			
ANR	5125820	Identifier	tmp		5125725	0					
ANR	5125821	CastExpression	"( ut8 * ) r_uleb128_encode ( r_num_math ( NULL , setval ) , & s )"		5125725	1					
ANR	5125822	CastTarget	ut8 *		5125725	0					
ANR	5125823	CallExpression	"r_uleb128_encode ( r_num_math ( NULL , setval ) , & s )"		5125725	1					
ANR	5125824	Callee	r_uleb128_encode		5125725	0					
ANR	5125825	Identifier	r_uleb128_encode		5125725	0					
ANR	5125826	ArgumentList	"r_num_math ( NULL , setval )"		5125725	1					
ANR	5125827	Argument	"r_num_math ( NULL , setval )"		5125725	0					
ANR	5125828	CallExpression	"r_num_math ( NULL , setval )"		5125725	0					
ANR	5125829	Callee	r_num_math		5125725	0					
ANR	5125830	Identifier	r_num_math		5125725	0					
ANR	5125831	ArgumentList	NULL		5125725	1					
ANR	5125832	Argument	NULL		5125725	0					
ANR	5125833	Identifier	NULL		5125725	0					
ANR	5125834	Argument	setval		5125725	1					
ANR	5125835	Identifier	setval		5125725	0					
ANR	5125836	Argument	& s		5125725	1					
ANR	5125837	UnaryOperationExpression	& s		5125725	0					
ANR	5125838	UnaryOperator	&		5125725	0					
ANR	5125839	Identifier	s		5125725	1					
ANR	5125840	ExpressionStatement	"nbr = r_hex_bin2strdup ( tmp , s )"	229:2:5705:5736	5125725	4	True				
ANR	5125841	AssignmentExpression	"nbr = r_hex_bin2strdup ( tmp , s )"		5125725	0		=			
ANR	5125842	Identifier	nbr		5125725	0					
ANR	5125843	CallExpression	"r_hex_bin2strdup ( tmp , s )"		5125725	1					
ANR	5125844	Callee	r_hex_bin2strdup		5125725	0					
ANR	5125845	Identifier	r_hex_bin2strdup		5125725	0					
ANR	5125846	ArgumentList	tmp		5125725	1					
ANR	5125847	Argument	tmp		5125725	0					
ANR	5125848	Identifier	tmp		5125725	0					
ANR	5125849	Argument	s		5125725	1					
ANR	5125850	Identifier	s		5125725	0					
ANR	5125851	Statement	p	230:2:5740:5740	5125725	5	True				
ANR	5125852	Statement	->	230:3:5741:5742	5125725	6	True				
ANR	5125853	Statement	cb_printf	230:5:5743:5751	5125725	7	True				
ANR	5125854	Statement	(	230:15:5753:5753	5125725	8	True				
ANR	5125855	Statement	"""\\""wx %s\\"" @ 0x%08"""	230:16:5754:5772	5125725	9	True				
ANR	5125856	Statement	PFMT64x	230:35:5773:5779	5125725	10	True				
ANR	5125857	Statement	"""\\n"""	230:42:5780:5783	5125725	11	True				
ANR	5125858	Statement	","	230:46:5784:5784	5125725	12	True				
ANR	5125859	Statement	nbr	230:48:5786:5788	5125725	13	True				
ANR	5125860	Statement	","	230:51:5789:5789	5125725	14	True				
ANR	5125861	Statement	seeki	230:53:5791:5795	5125725	15	True				
ANR	5125862	Statement	+	230:58:5796:5796	5125725	16	True				
ANR	5125863	Statement	offset	230:59:5797:5802	5125725	17	True				
ANR	5125864	Statement	-	230:65:5803:5803	5125725	18	True				
ANR	5125865	Statement	s	230:66:5804:5804	5125725	19	True				
ANR	5125866	Statement	)	230:67:5805:5805	5125725	20	True				
ANR	5125867	ExpressionStatement		230:68:5806:5806	5125725	21	True				
ANR	5125868	ExpressionStatement	free ( tmp )	231:2:5810:5820	5125725	22	True				
ANR	5125869	CallExpression	free ( tmp )		5125725	0					
ANR	5125870	Callee	free		5125725	0					
ANR	5125871	Identifier	free		5125725	0					
ANR	5125872	ArgumentList	tmp		5125725	1					
ANR	5125873	Argument	tmp		5125725	0					
ANR	5125874	Identifier	tmp		5125725	0					
ANR	5125875	ExpressionStatement	free ( nbr )	232:2:5824:5834	5125725	23	True				
ANR	5125876	CallExpression	free ( nbr )		5125725	0					
ANR	5125877	Callee	free		5125725	0					
ANR	5125878	Identifier	free		5125725	0					
ANR	5125879	ArgumentList	nbr		5125725	1					
ANR	5125880	Argument	nbr		5125725	0					
ANR	5125881	Identifier	nbr		5125725	0					
ANR	5125882	ElseStatement	else		5125725	0					
ANR	5125883	IfStatement	if ( MUSTSEE )		5125725	0					
ANR	5125884	Condition	MUSTSEE	233:12:5848:5854	5125725	0	True				
ANR	5125885	Identifier	MUSTSEE		5125725	0					
ANR	5125886	CompoundStatement		22:21:512:512	5125725	1					
ANR	5125887	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5125725	0					
ANR	5125888	Condition	! SEEVALUE && ! ISQUIET	234:6:5865:5885	5125725	0	True				
ANR	5125889	AndExpression	! SEEVALUE && ! ISQUIET		5125725	0		&&			
ANR	5125890	UnaryOperationExpression	! SEEVALUE		5125725	0					
ANR	5125891	UnaryOperator	!		5125725	0					
ANR	5125892	Identifier	SEEVALUE		5125725	1					
ANR	5125893	UnaryOperationExpression	! ISQUIET		5125725	1					
ANR	5125894	UnaryOperator	!		5125725	0					
ANR	5125895	Identifier	ISQUIET		5125725	1					
ANR	5125896	CompoundStatement		23:29:543:543	5125725	1					
ANR	5125897	Statement	p	235:3:5893:5893	5125725	0	True				
ANR	5125898	Statement	->	235:4:5894:5895	5125725	1	True				
ANR	5125899	Statement	cb_printf	235:6:5896:5904	5125725	2	True				
ANR	5125900	Statement	(	235:16:5906:5906	5125725	3	True				
ANR	5125901	Statement	"""0x%08"""	235:17:5907:5913	5125725	4	True				
ANR	5125902	Statement	PFMT64x	235:25:5915:5921	5125725	5	True				
ANR	5125903	Statement	""" = """	235:33:5923:5927	5125725	6	True				
ANR	5125904	Statement	","	235:38:5928:5928	5125725	7	True				
ANR	5125905	Statement	seeki	235:40:5930:5934	5125725	8	True				
ANR	5125906	Statement	)	235:45:5935:5935	5125725	9	True				
ANR	5125907	ExpressionStatement		235:46:5936:5936	5125725	10	True				
ANR	5125908	IfStatement	if ( size == - 1 )		5125725	1					
ANR	5125909	Condition	size == - 1	237:6:5948:5955	5125725	0	True				
ANR	5125910	EqualityExpression	size == - 1		5125725	0		==			
ANR	5125911	Identifier	size		5125725	0					
ANR	5125912	UnaryOperationExpression	- 1		5125725	1					
ANR	5125913	UnaryOperator	-		5125725	0					
ANR	5125914	PrimaryExpression	1		5125725	1					
ANR	5125915	CompoundStatement		26:16:613:613	5125725	1					
ANR	5125916	ExpressionStatement	"r_uleb128_decode ( buf + i , & offset , & value )"	238:3:5963:6004	5125725	0	True				
ANR	5125917	CallExpression	"r_uleb128_decode ( buf + i , & offset , & value )"		5125725	0					
ANR	5125918	Callee	r_uleb128_decode		5125725	0					
ANR	5125919	Identifier	r_uleb128_decode		5125725	0					
ANR	5125920	ArgumentList	buf + i		5125725	1					
ANR	5125921	Argument	buf + i		5125725	0					
ANR	5125922	AdditiveExpression	buf + i		5125725	0		+			
ANR	5125923	Identifier	buf		5125725	0					
ANR	5125924	Identifier	i		5125725	1					
ANR	5125925	Argument	& offset		5125725	1					
ANR	5125926	UnaryOperationExpression	& offset		5125725	0					
ANR	5125927	UnaryOperator	&		5125725	0					
ANR	5125928	Identifier	offset		5125725	1					
ANR	5125929	Argument	& value		5125725	2					
ANR	5125930	UnaryOperationExpression	& value		5125725	0					
ANR	5125931	UnaryOperator	&		5125725	0					
ANR	5125932	Identifier	value		5125725	1					
ANR	5125933	Statement	p	239:3:6009:6009	5125725	1	True				
ANR	5125934	Statement	->	239:4:6010:6011	5125725	2	True				
ANR	5125935	Statement	cb_printf	239:6:6012:6020	5125725	3	True				
ANR	5125936	Statement	(	239:16:6022:6022	5125725	4	True				
ANR	5125937	Statement	"""%"""	239:17:6023:6025	5125725	5	True				
ANR	5125938	Statement	PFMT64d	239:20:6026:6032	5125725	6	True				
ANR	5125939	Statement	","	239:27:6033:6033	5125725	7	True				
ANR	5125940	Statement	value	239:29:6035:6039	5125725	8	True				
ANR	5125941	Statement	)	239:34:6040:6040	5125725	9	True				
ANR	5125942	ExpressionStatement		239:35:6041:6041	5125725	10	True				
ANR	5125943	ElseStatement	else		5125725	0					
ANR	5125944	CompoundStatement		29:9:707:707	5125725	0					
ANR	5125945	IfStatement	if ( ! SEEVALUE )		5125725	0					
ANR	5125946	Condition	! SEEVALUE	241:7:6061:6069	5125725	0	True				
ANR	5125947	UnaryOperationExpression	! SEEVALUE		5125725	0					
ANR	5125948	UnaryOperator	!		5125725	0					
ANR	5125949	Identifier	SEEVALUE		5125725	1					
ANR	5125950	CompoundStatement		30:18:727:727	5125725	1					
ANR	5125951	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	242:4:6078:6097	5125725	0	True				
ANR	5125952	CallExpression	"p -> cb_printf ( ""[ "" )"		5125725	0					
ANR	5125953	Callee	p -> cb_printf		5125725	0					
ANR	5125954	PtrMemberAccess	p -> cb_printf		5125725	0					
ANR	5125955	Identifier	p		5125725	0					
ANR	5125956	Identifier	cb_printf		5125725	1					
ANR	5125957	ArgumentList	"""[ """		5125725	1					
ANR	5125958	Argument	"""[ """		5125725	0					
ANR	5125959	PrimaryExpression	"""[ """		5125725	0					
ANR	5125960	WhileStatement	while ( size -- )		5125725	1					
ANR	5125961	Condition	size --	244:10:6114:6119	5125725	0	True				
ANR	5125962	PostIncDecOperationExpression	size --		5125725	0					
ANR	5125963	Identifier	size		5125725	0					
ANR	5125964	IncDec	--		5125725	1					
ANR	5125965	CompoundStatement		33:18:777:777	5125725	1					
ANR	5125966	IfStatement	if ( elem == - 1 || elem == 0 )		5125725	0					
ANR	5125967	Condition	elem == - 1 || elem == 0	245:8:6132:6154	5125725	0	True				
ANR	5125968	OrExpression	elem == - 1 || elem == 0		5125725	0		||			
ANR	5125969	EqualityExpression	elem == - 1		5125725	0		==			
ANR	5125970	Identifier	elem		5125725	0					
ANR	5125971	UnaryOperationExpression	- 1		5125725	1					
ANR	5125972	UnaryOperator	-		5125725	0					
ANR	5125973	PrimaryExpression	1		5125725	1					
ANR	5125974	EqualityExpression	elem == 0		5125725	1		==			
ANR	5125975	Identifier	elem		5125725	0					
ANR	5125976	PrimaryExpression	0		5125725	1					
ANR	5125977	CompoundStatement		34:33:812:812	5125725	1					
ANR	5125978	ExpressionStatement	"r_uleb128_decode ( buf + i , & s , & value )"	246:5:6164:6200	5125725	0	True				
ANR	5125979	CallExpression	"r_uleb128_decode ( buf + i , & s , & value )"		5125725	0					
ANR	5125980	Callee	r_uleb128_decode		5125725	0					
ANR	5125981	Identifier	r_uleb128_decode		5125725	0					
ANR	5125982	ArgumentList	buf + i		5125725	1					
ANR	5125983	Argument	buf + i		5125725	0					
ANR	5125984	AdditiveExpression	buf + i		5125725	0		+			
ANR	5125985	Identifier	buf		5125725	0					
ANR	5125986	Identifier	i		5125725	1					
ANR	5125987	Argument	& s		5125725	1					
ANR	5125988	UnaryOperationExpression	& s		5125725	0					
ANR	5125989	UnaryOperator	&		5125725	0					
ANR	5125990	Identifier	s		5125725	1					
ANR	5125991	Argument	& value		5125725	2					
ANR	5125992	UnaryOperationExpression	& value		5125725	0					
ANR	5125993	UnaryOperator	&		5125725	0					
ANR	5125994	Identifier	value		5125725	1					
ANR	5125995	ExpressionStatement	i += s	247:5:6207:6213	5125725	1	True				
ANR	5125996	AssignmentExpression	i += s		5125725	0		+=			
ANR	5125997	Identifier	i		5125725	0					
ANR	5125998	Identifier	s		5125725	1					
ANR	5125999	ExpressionStatement	offset += s	248:5:6220:6231	5125725	2	True				
ANR	5126000	AssignmentExpression	offset += s		5125725	0		+=			
ANR	5126001	Identifier	offset		5125725	0					
ANR	5126002	Identifier	s		5125725	1					
ANR	5126003	Statement	p	249:5:6238:6238	5125725	3	True				
ANR	5126004	Statement	->	249:6:6239:6240	5125725	4	True				
ANR	5126005	Statement	cb_printf	249:8:6241:6249	5125725	5	True				
ANR	5126006	Statement	(	249:18:6251:6251	5125725	6	True				
ANR	5126007	Statement	"""%"""	249:19:6252:6254	5125725	7	True				
ANR	5126008	Statement	PFMT64d	249:22:6255:6261	5125725	8	True				
ANR	5126009	Statement	","	249:29:6262:6262	5125725	9	True				
ANR	5126010	Statement	value	249:31:6264:6268	5125725	10	True				
ANR	5126011	Statement	)	249:36:6269:6269	5125725	11	True				
ANR	5126012	ExpressionStatement		249:37:6270:6270	5125725	12	True				
ANR	5126013	IfStatement	if ( elem == 0 )		5125725	13					
ANR	5126014	Condition	elem == 0	250:9:6281:6289	5125725	0	True				
ANR	5126015	EqualityExpression	elem == 0		5125725	0		==			
ANR	5126016	Identifier	elem		5125725	0					
ANR	5126017	PrimaryExpression	0		5125725	1					
ANR	5126018	CompoundStatement		39:20:947:947	5125725	1					
ANR	5126019	ExpressionStatement	elem = - 2	251:6:6300:6309	5125725	0	True				
ANR	5126020	AssignmentExpression	elem = - 2		5125725	0		=			
ANR	5126021	Identifier	elem		5125725	0					
ANR	5126022	UnaryOperationExpression	- 2		5125725	1					
ANR	5126023	UnaryOperator	-		5125725	0					
ANR	5126024	PrimaryExpression	2		5125725	1					
ANR	5126025	IfStatement	if ( size != 0 && elem == - 1 )		5125725	1					
ANR	5126026	Condition	size != 0 && elem == - 1	254:8:6332:6354	5125725	0	True				
ANR	5126027	AndExpression	size != 0 && elem == - 1		5125725	0		&&			
ANR	5126028	EqualityExpression	size != 0		5125725	0		!=			
ANR	5126029	Identifier	size		5125725	0					
ANR	5126030	PrimaryExpression	0		5125725	1					
ANR	5126031	EqualityExpression	elem == - 1		5125725	1		==			
ANR	5126032	Identifier	elem		5125725	0					
ANR	5126033	UnaryOperationExpression	- 1		5125725	1					
ANR	5126034	UnaryOperator	-		5125725	0					
ANR	5126035	PrimaryExpression	1		5125725	1					
ANR	5126036	CompoundStatement		43:33:1012:1012	5125725	1					
ANR	5126037	ExpressionStatement	"p -> cb_printf ( "", "" )"	255:5:6364:6383	5125725	0	True				
ANR	5126038	CallExpression	"p -> cb_printf ( "", "" )"		5125725	0					
ANR	5126039	Callee	p -> cb_printf		5125725	0					
ANR	5126040	PtrMemberAccess	p -> cb_printf		5125725	0					
ANR	5126041	Identifier	p		5125725	0					
ANR	5126042	Identifier	cb_printf		5125725	1					
ANR	5126043	ArgumentList	""", """		5125725	1					
ANR	5126044	Argument	""", """		5125725	0					
ANR	5126045	PrimaryExpression	""", """		5125725	0					
ANR	5126046	IfStatement	if ( elem > - 1 )		5125725	2					
ANR	5126047	Condition	elem > - 1	257:8:6399:6407	5125725	0	True				
ANR	5126048	RelationalExpression	elem > - 1		5125725	0		>			
ANR	5126049	Identifier	elem		5125725	0					
ANR	5126050	UnaryOperationExpression	- 1		5125725	1					
ANR	5126051	UnaryOperator	-		5125725	0					
ANR	5126052	PrimaryExpression	1		5125725	1					
ANR	5126053	CompoundStatement		46:19:1065:1065	5125725	1					
ANR	5126054	ExpressionStatement	elem --	258:5:6417:6423	5125725	0	True				
ANR	5126055	PostIncDecOperationExpression	elem --		5125725	0					
ANR	5126056	Identifier	elem		5125725	0					
ANR	5126057	IncDec	--		5125725	1					
ANR	5126058	IfStatement	if ( ! SEEVALUE )		5125725	2					
ANR	5126059	Condition	! SEEVALUE	261:7:6443:6451	5125725	0	True				
ANR	5126060	UnaryOperationExpression	! SEEVALUE		5125725	0					
ANR	5126061	UnaryOperator	!		5125725	0					
ANR	5126062	Identifier	SEEVALUE		5125725	1					
ANR	5126063	CompoundStatement		50:18:1109:1109	5125725	1					
ANR	5126064	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	262:4:6460:6479	5125725	0	True				
ANR	5126065	CallExpression	"p -> cb_printf ( "" ]"" )"		5125725	0					
ANR	5126066	Callee	p -> cb_printf		5125725	0					
ANR	5126067	PtrMemberAccess	p -> cb_printf		5125725	0					
ANR	5126068	Identifier	p		5125725	0					
ANR	5126069	Identifier	cb_printf		5125725	1					
ANR	5126070	ArgumentList	""" ]"""		5125725	1					
ANR	5126071	Argument	""" ]"""		5125725	0					
ANR	5126072	PrimaryExpression	""" ]"""		5125725	0					
ANR	5126073	ElseStatement	else		5125725	0					
ANR	5126074	IfStatement	if ( MUSTSEEJSON || MUSTSEESTRUCT )		5125725	0					
ANR	5126075	Condition	MUSTSEEJSON || MUSTSEESTRUCT	265:12:6502:6529	5125725	0	True				
ANR	5126076	OrExpression	MUSTSEEJSON || MUSTSEESTRUCT		5125725	0		||			
ANR	5126077	Identifier	MUSTSEEJSON		5125725	0					
ANR	5126078	Identifier	MUSTSEESTRUCT		5125725	1					
ANR	5126079	CompoundStatement		54:42:1187:1187	5125725	1					
ANR	5126080	IfStatement	if ( size == - 1 )		5125725	0					
ANR	5126081	Condition	size == - 1	266:6:6540:6547	5125725	0	True				
ANR	5126082	EqualityExpression	size == - 1		5125725	0		==			
ANR	5126083	Identifier	size		5125725	0					
ANR	5126084	UnaryOperationExpression	- 1		5125725	1					
ANR	5126085	UnaryOperator	-		5125725	0					
ANR	5126086	PrimaryExpression	1		5125725	1					
ANR	5126087	CompoundStatement		55:16:1205:1205	5125725	1					
ANR	5126088	ExpressionStatement	"r_uleb128_decode ( buf + i , & offset , & value )"	267:3:6555:6596	5125725	0	True				
ANR	5126089	CallExpression	"r_uleb128_decode ( buf + i , & offset , & value )"		5125725	0					
ANR	5126090	Callee	r_uleb128_decode		5125725	0					
ANR	5126091	Identifier	r_uleb128_decode		5125725	0					
ANR	5126092	ArgumentList	buf + i		5125725	1					
ANR	5126093	Argument	buf + i		5125725	0					
ANR	5126094	AdditiveExpression	buf + i		5125725	0		+			
ANR	5126095	Identifier	buf		5125725	0					
ANR	5126096	Identifier	i		5125725	1					
ANR	5126097	Argument	& offset		5125725	1					
ANR	5126098	UnaryOperationExpression	& offset		5125725	0					
ANR	5126099	UnaryOperator	&		5125725	0					
ANR	5126100	Identifier	offset		5125725	1					
ANR	5126101	Argument	& value		5125725	2					
ANR	5126102	UnaryOperationExpression	& value		5125725	0					
ANR	5126103	UnaryOperator	&		5125725	0					
ANR	5126104	Identifier	value		5125725	1					
ANR	5126105	Statement	p	268:3:6601:6601	5125725	1	True				
ANR	5126106	Statement	->	268:4:6602:6603	5125725	2	True				
ANR	5126107	Statement	cb_printf	268:6:6604:6612	5125725	3	True				
ANR	5126108	Statement	(	268:16:6614:6614	5125725	4	True				
ANR	5126109	Statement	"""\\""%"""	268:17:6615:6619	5125725	5	True				
ANR	5126110	Statement	PFMT64d	268:22:6620:6626	5125725	6	True				
ANR	5126111	Statement	"""\\"""""	268:29:6627:6630	5125725	7	True				
ANR	5126112	Statement	","	268:33:6631:6631	5125725	8	True				
ANR	5126113	Statement	value	268:35:6633:6637	5125725	9	True				
ANR	5126114	Statement	)	268:40:6638:6638	5125725	10	True				
ANR	5126115	ExpressionStatement		268:41:6639:6639	5125725	11	True				
ANR	5126116	ElseStatement	else		5125725	0					
ANR	5126117	CompoundStatement		58:9:1305:1305	5125725	0					
ANR	5126118	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	270:3:6655:6674	5125725	0	True				
ANR	5126119	CallExpression	"p -> cb_printf ( ""[ "" )"		5125725	0					
ANR	5126120	Callee	p -> cb_printf		5125725	0					
ANR	5126121	PtrMemberAccess	p -> cb_printf		5125725	0					
ANR	5126122	Identifier	p		5125725	0					
ANR	5126123	Identifier	cb_printf		5125725	1					
ANR	5126124	ArgumentList	"""[ """		5125725	1					
ANR	5126125	Argument	"""[ """		5125725	0					
ANR	5126126	PrimaryExpression	"""[ """		5125725	0					
ANR	5126127	WhileStatement	while ( size -- )		5125725	1					
ANR	5126128	Condition	size --	271:10:6686:6691	5125725	0	True				
ANR	5126129	PostIncDecOperationExpression	size --		5125725	0					
ANR	5126130	Identifier	size		5125725	0					
ANR	5126131	IncDec	--		5125725	1					
ANR	5126132	CompoundStatement		60:18:1349:1349	5125725	1					
ANR	5126133	IfStatement	if ( elem == - 1 || elem == 0 )		5125725	0					
ANR	5126134	Condition	elem == - 1 || elem == 0	272:8:6704:6726	5125725	0	True				
ANR	5126135	OrExpression	elem == - 1 || elem == 0		5125725	0		||			
ANR	5126136	EqualityExpression	elem == - 1		5125725	0		==			
ANR	5126137	Identifier	elem		5125725	0					
ANR	5126138	UnaryOperationExpression	- 1		5125725	1					
ANR	5126139	UnaryOperator	-		5125725	0					
ANR	5126140	PrimaryExpression	1		5125725	1					
ANR	5126141	EqualityExpression	elem == 0		5125725	1		==			
ANR	5126142	Identifier	elem		5125725	0					
ANR	5126143	PrimaryExpression	0		5125725	1					
ANR	5126144	CompoundStatement		61:33:1384:1384	5125725	1					
ANR	5126145	ExpressionStatement	"r_uleb128_decode ( buf + i , & s , & value )"	273:5:6736:6772	5125725	0	True				
ANR	5126146	CallExpression	"r_uleb128_decode ( buf + i , & s , & value )"		5125725	0					
ANR	5126147	Callee	r_uleb128_decode		5125725	0					
ANR	5126148	Identifier	r_uleb128_decode		5125725	0					
ANR	5126149	ArgumentList	buf + i		5125725	1					
ANR	5126150	Argument	buf + i		5125725	0					
ANR	5126151	AdditiveExpression	buf + i		5125725	0		+			
ANR	5126152	Identifier	buf		5125725	0					
ANR	5126153	Identifier	i		5125725	1					
ANR	5126154	Argument	& s		5125725	1					
ANR	5126155	UnaryOperationExpression	& s		5125725	0					
ANR	5126156	UnaryOperator	&		5125725	0					
ANR	5126157	Identifier	s		5125725	1					
ANR	5126158	Argument	& value		5125725	2					
ANR	5126159	UnaryOperationExpression	& value		5125725	0					
ANR	5126160	UnaryOperator	&		5125725	0					
ANR	5126161	Identifier	value		5125725	1					
ANR	5126162	ExpressionStatement	i += s	274:5:6779:6785	5125725	1	True				
ANR	5126163	AssignmentExpression	i += s		5125725	0		+=			
ANR	5126164	Identifier	i		5125725	0					
ANR	5126165	Identifier	s		5125725	1					
ANR	5126166	ExpressionStatement	offset += s	275:5:6792:6803	5125725	2	True				
ANR	5126167	AssignmentExpression	offset += s		5125725	0		+=			
ANR	5126168	Identifier	offset		5125725	0					
ANR	5126169	Identifier	s		5125725	1					
ANR	5126170	Statement	p	276:5:6810:6810	5125725	3	True				
ANR	5126171	Statement	->	276:6:6811:6812	5125725	4	True				
ANR	5126172	Statement	cb_printf	276:8:6813:6821	5125725	5	True				
ANR	5126173	Statement	(	276:18:6823:6823	5125725	6	True				
ANR	5126174	Statement	"""\\""%"""	276:19:6824:6828	5125725	7	True				
ANR	5126175	Statement	PFMT64d	276:24:6829:6835	5125725	8	True				
ANR	5126176	Statement	"""\\"""""	276:31:6836:6839	5125725	9	True				
ANR	5126177	Statement	","	276:35:6840:6840	5125725	10	True				
ANR	5126178	Statement	value	276:37:6842:6846	5125725	11	True				
ANR	5126179	Statement	)	276:42:6847:6847	5125725	12	True				
ANR	5126180	ExpressionStatement		276:43:6848:6848	5125725	13	True				
ANR	5126181	IfStatement	if ( elem == 0 )		5125725	14					
ANR	5126182	Condition	elem == 0	277:9:6859:6867	5125725	0	True				
ANR	5126183	EqualityExpression	elem == 0		5125725	0		==			
ANR	5126184	Identifier	elem		5125725	0					
ANR	5126185	PrimaryExpression	0		5125725	1					
ANR	5126186	CompoundStatement		66:20:1525:1525	5125725	1					
ANR	5126187	ExpressionStatement	elem = - 2	278:6:6878:6887	5125725	0	True				
ANR	5126188	AssignmentExpression	elem = - 2		5125725	0		=			
ANR	5126189	Identifier	elem		5125725	0					
ANR	5126190	UnaryOperationExpression	- 2		5125725	1					
ANR	5126191	UnaryOperator	-		5125725	0					
ANR	5126192	PrimaryExpression	2		5125725	1					
ANR	5126193	IfStatement	if ( size != 0 && elem == - 1 )		5125725	1					
ANR	5126194	Condition	size != 0 && elem == - 1	281:8:6910:6932	5125725	0	True				
ANR	5126195	AndExpression	size != 0 && elem == - 1		5125725	0		&&			
ANR	5126196	EqualityExpression	size != 0		5125725	0		!=			
ANR	5126197	Identifier	size		5125725	0					
ANR	5126198	PrimaryExpression	0		5125725	1					
ANR	5126199	EqualityExpression	elem == - 1		5125725	1		==			
ANR	5126200	Identifier	elem		5125725	0					
ANR	5126201	UnaryOperationExpression	- 1		5125725	1					
ANR	5126202	UnaryOperator	-		5125725	0					
ANR	5126203	PrimaryExpression	1		5125725	1					
ANR	5126204	CompoundStatement		70:33:1590:1590	5125725	1					
ANR	5126205	ExpressionStatement	"p -> cb_printf ( "", "" )"	282:5:6942:6961	5125725	0	True				
ANR	5126206	CallExpression	"p -> cb_printf ( "", "" )"		5125725	0					
ANR	5126207	Callee	p -> cb_printf		5125725	0					
ANR	5126208	PtrMemberAccess	p -> cb_printf		5125725	0					
ANR	5126209	Identifier	p		5125725	0					
ANR	5126210	Identifier	cb_printf		5125725	1					
ANR	5126211	ArgumentList	""", """		5125725	1					
ANR	5126212	Argument	""", """		5125725	0					
ANR	5126213	PrimaryExpression	""", """		5125725	0					
ANR	5126214	IfStatement	if ( elem > - 1 )		5125725	2					
ANR	5126215	Condition	elem > - 1	284:8:6977:6985	5125725	0	True				
ANR	5126216	RelationalExpression	elem > - 1		5125725	0		>			
ANR	5126217	Identifier	elem		5125725	0					
ANR	5126218	UnaryOperationExpression	- 1		5125725	1					
ANR	5126219	UnaryOperator	-		5125725	0					
ANR	5126220	PrimaryExpression	1		5125725	1					
ANR	5126221	CompoundStatement		73:19:1643:1643	5125725	1					
ANR	5126222	ExpressionStatement	elem --	285:5:6995:7001	5125725	0	True				
ANR	5126223	PostIncDecOperationExpression	elem --		5125725	0					
ANR	5126224	Identifier	elem		5125725	0					
ANR	5126225	IncDec	--		5125725	1					
ANR	5126226	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	288:3:7017:7036	5125725	2	True				
ANR	5126227	CallExpression	"p -> cb_printf ( "" ]"" )"		5125725	0					
ANR	5126228	Callee	p -> cb_printf		5125725	0					
ANR	5126229	PtrMemberAccess	p -> cb_printf		5125725	0					
ANR	5126230	Identifier	p		5125725	0					
ANR	5126231	Identifier	cb_printf		5125725	1					
ANR	5126232	ArgumentList	""" ]"""		5125725	1					
ANR	5126233	Argument	""" ]"""		5125725	0					
ANR	5126234	PrimaryExpression	""" ]"""		5125725	0					
ANR	5126235	IfStatement	if ( MUSTSEEJSON )		5125725	1					
ANR	5126236	Condition	MUSTSEEJSON	290:6:7048:7058	5125725	0	True				
ANR	5126237	Identifier	MUSTSEEJSON		5125725	0					
ANR	5126238	CompoundStatement		79:19:1716:1716	5125725	1					
ANR	5126239	ExpressionStatement	"p -> cb_printf ( ""}"" )"	291:3:7066:7084	5125725	0	True				
ANR	5126240	CallExpression	"p -> cb_printf ( ""}"" )"		5125725	0					
ANR	5126241	Callee	p -> cb_printf		5125725	0					
ANR	5126242	PtrMemberAccess	p -> cb_printf		5125725	0					
ANR	5126243	Identifier	p		5125725	0					
ANR	5126244	Identifier	cb_printf		5125725	1					
ANR	5126245	ArgumentList	"""}"""		5125725	1					
ANR	5126246	Argument	"""}"""		5125725	0					
ANR	5126247	PrimaryExpression	"""}"""		5125725	0					
ANR	5126248	ReturnStatement	return offset ;	294:1:7094:7107	5125725	5	True				
ANR	5126249	Identifier	offset		5125725	0					
ANR	5126250	ReturnType	static int		5125725	1					
ANR	5126251	Identifier	r_print_format_uleb		5125725	2					
ANR	5126252	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5125725	3					
ANR	5126253	Parameter	const RPrint * p	211:31:5244:5258	5125725	0	True				
ANR	5126254	ParameterType	const RPrint *		5125725	0					
ANR	5126255	Identifier	p		5125725	1					
ANR	5126256	Parameter	int endian	211:48:5261:5270	5125725	1	True				
ANR	5126257	ParameterType	int		5125725	0					
ANR	5126258	Identifier	endian		5125725	1					
ANR	5126259	Parameter	int mode	211:60:5273:5280	5125725	2	True				
ANR	5126260	ParameterType	int		5125725	0					
ANR	5126261	Identifier	mode		5125725	1					
ANR	5126262	Parameter	const char * setval	212:2:5285:5302	5125725	3	True				
ANR	5126263	ParameterType	const char *		5125725	0					
ANR	5126264	Identifier	setval		5125725	1					
ANR	5126265	Parameter	ut64 seeki	212:22:5305:5314	5125725	4	True				
ANR	5126266	ParameterType	ut64		5125725	0					
ANR	5126267	Identifier	seeki		5125725	1					
ANR	5126268	Parameter	ut8 * buf	212:34:5317:5324	5125725	5	True				
ANR	5126269	ParameterType	ut8 *		5125725	0					
ANR	5126270	Identifier	buf		5125725	1					
ANR	5126271	Parameter	int i	212:44:5327:5331	5125725	6	True				
ANR	5126272	ParameterType	int		5125725	0					
ANR	5126273	Identifier	i		5125725	1					
ANR	5126274	Parameter	int size	212:51:5334:5341	5125725	7	True				
ANR	5126275	ParameterType	int		5125725	0					
ANR	5126276	Identifier	size		5125725	1					
ANR	5126277	CFGEntryNode	ENTRY		5125725		True				
ANR	5126278	CFGExitNode	EXIT		5125725		True				
ANR	5126279	Symbol	& value		5125725						
ANR	5126280	Symbol	r_hex_bin2strdup		5125725						
ANR	5126281	Symbol	ISQUIET		5125725						
ANR	5126282	Symbol	endian		5125725						
ANR	5126283	Symbol	MUSTSEE		5125725						
ANR	5126284	Symbol	r_num_math		5125725						
ANR	5126285	Symbol	mode		5125725						
ANR	5126286	Symbol	tmp		5125725						
ANR	5126287	Symbol	SEEVALUE		5125725						
ANR	5126288	Symbol	value		5125725						
ANR	5126289	Symbol	MUSTSET		5125725						
ANR	5126290	Symbol	elem		5125725						
ANR	5126291	Symbol	NULL		5125725						
ANR	5126292	Symbol	r_uleb128_encode		5125725						
ANR	5126293	Symbol	MUSTSEEJSON		5125725						
ANR	5126294	Symbol	offset		5125725						
ANR	5126295	Symbol	MUSTSEESTRUCT		5125725						
ANR	5126296	Symbol	& offset		5125725						
ANR	5126297	Symbol	i		5125725						
ANR	5126298	Symbol	p		5125725						
ANR	5126299	Symbol	ARRAYINDEX_COEF		5125725						
ANR	5126300	Symbol	buf		5125725						
ANR	5126301	Symbol	s		5125725						
ANR	5126302	Symbol	size		5125725						
ANR	5126303	Symbol	seeki		5125725						
ANR	5126304	Symbol	& s		5125725						
ANR	5126305	Symbol	setval		5125725						
ANR	5126306	Symbol	nbr		5125725						
ANR	5126307	Function	r_print_format_char	297:0:7112:8642							
ANR	5126308	FunctionDef	"r_print_format_char (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5126307	0					
ANR	5126309	CompoundStatement		298:61:7244:8642	5126307	0					
ANR	5126310	IdentifierDeclStatement	int elem = - 1 ;	299:1:7247:7260	5126307	0	True				
ANR	5126311	IdentifierDecl	elem = - 1		5126307	0					
ANR	5126312	IdentifierDeclType	int		5126307	0					
ANR	5126313	Identifier	elem		5126307	1					
ANR	5126314	AssignmentExpression	elem = - 1		5126307	2		=			
ANR	5126315	Identifier	elem		5126307	0					
ANR	5126316	UnaryOperationExpression	- 1		5126307	1					
ANR	5126317	UnaryOperator	-		5126307	0					
ANR	5126318	PrimaryExpression	1		5126307	1					
ANR	5126319	IfStatement	if ( size >= ARRAYINDEX_COEF )		5126307	1					
ANR	5126320	Condition	size >= ARRAYINDEX_COEF	300:5:7267:7289	5126307	0	True				
ANR	5126321	RelationalExpression	size >= ARRAYINDEX_COEF		5126307	0		>=			
ANR	5126322	Identifier	size		5126307	0					
ANR	5126323	Identifier	ARRAYINDEX_COEF		5126307	1					
ANR	5126324	CompoundStatement		3:30:47:47	5126307	1					
ANR	5126325	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	301:2:7296:7325	5126307	0	True				
ANR	5126326	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5126307	0		=			
ANR	5126327	Identifier	elem		5126307	0					
ANR	5126328	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5126307	1		-			
ANR	5126329	MultiplicativeExpression	size / ARRAYINDEX_COEF		5126307	0		/			
ANR	5126330	Identifier	size		5126307	0					
ANR	5126331	Identifier	ARRAYINDEX_COEF		5126307	1					
ANR	5126332	PrimaryExpression	1		5126307	1					
ANR	5126333	ExpressionStatement	size %= ARRAYINDEX_COEF	302:2:7329:7352	5126307	1	True				
ANR	5126334	AssignmentExpression	size %= ARRAYINDEX_COEF		5126307	0		%=			
ANR	5126335	Identifier	size		5126307	0					
ANR	5126336	Identifier	ARRAYINDEX_COEF		5126307	1					
ANR	5126337	IfStatement	if ( MUSTSET )		5126307	2					
ANR	5126338	Condition	MUSTSET	304:5:7362:7368	5126307	0	True				
ANR	5126339	Identifier	MUSTSET		5126307	0					
ANR	5126340	CompoundStatement		7:14:126:126	5126307	1					
ANR	5126341	Statement	p	305:2:7375:7375	5126307	0	True				
ANR	5126342	Statement	->	305:3:7376:7377	5126307	1	True				
ANR	5126343	Statement	cb_printf	305:5:7378:7386	5126307	2	True				
ANR	5126344	Statement	(	305:15:7388:7388	5126307	3	True				
ANR	5126345	Statement	"""\\""w %s\\"" @ 0x%08"""	305:16:7389:7406	5126307	4	True				
ANR	5126346	Statement	PFMT64x	305:34:7407:7413	5126307	5	True				
ANR	5126347	Statement	"""\\n"""	305:41:7414:7417	5126307	6	True				
ANR	5126348	Statement	","	305:45:7418:7418	5126307	7	True				
ANR	5126349	Statement	setval	305:47:7420:7425	5126307	8	True				
ANR	5126350	Statement	","	305:53:7426:7426	5126307	9	True				
ANR	5126351	Statement	seeki	305:55:7428:7432	5126307	10	True				
ANR	5126352	Statement	+	305:60:7433:7433	5126307	11	True				
ANR	5126353	Statement	(	305:61:7434:7434	5126307	12	True				
ANR	5126354	Statement	(	305:62:7435:7435	5126307	13	True				
ANR	5126355	Statement	elem	305:63:7436:7439	5126307	14	True				
ANR	5126356	Statement	>=	305:67:7440:7441	5126307	15	True				
ANR	5126357	Statement	0	305:69:7442:7442	5126307	16	True				
ANR	5126358	Statement	)	305:70:7443:7443	5126307	17	True				
ANR	5126359	Statement	?	305:71:7444:7444	5126307	18	True				
ANR	5126360	Label	elem :	305:72:7445:7449	5126307	19	True				
ANR	5126361	Identifier	elem		5126307	0					
ANR	5126362	Statement	0	305:77:7450:7450	5126307	20	True				
ANR	5126363	Statement	)	305:78:7451:7451	5126307	21	True				
ANR	5126364	Statement	)	305:79:7452:7452	5126307	22	True				
ANR	5126365	ExpressionStatement		305:80:7453:7453	5126307	23	True				
ANR	5126366	ElseStatement	else		5126307	0					
ANR	5126367	IfStatement	if ( MUSTSEE )		5126307	0					
ANR	5126368	Condition	MUSTSEE	306:12:7467:7473	5126307	0	True				
ANR	5126369	Identifier	MUSTSEE		5126307	0					
ANR	5126370	CompoundStatement		9:21:231:231	5126307	1					
ANR	5126371	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5126307	0					
ANR	5126372	Condition	! SEEVALUE && ! ISQUIET	307:6:7484:7504	5126307	0	True				
ANR	5126373	AndExpression	! SEEVALUE && ! ISQUIET		5126307	0		&&			
ANR	5126374	UnaryOperationExpression	! SEEVALUE		5126307	0					
ANR	5126375	UnaryOperator	!		5126307	0					
ANR	5126376	Identifier	SEEVALUE		5126307	1					
ANR	5126377	UnaryOperationExpression	! ISQUIET		5126307	1					
ANR	5126378	UnaryOperator	!		5126307	0					
ANR	5126379	Identifier	ISQUIET		5126307	1					
ANR	5126380	CompoundStatement		10:29:262:262	5126307	1					
ANR	5126381	Statement	p	308:3:7512:7512	5126307	0	True				
ANR	5126382	Statement	->	308:4:7513:7514	5126307	1	True				
ANR	5126383	Statement	cb_printf	308:6:7515:7523	5126307	2	True				
ANR	5126384	Statement	(	308:16:7525:7525	5126307	3	True				
ANR	5126385	Statement	"""0x%08"""	308:17:7526:7532	5126307	4	True				
ANR	5126386	Statement	PFMT64x	308:25:7534:7540	5126307	5	True				
ANR	5126387	Statement	""" = """	308:33:7542:7546	5126307	6	True				
ANR	5126388	Statement	","	308:38:7547:7547	5126307	7	True				
ANR	5126389	Statement	seeki	308:40:7549:7553	5126307	8	True				
ANR	5126390	Statement	+	308:46:7555:7555	5126307	9	True				
ANR	5126391	Statement	(	308:48:7557:7557	5126307	10	True				
ANR	5126392	Statement	(	308:49:7558:7558	5126307	11	True				
ANR	5126393	Statement	elem	308:50:7559:7562	5126307	12	True				
ANR	5126394	Statement	>=	308:55:7564:7565	5126307	13	True				
ANR	5126395	Statement	0	308:58:7567:7567	5126307	14	True				
ANR	5126396	Statement	)	308:59:7568:7568	5126307	15	True				
ANR	5126397	Statement	?	308:61:7570:7570	5126307	16	True				
ANR	5126398	Statement	elem	308:63:7572:7575	5126307	17	True				
ANR	5126399	Statement	*	308:68:7577:7577	5126307	18	True				
ANR	5126400	Label	2 :	308:70:7579:7581	5126307	19	True				
ANR	5126401	Statement	0	308:74:7583:7583	5126307	20	True				
ANR	5126402	Statement	)	308:75:7584:7584	5126307	21	True				
ANR	5126403	Statement	)	308:76:7585:7585	5126307	22	True				
ANR	5126404	ExpressionStatement		308:77:7586:7586	5126307	23	True				
ANR	5126405	IfStatement	if ( size == - 1 )		5126307	1					
ANR	5126406	Condition	size == - 1	310:6:7631:7640	5126307	0	True				
ANR	5126407	EqualityExpression	size == - 1		5126307	0		==			
ANR	5126408	Identifier	size		5126307	0					
ANR	5126409	UnaryOperationExpression	- 1		5126307	1					
ANR	5126410	UnaryOperator	-		5126307	0					
ANR	5126411	PrimaryExpression	1		5126307	1					
ANR	5126412	CompoundStatement		13:18:398:398	5126307	1					
ANR	5126413	ExpressionStatement	"p -> cb_printf ( ""'%c'"" , IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.' )"	311:3:7648:7703	5126307	0	True				
ANR	5126414	CallExpression	"p -> cb_printf ( ""'%c'"" , IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.' )"		5126307	0					
ANR	5126415	Callee	p -> cb_printf		5126307	0					
ANR	5126416	PtrMemberAccess	p -> cb_printf		5126307	0					
ANR	5126417	Identifier	p		5126307	0					
ANR	5126418	Identifier	cb_printf		5126307	1					
ANR	5126419	ArgumentList	"""'%c'"""		5126307	1					
ANR	5126420	Argument	"""'%c'"""		5126307	0					
ANR	5126421	PrimaryExpression	"""'%c'"""		5126307	0					
ANR	5126422	Argument	IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.'		5126307	1					
ANR	5126423	ConditionalExpression	IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.'		5126307	0					
ANR	5126424	Condition	IS_PRINTABLE ( buf [ i ] )		5126307	0					
ANR	5126425	CallExpression	IS_PRINTABLE ( buf [ i ] )		5126307	0					
ANR	5126426	Callee	IS_PRINTABLE		5126307	0					
ANR	5126427	Identifier	IS_PRINTABLE		5126307	0					
ANR	5126428	ArgumentList	buf [ i ]		5126307	1					
ANR	5126429	Argument	buf [ i ]		5126307	0					
ANR	5126430	ArrayIndexing	buf [ i ]		5126307	0					
ANR	5126431	Identifier	buf		5126307	0					
ANR	5126432	Identifier	i		5126307	1					
ANR	5126433	ArrayIndexing	buf [ i ]		5126307	1					
ANR	5126434	Identifier	buf		5126307	0					
ANR	5126435	Identifier	i		5126307	1					
ANR	5126436	PrimaryExpression	'.'		5126307	2					
ANR	5126437	ElseStatement	else		5126307	0					
ANR	5126438	CompoundStatement		15:9:469:469	5126307	0					
ANR	5126439	IfStatement	if ( ! SEEVALUE )		5126307	0					
ANR	5126440	Condition	! SEEVALUE	313:7:7723:7731	5126307	0	True				
ANR	5126441	UnaryOperationExpression	! SEEVALUE		5126307	0					
ANR	5126442	UnaryOperator	!		5126307	0					
ANR	5126443	Identifier	SEEVALUE		5126307	1					
ANR	5126444	CompoundStatement		16:18:489:489	5126307	1					
ANR	5126445	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	314:4:7740:7759	5126307	0	True				
ANR	5126446	CallExpression	"p -> cb_printf ( ""[ "" )"		5126307	0					
ANR	5126447	Callee	p -> cb_printf		5126307	0					
ANR	5126448	PtrMemberAccess	p -> cb_printf		5126307	0					
ANR	5126449	Identifier	p		5126307	0					
ANR	5126450	Identifier	cb_printf		5126307	1					
ANR	5126451	ArgumentList	"""[ """		5126307	1					
ANR	5126452	Argument	"""[ """		5126307	0					
ANR	5126453	PrimaryExpression	"""[ """		5126307	0					
ANR	5126454	WhileStatement	while ( size -- )		5126307	1					
ANR	5126455	Condition	size --	316:10:7776:7781	5126307	0	True				
ANR	5126456	PostIncDecOperationExpression	size --		5126307	0					
ANR	5126457	Identifier	size		5126307	0					
ANR	5126458	IncDec	--		5126307	1					
ANR	5126459	CompoundStatement		19:18:539:539	5126307	1					
ANR	5126460	IfStatement	if ( elem == - 1 || elem == 0 )		5126307	0					
ANR	5126461	Condition	elem == - 1 || elem == 0	317:8:7794:7816	5126307	0	True				
ANR	5126462	OrExpression	elem == - 1 || elem == 0		5126307	0		||			
ANR	5126463	EqualityExpression	elem == - 1		5126307	0		==			
ANR	5126464	Identifier	elem		5126307	0					
ANR	5126465	UnaryOperationExpression	- 1		5126307	1					
ANR	5126466	UnaryOperator	-		5126307	0					
ANR	5126467	PrimaryExpression	1		5126307	1					
ANR	5126468	EqualityExpression	elem == 0		5126307	1		==			
ANR	5126469	Identifier	elem		5126307	0					
ANR	5126470	PrimaryExpression	0		5126307	1					
ANR	5126471	CompoundStatement		20:33:574:574	5126307	1					
ANR	5126472	ExpressionStatement	"p -> cb_printf ( ""'%c'"" , IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.' )"	318:5:7826:7881	5126307	0	True				
ANR	5126473	CallExpression	"p -> cb_printf ( ""'%c'"" , IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.' )"		5126307	0					
ANR	5126474	Callee	p -> cb_printf		5126307	0					
ANR	5126475	PtrMemberAccess	p -> cb_printf		5126307	0					
ANR	5126476	Identifier	p		5126307	0					
ANR	5126477	Identifier	cb_printf		5126307	1					
ANR	5126478	ArgumentList	"""'%c'"""		5126307	1					
ANR	5126479	Argument	"""'%c'"""		5126307	0					
ANR	5126480	PrimaryExpression	"""'%c'"""		5126307	0					
ANR	5126481	Argument	IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.'		5126307	1					
ANR	5126482	ConditionalExpression	IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.'		5126307	0					
ANR	5126483	Condition	IS_PRINTABLE ( buf [ i ] )		5126307	0					
ANR	5126484	CallExpression	IS_PRINTABLE ( buf [ i ] )		5126307	0					
ANR	5126485	Callee	IS_PRINTABLE		5126307	0					
ANR	5126486	Identifier	IS_PRINTABLE		5126307	0					
ANR	5126487	ArgumentList	buf [ i ]		5126307	1					
ANR	5126488	Argument	buf [ i ]		5126307	0					
ANR	5126489	ArrayIndexing	buf [ i ]		5126307	0					
ANR	5126490	Identifier	buf		5126307	0					
ANR	5126491	Identifier	i		5126307	1					
ANR	5126492	ArrayIndexing	buf [ i ]		5126307	1					
ANR	5126493	Identifier	buf		5126307	0					
ANR	5126494	Identifier	i		5126307	1					
ANR	5126495	PrimaryExpression	'.'		5126307	2					
ANR	5126496	IfStatement	if ( elem == 0 )		5126307	1					
ANR	5126497	Condition	elem == 0	319:9:7892:7900	5126307	0	True				
ANR	5126498	EqualityExpression	elem == 0		5126307	0		==			
ANR	5126499	Identifier	elem		5126307	0					
ANR	5126500	PrimaryExpression	0		5126307	1					
ANR	5126501	CompoundStatement		22:20:658:658	5126307	1					
ANR	5126502	ExpressionStatement	elem = - 2	320:6:7911:7920	5126307	0	True				
ANR	5126503	AssignmentExpression	elem = - 2		5126307	0		=			
ANR	5126504	Identifier	elem		5126307	0					
ANR	5126505	UnaryOperationExpression	- 2		5126307	1					
ANR	5126506	UnaryOperator	-		5126307	0					
ANR	5126507	PrimaryExpression	2		5126307	1					
ANR	5126508	IfStatement	if ( size != 0 && elem == - 1 )		5126307	1					
ANR	5126509	Condition	size != 0 && elem == - 1	323:8:7943:7965	5126307	0	True				
ANR	5126510	AndExpression	size != 0 && elem == - 1		5126307	0		&&			
ANR	5126511	EqualityExpression	size != 0		5126307	0		!=			
ANR	5126512	Identifier	size		5126307	0					
ANR	5126513	PrimaryExpression	0		5126307	1					
ANR	5126514	EqualityExpression	elem == - 1		5126307	1		==			
ANR	5126515	Identifier	elem		5126307	0					
ANR	5126516	UnaryOperationExpression	- 1		5126307	1					
ANR	5126517	UnaryOperator	-		5126307	0					
ANR	5126518	PrimaryExpression	1		5126307	1					
ANR	5126519	CompoundStatement		26:33:723:723	5126307	1					
ANR	5126520	ExpressionStatement	"p -> cb_printf ( "", "" )"	324:5:7975:7994	5126307	0	True				
ANR	5126521	CallExpression	"p -> cb_printf ( "", "" )"		5126307	0					
ANR	5126522	Callee	p -> cb_printf		5126307	0					
ANR	5126523	PtrMemberAccess	p -> cb_printf		5126307	0					
ANR	5126524	Identifier	p		5126307	0					
ANR	5126525	Identifier	cb_printf		5126307	1					
ANR	5126526	ArgumentList	""", """		5126307	1					
ANR	5126527	Argument	""", """		5126307	0					
ANR	5126528	PrimaryExpression	""", """		5126307	0					
ANR	5126529	IfStatement	if ( elem > - 1 )		5126307	2					
ANR	5126530	Condition	elem > - 1	326:8:8010:8018	5126307	0	True				
ANR	5126531	RelationalExpression	elem > - 1		5126307	0		>			
ANR	5126532	Identifier	elem		5126307	0					
ANR	5126533	UnaryOperationExpression	- 1		5126307	1					
ANR	5126534	UnaryOperator	-		5126307	0					
ANR	5126535	PrimaryExpression	1		5126307	1					
ANR	5126536	CompoundStatement		29:19:776:776	5126307	1					
ANR	5126537	ExpressionStatement	elem --	327:5:8028:8034	5126307	0	True				
ANR	5126538	PostIncDecOperationExpression	elem --		5126307	0					
ANR	5126539	Identifier	elem		5126307	0					
ANR	5126540	IncDec	--		5126307	1					
ANR	5126541	ExpressionStatement	i ++	329:4:8046:8049	5126307	3	True				
ANR	5126542	PostIncDecOperationExpression	i ++		5126307	0					
ANR	5126543	Identifier	i		5126307	0					
ANR	5126544	IncDec	++		5126307	1					
ANR	5126545	IfStatement	if ( ! SEEVALUE )		5126307	2					
ANR	5126546	Condition	! SEEVALUE	331:7:8063:8071	5126307	0	True				
ANR	5126547	UnaryOperationExpression	! SEEVALUE		5126307	0					
ANR	5126548	UnaryOperator	!		5126307	0					
ANR	5126549	Identifier	SEEVALUE		5126307	1					
ANR	5126550	CompoundStatement		34:18:829:829	5126307	1					
ANR	5126551	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	332:4:8080:8099	5126307	0	True				
ANR	5126552	CallExpression	"p -> cb_printf ( "" ]"" )"		5126307	0					
ANR	5126553	Callee	p -> cb_printf		5126307	0					
ANR	5126554	PtrMemberAccess	p -> cb_printf		5126307	0					
ANR	5126555	Identifier	p		5126307	0					
ANR	5126556	Identifier	cb_printf		5126307	1					
ANR	5126557	ArgumentList	""" ]"""		5126307	1					
ANR	5126558	Argument	""" ]"""		5126307	0					
ANR	5126559	PrimaryExpression	""" ]"""		5126307	0					
ANR	5126560	ElseStatement	else		5126307	0					
ANR	5126561	IfStatement	if ( MUSTSEEJSON || MUSTSEESTRUCT )		5126307	0					
ANR	5126562	Condition	MUSTSEEJSON || MUSTSEESTRUCT	335:12:8122:8149	5126307	0	True				
ANR	5126563	OrExpression	MUSTSEEJSON || MUSTSEESTRUCT		5126307	0		||			
ANR	5126564	Identifier	MUSTSEEJSON		5126307	0					
ANR	5126565	Identifier	MUSTSEESTRUCT		5126307	1					
ANR	5126566	CompoundStatement		38:42:907:907	5126307	1					
ANR	5126567	IfStatement	if ( size == - 1 )		5126307	0					
ANR	5126568	Condition	size == - 1	336:6:8160:8169	5126307	0	True				
ANR	5126569	EqualityExpression	size == - 1		5126307	0		==			
ANR	5126570	Identifier	size		5126307	0					
ANR	5126571	UnaryOperationExpression	- 1		5126307	1					
ANR	5126572	UnaryOperator	-		5126307	0					
ANR	5126573	PrimaryExpression	1		5126307	1					
ANR	5126574	CompoundStatement		39:18:927:927	5126307	1					
ANR	5126575	ExpressionStatement	"p -> cb_printf ( ""\\""%c\\"""" , IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.' )"	337:3:8177:8234	5126307	0	True				
ANR	5126576	CallExpression	"p -> cb_printf ( ""\\""%c\\"""" , IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.' )"		5126307	0					
ANR	5126577	Callee	p -> cb_printf		5126307	0					
ANR	5126578	PtrMemberAccess	p -> cb_printf		5126307	0					
ANR	5126579	Identifier	p		5126307	0					
ANR	5126580	Identifier	cb_printf		5126307	1					
ANR	5126581	ArgumentList	"""\\""%c\\"""""		5126307	1					
ANR	5126582	Argument	"""\\""%c\\"""""		5126307	0					
ANR	5126583	PrimaryExpression	"""\\""%c\\"""""		5126307	0					
ANR	5126584	Argument	IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.'		5126307	1					
ANR	5126585	ConditionalExpression	IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.'		5126307	0					
ANR	5126586	Condition	IS_PRINTABLE ( buf [ i ] )		5126307	0					
ANR	5126587	CallExpression	IS_PRINTABLE ( buf [ i ] )		5126307	0					
ANR	5126588	Callee	IS_PRINTABLE		5126307	0					
ANR	5126589	Identifier	IS_PRINTABLE		5126307	0					
ANR	5126590	ArgumentList	buf [ i ]		5126307	1					
ANR	5126591	Argument	buf [ i ]		5126307	0					
ANR	5126592	ArrayIndexing	buf [ i ]		5126307	0					
ANR	5126593	Identifier	buf		5126307	0					
ANR	5126594	Identifier	i		5126307	1					
ANR	5126595	ArrayIndexing	buf [ i ]		5126307	1					
ANR	5126596	Identifier	buf		5126307	0					
ANR	5126597	Identifier	i		5126307	1					
ANR	5126598	PrimaryExpression	'.'		5126307	2					
ANR	5126599	ElseStatement	else		5126307	0					
ANR	5126600	CompoundStatement		41:9:1000:1000	5126307	0					
ANR	5126601	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	339:3:8250:8269	5126307	0	True				
ANR	5126602	CallExpression	"p -> cb_printf ( ""[ "" )"		5126307	0					
ANR	5126603	Callee	p -> cb_printf		5126307	0					
ANR	5126604	PtrMemberAccess	p -> cb_printf		5126307	0					
ANR	5126605	Identifier	p		5126307	0					
ANR	5126606	Identifier	cb_printf		5126307	1					
ANR	5126607	ArgumentList	"""[ """		5126307	1					
ANR	5126608	Argument	"""[ """		5126307	0					
ANR	5126609	PrimaryExpression	"""[ """		5126307	0					
ANR	5126610	WhileStatement	while ( size -- )		5126307	1					
ANR	5126611	Condition	size --	340:10:8281:8286	5126307	0	True				
ANR	5126612	PostIncDecOperationExpression	size --		5126307	0					
ANR	5126613	Identifier	size		5126307	0					
ANR	5126614	IncDec	--		5126307	1					
ANR	5126615	CompoundStatement		43:18:1044:1044	5126307	1					
ANR	5126616	IfStatement	if ( elem == - 1 || elem == 0 )		5126307	0					
ANR	5126617	Condition	elem == - 1 || elem == 0	341:8:8299:8321	5126307	0	True				
ANR	5126618	OrExpression	elem == - 1 || elem == 0		5126307	0		||			
ANR	5126619	EqualityExpression	elem == - 1		5126307	0		==			
ANR	5126620	Identifier	elem		5126307	0					
ANR	5126621	UnaryOperationExpression	- 1		5126307	1					
ANR	5126622	UnaryOperator	-		5126307	0					
ANR	5126623	PrimaryExpression	1		5126307	1					
ANR	5126624	EqualityExpression	elem == 0		5126307	1		==			
ANR	5126625	Identifier	elem		5126307	0					
ANR	5126626	PrimaryExpression	0		5126307	1					
ANR	5126627	CompoundStatement		44:33:1079:1079	5126307	1					
ANR	5126628	ExpressionStatement	"p -> cb_printf ( ""\\""%c\\"""" , IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.' )"	342:5:8331:8388	5126307	0	True				
ANR	5126629	CallExpression	"p -> cb_printf ( ""\\""%c\\"""" , IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.' )"		5126307	0					
ANR	5126630	Callee	p -> cb_printf		5126307	0					
ANR	5126631	PtrMemberAccess	p -> cb_printf		5126307	0					
ANR	5126632	Identifier	p		5126307	0					
ANR	5126633	Identifier	cb_printf		5126307	1					
ANR	5126634	ArgumentList	"""\\""%c\\"""""		5126307	1					
ANR	5126635	Argument	"""\\""%c\\"""""		5126307	0					
ANR	5126636	PrimaryExpression	"""\\""%c\\"""""		5126307	0					
ANR	5126637	Argument	IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.'		5126307	1					
ANR	5126638	ConditionalExpression	IS_PRINTABLE ( buf [ i ] ) ? buf [ i ] : '.'		5126307	0					
ANR	5126639	Condition	IS_PRINTABLE ( buf [ i ] )		5126307	0					
ANR	5126640	CallExpression	IS_PRINTABLE ( buf [ i ] )		5126307	0					
ANR	5126641	Callee	IS_PRINTABLE		5126307	0					
ANR	5126642	Identifier	IS_PRINTABLE		5126307	0					
ANR	5126643	ArgumentList	buf [ i ]		5126307	1					
ANR	5126644	Argument	buf [ i ]		5126307	0					
ANR	5126645	ArrayIndexing	buf [ i ]		5126307	0					
ANR	5126646	Identifier	buf		5126307	0					
ANR	5126647	Identifier	i		5126307	1					
ANR	5126648	ArrayIndexing	buf [ i ]		5126307	1					
ANR	5126649	Identifier	buf		5126307	0					
ANR	5126650	Identifier	i		5126307	1					
ANR	5126651	PrimaryExpression	'.'		5126307	2					
ANR	5126652	IfStatement	if ( elem == 0 )		5126307	1					
ANR	5126653	Condition	elem == 0	343:9:8399:8407	5126307	0	True				
ANR	5126654	EqualityExpression	elem == 0		5126307	0		==			
ANR	5126655	Identifier	elem		5126307	0					
ANR	5126656	PrimaryExpression	0		5126307	1					
ANR	5126657	CompoundStatement		46:20:1165:1165	5126307	1					
ANR	5126658	ExpressionStatement	elem = - 2	344:6:8418:8427	5126307	0	True				
ANR	5126659	AssignmentExpression	elem = - 2		5126307	0		=			
ANR	5126660	Identifier	elem		5126307	0					
ANR	5126661	UnaryOperationExpression	- 2		5126307	1					
ANR	5126662	UnaryOperator	-		5126307	0					
ANR	5126663	PrimaryExpression	2		5126307	1					
ANR	5126664	IfStatement	if ( size != 0 && elem == - 1 )		5126307	1					
ANR	5126665	Condition	size != 0 && elem == - 1	347:8:8450:8472	5126307	0	True				
ANR	5126666	AndExpression	size != 0 && elem == - 1		5126307	0		&&			
ANR	5126667	EqualityExpression	size != 0		5126307	0		!=			
ANR	5126668	Identifier	size		5126307	0					
ANR	5126669	PrimaryExpression	0		5126307	1					
ANR	5126670	EqualityExpression	elem == - 1		5126307	1		==			
ANR	5126671	Identifier	elem		5126307	0					
ANR	5126672	UnaryOperationExpression	- 1		5126307	1					
ANR	5126673	UnaryOperator	-		5126307	0					
ANR	5126674	PrimaryExpression	1		5126307	1					
ANR	5126675	CompoundStatement		50:33:1230:1230	5126307	1					
ANR	5126676	ExpressionStatement	"p -> cb_printf ( "", "" )"	348:5:8482:8501	5126307	0	True				
ANR	5126677	CallExpression	"p -> cb_printf ( "", "" )"		5126307	0					
ANR	5126678	Callee	p -> cb_printf		5126307	0					
ANR	5126679	PtrMemberAccess	p -> cb_printf		5126307	0					
ANR	5126680	Identifier	p		5126307	0					
ANR	5126681	Identifier	cb_printf		5126307	1					
ANR	5126682	ArgumentList	""", """		5126307	1					
ANR	5126683	Argument	""", """		5126307	0					
ANR	5126684	PrimaryExpression	""", """		5126307	0					
ANR	5126685	IfStatement	if ( elem > - 1 )		5126307	2					
ANR	5126686	Condition	elem > - 1	350:8:8517:8525	5126307	0	True				
ANR	5126687	RelationalExpression	elem > - 1		5126307	0		>			
ANR	5126688	Identifier	elem		5126307	0					
ANR	5126689	UnaryOperationExpression	- 1		5126307	1					
ANR	5126690	UnaryOperator	-		5126307	0					
ANR	5126691	PrimaryExpression	1		5126307	1					
ANR	5126692	CompoundStatement		53:19:1283:1283	5126307	1					
ANR	5126693	ExpressionStatement	elem --	351:5:8535:8541	5126307	0	True				
ANR	5126694	PostIncDecOperationExpression	elem --		5126307	0					
ANR	5126695	Identifier	elem		5126307	0					
ANR	5126696	IncDec	--		5126307	1					
ANR	5126697	ExpressionStatement	i ++	353:4:8553:8556	5126307	3	True				
ANR	5126698	PostIncDecOperationExpression	i ++		5126307	0					
ANR	5126699	Identifier	i		5126307	0					
ANR	5126700	IncDec	++		5126307	1					
ANR	5126701	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	355:3:8566:8585	5126307	2	True				
ANR	5126702	CallExpression	"p -> cb_printf ( "" ]"" )"		5126307	0					
ANR	5126703	Callee	p -> cb_printf		5126307	0					
ANR	5126704	PtrMemberAccess	p -> cb_printf		5126307	0					
ANR	5126705	Identifier	p		5126307	0					
ANR	5126706	Identifier	cb_printf		5126307	1					
ANR	5126707	ArgumentList	""" ]"""		5126307	1					
ANR	5126708	Argument	""" ]"""		5126307	0					
ANR	5126709	PrimaryExpression	""" ]"""		5126307	0					
ANR	5126710	IfStatement	if ( MUSTSEEJSON )		5126307	1					
ANR	5126711	Condition	MUSTSEEJSON	357:6:8597:8607	5126307	0	True				
ANR	5126712	Identifier	MUSTSEEJSON		5126307	0					
ANR	5126713	CompoundStatement		60:19:1365:1365	5126307	1					
ANR	5126714	ExpressionStatement	"p -> cb_printf ( ""}"" )"	358:3:8615:8633	5126307	0	True				
ANR	5126715	CallExpression	"p -> cb_printf ( ""}"" )"		5126307	0					
ANR	5126716	Callee	p -> cb_printf		5126307	0					
ANR	5126717	PtrMemberAccess	p -> cb_printf		5126307	0					
ANR	5126718	Identifier	p		5126307	0					
ANR	5126719	Identifier	cb_printf		5126307	1					
ANR	5126720	ArgumentList	"""}"""		5126307	1					
ANR	5126721	Argument	"""}"""		5126307	0					
ANR	5126722	PrimaryExpression	"""}"""		5126307	0					
ANR	5126723	ReturnType	static void		5126307	1					
ANR	5126724	Identifier	r_print_format_char		5126307	2					
ANR	5126725	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5126307	3					
ANR	5126726	Parameter	const RPrint * p	297:32:7144:7158	5126307	0	True				
ANR	5126727	ParameterType	const RPrint *		5126307	0					
ANR	5126728	Identifier	p		5126307	1					
ANR	5126729	Parameter	int endian	297:49:7161:7170	5126307	1	True				
ANR	5126730	ParameterType	int		5126307	0					
ANR	5126731	Identifier	endian		5126307	1					
ANR	5126732	Parameter	int mode	297:61:7173:7180	5126307	2	True				
ANR	5126733	ParameterType	int		5126307	0					
ANR	5126734	Identifier	mode		5126307	1					
ANR	5126735	Parameter	const char * setval	298:2:7185:7202	5126307	3	True				
ANR	5126736	ParameterType	const char *		5126307	0					
ANR	5126737	Identifier	setval		5126307	1					
ANR	5126738	Parameter	ut64 seeki	298:22:7205:7214	5126307	4	True				
ANR	5126739	ParameterType	ut64		5126307	0					
ANR	5126740	Identifier	seeki		5126307	1					
ANR	5126741	Parameter	ut8 * buf	298:34:7217:7224	5126307	5	True				
ANR	5126742	ParameterType	ut8 *		5126307	0					
ANR	5126743	Identifier	buf		5126307	1					
ANR	5126744	Parameter	int i	298:44:7227:7231	5126307	6	True				
ANR	5126745	ParameterType	int		5126307	0					
ANR	5126746	Identifier	i		5126307	1					
ANR	5126747	Parameter	int size	298:51:7234:7241	5126307	7	True				
ANR	5126748	ParameterType	int		5126307	0					
ANR	5126749	Identifier	size		5126307	1					
ANR	5126750	CFGEntryNode	ENTRY		5126307		True				
ANR	5126751	CFGExitNode	EXIT		5126307		True				
ANR	5126752	Symbol	elem		5126307						
ANR	5126753	Symbol	* buf		5126307						
ANR	5126754	Symbol	IS_PRINTABLE		5126307						
ANR	5126755	Symbol	MUSTSEEJSON		5126307						
ANR	5126756	Symbol	MUSTSEESTRUCT		5126307						
ANR	5126757	Symbol	i		5126307						
ANR	5126758	Symbol	ISQUIET		5126307						
ANR	5126759	Symbol	endian		5126307						
ANR	5126760	Symbol	MUSTSEE		5126307						
ANR	5126761	Symbol	p		5126307						
ANR	5126762	Symbol	mode		5126307						
ANR	5126763	Symbol	ARRAYINDEX_COEF		5126307						
ANR	5126764	Symbol	buf		5126307						
ANR	5126765	Symbol	* i		5126307						
ANR	5126766	Symbol	size		5126307						
ANR	5126767	Symbol	seeki		5126307						
ANR	5126768	Symbol	SEEVALUE		5126307						
ANR	5126769	Symbol	setval		5126307						
ANR	5126770	Symbol	MUSTSET		5126307						
ANR	5126771	Function	r_print_format_decchar	363:0:8645:10033							
ANR	5126772	FunctionDef	"r_print_format_decchar (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5126771	0					
ANR	5126773	CompoundStatement		364:61:8780:10033	5126771	0					
ANR	5126774	IdentifierDeclStatement	int elem = - 1 ;	365:1:8783:8796	5126771	0	True				
ANR	5126775	IdentifierDecl	elem = - 1		5126771	0					
ANR	5126776	IdentifierDeclType	int		5126771	0					
ANR	5126777	Identifier	elem		5126771	1					
ANR	5126778	AssignmentExpression	elem = - 1		5126771	2		=			
ANR	5126779	Identifier	elem		5126771	0					
ANR	5126780	UnaryOperationExpression	- 1		5126771	1					
ANR	5126781	UnaryOperator	-		5126771	0					
ANR	5126782	PrimaryExpression	1		5126771	1					
ANR	5126783	IfStatement	if ( size >= ARRAYINDEX_COEF )		5126771	1					
ANR	5126784	Condition	size >= ARRAYINDEX_COEF	366:5:8803:8825	5126771	0	True				
ANR	5126785	RelationalExpression	size >= ARRAYINDEX_COEF		5126771	0		>=			
ANR	5126786	Identifier	size		5126771	0					
ANR	5126787	Identifier	ARRAYINDEX_COEF		5126771	1					
ANR	5126788	CompoundStatement		3:30:47:47	5126771	1					
ANR	5126789	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	367:2:8832:8861	5126771	0	True				
ANR	5126790	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5126771	0		=			
ANR	5126791	Identifier	elem		5126771	0					
ANR	5126792	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5126771	1		-			
ANR	5126793	MultiplicativeExpression	size / ARRAYINDEX_COEF		5126771	0		/			
ANR	5126794	Identifier	size		5126771	0					
ANR	5126795	Identifier	ARRAYINDEX_COEF		5126771	1					
ANR	5126796	PrimaryExpression	1		5126771	1					
ANR	5126797	ExpressionStatement	size %= ARRAYINDEX_COEF	368:2:8865:8888	5126771	1	True				
ANR	5126798	AssignmentExpression	size %= ARRAYINDEX_COEF		5126771	0		%=			
ANR	5126799	Identifier	size		5126771	0					
ANR	5126800	Identifier	ARRAYINDEX_COEF		5126771	1					
ANR	5126801	IfStatement	if ( MUSTSET )		5126771	2					
ANR	5126802	Condition	MUSTSET	370:5:8898:8904	5126771	0	True				
ANR	5126803	Identifier	MUSTSET		5126771	0					
ANR	5126804	CompoundStatement		7:14:126:126	5126771	1					
ANR	5126805	Statement	p	371:2:8911:8911	5126771	0	True				
ANR	5126806	Statement	->	371:3:8912:8913	5126771	1	True				
ANR	5126807	Statement	cb_printf	371:5:8914:8922	5126771	2	True				
ANR	5126808	Statement	(	371:15:8924:8924	5126771	3	True				
ANR	5126809	Statement	"""\\""w %s\\"" @ 0x%08"""	371:16:8925:8942	5126771	4	True				
ANR	5126810	Statement	PFMT64x	371:34:8943:8949	5126771	5	True				
ANR	5126811	Statement	"""\\n"""	371:41:8950:8953	5126771	6	True				
ANR	5126812	Statement	","	371:45:8954:8954	5126771	7	True				
ANR	5126813	Statement	setval	371:47:8956:8961	5126771	8	True				
ANR	5126814	Statement	","	371:53:8962:8962	5126771	9	True				
ANR	5126815	Statement	seeki	371:55:8964:8968	5126771	10	True				
ANR	5126816	Statement	+	371:60:8969:8969	5126771	11	True				
ANR	5126817	Statement	(	371:61:8970:8970	5126771	12	True				
ANR	5126818	Statement	(	371:62:8971:8971	5126771	13	True				
ANR	5126819	Statement	elem	371:63:8972:8975	5126771	14	True				
ANR	5126820	Statement	>=	371:67:8976:8977	5126771	15	True				
ANR	5126821	Statement	0	371:69:8978:8978	5126771	16	True				
ANR	5126822	Statement	)	371:70:8979:8979	5126771	17	True				
ANR	5126823	Statement	?	371:71:8980:8980	5126771	18	True				
ANR	5126824	Label	elem :	371:72:8981:8985	5126771	19	True				
ANR	5126825	Identifier	elem		5126771	0					
ANR	5126826	Statement	0	371:77:8986:8986	5126771	20	True				
ANR	5126827	Statement	)	371:78:8987:8987	5126771	21	True				
ANR	5126828	Statement	)	371:79:8988:8988	5126771	22	True				
ANR	5126829	ExpressionStatement		371:80:8989:8989	5126771	23	True				
ANR	5126830	ElseStatement	else		5126771	0					
ANR	5126831	IfStatement	if ( MUSTSEE )		5126771	0					
ANR	5126832	Condition	MUSTSEE	372:12:9003:9009	5126771	0	True				
ANR	5126833	Identifier	MUSTSEE		5126771	0					
ANR	5126834	CompoundStatement		9:21:231:231	5126771	1					
ANR	5126835	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5126771	0					
ANR	5126836	Condition	! SEEVALUE && ! ISQUIET	373:6:9020:9040	5126771	0	True				
ANR	5126837	AndExpression	! SEEVALUE && ! ISQUIET		5126771	0		&&			
ANR	5126838	UnaryOperationExpression	! SEEVALUE		5126771	0					
ANR	5126839	UnaryOperator	!		5126771	0					
ANR	5126840	Identifier	SEEVALUE		5126771	1					
ANR	5126841	UnaryOperationExpression	! ISQUIET		5126771	1					
ANR	5126842	UnaryOperator	!		5126771	0					
ANR	5126843	Identifier	ISQUIET		5126771	1					
ANR	5126844	CompoundStatement		10:29:262:262	5126771	1					
ANR	5126845	Statement	p	374:3:9048:9048	5126771	0	True				
ANR	5126846	Statement	->	374:4:9049:9050	5126771	1	True				
ANR	5126847	Statement	cb_printf	374:6:9051:9059	5126771	2	True				
ANR	5126848	Statement	(	374:16:9061:9061	5126771	3	True				
ANR	5126849	Statement	"""0x%08"""	374:17:9062:9068	5126771	4	True				
ANR	5126850	Statement	PFMT64x	374:25:9070:9076	5126771	5	True				
ANR	5126851	Statement	""" = """	374:33:9078:9082	5126771	6	True				
ANR	5126852	Statement	","	374:38:9083:9083	5126771	7	True				
ANR	5126853	Statement	seeki	374:40:9085:9089	5126771	8	True				
ANR	5126854	Statement	+	374:46:9091:9091	5126771	9	True				
ANR	5126855	Statement	(	374:48:9093:9093	5126771	10	True				
ANR	5126856	Statement	(	374:49:9094:9094	5126771	11	True				
ANR	5126857	Statement	elem	374:50:9095:9098	5126771	12	True				
ANR	5126858	Statement	>=	374:55:9100:9101	5126771	13	True				
ANR	5126859	Statement	0	374:58:9103:9103	5126771	14	True				
ANR	5126860	Statement	)	374:59:9104:9104	5126771	15	True				
ANR	5126861	Statement	?	374:61:9106:9106	5126771	16	True				
ANR	5126862	Label	elem :	374:63:9108:9113	5126771	17	True				
ANR	5126863	Identifier	elem		5126771	0					
ANR	5126864	Statement	0	374:70:9115:9115	5126771	18	True				
ANR	5126865	Statement	)	374:71:9116:9116	5126771	19	True				
ANR	5126866	Statement	)	374:72:9117:9117	5126771	20	True				
ANR	5126867	ExpressionStatement		374:73:9118:9118	5126771	21	True				
ANR	5126868	IfStatement	if ( size == - 1 )		5126771	1					
ANR	5126869	Condition	size == - 1	376:6:9130:9139	5126771	0	True				
ANR	5126870	EqualityExpression	size == - 1		5126771	0		==			
ANR	5126871	Identifier	size		5126771	0					
ANR	5126872	UnaryOperationExpression	- 1		5126771	1					
ANR	5126873	UnaryOperator	-		5126771	0					
ANR	5126874	PrimaryExpression	1		5126771	1					
ANR	5126875	CompoundStatement		13:18:361:361	5126771	1					
ANR	5126876	ExpressionStatement	"p -> cb_printf ( ""%d"" , buf [ i ] )"	377:3:9147:9174	5126771	0	True				
ANR	5126877	CallExpression	"p -> cb_printf ( ""%d"" , buf [ i ] )"		5126771	0					
ANR	5126878	Callee	p -> cb_printf		5126771	0					
ANR	5126879	PtrMemberAccess	p -> cb_printf		5126771	0					
ANR	5126880	Identifier	p		5126771	0					
ANR	5126881	Identifier	cb_printf		5126771	1					
ANR	5126882	ArgumentList	"""%d"""		5126771	1					
ANR	5126883	Argument	"""%d"""		5126771	0					
ANR	5126884	PrimaryExpression	"""%d"""		5126771	0					
ANR	5126885	Argument	buf [ i ]		5126771	1					
ANR	5126886	ArrayIndexing	buf [ i ]		5126771	0					
ANR	5126887	Identifier	buf		5126771	0					
ANR	5126888	Identifier	i		5126771	1					
ANR	5126889	ElseStatement	else		5126771	0					
ANR	5126890	CompoundStatement		15:9:404:404	5126771	0					
ANR	5126891	IfStatement	if ( ! SEEVALUE )		5126771	0					
ANR	5126892	Condition	! SEEVALUE	379:7:9194:9202	5126771	0	True				
ANR	5126893	UnaryOperationExpression	! SEEVALUE		5126771	0					
ANR	5126894	UnaryOperator	!		5126771	0					
ANR	5126895	Identifier	SEEVALUE		5126771	1					
ANR	5126896	CompoundStatement		16:18:424:424	5126771	1					
ANR	5126897	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	380:4:9211:9230	5126771	0	True				
ANR	5126898	CallExpression	"p -> cb_printf ( ""[ "" )"		5126771	0					
ANR	5126899	Callee	p -> cb_printf		5126771	0					
ANR	5126900	PtrMemberAccess	p -> cb_printf		5126771	0					
ANR	5126901	Identifier	p		5126771	0					
ANR	5126902	Identifier	cb_printf		5126771	1					
ANR	5126903	ArgumentList	"""[ """		5126771	1					
ANR	5126904	Argument	"""[ """		5126771	0					
ANR	5126905	PrimaryExpression	"""[ """		5126771	0					
ANR	5126906	WhileStatement	while ( size -- )		5126771	1					
ANR	5126907	Condition	size --	382:10:9247:9252	5126771	0	True				
ANR	5126908	PostIncDecOperationExpression	size --		5126771	0					
ANR	5126909	Identifier	size		5126771	0					
ANR	5126910	IncDec	--		5126771	1					
ANR	5126911	CompoundStatement		19:18:474:474	5126771	1					
ANR	5126912	IfStatement	if ( elem == - 1 || elem == 0 )		5126771	0					
ANR	5126913	Condition	elem == - 1 || elem == 0	383:8:9265:9287	5126771	0	True				
ANR	5126914	OrExpression	elem == - 1 || elem == 0		5126771	0		||			
ANR	5126915	EqualityExpression	elem == - 1		5126771	0		==			
ANR	5126916	Identifier	elem		5126771	0					
ANR	5126917	UnaryOperationExpression	- 1		5126771	1					
ANR	5126918	UnaryOperator	-		5126771	0					
ANR	5126919	PrimaryExpression	1		5126771	1					
ANR	5126920	EqualityExpression	elem == 0		5126771	1		==			
ANR	5126921	Identifier	elem		5126771	0					
ANR	5126922	PrimaryExpression	0		5126771	1					
ANR	5126923	CompoundStatement		20:33:509:509	5126771	1					
ANR	5126924	ExpressionStatement	"p -> cb_printf ( ""%d"" , buf [ i ] )"	384:5:9297:9324	5126771	0	True				
ANR	5126925	CallExpression	"p -> cb_printf ( ""%d"" , buf [ i ] )"		5126771	0					
ANR	5126926	Callee	p -> cb_printf		5126771	0					
ANR	5126927	PtrMemberAccess	p -> cb_printf		5126771	0					
ANR	5126928	Identifier	p		5126771	0					
ANR	5126929	Identifier	cb_printf		5126771	1					
ANR	5126930	ArgumentList	"""%d"""		5126771	1					
ANR	5126931	Argument	"""%d"""		5126771	0					
ANR	5126932	PrimaryExpression	"""%d"""		5126771	0					
ANR	5126933	Argument	buf [ i ]		5126771	1					
ANR	5126934	ArrayIndexing	buf [ i ]		5126771	0					
ANR	5126935	Identifier	buf		5126771	0					
ANR	5126936	Identifier	i		5126771	1					
ANR	5126937	IfStatement	if ( elem == 0 )		5126771	1					
ANR	5126938	Condition	elem == 0	385:9:9335:9343	5126771	0	True				
ANR	5126939	EqualityExpression	elem == 0		5126771	0		==			
ANR	5126940	Identifier	elem		5126771	0					
ANR	5126941	PrimaryExpression	0		5126771	1					
ANR	5126942	CompoundStatement		22:20:565:565	5126771	1					
ANR	5126943	ExpressionStatement	elem = - 2	386:6:9354:9363	5126771	0	True				
ANR	5126944	AssignmentExpression	elem = - 2		5126771	0		=			
ANR	5126945	Identifier	elem		5126771	0					
ANR	5126946	UnaryOperationExpression	- 2		5126771	1					
ANR	5126947	UnaryOperator	-		5126771	0					
ANR	5126948	PrimaryExpression	2		5126771	1					
ANR	5126949	IfStatement	if ( size != 0 && elem == - 1 )		5126771	1					
ANR	5126950	Condition	size != 0 && elem == - 1	389:8:9386:9408	5126771	0	True				
ANR	5126951	AndExpression	size != 0 && elem == - 1		5126771	0		&&			
ANR	5126952	EqualityExpression	size != 0		5126771	0		!=			
ANR	5126953	Identifier	size		5126771	0					
ANR	5126954	PrimaryExpression	0		5126771	1					
ANR	5126955	EqualityExpression	elem == - 1		5126771	1		==			
ANR	5126956	Identifier	elem		5126771	0					
ANR	5126957	UnaryOperationExpression	- 1		5126771	1					
ANR	5126958	UnaryOperator	-		5126771	0					
ANR	5126959	PrimaryExpression	1		5126771	1					
ANR	5126960	CompoundStatement		26:33:630:630	5126771	1					
ANR	5126961	ExpressionStatement	"p -> cb_printf ( "", "" )"	390:5:9418:9437	5126771	0	True				
ANR	5126962	CallExpression	"p -> cb_printf ( "", "" )"		5126771	0					
ANR	5126963	Callee	p -> cb_printf		5126771	0					
ANR	5126964	PtrMemberAccess	p -> cb_printf		5126771	0					
ANR	5126965	Identifier	p		5126771	0					
ANR	5126966	Identifier	cb_printf		5126771	1					
ANR	5126967	ArgumentList	""", """		5126771	1					
ANR	5126968	Argument	""", """		5126771	0					
ANR	5126969	PrimaryExpression	""", """		5126771	0					
ANR	5126970	IfStatement	if ( elem > - 1 )		5126771	2					
ANR	5126971	Condition	elem > - 1	392:8:9453:9461	5126771	0	True				
ANR	5126972	RelationalExpression	elem > - 1		5126771	0		>			
ANR	5126973	Identifier	elem		5126771	0					
ANR	5126974	UnaryOperationExpression	- 1		5126771	1					
ANR	5126975	UnaryOperator	-		5126771	0					
ANR	5126976	PrimaryExpression	1		5126771	1					
ANR	5126977	CompoundStatement		29:19:683:683	5126771	1					
ANR	5126978	ExpressionStatement	elem --	393:5:9471:9477	5126771	0	True				
ANR	5126979	PostIncDecOperationExpression	elem --		5126771	0					
ANR	5126980	Identifier	elem		5126771	0					
ANR	5126981	IncDec	--		5126771	1					
ANR	5126982	ExpressionStatement	i ++	395:4:9489:9492	5126771	3	True				
ANR	5126983	PostIncDecOperationExpression	i ++		5126771	0					
ANR	5126984	Identifier	i		5126771	0					
ANR	5126985	IncDec	++		5126771	1					
ANR	5126986	IfStatement	if ( ! SEEVALUE )		5126771	2					
ANR	5126987	Condition	! SEEVALUE	397:7:9506:9514	5126771	0	True				
ANR	5126988	UnaryOperationExpression	! SEEVALUE		5126771	0					
ANR	5126989	UnaryOperator	!		5126771	0					
ANR	5126990	Identifier	SEEVALUE		5126771	1					
ANR	5126991	CompoundStatement		34:18:736:736	5126771	1					
ANR	5126992	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	398:4:9523:9542	5126771	0	True				
ANR	5126993	CallExpression	"p -> cb_printf ( "" ]"" )"		5126771	0					
ANR	5126994	Callee	p -> cb_printf		5126771	0					
ANR	5126995	PtrMemberAccess	p -> cb_printf		5126771	0					
ANR	5126996	Identifier	p		5126771	0					
ANR	5126997	Identifier	cb_printf		5126771	1					
ANR	5126998	ArgumentList	""" ]"""		5126771	1					
ANR	5126999	Argument	""" ]"""		5126771	0					
ANR	5127000	PrimaryExpression	""" ]"""		5126771	0					
ANR	5127001	ElseStatement	else		5126771	0					
ANR	5127002	IfStatement	if ( MUSTSEEJSON || MUSTSEESTRUCT )		5126771	0					
ANR	5127003	Condition	MUSTSEEJSON || MUSTSEESTRUCT	401:12:9565:9592	5126771	0	True				
ANR	5127004	OrExpression	MUSTSEEJSON || MUSTSEESTRUCT		5126771	0		||			
ANR	5127005	Identifier	MUSTSEEJSON		5126771	0					
ANR	5127006	Identifier	MUSTSEESTRUCT		5126771	1					
ANR	5127007	CompoundStatement		38:42:814:814	5126771	1					
ANR	5127008	IfStatement	if ( size == - 1 )		5126771	0					
ANR	5127009	Condition	size == - 1	402:6:9603:9612	5126771	0	True				
ANR	5127010	EqualityExpression	size == - 1		5126771	0		==			
ANR	5127011	Identifier	size		5126771	0					
ANR	5127012	UnaryOperationExpression	- 1		5126771	1					
ANR	5127013	UnaryOperator	-		5126771	0					
ANR	5127014	PrimaryExpression	1		5126771	1					
ANR	5127015	CompoundStatement		39:18:834:834	5126771	1					
ANR	5127016	ExpressionStatement	"p -> cb_printf ( ""\\""%d\\"""" , buf [ i ] )"	403:3:9620:9651	5126771	0	True				
ANR	5127017	CallExpression	"p -> cb_printf ( ""\\""%d\\"""" , buf [ i ] )"		5126771	0					
ANR	5127018	Callee	p -> cb_printf		5126771	0					
ANR	5127019	PtrMemberAccess	p -> cb_printf		5126771	0					
ANR	5127020	Identifier	p		5126771	0					
ANR	5127021	Identifier	cb_printf		5126771	1					
ANR	5127022	ArgumentList	"""\\""%d\\"""""		5126771	1					
ANR	5127023	Argument	"""\\""%d\\"""""		5126771	0					
ANR	5127024	PrimaryExpression	"""\\""%d\\"""""		5126771	0					
ANR	5127025	Argument	buf [ i ]		5126771	1					
ANR	5127026	ArrayIndexing	buf [ i ]		5126771	0					
ANR	5127027	Identifier	buf		5126771	0					
ANR	5127028	Identifier	i		5126771	1					
ANR	5127029	ElseStatement	else		5126771	0					
ANR	5127030	CompoundStatement		41:9:881:881	5126771	0					
ANR	5127031	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	405:3:9667:9686	5126771	0	True				
ANR	5127032	CallExpression	"p -> cb_printf ( ""[ "" )"		5126771	0					
ANR	5127033	Callee	p -> cb_printf		5126771	0					
ANR	5127034	PtrMemberAccess	p -> cb_printf		5126771	0					
ANR	5127035	Identifier	p		5126771	0					
ANR	5127036	Identifier	cb_printf		5126771	1					
ANR	5127037	ArgumentList	"""[ """		5126771	1					
ANR	5127038	Argument	"""[ """		5126771	0					
ANR	5127039	PrimaryExpression	"""[ """		5126771	0					
ANR	5127040	WhileStatement	while ( size -- )		5126771	1					
ANR	5127041	Condition	size --	406:10:9698:9703	5126771	0	True				
ANR	5127042	PostIncDecOperationExpression	size --		5126771	0					
ANR	5127043	Identifier	size		5126771	0					
ANR	5127044	IncDec	--		5126771	1					
ANR	5127045	CompoundStatement		43:18:925:925	5126771	1					
ANR	5127046	IfStatement	if ( elem == - 1 || elem == 0 )		5126771	0					
ANR	5127047	Condition	elem == - 1 || elem == 0	407:8:9716:9738	5126771	0	True				
ANR	5127048	OrExpression	elem == - 1 || elem == 0		5126771	0		||			
ANR	5127049	EqualityExpression	elem == - 1		5126771	0		==			
ANR	5127050	Identifier	elem		5126771	0					
ANR	5127051	UnaryOperationExpression	- 1		5126771	1					
ANR	5127052	UnaryOperator	-		5126771	0					
ANR	5127053	PrimaryExpression	1		5126771	1					
ANR	5127054	EqualityExpression	elem == 0		5126771	1		==			
ANR	5127055	Identifier	elem		5126771	0					
ANR	5127056	PrimaryExpression	0		5126771	1					
ANR	5127057	CompoundStatement		44:33:960:960	5126771	1					
ANR	5127058	ExpressionStatement	"p -> cb_printf ( ""\\""%d\\"""" , buf [ i ] )"	408:5:9748:9779	5126771	0	True				
ANR	5127059	CallExpression	"p -> cb_printf ( ""\\""%d\\"""" , buf [ i ] )"		5126771	0					
ANR	5127060	Callee	p -> cb_printf		5126771	0					
ANR	5127061	PtrMemberAccess	p -> cb_printf		5126771	0					
ANR	5127062	Identifier	p		5126771	0					
ANR	5127063	Identifier	cb_printf		5126771	1					
ANR	5127064	ArgumentList	"""\\""%d\\"""""		5126771	1					
ANR	5127065	Argument	"""\\""%d\\"""""		5126771	0					
ANR	5127066	PrimaryExpression	"""\\""%d\\"""""		5126771	0					
ANR	5127067	Argument	buf [ i ]		5126771	1					
ANR	5127068	ArrayIndexing	buf [ i ]		5126771	0					
ANR	5127069	Identifier	buf		5126771	0					
ANR	5127070	Identifier	i		5126771	1					
ANR	5127071	IfStatement	if ( elem == 0 )		5126771	1					
ANR	5127072	Condition	elem == 0	409:9:9790:9798	5126771	0	True				
ANR	5127073	EqualityExpression	elem == 0		5126771	0		==			
ANR	5127074	Identifier	elem		5126771	0					
ANR	5127075	PrimaryExpression	0		5126771	1					
ANR	5127076	CompoundStatement		46:20:1020:1020	5126771	1					
ANR	5127077	ExpressionStatement	elem = - 2	410:6:9809:9818	5126771	0	True				
ANR	5127078	AssignmentExpression	elem = - 2		5126771	0		=			
ANR	5127079	Identifier	elem		5126771	0					
ANR	5127080	UnaryOperationExpression	- 2		5126771	1					
ANR	5127081	UnaryOperator	-		5126771	0					
ANR	5127082	PrimaryExpression	2		5126771	1					
ANR	5127083	IfStatement	if ( size != 0 && elem == - 1 )		5126771	1					
ANR	5127084	Condition	size != 0 && elem == - 1	413:8:9841:9863	5126771	0	True				
ANR	5127085	AndExpression	size != 0 && elem == - 1		5126771	0		&&			
ANR	5127086	EqualityExpression	size != 0		5126771	0		!=			
ANR	5127087	Identifier	size		5126771	0					
ANR	5127088	PrimaryExpression	0		5126771	1					
ANR	5127089	EqualityExpression	elem == - 1		5126771	1		==			
ANR	5127090	Identifier	elem		5126771	0					
ANR	5127091	UnaryOperationExpression	- 1		5126771	1					
ANR	5127092	UnaryOperator	-		5126771	0					
ANR	5127093	PrimaryExpression	1		5126771	1					
ANR	5127094	CompoundStatement		50:33:1085:1085	5126771	1					
ANR	5127095	ExpressionStatement	"p -> cb_printf ( "", "" )"	414:5:9873:9892	5126771	0	True				
ANR	5127096	CallExpression	"p -> cb_printf ( "", "" )"		5126771	0					
ANR	5127097	Callee	p -> cb_printf		5126771	0					
ANR	5127098	PtrMemberAccess	p -> cb_printf		5126771	0					
ANR	5127099	Identifier	p		5126771	0					
ANR	5127100	Identifier	cb_printf		5126771	1					
ANR	5127101	ArgumentList	""", """		5126771	1					
ANR	5127102	Argument	""", """		5126771	0					
ANR	5127103	PrimaryExpression	""", """		5126771	0					
ANR	5127104	IfStatement	if ( elem > - 1 )		5126771	2					
ANR	5127105	Condition	elem > - 1	416:8:9908:9916	5126771	0	True				
ANR	5127106	RelationalExpression	elem > - 1		5126771	0		>			
ANR	5127107	Identifier	elem		5126771	0					
ANR	5127108	UnaryOperationExpression	- 1		5126771	1					
ANR	5127109	UnaryOperator	-		5126771	0					
ANR	5127110	PrimaryExpression	1		5126771	1					
ANR	5127111	CompoundStatement		53:19:1138:1138	5126771	1					
ANR	5127112	ExpressionStatement	elem --	417:5:9926:9932	5126771	0	True				
ANR	5127113	PostIncDecOperationExpression	elem --		5126771	0					
ANR	5127114	Identifier	elem		5126771	0					
ANR	5127115	IncDec	--		5126771	1					
ANR	5127116	ExpressionStatement	i ++	419:4:9944:9947	5126771	3	True				
ANR	5127117	PostIncDecOperationExpression	i ++		5126771	0					
ANR	5127118	Identifier	i		5126771	0					
ANR	5127119	IncDec	++		5126771	1					
ANR	5127120	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	421:3:9957:9976	5126771	2	True				
ANR	5127121	CallExpression	"p -> cb_printf ( "" ]"" )"		5126771	0					
ANR	5127122	Callee	p -> cb_printf		5126771	0					
ANR	5127123	PtrMemberAccess	p -> cb_printf		5126771	0					
ANR	5127124	Identifier	p		5126771	0					
ANR	5127125	Identifier	cb_printf		5126771	1					
ANR	5127126	ArgumentList	""" ]"""		5126771	1					
ANR	5127127	Argument	""" ]"""		5126771	0					
ANR	5127128	PrimaryExpression	""" ]"""		5126771	0					
ANR	5127129	IfStatement	if ( MUSTSEEJSON )		5126771	1					
ANR	5127130	Condition	MUSTSEEJSON	423:6:9988:9998	5126771	0	True				
ANR	5127131	Identifier	MUSTSEEJSON		5126771	0					
ANR	5127132	CompoundStatement		60:19:1220:1220	5126771	1					
ANR	5127133	ExpressionStatement	"p -> cb_printf ( ""}"" )"	424:3:10006:10024	5126771	0	True				
ANR	5127134	CallExpression	"p -> cb_printf ( ""}"" )"		5126771	0					
ANR	5127135	Callee	p -> cb_printf		5126771	0					
ANR	5127136	PtrMemberAccess	p -> cb_printf		5126771	0					
ANR	5127137	Identifier	p		5126771	0					
ANR	5127138	Identifier	cb_printf		5126771	1					
ANR	5127139	ArgumentList	"""}"""		5126771	1					
ANR	5127140	Argument	"""}"""		5126771	0					
ANR	5127141	PrimaryExpression	"""}"""		5126771	0					
ANR	5127142	ReturnType	static void		5126771	1					
ANR	5127143	Identifier	r_print_format_decchar		5126771	2					
ANR	5127144	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5126771	3					
ANR	5127145	Parameter	const RPrint * p	363:35:8680:8694	5126771	0	True				
ANR	5127146	ParameterType	const RPrint *		5126771	0					
ANR	5127147	Identifier	p		5126771	1					
ANR	5127148	Parameter	int endian	363:52:8697:8706	5126771	1	True				
ANR	5127149	ParameterType	int		5126771	0					
ANR	5127150	Identifier	endian		5126771	1					
ANR	5127151	Parameter	int mode	363:64:8709:8716	5126771	2	True				
ANR	5127152	ParameterType	int		5126771	0					
ANR	5127153	Identifier	mode		5126771	1					
ANR	5127154	Parameter	const char * setval	364:2:8721:8738	5126771	3	True				
ANR	5127155	ParameterType	const char *		5126771	0					
ANR	5127156	Identifier	setval		5126771	1					
ANR	5127157	Parameter	ut64 seeki	364:22:8741:8750	5126771	4	True				
ANR	5127158	ParameterType	ut64		5126771	0					
ANR	5127159	Identifier	seeki		5126771	1					
ANR	5127160	Parameter	ut8 * buf	364:34:8753:8760	5126771	5	True				
ANR	5127161	ParameterType	ut8 *		5126771	0					
ANR	5127162	Identifier	buf		5126771	1					
ANR	5127163	Parameter	int i	364:44:8763:8767	5126771	6	True				
ANR	5127164	ParameterType	int		5126771	0					
ANR	5127165	Identifier	i		5126771	1					
ANR	5127166	Parameter	int size	364:51:8770:8777	5126771	7	True				
ANR	5127167	ParameterType	int		5126771	0					
ANR	5127168	Identifier	size		5126771	1					
ANR	5127169	CFGEntryNode	ENTRY		5126771		True				
ANR	5127170	CFGExitNode	EXIT		5126771		True				
ANR	5127171	Symbol	elem		5126771						
ANR	5127172	Symbol	* buf		5126771						
ANR	5127173	Symbol	MUSTSEEJSON		5126771						
ANR	5127174	Symbol	MUSTSEESTRUCT		5126771						
ANR	5127175	Symbol	i		5126771						
ANR	5127176	Symbol	ISQUIET		5126771						
ANR	5127177	Symbol	endian		5126771						
ANR	5127178	Symbol	MUSTSEE		5126771						
ANR	5127179	Symbol	p		5126771						
ANR	5127180	Symbol	mode		5126771						
ANR	5127181	Symbol	ARRAYINDEX_COEF		5126771						
ANR	5127182	Symbol	buf		5126771						
ANR	5127183	Symbol	* i		5126771						
ANR	5127184	Symbol	size		5126771						
ANR	5127185	Symbol	seeki		5126771						
ANR	5127186	Symbol	SEEVALUE		5126771						
ANR	5127187	Symbol	setval		5126771						
ANR	5127188	Symbol	MUSTSET		5126771						
ANR	5127189	Function	r_print_format_string	429:0:10036:11273							
ANR	5127190	FunctionDef	"r_print_format_string (const RPrint * p , ut64 seeki , ut64 addr64 , ut64 addr , int is64 , int mode)"		5127189	0					
ANR	5127191	CompoundStatement		429:106:10142:11273	5127189	0					
ANR	5127192	IdentifierDeclStatement	ut8 buffer [ 255 ] ;	430:1:10145:10160	5127189	0	True				
ANR	5127193	IdentifierDecl	buffer [ 255 ]		5127189	0					
ANR	5127194	IdentifierDeclType	ut8 [ 255 ]		5127189	0					
ANR	5127195	Identifier	buffer		5127189	1					
ANR	5127196	PrimaryExpression	255		5127189	2					
ANR	5127197	ExpressionStatement	buffer [ 0 ] = 0	431:1:10163:10176	5127189	1	True				
ANR	5127198	AssignmentExpression	buffer [ 0 ] = 0		5127189	0		=			
ANR	5127199	ArrayIndexing	buffer [ 0 ]		5127189	0					
ANR	5127200	Identifier	buffer		5127189	0					
ANR	5127201	PrimaryExpression	0		5127189	1					
ANR	5127202	PrimaryExpression	0		5127189	1					
ANR	5127203	IfStatement	if ( ! p -> iob . read_at )		5127189	2					
ANR	5127204	Condition	! p -> iob . read_at	432:5:10183:10197	5127189	0	True				
ANR	5127205	UnaryOperationExpression	! p -> iob . read_at		5127189	0					
ANR	5127206	UnaryOperator	!		5127189	0					
ANR	5127207	MemberAccess	p -> iob . read_at		5127189	1					
ANR	5127208	PtrMemberAccess	p -> iob		5127189	0					
ANR	5127209	Identifier	p		5127189	0					
ANR	5127210	Identifier	iob		5127189	1					
ANR	5127211	Identifier	read_at		5127189	1					
ANR	5127212	CompoundStatement		4:22:57:57	5127189	1					
ANR	5127213	ExpressionStatement	"eprintf ( ""(cannot read memory)\\n"" )"	433:2:10204:10238	5127189	0	True				
ANR	5127214	CallExpression	"eprintf ( ""(cannot read memory)\\n"" )"		5127189	0					
ANR	5127215	Callee	eprintf		5127189	0					
ANR	5127216	Identifier	eprintf		5127189	0					
ANR	5127217	ArgumentList	"""(cannot read memory)\\n"""		5127189	1					
ANR	5127218	Argument	"""(cannot read memory)\\n"""		5127189	0					
ANR	5127219	PrimaryExpression	"""(cannot read memory)\\n"""		5127189	0					
ANR	5127220	ReturnStatement	return - 1 ;	434:2:10242:10251	5127189	1	True				
ANR	5127221	UnaryOperationExpression	- 1		5127189	0					
ANR	5127222	UnaryOperator	-		5127189	0					
ANR	5127223	PrimaryExpression	1		5127189	1					
ANR	5127224	IdentifierDeclStatement	const ut64 at = ( is64 == 1 ) ? addr64 : ( ut64 ) addr ;	436:1:10257:10304	5127189	3	True				
ANR	5127225	IdentifierDecl	at = ( is64 == 1 ) ? addr64 : ( ut64 ) addr		5127189	0					
ANR	5127226	IdentifierDeclType	const ut64		5127189	0					
ANR	5127227	Identifier	at		5127189	1					
ANR	5127228	AssignmentExpression	at = ( is64 == 1 ) ? addr64 : ( ut64 ) addr		5127189	2		=			
ANR	5127229	Identifier	at		5127189	0					
ANR	5127230	ConditionalExpression	( is64 == 1 ) ? addr64 : ( ut64 ) addr		5127189	1					
ANR	5127231	Condition	is64 == 1		5127189	0					
ANR	5127232	EqualityExpression	is64 == 1		5127189	0		==			
ANR	5127233	Identifier	is64		5127189	0					
ANR	5127234	PrimaryExpression	1		5127189	1					
ANR	5127235	Identifier	addr64		5127189	1					
ANR	5127236	CastExpression	( ut64 ) addr		5127189	2					
ANR	5127237	CastTarget	ut64		5127189	0					
ANR	5127238	Identifier	addr		5127189	1					
ANR	5127239	IdentifierDeclStatement	"int res = p -> iob . read_at ( p -> iob . io , at , buffer , sizeof ( buffer ) - 8 ) ;"	437:1:10307:10376	5127189	4	True				
ANR	5127240	IdentifierDecl	"res = p -> iob . read_at ( p -> iob . io , at , buffer , sizeof ( buffer ) - 8 )"		5127189	0					
ANR	5127241	IdentifierDeclType	int		5127189	0					
ANR	5127242	Identifier	res		5127189	1					
ANR	5127243	AssignmentExpression	"res = p -> iob . read_at ( p -> iob . io , at , buffer , sizeof ( buffer ) - 8 )"		5127189	2		=			
ANR	5127244	Identifier	res		5127189	0					
ANR	5127245	CallExpression	"p -> iob . read_at ( p -> iob . io , at , buffer , sizeof ( buffer ) - 8 )"		5127189	1					
ANR	5127246	Callee	p -> iob . read_at		5127189	0					
ANR	5127247	MemberAccess	p -> iob . read_at		5127189	0					
ANR	5127248	PtrMemberAccess	p -> iob		5127189	0					
ANR	5127249	Identifier	p		5127189	0					
ANR	5127250	Identifier	iob		5127189	1					
ANR	5127251	Identifier	read_at		5127189	1					
ANR	5127252	ArgumentList	p -> iob . io		5127189	1					
ANR	5127253	Argument	p -> iob . io		5127189	0					
ANR	5127254	MemberAccess	p -> iob . io		5127189	0					
ANR	5127255	PtrMemberAccess	p -> iob		5127189	0					
ANR	5127256	Identifier	p		5127189	0					
ANR	5127257	Identifier	iob		5127189	1					
ANR	5127258	Identifier	io		5127189	1					
ANR	5127259	Argument	at		5127189	1					
ANR	5127260	Identifier	at		5127189	0					
ANR	5127261	Argument	buffer		5127189	2					
ANR	5127262	Identifier	buffer		5127189	0					
ANR	5127263	Argument	sizeof ( buffer ) - 8		5127189	3					
ANR	5127264	AdditiveExpression	sizeof ( buffer ) - 8		5127189	0		-			
ANR	5127265	SizeofExpression	sizeof ( buffer )		5127189	0					
ANR	5127266	Sizeof	sizeof		5127189	0					
ANR	5127267	SizeofOperand	buffer		5127189	1					
ANR	5127268	PrimaryExpression	8		5127189	1					
ANR	5127269	IfStatement	if ( MUSTSEEJSON )		5127189	5					
ANR	5127270	Condition	MUSTSEEJSON	438:5:10383:10393	5127189	0	True				
ANR	5127271	Identifier	MUSTSEEJSON		5127189	0					
ANR	5127272	CompoundStatement		11:2:257:317	5127189	1					
ANR	5127273	IdentifierDeclStatement	"char * encstr = r_str_utf16_encode ( ( const char * ) buffer , - 1 ) ;"	439:2:10400:10460	5127189	0	True				
ANR	5127274	IdentifierDecl	"* encstr = r_str_utf16_encode ( ( const char * ) buffer , - 1 )"		5127189	0					
ANR	5127275	IdentifierDeclType	char *		5127189	0					
ANR	5127276	Identifier	encstr		5127189	1					
ANR	5127277	AssignmentExpression	"* encstr = r_str_utf16_encode ( ( const char * ) buffer , - 1 )"		5127189	2		=			
ANR	5127278	Identifier	encstr		5127189	0					
ANR	5127279	CallExpression	"r_str_utf16_encode ( ( const char * ) buffer , - 1 )"		5127189	1					
ANR	5127280	Callee	r_str_utf16_encode		5127189	0					
ANR	5127281	Identifier	r_str_utf16_encode		5127189	0					
ANR	5127282	ArgumentList	( const char * ) buffer		5127189	1					
ANR	5127283	Argument	( const char * ) buffer		5127189	0					
ANR	5127284	CastExpression	( const char * ) buffer		5127189	0					
ANR	5127285	CastTarget	const char *		5127189	0					
ANR	5127286	Identifier	buffer		5127189	1					
ANR	5127287	Argument	- 1		5127189	1					
ANR	5127288	UnaryOperationExpression	- 1		5127189	0					
ANR	5127289	UnaryOperator	-		5127189	0					
ANR	5127290	PrimaryExpression	1		5127189	1					
ANR	5127291	IfStatement	if ( encstr )		5127189	1					
ANR	5127292	Condition	encstr	440:6:10468:10473	5127189	0	True				
ANR	5127293	Identifier	encstr		5127189	0					
ANR	5127294	CompoundStatement		12:14:333:333	5127189	1					
ANR	5127295	ExpressionStatement	"p -> cb_printf ( ""%d,\\""string\\"":\\""%s\\""}"" , seeki , encstr )"	441:3:10481:10534	5127189	0	True				
ANR	5127296	CallExpression	"p -> cb_printf ( ""%d,\\""string\\"":\\""%s\\""}"" , seeki , encstr )"		5127189	0					
ANR	5127297	Callee	p -> cb_printf		5127189	0					
ANR	5127298	PtrMemberAccess	p -> cb_printf		5127189	0					
ANR	5127299	Identifier	p		5127189	0					
ANR	5127300	Identifier	cb_printf		5127189	1					
ANR	5127301	ArgumentList	"""%d,\\""string\\"":\\""%s\\""}"""		5127189	1					
ANR	5127302	Argument	"""%d,\\""string\\"":\\""%s\\""}"""		5127189	0					
ANR	5127303	PrimaryExpression	"""%d,\\""string\\"":\\""%s\\""}"""		5127189	0					
ANR	5127304	Argument	seeki		5127189	1					
ANR	5127305	Identifier	seeki		5127189	0					
ANR	5127306	Argument	encstr		5127189	2					
ANR	5127307	Identifier	encstr		5127189	0					
ANR	5127308	ExpressionStatement	free ( encstr )	442:3:10539:10552	5127189	1	True				
ANR	5127309	CallExpression	free ( encstr )		5127189	0					
ANR	5127310	Callee	free		5127189	0					
ANR	5127311	Identifier	free		5127189	0					
ANR	5127312	ArgumentList	encstr		5127189	1					
ANR	5127313	Argument	encstr		5127189	0					
ANR	5127314	Identifier	encstr		5127189	0					
ANR	5127315	ElseStatement	else		5127189	0					
ANR	5127316	IfStatement	if ( MUSTSEESTRUCT )		5127189	0					
ANR	5127317	Condition	MUSTSEESTRUCT	444:12:10570:10582	5127189	0	True				
ANR	5127318	Identifier	MUSTSEESTRUCT		5127189	0					
ANR	5127319	CompoundStatement		17:2:446:506	5127189	1					
ANR	5127320	IdentifierDeclStatement	"char * encstr = r_str_utf16_encode ( ( const char * ) buffer , - 1 ) ;"	445:2:10589:10649	5127189	0	True				
ANR	5127321	IdentifierDecl	"* encstr = r_str_utf16_encode ( ( const char * ) buffer , - 1 )"		5127189	0					
ANR	5127322	IdentifierDeclType	char *		5127189	0					
ANR	5127323	Identifier	encstr		5127189	1					
ANR	5127324	AssignmentExpression	"* encstr = r_str_utf16_encode ( ( const char * ) buffer , - 1 )"		5127189	2		=			
ANR	5127325	Identifier	encstr		5127189	0					
ANR	5127326	CallExpression	"r_str_utf16_encode ( ( const char * ) buffer , - 1 )"		5127189	1					
ANR	5127327	Callee	r_str_utf16_encode		5127189	0					
ANR	5127328	Identifier	r_str_utf16_encode		5127189	0					
ANR	5127329	ArgumentList	( const char * ) buffer		5127189	1					
ANR	5127330	Argument	( const char * ) buffer		5127189	0					
ANR	5127331	CastExpression	( const char * ) buffer		5127189	0					
ANR	5127332	CastTarget	const char *		5127189	0					
ANR	5127333	Identifier	buffer		5127189	1					
ANR	5127334	Argument	- 1		5127189	1					
ANR	5127335	UnaryOperationExpression	- 1		5127189	0					
ANR	5127336	UnaryOperator	-		5127189	0					
ANR	5127337	PrimaryExpression	1		5127189	1					
ANR	5127338	IfStatement	if ( encstr )		5127189	1					
ANR	5127339	Condition	encstr	446:6:10657:10662	5127189	0	True				
ANR	5127340	Identifier	encstr		5127189	0					
ANR	5127341	CompoundStatement		18:14:522:522	5127189	1					
ANR	5127342	ExpressionStatement	"p -> cb_printf ( ""\\""%s\\"""" , encstr )"	447:3:10670:10701	5127189	0	True				
ANR	5127343	CallExpression	"p -> cb_printf ( ""\\""%s\\"""" , encstr )"		5127189	0					
ANR	5127344	Callee	p -> cb_printf		5127189	0					
ANR	5127345	PtrMemberAccess	p -> cb_printf		5127189	0					
ANR	5127346	Identifier	p		5127189	0					
ANR	5127347	Identifier	cb_printf		5127189	1					
ANR	5127348	ArgumentList	"""\\""%s\\"""""		5127189	1					
ANR	5127349	Argument	"""\\""%s\\"""""		5127189	0					
ANR	5127350	PrimaryExpression	"""\\""%s\\"""""		5127189	0					
ANR	5127351	Argument	encstr		5127189	1					
ANR	5127352	Identifier	encstr		5127189	0					
ANR	5127353	ExpressionStatement	free ( encstr )	448:3:10706:10719	5127189	1	True				
ANR	5127354	CallExpression	free ( encstr )		5127189	0					
ANR	5127355	Callee	free		5127189	0					
ANR	5127356	Identifier	free		5127189	0					
ANR	5127357	ArgumentList	encstr		5127189	1					
ANR	5127358	Argument	encstr		5127189	0					
ANR	5127359	Identifier	encstr		5127189	0					
ANR	5127360	ElseStatement	else		5127189	0					
ANR	5127361	IfStatement	if ( MUSTSEE )		5127189	0					
ANR	5127362	Condition	MUSTSEE	450:12:10737:10743	5127189	0	True				
ANR	5127363	Identifier	MUSTSEE		5127189	0					
ANR	5127364	CompoundStatement		22:21:603:603	5127189	1					
ANR	5127365	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5127189	0					
ANR	5127366	Condition	! SEEVALUE && ! ISQUIET	451:6:10754:10774	5127189	0	True				
ANR	5127367	AndExpression	! SEEVALUE && ! ISQUIET		5127189	0		&&			
ANR	5127368	UnaryOperationExpression	! SEEVALUE		5127189	0					
ANR	5127369	UnaryOperator	!		5127189	0					
ANR	5127370	Identifier	SEEVALUE		5127189	1					
ANR	5127371	UnaryOperationExpression	! ISQUIET		5127189	1					
ANR	5127372	UnaryOperator	!		5127189	0					
ANR	5127373	Identifier	ISQUIET		5127189	1					
ANR	5127374	CompoundStatement		23:29:634:634	5127189	1					
ANR	5127375	Statement	p	452:3:10782:10782	5127189	0	True				
ANR	5127376	Statement	->	452:4:10783:10784	5127189	1	True				
ANR	5127377	Statement	cb_printf	452:6:10785:10793	5127189	2	True				
ANR	5127378	Statement	(	452:16:10795:10795	5127189	3	True				
ANR	5127379	Statement	"""0x%08"""	452:17:10796:10802	5127189	4	True				
ANR	5127380	Statement	PFMT64x	452:25:10804:10810	5127189	5	True				
ANR	5127381	Statement	""" = """	452:33:10812:10816	5127189	6	True				
ANR	5127382	Statement	","	452:38:10817:10817	5127189	7	True				
ANR	5127383	Statement	seeki	452:40:10819:10823	5127189	8	True				
ANR	5127384	Statement	)	452:45:10824:10824	5127189	9	True				
ANR	5127385	ExpressionStatement		452:46:10825:10825	5127189	10	True				
ANR	5127386	IfStatement	if ( ! SEEVALUE )		5127189	1					
ANR	5127387	Condition	! SEEVALUE	454:6:10837:10845	5127189	0	True				
ANR	5127388	UnaryOperationExpression	! SEEVALUE		5127189	0					
ANR	5127389	UnaryOperator	!		5127189	0					
ANR	5127390	Identifier	SEEVALUE		5127189	1					
ANR	5127391	CompoundStatement		26:17:705:705	5127189	1					
ANR	5127392	IfStatement	if ( ISQUIET )		5127189	0					
ANR	5127393	Condition	ISQUIET	455:7:10857:10863	5127189	0	True				
ANR	5127394	Identifier	ISQUIET		5127189	0					
ANR	5127395	CompoundStatement		27:16:723:723	5127189	1					
ANR	5127396	Statement	if	456:4:10872:10873	5127189	0	True				
ANR	5127397	Statement	(	456:7:10875:10875	5127189	1	True				
ANR	5127398	Statement	addr	456:8:10876:10879	5127189	2	True				
ANR	5127399	Statement	==	456:13:10881:10882	5127189	3	True				
ANR	5127400	Statement	0L	456:16:10884:10885	5127189	4	True				
ANR	5127401	Statement	L	456:18:10886:10886	5127189	5	True				
ANR	5127402	Statement	)	456:19:10887:10887	5127189	6	True				
ANR	5127403	CompoundStatement		28:21:746:746	5127189	7					
ANR	5127404	ExpressionStatement	"p -> cb_printf ( ""NULL"" )"	457:5:10896:10917	5127189	0	True				
ANR	5127405	CallExpression	"p -> cb_printf ( ""NULL"" )"		5127189	0					
ANR	5127406	Callee	p -> cb_printf		5127189	0					
ANR	5127407	PtrMemberAccess	p -> cb_printf		5127189	0					
ANR	5127408	Identifier	p		5127189	0					
ANR	5127409	Identifier	cb_printf		5127189	1					
ANR	5127410	ArgumentList	"""NULL"""		5127189	1					
ANR	5127411	Argument	"""NULL"""		5127189	0					
ANR	5127412	PrimaryExpression	"""NULL"""		5127189	0					
ANR	5127413	ElseStatement	else		5127189	0					
ANR	5127414	IfStatement	if ( addr == UT32_MAX || addr == UT64_MAX )		5127189	0					
ANR	5127415	Condition	addr == UT32_MAX || addr == UT64_MAX	458:15:10934:10969	5127189	0	True				
ANR	5127416	OrExpression	addr == UT32_MAX || addr == UT64_MAX		5127189	0		||			
ANR	5127417	EqualityExpression	addr == UT32_MAX		5127189	0		==			
ANR	5127418	Identifier	addr		5127189	0					
ANR	5127419	Identifier	UT32_MAX		5127189	1					
ANR	5127420	EqualityExpression	addr == UT64_MAX		5127189	1		==			
ANR	5127421	Identifier	addr		5127189	0					
ANR	5127422	Identifier	UT64_MAX		5127189	1					
ANR	5127423	CompoundStatement		30:53:829:829	5127189	1					
ANR	5127424	ExpressionStatement	"p -> cb_printf ( ""-1"" )"	459:5:10979:10998	5127189	0	True				
ANR	5127425	CallExpression	"p -> cb_printf ( ""-1"" )"		5127189	0					
ANR	5127426	Callee	p -> cb_printf		5127189	0					
ANR	5127427	PtrMemberAccess	p -> cb_printf		5127189	0					
ANR	5127428	Identifier	p		5127189	0					
ANR	5127429	Identifier	cb_printf		5127189	1					
ANR	5127430	ArgumentList	"""-1"""		5127189	1					
ANR	5127431	Argument	"""-1"""		5127189	0					
ANR	5127432	PrimaryExpression	"""-1"""		5127189	0					
ANR	5127433	ElseStatement	else		5127189	0					
ANR	5127434	CompoundStatement		32:11:868:868	5127189	0					
ANR	5127435	Statement	p	461:5:11018:11018	5127189	0	True				
ANR	5127436	Statement	->	461:6:11019:11020	5127189	1	True				
ANR	5127437	Statement	cb_printf	461:8:11021:11029	5127189	2	True				
ANR	5127438	Statement	(	461:18:11031:11031	5127189	3	True				
ANR	5127439	Statement	"""0x%08"""	461:19:11032:11038	5127189	4	True				
ANR	5127440	Statement	PFMT64x	461:27:11040:11046	5127189	5	True				
ANR	5127441	Statement	""" """	461:35:11048:11050	5127189	6	True				
ANR	5127442	Statement	","	461:38:11051:11051	5127189	7	True				
ANR	5127443	Statement	addr	461:40:11053:11056	5127189	8	True				
ANR	5127444	Statement	)	461:44:11057:11057	5127189	9	True				
ANR	5127445	ExpressionStatement		461:45:11058:11058	5127189	10	True				
ANR	5127446	ElseStatement	else		5127189	0					
ANR	5127447	CompoundStatement		35:10:933:933	5127189	0					
ANR	5127448	Statement	p	464:4:11082:11082	5127189	0	True				
ANR	5127449	Statement	->	464:5:11083:11084	5127189	1	True				
ANR	5127450	Statement	cb_printf	464:7:11085:11093	5127189	2	True				
ANR	5127451	Statement	(	464:17:11095:11095	5127189	3	True				
ANR	5127452	Statement	"""0x%08"""	464:18:11096:11102	5127189	4	True				
ANR	5127453	Statement	PFMT64x	464:26:11104:11110	5127189	5	True				
ANR	5127454	Statement	""" -> 0x%08"""	464:34:11112:11122	5127189	6	True				
ANR	5127455	Statement	PFMT64x	464:46:11124:11130	5127189	7	True				
ANR	5127456	Statement	""" """	464:54:11132:11134	5127189	8	True				
ANR	5127457	Statement	","	464:57:11135:11135	5127189	9	True				
ANR	5127458	Statement	seeki	464:59:11137:11141	5127189	10	True				
ANR	5127459	Statement	","	464:64:11142:11142	5127189	11	True				
ANR	5127460	Statement	addr	464:66:11144:11147	5127189	12	True				
ANR	5127461	Statement	)	464:70:11148:11148	5127189	13	True				
ANR	5127462	ExpressionStatement		464:71:11149:11149	5127189	14	True				
ANR	5127463	IfStatement	if ( res > 0 && buffer [ 0 ] != 0xff && buffer [ 1 ] != 0xff )		5127189	2					
ANR	5127464	Condition	res > 0 && buffer [ 0 ] != 0xff && buffer [ 1 ] != 0xff	467:6:11166:11214	5127189	0	True				
ANR	5127465	AndExpression	res > 0 && buffer [ 0 ] != 0xff && buffer [ 1 ] != 0xff		5127189	0		&&			
ANR	5127466	RelationalExpression	res > 0		5127189	0		>			
ANR	5127467	Identifier	res		5127189	0					
ANR	5127468	PrimaryExpression	0		5127189	1					
ANR	5127469	AndExpression	buffer [ 0 ] != 0xff && buffer [ 1 ] != 0xff		5127189	1		&&			
ANR	5127470	EqualityExpression	buffer [ 0 ] != 0xff		5127189	0		!=			
ANR	5127471	ArrayIndexing	buffer [ 0 ]		5127189	0					
ANR	5127472	Identifier	buffer		5127189	0					
ANR	5127473	PrimaryExpression	0		5127189	1					
ANR	5127474	PrimaryExpression	0xff		5127189	1					
ANR	5127475	EqualityExpression	buffer [ 1 ] != 0xff		5127189	1		!=			
ANR	5127476	ArrayIndexing	buffer [ 1 ]		5127189	0					
ANR	5127477	Identifier	buffer		5127189	0					
ANR	5127478	PrimaryExpression	1		5127189	1					
ANR	5127479	PrimaryExpression	0xff		5127189	1					
ANR	5127480	CompoundStatement		39:57:1074:1074	5127189	1					
ANR	5127481	ExpressionStatement	"p -> cb_printf ( ""\\""%s\\"""" , buffer )"	468:3:11222:11253	5127189	0	True				
ANR	5127482	CallExpression	"p -> cb_printf ( ""\\""%s\\"""" , buffer )"		5127189	0					
ANR	5127483	Callee	p -> cb_printf		5127189	0					
ANR	5127484	PtrMemberAccess	p -> cb_printf		5127189	0					
ANR	5127485	Identifier	p		5127189	0					
ANR	5127486	Identifier	cb_printf		5127189	1					
ANR	5127487	ArgumentList	"""\\""%s\\"""""		5127189	1					
ANR	5127488	Argument	"""\\""%s\\"""""		5127189	0					
ANR	5127489	PrimaryExpression	"""\\""%s\\"""""		5127189	0					
ANR	5127490	Argument	buffer		5127189	1					
ANR	5127491	Identifier	buffer		5127189	0					
ANR	5127492	ReturnStatement	return 0 ;	471:1:11263:11271	5127189	6	True				
ANR	5127493	PrimaryExpression	0		5127189	0					
ANR	5127494	ReturnType	static int		5127189	1					
ANR	5127495	Identifier	r_print_format_string		5127189	2					
ANR	5127496	ParameterList	"const RPrint * p , ut64 seeki , ut64 addr64 , ut64 addr , int is64 , int mode"		5127189	3					
ANR	5127497	Parameter	const RPrint * p	429:33:10069:10083	5127189	0	True				
ANR	5127498	ParameterType	const RPrint *		5127189	0					
ANR	5127499	Identifier	p		5127189	1					
ANR	5127500	Parameter	ut64 seeki	429:50:10086:10095	5127189	1	True				
ANR	5127501	ParameterType	ut64		5127189	0					
ANR	5127502	Identifier	seeki		5127189	1					
ANR	5127503	Parameter	ut64 addr64	429:62:10098:10108	5127189	2	True				
ANR	5127504	ParameterType	ut64		5127189	0					
ANR	5127505	Identifier	addr64		5127189	1					
ANR	5127506	Parameter	ut64 addr	429:75:10111:10119	5127189	3	True				
ANR	5127507	ParameterType	ut64		5127189	0					
ANR	5127508	Identifier	addr		5127189	1					
ANR	5127509	Parameter	int is64	429:86:10122:10129	5127189	4	True				
ANR	5127510	ParameterType	int		5127189	0					
ANR	5127511	Identifier	is64		5127189	1					
ANR	5127512	Parameter	int mode	429:96:10132:10139	5127189	5	True				
ANR	5127513	ParameterType	int		5127189	0					
ANR	5127514	Identifier	mode		5127189	1					
ANR	5127515	CFGEntryNode	ENTRY		5127189		True				
ANR	5127516	CFGExitNode	EXIT		5127189		True				
ANR	5127517	Symbol	UT32_MAX		5127189						
ANR	5127518	Symbol	res		5127189						
ANR	5127519	Symbol	encstr		5127189						
ANR	5127520	Symbol	* buffer		5127189						
ANR	5127521	Symbol	p -> iob . read_at		5127189						
ANR	5127522	Symbol	MUSTSEEJSON		5127189						
ANR	5127523	Symbol	MUSTSEESTRUCT		5127189						
ANR	5127524	Symbol	ISQUIET		5127189						
ANR	5127525	Symbol	r_str_utf16_encode		5127189						
ANR	5127526	Symbol	MUSTSEE		5127189						
ANR	5127527	Symbol	p -> iob . io		5127189						
ANR	5127528	Symbol	p		5127189						
ANR	5127529	Symbol	mode		5127189						
ANR	5127530	Symbol	p -> iob		5127189						
ANR	5127531	Symbol	at		5127189						
ANR	5127532	Symbol	seeki		5127189						
ANR	5127533	Symbol	SEEVALUE		5127189						
ANR	5127534	Symbol	addr64		5127189						
ANR	5127535	Symbol	is64		5127189						
ANR	5127536	Symbol	* p		5127189						
ANR	5127537	Symbol	buffer		5127189						
ANR	5127538	Symbol	addr		5127189						
ANR	5127539	Symbol	UT64_MAX		5127189						
ANR	5127540	Function	r_print_format_time	474:0:11276:13349							
ANR	5127541	FunctionDef	"r_print_format_time (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5127540	0					
ANR	5127542	CompoundStatement		475:61:11408:13349	5127540	0					
ANR	5127543	IdentifierDeclStatement	ut64 addr ;	476:1:11411:11420	5127540	0	True				
ANR	5127544	IdentifierDecl	addr		5127540	0					
ANR	5127545	IdentifierDeclType	ut64		5127540	0					
ANR	5127546	Identifier	addr		5127540	1					
ANR	5127547	IdentifierDeclStatement	struct tm timestruct ;	477:1:11423:11443	5127540	1	True				
ANR	5127548	IdentifierDecl	timestruct		5127540	0					
ANR	5127549	IdentifierDeclType	struct tm		5127540	0					
ANR	5127550	Identifier	timestruct		5127540	1					
ANR	5127551	IdentifierDeclStatement	int elem = - 1 ;	478:1:11446:11459	5127540	2	True				
ANR	5127552	IdentifierDecl	elem = - 1		5127540	0					
ANR	5127553	IdentifierDeclType	int		5127540	0					
ANR	5127554	Identifier	elem		5127540	1					
ANR	5127555	AssignmentExpression	elem = - 1		5127540	2		=			
ANR	5127556	Identifier	elem		5127540	0					
ANR	5127557	UnaryOperationExpression	- 1		5127540	1					
ANR	5127558	UnaryOperator	-		5127540	0					
ANR	5127559	PrimaryExpression	1		5127540	1					
ANR	5127560	IfStatement	if ( size >= ARRAYINDEX_COEF )		5127540	3					
ANR	5127561	Condition	size >= ARRAYINDEX_COEF	479:5:11466:11488	5127540	0	True				
ANR	5127562	RelationalExpression	size >= ARRAYINDEX_COEF		5127540	0		>=			
ANR	5127563	Identifier	size		5127540	0					
ANR	5127564	Identifier	ARRAYINDEX_COEF		5127540	1					
ANR	5127565	CompoundStatement		5:30:82:82	5127540	1					
ANR	5127566	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	480:2:11495:11524	5127540	0	True				
ANR	5127567	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5127540	0		=			
ANR	5127568	Identifier	elem		5127540	0					
ANR	5127569	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5127540	1		-			
ANR	5127570	MultiplicativeExpression	size / ARRAYINDEX_COEF		5127540	0		/			
ANR	5127571	Identifier	size		5127540	0					
ANR	5127572	Identifier	ARRAYINDEX_COEF		5127540	1					
ANR	5127573	PrimaryExpression	1		5127540	1					
ANR	5127574	ExpressionStatement	size %= ARRAYINDEX_COEF	481:2:11528:11551	5127540	1	True				
ANR	5127575	AssignmentExpression	size %= ARRAYINDEX_COEF		5127540	0		%=			
ANR	5127576	Identifier	size		5127540	0					
ANR	5127577	Identifier	ARRAYINDEX_COEF		5127540	1					
ANR	5127578	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	483:1:11557:11608	5127540	4	True				
ANR	5127579	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5127540	0					
ANR	5127580	Callee	updateAddr		5127540	0					
ANR	5127581	Identifier	updateAddr		5127540	0					
ANR	5127582	ArgumentList	buf + i		5127540	1					
ANR	5127583	Argument	buf + i		5127540	0					
ANR	5127584	AdditiveExpression	buf + i		5127540	0		+			
ANR	5127585	Identifier	buf		5127540	0					
ANR	5127586	Identifier	i		5127540	1					
ANR	5127587	Argument	size - i		5127540	1					
ANR	5127588	AdditiveExpression	size - i		5127540	0		-			
ANR	5127589	Identifier	size		5127540	0					
ANR	5127590	Identifier	i		5127540	1					
ANR	5127591	Argument	endian		5127540	2					
ANR	5127592	Identifier	endian		5127540	0					
ANR	5127593	Argument	& addr		5127540	3					
ANR	5127594	UnaryOperationExpression	& addr		5127540	0					
ANR	5127595	UnaryOperator	&		5127540	0					
ANR	5127596	Identifier	addr		5127540	1					
ANR	5127597	Argument	NULL		5127540	4					
ANR	5127598	Identifier	NULL		5127540	0					
ANR	5127599	IfStatement	if ( MUSTSET )		5127540	5					
ANR	5127600	Condition	MUSTSET	484:5:11615:11621	5127540	0	True				
ANR	5127601	Identifier	MUSTSET		5127540	0					
ANR	5127602	CompoundStatement		10:14:215:215	5127540	1					
ANR	5127603	Statement	p	485:2:11628:11628	5127540	0	True				
ANR	5127604	Statement	->	485:3:11629:11630	5127540	1	True				
ANR	5127605	Statement	cb_printf	485:5:11631:11639	5127540	2	True				
ANR	5127606	Statement	(	485:15:11641:11641	5127540	3	True				
ANR	5127607	Statement	"""wv4 %s @ 0x%08"""	485:16:11642:11657	5127540	4	True				
ANR	5127608	Statement	PFMT64x	485:32:11658:11664	5127540	5	True				
ANR	5127609	Statement	"""\\n"""	485:39:11665:11668	5127540	6	True				
ANR	5127610	Statement	","	485:43:11669:11669	5127540	7	True				
ANR	5127611	Statement	setval	485:45:11671:11676	5127540	8	True				
ANR	5127612	Statement	","	485:51:11677:11677	5127540	9	True				
ANR	5127613	Statement	seeki	485:53:11679:11683	5127540	10	True				
ANR	5127614	Statement	+	485:58:11684:11684	5127540	11	True				
ANR	5127615	Statement	(	485:59:11685:11685	5127540	12	True				
ANR	5127616	Statement	(	485:60:11686:11686	5127540	13	True				
ANR	5127617	Statement	elem	485:61:11687:11690	5127540	14	True				
ANR	5127618	Statement	>=	485:65:11691:11692	5127540	15	True				
ANR	5127619	Statement	0	485:67:11693:11693	5127540	16	True				
ANR	5127620	Statement	)	485:68:11694:11694	5127540	17	True				
ANR	5127621	Statement	?	485:69:11695:11695	5127540	18	True				
ANR	5127622	Statement	elem	485:70:11696:11699	5127540	19	True				
ANR	5127623	Statement	*	485:74:11700:11700	5127540	20	True				
ANR	5127624	Label	4 :	485:75:11701:11702	5127540	21	True				
ANR	5127625	Statement	0	485:77:11703:11703	5127540	22	True				
ANR	5127626	Statement	)	485:78:11704:11704	5127540	23	True				
ANR	5127627	Statement	)	485:79:11705:11705	5127540	24	True				
ANR	5127628	ExpressionStatement		485:80:11706:11706	5127540	25	True				
ANR	5127629	ElseStatement	else		5127540	0					
ANR	5127630	IfStatement	if ( MUSTSEE )		5127540	0					
ANR	5127631	Condition	MUSTSEE	486:12:11720:11726	5127540	0	True				
ANR	5127632	Identifier	MUSTSEE		5127540	0					
ANR	5127633	CompoundStatement		13:2:324:396	5127540	1					
ANR	5127634	IdentifierDeclStatement	"char * timestr = strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) ) ;"	487:2:11733:11805	5127540	0	True				
ANR	5127635	IdentifierDecl	"* timestr = strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) )"		5127540	0					
ANR	5127636	IdentifierDeclType	char *		5127540	0					
ANR	5127637	Identifier	timestr		5127540	1					
ANR	5127638	AssignmentExpression	"* timestr = strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) )"		5127540	2		=			
ANR	5127639	Identifier	timestr		5127540	0					
ANR	5127640	CallExpression	"strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) )"		5127540	1					
ANR	5127641	Callee	strdup		5127540	0					
ANR	5127642	Identifier	strdup		5127540	0					
ANR	5127643	ArgumentList	"asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) )"		5127540	1					
ANR	5127644	Argument	"asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) )"		5127540	0					
ANR	5127645	CallExpression	"asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) )"		5127540	0					
ANR	5127646	Callee	asctime		5127540	0					
ANR	5127647	Identifier	asctime		5127540	0					
ANR	5127648	ArgumentList	"gmtime_r ( ( time_t * ) & addr , & timestruct )"		5127540	1					
ANR	5127649	Argument	"gmtime_r ( ( time_t * ) & addr , & timestruct )"		5127540	0					
ANR	5127650	CallExpression	"gmtime_r ( ( time_t * ) & addr , & timestruct )"		5127540	0					
ANR	5127651	Callee	gmtime_r		5127540	0					
ANR	5127652	Identifier	gmtime_r		5127540	0					
ANR	5127653	ArgumentList	( time_t * ) & addr		5127540	1					
ANR	5127654	Argument	( time_t * ) & addr		5127540	0					
ANR	5127655	CastExpression	( time_t * ) & addr		5127540	0					
ANR	5127656	CastTarget	time_t *		5127540	0					
ANR	5127657	UnaryOperationExpression	& addr		5127540	1					
ANR	5127658	UnaryOperator	&		5127540	0					
ANR	5127659	Identifier	addr		5127540	1					
ANR	5127660	Argument	& timestruct		5127540	1					
ANR	5127661	UnaryOperationExpression	& timestruct		5127540	0					
ANR	5127662	UnaryOperator	&		5127540	0					
ANR	5127663	Identifier	timestruct		5127540	1					
ANR	5127664	ExpressionStatement	* ( timestr + 24 ) = '\\0'	488:2:11809:11829	5127540	1	True				
ANR	5127665	AssignmentExpression	* ( timestr + 24 ) = '\\0'		5127540	0		=			
ANR	5127666	UnaryOperationExpression	* ( timestr + 24 )		5127540	0					
ANR	5127667	UnaryOperator	*		5127540	0					
ANR	5127668	AdditiveExpression	timestr + 24		5127540	1		+			
ANR	5127669	Identifier	timestr		5127540	0					
ANR	5127670	PrimaryExpression	24		5127540	1					
ANR	5127671	PrimaryExpression	'\\0'		5127540	1					
ANR	5127672	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5127540	2					
ANR	5127673	Condition	! SEEVALUE && ! ISQUIET	489:6:11837:11857	5127540	0	True				
ANR	5127674	AndExpression	! SEEVALUE && ! ISQUIET		5127540	0		&&			
ANR	5127675	UnaryOperationExpression	! SEEVALUE		5127540	0					
ANR	5127676	UnaryOperator	!		5127540	0					
ANR	5127677	Identifier	SEEVALUE		5127540	1					
ANR	5127678	UnaryOperationExpression	! ISQUIET		5127540	1					
ANR	5127679	UnaryOperator	!		5127540	0					
ANR	5127680	Identifier	ISQUIET		5127540	1					
ANR	5127681	CompoundStatement		15:29:451:451	5127540	1					
ANR	5127682	Statement	p	490:3:11865:11865	5127540	0	True				
ANR	5127683	Statement	->	490:4:11866:11867	5127540	1	True				
ANR	5127684	Statement	cb_printf	490:6:11868:11876	5127540	2	True				
ANR	5127685	Statement	(	490:16:11878:11878	5127540	3	True				
ANR	5127686	Statement	"""0x%08"""	490:17:11879:11885	5127540	4	True				
ANR	5127687	Statement	PFMT64x	490:25:11887:11893	5127540	5	True				
ANR	5127688	Statement	""" = """	490:33:11895:11899	5127540	6	True				
ANR	5127689	Statement	","	490:38:11900:11900	5127540	7	True				
ANR	5127690	Statement	seeki	490:40:11902:11906	5127540	8	True				
ANR	5127691	Statement	+	490:46:11908:11908	5127540	9	True				
ANR	5127692	Statement	(	490:48:11910:11910	5127540	10	True				
ANR	5127693	Statement	(	490:49:11911:11911	5127540	11	True				
ANR	5127694	Statement	elem	490:50:11912:11915	5127540	12	True				
ANR	5127695	Statement	>=	490:55:11917:11918	5127540	13	True				
ANR	5127696	Statement	0	490:58:11920:11920	5127540	14	True				
ANR	5127697	Statement	)	490:59:11921:11921	5127540	15	True				
ANR	5127698	Statement	?	490:61:11923:11923	5127540	16	True				
ANR	5127699	Statement	elem	490:63:11925:11928	5127540	17	True				
ANR	5127700	Statement	*	490:68:11930:11930	5127540	18	True				
ANR	5127701	Label	4 :	490:70:11932:11934	5127540	19	True				
ANR	5127702	Statement	0	490:74:11936:11936	5127540	20	True				
ANR	5127703	Statement	)	490:75:11937:11937	5127540	21	True				
ANR	5127704	Statement	)	490:76:11938:11938	5127540	22	True				
ANR	5127705	ExpressionStatement		490:77:11939:11939	5127540	23	True				
ANR	5127706	IfStatement	if ( size == - 1 )		5127540	3					
ANR	5127707	Condition	size == - 1	492:6:11951:11958	5127540	0	True				
ANR	5127708	EqualityExpression	size == - 1		5127540	0		==			
ANR	5127709	Identifier	size		5127540	0					
ANR	5127710	UnaryOperationExpression	- 1		5127540	1					
ANR	5127711	UnaryOperator	-		5127540	0					
ANR	5127712	PrimaryExpression	1		5127540	1					
ANR	5127713	CompoundStatement		18:16:552:552	5127540	1					
ANR	5127714	ExpressionStatement	"p -> cb_printf ( ""%s"" , timestr )"	493:3:11966:11994	5127540	0	True				
ANR	5127715	CallExpression	"p -> cb_printf ( ""%s"" , timestr )"		5127540	0					
ANR	5127716	Callee	p -> cb_printf		5127540	0					
ANR	5127717	PtrMemberAccess	p -> cb_printf		5127540	0					
ANR	5127718	Identifier	p		5127540	0					
ANR	5127719	Identifier	cb_printf		5127540	1					
ANR	5127720	ArgumentList	"""%s"""		5127540	1					
ANR	5127721	Argument	"""%s"""		5127540	0					
ANR	5127722	PrimaryExpression	"""%s"""		5127540	0					
ANR	5127723	Argument	timestr		5127540	1					
ANR	5127724	Identifier	timestr		5127540	0					
ANR	5127725	ElseStatement	else		5127540	0					
ANR	5127726	CompoundStatement		20:9:596:596	5127540	0					
ANR	5127727	IfStatement	if ( ! SEEVALUE )		5127540	0					
ANR	5127728	Condition	! SEEVALUE	495:7:12014:12022	5127540	0	True				
ANR	5127729	UnaryOperationExpression	! SEEVALUE		5127540	0					
ANR	5127730	UnaryOperator	!		5127540	0					
ANR	5127731	Identifier	SEEVALUE		5127540	1					
ANR	5127732	CompoundStatement		21:18:616:616	5127540	1					
ANR	5127733	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	496:4:12031:12050	5127540	0	True				
ANR	5127734	CallExpression	"p -> cb_printf ( ""[ "" )"		5127540	0					
ANR	5127735	Callee	p -> cb_printf		5127540	0					
ANR	5127736	PtrMemberAccess	p -> cb_printf		5127540	0					
ANR	5127737	Identifier	p		5127540	0					
ANR	5127738	Identifier	cb_printf		5127540	1					
ANR	5127739	ArgumentList	"""[ """		5127540	1					
ANR	5127740	Argument	"""[ """		5127540	0					
ANR	5127741	PrimaryExpression	"""[ """		5127540	0					
ANR	5127742	WhileStatement	while ( size -- )		5127540	1					
ANR	5127743	Condition	size --	498:10:12067:12072	5127540	0	True				
ANR	5127744	PostIncDecOperationExpression	size --		5127540	0					
ANR	5127745	Identifier	size		5127540	0					
ANR	5127746	IncDec	--		5127540	1					
ANR	5127747	CompoundStatement		24:18:666:666	5127540	1					
ANR	5127748	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	499:4:12081:12132	5127540	0	True				
ANR	5127749	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5127540	0					
ANR	5127750	Callee	updateAddr		5127540	0					
ANR	5127751	Identifier	updateAddr		5127540	0					
ANR	5127752	ArgumentList	buf + i		5127540	1					
ANR	5127753	Argument	buf + i		5127540	0					
ANR	5127754	AdditiveExpression	buf + i		5127540	0		+			
ANR	5127755	Identifier	buf		5127540	0					
ANR	5127756	Identifier	i		5127540	1					
ANR	5127757	Argument	size - i		5127540	1					
ANR	5127758	AdditiveExpression	size - i		5127540	0		-			
ANR	5127759	Identifier	size		5127540	0					
ANR	5127760	Identifier	i		5127540	1					
ANR	5127761	Argument	endian		5127540	2					
ANR	5127762	Identifier	endian		5127540	0					
ANR	5127763	Argument	& addr		5127540	3					
ANR	5127764	UnaryOperationExpression	& addr		5127540	0					
ANR	5127765	UnaryOperator	&		5127540	0					
ANR	5127766	Identifier	addr		5127540	1					
ANR	5127767	Argument	NULL		5127540	4					
ANR	5127768	Identifier	NULL		5127540	0					
ANR	5127769	ExpressionStatement	free ( timestr )	500:4:12138:12152	5127540	1	True				
ANR	5127770	CallExpression	free ( timestr )		5127540	0					
ANR	5127771	Callee	free		5127540	0					
ANR	5127772	Identifier	free		5127540	0					
ANR	5127773	ArgumentList	timestr		5127540	1					
ANR	5127774	Argument	timestr		5127540	0					
ANR	5127775	Identifier	timestr		5127540	0					
ANR	5127776	ExpressionStatement	"timestr = strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) )"	501:4:12158:12225	5127540	2	True				
ANR	5127777	AssignmentExpression	"timestr = strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) )"		5127540	0		=			
ANR	5127778	Identifier	timestr		5127540	0					
ANR	5127779	CallExpression	"strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) )"		5127540	1					
ANR	5127780	Callee	strdup		5127540	0					
ANR	5127781	Identifier	strdup		5127540	0					
ANR	5127782	ArgumentList	"asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) )"		5127540	1					
ANR	5127783	Argument	"asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) )"		5127540	0					
ANR	5127784	CallExpression	"asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) )"		5127540	0					
ANR	5127785	Callee	asctime		5127540	0					
ANR	5127786	Identifier	asctime		5127540	0					
ANR	5127787	ArgumentList	"gmtime_r ( ( time_t * ) & addr , & timestruct )"		5127540	1					
ANR	5127788	Argument	"gmtime_r ( ( time_t * ) & addr , & timestruct )"		5127540	0					
ANR	5127789	CallExpression	"gmtime_r ( ( time_t * ) & addr , & timestruct )"		5127540	0					
ANR	5127790	Callee	gmtime_r		5127540	0					
ANR	5127791	Identifier	gmtime_r		5127540	0					
ANR	5127792	ArgumentList	( time_t * ) & addr		5127540	1					
ANR	5127793	Argument	( time_t * ) & addr		5127540	0					
ANR	5127794	CastExpression	( time_t * ) & addr		5127540	0					
ANR	5127795	CastTarget	time_t *		5127540	0					
ANR	5127796	UnaryOperationExpression	& addr		5127540	1					
ANR	5127797	UnaryOperator	&		5127540	0					
ANR	5127798	Identifier	addr		5127540	1					
ANR	5127799	Argument	& timestruct		5127540	1					
ANR	5127800	UnaryOperationExpression	& timestruct		5127540	0					
ANR	5127801	UnaryOperator	&		5127540	0					
ANR	5127802	Identifier	timestruct		5127540	1					
ANR	5127803	ExpressionStatement	* ( timestr + 24 ) = '\\0'	502:4:12231:12251	5127540	3	True				
ANR	5127804	AssignmentExpression	* ( timestr + 24 ) = '\\0'		5127540	0		=			
ANR	5127805	UnaryOperationExpression	* ( timestr + 24 )		5127540	0					
ANR	5127806	UnaryOperator	*		5127540	0					
ANR	5127807	AdditiveExpression	timestr + 24		5127540	1		+			
ANR	5127808	Identifier	timestr		5127540	0					
ANR	5127809	PrimaryExpression	24		5127540	1					
ANR	5127810	PrimaryExpression	'\\0'		5127540	1					
ANR	5127811	IfStatement	if ( elem == - 1 || elem == 0 )		5127540	4					
ANR	5127812	Condition	elem == - 1 || elem == 0	503:8:12261:12283	5127540	0	True				
ANR	5127813	OrExpression	elem == - 1 || elem == 0		5127540	0		||			
ANR	5127814	EqualityExpression	elem == - 1		5127540	0		==			
ANR	5127815	Identifier	elem		5127540	0					
ANR	5127816	UnaryOperationExpression	- 1		5127540	1					
ANR	5127817	UnaryOperator	-		5127540	0					
ANR	5127818	PrimaryExpression	1		5127540	1					
ANR	5127819	EqualityExpression	elem == 0		5127540	1		==			
ANR	5127820	Identifier	elem		5127540	0					
ANR	5127821	PrimaryExpression	0		5127540	1					
ANR	5127822	CompoundStatement		29:33:877:877	5127540	1					
ANR	5127823	ExpressionStatement	"p -> cb_printf ( ""%s"" , timestr )"	504:5:12293:12321	5127540	0	True				
ANR	5127824	CallExpression	"p -> cb_printf ( ""%s"" , timestr )"		5127540	0					
ANR	5127825	Callee	p -> cb_printf		5127540	0					
ANR	5127826	PtrMemberAccess	p -> cb_printf		5127540	0					
ANR	5127827	Identifier	p		5127540	0					
ANR	5127828	Identifier	cb_printf		5127540	1					
ANR	5127829	ArgumentList	"""%s"""		5127540	1					
ANR	5127830	Argument	"""%s"""		5127540	0					
ANR	5127831	PrimaryExpression	"""%s"""		5127540	0					
ANR	5127832	Argument	timestr		5127540	1					
ANR	5127833	Identifier	timestr		5127540	0					
ANR	5127834	IfStatement	if ( elem == 0 )		5127540	1					
ANR	5127835	Condition	elem == 0	505:9:12332:12340	5127540	0	True				
ANR	5127836	EqualityExpression	elem == 0		5127540	0		==			
ANR	5127837	Identifier	elem		5127540	0					
ANR	5127838	PrimaryExpression	0		5127540	1					
ANR	5127839	CompoundStatement		31:20:934:934	5127540	1					
ANR	5127840	ExpressionStatement	elem = - 2	506:6:12351:12360	5127540	0	True				
ANR	5127841	AssignmentExpression	elem = - 2		5127540	0		=			
ANR	5127842	Identifier	elem		5127540	0					
ANR	5127843	UnaryOperationExpression	- 2		5127540	1					
ANR	5127844	UnaryOperator	-		5127540	0					
ANR	5127845	PrimaryExpression	2		5127540	1					
ANR	5127846	IfStatement	if ( size != 0 && elem == - 1 )		5127540	5					
ANR	5127847	Condition	size != 0 && elem == - 1	509:8:12383:12405	5127540	0	True				
ANR	5127848	AndExpression	size != 0 && elem == - 1		5127540	0		&&			
ANR	5127849	EqualityExpression	size != 0		5127540	0		!=			
ANR	5127850	Identifier	size		5127540	0					
ANR	5127851	PrimaryExpression	0		5127540	1					
ANR	5127852	EqualityExpression	elem == - 1		5127540	1		==			
ANR	5127853	Identifier	elem		5127540	0					
ANR	5127854	UnaryOperationExpression	- 1		5127540	1					
ANR	5127855	UnaryOperator	-		5127540	0					
ANR	5127856	PrimaryExpression	1		5127540	1					
ANR	5127857	CompoundStatement		35:33:999:999	5127540	1					
ANR	5127858	ExpressionStatement	"p -> cb_printf ( "", "" )"	510:5:12415:12434	5127540	0	True				
ANR	5127859	CallExpression	"p -> cb_printf ( "", "" )"		5127540	0					
ANR	5127860	Callee	p -> cb_printf		5127540	0					
ANR	5127861	PtrMemberAccess	p -> cb_printf		5127540	0					
ANR	5127862	Identifier	p		5127540	0					
ANR	5127863	Identifier	cb_printf		5127540	1					
ANR	5127864	ArgumentList	""", """		5127540	1					
ANR	5127865	Argument	""", """		5127540	0					
ANR	5127866	PrimaryExpression	""", """		5127540	0					
ANR	5127867	IfStatement	if ( elem > - 1 )		5127540	6					
ANR	5127868	Condition	elem > - 1	512:8:12450:12458	5127540	0	True				
ANR	5127869	RelationalExpression	elem > - 1		5127540	0		>			
ANR	5127870	Identifier	elem		5127540	0					
ANR	5127871	UnaryOperationExpression	- 1		5127540	1					
ANR	5127872	UnaryOperator	-		5127540	0					
ANR	5127873	PrimaryExpression	1		5127540	1					
ANR	5127874	CompoundStatement		38:19:1052:1052	5127540	1					
ANR	5127875	ExpressionStatement	elem --	513:5:12468:12474	5127540	0	True				
ANR	5127876	PostIncDecOperationExpression	elem --		5127540	0					
ANR	5127877	Identifier	elem		5127540	0					
ANR	5127878	IncDec	--		5127540	1					
ANR	5127879	ExpressionStatement	i += 4	515:4:12486:12492	5127540	7	True				
ANR	5127880	AssignmentExpression	i += 4		5127540	0		+=			
ANR	5127881	Identifier	i		5127540	0					
ANR	5127882	PrimaryExpression	4		5127540	1					
ANR	5127883	IfStatement	if ( ! SEEVALUE )		5127540	2					
ANR	5127884	Condition	! SEEVALUE	517:7:12506:12514	5127540	0	True				
ANR	5127885	UnaryOperationExpression	! SEEVALUE		5127540	0					
ANR	5127886	UnaryOperator	!		5127540	0					
ANR	5127887	Identifier	SEEVALUE		5127540	1					
ANR	5127888	CompoundStatement		43:18:1108:1108	5127540	1					
ANR	5127889	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	518:4:12523:12542	5127540	0	True				
ANR	5127890	CallExpression	"p -> cb_printf ( "" ]"" )"		5127540	0					
ANR	5127891	Callee	p -> cb_printf		5127540	0					
ANR	5127892	PtrMemberAccess	p -> cb_printf		5127540	0					
ANR	5127893	Identifier	p		5127540	0					
ANR	5127894	Identifier	cb_printf		5127540	1					
ANR	5127895	ArgumentList	""" ]"""		5127540	1					
ANR	5127896	Argument	""" ]"""		5127540	0					
ANR	5127897	PrimaryExpression	""" ]"""		5127540	0					
ANR	5127898	ExpressionStatement	free ( timestr )	521:2:12555:12569	5127540	4	True				
ANR	5127899	CallExpression	free ( timestr )		5127540	0					
ANR	5127900	Callee	free		5127540	0					
ANR	5127901	Identifier	free		5127540	0					
ANR	5127902	ArgumentList	timestr		5127540	1					
ANR	5127903	Argument	timestr		5127540	0					
ANR	5127904	Identifier	timestr		5127540	0					
ANR	5127905	ElseStatement	else		5127540	0					
ANR	5127906	IfStatement	if ( MUSTSEEJSON || MUSTSEESTRUCT )		5127540	0					
ANR	5127907	Condition	MUSTSEEJSON || MUSTSEESTRUCT	522:12:12583:12610	5127540	0	True				
ANR	5127908	OrExpression	MUSTSEEJSON || MUSTSEESTRUCT		5127540	0		||			
ANR	5127909	Identifier	MUSTSEEJSON		5127540	0					
ANR	5127910	Identifier	MUSTSEESTRUCT		5127540	1					
ANR	5127911	CompoundStatement		49:2:1208:1281	5127540	1					
ANR	5127912	IdentifierDeclStatement	"char * timestr = strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) ) ;"	523:2:12617:12690	5127540	0	True				
ANR	5127913	IdentifierDecl	"* timestr = strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) )"		5127540	0					
ANR	5127914	IdentifierDeclType	char *		5127540	0					
ANR	5127915	Identifier	timestr		5127540	1					
ANR	5127916	AssignmentExpression	"* timestr = strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) )"		5127540	2		=			
ANR	5127917	Identifier	timestr		5127540	0					
ANR	5127918	CallExpression	"strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) )"		5127540	1					
ANR	5127919	Callee	strdup		5127540	0					
ANR	5127920	Identifier	strdup		5127540	0					
ANR	5127921	ArgumentList	"asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) )"		5127540	1					
ANR	5127922	Argument	"asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) )"		5127540	0					
ANR	5127923	CallExpression	"asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) )"		5127540	0					
ANR	5127924	Callee	asctime		5127540	0					
ANR	5127925	Identifier	asctime		5127540	0					
ANR	5127926	ArgumentList	"gmtime_r ( ( time_t * ) & addr , & timestruct )"		5127540	1					
ANR	5127927	Argument	"gmtime_r ( ( time_t * ) & addr , & timestruct )"		5127540	0					
ANR	5127928	CallExpression	"gmtime_r ( ( time_t * ) & addr , & timestruct )"		5127540	0					
ANR	5127929	Callee	gmtime_r		5127540	0					
ANR	5127930	Identifier	gmtime_r		5127540	0					
ANR	5127931	ArgumentList	( time_t * ) & addr		5127540	1					
ANR	5127932	Argument	( time_t * ) & addr		5127540	0					
ANR	5127933	CastExpression	( time_t * ) & addr		5127540	0					
ANR	5127934	CastTarget	time_t *		5127540	0					
ANR	5127935	UnaryOperationExpression	& addr		5127540	1					
ANR	5127936	UnaryOperator	&		5127540	0					
ANR	5127937	Identifier	addr		5127540	1					
ANR	5127938	Argument	& timestruct		5127540	1					
ANR	5127939	UnaryOperationExpression	& timestruct		5127540	0					
ANR	5127940	UnaryOperator	&		5127540	0					
ANR	5127941	Identifier	timestruct		5127540	1					
ANR	5127942	ExpressionStatement	* ( timestr + 24 ) = '\\0'	524:2:12694:12714	5127540	1	True				
ANR	5127943	AssignmentExpression	* ( timestr + 24 ) = '\\0'		5127540	0		=			
ANR	5127944	UnaryOperationExpression	* ( timestr + 24 )		5127540	0					
ANR	5127945	UnaryOperator	*		5127540	0					
ANR	5127946	AdditiveExpression	timestr + 24		5127540	1		+			
ANR	5127947	Identifier	timestr		5127540	0					
ANR	5127948	PrimaryExpression	24		5127540	1					
ANR	5127949	PrimaryExpression	'\\0'		5127540	1					
ANR	5127950	IfStatement	if ( size == - 1 )		5127540	2					
ANR	5127951	Condition	size == - 1	525:6:12722:12729	5127540	0	True				
ANR	5127952	EqualityExpression	size == - 1		5127540	0		==			
ANR	5127953	Identifier	size		5127540	0					
ANR	5127954	UnaryOperationExpression	- 1		5127540	1					
ANR	5127955	UnaryOperator	-		5127540	0					
ANR	5127956	PrimaryExpression	1		5127540	1					
ANR	5127957	CompoundStatement		51:16:1323:1323	5127540	1					
ANR	5127958	ExpressionStatement	"p -> cb_printf ( ""\\""%s\\"""" , timestr )"	526:3:12737:12769	5127540	0	True				
ANR	5127959	CallExpression	"p -> cb_printf ( ""\\""%s\\"""" , timestr )"		5127540	0					
ANR	5127960	Callee	p -> cb_printf		5127540	0					
ANR	5127961	PtrMemberAccess	p -> cb_printf		5127540	0					
ANR	5127962	Identifier	p		5127540	0					
ANR	5127963	Identifier	cb_printf		5127540	1					
ANR	5127964	ArgumentList	"""\\""%s\\"""""		5127540	1					
ANR	5127965	Argument	"""\\""%s\\"""""		5127540	0					
ANR	5127966	PrimaryExpression	"""\\""%s\\"""""		5127540	0					
ANR	5127967	Argument	timestr		5127540	1					
ANR	5127968	Identifier	timestr		5127540	0					
ANR	5127969	ElseStatement	else		5127540	0					
ANR	5127970	CompoundStatement		53:9:1371:1371	5127540	0					
ANR	5127971	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	528:3:12785:12804	5127540	0	True				
ANR	5127972	CallExpression	"p -> cb_printf ( ""[ "" )"		5127540	0					
ANR	5127973	Callee	p -> cb_printf		5127540	0					
ANR	5127974	PtrMemberAccess	p -> cb_printf		5127540	0					
ANR	5127975	Identifier	p		5127540	0					
ANR	5127976	Identifier	cb_printf		5127540	1					
ANR	5127977	ArgumentList	"""[ """		5127540	1					
ANR	5127978	Argument	"""[ """		5127540	0					
ANR	5127979	PrimaryExpression	"""[ """		5127540	0					
ANR	5127980	WhileStatement	while ( size -- )		5127540	1					
ANR	5127981	Condition	size --	529:10:12816:12821	5127540	0	True				
ANR	5127982	PostIncDecOperationExpression	size --		5127540	0					
ANR	5127983	Identifier	size		5127540	0					
ANR	5127984	IncDec	--		5127540	1					
ANR	5127985	CompoundStatement		55:18:1415:1415	5127540	1					
ANR	5127986	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	530:4:12830:12881	5127540	0	True				
ANR	5127987	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5127540	0					
ANR	5127988	Callee	updateAddr		5127540	0					
ANR	5127989	Identifier	updateAddr		5127540	0					
ANR	5127990	ArgumentList	buf + i		5127540	1					
ANR	5127991	Argument	buf + i		5127540	0					
ANR	5127992	AdditiveExpression	buf + i		5127540	0		+			
ANR	5127993	Identifier	buf		5127540	0					
ANR	5127994	Identifier	i		5127540	1					
ANR	5127995	Argument	size - i		5127540	1					
ANR	5127996	AdditiveExpression	size - i		5127540	0		-			
ANR	5127997	Identifier	size		5127540	0					
ANR	5127998	Identifier	i		5127540	1					
ANR	5127999	Argument	endian		5127540	2					
ANR	5128000	Identifier	endian		5127540	0					
ANR	5128001	Argument	& addr		5127540	3					
ANR	5128002	UnaryOperationExpression	& addr		5127540	0					
ANR	5128003	UnaryOperator	&		5127540	0					
ANR	5128004	Identifier	addr		5127540	1					
ANR	5128005	Argument	NULL		5127540	4					
ANR	5128006	Identifier	NULL		5127540	0					
ANR	5128007	ExpressionStatement	free ( timestr )	531:4:12887:12901	5127540	1	True				
ANR	5128008	CallExpression	free ( timestr )		5127540	0					
ANR	5128009	Callee	free		5127540	0					
ANR	5128010	Identifier	free		5127540	0					
ANR	5128011	ArgumentList	timestr		5127540	1					
ANR	5128012	Argument	timestr		5127540	0					
ANR	5128013	Identifier	timestr		5127540	0					
ANR	5128014	ExpressionStatement	"timestr = strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) )"	532:4:12907:12974	5127540	2	True				
ANR	5128015	AssignmentExpression	"timestr = strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) )"		5127540	0		=			
ANR	5128016	Identifier	timestr		5127540	0					
ANR	5128017	CallExpression	"strdup ( asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) ) )"		5127540	1					
ANR	5128018	Callee	strdup		5127540	0					
ANR	5128019	Identifier	strdup		5127540	0					
ANR	5128020	ArgumentList	"asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) )"		5127540	1					
ANR	5128021	Argument	"asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) )"		5127540	0					
ANR	5128022	CallExpression	"asctime ( gmtime_r ( ( time_t * ) & addr , & timestruct ) )"		5127540	0					
ANR	5128023	Callee	asctime		5127540	0					
ANR	5128024	Identifier	asctime		5127540	0					
ANR	5128025	ArgumentList	"gmtime_r ( ( time_t * ) & addr , & timestruct )"		5127540	1					
ANR	5128026	Argument	"gmtime_r ( ( time_t * ) & addr , & timestruct )"		5127540	0					
ANR	5128027	CallExpression	"gmtime_r ( ( time_t * ) & addr , & timestruct )"		5127540	0					
ANR	5128028	Callee	gmtime_r		5127540	0					
ANR	5128029	Identifier	gmtime_r		5127540	0					
ANR	5128030	ArgumentList	( time_t * ) & addr		5127540	1					
ANR	5128031	Argument	( time_t * ) & addr		5127540	0					
ANR	5128032	CastExpression	( time_t * ) & addr		5127540	0					
ANR	5128033	CastTarget	time_t *		5127540	0					
ANR	5128034	UnaryOperationExpression	& addr		5127540	1					
ANR	5128035	UnaryOperator	&		5127540	0					
ANR	5128036	Identifier	addr		5127540	1					
ANR	5128037	Argument	& timestruct		5127540	1					
ANR	5128038	UnaryOperationExpression	& timestruct		5127540	0					
ANR	5128039	UnaryOperator	&		5127540	0					
ANR	5128040	Identifier	timestruct		5127540	1					
ANR	5128041	ExpressionStatement	* ( timestr + 24 ) = '\\0'	533:4:12980:13000	5127540	3	True				
ANR	5128042	AssignmentExpression	* ( timestr + 24 ) = '\\0'		5127540	0		=			
ANR	5128043	UnaryOperationExpression	* ( timestr + 24 )		5127540	0					
ANR	5128044	UnaryOperator	*		5127540	0					
ANR	5128045	AdditiveExpression	timestr + 24		5127540	1		+			
ANR	5128046	Identifier	timestr		5127540	0					
ANR	5128047	PrimaryExpression	24		5127540	1					
ANR	5128048	PrimaryExpression	'\\0'		5127540	1					
ANR	5128049	IfStatement	if ( elem == - 1 || elem == 0 )		5127540	4					
ANR	5128050	Condition	elem == - 1 || elem == 0	534:8:13010:13032	5127540	0	True				
ANR	5128051	OrExpression	elem == - 1 || elem == 0		5127540	0		||			
ANR	5128052	EqualityExpression	elem == - 1		5127540	0		==			
ANR	5128053	Identifier	elem		5127540	0					
ANR	5128054	UnaryOperationExpression	- 1		5127540	1					
ANR	5128055	UnaryOperator	-		5127540	0					
ANR	5128056	PrimaryExpression	1		5127540	1					
ANR	5128057	EqualityExpression	elem == 0		5127540	1		==			
ANR	5128058	Identifier	elem		5127540	0					
ANR	5128059	PrimaryExpression	0		5127540	1					
ANR	5128060	CompoundStatement		60:33:1626:1626	5127540	1					
ANR	5128061	ExpressionStatement	"p -> cb_printf ( ""\\""%s\\"""" , timestr )"	535:5:13042:13074	5127540	0	True				
ANR	5128062	CallExpression	"p -> cb_printf ( ""\\""%s\\"""" , timestr )"		5127540	0					
ANR	5128063	Callee	p -> cb_printf		5127540	0					
ANR	5128064	PtrMemberAccess	p -> cb_printf		5127540	0					
ANR	5128065	Identifier	p		5127540	0					
ANR	5128066	Identifier	cb_printf		5127540	1					
ANR	5128067	ArgumentList	"""\\""%s\\"""""		5127540	1					
ANR	5128068	Argument	"""\\""%s\\"""""		5127540	0					
ANR	5128069	PrimaryExpression	"""\\""%s\\"""""		5127540	0					
ANR	5128070	Argument	timestr		5127540	1					
ANR	5128071	Identifier	timestr		5127540	0					
ANR	5128072	IfStatement	if ( elem == 0 )		5127540	1					
ANR	5128073	Condition	elem == 0	536:9:13085:13093	5127540	0	True				
ANR	5128074	EqualityExpression	elem == 0		5127540	0		==			
ANR	5128075	Identifier	elem		5127540	0					
ANR	5128076	PrimaryExpression	0		5127540	1					
ANR	5128077	CompoundStatement		62:20:1687:1687	5127540	1					
ANR	5128078	ExpressionStatement	elem = - 2	537:6:13104:13113	5127540	0	True				
ANR	5128079	AssignmentExpression	elem = - 2		5127540	0		=			
ANR	5128080	Identifier	elem		5127540	0					
ANR	5128081	UnaryOperationExpression	- 2		5127540	1					
ANR	5128082	UnaryOperator	-		5127540	0					
ANR	5128083	PrimaryExpression	2		5127540	1					
ANR	5128084	IfStatement	if ( size != 0 && elem == - 1 )		5127540	5					
ANR	5128085	Condition	size != 0 && elem == - 1	540:8:13136:13158	5127540	0	True				
ANR	5128086	AndExpression	size != 0 && elem == - 1		5127540	0		&&			
ANR	5128087	EqualityExpression	size != 0		5127540	0		!=			
ANR	5128088	Identifier	size		5127540	0					
ANR	5128089	PrimaryExpression	0		5127540	1					
ANR	5128090	EqualityExpression	elem == - 1		5127540	1		==			
ANR	5128091	Identifier	elem		5127540	0					
ANR	5128092	UnaryOperationExpression	- 1		5127540	1					
ANR	5128093	UnaryOperator	-		5127540	0					
ANR	5128094	PrimaryExpression	1		5127540	1					
ANR	5128095	CompoundStatement		66:33:1752:1752	5127540	1					
ANR	5128096	ExpressionStatement	"p -> cb_printf ( "", "" )"	541:5:13168:13187	5127540	0	True				
ANR	5128097	CallExpression	"p -> cb_printf ( "", "" )"		5127540	0					
ANR	5128098	Callee	p -> cb_printf		5127540	0					
ANR	5128099	PtrMemberAccess	p -> cb_printf		5127540	0					
ANR	5128100	Identifier	p		5127540	0					
ANR	5128101	Identifier	cb_printf		5127540	1					
ANR	5128102	ArgumentList	""", """		5127540	1					
ANR	5128103	Argument	""", """		5127540	0					
ANR	5128104	PrimaryExpression	""", """		5127540	0					
ANR	5128105	IfStatement	if ( elem > - 1 )		5127540	6					
ANR	5128106	Condition	elem > - 1	543:8:13203:13211	5127540	0	True				
ANR	5128107	RelationalExpression	elem > - 1		5127540	0		>			
ANR	5128108	Identifier	elem		5127540	0					
ANR	5128109	UnaryOperationExpression	- 1		5127540	1					
ANR	5128110	UnaryOperator	-		5127540	0					
ANR	5128111	PrimaryExpression	1		5127540	1					
ANR	5128112	CompoundStatement		69:19:1805:1805	5127540	1					
ANR	5128113	ExpressionStatement	elem --	544:5:13221:13227	5127540	0	True				
ANR	5128114	PostIncDecOperationExpression	elem --		5127540	0					
ANR	5128115	Identifier	elem		5127540	0					
ANR	5128116	IncDec	--		5127540	1					
ANR	5128117	ExpressionStatement	i += 4	546:4:13239:13245	5127540	7	True				
ANR	5128118	AssignmentExpression	i += 4		5127540	0		+=			
ANR	5128119	Identifier	i		5127540	0					
ANR	5128120	PrimaryExpression	4		5127540	1					
ANR	5128121	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	548:3:13255:13274	5127540	2	True				
ANR	5128122	CallExpression	"p -> cb_printf ( "" ]"" )"		5127540	0					
ANR	5128123	Callee	p -> cb_printf		5127540	0					
ANR	5128124	PtrMemberAccess	p -> cb_printf		5127540	0					
ANR	5128125	Identifier	p		5127540	0					
ANR	5128126	Identifier	cb_printf		5127540	1					
ANR	5128127	ArgumentList	""" ]"""		5127540	1					
ANR	5128128	Argument	""" ]"""		5127540	0					
ANR	5128129	PrimaryExpression	""" ]"""		5127540	0					
ANR	5128130	ExpressionStatement	free ( timestr )	550:2:13282:13296	5127540	3	True				
ANR	5128131	CallExpression	free ( timestr )		5127540	0					
ANR	5128132	Callee	free		5127540	0					
ANR	5128133	Identifier	free		5127540	0					
ANR	5128134	ArgumentList	timestr		5127540	1					
ANR	5128135	Argument	timestr		5127540	0					
ANR	5128136	Identifier	timestr		5127540	0					
ANR	5128137	IfStatement	if ( MUSTSEEJSON )		5127540	4					
ANR	5128138	Condition	MUSTSEEJSON	551:6:13304:13314	5127540	0	True				
ANR	5128139	Identifier	MUSTSEEJSON		5127540	0					
ANR	5128140	CompoundStatement		77:19:1908:1908	5127540	1					
ANR	5128141	ExpressionStatement	"p -> cb_printf ( ""}"" )"	552:3:13322:13340	5127540	0	True				
ANR	5128142	CallExpression	"p -> cb_printf ( ""}"" )"		5127540	0					
ANR	5128143	Callee	p -> cb_printf		5127540	0					
ANR	5128144	PtrMemberAccess	p -> cb_printf		5127540	0					
ANR	5128145	Identifier	p		5127540	0					
ANR	5128146	Identifier	cb_printf		5127540	1					
ANR	5128147	ArgumentList	"""}"""		5127540	1					
ANR	5128148	Argument	"""}"""		5127540	0					
ANR	5128149	PrimaryExpression	"""}"""		5127540	0					
ANR	5128150	ReturnType	static void		5127540	1					
ANR	5128151	Identifier	r_print_format_time		5127540	2					
ANR	5128152	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5127540	3					
ANR	5128153	Parameter	const RPrint * p	474:32:11308:11322	5127540	0	True				
ANR	5128154	ParameterType	const RPrint *		5127540	0					
ANR	5128155	Identifier	p		5127540	1					
ANR	5128156	Parameter	int endian	474:49:11325:11334	5127540	1	True				
ANR	5128157	ParameterType	int		5127540	0					
ANR	5128158	Identifier	endian		5127540	1					
ANR	5128159	Parameter	int mode	474:61:11337:11344	5127540	2	True				
ANR	5128160	ParameterType	int		5127540	0					
ANR	5128161	Identifier	mode		5127540	1					
ANR	5128162	Parameter	const char * setval	475:2:11349:11366	5127540	3	True				
ANR	5128163	ParameterType	const char *		5127540	0					
ANR	5128164	Identifier	setval		5127540	1					
ANR	5128165	Parameter	ut64 seeki	475:22:11369:11378	5127540	4	True				
ANR	5128166	ParameterType	ut64		5127540	0					
ANR	5128167	Identifier	seeki		5127540	1					
ANR	5128168	Parameter	ut8 * buf	475:34:11381:11388	5127540	5	True				
ANR	5128169	ParameterType	ut8 *		5127540	0					
ANR	5128170	Identifier	buf		5127540	1					
ANR	5128171	Parameter	int i	475:44:11391:11395	5127540	6	True				
ANR	5128172	ParameterType	int		5127540	0					
ANR	5128173	Identifier	i		5127540	1					
ANR	5128174	Parameter	int size	475:51:11398:11405	5127540	7	True				
ANR	5128175	ParameterType	int		5127540	0					
ANR	5128176	Identifier	size		5127540	1					
ANR	5128177	CFGEntryNode	ENTRY		5127540		True				
ANR	5128178	CFGExitNode	EXIT		5127540		True				
ANR	5128179	Symbol	timestruct		5127540						
ANR	5128180	Symbol	* timestr		5127540						
ANR	5128181	Symbol	& timestruct		5127540						
ANR	5128182	Symbol	ISQUIET		5127540						
ANR	5128183	Symbol	endian		5127540						
ANR	5128184	Symbol	MUSTSEE		5127540						
ANR	5128185	Symbol	mode		5127540						
ANR	5128186	Symbol	SEEVALUE		5127540						
ANR	5128187	Symbol	addr		5127540						
ANR	5128188	Symbol	MUSTSET		5127540						
ANR	5128189	Symbol	asctime		5127540						
ANR	5128190	Symbol	elem		5127540						
ANR	5128191	Symbol	& addr		5127540						
ANR	5128192	Symbol	NULL		5127540						
ANR	5128193	Symbol	MUSTSEEJSON		5127540						
ANR	5128194	Symbol	MUSTSEESTRUCT		5127540						
ANR	5128195	Symbol	i		5127540						
ANR	5128196	Symbol	gmtime_r		5127540						
ANR	5128197	Symbol	timestr		5127540						
ANR	5128198	Symbol	* ( timestr + 24 )		5127540						
ANR	5128199	Symbol	p		5127540						
ANR	5128200	Symbol	ARRAYINDEX_COEF		5127540						
ANR	5128201	Symbol	buf		5127540						
ANR	5128202	Symbol	size		5127540						
ANR	5128203	Symbol	seeki		5127540						
ANR	5128204	Symbol	strdup		5127540						
ANR	5128205	Symbol	setval		5127540						
ANR	5128206	Function	r_print_format_hex	558:0:13383:15269							
ANR	5128207	FunctionDef	"r_print_format_hex (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5128206	0					
ANR	5128208	CompoundStatement		559:61:13514:15269	5128206	0					
ANR	5128209	IdentifierDeclStatement	ut64 addr ;	560:1:13517:13526	5128206	0	True				
ANR	5128210	IdentifierDecl	addr		5128206	0					
ANR	5128211	IdentifierDeclType	ut64		5128206	0					
ANR	5128212	Identifier	addr		5128206	1					
ANR	5128213	IdentifierDeclStatement	int elem = - 1 ;	561:1:13529:13542	5128206	1	True				
ANR	5128214	IdentifierDecl	elem = - 1		5128206	0					
ANR	5128215	IdentifierDeclType	int		5128206	0					
ANR	5128216	Identifier	elem		5128206	1					
ANR	5128217	AssignmentExpression	elem = - 1		5128206	2		=			
ANR	5128218	Identifier	elem		5128206	0					
ANR	5128219	UnaryOperationExpression	- 1		5128206	1					
ANR	5128220	UnaryOperator	-		5128206	0					
ANR	5128221	PrimaryExpression	1		5128206	1					
ANR	5128222	IfStatement	if ( size >= ARRAYINDEX_COEF )		5128206	2					
ANR	5128223	Condition	size >= ARRAYINDEX_COEF	562:5:13549:13571	5128206	0	True				
ANR	5128224	RelationalExpression	size >= ARRAYINDEX_COEF		5128206	0		>=			
ANR	5128225	Identifier	size		5128206	0					
ANR	5128226	Identifier	ARRAYINDEX_COEF		5128206	1					
ANR	5128227	CompoundStatement		4:30:59:59	5128206	1					
ANR	5128228	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	563:2:13578:13607	5128206	0	True				
ANR	5128229	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5128206	0		=			
ANR	5128230	Identifier	elem		5128206	0					
ANR	5128231	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5128206	1		-			
ANR	5128232	MultiplicativeExpression	size / ARRAYINDEX_COEF		5128206	0		/			
ANR	5128233	Identifier	size		5128206	0					
ANR	5128234	Identifier	ARRAYINDEX_COEF		5128206	1					
ANR	5128235	PrimaryExpression	1		5128206	1					
ANR	5128236	ExpressionStatement	size %= ARRAYINDEX_COEF	564:2:13611:13634	5128206	1	True				
ANR	5128237	AssignmentExpression	size %= ARRAYINDEX_COEF		5128206	0		%=			
ANR	5128238	Identifier	size		5128206	0					
ANR	5128239	Identifier	ARRAYINDEX_COEF		5128206	1					
ANR	5128240	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	566:1:13640:13691	5128206	3	True				
ANR	5128241	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5128206	0					
ANR	5128242	Callee	updateAddr		5128206	0					
ANR	5128243	Identifier	updateAddr		5128206	0					
ANR	5128244	ArgumentList	buf + i		5128206	1					
ANR	5128245	Argument	buf + i		5128206	0					
ANR	5128246	AdditiveExpression	buf + i		5128206	0		+			
ANR	5128247	Identifier	buf		5128206	0					
ANR	5128248	Identifier	i		5128206	1					
ANR	5128249	Argument	size - i		5128206	1					
ANR	5128250	AdditiveExpression	size - i		5128206	0		-			
ANR	5128251	Identifier	size		5128206	0					
ANR	5128252	Identifier	i		5128206	1					
ANR	5128253	Argument	endian		5128206	2					
ANR	5128254	Identifier	endian		5128206	0					
ANR	5128255	Argument	& addr		5128206	3					
ANR	5128256	UnaryOperationExpression	& addr		5128206	0					
ANR	5128257	UnaryOperator	&		5128206	0					
ANR	5128258	Identifier	addr		5128206	1					
ANR	5128259	Argument	NULL		5128206	4					
ANR	5128260	Identifier	NULL		5128206	0					
ANR	5128261	IfStatement	if ( MUSTSET )		5128206	4					
ANR	5128262	Condition	MUSTSET	567:5:13698:13704	5128206	0	True				
ANR	5128263	Identifier	MUSTSET		5128206	0					
ANR	5128264	CompoundStatement		9:14:192:192	5128206	1					
ANR	5128265	Statement	p	568:2:13711:13711	5128206	0	True				
ANR	5128266	Statement	->	568:3:13712:13713	5128206	1	True				
ANR	5128267	Statement	cb_printf	568:5:13714:13722	5128206	2	True				
ANR	5128268	Statement	(	568:15:13724:13724	5128206	3	True				
ANR	5128269	Statement	"""wv4 %s @ 0x%08"""	568:16:13725:13740	5128206	4	True				
ANR	5128270	Statement	PFMT64x	568:32:13741:13747	5128206	5	True				
ANR	5128271	Statement	"""\\n"""	568:39:13748:13751	5128206	6	True				
ANR	5128272	Statement	","	568:43:13752:13752	5128206	7	True				
ANR	5128273	Statement	setval	568:45:13754:13759	5128206	8	True				
ANR	5128274	Statement	","	568:51:13760:13760	5128206	9	True				
ANR	5128275	Statement	seeki	568:53:13762:13766	5128206	10	True				
ANR	5128276	Statement	+	568:58:13767:13767	5128206	11	True				
ANR	5128277	Statement	(	568:59:13768:13768	5128206	12	True				
ANR	5128278	Statement	(	568:60:13769:13769	5128206	13	True				
ANR	5128279	Statement	elem	568:61:13770:13773	5128206	14	True				
ANR	5128280	Statement	>=	568:65:13774:13775	5128206	15	True				
ANR	5128281	Statement	0	568:67:13776:13776	5128206	16	True				
ANR	5128282	Statement	)	568:68:13777:13777	5128206	17	True				
ANR	5128283	Statement	?	568:69:13778:13778	5128206	18	True				
ANR	5128284	Statement	elem	568:70:13779:13782	5128206	19	True				
ANR	5128285	Statement	*	568:74:13783:13783	5128206	20	True				
ANR	5128286	Label	4 :	568:75:13784:13785	5128206	21	True				
ANR	5128287	Statement	0	568:77:13786:13786	5128206	22	True				
ANR	5128288	Statement	)	568:78:13787:13787	5128206	23	True				
ANR	5128289	Statement	)	568:79:13788:13788	5128206	24	True				
ANR	5128290	ExpressionStatement		568:80:13789:13789	5128206	25	True				
ANR	5128291	ElseStatement	else		5128206	0					
ANR	5128292	IfStatement	if ( ( mode & R_PRINT_DOT ) || MUSTSEESTRUCT )		5128206	0					
ANR	5128293	Condition	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT	569:12:13803:13839	5128206	0	True				
ANR	5128294	OrExpression	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT		5128206	0		||			
ANR	5128295	BitAndExpression	mode & R_PRINT_DOT		5128206	0		&			
ANR	5128296	Identifier	mode		5128206	0					
ANR	5128297	Identifier	R_PRINT_DOT		5128206	1					
ANR	5128298	Identifier	MUSTSEESTRUCT		5128206	1					
ANR	5128299	CompoundStatement		11:51:327:327	5128206	1					
ANR	5128300	Statement	p	570:2:13846:13846	5128206	0	True				
ANR	5128301	Statement	->	570:3:13847:13848	5128206	1	True				
ANR	5128302	Statement	cb_printf	570:5:13849:13857	5128206	2	True				
ANR	5128303	Statement	(	570:15:13859:13859	5128206	3	True				
ANR	5128304	Statement	"""%"""	570:16:13860:13862	5128206	4	True				
ANR	5128305	Statement	PFMT64d	570:19:13863:13869	5128206	5	True				
ANR	5128306	Statement	","	570:26:13870:13870	5128206	6	True				
ANR	5128307	Statement	addr	570:28:13872:13875	5128206	7	True				
ANR	5128308	Statement	)	570:32:13876:13876	5128206	8	True				
ANR	5128309	ExpressionStatement		570:33:13877:13877	5128206	9	True				
ANR	5128310	ElseStatement	else		5128206	0					
ANR	5128311	IfStatement	if ( MUSTSEE )		5128206	0					
ANR	5128312	Condition	MUSTSEE	571:12:13891:13897	5128206	0	True				
ANR	5128313	Identifier	MUSTSEE		5128206	0					
ANR	5128314	CompoundStatement		13:21:385:385	5128206	1					
ANR	5128315	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5128206	0					
ANR	5128316	Condition	! SEEVALUE && ! ISQUIET	572:6:13908:13928	5128206	0	True				
ANR	5128317	AndExpression	! SEEVALUE && ! ISQUIET		5128206	0		&&			
ANR	5128318	UnaryOperationExpression	! SEEVALUE		5128206	0					
ANR	5128319	UnaryOperator	!		5128206	0					
ANR	5128320	Identifier	SEEVALUE		5128206	1					
ANR	5128321	UnaryOperationExpression	! ISQUIET		5128206	1					
ANR	5128322	UnaryOperator	!		5128206	0					
ANR	5128323	Identifier	ISQUIET		5128206	1					
ANR	5128324	CompoundStatement		14:29:416:416	5128206	1					
ANR	5128325	Statement	p	573:3:13936:13936	5128206	0	True				
ANR	5128326	Statement	->	573:4:13937:13938	5128206	1	True				
ANR	5128327	Statement	cb_printf	573:6:13939:13947	5128206	2	True				
ANR	5128328	Statement	(	573:16:13949:13949	5128206	3	True				
ANR	5128329	Statement	"""0x%08"""	573:17:13950:13956	5128206	4	True				
ANR	5128330	Statement	PFMT64x	573:25:13958:13964	5128206	5	True				
ANR	5128331	Statement	""" = """	573:33:13966:13970	5128206	6	True				
ANR	5128332	Statement	","	573:38:13971:13971	5128206	7	True				
ANR	5128333	Statement	seeki	573:40:13973:13977	5128206	8	True				
ANR	5128334	Statement	+	573:46:13979:13979	5128206	9	True				
ANR	5128335	Statement	(	573:48:13981:13981	5128206	10	True				
ANR	5128336	Statement	(	573:49:13982:13982	5128206	11	True				
ANR	5128337	Statement	elem	573:50:13983:13986	5128206	12	True				
ANR	5128338	Statement	>=	573:55:13988:13989	5128206	13	True				
ANR	5128339	Statement	0	573:58:13991:13991	5128206	14	True				
ANR	5128340	Statement	)	573:59:13992:13992	5128206	15	True				
ANR	5128341	Statement	?	573:61:13994:13994	5128206	16	True				
ANR	5128342	Statement	elem	573:63:13996:13999	5128206	17	True				
ANR	5128343	Statement	*	573:68:14001:14001	5128206	18	True				
ANR	5128344	Label	4 :	573:70:14003:14005	5128206	19	True				
ANR	5128345	Statement	0	573:74:14007:14007	5128206	20	True				
ANR	5128346	Statement	)	573:75:14008:14008	5128206	21	True				
ANR	5128347	Statement	)	573:76:14009:14009	5128206	22	True				
ANR	5128348	ExpressionStatement		573:77:14010:14010	5128206	23	True				
ANR	5128349	IfStatement	if ( size == - 1 )		5128206	1					
ANR	5128350	Condition	size == - 1	575:6:14022:14031	5128206	0	True				
ANR	5128351	EqualityExpression	size == - 1		5128206	0		==			
ANR	5128352	Identifier	size		5128206	0					
ANR	5128353	UnaryOperationExpression	- 1		5128206	1					
ANR	5128354	UnaryOperator	-		5128206	0					
ANR	5128355	PrimaryExpression	1		5128206	1					
ANR	5128356	CompoundStatement		17:18:519:519	5128206	1					
ANR	5128357	IfStatement	if ( addr == UT64_MAX || addr == UT32_MAX )		5128206	0					
ANR	5128358	Condition	addr == UT64_MAX || addr == UT32_MAX	576:7:14043:14078	5128206	0	True				
ANR	5128359	OrExpression	addr == UT64_MAX || addr == UT32_MAX		5128206	0		||			
ANR	5128360	EqualityExpression	addr == UT64_MAX		5128206	0		==			
ANR	5128361	Identifier	addr		5128206	0					
ANR	5128362	Identifier	UT64_MAX		5128206	1					
ANR	5128363	EqualityExpression	addr == UT32_MAX		5128206	1		==			
ANR	5128364	Identifier	addr		5128206	0					
ANR	5128365	Identifier	UT32_MAX		5128206	1					
ANR	5128366	CompoundStatement		18:45:566:566	5128206	1					
ANR	5128367	ExpressionStatement	"p -> cb_printf ( ""-1"" )"	577:4:14087:14106	5128206	0	True				
ANR	5128368	CallExpression	"p -> cb_printf ( ""-1"" )"		5128206	0					
ANR	5128369	Callee	p -> cb_printf		5128206	0					
ANR	5128370	PtrMemberAccess	p -> cb_printf		5128206	0					
ANR	5128371	Identifier	p		5128206	0					
ANR	5128372	Identifier	cb_printf		5128206	1					
ANR	5128373	ArgumentList	"""-1"""		5128206	1					
ANR	5128374	Argument	"""-1"""		5128206	0					
ANR	5128375	PrimaryExpression	"""-1"""		5128206	0					
ANR	5128376	ElseStatement	else		5128206	0					
ANR	5128377	CompoundStatement		20:10:603:603	5128206	0					
ANR	5128378	Statement	p	579:4:14124:14124	5128206	0	True				
ANR	5128379	Statement	->	579:5:14125:14126	5128206	1	True				
ANR	5128380	Statement	cb_printf	579:7:14127:14135	5128206	2	True				
ANR	5128381	Statement	(	579:17:14137:14137	5128206	3	True				
ANR	5128382	Statement	"""%"""	579:18:14138:14140	5128206	4	True				
ANR	5128383	Statement	PFMT64d	579:21:14141:14147	5128206	5	True				
ANR	5128384	Statement	","	579:28:14148:14148	5128206	6	True				
ANR	5128385	Statement	addr	579:30:14150:14153	5128206	7	True				
ANR	5128386	Statement	)	579:34:14154:14154	5128206	8	True				
ANR	5128387	ExpressionStatement		579:35:14155:14155	5128206	9	True				
ANR	5128388	ElseStatement	else		5128206	0					
ANR	5128389	CompoundStatement		23:9:656:656	5128206	0					
ANR	5128390	IfStatement	if ( ! SEEVALUE )		5128206	0					
ANR	5128391	Condition	! SEEVALUE	582:7:14180:14188	5128206	0	True				
ANR	5128392	UnaryOperationExpression	! SEEVALUE		5128206	0					
ANR	5128393	UnaryOperator	!		5128206	0					
ANR	5128394	Identifier	SEEVALUE		5128206	1					
ANR	5128395	CompoundStatement		24:18:676:676	5128206	1					
ANR	5128396	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	583:4:14197:14216	5128206	0	True				
ANR	5128397	CallExpression	"p -> cb_printf ( ""[ "" )"		5128206	0					
ANR	5128398	Callee	p -> cb_printf		5128206	0					
ANR	5128399	PtrMemberAccess	p -> cb_printf		5128206	0					
ANR	5128400	Identifier	p		5128206	0					
ANR	5128401	Identifier	cb_printf		5128206	1					
ANR	5128402	ArgumentList	"""[ """		5128206	1					
ANR	5128403	Argument	"""[ """		5128206	0					
ANR	5128404	PrimaryExpression	"""[ """		5128206	0					
ANR	5128405	WhileStatement	while ( size -- )		5128206	1					
ANR	5128406	Condition	size --	585:10:14233:14238	5128206	0	True				
ANR	5128407	PostIncDecOperationExpression	size --		5128206	0					
ANR	5128408	Identifier	size		5128206	0					
ANR	5128409	IncDec	--		5128206	1					
ANR	5128410	CompoundStatement		27:18:726:726	5128206	1					
ANR	5128411	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	586:4:14247:14298	5128206	0	True				
ANR	5128412	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5128206	0					
ANR	5128413	Callee	updateAddr		5128206	0					
ANR	5128414	Identifier	updateAddr		5128206	0					
ANR	5128415	ArgumentList	buf + i		5128206	1					
ANR	5128416	Argument	buf + i		5128206	0					
ANR	5128417	AdditiveExpression	buf + i		5128206	0		+			
ANR	5128418	Identifier	buf		5128206	0					
ANR	5128419	Identifier	i		5128206	1					
ANR	5128420	Argument	size - i		5128206	1					
ANR	5128421	AdditiveExpression	size - i		5128206	0		-			
ANR	5128422	Identifier	size		5128206	0					
ANR	5128423	Identifier	i		5128206	1					
ANR	5128424	Argument	endian		5128206	2					
ANR	5128425	Identifier	endian		5128206	0					
ANR	5128426	Argument	& addr		5128206	3					
ANR	5128427	UnaryOperationExpression	& addr		5128206	0					
ANR	5128428	UnaryOperator	&		5128206	0					
ANR	5128429	Identifier	addr		5128206	1					
ANR	5128430	Argument	NULL		5128206	4					
ANR	5128431	Identifier	NULL		5128206	0					
ANR	5128432	IfStatement	if ( elem == - 1 || elem == 0 )		5128206	1					
ANR	5128433	Condition	elem == - 1 || elem == 0	587:8:14308:14330	5128206	0	True				
ANR	5128434	OrExpression	elem == - 1 || elem == 0		5128206	0		||			
ANR	5128435	EqualityExpression	elem == - 1		5128206	0		==			
ANR	5128436	Identifier	elem		5128206	0					
ANR	5128437	UnaryOperationExpression	- 1		5128206	1					
ANR	5128438	UnaryOperator	-		5128206	0					
ANR	5128439	PrimaryExpression	1		5128206	1					
ANR	5128440	EqualityExpression	elem == 0		5128206	1		==			
ANR	5128441	Identifier	elem		5128206	0					
ANR	5128442	PrimaryExpression	0		5128206	1					
ANR	5128443	CompoundStatement		29:33:818:818	5128206	1					
ANR	5128444	IfStatement	if ( ISQUIET )		5128206	0					
ANR	5128445	Condition	ISQUIET	588:9:14344:14350	5128206	0	True				
ANR	5128446	Identifier	ISQUIET		5128206	0					
ANR	5128447	CompoundStatement		30:18:838:838	5128206	1					
ANR	5128448	IfStatement	if ( addr == UT64_MAX || addr == UT32_MAX )		5128206	0					
ANR	5128449	Condition	addr == UT64_MAX || addr == UT32_MAX	589:10:14365:14400	5128206	0	True				
ANR	5128450	OrExpression	addr == UT64_MAX || addr == UT32_MAX		5128206	0		||			
ANR	5128451	EqualityExpression	addr == UT64_MAX		5128206	0		==			
ANR	5128452	Identifier	addr		5128206	0					
ANR	5128453	Identifier	UT64_MAX		5128206	1					
ANR	5128454	EqualityExpression	addr == UT32_MAX		5128206	1		==			
ANR	5128455	Identifier	addr		5128206	0					
ANR	5128456	Identifier	UT32_MAX		5128206	1					
ANR	5128457	CompoundStatement		31:48:888:888	5128206	1					
ANR	5128458	ExpressionStatement	"p -> cb_printf ( ""-1"" )"	590:7:14412:14431	5128206	0	True				
ANR	5128459	CallExpression	"p -> cb_printf ( ""-1"" )"		5128206	0					
ANR	5128460	Callee	p -> cb_printf		5128206	0					
ANR	5128461	PtrMemberAccess	p -> cb_printf		5128206	0					
ANR	5128462	Identifier	p		5128206	0					
ANR	5128463	Identifier	cb_printf		5128206	1					
ANR	5128464	ArgumentList	"""-1"""		5128206	1					
ANR	5128465	Argument	"""-1"""		5128206	0					
ANR	5128466	PrimaryExpression	"""-1"""		5128206	0					
ANR	5128467	ElseStatement	else		5128206	0					
ANR	5128468	CompoundStatement		33:13:931:931	5128206	0					
ANR	5128469	Statement	p	592:7:14455:14455	5128206	0	True				
ANR	5128470	Statement	->	592:8:14456:14457	5128206	1	True				
ANR	5128471	Statement	cb_printf	592:10:14458:14466	5128206	2	True				
ANR	5128472	Statement	(	592:20:14468:14468	5128206	3	True				
ANR	5128473	Statement	"""%"""	592:21:14469:14471	5128206	4	True				
ANR	5128474	Statement	PFMT64d	592:24:14472:14478	5128206	5	True				
ANR	5128475	Statement	","	592:31:14479:14479	5128206	6	True				
ANR	5128476	Statement	addr	592:33:14481:14484	5128206	7	True				
ANR	5128477	Statement	)	592:37:14485:14485	5128206	8	True				
ANR	5128478	ExpressionStatement		592:38:14486:14486	5128206	9	True				
ANR	5128479	ElseStatement	else		5128206	0					
ANR	5128480	CompoundStatement		36:12:993:993	5128206	0					
ANR	5128481	Statement	p	595:6:14516:14516	5128206	0	True				
ANR	5128482	Statement	->	595:7:14517:14518	5128206	1	True				
ANR	5128483	Statement	cb_printf	595:9:14519:14527	5128206	2	True				
ANR	5128484	Statement	(	595:19:14529:14529	5128206	3	True				
ANR	5128485	Statement	"""%"""	595:20:14530:14532	5128206	4	True				
ANR	5128486	Statement	PFMT64d	595:23:14533:14539	5128206	5	True				
ANR	5128487	Statement	","	595:30:14540:14540	5128206	6	True				
ANR	5128488	Statement	addr	595:32:14542:14545	5128206	7	True				
ANR	5128489	Statement	)	595:36:14546:14546	5128206	8	True				
ANR	5128490	ExpressionStatement		595:37:14547:14547	5128206	9	True				
ANR	5128491	IfStatement	if ( elem == 0 )		5128206	1					
ANR	5128492	Condition	elem == 0	597:9:14565:14573	5128206	0	True				
ANR	5128493	EqualityExpression	elem == 0		5128206	0		==			
ANR	5128494	Identifier	elem		5128206	0					
ANR	5128495	PrimaryExpression	0		5128206	1					
ANR	5128496	CompoundStatement		39:20:1061:1061	5128206	1					
ANR	5128497	ExpressionStatement	elem = - 2	598:6:14584:14593	5128206	0	True				
ANR	5128498	AssignmentExpression	elem = - 2		5128206	0		=			
ANR	5128499	Identifier	elem		5128206	0					
ANR	5128500	UnaryOperationExpression	- 2		5128206	1					
ANR	5128501	UnaryOperator	-		5128206	0					
ANR	5128502	PrimaryExpression	2		5128206	1					
ANR	5128503	IfStatement	if ( size != 0 && elem == - 1 )		5128206	2					
ANR	5128504	Condition	size != 0 && elem == - 1	601:8:14616:14638	5128206	0	True				
ANR	5128505	AndExpression	size != 0 && elem == - 1		5128206	0		&&			
ANR	5128506	EqualityExpression	size != 0		5128206	0		!=			
ANR	5128507	Identifier	size		5128206	0					
ANR	5128508	PrimaryExpression	0		5128206	1					
ANR	5128509	EqualityExpression	elem == - 1		5128206	1		==			
ANR	5128510	Identifier	elem		5128206	0					
ANR	5128511	UnaryOperationExpression	- 1		5128206	1					
ANR	5128512	UnaryOperator	-		5128206	0					
ANR	5128513	PrimaryExpression	1		5128206	1					
ANR	5128514	CompoundStatement		43:33:1126:1126	5128206	1					
ANR	5128515	ExpressionStatement	"p -> cb_printf ( "", "" )"	602:5:14648:14667	5128206	0	True				
ANR	5128516	CallExpression	"p -> cb_printf ( "", "" )"		5128206	0					
ANR	5128517	Callee	p -> cb_printf		5128206	0					
ANR	5128518	PtrMemberAccess	p -> cb_printf		5128206	0					
ANR	5128519	Identifier	p		5128206	0					
ANR	5128520	Identifier	cb_printf		5128206	1					
ANR	5128521	ArgumentList	""", """		5128206	1					
ANR	5128522	Argument	""", """		5128206	0					
ANR	5128523	PrimaryExpression	""", """		5128206	0					
ANR	5128524	IfStatement	if ( elem > - 1 )		5128206	3					
ANR	5128525	Condition	elem > - 1	604:8:14683:14691	5128206	0	True				
ANR	5128526	RelationalExpression	elem > - 1		5128206	0		>			
ANR	5128527	Identifier	elem		5128206	0					
ANR	5128528	UnaryOperationExpression	- 1		5128206	1					
ANR	5128529	UnaryOperator	-		5128206	0					
ANR	5128530	PrimaryExpression	1		5128206	1					
ANR	5128531	CompoundStatement		46:19:1179:1179	5128206	1					
ANR	5128532	ExpressionStatement	elem --	605:5:14701:14707	5128206	0	True				
ANR	5128533	PostIncDecOperationExpression	elem --		5128206	0					
ANR	5128534	Identifier	elem		5128206	0					
ANR	5128535	IncDec	--		5128206	1					
ANR	5128536	ExpressionStatement	i += 4	607:4:14719:14725	5128206	4	True				
ANR	5128537	AssignmentExpression	i += 4		5128206	0		+=			
ANR	5128538	Identifier	i		5128206	0					
ANR	5128539	PrimaryExpression	4		5128206	1					
ANR	5128540	IfStatement	if ( ! SEEVALUE )		5128206	2					
ANR	5128541	Condition	! SEEVALUE	609:7:14739:14747	5128206	0	True				
ANR	5128542	UnaryOperationExpression	! SEEVALUE		5128206	0					
ANR	5128543	UnaryOperator	!		5128206	0					
ANR	5128544	Identifier	SEEVALUE		5128206	1					
ANR	5128545	CompoundStatement		51:18:1235:1235	5128206	1					
ANR	5128546	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	610:4:14756:14775	5128206	0	True				
ANR	5128547	CallExpression	"p -> cb_printf ( "" ]"" )"		5128206	0					
ANR	5128548	Callee	p -> cb_printf		5128206	0					
ANR	5128549	PtrMemberAccess	p -> cb_printf		5128206	0					
ANR	5128550	Identifier	p		5128206	0					
ANR	5128551	Identifier	cb_printf		5128206	1					
ANR	5128552	ArgumentList	""" ]"""		5128206	1					
ANR	5128553	Argument	""" ]"""		5128206	0					
ANR	5128554	PrimaryExpression	""" ]"""		5128206	0					
ANR	5128555	ElseStatement	else		5128206	0					
ANR	5128556	IfStatement	if ( MUSTSEEJSON )		5128206	0					
ANR	5128557	Condition	MUSTSEEJSON	613:12:14798:14808	5128206	0	True				
ANR	5128558	Identifier	MUSTSEEJSON		5128206	0					
ANR	5128559	CompoundStatement		55:25:1296:1296	5128206	1					
ANR	5128560	IfStatement	if ( size == - 1 )		5128206	0					
ANR	5128561	Condition	size == - 1	614:6:14819:14828	5128206	0	True				
ANR	5128562	EqualityExpression	size == - 1		5128206	0		==			
ANR	5128563	Identifier	size		5128206	0					
ANR	5128564	UnaryOperationExpression	- 1		5128206	1					
ANR	5128565	UnaryOperator	-		5128206	0					
ANR	5128566	PrimaryExpression	1		5128206	1					
ANR	5128567	CompoundStatement		56:18:1316:1316	5128206	1					
ANR	5128568	ExpressionStatement	"p -> cb_printf ( ""%d"" , addr )"	615:3:14836:14861	5128206	0	True				
ANR	5128569	CallExpression	"p -> cb_printf ( ""%d"" , addr )"		5128206	0					
ANR	5128570	Callee	p -> cb_printf		5128206	0					
ANR	5128571	PtrMemberAccess	p -> cb_printf		5128206	0					
ANR	5128572	Identifier	p		5128206	0					
ANR	5128573	Identifier	cb_printf		5128206	1					
ANR	5128574	ArgumentList	"""%d"""		5128206	1					
ANR	5128575	Argument	"""%d"""		5128206	0					
ANR	5128576	PrimaryExpression	"""%d"""		5128206	0					
ANR	5128577	Argument	addr		5128206	1					
ANR	5128578	Identifier	addr		5128206	0					
ANR	5128579	ElseStatement	else		5128206	0					
ANR	5128580	CompoundStatement		58:9:1357:1357	5128206	0					
ANR	5128581	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	617:3:14877:14896	5128206	0	True				
ANR	5128582	CallExpression	"p -> cb_printf ( ""[ "" )"		5128206	0					
ANR	5128583	Callee	p -> cb_printf		5128206	0					
ANR	5128584	PtrMemberAccess	p -> cb_printf		5128206	0					
ANR	5128585	Identifier	p		5128206	0					
ANR	5128586	Identifier	cb_printf		5128206	1					
ANR	5128587	ArgumentList	"""[ """		5128206	1					
ANR	5128588	Argument	"""[ """		5128206	0					
ANR	5128589	PrimaryExpression	"""[ """		5128206	0					
ANR	5128590	WhileStatement	while ( size -- )		5128206	1					
ANR	5128591	Condition	size --	618:10:14908:14913	5128206	0	True				
ANR	5128592	PostIncDecOperationExpression	size --		5128206	0					
ANR	5128593	Identifier	size		5128206	0					
ANR	5128594	IncDec	--		5128206	1					
ANR	5128595	CompoundStatement		60:18:1401:1401	5128206	1					
ANR	5128596	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	619:4:14922:14973	5128206	0	True				
ANR	5128597	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5128206	0					
ANR	5128598	Callee	updateAddr		5128206	0					
ANR	5128599	Identifier	updateAddr		5128206	0					
ANR	5128600	ArgumentList	buf + i		5128206	1					
ANR	5128601	Argument	buf + i		5128206	0					
ANR	5128602	AdditiveExpression	buf + i		5128206	0		+			
ANR	5128603	Identifier	buf		5128206	0					
ANR	5128604	Identifier	i		5128206	1					
ANR	5128605	Argument	size - i		5128206	1					
ANR	5128606	AdditiveExpression	size - i		5128206	0		-			
ANR	5128607	Identifier	size		5128206	0					
ANR	5128608	Identifier	i		5128206	1					
ANR	5128609	Argument	endian		5128206	2					
ANR	5128610	Identifier	endian		5128206	0					
ANR	5128611	Argument	& addr		5128206	3					
ANR	5128612	UnaryOperationExpression	& addr		5128206	0					
ANR	5128613	UnaryOperator	&		5128206	0					
ANR	5128614	Identifier	addr		5128206	1					
ANR	5128615	Argument	NULL		5128206	4					
ANR	5128616	Identifier	NULL		5128206	0					
ANR	5128617	IfStatement	if ( elem == - 1 || elem == 0 )		5128206	1					
ANR	5128618	Condition	elem == - 1 || elem == 0	620:8:14983:15005	5128206	0	True				
ANR	5128619	OrExpression	elem == - 1 || elem == 0		5128206	0		||			
ANR	5128620	EqualityExpression	elem == - 1		5128206	0		==			
ANR	5128621	Identifier	elem		5128206	0					
ANR	5128622	UnaryOperationExpression	- 1		5128206	1					
ANR	5128623	UnaryOperator	-		5128206	0					
ANR	5128624	PrimaryExpression	1		5128206	1					
ANR	5128625	EqualityExpression	elem == 0		5128206	1		==			
ANR	5128626	Identifier	elem		5128206	0					
ANR	5128627	PrimaryExpression	0		5128206	1					
ANR	5128628	CompoundStatement		62:33:1493:1493	5128206	1					
ANR	5128629	ExpressionStatement	"p -> cb_printf ( ""%d"" , addr )"	621:5:15015:15040	5128206	0	True				
ANR	5128630	CallExpression	"p -> cb_printf ( ""%d"" , addr )"		5128206	0					
ANR	5128631	Callee	p -> cb_printf		5128206	0					
ANR	5128632	PtrMemberAccess	p -> cb_printf		5128206	0					
ANR	5128633	Identifier	p		5128206	0					
ANR	5128634	Identifier	cb_printf		5128206	1					
ANR	5128635	ArgumentList	"""%d"""		5128206	1					
ANR	5128636	Argument	"""%d"""		5128206	0					
ANR	5128637	PrimaryExpression	"""%d"""		5128206	0					
ANR	5128638	Argument	addr		5128206	1					
ANR	5128639	Identifier	addr		5128206	0					
ANR	5128640	IfStatement	if ( elem == 0 )		5128206	1					
ANR	5128641	Condition	elem == 0	622:9:15051:15059	5128206	0	True				
ANR	5128642	EqualityExpression	elem == 0		5128206	0		==			
ANR	5128643	Identifier	elem		5128206	0					
ANR	5128644	PrimaryExpression	0		5128206	1					
ANR	5128645	CompoundStatement		64:20:1547:1547	5128206	1					
ANR	5128646	ExpressionStatement	elem = - 2	623:6:15070:15079	5128206	0	True				
ANR	5128647	AssignmentExpression	elem = - 2		5128206	0		=			
ANR	5128648	Identifier	elem		5128206	0					
ANR	5128649	UnaryOperationExpression	- 2		5128206	1					
ANR	5128650	UnaryOperator	-		5128206	0					
ANR	5128651	PrimaryExpression	2		5128206	1					
ANR	5128652	IfStatement	if ( size != 0 && elem == - 1 )		5128206	2					
ANR	5128653	Condition	size != 0 && elem == - 1	626:8:15102:15124	5128206	0	True				
ANR	5128654	AndExpression	size != 0 && elem == - 1		5128206	0		&&			
ANR	5128655	EqualityExpression	size != 0		5128206	0		!=			
ANR	5128656	Identifier	size		5128206	0					
ANR	5128657	PrimaryExpression	0		5128206	1					
ANR	5128658	EqualityExpression	elem == - 1		5128206	1		==			
ANR	5128659	Identifier	elem		5128206	0					
ANR	5128660	UnaryOperationExpression	- 1		5128206	1					
ANR	5128661	UnaryOperator	-		5128206	0					
ANR	5128662	PrimaryExpression	1		5128206	1					
ANR	5128663	CompoundStatement		68:33:1612:1612	5128206	1					
ANR	5128664	ExpressionStatement	"p -> cb_printf ( "", "" )"	627:5:15134:15153	5128206	0	True				
ANR	5128665	CallExpression	"p -> cb_printf ( "", "" )"		5128206	0					
ANR	5128666	Callee	p -> cb_printf		5128206	0					
ANR	5128667	PtrMemberAccess	p -> cb_printf		5128206	0					
ANR	5128668	Identifier	p		5128206	0					
ANR	5128669	Identifier	cb_printf		5128206	1					
ANR	5128670	ArgumentList	""", """		5128206	1					
ANR	5128671	Argument	""", """		5128206	0					
ANR	5128672	PrimaryExpression	""", """		5128206	0					
ANR	5128673	IfStatement	if ( elem > - 1 )		5128206	3					
ANR	5128674	Condition	elem > - 1	629:8:15169:15177	5128206	0	True				
ANR	5128675	RelationalExpression	elem > - 1		5128206	0		>			
ANR	5128676	Identifier	elem		5128206	0					
ANR	5128677	UnaryOperationExpression	- 1		5128206	1					
ANR	5128678	UnaryOperator	-		5128206	0					
ANR	5128679	PrimaryExpression	1		5128206	1					
ANR	5128680	CompoundStatement		71:19:1665:1665	5128206	1					
ANR	5128681	ExpressionStatement	elem --	630:5:15187:15193	5128206	0	True				
ANR	5128682	PostIncDecOperationExpression	elem --		5128206	0					
ANR	5128683	Identifier	elem		5128206	0					
ANR	5128684	IncDec	--		5128206	1					
ANR	5128685	ExpressionStatement	i += 4	632:4:15205:15209	5128206	4	True				
ANR	5128686	AssignmentExpression	i += 4		5128206	0		+=			
ANR	5128687	Identifier	i		5128206	0					
ANR	5128688	PrimaryExpression	4		5128206	1					
ANR	5128689	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	634:3:15219:15238	5128206	2	True				
ANR	5128690	CallExpression	"p -> cb_printf ( "" ]"" )"		5128206	0					
ANR	5128691	Callee	p -> cb_printf		5128206	0					
ANR	5128692	PtrMemberAccess	p -> cb_printf		5128206	0					
ANR	5128693	Identifier	p		5128206	0					
ANR	5128694	Identifier	cb_printf		5128206	1					
ANR	5128695	ArgumentList	""" ]"""		5128206	1					
ANR	5128696	Argument	""" ]"""		5128206	0					
ANR	5128697	PrimaryExpression	""" ]"""		5128206	0					
ANR	5128698	ExpressionStatement	"p -> cb_printf ( ""}"" )"	636:2:15246:15264	5128206	1	True				
ANR	5128699	CallExpression	"p -> cb_printf ( ""}"" )"		5128206	0					
ANR	5128700	Callee	p -> cb_printf		5128206	0					
ANR	5128701	PtrMemberAccess	p -> cb_printf		5128206	0					
ANR	5128702	Identifier	p		5128206	0					
ANR	5128703	Identifier	cb_printf		5128206	1					
ANR	5128704	ArgumentList	"""}"""		5128206	1					
ANR	5128705	Argument	"""}"""		5128206	0					
ANR	5128706	PrimaryExpression	"""}"""		5128206	0					
ANR	5128707	ReturnType	static void		5128206	1					
ANR	5128708	Identifier	r_print_format_hex		5128206	2					
ANR	5128709	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5128206	3					
ANR	5128710	Parameter	const RPrint * p	558:31:13414:13428	5128206	0	True				
ANR	5128711	ParameterType	const RPrint *		5128206	0					
ANR	5128712	Identifier	p		5128206	1					
ANR	5128713	Parameter	int endian	558:48:13431:13440	5128206	1	True				
ANR	5128714	ParameterType	int		5128206	0					
ANR	5128715	Identifier	endian		5128206	1					
ANR	5128716	Parameter	int mode	558:60:13443:13450	5128206	2	True				
ANR	5128717	ParameterType	int		5128206	0					
ANR	5128718	Identifier	mode		5128206	1					
ANR	5128719	Parameter	const char * setval	559:2:13455:13472	5128206	3	True				
ANR	5128720	ParameterType	const char *		5128206	0					
ANR	5128721	Identifier	setval		5128206	1					
ANR	5128722	Parameter	ut64 seeki	559:22:13475:13484	5128206	4	True				
ANR	5128723	ParameterType	ut64		5128206	0					
ANR	5128724	Identifier	seeki		5128206	1					
ANR	5128725	Parameter	ut8 * buf	559:34:13487:13494	5128206	5	True				
ANR	5128726	ParameterType	ut8 *		5128206	0					
ANR	5128727	Identifier	buf		5128206	1					
ANR	5128728	Parameter	int i	559:44:13497:13501	5128206	6	True				
ANR	5128729	ParameterType	int		5128206	0					
ANR	5128730	Identifier	i		5128206	1					
ANR	5128731	Parameter	int size	559:51:13504:13511	5128206	7	True				
ANR	5128732	ParameterType	int		5128206	0					
ANR	5128733	Identifier	size		5128206	1					
ANR	5128734	CFGEntryNode	ENTRY		5128206		True				
ANR	5128735	CFGExitNode	EXIT		5128206		True				
ANR	5128736	Symbol	elem		5128206						
ANR	5128737	Symbol	UT32_MAX		5128206						
ANR	5128738	Symbol	NULL		5128206						
ANR	5128739	Symbol	& addr		5128206						
ANR	5128740	Symbol	MUSTSEEJSON		5128206						
ANR	5128741	Symbol	MUSTSEESTRUCT		5128206						
ANR	5128742	Symbol	i		5128206						
ANR	5128743	Symbol	ISQUIET		5128206						
ANR	5128744	Symbol	endian		5128206						
ANR	5128745	Symbol	MUSTSEE		5128206						
ANR	5128746	Symbol	p		5128206						
ANR	5128747	Symbol	mode		5128206						
ANR	5128748	Symbol	ARRAYINDEX_COEF		5128206						
ANR	5128749	Symbol	buf		5128206						
ANR	5128750	Symbol	size		5128206						
ANR	5128751	Symbol	seeki		5128206						
ANR	5128752	Symbol	SEEVALUE		5128206						
ANR	5128753	Symbol	R_PRINT_DOT		5128206						
ANR	5128754	Symbol	setval		5128206						
ANR	5128755	Symbol	addr		5128206						
ANR	5128756	Symbol	UT64_MAX		5128206						
ANR	5128757	Symbol	MUSTSET		5128206						
ANR	5128758	Function	r_print_format_int	640:0:15272:16897							
ANR	5128759	FunctionDef	"r_print_format_int (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5128758	0					
ANR	5128760	CompoundStatement		641:61:15403:16897	5128758	0					
ANR	5128761	IdentifierDeclStatement	ut64 addr ;	642:1:15406:15415	5128758	0	True				
ANR	5128762	IdentifierDecl	addr		5128758	0					
ANR	5128763	IdentifierDeclType	ut64		5128758	0					
ANR	5128764	Identifier	addr		5128758	1					
ANR	5128765	IdentifierDeclStatement	int elem = - 1 ;	643:1:15418:15431	5128758	1	True				
ANR	5128766	IdentifierDecl	elem = - 1		5128758	0					
ANR	5128767	IdentifierDeclType	int		5128758	0					
ANR	5128768	Identifier	elem		5128758	1					
ANR	5128769	AssignmentExpression	elem = - 1		5128758	2		=			
ANR	5128770	Identifier	elem		5128758	0					
ANR	5128771	UnaryOperationExpression	- 1		5128758	1					
ANR	5128772	UnaryOperator	-		5128758	0					
ANR	5128773	PrimaryExpression	1		5128758	1					
ANR	5128774	IfStatement	if ( size >= ARRAYINDEX_COEF )		5128758	2					
ANR	5128775	Condition	size >= ARRAYINDEX_COEF	644:5:15438:15460	5128758	0	True				
ANR	5128776	RelationalExpression	size >= ARRAYINDEX_COEF		5128758	0		>=			
ANR	5128777	Identifier	size		5128758	0					
ANR	5128778	Identifier	ARRAYINDEX_COEF		5128758	1					
ANR	5128779	CompoundStatement		4:30:59:59	5128758	1					
ANR	5128780	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	645:2:15467:15496	5128758	0	True				
ANR	5128781	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5128758	0		=			
ANR	5128782	Identifier	elem		5128758	0					
ANR	5128783	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5128758	1		-			
ANR	5128784	MultiplicativeExpression	size / ARRAYINDEX_COEF		5128758	0		/			
ANR	5128785	Identifier	size		5128758	0					
ANR	5128786	Identifier	ARRAYINDEX_COEF		5128758	1					
ANR	5128787	PrimaryExpression	1		5128758	1					
ANR	5128788	ExpressionStatement	size %= ARRAYINDEX_COEF	646:2:15500:15523	5128758	1	True				
ANR	5128789	AssignmentExpression	size %= ARRAYINDEX_COEF		5128758	0		%=			
ANR	5128790	Identifier	size		5128758	0					
ANR	5128791	Identifier	ARRAYINDEX_COEF		5128758	1					
ANR	5128792	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	648:1:15529:15580	5128758	3	True				
ANR	5128793	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5128758	0					
ANR	5128794	Callee	updateAddr		5128758	0					
ANR	5128795	Identifier	updateAddr		5128758	0					
ANR	5128796	ArgumentList	buf + i		5128758	1					
ANR	5128797	Argument	buf + i		5128758	0					
ANR	5128798	AdditiveExpression	buf + i		5128758	0		+			
ANR	5128799	Identifier	buf		5128758	0					
ANR	5128800	Identifier	i		5128758	1					
ANR	5128801	Argument	size - i		5128758	1					
ANR	5128802	AdditiveExpression	size - i		5128758	0		-			
ANR	5128803	Identifier	size		5128758	0					
ANR	5128804	Identifier	i		5128758	1					
ANR	5128805	Argument	endian		5128758	2					
ANR	5128806	Identifier	endian		5128758	0					
ANR	5128807	Argument	& addr		5128758	3					
ANR	5128808	UnaryOperationExpression	& addr		5128758	0					
ANR	5128809	UnaryOperator	&		5128758	0					
ANR	5128810	Identifier	addr		5128758	1					
ANR	5128811	Argument	NULL		5128758	4					
ANR	5128812	Identifier	NULL		5128758	0					
ANR	5128813	IfStatement	if ( MUSTSET )		5128758	4					
ANR	5128814	Condition	MUSTSET	649:5:15587:15593	5128758	0	True				
ANR	5128815	Identifier	MUSTSET		5128758	0					
ANR	5128816	CompoundStatement		9:14:192:192	5128758	1					
ANR	5128817	Statement	p	650:2:15600:15600	5128758	0	True				
ANR	5128818	Statement	->	650:3:15601:15602	5128758	1	True				
ANR	5128819	Statement	cb_printf	650:5:15603:15611	5128758	2	True				
ANR	5128820	Statement	(	650:15:15613:15613	5128758	3	True				
ANR	5128821	Statement	"""wv4 %s @ %"""	650:16:15614:15625	5128758	4	True				
ANR	5128822	Statement	PFMT64d	650:28:15626:15632	5128758	5	True				
ANR	5128823	Statement	"""\\n"""	650:35:15633:15636	5128758	6	True				
ANR	5128824	Statement	","	650:39:15637:15637	5128758	7	True				
ANR	5128825	Statement	setval	650:41:15639:15644	5128758	8	True				
ANR	5128826	Statement	","	650:47:15645:15645	5128758	9	True				
ANR	5128827	Statement	seeki	650:49:15647:15651	5128758	10	True				
ANR	5128828	Statement	+	650:54:15652:15652	5128758	11	True				
ANR	5128829	Statement	(	650:55:15653:15653	5128758	12	True				
ANR	5128830	Statement	(	650:56:15654:15654	5128758	13	True				
ANR	5128831	Statement	elem	650:57:15655:15658	5128758	14	True				
ANR	5128832	Statement	>=	650:61:15659:15660	5128758	15	True				
ANR	5128833	Statement	0	650:63:15661:15661	5128758	16	True				
ANR	5128834	Statement	)	650:64:15662:15662	5128758	17	True				
ANR	5128835	Statement	?	650:65:15663:15663	5128758	18	True				
ANR	5128836	Statement	elem	650:66:15664:15667	5128758	19	True				
ANR	5128837	Statement	*	650:70:15668:15668	5128758	20	True				
ANR	5128838	Label	4 :	650:71:15669:15670	5128758	21	True				
ANR	5128839	Statement	0	650:73:15671:15671	5128758	22	True				
ANR	5128840	Statement	)	650:74:15672:15672	5128758	23	True				
ANR	5128841	Statement	)	650:75:15673:15673	5128758	24	True				
ANR	5128842	ExpressionStatement		650:76:15674:15674	5128758	25	True				
ANR	5128843	ElseStatement	else		5128758	0					
ANR	5128844	IfStatement	if ( ( mode & R_PRINT_DOT ) || MUSTSEESTRUCT )		5128758	0					
ANR	5128845	Condition	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT	651:12:15688:15724	5128758	0	True				
ANR	5128846	OrExpression	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT		5128758	0		||			
ANR	5128847	BitAndExpression	mode & R_PRINT_DOT		5128758	0		&			
ANR	5128848	Identifier	mode		5128758	0					
ANR	5128849	Identifier	R_PRINT_DOT		5128758	1					
ANR	5128850	Identifier	MUSTSEESTRUCT		5128758	1					
ANR	5128851	CompoundStatement		11:51:323:323	5128758	1					
ANR	5128852	Statement	p	652:2:15731:15731	5128758	0	True				
ANR	5128853	Statement	->	652:3:15732:15733	5128758	1	True				
ANR	5128854	Statement	cb_printf	652:5:15734:15742	5128758	2	True				
ANR	5128855	Statement	(	652:15:15744:15744	5128758	3	True				
ANR	5128856	Statement	"""0x%08"""	652:16:15745:15751	5128758	4	True				
ANR	5128857	Statement	PFMT64x	652:23:15752:15758	5128758	5	True				
ANR	5128858	Statement	","	652:30:15759:15759	5128758	6	True				
ANR	5128859	Statement	addr	652:32:15761:15764	5128758	7	True				
ANR	5128860	Statement	)	652:36:15765:15765	5128758	8	True				
ANR	5128861	ExpressionStatement		652:37:15766:15766	5128758	9	True				
ANR	5128862	ElseStatement	else		5128758	0					
ANR	5128863	IfStatement	if ( MUSTSEE )		5128758	0					
ANR	5128864	Condition	MUSTSEE	653:12:15780:15786	5128758	0	True				
ANR	5128865	Identifier	MUSTSEE		5128758	0					
ANR	5128866	CompoundStatement		13:21:385:385	5128758	1					
ANR	5128867	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5128758	0					
ANR	5128868	Condition	! SEEVALUE && ! ISQUIET	654:6:15797:15817	5128758	0	True				
ANR	5128869	AndExpression	! SEEVALUE && ! ISQUIET		5128758	0		&&			
ANR	5128870	UnaryOperationExpression	! SEEVALUE		5128758	0					
ANR	5128871	UnaryOperator	!		5128758	0					
ANR	5128872	Identifier	SEEVALUE		5128758	1					
ANR	5128873	UnaryOperationExpression	! ISQUIET		5128758	1					
ANR	5128874	UnaryOperator	!		5128758	0					
ANR	5128875	Identifier	ISQUIET		5128758	1					
ANR	5128876	CompoundStatement		14:29:416:416	5128758	1					
ANR	5128877	Statement	p	655:3:15825:15825	5128758	0	True				
ANR	5128878	Statement	->	655:4:15826:15827	5128758	1	True				
ANR	5128879	Statement	cb_printf	655:6:15828:15836	5128758	2	True				
ANR	5128880	Statement	(	655:16:15838:15838	5128758	3	True				
ANR	5128881	Statement	"""0x%08"""	655:17:15839:15845	5128758	4	True				
ANR	5128882	Statement	PFMT64x	655:24:15846:15852	5128758	5	True				
ANR	5128883	Statement	""" = """	655:31:15853:15857	5128758	6	True				
ANR	5128884	Statement	","	655:36:15858:15858	5128758	7	True				
ANR	5128885	Statement	seeki	655:38:15860:15864	5128758	8	True				
ANR	5128886	Statement	+	655:43:15865:15865	5128758	9	True				
ANR	5128887	Statement	(	655:44:15866:15866	5128758	10	True				
ANR	5128888	Statement	(	655:45:15867:15867	5128758	11	True				
ANR	5128889	Statement	elem	655:46:15868:15871	5128758	12	True				
ANR	5128890	Statement	>=	655:50:15872:15873	5128758	13	True				
ANR	5128891	Statement	0	655:52:15874:15874	5128758	14	True				
ANR	5128892	Statement	)	655:53:15875:15875	5128758	15	True				
ANR	5128893	Statement	?	655:54:15876:15876	5128758	16	True				
ANR	5128894	Statement	elem	655:55:15877:15880	5128758	17	True				
ANR	5128895	Statement	*	655:59:15881:15881	5128758	18	True				
ANR	5128896	Label	4 :	655:60:15882:15883	5128758	19	True				
ANR	5128897	Statement	0	655:62:15884:15884	5128758	20	True				
ANR	5128898	Statement	)	655:63:15885:15885	5128758	21	True				
ANR	5128899	Statement	)	655:64:15886:15886	5128758	22	True				
ANR	5128900	ExpressionStatement		655:65:15887:15887	5128758	23	True				
ANR	5128901	IfStatement	if ( size == - 1 )		5128758	1					
ANR	5128902	Condition	size == - 1	657:6:15899:15908	5128758	0	True				
ANR	5128903	EqualityExpression	size == - 1		5128758	0		==			
ANR	5128904	Identifier	size		5128758	0					
ANR	5128905	UnaryOperationExpression	- 1		5128758	1					
ANR	5128906	UnaryOperator	-		5128758	0					
ANR	5128907	PrimaryExpression	1		5128758	1					
ANR	5128908	CompoundStatement		17:18:507:507	5128758	1					
ANR	5128909	Statement	p	658:3:15916:15916	5128758	0	True				
ANR	5128910	Statement	->	658:4:15917:15918	5128758	1	True				
ANR	5128911	Statement	cb_printf	658:6:15919:15927	5128758	2	True				
ANR	5128912	Statement	(	658:16:15929:15929	5128758	3	True				
ANR	5128913	Statement	"""%"""	658:17:15930:15932	5128758	4	True				
ANR	5128914	Statement	PFMT64d	658:20:15933:15939	5128758	5	True				
ANR	5128915	Statement	","	658:27:15940:15940	5128758	6	True				
ANR	5128916	Statement	(	658:29:15942:15942	5128758	7	True				
ANR	5128917	Statement	st64	658:30:15943:15946	5128758	8	True				
ANR	5128918	Statement	)	658:34:15947:15947	5128758	9	True				
ANR	5128919	Statement	(	658:35:15948:15948	5128758	10	True				
ANR	5128920	Statement	st32	658:36:15949:15952	5128758	11	True				
ANR	5128921	Statement	)	658:40:15953:15953	5128758	12	True				
ANR	5128922	Statement	addr	658:41:15954:15957	5128758	13	True				
ANR	5128923	Statement	)	658:45:15958:15958	5128758	14	True				
ANR	5128924	ExpressionStatement		658:46:15959:15959	5128758	15	True				
ANR	5128925	ElseStatement	else		5128758	0					
ANR	5128926	CompoundStatement		19:9:566:566	5128758	0					
ANR	5128927	IfStatement	if ( ! SEEVALUE )		5128758	0					
ANR	5128928	Condition	! SEEVALUE	660:7:15979:15987	5128758	0	True				
ANR	5128929	UnaryOperationExpression	! SEEVALUE		5128758	0					
ANR	5128930	UnaryOperator	!		5128758	0					
ANR	5128931	Identifier	SEEVALUE		5128758	1					
ANR	5128932	CompoundStatement		20:18:586:586	5128758	1					
ANR	5128933	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	661:4:15996:16015	5128758	0	True				
ANR	5128934	CallExpression	"p -> cb_printf ( ""[ "" )"		5128758	0					
ANR	5128935	Callee	p -> cb_printf		5128758	0					
ANR	5128936	PtrMemberAccess	p -> cb_printf		5128758	0					
ANR	5128937	Identifier	p		5128758	0					
ANR	5128938	Identifier	cb_printf		5128758	1					
ANR	5128939	ArgumentList	"""[ """		5128758	1					
ANR	5128940	Argument	"""[ """		5128758	0					
ANR	5128941	PrimaryExpression	"""[ """		5128758	0					
ANR	5128942	WhileStatement	while ( size -- )		5128758	1					
ANR	5128943	Condition	size --	663:10:16032:16037	5128758	0	True				
ANR	5128944	PostIncDecOperationExpression	size --		5128758	0					
ANR	5128945	Identifier	size		5128758	0					
ANR	5128946	IncDec	--		5128758	1					
ANR	5128947	CompoundStatement		23:18:636:636	5128758	1					
ANR	5128948	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	664:4:16046:16097	5128758	0	True				
ANR	5128949	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5128758	0					
ANR	5128950	Callee	updateAddr		5128758	0					
ANR	5128951	Identifier	updateAddr		5128758	0					
ANR	5128952	ArgumentList	buf + i		5128758	1					
ANR	5128953	Argument	buf + i		5128758	0					
ANR	5128954	AdditiveExpression	buf + i		5128758	0		+			
ANR	5128955	Identifier	buf		5128758	0					
ANR	5128956	Identifier	i		5128758	1					
ANR	5128957	Argument	size - i		5128758	1					
ANR	5128958	AdditiveExpression	size - i		5128758	0		-			
ANR	5128959	Identifier	size		5128758	0					
ANR	5128960	Identifier	i		5128758	1					
ANR	5128961	Argument	endian		5128758	2					
ANR	5128962	Identifier	endian		5128758	0					
ANR	5128963	Argument	& addr		5128758	3					
ANR	5128964	UnaryOperationExpression	& addr		5128758	0					
ANR	5128965	UnaryOperator	&		5128758	0					
ANR	5128966	Identifier	addr		5128758	1					
ANR	5128967	Argument	NULL		5128758	4					
ANR	5128968	Identifier	NULL		5128758	0					
ANR	5128969	IfStatement	if ( elem == - 1 || elem == 0 )		5128758	1					
ANR	5128970	Condition	elem == - 1 || elem == 0	665:8:16107:16129	5128758	0	True				
ANR	5128971	OrExpression	elem == - 1 || elem == 0		5128758	0		||			
ANR	5128972	EqualityExpression	elem == - 1		5128758	0		==			
ANR	5128973	Identifier	elem		5128758	0					
ANR	5128974	UnaryOperationExpression	- 1		5128758	1					
ANR	5128975	UnaryOperator	-		5128758	0					
ANR	5128976	PrimaryExpression	1		5128758	1					
ANR	5128977	EqualityExpression	elem == 0		5128758	1		==			
ANR	5128978	Identifier	elem		5128758	0					
ANR	5128979	PrimaryExpression	0		5128758	1					
ANR	5128980	CompoundStatement		25:33:728:728	5128758	1					
ANR	5128981	Statement	p	666:5:16139:16139	5128758	0	True				
ANR	5128982	Statement	->	666:6:16140:16141	5128758	1	True				
ANR	5128983	Statement	cb_printf	666:8:16142:16150	5128758	2	True				
ANR	5128984	Statement	(	666:18:16152:16152	5128758	3	True				
ANR	5128985	Statement	"""%"""	666:19:16153:16155	5128758	4	True				
ANR	5128986	Statement	PFMT64d	666:22:16156:16162	5128758	5	True				
ANR	5128987	Statement	","	666:29:16163:16163	5128758	6	True				
ANR	5128988	Statement	(	666:31:16165:16165	5128758	7	True				
ANR	5128989	Statement	st64	666:32:16166:16169	5128758	8	True				
ANR	5128990	Statement	)	666:36:16170:16170	5128758	9	True				
ANR	5128991	Statement	(	666:37:16171:16171	5128758	10	True				
ANR	5128992	Statement	st32	666:38:16172:16175	5128758	11	True				
ANR	5128993	Statement	)	666:42:16176:16176	5128758	12	True				
ANR	5128994	Statement	addr	666:43:16177:16180	5128758	13	True				
ANR	5128995	Statement	)	666:47:16181:16181	5128758	14	True				
ANR	5128996	ExpressionStatement		666:48:16182:16182	5128758	15	True				
ANR	5128997	IfStatement	if ( elem == 0 )		5128758	16					
ANR	5128998	Condition	elem == 0	667:9:16193:16201	5128758	0	True				
ANR	5128999	EqualityExpression	elem == 0		5128758	0		==			
ANR	5129000	Identifier	elem		5128758	0					
ANR	5129001	PrimaryExpression	0		5128758	1					
ANR	5129002	CompoundStatement		27:20:800:800	5128758	1					
ANR	5129003	ExpressionStatement	elem = - 2	668:6:16212:16221	5128758	0	True				
ANR	5129004	AssignmentExpression	elem = - 2		5128758	0		=			
ANR	5129005	Identifier	elem		5128758	0					
ANR	5129006	UnaryOperationExpression	- 2		5128758	1					
ANR	5129007	UnaryOperator	-		5128758	0					
ANR	5129008	PrimaryExpression	2		5128758	1					
ANR	5129009	IfStatement	if ( size != 0 && elem == - 1 )		5128758	2					
ANR	5129010	Condition	size != 0 && elem == - 1	671:8:16244:16266	5128758	0	True				
ANR	5129011	AndExpression	size != 0 && elem == - 1		5128758	0		&&			
ANR	5129012	EqualityExpression	size != 0		5128758	0		!=			
ANR	5129013	Identifier	size		5128758	0					
ANR	5129014	PrimaryExpression	0		5128758	1					
ANR	5129015	EqualityExpression	elem == - 1		5128758	1		==			
ANR	5129016	Identifier	elem		5128758	0					
ANR	5129017	UnaryOperationExpression	- 1		5128758	1					
ANR	5129018	UnaryOperator	-		5128758	0					
ANR	5129019	PrimaryExpression	1		5128758	1					
ANR	5129020	CompoundStatement		31:33:865:865	5128758	1					
ANR	5129021	ExpressionStatement	"p -> cb_printf ( "", "" )"	672:5:16276:16295	5128758	0	True				
ANR	5129022	CallExpression	"p -> cb_printf ( "", "" )"		5128758	0					
ANR	5129023	Callee	p -> cb_printf		5128758	0					
ANR	5129024	PtrMemberAccess	p -> cb_printf		5128758	0					
ANR	5129025	Identifier	p		5128758	0					
ANR	5129026	Identifier	cb_printf		5128758	1					
ANR	5129027	ArgumentList	""", """		5128758	1					
ANR	5129028	Argument	""", """		5128758	0					
ANR	5129029	PrimaryExpression	""", """		5128758	0					
ANR	5129030	IfStatement	if ( elem > - 1 )		5128758	3					
ANR	5129031	Condition	elem > - 1	674:8:16311:16319	5128758	0	True				
ANR	5129032	RelationalExpression	elem > - 1		5128758	0		>			
ANR	5129033	Identifier	elem		5128758	0					
ANR	5129034	UnaryOperationExpression	- 1		5128758	1					
ANR	5129035	UnaryOperator	-		5128758	0					
ANR	5129036	PrimaryExpression	1		5128758	1					
ANR	5129037	CompoundStatement		34:19:918:918	5128758	1					
ANR	5129038	ExpressionStatement	elem --	675:5:16329:16335	5128758	0	True				
ANR	5129039	PostIncDecOperationExpression	elem --		5128758	0					
ANR	5129040	Identifier	elem		5128758	0					
ANR	5129041	IncDec	--		5128758	1					
ANR	5129042	ExpressionStatement	i += 4	677:4:16347:16353	5128758	4	True				
ANR	5129043	AssignmentExpression	i += 4		5128758	0		+=			
ANR	5129044	Identifier	i		5128758	0					
ANR	5129045	PrimaryExpression	4		5128758	1					
ANR	5129046	IfStatement	if ( ! SEEVALUE )		5128758	2					
ANR	5129047	Condition	! SEEVALUE	679:7:16367:16375	5128758	0	True				
ANR	5129048	UnaryOperationExpression	! SEEVALUE		5128758	0					
ANR	5129049	UnaryOperator	!		5128758	0					
ANR	5129050	Identifier	SEEVALUE		5128758	1					
ANR	5129051	CompoundStatement		39:18:974:974	5128758	1					
ANR	5129052	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	680:4:16384:16403	5128758	0	True				
ANR	5129053	CallExpression	"p -> cb_printf ( "" ]"" )"		5128758	0					
ANR	5129054	Callee	p -> cb_printf		5128758	0					
ANR	5129055	PtrMemberAccess	p -> cb_printf		5128758	0					
ANR	5129056	Identifier	p		5128758	0					
ANR	5129057	Identifier	cb_printf		5128758	1					
ANR	5129058	ArgumentList	""" ]"""		5128758	1					
ANR	5129059	Argument	""" ]"""		5128758	0					
ANR	5129060	PrimaryExpression	""" ]"""		5128758	0					
ANR	5129061	ElseStatement	else		5128758	0					
ANR	5129062	IfStatement	if ( MUSTSEEJSON )		5128758	0					
ANR	5129063	Condition	MUSTSEEJSON	683:12:16426:16436	5128758	0	True				
ANR	5129064	Identifier	MUSTSEEJSON		5128758	0					
ANR	5129065	CompoundStatement		43:25:1035:1035	5128758	1					
ANR	5129066	IfStatement	if ( size == - 1 )		5128758	0					
ANR	5129067	Condition	size == - 1	684:6:16447:16456	5128758	0	True				
ANR	5129068	EqualityExpression	size == - 1		5128758	0		==			
ANR	5129069	Identifier	size		5128758	0					
ANR	5129070	UnaryOperationExpression	- 1		5128758	1					
ANR	5129071	UnaryOperator	-		5128758	0					
ANR	5129072	PrimaryExpression	1		5128758	1					
ANR	5129073	CompoundStatement		44:18:1055:1055	5128758	1					
ANR	5129074	ExpressionStatement	"p -> cb_printf ( ""%d"" , addr )"	685:3:16464:16489	5128758	0	True				
ANR	5129075	CallExpression	"p -> cb_printf ( ""%d"" , addr )"		5128758	0					
ANR	5129076	Callee	p -> cb_printf		5128758	0					
ANR	5129077	PtrMemberAccess	p -> cb_printf		5128758	0					
ANR	5129078	Identifier	p		5128758	0					
ANR	5129079	Identifier	cb_printf		5128758	1					
ANR	5129080	ArgumentList	"""%d"""		5128758	1					
ANR	5129081	Argument	"""%d"""		5128758	0					
ANR	5129082	PrimaryExpression	"""%d"""		5128758	0					
ANR	5129083	Argument	addr		5128758	1					
ANR	5129084	Identifier	addr		5128758	0					
ANR	5129085	ElseStatement	else		5128758	0					
ANR	5129086	CompoundStatement		46:9:1096:1096	5128758	0					
ANR	5129087	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	687:3:16505:16524	5128758	0	True				
ANR	5129088	CallExpression	"p -> cb_printf ( ""[ "" )"		5128758	0					
ANR	5129089	Callee	p -> cb_printf		5128758	0					
ANR	5129090	PtrMemberAccess	p -> cb_printf		5128758	0					
ANR	5129091	Identifier	p		5128758	0					
ANR	5129092	Identifier	cb_printf		5128758	1					
ANR	5129093	ArgumentList	"""[ """		5128758	1					
ANR	5129094	Argument	"""[ """		5128758	0					
ANR	5129095	PrimaryExpression	"""[ """		5128758	0					
ANR	5129096	WhileStatement	while ( size -- )		5128758	1					
ANR	5129097	Condition	size --	688:10:16536:16541	5128758	0	True				
ANR	5129098	PostIncDecOperationExpression	size --		5128758	0					
ANR	5129099	Identifier	size		5128758	0					
ANR	5129100	IncDec	--		5128758	1					
ANR	5129101	CompoundStatement		48:18:1140:1140	5128758	1					
ANR	5129102	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	689:4:16550:16601	5128758	0	True				
ANR	5129103	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5128758	0					
ANR	5129104	Callee	updateAddr		5128758	0					
ANR	5129105	Identifier	updateAddr		5128758	0					
ANR	5129106	ArgumentList	buf + i		5128758	1					
ANR	5129107	Argument	buf + i		5128758	0					
ANR	5129108	AdditiveExpression	buf + i		5128758	0		+			
ANR	5129109	Identifier	buf		5128758	0					
ANR	5129110	Identifier	i		5128758	1					
ANR	5129111	Argument	size - i		5128758	1					
ANR	5129112	AdditiveExpression	size - i		5128758	0		-			
ANR	5129113	Identifier	size		5128758	0					
ANR	5129114	Identifier	i		5128758	1					
ANR	5129115	Argument	endian		5128758	2					
ANR	5129116	Identifier	endian		5128758	0					
ANR	5129117	Argument	& addr		5128758	3					
ANR	5129118	UnaryOperationExpression	& addr		5128758	0					
ANR	5129119	UnaryOperator	&		5128758	0					
ANR	5129120	Identifier	addr		5128758	1					
ANR	5129121	Argument	NULL		5128758	4					
ANR	5129122	Identifier	NULL		5128758	0					
ANR	5129123	IfStatement	if ( elem == - 1 || elem == 0 )		5128758	1					
ANR	5129124	Condition	elem == - 1 || elem == 0	690:8:16611:16633	5128758	0	True				
ANR	5129125	OrExpression	elem == - 1 || elem == 0		5128758	0		||			
ANR	5129126	EqualityExpression	elem == - 1		5128758	0		==			
ANR	5129127	Identifier	elem		5128758	0					
ANR	5129128	UnaryOperationExpression	- 1		5128758	1					
ANR	5129129	UnaryOperator	-		5128758	0					
ANR	5129130	PrimaryExpression	1		5128758	1					
ANR	5129131	EqualityExpression	elem == 0		5128758	1		==			
ANR	5129132	Identifier	elem		5128758	0					
ANR	5129133	PrimaryExpression	0		5128758	1					
ANR	5129134	CompoundStatement		50:33:1232:1232	5128758	1					
ANR	5129135	ExpressionStatement	"p -> cb_printf ( ""%d"" , addr )"	691:5:16643:16668	5128758	0	True				
ANR	5129136	CallExpression	"p -> cb_printf ( ""%d"" , addr )"		5128758	0					
ANR	5129137	Callee	p -> cb_printf		5128758	0					
ANR	5129138	PtrMemberAccess	p -> cb_printf		5128758	0					
ANR	5129139	Identifier	p		5128758	0					
ANR	5129140	Identifier	cb_printf		5128758	1					
ANR	5129141	ArgumentList	"""%d"""		5128758	1					
ANR	5129142	Argument	"""%d"""		5128758	0					
ANR	5129143	PrimaryExpression	"""%d"""		5128758	0					
ANR	5129144	Argument	addr		5128758	1					
ANR	5129145	Identifier	addr		5128758	0					
ANR	5129146	IfStatement	if ( elem == 0 )		5128758	1					
ANR	5129147	Condition	elem == 0	692:9:16679:16687	5128758	0	True				
ANR	5129148	EqualityExpression	elem == 0		5128758	0		==			
ANR	5129149	Identifier	elem		5128758	0					
ANR	5129150	PrimaryExpression	0		5128758	1					
ANR	5129151	CompoundStatement		52:20:1286:1286	5128758	1					
ANR	5129152	ExpressionStatement	elem = - 2	693:6:16698:16707	5128758	0	True				
ANR	5129153	AssignmentExpression	elem = - 2		5128758	0		=			
ANR	5129154	Identifier	elem		5128758	0					
ANR	5129155	UnaryOperationExpression	- 2		5128758	1					
ANR	5129156	UnaryOperator	-		5128758	0					
ANR	5129157	PrimaryExpression	2		5128758	1					
ANR	5129158	IfStatement	if ( size != 0 && elem == - 1 )		5128758	2					
ANR	5129159	Condition	size != 0 && elem == - 1	696:8:16730:16752	5128758	0	True				
ANR	5129160	AndExpression	size != 0 && elem == - 1		5128758	0		&&			
ANR	5129161	EqualityExpression	size != 0		5128758	0		!=			
ANR	5129162	Identifier	size		5128758	0					
ANR	5129163	PrimaryExpression	0		5128758	1					
ANR	5129164	EqualityExpression	elem == - 1		5128758	1		==			
ANR	5129165	Identifier	elem		5128758	0					
ANR	5129166	UnaryOperationExpression	- 1		5128758	1					
ANR	5129167	UnaryOperator	-		5128758	0					
ANR	5129168	PrimaryExpression	1		5128758	1					
ANR	5129169	CompoundStatement		56:33:1351:1351	5128758	1					
ANR	5129170	ExpressionStatement	"p -> cb_printf ( "", "" )"	697:5:16762:16781	5128758	0	True				
ANR	5129171	CallExpression	"p -> cb_printf ( "", "" )"		5128758	0					
ANR	5129172	Callee	p -> cb_printf		5128758	0					
ANR	5129173	PtrMemberAccess	p -> cb_printf		5128758	0					
ANR	5129174	Identifier	p		5128758	0					
ANR	5129175	Identifier	cb_printf		5128758	1					
ANR	5129176	ArgumentList	""", """		5128758	1					
ANR	5129177	Argument	""", """		5128758	0					
ANR	5129178	PrimaryExpression	""", """		5128758	0					
ANR	5129179	IfStatement	if ( elem > - 1 )		5128758	3					
ANR	5129180	Condition	elem > - 1	699:8:16797:16805	5128758	0	True				
ANR	5129181	RelationalExpression	elem > - 1		5128758	0		>			
ANR	5129182	Identifier	elem		5128758	0					
ANR	5129183	UnaryOperationExpression	- 1		5128758	1					
ANR	5129184	UnaryOperator	-		5128758	0					
ANR	5129185	PrimaryExpression	1		5128758	1					
ANR	5129186	CompoundStatement		59:19:1404:1404	5128758	1					
ANR	5129187	ExpressionStatement	elem --	700:5:16815:16821	5128758	0	True				
ANR	5129188	PostIncDecOperationExpression	elem --		5128758	0					
ANR	5129189	Identifier	elem		5128758	0					
ANR	5129190	IncDec	--		5128758	1					
ANR	5129191	ExpressionStatement	i += 4	702:4:16833:16837	5128758	4	True				
ANR	5129192	AssignmentExpression	i += 4		5128758	0		+=			
ANR	5129193	Identifier	i		5128758	0					
ANR	5129194	PrimaryExpression	4		5128758	1					
ANR	5129195	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	704:3:16847:16866	5128758	2	True				
ANR	5129196	CallExpression	"p -> cb_printf ( "" ]"" )"		5128758	0					
ANR	5129197	Callee	p -> cb_printf		5128758	0					
ANR	5129198	PtrMemberAccess	p -> cb_printf		5128758	0					
ANR	5129199	Identifier	p		5128758	0					
ANR	5129200	Identifier	cb_printf		5128758	1					
ANR	5129201	ArgumentList	""" ]"""		5128758	1					
ANR	5129202	Argument	""" ]"""		5128758	0					
ANR	5129203	PrimaryExpression	""" ]"""		5128758	0					
ANR	5129204	ExpressionStatement	"p -> cb_printf ( ""}"" )"	706:2:16874:16892	5128758	1	True				
ANR	5129205	CallExpression	"p -> cb_printf ( ""}"" )"		5128758	0					
ANR	5129206	Callee	p -> cb_printf		5128758	0					
ANR	5129207	PtrMemberAccess	p -> cb_printf		5128758	0					
ANR	5129208	Identifier	p		5128758	0					
ANR	5129209	Identifier	cb_printf		5128758	1					
ANR	5129210	ArgumentList	"""}"""		5128758	1					
ANR	5129211	Argument	"""}"""		5128758	0					
ANR	5129212	PrimaryExpression	"""}"""		5128758	0					
ANR	5129213	ReturnType	static void		5128758	1					
ANR	5129214	Identifier	r_print_format_int		5128758	2					
ANR	5129215	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5128758	3					
ANR	5129216	Parameter	const RPrint * p	640:31:15303:15317	5128758	0	True				
ANR	5129217	ParameterType	const RPrint *		5128758	0					
ANR	5129218	Identifier	p		5128758	1					
ANR	5129219	Parameter	int endian	640:48:15320:15329	5128758	1	True				
ANR	5129220	ParameterType	int		5128758	0					
ANR	5129221	Identifier	endian		5128758	1					
ANR	5129222	Parameter	int mode	640:60:15332:15339	5128758	2	True				
ANR	5129223	ParameterType	int		5128758	0					
ANR	5129224	Identifier	mode		5128758	1					
ANR	5129225	Parameter	const char * setval	641:2:15344:15361	5128758	3	True				
ANR	5129226	ParameterType	const char *		5128758	0					
ANR	5129227	Identifier	setval		5128758	1					
ANR	5129228	Parameter	ut64 seeki	641:22:15364:15373	5128758	4	True				
ANR	5129229	ParameterType	ut64		5128758	0					
ANR	5129230	Identifier	seeki		5128758	1					
ANR	5129231	Parameter	ut8 * buf	641:34:15376:15383	5128758	5	True				
ANR	5129232	ParameterType	ut8 *		5128758	0					
ANR	5129233	Identifier	buf		5128758	1					
ANR	5129234	Parameter	int i	641:44:15386:15390	5128758	6	True				
ANR	5129235	ParameterType	int		5128758	0					
ANR	5129236	Identifier	i		5128758	1					
ANR	5129237	Parameter	int size	641:51:15393:15400	5128758	7	True				
ANR	5129238	ParameterType	int		5128758	0					
ANR	5129239	Identifier	size		5128758	1					
ANR	5129240	CFGEntryNode	ENTRY		5128758		True				
ANR	5129241	CFGExitNode	EXIT		5128758		True				
ANR	5129242	Symbol	elem		5128758						
ANR	5129243	Symbol	& addr		5128758						
ANR	5129244	Symbol	NULL		5128758						
ANR	5129245	Symbol	MUSTSEEJSON		5128758						
ANR	5129246	Symbol	MUSTSEESTRUCT		5128758						
ANR	5129247	Symbol	i		5128758						
ANR	5129248	Symbol	ISQUIET		5128758						
ANR	5129249	Symbol	endian		5128758						
ANR	5129250	Symbol	MUSTSEE		5128758						
ANR	5129251	Symbol	p		5128758						
ANR	5129252	Symbol	mode		5128758						
ANR	5129253	Symbol	ARRAYINDEX_COEF		5128758						
ANR	5129254	Symbol	buf		5128758						
ANR	5129255	Symbol	size		5128758						
ANR	5129256	Symbol	seeki		5128758						
ANR	5129257	Symbol	SEEVALUE		5128758						
ANR	5129258	Symbol	R_PRINT_DOT		5128758						
ANR	5129259	Symbol	setval		5128758						
ANR	5129260	Symbol	addr		5128758						
ANR	5129261	Symbol	MUSTSET		5128758						
ANR	5129262	Function	r_print_format_disasm	710:0:16900:17165							
ANR	5129263	FunctionDef	"r_print_format_disasm (const RPrint * p , ut64 seeki , int size)"		5129262	0					
ANR	5129264	CompoundStatement		710:72:16972:17165	5129262	0					
ANR	5129265	IdentifierDeclStatement	ut64 prevseeki = seeki ;	711:1:16975:16997	5129262	0	True				
ANR	5129266	IdentifierDecl	prevseeki = seeki		5129262	0					
ANR	5129267	IdentifierDeclType	ut64		5129262	0					
ANR	5129268	Identifier	prevseeki		5129262	1					
ANR	5129269	AssignmentExpression	prevseeki = seeki		5129262	2		=			
ANR	5129270	Identifier	seeki		5129262	0					
ANR	5129271	Identifier	seeki		5129262	1					
ANR	5129272	IfStatement	if ( ! p -> disasm || ! p -> user )		5129262	1					
ANR	5129273	Condition	! p -> disasm || ! p -> user	713:5:17005:17026	5129262	0	True				
ANR	5129274	OrExpression	! p -> disasm || ! p -> user		5129262	0		||			
ANR	5129275	UnaryOperationExpression	! p -> disasm		5129262	0					
ANR	5129276	UnaryOperator	!		5129262	0					
ANR	5129277	PtrMemberAccess	p -> disasm		5129262	1					
ANR	5129278	Identifier	p		5129262	0					
ANR	5129279	Identifier	disasm		5129262	1					
ANR	5129280	UnaryOperationExpression	! p -> user		5129262	1					
ANR	5129281	UnaryOperator	!		5129262	0					
ANR	5129282	PtrMemberAccess	p -> user		5129262	1					
ANR	5129283	Identifier	p		5129262	0					
ANR	5129284	Identifier	user		5129262	1					
ANR	5129285	CompoundStatement		4:29:56:56	5129262	1					
ANR	5129286	ReturnStatement	return 0 ;	714:2:17033:17041	5129262	0	True				
ANR	5129287	PrimaryExpression	0		5129262	0					
ANR	5129288	ExpressionStatement	"size = R_MAX ( 1 , size )"	717:1:17048:17070	5129262	2	True				
ANR	5129289	AssignmentExpression	"size = R_MAX ( 1 , size )"		5129262	0		=			
ANR	5129290	Identifier	size		5129262	0					
ANR	5129291	CallExpression	"R_MAX ( 1 , size )"		5129262	1					
ANR	5129292	Callee	R_MAX		5129262	0					
ANR	5129293	Identifier	R_MAX		5129262	0					
ANR	5129294	ArgumentList	1		5129262	1					
ANR	5129295	Argument	1		5129262	0					
ANR	5129296	PrimaryExpression	1		5129262	0					
ANR	5129297	Argument	size		5129262	1					
ANR	5129298	Identifier	size		5129262	0					
ANR	5129299	WhileStatement	while ( size -- > 0 )		5129262	3					
ANR	5129300	Condition	size -- > 0	719:8:17081:17090	5129262	0	True				
ANR	5129301	RelationalExpression	size -- > 0		5129262	0		>			
ANR	5129302	PostIncDecOperationExpression	size --		5129262	0					
ANR	5129303	Identifier	size		5129262	0					
ANR	5129304	IncDec	--		5129262	1					
ANR	5129305	PrimaryExpression	0		5129262	1					
ANR	5129306	CompoundStatement		10:20:120:120	5129262	1					
ANR	5129307	ExpressionStatement	"seeki += p -> disasm ( p -> user , seeki )"	720:2:17097:17132	5129262	0	True				
ANR	5129308	AssignmentExpression	"seeki += p -> disasm ( p -> user , seeki )"		5129262	0		+=			
ANR	5129309	Identifier	seeki		5129262	0					
ANR	5129310	CallExpression	"p -> disasm ( p -> user , seeki )"		5129262	1					
ANR	5129311	Callee	p -> disasm		5129262	0					
ANR	5129312	PtrMemberAccess	p -> disasm		5129262	0					
ANR	5129313	Identifier	p		5129262	0					
ANR	5129314	Identifier	disasm		5129262	1					
ANR	5129315	ArgumentList	p -> user		5129262	1					
ANR	5129316	Argument	p -> user		5129262	0					
ANR	5129317	PtrMemberAccess	p -> user		5129262	0					
ANR	5129318	Identifier	p		5129262	0					
ANR	5129319	Identifier	user		5129262	1					
ANR	5129320	Argument	seeki		5129262	1					
ANR	5129321	Identifier	seeki		5129262	0					
ANR	5129322	ReturnStatement	return seeki - prevseeki ;	723:1:17139:17163	5129262	4	True				
ANR	5129323	AdditiveExpression	seeki - prevseeki		5129262	0		-			
ANR	5129324	Identifier	seeki		5129262	0					
ANR	5129325	Identifier	prevseeki		5129262	1					
ANR	5129326	ReturnType	static int		5129262	1					
ANR	5129327	Identifier	r_print_format_disasm		5129262	2					
ANR	5129328	ParameterList	"const RPrint * p , ut64 seeki , int size"		5129262	3					
ANR	5129329	Parameter	const RPrint * p	710:33:16933:16947	5129262	0	True				
ANR	5129330	ParameterType	const RPrint *		5129262	0					
ANR	5129331	Identifier	p		5129262	1					
ANR	5129332	Parameter	ut64 seeki	710:50:16950:16959	5129262	1	True				
ANR	5129333	ParameterType	ut64		5129262	0					
ANR	5129334	Identifier	seeki		5129262	1					
ANR	5129335	Parameter	int size	710:62:16962:16969	5129262	2	True				
ANR	5129336	ParameterType	int		5129262	0					
ANR	5129337	Identifier	size		5129262	1					
ANR	5129338	CFGEntryNode	ENTRY		5129262		True				
ANR	5129339	CFGExitNode	EXIT		5129262		True				
ANR	5129340	Symbol	p		5129262						
ANR	5129341	Symbol	size		5129262						
ANR	5129342	Symbol	seeki		5129262						
ANR	5129343	Symbol	prevseeki		5129262						
ANR	5129344	Symbol	R_MAX		5129262						
ANR	5129345	Symbol	* p		5129262						
ANR	5129346	Symbol	p -> disasm		5129262						
ANR	5129347	Symbol	p -> user		5129262						
ANR	5129348	Function	r_print_format_octal	726:0:17168:18945							
ANR	5129349	FunctionDef	"r_print_format_octal (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5129348	0					
ANR	5129350	CompoundStatement		727:61:17301:18945	5129348	0					
ANR	5129351	IdentifierDeclStatement	ut64 addr ;	728:1:17304:17313	5129348	0	True				
ANR	5129352	IdentifierDecl	addr		5129348	0					
ANR	5129353	IdentifierDeclType	ut64		5129348	0					
ANR	5129354	Identifier	addr		5129348	1					
ANR	5129355	IdentifierDeclStatement	int elem = - 1 ;	729:1:17316:17329	5129348	1	True				
ANR	5129356	IdentifierDecl	elem = - 1		5129348	0					
ANR	5129357	IdentifierDeclType	int		5129348	0					
ANR	5129358	Identifier	elem		5129348	1					
ANR	5129359	AssignmentExpression	elem = - 1		5129348	2		=			
ANR	5129360	Identifier	elem		5129348	0					
ANR	5129361	UnaryOperationExpression	- 1		5129348	1					
ANR	5129362	UnaryOperator	-		5129348	0					
ANR	5129363	PrimaryExpression	1		5129348	1					
ANR	5129364	IfStatement	if ( size >= ARRAYINDEX_COEF )		5129348	2					
ANR	5129365	Condition	size >= ARRAYINDEX_COEF	730:5:17336:17358	5129348	0	True				
ANR	5129366	RelationalExpression	size >= ARRAYINDEX_COEF		5129348	0		>=			
ANR	5129367	Identifier	size		5129348	0					
ANR	5129368	Identifier	ARRAYINDEX_COEF		5129348	1					
ANR	5129369	CompoundStatement		4:30:59:59	5129348	1					
ANR	5129370	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	731:2:17365:17394	5129348	0	True				
ANR	5129371	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5129348	0		=			
ANR	5129372	Identifier	elem		5129348	0					
ANR	5129373	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5129348	1		-			
ANR	5129374	MultiplicativeExpression	size / ARRAYINDEX_COEF		5129348	0		/			
ANR	5129375	Identifier	size		5129348	0					
ANR	5129376	Identifier	ARRAYINDEX_COEF		5129348	1					
ANR	5129377	PrimaryExpression	1		5129348	1					
ANR	5129378	ExpressionStatement	size %= ARRAYINDEX_COEF	732:2:17398:17421	5129348	1	True				
ANR	5129379	AssignmentExpression	size %= ARRAYINDEX_COEF		5129348	0		%=			
ANR	5129380	Identifier	size		5129348	0					
ANR	5129381	Identifier	ARRAYINDEX_COEF		5129348	1					
ANR	5129382	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	734:1:17427:17478	5129348	3	True				
ANR	5129383	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5129348	0					
ANR	5129384	Callee	updateAddr		5129348	0					
ANR	5129385	Identifier	updateAddr		5129348	0					
ANR	5129386	ArgumentList	buf + i		5129348	1					
ANR	5129387	Argument	buf + i		5129348	0					
ANR	5129388	AdditiveExpression	buf + i		5129348	0		+			
ANR	5129389	Identifier	buf		5129348	0					
ANR	5129390	Identifier	i		5129348	1					
ANR	5129391	Argument	size - i		5129348	1					
ANR	5129392	AdditiveExpression	size - i		5129348	0		-			
ANR	5129393	Identifier	size		5129348	0					
ANR	5129394	Identifier	i		5129348	1					
ANR	5129395	Argument	endian		5129348	2					
ANR	5129396	Identifier	endian		5129348	0					
ANR	5129397	Argument	& addr		5129348	3					
ANR	5129398	UnaryOperationExpression	& addr		5129348	0					
ANR	5129399	UnaryOperator	&		5129348	0					
ANR	5129400	Identifier	addr		5129348	1					
ANR	5129401	Argument	NULL		5129348	4					
ANR	5129402	Identifier	NULL		5129348	0					
ANR	5129403	IfStatement	if ( MUSTSET )		5129348	4					
ANR	5129404	Condition	MUSTSET	735:5:17485:17491	5129348	0	True				
ANR	5129405	Identifier	MUSTSET		5129348	0					
ANR	5129406	CompoundStatement		9:14:192:192	5129348	1					
ANR	5129407	Statement	p	736:2:17498:17498	5129348	0	True				
ANR	5129408	Statement	->	736:3:17499:17500	5129348	1	True				
ANR	5129409	Statement	cb_printf	736:5:17501:17509	5129348	2	True				
ANR	5129410	Statement	(	736:15:17511:17511	5129348	3	True				
ANR	5129411	Statement	"""wv4 %s @ 0x%08"""	736:16:17512:17527	5129348	4	True				
ANR	5129412	Statement	PFMT64x	736:32:17528:17534	5129348	5	True				
ANR	5129413	Statement	"""\\n"""	736:39:17535:17538	5129348	6	True				
ANR	5129414	Statement	","	736:43:17539:17539	5129348	7	True				
ANR	5129415	Statement	setval	736:45:17541:17546	5129348	8	True				
ANR	5129416	Statement	","	736:51:17547:17547	5129348	9	True				
ANR	5129417	Statement	seeki	736:53:17549:17553	5129348	10	True				
ANR	5129418	Statement	+	736:58:17554:17554	5129348	11	True				
ANR	5129419	Statement	(	736:59:17555:17555	5129348	12	True				
ANR	5129420	Statement	(	736:60:17556:17556	5129348	13	True				
ANR	5129421	Statement	elem	736:61:17557:17560	5129348	14	True				
ANR	5129422	Statement	>=	736:65:17561:17562	5129348	15	True				
ANR	5129423	Statement	0	736:67:17563:17563	5129348	16	True				
ANR	5129424	Statement	)	736:68:17564:17564	5129348	17	True				
ANR	5129425	Statement	?	736:69:17565:17565	5129348	18	True				
ANR	5129426	Statement	elem	736:70:17566:17569	5129348	19	True				
ANR	5129427	Statement	*	736:74:17570:17570	5129348	20	True				
ANR	5129428	Label	4 :	736:75:17571:17572	5129348	21	True				
ANR	5129429	Statement	0	736:77:17573:17573	5129348	22	True				
ANR	5129430	Statement	)	736:78:17574:17574	5129348	23	True				
ANR	5129431	Statement	)	736:79:17575:17575	5129348	24	True				
ANR	5129432	ExpressionStatement		736:80:17576:17576	5129348	25	True				
ANR	5129433	ElseStatement	else		5129348	0					
ANR	5129434	IfStatement	if ( ( mode & R_PRINT_DOT ) || MUSTSEESTRUCT )		5129348	0					
ANR	5129435	Condition	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT	737:12:17590:17626	5129348	0	True				
ANR	5129436	OrExpression	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT		5129348	0		||			
ANR	5129437	BitAndExpression	mode & R_PRINT_DOT		5129348	0		&			
ANR	5129438	Identifier	mode		5129348	0					
ANR	5129439	Identifier	R_PRINT_DOT		5129348	1					
ANR	5129440	Identifier	MUSTSEESTRUCT		5129348	1					
ANR	5129441	CompoundStatement		11:51:327:327	5129348	1					
ANR	5129442	Statement	p	738:2:17633:17633	5129348	0	True				
ANR	5129443	Statement	->	738:3:17634:17635	5129348	1	True				
ANR	5129444	Statement	cb_printf	738:5:17636:17644	5129348	2	True				
ANR	5129445	Statement	(	738:15:17646:17646	5129348	3	True				
ANR	5129446	Statement	"""0%"""	738:16:17647:17650	5129348	4	True				
ANR	5129447	Statement	PFMT64o	738:20:17651:17657	5129348	5	True				
ANR	5129448	Statement	","	738:27:17658:17658	5129348	6	True				
ANR	5129449	Statement	addr	738:29:17660:17663	5129348	7	True				
ANR	5129450	Statement	)	738:33:17664:17664	5129348	8	True				
ANR	5129451	ExpressionStatement		738:34:17665:17665	5129348	9	True				
ANR	5129452	ElseStatement	else		5129348	0					
ANR	5129453	IfStatement	if ( MUSTSEE )		5129348	0					
ANR	5129454	Condition	MUSTSEE	739:12:17679:17685	5129348	0	True				
ANR	5129455	Identifier	MUSTSEE		5129348	0					
ANR	5129456	CompoundStatement		14:2:390:414	5129348	1					
ANR	5129457	IdentifierDeclStatement	ut32 addr32 = ( ut32 ) addr ;	740:2:17692:17716	5129348	0	True				
ANR	5129458	IdentifierDecl	addr32 = ( ut32 ) addr		5129348	0					
ANR	5129459	IdentifierDeclType	ut32		5129348	0					
ANR	5129460	Identifier	addr32		5129348	1					
ANR	5129461	AssignmentExpression	addr32 = ( ut32 ) addr		5129348	2		=			
ANR	5129462	Identifier	addr32		5129348	0					
ANR	5129463	CastExpression	( ut32 ) addr		5129348	1					
ANR	5129464	CastTarget	ut32		5129348	0					
ANR	5129465	Identifier	addr		5129348	1					
ANR	5129466	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5129348	1					
ANR	5129467	Condition	! SEEVALUE && ! ISQUIET	741:6:17724:17744	5129348	0	True				
ANR	5129468	AndExpression	! SEEVALUE && ! ISQUIET		5129348	0		&&			
ANR	5129469	UnaryOperationExpression	! SEEVALUE		5129348	0					
ANR	5129470	UnaryOperator	!		5129348	0					
ANR	5129471	Identifier	SEEVALUE		5129348	1					
ANR	5129472	UnaryOperationExpression	! ISQUIET		5129348	1					
ANR	5129473	UnaryOperator	!		5129348	0					
ANR	5129474	Identifier	ISQUIET		5129348	1					
ANR	5129475	CompoundStatement		15:29:445:445	5129348	1					
ANR	5129476	Statement	p	742:3:17752:17752	5129348	0	True				
ANR	5129477	Statement	->	742:4:17753:17754	5129348	1	True				
ANR	5129478	Statement	cb_printf	742:6:17755:17763	5129348	2	True				
ANR	5129479	Statement	(	742:16:17765:17765	5129348	3	True				
ANR	5129480	Statement	"""0x%08"""	742:17:17766:17772	5129348	4	True				
ANR	5129481	Statement	PFMT64x	742:25:17774:17780	5129348	5	True				
ANR	5129482	Statement	""" = """	742:33:17782:17786	5129348	6	True				
ANR	5129483	Statement	","	742:38:17787:17787	5129348	7	True				
ANR	5129484	Statement	seeki	742:40:17789:17793	5129348	8	True				
ANR	5129485	Statement	+	742:46:17795:17795	5129348	9	True				
ANR	5129486	Statement	(	742:48:17797:17797	5129348	10	True				
ANR	5129487	Statement	(	742:49:17798:17798	5129348	11	True				
ANR	5129488	Statement	elem	742:50:17799:17802	5129348	12	True				
ANR	5129489	Statement	>=	742:55:17804:17805	5129348	13	True				
ANR	5129490	Statement	0	742:58:17807:17807	5129348	14	True				
ANR	5129491	Statement	)	742:59:17808:17808	5129348	15	True				
ANR	5129492	Statement	?	742:61:17810:17810	5129348	16	True				
ANR	5129493	Statement	elem	742:63:17812:17815	5129348	17	True				
ANR	5129494	Statement	*	742:68:17817:17817	5129348	18	True				
ANR	5129495	Label	4 :	742:70:17819:17821	5129348	19	True				
ANR	5129496	Statement	0	742:74:17823:17823	5129348	20	True				
ANR	5129497	Statement	)	742:75:17824:17824	5129348	21	True				
ANR	5129498	Statement	)	742:76:17825:17825	5129348	22	True				
ANR	5129499	ExpressionStatement		742:77:17826:17826	5129348	23	True				
ANR	5129500	IfStatement	if ( ! SEEVALUE )		5129348	2					
ANR	5129501	Condition	! SEEVALUE	744:6:17838:17846	5129348	0	True				
ANR	5129502	UnaryOperationExpression	! SEEVALUE		5129348	0					
ANR	5129503	UnaryOperator	!		5129348	0					
ANR	5129504	Identifier	SEEVALUE		5129348	1					
ANR	5129505	CompoundStatement		18:17:547:547	5129348	1					
ANR	5129506	ExpressionStatement	"p -> cb_printf ( ""(octal) "" )"	745:3:17854:17879	5129348	0	True				
ANR	5129507	CallExpression	"p -> cb_printf ( ""(octal) "" )"		5129348	0					
ANR	5129508	Callee	p -> cb_printf		5129348	0					
ANR	5129509	PtrMemberAccess	p -> cb_printf		5129348	0					
ANR	5129510	Identifier	p		5129348	0					
ANR	5129511	Identifier	cb_printf		5129348	1					
ANR	5129512	ArgumentList	"""(octal) """		5129348	1					
ANR	5129513	Argument	"""(octal) """		5129348	0					
ANR	5129514	PrimaryExpression	"""(octal) """		5129348	0					
ANR	5129515	IfStatement	if ( size == - 1 )		5129348	3					
ANR	5129516	Condition	size == - 1	747:6:17891:17900	5129348	0	True				
ANR	5129517	EqualityExpression	size == - 1		5129348	0		==			
ANR	5129518	Identifier	size		5129348	0					
ANR	5129519	UnaryOperationExpression	- 1		5129348	1					
ANR	5129520	UnaryOperator	-		5129348	0					
ANR	5129521	PrimaryExpression	1		5129348	1					
ANR	5129522	CompoundStatement		21:18:601:601	5129348	1					
ANR	5129523	Statement	p	748:3:17908:17908	5129348	0	True				
ANR	5129524	Statement	->	748:4:17909:17910	5129348	1	True				
ANR	5129525	Statement	cb_printf	748:6:17911:17919	5129348	2	True				
ANR	5129526	Statement	(	748:16:17921:17921	5129348	3	True				
ANR	5129527	Statement	""" 0%08"""	748:17:17922:17928	5129348	4	True				
ANR	5129528	Statement	PFMT64o	748:24:17929:17935	5129348	5	True				
ANR	5129529	Statement	","	748:31:17936:17936	5129348	6	True				
ANR	5129530	Statement	addr32	748:33:17938:17943	5129348	7	True				
ANR	5129531	Statement	)	748:39:17944:17944	5129348	8	True				
ANR	5129532	ExpressionStatement		748:40:17945:17945	5129348	9	True				
ANR	5129533	ElseStatement	else		5129348	0					
ANR	5129534	CompoundStatement		23:9:654:654	5129348	0					
ANR	5129535	IfStatement	if ( ! SEEVALUE )		5129348	0					
ANR	5129536	Condition	! SEEVALUE	750:7:17965:17973	5129348	0	True				
ANR	5129537	UnaryOperationExpression	! SEEVALUE		5129348	0					
ANR	5129538	UnaryOperator	!		5129348	0					
ANR	5129539	Identifier	SEEVALUE		5129348	1					
ANR	5129540	CompoundStatement		24:18:674:674	5129348	1					
ANR	5129541	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	751:4:17982:18001	5129348	0	True				
ANR	5129542	CallExpression	"p -> cb_printf ( ""[ "" )"		5129348	0					
ANR	5129543	Callee	p -> cb_printf		5129348	0					
ANR	5129544	PtrMemberAccess	p -> cb_printf		5129348	0					
ANR	5129545	Identifier	p		5129348	0					
ANR	5129546	Identifier	cb_printf		5129348	1					
ANR	5129547	ArgumentList	"""[ """		5129348	1					
ANR	5129548	Argument	"""[ """		5129348	0					
ANR	5129549	PrimaryExpression	"""[ """		5129348	0					
ANR	5129550	WhileStatement	while ( size -- )		5129348	1					
ANR	5129551	Condition	size --	753:10:18018:18023	5129348	0	True				
ANR	5129552	PostIncDecOperationExpression	size --		5129348	0					
ANR	5129553	Identifier	size		5129348	0					
ANR	5129554	IncDec	--		5129348	1					
ANR	5129555	CompoundStatement		27:18:724:724	5129348	1					
ANR	5129556	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	754:4:18032:18083	5129348	0	True				
ANR	5129557	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5129348	0					
ANR	5129558	Callee	updateAddr		5129348	0					
ANR	5129559	Identifier	updateAddr		5129348	0					
ANR	5129560	ArgumentList	buf + i		5129348	1					
ANR	5129561	Argument	buf + i		5129348	0					
ANR	5129562	AdditiveExpression	buf + i		5129348	0		+			
ANR	5129563	Identifier	buf		5129348	0					
ANR	5129564	Identifier	i		5129348	1					
ANR	5129565	Argument	size - i		5129348	1					
ANR	5129566	AdditiveExpression	size - i		5129348	0		-			
ANR	5129567	Identifier	size		5129348	0					
ANR	5129568	Identifier	i		5129348	1					
ANR	5129569	Argument	endian		5129348	2					
ANR	5129570	Identifier	endian		5129348	0					
ANR	5129571	Argument	& addr		5129348	3					
ANR	5129572	UnaryOperationExpression	& addr		5129348	0					
ANR	5129573	UnaryOperator	&		5129348	0					
ANR	5129574	Identifier	addr		5129348	1					
ANR	5129575	Argument	NULL		5129348	4					
ANR	5129576	Identifier	NULL		5129348	0					
ANR	5129577	ExpressionStatement	addr32 = ( ut32 ) addr	755:4:18089:18108	5129348	1	True				
ANR	5129578	AssignmentExpression	addr32 = ( ut32 ) addr		5129348	0		=			
ANR	5129579	Identifier	addr32		5129348	0					
ANR	5129580	CastExpression	( ut32 ) addr		5129348	1					
ANR	5129581	CastTarget	ut32		5129348	0					
ANR	5129582	Identifier	addr		5129348	1					
ANR	5129583	IfStatement	if ( elem == - 1 || elem == 0 )		5129348	2					
ANR	5129584	Condition	elem == - 1 || elem == 0	756:8:18118:18140	5129348	0	True				
ANR	5129585	OrExpression	elem == - 1 || elem == 0		5129348	0		||			
ANR	5129586	EqualityExpression	elem == - 1		5129348	0		==			
ANR	5129587	Identifier	elem		5129348	0					
ANR	5129588	UnaryOperationExpression	- 1		5129348	1					
ANR	5129589	UnaryOperator	-		5129348	0					
ANR	5129590	PrimaryExpression	1		5129348	1					
ANR	5129591	EqualityExpression	elem == 0		5129348	1		==			
ANR	5129592	Identifier	elem		5129348	0					
ANR	5129593	PrimaryExpression	0		5129348	1					
ANR	5129594	CompoundStatement		30:33:841:841	5129348	1					
ANR	5129595	Statement	p	757:5:18150:18150	5129348	0	True				
ANR	5129596	Statement	->	757:6:18151:18152	5129348	1	True				
ANR	5129597	Statement	cb_printf	757:8:18153:18161	5129348	2	True				
ANR	5129598	Statement	(	757:18:18163:18163	5129348	3	True				
ANR	5129599	Statement	"""0%08"""	757:19:18164:18169	5129348	4	True				
ANR	5129600	Statement	PFMT64o	757:25:18170:18176	5129348	5	True				
ANR	5129601	Statement	","	757:32:18177:18177	5129348	6	True				
ANR	5129602	Statement	addr32	757:34:18179:18184	5129348	7	True				
ANR	5129603	Statement	)	757:40:18185:18185	5129348	8	True				
ANR	5129604	ExpressionStatement		757:41:18186:18186	5129348	9	True				
ANR	5129605	IfStatement	if ( elem == 0 )		5129348	10					
ANR	5129606	Condition	elem == 0	758:9:18197:18205	5129348	0	True				
ANR	5129607	EqualityExpression	elem == 0		5129348	0		==			
ANR	5129608	Identifier	elem		5129348	0					
ANR	5129609	PrimaryExpression	0		5129348	1					
ANR	5129610	CompoundStatement		32:20:906:906	5129348	1					
ANR	5129611	ExpressionStatement	elem = - 2	759:6:18216:18225	5129348	0	True				
ANR	5129612	AssignmentExpression	elem = - 2		5129348	0		=			
ANR	5129613	Identifier	elem		5129348	0					
ANR	5129614	UnaryOperationExpression	- 2		5129348	1					
ANR	5129615	UnaryOperator	-		5129348	0					
ANR	5129616	PrimaryExpression	2		5129348	1					
ANR	5129617	IfStatement	if ( size != 0 && elem == - 1 )		5129348	3					
ANR	5129618	Condition	size != 0 && elem == - 1	762:8:18248:18270	5129348	0	True				
ANR	5129619	AndExpression	size != 0 && elem == - 1		5129348	0		&&			
ANR	5129620	EqualityExpression	size != 0		5129348	0		!=			
ANR	5129621	Identifier	size		5129348	0					
ANR	5129622	PrimaryExpression	0		5129348	1					
ANR	5129623	EqualityExpression	elem == - 1		5129348	1		==			
ANR	5129624	Identifier	elem		5129348	0					
ANR	5129625	UnaryOperationExpression	- 1		5129348	1					
ANR	5129626	UnaryOperator	-		5129348	0					
ANR	5129627	PrimaryExpression	1		5129348	1					
ANR	5129628	CompoundStatement		36:33:971:971	5129348	1					
ANR	5129629	ExpressionStatement	"p -> cb_printf ( "", "" )"	763:5:18280:18299	5129348	0	True				
ANR	5129630	CallExpression	"p -> cb_printf ( "", "" )"		5129348	0					
ANR	5129631	Callee	p -> cb_printf		5129348	0					
ANR	5129632	PtrMemberAccess	p -> cb_printf		5129348	0					
ANR	5129633	Identifier	p		5129348	0					
ANR	5129634	Identifier	cb_printf		5129348	1					
ANR	5129635	ArgumentList	""", """		5129348	1					
ANR	5129636	Argument	""", """		5129348	0					
ANR	5129637	PrimaryExpression	""", """		5129348	0					
ANR	5129638	IfStatement	if ( elem > - 1 )		5129348	4					
ANR	5129639	Condition	elem > - 1	765:8:18315:18323	5129348	0	True				
ANR	5129640	RelationalExpression	elem > - 1		5129348	0		>			
ANR	5129641	Identifier	elem		5129348	0					
ANR	5129642	UnaryOperationExpression	- 1		5129348	1					
ANR	5129643	UnaryOperator	-		5129348	0					
ANR	5129644	PrimaryExpression	1		5129348	1					
ANR	5129645	CompoundStatement		39:19:1024:1024	5129348	1					
ANR	5129646	ExpressionStatement	elem --	766:5:18333:18339	5129348	0	True				
ANR	5129647	PostIncDecOperationExpression	elem --		5129348	0					
ANR	5129648	Identifier	elem		5129348	0					
ANR	5129649	IncDec	--		5129348	1					
ANR	5129650	ExpressionStatement	i += 4	768:4:18351:18355	5129348	5	True				
ANR	5129651	AssignmentExpression	i += 4		5129348	0		+=			
ANR	5129652	Identifier	i		5129348	0					
ANR	5129653	PrimaryExpression	4		5129348	1					
ANR	5129654	IfStatement	if ( ! SEEVALUE )		5129348	2					
ANR	5129655	Condition	! SEEVALUE	770:7:18369:18377	5129348	0	True				
ANR	5129656	UnaryOperationExpression	! SEEVALUE		5129348	0					
ANR	5129657	UnaryOperator	!		5129348	0					
ANR	5129658	Identifier	SEEVALUE		5129348	1					
ANR	5129659	CompoundStatement		44:18:1078:1078	5129348	1					
ANR	5129660	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	771:4:18386:18405	5129348	0	True				
ANR	5129661	CallExpression	"p -> cb_printf ( "" ]"" )"		5129348	0					
ANR	5129662	Callee	p -> cb_printf		5129348	0					
ANR	5129663	PtrMemberAccess	p -> cb_printf		5129348	0					
ANR	5129664	Identifier	p		5129348	0					
ANR	5129665	Identifier	cb_printf		5129348	1					
ANR	5129666	ArgumentList	""" ]"""		5129348	1					
ANR	5129667	Argument	""" ]"""		5129348	0					
ANR	5129668	PrimaryExpression	""" ]"""		5129348	0					
ANR	5129669	ElseStatement	else		5129348	0					
ANR	5129670	IfStatement	if ( MUSTSEEJSON )		5129348	0					
ANR	5129671	Condition	MUSTSEEJSON	774:12:18428:18438	5129348	0	True				
ANR	5129672	Identifier	MUSTSEEJSON		5129348	0					
ANR	5129673	CompoundStatement		49:2:1143:1167	5129348	1					
ANR	5129674	IdentifierDeclStatement	ut32 addr32 = ( ut32 ) addr ;	775:2:18445:18469	5129348	0	True				
ANR	5129675	IdentifierDecl	addr32 = ( ut32 ) addr		5129348	0					
ANR	5129676	IdentifierDeclType	ut32		5129348	0					
ANR	5129677	Identifier	addr32		5129348	1					
ANR	5129678	AssignmentExpression	addr32 = ( ut32 ) addr		5129348	2		=			
ANR	5129679	Identifier	addr32		5129348	0					
ANR	5129680	CastExpression	( ut32 ) addr		5129348	1					
ANR	5129681	CastTarget	ut32		5129348	0					
ANR	5129682	Identifier	addr		5129348	1					
ANR	5129683	IfStatement	if ( size == - 1 )		5129348	1					
ANR	5129684	Condition	size == - 1	776:6:18477:18486	5129348	0	True				
ANR	5129685	EqualityExpression	size == - 1		5129348	0		==			
ANR	5129686	Identifier	size		5129348	0					
ANR	5129687	UnaryOperationExpression	- 1		5129348	1					
ANR	5129688	UnaryOperator	-		5129348	0					
ANR	5129689	PrimaryExpression	1		5129348	1					
ANR	5129690	CompoundStatement		50:18:1187:1187	5129348	1					
ANR	5129691	ExpressionStatement	"p -> cb_printf ( ""%d"" , addr32 )"	777:3:18494:18521	5129348	0	True				
ANR	5129692	CallExpression	"p -> cb_printf ( ""%d"" , addr32 )"		5129348	0					
ANR	5129693	Callee	p -> cb_printf		5129348	0					
ANR	5129694	PtrMemberAccess	p -> cb_printf		5129348	0					
ANR	5129695	Identifier	p		5129348	0					
ANR	5129696	Identifier	cb_printf		5129348	1					
ANR	5129697	ArgumentList	"""%d"""		5129348	1					
ANR	5129698	Argument	"""%d"""		5129348	0					
ANR	5129699	PrimaryExpression	"""%d"""		5129348	0					
ANR	5129700	Argument	addr32		5129348	1					
ANR	5129701	Identifier	addr32		5129348	0					
ANR	5129702	ElseStatement	else		5129348	0					
ANR	5129703	CompoundStatement		52:9:1230:1230	5129348	0					
ANR	5129704	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	779:3:18537:18556	5129348	0	True				
ANR	5129705	CallExpression	"p -> cb_printf ( ""[ "" )"		5129348	0					
ANR	5129706	Callee	p -> cb_printf		5129348	0					
ANR	5129707	PtrMemberAccess	p -> cb_printf		5129348	0					
ANR	5129708	Identifier	p		5129348	0					
ANR	5129709	Identifier	cb_printf		5129348	1					
ANR	5129710	ArgumentList	"""[ """		5129348	1					
ANR	5129711	Argument	"""[ """		5129348	0					
ANR	5129712	PrimaryExpression	"""[ """		5129348	0					
ANR	5129713	WhileStatement	while ( size -- )		5129348	1					
ANR	5129714	Condition	size --	780:10:18568:18573	5129348	0	True				
ANR	5129715	PostIncDecOperationExpression	size --		5129348	0					
ANR	5129716	Identifier	size		5129348	0					
ANR	5129717	IncDec	--		5129348	1					
ANR	5129718	CompoundStatement		54:18:1274:1274	5129348	1					
ANR	5129719	ExpressionStatement	"updateAddr ( buf , i , endian , & addr , NULL )"	781:4:18582:18622	5129348	0	True				
ANR	5129720	CallExpression	"updateAddr ( buf , i , endian , & addr , NULL )"		5129348	0					
ANR	5129721	Callee	updateAddr		5129348	0					
ANR	5129722	Identifier	updateAddr		5129348	0					
ANR	5129723	ArgumentList	buf		5129348	1					
ANR	5129724	Argument	buf		5129348	0					
ANR	5129725	Identifier	buf		5129348	0					
ANR	5129726	Argument	i		5129348	1					
ANR	5129727	Identifier	i		5129348	0					
ANR	5129728	Argument	endian		5129348	2					
ANR	5129729	Identifier	endian		5129348	0					
ANR	5129730	Argument	& addr		5129348	3					
ANR	5129731	UnaryOperationExpression	& addr		5129348	0					
ANR	5129732	UnaryOperator	&		5129348	0					
ANR	5129733	Identifier	addr		5129348	1					
ANR	5129734	Argument	NULL		5129348	4					
ANR	5129735	Identifier	NULL		5129348	0					
ANR	5129736	ExpressionStatement	addr32 = ( ut32 ) addr	782:4:18628:18647	5129348	1	True				
ANR	5129737	AssignmentExpression	addr32 = ( ut32 ) addr		5129348	0		=			
ANR	5129738	Identifier	addr32		5129348	0					
ANR	5129739	CastExpression	( ut32 ) addr		5129348	1					
ANR	5129740	CastTarget	ut32		5129348	0					
ANR	5129741	Identifier	addr		5129348	1					
ANR	5129742	IfStatement	if ( elem == - 1 || elem == 0 )		5129348	2					
ANR	5129743	Condition	elem == - 1 || elem == 0	783:8:18657:18679	5129348	0	True				
ANR	5129744	OrExpression	elem == - 1 || elem == 0		5129348	0		||			
ANR	5129745	EqualityExpression	elem == - 1		5129348	0		==			
ANR	5129746	Identifier	elem		5129348	0					
ANR	5129747	UnaryOperationExpression	- 1		5129348	1					
ANR	5129748	UnaryOperator	-		5129348	0					
ANR	5129749	PrimaryExpression	1		5129348	1					
ANR	5129750	EqualityExpression	elem == 0		5129348	1		==			
ANR	5129751	Identifier	elem		5129348	0					
ANR	5129752	PrimaryExpression	0		5129348	1					
ANR	5129753	CompoundStatement		57:33:1380:1380	5129348	1					
ANR	5129754	ExpressionStatement	"p -> cb_printf ( ""%d"" , addr32 )"	784:5:18689:18716	5129348	0	True				
ANR	5129755	CallExpression	"p -> cb_printf ( ""%d"" , addr32 )"		5129348	0					
ANR	5129756	Callee	p -> cb_printf		5129348	0					
ANR	5129757	PtrMemberAccess	p -> cb_printf		5129348	0					
ANR	5129758	Identifier	p		5129348	0					
ANR	5129759	Identifier	cb_printf		5129348	1					
ANR	5129760	ArgumentList	"""%d"""		5129348	1					
ANR	5129761	Argument	"""%d"""		5129348	0					
ANR	5129762	PrimaryExpression	"""%d"""		5129348	0					
ANR	5129763	Argument	addr32		5129348	1					
ANR	5129764	Identifier	addr32		5129348	0					
ANR	5129765	IfStatement	if ( elem == 0 )		5129348	1					
ANR	5129766	Condition	elem == 0	785:9:18727:18735	5129348	0	True				
ANR	5129767	EqualityExpression	elem == 0		5129348	0		==			
ANR	5129768	Identifier	elem		5129348	0					
ANR	5129769	PrimaryExpression	0		5129348	1					
ANR	5129770	CompoundStatement		59:20:1436:1436	5129348	1					
ANR	5129771	ExpressionStatement	elem = - 2	786:6:18746:18755	5129348	0	True				
ANR	5129772	AssignmentExpression	elem = - 2		5129348	0		=			
ANR	5129773	Identifier	elem		5129348	0					
ANR	5129774	UnaryOperationExpression	- 2		5129348	1					
ANR	5129775	UnaryOperator	-		5129348	0					
ANR	5129776	PrimaryExpression	2		5129348	1					
ANR	5129777	IfStatement	if ( size != 0 && elem == - 1 )		5129348	3					
ANR	5129778	Condition	size != 0 && elem == - 1	789:8:18778:18800	5129348	0	True				
ANR	5129779	AndExpression	size != 0 && elem == - 1		5129348	0		&&			
ANR	5129780	EqualityExpression	size != 0		5129348	0		!=			
ANR	5129781	Identifier	size		5129348	0					
ANR	5129782	PrimaryExpression	0		5129348	1					
ANR	5129783	EqualityExpression	elem == - 1		5129348	1		==			
ANR	5129784	Identifier	elem		5129348	0					
ANR	5129785	UnaryOperationExpression	- 1		5129348	1					
ANR	5129786	UnaryOperator	-		5129348	0					
ANR	5129787	PrimaryExpression	1		5129348	1					
ANR	5129788	CompoundStatement		63:33:1501:1501	5129348	1					
ANR	5129789	ExpressionStatement	"p -> cb_printf ( "", "" )"	790:5:18810:18829	5129348	0	True				
ANR	5129790	CallExpression	"p -> cb_printf ( "", "" )"		5129348	0					
ANR	5129791	Callee	p -> cb_printf		5129348	0					
ANR	5129792	PtrMemberAccess	p -> cb_printf		5129348	0					
ANR	5129793	Identifier	p		5129348	0					
ANR	5129794	Identifier	cb_printf		5129348	1					
ANR	5129795	ArgumentList	""", """		5129348	1					
ANR	5129796	Argument	""", """		5129348	0					
ANR	5129797	PrimaryExpression	""", """		5129348	0					
ANR	5129798	IfStatement	if ( elem > - 1 )		5129348	4					
ANR	5129799	Condition	elem > - 1	792:8:18845:18853	5129348	0	True				
ANR	5129800	RelationalExpression	elem > - 1		5129348	0		>			
ANR	5129801	Identifier	elem		5129348	0					
ANR	5129802	UnaryOperationExpression	- 1		5129348	1					
ANR	5129803	UnaryOperator	-		5129348	0					
ANR	5129804	PrimaryExpression	1		5129348	1					
ANR	5129805	CompoundStatement		66:19:1554:1554	5129348	1					
ANR	5129806	ExpressionStatement	elem --	793:5:18863:18869	5129348	0	True				
ANR	5129807	PostIncDecOperationExpression	elem --		5129348	0					
ANR	5129808	Identifier	elem		5129348	0					
ANR	5129809	IncDec	--		5129348	1					
ANR	5129810	ExpressionStatement	i += 4	795:4:18881:18885	5129348	5	True				
ANR	5129811	AssignmentExpression	i += 4		5129348	0		+=			
ANR	5129812	Identifier	i		5129348	0					
ANR	5129813	PrimaryExpression	4		5129348	1					
ANR	5129814	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	797:3:18895:18914	5129348	2	True				
ANR	5129815	CallExpression	"p -> cb_printf ( "" ]"" )"		5129348	0					
ANR	5129816	Callee	p -> cb_printf		5129348	0					
ANR	5129817	PtrMemberAccess	p -> cb_printf		5129348	0					
ANR	5129818	Identifier	p		5129348	0					
ANR	5129819	Identifier	cb_printf		5129348	1					
ANR	5129820	ArgumentList	""" ]"""		5129348	1					
ANR	5129821	Argument	""" ]"""		5129348	0					
ANR	5129822	PrimaryExpression	""" ]"""		5129348	0					
ANR	5129823	ExpressionStatement	"p -> cb_printf ( ""}"" )"	799:2:18922:18940	5129348	2	True				
ANR	5129824	CallExpression	"p -> cb_printf ( ""}"" )"		5129348	0					
ANR	5129825	Callee	p -> cb_printf		5129348	0					
ANR	5129826	PtrMemberAccess	p -> cb_printf		5129348	0					
ANR	5129827	Identifier	p		5129348	0					
ANR	5129828	Identifier	cb_printf		5129348	1					
ANR	5129829	ArgumentList	"""}"""		5129348	1					
ANR	5129830	Argument	"""}"""		5129348	0					
ANR	5129831	PrimaryExpression	"""}"""		5129348	0					
ANR	5129832	ReturnType	static void		5129348	1					
ANR	5129833	Identifier	r_print_format_octal		5129348	2					
ANR	5129834	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5129348	3					
ANR	5129835	Parameter	const RPrint * p	726:33:17201:17215	5129348	0	True				
ANR	5129836	ParameterType	const RPrint *		5129348	0					
ANR	5129837	Identifier	p		5129348	1					
ANR	5129838	Parameter	int endian	726:50:17218:17227	5129348	1	True				
ANR	5129839	ParameterType	int		5129348	0					
ANR	5129840	Identifier	endian		5129348	1					
ANR	5129841	Parameter	int mode	726:62:17230:17237	5129348	2	True				
ANR	5129842	ParameterType	int		5129348	0					
ANR	5129843	Identifier	mode		5129348	1					
ANR	5129844	Parameter	const char * setval	727:2:17242:17259	5129348	3	True				
ANR	5129845	ParameterType	const char *		5129348	0					
ANR	5129846	Identifier	setval		5129348	1					
ANR	5129847	Parameter	ut64 seeki	727:22:17262:17271	5129348	4	True				
ANR	5129848	ParameterType	ut64		5129348	0					
ANR	5129849	Identifier	seeki		5129348	1					
ANR	5129850	Parameter	ut8 * buf	727:34:17274:17281	5129348	5	True				
ANR	5129851	ParameterType	ut8 *		5129348	0					
ANR	5129852	Identifier	buf		5129348	1					
ANR	5129853	Parameter	int i	727:44:17284:17288	5129348	6	True				
ANR	5129854	ParameterType	int		5129348	0					
ANR	5129855	Identifier	i		5129348	1					
ANR	5129856	Parameter	int size	727:51:17291:17298	5129348	7	True				
ANR	5129857	ParameterType	int		5129348	0					
ANR	5129858	Identifier	size		5129348	1					
ANR	5129859	CFGEntryNode	ENTRY		5129348		True				
ANR	5129860	CFGExitNode	EXIT		5129348		True				
ANR	5129861	Symbol	elem		5129348						
ANR	5129862	Symbol	NULL		5129348						
ANR	5129863	Symbol	& addr		5129348						
ANR	5129864	Symbol	MUSTSEEJSON		5129348						
ANR	5129865	Symbol	MUSTSEESTRUCT		5129348						
ANR	5129866	Symbol	addr32		5129348						
ANR	5129867	Symbol	i		5129348						
ANR	5129868	Symbol	ISQUIET		5129348						
ANR	5129869	Symbol	endian		5129348						
ANR	5129870	Symbol	MUSTSEE		5129348						
ANR	5129871	Symbol	p		5129348						
ANR	5129872	Symbol	mode		5129348						
ANR	5129873	Symbol	ARRAYINDEX_COEF		5129348						
ANR	5129874	Symbol	buf		5129348						
ANR	5129875	Symbol	size		5129348						
ANR	5129876	Symbol	seeki		5129348						
ANR	5129877	Symbol	SEEVALUE		5129348						
ANR	5129878	Symbol	R_PRINT_DOT		5129348						
ANR	5129879	Symbol	setval		5129348						
ANR	5129880	Symbol	addr		5129348						
ANR	5129881	Symbol	MUSTSET		5129348						
ANR	5129882	Function	r_print_format_hexflag	803:0:18948:20794							
ANR	5129883	FunctionDef	"r_print_format_hexflag (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5129882	0					
ANR	5129884	CompoundStatement		804:61:19083:20794	5129882	0					
ANR	5129885	IdentifierDeclStatement	ut64 addr = 0 ;	805:1:19086:19099	5129882	0	True				
ANR	5129886	IdentifierDecl	addr = 0		5129882	0					
ANR	5129887	IdentifierDeclType	ut64		5129882	0					
ANR	5129888	Identifier	addr		5129882	1					
ANR	5129889	AssignmentExpression	addr = 0		5129882	2		=			
ANR	5129890	Identifier	addr		5129882	0					
ANR	5129891	PrimaryExpression	0		5129882	1					
ANR	5129892	IdentifierDeclStatement	int elem = - 1 ;	806:1:19102:19115	5129882	1	True				
ANR	5129893	IdentifierDecl	elem = - 1		5129882	0					
ANR	5129894	IdentifierDeclType	int		5129882	0					
ANR	5129895	Identifier	elem		5129882	1					
ANR	5129896	AssignmentExpression	elem = - 1		5129882	2		=			
ANR	5129897	Identifier	elem		5129882	0					
ANR	5129898	UnaryOperationExpression	- 1		5129882	1					
ANR	5129899	UnaryOperator	-		5129882	0					
ANR	5129900	PrimaryExpression	1		5129882	1					
ANR	5129901	IfStatement	if ( size >= ARRAYINDEX_COEF )		5129882	2					
ANR	5129902	Condition	size >= ARRAYINDEX_COEF	807:5:19122:19144	5129882	0	True				
ANR	5129903	RelationalExpression	size >= ARRAYINDEX_COEF		5129882	0		>=			
ANR	5129904	Identifier	size		5129882	0					
ANR	5129905	Identifier	ARRAYINDEX_COEF		5129882	1					
ANR	5129906	CompoundStatement		4:30:63:63	5129882	1					
ANR	5129907	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	808:2:19151:19180	5129882	0	True				
ANR	5129908	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5129882	0		=			
ANR	5129909	Identifier	elem		5129882	0					
ANR	5129910	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5129882	1		-			
ANR	5129911	MultiplicativeExpression	size / ARRAYINDEX_COEF		5129882	0		/			
ANR	5129912	Identifier	size		5129882	0					
ANR	5129913	Identifier	ARRAYINDEX_COEF		5129882	1					
ANR	5129914	PrimaryExpression	1		5129882	1					
ANR	5129915	ExpressionStatement	size %= ARRAYINDEX_COEF	809:2:19184:19207	5129882	1	True				
ANR	5129916	AssignmentExpression	size %= ARRAYINDEX_COEF		5129882	0		%=			
ANR	5129917	Identifier	size		5129882	0					
ANR	5129918	Identifier	ARRAYINDEX_COEF		5129882	1					
ANR	5129919	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	811:1:19213:19264	5129882	3	True				
ANR	5129920	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5129882	0					
ANR	5129921	Callee	updateAddr		5129882	0					
ANR	5129922	Identifier	updateAddr		5129882	0					
ANR	5129923	ArgumentList	buf + i		5129882	1					
ANR	5129924	Argument	buf + i		5129882	0					
ANR	5129925	AdditiveExpression	buf + i		5129882	0		+			
ANR	5129926	Identifier	buf		5129882	0					
ANR	5129927	Identifier	i		5129882	1					
ANR	5129928	Argument	size - i		5129882	1					
ANR	5129929	AdditiveExpression	size - i		5129882	0		-			
ANR	5129930	Identifier	size		5129882	0					
ANR	5129931	Identifier	i		5129882	1					
ANR	5129932	Argument	endian		5129882	2					
ANR	5129933	Identifier	endian		5129882	0					
ANR	5129934	Argument	& addr		5129882	3					
ANR	5129935	UnaryOperationExpression	& addr		5129882	0					
ANR	5129936	UnaryOperator	&		5129882	0					
ANR	5129937	Identifier	addr		5129882	1					
ANR	5129938	Argument	NULL		5129882	4					
ANR	5129939	Identifier	NULL		5129882	0					
ANR	5129940	IfStatement	if ( MUSTSET )		5129882	4					
ANR	5129941	Condition	MUSTSET	812:5:19271:19277	5129882	0	True				
ANR	5129942	Identifier	MUSTSET		5129882	0					
ANR	5129943	CompoundStatement		9:14:196:196	5129882	1					
ANR	5129944	Statement	p	813:2:19284:19284	5129882	0	True				
ANR	5129945	Statement	->	813:3:19285:19286	5129882	1	True				
ANR	5129946	Statement	cb_printf	813:5:19287:19295	5129882	2	True				
ANR	5129947	Statement	(	813:15:19297:19297	5129882	3	True				
ANR	5129948	Statement	"""wv4 %s @ 0x%08"""	813:16:19298:19313	5129882	4	True				
ANR	5129949	Statement	PFMT64x	813:32:19314:19320	5129882	5	True				
ANR	5129950	Statement	"""\\n"""	813:39:19321:19324	5129882	6	True				
ANR	5129951	Statement	","	813:43:19325:19325	5129882	7	True				
ANR	5129952	Statement	setval	813:45:19327:19332	5129882	8	True				
ANR	5129953	Statement	","	813:51:19333:19333	5129882	9	True				
ANR	5129954	Statement	seeki	813:53:19335:19339	5129882	10	True				
ANR	5129955	Statement	+	813:58:19340:19340	5129882	11	True				
ANR	5129956	Statement	(	813:59:19341:19341	5129882	12	True				
ANR	5129957	Statement	(	813:60:19342:19342	5129882	13	True				
ANR	5129958	Statement	elem	813:61:19343:19346	5129882	14	True				
ANR	5129959	Statement	>=	813:65:19347:19348	5129882	15	True				
ANR	5129960	Statement	0	813:67:19349:19349	5129882	16	True				
ANR	5129961	Statement	)	813:68:19350:19350	5129882	17	True				
ANR	5129962	Statement	?	813:69:19351:19351	5129882	18	True				
ANR	5129963	Statement	elem	813:70:19352:19355	5129882	19	True				
ANR	5129964	Statement	*	813:74:19356:19356	5129882	20	True				
ANR	5129965	Label	4 :	813:75:19357:19358	5129882	21	True				
ANR	5129966	Statement	0	813:77:19359:19359	5129882	22	True				
ANR	5129967	Statement	)	813:78:19360:19360	5129882	23	True				
ANR	5129968	Statement	)	813:79:19361:19361	5129882	24	True				
ANR	5129969	ExpressionStatement		813:80:19362:19362	5129882	25	True				
ANR	5129970	ElseStatement	else		5129882	0					
ANR	5129971	IfStatement	if ( ( mode & R_PRINT_DOT ) || MUSTSEESTRUCT )		5129882	0					
ANR	5129972	Condition	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT	814:12:19376:19412	5129882	0	True				
ANR	5129973	OrExpression	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT		5129882	0		||			
ANR	5129974	BitAndExpression	mode & R_PRINT_DOT		5129882	0		&			
ANR	5129975	Identifier	mode		5129882	0					
ANR	5129976	Identifier	R_PRINT_DOT		5129882	1					
ANR	5129977	Identifier	MUSTSEESTRUCT		5129882	1					
ANR	5129978	CompoundStatement		11:51:331:331	5129882	1					
ANR	5129979	Statement	p	815:2:19419:19419	5129882	0	True				
ANR	5129980	Statement	->	815:3:19420:19421	5129882	1	True				
ANR	5129981	Statement	cb_printf	815:5:19422:19430	5129882	2	True				
ANR	5129982	Statement	(	815:15:19432:19432	5129882	3	True				
ANR	5129983	Statement	"""0x%08"""	815:16:19433:19439	5129882	4	True				
ANR	5129984	Statement	PFMT64x	815:23:19440:19446	5129882	5	True				
ANR	5129985	Statement	","	815:30:19447:19447	5129882	6	True				
ANR	5129986	Statement	addr	815:32:19449:19452	5129882	7	True				
ANR	5129987	Statement	&	815:37:19454:19454	5129882	8	True				
ANR	5129988	Statement	UT32_MAX	815:39:19456:19463	5129882	9	True				
ANR	5129989	Statement	)	815:47:19464:19464	5129882	10	True				
ANR	5129990	ExpressionStatement		815:48:19465:19465	5129882	11	True				
ANR	5129991	ElseStatement	else		5129882	0					
ANR	5129992	IfStatement	if ( MUSTSEE )		5129882	0					
ANR	5129993	Condition	MUSTSEE	816:12:19479:19485	5129882	0	True				
ANR	5129994	Identifier	MUSTSEE		5129882	0					
ANR	5129995	CompoundStatement		14:2:408:432	5129882	1					
ANR	5129996	IdentifierDeclStatement	ut32 addr32 = ( ut32 ) addr ;	817:2:19492:19516	5129882	0	True				
ANR	5129997	IdentifierDecl	addr32 = ( ut32 ) addr		5129882	0					
ANR	5129998	IdentifierDeclType	ut32		5129882	0					
ANR	5129999	Identifier	addr32		5129882	1					
ANR	5130000	AssignmentExpression	addr32 = ( ut32 ) addr		5129882	2		=			
ANR	5130001	Identifier	addr32		5129882	0					
ANR	5130002	CastExpression	( ut32 ) addr		5129882	1					
ANR	5130003	CastTarget	ut32		5129882	0					
ANR	5130004	Identifier	addr		5129882	1					
ANR	5130005	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5129882	1					
ANR	5130006	Condition	! SEEVALUE && ! ISQUIET	818:6:19524:19544	5129882	0	True				
ANR	5130007	AndExpression	! SEEVALUE && ! ISQUIET		5129882	0		&&			
ANR	5130008	UnaryOperationExpression	! SEEVALUE		5129882	0					
ANR	5130009	UnaryOperator	!		5129882	0					
ANR	5130010	Identifier	SEEVALUE		5129882	1					
ANR	5130011	UnaryOperationExpression	! ISQUIET		5129882	1					
ANR	5130012	UnaryOperator	!		5129882	0					
ANR	5130013	Identifier	ISQUIET		5129882	1					
ANR	5130014	CompoundStatement		15:29:463:463	5129882	1					
ANR	5130015	Statement	p	819:3:19552:19552	5129882	0	True				
ANR	5130016	Statement	->	819:4:19553:19554	5129882	1	True				
ANR	5130017	Statement	cb_printf	819:6:19555:19563	5129882	2	True				
ANR	5130018	Statement	(	819:16:19565:19565	5129882	3	True				
ANR	5130019	Statement	"""0x%08"""	819:17:19566:19572	5129882	4	True				
ANR	5130020	Statement	PFMT64x	819:25:19574:19580	5129882	5	True				
ANR	5130021	Statement	""" = """	819:33:19582:19586	5129882	6	True				
ANR	5130022	Statement	","	819:38:19587:19587	5129882	7	True				
ANR	5130023	Statement	seeki	819:40:19589:19593	5129882	8	True				
ANR	5130024	Statement	+	819:46:19595:19595	5129882	9	True				
ANR	5130025	Statement	(	819:48:19597:19597	5129882	10	True				
ANR	5130026	Statement	(	819:49:19598:19598	5129882	11	True				
ANR	5130027	Statement	elem	819:50:19599:19602	5129882	12	True				
ANR	5130028	Statement	>=	819:55:19604:19605	5129882	13	True				
ANR	5130029	Statement	0	819:58:19607:19607	5129882	14	True				
ANR	5130030	Statement	)	819:59:19608:19608	5129882	15	True				
ANR	5130031	Statement	?	819:61:19610:19610	5129882	16	True				
ANR	5130032	Statement	elem	819:63:19612:19615	5129882	17	True				
ANR	5130033	Statement	*	819:68:19617:19617	5129882	18	True				
ANR	5130034	Label	4 :	819:70:19619:19621	5129882	19	True				
ANR	5130035	Statement	0	819:74:19623:19623	5129882	20	True				
ANR	5130036	Statement	)	819:75:19624:19624	5129882	21	True				
ANR	5130037	Statement	)	819:76:19625:19625	5129882	22	True				
ANR	5130038	ExpressionStatement		819:77:19626:19626	5129882	23	True				
ANR	5130039	IfStatement	if ( size == - 1 )		5129882	2					
ANR	5130040	Condition	size == - 1	821:6:19638:19645	5129882	0	True				
ANR	5130041	EqualityExpression	size == - 1		5129882	0		==			
ANR	5130042	Identifier	size		5129882	0					
ANR	5130043	UnaryOperationExpression	- 1		5129882	1					
ANR	5130044	UnaryOperator	-		5129882	0					
ANR	5130045	PrimaryExpression	1		5129882	1					
ANR	5130046	CompoundStatement		18:16:564:564	5129882	1					
ANR	5130047	IfStatement	if ( ISQUIET && ( addr32 == UT32_MAX ) )		5129882	0					
ANR	5130048	Condition	ISQUIET && ( addr32 == UT32_MAX )	822:7:19657:19687	5129882	0	True				
ANR	5130049	AndExpression	ISQUIET && ( addr32 == UT32_MAX )		5129882	0		&&			
ANR	5130050	Identifier	ISQUIET		5129882	0					
ANR	5130051	EqualityExpression	addr32 == UT32_MAX		5129882	1		==			
ANR	5130052	Identifier	addr32		5129882	0					
ANR	5130053	Identifier	UT32_MAX		5129882	1					
ANR	5130054	CompoundStatement		19:40:606:606	5129882	1					
ANR	5130055	ExpressionStatement	"p -> cb_printf ( ""-1"" )"	823:4:19696:19715	5129882	0	True				
ANR	5130056	CallExpression	"p -> cb_printf ( ""-1"" )"		5129882	0					
ANR	5130057	Callee	p -> cb_printf		5129882	0					
ANR	5130058	PtrMemberAccess	p -> cb_printf		5129882	0					
ANR	5130059	Identifier	p		5129882	0					
ANR	5130060	Identifier	cb_printf		5129882	1					
ANR	5130061	ArgumentList	"""-1"""		5129882	1					
ANR	5130062	Argument	"""-1"""		5129882	0					
ANR	5130063	PrimaryExpression	"""-1"""		5129882	0					
ANR	5130064	ElseStatement	else		5129882	0					
ANR	5130065	CompoundStatement		21:10:643:643	5129882	0					
ANR	5130066	Statement	p	825:4:19733:19733	5129882	0	True				
ANR	5130067	Statement	->	825:5:19734:19735	5129882	1	True				
ANR	5130068	Statement	cb_printf	825:7:19736:19744	5129882	2	True				
ANR	5130069	Statement	(	825:17:19746:19746	5129882	3	True				
ANR	5130070	Statement	"""0x%08"""	825:18:19747:19753	5129882	4	True				
ANR	5130071	Statement	PFMT64x	825:25:19754:19760	5129882	5	True				
ANR	5130072	Statement	","	825:32:19761:19761	5129882	6	True				
ANR	5130073	Statement	(	825:34:19763:19763	5129882	7	True				
ANR	5130074	Statement	ut64	825:35:19764:19767	5129882	8	True				
ANR	5130075	Statement	)	825:39:19768:19768	5129882	9	True				
ANR	5130076	Statement	addr32	825:40:19769:19774	5129882	10	True				
ANR	5130077	Statement	)	825:46:19775:19775	5129882	11	True				
ANR	5130078	ExpressionStatement		825:47:19776:19776	5129882	12	True				
ANR	5130079	ElseStatement	else		5129882	0					
ANR	5130080	CompoundStatement		24:9:708:708	5129882	0					
ANR	5130081	IfStatement	if ( ! SEEVALUE )		5129882	0					
ANR	5130082	Condition	! SEEVALUE	828:7:19801:19809	5129882	0	True				
ANR	5130083	UnaryOperationExpression	! SEEVALUE		5129882	0					
ANR	5130084	UnaryOperator	!		5129882	0					
ANR	5130085	Identifier	SEEVALUE		5129882	1					
ANR	5130086	CompoundStatement		25:18:728:728	5129882	1					
ANR	5130087	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	829:4:19818:19837	5129882	0	True				
ANR	5130088	CallExpression	"p -> cb_printf ( ""[ "" )"		5129882	0					
ANR	5130089	Callee	p -> cb_printf		5129882	0					
ANR	5130090	PtrMemberAccess	p -> cb_printf		5129882	0					
ANR	5130091	Identifier	p		5129882	0					
ANR	5130092	Identifier	cb_printf		5129882	1					
ANR	5130093	ArgumentList	"""[ """		5129882	1					
ANR	5130094	Argument	"""[ """		5129882	0					
ANR	5130095	PrimaryExpression	"""[ """		5129882	0					
ANR	5130096	WhileStatement	while ( size -- )		5129882	1					
ANR	5130097	Condition	size --	831:10:19854:19859	5129882	0	True				
ANR	5130098	PostIncDecOperationExpression	size --		5129882	0					
ANR	5130099	Identifier	size		5129882	0					
ANR	5130100	IncDec	--		5129882	1					
ANR	5130101	CompoundStatement		28:18:778:778	5129882	1					
ANR	5130102	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	832:4:19868:19919	5129882	0	True				
ANR	5130103	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5129882	0					
ANR	5130104	Callee	updateAddr		5129882	0					
ANR	5130105	Identifier	updateAddr		5129882	0					
ANR	5130106	ArgumentList	buf + i		5129882	1					
ANR	5130107	Argument	buf + i		5129882	0					
ANR	5130108	AdditiveExpression	buf + i		5129882	0		+			
ANR	5130109	Identifier	buf		5129882	0					
ANR	5130110	Identifier	i		5129882	1					
ANR	5130111	Argument	size - i		5129882	1					
ANR	5130112	AdditiveExpression	size - i		5129882	0		-			
ANR	5130113	Identifier	size		5129882	0					
ANR	5130114	Identifier	i		5129882	1					
ANR	5130115	Argument	endian		5129882	2					
ANR	5130116	Identifier	endian		5129882	0					
ANR	5130117	Argument	& addr		5129882	3					
ANR	5130118	UnaryOperationExpression	& addr		5129882	0					
ANR	5130119	UnaryOperator	&		5129882	0					
ANR	5130120	Identifier	addr		5129882	1					
ANR	5130121	Argument	NULL		5129882	4					
ANR	5130122	Identifier	NULL		5129882	0					
ANR	5130123	ExpressionStatement	addr32 = ( ut32 ) addr	833:4:19925:19944	5129882	1	True				
ANR	5130124	AssignmentExpression	addr32 = ( ut32 ) addr		5129882	0		=			
ANR	5130125	Identifier	addr32		5129882	0					
ANR	5130126	CastExpression	( ut32 ) addr		5129882	1					
ANR	5130127	CastTarget	ut32		5129882	0					
ANR	5130128	Identifier	addr		5129882	1					
ANR	5130129	IfStatement	if ( elem == - 1 || elem == 0 )		5129882	2					
ANR	5130130	Condition	elem == - 1 || elem == 0	834:8:19954:19976	5129882	0	True				
ANR	5130131	OrExpression	elem == - 1 || elem == 0		5129882	0		||			
ANR	5130132	EqualityExpression	elem == - 1		5129882	0		==			
ANR	5130133	Identifier	elem		5129882	0					
ANR	5130134	UnaryOperationExpression	- 1		5129882	1					
ANR	5130135	UnaryOperator	-		5129882	0					
ANR	5130136	PrimaryExpression	1		5129882	1					
ANR	5130137	EqualityExpression	elem == 0		5129882	1		==			
ANR	5130138	Identifier	elem		5129882	0					
ANR	5130139	PrimaryExpression	0		5129882	1					
ANR	5130140	CompoundStatement		31:33:895:895	5129882	1					
ANR	5130141	Statement	p	835:5:19986:19986	5129882	0	True				
ANR	5130142	Statement	->	835:6:19987:19988	5129882	1	True				
ANR	5130143	Statement	cb_printf	835:8:19989:19997	5129882	2	True				
ANR	5130144	Statement	(	835:18:19999:19999	5129882	3	True				
ANR	5130145	Statement	"""0x%08"""	835:19:20000:20006	5129882	4	True				
ANR	5130146	Statement	PFMT64x	835:26:20007:20013	5129882	5	True				
ANR	5130147	Statement	","	835:33:20014:20014	5129882	6	True				
ANR	5130148	Statement	addr32	835:35:20016:20021	5129882	7	True				
ANR	5130149	Statement	)	835:41:20022:20022	5129882	8	True				
ANR	5130150	ExpressionStatement		835:42:20023:20023	5129882	9	True				
ANR	5130151	IfStatement	if ( elem == 0 )		5129882	10					
ANR	5130152	Condition	elem == 0	836:9:20034:20042	5129882	0	True				
ANR	5130153	EqualityExpression	elem == 0		5129882	0		==			
ANR	5130154	Identifier	elem		5129882	0					
ANR	5130155	PrimaryExpression	0		5129882	1					
ANR	5130156	CompoundStatement		33:20:961:961	5129882	1					
ANR	5130157	ExpressionStatement	elem = - 2	837:6:20053:20062	5129882	0	True				
ANR	5130158	AssignmentExpression	elem = - 2		5129882	0		=			
ANR	5130159	Identifier	elem		5129882	0					
ANR	5130160	UnaryOperationExpression	- 2		5129882	1					
ANR	5130161	UnaryOperator	-		5129882	0					
ANR	5130162	PrimaryExpression	2		5129882	1					
ANR	5130163	IfStatement	if ( size != 0 && elem == - 1 )		5129882	3					
ANR	5130164	Condition	size != 0 && elem == - 1	840:8:20085:20107	5129882	0	True				
ANR	5130165	AndExpression	size != 0 && elem == - 1		5129882	0		&&			
ANR	5130166	EqualityExpression	size != 0		5129882	0		!=			
ANR	5130167	Identifier	size		5129882	0					
ANR	5130168	PrimaryExpression	0		5129882	1					
ANR	5130169	EqualityExpression	elem == - 1		5129882	1		==			
ANR	5130170	Identifier	elem		5129882	0					
ANR	5130171	UnaryOperationExpression	- 1		5129882	1					
ANR	5130172	UnaryOperator	-		5129882	0					
ANR	5130173	PrimaryExpression	1		5129882	1					
ANR	5130174	CompoundStatement		37:33:1026:1026	5129882	1					
ANR	5130175	ExpressionStatement	"p -> cb_printf ( "", "" )"	841:5:20117:20136	5129882	0	True				
ANR	5130176	CallExpression	"p -> cb_printf ( "", "" )"		5129882	0					
ANR	5130177	Callee	p -> cb_printf		5129882	0					
ANR	5130178	PtrMemberAccess	p -> cb_printf		5129882	0					
ANR	5130179	Identifier	p		5129882	0					
ANR	5130180	Identifier	cb_printf		5129882	1					
ANR	5130181	ArgumentList	""", """		5129882	1					
ANR	5130182	Argument	""", """		5129882	0					
ANR	5130183	PrimaryExpression	""", """		5129882	0					
ANR	5130184	IfStatement	if ( elem > - 1 )		5129882	4					
ANR	5130185	Condition	elem > - 1	843:8:20152:20160	5129882	0	True				
ANR	5130186	RelationalExpression	elem > - 1		5129882	0		>			
ANR	5130187	Identifier	elem		5129882	0					
ANR	5130188	UnaryOperationExpression	- 1		5129882	1					
ANR	5130189	UnaryOperator	-		5129882	0					
ANR	5130190	PrimaryExpression	1		5129882	1					
ANR	5130191	CompoundStatement		40:19:1079:1079	5129882	1					
ANR	5130192	ExpressionStatement	elem --	844:5:20170:20176	5129882	0	True				
ANR	5130193	PostIncDecOperationExpression	elem --		5129882	0					
ANR	5130194	Identifier	elem		5129882	0					
ANR	5130195	IncDec	--		5129882	1					
ANR	5130196	ExpressionStatement	i += 4	846:4:20188:20192	5129882	5	True				
ANR	5130197	AssignmentExpression	i += 4		5129882	0		+=			
ANR	5130198	Identifier	i		5129882	0					
ANR	5130199	PrimaryExpression	4		5129882	1					
ANR	5130200	IfStatement	if ( ! SEEVALUE )		5129882	2					
ANR	5130201	Condition	! SEEVALUE	848:7:20206:20214	5129882	0	True				
ANR	5130202	UnaryOperationExpression	! SEEVALUE		5129882	0					
ANR	5130203	UnaryOperator	!		5129882	0					
ANR	5130204	Identifier	SEEVALUE		5129882	1					
ANR	5130205	CompoundStatement		45:18:1133:1133	5129882	1					
ANR	5130206	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	849:4:20223:20242	5129882	0	True				
ANR	5130207	CallExpression	"p -> cb_printf ( "" ]"" )"		5129882	0					
ANR	5130208	Callee	p -> cb_printf		5129882	0					
ANR	5130209	PtrMemberAccess	p -> cb_printf		5129882	0					
ANR	5130210	Identifier	p		5129882	0					
ANR	5130211	Identifier	cb_printf		5129882	1					
ANR	5130212	ArgumentList	""" ]"""		5129882	1					
ANR	5130213	Argument	""" ]"""		5129882	0					
ANR	5130214	PrimaryExpression	""" ]"""		5129882	0					
ANR	5130215	ElseStatement	else		5129882	0					
ANR	5130216	IfStatement	if ( MUSTSEEJSON )		5129882	0					
ANR	5130217	Condition	MUSTSEEJSON	852:12:20265:20275	5129882	0	True				
ANR	5130218	Identifier	MUSTSEEJSON		5129882	0					
ANR	5130219	CompoundStatement		50:2:1198:1222	5129882	1					
ANR	5130220	IdentifierDeclStatement	ut32 addr32 = ( ut32 ) addr ;	853:2:20282:20306	5129882	0	True				
ANR	5130221	IdentifierDecl	addr32 = ( ut32 ) addr		5129882	0					
ANR	5130222	IdentifierDeclType	ut32		5129882	0					
ANR	5130223	Identifier	addr32		5129882	1					
ANR	5130224	AssignmentExpression	addr32 = ( ut32 ) addr		5129882	2		=			
ANR	5130225	Identifier	addr32		5129882	0					
ANR	5130226	CastExpression	( ut32 ) addr		5129882	1					
ANR	5130227	CastTarget	ut32		5129882	0					
ANR	5130228	Identifier	addr		5129882	1					
ANR	5130229	IfStatement	if ( size == - 1 )		5129882	1					
ANR	5130230	Condition	size == - 1	854:6:20314:20323	5129882	0	True				
ANR	5130231	EqualityExpression	size == - 1		5129882	0		==			
ANR	5130232	Identifier	size		5129882	0					
ANR	5130233	UnaryOperationExpression	- 1		5129882	1					
ANR	5130234	UnaryOperator	-		5129882	0					
ANR	5130235	PrimaryExpression	1		5129882	1					
ANR	5130236	CompoundStatement		51:18:1242:1242	5129882	1					
ANR	5130237	ExpressionStatement	"p -> cb_printf ( ""%d"" , addr32 )"	855:3:20331:20358	5129882	0	True				
ANR	5130238	CallExpression	"p -> cb_printf ( ""%d"" , addr32 )"		5129882	0					
ANR	5130239	Callee	p -> cb_printf		5129882	0					
ANR	5130240	PtrMemberAccess	p -> cb_printf		5129882	0					
ANR	5130241	Identifier	p		5129882	0					
ANR	5130242	Identifier	cb_printf		5129882	1					
ANR	5130243	ArgumentList	"""%d"""		5129882	1					
ANR	5130244	Argument	"""%d"""		5129882	0					
ANR	5130245	PrimaryExpression	"""%d"""		5129882	0					
ANR	5130246	Argument	addr32		5129882	1					
ANR	5130247	Identifier	addr32		5129882	0					
ANR	5130248	ElseStatement	else		5129882	0					
ANR	5130249	CompoundStatement		53:9:1285:1285	5129882	0					
ANR	5130250	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	857:3:20374:20393	5129882	0	True				
ANR	5130251	CallExpression	"p -> cb_printf ( ""[ "" )"		5129882	0					
ANR	5130252	Callee	p -> cb_printf		5129882	0					
ANR	5130253	PtrMemberAccess	p -> cb_printf		5129882	0					
ANR	5130254	Identifier	p		5129882	0					
ANR	5130255	Identifier	cb_printf		5129882	1					
ANR	5130256	ArgumentList	"""[ """		5129882	1					
ANR	5130257	Argument	"""[ """		5129882	0					
ANR	5130258	PrimaryExpression	"""[ """		5129882	0					
ANR	5130259	WhileStatement	while ( size -- )		5129882	1					
ANR	5130260	Condition	size --	858:10:20405:20410	5129882	0	True				
ANR	5130261	PostIncDecOperationExpression	size --		5129882	0					
ANR	5130262	Identifier	size		5129882	0					
ANR	5130263	IncDec	--		5129882	1					
ANR	5130264	CompoundStatement		55:18:1329:1329	5129882	1					
ANR	5130265	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	859:4:20419:20470	5129882	0	True				
ANR	5130266	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5129882	0					
ANR	5130267	Callee	updateAddr		5129882	0					
ANR	5130268	Identifier	updateAddr		5129882	0					
ANR	5130269	ArgumentList	buf + i		5129882	1					
ANR	5130270	Argument	buf + i		5129882	0					
ANR	5130271	AdditiveExpression	buf + i		5129882	0		+			
ANR	5130272	Identifier	buf		5129882	0					
ANR	5130273	Identifier	i		5129882	1					
ANR	5130274	Argument	size - i		5129882	1					
ANR	5130275	AdditiveExpression	size - i		5129882	0		-			
ANR	5130276	Identifier	size		5129882	0					
ANR	5130277	Identifier	i		5129882	1					
ANR	5130278	Argument	endian		5129882	2					
ANR	5130279	Identifier	endian		5129882	0					
ANR	5130280	Argument	& addr		5129882	3					
ANR	5130281	UnaryOperationExpression	& addr		5129882	0					
ANR	5130282	UnaryOperator	&		5129882	0					
ANR	5130283	Identifier	addr		5129882	1					
ANR	5130284	Argument	NULL		5129882	4					
ANR	5130285	Identifier	NULL		5129882	0					
ANR	5130286	ExpressionStatement	addr32 = ( ut32 ) addr	860:4:20476:20495	5129882	1	True				
ANR	5130287	AssignmentExpression	addr32 = ( ut32 ) addr		5129882	0		=			
ANR	5130288	Identifier	addr32		5129882	0					
ANR	5130289	CastExpression	( ut32 ) addr		5129882	1					
ANR	5130290	CastTarget	ut32		5129882	0					
ANR	5130291	Identifier	addr		5129882	1					
ANR	5130292	IfStatement	if ( elem == - 1 || elem == 0 )		5129882	2					
ANR	5130293	Condition	elem == - 1 || elem == 0	861:8:20505:20527	5129882	0	True				
ANR	5130294	OrExpression	elem == - 1 || elem == 0		5129882	0		||			
ANR	5130295	EqualityExpression	elem == - 1		5129882	0		==			
ANR	5130296	Identifier	elem		5129882	0					
ANR	5130297	UnaryOperationExpression	- 1		5129882	1					
ANR	5130298	UnaryOperator	-		5129882	0					
ANR	5130299	PrimaryExpression	1		5129882	1					
ANR	5130300	EqualityExpression	elem == 0		5129882	1		==			
ANR	5130301	Identifier	elem		5129882	0					
ANR	5130302	PrimaryExpression	0		5129882	1					
ANR	5130303	CompoundStatement		58:33:1446:1446	5129882	1					
ANR	5130304	ExpressionStatement	"p -> cb_printf ( ""%d"" , addr32 )"	862:5:20537:20564	5129882	0	True				
ANR	5130305	CallExpression	"p -> cb_printf ( ""%d"" , addr32 )"		5129882	0					
ANR	5130306	Callee	p -> cb_printf		5129882	0					
ANR	5130307	PtrMemberAccess	p -> cb_printf		5129882	0					
ANR	5130308	Identifier	p		5129882	0					
ANR	5130309	Identifier	cb_printf		5129882	1					
ANR	5130310	ArgumentList	"""%d"""		5129882	1					
ANR	5130311	Argument	"""%d"""		5129882	0					
ANR	5130312	PrimaryExpression	"""%d"""		5129882	0					
ANR	5130313	Argument	addr32		5129882	1					
ANR	5130314	Identifier	addr32		5129882	0					
ANR	5130315	IfStatement	if ( elem == 0 )		5129882	1					
ANR	5130316	Condition	elem == 0	863:9:20575:20583	5129882	0	True				
ANR	5130317	EqualityExpression	elem == 0		5129882	0		==			
ANR	5130318	Identifier	elem		5129882	0					
ANR	5130319	PrimaryExpression	0		5129882	1					
ANR	5130320	CompoundStatement		60:20:1502:1502	5129882	1					
ANR	5130321	ExpressionStatement	elem = - 2	864:6:20594:20603	5129882	0	True				
ANR	5130322	AssignmentExpression	elem = - 2		5129882	0		=			
ANR	5130323	Identifier	elem		5129882	0					
ANR	5130324	UnaryOperationExpression	- 2		5129882	1					
ANR	5130325	UnaryOperator	-		5129882	0					
ANR	5130326	PrimaryExpression	2		5129882	1					
ANR	5130327	IfStatement	if ( size != 0 && elem == - 1 )		5129882	3					
ANR	5130328	Condition	size != 0 && elem == - 1	867:8:20626:20648	5129882	0	True				
ANR	5130329	AndExpression	size != 0 && elem == - 1		5129882	0		&&			
ANR	5130330	EqualityExpression	size != 0		5129882	0		!=			
ANR	5130331	Identifier	size		5129882	0					
ANR	5130332	PrimaryExpression	0		5129882	1					
ANR	5130333	EqualityExpression	elem == - 1		5129882	1		==			
ANR	5130334	Identifier	elem		5129882	0					
ANR	5130335	UnaryOperationExpression	- 1		5129882	1					
ANR	5130336	UnaryOperator	-		5129882	0					
ANR	5130337	PrimaryExpression	1		5129882	1					
ANR	5130338	CompoundStatement		64:33:1567:1567	5129882	1					
ANR	5130339	ExpressionStatement	"p -> cb_printf ( "","" )"	868:5:20658:20676	5129882	0	True				
ANR	5130340	CallExpression	"p -> cb_printf ( "","" )"		5129882	0					
ANR	5130341	Callee	p -> cb_printf		5129882	0					
ANR	5130342	PtrMemberAccess	p -> cb_printf		5129882	0					
ANR	5130343	Identifier	p		5129882	0					
ANR	5130344	Identifier	cb_printf		5129882	1					
ANR	5130345	ArgumentList	""","""		5129882	1					
ANR	5130346	Argument	""","""		5129882	0					
ANR	5130347	PrimaryExpression	""","""		5129882	0					
ANR	5130348	IfStatement	if ( elem > - 1 )		5129882	4					
ANR	5130349	Condition	elem > - 1	870:8:20692:20700	5129882	0	True				
ANR	5130350	RelationalExpression	elem > - 1		5129882	0		>			
ANR	5130351	Identifier	elem		5129882	0					
ANR	5130352	UnaryOperationExpression	- 1		5129882	1					
ANR	5130353	UnaryOperator	-		5129882	0					
ANR	5130354	PrimaryExpression	1		5129882	1					
ANR	5130355	CompoundStatement		67:19:1619:1619	5129882	1					
ANR	5130356	ExpressionStatement	elem --	871:5:20710:20716	5129882	0	True				
ANR	5130357	PostIncDecOperationExpression	elem --		5129882	0					
ANR	5130358	Identifier	elem		5129882	0					
ANR	5130359	IncDec	--		5129882	1					
ANR	5130360	ExpressionStatement	i += 4	873:4:20728:20734	5129882	5	True				
ANR	5130361	AssignmentExpression	i += 4		5129882	0		+=			
ANR	5130362	Identifier	i		5129882	0					
ANR	5130363	PrimaryExpression	4		5129882	1					
ANR	5130364	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	875:3:20744:20763	5129882	2	True				
ANR	5130365	CallExpression	"p -> cb_printf ( "" ]"" )"		5129882	0					
ANR	5130366	Callee	p -> cb_printf		5129882	0					
ANR	5130367	PtrMemberAccess	p -> cb_printf		5129882	0					
ANR	5130368	Identifier	p		5129882	0					
ANR	5130369	Identifier	cb_printf		5129882	1					
ANR	5130370	ArgumentList	""" ]"""		5129882	1					
ANR	5130371	Argument	""" ]"""		5129882	0					
ANR	5130372	PrimaryExpression	""" ]"""		5129882	0					
ANR	5130373	ExpressionStatement	"p -> cb_printf ( ""}"" )"	877:2:20771:20789	5129882	2	True				
ANR	5130374	CallExpression	"p -> cb_printf ( ""}"" )"		5129882	0					
ANR	5130375	Callee	p -> cb_printf		5129882	0					
ANR	5130376	PtrMemberAccess	p -> cb_printf		5129882	0					
ANR	5130377	Identifier	p		5129882	0					
ANR	5130378	Identifier	cb_printf		5129882	1					
ANR	5130379	ArgumentList	"""}"""		5129882	1					
ANR	5130380	Argument	"""}"""		5129882	0					
ANR	5130381	PrimaryExpression	"""}"""		5129882	0					
ANR	5130382	ReturnType	static void		5129882	1					
ANR	5130383	Identifier	r_print_format_hexflag		5129882	2					
ANR	5130384	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5129882	3					
ANR	5130385	Parameter	const RPrint * p	803:35:18983:18997	5129882	0	True				
ANR	5130386	ParameterType	const RPrint *		5129882	0					
ANR	5130387	Identifier	p		5129882	1					
ANR	5130388	Parameter	int endian	803:52:19000:19009	5129882	1	True				
ANR	5130389	ParameterType	int		5129882	0					
ANR	5130390	Identifier	endian		5129882	1					
ANR	5130391	Parameter	int mode	803:64:19012:19019	5129882	2	True				
ANR	5130392	ParameterType	int		5129882	0					
ANR	5130393	Identifier	mode		5129882	1					
ANR	5130394	Parameter	const char * setval	804:2:19024:19041	5129882	3	True				
ANR	5130395	ParameterType	const char *		5129882	0					
ANR	5130396	Identifier	setval		5129882	1					
ANR	5130397	Parameter	ut64 seeki	804:22:19044:19053	5129882	4	True				
ANR	5130398	ParameterType	ut64		5129882	0					
ANR	5130399	Identifier	seeki		5129882	1					
ANR	5130400	Parameter	ut8 * buf	804:34:19056:19063	5129882	5	True				
ANR	5130401	ParameterType	ut8 *		5129882	0					
ANR	5130402	Identifier	buf		5129882	1					
ANR	5130403	Parameter	int i	804:44:19066:19070	5129882	6	True				
ANR	5130404	ParameterType	int		5129882	0					
ANR	5130405	Identifier	i		5129882	1					
ANR	5130406	Parameter	int size	804:51:19073:19080	5129882	7	True				
ANR	5130407	ParameterType	int		5129882	0					
ANR	5130408	Identifier	size		5129882	1					
ANR	5130409	CFGEntryNode	ENTRY		5129882		True				
ANR	5130410	CFGExitNode	EXIT		5129882		True				
ANR	5130411	Symbol	elem		5129882						
ANR	5130412	Symbol	UT32_MAX		5129882						
ANR	5130413	Symbol	& addr		5129882						
ANR	5130414	Symbol	NULL		5129882						
ANR	5130415	Symbol	MUSTSEEJSON		5129882						
ANR	5130416	Symbol	MUSTSEESTRUCT		5129882						
ANR	5130417	Symbol	addr32		5129882						
ANR	5130418	Symbol	i		5129882						
ANR	5130419	Symbol	ISQUIET		5129882						
ANR	5130420	Symbol	endian		5129882						
ANR	5130421	Symbol	MUSTSEE		5129882						
ANR	5130422	Symbol	p		5129882						
ANR	5130423	Symbol	mode		5129882						
ANR	5130424	Symbol	ARRAYINDEX_COEF		5129882						
ANR	5130425	Symbol	buf		5129882						
ANR	5130426	Symbol	size		5129882						
ANR	5130427	Symbol	seeki		5129882						
ANR	5130428	Symbol	SEEVALUE		5129882						
ANR	5130429	Symbol	R_PRINT_DOT		5129882						
ANR	5130430	Symbol	setval		5129882						
ANR	5130431	Symbol	addr		5129882						
ANR	5130432	Symbol	MUSTSET		5129882						
ANR	5130433	Function	r_print_format_10bytes	881:0:20797:22006							
ANR	5130434	FunctionDef	"r_print_format_10bytes (const RPrint * p , int mode , const char * setval , ut64 seeki , ut64 addr , ut8 * buf)"		5130433	0					
ANR	5130435	CompoundStatement		882:35:20913:22006	5130433	0					
ANR	5130436	IdentifierDeclStatement	ut8 buffer [ 255 ] ;	883:1:20916:20931	5130433	0	True				
ANR	5130437	IdentifierDecl	buffer [ 255 ]		5130433	0					
ANR	5130438	IdentifierDeclType	ut8 [ 255 ]		5130433	0					
ANR	5130439	Identifier	buffer		5130433	1					
ANR	5130440	PrimaryExpression	255		5130433	2					
ANR	5130441	IdentifierDeclStatement	int j ;	884:1:20934:20939	5130433	1	True				
ANR	5130442	IdentifierDecl	j		5130433	0					
ANR	5130443	IdentifierDeclType	int		5130433	0					
ANR	5130444	Identifier	j		5130433	1					
ANR	5130445	IfStatement	if ( MUSTSET )		5130433	2					
ANR	5130446	Condition	MUSTSET	885:5:20946:20952	5130433	0	True				
ANR	5130447	Identifier	MUSTSET		5130433	0					
ANR	5130448	CompoundStatement		4:14:41:41	5130433	1					
ANR	5130449	ExpressionStatement	"p -> cb_printf ( ""?e pf B not yet implemented\\n"" )"	886:2:20959:21005	5130433	0	True				
ANR	5130450	CallExpression	"p -> cb_printf ( ""?e pf B not yet implemented\\n"" )"		5130433	0					
ANR	5130451	Callee	p -> cb_printf		5130433	0					
ANR	5130452	PtrMemberAccess	p -> cb_printf		5130433	0					
ANR	5130453	Identifier	p		5130433	0					
ANR	5130454	Identifier	cb_printf		5130433	1					
ANR	5130455	ArgumentList	"""?e pf B not yet implemented\\n"""		5130433	1					
ANR	5130456	Argument	"""?e pf B not yet implemented\\n"""		5130433	0					
ANR	5130457	PrimaryExpression	"""?e pf B not yet implemented\\n"""		5130433	0					
ANR	5130458	ElseStatement	else		5130433	0					
ANR	5130459	IfStatement	if ( mode & R_PRINT_DOT )		5130433	0					
ANR	5130460	Condition	mode & R_PRINT_DOT	887:12:21019:21036	5130433	0	True				
ANR	5130461	BitAndExpression	mode & R_PRINT_DOT		5130433	0		&			
ANR	5130462	Identifier	mode		5130433	0					
ANR	5130463	Identifier	R_PRINT_DOT		5130433	1					
ANR	5130464	CompoundStatement		6:32:125:125	5130433	1					
ANR	5130465	ForStatement	for ( j = 0 ; j < 10 ; j ++ )		5130433	0					
ANR	5130466	ForInit	j = 0 ;	888:7:21048:21053	5130433	0	True				
ANR	5130467	AssignmentExpression	j = 0		5130433	0		=			
ANR	5130468	Identifier	j		5130433	0					
ANR	5130469	PrimaryExpression	0		5130433	1					
ANR	5130470	Condition	j < 10	888:14:21055:21058	5130433	1	True				
ANR	5130471	RelationalExpression	j < 10		5130433	0		<			
ANR	5130472	Identifier	j		5130433	0					
ANR	5130473	PrimaryExpression	10		5130433	1					
ANR	5130474	PostIncDecOperationExpression	j ++	888:20:21061:21063	5130433	2	True				
ANR	5130475	Identifier	j		5130433	0					
ANR	5130476	IncDec	++		5130433	1					
ANR	5130477	CompoundStatement		7:25:152:152	5130433	3					
ANR	5130478	ExpressionStatement	"p -> cb_printf ( ""%02x "" , buf [ j ] )"	889:3:21071:21101	5130433	0	True				
ANR	5130479	CallExpression	"p -> cb_printf ( ""%02x "" , buf [ j ] )"		5130433	0					
ANR	5130480	Callee	p -> cb_printf		5130433	0					
ANR	5130481	PtrMemberAccess	p -> cb_printf		5130433	0					
ANR	5130482	Identifier	p		5130433	0					
ANR	5130483	Identifier	cb_printf		5130433	1					
ANR	5130484	ArgumentList	"""%02x """		5130433	1					
ANR	5130485	Argument	"""%02x """		5130433	0					
ANR	5130486	PrimaryExpression	"""%02x """		5130433	0					
ANR	5130487	Argument	buf [ j ]		5130433	1					
ANR	5130488	ArrayIndexing	buf [ j ]		5130433	0					
ANR	5130489	Identifier	buf		5130433	0					
ANR	5130490	Identifier	j		5130433	1					
ANR	5130491	ElseStatement	else		5130433	0					
ANR	5130492	IfStatement	if ( MUSTSEE )		5130433	0					
ANR	5130493	Condition	MUSTSEE	891:12:21119:21125	5130433	0	True				
ANR	5130494	Identifier	MUSTSEE		5130433	0					
ANR	5130495	CompoundStatement		10:21:214:214	5130433	1					
ANR	5130496	IfStatement	if ( ! p -> iob . read_at )		5130433	0					
ANR	5130497	Condition	! p -> iob . read_at	892:6:21136:21150	5130433	0	True				
ANR	5130498	UnaryOperationExpression	! p -> iob . read_at		5130433	0					
ANR	5130499	UnaryOperator	!		5130433	0					
ANR	5130500	MemberAccess	p -> iob . read_at		5130433	1					
ANR	5130501	PtrMemberAccess	p -> iob		5130433	0					
ANR	5130502	Identifier	p		5130433	0					
ANR	5130503	Identifier	iob		5130433	1					
ANR	5130504	Identifier	read_at		5130433	1					
ANR	5130505	CompoundStatement		11:23:239:239	5130433	1					
ANR	5130506	ExpressionStatement	"printf ( ""(cannot read memory)\\n"" )"	893:3:21158:21191	5130433	0	True				
ANR	5130507	CallExpression	"printf ( ""(cannot read memory)\\n"" )"		5130433	0					
ANR	5130508	Callee	printf		5130433	0					
ANR	5130509	Identifier	printf		5130433	0					
ANR	5130510	ArgumentList	"""(cannot read memory)\\n"""		5130433	1					
ANR	5130511	Argument	"""(cannot read memory)\\n"""		5130433	0					
ANR	5130512	PrimaryExpression	"""(cannot read memory)\\n"""		5130433	0					
ANR	5130513	ReturnStatement	return - 1 ;	894:3:21196:21205	5130433	1	True				
ANR	5130514	UnaryOperationExpression	- 1		5130433	0					
ANR	5130515	UnaryOperator	-		5130433	0					
ANR	5130516	PrimaryExpression	1		5130433	1					
ANR	5130517	ExpressionStatement	"p -> iob . read_at ( p -> iob . io , ( ut64 ) addr , buffer , 248 )"	896:2:21213:21264	5130433	1	True				
ANR	5130518	CallExpression	"p -> iob . read_at ( p -> iob . io , ( ut64 ) addr , buffer , 248 )"		5130433	0					
ANR	5130519	Callee	p -> iob . read_at		5130433	0					
ANR	5130520	MemberAccess	p -> iob . read_at		5130433	0					
ANR	5130521	PtrMemberAccess	p -> iob		5130433	0					
ANR	5130522	Identifier	p		5130433	0					
ANR	5130523	Identifier	iob		5130433	1					
ANR	5130524	Identifier	read_at		5130433	1					
ANR	5130525	ArgumentList	p -> iob . io		5130433	1					
ANR	5130526	Argument	p -> iob . io		5130433	0					
ANR	5130527	MemberAccess	p -> iob . io		5130433	0					
ANR	5130528	PtrMemberAccess	p -> iob		5130433	0					
ANR	5130529	Identifier	p		5130433	0					
ANR	5130530	Identifier	iob		5130433	1					
ANR	5130531	Identifier	io		5130433	1					
ANR	5130532	Argument	( ut64 ) addr		5130433	1					
ANR	5130533	CastExpression	( ut64 ) addr		5130433	0					
ANR	5130534	CastTarget	ut64		5130433	0					
ANR	5130535	Identifier	addr		5130433	1					
ANR	5130536	Argument	buffer		5130433	2					
ANR	5130537	Identifier	buffer		5130433	0					
ANR	5130538	Argument	248		5130433	3					
ANR	5130539	PrimaryExpression	248		5130433	0					
ANR	5130540	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5130433	2					
ANR	5130541	Condition	! SEEVALUE && ! ISQUIET	897:6:21272:21292	5130433	0	True				
ANR	5130542	AndExpression	! SEEVALUE && ! ISQUIET		5130433	0		&&			
ANR	5130543	UnaryOperationExpression	! SEEVALUE		5130433	0					
ANR	5130544	UnaryOperator	!		5130433	0					
ANR	5130545	Identifier	SEEVALUE		5130433	1					
ANR	5130546	UnaryOperationExpression	! ISQUIET		5130433	1					
ANR	5130547	UnaryOperator	!		5130433	0					
ANR	5130548	Identifier	ISQUIET		5130433	1					
ANR	5130549	CompoundStatement		16:29:381:381	5130433	1					
ANR	5130550	Statement	p	898:3:21300:21300	5130433	0	True				
ANR	5130551	Statement	->	898:4:21301:21302	5130433	1	True				
ANR	5130552	Statement	cb_printf	898:6:21303:21311	5130433	2	True				
ANR	5130553	Statement	(	898:16:21313:21313	5130433	3	True				
ANR	5130554	Statement	"""0x%08"""	898:17:21314:21320	5130433	4	True				
ANR	5130555	Statement	PFMT64x	898:25:21322:21328	5130433	5	True				
ANR	5130556	Statement	""" = """	898:33:21330:21334	5130433	6	True				
ANR	5130557	Statement	","	898:38:21335:21335	5130433	7	True				
ANR	5130558	Statement	seeki	898:40:21337:21341	5130433	8	True				
ANR	5130559	Statement	)	898:45:21342:21342	5130433	9	True				
ANR	5130560	ExpressionStatement		898:46:21343:21343	5130433	10	True				
ANR	5130561	ForStatement	for ( j = 0 ; j < 10 ; j ++ )		5130433	3					
ANR	5130562	ForInit	j = 0 ;	900:7:21356:21359	5130433	0	True				
ANR	5130563	AssignmentExpression	j = 0		5130433	0		=			
ANR	5130564	Identifier	j		5130433	0					
ANR	5130565	PrimaryExpression	0		5130433	1					
ANR	5130566	Condition	j < 10	900:12:21361:21364	5130433	1	True				
ANR	5130567	RelationalExpression	j < 10		5130433	0		<			
ANR	5130568	Identifier	j		5130433	0					
ANR	5130569	PrimaryExpression	10		5130433	1					
ANR	5130570	PostIncDecOperationExpression	j ++	900:18:21367:21369	5130433	2	True				
ANR	5130571	Identifier	j		5130433	0					
ANR	5130572	IncDec	++		5130433	1					
ANR	5130573	CompoundStatement		19:23:458:458	5130433	3					
ANR	5130574	ExpressionStatement	"p -> cb_printf ( ""%02x "" , buf [ j ] )"	901:3:21377:21407	5130433	0	True				
ANR	5130575	CallExpression	"p -> cb_printf ( ""%02x "" , buf [ j ] )"		5130433	0					
ANR	5130576	Callee	p -> cb_printf		5130433	0					
ANR	5130577	PtrMemberAccess	p -> cb_printf		5130433	0					
ANR	5130578	Identifier	p		5130433	0					
ANR	5130579	Identifier	cb_printf		5130433	1					
ANR	5130580	ArgumentList	"""%02x """		5130433	1					
ANR	5130581	Argument	"""%02x """		5130433	0					
ANR	5130582	PrimaryExpression	"""%02x """		5130433	0					
ANR	5130583	Argument	buf [ j ]		5130433	1					
ANR	5130584	ArrayIndexing	buf [ j ]		5130433	0					
ANR	5130585	Identifier	buf		5130433	0					
ANR	5130586	Identifier	j		5130433	1					
ANR	5130587	IfStatement	if ( ! SEEVALUE )		5130433	4					
ANR	5130588	Condition	! SEEVALUE	903:6:21419:21427	5130433	0	True				
ANR	5130589	UnaryOperationExpression	! SEEVALUE		5130433	0					
ANR	5130590	UnaryOperator	!		5130433	0					
ANR	5130591	Identifier	SEEVALUE		5130433	1					
ANR	5130592	CompoundStatement		22:17:516:516	5130433	1					
ANR	5130593	ExpressionStatement	"p -> cb_printf ( "" ... ("" )"	904:3:21435:21458	5130433	0	True				
ANR	5130594	CallExpression	"p -> cb_printf ( "" ... ("" )"		5130433	0					
ANR	5130595	Callee	p -> cb_printf		5130433	0					
ANR	5130596	PtrMemberAccess	p -> cb_printf		5130433	0					
ANR	5130597	Identifier	p		5130433	0					
ANR	5130598	Identifier	cb_printf		5130433	1					
ANR	5130599	ArgumentList	""" ... ("""		5130433	1					
ANR	5130600	Argument	""" ... ("""		5130433	0					
ANR	5130601	PrimaryExpression	""" ... ("""		5130433	0					
ANR	5130602	ForStatement	for ( j = 0 ; j < 10 ; j ++ )		5130433	5					
ANR	5130603	ForInit	j = 0 ;	906:7:21471:21476	5130433	0	True				
ANR	5130604	AssignmentExpression	j = 0		5130433	0		=			
ANR	5130605	Identifier	j		5130433	0					
ANR	5130606	PrimaryExpression	0		5130433	1					
ANR	5130607	Condition	j < 10	906:14:21478:21483	5130433	1	True				
ANR	5130608	RelationalExpression	j < 10		5130433	0		<			
ANR	5130609	Identifier	j		5130433	0					
ANR	5130610	PrimaryExpression	10		5130433	1					
ANR	5130611	PostIncDecOperationExpression	j ++	906:22:21486:21488	5130433	2	True				
ANR	5130612	Identifier	j		5130433	0					
ANR	5130613	IncDec	++		5130433	1					
ANR	5130614	CompoundStatement		25:27:577:577	5130433	3					
ANR	5130615	IfStatement	if ( ! SEEVALUE )		5130433	0					
ANR	5130616	Condition	! SEEVALUE	907:7:21500:21508	5130433	0	True				
ANR	5130617	UnaryOperationExpression	! SEEVALUE		5130433	0					
ANR	5130618	UnaryOperator	!		5130433	0					
ANR	5130619	Identifier	SEEVALUE		5130433	1					
ANR	5130620	CompoundStatement		26:18:597:597	5130433	1					
ANR	5130621	IfStatement	if ( IS_PRINTABLE ( buf [ j ] ) )		5130433	0					
ANR	5130622	Condition	IS_PRINTABLE ( buf [ j ] )	908:8:21521:21541	5130433	0	True				
ANR	5130623	CallExpression	IS_PRINTABLE ( buf [ j ] )		5130433	0					
ANR	5130624	Callee	IS_PRINTABLE		5130433	0					
ANR	5130625	Identifier	IS_PRINTABLE		5130433	0					
ANR	5130626	ArgumentList	buf [ j ]		5130433	1					
ANR	5130627	Argument	buf [ j ]		5130433	0					
ANR	5130628	ArrayIndexing	buf [ j ]		5130433	0					
ANR	5130629	Identifier	buf		5130433	0					
ANR	5130630	Identifier	j		5130433	1					
ANR	5130631	CompoundStatement		27:31:630:630	5130433	1					
ANR	5130632	ExpressionStatement	"p -> cb_printf ( ""%c"" , buf [ j ] )"	909:5:21551:21578	5130433	0	True				
ANR	5130633	CallExpression	"p -> cb_printf ( ""%c"" , buf [ j ] )"		5130433	0					
ANR	5130634	Callee	p -> cb_printf		5130433	0					
ANR	5130635	PtrMemberAccess	p -> cb_printf		5130433	0					
ANR	5130636	Identifier	p		5130433	0					
ANR	5130637	Identifier	cb_printf		5130433	1					
ANR	5130638	ArgumentList	"""%c"""		5130433	1					
ANR	5130639	Argument	"""%c"""		5130433	0					
ANR	5130640	PrimaryExpression	"""%c"""		5130433	0					
ANR	5130641	Argument	buf [ j ]		5130433	1					
ANR	5130642	ArrayIndexing	buf [ j ]		5130433	0					
ANR	5130643	Identifier	buf		5130433	0					
ANR	5130644	Identifier	j		5130433	1					
ANR	5130645	ElseStatement	else		5130433	0					
ANR	5130646	CompoundStatement		29:11:677:677	5130433	0					
ANR	5130647	ExpressionStatement	"p -> cb_printf ( ""."" )"	911:5:21598:21616	5130433	0	True				
ANR	5130648	CallExpression	"p -> cb_printf ( ""."" )"		5130433	0					
ANR	5130649	Callee	p -> cb_printf		5130433	0					
ANR	5130650	PtrMemberAccess	p -> cb_printf		5130433	0					
ANR	5130651	Identifier	p		5130433	0					
ANR	5130652	Identifier	cb_printf		5130433	1					
ANR	5130653	ArgumentList	"""."""		5130433	1					
ANR	5130654	Argument	"""."""		5130433	0					
ANR	5130655	PrimaryExpression	"""."""		5130433	0					
ANR	5130656	IfStatement	if ( ! SEEVALUE )		5130433	6					
ANR	5130657	Condition	! SEEVALUE	915:6:21639:21647	5130433	0	True				
ANR	5130658	UnaryOperationExpression	! SEEVALUE		5130433	0					
ANR	5130659	UnaryOperator	!		5130433	0					
ANR	5130660	Identifier	SEEVALUE		5130433	1					
ANR	5130661	CompoundStatement		34:17:736:736	5130433	1					
ANR	5130662	ExpressionStatement	"p -> cb_printf ( "")"" )"	916:3:21655:21673	5130433	0	True				
ANR	5130663	CallExpression	"p -> cb_printf ( "")"" )"		5130433	0					
ANR	5130664	Callee	p -> cb_printf		5130433	0					
ANR	5130665	PtrMemberAccess	p -> cb_printf		5130433	0					
ANR	5130666	Identifier	p		5130433	0					
ANR	5130667	Identifier	cb_printf		5130433	1					
ANR	5130668	ArgumentList	""")"""		5130433	1					
ANR	5130669	Argument	""")"""		5130433	0					
ANR	5130670	PrimaryExpression	""")"""		5130433	0					
ANR	5130671	ElseStatement	else		5130433	0					
ANR	5130672	IfStatement	if ( MUSTSEEJSON )		5130433	0					
ANR	5130673	Condition	MUSTSEEJSON	918:12:21691:21701	5130433	0	True				
ANR	5130674	Identifier	MUSTSEEJSON		5130433	0					
ANR	5130675	CompoundStatement		37:25:790:790	5130433	1					
ANR	5130676	IfStatement	if ( ! p -> iob . read_at )		5130433	0					
ANR	5130677	Condition	! p -> iob . read_at	919:6:21712:21726	5130433	0	True				
ANR	5130678	UnaryOperationExpression	! p -> iob . read_at		5130433	0					
ANR	5130679	UnaryOperator	!		5130433	0					
ANR	5130680	MemberAccess	p -> iob . read_at		5130433	1					
ANR	5130681	PtrMemberAccess	p -> iob		5130433	0					
ANR	5130682	Identifier	p		5130433	0					
ANR	5130683	Identifier	iob		5130433	1					
ANR	5130684	Identifier	read_at		5130433	1					
ANR	5130685	CompoundStatement		38:23:815:815	5130433	1					
ANR	5130686	ExpressionStatement	"printf ( ""(cannot read memory)\\n"" )"	920:3:21734:21767	5130433	0	True				
ANR	5130687	CallExpression	"printf ( ""(cannot read memory)\\n"" )"		5130433	0					
ANR	5130688	Callee	printf		5130433	0					
ANR	5130689	Identifier	printf		5130433	0					
ANR	5130690	ArgumentList	"""(cannot read memory)\\n"""		5130433	1					
ANR	5130691	Argument	"""(cannot read memory)\\n"""		5130433	0					
ANR	5130692	PrimaryExpression	"""(cannot read memory)\\n"""		5130433	0					
ANR	5130693	ReturnStatement	return - 1 ;	921:3:21772:21781	5130433	1	True				
ANR	5130694	UnaryOperationExpression	- 1		5130433	0					
ANR	5130695	UnaryOperator	-		5130433	0					
ANR	5130696	PrimaryExpression	1		5130433	1					
ANR	5130697	ElseStatement	else		5130433	0					
ANR	5130698	CompoundStatement		41:9:878:878	5130433	0					
ANR	5130699	ExpressionStatement	"p -> iob . read_at ( p -> iob . io , ( ut64 ) addr , buffer , 248 )"	923:3:21797:21848	5130433	0	True				
ANR	5130700	CallExpression	"p -> iob . read_at ( p -> iob . io , ( ut64 ) addr , buffer , 248 )"		5130433	0					
ANR	5130701	Callee	p -> iob . read_at		5130433	0					
ANR	5130702	MemberAccess	p -> iob . read_at		5130433	0					
ANR	5130703	PtrMemberAccess	p -> iob		5130433	0					
ANR	5130704	Identifier	p		5130433	0					
ANR	5130705	Identifier	iob		5130433	1					
ANR	5130706	Identifier	read_at		5130433	1					
ANR	5130707	ArgumentList	p -> iob . io		5130433	1					
ANR	5130708	Argument	p -> iob . io		5130433	0					
ANR	5130709	MemberAccess	p -> iob . io		5130433	0					
ANR	5130710	PtrMemberAccess	p -> iob		5130433	0					
ANR	5130711	Identifier	p		5130433	0					
ANR	5130712	Identifier	iob		5130433	1					
ANR	5130713	Identifier	io		5130433	1					
ANR	5130714	Argument	( ut64 ) addr		5130433	1					
ANR	5130715	CastExpression	( ut64 ) addr		5130433	0					
ANR	5130716	CastTarget	ut64		5130433	0					
ANR	5130717	Identifier	addr		5130433	1					
ANR	5130718	Argument	buffer		5130433	2					
ANR	5130719	Identifier	buffer		5130433	0					
ANR	5130720	Argument	248		5130433	3					
ANR	5130721	PrimaryExpression	248		5130433	0					
ANR	5130722	ExpressionStatement	"p -> cb_printf ( ""[ %d"" , buf [ 0 ] )"	925:2:21856:21885	5130433	1	True				
ANR	5130723	CallExpression	"p -> cb_printf ( ""[ %d"" , buf [ 0 ] )"		5130433	0					
ANR	5130724	Callee	p -> cb_printf		5130433	0					
ANR	5130725	PtrMemberAccess	p -> cb_printf		5130433	0					
ANR	5130726	Identifier	p		5130433	0					
ANR	5130727	Identifier	cb_printf		5130433	1					
ANR	5130728	ArgumentList	"""[ %d"""		5130433	1					
ANR	5130729	Argument	"""[ %d"""		5130433	0					
ANR	5130730	PrimaryExpression	"""[ %d"""		5130433	0					
ANR	5130731	Argument	buf [ 0 ]		5130433	1					
ANR	5130732	ArrayIndexing	buf [ 0 ]		5130433	0					
ANR	5130733	Identifier	buf		5130433	0					
ANR	5130734	PrimaryExpression	0		5130433	1					
ANR	5130735	ExpressionStatement	j = 1	926:2:21889:21894	5130433	2	True				
ANR	5130736	AssignmentExpression	j = 1		5130433	0		=			
ANR	5130737	Identifier	j		5130433	0					
ANR	5130738	PrimaryExpression	1		5130433	1					
ANR	5130739	ForStatement	for ( ; j < 10 ; j ++ )		5130433	3					
ANR	5130740	Condition	j < 10	927:9:21905:21910	5130433	0	True				
ANR	5130741	RelationalExpression	j < 10		5130433	0		<			
ANR	5130742	Identifier	j		5130433	0					
ANR	5130743	PrimaryExpression	10		5130433	1					
ANR	5130744	PostIncDecOperationExpression	j ++	927:17:21913:21915	5130433	1	True				
ANR	5130745	Identifier	j		5130433	0					
ANR	5130746	IncDec	++		5130433	1					
ANR	5130747	CompoundStatement		46:22:1004:1004	5130433	2					
ANR	5130748	ExpressionStatement	"p -> cb_printf ( "", %d"" , buf [ j ] )"	928:3:21923:21952	5130433	0	True				
ANR	5130749	CallExpression	"p -> cb_printf ( "", %d"" , buf [ j ] )"		5130433	0					
ANR	5130750	Callee	p -> cb_printf		5130433	0					
ANR	5130751	PtrMemberAccess	p -> cb_printf		5130433	0					
ANR	5130752	Identifier	p		5130433	0					
ANR	5130753	Identifier	cb_printf		5130433	1					
ANR	5130754	ArgumentList	""", %d"""		5130433	1					
ANR	5130755	Argument	""", %d"""		5130433	0					
ANR	5130756	PrimaryExpression	""", %d"""		5130433	0					
ANR	5130757	Argument	buf [ j ]		5130433	1					
ANR	5130758	ArrayIndexing	buf [ j ]		5130433	0					
ANR	5130759	Identifier	buf		5130433	0					
ANR	5130760	Identifier	j		5130433	1					
ANR	5130761	ExpressionStatement	"p -> cb_printf ( ""]"" )"	930:2:21960:21978	5130433	4	True				
ANR	5130762	CallExpression	"p -> cb_printf ( ""]"" )"		5130433	0					
ANR	5130763	Callee	p -> cb_printf		5130433	0					
ANR	5130764	PtrMemberAccess	p -> cb_printf		5130433	0					
ANR	5130765	Identifier	p		5130433	0					
ANR	5130766	Identifier	cb_printf		5130433	1					
ANR	5130767	ArgumentList	"""]"""		5130433	1					
ANR	5130768	Argument	"""]"""		5130433	0					
ANR	5130769	PrimaryExpression	"""]"""		5130433	0					
ANR	5130770	ReturnStatement	return 0 ;	931:2:21982:21990	5130433	5	True				
ANR	5130771	PrimaryExpression	0		5130433	0					
ANR	5130772	ReturnStatement	return 0 ;	933:1:21996:22004	5130433	3	True				
ANR	5130773	PrimaryExpression	0		5130433	0					
ANR	5130774	ReturnType	static int		5130433	1					
ANR	5130775	Identifier	r_print_format_10bytes		5130433	2					
ANR	5130776	ParameterList	"const RPrint * p , int mode , const char * setval , ut64 seeki , ut64 addr , ut8 * buf"		5130433	3					
ANR	5130777	Parameter	const RPrint * p	881:34:20831:20845	5130433	0	True				
ANR	5130778	ParameterType	const RPrint *		5130433	0					
ANR	5130779	Identifier	p		5130433	1					
ANR	5130780	Parameter	int mode	881:51:20848:20855	5130433	1	True				
ANR	5130781	ParameterType	int		5130433	0					
ANR	5130782	Identifier	mode		5130433	1					
ANR	5130783	Parameter	const char * setval	881:61:20858:20875	5130433	2	True				
ANR	5130784	ParameterType	const char *		5130433	0					
ANR	5130785	Identifier	setval		5130433	1					
ANR	5130786	Parameter	ut64 seeki	882:2:20880:20889	5130433	3	True				
ANR	5130787	ParameterType	ut64		5130433	0					
ANR	5130788	Identifier	seeki		5130433	1					
ANR	5130789	Parameter	ut64 addr	882:14:20892:20900	5130433	4	True				
ANR	5130790	ParameterType	ut64		5130433	0					
ANR	5130791	Identifier	addr		5130433	1					
ANR	5130792	Parameter	ut8 * buf	882:25:20903:20910	5130433	5	True				
ANR	5130793	ParameterType	ut8 *		5130433	0					
ANR	5130794	Identifier	buf		5130433	1					
ANR	5130795	CFGEntryNode	ENTRY		5130433		True				
ANR	5130796	CFGExitNode	EXIT		5130433		True				
ANR	5130797	Symbol	* buf		5130433						
ANR	5130798	Symbol	p -> iob . read_at		5130433						
ANR	5130799	Symbol	IS_PRINTABLE		5130433						
ANR	5130800	Symbol	MUSTSEEJSON		5130433						
ANR	5130801	Symbol	j		5130433						
ANR	5130802	Symbol	ISQUIET		5130433						
ANR	5130803	Symbol	MUSTSEE		5130433						
ANR	5130804	Symbol	p -> iob . io		5130433						
ANR	5130805	Symbol	p		5130433						
ANR	5130806	Symbol	mode		5130433						
ANR	5130807	Symbol	buf		5130433						
ANR	5130808	Symbol	p -> iob		5130433						
ANR	5130809	Symbol	* j		5130433						
ANR	5130810	Symbol	seeki		5130433						
ANR	5130811	Symbol	SEEVALUE		5130433						
ANR	5130812	Symbol	R_PRINT_DOT		5130433						
ANR	5130813	Symbol	* p		5130433						
ANR	5130814	Symbol	buffer		5130433						
ANR	5130815	Symbol	setval		5130433						
ANR	5130816	Symbol	addr		5130433						
ANR	5130817	Symbol	MUSTSET		5130433						
ANR	5130818	Function	r_print_format_hexpairs	936:0:22009:23096							
ANR	5130819	FunctionDef	"r_print_format_hexpairs (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5130818	0					
ANR	5130820	CompoundStatement		937:61:22144:23096	5130818	0					
ANR	5130821	IdentifierDeclStatement	int j ;	938:1:22147:22152	5130818	0	True				
ANR	5130822	IdentifierDecl	j		5130818	0					
ANR	5130823	IdentifierDeclType	int		5130818	0					
ANR	5130824	Identifier	j		5130818	1					
ANR	5130825	ExpressionStatement	size = ( size == - 1 ) ? 1 : size	939:1:22155:22185	5130818	1	True				
ANR	5130826	AssignmentExpression	size = ( size == - 1 ) ? 1 : size		5130818	0		=			
ANR	5130827	Identifier	size		5130818	0					
ANR	5130828	ConditionalExpression	( size == - 1 ) ? 1 : size		5130818	1					
ANR	5130829	Condition	size == - 1		5130818	0					
ANR	5130830	EqualityExpression	size == - 1		5130818	0		==			
ANR	5130831	Identifier	size		5130818	0					
ANR	5130832	UnaryOperationExpression	- 1		5130818	1					
ANR	5130833	UnaryOperator	-		5130818	0					
ANR	5130834	PrimaryExpression	1		5130818	1					
ANR	5130835	PrimaryExpression	1		5130818	1					
ANR	5130836	Identifier	size		5130818	2					
ANR	5130837	IfStatement	if ( MUSTSET )		5130818	2					
ANR	5130838	Condition	MUSTSET	940:5:22192:22198	5130818	0	True				
ANR	5130839	Identifier	MUSTSET		5130818	0					
ANR	5130840	CompoundStatement		4:14:56:56	5130818	1					
ANR	5130841	ExpressionStatement	"p -> cb_printf ( ""?e pf X not yet implemented\\n"" )"	941:2:22205:22251	5130818	0	True				
ANR	5130842	CallExpression	"p -> cb_printf ( ""?e pf X not yet implemented\\n"" )"		5130818	0					
ANR	5130843	Callee	p -> cb_printf		5130818	0					
ANR	5130844	PtrMemberAccess	p -> cb_printf		5130818	0					
ANR	5130845	Identifier	p		5130818	0					
ANR	5130846	Identifier	cb_printf		5130818	1					
ANR	5130847	ArgumentList	"""?e pf X not yet implemented\\n"""		5130818	1					
ANR	5130848	Argument	"""?e pf X not yet implemented\\n"""		5130818	0					
ANR	5130849	PrimaryExpression	"""?e pf X not yet implemented\\n"""		5130818	0					
ANR	5130850	ElseStatement	else		5130818	0					
ANR	5130851	IfStatement	if ( mode & R_PRINT_DOT )		5130818	0					
ANR	5130852	Condition	mode & R_PRINT_DOT	942:12:22265:22282	5130818	0	True				
ANR	5130853	BitAndExpression	mode & R_PRINT_DOT		5130818	0		&			
ANR	5130854	Identifier	mode		5130818	0					
ANR	5130855	Identifier	R_PRINT_DOT		5130818	1					
ANR	5130856	CompoundStatement		6:32:140:140	5130818	1					
ANR	5130857	ForStatement	for ( j = 0 ; j < size ; j ++ )		5130818	0					
ANR	5130858	ForInit	j = 0 ;	943:7:22294:22299	5130818	0	True				
ANR	5130859	AssignmentExpression	j = 0		5130818	0		=			
ANR	5130860	Identifier	j		5130818	0					
ANR	5130861	PrimaryExpression	0		5130818	1					
ANR	5130862	Condition	j < size	943:14:22301:22308	5130818	1	True				
ANR	5130863	RelationalExpression	j < size		5130818	0		<			
ANR	5130864	Identifier	j		5130818	0					
ANR	5130865	Identifier	size		5130818	1					
ANR	5130866	PostIncDecOperationExpression	j ++	943:24:22311:22313	5130818	2	True				
ANR	5130867	Identifier	j		5130818	0					
ANR	5130868	IncDec	++		5130818	1					
ANR	5130869	CompoundStatement		7:29:171:171	5130818	3					
ANR	5130870	ExpressionStatement	"p -> cb_printf ( ""%02x"" , buf [ i + j ] )"	944:3:22321:22354	5130818	0	True				
ANR	5130871	CallExpression	"p -> cb_printf ( ""%02x"" , buf [ i + j ] )"		5130818	0					
ANR	5130872	Callee	p -> cb_printf		5130818	0					
ANR	5130873	PtrMemberAccess	p -> cb_printf		5130818	0					
ANR	5130874	Identifier	p		5130818	0					
ANR	5130875	Identifier	cb_printf		5130818	1					
ANR	5130876	ArgumentList	"""%02x"""		5130818	1					
ANR	5130877	Argument	"""%02x"""		5130818	0					
ANR	5130878	PrimaryExpression	"""%02x"""		5130818	0					
ANR	5130879	Argument	buf [ i + j ]		5130818	1					
ANR	5130880	ArrayIndexing	buf [ i + j ]		5130818	0					
ANR	5130881	Identifier	buf		5130818	0					
ANR	5130882	AdditiveExpression	i + j		5130818	1		+			
ANR	5130883	Identifier	i		5130818	0					
ANR	5130884	Identifier	j		5130818	1					
ANR	5130885	ElseStatement	else		5130818	0					
ANR	5130886	IfStatement	if ( MUSTSEE )		5130818	0					
ANR	5130887	Condition	MUSTSEE	946:12:22372:22378	5130818	0	True				
ANR	5130888	Identifier	MUSTSEE		5130818	0					
ANR	5130889	CompoundStatement		10:21:236:236	5130818	1					
ANR	5130890	ExpressionStatement	size = ( size < 1 ) ? 1 : size	947:2:22385:22413	5130818	0	True				
ANR	5130891	AssignmentExpression	size = ( size < 1 ) ? 1 : size		5130818	0		=			
ANR	5130892	Identifier	size		5130818	0					
ANR	5130893	ConditionalExpression	( size < 1 ) ? 1 : size		5130818	1					
ANR	5130894	Condition	size < 1		5130818	0					
ANR	5130895	RelationalExpression	size < 1		5130818	0		<			
ANR	5130896	Identifier	size		5130818	0					
ANR	5130897	PrimaryExpression	1		5130818	1					
ANR	5130898	PrimaryExpression	1		5130818	1					
ANR	5130899	Identifier	size		5130818	2					
ANR	5130900	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5130818	1					
ANR	5130901	Condition	! SEEVALUE && ! ISQUIET	948:6:22421:22441	5130818	0	True				
ANR	5130902	AndExpression	! SEEVALUE && ! ISQUIET		5130818	0		&&			
ANR	5130903	UnaryOperationExpression	! SEEVALUE		5130818	0					
ANR	5130904	UnaryOperator	!		5130818	0					
ANR	5130905	Identifier	SEEVALUE		5130818	1					
ANR	5130906	UnaryOperationExpression	! ISQUIET		5130818	1					
ANR	5130907	UnaryOperator	!		5130818	0					
ANR	5130908	Identifier	ISQUIET		5130818	1					
ANR	5130909	CompoundStatement		12:29:299:299	5130818	1					
ANR	5130910	Statement	p	949:3:22449:22449	5130818	0	True				
ANR	5130911	Statement	->	949:4:22450:22451	5130818	1	True				
ANR	5130912	Statement	cb_printf	949:6:22452:22460	5130818	2	True				
ANR	5130913	Statement	(	949:16:22462:22462	5130818	3	True				
ANR	5130914	Statement	"""0x%08"""	949:17:22463:22469	5130818	4	True				
ANR	5130915	Statement	PFMT64x	949:25:22471:22477	5130818	5	True				
ANR	5130916	Statement	""" = """	949:33:22479:22483	5130818	6	True				
ANR	5130917	Statement	","	949:38:22484:22484	5130818	7	True				
ANR	5130918	Statement	seeki	949:40:22486:22490	5130818	8	True				
ANR	5130919	Statement	)	949:45:22491:22491	5130818	9	True				
ANR	5130920	ExpressionStatement		949:46:22492:22492	5130818	10	True				
ANR	5130921	ForStatement	for ( j = 0 ; j < size ; j ++ )		5130818	2					
ANR	5130922	ForInit	j = 0 ;	951:7:22505:22510	5130818	0	True				
ANR	5130923	AssignmentExpression	j = 0		5130818	0		=			
ANR	5130924	Identifier	j		5130818	0					
ANR	5130925	PrimaryExpression	0		5130818	1					
ANR	5130926	Condition	j < size	951:14:22512:22519	5130818	1	True				
ANR	5130927	RelationalExpression	j < size		5130818	0		<			
ANR	5130928	Identifier	j		5130818	0					
ANR	5130929	Identifier	size		5130818	1					
ANR	5130930	PostIncDecOperationExpression	j ++	951:24:22522:22524	5130818	2	True				
ANR	5130931	Identifier	j		5130818	0					
ANR	5130932	IncDec	++		5130818	1					
ANR	5130933	CompoundStatement		15:29:382:382	5130818	3					
ANR	5130934	ExpressionStatement	"p -> cb_printf ( ""%02x "" , buf [ i + j ] )"	952:3:22532:22566	5130818	0	True				
ANR	5130935	CallExpression	"p -> cb_printf ( ""%02x "" , buf [ i + j ] )"		5130818	0					
ANR	5130936	Callee	p -> cb_printf		5130818	0					
ANR	5130937	PtrMemberAccess	p -> cb_printf		5130818	0					
ANR	5130938	Identifier	p		5130818	0					
ANR	5130939	Identifier	cb_printf		5130818	1					
ANR	5130940	ArgumentList	"""%02x """		5130818	1					
ANR	5130941	Argument	"""%02x """		5130818	0					
ANR	5130942	PrimaryExpression	"""%02x """		5130818	0					
ANR	5130943	Argument	buf [ i + j ]		5130818	1					
ANR	5130944	ArrayIndexing	buf [ i + j ]		5130818	0					
ANR	5130945	Identifier	buf		5130818	0					
ANR	5130946	AdditiveExpression	i + j		5130818	1		+			
ANR	5130947	Identifier	i		5130818	0					
ANR	5130948	Identifier	j		5130818	1					
ANR	5130949	IfStatement	if ( ! SEEVALUE )		5130818	3					
ANR	5130950	Condition	! SEEVALUE	954:6:22578:22586	5130818	0	True				
ANR	5130951	UnaryOperationExpression	! SEEVALUE		5130818	0					
ANR	5130952	UnaryOperator	!		5130818	0					
ANR	5130953	Identifier	SEEVALUE		5130818	1					
ANR	5130954	CompoundStatement		18:17:444:444	5130818	1					
ANR	5130955	ExpressionStatement	"p -> cb_printf ( "" ... ("" )"	955:3:22594:22617	5130818	0	True				
ANR	5130956	CallExpression	"p -> cb_printf ( "" ... ("" )"		5130818	0					
ANR	5130957	Callee	p -> cb_printf		5130818	0					
ANR	5130958	PtrMemberAccess	p -> cb_printf		5130818	0					
ANR	5130959	Identifier	p		5130818	0					
ANR	5130960	Identifier	cb_printf		5130818	1					
ANR	5130961	ArgumentList	""" ... ("""		5130818	1					
ANR	5130962	Argument	""" ... ("""		5130818	0					
ANR	5130963	PrimaryExpression	""" ... ("""		5130818	0					
ANR	5130964	ForStatement	for ( j = 0 ; j < size ; j ++ )		5130818	4					
ANR	5130965	ForInit	j = 0 ;	957:7:22630:22633	5130818	0	True				
ANR	5130966	AssignmentExpression	j = 0		5130818	0		=			
ANR	5130967	Identifier	j		5130818	0					
ANR	5130968	PrimaryExpression	0		5130818	1					
ANR	5130969	Condition	j < size	957:12:22635:22640	5130818	1	True				
ANR	5130970	RelationalExpression	j < size		5130818	0		<			
ANR	5130971	Identifier	j		5130818	0					
ANR	5130972	Identifier	size		5130818	1					
ANR	5130973	PostIncDecOperationExpression	j ++	957:20:22643:22645	5130818	2	True				
ANR	5130974	Identifier	j		5130818	0					
ANR	5130975	IncDec	++		5130818	1					
ANR	5130976	CompoundStatement		21:25:503:503	5130818	3					
ANR	5130977	IfStatement	if ( ! SEEVALUE )		5130818	0					
ANR	5130978	Condition	! SEEVALUE	958:7:22657:22665	5130818	0	True				
ANR	5130979	UnaryOperationExpression	! SEEVALUE		5130818	0					
ANR	5130980	UnaryOperator	!		5130818	0					
ANR	5130981	Identifier	SEEVALUE		5130818	1					
ANR	5130982	CompoundStatement		22:18:523:523	5130818	1					
ANR	5130983	IfStatement	if ( IS_PRINTABLE ( buf [ j ] ) )		5130818	0					
ANR	5130984	Condition	IS_PRINTABLE ( buf [ j ] )	959:8:22678:22698	5130818	0	True				
ANR	5130985	CallExpression	IS_PRINTABLE ( buf [ j ] )		5130818	0					
ANR	5130986	Callee	IS_PRINTABLE		5130818	0					
ANR	5130987	Identifier	IS_PRINTABLE		5130818	0					
ANR	5130988	ArgumentList	buf [ j ]		5130818	1					
ANR	5130989	Argument	buf [ j ]		5130818	0					
ANR	5130990	ArrayIndexing	buf [ j ]		5130818	0					
ANR	5130991	Identifier	buf		5130818	0					
ANR	5130992	Identifier	j		5130818	1					
ANR	5130993	CompoundStatement		23:31:556:556	5130818	1					
ANR	5130994	ExpressionStatement	"p -> cb_printf ( ""%c"" , buf [ i + j ] )"	960:5:22708:22737	5130818	0	True				
ANR	5130995	CallExpression	"p -> cb_printf ( ""%c"" , buf [ i + j ] )"		5130818	0					
ANR	5130996	Callee	p -> cb_printf		5130818	0					
ANR	5130997	PtrMemberAccess	p -> cb_printf		5130818	0					
ANR	5130998	Identifier	p		5130818	0					
ANR	5130999	Identifier	cb_printf		5130818	1					
ANR	5131000	ArgumentList	"""%c"""		5130818	1					
ANR	5131001	Argument	"""%c"""		5130818	0					
ANR	5131002	PrimaryExpression	"""%c"""		5130818	0					
ANR	5131003	Argument	buf [ i + j ]		5130818	1					
ANR	5131004	ArrayIndexing	buf [ i + j ]		5130818	0					
ANR	5131005	Identifier	buf		5130818	0					
ANR	5131006	AdditiveExpression	i + j		5130818	1		+			
ANR	5131007	Identifier	i		5130818	0					
ANR	5131008	Identifier	j		5130818	1					
ANR	5131009	ElseStatement	else		5130818	0					
ANR	5131010	CompoundStatement		25:11:605:605	5130818	0					
ANR	5131011	ExpressionStatement	"p -> cb_printf ( ""."" )"	962:5:22757:22775	5130818	0	True				
ANR	5131012	CallExpression	"p -> cb_printf ( ""."" )"		5130818	0					
ANR	5131013	Callee	p -> cb_printf		5130818	0					
ANR	5131014	PtrMemberAccess	p -> cb_printf		5130818	0					
ANR	5131015	Identifier	p		5130818	0					
ANR	5131016	Identifier	cb_printf		5130818	1					
ANR	5131017	ArgumentList	"""."""		5130818	1					
ANR	5131018	Argument	"""."""		5130818	0					
ANR	5131019	PrimaryExpression	"""."""		5130818	0					
ANR	5131020	ExpressionStatement	"p -> cb_printf ( "")"" )"	966:2:22794:22812	5130818	5	True				
ANR	5131021	CallExpression	"p -> cb_printf ( "")"" )"		5130818	0					
ANR	5131022	Callee	p -> cb_printf		5130818	0					
ANR	5131023	PtrMemberAccess	p -> cb_printf		5130818	0					
ANR	5131024	Identifier	p		5130818	0					
ANR	5131025	Identifier	cb_printf		5130818	1					
ANR	5131026	ArgumentList	""")"""		5130818	1					
ANR	5131027	Argument	""")"""		5130818	0					
ANR	5131028	PrimaryExpression	""")"""		5130818	0					
ANR	5131029	ElseStatement	else		5130818	0					
ANR	5131030	IfStatement	if ( MUSTSEEJSON || MUSTSEESTRUCT )		5130818	0					
ANR	5131031	Condition	MUSTSEEJSON || MUSTSEESTRUCT	967:12:22826:22853	5130818	0	True				
ANR	5131032	OrExpression	MUSTSEEJSON || MUSTSEESTRUCT		5130818	0		||			
ANR	5131033	Identifier	MUSTSEEJSON		5130818	0					
ANR	5131034	Identifier	MUSTSEESTRUCT		5130818	1					
ANR	5131035	CompoundStatement		31:42:711:711	5130818	1					
ANR	5131036	ExpressionStatement	size = ( size < 1 ) ? 1 : size	968:2:22860:22888	5130818	0	True				
ANR	5131037	AssignmentExpression	size = ( size < 1 ) ? 1 : size		5130818	0		=			
ANR	5131038	Identifier	size		5130818	0					
ANR	5131039	ConditionalExpression	( size < 1 ) ? 1 : size		5130818	1					
ANR	5131040	Condition	size < 1		5130818	0					
ANR	5131041	RelationalExpression	size < 1		5130818	0		<			
ANR	5131042	Identifier	size		5130818	0					
ANR	5131043	PrimaryExpression	1		5130818	1					
ANR	5131044	PrimaryExpression	1		5130818	1					
ANR	5131045	Identifier	size		5130818	2					
ANR	5131046	ExpressionStatement	"p -> cb_printf ( ""[ %d"" , buf [ 0 ] )"	969:2:22892:22921	5130818	1	True				
ANR	5131047	CallExpression	"p -> cb_printf ( ""[ %d"" , buf [ 0 ] )"		5130818	0					
ANR	5131048	Callee	p -> cb_printf		5130818	0					
ANR	5131049	PtrMemberAccess	p -> cb_printf		5130818	0					
ANR	5131050	Identifier	p		5130818	0					
ANR	5131051	Identifier	cb_printf		5130818	1					
ANR	5131052	ArgumentList	"""[ %d"""		5130818	1					
ANR	5131053	Argument	"""[ %d"""		5130818	0					
ANR	5131054	PrimaryExpression	"""[ %d"""		5130818	0					
ANR	5131055	Argument	buf [ 0 ]		5130818	1					
ANR	5131056	ArrayIndexing	buf [ 0 ]		5130818	0					
ANR	5131057	Identifier	buf		5130818	0					
ANR	5131058	PrimaryExpression	0		5130818	1					
ANR	5131059	ExpressionStatement	j = 1	970:2:22925:22930	5130818	2	True				
ANR	5131060	AssignmentExpression	j = 1		5130818	0		=			
ANR	5131061	Identifier	j		5130818	0					
ANR	5131062	PrimaryExpression	1		5130818	1					
ANR	5131063	ForStatement	for ( ; j < 10 ; j ++ )		5130818	3					
ANR	5131064	Condition	j < 10	971:9:22941:22946	5130818	0	True				
ANR	5131065	RelationalExpression	j < 10		5130818	0		<			
ANR	5131066	Identifier	j		5130818	0					
ANR	5131067	PrimaryExpression	10		5130818	1					
ANR	5131068	PostIncDecOperationExpression	j ++	971:17:22949:22951	5130818	1	True				
ANR	5131069	Identifier	j		5130818	0					
ANR	5131070	IncDec	++		5130818	1					
ANR	5131071	CompoundStatement		35:22:809:809	5130818	2					
ANR	5131072	ExpressionStatement	"p -> cb_printf ( "", %d"" , buf [ j ] )"	972:3:22959:22988	5130818	0	True				
ANR	5131073	CallExpression	"p -> cb_printf ( "", %d"" , buf [ j ] )"		5130818	0					
ANR	5131074	Callee	p -> cb_printf		5130818	0					
ANR	5131075	PtrMemberAccess	p -> cb_printf		5130818	0					
ANR	5131076	Identifier	p		5130818	0					
ANR	5131077	Identifier	cb_printf		5130818	1					
ANR	5131078	ArgumentList	""", %d"""		5130818	1					
ANR	5131079	Argument	""", %d"""		5130818	0					
ANR	5131080	PrimaryExpression	""", %d"""		5130818	0					
ANR	5131081	Argument	buf [ j ]		5130818	1					
ANR	5131082	ArrayIndexing	buf [ j ]		5130818	0					
ANR	5131083	Identifier	buf		5130818	0					
ANR	5131084	Identifier	j		5130818	1					
ANR	5131085	ExpressionStatement	"p -> cb_printf ( ""]"" )"	974:2:22996:23014	5130818	4	True				
ANR	5131086	CallExpression	"p -> cb_printf ( ""]"" )"		5130818	0					
ANR	5131087	Callee	p -> cb_printf		5130818	0					
ANR	5131088	PtrMemberAccess	p -> cb_printf		5130818	0					
ANR	5131089	Identifier	p		5130818	0					
ANR	5131090	Identifier	cb_printf		5130818	1					
ANR	5131091	ArgumentList	"""]"""		5130818	1					
ANR	5131092	Argument	"""]"""		5130818	0					
ANR	5131093	PrimaryExpression	"""]"""		5130818	0					
ANR	5131094	IfStatement	if ( MUSTSEEJSON )		5130818	5					
ANR	5131095	Condition	MUSTSEEJSON	975:6:23022:23032	5130818	0	True				
ANR	5131096	Identifier	MUSTSEEJSON		5130818	0					
ANR	5131097	CompoundStatement		39:19:890:890	5130818	1					
ANR	5131098	ExpressionStatement	"p -> cb_printf ( ""}"" )"	976:3:23040:23058	5130818	0	True				
ANR	5131099	CallExpression	"p -> cb_printf ( ""}"" )"		5130818	0					
ANR	5131100	Callee	p -> cb_printf		5130818	0					
ANR	5131101	PtrMemberAccess	p -> cb_printf		5130818	0					
ANR	5131102	Identifier	p		5130818	0					
ANR	5131103	Identifier	cb_printf		5130818	1					
ANR	5131104	ArgumentList	"""}"""		5130818	1					
ANR	5131105	Argument	"""}"""		5130818	0					
ANR	5131106	PrimaryExpression	"""}"""		5130818	0					
ANR	5131107	ReturnStatement	return size ;	978:2:23066:23077	5130818	6	True				
ANR	5131108	Identifier	size		5130818	0					
ANR	5131109	ReturnStatement	return size ;	980:1:23083:23094	5130818	3	True				
ANR	5131110	Identifier	size		5130818	0					
ANR	5131111	ReturnType	static int		5130818	1					
ANR	5131112	Identifier	r_print_format_hexpairs		5130818	2					
ANR	5131113	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5130818	3					
ANR	5131114	Parameter	const RPrint * p	936:35:22044:22058	5130818	0	True				
ANR	5131115	ParameterType	const RPrint *		5130818	0					
ANR	5131116	Identifier	p		5130818	1					
ANR	5131117	Parameter	int endian	936:52:22061:22070	5130818	1	True				
ANR	5131118	ParameterType	int		5130818	0					
ANR	5131119	Identifier	endian		5130818	1					
ANR	5131120	Parameter	int mode	936:64:22073:22080	5130818	2	True				
ANR	5131121	ParameterType	int		5130818	0					
ANR	5131122	Identifier	mode		5130818	1					
ANR	5131123	Parameter	const char * setval	937:2:22085:22102	5130818	3	True				
ANR	5131124	ParameterType	const char *		5130818	0					
ANR	5131125	Identifier	setval		5130818	1					
ANR	5131126	Parameter	ut64 seeki	937:22:22105:22114	5130818	4	True				
ANR	5131127	ParameterType	ut64		5130818	0					
ANR	5131128	Identifier	seeki		5130818	1					
ANR	5131129	Parameter	ut8 * buf	937:34:22117:22124	5130818	5	True				
ANR	5131130	ParameterType	ut8 *		5130818	0					
ANR	5131131	Identifier	buf		5130818	1					
ANR	5131132	Parameter	int i	937:44:22127:22131	5130818	6	True				
ANR	5131133	ParameterType	int		5130818	0					
ANR	5131134	Identifier	i		5130818	1					
ANR	5131135	Parameter	int size	937:51:22134:22141	5130818	7	True				
ANR	5131136	ParameterType	int		5130818	0					
ANR	5131137	Identifier	size		5130818	1					
ANR	5131138	CFGEntryNode	ENTRY		5130818		True				
ANR	5131139	CFGExitNode	EXIT		5130818		True				
ANR	5131140	Symbol	* buf		5130818						
ANR	5131141	Symbol	IS_PRINTABLE		5130818						
ANR	5131142	Symbol	MUSTSEEJSON		5130818						
ANR	5131143	Symbol	MUSTSEESTRUCT		5130818						
ANR	5131144	Symbol	i		5130818						
ANR	5131145	Symbol	j		5130818						
ANR	5131146	Symbol	ISQUIET		5130818						
ANR	5131147	Symbol	endian		5130818						
ANR	5131148	Symbol	MUSTSEE		5130818						
ANR	5131149	Symbol	p		5130818						
ANR	5131150	Symbol	mode		5130818						
ANR	5131151	Symbol	buf		5130818						
ANR	5131152	Symbol	* i		5130818						
ANR	5131153	Symbol	size		5130818						
ANR	5131154	Symbol	* j		5130818						
ANR	5131155	Symbol	seeki		5130818						
ANR	5131156	Symbol	SEEVALUE		5130818						
ANR	5131157	Symbol	R_PRINT_DOT		5130818						
ANR	5131158	Symbol	setval		5130818						
ANR	5131159	Symbol	MUSTSET		5130818						
ANR	5131160	Function	r_print_format_float	983:0:23099:24334							
ANR	5131161	FunctionDef	"r_print_format_float (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5131160	0					
ANR	5131162	CompoundStatement		984:61:23232:24334	5131160	0					
ANR	5131163	IdentifierDeclStatement	float val_f = 0.0f ;	985:1:23235:23253	5131160	0	True				
ANR	5131164	IdentifierDecl	val_f = 0.0f		5131160	0					
ANR	5131165	IdentifierDeclType	float		5131160	0					
ANR	5131166	Identifier	val_f		5131160	1					
ANR	5131167	AssignmentExpression	val_f = 0.0f		5131160	2		=			
ANR	5131168	Identifier	val_f		5131160	0					
ANR	5131169	PrimaryExpression	0.0f		5131160	1					
ANR	5131170	IdentifierDeclStatement	ut64 addr = 0 ;	986:1:23256:23269	5131160	1	True				
ANR	5131171	IdentifierDecl	addr = 0		5131160	0					
ANR	5131172	IdentifierDeclType	ut64		5131160	0					
ANR	5131173	Identifier	addr		5131160	1					
ANR	5131174	AssignmentExpression	addr = 0		5131160	2		=			
ANR	5131175	Identifier	addr		5131160	0					
ANR	5131176	PrimaryExpression	0		5131160	1					
ANR	5131177	IdentifierDeclStatement	int elem = - 1 ;	987:1:23272:23285	5131160	2	True				
ANR	5131178	IdentifierDecl	elem = - 1		5131160	0					
ANR	5131179	IdentifierDeclType	int		5131160	0					
ANR	5131180	Identifier	elem		5131160	1					
ANR	5131181	AssignmentExpression	elem = - 1		5131160	2		=			
ANR	5131182	Identifier	elem		5131160	0					
ANR	5131183	UnaryOperationExpression	- 1		5131160	1					
ANR	5131184	UnaryOperator	-		5131160	0					
ANR	5131185	PrimaryExpression	1		5131160	1					
ANR	5131186	IfStatement	if ( size >= ARRAYINDEX_COEF )		5131160	3					
ANR	5131187	Condition	size >= ARRAYINDEX_COEF	988:5:23292:23314	5131160	0	True				
ANR	5131188	RelationalExpression	size >= ARRAYINDEX_COEF		5131160	0		>=			
ANR	5131189	Identifier	size		5131160	0					
ANR	5131190	Identifier	ARRAYINDEX_COEF		5131160	1					
ANR	5131191	CompoundStatement		5:30:84:84	5131160	1					
ANR	5131192	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	989:2:23321:23352	5131160	0	True				
ANR	5131193	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5131160	0		=			
ANR	5131194	Identifier	elem		5131160	0					
ANR	5131195	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5131160	1		-			
ANR	5131196	MultiplicativeExpression	size / ARRAYINDEX_COEF		5131160	0		/			
ANR	5131197	Identifier	size		5131160	0					
ANR	5131198	Identifier	ARRAYINDEX_COEF		5131160	1					
ANR	5131199	PrimaryExpression	1		5131160	1					
ANR	5131200	ExpressionStatement	size %= ARRAYINDEX_COEF	990:2:23356:23379	5131160	1	True				
ANR	5131201	AssignmentExpression	size %= ARRAYINDEX_COEF		5131160	0		%=			
ANR	5131202	Identifier	size		5131160	0					
ANR	5131203	Identifier	ARRAYINDEX_COEF		5131160	1					
ANR	5131204	ExpressionStatement	"val_f = updateAddr ( buf + i , 999 , endian , & addr , NULL )"	992:1:23385:23439	5131160	4	True				
ANR	5131205	AssignmentExpression	"val_f = updateAddr ( buf + i , 999 , endian , & addr , NULL )"		5131160	0		=			
ANR	5131206	Identifier	val_f		5131160	0					
ANR	5131207	CallExpression	"updateAddr ( buf + i , 999 , endian , & addr , NULL )"		5131160	1					
ANR	5131208	Callee	updateAddr		5131160	0					
ANR	5131209	Identifier	updateAddr		5131160	0					
ANR	5131210	ArgumentList	buf + i		5131160	1					
ANR	5131211	Argument	buf + i		5131160	0					
ANR	5131212	AdditiveExpression	buf + i		5131160	0		+			
ANR	5131213	Identifier	buf		5131160	0					
ANR	5131214	Identifier	i		5131160	1					
ANR	5131215	Argument	999		5131160	1					
ANR	5131216	PrimaryExpression	999		5131160	0					
ANR	5131217	Argument	endian		5131160	2					
ANR	5131218	Identifier	endian		5131160	0					
ANR	5131219	Argument	& addr		5131160	3					
ANR	5131220	UnaryOperationExpression	& addr		5131160	0					
ANR	5131221	UnaryOperator	&		5131160	0					
ANR	5131222	Identifier	addr		5131160	1					
ANR	5131223	Argument	NULL		5131160	4					
ANR	5131224	Identifier	NULL		5131160	0					
ANR	5131225	IfStatement	if ( MUSTSET )		5131160	5					
ANR	5131226	Condition	MUSTSET	993:5:23446:23452	5131160	0	True				
ANR	5131227	Identifier	MUSTSET		5131160	0					
ANR	5131228	CompoundStatement		10:14:222:222	5131160	1					
ANR	5131229	Statement	p	994:2:23459:23459	5131160	0	True				
ANR	5131230	Statement	->	994:3:23460:23461	5131160	1	True				
ANR	5131231	Statement	cb_printf	994:5:23462:23470	5131160	2	True				
ANR	5131232	Statement	(	994:15:23472:23472	5131160	3	True				
ANR	5131233	Statement	"""wv4 %s @ 0x%08"""	994:16:23473:23488	5131160	4	True				
ANR	5131234	Statement	PFMT64x	994:32:23489:23495	5131160	5	True				
ANR	5131235	Statement	"""\\n"""	994:39:23496:23499	5131160	6	True				
ANR	5131236	Statement	","	994:43:23500:23500	5131160	7	True				
ANR	5131237	Statement	setval	994:45:23502:23507	5131160	8	True				
ANR	5131238	Statement	","	994:51:23508:23508	5131160	9	True				
ANR	5131239	Statement	seeki	995:3:23513:23517	5131160	10	True				
ANR	5131240	Statement	+	995:9:23519:23519	5131160	11	True				
ANR	5131241	Statement	(	995:11:23521:23521	5131160	12	True				
ANR	5131242	Statement	(	995:12:23522:23522	5131160	13	True				
ANR	5131243	Statement	elem	995:13:23523:23526	5131160	14	True				
ANR	5131244	Statement	>=	995:18:23528:23529	5131160	15	True				
ANR	5131245	Statement	0	995:21:23531:23531	5131160	16	True				
ANR	5131246	Statement	)	995:22:23532:23532	5131160	17	True				
ANR	5131247	Statement	?	995:24:23534:23534	5131160	18	True				
ANR	5131248	Statement	elem	995:26:23536:23539	5131160	19	True				
ANR	5131249	Statement	*	995:31:23541:23541	5131160	20	True				
ANR	5131250	Label	4 :	995:33:23543:23545	5131160	21	True				
ANR	5131251	Statement	0	995:37:23547:23547	5131160	22	True				
ANR	5131252	Statement	)	995:38:23548:23548	5131160	23	True				
ANR	5131253	Statement	)	995:39:23549:23549	5131160	24	True				
ANR	5131254	ExpressionStatement		995:40:23550:23550	5131160	25	True				
ANR	5131255	ElseStatement	else		5131160	0					
ANR	5131256	IfStatement	if ( ( mode & R_PRINT_DOT ) || MUSTSEESTRUCT )		5131160	0					
ANR	5131257	Condition	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT	996:12:23564:23600	5131160	0	True				
ANR	5131258	OrExpression	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT		5131160	0		||			
ANR	5131259	BitAndExpression	mode & R_PRINT_DOT		5131160	0		&			
ANR	5131260	Identifier	mode		5131160	0					
ANR	5131261	Identifier	R_PRINT_DOT		5131160	1					
ANR	5131262	Identifier	MUSTSEESTRUCT		5131160	1					
ANR	5131263	CompoundStatement		13:51:370:370	5131160	1					
ANR	5131264	ExpressionStatement	"p -> cb_printf ( ""%.9g"" , val_f )"	997:2:23607:23635	5131160	0	True				
ANR	5131265	CallExpression	"p -> cb_printf ( ""%.9g"" , val_f )"		5131160	0					
ANR	5131266	Callee	p -> cb_printf		5131160	0					
ANR	5131267	PtrMemberAccess	p -> cb_printf		5131160	0					
ANR	5131268	Identifier	p		5131160	0					
ANR	5131269	Identifier	cb_printf		5131160	1					
ANR	5131270	ArgumentList	"""%.9g"""		5131160	1					
ANR	5131271	Argument	"""%.9g"""		5131160	0					
ANR	5131272	PrimaryExpression	"""%.9g"""		5131160	0					
ANR	5131273	Argument	val_f		5131160	1					
ANR	5131274	Identifier	val_f		5131160	0					
ANR	5131275	ElseStatement	else		5131160	0					
ANR	5131276	CompoundStatement		15:8:412:412	5131160	0					
ANR	5131277	IfStatement	if ( MUSTSEE )		5131160	0					
ANR	5131278	Condition	MUSTSEE	999:6:23653:23659	5131160	0	True				
ANR	5131279	Identifier	MUSTSEE		5131160	0					
ANR	5131280	CompoundStatement		16:15:429:429	5131160	1					
ANR	5131281	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5131160	0					
ANR	5131282	Condition	! SEEVALUE && ! ISQUIET	1000:7:23671:23691	5131160	0	True				
ANR	5131283	AndExpression	! SEEVALUE && ! ISQUIET		5131160	0		&&			
ANR	5131284	UnaryOperationExpression	! SEEVALUE		5131160	0					
ANR	5131285	UnaryOperator	!		5131160	0					
ANR	5131286	Identifier	SEEVALUE		5131160	1					
ANR	5131287	UnaryOperationExpression	! ISQUIET		5131160	1					
ANR	5131288	UnaryOperator	!		5131160	0					
ANR	5131289	Identifier	ISQUIET		5131160	1					
ANR	5131290	CompoundStatement		17:30:461:461	5131160	1					
ANR	5131291	Statement	p	1001:4:23700:23700	5131160	0	True				
ANR	5131292	Statement	->	1001:5:23701:23702	5131160	1	True				
ANR	5131293	Statement	cb_printf	1001:7:23703:23711	5131160	2	True				
ANR	5131294	Statement	(	1001:17:23713:23713	5131160	3	True				
ANR	5131295	Statement	"""0x%08"""	1001:18:23714:23720	5131160	4	True				
ANR	5131296	Statement	PFMT64x	1001:25:23721:23727	5131160	5	True				
ANR	5131297	Statement	""" = """	1001:32:23728:23732	5131160	6	True				
ANR	5131298	Statement	","	1001:37:23733:23733	5131160	7	True				
ANR	5131299	Statement	seeki	1002:5:23740:23744	5131160	8	True				
ANR	5131300	Statement	+	1002:11:23746:23746	5131160	9	True				
ANR	5131301	Statement	(	1002:13:23748:23748	5131160	10	True				
ANR	5131302	Statement	(	1002:14:23749:23749	5131160	11	True				
ANR	5131303	Statement	elem	1002:15:23750:23753	5131160	12	True				
ANR	5131304	Statement	>=	1002:20:23755:23756	5131160	13	True				
ANR	5131305	Statement	0	1002:23:23758:23758	5131160	14	True				
ANR	5131306	Statement	)	1002:24:23759:23759	5131160	15	True				
ANR	5131307	Statement	?	1002:26:23761:23761	5131160	16	True				
ANR	5131308	Statement	elem	1002:28:23763:23766	5131160	17	True				
ANR	5131309	Statement	*	1002:33:23768:23768	5131160	18	True				
ANR	5131310	Label	4 :	1002:35:23770:23772	5131160	19	True				
ANR	5131311	Statement	0	1002:39:23774:23774	5131160	20	True				
ANR	5131312	Statement	)	1002:40:23775:23775	5131160	21	True				
ANR	5131313	Statement	)	1002:41:23776:23776	5131160	22	True				
ANR	5131314	ExpressionStatement		1002:42:23777:23777	5131160	23	True				
ANR	5131315	IfStatement	if ( size == - 1 )		5131160	1					
ANR	5131316	Condition	size == - 1	1005:6:23794:23803	5131160	0	True				
ANR	5131317	EqualityExpression	size == - 1		5131160	0		==			
ANR	5131318	Identifier	size		5131160	0					
ANR	5131319	UnaryOperationExpression	- 1		5131160	1					
ANR	5131320	UnaryOperator	-		5131160	0					
ANR	5131321	PrimaryExpression	1		5131160	1					
ANR	5131322	CompoundStatement		22:18:573:573	5131160	1					
ANR	5131323	ExpressionStatement	"p -> cb_printf ( ""%.9g"" , val_f )"	1006:3:23811:23839	5131160	0	True				
ANR	5131324	CallExpression	"p -> cb_printf ( ""%.9g"" , val_f )"		5131160	0					
ANR	5131325	Callee	p -> cb_printf		5131160	0					
ANR	5131326	PtrMemberAccess	p -> cb_printf		5131160	0					
ANR	5131327	Identifier	p		5131160	0					
ANR	5131328	Identifier	cb_printf		5131160	1					
ANR	5131329	ArgumentList	"""%.9g"""		5131160	1					
ANR	5131330	Argument	"""%.9g"""		5131160	0					
ANR	5131331	PrimaryExpression	"""%.9g"""		5131160	0					
ANR	5131332	Argument	val_f		5131160	1					
ANR	5131333	Identifier	val_f		5131160	0					
ANR	5131334	ElseStatement	else		5131160	0					
ANR	5131335	CompoundStatement		24:9:617:617	5131160	0					
ANR	5131336	IfStatement	if ( ! SEEVALUE )		5131160	0					
ANR	5131337	Condition	! SEEVALUE	1008:7:23859:23867	5131160	0	True				
ANR	5131338	UnaryOperationExpression	! SEEVALUE		5131160	0					
ANR	5131339	UnaryOperator	!		5131160	0					
ANR	5131340	Identifier	SEEVALUE		5131160	1					
ANR	5131341	CompoundStatement		25:18:637:637	5131160	1					
ANR	5131342	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	1009:4:23876:23895	5131160	0	True				
ANR	5131343	CallExpression	"p -> cb_printf ( ""[ "" )"		5131160	0					
ANR	5131344	Callee	p -> cb_printf		5131160	0					
ANR	5131345	PtrMemberAccess	p -> cb_printf		5131160	0					
ANR	5131346	Identifier	p		5131160	0					
ANR	5131347	Identifier	cb_printf		5131160	1					
ANR	5131348	ArgumentList	"""[ """		5131160	1					
ANR	5131349	Argument	"""[ """		5131160	0					
ANR	5131350	PrimaryExpression	"""[ """		5131160	0					
ANR	5131351	WhileStatement	while ( size -- )		5131160	1					
ANR	5131352	Condition	size --	1011:10:23912:23917	5131160	0	True				
ANR	5131353	PostIncDecOperationExpression	size --		5131160	0					
ANR	5131354	Identifier	size		5131160	0					
ANR	5131355	IncDec	--		5131160	1					
ANR	5131356	CompoundStatement		28:18:687:687	5131160	1					
ANR	5131357	ExpressionStatement	"val_f = updateAddr ( buf + i , 9999 , endian , & addr , NULL )"	1012:4:23926:23981	5131160	0	True				
ANR	5131358	AssignmentExpression	"val_f = updateAddr ( buf + i , 9999 , endian , & addr , NULL )"		5131160	0		=			
ANR	5131359	Identifier	val_f		5131160	0					
ANR	5131360	CallExpression	"updateAddr ( buf + i , 9999 , endian , & addr , NULL )"		5131160	1					
ANR	5131361	Callee	updateAddr		5131160	0					
ANR	5131362	Identifier	updateAddr		5131160	0					
ANR	5131363	ArgumentList	buf + i		5131160	1					
ANR	5131364	Argument	buf + i		5131160	0					
ANR	5131365	AdditiveExpression	buf + i		5131160	0		+			
ANR	5131366	Identifier	buf		5131160	0					
ANR	5131367	Identifier	i		5131160	1					
ANR	5131368	Argument	9999		5131160	1					
ANR	5131369	PrimaryExpression	9999		5131160	0					
ANR	5131370	Argument	endian		5131160	2					
ANR	5131371	Identifier	endian		5131160	0					
ANR	5131372	Argument	& addr		5131160	3					
ANR	5131373	UnaryOperationExpression	& addr		5131160	0					
ANR	5131374	UnaryOperator	&		5131160	0					
ANR	5131375	Identifier	addr		5131160	1					
ANR	5131376	Argument	NULL		5131160	4					
ANR	5131377	Identifier	NULL		5131160	0					
ANR	5131378	IfStatement	if ( elem == - 1 || elem == 0 )		5131160	1					
ANR	5131379	Condition	elem == - 1 || elem == 0	1013:8:23991:24013	5131160	0	True				
ANR	5131380	OrExpression	elem == - 1 || elem == 0		5131160	0		||			
ANR	5131381	EqualityExpression	elem == - 1		5131160	0		==			
ANR	5131382	Identifier	elem		5131160	0					
ANR	5131383	UnaryOperationExpression	- 1		5131160	1					
ANR	5131384	UnaryOperator	-		5131160	0					
ANR	5131385	PrimaryExpression	1		5131160	1					
ANR	5131386	EqualityExpression	elem == 0		5131160	1		==			
ANR	5131387	Identifier	elem		5131160	0					
ANR	5131388	PrimaryExpression	0		5131160	1					
ANR	5131389	CompoundStatement		30:33:783:783	5131160	1					
ANR	5131390	ExpressionStatement	"p -> cb_printf ( ""%.9g"" , val_f )"	1014:5:24023:24051	5131160	0	True				
ANR	5131391	CallExpression	"p -> cb_printf ( ""%.9g"" , val_f )"		5131160	0					
ANR	5131392	Callee	p -> cb_printf		5131160	0					
ANR	5131393	PtrMemberAccess	p -> cb_printf		5131160	0					
ANR	5131394	Identifier	p		5131160	0					
ANR	5131395	Identifier	cb_printf		5131160	1					
ANR	5131396	ArgumentList	"""%.9g"""		5131160	1					
ANR	5131397	Argument	"""%.9g"""		5131160	0					
ANR	5131398	PrimaryExpression	"""%.9g"""		5131160	0					
ANR	5131399	Argument	val_f		5131160	1					
ANR	5131400	Identifier	val_f		5131160	0					
ANR	5131401	IfStatement	if ( elem == 0 )		5131160	1					
ANR	5131402	Condition	elem == 0	1015:9:24062:24070	5131160	0	True				
ANR	5131403	EqualityExpression	elem == 0		5131160	0		==			
ANR	5131404	Identifier	elem		5131160	0					
ANR	5131405	PrimaryExpression	0		5131160	1					
ANR	5131406	CompoundStatement		32:20:840:840	5131160	1					
ANR	5131407	ExpressionStatement	elem = - 2	1016:6:24081:24090	5131160	0	True				
ANR	5131408	AssignmentExpression	elem = - 2		5131160	0		=			
ANR	5131409	Identifier	elem		5131160	0					
ANR	5131410	UnaryOperationExpression	- 2		5131160	1					
ANR	5131411	UnaryOperator	-		5131160	0					
ANR	5131412	PrimaryExpression	2		5131160	1					
ANR	5131413	IfStatement	if ( size != 0 && elem == - 1 )		5131160	2					
ANR	5131414	Condition	size != 0 && elem == - 1	1019:8:24113:24135	5131160	0	True				
ANR	5131415	AndExpression	size != 0 && elem == - 1		5131160	0		&&			
ANR	5131416	EqualityExpression	size != 0		5131160	0		!=			
ANR	5131417	Identifier	size		5131160	0					
ANR	5131418	PrimaryExpression	0		5131160	1					
ANR	5131419	EqualityExpression	elem == - 1		5131160	1		==			
ANR	5131420	Identifier	elem		5131160	0					
ANR	5131421	UnaryOperationExpression	- 1		5131160	1					
ANR	5131422	UnaryOperator	-		5131160	0					
ANR	5131423	PrimaryExpression	1		5131160	1					
ANR	5131424	CompoundStatement		36:33:905:905	5131160	1					
ANR	5131425	ExpressionStatement	"p -> cb_printf ( "", "" )"	1020:5:24145:24164	5131160	0	True				
ANR	5131426	CallExpression	"p -> cb_printf ( "", "" )"		5131160	0					
ANR	5131427	Callee	p -> cb_printf		5131160	0					
ANR	5131428	PtrMemberAccess	p -> cb_printf		5131160	0					
ANR	5131429	Identifier	p		5131160	0					
ANR	5131430	Identifier	cb_printf		5131160	1					
ANR	5131431	ArgumentList	""", """		5131160	1					
ANR	5131432	Argument	""", """		5131160	0					
ANR	5131433	PrimaryExpression	""", """		5131160	0					
ANR	5131434	IfStatement	if ( elem > - 1 )		5131160	3					
ANR	5131435	Condition	elem > - 1	1022:8:24180:24188	5131160	0	True				
ANR	5131436	RelationalExpression	elem > - 1		5131160	0		>			
ANR	5131437	Identifier	elem		5131160	0					
ANR	5131438	UnaryOperationExpression	- 1		5131160	1					
ANR	5131439	UnaryOperator	-		5131160	0					
ANR	5131440	PrimaryExpression	1		5131160	1					
ANR	5131441	CompoundStatement		39:19:958:958	5131160	1					
ANR	5131442	ExpressionStatement	elem --	1023:5:24198:24204	5131160	0	True				
ANR	5131443	PostIncDecOperationExpression	elem --		5131160	0					
ANR	5131444	Identifier	elem		5131160	0					
ANR	5131445	IncDec	--		5131160	1					
ANR	5131446	ExpressionStatement	i += 4	1025:4:24216:24222	5131160	4	True				
ANR	5131447	AssignmentExpression	i += 4		5131160	0		+=			
ANR	5131448	Identifier	i		5131160	0					
ANR	5131449	PrimaryExpression	4		5131160	1					
ANR	5131450	IfStatement	if ( ! SEEVALUE )		5131160	2					
ANR	5131451	Condition	! SEEVALUE	1027:7:24236:24244	5131160	0	True				
ANR	5131452	UnaryOperationExpression	! SEEVALUE		5131160	0					
ANR	5131453	UnaryOperator	!		5131160	0					
ANR	5131454	Identifier	SEEVALUE		5131160	1					
ANR	5131455	CompoundStatement		44:18:1014:1014	5131160	1					
ANR	5131456	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	1028:4:24253:24272	5131160	0	True				
ANR	5131457	CallExpression	"p -> cb_printf ( "" ]"" )"		5131160	0					
ANR	5131458	Callee	p -> cb_printf		5131160	0					
ANR	5131459	PtrMemberAccess	p -> cb_printf		5131160	0					
ANR	5131460	Identifier	p		5131160	0					
ANR	5131461	Identifier	cb_printf		5131160	1					
ANR	5131462	ArgumentList	""" ]"""		5131160	1					
ANR	5131463	Argument	""" ]"""		5131160	0					
ANR	5131464	PrimaryExpression	""" ]"""		5131160	0					
ANR	5131465	IfStatement	if ( MUSTSEEJSON )		5131160	2					
ANR	5131466	Condition	MUSTSEEJSON	1031:6:24289:24299	5131160	0	True				
ANR	5131467	Identifier	MUSTSEEJSON		5131160	0					
ANR	5131468	CompoundStatement		48:19:1069:1069	5131160	1					
ANR	5131469	ExpressionStatement	"p -> cb_printf ( ""}"" )"	1032:3:24307:24325	5131160	0	True				
ANR	5131470	CallExpression	"p -> cb_printf ( ""}"" )"		5131160	0					
ANR	5131471	Callee	p -> cb_printf		5131160	0					
ANR	5131472	PtrMemberAccess	p -> cb_printf		5131160	0					
ANR	5131473	Identifier	p		5131160	0					
ANR	5131474	Identifier	cb_printf		5131160	1					
ANR	5131475	ArgumentList	"""}"""		5131160	1					
ANR	5131476	Argument	"""}"""		5131160	0					
ANR	5131477	PrimaryExpression	"""}"""		5131160	0					
ANR	5131478	ReturnType	static void		5131160	1					
ANR	5131479	Identifier	r_print_format_float		5131160	2					
ANR	5131480	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5131160	3					
ANR	5131481	Parameter	const RPrint * p	983:33:23132:23146	5131160	0	True				
ANR	5131482	ParameterType	const RPrint *		5131160	0					
ANR	5131483	Identifier	p		5131160	1					
ANR	5131484	Parameter	int endian	983:50:23149:23158	5131160	1	True				
ANR	5131485	ParameterType	int		5131160	0					
ANR	5131486	Identifier	endian		5131160	1					
ANR	5131487	Parameter	int mode	983:62:23161:23168	5131160	2	True				
ANR	5131488	ParameterType	int		5131160	0					
ANR	5131489	Identifier	mode		5131160	1					
ANR	5131490	Parameter	const char * setval	984:2:23173:23190	5131160	3	True				
ANR	5131491	ParameterType	const char *		5131160	0					
ANR	5131492	Identifier	setval		5131160	1					
ANR	5131493	Parameter	ut64 seeki	984:22:23193:23202	5131160	4	True				
ANR	5131494	ParameterType	ut64		5131160	0					
ANR	5131495	Identifier	seeki		5131160	1					
ANR	5131496	Parameter	ut8 * buf	984:34:23205:23212	5131160	5	True				
ANR	5131497	ParameterType	ut8 *		5131160	0					
ANR	5131498	Identifier	buf		5131160	1					
ANR	5131499	Parameter	int i	984:44:23215:23219	5131160	6	True				
ANR	5131500	ParameterType	int		5131160	0					
ANR	5131501	Identifier	i		5131160	1					
ANR	5131502	Parameter	int size	984:51:23222:23229	5131160	7	True				
ANR	5131503	ParameterType	int		5131160	0					
ANR	5131504	Identifier	size		5131160	1					
ANR	5131505	CFGEntryNode	ENTRY		5131160		True				
ANR	5131506	CFGExitNode	EXIT		5131160		True				
ANR	5131507	Symbol	elem		5131160						
ANR	5131508	Symbol	& addr		5131160						
ANR	5131509	Symbol	NULL		5131160						
ANR	5131510	Symbol	MUSTSEEJSON		5131160						
ANR	5131511	Symbol	val_f		5131160						
ANR	5131512	Symbol	MUSTSEESTRUCT		5131160						
ANR	5131513	Symbol	i		5131160						
ANR	5131514	Symbol	updateAddr		5131160						
ANR	5131515	Symbol	ISQUIET		5131160						
ANR	5131516	Symbol	endian		5131160						
ANR	5131517	Symbol	MUSTSEE		5131160						
ANR	5131518	Symbol	p		5131160						
ANR	5131519	Symbol	mode		5131160						
ANR	5131520	Symbol	ARRAYINDEX_COEF		5131160						
ANR	5131521	Symbol	buf		5131160						
ANR	5131522	Symbol	size		5131160						
ANR	5131523	Symbol	seeki		5131160						
ANR	5131524	Symbol	SEEVALUE		5131160						
ANR	5131525	Symbol	R_PRINT_DOT		5131160						
ANR	5131526	Symbol	setval		5131160						
ANR	5131527	Symbol	addr		5131160						
ANR	5131528	Symbol	MUSTSET		5131160						
ANR	5131529	Function	r_print_format_double	1038:0:24338:25729							
ANR	5131530	FunctionDef	"r_print_format_double (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5131529	0					
ANR	5131531	CompoundStatement		1039:61:24472:25729	5131529	0					
ANR	5131532	IdentifierDeclStatement	double val_f = 0.0 ;	1040:1:24475:24493	5131529	0	True				
ANR	5131533	IdentifierDecl	val_f = 0.0		5131529	0					
ANR	5131534	IdentifierDeclType	double		5131529	0					
ANR	5131535	Identifier	val_f		5131529	1					
ANR	5131536	AssignmentExpression	val_f = 0.0		5131529	2		=			
ANR	5131537	Identifier	val_f		5131529	0					
ANR	5131538	PrimaryExpression	0.0		5131529	1					
ANR	5131539	IdentifierDeclStatement	ut64 addr = 0 ;	1041:1:24496:24509	5131529	1	True				
ANR	5131540	IdentifierDecl	addr = 0		5131529	0					
ANR	5131541	IdentifierDeclType	ut64		5131529	0					
ANR	5131542	Identifier	addr		5131529	1					
ANR	5131543	AssignmentExpression	addr = 0		5131529	2		=			
ANR	5131544	Identifier	addr		5131529	0					
ANR	5131545	PrimaryExpression	0		5131529	1					
ANR	5131546	IdentifierDeclStatement	int elem = - 1 ;	1042:1:24512:24525	5131529	2	True				
ANR	5131547	IdentifierDecl	elem = - 1		5131529	0					
ANR	5131548	IdentifierDeclType	int		5131529	0					
ANR	5131549	Identifier	elem		5131529	1					
ANR	5131550	AssignmentExpression	elem = - 1		5131529	2		=			
ANR	5131551	Identifier	elem		5131529	0					
ANR	5131552	UnaryOperationExpression	- 1		5131529	1					
ANR	5131553	UnaryOperator	-		5131529	0					
ANR	5131554	PrimaryExpression	1		5131529	1					
ANR	5131555	IfStatement	if ( size >= ARRAYINDEX_COEF )		5131529	3					
ANR	5131556	Condition	size >= ARRAYINDEX_COEF	1043:5:24532:24554	5131529	0	True				
ANR	5131557	RelationalExpression	size >= ARRAYINDEX_COEF		5131529	0		>=			
ANR	5131558	Identifier	size		5131529	0					
ANR	5131559	Identifier	ARRAYINDEX_COEF		5131529	1					
ANR	5131560	CompoundStatement		5:30:84:84	5131529	1					
ANR	5131561	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	1044:2:24561:24592	5131529	0	True				
ANR	5131562	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5131529	0		=			
ANR	5131563	Identifier	elem		5131529	0					
ANR	5131564	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5131529	1		-			
ANR	5131565	MultiplicativeExpression	size / ARRAYINDEX_COEF		5131529	0		/			
ANR	5131566	Identifier	size		5131529	0					
ANR	5131567	Identifier	ARRAYINDEX_COEF		5131529	1					
ANR	5131568	PrimaryExpression	1		5131529	1					
ANR	5131569	ExpressionStatement	size %= ARRAYINDEX_COEF	1045:2:24596:24619	5131529	1	True				
ANR	5131570	AssignmentExpression	size %= ARRAYINDEX_COEF		5131529	0		%=			
ANR	5131571	Identifier	size		5131529	0					
ANR	5131572	Identifier	ARRAYINDEX_COEF		5131529	1					
ANR	5131573	ExpressionStatement	"updateAddr ( buf + i , 999 , endian , & addr , NULL )"	1047:1:24625:24671	5131529	4	True				
ANR	5131574	CallExpression	"updateAddr ( buf + i , 999 , endian , & addr , NULL )"		5131529	0					
ANR	5131575	Callee	updateAddr		5131529	0					
ANR	5131576	Identifier	updateAddr		5131529	0					
ANR	5131577	ArgumentList	buf + i		5131529	1					
ANR	5131578	Argument	buf + i		5131529	0					
ANR	5131579	AdditiveExpression	buf + i		5131529	0		+			
ANR	5131580	Identifier	buf		5131529	0					
ANR	5131581	Identifier	i		5131529	1					
ANR	5131582	Argument	999		5131529	1					
ANR	5131583	PrimaryExpression	999		5131529	0					
ANR	5131584	Argument	endian		5131529	2					
ANR	5131585	Identifier	endian		5131529	0					
ANR	5131586	Argument	& addr		5131529	3					
ANR	5131587	UnaryOperationExpression	& addr		5131529	0					
ANR	5131588	UnaryOperator	&		5131529	0					
ANR	5131589	Identifier	addr		5131529	1					
ANR	5131590	Argument	NULL		5131529	4					
ANR	5131591	Identifier	NULL		5131529	0					
ANR	5131592	ExpressionStatement	"r_mem_swaporcopy ( ( ut8 * ) & val_f , buf + i , sizeof ( double ) , endian )"	1048:1:24674:24739	5131529	5	True				
ANR	5131593	CallExpression	"r_mem_swaporcopy ( ( ut8 * ) & val_f , buf + i , sizeof ( double ) , endian )"		5131529	0					
ANR	5131594	Callee	r_mem_swaporcopy		5131529	0					
ANR	5131595	Identifier	r_mem_swaporcopy		5131529	0					
ANR	5131596	ArgumentList	( ut8 * ) & val_f		5131529	1					
ANR	5131597	Argument	( ut8 * ) & val_f		5131529	0					
ANR	5131598	CastExpression	( ut8 * ) & val_f		5131529	0					
ANR	5131599	CastTarget	ut8 *		5131529	0					
ANR	5131600	UnaryOperationExpression	& val_f		5131529	1					
ANR	5131601	UnaryOperator	&		5131529	0					
ANR	5131602	Identifier	val_f		5131529	1					
ANR	5131603	Argument	buf + i		5131529	1					
ANR	5131604	AdditiveExpression	buf + i		5131529	0		+			
ANR	5131605	Identifier	buf		5131529	0					
ANR	5131606	Identifier	i		5131529	1					
ANR	5131607	Argument	sizeof ( double )		5131529	2					
ANR	5131608	SizeofExpression	sizeof ( double )		5131529	0					
ANR	5131609	Sizeof	sizeof		5131529	0					
ANR	5131610	SizeofOperand	double		5131529	1					
ANR	5131611	Argument	endian		5131529	3					
ANR	5131612	Identifier	endian		5131529	0					
ANR	5131613	IfStatement	if ( MUSTSET )		5131529	6					
ANR	5131614	Condition	MUSTSET	1049:5:24746:24752	5131529	0	True				
ANR	5131615	Identifier	MUSTSET		5131529	0					
ANR	5131616	CompoundStatement		11:14:282:282	5131529	1					
ANR	5131617	Statement	p	1050:2:24759:24759	5131529	0	True				
ANR	5131618	Statement	->	1050:3:24760:24761	5131529	1	True				
ANR	5131619	Statement	cb_printf	1050:5:24762:24770	5131529	2	True				
ANR	5131620	Statement	(	1050:15:24772:24772	5131529	3	True				
ANR	5131621	Statement	"""wv8 %s @ 0x%08"""	1050:16:24773:24788	5131529	4	True				
ANR	5131622	Statement	PFMT64x	1050:32:24789:24795	5131529	5	True				
ANR	5131623	Statement	"""\\n"""	1050:39:24796:24799	5131529	6	True				
ANR	5131624	Statement	","	1050:43:24800:24800	5131529	7	True				
ANR	5131625	Statement	setval	1050:45:24802:24807	5131529	8	True				
ANR	5131626	Statement	","	1050:51:24808:24808	5131529	9	True				
ANR	5131627	Statement	seeki	1051:3:24813:24817	5131529	10	True				
ANR	5131628	Statement	+	1051:9:24819:24819	5131529	11	True				
ANR	5131629	Statement	(	1051:11:24821:24821	5131529	12	True				
ANR	5131630	Statement	(	1051:12:24822:24822	5131529	13	True				
ANR	5131631	Statement	elem	1051:13:24823:24826	5131529	14	True				
ANR	5131632	Statement	>=	1051:18:24828:24829	5131529	15	True				
ANR	5131633	Statement	0	1051:21:24831:24831	5131529	16	True				
ANR	5131634	Statement	)	1051:22:24832:24832	5131529	17	True				
ANR	5131635	Statement	?	1051:24:24834:24834	5131529	18	True				
ANR	5131636	Statement	elem	1051:26:24836:24839	5131529	19	True				
ANR	5131637	Statement	*	1051:31:24841:24841	5131529	20	True				
ANR	5131638	Label	8 :	1051:33:24843:24845	5131529	21	True				
ANR	5131639	Statement	0	1051:37:24847:24847	5131529	22	True				
ANR	5131640	Statement	)	1051:38:24848:24848	5131529	23	True				
ANR	5131641	Statement	)	1051:39:24849:24849	5131529	24	True				
ANR	5131642	ExpressionStatement		1051:40:24850:24850	5131529	25	True				
ANR	5131643	ElseStatement	else		5131529	0					
ANR	5131644	IfStatement	if ( ( mode & R_PRINT_DOT ) || MUSTSEESTRUCT )		5131529	0					
ANR	5131645	Condition	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT	1052:12:24864:24900	5131529	0	True				
ANR	5131646	OrExpression	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT		5131529	0		||			
ANR	5131647	BitAndExpression	mode & R_PRINT_DOT		5131529	0		&			
ANR	5131648	Identifier	mode		5131529	0					
ANR	5131649	Identifier	R_PRINT_DOT		5131529	1					
ANR	5131650	Identifier	MUSTSEESTRUCT		5131529	1					
ANR	5131651	CompoundStatement		14:51:430:430	5131529	1					
ANR	5131652	ExpressionStatement	"p -> cb_printf ( ""%.17g"" , val_f )"	1053:2:24907:24936	5131529	0	True				
ANR	5131653	CallExpression	"p -> cb_printf ( ""%.17g"" , val_f )"		5131529	0					
ANR	5131654	Callee	p -> cb_printf		5131529	0					
ANR	5131655	PtrMemberAccess	p -> cb_printf		5131529	0					
ANR	5131656	Identifier	p		5131529	0					
ANR	5131657	Identifier	cb_printf		5131529	1					
ANR	5131658	ArgumentList	"""%.17g"""		5131529	1					
ANR	5131659	Argument	"""%.17g"""		5131529	0					
ANR	5131660	PrimaryExpression	"""%.17g"""		5131529	0					
ANR	5131661	Argument	val_f		5131529	1					
ANR	5131662	Identifier	val_f		5131529	0					
ANR	5131663	ElseStatement	else		5131529	0					
ANR	5131664	CompoundStatement		16:8:473:473	5131529	0					
ANR	5131665	IfStatement	if ( MUSTSEE )		5131529	0					
ANR	5131666	Condition	MUSTSEE	1055:6:24954:24960	5131529	0	True				
ANR	5131667	Identifier	MUSTSEE		5131529	0					
ANR	5131668	CompoundStatement		17:15:490:490	5131529	1					
ANR	5131669	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5131529	0					
ANR	5131670	Condition	! SEEVALUE && ! ISQUIET	1056:7:24972:24992	5131529	0	True				
ANR	5131671	AndExpression	! SEEVALUE && ! ISQUIET		5131529	0		&&			
ANR	5131672	UnaryOperationExpression	! SEEVALUE		5131529	0					
ANR	5131673	UnaryOperator	!		5131529	0					
ANR	5131674	Identifier	SEEVALUE		5131529	1					
ANR	5131675	UnaryOperationExpression	! ISQUIET		5131529	1					
ANR	5131676	UnaryOperator	!		5131529	0					
ANR	5131677	Identifier	ISQUIET		5131529	1					
ANR	5131678	CompoundStatement		18:30:522:522	5131529	1					
ANR	5131679	Statement	p	1057:4:25001:25001	5131529	0	True				
ANR	5131680	Statement	->	1057:5:25002:25003	5131529	1	True				
ANR	5131681	Statement	cb_printf	1057:7:25004:25012	5131529	2	True				
ANR	5131682	Statement	(	1057:17:25014:25014	5131529	3	True				
ANR	5131683	Statement	"""0x%08"""	1057:18:25015:25021	5131529	4	True				
ANR	5131684	Statement	PFMT64x	1057:25:25022:25028	5131529	5	True				
ANR	5131685	Statement	""" = """	1057:32:25029:25033	5131529	6	True				
ANR	5131686	Statement	","	1057:37:25034:25034	5131529	7	True				
ANR	5131687	Statement	seeki	1058:5:25041:25045	5131529	8	True				
ANR	5131688	Statement	+	1058:11:25047:25047	5131529	9	True				
ANR	5131689	Statement	(	1058:13:25049:25049	5131529	10	True				
ANR	5131690	Statement	(	1058:14:25050:25050	5131529	11	True				
ANR	5131691	Statement	elem	1058:15:25051:25054	5131529	12	True				
ANR	5131692	Statement	>=	1058:20:25056:25057	5131529	13	True				
ANR	5131693	Statement	0	1058:23:25059:25059	5131529	14	True				
ANR	5131694	Statement	)	1058:24:25060:25060	5131529	15	True				
ANR	5131695	Statement	?	1058:26:25062:25062	5131529	16	True				
ANR	5131696	Statement	elem	1058:28:25064:25067	5131529	17	True				
ANR	5131697	Statement	*	1058:33:25069:25069	5131529	18	True				
ANR	5131698	Label	8 :	1058:35:25071:25073	5131529	19	True				
ANR	5131699	Statement	0	1058:39:25075:25075	5131529	20	True				
ANR	5131700	Statement	)	1058:40:25076:25076	5131529	21	True				
ANR	5131701	Statement	)	1058:41:25077:25077	5131529	22	True				
ANR	5131702	ExpressionStatement		1058:42:25078:25078	5131529	23	True				
ANR	5131703	IfStatement	if ( size == - 1 )		5131529	1					
ANR	5131704	Condition	size == - 1	1061:6:25095:25104	5131529	0	True				
ANR	5131705	EqualityExpression	size == - 1		5131529	0		==			
ANR	5131706	Identifier	size		5131529	0					
ANR	5131707	UnaryOperationExpression	- 1		5131529	1					
ANR	5131708	UnaryOperator	-		5131529	0					
ANR	5131709	PrimaryExpression	1		5131529	1					
ANR	5131710	CompoundStatement		23:18:634:634	5131529	1					
ANR	5131711	ExpressionStatement	"p -> cb_printf ( ""%.17g"" , val_f )"	1062:3:25112:25141	5131529	0	True				
ANR	5131712	CallExpression	"p -> cb_printf ( ""%.17g"" , val_f )"		5131529	0					
ANR	5131713	Callee	p -> cb_printf		5131529	0					
ANR	5131714	PtrMemberAccess	p -> cb_printf		5131529	0					
ANR	5131715	Identifier	p		5131529	0					
ANR	5131716	Identifier	cb_printf		5131529	1					
ANR	5131717	ArgumentList	"""%.17g"""		5131529	1					
ANR	5131718	Argument	"""%.17g"""		5131529	0					
ANR	5131719	PrimaryExpression	"""%.17g"""		5131529	0					
ANR	5131720	Argument	val_f		5131529	1					
ANR	5131721	Identifier	val_f		5131529	0					
ANR	5131722	ElseStatement	else		5131529	0					
ANR	5131723	CompoundStatement		25:9:679:679	5131529	0					
ANR	5131724	IfStatement	if ( ! SEEVALUE )		5131529	0					
ANR	5131725	Condition	! SEEVALUE	1064:7:25161:25169	5131529	0	True				
ANR	5131726	UnaryOperationExpression	! SEEVALUE		5131529	0					
ANR	5131727	UnaryOperator	!		5131529	0					
ANR	5131728	Identifier	SEEVALUE		5131529	1					
ANR	5131729	CompoundStatement		26:18:699:699	5131529	1					
ANR	5131730	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	1065:4:25178:25197	5131529	0	True				
ANR	5131731	CallExpression	"p -> cb_printf ( ""[ "" )"		5131529	0					
ANR	5131732	Callee	p -> cb_printf		5131529	0					
ANR	5131733	PtrMemberAccess	p -> cb_printf		5131529	0					
ANR	5131734	Identifier	p		5131529	0					
ANR	5131735	Identifier	cb_printf		5131529	1					
ANR	5131736	ArgumentList	"""[ """		5131529	1					
ANR	5131737	Argument	"""[ """		5131529	0					
ANR	5131738	PrimaryExpression	"""[ """		5131529	0					
ANR	5131739	WhileStatement	while ( size -- )		5131529	1					
ANR	5131740	Condition	size --	1067:10:25214:25219	5131529	0	True				
ANR	5131741	PostIncDecOperationExpression	size --		5131529	0					
ANR	5131742	Identifier	size		5131529	0					
ANR	5131743	IncDec	--		5131529	1					
ANR	5131744	CompoundStatement		29:18:749:749	5131529	1					
ANR	5131745	ExpressionStatement	"updateAddr ( buf + i , 9999 , endian , & addr , NULL )"	1069:4:25257:25304	5131529	0	True				
ANR	5131746	CallExpression	"updateAddr ( buf + i , 9999 , endian , & addr , NULL )"		5131529	0					
ANR	5131747	Callee	updateAddr		5131529	0					
ANR	5131748	Identifier	updateAddr		5131529	0					
ANR	5131749	ArgumentList	buf + i		5131529	1					
ANR	5131750	Argument	buf + i		5131529	0					
ANR	5131751	AdditiveExpression	buf + i		5131529	0		+			
ANR	5131752	Identifier	buf		5131529	0					
ANR	5131753	Identifier	i		5131529	1					
ANR	5131754	Argument	9999		5131529	1					
ANR	5131755	PrimaryExpression	9999		5131529	0					
ANR	5131756	Argument	endian		5131529	2					
ANR	5131757	Identifier	endian		5131529	0					
ANR	5131758	Argument	& addr		5131529	3					
ANR	5131759	UnaryOperationExpression	& addr		5131529	0					
ANR	5131760	UnaryOperator	&		5131529	0					
ANR	5131761	Identifier	addr		5131529	1					
ANR	5131762	Argument	NULL		5131529	4					
ANR	5131763	Identifier	NULL		5131529	0					
ANR	5131764	ExpressionStatement	"r_mem_swaporcopy ( ( ut8 * ) & val_f , buf + i , sizeof ( double ) , endian )"	1070:4:25310:25375	5131529	1	True				
ANR	5131765	CallExpression	"r_mem_swaporcopy ( ( ut8 * ) & val_f , buf + i , sizeof ( double ) , endian )"		5131529	0					
ANR	5131766	Callee	r_mem_swaporcopy		5131529	0					
ANR	5131767	Identifier	r_mem_swaporcopy		5131529	0					
ANR	5131768	ArgumentList	( ut8 * ) & val_f		5131529	1					
ANR	5131769	Argument	( ut8 * ) & val_f		5131529	0					
ANR	5131770	CastExpression	( ut8 * ) & val_f		5131529	0					
ANR	5131771	CastTarget	ut8 *		5131529	0					
ANR	5131772	UnaryOperationExpression	& val_f		5131529	1					
ANR	5131773	UnaryOperator	&		5131529	0					
ANR	5131774	Identifier	val_f		5131529	1					
ANR	5131775	Argument	buf + i		5131529	1					
ANR	5131776	AdditiveExpression	buf + i		5131529	0		+			
ANR	5131777	Identifier	buf		5131529	0					
ANR	5131778	Identifier	i		5131529	1					
ANR	5131779	Argument	sizeof ( double )		5131529	2					
ANR	5131780	SizeofExpression	sizeof ( double )		5131529	0					
ANR	5131781	Sizeof	sizeof		5131529	0					
ANR	5131782	SizeofOperand	double		5131529	1					
ANR	5131783	Argument	endian		5131529	3					
ANR	5131784	Identifier	endian		5131529	0					
ANR	5131785	IfStatement	if ( elem == - 1 || elem == 0 )		5131529	2					
ANR	5131786	Condition	elem == - 1 || elem == 0	1071:8:25385:25407	5131529	0	True				
ANR	5131787	OrExpression	elem == - 1 || elem == 0		5131529	0		||			
ANR	5131788	EqualityExpression	elem == - 1		5131529	0		==			
ANR	5131789	Identifier	elem		5131529	0					
ANR	5131790	UnaryOperationExpression	- 1		5131529	1					
ANR	5131791	UnaryOperator	-		5131529	0					
ANR	5131792	PrimaryExpression	1		5131529	1					
ANR	5131793	EqualityExpression	elem == 0		5131529	1		==			
ANR	5131794	Identifier	elem		5131529	0					
ANR	5131795	PrimaryExpression	0		5131529	1					
ANR	5131796	CompoundStatement		33:33:937:937	5131529	1					
ANR	5131797	ExpressionStatement	"p -> cb_printf ( ""%.17g"" , val_f )"	1072:5:25417:25446	5131529	0	True				
ANR	5131798	CallExpression	"p -> cb_printf ( ""%.17g"" , val_f )"		5131529	0					
ANR	5131799	Callee	p -> cb_printf		5131529	0					
ANR	5131800	PtrMemberAccess	p -> cb_printf		5131529	0					
ANR	5131801	Identifier	p		5131529	0					
ANR	5131802	Identifier	cb_printf		5131529	1					
ANR	5131803	ArgumentList	"""%.17g"""		5131529	1					
ANR	5131804	Argument	"""%.17g"""		5131529	0					
ANR	5131805	PrimaryExpression	"""%.17g"""		5131529	0					
ANR	5131806	Argument	val_f		5131529	1					
ANR	5131807	Identifier	val_f		5131529	0					
ANR	5131808	IfStatement	if ( elem == 0 )		5131529	1					
ANR	5131809	Condition	elem == 0	1073:9:25457:25465	5131529	0	True				
ANR	5131810	EqualityExpression	elem == 0		5131529	0		==			
ANR	5131811	Identifier	elem		5131529	0					
ANR	5131812	PrimaryExpression	0		5131529	1					
ANR	5131813	CompoundStatement		35:20:995:995	5131529	1					
ANR	5131814	ExpressionStatement	elem = - 2	1074:6:25476:25485	5131529	0	True				
ANR	5131815	AssignmentExpression	elem = - 2		5131529	0		=			
ANR	5131816	Identifier	elem		5131529	0					
ANR	5131817	UnaryOperationExpression	- 2		5131529	1					
ANR	5131818	UnaryOperator	-		5131529	0					
ANR	5131819	PrimaryExpression	2		5131529	1					
ANR	5131820	IfStatement	if ( size != 0 && elem == - 1 )		5131529	3					
ANR	5131821	Condition	size != 0 && elem == - 1	1077:8:25508:25530	5131529	0	True				
ANR	5131822	AndExpression	size != 0 && elem == - 1		5131529	0		&&			
ANR	5131823	EqualityExpression	size != 0		5131529	0		!=			
ANR	5131824	Identifier	size		5131529	0					
ANR	5131825	PrimaryExpression	0		5131529	1					
ANR	5131826	EqualityExpression	elem == - 1		5131529	1		==			
ANR	5131827	Identifier	elem		5131529	0					
ANR	5131828	UnaryOperationExpression	- 1		5131529	1					
ANR	5131829	UnaryOperator	-		5131529	0					
ANR	5131830	PrimaryExpression	1		5131529	1					
ANR	5131831	CompoundStatement		39:33:1060:1060	5131529	1					
ANR	5131832	ExpressionStatement	"p -> cb_printf ( "", "" )"	1078:5:25540:25559	5131529	0	True				
ANR	5131833	CallExpression	"p -> cb_printf ( "", "" )"		5131529	0					
ANR	5131834	Callee	p -> cb_printf		5131529	0					
ANR	5131835	PtrMemberAccess	p -> cb_printf		5131529	0					
ANR	5131836	Identifier	p		5131529	0					
ANR	5131837	Identifier	cb_printf		5131529	1					
ANR	5131838	ArgumentList	""", """		5131529	1					
ANR	5131839	Argument	""", """		5131529	0					
ANR	5131840	PrimaryExpression	""", """		5131529	0					
ANR	5131841	IfStatement	if ( elem > - 1 )		5131529	4					
ANR	5131842	Condition	elem > - 1	1080:8:25575:25583	5131529	0	True				
ANR	5131843	RelationalExpression	elem > - 1		5131529	0		>			
ANR	5131844	Identifier	elem		5131529	0					
ANR	5131845	UnaryOperationExpression	- 1		5131529	1					
ANR	5131846	UnaryOperator	-		5131529	0					
ANR	5131847	PrimaryExpression	1		5131529	1					
ANR	5131848	CompoundStatement		42:19:1113:1113	5131529	1					
ANR	5131849	ExpressionStatement	elem --	1081:5:25593:25599	5131529	0	True				
ANR	5131850	PostIncDecOperationExpression	elem --		5131529	0					
ANR	5131851	Identifier	elem		5131529	0					
ANR	5131852	IncDec	--		5131529	1					
ANR	5131853	ExpressionStatement	i += 8	1083:4:25611:25617	5131529	5	True				
ANR	5131854	AssignmentExpression	i += 8		5131529	0		+=			
ANR	5131855	Identifier	i		5131529	0					
ANR	5131856	PrimaryExpression	8		5131529	1					
ANR	5131857	IfStatement	if ( ! SEEVALUE )		5131529	2					
ANR	5131858	Condition	! SEEVALUE	1085:7:25631:25639	5131529	0	True				
ANR	5131859	UnaryOperationExpression	! SEEVALUE		5131529	0					
ANR	5131860	UnaryOperator	!		5131529	0					
ANR	5131861	Identifier	SEEVALUE		5131529	1					
ANR	5131862	CompoundStatement		47:18:1169:1169	5131529	1					
ANR	5131863	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	1086:4:25648:25667	5131529	0	True				
ANR	5131864	CallExpression	"p -> cb_printf ( "" ]"" )"		5131529	0					
ANR	5131865	Callee	p -> cb_printf		5131529	0					
ANR	5131866	PtrMemberAccess	p -> cb_printf		5131529	0					
ANR	5131867	Identifier	p		5131529	0					
ANR	5131868	Identifier	cb_printf		5131529	1					
ANR	5131869	ArgumentList	""" ]"""		5131529	1					
ANR	5131870	Argument	""" ]"""		5131529	0					
ANR	5131871	PrimaryExpression	""" ]"""		5131529	0					
ANR	5131872	IfStatement	if ( MUSTSEEJSON )		5131529	2					
ANR	5131873	Condition	MUSTSEEJSON	1089:6:25684:25694	5131529	0	True				
ANR	5131874	Identifier	MUSTSEEJSON		5131529	0					
ANR	5131875	CompoundStatement		51:19:1224:1224	5131529	1					
ANR	5131876	ExpressionStatement	"p -> cb_printf ( ""}"" )"	1090:3:25702:25720	5131529	0	True				
ANR	5131877	CallExpression	"p -> cb_printf ( ""}"" )"		5131529	0					
ANR	5131878	Callee	p -> cb_printf		5131529	0					
ANR	5131879	PtrMemberAccess	p -> cb_printf		5131529	0					
ANR	5131880	Identifier	p		5131529	0					
ANR	5131881	Identifier	cb_printf		5131529	1					
ANR	5131882	ArgumentList	"""}"""		5131529	1					
ANR	5131883	Argument	"""}"""		5131529	0					
ANR	5131884	PrimaryExpression	"""}"""		5131529	0					
ANR	5131885	ReturnType	static void		5131529	1					
ANR	5131886	Identifier	r_print_format_double		5131529	2					
ANR	5131887	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5131529	3					
ANR	5131888	Parameter	const RPrint * p	1038:34:24372:24386	5131529	0	True				
ANR	5131889	ParameterType	const RPrint *		5131529	0					
ANR	5131890	Identifier	p		5131529	1					
ANR	5131891	Parameter	int endian	1038:51:24389:24398	5131529	1	True				
ANR	5131892	ParameterType	int		5131529	0					
ANR	5131893	Identifier	endian		5131529	1					
ANR	5131894	Parameter	int mode	1038:63:24401:24408	5131529	2	True				
ANR	5131895	ParameterType	int		5131529	0					
ANR	5131896	Identifier	mode		5131529	1					
ANR	5131897	Parameter	const char * setval	1039:2:24413:24430	5131529	3	True				
ANR	5131898	ParameterType	const char *		5131529	0					
ANR	5131899	Identifier	setval		5131529	1					
ANR	5131900	Parameter	ut64 seeki	1039:22:24433:24442	5131529	4	True				
ANR	5131901	ParameterType	ut64		5131529	0					
ANR	5131902	Identifier	seeki		5131529	1					
ANR	5131903	Parameter	ut8 * buf	1039:34:24445:24452	5131529	5	True				
ANR	5131904	ParameterType	ut8 *		5131529	0					
ANR	5131905	Identifier	buf		5131529	1					
ANR	5131906	Parameter	int i	1039:44:24455:24459	5131529	6	True				
ANR	5131907	ParameterType	int		5131529	0					
ANR	5131908	Identifier	i		5131529	1					
ANR	5131909	Parameter	int size	1039:51:24462:24469	5131529	7	True				
ANR	5131910	ParameterType	int		5131529	0					
ANR	5131911	Identifier	size		5131529	1					
ANR	5131912	CFGEntryNode	ENTRY		5131529		True				
ANR	5131913	CFGExitNode	EXIT		5131529		True				
ANR	5131914	Symbol	elem		5131529						
ANR	5131915	Symbol	& addr		5131529						
ANR	5131916	Symbol	NULL		5131529						
ANR	5131917	Symbol	MUSTSEEJSON		5131529						
ANR	5131918	Symbol	val_f		5131529						
ANR	5131919	Symbol	MUSTSEESTRUCT		5131529						
ANR	5131920	Symbol	i		5131529						
ANR	5131921	Symbol	ISQUIET		5131529						
ANR	5131922	Symbol	endian		5131529						
ANR	5131923	Symbol	MUSTSEE		5131529						
ANR	5131924	Symbol	p		5131529						
ANR	5131925	Symbol	mode		5131529						
ANR	5131926	Symbol	ARRAYINDEX_COEF		5131529						
ANR	5131927	Symbol	buf		5131529						
ANR	5131928	Symbol	size		5131529						
ANR	5131929	Symbol	seeki		5131529						
ANR	5131930	Symbol	SEEVALUE		5131529						
ANR	5131931	Symbol	R_PRINT_DOT		5131529						
ANR	5131932	Symbol	& val_f		5131529						
ANR	5131933	Symbol	setval		5131529						
ANR	5131934	Symbol	addr		5131529						
ANR	5131935	Symbol	MUSTSET		5131529						
ANR	5131936	Function	r_print_format_word	1095:0:25732:27815							
ANR	5131937	FunctionDef	"r_print_format_word (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5131936	0					
ANR	5131938	CompoundStatement		1096:61:25864:27815	5131936	0					
ANR	5131939	IdentifierDeclStatement	ut64 addr ;	1097:1:25867:25876	5131936	0	True				
ANR	5131940	IdentifierDecl	addr		5131936	0					
ANR	5131941	IdentifierDeclType	ut64		5131936	0					
ANR	5131942	Identifier	addr		5131936	1					
ANR	5131943	IdentifierDeclStatement	int elem = - 1 ;	1098:1:25879:25892	5131936	1	True				
ANR	5131944	IdentifierDecl	elem = - 1		5131936	0					
ANR	5131945	IdentifierDeclType	int		5131936	0					
ANR	5131946	Identifier	elem		5131936	1					
ANR	5131947	AssignmentExpression	elem = - 1		5131936	2		=			
ANR	5131948	Identifier	elem		5131936	0					
ANR	5131949	UnaryOperationExpression	- 1		5131936	1					
ANR	5131950	UnaryOperator	-		5131936	0					
ANR	5131951	PrimaryExpression	1		5131936	1					
ANR	5131952	IfStatement	if ( size >= ARRAYINDEX_COEF )		5131936	2					
ANR	5131953	Condition	size >= ARRAYINDEX_COEF	1099:5:25899:25921	5131936	0	True				
ANR	5131954	RelationalExpression	size >= ARRAYINDEX_COEF		5131936	0		>=			
ANR	5131955	Identifier	size		5131936	0					
ANR	5131956	Identifier	ARRAYINDEX_COEF		5131936	1					
ANR	5131957	CompoundStatement		4:30:59:59	5131936	1					
ANR	5131958	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	1100:2:25928:25957	5131936	0	True				
ANR	5131959	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5131936	0		=			
ANR	5131960	Identifier	elem		5131936	0					
ANR	5131961	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5131936	1		-			
ANR	5131962	MultiplicativeExpression	size / ARRAYINDEX_COEF		5131936	0		/			
ANR	5131963	Identifier	size		5131936	0					
ANR	5131964	Identifier	ARRAYINDEX_COEF		5131936	1					
ANR	5131965	PrimaryExpression	1		5131936	1					
ANR	5131966	ExpressionStatement	size %= ARRAYINDEX_COEF	1101:2:25961:25984	5131936	1	True				
ANR	5131967	AssignmentExpression	size %= ARRAYINDEX_COEF		5131936	0		%=			
ANR	5131968	Identifier	size		5131936	0					
ANR	5131969	Identifier	ARRAYINDEX_COEF		5131936	1					
ANR	5131970	ExpressionStatement	addr = endian ? ( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) ) : ( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )	1103:1:25990:26085	5131936	3	True				
ANR	5131971	AssignmentExpression	addr = endian ? ( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) ) : ( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )		5131936	0		=			
ANR	5131972	Identifier	addr		5131936	0					
ANR	5131973	ConditionalExpression	endian ? ( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) ) : ( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )		5131936	1					
ANR	5131974	Condition	endian		5131936	0					
ANR	5131975	Identifier	endian		5131936	0					
ANR	5131976	InclusiveOrExpression	( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) )		5131936	1		|			
ANR	5131977	ShiftExpression	( * ( buf + i ) ) << 8		5131936	0		<<			
ANR	5131978	UnaryOperationExpression	* ( buf + i )		5131936	0					
ANR	5131979	UnaryOperator	*		5131936	0					
ANR	5131980	AdditiveExpression	buf + i		5131936	1		+			
ANR	5131981	Identifier	buf		5131936	0					
ANR	5131982	Identifier	i		5131936	1					
ANR	5131983	PrimaryExpression	8		5131936	1					
ANR	5131984	UnaryOperationExpression	* ( buf + i + 1 )		5131936	1					
ANR	5131985	UnaryOperator	*		5131936	0					
ANR	5131986	AdditiveExpression	buf + i + 1		5131936	1		+			
ANR	5131987	Identifier	buf		5131936	0					
ANR	5131988	AdditiveExpression	i + 1		5131936	1		+			
ANR	5131989	Identifier	i		5131936	0					
ANR	5131990	PrimaryExpression	1		5131936	1					
ANR	5131991	InclusiveOrExpression	( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )		5131936	2		|			
ANR	5131992	ShiftExpression	( * ( buf + i + 1 ) ) << 8		5131936	0		<<			
ANR	5131993	UnaryOperationExpression	* ( buf + i + 1 )		5131936	0					
ANR	5131994	UnaryOperator	*		5131936	0					
ANR	5131995	AdditiveExpression	buf + i + 1		5131936	1		+			
ANR	5131996	Identifier	buf		5131936	0					
ANR	5131997	AdditiveExpression	i + 1		5131936	1		+			
ANR	5131998	Identifier	i		5131936	0					
ANR	5131999	PrimaryExpression	1		5131936	1					
ANR	5132000	PrimaryExpression	8		5131936	1					
ANR	5132001	UnaryOperationExpression	* ( buf + i )		5131936	1					
ANR	5132002	UnaryOperator	*		5131936	0					
ANR	5132003	AdditiveExpression	buf + i		5131936	1		+			
ANR	5132004	Identifier	buf		5131936	0					
ANR	5132005	Identifier	i		5131936	1					
ANR	5132006	IfStatement	if ( MUSTSET )		5131936	4					
ANR	5132007	Condition	MUSTSET	1106:5:26092:26098	5131936	0	True				
ANR	5132008	Identifier	MUSTSET		5131936	0					
ANR	5132009	CompoundStatement		11:14:236:236	5131936	1					
ANR	5132010	Statement	p	1107:2:26105:26105	5131936	0	True				
ANR	5132011	Statement	->	1107:3:26106:26107	5131936	1	True				
ANR	5132012	Statement	cb_printf	1107:5:26108:26116	5131936	2	True				
ANR	5132013	Statement	(	1107:15:26118:26118	5131936	3	True				
ANR	5132014	Statement	"""wv2 %s @ 0x%08"""	1107:16:26119:26134	5131936	4	True				
ANR	5132015	Statement	PFMT64x	1107:32:26135:26141	5131936	5	True				
ANR	5132016	Statement	"""\\n"""	1107:39:26142:26145	5131936	6	True				
ANR	5132017	Statement	","	1107:43:26146:26146	5131936	7	True				
ANR	5132018	Statement	setval	1107:45:26148:26153	5131936	8	True				
ANR	5132019	Statement	","	1107:51:26154:26154	5131936	9	True				
ANR	5132020	Statement	seeki	1107:53:26156:26160	5131936	10	True				
ANR	5132021	Statement	+	1107:58:26161:26161	5131936	11	True				
ANR	5132022	Statement	(	1107:59:26162:26162	5131936	12	True				
ANR	5132023	Statement	(	1107:60:26163:26163	5131936	13	True				
ANR	5132024	Statement	elem	1107:61:26164:26167	5131936	14	True				
ANR	5132025	Statement	>=	1107:65:26168:26169	5131936	15	True				
ANR	5132026	Statement	0	1107:67:26170:26170	5131936	16	True				
ANR	5132027	Statement	)	1107:68:26171:26171	5131936	17	True				
ANR	5132028	Statement	?	1107:69:26172:26172	5131936	18	True				
ANR	5132029	Statement	elem	1107:70:26173:26176	5131936	19	True				
ANR	5132030	Statement	*	1107:74:26177:26177	5131936	20	True				
ANR	5132031	Label	2 :	1107:75:26178:26179	5131936	21	True				
ANR	5132032	Statement	0	1107:77:26180:26180	5131936	22	True				
ANR	5132033	Statement	)	1107:78:26181:26181	5131936	23	True				
ANR	5132034	Statement	)	1107:79:26182:26182	5131936	24	True				
ANR	5132035	ExpressionStatement		1107:80:26183:26183	5131936	25	True				
ANR	5132036	ElseStatement	else		5131936	0					
ANR	5132037	IfStatement	if ( ( mode & R_PRINT_DOT ) || MUSTSEESTRUCT )		5131936	0					
ANR	5132038	Condition	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT	1108:12:26197:26233	5131936	0	True				
ANR	5132039	OrExpression	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT		5131936	0		||			
ANR	5132040	BitAndExpression	mode & R_PRINT_DOT		5131936	0		&			
ANR	5132041	Identifier	mode		5131936	0					
ANR	5132042	Identifier	R_PRINT_DOT		5131936	1					
ANR	5132043	Identifier	MUSTSEESTRUCT		5131936	1					
ANR	5132044	CompoundStatement		13:51:371:371	5131936	1					
ANR	5132045	IfStatement	if ( size == - 1 )		5131936	0					
ANR	5132046	Condition	size == - 1	1109:6:26244:26253	5131936	0	True				
ANR	5132047	EqualityExpression	size == - 1		5131936	0		==			
ANR	5132048	Identifier	size		5131936	0					
ANR	5132049	UnaryOperationExpression	- 1		5131936	1					
ANR	5132050	UnaryOperator	-		5131936	0					
ANR	5132051	PrimaryExpression	1		5131936	1					
ANR	5132052	CompoundStatement		14:18:391:391	5131936	1					
ANR	5132053	ExpressionStatement	"p -> cb_printf ( ""0x%04x"" , addr )"	1110:3:26261:26290	5131936	0	True				
ANR	5132054	CallExpression	"p -> cb_printf ( ""0x%04x"" , addr )"		5131936	0					
ANR	5132055	Callee	p -> cb_printf		5131936	0					
ANR	5132056	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132057	Identifier	p		5131936	0					
ANR	5132058	Identifier	cb_printf		5131936	1					
ANR	5132059	ArgumentList	"""0x%04x"""		5131936	1					
ANR	5132060	Argument	"""0x%04x"""		5131936	0					
ANR	5132061	PrimaryExpression	"""0x%04x"""		5131936	0					
ANR	5132062	Argument	addr		5131936	1					
ANR	5132063	Identifier	addr		5131936	0					
ANR	5132064	WhileStatement	while ( ( size -= 2 ) > 0 )		5131936	1					
ANR	5132065	Condition	( size -= 2 ) > 0	1112:9:26305:26319	5131936	0	True				
ANR	5132066	RelationalExpression	( size -= 2 ) > 0		5131936	0		>			
ANR	5132067	AssignmentExpression	size -= 2		5131936	0		-=			
ANR	5132068	Identifier	size		5131936	0					
ANR	5132069	PrimaryExpression	2		5131936	1					
ANR	5132070	PrimaryExpression	0		5131936	1					
ANR	5132071	CompoundStatement		17:26:457:457	5131936	1					
ANR	5132072	ExpressionStatement	addr = endian ? ( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) ) : ( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )	1113:3:26327:26410	5131936	0	True				
ANR	5132073	AssignmentExpression	addr = endian ? ( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) ) : ( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )		5131936	0		=			
ANR	5132074	Identifier	addr		5131936	0					
ANR	5132075	ConditionalExpression	endian ? ( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) ) : ( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )		5131936	1					
ANR	5132076	Condition	endian		5131936	0					
ANR	5132077	Identifier	endian		5131936	0					
ANR	5132078	InclusiveOrExpression	( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) )		5131936	1		|			
ANR	5132079	ShiftExpression	( * ( buf + i ) ) << 8		5131936	0		<<			
ANR	5132080	UnaryOperationExpression	* ( buf + i )		5131936	0					
ANR	5132081	UnaryOperator	*		5131936	0					
ANR	5132082	AdditiveExpression	buf + i		5131936	1		+			
ANR	5132083	Identifier	buf		5131936	0					
ANR	5132084	Identifier	i		5131936	1					
ANR	5132085	PrimaryExpression	8		5131936	1					
ANR	5132086	UnaryOperationExpression	* ( buf + i + 1 )		5131936	1					
ANR	5132087	UnaryOperator	*		5131936	0					
ANR	5132088	AdditiveExpression	buf + i + 1		5131936	1		+			
ANR	5132089	Identifier	buf		5131936	0					
ANR	5132090	AdditiveExpression	i + 1		5131936	1		+			
ANR	5132091	Identifier	i		5131936	0					
ANR	5132092	PrimaryExpression	1		5131936	1					
ANR	5132093	InclusiveOrExpression	( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )		5131936	2		|			
ANR	5132094	ShiftExpression	( * ( buf + i + 1 ) ) << 8		5131936	0		<<			
ANR	5132095	UnaryOperationExpression	* ( buf + i + 1 )		5131936	0					
ANR	5132096	UnaryOperator	*		5131936	0					
ANR	5132097	AdditiveExpression	buf + i + 1		5131936	1		+			
ANR	5132098	Identifier	buf		5131936	0					
ANR	5132099	AdditiveExpression	i + 1		5131936	1		+			
ANR	5132100	Identifier	i		5131936	0					
ANR	5132101	PrimaryExpression	1		5131936	1					
ANR	5132102	PrimaryExpression	8		5131936	1					
ANR	5132103	UnaryOperationExpression	* ( buf + i )		5131936	1					
ANR	5132104	UnaryOperator	*		5131936	0					
ANR	5132105	AdditiveExpression	buf + i		5131936	1		+			
ANR	5132106	Identifier	buf		5131936	0					
ANR	5132107	Identifier	i		5131936	1					
ANR	5132108	IfStatement	if ( elem == - 1 || elem == 0 )		5131936	1					
ANR	5132109	Condition	elem == - 1 || elem == 0	1116:7:26419:26441	5131936	0	True				
ANR	5132110	OrExpression	elem == - 1 || elem == 0		5131936	0		||			
ANR	5132111	EqualityExpression	elem == - 1		5131936	0		==			
ANR	5132112	Identifier	elem		5131936	0					
ANR	5132113	UnaryOperationExpression	- 1		5131936	1					
ANR	5132114	UnaryOperator	-		5131936	0					
ANR	5132115	PrimaryExpression	1		5131936	1					
ANR	5132116	EqualityExpression	elem == 0		5131936	1		==			
ANR	5132117	Identifier	elem		5131936	0					
ANR	5132118	PrimaryExpression	0		5131936	1					
ANR	5132119	CompoundStatement		21:32:579:579	5131936	1					
ANR	5132120	ExpressionStatement	"p -> cb_printf ( ""%d"" , addr )"	1117:4:26450:26475	5131936	0	True				
ANR	5132121	CallExpression	"p -> cb_printf ( ""%d"" , addr )"		5131936	0					
ANR	5132122	Callee	p -> cb_printf		5131936	0					
ANR	5132123	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132124	Identifier	p		5131936	0					
ANR	5132125	Identifier	cb_printf		5131936	1					
ANR	5132126	ArgumentList	"""%d"""		5131936	1					
ANR	5132127	Argument	"""%d"""		5131936	0					
ANR	5132128	PrimaryExpression	"""%d"""		5131936	0					
ANR	5132129	Argument	addr		5131936	1					
ANR	5132130	Identifier	addr		5131936	0					
ANR	5132131	IfStatement	if ( elem == 0 )		5131936	1					
ANR	5132132	Condition	elem == 0	1118:8:26485:26493	5131936	0	True				
ANR	5132133	EqualityExpression	elem == 0		5131936	0		==			
ANR	5132134	Identifier	elem		5131936	0					
ANR	5132135	PrimaryExpression	0		5131936	1					
ANR	5132136	CompoundStatement		23:19:631:631	5131936	1					
ANR	5132137	ExpressionStatement	elem = - 2	1119:5:26503:26512	5131936	0	True				
ANR	5132138	AssignmentExpression	elem = - 2		5131936	0		=			
ANR	5132139	Identifier	elem		5131936	0					
ANR	5132140	UnaryOperationExpression	- 2		5131936	1					
ANR	5132141	UnaryOperator	-		5131936	0					
ANR	5132142	PrimaryExpression	2		5131936	1					
ANR	5132143	IfStatement	if ( size != 0 && elem == - 1 )		5131936	2					
ANR	5132144	Condition	size != 0 && elem == - 1	1122:7:26532:26554	5131936	0	True				
ANR	5132145	AndExpression	size != 0 && elem == - 1		5131936	0		&&			
ANR	5132146	EqualityExpression	size != 0		5131936	0		!=			
ANR	5132147	Identifier	size		5131936	0					
ANR	5132148	PrimaryExpression	0		5131936	1					
ANR	5132149	EqualityExpression	elem == - 1		5131936	1		==			
ANR	5132150	Identifier	elem		5131936	0					
ANR	5132151	UnaryOperationExpression	- 1		5131936	1					
ANR	5132152	UnaryOperator	-		5131936	0					
ANR	5132153	PrimaryExpression	1		5131936	1					
ANR	5132154	CompoundStatement		27:32:692:692	5131936	1					
ANR	5132155	ExpressionStatement	"p -> cb_printf ( "","" )"	1123:4:26563:26581	5131936	0	True				
ANR	5132156	CallExpression	"p -> cb_printf ( "","" )"		5131936	0					
ANR	5132157	Callee	p -> cb_printf		5131936	0					
ANR	5132158	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132159	Identifier	p		5131936	0					
ANR	5132160	Identifier	cb_printf		5131936	1					
ANR	5132161	ArgumentList	""","""		5131936	1					
ANR	5132162	Argument	""","""		5131936	0					
ANR	5132163	PrimaryExpression	""","""		5131936	0					
ANR	5132164	IfStatement	if ( elem > - 1 )		5131936	3					
ANR	5132165	Condition	elem > - 1	1125:7:26595:26603	5131936	0	True				
ANR	5132166	RelationalExpression	elem > - 1		5131936	0		>			
ANR	5132167	Identifier	elem		5131936	0					
ANR	5132168	UnaryOperationExpression	- 1		5131936	1					
ANR	5132169	UnaryOperator	-		5131936	0					
ANR	5132170	PrimaryExpression	1		5131936	1					
ANR	5132171	CompoundStatement		30:18:741:741	5131936	1					
ANR	5132172	ExpressionStatement	elem --	1126:4:26612:26618	5131936	0	True				
ANR	5132173	PostIncDecOperationExpression	elem --		5131936	0					
ANR	5132174	Identifier	elem		5131936	0					
ANR	5132175	IncDec	--		5131936	1					
ANR	5132176	ExpressionStatement	i += 2	1128:3:26628:26634	5131936	4	True				
ANR	5132177	AssignmentExpression	i += 2		5131936	0		+=			
ANR	5132178	Identifier	i		5131936	0					
ANR	5132179	PrimaryExpression	2		5131936	1					
ANR	5132180	ElseStatement	else		5131936	0					
ANR	5132181	IfStatement	if ( MUSTSEE )		5131936	0					
ANR	5132182	Condition	MUSTSEE	1130:12:26652:26658	5131936	0	True				
ANR	5132183	Identifier	MUSTSEE		5131936	0					
ANR	5132184	CompoundStatement		35:21:796:796	5131936	1					
ANR	5132185	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5131936	0					
ANR	5132186	Condition	! SEEVALUE && ! ISQUIET	1131:6:26669:26689	5131936	0	True				
ANR	5132187	AndExpression	! SEEVALUE && ! ISQUIET		5131936	0		&&			
ANR	5132188	UnaryOperationExpression	! SEEVALUE		5131936	0					
ANR	5132189	UnaryOperator	!		5131936	0					
ANR	5132190	Identifier	SEEVALUE		5131936	1					
ANR	5132191	UnaryOperationExpression	! ISQUIET		5131936	1					
ANR	5132192	UnaryOperator	!		5131936	0					
ANR	5132193	Identifier	ISQUIET		5131936	1					
ANR	5132194	CompoundStatement		36:29:827:827	5131936	1					
ANR	5132195	Statement	p	1132:3:26697:26697	5131936	0	True				
ANR	5132196	Statement	->	1132:4:26698:26699	5131936	1	True				
ANR	5132197	Statement	cb_printf	1132:6:26700:26708	5131936	2	True				
ANR	5132198	Statement	(	1132:16:26710:26710	5131936	3	True				
ANR	5132199	Statement	"""0x%08"""	1132:17:26711:26717	5131936	4	True				
ANR	5132200	Statement	PFMT64x	1132:24:26718:26724	5131936	5	True				
ANR	5132201	Statement	""" = """	1132:31:26725:26729	5131936	6	True				
ANR	5132202	Statement	","	1132:36:26730:26730	5131936	7	True				
ANR	5132203	Statement	seeki	1132:38:26732:26736	5131936	8	True				
ANR	5132204	Statement	+	1132:43:26737:26737	5131936	9	True				
ANR	5132205	Statement	(	1132:44:26738:26738	5131936	10	True				
ANR	5132206	Statement	(	1132:45:26739:26739	5131936	11	True				
ANR	5132207	Statement	elem	1132:46:26740:26743	5131936	12	True				
ANR	5132208	Statement	>=	1132:50:26744:26745	5131936	13	True				
ANR	5132209	Statement	0	1132:52:26746:26746	5131936	14	True				
ANR	5132210	Statement	)	1132:53:26747:26747	5131936	15	True				
ANR	5132211	Statement	?	1132:54:26748:26748	5131936	16	True				
ANR	5132212	Statement	elem	1132:55:26749:26752	5131936	17	True				
ANR	5132213	Statement	*	1132:59:26753:26753	5131936	18	True				
ANR	5132214	Label	2 :	1132:60:26754:26755	5131936	19	True				
ANR	5132215	Statement	0	1132:62:26756:26756	5131936	20	True				
ANR	5132216	Statement	)	1132:63:26757:26757	5131936	21	True				
ANR	5132217	Statement	)	1132:64:26758:26758	5131936	22	True				
ANR	5132218	ExpressionStatement		1132:65:26759:26759	5131936	23	True				
ANR	5132219	IfStatement	if ( size == - 1 )		5131936	1					
ANR	5132220	Condition	size == - 1	1134:6:26771:26778	5131936	0	True				
ANR	5132221	EqualityExpression	size == - 1		5131936	0		==			
ANR	5132222	Identifier	size		5131936	0					
ANR	5132223	UnaryOperationExpression	- 1		5131936	1					
ANR	5132224	UnaryOperator	-		5131936	0					
ANR	5132225	PrimaryExpression	1		5131936	1					
ANR	5132226	CompoundStatement		39:16:916:916	5131936	1					
ANR	5132227	ExpressionStatement	"p -> cb_printf ( ""0x%04x"" , addr )"	1135:3:26786:26815	5131936	0	True				
ANR	5132228	CallExpression	"p -> cb_printf ( ""0x%04x"" , addr )"		5131936	0					
ANR	5132229	Callee	p -> cb_printf		5131936	0					
ANR	5132230	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132231	Identifier	p		5131936	0					
ANR	5132232	Identifier	cb_printf		5131936	1					
ANR	5132233	ArgumentList	"""0x%04x"""		5131936	1					
ANR	5132234	Argument	"""0x%04x"""		5131936	0					
ANR	5132235	PrimaryExpression	"""0x%04x"""		5131936	0					
ANR	5132236	Argument	addr		5131936	1					
ANR	5132237	Identifier	addr		5131936	0					
ANR	5132238	ElseStatement	else		5131936	0					
ANR	5132239	CompoundStatement		41:9:961:961	5131936	0					
ANR	5132240	IfStatement	if ( ! SEEVALUE )		5131936	0					
ANR	5132241	Condition	! SEEVALUE	1137:7:26835:26843	5131936	0	True				
ANR	5132242	UnaryOperationExpression	! SEEVALUE		5131936	0					
ANR	5132243	UnaryOperator	!		5131936	0					
ANR	5132244	Identifier	SEEVALUE		5131936	1					
ANR	5132245	CompoundStatement		42:18:981:981	5131936	1					
ANR	5132246	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	1138:4:26852:26871	5131936	0	True				
ANR	5132247	CallExpression	"p -> cb_printf ( ""[ "" )"		5131936	0					
ANR	5132248	Callee	p -> cb_printf		5131936	0					
ANR	5132249	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132250	Identifier	p		5131936	0					
ANR	5132251	Identifier	cb_printf		5131936	1					
ANR	5132252	ArgumentList	"""[ """		5131936	1					
ANR	5132253	Argument	"""[ """		5131936	0					
ANR	5132254	PrimaryExpression	"""[ """		5131936	0					
ANR	5132255	WhileStatement	while ( size -- )		5131936	1					
ANR	5132256	Condition	size --	1140:10:26888:26893	5131936	0	True				
ANR	5132257	PostIncDecOperationExpression	size --		5131936	0					
ANR	5132258	Identifier	size		5131936	0					
ANR	5132259	IncDec	--		5131936	1					
ANR	5132260	CompoundStatement		45:18:1031:1031	5131936	1					
ANR	5132261	ExpressionStatement	addr = endian ? ( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) ) : ( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )	1141:4:26902:26987	5131936	0	True				
ANR	5132262	AssignmentExpression	addr = endian ? ( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) ) : ( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )		5131936	0		=			
ANR	5132263	Identifier	addr		5131936	0					
ANR	5132264	ConditionalExpression	endian ? ( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) ) : ( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )		5131936	1					
ANR	5132265	Condition	endian		5131936	0					
ANR	5132266	Identifier	endian		5131936	0					
ANR	5132267	InclusiveOrExpression	( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) )		5131936	1		|			
ANR	5132268	ShiftExpression	( * ( buf + i ) ) << 8		5131936	0		<<			
ANR	5132269	UnaryOperationExpression	* ( buf + i )		5131936	0					
ANR	5132270	UnaryOperator	*		5131936	0					
ANR	5132271	AdditiveExpression	buf + i		5131936	1		+			
ANR	5132272	Identifier	buf		5131936	0					
ANR	5132273	Identifier	i		5131936	1					
ANR	5132274	PrimaryExpression	8		5131936	1					
ANR	5132275	UnaryOperationExpression	* ( buf + i + 1 )		5131936	1					
ANR	5132276	UnaryOperator	*		5131936	0					
ANR	5132277	AdditiveExpression	buf + i + 1		5131936	1		+			
ANR	5132278	Identifier	buf		5131936	0					
ANR	5132279	AdditiveExpression	i + 1		5131936	1		+			
ANR	5132280	Identifier	i		5131936	0					
ANR	5132281	PrimaryExpression	1		5131936	1					
ANR	5132282	InclusiveOrExpression	( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )		5131936	2		|			
ANR	5132283	ShiftExpression	( * ( buf + i + 1 ) ) << 8		5131936	0		<<			
ANR	5132284	UnaryOperationExpression	* ( buf + i + 1 )		5131936	0					
ANR	5132285	UnaryOperator	*		5131936	0					
ANR	5132286	AdditiveExpression	buf + i + 1		5131936	1		+			
ANR	5132287	Identifier	buf		5131936	0					
ANR	5132288	AdditiveExpression	i + 1		5131936	1		+			
ANR	5132289	Identifier	i		5131936	0					
ANR	5132290	PrimaryExpression	1		5131936	1					
ANR	5132291	PrimaryExpression	8		5131936	1					
ANR	5132292	UnaryOperationExpression	* ( buf + i )		5131936	1					
ANR	5132293	UnaryOperator	*		5131936	0					
ANR	5132294	AdditiveExpression	buf + i		5131936	1		+			
ANR	5132295	Identifier	buf		5131936	0					
ANR	5132296	Identifier	i		5131936	1					
ANR	5132297	IfStatement	if ( elem == - 1 || elem == 0 )		5131936	1					
ANR	5132298	Condition	elem == - 1 || elem == 0	1144:8:26997:27019	5131936	0	True				
ANR	5132299	OrExpression	elem == - 1 || elem == 0		5131936	0		||			
ANR	5132300	EqualityExpression	elem == - 1		5131936	0		==			
ANR	5132301	Identifier	elem		5131936	0					
ANR	5132302	UnaryOperationExpression	- 1		5131936	1					
ANR	5132303	UnaryOperator	-		5131936	0					
ANR	5132304	PrimaryExpression	1		5131936	1					
ANR	5132305	EqualityExpression	elem == 0		5131936	1		==			
ANR	5132306	Identifier	elem		5131936	0					
ANR	5132307	PrimaryExpression	0		5131936	1					
ANR	5132308	CompoundStatement		49:33:1157:1157	5131936	1					
ANR	5132309	ExpressionStatement	"p -> cb_printf ( ""0x%04x"" , addr )"	1145:5:27029:27058	5131936	0	True				
ANR	5132310	CallExpression	"p -> cb_printf ( ""0x%04x"" , addr )"		5131936	0					
ANR	5132311	Callee	p -> cb_printf		5131936	0					
ANR	5132312	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132313	Identifier	p		5131936	0					
ANR	5132314	Identifier	cb_printf		5131936	1					
ANR	5132315	ArgumentList	"""0x%04x"""		5131936	1					
ANR	5132316	Argument	"""0x%04x"""		5131936	0					
ANR	5132317	PrimaryExpression	"""0x%04x"""		5131936	0					
ANR	5132318	Argument	addr		5131936	1					
ANR	5132319	Identifier	addr		5131936	0					
ANR	5132320	IfStatement	if ( elem == 0 )		5131936	1					
ANR	5132321	Condition	elem == 0	1146:9:27069:27077	5131936	0	True				
ANR	5132322	EqualityExpression	elem == 0		5131936	0		==			
ANR	5132323	Identifier	elem		5131936	0					
ANR	5132324	PrimaryExpression	0		5131936	1					
ANR	5132325	CompoundStatement		51:20:1215:1215	5131936	1					
ANR	5132326	ExpressionStatement	elem = - 2	1147:6:27088:27097	5131936	0	True				
ANR	5132327	AssignmentExpression	elem = - 2		5131936	0		=			
ANR	5132328	Identifier	elem		5131936	0					
ANR	5132329	UnaryOperationExpression	- 2		5131936	1					
ANR	5132330	UnaryOperator	-		5131936	0					
ANR	5132331	PrimaryExpression	2		5131936	1					
ANR	5132332	IfStatement	if ( size != 0 && elem == - 1 )		5131936	2					
ANR	5132333	Condition	size != 0 && elem == - 1	1150:8:27120:27142	5131936	0	True				
ANR	5132334	AndExpression	size != 0 && elem == - 1		5131936	0		&&			
ANR	5132335	EqualityExpression	size != 0		5131936	0		!=			
ANR	5132336	Identifier	size		5131936	0					
ANR	5132337	PrimaryExpression	0		5131936	1					
ANR	5132338	EqualityExpression	elem == - 1		5131936	1		==			
ANR	5132339	Identifier	elem		5131936	0					
ANR	5132340	UnaryOperationExpression	- 1		5131936	1					
ANR	5132341	UnaryOperator	-		5131936	0					
ANR	5132342	PrimaryExpression	1		5131936	1					
ANR	5132343	CompoundStatement		55:33:1280:1280	5131936	1					
ANR	5132344	ExpressionStatement	"p -> cb_printf ( "", "" )"	1151:5:27152:27171	5131936	0	True				
ANR	5132345	CallExpression	"p -> cb_printf ( "", "" )"		5131936	0					
ANR	5132346	Callee	p -> cb_printf		5131936	0					
ANR	5132347	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132348	Identifier	p		5131936	0					
ANR	5132349	Identifier	cb_printf		5131936	1					
ANR	5132350	ArgumentList	""", """		5131936	1					
ANR	5132351	Argument	""", """		5131936	0					
ANR	5132352	PrimaryExpression	""", """		5131936	0					
ANR	5132353	IfStatement	if ( elem > - 1 )		5131936	3					
ANR	5132354	Condition	elem > - 1	1153:8:27187:27195	5131936	0	True				
ANR	5132355	RelationalExpression	elem > - 1		5131936	0		>			
ANR	5132356	Identifier	elem		5131936	0					
ANR	5132357	UnaryOperationExpression	- 1		5131936	1					
ANR	5132358	UnaryOperator	-		5131936	0					
ANR	5132359	PrimaryExpression	1		5131936	1					
ANR	5132360	CompoundStatement		58:19:1333:1333	5131936	1					
ANR	5132361	ExpressionStatement	elem --	1154:5:27205:27211	5131936	0	True				
ANR	5132362	PostIncDecOperationExpression	elem --		5131936	0					
ANR	5132363	Identifier	elem		5131936	0					
ANR	5132364	IncDec	--		5131936	1					
ANR	5132365	ExpressionStatement	i += 2	1156:4:27223:27229	5131936	4	True				
ANR	5132366	AssignmentExpression	i += 2		5131936	0		+=			
ANR	5132367	Identifier	i		5131936	0					
ANR	5132368	PrimaryExpression	2		5131936	1					
ANR	5132369	IfStatement	if ( ! SEEVALUE )		5131936	2					
ANR	5132370	Condition	! SEEVALUE	1158:7:27243:27251	5131936	0	True				
ANR	5132371	UnaryOperationExpression	! SEEVALUE		5131936	0					
ANR	5132372	UnaryOperator	!		5131936	0					
ANR	5132373	Identifier	SEEVALUE		5131936	1					
ANR	5132374	CompoundStatement		63:18:1389:1389	5131936	1					
ANR	5132375	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	1159:4:27260:27279	5131936	0	True				
ANR	5132376	CallExpression	"p -> cb_printf ( "" ]"" )"		5131936	0					
ANR	5132377	Callee	p -> cb_printf		5131936	0					
ANR	5132378	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132379	Identifier	p		5131936	0					
ANR	5132380	Identifier	cb_printf		5131936	1					
ANR	5132381	ArgumentList	""" ]"""		5131936	1					
ANR	5132382	Argument	""" ]"""		5131936	0					
ANR	5132383	PrimaryExpression	""" ]"""		5131936	0					
ANR	5132384	ElseStatement	else		5131936	0					
ANR	5132385	IfStatement	if ( MUSTSEEJSON )		5131936	0					
ANR	5132386	Condition	MUSTSEEJSON	1162:12:27302:27312	5131936	0	True				
ANR	5132387	Identifier	MUSTSEEJSON		5131936	0					
ANR	5132388	CompoundStatement		67:25:1450:1450	5131936	1					
ANR	5132389	IfStatement	if ( size == - 1 )		5131936	0					
ANR	5132390	Condition	size == - 1	1163:6:27323:27330	5131936	0	True				
ANR	5132391	EqualityExpression	size == - 1		5131936	0		==			
ANR	5132392	Identifier	size		5131936	0					
ANR	5132393	UnaryOperationExpression	- 1		5131936	1					
ANR	5132394	UnaryOperator	-		5131936	0					
ANR	5132395	PrimaryExpression	1		5131936	1					
ANR	5132396	CompoundStatement		68:16:1468:1468	5131936	1					
ANR	5132397	ExpressionStatement	"p -> cb_printf ( ""%d"" , addr )"	1164:3:27338:27363	5131936	0	True				
ANR	5132398	CallExpression	"p -> cb_printf ( ""%d"" , addr )"		5131936	0					
ANR	5132399	Callee	p -> cb_printf		5131936	0					
ANR	5132400	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132401	Identifier	p		5131936	0					
ANR	5132402	Identifier	cb_printf		5131936	1					
ANR	5132403	ArgumentList	"""%d"""		5131936	1					
ANR	5132404	Argument	"""%d"""		5131936	0					
ANR	5132405	PrimaryExpression	"""%d"""		5131936	0					
ANR	5132406	Argument	addr		5131936	1					
ANR	5132407	Identifier	addr		5131936	0					
ANR	5132408	ElseStatement	else		5131936	0					
ANR	5132409	CompoundStatement		70:9:1509:1509	5131936	0					
ANR	5132410	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	1166:3:27379:27398	5131936	0	True				
ANR	5132411	CallExpression	"p -> cb_printf ( ""[ "" )"		5131936	0					
ANR	5132412	Callee	p -> cb_printf		5131936	0					
ANR	5132413	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132414	Identifier	p		5131936	0					
ANR	5132415	Identifier	cb_printf		5131936	1					
ANR	5132416	ArgumentList	"""[ """		5131936	1					
ANR	5132417	Argument	"""[ """		5131936	0					
ANR	5132418	PrimaryExpression	"""[ """		5131936	0					
ANR	5132419	WhileStatement	while ( ( size -= 2 ) > 0 )		5131936	1					
ANR	5132420	Condition	( size -= 2 ) > 0	1167:11:27411:27424	5131936	0	True				
ANR	5132421	RelationalExpression	( size -= 2 ) > 0		5131936	0		>			
ANR	5132422	AssignmentExpression	size -= 2		5131936	0		-=			
ANR	5132423	Identifier	size		5131936	0					
ANR	5132424	PrimaryExpression	2		5131936	1					
ANR	5132425	PrimaryExpression	0		5131936	1					
ANR	5132426	CompoundStatement		72:27:1562:1562	5131936	1					
ANR	5132427	ExpressionStatement	addr = endian ? ( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) ) : ( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )	1168:4:27433:27518	5131936	0	True				
ANR	5132428	AssignmentExpression	addr = endian ? ( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) ) : ( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )		5131936	0		=			
ANR	5132429	Identifier	addr		5131936	0					
ANR	5132430	ConditionalExpression	endian ? ( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) ) : ( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )		5131936	1					
ANR	5132431	Condition	endian		5131936	0					
ANR	5132432	Identifier	endian		5131936	0					
ANR	5132433	InclusiveOrExpression	( * ( buf + i ) ) << 8 | ( * ( buf + i + 1 ) )		5131936	1		|			
ANR	5132434	ShiftExpression	( * ( buf + i ) ) << 8		5131936	0		<<			
ANR	5132435	UnaryOperationExpression	* ( buf + i )		5131936	0					
ANR	5132436	UnaryOperator	*		5131936	0					
ANR	5132437	AdditiveExpression	buf + i		5131936	1		+			
ANR	5132438	Identifier	buf		5131936	0					
ANR	5132439	Identifier	i		5131936	1					
ANR	5132440	PrimaryExpression	8		5131936	1					
ANR	5132441	UnaryOperationExpression	* ( buf + i + 1 )		5131936	1					
ANR	5132442	UnaryOperator	*		5131936	0					
ANR	5132443	AdditiveExpression	buf + i + 1		5131936	1		+			
ANR	5132444	Identifier	buf		5131936	0					
ANR	5132445	AdditiveExpression	i + 1		5131936	1		+			
ANR	5132446	Identifier	i		5131936	0					
ANR	5132447	PrimaryExpression	1		5131936	1					
ANR	5132448	InclusiveOrExpression	( * ( buf + i + 1 ) ) << 8 | ( * ( buf + i ) )		5131936	2		|			
ANR	5132449	ShiftExpression	( * ( buf + i + 1 ) ) << 8		5131936	0		<<			
ANR	5132450	UnaryOperationExpression	* ( buf + i + 1 )		5131936	0					
ANR	5132451	UnaryOperator	*		5131936	0					
ANR	5132452	AdditiveExpression	buf + i + 1		5131936	1		+			
ANR	5132453	Identifier	buf		5131936	0					
ANR	5132454	AdditiveExpression	i + 1		5131936	1		+			
ANR	5132455	Identifier	i		5131936	0					
ANR	5132456	PrimaryExpression	1		5131936	1					
ANR	5132457	PrimaryExpression	8		5131936	1					
ANR	5132458	UnaryOperationExpression	* ( buf + i )		5131936	1					
ANR	5132459	UnaryOperator	*		5131936	0					
ANR	5132460	AdditiveExpression	buf + i		5131936	1		+			
ANR	5132461	Identifier	buf		5131936	0					
ANR	5132462	Identifier	i		5131936	1					
ANR	5132463	IfStatement	if ( elem == - 1 || elem == 0 )		5131936	1					
ANR	5132464	Condition	elem == - 1 || elem == 0	1171:8:27528:27550	5131936	0	True				
ANR	5132465	OrExpression	elem == - 1 || elem == 0		5131936	0		||			
ANR	5132466	EqualityExpression	elem == - 1		5131936	0		==			
ANR	5132467	Identifier	elem		5131936	0					
ANR	5132468	UnaryOperationExpression	- 1		5131936	1					
ANR	5132469	UnaryOperator	-		5131936	0					
ANR	5132470	PrimaryExpression	1		5131936	1					
ANR	5132471	EqualityExpression	elem == 0		5131936	1		==			
ANR	5132472	Identifier	elem		5131936	0					
ANR	5132473	PrimaryExpression	0		5131936	1					
ANR	5132474	CompoundStatement		76:33:1688:1688	5131936	1					
ANR	5132475	ExpressionStatement	"p -> cb_printf ( ""%d"" , addr )"	1172:5:27560:27585	5131936	0	True				
ANR	5132476	CallExpression	"p -> cb_printf ( ""%d"" , addr )"		5131936	0					
ANR	5132477	Callee	p -> cb_printf		5131936	0					
ANR	5132478	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132479	Identifier	p		5131936	0					
ANR	5132480	Identifier	cb_printf		5131936	1					
ANR	5132481	ArgumentList	"""%d"""		5131936	1					
ANR	5132482	Argument	"""%d"""		5131936	0					
ANR	5132483	PrimaryExpression	"""%d"""		5131936	0					
ANR	5132484	Argument	addr		5131936	1					
ANR	5132485	Identifier	addr		5131936	0					
ANR	5132486	IfStatement	if ( elem == 0 )		5131936	1					
ANR	5132487	Condition	elem == 0	1173:9:27596:27604	5131936	0	True				
ANR	5132488	EqualityExpression	elem == 0		5131936	0		==			
ANR	5132489	Identifier	elem		5131936	0					
ANR	5132490	PrimaryExpression	0		5131936	1					
ANR	5132491	CompoundStatement		78:20:1742:1742	5131936	1					
ANR	5132492	ExpressionStatement	elem = - 2	1174:6:27615:27624	5131936	0	True				
ANR	5132493	AssignmentExpression	elem = - 2		5131936	0		=			
ANR	5132494	Identifier	elem		5131936	0					
ANR	5132495	UnaryOperationExpression	- 2		5131936	1					
ANR	5132496	UnaryOperator	-		5131936	0					
ANR	5132497	PrimaryExpression	2		5131936	1					
ANR	5132498	IfStatement	if ( size != 0 && elem == - 1 )		5131936	2					
ANR	5132499	Condition	size != 0 && elem == - 1	1177:8:27647:27669	5131936	0	True				
ANR	5132500	AndExpression	size != 0 && elem == - 1		5131936	0		&&			
ANR	5132501	EqualityExpression	size != 0		5131936	0		!=			
ANR	5132502	Identifier	size		5131936	0					
ANR	5132503	PrimaryExpression	0		5131936	1					
ANR	5132504	EqualityExpression	elem == - 1		5131936	1		==			
ANR	5132505	Identifier	elem		5131936	0					
ANR	5132506	UnaryOperationExpression	- 1		5131936	1					
ANR	5132507	UnaryOperator	-		5131936	0					
ANR	5132508	PrimaryExpression	1		5131936	1					
ANR	5132509	CompoundStatement		82:33:1807:1807	5131936	1					
ANR	5132510	ExpressionStatement	"p -> cb_printf ( "","" )"	1178:5:27679:27697	5131936	0	True				
ANR	5132511	CallExpression	"p -> cb_printf ( "","" )"		5131936	0					
ANR	5132512	Callee	p -> cb_printf		5131936	0					
ANR	5132513	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132514	Identifier	p		5131936	0					
ANR	5132515	Identifier	cb_printf		5131936	1					
ANR	5132516	ArgumentList	""","""		5131936	1					
ANR	5132517	Argument	""","""		5131936	0					
ANR	5132518	PrimaryExpression	""","""		5131936	0					
ANR	5132519	IfStatement	if ( elem > - 1 )		5131936	3					
ANR	5132520	Condition	elem > - 1	1180:8:27713:27721	5131936	0	True				
ANR	5132521	RelationalExpression	elem > - 1		5131936	0		>			
ANR	5132522	Identifier	elem		5131936	0					
ANR	5132523	UnaryOperationExpression	- 1		5131936	1					
ANR	5132524	UnaryOperator	-		5131936	0					
ANR	5132525	PrimaryExpression	1		5131936	1					
ANR	5132526	CompoundStatement		85:19:1859:1859	5131936	1					
ANR	5132527	ExpressionStatement	elem --	1181:5:27731:27737	5131936	0	True				
ANR	5132528	PostIncDecOperationExpression	elem --		5131936	0					
ANR	5132529	Identifier	elem		5131936	0					
ANR	5132530	IncDec	--		5131936	1					
ANR	5132531	ExpressionStatement	i += 2	1183:4:27749:27755	5131936	4	True				
ANR	5132532	AssignmentExpression	i += 2		5131936	0		+=			
ANR	5132533	Identifier	i		5131936	0					
ANR	5132534	PrimaryExpression	2		5131936	1					
ANR	5132535	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	1185:3:27765:27784	5131936	2	True				
ANR	5132536	CallExpression	"p -> cb_printf ( "" ]"" )"		5131936	0					
ANR	5132537	Callee	p -> cb_printf		5131936	0					
ANR	5132538	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132539	Identifier	p		5131936	0					
ANR	5132540	Identifier	cb_printf		5131936	1					
ANR	5132541	ArgumentList	""" ]"""		5131936	1					
ANR	5132542	Argument	""" ]"""		5131936	0					
ANR	5132543	PrimaryExpression	""" ]"""		5131936	0					
ANR	5132544	ExpressionStatement	"p -> cb_printf ( ""}"" )"	1187:2:27792:27810	5131936	1	True				
ANR	5132545	CallExpression	"p -> cb_printf ( ""}"" )"		5131936	0					
ANR	5132546	Callee	p -> cb_printf		5131936	0					
ANR	5132547	PtrMemberAccess	p -> cb_printf		5131936	0					
ANR	5132548	Identifier	p		5131936	0					
ANR	5132549	Identifier	cb_printf		5131936	1					
ANR	5132550	ArgumentList	"""}"""		5131936	1					
ANR	5132551	Argument	"""}"""		5131936	0					
ANR	5132552	PrimaryExpression	"""}"""		5131936	0					
ANR	5132553	ReturnType	static void		5131936	1					
ANR	5132554	Identifier	r_print_format_word		5131936	2					
ANR	5132555	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5131936	3					
ANR	5132556	Parameter	const RPrint * p	1095:32:25764:25778	5131936	0	True				
ANR	5132557	ParameterType	const RPrint *		5131936	0					
ANR	5132558	Identifier	p		5131936	1					
ANR	5132559	Parameter	int endian	1095:49:25781:25790	5131936	1	True				
ANR	5132560	ParameterType	int		5131936	0					
ANR	5132561	Identifier	endian		5131936	1					
ANR	5132562	Parameter	int mode	1095:61:25793:25800	5131936	2	True				
ANR	5132563	ParameterType	int		5131936	0					
ANR	5132564	Identifier	mode		5131936	1					
ANR	5132565	Parameter	const char * setval	1096:2:25805:25822	5131936	3	True				
ANR	5132566	ParameterType	const char *		5131936	0					
ANR	5132567	Identifier	setval		5131936	1					
ANR	5132568	Parameter	ut64 seeki	1096:22:25825:25834	5131936	4	True				
ANR	5132569	ParameterType	ut64		5131936	0					
ANR	5132570	Identifier	seeki		5131936	1					
ANR	5132571	Parameter	ut8 * buf	1096:34:25837:25844	5131936	5	True				
ANR	5132572	ParameterType	ut8 *		5131936	0					
ANR	5132573	Identifier	buf		5131936	1					
ANR	5132574	Parameter	int i	1096:44:25847:25851	5131936	6	True				
ANR	5132575	ParameterType	int		5131936	0					
ANR	5132576	Identifier	i		5131936	1					
ANR	5132577	Parameter	int size	1096:51:25854:25861	5131936	7	True				
ANR	5132578	ParameterType	int		5131936	0					
ANR	5132579	Identifier	size		5131936	1					
ANR	5132580	CFGEntryNode	ENTRY		5131936		True				
ANR	5132581	CFGExitNode	EXIT		5131936		True				
ANR	5132582	Symbol	elem		5131936						
ANR	5132583	Symbol	* buf		5131936						
ANR	5132584	Symbol	* ( buf + i + 1 )		5131936						
ANR	5132585	Symbol	MUSTSEEJSON		5131936						
ANR	5132586	Symbol	MUSTSEESTRUCT		5131936						
ANR	5132587	Symbol	i		5131936						
ANR	5132588	Symbol	ISQUIET		5131936						
ANR	5132589	Symbol	endian		5131936						
ANR	5132590	Symbol	MUSTSEE		5131936						
ANR	5132591	Symbol	p		5131936						
ANR	5132592	Symbol	mode		5131936						
ANR	5132593	Symbol	ARRAYINDEX_COEF		5131936						
ANR	5132594	Symbol	buf		5131936						
ANR	5132595	Symbol	* i		5131936						
ANR	5132596	Symbol	size		5131936						
ANR	5132597	Symbol	seeki		5131936						
ANR	5132598	Symbol	SEEVALUE		5131936						
ANR	5132599	Symbol	R_PRINT_DOT		5131936						
ANR	5132600	Symbol	setval		5131936						
ANR	5132601	Symbol	addr		5131936						
ANR	5132602	Symbol	* ( buf + i )		5131936						
ANR	5132603	Symbol	MUSTSET		5131936						
ANR	5132604	Function	r_print_byte_escape	1191:0:27818:28040							
ANR	5132605	FunctionDef	"r_print_byte_escape (const RPrint * p , const char * src , char * * dst , int dot_nl)"		5132604	0					
ANR	5132606	CompoundStatement		1191:90:27908:28040	5132604	0					
ANR	5132607	ExpressionStatement	r_return_if_fail ( p -> strconv_mode )	1192:1:27911:27945	5132604	0	True				
ANR	5132608	CallExpression	r_return_if_fail ( p -> strconv_mode )		5132604	0					
ANR	5132609	Callee	r_return_if_fail		5132604	0					
ANR	5132610	Identifier	r_return_if_fail		5132604	0					
ANR	5132611	ArgumentList	p -> strconv_mode		5132604	1					
ANR	5132612	Argument	p -> strconv_mode		5132604	0					
ANR	5132613	PtrMemberAccess	p -> strconv_mode		5132604	0					
ANR	5132614	Identifier	p		5132604	0					
ANR	5132615	Identifier	strconv_mode		5132604	1					
ANR	5132616	ExpressionStatement	"r_str_byte_escape ( src , dst , dot_nl , ! strcmp ( p -> strconv_mode , ""asciidot"" ) , p -> esc_bslash )"	1193:1:27948:28038	5132604	1	True				
ANR	5132617	CallExpression	"r_str_byte_escape ( src , dst , dot_nl , ! strcmp ( p -> strconv_mode , ""asciidot"" ) , p -> esc_bslash )"		5132604	0					
ANR	5132618	Callee	r_str_byte_escape		5132604	0					
ANR	5132619	Identifier	r_str_byte_escape		5132604	0					
ANR	5132620	ArgumentList	src		5132604	1					
ANR	5132621	Argument	src		5132604	0					
ANR	5132622	Identifier	src		5132604	0					
ANR	5132623	Argument	dst		5132604	1					
ANR	5132624	Identifier	dst		5132604	0					
ANR	5132625	Argument	dot_nl		5132604	2					
ANR	5132626	Identifier	dot_nl		5132604	0					
ANR	5132627	Argument	"! strcmp ( p -> strconv_mode , ""asciidot"" )"		5132604	3					
ANR	5132628	UnaryOperationExpression	"! strcmp ( p -> strconv_mode , ""asciidot"" )"		5132604	0					
ANR	5132629	UnaryOperator	!		5132604	0					
ANR	5132630	CallExpression	"strcmp ( p -> strconv_mode , ""asciidot"" )"		5132604	1					
ANR	5132631	Callee	strcmp		5132604	0					
ANR	5132632	Identifier	strcmp		5132604	0					
ANR	5132633	ArgumentList	p -> strconv_mode		5132604	1					
ANR	5132634	Argument	p -> strconv_mode		5132604	0					
ANR	5132635	PtrMemberAccess	p -> strconv_mode		5132604	0					
ANR	5132636	Identifier	p		5132604	0					
ANR	5132637	Identifier	strconv_mode		5132604	1					
ANR	5132638	Argument	"""asciidot"""		5132604	1					
ANR	5132639	PrimaryExpression	"""asciidot"""		5132604	0					
ANR	5132640	Argument	p -> esc_bslash		5132604	4					
ANR	5132641	PtrMemberAccess	p -> esc_bslash		5132604	0					
ANR	5132642	Identifier	p		5132604	0					
ANR	5132643	Identifier	esc_bslash		5132604	1					
ANR	5132644	ReturnType	static void		5132604	1					
ANR	5132645	Identifier	r_print_byte_escape		5132604	2					
ANR	5132646	ParameterList	"const RPrint * p , const char * src , char * * dst , int dot_nl"		5132604	3					
ANR	5132647	Parameter	const RPrint * p	1191:32:27850:27864	5132604	0	True				
ANR	5132648	ParameterType	const RPrint *		5132604	0					
ANR	5132649	Identifier	p		5132604	1					
ANR	5132650	Parameter	const char * src	1191:49:27867:27881	5132604	1	True				
ANR	5132651	ParameterType	const char *		5132604	0					
ANR	5132652	Identifier	src		5132604	1					
ANR	5132653	Parameter	char * * dst	1191:66:27884:27893	5132604	2	True				
ANR	5132654	ParameterType	char * *		5132604	0					
ANR	5132655	Identifier	dst		5132604	1					
ANR	5132656	Parameter	int dot_nl	1191:78:27896:27905	5132604	3	True				
ANR	5132657	ParameterType	int		5132604	0					
ANR	5132658	Identifier	dot_nl		5132604	1					
ANR	5132659	CFGEntryNode	ENTRY		5132604		True				
ANR	5132660	CFGExitNode	EXIT		5132604		True				
ANR	5132661	Symbol	p		5132604						
ANR	5132662	Symbol	strcmp		5132604						
ANR	5132663	Symbol	dot_nl		5132604						
ANR	5132664	Symbol	dst		5132604						
ANR	5132665	Symbol	src		5132604						
ANR	5132666	Symbol	p -> strconv_mode		5132604						
ANR	5132667	Symbol	* p		5132604						
ANR	5132668	Symbol	p -> esc_bslash		5132604						
ANR	5132669	Function	r_print_format_nulltermstring	1196:0:28043:31253							
ANR	5132670	FunctionDef	"r_print_format_nulltermstring (const RPrint * p , int len , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5132669	0					
ANR	5132671	CompoundStatement		1197:61:28194:31253	5132669	0					
ANR	5132672	IfStatement	"if ( ! p -> iob . is_valid_offset ( p -> iob . io , seeki , 1 ) )"		5132669	0					
ANR	5132673	Condition	"! p -> iob . is_valid_offset ( p -> iob . io , seeki , 1 )"	1198:5:28201:28245	5132669	0	True				
ANR	5132674	UnaryOperationExpression	"! p -> iob . is_valid_offset ( p -> iob . io , seeki , 1 )"		5132669	0					
ANR	5132675	UnaryOperator	!		5132669	0					
ANR	5132676	CallExpression	"p -> iob . is_valid_offset ( p -> iob . io , seeki , 1 )"		5132669	1					
ANR	5132677	Callee	p -> iob . is_valid_offset		5132669	0					
ANR	5132678	MemberAccess	p -> iob . is_valid_offset		5132669	0					
ANR	5132679	PtrMemberAccess	p -> iob		5132669	0					
ANR	5132680	Identifier	p		5132669	0					
ANR	5132681	Identifier	iob		5132669	1					
ANR	5132682	Identifier	is_valid_offset		5132669	1					
ANR	5132683	ArgumentList	p -> iob . io		5132669	1					
ANR	5132684	Argument	p -> iob . io		5132669	0					
ANR	5132685	MemberAccess	p -> iob . io		5132669	0					
ANR	5132686	PtrMemberAccess	p -> iob		5132669	0					
ANR	5132687	Identifier	p		5132669	0					
ANR	5132688	Identifier	iob		5132669	1					
ANR	5132689	Identifier	io		5132669	1					
ANR	5132690	Argument	seeki		5132669	1					
ANR	5132691	Identifier	seeki		5132669	0					
ANR	5132692	Argument	1		5132669	2					
ANR	5132693	PrimaryExpression	1		5132669	0					
ANR	5132694	CompoundStatement		3:2:57:70	5132669	1					
ANR	5132695	IdentifierDeclStatement	ut8 ch = 0xff ;	1199:2:28252:28265	5132669	0	True				
ANR	5132696	IdentifierDecl	ch = 0xff		5132669	0					
ANR	5132697	IdentifierDeclType	ut8		5132669	0					
ANR	5132698	Identifier	ch		5132669	1					
ANR	5132699	AssignmentExpression	ch = 0xff		5132669	2		=			
ANR	5132700	Identifier	ch		5132669	0					
ANR	5132701	PrimaryExpression	0xff		5132669	1					
ANR	5132702	IfStatement	"if ( p -> iob . read_at ( p -> iob . io , seeki , & ch , 1 ) != 1 && ch != 0xff )"		5132669	1					
ANR	5132703	Condition	"p -> iob . read_at ( p -> iob . io , seeki , & ch , 1 ) != 1 && ch != 0xff"	1201:6:28359:28418	5132669	0	True				
ANR	5132704	AndExpression	"p -> iob . read_at ( p -> iob . io , seeki , & ch , 1 ) != 1 && ch != 0xff"		5132669	0		&&			
ANR	5132705	EqualityExpression	"p -> iob . read_at ( p -> iob . io , seeki , & ch , 1 ) != 1"		5132669	0		!=			
ANR	5132706	CallExpression	"p -> iob . read_at ( p -> iob . io , seeki , & ch , 1 )"		5132669	0					
ANR	5132707	Callee	p -> iob . read_at		5132669	0					
ANR	5132708	MemberAccess	p -> iob . read_at		5132669	0					
ANR	5132709	PtrMemberAccess	p -> iob		5132669	0					
ANR	5132710	Identifier	p		5132669	0					
ANR	5132711	Identifier	iob		5132669	1					
ANR	5132712	Identifier	read_at		5132669	1					
ANR	5132713	ArgumentList	p -> iob . io		5132669	1					
ANR	5132714	Argument	p -> iob . io		5132669	0					
ANR	5132715	MemberAccess	p -> iob . io		5132669	0					
ANR	5132716	PtrMemberAccess	p -> iob		5132669	0					
ANR	5132717	Identifier	p		5132669	0					
ANR	5132718	Identifier	iob		5132669	1					
ANR	5132719	Identifier	io		5132669	1					
ANR	5132720	Argument	seeki		5132669	1					
ANR	5132721	Identifier	seeki		5132669	0					
ANR	5132722	Argument	& ch		5132669	2					
ANR	5132723	UnaryOperationExpression	& ch		5132669	0					
ANR	5132724	UnaryOperator	&		5132669	0					
ANR	5132725	Identifier	ch		5132669	1					
ANR	5132726	Argument	1		5132669	3					
ANR	5132727	PrimaryExpression	1		5132669	0					
ANR	5132728	PrimaryExpression	1		5132669	1					
ANR	5132729	EqualityExpression	ch != 0xff		5132669	1		!=			
ANR	5132730	Identifier	ch		5132669	0					
ANR	5132731	PrimaryExpression	0xff		5132669	1					
ANR	5132732	CompoundStatement		5:68:226:226	5132669	1					
ANR	5132733	ExpressionStatement	"p -> cb_printf ( ""-1"" )"	1202:3:28426:28445	5132669	0	True				
ANR	5132734	CallExpression	"p -> cb_printf ( ""-1"" )"		5132669	0					
ANR	5132735	Callee	p -> cb_printf		5132669	0					
ANR	5132736	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5132737	Identifier	p		5132669	0					
ANR	5132738	Identifier	cb_printf		5132669	1					
ANR	5132739	ArgumentList	"""-1"""		5132669	1					
ANR	5132740	Argument	"""-1"""		5132669	0					
ANR	5132741	PrimaryExpression	"""-1"""		5132669	0					
ANR	5132742	ReturnStatement	return ;	1203:3:28450:28456	5132669	1	True				
ANR	5132743	IfStatement	if ( p -> flags & R_PRINT_FLAGS_UNALLOC && ! ( p -> iob . io -> cached & R_PERM_R ) )		5132669	1					
ANR	5132744	Condition	p -> flags & R_PRINT_FLAGS_UNALLOC && ! ( p -> iob . io -> cached & R_PERM_R )	1206:5:28470:28536	5132669	0	True				
ANR	5132745	AndExpression	p -> flags & R_PRINT_FLAGS_UNALLOC && ! ( p -> iob . io -> cached & R_PERM_R )		5132669	0		&&			
ANR	5132746	BitAndExpression	p -> flags & R_PRINT_FLAGS_UNALLOC		5132669	0		&			
ANR	5132747	PtrMemberAccess	p -> flags		5132669	0					
ANR	5132748	Identifier	p		5132669	0					
ANR	5132749	Identifier	flags		5132669	1					
ANR	5132750	Identifier	R_PRINT_FLAGS_UNALLOC		5132669	1					
ANR	5132751	UnaryOperationExpression	! ( p -> iob . io -> cached & R_PERM_R )		5132669	1					
ANR	5132752	UnaryOperator	!		5132669	0					
ANR	5132753	BitAndExpression	p -> iob . io -> cached & R_PERM_R		5132669	1		&			
ANR	5132754	PtrMemberAccess	p -> iob . io -> cached		5132669	0					
ANR	5132755	MemberAccess	p -> iob . io		5132669	0					
ANR	5132756	PtrMemberAccess	p -> iob		5132669	0					
ANR	5132757	Identifier	p		5132669	0					
ANR	5132758	Identifier	iob		5132669	1					
ANR	5132759	Identifier	io		5132669	1					
ANR	5132760	Identifier	cached		5132669	1					
ANR	5132761	Identifier	R_PERM_R		5132669	1					
ANR	5132762	CompoundStatement		13:2:396:407	5132669	1					
ANR	5132763	IdentifierDeclStatement	ut64 total_map_left = 0 ;	1207:2:28543:28566	5132669	0	True				
ANR	5132764	IdentifierDecl	total_map_left = 0		5132669	0					
ANR	5132765	IdentifierDeclType	ut64		5132669	0					
ANR	5132766	Identifier	total_map_left		5132669	1					
ANR	5132767	AssignmentExpression	total_map_left = 0		5132669	2		=			
ANR	5132768	Identifier	total_map_left		5132669	0					
ANR	5132769	PrimaryExpression	0		5132669	1					
ANR	5132770	IdentifierDeclStatement	ut64 addr = seeki ;	1208:2:28570:28587	5132669	1	True				
ANR	5132771	IdentifierDecl	addr = seeki		5132669	0					
ANR	5132772	IdentifierDeclType	ut64		5132669	0					
ANR	5132773	Identifier	addr		5132669	1					
ANR	5132774	AssignmentExpression	addr = seeki		5132669	2		=			
ANR	5132775	Identifier	seeki		5132669	0					
ANR	5132776	Identifier	seeki		5132669	1					
ANR	5132777	IdentifierDeclStatement	RIOMap * map ;	1209:2:28591:28602	5132669	2	True				
ANR	5132778	IdentifierDecl	* map		5132669	0					
ANR	5132779	IdentifierDeclType	RIOMap *		5132669	0					
ANR	5132780	Identifier	map		5132669	1					
ANR	5132781	WhileStatement	"while ( total_map_left < len && ( map = p -> iob . io -> va ? p -> iob . map_get ( p -> iob . io , addr ) : p -> iob . map_get_paddr ( p -> iob . io , addr ) ) && map -> perm & R_PERM_R )"		5132669	3					
ANR	5132782	Condition	"total_map_left < len && ( map = p -> iob . io -> va ? p -> iob . map_get ( p -> iob . io , addr ) : p -> iob . map_get_paddr ( p -> iob . io , addr ) ) && map -> perm & R_PERM_R"	1210:9:28613:28801	5132669	0	True				
ANR	5132783	AndExpression	"total_map_left < len && ( map = p -> iob . io -> va ? p -> iob . map_get ( p -> iob . io , addr ) : p -> iob . map_get_paddr ( p -> iob . io , addr ) ) && map -> perm & R_PERM_R"		5132669	0		&&			
ANR	5132784	RelationalExpression	total_map_left < len		5132669	0		<			
ANR	5132785	Identifier	total_map_left		5132669	0					
ANR	5132786	Identifier	len		5132669	1					
ANR	5132787	AndExpression	"( map = p -> iob . io -> va ? p -> iob . map_get ( p -> iob . io , addr ) : p -> iob . map_get_paddr ( p -> iob . io , addr ) ) && map -> perm & R_PERM_R"		5132669	1		&&			
ANR	5132788	AssignmentExpression	"map = p -> iob . io -> va ? p -> iob . map_get ( p -> iob . io , addr ) : p -> iob . map_get_paddr ( p -> iob . io , addr )"		5132669	0		=			
ANR	5132789	Identifier	map		5132669	0					
ANR	5132790	ConditionalExpression	"p -> iob . io -> va ? p -> iob . map_get ( p -> iob . io , addr ) : p -> iob . map_get_paddr ( p -> iob . io , addr )"		5132669	1					
ANR	5132791	Condition	p -> iob . io -> va		5132669	0					
ANR	5132792	PtrMemberAccess	p -> iob . io -> va		5132669	0					
ANR	5132793	MemberAccess	p -> iob . io		5132669	0					
ANR	5132794	PtrMemberAccess	p -> iob		5132669	0					
ANR	5132795	Identifier	p		5132669	0					
ANR	5132796	Identifier	iob		5132669	1					
ANR	5132797	Identifier	io		5132669	1					
ANR	5132798	Identifier	va		5132669	1					
ANR	5132799	CallExpression	"p -> iob . map_get ( p -> iob . io , addr )"		5132669	1					
ANR	5132800	Callee	p -> iob . map_get		5132669	0					
ANR	5132801	MemberAccess	p -> iob . map_get		5132669	0					
ANR	5132802	PtrMemberAccess	p -> iob		5132669	0					
ANR	5132803	Identifier	p		5132669	0					
ANR	5132804	Identifier	iob		5132669	1					
ANR	5132805	Identifier	map_get		5132669	1					
ANR	5132806	ArgumentList	p -> iob . io		5132669	1					
ANR	5132807	Argument	p -> iob . io		5132669	0					
ANR	5132808	MemberAccess	p -> iob . io		5132669	0					
ANR	5132809	PtrMemberAccess	p -> iob		5132669	0					
ANR	5132810	Identifier	p		5132669	0					
ANR	5132811	Identifier	iob		5132669	1					
ANR	5132812	Identifier	io		5132669	1					
ANR	5132813	Argument	addr		5132669	1					
ANR	5132814	Identifier	addr		5132669	0					
ANR	5132815	CallExpression	"p -> iob . map_get_paddr ( p -> iob . io , addr )"		5132669	2					
ANR	5132816	Callee	p -> iob . map_get_paddr		5132669	0					
ANR	5132817	MemberAccess	p -> iob . map_get_paddr		5132669	0					
ANR	5132818	PtrMemberAccess	p -> iob		5132669	0					
ANR	5132819	Identifier	p		5132669	0					
ANR	5132820	Identifier	iob		5132669	1					
ANR	5132821	Identifier	map_get_paddr		5132669	1					
ANR	5132822	ArgumentList	p -> iob . io		5132669	1					
ANR	5132823	Argument	p -> iob . io		5132669	0					
ANR	5132824	MemberAccess	p -> iob . io		5132669	0					
ANR	5132825	PtrMemberAccess	p -> iob		5132669	0					
ANR	5132826	Identifier	p		5132669	0					
ANR	5132827	Identifier	iob		5132669	1					
ANR	5132828	Identifier	io		5132669	1					
ANR	5132829	Argument	addr		5132669	1					
ANR	5132830	Identifier	addr		5132669	0					
ANR	5132831	BitAndExpression	map -> perm & R_PERM_R		5132669	1		&			
ANR	5132832	PtrMemberAccess	map -> perm		5132669	0					
ANR	5132833	Identifier	map		5132669	0					
ANR	5132834	Identifier	perm		5132669	1					
ANR	5132835	Identifier	R_PERM_R		5132669	1					
ANR	5132836	CompoundStatement		18:34:609:609	5132669	1					
ANR	5132837	IfStatement	if ( ! map -> itv . size )		5132669	0					
ANR	5132838	Condition	! map -> itv . size	1215:7:28813:28826	5132669	0	True				
ANR	5132839	UnaryOperationExpression	! map -> itv . size		5132669	0					
ANR	5132840	UnaryOperator	!		5132669	0					
ANR	5132841	MemberAccess	map -> itv . size		5132669	1					
ANR	5132842	PtrMemberAccess	map -> itv		5132669	0					
ANR	5132843	Identifier	map		5132669	0					
ANR	5132844	Identifier	itv		5132669	1					
ANR	5132845	Identifier	size		5132669	1					
ANR	5132846	CompoundStatement		19:23:634:634	5132669	1					
ANR	5132847	ExpressionStatement	total_map_left = addr == 0 ? UT64_MAX : UT64_MAX - addr + 1	1216:4:28835:28894	5132669	0	True				
ANR	5132848	AssignmentExpression	total_map_left = addr == 0 ? UT64_MAX : UT64_MAX - addr + 1		5132669	0		=			
ANR	5132849	Identifier	total_map_left		5132669	0					
ANR	5132850	ConditionalExpression	addr == 0 ? UT64_MAX : UT64_MAX - addr + 1		5132669	1					
ANR	5132851	Condition	addr == 0		5132669	0					
ANR	5132852	EqualityExpression	addr == 0		5132669	0		==			
ANR	5132853	Identifier	addr		5132669	0					
ANR	5132854	PrimaryExpression	0		5132669	1					
ANR	5132855	Identifier	UT64_MAX		5132669	1					
ANR	5132856	AdditiveExpression	UT64_MAX - addr + 1		5132669	2		-			
ANR	5132857	Identifier	UT64_MAX		5132669	0					
ANR	5132858	AdditiveExpression	addr + 1		5132669	1		+			
ANR	5132859	Identifier	addr		5132669	0					
ANR	5132860	PrimaryExpression	1		5132669	1					
ANR	5132861	BreakStatement	break ;	1217:4:28900:28905	5132669	1	True				
ANR	5132862	ExpressionStatement	total_map_left += map -> itv . size - ( addr - ( p -> iob . io -> va ? map -> itv . addr : map -> delta ) )	1219:3:28915:29002	5132669	1	True				
ANR	5132863	AssignmentExpression	total_map_left += map -> itv . size - ( addr - ( p -> iob . io -> va ? map -> itv . addr : map -> delta ) )		5132669	0		+=			
ANR	5132864	Identifier	total_map_left		5132669	0					
ANR	5132865	AdditiveExpression	map -> itv . size - ( addr - ( p -> iob . io -> va ? map -> itv . addr : map -> delta ) )		5132669	1		-			
ANR	5132866	MemberAccess	map -> itv . size		5132669	0					
ANR	5132867	PtrMemberAccess	map -> itv		5132669	0					
ANR	5132868	Identifier	map		5132669	0					
ANR	5132869	Identifier	itv		5132669	1					
ANR	5132870	Identifier	size		5132669	1					
ANR	5132871	AdditiveExpression	addr - ( p -> iob . io -> va ? map -> itv . addr : map -> delta )		5132669	1		-			
ANR	5132872	Identifier	addr		5132669	0					
ANR	5132873	ConditionalExpression	p -> iob . io -> va ? map -> itv . addr : map -> delta		5132669	1					
ANR	5132874	Condition	p -> iob . io -> va		5132669	0					
ANR	5132875	PtrMemberAccess	p -> iob . io -> va		5132669	0					
ANR	5132876	MemberAccess	p -> iob . io		5132669	0					
ANR	5132877	PtrMemberAccess	p -> iob		5132669	0					
ANR	5132878	Identifier	p		5132669	0					
ANR	5132879	Identifier	iob		5132669	1					
ANR	5132880	Identifier	io		5132669	1					
ANR	5132881	Identifier	va		5132669	1					
ANR	5132882	MemberAccess	map -> itv . addr		5132669	1					
ANR	5132883	PtrMemberAccess	map -> itv		5132669	0					
ANR	5132884	Identifier	map		5132669	0					
ANR	5132885	Identifier	itv		5132669	1					
ANR	5132886	Identifier	addr		5132669	1					
ANR	5132887	PtrMemberAccess	map -> delta		5132669	2					
ANR	5132888	Identifier	map		5132669	0					
ANR	5132889	Identifier	delta		5132669	1					
ANR	5132890	ExpressionStatement	addr += total_map_left	1220:3:29007:29029	5132669	2	True				
ANR	5132891	AssignmentExpression	addr += total_map_left		5132669	0		+=			
ANR	5132892	Identifier	addr		5132669	0					
ANR	5132893	Identifier	total_map_left		5132669	1					
ANR	5132894	IfStatement	if ( total_map_left < len )		5132669	4					
ANR	5132895	Condition	total_map_left < len	1222:6:29041:29060	5132669	0	True				
ANR	5132896	RelationalExpression	total_map_left < len		5132669	0		<			
ANR	5132897	Identifier	total_map_left		5132669	0					
ANR	5132898	Identifier	len		5132669	1					
ANR	5132899	CompoundStatement		26:28:868:868	5132669	1					
ANR	5132900	ExpressionStatement	len = total_map_left	1223:3:29068:29088	5132669	0	True				
ANR	5132901	AssignmentExpression	len = total_map_left		5132669	0		=			
ANR	5132902	Identifier	len		5132669	0					
ANR	5132903	Identifier	total_map_left		5132669	1					
ANR	5132904	IdentifierDeclStatement	"int str_len = r_str_nlen ( ( char * ) buf + i , len - i ) ;"	1226:1:29098:29149	5132669	2	True				
ANR	5132905	IdentifierDecl	"str_len = r_str_nlen ( ( char * ) buf + i , len - i )"		5132669	0					
ANR	5132906	IdentifierDeclType	int		5132669	0					
ANR	5132907	Identifier	str_len		5132669	1					
ANR	5132908	AssignmentExpression	"str_len = r_str_nlen ( ( char * ) buf + i , len - i )"		5132669	2		=			
ANR	5132909	Identifier	str_len		5132669	0					
ANR	5132910	CallExpression	"r_str_nlen ( ( char * ) buf + i , len - i )"		5132669	1					
ANR	5132911	Callee	r_str_nlen		5132669	0					
ANR	5132912	Identifier	r_str_nlen		5132669	0					
ANR	5132913	ArgumentList	( char * ) buf + i		5132669	1					
ANR	5132914	Argument	( char * ) buf + i		5132669	0					
ANR	5132915	AdditiveExpression	( char * ) buf + i		5132669	0		+			
ANR	5132916	CastExpression	( char * ) buf		5132669	0					
ANR	5132917	CastTarget	char *		5132669	0					
ANR	5132918	Identifier	buf		5132669	1					
ANR	5132919	Identifier	i		5132669	1					
ANR	5132920	Argument	len - i		5132669	1					
ANR	5132921	AdditiveExpression	len - i		5132669	0		-			
ANR	5132922	Identifier	len		5132669	0					
ANR	5132923	Identifier	i		5132669	1					
ANR	5132924	IdentifierDeclStatement	bool overflow = ( size == - 1 || size > len - i ) && str_len == len - i ;	1227:1:29152:29220	5132669	3	True				
ANR	5132925	IdentifierDecl	overflow = ( size == - 1 || size > len - i ) && str_len == len - i		5132669	0					
ANR	5132926	IdentifierDeclType	bool		5132669	0					
ANR	5132927	Identifier	overflow		5132669	1					
ANR	5132928	AssignmentExpression	overflow = ( size == - 1 || size > len - i ) && str_len == len - i		5132669	2		=			
ANR	5132929	Identifier	overflow		5132669	0					
ANR	5132930	AndExpression	( size == - 1 || size > len - i ) && str_len == len - i		5132669	1		&&			
ANR	5132931	OrExpression	size == - 1 || size > len - i		5132669	0		||			
ANR	5132932	EqualityExpression	size == - 1		5132669	0		==			
ANR	5132933	Identifier	size		5132669	0					
ANR	5132934	UnaryOperationExpression	- 1		5132669	1					
ANR	5132935	UnaryOperator	-		5132669	0					
ANR	5132936	PrimaryExpression	1		5132669	1					
ANR	5132937	RelationalExpression	size > len - i		5132669	1		>			
ANR	5132938	Identifier	size		5132669	0					
ANR	5132939	AdditiveExpression	len - i		5132669	1		-			
ANR	5132940	Identifier	len		5132669	0					
ANR	5132941	Identifier	i		5132669	1					
ANR	5132942	EqualityExpression	str_len == len - i		5132669	1		==			
ANR	5132943	Identifier	str_len		5132669	0					
ANR	5132944	AdditiveExpression	len - i		5132669	1		-			
ANR	5132945	Identifier	len		5132669	0					
ANR	5132946	Identifier	i		5132669	1					
ANR	5132947	IfStatement	if ( MUSTSET )		5132669	4					
ANR	5132948	Condition	MUSTSET	1228:5:29227:29233	5132669	0	True				
ANR	5132949	Identifier	MUSTSET		5132669	0					
ANR	5132950	CompoundStatement		35:2:1128:1173	5132669	1					
ANR	5132951	IdentifierDeclStatement	int buflen = strlen ( ( const char * ) buf + seeki ) ;	1229:2:29240:29287	5132669	0	True				
ANR	5132952	IdentifierDecl	buflen = strlen ( ( const char * ) buf + seeki )		5132669	0					
ANR	5132953	IdentifierDeclType	int		5132669	0					
ANR	5132954	Identifier	buflen		5132669	1					
ANR	5132955	AssignmentExpression	buflen = strlen ( ( const char * ) buf + seeki )		5132669	2		=			
ANR	5132956	Identifier	buflen		5132669	0					
ANR	5132957	CallExpression	strlen ( ( const char * ) buf + seeki )		5132669	1					
ANR	5132958	Callee	strlen		5132669	0					
ANR	5132959	Identifier	strlen		5132669	0					
ANR	5132960	ArgumentList	( const char * ) buf + seeki		5132669	1					
ANR	5132961	Argument	( const char * ) buf + seeki		5132669	0					
ANR	5132962	AdditiveExpression	( const char * ) buf + seeki		5132669	0		+			
ANR	5132963	CastExpression	( const char * ) buf		5132669	0					
ANR	5132964	CastTarget	const char *		5132669	0					
ANR	5132965	Identifier	buf		5132669	1					
ANR	5132966	Identifier	seeki		5132669	1					
ANR	5132967	IdentifierDeclStatement	int vallen = strlen ( setval ) ;	1230:2:29291:29319	5132669	1	True				
ANR	5132968	IdentifierDecl	vallen = strlen ( setval )		5132669	0					
ANR	5132969	IdentifierDeclType	int		5132669	0					
ANR	5132970	Identifier	vallen		5132669	1					
ANR	5132971	AssignmentExpression	vallen = strlen ( setval )		5132669	2		=			
ANR	5132972	Identifier	vallen		5132669	0					
ANR	5132973	CallExpression	strlen ( setval )		5132669	1					
ANR	5132974	Callee	strlen		5132669	0					
ANR	5132975	Identifier	strlen		5132669	0					
ANR	5132976	ArgumentList	setval		5132669	1					
ANR	5132977	Argument	setval		5132669	0					
ANR	5132978	Identifier	setval		5132669	0					
ANR	5132979	IdentifierDeclStatement	"char * ons , * newstring = ons = strdup ( setval ) ;"	1231:2:29323:29368	5132669	2	True				
ANR	5132980	IdentifierDecl	* ons		5132669	0					
ANR	5132981	IdentifierDeclType	char *		5132669	0					
ANR	5132982	Identifier	ons		5132669	1					
ANR	5132983	IdentifierDecl	* newstring = ons = strdup ( setval )		5132669	1					
ANR	5132984	IdentifierDeclType	char *		5132669	0					
ANR	5132985	Identifier	newstring		5132669	1					
ANR	5132986	AssignmentExpression	* newstring = ons = strdup ( setval )		5132669	2		=			
ANR	5132987	Identifier	newstring		5132669	0					
ANR	5132988	AssignmentExpression	ons = strdup ( setval )		5132669	1		=			
ANR	5132989	Identifier	ons		5132669	0					
ANR	5132990	CallExpression	strdup ( setval )		5132669	1					
ANR	5132991	Callee	strdup		5132669	0					
ANR	5132992	Identifier	strdup		5132669	0					
ANR	5132993	ArgumentList	setval		5132669	1					
ANR	5132994	Argument	setval		5132669	0					
ANR	5132995	Identifier	setval		5132669	0					
ANR	5132996	IfStatement	"if ( ( newstring [ 0 ] == '\\""' && newstring [ vallen - 1 ] == '\\""' ) || ( newstring [ 0 ] == '\\'' && newstring [ vallen - 1 ] == '\\'' ) )"		5132669	3					
ANR	5132997	Condition	"( newstring [ 0 ] == '\\""' && newstring [ vallen - 1 ] == '\\""' ) || ( newstring [ 0 ] == '\\'' && newstring [ vallen - 1 ] == '\\'' )"	1232:6:29376:29493	5132669	0	True				
ANR	5132998	OrExpression	"( newstring [ 0 ] == '\\""' && newstring [ vallen - 1 ] == '\\""' ) || ( newstring [ 0 ] == '\\'' && newstring [ vallen - 1 ] == '\\'' )"		5132669	0		||			
ANR	5132999	AndExpression	"newstring [ 0 ] == '\\""' && newstring [ vallen - 1 ] == '\\""'"		5132669	0		&&			
ANR	5133000	EqualityExpression	"newstring [ 0 ] == '\\""'"		5132669	0		==			
ANR	5133001	ArrayIndexing	newstring [ 0 ]		5132669	0					
ANR	5133002	Identifier	newstring		5132669	0					
ANR	5133003	PrimaryExpression	0		5132669	1					
ANR	5133004	PrimaryExpression	"'\\""'"		5132669	1					
ANR	5133005	EqualityExpression	"newstring [ vallen - 1 ] == '\\""'"		5132669	1		==			
ANR	5133006	ArrayIndexing	newstring [ vallen - 1 ]		5132669	0					
ANR	5133007	Identifier	newstring		5132669	0					
ANR	5133008	AdditiveExpression	vallen - 1		5132669	1		-			
ANR	5133009	Identifier	vallen		5132669	0					
ANR	5133010	PrimaryExpression	1		5132669	1					
ANR	5133011	PrimaryExpression	"'\\""'"		5132669	1					
ANR	5133012	AndExpression	newstring [ 0 ] == '\\'' && newstring [ vallen - 1 ] == '\\''		5132669	1		&&			
ANR	5133013	EqualityExpression	newstring [ 0 ] == '\\''		5132669	0		==			
ANR	5133014	ArrayIndexing	newstring [ 0 ]		5132669	0					
ANR	5133015	Identifier	newstring		5132669	0					
ANR	5133016	PrimaryExpression	0		5132669	1					
ANR	5133017	PrimaryExpression	'\\''		5132669	1					
ANR	5133018	EqualityExpression	newstring [ vallen - 1 ] == '\\''		5132669	1		==			
ANR	5133019	ArrayIndexing	newstring [ vallen - 1 ]		5132669	0					
ANR	5133020	Identifier	newstring		5132669	0					
ANR	5133021	AdditiveExpression	vallen - 1		5132669	1		-			
ANR	5133022	Identifier	vallen		5132669	0					
ANR	5133023	PrimaryExpression	1		5132669	1					
ANR	5133024	PrimaryExpression	'\\''		5132669	1					
ANR	5133025	CompoundStatement		37:64:1301:1301	5132669	1					
ANR	5133026	ExpressionStatement	newstring [ vallen - 1 ] = '\\0'	1234:3:29501:29529	5132669	0	True				
ANR	5133027	AssignmentExpression	newstring [ vallen - 1 ] = '\\0'		5132669	0		=			
ANR	5133028	ArrayIndexing	newstring [ vallen - 1 ]		5132669	0					
ANR	5133029	Identifier	newstring		5132669	0					
ANR	5133030	AdditiveExpression	vallen - 1		5132669	1		-			
ANR	5133031	Identifier	vallen		5132669	0					
ANR	5133032	PrimaryExpression	1		5132669	1					
ANR	5133033	PrimaryExpression	'\\0'		5132669	1					
ANR	5133034	ExpressionStatement	newstring ++	1235:3:29534:29545	5132669	1	True				
ANR	5133035	PostIncDecOperationExpression	newstring ++		5132669	0					
ANR	5133036	Identifier	newstring		5132669	0					
ANR	5133037	IncDec	++		5132669	1					
ANR	5133038	ExpressionStatement	vallen -= 2	1236:3:29550:29561	5132669	2	True				
ANR	5133039	AssignmentExpression	vallen -= 2		5132669	0		-=			
ANR	5133040	Identifier	vallen		5132669	0					
ANR	5133041	PrimaryExpression	2		5132669	1					
ANR	5133042	IfStatement	if ( vallen > buflen )		5132669	4					
ANR	5133043	Condition	vallen > buflen	1238:6:29573:29587	5132669	0	True				
ANR	5133044	RelationalExpression	vallen > buflen		5132669	0		>			
ANR	5133045	Identifier	vallen		5132669	0					
ANR	5133046	Identifier	buflen		5132669	1					
ANR	5133047	CompoundStatement		42:23:1395:1395	5132669	1					
ANR	5133048	ExpressionStatement	"eprintf ( ""Warning: new string is longer than previous one\\n"" )"	1239:3:29595:29656	5132669	0	True				
ANR	5133049	CallExpression	"eprintf ( ""Warning: new string is longer than previous one\\n"" )"		5132669	0					
ANR	5133050	Callee	eprintf		5132669	0					
ANR	5133051	Identifier	eprintf		5132669	0					
ANR	5133052	ArgumentList	"""Warning: new string is longer than previous one\\n"""		5132669	1					
ANR	5133053	Argument	"""Warning: new string is longer than previous one\\n"""		5132669	0					
ANR	5133054	PrimaryExpression	"""Warning: new string is longer than previous one\\n"""		5132669	0					
ANR	5133055	ExpressionStatement	"p -> cb_printf ( ""wx "" )"	1241:2:29664:29684	5132669	5	True				
ANR	5133056	CallExpression	"p -> cb_printf ( ""wx "" )"		5132669	0					
ANR	5133057	Callee	p -> cb_printf		5132669	0					
ANR	5133058	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133059	Identifier	p		5132669	0					
ANR	5133060	Identifier	cb_printf		5132669	1					
ANR	5133061	ArgumentList	"""wx """		5132669	1					
ANR	5133062	Argument	"""wx """		5132669	0					
ANR	5133063	PrimaryExpression	"""wx """		5132669	0					
ANR	5133064	ForStatement	for ( i = 0 ; i < vallen ; i ++ )		5132669	6					
ANR	5133065	ForInit	i = 0 ;	1242:7:29693:29698	5132669	0	True				
ANR	5133066	AssignmentExpression	i = 0		5132669	0		=			
ANR	5133067	Identifier	i		5132669	0					
ANR	5133068	PrimaryExpression	0		5132669	1					
ANR	5133069	Condition	i < vallen	1242:14:29700:29709	5132669	1	True				
ANR	5133070	RelationalExpression	i < vallen		5132669	0		<			
ANR	5133071	Identifier	i		5132669	0					
ANR	5133072	Identifier	vallen		5132669	1					
ANR	5133073	PostIncDecOperationExpression	i ++	1242:26:29712:29714	5132669	2	True				
ANR	5133074	Identifier	i		5132669	0					
ANR	5133075	IncDec	++		5132669	1					
ANR	5133076	CompoundStatement		46:31:1522:1522	5132669	3					
ANR	5133077	IfStatement	if ( i < vallen - 3 && newstring [ i ] == '\\\\' && newstring [ i + 1 ] == 'x' )		5132669	0					
ANR	5133078	Condition	i < vallen - 3 && newstring [ i ] == '\\\\' && newstring [ i + 1 ] == 'x'	1243:7:29726:29790	5132669	0	True				
ANR	5133079	AndExpression	i < vallen - 3 && newstring [ i ] == '\\\\' && newstring [ i + 1 ] == 'x'		5132669	0		&&			
ANR	5133080	RelationalExpression	i < vallen - 3		5132669	0		<			
ANR	5133081	Identifier	i		5132669	0					
ANR	5133082	AdditiveExpression	vallen - 3		5132669	1		-			
ANR	5133083	Identifier	vallen		5132669	0					
ANR	5133084	PrimaryExpression	3		5132669	1					
ANR	5133085	AndExpression	newstring [ i ] == '\\\\' && newstring [ i + 1 ] == 'x'		5132669	1		&&			
ANR	5133086	EqualityExpression	newstring [ i ] == '\\\\'		5132669	0		==			
ANR	5133087	ArrayIndexing	newstring [ i ]		5132669	0					
ANR	5133088	Identifier	newstring		5132669	0					
ANR	5133089	Identifier	i		5132669	1					
ANR	5133090	PrimaryExpression	'\\\\'		5132669	1					
ANR	5133091	EqualityExpression	newstring [ i + 1 ] == 'x'		5132669	1		==			
ANR	5133092	ArrayIndexing	newstring [ i + 1 ]		5132669	0					
ANR	5133093	Identifier	newstring		5132669	0					
ANR	5133094	AdditiveExpression	i + 1		5132669	1		+			
ANR	5133095	Identifier	i		5132669	0					
ANR	5133096	PrimaryExpression	1		5132669	1					
ANR	5133097	PrimaryExpression	'x'		5132669	1					
ANR	5133098	CompoundStatement		47:74:1598:1598	5132669	1					
ANR	5133099	ExpressionStatement	"p -> cb_printf ( ""%c%c"" , newstring [ i + 2 ] , newstring [ i + 3 ] )"	1244:4:29799:29856	5132669	0	True				
ANR	5133100	CallExpression	"p -> cb_printf ( ""%c%c"" , newstring [ i + 2 ] , newstring [ i + 3 ] )"		5132669	0					
ANR	5133101	Callee	p -> cb_printf		5132669	0					
ANR	5133102	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133103	Identifier	p		5132669	0					
ANR	5133104	Identifier	cb_printf		5132669	1					
ANR	5133105	ArgumentList	"""%c%c"""		5132669	1					
ANR	5133106	Argument	"""%c%c"""		5132669	0					
ANR	5133107	PrimaryExpression	"""%c%c"""		5132669	0					
ANR	5133108	Argument	newstring [ i + 2 ]		5132669	1					
ANR	5133109	ArrayIndexing	newstring [ i + 2 ]		5132669	0					
ANR	5133110	Identifier	newstring		5132669	0					
ANR	5133111	AdditiveExpression	i + 2		5132669	1		+			
ANR	5133112	Identifier	i		5132669	0					
ANR	5133113	PrimaryExpression	2		5132669	1					
ANR	5133114	Argument	newstring [ i + 3 ]		5132669	2					
ANR	5133115	ArrayIndexing	newstring [ i + 3 ]		5132669	0					
ANR	5133116	Identifier	newstring		5132669	0					
ANR	5133117	AdditiveExpression	i + 3		5132669	1		+			
ANR	5133118	Identifier	i		5132669	0					
ANR	5133119	PrimaryExpression	3		5132669	1					
ANR	5133120	ExpressionStatement	i += 3	1245:4:29862:29868	5132669	1	True				
ANR	5133121	AssignmentExpression	i += 3		5132669	0		+=			
ANR	5133122	Identifier	i		5132669	0					
ANR	5133123	PrimaryExpression	3		5132669	1					
ANR	5133124	ElseStatement	else		5132669	0					
ANR	5133125	CompoundStatement		50:10:1685:1685	5132669	0					
ANR	5133126	ExpressionStatement	"p -> cb_printf ( ""%2x"" , newstring [ i ] )"	1247:4:29886:29920	5132669	0	True				
ANR	5133127	CallExpression	"p -> cb_printf ( ""%2x"" , newstring [ i ] )"		5132669	0					
ANR	5133128	Callee	p -> cb_printf		5132669	0					
ANR	5133129	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133130	Identifier	p		5132669	0					
ANR	5133131	Identifier	cb_printf		5132669	1					
ANR	5133132	ArgumentList	"""%2x"""		5132669	1					
ANR	5133133	Argument	"""%2x"""		5132669	0					
ANR	5133134	PrimaryExpression	"""%2x"""		5132669	0					
ANR	5133135	Argument	newstring [ i ]		5132669	1					
ANR	5133136	ArrayIndexing	newstring [ i ]		5132669	0					
ANR	5133137	Identifier	newstring		5132669	0					
ANR	5133138	Identifier	i		5132669	1					
ANR	5133139	Statement	p	1250:2:29933:29933	5132669	7	True				
ANR	5133140	Statement	->	1250:3:29934:29935	5132669	8	True				
ANR	5133141	Statement	cb_printf	1250:5:29936:29944	5132669	9	True				
ANR	5133142	Statement	(	1250:15:29946:29946	5132669	10	True				
ANR	5133143	Statement	""" @ 0x%08"""	1250:16:29947:29956	5132669	11	True				
ANR	5133144	Statement	PFMT64x	1250:26:29957:29963	5132669	12	True				
ANR	5133145	Statement	"""\\n"""	1250:33:29964:29967	5132669	13	True				
ANR	5133146	Statement	","	1250:37:29968:29968	5132669	14	True				
ANR	5133147	Statement	seeki	1250:39:29970:29974	5132669	15	True				
ANR	5133148	Statement	)	1250:44:29975:29975	5132669	16	True				
ANR	5133149	ExpressionStatement		1250:45:29976:29976	5132669	17	True				
ANR	5133150	ExpressionStatement	free ( ons )	1251:2:29980:29990	5132669	18	True				
ANR	5133151	CallExpression	free ( ons )		5132669	0					
ANR	5133152	Callee	free		5132669	0					
ANR	5133153	Identifier	free		5132669	0					
ANR	5133154	ArgumentList	ons		5132669	1					
ANR	5133155	Argument	ons		5132669	0					
ANR	5133156	Identifier	ons		5132669	0					
ANR	5133157	ElseStatement	else		5132669	0					
ANR	5133158	IfStatement	if ( ( mode & R_PRINT_DOT ) || MUSTSEESTRUCT )		5132669	0					
ANR	5133159	Condition	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT	1252:12:30004:30040	5132669	0	True				
ANR	5133160	OrExpression	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT		5132669	0		||			
ANR	5133161	BitAndExpression	mode & R_PRINT_DOT		5132669	0		&			
ANR	5133162	Identifier	mode		5132669	0					
ANR	5133163	Identifier	R_PRINT_DOT		5132669	1					
ANR	5133164	Identifier	MUSTSEESTRUCT		5132669	1					
ANR	5133165	CompoundStatement		57:2:1852:1861	5132669	1					
ANR	5133166	IdentifierDeclStatement	int j = i ;	1253:2:30047:30056	5132669	0	True				
ANR	5133167	IdentifierDecl	j = i		5132669	0					
ANR	5133168	IdentifierDeclType	int		5132669	0					
ANR	5133169	Identifier	j		5132669	1					
ANR	5133170	AssignmentExpression	j = i		5132669	2		=			
ANR	5133171	Identifier	i		5132669	0					
ANR	5133172	Identifier	i		5132669	1					
ANR	5133173	ExpressionStatement	"( MUSTSEESTRUCT ) ? p -> cb_printf ( ""\\"""" ) : p -> cb_printf ( ""\\\\\\"""" )"	1254:2:30060:30127	5132669	1	True				
ANR	5133174	ConditionalExpression	"( MUSTSEESTRUCT ) ? p -> cb_printf ( ""\\"""" ) : p -> cb_printf ( ""\\\\\\"""" )"		5132669	0					
ANR	5133175	Condition	MUSTSEESTRUCT		5132669	0					
ANR	5133176	Identifier	MUSTSEESTRUCT		5132669	0					
ANR	5133177	CallExpression	"p -> cb_printf ( ""\\"""" )"		5132669	1					
ANR	5133178	Callee	p -> cb_printf		5132669	0					
ANR	5133179	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133180	Identifier	p		5132669	0					
ANR	5133181	Identifier	cb_printf		5132669	1					
ANR	5133182	ArgumentList	"""\\"""""		5132669	1					
ANR	5133183	Argument	"""\\"""""		5132669	0					
ANR	5133184	PrimaryExpression	"""\\"""""		5132669	0					
ANR	5133185	CallExpression	"p -> cb_printf ( ""\\\\\\"""" )"		5132669	2					
ANR	5133186	Callee	p -> cb_printf		5132669	0					
ANR	5133187	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133188	Identifier	p		5132669	0					
ANR	5133189	Identifier	cb_printf		5132669	1					
ANR	5133190	ArgumentList	"""\\\\\\"""""		5132669	1					
ANR	5133191	Argument	"""\\\\\\"""""		5132669	0					
ANR	5133192	PrimaryExpression	"""\\\\\\"""""		5132669	0					
ANR	5133193	ForStatement	for ( ; j < len && ( ( size == - 1 || size -- > 0 ) && buf [ j ] ) ; j ++ )		5132669	2					
ANR	5133194	Condition	j < len && ( ( size == - 1 || size -- > 0 ) && buf [ j ] )	1257:9:30138:30181	5132669	0	True				
ANR	5133195	AndExpression	j < len && ( ( size == - 1 || size -- > 0 ) && buf [ j ] )		5132669	0		&&			
ANR	5133196	RelationalExpression	j < len		5132669	0		<			
ANR	5133197	Identifier	j		5132669	0					
ANR	5133198	Identifier	len		5132669	1					
ANR	5133199	AndExpression	( size == - 1 || size -- > 0 ) && buf [ j ]		5132669	1		&&			
ANR	5133200	OrExpression	size == - 1 || size -- > 0		5132669	0		||			
ANR	5133201	EqualityExpression	size == - 1		5132669	0		==			
ANR	5133202	Identifier	size		5132669	0					
ANR	5133203	UnaryOperationExpression	- 1		5132669	1					
ANR	5133204	UnaryOperator	-		5132669	0					
ANR	5133205	PrimaryExpression	1		5132669	1					
ANR	5133206	RelationalExpression	size -- > 0		5132669	1		>			
ANR	5133207	PostIncDecOperationExpression	size --		5132669	0					
ANR	5133208	Identifier	size		5132669	0					
ANR	5133209	IncDec	--		5132669	1					
ANR	5133210	PrimaryExpression	0		5132669	1					
ANR	5133211	ArrayIndexing	buf [ j ]		5132669	1					
ANR	5133212	Identifier	buf		5132669	0					
ANR	5133213	Identifier	j		5132669	1					
ANR	5133214	PostIncDecOperationExpression	j ++	1257:56:30185:30187	5132669	1	True				
ANR	5133215	Identifier	j		5132669	0					
ANR	5133216	IncDec	++		5132669	1					
ANR	5133217	CompoundStatement		62:3:2000:2016	5132669	2					
ANR	5133218	IdentifierDeclStatement	char ch = buf [ j ] ;	1258:3:30195:30211	5132669	0	True				
ANR	5133219	IdentifierDecl	ch = buf [ j ]		5132669	0					
ANR	5133220	IdentifierDeclType	char		5132669	0					
ANR	5133221	Identifier	ch		5132669	1					
ANR	5133222	AssignmentExpression	ch = buf [ j ]		5132669	2		=			
ANR	5133223	Identifier	ch		5132669	0					
ANR	5133224	ArrayIndexing	buf [ j ]		5132669	1					
ANR	5133225	Identifier	buf		5132669	0					
ANR	5133226	Identifier	j		5132669	1					
ANR	5133227	IfStatement	"if ( ch == '""' )"		5132669	1					
ANR	5133228	Condition	"ch == '""'"	1259:7:30220:30228	5132669	0	True				
ANR	5133229	EqualityExpression	"ch == '""'"		5132669	0		==			
ANR	5133230	Identifier	ch		5132669	0					
ANR	5133231	PrimaryExpression	"'""'"		5132669	1					
ANR	5133232	CompoundStatement		63:18:2036:2036	5132669	1					
ANR	5133233	ExpressionStatement	"p -> cb_printf ( ""\\\\\\"""" )"	1260:4:30237:30258	5132669	0	True				
ANR	5133234	CallExpression	"p -> cb_printf ( ""\\\\\\"""" )"		5132669	0					
ANR	5133235	Callee	p -> cb_printf		5132669	0					
ANR	5133236	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133237	Identifier	p		5132669	0					
ANR	5133238	Identifier	cb_printf		5132669	1					
ANR	5133239	ArgumentList	"""\\\\\\"""""		5132669	1					
ANR	5133240	Argument	"""\\\\\\"""""		5132669	0					
ANR	5133241	PrimaryExpression	"""\\\\\\"""""		5132669	0					
ANR	5133242	ElseStatement	else		5132669	0					
ANR	5133243	IfStatement	if ( IS_PRINTABLE ( ch ) )		5132669	0					
ANR	5133244	Condition	IS_PRINTABLE ( ch )	1261:14:30274:30290	5132669	0	True				
ANR	5133245	CallExpression	IS_PRINTABLE ( ch )		5132669	0					
ANR	5133246	Callee	IS_PRINTABLE		5132669	0					
ANR	5133247	Identifier	IS_PRINTABLE		5132669	0					
ANR	5133248	ArgumentList	ch		5132669	1					
ANR	5133249	Argument	ch		5132669	0					
ANR	5133250	Identifier	ch		5132669	0					
ANR	5133251	CompoundStatement		65:33:2098:2098	5132669	1					
ANR	5133252	ExpressionStatement	"p -> cb_printf ( ""%c"" , ch )"	1262:4:30299:30322	5132669	0	True				
ANR	5133253	CallExpression	"p -> cb_printf ( ""%c"" , ch )"		5132669	0					
ANR	5133254	Callee	p -> cb_printf		5132669	0					
ANR	5133255	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133256	Identifier	p		5132669	0					
ANR	5133257	Identifier	cb_printf		5132669	1					
ANR	5133258	ArgumentList	"""%c"""		5132669	1					
ANR	5133259	Argument	"""%c"""		5132669	0					
ANR	5133260	PrimaryExpression	"""%c"""		5132669	0					
ANR	5133261	Argument	ch		5132669	1					
ANR	5133262	Identifier	ch		5132669	0					
ANR	5133263	ElseStatement	else		5132669	0					
ANR	5133264	CompoundStatement		67:10:2139:2139	5132669	0					
ANR	5133265	ExpressionStatement	"p -> cb_printf ( ""."" )"	1264:4:30340:30358	5132669	0	True				
ANR	5133266	CallExpression	"p -> cb_printf ( ""."" )"		5132669	0					
ANR	5133267	Callee	p -> cb_printf		5132669	0					
ANR	5133268	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133269	Identifier	p		5132669	0					
ANR	5133270	Identifier	cb_printf		5132669	1					
ANR	5133271	ArgumentList	"""."""		5132669	1					
ANR	5133272	Argument	"""."""		5132669	0					
ANR	5133273	PrimaryExpression	"""."""		5132669	0					
ANR	5133274	ExpressionStatement	"( MUSTSEESTRUCT ) ? p -> cb_printf ( ""\\"""" ) : p -> cb_printf ( ""\\\\\\"""" )"	1267:2:30371:30438	5132669	3	True				
ANR	5133275	ConditionalExpression	"( MUSTSEESTRUCT ) ? p -> cb_printf ( ""\\"""" ) : p -> cb_printf ( ""\\\\\\"""" )"		5132669	0					
ANR	5133276	Condition	MUSTSEESTRUCT		5132669	0					
ANR	5133277	Identifier	MUSTSEESTRUCT		5132669	0					
ANR	5133278	CallExpression	"p -> cb_printf ( ""\\"""" )"		5132669	1					
ANR	5133279	Callee	p -> cb_printf		5132669	0					
ANR	5133280	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133281	Identifier	p		5132669	0					
ANR	5133282	Identifier	cb_printf		5132669	1					
ANR	5133283	ArgumentList	"""\\"""""		5132669	1					
ANR	5133284	Argument	"""\\"""""		5132669	0					
ANR	5133285	PrimaryExpression	"""\\"""""		5132669	0					
ANR	5133286	CallExpression	"p -> cb_printf ( ""\\\\\\"""" )"		5132669	2					
ANR	5133287	Callee	p -> cb_printf		5132669	0					
ANR	5133288	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133289	Identifier	p		5132669	0					
ANR	5133290	Identifier	cb_printf		5132669	1					
ANR	5133291	ArgumentList	"""\\\\\\"""""		5132669	1					
ANR	5133292	Argument	"""\\\\\\"""""		5132669	0					
ANR	5133293	PrimaryExpression	"""\\\\\\"""""		5132669	0					
ANR	5133294	ElseStatement	else		5132669	0					
ANR	5133295	IfStatement	if ( MUSTSEE )		5132669	0					
ANR	5133296	Condition	MUSTSEE	1270:12:30452:30458	5132669	0	True				
ANR	5133297	Identifier	MUSTSEE		5132669	0					
ANR	5133298	CompoundStatement		75:2:2270:2279	5132669	1					
ANR	5133299	IdentifierDeclStatement	int j = i ;	1271:2:30465:30474	5132669	0	True				
ANR	5133300	IdentifierDecl	j = i		5132669	0					
ANR	5133301	IdentifierDeclType	int		5132669	0					
ANR	5133302	Identifier	j		5132669	1					
ANR	5133303	AssignmentExpression	j = i		5132669	2		=			
ANR	5133304	Identifier	i		5132669	0					
ANR	5133305	Identifier	i		5132669	1					
ANR	5133306	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5132669	1					
ANR	5133307	Condition	! SEEVALUE && ! ISQUIET	1272:6:30482:30502	5132669	0	True				
ANR	5133308	AndExpression	! SEEVALUE && ! ISQUIET		5132669	0		&&			
ANR	5133309	UnaryOperationExpression	! SEEVALUE		5132669	0					
ANR	5133310	UnaryOperator	!		5132669	0					
ANR	5133311	Identifier	SEEVALUE		5132669	1					
ANR	5133312	UnaryOperationExpression	! ISQUIET		5132669	1					
ANR	5133313	UnaryOperator	!		5132669	0					
ANR	5133314	Identifier	ISQUIET		5132669	1					
ANR	5133315	CompoundStatement		76:29:2310:2310	5132669	1					
ANR	5133316	Statement	p	1273:3:30510:30510	5132669	0	True				
ANR	5133317	Statement	->	1273:4:30511:30512	5132669	1	True				
ANR	5133318	Statement	cb_printf	1273:6:30513:30521	5132669	2	True				
ANR	5133319	Statement	(	1273:16:30523:30523	5132669	3	True				
ANR	5133320	Statement	"""0x%08"""	1273:17:30524:30530	5132669	4	True				
ANR	5133321	Statement	PFMT64x	1273:25:30532:30538	5132669	5	True				
ANR	5133322	Statement	""" = %s"""	1273:33:30540:30546	5132669	6	True				
ANR	5133323	Statement	","	1273:40:30547:30547	5132669	7	True				
ANR	5133324	Statement	seeki	1273:42:30549:30553	5132669	8	True				
ANR	5133325	Statement	","	1273:47:30554:30554	5132669	9	True				
ANR	5133326	Statement	overflow	1273:49:30556:30563	5132669	10	True				
ANR	5133327	Statement	?	1273:58:30565:30565	5132669	11	True				
ANR	5133328	Statement	"""ovf """	1273:60:30567:30572	5132669	12	True				
ANR	5133329	Statement	:	1273:67:30574:30574	5132669	13	True				
ANR	5133330	Statement	""""""	1273:69:30576:30577	5132669	14	True				
ANR	5133331	Statement	)	1273:71:30578:30578	5132669	15	True				
ANR	5133332	ExpressionStatement		1273:72:30579:30579	5132669	16	True				
ANR	5133333	ExpressionStatement	"p -> cb_printf ( ""\\"""" )"	1275:2:30587:30606	5132669	2	True				
ANR	5133334	CallExpression	"p -> cb_printf ( ""\\"""" )"		5132669	0					
ANR	5133335	Callee	p -> cb_printf		5132669	0					
ANR	5133336	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133337	Identifier	p		5132669	0					
ANR	5133338	Identifier	cb_printf		5132669	1					
ANR	5133339	ArgumentList	"""\\"""""		5132669	1					
ANR	5133340	Argument	"""\\"""""		5132669	0					
ANR	5133341	PrimaryExpression	"""\\"""""		5132669	0					
ANR	5133342	ForStatement	for ( ; j < len && ( ( size == - 1 || size -- > 0 ) && buf [ j ] ) ; j ++ )		5132669	3					
ANR	5133343	Condition	j < len && ( ( size == - 1 || size -- > 0 ) && buf [ j ] )	1276:9:30617:30665	5132669	0	True				
ANR	5133344	AndExpression	j < len && ( ( size == - 1 || size -- > 0 ) && buf [ j ] )		5132669	0		&&			
ANR	5133345	RelationalExpression	j < len		5132669	0		<			
ANR	5133346	Identifier	j		5132669	0					
ANR	5133347	Identifier	len		5132669	1					
ANR	5133348	AndExpression	( size == - 1 || size -- > 0 ) && buf [ j ]		5132669	1		&&			
ANR	5133349	OrExpression	size == - 1 || size -- > 0		5132669	0		||			
ANR	5133350	EqualityExpression	size == - 1		5132669	0		==			
ANR	5133351	Identifier	size		5132669	0					
ANR	5133352	UnaryOperationExpression	- 1		5132669	1					
ANR	5133353	UnaryOperator	-		5132669	0					
ANR	5133354	PrimaryExpression	1		5132669	1					
ANR	5133355	RelationalExpression	size -- > 0		5132669	1		>			
ANR	5133356	PostIncDecOperationExpression	size --		5132669	0					
ANR	5133357	Identifier	size		5132669	0					
ANR	5133358	IncDec	--		5132669	1					
ANR	5133359	PrimaryExpression	0		5132669	1					
ANR	5133360	ArrayIndexing	buf [ j ]		5132669	1					
ANR	5133361	Identifier	buf		5132669	0					
ANR	5133362	Identifier	j		5132669	1					
ANR	5133363	PostIncDecOperationExpression	j ++	1276:61:30669:30671	5132669	1	True				
ANR	5133364	Identifier	j		5132669	0					
ANR	5133365	IncDec	++		5132669	1					
ANR	5133366	CompoundStatement		82:3:2512:2531	5132669	2					
ANR	5133367	IdentifierDeclStatement	char esc_str [ 5 ] = { 0 } ;	1277:3:30679:30702	5132669	0	True				
ANR	5133368	IdentifierDecl	esc_str [ 5 ] = { 0 }		5132669	0					
ANR	5133369	IdentifierDeclType	char [ 5 ]		5132669	0					
ANR	5133370	Identifier	esc_str		5132669	1					
ANR	5133371	PrimaryExpression	5		5132669	2					
ANR	5133372	AssignmentExpression	esc_str [ 5 ] = { 0 }		5132669	3		=			
ANR	5133373	Identifier	esc_str		5132669	0					
ANR	5133374	InitializerList	0		5132669	1					
ANR	5133375	PrimaryExpression	0		5132669	0					
ANR	5133376	IdentifierDeclStatement	char * ptr = esc_str ;	1278:3:30707:30726	5132669	1	True				
ANR	5133377	IdentifierDecl	* ptr = esc_str		5132669	0					
ANR	5133378	IdentifierDeclType	char *		5132669	0					
ANR	5133379	Identifier	ptr		5132669	1					
ANR	5133380	AssignmentExpression	* ptr = esc_str		5132669	2		=			
ANR	5133381	Identifier	esc_str		5132669	0					
ANR	5133382	Identifier	esc_str		5132669	1					
ANR	5133383	ExpressionStatement	"r_print_byte_escape ( p , ( char * ) & buf [ j ] , & ptr , false )"	1279:3:30731:30784	5132669	2	True				
ANR	5133384	CallExpression	"r_print_byte_escape ( p , ( char * ) & buf [ j ] , & ptr , false )"		5132669	0					
ANR	5133385	Callee	r_print_byte_escape		5132669	0					
ANR	5133386	Identifier	r_print_byte_escape		5132669	0					
ANR	5133387	ArgumentList	p		5132669	1					
ANR	5133388	Argument	p		5132669	0					
ANR	5133389	Identifier	p		5132669	0					
ANR	5133390	Argument	( char * ) & buf [ j ]		5132669	1					
ANR	5133391	CastExpression	( char * ) & buf [ j ]		5132669	0					
ANR	5133392	CastTarget	char *		5132669	0					
ANR	5133393	UnaryOperationExpression	& buf [ j ]		5132669	1					
ANR	5133394	UnaryOperator	&		5132669	0					
ANR	5133395	ArrayIndexing	buf [ j ]		5132669	1					
ANR	5133396	Identifier	buf		5132669	0					
ANR	5133397	Identifier	j		5132669	1					
ANR	5133398	Argument	& ptr		5132669	2					
ANR	5133399	UnaryOperationExpression	& ptr		5132669	0					
ANR	5133400	UnaryOperator	&		5132669	0					
ANR	5133401	Identifier	ptr		5132669	1					
ANR	5133402	Argument	false		5132669	3					
ANR	5133403	Identifier	false		5132669	0					
ANR	5133404	ExpressionStatement	"p -> cb_printf ( ""%s"" , esc_str )"	1280:3:30789:30817	5132669	3	True				
ANR	5133405	CallExpression	"p -> cb_printf ( ""%s"" , esc_str )"		5132669	0					
ANR	5133406	Callee	p -> cb_printf		5132669	0					
ANR	5133407	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133408	Identifier	p		5132669	0					
ANR	5133409	Identifier	cb_printf		5132669	1					
ANR	5133410	ArgumentList	"""%s"""		5132669	1					
ANR	5133411	Argument	"""%s"""		5132669	0					
ANR	5133412	PrimaryExpression	"""%s"""		5132669	0					
ANR	5133413	Argument	esc_str		5132669	1					
ANR	5133414	Identifier	esc_str		5132669	0					
ANR	5133415	ExpressionStatement	"p -> cb_printf ( ""\\"""" )"	1282:2:30825:30844	5132669	4	True				
ANR	5133416	CallExpression	"p -> cb_printf ( ""\\"""" )"		5132669	0					
ANR	5133417	Callee	p -> cb_printf		5132669	0					
ANR	5133418	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133419	Identifier	p		5132669	0					
ANR	5133420	Identifier	cb_printf		5132669	1					
ANR	5133421	ArgumentList	"""\\"""""		5132669	1					
ANR	5133422	Argument	"""\\"""""		5132669	0					
ANR	5133423	PrimaryExpression	"""\\"""""		5132669	0					
ANR	5133424	ElseStatement	else		5132669	0					
ANR	5133425	IfStatement	if ( MUSTSEEJSON )		5132669	0					
ANR	5133426	Condition	MUSTSEEJSON	1283:12:30858:30868	5132669	0	True				
ANR	5133427	Identifier	MUSTSEEJSON		5132669	0					
ANR	5133428	CompoundStatement		88:2:2680:2708	5132669	1					
ANR	5133429	IdentifierDeclStatement	char * utf_encoded_buf = NULL ;	1284:2:30875:30903	5132669	0	True				
ANR	5133430	IdentifierDecl	* utf_encoded_buf = NULL		5132669	0					
ANR	5133431	IdentifierDeclType	char *		5132669	0					
ANR	5133432	Identifier	utf_encoded_buf		5132669	1					
ANR	5133433	AssignmentExpression	* utf_encoded_buf = NULL		5132669	2		=			
ANR	5133434	Identifier	NULL		5132669	0					
ANR	5133435	Identifier	NULL		5132669	1					
ANR	5133436	ExpressionStatement	"p -> cb_printf ( ""\\"""" )"	1285:2:30907:30926	5132669	1	True				
ANR	5133437	CallExpression	"p -> cb_printf ( ""\\"""" )"		5132669	0					
ANR	5133438	Callee	p -> cb_printf		5132669	0					
ANR	5133439	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133440	Identifier	p		5132669	0					
ANR	5133441	Identifier	cb_printf		5132669	1					
ANR	5133442	ArgumentList	"""\\"""""		5132669	1					
ANR	5133443	Argument	"""\\"""""		5132669	0					
ANR	5133444	PrimaryExpression	"""\\"""""		5132669	0					
ANR	5133445	ExpressionStatement	"utf_encoded_buf = r_str_escape_utf8_for_json ( ( char * ) buf + i , size == - 1 ? str_len : R_MIN ( size , str_len ) )"	1286:2:30930:31045	5132669	2	True				
ANR	5133446	AssignmentExpression	"utf_encoded_buf = r_str_escape_utf8_for_json ( ( char * ) buf + i , size == - 1 ? str_len : R_MIN ( size , str_len ) )"		5132669	0		=			
ANR	5133447	Identifier	utf_encoded_buf		5132669	0					
ANR	5133448	CallExpression	"r_str_escape_utf8_for_json ( ( char * ) buf + i , size == - 1 ? str_len : R_MIN ( size , str_len ) )"		5132669	1					
ANR	5133449	Callee	r_str_escape_utf8_for_json		5132669	0					
ANR	5133450	Identifier	r_str_escape_utf8_for_json		5132669	0					
ANR	5133451	ArgumentList	( char * ) buf + i		5132669	1					
ANR	5133452	Argument	( char * ) buf + i		5132669	0					
ANR	5133453	AdditiveExpression	( char * ) buf + i		5132669	0		+			
ANR	5133454	CastExpression	( char * ) buf		5132669	0					
ANR	5133455	CastTarget	char *		5132669	0					
ANR	5133456	Identifier	buf		5132669	1					
ANR	5133457	Identifier	i		5132669	1					
ANR	5133458	Argument	"size == - 1 ? str_len : R_MIN ( size , str_len )"		5132669	1					
ANR	5133459	ConditionalExpression	"size == - 1 ? str_len : R_MIN ( size , str_len )"		5132669	0					
ANR	5133460	Condition	size == - 1		5132669	0					
ANR	5133461	EqualityExpression	size == - 1		5132669	0		==			
ANR	5133462	Identifier	size		5132669	0					
ANR	5133463	UnaryOperationExpression	- 1		5132669	1					
ANR	5133464	UnaryOperator	-		5132669	0					
ANR	5133465	PrimaryExpression	1		5132669	1					
ANR	5133466	Identifier	str_len		5132669	1					
ANR	5133467	CallExpression	"R_MIN ( size , str_len )"		5132669	2					
ANR	5133468	Callee	R_MIN		5132669	0					
ANR	5133469	Identifier	R_MIN		5132669	0					
ANR	5133470	ArgumentList	size		5132669	1					
ANR	5133471	Argument	size		5132669	0					
ANR	5133472	Identifier	size		5132669	0					
ANR	5133473	Argument	str_len		5132669	1					
ANR	5133474	Identifier	str_len		5132669	0					
ANR	5133475	IfStatement	if ( utf_encoded_buf )		5132669	3					
ANR	5133476	Condition	utf_encoded_buf	1288:6:31053:31067	5132669	0	True				
ANR	5133477	Identifier	utf_encoded_buf		5132669	0					
ANR	5133478	CompoundStatement		92:22:2874:2874	5132669	1					
ANR	5133479	ExpressionStatement	"p -> cb_printf ( ""%s"" , utf_encoded_buf )"	1289:3:31074:31110	5132669	0	True				
ANR	5133480	CallExpression	"p -> cb_printf ( ""%s"" , utf_encoded_buf )"		5132669	0					
ANR	5133481	Callee	p -> cb_printf		5132669	0					
ANR	5133482	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133483	Identifier	p		5132669	0					
ANR	5133484	Identifier	cb_printf		5132669	1					
ANR	5133485	ArgumentList	"""%s"""		5132669	1					
ANR	5133486	Argument	"""%s"""		5132669	0					
ANR	5133487	PrimaryExpression	"""%s"""		5132669	0					
ANR	5133488	Argument	utf_encoded_buf		5132669	1					
ANR	5133489	Identifier	utf_encoded_buf		5132669	0					
ANR	5133490	ExpressionStatement	free ( utf_encoded_buf )	1290:3:31115:31137	5132669	1	True				
ANR	5133491	CallExpression	free ( utf_encoded_buf )		5132669	0					
ANR	5133492	Callee	free		5132669	0					
ANR	5133493	Identifier	free		5132669	0					
ANR	5133494	ArgumentList	utf_encoded_buf		5132669	1					
ANR	5133495	Argument	utf_encoded_buf		5132669	0					
ANR	5133496	Identifier	utf_encoded_buf		5132669	0					
ANR	5133497	ExpressionStatement	"p -> cb_printf ( ""\\"""" )"	1292:2:31145:31164	5132669	4	True				
ANR	5133498	CallExpression	"p -> cb_printf ( ""\\"""" )"		5132669	0					
ANR	5133499	Callee	p -> cb_printf		5132669	0					
ANR	5133500	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133501	Identifier	p		5132669	0					
ANR	5133502	Identifier	cb_printf		5132669	1					
ANR	5133503	ArgumentList	"""\\"""""		5132669	1					
ANR	5133504	Argument	"""\\"""""		5132669	0					
ANR	5133505	PrimaryExpression	"""\\"""""		5132669	0					
ANR	5133506	IfStatement	if ( overflow )		5132669	5					
ANR	5133507	Condition	overflow	1293:6:31172:31179	5132669	0	True				
ANR	5133508	Identifier	overflow		5132669	0					
ANR	5133509	CompoundStatement		97:16:2987:2987	5132669	1					
ANR	5133510	ExpressionStatement	"p -> cb_printf ( "",\\""overflow\\"":true"" )"	1294:3:31187:31222	5132669	0	True				
ANR	5133511	CallExpression	"p -> cb_printf ( "",\\""overflow\\"":true"" )"		5132669	0					
ANR	5133512	Callee	p -> cb_printf		5132669	0					
ANR	5133513	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133514	Identifier	p		5132669	0					
ANR	5133515	Identifier	cb_printf		5132669	1					
ANR	5133516	ArgumentList	""",\\""overflow\\"":true"""		5132669	1					
ANR	5133517	Argument	""",\\""overflow\\"":true"""		5132669	0					
ANR	5133518	PrimaryExpression	""",\\""overflow\\"":true"""		5132669	0					
ANR	5133519	ExpressionStatement	"p -> cb_printf ( ""}"" )"	1296:2:31230:31248	5132669	6	True				
ANR	5133520	CallExpression	"p -> cb_printf ( ""}"" )"		5132669	0					
ANR	5133521	Callee	p -> cb_printf		5132669	0					
ANR	5133522	PtrMemberAccess	p -> cb_printf		5132669	0					
ANR	5133523	Identifier	p		5132669	0					
ANR	5133524	Identifier	cb_printf		5132669	1					
ANR	5133525	ArgumentList	"""}"""		5132669	1					
ANR	5133526	Argument	"""}"""		5132669	0					
ANR	5133527	PrimaryExpression	"""}"""		5132669	0					
ANR	5133528	ReturnType	static void		5132669	1					
ANR	5133529	Identifier	r_print_format_nulltermstring		5132669	2					
ANR	5133530	ParameterList	"const RPrint * p , int len , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5132669	3					
ANR	5133531	Parameter	const RPrint * p	1196:42:28085:28099	5132669	0	True				
ANR	5133532	ParameterType	const RPrint *		5132669	0					
ANR	5133533	Identifier	p		5132669	1					
ANR	5133534	Parameter	int len	1196:59:28102:28108	5132669	1	True				
ANR	5133535	ParameterType	int		5132669	0					
ANR	5133536	Identifier	len		5132669	1					
ANR	5133537	Parameter	int endian	1196:68:28111:28120	5132669	2	True				
ANR	5133538	ParameterType	int		5132669	0					
ANR	5133539	Identifier	endian		5132669	1					
ANR	5133540	Parameter	int mode	1196:80:28123:28130	5132669	3	True				
ANR	5133541	ParameterType	int		5132669	0					
ANR	5133542	Identifier	mode		5132669	1					
ANR	5133543	Parameter	const char * setval	1197:2:28135:28152	5132669	4	True				
ANR	5133544	ParameterType	const char *		5132669	0					
ANR	5133545	Identifier	setval		5132669	1					
ANR	5133546	Parameter	ut64 seeki	1197:22:28155:28164	5132669	5	True				
ANR	5133547	ParameterType	ut64		5132669	0					
ANR	5133548	Identifier	seeki		5132669	1					
ANR	5133549	Parameter	ut8 * buf	1197:34:28167:28174	5132669	6	True				
ANR	5133550	ParameterType	ut8 *		5132669	0					
ANR	5133551	Identifier	buf		5132669	1					
ANR	5133552	Parameter	int i	1197:44:28177:28181	5132669	7	True				
ANR	5133553	ParameterType	int		5132669	0					
ANR	5133554	Identifier	i		5132669	1					
ANR	5133555	Parameter	int size	1197:51:28184:28191	5132669	8	True				
ANR	5133556	ParameterType	int		5132669	0					
ANR	5133557	Identifier	size		5132669	1					
ANR	5133558	CFGEntryNode	ENTRY		5132669		True				
ANR	5133559	CFGExitNode	EXIT		5132669		True				
ANR	5133560	Symbol	p -> iob . read_at		5132669						
ANR	5133561	Symbol	IS_PRINTABLE		5132669						
ANR	5133562	Symbol	p -> iob . map_get_paddr		5132669						
ANR	5133563	Symbol	* map		5132669						
ANR	5133564	Symbol	endian		5132669						
ANR	5133565	Symbol	& ch		5132669						
ANR	5133566	Symbol	MUSTSEE		5132669						
ANR	5133567	Symbol	p -> iob . io		5132669						
ANR	5133568	Symbol	mode		5132669						
ANR	5133569	Symbol	p -> iob . io -> va		5132669						
ANR	5133570	Symbol	strlen		5132669						
ANR	5133571	Symbol	overflow		5132669						
ANR	5133572	Symbol	len		5132669						
ANR	5133573	Symbol	* vallen		5132669						
ANR	5133574	Symbol	buflen		5132669						
ANR	5133575	Symbol	R_PRINT_FLAGS_UNALLOC		5132669						
ANR	5133576	Symbol	MUSTSET		5132669						
ANR	5133577	Symbol	* buf		5132669						
ANR	5133578	Symbol	NULL		5132669						
ANR	5133579	Symbol	p -> iob . is_valid_offset		5132669						
ANR	5133580	Symbol	MUSTSEESTRUCT		5132669						
ANR	5133581	Symbol	p -> iob . io -> cached		5132669						
ANR	5133582	Symbol	newstring		5132669						
ANR	5133583	Symbol	vallen		5132669						
ANR	5133584	Symbol	p -> iob		5132669						
ANR	5133585	Symbol	size		5132669						
ANR	5133586	Symbol	p -> iob . map_get		5132669						
ANR	5133587	Symbol	map -> perm		5132669						
ANR	5133588	Symbol	map -> itv		5132669						
ANR	5133589	Symbol	ISQUIET		5132669						
ANR	5133590	Symbol	map -> delta		5132669						
ANR	5133591	Symbol	& ptr		5132669						
ANR	5133592	Symbol	str_len		5132669						
ANR	5133593	Symbol	esc_str		5132669						
ANR	5133594	Symbol	R_PERM_R		5132669						
ANR	5133595	Symbol	SEEVALUE		5132669						
ANR	5133596	Symbol	R_PRINT_DOT		5132669						
ANR	5133597	Symbol	* p -> iob		5132669						
ANR	5133598	Symbol	total_map_left		5132669						
ANR	5133599	Symbol	* * p		5132669						
ANR	5133600	Symbol	map -> itv . addr		5132669						
ANR	5133601	Symbol	addr		5132669						
ANR	5133602	Symbol	UT64_MAX		5132669						
ANR	5133603	Symbol	map		5132669						
ANR	5133604	Symbol	MUSTSEEJSON		5132669						
ANR	5133605	Symbol	ch		5132669						
ANR	5133606	Symbol	* p -> iob . io		5132669						
ANR	5133607	Symbol	r_str_nlen		5132669						
ANR	5133608	Symbol	false		5132669						
ANR	5133609	Symbol	i		5132669						
ANR	5133610	Symbol	j		5132669						
ANR	5133611	Symbol	utf_encoded_buf		5132669						
ANR	5133612	Symbol	R_MIN		5132669						
ANR	5133613	Symbol	r_str_escape_utf8_for_json		5132669						
ANR	5133614	Symbol	ptr		5132669						
ANR	5133615	Symbol	p		5132669						
ANR	5133616	Symbol	buf		5132669						
ANR	5133617	Symbol	map -> itv . size		5132669						
ANR	5133618	Symbol	* i		5132669						
ANR	5133619	Symbol	* j		5132669						
ANR	5133620	Symbol	seeki		5132669						
ANR	5133621	Symbol	ons		5132669						
ANR	5133622	Symbol	* newstring		5132669						
ANR	5133623	Symbol	p -> flags		5132669						
ANR	5133624	Symbol	* p		5132669						
ANR	5133625	Symbol	strdup		5132669						
ANR	5133626	Symbol	setval		5132669						
ANR	5133627	Function	r_print_format_nulltermwidestring	1300:0:31256:32506							
ANR	5133628	FunctionDef	"r_print_format_nulltermwidestring (const RPrint * p , const int len , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size)"		5133627	0					
ANR	5133629	CompoundStatement		1301:61:31417:32506	5133627	0					
ANR	5133630	IfStatement	if ( MUSTSET )		5133627	0					
ANR	5133631	Condition	MUSTSET	1302:5:31424:31430	5133627	0	True				
ANR	5133632	Identifier	MUSTSET		5133627	0					
ANR	5133633	CompoundStatement		4:2:50:71	5133627	1					
ANR	5133634	IdentifierDeclStatement	int vallen = strlen ( setval ) ;	1303:2:31437:31464	5133627	0	True				
ANR	5133635	IdentifierDecl	vallen = strlen ( setval )		5133627	0					
ANR	5133636	IdentifierDeclType	int		5133627	0					
ANR	5133637	Identifier	vallen		5133627	1					
ANR	5133638	AssignmentExpression	vallen = strlen ( setval )		5133627	2		=			
ANR	5133639	Identifier	vallen		5133627	0					
ANR	5133640	CallExpression	strlen ( setval )		5133627	1					
ANR	5133641	Callee	strlen		5133627	0					
ANR	5133642	Identifier	strlen		5133627	0					
ANR	5133643	ArgumentList	setval		5133627	1					
ANR	5133644	Argument	setval		5133627	0					
ANR	5133645	Identifier	setval		5133627	0					
ANR	5133646	IdentifierDeclStatement	"char * newstring , * ons ;"	1304:2:31468:31489	5133627	1	True				
ANR	5133647	IdentifierDecl	* newstring		5133627	0					
ANR	5133648	IdentifierDeclType	char *		5133627	0					
ANR	5133649	Identifier	newstring		5133627	1					
ANR	5133650	IdentifierDecl	* ons		5133627	1					
ANR	5133651	IdentifierDeclType	char *		5133627	0					
ANR	5133652	Identifier	ons		5133627	1					
ANR	5133653	ExpressionStatement	newstring = ons = strdup ( setval )	1305:2:31493:31525	5133627	2	True				
ANR	5133654	AssignmentExpression	newstring = ons = strdup ( setval )		5133627	0		=			
ANR	5133655	Identifier	newstring		5133627	0					
ANR	5133656	AssignmentExpression	ons = strdup ( setval )		5133627	1		=			
ANR	5133657	Identifier	ons		5133627	0					
ANR	5133658	CallExpression	strdup ( setval )		5133627	1					
ANR	5133659	Callee	strdup		5133627	0					
ANR	5133660	Identifier	strdup		5133627	0					
ANR	5133661	ArgumentList	setval		5133627	1					
ANR	5133662	Argument	setval		5133627	0					
ANR	5133663	Identifier	setval		5133627	0					
ANR	5133664	IfStatement	"if ( ( newstring [ 0 ] == '\\""' && newstring [ vallen - 1 ] == '\\""' ) || ( newstring [ 0 ] == '\\'' && newstring [ vallen - 1 ] == '\\'' ) )"		5133627	3					
ANR	5133665	Condition	"( newstring [ 0 ] == '\\""' && newstring [ vallen - 1 ] == '\\""' ) || ( newstring [ 0 ] == '\\'' && newstring [ vallen - 1 ] == '\\'' )"	1306:6:31533:31646	5133627	0	True				
ANR	5133666	OrExpression	"( newstring [ 0 ] == '\\""' && newstring [ vallen - 1 ] == '\\""' ) || ( newstring [ 0 ] == '\\'' && newstring [ vallen - 1 ] == '\\'' )"		5133627	0		||			
ANR	5133667	AndExpression	"newstring [ 0 ] == '\\""' && newstring [ vallen - 1 ] == '\\""'"		5133627	0		&&			
ANR	5133668	EqualityExpression	"newstring [ 0 ] == '\\""'"		5133627	0		==			
ANR	5133669	ArrayIndexing	newstring [ 0 ]		5133627	0					
ANR	5133670	Identifier	newstring		5133627	0					
ANR	5133671	PrimaryExpression	0		5133627	1					
ANR	5133672	PrimaryExpression	"'\\""'"		5133627	1					
ANR	5133673	EqualityExpression	"newstring [ vallen - 1 ] == '\\""'"		5133627	1		==			
ANR	5133674	ArrayIndexing	newstring [ vallen - 1 ]		5133627	0					
ANR	5133675	Identifier	newstring		5133627	0					
ANR	5133676	AdditiveExpression	vallen - 1		5133627	1		-			
ANR	5133677	Identifier	vallen		5133627	0					
ANR	5133678	PrimaryExpression	1		5133627	1					
ANR	5133679	PrimaryExpression	"'\\""'"		5133627	1					
ANR	5133680	AndExpression	newstring [ 0 ] == '\\'' && newstring [ vallen - 1 ] == '\\''		5133627	1		&&			
ANR	5133681	EqualityExpression	newstring [ 0 ] == '\\''		5133627	0		==			
ANR	5133682	ArrayIndexing	newstring [ 0 ]		5133627	0					
ANR	5133683	Identifier	newstring		5133627	0					
ANR	5133684	PrimaryExpression	0		5133627	1					
ANR	5133685	PrimaryExpression	'\\''		5133627	1					
ANR	5133686	EqualityExpression	newstring [ vallen - 1 ] == '\\''		5133627	1		==			
ANR	5133687	ArrayIndexing	newstring [ vallen - 1 ]		5133627	0					
ANR	5133688	Identifier	newstring		5133627	0					
ANR	5133689	AdditiveExpression	vallen - 1		5133627	1		-			
ANR	5133690	Identifier	vallen		5133627	0					
ANR	5133691	PrimaryExpression	1		5133627	1					
ANR	5133692	PrimaryExpression	'\\''		5133627	1					
ANR	5133693	CompoundStatement		7:62:231:231	5133627	1					
ANR	5133694	ExpressionStatement	newstring [ vallen - 1 ] = '\\0'	1308:3:31654:31682	5133627	0	True				
ANR	5133695	AssignmentExpression	newstring [ vallen - 1 ] = '\\0'		5133627	0		=			
ANR	5133696	ArrayIndexing	newstring [ vallen - 1 ]		5133627	0					
ANR	5133697	Identifier	newstring		5133627	0					
ANR	5133698	AdditiveExpression	vallen - 1		5133627	1		-			
ANR	5133699	Identifier	vallen		5133627	0					
ANR	5133700	PrimaryExpression	1		5133627	1					
ANR	5133701	PrimaryExpression	'\\0'		5133627	1					
ANR	5133702	ExpressionStatement	newstring ++	1309:3:31687:31698	5133627	1	True				
ANR	5133703	PostIncDecOperationExpression	newstring ++		5133627	0					
ANR	5133704	Identifier	newstring		5133627	0					
ANR	5133705	IncDec	++		5133627	1					
ANR	5133706	ExpressionStatement	vallen -= 2	1310:3:31703:31714	5133627	2	True				
ANR	5133707	AssignmentExpression	vallen -= 2		5133627	0		-=			
ANR	5133708	Identifier	vallen		5133627	0					
ANR	5133709	PrimaryExpression	2		5133627	1					
ANR	5133710	IfStatement	if ( ( size = vallen ) > r_wstr_clen ( ( char * ) ( buf + seeki ) ) )		5133627	4					
ANR	5133711	Condition	( size = vallen ) > r_wstr_clen ( ( char * ) ( buf + seeki ) )	1312:6:31726:31774	5133627	0	True				
ANR	5133712	RelationalExpression	( size = vallen ) > r_wstr_clen ( ( char * ) ( buf + seeki ) )		5133627	0		>			
ANR	5133713	AssignmentExpression	size = vallen		5133627	0		=			
ANR	5133714	Identifier	size		5133627	0					
ANR	5133715	Identifier	vallen		5133627	1					
ANR	5133716	CallExpression	r_wstr_clen ( ( char * ) ( buf + seeki ) )		5133627	1					
ANR	5133717	Callee	r_wstr_clen		5133627	0					
ANR	5133718	Identifier	r_wstr_clen		5133627	0					
ANR	5133719	ArgumentList	( char * ) ( buf + seeki )		5133627	1					
ANR	5133720	Argument	( char * ) ( buf + seeki )		5133627	0					
ANR	5133721	CastExpression	( char * ) ( buf + seeki )		5133627	0					
ANR	5133722	CastTarget	char *		5133627	0					
ANR	5133723	AdditiveExpression	buf + seeki		5133627	1		+			
ANR	5133724	Identifier	buf		5133627	0					
ANR	5133725	Identifier	seeki		5133627	1					
ANR	5133726	CompoundStatement		12:57:359:359	5133627	1					
ANR	5133727	ExpressionStatement	"eprintf ( ""Warning: new string is longer than previous one\\n"" )"	1313:3:31782:31843	5133627	0	True				
ANR	5133728	CallExpression	"eprintf ( ""Warning: new string is longer than previous one\\n"" )"		5133627	0					
ANR	5133729	Callee	eprintf		5133627	0					
ANR	5133730	Identifier	eprintf		5133627	0					
ANR	5133731	ArgumentList	"""Warning: new string is longer than previous one\\n"""		5133627	1					
ANR	5133732	Argument	"""Warning: new string is longer than previous one\\n"""		5133627	0					
ANR	5133733	PrimaryExpression	"""Warning: new string is longer than previous one\\n"""		5133627	0					
ANR	5133734	Statement	p	1315:2:31851:31851	5133627	5	True				
ANR	5133735	Statement	->	1315:3:31852:31853	5133627	6	True				
ANR	5133736	Statement	cb_printf	1315:5:31854:31862	5133627	7	True				
ANR	5133737	Statement	(	1315:15:31864:31864	5133627	8	True				
ANR	5133738	Statement	"""ww %s @ 0x%08"""	1315:16:31865:31879	5133627	9	True				
ANR	5133739	Statement	PFMT64x	1315:31:31880:31886	5133627	10	True				
ANR	5133740	Statement	"""\\n"""	1315:38:31887:31890	5133627	11	True				
ANR	5133741	Statement	","	1315:42:31891:31891	5133627	12	True				
ANR	5133742	Statement	newstring	1315:44:31893:31901	5133627	13	True				
ANR	5133743	Statement	","	1315:53:31902:31902	5133627	14	True				
ANR	5133744	Statement	seeki	1315:55:31904:31908	5133627	15	True				
ANR	5133745	Statement	)	1315:60:31909:31909	5133627	16	True				
ANR	5133746	ExpressionStatement		1315:61:31910:31910	5133627	17	True				
ANR	5133747	ExpressionStatement	free ( ons )	1316:2:31914:31923	5133627	18	True				
ANR	5133748	CallExpression	free ( ons )		5133627	0					
ANR	5133749	Callee	free		5133627	0					
ANR	5133750	Identifier	free		5133627	0					
ANR	5133751	ArgumentList	ons		5133627	1					
ANR	5133752	Argument	ons		5133627	0					
ANR	5133753	Identifier	ons		5133627	0					
ANR	5133754	ElseStatement	else		5133627	0					
ANR	5133755	IfStatement	if ( MUSTSEE )		5133627	0					
ANR	5133756	Condition	MUSTSEE	1317:12:31937:31943	5133627	0	True				
ANR	5133757	Identifier	MUSTSEE		5133627	0					
ANR	5133758	CompoundStatement		18:2:532:541	5133627	1					
ANR	5133759	IdentifierDeclStatement	int j = i ;	1318:2:31950:31959	5133627	0	True				
ANR	5133760	IdentifierDecl	j = i		5133627	0					
ANR	5133761	IdentifierDeclType	int		5133627	0					
ANR	5133762	Identifier	j		5133627	1					
ANR	5133763	AssignmentExpression	j = i		5133627	2		=			
ANR	5133764	Identifier	i		5133627	0					
ANR	5133765	Identifier	i		5133627	1					
ANR	5133766	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5133627	1					
ANR	5133767	Condition	! SEEVALUE && ! ISQUIET	1319:6:31967:31987	5133627	0	True				
ANR	5133768	AndExpression	! SEEVALUE && ! ISQUIET		5133627	0		&&			
ANR	5133769	UnaryOperationExpression	! SEEVALUE		5133627	0					
ANR	5133770	UnaryOperator	!		5133627	0					
ANR	5133771	Identifier	SEEVALUE		5133627	1					
ANR	5133772	UnaryOperationExpression	! ISQUIET		5133627	1					
ANR	5133773	UnaryOperator	!		5133627	0					
ANR	5133774	Identifier	ISQUIET		5133627	1					
ANR	5133775	CompoundStatement		19:29:572:572	5133627	1					
ANR	5133776	Statement	p	1320:3:31995:31995	5133627	0	True				
ANR	5133777	Statement	->	1320:4:31996:31997	5133627	1	True				
ANR	5133778	Statement	cb_printf	1320:6:31998:32006	5133627	2	True				
ANR	5133779	Statement	(	1320:16:32008:32008	5133627	3	True				
ANR	5133780	Statement	"""0x%08"""	1320:17:32009:32015	5133627	4	True				
ANR	5133781	Statement	PFMT64x	1320:24:32016:32022	5133627	5	True				
ANR	5133782	Statement	""" = """	1320:31:32023:32027	5133627	6	True				
ANR	5133783	Statement	","	1320:36:32028:32028	5133627	7	True				
ANR	5133784	Statement	seeki	1320:38:32030:32034	5133627	8	True				
ANR	5133785	Statement	)	1320:43:32035:32035	5133627	9	True				
ANR	5133786	ExpressionStatement		1320:44:32036:32036	5133627	10	True				
ANR	5133787	ForStatement	for ( ; j < len && ( ( size == - 1 || size -- > 0 ) && buf [ j ] ) ; j += 2 )		5133627	2					
ANR	5133788	Condition	j < len && ( ( size == - 1 || size -- > 0 ) && buf [ j ] )	1322:9:32051:32093	5133627	0	True				
ANR	5133789	AndExpression	j < len && ( ( size == - 1 || size -- > 0 ) && buf [ j ] )		5133627	0		&&			
ANR	5133790	RelationalExpression	j < len		5133627	0		<			
ANR	5133791	Identifier	j		5133627	0					
ANR	5133792	Identifier	len		5133627	1					
ANR	5133793	AndExpression	( size == - 1 || size -- > 0 ) && buf [ j ]		5133627	1		&&			
ANR	5133794	OrExpression	size == - 1 || size -- > 0		5133627	0		||			
ANR	5133795	EqualityExpression	size == - 1		5133627	0		==			
ANR	5133796	Identifier	size		5133627	0					
ANR	5133797	UnaryOperationExpression	- 1		5133627	1					
ANR	5133798	UnaryOperator	-		5133627	0					
ANR	5133799	PrimaryExpression	1		5133627	1					
ANR	5133800	RelationalExpression	size -- > 0		5133627	1		>			
ANR	5133801	PostIncDecOperationExpression	size --		5133627	0					
ANR	5133802	Identifier	size		5133627	0					
ANR	5133803	IncDec	--		5133627	1					
ANR	5133804	PrimaryExpression	0		5133627	1					
ANR	5133805	ArrayIndexing	buf [ j ]		5133627	1					
ANR	5133806	Identifier	buf		5133627	0					
ANR	5133807	Identifier	j		5133627	1					
ANR	5133808	AssignmentExpression	j += 2	1322:55:32097:32100	5133627	1	True	+=			
ANR	5133809	Identifier	j		5133627	0					
ANR	5133810	PrimaryExpression	2		5133627	1					
ANR	5133811	CompoundStatement		22:61:685:685	5133627	2					
ANR	5133812	IfStatement	if ( IS_PRINTABLE ( buf [ j ] ) )		5133627	0					
ANR	5133813	Condition	IS_PRINTABLE ( buf [ j ] )	1323:7:32112:32132	5133627	0	True				
ANR	5133814	CallExpression	IS_PRINTABLE ( buf [ j ] )		5133627	0					
ANR	5133815	Callee	IS_PRINTABLE		5133627	0					
ANR	5133816	Identifier	IS_PRINTABLE		5133627	0					
ANR	5133817	ArgumentList	buf [ j ]		5133627	1					
ANR	5133818	Argument	buf [ j ]		5133627	0					
ANR	5133819	ArrayIndexing	buf [ j ]		5133627	0					
ANR	5133820	Identifier	buf		5133627	0					
ANR	5133821	Identifier	j		5133627	1					
ANR	5133822	CompoundStatement		23:30:717:717	5133627	1					
ANR	5133823	ExpressionStatement	"p -> cb_printf ( ""%c"" , buf [ j ] )"	1324:4:32141:32168	5133627	0	True				
ANR	5133824	CallExpression	"p -> cb_printf ( ""%c"" , buf [ j ] )"		5133627	0					
ANR	5133825	Callee	p -> cb_printf		5133627	0					
ANR	5133826	PtrMemberAccess	p -> cb_printf		5133627	0					
ANR	5133827	Identifier	p		5133627	0					
ANR	5133828	Identifier	cb_printf		5133627	1					
ANR	5133829	ArgumentList	"""%c"""		5133627	1					
ANR	5133830	Argument	"""%c"""		5133627	0					
ANR	5133831	PrimaryExpression	"""%c"""		5133627	0					
ANR	5133832	Argument	buf [ j ]		5133627	1					
ANR	5133833	ArrayIndexing	buf [ j ]		5133627	0					
ANR	5133834	Identifier	buf		5133627	0					
ANR	5133835	Identifier	j		5133627	1					
ANR	5133836	ElseStatement	else		5133627	0					
ANR	5133837	CompoundStatement		25:10:762:762	5133627	0					
ANR	5133838	ExpressionStatement	"p -> cb_printf ( ""."" )"	1326:4:32186:32204	5133627	0	True				
ANR	5133839	CallExpression	"p -> cb_printf ( ""."" )"		5133627	0					
ANR	5133840	Callee	p -> cb_printf		5133627	0					
ANR	5133841	PtrMemberAccess	p -> cb_printf		5133627	0					
ANR	5133842	Identifier	p		5133627	0					
ANR	5133843	Identifier	cb_printf		5133627	1					
ANR	5133844	ArgumentList	"""."""		5133627	1					
ANR	5133845	Argument	"""."""		5133627	0					
ANR	5133846	PrimaryExpression	"""."""		5133627	0					
ANR	5133847	ElseStatement	else		5133627	0					
ANR	5133848	IfStatement	if ( MUSTSEEJSON )		5133627	0					
ANR	5133849	Condition	MUSTSEEJSON	1329:12:32227:32237	5133627	0	True				
ANR	5133850	Identifier	MUSTSEEJSON		5133627	0					
ANR	5133851	CompoundStatement		30:2:826:835	5133627	1					
ANR	5133852	IdentifierDeclStatement	int j = i ;	1330:2:32244:32253	5133627	0	True				
ANR	5133853	IdentifierDecl	j = i		5133627	0					
ANR	5133854	IdentifierDeclType	int		5133627	0					
ANR	5133855	Identifier	j		5133627	1					
ANR	5133856	AssignmentExpression	j = i		5133627	2		=			
ANR	5133857	Identifier	i		5133627	0					
ANR	5133858	Identifier	i		5133627	1					
ANR	5133859	ExpressionStatement	"p -> cb_printf ( ""%d,\\""string\\"":\\"""" , seeki )"	1331:2:32257:32297	5133627	1	True				
ANR	5133860	CallExpression	"p -> cb_printf ( ""%d,\\""string\\"":\\"""" , seeki )"		5133627	0					
ANR	5133861	Callee	p -> cb_printf		5133627	0					
ANR	5133862	PtrMemberAccess	p -> cb_printf		5133627	0					
ANR	5133863	Identifier	p		5133627	0					
ANR	5133864	Identifier	cb_printf		5133627	1					
ANR	5133865	ArgumentList	"""%d,\\""string\\"":\\"""""		5133627	1					
ANR	5133866	Argument	"""%d,\\""string\\"":\\"""""		5133627	0					
ANR	5133867	PrimaryExpression	"""%d,\\""string\\"":\\"""""		5133627	0					
ANR	5133868	Argument	seeki		5133627	1					
ANR	5133869	Identifier	seeki		5133627	0					
ANR	5133870	ForStatement	for ( ; j < len && ( ( size == - 1 || size -- > 0 ) && buf [ j ] ) ; j += 2 )		5133627	2					
ANR	5133871	Condition	j < len && ( ( size == - 1 || size -- > 0 ) && buf [ j ] )	1332:9:32308:32356	5133627	0	True				
ANR	5133872	AndExpression	j < len && ( ( size == - 1 || size -- > 0 ) && buf [ j ] )		5133627	0		&&			
ANR	5133873	RelationalExpression	j < len		5133627	0		<			
ANR	5133874	Identifier	j		5133627	0					
ANR	5133875	Identifier	len		5133627	1					
ANR	5133876	AndExpression	( size == - 1 || size -- > 0 ) && buf [ j ]		5133627	1		&&			
ANR	5133877	OrExpression	size == - 1 || size -- > 0		5133627	0		||			
ANR	5133878	EqualityExpression	size == - 1		5133627	0		==			
ANR	5133879	Identifier	size		5133627	0					
ANR	5133880	UnaryOperationExpression	- 1		5133627	1					
ANR	5133881	UnaryOperator	-		5133627	0					
ANR	5133882	PrimaryExpression	1		5133627	1					
ANR	5133883	RelationalExpression	size -- > 0		5133627	1		>			
ANR	5133884	PostIncDecOperationExpression	size --		5133627	0					
ANR	5133885	Identifier	size		5133627	0					
ANR	5133886	IncDec	--		5133627	1					
ANR	5133887	PrimaryExpression	0		5133627	1					
ANR	5133888	ArrayIndexing	buf [ j ]		5133627	1					
ANR	5133889	Identifier	buf		5133627	0					
ANR	5133890	Identifier	j		5133627	1					
ANR	5133891	AssignmentExpression	j += 2	1332:60:32359:32364	5133627	1	True	+=			
ANR	5133892	Identifier	j		5133627	0					
ANR	5133893	PrimaryExpression	2		5133627	1					
ANR	5133894	CompoundStatement		32:68:949:949	5133627	2					
ANR	5133895	IfStatement	if ( IS_PRINTABLE ( buf [ j ] ) )		5133627	0					
ANR	5133896	Condition	IS_PRINTABLE ( buf [ j ] )	1333:7:32376:32396	5133627	0	True				
ANR	5133897	CallExpression	IS_PRINTABLE ( buf [ j ] )		5133627	0					
ANR	5133898	Callee	IS_PRINTABLE		5133627	0					
ANR	5133899	Identifier	IS_PRINTABLE		5133627	0					
ANR	5133900	ArgumentList	buf [ j ]		5133627	1					
ANR	5133901	Argument	buf [ j ]		5133627	0					
ANR	5133902	ArrayIndexing	buf [ j ]		5133627	0					
ANR	5133903	Identifier	buf		5133627	0					
ANR	5133904	Identifier	j		5133627	1					
ANR	5133905	CompoundStatement		33:30:981:981	5133627	1					
ANR	5133906	ExpressionStatement	"p -> cb_printf ( ""%c"" , buf [ j ] )"	1334:4:32405:32432	5133627	0	True				
ANR	5133907	CallExpression	"p -> cb_printf ( ""%c"" , buf [ j ] )"		5133627	0					
ANR	5133908	Callee	p -> cb_printf		5133627	0					
ANR	5133909	PtrMemberAccess	p -> cb_printf		5133627	0					
ANR	5133910	Identifier	p		5133627	0					
ANR	5133911	Identifier	cb_printf		5133627	1					
ANR	5133912	ArgumentList	"""%c"""		5133627	1					
ANR	5133913	Argument	"""%c"""		5133627	0					
ANR	5133914	PrimaryExpression	"""%c"""		5133627	0					
ANR	5133915	Argument	buf [ j ]		5133627	1					
ANR	5133916	ArrayIndexing	buf [ j ]		5133627	0					
ANR	5133917	Identifier	buf		5133627	0					
ANR	5133918	Identifier	j		5133627	1					
ANR	5133919	ElseStatement	else		5133627	0					
ANR	5133920	CompoundStatement		35:10:1026:1026	5133627	0					
ANR	5133921	ExpressionStatement	"p -> cb_printf ( ""."" )"	1336:4:32450:32468	5133627	0	True				
ANR	5133922	CallExpression	"p -> cb_printf ( ""."" )"		5133627	0					
ANR	5133923	Callee	p -> cb_printf		5133627	0					
ANR	5133924	PtrMemberAccess	p -> cb_printf		5133627	0					
ANR	5133925	Identifier	p		5133627	0					
ANR	5133926	Identifier	cb_printf		5133627	1					
ANR	5133927	ArgumentList	"""."""		5133627	1					
ANR	5133928	Argument	"""."""		5133627	0					
ANR	5133929	PrimaryExpression	"""."""		5133627	0					
ANR	5133930	ExpressionStatement	"p -> cb_printf ( ""\\""}"" )"	1339:2:32481:32501	5133627	3	True				
ANR	5133931	CallExpression	"p -> cb_printf ( ""\\""}"" )"		5133627	0					
ANR	5133932	Callee	p -> cb_printf		5133627	0					
ANR	5133933	PtrMemberAccess	p -> cb_printf		5133627	0					
ANR	5133934	Identifier	p		5133627	0					
ANR	5133935	Identifier	cb_printf		5133627	1					
ANR	5133936	ArgumentList	"""\\""}"""		5133627	1					
ANR	5133937	Argument	"""\\""}"""		5133627	0					
ANR	5133938	PrimaryExpression	"""\\""}"""		5133627	0					
ANR	5133939	ReturnType	static void		5133627	1					
ANR	5133940	Identifier	r_print_format_nulltermwidestring		5133627	2					
ANR	5133941	ParameterList	"const RPrint * p , const int len , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int size"		5133627	3					
ANR	5133942	Parameter	const RPrint * p	1300:46:31302:31316	5133627	0	True				
ANR	5133943	ParameterType	const RPrint *		5133627	0					
ANR	5133944	Identifier	p		5133627	1					
ANR	5133945	Parameter	const int len	1300:63:31319:31331	5133627	1	True				
ANR	5133946	ParameterType	const int		5133627	0					
ANR	5133947	Identifier	len		5133627	1					
ANR	5133948	Parameter	int endian	1300:78:31334:31343	5133627	2	True				
ANR	5133949	ParameterType	int		5133627	0					
ANR	5133950	Identifier	endian		5133627	1					
ANR	5133951	Parameter	int mode	1300:90:31346:31353	5133627	3	True				
ANR	5133952	ParameterType	int		5133627	0					
ANR	5133953	Identifier	mode		5133627	1					
ANR	5133954	Parameter	const char * setval	1301:2:31358:31375	5133627	4	True				
ANR	5133955	ParameterType	const char *		5133627	0					
ANR	5133956	Identifier	setval		5133627	1					
ANR	5133957	Parameter	ut64 seeki	1301:22:31378:31387	5133627	5	True				
ANR	5133958	ParameterType	ut64		5133627	0					
ANR	5133959	Identifier	seeki		5133627	1					
ANR	5133960	Parameter	ut8 * buf	1301:34:31390:31397	5133627	6	True				
ANR	5133961	ParameterType	ut8 *		5133627	0					
ANR	5133962	Identifier	buf		5133627	1					
ANR	5133963	Parameter	int i	1301:44:31400:31404	5133627	7	True				
ANR	5133964	ParameterType	int		5133627	0					
ANR	5133965	Identifier	i		5133627	1					
ANR	5133966	Parameter	int size	1301:51:31407:31414	5133627	8	True				
ANR	5133967	ParameterType	int		5133627	0					
ANR	5133968	Identifier	size		5133627	1					
ANR	5133969	CFGEntryNode	ENTRY		5133627		True				
ANR	5133970	CFGExitNode	EXIT		5133627		True				
ANR	5133971	Symbol	IS_PRINTABLE		5133627						
ANR	5133972	Symbol	ISQUIET		5133627						
ANR	5133973	Symbol	endian		5133627						
ANR	5133974	Symbol	MUSTSEE		5133627						
ANR	5133975	Symbol	mode		5133627						
ANR	5133976	Symbol	strlen		5133627						
ANR	5133977	Symbol	len		5133627						
ANR	5133978	Symbol	* vallen		5133627						
ANR	5133979	Symbol	SEEVALUE		5133627						
ANR	5133980	Symbol	MUSTSET		5133627						
ANR	5133981	Symbol	r_wstr_clen		5133627						
ANR	5133982	Symbol	* buf		5133627						
ANR	5133983	Symbol	MUSTSEEJSON		5133627						
ANR	5133984	Symbol	newstring		5133627						
ANR	5133985	Symbol	i		5133627						
ANR	5133986	Symbol	j		5133627						
ANR	5133987	Symbol	p		5133627						
ANR	5133988	Symbol	vallen		5133627						
ANR	5133989	Symbol	buf		5133627						
ANR	5133990	Symbol	size		5133627						
ANR	5133991	Symbol	* j		5133627						
ANR	5133992	Symbol	seeki		5133627						
ANR	5133993	Symbol	ons		5133627						
ANR	5133994	Symbol	* newstring		5133627						
ANR	5133995	Symbol	strdup		5133627						
ANR	5133996	Symbol	setval		5133627						
ANR	5133997	Function	r_print_format_bitfield	1343:0:32509:33241							
ANR	5133998	FunctionDef	"r_print_format_bitfield (const RPrint * p , ut64 seeki , char * fmtname , char * fieldname , ut64 addr , int mode , int size)"		5133997	0					
ANR	5133999	CompoundStatement		1344:50:32639:33241	5133997	0					
ANR	5134000	IdentifierDeclStatement	char * bitfield = NULL ;	1345:1:32642:32663	5133997	0	True				
ANR	5134001	IdentifierDecl	* bitfield = NULL		5133997	0					
ANR	5134002	IdentifierDeclType	char *		5133997	0					
ANR	5134003	Identifier	bitfield		5133997	1					
ANR	5134004	AssignmentExpression	* bitfield = NULL		5133997	2		=			
ANR	5134005	Identifier	NULL		5133997	0					
ANR	5134006	Identifier	NULL		5133997	1					
ANR	5134007	Statement	addr	1346:1:32666:32669	5133997	1	True				
ANR	5134008	Statement	&=	1346:6:32671:32672	5133997	2	True				
ANR	5134009	Statement	(	1346:9:32674:32674	5133997	3	True				
ANR	5134010	Statement	1UL	1346:10:32675:32677	5133997	4	True				
ANR	5134011	Statement	L	1346:13:32678:32678	5133997	5	True				
ANR	5134012	Statement	<<	1346:15:32680:32681	5133997	6	True				
ANR	5134013	Statement	(	1346:18:32683:32683	5133997	7	True				
ANR	5134014	Statement	size	1346:19:32684:32687	5133997	8	True				
ANR	5134015	Statement	*	1346:24:32689:32689	5133997	9	True				
ANR	5134016	Statement	8	1346:26:32691:32691	5133997	10	True				
ANR	5134017	Statement	)	1346:27:32692:32692	5133997	11	True				
ANR	5134018	Statement	)	1346:28:32693:32693	5133997	12	True				
ANR	5134019	ExpressionStatement	- 1	1346:30:32695:32698	5133997	13	True				
ANR	5134020	UnaryOperationExpression	- 1		5133997	0					
ANR	5134021	UnaryOperator	-		5133997	0					
ANR	5134022	PrimaryExpression	1		5133997	1					
ANR	5134023	IfStatement	if ( MUSTSEE && ! SEEVALUE )		5133997	14					
ANR	5134024	Condition	MUSTSEE && ! SEEVALUE	1347:5:32705:32724	5133997	0	True				
ANR	5134025	AndExpression	MUSTSEE && ! SEEVALUE		5133997	0		&&			
ANR	5134026	Identifier	MUSTSEE		5133997	0					
ANR	5134027	UnaryOperationExpression	! SEEVALUE		5133997	1					
ANR	5134028	UnaryOperator	!		5133997	0					
ANR	5134029	Identifier	SEEVALUE		5133997	1					
ANR	5134030	CompoundStatement		4:27:87:87	5133997	1					
ANR	5134031	Statement	p	1348:2:32731:32731	5133997	0	True				
ANR	5134032	Statement	->	1348:3:32732:32733	5133997	1	True				
ANR	5134033	Statement	cb_printf	1348:5:32734:32742	5133997	2	True				
ANR	5134034	Statement	(	1348:15:32744:32744	5133997	3	True				
ANR	5134035	Statement	"""0x%08"""	1348:16:32745:32751	5133997	4	True				
ANR	5134036	Statement	PFMT64x	1348:23:32752:32758	5133997	5	True				
ANR	5134037	Statement	""" = """	1348:30:32759:32763	5133997	6	True				
ANR	5134038	Statement	","	1348:35:32764:32764	5133997	7	True				
ANR	5134039	Statement	seeki	1348:37:32766:32770	5133997	8	True				
ANR	5134040	Statement	)	1348:42:32771:32771	5133997	9	True				
ANR	5134041	ExpressionStatement		1348:43:32772:32772	5133997	10	True				
ANR	5134042	ExpressionStatement	"bitfield = r_type_enum_getbitfield ( p -> sdb_types , fmtname , addr )"	1350:1:32778:32842	5133997	15	True				
ANR	5134043	AssignmentExpression	"bitfield = r_type_enum_getbitfield ( p -> sdb_types , fmtname , addr )"		5133997	0		=			
ANR	5134044	Identifier	bitfield		5133997	0					
ANR	5134045	CallExpression	"r_type_enum_getbitfield ( p -> sdb_types , fmtname , addr )"		5133997	1					
ANR	5134046	Callee	r_type_enum_getbitfield		5133997	0					
ANR	5134047	Identifier	r_type_enum_getbitfield		5133997	0					
ANR	5134048	ArgumentList	p -> sdb_types		5133997	1					
ANR	5134049	Argument	p -> sdb_types		5133997	0					
ANR	5134050	PtrMemberAccess	p -> sdb_types		5133997	0					
ANR	5134051	Identifier	p		5133997	0					
ANR	5134052	Identifier	sdb_types		5133997	1					
ANR	5134053	Argument	fmtname		5133997	1					
ANR	5134054	Identifier	fmtname		5133997	0					
ANR	5134055	Argument	addr		5133997	2					
ANR	5134056	Identifier	addr		5133997	0					
ANR	5134057	IfStatement	if ( bitfield && * bitfield )		5133997	16					
ANR	5134058	Condition	bitfield && * bitfield	1351:5:32849:32869	5133997	0	True				
ANR	5134059	AndExpression	bitfield && * bitfield		5133997	0		&&			
ANR	5134060	Identifier	bitfield		5133997	0					
ANR	5134061	UnaryOperationExpression	* bitfield		5133997	1					
ANR	5134062	UnaryOperator	*		5133997	0					
ANR	5134063	Identifier	bitfield		5133997	1					
ANR	5134064	CompoundStatement		8:28:232:232	5133997	1					
ANR	5134065	IfStatement	if ( MUSTSEEJSON )		5133997	0					
ANR	5134066	Condition	MUSTSEEJSON	1352:6:32880:32890	5133997	0	True				
ANR	5134067	Identifier	MUSTSEEJSON		5133997	0					
ANR	5134068	CompoundStatement		9:19:253:253	5133997	1					
ANR	5134069	ExpressionStatement	"p -> cb_printf ( ""\\""%s\\""}"" , bitfield )"	1353:3:32898:32932	5133997	0	True				
ANR	5134070	CallExpression	"p -> cb_printf ( ""\\""%s\\""}"" , bitfield )"		5133997	0					
ANR	5134071	Callee	p -> cb_printf		5133997	0					
ANR	5134072	PtrMemberAccess	p -> cb_printf		5133997	0					
ANR	5134073	Identifier	p		5133997	0					
ANR	5134074	Identifier	cb_printf		5133997	1					
ANR	5134075	ArgumentList	"""\\""%s\\""}"""		5133997	1					
ANR	5134076	Argument	"""\\""%s\\""}"""		5133997	0					
ANR	5134077	PrimaryExpression	"""\\""%s\\""}"""		5133997	0					
ANR	5134078	Argument	bitfield		5133997	1					
ANR	5134079	Identifier	bitfield		5133997	0					
ANR	5134080	ElseStatement	else		5133997	0					
ANR	5134081	IfStatement	if ( MUSTSEE )		5133997	0					
ANR	5134082	Condition	MUSTSEE	1354:13:32947:32953	5133997	0	True				
ANR	5134083	Identifier	MUSTSEE		5133997	0					
ANR	5134084	CompoundStatement		11:22:316:316	5133997	1					
ANR	5134085	ExpressionStatement	"p -> cb_printf ( ""%s (bitfield) = %s\\n"" , fieldname , bitfield )"	1355:3:32961:33019	5133997	0	True				
ANR	5134086	CallExpression	"p -> cb_printf ( ""%s (bitfield) = %s\\n"" , fieldname , bitfield )"		5133997	0					
ANR	5134087	Callee	p -> cb_printf		5133997	0					
ANR	5134088	PtrMemberAccess	p -> cb_printf		5133997	0					
ANR	5134089	Identifier	p		5133997	0					
ANR	5134090	Identifier	cb_printf		5133997	1					
ANR	5134091	ArgumentList	"""%s (bitfield) = %s\\n"""		5133997	1					
ANR	5134092	Argument	"""%s (bitfield) = %s\\n"""		5133997	0					
ANR	5134093	PrimaryExpression	"""%s (bitfield) = %s\\n"""		5133997	0					
ANR	5134094	Argument	fieldname		5133997	1					
ANR	5134095	Identifier	fieldname		5133997	0					
ANR	5134096	Argument	bitfield		5133997	2					
ANR	5134097	Identifier	bitfield		5133997	0					
ANR	5134098	ElseStatement	else		5133997	0					
ANR	5134099	CompoundStatement		14:8:393:393	5133997	0					
ANR	5134100	IfStatement	if ( MUSTSEEJSON )		5133997	0					
ANR	5134101	Condition	MUSTSEEJSON	1358:6:33041:33051	5133997	0	True				
ANR	5134102	Identifier	MUSTSEEJSON		5133997	0					
ANR	5134103	CompoundStatement		15:19:414:414	5133997	1					
ANR	5134104	ExpressionStatement	"p -> cb_printf ( ""\\""`tb %s 0x%x`\\""}"" , fmtname , addr )"	1359:3:33059:33108	5133997	0	True				
ANR	5134105	CallExpression	"p -> cb_printf ( ""\\""`tb %s 0x%x`\\""}"" , fmtname , addr )"		5133997	0					
ANR	5134106	Callee	p -> cb_printf		5133997	0					
ANR	5134107	PtrMemberAccess	p -> cb_printf		5133997	0					
ANR	5134108	Identifier	p		5133997	0					
ANR	5134109	Identifier	cb_printf		5133997	1					
ANR	5134110	ArgumentList	"""\\""`tb %s 0x%x`\\""}"""		5133997	1					
ANR	5134111	Argument	"""\\""`tb %s 0x%x`\\""}"""		5133997	0					
ANR	5134112	PrimaryExpression	"""\\""`tb %s 0x%x`\\""}"""		5133997	0					
ANR	5134113	Argument	fmtname		5133997	1					
ANR	5134114	Identifier	fmtname		5133997	0					
ANR	5134115	Argument	addr		5133997	2					
ANR	5134116	Identifier	addr		5133997	0					
ANR	5134117	ElseStatement	else		5133997	0					
ANR	5134118	IfStatement	if ( MUSTSEE )		5133997	0					
ANR	5134119	Condition	MUSTSEE	1360:13:33123:33129	5133997	0	True				
ANR	5134120	Identifier	MUSTSEE		5133997	0					
ANR	5134121	CompoundStatement		17:22:492:492	5133997	1					
ANR	5134122	ExpressionStatement	"p -> cb_printf ( ""%s (bitfield) = `tb %s 0x%x`\\n"" , fieldname , fmtname , addr )"	1361:3:33137:33214	5133997	0	True				
ANR	5134123	CallExpression	"p -> cb_printf ( ""%s (bitfield) = `tb %s 0x%x`\\n"" , fieldname , fmtname , addr )"		5133997	0					
ANR	5134124	Callee	p -> cb_printf		5133997	0					
ANR	5134125	PtrMemberAccess	p -> cb_printf		5133997	0					
ANR	5134126	Identifier	p		5133997	0					
ANR	5134127	Identifier	cb_printf		5133997	1					
ANR	5134128	ArgumentList	"""%s (bitfield) = `tb %s 0x%x`\\n"""		5133997	1					
ANR	5134129	Argument	"""%s (bitfield) = `tb %s 0x%x`\\n"""		5133997	0					
ANR	5134130	PrimaryExpression	"""%s (bitfield) = `tb %s 0x%x`\\n"""		5133997	0					
ANR	5134131	Argument	fieldname		5133997	1					
ANR	5134132	Identifier	fieldname		5133997	0					
ANR	5134133	Argument	fmtname		5133997	2					
ANR	5134134	Identifier	fmtname		5133997	0					
ANR	5134135	Argument	addr		5133997	3					
ANR	5134136	Identifier	addr		5133997	0					
ANR	5134137	ExpressionStatement	free ( bitfield )	1365:1:33224:33239	5133997	17	True				
ANR	5134138	CallExpression	free ( bitfield )		5133997	0					
ANR	5134139	Callee	free		5133997	0					
ANR	5134140	Identifier	free		5133997	0					
ANR	5134141	ArgumentList	bitfield		5133997	1					
ANR	5134142	Argument	bitfield		5133997	0					
ANR	5134143	Identifier	bitfield		5133997	0					
ANR	5134144	ReturnType	static void		5133997	1					
ANR	5134145	Identifier	r_print_format_bitfield		5133997	2					
ANR	5134146	ParameterList	"const RPrint * p , ut64 seeki , char * fmtname , char * fieldname , ut64 addr , int mode , int size"		5133997	3					
ANR	5134147	Parameter	const RPrint * p	1343:36:32545:32559	5133997	0	True				
ANR	5134148	ParameterType	const RPrint *		5133997	0					
ANR	5134149	Identifier	p		5133997	1					
ANR	5134150	Parameter	ut64 seeki	1343:53:32562:32571	5133997	1	True				
ANR	5134151	ParameterType	ut64		5133997	0					
ANR	5134152	Identifier	seeki		5133997	1					
ANR	5134153	Parameter	char * fmtname	1343:65:32574:32586	5133997	2	True				
ANR	5134154	ParameterType	char *		5133997	0					
ANR	5134155	Identifier	fmtname		5133997	1					
ANR	5134156	Parameter	char * fieldname	1344:2:32591:32605	5133997	3	True				
ANR	5134157	ParameterType	char *		5133997	0					
ANR	5134158	Identifier	fieldname		5133997	1					
ANR	5134159	Parameter	ut64 addr	1344:19:32608:32616	5133997	4	True				
ANR	5134160	ParameterType	ut64		5133997	0					
ANR	5134161	Identifier	addr		5133997	1					
ANR	5134162	Parameter	int mode	1344:30:32619:32626	5133997	5	True				
ANR	5134163	ParameterType	int		5133997	0					
ANR	5134164	Identifier	mode		5133997	1					
ANR	5134165	Parameter	int size	1344:40:32629:32636	5133997	6	True				
ANR	5134166	ParameterType	int		5133997	0					
ANR	5134167	Identifier	size		5133997	1					
ANR	5134168	CFGEntryNode	ENTRY		5133997		True				
ANR	5134169	CFGExitNode	EXIT		5133997		True				
ANR	5134170	Symbol	NULL		5133997						
ANR	5134171	Symbol	MUSTSEEJSON		5133997						
ANR	5134172	Symbol	fmtname		5133997						
ANR	5134173	Symbol	r_type_enum_getbitfield		5133997						
ANR	5134174	Symbol	MUSTSEE		5133997						
ANR	5134175	Symbol	p -> sdb_types		5133997						
ANR	5134176	Symbol	bitfield		5133997						
ANR	5134177	Symbol	p		5133997						
ANR	5134178	Symbol	fieldname		5133997						
ANR	5134179	Symbol	mode		5133997						
ANR	5134180	Symbol	size		5133997						
ANR	5134181	Symbol	seeki		5133997						
ANR	5134182	Symbol	SEEVALUE		5133997						
ANR	5134183	Symbol	* p		5133997						
ANR	5134184	Symbol	addr		5133997						
ANR	5134185	Symbol	* bitfield		5133997						
ANR	5134186	Function	r_print_format_enum	1368:0:33244:34267							
ANR	5134187	FunctionDef	"r_print_format_enum (const RPrint * p , ut64 seeki , char * fmtname , char * fieldname , ut64 addr , int mode , int size)"		5134186	0					
ANR	5134188	CompoundStatement		1369:50:33370:34267	5134186	0					
ANR	5134189	IdentifierDeclStatement	char * enumvalue = NULL ;	1370:1:33373:33395	5134186	0	True				
ANR	5134190	IdentifierDecl	* enumvalue = NULL		5134186	0					
ANR	5134191	IdentifierDeclType	char *		5134186	0					
ANR	5134192	Identifier	enumvalue		5134186	1					
ANR	5134193	AssignmentExpression	* enumvalue = NULL		5134186	2		=			
ANR	5134194	Identifier	NULL		5134186	0					
ANR	5134195	Identifier	NULL		5134186	1					
ANR	5134196	Statement	addr	1371:1:33398:33401	5134186	1	True				
ANR	5134197	Statement	&=	1371:6:33403:33404	5134186	2	True				
ANR	5134198	Statement	(	1371:9:33406:33406	5134186	3	True				
ANR	5134199	Statement	1UL	1371:10:33407:33409	5134186	4	True				
ANR	5134200	Statement	L	1371:13:33410:33410	5134186	5	True				
ANR	5134201	Statement	<<	1371:15:33412:33413	5134186	6	True				
ANR	5134202	Statement	(	1371:18:33415:33415	5134186	7	True				
ANR	5134203	Statement	size	1371:19:33416:33419	5134186	8	True				
ANR	5134204	Statement	*	1371:24:33421:33421	5134186	9	True				
ANR	5134205	Statement	8	1371:26:33423:33423	5134186	10	True				
ANR	5134206	Statement	)	1371:27:33424:33424	5134186	11	True				
ANR	5134207	Statement	)	1371:28:33425:33425	5134186	12	True				
ANR	5134208	ExpressionStatement	- 1	1371:30:33427:33430	5134186	13	True				
ANR	5134209	UnaryOperationExpression	- 1		5134186	0					
ANR	5134210	UnaryOperator	-		5134186	0					
ANR	5134211	PrimaryExpression	1		5134186	1					
ANR	5134212	IfStatement	if ( MUSTSEE && ! SEEVALUE )		5134186	14					
ANR	5134213	Condition	MUSTSEE && ! SEEVALUE	1372:5:33437:33456	5134186	0	True				
ANR	5134214	AndExpression	MUSTSEE && ! SEEVALUE		5134186	0		&&			
ANR	5134215	Identifier	MUSTSEE		5134186	0					
ANR	5134216	UnaryOperationExpression	! SEEVALUE		5134186	1					
ANR	5134217	UnaryOperator	!		5134186	0					
ANR	5134218	Identifier	SEEVALUE		5134186	1					
ANR	5134219	CompoundStatement		4:27:88:88	5134186	1					
ANR	5134220	Statement	p	1373:2:33463:33463	5134186	0	True				
ANR	5134221	Statement	->	1373:3:33464:33465	5134186	1	True				
ANR	5134222	Statement	cb_printf	1373:5:33466:33474	5134186	2	True				
ANR	5134223	Statement	(	1373:15:33476:33476	5134186	3	True				
ANR	5134224	Statement	"""0x%08"""	1373:16:33477:33483	5134186	4	True				
ANR	5134225	Statement	PFMT64x	1373:23:33484:33490	5134186	5	True				
ANR	5134226	Statement	""" = """	1373:30:33491:33495	5134186	6	True				
ANR	5134227	Statement	","	1373:35:33496:33496	5134186	7	True				
ANR	5134228	Statement	seeki	1373:37:33498:33502	5134186	8	True				
ANR	5134229	Statement	)	1373:42:33503:33503	5134186	9	True				
ANR	5134230	ExpressionStatement		1373:43:33504:33504	5134186	10	True				
ANR	5134231	ExpressionStatement	"enumvalue = r_type_enum_member ( p -> sdb_types , fmtname , NULL , addr )"	1375:1:33510:33576	5134186	15	True				
ANR	5134232	AssignmentExpression	"enumvalue = r_type_enum_member ( p -> sdb_types , fmtname , NULL , addr )"		5134186	0		=			
ANR	5134233	Identifier	enumvalue		5134186	0					
ANR	5134234	CallExpression	"r_type_enum_member ( p -> sdb_types , fmtname , NULL , addr )"		5134186	1					
ANR	5134235	Callee	r_type_enum_member		5134186	0					
ANR	5134236	Identifier	r_type_enum_member		5134186	0					
ANR	5134237	ArgumentList	p -> sdb_types		5134186	1					
ANR	5134238	Argument	p -> sdb_types		5134186	0					
ANR	5134239	PtrMemberAccess	p -> sdb_types		5134186	0					
ANR	5134240	Identifier	p		5134186	0					
ANR	5134241	Identifier	sdb_types		5134186	1					
ANR	5134242	Argument	fmtname		5134186	1					
ANR	5134243	Identifier	fmtname		5134186	0					
ANR	5134244	Argument	NULL		5134186	2					
ANR	5134245	Identifier	NULL		5134186	0					
ANR	5134246	Argument	addr		5134186	3					
ANR	5134247	Identifier	addr		5134186	0					
ANR	5134248	IfStatement	if ( enumvalue && * enumvalue )		5134186	16					
ANR	5134249	Condition	enumvalue && * enumvalue	1376:5:33583:33605	5134186	0	True				
ANR	5134250	AndExpression	enumvalue && * enumvalue		5134186	0		&&			
ANR	5134251	Identifier	enumvalue		5134186	0					
ANR	5134252	UnaryOperationExpression	* enumvalue		5134186	1					
ANR	5134253	UnaryOperator	*		5134186	0					
ANR	5134254	Identifier	enumvalue		5134186	1					
ANR	5134255	CompoundStatement		8:30:237:237	5134186	1					
ANR	5134256	IfStatement	if ( mode & R_PRINT_DOT )		5134186	0					
ANR	5134257	Condition	mode & R_PRINT_DOT	1377:6:33616:33633	5134186	0	True				
ANR	5134258	BitAndExpression	mode & R_PRINT_DOT		5134186	0		&			
ANR	5134259	Identifier	mode		5134186	0					
ANR	5134260	Identifier	R_PRINT_DOT		5134186	1					
ANR	5134261	CompoundStatement		9:26:265:265	5134186	1					
ANR	5134262	ExpressionStatement	"p -> cb_printf ( ""%s.%s"" , fmtname , enumvalue )"	1378:3:33641:33683	5134186	0	True				
ANR	5134263	CallExpression	"p -> cb_printf ( ""%s.%s"" , fmtname , enumvalue )"		5134186	0					
ANR	5134264	Callee	p -> cb_printf		5134186	0					
ANR	5134265	PtrMemberAccess	p -> cb_printf		5134186	0					
ANR	5134266	Identifier	p		5134186	0					
ANR	5134267	Identifier	cb_printf		5134186	1					
ANR	5134268	ArgumentList	"""%s.%s"""		5134186	1					
ANR	5134269	Argument	"""%s.%s"""		5134186	0					
ANR	5134270	PrimaryExpression	"""%s.%s"""		5134186	0					
ANR	5134271	Argument	fmtname		5134186	1					
ANR	5134272	Identifier	fmtname		5134186	0					
ANR	5134273	Argument	enumvalue		5134186	2					
ANR	5134274	Identifier	enumvalue		5134186	0					
ANR	5134275	ElseStatement	else		5134186	0					
ANR	5134276	IfStatement	if ( MUSTSEEJSON )		5134186	0					
ANR	5134277	Condition	MUSTSEEJSON	1379:13:33698:33708	5134186	0	True				
ANR	5134278	Identifier	MUSTSEEJSON		5134186	0					
ANR	5134279	CompoundStatement		11:26:340:340	5134186	1					
ANR	5134280	Statement	p	1380:3:33716:33716	5134186	0	True				
ANR	5134281	Statement	->	1380:4:33717:33718	5134186	1	True				
ANR	5134282	Statement	cb_printf	1380:6:33719:33727	5134186	2	True				
ANR	5134283	Statement	(	1380:16:33729:33729	5134186	3	True				
ANR	5134284	Statement	"""%"""	1380:17:33730:33732	5134186	4	True				
ANR	5134285	Statement	PFMT64d	1380:20:33733:33739	5134186	5	True				
ANR	5134286	Statement	""",\\""label\\"":\\""%s\\"",\\""enum\\"":\\""%s\\""}"""	1380:27:33740:33775	5134186	6	True				
ANR	5134287	Statement	","	1380:63:33776:33776	5134186	7	True				
ANR	5134288	Statement	addr	1381:4:33782:33785	5134186	8	True				
ANR	5134289	Statement	","	1381:8:33786:33786	5134186	9	True				
ANR	5134290	Statement	enumvalue	1381:10:33788:33796	5134186	10	True				
ANR	5134291	Statement	","	1381:19:33797:33797	5134186	11	True				
ANR	5134292	Statement	fmtname	1381:21:33799:33805	5134186	12	True				
ANR	5134293	Statement	)	1381:28:33806:33806	5134186	13	True				
ANR	5134294	ExpressionStatement		1381:29:33807:33807	5134186	14	True				
ANR	5134295	ElseStatement	else		5134186	0					
ANR	5134296	IfStatement	if ( MUSTSEE )		5134186	0					
ANR	5134297	Condition	MUSTSEE	1382:13:33822:33828	5134186	0	True				
ANR	5134298	Identifier	MUSTSEE		5134186	0					
ANR	5134299	CompoundStatement		14:22:460:460	5134186	1					
ANR	5134300	Statement	p	1383:3:33836:33836	5134186	0	True				
ANR	5134301	Statement	->	1383:4:33837:33838	5134186	1	True				
ANR	5134302	Statement	cb_printf	1383:6:33839:33847	5134186	2	True				
ANR	5134303	Statement	(	1383:16:33849:33849	5134186	3	True				
ANR	5134304	Statement	"""%s (enum %s) = 0x%"""	1383:17:33850:33869	5134186	4	True				
ANR	5134305	Statement	PFMT64x	1383:37:33870:33876	5134186	5	True				
ANR	5134306	Statement	""" ; %s\\n"""	1383:44:33877:33885	5134186	6	True				
ANR	5134307	Statement	","	1383:53:33886:33886	5134186	7	True				
ANR	5134308	Statement	fieldname	1384:4:33892:33900	5134186	8	True				
ANR	5134309	Statement	","	1384:13:33901:33901	5134186	9	True				
ANR	5134310	Statement	fmtname	1384:15:33903:33909	5134186	10	True				
ANR	5134311	Statement	","	1384:22:33910:33910	5134186	11	True				
ANR	5134312	Statement	addr	1384:24:33912:33915	5134186	12	True				
ANR	5134313	Statement	","	1384:28:33916:33916	5134186	13	True				
ANR	5134314	Statement	enumvalue	1384:30:33918:33926	5134186	14	True				
ANR	5134315	Statement	)	1384:39:33927:33927	5134186	15	True				
ANR	5134316	ExpressionStatement		1384:40:33928:33928	5134186	16	True				
ANR	5134317	ElseStatement	else		5134186	0					
ANR	5134318	IfStatement	if ( MUSTSEESTRUCT )		5134186	0					
ANR	5134319	Condition	MUSTSEESTRUCT	1385:13:33943:33955	5134186	0	True				
ANR	5134320	Identifier	MUSTSEESTRUCT		5134186	0					
ANR	5134321	CompoundStatement		17:28:587:587	5134186	1					
ANR	5134322	ExpressionStatement	"p -> cb_printf ( ""%s"" , enumvalue )"	1386:3:33963:33993	5134186	0	True				
ANR	5134323	CallExpression	"p -> cb_printf ( ""%s"" , enumvalue )"		5134186	0					
ANR	5134324	Callee	p -> cb_printf		5134186	0					
ANR	5134325	PtrMemberAccess	p -> cb_printf		5134186	0					
ANR	5134326	Identifier	p		5134186	0					
ANR	5134327	Identifier	cb_printf		5134186	1					
ANR	5134328	ArgumentList	"""%s"""		5134186	1					
ANR	5134329	Argument	"""%s"""		5134186	0					
ANR	5134330	PrimaryExpression	"""%s"""		5134186	0					
ANR	5134331	Argument	enumvalue		5134186	1					
ANR	5134332	Identifier	enumvalue		5134186	0					
ANR	5134333	ElseStatement	else		5134186	0					
ANR	5134334	CompoundStatement		20:8:636:636	5134186	0					
ANR	5134335	IfStatement	if ( MUSTSEEJSON )		5134186	0					
ANR	5134336	Condition	MUSTSEEJSON	1389:6:34015:34025	5134186	0	True				
ANR	5134337	Identifier	MUSTSEEJSON		5134186	0					
ANR	5134338	CompoundStatement		21:19:657:657	5134186	1					
ANR	5134339	Statement	p	1390:3:34033:34033	5134186	0	True				
ANR	5134340	Statement	->	1390:4:34034:34035	5134186	1	True				
ANR	5134341	Statement	cb_printf	1390:6:34036:34044	5134186	2	True				
ANR	5134342	Statement	(	1390:16:34046:34046	5134186	3	True				
ANR	5134343	Statement	"""%"""	1390:17:34047:34049	5134186	4	True				
ANR	5134344	Statement	PFMT64d	1390:20:34050:34056	5134186	5	True				
ANR	5134345	Statement	""",\\""enum\\"":\\""%s\\""}"""	1390:27:34057:34075	5134186	6	True				
ANR	5134346	Statement	","	1390:46:34076:34076	5134186	7	True				
ANR	5134347	Statement	addr	1390:48:34078:34081	5134186	8	True				
ANR	5134348	Statement	","	1390:52:34082:34082	5134186	9	True				
ANR	5134349	Statement	fmtname	1390:54:34084:34090	5134186	10	True				
ANR	5134350	Statement	)	1390:61:34091:34091	5134186	11	True				
ANR	5134351	ExpressionStatement		1390:62:34092:34092	5134186	12	True				
ANR	5134352	ElseStatement	else		5134186	0					
ANR	5134353	IfStatement	if ( MUSTSEE )		5134186	0					
ANR	5134354	Condition	MUSTSEE	1391:13:34107:34113	5134186	0	True				
ANR	5134355	Identifier	MUSTSEE		5134186	0					
ANR	5134356	CompoundStatement		23:22:745:745	5134186	1					
ANR	5134357	ExpressionStatement	"p -> cb_printf ( ""%s (enum %s) = 0x%x\\n"" , fieldname , fmtname , addr )"	1392:3:34121:34207	5134186	0	True				
ANR	5134358	CallExpression	"p -> cb_printf ( ""%s (enum %s) = 0x%x\\n"" , fieldname , fmtname , addr )"		5134186	0					
ANR	5134359	Callee	p -> cb_printf		5134186	0					
ANR	5134360	PtrMemberAccess	p -> cb_printf		5134186	0					
ANR	5134361	Identifier	p		5134186	0					
ANR	5134362	Identifier	cb_printf		5134186	1					
ANR	5134363	ArgumentList	"""%s (enum %s) = 0x%x\\n"""		5134186	1					
ANR	5134364	Argument	"""%s (enum %s) = 0x%x\\n"""		5134186	0					
ANR	5134365	PrimaryExpression	"""%s (enum %s) = 0x%x\\n"""		5134186	0					
ANR	5134366	Argument	fieldname		5134186	1					
ANR	5134367	Identifier	fieldname		5134186	0					
ANR	5134368	Argument	fmtname		5134186	2					
ANR	5134369	Identifier	fmtname		5134186	0					
ANR	5134370	Argument	addr		5134186	3					
ANR	5134371	Identifier	addr		5134186	0					
ANR	5134372	ExpressionStatement	free ( enumvalue )	1396:1:34249:34265	5134186	17	True				
ANR	5134373	CallExpression	free ( enumvalue )		5134186	0					
ANR	5134374	Callee	free		5134186	0					
ANR	5134375	Identifier	free		5134186	0					
ANR	5134376	ArgumentList	enumvalue		5134186	1					
ANR	5134377	Argument	enumvalue		5134186	0					
ANR	5134378	Identifier	enumvalue		5134186	0					
ANR	5134379	ReturnType	static void		5134186	1					
ANR	5134380	Identifier	r_print_format_enum		5134186	2					
ANR	5134381	ParameterList	"const RPrint * p , ut64 seeki , char * fmtname , char * fieldname , ut64 addr , int mode , int size"		5134186	3					
ANR	5134382	Parameter	const RPrint * p	1368:32:33276:33290	5134186	0	True				
ANR	5134383	ParameterType	const RPrint *		5134186	0					
ANR	5134384	Identifier	p		5134186	1					
ANR	5134385	Parameter	ut64 seeki	1368:49:33293:33302	5134186	1	True				
ANR	5134386	ParameterType	ut64		5134186	0					
ANR	5134387	Identifier	seeki		5134186	1					
ANR	5134388	Parameter	char * fmtname	1368:61:33305:33317	5134186	2	True				
ANR	5134389	ParameterType	char *		5134186	0					
ANR	5134390	Identifier	fmtname		5134186	1					
ANR	5134391	Parameter	char * fieldname	1369:2:33322:33336	5134186	3	True				
ANR	5134392	ParameterType	char *		5134186	0					
ANR	5134393	Identifier	fieldname		5134186	1					
ANR	5134394	Parameter	ut64 addr	1369:19:33339:33347	5134186	4	True				
ANR	5134395	ParameterType	ut64		5134186	0					
ANR	5134396	Identifier	addr		5134186	1					
ANR	5134397	Parameter	int mode	1369:30:33350:33357	5134186	5	True				
ANR	5134398	ParameterType	int		5134186	0					
ANR	5134399	Identifier	mode		5134186	1					
ANR	5134400	Parameter	int size	1369:40:33360:33367	5134186	6	True				
ANR	5134401	ParameterType	int		5134186	0					
ANR	5134402	Identifier	size		5134186	1					
ANR	5134403	CFGEntryNode	ENTRY		5134186		True				
ANR	5134404	CFGExitNode	EXIT		5134186		True				
ANR	5134405	Symbol	* enumvalue		5134186						
ANR	5134406	Symbol	NULL		5134186						
ANR	5134407	Symbol	MUSTSEEJSON		5134186						
ANR	5134408	Symbol	MUSTSEESTRUCT		5134186						
ANR	5134409	Symbol	fmtname		5134186						
ANR	5134410	Symbol	MUSTSEE		5134186						
ANR	5134411	Symbol	p -> sdb_types		5134186						
ANR	5134412	Symbol	p		5134186						
ANR	5134413	Symbol	fieldname		5134186						
ANR	5134414	Symbol	mode		5134186						
ANR	5134415	Symbol	size		5134186						
ANR	5134416	Symbol	seeki		5134186						
ANR	5134417	Symbol	enumvalue		5134186						
ANR	5134418	Symbol	SEEVALUE		5134186						
ANR	5134419	Symbol	r_type_enum_member		5134186						
ANR	5134420	Symbol	R_PRINT_DOT		5134186						
ANR	5134421	Symbol	* p		5134186						
ANR	5134422	Symbol	addr		5134186						
ANR	5134423	Function	r_print_format_register	1399:0:34270:34960							
ANR	5134424	FunctionDef	"r_print_format_register (const RPrint * p , int mode , const char * name , const char * setval)"		5134423	0					
ANR	5134425	CompoundStatement		1400:40:34373:34960	5134423	0					
ANR	5134426	IfStatement	if ( ! p || ! p -> get_register || ! p -> reg )		5134423	0					
ANR	5134427	Condition	! p || ! p -> get_register || ! p -> reg	1401:5:34380:34412	5134423	0	True				
ANR	5134428	OrExpression	! p || ! p -> get_register || ! p -> reg		5134423	0		||			
ANR	5134429	UnaryOperationExpression	! p		5134423	0					
ANR	5134430	UnaryOperator	!		5134423	0					
ANR	5134431	Identifier	p		5134423	1					
ANR	5134432	OrExpression	! p -> get_register || ! p -> reg		5134423	1		||			
ANR	5134433	UnaryOperationExpression	! p -> get_register		5134423	0					
ANR	5134434	UnaryOperator	!		5134423	0					
ANR	5134435	PtrMemberAccess	p -> get_register		5134423	1					
ANR	5134436	Identifier	p		5134423	0					
ANR	5134437	Identifier	get_register		5134423	1					
ANR	5134438	UnaryOperationExpression	! p -> reg		5134423	1					
ANR	5134439	UnaryOperator	!		5134423	0					
ANR	5134440	PtrMemberAccess	p -> reg		5134423	1					
ANR	5134441	Identifier	p		5134423	0					
ANR	5134442	Identifier	reg		5134423	1					
ANR	5134443	CompoundStatement		2:40:41:41	5134423	1					
ANR	5134444	ReturnStatement	return ;	1402:2:34419:34425	5134423	0	True				
ANR	5134445	IdentifierDeclStatement	"RRegItem * ri = p -> get_register ( p -> reg , name , R_REG_TYPE_ALL ) ;"	1404:1:34431:34492	5134423	1	True				
ANR	5134446	IdentifierDecl	"* ri = p -> get_register ( p -> reg , name , R_REG_TYPE_ALL )"		5134423	0					
ANR	5134447	IdentifierDeclType	RRegItem *		5134423	0					
ANR	5134448	Identifier	ri		5134423	1					
ANR	5134449	AssignmentExpression	"* ri = p -> get_register ( p -> reg , name , R_REG_TYPE_ALL )"		5134423	2		=			
ANR	5134450	Identifier	ri		5134423	0					
ANR	5134451	CallExpression	"p -> get_register ( p -> reg , name , R_REG_TYPE_ALL )"		5134423	1					
ANR	5134452	Callee	p -> get_register		5134423	0					
ANR	5134453	PtrMemberAccess	p -> get_register		5134423	0					
ANR	5134454	Identifier	p		5134423	0					
ANR	5134455	Identifier	get_register		5134423	1					
ANR	5134456	ArgumentList	p -> reg		5134423	1					
ANR	5134457	Argument	p -> reg		5134423	0					
ANR	5134458	PtrMemberAccess	p -> reg		5134423	0					
ANR	5134459	Identifier	p		5134423	0					
ANR	5134460	Identifier	reg		5134423	1					
ANR	5134461	Argument	name		5134423	1					
ANR	5134462	Identifier	name		5134423	0					
ANR	5134463	Argument	R_REG_TYPE_ALL		5134423	2					
ANR	5134464	Identifier	R_REG_TYPE_ALL		5134423	0					
ANR	5134465	IfStatement	if ( ri )		5134423	2					
ANR	5134466	Condition	ri	1405:5:34499:34500	5134423	0	True				
ANR	5134467	Identifier	ri		5134423	0					
ANR	5134468	CompoundStatement		6:9:129:129	5134423	1					
ANR	5134469	IfStatement	if ( MUSTSET )		5134423	0					
ANR	5134470	Condition	MUSTSET	1406:6:34511:34517	5134423	0	True				
ANR	5134471	Identifier	MUSTSET		5134423	0					
ANR	5134472	CompoundStatement		7:15:146:146	5134423	1					
ANR	5134473	ExpressionStatement	"p -> cb_printf ( ""dr %s=%s\\n"" , name , setval )"	1407:3:34525:34566	5134423	0	True				
ANR	5134474	CallExpression	"p -> cb_printf ( ""dr %s=%s\\n"" , name , setval )"		5134423	0					
ANR	5134475	Callee	p -> cb_printf		5134423	0					
ANR	5134476	PtrMemberAccess	p -> cb_printf		5134423	0					
ANR	5134477	Identifier	p		5134423	0					
ANR	5134478	Identifier	cb_printf		5134423	1					
ANR	5134479	ArgumentList	"""dr %s=%s\\n"""		5134423	1					
ANR	5134480	Argument	"""dr %s=%s\\n"""		5134423	0					
ANR	5134481	PrimaryExpression	"""dr %s=%s\\n"""		5134423	0					
ANR	5134482	Argument	name		5134423	1					
ANR	5134483	Identifier	name		5134423	0					
ANR	5134484	Argument	setval		5134423	2					
ANR	5134485	Identifier	setval		5134423	0					
ANR	5134486	ElseStatement	else		5134423	0					
ANR	5134487	IfStatement	if ( MUSTSEE )		5134423	0					
ANR	5134488	Condition	MUSTSEE	1408:13:34581:34587	5134423	0	True				
ANR	5134489	Identifier	MUSTSEE		5134423	0					
ANR	5134490	CompoundStatement		9:22:216:216	5134423	1					
ANR	5134491	IfStatement	if ( ! SEEVALUE )		5134423	0					
ANR	5134492	Condition	! SEEVALUE	1409:7:34599:34607	5134423	0	True				
ANR	5134493	UnaryOperationExpression	! SEEVALUE		5134423	0					
ANR	5134494	UnaryOperator	!		5134423	0					
ANR	5134495	Identifier	SEEVALUE		5134423	1					
ANR	5134496	CompoundStatement		10:18:236:236	5134423	1					
ANR	5134497	Statement	p	1410:4:34616:34616	5134423	0	True				
ANR	5134498	Statement	->	1410:5:34617:34618	5134423	1	True				
ANR	5134499	Statement	cb_printf	1410:7:34619:34627	5134423	2	True				
ANR	5134500	Statement	(	1410:17:34629:34629	5134423	3	True				
ANR	5134501	Statement	"""%s : 0x%08"""	1410:18:34630:34641	5134423	4	True				
ANR	5134502	Statement	PFMT64x	1410:31:34643:34649	5134423	5	True				
ANR	5134503	Statement	"""\\n"""	1410:39:34651:34654	5134423	6	True				
ANR	5134504	Statement	","	1410:43:34655:34655	5134423	7	True				
ANR	5134505	Statement	ri	1410:45:34657:34658	5134423	8	True				
ANR	5134506	Statement	->	1410:47:34659:34660	5134423	9	True				
ANR	5134507	Statement	name	1410:49:34661:34664	5134423	10	True				
ANR	5134508	Statement	","	1410:53:34665:34665	5134423	11	True				
ANR	5134509	Statement	p	1410:55:34667:34667	5134423	12	True				
ANR	5134510	Statement	->	1410:56:34668:34669	5134423	13	True				
ANR	5134511	Statement	get_register_value	1410:58:34670:34687	5134423	14	True				
ANR	5134512	Statement	(	1410:77:34689:34689	5134423	15	True				
ANR	5134513	Statement	p	1410:78:34690:34690	5134423	16	True				
ANR	5134514	Statement	->	1410:79:34691:34692	5134423	17	True				
ANR	5134515	Statement	reg	1410:81:34693:34695	5134423	18	True				
ANR	5134516	Statement	","	1410:84:34696:34696	5134423	19	True				
ANR	5134517	Statement	ri	1410:86:34698:34699	5134423	20	True				
ANR	5134518	Statement	)	1410:88:34700:34700	5134423	21	True				
ANR	5134519	Statement	)	1410:89:34701:34701	5134423	22	True				
ANR	5134520	ExpressionStatement		1410:90:34702:34702	5134423	23	True				
ANR	5134521	ElseStatement	else		5134423	0					
ANR	5134522	CompoundStatement		12:10:340:340	5134423	0					
ANR	5134523	Statement	p	1412:4:34720:34720	5134423	0	True				
ANR	5134524	Statement	->	1412:5:34721:34722	5134423	1	True				
ANR	5134525	Statement	cb_printf	1412:7:34723:34731	5134423	2	True				
ANR	5134526	Statement	(	1412:17:34733:34733	5134423	3	True				
ANR	5134527	Statement	"""0x%08"""	1412:18:34734:34740	5134423	4	True				
ANR	5134528	Statement	PFMT64x	1412:26:34742:34748	5134423	5	True				
ANR	5134529	Statement	"""\\n"""	1412:34:34750:34753	5134423	6	True				
ANR	5134530	Statement	","	1412:38:34754:34754	5134423	7	True				
ANR	5134531	Statement	p	1412:40:34756:34756	5134423	8	True				
ANR	5134532	Statement	->	1412:41:34757:34758	5134423	9	True				
ANR	5134533	Statement	get_register_value	1412:43:34759:34776	5134423	10	True				
ANR	5134534	Statement	(	1412:62:34778:34778	5134423	11	True				
ANR	5134535	Statement	p	1412:63:34779:34779	5134423	12	True				
ANR	5134536	Statement	->	1412:64:34780:34781	5134423	13	True				
ANR	5134537	Statement	reg	1412:66:34782:34784	5134423	14	True				
ANR	5134538	Statement	","	1412:69:34785:34785	5134423	15	True				
ANR	5134539	Statement	ri	1412:71:34787:34788	5134423	16	True				
ANR	5134540	Statement	)	1412:73:34789:34789	5134423	17	True				
ANR	5134541	Statement	)	1412:74:34790:34790	5134423	18	True				
ANR	5134542	ExpressionStatement		1412:75:34791:34791	5134423	19	True				
ANR	5134543	ElseStatement	else		5134423	0					
ANR	5134544	IfStatement	if ( MUSTSEEJSON )		5134423	0					
ANR	5134545	Condition	MUSTSEEJSON	1414:13:34811:34821	5134423	0	True				
ANR	5134546	Identifier	MUSTSEEJSON		5134423	0					
ANR	5134547	CompoundStatement		15:26:450:450	5134423	1					
ANR	5134548	ExpressionStatement	"p -> cb_printf ( ""%d}"" , p -> get_register_value ( p -> reg , ri ) )"	1415:3:34829:34885	5134423	0	True				
ANR	5134549	CallExpression	"p -> cb_printf ( ""%d}"" , p -> get_register_value ( p -> reg , ri ) )"		5134423	0					
ANR	5134550	Callee	p -> cb_printf		5134423	0					
ANR	5134551	PtrMemberAccess	p -> cb_printf		5134423	0					
ANR	5134552	Identifier	p		5134423	0					
ANR	5134553	Identifier	cb_printf		5134423	1					
ANR	5134554	ArgumentList	"""%d}"""		5134423	1					
ANR	5134555	Argument	"""%d}"""		5134423	0					
ANR	5134556	PrimaryExpression	"""%d}"""		5134423	0					
ANR	5134557	Argument	"p -> get_register_value ( p -> reg , ri )"		5134423	1					
ANR	5134558	CallExpression	"p -> get_register_value ( p -> reg , ri )"		5134423	0					
ANR	5134559	Callee	p -> get_register_value		5134423	0					
ANR	5134560	PtrMemberAccess	p -> get_register_value		5134423	0					
ANR	5134561	Identifier	p		5134423	0					
ANR	5134562	Identifier	get_register_value		5134423	1					
ANR	5134563	ArgumentList	p -> reg		5134423	1					
ANR	5134564	Argument	p -> reg		5134423	0					
ANR	5134565	PtrMemberAccess	p -> reg		5134423	0					
ANR	5134566	Identifier	p		5134423	0					
ANR	5134567	Identifier	reg		5134423	1					
ANR	5134568	Argument	ri		5134423	1					
ANR	5134569	Identifier	ri		5134423	0					
ANR	5134570	ElseStatement	else		5134423	0					
ANR	5134571	CompoundStatement		18:8:525:525	5134423	0					
ANR	5134572	ExpressionStatement	"p -> cb_printf ( ""Register %s does not exists\\n"" , name )"	1418:2:34903:34955	5134423	0	True				
ANR	5134573	CallExpression	"p -> cb_printf ( ""Register %s does not exists\\n"" , name )"		5134423	0					
ANR	5134574	Callee	p -> cb_printf		5134423	0					
ANR	5134575	PtrMemberAccess	p -> cb_printf		5134423	0					
ANR	5134576	Identifier	p		5134423	0					
ANR	5134577	Identifier	cb_printf		5134423	1					
ANR	5134578	ArgumentList	"""Register %s does not exists\\n"""		5134423	1					
ANR	5134579	Argument	"""Register %s does not exists\\n"""		5134423	0					
ANR	5134580	PrimaryExpression	"""Register %s does not exists\\n"""		5134423	0					
ANR	5134581	Argument	name		5134423	1					
ANR	5134582	Identifier	name		5134423	0					
ANR	5134583	ReturnType	static void		5134423	1					
ANR	5134584	Identifier	r_print_format_register		5134423	2					
ANR	5134585	ParameterList	"const RPrint * p , int mode , const char * name , const char * setval"		5134423	3					
ANR	5134586	Parameter	const RPrint * p	1399:36:34306:34320	5134423	0	True				
ANR	5134587	ParameterType	const RPrint *		5134423	0					
ANR	5134588	Identifier	p		5134423	1					
ANR	5134589	Parameter	int mode	1399:53:34323:34330	5134423	1	True				
ANR	5134590	ParameterType	int		5134423	0					
ANR	5134591	Identifier	mode		5134423	1					
ANR	5134592	Parameter	const char * name	1400:2:34335:34350	5134423	2	True				
ANR	5134593	ParameterType	const char *		5134423	0					
ANR	5134594	Identifier	name		5134423	1					
ANR	5134595	Parameter	const char * setval	1400:20:34353:34370	5134423	3	True				
ANR	5134596	ParameterType	const char *		5134423	0					
ANR	5134597	Identifier	setval		5134423	1					
ANR	5134598	CFGEntryNode	ENTRY		5134423		True				
ANR	5134599	CFGExitNode	EXIT		5134423		True				
ANR	5134600	Symbol	MUSTSEEJSON		5134423						
ANR	5134601	Symbol	MUSTSEE		5134423						
ANR	5134602	Symbol	p		5134423						
ANR	5134603	Symbol	mode		5134423						
ANR	5134604	Symbol	p -> get_register_value		5134423						
ANR	5134605	Symbol	R_REG_TYPE_ALL		5134423						
ANR	5134606	Symbol	SEEVALUE		5134423						
ANR	5134607	Symbol	ri		5134423						
ANR	5134608	Symbol	name		5134423						
ANR	5134609	Symbol	p -> get_register		5134423						
ANR	5134610	Symbol	p -> reg		5134423						
ANR	5134611	Symbol	* p		5134423						
ANR	5134612	Symbol	setval		5134423						
ANR	5134613	Symbol	MUSTSET		5134423						
ANR	5134614	Function	r_print_format_num_specifier	1422:0:34963:35491							
ANR	5134615	FunctionDef	"r_print_format_num_specifier (const RPrint * p , ut64 addr , int bytes , int sign)"		5134614	0					
ANR	5134616	CompoundStatement		1422:90:35053:35491	5134614	0					
ANR	5134617	Statement	define	1423:1:35056:35061	5134614	0	True				
ANR	5134618	Statement	EXT	1423:8:35063:35065	5134614	1	True				
ANR	5134619	Statement	(	1423:11:35066:35066	5134614	2	True				
ANR	5134620	Statement	T	1423:12:35067:35067	5134614	3	True				
ANR	5134621	Statement	)	1423:13:35068:35068	5134614	4	True				
ANR	5134622	Statement	(	1423:15:35070:35070	5134614	5	True				
ANR	5134623	Statement	sign	1423:16:35071:35074	5134614	6	True				
ANR	5134624	Statement	?	1423:21:35076:35076	5134614	7	True				
ANR	5134625	Statement	(	1423:23:35078:35078	5134614	8	True				
ANR	5134626	Statement	signed	1423:24:35079:35084	5134614	9	True				
ANR	5134627	Statement	T	1423:31:35086:35086	5134614	10	True				
ANR	5134628	Statement	)	1423:32:35087:35087	5134614	11	True				
ANR	5134629	Statement	(	1423:33:35088:35088	5134614	12	True				
ANR	5134630	Statement	addr	1423:34:35089:35092	5134614	13	True				
ANR	5134631	Statement	)	1423:38:35093:35093	5134614	14	True				
ANR	5134632	Statement	:	1423:40:35095:35095	5134614	15	True				
ANR	5134633	Statement	(	1423:42:35097:35097	5134614	16	True				
ANR	5134634	Statement	unsigned	1423:43:35098:35105	5134614	17	True				
ANR	5134635	Statement	T	1423:52:35107:35107	5134614	18	True				
ANR	5134636	Statement	)	1423:53:35108:35108	5134614	19	True				
ANR	5134637	Statement	(	1423:54:35109:35109	5134614	20	True				
ANR	5134638	Statement	addr	1423:55:35110:35113	5134614	21	True				
ANR	5134639	Statement	)	1423:59:35114:35114	5134614	22	True				
ANR	5134640	Statement	)	1423:61:35116:35116	5134614	23	True				
ANR	5134641	Statement	const	1424:1:35119:35123	5134614	24	True				
ANR	5134642	Statement	char	1424:7:35125:35128	5134614	25	True				
ANR	5134643	Statement	*	1424:12:35130:35130	5134614	26	True				
ANR	5134644	Statement	fs64	1424:13:35131:35134	5134614	27	True				
ANR	5134645	Statement	=	1424:18:35136:35136	5134614	28	True				
ANR	5134646	Statement	sign	1424:20:35138:35141	5134614	29	True				
ANR	5134647	Statement	?	1424:25:35143:35143	5134614	30	True				
ANR	5134648	Statement	"""%"""	1424:27:35145:35147	5134614	31	True				
ANR	5134649	Label	PFMT64d :	1424:30:35148:35156	5134614	32	True				
ANR	5134650	Identifier	PFMT64d		5134614	0					
ANR	5134651	Statement	"""%"""	1424:40:35158:35160	5134614	33	True				
ANR	5134652	ExpressionStatement	PFMT64u	1424:43:35161:35168	5134614	34	True				
ANR	5134653	Identifier	PFMT64u		5134614	0					
ANR	5134654	IdentifierDeclStatement	"const char * fs = sign ? ""%d"" : ""%u"" ;"	1425:1:35171:35206	5134614	35	True				
ANR	5134655	IdentifierDecl	"* fs = sign ? ""%d"" : ""%u"""		5134614	0					
ANR	5134656	IdentifierDeclType	const char *		5134614	0					
ANR	5134657	Identifier	fs		5134614	1					
ANR	5134658	AssignmentExpression	"* fs = sign ? ""%d"" : ""%u"""		5134614	2		=			
ANR	5134659	Identifier	fs		5134614	0					
ANR	5134660	ConditionalExpression	"sign ? ""%d"" : ""%u"""		5134614	1					
ANR	5134661	Condition	sign		5134614	0					
ANR	5134662	Identifier	sign		5134614	0					
ANR	5134663	PrimaryExpression	"""%d"""		5134614	1					
ANR	5134664	PrimaryExpression	"""%u"""		5134614	2					
ANR	5134665	IfStatement	if ( bytes == 1 )		5134614	36					
ANR	5134666	Condition	bytes == 1	1426:5:35213:35222	5134614	0	True				
ANR	5134667	EqualityExpression	bytes == 1		5134614	0		==			
ANR	5134668	Identifier	bytes		5134614	0					
ANR	5134669	PrimaryExpression	1		5134614	1					
ANR	5134670	CompoundStatement		5:17:171:171	5134614	1					
ANR	5134671	ExpressionStatement	"p -> cb_printf ( fs , EXT ( char ) )"	1427:2:35229:35257	5134614	0	True				
ANR	5134672	CallExpression	"p -> cb_printf ( fs , EXT ( char ) )"		5134614	0					
ANR	5134673	Callee	p -> cb_printf		5134614	0					
ANR	5134674	PtrMemberAccess	p -> cb_printf		5134614	0					
ANR	5134675	Identifier	p		5134614	0					
ANR	5134676	Identifier	cb_printf		5134614	1					
ANR	5134677	ArgumentList	fs		5134614	1					
ANR	5134678	Argument	fs		5134614	0					
ANR	5134679	Identifier	fs		5134614	0					
ANR	5134680	Argument	EXT ( char )		5134614	1					
ANR	5134681	CallExpression	EXT ( char )		5134614	0					
ANR	5134682	Callee	EXT		5134614	0					
ANR	5134683	Identifier	EXT		5134614	0					
ANR	5134684	ArgumentList	char		5134614	1					
ANR	5134685	Argument	char		5134614	0					
ANR	5134686	Identifier	char		5134614	0					
ANR	5134687	ElseStatement	else		5134614	0					
ANR	5134688	IfStatement	if ( bytes == 2 )		5134614	0					
ANR	5134689	Condition	bytes == 2	1428:12:35271:35280	5134614	0	True				
ANR	5134690	EqualityExpression	bytes == 2		5134614	0		==			
ANR	5134691	Identifier	bytes		5134614	0					
ANR	5134692	PrimaryExpression	2		5134614	1					
ANR	5134693	CompoundStatement		7:24:229:229	5134614	1					
ANR	5134694	ExpressionStatement	"p -> cb_printf ( fs , EXT ( short ) )"	1429:2:35287:35316	5134614	0	True				
ANR	5134695	CallExpression	"p -> cb_printf ( fs , EXT ( short ) )"		5134614	0					
ANR	5134696	Callee	p -> cb_printf		5134614	0					
ANR	5134697	PtrMemberAccess	p -> cb_printf		5134614	0					
ANR	5134698	Identifier	p		5134614	0					
ANR	5134699	Identifier	cb_printf		5134614	1					
ANR	5134700	ArgumentList	fs		5134614	1					
ANR	5134701	Argument	fs		5134614	0					
ANR	5134702	Identifier	fs		5134614	0					
ANR	5134703	Argument	EXT ( short )		5134614	1					
ANR	5134704	CallExpression	EXT ( short )		5134614	0					
ANR	5134705	Callee	EXT		5134614	0					
ANR	5134706	Identifier	EXT		5134614	0					
ANR	5134707	ArgumentList	short		5134614	1					
ANR	5134708	Argument	short		5134614	0					
ANR	5134709	Identifier	short		5134614	0					
ANR	5134710	ElseStatement	else		5134614	0					
ANR	5134711	IfStatement	if ( bytes == 4 )		5134614	0					
ANR	5134712	Condition	bytes == 4	1430:12:35330:35339	5134614	0	True				
ANR	5134713	EqualityExpression	bytes == 4		5134614	0		==			
ANR	5134714	Identifier	bytes		5134614	0					
ANR	5134715	PrimaryExpression	4		5134614	1					
ANR	5134716	CompoundStatement		9:24:288:288	5134614	1					
ANR	5134717	ExpressionStatement	"p -> cb_printf ( fs , EXT ( int ) )"	1431:2:35346:35373	5134614	0	True				
ANR	5134718	CallExpression	"p -> cb_printf ( fs , EXT ( int ) )"		5134614	0					
ANR	5134719	Callee	p -> cb_printf		5134614	0					
ANR	5134720	PtrMemberAccess	p -> cb_printf		5134614	0					
ANR	5134721	Identifier	p		5134614	0					
ANR	5134722	Identifier	cb_printf		5134614	1					
ANR	5134723	ArgumentList	fs		5134614	1					
ANR	5134724	Argument	fs		5134614	0					
ANR	5134725	Identifier	fs		5134614	0					
ANR	5134726	Argument	EXT ( int )		5134614	1					
ANR	5134727	CallExpression	EXT ( int )		5134614	0					
ANR	5134728	Callee	EXT		5134614	0					
ANR	5134729	Identifier	EXT		5134614	0					
ANR	5134730	ArgumentList	int		5134614	1					
ANR	5134731	Argument	int		5134614	0					
ANR	5134732	Identifier	int		5134614	0					
ANR	5134733	ElseStatement	else		5134614	0					
ANR	5134734	IfStatement	if ( bytes == 8 )		5134614	0					
ANR	5134735	Condition	bytes == 8	1432:12:35434:35443	5134614	0	True				
ANR	5134736	EqualityExpression	bytes == 8		5134614	0		==			
ANR	5134737	Identifier	bytes		5134614	0					
ANR	5134738	PrimaryExpression	8		5134614	1					
ANR	5134739	CompoundStatement		11:24:392:392	5134614	1					
ANR	5134740	ExpressionStatement	"p -> cb_printf ( fs64 , addr )"	1433:2:35450:35475	5134614	0	True				
ANR	5134741	CallExpression	"p -> cb_printf ( fs64 , addr )"		5134614	0					
ANR	5134742	Callee	p -> cb_printf		5134614	0					
ANR	5134743	PtrMemberAccess	p -> cb_printf		5134614	0					
ANR	5134744	Identifier	p		5134614	0					
ANR	5134745	Identifier	cb_printf		5134614	1					
ANR	5134746	ArgumentList	fs64		5134614	1					
ANR	5134747	Argument	fs64		5134614	0					
ANR	5134748	Identifier	fs64		5134614	0					
ANR	5134749	Argument	addr		5134614	1					
ANR	5134750	Identifier	addr		5134614	0					
ANR	5134751	Statement	undef	1435:1:35481:35485	5134614	37	True				
ANR	5134752	Statement	EXT	1435:7:35487:35489	5134614	38	True				
ANR	5134753	ReturnType	static void		5134614	1					
ANR	5134754	Identifier	r_print_format_num_specifier		5134614	2					
ANR	5134755	ParameterList	"const RPrint * p , ut64 addr , int bytes , int sign"		5134614	3					
ANR	5134756	Parameter	const RPrint * p	1422:41:35004:35018	5134614	0	True				
ANR	5134757	ParameterType	const RPrint *		5134614	0					
ANR	5134758	Identifier	p		5134614	1					
ANR	5134759	Parameter	ut64 addr	1422:58:35021:35029	5134614	1	True				
ANR	5134760	ParameterType	ut64		5134614	0					
ANR	5134761	Identifier	addr		5134614	1					
ANR	5134762	Parameter	int bytes	1422:69:35032:35040	5134614	2	True				
ANR	5134763	ParameterType	int		5134614	0					
ANR	5134764	Identifier	bytes		5134614	1					
ANR	5134765	Parameter	int sign	1422:80:35043:35050	5134614	3	True				
ANR	5134766	ParameterType	int		5134614	0					
ANR	5134767	Identifier	sign		5134614	1					
ANR	5134768	CFGEntryNode	ENTRY		5134614		True				
ANR	5134769	CFGExitNode	EXIT		5134614		True				
ANR	5134770	Symbol	p		5134614						
ANR	5134771	Symbol	EXT		5134614						
ANR	5134772	Symbol	bytes		5134614						
ANR	5134773	Symbol	sign		5134614						
ANR	5134774	Symbol	char		5134614						
ANR	5134775	Symbol	short		5134614						
ANR	5134776	Symbol	fs64		5134614						
ANR	5134777	Symbol	addr		5134614						
ANR	5134778	Symbol	fs		5134614						
ANR	5134779	Symbol	int		5134614						
ANR	5134780	Function	r_print_format_num	1438:0:35494:37532							
ANR	5134781	FunctionDef	"r_print_format_num (const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int bytes , int sign , int size)"		5134780	0					
ANR	5134782	CompoundStatement		1438:150:35644:37532	5134780	0					
ANR	5134783	Statement	ut64	1439:1:35647:35650	5134780	0	True				
ANR	5134784	Statement	addr	1439:6:35652:35655	5134780	1	True				
ANR	5134785	Statement	=	1439:11:35657:35657	5134780	2	True				
ANR	5134786	Statement	0L	1439:13:35659:35660	5134780	3	True				
ANR	5134787	ExpressionStatement	L	1439:15:35661:35662	5134780	4	True				
ANR	5134788	Identifier	L		5134780	0					
ANR	5134789	IdentifierDeclStatement	int elem = - 1 ;	1440:1:35665:35678	5134780	5	True				
ANR	5134790	IdentifierDecl	elem = - 1		5134780	0					
ANR	5134791	IdentifierDeclType	int		5134780	0					
ANR	5134792	Identifier	elem		5134780	1					
ANR	5134793	AssignmentExpression	elem = - 1		5134780	2		=			
ANR	5134794	Identifier	elem		5134780	0					
ANR	5134795	UnaryOperationExpression	- 1		5134780	1					
ANR	5134796	UnaryOperator	-		5134780	0					
ANR	5134797	PrimaryExpression	1		5134780	1					
ANR	5134798	IfStatement	if ( size >= ARRAYINDEX_COEF )		5134780	6					
ANR	5134799	Condition	size >= ARRAYINDEX_COEF	1441:5:35685:35707	5134780	0	True				
ANR	5134800	RelationalExpression	size >= ARRAYINDEX_COEF		5134780	0		>=			
ANR	5134801	Identifier	size		5134780	0					
ANR	5134802	Identifier	ARRAYINDEX_COEF		5134780	1					
ANR	5134803	CompoundStatement		4:30:65:65	5134780	1					
ANR	5134804	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	1442:2:35714:35747	5134780	0	True				
ANR	5134805	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5134780	0		=			
ANR	5134806	Identifier	elem		5134780	0					
ANR	5134807	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5134780	1		-			
ANR	5134808	MultiplicativeExpression	size / ARRAYINDEX_COEF		5134780	0		/			
ANR	5134809	Identifier	size		5134780	0					
ANR	5134810	Identifier	ARRAYINDEX_COEF		5134780	1					
ANR	5134811	PrimaryExpression	1		5134780	1					
ANR	5134812	ExpressionStatement	size %= ARRAYINDEX_COEF	1443:2:35751:35774	5134780	1	True				
ANR	5134813	AssignmentExpression	size %= ARRAYINDEX_COEF		5134780	0		%=			
ANR	5134814	Identifier	size		5134780	0					
ANR	5134815	Identifier	ARRAYINDEX_COEF		5134780	1					
ANR	5134816	IfStatement	if ( bytes == 8 )		5134780	7					
ANR	5134817	Condition	bytes == 8	1445:5:35784:35793	5134780	0	True				
ANR	5134818	EqualityExpression	bytes == 8		5134780	0		==			
ANR	5134819	Identifier	bytes		5134780	0					
ANR	5134820	PrimaryExpression	8		5134780	1					
ANR	5134821	CompoundStatement		8:17:151:151	5134780	1					
ANR	5134822	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , NULL , & addr )"	1446:2:35800:35851	5134780	0	True				
ANR	5134823	CallExpression	"updateAddr ( buf + i , size - i , endian , NULL , & addr )"		5134780	0					
ANR	5134824	Callee	updateAddr		5134780	0					
ANR	5134825	Identifier	updateAddr		5134780	0					
ANR	5134826	ArgumentList	buf + i		5134780	1					
ANR	5134827	Argument	buf + i		5134780	0					
ANR	5134828	AdditiveExpression	buf + i		5134780	0		+			
ANR	5134829	Identifier	buf		5134780	0					
ANR	5134830	Identifier	i		5134780	1					
ANR	5134831	Argument	size - i		5134780	1					
ANR	5134832	AdditiveExpression	size - i		5134780	0		-			
ANR	5134833	Identifier	size		5134780	0					
ANR	5134834	Identifier	i		5134780	1					
ANR	5134835	Argument	endian		5134780	2					
ANR	5134836	Identifier	endian		5134780	0					
ANR	5134837	Argument	NULL		5134780	3					
ANR	5134838	Identifier	NULL		5134780	0					
ANR	5134839	Argument	& addr		5134780	4					
ANR	5134840	UnaryOperationExpression	& addr		5134780	0					
ANR	5134841	UnaryOperator	&		5134780	0					
ANR	5134842	Identifier	addr		5134780	1					
ANR	5134843	ElseStatement	else		5134780	0					
ANR	5134844	CompoundStatement		10:8:216:216	5134780	0					
ANR	5134845	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	1448:2:35865:35916	5134780	0	True				
ANR	5134846	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5134780	0					
ANR	5134847	Callee	updateAddr		5134780	0					
ANR	5134848	Identifier	updateAddr		5134780	0					
ANR	5134849	ArgumentList	buf + i		5134780	1					
ANR	5134850	Argument	buf + i		5134780	0					
ANR	5134851	AdditiveExpression	buf + i		5134780	0		+			
ANR	5134852	Identifier	buf		5134780	0					
ANR	5134853	Identifier	i		5134780	1					
ANR	5134854	Argument	size - i		5134780	1					
ANR	5134855	AdditiveExpression	size - i		5134780	0		-			
ANR	5134856	Identifier	size		5134780	0					
ANR	5134857	Identifier	i		5134780	1					
ANR	5134858	Argument	endian		5134780	2					
ANR	5134859	Identifier	endian		5134780	0					
ANR	5134860	Argument	& addr		5134780	3					
ANR	5134861	UnaryOperationExpression	& addr		5134780	0					
ANR	5134862	UnaryOperator	&		5134780	0					
ANR	5134863	Identifier	addr		5134780	1					
ANR	5134864	Argument	NULL		5134780	4					
ANR	5134865	Identifier	NULL		5134780	0					
ANR	5134866	IfStatement	if ( MUSTSET )		5134780	8					
ANR	5134867	Condition	MUSTSET	1450:5:35926:35932	5134780	0	True				
ANR	5134868	Identifier	MUSTSET		5134780	0					
ANR	5134869	CompoundStatement		13:14:290:290	5134780	1					
ANR	5134870	Statement	p	1451:2:35939:35939	5134780	0	True				
ANR	5134871	Statement	->	1451:3:35940:35941	5134780	1	True				
ANR	5134872	Statement	cb_printf	1451:5:35942:35950	5134780	2	True				
ANR	5134873	Statement	(	1451:15:35952:35952	5134780	3	True				
ANR	5134874	Statement	"""wv%d %s @ 0x%08"""	1451:16:35953:35969	5134780	4	True				
ANR	5134875	Statement	PFMT64x	1451:33:35970:35976	5134780	5	True				
ANR	5134876	Statement	"""\\n"""	1451:40:35977:35980	5134780	6	True				
ANR	5134877	Statement	","	1451:44:35981:35981	5134780	7	True				
ANR	5134878	Statement	bytes	1451:46:35983:35987	5134780	8	True				
ANR	5134879	Statement	","	1451:51:35988:35988	5134780	9	True				
ANR	5134880	Statement	setval	1451:53:35990:35995	5134780	10	True				
ANR	5134881	Statement	","	1451:59:35996:35996	5134780	11	True				
ANR	5134882	Statement	seeki	1451:61:35998:36002	5134780	12	True				
ANR	5134883	Statement	+	1451:66:36003:36003	5134780	13	True				
ANR	5134884	Statement	(	1451:67:36004:36004	5134780	14	True				
ANR	5134885	Statement	(	1451:68:36005:36005	5134780	15	True				
ANR	5134886	Statement	elem	1451:69:36006:36009	5134780	16	True				
ANR	5134887	Statement	>=	1451:73:36010:36011	5134780	17	True				
ANR	5134888	Statement	0	1451:75:36012:36012	5134780	18	True				
ANR	5134889	Statement	)	1451:76:36013:36013	5134780	19	True				
ANR	5134890	Statement	?	1451:77:36014:36014	5134780	20	True				
ANR	5134891	Statement	elem	1451:78:36015:36018	5134780	21	True				
ANR	5134892	Statement	*	1451:82:36019:36019	5134780	22	True				
ANR	5134893	Statement	(	1451:83:36020:36020	5134780	23	True				
ANR	5134894	Statement	bytes	1451:84:36021:36025	5134780	24	True				
ANR	5134895	Statement	)	1451:89:36026:36026	5134780	25	True				
ANR	5134896	Statement	:	1451:90:36027:36027	5134780	26	True				
ANR	5134897	Statement	0	1451:91:36028:36028	5134780	27	True				
ANR	5134898	Statement	)	1451:92:36029:36029	5134780	28	True				
ANR	5134899	Statement	)	1451:93:36030:36030	5134780	29	True				
ANR	5134900	ExpressionStatement		1451:94:36031:36031	5134780	30	True				
ANR	5134901	ElseStatement	else		5134780	0					
ANR	5134902	IfStatement	if ( ( mode & R_PRINT_DOT ) || MUSTSEESTRUCT )		5134780	0					
ANR	5134903	Condition	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT	1452:12:36045:36081	5134780	0	True				
ANR	5134904	OrExpression	( mode & R_PRINT_DOT ) || MUSTSEESTRUCT		5134780	0		||			
ANR	5134905	BitAndExpression	mode & R_PRINT_DOT		5134780	0		&			
ANR	5134906	Identifier	mode		5134780	0					
ANR	5134907	Identifier	R_PRINT_DOT		5134780	1					
ANR	5134908	Identifier	MUSTSEESTRUCT		5134780	1					
ANR	5134909	CompoundStatement		15:51:439:439	5134780	1					
ANR	5134910	Statement	p	1453:2:36088:36088	5134780	0	True				
ANR	5134911	Statement	->	1453:3:36089:36090	5134780	1	True				
ANR	5134912	Statement	cb_printf	1453:5:36091:36099	5134780	2	True				
ANR	5134913	Statement	(	1453:15:36101:36101	5134780	3	True				
ANR	5134914	Statement	"""%"""	1453:16:36102:36104	5134780	4	True				
ANR	5134915	Statement	PFMT64u	1453:19:36105:36111	5134780	5	True				
ANR	5134916	Statement	","	1453:26:36112:36112	5134780	6	True				
ANR	5134917	Statement	addr	1453:28:36114:36117	5134780	7	True				
ANR	5134918	Statement	)	1453:32:36118:36118	5134780	8	True				
ANR	5134919	ExpressionStatement		1453:33:36119:36119	5134780	9	True				
ANR	5134920	ElseStatement	else		5134780	0					
ANR	5134921	IfStatement	if ( MUSTSEE )		5134780	0					
ANR	5134922	Condition	MUSTSEE	1454:12:36133:36139	5134780	0	True				
ANR	5134923	Identifier	MUSTSEE		5134780	0					
ANR	5134924	CompoundStatement		17:21:497:497	5134780	1					
ANR	5134925	IfStatement	if ( ! SEEVALUE && ! ISQUIET )		5134780	0					
ANR	5134926	Condition	! SEEVALUE && ! ISQUIET	1455:6:36150:36170	5134780	0	True				
ANR	5134927	AndExpression	! SEEVALUE && ! ISQUIET		5134780	0		&&			
ANR	5134928	UnaryOperationExpression	! SEEVALUE		5134780	0					
ANR	5134929	UnaryOperator	!		5134780	0					
ANR	5134930	Identifier	SEEVALUE		5134780	1					
ANR	5134931	UnaryOperationExpression	! ISQUIET		5134780	1					
ANR	5134932	UnaryOperator	!		5134780	0					
ANR	5134933	Identifier	ISQUIET		5134780	1					
ANR	5134934	CompoundStatement		18:29:528:528	5134780	1					
ANR	5134935	Statement	p	1456:3:36178:36178	5134780	0	True				
ANR	5134936	Statement	->	1456:4:36179:36180	5134780	1	True				
ANR	5134937	Statement	cb_printf	1456:6:36181:36189	5134780	2	True				
ANR	5134938	Statement	(	1456:16:36191:36191	5134780	3	True				
ANR	5134939	Statement	"""0x%08"""	1456:17:36192:36198	5134780	4	True				
ANR	5134940	Statement	PFMT64x	1456:24:36199:36205	5134780	5	True				
ANR	5134941	Statement	""" = """	1456:31:36206:36210	5134780	6	True				
ANR	5134942	Statement	","	1456:36:36211:36211	5134780	7	True				
ANR	5134943	Statement	seeki	1456:38:36213:36217	5134780	8	True				
ANR	5134944	Statement	+	1456:44:36219:36219	5134780	9	True				
ANR	5134945	Statement	(	1456:46:36221:36221	5134780	10	True				
ANR	5134946	Statement	(	1456:47:36222:36222	5134780	11	True				
ANR	5134947	Statement	elem	1456:48:36223:36226	5134780	12	True				
ANR	5134948	Statement	>=	1456:53:36228:36229	5134780	13	True				
ANR	5134949	Statement	0	1456:56:36231:36231	5134780	14	True				
ANR	5134950	Statement	)	1456:57:36232:36232	5134780	15	True				
ANR	5134951	Statement	?	1456:58:36233:36233	5134780	16	True				
ANR	5134952	Statement	elem	1456:60:36235:36238	5134780	17	True				
ANR	5134953	Statement	*	1456:65:36240:36240	5134780	18	True				
ANR	5134954	Label	bytes :	1456:67:36242:36247	5134780	19	True				
ANR	5134955	Identifier	bytes		5134780	0					
ANR	5134956	Statement	0	1456:74:36249:36249	5134780	20	True				
ANR	5134957	Statement	)	1456:75:36250:36250	5134780	21	True				
ANR	5134958	Statement	)	1456:76:36251:36251	5134780	22	True				
ANR	5134959	ExpressionStatement		1456:77:36252:36252	5134780	23	True				
ANR	5134960	IfStatement	if ( size == - 1 )		5134780	1					
ANR	5134961	Condition	size == - 1	1458:6:36264:36273	5134780	0	True				
ANR	5134962	EqualityExpression	size == - 1		5134780	0		==			
ANR	5134963	Identifier	size		5134780	0					
ANR	5134964	UnaryOperationExpression	- 1		5134780	1					
ANR	5134965	UnaryOperator	-		5134780	0					
ANR	5134966	PrimaryExpression	1		5134780	1					
ANR	5134967	CompoundStatement		21:18:631:631	5134780	1					
ANR	5134968	ExpressionStatement	"r_print_format_num_specifier ( p , addr , bytes , sign )"	1459:3:36281:36332	5134780	0	True				
ANR	5134969	CallExpression	"r_print_format_num_specifier ( p , addr , bytes , sign )"		5134780	0					
ANR	5134970	Callee	r_print_format_num_specifier		5134780	0					
ANR	5134971	Identifier	r_print_format_num_specifier		5134780	0					
ANR	5134972	ArgumentList	p		5134780	1					
ANR	5134973	Argument	p		5134780	0					
ANR	5134974	Identifier	p		5134780	0					
ANR	5134975	Argument	addr		5134780	1					
ANR	5134976	Identifier	addr		5134780	0					
ANR	5134977	Argument	bytes		5134780	2					
ANR	5134978	Identifier	bytes		5134780	0					
ANR	5134979	Argument	sign		5134780	3					
ANR	5134980	Identifier	sign		5134780	0					
ANR	5134981	ElseStatement	else		5134780	0					
ANR	5134982	CompoundStatement		23:9:698:698	5134780	0					
ANR	5134983	IfStatement	if ( ! SEEVALUE )		5134780	0					
ANR	5134984	Condition	! SEEVALUE	1461:7:36352:36360	5134780	0	True				
ANR	5134985	UnaryOperationExpression	! SEEVALUE		5134780	0					
ANR	5134986	UnaryOperator	!		5134780	0					
ANR	5134987	Identifier	SEEVALUE		5134780	1					
ANR	5134988	CompoundStatement		24:18:718:718	5134780	1					
ANR	5134989	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	1462:4:36369:36388	5134780	0	True				
ANR	5134990	CallExpression	"p -> cb_printf ( ""[ "" )"		5134780	0					
ANR	5134991	Callee	p -> cb_printf		5134780	0					
ANR	5134992	PtrMemberAccess	p -> cb_printf		5134780	0					
ANR	5134993	Identifier	p		5134780	0					
ANR	5134994	Identifier	cb_printf		5134780	1					
ANR	5134995	ArgumentList	"""[ """		5134780	1					
ANR	5134996	Argument	"""[ """		5134780	0					
ANR	5134997	PrimaryExpression	"""[ """		5134780	0					
ANR	5134998	WhileStatement	while ( size -- )		5134780	1					
ANR	5134999	Condition	size --	1464:10:36405:36410	5134780	0	True				
ANR	5135000	PostIncDecOperationExpression	size --		5134780	0					
ANR	5135001	Identifier	size		5134780	0					
ANR	5135002	IncDec	--		5134780	1					
ANR	5135003	CompoundStatement		27:18:768:768	5134780	1					
ANR	5135004	IfStatement	if ( bytes == 8 )		5134780	0					
ANR	5135005	Condition	bytes == 8	1465:8:36423:36432	5134780	0	True				
ANR	5135006	EqualityExpression	bytes == 8		5134780	0		==			
ANR	5135007	Identifier	bytes		5134780	0					
ANR	5135008	PrimaryExpression	8		5134780	1					
ANR	5135009	CompoundStatement		28:20:790:790	5134780	1					
ANR	5135010	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , NULL , & addr )"	1466:5:36442:36493	5134780	0	True				
ANR	5135011	CallExpression	"updateAddr ( buf + i , size - i , endian , NULL , & addr )"		5134780	0					
ANR	5135012	Callee	updateAddr		5134780	0					
ANR	5135013	Identifier	updateAddr		5134780	0					
ANR	5135014	ArgumentList	buf + i		5134780	1					
ANR	5135015	Argument	buf + i		5134780	0					
ANR	5135016	AdditiveExpression	buf + i		5134780	0		+			
ANR	5135017	Identifier	buf		5134780	0					
ANR	5135018	Identifier	i		5134780	1					
ANR	5135019	Argument	size - i		5134780	1					
ANR	5135020	AdditiveExpression	size - i		5134780	0		-			
ANR	5135021	Identifier	size		5134780	0					
ANR	5135022	Identifier	i		5134780	1					
ANR	5135023	Argument	endian		5134780	2					
ANR	5135024	Identifier	endian		5134780	0					
ANR	5135025	Argument	NULL		5134780	3					
ANR	5135026	Identifier	NULL		5134780	0					
ANR	5135027	Argument	& addr		5134780	4					
ANR	5135028	UnaryOperationExpression	& addr		5134780	0					
ANR	5135029	UnaryOperator	&		5134780	0					
ANR	5135030	Identifier	addr		5134780	1					
ANR	5135031	ElseStatement	else		5134780	0					
ANR	5135032	CompoundStatement		30:11:861:861	5134780	0					
ANR	5135033	ExpressionStatement	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"	1468:5:36513:36564	5134780	0	True				
ANR	5135034	CallExpression	"updateAddr ( buf + i , size - i , endian , & addr , NULL )"		5134780	0					
ANR	5135035	Callee	updateAddr		5134780	0					
ANR	5135036	Identifier	updateAddr		5134780	0					
ANR	5135037	ArgumentList	buf + i		5134780	1					
ANR	5135038	Argument	buf + i		5134780	0					
ANR	5135039	AdditiveExpression	buf + i		5134780	0		+			
ANR	5135040	Identifier	buf		5134780	0					
ANR	5135041	Identifier	i		5134780	1					
ANR	5135042	Argument	size - i		5134780	1					
ANR	5135043	AdditiveExpression	size - i		5134780	0		-			
ANR	5135044	Identifier	size		5134780	0					
ANR	5135045	Identifier	i		5134780	1					
ANR	5135046	Argument	endian		5134780	2					
ANR	5135047	Identifier	endian		5134780	0					
ANR	5135048	Argument	& addr		5134780	3					
ANR	5135049	UnaryOperationExpression	& addr		5134780	0					
ANR	5135050	UnaryOperator	&		5134780	0					
ANR	5135051	Identifier	addr		5134780	1					
ANR	5135052	Argument	NULL		5134780	4					
ANR	5135053	Identifier	NULL		5134780	0					
ANR	5135054	IfStatement	if ( elem == - 1 || elem == 0 )		5134780	1					
ANR	5135055	Condition	elem == - 1 || elem == 0	1470:8:36580:36602	5134780	0	True				
ANR	5135056	OrExpression	elem == - 1 || elem == 0		5134780	0		||			
ANR	5135057	EqualityExpression	elem == - 1		5134780	0		==			
ANR	5135058	Identifier	elem		5134780	0					
ANR	5135059	UnaryOperationExpression	- 1		5134780	1					
ANR	5135060	UnaryOperator	-		5134780	0					
ANR	5135061	PrimaryExpression	1		5134780	1					
ANR	5135062	EqualityExpression	elem == 0		5134780	1		==			
ANR	5135063	Identifier	elem		5134780	0					
ANR	5135064	PrimaryExpression	0		5134780	1					
ANR	5135065	CompoundStatement		33:33:960:960	5134780	1					
ANR	5135066	ExpressionStatement	"r_print_format_num_specifier ( p , addr , bytes , sign )"	1471:5:36612:36663	5134780	0	True				
ANR	5135067	CallExpression	"r_print_format_num_specifier ( p , addr , bytes , sign )"		5134780	0					
ANR	5135068	Callee	r_print_format_num_specifier		5134780	0					
ANR	5135069	Identifier	r_print_format_num_specifier		5134780	0					
ANR	5135070	ArgumentList	p		5134780	1					
ANR	5135071	Argument	p		5134780	0					
ANR	5135072	Identifier	p		5134780	0					
ANR	5135073	Argument	addr		5134780	1					
ANR	5135074	Identifier	addr		5134780	0					
ANR	5135075	Argument	bytes		5134780	2					
ANR	5135076	Identifier	bytes		5134780	0					
ANR	5135077	Argument	sign		5134780	3					
ANR	5135078	Identifier	sign		5134780	0					
ANR	5135079	IfStatement	if ( elem == 0 )		5134780	1					
ANR	5135080	Condition	elem == 0	1472:9:36674:36682	5134780	0	True				
ANR	5135081	EqualityExpression	elem == 0		5134780	0		==			
ANR	5135082	Identifier	elem		5134780	0					
ANR	5135083	PrimaryExpression	0		5134780	1					
ANR	5135084	CompoundStatement		35:20:1040:1040	5134780	1					
ANR	5135085	ExpressionStatement	elem = - 2	1473:6:36693:36702	5134780	0	True				
ANR	5135086	AssignmentExpression	elem = - 2		5134780	0		=			
ANR	5135087	Identifier	elem		5134780	0					
ANR	5135088	UnaryOperationExpression	- 2		5134780	1					
ANR	5135089	UnaryOperator	-		5134780	0					
ANR	5135090	PrimaryExpression	2		5134780	1					
ANR	5135091	IfStatement	if ( size != 0 && elem == - 1 )		5134780	2					
ANR	5135092	Condition	size != 0 && elem == - 1	1476:8:36725:36747	5134780	0	True				
ANR	5135093	AndExpression	size != 0 && elem == - 1		5134780	0		&&			
ANR	5135094	EqualityExpression	size != 0		5134780	0		!=			
ANR	5135095	Identifier	size		5134780	0					
ANR	5135096	PrimaryExpression	0		5134780	1					
ANR	5135097	EqualityExpression	elem == - 1		5134780	1		==			
ANR	5135098	Identifier	elem		5134780	0					
ANR	5135099	UnaryOperationExpression	- 1		5134780	1					
ANR	5135100	UnaryOperator	-		5134780	0					
ANR	5135101	PrimaryExpression	1		5134780	1					
ANR	5135102	CompoundStatement		39:33:1105:1105	5134780	1					
ANR	5135103	ExpressionStatement	"p -> cb_printf ( "", "" )"	1477:5:36757:36776	5134780	0	True				
ANR	5135104	CallExpression	"p -> cb_printf ( "", "" )"		5134780	0					
ANR	5135105	Callee	p -> cb_printf		5134780	0					
ANR	5135106	PtrMemberAccess	p -> cb_printf		5134780	0					
ANR	5135107	Identifier	p		5134780	0					
ANR	5135108	Identifier	cb_printf		5134780	1					
ANR	5135109	ArgumentList	""", """		5134780	1					
ANR	5135110	Argument	""", """		5134780	0					
ANR	5135111	PrimaryExpression	""", """		5134780	0					
ANR	5135112	IfStatement	if ( elem > - 1 )		5134780	3					
ANR	5135113	Condition	elem > - 1	1479:8:36792:36800	5134780	0	True				
ANR	5135114	RelationalExpression	elem > - 1		5134780	0		>			
ANR	5135115	Identifier	elem		5134780	0					
ANR	5135116	UnaryOperationExpression	- 1		5134780	1					
ANR	5135117	UnaryOperator	-		5134780	0					
ANR	5135118	PrimaryExpression	1		5134780	1					
ANR	5135119	CompoundStatement		42:19:1158:1158	5134780	1					
ANR	5135120	ExpressionStatement	elem --	1480:5:36810:36816	5134780	0	True				
ANR	5135121	PostIncDecOperationExpression	elem --		5134780	0					
ANR	5135122	Identifier	elem		5134780	0					
ANR	5135123	IncDec	--		5134780	1					
ANR	5135124	ExpressionStatement	i += bytes	1482:4:36828:36838	5134780	4	True				
ANR	5135125	AssignmentExpression	i += bytes		5134780	0		+=			
ANR	5135126	Identifier	i		5134780	0					
ANR	5135127	Identifier	bytes		5134780	1					
ANR	5135128	IfStatement	if ( ! SEEVALUE )		5134780	2					
ANR	5135129	Condition	! SEEVALUE	1484:7:36852:36860	5134780	0	True				
ANR	5135130	UnaryOperationExpression	! SEEVALUE		5134780	0					
ANR	5135131	UnaryOperator	!		5134780	0					
ANR	5135132	Identifier	SEEVALUE		5134780	1					
ANR	5135133	CompoundStatement		47:18:1218:1218	5134780	1					
ANR	5135134	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	1485:4:36869:36888	5134780	0	True				
ANR	5135135	CallExpression	"p -> cb_printf ( "" ]"" )"		5134780	0					
ANR	5135136	Callee	p -> cb_printf		5134780	0					
ANR	5135137	PtrMemberAccess	p -> cb_printf		5134780	0					
ANR	5135138	Identifier	p		5134780	0					
ANR	5135139	Identifier	cb_printf		5134780	1					
ANR	5135140	ArgumentList	""" ]"""		5134780	1					
ANR	5135141	Argument	""" ]"""		5134780	0					
ANR	5135142	PrimaryExpression	""" ]"""		5134780	0					
ANR	5135143	ElseStatement	else		5134780	0					
ANR	5135144	IfStatement	if ( MUSTSEEJSON )		5134780	0					
ANR	5135145	Condition	MUSTSEEJSON	1488:12:36911:36921	5134780	0	True				
ANR	5135146	Identifier	MUSTSEEJSON		5134780	0					
ANR	5135147	CompoundStatement		51:25:1279:1279	5134780	1					
ANR	5135148	IfStatement	if ( size == - 1 )		5134780	0					
ANR	5135149	Condition	size == - 1	1489:6:36932:36941	5134780	0	True				
ANR	5135150	EqualityExpression	size == - 1		5134780	0		==			
ANR	5135151	Identifier	size		5134780	0					
ANR	5135152	UnaryOperationExpression	- 1		5134780	1					
ANR	5135153	UnaryOperator	-		5134780	0					
ANR	5135154	PrimaryExpression	1		5134780	1					
ANR	5135155	CompoundStatement		52:18:1299:1299	5134780	1					
ANR	5135156	ExpressionStatement	"r_print_format_num_specifier ( p , addr , bytes , sign )"	1490:3:36949:37000	5134780	0	True				
ANR	5135157	CallExpression	"r_print_format_num_specifier ( p , addr , bytes , sign )"		5134780	0					
ANR	5135158	Callee	r_print_format_num_specifier		5134780	0					
ANR	5135159	Identifier	r_print_format_num_specifier		5134780	0					
ANR	5135160	ArgumentList	p		5134780	1					
ANR	5135161	Argument	p		5134780	0					
ANR	5135162	Identifier	p		5134780	0					
ANR	5135163	Argument	addr		5134780	1					
ANR	5135164	Identifier	addr		5134780	0					
ANR	5135165	Argument	bytes		5134780	2					
ANR	5135166	Identifier	bytes		5134780	0					
ANR	5135167	Argument	sign		5134780	3					
ANR	5135168	Identifier	sign		5134780	0					
ANR	5135169	ElseStatement	else		5134780	0					
ANR	5135170	CompoundStatement		54:9:1366:1366	5134780	0					
ANR	5135171	ExpressionStatement	"p -> cb_printf ( ""[ "" )"	1492:3:37016:37035	5134780	0	True				
ANR	5135172	CallExpression	"p -> cb_printf ( ""[ "" )"		5134780	0					
ANR	5135173	Callee	p -> cb_printf		5134780	0					
ANR	5135174	PtrMemberAccess	p -> cb_printf		5134780	0					
ANR	5135175	Identifier	p		5134780	0					
ANR	5135176	Identifier	cb_printf		5134780	1					
ANR	5135177	ArgumentList	"""[ """		5134780	1					
ANR	5135178	Argument	"""[ """		5134780	0					
ANR	5135179	PrimaryExpression	"""[ """		5134780	0					
ANR	5135180	WhileStatement	while ( size -- )		5134780	1					
ANR	5135181	Condition	size --	1493:10:37047:37052	5134780	0	True				
ANR	5135182	PostIncDecOperationExpression	size --		5134780	0					
ANR	5135183	Identifier	size		5134780	0					
ANR	5135184	IncDec	--		5134780	1					
ANR	5135185	CompoundStatement		56:18:1410:1410	5134780	1					
ANR	5135186	IfStatement	if ( bytes == 8 )		5134780	0					
ANR	5135187	Condition	bytes == 8	1494:8:37065:37074	5134780	0	True				
ANR	5135188	EqualityExpression	bytes == 8		5134780	0		==			
ANR	5135189	Identifier	bytes		5134780	0					
ANR	5135190	PrimaryExpression	8		5134780	1					
ANR	5135191	CompoundStatement		57:20:1432:1432	5134780	1					
ANR	5135192	ExpressionStatement	"updateAddr ( buf + i , size , endian , NULL , & addr )"	1495:5:37084:37131	5134780	0	True				
ANR	5135193	CallExpression	"updateAddr ( buf + i , size , endian , NULL , & addr )"		5134780	0					
ANR	5135194	Callee	updateAddr		5134780	0					
ANR	5135195	Identifier	updateAddr		5134780	0					
ANR	5135196	ArgumentList	buf + i		5134780	1					
ANR	5135197	Argument	buf + i		5134780	0					
ANR	5135198	AdditiveExpression	buf + i		5134780	0		+			
ANR	5135199	Identifier	buf		5134780	0					
ANR	5135200	Identifier	i		5134780	1					
ANR	5135201	Argument	size		5134780	1					
ANR	5135202	Identifier	size		5134780	0					
ANR	5135203	Argument	endian		5134780	2					
ANR	5135204	Identifier	endian		5134780	0					
ANR	5135205	Argument	NULL		5134780	3					
ANR	5135206	Identifier	NULL		5134780	0					
ANR	5135207	Argument	& addr		5134780	4					
ANR	5135208	UnaryOperationExpression	& addr		5134780	0					
ANR	5135209	UnaryOperator	&		5134780	0					
ANR	5135210	Identifier	addr		5134780	1					
ANR	5135211	ElseStatement	else		5134780	0					
ANR	5135212	CompoundStatement		59:11:1499:1499	5134780	0					
ANR	5135213	ExpressionStatement	"updateAddr ( buf + i , size , endian , & addr , NULL )"	1497:5:37151:37198	5134780	0	True				
ANR	5135214	CallExpression	"updateAddr ( buf + i , size , endian , & addr , NULL )"		5134780	0					
ANR	5135215	Callee	updateAddr		5134780	0					
ANR	5135216	Identifier	updateAddr		5134780	0					
ANR	5135217	ArgumentList	buf + i		5134780	1					
ANR	5135218	Argument	buf + i		5134780	0					
ANR	5135219	AdditiveExpression	buf + i		5134780	0		+			
ANR	5135220	Identifier	buf		5134780	0					
ANR	5135221	Identifier	i		5134780	1					
ANR	5135222	Argument	size		5134780	1					
ANR	5135223	Identifier	size		5134780	0					
ANR	5135224	Argument	endian		5134780	2					
ANR	5135225	Identifier	endian		5134780	0					
ANR	5135226	Argument	& addr		5134780	3					
ANR	5135227	UnaryOperationExpression	& addr		5134780	0					
ANR	5135228	UnaryOperator	&		5134780	0					
ANR	5135229	Identifier	addr		5134780	1					
ANR	5135230	Argument	NULL		5134780	4					
ANR	5135231	Identifier	NULL		5134780	0					
ANR	5135232	IfStatement	if ( elem == - 1 || elem == 0 )		5134780	1					
ANR	5135233	Condition	elem == - 1 || elem == 0	1499:8:37214:37236	5134780	0	True				
ANR	5135234	OrExpression	elem == - 1 || elem == 0		5134780	0		||			
ANR	5135235	EqualityExpression	elem == - 1		5134780	0		==			
ANR	5135236	Identifier	elem		5134780	0					
ANR	5135237	UnaryOperationExpression	- 1		5134780	1					
ANR	5135238	UnaryOperator	-		5134780	0					
ANR	5135239	PrimaryExpression	1		5134780	1					
ANR	5135240	EqualityExpression	elem == 0		5134780	1		==			
ANR	5135241	Identifier	elem		5134780	0					
ANR	5135242	PrimaryExpression	0		5134780	1					
ANR	5135243	CompoundStatement		62:33:1594:1594	5134780	1					
ANR	5135244	ExpressionStatement	"r_print_format_num_specifier ( p , addr , bytes , sign )"	1500:5:37246:37297	5134780	0	True				
ANR	5135245	CallExpression	"r_print_format_num_specifier ( p , addr , bytes , sign )"		5134780	0					
ANR	5135246	Callee	r_print_format_num_specifier		5134780	0					
ANR	5135247	Identifier	r_print_format_num_specifier		5134780	0					
ANR	5135248	ArgumentList	p		5134780	1					
ANR	5135249	Argument	p		5134780	0					
ANR	5135250	Identifier	p		5134780	0					
ANR	5135251	Argument	addr		5134780	1					
ANR	5135252	Identifier	addr		5134780	0					
ANR	5135253	Argument	bytes		5134780	2					
ANR	5135254	Identifier	bytes		5134780	0					
ANR	5135255	Argument	sign		5134780	3					
ANR	5135256	Identifier	sign		5134780	0					
ANR	5135257	IfStatement	if ( elem == 0 )		5134780	1					
ANR	5135258	Condition	elem == 0	1501:9:37308:37316	5134780	0	True				
ANR	5135259	EqualityExpression	elem == 0		5134780	0		==			
ANR	5135260	Identifier	elem		5134780	0					
ANR	5135261	PrimaryExpression	0		5134780	1					
ANR	5135262	CompoundStatement		64:20:1674:1674	5134780	1					
ANR	5135263	ExpressionStatement	elem = - 2	1502:6:37327:37336	5134780	0	True				
ANR	5135264	AssignmentExpression	elem = - 2		5134780	0		=			
ANR	5135265	Identifier	elem		5134780	0					
ANR	5135266	UnaryOperationExpression	- 2		5134780	1					
ANR	5135267	UnaryOperator	-		5134780	0					
ANR	5135268	PrimaryExpression	2		5134780	1					
ANR	5135269	IfStatement	if ( size != 0 && elem == - 1 )		5134780	2					
ANR	5135270	Condition	size != 0 && elem == - 1	1505:8:37359:37381	5134780	0	True				
ANR	5135271	AndExpression	size != 0 && elem == - 1		5134780	0		&&			
ANR	5135272	EqualityExpression	size != 0		5134780	0		!=			
ANR	5135273	Identifier	size		5134780	0					
ANR	5135274	PrimaryExpression	0		5134780	1					
ANR	5135275	EqualityExpression	elem == - 1		5134780	1		==			
ANR	5135276	Identifier	elem		5134780	0					
ANR	5135277	UnaryOperationExpression	- 1		5134780	1					
ANR	5135278	UnaryOperator	-		5134780	0					
ANR	5135279	PrimaryExpression	1		5134780	1					
ANR	5135280	CompoundStatement		68:33:1739:1739	5134780	1					
ANR	5135281	ExpressionStatement	"p -> cb_printf ( "", "" )"	1506:5:37391:37410	5134780	0	True				
ANR	5135282	CallExpression	"p -> cb_printf ( "", "" )"		5134780	0					
ANR	5135283	Callee	p -> cb_printf		5134780	0					
ANR	5135284	PtrMemberAccess	p -> cb_printf		5134780	0					
ANR	5135285	Identifier	p		5134780	0					
ANR	5135286	Identifier	cb_printf		5134780	1					
ANR	5135287	ArgumentList	""", """		5134780	1					
ANR	5135288	Argument	""", """		5134780	0					
ANR	5135289	PrimaryExpression	""", """		5134780	0					
ANR	5135290	IfStatement	if ( elem > - 1 )		5134780	3					
ANR	5135291	Condition	elem > - 1	1508:8:37426:37434	5134780	0	True				
ANR	5135292	RelationalExpression	elem > - 1		5134780	0		>			
ANR	5135293	Identifier	elem		5134780	0					
ANR	5135294	UnaryOperationExpression	- 1		5134780	1					
ANR	5135295	UnaryOperator	-		5134780	0					
ANR	5135296	PrimaryExpression	1		5134780	1					
ANR	5135297	CompoundStatement		71:19:1792:1792	5134780	1					
ANR	5135298	ExpressionStatement	elem --	1509:5:37444:37450	5134780	0	True				
ANR	5135299	PostIncDecOperationExpression	elem --		5134780	0					
ANR	5135300	Identifier	elem		5134780	0					
ANR	5135301	IncDec	--		5134780	1					
ANR	5135302	ExpressionStatement	i += bytes	1511:4:37462:37472	5134780	4	True				
ANR	5135303	AssignmentExpression	i += bytes		5134780	0		+=			
ANR	5135304	Identifier	i		5134780	0					
ANR	5135305	Identifier	bytes		5134780	1					
ANR	5135306	ExpressionStatement	"p -> cb_printf ( "" ]"" )"	1513:3:37482:37501	5134780	2	True				
ANR	5135307	CallExpression	"p -> cb_printf ( "" ]"" )"		5134780	0					
ANR	5135308	Callee	p -> cb_printf		5134780	0					
ANR	5135309	PtrMemberAccess	p -> cb_printf		5134780	0					
ANR	5135310	Identifier	p		5134780	0					
ANR	5135311	Identifier	cb_printf		5134780	1					
ANR	5135312	ArgumentList	""" ]"""		5134780	1					
ANR	5135313	Argument	""" ]"""		5134780	0					
ANR	5135314	PrimaryExpression	""" ]"""		5134780	0					
ANR	5135315	ExpressionStatement	"p -> cb_printf ( ""}"" )"	1515:2:37509:37527	5134780	1	True				
ANR	5135316	CallExpression	"p -> cb_printf ( ""}"" )"		5134780	0					
ANR	5135317	Callee	p -> cb_printf		5134780	0					
ANR	5135318	PtrMemberAccess	p -> cb_printf		5134780	0					
ANR	5135319	Identifier	p		5134780	0					
ANR	5135320	Identifier	cb_printf		5134780	1					
ANR	5135321	ArgumentList	"""}"""		5134780	1					
ANR	5135322	Argument	"""}"""		5134780	0					
ANR	5135323	PrimaryExpression	"""}"""		5134780	0					
ANR	5135324	ReturnType	static void		5134780	1					
ANR	5135325	Identifier	r_print_format_num		5134780	2					
ANR	5135326	ParameterList	"const RPrint * p , int endian , int mode , const char * setval , ut64 seeki , ut8 * buf , int i , int bytes , int sign , int size"		5134780	3					
ANR	5135327	Parameter	const RPrint * p	1438:31:35525:35539	5134780	0	True				
ANR	5135328	ParameterType	const RPrint *		5134780	0					
ANR	5135329	Identifier	p		5134780	1					
ANR	5135330	Parameter	int endian	1438:48:35542:35551	5134780	1	True				
ANR	5135331	ParameterType	int		5134780	0					
ANR	5135332	Identifier	endian		5134780	1					
ANR	5135333	Parameter	int mode	1438:60:35554:35561	5134780	2	True				
ANR	5135334	ParameterType	int		5134780	0					
ANR	5135335	Identifier	mode		5134780	1					
ANR	5135336	Parameter	const char * setval	1438:70:35564:35581	5134780	3	True				
ANR	5135337	ParameterType	const char *		5134780	0					
ANR	5135338	Identifier	setval		5134780	1					
ANR	5135339	Parameter	ut64 seeki	1438:90:35584:35593	5134780	4	True				
ANR	5135340	ParameterType	ut64		5134780	0					
ANR	5135341	Identifier	seeki		5134780	1					
ANR	5135342	Parameter	ut8 * buf	1438:102:35596:35603	5134780	5	True				
ANR	5135343	ParameterType	ut8 *		5134780	0					
ANR	5135344	Identifier	buf		5134780	1					
ANR	5135345	Parameter	int i	1438:112:35606:35610	5134780	6	True				
ANR	5135346	ParameterType	int		5134780	0					
ANR	5135347	Identifier	i		5134780	1					
ANR	5135348	Parameter	int bytes	1438:119:35613:35621	5134780	7	True				
ANR	5135349	ParameterType	int		5134780	0					
ANR	5135350	Identifier	bytes		5134780	1					
ANR	5135351	Parameter	int sign	1438:130:35624:35631	5134780	8	True				
ANR	5135352	ParameterType	int		5134780	0					
ANR	5135353	Identifier	sign		5134780	1					
ANR	5135354	Parameter	int size	1438:140:35634:35641	5134780	9	True				
ANR	5135355	ParameterType	int		5134780	0					
ANR	5135356	Identifier	size		5134780	1					
ANR	5135357	CFGEntryNode	ENTRY		5134780		True				
ANR	5135358	CFGExitNode	EXIT		5134780		True				
ANR	5135359	Symbol	elem		5134780						
ANR	5135360	Symbol	NULL		5134780						
ANR	5135361	Symbol	& addr		5134780						
ANR	5135362	Symbol	MUSTSEEJSON		5134780						
ANR	5135363	Symbol	MUSTSEESTRUCT		5134780						
ANR	5135364	Symbol	sign		5134780						
ANR	5135365	Symbol	i		5134780						
ANR	5135366	Symbol	ISQUIET		5134780						
ANR	5135367	Symbol	endian		5134780						
ANR	5135368	Symbol	MUSTSEE		5134780						
ANR	5135369	Symbol	p		5134780						
ANR	5135370	Symbol	mode		5134780						
ANR	5135371	Symbol	ARRAYINDEX_COEF		5134780						
ANR	5135372	Symbol	buf		5134780						
ANR	5135373	Symbol	size		5134780						
ANR	5135374	Symbol	seeki		5134780						
ANR	5135375	Symbol	bytes		5134780						
ANR	5135376	Symbol	SEEVALUE		5134780						
ANR	5135377	Symbol	R_PRINT_DOT		5134780						
ANR	5135378	Symbol	setval		5134780						
ANR	5135379	Symbol	addr		5134780						
ANR	5135380	Symbol	MUSTSET		5134780						
ANR	5135381	Function	r_print_format_byname	1519:6:37541:37654							
ANR	5135382	FunctionDef	"r_print_format_byname (RPrint * p , const char * name)"		5135381	0					
ANR	5135383	CompoundStatement		1519:69:37604:37654	5135381	0					
ANR	5135384	ReturnStatement	"return sdb_const_get ( p -> formats , name , NULL ) ;"	1520:1:37607:37652	5135381	0	True				
ANR	5135385	CallExpression	"sdb_const_get ( p -> formats , name , NULL )"		5135381	0					
ANR	5135386	Callee	sdb_const_get		5135381	0					
ANR	5135387	Identifier	sdb_const_get		5135381	0					
ANR	5135388	ArgumentList	p -> formats		5135381	1					
ANR	5135389	Argument	p -> formats		5135381	0					
ANR	5135390	PtrMemberAccess	p -> formats		5135381	0					
ANR	5135391	Identifier	p		5135381	0					
ANR	5135392	Identifier	formats		5135381	1					
ANR	5135393	Argument	name		5135381	1					
ANR	5135394	Identifier	name		5135381	0					
ANR	5135395	Argument	NULL		5135381	2					
ANR	5135396	Identifier	NULL		5135381	0					
ANR	5135397	ReturnType	const char *		5135381	1					
ANR	5135398	Identifier	r_print_format_byname		5135381	2					
ANR	5135399	ParameterList	"RPrint * p , const char * name"		5135381	3					
ANR	5135400	Parameter	RPrint * p	1519:40:37575:37583	5135381	0	True				
ANR	5135401	ParameterType	RPrint *		5135381	0					
ANR	5135402	Identifier	p		5135381	1					
ANR	5135403	Parameter	const char * name	1519:51:37586:37601	5135381	1	True				
ANR	5135404	ParameterType	const char *		5135381	0					
ANR	5135405	Identifier	name		5135381	1					
ANR	5135406	CFGEntryNode	ENTRY		5135381		True				
ANR	5135407	CFGExitNode	EXIT		5135381		True				
ANR	5135408	Symbol	p		5135381						
ANR	5135409	Symbol	p -> formats		5135381						
ANR	5135410	Symbol	NULL		5135381						
ANR	5135411	Symbol	name		5135381						
ANR	5135412	Symbol	* p		5135381						
ANR	5135413	Symbol	sdb_const_get		5135381						
ANR	5135414	Function	r_print_format_struct_size	1524:0:37737:42636							
ANR	5135415	FunctionDef	"r_print_format_struct_size (RPrint * p , const char * f , int mode , int n)"		5135414	0					
ANR	5135416	CompoundStatement		1524:80:37817:42636	5135414	0					
ANR	5135417	IdentifierDeclStatement	"char * end , * args , * fmt ;"	1525:1:37820:37842	5135414	0	True				
ANR	5135418	IdentifierDecl	* end		5135414	0					
ANR	5135419	IdentifierDeclType	char *		5135414	0					
ANR	5135420	Identifier	end		5135414	1					
ANR	5135421	IdentifierDecl	* args		5135414	1					
ANR	5135422	IdentifierDeclType	char *		5135414	0					
ANR	5135423	Identifier	args		5135414	1					
ANR	5135424	IdentifierDecl	* fmt		5135414	2					
ANR	5135425	IdentifierDeclType	char *		5135414	0					
ANR	5135426	Identifier	fmt		5135414	1					
ANR	5135427	IdentifierDeclStatement	"int size = 0 , tabsize = 0 , i , idx = 0 , biggest = 0 , fmt_len = 0 , times = 1 ;"	1526:1:37845:37919	5135414	1	True				
ANR	5135428	IdentifierDecl	size = 0		5135414	0					
ANR	5135429	IdentifierDeclType	int		5135414	0					
ANR	5135430	Identifier	size		5135414	1					
ANR	5135431	AssignmentExpression	size = 0		5135414	2		=			
ANR	5135432	Identifier	size		5135414	0					
ANR	5135433	PrimaryExpression	0		5135414	1					
ANR	5135434	IdentifierDecl	tabsize = 0		5135414	1					
ANR	5135435	IdentifierDeclType	int		5135414	0					
ANR	5135436	Identifier	tabsize		5135414	1					
ANR	5135437	AssignmentExpression	tabsize = 0		5135414	2		=			
ANR	5135438	Identifier	tabsize		5135414	0					
ANR	5135439	PrimaryExpression	0		5135414	1					
ANR	5135440	IdentifierDecl	i		5135414	2					
ANR	5135441	IdentifierDeclType	int		5135414	0					
ANR	5135442	Identifier	i		5135414	1					
ANR	5135443	IdentifierDecl	idx = 0		5135414	3					
ANR	5135444	IdentifierDeclType	int		5135414	0					
ANR	5135445	Identifier	idx		5135414	1					
ANR	5135446	AssignmentExpression	idx = 0		5135414	2		=			
ANR	5135447	Identifier	idx		5135414	0					
ANR	5135448	PrimaryExpression	0		5135414	1					
ANR	5135449	IdentifierDecl	biggest = 0		5135414	4					
ANR	5135450	IdentifierDeclType	int		5135414	0					
ANR	5135451	Identifier	biggest		5135414	1					
ANR	5135452	AssignmentExpression	biggest = 0		5135414	2		=			
ANR	5135453	Identifier	biggest		5135414	0					
ANR	5135454	PrimaryExpression	0		5135414	1					
ANR	5135455	IdentifierDecl	fmt_len = 0		5135414	5					
ANR	5135456	IdentifierDeclType	int		5135414	0					
ANR	5135457	Identifier	fmt_len		5135414	1					
ANR	5135458	AssignmentExpression	fmt_len = 0		5135414	2		=			
ANR	5135459	Identifier	fmt_len		5135414	0					
ANR	5135460	PrimaryExpression	0		5135414	1					
ANR	5135461	IdentifierDecl	times = 1		5135414	6					
ANR	5135462	IdentifierDeclType	int		5135414	0					
ANR	5135463	Identifier	times		5135414	1					
ANR	5135464	AssignmentExpression	times = 1		5135414	2		=			
ANR	5135465	Identifier	times		5135414	0					
ANR	5135466	PrimaryExpression	1		5135414	1					
ANR	5135467	IdentifierDeclStatement	bool tabsize_set = false ;	1527:1:37922:37946	5135414	2	True				
ANR	5135468	IdentifierDecl	tabsize_set = false		5135414	0					
ANR	5135469	IdentifierDeclType	bool		5135414	0					
ANR	5135470	Identifier	tabsize_set		5135414	1					
ANR	5135471	AssignmentExpression	tabsize_set = false		5135414	2		=			
ANR	5135472	Identifier	false		5135414	0					
ANR	5135473	Identifier	false		5135414	1					
ANR	5135474	IfStatement	if ( ! f )		5135414	3					
ANR	5135475	Condition	! f	1528:5:37953:37954	5135414	0	True				
ANR	5135476	UnaryOperationExpression	! f		5135414	0					
ANR	5135477	UnaryOperator	!		5135414	0					
ANR	5135478	Identifier	f		5135414	1					
ANR	5135479	CompoundStatement		5:9:139:139	5135414	1					
ANR	5135480	ReturnStatement	return - 1 ;	1529:2:37961:37970	5135414	0	True				
ANR	5135481	UnaryOperationExpression	- 1		5135414	0					
ANR	5135482	UnaryOperator	-		5135414	0					
ANR	5135483	PrimaryExpression	1		5135414	1					
ANR	5135484	IfStatement	if ( n >= 5 )		5135414	4					
ANR	5135485	Condition	n >= 5	1531:5:37980:37985	5135414	0	True				
ANR	5135486	RelationalExpression	n >= 5		5135414	0		>=			
ANR	5135487	Identifier	n		5135414	0					
ANR	5135488	PrimaryExpression	5		5135414	1					
ANR	5135489	CompoundStatement		8:13:170:170	5135414	1					
ANR	5135490	ReturnStatement	return 0 ;	1532:2:38053:38061	5135414	0	True				
ANR	5135491	PrimaryExpression	0		5135414	0					
ANR	5135492	IdentifierDeclStatement	"const char * fmt2 = sdb_get ( p -> formats , f , NULL ) ;"	1534:1:38067:38115	5135414	5	True				
ANR	5135493	IdentifierDecl	"* fmt2 = sdb_get ( p -> formats , f , NULL )"		5135414	0					
ANR	5135494	IdentifierDeclType	const char *		5135414	0					
ANR	5135495	Identifier	fmt2		5135414	1					
ANR	5135496	AssignmentExpression	"* fmt2 = sdb_get ( p -> formats , f , NULL )"		5135414	2		=			
ANR	5135497	Identifier	fmt2		5135414	0					
ANR	5135498	CallExpression	"sdb_get ( p -> formats , f , NULL )"		5135414	1					
ANR	5135499	Callee	sdb_get		5135414	0					
ANR	5135500	Identifier	sdb_get		5135414	0					
ANR	5135501	ArgumentList	p -> formats		5135414	1					
ANR	5135502	Argument	p -> formats		5135414	0					
ANR	5135503	PtrMemberAccess	p -> formats		5135414	0					
ANR	5135504	Identifier	p		5135414	0					
ANR	5135505	Identifier	formats		5135414	1					
ANR	5135506	Argument	f		5135414	1					
ANR	5135507	Identifier	f		5135414	0					
ANR	5135508	Argument	NULL		5135414	2					
ANR	5135509	Identifier	NULL		5135414	0					
ANR	5135510	IfStatement	if ( ! fmt2 )		5135414	6					
ANR	5135511	Condition	! fmt2	1535:5:38122:38126	5135414	0	True				
ANR	5135512	UnaryOperationExpression	! fmt2		5135414	0					
ANR	5135513	UnaryOperator	!		5135414	0					
ANR	5135514	Identifier	fmt2		5135414	1					
ANR	5135515	CompoundStatement		12:12:311:311	5135414	1					
ANR	5135516	ExpressionStatement	fmt2 = f	1536:2:38133:38141	5135414	0	True				
ANR	5135517	AssignmentExpression	fmt2 = f		5135414	0		=			
ANR	5135518	Identifier	fmt2		5135414	0					
ANR	5135519	Identifier	f		5135414	1					
ANR	5135520	IdentifierDeclStatement	char * o = strdup ( fmt2 ) ;	1538:1:38147:38170	5135414	7	True				
ANR	5135521	IdentifierDecl	* o = strdup ( fmt2 )		5135414	0					
ANR	5135522	IdentifierDeclType	char *		5135414	0					
ANR	5135523	Identifier	o		5135414	1					
ANR	5135524	AssignmentExpression	* o = strdup ( fmt2 )		5135414	2		=			
ANR	5135525	Identifier	o		5135414	0					
ANR	5135526	CallExpression	strdup ( fmt2 )		5135414	1					
ANR	5135527	Callee	strdup		5135414	0					
ANR	5135528	Identifier	strdup		5135414	0					
ANR	5135529	ArgumentList	fmt2		5135414	1					
ANR	5135530	Argument	fmt2		5135414	0					
ANR	5135531	Identifier	fmt2		5135414	0					
ANR	5135532	IfStatement	if ( ! o )		5135414	8					
ANR	5135533	Condition	! o	1539:5:38177:38178	5135414	0	True				
ANR	5135534	UnaryOperationExpression	! o		5135414	0					
ANR	5135535	UnaryOperator	!		5135414	0					
ANR	5135536	Identifier	o		5135414	1					
ANR	5135537	CompoundStatement		16:9:363:363	5135414	1					
ANR	5135538	ReturnStatement	return - 1 ;	1540:2:38185:38194	5135414	0	True				
ANR	5135539	UnaryOperationExpression	- 1		5135414	0					
ANR	5135540	UnaryOperator	-		5135414	0					
ANR	5135541	PrimaryExpression	1		5135414	1					
ANR	5135542	ExpressionStatement	"end = strchr ( o , ' ' )"	1542:1:38200:38221	5135414	9	True				
ANR	5135543	AssignmentExpression	"end = strchr ( o , ' ' )"		5135414	0		=			
ANR	5135544	Identifier	end		5135414	0					
ANR	5135545	CallExpression	"strchr ( o , ' ' )"		5135414	1					
ANR	5135546	Callee	strchr		5135414	0					
ANR	5135547	Identifier	strchr		5135414	0					
ANR	5135548	ArgumentList	o		5135414	1					
ANR	5135549	Argument	o		5135414	0					
ANR	5135550	Identifier	o		5135414	0					
ANR	5135551	Argument	' '		5135414	1					
ANR	5135552	PrimaryExpression	' '		5135414	0					
ANR	5135553	ExpressionStatement	fmt = o	1543:1:38224:38231	5135414	10	True				
ANR	5135554	AssignmentExpression	fmt = o		5135414	0		=			
ANR	5135555	Identifier	fmt		5135414	0					
ANR	5135556	Identifier	o		5135414	1					
ANR	5135557	IfStatement	"if ( ! end && ! ( end = strchr ( o , '\\0' ) ) )"		5135414	11					
ANR	5135558	Condition	"! end && ! ( end = strchr ( o , '\\0' ) )"	1544:5:38238:38270	5135414	0	True				
ANR	5135559	AndExpression	"! end && ! ( end = strchr ( o , '\\0' ) )"		5135414	0		&&			
ANR	5135560	UnaryOperationExpression	! end		5135414	0					
ANR	5135561	UnaryOperator	!		5135414	0					
ANR	5135562	Identifier	end		5135414	1					
ANR	5135563	UnaryOperationExpression	"! ( end = strchr ( o , '\\0' ) )"		5135414	1					
ANR	5135564	UnaryOperator	!		5135414	0					
ANR	5135565	AssignmentExpression	"end = strchr ( o , '\\0' )"		5135414	1		=			
ANR	5135566	Identifier	end		5135414	0					
ANR	5135567	CallExpression	"strchr ( o , '\\0' )"		5135414	1					
ANR	5135568	Callee	strchr		5135414	0					
ANR	5135569	Identifier	strchr		5135414	0					
ANR	5135570	ArgumentList	o		5135414	1					
ANR	5135571	Argument	o		5135414	0					
ANR	5135572	Identifier	o		5135414	0					
ANR	5135573	Argument	'\\0'		5135414	1					
ANR	5135574	PrimaryExpression	'\\0'		5135414	0					
ANR	5135575	CompoundStatement		21:40:455:455	5135414	1					
ANR	5135576	ExpressionStatement	free ( o )	1545:2:38277:38285	5135414	0	True				
ANR	5135577	CallExpression	free ( o )		5135414	0					
ANR	5135578	Callee	free		5135414	0					
ANR	5135579	Identifier	free		5135414	0					
ANR	5135580	ArgumentList	o		5135414	1					
ANR	5135581	Argument	o		5135414	0					
ANR	5135582	Identifier	o		5135414	0					
ANR	5135583	ReturnStatement	return - 1 ;	1546:2:38289:38298	5135414	1	True				
ANR	5135584	UnaryOperationExpression	- 1		5135414	0					
ANR	5135585	UnaryOperator	-		5135414	0					
ANR	5135586	PrimaryExpression	1		5135414	1					
ANR	5135587	IfStatement	if ( * end )		5135414	12					
ANR	5135588	Condition	* end	1548:5:38308:38311	5135414	0	True				
ANR	5135589	UnaryOperationExpression	* end		5135414	0					
ANR	5135590	UnaryOperator	*		5135414	0					
ANR	5135591	Identifier	end		5135414	1					
ANR	5135592	CompoundStatement		25:11:496:496	5135414	1					
ANR	5135593	ExpressionStatement	* end = 0	1549:2:38318:38326	5135414	0	True				
ANR	5135594	AssignmentExpression	* end = 0		5135414	0		=			
ANR	5135595	UnaryOperationExpression	* end		5135414	0					
ANR	5135596	UnaryOperator	*		5135414	0					
ANR	5135597	Identifier	end		5135414	1					
ANR	5135598	PrimaryExpression	0		5135414	1					
ANR	5135599	ExpressionStatement	args = strdup ( end + 1 )	1550:2:38330:38353	5135414	1	True				
ANR	5135600	AssignmentExpression	args = strdup ( end + 1 )		5135414	0		=			
ANR	5135601	Identifier	args		5135414	0					
ANR	5135602	CallExpression	strdup ( end + 1 )		5135414	1					
ANR	5135603	Callee	strdup		5135414	0					
ANR	5135604	Identifier	strdup		5135414	0					
ANR	5135605	ArgumentList	end + 1		5135414	1					
ANR	5135606	Argument	end + 1		5135414	0					
ANR	5135607	AdditiveExpression	end + 1		5135414	0		+			
ANR	5135608	Identifier	end		5135414	0					
ANR	5135609	PrimaryExpression	1		5135414	1					
ANR	5135610	ElseStatement	else		5135414	0					
ANR	5135611	CompoundStatement		28:8:545:545	5135414	0					
ANR	5135612	ExpressionStatement	"args = strdup ( """" )"	1552:2:38367:38385	5135414	0	True				
ANR	5135613	AssignmentExpression	"args = strdup ( """" )"		5135414	0		=			
ANR	5135614	Identifier	args		5135414	0					
ANR	5135615	CallExpression	"strdup ( """" )"		5135414	1					
ANR	5135616	Callee	strdup		5135414	0					
ANR	5135617	Identifier	strdup		5135414	0					
ANR	5135618	ArgumentList	""""""		5135414	1					
ANR	5135619	Argument	""""""		5135414	0					
ANR	5135620	PrimaryExpression	""""""		5135414	0					
ANR	5135621	ExpressionStatement	i = 0	1555:1:38392:38397	5135414	13	True				
ANR	5135622	AssignmentExpression	i = 0		5135414	0		=			
ANR	5135623	Identifier	i		5135414	0					
ANR	5135624	PrimaryExpression	0		5135414	1					
ANR	5135625	IfStatement	if ( fmt [ i ] == '{' )		5135414	14					
ANR	5135626	Condition	fmt [ i ] == '{'	1556:5:38404:38416	5135414	0	True				
ANR	5135627	EqualityExpression	fmt [ i ] == '{'		5135414	0		==			
ANR	5135628	ArrayIndexing	fmt [ i ]		5135414	0					
ANR	5135629	Identifier	fmt		5135414	0					
ANR	5135630	Identifier	i		5135414	1					
ANR	5135631	PrimaryExpression	'{'		5135414	1					
ANR	5135632	CompoundStatement		34:2:605:642	5135414	1					
ANR	5135633	IdentifierDeclStatement	"char * end = strchr ( fmt + i + 1 , '}' ) ;"	1557:2:38423:38460	5135414	0	True				
ANR	5135634	IdentifierDecl	"* end = strchr ( fmt + i + 1 , '}' )"		5135414	0					
ANR	5135635	IdentifierDeclType	char *		5135414	0					
ANR	5135636	Identifier	end		5135414	1					
ANR	5135637	AssignmentExpression	"* end = strchr ( fmt + i + 1 , '}' )"		5135414	2		=			
ANR	5135638	Identifier	end		5135414	0					
ANR	5135639	CallExpression	"strchr ( fmt + i + 1 , '}' )"		5135414	1					
ANR	5135640	Callee	strchr		5135414	0					
ANR	5135641	Identifier	strchr		5135414	0					
ANR	5135642	ArgumentList	fmt + i + 1		5135414	1					
ANR	5135643	Argument	fmt + i + 1		5135414	0					
ANR	5135644	AdditiveExpression	fmt + i + 1		5135414	0		+			
ANR	5135645	Identifier	fmt		5135414	0					
ANR	5135646	AdditiveExpression	i + 1		5135414	1		+			
ANR	5135647	Identifier	i		5135414	0					
ANR	5135648	PrimaryExpression	1		5135414	1					
ANR	5135649	Argument	'}'		5135414	1					
ANR	5135650	PrimaryExpression	'}'		5135414	0					
ANR	5135651	IfStatement	if ( ! end )		5135414	1					
ANR	5135652	Condition	! end	1558:6:38468:38471	5135414	0	True				
ANR	5135653	UnaryOperationExpression	! end		5135414	0					
ANR	5135654	UnaryOperator	!		5135414	0					
ANR	5135655	Identifier	end		5135414	1					
ANR	5135656	CompoundStatement		35:12:656:656	5135414	1					
ANR	5135657	ExpressionStatement	"eprintf ( ""No end curly bracket.\\n"" )"	1559:3:38479:38514	5135414	0	True				
ANR	5135658	CallExpression	"eprintf ( ""No end curly bracket.\\n"" )"		5135414	0					
ANR	5135659	Callee	eprintf		5135414	0					
ANR	5135660	Identifier	eprintf		5135414	0					
ANR	5135661	ArgumentList	"""No end curly bracket.\\n"""		5135414	1					
ANR	5135662	Argument	"""No end curly bracket.\\n"""		5135414	0					
ANR	5135663	PrimaryExpression	"""No end curly bracket.\\n"""		5135414	0					
ANR	5135664	ExpressionStatement	free ( o )	1560:3:38519:38527	5135414	1	True				
ANR	5135665	CallExpression	free ( o )		5135414	0					
ANR	5135666	Callee	free		5135414	0					
ANR	5135667	Identifier	free		5135414	0					
ANR	5135668	ArgumentList	o		5135414	1					
ANR	5135669	Argument	o		5135414	0					
ANR	5135670	Identifier	o		5135414	0					
ANR	5135671	ExpressionStatement	free ( args )	1561:3:38532:38543	5135414	2	True				
ANR	5135672	CallExpression	free ( args )		5135414	0					
ANR	5135673	Callee	free		5135414	0					
ANR	5135674	Identifier	free		5135414	0					
ANR	5135675	ArgumentList	args		5135414	1					
ANR	5135676	Argument	args		5135414	0					
ANR	5135677	Identifier	args		5135414	0					
ANR	5135678	ReturnStatement	return - 1 ;	1562:3:38548:38557	5135414	3	True				
ANR	5135679	UnaryOperationExpression	- 1		5135414	0					
ANR	5135680	UnaryOperator	-		5135414	0					
ANR	5135681	PrimaryExpression	1		5135414	1					
ANR	5135682	ExpressionStatement	* end = '\\0'	1564:2:38565:38576	5135414	2	True				
ANR	5135683	AssignmentExpression	* end = '\\0'		5135414	0		=			
ANR	5135684	UnaryOperationExpression	* end		5135414	0					
ANR	5135685	UnaryOperator	*		5135414	0					
ANR	5135686	Identifier	end		5135414	1					
ANR	5135687	PrimaryExpression	'\\0'		5135414	1					
ANR	5135688	ExpressionStatement	"times = r_num_math ( NULL , fmt + i + 1 )"	1565:2:38580:38618	5135414	3	True				
ANR	5135689	AssignmentExpression	"times = r_num_math ( NULL , fmt + i + 1 )"		5135414	0		=			
ANR	5135690	Identifier	times		5135414	0					
ANR	5135691	CallExpression	"r_num_math ( NULL , fmt + i + 1 )"		5135414	1					
ANR	5135692	Callee	r_num_math		5135414	0					
ANR	5135693	Identifier	r_num_math		5135414	0					
ANR	5135694	ArgumentList	NULL		5135414	1					
ANR	5135695	Argument	NULL		5135414	0					
ANR	5135696	Identifier	NULL		5135414	0					
ANR	5135697	Argument	fmt + i + 1		5135414	1					
ANR	5135698	AdditiveExpression	fmt + i + 1		5135414	0		+			
ANR	5135699	Identifier	fmt		5135414	0					
ANR	5135700	AdditiveExpression	i + 1		5135414	1		+			
ANR	5135701	Identifier	i		5135414	0					
ANR	5135702	PrimaryExpression	1		5135414	1					
ANR	5135703	ExpressionStatement	fmt = end + 1	1566:2:38622:38635	5135414	4	True				
ANR	5135704	AssignmentExpression	fmt = end + 1		5135414	0		=			
ANR	5135705	Identifier	fmt		5135414	0					
ANR	5135706	AdditiveExpression	end + 1		5135414	1		+			
ANR	5135707	Identifier	end		5135414	0					
ANR	5135708	PrimaryExpression	1		5135414	1					
ANR	5135709	ExpressionStatement	i = 0	1567:2:38639:38644	5135414	5	True				
ANR	5135710	AssignmentExpression	i = 0		5135414	0		=			
ANR	5135711	Identifier	i		5135414	0					
ANR	5135712	PrimaryExpression	0		5135414	1					
ANR	5135713	IfStatement	if ( fmt [ 0 ] == '0' )		5135414	15					
ANR	5135714	Condition	fmt [ 0 ] == '0'	1569:5:38654:38666	5135414	0	True				
ANR	5135715	EqualityExpression	fmt [ 0 ] == '0'		5135414	0		==			
ANR	5135716	ArrayIndexing	fmt [ 0 ]		5135414	0					
ANR	5135717	Identifier	fmt		5135414	0					
ANR	5135718	PrimaryExpression	0		5135414	1					
ANR	5135719	PrimaryExpression	'0'		5135414	1					
ANR	5135720	CompoundStatement		46:20:851:851	5135414	1					
ANR	5135721	ExpressionStatement	mode |= R_PRINT_UNIONMODE	1570:2:38673:38698	5135414	0	True				
ANR	5135722	AssignmentExpression	mode |= R_PRINT_UNIONMODE		5135414	0		|=			
ANR	5135723	Identifier	mode		5135414	0					
ANR	5135724	Identifier	R_PRINT_UNIONMODE		5135414	1					
ANR	5135725	ExpressionStatement	fmt ++	1571:2:38702:38707	5135414	1	True				
ANR	5135726	PostIncDecOperationExpression	fmt ++		5135414	0					
ANR	5135727	Identifier	fmt		5135414	0					
ANR	5135728	IncDec	++		5135414	1					
ANR	5135729	ElseStatement	else		5135414	0					
ANR	5135730	CompoundStatement		49:8:899:899	5135414	0					
ANR	5135731	ExpressionStatement	mode &= ~R_PRINT_UNIONMODE	1573:2:38721:38747	5135414	0	True				
ANR	5135732	AssignmentExpression	mode &= ~R_PRINT_UNIONMODE		5135414	0		&=			
ANR	5135733	Identifier	mode		5135414	0					
ANR	5135734	Identifier	~R_PRINT_UNIONMODE		5135414	1					
ANR	5135735	IdentifierDeclStatement	int words = r_str_word_set0_stack ( args ) ;	1576:1:38754:38794	5135414	16	True				
ANR	5135736	IdentifierDecl	words = r_str_word_set0_stack ( args )		5135414	0					
ANR	5135737	IdentifierDeclType	int		5135414	0					
ANR	5135738	Identifier	words		5135414	1					
ANR	5135739	AssignmentExpression	words = r_str_word_set0_stack ( args )		5135414	2		=			
ANR	5135740	Identifier	words		5135414	0					
ANR	5135741	CallExpression	r_str_word_set0_stack ( args )		5135414	1					
ANR	5135742	Callee	r_str_word_set0_stack		5135414	0					
ANR	5135743	Identifier	r_str_word_set0_stack		5135414	0					
ANR	5135744	ArgumentList	args		5135414	1					
ANR	5135745	Argument	args		5135414	0					
ANR	5135746	Identifier	args		5135414	0					
ANR	5135747	ExpressionStatement	fmt_len = strlen ( fmt )	1577:1:38797:38819	5135414	17	True				
ANR	5135748	AssignmentExpression	fmt_len = strlen ( fmt )		5135414	0		=			
ANR	5135749	Identifier	fmt_len		5135414	0					
ANR	5135750	CallExpression	strlen ( fmt )		5135414	1					
ANR	5135751	Callee	strlen		5135414	0					
ANR	5135752	Identifier	strlen		5135414	0					
ANR	5135753	ArgumentList	fmt		5135414	1					
ANR	5135754	Argument	fmt		5135414	0					
ANR	5135755	Identifier	fmt		5135414	0					
ANR	5135756	ForStatement	for ( ; i < fmt_len ; i ++ )		5135414	18					
ANR	5135757	Condition	i < fmt_len	1578:8:38829:38839	5135414	0	True				
ANR	5135758	RelationalExpression	i < fmt_len		5135414	0		<			
ANR	5135759	Identifier	i		5135414	0					
ANR	5135760	Identifier	fmt_len		5135414	1					
ANR	5135761	PostIncDecOperationExpression	i ++	1578:21:38842:38844	5135414	1	True				
ANR	5135762	Identifier	i		5135414	0					
ANR	5135763	IncDec	++		5135414	1					
ANR	5135764	CompoundStatement		55:26:1029:1029	5135414	2					
ANR	5135765	IfStatement	if ( fmt [ i ] == '[' )		5135414	0					
ANR	5135766	Condition	fmt [ i ] == '['	1579:6:38855:38867	5135414	0	True				
ANR	5135767	EqualityExpression	fmt [ i ] == '['		5135414	0		==			
ANR	5135768	ArrayIndexing	fmt [ i ]		5135414	0					
ANR	5135769	Identifier	fmt		5135414	0					
ANR	5135770	Identifier	i		5135414	1					
ANR	5135771	PrimaryExpression	'['		5135414	1					
ANR	5135772	CompoundStatement		57:3:1057:1089	5135414	1					
ANR	5135773	IdentifierDeclStatement	"char * end = strchr ( fmt + i , ']' ) ;"	1580:3:38875:38907	5135414	0	True				
ANR	5135774	IdentifierDecl	"* end = strchr ( fmt + i , ']' )"		5135414	0					
ANR	5135775	IdentifierDeclType	char *		5135414	0					
ANR	5135776	Identifier	end		5135414	1					
ANR	5135777	AssignmentExpression	"* end = strchr ( fmt + i , ']' )"		5135414	2		=			
ANR	5135778	Identifier	end		5135414	0					
ANR	5135779	CallExpression	"strchr ( fmt + i , ']' )"		5135414	1					
ANR	5135780	Callee	strchr		5135414	0					
ANR	5135781	Identifier	strchr		5135414	0					
ANR	5135782	ArgumentList	fmt + i		5135414	1					
ANR	5135783	Argument	fmt + i		5135414	0					
ANR	5135784	AdditiveExpression	fmt + i		5135414	0		+			
ANR	5135785	Identifier	fmt		5135414	0					
ANR	5135786	Identifier	i		5135414	1					
ANR	5135787	Argument	']'		5135414	1					
ANR	5135788	PrimaryExpression	']'		5135414	0					
ANR	5135789	IfStatement	if ( ! end )		5135414	1					
ANR	5135790	Condition	! end	1581:7:38916:38919	5135414	0	True				
ANR	5135791	UnaryOperationExpression	! end		5135414	0					
ANR	5135792	UnaryOperator	!		5135414	0					
ANR	5135793	Identifier	end		5135414	1					
ANR	5135794	CompoundStatement		58:13:1104:1104	5135414	1					
ANR	5135795	ExpressionStatement	"eprintf ( ""No end bracket.\\n"" )"	1582:4:38928:38957	5135414	0	True				
ANR	5135796	CallExpression	"eprintf ( ""No end bracket.\\n"" )"		5135414	0					
ANR	5135797	Callee	eprintf		5135414	0					
ANR	5135798	Identifier	eprintf		5135414	0					
ANR	5135799	ArgumentList	"""No end bracket.\\n"""		5135414	1					
ANR	5135800	Argument	"""No end bracket.\\n"""		5135414	0					
ANR	5135801	PrimaryExpression	"""No end bracket.\\n"""		5135414	0					
ANR	5135802	ContinueStatement	continue ;	1583:4:38963:38971	5135414	1	True				
ANR	5135803	ExpressionStatement	* end = '\\0'	1585:3:38981:38992	5135414	2	True				
ANR	5135804	AssignmentExpression	* end = '\\0'		5135414	0		=			
ANR	5135805	UnaryOperationExpression	* end		5135414	0					
ANR	5135806	UnaryOperator	*		5135414	0					
ANR	5135807	Identifier	end		5135414	1					
ANR	5135808	PrimaryExpression	'\\0'		5135414	1					
ANR	5135809	ExpressionStatement	tabsize_set = true	1586:3:38997:39015	5135414	3	True				
ANR	5135810	AssignmentExpression	tabsize_set = true		5135414	0		=			
ANR	5135811	Identifier	tabsize_set		5135414	0					
ANR	5135812	Identifier	true		5135414	1					
ANR	5135813	ExpressionStatement	"tabsize = r_num_math ( NULL , fmt + i + 1 )"	1587:3:39020:39060	5135414	4	True				
ANR	5135814	AssignmentExpression	"tabsize = r_num_math ( NULL , fmt + i + 1 )"		5135414	0		=			
ANR	5135815	Identifier	tabsize		5135414	0					
ANR	5135816	CallExpression	"r_num_math ( NULL , fmt + i + 1 )"		5135414	1					
ANR	5135817	Callee	r_num_math		5135414	0					
ANR	5135818	Identifier	r_num_math		5135414	0					
ANR	5135819	ArgumentList	NULL		5135414	1					
ANR	5135820	Argument	NULL		5135414	0					
ANR	5135821	Identifier	NULL		5135414	0					
ANR	5135822	Argument	fmt + i + 1		5135414	1					
ANR	5135823	AdditiveExpression	fmt + i + 1		5135414	0		+			
ANR	5135824	Identifier	fmt		5135414	0					
ANR	5135825	AdditiveExpression	i + 1		5135414	1		+			
ANR	5135826	Identifier	i		5135414	0					
ANR	5135827	PrimaryExpression	1		5135414	1					
ANR	5135828	ExpressionStatement	* end = ']'	1588:3:39065:39075	5135414	5	True				
ANR	5135829	AssignmentExpression	* end = ']'		5135414	0		=			
ANR	5135830	UnaryOperationExpression	* end		5135414	0					
ANR	5135831	UnaryOperator	*		5135414	0					
ANR	5135832	Identifier	end		5135414	1					
ANR	5135833	PrimaryExpression	']'		5135414	1					
ANR	5135834	WhileStatement	while ( fmt [ i ++ ] != ']' )		5135414	6					
ANR	5135835	Condition	fmt [ i ++ ] != ']'	1589:10:39087:39101	5135414	0	True				
ANR	5135836	EqualityExpression	fmt [ i ++ ] != ']'		5135414	0		!=			
ANR	5135837	ArrayIndexing	fmt [ i ++ ]		5135414	0					
ANR	5135838	Identifier	fmt		5135414	0					
ANR	5135839	PostIncDecOperationExpression	i ++		5135414	1					
ANR	5135840	Identifier	i		5135414	0					
ANR	5135841	IncDec	++		5135414	1					
ANR	5135842	PrimaryExpression	']'		5135414	1					
ANR	5135843	CompoundStatement		66:27:1286:1286	5135414	1					
ANR	5135844	ExpressionStatement		1590:4:39110:39110	5135414	0	True				
ANR	5135845	ElseStatement	else		5135414	0					
ANR	5135846	CompoundStatement		69:9:1308:1308	5135414	0					
ANR	5135847	ExpressionStatement	tabsize = 1	1593:3:39131:39142	5135414	0	True				
ANR	5135848	AssignmentExpression	tabsize = 1		5135414	0		=			
ANR	5135849	Identifier	tabsize		5135414	0					
ANR	5135850	PrimaryExpression	1		5135414	1					
ANR	5135851	SwitchStatement	switch ( fmt [ i ] )		5135414	1					
ANR	5135852	Condition	fmt [ i ]	1596:10:39159:39164	5135414	0	True				
ANR	5135853	ArrayIndexing	fmt [ i ]		5135414	0					
ANR	5135854	Identifier	fmt		5135414	0					
ANR	5135855	Identifier	i		5135414	1					
ANR	5135856	CompoundStatement		73:18:1349:1349	5135414	1					
ANR	5135857	Label	case '.' :	1597:2:39171:39179	5135414	0	True				
ANR	5135858	ExpressionStatement	idx --	1598:3:39184:39189	5135414	1	True				
ANR	5135859	PostIncDecOperationExpression	idx --		5135414	0					
ANR	5135860	Identifier	idx		5135414	0					
ANR	5135861	IncDec	--		5135414	1					
ANR	5135862	Label	case 'c' :	1599:2:39193:39201	5135414	2	True				
ANR	5135863	Label	case 'b' :	1600:2:39205:39213	5135414	3	True				
ANR	5135864	Label	case 'X' :	1601:2:39217:39225	5135414	4	True				
ANR	5135865	ExpressionStatement	size += tabsize * 1	1602:3:39230:39249	5135414	5	True				
ANR	5135866	AssignmentExpression	size += tabsize * 1		5135414	0		+=			
ANR	5135867	Identifier	size		5135414	0					
ANR	5135868	MultiplicativeExpression	tabsize * 1		5135414	1		*			
ANR	5135869	Identifier	tabsize		5135414	0					
ANR	5135870	PrimaryExpression	1		5135414	1					
ANR	5135871	BreakStatement	break ;	1603:3:39254:39259	5135414	6	True				
ANR	5135872	Label	case 'w' :	1604:2:39263:39271	5135414	7	True				
ANR	5135873	ExpressionStatement	size += tabsize * 2	1605:3:39276:39295	5135414	8	True				
ANR	5135874	AssignmentExpression	size += tabsize * 2		5135414	0		+=			
ANR	5135875	Identifier	size		5135414	0					
ANR	5135876	MultiplicativeExpression	tabsize * 2		5135414	1		*			
ANR	5135877	Identifier	tabsize		5135414	0					
ANR	5135878	PrimaryExpression	2		5135414	1					
ANR	5135879	BreakStatement	break ;	1606:3:39300:39305	5135414	9	True				
ANR	5135880	Label	case ':' :	1607:2:39309:39317	5135414	10	True				
ANR	5135881	ExpressionStatement	idx --	1608:3:39322:39327	5135414	11	True				
ANR	5135882	PostIncDecOperationExpression	idx --		5135414	0					
ANR	5135883	Identifier	idx		5135414	0					
ANR	5135884	IncDec	--		5135414	1					
ANR	5135885	Label	case 'd' :	1609:2:39331:39339	5135414	12	True				
ANR	5135886	Label	case 'o' :	1610:2:39343:39351	5135414	13	True				
ANR	5135887	Label	case 'i' :	1611:2:39355:39363	5135414	14	True				
ANR	5135888	Label	case 'x' :	1612:2:39367:39375	5135414	15	True				
ANR	5135889	Label	case 'f' :	1613:2:39379:39387	5135414	16	True				
ANR	5135890	Label	case 's' :	1614:2:39391:39399	5135414	17	True				
ANR	5135891	Label	case 't' :	1615:2:39403:39411	5135414	18	True				
ANR	5135892	ExpressionStatement	size += tabsize * 4	1616:3:39416:39435	5135414	19	True				
ANR	5135893	AssignmentExpression	size += tabsize * 4		5135414	0		+=			
ANR	5135894	Identifier	size		5135414	0					
ANR	5135895	MultiplicativeExpression	tabsize * 4		5135414	1		*			
ANR	5135896	Identifier	tabsize		5135414	0					
ANR	5135897	PrimaryExpression	4		5135414	1					
ANR	5135898	BreakStatement	break ;	1617:3:39440:39445	5135414	20	True				
ANR	5135899	Label	case 'S' :	1618:2:39449:39457	5135414	21	True				
ANR	5135900	Label	case 'q' :	1619:2:39461:39469	5135414	22	True				
ANR	5135901	Label	case 'F' :	1620:2:39473:39481	5135414	23	True				
ANR	5135902	ExpressionStatement	size += tabsize * 8	1621:3:39486:39505	5135414	24	True				
ANR	5135903	AssignmentExpression	size += tabsize * 8		5135414	0		+=			
ANR	5135904	Identifier	size		5135414	0					
ANR	5135905	MultiplicativeExpression	tabsize * 8		5135414	1		*			
ANR	5135906	Identifier	tabsize		5135414	0					
ANR	5135907	PrimaryExpression	8		5135414	1					
ANR	5135908	BreakStatement	break ;	1622:3:39510:39515	5135414	25	True				
ANR	5135909	Label	case 'z' :	1623:2:39519:39527	5135414	26	True				
ANR	5135910	Label	case 'Z' :	1624:2:39531:39539	5135414	27	True				
ANR	5135911	ExpressionStatement	size += tabsize	1625:3:39544:39559	5135414	28	True				
ANR	5135912	AssignmentExpression	size += tabsize		5135414	0		+=			
ANR	5135913	Identifier	size		5135414	0					
ANR	5135914	Identifier	tabsize		5135414	1					
ANR	5135915	BreakStatement	break ;	1626:3:39564:39569	5135414	29	True				
ANR	5135916	Label	case '*' :	1627:2:39573:39581	5135414	30	True				
ANR	5135917	ExpressionStatement	size += tabsize * ( p -> bits / 8 )	1628:3:39586:39617	5135414	31	True				
ANR	5135918	AssignmentExpression	size += tabsize * ( p -> bits / 8 )		5135414	0		+=			
ANR	5135919	Identifier	size		5135414	0					
ANR	5135920	MultiplicativeExpression	tabsize * ( p -> bits / 8 )		5135414	1		*			
ANR	5135921	Identifier	tabsize		5135414	0					
ANR	5135922	MultiplicativeExpression	p -> bits / 8		5135414	1		/			
ANR	5135923	PtrMemberAccess	p -> bits		5135414	0					
ANR	5135924	Identifier	p		5135414	0					
ANR	5135925	Identifier	bits		5135414	1					
ANR	5135926	PrimaryExpression	8		5135414	1					
ANR	5135927	ExpressionStatement	i ++	1629:3:39622:39625	5135414	32	True				
ANR	5135928	PostIncDecOperationExpression	i ++		5135414	0					
ANR	5135929	Identifier	i		5135414	0					
ANR	5135930	IncDec	++		5135414	1					
ANR	5135931	ExpressionStatement	idx --	1630:3:39630:39635	5135414	33	True				
ANR	5135932	PostIncDecOperationExpression	idx --		5135414	0					
ANR	5135933	Identifier	idx		5135414	0					
ANR	5135934	IncDec	--		5135414	1					
ANR	5135935	BreakStatement	break ;	1631:3:39671:39676	5135414	34	True				
ANR	5135936	Label	case 'B' :	1632:2:39680:39688	5135414	35	True				
ANR	5135937	Label	case 'E' :	1633:2:39692:39700	5135414	36	True				
ANR	5135938	IfStatement	if ( tabsize_set )		5135414	37					
ANR	5135939	Condition	tabsize_set	1634:7:39709:39719	5135414	0	True				
ANR	5135940	Identifier	tabsize_set		5135414	0					
ANR	5135941	CompoundStatement		111:20:1904:1904	5135414	1					
ANR	5135942	IfStatement	if ( tabsize < 1 || tabsize > 8 )		5135414	0					
ANR	5135943	Condition	tabsize < 1 || tabsize > 8	1635:8:39732:39757	5135414	0	True				
ANR	5135944	OrExpression	tabsize < 1 || tabsize > 8		5135414	0		||			
ANR	5135945	RelationalExpression	tabsize < 1		5135414	0		<			
ANR	5135946	Identifier	tabsize		5135414	0					
ANR	5135947	PrimaryExpression	1		5135414	1					
ANR	5135948	RelationalExpression	tabsize > 8		5135414	1		>			
ANR	5135949	Identifier	tabsize		5135414	0					
ANR	5135950	PrimaryExpression	8		5135414	1					
ANR	5135951	CompoundStatement		112:36:1942:1942	5135414	1					
ANR	5135952	ExpressionStatement	"eprintf ( ""Unknown enum format size: %d\\n"" , tabsize )"	1636:5:39767:39818	5135414	0	True				
ANR	5135953	CallExpression	"eprintf ( ""Unknown enum format size: %d\\n"" , tabsize )"		5135414	0					
ANR	5135954	Callee	eprintf		5135414	0					
ANR	5135955	Identifier	eprintf		5135414	0					
ANR	5135956	ArgumentList	"""Unknown enum format size: %d\\n"""		5135414	1					
ANR	5135957	Argument	"""Unknown enum format size: %d\\n"""		5135414	0					
ANR	5135958	PrimaryExpression	"""Unknown enum format size: %d\\n"""		5135414	0					
ANR	5135959	Argument	tabsize		5135414	1					
ANR	5135960	Identifier	tabsize		5135414	0					
ANR	5135961	BreakStatement	break ;	1637:5:39825:39830	5135414	1	True				
ANR	5135962	ExpressionStatement	size += tabsize	1639:4:39842:39857	5135414	1	True				
ANR	5135963	AssignmentExpression	size += tabsize		5135414	0		+=			
ANR	5135964	Identifier	size		5135414	0					
ANR	5135965	Identifier	tabsize		5135414	1					
ANR	5135966	ElseStatement	else		5135414	0					
ANR	5135967	CompoundStatement		117:10:2051:2051	5135414	0					
ANR	5135968	ExpressionStatement	size += 4	1641:4:39875:39884	5135414	0	True				
ANR	5135969	AssignmentExpression	size += 4		5135414	0		+=			
ANR	5135970	Identifier	size		5135414	0					
ANR	5135971	PrimaryExpression	4		5135414	1					
ANR	5135972	BreakStatement	break ;	1643:3:39929:39934	5135414	38	True				
ANR	5135973	Label	case '?' :	1644:2:39938:39946	5135414	39	True				
ANR	5135974	CompoundStatement		169:3:3269:3334	5135414	40					
ANR	5135975	IdentifierDeclStatement	const char * wordAtIndex = NULL ;	1646:3:39956:39986	5135414	0	True				
ANR	5135976	IdentifierDecl	* wordAtIndex = NULL		5135414	0					
ANR	5135977	IdentifierDeclType	const char *		5135414	0					
ANR	5135978	Identifier	wordAtIndex		5135414	1					
ANR	5135979	AssignmentExpression	* wordAtIndex = NULL		5135414	2		=			
ANR	5135980	Identifier	NULL		5135414	0					
ANR	5135981	Identifier	NULL		5135414	1					
ANR	5135982	IdentifierDeclStatement	const char * format = NULL ;	1647:3:39991:40016	5135414	1	True				
ANR	5135983	IdentifierDecl	* format = NULL		5135414	0					
ANR	5135984	IdentifierDeclType	const char *		5135414	0					
ANR	5135985	Identifier	format		5135414	1					
ANR	5135986	AssignmentExpression	* format = NULL		5135414	2		=			
ANR	5135987	Identifier	NULL		5135414	0					
ANR	5135988	Identifier	NULL		5135414	1					
ANR	5135989	IdentifierDeclStatement	"char * endname = NULL , * structname = NULL ;"	1648:3:40021:40061	5135414	2	True				
ANR	5135990	IdentifierDecl	* endname = NULL		5135414	0					
ANR	5135991	IdentifierDeclType	char *		5135414	0					
ANR	5135992	Identifier	endname		5135414	1					
ANR	5135993	AssignmentExpression	* endname = NULL		5135414	2		=			
ANR	5135994	Identifier	NULL		5135414	0					
ANR	5135995	Identifier	NULL		5135414	1					
ANR	5135996	IdentifierDecl	* structname = NULL		5135414	1					
ANR	5135997	IdentifierDeclType	char *		5135414	0					
ANR	5135998	Identifier	structname		5135414	1					
ANR	5135999	AssignmentExpression	* structname = NULL		5135414	2		=			
ANR	5136000	Identifier	NULL		5135414	0					
ANR	5136001	Identifier	NULL		5135414	1					
ANR	5136002	IdentifierDeclStatement	char tmp = 0 ;	1649:3:40066:40078	5135414	3	True				
ANR	5136003	IdentifierDecl	tmp = 0		5135414	0					
ANR	5136004	IdentifierDeclType	char		5135414	0					
ANR	5136005	Identifier	tmp		5135414	1					
ANR	5136006	AssignmentExpression	tmp = 0		5135414	2		=			
ANR	5136007	Identifier	tmp		5135414	0					
ANR	5136008	PrimaryExpression	0		5135414	1					
ANR	5136009	IfStatement	if ( words < idx )		5135414	4					
ANR	5136010	Condition	words < idx	1650:7:40087:40097	5135414	0	True				
ANR	5136011	RelationalExpression	words < idx		5135414	0		<			
ANR	5136012	Identifier	words		5135414	0					
ANR	5136013	Identifier	idx		5135414	1					
ANR	5136014	CompoundStatement		127:20:2282:2282	5135414	1					
ANR	5136015	ExpressionStatement	"eprintf ( ""Index out of bounds\\n"" )"	1651:4:40106:40139	5135414	0	True				
ANR	5136016	CallExpression	"eprintf ( ""Index out of bounds\\n"" )"		5135414	0					
ANR	5136017	Callee	eprintf		5135414	0					
ANR	5136018	Identifier	eprintf		5135414	0					
ANR	5136019	ArgumentList	"""Index out of bounds\\n"""		5135414	1					
ANR	5136020	Argument	"""Index out of bounds\\n"""		5135414	0					
ANR	5136021	PrimaryExpression	"""Index out of bounds\\n"""		5135414	0					
ANR	5136022	ElseStatement	else		5135414	0					
ANR	5136023	CompoundStatement		129:10:2333:2333	5135414	0					
ANR	5136024	ExpressionStatement	"wordAtIndex = r_str_word_get0 ( args , idx )"	1653:4:40157:40198	5135414	0	True				
ANR	5136025	AssignmentExpression	"wordAtIndex = r_str_word_get0 ( args , idx )"		5135414	0		=			
ANR	5136026	Identifier	wordAtIndex		5135414	0					
ANR	5136027	CallExpression	"r_str_word_get0 ( args , idx )"		5135414	1					
ANR	5136028	Callee	r_str_word_get0		5135414	0					
ANR	5136029	Identifier	r_str_word_get0		5135414	0					
ANR	5136030	ArgumentList	args		5135414	1					
ANR	5136031	Argument	args		5135414	0					
ANR	5136032	Identifier	args		5135414	0					
ANR	5136033	Argument	idx		5135414	1					
ANR	5136034	Identifier	idx		5135414	0					
ANR	5136035	IfStatement	if ( ! wordAtIndex )		5135414	5					
ANR	5136036	Condition	! wordAtIndex	1655:7:40212:40223	5135414	0	True				
ANR	5136037	UnaryOperationExpression	! wordAtIndex		5135414	0					
ANR	5136038	UnaryOperator	!		5135414	0					
ANR	5136039	Identifier	wordAtIndex		5135414	1					
ANR	5136040	CompoundStatement		132:21:2408:2408	5135414	1					
ANR	5136041	BreakStatement	break ;	1656:4:40232:40237	5135414	0	True				
ANR	5136042	ExpressionStatement	structname = strdup ( wordAtIndex )	1658:3:40247:40280	5135414	6	True				
ANR	5136043	AssignmentExpression	structname = strdup ( wordAtIndex )		5135414	0		=			
ANR	5136044	Identifier	structname		5135414	0					
ANR	5136045	CallExpression	strdup ( wordAtIndex )		5135414	1					
ANR	5136046	Callee	strdup		5135414	0					
ANR	5136047	Identifier	strdup		5135414	0					
ANR	5136048	ArgumentList	wordAtIndex		5135414	1					
ANR	5136049	Argument	wordAtIndex		5135414	0					
ANR	5136050	Identifier	wordAtIndex		5135414	0					
ANR	5136051	IfStatement	if ( * structname == '(' )		5135414	7					
ANR	5136052	Condition	* structname == '('	1659:7:40289:40306	5135414	0	True				
ANR	5136053	EqualityExpression	* structname == '('		5135414	0		==			
ANR	5136054	UnaryOperationExpression	* structname		5135414	0					
ANR	5136055	UnaryOperator	*		5135414	0					
ANR	5136056	Identifier	structname		5135414	1					
ANR	5136057	PrimaryExpression	'('		5135414	1					
ANR	5136058	CompoundStatement		136:27:2491:2491	5135414	1					
ANR	5136059	ExpressionStatement	"endname = ( char * ) r_str_rchr ( structname , NULL , ')' )"	1660:4:40315:40366	5135414	0	True				
ANR	5136060	AssignmentExpression	"endname = ( char * ) r_str_rchr ( structname , NULL , ')' )"		5135414	0		=			
ANR	5136061	Identifier	endname		5135414	0					
ANR	5136062	CastExpression	"( char * ) r_str_rchr ( structname , NULL , ')' )"		5135414	1					
ANR	5136063	CastTarget	char *		5135414	0					
ANR	5136064	CallExpression	"r_str_rchr ( structname , NULL , ')' )"		5135414	1					
ANR	5136065	Callee	r_str_rchr		5135414	0					
ANR	5136066	Identifier	r_str_rchr		5135414	0					
ANR	5136067	ArgumentList	structname		5135414	1					
ANR	5136068	Argument	structname		5135414	0					
ANR	5136069	Identifier	structname		5135414	0					
ANR	5136070	Argument	NULL		5135414	1					
ANR	5136071	Identifier	NULL		5135414	0					
ANR	5136072	Argument	')'		5135414	2					
ANR	5136073	PrimaryExpression	')'		5135414	0					
ANR	5136074	ElseStatement	else		5135414	0					
ANR	5136075	CompoundStatement		138:10:2560:2560	5135414	0					
ANR	5136076	ExpressionStatement	free ( structname )	1662:4:40384:40401	5135414	0	True				
ANR	5136077	CallExpression	free ( structname )		5135414	0					
ANR	5136078	Callee	free		5135414	0					
ANR	5136079	Identifier	free		5135414	0					
ANR	5136080	ArgumentList	structname		5135414	1					
ANR	5136081	Argument	structname		5135414	0					
ANR	5136082	Identifier	structname		5135414	0					
ANR	5136083	BreakStatement	break ;	1663:4:40407:40412	5135414	1	True				
ANR	5136084	IfStatement	if ( endname )		5135414	8					
ANR	5136085	Condition	endname	1665:7:40426:40432	5135414	0	True				
ANR	5136086	Identifier	endname		5135414	0					
ANR	5136087	CompoundStatement		142:16:2617:2617	5135414	1					
ANR	5136088	ExpressionStatement	* endname = '\\0'	1666:4:40441:40456	5135414	0	True				
ANR	5136089	AssignmentExpression	* endname = '\\0'		5135414	0		=			
ANR	5136090	UnaryOperationExpression	* endname		5135414	0					
ANR	5136091	UnaryOperator	*		5135414	0					
ANR	5136092	Identifier	endname		5135414	1					
ANR	5136093	PrimaryExpression	'\\0'		5135414	1					
ANR	5136094	ExpressionStatement	"format = strchr ( structname , ' ' )"	1668:3:40466:40499	5135414	9	True				
ANR	5136095	AssignmentExpression	"format = strchr ( structname , ' ' )"		5135414	0		=			
ANR	5136096	Identifier	format		5135414	0					
ANR	5136097	CallExpression	"strchr ( structname , ' ' )"		5135414	1					
ANR	5136098	Callee	strchr		5135414	0					
ANR	5136099	Identifier	strchr		5135414	0					
ANR	5136100	ArgumentList	structname		5135414	1					
ANR	5136101	Argument	structname		5135414	0					
ANR	5136102	Identifier	structname		5135414	0					
ANR	5136103	Argument	' '		5135414	1					
ANR	5136104	PrimaryExpression	' '		5135414	0					
ANR	5136105	IfStatement	if ( format )		5135414	10					
ANR	5136106	Condition	format	1669:7:40508:40513	5135414	0	True				
ANR	5136107	Identifier	format		5135414	0					
ANR	5136108	CompoundStatement		146:15:2698:2698	5135414	1					
ANR	5136109	ExpressionStatement	tmp = * format	1670:4:40522:40535	5135414	0	True				
ANR	5136110	AssignmentExpression	tmp = * format		5135414	0		=			
ANR	5136111	Identifier	tmp		5135414	0					
ANR	5136112	UnaryOperationExpression	* format		5135414	1					
ANR	5136113	UnaryOperator	*		5135414	0					
ANR	5136114	Identifier	format		5135414	1					
ANR	5136115	WhileStatement	while ( tmp == ' ' )		5135414	1					
ANR	5136116	Condition	tmp == ' '	1671:11:40548:40557	5135414	0	True				
ANR	5136117	EqualityExpression	tmp == ' '		5135414	0		==			
ANR	5136118	Identifier	tmp		5135414	0					
ANR	5136119	PrimaryExpression	' '		5135414	1					
ANR	5136120	CompoundStatement		148:23:2742:2742	5135414	1					
ANR	5136121	ExpressionStatement	format ++	1672:5:40567:40575	5135414	0	True				
ANR	5136122	PostIncDecOperationExpression	format ++		5135414	0					
ANR	5136123	Identifier	format		5135414	0					
ANR	5136124	IncDec	++		5135414	1					
ANR	5136125	ExpressionStatement	tmp = * format	1673:5:40582:40595	5135414	1	True				
ANR	5136126	AssignmentExpression	tmp = * format		5135414	0		=			
ANR	5136127	Identifier	tmp		5135414	0					
ANR	5136128	UnaryOperationExpression	* format		5135414	1					
ANR	5136129	UnaryOperator	*		5135414	0					
ANR	5136130	Identifier	format		5135414	1					
ANR	5136131	ElseStatement	else		5135414	0					
ANR	5136132	CompoundStatement		152:10:2795:2795	5135414	0					
ANR	5136133	ExpressionStatement	"format = sdb_get ( p -> formats , structname + 1 , NULL )"	1676:4:40619:40670	5135414	0	True				
ANR	5136134	AssignmentExpression	"format = sdb_get ( p -> formats , structname + 1 , NULL )"		5135414	0		=			
ANR	5136135	Identifier	format		5135414	0					
ANR	5136136	CallExpression	"sdb_get ( p -> formats , structname + 1 , NULL )"		5135414	1					
ANR	5136137	Callee	sdb_get		5135414	0					
ANR	5136138	Identifier	sdb_get		5135414	0					
ANR	5136139	ArgumentList	p -> formats		5135414	1					
ANR	5136140	Argument	p -> formats		5135414	0					
ANR	5136141	PtrMemberAccess	p -> formats		5135414	0					
ANR	5136142	Identifier	p		5135414	0					
ANR	5136143	Identifier	formats		5135414	1					
ANR	5136144	Argument	structname + 1		5135414	1					
ANR	5136145	AdditiveExpression	structname + 1		5135414	0		+			
ANR	5136146	Identifier	structname		5135414	0					
ANR	5136147	PrimaryExpression	1		5135414	1					
ANR	5136148	Argument	NULL		5135414	2					
ANR	5136149	Identifier	NULL		5135414	0					
ANR	5136150	IfStatement	"if ( format && ! strncmp ( format , f , strlen ( format ) - 1 ) )"		5135414	1					
ANR	5136151	Condition	"format && ! strncmp ( format , f , strlen ( format ) - 1 )"	1677:8:40680:40730	5135414	0	True				
ANR	5136152	AndExpression	"format && ! strncmp ( format , f , strlen ( format ) - 1 )"		5135414	0		&&			
ANR	5136153	Identifier	format		5135414	0					
ANR	5136154	UnaryOperationExpression	"! strncmp ( format , f , strlen ( format ) - 1 )"		5135414	1					
ANR	5136155	UnaryOperator	!		5135414	0					
ANR	5136156	CallExpression	"strncmp ( format , f , strlen ( format ) - 1 )"		5135414	1					
ANR	5136157	Callee	strncmp		5135414	0					
ANR	5136158	Identifier	strncmp		5135414	0					
ANR	5136159	ArgumentList	format		5135414	1					
ANR	5136160	Argument	format		5135414	0					
ANR	5136161	Identifier	format		5135414	0					
ANR	5136162	Argument	f		5135414	1					
ANR	5136163	Identifier	f		5135414	0					
ANR	5136164	Argument	strlen ( format ) - 1		5135414	2					
ANR	5136165	AdditiveExpression	strlen ( format ) - 1		5135414	0		-			
ANR	5136166	CallExpression	strlen ( format )		5135414	0					
ANR	5136167	Callee	strlen		5135414	0					
ANR	5136168	Identifier	strlen		5135414	0					
ANR	5136169	ArgumentList	format		5135414	1					
ANR	5136170	Argument	format		5135414	0					
ANR	5136171	Identifier	format		5135414	0					
ANR	5136172	PrimaryExpression	1		5135414	1					
ANR	5136173	CompoundStatement		154:61:2915:2915	5135414	1					
ANR	5136174	ExpressionStatement	free ( o )	1678:5:40764:40772	5135414	0	True				
ANR	5136175	CallExpression	free ( o )		5135414	0					
ANR	5136176	Callee	free		5135414	0					
ANR	5136177	Identifier	free		5135414	0					
ANR	5136178	ArgumentList	o		5135414	1					
ANR	5136179	Argument	o		5135414	0					
ANR	5136180	Identifier	o		5135414	0					
ANR	5136181	ExpressionStatement	free ( structname )	1679:5:40779:40796	5135414	1	True				
ANR	5136182	CallExpression	free ( structname )		5135414	0					
ANR	5136183	Callee	free		5135414	0					
ANR	5136184	Identifier	free		5135414	0					
ANR	5136185	ArgumentList	structname		5135414	1					
ANR	5136186	Argument	structname		5135414	0					
ANR	5136187	Identifier	structname		5135414	0					
ANR	5136188	ReturnStatement	return - 1 ;	1680:5:40803:40812	5135414	2	True				
ANR	5136189	UnaryOperationExpression	- 1		5135414	0					
ANR	5136190	UnaryOperator	-		5135414	0					
ANR	5136191	PrimaryExpression	1		5135414	1					
ANR	5136192	IfStatement	if ( ! format )		5135414	2					
ANR	5136193	Condition	! format	1682:8:40828:40834	5135414	0	True				
ANR	5136194	UnaryOperationExpression	! format		5135414	0					
ANR	5136195	UnaryOperator	!		5135414	0					
ANR	5136196	Identifier	format		5135414	1					
ANR	5136197	CompoundStatement		159:17:3019:3019	5135414	1					
ANR	5136198	ExpressionStatement	"format = r_type_format ( p -> sdb_types , structname + 1 )"	1683:5:40874:40927	5135414	0	True				
ANR	5136199	AssignmentExpression	"format = r_type_format ( p -> sdb_types , structname + 1 )"		5135414	0		=			
ANR	5136200	Identifier	format		5135414	0					
ANR	5136201	CallExpression	"r_type_format ( p -> sdb_types , structname + 1 )"		5135414	1					
ANR	5136202	Callee	r_type_format		5135414	0					
ANR	5136203	Identifier	r_type_format		5135414	0					
ANR	5136204	ArgumentList	p -> sdb_types		5135414	1					
ANR	5136205	Argument	p -> sdb_types		5135414	0					
ANR	5136206	PtrMemberAccess	p -> sdb_types		5135414	0					
ANR	5136207	Identifier	p		5135414	0					
ANR	5136208	Identifier	sdb_types		5135414	1					
ANR	5136209	Argument	structname + 1		5135414	1					
ANR	5136210	AdditiveExpression	structname + 1		5135414	0		+			
ANR	5136211	Identifier	structname		5135414	0					
ANR	5136212	PrimaryExpression	1		5135414	1					
ANR	5136213	IfStatement	if ( ! format )		5135414	11					
ANR	5136214	Condition	! format	1686:7:40947:40953	5135414	0	True				
ANR	5136215	UnaryOperationExpression	! format		5135414	0					
ANR	5136216	UnaryOperator	!		5135414	0					
ANR	5136217	Identifier	format		5135414	1					
ANR	5136218	CompoundStatement		163:16:3138:3138	5135414	1					
ANR	5136219	ExpressionStatement	"eprintf ( ""Cannot find format for struct `%s'\\n"" , structname + 1 )"	1687:4:40962:41026	5135414	0	True				
ANR	5136220	CallExpression	"eprintf ( ""Cannot find format for struct `%s'\\n"" , structname + 1 )"		5135414	0					
ANR	5136221	Callee	eprintf		5135414	0					
ANR	5136222	Identifier	eprintf		5135414	0					
ANR	5136223	ArgumentList	"""Cannot find format for struct `%s'\\n"""		5135414	1					
ANR	5136224	Argument	"""Cannot find format for struct `%s'\\n"""		5135414	0					
ANR	5136225	PrimaryExpression	"""Cannot find format for struct `%s'\\n"""		5135414	0					
ANR	5136226	Argument	structname + 1		5135414	1					
ANR	5136227	AdditiveExpression	structname + 1		5135414	0		+			
ANR	5136228	Identifier	structname		5135414	0					
ANR	5136229	PrimaryExpression	1		5135414	1					
ANR	5136230	ExpressionStatement	free ( structname )	1688:4:41032:41049	5135414	1	True				
ANR	5136231	CallExpression	free ( structname )		5135414	0					
ANR	5136232	Callee	free		5135414	0					
ANR	5136233	Identifier	free		5135414	0					
ANR	5136234	ArgumentList	structname		5135414	1					
ANR	5136235	Argument	structname		5135414	0					
ANR	5136236	Identifier	structname		5135414	0					
ANR	5136237	ExpressionStatement	free ( o )	1689:4:41055:41063	5135414	2	True				
ANR	5136238	CallExpression	free ( o )		5135414	0					
ANR	5136239	Callee	free		5135414	0					
ANR	5136240	Identifier	free		5135414	0					
ANR	5136241	ArgumentList	o		5135414	1					
ANR	5136242	Argument	o		5135414	0					
ANR	5136243	Identifier	o		5135414	0					
ANR	5136244	ReturnStatement	return 0 ;	1690:4:41069:41077	5135414	3	True				
ANR	5136245	PrimaryExpression	0		5135414	0					
ANR	5136246	IdentifierDeclStatement	"int newsize = r_print_format_struct_size ( p , format , mode , n + 1 ) ;"	1692:3:41087:41152	5135414	12	True				
ANR	5136247	IdentifierDecl	"newsize = r_print_format_struct_size ( p , format , mode , n + 1 )"		5135414	0					
ANR	5136248	IdentifierDeclType	int		5135414	0					
ANR	5136249	Identifier	newsize		5135414	1					
ANR	5136250	AssignmentExpression	"newsize = r_print_format_struct_size ( p , format , mode , n + 1 )"		5135414	2		=			
ANR	5136251	Identifier	newsize		5135414	0					
ANR	5136252	CallExpression	"r_print_format_struct_size ( p , format , mode , n + 1 )"		5135414	1					
ANR	5136253	Callee	r_print_format_struct_size		5135414	0					
ANR	5136254	Identifier	r_print_format_struct_size		5135414	0					
ANR	5136255	ArgumentList	p		5135414	1					
ANR	5136256	Argument	p		5135414	0					
ANR	5136257	Identifier	p		5135414	0					
ANR	5136258	Argument	format		5135414	1					
ANR	5136259	Identifier	format		5135414	0					
ANR	5136260	Argument	mode		5135414	2					
ANR	5136261	Identifier	mode		5135414	0					
ANR	5136262	Argument	n + 1		5135414	3					
ANR	5136263	AdditiveExpression	n + 1		5135414	0		+			
ANR	5136264	Identifier	n		5135414	0					
ANR	5136265	PrimaryExpression	1		5135414	1					
ANR	5136266	IfStatement	if ( newsize < 1 )		5135414	13					
ANR	5136267	Condition	newsize < 1	1693:7:41161:41171	5135414	0	True				
ANR	5136268	RelationalExpression	newsize < 1		5135414	0		<			
ANR	5136269	Identifier	newsize		5135414	0					
ANR	5136270	PrimaryExpression	1		5135414	1					
ANR	5136271	CompoundStatement		170:20:3356:3356	5135414	1					
ANR	5136272	ExpressionStatement	"eprintf ( ""Cannot find size for `%s'\\n"" , format )"	1694:4:41180:41227	5135414	0	True				
ANR	5136273	CallExpression	"eprintf ( ""Cannot find size for `%s'\\n"" , format )"		5135414	0					
ANR	5136274	Callee	eprintf		5135414	0					
ANR	5136275	Identifier	eprintf		5135414	0					
ANR	5136276	ArgumentList	"""Cannot find size for `%s'\\n"""		5135414	1					
ANR	5136277	Argument	"""Cannot find size for `%s'\\n"""		5135414	0					
ANR	5136278	PrimaryExpression	"""Cannot find size for `%s'\\n"""		5135414	0					
ANR	5136279	Argument	format		5135414	1					
ANR	5136280	Identifier	format		5135414	0					
ANR	5136281	ExpressionStatement	free ( structname )	1695:4:41233:41250	5135414	1	True				
ANR	5136282	CallExpression	free ( structname )		5135414	0					
ANR	5136283	Callee	free		5135414	0					
ANR	5136284	Identifier	free		5135414	0					
ANR	5136285	ArgumentList	structname		5135414	1					
ANR	5136286	Argument	structname		5135414	0					
ANR	5136287	Identifier	structname		5135414	0					
ANR	5136288	ExpressionStatement	free ( o )	1696:4:41256:41264	5135414	2	True				
ANR	5136289	CallExpression	free ( o )		5135414	0					
ANR	5136290	Callee	free		5135414	0					
ANR	5136291	Identifier	free		5135414	0					
ANR	5136292	ArgumentList	o		5135414	1					
ANR	5136293	Argument	o		5135414	0					
ANR	5136294	Identifier	o		5135414	0					
ANR	5136295	ReturnStatement	return 0 ;	1697:4:41270:41278	5135414	3	True				
ANR	5136296	PrimaryExpression	0		5135414	0					
ANR	5136297	IfStatement	if ( format && newsize > 0 )		5135414	14					
ANR	5136298	Condition	format && newsize > 0	1699:7:41292:41312	5135414	0	True				
ANR	5136299	AndExpression	format && newsize > 0		5135414	0		&&			
ANR	5136300	Identifier	format		5135414	0					
ANR	5136301	RelationalExpression	newsize > 0		5135414	1		>			
ANR	5136302	Identifier	newsize		5135414	0					
ANR	5136303	PrimaryExpression	0		5135414	1					
ANR	5136304	CompoundStatement		176:30:3497:3497	5135414	1					
ANR	5136305	ExpressionStatement	size += tabsize * newsize	1700:4:41321:41346	5135414	0	True				
ANR	5136306	AssignmentExpression	size += tabsize * newsize		5135414	0		+=			
ANR	5136307	Identifier	size		5135414	0					
ANR	5136308	MultiplicativeExpression	tabsize * newsize		5135414	1		*			
ANR	5136309	Identifier	tabsize		5135414	0					
ANR	5136310	Identifier	newsize		5135414	1					
ANR	5136311	ExpressionStatement	free ( structname )	1702:3:41356:41373	5135414	15	True				
ANR	5136312	CallExpression	free ( structname )		5135414	0					
ANR	5136313	Callee	free		5135414	0					
ANR	5136314	Identifier	free		5135414	0					
ANR	5136315	ArgumentList	structname		5135414	1					
ANR	5136316	Argument	structname		5135414	0					
ANR	5136317	Identifier	structname		5135414	0					
ANR	5136318	BreakStatement	break ;	1704:3:41383:41388	5135414	41	True				
ANR	5136319	Label	case '{' :	1705:2:41392:41400	5135414	42	True				
ANR	5136320	WhileStatement	while ( fmt [ i ] != '}' )		5135414	43					
ANR	5136321	Condition	fmt [ i ] != '}'	1706:10:41412:41424	5135414	0	True				
ANR	5136322	EqualityExpression	fmt [ i ] != '}'		5135414	0		!=			
ANR	5136323	ArrayIndexing	fmt [ i ]		5135414	0					
ANR	5136324	Identifier	fmt		5135414	0					
ANR	5136325	Identifier	i		5135414	1					
ANR	5136326	PrimaryExpression	'}'		5135414	1					
ANR	5136327	CompoundStatement		183:25:3609:3609	5135414	1					
ANR	5136328	IfStatement	if ( ! fmt [ i ] )		5135414	0					
ANR	5136329	Condition	! fmt [ i ]	1707:8:41437:41443	5135414	0	True				
ANR	5136330	UnaryOperationExpression	! fmt [ i ]		5135414	0					
ANR	5136331	UnaryOperator	!		5135414	0					
ANR	5136332	ArrayIndexing	fmt [ i ]		5135414	1					
ANR	5136333	Identifier	fmt		5135414	0					
ANR	5136334	Identifier	i		5135414	1					
ANR	5136335	CompoundStatement		184:17:3628:3628	5135414	1					
ANR	5136336	ExpressionStatement	free ( o )	1708:5:41453:41461	5135414	0	True				
ANR	5136337	CallExpression	free ( o )		5135414	0					
ANR	5136338	Callee	free		5135414	0					
ANR	5136339	Identifier	free		5135414	0					
ANR	5136340	ArgumentList	o		5135414	1					
ANR	5136341	Argument	o		5135414	0					
ANR	5136342	Identifier	o		5135414	0					
ANR	5136343	ExpressionStatement	free ( args )	1709:5:41468:41479	5135414	1	True				
ANR	5136344	CallExpression	free ( args )		5135414	0					
ANR	5136345	Callee	free		5135414	0					
ANR	5136346	Identifier	free		5135414	0					
ANR	5136347	ArgumentList	args		5135414	1					
ANR	5136348	Argument	args		5135414	0					
ANR	5136349	Identifier	args		5135414	0					
ANR	5136350	ReturnStatement	return - 1 ;	1710:5:41486:41495	5135414	2	True				
ANR	5136351	UnaryOperationExpression	- 1		5135414	0					
ANR	5136352	UnaryOperator	-		5135414	0					
ANR	5136353	PrimaryExpression	1		5135414	1					
ANR	5136354	ExpressionStatement	i ++	1712:4:41507:41510	5135414	1	True				
ANR	5136355	PostIncDecOperationExpression	i ++		5135414	0					
ANR	5136356	Identifier	i		5135414	0					
ANR	5136357	IncDec	++		5135414	1					
ANR	5136358	ExpressionStatement	i ++	1714:3:41520:41523	5135414	44	True				
ANR	5136359	PostIncDecOperationExpression	i ++		5135414	0					
ANR	5136360	Identifier	i		5135414	0					
ANR	5136361	IncDec	++		5135414	1					
ANR	5136362	ExpressionStatement	idx --	1715:3:41528:41533	5135414	45	True				
ANR	5136363	PostIncDecOperationExpression	idx --		5135414	0					
ANR	5136364	Identifier	idx		5135414	0					
ANR	5136365	IncDec	--		5135414	1					
ANR	5136366	BreakStatement	break ;	1716:3:41538:41543	5135414	46	True				
ANR	5136367	Label	case '}' :	1717:2:41547:41555	5135414	47	True				
ANR	5136368	ExpressionStatement	free ( o )	1718:3:41560:41568	5135414	48	True				
ANR	5136369	CallExpression	free ( o )		5135414	0					
ANR	5136370	Callee	free		5135414	0					
ANR	5136371	Identifier	free		5135414	0					
ANR	5136372	ArgumentList	o		5135414	1					
ANR	5136373	Argument	o		5135414	0					
ANR	5136374	Identifier	o		5135414	0					
ANR	5136375	ExpressionStatement	free ( args )	1719:3:41573:41584	5135414	49	True				
ANR	5136376	CallExpression	free ( args )		5135414	0					
ANR	5136377	Callee	free		5135414	0					
ANR	5136378	Identifier	free		5135414	0					
ANR	5136379	ArgumentList	args		5135414	1					
ANR	5136380	Argument	args		5135414	0					
ANR	5136381	Identifier	args		5135414	0					
ANR	5136382	ReturnStatement	return - 1 ;	1720:3:41589:41598	5135414	50	True				
ANR	5136383	UnaryOperationExpression	- 1		5135414	0					
ANR	5136384	UnaryOperator	-		5135414	0					
ANR	5136385	PrimaryExpression	1		5135414	1					
ANR	5136386	Label	case '+' :	1721:2:41602:41610	5135414	51	True				
ANR	5136387	Label	case 'e' :	1722:2:41614:41622	5135414	52	True				
ANR	5136388	ExpressionStatement	idx --	1723:3:41627:41632	5135414	53	True				
ANR	5136389	PostIncDecOperationExpression	idx --		5135414	0					
ANR	5136390	Identifier	idx		5135414	0					
ANR	5136391	IncDec	--		5135414	1					
ANR	5136392	BreakStatement	break ;	1724:3:41637:41642	5135414	54	True				
ANR	5136393	Label	case 'p' :	1725:2:41646:41654	5135414	55	True				
ANR	5136394	IfStatement	if ( fmt [ i + 1 ] == '2' )		5135414	56					
ANR	5136395	Condition	fmt [ i + 1 ] == '2'	1726:7:41663:41677	5135414	0	True				
ANR	5136396	EqualityExpression	fmt [ i + 1 ] == '2'		5135414	0		==			
ANR	5136397	ArrayIndexing	fmt [ i + 1 ]		5135414	0					
ANR	5136398	Identifier	fmt		5135414	0					
ANR	5136399	AdditiveExpression	i + 1		5135414	1		+			
ANR	5136400	Identifier	i		5135414	0					
ANR	5136401	PrimaryExpression	1		5135414	1					
ANR	5136402	PrimaryExpression	'2'		5135414	1					
ANR	5136403	CompoundStatement		203:24:3862:3862	5135414	1					
ANR	5136404	ExpressionStatement	size += tabsize * 2	1727:4:41686:41705	5135414	0	True				
ANR	5136405	AssignmentExpression	size += tabsize * 2		5135414	0		+=			
ANR	5136406	Identifier	size		5135414	0					
ANR	5136407	MultiplicativeExpression	tabsize * 2		5135414	1		*			
ANR	5136408	Identifier	tabsize		5135414	0					
ANR	5136409	PrimaryExpression	2		5135414	1					
ANR	5136410	ElseStatement	else		5135414	0					
ANR	5136411	IfStatement	if ( fmt [ i + 1 ] == '4' )		5135414	0					
ANR	5136412	Condition	fmt [ i + 1 ] == '4'	1728:14:41721:41735	5135414	0	True				
ANR	5136413	EqualityExpression	fmt [ i + 1 ] == '4'		5135414	0		==			
ANR	5136414	ArrayIndexing	fmt [ i + 1 ]		5135414	0					
ANR	5136415	Identifier	fmt		5135414	0					
ANR	5136416	AdditiveExpression	i + 1		5135414	1		+			
ANR	5136417	Identifier	i		5135414	0					
ANR	5136418	PrimaryExpression	1		5135414	1					
ANR	5136419	PrimaryExpression	'4'		5135414	1					
ANR	5136420	CompoundStatement		205:31:3920:3920	5135414	1					
ANR	5136421	ExpressionStatement	size += tabsize * 4	1729:4:41744:41763	5135414	0	True				
ANR	5136422	AssignmentExpression	size += tabsize * 4		5135414	0		+=			
ANR	5136423	Identifier	size		5135414	0					
ANR	5136424	MultiplicativeExpression	tabsize * 4		5135414	1		*			
ANR	5136425	Identifier	tabsize		5135414	0					
ANR	5136426	PrimaryExpression	4		5135414	1					
ANR	5136427	ElseStatement	else		5135414	0					
ANR	5136428	IfStatement	if ( fmt [ i + 1 ] == '8' )		5135414	0					
ANR	5136429	Condition	fmt [ i + 1 ] == '8'	1730:14:41779:41793	5135414	0	True				
ANR	5136430	EqualityExpression	fmt [ i + 1 ] == '8'		5135414	0		==			
ANR	5136431	ArrayIndexing	fmt [ i + 1 ]		5135414	0					
ANR	5136432	Identifier	fmt		5135414	0					
ANR	5136433	AdditiveExpression	i + 1		5135414	1		+			
ANR	5136434	Identifier	i		5135414	0					
ANR	5136435	PrimaryExpression	1		5135414	1					
ANR	5136436	PrimaryExpression	'8'		5135414	1					
ANR	5136437	CompoundStatement		207:31:3978:3978	5135414	1					
ANR	5136438	ExpressionStatement	size += tabsize * 8	1731:4:41802:41821	5135414	0	True				
ANR	5136439	AssignmentExpression	size += tabsize * 8		5135414	0		+=			
ANR	5136440	Identifier	size		5135414	0					
ANR	5136441	MultiplicativeExpression	tabsize * 8		5135414	1		*			
ANR	5136442	Identifier	tabsize		5135414	0					
ANR	5136443	PrimaryExpression	8		5135414	1					
ANR	5136444	ElseStatement	else		5135414	0					
ANR	5136445	CompoundStatement		209:10:4015:4015	5135414	0					
ANR	5136446	ExpressionStatement	size += tabsize * ( p -> bits / 8 )	1733:4:41839:41870	5135414	0	True				
ANR	5136447	AssignmentExpression	size += tabsize * ( p -> bits / 8 )		5135414	0		+=			
ANR	5136448	Identifier	size		5135414	0					
ANR	5136449	MultiplicativeExpression	tabsize * ( p -> bits / 8 )		5135414	1		*			
ANR	5136450	Identifier	tabsize		5135414	0					
ANR	5136451	MultiplicativeExpression	p -> bits / 8		5135414	1		/			
ANR	5136452	PtrMemberAccess	p -> bits		5135414	0					
ANR	5136453	Identifier	p		5135414	0					
ANR	5136454	Identifier	bits		5135414	1					
ANR	5136455	PrimaryExpression	8		5135414	1					
ANR	5136456	BreakStatement	break ;	1734:4:41876:41881	5135414	1	True				
ANR	5136457	ExpressionStatement	i ++	1736:3:41891:41894	5135414	57	True				
ANR	5136458	PostIncDecOperationExpression	i ++		5135414	0					
ANR	5136459	Identifier	i		5135414	0					
ANR	5136460	IncDec	++		5135414	1					
ANR	5136461	BreakStatement	break ;	1737:3:41899:41904	5135414	58	True				
ANR	5136462	Label	case 'r' :	1738:2:41908:41916	5135414	59	True				
ANR	5136463	BreakStatement	break ;	1739:3:41921:41926	5135414	60	True				
ANR	5136464	Label	case 'n' :	1740:2:41930:41938	5135414	61	True				
ANR	5136465	Label	case 'N' :	1741:2:41942:41950	5135414	62	True				
ANR	5136466	IfStatement	if ( fmt [ i + 1 ] == '1' )		5135414	63					
ANR	5136467	Condition	fmt [ i + 1 ] == '1'	1742:7:41959:41973	5135414	0	True				
ANR	5136468	EqualityExpression	fmt [ i + 1 ] == '1'		5135414	0		==			
ANR	5136469	ArrayIndexing	fmt [ i + 1 ]		5135414	0					
ANR	5136470	Identifier	fmt		5135414	0					
ANR	5136471	AdditiveExpression	i + 1		5135414	1		+			
ANR	5136472	Identifier	i		5135414	0					
ANR	5136473	PrimaryExpression	1		5135414	1					
ANR	5136474	PrimaryExpression	'1'		5135414	1					
ANR	5136475	CompoundStatement		219:24:4158:4158	5135414	1					
ANR	5136476	ExpressionStatement	size += tabsize * 1	1743:4:41982:42001	5135414	0	True				
ANR	5136477	AssignmentExpression	size += tabsize * 1		5135414	0		+=			
ANR	5136478	Identifier	size		5135414	0					
ANR	5136479	MultiplicativeExpression	tabsize * 1		5135414	1		*			
ANR	5136480	Identifier	tabsize		5135414	0					
ANR	5136481	PrimaryExpression	1		5135414	1					
ANR	5136482	ElseStatement	else		5135414	0					
ANR	5136483	IfStatement	if ( fmt [ i + 1 ] == '2' )		5135414	0					
ANR	5136484	Condition	fmt [ i + 1 ] == '2'	1744:14:42017:42031	5135414	0	True				
ANR	5136485	EqualityExpression	fmt [ i + 1 ] == '2'		5135414	0		==			
ANR	5136486	ArrayIndexing	fmt [ i + 1 ]		5135414	0					
ANR	5136487	Identifier	fmt		5135414	0					
ANR	5136488	AdditiveExpression	i + 1		5135414	1		+			
ANR	5136489	Identifier	i		5135414	0					
ANR	5136490	PrimaryExpression	1		5135414	1					
ANR	5136491	PrimaryExpression	'2'		5135414	1					
ANR	5136492	CompoundStatement		221:31:4216:4216	5135414	1					
ANR	5136493	ExpressionStatement	size += tabsize * 2	1745:4:42040:42059	5135414	0	True				
ANR	5136494	AssignmentExpression	size += tabsize * 2		5135414	0		+=			
ANR	5136495	Identifier	size		5135414	0					
ANR	5136496	MultiplicativeExpression	tabsize * 2		5135414	1		*			
ANR	5136497	Identifier	tabsize		5135414	0					
ANR	5136498	PrimaryExpression	2		5135414	1					
ANR	5136499	ElseStatement	else		5135414	0					
ANR	5136500	IfStatement	if ( fmt [ i + 1 ] == '4' )		5135414	0					
ANR	5136501	Condition	fmt [ i + 1 ] == '4'	1746:14:42075:42089	5135414	0	True				
ANR	5136502	EqualityExpression	fmt [ i + 1 ] == '4'		5135414	0		==			
ANR	5136503	ArrayIndexing	fmt [ i + 1 ]		5135414	0					
ANR	5136504	Identifier	fmt		5135414	0					
ANR	5136505	AdditiveExpression	i + 1		5135414	1		+			
ANR	5136506	Identifier	i		5135414	0					
ANR	5136507	PrimaryExpression	1		5135414	1					
ANR	5136508	PrimaryExpression	'4'		5135414	1					
ANR	5136509	CompoundStatement		223:31:4274:4274	5135414	1					
ANR	5136510	ExpressionStatement	size += tabsize * 4	1747:4:42098:42117	5135414	0	True				
ANR	5136511	AssignmentExpression	size += tabsize * 4		5135414	0		+=			
ANR	5136512	Identifier	size		5135414	0					
ANR	5136513	MultiplicativeExpression	tabsize * 4		5135414	1		*			
ANR	5136514	Identifier	tabsize		5135414	0					
ANR	5136515	PrimaryExpression	4		5135414	1					
ANR	5136516	ElseStatement	else		5135414	0					
ANR	5136517	IfStatement	if ( fmt [ i + 1 ] == '8' )		5135414	0					
ANR	5136518	Condition	fmt [ i + 1 ] == '8'	1748:14:42133:42147	5135414	0	True				
ANR	5136519	EqualityExpression	fmt [ i + 1 ] == '8'		5135414	0		==			
ANR	5136520	ArrayIndexing	fmt [ i + 1 ]		5135414	0					
ANR	5136521	Identifier	fmt		5135414	0					
ANR	5136522	AdditiveExpression	i + 1		5135414	1		+			
ANR	5136523	Identifier	i		5135414	0					
ANR	5136524	PrimaryExpression	1		5135414	1					
ANR	5136525	PrimaryExpression	'8'		5135414	1					
ANR	5136526	CompoundStatement		225:31:4332:4332	5135414	1					
ANR	5136527	ExpressionStatement	size += tabsize * 8	1749:4:42156:42175	5135414	0	True				
ANR	5136528	AssignmentExpression	size += tabsize * 8		5135414	0		+=			
ANR	5136529	Identifier	size		5135414	0					
ANR	5136530	MultiplicativeExpression	tabsize * 8		5135414	1		*			
ANR	5136531	Identifier	tabsize		5135414	0					
ANR	5136532	PrimaryExpression	8		5135414	1					
ANR	5136533	ElseStatement	else		5135414	0					
ANR	5136534	CompoundStatement		227:10:4369:4369	5135414	0					
ANR	5136535	ExpressionStatement	"eprintf ( ""Invalid n format in (%s)\\n"" , fmt )"	1751:4:42193:42236	5135414	0	True				
ANR	5136536	CallExpression	"eprintf ( ""Invalid n format in (%s)\\n"" , fmt )"		5135414	0					
ANR	5136537	Callee	eprintf		5135414	0					
ANR	5136538	Identifier	eprintf		5135414	0					
ANR	5136539	ArgumentList	"""Invalid n format in (%s)\\n"""		5135414	1					
ANR	5136540	Argument	"""Invalid n format in (%s)\\n"""		5135414	0					
ANR	5136541	PrimaryExpression	"""Invalid n format in (%s)\\n"""		5135414	0					
ANR	5136542	Argument	fmt		5135414	1					
ANR	5136543	Identifier	fmt		5135414	0					
ANR	5136544	ExpressionStatement	free ( o )	1752:4:42242:42250	5135414	1	True				
ANR	5136545	CallExpression	free ( o )		5135414	0					
ANR	5136546	Callee	free		5135414	0					
ANR	5136547	Identifier	free		5135414	0					
ANR	5136548	ArgumentList	o		5135414	1					
ANR	5136549	Argument	o		5135414	0					
ANR	5136550	Identifier	o		5135414	0					
ANR	5136551	ExpressionStatement	free ( args )	1753:4:42256:42267	5135414	2	True				
ANR	5136552	CallExpression	free ( args )		5135414	0					
ANR	5136553	Callee	free		5135414	0					
ANR	5136554	Identifier	free		5135414	0					
ANR	5136555	ArgumentList	args		5135414	1					
ANR	5136556	Argument	args		5135414	0					
ANR	5136557	Identifier	args		5135414	0					
ANR	5136558	ReturnStatement	return - 2 ;	1754:4:42273:42282	5135414	3	True				
ANR	5136559	UnaryOperationExpression	- 2		5135414	0					
ANR	5136560	UnaryOperator	-		5135414	0					
ANR	5136561	PrimaryExpression	2		5135414	1					
ANR	5136562	ExpressionStatement	i ++	1756:3:42292:42295	5135414	64	True				
ANR	5136563	PostIncDecOperationExpression	i ++		5135414	0					
ANR	5136564	Identifier	i		5135414	0					
ANR	5136565	IncDec	++		5135414	1					
ANR	5136566	BreakStatement	break ;	1757:3:42300:42305	5135414	65	True				
ANR	5136567	Label	case 'D' :	1758:2:42309:42317	5135414	66	True				
ANR	5136568	Label	case 'T' :	1759:2:42321:42329	5135414	67	True				
ANR	5136569	Label	case 'u' :	1760:2:42333:42341	5135414	68	True				
ANR	5136570	Label	default :	1762:2:42370:42377	5135414	69	True				
ANR	5136571	Identifier	default		5135414	0					
ANR	5136572	BreakStatement	break ;	1764:3:42419:42424	5135414	70	True				
ANR	5136573	ExpressionStatement	idx ++	1766:2:42432:42437	5135414	2	True				
ANR	5136574	PostIncDecOperationExpression	idx ++		5135414	0					
ANR	5136575	Identifier	idx		5135414	0					
ANR	5136576	IncDec	++		5135414	1					
ANR	5136577	IfStatement	if ( mode & R_PRINT_UNIONMODE )		5135414	3					
ANR	5136578	Condition	mode & R_PRINT_UNIONMODE	1767:6:42445:42468	5135414	0	True				
ANR	5136579	BitAndExpression	mode & R_PRINT_UNIONMODE		5135414	0		&			
ANR	5136580	Identifier	mode		5135414	0					
ANR	5136581	Identifier	R_PRINT_UNIONMODE		5135414	1					
ANR	5136582	CompoundStatement		244:32:4653:4653	5135414	1					
ANR	5136583	IfStatement	if ( size > biggest )		5135414	0					
ANR	5136584	Condition	size > biggest	1768:7:42480:42493	5135414	0	True				
ANR	5136585	RelationalExpression	size > biggest		5135414	0		>			
ANR	5136586	Identifier	size		5135414	0					
ANR	5136587	Identifier	biggest		5135414	1					
ANR	5136588	CompoundStatement		245:23:4678:4678	5135414	1					
ANR	5136589	ExpressionStatement	biggest = size	1769:4:42502:42516	5135414	0	True				
ANR	5136590	AssignmentExpression	biggest = size		5135414	0		=			
ANR	5136591	Identifier	biggest		5135414	0					
ANR	5136592	Identifier	size		5135414	1					
ANR	5136593	ExpressionStatement	size = 0	1771:3:42526:42534	5135414	1	True				
ANR	5136594	AssignmentExpression	size = 0		5135414	0		=			
ANR	5136595	Identifier	size		5135414	0					
ANR	5136596	PrimaryExpression	0		5135414	1					
ANR	5136597	ExpressionStatement	size *= times	1774:1:42544:42557	5135414	19	True				
ANR	5136598	AssignmentExpression	size *= times		5135414	0		*=			
ANR	5136599	Identifier	size		5135414	0					
ANR	5136600	Identifier	times		5135414	1					
ANR	5136601	ExpressionStatement	free ( o )	1775:1:42560:42568	5135414	20	True				
ANR	5136602	CallExpression	free ( o )		5135414	0					
ANR	5136603	Callee	free		5135414	0					
ANR	5136604	Identifier	free		5135414	0					
ANR	5136605	ArgumentList	o		5135414	1					
ANR	5136606	Argument	o		5135414	0					
ANR	5136607	Identifier	o		5135414	0					
ANR	5136608	ExpressionStatement	free ( args )	1776:1:42571:42582	5135414	21	True				
ANR	5136609	CallExpression	free ( args )		5135414	0					
ANR	5136610	Callee	free		5135414	0					
ANR	5136611	Identifier	free		5135414	0					
ANR	5136612	ArgumentList	args		5135414	1					
ANR	5136613	Argument	args		5135414	0					
ANR	5136614	Identifier	args		5135414	0					
ANR	5136615	ReturnStatement	return ( mode & R_PRINT_UNIONMODE ) ? biggest : size ;	1777:1:42585:42634	5135414	22	True				
ANR	5136616	ConditionalExpression	( mode & R_PRINT_UNIONMODE ) ? biggest : size		5135414	0					
ANR	5136617	Condition	mode & R_PRINT_UNIONMODE		5135414	0					
ANR	5136618	BitAndExpression	mode & R_PRINT_UNIONMODE		5135414	0		&			
ANR	5136619	Identifier	mode		5135414	0					
ANR	5136620	Identifier	R_PRINT_UNIONMODE		5135414	1					
ANR	5136621	Identifier	biggest		5135414	1					
ANR	5136622	Identifier	size		5135414	2					
ANR	5136623	ReturnType	R_API int		5135414	1					
ANR	5136624	Identifier	r_print_format_struct_size		5135414	2					
ANR	5136625	ParameterList	"RPrint * p , const char * f , int mode , int n"		5135414	3					
ANR	5136626	Parameter	RPrint * p	1524:37:37774:37782	5135414	0	True				
ANR	5136627	ParameterType	RPrint *		5135414	0					
ANR	5136628	Identifier	p		5135414	1					
ANR	5136629	Parameter	const char * f	1524:48:37785:37797	5135414	1	True				
ANR	5136630	ParameterType	const char *		5135414	0					
ANR	5136631	Identifier	f		5135414	1					
ANR	5136632	Parameter	int mode	1524:63:37800:37807	5135414	2	True				
ANR	5136633	ParameterType	int		5135414	0					
ANR	5136634	Identifier	mode		5135414	1					
ANR	5136635	Parameter	int n	1524:73:37810:37814	5135414	3	True				
ANR	5136636	ParameterType	int		5135414	0					
ANR	5136637	Identifier	n		5135414	1					
ANR	5136638	CFGEntryNode	ENTRY		5135414		True				
ANR	5136639	CFGExitNode	EXIT		5135414		True				
ANR	5136640	Symbol	~R_PRINT_UNIONMODE		5135414						
ANR	5136641	Symbol	r_print_format_struct_size		5135414						
ANR	5136642	Symbol	strchr		5135414						
ANR	5136643	Symbol	fmt		5135414						
ANR	5136644	Symbol	mode		5135414						
ANR	5136645	Symbol	tabsize_set		5135414						
ANR	5136646	Symbol	strlen		5135414						
ANR	5136647	Symbol	strncmp		5135414						
ANR	5136648	Symbol	p -> formats		5135414						
ANR	5136649	Symbol	biggest		5135414						
ANR	5136650	Symbol	tmp		5135414						
ANR	5136651	Symbol	R_PRINT_UNIONMODE		5135414						
ANR	5136652	Symbol	r_str_word_set0_stack		5135414						
ANR	5136653	Symbol	NULL		5135414						
ANR	5136654	Symbol	fmt_len		5135414						
ANR	5136655	Symbol	format		5135414						
ANR	5136656	Symbol	newsize		5135414						
ANR	5136657	Symbol	p -> bits		5135414						
ANR	5136658	Symbol	p -> sdb_types		5135414						
ANR	5136659	Symbol	size		5135414						
ANR	5136660	Symbol	* format		5135414						
ANR	5136661	Symbol	true		5135414						
ANR	5136662	Symbol	* end		5135414						
ANR	5136663	Symbol	idx		5135414						
ANR	5136664	Symbol	wordAtIndex		5135414						
ANR	5136665	Symbol	* fmt		5135414						
ANR	5136666	Symbol	r_num_math		5135414						
ANR	5136667	Symbol	times		5135414						
ANR	5136668	Symbol	* structname		5135414						
ANR	5136669	Symbol	endname		5135414						
ANR	5136670	Symbol	end		5135414						
ANR	5136671	Symbol	tabsize		5135414						
ANR	5136672	Symbol	structname		5135414						
ANR	5136673	Symbol	f		5135414						
ANR	5136674	Symbol	false		5135414						
ANR	5136675	Symbol	words		5135414						
ANR	5136676	Symbol	i		5135414						
ANR	5136677	Symbol	sdb_get		5135414						
ANR	5136678	Symbol	r_str_word_get0		5135414						
ANR	5136679	Symbol	n		5135414						
ANR	5136680	Symbol	* endname		5135414						
ANR	5136681	Symbol	o		5135414						
ANR	5136682	Symbol	p		5135414						
ANR	5136683	Symbol	args		5135414						
ANR	5136684	Symbol	* i		5135414						
ANR	5136685	Symbol	fmt2		5135414						
ANR	5136686	Symbol	* p		5135414						
ANR	5136687	Symbol	r_str_rchr		5135414						
ANR	5136688	Symbol	strdup		5135414						
ANR	5136689	Symbol	r_type_format		5135414						
ANR	5136690	Function	r_print_format_struct	1780:0:42639:43640							
ANR	5136691	FunctionDef	"r_print_format_struct (RPrint * p , ut64 seek , const ut8 * b , int len , const char * name , int slide , int mode , const char * setval , char * field , int anon)"		5136690	0					
ANR	5136692	CompoundStatement		1781:66:42801:43640	5136690	0					
ANR	5136693	IdentifierDeclStatement	const char * fmt ;	1782:1:42804:42819	5136690	0	True				
ANR	5136694	IdentifierDecl	* fmt		5136690	0					
ANR	5136695	IdentifierDeclType	const char *		5136690	0					
ANR	5136696	Identifier	fmt		5136690	1					
ANR	5136697	IdentifierDeclStatement	char namefmt [ 128 ] ;	1783:1:42822:42839	5136690	1	True				
ANR	5136698	IdentifierDecl	namefmt [ 128 ]		5136690	0					
ANR	5136699	IdentifierDeclType	char [ 128 ]		5136690	0					
ANR	5136700	Identifier	namefmt		5136690	1					
ANR	5136701	PrimaryExpression	128		5136690	2					
ANR	5136702	ExpressionStatement	slide ++	1784:1:42842:42849	5136690	2	True				
ANR	5136703	PostIncDecOperationExpression	slide ++		5136690	0					
ANR	5136704	Identifier	slide		5136690	0					
ANR	5136705	IncDec	++		5136690	1					
ANR	5136706	IfStatement	if ( ( slide % STRUCTPTR ) > NESTDEPTH || ( slide % STRUCTFLAG ) / STRUCTPTR > NESTDEPTH )		5136690	3					
ANR	5136707	Condition	( slide % STRUCTPTR ) > NESTDEPTH || ( slide % STRUCTFLAG ) / STRUCTPTR > NESTDEPTH	1785:5:42856:42932	5136690	0	True				
ANR	5136708	OrExpression	( slide % STRUCTPTR ) > NESTDEPTH || ( slide % STRUCTFLAG ) / STRUCTPTR > NESTDEPTH		5136690	0		||			
ANR	5136709	RelationalExpression	( slide % STRUCTPTR ) > NESTDEPTH		5136690	0		>			
ANR	5136710	MultiplicativeExpression	slide % STRUCTPTR		5136690	0		%			
ANR	5136711	Identifier	slide		5136690	0					
ANR	5136712	Identifier	STRUCTPTR		5136690	1					
ANR	5136713	Identifier	NESTDEPTH		5136690	1					
ANR	5136714	RelationalExpression	( slide % STRUCTFLAG ) / STRUCTPTR > NESTDEPTH		5136690	1		>			
ANR	5136715	MultiplicativeExpression	( slide % STRUCTFLAG ) / STRUCTPTR		5136690	0		/			
ANR	5136716	MultiplicativeExpression	slide % STRUCTFLAG		5136690	0		%			
ANR	5136717	Identifier	slide		5136690	0					
ANR	5136718	Identifier	STRUCTFLAG		5136690	1					
ANR	5136719	Identifier	STRUCTPTR		5136690	1					
ANR	5136720	Identifier	NESTDEPTH		5136690	1					
ANR	5136721	CompoundStatement		5:84:133:133	5136690	1					
ANR	5136722	ExpressionStatement	"eprintf ( ""Too much nested struct, recursion too deep...\\n"" )"	1786:2:42939:42998	5136690	0	True				
ANR	5136723	CallExpression	"eprintf ( ""Too much nested struct, recursion too deep...\\n"" )"		5136690	0					
ANR	5136724	Callee	eprintf		5136690	0					
ANR	5136725	Identifier	eprintf		5136690	0					
ANR	5136726	ArgumentList	"""Too much nested struct, recursion too deep...\\n"""		5136690	1					
ANR	5136727	Argument	"""Too much nested struct, recursion too deep...\\n"""		5136690	0					
ANR	5136728	PrimaryExpression	"""Too much nested struct, recursion too deep...\\n"""		5136690	0					
ANR	5136729	ReturnStatement	return 0 ;	1787:2:43002:43010	5136690	1	True				
ANR	5136730	PrimaryExpression	0		5136690	0					
ANR	5136731	IfStatement	if ( anon )		5136690	4					
ANR	5136732	Condition	anon	1789:5:43020:43023	5136690	0	True				
ANR	5136733	Identifier	anon		5136690	0					
ANR	5136734	CompoundStatement		9:11:224:224	5136690	1					
ANR	5136735	ExpressionStatement	fmt = name	1790:2:43030:43040	5136690	0	True				
ANR	5136736	AssignmentExpression	fmt = name		5136690	0		=			
ANR	5136737	Identifier	fmt		5136690	0					
ANR	5136738	Identifier	name		5136690	1					
ANR	5136739	ElseStatement	else		5136690	0					
ANR	5136740	CompoundStatement		11:8:248:248	5136690	0					
ANR	5136741	ExpressionStatement	"fmt = sdb_get ( p -> formats , name , NULL )"	1792:2:43054:43092	5136690	0	True				
ANR	5136742	AssignmentExpression	"fmt = sdb_get ( p -> formats , name , NULL )"		5136690	0		=			
ANR	5136743	Identifier	fmt		5136690	0					
ANR	5136744	CallExpression	"sdb_get ( p -> formats , name , NULL )"		5136690	1					
ANR	5136745	Callee	sdb_get		5136690	0					
ANR	5136746	Identifier	sdb_get		5136690	0					
ANR	5136747	ArgumentList	p -> formats		5136690	1					
ANR	5136748	Argument	p -> formats		5136690	0					
ANR	5136749	PtrMemberAccess	p -> formats		5136690	0					
ANR	5136750	Identifier	p		5136690	0					
ANR	5136751	Identifier	formats		5136690	1					
ANR	5136752	Argument	name		5136690	1					
ANR	5136753	Identifier	name		5136690	0					
ANR	5136754	Argument	NULL		5136690	2					
ANR	5136755	Identifier	NULL		5136690	0					
ANR	5136756	IfStatement	if ( ! fmt )		5136690	1					
ANR	5136757	Condition	! fmt	1793:6:43100:43103	5136690	0	True				
ANR	5136758	UnaryOperationExpression	! fmt		5136690	0					
ANR	5136759	UnaryOperator	!		5136690	0					
ANR	5136760	Identifier	fmt		5136690	1					
ANR	5136761	CompoundStatement		13:12:304:304	5136690	1					
ANR	5136762	ExpressionStatement	"fmt = r_type_format ( p -> sdb_types , name )"	1794:3:43146:43186	5136690	0	True				
ANR	5136763	AssignmentExpression	"fmt = r_type_format ( p -> sdb_types , name )"		5136690	0		=			
ANR	5136764	Identifier	fmt		5136690	0					
ANR	5136765	CallExpression	"r_type_format ( p -> sdb_types , name )"		5136690	1					
ANR	5136766	Callee	r_type_format		5136690	0					
ANR	5136767	Identifier	r_type_format		5136690	0					
ANR	5136768	ArgumentList	p -> sdb_types		5136690	1					
ANR	5136769	Argument	p -> sdb_types		5136690	0					
ANR	5136770	PtrMemberAccess	p -> sdb_types		5136690	0					
ANR	5136771	Identifier	p		5136690	0					
ANR	5136772	Identifier	sdb_types		5136690	1					
ANR	5136773	Argument	name		5136690	1					
ANR	5136774	Identifier	name		5136690	0					
ANR	5136775	IfStatement	if ( ! fmt || ! * fmt )		5136690	5					
ANR	5136776	Condition	! fmt || ! * fmt	1797:5:43200:43212	5136690	0	True				
ANR	5136777	OrExpression	! fmt || ! * fmt		5136690	0		||			
ANR	5136778	UnaryOperationExpression	! fmt		5136690	0					
ANR	5136779	UnaryOperator	!		5136690	0					
ANR	5136780	Identifier	fmt		5136690	1					
ANR	5136781	UnaryOperationExpression	! * fmt		5136690	1					
ANR	5136782	UnaryOperator	!		5136690	0					
ANR	5136783	UnaryOperationExpression	* fmt		5136690	1					
ANR	5136784	UnaryOperator	*		5136690	0					
ANR	5136785	Identifier	fmt		5136690	1					
ANR	5136786	CompoundStatement		17:20:413:413	5136690	1					
ANR	5136787	ExpressionStatement	"eprintf ( ""Undefined struct '%s'.\\n"" , name )"	1798:2:43219:43261	5136690	0	True				
ANR	5136788	CallExpression	"eprintf ( ""Undefined struct '%s'.\\n"" , name )"		5136690	0					
ANR	5136789	Callee	eprintf		5136690	0					
ANR	5136790	Identifier	eprintf		5136690	0					
ANR	5136791	ArgumentList	"""Undefined struct '%s'.\\n"""		5136690	1					
ANR	5136792	Argument	"""Undefined struct '%s'.\\n"""		5136690	0					
ANR	5136793	PrimaryExpression	"""Undefined struct '%s'.\\n"""		5136690	0					
ANR	5136794	Argument	name		5136690	1					
ANR	5136795	Identifier	name		5136690	0					
ANR	5136796	ReturnStatement	return 0 ;	1799:2:43265:43273	5136690	1	True				
ANR	5136797	PrimaryExpression	0		5136690	0					
ANR	5136798	IfStatement	if ( MUSTSEE && ! SEEVALUE )		5136690	6					
ANR	5136799	Condition	MUSTSEE && ! SEEVALUE	1801:5:43283:43302	5136690	0	True				
ANR	5136800	AndExpression	MUSTSEE && ! SEEVALUE		5136690	0		&&			
ANR	5136801	Identifier	MUSTSEE		5136690	0					
ANR	5136802	UnaryOperationExpression	! SEEVALUE		5136690	1					
ANR	5136803	UnaryOperator	!		5136690	0					
ANR	5136804	Identifier	SEEVALUE		5136690	1					
ANR	5136805	CompoundStatement		21:27:503:503	5136690	1					
ANR	5136806	ExpressionStatement	"snprintf ( namefmt , sizeof ( namefmt ) , ""%%%ds"" , 10 + 6 * slide % STRUCTPTR )"	1802:2:43309:43376	5136690	0	True				
ANR	5136807	CallExpression	"snprintf ( namefmt , sizeof ( namefmt ) , ""%%%ds"" , 10 + 6 * slide % STRUCTPTR )"		5136690	0					
ANR	5136808	Callee	snprintf		5136690	0					
ANR	5136809	Identifier	snprintf		5136690	0					
ANR	5136810	ArgumentList	namefmt		5136690	1					
ANR	5136811	Argument	namefmt		5136690	0					
ANR	5136812	Identifier	namefmt		5136690	0					
ANR	5136813	Argument	sizeof ( namefmt )		5136690	1					
ANR	5136814	SizeofExpression	sizeof ( namefmt )		5136690	0					
ANR	5136815	Sizeof	sizeof		5136690	0					
ANR	5136816	SizeofOperand	namefmt		5136690	1					
ANR	5136817	Argument	"""%%%ds"""		5136690	2					
ANR	5136818	PrimaryExpression	"""%%%ds"""		5136690	0					
ANR	5136819	Argument	10 + 6 * slide % STRUCTPTR		5136690	3					
ANR	5136820	AdditiveExpression	10 + 6 * slide % STRUCTPTR		5136690	0		+			
ANR	5136821	PrimaryExpression	10		5136690	0					
ANR	5136822	MultiplicativeExpression	6 * slide % STRUCTPTR		5136690	1		*			
ANR	5136823	PrimaryExpression	6		5136690	0					
ANR	5136824	MultiplicativeExpression	slide % STRUCTPTR		5136690	1		%			
ANR	5136825	Identifier	slide		5136690	0					
ANR	5136826	Identifier	STRUCTPTR		5136690	1					
ANR	5136827	IfStatement	if ( fmt [ 0 ] == '0' )		5136690	1					
ANR	5136828	Condition	fmt [ 0 ] == '0'	1803:6:43384:43396	5136690	0	True				
ANR	5136829	EqualityExpression	fmt [ 0 ] == '0'		5136690	0		==			
ANR	5136830	ArrayIndexing	fmt [ 0 ]		5136690	0					
ANR	5136831	Identifier	fmt		5136690	0					
ANR	5136832	PrimaryExpression	0		5136690	1					
ANR	5136833	PrimaryExpression	'0'		5136690	1					
ANR	5136834	CompoundStatement		23:21:597:597	5136690	1					
ANR	5136835	ExpressionStatement	"p -> cb_printf ( namefmt , ""union"" )"	1804:3:43404:43435	5136690	0	True				
ANR	5136836	CallExpression	"p -> cb_printf ( namefmt , ""union"" )"		5136690	0					
ANR	5136837	Callee	p -> cb_printf		5136690	0					
ANR	5136838	PtrMemberAccess	p -> cb_printf		5136690	0					
ANR	5136839	Identifier	p		5136690	0					
ANR	5136840	Identifier	cb_printf		5136690	1					
ANR	5136841	ArgumentList	namefmt		5136690	1					
ANR	5136842	Argument	namefmt		5136690	0					
ANR	5136843	Identifier	namefmt		5136690	0					
ANR	5136844	Argument	"""union"""		5136690	1					
ANR	5136845	PrimaryExpression	"""union"""		5136690	0					
ANR	5136846	ElseStatement	else		5136690	0					
ANR	5136847	CompoundStatement		25:9:644:644	5136690	0					
ANR	5136848	ExpressionStatement	"p -> cb_printf ( namefmt , ""struct"" )"	1806:3:43451:43483	5136690	0	True				
ANR	5136849	CallExpression	"p -> cb_printf ( namefmt , ""struct"" )"		5136690	0					
ANR	5136850	Callee	p -> cb_printf		5136690	0					
ANR	5136851	PtrMemberAccess	p -> cb_printf		5136690	0					
ANR	5136852	Identifier	p		5136690	0					
ANR	5136853	Identifier	cb_printf		5136690	1					
ANR	5136854	ArgumentList	namefmt		5136690	1					
ANR	5136855	Argument	namefmt		5136690	0					
ANR	5136856	Identifier	namefmt		5136690	0					
ANR	5136857	Argument	"""struct"""		5136690	1					
ANR	5136858	PrimaryExpression	"""struct"""		5136690	0					
ANR	5136859	ExpressionStatement	"p -> cb_printf ( ""<%s>\\n"" , name )"	1808:2:43491:43520	5136690	2	True				
ANR	5136860	CallExpression	"p -> cb_printf ( ""<%s>\\n"" , name )"		5136690	0					
ANR	5136861	Callee	p -> cb_printf		5136690	0					
ANR	5136862	PtrMemberAccess	p -> cb_printf		5136690	0					
ANR	5136863	Identifier	p		5136690	0					
ANR	5136864	Identifier	cb_printf		5136690	1					
ANR	5136865	ArgumentList	"""<%s>\\n"""		5136690	1					
ANR	5136866	Argument	"""<%s>\\n"""		5136690	0					
ANR	5136867	PrimaryExpression	"""<%s>\\n"""		5136690	0					
ANR	5136868	Argument	name		5136690	1					
ANR	5136869	Identifier	name		5136690	0					
ANR	5136870	ExpressionStatement	"r_print_format ( p , seek , b , len , fmt , mode , setval , field )"	1810:1:43526:43584	5136690	7	True				
ANR	5136871	CallExpression	"r_print_format ( p , seek , b , len , fmt , mode , setval , field )"		5136690	0					
ANR	5136872	Callee	r_print_format		5136690	0					
ANR	5136873	Identifier	r_print_format		5136690	0					
ANR	5136874	ArgumentList	p		5136690	1					
ANR	5136875	Argument	p		5136690	0					
ANR	5136876	Identifier	p		5136690	0					
ANR	5136877	Argument	seek		5136690	1					
ANR	5136878	Identifier	seek		5136690	0					
ANR	5136879	Argument	b		5136690	2					
ANR	5136880	Identifier	b		5136690	0					
ANR	5136881	Argument	len		5136690	3					
ANR	5136882	Identifier	len		5136690	0					
ANR	5136883	Argument	fmt		5136690	4					
ANR	5136884	Identifier	fmt		5136690	0					
ANR	5136885	Argument	mode		5136690	5					
ANR	5136886	Identifier	mode		5136690	0					
ANR	5136887	Argument	setval		5136690	6					
ANR	5136888	Identifier	setval		5136690	0					
ANR	5136889	Argument	field		5136690	7					
ANR	5136890	Identifier	field		5136690	0					
ANR	5136891	ReturnStatement	"return r_print_format_struct_size ( p , fmt , mode , 0 ) ;"	1811:1:43587:43638	5136690	8	True				
ANR	5136892	CallExpression	"r_print_format_struct_size ( p , fmt , mode , 0 )"		5136690	0					
ANR	5136893	Callee	r_print_format_struct_size		5136690	0					
ANR	5136894	Identifier	r_print_format_struct_size		5136690	0					
ANR	5136895	ArgumentList	p		5136690	1					
ANR	5136896	Argument	p		5136690	0					
ANR	5136897	Identifier	p		5136690	0					
ANR	5136898	Argument	fmt		5136690	1					
ANR	5136899	Identifier	fmt		5136690	0					
ANR	5136900	Argument	mode		5136690	2					
ANR	5136901	Identifier	mode		5136690	0					
ANR	5136902	Argument	0		5136690	3					
ANR	5136903	PrimaryExpression	0		5136690	0					
ANR	5136904	ReturnType	static int		5136690	1					
ANR	5136905	Identifier	r_print_format_struct		5136690	2					
ANR	5136906	ParameterList	"RPrint * p , ut64 seek , const ut8 * b , int len , const char * name , int slide , int mode , const char * setval , char * field , int anon"		5136690	3					
ANR	5136907	Parameter	RPrint * p	1780:33:42672:42680	5136690	0	True				
ANR	5136908	ParameterType	RPrint *		5136690	0					
ANR	5136909	Identifier	p		5136690	1					
ANR	5136910	Parameter	ut64 seek	1780:44:42683:42691	5136690	1	True				
ANR	5136911	ParameterType	ut64		5136690	0					
ANR	5136912	Identifier	seek		5136690	1					
ANR	5136913	Parameter	const ut8 * b	1780:55:42694:42705	5136690	2	True				
ANR	5136914	ParameterType	const ut8 *		5136690	0					
ANR	5136915	Identifier	b		5136690	1					
ANR	5136916	Parameter	int len	1780:69:42708:42714	5136690	3	True				
ANR	5136917	ParameterType	int		5136690	0					
ANR	5136918	Identifier	len		5136690	1					
ANR	5136919	Parameter	const char * name	1780:78:42717:42732	5136690	4	True				
ANR	5136920	ParameterType	const char *		5136690	0					
ANR	5136921	Identifier	name		5136690	1					
ANR	5136922	Parameter	int slide	1781:2:42737:42745	5136690	5	True				
ANR	5136923	ParameterType	int		5136690	0					
ANR	5136924	Identifier	slide		5136690	1					
ANR	5136925	Parameter	int mode	1781:13:42748:42755	5136690	6	True				
ANR	5136926	ParameterType	int		5136690	0					
ANR	5136927	Identifier	mode		5136690	1					
ANR	5136928	Parameter	const char * setval	1781:23:42758:42775	5136690	7	True				
ANR	5136929	ParameterType	const char *		5136690	0					
ANR	5136930	Identifier	setval		5136690	1					
ANR	5136931	Parameter	char * field	1781:43:42778:42788	5136690	8	True				
ANR	5136932	ParameterType	char *		5136690	0					
ANR	5136933	Identifier	field		5136690	1					
ANR	5136934	Parameter	int anon	1781:56:42791:42798	5136690	9	True				
ANR	5136935	ParameterType	int		5136690	0					
ANR	5136936	Identifier	anon		5136690	1					
ANR	5136937	CFGEntryNode	ENTRY		5136690		True				
ANR	5136938	CFGExitNode	EXIT		5136690		True				
ANR	5136939	Symbol	namefmt		5136690						
ANR	5136940	Symbol	* fmt		5136690						
ANR	5136941	Symbol	r_print_format_struct_size		5136690						
ANR	5136942	Symbol	fmt		5136690						
ANR	5136943	Symbol	seek		5136690						
ANR	5136944	Symbol	MUSTSEE		5136690						
ANR	5136945	Symbol	mode		5136690						
ANR	5136946	Symbol	p -> formats		5136690						
ANR	5136947	Symbol	len		5136690						
ANR	5136948	Symbol	SEEVALUE		5136690						
ANR	5136949	Symbol	anon		5136690						
ANR	5136950	Symbol	b		5136690						
ANR	5136951	Symbol	NULL		5136690						
ANR	5136952	Symbol	STRUCTFLAG		5136690						
ANR	5136953	Symbol	sdb_get		5136690						
ANR	5136954	Symbol	STRUCTPTR		5136690						
ANR	5136955	Symbol	NESTDEPTH		5136690						
ANR	5136956	Symbol	p -> sdb_types		5136690						
ANR	5136957	Symbol	p		5136690						
ANR	5136958	Symbol	field		5136690						
ANR	5136959	Symbol	slide		5136690						
ANR	5136960	Symbol	name		5136690						
ANR	5136961	Symbol	* p		5136690						
ANR	5136962	Symbol	setval		5136690						
ANR	5136963	Symbol	r_type_format		5136690						
ANR	5136964	Function	get_args_offset	1814:0:43643:43967							
ANR	5136965	FunctionDef	get_args_offset (const char * arg)		5136964	0					
ANR	5136966	CompoundStatement		1814:46:43689:43967	5136964	0					
ANR	5136967	IdentifierDeclStatement	"char * args = strchr ( arg , ' ' ) ;"	1815:1:43692:43722	5136964	0	True				
ANR	5136968	IdentifierDecl	"* args = strchr ( arg , ' ' )"		5136964	0					
ANR	5136969	IdentifierDeclType	char *		5136964	0					
ANR	5136970	Identifier	args		5136964	1					
ANR	5136971	AssignmentExpression	"* args = strchr ( arg , ' ' )"		5136964	2		=			
ANR	5136972	Identifier	args		5136964	0					
ANR	5136973	CallExpression	"strchr ( arg , ' ' )"		5136964	1					
ANR	5136974	Callee	strchr		5136964	0					
ANR	5136975	Identifier	strchr		5136964	0					
ANR	5136976	ArgumentList	arg		5136964	1					
ANR	5136977	Argument	arg		5136964	0					
ANR	5136978	Identifier	arg		5136964	0					
ANR	5136979	Argument	' '		5136964	1					
ANR	5136980	PrimaryExpression	' '		5136964	0					
ANR	5136981	IdentifierDeclStatement	"char * sq_bracket = strchr ( arg , '[' ) ;"	1816:1:43725:43761	5136964	1	True				
ANR	5136982	IdentifierDecl	"* sq_bracket = strchr ( arg , '[' )"		5136964	0					
ANR	5136983	IdentifierDeclType	char *		5136964	0					
ANR	5136984	Identifier	sq_bracket		5136964	1					
ANR	5136985	AssignmentExpression	"* sq_bracket = strchr ( arg , '[' )"		5136964	2		=			
ANR	5136986	Identifier	sq_bracket		5136964	0					
ANR	5136987	CallExpression	"strchr ( arg , '[' )"		5136964	1					
ANR	5136988	Callee	strchr		5136964	0					
ANR	5136989	Identifier	strchr		5136964	0					
ANR	5136990	ArgumentList	arg		5136964	1					
ANR	5136991	Argument	arg		5136964	0					
ANR	5136992	Identifier	arg		5136964	0					
ANR	5136993	Argument	'['		5136964	1					
ANR	5136994	PrimaryExpression	'['		5136964	0					
ANR	5136995	IdentifierDeclStatement	int max = 30 ;	1817:1:43764:43776	5136964	2	True				
ANR	5136996	IdentifierDecl	max = 30		5136964	0					
ANR	5136997	IdentifierDeclType	int		5136964	0					
ANR	5136998	Identifier	max		5136964	1					
ANR	5136999	AssignmentExpression	max = 30		5136964	2		=			
ANR	5137000	Identifier	max		5136964	0					
ANR	5137001	PrimaryExpression	30		5136964	1					
ANR	5137002	IfStatement	if ( args && sq_bracket )		5136964	3					
ANR	5137003	Condition	args && sq_bracket	1818:5:43783:43800	5136964	0	True				
ANR	5137004	AndExpression	args && sq_bracket		5136964	0		&&			
ANR	5137005	Identifier	args		5136964	0					
ANR	5137006	Identifier	sq_bracket		5136964	1					
ANR	5137007	CompoundStatement		6:2:117:154	5136964	1					
ANR	5137008	IdentifierDeclStatement	"char * csq_bracket = strchr ( arg , ']' ) ;"	1819:2:43807:43844	5136964	0	True				
ANR	5137009	IdentifierDecl	"* csq_bracket = strchr ( arg , ']' )"		5136964	0					
ANR	5137010	IdentifierDeclType	char *		5136964	0					
ANR	5137011	Identifier	csq_bracket		5136964	1					
ANR	5137012	AssignmentExpression	"* csq_bracket = strchr ( arg , ']' )"		5136964	2		=			
ANR	5137013	Identifier	csq_bracket		5136964	0					
ANR	5137014	CallExpression	"strchr ( arg , ']' )"		5136964	1					
ANR	5137015	Callee	strchr		5136964	0					
ANR	5137016	Identifier	strchr		5136964	0					
ANR	5137017	ArgumentList	arg		5136964	1					
ANR	5137018	Argument	arg		5136964	0					
ANR	5137019	Identifier	arg		5136964	0					
ANR	5137020	Argument	']'		5136964	1					
ANR	5137021	PrimaryExpression	']'		5136964	0					
ANR	5137022	WhileStatement	while ( args && csq_bracket && csq_bracket > args && max -- )		5136964	1					
ANR	5137023	Condition	args && csq_bracket && csq_bracket > args && max --	1820:9:43855:43904	5136964	0	True				
ANR	5137024	AndExpression	args && csq_bracket && csq_bracket > args && max --		5136964	0		&&			
ANR	5137025	Identifier	args		5136964	0					
ANR	5137026	AndExpression	csq_bracket && csq_bracket > args && max --		5136964	1		&&			
ANR	5137027	Identifier	csq_bracket		5136964	0					
ANR	5137028	AndExpression	csq_bracket > args && max --		5136964	1		&&			
ANR	5137029	RelationalExpression	csq_bracket > args		5136964	0		>			
ANR	5137030	Identifier	csq_bracket		5136964	0					
ANR	5137031	Identifier	args		5136964	1					
ANR	5137032	PostIncDecOperationExpression	max --		5136964	1					
ANR	5137033	Identifier	max		5136964	0					
ANR	5137034	IncDec	--		5136964	1					
ANR	5137035	CompoundStatement		7:61:217:217	5136964	1					
ANR	5137036	ExpressionStatement	"args = strchr ( csq_bracket , ' ' )"	1821:3:43912:43944	5136964	0	True				
ANR	5137037	AssignmentExpression	"args = strchr ( csq_bracket , ' ' )"		5136964	0		=			
ANR	5137038	Identifier	args		5136964	0					
ANR	5137039	CallExpression	"strchr ( csq_bracket , ' ' )"		5136964	1					
ANR	5137040	Callee	strchr		5136964	0					
ANR	5137041	Identifier	strchr		5136964	0					
ANR	5137042	ArgumentList	csq_bracket		5136964	1					
ANR	5137043	Argument	csq_bracket		5136964	0					
ANR	5137044	Identifier	csq_bracket		5136964	0					
ANR	5137045	Argument	' '		5136964	1					
ANR	5137046	PrimaryExpression	' '		5136964	0					
ANR	5137047	ReturnStatement	return args ;	1824:1:43954:43965	5136964	4	True				
ANR	5137048	Identifier	args		5136964	0					
ANR	5137049	ReturnType	static char *		5136964	1					
ANR	5137050	Identifier	get_args_offset		5136964	2					
ANR	5137051	ParameterList	const char * arg		5136964	3					
ANR	5137052	Parameter	const char * arg	1814:29:43672:43686	5136964	0	True				
ANR	5137053	ParameterType	const char *		5136964	0					
ANR	5137054	Identifier	arg		5136964	1					
ANR	5137055	CFGEntryNode	ENTRY		5136964		True				
ANR	5137056	CFGExitNode	EXIT		5136964		True				
ANR	5137057	Symbol	args		5136964						
ANR	5137058	Symbol	sq_bracket		5136964						
ANR	5137059	Symbol	max		5136964						
ANR	5137060	Symbol	arg		5136964						
ANR	5137061	Symbol	strchr		5136964						
ANR	5137062	Symbol	csq_bracket		5136964						
ANR	5137063	Function	get_format_type	1827:0:43970:44696							
ANR	5137064	FunctionDef	get_format_type (const char fmt)		5137063	0					
ANR	5137065	CompoundStatement		1827:45:44015:44696	5137063	0					
ANR	5137066	IdentifierDeclStatement	char * type = NULL ;	1828:1:44018:44035	5137063	0	True				
ANR	5137067	IdentifierDecl	* type = NULL		5137063	0					
ANR	5137068	IdentifierDeclType	char *		5137063	0					
ANR	5137069	Identifier	type		5137063	1					
ANR	5137070	AssignmentExpression	* type = NULL		5137063	2		=			
ANR	5137071	Identifier	NULL		5137063	0					
ANR	5137072	Identifier	NULL		5137063	1					
ANR	5137073	SwitchStatement	switch ( fmt )		5137063	1					
ANR	5137074	Condition	fmt	1829:9:44046:44048	5137063	0	True				
ANR	5137075	Identifier	fmt		5137063	0					
ANR	5137076	CompoundStatement		3:14:35:35	5137063	1					
ANR	5137077	Label	case 'b' :	1830:1:44054:44062	5137063	0	True				
ANR	5137078	Label	case 'C' :	1831:1:44065:44073	5137063	1	True				
ANR	5137079	ExpressionStatement	"type = strdup ( ""uint8_t"" )"	1832:2:44077:44102	5137063	2	True				
ANR	5137080	AssignmentExpression	"type = strdup ( ""uint8_t"" )"		5137063	0		=			
ANR	5137081	Identifier	type		5137063	0					
ANR	5137082	CallExpression	"strdup ( ""uint8_t"" )"		5137063	1					
ANR	5137083	Callee	strdup		5137063	0					
ANR	5137084	Identifier	strdup		5137063	0					
ANR	5137085	ArgumentList	"""uint8_t"""		5137063	1					
ANR	5137086	Argument	"""uint8_t"""		5137063	0					
ANR	5137087	PrimaryExpression	"""uint8_t"""		5137063	0					
ANR	5137088	BreakStatement	break ;	1833:2:44106:44111	5137063	3	True				
ANR	5137089	Label	case 'c' :	1834:1:44114:44122	5137063	4	True				
ANR	5137090	ExpressionStatement	"type = strdup ( ""int8_t"" )"	1835:2:44126:44150	5137063	5	True				
ANR	5137091	AssignmentExpression	"type = strdup ( ""int8_t"" )"		5137063	0		=			
ANR	5137092	Identifier	type		5137063	0					
ANR	5137093	CallExpression	"strdup ( ""int8_t"" )"		5137063	1					
ANR	5137094	Callee	strdup		5137063	0					
ANR	5137095	Identifier	strdup		5137063	0					
ANR	5137096	ArgumentList	"""int8_t"""		5137063	1					
ANR	5137097	Argument	"""int8_t"""		5137063	0					
ANR	5137098	PrimaryExpression	"""int8_t"""		5137063	0					
ANR	5137099	BreakStatement	break ;	1836:2:44154:44159	5137063	6	True				
ANR	5137100	Label	case 'd' :	1837:1:44162:44170	5137063	7	True				
ANR	5137101	Label	case 'i' :	1838:1:44173:44181	5137063	8	True				
ANR	5137102	Label	case 'o' :	1839:1:44184:44192	5137063	9	True				
ANR	5137103	Label	case 'x' :	1840:1:44195:44203	5137063	10	True				
ANR	5137104	ExpressionStatement	"type = strdup ( ""int32_t"" )"	1841:2:44207:44232	5137063	11	True				
ANR	5137105	AssignmentExpression	"type = strdup ( ""int32_t"" )"		5137063	0		=			
ANR	5137106	Identifier	type		5137063	0					
ANR	5137107	CallExpression	"strdup ( ""int32_t"" )"		5137063	1					
ANR	5137108	Callee	strdup		5137063	0					
ANR	5137109	Identifier	strdup		5137063	0					
ANR	5137110	ArgumentList	"""int32_t"""		5137063	1					
ANR	5137111	Argument	"""int32_t"""		5137063	0					
ANR	5137112	PrimaryExpression	"""int32_t"""		5137063	0					
ANR	5137113	BreakStatement	break ;	1842:2:44236:44241	5137063	12	True				
ANR	5137114	Label	case 'E' :	1843:1:44244:44252	5137063	13	True				
ANR	5137115	ExpressionStatement	"type = strdup ( ""enum"" )"	1844:2:44256:44278	5137063	14	True				
ANR	5137116	AssignmentExpression	"type = strdup ( ""enum"" )"		5137063	0		=			
ANR	5137117	Identifier	type		5137063	0					
ANR	5137118	CallExpression	"strdup ( ""enum"" )"		5137063	1					
ANR	5137119	Callee	strdup		5137063	0					
ANR	5137120	Identifier	strdup		5137063	0					
ANR	5137121	ArgumentList	"""enum"""		5137063	1					
ANR	5137122	Argument	"""enum"""		5137063	0					
ANR	5137123	PrimaryExpression	"""enum"""		5137063	0					
ANR	5137124	BreakStatement	break ;	1845:2:44282:44287	5137063	15	True				
ANR	5137125	Label	case 'f' :	1846:1:44290:44298	5137063	16	True				
ANR	5137126	ExpressionStatement	"type = strdup ( ""float"" )"	1847:2:44302:44325	5137063	17	True				
ANR	5137127	AssignmentExpression	"type = strdup ( ""float"" )"		5137063	0		=			
ANR	5137128	Identifier	type		5137063	0					
ANR	5137129	CallExpression	"strdup ( ""float"" )"		5137063	1					
ANR	5137130	Callee	strdup		5137063	0					
ANR	5137131	Identifier	strdup		5137063	0					
ANR	5137132	ArgumentList	"""float"""		5137063	1					
ANR	5137133	Argument	"""float"""		5137063	0					
ANR	5137134	PrimaryExpression	"""float"""		5137063	0					
ANR	5137135	BreakStatement	break ;	1848:2:44329:44334	5137063	18	True				
ANR	5137136	Label	case 'F' :	1849:1:44337:44345	5137063	19	True				
ANR	5137137	ExpressionStatement	"type = strdup ( ""double"" )"	1850:2:44349:44373	5137063	20	True				
ANR	5137138	AssignmentExpression	"type = strdup ( ""double"" )"		5137063	0		=			
ANR	5137139	Identifier	type		5137063	0					
ANR	5137140	CallExpression	"strdup ( ""double"" )"		5137063	1					
ANR	5137141	Callee	strdup		5137063	0					
ANR	5137142	Identifier	strdup		5137063	0					
ANR	5137143	ArgumentList	"""double"""		5137063	1					
ANR	5137144	Argument	"""double"""		5137063	0					
ANR	5137145	PrimaryExpression	"""double"""		5137063	0					
ANR	5137146	BreakStatement	break ;	1851:2:44377:44382	5137063	21	True				
ANR	5137147	Label	case 'q' :	1852:1:44385:44393	5137063	22	True				
ANR	5137148	ExpressionStatement	"type = strdup ( ""uint64_t"" )"	1853:2:44397:44423	5137063	23	True				
ANR	5137149	AssignmentExpression	"type = strdup ( ""uint64_t"" )"		5137063	0		=			
ANR	5137150	Identifier	type		5137063	0					
ANR	5137151	CallExpression	"strdup ( ""uint64_t"" )"		5137063	1					
ANR	5137152	Callee	strdup		5137063	0					
ANR	5137153	Identifier	strdup		5137063	0					
ANR	5137154	ArgumentList	"""uint64_t"""		5137063	1					
ANR	5137155	Argument	"""uint64_t"""		5137063	0					
ANR	5137156	PrimaryExpression	"""uint64_t"""		5137063	0					
ANR	5137157	BreakStatement	break ;	1854:2:44427:44432	5137063	24	True				
ANR	5137158	Label	case 'u' :	1855:1:44435:44443	5137063	25	True				
ANR	5137159	ExpressionStatement	"type = strdup ( ""uleb128_t"" )"	1856:2:44447:44474	5137063	26	True				
ANR	5137160	AssignmentExpression	"type = strdup ( ""uleb128_t"" )"		5137063	0		=			
ANR	5137161	Identifier	type		5137063	0					
ANR	5137162	CallExpression	"strdup ( ""uleb128_t"" )"		5137063	1					
ANR	5137163	Callee	strdup		5137063	0					
ANR	5137164	Identifier	strdup		5137063	0					
ANR	5137165	ArgumentList	"""uleb128_t"""		5137063	1					
ANR	5137166	Argument	"""uleb128_t"""		5137063	0					
ANR	5137167	PrimaryExpression	"""uleb128_t"""		5137063	0					
ANR	5137168	BreakStatement	break ;	1857:2:44478:44483	5137063	27	True				
ANR	5137169	Label	case 'w' :	1858:1:44486:44494	5137063	28	True				
ANR	5137170	ExpressionStatement	"type = strdup ( ""uint16_t"" )"	1859:2:44498:44524	5137063	29	True				
ANR	5137171	AssignmentExpression	"type = strdup ( ""uint16_t"" )"		5137063	0		=			
ANR	5137172	Identifier	type		5137063	0					
ANR	5137173	CallExpression	"strdup ( ""uint16_t"" )"		5137063	1					
ANR	5137174	Callee	strdup		5137063	0					
ANR	5137175	Identifier	strdup		5137063	0					
ANR	5137176	ArgumentList	"""uint16_t"""		5137063	1					
ANR	5137177	Argument	"""uint16_t"""		5137063	0					
ANR	5137178	PrimaryExpression	"""uint16_t"""		5137063	0					
ANR	5137179	BreakStatement	break ;	1860:2:44528:44533	5137063	30	True				
ANR	5137180	Label	case 'X' :	1861:1:44536:44544	5137063	31	True				
ANR	5137181	ExpressionStatement	"type = strdup ( ""uint8_t[]"" )"	1862:2:44548:44575	5137063	32	True				
ANR	5137182	AssignmentExpression	"type = strdup ( ""uint8_t[]"" )"		5137063	0		=			
ANR	5137183	Identifier	type		5137063	0					
ANR	5137184	CallExpression	"strdup ( ""uint8_t[]"" )"		5137063	1					
ANR	5137185	Callee	strdup		5137063	0					
ANR	5137186	Identifier	strdup		5137063	0					
ANR	5137187	ArgumentList	"""uint8_t[]"""		5137063	1					
ANR	5137188	Argument	"""uint8_t[]"""		5137063	0					
ANR	5137189	PrimaryExpression	"""uint8_t[]"""		5137063	0					
ANR	5137190	BreakStatement	break ;	1863:2:44579:44584	5137063	33	True				
ANR	5137191	Label	case 'D' :	1864:1:44587:44595	5137063	34	True				
ANR	5137192	Label	case 's' :	1865:1:44598:44606	5137063	35	True				
ANR	5137193	Label	case 'S' :	1866:1:44609:44617	5137063	36	True				
ANR	5137194	Label	case 't' :	1867:1:44620:44628	5137063	37	True				
ANR	5137195	Label	case 'z' :	1868:1:44631:44639	5137063	38	True				
ANR	5137196	Label	case 'Z' :	1869:1:44642:44650	5137063	39	True				
ANR	5137197	ExpressionStatement	"type = strdup ( ""char*"" )"	1870:2:44654:44677	5137063	40	True				
ANR	5137198	AssignmentExpression	"type = strdup ( ""char*"" )"		5137063	0		=			
ANR	5137199	Identifier	type		5137063	0					
ANR	5137200	CallExpression	"strdup ( ""char*"" )"		5137063	1					
ANR	5137201	Callee	strdup		5137063	0					
ANR	5137202	Identifier	strdup		5137063	0					
ANR	5137203	ArgumentList	"""char*"""		5137063	1					
ANR	5137204	Argument	"""char*"""		5137063	0					
ANR	5137205	PrimaryExpression	"""char*"""		5137063	0					
ANR	5137206	ReturnStatement	return type ;	1872:1:44683:44694	5137063	2	True				
ANR	5137207	Identifier	type		5137063	0					
ANR	5137208	ReturnType	static char *		5137063	1					
ANR	5137209	Identifier	get_format_type		5137063	2					
ANR	5137210	ParameterList	const char fmt		5137063	3					
ANR	5137211	Parameter	const char fmt	1827:29:43999:44012	5137063	0	True				
ANR	5137212	ParameterType	const char		5137063	0					
ANR	5137213	Identifier	fmt		5137063	1					
ANR	5137214	CFGEntryNode	ENTRY		5137063		True				
ANR	5137215	CFGExitNode	EXIT		5137063		True				
ANR	5137216	Symbol	NULL		5137063						
ANR	5137217	Symbol	strdup		5137063						
ANR	5137218	Symbol	fmt		5137063						
ANR	5137219	Symbol	type		5137063						
ANR	5137220	Function	r_print_format	1877:0:44801:65103							
ANR	5137221	FunctionDef	"r_print_format (RPrint * p , ut64 seek , const ut8 * b , const int len , const char * formatname , int mode , const char * setval , char * ofield)"		5137220	0					
ANR	5137222	CompoundStatement		1878:70:44947:65103	5137220	0					
ANR	5137223	IdentifierDeclStatement	"int nargs , i , j , invalid , nexti , idx , times , otimes , endian , isptr = 0 ;"	1879:1:44950:45020	5137220	0	True				
ANR	5137224	IdentifierDecl	nargs		5137220	0					
ANR	5137225	IdentifierDeclType	int		5137220	0					
ANR	5137226	Identifier	nargs		5137220	1					
ANR	5137227	IdentifierDecl	i		5137220	1					
ANR	5137228	IdentifierDeclType	int		5137220	0					
ANR	5137229	Identifier	i		5137220	1					
ANR	5137230	IdentifierDecl	j		5137220	2					
ANR	5137231	IdentifierDeclType	int		5137220	0					
ANR	5137232	Identifier	j		5137220	1					
ANR	5137233	IdentifierDecl	invalid		5137220	3					
ANR	5137234	IdentifierDeclType	int		5137220	0					
ANR	5137235	Identifier	invalid		5137220	1					
ANR	5137236	IdentifierDecl	nexti		5137220	4					
ANR	5137237	IdentifierDeclType	int		5137220	0					
ANR	5137238	Identifier	nexti		5137220	1					
ANR	5137239	IdentifierDecl	idx		5137220	5					
ANR	5137240	IdentifierDeclType	int		5137220	0					
ANR	5137241	Identifier	idx		5137220	1					
ANR	5137242	IdentifierDecl	times		5137220	6					
ANR	5137243	IdentifierDeclType	int		5137220	0					
ANR	5137244	Identifier	times		5137220	1					
ANR	5137245	IdentifierDecl	otimes		5137220	7					
ANR	5137246	IdentifierDeclType	int		5137220	0					
ANR	5137247	Identifier	otimes		5137220	1					
ANR	5137248	IdentifierDecl	endian		5137220	8					
ANR	5137249	IdentifierDeclType	int		5137220	0					
ANR	5137250	Identifier	endian		5137220	1					
ANR	5137251	IdentifierDecl	isptr = 0		5137220	9					
ANR	5137252	IdentifierDeclType	int		5137220	0					
ANR	5137253	Identifier	isptr		5137220	1					
ANR	5137254	AssignmentExpression	isptr = 0		5137220	2		=			
ANR	5137255	Identifier	isptr		5137220	0					
ANR	5137256	PrimaryExpression	0		5137220	1					
ANR	5137257	IdentifierDeclStatement	const int old_bits = p -> bits ;	1880:1:45023:45051	5137220	1	True				
ANR	5137258	IdentifierDecl	old_bits = p -> bits		5137220	0					
ANR	5137259	IdentifierDeclType	const int		5137220	0					
ANR	5137260	Identifier	old_bits		5137220	1					
ANR	5137261	AssignmentExpression	old_bits = p -> bits		5137220	2		=			
ANR	5137262	Identifier	old_bits		5137220	0					
ANR	5137263	PtrMemberAccess	p -> bits		5137220	1					
ANR	5137264	Identifier	p		5137220	0					
ANR	5137265	Identifier	bits		5137220	1					
ANR	5137266	IdentifierDeclStatement	"char * args = NULL , * bracket , tmp , last = 0 ;"	1881:1:45054:45096	5137220	2	True				
ANR	5137267	IdentifierDecl	* args = NULL		5137220	0					
ANR	5137268	IdentifierDeclType	char *		5137220	0					
ANR	5137269	Identifier	args		5137220	1					
ANR	5137270	AssignmentExpression	* args = NULL		5137220	2		=			
ANR	5137271	Identifier	NULL		5137220	0					
ANR	5137272	Identifier	NULL		5137220	1					
ANR	5137273	IdentifierDecl	* bracket		5137220	1					
ANR	5137274	IdentifierDeclType	char *		5137220	0					
ANR	5137275	Identifier	bracket		5137220	1					
ANR	5137276	IdentifierDecl	tmp		5137220	2					
ANR	5137277	IdentifierDeclType	char		5137220	0					
ANR	5137278	Identifier	tmp		5137220	1					
ANR	5137279	IdentifierDecl	last = 0		5137220	3					
ANR	5137280	IdentifierDeclType	char		5137220	0					
ANR	5137281	Identifier	last		5137220	1					
ANR	5137282	AssignmentExpression	last = 0		5137220	2		=			
ANR	5137283	Identifier	last		5137220	0					
ANR	5137284	PrimaryExpression	0		5137220	1					
ANR	5137285	IdentifierDeclStatement	"ut64 addr = 0 , addr64 = 0 , seeki = 0 ;"	1882:1:45099:45135	5137220	3	True				
ANR	5137286	IdentifierDecl	addr = 0		5137220	0					
ANR	5137287	IdentifierDeclType	ut64		5137220	0					
ANR	5137288	Identifier	addr		5137220	1					
ANR	5137289	AssignmentExpression	addr = 0		5137220	2		=			
ANR	5137290	Identifier	addr		5137220	0					
ANR	5137291	PrimaryExpression	0		5137220	1					
ANR	5137292	IdentifierDecl	addr64 = 0		5137220	1					
ANR	5137293	IdentifierDeclType	ut64		5137220	0					
ANR	5137294	Identifier	addr64		5137220	1					
ANR	5137295	AssignmentExpression	addr64 = 0		5137220	2		=			
ANR	5137296	Identifier	addr64		5137220	0					
ANR	5137297	PrimaryExpression	0		5137220	1					
ANR	5137298	IdentifierDecl	seeki = 0		5137220	2					
ANR	5137299	IdentifierDeclType	ut64		5137220	0					
ANR	5137300	Identifier	seeki		5137220	1					
ANR	5137301	AssignmentExpression	seeki = 0		5137220	2		=			
ANR	5137302	Identifier	seeki		5137220	0					
ANR	5137303	PrimaryExpression	0		5137220	1					
ANR	5137304	Statement	static	1883:1:45138:45143	5137220	4	True				
ANR	5137305	IdentifierDeclStatement	"int slide = 0 , oldslide = 0 , ident = 4 ;"	1883:8:45145:45183	5137220	5	True				
ANR	5137306	IdentifierDecl	slide = 0		5137220	0					
ANR	5137307	IdentifierDeclType	int		5137220	0					
ANR	5137308	Identifier	slide		5137220	1					
ANR	5137309	AssignmentExpression	slide = 0		5137220	2		=			
ANR	5137310	Identifier	slide		5137220	0					
ANR	5137311	PrimaryExpression	0		5137220	1					
ANR	5137312	IdentifierDecl	oldslide = 0		5137220	1					
ANR	5137313	IdentifierDeclType	int		5137220	0					
ANR	5137314	Identifier	oldslide		5137220	1					
ANR	5137315	AssignmentExpression	oldslide = 0		5137220	2		=			
ANR	5137316	Identifier	oldslide		5137220	0					
ANR	5137317	PrimaryExpression	0		5137220	1					
ANR	5137318	IdentifierDecl	ident = 4		5137220	2					
ANR	5137319	IdentifierDeclType	int		5137220	0					
ANR	5137320	Identifier	ident		5137220	1					
ANR	5137321	AssignmentExpression	ident = 4		5137220	2		=			
ANR	5137322	Identifier	ident		5137220	0					
ANR	5137323	PrimaryExpression	4		5137220	1					
ANR	5137324	IdentifierDeclStatement	"char namefmt [ 32 ] , * field = NULL ;"	1884:1:45186:45217	5137220	6	True				
ANR	5137325	IdentifierDecl	namefmt [ 32 ]		5137220	0					
ANR	5137326	IdentifierDeclType	char [ 32 ]		5137220	0					
ANR	5137327	Identifier	namefmt		5137220	1					
ANR	5137328	PrimaryExpression	32		5137220	2					
ANR	5137329	IdentifierDecl	* field = NULL		5137220	1					
ANR	5137330	IdentifierDeclType	char *		5137220	0					
ANR	5137331	Identifier	field		5137220	1					
ANR	5137332	AssignmentExpression	* field = NULL		5137220	2		=			
ANR	5137333	Identifier	NULL		5137220	0					
ANR	5137334	Identifier	NULL		5137220	1					
ANR	5137335	IdentifierDeclStatement	const char * arg = NULL ;	1885:1:45220:45242	5137220	7	True				
ANR	5137336	IdentifierDecl	* arg = NULL		5137220	0					
ANR	5137337	IdentifierDeclType	const char *		5137220	0					
ANR	5137338	Identifier	arg		5137220	1					
ANR	5137339	AssignmentExpression	* arg = NULL		5137220	2		=			
ANR	5137340	Identifier	NULL		5137220	0					
ANR	5137341	Identifier	NULL		5137220	1					
ANR	5137342	IdentifierDeclStatement	const char * fmt = NULL ;	1886:1:45245:45267	5137220	8	True				
ANR	5137343	IdentifierDecl	* fmt = NULL		5137220	0					
ANR	5137344	IdentifierDeclType	const char *		5137220	0					
ANR	5137345	Identifier	fmt		5137220	1					
ANR	5137346	AssignmentExpression	* fmt = NULL		5137220	2		=			
ANR	5137347	Identifier	NULL		5137220	0					
ANR	5137348	Identifier	NULL		5137220	1					
ANR	5137349	IdentifierDeclStatement	const char * argend ;	1887:1:45270:45288	5137220	9	True				
ANR	5137350	IdentifierDecl	* argend		5137220	0					
ANR	5137351	IdentifierDeclType	const char *		5137220	0					
ANR	5137352	Identifier	argend		5137220	1					
ANR	5137353	IdentifierDeclStatement	int viewflags = 0 ;	1888:1:45291:45308	5137220	10	True				
ANR	5137354	IdentifierDecl	viewflags = 0		5137220	0					
ANR	5137355	IdentifierDeclType	int		5137220	0					
ANR	5137356	Identifier	viewflags		5137220	1					
ANR	5137357	AssignmentExpression	viewflags = 0		5137220	2		=			
ANR	5137358	Identifier	viewflags		5137220	0					
ANR	5137359	PrimaryExpression	0		5137220	1					
ANR	5137360	IdentifierDeclStatement	char * oarg = NULL ;	1889:1:45311:45328	5137220	11	True				
ANR	5137361	IdentifierDecl	* oarg = NULL		5137220	0					
ANR	5137362	IdentifierDeclType	char *		5137220	0					
ANR	5137363	Identifier	oarg		5137220	1					
ANR	5137364	AssignmentExpression	* oarg = NULL		5137220	2		=			
ANR	5137365	Identifier	NULL		5137220	0					
ANR	5137366	Identifier	NULL		5137220	1					
ANR	5137367	IdentifierDeclStatement	char * internal_format = NULL ;	1890:1:45331:45359	5137220	12	True				
ANR	5137368	IdentifierDecl	* internal_format = NULL		5137220	0					
ANR	5137369	IdentifierDeclType	char *		5137220	0					
ANR	5137370	Identifier	internal_format		5137220	1					
ANR	5137371	AssignmentExpression	* internal_format = NULL		5137220	2		=			
ANR	5137372	Identifier	NULL		5137220	0					
ANR	5137373	Identifier	NULL		5137220	1					
ANR	5137374	IfStatement	if ( ! formatname )		5137220	13					
ANR	5137375	Condition	! formatname	1893:5:45405:45415	5137220	0	True				
ANR	5137376	UnaryOperationExpression	! formatname		5137220	0					
ANR	5137377	UnaryOperator	!		5137220	0					
ANR	5137378	Identifier	formatname		5137220	1					
ANR	5137379	CompoundStatement		16:18:470:470	5137220	1					
ANR	5137380	ReturnStatement	return 0 ;	1894:2:45422:45430	5137220	0	True				
ANR	5137381	PrimaryExpression	0		5137220	0					
ANR	5137382	ExpressionStatement	"fmt = sdb_get ( p -> formats , formatname , NULL )"	1896:1:45436:45480	5137220	14	True				
ANR	5137383	AssignmentExpression	"fmt = sdb_get ( p -> formats , formatname , NULL )"		5137220	0		=			
ANR	5137384	Identifier	fmt		5137220	0					
ANR	5137385	CallExpression	"sdb_get ( p -> formats , formatname , NULL )"		5137220	1					
ANR	5137386	Callee	sdb_get		5137220	0					
ANR	5137387	Identifier	sdb_get		5137220	0					
ANR	5137388	ArgumentList	p -> formats		5137220	1					
ANR	5137389	Argument	p -> formats		5137220	0					
ANR	5137390	PtrMemberAccess	p -> formats		5137220	0					
ANR	5137391	Identifier	p		5137220	0					
ANR	5137392	Identifier	formats		5137220	1					
ANR	5137393	Argument	formatname		5137220	1					
ANR	5137394	Identifier	formatname		5137220	0					
ANR	5137395	Argument	NULL		5137220	2					
ANR	5137396	Identifier	NULL		5137220	0					
ANR	5137397	IfStatement	if ( ! fmt )		5137220	15					
ANR	5137398	Condition	! fmt	1897:5:45487:45490	5137220	0	True				
ANR	5137399	UnaryOperationExpression	! fmt		5137220	0					
ANR	5137400	UnaryOperator	!		5137220	0					
ANR	5137401	Identifier	fmt		5137220	1					
ANR	5137402	CompoundStatement		20:11:545:545	5137220	1					
ANR	5137403	ExpressionStatement	fmt = formatname	1898:2:45497:45513	5137220	0	True				
ANR	5137404	AssignmentExpression	fmt = formatname		5137220	0		=			
ANR	5137405	Identifier	fmt		5137220	0					
ANR	5137406	Identifier	formatname		5137220	1					
ANR	5137407	ExpressionStatement	internal_format = strdup ( fmt )	1900:1:45519:45549	5137220	16	True				
ANR	5137408	AssignmentExpression	internal_format = strdup ( fmt )		5137220	0		=			
ANR	5137409	Identifier	internal_format		5137220	0					
ANR	5137410	CallExpression	strdup ( fmt )		5137220	1					
ANR	5137411	Callee	strdup		5137220	0					
ANR	5137412	Identifier	strdup		5137220	0					
ANR	5137413	ArgumentList	fmt		5137220	1					
ANR	5137414	Argument	fmt		5137220	0					
ANR	5137415	Identifier	fmt		5137220	0					
ANR	5137416	ExpressionStatement	fmt = internal_format	1901:1:45552:45573	5137220	17	True				
ANR	5137417	AssignmentExpression	fmt = internal_format		5137220	0		=			
ANR	5137418	Identifier	fmt		5137220	0					
ANR	5137419	Identifier	internal_format		5137220	1					
ANR	5137420	WhileStatement	while ( * fmt && IS_WHITECHAR ( * fmt ) )		5137220	18					
ANR	5137421	Condition	* fmt && IS_WHITECHAR ( * fmt )	1902:8:45583:45609	5137220	0	True				
ANR	5137422	AndExpression	* fmt && IS_WHITECHAR ( * fmt )		5137220	0		&&			
ANR	5137423	UnaryOperationExpression	* fmt		5137220	0					
ANR	5137424	UnaryOperator	*		5137220	0					
ANR	5137425	Identifier	fmt		5137220	1					
ANR	5137426	CallExpression	IS_WHITECHAR ( * fmt )		5137220	1					
ANR	5137427	Callee	IS_WHITECHAR		5137220	0					
ANR	5137428	Identifier	IS_WHITECHAR		5137220	0					
ANR	5137429	ArgumentList	* fmt		5137220	1					
ANR	5137430	Argument	* fmt		5137220	0					
ANR	5137431	UnaryOperationExpression	* fmt		5137220	0					
ANR	5137432	UnaryOperator	*		5137220	0					
ANR	5137433	Identifier	fmt		5137220	1					
ANR	5137434	CompoundStatement		25:37:664:664	5137220	1					
ANR	5137435	ExpressionStatement	fmt ++	1903:2:45616:45621	5137220	0	True				
ANR	5137436	PostIncDecOperationExpression	fmt ++		5137220	0					
ANR	5137437	Identifier	fmt		5137220	0					
ANR	5137438	IncDec	++		5137220	1					
ANR	5137439	ExpressionStatement	argend = fmt + strlen ( fmt )	1905:1:45627:45654	5137220	19	True				
ANR	5137440	AssignmentExpression	argend = fmt + strlen ( fmt )		5137220	0		=			
ANR	5137441	Identifier	argend		5137220	0					
ANR	5137442	AdditiveExpression	fmt + strlen ( fmt )		5137220	1		+			
ANR	5137443	Identifier	fmt		5137220	0					
ANR	5137444	CallExpression	strlen ( fmt )		5137220	1					
ANR	5137445	Callee	strlen		5137220	0					
ANR	5137446	Identifier	strlen		5137220	0					
ANR	5137447	ArgumentList	fmt		5137220	1					
ANR	5137448	Argument	fmt		5137220	0					
ANR	5137449	Identifier	fmt		5137220	0					
ANR	5137450	ExpressionStatement	arg = fmt	1906:1:45657:45666	5137220	20	True				
ANR	5137451	AssignmentExpression	arg = fmt		5137220	0		=			
ANR	5137452	Identifier	arg		5137220	0					
ANR	5137453	Identifier	fmt		5137220	1					
ANR	5137454	ExpressionStatement	nexti = nargs = i = j = 0	1908:1:45670:45695	5137220	21	True				
ANR	5137455	AssignmentExpression	nexti = nargs = i = j = 0		5137220	0		=			
ANR	5137456	Identifier	nexti		5137220	0					
ANR	5137457	AssignmentExpression	nargs = i = j = 0		5137220	1		=			
ANR	5137458	Identifier	nargs		5137220	0					
ANR	5137459	AssignmentExpression	i = j = 0		5137220	1		=			
ANR	5137460	Identifier	i		5137220	0					
ANR	5137461	AssignmentExpression	j = 0		5137220	1		=			
ANR	5137462	Identifier	j		5137220	0					
ANR	5137463	PrimaryExpression	0		5137220	1					
ANR	5137464	IfStatement	if ( len < 1 )		5137220	22					
ANR	5137465	Condition	len < 1	1910:5:45703:45709	5137220	0	True				
ANR	5137466	RelationalExpression	len < 1		5137220	0		<			
ANR	5137467	Identifier	len		5137220	0					
ANR	5137468	PrimaryExpression	1		5137220	1					
ANR	5137469	CompoundStatement		33:14:764:764	5137220	1					
ANR	5137470	ExpressionStatement	free ( internal_format )	1911:2:45716:45738	5137220	0	True				
ANR	5137471	CallExpression	free ( internal_format )		5137220	0					
ANR	5137472	Callee	free		5137220	0					
ANR	5137473	Identifier	free		5137220	0					
ANR	5137474	ArgumentList	internal_format		5137220	1					
ANR	5137475	Argument	internal_format		5137220	0					
ANR	5137476	Identifier	internal_format		5137220	0					
ANR	5137477	ReturnStatement	return 0 ;	1912:2:45742:45750	5137220	1	True				
ANR	5137478	PrimaryExpression	0		5137220	0					
ANR	5137479	IdentifierDeclStatement	"ut8 * buf = calloc ( 1 , len + 2 ) ;"	1915:1:45821:45851	5137220	23	True				
ANR	5137480	IdentifierDecl	"* buf = calloc ( 1 , len + 2 )"		5137220	0					
ANR	5137481	IdentifierDeclType	ut8 *		5137220	0					
ANR	5137482	Identifier	buf		5137220	1					
ANR	5137483	AssignmentExpression	"* buf = calloc ( 1 , len + 2 )"		5137220	2		=			
ANR	5137484	Identifier	buf		5137220	0					
ANR	5137485	CallExpression	"calloc ( 1 , len + 2 )"		5137220	1					
ANR	5137486	Callee	calloc		5137220	0					
ANR	5137487	Identifier	calloc		5137220	0					
ANR	5137488	ArgumentList	1		5137220	1					
ANR	5137489	Argument	1		5137220	0					
ANR	5137490	PrimaryExpression	1		5137220	0					
ANR	5137491	Argument	len + 2		5137220	1					
ANR	5137492	AdditiveExpression	len + 2		5137220	0		+			
ANR	5137493	Identifier	len		5137220	0					
ANR	5137494	PrimaryExpression	2		5137220	1					
ANR	5137495	IfStatement	if ( ! buf )		5137220	24					
ANR	5137496	Condition	! buf	1916:5:45858:45861	5137220	0	True				
ANR	5137497	UnaryOperationExpression	! buf		5137220	0					
ANR	5137498	UnaryOperator	!		5137220	0					
ANR	5137499	Identifier	buf		5137220	1					
ANR	5137500	CompoundStatement		39:11:916:916	5137220	1					
ANR	5137501	ExpressionStatement	free ( internal_format )	1917:2:45868:45890	5137220	0	True				
ANR	5137502	CallExpression	free ( internal_format )		5137220	0					
ANR	5137503	Callee	free		5137220	0					
ANR	5137504	Identifier	free		5137220	0					
ANR	5137505	ArgumentList	internal_format		5137220	1					
ANR	5137506	Argument	internal_format		5137220	0					
ANR	5137507	Identifier	internal_format		5137220	0					
ANR	5137508	ReturnStatement	return 0 ;	1918:2:45894:45902	5137220	1	True				
ANR	5137509	PrimaryExpression	0		5137220	0					
ANR	5137510	ExpressionStatement	"memcpy ( buf , b , len )"	1920:1:45908:45928	5137220	25	True				
ANR	5137511	CallExpression	"memcpy ( buf , b , len )"		5137220	0					
ANR	5137512	Callee	memcpy		5137220	0					
ANR	5137513	Identifier	memcpy		5137220	0					
ANR	5137514	ArgumentList	buf		5137220	1					
ANR	5137515	Argument	buf		5137220	0					
ANR	5137516	Identifier	buf		5137220	0					
ANR	5137517	Argument	b		5137220	1					
ANR	5137518	Identifier	b		5137220	0					
ANR	5137519	Argument	len		5137220	2					
ANR	5137520	Identifier	len		5137220	0					
ANR	5137521	ExpressionStatement	endian = p -> big_endian	1921:1:45931:45953	5137220	26	True				
ANR	5137522	AssignmentExpression	endian = p -> big_endian		5137220	0		=			
ANR	5137523	Identifier	endian		5137220	0					
ANR	5137524	PtrMemberAccess	p -> big_endian		5137220	1					
ANR	5137525	Identifier	p		5137220	0					
ANR	5137526	Identifier	big_endian		5137220	1					
ANR	5137527	IfStatement	if ( ofield && ofield != MINUSONE )		5137220	27					
ANR	5137528	Condition	ofield && ofield != MINUSONE	1923:5:45961:45988	5137220	0	True				
ANR	5137529	AndExpression	ofield && ofield != MINUSONE		5137220	0		&&			
ANR	5137530	Identifier	ofield		5137220	0					
ANR	5137531	EqualityExpression	ofield != MINUSONE		5137220	1		!=			
ANR	5137532	Identifier	ofield		5137220	0					
ANR	5137533	Identifier	MINUSONE		5137220	1					
ANR	5137534	CompoundStatement		46:35:1043:1043	5137220	1					
ANR	5137535	ExpressionStatement	field = strdup ( ofield )	1924:2:45995:46018	5137220	0	True				
ANR	5137536	AssignmentExpression	field = strdup ( ofield )		5137220	0		=			
ANR	5137537	Identifier	field		5137220	0					
ANR	5137538	CallExpression	strdup ( ofield )		5137220	1					
ANR	5137539	Callee	strdup		5137220	0					
ANR	5137540	Identifier	strdup		5137220	0					
ANR	5137541	ArgumentList	ofield		5137220	1					
ANR	5137542	Argument	ofield		5137220	0					
ANR	5137543	Identifier	ofield		5137220	0					
ANR	5137544	ExpressionStatement	otimes = times = atoi ( arg )	1927:1:46041:46068	5137220	28	True				
ANR	5137545	AssignmentExpression	otimes = times = atoi ( arg )		5137220	0		=			
ANR	5137546	Identifier	otimes		5137220	0					
ANR	5137547	AssignmentExpression	times = atoi ( arg )		5137220	1		=			
ANR	5137548	Identifier	times		5137220	0					
ANR	5137549	CallExpression	atoi ( arg )		5137220	1					
ANR	5137550	Callee	atoi		5137220	0					
ANR	5137551	Identifier	atoi		5137220	0					
ANR	5137552	ArgumentList	arg		5137220	1					
ANR	5137553	Argument	arg		5137220	0					
ANR	5137554	Identifier	arg		5137220	0					
ANR	5137555	IfStatement	if ( times > 0 )		5137220	29					
ANR	5137556	Condition	times > 0	1928:5:46075:46083	5137220	0	True				
ANR	5137557	RelationalExpression	times > 0		5137220	0		>			
ANR	5137558	Identifier	times		5137220	0					
ANR	5137559	PrimaryExpression	0		5137220	1					
ANR	5137560	CompoundStatement		51:16:1138:1138	5137220	1					
ANR	5137561	WhileStatement	while ( IS_DIGIT ( * arg ) )		5137220	0					
ANR	5137562	Condition	IS_DIGIT ( * arg )	1929:9:46097:46110	5137220	0	True				
ANR	5137563	CallExpression	IS_DIGIT ( * arg )		5137220	0					
ANR	5137564	Callee	IS_DIGIT		5137220	0					
ANR	5137565	Identifier	IS_DIGIT		5137220	0					
ANR	5137566	ArgumentList	* arg		5137220	1					
ANR	5137567	Argument	* arg		5137220	0					
ANR	5137568	UnaryOperationExpression	* arg		5137220	0					
ANR	5137569	UnaryOperator	*		5137220	0					
ANR	5137570	Identifier	arg		5137220	1					
ANR	5137571	CompoundStatement		52:25:1165:1165	5137220	1					
ANR	5137572	ExpressionStatement	arg ++	1930:3:46118:46123	5137220	0	True				
ANR	5137573	PostIncDecOperationExpression	arg ++		5137220	0					
ANR	5137574	Identifier	arg		5137220	0					
ANR	5137575	IncDec	++		5137220	1					
ANR	5137576	ExpressionStatement	"bracket = strchr ( arg , '{' )"	1934:1:46134:46160	5137220	30	True				
ANR	5137577	AssignmentExpression	"bracket = strchr ( arg , '{' )"		5137220	0		=			
ANR	5137578	Identifier	bracket		5137220	0					
ANR	5137579	CallExpression	"strchr ( arg , '{' )"		5137220	1					
ANR	5137580	Callee	strchr		5137220	0					
ANR	5137581	Identifier	strchr		5137220	0					
ANR	5137582	ArgumentList	arg		5137220	1					
ANR	5137583	Argument	arg		5137220	0					
ANR	5137584	Identifier	arg		5137220	0					
ANR	5137585	Argument	'{'		5137220	1					
ANR	5137586	PrimaryExpression	'{'		5137220	0					
ANR	5137587	IfStatement	if ( bracket )		5137220	31					
ANR	5137588	Condition	bracket	1935:5:46167:46173	5137220	0	True				
ANR	5137589	Identifier	bracket		5137220	0					
ANR	5137590	CompoundStatement		59:2:1232:1261	5137220	1					
ANR	5137591	IdentifierDeclStatement	"char * end = strchr ( arg , '}' ) ;"	1936:2:46180:46209	5137220	0	True				
ANR	5137592	IdentifierDecl	"* end = strchr ( arg , '}' )"		5137220	0					
ANR	5137593	IdentifierDeclType	char *		5137220	0					
ANR	5137594	Identifier	end		5137220	1					
ANR	5137595	AssignmentExpression	"* end = strchr ( arg , '}' )"		5137220	2		=			
ANR	5137596	Identifier	end		5137220	0					
ANR	5137597	CallExpression	"strchr ( arg , '}' )"		5137220	1					
ANR	5137598	Callee	strchr		5137220	0					
ANR	5137599	Identifier	strchr		5137220	0					
ANR	5137600	ArgumentList	arg		5137220	1					
ANR	5137601	Argument	arg		5137220	0					
ANR	5137602	Identifier	arg		5137220	0					
ANR	5137603	Argument	'}'		5137220	1					
ANR	5137604	PrimaryExpression	'}'		5137220	0					
ANR	5137605	IfStatement	if ( ! end )		5137220	1					
ANR	5137606	Condition	! end	1937:6:46217:46220	5137220	0	True				
ANR	5137607	UnaryOperationExpression	! end		5137220	0					
ANR	5137608	UnaryOperator	!		5137220	0					
ANR	5137609	Identifier	end		5137220	1					
ANR	5137610	CompoundStatement		60:12:1275:1275	5137220	1					
ANR	5137611	ExpressionStatement	"eprintf ( ""No end bracket. Try pf {ecx}b @ esi\\n"" )"	1938:3:46228:46277	5137220	0	True				
ANR	5137612	CallExpression	"eprintf ( ""No end bracket. Try pf {ecx}b @ esi\\n"" )"		5137220	0					
ANR	5137613	Callee	eprintf		5137220	0					
ANR	5137614	Identifier	eprintf		5137220	0					
ANR	5137615	ArgumentList	"""No end bracket. Try pf {ecx}b @ esi\\n"""		5137220	1					
ANR	5137616	Argument	"""No end bracket. Try pf {ecx}b @ esi\\n"""		5137220	0					
ANR	5137617	PrimaryExpression	"""No end bracket. Try pf {ecx}b @ esi\\n"""		5137220	0					
ANR	5137618	GotoStatement	goto beach ;	1939:3:46282:46292	5137220	1	True				
ANR	5137619	Identifier	beach		5137220	0					
ANR	5137620	ExpressionStatement	* end = '\\0'	1941:2:46300:46311	5137220	2	True				
ANR	5137621	AssignmentExpression	* end = '\\0'		5137220	0		=			
ANR	5137622	UnaryOperationExpression	* end		5137220	0					
ANR	5137623	UnaryOperator	*		5137220	0					
ANR	5137624	Identifier	end		5137220	1					
ANR	5137625	PrimaryExpression	'\\0'		5137220	1					
ANR	5137626	ExpressionStatement	"times = r_num_math ( NULL , bracket + 1 )"	1942:2:46315:46353	5137220	3	True				
ANR	5137627	AssignmentExpression	"times = r_num_math ( NULL , bracket + 1 )"		5137220	0		=			
ANR	5137628	Identifier	times		5137220	0					
ANR	5137629	CallExpression	"r_num_math ( NULL , bracket + 1 )"		5137220	1					
ANR	5137630	Callee	r_num_math		5137220	0					
ANR	5137631	Identifier	r_num_math		5137220	0					
ANR	5137632	ArgumentList	NULL		5137220	1					
ANR	5137633	Argument	NULL		5137220	0					
ANR	5137634	Identifier	NULL		5137220	0					
ANR	5137635	Argument	bracket + 1		5137220	1					
ANR	5137636	AdditiveExpression	bracket + 1		5137220	0		+			
ANR	5137637	Identifier	bracket		5137220	0					
ANR	5137638	PrimaryExpression	1		5137220	1					
ANR	5137639	ExpressionStatement	arg = end + 1	1943:2:46357:46370	5137220	4	True				
ANR	5137640	AssignmentExpression	arg = end + 1		5137220	0		=			
ANR	5137641	Identifier	arg		5137220	0					
ANR	5137642	AdditiveExpression	end + 1		5137220	1		+			
ANR	5137643	Identifier	end		5137220	0					
ANR	5137644	PrimaryExpression	1		5137220	1					
ANR	5137645	IfStatement	if ( * arg == '\\0' )		5137220	32					
ANR	5137646	Condition	* arg == '\\0'	1946:5:46381:46392	5137220	0	True				
ANR	5137647	EqualityExpression	* arg == '\\0'		5137220	0		==			
ANR	5137648	UnaryOperationExpression	* arg		5137220	0					
ANR	5137649	UnaryOperator	*		5137220	0					
ANR	5137650	Identifier	arg		5137220	1					
ANR	5137651	PrimaryExpression	'\\0'		5137220	1					
ANR	5137652	CompoundStatement		69:19:1447:1447	5137220	1					
ANR	5137653	GotoStatement	goto beach ;	1947:2:46399:46409	5137220	0	True				
ANR	5137654	Identifier	beach		5137220	0					
ANR	5137655	ExpressionStatement	args = get_args_offset ( arg )	1951:1:46432:46460	5137220	33	True				
ANR	5137656	AssignmentExpression	args = get_args_offset ( arg )		5137220	0		=			
ANR	5137657	Identifier	args		5137220	0					
ANR	5137658	CallExpression	get_args_offset ( arg )		5137220	1					
ANR	5137659	Callee	get_args_offset		5137220	0					
ANR	5137660	Identifier	get_args_offset		5137220	0					
ANR	5137661	ArgumentList	arg		5137220	1					
ANR	5137662	Argument	arg		5137220	0					
ANR	5137663	Identifier	arg		5137220	0					
ANR	5137664	IfStatement	if ( args )		5137220	34					
ANR	5137665	Condition	args	1952:5:46467:46470	5137220	0	True				
ANR	5137666	Identifier	args		5137220	0					
ANR	5137667	CompoundStatement		99:2:1989:2011	5137220	1					
ANR	5137668	IdentifierDeclStatement	"int l = 0 , maxl = 0 ;"	1953:2:46477:46496	5137220	0	True				
ANR	5137669	IdentifierDecl	l = 0		5137220	0					
ANR	5137670	IdentifierDeclType	int		5137220	0					
ANR	5137671	Identifier	l		5137220	1					
ANR	5137672	AssignmentExpression	l = 0		5137220	2		=			
ANR	5137673	Identifier	l		5137220	0					
ANR	5137674	PrimaryExpression	0		5137220	1					
ANR	5137675	IdentifierDecl	maxl = 0		5137220	1					
ANR	5137676	IdentifierDeclType	int		5137220	0					
ANR	5137677	Identifier	maxl		5137220	1					
ANR	5137678	AssignmentExpression	maxl = 0		5137220	2		=			
ANR	5137679	Identifier	maxl		5137220	0					
ANR	5137680	PrimaryExpression	0		5137220	1					
ANR	5137681	ExpressionStatement	argend = args	1954:2:46500:46513	5137220	1	True				
ANR	5137682	AssignmentExpression	argend = args		5137220	0		=			
ANR	5137683	Identifier	argend		5137220	0					
ANR	5137684	Identifier	args		5137220	1					
ANR	5137685	ExpressionStatement	tmp = * args	1955:2:46517:46528	5137220	2	True				
ANR	5137686	AssignmentExpression	tmp = * args		5137220	0		=			
ANR	5137687	Identifier	tmp		5137220	0					
ANR	5137688	UnaryOperationExpression	* args		5137220	1					
ANR	5137689	UnaryOperator	*		5137220	0					
ANR	5137690	Identifier	args		5137220	1					
ANR	5137691	WhileStatement	while ( tmp == ' ' )		5137220	3					
ANR	5137692	Condition	tmp == ' '	1956:9:46539:46548	5137220	0	True				
ANR	5137693	EqualityExpression	tmp == ' '		5137220	0		==			
ANR	5137694	Identifier	tmp		5137220	0					
ANR	5137695	PrimaryExpression	' '		5137220	1					
ANR	5137696	CompoundStatement		79:21:1603:1603	5137220	1					
ANR	5137697	ExpressionStatement	args ++	1957:3:46556:46562	5137220	0	True				
ANR	5137698	PostIncDecOperationExpression	args ++		5137220	0					
ANR	5137699	Identifier	args		5137220	0					
ANR	5137700	IncDec	++		5137220	1					
ANR	5137701	ExpressionStatement	tmp = * args	1958:3:46567:46578	5137220	1	True				
ANR	5137702	AssignmentExpression	tmp = * args		5137220	0		=			
ANR	5137703	Identifier	tmp		5137220	0					
ANR	5137704	UnaryOperationExpression	* args		5137220	1					
ANR	5137705	UnaryOperator	*		5137220	0					
ANR	5137706	Identifier	args		5137220	1					
ANR	5137707	ExpressionStatement	args = strdup ( args )	1960:2:46586:46606	5137220	4	True				
ANR	5137708	AssignmentExpression	args = strdup ( args )		5137220	0		=			
ANR	5137709	Identifier	args		5137220	0					
ANR	5137710	CallExpression	strdup ( args )		5137220	1					
ANR	5137711	Callee	strdup		5137220	0					
ANR	5137712	Identifier	strdup		5137220	0					
ANR	5137713	ArgumentList	args		5137220	1					
ANR	5137714	Argument	args		5137220	0					
ANR	5137715	Identifier	args		5137220	0					
ANR	5137716	ExpressionStatement	nargs = r_str_word_set0_stack ( args )	1961:2:46610:46646	5137220	5	True				
ANR	5137717	AssignmentExpression	nargs = r_str_word_set0_stack ( args )		5137220	0		=			
ANR	5137718	Identifier	nargs		5137220	0					
ANR	5137719	CallExpression	r_str_word_set0_stack ( args )		5137220	1					
ANR	5137720	Callee	r_str_word_set0_stack		5137220	0					
ANR	5137721	Identifier	r_str_word_set0_stack		5137220	0					
ANR	5137722	ArgumentList	args		5137220	1					
ANR	5137723	Argument	args		5137220	0					
ANR	5137724	Identifier	args		5137220	0					
ANR	5137725	IfStatement	if ( nargs == 0 )		5137220	6					
ANR	5137726	Condition	nargs == 0	1962:6:46654:46663	5137220	0	True				
ANR	5137727	EqualityExpression	nargs == 0		5137220	0		==			
ANR	5137728	Identifier	nargs		5137220	0					
ANR	5137729	PrimaryExpression	0		5137220	1					
ANR	5137730	CompoundStatement		85:18:1718:1718	5137220	1					
ANR	5137731	ExpressionStatement	R_FREE ( args )	1963:3:46671:46684	5137220	0	True				
ANR	5137732	CallExpression	R_FREE ( args )		5137220	0					
ANR	5137733	Callee	R_FREE		5137220	0					
ANR	5137734	Identifier	R_FREE		5137220	0					
ANR	5137735	ArgumentList	args		5137220	1					
ANR	5137736	Argument	args		5137220	0					
ANR	5137737	Identifier	args		5137220	0					
ANR	5137738	ForStatement	for ( i = 0 ; i < nargs ; i ++ )		5137220	7					
ANR	5137739	ForInit	i = 0 ;	1965:7:46697:46702	5137220	0	True				
ANR	5137740	AssignmentExpression	i = 0		5137220	0		=			
ANR	5137741	Identifier	i		5137220	0					
ANR	5137742	PrimaryExpression	0		5137220	1					
ANR	5137743	Condition	i < nargs	1965:14:46704:46712	5137220	1	True				
ANR	5137744	RelationalExpression	i < nargs		5137220	0		<			
ANR	5137745	Identifier	i		5137220	0					
ANR	5137746	Identifier	nargs		5137220	1					
ANR	5137747	PostIncDecOperationExpression	i ++	1965:25:46715:46717	5137220	2	True				
ANR	5137748	Identifier	i		5137220	0					
ANR	5137749	IncDec	++		5137220	1					
ANR	5137750	CompoundStatement		91:3:1851:1858	5137220	3					
ANR	5137751	IdentifierDeclStatement	"const char * tmp = r_str_word_get0 ( args , i ) ;"	1966:3:46725:46768	5137220	0	True				
ANR	5137752	IdentifierDecl	"* tmp = r_str_word_get0 ( args , i )"		5137220	0					
ANR	5137753	IdentifierDeclType	const char *		5137220	0					
ANR	5137754	Identifier	tmp		5137220	1					
ANR	5137755	AssignmentExpression	"* tmp = r_str_word_get0 ( args , i )"		5137220	2		=			
ANR	5137756	Identifier	tmp		5137220	0					
ANR	5137757	CallExpression	"r_str_word_get0 ( args , i )"		5137220	1					
ANR	5137758	Callee	r_str_word_get0		5137220	0					
ANR	5137759	Identifier	r_str_word_get0		5137220	0					
ANR	5137760	ArgumentList	args		5137220	1					
ANR	5137761	Argument	args		5137220	0					
ANR	5137762	Identifier	args		5137220	0					
ANR	5137763	Argument	i		5137220	1					
ANR	5137764	Identifier	i		5137220	0					
ANR	5137765	IdentifierDeclStatement	const char * nm = NULL ;	1967:3:46773:46794	5137220	1	True				
ANR	5137766	IdentifierDecl	* nm = NULL		5137220	0					
ANR	5137767	IdentifierDeclType	const char *		5137220	0					
ANR	5137768	Identifier	nm		5137220	1					
ANR	5137769	AssignmentExpression	* nm = NULL		5137220	2		=			
ANR	5137770	Identifier	NULL		5137220	0					
ANR	5137771	Identifier	NULL		5137220	1					
ANR	5137772	IdentifierDeclStatement	int len ;	1968:3:46799:46806	5137220	2	True				
ANR	5137773	IdentifierDecl	len		5137220	0					
ANR	5137774	IdentifierDeclType	int		5137220	0					
ANR	5137775	Identifier	len		5137220	1					
ANR	5137776	ExpressionStatement	"nm = r_str_rchr ( tmp , NULL , ')' )"	1969:3:46811:46843	5137220	3	True				
ANR	5137777	AssignmentExpression	"nm = r_str_rchr ( tmp , NULL , ')' )"		5137220	0		=			
ANR	5137778	Identifier	nm		5137220	0					
ANR	5137779	CallExpression	"r_str_rchr ( tmp , NULL , ')' )"		5137220	1					
ANR	5137780	Callee	r_str_rchr		5137220	0					
ANR	5137781	Identifier	r_str_rchr		5137220	0					
ANR	5137782	ArgumentList	tmp		5137220	1					
ANR	5137783	Argument	tmp		5137220	0					
ANR	5137784	Identifier	tmp		5137220	0					
ANR	5137785	Argument	NULL		5137220	1					
ANR	5137786	Identifier	NULL		5137220	0					
ANR	5137787	Argument	')'		5137220	2					
ANR	5137788	PrimaryExpression	')'		5137220	0					
ANR	5137789	ExpressionStatement	len = strlen ( nm ? nm + 1 : tmp )	1970:3:46848:46880	5137220	4	True				
ANR	5137790	AssignmentExpression	len = strlen ( nm ? nm + 1 : tmp )		5137220	0		=			
ANR	5137791	Identifier	len		5137220	0					
ANR	5137792	CallExpression	strlen ( nm ? nm + 1 : tmp )		5137220	1					
ANR	5137793	Callee	strlen		5137220	0					
ANR	5137794	Identifier	strlen		5137220	0					
ANR	5137795	ArgumentList	nm ? nm + 1 : tmp		5137220	1					
ANR	5137796	Argument	nm ? nm + 1 : tmp		5137220	0					
ANR	5137797	ConditionalExpression	nm ? nm + 1 : tmp		5137220	0					
ANR	5137798	Condition	nm		5137220	0					
ANR	5137799	Identifier	nm		5137220	0					
ANR	5137800	AdditiveExpression	nm + 1		5137220	1		+			
ANR	5137801	Identifier	nm		5137220	0					
ANR	5137802	PrimaryExpression	1		5137220	1					
ANR	5137803	Identifier	tmp		5137220	2					
ANR	5137804	IfStatement	if ( len > maxl )		5137220	5					
ANR	5137805	Condition	len > maxl	1971:7:46889:46898	5137220	0	True				
ANR	5137806	RelationalExpression	len > maxl		5137220	0		>			
ANR	5137807	Identifier	len		5137220	0					
ANR	5137808	Identifier	maxl		5137220	1					
ANR	5137809	CompoundStatement		94:19:1953:1953	5137220	1					
ANR	5137810	ExpressionStatement	maxl = len	1972:4:46907:46917	5137220	0	True				
ANR	5137811	AssignmentExpression	maxl = len		5137220	0		=			
ANR	5137812	Identifier	maxl		5137220	0					
ANR	5137813	Identifier	len		5137220	1					
ANR	5137814	ExpressionStatement	l ++	1975:2:46930:46933	5137220	8	True				
ANR	5137815	PostIncDecOperationExpression	l ++		5137220	0					
ANR	5137816	Identifier	l		5137220	0					
ANR	5137817	IncDec	++		5137220	1					
ANR	5137818	IdentifierDeclStatement	"const char * ends = "" "" ;"	1976:2:46937:46959	5137220	9	True				
ANR	5137819	IdentifierDecl	"* ends = "" """		5137220	0					
ANR	5137820	IdentifierDeclType	const char *		5137220	0					
ANR	5137821	Identifier	ends		5137220	1					
ANR	5137822	AssignmentExpression	"* ends = "" """		5137220	2		=			
ANR	5137823	Identifier	ends		5137220	0					
ANR	5137824	PrimaryExpression	""" """		5137220	1					
ANR	5137825	ExpressionStatement	"snprintf ( namefmt , sizeof ( namefmt ) , ""%%%ds :%s"" , ( ( maxl + 1 ) * ( 1 + slide ) ) % STRUCTPTR , ends )"	1977:2:46993:47091	5137220	10	True				
ANR	5137826	CallExpression	"snprintf ( namefmt , sizeof ( namefmt ) , ""%%%ds :%s"" , ( ( maxl + 1 ) * ( 1 + slide ) ) % STRUCTPTR , ends )"		5137220	0					
ANR	5137827	Callee	snprintf		5137220	0					
ANR	5137828	Identifier	snprintf		5137220	0					
ANR	5137829	ArgumentList	namefmt		5137220	1					
ANR	5137830	Argument	namefmt		5137220	0					
ANR	5137831	Identifier	namefmt		5137220	0					
ANR	5137832	Argument	sizeof ( namefmt )		5137220	1					
ANR	5137833	SizeofExpression	sizeof ( namefmt )		5137220	0					
ANR	5137834	Sizeof	sizeof		5137220	0					
ANR	5137835	SizeofOperand	namefmt		5137220	1					
ANR	5137836	Argument	"""%%%ds :%s"""		5137220	2					
ANR	5137837	PrimaryExpression	"""%%%ds :%s"""		5137220	0					
ANR	5137838	Argument	( ( maxl + 1 ) * ( 1 + slide ) ) % STRUCTPTR		5137220	3					
ANR	5137839	MultiplicativeExpression	( ( maxl + 1 ) * ( 1 + slide ) ) % STRUCTPTR		5137220	0		%			
ANR	5137840	MultiplicativeExpression	( maxl + 1 ) * ( 1 + slide )		5137220	0		*			
ANR	5137841	AdditiveExpression	maxl + 1		5137220	0		+			
ANR	5137842	Identifier	maxl		5137220	0					
ANR	5137843	PrimaryExpression	1		5137220	1					
ANR	5137844	AdditiveExpression	1 + slide		5137220	1		+			
ANR	5137845	PrimaryExpression	1		5137220	0					
ANR	5137846	Identifier	slide		5137220	1					
ANR	5137847	Identifier	STRUCTPTR		5137220	1					
ANR	5137848	Argument	ends		5137220	4					
ANR	5137849	Identifier	ends		5137220	0					
ANR	5137850	Statement	define	1980:1:47097:47102	5137220	35	True				
ANR	5137851	Statement	ISPOINTED	1980:8:47104:47112	5137220	36	True				
ANR	5137852	Statement	(	1980:18:47114:47114	5137220	37	True				
ANR	5137853	Statement	(	1980:19:47115:47115	5137220	38	True				
ANR	5137854	Statement	slide	1980:20:47116:47120	5137220	39	True				
ANR	5137855	Statement	%	1980:25:47121:47121	5137220	40	True				
ANR	5137856	Statement	STRUCTFLAG	1980:26:47122:47131	5137220	41	True				
ANR	5137857	Statement	)	1980:36:47132:47132	5137220	42	True				
ANR	5137858	Statement	/	1980:37:47133:47133	5137220	43	True				
ANR	5137859	Statement	STRUCTPTR	1980:38:47134:47142	5137220	44	True				
ANR	5137860	Statement	<=	1980:47:47143:47144	5137220	45	True				
ANR	5137861	Statement	(	1980:49:47145:47145	5137220	46	True				
ANR	5137862	Statement	oldslide	1980:50:47146:47153	5137220	47	True				
ANR	5137863	Statement	%	1980:58:47154:47154	5137220	48	True				
ANR	5137864	Statement	STRUCTFLAG	1980:59:47155:47164	5137220	49	True				
ANR	5137865	Statement	)	1980:69:47165:47165	5137220	50	True				
ANR	5137866	Statement	/	1980:70:47166:47166	5137220	51	True				
ANR	5137867	Statement	STRUCTPTR	1980:71:47167:47175	5137220	52	True				
ANR	5137868	Statement	)	1980:80:47176:47176	5137220	53	True				
ANR	5137869	Statement	define	1981:1:47179:47184	5137220	54	True				
ANR	5137870	Statement	ISNESTED	1981:8:47186:47193	5137220	55	True				
ANR	5137871	Statement	(	1981:17:47195:47195	5137220	56	True				
ANR	5137872	Statement	(	1981:18:47196:47196	5137220	57	True				
ANR	5137873	Statement	slide	1981:19:47197:47201	5137220	58	True				
ANR	5137874	Statement	%	1981:24:47202:47202	5137220	59	True				
ANR	5137875	Statement	STRUCTPTR	1981:25:47203:47211	5137220	60	True				
ANR	5137876	Statement	)	1981:34:47212:47212	5137220	61	True				
ANR	5137877	Statement	<=	1981:35:47213:47214	5137220	62	True				
ANR	5137878	Statement	(	1981:37:47215:47215	5137220	63	True				
ANR	5137879	Statement	oldslide	1981:38:47216:47223	5137220	64	True				
ANR	5137880	Statement	%	1981:46:47224:47224	5137220	65	True				
ANR	5137881	Statement	STRUCTPTR	1981:47:47225:47233	5137220	66	True				
ANR	5137882	Statement	)	1981:56:47234:47234	5137220	67	True				
ANR	5137883	Statement	)	1981:57:47235:47235	5137220	68	True				
ANR	5137884	IfStatement	if ( mode == R_PRINT_JSON && slide == 0 )		5137220	69					
ANR	5137885	Condition	mode == R_PRINT_JSON && slide == 0	1982:5:47242:47275	5137220	0	True				
ANR	5137886	AndExpression	mode == R_PRINT_JSON && slide == 0		5137220	0		&&			
ANR	5137887	EqualityExpression	mode == R_PRINT_JSON		5137220	0		==			
ANR	5137888	Identifier	mode		5137220	0					
ANR	5137889	Identifier	R_PRINT_JSON		5137220	1					
ANR	5137890	EqualityExpression	slide == 0		5137220	1		==			
ANR	5137891	Identifier	slide		5137220	0					
ANR	5137892	PrimaryExpression	0		5137220	1					
ANR	5137893	CompoundStatement		105:41:2330:2330	5137220	1					
ANR	5137894	ExpressionStatement	"p -> cb_printf ( ""["" )"	1983:2:47282:47300	5137220	0	True				
ANR	5137895	CallExpression	"p -> cb_printf ( ""["" )"		5137220	0					
ANR	5137896	Callee	p -> cb_printf		5137220	0					
ANR	5137897	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5137898	Identifier	p		5137220	0					
ANR	5137899	Identifier	cb_printf		5137220	1					
ANR	5137900	ArgumentList	"""["""		5137220	1					
ANR	5137901	Argument	"""["""		5137220	0					
ANR	5137902	PrimaryExpression	"""["""		5137220	0					
ANR	5137903	IfStatement	if ( mode == R_PRINT_STRUCT )		5137220	70					
ANR	5137904	Condition	mode == R_PRINT_STRUCT	1985:5:47310:47331	5137220	0	True				
ANR	5137905	EqualityExpression	mode == R_PRINT_STRUCT		5137220	0		==			
ANR	5137906	Identifier	mode		5137220	0					
ANR	5137907	Identifier	R_PRINT_STRUCT		5137220	1					
ANR	5137908	CompoundStatement		108:29:2386:2386	5137220	1					
ANR	5137909	IfStatement	if ( formatname && * formatname )		5137220	0					
ANR	5137910	Condition	formatname && * formatname	1986:6:47342:47366	5137220	0	True				
ANR	5137911	AndExpression	formatname && * formatname		5137220	0		&&			
ANR	5137912	Identifier	formatname		5137220	0					
ANR	5137913	UnaryOperationExpression	* formatname		5137220	1					
ANR	5137914	UnaryOperator	*		5137220	0					
ANR	5137915	Identifier	formatname		5137220	1					
ANR	5137916	CompoundStatement		109:33:2421:2421	5137220	1					
ANR	5137917	IfStatement	"if ( strchr ( formatname , ' ' ) )"		5137220	0					
ANR	5137918	Condition	"strchr ( formatname , ' ' )"	1987:7:47378:47401	5137220	0	True				
ANR	5137919	CallExpression	"strchr ( formatname , ' ' )"		5137220	0					
ANR	5137920	Callee	strchr		5137220	0					
ANR	5137921	Identifier	strchr		5137220	0					
ANR	5137922	ArgumentList	formatname		5137220	1					
ANR	5137923	Argument	formatname		5137220	0					
ANR	5137924	Identifier	formatname		5137220	0					
ANR	5137925	Argument	' '		5137220	1					
ANR	5137926	PrimaryExpression	' '		5137220	0					
ANR	5137927	CompoundStatement		110:33:2456:2456	5137220	1					
ANR	5137928	ExpressionStatement	"p -> cb_printf ( ""struct {\\n"" )"	1988:4:47410:47437	5137220	0	True				
ANR	5137929	CallExpression	"p -> cb_printf ( ""struct {\\n"" )"		5137220	0					
ANR	5137930	Callee	p -> cb_printf		5137220	0					
ANR	5137931	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5137932	Identifier	p		5137220	0					
ANR	5137933	Identifier	cb_printf		5137220	1					
ANR	5137934	ArgumentList	"""struct {\\n"""		5137220	1					
ANR	5137935	Argument	"""struct {\\n"""		5137220	0					
ANR	5137936	PrimaryExpression	"""struct {\\n"""		5137220	0					
ANR	5137937	ElseStatement	else		5137220	0					
ANR	5137938	CompoundStatement		112:10:2501:2501	5137220	0					
ANR	5137939	ExpressionStatement	"p -> cb_printf ( ""struct %s {\\n"" , formatname )"	1990:4:47455:47497	5137220	0	True				
ANR	5137940	CallExpression	"p -> cb_printf ( ""struct %s {\\n"" , formatname )"		5137220	0					
ANR	5137941	Callee	p -> cb_printf		5137220	0					
ANR	5137942	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5137943	Identifier	p		5137220	0					
ANR	5137944	Identifier	cb_printf		5137220	1					
ANR	5137945	ArgumentList	"""struct %s {\\n"""		5137220	1					
ANR	5137946	Argument	"""struct %s {\\n"""		5137220	0					
ANR	5137947	PrimaryExpression	"""struct %s {\\n"""		5137220	0					
ANR	5137948	Argument	formatname		5137220	1					
ANR	5137949	Identifier	formatname		5137220	0					
ANR	5137950	ElseStatement	else		5137220	0					
ANR	5137951	CompoundStatement		115:9:2565:2565	5137220	0					
ANR	5137952	ExpressionStatement	"p -> cb_printf ( ""struct {\\n"" )"	1993:3:47518:47545	5137220	0	True				
ANR	5137953	CallExpression	"p -> cb_printf ( ""struct {\\n"" )"		5137220	0					
ANR	5137954	Callee	p -> cb_printf		5137220	0					
ANR	5137955	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5137956	Identifier	p		5137220	0					
ANR	5137957	Identifier	cb_printf		5137220	1					
ANR	5137958	ArgumentList	"""struct {\\n"""		5137220	1					
ANR	5137959	Argument	"""struct {\\n"""		5137220	0					
ANR	5137960	PrimaryExpression	"""struct {\\n"""		5137220	0					
ANR	5137961	IfStatement	if ( mode && arg [ 0 ] == '0' )		5137220	71					
ANR	5137962	Condition	mode && arg [ 0 ] == '0'	1996:5:47559:47579	5137220	0	True				
ANR	5137963	AndExpression	mode && arg [ 0 ] == '0'		5137220	0		&&			
ANR	5137964	Identifier	mode		5137220	0					
ANR	5137965	EqualityExpression	arg [ 0 ] == '0'		5137220	1		==			
ANR	5137966	ArrayIndexing	arg [ 0 ]		5137220	0					
ANR	5137967	Identifier	arg		5137220	0					
ANR	5137968	PrimaryExpression	0		5137220	1					
ANR	5137969	PrimaryExpression	'0'		5137220	1					
ANR	5137970	CompoundStatement		119:28:2634:2634	5137220	1					
ANR	5137971	ExpressionStatement	mode |= R_PRINT_UNIONMODE	1997:2:47586:47611	5137220	0	True				
ANR	5137972	AssignmentExpression	mode |= R_PRINT_UNIONMODE		5137220	0		|=			
ANR	5137973	Identifier	mode		5137220	0					
ANR	5137974	Identifier	R_PRINT_UNIONMODE		5137220	1					
ANR	5137975	ExpressionStatement	arg ++	1998:2:47615:47620	5137220	1	True				
ANR	5137976	PostIncDecOperationExpression	arg ++		5137220	0					
ANR	5137977	Identifier	arg		5137220	0					
ANR	5137978	IncDec	++		5137220	1					
ANR	5137979	ElseStatement	else		5137220	0					
ANR	5137980	CompoundStatement		122:8:2682:2682	5137220	0					
ANR	5137981	ExpressionStatement	mode &= ~R_PRINT_UNIONMODE	2000:2:47634:47660	5137220	0	True				
ANR	5137982	AssignmentExpression	mode &= ~R_PRINT_UNIONMODE		5137220	0		&=			
ANR	5137983	Identifier	mode		5137220	0					
ANR	5137984	Identifier	~R_PRINT_UNIONMODE		5137220	1					
ANR	5137985	IfStatement	if ( mode & R_PRINT_DOT )		5137220	72					
ANR	5137986	Condition	mode & R_PRINT_DOT	2002:5:47670:47687	5137220	0	True				
ANR	5137987	BitAndExpression	mode & R_PRINT_DOT		5137220	0		&			
ANR	5137988	Identifier	mode		5137220	0					
ANR	5137989	Identifier	R_PRINT_DOT		5137220	1					
ANR	5137990	CompoundStatement		126:2:2746:2759	5137220	1					
ANR	5137991	IdentifierDeclStatement	char * fmtname ;	2003:2:47694:47707	5137220	0	True				
ANR	5137992	IdentifierDecl	* fmtname		5137220	0					
ANR	5137993	IdentifierDeclType	char *		5137220	0					
ANR	5137994	Identifier	fmtname		5137220	1					
ANR	5137995	IfStatement	if ( formatname && * formatname )		5137220	1					
ANR	5137996	Condition	formatname && * formatname	2004:6:47715:47739	5137220	0	True				
ANR	5137997	AndExpression	formatname && * formatname		5137220	0		&&			
ANR	5137998	Identifier	formatname		5137220	0					
ANR	5137999	UnaryOperationExpression	* formatname		5137220	1					
ANR	5138000	UnaryOperator	*		5137220	0					
ANR	5138001	Identifier	formatname		5137220	1					
ANR	5138002	CompoundStatement		127:33:2794:2794	5137220	1					
ANR	5138003	IfStatement	"if ( strchr ( formatname , ' ' ) )"		5137220	0					
ANR	5138004	Condition	"strchr ( formatname , ' ' )"	2005:7:47751:47774	5137220	0	True				
ANR	5138005	CallExpression	"strchr ( formatname , ' ' )"		5137220	0					
ANR	5138006	Callee	strchr		5137220	0					
ANR	5138007	Identifier	strchr		5137220	0					
ANR	5138008	ArgumentList	formatname		5137220	1					
ANR	5138009	Argument	formatname		5137220	0					
ANR	5138010	Identifier	formatname		5137220	0					
ANR	5138011	Argument	' '		5137220	1					
ANR	5138012	PrimaryExpression	' '		5137220	0					
ANR	5138013	CompoundStatement		128:33:2829:2829	5137220	1					
ANR	5138014	Statement	fmtname	2006:4:47783:47789	5137220	0	True				
ANR	5138015	Statement	=	2006:12:47791:47791	5137220	1	True				
ANR	5138016	Statement	r_str_newf	2006:14:47793:47802	5137220	2	True				
ANR	5138017	Statement	(	2006:25:47804:47804	5137220	3	True				
ANR	5138018	Statement	"""0x%"""	2006:26:47805:47809	5137220	4	True				
ANR	5138019	Statement	PFMT64x	2006:31:47810:47816	5137220	5	True				
ANR	5138020	Statement	","	2006:38:47817:47817	5137220	6	True				
ANR	5138021	Statement	seek	2006:40:47819:47822	5137220	7	True				
ANR	5138022	Statement	)	2006:44:47823:47823	5137220	8	True				
ANR	5138023	ExpressionStatement		2006:45:47824:47824	5137220	9	True				
ANR	5138024	ElseStatement	else		5137220	0					
ANR	5138025	CompoundStatement		130:10:2888:2888	5137220	0					
ANR	5138026	ExpressionStatement	fmtname = strdup ( formatname )	2008:4:47842:47871	5137220	0	True				
ANR	5138027	AssignmentExpression	fmtname = strdup ( formatname )		5137220	0		=			
ANR	5138028	Identifier	fmtname		5137220	0					
ANR	5138029	CallExpression	strdup ( formatname )		5137220	1					
ANR	5138030	Callee	strdup		5137220	0					
ANR	5138031	Identifier	strdup		5137220	0					
ANR	5138032	ArgumentList	formatname		5137220	1					
ANR	5138033	Argument	formatname		5137220	0					
ANR	5138034	Identifier	formatname		5137220	0					
ANR	5138035	ElseStatement	else		5137220	0					
ANR	5138036	CompoundStatement		133:9:2939:2939	5137220	0					
ANR	5138037	Statement	fmtname	2011:3:47892:47898	5137220	0	True				
ANR	5138038	Statement	=	2011:11:47900:47900	5137220	1	True				
ANR	5138039	Statement	r_str_newf	2011:13:47902:47911	5137220	2	True				
ANR	5138040	Statement	(	2011:24:47913:47913	5137220	3	True				
ANR	5138041	Statement	"""0x%"""	2011:25:47914:47918	5137220	4	True				
ANR	5138042	Statement	PFMT64x	2011:30:47919:47925	5137220	5	True				
ANR	5138043	Statement	","	2011:37:47926:47926	5137220	6	True				
ANR	5138044	Statement	seek	2011:39:47928:47931	5137220	7	True				
ANR	5138045	Statement	)	2011:43:47932:47932	5137220	8	True				
ANR	5138046	ExpressionStatement		2011:44:47933:47933	5137220	9	True				
ANR	5138047	ExpressionStatement	"p -> cb_printf ( ""digraph g { graph [ rank=same; rankdir=LR; ];\\n"" )"	2013:2:47941:48005	5137220	2	True				
ANR	5138048	CallExpression	"p -> cb_printf ( ""digraph g { graph [ rank=same; rankdir=LR; ];\\n"" )"		5137220	0					
ANR	5138049	Callee	p -> cb_printf		5137220	0					
ANR	5138050	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5138051	Identifier	p		5137220	0					
ANR	5138052	Identifier	cb_printf		5137220	1					
ANR	5138053	ArgumentList	"""digraph g { graph [ rank=same; rankdir=LR; ];\\n"""		5137220	1					
ANR	5138054	Argument	"""digraph g { graph [ rank=same; rankdir=LR; ];\\n"""		5137220	0					
ANR	5138055	PrimaryExpression	"""digraph g { graph [ rank=same; rankdir=LR; ];\\n"""		5137220	0					
ANR	5138056	ExpressionStatement	"p -> cb_printf ( ""root [ rank=1; shape=record\\nlabel=\\""%s"" , fmtname )"	2014:2:48009:48074	5137220	3	True				
ANR	5138057	CallExpression	"p -> cb_printf ( ""root [ rank=1; shape=record\\nlabel=\\""%s"" , fmtname )"		5137220	0					
ANR	5138058	Callee	p -> cb_printf		5137220	0					
ANR	5138059	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5138060	Identifier	p		5137220	0					
ANR	5138061	Identifier	cb_printf		5137220	1					
ANR	5138062	ArgumentList	"""root [ rank=1; shape=record\\nlabel=\\""%s"""		5137220	1					
ANR	5138063	Argument	"""root [ rank=1; shape=record\\nlabel=\\""%s"""		5137220	0					
ANR	5138064	PrimaryExpression	"""root [ rank=1; shape=record\\nlabel=\\""%s"""		5137220	0					
ANR	5138065	Argument	fmtname		5137220	1					
ANR	5138066	Identifier	fmtname		5137220	0					
ANR	5138067	ExpressionStatement	i = 0	2018:1:48098:48103	5137220	73	True				
ANR	5138068	AssignmentExpression	i = 0		5137220	0		=			
ANR	5138069	Identifier	i		5137220	0					
ANR	5138070	PrimaryExpression	0		5137220	1					
ANR	5138071	IfStatement	if ( ! times )		5137220	74					
ANR	5138072	Condition	! times	2019:5:48110:48115	5137220	0	True				
ANR	5138073	UnaryOperationExpression	! times		5137220	0					
ANR	5138074	UnaryOperator	!		5137220	0					
ANR	5138075	Identifier	times		5137220	1					
ANR	5138076	CompoundStatement		142:13:3170:3170	5137220	1					
ANR	5138077	ExpressionStatement	otimes = times = 1	2020:2:48122:48140	5137220	0	True				
ANR	5138078	AssignmentExpression	otimes = times = 1		5137220	0		=			
ANR	5138079	Identifier	otimes		5137220	0					
ANR	5138080	AssignmentExpression	times = 1		5137220	1		=			
ANR	5138081	Identifier	times		5137220	0					
ANR	5138082	PrimaryExpression	1		5137220	1					
ANR	5138083	ForStatement	for ( ; times ; times -- )		5137220	75					
ANR	5138084	Condition	times	2022:8:48153:48157	5137220	0	True				
ANR	5138085	Identifier	times		5137220	0					
ANR	5138086	PostIncDecOperationExpression	times --	2022:15:48160:48166	5137220	1	True				
ANR	5138087	Identifier	times		5137220	0					
ANR	5138088	IncDec	--		5137220	1					
ANR	5138089	CompoundStatement		147:2:3269:3282	5137220	2					
ANR	5138090	IdentifierDeclStatement	const char * orig = arg ;	2023:2:48191:48213	5137220	0	True				
ANR	5138091	IdentifierDecl	* orig = arg		5137220	0					
ANR	5138092	IdentifierDeclType	const char *		5137220	0					
ANR	5138093	Identifier	orig		5137220	1					
ANR	5138094	AssignmentExpression	* orig = arg		5137220	2		=			
ANR	5138095	Identifier	arg		5137220	0					
ANR	5138096	Identifier	arg		5137220	1					
ANR	5138097	IdentifierDeclStatement	int first = 1 ;	2024:2:48217:48230	5137220	1	True				
ANR	5138098	IdentifierDecl	first = 1		5137220	0					
ANR	5138099	IdentifierDeclType	int		5137220	0					
ANR	5138100	Identifier	first		5137220	1					
ANR	5138101	AssignmentExpression	first = 1		5137220	2		=			
ANR	5138102	Identifier	first		5137220	0					
ANR	5138103	PrimaryExpression	1		5137220	1					
ANR	5138104	IfStatement	if ( otimes > 1 )		5137220	2					
ANR	5138105	Condition	otimes > 1	2025:6:48238:48247	5137220	0	True				
ANR	5138106	RelationalExpression	otimes > 1		5137220	0		>			
ANR	5138107	Identifier	otimes		5137220	0					
ANR	5138108	PrimaryExpression	1		5137220	1					
ANR	5138109	CompoundStatement		148:18:3302:3302	5137220	1					
ANR	5138110	IfStatement	if ( mode & R_PRINT_JSON )		5137220	0					
ANR	5138111	Condition	mode & R_PRINT_JSON	2026:7:48259:48277	5137220	0	True				
ANR	5138112	BitAndExpression	mode & R_PRINT_JSON		5137220	0		&			
ANR	5138113	Identifier	mode		5137220	0					
ANR	5138114	Identifier	R_PRINT_JSON		5137220	1					
ANR	5138115	CompoundStatement		149:28:3332:3332	5137220	1					
ANR	5138116	IfStatement	if ( otimes > times )		5137220	0					
ANR	5138117	Condition	otimes > times	2027:8:48290:48303	5137220	0	True				
ANR	5138118	RelationalExpression	otimes > times		5137220	0		>			
ANR	5138119	Identifier	otimes		5137220	0					
ANR	5138120	Identifier	times		5137220	1					
ANR	5138121	CompoundStatement		150:24:3358:3358	5137220	1					
ANR	5138122	ExpressionStatement	"p -> cb_printf ( "","" )"	2028:5:48313:48331	5137220	0	True				
ANR	5138123	CallExpression	"p -> cb_printf ( "","" )"		5137220	0					
ANR	5138124	Callee	p -> cb_printf		5137220	0					
ANR	5138125	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5138126	Identifier	p		5137220	0					
ANR	5138127	Identifier	cb_printf		5137220	1					
ANR	5138128	ArgumentList	""","""		5137220	1					
ANR	5138129	Argument	""","""		5137220	0					
ANR	5138130	PrimaryExpression	""","""		5137220	0					
ANR	5138131	ExpressionStatement	"p -> cb_printf ( ""[{\\""index\\"":%d,\\""offset\\"":%d},"" , otimes - times , seek + i )"	2030:4:48343:48412	5137220	1	True				
ANR	5138132	CallExpression	"p -> cb_printf ( ""[{\\""index\\"":%d,\\""offset\\"":%d},"" , otimes - times , seek + i )"		5137220	0					
ANR	5138133	Callee	p -> cb_printf		5137220	0					
ANR	5138134	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5138135	Identifier	p		5137220	0					
ANR	5138136	Identifier	cb_printf		5137220	1					
ANR	5138137	ArgumentList	"""[{\\""index\\"":%d,\\""offset\\"":%d},"""		5137220	1					
ANR	5138138	Argument	"""[{\\""index\\"":%d,\\""offset\\"":%d},"""		5137220	0					
ANR	5138139	PrimaryExpression	"""[{\\""index\\"":%d,\\""offset\\"":%d},"""		5137220	0					
ANR	5138140	Argument	otimes - times		5137220	1					
ANR	5138141	AdditiveExpression	otimes - times		5137220	0		-			
ANR	5138142	Identifier	otimes		5137220	0					
ANR	5138143	Identifier	times		5137220	1					
ANR	5138144	Argument	seek + i		5137220	2					
ANR	5138145	AdditiveExpression	seek + i		5137220	0		+			
ANR	5138146	Identifier	seek		5137220	0					
ANR	5138147	Identifier	i		5137220	1					
ANR	5138148	ElseStatement	else		5137220	0					
ANR	5138149	IfStatement	if ( mode )		5137220	0					
ANR	5138150	Condition	mode	2031:14:48428:48431	5137220	0	True				
ANR	5138151	Identifier	mode		5137220	0					
ANR	5138152	CompoundStatement		154:20:3486:3486	5137220	1					
ANR	5138153	Statement	p	2032:4:48440:48440	5137220	0	True				
ANR	5138154	Statement	->	2032:5:48441:48442	5137220	1	True				
ANR	5138155	Statement	cb_printf	2032:7:48443:48451	5137220	2	True				
ANR	5138156	Statement	(	2032:17:48453:48453	5137220	3	True				
ANR	5138157	Statement	"""0x%08"""	2032:18:48454:48460	5137220	4	True				
ANR	5138158	Statement	PFMT64x	2032:25:48461:48467	5137220	5	True				
ANR	5138159	Statement	""" [%d] {\\n"""	2032:32:48468:48478	5137220	6	True				
ANR	5138160	Statement	","	2032:43:48479:48479	5137220	7	True				
ANR	5138161	Statement	seek	2032:45:48481:48484	5137220	8	True				
ANR	5138162	Statement	+	2032:50:48486:48486	5137220	9	True				
ANR	5138163	Statement	i	2032:52:48488:48488	5137220	10	True				
ANR	5138164	Statement	","	2032:53:48489:48489	5137220	11	True				
ANR	5138165	Statement	otimes	2032:55:48491:48496	5137220	12	True				
ANR	5138166	Statement	-	2032:61:48497:48497	5137220	13	True				
ANR	5138167	Statement	times	2032:62:48498:48502	5137220	14	True				
ANR	5138168	Statement	)	2032:67:48503:48503	5137220	15	True				
ANR	5138169	ExpressionStatement		2032:68:48504:48504	5137220	16	True				
ANR	5138170	ExpressionStatement	arg = orig	2035:2:48517:48527	5137220	3	True				
ANR	5138171	AssignmentExpression	arg = orig		5137220	0		=			
ANR	5138172	Identifier	arg		5137220	0					
ANR	5138173	Identifier	orig		5137220	1					
ANR	5138174	ForStatement	for ( idx = 0 ; i < len && arg < argend && * arg ; arg ++ )		5137220	4					
ANR	5138175	ForInit	idx = 0 ;	2036:7:48536:48543	5137220	0	True				
ANR	5138176	AssignmentExpression	idx = 0		5137220	0		=			
ANR	5138177	Identifier	idx		5137220	0					
ANR	5138178	PrimaryExpression	0		5137220	1					
ANR	5138179	Condition	i < len && arg < argend && * arg	2036:16:48545:48575	5137220	1	True				
ANR	5138180	AndExpression	i < len && arg < argend && * arg		5137220	0		&&			
ANR	5138181	RelationalExpression	i < len		5137220	0		<			
ANR	5138182	Identifier	i		5137220	0					
ANR	5138183	Identifier	len		5137220	1					
ANR	5138184	AndExpression	arg < argend && * arg		5137220	1		&&			
ANR	5138185	RelationalExpression	arg < argend		5137220	0		<			
ANR	5138186	Identifier	arg		5137220	0					
ANR	5138187	Identifier	argend		5137220	1					
ANR	5138188	UnaryOperationExpression	* arg		5137220	1					
ANR	5138189	UnaryOperator	*		5137220	0					
ANR	5138190	Identifier	arg		5137220	1					
ANR	5138191	PostIncDecOperationExpression	arg ++	2036:49:48578:48582	5137220	2	True				
ANR	5138192	Identifier	arg		5137220	0					
ANR	5138193	IncDec	++		5137220	1					
ANR	5138194	CompoundStatement		445:3:10585:10595	5137220	3					
ANR	5138195	IdentifierDeclStatement	"int size = 0 , elem = 0 ;"	2037:3:48590:48612	5137220	0	True				
ANR	5138196	IdentifierDecl	size = 0		5137220	0					
ANR	5138197	IdentifierDeclType	int		5137220	0					
ANR	5138198	Identifier	size		5137220	1					
ANR	5138199	AssignmentExpression	size = 0		5137220	2		=			
ANR	5138200	Identifier	size		5137220	0					
ANR	5138201	PrimaryExpression	0		5137220	1					
ANR	5138202	IdentifierDecl	elem = 0		5137220	1					
ANR	5138203	IdentifierDeclType	int		5137220	0					
ANR	5138204	Identifier	elem		5137220	1					
ANR	5138205	AssignmentExpression	elem = 0		5137220	2		=			
ANR	5138206	Identifier	elem		5137220	0					
ANR	5138207	PrimaryExpression	0		5137220	1					
ANR	5138208	IdentifierDeclStatement	"char * fieldname = NULL , * fmtname = NULL ;"	2038:3:48663:48702	5137220	1	True				
ANR	5138209	IdentifierDecl	* fieldname = NULL		5137220	0					
ANR	5138210	IdentifierDeclType	char *		5137220	0					
ANR	5138211	Identifier	fieldname		5137220	1					
ANR	5138212	AssignmentExpression	* fieldname = NULL		5137220	2		=			
ANR	5138213	Identifier	NULL		5137220	0					
ANR	5138214	Identifier	NULL		5137220	1					
ANR	5138215	IdentifierDecl	* fmtname = NULL		5137220	1					
ANR	5138216	IdentifierDeclType	char *		5137220	0					
ANR	5138217	Identifier	fmtname		5137220	1					
ANR	5138218	AssignmentExpression	* fmtname = NULL		5137220	2		=			
ANR	5138219	Identifier	NULL		5137220	0					
ANR	5138220	Identifier	NULL		5137220	1					
ANR	5138221	IfStatement	if ( mode & R_PRINT_UNIONMODE )		5137220	2					
ANR	5138222	Condition	mode & R_PRINT_UNIONMODE	2039:7:48711:48734	5137220	0	True				
ANR	5138223	BitAndExpression	mode & R_PRINT_UNIONMODE		5137220	0		&			
ANR	5138224	Identifier	mode		5137220	0					
ANR	5138225	Identifier	R_PRINT_UNIONMODE		5137220	1					
ANR	5138226	CompoundStatement		162:33:3789:3789	5137220	1					
ANR	5138227	ExpressionStatement	i = 0	2040:4:48743:48748	5137220	0	True				
ANR	5138228	AssignmentExpression	i = 0		5137220	0		=			
ANR	5138229	Identifier	i		5137220	0					
ANR	5138230	PrimaryExpression	0		5137220	1					
ANR	5138231	ExpressionStatement	seeki = seek + i	2042:3:48758:48774	5137220	3	True				
ANR	5138232	AssignmentExpression	seeki = seek + i		5137220	0		=			
ANR	5138233	Identifier	seeki		5137220	0					
ANR	5138234	AdditiveExpression	seek + i		5137220	1		+			
ANR	5138235	Identifier	seek		5137220	0					
ANR	5138236	Identifier	i		5137220	1					
ANR	5138237	Statement	addr	2043:3:48779:48782	5137220	4	True				
ANR	5138238	Statement	=	2043:8:48784:48784	5137220	5	True				
ANR	5138239	Statement	0L	2043:10:48786:48787	5137220	6	True				
ANR	5138240	ExpressionStatement	L	2043:12:48788:48789	5137220	7	True				
ANR	5138241	Identifier	L		5137220	0					
ANR	5138242	ExpressionStatement	invalid = 0	2044:3:48794:48805	5137220	8	True				
ANR	5138243	AssignmentExpression	invalid = 0		5137220	0		=			
ANR	5138244	Identifier	invalid		5137220	0					
ANR	5138245	PrimaryExpression	0		5137220	1					
ANR	5138246	ExpressionStatement	p -> bits = old_bits	2045:3:48810:48828	5137220	9	True				
ANR	5138247	AssignmentExpression	p -> bits = old_bits		5137220	0		=			
ANR	5138248	PtrMemberAccess	p -> bits		5137220	0					
ANR	5138249	Identifier	p		5137220	0					
ANR	5138250	Identifier	bits		5137220	1					
ANR	5138251	Identifier	old_bits		5137220	1					
ANR	5138252	IfStatement	if ( arg [ 0 ] == '[' )		5137220	10					
ANR	5138253	Condition	arg [ 0 ] == '['	2046:7:48837:48849	5137220	0	True				
ANR	5138254	EqualityExpression	arg [ 0 ] == '['		5137220	0		==			
ANR	5138255	ArrayIndexing	arg [ 0 ]		5137220	0					
ANR	5138256	Identifier	arg		5137220	0					
ANR	5138257	PrimaryExpression	0		5137220	1					
ANR	5138258	PrimaryExpression	'['		5137220	1					
ANR	5138259	CompoundStatement		170:4:3910:3938	5137220	1					
ANR	5138260	IdentifierDeclStatement	"char * end = strchr ( arg , ']' ) ;"	2047:4:48858:48886	5137220	0	True				
ANR	5138261	IdentifierDecl	"* end = strchr ( arg , ']' )"		5137220	0					
ANR	5138262	IdentifierDeclType	char *		5137220	0					
ANR	5138263	Identifier	end		5137220	1					
ANR	5138264	AssignmentExpression	"* end = strchr ( arg , ']' )"		5137220	2		=			
ANR	5138265	Identifier	end		5137220	0					
ANR	5138266	CallExpression	"strchr ( arg , ']' )"		5137220	1					
ANR	5138267	Callee	strchr		5137220	0					
ANR	5138268	Identifier	strchr		5137220	0					
ANR	5138269	ArgumentList	arg		5137220	1					
ANR	5138270	Argument	arg		5137220	0					
ANR	5138271	Identifier	arg		5137220	0					
ANR	5138272	Argument	']'		5137220	1					
ANR	5138273	PrimaryExpression	']'		5137220	0					
ANR	5138274	IfStatement	if ( ! end )		5137220	1					
ANR	5138275	Condition	! end	2048:8:48896:48899	5137220	0	True				
ANR	5138276	UnaryOperationExpression	! end		5137220	0					
ANR	5138277	UnaryOperator	!		5137220	0					
ANR	5138278	Identifier	end		5137220	1					
ANR	5138279	CompoundStatement		171:14:3954:3954	5137220	1					
ANR	5138280	ExpressionStatement	"eprintf ( ""No end bracket.\\n"" )"	2049:5:48909:48938	5137220	0	True				
ANR	5138281	CallExpression	"eprintf ( ""No end bracket.\\n"" )"		5137220	0					
ANR	5138282	Callee	eprintf		5137220	0					
ANR	5138283	Identifier	eprintf		5137220	0					
ANR	5138284	ArgumentList	"""No end bracket.\\n"""		5137220	1					
ANR	5138285	Argument	"""No end bracket.\\n"""		5137220	0					
ANR	5138286	PrimaryExpression	"""No end bracket.\\n"""		5137220	0					
ANR	5138287	GotoStatement	goto beach ;	2050:5:48945:48955	5137220	1	True				
ANR	5138288	Identifier	beach		5137220	0					
ANR	5138289	ExpressionStatement	* end = '\\0'	2052:4:48967:48978	5137220	2	True				
ANR	5138290	AssignmentExpression	* end = '\\0'		5137220	0		=			
ANR	5138291	UnaryOperationExpression	* end		5137220	0					
ANR	5138292	UnaryOperator	*		5137220	0					
ANR	5138293	Identifier	end		5137220	1					
ANR	5138294	PrimaryExpression	'\\0'		5137220	1					
ANR	5138295	ExpressionStatement	"size = r_get_size ( p -> num , buf , endian , arg + 1 )"	2053:4:48984:49032	5137220	3	True				
ANR	5138296	AssignmentExpression	"size = r_get_size ( p -> num , buf , endian , arg + 1 )"		5137220	0		=			
ANR	5138297	Identifier	size		5137220	0					
ANR	5138298	CallExpression	"r_get_size ( p -> num , buf , endian , arg + 1 )"		5137220	1					
ANR	5138299	Callee	r_get_size		5137220	0					
ANR	5138300	Identifier	r_get_size		5137220	0					
ANR	5138301	ArgumentList	p -> num		5137220	1					
ANR	5138302	Argument	p -> num		5137220	0					
ANR	5138303	PtrMemberAccess	p -> num		5137220	0					
ANR	5138304	Identifier	p		5137220	0					
ANR	5138305	Identifier	num		5137220	1					
ANR	5138306	Argument	buf		5137220	1					
ANR	5138307	Identifier	buf		5137220	0					
ANR	5138308	Argument	endian		5137220	2					
ANR	5138309	Identifier	endian		5137220	0					
ANR	5138310	Argument	arg + 1		5137220	3					
ANR	5138311	AdditiveExpression	arg + 1		5137220	0		+			
ANR	5138312	Identifier	arg		5137220	0					
ANR	5138313	PrimaryExpression	1		5137220	1					
ANR	5138314	ExpressionStatement	arg = end + 1	2054:4:49038:49051	5137220	4	True				
ANR	5138315	AssignmentExpression	arg = end + 1		5137220	0		=			
ANR	5138316	Identifier	arg		5137220	0					
ANR	5138317	AdditiveExpression	end + 1		5137220	1		+			
ANR	5138318	Identifier	end		5137220	0					
ANR	5138319	PrimaryExpression	1		5137220	1					
ANR	5138320	ExpressionStatement	* end = ']'	2055:4:49057:49067	5137220	5	True				
ANR	5138321	AssignmentExpression	* end = ']'		5137220	0		=			
ANR	5138322	UnaryOperationExpression	* end		5137220	0					
ANR	5138323	UnaryOperator	*		5137220	0					
ANR	5138324	Identifier	end		5137220	1					
ANR	5138325	PrimaryExpression	']'		5137220	1					
ANR	5138326	ElseStatement	else		5137220	0					
ANR	5138327	CompoundStatement		179:10:4131:4131	5137220	0					
ANR	5138328	ExpressionStatement	size = - 1	2057:4:49085:49094	5137220	0	True				
ANR	5138329	AssignmentExpression	size = - 1		5137220	0		=			
ANR	5138330	Identifier	size		5137220	0					
ANR	5138331	UnaryOperationExpression	- 1		5137220	1					
ANR	5138332	UnaryOperator	-		5137220	0					
ANR	5138333	PrimaryExpression	1		5137220	1					
ANR	5138334	IdentifierDeclStatement	"int fs = r_print_format_struct_size ( p , arg , 0 , idx ) ;"	2059:3:49104:49156	5137220	11	True				
ANR	5138335	IdentifierDecl	"fs = r_print_format_struct_size ( p , arg , 0 , idx )"		5137220	0					
ANR	5138336	IdentifierDeclType	int		5137220	0					
ANR	5138337	Identifier	fs		5137220	1					
ANR	5138338	AssignmentExpression	"fs = r_print_format_struct_size ( p , arg , 0 , idx )"		5137220	2		=			
ANR	5138339	Identifier	fs		5137220	0					
ANR	5138340	CallExpression	"r_print_format_struct_size ( p , arg , 0 , idx )"		5137220	1					
ANR	5138341	Callee	r_print_format_struct_size		5137220	0					
ANR	5138342	Identifier	r_print_format_struct_size		5137220	0					
ANR	5138343	ArgumentList	p		5137220	1					
ANR	5138344	Argument	p		5137220	0					
ANR	5138345	Identifier	p		5137220	0					
ANR	5138346	Argument	arg		5137220	1					
ANR	5138347	Identifier	arg		5137220	0					
ANR	5138348	Argument	0		5137220	2					
ANR	5138349	PrimaryExpression	0		5137220	0					
ANR	5138350	Argument	idx		5137220	3					
ANR	5138351	Identifier	idx		5137220	0					
ANR	5138352	IfStatement	if ( fs == - 2 )		5137220	12					
ANR	5138353	Condition	fs == - 2	2060:7:49165:49172	5137220	0	True				
ANR	5138354	EqualityExpression	fs == - 2		5137220	0		==			
ANR	5138355	Identifier	fs		5137220	0					
ANR	5138356	UnaryOperationExpression	- 2		5137220	1					
ANR	5138357	UnaryOperator	-		5137220	0					
ANR	5138358	PrimaryExpression	2		5137220	1					
ANR	5138359	CompoundStatement		183:17:4227:4227	5137220	1					
ANR	5138360	ExpressionStatement	i = - 1	2061:4:49181:49187	5137220	0	True				
ANR	5138361	AssignmentExpression	i = - 1		5137220	0		=			
ANR	5138362	Identifier	i		5137220	0					
ANR	5138363	UnaryOperationExpression	- 1		5137220	1					
ANR	5138364	UnaryOperator	-		5137220	0					
ANR	5138365	PrimaryExpression	1		5137220	1					
ANR	5138366	GotoStatement	goto beach ;	2062:4:49193:49203	5137220	1	True				
ANR	5138367	Identifier	beach		5137220	0					
ANR	5138368	IfStatement	if ( fs < 1 )		5137220	13					
ANR	5138369	Condition	fs < 1	2064:7:49217:49222	5137220	0	True				
ANR	5138370	RelationalExpression	fs < 1		5137220	0		<			
ANR	5138371	Identifier	fs		5137220	0					
ANR	5138372	PrimaryExpression	1		5137220	1					
ANR	5138373	CompoundStatement		187:15:4277:4277	5137220	1					
ANR	5138374	ExpressionStatement	fs = 4	2065:4:49231:49237	5137220	0	True				
ANR	5138375	AssignmentExpression	fs = 4		5137220	0		=			
ANR	5138376	Identifier	fs		5137220	0					
ANR	5138377	PrimaryExpression	4		5137220	1					
ANR	5138378	IfStatement	if ( i + fs - 1 < len )		5137220	14					
ANR	5138379	Condition	i + fs - 1 < len	2067:7:49251:49266	5137220	0	True				
ANR	5138380	RelationalExpression	i + fs - 1 < len		5137220	0		<			
ANR	5138381	AdditiveExpression	i + fs - 1		5137220	0		+			
ANR	5138382	Identifier	i		5137220	0					
ANR	5138383	AdditiveExpression	fs - 1		5137220	1		-			
ANR	5138384	Identifier	fs		5137220	0					
ANR	5138385	PrimaryExpression	1		5137220	1					
ANR	5138386	Identifier	len		5137220	1					
ANR	5138387	CompoundStatement		190:25:4321:4321	5137220	1					
ANR	5138388	IfStatement	if ( len - i < 7 )		5137220	0					
ANR	5138389	Condition	len - i < 7	2069:8:49375:49385	5137220	0	True				
ANR	5138390	RelationalExpression	len - i < 7		5137220	0		<			
ANR	5138391	AdditiveExpression	len - i		5137220	0		-			
ANR	5138392	Identifier	len		5137220	0					
ANR	5138393	Identifier	i		5137220	1					
ANR	5138394	PrimaryExpression	7		5137220	1					
ANR	5138395	CompoundStatement		192:21:4440:4440	5137220	1					
ANR	5138396	ExpressionStatement	"updateAddr ( buf + i , THRESHOLD - ( len - i ) , endian , & addr , & addr64 )"	2070:5:49395:49462	5137220	0	True				
ANR	5138397	CallExpression	"updateAddr ( buf + i , THRESHOLD - ( len - i ) , endian , & addr , & addr64 )"		5137220	0					
ANR	5138398	Callee	updateAddr		5137220	0					
ANR	5138399	Identifier	updateAddr		5137220	0					
ANR	5138400	ArgumentList	buf + i		5137220	1					
ANR	5138401	Argument	buf + i		5137220	0					
ANR	5138402	AdditiveExpression	buf + i		5137220	0		+			
ANR	5138403	Identifier	buf		5137220	0					
ANR	5138404	Identifier	i		5137220	1					
ANR	5138405	Argument	THRESHOLD - ( len - i )		5137220	1					
ANR	5138406	AdditiveExpression	THRESHOLD - ( len - i )		5137220	0		-			
ANR	5138407	Identifier	THRESHOLD		5137220	0					
ANR	5138408	AdditiveExpression	len - i		5137220	1		-			
ANR	5138409	Identifier	len		5137220	0					
ANR	5138410	Identifier	i		5137220	1					
ANR	5138411	Argument	endian		5137220	2					
ANR	5138412	Identifier	endian		5137220	0					
ANR	5138413	Argument	& addr		5137220	3					
ANR	5138414	UnaryOperationExpression	& addr		5137220	0					
ANR	5138415	UnaryOperator	&		5137220	0					
ANR	5138416	Identifier	addr		5137220	1					
ANR	5138417	Argument	& addr64		5137220	4					
ANR	5138418	UnaryOperationExpression	& addr64		5137220	0					
ANR	5138419	UnaryOperator	&		5137220	0					
ANR	5138420	Identifier	addr64		5137220	1					
ANR	5138421	ElseStatement	else		5137220	0					
ANR	5138422	CompoundStatement		194:11:4527:4527	5137220	0					
ANR	5138423	ExpressionStatement	"updateAddr ( buf + i , len - i , endian , & addr , & addr64 )"	2072:5:49482:49535	5137220	0	True				
ANR	5138424	CallExpression	"updateAddr ( buf + i , len - i , endian , & addr , & addr64 )"		5137220	0					
ANR	5138425	Callee	updateAddr		5137220	0					
ANR	5138426	Identifier	updateAddr		5137220	0					
ANR	5138427	ArgumentList	buf + i		5137220	1					
ANR	5138428	Argument	buf + i		5137220	0					
ANR	5138429	AdditiveExpression	buf + i		5137220	0		+			
ANR	5138430	Identifier	buf		5137220	0					
ANR	5138431	Identifier	i		5137220	1					
ANR	5138432	Argument	len - i		5137220	1					
ANR	5138433	AdditiveExpression	len - i		5137220	0		-			
ANR	5138434	Identifier	len		5137220	0					
ANR	5138435	Identifier	i		5137220	1					
ANR	5138436	Argument	endian		5137220	2					
ANR	5138437	Identifier	endian		5137220	0					
ANR	5138438	Argument	& addr		5137220	3					
ANR	5138439	UnaryOperationExpression	& addr		5137220	0					
ANR	5138440	UnaryOperator	&		5137220	0					
ANR	5138441	Identifier	addr		5137220	1					
ANR	5138442	Argument	& addr64		5137220	4					
ANR	5138443	UnaryOperationExpression	& addr64		5137220	0					
ANR	5138444	UnaryOperator	&		5137220	0					
ANR	5138445	Identifier	addr64		5137220	1					
ANR	5138446	IfStatement	if ( p -> bits == 64 )		5137220	1					
ANR	5138447	Condition	p -> bits == 64	2074:8:49551:49563	5137220	0	True				
ANR	5138448	EqualityExpression	p -> bits == 64		5137220	0		==			
ANR	5138449	PtrMemberAccess	p -> bits		5137220	0					
ANR	5138450	Identifier	p		5137220	0					
ANR	5138451	Identifier	bits		5137220	1					
ANR	5138452	PrimaryExpression	64		5137220	1					
ANR	5138453	CompoundStatement		197:23:4618:4618	5137220	1					
ANR	5138454	ExpressionStatement	addr = addr64	2075:5:49573:49586	5137220	0	True				
ANR	5138455	AssignmentExpression	addr = addr64		5137220	0		=			
ANR	5138456	Identifier	addr		5137220	0					
ANR	5138457	Identifier	addr64		5137220	1					
ANR	5138458	ElseStatement	else		5137220	0					
ANR	5138459	CompoundStatement		200:10:4656:4656	5137220	0					
ANR	5138460	GotoStatement	goto beach ;	2079:4:49674:49684	5137220	0	True				
ANR	5138461	Identifier	beach		5137220	0					
ANR	5138462	ExpressionStatement	tmp = * arg	2082:3:49695:49705	5137220	15	True				
ANR	5138463	AssignmentExpression	tmp = * arg		5137220	0		=			
ANR	5138464	Identifier	tmp		5137220	0					
ANR	5138465	UnaryOperationExpression	* arg		5137220	1					
ANR	5138466	UnaryOperator	*		5137220	0					
ANR	5138467	Identifier	arg		5137220	1					
ANR	5138468	IfStatement	if ( mode && ! args )		5137220	16					
ANR	5138469	Condition	mode && ! args	2084:7:49715:49727	5137220	0	True				
ANR	5138470	AndExpression	mode && ! args		5137220	0		&&			
ANR	5138471	Identifier	mode		5137220	0					
ANR	5138472	UnaryOperationExpression	! args		5137220	1					
ANR	5138473	UnaryOperator	!		5137220	0					
ANR	5138474	Identifier	args		5137220	1					
ANR	5138475	CompoundStatement		207:22:4782:4782	5137220	1					
ANR	5138476	ExpressionStatement	mode |= R_PRINT_ISFIELD	2085:4:49736:49759	5137220	0	True				
ANR	5138477	AssignmentExpression	mode |= R_PRINT_ISFIELD		5137220	0		|=			
ANR	5138478	Identifier	mode		5137220	0					
ANR	5138479	Identifier	R_PRINT_ISFIELD		5137220	1					
ANR	5138480	IfStatement	if ( ! ( mode & R_PRINT_QUIET ) )		5137220	17					
ANR	5138481	Condition	! ( mode & R_PRINT_QUIET )	2087:7:49773:49795	5137220	0	True				
ANR	5138482	UnaryOperationExpression	! ( mode & R_PRINT_QUIET )		5137220	0					
ANR	5138483	UnaryOperator	!		5137220	0					
ANR	5138484	BitAndExpression	mode & R_PRINT_QUIET		5137220	1		&			
ANR	5138485	Identifier	mode		5137220	0					
ANR	5138486	Identifier	R_PRINT_QUIET		5137220	1					
ANR	5138487	CompoundStatement		210:32:4850:4850	5137220	1					
ANR	5138488	IfStatement	if ( mode & R_PRINT_MUSTSEE && otimes > 1 )		5137220	0					
ANR	5138489	Condition	mode & R_PRINT_MUSTSEE && otimes > 1	2088:8:49808:49843	5137220	0	True				
ANR	5138490	AndExpression	mode & R_PRINT_MUSTSEE && otimes > 1		5137220	0		&&			
ANR	5138491	BitAndExpression	mode & R_PRINT_MUSTSEE		5137220	0		&			
ANR	5138492	Identifier	mode		5137220	0					
ANR	5138493	Identifier	R_PRINT_MUSTSEE		5137220	1					
ANR	5138494	RelationalExpression	otimes > 1		5137220	1		>			
ANR	5138495	Identifier	otimes		5137220	0					
ANR	5138496	PrimaryExpression	1		5137220	1					
ANR	5138497	CompoundStatement		211:46:4898:4898	5137220	1					
ANR	5138498	ExpressionStatement	"p -> cb_printf ( ""  "" )"	2089:5:49853:49872	5137220	0	True				
ANR	5138499	CallExpression	"p -> cb_printf ( ""  "" )"		5137220	0					
ANR	5138500	Callee	p -> cb_printf		5137220	0					
ANR	5138501	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5138502	Identifier	p		5137220	0					
ANR	5138503	Identifier	cb_printf		5137220	1					
ANR	5138504	ArgumentList	"""  """		5137220	1					
ANR	5138505	Argument	"""  """		5137220	0					
ANR	5138506	PrimaryExpression	"""  """		5137220	0					
ANR	5138507	IfStatement	if ( idx < nargs && tmp != 'e' && isptr == 0 )		5137220	18					
ANR	5138508	Condition	idx < nargs && tmp != 'e' && isptr == 0	2092:7:49892:49930	5137220	0	True				
ANR	5138509	AndExpression	idx < nargs && tmp != 'e' && isptr == 0		5137220	0		&&			
ANR	5138510	RelationalExpression	idx < nargs		5137220	0		<			
ANR	5138511	Identifier	idx		5137220	0					
ANR	5138512	Identifier	nargs		5137220	1					
ANR	5138513	AndExpression	tmp != 'e' && isptr == 0		5137220	1		&&			
ANR	5138514	EqualityExpression	tmp != 'e'		5137220	0		!=			
ANR	5138515	Identifier	tmp		5137220	0					
ANR	5138516	PrimaryExpression	'e'		5137220	1					
ANR	5138517	EqualityExpression	isptr == 0		5137220	1		==			
ANR	5138518	Identifier	isptr		5137220	0					
ANR	5138519	PrimaryExpression	0		5137220	1					
ANR	5138520	CompoundStatement		216:4:4991:5024	5137220	1					
ANR	5138521	IdentifierDeclStatement	"char * dot = NULL , * bracket = NULL ;"	2093:4:49939:49972	5137220	0	True				
ANR	5138522	IdentifierDecl	* dot = NULL		5137220	0					
ANR	5138523	IdentifierDeclType	char *		5137220	0					
ANR	5138524	Identifier	dot		5137220	1					
ANR	5138525	AssignmentExpression	* dot = NULL		5137220	2		=			
ANR	5138526	Identifier	NULL		5137220	0					
ANR	5138527	Identifier	NULL		5137220	1					
ANR	5138528	IdentifierDecl	* bracket = NULL		5137220	1					
ANR	5138529	IdentifierDeclType	char *		5137220	0					
ANR	5138530	Identifier	bracket		5137220	1					
ANR	5138531	AssignmentExpression	* bracket = NULL		5137220	2		=			
ANR	5138532	Identifier	NULL		5137220	0					
ANR	5138533	Identifier	NULL		5137220	1					
ANR	5138534	IfStatement	if ( field )		5137220	1					
ANR	5138535	Condition	field	2094:8:49982:49986	5137220	0	True				
ANR	5138536	Identifier	field		5137220	0					
ANR	5138537	CompoundStatement		217:15:5041:5041	5137220	1					
ANR	5138538	ExpressionStatement	"dot = strchr ( field , '.' )"	2095:5:49996:50021	5137220	0	True				
ANR	5138539	AssignmentExpression	"dot = strchr ( field , '.' )"		5137220	0		=			
ANR	5138540	Identifier	dot		5137220	0					
ANR	5138541	CallExpression	"strchr ( field , '.' )"		5137220	1					
ANR	5138542	Callee	strchr		5137220	0					
ANR	5138543	Identifier	strchr		5137220	0					
ANR	5138544	ArgumentList	field		5137220	1					
ANR	5138545	Argument	field		5137220	0					
ANR	5138546	Identifier	field		5137220	0					
ANR	5138547	Argument	'.'		5137220	1					
ANR	5138548	PrimaryExpression	'.'		5137220	0					
ANR	5138549	IfStatement	if ( dot )		5137220	2					
ANR	5138550	Condition	dot	2097:8:50037:50039	5137220	0	True				
ANR	5138551	Identifier	dot		5137220	0					
ANR	5138552	CompoundStatement		220:13:5094:5094	5137220	1					
ANR	5138553	ExpressionStatement	* dot = '\\0'	2098:5:50049:50060	5137220	0	True				
ANR	5138554	AssignmentExpression	* dot = '\\0'		5137220	0		=			
ANR	5138555	UnaryOperationExpression	* dot		5137220	0					
ANR	5138556	UnaryOperator	*		5137220	0					
ANR	5138557	Identifier	dot		5137220	1					
ANR	5138558	PrimaryExpression	'\\0'		5137220	1					
ANR	5138559	ExpressionStatement	free ( oarg )	2100:4:50072:50083	5137220	3	True				
ANR	5138560	CallExpression	free ( oarg )		5137220	0					
ANR	5138561	Callee	free		5137220	0					
ANR	5138562	Identifier	free		5137220	0					
ANR	5138563	ArgumentList	oarg		5137220	1					
ANR	5138564	Argument	oarg		5137220	0					
ANR	5138565	Identifier	oarg		5137220	0					
ANR	5138566	ExpressionStatement	"oarg = fieldname = strdup ( r_str_word_get0 ( args , idx ) )"	2101:4:50089:50144	5137220	4	True				
ANR	5138567	AssignmentExpression	"oarg = fieldname = strdup ( r_str_word_get0 ( args , idx ) )"		5137220	0		=			
ANR	5138568	Identifier	oarg		5137220	0					
ANR	5138569	AssignmentExpression	"fieldname = strdup ( r_str_word_get0 ( args , idx ) )"		5137220	1		=			
ANR	5138570	Identifier	fieldname		5137220	0					
ANR	5138571	CallExpression	"strdup ( r_str_word_get0 ( args , idx ) )"		5137220	1					
ANR	5138572	Callee	strdup		5137220	0					
ANR	5138573	Identifier	strdup		5137220	0					
ANR	5138574	ArgumentList	"r_str_word_get0 ( args , idx )"		5137220	1					
ANR	5138575	Argument	"r_str_word_get0 ( args , idx )"		5137220	0					
ANR	5138576	CallExpression	"r_str_word_get0 ( args , idx )"		5137220	0					
ANR	5138577	Callee	r_str_word_get0		5137220	0					
ANR	5138578	Identifier	r_str_word_get0		5137220	0					
ANR	5138579	ArgumentList	args		5137220	1					
ANR	5138580	Argument	args		5137220	0					
ANR	5138581	Identifier	args		5137220	0					
ANR	5138582	Argument	idx		5137220	1					
ANR	5138583	Identifier	idx		5137220	0					
ANR	5138584	IfStatement	if ( ISSTRUCT || tmp == 'E' || tmp == 'B' || tmp == 'r' )		5137220	5					
ANR	5138585	Condition	ISSTRUCT || tmp == 'E' || tmp == 'B' || tmp == 'r'	2102:8:50154:50197	5137220	0	True				
ANR	5138586	OrExpression	ISSTRUCT || tmp == 'E' || tmp == 'B' || tmp == 'r'		5137220	0		||			
ANR	5138587	Identifier	ISSTRUCT		5137220	0					
ANR	5138588	OrExpression	tmp == 'E' || tmp == 'B' || tmp == 'r'		5137220	1		||			
ANR	5138589	EqualityExpression	tmp == 'E'		5137220	0		==			
ANR	5138590	Identifier	tmp		5137220	0					
ANR	5138591	PrimaryExpression	'E'		5137220	1					
ANR	5138592	OrExpression	tmp == 'B' || tmp == 'r'		5137220	1		||			
ANR	5138593	EqualityExpression	tmp == 'B'		5137220	0		==			
ANR	5138594	Identifier	tmp		5137220	0					
ANR	5138595	PrimaryExpression	'B'		5137220	1					
ANR	5138596	EqualityExpression	tmp == 'r'		5137220	1		==			
ANR	5138597	Identifier	tmp		5137220	0					
ANR	5138598	PrimaryExpression	'r'		5137220	1					
ANR	5138599	CompoundStatement		225:54:5252:5252	5137220	1					
ANR	5138600	IfStatement	if ( * fieldname == '(' )		5137220	0					
ANR	5138601	Condition	* fieldname == '('	2103:9:50211:50227	5137220	0	True				
ANR	5138602	EqualityExpression	* fieldname == '('		5137220	0		==			
ANR	5138603	UnaryOperationExpression	* fieldname		5137220	0					
ANR	5138604	UnaryOperator	*		5137220	0					
ANR	5138605	Identifier	fieldname		5137220	1					
ANR	5138606	PrimaryExpression	'('		5137220	1					
ANR	5138607	CompoundStatement		226:28:5282:5282	5137220	1					
ANR	5138608	ExpressionStatement	fmtname = fieldname + 1	2104:6:50238:50261	5137220	0	True				
ANR	5138609	AssignmentExpression	fmtname = fieldname + 1		5137220	0		=			
ANR	5138610	Identifier	fmtname		5137220	0					
ANR	5138611	AdditiveExpression	fieldname + 1		5137220	1		+			
ANR	5138612	Identifier	fieldname		5137220	0					
ANR	5138613	PrimaryExpression	1		5137220	1					
ANR	5138614	ExpressionStatement	"fieldname = ( char * ) r_str_rchr ( fieldname , NULL , ')' )"	2105:6:50269:50321	5137220	1	True				
ANR	5138615	AssignmentExpression	"fieldname = ( char * ) r_str_rchr ( fieldname , NULL , ')' )"		5137220	0		=			
ANR	5138616	Identifier	fieldname		5137220	0					
ANR	5138617	CastExpression	"( char * ) r_str_rchr ( fieldname , NULL , ')' )"		5137220	1					
ANR	5138618	CastTarget	char *		5137220	0					
ANR	5138619	CallExpression	"r_str_rchr ( fieldname , NULL , ')' )"		5137220	1					
ANR	5138620	Callee	r_str_rchr		5137220	0					
ANR	5138621	Identifier	r_str_rchr		5137220	0					
ANR	5138622	ArgumentList	fieldname		5137220	1					
ANR	5138623	Argument	fieldname		5137220	0					
ANR	5138624	Identifier	fieldname		5137220	0					
ANR	5138625	Argument	NULL		5137220	1					
ANR	5138626	Identifier	NULL		5137220	0					
ANR	5138627	Argument	')'		5137220	2					
ANR	5138628	PrimaryExpression	')'		5137220	0					
ANR	5138629	IfStatement	if ( fieldname )		5137220	2					
ANR	5138630	Condition	fieldname	2106:10:50333:50341	5137220	0	True				
ANR	5138631	Identifier	fieldname		5137220	0					
ANR	5138632	CompoundStatement		229:21:5396:5396	5137220	1					
ANR	5138633	ExpressionStatement	* fieldname ++ = '\\0'	2107:7:50353:50372	5137220	0	True				
ANR	5138634	AssignmentExpression	* fieldname ++ = '\\0'		5137220	0		=			
ANR	5138635	UnaryOperationExpression	* fieldname ++		5137220	0					
ANR	5138636	UnaryOperator	*		5137220	0					
ANR	5138637	PostIncDecOperationExpression	fieldname ++		5137220	1					
ANR	5138638	Identifier	fieldname		5137220	0					
ANR	5138639	IncDec	++		5137220	1					
ANR	5138640	PrimaryExpression	'\\0'		5137220	1					
ANR	5138641	ElseStatement	else		5137220	0					
ANR	5138642	CompoundStatement		231:13:5439:5439	5137220	0					
ANR	5138643	ExpressionStatement	"eprintf ( ""Missing closing parenthesis in format ')'\\n"" )"	2109:7:50396:50451	5137220	0	True				
ANR	5138644	CallExpression	"eprintf ( ""Missing closing parenthesis in format ')'\\n"" )"		5137220	0					
ANR	5138645	Callee	eprintf		5137220	0					
ANR	5138646	Identifier	eprintf		5137220	0					
ANR	5138647	ArgumentList	"""Missing closing parenthesis in format ')'\\n"""		5137220	1					
ANR	5138648	Argument	"""Missing closing parenthesis in format ')'\\n"""		5137220	0					
ANR	5138649	PrimaryExpression	"""Missing closing parenthesis in format ')'\\n"""		5137220	0					
ANR	5138650	GotoStatement	goto beach ;	2110:7:50460:50470	5137220	1	True				
ANR	5138651	Identifier	beach		5137220	0					
ANR	5138652	ElseStatement	else		5137220	0					
ANR	5138653	CompoundStatement		235:12:5544:5544	5137220	0					
ANR	5138654	ExpressionStatement	"eprintf ( ""Missing name (%s)\\n"" , fieldname )"	2113:6:50500:50542	5137220	0	True				
ANR	5138655	CallExpression	"eprintf ( ""Missing name (%s)\\n"" , fieldname )"		5137220	0					
ANR	5138656	Callee	eprintf		5137220	0					
ANR	5138657	Identifier	eprintf		5137220	0					
ANR	5138658	ArgumentList	"""Missing name (%s)\\n"""		5137220	1					
ANR	5138659	Argument	"""Missing name (%s)\\n"""		5137220	0					
ANR	5138660	PrimaryExpression	"""Missing name (%s)\\n"""		5137220	0					
ANR	5138661	Argument	fieldname		5137220	1					
ANR	5138662	Identifier	fieldname		5137220	0					
ANR	5138663	GotoStatement	goto beach ;	2114:6:50550:50560	5137220	1	True				
ANR	5138664	Identifier	beach		5137220	0					
ANR	5138665	IfStatement	"if ( mode && ( ! args || ( ! field && ofield != MINUSONE ) || ( field && ! strncmp ( field , fieldname , strchr ( field , '[' ) ? strchr ( field , '[' ) - field : strlen ( field ) + 1 ) ) ) )"		5137220	6					
ANR	5138666	Condition	"mode && ( ! args || ( ! field && ofield != MINUSONE ) || ( field && ! strncmp ( field , fieldname , strchr ( field , '[' ) ? strchr ( field , '[' ) - field : strlen ( field ) + 1 ) ) )"	2117:8:50583:50772	5137220	0	True				
ANR	5138667	AndExpression	"mode && ( ! args || ( ! field && ofield != MINUSONE ) || ( field && ! strncmp ( field , fieldname , strchr ( field , '[' ) ? strchr ( field , '[' ) - field : strlen ( field ) + 1 ) ) )"		5137220	0		&&			
ANR	5138668	Identifier	mode		5137220	0					
ANR	5138669	OrExpression	"! args || ( ! field && ofield != MINUSONE ) || ( field && ! strncmp ( field , fieldname , strchr ( field , '[' ) ? strchr ( field , '[' ) - field : strlen ( field ) + 1 ) )"		5137220	1		||			
ANR	5138670	UnaryOperationExpression	! args		5137220	0					
ANR	5138671	UnaryOperator	!		5137220	0					
ANR	5138672	Identifier	args		5137220	1					
ANR	5138673	OrExpression	"( ! field && ofield != MINUSONE ) || ( field && ! strncmp ( field , fieldname , strchr ( field , '[' ) ? strchr ( field , '[' ) - field : strlen ( field ) + 1 ) )"		5137220	1		||			
ANR	5138674	AndExpression	! field && ofield != MINUSONE		5137220	0		&&			
ANR	5138675	UnaryOperationExpression	! field		5137220	0					
ANR	5138676	UnaryOperator	!		5137220	0					
ANR	5138677	Identifier	field		5137220	1					
ANR	5138678	EqualityExpression	ofield != MINUSONE		5137220	1		!=			
ANR	5138679	Identifier	ofield		5137220	0					
ANR	5138680	Identifier	MINUSONE		5137220	1					
ANR	5138681	AndExpression	"field && ! strncmp ( field , fieldname , strchr ( field , '[' ) ? strchr ( field , '[' ) - field : strlen ( field ) + 1 )"		5137220	1		&&			
ANR	5138682	Identifier	field		5137220	0					
ANR	5138683	UnaryOperationExpression	"! strncmp ( field , fieldname , strchr ( field , '[' ) ? strchr ( field , '[' ) - field : strlen ( field ) + 1 )"		5137220	1					
ANR	5138684	UnaryOperator	!		5137220	0					
ANR	5138685	CallExpression	"strncmp ( field , fieldname , strchr ( field , '[' ) ? strchr ( field , '[' ) - field : strlen ( field ) + 1 )"		5137220	1					
ANR	5138686	Callee	strncmp		5137220	0					
ANR	5138687	Identifier	strncmp		5137220	0					
ANR	5138688	ArgumentList	field		5137220	1					
ANR	5138689	Argument	field		5137220	0					
ANR	5138690	Identifier	field		5137220	0					
ANR	5138691	Argument	fieldname		5137220	1					
ANR	5138692	Identifier	fieldname		5137220	0					
ANR	5138693	Argument	"strchr ( field , '[' ) ? strchr ( field , '[' ) - field : strlen ( field ) + 1"		5137220	2					
ANR	5138694	ConditionalExpression	"strchr ( field , '[' ) ? strchr ( field , '[' ) - field : strlen ( field ) + 1"		5137220	0					
ANR	5138695	Condition	"strchr ( field , '[' )"		5137220	0					
ANR	5138696	CallExpression	"strchr ( field , '[' )"		5137220	0					
ANR	5138697	Callee	strchr		5137220	0					
ANR	5138698	Identifier	strchr		5137220	0					
ANR	5138699	ArgumentList	field		5137220	1					
ANR	5138700	Argument	field		5137220	0					
ANR	5138701	Identifier	field		5137220	0					
ANR	5138702	Argument	'['		5137220	1					
ANR	5138703	PrimaryExpression	'['		5137220	0					
ANR	5138704	AdditiveExpression	"strchr ( field , '[' ) - field"		5137220	1		-			
ANR	5138705	CallExpression	"strchr ( field , '[' )"		5137220	0					
ANR	5138706	Callee	strchr		5137220	0					
ANR	5138707	Identifier	strchr		5137220	0					
ANR	5138708	ArgumentList	field		5137220	1					
ANR	5138709	Argument	field		5137220	0					
ANR	5138710	Identifier	field		5137220	0					
ANR	5138711	Argument	'['		5137220	1					
ANR	5138712	PrimaryExpression	'['		5137220	0					
ANR	5138713	Identifier	field		5137220	1					
ANR	5138714	AdditiveExpression	strlen ( field ) + 1		5137220	2		+			
ANR	5138715	CallExpression	strlen ( field )		5137220	0					
ANR	5138716	Callee	strlen		5137220	0					
ANR	5138717	Identifier	strlen		5137220	0					
ANR	5138718	ArgumentList	field		5137220	1					
ANR	5138719	Argument	field		5137220	0					
ANR	5138720	Identifier	field		5137220	0					
ANR	5138721	PrimaryExpression	1		5137220	1					
ANR	5138722	CompoundStatement		244:31:5827:5827	5137220	1					
ANR	5138723	ExpressionStatement	mode |= R_PRINT_ISFIELD	2122:5:50782:50805	5137220	0	True				
ANR	5138724	AssignmentExpression	mode |= R_PRINT_ISFIELD		5137220	0		|=			
ANR	5138725	Identifier	mode		5137220	0					
ANR	5138726	Identifier	R_PRINT_ISFIELD		5137220	1					
ANR	5138727	ElseStatement	else		5137220	0					
ANR	5138728	CompoundStatement		246:11:5870:5870	5137220	0					
ANR	5138729	ExpressionStatement	mode &= ~R_PRINT_ISFIELD	2124:5:50825:50849	5137220	0	True				
ANR	5138730	AssignmentExpression	mode &= ~R_PRINT_ISFIELD		5137220	0		&=			
ANR	5138731	Identifier	mode		5137220	0					
ANR	5138732	Identifier	~R_PRINT_ISFIELD		5137220	1					
ANR	5138733	IfStatement	"if ( field && ( bracket = strchr ( field , '[' ) ) && mode & R_PRINT_ISFIELD )"		5137220	7					
ANR	5138734	Condition	"field && ( bracket = strchr ( field , '[' ) ) && mode & R_PRINT_ISFIELD"	2128:8:50918:50983	5137220	0	True				
ANR	5138735	AndExpression	"field && ( bracket = strchr ( field , '[' ) ) && mode & R_PRINT_ISFIELD"		5137220	0		&&			
ANR	5138736	Identifier	field		5137220	0					
ANR	5138737	AndExpression	"( bracket = strchr ( field , '[' ) ) && mode & R_PRINT_ISFIELD"		5137220	1		&&			
ANR	5138738	AssignmentExpression	"bracket = strchr ( field , '[' )"		5137220	0		=			
ANR	5138739	Identifier	bracket		5137220	0					
ANR	5138740	CallExpression	"strchr ( field , '[' )"		5137220	1					
ANR	5138741	Callee	strchr		5137220	0					
ANR	5138742	Identifier	strchr		5137220	0					
ANR	5138743	ArgumentList	field		5137220	1					
ANR	5138744	Argument	field		5137220	0					
ANR	5138745	Identifier	field		5137220	0					
ANR	5138746	Argument	'['		5137220	1					
ANR	5138747	PrimaryExpression	'['		5137220	0					
ANR	5138748	BitAndExpression	mode & R_PRINT_ISFIELD		5137220	1		&			
ANR	5138749	Identifier	mode		5137220	0					
ANR	5138750	Identifier	R_PRINT_ISFIELD		5137220	1					
ANR	5138751	CompoundStatement		252:5:6045:6076	5137220	1					
ANR	5138752	IdentifierDeclStatement	"char * end = strchr ( field , ']' ) ;"	2129:5:50993:51024	5137220	0	True				
ANR	5138753	IdentifierDecl	"* end = strchr ( field , ']' )"		5137220	0					
ANR	5138754	IdentifierDeclType	char *		5137220	0					
ANR	5138755	Identifier	end		5137220	1					
ANR	5138756	AssignmentExpression	"* end = strchr ( field , ']' )"		5137220	2		=			
ANR	5138757	Identifier	end		5137220	0					
ANR	5138758	CallExpression	"strchr ( field , ']' )"		5137220	1					
ANR	5138759	Callee	strchr		5137220	0					
ANR	5138760	Identifier	strchr		5137220	0					
ANR	5138761	ArgumentList	field		5137220	1					
ANR	5138762	Argument	field		5137220	0					
ANR	5138763	Identifier	field		5137220	0					
ANR	5138764	Argument	']'		5137220	1					
ANR	5138765	PrimaryExpression	']'		5137220	0					
ANR	5138766	IfStatement	if ( ! end )		5137220	1					
ANR	5138767	Condition	! end	2130:9:51035:51038	5137220	0	True				
ANR	5138768	UnaryOperationExpression	! end		5137220	0					
ANR	5138769	UnaryOperator	!		5137220	0					
ANR	5138770	Identifier	end		5137220	1					
ANR	5138771	CompoundStatement		253:15:6093:6093	5137220	1					
ANR	5138772	ExpressionStatement	"eprintf ( ""Missing closing bracket\\n"" )"	2131:6:51049:51086	5137220	0	True				
ANR	5138773	CallExpression	"eprintf ( ""Missing closing bracket\\n"" )"		5137220	0					
ANR	5138774	Callee	eprintf		5137220	0					
ANR	5138775	Identifier	eprintf		5137220	0					
ANR	5138776	ArgumentList	"""Missing closing bracket\\n"""		5137220	1					
ANR	5138777	Argument	"""Missing closing bracket\\n"""		5137220	0					
ANR	5138778	PrimaryExpression	"""Missing closing bracket\\n"""		5137220	0					
ANR	5138779	GotoStatement	goto beach ;	2132:6:51094:51104	5137220	1	True				
ANR	5138780	Identifier	beach		5137220	0					
ANR	5138781	ExpressionStatement	* end = '\\0'	2134:5:51118:51129	5137220	2	True				
ANR	5138782	AssignmentExpression	* end = '\\0'		5137220	0		=			
ANR	5138783	UnaryOperationExpression	* end		5137220	0					
ANR	5138784	UnaryOperator	*		5137220	0					
ANR	5138785	Identifier	end		5137220	1					
ANR	5138786	PrimaryExpression	'\\0'		5137220	1					
ANR	5138787	ExpressionStatement	"elem = r_num_math ( NULL , bracket + 1 ) + 1"	2135:5:51136:51177	5137220	3	True				
ANR	5138788	AssignmentExpression	"elem = r_num_math ( NULL , bracket + 1 ) + 1"		5137220	0		=			
ANR	5138789	Identifier	elem		5137220	0					
ANR	5138790	AdditiveExpression	"r_num_math ( NULL , bracket + 1 ) + 1"		5137220	1		+			
ANR	5138791	CallExpression	"r_num_math ( NULL , bracket + 1 )"		5137220	0					
ANR	5138792	Callee	r_num_math		5137220	0					
ANR	5138793	Identifier	r_num_math		5137220	0					
ANR	5138794	ArgumentList	NULL		5137220	1					
ANR	5138795	Argument	NULL		5137220	0					
ANR	5138796	Identifier	NULL		5137220	0					
ANR	5138797	Argument	bracket + 1		5137220	1					
ANR	5138798	AdditiveExpression	bracket + 1		5137220	0		+			
ANR	5138799	Identifier	bracket		5137220	0					
ANR	5138800	PrimaryExpression	1		5137220	1					
ANR	5138801	PrimaryExpression	1		5137220	1					
ANR	5138802	ForStatement	for ( ; bracket < end ; bracket ++ )		5137220	4					
ANR	5138803	Condition	bracket < end	2136:13:51223:51235	5137220	0	True				
ANR	5138804	RelationalExpression	bracket < end		5137220	0		<			
ANR	5138805	Identifier	bracket		5137220	0					
ANR	5138806	Identifier	end		5137220	1					
ANR	5138807	PostIncDecOperationExpression	bracket ++	2136:28:51238:51246	5137220	1	True				
ANR	5138808	Identifier	bracket		5137220	0					
ANR	5138809	IncDec	++		5137220	1					
ANR	5138810	CompoundStatement		259:39:6301:6301	5137220	2					
ANR	5138811	ExpressionStatement	* bracket = '\\0'	2137:6:51257:51272	5137220	0	True				
ANR	5138812	AssignmentExpression	* bracket = '\\0'		5137220	0		=			
ANR	5138813	UnaryOperationExpression	* bracket		5137220	0					
ANR	5138814	UnaryOperator	*		5137220	0					
ANR	5138815	Identifier	bracket		5137220	1					
ANR	5138816	PrimaryExpression	'\\0'		5137220	1					
ANR	5138817	ExpressionStatement	size += elem * ARRAYINDEX_COEF	2139:5:51286:51316	5137220	5	True				
ANR	5138818	AssignmentExpression	size += elem * ARRAYINDEX_COEF		5137220	0		+=			
ANR	5138819	Identifier	size		5137220	0					
ANR	5138820	MultiplicativeExpression	elem * ARRAYINDEX_COEF		5137220	1		*			
ANR	5138821	Identifier	elem		5137220	0					
ANR	5138822	Identifier	ARRAYINDEX_COEF		5137220	1					
ANR	5138823	ElseStatement	else		5137220	0					
ANR	5138824	CompoundStatement		263:11:6381:6381	5137220	0					
ANR	5138825	ExpressionStatement	elem = - 1	2141:5:51336:51345	5137220	0	True				
ANR	5138826	AssignmentExpression	elem = - 1		5137220	0		=			
ANR	5138827	Identifier	elem		5137220	0					
ANR	5138828	UnaryOperationExpression	- 1		5137220	1					
ANR	5138829	UnaryOperator	-		5137220	0					
ANR	5138830	PrimaryExpression	1		5137220	1					
ANR	5138831	IfStatement	if ( tmp != '.' && tmp != ':' )		5137220	8					
ANR	5138832	Condition	tmp != '.' && tmp != ':'	2143:8:51361:51384	5137220	0	True				
ANR	5138833	AndExpression	tmp != '.' && tmp != ':'		5137220	0		&&			
ANR	5138834	EqualityExpression	tmp != '.'		5137220	0		!=			
ANR	5138835	Identifier	tmp		5137220	0					
ANR	5138836	PrimaryExpression	'.'		5137220	1					
ANR	5138837	EqualityExpression	tmp != ':'		5137220	1		!=			
ANR	5138838	Identifier	tmp		5137220	0					
ANR	5138839	PrimaryExpression	':'		5137220	1					
ANR	5138840	CompoundStatement		266:34:6439:6439	5137220	1					
ANR	5138841	ExpressionStatement	idx ++	2144:5:51394:51399	5137220	0	True				
ANR	5138842	PostIncDecOperationExpression	idx ++		5137220	0					
ANR	5138843	Identifier	idx		5137220	0					
ANR	5138844	IncDec	++		5137220	1					
ANR	5138845	IfStatement	if ( MUSTSEE && ! SEEVALUE )		5137220	1					
ANR	5138846	Condition	MUSTSEE && ! SEEVALUE	2145:9:51410:51429	5137220	0	True				
ANR	5138847	AndExpression	MUSTSEE && ! SEEVALUE		5137220	0		&&			
ANR	5138848	Identifier	MUSTSEE		5137220	0					
ANR	5138849	UnaryOperationExpression	! SEEVALUE		5137220	1					
ANR	5138850	UnaryOperator	!		5137220	0					
ANR	5138851	Identifier	SEEVALUE		5137220	1					
ANR	5138852	CompoundStatement		268:31:6484:6484	5137220	1					
ANR	5138853	IfStatement	if ( ! ISQUIET )		5137220	0					
ANR	5138854	Condition	! ISQUIET	2146:10:51444:51451	5137220	0	True				
ANR	5138855	UnaryOperationExpression	! ISQUIET		5137220	0					
ANR	5138856	UnaryOperator	!		5137220	0					
ANR	5138857	Identifier	ISQUIET		5137220	1					
ANR	5138858	CompoundStatement		269:20:6506:6506	5137220	1					
ANR	5138859	ExpressionStatement	"p -> cb_printf ( namefmt , fieldname )"	2147:7:51463:51496	5137220	0	True				
ANR	5138860	CallExpression	"p -> cb_printf ( namefmt , fieldname )"		5137220	0					
ANR	5138861	Callee	p -> cb_printf		5137220	0					
ANR	5138862	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5138863	Identifier	p		5137220	0					
ANR	5138864	Identifier	cb_printf		5137220	1					
ANR	5138865	ArgumentList	namefmt		5137220	1					
ANR	5138866	Argument	namefmt		5137220	0					
ANR	5138867	Identifier	namefmt		5137220	0					
ANR	5138868	Argument	fieldname		5137220	1					
ANR	5138869	Identifier	fieldname		5137220	0					
ANR	5138870	Label	feed_me_again :	2152:2:51526:51539	5137220	19	True				
ANR	5138871	Identifier	feed_me_again		5137220	0					
ANR	5138872	SwitchStatement	switch ( isptr )		5137220	20					
ANR	5138873	Condition	isptr	2153:11:51552:51556	5137220	0	True				
ANR	5138874	Identifier	isptr		5137220	0					
ANR	5138875	CompoundStatement		276:18:6611:6611	5137220	1					
ANR	5138876	Label	case PTRSEEK :	2154:3:51564:51576	5137220	0	True				
ANR	5138877	Identifier	PTRSEEK		5137220	0					
ANR	5138878	CompoundStatement		278:4:6634:6634	5137220	1					
ANR	5138879	ExpressionStatement	nexti = i + ( p -> bits / 8 )	2156:4:51588:51613	5137220	0	True				
ANR	5138880	AssignmentExpression	nexti = i + ( p -> bits / 8 )		5137220	0		=			
ANR	5138881	Identifier	nexti		5137220	0					
ANR	5138882	AdditiveExpression	i + ( p -> bits / 8 )		5137220	1		+			
ANR	5138883	Identifier	i		5137220	0					
ANR	5138884	MultiplicativeExpression	p -> bits / 8		5137220	1		/			
ANR	5138885	PtrMemberAccess	p -> bits		5137220	0					
ANR	5138886	Identifier	p		5137220	0					
ANR	5138887	Identifier	bits		5137220	1					
ANR	5138888	PrimaryExpression	8		5137220	1					
ANR	5138889	ExpressionStatement	i = 0	2157:4:51619:51624	5137220	1	True				
ANR	5138890	AssignmentExpression	i = 0		5137220	0		=			
ANR	5138891	Identifier	i		5137220	0					
ANR	5138892	PrimaryExpression	0		5137220	1					
ANR	5138893	IfStatement	if ( tmp == '?' )		5137220	2					
ANR	5138894	Condition	tmp == '?'	2158:8:51634:51643	5137220	0	True				
ANR	5138895	EqualityExpression	tmp == '?'		5137220	0		==			
ANR	5138896	Identifier	tmp		5137220	0					
ANR	5138897	PrimaryExpression	'?'		5137220	1					
ANR	5138898	CompoundStatement		281:20:6698:6698	5137220	1					
ANR	5138899	ExpressionStatement	seeki = addr	2159:5:51653:51665	5137220	0	True				
ANR	5138900	AssignmentExpression	seeki = addr		5137220	0		=			
ANR	5138901	Identifier	seeki		5137220	0					
ANR	5138902	Identifier	addr		5137220	1					
ANR	5138903	ExpressionStatement	"memset ( buf , '\\0' , len )"	2161:4:51677:51700	5137220	3	True				
ANR	5138904	CallExpression	"memset ( buf , '\\0' , len )"		5137220	0					
ANR	5138905	Callee	memset		5137220	0					
ANR	5138906	Identifier	memset		5137220	0					
ANR	5138907	ArgumentList	buf		5137220	1					
ANR	5138908	Argument	buf		5137220	0					
ANR	5138909	Identifier	buf		5137220	0					
ANR	5138910	Argument	'\\0'		5137220	1					
ANR	5138911	PrimaryExpression	'\\0'		5137220	0					
ANR	5138912	Argument	len		5137220	2					
ANR	5138913	Identifier	len		5137220	0					
ANR	5138914	IfStatement	if ( MUSTSEE && ! ISQUIET )		5137220	4					
ANR	5138915	Condition	MUSTSEE && ! ISQUIET	2162:8:51710:51728	5137220	0	True				
ANR	5138916	AndExpression	MUSTSEE && ! ISQUIET		5137220	0		&&			
ANR	5138917	Identifier	MUSTSEE		5137220	0					
ANR	5138918	UnaryOperationExpression	! ISQUIET		5137220	1					
ANR	5138919	UnaryOperator	!		5137220	0					
ANR	5138920	Identifier	ISQUIET		5137220	1					
ANR	5138921	CompoundStatement		285:29:6783:6783	5137220	1					
ANR	5138922	Statement	p	2163:5:51738:51738	5137220	0	True				
ANR	5138923	Statement	->	2163:6:51739:51740	5137220	1	True				
ANR	5138924	Statement	cb_printf	2163:8:51741:51749	5137220	2	True				
ANR	5138925	Statement	(	2163:18:51751:51751	5137220	3	True				
ANR	5138926	Statement	"""(*0x%"""	2163:19:51752:51758	5137220	4	True				
ANR	5138927	Statement	PFMT64x	2163:26:51759:51765	5137220	5	True				
ANR	5138928	Statement	""")"""	2163:33:51766:51768	5137220	6	True				
ANR	5138929	Statement	","	2163:36:51769:51769	5137220	7	True				
ANR	5138930	Statement	addr	2163:38:51771:51774	5137220	8	True				
ANR	5138931	Statement	)	2163:42:51775:51775	5137220	9	True				
ANR	5138932	ExpressionStatement		2163:43:51776:51776	5137220	10	True				
ANR	5138933	ExpressionStatement	isptr = ( addr ) ? PTRBACK : NULLPTR	2165:4:51788:51820	5137220	5	True				
ANR	5138934	AssignmentExpression	isptr = ( addr ) ? PTRBACK : NULLPTR		5137220	0		=			
ANR	5138935	Identifier	isptr		5137220	0					
ANR	5138936	ConditionalExpression	( addr ) ? PTRBACK : NULLPTR		5137220	1					
ANR	5138937	Condition	addr		5137220	0					
ANR	5138938	Identifier	addr		5137220	0					
ANR	5138939	Identifier	PTRBACK		5137220	1					
ANR	5138940	Identifier	NULLPTR		5137220	2					
ANR	5138941	IfStatement	if ( p -> iob . read_at )		5137220	6					
ANR	5138942	Condition	p -> iob . read_at	2166:8:51830:51843	5137220	0	True				
ANR	5138943	MemberAccess	p -> iob . read_at		5137220	0					
ANR	5138944	PtrMemberAccess	p -> iob		5137220	0					
ANR	5138945	Identifier	p		5137220	0					
ANR	5138946	Identifier	iob		5137220	1					
ANR	5138947	Identifier	read_at		5137220	1					
ANR	5138948	CompoundStatement		289:24:6898:6898	5137220	1					
ANR	5138949	ExpressionStatement	"p -> iob . read_at ( p -> iob . io , ( ut64 ) addr , buf , len - 4 )"	2167:5:51853:51905	5137220	0	True				
ANR	5138950	CallExpression	"p -> iob . read_at ( p -> iob . io , ( ut64 ) addr , buf , len - 4 )"		5137220	0					
ANR	5138951	Callee	p -> iob . read_at		5137220	0					
ANR	5138952	MemberAccess	p -> iob . read_at		5137220	0					
ANR	5138953	PtrMemberAccess	p -> iob		5137220	0					
ANR	5138954	Identifier	p		5137220	0					
ANR	5138955	Identifier	iob		5137220	1					
ANR	5138956	Identifier	read_at		5137220	1					
ANR	5138957	ArgumentList	p -> iob . io		5137220	1					
ANR	5138958	Argument	p -> iob . io		5137220	0					
ANR	5138959	MemberAccess	p -> iob . io		5137220	0					
ANR	5138960	PtrMemberAccess	p -> iob		5137220	0					
ANR	5138961	Identifier	p		5137220	0					
ANR	5138962	Identifier	iob		5137220	1					
ANR	5138963	Identifier	io		5137220	1					
ANR	5138964	Argument	( ut64 ) addr		5137220	1					
ANR	5138965	CastExpression	( ut64 ) addr		5137220	0					
ANR	5138966	CastTarget	ut64		5137220	0					
ANR	5138967	Identifier	addr		5137220	1					
ANR	5138968	Argument	buf		5137220	2					
ANR	5138969	Identifier	buf		5137220	0					
ANR	5138970	Argument	len - 4		5137220	3					
ANR	5138971	AdditiveExpression	len - 4		5137220	0		-			
ANR	5138972	Identifier	len		5137220	0					
ANR	5138973	PrimaryExpression	4		5137220	1					
ANR	5138974	IfStatement	if ( ( ( i + 3 ) < len ) || ( ( i + 7 ) < len ) )		5137220	1					
ANR	5138975	Condition	( ( i + 3 ) < len ) || ( ( i + 7 ) < len )	2168:9:51916:51949	5137220	0	True				
ANR	5138976	OrExpression	( ( i + 3 ) < len ) || ( ( i + 7 ) < len )		5137220	0		||			
ANR	5138977	RelationalExpression	( i + 3 ) < len		5137220	0		<			
ANR	5138978	AdditiveExpression	i + 3		5137220	0		+			
ANR	5138979	Identifier	i		5137220	0					
ANR	5138980	PrimaryExpression	3		5137220	1					
ANR	5138981	Identifier	len		5137220	1					
ANR	5138982	RelationalExpression	( i + 7 ) < len		5137220	1		<			
ANR	5138983	AdditiveExpression	i + 7		5137220	0		+			
ANR	5138984	Identifier	i		5137220	0					
ANR	5138985	PrimaryExpression	7		5137220	1					
ANR	5138986	Identifier	len		5137220	1					
ANR	5138987	CompoundStatement		291:45:7004:7004	5137220	1					
ANR	5138988	IfStatement	if ( tmp != 'D' )		5137220	0					
ANR	5138989	Condition	tmp != 'D'	2170:10:51995:52004	5137220	0	True				
ANR	5138990	EqualityExpression	tmp != 'D'		5137220	0		!=			
ANR	5138991	Identifier	tmp		5137220	0					
ANR	5138992	PrimaryExpression	'D'		5137220	1					
ANR	5138993	CompoundStatement		293:22:7059:7059	5137220	1					
ANR	5138994	ExpressionStatement	"updateAddr ( buf + i , len - i , endian , & addr , & addr64 )"	2171:7:52016:52069	5137220	0	True				
ANR	5138995	CallExpression	"updateAddr ( buf + i , len - i , endian , & addr , & addr64 )"		5137220	0					
ANR	5138996	Callee	updateAddr		5137220	0					
ANR	5138997	Identifier	updateAddr		5137220	0					
ANR	5138998	ArgumentList	buf + i		5137220	1					
ANR	5138999	Argument	buf + i		5137220	0					
ANR	5139000	AdditiveExpression	buf + i		5137220	0		+			
ANR	5139001	Identifier	buf		5137220	0					
ANR	5139002	Identifier	i		5137220	1					
ANR	5139003	Argument	len - i		5137220	1					
ANR	5139004	AdditiveExpression	len - i		5137220	0		-			
ANR	5139005	Identifier	len		5137220	0					
ANR	5139006	Identifier	i		5137220	1					
ANR	5139007	Argument	endian		5137220	2					
ANR	5139008	Identifier	endian		5137220	0					
ANR	5139009	Argument	& addr		5137220	3					
ANR	5139010	UnaryOperationExpression	& addr		5137220	0					
ANR	5139011	UnaryOperator	&		5137220	0					
ANR	5139012	Identifier	addr		5137220	1					
ANR	5139013	Argument	& addr64		5137220	4					
ANR	5139014	UnaryOperationExpression	& addr64		5137220	0					
ANR	5139015	UnaryOperator	&		5137220	0					
ANR	5139016	Identifier	addr64		5137220	1					
ANR	5139017	ElseStatement	else		5137220	0					
ANR	5139018	CompoundStatement		296:12:7143:7143	5137220	0					
ANR	5139019	ExpressionStatement	"eprintf ( ""Likely a heap buffer overflow.\\n"" )"	2174:6:52099:52143	5137220	0	True				
ANR	5139020	CallExpression	"eprintf ( ""Likely a heap buffer overflow.\\n"" )"		5137220	0					
ANR	5139021	Callee	eprintf		5137220	0					
ANR	5139022	Identifier	eprintf		5137220	0					
ANR	5139023	ArgumentList	"""Likely a heap buffer overflow.\\n"""		5137220	1					
ANR	5139024	Argument	"""Likely a heap buffer overflow.\\n"""		5137220	0					
ANR	5139025	PrimaryExpression	"""Likely a heap buffer overflow.\\n"""		5137220	0					
ANR	5139026	GotoStatement	goto beach ;	2175:6:52151:52161	5137220	1	True				
ANR	5139027	Identifier	beach		5137220	0					
ANR	5139028	ElseStatement	else		5137220	0					
ANR	5139029	CompoundStatement		300:11:7233:7233	5137220	0					
ANR	5139030	Statement	eprintf	2178:5:52188:52194	5137220	0	True				
ANR	5139031	Statement	(	2178:13:52196:52196	5137220	1	True				
ANR	5139032	Statement	"""(cannot read at 0x%08"""	2178:14:52197:52219	5137220	2	True				
ANR	5139033	Statement	PFMT64x	2178:37:52220:52226	5137220	3	True				
ANR	5139034	Statement	""", block: %s, blocksize: 0x%x)\\n"""	2178:44:52227:52259	5137220	4	True				
ANR	5139035	Statement	","	2178:77:52260:52260	5137220	5	True				
ANR	5139036	Statement	addr	2179:7:52269:52272	5137220	6	True				
ANR	5139037	Statement	","	2179:11:52273:52273	5137220	7	True				
ANR	5139038	Statement	b	2179:13:52275:52275	5137220	8	True				
ANR	5139039	Statement	","	2179:14:52276:52276	5137220	9	True				
ANR	5139040	Statement	len	2179:16:52278:52280	5137220	10	True				
ANR	5139041	Statement	)	2179:19:52281:52281	5137220	11	True				
ANR	5139042	ExpressionStatement		2179:20:52282:52282	5137220	12	True				
ANR	5139043	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	2180:5:52289:52308	5137220	13	True				
ANR	5139044	CallExpression	"p -> cb_printf ( ""\\n"" )"		5137220	0					
ANR	5139045	Callee	p -> cb_printf		5137220	0					
ANR	5139046	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139047	Identifier	p		5137220	0					
ANR	5139048	Identifier	cb_printf		5137220	1					
ANR	5139049	ArgumentList	"""\\n"""		5137220	1					
ANR	5139050	Argument	"""\\n"""		5137220	0					
ANR	5139051	PrimaryExpression	"""\\n"""		5137220	0					
ANR	5139052	GotoStatement	goto beach ;	2181:5:52315:52325	5137220	14	True				
ANR	5139053	Identifier	beach		5137220	0					
ANR	5139054	BreakStatement	break ;	2184:4:52343:52348	5137220	2	True				
ANR	5139055	Label	case PTRBACK :	2185:3:52353:52365	5137220	3	True				
ANR	5139056	Identifier	PTRBACK		5137220	0					
ANR	5139057	ExpressionStatement	i = nexti	2187:4:52411:52420	5137220	4	True				
ANR	5139058	AssignmentExpression	i = nexti		5137220	0		=			
ANR	5139059	Identifier	i		5137220	0					
ANR	5139060	Identifier	nexti		5137220	1					
ANR	5139061	ExpressionStatement	"memcpy ( buf , b , len )"	2188:4:52426:52446	5137220	5	True				
ANR	5139062	CallExpression	"memcpy ( buf , b , len )"		5137220	0					
ANR	5139063	Callee	memcpy		5137220	0					
ANR	5139064	Identifier	memcpy		5137220	0					
ANR	5139065	ArgumentList	buf		5137220	1					
ANR	5139066	Argument	buf		5137220	0					
ANR	5139067	Identifier	buf		5137220	0					
ANR	5139068	Argument	b		5137220	1					
ANR	5139069	Identifier	b		5137220	0					
ANR	5139070	Argument	len		5137220	2					
ANR	5139071	Identifier	len		5137220	0					
ANR	5139072	ExpressionStatement	isptr = NOPTR	2189:4:52452:52465	5137220	6	True				
ANR	5139073	AssignmentExpression	isptr = NOPTR		5137220	0		=			
ANR	5139074	Identifier	isptr		5137220	0					
ANR	5139075	Identifier	NOPTR		5137220	1					
ANR	5139076	ExpressionStatement	arg --	2190:4:52471:52476	5137220	7	True				
ANR	5139077	PostIncDecOperationExpression	arg --		5137220	0					
ANR	5139078	Identifier	arg		5137220	0					
ANR	5139079	IncDec	--		5137220	1					
ANR	5139080	ContinueStatement	continue ;	2191:4:52482:52490	5137220	8	True				
ANR	5139081	IfStatement	if ( tmp == 0 && last != '*' )		5137220	21					
ANR	5139082	Condition	tmp == 0 && last != '*'	2193:7:52504:52526	5137220	0	True				
ANR	5139083	AndExpression	tmp == 0 && last != '*'		5137220	0		&&			
ANR	5139084	EqualityExpression	tmp == 0		5137220	0		==			
ANR	5139085	Identifier	tmp		5137220	0					
ANR	5139086	PrimaryExpression	0		5137220	1					
ANR	5139087	EqualityExpression	last != '*'		5137220	1		!=			
ANR	5139088	Identifier	last		5137220	0					
ANR	5139089	PrimaryExpression	'*'		5137220	1					
ANR	5139090	CompoundStatement		316:32:7581:7581	5137220	1					
ANR	5139091	BreakStatement	break ;	2194:4:52535:52540	5137220	0	True				
ANR	5139092	SwitchStatement	switch ( tmp )		5137220	22					
ANR	5139093	Condition	tmp	2198:11:52579:52581	5137220	0	True				
ANR	5139094	Identifier	tmp		5137220	0					
ANR	5139095	CompoundStatement		321:16:7636:7636	5137220	1					
ANR	5139096	Label	case '*' :	2199:3:52589:52597	5137220	0	True				
ANR	5139097	ExpressionStatement	isptr = PTRSEEK	2200:4:52629:52644	5137220	1	True				
ANR	5139098	AssignmentExpression	isptr = PTRSEEK		5137220	0		=			
ANR	5139099	Identifier	isptr		5137220	0					
ANR	5139100	Identifier	PTRSEEK		5137220	1					
ANR	5139101	ExpressionStatement	arg ++	2201:4:52650:52655	5137220	2	True				
ANR	5139102	PostIncDecOperationExpression	arg ++		5137220	0					
ANR	5139103	Identifier	arg		5137220	0					
ANR	5139104	IncDec	++		5137220	1					
ANR	5139105	ExpressionStatement	tmp = * arg	2202:4:52661:52671	5137220	3	True				
ANR	5139106	AssignmentExpression	tmp = * arg		5137220	0		=			
ANR	5139107	Identifier	tmp		5137220	0					
ANR	5139108	UnaryOperationExpression	* arg		5137220	1					
ANR	5139109	UnaryOperator	*		5137220	0					
ANR	5139110	Identifier	arg		5137220	1					
ANR	5139111	GotoStatement	goto feed_me_again ;	2203:4:52685:52703	5137220	4	True				
ANR	5139112	Identifier	feed_me_again		5137220	0					
ANR	5139113	Label	case '+' :	2204:3:52708:52716	5137220	5	True				
ANR	5139114	ExpressionStatement	viewflags = ! viewflags	2205:4:52743:52765	5137220	6	True				
ANR	5139115	AssignmentExpression	viewflags = ! viewflags		5137220	0		=			
ANR	5139116	Identifier	viewflags		5137220	0					
ANR	5139117	UnaryOperationExpression	! viewflags		5137220	1					
ANR	5139118	UnaryOperator	!		5137220	0					
ANR	5139119	Identifier	viewflags		5137220	1					
ANR	5139120	ContinueStatement	continue ;	2206:4:52771:52779	5137220	7	True				
ANR	5139121	Label	case 'e' :	2207:3:52784:52792	5137220	8	True				
ANR	5139122	ExpressionStatement	endian ^= 1	2208:4:52817:52828	5137220	9	True				
ANR	5139123	AssignmentExpression	endian ^= 1		5137220	0		^=			
ANR	5139124	Identifier	endian		5137220	0					
ANR	5139125	PrimaryExpression	1		5137220	1					
ANR	5139126	ContinueStatement	continue ;	2209:4:52834:52842	5137220	10	True				
ANR	5139127	Label	case ':' :	2210:3:52847:52855	5137220	11	True				
ANR	5139128	IfStatement	if ( size == - 1 )		5137220	12					
ANR	5139129	Condition	size == - 1	2211:8:52881:52890	5137220	0	True				
ANR	5139130	EqualityExpression	size == - 1		5137220	0		==			
ANR	5139131	Identifier	size		5137220	0					
ANR	5139132	UnaryOperationExpression	- 1		5137220	1					
ANR	5139133	UnaryOperator	-		5137220	0					
ANR	5139134	PrimaryExpression	1		5137220	1					
ANR	5139135	CompoundStatement		334:20:7945:7945	5137220	1					
ANR	5139136	ExpressionStatement	i += 4	2212:5:52900:52906	5137220	0	True				
ANR	5139137	AssignmentExpression	i += 4		5137220	0		+=			
ANR	5139138	Identifier	i		5137220	0					
ANR	5139139	PrimaryExpression	4		5137220	1					
ANR	5139140	ElseStatement	else		5137220	0					
ANR	5139141	CompoundStatement		336:11:7971:7971	5137220	0					
ANR	5139142	WhileStatement	while ( size -- )		5137220	0					
ANR	5139143	Condition	size --	2214:12:52933:52938	5137220	0	True				
ANR	5139144	PostIncDecOperationExpression	size --		5137220	0					
ANR	5139145	Identifier	size		5137220	0					
ANR	5139146	IncDec	--		5137220	1					
ANR	5139147	CompoundStatement		337:20:7993:7993	5137220	1					
ANR	5139148	ExpressionStatement	i += 4	2215:6:52949:52955	5137220	0	True				
ANR	5139149	AssignmentExpression	i += 4		5137220	0		+=			
ANR	5139150	Identifier	i		5137220	0					
ANR	5139151	PrimaryExpression	4		5137220	1					
ANR	5139152	ContinueStatement	continue ;	2218:4:52974:52982	5137220	13	True				
ANR	5139153	Label	case '.' :	2219:3:52987:52995	5137220	14	True				
ANR	5139154	ExpressionStatement	i += ( size == - 1 ) ? 1 : size	2220:4:53016:53042	5137220	15	True				
ANR	5139155	AssignmentExpression	i += ( size == - 1 ) ? 1 : size		5137220	0		+=			
ANR	5139156	Identifier	i		5137220	0					
ANR	5139157	ConditionalExpression	( size == - 1 ) ? 1 : size		5137220	1					
ANR	5139158	Condition	size == - 1		5137220	0					
ANR	5139159	EqualityExpression	size == - 1		5137220	0		==			
ANR	5139160	Identifier	size		5137220	0					
ANR	5139161	UnaryOperationExpression	- 1		5137220	1					
ANR	5139162	UnaryOperator	-		5137220	0					
ANR	5139163	PrimaryExpression	1		5137220	1					
ANR	5139164	PrimaryExpression	1		5137220	1					
ANR	5139165	Identifier	size		5137220	2					
ANR	5139166	ContinueStatement	continue ;	2221:4:53048:53056	5137220	16	True				
ANR	5139167	Label	case 'p' :	2222:3:53061:53069	5137220	17	True				
ANR	5139168	IfStatement	if ( * ( arg + 1 ) == '2' )		5137220	18					
ANR	5139169	Condition	* ( arg + 1 ) == '2'	2223:8:53100:53116	5137220	0	True				
ANR	5139170	EqualityExpression	* ( arg + 1 ) == '2'		5137220	0		==			
ANR	5139171	UnaryOperationExpression	* ( arg + 1 )		5137220	0					
ANR	5139172	UnaryOperator	*		5137220	0					
ANR	5139173	AdditiveExpression	arg + 1		5137220	1		+			
ANR	5139174	Identifier	arg		5137220	0					
ANR	5139175	PrimaryExpression	1		5137220	1					
ANR	5139176	PrimaryExpression	'2'		5137220	1					
ANR	5139177	CompoundStatement		346:27:8171:8171	5137220	1					
ANR	5139178	ExpressionStatement	tmp = 'w'	2224:5:53126:53135	5137220	0	True				
ANR	5139179	AssignmentExpression	tmp = 'w'		5137220	0		=			
ANR	5139180	Identifier	tmp		5137220	0					
ANR	5139181	PrimaryExpression	'w'		5137220	1					
ANR	5139182	ExpressionStatement	arg ++	2225:5:53142:53147	5137220	1	True				
ANR	5139183	PostIncDecOperationExpression	arg ++		5137220	0					
ANR	5139184	Identifier	arg		5137220	0					
ANR	5139185	IncDec	++		5137220	1					
ANR	5139186	ElseStatement	else		5137220	0					
ANR	5139187	IfStatement	if ( * ( arg + 1 ) == '4' )		5137220	0					
ANR	5139188	Condition	* ( arg + 1 ) == '4'	2226:15:53164:53180	5137220	0	True				
ANR	5139189	EqualityExpression	* ( arg + 1 ) == '4'		5137220	0		==			
ANR	5139190	UnaryOperationExpression	* ( arg + 1 )		5137220	0					
ANR	5139191	UnaryOperator	*		5137220	0					
ANR	5139192	AdditiveExpression	arg + 1		5137220	1		+			
ANR	5139193	Identifier	arg		5137220	0					
ANR	5139194	PrimaryExpression	1		5137220	1					
ANR	5139195	PrimaryExpression	'4'		5137220	1					
ANR	5139196	CompoundStatement		349:34:8235:8235	5137220	1					
ANR	5139197	ExpressionStatement	tmp = 'x'	2227:5:53190:53199	5137220	0	True				
ANR	5139198	AssignmentExpression	tmp = 'x'		5137220	0		=			
ANR	5139199	Identifier	tmp		5137220	0					
ANR	5139200	PrimaryExpression	'x'		5137220	1					
ANR	5139201	ExpressionStatement	arg ++	2228:5:53206:53211	5137220	1	True				
ANR	5139202	PostIncDecOperationExpression	arg ++		5137220	0					
ANR	5139203	Identifier	arg		5137220	0					
ANR	5139204	IncDec	++		5137220	1					
ANR	5139205	ElseStatement	else		5137220	0					
ANR	5139206	IfStatement	if ( * ( arg + 1 ) == '8' )		5137220	0					
ANR	5139207	Condition	* ( arg + 1 ) == '8'	2229:15:53228:53244	5137220	0	True				
ANR	5139208	EqualityExpression	* ( arg + 1 ) == '8'		5137220	0		==			
ANR	5139209	UnaryOperationExpression	* ( arg + 1 )		5137220	0					
ANR	5139210	UnaryOperator	*		5137220	0					
ANR	5139211	AdditiveExpression	arg + 1		5137220	1		+			
ANR	5139212	Identifier	arg		5137220	0					
ANR	5139213	PrimaryExpression	1		5137220	1					
ANR	5139214	PrimaryExpression	'8'		5137220	1					
ANR	5139215	CompoundStatement		352:34:8299:8299	5137220	1					
ANR	5139216	ExpressionStatement	tmp = 'q'	2230:5:53254:53263	5137220	0	True				
ANR	5139217	AssignmentExpression	tmp = 'q'		5137220	0		=			
ANR	5139218	Identifier	tmp		5137220	0					
ANR	5139219	PrimaryExpression	'q'		5137220	1					
ANR	5139220	ExpressionStatement	arg ++	2231:5:53270:53275	5137220	1	True				
ANR	5139221	PostIncDecOperationExpression	arg ++		5137220	0					
ANR	5139222	Identifier	arg		5137220	0					
ANR	5139223	IncDec	++		5137220	1					
ANR	5139224	ElseStatement	else		5137220	0					
ANR	5139225	CompoundStatement		355:11:8340:8340	5137220	0					
ANR	5139226	SwitchStatement	switch ( p -> bits )		5137220	0					
ANR	5139227	Condition	p -> bits	2233:13:53354:53360	5137220	0	True				
ANR	5139228	PtrMemberAccess	p -> bits		5137220	0					
ANR	5139229	Identifier	p		5137220	0					
ANR	5139230	Identifier	bits		5137220	1					
ANR	5139231	CompoundStatement		356:22:8415:8415	5137220	1					
ANR	5139232	Label	case 16 :	2234:5:53370:53377	5137220	0	True				
ANR	5139233	ExpressionStatement	tmp = 'w'	2234:14:53379:53388	5137220	1	True				
ANR	5139234	AssignmentExpression	tmp = 'w'		5137220	0		=			
ANR	5139235	Identifier	tmp		5137220	0					
ANR	5139236	PrimaryExpression	'w'		5137220	1					
ANR	5139237	BreakStatement	break ;	2234:25:53390:53395	5137220	2	True				
ANR	5139238	Label	case 32 :	2235:5:53402:53409	5137220	3	True				
ANR	5139239	ExpressionStatement	tmp = 'x'	2235:14:53411:53420	5137220	4	True				
ANR	5139240	AssignmentExpression	tmp = 'x'		5137220	0		=			
ANR	5139241	Identifier	tmp		5137220	0					
ANR	5139242	PrimaryExpression	'x'		5137220	1					
ANR	5139243	BreakStatement	break ;	2235:25:53422:53427	5137220	5	True				
ANR	5139244	Label	default :	2236:5:53434:53441	5137220	6	True				
ANR	5139245	Identifier	default		5137220	0					
ANR	5139246	ExpressionStatement	tmp = 'q'	2236:14:53443:53452	5137220	7	True				
ANR	5139247	AssignmentExpression	tmp = 'q'		5137220	0		=			
ANR	5139248	Identifier	tmp		5137220	0					
ANR	5139249	PrimaryExpression	'q'		5137220	1					
ANR	5139250	BreakStatement	break ;	2236:25:53454:53459	5137220	8	True				
ANR	5139251	BreakStatement	break ;	2239:4:53478:53483	5137220	19	True				
ANR	5139252	IfStatement	if ( mode & R_PRINT_SEEFLAGS && isptr != NULLPTR )		5137220	23					
ANR	5139253	Condition	mode & R_PRINT_SEEFLAGS && isptr != NULLPTR	2243:7:53513:53555	5137220	0	True				
ANR	5139254	AndExpression	mode & R_PRINT_SEEFLAGS && isptr != NULLPTR		5137220	0		&&			
ANR	5139255	BitAndExpression	mode & R_PRINT_SEEFLAGS		5137220	0		&			
ANR	5139256	Identifier	mode		5137220	0					
ANR	5139257	Identifier	R_PRINT_SEEFLAGS		5137220	1					
ANR	5139258	EqualityExpression	isptr != NULLPTR		5137220	1		!=			
ANR	5139259	Identifier	isptr		5137220	0					
ANR	5139260	Identifier	NULLPTR		5137220	1					
ANR	5139261	CompoundStatement		367:4:8616:8636	5137220	1					
ANR	5139262	IdentifierDeclStatement	char * newname = NULL ;	2244:4:53564:53584	5137220	0	True				
ANR	5139263	IdentifierDecl	* newname = NULL		5137220	0					
ANR	5139264	IdentifierDeclType	char *		5137220	0					
ANR	5139265	Identifier	newname		5137220	1					
ANR	5139266	AssignmentExpression	* newname = NULL		5137220	2		=			
ANR	5139267	Identifier	NULL		5137220	0					
ANR	5139268	Identifier	NULL		5137220	1					
ANR	5139269	IfStatement	if ( ! fieldname )		5137220	1					
ANR	5139270	Condition	! fieldname	2245:8:53594:53603	5137220	0	True				
ANR	5139271	UnaryOperationExpression	! fieldname		5137220	0					
ANR	5139272	UnaryOperator	!		5137220	0					
ANR	5139273	Identifier	fieldname		5137220	1					
ANR	5139274	CompoundStatement		368:20:8658:8658	5137220	1					
ANR	5139275	Statement	newname	2246:5:53613:53619	5137220	0	True				
ANR	5139276	Statement	=	2246:13:53621:53621	5137220	1	True				
ANR	5139277	Statement	fieldname	2246:15:53623:53631	5137220	2	True				
ANR	5139278	Statement	=	2246:25:53633:53633	5137220	3	True				
ANR	5139279	Statement	r_str_newf	2246:27:53635:53644	5137220	4	True				
ANR	5139280	Statement	(	2246:38:53646:53646	5137220	5	True				
ANR	5139281	Statement	"""pf.%"""	2246:39:53647:53652	5137220	6	True				
ANR	5139282	Statement	PFMT64u	2246:45:53653:53659	5137220	7	True				
ANR	5139283	Statement	","	2246:52:53660:53660	5137220	8	True				
ANR	5139284	Statement	seeki	2246:54:53662:53666	5137220	9	True				
ANR	5139285	Statement	)	2246:59:53667:53667	5137220	10	True				
ANR	5139286	ExpressionStatement		2246:60:53668:53668	5137220	11	True				
ANR	5139287	IfStatement	if ( mode & R_PRINT_UNIONMODE )		5137220	2					
ANR	5139288	Condition	mode & R_PRINT_UNIONMODE	2248:8:53684:53707	5137220	0	True				
ANR	5139289	BitAndExpression	mode & R_PRINT_UNIONMODE		5137220	0		&			
ANR	5139290	Identifier	mode		5137220	0					
ANR	5139291	Identifier	R_PRINT_UNIONMODE		5137220	1					
ANR	5139292	CompoundStatement		371:34:8762:8762	5137220	1					
ANR	5139293	Statement	p	2249:5:53717:53717	5137220	0	True				
ANR	5139294	Statement	->	2249:6:53718:53719	5137220	1	True				
ANR	5139295	Statement	cb_printf	2249:8:53720:53728	5137220	2	True				
ANR	5139296	Statement	(	2249:18:53730:53730	5137220	3	True				
ANR	5139297	Statement	"""f %s=0x%08"""	2249:19:53731:53742	5137220	4	True				
ANR	5139298	Statement	PFMT64x	2249:31:53743:53749	5137220	5	True				
ANR	5139299	Statement	"""\\n"""	2249:38:53750:53753	5137220	6	True				
ANR	5139300	Statement	","	2249:42:53754:53754	5137220	7	True				
ANR	5139301	Statement	formatname	2249:44:53756:53765	5137220	8	True				
ANR	5139302	Statement	","	2249:54:53766:53766	5137220	9	True				
ANR	5139303	Statement	seeki	2249:56:53768:53772	5137220	10	True				
ANR	5139304	Statement	)	2249:61:53773:53773	5137220	11	True				
ANR	5139305	ExpressionStatement		2249:62:53774:53774	5137220	12	True				
ANR	5139306	GotoStatement	goto beach ;	2250:5:53781:53791	5137220	13	True				
ANR	5139307	Identifier	beach		5137220	0					
ANR	5139308	ElseStatement	else		5137220	0					
ANR	5139309	IfStatement	if ( tmp == '?' )		5137220	0					
ANR	5139310	Condition	tmp == '?'	2251:15:53808:53817	5137220	0	True				
ANR	5139311	EqualityExpression	tmp == '?'		5137220	0		==			
ANR	5139312	Identifier	tmp		5137220	0					
ANR	5139313	PrimaryExpression	'?'		5137220	1					
ANR	5139314	CompoundStatement		374:27:8872:8872	5137220	1					
ANR	5139315	ExpressionStatement	"p -> cb_printf ( ""f %s.%s_"" , fmtname , fieldname )"	2252:5:53827:53872	5137220	0	True				
ANR	5139316	CallExpression	"p -> cb_printf ( ""f %s.%s_"" , fmtname , fieldname )"		5137220	0					
ANR	5139317	Callee	p -> cb_printf		5137220	0					
ANR	5139318	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139319	Identifier	p		5137220	0					
ANR	5139320	Identifier	cb_printf		5137220	1					
ANR	5139321	ArgumentList	"""f %s.%s_"""		5137220	1					
ANR	5139322	Argument	"""f %s.%s_"""		5137220	0					
ANR	5139323	PrimaryExpression	"""f %s.%s_"""		5137220	0					
ANR	5139324	Argument	fmtname		5137220	1					
ANR	5139325	Identifier	fmtname		5137220	0					
ANR	5139326	Argument	fieldname		5137220	2					
ANR	5139327	Identifier	fieldname		5137220	0					
ANR	5139328	ElseStatement	else		5137220	0					
ANR	5139329	IfStatement	if ( tmp == 'E' )		5137220	0					
ANR	5139330	Condition	tmp == 'E'	2253:15:53889:53898	5137220	0	True				
ANR	5139331	EqualityExpression	tmp == 'E'		5137220	0		==			
ANR	5139332	Identifier	tmp		5137220	0					
ANR	5139333	PrimaryExpression	'E'		5137220	1					
ANR	5139334	CompoundStatement		376:27:8953:8953	5137220	1					
ANR	5139335	Statement	p	2254:5:53908:53908	5137220	0	True				
ANR	5139336	Statement	->	2254:6:53909:53910	5137220	1	True				
ANR	5139337	Statement	cb_printf	2254:8:53911:53919	5137220	2	True				
ANR	5139338	Statement	(	2254:18:53921:53921	5137220	3	True				
ANR	5139339	Statement	"""f %s=0x%08"""	2254:19:53922:53933	5137220	4	True				
ANR	5139340	Statement	PFMT64x	2254:31:53934:53940	5137220	5	True				
ANR	5139341	Statement	"""\\n"""	2254:38:53941:53944	5137220	6	True				
ANR	5139342	Statement	","	2254:42:53945:53945	5137220	7	True				
ANR	5139343	Statement	fieldname	2254:44:53947:53955	5137220	8	True				
ANR	5139344	Statement	","	2254:53:53956:53956	5137220	9	True				
ANR	5139345	Statement	seeki	2254:55:53958:53962	5137220	10	True				
ANR	5139346	Statement	)	2254:60:53963:53963	5137220	11	True				
ANR	5139347	ExpressionStatement		2254:61:53964:53964	5137220	12	True				
ANR	5139348	ElseStatement	else		5137220	0					
ANR	5139349	IfStatement	if ( slide / STRUCTFLAG > 0 && idx == 1 )		5137220	0					
ANR	5139350	Condition	slide / STRUCTFLAG > 0 && idx == 1	2255:15:53981:54008	5137220	0	True				
ANR	5139351	AndExpression	slide / STRUCTFLAG > 0 && idx == 1		5137220	0		&&			
ANR	5139352	RelationalExpression	slide / STRUCTFLAG > 0		5137220	0		>			
ANR	5139353	MultiplicativeExpression	slide / STRUCTFLAG		5137220	0		/			
ANR	5139354	Identifier	slide		5137220	0					
ANR	5139355	Identifier	STRUCTFLAG		5137220	1					
ANR	5139356	PrimaryExpression	0		5137220	1					
ANR	5139357	EqualityExpression	idx == 1		5137220	1		==			
ANR	5139358	Identifier	idx		5137220	0					
ANR	5139359	PrimaryExpression	1		5137220	1					
ANR	5139360	CompoundStatement		378:45:9063:9063	5137220	1					
ANR	5139361	Statement	p	2256:5:54018:54018	5137220	0	True				
ANR	5139362	Statement	->	2256:6:54019:54020	5137220	1	True				
ANR	5139363	Statement	cb_printf	2256:8:54021:54029	5137220	2	True				
ANR	5139364	Statement	(	2256:18:54031:54031	5137220	3	True				
ANR	5139365	Statement	"""%s=0x%08"""	2256:19:54032:54041	5137220	4	True				
ANR	5139366	Statement	PFMT64x	2256:29:54042:54048	5137220	5	True				
ANR	5139367	Statement	"""\\n"""	2256:36:54049:54052	5137220	6	True				
ANR	5139368	Statement	","	2256:40:54053:54053	5137220	7	True				
ANR	5139369	Statement	fieldname	2256:42:54055:54063	5137220	8	True				
ANR	5139370	Statement	","	2256:51:54064:54064	5137220	9	True				
ANR	5139371	Statement	seeki	2256:53:54066:54070	5137220	10	True				
ANR	5139372	Statement	)	2256:58:54071:54071	5137220	11	True				
ANR	5139373	ExpressionStatement		2256:59:54072:54072	5137220	12	True				
ANR	5139374	ElseStatement	else		5137220	0					
ANR	5139375	CompoundStatement		380:11:9137:9137	5137220	0					
ANR	5139376	Statement	p	2258:5:54092:54092	5137220	0	True				
ANR	5139377	Statement	->	2258:6:54093:54094	5137220	1	True				
ANR	5139378	Statement	cb_printf	2258:8:54095:54103	5137220	2	True				
ANR	5139379	Statement	(	2258:18:54105:54105	5137220	3	True				
ANR	5139380	Statement	"""f %s=0x%08"""	2258:19:54106:54117	5137220	4	True				
ANR	5139381	Statement	PFMT64x	2258:32:54119:54125	5137220	5	True				
ANR	5139382	Statement	"""\\n"""	2258:40:54127:54130	5137220	6	True				
ANR	5139383	Statement	","	2258:44:54131:54131	5137220	7	True				
ANR	5139384	Statement	fieldname	2258:46:54133:54141	5137220	8	True				
ANR	5139385	Statement	","	2258:55:54142:54142	5137220	9	True				
ANR	5139386	Statement	seeki	2258:57:54144:54148	5137220	10	True				
ANR	5139387	Statement	)	2258:62:54149:54149	5137220	11	True				
ANR	5139388	ExpressionStatement		2258:63:54150:54150	5137220	12	True				
ANR	5139389	IfStatement	if ( newname )		5137220	3					
ANR	5139390	Condition	newname	2260:8:54166:54172	5137220	0	True				
ANR	5139391	Identifier	newname		5137220	0					
ANR	5139392	CompoundStatement		383:17:9227:9227	5137220	1					
ANR	5139393	ExpressionStatement	R_FREE ( newname )	2261:5:54182:54198	5137220	0	True				
ANR	5139394	CallExpression	R_FREE ( newname )		5137220	0					
ANR	5139395	Callee	R_FREE		5137220	0					
ANR	5139396	Identifier	R_FREE		5137220	0					
ANR	5139397	ArgumentList	newname		5137220	1					
ANR	5139398	Argument	newname		5137220	0					
ANR	5139399	Identifier	newname		5137220	0					
ANR	5139400	ExpressionStatement	fieldname = NULL	2262:5:54205:54221	5137220	1	True				
ANR	5139401	AssignmentExpression	fieldname = NULL		5137220	0		=			
ANR	5139402	Identifier	fieldname		5137220	0					
ANR	5139403	Identifier	NULL		5137220	1					
ANR	5139404	IfStatement	if ( mode & R_PRINT_DOT )		5137220	24					
ANR	5139405	Condition	mode & R_PRINT_DOT	2267:7:54255:54272	5137220	0	True				
ANR	5139406	BitAndExpression	mode & R_PRINT_DOT		5137220	0		&			
ANR	5139407	Identifier	mode		5137220	0					
ANR	5139408	Identifier	R_PRINT_DOT		5137220	1					
ANR	5139409	CompoundStatement		390:27:9327:9327	5137220	1					
ANR	5139410	IfStatement	if ( fieldname )		5137220	0					
ANR	5139411	Condition	fieldname	2268:8:54285:54293	5137220	0	True				
ANR	5139412	Identifier	fieldname		5137220	0					
ANR	5139413	CompoundStatement		391:19:9348:9348	5137220	1					
ANR	5139414	Statement	p	2269:5:54303:54303	5137220	0	True				
ANR	5139415	Statement	->	2269:6:54304:54305	5137220	1	True				
ANR	5139416	Statement	cb_printf	2269:8:54306:54314	5137220	2	True				
ANR	5139417	Statement	(	2269:18:54316:54316	5137220	3	True				
ANR	5139418	Statement	"""|{0x%"""	2269:19:54317:54323	5137220	4	True				
ANR	5139419	Statement	PFMT64x	2269:26:54324:54330	5137220	5	True				
ANR	5139420	Statement	"""|%c|%s|<%s>"""	2269:33:54331:54343	5137220	6	True				
ANR	5139421	Statement	","	2269:46:54344:54344	5137220	7	True				
ANR	5139422	Statement	seeki	2270:6:54352:54356	5137220	8	True				
ANR	5139423	Statement	","	2270:11:54357:54357	5137220	9	True				
ANR	5139424	Statement	tmp	2270:13:54359:54361	5137220	10	True				
ANR	5139425	Statement	","	2270:16:54362:54362	5137220	11	True				
ANR	5139426	Statement	fieldname	2270:18:54364:54372	5137220	12	True				
ANR	5139427	Statement	","	2270:27:54373:54373	5137220	13	True				
ANR	5139428	Statement	fieldname	2270:29:54375:54383	5137220	14	True				
ANR	5139429	Statement	)	2270:38:54384:54384	5137220	15	True				
ANR	5139430	ExpressionStatement		2270:39:54385:54385	5137220	16	True				
ANR	5139431	ElseStatement	else		5137220	0					
ANR	5139432	CompoundStatement		394:11:9450:9450	5137220	0					
ANR	5139433	Statement	p	2272:5:54405:54405	5137220	0	True				
ANR	5139434	Statement	->	2272:6:54406:54407	5137220	1	True				
ANR	5139435	Statement	cb_printf	2272:8:54408:54416	5137220	2	True				
ANR	5139436	Statement	(	2272:18:54418:54418	5137220	3	True				
ANR	5139437	Statement	"""|{0x%"""	2272:19:54419:54425	5137220	4	True				
ANR	5139438	Statement	PFMT64x	2272:26:54426:54432	5137220	5	True				
ANR	5139439	Statement	"""|%c|"""	2272:33:54433:54438	5137220	6	True				
ANR	5139440	Statement	","	2272:39:54439:54439	5137220	7	True				
ANR	5139441	Statement	seeki	2273:6:54447:54451	5137220	8	True				
ANR	5139442	Statement	","	2273:11:54452:54452	5137220	9	True				
ANR	5139443	Statement	tmp	2273:13:54454:54456	5137220	10	True				
ANR	5139444	Statement	)	2273:16:54457:54457	5137220	11	True				
ANR	5139445	ExpressionStatement		2273:17:54458:54458	5137220	12	True				
ANR	5139446	IfStatement	if ( MUSTSEEJSON && mode & R_PRINT_JSON )		5137220	25					
ANR	5139447	Condition	MUSTSEEJSON && mode & R_PRINT_JSON	2278:7:54493:54526	5137220	0	True				
ANR	5139448	AndExpression	MUSTSEEJSON && mode & R_PRINT_JSON		5137220	0		&&			
ANR	5139449	Identifier	MUSTSEEJSON		5137220	0					
ANR	5139450	BitAndExpression	mode & R_PRINT_JSON		5137220	1		&			
ANR	5139451	Identifier	mode		5137220	0					
ANR	5139452	Identifier	R_PRINT_JSON		5137220	1					
ANR	5139453	CompoundStatement		401:43:9581:9581	5137220	1					
ANR	5139454	IfStatement	if ( oldslide <= slide )		5137220	0					
ANR	5139455	Condition	oldslide <= slide	2279:8:54539:54555	5137220	0	True				
ANR	5139456	RelationalExpression	oldslide <= slide		5137220	0		<=			
ANR	5139457	Identifier	oldslide		5137220	0					
ANR	5139458	Identifier	slide		5137220	1					
ANR	5139459	CompoundStatement		402:27:9610:9610	5137220	1					
ANR	5139460	IfStatement	if ( first )		5137220	0					
ANR	5139461	Condition	first	2280:9:54569:54573	5137220	0	True				
ANR	5139462	Identifier	first		5137220	0					
ANR	5139463	CompoundStatement		403:16:9628:9628	5137220	1					
ANR	5139464	ExpressionStatement	first = 0	2281:6:54584:54593	5137220	0	True				
ANR	5139465	AssignmentExpression	first = 0		5137220	0		=			
ANR	5139466	Identifier	first		5137220	0					
ANR	5139467	PrimaryExpression	0		5137220	1					
ANR	5139468	ElseStatement	else		5137220	0					
ANR	5139469	CompoundStatement		405:12:9659:9659	5137220	0					
ANR	5139470	ExpressionStatement	"p -> cb_printf ( "","" )"	2283:6:54615:54633	5137220	0	True				
ANR	5139471	CallExpression	"p -> cb_printf ( "","" )"		5137220	0					
ANR	5139472	Callee	p -> cb_printf		5137220	0					
ANR	5139473	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139474	Identifier	p		5137220	0					
ANR	5139475	Identifier	cb_printf		5137220	1					
ANR	5139476	ArgumentList	""","""		5137220	1					
ANR	5139477	Argument	""","""		5137220	0					
ANR	5139478	PrimaryExpression	""","""		5137220	0					
ANR	5139479	ElseStatement	else		5137220	0					
ANR	5139480	IfStatement	if ( oldslide )		5137220	0					
ANR	5139481	Condition	oldslide	2285:15:54657:54664	5137220	0	True				
ANR	5139482	Identifier	oldslide		5137220	0					
ANR	5139483	CompoundStatement		408:25:9719:9719	5137220	1					
ANR	5139484	ExpressionStatement	"p -> cb_printf ( ""]},"" )"	2286:5:54674:54694	5137220	0	True				
ANR	5139485	CallExpression	"p -> cb_printf ( ""]},"" )"		5137220	0					
ANR	5139486	Callee	p -> cb_printf		5137220	0					
ANR	5139487	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139488	Identifier	p		5137220	0					
ANR	5139489	Identifier	cb_printf		5137220	1					
ANR	5139490	ArgumentList	"""]},"""		5137220	1					
ANR	5139491	Argument	"""]},"""		5137220	0					
ANR	5139492	PrimaryExpression	"""]},"""		5137220	0					
ANR	5139493	ExpressionStatement	oldslide -= NESTEDSTRUCT	2287:5:54701:54725	5137220	1	True				
ANR	5139494	AssignmentExpression	oldslide -= NESTEDSTRUCT		5137220	0		-=			
ANR	5139495	Identifier	oldslide		5137220	0					
ANR	5139496	Identifier	NESTEDSTRUCT		5137220	1					
ANR	5139497	IfStatement	if ( fieldname )		5137220	1					
ANR	5139498	Condition	fieldname	2289:8:54741:54749	5137220	0	True				
ANR	5139499	Identifier	fieldname		5137220	0					
ANR	5139500	CompoundStatement		412:19:9804:9804	5137220	1					
ANR	5139501	ExpressionStatement	"p -> cb_printf ( ""{\\""name\\"":\\""%s\\"",\\""type\\"":\\"""" , fieldname )"	2290:5:54759:54815	5137220	0	True				
ANR	5139502	CallExpression	"p -> cb_printf ( ""{\\""name\\"":\\""%s\\"",\\""type\\"":\\"""" , fieldname )"		5137220	0					
ANR	5139503	Callee	p -> cb_printf		5137220	0					
ANR	5139504	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139505	Identifier	p		5137220	0					
ANR	5139506	Identifier	cb_printf		5137220	1					
ANR	5139507	ArgumentList	"""{\\""name\\"":\\""%s\\"",\\""type\\"":\\"""""		5137220	1					
ANR	5139508	Argument	"""{\\""name\\"":\\""%s\\"",\\""type\\"":\\"""""		5137220	0					
ANR	5139509	PrimaryExpression	"""{\\""name\\"":\\""%s\\"",\\""type\\"":\\"""""		5137220	0					
ANR	5139510	Argument	fieldname		5137220	1					
ANR	5139511	Identifier	fieldname		5137220	0					
ANR	5139512	ElseStatement	else		5137220	0					
ANR	5139513	CompoundStatement		414:11:9880:9880	5137220	0					
ANR	5139514	ExpressionStatement	"p -> cb_printf ( ""{\\""type\\"":\\"""" )"	2292:5:54835:54864	5137220	0	True				
ANR	5139515	CallExpression	"p -> cb_printf ( ""{\\""type\\"":\\"""" )"		5137220	0					
ANR	5139516	Callee	p -> cb_printf		5137220	0					
ANR	5139517	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139518	Identifier	p		5137220	0					
ANR	5139519	Identifier	cb_printf		5137220	1					
ANR	5139520	ArgumentList	"""{\\""type\\"":\\"""""		5137220	1					
ANR	5139521	Argument	"""{\\""type\\"":\\"""""		5137220	0					
ANR	5139522	PrimaryExpression	"""{\\""type\\"":\\"""""		5137220	0					
ANR	5139523	IfStatement	if ( ISSTRUCT )		5137220	2					
ANR	5139524	Condition	ISSTRUCT	2294:8:54880:54887	5137220	0	True				
ANR	5139525	Identifier	ISSTRUCT		5137220	0					
ANR	5139526	CompoundStatement		417:18:9942:9942	5137220	1					
ANR	5139527	ExpressionStatement	"p -> cb_printf ( ""%s"" , fmtname )"	2295:5:54897:54925	5137220	0	True				
ANR	5139528	CallExpression	"p -> cb_printf ( ""%s"" , fmtname )"		5137220	0					
ANR	5139529	Callee	p -> cb_printf		5137220	0					
ANR	5139530	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139531	Identifier	p		5137220	0					
ANR	5139532	Identifier	cb_printf		5137220	1					
ANR	5139533	ArgumentList	"""%s"""		5137220	1					
ANR	5139534	Argument	"""%s"""		5137220	0					
ANR	5139535	PrimaryExpression	"""%s"""		5137220	0					
ANR	5139536	Argument	fmtname		5137220	1					
ANR	5139537	Identifier	fmtname		5137220	0					
ANR	5139538	ElseStatement	else		5137220	0					
ANR	5139539	CompoundStatement		419:11:9990:9990	5137220	0					
ANR	5139540	IfStatement	if ( tmp == 'n' || tmp == 'N' )		5137220	0					
ANR	5139541	Condition	tmp == 'n' || tmp == 'N'	2297:9:54949:54972	5137220	0	True				
ANR	5139542	OrExpression	tmp == 'n' || tmp == 'N'		5137220	0		||			
ANR	5139543	EqualityExpression	tmp == 'n'		5137220	0		==			
ANR	5139544	Identifier	tmp		5137220	0					
ANR	5139545	PrimaryExpression	'n'		5137220	1					
ANR	5139546	EqualityExpression	tmp == 'N'		5137220	1		==			
ANR	5139547	Identifier	tmp		5137220	0					
ANR	5139548	PrimaryExpression	'N'		5137220	1					
ANR	5139549	CompoundStatement		420:35:10027:10027	5137220	1					
ANR	5139550	ExpressionStatement	"p -> cb_printf ( ""%c%c"" , tmp , * ( arg + 1 ) )"	2298:6:54983:55019	5137220	0	True				
ANR	5139551	CallExpression	"p -> cb_printf ( ""%c%c"" , tmp , * ( arg + 1 ) )"		5137220	0					
ANR	5139552	Callee	p -> cb_printf		5137220	0					
ANR	5139553	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139554	Identifier	p		5137220	0					
ANR	5139555	Identifier	cb_printf		5137220	1					
ANR	5139556	ArgumentList	"""%c%c"""		5137220	1					
ANR	5139557	Argument	"""%c%c"""		5137220	0					
ANR	5139558	PrimaryExpression	"""%c%c"""		5137220	0					
ANR	5139559	Argument	tmp		5137220	1					
ANR	5139560	Identifier	tmp		5137220	0					
ANR	5139561	Argument	* ( arg + 1 )		5137220	2					
ANR	5139562	UnaryOperationExpression	* ( arg + 1 )		5137220	0					
ANR	5139563	UnaryOperator	*		5137220	0					
ANR	5139564	AdditiveExpression	arg + 1		5137220	1		+			
ANR	5139565	Identifier	arg		5137220	0					
ANR	5139566	PrimaryExpression	1		5137220	1					
ANR	5139567	ElseStatement	else		5137220	0					
ANR	5139568	CompoundStatement		422:12:10085:10085	5137220	0					
ANR	5139569	ExpressionStatement	"p -> cb_printf ( ""%c"" , tmp )"	2300:6:55041:55065	5137220	0	True				
ANR	5139570	CallExpression	"p -> cb_printf ( ""%c"" , tmp )"		5137220	0					
ANR	5139571	Callee	p -> cb_printf		5137220	0					
ANR	5139572	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139573	Identifier	p		5137220	0					
ANR	5139574	Identifier	cb_printf		5137220	1					
ANR	5139575	ArgumentList	"""%c"""		5137220	1					
ANR	5139576	Argument	"""%c"""		5137220	0					
ANR	5139577	PrimaryExpression	"""%c"""		5137220	0					
ANR	5139578	Argument	tmp		5137220	1					
ANR	5139579	Identifier	tmp		5137220	0					
ANR	5139580	IfStatement	if ( isptr )		5137220	3					
ANR	5139581	Condition	isptr	2303:8:55088:55092	5137220	0	True				
ANR	5139582	Identifier	isptr		5137220	0					
ANR	5139583	CompoundStatement		426:15:10147:10147	5137220	1					
ANR	5139584	ExpressionStatement	"p -> cb_printf ( ""*"" )"	2304:5:55102:55120	5137220	0	True				
ANR	5139585	CallExpression	"p -> cb_printf ( ""*"" )"		5137220	0					
ANR	5139586	Callee	p -> cb_printf		5137220	0					
ANR	5139587	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139588	Identifier	p		5137220	0					
ANR	5139589	Identifier	cb_printf		5137220	1					
ANR	5139590	ArgumentList	"""*"""		5137220	1					
ANR	5139591	Argument	"""*"""		5137220	0					
ANR	5139592	PrimaryExpression	"""*"""		5137220	0					
ANR	5139593	ExpressionStatement	"p -> cb_printf ( ""\\"",\\""offset\\"":%d,\\""value\\"":"" , isptr ? ( seek + nexti - ( p -> bits / 8 ) ) : seek + i )"	2306:4:55132:55231	5137220	4	True				
ANR	5139594	CallExpression	"p -> cb_printf ( ""\\"",\\""offset\\"":%d,\\""value\\"":"" , isptr ? ( seek + nexti - ( p -> bits / 8 ) ) : seek + i )"		5137220	0					
ANR	5139595	Callee	p -> cb_printf		5137220	0					
ANR	5139596	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139597	Identifier	p		5137220	0					
ANR	5139598	Identifier	cb_printf		5137220	1					
ANR	5139599	ArgumentList	"""\\"",\\""offset\\"":%d,\\""value\\"":"""		5137220	1					
ANR	5139600	Argument	"""\\"",\\""offset\\"":%d,\\""value\\"":"""		5137220	0					
ANR	5139601	PrimaryExpression	"""\\"",\\""offset\\"":%d,\\""value\\"":"""		5137220	0					
ANR	5139602	Argument	isptr ? ( seek + nexti - ( p -> bits / 8 ) ) : seek + i		5137220	1					
ANR	5139603	ConditionalExpression	isptr ? ( seek + nexti - ( p -> bits / 8 ) ) : seek + i		5137220	0					
ANR	5139604	Condition	isptr		5137220	0					
ANR	5139605	Identifier	isptr		5137220	0					
ANR	5139606	AdditiveExpression	seek + nexti - ( p -> bits / 8 )		5137220	1		+			
ANR	5139607	Identifier	seek		5137220	0					
ANR	5139608	AdditiveExpression	nexti - ( p -> bits / 8 )		5137220	1		-			
ANR	5139609	Identifier	nexti		5137220	0					
ANR	5139610	MultiplicativeExpression	p -> bits / 8		5137220	1		/			
ANR	5139611	PtrMemberAccess	p -> bits		5137220	0					
ANR	5139612	Identifier	p		5137220	0					
ANR	5139613	Identifier	bits		5137220	1					
ANR	5139614	PrimaryExpression	8		5137220	1					
ANR	5139615	AdditiveExpression	seek + i		5137220	2		+			
ANR	5139616	Identifier	seek		5137220	0					
ANR	5139617	Identifier	i		5137220	1					
ANR	5139618	IfStatement	if ( MUSTSEESTRUCT )		5137220	26					
ANR	5139619	Condition	MUSTSEESTRUCT	2311:7:55264:55276	5137220	0	True				
ANR	5139620	Identifier	MUSTSEESTRUCT		5137220	0					
ANR	5139621	CompoundStatement		435:4:10337:10371	5137220	1					
ANR	5139622	IdentifierDeclStatement	char * type = get_format_type ( tmp ) ;	2312:4:55285:55319	5137220	0	True				
ANR	5139623	IdentifierDecl	* type = get_format_type ( tmp )		5137220	0					
ANR	5139624	IdentifierDeclType	char *		5137220	0					
ANR	5139625	Identifier	type		5137220	1					
ANR	5139626	AssignmentExpression	* type = get_format_type ( tmp )		5137220	2		=			
ANR	5139627	Identifier	type		5137220	0					
ANR	5139628	CallExpression	get_format_type ( tmp )		5137220	1					
ANR	5139629	Callee	get_format_type		5137220	0					
ANR	5139630	Identifier	get_format_type		5137220	0					
ANR	5139631	ArgumentList	tmp		5137220	1					
ANR	5139632	Argument	tmp		5137220	0					
ANR	5139633	Identifier	tmp		5137220	0					
ANR	5139634	IfStatement	if ( type )		5137220	1					
ANR	5139635	Condition	type	2313:8:55329:55332	5137220	0	True				
ANR	5139636	Identifier	type		5137220	0					
ANR	5139637	CompoundStatement		436:14:10387:10387	5137220	1					
ANR	5139638	ExpressionStatement	"p -> cb_printf ( ""%*c%s %s; // "" , ident , ' ' , type , fieldname )"	2314:5:55342:55401	5137220	0	True				
ANR	5139639	CallExpression	"p -> cb_printf ( ""%*c%s %s; // "" , ident , ' ' , type , fieldname )"		5137220	0					
ANR	5139640	Callee	p -> cb_printf		5137220	0					
ANR	5139641	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139642	Identifier	p		5137220	0					
ANR	5139643	Identifier	cb_printf		5137220	1					
ANR	5139644	ArgumentList	"""%*c%s %s; // """		5137220	1					
ANR	5139645	Argument	"""%*c%s %s; // """		5137220	0					
ANR	5139646	PrimaryExpression	"""%*c%s %s; // """		5137220	0					
ANR	5139647	Argument	ident		5137220	1					
ANR	5139648	Identifier	ident		5137220	0					
ANR	5139649	Argument	' '		5137220	2					
ANR	5139650	PrimaryExpression	' '		5137220	0					
ANR	5139651	Argument	type		5137220	3					
ANR	5139652	Identifier	type		5137220	0					
ANR	5139653	Argument	fieldname		5137220	4					
ANR	5139654	Identifier	fieldname		5137220	0					
ANR	5139655	ElseStatement	else		5137220	0					
ANR	5139656	CompoundStatement		438:11:10466:10466	5137220	0					
ANR	5139657	ExpressionStatement	"p -> cb_printf ( ""%*cstruct %s {"" , ident , ' ' , fieldname )"	2316:5:55421:55475	5137220	0	True				
ANR	5139658	CallExpression	"p -> cb_printf ( ""%*cstruct %s {"" , ident , ' ' , fieldname )"		5137220	0					
ANR	5139659	Callee	p -> cb_printf		5137220	0					
ANR	5139660	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139661	Identifier	p		5137220	0					
ANR	5139662	Identifier	cb_printf		5137220	1					
ANR	5139663	ArgumentList	"""%*cstruct %s {"""		5137220	1					
ANR	5139664	Argument	"""%*cstruct %s {"""		5137220	0					
ANR	5139665	PrimaryExpression	"""%*cstruct %s {"""		5137220	0					
ANR	5139666	Argument	ident		5137220	1					
ANR	5139667	Identifier	ident		5137220	0					
ANR	5139668	Argument	' '		5137220	2					
ANR	5139669	PrimaryExpression	' '		5137220	0					
ANR	5139670	Argument	fieldname		5137220	3					
ANR	5139671	Identifier	fieldname		5137220	0					
ANR	5139672	ExpressionStatement	free ( type )	2318:4:55487:55498	5137220	2	True				
ANR	5139673	CallExpression	free ( type )		5137220	0					
ANR	5139674	Callee	free		5137220	0					
ANR	5139675	Identifier	free		5137220	0					
ANR	5139676	ArgumentList	type		5137220	1					
ANR	5139677	Argument	type		5137220	0					
ANR	5139678	Identifier	type		5137220	0					
ANR	5139679	IdentifierDeclStatement	bool noline = false ;	2320:3:55508:55527	5137220	27	True				
ANR	5139680	IdentifierDecl	noline = false		5137220	0					
ANR	5139681	IdentifierDeclType	bool		5137220	0					
ANR	5139682	Identifier	noline		5137220	1					
ANR	5139683	AssignmentExpression	noline = false		5137220	2		=			
ANR	5139684	Identifier	false		5137220	0					
ANR	5139685	Identifier	false		5137220	1					
ANR	5139686	IdentifierDeclStatement	int oi = i ;	2322:3:55533:55543	5137220	28	True				
ANR	5139687	IdentifierDecl	oi = i		5137220	0					
ANR	5139688	IdentifierDeclType	int		5137220	0					
ANR	5139689	Identifier	oi		5137220	1					
ANR	5139690	AssignmentExpression	oi = i		5137220	2		=			
ANR	5139691	Identifier	i		5137220	0					
ANR	5139692	Identifier	i		5137220	1					
ANR	5139693	IfStatement	if ( isptr == NULLPTR )		5137220	29					
ANR	5139694	Condition	isptr == NULLPTR	2323:7:55552:55567	5137220	0	True				
ANR	5139695	EqualityExpression	isptr == NULLPTR		5137220	0		==			
ANR	5139696	Identifier	isptr		5137220	0					
ANR	5139697	Identifier	NULLPTR		5137220	1					
ANR	5139698	CompoundStatement		446:25:10622:10622	5137220	1					
ANR	5139699	IfStatement	if ( MUSTSEEJSON )		5137220	0					
ANR	5139700	Condition	MUSTSEEJSON	2324:8:55580:55590	5137220	0	True				
ANR	5139701	Identifier	MUSTSEEJSON		5137220	0					
ANR	5139702	CompoundStatement		447:21:10645:10645	5137220	1					
ANR	5139703	ExpressionStatement	"p -> cb_printf ( ""\\""NULL\\""}"" , tmp , seek + i )"	2325:5:55600:55641	5137220	0	True				
ANR	5139704	CallExpression	"p -> cb_printf ( ""\\""NULL\\""}"" , tmp , seek + i )"		5137220	0					
ANR	5139705	Callee	p -> cb_printf		5137220	0					
ANR	5139706	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139707	Identifier	p		5137220	0					
ANR	5139708	Identifier	cb_printf		5137220	1					
ANR	5139709	ArgumentList	"""\\""NULL\\""}"""		5137220	1					
ANR	5139710	Argument	"""\\""NULL\\""}"""		5137220	0					
ANR	5139711	PrimaryExpression	"""\\""NULL\\""}"""		5137220	0					
ANR	5139712	Argument	tmp		5137220	1					
ANR	5139713	Identifier	tmp		5137220	0					
ANR	5139714	Argument	seek + i		5137220	2					
ANR	5139715	AdditiveExpression	seek + i		5137220	0		+			
ANR	5139716	Identifier	seek		5137220	0					
ANR	5139717	Identifier	i		5137220	1					
ANR	5139718	ElseStatement	else		5137220	0					
ANR	5139719	IfStatement	if ( MUSTSEE )		5137220	0					
ANR	5139720	Condition	MUSTSEE	2326:15:55658:55664	5137220	0	True				
ANR	5139721	Identifier	MUSTSEE		5137220	0					
ANR	5139722	CompoundStatement		449:24:10719:10719	5137220	1					
ANR	5139723	ExpressionStatement	"p -> cb_printf ( "" NULL\\n"" )"	2327:5:55674:55698	5137220	0	True				
ANR	5139724	CallExpression	"p -> cb_printf ( "" NULL\\n"" )"		5137220	0					
ANR	5139725	Callee	p -> cb_printf		5137220	0					
ANR	5139726	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5139727	Identifier	p		5137220	0					
ANR	5139728	Identifier	cb_printf		5137220	1					
ANR	5139729	ArgumentList	""" NULL\\n"""		5137220	1					
ANR	5139730	Argument	""" NULL\\n"""		5137220	0					
ANR	5139731	PrimaryExpression	""" NULL\\n"""		5137220	0					
ANR	5139732	ExpressionStatement	isptr = PTRBACK	2329:4:55710:55725	5137220	1	True				
ANR	5139733	AssignmentExpression	isptr = PTRBACK		5137220	0		=			
ANR	5139734	Identifier	isptr		5137220	0					
ANR	5139735	Identifier	PTRBACK		5137220	1					
ANR	5139736	ElseStatement	else		5137220	0					
ANR	5139737	CompoundStatement		453:10:10789:10789	5137220	0					
ANR	5139738	SwitchStatement	switch ( tmp )		5137220	0					
ANR	5139739	Condition	tmp	2334:12:55951:55953	5137220	0	True				
ANR	5139740	Identifier	tmp		5137220	0					
ANR	5139741	CompoundStatement		457:17:11008:11008	5137220	1					
ANR	5139742	Label	case 'u' :	2335:4:55962:55970	5137220	0	True				
ANR	5139743	ExpressionStatement	"i += r_print_format_uleb ( p , endian , mode , setval , seeki , buf , i , size )"	2336:5:55977:56048	5137220	1	True				
ANR	5139744	AssignmentExpression	"i += r_print_format_uleb ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0		+=			
ANR	5139745	Identifier	i		5137220	0					
ANR	5139746	CallExpression	"r_print_format_uleb ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	1					
ANR	5139747	Callee	r_print_format_uleb		5137220	0					
ANR	5139748	Identifier	r_print_format_uleb		5137220	0					
ANR	5139749	ArgumentList	p		5137220	1					
ANR	5139750	Argument	p		5137220	0					
ANR	5139751	Identifier	p		5137220	0					
ANR	5139752	Argument	endian		5137220	1					
ANR	5139753	Identifier	endian		5137220	0					
ANR	5139754	Argument	mode		5137220	2					
ANR	5139755	Identifier	mode		5137220	0					
ANR	5139756	Argument	setval		5137220	3					
ANR	5139757	Identifier	setval		5137220	0					
ANR	5139758	Argument	seeki		5137220	4					
ANR	5139759	Identifier	seeki		5137220	0					
ANR	5139760	Argument	buf		5137220	5					
ANR	5139761	Identifier	buf		5137220	0					
ANR	5139762	Argument	i		5137220	6					
ANR	5139763	Identifier	i		5137220	0					
ANR	5139764	Argument	size		5137220	7					
ANR	5139765	Identifier	size		5137220	0					
ANR	5139766	BreakStatement	break ;	2337:5:56055:56060	5137220	2	True				
ANR	5139767	Label	case 't' :	2338:4:56066:56074	5137220	3	True				
ANR	5139768	ExpressionStatement	"r_print_format_time ( p , endian , mode , setval , seeki , buf , i , size )"	2339:5:56081:56147	5137220	4	True				
ANR	5139769	CallExpression	"r_print_format_time ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5139770	Callee	r_print_format_time		5137220	0					
ANR	5139771	Identifier	r_print_format_time		5137220	0					
ANR	5139772	ArgumentList	p		5137220	1					
ANR	5139773	Argument	p		5137220	0					
ANR	5139774	Identifier	p		5137220	0					
ANR	5139775	Argument	endian		5137220	1					
ANR	5139776	Identifier	endian		5137220	0					
ANR	5139777	Argument	mode		5137220	2					
ANR	5139778	Identifier	mode		5137220	0					
ANR	5139779	Argument	setval		5137220	3					
ANR	5139780	Identifier	setval		5137220	0					
ANR	5139781	Argument	seeki		5137220	4					
ANR	5139782	Identifier	seeki		5137220	0					
ANR	5139783	Argument	buf		5137220	5					
ANR	5139784	Identifier	buf		5137220	0					
ANR	5139785	Argument	i		5137220	6					
ANR	5139786	Identifier	i		5137220	0					
ANR	5139787	Argument	size		5137220	7					
ANR	5139788	Identifier	size		5137220	0					
ANR	5139789	ExpressionStatement	i += ( size == - 1 ) ? 4 : 4 * size	2340:5:56154:56182	5137220	5	True				
ANR	5139790	AssignmentExpression	i += ( size == - 1 ) ? 4 : 4 * size		5137220	0		+=			
ANR	5139791	Identifier	i		5137220	0					
ANR	5139792	ConditionalExpression	( size == - 1 ) ? 4 : 4 * size		5137220	1					
ANR	5139793	Condition	size == - 1		5137220	0					
ANR	5139794	EqualityExpression	size == - 1		5137220	0		==			
ANR	5139795	Identifier	size		5137220	0					
ANR	5139796	UnaryOperationExpression	- 1		5137220	1					
ANR	5139797	UnaryOperator	-		5137220	0					
ANR	5139798	PrimaryExpression	1		5137220	1					
ANR	5139799	PrimaryExpression	4		5137220	1					
ANR	5139800	MultiplicativeExpression	4 * size		5137220	2		*			
ANR	5139801	PrimaryExpression	4		5137220	0					
ANR	5139802	Identifier	size		5137220	1					
ANR	5139803	BreakStatement	break ;	2341:5:56189:56194	5137220	6	True				
ANR	5139804	Label	case 'q' :	2342:4:56200:56208	5137220	7	True				
ANR	5139805	ExpressionStatement	"r_print_format_quadword ( p , endian , mode , setval , seeki , buf , i , size )"	2343:5:56215:56285	5137220	8	True				
ANR	5139806	CallExpression	"r_print_format_quadword ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5139807	Callee	r_print_format_quadword		5137220	0					
ANR	5139808	Identifier	r_print_format_quadword		5137220	0					
ANR	5139809	ArgumentList	p		5137220	1					
ANR	5139810	Argument	p		5137220	0					
ANR	5139811	Identifier	p		5137220	0					
ANR	5139812	Argument	endian		5137220	1					
ANR	5139813	Identifier	endian		5137220	0					
ANR	5139814	Argument	mode		5137220	2					
ANR	5139815	Identifier	mode		5137220	0					
ANR	5139816	Argument	setval		5137220	3					
ANR	5139817	Identifier	setval		5137220	0					
ANR	5139818	Argument	seeki		5137220	4					
ANR	5139819	Identifier	seeki		5137220	0					
ANR	5139820	Argument	buf		5137220	5					
ANR	5139821	Identifier	buf		5137220	0					
ANR	5139822	Argument	i		5137220	6					
ANR	5139823	Identifier	i		5137220	0					
ANR	5139824	Argument	size		5137220	7					
ANR	5139825	Identifier	size		5137220	0					
ANR	5139826	ExpressionStatement	i += ( size == - 1 ) ? 8 : 8 * size	2344:5:56292:56320	5137220	9	True				
ANR	5139827	AssignmentExpression	i += ( size == - 1 ) ? 8 : 8 * size		5137220	0		+=			
ANR	5139828	Identifier	i		5137220	0					
ANR	5139829	ConditionalExpression	( size == - 1 ) ? 8 : 8 * size		5137220	1					
ANR	5139830	Condition	size == - 1		5137220	0					
ANR	5139831	EqualityExpression	size == - 1		5137220	0		==			
ANR	5139832	Identifier	size		5137220	0					
ANR	5139833	UnaryOperationExpression	- 1		5137220	1					
ANR	5139834	UnaryOperator	-		5137220	0					
ANR	5139835	PrimaryExpression	1		5137220	1					
ANR	5139836	PrimaryExpression	8		5137220	1					
ANR	5139837	MultiplicativeExpression	8 * size		5137220	2		*			
ANR	5139838	PrimaryExpression	8		5137220	0					
ANR	5139839	Identifier	size		5137220	1					
ANR	5139840	BreakStatement	break ;	2345:5:56327:56332	5137220	10	True				
ANR	5139841	Label	case 'b' :	2346:4:56338:56346	5137220	11	True				
ANR	5139842	ExpressionStatement	"r_print_format_byte ( p , endian , mode , setval , seeki , buf , i , size )"	2347:5:56353:56419	5137220	12	True				
ANR	5139843	CallExpression	"r_print_format_byte ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5139844	Callee	r_print_format_byte		5137220	0					
ANR	5139845	Identifier	r_print_format_byte		5137220	0					
ANR	5139846	ArgumentList	p		5137220	1					
ANR	5139847	Argument	p		5137220	0					
ANR	5139848	Identifier	p		5137220	0					
ANR	5139849	Argument	endian		5137220	1					
ANR	5139850	Identifier	endian		5137220	0					
ANR	5139851	Argument	mode		5137220	2					
ANR	5139852	Identifier	mode		5137220	0					
ANR	5139853	Argument	setval		5137220	3					
ANR	5139854	Identifier	setval		5137220	0					
ANR	5139855	Argument	seeki		5137220	4					
ANR	5139856	Identifier	seeki		5137220	0					
ANR	5139857	Argument	buf		5137220	5					
ANR	5139858	Identifier	buf		5137220	0					
ANR	5139859	Argument	i		5137220	6					
ANR	5139860	Identifier	i		5137220	0					
ANR	5139861	Argument	size		5137220	7					
ANR	5139862	Identifier	size		5137220	0					
ANR	5139863	ExpressionStatement	i += ( size == - 1 ) ? 1 : size	2348:5:56426:56452	5137220	13	True				
ANR	5139864	AssignmentExpression	i += ( size == - 1 ) ? 1 : size		5137220	0		+=			
ANR	5139865	Identifier	i		5137220	0					
ANR	5139866	ConditionalExpression	( size == - 1 ) ? 1 : size		5137220	1					
ANR	5139867	Condition	size == - 1		5137220	0					
ANR	5139868	EqualityExpression	size == - 1		5137220	0		==			
ANR	5139869	Identifier	size		5137220	0					
ANR	5139870	UnaryOperationExpression	- 1		5137220	1					
ANR	5139871	UnaryOperator	-		5137220	0					
ANR	5139872	PrimaryExpression	1		5137220	1					
ANR	5139873	PrimaryExpression	1		5137220	1					
ANR	5139874	Identifier	size		5137220	2					
ANR	5139875	BreakStatement	break ;	2349:5:56459:56464	5137220	14	True				
ANR	5139876	Label	case 'C' :	2350:4:56470:56478	5137220	15	True				
ANR	5139877	ExpressionStatement	"r_print_format_decchar ( p , endian , mode , setval , seeki , buf , i , size )"	2351:5:56485:56554	5137220	16	True				
ANR	5139878	CallExpression	"r_print_format_decchar ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5139879	Callee	r_print_format_decchar		5137220	0					
ANR	5139880	Identifier	r_print_format_decchar		5137220	0					
ANR	5139881	ArgumentList	p		5137220	1					
ANR	5139882	Argument	p		5137220	0					
ANR	5139883	Identifier	p		5137220	0					
ANR	5139884	Argument	endian		5137220	1					
ANR	5139885	Identifier	endian		5137220	0					
ANR	5139886	Argument	mode		5137220	2					
ANR	5139887	Identifier	mode		5137220	0					
ANR	5139888	Argument	setval		5137220	3					
ANR	5139889	Identifier	setval		5137220	0					
ANR	5139890	Argument	seeki		5137220	4					
ANR	5139891	Identifier	seeki		5137220	0					
ANR	5139892	Argument	buf		5137220	5					
ANR	5139893	Identifier	buf		5137220	0					
ANR	5139894	Argument	i		5137220	6					
ANR	5139895	Identifier	i		5137220	0					
ANR	5139896	Argument	size		5137220	7					
ANR	5139897	Identifier	size		5137220	0					
ANR	5139898	ExpressionStatement	i += ( size == - 1 ) ? 1 : size	2352:5:56561:56587	5137220	17	True				
ANR	5139899	AssignmentExpression	i += ( size == - 1 ) ? 1 : size		5137220	0		+=			
ANR	5139900	Identifier	i		5137220	0					
ANR	5139901	ConditionalExpression	( size == - 1 ) ? 1 : size		5137220	1					
ANR	5139902	Condition	size == - 1		5137220	0					
ANR	5139903	EqualityExpression	size == - 1		5137220	0		==			
ANR	5139904	Identifier	size		5137220	0					
ANR	5139905	UnaryOperationExpression	- 1		5137220	1					
ANR	5139906	UnaryOperator	-		5137220	0					
ANR	5139907	PrimaryExpression	1		5137220	1					
ANR	5139908	PrimaryExpression	1		5137220	1					
ANR	5139909	Identifier	size		5137220	2					
ANR	5139910	BreakStatement	break ;	2353:5:56594:56599	5137220	18	True				
ANR	5139911	Label	case 'c' :	2354:4:56605:56613	5137220	19	True				
ANR	5139912	ExpressionStatement	"r_print_format_char ( p , endian , mode , setval , seeki , buf , i , size )"	2355:5:56620:56686	5137220	20	True				
ANR	5139913	CallExpression	"r_print_format_char ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5139914	Callee	r_print_format_char		5137220	0					
ANR	5139915	Identifier	r_print_format_char		5137220	0					
ANR	5139916	ArgumentList	p		5137220	1					
ANR	5139917	Argument	p		5137220	0					
ANR	5139918	Identifier	p		5137220	0					
ANR	5139919	Argument	endian		5137220	1					
ANR	5139920	Identifier	endian		5137220	0					
ANR	5139921	Argument	mode		5137220	2					
ANR	5139922	Identifier	mode		5137220	0					
ANR	5139923	Argument	setval		5137220	3					
ANR	5139924	Identifier	setval		5137220	0					
ANR	5139925	Argument	seeki		5137220	4					
ANR	5139926	Identifier	seeki		5137220	0					
ANR	5139927	Argument	buf		5137220	5					
ANR	5139928	Identifier	buf		5137220	0					
ANR	5139929	Argument	i		5137220	6					
ANR	5139930	Identifier	i		5137220	0					
ANR	5139931	Argument	size		5137220	7					
ANR	5139932	Identifier	size		5137220	0					
ANR	5139933	ExpressionStatement	i += ( size == - 1 ) ? 1 : size	2356:5:56693:56719	5137220	21	True				
ANR	5139934	AssignmentExpression	i += ( size == - 1 ) ? 1 : size		5137220	0		+=			
ANR	5139935	Identifier	i		5137220	0					
ANR	5139936	ConditionalExpression	( size == - 1 ) ? 1 : size		5137220	1					
ANR	5139937	Condition	size == - 1		5137220	0					
ANR	5139938	EqualityExpression	size == - 1		5137220	0		==			
ANR	5139939	Identifier	size		5137220	0					
ANR	5139940	UnaryOperationExpression	- 1		5137220	1					
ANR	5139941	UnaryOperator	-		5137220	0					
ANR	5139942	PrimaryExpression	1		5137220	1					
ANR	5139943	PrimaryExpression	1		5137220	1					
ANR	5139944	Identifier	size		5137220	2					
ANR	5139945	BreakStatement	break ;	2357:5:56726:56731	5137220	22	True				
ANR	5139946	Label	case 'X' :	2358:4:56737:56745	5137220	23	True				
ANR	5139947	ExpressionStatement	"size = r_print_format_hexpairs ( p , endian , mode , setval , seeki , buf , i , size )"	2359:5:56752:56829	5137220	24	True				
ANR	5139948	AssignmentExpression	"size = r_print_format_hexpairs ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0		=			
ANR	5139949	Identifier	size		5137220	0					
ANR	5139950	CallExpression	"r_print_format_hexpairs ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	1					
ANR	5139951	Callee	r_print_format_hexpairs		5137220	0					
ANR	5139952	Identifier	r_print_format_hexpairs		5137220	0					
ANR	5139953	ArgumentList	p		5137220	1					
ANR	5139954	Argument	p		5137220	0					
ANR	5139955	Identifier	p		5137220	0					
ANR	5139956	Argument	endian		5137220	1					
ANR	5139957	Identifier	endian		5137220	0					
ANR	5139958	Argument	mode		5137220	2					
ANR	5139959	Identifier	mode		5137220	0					
ANR	5139960	Argument	setval		5137220	3					
ANR	5139961	Identifier	setval		5137220	0					
ANR	5139962	Argument	seeki		5137220	4					
ANR	5139963	Identifier	seeki		5137220	0					
ANR	5139964	Argument	buf		5137220	5					
ANR	5139965	Identifier	buf		5137220	0					
ANR	5139966	Argument	i		5137220	6					
ANR	5139967	Identifier	i		5137220	0					
ANR	5139968	Argument	size		5137220	7					
ANR	5139969	Identifier	size		5137220	0					
ANR	5139970	ExpressionStatement	i += size	2360:5:56836:56845	5137220	25	True				
ANR	5139971	AssignmentExpression	i += size		5137220	0		+=			
ANR	5139972	Identifier	i		5137220	0					
ANR	5139973	Identifier	size		5137220	1					
ANR	5139974	BreakStatement	break ;	2361:5:56852:56857	5137220	26	True				
ANR	5139975	Label	case 'T' :	2362:4:56863:56871	5137220	27	True				
ANR	5139976	IfStatement	"if ( r_print_format_10bytes ( p , mode , setval , seeki , addr , buf ) == 0 )"		5137220	28					
ANR	5139977	Condition	"r_print_format_10bytes ( p , mode , setval , seeki , addr , buf ) == 0"	2363:9:56882:56950	5137220	0	True				
ANR	5139978	EqualityExpression	"r_print_format_10bytes ( p , mode , setval , seeki , addr , buf ) == 0"		5137220	0		==			
ANR	5139979	CallExpression	"r_print_format_10bytes ( p , mode , setval , seeki , addr , buf )"		5137220	0					
ANR	5139980	Callee	r_print_format_10bytes		5137220	0					
ANR	5139981	Identifier	r_print_format_10bytes		5137220	0					
ANR	5139982	ArgumentList	p		5137220	1					
ANR	5139983	Argument	p		5137220	0					
ANR	5139984	Identifier	p		5137220	0					
ANR	5139985	Argument	mode		5137220	1					
ANR	5139986	Identifier	mode		5137220	0					
ANR	5139987	Argument	setval		5137220	2					
ANR	5139988	Identifier	setval		5137220	0					
ANR	5139989	Argument	seeki		5137220	3					
ANR	5139990	Identifier	seeki		5137220	0					
ANR	5139991	Argument	addr		5137220	4					
ANR	5139992	Identifier	addr		5137220	0					
ANR	5139993	Argument	buf		5137220	5					
ANR	5139994	Identifier	buf		5137220	0					
ANR	5139995	PrimaryExpression	0		5137220	1					
ANR	5139996	CompoundStatement		487:38:12005:12005	5137220	1					
ANR	5139997	ExpressionStatement	i += ( size == - 1 ) ? 4 : 4 * size	2365:6:56961:56989	5137220	0	True				
ANR	5139998	AssignmentExpression	i += ( size == - 1 ) ? 4 : 4 * size		5137220	0		+=			
ANR	5139999	Identifier	i		5137220	0					
ANR	5140000	ConditionalExpression	( size == - 1 ) ? 4 : 4 * size		5137220	1					
ANR	5140001	Condition	size == - 1		5137220	0					
ANR	5140002	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140003	Identifier	size		5137220	0					
ANR	5140004	UnaryOperationExpression	- 1		5137220	1					
ANR	5140005	UnaryOperator	-		5137220	0					
ANR	5140006	PrimaryExpression	1		5137220	1					
ANR	5140007	PrimaryExpression	4		5137220	1					
ANR	5140008	MultiplicativeExpression	4 * size		5137220	2		*			
ANR	5140009	PrimaryExpression	4		5137220	0					
ANR	5140010	Identifier	size		5137220	1					
ANR	5140011	BreakStatement	break ;	2367:5:57003:57008	5137220	29	True				
ANR	5140012	Label	case 'f' :	2368:4:57014:57022	5137220	30	True				
ANR	5140013	ExpressionStatement	"r_print_format_float ( p , endian , mode , setval , seeki , buf , i , size )"	2369:5:57029:57096	5137220	31	True				
ANR	5140014	CallExpression	"r_print_format_float ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5140015	Callee	r_print_format_float		5137220	0					
ANR	5140016	Identifier	r_print_format_float		5137220	0					
ANR	5140017	ArgumentList	p		5137220	1					
ANR	5140018	Argument	p		5137220	0					
ANR	5140019	Identifier	p		5137220	0					
ANR	5140020	Argument	endian		5137220	1					
ANR	5140021	Identifier	endian		5137220	0					
ANR	5140022	Argument	mode		5137220	2					
ANR	5140023	Identifier	mode		5137220	0					
ANR	5140024	Argument	setval		5137220	3					
ANR	5140025	Identifier	setval		5137220	0					
ANR	5140026	Argument	seeki		5137220	4					
ANR	5140027	Identifier	seeki		5137220	0					
ANR	5140028	Argument	buf		5137220	5					
ANR	5140029	Identifier	buf		5137220	0					
ANR	5140030	Argument	i		5137220	6					
ANR	5140031	Identifier	i		5137220	0					
ANR	5140032	Argument	size		5137220	7					
ANR	5140033	Identifier	size		5137220	0					
ANR	5140034	ExpressionStatement	i += ( size == - 1 ) ? 4 : 4 * size	2370:5:57103:57131	5137220	32	True				
ANR	5140035	AssignmentExpression	i += ( size == - 1 ) ? 4 : 4 * size		5137220	0		+=			
ANR	5140036	Identifier	i		5137220	0					
ANR	5140037	ConditionalExpression	( size == - 1 ) ? 4 : 4 * size		5137220	1					
ANR	5140038	Condition	size == - 1		5137220	0					
ANR	5140039	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140040	Identifier	size		5137220	0					
ANR	5140041	UnaryOperationExpression	- 1		5137220	1					
ANR	5140042	UnaryOperator	-		5137220	0					
ANR	5140043	PrimaryExpression	1		5137220	1					
ANR	5140044	PrimaryExpression	4		5137220	1					
ANR	5140045	MultiplicativeExpression	4 * size		5137220	2		*			
ANR	5140046	PrimaryExpression	4		5137220	0					
ANR	5140047	Identifier	size		5137220	1					
ANR	5140048	BreakStatement	break ;	2371:5:57138:57143	5137220	33	True				
ANR	5140049	Label	case 'F' :	2372:4:57149:57157	5137220	34	True				
ANR	5140050	ExpressionStatement	"r_print_format_double ( p , endian , mode , setval , seeki , buf , i , size )"	2373:5:57164:57232	5137220	35	True				
ANR	5140051	CallExpression	"r_print_format_double ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5140052	Callee	r_print_format_double		5137220	0					
ANR	5140053	Identifier	r_print_format_double		5137220	0					
ANR	5140054	ArgumentList	p		5137220	1					
ANR	5140055	Argument	p		5137220	0					
ANR	5140056	Identifier	p		5137220	0					
ANR	5140057	Argument	endian		5137220	1					
ANR	5140058	Identifier	endian		5137220	0					
ANR	5140059	Argument	mode		5137220	2					
ANR	5140060	Identifier	mode		5137220	0					
ANR	5140061	Argument	setval		5137220	3					
ANR	5140062	Identifier	setval		5137220	0					
ANR	5140063	Argument	seeki		5137220	4					
ANR	5140064	Identifier	seeki		5137220	0					
ANR	5140065	Argument	buf		5137220	5					
ANR	5140066	Identifier	buf		5137220	0					
ANR	5140067	Argument	i		5137220	6					
ANR	5140068	Identifier	i		5137220	0					
ANR	5140069	Argument	size		5137220	7					
ANR	5140070	Identifier	size		5137220	0					
ANR	5140071	ExpressionStatement	i += ( size == - 1 ) ? 8 : 8 * size	2374:5:57239:57267	5137220	36	True				
ANR	5140072	AssignmentExpression	i += ( size == - 1 ) ? 8 : 8 * size		5137220	0		+=			
ANR	5140073	Identifier	i		5137220	0					
ANR	5140074	ConditionalExpression	( size == - 1 ) ? 8 : 8 * size		5137220	1					
ANR	5140075	Condition	size == - 1		5137220	0					
ANR	5140076	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140077	Identifier	size		5137220	0					
ANR	5140078	UnaryOperationExpression	- 1		5137220	1					
ANR	5140079	UnaryOperator	-		5137220	0					
ANR	5140080	PrimaryExpression	1		5137220	1					
ANR	5140081	PrimaryExpression	8		5137220	1					
ANR	5140082	MultiplicativeExpression	8 * size		5137220	2		*			
ANR	5140083	PrimaryExpression	8		5137220	0					
ANR	5140084	Identifier	size		5137220	1					
ANR	5140085	BreakStatement	break ;	2375:5:57274:57279	5137220	37	True				
ANR	5140086	Label	case 'i' :	2376:4:57285:57293	5137220	38	True				
ANR	5140087	ExpressionStatement	"r_print_format_int ( p , endian , mode , setval , seeki , buf , i , size )"	2377:5:57300:57365	5137220	39	True				
ANR	5140088	CallExpression	"r_print_format_int ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5140089	Callee	r_print_format_int		5137220	0					
ANR	5140090	Identifier	r_print_format_int		5137220	0					
ANR	5140091	ArgumentList	p		5137220	1					
ANR	5140092	Argument	p		5137220	0					
ANR	5140093	Identifier	p		5137220	0					
ANR	5140094	Argument	endian		5137220	1					
ANR	5140095	Identifier	endian		5137220	0					
ANR	5140096	Argument	mode		5137220	2					
ANR	5140097	Identifier	mode		5137220	0					
ANR	5140098	Argument	setval		5137220	3					
ANR	5140099	Identifier	setval		5137220	0					
ANR	5140100	Argument	seeki		5137220	4					
ANR	5140101	Identifier	seeki		5137220	0					
ANR	5140102	Argument	buf		5137220	5					
ANR	5140103	Identifier	buf		5137220	0					
ANR	5140104	Argument	i		5137220	6					
ANR	5140105	Identifier	i		5137220	0					
ANR	5140106	Argument	size		5137220	7					
ANR	5140107	Identifier	size		5137220	0					
ANR	5140108	ExpressionStatement	i += ( size == - 1 ) ? 4 : 4 * size	2378:5:57372:57399	5137220	40	True				
ANR	5140109	AssignmentExpression	i += ( size == - 1 ) ? 4 : 4 * size		5137220	0		+=			
ANR	5140110	Identifier	i		5137220	0					
ANR	5140111	ConditionalExpression	( size == - 1 ) ? 4 : 4 * size		5137220	1					
ANR	5140112	Condition	size == - 1		5137220	0					
ANR	5140113	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140114	Identifier	size		5137220	0					
ANR	5140115	UnaryOperationExpression	- 1		5137220	1					
ANR	5140116	UnaryOperator	-		5137220	0					
ANR	5140117	PrimaryExpression	1		5137220	1					
ANR	5140118	PrimaryExpression	4		5137220	1					
ANR	5140119	MultiplicativeExpression	4 * size		5137220	2		*			
ANR	5140120	PrimaryExpression	4		5137220	0					
ANR	5140121	Identifier	size		5137220	1					
ANR	5140122	BreakStatement	break ;	2379:5:57406:57411	5137220	41	True				
ANR	5140123	Label	case 'd' :	2380:4:57417:57425	5137220	42	True				
ANR	5140124	ExpressionStatement	"r_print_format_hex ( p , endian , mode , setval , seeki , buf , i , size )"	2381:5:57487:57552	5137220	43	True				
ANR	5140125	CallExpression	"r_print_format_hex ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5140126	Callee	r_print_format_hex		5137220	0					
ANR	5140127	Identifier	r_print_format_hex		5137220	0					
ANR	5140128	ArgumentList	p		5137220	1					
ANR	5140129	Argument	p		5137220	0					
ANR	5140130	Identifier	p		5137220	0					
ANR	5140131	Argument	endian		5137220	1					
ANR	5140132	Identifier	endian		5137220	0					
ANR	5140133	Argument	mode		5137220	2					
ANR	5140134	Identifier	mode		5137220	0					
ANR	5140135	Argument	setval		5137220	3					
ANR	5140136	Identifier	setval		5137220	0					
ANR	5140137	Argument	seeki		5137220	4					
ANR	5140138	Identifier	seeki		5137220	0					
ANR	5140139	Argument	buf		5137220	5					
ANR	5140140	Identifier	buf		5137220	0					
ANR	5140141	Argument	i		5137220	6					
ANR	5140142	Identifier	i		5137220	0					
ANR	5140143	Argument	size		5137220	7					
ANR	5140144	Identifier	size		5137220	0					
ANR	5140145	ExpressionStatement	i += ( size == - 1 ) ? 4 : 4 * size	2382:5:57559:57586	5137220	44	True				
ANR	5140146	AssignmentExpression	i += ( size == - 1 ) ? 4 : 4 * size		5137220	0		+=			
ANR	5140147	Identifier	i		5137220	0					
ANR	5140148	ConditionalExpression	( size == - 1 ) ? 4 : 4 * size		5137220	1					
ANR	5140149	Condition	size == - 1		5137220	0					
ANR	5140150	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140151	Identifier	size		5137220	0					
ANR	5140152	UnaryOperationExpression	- 1		5137220	1					
ANR	5140153	UnaryOperator	-		5137220	0					
ANR	5140154	PrimaryExpression	1		5137220	1					
ANR	5140155	PrimaryExpression	4		5137220	1					
ANR	5140156	MultiplicativeExpression	4 * size		5137220	2		*			
ANR	5140157	PrimaryExpression	4		5137220	0					
ANR	5140158	Identifier	size		5137220	1					
ANR	5140159	BreakStatement	break ;	2383:5:57593:57598	5137220	45	True				
ANR	5140160	Label	case 'D' :	2384:4:57604:57612	5137220	46	True				
ANR	5140161	IfStatement	if ( isptr )		5137220	47					
ANR	5140162	Condition	isptr	2385:9:57623:57627	5137220	0	True				
ANR	5140163	Identifier	isptr		5137220	0					
ANR	5140164	CompoundStatement		508:16:12682:12682	5137220	1					
ANR	5140165	IfStatement	if ( p -> bits == 64 )		5137220	0					
ANR	5140166	Condition	p -> bits == 64	2386:10:57642:57654	5137220	0	True				
ANR	5140167	EqualityExpression	p -> bits == 64		5137220	0		==			
ANR	5140168	PtrMemberAccess	p -> bits		5137220	0					
ANR	5140169	Identifier	p		5137220	0					
ANR	5140170	Identifier	bits		5137220	1					
ANR	5140171	PrimaryExpression	64		5137220	1					
ANR	5140172	CompoundStatement		509:25:12709:12709	5137220	1					
ANR	5140173	ExpressionStatement	"i += r_print_format_disasm ( p , addr64 , size )"	2387:7:57666:57710	5137220	0	True				
ANR	5140174	AssignmentExpression	"i += r_print_format_disasm ( p , addr64 , size )"		5137220	0		+=			
ANR	5140175	Identifier	i		5137220	0					
ANR	5140176	CallExpression	"r_print_format_disasm ( p , addr64 , size )"		5137220	1					
ANR	5140177	Callee	r_print_format_disasm		5137220	0					
ANR	5140178	Identifier	r_print_format_disasm		5137220	0					
ANR	5140179	ArgumentList	p		5137220	1					
ANR	5140180	Argument	p		5137220	0					
ANR	5140181	Identifier	p		5137220	0					
ANR	5140182	Argument	addr64		5137220	1					
ANR	5140183	Identifier	addr64		5137220	0					
ANR	5140184	Argument	size		5137220	2					
ANR	5140185	Identifier	size		5137220	0					
ANR	5140186	ElseStatement	else		5137220	0					
ANR	5140187	CompoundStatement		511:13:12777:12777	5137220	0					
ANR	5140188	ExpressionStatement	"i += r_print_format_disasm ( p , addr , size )"	2389:7:57734:57776	5137220	0	True				
ANR	5140189	AssignmentExpression	"i += r_print_format_disasm ( p , addr , size )"		5137220	0		+=			
ANR	5140190	Identifier	i		5137220	0					
ANR	5140191	CallExpression	"r_print_format_disasm ( p , addr , size )"		5137220	1					
ANR	5140192	Callee	r_print_format_disasm		5137220	0					
ANR	5140193	Identifier	r_print_format_disasm		5137220	0					
ANR	5140194	ArgumentList	p		5137220	1					
ANR	5140195	Argument	p		5137220	0					
ANR	5140196	Identifier	p		5137220	0					
ANR	5140197	Argument	addr		5137220	1					
ANR	5140198	Identifier	addr		5137220	0					
ANR	5140199	Argument	size		5137220	2					
ANR	5140200	Identifier	size		5137220	0					
ANR	5140201	ElseStatement	else		5137220	0					
ANR	5140202	CompoundStatement		514:12:12850:12850	5137220	0					
ANR	5140203	ExpressionStatement	"i += r_print_format_disasm ( p , seeki , size )"	2392:6:57806:57849	5137220	0	True				
ANR	5140204	AssignmentExpression	"i += r_print_format_disasm ( p , seeki , size )"		5137220	0		+=			
ANR	5140205	Identifier	i		5137220	0					
ANR	5140206	CallExpression	"r_print_format_disasm ( p , seeki , size )"		5137220	1					
ANR	5140207	Callee	r_print_format_disasm		5137220	0					
ANR	5140208	Identifier	r_print_format_disasm		5137220	0					
ANR	5140209	ArgumentList	p		5137220	1					
ANR	5140210	Argument	p		5137220	0					
ANR	5140211	Identifier	p		5137220	0					
ANR	5140212	Argument	seeki		5137220	1					
ANR	5140213	Identifier	seeki		5137220	0					
ANR	5140214	Argument	size		5137220	2					
ANR	5140215	Identifier	size		5137220	0					
ANR	5140216	BreakStatement	break ;	2394:5:57863:57868	5137220	48	True				
ANR	5140217	Label	case 'o' :	2395:4:57874:57882	5137220	49	True				
ANR	5140218	ExpressionStatement	"r_print_format_octal ( p , endian , mode , setval , seeki , buf , i , size )"	2396:5:57889:57956	5137220	50	True				
ANR	5140219	CallExpression	"r_print_format_octal ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5140220	Callee	r_print_format_octal		5137220	0					
ANR	5140221	Identifier	r_print_format_octal		5137220	0					
ANR	5140222	ArgumentList	p		5137220	1					
ANR	5140223	Argument	p		5137220	0					
ANR	5140224	Identifier	p		5137220	0					
ANR	5140225	Argument	endian		5137220	1					
ANR	5140226	Identifier	endian		5137220	0					
ANR	5140227	Argument	mode		5137220	2					
ANR	5140228	Identifier	mode		5137220	0					
ANR	5140229	Argument	setval		5137220	3					
ANR	5140230	Identifier	setval		5137220	0					
ANR	5140231	Argument	seeki		5137220	4					
ANR	5140232	Identifier	seeki		5137220	0					
ANR	5140233	Argument	buf		5137220	5					
ANR	5140234	Identifier	buf		5137220	0					
ANR	5140235	Argument	i		5137220	6					
ANR	5140236	Identifier	i		5137220	0					
ANR	5140237	Argument	size		5137220	7					
ANR	5140238	Identifier	size		5137220	0					
ANR	5140239	ExpressionStatement	i += ( size == - 1 ) ? 4 : 4 * size	2397:5:57963:57993	5137220	51	True				
ANR	5140240	AssignmentExpression	i += ( size == - 1 ) ? 4 : 4 * size		5137220	0		+=			
ANR	5140241	Identifier	i		5137220	0					
ANR	5140242	ConditionalExpression	( size == - 1 ) ? 4 : 4 * size		5137220	1					
ANR	5140243	Condition	size == - 1		5137220	0					
ANR	5140244	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140245	Identifier	size		5137220	0					
ANR	5140246	UnaryOperationExpression	- 1		5137220	1					
ANR	5140247	UnaryOperator	-		5137220	0					
ANR	5140248	PrimaryExpression	1		5137220	1					
ANR	5140249	PrimaryExpression	4		5137220	1					
ANR	5140250	MultiplicativeExpression	4 * size		5137220	2		*			
ANR	5140251	PrimaryExpression	4		5137220	0					
ANR	5140252	Identifier	size		5137220	1					
ANR	5140253	BreakStatement	break ;	2398:5:58000:58005	5137220	52	True				
ANR	5140254	Label	case ';' :	2399:4:58011:58019	5137220	53	True				
ANR	5140255	ExpressionStatement	noline = true	2400:5:58026:58039	5137220	54	True				
ANR	5140256	AssignmentExpression	noline = true		5137220	0		=			
ANR	5140257	Identifier	noline		5137220	0					
ANR	5140258	Identifier	true		5137220	1					
ANR	5140259	ExpressionStatement	i -= ( size == - 1 ) ? 4 : 4 * size	2401:5:58046:58076	5137220	55	True				
ANR	5140260	AssignmentExpression	i -= ( size == - 1 ) ? 4 : 4 * size		5137220	0		-=			
ANR	5140261	Identifier	i		5137220	0					
ANR	5140262	ConditionalExpression	( size == - 1 ) ? 4 : 4 * size		5137220	1					
ANR	5140263	Condition	size == - 1		5137220	0					
ANR	5140264	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140265	Identifier	size		5137220	0					
ANR	5140266	UnaryOperationExpression	- 1		5137220	1					
ANR	5140267	UnaryOperator	-		5137220	0					
ANR	5140268	PrimaryExpression	1		5137220	1					
ANR	5140269	PrimaryExpression	4		5137220	1					
ANR	5140270	MultiplicativeExpression	4 * size		5137220	2		*			
ANR	5140271	PrimaryExpression	4		5137220	0					
ANR	5140272	Identifier	size		5137220	1					
ANR	5140273	IfStatement	if ( i < 0 )		5137220	56					
ANR	5140274	Condition	i < 0	2402:9:58087:58091	5137220	0	True				
ANR	5140275	RelationalExpression	i < 0		5137220	0		<			
ANR	5140276	Identifier	i		5137220	0					
ANR	5140277	PrimaryExpression	0		5137220	1					
ANR	5140278	CompoundStatement		525:16:13146:13146	5137220	1					
ANR	5140279	ExpressionStatement	i = 0	2403:6:58102:58107	5137220	0	True				
ANR	5140280	AssignmentExpression	i = 0		5137220	0		=			
ANR	5140281	Identifier	i		5137220	0					
ANR	5140282	PrimaryExpression	0		5137220	1					
ANR	5140283	BreakStatement	break ;	2405:5:58121:58126	5137220	57	True				
ANR	5140284	Label	"case ',' :"	2406:4:58132:58140	5137220	58	True				
ANR	5140285	ExpressionStatement	noline = true	2407:5:58147:58160	5137220	59	True				
ANR	5140286	AssignmentExpression	noline = true		5137220	0		=			
ANR	5140287	Identifier	noline		5137220	0					
ANR	5140288	Identifier	true		5137220	1					
ANR	5140289	ExpressionStatement	i -= ( size == - 1 ) ? 1 : size	2408:5:58167:58193	5137220	60	True				
ANR	5140290	AssignmentExpression	i -= ( size == - 1 ) ? 1 : size		5137220	0		-=			
ANR	5140291	Identifier	i		5137220	0					
ANR	5140292	ConditionalExpression	( size == - 1 ) ? 1 : size		5137220	1					
ANR	5140293	Condition	size == - 1		5137220	0					
ANR	5140294	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140295	Identifier	size		5137220	0					
ANR	5140296	UnaryOperationExpression	- 1		5137220	1					
ANR	5140297	UnaryOperator	-		5137220	0					
ANR	5140298	PrimaryExpression	1		5137220	1					
ANR	5140299	PrimaryExpression	1		5137220	1					
ANR	5140300	Identifier	size		5137220	2					
ANR	5140301	IfStatement	if ( i < 0 )		5137220	61					
ANR	5140302	Condition	i < 0	2409:9:58204:58208	5137220	0	True				
ANR	5140303	RelationalExpression	i < 0		5137220	0		<			
ANR	5140304	Identifier	i		5137220	0					
ANR	5140305	PrimaryExpression	0		5137220	1					
ANR	5140306	CompoundStatement		532:16:13263:13263	5137220	1					
ANR	5140307	ExpressionStatement	i = 0	2410:6:58219:58224	5137220	0	True				
ANR	5140308	AssignmentExpression	i = 0		5137220	0		=			
ANR	5140309	Identifier	i		5137220	0					
ANR	5140310	PrimaryExpression	0		5137220	1					
ANR	5140311	BreakStatement	break ;	2412:5:58238:58243	5137220	62	True				
ANR	5140312	Label	case 'x' :	2413:4:58249:58257	5137220	63	True				
ANR	5140313	ExpressionStatement	"r_print_format_hexflag ( p , endian , mode , setval , seeki , buf , i , size )"	2414:5:58264:58333	5137220	64	True				
ANR	5140314	CallExpression	"r_print_format_hexflag ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5140315	Callee	r_print_format_hexflag		5137220	0					
ANR	5140316	Identifier	r_print_format_hexflag		5137220	0					
ANR	5140317	ArgumentList	p		5137220	1					
ANR	5140318	Argument	p		5137220	0					
ANR	5140319	Identifier	p		5137220	0					
ANR	5140320	Argument	endian		5137220	1					
ANR	5140321	Identifier	endian		5137220	0					
ANR	5140322	Argument	mode		5137220	2					
ANR	5140323	Identifier	mode		5137220	0					
ANR	5140324	Argument	setval		5137220	3					
ANR	5140325	Identifier	setval		5137220	0					
ANR	5140326	Argument	seeki		5137220	4					
ANR	5140327	Identifier	seeki		5137220	0					
ANR	5140328	Argument	buf		5137220	5					
ANR	5140329	Identifier	buf		5137220	0					
ANR	5140330	Argument	i		5137220	6					
ANR	5140331	Identifier	i		5137220	0					
ANR	5140332	Argument	size		5137220	7					
ANR	5140333	Identifier	size		5137220	0					
ANR	5140334	ExpressionStatement	i += ( size == - 1 ) ? 4 : 4 * size	2415:5:58340:58368	5137220	65	True				
ANR	5140335	AssignmentExpression	i += ( size == - 1 ) ? 4 : 4 * size		5137220	0		+=			
ANR	5140336	Identifier	i		5137220	0					
ANR	5140337	ConditionalExpression	( size == - 1 ) ? 4 : 4 * size		5137220	1					
ANR	5140338	Condition	size == - 1		5137220	0					
ANR	5140339	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140340	Identifier	size		5137220	0					
ANR	5140341	UnaryOperationExpression	- 1		5137220	1					
ANR	5140342	UnaryOperator	-		5137220	0					
ANR	5140343	PrimaryExpression	1		5137220	1					
ANR	5140344	PrimaryExpression	4		5137220	1					
ANR	5140345	MultiplicativeExpression	4 * size		5137220	2		*			
ANR	5140346	PrimaryExpression	4		5137220	0					
ANR	5140347	Identifier	size		5137220	1					
ANR	5140348	BreakStatement	break ;	2416:5:58375:58380	5137220	66	True				
ANR	5140349	Label	case 'w' :	2417:4:58386:58394	5137220	67	True				
ANR	5140350	ExpressionStatement	"r_print_format_word ( p , endian , mode , setval , seeki , buf , i , size )"	2418:5:58401:58467	5137220	68	True				
ANR	5140351	CallExpression	"r_print_format_word ( p , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5140352	Callee	r_print_format_word		5137220	0					
ANR	5140353	Identifier	r_print_format_word		5137220	0					
ANR	5140354	ArgumentList	p		5137220	1					
ANR	5140355	Argument	p		5137220	0					
ANR	5140356	Identifier	p		5137220	0					
ANR	5140357	Argument	endian		5137220	1					
ANR	5140358	Identifier	endian		5137220	0					
ANR	5140359	Argument	mode		5137220	2					
ANR	5140360	Identifier	mode		5137220	0					
ANR	5140361	Argument	setval		5137220	3					
ANR	5140362	Identifier	setval		5137220	0					
ANR	5140363	Argument	seeki		5137220	4					
ANR	5140364	Identifier	seeki		5137220	0					
ANR	5140365	Argument	buf		5137220	5					
ANR	5140366	Identifier	buf		5137220	0					
ANR	5140367	Argument	i		5137220	6					
ANR	5140368	Identifier	i		5137220	0					
ANR	5140369	Argument	size		5137220	7					
ANR	5140370	Identifier	size		5137220	0					
ANR	5140371	ExpressionStatement	i += ( size == - 1 ) ? 2 : 2 * size	2419:5:58474:58502	5137220	69	True				
ANR	5140372	AssignmentExpression	i += ( size == - 1 ) ? 2 : 2 * size		5137220	0		+=			
ANR	5140373	Identifier	i		5137220	0					
ANR	5140374	ConditionalExpression	( size == - 1 ) ? 2 : 2 * size		5137220	1					
ANR	5140375	Condition	size == - 1		5137220	0					
ANR	5140376	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140377	Identifier	size		5137220	0					
ANR	5140378	UnaryOperationExpression	- 1		5137220	1					
ANR	5140379	UnaryOperator	-		5137220	0					
ANR	5140380	PrimaryExpression	1		5137220	1					
ANR	5140381	PrimaryExpression	2		5137220	1					
ANR	5140382	MultiplicativeExpression	2 * size		5137220	2		*			
ANR	5140383	PrimaryExpression	2		5137220	0					
ANR	5140384	Identifier	size		5137220	1					
ANR	5140385	BreakStatement	break ;	2420:5:58509:58514	5137220	70	True				
ANR	5140386	Label	case 'z' :	2421:4:58520:58528	5137220	71	True				
ANR	5140387	ExpressionStatement	"r_print_format_nulltermstring ( p , len , endian , mode , setval , seeki , buf , i , size )"	2422:5:58561:58642	5137220	72	True				
ANR	5140388	CallExpression	"r_print_format_nulltermstring ( p , len , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5140389	Callee	r_print_format_nulltermstring		5137220	0					
ANR	5140390	Identifier	r_print_format_nulltermstring		5137220	0					
ANR	5140391	ArgumentList	p		5137220	1					
ANR	5140392	Argument	p		5137220	0					
ANR	5140393	Identifier	p		5137220	0					
ANR	5140394	Argument	len		5137220	1					
ANR	5140395	Identifier	len		5137220	0					
ANR	5140396	Argument	endian		5137220	2					
ANR	5140397	Identifier	endian		5137220	0					
ANR	5140398	Argument	mode		5137220	3					
ANR	5140399	Identifier	mode		5137220	0					
ANR	5140400	Argument	setval		5137220	4					
ANR	5140401	Identifier	setval		5137220	0					
ANR	5140402	Argument	seeki		5137220	5					
ANR	5140403	Identifier	seeki		5137220	0					
ANR	5140404	Argument	buf		5137220	6					
ANR	5140405	Identifier	buf		5137220	0					
ANR	5140406	Argument	i		5137220	7					
ANR	5140407	Identifier	i		5137220	0					
ANR	5140408	Argument	size		5137220	8					
ANR	5140409	Identifier	size		5137220	0					
ANR	5140410	IfStatement	if ( size == - 1 )		5137220	73					
ANR	5140411	Condition	size == - 1	2423:9:58653:58662	5137220	0	True				
ANR	5140412	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140413	Identifier	size		5137220	0					
ANR	5140414	UnaryOperationExpression	- 1		5137220	1					
ANR	5140415	UnaryOperator	-		5137220	0					
ANR	5140416	PrimaryExpression	1		5137220	1					
ANR	5140417	CompoundStatement		546:21:13717:13717	5137220	1					
ANR	5140418	ExpressionStatement	i += strlen ( ( char * ) buf + i ) + 1	2424:6:58673:58705	5137220	0	True				
ANR	5140419	AssignmentExpression	i += strlen ( ( char * ) buf + i ) + 1		5137220	0		+=			
ANR	5140420	Identifier	i		5137220	0					
ANR	5140421	AdditiveExpression	strlen ( ( char * ) buf + i ) + 1		5137220	1		+			
ANR	5140422	CallExpression	strlen ( ( char * ) buf + i )		5137220	0					
ANR	5140423	Callee	strlen		5137220	0					
ANR	5140424	Identifier	strlen		5137220	0					
ANR	5140425	ArgumentList	( char * ) buf + i		5137220	1					
ANR	5140426	Argument	( char * ) buf + i		5137220	0					
ANR	5140427	AdditiveExpression	( char * ) buf + i		5137220	0		+			
ANR	5140428	CastExpression	( char * ) buf		5137220	0					
ANR	5140429	CastTarget	char *		5137220	0					
ANR	5140430	Identifier	buf		5137220	1					
ANR	5140431	Identifier	i		5137220	1					
ANR	5140432	PrimaryExpression	1		5137220	1					
ANR	5140433	ElseStatement	else		5137220	0					
ANR	5140434	CompoundStatement		548:12:13771:13771	5137220	0					
ANR	5140435	WhileStatement	while ( size -- )		5137220	0					
ANR	5140436	Condition	size --	2426:13:58734:58739	5137220	0	True				
ANR	5140437	PostIncDecOperationExpression	size --		5137220	0					
ANR	5140438	Identifier	size		5137220	0					
ANR	5140439	IncDec	--		5137220	1					
ANR	5140440	CompoundStatement		549:21:13794:13794	5137220	1					
ANR	5140441	ExpressionStatement	i ++	2427:7:58751:58754	5137220	0	True				
ANR	5140442	PostIncDecOperationExpression	i ++		5137220	0					
ANR	5140443	Identifier	i		5137220	0					
ANR	5140444	IncDec	++		5137220	1					
ANR	5140445	BreakStatement	break ;	2430:5:58776:58781	5137220	74	True				
ANR	5140446	Label	case 'Z' :	2431:4:58787:58795	5137220	75	True				
ANR	5140447	ExpressionStatement	"r_print_format_nulltermwidestring ( p , len , endian , mode , setval , seeki , buf , i , size )"	2432:5:58833:58918	5137220	76	True				
ANR	5140448	CallExpression	"r_print_format_nulltermwidestring ( p , len , endian , mode , setval , seeki , buf , i , size )"		5137220	0					
ANR	5140449	Callee	r_print_format_nulltermwidestring		5137220	0					
ANR	5140450	Identifier	r_print_format_nulltermwidestring		5137220	0					
ANR	5140451	ArgumentList	p		5137220	1					
ANR	5140452	Argument	p		5137220	0					
ANR	5140453	Identifier	p		5137220	0					
ANR	5140454	Argument	len		5137220	1					
ANR	5140455	Identifier	len		5137220	0					
ANR	5140456	Argument	endian		5137220	2					
ANR	5140457	Identifier	endian		5137220	0					
ANR	5140458	Argument	mode		5137220	3					
ANR	5140459	Identifier	mode		5137220	0					
ANR	5140460	Argument	setval		5137220	4					
ANR	5140461	Identifier	setval		5137220	0					
ANR	5140462	Argument	seeki		5137220	5					
ANR	5140463	Identifier	seeki		5137220	0					
ANR	5140464	Argument	buf		5137220	6					
ANR	5140465	Identifier	buf		5137220	0					
ANR	5140466	Argument	i		5137220	7					
ANR	5140467	Identifier	i		5137220	0					
ANR	5140468	Argument	size		5137220	8					
ANR	5140469	Identifier	size		5137220	0					
ANR	5140470	IfStatement	if ( size == - 1 )		5137220	77					
ANR	5140471	Condition	size == - 1	2433:9:58929:58938	5137220	0	True				
ANR	5140472	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140473	Identifier	size		5137220	0					
ANR	5140474	UnaryOperationExpression	- 1		5137220	1					
ANR	5140475	UnaryOperator	-		5137220	0					
ANR	5140476	PrimaryExpression	1		5137220	1					
ANR	5140477	CompoundStatement		556:21:13993:13993	5137220	1					
ANR	5140478	ExpressionStatement	i += r_wstr_clen ( ( char * ) ( buf + i ) ) * 2 + 2	2434:6:58949:58985	5137220	0	True				
ANR	5140479	AssignmentExpression	i += r_wstr_clen ( ( char * ) ( buf + i ) ) * 2 + 2		5137220	0		+=			
ANR	5140480	Identifier	i		5137220	0					
ANR	5140481	AdditiveExpression	r_wstr_clen ( ( char * ) ( buf + i ) ) * 2 + 2		5137220	1		+			
ANR	5140482	MultiplicativeExpression	r_wstr_clen ( ( char * ) ( buf + i ) ) * 2		5137220	0		*			
ANR	5140483	CallExpression	r_wstr_clen ( ( char * ) ( buf + i ) )		5137220	0					
ANR	5140484	Callee	r_wstr_clen		5137220	0					
ANR	5140485	Identifier	r_wstr_clen		5137220	0					
ANR	5140486	ArgumentList	( char * ) ( buf + i )		5137220	1					
ANR	5140487	Argument	( char * ) ( buf + i )		5137220	0					
ANR	5140488	CastExpression	( char * ) ( buf + i )		5137220	0					
ANR	5140489	CastTarget	char *		5137220	0					
ANR	5140490	AdditiveExpression	buf + i		5137220	1		+			
ANR	5140491	Identifier	buf		5137220	0					
ANR	5140492	Identifier	i		5137220	1					
ANR	5140493	PrimaryExpression	2		5137220	1					
ANR	5140494	PrimaryExpression	2		5137220	1					
ANR	5140495	ElseStatement	else		5137220	0					
ANR	5140496	CompoundStatement		558:12:14051:14051	5137220	0					
ANR	5140497	WhileStatement	while ( size -- )		5137220	0					
ANR	5140498	Condition	size --	2436:13:59014:59019	5137220	0	True				
ANR	5140499	PostIncDecOperationExpression	size --		5137220	0					
ANR	5140500	Identifier	size		5137220	0					
ANR	5140501	IncDec	--		5137220	1					
ANR	5140502	CompoundStatement		559:21:14074:14074	5137220	1					
ANR	5140503	ExpressionStatement	i += 2	2437:7:59031:59037	5137220	0	True				
ANR	5140504	AssignmentExpression	i += 2		5137220	0		+=			
ANR	5140505	Identifier	i		5137220	0					
ANR	5140506	PrimaryExpression	2		5137220	1					
ANR	5140507	BreakStatement	break ;	2440:5:59059:59064	5137220	78	True				
ANR	5140508	Label	case 's' :	2441:4:59070:59078	5137220	79	True				
ANR	5140509	IfStatement	"if ( r_print_format_string ( p , seeki , addr64 , addr , 0 , mode ) == 0 )"		5137220	80					
ANR	5140510	Condition	"r_print_format_string ( p , seeki , addr64 , addr , 0 , mode ) == 0"	2442:9:59089:59148	5137220	0	True				
ANR	5140511	EqualityExpression	"r_print_format_string ( p , seeki , addr64 , addr , 0 , mode ) == 0"		5137220	0		==			
ANR	5140512	CallExpression	"r_print_format_string ( p , seeki , addr64 , addr , 0 , mode )"		5137220	0					
ANR	5140513	Callee	r_print_format_string		5137220	0					
ANR	5140514	Identifier	r_print_format_string		5137220	0					
ANR	5140515	ArgumentList	p		5137220	1					
ANR	5140516	Argument	p		5137220	0					
ANR	5140517	Identifier	p		5137220	0					
ANR	5140518	Argument	seeki		5137220	1					
ANR	5140519	Identifier	seeki		5137220	0					
ANR	5140520	Argument	addr64		5137220	2					
ANR	5140521	Identifier	addr64		5137220	0					
ANR	5140522	Argument	addr		5137220	3					
ANR	5140523	Identifier	addr		5137220	0					
ANR	5140524	Argument	0		5137220	4					
ANR	5140525	PrimaryExpression	0		5137220	0					
ANR	5140526	Argument	mode		5137220	5					
ANR	5140527	Identifier	mode		5137220	0					
ANR	5140528	PrimaryExpression	0		5137220	1					
ANR	5140529	CompoundStatement		565:71:14203:14203	5137220	1					
ANR	5140530	ExpressionStatement	i += ( size == - 1 ) ? 4 : 4 * size	2443:6:59159:59187	5137220	0	True				
ANR	5140531	AssignmentExpression	i += ( size == - 1 ) ? 4 : 4 * size		5137220	0		+=			
ANR	5140532	Identifier	i		5137220	0					
ANR	5140533	ConditionalExpression	( size == - 1 ) ? 4 : 4 * size		5137220	1					
ANR	5140534	Condition	size == - 1		5137220	0					
ANR	5140535	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140536	Identifier	size		5137220	0					
ANR	5140537	UnaryOperationExpression	- 1		5137220	1					
ANR	5140538	UnaryOperator	-		5137220	0					
ANR	5140539	PrimaryExpression	1		5137220	1					
ANR	5140540	PrimaryExpression	4		5137220	1					
ANR	5140541	MultiplicativeExpression	4 * size		5137220	2		*			
ANR	5140542	PrimaryExpression	4		5137220	0					
ANR	5140543	Identifier	size		5137220	1					
ANR	5140544	BreakStatement	break ;	2445:5:59201:59206	5137220	81	True				
ANR	5140545	Label	case 'S' :	2446:4:59212:59220	5137220	82	True				
ANR	5140546	IfStatement	"if ( r_print_format_string ( p , seeki , addr64 , addr , 1 , mode ) == 0 )"		5137220	83					
ANR	5140547	Condition	"r_print_format_string ( p , seeki , addr64 , addr , 1 , mode ) == 0"	2447:9:59231:59290	5137220	0	True				
ANR	5140548	EqualityExpression	"r_print_format_string ( p , seeki , addr64 , addr , 1 , mode ) == 0"		5137220	0		==			
ANR	5140549	CallExpression	"r_print_format_string ( p , seeki , addr64 , addr , 1 , mode )"		5137220	0					
ANR	5140550	Callee	r_print_format_string		5137220	0					
ANR	5140551	Identifier	r_print_format_string		5137220	0					
ANR	5140552	ArgumentList	p		5137220	1					
ANR	5140553	Argument	p		5137220	0					
ANR	5140554	Identifier	p		5137220	0					
ANR	5140555	Argument	seeki		5137220	1					
ANR	5140556	Identifier	seeki		5137220	0					
ANR	5140557	Argument	addr64		5137220	2					
ANR	5140558	Identifier	addr64		5137220	0					
ANR	5140559	Argument	addr		5137220	3					
ANR	5140560	Identifier	addr		5137220	0					
ANR	5140561	Argument	1		5137220	4					
ANR	5140562	PrimaryExpression	1		5137220	0					
ANR	5140563	Argument	mode		5137220	5					
ANR	5140564	Identifier	mode		5137220	0					
ANR	5140565	PrimaryExpression	0		5137220	1					
ANR	5140566	CompoundStatement		570:71:14345:14345	5137220	1					
ANR	5140567	ExpressionStatement	i += ( size == - 1 ) ? 8 : 8 * size	2448:6:59301:59333	5137220	0	True				
ANR	5140568	AssignmentExpression	i += ( size == - 1 ) ? 8 : 8 * size		5137220	0		+=			
ANR	5140569	Identifier	i		5137220	0					
ANR	5140570	ConditionalExpression	( size == - 1 ) ? 8 : 8 * size		5137220	1					
ANR	5140571	Condition	size == - 1		5137220	0					
ANR	5140572	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140573	Identifier	size		5137220	0					
ANR	5140574	UnaryOperationExpression	- 1		5137220	1					
ANR	5140575	UnaryOperator	-		5137220	0					
ANR	5140576	PrimaryExpression	1		5137220	1					
ANR	5140577	PrimaryExpression	8		5137220	1					
ANR	5140578	MultiplicativeExpression	8 * size		5137220	2		*			
ANR	5140579	PrimaryExpression	8		5137220	0					
ANR	5140580	Identifier	size		5137220	1					
ANR	5140581	BreakStatement	break ;	2450:5:59347:59352	5137220	84	True				
ANR	5140582	Label	case 'B' :	2451:4:59358:59366	5137220	85	True				
ANR	5140583	IfStatement	if ( size >= ARRAYINDEX_COEF )		5137220	86					
ANR	5140584	Condition	size >= ARRAYINDEX_COEF	2452:9:59397:59419	5137220	0	True				
ANR	5140585	RelationalExpression	size >= ARRAYINDEX_COEF		5137220	0		>=			
ANR	5140586	Identifier	size		5137220	0					
ANR	5140587	Identifier	ARRAYINDEX_COEF		5137220	1					
ANR	5140588	CompoundStatement		575:34:14474:14474	5137220	1					
ANR	5140589	ExpressionStatement	size %= ARRAYINDEX_COEF	2453:6:59430:59453	5137220	0	True				
ANR	5140590	AssignmentExpression	size %= ARRAYINDEX_COEF		5137220	0		%=			
ANR	5140591	Identifier	size		5137220	0					
ANR	5140592	Identifier	ARRAYINDEX_COEF		5137220	1					
ANR	5140593	ExpressionStatement	"r_print_format_bitfield ( p , seeki , fmtname , fieldname , addr , mode , size )"	2455:5:59467:59539	5137220	87	True				
ANR	5140594	CallExpression	"r_print_format_bitfield ( p , seeki , fmtname , fieldname , addr , mode , size )"		5137220	0					
ANR	5140595	Callee	r_print_format_bitfield		5137220	0					
ANR	5140596	Identifier	r_print_format_bitfield		5137220	0					
ANR	5140597	ArgumentList	p		5137220	1					
ANR	5140598	Argument	p		5137220	0					
ANR	5140599	Identifier	p		5137220	0					
ANR	5140600	Argument	seeki		5137220	1					
ANR	5140601	Identifier	seeki		5137220	0					
ANR	5140602	Argument	fmtname		5137220	2					
ANR	5140603	Identifier	fmtname		5137220	0					
ANR	5140604	Argument	fieldname		5137220	3					
ANR	5140605	Identifier	fieldname		5137220	0					
ANR	5140606	Argument	addr		5137220	4					
ANR	5140607	Identifier	addr		5137220	0					
ANR	5140608	Argument	mode		5137220	5					
ANR	5140609	Identifier	mode		5137220	0					
ANR	5140610	Argument	size		5137220	6					
ANR	5140611	Identifier	size		5137220	0					
ANR	5140612	ExpressionStatement	i += ( size == - 1 ) ? 1 : size	2456:5:59546:59566	5137220	88	True				
ANR	5140613	AssignmentExpression	i += ( size == - 1 ) ? 1 : size		5137220	0		+=			
ANR	5140614	Identifier	i		5137220	0					
ANR	5140615	ConditionalExpression	( size == - 1 ) ? 1 : size		5137220	1					
ANR	5140616	Condition	size == - 1		5137220	0					
ANR	5140617	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140618	Identifier	size		5137220	0					
ANR	5140619	UnaryOperationExpression	- 1		5137220	1					
ANR	5140620	UnaryOperator	-		5137220	0					
ANR	5140621	PrimaryExpression	1		5137220	1					
ANR	5140622	PrimaryExpression	1		5137220	1					
ANR	5140623	Identifier	size		5137220	2					
ANR	5140624	BreakStatement	break ;	2457:5:59573:59578	5137220	89	True				
ANR	5140625	Label	case 'E' :	2458:4:59584:59592	5137220	90	True				
ANR	5140626	IfStatement	if ( size >= ARRAYINDEX_COEF )		5137220	91					
ANR	5140627	Condition	size >= ARRAYINDEX_COEF	2459:9:59619:59641	5137220	0	True				
ANR	5140628	RelationalExpression	size >= ARRAYINDEX_COEF		5137220	0		>=			
ANR	5140629	Identifier	size		5137220	0					
ANR	5140630	Identifier	ARRAYINDEX_COEF		5137220	1					
ANR	5140631	CompoundStatement		582:34:14696:14696	5137220	1					
ANR	5140632	ExpressionStatement	size %= ARRAYINDEX_COEF	2460:6:59652:59675	5137220	0	True				
ANR	5140633	AssignmentExpression	size %= ARRAYINDEX_COEF		5137220	0		%=			
ANR	5140634	Identifier	size		5137220	0					
ANR	5140635	Identifier	ARRAYINDEX_COEF		5137220	1					
ANR	5140636	ExpressionStatement	"r_print_format_enum ( p , seeki , fmtname , fieldname , addr , mode , size )"	2462:5:59689:59757	5137220	92	True				
ANR	5140637	CallExpression	"r_print_format_enum ( p , seeki , fmtname , fieldname , addr , mode , size )"		5137220	0					
ANR	5140638	Callee	r_print_format_enum		5137220	0					
ANR	5140639	Identifier	r_print_format_enum		5137220	0					
ANR	5140640	ArgumentList	p		5137220	1					
ANR	5140641	Argument	p		5137220	0					
ANR	5140642	Identifier	p		5137220	0					
ANR	5140643	Argument	seeki		5137220	1					
ANR	5140644	Identifier	seeki		5137220	0					
ANR	5140645	Argument	fmtname		5137220	2					
ANR	5140646	Identifier	fmtname		5137220	0					
ANR	5140647	Argument	fieldname		5137220	3					
ANR	5140648	Identifier	fieldname		5137220	0					
ANR	5140649	Argument	addr		5137220	4					
ANR	5140650	Identifier	addr		5137220	0					
ANR	5140651	Argument	mode		5137220	5					
ANR	5140652	Identifier	mode		5137220	0					
ANR	5140653	Argument	size		5137220	6					
ANR	5140654	Identifier	size		5137220	0					
ANR	5140655	ExpressionStatement	i += ( size == - 1 ) ? 1 : size	2463:5:59764:59788	5137220	93	True				
ANR	5140656	AssignmentExpression	i += ( size == - 1 ) ? 1 : size		5137220	0		+=			
ANR	5140657	Identifier	i		5137220	0					
ANR	5140658	ConditionalExpression	( size == - 1 ) ? 1 : size		5137220	1					
ANR	5140659	Condition	size == - 1		5137220	0					
ANR	5140660	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140661	Identifier	size		5137220	0					
ANR	5140662	UnaryOperationExpression	- 1		5137220	1					
ANR	5140663	UnaryOperator	-		5137220	0					
ANR	5140664	PrimaryExpression	1		5137220	1					
ANR	5140665	PrimaryExpression	1		5137220	1					
ANR	5140666	Identifier	size		5137220	2					
ANR	5140667	BreakStatement	break ;	2464:5:59795:59800	5137220	94	True				
ANR	5140668	Label	case 'r' :	2465:4:59806:59814	5137220	95	True				
ANR	5140669	IfStatement	if ( fmtname )		5137220	96					
ANR	5140670	Condition	fmtname	2466:9:59825:59831	5137220	0	True				
ANR	5140671	Identifier	fmtname		5137220	0					
ANR	5140672	CompoundStatement		589:18:14886:14886	5137220	1					
ANR	5140673	ExpressionStatement	"r_print_format_register ( p , mode , fmtname , setval )"	2467:6:59842:59892	5137220	0	True				
ANR	5140674	CallExpression	"r_print_format_register ( p , mode , fmtname , setval )"		5137220	0					
ANR	5140675	Callee	r_print_format_register		5137220	0					
ANR	5140676	Identifier	r_print_format_register		5137220	0					
ANR	5140677	ArgumentList	p		5137220	1					
ANR	5140678	Argument	p		5137220	0					
ANR	5140679	Identifier	p		5137220	0					
ANR	5140680	Argument	mode		5137220	1					
ANR	5140681	Identifier	mode		5137220	0					
ANR	5140682	Argument	fmtname		5137220	2					
ANR	5140683	Identifier	fmtname		5137220	0					
ANR	5140684	Argument	setval		5137220	3					
ANR	5140685	Identifier	setval		5137220	0					
ANR	5140686	ElseStatement	else		5137220	0					
ANR	5140687	CompoundStatement		591:12:14958:14958	5137220	0					
ANR	5140688	ExpressionStatement	"eprintf ( ""Unknown register\\n"" )"	2469:6:59914:59944	5137220	0	True				
ANR	5140689	CallExpression	"eprintf ( ""Unknown register\\n"" )"		5137220	0					
ANR	5140690	Callee	eprintf		5137220	0					
ANR	5140691	Identifier	eprintf		5137220	0					
ANR	5140692	ArgumentList	"""Unknown register\\n"""		5137220	1					
ANR	5140693	Argument	"""Unknown register\\n"""		5137220	0					
ANR	5140694	PrimaryExpression	"""Unknown register\\n"""		5137220	0					
ANR	5140695	BreakStatement	break ;	2471:5:59958:59963	5137220	97	True				
ANR	5140696	Label	case '?' :	2472:4:59969:59977	5137220	98	True				
ANR	5140697	CompoundStatement		600:5:15113:15125	5137220	99					
ANR	5140698	IdentifierDeclStatement	int s = 0 ;	2474:5:59991:60000	5137220	0	True				
ANR	5140699	IdentifierDecl	s = 0		5137220	0					
ANR	5140700	IdentifierDeclType	int		5137220	0					
ANR	5140701	Identifier	s		5137220	1					
ANR	5140702	AssignmentExpression	s = 0		5137220	2		=			
ANR	5140703	Identifier	s		5137220	0					
ANR	5140704	PrimaryExpression	0		5137220	1					
ANR	5140705	IdentifierDeclStatement	char * nxtfield = NULL ;	2475:5:60007:60028	5137220	1	True				
ANR	5140706	IdentifierDecl	* nxtfield = NULL		5137220	0					
ANR	5140707	IdentifierDeclType	char *		5137220	0					
ANR	5140708	Identifier	nxtfield		5137220	1					
ANR	5140709	AssignmentExpression	* nxtfield = NULL		5137220	2		=			
ANR	5140710	Identifier	NULL		5137220	0					
ANR	5140711	Identifier	NULL		5137220	1					
ANR	5140712	IdentifierDeclStatement	char * format = NULL ;	2476:5:60035:60054	5137220	2	True				
ANR	5140713	IdentifierDecl	* format = NULL		5137220	0					
ANR	5140714	IdentifierDeclType	char *		5137220	0					
ANR	5140715	Identifier	format		5137220	1					
ANR	5140716	AssignmentExpression	* format = NULL		5137220	2		=			
ANR	5140717	Identifier	NULL		5137220	0					
ANR	5140718	Identifier	NULL		5137220	1					
ANR	5140719	IdentifierDeclStatement	int anon = 0 ;	2477:5:60061:60073	5137220	3	True				
ANR	5140720	IdentifierDecl	anon = 0		5137220	0					
ANR	5140721	IdentifierDeclType	int		5137220	0					
ANR	5140722	Identifier	anon		5137220	1					
ANR	5140723	AssignmentExpression	anon = 0		5137220	2		=			
ANR	5140724	Identifier	anon		5137220	0					
ANR	5140725	PrimaryExpression	0		5137220	1					
ANR	5140726	IfStatement	if ( size >= ARRAYINDEX_COEF )		5137220	4					
ANR	5140727	Condition	size >= ARRAYINDEX_COEF	2478:9:60084:60106	5137220	0	True				
ANR	5140728	RelationalExpression	size >= ARRAYINDEX_COEF		5137220	0		>=			
ANR	5140729	Identifier	size		5137220	0					
ANR	5140730	Identifier	ARRAYINDEX_COEF		5137220	1					
ANR	5140731	CompoundStatement		601:34:15161:15161	5137220	1					
ANR	5140732	ExpressionStatement	elem = size / ARRAYINDEX_COEF - 1	2479:6:60117:60150	5137220	0	True				
ANR	5140733	AssignmentExpression	elem = size / ARRAYINDEX_COEF - 1		5137220	0		=			
ANR	5140734	Identifier	elem		5137220	0					
ANR	5140735	AdditiveExpression	size / ARRAYINDEX_COEF - 1		5137220	1		-			
ANR	5140736	MultiplicativeExpression	size / ARRAYINDEX_COEF		5137220	0		/			
ANR	5140737	Identifier	size		5137220	0					
ANR	5140738	Identifier	ARRAYINDEX_COEF		5137220	1					
ANR	5140739	PrimaryExpression	1		5137220	1					
ANR	5140740	ExpressionStatement	size %= ARRAYINDEX_COEF	2480:6:60158:60181	5137220	1	True				
ANR	5140741	AssignmentExpression	size %= ARRAYINDEX_COEF		5137220	0		%=			
ANR	5140742	Identifier	size		5137220	0					
ANR	5140743	Identifier	ARRAYINDEX_COEF		5137220	1					
ANR	5140744	IfStatement	if ( ! ( mode & R_PRINT_ISFIELD ) )		5137220	5					
ANR	5140745	Condition	! ( mode & R_PRINT_ISFIELD )	2482:9:60199:60223	5137220	0	True				
ANR	5140746	UnaryOperationExpression	! ( mode & R_PRINT_ISFIELD )		5137220	0					
ANR	5140747	UnaryOperator	!		5137220	0					
ANR	5140748	BitAndExpression	mode & R_PRINT_ISFIELD		5137220	1		&			
ANR	5140749	Identifier	mode		5137220	0					
ANR	5140750	Identifier	R_PRINT_ISFIELD		5137220	1					
ANR	5140751	CompoundStatement		605:36:15278:15278	5137220	1					
ANR	5140752	ExpressionStatement	nxtfield = MINUSONE	2483:6:60234:60253	5137220	0	True				
ANR	5140753	AssignmentExpression	nxtfield = MINUSONE		5137220	0		=			
ANR	5140754	Identifier	nxtfield		5137220	0					
ANR	5140755	Identifier	MINUSONE		5137220	1					
ANR	5140756	ElseStatement	else		5137220	0					
ANR	5140757	IfStatement	if ( field )		5137220	0					
ANR	5140758	Condition	field	2484:16:60271:60275	5137220	0	True				
ANR	5140759	Identifier	field		5137220	0					
ANR	5140760	CompoundStatement		607:23:15330:15330	5137220	1					
ANR	5140761	ExpressionStatement	"nxtfield = strchr ( ofield , '.' )"	2485:6:60286:60317	5137220	0	True				
ANR	5140762	AssignmentExpression	"nxtfield = strchr ( ofield , '.' )"		5137220	0		=			
ANR	5140763	Identifier	nxtfield		5137220	0					
ANR	5140764	CallExpression	"strchr ( ofield , '.' )"		5137220	1					
ANR	5140765	Callee	strchr		5137220	0					
ANR	5140766	Identifier	strchr		5137220	0					
ANR	5140767	ArgumentList	ofield		5137220	1					
ANR	5140768	Argument	ofield		5137220	0					
ANR	5140769	Identifier	ofield		5137220	0					
ANR	5140770	Argument	'.'		5137220	1					
ANR	5140771	PrimaryExpression	'.'		5137220	0					
ANR	5140772	IfStatement	if ( nxtfield != MINUSONE && nxtfield )		5137220	6					
ANR	5140773	Condition	nxtfield != MINUSONE && nxtfield	2487:9:60335:60366	5137220	0	True				
ANR	5140774	AndExpression	nxtfield != MINUSONE && nxtfield		5137220	0		&&			
ANR	5140775	EqualityExpression	nxtfield != MINUSONE		5137220	0		!=			
ANR	5140776	Identifier	nxtfield		5137220	0					
ANR	5140777	Identifier	MINUSONE		5137220	1					
ANR	5140778	Identifier	nxtfield		5137220	1					
ANR	5140779	CompoundStatement		610:43:15421:15421	5137220	1					
ANR	5140780	ExpressionStatement	nxtfield ++	2488:6:60377:60387	5137220	0	True				
ANR	5140781	PostIncDecOperationExpression	nxtfield ++		5137220	0					
ANR	5140782	Identifier	nxtfield		5137220	0					
ANR	5140783	IncDec	++		5137220	1					
ANR	5140784	IfStatement	if ( MUSTSEE )		5137220	7					
ANR	5140785	Condition	MUSTSEE	2491:9:60406:60412	5137220	0	True				
ANR	5140786	Identifier	MUSTSEE		5137220	0					
ANR	5140787	CompoundStatement		614:18:15467:15467	5137220	1					
ANR	5140788	IfStatement	if ( ! SEEVALUE )		5137220	0					
ANR	5140789	Condition	! SEEVALUE	2492:10:60427:60435	5137220	0	True				
ANR	5140790	UnaryOperationExpression	! SEEVALUE		5137220	0					
ANR	5140791	UnaryOperator	!		5137220	0					
ANR	5140792	Identifier	SEEVALUE		5137220	1					
ANR	5140793	CompoundStatement		615:21:15490:15490	5137220	1					
ANR	5140794	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	2493:7:60447:60466	5137220	0	True				
ANR	5140795	CallExpression	"p -> cb_printf ( ""\\n"" )"		5137220	0					
ANR	5140796	Callee	p -> cb_printf		5137220	0					
ANR	5140797	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5140798	Identifier	p		5137220	0					
ANR	5140799	Identifier	cb_printf		5137220	1					
ANR	5140800	ArgumentList	"""\\n"""		5137220	1					
ANR	5140801	Argument	"""\\n"""		5137220	0					
ANR	5140802	PrimaryExpression	"""\\n"""		5137220	0					
ANR	5140803	IfStatement	if ( MUSTSEEJSON )		5137220	8					
ANR	5140804	Condition	MUSTSEEJSON	2496:9:60492:60502	5137220	0	True				
ANR	5140805	Identifier	MUSTSEEJSON		5137220	0					
ANR	5140806	CompoundStatement		619:22:15557:15557	5137220	1					
ANR	5140807	IfStatement	if ( isptr )		5137220	0					
ANR	5140808	Condition	isptr	2497:10:60517:60521	5137220	0	True				
ANR	5140809	Identifier	isptr		5137220	0					
ANR	5140810	CompoundStatement		620:17:15576:15576	5137220	1					
ANR	5140811	ExpressionStatement	"p -> cb_printf ( ""%d},"" , seeki )"	2498:7:60533:60561	5137220	0	True				
ANR	5140812	CallExpression	"p -> cb_printf ( ""%d},"" , seeki )"		5137220	0					
ANR	5140813	Callee	p -> cb_printf		5137220	0					
ANR	5140814	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5140815	Identifier	p		5137220	0					
ANR	5140816	Identifier	cb_printf		5137220	1					
ANR	5140817	ArgumentList	"""%d},"""		5137220	1					
ANR	5140818	Argument	"""%d},"""		5137220	0					
ANR	5140819	PrimaryExpression	"""%d},"""		5137220	0					
ANR	5140820	Argument	seeki		5137220	1					
ANR	5140821	Identifier	seeki		5137220	0					
ANR	5140822	ElseStatement	else		5137220	0					
ANR	5140823	CompoundStatement		622:13:15628:15628	5137220	0					
ANR	5140824	ExpressionStatement	"p -> cb_printf ( ""["" )"	2500:7:60585:60603	5137220	0	True				
ANR	5140825	CallExpression	"p -> cb_printf ( ""["" )"		5137220	0					
ANR	5140826	Callee	p -> cb_printf		5137220	0					
ANR	5140827	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5140828	Identifier	p		5137220	0					
ANR	5140829	Identifier	cb_printf		5137220	1					
ANR	5140830	ArgumentList	"""["""		5137220	1					
ANR	5140831	Argument	"""["""		5137220	0					
ANR	5140832	PrimaryExpression	"""["""		5137220	0					
ANR	5140833	IfStatement	if ( MUSTSEESTRUCT )		5137220	9					
ANR	5140834	Condition	MUSTSEESTRUCT	2503:9:60629:60641	5137220	0	True				
ANR	5140835	Identifier	MUSTSEESTRUCT		5137220	0					
ANR	5140836	CompoundStatement		626:24:15696:15696	5137220	1					
ANR	5140837	IfStatement	if ( isptr )		5137220	0					
ANR	5140838	Condition	isptr	2504:10:60656:60660	5137220	0	True				
ANR	5140839	Identifier	isptr		5137220	0					
ANR	5140840	CompoundStatement		627:17:15715:15715	5137220	1					
ANR	5140841	ExpressionStatement	"p -> cb_printf ( ""%d"" , seeki )"	2505:7:60672:60698	5137220	0	True				
ANR	5140842	CallExpression	"p -> cb_printf ( ""%d"" , seeki )"		5137220	0					
ANR	5140843	Callee	p -> cb_printf		5137220	0					
ANR	5140844	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5140845	Identifier	p		5137220	0					
ANR	5140846	Identifier	cb_printf		5137220	1					
ANR	5140847	ArgumentList	"""%d"""		5137220	1					
ANR	5140848	Argument	"""%d"""		5137220	0					
ANR	5140849	PrimaryExpression	"""%d"""		5137220	0					
ANR	5140850	Argument	seeki		5137220	1					
ANR	5140851	Identifier	seeki		5137220	0					
ANR	5140852	ElseStatement	else		5137220	0					
ANR	5140853	CompoundStatement		629:13:15765:15765	5137220	0					
ANR	5140854	ExpressionStatement	ident += 4	2507:7:60722:60732	5137220	0	True				
ANR	5140855	AssignmentExpression	ident += 4		5137220	0		+=			
ANR	5140856	Identifier	ident		5137220	0					
ANR	5140857	PrimaryExpression	4		5137220	1					
ANR	5140858	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	2508:7:60741:60760	5137220	1	True				
ANR	5140859	CallExpression	"p -> cb_printf ( ""\\n"" )"		5137220	0					
ANR	5140860	Callee	p -> cb_printf		5137220	0					
ANR	5140861	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5140862	Identifier	p		5137220	0					
ANR	5140863	Identifier	cb_printf		5137220	1					
ANR	5140864	ArgumentList	"""\\n"""		5137220	1					
ANR	5140865	Argument	"""\\n"""		5137220	0					
ANR	5140866	PrimaryExpression	"""\\n"""		5137220	0					
ANR	5140867	IfStatement	if ( mode & R_PRINT_SEEFLAGS )		5137220	10					
ANR	5140868	Condition	mode & R_PRINT_SEEFLAGS	2511:9:60786:60808	5137220	0	True				
ANR	5140869	BitAndExpression	mode & R_PRINT_SEEFLAGS		5137220	0		&			
ANR	5140870	Identifier	mode		5137220	0					
ANR	5140871	Identifier	R_PRINT_SEEFLAGS		5137220	1					
ANR	5140872	CompoundStatement		634:34:15863:15863	5137220	1					
ANR	5140873	ExpressionStatement	slide += STRUCTFLAG	2512:6:60819:60838	5137220	0	True				
ANR	5140874	AssignmentExpression	slide += STRUCTFLAG		5137220	0		+=			
ANR	5140875	Identifier	slide		5137220	0					
ANR	5140876	Identifier	STRUCTFLAG		5137220	1					
ANR	5140877	IfStatement	if ( ! fmtname )		5137220	11					
ANR	5140878	Condition	! fmtname	2514:9:60856:60863	5137220	0	True				
ANR	5140879	UnaryOperationExpression	! fmtname		5137220	0					
ANR	5140880	UnaryOperator	!		5137220	0					
ANR	5140881	Identifier	fmtname		5137220	1					
ANR	5140882	CompoundStatement		637:19:15918:15918	5137220	1					
ANR	5140883	BreakStatement	break ;	2515:6:60874:60879	5137220	0	True				
ANR	5140884	ExpressionStatement	"format = strchr ( fmtname , ' ' )"	2517:5:60893:60923	5137220	12	True				
ANR	5140885	AssignmentExpression	"format = strchr ( fmtname , ' ' )"		5137220	0		=			
ANR	5140886	Identifier	format		5137220	0					
ANR	5140887	CallExpression	"strchr ( fmtname , ' ' )"		5137220	1					
ANR	5140888	Callee	strchr		5137220	0					
ANR	5140889	Identifier	strchr		5137220	0					
ANR	5140890	ArgumentList	fmtname		5137220	1					
ANR	5140891	Argument	fmtname		5137220	0					
ANR	5140892	Identifier	fmtname		5137220	0					
ANR	5140893	Argument	' '		5137220	1					
ANR	5140894	PrimaryExpression	' '		5137220	0					
ANR	5140895	IfStatement	if ( format )		5137220	13					
ANR	5140896	Condition	format	2518:9:60934:60939	5137220	0	True				
ANR	5140897	Identifier	format		5137220	0					
ANR	5140898	CompoundStatement		641:17:15994:15994	5137220	1					
ANR	5140899	ExpressionStatement	anon = 1	2519:6:60950:60958	5137220	0	True				
ANR	5140900	AssignmentExpression	anon = 1		5137220	0		=			
ANR	5140901	Identifier	anon		5137220	0					
ANR	5140902	PrimaryExpression	1		5137220	1					
ANR	5140903	ExpressionStatement	fmtname = format	2520:6:60966:60982	5137220	1	True				
ANR	5140904	AssignmentExpression	fmtname = format		5137220	0		=			
ANR	5140905	Identifier	fmtname		5137220	0					
ANR	5140906	Identifier	format		5137220	1					
ANR	5140907	WhileStatement	while ( * fmtname == ' ' )		5137220	2					
ANR	5140908	Condition	* fmtname == ' '	2521:13:60997:61011	5137220	0	True				
ANR	5140909	EqualityExpression	* fmtname == ' '		5137220	0		==			
ANR	5140910	UnaryOperationExpression	* fmtname		5137220	0					
ANR	5140911	UnaryOperator	*		5137220	0					
ANR	5140912	Identifier	fmtname		5137220	1					
ANR	5140913	PrimaryExpression	' '		5137220	1					
ANR	5140914	CompoundStatement		644:30:16066:16066	5137220	1					
ANR	5140915	ExpressionStatement	fmtname ++	2522:7:61023:61032	5137220	0	True				
ANR	5140916	PostIncDecOperationExpression	fmtname ++		5137220	0					
ANR	5140917	Identifier	fmtname		5137220	0					
ANR	5140918	IncDec	++		5137220	1					
ANR	5140919	ExpressionStatement	oldslide = slide	2525:5:61054:61070	5137220	14	True				
ANR	5140920	AssignmentExpression	oldslide = slide		5137220	0		=			
ANR	5140921	Identifier	oldslide		5137220	0					
ANR	5140922	Identifier	slide		5137220	1					
ANR	5140923	ExpressionStatement	slide += NESTEDSTRUCT	2527:5:61129:61150	5137220	15	True				
ANR	5140924	AssignmentExpression	slide += NESTEDSTRUCT		5137220	0		+=			
ANR	5140925	Identifier	slide		5137220	0					
ANR	5140926	Identifier	NESTEDSTRUCT		5137220	1					
ANR	5140927	IfStatement	if ( size == - 1 )		5137220	16					
ANR	5140928	Condition	size == - 1	2528:9:61161:61170	5137220	0	True				
ANR	5140929	EqualityExpression	size == - 1		5137220	0		==			
ANR	5140930	Identifier	size		5137220	0					
ANR	5140931	UnaryOperationExpression	- 1		5137220	1					
ANR	5140932	UnaryOperator	-		5137220	0					
ANR	5140933	PrimaryExpression	1		5137220	1					
ANR	5140934	CompoundStatement		651:21:16225:16225	5137220	1					
ANR	5140935	ExpressionStatement	"s = r_print_format_struct ( p , seeki , buf + i , len - i , fmtname , slide , mode , setval , nxtfield , anon )"	2529:6:61181:61299	5137220	0	True				
ANR	5140936	AssignmentExpression	"s = r_print_format_struct ( p , seeki , buf + i , len - i , fmtname , slide , mode , setval , nxtfield , anon )"		5137220	0		=			
ANR	5140937	Identifier	s		5137220	0					
ANR	5140938	CallExpression	"r_print_format_struct ( p , seeki , buf + i , len - i , fmtname , slide , mode , setval , nxtfield , anon )"		5137220	1					
ANR	5140939	Callee	r_print_format_struct		5137220	0					
ANR	5140940	Identifier	r_print_format_struct		5137220	0					
ANR	5140941	ArgumentList	p		5137220	1					
ANR	5140942	Argument	p		5137220	0					
ANR	5140943	Identifier	p		5137220	0					
ANR	5140944	Argument	seeki		5137220	1					
ANR	5140945	Identifier	seeki		5137220	0					
ANR	5140946	Argument	buf + i		5137220	2					
ANR	5140947	AdditiveExpression	buf + i		5137220	0		+			
ANR	5140948	Identifier	buf		5137220	0					
ANR	5140949	Identifier	i		5137220	1					
ANR	5140950	Argument	len - i		5137220	3					
ANR	5140951	AdditiveExpression	len - i		5137220	0		-			
ANR	5140952	Identifier	len		5137220	0					
ANR	5140953	Identifier	i		5137220	1					
ANR	5140954	Argument	fmtname		5137220	4					
ANR	5140955	Identifier	fmtname		5137220	0					
ANR	5140956	Argument	slide		5137220	5					
ANR	5140957	Identifier	slide		5137220	0					
ANR	5140958	Argument	mode		5137220	6					
ANR	5140959	Identifier	mode		5137220	0					
ANR	5140960	Argument	setval		5137220	7					
ANR	5140961	Identifier	setval		5137220	0					
ANR	5140962	Argument	nxtfield		5137220	8					
ANR	5140963	Identifier	nxtfield		5137220	0					
ANR	5140964	Argument	anon		5137220	9					
ANR	5140965	Identifier	anon		5137220	0					
ANR	5140966	ExpressionStatement	i += ( isptr ) ? ( p -> bits / 8 ) : s	2532:6:61307:61339	5137220	1	True				
ANR	5140967	AssignmentExpression	i += ( isptr ) ? ( p -> bits / 8 ) : s		5137220	0		+=			
ANR	5140968	Identifier	i		5137220	0					
ANR	5140969	ConditionalExpression	( isptr ) ? ( p -> bits / 8 ) : s		5137220	1					
ANR	5140970	Condition	isptr		5137220	0					
ANR	5140971	Identifier	isptr		5137220	0					
ANR	5140972	MultiplicativeExpression	p -> bits / 8		5137220	1		/			
ANR	5140973	PtrMemberAccess	p -> bits		5137220	0					
ANR	5140974	Identifier	p		5137220	0					
ANR	5140975	Identifier	bits		5137220	1					
ANR	5140976	PrimaryExpression	8		5137220	1					
ANR	5140977	Identifier	s		5137220	2					
ANR	5140978	IfStatement	if ( MUSTSEEJSON )		5137220	2					
ANR	5140979	Condition	MUSTSEEJSON	2533:10:61351:61361	5137220	0	True				
ANR	5140980	Identifier	MUSTSEEJSON		5137220	0					
ANR	5140981	CompoundStatement		656:23:16416:16416	5137220	1					
ANR	5140982	IfStatement	if ( ! isptr && ( ! arg [ 1 ] || arg [ 1 ] == ' ' ) )		5137220	0					
ANR	5140983	Condition	! isptr && ( ! arg [ 1 ] || arg [ 1 ] == ' ' )	2534:11:61377:61412	5137220	0	True				
ANR	5140984	AndExpression	! isptr && ( ! arg [ 1 ] || arg [ 1 ] == ' ' )		5137220	0		&&			
ANR	5140985	UnaryOperationExpression	! isptr		5137220	0					
ANR	5140986	UnaryOperator	!		5137220	0					
ANR	5140987	Identifier	isptr		5137220	1					
ANR	5140988	OrExpression	! arg [ 1 ] || arg [ 1 ] == ' '		5137220	1		||			
ANR	5140989	UnaryOperationExpression	! arg [ 1 ]		5137220	0					
ANR	5140990	UnaryOperator	!		5137220	0					
ANR	5140991	ArrayIndexing	arg [ 1 ]		5137220	1					
ANR	5140992	Identifier	arg		5137220	0					
ANR	5140993	PrimaryExpression	1		5137220	1					
ANR	5140994	EqualityExpression	arg [ 1 ] == ' '		5137220	1		==			
ANR	5140995	ArrayIndexing	arg [ 1 ]		5137220	0					
ANR	5140996	Identifier	arg		5137220	0					
ANR	5140997	PrimaryExpression	1		5137220	1					
ANR	5140998	PrimaryExpression	' '		5137220	1					
ANR	5140999	CompoundStatement		657:49:16467:16467	5137220	1					
ANR	5141000	ExpressionStatement	"p -> cb_printf ( ""]}"" )"	2535:8:61425:61444	5137220	0	True				
ANR	5141001	CallExpression	"p -> cb_printf ( ""]}"" )"		5137220	0					
ANR	5141002	Callee	p -> cb_printf		5137220	0					
ANR	5141003	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141004	Identifier	p		5137220	0					
ANR	5141005	Identifier	cb_printf		5137220	1					
ANR	5141006	ArgumentList	"""]}"""		5137220	1					
ANR	5141007	Argument	"""]}"""		5137220	0					
ANR	5141008	PrimaryExpression	"""]}"""		5137220	0					
ANR	5141009	ElseStatement	else		5137220	0					
ANR	5141010	CompoundStatement		661:12:16527:16527	5137220	0					
ANR	5141011	IfStatement	if ( mode & R_PRINT_ISFIELD )		5137220	0					
ANR	5141012	Condition	mode & R_PRINT_ISFIELD	2539:10:61487:61508	5137220	0	True				
ANR	5141013	BitAndExpression	mode & R_PRINT_ISFIELD		5137220	0		&			
ANR	5141014	Identifier	mode		5137220	0					
ANR	5141015	Identifier	R_PRINT_ISFIELD		5137220	1					
ANR	5141016	CompoundStatement		662:34:16563:16563	5137220	1					
ANR	5141017	IfStatement	if ( ! SEEVALUE )		5137220	0					
ANR	5141018	Condition	! SEEVALUE	2540:11:61524:61532	5137220	0	True				
ANR	5141019	UnaryOperationExpression	! SEEVALUE		5137220	0					
ANR	5141020	UnaryOperator	!		5137220	0					
ANR	5141021	Identifier	SEEVALUE		5137220	1					
ANR	5141022	CompoundStatement		663:22:16587:16587	5137220	1					
ANR	5141023	ExpressionStatement	"p -> cb_printf ( ""[\\n"" )"	2541:8:61545:61565	5137220	0	True				
ANR	5141024	CallExpression	"p -> cb_printf ( ""[\\n"" )"		5137220	0					
ANR	5141025	Callee	p -> cb_printf		5137220	0					
ANR	5141026	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141027	Identifier	p		5137220	0					
ANR	5141028	Identifier	cb_printf		5137220	1					
ANR	5141029	ArgumentList	"""[\\n"""		5137220	1					
ANR	5141030	Argument	"""[\\n"""		5137220	0					
ANR	5141031	PrimaryExpression	"""[\\n"""		5137220	0					
ANR	5141032	WhileStatement	while ( size -- )		5137220	1					
ANR	5141033	Condition	size --	2544:13:61597:61602	5137220	0	True				
ANR	5141034	PostIncDecOperationExpression	size --		5137220	0					
ANR	5141035	Identifier	size		5137220	0					
ANR	5141036	IncDec	--		5137220	1					
ANR	5141037	CompoundStatement		667:21:16657:16657	5137220	1					
ANR	5141038	IfStatement	if ( mode && ( elem == - 1 || elem == 0 ) )		5137220	0					
ANR	5141039	Condition	mode && ( elem == - 1 || elem == 0 )	2545:11:61618:61650	5137220	0	True				
ANR	5141040	AndExpression	mode && ( elem == - 1 || elem == 0 )		5137220	0		&&			
ANR	5141041	Identifier	mode		5137220	0					
ANR	5141042	OrExpression	elem == - 1 || elem == 0		5137220	1		||			
ANR	5141043	EqualityExpression	elem == - 1		5137220	0		==			
ANR	5141044	Identifier	elem		5137220	0					
ANR	5141045	UnaryOperationExpression	- 1		5137220	1					
ANR	5141046	UnaryOperator	-		5137220	0					
ANR	5141047	PrimaryExpression	1		5137220	1					
ANR	5141048	EqualityExpression	elem == 0		5137220	1		==			
ANR	5141049	Identifier	elem		5137220	0					
ANR	5141050	PrimaryExpression	0		5137220	1					
ANR	5141051	CompoundStatement		668:46:16705:16705	5137220	1					
ANR	5141052	ExpressionStatement	mode |= R_PRINT_MUSTSEE	2546:8:61663:61686	5137220	0	True				
ANR	5141053	AssignmentExpression	mode |= R_PRINT_MUSTSEE		5137220	0		|=			
ANR	5141054	Identifier	mode		5137220	0					
ANR	5141055	Identifier	R_PRINT_MUSTSEE		5137220	1					
ANR	5141056	IfStatement	if ( elem == 0 )		5137220	1					
ANR	5141057	Condition	elem == 0	2547:12:61700:61708	5137220	0	True				
ANR	5141058	EqualityExpression	elem == 0		5137220	0		==			
ANR	5141059	Identifier	elem		5137220	0					
ANR	5141060	PrimaryExpression	0		5137220	1					
ANR	5141061	CompoundStatement		670:23:16763:16763	5137220	1					
ANR	5141062	ExpressionStatement	elem = - 2	2548:9:61722:61731	5137220	0	True				
ANR	5141063	AssignmentExpression	elem = - 2		5137220	0		=			
ANR	5141064	Identifier	elem		5137220	0					
ANR	5141065	UnaryOperationExpression	- 2		5137220	1					
ANR	5141066	UnaryOperator	-		5137220	0					
ANR	5141067	PrimaryExpression	2		5137220	1					
ANR	5141068	ElseStatement	else		5137220	0					
ANR	5141069	CompoundStatement		673:14:16809:16809	5137220	0					
ANR	5141070	ExpressionStatement	mode &= ~R_PRINT_MUSTSEE	2551:8:61767:61791	5137220	0	True				
ANR	5141071	AssignmentExpression	mode &= ~R_PRINT_MUSTSEE		5137220	0		&=			
ANR	5141072	Identifier	mode		5137220	0					
ANR	5141073	Identifier	~R_PRINT_MUSTSEE		5137220	1					
ANR	5141074	ExpressionStatement	"s = r_print_format_struct ( p , seek + i , buf + i , len - i , fmtname , slide , mode , setval , nxtfield , anon )"	2553:7:61809:61915	5137220	1	True				
ANR	5141075	AssignmentExpression	"s = r_print_format_struct ( p , seek + i , buf + i , len - i , fmtname , slide , mode , setval , nxtfield , anon )"		5137220	0		=			
ANR	5141076	Identifier	s		5137220	0					
ANR	5141077	CallExpression	"r_print_format_struct ( p , seek + i , buf + i , len - i , fmtname , slide , mode , setval , nxtfield , anon )"		5137220	1					
ANR	5141078	Callee	r_print_format_struct		5137220	0					
ANR	5141079	Identifier	r_print_format_struct		5137220	0					
ANR	5141080	ArgumentList	p		5137220	1					
ANR	5141081	Argument	p		5137220	0					
ANR	5141082	Identifier	p		5137220	0					
ANR	5141083	Argument	seek + i		5137220	1					
ANR	5141084	AdditiveExpression	seek + i		5137220	0		+			
ANR	5141085	Identifier	seek		5137220	0					
ANR	5141086	Identifier	i		5137220	1					
ANR	5141087	Argument	buf + i		5137220	2					
ANR	5141088	AdditiveExpression	buf + i		5137220	0		+			
ANR	5141089	Identifier	buf		5137220	0					
ANR	5141090	Identifier	i		5137220	1					
ANR	5141091	Argument	len - i		5137220	3					
ANR	5141092	AdditiveExpression	len - i		5137220	0		-			
ANR	5141093	Identifier	len		5137220	0					
ANR	5141094	Identifier	i		5137220	1					
ANR	5141095	Argument	fmtname		5137220	4					
ANR	5141096	Identifier	fmtname		5137220	0					
ANR	5141097	Argument	slide		5137220	5					
ANR	5141098	Identifier	slide		5137220	0					
ANR	5141099	Argument	mode		5137220	6					
ANR	5141100	Identifier	mode		5137220	0					
ANR	5141101	Argument	setval		5137220	7					
ANR	5141102	Identifier	setval		5137220	0					
ANR	5141103	Argument	nxtfield		5137220	8					
ANR	5141104	Identifier	nxtfield		5137220	0					
ANR	5141105	Argument	anon		5137220	9					
ANR	5141106	Identifier	anon		5137220	0					
ANR	5141107	IfStatement	if ( ( MUSTSEE || MUSTSEEJSON || MUSTSEESTRUCT ) && size != 0 && elem == - 1 )		5137220	2					
ANR	5141108	Condition	( MUSTSEE || MUSTSEEJSON || MUSTSEESTRUCT ) && size != 0 && elem == - 1	2555:11:61928:61995	5137220	0	True				
ANR	5141109	AndExpression	( MUSTSEE || MUSTSEEJSON || MUSTSEESTRUCT ) && size != 0 && elem == - 1		5137220	0		&&			
ANR	5141110	OrExpression	MUSTSEE || MUSTSEEJSON || MUSTSEESTRUCT		5137220	0		||			
ANR	5141111	Identifier	MUSTSEE		5137220	0					
ANR	5141112	OrExpression	MUSTSEEJSON || MUSTSEESTRUCT		5137220	1		||			
ANR	5141113	Identifier	MUSTSEEJSON		5137220	0					
ANR	5141114	Identifier	MUSTSEESTRUCT		5137220	1					
ANR	5141115	AndExpression	size != 0 && elem == - 1		5137220	1		&&			
ANR	5141116	EqualityExpression	size != 0		5137220	0		!=			
ANR	5141117	Identifier	size		5137220	0					
ANR	5141118	PrimaryExpression	0		5137220	1					
ANR	5141119	EqualityExpression	elem == - 1		5137220	1		==			
ANR	5141120	Identifier	elem		5137220	0					
ANR	5141121	UnaryOperationExpression	- 1		5137220	1					
ANR	5141122	UnaryOperator	-		5137220	0					
ANR	5141123	PrimaryExpression	1		5137220	1					
ANR	5141124	CompoundStatement		678:81:17050:17050	5137220	1					
ANR	5141125	IfStatement	if ( MUSTSEEJSON )		5137220	0					
ANR	5141126	Condition	MUSTSEEJSON	2556:12:62012:62022	5137220	0	True				
ANR	5141127	Identifier	MUSTSEEJSON		5137220	0					
ANR	5141128	CompoundStatement		679:25:17077:17077	5137220	1					
ANR	5141129	ExpressionStatement	"p -> cb_printf ( "","" )"	2557:9:62036:62054	5137220	0	True				
ANR	5141130	CallExpression	"p -> cb_printf ( "","" )"		5137220	0					
ANR	5141131	Callee	p -> cb_printf		5137220	0					
ANR	5141132	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141133	Identifier	p		5137220	0					
ANR	5141134	Identifier	cb_printf		5137220	1					
ANR	5141135	ArgumentList	""","""		5137220	1					
ANR	5141136	Argument	""","""		5137220	0					
ANR	5141137	PrimaryExpression	""","""		5137220	0					
ANR	5141138	ElseStatement	else		5137220	0					
ANR	5141139	IfStatement	if ( MUSTSEE || MUSTSEESTRUCT )		5137220	0					
ANR	5141140	Condition	MUSTSEE || MUSTSEESTRUCT	2558:19:62075:62098	5137220	0	True				
ANR	5141141	OrExpression	MUSTSEE || MUSTSEESTRUCT		5137220	0		||			
ANR	5141142	Identifier	MUSTSEE		5137220	0					
ANR	5141143	Identifier	MUSTSEESTRUCT		5137220	1					
ANR	5141144	CompoundStatement		681:45:17153:17153	5137220	1					
ANR	5141145	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	2559:9:62112:62131	5137220	0	True				
ANR	5141146	CallExpression	"p -> cb_printf ( ""\\n"" )"		5137220	0					
ANR	5141147	Callee	p -> cb_printf		5137220	0					
ANR	5141148	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141149	Identifier	p		5137220	0					
ANR	5141150	Identifier	cb_printf		5137220	1					
ANR	5141151	ArgumentList	"""\\n"""		5137220	1					
ANR	5141152	Argument	"""\\n"""		5137220	0					
ANR	5141153	PrimaryExpression	"""\\n"""		5137220	0					
ANR	5141154	IfStatement	if ( elem > - 1 )		5137220	3					
ANR	5141155	Condition	elem > - 1	2562:11:62163:62171	5137220	0	True				
ANR	5141156	RelationalExpression	elem > - 1		5137220	0		>			
ANR	5141157	Identifier	elem		5137220	0					
ANR	5141158	UnaryOperationExpression	- 1		5137220	1					
ANR	5141159	UnaryOperator	-		5137220	0					
ANR	5141160	PrimaryExpression	1		5137220	1					
ANR	5141161	CompoundStatement		685:22:17226:17226	5137220	1					
ANR	5141162	ExpressionStatement	elem --	2563:8:62184:62190	5137220	0	True				
ANR	5141163	PostIncDecOperationExpression	elem --		5137220	0					
ANR	5141164	Identifier	elem		5137220	0					
ANR	5141165	IncDec	--		5137220	1					
ANR	5141166	ExpressionStatement	i += ( isptr ) ? ( p -> bits / 8 ) : s	2565:7:62208:62240	5137220	4	True				
ANR	5141167	AssignmentExpression	i += ( isptr ) ? ( p -> bits / 8 ) : s		5137220	0		+=			
ANR	5141168	Identifier	i		5137220	0					
ANR	5141169	ConditionalExpression	( isptr ) ? ( p -> bits / 8 ) : s		5137220	1					
ANR	5141170	Condition	isptr		5137220	0					
ANR	5141171	Identifier	isptr		5137220	0					
ANR	5141172	MultiplicativeExpression	p -> bits / 8		5137220	1		/			
ANR	5141173	PtrMemberAccess	p -> bits		5137220	0					
ANR	5141174	Identifier	p		5137220	0					
ANR	5141175	Identifier	bits		5137220	1					
ANR	5141176	PrimaryExpression	8		5137220	1					
ANR	5141177	Identifier	s		5137220	2					
ANR	5141178	IfStatement	if ( mode & R_PRINT_ISFIELD )		5137220	2					
ANR	5141179	Condition	mode & R_PRINT_ISFIELD	2567:10:62260:62281	5137220	0	True				
ANR	5141180	BitAndExpression	mode & R_PRINT_ISFIELD		5137220	0		&			
ANR	5141181	Identifier	mode		5137220	0					
ANR	5141182	Identifier	R_PRINT_ISFIELD		5137220	1					
ANR	5141183	CompoundStatement		690:34:17336:17336	5137220	1					
ANR	5141184	IfStatement	if ( ! SEEVALUE )		5137220	0					
ANR	5141185	Condition	! SEEVALUE	2568:11:62297:62305	5137220	0	True				
ANR	5141186	UnaryOperationExpression	! SEEVALUE		5137220	0					
ANR	5141187	UnaryOperator	!		5137220	0					
ANR	5141188	Identifier	SEEVALUE		5137220	1					
ANR	5141189	CompoundStatement		691:22:17360:17360	5137220	1					
ANR	5141190	ExpressionStatement	"p -> cb_printf ( ""]\\n"" )"	2569:8:62318:62338	5137220	0	True				
ANR	5141191	CallExpression	"p -> cb_printf ( ""]\\n"" )"		5137220	0					
ANR	5141192	Callee	p -> cb_printf		5137220	0					
ANR	5141193	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141194	Identifier	p		5137220	0					
ANR	5141195	Identifier	cb_printf		5137220	1					
ANR	5141196	ArgumentList	"""]\\n"""		5137220	1					
ANR	5141197	Argument	"""]\\n"""		5137220	0					
ANR	5141198	PrimaryExpression	"""]\\n"""		5137220	0					
ANR	5141199	IfStatement	if ( MUSTSEEJSON )		5137220	3					
ANR	5141200	Condition	MUSTSEEJSON	2572:10:62367:62377	5137220	0	True				
ANR	5141201	Identifier	MUSTSEEJSON		5137220	0					
ANR	5141202	CompoundStatement		695:23:17432:17432	5137220	1					
ANR	5141203	ExpressionStatement	"p -> cb_printf ( ""]}"" )"	2573:7:62389:62408	5137220	0	True				
ANR	5141204	CallExpression	"p -> cb_printf ( ""]}"" )"		5137220	0					
ANR	5141205	Callee	p -> cb_printf		5137220	0					
ANR	5141206	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141207	Identifier	p		5137220	0					
ANR	5141208	Identifier	cb_printf		5137220	1					
ANR	5141209	ArgumentList	"""]}"""		5137220	1					
ANR	5141210	Argument	"""]}"""		5137220	0					
ANR	5141211	PrimaryExpression	"""]}"""		5137220	0					
ANR	5141212	ExpressionStatement	oldslide = slide	2576:5:62430:62446	5137220	17	True				
ANR	5141213	AssignmentExpression	oldslide = slide		5137220	0		=			
ANR	5141214	Identifier	oldslide		5137220	0					
ANR	5141215	Identifier	slide		5137220	1					
ANR	5141216	ExpressionStatement	slide -= NESTEDSTRUCT	2578:5:62505:62526	5137220	18	True				
ANR	5141217	AssignmentExpression	slide -= NESTEDSTRUCT		5137220	0		-=			
ANR	5141218	Identifier	slide		5137220	0					
ANR	5141219	Identifier	NESTEDSTRUCT		5137220	1					
ANR	5141220	IfStatement	if ( mode & R_PRINT_SEEFLAGS )		5137220	19					
ANR	5141221	Condition	mode & R_PRINT_SEEFLAGS	2579:9:62537:62559	5137220	0	True				
ANR	5141222	BitAndExpression	mode & R_PRINT_SEEFLAGS		5137220	0		&			
ANR	5141223	Identifier	mode		5137220	0					
ANR	5141224	Identifier	R_PRINT_SEEFLAGS		5137220	1					
ANR	5141225	CompoundStatement		702:34:17614:17614	5137220	1					
ANR	5141226	ExpressionStatement	oldslide = slide	2580:6:62570:62586	5137220	0	True				
ANR	5141227	AssignmentExpression	oldslide = slide		5137220	0		=			
ANR	5141228	Identifier	oldslide		5137220	0					
ANR	5141229	Identifier	slide		5137220	1					
ANR	5141230	ExpressionStatement	slide -= STRUCTFLAG	2581:6:62594:62613	5137220	1	True				
ANR	5141231	AssignmentExpression	slide -= STRUCTFLAG		5137220	0		-=			
ANR	5141232	Identifier	slide		5137220	0					
ANR	5141233	Identifier	STRUCTFLAG		5137220	1					
ANR	5141234	BreakStatement	break ;	2583:5:62627:62632	5137220	20	True				
ANR	5141235	Label	case 'n' :	2585:4:62645:62653	5137220	100	True				
ANR	5141236	Label	case 'N' :	2586:4:62659:62667	5137220	101	True				
ANR	5141237	CompoundStatement		712:6:17755:17786	5137220	102					
ANR	5141238	IdentifierDeclStatement	int bytes = 0 ;	2588:6:62682:62695	5137220	0	True				
ANR	5141239	IdentifierDecl	bytes = 0		5137220	0					
ANR	5141240	IdentifierDeclType	int		5137220	0					
ANR	5141241	Identifier	bytes		5137220	1					
ANR	5141242	AssignmentExpression	bytes = 0		5137220	2		=			
ANR	5141243	Identifier	bytes		5137220	0					
ANR	5141244	PrimaryExpression	0		5137220	1					
ANR	5141245	IdentifierDeclStatement	int sign = ( tmp == 'n' ) ? 1 : 0 ;	2589:6:62703:62734	5137220	1	True				
ANR	5141246	IdentifierDecl	sign = ( tmp == 'n' ) ? 1 : 0		5137220	0					
ANR	5141247	IdentifierDeclType	int		5137220	0					
ANR	5141248	Identifier	sign		5137220	1					
ANR	5141249	AssignmentExpression	sign = ( tmp == 'n' ) ? 1 : 0		5137220	2		=			
ANR	5141250	Identifier	sign		5137220	0					
ANR	5141251	ConditionalExpression	( tmp == 'n' ) ? 1 : 0		5137220	1					
ANR	5141252	Condition	tmp == 'n'		5137220	0					
ANR	5141253	EqualityExpression	tmp == 'n'		5137220	0		==			
ANR	5141254	Identifier	tmp		5137220	0					
ANR	5141255	PrimaryExpression	'n'		5137220	1					
ANR	5141256	PrimaryExpression	1		5137220	1					
ANR	5141257	PrimaryExpression	0		5137220	2					
ANR	5141258	IfStatement	if ( arg [ 1 ] == '1' )		5137220	2					
ANR	5141259	Condition	arg [ 1 ] == '1'	2590:10:62746:62758	5137220	0	True				
ANR	5141260	EqualityExpression	arg [ 1 ] == '1'		5137220	0		==			
ANR	5141261	ArrayIndexing	arg [ 1 ]		5137220	0					
ANR	5141262	Identifier	arg		5137220	0					
ANR	5141263	PrimaryExpression	1		5137220	1					
ANR	5141264	PrimaryExpression	'1'		5137220	1					
ANR	5141265	CompoundStatement		713:25:17813:17813	5137220	1					
ANR	5141266	ExpressionStatement	bytes = 1	2591:7:62770:62779	5137220	0	True				
ANR	5141267	AssignmentExpression	bytes = 1		5137220	0		=			
ANR	5141268	Identifier	bytes		5137220	0					
ANR	5141269	PrimaryExpression	1		5137220	1					
ANR	5141270	ElseStatement	else		5137220	0					
ANR	5141271	IfStatement	if ( arg [ 1 ] == '2' )		5137220	0					
ANR	5141272	Condition	arg [ 1 ] == '2'	2592:17:62798:62810	5137220	0	True				
ANR	5141273	EqualityExpression	arg [ 1 ] == '2'		5137220	0		==			
ANR	5141274	ArrayIndexing	arg [ 1 ]		5137220	0					
ANR	5141275	Identifier	arg		5137220	0					
ANR	5141276	PrimaryExpression	1		5137220	1					
ANR	5141277	PrimaryExpression	'2'		5137220	1					
ANR	5141278	CompoundStatement		715:32:17865:17865	5137220	1					
ANR	5141279	ExpressionStatement	bytes = 2	2593:7:62822:62831	5137220	0	True				
ANR	5141280	AssignmentExpression	bytes = 2		5137220	0		=			
ANR	5141281	Identifier	bytes		5137220	0					
ANR	5141282	PrimaryExpression	2		5137220	1					
ANR	5141283	ElseStatement	else		5137220	0					
ANR	5141284	IfStatement	if ( arg [ 1 ] == '4' )		5137220	0					
ANR	5141285	Condition	arg [ 1 ] == '4'	2594:17:62850:62862	5137220	0	True				
ANR	5141286	EqualityExpression	arg [ 1 ] == '4'		5137220	0		==			
ANR	5141287	ArrayIndexing	arg [ 1 ]		5137220	0					
ANR	5141288	Identifier	arg		5137220	0					
ANR	5141289	PrimaryExpression	1		5137220	1					
ANR	5141290	PrimaryExpression	'4'		5137220	1					
ANR	5141291	CompoundStatement		717:32:17917:17917	5137220	1					
ANR	5141292	ExpressionStatement	bytes = 4	2595:7:62874:62883	5137220	0	True				
ANR	5141293	AssignmentExpression	bytes = 4		5137220	0		=			
ANR	5141294	Identifier	bytes		5137220	0					
ANR	5141295	PrimaryExpression	4		5137220	1					
ANR	5141296	ElseStatement	else		5137220	0					
ANR	5141297	IfStatement	if ( arg [ 1 ] == '8' )		5137220	0					
ANR	5141298	Condition	arg [ 1 ] == '8'	2596:17:62902:62914	5137220	0	True				
ANR	5141299	EqualityExpression	arg [ 1 ] == '8'		5137220	0		==			
ANR	5141300	ArrayIndexing	arg [ 1 ]		5137220	0					
ANR	5141301	Identifier	arg		5137220	0					
ANR	5141302	PrimaryExpression	1		5137220	1					
ANR	5141303	PrimaryExpression	'8'		5137220	1					
ANR	5141304	CompoundStatement		719:32:17969:17969	5137220	1					
ANR	5141305	ExpressionStatement	bytes = 8	2597:7:62926:62935	5137220	0	True				
ANR	5141306	AssignmentExpression	bytes = 8		5137220	0		=			
ANR	5141307	Identifier	bytes		5137220	0					
ANR	5141308	PrimaryExpression	8		5137220	1					
ANR	5141309	ElseStatement	else		5137220	0					
ANR	5141310	CompoundStatement		721:13:18002:18002	5137220	0					
ANR	5141311	ExpressionStatement	invalid = 1	2599:7:62959:62970	5137220	0	True				
ANR	5141312	AssignmentExpression	invalid = 1		5137220	0		=			
ANR	5141313	Identifier	invalid		5137220	0					
ANR	5141314	PrimaryExpression	1		5137220	1					
ANR	5141315	BreakStatement	break ;	2600:7:62979:62984	5137220	1	True				
ANR	5141316	ExpressionStatement	"r_print_format_num ( p , endian , mode , setval , seeki , buf , i , bytes , sign , size )"	2603:6:63027:63105	5137220	3	True				
ANR	5141317	CallExpression	"r_print_format_num ( p , endian , mode , setval , seeki , buf , i , bytes , sign , size )"		5137220	0					
ANR	5141318	Callee	r_print_format_num		5137220	0					
ANR	5141319	Identifier	r_print_format_num		5137220	0					
ANR	5141320	ArgumentList	p		5137220	1					
ANR	5141321	Argument	p		5137220	0					
ANR	5141322	Identifier	p		5137220	0					
ANR	5141323	Argument	endian		5137220	1					
ANR	5141324	Identifier	endian		5137220	0					
ANR	5141325	Argument	mode		5137220	2					
ANR	5141326	Identifier	mode		5137220	0					
ANR	5141327	Argument	setval		5137220	3					
ANR	5141328	Identifier	setval		5137220	0					
ANR	5141329	Argument	seeki		5137220	4					
ANR	5141330	Identifier	seeki		5137220	0					
ANR	5141331	Argument	buf		5137220	5					
ANR	5141332	Identifier	buf		5137220	0					
ANR	5141333	Argument	i		5137220	6					
ANR	5141334	Identifier	i		5137220	0					
ANR	5141335	Argument	bytes		5137220	7					
ANR	5141336	Identifier	bytes		5137220	0					
ANR	5141337	Argument	sign		5137220	8					
ANR	5141338	Identifier	sign		5137220	0					
ANR	5141339	Argument	size		5137220	9					
ANR	5141340	Identifier	size		5137220	0					
ANR	5141341	ExpressionStatement	i += ( size == - 1 ) ? bytes : size * bytes	2604:6:63113:63153	5137220	4	True				
ANR	5141342	AssignmentExpression	i += ( size == - 1 ) ? bytes : size * bytes		5137220	0		+=			
ANR	5141343	Identifier	i		5137220	0					
ANR	5141344	ConditionalExpression	( size == - 1 ) ? bytes : size * bytes		5137220	1					
ANR	5141345	Condition	size == - 1		5137220	0					
ANR	5141346	EqualityExpression	size == - 1		5137220	0		==			
ANR	5141347	Identifier	size		5137220	0					
ANR	5141348	UnaryOperationExpression	- 1		5137220	1					
ANR	5141349	UnaryOperator	-		5137220	0					
ANR	5141350	PrimaryExpression	1		5137220	1					
ANR	5141351	Identifier	bytes		5137220	1					
ANR	5141352	MultiplicativeExpression	size * bytes		5137220	2		*			
ANR	5141353	Identifier	size		5137220	0					
ANR	5141354	Identifier	bytes		5137220	1					
ANR	5141355	ExpressionStatement	arg ++	2605:6:63161:63166	5137220	5	True				
ANR	5141356	PostIncDecOperationExpression	arg ++		5137220	0					
ANR	5141357	Identifier	arg		5137220	0					
ANR	5141358	IncDec	++		5137220	1					
ANR	5141359	BreakStatement	break ;	2606:6:63174:63179	5137220	6	True				
ANR	5141360	Label	default :	2608:4:63192:63199	5137220	103	True				
ANR	5141361	Identifier	default		5137220	0					
ANR	5141362	ExpressionStatement	invalid = 1	2610:5:63238:63249	5137220	104	True				
ANR	5141363	AssignmentExpression	invalid = 1		5137220	0		=			
ANR	5141364	Identifier	invalid		5137220	0					
ANR	5141365	PrimaryExpression	1		5137220	1					
ANR	5141366	BreakStatement	break ;	2611:5:63256:63261	5137220	105	True				
ANR	5141367	IfStatement	if ( MUSTSEESTRUCT )		5137220	30					
ANR	5141368	Condition	MUSTSEESTRUCT	2614:7:63290:63302	5137220	0	True				
ANR	5141369	Identifier	MUSTSEESTRUCT		5137220	0					
ANR	5141370	CompoundStatement		737:22:18357:18357	5137220	1					
ANR	5141371	IfStatement	if ( oldslide )		5137220	0					
ANR	5141372	Condition	oldslide	2615:8:63315:63322	5137220	0	True				
ANR	5141373	Identifier	oldslide		5137220	0					
ANR	5141374	CompoundStatement		738:18:18377:18377	5137220	1					
ANR	5141375	ExpressionStatement	ident -= 4	2616:5:63332:63342	5137220	0	True				
ANR	5141376	AssignmentExpression	ident -= 4		5137220	0		-=			
ANR	5141377	Identifier	ident		5137220	0					
ANR	5141378	PrimaryExpression	4		5137220	1					
ANR	5141379	ExpressionStatement	"p -> cb_printf ( ""%*c}"" , ident , ' ' )"	2617:5:63349:63382	5137220	1	True				
ANR	5141380	CallExpression	"p -> cb_printf ( ""%*c}"" , ident , ' ' )"		5137220	0					
ANR	5141381	Callee	p -> cb_printf		5137220	0					
ANR	5141382	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141383	Identifier	p		5137220	0					
ANR	5141384	Identifier	cb_printf		5137220	1					
ANR	5141385	ArgumentList	"""%*c}"""		5137220	1					
ANR	5141386	Argument	"""%*c}"""		5137220	0					
ANR	5141387	PrimaryExpression	"""%*c}"""		5137220	0					
ANR	5141388	Argument	ident		5137220	1					
ANR	5141389	Identifier	ident		5137220	0					
ANR	5141390	Argument	' '		5137220	2					
ANR	5141391	PrimaryExpression	' '		5137220	0					
ANR	5141392	ExpressionStatement	oldslide -= NESTEDSTRUCT	2618:5:63389:63413	5137220	2	True				
ANR	5141393	AssignmentExpression	oldslide -= NESTEDSTRUCT		5137220	0		-=			
ANR	5141394	Identifier	oldslide		5137220	0					
ANR	5141395	Identifier	NESTEDSTRUCT		5137220	1					
ANR	5141396	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	2620:4:63425:63444	5137220	1	True				
ANR	5141397	CallExpression	"p -> cb_printf ( ""\\n"" )"		5137220	0					
ANR	5141398	Callee	p -> cb_printf		5137220	0					
ANR	5141399	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141400	Identifier	p		5137220	0					
ANR	5141401	Identifier	cb_printf		5137220	1					
ANR	5141402	ArgumentList	"""\\n"""		5137220	1					
ANR	5141403	Argument	"""\\n"""		5137220	0					
ANR	5141404	PrimaryExpression	"""\\n"""		5137220	0					
ANR	5141405	IfStatement	if ( mode & R_PRINT_DOT )		5137220	31					
ANR	5141406	Condition	mode & R_PRINT_DOT	2622:7:63458:63475	5137220	0	True				
ANR	5141407	BitAndExpression	mode & R_PRINT_DOT		5137220	0		&			
ANR	5141408	Identifier	mode		5137220	0					
ANR	5141409	Identifier	R_PRINT_DOT		5137220	1					
ANR	5141410	CompoundStatement		745:27:18530:18530	5137220	1					
ANR	5141411	ExpressionStatement	"p -> cb_printf ( ""}"" )"	2623:4:63484:63502	5137220	0	True				
ANR	5141412	CallExpression	"p -> cb_printf ( ""}"" )"		5137220	0					
ANR	5141413	Callee	p -> cb_printf		5137220	0					
ANR	5141414	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141415	Identifier	p		5137220	0					
ANR	5141416	Identifier	cb_printf		5137220	1					
ANR	5141417	ArgumentList	"""}"""		5137220	1					
ANR	5141418	Argument	"""}"""		5137220	0					
ANR	5141419	PrimaryExpression	"""}"""		5137220	0					
ANR	5141420	IfStatement	if ( mode & R_PRINT_SEEFLAGS && isptr != NULLPTR )		5137220	32					
ANR	5141421	Condition	mode & R_PRINT_SEEFLAGS && isptr != NULLPTR	2625:7:63516:63558	5137220	0	True				
ANR	5141422	AndExpression	mode & R_PRINT_SEEFLAGS && isptr != NULLPTR		5137220	0		&&			
ANR	5141423	BitAndExpression	mode & R_PRINT_SEEFLAGS		5137220	0		&			
ANR	5141424	Identifier	mode		5137220	0					
ANR	5141425	Identifier	R_PRINT_SEEFLAGS		5137220	1					
ANR	5141426	EqualityExpression	isptr != NULLPTR		5137220	1		!=			
ANR	5141427	Identifier	isptr		5137220	0					
ANR	5141428	Identifier	NULLPTR		5137220	1					
ANR	5141429	CompoundStatement		749:4:18619:18634	5137220	1					
ANR	5141430	IdentifierDeclStatement	int sz = i - oi ;	2626:4:63567:63582	5137220	0	True				
ANR	5141431	IdentifierDecl	sz = i - oi		5137220	0					
ANR	5141432	IdentifierDeclType	int		5137220	0					
ANR	5141433	Identifier	sz		5137220	1					
ANR	5141434	AssignmentExpression	sz = i - oi		5137220	2		=			
ANR	5141435	Identifier	sz		5137220	0					
ANR	5141436	AdditiveExpression	i - oi		5137220	1		-			
ANR	5141437	Identifier	i		5137220	0					
ANR	5141438	Identifier	oi		5137220	1					
ANR	5141439	IfStatement	if ( sz > 1 )		5137220	1					
ANR	5141440	Condition	sz > 1	2627:8:63592:63597	5137220	0	True				
ANR	5141441	RelationalExpression	sz > 1		5137220	0		>			
ANR	5141442	Identifier	sz		5137220	0					
ANR	5141443	PrimaryExpression	1		5137220	1					
ANR	5141444	CompoundStatement		750:16:18652:18652	5137220	1					
ANR	5141445	Statement	p	2628:5:63607:63607	5137220	0	True				
ANR	5141446	Statement	->	2628:6:63608:63609	5137220	1	True				
ANR	5141447	Statement	cb_printf	2628:8:63610:63618	5137220	2	True				
ANR	5141448	Statement	(	2628:18:63620:63620	5137220	3	True				
ANR	5141449	Statement	"""fl %d @ 0x%08"""	2628:19:63621:63635	5137220	4	True				
ANR	5141450	Statement	PFMT64x	2628:34:63636:63642	5137220	5	True				
ANR	5141451	Statement	"""\\n"""	2628:41:63643:63646	5137220	6	True				
ANR	5141452	Statement	","	2628:45:63647:63647	5137220	7	True				
ANR	5141453	Statement	sz	2628:47:63649:63650	5137220	8	True				
ANR	5141454	Statement	","	2628:49:63651:63651	5137220	9	True				
ANR	5141455	Statement	seeki	2628:51:63653:63657	5137220	10	True				
ANR	5141456	Statement	)	2628:56:63658:63658	5137220	11	True				
ANR	5141457	ExpressionStatement		2628:57:63659:63659	5137220	12	True				
ANR	5141458	Statement	p	2629:5:63666:63666	5137220	13	True				
ANR	5141459	Statement	->	2629:6:63667:63668	5137220	14	True				
ANR	5141460	Statement	cb_printf	2629:8:63669:63677	5137220	15	True				
ANR	5141461	Statement	(	2629:18:63679:63679	5137220	16	True				
ANR	5141462	Statement	"""Cd %d @ 0x%08"""	2629:19:63680:63694	5137220	17	True				
ANR	5141463	Statement	PFMT64x	2629:34:63695:63701	5137220	18	True				
ANR	5141464	Statement	"""\\n"""	2629:41:63702:63705	5137220	19	True				
ANR	5141465	Statement	","	2629:45:63706:63706	5137220	20	True				
ANR	5141466	Statement	sz	2629:47:63708:63709	5137220	21	True				
ANR	5141467	Statement	","	2629:49:63710:63710	5137220	22	True				
ANR	5141468	Statement	seeki	2629:51:63712:63716	5137220	23	True				
ANR	5141469	Statement	)	2629:56:63717:63717	5137220	24	True				
ANR	5141470	ExpressionStatement		2629:57:63718:63718	5137220	25	True				
ANR	5141471	IfStatement	if ( viewflags && p -> offname )		5137220	33					
ANR	5141472	Condition	viewflags && p -> offname	2632:7:63738:63760	5137220	0	True				
ANR	5141473	AndExpression	viewflags && p -> offname		5137220	0		&&			
ANR	5141474	Identifier	viewflags		5137220	0					
ANR	5141475	PtrMemberAccess	p -> offname		5137220	1					
ANR	5141476	Identifier	p		5137220	0					
ANR	5141477	Identifier	offname		5137220	1					
ANR	5141478	CompoundStatement		756:4:18821:18864	5137220	1					
ANR	5141479	IdentifierDeclStatement	"const char * s = p -> offname ( p -> user , seeki ) ;"	2633:4:63769:63812	5137220	0	True				
ANR	5141480	IdentifierDecl	"* s = p -> offname ( p -> user , seeki )"		5137220	0					
ANR	5141481	IdentifierDeclType	const char *		5137220	0					
ANR	5141482	Identifier	s		5137220	1					
ANR	5141483	AssignmentExpression	"* s = p -> offname ( p -> user , seeki )"		5137220	2		=			
ANR	5141484	Identifier	s		5137220	0					
ANR	5141485	CallExpression	"p -> offname ( p -> user , seeki )"		5137220	1					
ANR	5141486	Callee	p -> offname		5137220	0					
ANR	5141487	PtrMemberAccess	p -> offname		5137220	0					
ANR	5141488	Identifier	p		5137220	0					
ANR	5141489	Identifier	offname		5137220	1					
ANR	5141490	ArgumentList	p -> user		5137220	1					
ANR	5141491	Argument	p -> user		5137220	0					
ANR	5141492	PtrMemberAccess	p -> user		5137220	0					
ANR	5141493	Identifier	p		5137220	0					
ANR	5141494	Identifier	user		5137220	1					
ANR	5141495	Argument	seeki		5137220	1					
ANR	5141496	Identifier	seeki		5137220	0					
ANR	5141497	IfStatement	if ( s )		5137220	1					
ANR	5141498	Condition	s	2634:8:63822:63822	5137220	0	True				
ANR	5141499	Identifier	s		5137220	0					
ANR	5141500	CompoundStatement		757:11:18877:18877	5137220	1					
ANR	5141501	ExpressionStatement	"p -> cb_printf ( ""@(%s)"" , s )"	2635:5:63832:63857	5137220	0	True				
ANR	5141502	CallExpression	"p -> cb_printf ( ""@(%s)"" , s )"		5137220	0					
ANR	5141503	Callee	p -> cb_printf		5137220	0					
ANR	5141504	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141505	Identifier	p		5137220	0					
ANR	5141506	Identifier	cb_printf		5137220	1					
ANR	5141507	ArgumentList	"""@(%s)"""		5137220	1					
ANR	5141508	Argument	"""@(%s)"""		5137220	0					
ANR	5141509	PrimaryExpression	"""@(%s)"""		5137220	0					
ANR	5141510	Argument	s		5137220	1					
ANR	5141511	Identifier	s		5137220	0					
ANR	5141512	ExpressionStatement	"s = p -> offname ( p -> user , addr )"	2637:4:63869:63899	5137220	2	True				
ANR	5141513	AssignmentExpression	"s = p -> offname ( p -> user , addr )"		5137220	0		=			
ANR	5141514	Identifier	s		5137220	0					
ANR	5141515	CallExpression	"p -> offname ( p -> user , addr )"		5137220	1					
ANR	5141516	Callee	p -> offname		5137220	0					
ANR	5141517	PtrMemberAccess	p -> offname		5137220	0					
ANR	5141518	Identifier	p		5137220	0					
ANR	5141519	Identifier	offname		5137220	1					
ANR	5141520	ArgumentList	p -> user		5137220	1					
ANR	5141521	Argument	p -> user		5137220	0					
ANR	5141522	PtrMemberAccess	p -> user		5137220	0					
ANR	5141523	Identifier	p		5137220	0					
ANR	5141524	Identifier	user		5137220	1					
ANR	5141525	Argument	addr		5137220	1					
ANR	5141526	Identifier	addr		5137220	0					
ANR	5141527	IfStatement	if ( s )		5137220	3					
ANR	5141528	Condition	s	2638:8:63909:63909	5137220	0	True				
ANR	5141529	Identifier	s		5137220	0					
ANR	5141530	CompoundStatement		761:11:18964:18964	5137220	1					
ANR	5141531	ExpressionStatement	"p -> cb_printf ( ""*(%s)"" , s )"	2639:5:63919:63944	5137220	0	True				
ANR	5141532	CallExpression	"p -> cb_printf ( ""*(%s)"" , s )"		5137220	0					
ANR	5141533	Callee	p -> cb_printf		5137220	0					
ANR	5141534	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141535	Identifier	p		5137220	0					
ANR	5141536	Identifier	cb_printf		5137220	1					
ANR	5141537	ArgumentList	"""*(%s)"""		5137220	1					
ANR	5141538	Argument	"""*(%s)"""		5137220	0					
ANR	5141539	PrimaryExpression	"""*(%s)"""		5137220	0					
ANR	5141540	Argument	s		5137220	1					
ANR	5141541	Identifier	s		5137220	0					
ANR	5141542	IfStatement	if ( ! noline && tmp != 'D' && ! invalid && ! fmtname && MUSTSEE )		5137220	34					
ANR	5141543	Condition	! noline && tmp != 'D' && ! invalid && ! fmtname && MUSTSEE	2642:7:63964:64019	5137220	0	True				
ANR	5141544	AndExpression	! noline && tmp != 'D' && ! invalid && ! fmtname && MUSTSEE		5137220	0		&&			
ANR	5141545	UnaryOperationExpression	! noline		5137220	0					
ANR	5141546	UnaryOperator	!		5137220	0					
ANR	5141547	Identifier	noline		5137220	1					
ANR	5141548	AndExpression	tmp != 'D' && ! invalid && ! fmtname && MUSTSEE		5137220	1		&&			
ANR	5141549	EqualityExpression	tmp != 'D'		5137220	0		!=			
ANR	5141550	Identifier	tmp		5137220	0					
ANR	5141551	PrimaryExpression	'D'		5137220	1					
ANR	5141552	AndExpression	! invalid && ! fmtname && MUSTSEE		5137220	1		&&			
ANR	5141553	UnaryOperationExpression	! invalid		5137220	0					
ANR	5141554	UnaryOperator	!		5137220	0					
ANR	5141555	Identifier	invalid		5137220	1					
ANR	5141556	AndExpression	! fmtname && MUSTSEE		5137220	1		&&			
ANR	5141557	UnaryOperationExpression	! fmtname		5137220	0					
ANR	5141558	UnaryOperator	!		5137220	0					
ANR	5141559	Identifier	fmtname		5137220	1					
ANR	5141560	Identifier	MUSTSEE		5137220	1					
ANR	5141561	CompoundStatement		765:65:19074:19074	5137220	1					
ANR	5141562	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	2643:4:64028:64047	5137220	0	True				
ANR	5141563	CallExpression	"p -> cb_printf ( ""\\n"" )"		5137220	0					
ANR	5141564	Callee	p -> cb_printf		5137220	0					
ANR	5141565	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141566	Identifier	p		5137220	0					
ANR	5141567	Identifier	cb_printf		5137220	1					
ANR	5141568	ArgumentList	"""\\n"""		5137220	1					
ANR	5141569	Argument	"""\\n"""		5137220	0					
ANR	5141570	PrimaryExpression	"""\\n"""		5137220	0					
ANR	5141571	ExpressionStatement	last = tmp	2645:3:64057:64067	5137220	35	True				
ANR	5141572	AssignmentExpression	last = tmp		5137220	0		=			
ANR	5141573	Identifier	last		5137220	0					
ANR	5141574	Identifier	tmp		5137220	1					
ANR	5141575	IfStatement	if ( arg [ 0 ] == 'E' )		5137220	36					
ANR	5141576	Condition	arg [ 0 ] == 'E'	2650:7:64283:64295	5137220	0	True				
ANR	5141577	EqualityExpression	arg [ 0 ] == 'E'		5137220	0		==			
ANR	5141578	ArrayIndexing	arg [ 0 ]		5137220	0					
ANR	5141579	Identifier	arg		5137220	0					
ANR	5141580	PrimaryExpression	0		5137220	1					
ANR	5141581	PrimaryExpression	'E'		5137220	1					
ANR	5141582	CompoundStatement		778:4:19438:19481	5137220	1					
ANR	5141583	IdentifierDeclStatement	"char * end_fmt = strchr ( arg , ' ' ) ;"	2651:4:64304:64337	5137220	0	True				
ANR	5141584	IdentifierDecl	"* end_fmt = strchr ( arg , ' ' )"		5137220	0					
ANR	5141585	IdentifierDeclType	char *		5137220	0					
ANR	5141586	Identifier	end_fmt		5137220	1					
ANR	5141587	AssignmentExpression	"* end_fmt = strchr ( arg , ' ' )"		5137220	2		=			
ANR	5141588	Identifier	end_fmt		5137220	0					
ANR	5141589	CallExpression	"strchr ( arg , ' ' )"		5137220	1					
ANR	5141590	Callee	strchr		5137220	0					
ANR	5141591	Identifier	strchr		5137220	0					
ANR	5141592	ArgumentList	arg		5137220	1					
ANR	5141593	Argument	arg		5137220	0					
ANR	5141594	Identifier	arg		5137220	0					
ANR	5141595	Argument	' '		5137220	1					
ANR	5141596	PrimaryExpression	' '		5137220	0					
ANR	5141597	IfStatement	if ( ! end_fmt )		5137220	1					
ANR	5141598	Condition	! end_fmt	2652:8:64347:64354	5137220	0	True				
ANR	5141599	UnaryOperationExpression	! end_fmt		5137220	0					
ANR	5141600	UnaryOperator	!		5137220	0					
ANR	5141601	Identifier	end_fmt		5137220	1					
ANR	5141602	CompoundStatement		775:18:19409:19409	5137220	1					
ANR	5141603	GotoStatement	goto beach ;	2653:5:64364:64374	5137220	0	True				
ANR	5141604	Identifier	beach		5137220	0					
ANR	5141605	IdentifierDeclStatement	"char * next_args = strchr ( end_fmt + 1 , ' ' ) ;"	2655:4:64386:64429	5137220	2	True				
ANR	5141606	IdentifierDecl	"* next_args = strchr ( end_fmt + 1 , ' ' )"		5137220	0					
ANR	5141607	IdentifierDeclType	char *		5137220	0					
ANR	5141608	Identifier	next_args		5137220	1					
ANR	5141609	AssignmentExpression	"* next_args = strchr ( end_fmt + 1 , ' ' )"		5137220	2		=			
ANR	5141610	Identifier	next_args		5137220	0					
ANR	5141611	CallExpression	"strchr ( end_fmt + 1 , ' ' )"		5137220	1					
ANR	5141612	Callee	strchr		5137220	0					
ANR	5141613	Identifier	strchr		5137220	0					
ANR	5141614	ArgumentList	end_fmt + 1		5137220	1					
ANR	5141615	Argument	end_fmt + 1		5137220	0					
ANR	5141616	AdditiveExpression	end_fmt + 1		5137220	0		+			
ANR	5141617	Identifier	end_fmt		5137220	0					
ANR	5141618	PrimaryExpression	1		5137220	1					
ANR	5141619	Argument	' '		5137220	1					
ANR	5141620	PrimaryExpression	' '		5137220	0					
ANR	5141621	IfStatement	if ( next_args )		5137220	3					
ANR	5141622	Condition	next_args	2656:8:64439:64447	5137220	0	True				
ANR	5141623	Identifier	next_args		5137220	0					
ANR	5141624	CompoundStatement		779:19:19502:19502	5137220	1					
ANR	5141625	WhileStatement	while ( * next_args != '\\0' )		5137220	0					
ANR	5141626	Condition	* next_args != '\\0'	2657:12:64464:64481	5137220	0	True				
ANR	5141627	EqualityExpression	* next_args != '\\0'		5137220	0		!=			
ANR	5141628	UnaryOperationExpression	* next_args		5137220	0					
ANR	5141629	UnaryOperator	*		5137220	0					
ANR	5141630	Identifier	next_args		5137220	1					
ANR	5141631	PrimaryExpression	'\\0'		5137220	1					
ANR	5141632	CompoundStatement		780:32:19536:19536	5137220	1					
ANR	5141633	ExpressionStatement	* end_fmt ++ = * next_args ++	2658:6:64492:64517	5137220	0	True				
ANR	5141634	AssignmentExpression	* end_fmt ++ = * next_args ++		5137220	0		=			
ANR	5141635	UnaryOperationExpression	* end_fmt ++		5137220	0					
ANR	5141636	UnaryOperator	*		5137220	0					
ANR	5141637	PostIncDecOperationExpression	end_fmt ++		5137220	1					
ANR	5141638	Identifier	end_fmt		5137220	0					
ANR	5141639	IncDec	++		5137220	1					
ANR	5141640	UnaryOperationExpression	* next_args ++		5137220	1					
ANR	5141641	UnaryOperator	*		5137220	0					
ANR	5141642	PostIncDecOperationExpression	next_args ++		5137220	1					
ANR	5141643	Identifier	next_args		5137220	0					
ANR	5141644	IncDec	++		5137220	1					
ANR	5141645	ExpressionStatement	* end_fmt = '\\0'	2661:4:64536:64551	5137220	4	True				
ANR	5141646	AssignmentExpression	* end_fmt = '\\0'		5137220	0		=			
ANR	5141647	UnaryOperationExpression	* end_fmt		5137220	0					
ANR	5141648	UnaryOperator	*		5137220	0					
ANR	5141649	Identifier	end_fmt		5137220	1					
ANR	5141650	PrimaryExpression	'\\0'		5137220	1					
ANR	5141651	IfStatement	if ( otimes > 1 )		5137220	5					
ANR	5141652	Condition	otimes > 1	2664:6:64568:64577	5137220	0	True				
ANR	5141653	RelationalExpression	otimes > 1		5137220	0		>			
ANR	5141654	Identifier	otimes		5137220	0					
ANR	5141655	PrimaryExpression	1		5137220	1					
ANR	5141656	CompoundStatement		787:18:19632:19632	5137220	1					
ANR	5141657	IfStatement	if ( MUSTSEEJSON )		5137220	0					
ANR	5141658	Condition	MUSTSEEJSON	2665:7:64589:64599	5137220	0	True				
ANR	5141659	Identifier	MUSTSEEJSON		5137220	0					
ANR	5141660	CompoundStatement		788:20:19654:19654	5137220	1					
ANR	5141661	ExpressionStatement	"p -> cb_printf ( ""]"" )"	2666:4:64608:64626	5137220	0	True				
ANR	5141662	CallExpression	"p -> cb_printf ( ""]"" )"		5137220	0					
ANR	5141663	Callee	p -> cb_printf		5137220	0					
ANR	5141664	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141665	Identifier	p		5137220	0					
ANR	5141666	Identifier	cb_printf		5137220	1					
ANR	5141667	ArgumentList	"""]"""		5137220	1					
ANR	5141668	Argument	"""]"""		5137220	0					
ANR	5141669	PrimaryExpression	"""]"""		5137220	0					
ANR	5141670	ElseStatement	else		5137220	0					
ANR	5141671	IfStatement	if ( mode )		5137220	0					
ANR	5141672	Condition	mode	2667:14:64642:64645	5137220	0	True				
ANR	5141673	Identifier	mode		5137220	0					
ANR	5141674	CompoundStatement		790:20:19700:19700	5137220	1					
ANR	5141675	ExpressionStatement	"p -> cb_printf ( ""}\\n"" )"	2668:4:64654:64674	5137220	0	True				
ANR	5141676	CallExpression	"p -> cb_printf ( ""}\\n"" )"		5137220	0					
ANR	5141677	Callee	p -> cb_printf		5137220	0					
ANR	5141678	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141679	Identifier	p		5137220	0					
ANR	5141680	Identifier	cb_printf		5137220	1					
ANR	5141681	ArgumentList	"""}\\n"""		5137220	1					
ANR	5141682	Argument	"""}\\n"""		5137220	0					
ANR	5141683	PrimaryExpression	"""}\\n"""		5137220	0					
ANR	5141684	ExpressionStatement	arg = orig	2671:2:64687:64697	5137220	6	True				
ANR	5141685	AssignmentExpression	arg = orig		5137220	0		=			
ANR	5141686	Identifier	arg		5137220	0					
ANR	5141687	Identifier	orig		5137220	1					
ANR	5141688	ExpressionStatement	oldslide = 0	2672:2:64701:64713	5137220	7	True				
ANR	5141689	AssignmentExpression	oldslide = 0		5137220	0		=			
ANR	5141690	Identifier	oldslide		5137220	0					
ANR	5141691	PrimaryExpression	0		5137220	1					
ANR	5141692	IfStatement	if ( mode & R_PRINT_JSON && slide == 0 )		5137220	76					
ANR	5141693	Condition	mode & R_PRINT_JSON && slide == 0	2674:5:64723:64755	5137220	0	True				
ANR	5141694	AndExpression	mode & R_PRINT_JSON && slide == 0		5137220	0		&&			
ANR	5141695	BitAndExpression	mode & R_PRINT_JSON		5137220	0		&			
ANR	5141696	Identifier	mode		5137220	0					
ANR	5141697	Identifier	R_PRINT_JSON		5137220	1					
ANR	5141698	EqualityExpression	slide == 0		5137220	1		==			
ANR	5141699	Identifier	slide		5137220	0					
ANR	5141700	PrimaryExpression	0		5137220	1					
ANR	5141701	CompoundStatement		797:40:19810:19810	5137220	1					
ANR	5141702	ExpressionStatement	"p -> cb_printf ( ""]\\n"" )"	2675:2:64762:64781	5137220	0	True				
ANR	5141703	CallExpression	"p -> cb_printf ( ""]\\n"" )"		5137220	0					
ANR	5141704	Callee	p -> cb_printf		5137220	0					
ANR	5141705	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141706	Identifier	p		5137220	0					
ANR	5141707	Identifier	cb_printf		5137220	1					
ANR	5141708	ArgumentList	"""]\\n"""		5137220	1					
ANR	5141709	Argument	"""]\\n"""		5137220	0					
ANR	5141710	PrimaryExpression	"""]\\n"""		5137220	0					
ANR	5141711	IfStatement	if ( MUSTSEESTRUCT && slide == 0 )		5137220	77					
ANR	5141712	Condition	MUSTSEESTRUCT && slide == 0	2677:5:64791:64817	5137220	0	True				
ANR	5141713	AndExpression	MUSTSEESTRUCT && slide == 0		5137220	0		&&			
ANR	5141714	Identifier	MUSTSEESTRUCT		5137220	0					
ANR	5141715	EqualityExpression	slide == 0		5137220	1		==			
ANR	5141716	Identifier	slide		5137220	0					
ANR	5141717	PrimaryExpression	0		5137220	1					
ANR	5141718	CompoundStatement		800:34:19872:19872	5137220	1					
ANR	5141719	ExpressionStatement	"p -> cb_printf ( ""}\\n"" )"	2678:2:64824:64844	5137220	0	True				
ANR	5141720	CallExpression	"p -> cb_printf ( ""}\\n"" )"		5137220	0					
ANR	5141721	Callee	p -> cb_printf		5137220	0					
ANR	5141722	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141723	Identifier	p		5137220	0					
ANR	5141724	Identifier	cb_printf		5137220	1					
ANR	5141725	ArgumentList	"""}\\n"""		5137220	1					
ANR	5141726	Argument	"""}\\n"""		5137220	0					
ANR	5141727	PrimaryExpression	"""}\\n"""		5137220	0					
ANR	5141728	IfStatement	if ( mode & R_PRINT_DOT )		5137220	78					
ANR	5141729	Condition	mode & R_PRINT_DOT	2680:5:64854:64871	5137220	0	True				
ANR	5141730	BitAndExpression	mode & R_PRINT_DOT		5137220	0		&			
ANR	5141731	Identifier	mode		5137220	0					
ANR	5141732	Identifier	R_PRINT_DOT		5137220	1					
ANR	5141733	CompoundStatement		803:25:19926:19926	5137220	1					
ANR	5141734	ExpressionStatement	"p -> cb_printf ( ""\\""];\\n}\\n"" )"	2681:2:64878:64904	5137220	0	True				
ANR	5141735	CallExpression	"p -> cb_printf ( ""\\""];\\n}\\n"" )"		5137220	0					
ANR	5141736	Callee	p -> cb_printf		5137220	0					
ANR	5141737	PtrMemberAccess	p -> cb_printf		5137220	0					
ANR	5141738	Identifier	p		5137220	0					
ANR	5141739	Identifier	cb_printf		5137220	1					
ANR	5141740	ArgumentList	"""\\""];\\n}\\n"""		5137220	1					
ANR	5141741	Argument	"""\\""];\\n}\\n"""		5137220	0					
ANR	5141742	PrimaryExpression	"""\\""];\\n}\\n"""		5137220	0					
ANR	5141743	Label	beach :	2684:0:64966:64971	5137220	79	True				
ANR	5141744	Identifier	beach		5137220	0					
ANR	5141745	IfStatement	if ( slide == 0 )		5137220	80					
ANR	5141746	Condition	slide == 0	2685:5:64978:64987	5137220	0	True				
ANR	5141747	EqualityExpression	slide == 0		5137220	0		==			
ANR	5141748	Identifier	slide		5137220	0					
ANR	5141749	PrimaryExpression	0		5137220	1					
ANR	5141750	CompoundStatement		808:17:20042:20042	5137220	1					
ANR	5141751	ExpressionStatement	oldslide = 0	2686:2:64994:65006	5137220	0	True				
ANR	5141752	AssignmentExpression	oldslide = 0		5137220	0		=			
ANR	5141753	Identifier	oldslide		5137220	0					
ANR	5141754	PrimaryExpression	0		5137220	1					
ANR	5141755	ExpressionStatement	free ( internal_format )	2688:1:65012:65034	5137220	81	True				
ANR	5141756	CallExpression	free ( internal_format )		5137220	0					
ANR	5141757	Callee	free		5137220	0					
ANR	5141758	Identifier	free		5137220	0					
ANR	5141759	ArgumentList	internal_format		5137220	1					
ANR	5141760	Argument	internal_format		5137220	0					
ANR	5141761	Identifier	internal_format		5137220	0					
ANR	5141762	ExpressionStatement	free ( oarg )	2689:1:65037:65048	5137220	82	True				
ANR	5141763	CallExpression	free ( oarg )		5137220	0					
ANR	5141764	Callee	free		5137220	0					
ANR	5141765	Identifier	free		5137220	0					
ANR	5141766	ArgumentList	oarg		5137220	1					
ANR	5141767	Argument	oarg		5137220	0					
ANR	5141768	Identifier	oarg		5137220	0					
ANR	5141769	ExpressionStatement	free ( buf )	2690:1:65051:65061	5137220	83	True				
ANR	5141770	CallExpression	free ( buf )		5137220	0					
ANR	5141771	Callee	free		5137220	0					
ANR	5141772	Identifier	free		5137220	0					
ANR	5141773	ArgumentList	buf		5137220	1					
ANR	5141774	Argument	buf		5137220	0					
ANR	5141775	Identifier	buf		5137220	0					
ANR	5141776	ExpressionStatement	free ( field )	2691:1:65064:65076	5137220	84	True				
ANR	5141777	CallExpression	free ( field )		5137220	0					
ANR	5141778	Callee	free		5137220	0					
ANR	5141779	Identifier	free		5137220	0					
ANR	5141780	ArgumentList	field		5137220	1					
ANR	5141781	Argument	field		5137220	0					
ANR	5141782	Identifier	field		5137220	0					
ANR	5141783	ExpressionStatement	free ( args )	2692:1:65079:65090	5137220	85	True				
ANR	5141784	CallExpression	free ( args )		5137220	0					
ANR	5141785	Callee	free		5137220	0					
ANR	5141786	Identifier	free		5137220	0					
ANR	5141787	ArgumentList	args		5137220	1					
ANR	5141788	Argument	args		5137220	0					
ANR	5141789	Identifier	args		5137220	0					
ANR	5141790	ReturnStatement	return i ;	2693:1:65093:65101	5137220	86	True				
ANR	5141791	Identifier	i		5137220	0					
ANR	5141792	ReturnType	R_API int		5137220	1					
ANR	5141793	Identifier	r_print_format		5137220	2					
ANR	5141794	ParameterList	"RPrint * p , ut64 seek , const ut8 * b , const int len , const char * formatname , int mode , const char * setval , char * ofield"		5137220	3					
ANR	5141795	Parameter	RPrint * p	1877:25:44826:44834	5137220	0	True				
ANR	5141796	ParameterType	RPrint *		5137220	0					
ANR	5141797	Identifier	p		5137220	1					
ANR	5141798	Parameter	ut64 seek	1877:36:44837:44845	5137220	1	True				
ANR	5141799	ParameterType	ut64		5137220	0					
ANR	5141800	Identifier	seek		5137220	1					
ANR	5141801	Parameter	const ut8 * b	1877:47:44848:44859	5137220	2	True				
ANR	5141802	ParameterType	const ut8 *		5137220	0					
ANR	5141803	Identifier	b		5137220	1					
ANR	5141804	Parameter	const int len	1877:61:44862:44874	5137220	3	True				
ANR	5141805	ParameterType	const int		5137220	0					
ANR	5141806	Identifier	len		5137220	1					
ANR	5141807	Parameter	const char * formatname	1878:2:44879:44900	5137220	4	True				
ANR	5141808	ParameterType	const char *		5137220	0					
ANR	5141809	Identifier	formatname		5137220	1					
ANR	5141810	Parameter	int mode	1878:26:44903:44910	5137220	5	True				
ANR	5141811	ParameterType	int		5137220	0					
ANR	5141812	Identifier	mode		5137220	1					
ANR	5141813	Parameter	const char * setval	1878:36:44913:44930	5137220	6	True				
ANR	5141814	ParameterType	const char *		5137220	0					
ANR	5141815	Identifier	setval		5137220	1					
ANR	5141816	Parameter	char * ofield	1878:56:44933:44944	5137220	7	True				
ANR	5141817	ParameterType	char *		5137220	0					
ANR	5141818	Identifier	ofield		5137220	1					
ANR	5141819	CFGEntryNode	ENTRY		5137220		True				
ANR	5141820	CFGExitNode	EXIT		5137220		True				
ANR	5141821	Symbol	p -> iob . read_at		5137220						
ANR	5141822	Symbol	~R_PRINT_UNIONMODE		5137220						
ANR	5141823	Symbol	oldslide		5137220						
ANR	5141824	Symbol	ident		5137220						
ANR	5141825	Symbol	r_print_format_struct_size		5137220						
ANR	5141826	Symbol	strchr		5137220						
ANR	5141827	Symbol	get_args_offset		5137220						
ANR	5141828	Symbol	* next_args		5137220						
ANR	5141829	Symbol	* dot		5137220						
ANR	5141830	Symbol	type		5137220						
ANR	5141831	Symbol	endian		5137220						
ANR	5141832	Symbol	strncmp		5137220						
ANR	5141833	Symbol	end_fmt		5137220						
ANR	5141834	Symbol	p -> formats		5137220						
ANR	5141835	Symbol	* fmtname		5137220						
ANR	5141836	Symbol	len		5137220						
ANR	5141837	Symbol	tmp		5137220						
ANR	5141838	Symbol	p -> offname		5137220						
ANR	5141839	Symbol	NOPTR		5137220						
ANR	5141840	Symbol	get_format_type		5137220						
ANR	5141841	Symbol	R_PRINT_SEEFLAGS		5137220						
ANR	5141842	Symbol	r_print_format_10bytes		5137220						
ANR	5141843	Symbol	r_str_word_set0_stack		5137220						
ANR	5141844	Symbol	* bracket		5137220						
ANR	5141845	Symbol	MUSTSEESTRUCT		5137220						
ANR	5141846	Symbol	* fieldname		5137220						
ANR	5141847	Symbol	p -> bits		5137220						
ANR	5141848	Symbol	STRUCTFLAG		5137220						
ANR	5141849	Symbol	newname		5137220						
ANR	5141850	Symbol	next_args		5137220						
ANR	5141851	Symbol	R_PRINT_QUIET		5137220						
ANR	5141852	Symbol	p -> iob		5137220						
ANR	5141853	Symbol	field		5137220						
ANR	5141854	Symbol	size		5137220						
ANR	5141855	Symbol	slide		5137220						
ANR	5141856	Symbol	* ( arg + 1 )		5137220						
ANR	5141857	Symbol	noline		5137220						
ANR	5141858	Symbol	r_print_format_disasm		5137220						
ANR	5141859	Symbol	invalid		5137220						
ANR	5141860	Symbol	argend		5137220						
ANR	5141861	Symbol	ISSTRUCT		5137220						
ANR	5141862	Symbol	nxtfield		5137220						
ANR	5141863	Symbol	* arg		5137220						
ANR	5141864	Symbol	R_PRINT_ISFIELD		5137220						
ANR	5141865	Symbol	dot		5137220						
ANR	5141866	Symbol	seek		5137220						
ANR	5141867	Symbol	r_print_format_uleb		5137220						
ANR	5141868	Symbol	SEEVALUE		5137220						
ANR	5141869	Symbol	arg		5137220						
ANR	5141870	Symbol	R_PRINT_DOT		5137220						
ANR	5141871	Symbol	addr64		5137220						
ANR	5141872	Symbol	PTRBACK		5137220						
ANR	5141873	Symbol	formatname		5137220						
ANR	5141874	Symbol	internal_format		5137220						
ANR	5141875	Symbol	r_wstr_clen		5137220						
ANR	5141876	Symbol	atoi		5137220						
ANR	5141877	Symbol	R_PRINT_STRUCT		5137220						
ANR	5141878	Symbol	b		5137220						
ANR	5141879	Symbol	& addr		5137220						
ANR	5141880	Symbol	NULLPTR		5137220						
ANR	5141881	Symbol	sz		5137220						
ANR	5141882	Symbol	i		5137220						
ANR	5141883	Symbol	j		5137220						
ANR	5141884	Symbol	r_str_word_get0		5137220						
ANR	5141885	Symbol	l		5137220						
ANR	5141886	Symbol	STRUCTPTR		5137220						
ANR	5141887	Symbol	IS_DIGIT		5137220						
ANR	5141888	Symbol	p		5137220						
ANR	5141889	Symbol	nargs		5137220						
ANR	5141890	Symbol	buf		5137220						
ANR	5141891	Symbol	s		5137220						
ANR	5141892	Symbol	seeki		5137220						
ANR	5141893	Symbol	orig		5137220						
ANR	5141894	Symbol	isptr		5137220						
ANR	5141895	Symbol	setval		5137220						
ANR	5141896	Symbol	first		5137220						
ANR	5141897	Symbol	p -> user		5137220						
ANR	5141898	Symbol	namefmt		5137220						
ANR	5141899	Symbol	IS_WHITECHAR		5137220						
ANR	5141900	Symbol	sign		5137220						
ANR	5141901	Symbol	fmt		5137220						
ANR	5141902	Symbol	MUSTSEE		5137220						
ANR	5141903	Symbol	* args		5137220						
ANR	5141904	Symbol	p -> iob . io		5137220						
ANR	5141905	Symbol	mode		5137220						
ANR	5141906	Symbol	strlen		5137220						
ANR	5141907	Symbol	bracket		5137220						
ANR	5141908	Symbol	* next_args ++		5137220						
ANR	5141909	Symbol	R_PRINT_UNIONMODE		5137220						
ANR	5141910	Symbol	r_get_size		5137220						
ANR	5141911	Symbol	viewflags		5137220						
ANR	5141912	Symbol	elem		5137220						
ANR	5141913	Symbol	NULL		5137220						
ANR	5141914	Symbol	last		5137220						
ANR	5141915	Symbol	R_PRINT_MUSTSEE		5137220						
ANR	5141916	Symbol	MINUSONE		5137220						
ANR	5141917	Symbol	format		5137220						
ANR	5141918	Symbol	* end_fmt ++		5137220						
ANR	5141919	Symbol	* end_fmt		5137220						
ANR	5141920	Symbol	* formatname		5137220						
ANR	5141921	Symbol	r_print_format_string		5137220						
ANR	5141922	Symbol	THRESHOLD		5137220						
ANR	5141923	Symbol	oarg		5137220						
ANR	5141924	Symbol	PTRSEEK		5137220						
ANR	5141925	Symbol	~R_PRINT_MUSTSEE		5137220						
ANR	5141926	Symbol	true		5137220						
ANR	5141927	Symbol	* end		5137220						
ANR	5141928	Symbol	maxl		5137220						
ANR	5141929	Symbol	idx		5137220						
ANR	5141930	Symbol	nm		5137220						
ANR	5141931	Symbol	& addr64		5137220						
ANR	5141932	Symbol	NESTEDSTRUCT		5137220						
ANR	5141933	Symbol	* fmt		5137220						
ANR	5141934	Symbol	p -> num		5137220						
ANR	5141935	Symbol	~R_PRINT_ISFIELD		5137220						
ANR	5141936	Symbol	fmtname		5137220						
ANR	5141937	Symbol	otimes		5137220						
ANR	5141938	Symbol	calloc		5137220						
ANR	5141939	Symbol	ISQUIET		5137220						
ANR	5141940	Symbol	fs		5137220						
ANR	5141941	Symbol	old_bits		5137220						
ANR	5141942	Symbol	r_num_math		5137220						
ANR	5141943	Symbol	times		5137220						
ANR	5141944	Symbol	ofield		5137220						
ANR	5141945	Symbol	R_PRINT_JSON		5137220						
ANR	5141946	Symbol	ends		5137220						
ANR	5141947	Symbol	* fieldname ++		5137220						
ANR	5141948	Symbol	end		5137220						
ANR	5141949	Symbol	oi		5137220						
ANR	5141950	Symbol	addr		5137220						
ANR	5141951	Symbol	anon		5137220						
ANR	5141952	Symbol	MUSTSEEJSON		5137220						
ANR	5141953	Symbol	false		5137220						
ANR	5141954	Symbol	sdb_get		5137220						
ANR	5141955	Symbol	r_print_format_struct		5137220						
ANR	5141956	Symbol	nexti		5137220						
ANR	5141957	Symbol	args		5137220						
ANR	5141958	Symbol	fieldname		5137220						
ANR	5141959	Symbol	ARRAYINDEX_COEF		5137220						
ANR	5141960	Symbol	p -> big_endian		5137220						
ANR	5141961	Symbol	r_print_format_hexpairs		5137220						
ANR	5141962	Symbol	bytes		5137220						
ANR	5141963	Symbol	* p		5137220						
ANR	5141964	Symbol	r_str_rchr		5137220						
ANR	5141965	Symbol	strdup		5137220						
