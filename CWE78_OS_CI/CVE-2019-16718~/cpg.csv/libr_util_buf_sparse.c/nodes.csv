command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5100511	File	data/converged/CVE-2019-16718~_radare2/libr_util_buf_sparse.c								
ANR	5100512	ClassDef	buf_sparse_priv	3:0:21:76							
ANR	5100513	DeclStmt									
ANR	5100514	Decl							RList	RList *	sparse
ANR	5100515	DeclStmt									
ANR	5100516	Decl							ut64	ut64	offset
ANR	5100517	Function	buffer_sparse_free	8:0:80:190							
ANR	5100518	FunctionDef	buffer_sparse_free (void * a)		5100517	0					
ANR	5100519	CompoundStatement		8:40:120:190	5100517	0					
ANR	5100520	IdentifierDeclStatement	RBufferSparse * s = ( RBufferSparse * ) a ;	9:1:123:160	5100517	0	True				
ANR	5100521	IdentifierDecl	* s = ( RBufferSparse * ) a		5100517	0					
ANR	5100522	IdentifierDeclType	RBufferSparse *		5100517	0					
ANR	5100523	Identifier	s		5100517	1					
ANR	5100524	AssignmentExpression	* s = ( RBufferSparse * ) a		5100517	2		=			
ANR	5100525	Identifier	s		5100517	0					
ANR	5100526	CastExpression	( RBufferSparse * ) a		5100517	1					
ANR	5100527	CastTarget	RBufferSparse *		5100517	0					
ANR	5100528	Identifier	a		5100517	1					
ANR	5100529	ExpressionStatement	free ( s -> data )	10:1:163:177	5100517	1	True				
ANR	5100530	CallExpression	free ( s -> data )		5100517	0					
ANR	5100531	Callee	free		5100517	0					
ANR	5100532	Identifier	free		5100517	0					
ANR	5100533	ArgumentList	s -> data		5100517	1					
ANR	5100534	Argument	s -> data		5100517	0					
ANR	5100535	PtrMemberAccess	s -> data		5100517	0					
ANR	5100536	Identifier	s		5100517	0					
ANR	5100537	Identifier	data		5100517	1					
ANR	5100538	ExpressionStatement	free ( s )	11:1:180:188	5100517	2	True				
ANR	5100539	CallExpression	free ( s )		5100517	0					
ANR	5100540	Callee	free		5100517	0					
ANR	5100541	Identifier	free		5100517	0					
ANR	5100542	ArgumentList	s		5100517	1					
ANR	5100543	Argument	s		5100517	0					
ANR	5100544	Identifier	s		5100517	0					
ANR	5100545	ReturnType	static void		5100517	1					
ANR	5100546	Identifier	buffer_sparse_free		5100517	2					
ANR	5100547	ParameterList	void * a		5100517	3					
ANR	5100548	Parameter	void * a	8:31:111:117	5100517	0	True				
ANR	5100549	ParameterType	void *		5100517	0					
ANR	5100550	Identifier	a		5100517	1					
ANR	5100551	CFGEntryNode	ENTRY		5100517		True				
ANR	5100552	CFGExitNode	EXIT		5100517		True				
ANR	5100553	Symbol	a		5100517						
ANR	5100554	Symbol	s		5100517						
ANR	5100555	Symbol	s -> data		5100517						
ANR	5100556	Symbol	* s		5100517						
ANR	5100557	Function	sparse_limits	14:0:193:479							
ANR	5100558	FunctionDef	"sparse_limits (RList * l , ut64 * max)"		5100557	0					
ANR	5100559	CompoundStatement		14:47:240:479	5100557	0					
ANR	5100560	IdentifierDeclStatement	bool set = false ;	15:1:243:259	5100557	0	True				
ANR	5100561	IdentifierDecl	set = false		5100557	0					
ANR	5100562	IdentifierDeclType	bool		5100557	0					
ANR	5100563	Identifier	set		5100557	1					
ANR	5100564	AssignmentExpression	set = false		5100557	2		=			
ANR	5100565	Identifier	false		5100557	0					
ANR	5100566	Identifier	false		5100557	1					
ANR	5100567	IdentifierDeclStatement	RBufferSparse * s ;	16:1:262:278	5100557	1	True				
ANR	5100568	IdentifierDecl	* s		5100557	0					
ANR	5100569	IdentifierDeclType	RBufferSparse *		5100557	0					
ANR	5100570	Identifier	s		5100557	1					
ANR	5100571	IdentifierDeclStatement	RListIter * iter ;	17:1:281:296	5100557	2	True				
ANR	5100572	IdentifierDecl	* iter		5100557	0					
ANR	5100573	IdentifierDeclType	RListIter *		5100557	0					
ANR	5100574	Identifier	iter		5100557	1					
ANR	5100575	Statement	r_list_foreach	19:1:300:313	5100557	3	True				
ANR	5100576	Statement	(	19:16:315:315	5100557	4	True				
ANR	5100577	Statement	l	19:17:316:316	5100557	5	True				
ANR	5100578	Statement	","	19:18:317:317	5100557	6	True				
ANR	5100579	Statement	iter	19:20:319:322	5100557	7	True				
ANR	5100580	Statement	","	19:24:323:323	5100557	8	True				
ANR	5100581	Statement	s	19:26:325:325	5100557	9	True				
ANR	5100582	Statement	)	19:27:326:326	5100557	10	True				
ANR	5100583	CompoundStatement		6:29:87:87	5100557	11					
ANR	5100584	IfStatement	if ( set )		5100557	0					
ANR	5100585	Condition	set	20:6:336:338	5100557	0	True				
ANR	5100586	Identifier	set		5100557	0					
ANR	5100587	CompoundStatement		7:11:100:100	5100557	1					
ANR	5100588	IfStatement	if ( max && s -> to > * max )		5100557	0					
ANR	5100589	Condition	max && s -> to > * max	21:7:350:368	5100557	0	True				
ANR	5100590	AndExpression	max && s -> to > * max		5100557	0		&&			
ANR	5100591	Identifier	max		5100557	0					
ANR	5100592	RelationalExpression	s -> to > * max		5100557	1		>			
ANR	5100593	PtrMemberAccess	s -> to		5100557	0					
ANR	5100594	Identifier	s		5100557	0					
ANR	5100595	Identifier	to		5100557	1					
ANR	5100596	UnaryOperationExpression	* max		5100557	1					
ANR	5100597	UnaryOperator	*		5100557	0					
ANR	5100598	Identifier	max		5100557	1					
ANR	5100599	CompoundStatement		8:28:130:130	5100557	1					
ANR	5100600	ExpressionStatement	* max = s -> to	22:4:377:389	5100557	0	True				
ANR	5100601	AssignmentExpression	* max = s -> to		5100557	0		=			
ANR	5100602	UnaryOperationExpression	* max		5100557	0					
ANR	5100603	UnaryOperator	*		5100557	0					
ANR	5100604	Identifier	max		5100557	1					
ANR	5100605	PtrMemberAccess	s -> to		5100557	1					
ANR	5100606	Identifier	s		5100557	0					
ANR	5100607	Identifier	to		5100557	1					
ANR	5100608	ElseStatement	else		5100557	0					
ANR	5100609	CompoundStatement		11:9:164:164	5100557	0					
ANR	5100610	ExpressionStatement	set = true	25:3:410:420	5100557	0	True				
ANR	5100611	AssignmentExpression	set = true		5100557	0		=			
ANR	5100612	Identifier	set		5100557	0					
ANR	5100613	Identifier	true		5100557	1					
ANR	5100614	IfStatement	if ( max )		5100557	1					
ANR	5100615	Condition	max	26:7:429:431	5100557	0	True				
ANR	5100616	Identifier	max		5100557	0					
ANR	5100617	CompoundStatement		13:12:193:193	5100557	1					
ANR	5100618	ExpressionStatement	* max = s -> to	27:4:440:452	5100557	0	True				
ANR	5100619	AssignmentExpression	* max = s -> to		5100557	0		=			
ANR	5100620	UnaryOperationExpression	* max		5100557	0					
ANR	5100621	UnaryOperator	*		5100557	0					
ANR	5100622	Identifier	max		5100557	1					
ANR	5100623	PtrMemberAccess	s -> to		5100557	1					
ANR	5100624	Identifier	s		5100557	0					
ANR	5100625	Identifier	to		5100557	1					
ANR	5100626	ReturnStatement	return set ;	31:1:467:477	5100557	12	True				
ANR	5100627	Identifier	set		5100557	0					
ANR	5100628	ReturnType	static bool		5100557	1					
ANR	5100629	Identifier	sparse_limits		5100557	2					
ANR	5100630	ParameterList	"RList * l , ut64 * max"		5100557	3					
ANR	5100631	Parameter	RList * l	14:26:219:226	5100557	0	True				
ANR	5100632	ParameterType	RList *		5100557	0					
ANR	5100633	Identifier	l		5100557	1					
ANR	5100634	Parameter	ut64 * max	14:36:229:237	5100557	1	True				
ANR	5100635	ParameterType	ut64 *		5100557	0					
ANR	5100636	Identifier	max		5100557	1					
ANR	5100637	CFGEntryNode	ENTRY		5100557		True				
ANR	5100638	CFGExitNode	EXIT		5100557		True				
ANR	5100639	Symbol	set		5100557						
ANR	5100640	Symbol	s		5100557						
ANR	5100641	Symbol	s -> to		5100557						
ANR	5100642	Symbol	max		5100557						
ANR	5100643	Symbol	false		5100557						
ANR	5100644	Symbol	true		5100557						
ANR	5100645	Symbol	iter		5100557						
ANR	5100646	Symbol	l		5100557						
ANR	5100647	Symbol	* s		5100557						
ANR	5100648	Symbol	* max		5100557						
ANR	5100649	Function	sparse_append	34:0:482:867							
ANR	5100650	FunctionDef	"sparse_append (RList * l , ut64 addr , const ut8 * data , ut64 len)"		5100649	0					
ANR	5100651	CompoundStatement		34:84:566:867	5100649	0					
ANR	5100652	IfStatement	if ( l && data )		5100649	0					
ANR	5100653	Condition	l && data	35:5:573:581	5100649	0	True				
ANR	5100654	AndExpression	l && data		5100649	0		&&			
ANR	5100655	Identifier	l		5100649	0					
ANR	5100656	Identifier	data		5100649	1					
ANR	5100657	CompoundStatement		3:2:21:62	5100649	1					
ANR	5100658	IdentifierDeclStatement	RBufferSparse * s = R_NEW0 ( RBufferSparse ) ;	36:2:588:629	5100649	0	True				
ANR	5100659	IdentifierDecl	* s = R_NEW0 ( RBufferSparse )		5100649	0					
ANR	5100660	IdentifierDeclType	RBufferSparse *		5100649	0					
ANR	5100661	Identifier	s		5100649	1					
ANR	5100662	AssignmentExpression	* s = R_NEW0 ( RBufferSparse )		5100649	2		=			
ANR	5100663	Identifier	s		5100649	0					
ANR	5100664	CallExpression	R_NEW0 ( RBufferSparse )		5100649	1					
ANR	5100665	Callee	R_NEW0		5100649	0					
ANR	5100666	Identifier	R_NEW0		5100649	0					
ANR	5100667	ArgumentList	RBufferSparse		5100649	1					
ANR	5100668	Argument	RBufferSparse		5100649	0					
ANR	5100669	Identifier	RBufferSparse		5100649	0					
ANR	5100670	IfStatement	if ( s )		5100649	1					
ANR	5100671	Condition	s	37:6:637:637	5100649	0	True				
ANR	5100672	Identifier	s		5100649	0					
ANR	5100673	CompoundStatement		4:9:73:73	5100649	1					
ANR	5100674	ExpressionStatement	"s -> data = calloc ( 1 , len )"	38:3:645:670	5100649	0	True				
ANR	5100675	AssignmentExpression	"s -> data = calloc ( 1 , len )"		5100649	0		=			
ANR	5100676	PtrMemberAccess	s -> data		5100649	0					
ANR	5100677	Identifier	s		5100649	0					
ANR	5100678	Identifier	data		5100649	1					
ANR	5100679	CallExpression	"calloc ( 1 , len )"		5100649	1					
ANR	5100680	Callee	calloc		5100649	0					
ANR	5100681	Identifier	calloc		5100649	0					
ANR	5100682	ArgumentList	1		5100649	1					
ANR	5100683	Argument	1		5100649	0					
ANR	5100684	PrimaryExpression	1		5100649	0					
ANR	5100685	Argument	len		5100649	1					
ANR	5100686	Identifier	len		5100649	0					
ANR	5100687	IfStatement	if ( s -> data )		5100649	1					
ANR	5100688	Condition	s -> data	39:7:679:685	5100649	0	True				
ANR	5100689	PtrMemberAccess	s -> data		5100649	0					
ANR	5100690	Identifier	s		5100649	0					
ANR	5100691	Identifier	data		5100649	1					
ANR	5100692	CompoundStatement		6:16:121:121	5100649	1					
ANR	5100693	ExpressionStatement	s -> from = addr	40:4:694:708	5100649	0	True				
ANR	5100694	AssignmentExpression	s -> from = addr		5100649	0		=			
ANR	5100695	PtrMemberAccess	s -> from		5100649	0					
ANR	5100696	Identifier	s		5100649	0					
ANR	5100697	Identifier	from		5100649	1					
ANR	5100698	Identifier	addr		5100649	1					
ANR	5100699	ExpressionStatement	s -> to = addr + len	41:4:714:732	5100649	1	True				
ANR	5100700	AssignmentExpression	s -> to = addr + len		5100649	0		=			
ANR	5100701	PtrMemberAccess	s -> to		5100649	0					
ANR	5100702	Identifier	s		5100649	0					
ANR	5100703	Identifier	to		5100649	1					
ANR	5100704	AdditiveExpression	addr + len		5100649	1		+			
ANR	5100705	Identifier	addr		5100649	0					
ANR	5100706	Identifier	len		5100649	1					
ANR	5100707	ExpressionStatement	s -> size = len	42:4:738:751	5100649	2	True				
ANR	5100708	AssignmentExpression	s -> size = len		5100649	0		=			
ANR	5100709	PtrMemberAccess	s -> size		5100649	0					
ANR	5100710	Identifier	s		5100649	0					
ANR	5100711	Identifier	size		5100649	1					
ANR	5100712	Identifier	len		5100649	1					
ANR	5100713	ExpressionStatement	"memcpy ( s -> data , data , len )"	43:4:757:784	5100649	3	True				
ANR	5100714	CallExpression	"memcpy ( s -> data , data , len )"		5100649	0					
ANR	5100715	Callee	memcpy		5100649	0					
ANR	5100716	Identifier	memcpy		5100649	0					
ANR	5100717	ArgumentList	s -> data		5100649	1					
ANR	5100718	Argument	s -> data		5100649	0					
ANR	5100719	PtrMemberAccess	s -> data		5100649	0					
ANR	5100720	Identifier	s		5100649	0					
ANR	5100721	Identifier	data		5100649	1					
ANR	5100722	Argument	data		5100649	1					
ANR	5100723	Identifier	data		5100649	0					
ANR	5100724	Argument	len		5100649	2					
ANR	5100725	Identifier	len		5100649	0					
ANR	5100726	ReturnStatement	"return r_list_append ( l , s ) ? s : NULL ;"	44:4:790:826	5100649	4	True				
ANR	5100727	ConditionalExpression	"r_list_append ( l , s ) ? s : NULL"		5100649	0					
ANR	5100728	Condition	"r_list_append ( l , s )"		5100649	0					
ANR	5100729	CallExpression	"r_list_append ( l , s )"		5100649	0					
ANR	5100730	Callee	r_list_append		5100649	0					
ANR	5100731	Identifier	r_list_append		5100649	0					
ANR	5100732	ArgumentList	l		5100649	1					
ANR	5100733	Argument	l		5100649	0					
ANR	5100734	Identifier	l		5100649	0					
ANR	5100735	Argument	s		5100649	1					
ANR	5100736	Identifier	s		5100649	0					
ANR	5100737	Identifier	s		5100649	1					
ANR	5100738	Identifier	NULL		5100649	2					
ANR	5100739	ExpressionStatement	free ( s )	46:3:836:844	5100649	2	True				
ANR	5100740	CallExpression	free ( s )		5100649	0					
ANR	5100741	Callee	free		5100649	0					
ANR	5100742	Identifier	free		5100649	0					
ANR	5100743	ArgumentList	s		5100649	1					
ANR	5100744	Argument	s		5100649	0					
ANR	5100745	Identifier	s		5100649	0					
ANR	5100746	ReturnStatement	return NULL ;	49:1:854:865	5100649	1	True				
ANR	5100747	Identifier	NULL		5100649	0					
ANR	5100748	ReturnType	static RBufferSparse *		5100649	1					
ANR	5100749	Identifier	sparse_append		5100649	2					
ANR	5100750	ParameterList	"RList * l , ut64 addr , const ut8 * data , ut64 len"		5100649	3					
ANR	5100751	Parameter	RList * l	34:36:518:525	5100649	0	True				
ANR	5100752	ParameterType	RList *		5100649	0					
ANR	5100753	Identifier	l		5100649	1					
ANR	5100754	Parameter	ut64 addr	34:46:528:536	5100649	1	True				
ANR	5100755	ParameterType	ut64		5100649	0					
ANR	5100756	Identifier	addr		5100649	1					
ANR	5100757	Parameter	const ut8 * data	34:57:539:553	5100649	2	True				
ANR	5100758	ParameterType	const ut8 *		5100649	0					
ANR	5100759	Identifier	data		5100649	1					
ANR	5100760	Parameter	ut64 len	34:74:556:563	5100649	3	True				
ANR	5100761	ParameterType	ut64		5100649	0					
ANR	5100762	Identifier	len		5100649	1					
ANR	5100763	CFGEntryNode	ENTRY		5100649		True				
ANR	5100764	CFGExitNode	EXIT		5100649		True				
ANR	5100765	Symbol	s -> size		5100649						
ANR	5100766	Symbol	s -> to		5100649						
ANR	5100767	Symbol	NULL		5100649						
ANR	5100768	Symbol	data		5100649						
ANR	5100769	Symbol	calloc		5100649						
ANR	5100770	Symbol	l		5100649						
ANR	5100771	Symbol	R_NEW0		5100649						
ANR	5100772	Symbol	s		5100649						
ANR	5100773	Symbol	len		5100649						
ANR	5100774	Symbol	r_list_append		5100649						
ANR	5100775	Symbol	s -> data		5100649						
ANR	5100776	Symbol	s -> from		5100649						
ANR	5100777	Symbol	RBufferSparse		5100649						
ANR	5100778	Symbol	addr		5100649						
ANR	5100779	Symbol	* s		5100649						
ANR	5100780	Function	sparse_write	53:0:919:1451							
ANR	5100781	FunctionDef	"sparse_write (RList * l , ut64 addr , const ut8 * data , ut64 len)"		5100780	0					
ANR	5100782	CompoundStatement		53:73:992:1451	5100780	0					
ANR	5100783	IdentifierDeclStatement	RBufferSparse * s ;	54:1:995:1011	5100780	0	True				
ANR	5100784	IdentifierDecl	* s		5100780	0					
ANR	5100785	IdentifierDeclType	RBufferSparse *		5100780	0					
ANR	5100786	Identifier	s		5100780	1					
ANR	5100787	IdentifierDeclStatement	RListIter * iter ;	55:1:1014:1029	5100780	1	True				
ANR	5100788	IdentifierDecl	* iter		5100780	0					
ANR	5100789	IdentifierDeclType	RListIter *		5100780	0					
ANR	5100790	Identifier	iter		5100780	1					
ANR	5100791	IdentifierDeclStatement	ut64 olen = len ;	56:1:1032:1047	5100780	2	True				
ANR	5100792	IdentifierDecl	olen = len		5100780	0					
ANR	5100793	IdentifierDeclType	ut64		5100780	0					
ANR	5100794	Identifier	olen		5100780	1					
ANR	5100795	AssignmentExpression	olen = len		5100780	2		=			
ANR	5100796	Identifier	len		5100780	0					
ANR	5100797	Identifier	len		5100780	1					
ANR	5100798	Statement	r_list_foreach	58:1:1051:1064	5100780	3	True				
ANR	5100799	Statement	(	58:16:1066:1066	5100780	4	True				
ANR	5100800	Statement	l	58:17:1067:1067	5100780	5	True				
ANR	5100801	Statement	","	58:18:1068:1068	5100780	6	True				
ANR	5100802	Statement	iter	58:20:1070:1073	5100780	7	True				
ANR	5100803	Statement	","	58:24:1074:1074	5100780	8	True				
ANR	5100804	Statement	s	58:26:1076:1076	5100780	9	True				
ANR	5100805	Statement	)	58:27:1077:1077	5100780	10	True				
ANR	5100806	CompoundStatement		6:29:86:86	5100780	11					
ANR	5100807	IfStatement	if ( addr >= s -> from && addr < s -> to )		5100780	0					
ANR	5100808	Condition	addr >= s -> from && addr < s -> to	59:6:1087:1117	5100780	0	True				
ANR	5100809	AndExpression	addr >= s -> from && addr < s -> to		5100780	0		&&			
ANR	5100810	RelationalExpression	addr >= s -> from		5100780	0		>=			
ANR	5100811	Identifier	addr		5100780	0					
ANR	5100812	PtrMemberAccess	s -> from		5100780	1					
ANR	5100813	Identifier	s		5100780	0					
ANR	5100814	Identifier	from		5100780	1					
ANR	5100815	RelationalExpression	addr < s -> to		5100780	1		<			
ANR	5100816	Identifier	addr		5100780	0					
ANR	5100817	PtrMemberAccess	s -> to		5100780	1					
ANR	5100818	Identifier	s		5100780	0					
ANR	5100819	Identifier	to		5100780	1					
ANR	5100820	CompoundStatement		9:3:164:223	5100780	1					
ANR	5100821	IdentifierDeclStatement	ut64 delta = addr - s -> from ;	60:3:1125:1152	5100780	0	True				
ANR	5100822	IdentifierDecl	delta = addr - s -> from		5100780	0					
ANR	5100823	IdentifierDeclType	ut64		5100780	0					
ANR	5100824	Identifier	delta		5100780	1					
ANR	5100825	AssignmentExpression	delta = addr - s -> from		5100780	2		=			
ANR	5100826	Identifier	delta		5100780	0					
ANR	5100827	AdditiveExpression	addr - s -> from		5100780	1		-			
ANR	5100828	Identifier	addr		5100780	0					
ANR	5100829	PtrMemberAccess	s -> from		5100780	1					
ANR	5100830	Identifier	s		5100780	0					
ANR	5100831	Identifier	from		5100780	1					
ANR	5100832	IdentifierDeclStatement	ut64 reallen = s -> size - delta >= len ? len : s -> size - delta ;	61:3:1157:1216	5100780	1	True				
ANR	5100833	IdentifierDecl	reallen = s -> size - delta >= len ? len : s -> size - delta		5100780	0					
ANR	5100834	IdentifierDeclType	ut64		5100780	0					
ANR	5100835	Identifier	reallen		5100780	1					
ANR	5100836	AssignmentExpression	reallen = s -> size - delta >= len ? len : s -> size - delta		5100780	2		=			
ANR	5100837	Identifier	reallen		5100780	0					
ANR	5100838	ConditionalExpression	s -> size - delta >= len ? len : s -> size - delta		5100780	1					
ANR	5100839	Condition	s -> size - delta >= len		5100780	0					
ANR	5100840	RelationalExpression	s -> size - delta >= len		5100780	0		>=			
ANR	5100841	AdditiveExpression	s -> size - delta		5100780	0		-			
ANR	5100842	PtrMemberAccess	s -> size		5100780	0					
ANR	5100843	Identifier	s		5100780	0					
ANR	5100844	Identifier	size		5100780	1					
ANR	5100845	Identifier	delta		5100780	1					
ANR	5100846	Identifier	len		5100780	1					
ANR	5100847	Identifier	len		5100780	1					
ANR	5100848	AdditiveExpression	s -> size - delta		5100780	2		-			
ANR	5100849	PtrMemberAccess	s -> size		5100780	0					
ANR	5100850	Identifier	s		5100780	0					
ANR	5100851	Identifier	size		5100780	1					
ANR	5100852	Identifier	delta		5100780	1					
ANR	5100853	ExpressionStatement	"memcpy ( s -> data + delta , data , reallen )"	62:3:1221:1260	5100780	2	True				
ANR	5100854	CallExpression	"memcpy ( s -> data + delta , data , reallen )"		5100780	0					
ANR	5100855	Callee	memcpy		5100780	0					
ANR	5100856	Identifier	memcpy		5100780	0					
ANR	5100857	ArgumentList	s -> data + delta		5100780	1					
ANR	5100858	Argument	s -> data + delta		5100780	0					
ANR	5100859	AdditiveExpression	s -> data + delta		5100780	0		+			
ANR	5100860	PtrMemberAccess	s -> data		5100780	0					
ANR	5100861	Identifier	s		5100780	0					
ANR	5100862	Identifier	data		5100780	1					
ANR	5100863	Identifier	delta		5100780	1					
ANR	5100864	Argument	data		5100780	1					
ANR	5100865	Identifier	data		5100780	0					
ANR	5100866	Argument	reallen		5100780	2					
ANR	5100867	Identifier	reallen		5100780	0					
ANR	5100868	ExpressionStatement	data += reallen	63:3:1265:1280	5100780	3	True				
ANR	5100869	AssignmentExpression	data += reallen		5100780	0		+=			
ANR	5100870	Identifier	data		5100780	0					
ANR	5100871	Identifier	reallen		5100780	1					
ANR	5100872	ExpressionStatement	len -= reallen	64:3:1285:1299	5100780	4	True				
ANR	5100873	AssignmentExpression	len -= reallen		5100780	0		-=			
ANR	5100874	Identifier	len		5100780	0					
ANR	5100875	Identifier	reallen		5100780	1					
ANR	5100876	ExpressionStatement	addr += reallen	65:3:1304:1319	5100780	5	True				
ANR	5100877	AssignmentExpression	addr += reallen		5100780	0		+=			
ANR	5100878	Identifier	addr		5100780	0					
ANR	5100879	Identifier	reallen		5100780	1					
ANR	5100880	IfStatement	if ( len == 0 )		5100780	1					
ANR	5100881	Condition	len == 0	67:6:1331:1338	5100780	0	True				
ANR	5100882	EqualityExpression	len == 0		5100780	0		==			
ANR	5100883	Identifier	len		5100780	0					
ANR	5100884	PrimaryExpression	0		5100780	1					
ANR	5100885	CompoundStatement		15:16:348:348	5100780	1					
ANR	5100886	ReturnStatement	return olen ;	68:3:1346:1357	5100780	0	True				
ANR	5100887	Identifier	olen		5100780	0					
ANR	5100888	IfStatement	"if ( len > 0 && ! sparse_append ( l , addr , data , len ) )"		5100780	12					
ANR	5100889	Condition	"len > 0 && ! sparse_append ( l , addr , data , len )"	71:5:1371:1416	5100780	0	True				
ANR	5100890	AndExpression	"len > 0 && ! sparse_append ( l , addr , data , len )"		5100780	0		&&			
ANR	5100891	RelationalExpression	len > 0		5100780	0		>			
ANR	5100892	Identifier	len		5100780	0					
ANR	5100893	PrimaryExpression	0		5100780	1					
ANR	5100894	UnaryOperationExpression	"! sparse_append ( l , addr , data , len )"		5100780	1					
ANR	5100895	UnaryOperator	!		5100780	0					
ANR	5100896	CallExpression	"sparse_append ( l , addr , data , len )"		5100780	1					
ANR	5100897	Callee	sparse_append		5100780	0					
ANR	5100898	Identifier	sparse_append		5100780	0					
ANR	5100899	ArgumentList	l		5100780	1					
ANR	5100900	Argument	l		5100780	0					
ANR	5100901	Identifier	l		5100780	0					
ANR	5100902	Argument	addr		5100780	1					
ANR	5100903	Identifier	addr		5100780	0					
ANR	5100904	Argument	data		5100780	2					
ANR	5100905	Identifier	data		5100780	0					
ANR	5100906	Argument	len		5100780	3					
ANR	5100907	Identifier	len		5100780	0					
ANR	5100908	CompoundStatement		19:53:426:426	5100780	1					
ANR	5100909	ReturnStatement	return - 1 ;	72:2:1423:1432	5100780	0	True				
ANR	5100910	UnaryOperationExpression	- 1		5100780	0					
ANR	5100911	UnaryOperator	-		5100780	0					
ANR	5100912	PrimaryExpression	1		5100780	1					
ANR	5100913	ReturnStatement	return olen ;	74:1:1438:1449	5100780	13	True				
ANR	5100914	Identifier	olen		5100780	0					
ANR	5100915	ReturnType	static st64		5100780	1					
ANR	5100916	Identifier	sparse_write		5100780	2					
ANR	5100917	ParameterList	"RList * l , ut64 addr , const ut8 * data , ut64 len"		5100780	3					
ANR	5100918	Parameter	RList * l	53:25:944:951	5100780	0	True				
ANR	5100919	ParameterType	RList *		5100780	0					
ANR	5100920	Identifier	l		5100780	1					
ANR	5100921	Parameter	ut64 addr	53:35:954:962	5100780	1	True				
ANR	5100922	ParameterType	ut64		5100780	0					
ANR	5100923	Identifier	addr		5100780	1					
ANR	5100924	Parameter	const ut8 * data	53:46:965:979	5100780	2	True				
ANR	5100925	ParameterType	const ut8 *		5100780	0					
ANR	5100926	Identifier	data		5100780	1					
ANR	5100927	Parameter	ut64 len	53:63:982:989	5100780	3	True				
ANR	5100928	ParameterType	ut64		5100780	0					
ANR	5100929	Identifier	len		5100780	1					
ANR	5100930	CFGEntryNode	ENTRY		5100780		True				
ANR	5100931	CFGExitNode	EXIT		5100780		True				
ANR	5100932	Symbol	sparse_append		5100780						
ANR	5100933	Symbol	s -> size		5100780						
ANR	5100934	Symbol	s -> to		5100780						
ANR	5100935	Symbol	data		5100780						
ANR	5100936	Symbol	delta		5100780						
ANR	5100937	Symbol	iter		5100780						
ANR	5100938	Symbol	l		5100780						
ANR	5100939	Symbol	olen		5100780						
ANR	5100940	Symbol	s		5100780						
ANR	5100941	Symbol	len		5100780						
ANR	5100942	Symbol	s -> data		5100780						
ANR	5100943	Symbol	s -> from		5100780						
ANR	5100944	Symbol	addr		5100780						
ANR	5100945	Symbol	* s		5100780						
ANR	5100946	Symbol	reallen		5100780						
ANR	5100947	Function	get_priv_sparse	77:0:1454:1627							
ANR	5100948	FunctionDef	get_priv_sparse (RBuffer * b)		5100947	0					
ANR	5100949	CompoundStatement		77:66:1520:1627	5100947	0					
ANR	5100950	IdentifierDeclStatement	struct buf_sparse_priv * priv = ( struct buf_sparse_priv * ) b -> priv ;	78:1:1523:1587	5100947	0	True				
ANR	5100951	IdentifierDecl	* priv = ( struct buf_sparse_priv * ) b -> priv		5100947	0					
ANR	5100952	IdentifierDeclType	struct buf_sparse_priv *		5100947	0					
ANR	5100953	Identifier	priv		5100947	1					
ANR	5100954	AssignmentExpression	* priv = ( struct buf_sparse_priv * ) b -> priv		5100947	2		=			
ANR	5100955	Identifier	priv		5100947	0					
ANR	5100956	CastExpression	( struct buf_sparse_priv * ) b -> priv		5100947	1					
ANR	5100957	CastTarget	struct buf_sparse_priv *		5100947	0					
ANR	5100958	PtrMemberAccess	b -> priv		5100947	1					
ANR	5100959	Identifier	b		5100947	0					
ANR	5100960	Identifier	priv		5100947	1					
ANR	5100961	ExpressionStatement	r_warn_if_fail ( priv )	79:1:1590:1611	5100947	1	True				
ANR	5100962	CallExpression	r_warn_if_fail ( priv )		5100947	0					
ANR	5100963	Callee	r_warn_if_fail		5100947	0					
ANR	5100964	Identifier	r_warn_if_fail		5100947	0					
ANR	5100965	ArgumentList	priv		5100947	1					
ANR	5100966	Argument	priv		5100947	0					
ANR	5100967	Identifier	priv		5100947	0					
ANR	5100968	ReturnStatement	return priv ;	80:1:1614:1625	5100947	2	True				
ANR	5100969	Identifier	priv		5100947	0					
ANR	5100970	ReturnType	static inline struct buf_sparse_priv *		5100947	1					
ANR	5100971	Identifier	get_priv_sparse		5100947	2					
ANR	5100972	ParameterList	RBuffer * b		5100947	3					
ANR	5100973	Parameter	RBuffer * b	77:54:1508:1517	5100947	0	True				
ANR	5100974	ParameterType	RBuffer *		5100947	0					
ANR	5100975	Identifier	b		5100947	1					
ANR	5100976	CFGEntryNode	ENTRY		5100947		True				
ANR	5100977	CFGExitNode	EXIT		5100947		True				
ANR	5100978	Symbol	b		5100947						
ANR	5100979	Symbol	b -> priv		5100947						
ANR	5100980	Symbol	priv		5100947						
ANR	5100981	Symbol	* b		5100947						
ANR	5100982	Function	buf_sparse_init	83:0:1630:1888							
ANR	5100983	FunctionDef	"buf_sparse_init (RBuffer * b , const void * user)"		5100982	0					
ANR	5100984	CompoundStatement		83:58:1688:1888	5100982	0					
ANR	5100985	Statement	struct	84:1:1691:1696	5100982	0	True				
ANR	5100986	Statement	buf_sparse_priv	84:8:1698:1712	5100982	1	True				
ANR	5100987	Statement	*	84:24:1714:1714	5100982	2	True				
ANR	5100988	Statement	priv	84:25:1715:1718	5100982	3	True				
ANR	5100989	Statement	=	84:30:1720:1720	5100982	4	True				
ANR	5100990	Statement	R_NEW0	84:32:1722:1727	5100982	5	True				
ANR	5100991	Statement	(	84:39:1729:1729	5100982	6	True				
ANR	5100992	Statement	struct	84:40:1730:1735	5100982	7	True				
ANR	5100993	Statement	buf_sparse_priv	84:47:1737:1751	5100982	8	True				
ANR	5100994	Statement	)	84:62:1752:1752	5100982	9	True				
ANR	5100995	ExpressionStatement		84:63:1753:1753	5100982	10	True				
ANR	5100996	IfStatement	if ( ! priv )		5100982	11					
ANR	5100997	Condition	! priv	85:5:1760:1764	5100982	0	True				
ANR	5100998	UnaryOperationExpression	! priv		5100982	0					
ANR	5100999	UnaryOperator	!		5100982	0					
ANR	5101000	Identifier	priv		5100982	1					
ANR	5101001	CompoundStatement		3:12:78:78	5100982	1					
ANR	5101002	ReturnStatement	return false ;	86:2:1771:1783	5100982	0	True				
ANR	5101003	Identifier	false		5100982	0					
ANR	5101004	ExpressionStatement	priv -> sparse = r_list_newf ( buffer_sparse_free )	88:1:1789:1836	5100982	12	True				
ANR	5101005	AssignmentExpression	priv -> sparse = r_list_newf ( buffer_sparse_free )		5100982	0		=			
ANR	5101006	PtrMemberAccess	priv -> sparse		5100982	0					
ANR	5101007	Identifier	priv		5100982	0					
ANR	5101008	Identifier	sparse		5100982	1					
ANR	5101009	CallExpression	r_list_newf ( buffer_sparse_free )		5100982	1					
ANR	5101010	Callee	r_list_newf		5100982	0					
ANR	5101011	Identifier	r_list_newf		5100982	0					
ANR	5101012	ArgumentList	buffer_sparse_free		5100982	1					
ANR	5101013	Argument	buffer_sparse_free		5100982	0					
ANR	5101014	Identifier	buffer_sparse_free		5100982	0					
ANR	5101015	ExpressionStatement	priv -> offset = 0	89:1:1839:1855	5100982	13	True				
ANR	5101016	AssignmentExpression	priv -> offset = 0		5100982	0		=			
ANR	5101017	PtrMemberAccess	priv -> offset		5100982	0					
ANR	5101018	Identifier	priv		5100982	0					
ANR	5101019	Identifier	offset		5100982	1					
ANR	5101020	PrimaryExpression	0		5100982	1					
ANR	5101021	ExpressionStatement	b -> priv = priv	90:1:1858:1872	5100982	14	True				
ANR	5101022	AssignmentExpression	b -> priv = priv		5100982	0		=			
ANR	5101023	PtrMemberAccess	b -> priv		5100982	0					
ANR	5101024	Identifier	b		5100982	0					
ANR	5101025	Identifier	priv		5100982	1					
ANR	5101026	Identifier	priv		5100982	1					
ANR	5101027	ReturnStatement	return true ;	91:1:1875:1886	5100982	15	True				
ANR	5101028	Identifier	true		5100982	0					
ANR	5101029	ReturnType	static bool		5100982	1					
ANR	5101030	Identifier	buf_sparse_init		5100982	2					
ANR	5101031	ParameterList	"RBuffer * b , const void * user"		5100982	3					
ANR	5101032	Parameter	RBuffer * b	83:28:1658:1667	5100982	0	True				
ANR	5101033	ParameterType	RBuffer *		5100982	0					
ANR	5101034	Identifier	b		5100982	1					
ANR	5101035	Parameter	const void * user	83:40:1670:1685	5100982	1	True				
ANR	5101036	ParameterType	const void *		5100982	0					
ANR	5101037	Identifier	user		5100982	1					
ANR	5101038	CFGEntryNode	ENTRY		5100982		True				
ANR	5101039	CFGExitNode	EXIT		5100982		True				
ANR	5101040	Symbol	b		5100982						
ANR	5101041	Symbol	buffer_sparse_free		5100982						
ANR	5101042	Symbol	priv -> offset		5100982						
ANR	5101043	Symbol	b -> priv		5100982						
ANR	5101044	Symbol	r_list_newf		5100982						
ANR	5101045	Symbol	* priv		5100982						
ANR	5101046	Symbol	false		5100982						
ANR	5101047	Symbol	true		5100982						
ANR	5101048	Symbol	priv		5100982						
ANR	5101049	Symbol	* b		5100982						
ANR	5101050	Symbol	user		5100982						
ANR	5101051	Symbol	priv -> sparse		5100982						
ANR	5101052	Function	buf_sparse_fini	94:0:1891:2048							
ANR	5101053	FunctionDef	buf_sparse_fini (RBuffer * b)		5101052	0					
ANR	5101054	CompoundStatement		94:40:1931:2048	5101052	0					
ANR	5101055	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	95:1:1934:1984	5101052	0	True				
ANR	5101056	IdentifierDecl	* priv = get_priv_sparse ( b )		5101052	0					
ANR	5101057	IdentifierDeclType	struct buf_sparse_priv *		5101052	0					
ANR	5101058	Identifier	priv		5101052	1					
ANR	5101059	AssignmentExpression	* priv = get_priv_sparse ( b )		5101052	2		=			
ANR	5101060	Identifier	priv		5101052	0					
ANR	5101061	CallExpression	get_priv_sparse ( b )		5101052	1					
ANR	5101062	Callee	get_priv_sparse		5101052	0					
ANR	5101063	Identifier	get_priv_sparse		5101052	0					
ANR	5101064	ArgumentList	b		5101052	1					
ANR	5101065	Argument	b		5101052	0					
ANR	5101066	Identifier	b		5101052	0					
ANR	5101067	ExpressionStatement	r_list_free ( priv -> sparse )	96:1:1987:2013	5101052	1	True				
ANR	5101068	CallExpression	r_list_free ( priv -> sparse )		5101052	0					
ANR	5101069	Callee	r_list_free		5101052	0					
ANR	5101070	Identifier	r_list_free		5101052	0					
ANR	5101071	ArgumentList	priv -> sparse		5101052	1					
ANR	5101072	Argument	priv -> sparse		5101052	0					
ANR	5101073	PtrMemberAccess	priv -> sparse		5101052	0					
ANR	5101074	Identifier	priv		5101052	0					
ANR	5101075	Identifier	sparse		5101052	1					
ANR	5101076	ExpressionStatement	R_FREE ( b -> priv )	97:1:2016:2032	5101052	2	True				
ANR	5101077	CallExpression	R_FREE ( b -> priv )		5101052	0					
ANR	5101078	Callee	R_FREE		5101052	0					
ANR	5101079	Identifier	R_FREE		5101052	0					
ANR	5101080	ArgumentList	b -> priv		5101052	1					
ANR	5101081	Argument	b -> priv		5101052	0					
ANR	5101082	PtrMemberAccess	b -> priv		5101052	0					
ANR	5101083	Identifier	b		5101052	0					
ANR	5101084	Identifier	priv		5101052	1					
ANR	5101085	ReturnStatement	return true ;	98:1:2035:2046	5101052	3	True				
ANR	5101086	Identifier	true		5101052	0					
ANR	5101087	ReturnType	static bool		5101052	1					
ANR	5101088	Identifier	buf_sparse_fini		5101052	2					
ANR	5101089	ParameterList	RBuffer * b		5101052	3					
ANR	5101090	Parameter	RBuffer * b	94:28:1919:1928	5101052	0	True				
ANR	5101091	ParameterType	RBuffer *		5101052	0					
ANR	5101092	Identifier	b		5101052	1					
ANR	5101093	CFGEntryNode	ENTRY		5101052		True				
ANR	5101094	CFGExitNode	EXIT		5101052		True				
ANR	5101095	Symbol	get_priv_sparse		5101052						
ANR	5101096	Symbol	b		5101052						
ANR	5101097	Symbol	b -> priv		5101052						
ANR	5101098	Symbol	* priv		5101052						
ANR	5101099	Symbol	true		5101052						
ANR	5101100	Symbol	priv		5101052						
ANR	5101101	Symbol	* b		5101052						
ANR	5101102	Symbol	priv -> sparse		5101052						
ANR	5101103	Function	buf_sparse_resize	101:0:2051:2962							
ANR	5101104	FunctionDef	"buf_sparse_resize (RBuffer * b , ut64 newsize)"		5101103	0					
ANR	5101105	CompoundStatement		101:56:2107:2962	5101103	0					
ANR	5101106	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	102:1:2110:2160	5101103	0	True				
ANR	5101107	IdentifierDecl	* priv = get_priv_sparse ( b )		5101103	0					
ANR	5101108	IdentifierDeclType	struct buf_sparse_priv *		5101103	0					
ANR	5101109	Identifier	priv		5101103	1					
ANR	5101110	AssignmentExpression	* priv = get_priv_sparse ( b )		5101103	2		=			
ANR	5101111	Identifier	priv		5101103	0					
ANR	5101112	CallExpression	get_priv_sparse ( b )		5101103	1					
ANR	5101113	Callee	get_priv_sparse		5101103	0					
ANR	5101114	Identifier	get_priv_sparse		5101103	0					
ANR	5101115	ArgumentList	b		5101103	1					
ANR	5101116	Argument	b		5101103	0					
ANR	5101117	Identifier	b		5101103	0					
ANR	5101118	IdentifierDeclStatement	"RListIter * iter , * tmp ;"	103:1:2163:2184	5101103	1	True				
ANR	5101119	IdentifierDecl	* iter		5101103	0					
ANR	5101120	IdentifierDeclType	RListIter *		5101103	0					
ANR	5101121	Identifier	iter		5101103	1					
ANR	5101122	IdentifierDecl	* tmp		5101103	1					
ANR	5101123	IdentifierDeclType	RListIter *		5101103	0					
ANR	5101124	Identifier	tmp		5101103	1					
ANR	5101125	IdentifierDeclStatement	RBufferSparse * s ;	104:1:2187:2203	5101103	2	True				
ANR	5101126	IdentifierDecl	* s		5101103	0					
ANR	5101127	IdentifierDeclType	RBufferSparse *		5101103	0					
ANR	5101128	Identifier	s		5101103	1					
ANR	5101129	Statement	r_list_foreach_safe	106:1:2207:2225	5101103	3	True				
ANR	5101130	Statement	(	106:21:2227:2227	5101103	4	True				
ANR	5101131	Statement	priv	106:22:2228:2231	5101103	5	True				
ANR	5101132	Statement	->	106:26:2232:2233	5101103	6	True				
ANR	5101133	Statement	sparse	106:28:2234:2239	5101103	7	True				
ANR	5101134	Statement	","	106:34:2240:2240	5101103	8	True				
ANR	5101135	Statement	iter	106:36:2242:2245	5101103	9	True				
ANR	5101136	Statement	","	106:40:2246:2246	5101103	10	True				
ANR	5101137	Statement	tmp	106:42:2248:2250	5101103	11	True				
ANR	5101138	Statement	","	106:45:2251:2251	5101103	12	True				
ANR	5101139	Statement	s	106:47:2253:2253	5101103	13	True				
ANR	5101140	Statement	)	106:48:2254:2254	5101103	14	True				
ANR	5101141	CompoundStatement		6:50:148:148	5101103	15					
ANR	5101142	IfStatement	if ( s -> from >= newsize )		5101103	0					
ANR	5101143	Condition	s -> from >= newsize	107:6:2264:2281	5101103	0	True				
ANR	5101144	RelationalExpression	s -> from >= newsize		5101103	0		>=			
ANR	5101145	PtrMemberAccess	s -> from		5101103	0					
ANR	5101146	Identifier	s		5101103	0					
ANR	5101147	Identifier	from		5101103	1					
ANR	5101148	Identifier	newsize		5101103	1					
ANR	5101149	CompoundStatement		7:26:176:176	5101103	1					
ANR	5101150	ExpressionStatement	"r_list_delete ( priv -> sparse , iter )"	108:3:2289:2323	5101103	0	True				
ANR	5101151	CallExpression	"r_list_delete ( priv -> sparse , iter )"		5101103	0					
ANR	5101152	Callee	r_list_delete		5101103	0					
ANR	5101153	Identifier	r_list_delete		5101103	0					
ANR	5101154	ArgumentList	priv -> sparse		5101103	1					
ANR	5101155	Argument	priv -> sparse		5101103	0					
ANR	5101156	PtrMemberAccess	priv -> sparse		5101103	0					
ANR	5101157	Identifier	priv		5101103	0					
ANR	5101158	Identifier	sparse		5101103	1					
ANR	5101159	Argument	iter		5101103	1					
ANR	5101160	Identifier	iter		5101103	0					
ANR	5101161	ElseStatement	else		5101103	0					
ANR	5101162	IfStatement	if ( s -> to >= newsize )		5101103	0					
ANR	5101163	Condition	s -> to >= newsize	109:13:2338:2353	5101103	0	True				
ANR	5101164	RelationalExpression	s -> to >= newsize		5101103	0		>=			
ANR	5101165	PtrMemberAccess	s -> to		5101103	0					
ANR	5101166	Identifier	s		5101103	0					
ANR	5101167	Identifier	to		5101103	1					
ANR	5101168	Identifier	newsize		5101103	1					
ANR	5101169	CompoundStatement		14:3:376:413	5101103	1					
ANR	5101170	IdentifierDeclStatement	RBufferSparse * ns = R_NEW ( RBufferSparse ) ;	110:3:2361:2402	5101103	0	True				
ANR	5101171	IdentifierDecl	* ns = R_NEW ( RBufferSparse )		5101103	0					
ANR	5101172	IdentifierDeclType	RBufferSparse *		5101103	0					
ANR	5101173	Identifier	ns		5101103	1					
ANR	5101174	AssignmentExpression	* ns = R_NEW ( RBufferSparse )		5101103	2		=			
ANR	5101175	Identifier	ns		5101103	0					
ANR	5101176	CallExpression	R_NEW ( RBufferSparse )		5101103	1					
ANR	5101177	Callee	R_NEW		5101103	0					
ANR	5101178	Identifier	R_NEW		5101103	0					
ANR	5101179	ArgumentList	RBufferSparse		5101103	1					
ANR	5101180	Argument	RBufferSparse		5101103	0					
ANR	5101181	Identifier	RBufferSparse		5101103	0					
ANR	5101182	ExpressionStatement	ns -> from = s -> from	111:3:2407:2425	5101103	1	True				
ANR	5101183	AssignmentExpression	ns -> from = s -> from		5101103	0		=			
ANR	5101184	PtrMemberAccess	ns -> from		5101103	0					
ANR	5101185	Identifier	ns		5101103	0					
ANR	5101186	Identifier	from		5101103	1					
ANR	5101187	PtrMemberAccess	s -> from		5101103	1					
ANR	5101188	Identifier	s		5101103	0					
ANR	5101189	Identifier	from		5101103	1					
ANR	5101190	ExpressionStatement	ns -> to = newsize	112:3:2430:2446	5101103	2	True				
ANR	5101191	AssignmentExpression	ns -> to = newsize		5101103	0		=			
ANR	5101192	PtrMemberAccess	ns -> to		5101103	0					
ANR	5101193	Identifier	ns		5101103	0					
ANR	5101194	Identifier	to		5101103	1					
ANR	5101195	Identifier	newsize		5101103	1					
ANR	5101196	ExpressionStatement	ns -> size = ns -> to - ns -> from	113:3:2451:2479	5101103	3	True				
ANR	5101197	AssignmentExpression	ns -> size = ns -> to - ns -> from		5101103	0		=			
ANR	5101198	PtrMemberAccess	ns -> size		5101103	0					
ANR	5101199	Identifier	ns		5101103	0					
ANR	5101200	Identifier	size		5101103	1					
ANR	5101201	AdditiveExpression	ns -> to - ns -> from		5101103	1		-			
ANR	5101202	PtrMemberAccess	ns -> to		5101103	0					
ANR	5101203	Identifier	ns		5101103	0					
ANR	5101204	Identifier	to		5101103	1					
ANR	5101205	PtrMemberAccess	ns -> from		5101103	1					
ANR	5101206	Identifier	ns		5101103	0					
ANR	5101207	Identifier	from		5101103	1					
ANR	5101208	IdentifierDeclStatement	"ut8 * tmp = realloc ( s -> data , s -> size ) ;"	114:3:2484:2521	5101103	4	True				
ANR	5101209	IdentifierDecl	"* tmp = realloc ( s -> data , s -> size )"		5101103	0					
ANR	5101210	IdentifierDeclType	ut8 *		5101103	0					
ANR	5101211	Identifier	tmp		5101103	1					
ANR	5101212	AssignmentExpression	"* tmp = realloc ( s -> data , s -> size )"		5101103	2		=			
ANR	5101213	Identifier	tmp		5101103	0					
ANR	5101214	CallExpression	"realloc ( s -> data , s -> size )"		5101103	1					
ANR	5101215	Callee	realloc		5101103	0					
ANR	5101216	Identifier	realloc		5101103	0					
ANR	5101217	ArgumentList	s -> data		5101103	1					
ANR	5101218	Argument	s -> data		5101103	0					
ANR	5101219	PtrMemberAccess	s -> data		5101103	0					
ANR	5101220	Identifier	s		5101103	0					
ANR	5101221	Identifier	data		5101103	1					
ANR	5101222	Argument	s -> size		5101103	1					
ANR	5101223	PtrMemberAccess	s -> size		5101103	0					
ANR	5101224	Identifier	s		5101103	0					
ANR	5101225	Identifier	size		5101103	1					
ANR	5101226	IfStatement	if ( ! tmp )		5101103	5					
ANR	5101227	Condition	! tmp	115:7:2530:2533	5101103	0	True				
ANR	5101228	UnaryOperationExpression	! tmp		5101103	0					
ANR	5101229	UnaryOperator	!		5101103	0					
ANR	5101230	Identifier	tmp		5101103	1					
ANR	5101231	CompoundStatement		15:13:428:428	5101103	1					
ANR	5101232	ExpressionStatement	free ( ns )	116:4:2542:2551	5101103	0	True				
ANR	5101233	CallExpression	free ( ns )		5101103	0					
ANR	5101234	Callee	free		5101103	0					
ANR	5101235	Identifier	free		5101103	0					
ANR	5101236	ArgumentList	ns		5101103	1					
ANR	5101237	Argument	ns		5101103	0					
ANR	5101238	Identifier	ns		5101103	0					
ANR	5101239	ReturnStatement	return false ;	117:4:2557:2569	5101103	1	True				
ANR	5101240	Identifier	false		5101103	0					
ANR	5101241	ExpressionStatement	s -> data = NULL	120:3:2636:2650	5101103	6	True				
ANR	5101242	AssignmentExpression	s -> data = NULL		5101103	0		=			
ANR	5101243	PtrMemberAccess	s -> data		5101103	0					
ANR	5101244	Identifier	s		5101103	0					
ANR	5101245	Identifier	data		5101103	1					
ANR	5101246	Identifier	NULL		5101103	1					
ANR	5101247	ExpressionStatement	ns -> data = tmp	121:3:2655:2669	5101103	7	True				
ANR	5101248	AssignmentExpression	ns -> data = tmp		5101103	0		=			
ANR	5101249	PtrMemberAccess	ns -> data		5101103	0					
ANR	5101250	Identifier	ns		5101103	0					
ANR	5101251	Identifier	data		5101103	1					
ANR	5101252	Identifier	tmp		5101103	1					
ANR	5101253	ExpressionStatement	ns -> written = s -> written	122:3:2674:2698	5101103	8	True				
ANR	5101254	AssignmentExpression	ns -> written = s -> written		5101103	0		=			
ANR	5101255	PtrMemberAccess	ns -> written		5101103	0					
ANR	5101256	Identifier	ns		5101103	0					
ANR	5101257	Identifier	written		5101103	1					
ANR	5101258	PtrMemberAccess	s -> written		5101103	1					
ANR	5101259	Identifier	s		5101103	0					
ANR	5101260	Identifier	written		5101103	1					
ANR	5101261	ExpressionStatement	"r_list_append ( priv -> sparse , ns )"	123:3:2703:2735	5101103	9	True				
ANR	5101262	CallExpression	"r_list_append ( priv -> sparse , ns )"		5101103	0					
ANR	5101263	Callee	r_list_append		5101103	0					
ANR	5101264	Identifier	r_list_append		5101103	0					
ANR	5101265	ArgumentList	priv -> sparse		5101103	1					
ANR	5101266	Argument	priv -> sparse		5101103	0					
ANR	5101267	PtrMemberAccess	priv -> sparse		5101103	0					
ANR	5101268	Identifier	priv		5101103	0					
ANR	5101269	Identifier	sparse		5101103	1					
ANR	5101270	Argument	ns		5101103	1					
ANR	5101271	Identifier	ns		5101103	0					
ANR	5101272	ExpressionStatement	"r_list_delete ( priv -> sparse , iter )"	124:3:2740:2774	5101103	10	True				
ANR	5101273	CallExpression	"r_list_delete ( priv -> sparse , iter )"		5101103	0					
ANR	5101274	Callee	r_list_delete		5101103	0					
ANR	5101275	Identifier	r_list_delete		5101103	0					
ANR	5101276	ArgumentList	priv -> sparse		5101103	1					
ANR	5101277	Argument	priv -> sparse		5101103	0					
ANR	5101278	PtrMemberAccess	priv -> sparse		5101103	0					
ANR	5101279	Identifier	priv		5101103	0					
ANR	5101280	Identifier	sparse		5101103	1					
ANR	5101281	Argument	iter		5101103	1					
ANR	5101282	Identifier	iter		5101103	0					
ANR	5101283	IdentifierDeclStatement	ut64 max ;	127:1:2784:2792	5101103	16	True				
ANR	5101284	IdentifierDecl	max		5101103	0					
ANR	5101285	IdentifierDeclType	ut64		5101103	0					
ANR	5101286	Identifier	max		5101103	1					
ANR	5101287	ExpressionStatement	"max = sparse_limits ( priv -> sparse , & max ) ? max : 0"	128:1:2795:2843	5101103	17	True				
ANR	5101288	AssignmentExpression	"max = sparse_limits ( priv -> sparse , & max ) ? max : 0"		5101103	0		=			
ANR	5101289	Identifier	max		5101103	0					
ANR	5101290	ConditionalExpression	"sparse_limits ( priv -> sparse , & max ) ? max : 0"		5101103	1					
ANR	5101291	Condition	"sparse_limits ( priv -> sparse , & max )"		5101103	0					
ANR	5101292	CallExpression	"sparse_limits ( priv -> sparse , & max )"		5101103	0					
ANR	5101293	Callee	sparse_limits		5101103	0					
ANR	5101294	Identifier	sparse_limits		5101103	0					
ANR	5101295	ArgumentList	priv -> sparse		5101103	1					
ANR	5101296	Argument	priv -> sparse		5101103	0					
ANR	5101297	PtrMemberAccess	priv -> sparse		5101103	0					
ANR	5101298	Identifier	priv		5101103	0					
ANR	5101299	Identifier	sparse		5101103	1					
ANR	5101300	Argument	& max		5101103	1					
ANR	5101301	UnaryOperationExpression	& max		5101103	0					
ANR	5101302	UnaryOperator	&		5101103	0					
ANR	5101303	Identifier	max		5101103	1					
ANR	5101304	Identifier	max		5101103	1					
ANR	5101305	PrimaryExpression	0		5101103	2					
ANR	5101306	IfStatement	if ( max < newsize )		5101103	18					
ANR	5101307	Condition	max < newsize	129:5:2850:2862	5101103	0	True				
ANR	5101308	RelationalExpression	max < newsize		5101103	0		<			
ANR	5101309	Identifier	max		5101103	0					
ANR	5101310	Identifier	newsize		5101103	1					
ANR	5101311	CompoundStatement		29:20:757:757	5101103	1					
ANR	5101312	ReturnStatement	"return ! ! sparse_write ( priv -> sparse , newsize - 1 , ( ut8 * ) & b -> Oxff_priv , 1 ) ;"	130:2:2869:2943	5101103	0	True				
ANR	5101313	UnaryOperationExpression	"! ! sparse_write ( priv -> sparse , newsize - 1 , ( ut8 * ) & b -> Oxff_priv , 1 )"		5101103	0					
ANR	5101314	UnaryOperator	!		5101103	0					
ANR	5101315	UnaryOperationExpression	"! sparse_write ( priv -> sparse , newsize - 1 , ( ut8 * ) & b -> Oxff_priv , 1 )"		5101103	1					
ANR	5101316	UnaryOperator	!		5101103	0					
ANR	5101317	CallExpression	"sparse_write ( priv -> sparse , newsize - 1 , ( ut8 * ) & b -> Oxff_priv , 1 )"		5101103	1					
ANR	5101318	Callee	sparse_write		5101103	0					
ANR	5101319	Identifier	sparse_write		5101103	0					
ANR	5101320	ArgumentList	priv -> sparse		5101103	1					
ANR	5101321	Argument	priv -> sparse		5101103	0					
ANR	5101322	PtrMemberAccess	priv -> sparse		5101103	0					
ANR	5101323	Identifier	priv		5101103	0					
ANR	5101324	Identifier	sparse		5101103	1					
ANR	5101325	Argument	newsize - 1		5101103	1					
ANR	5101326	AdditiveExpression	newsize - 1		5101103	0		-			
ANR	5101327	Identifier	newsize		5101103	0					
ANR	5101328	PrimaryExpression	1		5101103	1					
ANR	5101329	Argument	( ut8 * ) & b -> Oxff_priv		5101103	2					
ANR	5101330	CastExpression	( ut8 * ) & b -> Oxff_priv		5101103	0					
ANR	5101331	CastTarget	ut8 *		5101103	0					
ANR	5101332	UnaryOperationExpression	& b -> Oxff_priv		5101103	1					
ANR	5101333	UnaryOperator	&		5101103	0					
ANR	5101334	PtrMemberAccess	b -> Oxff_priv		5101103	1					
ANR	5101335	Identifier	b		5101103	0					
ANR	5101336	Identifier	Oxff_priv		5101103	1					
ANR	5101337	Argument	1		5101103	3					
ANR	5101338	PrimaryExpression	1		5101103	0					
ANR	5101339	ReturnStatement	return true ;	132:1:2949:2960	5101103	19	True				
ANR	5101340	Identifier	true		5101103	0					
ANR	5101341	ReturnType	static bool		5101103	1					
ANR	5101342	Identifier	buf_sparse_resize		5101103	2					
ANR	5101343	ParameterList	"RBuffer * b , ut64 newsize"		5101103	3					
ANR	5101344	Parameter	RBuffer * b	101:30:2081:2090	5101103	0	True				
ANR	5101345	ParameterType	RBuffer *		5101103	0					
ANR	5101346	Identifier	b		5101103	1					
ANR	5101347	Parameter	ut64 newsize	101:42:2093:2104	5101103	1	True				
ANR	5101348	ParameterType	ut64		5101103	0					
ANR	5101349	Identifier	newsize		5101103	1					
ANR	5101350	CFGEntryNode	ENTRY		5101103		True				
ANR	5101351	CFGExitNode	EXIT		5101103		True				
ANR	5101352	Symbol	s -> size		5101103						
ANR	5101353	Symbol	s -> to		5101103						
ANR	5101354	Symbol	sparse_write		5101103						
ANR	5101355	Symbol	ns		5101103						
ANR	5101356	Symbol	* priv		5101103						
ANR	5101357	Symbol	realloc		5101103						
ANR	5101358	Symbol	& max		5101103						
ANR	5101359	Symbol	tmp		5101103						
ANR	5101360	Symbol	s -> data		5101103						
ANR	5101361	Symbol	s -> from		5101103						
ANR	5101362	Symbol	ns -> size		5101103						
ANR	5101363	Symbol	priv		5101103						
ANR	5101364	Symbol	RBufferSparse		5101103						
ANR	5101365	Symbol	b		5101103						
ANR	5101366	Symbol	& b -> Oxff_priv		5101103						
ANR	5101367	Symbol	NULL		5101103						
ANR	5101368	Symbol	s -> written		5101103						
ANR	5101369	Symbol	max		5101103						
ANR	5101370	Symbol	newsize		5101103						
ANR	5101371	Symbol	* ns		5101103						
ANR	5101372	Symbol	false		5101103						
ANR	5101373	Symbol	iter		5101103						
ANR	5101374	Symbol	sparse_limits		5101103						
ANR	5101375	Symbol	get_priv_sparse		5101103						
ANR	5101376	Symbol	ns -> to		5101103						
ANR	5101377	Symbol	s		5101103						
ANR	5101378	Symbol	ns -> data		5101103						
ANR	5101379	Symbol	ns -> from		5101103						
ANR	5101380	Symbol	true		5101103						
ANR	5101381	Symbol	R_NEW		5101103						
ANR	5101382	Symbol	* s		5101103						
ANR	5101383	Symbol	priv -> sparse		5101103						
ANR	5101384	Symbol	ns -> written		5101103						
ANR	5101385	Function	buf_sparse_size	135:0:2965:3124							
ANR	5101386	FunctionDef	buf_sparse_size (RBuffer * b)		5101385	0					
ANR	5101387	CompoundStatement		135:40:3005:3124	5101385	0					
ANR	5101388	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	136:1:3008:3058	5101385	0	True				
ANR	5101389	IdentifierDecl	* priv = get_priv_sparse ( b )		5101385	0					
ANR	5101390	IdentifierDeclType	struct buf_sparse_priv *		5101385	0					
ANR	5101391	Identifier	priv		5101385	1					
ANR	5101392	AssignmentExpression	* priv = get_priv_sparse ( b )		5101385	2		=			
ANR	5101393	Identifier	priv		5101385	0					
ANR	5101394	CallExpression	get_priv_sparse ( b )		5101385	1					
ANR	5101395	Callee	get_priv_sparse		5101385	0					
ANR	5101396	Identifier	get_priv_sparse		5101385	0					
ANR	5101397	ArgumentList	b		5101385	1					
ANR	5101398	Argument	b		5101385	0					
ANR	5101399	Identifier	b		5101385	0					
ANR	5101400	IdentifierDeclStatement	ut64 max ;	137:1:3061:3069	5101385	1	True				
ANR	5101401	IdentifierDecl	max		5101385	0					
ANR	5101402	IdentifierDeclType	ut64		5101385	0					
ANR	5101403	Identifier	max		5101385	1					
ANR	5101404	ReturnStatement	"return sparse_limits ( priv -> sparse , & max ) ? max : 0 ;"	139:1:3073:3122	5101385	2	True				
ANR	5101405	ConditionalExpression	"sparse_limits ( priv -> sparse , & max ) ? max : 0"		5101385	0					
ANR	5101406	Condition	"sparse_limits ( priv -> sparse , & max )"		5101385	0					
ANR	5101407	CallExpression	"sparse_limits ( priv -> sparse , & max )"		5101385	0					
ANR	5101408	Callee	sparse_limits		5101385	0					
ANR	5101409	Identifier	sparse_limits		5101385	0					
ANR	5101410	ArgumentList	priv -> sparse		5101385	1					
ANR	5101411	Argument	priv -> sparse		5101385	0					
ANR	5101412	PtrMemberAccess	priv -> sparse		5101385	0					
ANR	5101413	Identifier	priv		5101385	0					
ANR	5101414	Identifier	sparse		5101385	1					
ANR	5101415	Argument	& max		5101385	1					
ANR	5101416	UnaryOperationExpression	& max		5101385	0					
ANR	5101417	UnaryOperator	&		5101385	0					
ANR	5101418	Identifier	max		5101385	1					
ANR	5101419	Identifier	max		5101385	1					
ANR	5101420	PrimaryExpression	0		5101385	2					
ANR	5101421	ReturnType	static ut64		5101385	1					
ANR	5101422	Identifier	buf_sparse_size		5101385	2					
ANR	5101423	ParameterList	RBuffer * b		5101385	3					
ANR	5101424	Parameter	RBuffer * b	135:28:2993:3002	5101385	0	True				
ANR	5101425	ParameterType	RBuffer *		5101385	0					
ANR	5101426	Identifier	b		5101385	1					
ANR	5101427	CFGEntryNode	ENTRY		5101385		True				
ANR	5101428	CFGExitNode	EXIT		5101385		True				
ANR	5101429	Symbol	get_priv_sparse		5101385						
ANR	5101430	Symbol	b		5101385						
ANR	5101431	Symbol	max		5101385						
ANR	5101432	Symbol	* priv		5101385						
ANR	5101433	Symbol	priv		5101385						
ANR	5101434	Symbol	sparse_limits		5101385						
ANR	5101435	Symbol	priv -> sparse		5101385						
ANR	5101436	Symbol	& max		5101385						
ANR	5101437	Function	buf_sparse_read	142:0:3127:3866							
ANR	5101438	FunctionDef	"buf_sparse_read (RBuffer * b , ut8 * buf , ut64 len)"		5101437	0					
ANR	5101439	CompoundStatement		142:60:3187:3866	5101437	0					
ANR	5101440	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	143:1:3190:3240	5101437	0	True				
ANR	5101441	IdentifierDecl	* priv = get_priv_sparse ( b )		5101437	0					
ANR	5101442	IdentifierDeclType	struct buf_sparse_priv *		5101437	0					
ANR	5101443	Identifier	priv		5101437	1					
ANR	5101444	AssignmentExpression	* priv = get_priv_sparse ( b )		5101437	2		=			
ANR	5101445	Identifier	priv		5101437	0					
ANR	5101446	CallExpression	get_priv_sparse ( b )		5101437	1					
ANR	5101447	Callee	get_priv_sparse		5101437	0					
ANR	5101448	Identifier	get_priv_sparse		5101437	0					
ANR	5101449	ArgumentList	b		5101437	1					
ANR	5101450	Argument	b		5101437	0					
ANR	5101451	Identifier	b		5101437	0					
ANR	5101452	IdentifierDeclStatement	RBufferSparse * c ;	144:1:3243:3259	5101437	1	True				
ANR	5101453	IdentifierDecl	* c		5101437	0					
ANR	5101454	IdentifierDeclType	RBufferSparse *		5101437	0					
ANR	5101455	Identifier	c		5101437	1					
ANR	5101456	IdentifierDeclStatement	RListIter * iter ;	145:1:3262:3277	5101437	2	True				
ANR	5101457	IdentifierDecl	* iter		5101437	0					
ANR	5101458	IdentifierDeclType	RListIter *		5101437	0					
ANR	5101459	Identifier	iter		5101437	1					
ANR	5101460	IdentifierDeclStatement	ut64 max = 0 ;	146:1:3280:3292	5101437	3	True				
ANR	5101461	IdentifierDecl	max = 0		5101437	0					
ANR	5101462	IdentifierDeclType	ut64		5101437	0					
ANR	5101463	Identifier	max		5101437	1					
ANR	5101464	AssignmentExpression	max = 0		5101437	2		=			
ANR	5101465	Identifier	max		5101437	0					
ANR	5101466	PrimaryExpression	0		5101437	1					
ANR	5101467	ExpressionStatement	"memset ( buf , b -> Oxff_priv , len )"	148:1:3296:3327	5101437	4	True				
ANR	5101468	CallExpression	"memset ( buf , b -> Oxff_priv , len )"		5101437	0					
ANR	5101469	Callee	memset		5101437	0					
ANR	5101470	Identifier	memset		5101437	0					
ANR	5101471	ArgumentList	buf		5101437	1					
ANR	5101472	Argument	buf		5101437	0					
ANR	5101473	Identifier	buf		5101437	0					
ANR	5101474	Argument	b -> Oxff_priv		5101437	1					
ANR	5101475	PtrMemberAccess	b -> Oxff_priv		5101437	0					
ANR	5101476	Identifier	b		5101437	0					
ANR	5101477	Identifier	Oxff_priv		5101437	1					
ANR	5101478	Argument	len		5101437	2					
ANR	5101479	Identifier	len		5101437	0					
ANR	5101480	Statement	r_list_foreach	149:1:3330:3343	5101437	5	True				
ANR	5101481	Statement	(	149:16:3345:3345	5101437	6	True				
ANR	5101482	Statement	priv	149:17:3346:3349	5101437	7	True				
ANR	5101483	Statement	->	149:21:3350:3351	5101437	8	True				
ANR	5101484	Statement	sparse	149:23:3352:3357	5101437	9	True				
ANR	5101485	Statement	","	149:29:3358:3358	5101437	10	True				
ANR	5101486	Statement	iter	149:31:3360:3363	5101437	11	True				
ANR	5101487	Statement	","	149:35:3364:3364	5101437	12	True				
ANR	5101488	Statement	c	149:37:3366:3366	5101437	13	True				
ANR	5101489	Statement	)	149:38:3367:3367	5101437	14	True				
ANR	5101490	CompoundStatement		8:40:181:181	5101437	15					
ANR	5101491	IfStatement	if ( max < c -> to )		5101437	0					
ANR	5101492	Condition	max < c -> to	150:6:3377:3387	5101437	0	True				
ANR	5101493	RelationalExpression	max < c -> to		5101437	0		<			
ANR	5101494	Identifier	max		5101437	0					
ANR	5101495	PtrMemberAccess	c -> to		5101437	1					
ANR	5101496	Identifier	c		5101437	0					
ANR	5101497	Identifier	to		5101437	1					
ANR	5101498	CompoundStatement		9:19:202:202	5101437	1					
ANR	5101499	ExpressionStatement	max = c -> to	151:3:3395:3406	5101437	0	True				
ANR	5101500	AssignmentExpression	max = c -> to		5101437	0		=			
ANR	5101501	Identifier	max		5101437	0					
ANR	5101502	PtrMemberAccess	c -> to		5101437	1					
ANR	5101503	Identifier	c		5101437	0					
ANR	5101504	Identifier	to		5101437	1					
ANR	5101505	IfStatement	if ( priv -> offset < c -> to && c -> from < priv -> offset + len )		5101437	1					
ANR	5101506	Condition	priv -> offset < c -> to && c -> from < priv -> offset + len	153:6:3418:3469	5101437	0	True				
ANR	5101507	AndExpression	priv -> offset < c -> to && c -> from < priv -> offset + len		5101437	0		&&			
ANR	5101508	RelationalExpression	priv -> offset < c -> to		5101437	0		<			
ANR	5101509	PtrMemberAccess	priv -> offset		5101437	0					
ANR	5101510	Identifier	priv		5101437	0					
ANR	5101511	Identifier	offset		5101437	1					
ANR	5101512	PtrMemberAccess	c -> to		5101437	1					
ANR	5101513	Identifier	c		5101437	0					
ANR	5101514	Identifier	to		5101437	1					
ANR	5101515	RelationalExpression	c -> from < priv -> offset + len		5101437	1		<			
ANR	5101516	PtrMemberAccess	c -> from		5101437	0					
ANR	5101517	Identifier	c		5101437	0					
ANR	5101518	Identifier	from		5101437	1					
ANR	5101519	AdditiveExpression	priv -> offset + len		5101437	1		+			
ANR	5101520	PtrMemberAccess	priv -> offset		5101437	0					
ANR	5101521	Identifier	priv		5101437	0					
ANR	5101522	Identifier	offset		5101437	1					
ANR	5101523	Identifier	len		5101437	1					
ANR	5101524	CompoundStatement		12:60:284:284	5101437	1					
ANR	5101525	IfStatement	if ( priv -> offset < c -> from )		5101437	0					
ANR	5101526	Condition	priv -> offset < c -> from	154:7:3481:3502	5101437	0	True				
ANR	5101527	RelationalExpression	priv -> offset < c -> from		5101437	0		<			
ANR	5101528	PtrMemberAccess	priv -> offset		5101437	0					
ANR	5101529	Identifier	priv		5101437	0					
ANR	5101530	Identifier	offset		5101437	1					
ANR	5101531	PtrMemberAccess	c -> from		5101437	1					
ANR	5101532	Identifier	c		5101437	0					
ANR	5101533	Identifier	from		5101437	1					
ANR	5101534	CompoundStatement		14:4:323:377	5101437	1					
ANR	5101535	IdentifierDeclStatement	"ut64 l = R_MIN ( priv -> offset + len - c -> from , c -> size ) ;"	155:4:3511:3565	5101437	0	True				
ANR	5101536	IdentifierDecl	"l = R_MIN ( priv -> offset + len - c -> from , c -> size )"		5101437	0					
ANR	5101537	IdentifierDeclType	ut64		5101437	0					
ANR	5101538	Identifier	l		5101437	1					
ANR	5101539	AssignmentExpression	"l = R_MIN ( priv -> offset + len - c -> from , c -> size )"		5101437	2		=			
ANR	5101540	Identifier	l		5101437	0					
ANR	5101541	CallExpression	"R_MIN ( priv -> offset + len - c -> from , c -> size )"		5101437	1					
ANR	5101542	Callee	R_MIN		5101437	0					
ANR	5101543	Identifier	R_MIN		5101437	0					
ANR	5101544	ArgumentList	priv -> offset + len - c -> from		5101437	1					
ANR	5101545	Argument	priv -> offset + len - c -> from		5101437	0					
ANR	5101546	AdditiveExpression	priv -> offset + len - c -> from		5101437	0		+			
ANR	5101547	PtrMemberAccess	priv -> offset		5101437	0					
ANR	5101548	Identifier	priv		5101437	0					
ANR	5101549	Identifier	offset		5101437	1					
ANR	5101550	AdditiveExpression	len - c -> from		5101437	1		-			
ANR	5101551	Identifier	len		5101437	0					
ANR	5101552	PtrMemberAccess	c -> from		5101437	1					
ANR	5101553	Identifier	c		5101437	0					
ANR	5101554	Identifier	from		5101437	1					
ANR	5101555	Argument	c -> size		5101437	1					
ANR	5101556	PtrMemberAccess	c -> size		5101437	0					
ANR	5101557	Identifier	c		5101437	0					
ANR	5101558	Identifier	size		5101437	1					
ANR	5101559	ExpressionStatement	"memcpy ( buf + c -> from - priv -> offset , c -> data , l )"	156:4:3571:3620	5101437	1	True				
ANR	5101560	CallExpression	"memcpy ( buf + c -> from - priv -> offset , c -> data , l )"		5101437	0					
ANR	5101561	Callee	memcpy		5101437	0					
ANR	5101562	Identifier	memcpy		5101437	0					
ANR	5101563	ArgumentList	buf + c -> from - priv -> offset		5101437	1					
ANR	5101564	Argument	buf + c -> from - priv -> offset		5101437	0					
ANR	5101565	AdditiveExpression	buf + c -> from - priv -> offset		5101437	0		+			
ANR	5101566	Identifier	buf		5101437	0					
ANR	5101567	AdditiveExpression	c -> from - priv -> offset		5101437	1		-			
ANR	5101568	PtrMemberAccess	c -> from		5101437	0					
ANR	5101569	Identifier	c		5101437	0					
ANR	5101570	Identifier	from		5101437	1					
ANR	5101571	PtrMemberAccess	priv -> offset		5101437	1					
ANR	5101572	Identifier	priv		5101437	0					
ANR	5101573	Identifier	offset		5101437	1					
ANR	5101574	Argument	c -> data		5101437	1					
ANR	5101575	PtrMemberAccess	c -> data		5101437	0					
ANR	5101576	Identifier	c		5101437	0					
ANR	5101577	Identifier	data		5101437	1					
ANR	5101578	Argument	l		5101437	2					
ANR	5101579	Identifier	l		5101437	0					
ANR	5101580	ElseStatement	else		5101437	0					
ANR	5101581	CompoundStatement		17:4:450:492	5101437	0					
ANR	5101582	IdentifierDeclStatement	"ut64 l = R_MIN ( c -> to - priv -> offset , len ) ;"	158:4:3638:3680	5101437	0	True				
ANR	5101583	IdentifierDecl	"l = R_MIN ( c -> to - priv -> offset , len )"		5101437	0					
ANR	5101584	IdentifierDeclType	ut64		5101437	0					
ANR	5101585	Identifier	l		5101437	1					
ANR	5101586	AssignmentExpression	"l = R_MIN ( c -> to - priv -> offset , len )"		5101437	2		=			
ANR	5101587	Identifier	l		5101437	0					
ANR	5101588	CallExpression	"R_MIN ( c -> to - priv -> offset , len )"		5101437	1					
ANR	5101589	Callee	R_MIN		5101437	0					
ANR	5101590	Identifier	R_MIN		5101437	0					
ANR	5101591	ArgumentList	c -> to - priv -> offset		5101437	1					
ANR	5101592	Argument	c -> to - priv -> offset		5101437	0					
ANR	5101593	AdditiveExpression	c -> to - priv -> offset		5101437	0		-			
ANR	5101594	PtrMemberAccess	c -> to		5101437	0					
ANR	5101595	Identifier	c		5101437	0					
ANR	5101596	Identifier	to		5101437	1					
ANR	5101597	PtrMemberAccess	priv -> offset		5101437	1					
ANR	5101598	Identifier	priv		5101437	0					
ANR	5101599	Identifier	offset		5101437	1					
ANR	5101600	Argument	len		5101437	1					
ANR	5101601	Identifier	len		5101437	0					
ANR	5101602	ExpressionStatement	"memcpy ( buf , c -> data + priv -> offset - c -> from , l )"	159:4:3686:3735	5101437	1	True				
ANR	5101603	CallExpression	"memcpy ( buf , c -> data + priv -> offset - c -> from , l )"		5101437	0					
ANR	5101604	Callee	memcpy		5101437	0					
ANR	5101605	Identifier	memcpy		5101437	0					
ANR	5101606	ArgumentList	buf		5101437	1					
ANR	5101607	Argument	buf		5101437	0					
ANR	5101608	Identifier	buf		5101437	0					
ANR	5101609	Argument	c -> data + priv -> offset - c -> from		5101437	1					
ANR	5101610	AdditiveExpression	c -> data + priv -> offset - c -> from		5101437	0		+			
ANR	5101611	PtrMemberAccess	c -> data		5101437	0					
ANR	5101612	Identifier	c		5101437	0					
ANR	5101613	Identifier	data		5101437	1					
ANR	5101614	AdditiveExpression	priv -> offset - c -> from		5101437	1		-			
ANR	5101615	PtrMemberAccess	priv -> offset		5101437	0					
ANR	5101616	Identifier	priv		5101437	0					
ANR	5101617	Identifier	offset		5101437	1					
ANR	5101618	PtrMemberAccess	c -> from		5101437	1					
ANR	5101619	Identifier	c		5101437	0					
ANR	5101620	Identifier	from		5101437	1					
ANR	5101621	Argument	l		5101437	2					
ANR	5101622	Identifier	l		5101437	0					
ANR	5101623	IfStatement	if ( priv -> offset > max )		5101437	16					
ANR	5101624	Condition	priv -> offset > max	163:5:3754:3771	5101437	0	True				
ANR	5101625	RelationalExpression	priv -> offset > max		5101437	0		>			
ANR	5101626	PtrMemberAccess	priv -> offset		5101437	0					
ANR	5101627	Identifier	priv		5101437	0					
ANR	5101628	Identifier	offset		5101437	1					
ANR	5101629	Identifier	max		5101437	1					
ANR	5101630	CompoundStatement		22:25:586:586	5101437	1					
ANR	5101631	ReturnStatement	return - 1 ;	164:2:3778:3787	5101437	0	True				
ANR	5101632	UnaryOperationExpression	- 1		5101437	0					
ANR	5101633	UnaryOperator	-		5101437	0					
ANR	5101634	PrimaryExpression	1		5101437	1					
ANR	5101635	IdentifierDeclStatement	"ut64 r = R_MIN ( max - priv -> offset , len ) ;"	166:1:3793:3833	5101437	17	True				
ANR	5101636	IdentifierDecl	"r = R_MIN ( max - priv -> offset , len )"		5101437	0					
ANR	5101637	IdentifierDeclType	ut64		5101437	0					
ANR	5101638	Identifier	r		5101437	1					
ANR	5101639	AssignmentExpression	"r = R_MIN ( max - priv -> offset , len )"		5101437	2		=			
ANR	5101640	Identifier	r		5101437	0					
ANR	5101641	CallExpression	"R_MIN ( max - priv -> offset , len )"		5101437	1					
ANR	5101642	Callee	R_MIN		5101437	0					
ANR	5101643	Identifier	R_MIN		5101437	0					
ANR	5101644	ArgumentList	max - priv -> offset		5101437	1					
ANR	5101645	Argument	max - priv -> offset		5101437	0					
ANR	5101646	AdditiveExpression	max - priv -> offset		5101437	0		-			
ANR	5101647	Identifier	max		5101437	0					
ANR	5101648	PtrMemberAccess	priv -> offset		5101437	1					
ANR	5101649	Identifier	priv		5101437	0					
ANR	5101650	Identifier	offset		5101437	1					
ANR	5101651	Argument	len		5101437	1					
ANR	5101652	Identifier	len		5101437	0					
ANR	5101653	ExpressionStatement	priv -> offset += r	167:1:3836:3853	5101437	18	True				
ANR	5101654	AssignmentExpression	priv -> offset += r		5101437	0		+=			
ANR	5101655	PtrMemberAccess	priv -> offset		5101437	0					
ANR	5101656	Identifier	priv		5101437	0					
ANR	5101657	Identifier	offset		5101437	1					
ANR	5101658	Identifier	r		5101437	1					
ANR	5101659	ReturnStatement	return r ;	168:1:3856:3864	5101437	19	True				
ANR	5101660	Identifier	r		5101437	0					
ANR	5101661	ReturnType	static st64		5101437	1					
ANR	5101662	Identifier	buf_sparse_read		5101437	2					
ANR	5101663	ParameterList	"RBuffer * b , ut8 * buf , ut64 len"		5101437	3					
ANR	5101664	Parameter	RBuffer * b	142:28:3155:3164	5101437	0	True				
ANR	5101665	ParameterType	RBuffer *		5101437	0					
ANR	5101666	Identifier	b		5101437	1					
ANR	5101667	Parameter	ut8 * buf	142:40:3167:3174	5101437	1	True				
ANR	5101668	ParameterType	ut8 *		5101437	0					
ANR	5101669	Identifier	buf		5101437	1					
ANR	5101670	Parameter	ut64 len	142:50:3177:3184	5101437	2	True				
ANR	5101671	ParameterType	ut64		5101437	0					
ANR	5101672	Identifier	len		5101437	1					
ANR	5101673	CFGEntryNode	ENTRY		5101437		True				
ANR	5101674	CFGExitNode	EXIT		5101437		True				
ANR	5101675	Symbol	b		5101437						
ANR	5101676	Symbol	c		5101437						
ANR	5101677	Symbol	max		5101437						
ANR	5101678	Symbol	* priv		5101437						
ANR	5101679	Symbol	c -> from		5101437						
ANR	5101680	Symbol	iter		5101437						
ANR	5101681	Symbol	c -> size		5101437						
ANR	5101682	Symbol	R_MIN		5101437						
ANR	5101683	Symbol	b -> Oxff_priv		5101437						
ANR	5101684	Symbol	* b		5101437						
ANR	5101685	Symbol	l		5101437						
ANR	5101686	Symbol	* c		5101437						
ANR	5101687	Symbol	c -> data		5101437						
ANR	5101688	Symbol	get_priv_sparse		5101437						
ANR	5101689	Symbol	buf		5101437						
ANR	5101690	Symbol	r		5101437						
ANR	5101691	Symbol	len		5101437						
ANR	5101692	Symbol	priv -> offset		5101437						
ANR	5101693	Symbol	c -> to		5101437						
ANR	5101694	Symbol	priv		5101437						
ANR	5101695	Function	buf_sparse_write	171:0:3869:4085							
ANR	5101696	FunctionDef	"buf_sparse_write (RBuffer * b , const ut8 * buf , ut64 len)"		5101695	0					
ANR	5101697	CompoundStatement		171:67:3936:4085	5101695	0					
ANR	5101698	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	172:1:3939:3989	5101695	0	True				
ANR	5101699	IdentifierDecl	* priv = get_priv_sparse ( b )		5101695	0					
ANR	5101700	IdentifierDeclType	struct buf_sparse_priv *		5101695	0					
ANR	5101701	Identifier	priv		5101695	1					
ANR	5101702	AssignmentExpression	* priv = get_priv_sparse ( b )		5101695	2		=			
ANR	5101703	Identifier	priv		5101695	0					
ANR	5101704	CallExpression	get_priv_sparse ( b )		5101695	1					
ANR	5101705	Callee	get_priv_sparse		5101695	0					
ANR	5101706	Identifier	get_priv_sparse		5101695	0					
ANR	5101707	ArgumentList	b		5101695	1					
ANR	5101708	Argument	b		5101695	0					
ANR	5101709	Identifier	b		5101695	0					
ANR	5101710	IdentifierDeclStatement	"st64 r = sparse_write ( priv -> sparse , priv -> offset , buf , len ) ;"	173:1:3992:4052	5101695	1	True				
ANR	5101711	IdentifierDecl	"r = sparse_write ( priv -> sparse , priv -> offset , buf , len )"		5101695	0					
ANR	5101712	IdentifierDeclType	st64		5101695	0					
ANR	5101713	Identifier	r		5101695	1					
ANR	5101714	AssignmentExpression	"r = sparse_write ( priv -> sparse , priv -> offset , buf , len )"		5101695	2		=			
ANR	5101715	Identifier	r		5101695	0					
ANR	5101716	CallExpression	"sparse_write ( priv -> sparse , priv -> offset , buf , len )"		5101695	1					
ANR	5101717	Callee	sparse_write		5101695	0					
ANR	5101718	Identifier	sparse_write		5101695	0					
ANR	5101719	ArgumentList	priv -> sparse		5101695	1					
ANR	5101720	Argument	priv -> sparse		5101695	0					
ANR	5101721	PtrMemberAccess	priv -> sparse		5101695	0					
ANR	5101722	Identifier	priv		5101695	0					
ANR	5101723	Identifier	sparse		5101695	1					
ANR	5101724	Argument	priv -> offset		5101695	1					
ANR	5101725	PtrMemberAccess	priv -> offset		5101695	0					
ANR	5101726	Identifier	priv		5101695	0					
ANR	5101727	Identifier	offset		5101695	1					
ANR	5101728	Argument	buf		5101695	2					
ANR	5101729	Identifier	buf		5101695	0					
ANR	5101730	Argument	len		5101695	3					
ANR	5101731	Identifier	len		5101695	0					
ANR	5101732	ExpressionStatement	priv -> offset += r	174:1:4055:4072	5101695	2	True				
ANR	5101733	AssignmentExpression	priv -> offset += r		5101695	0		+=			
ANR	5101734	PtrMemberAccess	priv -> offset		5101695	0					
ANR	5101735	Identifier	priv		5101695	0					
ANR	5101736	Identifier	offset		5101695	1					
ANR	5101737	Identifier	r		5101695	1					
ANR	5101738	ReturnStatement	return r ;	175:1:4075:4083	5101695	3	True				
ANR	5101739	Identifier	r		5101695	0					
ANR	5101740	ReturnType	static st64		5101695	1					
ANR	5101741	Identifier	buf_sparse_write		5101695	2					
ANR	5101742	ParameterList	"RBuffer * b , const ut8 * buf , ut64 len"		5101695	3					
ANR	5101743	Parameter	RBuffer * b	171:29:3898:3907	5101695	0	True				
ANR	5101744	ParameterType	RBuffer *		5101695	0					
ANR	5101745	Identifier	b		5101695	1					
ANR	5101746	Parameter	const ut8 * buf	171:41:3910:3923	5101695	1	True				
ANR	5101747	ParameterType	const ut8 *		5101695	0					
ANR	5101748	Identifier	buf		5101695	1					
ANR	5101749	Parameter	ut64 len	171:57:3926:3933	5101695	2	True				
ANR	5101750	ParameterType	ut64		5101695	0					
ANR	5101751	Identifier	len		5101695	1					
ANR	5101752	CFGEntryNode	ENTRY		5101695		True				
ANR	5101753	CFGExitNode	EXIT		5101695		True				
ANR	5101754	Symbol	get_priv_sparse		5101695						
ANR	5101755	Symbol	b		5101695						
ANR	5101756	Symbol	buf		5101695						
ANR	5101757	Symbol	r		5101695						
ANR	5101758	Symbol	len		5101695						
ANR	5101759	Symbol	sparse_write		5101695						
ANR	5101760	Symbol	priv -> offset		5101695						
ANR	5101761	Symbol	* priv		5101695						
ANR	5101762	Symbol	priv		5101695						
ANR	5101763	Symbol	priv -> sparse		5101695						
ANR	5101764	Function	buf_sparse_seek	178:0:4088:4589							
ANR	5101765	FunctionDef	"buf_sparse_seek (RBuffer * b , st64 addr , int whence)"		5101764	0					
ANR	5101766	CompoundStatement		178:63:4151:4589	5101764	0					
ANR	5101767	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	179:1:4154:4204	5101764	0	True				
ANR	5101768	IdentifierDecl	* priv = get_priv_sparse ( b )		5101764	0					
ANR	5101769	IdentifierDeclType	struct buf_sparse_priv *		5101764	0					
ANR	5101770	Identifier	priv		5101764	1					
ANR	5101771	AssignmentExpression	* priv = get_priv_sparse ( b )		5101764	2		=			
ANR	5101772	Identifier	priv		5101764	0					
ANR	5101773	CallExpression	get_priv_sparse ( b )		5101764	1					
ANR	5101774	Callee	get_priv_sparse		5101764	0					
ANR	5101775	Identifier	get_priv_sparse		5101764	0					
ANR	5101776	ArgumentList	b		5101764	1					
ANR	5101777	Argument	b		5101764	0					
ANR	5101778	Identifier	b		5101764	0					
ANR	5101779	IdentifierDeclStatement	ut64 max ;	180:1:4207:4215	5101764	1	True				
ANR	5101780	IdentifierDecl	max		5101764	0					
ANR	5101781	IdentifierDeclType	ut64		5101764	0					
ANR	5101782	Identifier	max		5101764	1					
ANR	5101783	IfStatement	if ( addr < 0 && ( - addr ) > ( st64 ) priv -> offset )		5101764	2					
ANR	5101784	Condition	addr < 0 && ( - addr ) > ( st64 ) priv -> offset	181:5:4222:4261	5101764	0	True				
ANR	5101785	AndExpression	addr < 0 && ( - addr ) > ( st64 ) priv -> offset		5101764	0		&&			
ANR	5101786	RelationalExpression	addr < 0		5101764	0		<			
ANR	5101787	Identifier	addr		5101764	0					
ANR	5101788	PrimaryExpression	0		5101764	1					
ANR	5101789	RelationalExpression	( - addr ) > ( st64 ) priv -> offset		5101764	1		>			
ANR	5101790	UnaryOperationExpression	- addr		5101764	0					
ANR	5101791	UnaryOperator	-		5101764	0					
ANR	5101792	Identifier	addr		5101764	1					
ANR	5101793	CastExpression	( st64 ) priv -> offset		5101764	1					
ANR	5101794	CastTarget	st64		5101764	0					
ANR	5101795	PtrMemberAccess	priv -> offset		5101764	1					
ANR	5101796	Identifier	priv		5101764	0					
ANR	5101797	Identifier	offset		5101764	1					
ANR	5101798	CompoundStatement		4:47:112:112	5101764	1					
ANR	5101799	ReturnStatement	return - 1 ;	182:2:4268:4277	5101764	0	True				
ANR	5101800	UnaryOperationExpression	- 1		5101764	0					
ANR	5101801	UnaryOperator	-		5101764	0					
ANR	5101802	PrimaryExpression	1		5101764	1					
ANR	5101803	SwitchStatement	switch ( whence )		5101764	3					
ANR	5101804	Condition	whence	185:9:4292:4297	5101764	0	True				
ANR	5101805	Identifier	whence		5101764	0					
ANR	5101806	CompoundStatement		8:17:148:148	5101764	1					
ANR	5101807	Label	case R_BUF_CUR :	186:1:4303:4317	5101764	0	True				
ANR	5101808	Identifier	R_BUF_CUR		5101764	0					
ANR	5101809	ExpressionStatement	priv -> offset += addr	187:2:4321:4341	5101764	1	True				
ANR	5101810	AssignmentExpression	priv -> offset += addr		5101764	0		+=			
ANR	5101811	PtrMemberAccess	priv -> offset		5101764	0					
ANR	5101812	Identifier	priv		5101764	0					
ANR	5101813	Identifier	offset		5101764	1					
ANR	5101814	Identifier	addr		5101764	1					
ANR	5101815	BreakStatement	break ;	188:2:4345:4350	5101764	2	True				
ANR	5101816	Label	case R_BUF_SET :	189:1:4353:4367	5101764	3	True				
ANR	5101817	Identifier	R_BUF_SET		5101764	0					
ANR	5101818	ExpressionStatement	priv -> offset = addr	190:2:4371:4390	5101764	4	True				
ANR	5101819	AssignmentExpression	priv -> offset = addr		5101764	0		=			
ANR	5101820	PtrMemberAccess	priv -> offset		5101764	0					
ANR	5101821	Identifier	priv		5101764	0					
ANR	5101822	Identifier	offset		5101764	1					
ANR	5101823	Identifier	addr		5101764	1					
ANR	5101824	BreakStatement	break ;	191:2:4394:4399	5101764	5	True				
ANR	5101825	Label	case R_BUF_END :	192:1:4402:4416	5101764	6	True				
ANR	5101826	Identifier	R_BUF_END		5101764	0					
ANR	5101827	IfStatement	"if ( ! sparse_limits ( priv -> sparse , & max ) )"		5101764	7					
ANR	5101828	Condition	"! sparse_limits ( priv -> sparse , & max )"	193:6:4424:4458	5101764	0	True				
ANR	5101829	UnaryOperationExpression	"! sparse_limits ( priv -> sparse , & max )"		5101764	0					
ANR	5101830	UnaryOperator	!		5101764	0					
ANR	5101831	CallExpression	"sparse_limits ( priv -> sparse , & max )"		5101764	1					
ANR	5101832	Callee	sparse_limits		5101764	0					
ANR	5101833	Identifier	sparse_limits		5101764	0					
ANR	5101834	ArgumentList	priv -> sparse		5101764	1					
ANR	5101835	Argument	priv -> sparse		5101764	0					
ANR	5101836	PtrMemberAccess	priv -> sparse		5101764	0					
ANR	5101837	Identifier	priv		5101764	0					
ANR	5101838	Identifier	sparse		5101764	1					
ANR	5101839	Argument	& max		5101764	1					
ANR	5101840	UnaryOperationExpression	& max		5101764	0					
ANR	5101841	UnaryOperator	&		5101764	0					
ANR	5101842	Identifier	max		5101764	1					
ANR	5101843	CompoundStatement		16:43:309:309	5101764	1					
ANR	5101844	ExpressionStatement	max = 0	194:3:4466:4473	5101764	0	True				
ANR	5101845	AssignmentExpression	max = 0		5101764	0		=			
ANR	5101846	Identifier	max		5101764	0					
ANR	5101847	PrimaryExpression	0		5101764	1					
ANR	5101848	ExpressionStatement	priv -> offset = max + addr	196:2:4481:4506	5101764	8	True				
ANR	5101849	AssignmentExpression	priv -> offset = max + addr		5101764	0		=			
ANR	5101850	PtrMemberAccess	priv -> offset		5101764	0					
ANR	5101851	Identifier	priv		5101764	0					
ANR	5101852	Identifier	offset		5101764	1					
ANR	5101853	AdditiveExpression	max + addr		5101764	1		+			
ANR	5101854	Identifier	max		5101764	0					
ANR	5101855	Identifier	addr		5101764	1					
ANR	5101856	BreakStatement	break ;	197:2:4510:4515	5101764	9	True				
ANR	5101857	Label	default :	198:1:4518:4525	5101764	10	True				
ANR	5101858	Identifier	default		5101764	0					
ANR	5101859	ExpressionStatement	r_warn_if_reached ( )	199:2:4529:4549	5101764	11	True				
ANR	5101860	CallExpression	r_warn_if_reached ( )		5101764	0					
ANR	5101861	Callee	r_warn_if_reached		5101764	0					
ANR	5101862	Identifier	r_warn_if_reached		5101764	0					
ANR	5101863	ArgumentList			5101764	1					
ANR	5101864	ReturnStatement	return - 1 ;	200:2:4553:4562	5101764	12	True				
ANR	5101865	UnaryOperationExpression	- 1		5101764	0					
ANR	5101866	UnaryOperator	-		5101764	0					
ANR	5101867	PrimaryExpression	1		5101764	1					
ANR	5101868	ReturnStatement	return priv -> offset ;	202:1:4568:4587	5101764	4	True				
ANR	5101869	PtrMemberAccess	priv -> offset		5101764	0					
ANR	5101870	Identifier	priv		5101764	0					
ANR	5101871	Identifier	offset		5101764	1					
ANR	5101872	ReturnType	static st64		5101764	1					
ANR	5101873	Identifier	buf_sparse_seek		5101764	2					
ANR	5101874	ParameterList	"RBuffer * b , st64 addr , int whence"		5101764	3					
ANR	5101875	Parameter	RBuffer * b	178:28:4116:4125	5101764	0	True				
ANR	5101876	ParameterType	RBuffer *		5101764	0					
ANR	5101877	Identifier	b		5101764	1					
ANR	5101878	Parameter	st64 addr	178:40:4128:4136	5101764	1	True				
ANR	5101879	ParameterType	st64		5101764	0					
ANR	5101880	Identifier	addr		5101764	1					
ANR	5101881	Parameter	int whence	178:51:4139:4148	5101764	2	True				
ANR	5101882	ParameterType	int		5101764	0					
ANR	5101883	Identifier	whence		5101764	1					
ANR	5101884	CFGEntryNode	ENTRY		5101764		True				
ANR	5101885	CFGExitNode	EXIT		5101764		True				
ANR	5101886	Symbol	get_priv_sparse		5101764						
ANR	5101887	Symbol	b		5101764						
ANR	5101888	Symbol	priv -> offset		5101764						
ANR	5101889	Symbol	whence		5101764						
ANR	5101890	Symbol	max		5101764						
ANR	5101891	Symbol	* priv		5101764						
ANR	5101892	Symbol	priv		5101764						
ANR	5101893	Symbol	addr		5101764						
ANR	5101894	Symbol	sparse_limits		5101764						
ANR	5101895	Symbol	& max		5101764						
ANR	5101896	Symbol	priv -> sparse		5101764						
ANR	5101897	Function	buf_sparse_nonempty_list	205:0:4592:4735							
ANR	5101898	FunctionDef	buf_sparse_nonempty_list (RBuffer * b)		5101897	0					
ANR	5101899	CompoundStatement		205:51:4643:4735	5101897	0					
ANR	5101900	IdentifierDeclStatement	struct buf_sparse_priv * priv = get_priv_sparse ( b ) ;	206:1:4646:4696	5101897	0	True				
ANR	5101901	IdentifierDecl	* priv = get_priv_sparse ( b )		5101897	0					
ANR	5101902	IdentifierDeclType	struct buf_sparse_priv *		5101897	0					
ANR	5101903	Identifier	priv		5101897	1					
ANR	5101904	AssignmentExpression	* priv = get_priv_sparse ( b )		5101897	2		=			
ANR	5101905	Identifier	priv		5101897	0					
ANR	5101906	CallExpression	get_priv_sparse ( b )		5101897	1					
ANR	5101907	Callee	get_priv_sparse		5101897	0					
ANR	5101908	Identifier	get_priv_sparse		5101897	0					
ANR	5101909	ArgumentList	b		5101897	1					
ANR	5101910	Argument	b		5101897	0					
ANR	5101911	Identifier	b		5101897	0					
ANR	5101912	ReturnStatement	return r_list_clone ( priv -> sparse ) ;	207:1:4699:4733	5101897	1	True				
ANR	5101913	CallExpression	r_list_clone ( priv -> sparse )		5101897	0					
ANR	5101914	Callee	r_list_clone		5101897	0					
ANR	5101915	Identifier	r_list_clone		5101897	0					
ANR	5101916	ArgumentList	priv -> sparse		5101897	1					
ANR	5101917	Argument	priv -> sparse		5101897	0					
ANR	5101918	PtrMemberAccess	priv -> sparse		5101897	0					
ANR	5101919	Identifier	priv		5101897	0					
ANR	5101920	Identifier	sparse		5101897	1					
ANR	5101921	ReturnType	static RList *		5101897	1					
ANR	5101922	Identifier	buf_sparse_nonempty_list		5101897	2					
ANR	5101923	ParameterList	RBuffer * b		5101897	3					
ANR	5101924	Parameter	RBuffer * b	205:39:4631:4640	5101897	0	True				
ANR	5101925	ParameterType	RBuffer *		5101897	0					
ANR	5101926	Identifier	b		5101897	1					
ANR	5101927	CFGEntryNode	ENTRY		5101897		True				
ANR	5101928	CFGExitNode	EXIT		5101897		True				
ANR	5101929	Symbol	get_priv_sparse		5101897						
ANR	5101930	Symbol	b		5101897						
ANR	5101931	Symbol	* priv		5101897						
ANR	5101932	Symbol	r_list_clone		5101897						
ANR	5101933	Symbol	priv		5101897						
ANR	5101934	Symbol	priv -> sparse		5101897						
ANR	5101935	DeclStmt									
ANR	5101936	Decl							const RBufferMethods	const RBufferMethods	buffer_sparse_methods
