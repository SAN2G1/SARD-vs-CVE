command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3467236	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_z80_z80asm.c								
ANR	3467237	DeclStmt									
ANR	3467238	Decl							unsigned char	unsigned char *	obuf
ANR	3467239	DeclStmt									
ANR	3467240	Decl							int	int	obuflen
ANR	3467241	DeclStmt									
ANR	3467242	Decl							const char	const char * [ ]	mnemonics
ANR	3467243	DeclStmt									
ANR	3467244	Decl							int	int	addr
ANR	3467245	Decl							int	int	file
ANR	3467246	DeclStmt									
ANR	3467247	Decl							int	int	writebyte
ANR	3467248	DeclStmt									
ANR	3467249	Decl							const char	const char *	readbyte
ANR	3467250	DeclStmt									
ANR	3467251	Decl							const char	const char *	readword
ANR	3467252	Decl							const char	const char *	indexjmp
ANR	3467253	Decl							const char	const char *	bitsetres
ANR	3467254	DeclStmt									
ANR	3467255	Decl							int	int	indexed
ANR	3467256	DeclStmt									
ANR	3467257	Decl							int	int	verbose
ANR	3467258	DeclStmt									
ANR	3467259	Decl							int	int	comma
ANR	3467260	DeclStmt									
ANR	3467261	Decl							int	int	baseaddr
ANR	3467262	DeclStmt									
ANR	3467263	Decl							char	char	mem_delimiter
ANR	3467264	DeclStmt									
ANR	3467265	Decl							char	char *	z80buffer
ANR	3467266	DeclStmt									
ANR	3467267	Decl							int	int	define_macro
ANR	3467268	DeclStmt									
ANR	3467269	Decl							int	int	sp
ANR	3467270	DeclStmt									
ANR	3467271	Decl							struct stack	struct stack [ MAX_INCLUDE ]	stack
ANR	3467272	Function	printerr	94:0:3124:3570							
ANR	3467273	FunctionDef	"printerr (int error , const char * fmt)"		3467272	0					
ANR	3467274	CompoundStatement		94:54:3178:3570	3467272	0					
ANR	3467275	IdentifierDeclStatement	va_list l ;	96:1:3187:3196	3467272	0	True				
ANR	3467276	IdentifierDecl	l		3467272	0					
ANR	3467277	IdentifierDeclType	va_list		3467272	0					
ANR	3467278	Identifier	l		3467272	1					
ANR	3467279	ExpressionStatement	"va_start ( l , fmt )"	97:1:3199:3216	3467272	1	True				
ANR	3467280	CallExpression	"va_start ( l , fmt )"		3467272	0					
ANR	3467281	Callee	va_start		3467272	0					
ANR	3467282	Identifier	va_start		3467272	0					
ANR	3467283	ArgumentList	l		3467272	1					
ANR	3467284	Argument	l		3467272	0					
ANR	3467285	Identifier	l		3467272	0					
ANR	3467286	Argument	fmt		3467272	1					
ANR	3467287	Identifier	fmt		3467272	0					
ANR	3467288	IfStatement	if ( ( sp < 0 ) || ( stack [ sp ] . name == 0 ) )		3467272	2					
ANR	3467289	Condition	( sp < 0 ) || ( stack [ sp ] . name == 0 )	98:5:3223:3255	3467272	0	True				
ANR	3467290	OrExpression	( sp < 0 ) || ( stack [ sp ] . name == 0 )		3467272	0		||			
ANR	3467291	RelationalExpression	sp < 0		3467272	0		<			
ANR	3467292	Identifier	sp		3467272	0					
ANR	3467293	PrimaryExpression	0		3467272	1					
ANR	3467294	EqualityExpression	stack [ sp ] . name == 0		3467272	1		==			
ANR	3467295	MemberAccess	stack [ sp ] . name		3467272	0					
ANR	3467296	ArrayIndexing	stack [ sp ]		3467272	0					
ANR	3467297	Identifier	stack		3467272	0					
ANR	3467298	Identifier	sp		3467272	1					
ANR	3467299	Identifier	name		3467272	1					
ANR	3467300	PrimaryExpression	0		3467272	1					
ANR	3467301	CompoundStatement		5:40:79:79	3467272	1					
ANR	3467302	ExpressionStatement	"fprintf ( stderr , ""internal assembler error, sp == %i\\n"" , sp )"	99:2:3262:3322	3467272	0	True				
ANR	3467303	CallExpression	"fprintf ( stderr , ""internal assembler error, sp == %i\\n"" , sp )"		3467272	0					
ANR	3467304	Callee	fprintf		3467272	0					
ANR	3467305	Identifier	fprintf		3467272	0					
ANR	3467306	ArgumentList	stderr		3467272	1					
ANR	3467307	Argument	stderr		3467272	0					
ANR	3467308	Identifier	stderr		3467272	0					
ANR	3467309	Argument	"""internal assembler error, sp == %i\\n"""		3467272	1					
ANR	3467310	PrimaryExpression	"""internal assembler error, sp == %i\\n"""		3467272	0					
ANR	3467311	Argument	sp		3467272	2					
ANR	3467312	Identifier	sp		3467272	0					
ANR	3467313	ExpressionStatement	"vfprintf ( stderr , fmt , l )"	100:2:3326:3351	3467272	1	True				
ANR	3467314	CallExpression	"vfprintf ( stderr , fmt , l )"		3467272	0					
ANR	3467315	Callee	vfprintf		3467272	0					
ANR	3467316	Identifier	vfprintf		3467272	0					
ANR	3467317	ArgumentList	stderr		3467272	1					
ANR	3467318	Argument	stderr		3467272	0					
ANR	3467319	Identifier	stderr		3467272	0					
ANR	3467320	Argument	fmt		3467272	1					
ANR	3467321	Identifier	fmt		3467272	0					
ANR	3467322	Argument	l		3467272	2					
ANR	3467323	Identifier	l		3467272	0					
ANR	3467324	ExpressionStatement	"fprintf ( stderr , ""%s%s:%d: %s: "" , stack [ sp ] . dir ? stack [ sp ] . dir -> name : """" , stack [ sp ] . name , stack [ sp ] . line , error ? ""error"" : ""warning"" )"	102:1:3357:3491	3467272	3	True				
ANR	3467325	CallExpression	"fprintf ( stderr , ""%s%s:%d: %s: "" , stack [ sp ] . dir ? stack [ sp ] . dir -> name : """" , stack [ sp ] . name , stack [ sp ] . line , error ? ""error"" : ""warning"" )"		3467272	0					
ANR	3467326	Callee	fprintf		3467272	0					
ANR	3467327	Identifier	fprintf		3467272	0					
ANR	3467328	ArgumentList	stderr		3467272	1					
ANR	3467329	Argument	stderr		3467272	0					
ANR	3467330	Identifier	stderr		3467272	0					
ANR	3467331	Argument	"""%s%s:%d: %s: """		3467272	1					
ANR	3467332	PrimaryExpression	"""%s%s:%d: %s: """		3467272	0					
ANR	3467333	Argument	"stack [ sp ] . dir ? stack [ sp ] . dir -> name : """""		3467272	2					
ANR	3467334	ConditionalExpression	"stack [ sp ] . dir ? stack [ sp ] . dir -> name : """""		3467272	0					
ANR	3467335	Condition	stack [ sp ] . dir		3467272	0					
ANR	3467336	MemberAccess	stack [ sp ] . dir		3467272	0					
ANR	3467337	ArrayIndexing	stack [ sp ]		3467272	0					
ANR	3467338	Identifier	stack		3467272	0					
ANR	3467339	Identifier	sp		3467272	1					
ANR	3467340	Identifier	dir		3467272	1					
ANR	3467341	PtrMemberAccess	stack [ sp ] . dir -> name		3467272	1					
ANR	3467342	MemberAccess	stack [ sp ] . dir		3467272	0					
ANR	3467343	ArrayIndexing	stack [ sp ]		3467272	0					
ANR	3467344	Identifier	stack		3467272	0					
ANR	3467345	Identifier	sp		3467272	1					
ANR	3467346	Identifier	dir		3467272	1					
ANR	3467347	Identifier	name		3467272	1					
ANR	3467348	PrimaryExpression	""""""		3467272	2					
ANR	3467349	Argument	stack [ sp ] . name		3467272	3					
ANR	3467350	MemberAccess	stack [ sp ] . name		3467272	0					
ANR	3467351	ArrayIndexing	stack [ sp ]		3467272	0					
ANR	3467352	Identifier	stack		3467272	0					
ANR	3467353	Identifier	sp		3467272	1					
ANR	3467354	Identifier	name		3467272	1					
ANR	3467355	Argument	stack [ sp ] . line		3467272	4					
ANR	3467356	MemberAccess	stack [ sp ] . line		3467272	0					
ANR	3467357	ArrayIndexing	stack [ sp ]		3467272	0					
ANR	3467358	Identifier	stack		3467272	0					
ANR	3467359	Identifier	sp		3467272	1					
ANR	3467360	Identifier	line		3467272	1					
ANR	3467361	Argument	"error ? ""error"" : ""warning"""		3467272	5					
ANR	3467362	ConditionalExpression	"error ? ""error"" : ""warning"""		3467272	0					
ANR	3467363	Condition	error		3467272	0					
ANR	3467364	Identifier	error		3467272	0					
ANR	3467365	PrimaryExpression	"""error"""		3467272	1					
ANR	3467366	PrimaryExpression	"""warning"""		3467272	2					
ANR	3467367	ExpressionStatement	"vfprintf ( stderr , fmt , l )"	104:1:3494:3519	3467272	4	True				
ANR	3467368	CallExpression	"vfprintf ( stderr , fmt , l )"		3467272	0					
ANR	3467369	Callee	vfprintf		3467272	0					
ANR	3467370	Identifier	vfprintf		3467272	0					
ANR	3467371	ArgumentList	stderr		3467272	1					
ANR	3467372	Argument	stderr		3467272	0					
ANR	3467373	Identifier	stderr		3467272	0					
ANR	3467374	Argument	fmt		3467272	1					
ANR	3467375	Identifier	fmt		3467272	0					
ANR	3467376	Argument	l		3467272	2					
ANR	3467377	Identifier	l		3467272	0					
ANR	3467378	ExpressionStatement	va_end ( l )	105:1:3522:3532	3467272	5	True				
ANR	3467379	CallExpression	va_end ( l )		3467272	0					
ANR	3467380	Callee	va_end		3467272	0					
ANR	3467381	Identifier	va_end		3467272	0					
ANR	3467382	ArgumentList	l		3467272	1					
ANR	3467383	Argument	l		3467272	0					
ANR	3467384	Identifier	l		3467272	0					
ANR	3467385	IfStatement	if ( error )		3467272	6					
ANR	3467386	Condition	error	106:5:3539:3543	3467272	0	True				
ANR	3467387	Identifier	error		3467272	0					
ANR	3467388	CompoundStatement		13:12:367:367	3467272	1					
ANR	3467389	ExpressionStatement	errors ++	107:2:3550:3558	3467272	0	True				
ANR	3467390	PostIncDecOperationExpression	errors ++		3467272	0					
ANR	3467391	Identifier	errors		3467272	0					
ANR	3467392	IncDec	++		3467272	1					
ANR	3467393	ReturnType	static void		3467272	1					
ANR	3467394	Identifier	printerr		3467272	2					
ANR	3467395	ParameterList	"int error , const char * fmt"		3467272	3					
ANR	3467396	Parameter	int error	94:21:3145:3153	3467272	0	True				
ANR	3467397	ParameterType	int		3467272	0					
ANR	3467398	Identifier	error		3467272	1					
ANR	3467399	Parameter	const char * fmt	94:32:3156:3170	3467272	1	True				
ANR	3467400	ParameterType	const char *		3467272	0					
ANR	3467401	Identifier	fmt		3467272	1					
ANR	3467402	CFGEntryNode	ENTRY		3467272		True				
ANR	3467403	CFGExitNode	EXIT		3467272		True				
ANR	3467404	Symbol	* sp		3467272						
ANR	3467405	Symbol	stack		3467272						
ANR	3467406	Symbol	stack [ sp ] . dir		3467272						
ANR	3467407	Symbol	* * sp		3467272						
ANR	3467408	Symbol	error		3467272						
ANR	3467409	Symbol	fmt		3467272						
ANR	3467410	Symbol	l		3467272						
ANR	3467411	Symbol	stderr		3467272						
ANR	3467412	Symbol	stack [ sp ] . name		3467272						
ANR	3467413	Symbol	* * stack		3467272						
ANR	3467414	Symbol	* stack		3467272						
ANR	3467415	Symbol	stack [ sp ] . line		3467272						
ANR	3467416	Symbol	* stack [ sp ] . dir		3467272						
ANR	3467417	Symbol	sp		3467272						
ANR	3467418	Symbol	errors		3467272						
ANR	3467419	Symbol	stack [ sp ] . dir -> name		3467272						
ANR	3467420	Function	delspc	113:0:3606:3762							
ANR	3467421	FunctionDef	delspc (const char * ptr)		3467420	0					
ANR	3467422	CompoundStatement		113:43:3649:3762	3467420	0					
ANR	3467423	WhileStatement	while ( * ptr && isspace ( ( const unsigned char ) * ptr ) )		3467420	0					
ANR	3467424	Condition	* ptr && isspace ( ( const unsigned char ) * ptr )	114:8:3659:3702	3467420	0	True				
ANR	3467425	AndExpression	* ptr && isspace ( ( const unsigned char ) * ptr )		3467420	0		&&			
ANR	3467426	UnaryOperationExpression	* ptr		3467420	0					
ANR	3467427	UnaryOperator	*		3467420	0					
ANR	3467428	Identifier	ptr		3467420	1					
ANR	3467429	CallExpression	isspace ( ( const unsigned char ) * ptr )		3467420	1					
ANR	3467430	Callee	isspace		3467420	0					
ANR	3467431	Identifier	isspace		3467420	0					
ANR	3467432	ArgumentList	( const unsigned char ) * ptr		3467420	1					
ANR	3467433	Argument	( const unsigned char ) * ptr		3467420	0					
ANR	3467434	CastExpression	( const unsigned char ) * ptr		3467420	0					
ANR	3467435	CastTarget	const unsigned char		3467420	0					
ANR	3467436	UnaryOperationExpression	* ptr		3467420	1					
ANR	3467437	UnaryOperator	*		3467420	0					
ANR	3467438	Identifier	ptr		3467420	1					
ANR	3467439	ExpressionStatement	ptr ++	115:2:3707:3712	3467420	1	True				
ANR	3467440	PostIncDecOperationExpression	ptr ++		3467420	0					
ANR	3467441	Identifier	ptr		3467420	0					
ANR	3467442	IncDec	++		3467420	1					
ANR	3467443	IfStatement	if ( * ptr == ';' )		3467420	1					
ANR	3467444	Condition	* ptr == ';'	116:5:3719:3729	3467420	0	True				
ANR	3467445	EqualityExpression	* ptr == ';'		3467420	0		==			
ANR	3467446	UnaryOperationExpression	* ptr		3467420	0					
ANR	3467447	UnaryOperator	*		3467420	0					
ANR	3467448	Identifier	ptr		3467420	1					
ANR	3467449	PrimaryExpression	';'		3467420	1					
ANR	3467450	CompoundStatement		4:18:82:82	3467420	1					
ANR	3467451	ExpressionStatement	"ptr = """""	117:2:3736:3744	3467420	0	True				
ANR	3467452	AssignmentExpression	"ptr = """""		3467420	0		=			
ANR	3467453	Identifier	ptr		3467420	0					
ANR	3467454	PrimaryExpression	""""""		3467420	1					
ANR	3467455	ReturnStatement	return ptr ;	119:1:3750:3760	3467420	2	True				
ANR	3467456	Identifier	ptr		3467420	0					
ANR	3467457	ReturnType	static const char *		3467420	1					
ANR	3467458	Identifier	delspc		3467420	2					
ANR	3467459	ParameterList	const char * ptr		3467420	3					
ANR	3467460	Parameter	const char * ptr	113:26:3632:3646	3467420	0	True				
ANR	3467461	ParameterType	const char *		3467420	0					
ANR	3467462	Identifier	ptr		3467420	1					
ANR	3467463	CFGEntryNode	ENTRY		3467420		True				
ANR	3467464	CFGExitNode	EXIT		3467420		True				
ANR	3467465	Symbol	isspace		3467420						
ANR	3467466	Symbol	* ptr		3467420						
ANR	3467467	Symbol	ptr		3467420						
ANR	3467468	Function	rd_comma	123:0:3813:3985							
ANR	3467469	FunctionDef	rd_comma (const char * * p)		3467468	0					
ANR	3467470	CompoundStatement		123:37:3850:3985	3467468	0					
ANR	3467471	ExpressionStatement	* p = delspc ( * p )	124:1:3853:3869	3467468	0	True				
ANR	3467472	AssignmentExpression	* p = delspc ( * p )		3467468	0		=			
ANR	3467473	UnaryOperationExpression	* p		3467468	0					
ANR	3467474	UnaryOperator	*		3467468	0					
ANR	3467475	Identifier	p		3467468	1					
ANR	3467476	CallExpression	delspc ( * p )		3467468	1					
ANR	3467477	Callee	delspc		3467468	0					
ANR	3467478	Identifier	delspc		3467468	0					
ANR	3467479	ArgumentList	* p		3467468	1					
ANR	3467480	Argument	* p		3467468	0					
ANR	3467481	UnaryOperationExpression	* p		3467468	0					
ANR	3467482	UnaryOperator	*		3467468	0					
ANR	3467483	Identifier	p		3467468	1					
ANR	3467484	IfStatement	"if ( * * p != ',' )"		3467468	1					
ANR	3467485	Condition	"* * p != ','"	125:5:3876:3885	3467468	0	True				
ANR	3467486	EqualityExpression	"* * p != ','"		3467468	0		!=			
ANR	3467487	UnaryOperationExpression	* * p		3467468	0					
ANR	3467488	UnaryOperator	*		3467468	0					
ANR	3467489	UnaryOperationExpression	* p		3467468	1					
ANR	3467490	UnaryOperator	*		3467468	0					
ANR	3467491	Identifier	p		3467468	1					
ANR	3467492	PrimaryExpression	"','"		3467468	1					
ANR	3467493	CompoundStatement		3:17:37:37	3467468	1					
ANR	3467494	ExpressionStatement	"eprintf ( ""`,' expected. Remainder of line: %s\\n"" , * p )"	126:2:3892:3945	3467468	0	True				
ANR	3467495	CallExpression	"eprintf ( ""`,' expected. Remainder of line: %s\\n"" , * p )"		3467468	0					
ANR	3467496	Callee	eprintf		3467468	0					
ANR	3467497	Identifier	eprintf		3467468	0					
ANR	3467498	ArgumentList	"""`,' expected. Remainder of line: %s\\n"""		3467468	1					
ANR	3467499	Argument	"""`,' expected. Remainder of line: %s\\n"""		3467468	0					
ANR	3467500	PrimaryExpression	"""`,' expected. Remainder of line: %s\\n"""		3467468	0					
ANR	3467501	Argument	* p		3467468	1					
ANR	3467502	UnaryOperationExpression	* p		3467468	0					
ANR	3467503	UnaryOperator	*		3467468	0					
ANR	3467504	Identifier	p		3467468	1					
ANR	3467505	ReturnStatement	return ;	127:2:3949:3955	3467468	1	True				
ANR	3467506	ExpressionStatement	* p = delspc ( ( * p ) + 1 )	129:1:3961:3983	3467468	2	True				
ANR	3467507	AssignmentExpression	* p = delspc ( ( * p ) + 1 )		3467468	0		=			
ANR	3467508	UnaryOperationExpression	* p		3467468	0					
ANR	3467509	UnaryOperator	*		3467468	0					
ANR	3467510	Identifier	p		3467468	1					
ANR	3467511	CallExpression	delspc ( ( * p ) + 1 )		3467468	1					
ANR	3467512	Callee	delspc		3467468	0					
ANR	3467513	Identifier	delspc		3467468	0					
ANR	3467514	ArgumentList	( * p ) + 1		3467468	1					
ANR	3467515	Argument	( * p ) + 1		3467468	0					
ANR	3467516	AdditiveExpression	( * p ) + 1		3467468	0		+			
ANR	3467517	UnaryOperationExpression	* p		3467468	0					
ANR	3467518	UnaryOperator	*		3467468	0					
ANR	3467519	Identifier	p		3467468	1					
ANR	3467520	PrimaryExpression	1		3467468	1					
ANR	3467521	ReturnType	static void		3467468	1					
ANR	3467522	Identifier	rd_comma		3467468	2					
ANR	3467523	ParameterList	const char * * p		3467468	3					
ANR	3467524	Parameter	const char * * p	123:21:3834:3847	3467468	0	True				
ANR	3467525	ParameterType	const char * *		3467468	0					
ANR	3467526	Identifier	p		3467468	1					
ANR	3467527	CFGEntryNode	ENTRY		3467468		True				
ANR	3467528	CFGExitNode	EXIT		3467468		True				
ANR	3467529	Symbol	p		3467468						
ANR	3467530	Symbol	* p		3467468						
ANR	3467531	Symbol	* * p		3467468						
ANR	3467532	Symbol	delspc		3467468						
ANR	3467533	Function	has_argument	133:0:4040:4131							
ANR	3467534	FunctionDef	has_argument (const char * * p)		3467533	0					
ANR	3467535	CompoundStatement		133:40:4080:4131	3467533	0					
ANR	3467536	IdentifierDeclStatement	const char * q = delspc ( * p ) ;	134:1:4083:4110	3467533	0	True				
ANR	3467537	IdentifierDecl	* q = delspc ( * p )		3467533	0					
ANR	3467538	IdentifierDeclType	const char *		3467533	0					
ANR	3467539	Identifier	q		3467533	1					
ANR	3467540	AssignmentExpression	* q = delspc ( * p )		3467533	2		=			
ANR	3467541	Identifier	q		3467533	0					
ANR	3467542	CallExpression	delspc ( * p )		3467533	1					
ANR	3467543	Callee	delspc		3467533	0					
ANR	3467544	Identifier	delspc		3467533	0					
ANR	3467545	ArgumentList	* p		3467533	1					
ANR	3467546	Argument	* p		3467533	0					
ANR	3467547	UnaryOperationExpression	* p		3467533	0					
ANR	3467548	UnaryOperator	*		3467533	0					
ANR	3467549	Identifier	p		3467533	1					
ANR	3467550	ReturnStatement	"return * q == ',' ;"	135:1:4113:4129	3467533	1	True				
ANR	3467551	EqualityExpression	"* q == ','"		3467533	0		==			
ANR	3467552	UnaryOperationExpression	* q		3467533	0					
ANR	3467553	UnaryOperator	*		3467533	0					
ANR	3467554	Identifier	q		3467533	1					
ANR	3467555	PrimaryExpression	"','"		3467533	1					
ANR	3467556	ReturnType	static int		3467533	1					
ANR	3467557	Identifier	has_argument		3467533	2					
ANR	3467558	ParameterList	const char * * p		3467533	3					
ANR	3467559	Parameter	const char * * p	133:24:4064:4077	3467533	0	True				
ANR	3467560	ParameterType	const char * *		3467533	0					
ANR	3467561	Identifier	p		3467533	1					
ANR	3467562	CFGEntryNode	ENTRY		3467533		True				
ANR	3467563	CFGExitNode	EXIT		3467533		True				
ANR	3467564	Symbol	p		3467533						
ANR	3467565	Symbol	q		3467533						
ANR	3467566	Symbol	* p		3467533						
ANR	3467567	Symbol	* q		3467533						
ANR	3467568	Symbol	delspc		3467533						
ANR	3467569	Function	skipword	141:0:4362:4677							
ANR	3467570	FunctionDef	"skipword (const char * * pos , char delimiter)"		3467569	0					
ANR	3467571	CompoundStatement		141:55:4417:4677	3467569	0					
ANR	3467572	IdentifierDeclStatement	int valid ;	145:1:4624:4633	3467569	0	True				
ANR	3467573	IdentifierDecl	valid		3467569	0					
ANR	3467574	IdentifierDeclType	int		3467569	0					
ANR	3467575	Identifier	valid		3467569	1					
ANR	3467576	ExpressionStatement	"rd_expr ( pos , delimiter , & valid , sp , 0 )"	146:1:4636:4675	3467569	1	True				
ANR	3467577	CallExpression	"rd_expr ( pos , delimiter , & valid , sp , 0 )"		3467569	0					
ANR	3467578	Callee	rd_expr		3467569	0					
ANR	3467579	Identifier	rd_expr		3467569	0					
ANR	3467580	ArgumentList	pos		3467569	1					
ANR	3467581	Argument	pos		3467569	0					
ANR	3467582	Identifier	pos		3467569	0					
ANR	3467583	Argument	delimiter		3467569	1					
ANR	3467584	Identifier	delimiter		3467569	0					
ANR	3467585	Argument	& valid		3467569	2					
ANR	3467586	UnaryOperationExpression	& valid		3467569	0					
ANR	3467587	UnaryOperator	&		3467569	0					
ANR	3467588	Identifier	valid		3467569	1					
ANR	3467589	Argument	sp		3467569	3					
ANR	3467590	Identifier	sp		3467569	0					
ANR	3467591	Argument	0		3467569	4					
ANR	3467592	PrimaryExpression	0		3467569	0					
ANR	3467593	ReturnType	static void		3467569	1					
ANR	3467594	Identifier	skipword		3467569	2					
ANR	3467595	ParameterList	"const char * * pos , char delimiter"		3467569	3					
ANR	3467596	Parameter	const char * * pos	141:21:4383:4398	3467569	0	True				
ANR	3467597	ParameterType	const char * *		3467569	0					
ANR	3467598	Identifier	pos		3467569	1					
ANR	3467599	Parameter	char delimiter	141:39:4401:4414	3467569	1	True				
ANR	3467600	ParameterType	char		3467569	0					
ANR	3467601	Identifier	delimiter		3467569	1					
ANR	3467602	CFGEntryNode	ENTRY		3467569		True				
ANR	3467603	CFGExitNode	EXIT		3467569		True				
ANR	3467604	Symbol	valid		3467569						
ANR	3467605	Symbol	pos		3467569						
ANR	3467606	Symbol	delimiter		3467569						
ANR	3467607	Symbol	& valid		3467569						
ANR	3467608	Symbol	sp		3467569						
ANR	3467609	Function	indx	150:0:4754:6090							
ANR	3467610	FunctionDef	"indx (const char * * ptr , const char * * list , int error , const char * * expr)"		3467609	0					
ANR	3467611	CompoundStatement		150:83:4837:6090	3467609	0					
ANR	3467612	IdentifierDeclStatement	int i ;	151:1:4840:4845	3467609	0	True				
ANR	3467613	IdentifierDecl	i		3467609	0					
ANR	3467614	IdentifierDeclType	int		3467609	0					
ANR	3467615	Identifier	i		3467609	1					
ANR	3467616	ExpressionStatement	* ptr = delspc ( * ptr )	152:1:4848:4868	3467609	1	True				
ANR	3467617	AssignmentExpression	* ptr = delspc ( * ptr )		3467609	0		=			
ANR	3467618	UnaryOperationExpression	* ptr		3467609	0					
ANR	3467619	UnaryOperator	*		3467609	0					
ANR	3467620	Identifier	ptr		3467609	1					
ANR	3467621	CallExpression	delspc ( * ptr )		3467609	1					
ANR	3467622	Callee	delspc		3467609	0					
ANR	3467623	Identifier	delspc		3467609	0					
ANR	3467624	ArgumentList	* ptr		3467609	1					
ANR	3467625	Argument	* ptr		3467609	0					
ANR	3467626	UnaryOperationExpression	* ptr		3467609	0					
ANR	3467627	UnaryOperator	*		3467609	0					
ANR	3467628	Identifier	ptr		3467609	1					
ANR	3467629	IfStatement	if ( ! * * ptr )		3467609	2					
ANR	3467630	Condition	! * * ptr	153:5:4875:4880	3467609	0	True				
ANR	3467631	UnaryOperationExpression	! * * ptr		3467609	0					
ANR	3467632	UnaryOperator	!		3467609	0					
ANR	3467633	UnaryOperationExpression	* * ptr		3467609	1					
ANR	3467634	UnaryOperator	*		3467609	0					
ANR	3467635	UnaryOperationExpression	* ptr		3467609	1					
ANR	3467636	UnaryOperator	*		3467609	0					
ANR	3467637	Identifier	ptr		3467609	1					
ANR	3467638	CompoundStatement		4:13:45:45	3467609	1					
ANR	3467639	IfStatement	if ( error )		3467609	0					
ANR	3467640	Condition	error	154:6:4891:4895	3467609	0	True				
ANR	3467641	Identifier	error		3467609	0					
ANR	3467642	CompoundStatement		5:13:60:60	3467609	1					
ANR	3467643	ExpressionStatement	"eprintf ( ""unexpected end of line\\n"" )"	155:3:4903:4939	3467609	0	True				
ANR	3467644	CallExpression	"eprintf ( ""unexpected end of line\\n"" )"		3467609	0					
ANR	3467645	Callee	eprintf		3467609	0					
ANR	3467646	Identifier	eprintf		3467609	0					
ANR	3467647	ArgumentList	"""unexpected end of line\\n"""		3467609	1					
ANR	3467648	Argument	"""unexpected end of line\\n"""		3467609	0					
ANR	3467649	PrimaryExpression	"""unexpected end of line\\n"""		3467609	0					
ANR	3467650	ReturnStatement	return 0 ;	156:3:4944:4952	3467609	1	True				
ANR	3467651	PrimaryExpression	0		3467609	0					
ANR	3467652	ElseStatement	else		3467609	0					
ANR	3467653	CompoundStatement		8:9:125:125	3467609	0					
ANR	3467654	ReturnStatement	return 0 ;	158:3:4968:4976	3467609	0	True				
ANR	3467655	PrimaryExpression	0		3467609	0					
ANR	3467656	IfStatement	if ( comma > 1 )		3467609	3					
ANR	3467657	Condition	comma > 1	161:5:4990:4998	3467609	0	True				
ANR	3467658	RelationalExpression	comma > 1		3467609	0		>			
ANR	3467659	Identifier	comma		3467609	0					
ANR	3467660	PrimaryExpression	1		3467609	1					
ANR	3467661	CompoundStatement		12:16:163:163	3467609	1					
ANR	3467662	ExpressionStatement	rd_comma ( ptr )	162:2:5005:5019	3467609	0	True				
ANR	3467663	CallExpression	rd_comma ( ptr )		3467609	0					
ANR	3467664	Callee	rd_comma		3467609	0					
ANR	3467665	Identifier	rd_comma		3467609	0					
ANR	3467666	ArgumentList	ptr		3467609	1					
ANR	3467667	Argument	ptr		3467609	0					
ANR	3467668	Identifier	ptr		3467609	0					
ANR	3467669	ForStatement	for ( i = 0 ; list [ i ] ; i ++ )		3467609	4					
ANR	3467670	ForInit	i = 0 ;	164:6:5030:5035	3467609	0	True				
ANR	3467671	AssignmentExpression	i = 0		3467609	0		=			
ANR	3467672	Identifier	i		3467609	0					
ANR	3467673	PrimaryExpression	0		3467609	1					
ANR	3467674	Condition	list [ i ]	164:13:5037:5043	3467609	1	True				
ANR	3467675	ArrayIndexing	list [ i ]		3467609	0					
ANR	3467676	Identifier	list		3467609	0					
ANR	3467677	Identifier	i		3467609	1					
ANR	3467678	PostIncDecOperationExpression	i ++	164:22:5046:5048	3467609	2	True				
ANR	3467679	Identifier	i		3467609	0					
ANR	3467680	IncDec	++		3467609	1					
ANR	3467681	CompoundStatement		18:2:276:292	3467609	3					
ANR	3467682	IdentifierDeclStatement	const char * input = * ptr ;	165:2:5055:5079	3467609	0	True				
ANR	3467683	IdentifierDecl	* input = * ptr		3467609	0					
ANR	3467684	IdentifierDeclType	const char *		3467609	0					
ANR	3467685	Identifier	input		3467609	1					
ANR	3467686	AssignmentExpression	* input = * ptr		3467609	2		=			
ANR	3467687	Identifier	input		3467609	0					
ANR	3467688	UnaryOperationExpression	* ptr		3467609	1					
ANR	3467689	UnaryOperator	*		3467609	0					
ANR	3467690	Identifier	ptr		3467609	1					
ANR	3467691	IdentifierDeclStatement	const char * check = list [ i ] ;	166:2:5083:5110	3467609	1	True				
ANR	3467692	IdentifierDecl	* check = list [ i ]		3467609	0					
ANR	3467693	IdentifierDeclType	const char *		3467609	0					
ANR	3467694	Identifier	check		3467609	1					
ANR	3467695	AssignmentExpression	* check = list [ i ]		3467609	2		=			
ANR	3467696	Identifier	check		3467609	0					
ANR	3467697	ArrayIndexing	list [ i ]		3467609	1					
ANR	3467698	Identifier	list		3467609	0					
ANR	3467699	Identifier	i		3467609	1					
ANR	3467700	IdentifierDeclStatement	int had_expr = 0 ;	167:2:5114:5130	3467609	2	True				
ANR	3467701	IdentifierDecl	had_expr = 0		3467609	0					
ANR	3467702	IdentifierDeclType	int		3467609	0					
ANR	3467703	Identifier	had_expr		3467609	1					
ANR	3467704	AssignmentExpression	had_expr = 0		3467609	2		=			
ANR	3467705	Identifier	had_expr		3467609	0					
ANR	3467706	PrimaryExpression	0		3467609	1					
ANR	3467707	IfStatement	if ( ! list [ i ] [ 0 ] )		3467609	3					
ANR	3467708	Condition	! list [ i ] [ 0 ]	168:6:5138:5148	3467609	0	True				
ANR	3467709	UnaryOperationExpression	! list [ i ] [ 0 ]		3467609	0					
ANR	3467710	UnaryOperator	!		3467609	0					
ANR	3467711	ArrayIndexing	list [ i ] [ 0 ]		3467609	1					
ANR	3467712	ArrayIndexing	list [ i ]		3467609	0					
ANR	3467713	Identifier	list		3467609	0					
ANR	3467714	Identifier	i		3467609	1					
ANR	3467715	PrimaryExpression	0		3467609	1					
ANR	3467716	CompoundStatement		19:19:313:313	3467609	1					
ANR	3467717	ContinueStatement	continue ;	169:3:5156:5164	3467609	0	True				
ANR	3467718	WhileStatement	while ( * check )		3467609	4					
ANR	3467719	Condition	* check	171:9:5179:5184	3467609	0	True				
ANR	3467720	UnaryOperationExpression	* check		3467609	0					
ANR	3467721	UnaryOperator	*		3467609	0					
ANR	3467722	Identifier	check		3467609	1					
ANR	3467723	CompoundStatement		22:17:349:349	3467609	1					
ANR	3467724	IfStatement	if ( * check == ' ' )		3467609	0					
ANR	3467725	Condition	* check == ' '	172:7:5196:5208	3467609	0	True				
ANR	3467726	EqualityExpression	* check == ' '		3467609	0		==			
ANR	3467727	UnaryOperationExpression	* check		3467609	0					
ANR	3467728	UnaryOperator	*		3467609	0					
ANR	3467729	Identifier	check		3467609	1					
ANR	3467730	PrimaryExpression	' '		3467609	1					
ANR	3467731	CompoundStatement		23:22:373:373	3467609	1					
ANR	3467732	ExpressionStatement	input = delspc ( input )	173:4:5217:5239	3467609	0	True				
ANR	3467733	AssignmentExpression	input = delspc ( input )		3467609	0		=			
ANR	3467734	Identifier	input		3467609	0					
ANR	3467735	CallExpression	delspc ( input )		3467609	1					
ANR	3467736	Callee	delspc		3467609	0					
ANR	3467737	Identifier	delspc		3467609	0					
ANR	3467738	ArgumentList	input		3467609	1					
ANR	3467739	Argument	input		3467609	0					
ANR	3467740	Identifier	input		3467609	0					
ANR	3467741	ElseStatement	else		3467609	0					
ANR	3467742	IfStatement	if ( * check == '*' )		3467609	0					
ANR	3467743	Condition	* check == '*'	174:14:5255:5267	3467609	0	True				
ANR	3467744	EqualityExpression	* check == '*'		3467609	0		==			
ANR	3467745	UnaryOperationExpression	* check		3467609	0					
ANR	3467746	UnaryOperator	*		3467609	0					
ANR	3467747	Identifier	check		3467609	1					
ANR	3467748	PrimaryExpression	'*'		3467609	1					
ANR	3467749	CompoundStatement		25:29:432:432	3467609	1					
ANR	3467750	ExpressionStatement	* expr = input	175:4:5276:5289	3467609	0	True				
ANR	3467751	AssignmentExpression	* expr = input		3467609	0		=			
ANR	3467752	UnaryOperationExpression	* expr		3467609	0					
ANR	3467753	UnaryOperator	*		3467609	0					
ANR	3467754	Identifier	expr		3467609	1					
ANR	3467755	Identifier	input		3467609	1					
ANR	3467756	ExpressionStatement	mem_delimiter = check [ 1 ]	176:4:5295:5319	3467609	1	True				
ANR	3467757	AssignmentExpression	mem_delimiter = check [ 1 ]		3467609	0		=			
ANR	3467758	Identifier	mem_delimiter		3467609	0					
ANR	3467759	ArrayIndexing	check [ 1 ]		3467609	1					
ANR	3467760	Identifier	check		3467609	0					
ANR	3467761	PrimaryExpression	1		3467609	1					
ANR	3467762	ExpressionStatement	"rd_expr ( & input , mem_delimiter , NULL , sp , 0 )"	177:4:5325:5369	3467609	2	True				
ANR	3467763	CallExpression	"rd_expr ( & input , mem_delimiter , NULL , sp , 0 )"		3467609	0					
ANR	3467764	Callee	rd_expr		3467609	0					
ANR	3467765	Identifier	rd_expr		3467609	0					
ANR	3467766	ArgumentList	& input		3467609	1					
ANR	3467767	Argument	& input		3467609	0					
ANR	3467768	UnaryOperationExpression	& input		3467609	0					
ANR	3467769	UnaryOperator	&		3467609	0					
ANR	3467770	Identifier	input		3467609	1					
ANR	3467771	Argument	mem_delimiter		3467609	1					
ANR	3467772	Identifier	mem_delimiter		3467609	0					
ANR	3467773	Argument	NULL		3467609	2					
ANR	3467774	Identifier	NULL		3467609	0					
ANR	3467775	Argument	sp		3467609	3					
ANR	3467776	Identifier	sp		3467609	0					
ANR	3467777	Argument	0		3467609	4					
ANR	3467778	PrimaryExpression	0		3467609	0					
ANR	3467779	ExpressionStatement	had_expr = 1	178:4:5375:5387	3467609	3	True				
ANR	3467780	AssignmentExpression	had_expr = 1		3467609	0		=			
ANR	3467781	Identifier	had_expr		3467609	0					
ANR	3467782	PrimaryExpression	1		3467609	1					
ANR	3467783	ElseStatement	else		3467609	0					
ANR	3467784	IfStatement	if ( * check == '+' )		3467609	0					
ANR	3467785	Condition	* check == '+'	179:14:5403:5415	3467609	0	True				
ANR	3467786	EqualityExpression	* check == '+'		3467609	0		==			
ANR	3467787	UnaryOperationExpression	* check		3467609	0					
ANR	3467788	UnaryOperator	*		3467609	0					
ANR	3467789	Identifier	check		3467609	1					
ANR	3467790	PrimaryExpression	'+'		3467609	1					
ANR	3467791	CompoundStatement		30:29:580:580	3467609	1					
ANR	3467792	IfStatement	if ( * input == '+' || * input == '-' )		3467609	0					
ANR	3467793	Condition	* input == '+' || * input == '-'	180:8:5428:5457	3467609	0	True				
ANR	3467794	OrExpression	* input == '+' || * input == '-'		3467609	0		||			
ANR	3467795	EqualityExpression	* input == '+'		3467609	0		==			
ANR	3467796	UnaryOperationExpression	* input		3467609	0					
ANR	3467797	UnaryOperator	*		3467609	0					
ANR	3467798	Identifier	input		3467609	1					
ANR	3467799	PrimaryExpression	'+'		3467609	1					
ANR	3467800	EqualityExpression	* input == '-'		3467609	1		==			
ANR	3467801	UnaryOperationExpression	* input		3467609	0					
ANR	3467802	UnaryOperator	*		3467609	0					
ANR	3467803	Identifier	input		3467609	1					
ANR	3467804	PrimaryExpression	'-'		3467609	1					
ANR	3467805	CompoundStatement		31:40:622:622	3467609	1					
ANR	3467806	ExpressionStatement	* expr = input	181:5:5467:5480	3467609	0	True				
ANR	3467807	AssignmentExpression	* expr = input		3467609	0		=			
ANR	3467808	UnaryOperationExpression	* expr		3467609	0					
ANR	3467809	UnaryOperator	*		3467609	0					
ANR	3467810	Identifier	expr		3467609	1					
ANR	3467811	Identifier	input		3467609	1					
ANR	3467812	ExpressionStatement	mem_delimiter = check [ 1 ]	182:5:5487:5511	3467609	1	True				
ANR	3467813	AssignmentExpression	mem_delimiter = check [ 1 ]		3467609	0		=			
ANR	3467814	Identifier	mem_delimiter		3467609	0					
ANR	3467815	ArrayIndexing	check [ 1 ]		3467609	1					
ANR	3467816	Identifier	check		3467609	0					
ANR	3467817	PrimaryExpression	1		3467609	1					
ANR	3467818	ExpressionStatement	"rd_expr ( & input , mem_delimiter , NULL , sp , 0 )"	183:5:5518:5562	3467609	2	True				
ANR	3467819	CallExpression	"rd_expr ( & input , mem_delimiter , NULL , sp , 0 )"		3467609	0					
ANR	3467820	Callee	rd_expr		3467609	0					
ANR	3467821	Identifier	rd_expr		3467609	0					
ANR	3467822	ArgumentList	& input		3467609	1					
ANR	3467823	Argument	& input		3467609	0					
ANR	3467824	UnaryOperationExpression	& input		3467609	0					
ANR	3467825	UnaryOperator	&		3467609	0					
ANR	3467826	Identifier	input		3467609	1					
ANR	3467827	Argument	mem_delimiter		3467609	1					
ANR	3467828	Identifier	mem_delimiter		3467609	0					
ANR	3467829	Argument	NULL		3467609	2					
ANR	3467830	Identifier	NULL		3467609	0					
ANR	3467831	Argument	sp		3467609	3					
ANR	3467832	Identifier	sp		3467609	0					
ANR	3467833	Argument	0		3467609	4					
ANR	3467834	PrimaryExpression	0		3467609	0					
ANR	3467835	ElseStatement	else		3467609	0					
ANR	3467836	IfStatement	if ( * check == * input || ( * check >= 'a' && * check <= 'z' && * check - 'a' + 'A' == * input ) )		3467609	0					
ANR	3467837	Condition	* check == * input || ( * check >= 'a' && * check <= 'z' && * check - 'a' + 'A' == * input )	185:14:5584:5674	3467609	0	True				
ANR	3467838	OrExpression	* check == * input || ( * check >= 'a' && * check <= 'z' && * check - 'a' + 'A' == * input )		3467609	0		||			
ANR	3467839	EqualityExpression	* check == * input		3467609	0		==			
ANR	3467840	UnaryOperationExpression	* check		3467609	0					
ANR	3467841	UnaryOperator	*		3467609	0					
ANR	3467842	Identifier	check		3467609	1					
ANR	3467843	UnaryOperationExpression	* input		3467609	1					
ANR	3467844	UnaryOperator	*		3467609	0					
ANR	3467845	Identifier	input		3467609	1					
ANR	3467846	AndExpression	* check >= 'a' && * check <= 'z' && * check - 'a' + 'A' == * input		3467609	1		&&			
ANR	3467847	RelationalExpression	* check >= 'a'		3467609	0		>=			
ANR	3467848	UnaryOperationExpression	* check		3467609	0					
ANR	3467849	UnaryOperator	*		3467609	0					
ANR	3467850	Identifier	check		3467609	1					
ANR	3467851	PrimaryExpression	'a'		3467609	1					
ANR	3467852	AndExpression	* check <= 'z' && * check - 'a' + 'A' == * input		3467609	1		&&			
ANR	3467853	RelationalExpression	* check <= 'z'		3467609	0		<=			
ANR	3467854	UnaryOperationExpression	* check		3467609	0					
ANR	3467855	UnaryOperator	*		3467609	0					
ANR	3467856	Identifier	check		3467609	1					
ANR	3467857	PrimaryExpression	'z'		3467609	1					
ANR	3467858	EqualityExpression	* check - 'a' + 'A' == * input		3467609	1		==			
ANR	3467859	AdditiveExpression	* check - 'a' + 'A'		3467609	0		-			
ANR	3467860	UnaryOperationExpression	* check		3467609	0					
ANR	3467861	UnaryOperator	*		3467609	0					
ANR	3467862	Identifier	check		3467609	1					
ANR	3467863	AdditiveExpression	'a' + 'A'		3467609	1		+			
ANR	3467864	PrimaryExpression	'a'		3467609	0					
ANR	3467865	PrimaryExpression	'A'		3467609	1					
ANR	3467866	UnaryOperationExpression	* input		3467609	1					
ANR	3467867	UnaryOperator	*		3467609	0					
ANR	3467868	Identifier	input		3467609	1					
ANR	3467869	CompoundStatement		37:41:839:839	3467609	1					
ANR	3467870	ExpressionStatement	++ input	187:4:5683:5690	3467609	0	True				
ANR	3467871	UnaryExpression	++ input		3467609	0					
ANR	3467872	IncDec	++		3467609	0					
ANR	3467873	Identifier	input		3467609	1					
ANR	3467874	ElseStatement	else		3467609	0					
ANR	3467875	CompoundStatement		39:10:864:864	3467609	0					
ANR	3467876	BreakStatement	break ;	189:4:5708:5713	3467609	0	True				
ANR	3467877	ExpressionStatement	++ check	192:3:5724:5731	3467609	1	True				
ANR	3467878	UnaryExpression	++ check		3467609	0					
ANR	3467879	IncDec	++		3467609	0					
ANR	3467880	Identifier	check		3467609	1					
ANR	3467881	IfStatement	if ( * check || ( isalnum ( ( const unsigned char ) check [ - 1 ] ) && isalnum ( ( const unsigned char ) input [ 0 ] ) ) )		3467609	5					
ANR	3467882	Condition	* check || ( isalnum ( ( const unsigned char ) check [ - 1 ] ) && isalnum ( ( const unsigned char ) input [ 0 ] ) )	194:6:5743:5839	3467609	0	True				
ANR	3467883	OrExpression	* check || ( isalnum ( ( const unsigned char ) check [ - 1 ] ) && isalnum ( ( const unsigned char ) input [ 0 ] ) )		3467609	0		||			
ANR	3467884	UnaryOperationExpression	* check		3467609	0					
ANR	3467885	UnaryOperator	*		3467609	0					
ANR	3467886	Identifier	check		3467609	1					
ANR	3467887	AndExpression	isalnum ( ( const unsigned char ) check [ - 1 ] ) && isalnum ( ( const unsigned char ) input [ 0 ] )		3467609	1		&&			
ANR	3467888	CallExpression	isalnum ( ( const unsigned char ) check [ - 1 ] )		3467609	0					
ANR	3467889	Callee	isalnum		3467609	0					
ANR	3467890	Identifier	isalnum		3467609	0					
ANR	3467891	ArgumentList	( const unsigned char ) check [ - 1 ]		3467609	1					
ANR	3467892	Argument	( const unsigned char ) check [ - 1 ]		3467609	0					
ANR	3467893	CastExpression	( const unsigned char ) check [ - 1 ]		3467609	0					
ANR	3467894	CastTarget	const unsigned char		3467609	0					
ANR	3467895	ArrayIndexing	check [ - 1 ]		3467609	1					
ANR	3467896	Identifier	check		3467609	0					
ANR	3467897	UnaryOperationExpression	- 1		3467609	1					
ANR	3467898	UnaryOperator	-		3467609	0					
ANR	3467899	PrimaryExpression	1		3467609	1					
ANR	3467900	CallExpression	isalnum ( ( const unsigned char ) input [ 0 ] )		3467609	1					
ANR	3467901	Callee	isalnum		3467609	0					
ANR	3467902	Identifier	isalnum		3467609	0					
ANR	3467903	ArgumentList	( const unsigned char ) input [ 0 ]		3467609	1					
ANR	3467904	Argument	( const unsigned char ) input [ 0 ]		3467609	0					
ANR	3467905	CastExpression	( const unsigned char ) input [ 0 ]		3467609	0					
ANR	3467906	CastTarget	const unsigned char		3467609	0					
ANR	3467907	ArrayIndexing	input [ 0 ]		3467609	1					
ANR	3467908	Identifier	input		3467609	0					
ANR	3467909	PrimaryExpression	0		3467609	1					
ANR	3467910	CompoundStatement		45:105:1004:1004	3467609	1					
ANR	3467911	ContinueStatement	continue ;	195:3:5847:5855	3467609	0	True				
ANR	3467912	IfStatement	if ( had_expr )		3467609	6					
ANR	3467913	Condition	had_expr	197:6:5867:5874	3467609	0	True				
ANR	3467914	Identifier	had_expr		3467609	0					
ANR	3467915	CompoundStatement		48:16:1039:1039	3467609	1					
ANR	3467916	ExpressionStatement	input = delspc ( input )	198:3:5882:5904	3467609	0	True				
ANR	3467917	AssignmentExpression	input = delspc ( input )		3467609	0		=			
ANR	3467918	Identifier	input		3467609	0					
ANR	3467919	CallExpression	delspc ( input )		3467609	1					
ANR	3467920	Callee	delspc		3467609	0					
ANR	3467921	Identifier	delspc		3467609	0					
ANR	3467922	ArgumentList	input		3467609	1					
ANR	3467923	Argument	input		3467609	0					
ANR	3467924	Identifier	input		3467609	0					
ANR	3467925	IfStatement	"if ( * input && * input != ',' )"		3467609	1					
ANR	3467926	Condition	"* input && * input != ','"	199:7:5913:5935	3467609	0	True				
ANR	3467927	AndExpression	"* input && * input != ','"		3467609	0		&&			
ANR	3467928	UnaryOperationExpression	* input		3467609	0					
ANR	3467929	UnaryOperator	*		3467609	0					
ANR	3467930	Identifier	input		3467609	1					
ANR	3467931	EqualityExpression	"* input != ','"		3467609	1		!=			
ANR	3467932	UnaryOperationExpression	* input		3467609	0					
ANR	3467933	UnaryOperator	*		3467609	0					
ANR	3467934	Identifier	input		3467609	1					
ANR	3467935	PrimaryExpression	"','"		3467609	1					
ANR	3467936	CompoundStatement		50:32:1100:1100	3467609	1					
ANR	3467937	ContinueStatement	continue ;	200:4:5944:5952	3467609	0	True				
ANR	3467938	ExpressionStatement	* ptr = input	203:2:5965:5977	3467609	7	True				
ANR	3467939	AssignmentExpression	* ptr = input		3467609	0		=			
ANR	3467940	UnaryOperationExpression	* ptr		3467609	0					
ANR	3467941	UnaryOperator	*		3467609	0					
ANR	3467942	Identifier	ptr		3467609	1					
ANR	3467943	Identifier	input		3467609	1					
ANR	3467944	ExpressionStatement	comma ++	204:2:5981:5988	3467609	8	True				
ANR	3467945	PostIncDecOperationExpression	comma ++		3467609	0					
ANR	3467946	Identifier	comma		3467609	0					
ANR	3467947	IncDec	++		3467609	1					
ANR	3467948	ReturnStatement	return i + 1 ;	205:2:5992:6004	3467609	9	True				
ANR	3467949	AdditiveExpression	i + 1		3467609	0		+			
ANR	3467950	Identifier	i		3467609	0					
ANR	3467951	PrimaryExpression	1		3467609	1					
ANR	3467952	ReturnStatement	return 0 ;	208:1:6080:6088	3467609	5	True				
ANR	3467953	PrimaryExpression	0		3467609	0					
ANR	3467954	ReturnType	static int		3467609	1					
ANR	3467955	Identifier	indx		3467609	2					
ANR	3467956	ParameterList	"const char * * ptr , const char * * list , int error , const char * * expr"		3467609	3					
ANR	3467957	Parameter	const char * * ptr	150:16:4770:4785	3467609	0	True				
ANR	3467958	ParameterType	const char * *		3467609	0					
ANR	3467959	Identifier	ptr		3467609	1					
ANR	3467960	Parameter	const char * * list	150:34:4788:4804	3467609	1	True				
ANR	3467961	ParameterType	const char * *		3467609	0					
ANR	3467962	Identifier	list		3467609	1					
ANR	3467963	Parameter	int error	150:53:4807:4815	3467609	2	True				
ANR	3467964	ParameterType	int		3467609	0					
ANR	3467965	Identifier	error		3467609	1					
ANR	3467966	Parameter	const char * * expr	150:64:4818:4834	3467609	3	True				
ANR	3467967	ParameterType	const char * *		3467609	0					
ANR	3467968	Identifier	expr		3467609	1					
ANR	3467969	CFGEntryNode	ENTRY		3467609		True				
ANR	3467970	CFGExitNode	EXIT		3467609		True				
ANR	3467971	Symbol	* * ptr		3467609						
ANR	3467972	Symbol	* * i		3467609						
ANR	3467973	Symbol	NULL		3467609						
ANR	3467974	Symbol	isalnum		3467609						
ANR	3467975	Symbol	* input		3467609						
ANR	3467976	Symbol	i		3467609						
ANR	3467977	Symbol	check		3467609						
ANR	3467978	Symbol	list		3467609						
ANR	3467979	Symbol	error		3467609						
ANR	3467980	Symbol	had_expr		3467609						
ANR	3467981	Symbol	ptr		3467609						
ANR	3467982	Symbol	mem_delimiter		3467609						
ANR	3467983	Symbol	input		3467609						
ANR	3467984	Symbol	comma		3467609						
ANR	3467985	Symbol	* i		3467609						
ANR	3467986	Symbol	* * list		3467609						
ANR	3467987	Symbol	& input		3467609						
ANR	3467988	Symbol	* list		3467609						
ANR	3467989	Symbol	* expr		3467609						
ANR	3467990	Symbol	* check		3467609						
ANR	3467991	Symbol	* ptr		3467609						
ANR	3467992	Symbol	expr		3467609						
ANR	3467993	Symbol	delspc		3467609						
ANR	3467994	Symbol	sp		3467609						
ANR	3467995	Function	readcommand	212:0:6115:6194							
ANR	3467996	FunctionDef	readcommand (const char * * p)		3467995	0					
ANR	3467997	CompoundStatement		212:39:6154:6194	3467995	0					
ANR	3467998	ReturnStatement	"return indx ( p , mnemonics , 0 , NULL ) ;"	213:1:6157:6192	3467995	0	True				
ANR	3467999	CallExpression	"indx ( p , mnemonics , 0 , NULL )"		3467995	0					
ANR	3468000	Callee	indx		3467995	0					
ANR	3468001	Identifier	indx		3467995	0					
ANR	3468002	ArgumentList	p		3467995	1					
ANR	3468003	Argument	p		3467995	0					
ANR	3468004	Identifier	p		3467995	0					
ANR	3468005	Argument	mnemonics		3467995	1					
ANR	3468006	Identifier	mnemonics		3467995	0					
ANR	3468007	Argument	0		3467995	2					
ANR	3468008	PrimaryExpression	0		3467995	0					
ANR	3468009	Argument	NULL		3467995	3					
ANR	3468010	Identifier	NULL		3467995	0					
ANR	3468011	ReturnType	static int		3467995	1					
ANR	3468012	Identifier	readcommand		3467995	2					
ANR	3468013	ParameterList	const char * * p		3467995	3					
ANR	3468014	Parameter	const char * * p	212:23:6138:6151	3467995	0	True				
ANR	3468015	ParameterType	const char * *		3467995	0					
ANR	3468016	Identifier	p		3467995	1					
ANR	3468017	CFGEntryNode	ENTRY		3467995		True				
ANR	3468018	CFGExitNode	EXIT		3467995		True				
ANR	3468019	Symbol	p		3467995						
ANR	3468020	Symbol	NULL		3467995						
ANR	3468021	Symbol	indx		3467995						
ANR	3468022	Symbol	mnemonics		3467995						
ANR	3468023	Function	readlabel	217:0:6259:7509							
ANR	3468024	FunctionDef	"readlabel (const char * * p , int store)"		3468023	0					
ANR	3468025	CompoundStatement		217:49:6308:7509	3468023	0					
ANR	3468026	IdentifierDeclStatement	"const char * c , * d , * pos , * dummy ;"	218:1:6311:6342	3468023	0	True				
ANR	3468027	IdentifierDecl	* c		3468023	0					
ANR	3468028	IdentifierDeclType	const char *		3468023	0					
ANR	3468029	Identifier	c		3468023	1					
ANR	3468030	IdentifierDecl	* d		3468023	1					
ANR	3468031	IdentifierDeclType	const char *		3468023	0					
ANR	3468032	Identifier	d		3468023	1					
ANR	3468033	IdentifierDecl	* pos		3468023	2					
ANR	3468034	IdentifierDeclType	const char *		3468023	0					
ANR	3468035	Identifier	pos		3468023	1					
ANR	3468036	IdentifierDecl	* dummy		3468023	3					
ANR	3468037	IdentifierDeclType	const char *		3468023	0					
ANR	3468038	Identifier	dummy		3468023	1					
ANR	3468039	IdentifierDeclStatement	"int i , j ;"	219:1:6345:6353	3468023	1	True				
ANR	3468040	IdentifierDecl	i		3468023	0					
ANR	3468041	IdentifierDeclType	int		3468023	0					
ANR	3468042	Identifier	i		3468023	1					
ANR	3468043	IdentifierDecl	j		3468023	1					
ANR	3468044	IdentifierDeclType	int		3468023	0					
ANR	3468045	Identifier	j		3468023	1					
ANR	3468046	IdentifierDeclStatement	"struct label * buf , * previous ;"	220:1:6356:6384	3468023	2	True				
ANR	3468047	IdentifierDecl	* buf		3468023	0					
ANR	3468048	IdentifierDeclType	struct label *		3468023	0					
ANR	3468049	Identifier	buf		3468023	1					
ANR	3468050	IdentifierDecl	* previous		3468023	1					
ANR	3468051	IdentifierDeclType	struct label *		3468023	0					
ANR	3468052	Identifier	previous		3468023	1					
ANR	3468053	ForStatement	for ( d = * p ; * d && * d != ';' ; ++ d )		3468023	3					
ANR	3468054	ForInit	d = * p ;	221:6:6392:6398	3468023	0	True				
ANR	3468055	AssignmentExpression	d = * p		3468023	0		=			
ANR	3468056	Identifier	d		3468023	0					
ANR	3468057	UnaryOperationExpression	* p		3468023	1					
ANR	3468058	UnaryOperator	*		3468023	0					
ANR	3468059	Identifier	p		3468023	1					
ANR	3468060	Condition	* d && * d != ';'	221:14:6400:6414	3468023	1	True				
ANR	3468061	AndExpression	* d && * d != ';'		3468023	0		&&			
ANR	3468062	UnaryOperationExpression	* d		3468023	0					
ANR	3468063	UnaryOperator	*		3468023	0					
ANR	3468064	Identifier	d		3468023	1					
ANR	3468065	EqualityExpression	* d != ';'		3468023	1		!=			
ANR	3468066	UnaryOperationExpression	* d		3468023	0					
ANR	3468067	UnaryOperator	*		3468023	0					
ANR	3468068	Identifier	d		3468023	1					
ANR	3468069	PrimaryExpression	';'		3468023	1					
ANR	3468070	UnaryExpression	++ d	221:31:6417:6419	3468023	2	True				
ANR	3468071	IncDec	++		3468023	0					
ANR	3468072	Identifier	d		3468023	1					
ANR	3468073	CompoundStatement		5:36:113:113	3468023	3					
ANR	3468074	ExpressionStatement		222:2:6426:6426	3468023	0	True				
ANR	3468075	ForStatement	"for ( c = * p ; ! strchr ( "" \\r\\n\\t"" , * c ) && c < d ; ++ c )"		3468023	4					
ANR	3468076	ForInit	c = * p ;	224:6:6437:6443	3468023	0	True				
ANR	3468077	AssignmentExpression	c = * p		3468023	0		=			
ANR	3468078	Identifier	c		3468023	0					
ANR	3468079	UnaryOperationExpression	* p		3468023	1					
ANR	3468080	UnaryOperator	*		3468023	0					
ANR	3468081	Identifier	p		3468023	1					
ANR	3468082	Condition	"! strchr ( "" \\r\\n\\t"" , * c ) && c < d"	224:14:6445:6476	3468023	1	True				
ANR	3468083	AndExpression	"! strchr ( "" \\r\\n\\t"" , * c ) && c < d"		3468023	0		&&			
ANR	3468084	UnaryOperationExpression	"! strchr ( "" \\r\\n\\t"" , * c )"		3468023	0					
ANR	3468085	UnaryOperator	!		3468023	0					
ANR	3468086	CallExpression	"strchr ( "" \\r\\n\\t"" , * c )"		3468023	1					
ANR	3468087	Callee	strchr		3468023	0					
ANR	3468088	Identifier	strchr		3468023	0					
ANR	3468089	ArgumentList	""" \\r\\n\\t"""		3468023	1					
ANR	3468090	Argument	""" \\r\\n\\t"""		3468023	0					
ANR	3468091	PrimaryExpression	""" \\r\\n\\t"""		3468023	0					
ANR	3468092	Argument	* c		3468023	1					
ANR	3468093	UnaryOperationExpression	* c		3468023	0					
ANR	3468094	UnaryOperator	*		3468023	0					
ANR	3468095	Identifier	c		3468023	1					
ANR	3468096	RelationalExpression	c < d		3468023	1		<			
ANR	3468097	Identifier	c		3468023	0					
ANR	3468098	Identifier	d		3468023	1					
ANR	3468099	UnaryExpression	++ c	224:48:6479:6481	3468023	2	True				
ANR	3468100	IncDec	++		3468023	0					
ANR	3468101	Identifier	c		3468023	1					
ANR	3468102	CompoundStatement		8:53:175:175	3468023	3					
ANR	3468103	ExpressionStatement		225:2:6488:6488	3468023	0	True				
ANR	3468104	ExpressionStatement	"pos = strchr ( * p , ':' )"	227:1:6494:6516	3468023	5	True				
ANR	3468105	AssignmentExpression	"pos = strchr ( * p , ':' )"		3468023	0		=			
ANR	3468106	Identifier	pos		3468023	0					
ANR	3468107	CallExpression	"strchr ( * p , ':' )"		3468023	1					
ANR	3468108	Callee	strchr		3468023	0					
ANR	3468109	Identifier	strchr		3468023	0					
ANR	3468110	ArgumentList	* p		3468023	1					
ANR	3468111	Argument	* p		3468023	0					
ANR	3468112	UnaryOperationExpression	* p		3468023	0					
ANR	3468113	UnaryOperator	*		3468023	0					
ANR	3468114	Identifier	p		3468023	1					
ANR	3468115	Argument	':'		3468023	1					
ANR	3468116	PrimaryExpression	':'		3468023	0					
ANR	3468117	IfStatement	if ( ! pos || pos >= c )		3468023	6					
ANR	3468118	Condition	! pos || pos >= c	228:5:6523:6538	3468023	0	True				
ANR	3468119	OrExpression	! pos || pos >= c		3468023	0		||			
ANR	3468120	UnaryOperationExpression	! pos		3468023	0					
ANR	3468121	UnaryOperator	!		3468023	0					
ANR	3468122	Identifier	pos		3468023	1					
ANR	3468123	RelationalExpression	pos >= c		3468023	1		>=			
ANR	3468124	Identifier	pos		3468023	0					
ANR	3468125	Identifier	c		3468023	1					
ANR	3468126	CompoundStatement		12:23:232:232	3468023	1					
ANR	3468127	ReturnStatement	return ;	229:2:6545:6551	3468023	0	True				
ANR	3468128	IfStatement	if ( pos == * p )		3468023	7					
ANR	3468129	Condition	pos == * p	231:5:6561:6569	3468023	0	True				
ANR	3468130	EqualityExpression	pos == * p		3468023	0		==			
ANR	3468131	Identifier	pos		3468023	0					
ANR	3468132	UnaryOperationExpression	* p		3468023	1					
ANR	3468133	UnaryOperator	*		3468023	0					
ANR	3468134	Identifier	p		3468023	1					
ANR	3468135	CompoundStatement		15:16:263:263	3468023	1					
ANR	3468136	ExpressionStatement	"eprintf ( ""`:' found without a label"" )"	232:2:6576:6613	3468023	0	True				
ANR	3468137	CallExpression	"eprintf ( ""`:' found without a label"" )"		3468023	0					
ANR	3468138	Callee	eprintf		3468023	0					
ANR	3468139	Identifier	eprintf		3468023	0					
ANR	3468140	ArgumentList	"""`:' found without a label"""		3468023	1					
ANR	3468141	Argument	"""`:' found without a label"""		3468023	0					
ANR	3468142	PrimaryExpression	"""`:' found without a label"""		3468023	0					
ANR	3468143	ReturnStatement	return ;	233:2:6617:6623	3468023	1	True				
ANR	3468144	IfStatement	if ( ! store )		3468023	8					
ANR	3468145	Condition	! store	235:5:6633:6638	3468023	0	True				
ANR	3468146	UnaryOperationExpression	! store		3468023	0					
ANR	3468147	UnaryOperator	!		3468023	0					
ANR	3468148	Identifier	store		3468023	1					
ANR	3468149	CompoundStatement		19:13:332:332	3468023	1					
ANR	3468150	ExpressionStatement	* p = pos + 1	236:2:6645:6657	3468023	0	True				
ANR	3468151	AssignmentExpression	* p = pos + 1		3468023	0		=			
ANR	3468152	UnaryOperationExpression	* p		3468023	0					
ANR	3468153	UnaryOperator	*		3468023	0					
ANR	3468154	Identifier	p		3468023	1					
ANR	3468155	AdditiveExpression	pos + 1		3468023	1		+			
ANR	3468156	Identifier	pos		3468023	0					
ANR	3468157	PrimaryExpression	1		3468023	1					
ANR	3468158	ReturnStatement	return ;	237:2:6661:6667	3468023	1	True				
ANR	3468159	ExpressionStatement	c = pos + 1	239:1:6673:6684	3468023	9	True				
ANR	3468160	AssignmentExpression	c = pos + 1		3468023	0		=			
ANR	3468161	Identifier	c		3468023	0					
ANR	3468162	AdditiveExpression	pos + 1		3468023	1		+			
ANR	3468163	Identifier	pos		3468023	0					
ANR	3468164	PrimaryExpression	1		3468023	1					
ANR	3468165	ExpressionStatement	dummy = * p	240:1:6687:6697	3468023	10	True				
ANR	3468166	AssignmentExpression	dummy = * p		3468023	0		=			
ANR	3468167	Identifier	dummy		3468023	0					
ANR	3468168	UnaryOperationExpression	* p		3468023	1					
ANR	3468169	UnaryOperator	*		3468023	0					
ANR	3468170	Identifier	p		3468023	1					
ANR	3468171	ExpressionStatement	"j = rd_label ( & dummy , & i , & previous , sp , 0 )"	241:1:6700:6743	3468023	11	True				
ANR	3468172	AssignmentExpression	"j = rd_label ( & dummy , & i , & previous , sp , 0 )"		3468023	0		=			
ANR	3468173	Identifier	j		3468023	0					
ANR	3468174	CallExpression	"rd_label ( & dummy , & i , & previous , sp , 0 )"		3468023	1					
ANR	3468175	Callee	rd_label		3468023	0					
ANR	3468176	Identifier	rd_label		3468023	0					
ANR	3468177	ArgumentList	& dummy		3468023	1					
ANR	3468178	Argument	& dummy		3468023	0					
ANR	3468179	UnaryOperationExpression	& dummy		3468023	0					
ANR	3468180	UnaryOperator	&		3468023	0					
ANR	3468181	Identifier	dummy		3468023	1					
ANR	3468182	Argument	& i		3468023	1					
ANR	3468183	UnaryOperationExpression	& i		3468023	0					
ANR	3468184	UnaryOperator	&		3468023	0					
ANR	3468185	Identifier	i		3468023	1					
ANR	3468186	Argument	& previous		3468023	2					
ANR	3468187	UnaryOperationExpression	& previous		3468023	0					
ANR	3468188	UnaryOperator	&		3468023	0					
ANR	3468189	Identifier	previous		3468023	1					
ANR	3468190	Argument	sp		3468023	3					
ANR	3468191	Identifier	sp		3468023	0					
ANR	3468192	Argument	0		3468023	4					
ANR	3468193	PrimaryExpression	0		3468023	0					
ANR	3468194	IfStatement	if ( i || j )		3468023	12					
ANR	3468195	Condition	i || j	242:5:6750:6755	3468023	0	True				
ANR	3468196	OrExpression	i || j		3468023	0		||			
ANR	3468197	Identifier	i		3468023	0					
ANR	3468198	Identifier	j		3468023	1					
ANR	3468199	CompoundStatement		26:13:449:449	3468023	1					
ANR	3468200	ExpressionStatement	"eprintf ( ""duplicate definition of label %s\\n"" , * p )"	243:2:6762:6812	3468023	0	True				
ANR	3468201	CallExpression	"eprintf ( ""duplicate definition of label %s\\n"" , * p )"		3468023	0					
ANR	3468202	Callee	eprintf		3468023	0					
ANR	3468203	Identifier	eprintf		3468023	0					
ANR	3468204	ArgumentList	"""duplicate definition of label %s\\n"""		3468023	1					
ANR	3468205	Argument	"""duplicate definition of label %s\\n"""		3468023	0					
ANR	3468206	PrimaryExpression	"""duplicate definition of label %s\\n"""		3468023	0					
ANR	3468207	Argument	* p		3468023	1					
ANR	3468208	UnaryOperationExpression	* p		3468023	0					
ANR	3468209	UnaryOperator	*		3468023	0					
ANR	3468210	Identifier	p		3468023	1					
ANR	3468211	ExpressionStatement	* p = c	244:2:6816:6822	3468023	1	True				
ANR	3468212	AssignmentExpression	* p = c		3468023	0		=			
ANR	3468213	UnaryOperationExpression	* p		3468023	0					
ANR	3468214	UnaryOperator	*		3468023	0					
ANR	3468215	Identifier	p		3468023	1					
ANR	3468216	Identifier	c		3468023	1					
ANR	3468217	ReturnStatement	return ;	245:2:6826:6832	3468023	2	True				
ANR	3468218	IfStatement	if ( ! ( buf = malloc ( sizeof ( struct label ) + c - * p ) ) )		3468023	13					
ANR	3468219	Condition	! ( buf = malloc ( sizeof ( struct label ) + c - * p ) )	247:5:6842:6889	3468023	0	True				
ANR	3468220	UnaryOperationExpression	! ( buf = malloc ( sizeof ( struct label ) + c - * p ) )		3468023	0					
ANR	3468221	UnaryOperator	!		3468023	0					
ANR	3468222	AssignmentExpression	buf = malloc ( sizeof ( struct label ) + c - * p )		3468023	1		=			
ANR	3468223	Identifier	buf		3468023	0					
ANR	3468224	CallExpression	malloc ( sizeof ( struct label ) + c - * p )		3468023	1					
ANR	3468225	Callee	malloc		3468023	0					
ANR	3468226	Identifier	malloc		3468023	0					
ANR	3468227	ArgumentList	sizeof ( struct label ) + c - * p		3468023	1					
ANR	3468228	Argument	sizeof ( struct label ) + c - * p		3468023	0					
ANR	3468229	AdditiveExpression	sizeof ( struct label ) + c - * p		3468023	0		+			
ANR	3468230	SizeofExpression	sizeof ( struct label )		3468023	0					
ANR	3468231	Sizeof	sizeof		3468023	0					
ANR	3468232	SizeofOperand	struct label		3468023	1					
ANR	3468233	AdditiveExpression	c - * p		3468023	1		-			
ANR	3468234	Identifier	c		3468023	0					
ANR	3468235	UnaryOperationExpression	* p		3468023	1					
ANR	3468236	UnaryOperator	*		3468023	0					
ANR	3468237	Identifier	p		3468023	1					
ANR	3468238	CompoundStatement		31:55:583:583	3468023	1					
ANR	3468239	ExpressionStatement	"eprintf ( ""not enough memory to store label %s\\n"" , * p )"	248:2:6896:6949	3468023	0	True				
ANR	3468240	CallExpression	"eprintf ( ""not enough memory to store label %s\\n"" , * p )"		3468023	0					
ANR	3468241	Callee	eprintf		3468023	0					
ANR	3468242	Identifier	eprintf		3468023	0					
ANR	3468243	ArgumentList	"""not enough memory to store label %s\\n"""		3468023	1					
ANR	3468244	Argument	"""not enough memory to store label %s\\n"""		3468023	0					
ANR	3468245	PrimaryExpression	"""not enough memory to store label %s\\n"""		3468023	0					
ANR	3468246	Argument	* p		3468023	1					
ANR	3468247	UnaryOperationExpression	* p		3468023	0					
ANR	3468248	UnaryOperator	*		3468023	0					
ANR	3468249	Identifier	p		3468023	1					
ANR	3468250	ExpressionStatement	* p = c	250:2:6959:6965	3468023	1	True				
ANR	3468251	AssignmentExpression	* p = c		3468023	0		=			
ANR	3468252	UnaryOperationExpression	* p		3468023	0					
ANR	3468253	UnaryOperator	*		3468023	0					
ANR	3468254	Identifier	p		3468023	1					
ANR	3468255	Identifier	c		3468023	1					
ANR	3468256	ReturnStatement	return ;	251:2:6969:6975	3468023	2	True				
ANR	3468257	ExpressionStatement	"strncpy ( buf -> name , * p , c - * p - 1 )"	256:1:7085:7120	3468023	14	True				
ANR	3468258	CallExpression	"strncpy ( buf -> name , * p , c - * p - 1 )"		3468023	0					
ANR	3468259	Callee	strncpy		3468023	0					
ANR	3468260	Identifier	strncpy		3468023	0					
ANR	3468261	ArgumentList	buf -> name		3468023	1					
ANR	3468262	Argument	buf -> name		3468023	0					
ANR	3468263	PtrMemberAccess	buf -> name		3468023	0					
ANR	3468264	Identifier	buf		3468023	0					
ANR	3468265	Identifier	name		3468023	1					
ANR	3468266	Argument	* p		3468023	1					
ANR	3468267	UnaryOperationExpression	* p		3468023	0					
ANR	3468268	UnaryOperator	*		3468023	0					
ANR	3468269	Identifier	p		3468023	1					
ANR	3468270	Argument	c - * p - 1		3468023	2					
ANR	3468271	AdditiveExpression	c - * p - 1		3468023	0		-			
ANR	3468272	Identifier	c		3468023	0					
ANR	3468273	AdditiveExpression	* p - 1		3468023	1		-			
ANR	3468274	UnaryOperationExpression	* p		3468023	0					
ANR	3468275	UnaryOperator	*		3468023	0					
ANR	3468276	Identifier	p		3468023	1					
ANR	3468277	PrimaryExpression	1		3468023	1					
ANR	3468278	ExpressionStatement	buf -> name [ c - * p - 1 ] = 0	257:1:7123:7148	3468023	15	True				
ANR	3468279	AssignmentExpression	buf -> name [ c - * p - 1 ] = 0		3468023	0		=			
ANR	3468280	ArrayIndexing	buf -> name [ c - * p - 1 ]		3468023	0					
ANR	3468281	PtrMemberAccess	buf -> name		3468023	0					
ANR	3468282	Identifier	buf		3468023	0					
ANR	3468283	Identifier	name		3468023	1					
ANR	3468284	AdditiveExpression	c - * p - 1		3468023	1		-			
ANR	3468285	Identifier	c		3468023	0					
ANR	3468286	AdditiveExpression	* p - 1		3468023	1		-			
ANR	3468287	UnaryOperationExpression	* p		3468023	0					
ANR	3468288	UnaryOperator	*		3468023	0					
ANR	3468289	Identifier	p		3468023	1					
ANR	3468290	PrimaryExpression	1		3468023	1					
ANR	3468291	PrimaryExpression	0		3468023	1					
ANR	3468292	ExpressionStatement	* p = c	258:1:7151:7157	3468023	16	True				
ANR	3468293	AssignmentExpression	* p = c		3468023	0		=			
ANR	3468294	UnaryOperationExpression	* p		3468023	0					
ANR	3468295	UnaryOperator	*		3468023	0					
ANR	3468296	Identifier	p		3468023	1					
ANR	3468297	Identifier	c		3468023	1					
ANR	3468298	ExpressionStatement	buf -> value = addr	259:1:7160:7177	3468023	17	True				
ANR	3468299	AssignmentExpression	buf -> value = addr		3468023	0		=			
ANR	3468300	PtrMemberAccess	buf -> value		3468023	0					
ANR	3468301	Identifier	buf		3468023	0					
ANR	3468302	Identifier	value		3468023	1					
ANR	3468303	Identifier	addr		3468023	1					
ANR	3468304	IfStatement	if ( previous )		3468023	18					
ANR	3468305	Condition	previous	261:5:7205:7212	3468023	0	True				
ANR	3468306	Identifier	previous		3468023	0					
ANR	3468307	CompoundStatement		45:15:906:906	3468023	1					
ANR	3468308	ExpressionStatement	buf -> next = previous -> next	262:2:7219:7245	3468023	0	True				
ANR	3468309	AssignmentExpression	buf -> next = previous -> next		3468023	0		=			
ANR	3468310	PtrMemberAccess	buf -> next		3468023	0					
ANR	3468311	Identifier	buf		3468023	0					
ANR	3468312	Identifier	next		3468023	1					
ANR	3468313	PtrMemberAccess	previous -> next		3468023	1					
ANR	3468314	Identifier	previous		3468023	0					
ANR	3468315	Identifier	next		3468023	1					
ANR	3468316	ElseStatement	else		3468023	0					
ANR	3468317	CompoundStatement		47:8:946:946	3468023	0					
ANR	3468318	ExpressionStatement	buf -> next = NULL	264:2:7259:7275	3468023	0	True				
ANR	3468319	AssignmentExpression	buf -> next = NULL		3468023	0		=			
ANR	3468320	PtrMemberAccess	buf -> next		3468023	0					
ANR	3468321	Identifier	buf		3468023	0					
ANR	3468322	Identifier	next		3468023	1					
ANR	3468323	Identifier	NULL		3468023	1					
ANR	3468324	ExpressionStatement	buf -> prev = previous	266:1:7281:7301	3468023	19	True				
ANR	3468325	AssignmentExpression	buf -> prev = previous		3468023	0		=			
ANR	3468326	PtrMemberAccess	buf -> prev		3468023	0					
ANR	3468327	Identifier	buf		3468023	0					
ANR	3468328	Identifier	prev		3468023	1					
ANR	3468329	Identifier	previous		3468023	1					
ANR	3468330	ExpressionStatement	buf -> valid = 1	267:1:7304:7318	3468023	20	True				
ANR	3468331	AssignmentExpression	buf -> valid = 1		3468023	0		=			
ANR	3468332	PtrMemberAccess	buf -> valid		3468023	0					
ANR	3468333	Identifier	buf		3468023	0					
ANR	3468334	Identifier	valid		3468023	1					
ANR	3468335	PrimaryExpression	1		3468023	1					
ANR	3468336	ExpressionStatement	buf -> busy = 0	268:1:7321:7334	3468023	21	True				
ANR	3468337	AssignmentExpression	buf -> busy = 0		3468023	0		=			
ANR	3468338	PtrMemberAccess	buf -> busy		3468023	0					
ANR	3468339	Identifier	buf		3468023	0					
ANR	3468340	Identifier	busy		3468023	1					
ANR	3468341	PrimaryExpression	0		3468023	1					
ANR	3468342	ExpressionStatement	buf -> ref = NULL	269:1:7337:7352	3468023	22	True				
ANR	3468343	AssignmentExpression	buf -> ref = NULL		3468023	0		=			
ANR	3468344	PtrMemberAccess	buf -> ref		3468023	0					
ANR	3468345	Identifier	buf		3468023	0					
ANR	3468346	Identifier	ref		3468023	1					
ANR	3468347	Identifier	NULL		3468023	1					
ANR	3468348	IfStatement	if ( buf -> prev )		3468023	23					
ANR	3468349	Condition	buf -> prev	270:5:7359:7367	3468023	0	True				
ANR	3468350	PtrMemberAccess	buf -> prev		3468023	0					
ANR	3468351	Identifier	buf		3468023	0					
ANR	3468352	Identifier	prev		3468023	1					
ANR	3468353	CompoundStatement		54:16:1061:1061	3468023	1					
ANR	3468354	ExpressionStatement	buf -> prev -> next = buf	271:2:7374:7395	3468023	0	True				
ANR	3468355	AssignmentExpression	buf -> prev -> next = buf		3468023	0		=			
ANR	3468356	PtrMemberAccess	buf -> prev -> next		3468023	0					
ANR	3468357	PtrMemberAccess	buf -> prev		3468023	0					
ANR	3468358	Identifier	buf		3468023	0					
ANR	3468359	Identifier	prev		3468023	1					
ANR	3468360	Identifier	next		3468023	1					
ANR	3468361	Identifier	buf		3468023	1					
ANR	3468362	IfStatement	if ( buf -> next )		3468023	24					
ANR	3468363	Condition	buf -> next	273:5:7405:7413	3468023	0	True				
ANR	3468364	PtrMemberAccess	buf -> next		3468023	0					
ANR	3468365	Identifier	buf		3468023	0					
ANR	3468366	Identifier	next		3468023	1					
ANR	3468367	CompoundStatement		57:16:1107:1107	3468023	1					
ANR	3468368	ExpressionStatement	buf -> next -> prev = buf	274:2:7420:7441	3468023	0	True				
ANR	3468369	AssignmentExpression	buf -> next -> prev = buf		3468023	0		=			
ANR	3468370	PtrMemberAccess	buf -> next -> prev		3468023	0					
ANR	3468371	PtrMemberAccess	buf -> next		3468023	0					
ANR	3468372	Identifier	buf		3468023	0					
ANR	3468373	Identifier	next		3468023	1					
ANR	3468374	Identifier	prev		3468023	1					
ANR	3468375	Identifier	buf		3468023	1					
ANR	3468376	ReturnType	static void		3468023	1					
ANR	3468377	Identifier	readlabel		3468023	2					
ANR	3468378	ParameterList	"const char * * p , int store"		3468023	3					
ANR	3468379	Parameter	const char * * p	217:22:6281:6294	3468023	0	True				
ANR	3468380	ParameterType	const char * *		3468023	0					
ANR	3468381	Identifier	p		3468023	1					
ANR	3468382	Parameter	int store	217:38:6297:6305	3468023	1	True				
ANR	3468383	ParameterType	int		3468023	0					
ANR	3468384	Identifier	store		3468023	1					
ANR	3468385	CFGEntryNode	ENTRY		3468023		True				
ANR	3468386	CFGExitNode	EXIT		3468023		True				
ANR	3468387	Symbol	* buf -> name		3468023						
ANR	3468388	Symbol	* previous		3468023						
ANR	3468389	Symbol	* * buf		3468023						
ANR	3468390	Symbol	strchr		3468023						
ANR	3468391	Symbol	dummy		3468023						
ANR	3468392	Symbol	& dummy		3468023						
ANR	3468393	Symbol	pos		3468023						
ANR	3468394	Symbol	rd_label		3468023						
ANR	3468395	Symbol	buf -> prev		3468023						
ANR	3468396	Symbol	buf -> ref		3468023						
ANR	3468397	Symbol	buf -> next		3468023						
ANR	3468398	Symbol	buf -> prev -> next		3468023						
ANR	3468399	Symbol	* * p		3468023						
ANR	3468400	Symbol	addr		3468023						
ANR	3468401	Symbol	sp		3468023						
ANR	3468402	Symbol	malloc		3468023						
ANR	3468403	Symbol	* buf		3468023						
ANR	3468404	Symbol	c		3468023						
ANR	3468405	Symbol	NULL		3468023						
ANR	3468406	Symbol	d		3468023						
ANR	3468407	Symbol	previous		3468023						
ANR	3468408	Symbol	buf -> busy		3468023						
ANR	3468409	Symbol	* buf -> prev		3468023						
ANR	3468410	Symbol	i		3468023						
ANR	3468411	Symbol	* buf -> next		3468023						
ANR	3468412	Symbol	j		3468023						
ANR	3468413	Symbol	store		3468023						
ANR	3468414	Symbol	buf -> valid		3468023						
ANR	3468415	Symbol	* c		3468023						
ANR	3468416	Symbol	buf -> next -> prev		3468023						
ANR	3468417	Symbol	* d		3468023						
ANR	3468418	Symbol	& i		3468023						
ANR	3468419	Symbol	buf -> name		3468023						
ANR	3468420	Symbol	p		3468023						
ANR	3468421	Symbol	buf		3468023						
ANR	3468422	Symbol	previous -> next		3468023						
ANR	3468423	Symbol	& previous		3468023						
ANR	3468424	Symbol	buf -> value		3468023						
ANR	3468425	Symbol	* p		3468023						
ANR	3468426	Function	compute_ref	283:0:7512:8174							
ANR	3468427	FunctionDef	"compute_ref (struct reference * ref , int allow_invalid)"		3468426	0					
ANR	3468428	CompoundStatement		283:65:7577:8174	3468426	0					
ANR	3468429	IdentifierDeclStatement	const char * ptr ;	284:1:7580:7595	3468426	0	True				
ANR	3468430	IdentifierDecl	* ptr		3468426	0					
ANR	3468431	IdentifierDeclType	const char *		3468426	0					
ANR	3468432	Identifier	ptr		3468426	1					
ANR	3468433	IdentifierDeclStatement	int valid = 0 ;	285:1:7598:7611	3468426	1	True				
ANR	3468434	IdentifierDecl	valid = 0		3468426	0					
ANR	3468435	IdentifierDeclType	int		3468426	0					
ANR	3468436	Identifier	valid		3468426	1					
ANR	3468437	AssignmentExpression	valid = 0		3468426	2		=			
ANR	3468438	Identifier	valid		3468426	0					
ANR	3468439	PrimaryExpression	0		3468426	1					
ANR	3468440	IdentifierDeclStatement	int backup_addr = addr ;	286:1:7614:7636	3468426	2	True				
ANR	3468441	IdentifierDecl	backup_addr = addr		3468426	0					
ANR	3468442	IdentifierDeclType	int		3468426	0					
ANR	3468443	Identifier	backup_addr		3468426	1					
ANR	3468444	AssignmentExpression	backup_addr = addr		3468426	2		=			
ANR	3468445	Identifier	addr		3468426	0					
ANR	3468446	Identifier	addr		3468426	1					
ANR	3468447	IdentifierDeclStatement	int backup_baseaddr = baseaddr ;	287:1:7639:7669	3468426	3	True				
ANR	3468448	IdentifierDecl	backup_baseaddr = baseaddr		3468426	0					
ANR	3468449	IdentifierDeclType	int		3468426	0					
ANR	3468450	Identifier	backup_baseaddr		3468426	1					
ANR	3468451	AssignmentExpression	backup_baseaddr = baseaddr		3468426	2		=			
ANR	3468452	Identifier	baseaddr		3468426	0					
ANR	3468453	Identifier	baseaddr		3468426	1					
ANR	3468454	IdentifierDeclStatement	int backup_comma = comma ;	288:1:7672:7696	3468426	4	True				
ANR	3468455	IdentifierDecl	backup_comma = comma		3468426	0					
ANR	3468456	IdentifierDeclType	int		3468426	0					
ANR	3468457	Identifier	backup_comma		3468426	1					
ANR	3468458	AssignmentExpression	backup_comma = comma		3468426	2		=			
ANR	3468459	Identifier	comma		3468426	0					
ANR	3468460	Identifier	comma		3468426	1					
ANR	3468461	IdentifierDeclStatement	int backup_file = file ;	289:1:7699:7721	3468426	5	True				
ANR	3468462	IdentifierDecl	backup_file = file		3468426	0					
ANR	3468463	IdentifierDeclType	int		3468426	0					
ANR	3468464	Identifier	backup_file		3468426	1					
ANR	3468465	AssignmentExpression	backup_file = file		3468426	2		=			
ANR	3468466	Identifier	file		3468426	0					
ANR	3468467	Identifier	file		3468426	1					
ANR	3468468	IdentifierDeclStatement	int backup_sp = sp ;	290:1:7724:7742	3468426	6	True				
ANR	3468469	IdentifierDecl	backup_sp = sp		3468426	0					
ANR	3468470	IdentifierDeclType	int		3468426	0					
ANR	3468471	Identifier	backup_sp		3468426	1					
ANR	3468472	AssignmentExpression	backup_sp = sp		3468426	2		=			
ANR	3468473	Identifier	sp		3468426	0					
ANR	3468474	Identifier	sp		3468426	1					
ANR	3468475	ExpressionStatement	sp = ref -> level	291:1:7745:7760	3468426	7	True				
ANR	3468476	AssignmentExpression	sp = ref -> level		3468426	0		=			
ANR	3468477	Identifier	sp		3468426	0					
ANR	3468478	PtrMemberAccess	ref -> level		3468426	1					
ANR	3468479	Identifier	ref		3468426	0					
ANR	3468480	Identifier	level		3468426	1					
ANR	3468481	ExpressionStatement	addr = ref -> addr	292:1:7763:7779	3468426	8	True				
ANR	3468482	AssignmentExpression	addr = ref -> addr		3468426	0		=			
ANR	3468483	Identifier	addr		3468426	0					
ANR	3468484	PtrMemberAccess	ref -> addr		3468426	1					
ANR	3468485	Identifier	ref		3468426	0					
ANR	3468486	Identifier	addr		3468426	1					
ANR	3468487	ExpressionStatement	baseaddr = ref -> baseaddr	293:1:7782:7806	3468426	9	True				
ANR	3468488	AssignmentExpression	baseaddr = ref -> baseaddr		3468426	0		=			
ANR	3468489	Identifier	baseaddr		3468426	0					
ANR	3468490	PtrMemberAccess	ref -> baseaddr		3468426	1					
ANR	3468491	Identifier	ref		3468426	0					
ANR	3468492	Identifier	baseaddr		3468426	1					
ANR	3468493	ExpressionStatement	comma = ref -> comma	294:1:7809:7827	3468426	10	True				
ANR	3468494	AssignmentExpression	comma = ref -> comma		3468426	0		=			
ANR	3468495	Identifier	comma		3468426	0					
ANR	3468496	PtrMemberAccess	ref -> comma		3468426	1					
ANR	3468497	Identifier	ref		3468426	0					
ANR	3468498	Identifier	comma		3468426	1					
ANR	3468499	ExpressionStatement	file = ref -> infile	295:1:7830:7848	3468426	11	True				
ANR	3468500	AssignmentExpression	file = ref -> infile		3468426	0		=			
ANR	3468501	Identifier	file		3468426	0					
ANR	3468502	PtrMemberAccess	ref -> infile		3468426	1					
ANR	3468503	Identifier	ref		3468426	0					
ANR	3468504	Identifier	infile		3468426	1					
ANR	3468505	ExpressionStatement	ptr = ref -> input	296:1:7851:7867	3468426	12	True				
ANR	3468506	AssignmentExpression	ptr = ref -> input		3468426	0		=			
ANR	3468507	Identifier	ptr		3468426	0					
ANR	3468508	PtrMemberAccess	ref -> input		3468426	1					
ANR	3468509	Identifier	ref		3468426	0					
ANR	3468510	Identifier	input		3468426	1					
ANR	3468511	IfStatement	if ( ! ref -> done )		3468426	13					
ANR	3468512	Condition	! ref -> done	297:5:7874:7883	3468426	0	True				
ANR	3468513	UnaryOperationExpression	! ref -> done		3468426	0					
ANR	3468514	UnaryOperator	!		3468426	0					
ANR	3468515	PtrMemberAccess	ref -> done		3468426	1					
ANR	3468516	Identifier	ref		3468426	0					
ANR	3468517	Identifier	done		3468426	1					
ANR	3468518	CompoundStatement		15:17:308:308	3468426	1					
ANR	3468519	ExpressionStatement	"ref -> computed_value = rd_expr ( & ptr , ref -> delimiter , allow_invalid ? & valid : NULL , ref -> level , 1 )"	298:2:7890:7992	3468426	0	True				
ANR	3468520	AssignmentExpression	"ref -> computed_value = rd_expr ( & ptr , ref -> delimiter , allow_invalid ? & valid : NULL , ref -> level , 1 )"		3468426	0		=			
ANR	3468521	PtrMemberAccess	ref -> computed_value		3468426	0					
ANR	3468522	Identifier	ref		3468426	0					
ANR	3468523	Identifier	computed_value		3468426	1					
ANR	3468524	CallExpression	"rd_expr ( & ptr , ref -> delimiter , allow_invalid ? & valid : NULL , ref -> level , 1 )"		3468426	1					
ANR	3468525	Callee	rd_expr		3468426	0					
ANR	3468526	Identifier	rd_expr		3468426	0					
ANR	3468527	ArgumentList	& ptr		3468426	1					
ANR	3468528	Argument	& ptr		3468426	0					
ANR	3468529	UnaryOperationExpression	& ptr		3468426	0					
ANR	3468530	UnaryOperator	&		3468426	0					
ANR	3468531	Identifier	ptr		3468426	1					
ANR	3468532	Argument	ref -> delimiter		3468426	1					
ANR	3468533	PtrMemberAccess	ref -> delimiter		3468426	0					
ANR	3468534	Identifier	ref		3468426	0					
ANR	3468535	Identifier	delimiter		3468426	1					
ANR	3468536	Argument	allow_invalid ? & valid : NULL		3468426	2					
ANR	3468537	ConditionalExpression	allow_invalid ? & valid : NULL		3468426	0					
ANR	3468538	Condition	allow_invalid		3468426	0					
ANR	3468539	Identifier	allow_invalid		3468426	0					
ANR	3468540	UnaryOperationExpression	& valid		3468426	1					
ANR	3468541	UnaryOperator	&		3468426	0					
ANR	3468542	Identifier	valid		3468426	1					
ANR	3468543	Identifier	NULL		3468426	2					
ANR	3468544	Argument	ref -> level		3468426	3					
ANR	3468545	PtrMemberAccess	ref -> level		3468426	0					
ANR	3468546	Identifier	ref		3468426	0					
ANR	3468547	Identifier	level		3468426	1					
ANR	3468548	Argument	1		3468426	4					
ANR	3468549	PrimaryExpression	1		3468426	0					
ANR	3468550	IfStatement	if ( valid )		3468426	1					
ANR	3468551	Condition	valid	301:6:8000:8004	3468426	0	True				
ANR	3468552	Identifier	valid		3468426	0					
ANR	3468553	CompoundStatement		19:13:429:429	3468426	1					
ANR	3468554	ExpressionStatement	ref -> done = 1	302:3:8012:8025	3468426	0	True				
ANR	3468555	AssignmentExpression	ref -> done = 1		3468426	0		=			
ANR	3468556	PtrMemberAccess	ref -> done		3468426	0					
ANR	3468557	Identifier	ref		3468426	0					
ANR	3468558	Identifier	done		3468426	1					
ANR	3468559	PrimaryExpression	1		3468426	1					
ANR	3468560	ExpressionStatement	sp = backup_sp	305:1:8035:8049	3468426	14	True				
ANR	3468561	AssignmentExpression	sp = backup_sp		3468426	0		=			
ANR	3468562	Identifier	sp		3468426	0					
ANR	3468563	Identifier	backup_sp		3468426	1					
ANR	3468564	ExpressionStatement	addr = backup_addr	306:1:8052:8070	3468426	15	True				
ANR	3468565	AssignmentExpression	addr = backup_addr		3468426	0		=			
ANR	3468566	Identifier	addr		3468426	0					
ANR	3468567	Identifier	backup_addr		3468426	1					
ANR	3468568	ExpressionStatement	baseaddr = backup_baseaddr	307:1:8073:8099	3468426	16	True				
ANR	3468569	AssignmentExpression	baseaddr = backup_baseaddr		3468426	0		=			
ANR	3468570	Identifier	baseaddr		3468426	0					
ANR	3468571	Identifier	backup_baseaddr		3468426	1					
ANR	3468572	ExpressionStatement	comma = backup_comma	308:1:8102:8122	3468426	17	True				
ANR	3468573	AssignmentExpression	comma = backup_comma		3468426	0		=			
ANR	3468574	Identifier	comma		3468426	0					
ANR	3468575	Identifier	backup_comma		3468426	1					
ANR	3468576	ExpressionStatement	file = backup_file	309:1:8125:8143	3468426	18	True				
ANR	3468577	AssignmentExpression	file = backup_file		3468426	0		=			
ANR	3468578	Identifier	file		3468426	0					
ANR	3468579	Identifier	backup_file		3468426	1					
ANR	3468580	ReturnStatement	return ref -> computed_value ;	310:1:8146:8172	3468426	19	True				
ANR	3468581	PtrMemberAccess	ref -> computed_value		3468426	0					
ANR	3468582	Identifier	ref		3468426	0					
ANR	3468583	Identifier	computed_value		3468426	1					
ANR	3468584	ReturnType	static int		3468426	1					
ANR	3468585	Identifier	compute_ref		3468426	2					
ANR	3468586	ParameterList	"struct reference * ref , int allow_invalid"		3468426	3					
ANR	3468587	Parameter	struct reference * ref	283:23:7535:7555	3468426	0	True				
ANR	3468588	ParameterType	struct reference *		3468426	0					
ANR	3468589	Identifier	ref		3468426	1					
ANR	3468590	Parameter	int allow_invalid	283:46:7558:7574	3468426	1	True				
ANR	3468591	ParameterType	int		3468426	0					
ANR	3468592	Identifier	allow_invalid		3468426	1					
ANR	3468593	CFGEntryNode	ENTRY		3468426		True				
ANR	3468594	CFGExitNode	EXIT		3468426		True				
ANR	3468595	Symbol	ref -> addr		3468426						
ANR	3468596	Symbol	backup_comma		3468426						
ANR	3468597	Symbol	valid		3468426						
ANR	3468598	Symbol	ref		3468426						
ANR	3468599	Symbol	file		3468426						
ANR	3468600	Symbol	ref -> comma		3468426						
ANR	3468601	Symbol	& ptr		3468426						
ANR	3468602	Symbol	ref -> baseaddr		3468426						
ANR	3468603	Symbol	allow_invalid		3468426						
ANR	3468604	Symbol	ref -> computed_value		3468426						
ANR	3468605	Symbol	addr		3468426						
ANR	3468606	Symbol	ref -> infile		3468426						
ANR	3468607	Symbol	ref -> input		3468426						
ANR	3468608	Symbol	sp		3468426						
ANR	3468609	Symbol	NULL		3468426						
ANR	3468610	Symbol	ref -> delimiter		3468426						
ANR	3468611	Symbol	baseaddr		3468426						
ANR	3468612	Symbol	backup_file		3468426						
ANR	3468613	Symbol	ptr		3468426						
ANR	3468614	Symbol	comma		3468426						
ANR	3468615	Symbol	backup_sp		3468426						
ANR	3468616	Symbol	backup_baseaddr		3468426						
ANR	3468617	Symbol	ref -> done		3468426						
ANR	3468618	Symbol	& valid		3468426						
ANR	3468619	Symbol	rd_expr		3468426						
ANR	3468620	Symbol	ref -> level		3468426						
ANR	3468621	Symbol	backup_addr		3468426						
ANR	3468622	Symbol	* ref		3468426						
ANR	3468623	Function	rd_word	314:0:8252:8437							
ANR	3468624	FunctionDef	"rd_word (const char * * p , char delimiter)"		3468623	0					
ANR	3468625	CompoundStatement		314:51:8303:8437	3468623	0					
ANR	3468626	ExpressionStatement	* p = delspc ( * p )	315:1:8306:8322	3468623	0	True				
ANR	3468627	AssignmentExpression	* p = delspc ( * p )		3468623	0		=			
ANR	3468628	UnaryOperationExpression	* p		3468623	0					
ANR	3468629	UnaryOperator	*		3468623	0					
ANR	3468630	Identifier	p		3468623	1					
ANR	3468631	CallExpression	delspc ( * p )		3468623	1					
ANR	3468632	Callee	delspc		3468623	0					
ANR	3468633	Identifier	delspc		3468623	0					
ANR	3468634	ArgumentList	* p		3468623	1					
ANR	3468635	Argument	* p		3468623	0					
ANR	3468636	UnaryOperationExpression	* p		3468623	0					
ANR	3468637	UnaryOperator	*		3468623	0					
ANR	3468638	Identifier	p		3468623	1					
ANR	3468639	IfStatement	if ( * * p == 0 )		3468623	1					
ANR	3468640	Condition	* * p == 0	316:5:8329:8336	3468623	0	True				
ANR	3468641	EqualityExpression	* * p == 0		3468623	0		==			
ANR	3468642	UnaryOperationExpression	* * p		3468623	0					
ANR	3468643	UnaryOperator	*		3468623	0					
ANR	3468644	UnaryOperationExpression	* p		3468623	1					
ANR	3468645	UnaryOperator	*		3468623	0					
ANR	3468646	Identifier	p		3468623	1					
ANR	3468647	PrimaryExpression	0		3468623	1					
ANR	3468648	CompoundStatement		3:15:35:35	3468623	1					
ANR	3468649	ReturnStatement	return 0 ;	317:2:8343:8351	3468623	0	True				
ANR	3468650	PrimaryExpression	0		3468623	0					
ANR	3468651	ExpressionStatement	readword = * p	319:1:8357:8370	3468623	2	True				
ANR	3468652	AssignmentExpression	readword = * p		3468623	0		=			
ANR	3468653	Identifier	readword		3468623	0					
ANR	3468654	UnaryOperationExpression	* p		3468623	1					
ANR	3468655	UnaryOperator	*		3468623	0					
ANR	3468656	Identifier	p		3468623	1					
ANR	3468657	ExpressionStatement	mem_delimiter = delimiter	320:1:8373:8398	3468623	3	True				
ANR	3468658	AssignmentExpression	mem_delimiter = delimiter		3468623	0		=			
ANR	3468659	Identifier	mem_delimiter		3468623	0					
ANR	3468660	Identifier	delimiter		3468623	1					
ANR	3468661	ExpressionStatement	"skipword ( p , delimiter )"	321:1:8401:8424	3468623	4	True				
ANR	3468662	CallExpression	"skipword ( p , delimiter )"		3468623	0					
ANR	3468663	Callee	skipword		3468623	0					
ANR	3468664	Identifier	skipword		3468623	0					
ANR	3468665	ArgumentList	p		3468623	1					
ANR	3468666	Argument	p		3468623	0					
ANR	3468667	Identifier	p		3468623	0					
ANR	3468668	Argument	delimiter		3468623	1					
ANR	3468669	Identifier	delimiter		3468623	0					
ANR	3468670	ReturnStatement	return 1 ;	322:1:8427:8435	3468623	5	True				
ANR	3468671	PrimaryExpression	1		3468623	0					
ANR	3468672	ReturnType	static int		3468623	1					
ANR	3468673	Identifier	rd_word		3468623	2					
ANR	3468674	ParameterList	"const char * * p , char delimiter"		3468623	3					
ANR	3468675	Parameter	const char * * p	314:19:8271:8284	3468623	0	True				
ANR	3468676	ParameterType	const char * *		3468623	0					
ANR	3468677	Identifier	p		3468623	1					
ANR	3468678	Parameter	char delimiter	314:35:8287:8300	3468623	1	True				
ANR	3468679	ParameterType	char		3468623	0					
ANR	3468680	Identifier	delimiter		3468623	1					
ANR	3468681	CFGEntryNode	ENTRY		3468623		True				
ANR	3468682	CFGExitNode	EXIT		3468623		True				
ANR	3468683	Symbol	p		3468623						
ANR	3468684	Symbol	delimiter		3468623						
ANR	3468685	Symbol	* p		3468623						
ANR	3468686	Symbol	readword		3468623						
ANR	3468687	Symbol	* * p		3468623						
ANR	3468688	Symbol	delspc		3468623						
ANR	3468689	Symbol	mem_delimiter		3468623						
ANR	3468690	Function	rd_byte	326:0:8515:8716							
ANR	3468691	FunctionDef	"rd_byte (const char * * p , char delimiter)"		3468690	0					
ANR	3468692	CompoundStatement		326:51:8566:8716	3468690	0					
ANR	3468693	ExpressionStatement	* p = delspc ( * p )	327:1:8569:8585	3468690	0	True				
ANR	3468694	AssignmentExpression	* p = delspc ( * p )		3468690	0		=			
ANR	3468695	UnaryOperationExpression	* p		3468690	0					
ANR	3468696	UnaryOperator	*		3468690	0					
ANR	3468697	Identifier	p		3468690	1					
ANR	3468698	CallExpression	delspc ( * p )		3468690	1					
ANR	3468699	Callee	delspc		3468690	0					
ANR	3468700	Identifier	delspc		3468690	0					
ANR	3468701	ArgumentList	* p		3468690	1					
ANR	3468702	Argument	* p		3468690	0					
ANR	3468703	UnaryOperationExpression	* p		3468690	0					
ANR	3468704	UnaryOperator	*		3468690	0					
ANR	3468705	Identifier	p		3468690	1					
ANR	3468706	IfStatement	if ( * * p == 0 )		3468690	1					
ANR	3468707	Condition	* * p == 0	328:5:8592:8599	3468690	0	True				
ANR	3468708	EqualityExpression	* * p == 0		3468690	0		==			
ANR	3468709	UnaryOperationExpression	* * p		3468690	0					
ANR	3468710	UnaryOperator	*		3468690	0					
ANR	3468711	UnaryOperationExpression	* p		3468690	1					
ANR	3468712	UnaryOperator	*		3468690	0					
ANR	3468713	Identifier	p		3468690	1					
ANR	3468714	PrimaryExpression	0		3468690	1					
ANR	3468715	CompoundStatement		3:15:35:35	3468690	1					
ANR	3468716	ReturnStatement	return 0 ;	329:2:8606:8614	3468690	0	True				
ANR	3468717	PrimaryExpression	0		3468690	0					
ANR	3468718	ExpressionStatement	readbyte = * p	331:1:8620:8633	3468690	2	True				
ANR	3468719	AssignmentExpression	readbyte = * p		3468690	0		=			
ANR	3468720	Identifier	readbyte		3468690	0					
ANR	3468721	UnaryOperationExpression	* p		3468690	1					
ANR	3468722	UnaryOperator	*		3468690	0					
ANR	3468723	Identifier	p		3468690	1					
ANR	3468724	ExpressionStatement	writebyte = 1	332:1:8636:8649	3468690	3	True				
ANR	3468725	AssignmentExpression	writebyte = 1		3468690	0		=			
ANR	3468726	Identifier	writebyte		3468690	0					
ANR	3468727	PrimaryExpression	1		3468690	1					
ANR	3468728	ExpressionStatement	mem_delimiter = delimiter	333:1:8652:8677	3468690	4	True				
ANR	3468729	AssignmentExpression	mem_delimiter = delimiter		3468690	0		=			
ANR	3468730	Identifier	mem_delimiter		3468690	0					
ANR	3468731	Identifier	delimiter		3468690	1					
ANR	3468732	ExpressionStatement	"skipword ( p , delimiter )"	334:1:8680:8703	3468690	5	True				
ANR	3468733	CallExpression	"skipword ( p , delimiter )"		3468690	0					
ANR	3468734	Callee	skipword		3468690	0					
ANR	3468735	Identifier	skipword		3468690	0					
ANR	3468736	ArgumentList	p		3468690	1					
ANR	3468737	Argument	p		3468690	0					
ANR	3468738	Identifier	p		3468690	0					
ANR	3468739	Argument	delimiter		3468690	1					
ANR	3468740	Identifier	delimiter		3468690	0					
ANR	3468741	ReturnStatement	return 1 ;	335:1:8706:8714	3468690	6	True				
ANR	3468742	PrimaryExpression	1		3468690	0					
ANR	3468743	ReturnType	static int		3468690	1					
ANR	3468744	Identifier	rd_byte		3468690	2					
ANR	3468745	ParameterList	"const char * * p , char delimiter"		3468690	3					
ANR	3468746	Parameter	const char * * p	326:19:8534:8547	3468690	0	True				
ANR	3468747	ParameterType	const char * *		3468690	0					
ANR	3468748	Identifier	p		3468690	1					
ANR	3468749	Parameter	char delimiter	326:35:8550:8563	3468690	1	True				
ANR	3468750	ParameterType	char		3468690	0					
ANR	3468751	Identifier	delimiter		3468690	1					
ANR	3468752	CFGEntryNode	ENTRY		3468690		True				
ANR	3468753	CFGExitNode	EXIT		3468690		True				
ANR	3468754	Symbol	p		3468690						
ANR	3468755	Symbol	writebyte		3468690						
ANR	3468756	Symbol	delimiter		3468690						
ANR	3468757	Symbol	* p		3468690						
ANR	3468758	Symbol	* * p		3468690						
ANR	3468759	Symbol	delspc		3468690						
ANR	3468760	Symbol	readbyte		3468690						
ANR	3468761	Symbol	mem_delimiter		3468690						
ANR	3468762	Function	rd_ex1	339:0:8746:8898							
ANR	3468763	FunctionDef	rd_ex1 (const char * * p)		3468762	0					
ANR	3468764	CompoundStatement		339:34:8780:8898	3468762	0					
ANR	3468765	Statement	define	340:1:8783:8788	3468762	0	True				
ANR	3468766	Statement	DE	340:8:8790:8791	3468762	1	True				
ANR	3468767	Statement	2	340:11:8793:8793	3468762	2	True				
ANR	3468768	Statement	define	341:1:8796:8801	3468762	3	True				
ANR	3468769	Statement	AF	341:8:8803:8804	3468762	4	True				
ANR	3468770	Statement	3	341:11:8806:8806	3468762	5	True				
ANR	3468771	IdentifierDeclStatement	"const char * list [ ] = { ""( sp )"" , ""de"" , ""af"" , NULL } ;"	342:1:8809:8863	3468762	6	True				
ANR	3468772	IdentifierDecl	"* list [ ] = { ""( sp )"" , ""de"" , ""af"" , NULL }"		3468762	0					
ANR	3468773	IdentifierDeclType	const char * [ ]		3468762	0					
ANR	3468774	Identifier	list		3468762	1					
ANR	3468775	AssignmentExpression	"* list [ ] = { ""( sp )"" , ""de"" , ""af"" , NULL }"		3468762	2		=			
ANR	3468776	Identifier	list		3468762	0					
ANR	3468777	InitializerList	"""( sp )"""		3468762	1					
ANR	3468778	PrimaryExpression	"""( sp )"""		3468762	0					
ANR	3468779	PrimaryExpression	"""de"""		3468762	1					
ANR	3468780	PrimaryExpression	"""af"""		3468762	2					
ANR	3468781	Identifier	NULL		3468762	3					
ANR	3468782	ReturnStatement	"return indx ( p , list , 1 , NULL ) ;"	345:1:8866:8896	3468762	7	True				
ANR	3468783	CallExpression	"indx ( p , list , 1 , NULL )"		3468762	0					
ANR	3468784	Callee	indx		3468762	0					
ANR	3468785	Identifier	indx		3468762	0					
ANR	3468786	ArgumentList	p		3468762	1					
ANR	3468787	Argument	p		3468762	0					
ANR	3468788	Identifier	p		3468762	0					
ANR	3468789	Argument	list		3468762	1					
ANR	3468790	Identifier	list		3468762	0					
ANR	3468791	Argument	1		3468762	2					
ANR	3468792	PrimaryExpression	1		3468762	0					
ANR	3468793	Argument	NULL		3468762	3					
ANR	3468794	Identifier	NULL		3468762	0					
ANR	3468795	ReturnType	static int		3468762	1					
ANR	3468796	Identifier	rd_ex1		3468762	2					
ANR	3468797	ParameterList	const char * * p		3468762	3					
ANR	3468798	Parameter	const char * * p	339:18:8764:8777	3468762	0	True				
ANR	3468799	ParameterType	const char * *		3468762	0					
ANR	3468800	Identifier	p		3468762	1					
ANR	3468801	CFGEntryNode	ENTRY		3468762		True				
ANR	3468802	CFGExitNode	EXIT		3468762		True				
ANR	3468803	Symbol	p		3468762						
ANR	3468804	Symbol	NULL		3468762						
ANR	3468805	Symbol	indx		3468762						
ANR	3468806	Symbol	list		3468762						
ANR	3468807	Function	rd_in	349:0:8933:9088							
ANR	3468808	FunctionDef	rd_in (const char * * p)		3468807	0					
ANR	3468809	CompoundStatement		349:33:8966:9088	3468807	0					
ANR	3468810	Statement	define	350:1:8969:8974	3468807	0	True				
ANR	3468811	Statement	A	350:8:8976:8976	3468807	1	True				
ANR	3468812	Statement	8	350:10:8978:8978	3468807	2	True				
ANR	3468813	IdentifierDeclStatement	"const char * list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""f"" , ""a"" , NULL } ;"	351:1:8981:9053	3468807	3	True				
ANR	3468814	IdentifierDecl	"* list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""f"" , ""a"" , NULL }"		3468807	0					
ANR	3468815	IdentifierDeclType	const char * [ ]		3468807	0					
ANR	3468816	Identifier	list		3468807	1					
ANR	3468817	AssignmentExpression	"* list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""f"" , ""a"" , NULL }"		3468807	2		=			
ANR	3468818	Identifier	list		3468807	0					
ANR	3468819	InitializerList	"""b"""		3468807	1					
ANR	3468820	PrimaryExpression	"""b"""		3468807	0					
ANR	3468821	PrimaryExpression	"""c"""		3468807	1					
ANR	3468822	PrimaryExpression	"""d"""		3468807	2					
ANR	3468823	PrimaryExpression	"""e"""		3468807	3					
ANR	3468824	PrimaryExpression	"""h"""		3468807	4					
ANR	3468825	PrimaryExpression	"""l"""		3468807	5					
ANR	3468826	PrimaryExpression	"""f"""		3468807	6					
ANR	3468827	PrimaryExpression	"""a"""		3468807	7					
ANR	3468828	Identifier	NULL		3468807	8					
ANR	3468829	ReturnStatement	"return indx ( p , list , 1 , NULL ) ;"	354:1:9056:9086	3468807	4	True				
ANR	3468830	CallExpression	"indx ( p , list , 1 , NULL )"		3468807	0					
ANR	3468831	Callee	indx		3468807	0					
ANR	3468832	Identifier	indx		3468807	0					
ANR	3468833	ArgumentList	p		3468807	1					
ANR	3468834	Argument	p		3468807	0					
ANR	3468835	Identifier	p		3468807	0					
ANR	3468836	Argument	list		3468807	1					
ANR	3468837	Identifier	list		3468807	0					
ANR	3468838	Argument	1		3468807	2					
ANR	3468839	PrimaryExpression	1		3468807	0					
ANR	3468840	Argument	NULL		3468807	3					
ANR	3468841	Identifier	NULL		3468807	0					
ANR	3468842	ReturnType	static int		3468807	1					
ANR	3468843	Identifier	rd_in		3468807	2					
ANR	3468844	ParameterList	const char * * p		3468807	3					
ANR	3468845	Parameter	const char * * p	349:17:8950:8963	3468807	0	True				
ANR	3468846	ParameterType	const char * *		3468807	0					
ANR	3468847	Identifier	p		3468807	1					
ANR	3468848	CFGEntryNode	ENTRY		3468807		True				
ANR	3468849	CFGExitNode	EXIT		3468807		True				
ANR	3468850	Symbol	p		3468807						
ANR	3468851	Symbol	NULL		3468807						
ANR	3468852	Symbol	indx		3468807						
ANR	3468853	Symbol	list		3468807						
ANR	3468854	Function	rd_out	358:0:9131:9275							
ANR	3468855	FunctionDef	rd_out (const char * * p)		3468854	0					
ANR	3468856	CompoundStatement		358:34:9165:9275	3468854	0					
ANR	3468857	IdentifierDeclStatement	"const char * list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""0"" , ""a"" , NULL } ;"	359:1:9168:9240	3468854	0	True				
ANR	3468858	IdentifierDecl	"* list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""0"" , ""a"" , NULL }"		3468854	0					
ANR	3468859	IdentifierDeclType	const char * [ ]		3468854	0					
ANR	3468860	Identifier	list		3468854	1					
ANR	3468861	AssignmentExpression	"* list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""0"" , ""a"" , NULL }"		3468854	2		=			
ANR	3468862	Identifier	list		3468854	0					
ANR	3468863	InitializerList	"""b"""		3468854	1					
ANR	3468864	PrimaryExpression	"""b"""		3468854	0					
ANR	3468865	PrimaryExpression	"""c"""		3468854	1					
ANR	3468866	PrimaryExpression	"""d"""		3468854	2					
ANR	3468867	PrimaryExpression	"""e"""		3468854	3					
ANR	3468868	PrimaryExpression	"""h"""		3468854	4					
ANR	3468869	PrimaryExpression	"""l"""		3468854	5					
ANR	3468870	PrimaryExpression	"""0"""		3468854	6					
ANR	3468871	PrimaryExpression	"""a"""		3468854	7					
ANR	3468872	Identifier	NULL		3468854	8					
ANR	3468873	ReturnStatement	"return indx ( p , list , 1 , NULL ) ;"	362:1:9243:9273	3468854	1	True				
ANR	3468874	CallExpression	"indx ( p , list , 1 , NULL )"		3468854	0					
ANR	3468875	Callee	indx		3468854	0					
ANR	3468876	Identifier	indx		3468854	0					
ANR	3468877	ArgumentList	p		3468854	1					
ANR	3468878	Argument	p		3468854	0					
ANR	3468879	Identifier	p		3468854	0					
ANR	3468880	Argument	list		3468854	1					
ANR	3468881	Identifier	list		3468854	0					
ANR	3468882	Argument	1		3468854	2					
ANR	3468883	PrimaryExpression	1		3468854	0					
ANR	3468884	Argument	NULL		3468854	3					
ANR	3468885	Identifier	NULL		3468854	0					
ANR	3468886	ReturnType	static int		3468854	1					
ANR	3468887	Identifier	rd_out		3468854	2					
ANR	3468888	ParameterList	const char * * p		3468854	3					
ANR	3468889	Parameter	const char * * p	358:18:9149:9162	3468854	0	True				
ANR	3468890	ParameterType	const char * *		3468854	0					
ANR	3468891	Identifier	p		3468854	1					
ANR	3468892	CFGEntryNode	ENTRY		3468854		True				
ANR	3468893	CFGExitNode	EXIT		3468854		True				
ANR	3468894	Symbol	p		3468854						
ANR	3468895	Symbol	NULL		3468854						
ANR	3468896	Symbol	indx		3468854						
ANR	3468897	Symbol	list		3468854						
ANR	3468898	Function	rd_nnc	366:0:9301:9494							
ANR	3468899	FunctionDef	rd_nnc (const char * * p)		3468898	0					
ANR	3468900	CompoundStatement		366:34:9335:9494	3468898	0					
ANR	3468901	Statement	define	367:1:9338:9343	3468898	0	True				
ANR	3468902	Statement	C	367:8:9345:9345	3468898	1	True				
ANR	3468903	Statement	1	367:10:9347:9347	3468898	2	True				
ANR	3468904	IdentifierDeclStatement	int i ;	368:1:9350:9355	3468898	3	True				
ANR	3468905	IdentifierDecl	i		3468898	0					
ANR	3468906	IdentifierDeclType	int		3468898	0					
ANR	3468907	Identifier	i		3468898	1					
ANR	3468908	IdentifierDeclStatement	"const char * list [ ] = { ""( c )"" , ""(*)"" , ""a , (*)"" , NULL } ;"	369:1:9358:9417	3468898	4	True				
ANR	3468909	IdentifierDecl	"* list [ ] = { ""( c )"" , ""(*)"" , ""a , (*)"" , NULL }"		3468898	0					
ANR	3468910	IdentifierDeclType	const char * [ ]		3468898	0					
ANR	3468911	Identifier	list		3468898	1					
ANR	3468912	AssignmentExpression	"* list [ ] = { ""( c )"" , ""(*)"" , ""a , (*)"" , NULL }"		3468898	2		=			
ANR	3468913	Identifier	list		3468898	0					
ANR	3468914	InitializerList	"""( c )"""		3468898	1					
ANR	3468915	PrimaryExpression	"""( c )"""		3468898	0					
ANR	3468916	PrimaryExpression	"""(*)"""		3468898	1					
ANR	3468917	PrimaryExpression	"""a , (*)"""		3468898	2					
ANR	3468918	Identifier	NULL		3468898	3					
ANR	3468919	ExpressionStatement	"i = indx ( p , list , 1 , & readbyte )"	372:1:9420:9452	3468898	5	True				
ANR	3468920	AssignmentExpression	"i = indx ( p , list , 1 , & readbyte )"		3468898	0		=			
ANR	3468921	Identifier	i		3468898	0					
ANR	3468922	CallExpression	"indx ( p , list , 1 , & readbyte )"		3468898	1					
ANR	3468923	Callee	indx		3468898	0					
ANR	3468924	Identifier	indx		3468898	0					
ANR	3468925	ArgumentList	p		3468898	1					
ANR	3468926	Argument	p		3468898	0					
ANR	3468927	Identifier	p		3468898	0					
ANR	3468928	Argument	list		3468898	1					
ANR	3468929	Identifier	list		3468898	0					
ANR	3468930	Argument	1		3468898	2					
ANR	3468931	PrimaryExpression	1		3468898	0					
ANR	3468932	Argument	& readbyte		3468898	3					
ANR	3468933	UnaryOperationExpression	& readbyte		3468898	0					
ANR	3468934	UnaryOperator	&		3468898	0					
ANR	3468935	Identifier	readbyte		3468898	1					
ANR	3468936	IfStatement	if ( i < 2 )		3468898	6					
ANR	3468937	Condition	i < 2	373:5:9459:9463	3468898	0	True				
ANR	3468938	RelationalExpression	i < 2		3468898	0		<			
ANR	3468939	Identifier	i		3468898	0					
ANR	3468940	PrimaryExpression	2		3468898	1					
ANR	3468941	CompoundStatement		8:12:130:130	3468898	1					
ANR	3468942	ReturnStatement	return i ;	374:2:9470:9478	3468898	0	True				
ANR	3468943	Identifier	i		3468898	0					
ANR	3468944	ReturnStatement	return 2 ;	376:1:9484:9492	3468898	7	True				
ANR	3468945	PrimaryExpression	2		3468898	0					
ANR	3468946	ReturnType	static int		3468898	1					
ANR	3468947	Identifier	rd_nnc		3468898	2					
ANR	3468948	ParameterList	const char * * p		3468898	3					
ANR	3468949	Parameter	const char * * p	366:18:9319:9332	3468898	0	True				
ANR	3468950	ParameterType	const char * *		3468898	0					
ANR	3468951	Identifier	p		3468898	1					
ANR	3468952	CFGEntryNode	ENTRY		3468898		True				
ANR	3468953	CFGExitNode	EXIT		3468898		True				
ANR	3468954	Symbol	p		3468898						
ANR	3468955	Symbol	NULL		3468898						
ANR	3468956	Symbol	indx		3468898						
ANR	3468957	Symbol	i		3468898						
ANR	3468958	Symbol	list		3468898						
ANR	3468959	Symbol	& readbyte		3468898						
ANR	3468960	Function	rd_c	380:0:9512:9633							
ANR	3468961	FunctionDef	rd_c (const char * * p)		3468960	0					
ANR	3468962	CompoundStatement		380:32:9544:9633	3468960	0					
ANR	3468963	IdentifierDeclStatement	"const char * list [ ] = { ""( c )"" , ""( bc )"" , NULL } ;"	381:1:9547:9598	3468960	0	True				
ANR	3468964	IdentifierDecl	"* list [ ] = { ""( c )"" , ""( bc )"" , NULL }"		3468960	0					
ANR	3468965	IdentifierDeclType	const char * [ ]		3468960	0					
ANR	3468966	Identifier	list		3468960	1					
ANR	3468967	AssignmentExpression	"* list [ ] = { ""( c )"" , ""( bc )"" , NULL }"		3468960	2		=			
ANR	3468968	Identifier	list		3468960	0					
ANR	3468969	InitializerList	"""( c )"""		3468960	1					
ANR	3468970	PrimaryExpression	"""( c )"""		3468960	0					
ANR	3468971	PrimaryExpression	"""( bc )"""		3468960	1					
ANR	3468972	Identifier	NULL		3468960	2					
ANR	3468973	ReturnStatement	"return indx ( p , list , 1 , NULL ) ;"	384:1:9601:9631	3468960	1	True				
ANR	3468974	CallExpression	"indx ( p , list , 1 , NULL )"		3468960	0					
ANR	3468975	Callee	indx		3468960	0					
ANR	3468976	Identifier	indx		3468960	0					
ANR	3468977	ArgumentList	p		3468960	1					
ANR	3468978	Argument	p		3468960	0					
ANR	3468979	Identifier	p		3468960	0					
ANR	3468980	Argument	list		3468960	1					
ANR	3468981	Identifier	list		3468960	0					
ANR	3468982	Argument	1		3468960	2					
ANR	3468983	PrimaryExpression	1		3468960	0					
ANR	3468984	Argument	NULL		3468960	3					
ANR	3468985	Identifier	NULL		3468960	0					
ANR	3468986	ReturnType	static int		3468960	1					
ANR	3468987	Identifier	rd_c		3468960	2					
ANR	3468988	ParameterList	const char * * p		3468960	3					
ANR	3468989	Parameter	const char * * p	380:16:9528:9541	3468960	0	True				
ANR	3468990	ParameterType	const char * *		3468960	0					
ANR	3468991	Identifier	p		3468960	1					
ANR	3468992	CFGEntryNode	ENTRY		3468960		True				
ANR	3468993	CFGExitNode	EXIT		3468960		True				
ANR	3468994	Symbol	p		3468960						
ANR	3468995	Symbol	NULL		3468960						
ANR	3468996	Symbol	indx		3468960						
ANR	3468997	Symbol	list		3468960						
ANR	3468998	Function	rd_a_hl	388:0:9655:9784							
ANR	3468999	FunctionDef	rd_a_hl (const char * * p)		3468998	0					
ANR	3469000	CompoundStatement		388:35:9690:9784	3468998	0					
ANR	3469001	Statement	define	389:1:9693:9698	3468998	0	True				
ANR	3469002	Statement	HL	389:8:9700:9701	3468998	1	True				
ANR	3469003	Statement	2	389:11:9703:9703	3468998	2	True				
ANR	3469004	IdentifierDeclStatement	"const char * list [ ] = { ""a"" , ""hl"" , NULL } ;"	390:1:9706:9749	3468998	3	True				
ANR	3469005	IdentifierDecl	"* list [ ] = { ""a"" , ""hl"" , NULL }"		3468998	0					
ANR	3469006	IdentifierDeclType	const char * [ ]		3468998	0					
ANR	3469007	Identifier	list		3468998	1					
ANR	3469008	AssignmentExpression	"* list [ ] = { ""a"" , ""hl"" , NULL }"		3468998	2		=			
ANR	3469009	Identifier	list		3468998	0					
ANR	3469010	InitializerList	"""a"""		3468998	1					
ANR	3469011	PrimaryExpression	"""a"""		3468998	0					
ANR	3469012	PrimaryExpression	"""hl"""		3468998	1					
ANR	3469013	Identifier	NULL		3468998	2					
ANR	3469014	ReturnStatement	"return indx ( p , list , 1 , NULL ) ;"	393:1:9752:9782	3468998	4	True				
ANR	3469015	CallExpression	"indx ( p , list , 1 , NULL )"		3468998	0					
ANR	3469016	Callee	indx		3468998	0					
ANR	3469017	Identifier	indx		3468998	0					
ANR	3469018	ArgumentList	p		3468998	1					
ANR	3469019	Argument	p		3468998	0					
ANR	3469020	Identifier	p		3468998	0					
ANR	3469021	Argument	list		3468998	1					
ANR	3469022	Identifier	list		3468998	0					
ANR	3469023	Argument	1		3468998	2					
ANR	3469024	PrimaryExpression	1		3468998	0					
ANR	3469025	Argument	NULL		3468998	3					
ANR	3469026	Identifier	NULL		3468998	0					
ANR	3469027	ReturnType	static int		3468998	1					
ANR	3469028	Identifier	rd_a_hl		3468998	2					
ANR	3469029	ParameterList	const char * * p		3468998	3					
ANR	3469030	Parameter	const char * * p	388:19:9674:9687	3468998	0	True				
ANR	3469031	ParameterType	const char * *		3468998	0					
ANR	3469032	Identifier	p		3468998	1					
ANR	3469033	CFGEntryNode	ENTRY		3468998		True				
ANR	3469034	CFGExitNode	EXIT		3468998		True				
ANR	3469035	Symbol	p		3468998						
ANR	3469036	Symbol	NULL		3468998						
ANR	3469037	Symbol	indx		3468998						
ANR	3469038	Symbol	list		3468998						
ANR	3469039	Function	rd_ld	397:0:9819:10900							
ANR	3469040	FunctionDef	rd_ld (const char * * p)		3469039	0					
ANR	3469041	CompoundStatement		397:33:9852:10900	3469039	0					
ANR	3469042	Statement	define	398:1:9855:9860	3469039	0	True				
ANR	3469043	Statement	ldBC	398:8:9862:9865	3469039	1	True				
ANR	3469044	Statement	1	398:16:9870:9870	3469039	2	True				
ANR	3469045	Statement	define	399:1:9873:9878	3469039	3	True				
ANR	3469046	Statement	ldDE	399:8:9880:9883	3469039	4	True				
ANR	3469047	Statement	2	399:16:9888:9888	3469039	5	True				
ANR	3469048	Statement	define	400:1:9891:9896	3469039	6	True				
ANR	3469049	Statement	ldHL	400:8:9898:9901	3469039	7	True				
ANR	3469050	Statement	3	400:16:9906:9906	3469039	8	True				
ANR	3469051	Statement	define	401:1:9909:9914	3469039	9	True				
ANR	3469052	Statement	ldSP	401:8:9916:9919	3469039	10	True				
ANR	3469053	Statement	4	401:16:9924:9924	3469039	11	True				
ANR	3469054	Statement	define	402:1:9927:9932	3469039	12	True				
ANR	3469055	Statement	ldIX	402:8:9934:9937	3469039	13	True				
ANR	3469056	Statement	5	402:16:9942:9942	3469039	14	True				
ANR	3469057	Statement	define	403:1:9945:9950	3469039	15	True				
ANR	3469058	Statement	ldIY	403:8:9952:9955	3469039	16	True				
ANR	3469059	Statement	6	403:16:9960:9960	3469039	17	True				
ANR	3469060	Statement	define	404:1:9963:9968	3469039	18	True				
ANR	3469061	Statement	ldB	404:8:9970:9972	3469039	19	True				
ANR	3469062	Statement	7	404:16:9978:9978	3469039	20	True				
ANR	3469063	Statement	define	405:1:9981:9986	3469039	21	True				
ANR	3469064	Statement	ldC	405:8:9988:9990	3469039	22	True				
ANR	3469065	Statement	8	405:16:9996:9996	3469039	23	True				
ANR	3469066	Statement	define	406:1:9999:10004	3469039	24	True				
ANR	3469067	Statement	ldD	406:8:10006:10008	3469039	25	True				
ANR	3469068	Statement	9	406:16:10014:10014	3469039	26	True				
ANR	3469069	Statement	define	407:1:10017:10022	3469039	27	True				
ANR	3469070	Statement	ldE	407:8:10024:10026	3469039	28	True				
ANR	3469071	Statement	10	407:16:10032:10033	3469039	29	True				
ANR	3469072	Statement	define	408:1:10036:10041	3469039	30	True				
ANR	3469073	Statement	ldH	408:8:10043:10045	3469039	31	True				
ANR	3469074	Statement	11	408:16:10051:10052	3469039	32	True				
ANR	3469075	Statement	define	409:1:10055:10060	3469039	33	True				
ANR	3469076	Statement	ldL	409:8:10062:10064	3469039	34	True				
ANR	3469077	Statement	12	409:16:10070:10071	3469039	35	True				
ANR	3469078	Statement	define	410:1:10074:10079	3469039	36	True				
ANR	3469079	Statement	ld_HL	410:8:10081:10085	3469039	37	True				
ANR	3469080	Statement	13	410:16:10089:10090	3469039	38	True				
ANR	3469081	Statement	define	411:1:10093:10098	3469039	39	True				
ANR	3469082	Statement	ldA	411:8:10100:10102	3469039	40	True				
ANR	3469083	Statement	14	411:16:10108:10109	3469039	41	True				
ANR	3469084	Statement	define	412:1:10112:10117	3469039	42	True				
ANR	3469085	Statement	ldI	412:8:10119:10121	3469039	43	True				
ANR	3469086	Statement	15	412:16:10127:10128	3469039	44	True				
ANR	3469087	Statement	define	413:1:10131:10136	3469039	45	True				
ANR	3469088	Statement	ldR	413:8:10138:10140	3469039	46	True				
ANR	3469089	Statement	16	413:16:10146:10147	3469039	47	True				
ANR	3469090	Statement	define	414:1:10150:10155	3469039	48	True				
ANR	3469091	Statement	ld_BC	414:8:10157:10161	3469039	49	True				
ANR	3469092	Statement	17	414:16:10165:10166	3469039	50	True				
ANR	3469093	Statement	define	415:1:10169:10174	3469039	51	True				
ANR	3469094	Statement	ld_DE	415:8:10176:10180	3469039	52	True				
ANR	3469095	Statement	18	415:16:10184:10185	3469039	53	True				
ANR	3469096	Statement	define	416:1:10188:10193	3469039	54	True				
ANR	3469097	Statement	ld_IX	416:8:10195:10199	3469039	55	True				
ANR	3469098	Statement	19	416:16:10203:10204	3469039	56	True				
ANR	3469099	Statement	define	417:1:10207:10212	3469039	57	True				
ANR	3469100	Statement	ld_IY	417:8:10214:10218	3469039	58	True				
ANR	3469101	Statement	20	417:16:10222:10223	3469039	59	True				
ANR	3469102	Statement	define	418:1:10226:10231	3469039	60	True				
ANR	3469103	Statement	ld_NN	418:8:10233:10237	3469039	61	True				
ANR	3469104	Statement	21	418:16:10241:10242	3469039	62	True				
ANR	3469105	IdentifierDeclStatement	int i ;	419:1:10245:10250	3469039	63	True				
ANR	3469106	IdentifierDecl	i		3469039	0					
ANR	3469107	IdentifierDeclType	int		3469039	0					
ANR	3469108	Identifier	i		3469039	1					
ANR	3469109	IdentifierDeclStatement	"const char * list [ ] = { ""ixh"" , ""ixl"" , ""iyh"" , ""iyl"" , ""bc"" , ""de"" , ""hl"" , ""sp"" , ""ix"" , ""iy"" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""i"" , ""r"" , ""( bc )"" , ""( de )"" , ""( ix +)"" , ""(iy +)"" , ""(*)"" , NULL } ;"	420:1:10253:10456	3469039	64	True				
ANR	3469110	IdentifierDecl	"* list [ ] = { ""ixh"" , ""ixl"" , ""iyh"" , ""iyl"" , ""bc"" , ""de"" , ""hl"" , ""sp"" , ""ix"" , ""iy"" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""i"" , ""r"" , ""( bc )"" , ""( de )"" , ""( ix +)"" , ""(iy +)"" , ""(*)"" , NULL }"		3469039	0					
ANR	3469111	IdentifierDeclType	const char * [ ]		3469039	0					
ANR	3469112	Identifier	list		3469039	1					
ANR	3469113	AssignmentExpression	"* list [ ] = { ""ixh"" , ""ixl"" , ""iyh"" , ""iyl"" , ""bc"" , ""de"" , ""hl"" , ""sp"" , ""ix"" , ""iy"" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""i"" , ""r"" , ""( bc )"" , ""( de )"" , ""( ix +)"" , ""(iy +)"" , ""(*)"" , NULL }"		3469039	2		=			
ANR	3469114	Identifier	list		3469039	0					
ANR	3469115	InitializerList	"""ixh"""		3469039	1					
ANR	3469116	PrimaryExpression	"""ixh"""		3469039	0					
ANR	3469117	PrimaryExpression	"""ixl"""		3469039	1					
ANR	3469118	PrimaryExpression	"""iyh"""		3469039	2					
ANR	3469119	PrimaryExpression	"""iyl"""		3469039	3					
ANR	3469120	PrimaryExpression	"""bc"""		3469039	4					
ANR	3469121	PrimaryExpression	"""de"""		3469039	5					
ANR	3469122	PrimaryExpression	"""hl"""		3469039	6					
ANR	3469123	PrimaryExpression	"""sp"""		3469039	7					
ANR	3469124	PrimaryExpression	"""ix"""		3469039	8					
ANR	3469125	PrimaryExpression	"""iy"""		3469039	9					
ANR	3469126	PrimaryExpression	"""b"""		3469039	10					
ANR	3469127	PrimaryExpression	"""c"""		3469039	11					
ANR	3469128	PrimaryExpression	"""d"""		3469039	12					
ANR	3469129	PrimaryExpression	"""e"""		3469039	13					
ANR	3469130	PrimaryExpression	"""h"""		3469039	14					
ANR	3469131	PrimaryExpression	"""l"""		3469039	15					
ANR	3469132	PrimaryExpression	"""( hl )"""		3469039	16					
ANR	3469133	PrimaryExpression	"""a"""		3469039	17					
ANR	3469134	PrimaryExpression	"""i"""		3469039	18					
ANR	3469135	PrimaryExpression	"""r"""		3469039	19					
ANR	3469136	PrimaryExpression	"""( bc )"""		3469039	20					
ANR	3469137	PrimaryExpression	"""( de )"""		3469039	21					
ANR	3469138	PrimaryExpression	"""( ix +)"""		3469039	22					
ANR	3469139	PrimaryExpression	"""(iy +)"""		3469039	23					
ANR	3469140	PrimaryExpression	"""(*)"""		3469039	24					
ANR	3469141	Identifier	NULL		3469039	25					
ANR	3469142	IdentifierDeclStatement	const char * nn ;	425:1:10459:10473	3469039	65	True				
ANR	3469143	IdentifierDecl	* nn		3469039	0					
ANR	3469144	IdentifierDeclType	const char *		3469039	0					
ANR	3469145	Identifier	nn		3469039	1					
ANR	3469146	ExpressionStatement	"i = indx ( p , list , 1 , & nn )"	426:1:10476:10502	3469039	66	True				
ANR	3469147	AssignmentExpression	"i = indx ( p , list , 1 , & nn )"		3469039	0		=			
ANR	3469148	Identifier	i		3469039	0					
ANR	3469149	CallExpression	"indx ( p , list , 1 , & nn )"		3469039	1					
ANR	3469150	Callee	indx		3469039	0					
ANR	3469151	Identifier	indx		3469039	0					
ANR	3469152	ArgumentList	p		3469039	1					
ANR	3469153	Argument	p		3469039	0					
ANR	3469154	Identifier	p		3469039	0					
ANR	3469155	Argument	list		3469039	1					
ANR	3469156	Identifier	list		3469039	0					
ANR	3469157	Argument	1		3469039	2					
ANR	3469158	PrimaryExpression	1		3469039	0					
ANR	3469159	Argument	& nn		3469039	3					
ANR	3469160	UnaryOperationExpression	& nn		3469039	0					
ANR	3469161	UnaryOperator	&		3469039	0					
ANR	3469162	Identifier	nn		3469039	1					
ANR	3469163	IfStatement	if ( ! i )		3469039	67					
ANR	3469164	Condition	! i	427:5:10509:10510	3469039	0	True				
ANR	3469165	UnaryOperationExpression	! i		3469039	0					
ANR	3469166	UnaryOperator	!		3469039	0					
ANR	3469167	Identifier	i		3469039	1					
ANR	3469168	CompoundStatement		31:9:660:660	3469039	1					
ANR	3469169	ReturnStatement	return 0 ;	428:2:10517:10525	3469039	0	True				
ANR	3469170	PrimaryExpression	0		3469039	0					
ANR	3469171	IfStatement	if ( i <= 2 )		3469039	68					
ANR	3469172	Condition	i <= 2	430:5:10535:10540	3469039	0	True				
ANR	3469173	RelationalExpression	i <= 2		3469039	0		<=			
ANR	3469174	Identifier	i		3469039	0					
ANR	3469175	PrimaryExpression	2		3469039	1					
ANR	3469176	CompoundStatement		34:13:690:690	3469039	1					
ANR	3469177	ExpressionStatement	indexed = 0xdd	431:2:10547:10561	3469039	0	True				
ANR	3469178	AssignmentExpression	indexed = 0xdd		3469039	0		=			
ANR	3469179	Identifier	indexed		3469039	0					
ANR	3469180	PrimaryExpression	0xdd		3469039	1					
ANR	3469181	ReturnStatement	return ldH + ( i == 2 ) ;	432:2:10565:10586	3469039	1	True				
ANR	3469182	AdditiveExpression	ldH + ( i == 2 )		3469039	0		+			
ANR	3469183	Identifier	ldH		3469039	0					
ANR	3469184	EqualityExpression	i == 2		3469039	1		==			
ANR	3469185	Identifier	i		3469039	0					
ANR	3469186	PrimaryExpression	2		3469039	1					
ANR	3469187	IfStatement	if ( i <= 4 )		3469039	69					
ANR	3469188	Condition	i <= 4	434:5:10596:10601	3469039	0	True				
ANR	3469189	RelationalExpression	i <= 4		3469039	0		<=			
ANR	3469190	Identifier	i		3469039	0					
ANR	3469191	PrimaryExpression	4		3469039	1					
ANR	3469192	CompoundStatement		38:13:751:751	3469039	1					
ANR	3469193	ExpressionStatement	indexed = 0xfd	435:2:10608:10622	3469039	0	True				
ANR	3469194	AssignmentExpression	indexed = 0xfd		3469039	0		=			
ANR	3469195	Identifier	indexed		3469039	0					
ANR	3469196	PrimaryExpression	0xfd		3469039	1					
ANR	3469197	ReturnStatement	return ldH + ( i == 4 ) ;	436:2:10626:10647	3469039	1	True				
ANR	3469198	AdditiveExpression	ldH + ( i == 4 )		3469039	0		+			
ANR	3469199	Identifier	ldH		3469039	0					
ANR	3469200	EqualityExpression	i == 4		3469039	1		==			
ANR	3469201	Identifier	i		3469039	0					
ANR	3469202	PrimaryExpression	4		3469039	1					
ANR	3469203	ExpressionStatement	i -= 4	438:1:10653:10659	3469039	70	True				
ANR	3469204	AssignmentExpression	i -= 4		3469039	0		-=			
ANR	3469205	Identifier	i		3469039	0					
ANR	3469206	PrimaryExpression	4		3469039	1					
ANR	3469207	IfStatement	if ( i == ldIX || i == ldIY )		3469039	71					
ANR	3469208	Condition	i == ldIX || i == ldIY	439:5:10666:10687	3469039	0	True				
ANR	3469209	OrExpression	i == ldIX || i == ldIY		3469039	0		||			
ANR	3469210	EqualityExpression	i == ldIX		3469039	0		==			
ANR	3469211	Identifier	i		3469039	0					
ANR	3469212	Identifier	ldIX		3469039	1					
ANR	3469213	EqualityExpression	i == ldIY		3469039	1		==			
ANR	3469214	Identifier	i		3469039	0					
ANR	3469215	Identifier	ldIY		3469039	1					
ANR	3469216	CompoundStatement		43:29:837:837	3469039	1					
ANR	3469217	ExpressionStatement	indexed = i == ldIX ? 0xDD : 0xFD	440:2:10694:10725	3469039	0	True				
ANR	3469218	AssignmentExpression	indexed = i == ldIX ? 0xDD : 0xFD		3469039	0		=			
ANR	3469219	Identifier	indexed		3469039	0					
ANR	3469220	ConditionalExpression	i == ldIX ? 0xDD : 0xFD		3469039	1					
ANR	3469221	Condition	i == ldIX		3469039	0					
ANR	3469222	EqualityExpression	i == ldIX		3469039	0		==			
ANR	3469223	Identifier	i		3469039	0					
ANR	3469224	Identifier	ldIX		3469039	1					
ANR	3469225	PrimaryExpression	0xDD		3469039	1					
ANR	3469226	PrimaryExpression	0xFD		3469039	2					
ANR	3469227	ReturnStatement	return ldHL ;	441:2:10729:10740	3469039	1	True				
ANR	3469228	Identifier	ldHL		3469039	0					
ANR	3469229	IfStatement	if ( i == ld_IX || i == ld_IY )		3469039	72					
ANR	3469230	Condition	i == ld_IX || i == ld_IY	443:5:10750:10773	3469039	0	True				
ANR	3469231	OrExpression	i == ld_IX || i == ld_IY		3469039	0		||			
ANR	3469232	EqualityExpression	i == ld_IX		3469039	0		==			
ANR	3469233	Identifier	i		3469039	0					
ANR	3469234	Identifier	ld_IX		3469039	1					
ANR	3469235	EqualityExpression	i == ld_IY		3469039	1		==			
ANR	3469236	Identifier	i		3469039	0					
ANR	3469237	Identifier	ld_IY		3469039	1					
ANR	3469238	CompoundStatement		47:31:923:923	3469039	1					
ANR	3469239	ExpressionStatement	indexjmp = nn	444:2:10780:10793	3469039	0	True				
ANR	3469240	AssignmentExpression	indexjmp = nn		3469039	0		=			
ANR	3469241	Identifier	indexjmp		3469039	0					
ANR	3469242	Identifier	nn		3469039	1					
ANR	3469243	ExpressionStatement	indexed = i == ld_IX ? 0xDD : 0xFD	445:2:10797:10829	3469039	1	True				
ANR	3469244	AssignmentExpression	indexed = i == ld_IX ? 0xDD : 0xFD		3469039	0		=			
ANR	3469245	Identifier	indexed		3469039	0					
ANR	3469246	ConditionalExpression	i == ld_IX ? 0xDD : 0xFD		3469039	1					
ANR	3469247	Condition	i == ld_IX		3469039	0					
ANR	3469248	EqualityExpression	i == ld_IX		3469039	0		==			
ANR	3469249	Identifier	i		3469039	0					
ANR	3469250	Identifier	ld_IX		3469039	1					
ANR	3469251	PrimaryExpression	0xDD		3469039	1					
ANR	3469252	PrimaryExpression	0xFD		3469039	2					
ANR	3469253	ReturnStatement	return ld_HL ;	446:2:10833:10845	3469039	2	True				
ANR	3469254	Identifier	ld_HL		3469039	0					
ANR	3469255	IfStatement	if ( i == ld_NN )		3469039	73					
ANR	3469256	Condition	i == ld_NN	448:5:10855:10864	3469039	0	True				
ANR	3469257	EqualityExpression	i == ld_NN		3469039	0		==			
ANR	3469258	Identifier	i		3469039	0					
ANR	3469259	Identifier	ld_NN		3469039	1					
ANR	3469260	CompoundStatement		52:17:1014:1014	3469039	1					
ANR	3469261	ExpressionStatement	readword = nn	449:2:10871:10884	3469039	0	True				
ANR	3469262	AssignmentExpression	readword = nn		3469039	0		=			
ANR	3469263	Identifier	readword		3469039	0					
ANR	3469264	Identifier	nn		3469039	1					
ANR	3469265	ReturnStatement	return i ;	451:1:10890:10898	3469039	74	True				
ANR	3469266	Identifier	i		3469039	0					
ANR	3469267	ReturnType	static int		3469039	1					
ANR	3469268	Identifier	rd_ld		3469039	2					
ANR	3469269	ParameterList	const char * * p		3469039	3					
ANR	3469270	Parameter	const char * * p	397:17:9836:9849	3469039	0	True				
ANR	3469271	ParameterType	const char * *		3469039	0					
ANR	3469272	Identifier	p		3469039	1					
ANR	3469273	CFGEntryNode	ENTRY		3469039		True				
ANR	3469274	CFGExitNode	EXIT		3469039		True				
ANR	3469275	Symbol	nn		3469039						
ANR	3469276	Symbol	NULL		3469039						
ANR	3469277	Symbol	indexed		3469039						
ANR	3469278	Symbol	ld_NN		3469039						
ANR	3469279	Symbol	indx		3469039						
ANR	3469280	Symbol	i		3469039						
ANR	3469281	Symbol	& nn		3469039						
ANR	3469282	Symbol	ld_HL		3469039						
ANR	3469283	Symbol	list		3469039						
ANR	3469284	Symbol	ldHL		3469039						
ANR	3469285	Symbol	indexjmp		3469039						
ANR	3469286	Symbol	p		3469039						
ANR	3469287	Symbol	ldH		3469039						
ANR	3469288	Symbol	ldIX		3469039						
ANR	3469289	Symbol	ld_IX		3469039						
ANR	3469290	Symbol	ld_IY		3469039						
ANR	3469291	Symbol	ldIY		3469039						
ANR	3469292	Symbol	readword		3469039						
ANR	3469293	Function	rd_jp	455:0:10935:11224							
ANR	3469294	FunctionDef	rd_jp (const char * * p)		3469293	0					
ANR	3469295	CompoundStatement		455:33:10968:11224	3469293	0					
ANR	3469296	IdentifierDeclStatement	int i ;	456:1:10971:10976	3469293	0	True				
ANR	3469297	IdentifierDecl	i		3469293	0					
ANR	3469298	IdentifierDeclType	int		3469293	0					
ANR	3469299	Identifier	i		3469293	1					
ANR	3469300	IdentifierDeclStatement	"const char * list [ ] = { ""nz"" , ""z"" , ""nc"" , ""c"" , ""po"" , ""pe"" , ""p"" , ""m"" , ""( ix )"" , ""( iy )"" , ""(hl)"" , NULL } ;"	457:1:10979:11085	3469293	1	True				
ANR	3469301	IdentifierDecl	"* list [ ] = { ""nz"" , ""z"" , ""nc"" , ""c"" , ""po"" , ""pe"" , ""p"" , ""m"" , ""( ix )"" , ""( iy )"" , ""(hl)"" , NULL }"		3469293	0					
ANR	3469302	IdentifierDeclType	const char * [ ]		3469293	0					
ANR	3469303	Identifier	list		3469293	1					
ANR	3469304	AssignmentExpression	"* list [ ] = { ""nz"" , ""z"" , ""nc"" , ""c"" , ""po"" , ""pe"" , ""p"" , ""m"" , ""( ix )"" , ""( iy )"" , ""(hl)"" , NULL }"		3469293	2		=			
ANR	3469305	Identifier	list		3469293	0					
ANR	3469306	InitializerList	"""nz"""		3469293	1					
ANR	3469307	PrimaryExpression	"""nz"""		3469293	0					
ANR	3469308	PrimaryExpression	"""z"""		3469293	1					
ANR	3469309	PrimaryExpression	"""nc"""		3469293	2					
ANR	3469310	PrimaryExpression	"""c"""		3469293	3					
ANR	3469311	PrimaryExpression	"""po"""		3469293	4					
ANR	3469312	PrimaryExpression	"""pe"""		3469293	5					
ANR	3469313	PrimaryExpression	"""p"""		3469293	6					
ANR	3469314	PrimaryExpression	"""m"""		3469293	7					
ANR	3469315	PrimaryExpression	"""( ix )"""		3469293	8					
ANR	3469316	PrimaryExpression	"""( iy )"""		3469293	9					
ANR	3469317	PrimaryExpression	"""(hl)"""		3469293	10					
ANR	3469318	Identifier	NULL		3469293	11					
ANR	3469319	ExpressionStatement	"i = indx ( p , list , 0 , NULL )"	461:1:11088:11115	3469293	2	True				
ANR	3469320	AssignmentExpression	"i = indx ( p , list , 0 , NULL )"		3469293	0		=			
ANR	3469321	Identifier	i		3469293	0					
ANR	3469322	CallExpression	"indx ( p , list , 0 , NULL )"		3469293	1					
ANR	3469323	Callee	indx		3469293	0					
ANR	3469324	Identifier	indx		3469293	0					
ANR	3469325	ArgumentList	p		3469293	1					
ANR	3469326	Argument	p		3469293	0					
ANR	3469327	Identifier	p		3469293	0					
ANR	3469328	Argument	list		3469293	1					
ANR	3469329	Identifier	list		3469293	0					
ANR	3469330	Argument	0		3469293	2					
ANR	3469331	PrimaryExpression	0		3469293	0					
ANR	3469332	Argument	NULL		3469293	3					
ANR	3469333	Identifier	NULL		3469293	0					
ANR	3469334	IfStatement	if ( i < 9 )		3469293	3					
ANR	3469335	Condition	i < 9	462:5:11122:11126	3469293	0	True				
ANR	3469336	RelationalExpression	i < 9		3469293	0		<			
ANR	3469337	Identifier	i		3469293	0					
ANR	3469338	PrimaryExpression	9		3469293	1					
ANR	3469339	CompoundStatement		8:12:160:160	3469293	1					
ANR	3469340	ReturnStatement	return i ;	463:2:11133:11141	3469293	0	True				
ANR	3469341	Identifier	i		3469293	0					
ANR	3469342	IfStatement	if ( i == 11 )		3469293	4					
ANR	3469343	Condition	i == 11	465:5:11151:11157	3469293	0	True				
ANR	3469344	EqualityExpression	i == 11		3469293	0		==			
ANR	3469345	Identifier	i		3469293	0					
ANR	3469346	PrimaryExpression	11		3469293	1					
ANR	3469347	CompoundStatement		11:14:191:191	3469293	1					
ANR	3469348	ReturnStatement	return - 1 ;	466:2:11164:11173	3469293	0	True				
ANR	3469349	UnaryOperationExpression	- 1		3469293	0					
ANR	3469350	UnaryOperator	-		3469293	0					
ANR	3469351	PrimaryExpression	1		3469293	1					
ANR	3469352	ExpressionStatement	indexed = 0xDD + 0x20 * ( i - 9 )	468:1:11179:11210	3469293	5	True				
ANR	3469353	AssignmentExpression	indexed = 0xDD + 0x20 * ( i - 9 )		3469293	0		=			
ANR	3469354	Identifier	indexed		3469293	0					
ANR	3469355	AdditiveExpression	0xDD + 0x20 * ( i - 9 )		3469293	1		+			
ANR	3469356	PrimaryExpression	0xDD		3469293	0					
ANR	3469357	MultiplicativeExpression	0x20 * ( i - 9 )		3469293	1		*			
ANR	3469358	PrimaryExpression	0x20		3469293	0					
ANR	3469359	AdditiveExpression	i - 9		3469293	1		-			
ANR	3469360	Identifier	i		3469293	0					
ANR	3469361	PrimaryExpression	9		3469293	1					
ANR	3469362	ReturnStatement	return - 1 ;	469:1:11213:11222	3469293	6	True				
ANR	3469363	UnaryOperationExpression	- 1		3469293	0					
ANR	3469364	UnaryOperator	-		3469293	0					
ANR	3469365	PrimaryExpression	1		3469293	1					
ANR	3469366	ReturnType	static int		3469293	1					
ANR	3469367	Identifier	rd_jp		3469293	2					
ANR	3469368	ParameterList	const char * * p		3469293	3					
ANR	3469369	Parameter	const char * * p	455:17:10952:10965	3469293	0	True				
ANR	3469370	ParameterType	const char * *		3469293	0					
ANR	3469371	Identifier	p		3469293	1					
ANR	3469372	CFGEntryNode	ENTRY		3469293		True				
ANR	3469373	CFGExitNode	EXIT		3469293		True				
ANR	3469374	Symbol	p		3469293						
ANR	3469375	Symbol	NULL		3469293						
ANR	3469376	Symbol	indexed		3469293						
ANR	3469377	Symbol	indx		3469293						
ANR	3469378	Symbol	i		3469293						
ANR	3469379	Symbol	list		3469293						
ANR	3469380	Function	rd_jr	473:0:11259:11384							
ANR	3469381	FunctionDef	rd_jr (const char * * p)		3469380	0					
ANR	3469382	CompoundStatement		473:33:11292:11384	3469380	0					
ANR	3469383	IdentifierDeclStatement	"const char * list [ ] = { ""nz"" , ""z"" , ""nc"" , ""c"" , NULL } ;"	474:1:11295:11349	3469380	0	True				
ANR	3469384	IdentifierDecl	"* list [ ] = { ""nz"" , ""z"" , ""nc"" , ""c"" , NULL }"		3469380	0					
ANR	3469385	IdentifierDeclType	const char * [ ]		3469380	0					
ANR	3469386	Identifier	list		3469380	1					
ANR	3469387	AssignmentExpression	"* list [ ] = { ""nz"" , ""z"" , ""nc"" , ""c"" , NULL }"		3469380	2		=			
ANR	3469388	Identifier	list		3469380	0					
ANR	3469389	InitializerList	"""nz"""		3469380	1					
ANR	3469390	PrimaryExpression	"""nz"""		3469380	0					
ANR	3469391	PrimaryExpression	"""z"""		3469380	1					
ANR	3469392	PrimaryExpression	"""nc"""		3469380	2					
ANR	3469393	PrimaryExpression	"""c"""		3469380	3					
ANR	3469394	Identifier	NULL		3469380	4					
ANR	3469395	ReturnStatement	"return indx ( p , list , 0 , NULL ) ;"	477:1:11352:11382	3469380	1	True				
ANR	3469396	CallExpression	"indx ( p , list , 0 , NULL )"		3469380	0					
ANR	3469397	Callee	indx		3469380	0					
ANR	3469398	Identifier	indx		3469380	0					
ANR	3469399	ArgumentList	p		3469380	1					
ANR	3469400	Argument	p		3469380	0					
ANR	3469401	Identifier	p		3469380	0					
ANR	3469402	Argument	list		3469380	1					
ANR	3469403	Identifier	list		3469380	0					
ANR	3469404	Argument	0		3469380	2					
ANR	3469405	PrimaryExpression	0		3469380	0					
ANR	3469406	Argument	NULL		3469380	3					
ANR	3469407	Identifier	NULL		3469380	0					
ANR	3469408	ReturnType	static int		3469380	1					
ANR	3469409	Identifier	rd_jr		3469380	2					
ANR	3469410	ParameterList	const char * * p		3469380	3					
ANR	3469411	Parameter	const char * * p	473:17:11276:11289	3469380	0	True				
ANR	3469412	ParameterType	const char * *		3469380	0					
ANR	3469413	Identifier	p		3469380	1					
ANR	3469414	CFGEntryNode	ENTRY		3469380		True				
ANR	3469415	CFGExitNode	EXIT		3469380		True				
ANR	3469416	Symbol	p		3469380						
ANR	3469417	Symbol	NULL		3469380						
ANR	3469418	Symbol	indx		3469380						
ANR	3469419	Symbol	list		3469380						
ANR	3469420	Function	rd_a	481:0:11400:11507							
ANR	3469421	FunctionDef	rd_a (const char * * p)		3469420	0					
ANR	3469422	CompoundStatement		481:32:11432:11507	3469420	0					
ANR	3469423	IdentifierDeclStatement	"const char * list [ ] = { ""a"" , NULL } ;"	482:1:11435:11472	3469420	0	True				
ANR	3469424	IdentifierDecl	"* list [ ] = { ""a"" , NULL }"		3469420	0					
ANR	3469425	IdentifierDeclType	const char * [ ]		3469420	0					
ANR	3469426	Identifier	list		3469420	1					
ANR	3469427	AssignmentExpression	"* list [ ] = { ""a"" , NULL }"		3469420	2		=			
ANR	3469428	Identifier	list		3469420	0					
ANR	3469429	InitializerList	"""a"""		3469420	1					
ANR	3469430	PrimaryExpression	"""a"""		3469420	0					
ANR	3469431	Identifier	NULL		3469420	1					
ANR	3469432	ReturnStatement	"return indx ( p , list , 1 , NULL ) ;"	485:1:11475:11505	3469420	1	True				
ANR	3469433	CallExpression	"indx ( p , list , 1 , NULL )"		3469420	0					
ANR	3469434	Callee	indx		3469420	0					
ANR	3469435	Identifier	indx		3469420	0					
ANR	3469436	ArgumentList	p		3469420	1					
ANR	3469437	Argument	p		3469420	0					
ANR	3469438	Identifier	p		3469420	0					
ANR	3469439	Argument	list		3469420	1					
ANR	3469440	Identifier	list		3469420	0					
ANR	3469441	Argument	1		3469420	2					
ANR	3469442	PrimaryExpression	1		3469420	0					
ANR	3469443	Argument	NULL		3469420	3					
ANR	3469444	Identifier	NULL		3469420	0					
ANR	3469445	ReturnType	static int		3469420	1					
ANR	3469446	Identifier	rd_a		3469420	2					
ANR	3469447	ParameterList	const char * * p		3469420	3					
ANR	3469448	Parameter	const char * * p	481:16:11416:11429	3469420	0	True				
ANR	3469449	ParameterType	const char * *		3469420	0					
ANR	3469450	Identifier	p		3469420	1					
ANR	3469451	CFGEntryNode	ENTRY		3469420		True				
ANR	3469452	CFGExitNode	EXIT		3469420		True				
ANR	3469453	Symbol	p		3469420						
ANR	3469454	Symbol	NULL		3469420						
ANR	3469455	Symbol	indx		3469420						
ANR	3469456	Symbol	list		3469420						
ANR	3469457	Function	rd_stack	489:0:11533:11754							
ANR	3469458	FunctionDef	rd_stack (const char * * p)		3469457	0					
ANR	3469459	CompoundStatement		489:36:11569:11754	3469457	0					
ANR	3469460	IdentifierDeclStatement	int i ;	490:1:11572:11577	3469457	0	True				
ANR	3469461	IdentifierDecl	i		3469457	0					
ANR	3469462	IdentifierDeclType	int		3469457	0					
ANR	3469463	Identifier	i		3469457	1					
ANR	3469464	IdentifierDeclStatement	"const char * list [ ] = { ""bc"" , ""de"" , ""hl"" , ""af"" , ""ix"" , ""iy"" , NULL } ;"	491:1:11580:11648	3469457	1	True				
ANR	3469465	IdentifierDecl	"* list [ ] = { ""bc"" , ""de"" , ""hl"" , ""af"" , ""ix"" , ""iy"" , NULL }"		3469457	0					
ANR	3469466	IdentifierDeclType	const char * [ ]		3469457	0					
ANR	3469467	Identifier	list		3469457	1					
ANR	3469468	AssignmentExpression	"* list [ ] = { ""bc"" , ""de"" , ""hl"" , ""af"" , ""ix"" , ""iy"" , NULL }"		3469457	2		=			
ANR	3469469	Identifier	list		3469457	0					
ANR	3469470	InitializerList	"""bc"""		3469457	1					
ANR	3469471	PrimaryExpression	"""bc"""		3469457	0					
ANR	3469472	PrimaryExpression	"""de"""		3469457	1					
ANR	3469473	PrimaryExpression	"""hl"""		3469457	2					
ANR	3469474	PrimaryExpression	"""af"""		3469457	3					
ANR	3469475	PrimaryExpression	"""ix"""		3469457	4					
ANR	3469476	PrimaryExpression	"""iy"""		3469457	5					
ANR	3469477	Identifier	NULL		3469457	6					
ANR	3469478	ExpressionStatement	"i = indx ( p , list , 1 , NULL )"	494:1:11651:11678	3469457	2	True				
ANR	3469479	AssignmentExpression	"i = indx ( p , list , 1 , NULL )"		3469457	0		=			
ANR	3469480	Identifier	i		3469457	0					
ANR	3469481	CallExpression	"indx ( p , list , 1 , NULL )"		3469457	1					
ANR	3469482	Callee	indx		3469457	0					
ANR	3469483	Identifier	indx		3469457	0					
ANR	3469484	ArgumentList	p		3469457	1					
ANR	3469485	Argument	p		3469457	0					
ANR	3469486	Identifier	p		3469457	0					
ANR	3469487	Argument	list		3469457	1					
ANR	3469488	Identifier	list		3469457	0					
ANR	3469489	Argument	1		3469457	2					
ANR	3469490	PrimaryExpression	1		3469457	0					
ANR	3469491	Argument	NULL		3469457	3					
ANR	3469492	Identifier	NULL		3469457	0					
ANR	3469493	IfStatement	if ( i < 5 )		3469457	3					
ANR	3469494	Condition	i < 5	495:5:11685:11689	3469457	0	True				
ANR	3469495	RelationalExpression	i < 5		3469457	0		<			
ANR	3469496	Identifier	i		3469457	0					
ANR	3469497	PrimaryExpression	5		3469457	1					
ANR	3469498	CompoundStatement		7:12:122:122	3469457	1					
ANR	3469499	ReturnStatement	return i ;	496:2:11696:11704	3469457	0	True				
ANR	3469500	Identifier	i		3469457	0					
ANR	3469501	ExpressionStatement	indexed = 0xDD + 0x20 * ( i - 5 )	498:1:11710:11741	3469457	4	True				
ANR	3469502	AssignmentExpression	indexed = 0xDD + 0x20 * ( i - 5 )		3469457	0		=			
ANR	3469503	Identifier	indexed		3469457	0					
ANR	3469504	AdditiveExpression	0xDD + 0x20 * ( i - 5 )		3469457	1		+			
ANR	3469505	PrimaryExpression	0xDD		3469457	0					
ANR	3469506	MultiplicativeExpression	0x20 * ( i - 5 )		3469457	1		*			
ANR	3469507	PrimaryExpression	0x20		3469457	0					
ANR	3469508	AdditiveExpression	i - 5		3469457	1		-			
ANR	3469509	Identifier	i		3469457	0					
ANR	3469510	PrimaryExpression	5		3469457	1					
ANR	3469511	ReturnStatement	return 3 ;	499:1:11744:11752	3469457	5	True				
ANR	3469512	PrimaryExpression	3		3469457	0					
ANR	3469513	ReturnType	static int		3469457	1					
ANR	3469514	Identifier	rd_stack		3469457	2					
ANR	3469515	ParameterList	const char * * p		3469457	3					
ANR	3469516	Parameter	const char * * p	489:20:11553:11566	3469457	0	True				
ANR	3469517	ParameterType	const char * *		3469457	0					
ANR	3469518	Identifier	p		3469457	1					
ANR	3469519	CFGEntryNode	ENTRY		3469457		True				
ANR	3469520	CFGExitNode	EXIT		3469457		True				
ANR	3469521	Symbol	p		3469457						
ANR	3469522	Symbol	NULL		3469457						
ANR	3469523	Symbol	indexed		3469457						
ANR	3469524	Symbol	indx		3469457						
ANR	3469525	Symbol	i		3469457						
ANR	3469526	Symbol	list		3469457						
ANR	3469527	Function	rd_r_add	505:0:11897:12560							
ANR	3469528	FunctionDef	rd_r_add (const char * * p)		3469527	0					
ANR	3469529	CompoundStatement		505:36:11933:12560	3469527	0					
ANR	3469530	Statement	define	506:1:11936:11941	3469527	0	True				
ANR	3469531	Statement	addHL	506:8:11943:11947	3469527	1	True				
ANR	3469532	Statement	15	506:16:11951:11952	3469527	2	True				
ANR	3469533	IdentifierDeclStatement	int i ;	507:1:11955:11960	3469527	3	True				
ANR	3469534	IdentifierDecl	i		3469527	0					
ANR	3469535	IdentifierDeclType	int		3469527	0					
ANR	3469536	Identifier	i		3469527	1					
ANR	3469537	IdentifierDeclStatement	"const char * list [ ] = { ""ixl"" , ""ixh"" , ""iyl"" , ""iyh"" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , ""hl"" , ""ix"" , ""iy"" , ""*"" , NULL } ;"	508:1:11963:12115	3469527	4	True				
ANR	3469538	IdentifierDecl	"* list [ ] = { ""ixl"" , ""ixh"" , ""iyl"" , ""iyh"" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , ""hl"" , ""ix"" , ""iy"" , ""*"" , NULL }"		3469527	0					
ANR	3469539	IdentifierDeclType	const char * [ ]		3469527	0					
ANR	3469540	Identifier	list		3469527	1					
ANR	3469541	AssignmentExpression	"* list [ ] = { ""ixl"" , ""ixh"" , ""iyl"" , ""iyh"" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , ""hl"" , ""ix"" , ""iy"" , ""*"" , NULL }"		3469527	2		=			
ANR	3469542	Identifier	list		3469527	0					
ANR	3469543	InitializerList	"""ixl"""		3469527	1					
ANR	3469544	PrimaryExpression	"""ixl"""		3469527	0					
ANR	3469545	PrimaryExpression	"""ixh"""		3469527	1					
ANR	3469546	PrimaryExpression	"""iyl"""		3469527	2					
ANR	3469547	PrimaryExpression	"""iyh"""		3469527	3					
ANR	3469548	PrimaryExpression	"""b"""		3469527	4					
ANR	3469549	PrimaryExpression	"""c"""		3469527	5					
ANR	3469550	PrimaryExpression	"""d"""		3469527	6					
ANR	3469551	PrimaryExpression	"""e"""		3469527	7					
ANR	3469552	PrimaryExpression	"""h"""		3469527	8					
ANR	3469553	PrimaryExpression	"""l"""		3469527	9					
ANR	3469554	PrimaryExpression	"""( hl )"""		3469527	10					
ANR	3469555	PrimaryExpression	"""a"""		3469527	11					
ANR	3469556	PrimaryExpression	"""( ix +)"""		3469527	12					
ANR	3469557	PrimaryExpression	"""( iy +)"""		3469527	13					
ANR	3469558	PrimaryExpression	"""hl"""		3469527	14					
ANR	3469559	PrimaryExpression	"""ix"""		3469527	15					
ANR	3469560	PrimaryExpression	"""iy"""		3469527	16					
ANR	3469561	PrimaryExpression	"""*"""		3469527	17					
ANR	3469562	Identifier	NULL		3469527	18					
ANR	3469563	IdentifierDeclStatement	const char * nn ;	512:1:12118:12132	3469527	5	True				
ANR	3469564	IdentifierDecl	* nn		3469527	0					
ANR	3469565	IdentifierDeclType	const char *		3469527	0					
ANR	3469566	Identifier	nn		3469527	1					
ANR	3469567	ExpressionStatement	"i = indx ( p , list , 0 , & nn )"	513:1:12135:12161	3469527	6	True				
ANR	3469568	AssignmentExpression	"i = indx ( p , list , 0 , & nn )"		3469527	0		=			
ANR	3469569	Identifier	i		3469527	0					
ANR	3469570	CallExpression	"indx ( p , list , 0 , & nn )"		3469527	1					
ANR	3469571	Callee	indx		3469527	0					
ANR	3469572	Identifier	indx		3469527	0					
ANR	3469573	ArgumentList	p		3469527	1					
ANR	3469574	Argument	p		3469527	0					
ANR	3469575	Identifier	p		3469527	0					
ANR	3469576	Argument	list		3469527	1					
ANR	3469577	Identifier	list		3469527	0					
ANR	3469578	Argument	0		3469527	2					
ANR	3469579	PrimaryExpression	0		3469527	0					
ANR	3469580	Argument	& nn		3469527	3					
ANR	3469581	UnaryOperationExpression	& nn		3469527	0					
ANR	3469582	UnaryOperator	&		3469527	0					
ANR	3469583	Identifier	nn		3469527	1					
ANR	3469584	IfStatement	if ( i == 18 )		3469527	7					
ANR	3469585	Condition	i == 18	514:5:12168:12174	3469527	0	True				
ANR	3469586	EqualityExpression	i == 18		3469527	0		==			
ANR	3469587	Identifier	i		3469527	0					
ANR	3469588	PrimaryExpression	18		3469527	1					
ANR	3469589	CompoundStatement		10:14:243:243	3469527	1					
ANR	3469590	ExpressionStatement	readbyte = nn	515:2:12198:12211	3469527	0	True				
ANR	3469591	AssignmentExpression	readbyte = nn		3469527	0		=			
ANR	3469592	Identifier	readbyte		3469527	0					
ANR	3469593	Identifier	nn		3469527	1					
ANR	3469594	ExpressionStatement	writebyte = 1	516:2:12215:12228	3469527	1	True				
ANR	3469595	AssignmentExpression	writebyte = 1		3469527	0		=			
ANR	3469596	Identifier	writebyte		3469527	0					
ANR	3469597	PrimaryExpression	1		3469527	1					
ANR	3469598	ReturnStatement	return 7 ;	517:2:12232:12240	3469527	2	True				
ANR	3469599	PrimaryExpression	7		3469527	0					
ANR	3469600	IfStatement	if ( i > 14 )		3469527	8					
ANR	3469601	Condition	i > 14	519:5:12250:12255	3469527	0	True				
ANR	3469602	RelationalExpression	i > 14		3469527	0		>			
ANR	3469603	Identifier	i		3469527	0					
ANR	3469604	PrimaryExpression	14		3469527	1					
ANR	3469605	CompoundStatement		15:13:324:324	3469527	1					
ANR	3469606	IfStatement	if ( i > 15 )		3469527	0					
ANR	3469607	Condition	i > 15	520:6:12283:12288	3469527	0	True				
ANR	3469608	RelationalExpression	i > 15		3469527	0		>			
ANR	3469609	Identifier	i		3469527	0					
ANR	3469610	PrimaryExpression	15		3469527	1					
ANR	3469611	CompoundStatement		16:14:357:357	3469527	1					
ANR	3469612	ExpressionStatement	indexed = 0xDD + 0x20 * ( i - 16 )	521:3:12296:12328	3469527	0	True				
ANR	3469613	AssignmentExpression	indexed = 0xDD + 0x20 * ( i - 16 )		3469527	0		=			
ANR	3469614	Identifier	indexed		3469527	0					
ANR	3469615	AdditiveExpression	0xDD + 0x20 * ( i - 16 )		3469527	1		+			
ANR	3469616	PrimaryExpression	0xDD		3469527	0					
ANR	3469617	MultiplicativeExpression	0x20 * ( i - 16 )		3469527	1		*			
ANR	3469618	PrimaryExpression	0x20		3469527	0					
ANR	3469619	AdditiveExpression	i - 16		3469527	1		-			
ANR	3469620	Identifier	i		3469527	0					
ANR	3469621	PrimaryExpression	16		3469527	1					
ANR	3469622	ReturnStatement	return addHL ;	523:2:12336:12348	3469527	1	True				
ANR	3469623	Identifier	addHL		3469527	0					
ANR	3469624	IfStatement	if ( i <= 4 )		3469527	9					
ANR	3469625	Condition	i <= 4	525:5:12358:12363	3469527	0	True				
ANR	3469626	RelationalExpression	i <= 4		3469527	0		<=			
ANR	3469627	Identifier	i		3469527	0					
ANR	3469628	PrimaryExpression	4		3469527	1					
ANR	3469629	CompoundStatement		21:13:432:432	3469527	1					
ANR	3469630	ExpressionStatement	indexed = 0xdd + 0x20 * ( i > 2 )	526:2:12387:12418	3469527	0	True				
ANR	3469631	AssignmentExpression	indexed = 0xdd + 0x20 * ( i > 2 )		3469527	0		=			
ANR	3469632	Identifier	indexed		3469527	0					
ANR	3469633	AdditiveExpression	0xdd + 0x20 * ( i > 2 )		3469527	1		+			
ANR	3469634	PrimaryExpression	0xdd		3469527	0					
ANR	3469635	MultiplicativeExpression	0x20 * ( i > 2 )		3469527	1		*			
ANR	3469636	PrimaryExpression	0x20		3469527	0					
ANR	3469637	RelationalExpression	i > 2		3469527	1		>			
ANR	3469638	Identifier	i		3469527	0					
ANR	3469639	PrimaryExpression	2		3469527	1					
ANR	3469640	ReturnStatement	return 6 - ( i & 1 ) ;	527:2:12422:12440	3469527	1	True				
ANR	3469641	AdditiveExpression	6 - ( i & 1 )		3469527	0		-			
ANR	3469642	PrimaryExpression	6		3469527	0					
ANR	3469643	BitAndExpression	i & 1		3469527	1		&			
ANR	3469644	Identifier	i		3469527	0					
ANR	3469645	PrimaryExpression	1		3469527	1					
ANR	3469646	ExpressionStatement	i -= 4	529:1:12446:12452	3469527	10	True				
ANR	3469647	AssignmentExpression	i -= 4		3469527	0		-=			
ANR	3469648	Identifier	i		3469527	0					
ANR	3469649	PrimaryExpression	4		3469527	1					
ANR	3469650	IfStatement	if ( i < 9 )		3469527	11					
ANR	3469651	Condition	i < 9	530:5:12459:12463	3469527	0	True				
ANR	3469652	RelationalExpression	i < 9		3469527	0		<			
ANR	3469653	Identifier	i		3469527	0					
ANR	3469654	PrimaryExpression	9		3469527	1					
ANR	3469655	CompoundStatement		26:12:532:532	3469527	1					
ANR	3469656	ReturnStatement	return i ;	531:2:12470:12478	3469527	0	True				
ANR	3469657	Identifier	i		3469527	0					
ANR	3469658	ExpressionStatement	indexed = 0xDD + 0x20 * ( i - 9 )	533:1:12484:12515	3469527	12	True				
ANR	3469659	AssignmentExpression	indexed = 0xDD + 0x20 * ( i - 9 )		3469527	0		=			
ANR	3469660	Identifier	indexed		3469527	0					
ANR	3469661	AdditiveExpression	0xDD + 0x20 * ( i - 9 )		3469527	1		+			
ANR	3469662	PrimaryExpression	0xDD		3469527	0					
ANR	3469663	MultiplicativeExpression	0x20 * ( i - 9 )		3469527	1		*			
ANR	3469664	PrimaryExpression	0x20		3469527	0					
ANR	3469665	AdditiveExpression	i - 9		3469527	1		-			
ANR	3469666	Identifier	i		3469527	0					
ANR	3469667	PrimaryExpression	9		3469527	1					
ANR	3469668	ExpressionStatement	indexjmp = nn	534:1:12534:12547	3469527	13	True				
ANR	3469669	AssignmentExpression	indexjmp = nn		3469527	0		=			
ANR	3469670	Identifier	indexjmp		3469527	0					
ANR	3469671	Identifier	nn		3469527	1					
ANR	3469672	ReturnStatement	return 7 ;	535:1:12550:12558	3469527	14	True				
ANR	3469673	PrimaryExpression	7		3469527	0					
ANR	3469674	ReturnType	static int		3469527	1					
ANR	3469675	Identifier	rd_r_add		3469527	2					
ANR	3469676	ParameterList	const char * * p		3469527	3					
ANR	3469677	Parameter	const char * * p	505:20:11917:11930	3469527	0	True				
ANR	3469678	ParameterType	const char * *		3469527	0					
ANR	3469679	Identifier	p		3469527	1					
ANR	3469680	CFGEntryNode	ENTRY		3469527		True				
ANR	3469681	CFGExitNode	EXIT		3469527		True				
ANR	3469682	Symbol	p		3469527						
ANR	3469683	Symbol	nn		3469527						
ANR	3469684	Symbol	addHL		3469527						
ANR	3469685	Symbol	NULL		3469527						
ANR	3469686	Symbol	writebyte		3469527						
ANR	3469687	Symbol	indexed		3469527						
ANR	3469688	Symbol	indx		3469527						
ANR	3469689	Symbol	i		3469527						
ANR	3469690	Symbol	& nn		3469527						
ANR	3469691	Symbol	list		3469527						
ANR	3469692	Symbol	readbyte		3469527						
ANR	3469693	Symbol	indexjmp		3469527						
ANR	3469694	Function	rd_rr_	539:0:12590:12718							
ANR	3469695	FunctionDef	rd_rr_ (const char * * p)		3469694	0					
ANR	3469696	CompoundStatement		539:34:12624:12718	3469694	0					
ANR	3469697	IdentifierDeclStatement	"const char * list [ ] = { ""bc"" , ""de"" , ""hl"" , ""sp"" , NULL } ;"	540:1:12627:12683	3469694	0	True				
ANR	3469698	IdentifierDecl	"* list [ ] = { ""bc"" , ""de"" , ""hl"" , ""sp"" , NULL }"		3469694	0					
ANR	3469699	IdentifierDeclType	const char * [ ]		3469694	0					
ANR	3469700	Identifier	list		3469694	1					
ANR	3469701	AssignmentExpression	"* list [ ] = { ""bc"" , ""de"" , ""hl"" , ""sp"" , NULL }"		3469694	2		=			
ANR	3469702	Identifier	list		3469694	0					
ANR	3469703	InitializerList	"""bc"""		3469694	1					
ANR	3469704	PrimaryExpression	"""bc"""		3469694	0					
ANR	3469705	PrimaryExpression	"""de"""		3469694	1					
ANR	3469706	PrimaryExpression	"""hl"""		3469694	2					
ANR	3469707	PrimaryExpression	"""sp"""		3469694	3					
ANR	3469708	Identifier	NULL		3469694	4					
ANR	3469709	ReturnStatement	"return indx ( p , list , 1 , NULL ) ;"	543:1:12686:12716	3469694	1	True				
ANR	3469710	CallExpression	"indx ( p , list , 1 , NULL )"		3469694	0					
ANR	3469711	Callee	indx		3469694	0					
ANR	3469712	Identifier	indx		3469694	0					
ANR	3469713	ArgumentList	p		3469694	1					
ANR	3469714	Argument	p		3469694	0					
ANR	3469715	Identifier	p		3469694	0					
ANR	3469716	Argument	list		3469694	1					
ANR	3469717	Identifier	list		3469694	0					
ANR	3469718	Argument	1		3469694	2					
ANR	3469719	PrimaryExpression	1		3469694	0					
ANR	3469720	Argument	NULL		3469694	3					
ANR	3469721	Identifier	NULL		3469694	0					
ANR	3469722	ReturnType	static int		3469694	1					
ANR	3469723	Identifier	rd_rr_		3469694	2					
ANR	3469724	ParameterList	const char * * p		3469694	3					
ANR	3469725	Parameter	const char * * p	539:18:12608:12621	3469694	0	True				
ANR	3469726	ParameterType	const char * *		3469694	0					
ANR	3469727	Identifier	p		3469694	1					
ANR	3469728	CFGEntryNode	ENTRY		3469694		True				
ANR	3469729	CFGExitNode	EXIT		3469694		True				
ANR	3469730	Symbol	p		3469694						
ANR	3469731	Symbol	NULL		3469694						
ANR	3469732	Symbol	indx		3469694						
ANR	3469733	Symbol	list		3469694						
ANR	3469734	Function	rd_rrxx	547:0:12800:13173							
ANR	3469735	FunctionDef	rd_rrxx (const char * * p)		3469734	0					
ANR	3469736	CompoundStatement		547:35:12835:13173	3469734	0					
ANR	3469737	IdentifierDeclStatement	"const char * listx [ ] = { ""bc"" , ""de"" , ""ix"" , ""sp"" , NULL } ;"	548:1:12838:12895	3469734	0	True				
ANR	3469738	IdentifierDecl	"* listx [ ] = { ""bc"" , ""de"" , ""ix"" , ""sp"" , NULL }"		3469734	0					
ANR	3469739	IdentifierDeclType	const char * [ ]		3469734	0					
ANR	3469740	Identifier	listx		3469734	1					
ANR	3469741	AssignmentExpression	"* listx [ ] = { ""bc"" , ""de"" , ""ix"" , ""sp"" , NULL }"		3469734	2		=			
ANR	3469742	Identifier	listx		3469734	0					
ANR	3469743	InitializerList	"""bc"""		3469734	1					
ANR	3469744	PrimaryExpression	"""bc"""		3469734	0					
ANR	3469745	PrimaryExpression	"""de"""		3469734	1					
ANR	3469746	PrimaryExpression	"""ix"""		3469734	2					
ANR	3469747	PrimaryExpression	"""sp"""		3469734	3					
ANR	3469748	Identifier	NULL		3469734	4					
ANR	3469749	IdentifierDeclStatement	"const char * listy [ ] = { ""bc"" , ""de"" , ""iy"" , ""sp"" , NULL } ;"	551:1:12898:12955	3469734	1	True				
ANR	3469750	IdentifierDecl	"* listy [ ] = { ""bc"" , ""de"" , ""iy"" , ""sp"" , NULL }"		3469734	0					
ANR	3469751	IdentifierDeclType	const char * [ ]		3469734	0					
ANR	3469752	Identifier	listy		3469734	1					
ANR	3469753	AssignmentExpression	"* listy [ ] = { ""bc"" , ""de"" , ""iy"" , ""sp"" , NULL }"		3469734	2		=			
ANR	3469754	Identifier	listy		3469734	0					
ANR	3469755	InitializerList	"""bc"""		3469734	1					
ANR	3469756	PrimaryExpression	"""bc"""		3469734	0					
ANR	3469757	PrimaryExpression	"""de"""		3469734	1					
ANR	3469758	PrimaryExpression	"""iy"""		3469734	2					
ANR	3469759	PrimaryExpression	"""sp"""		3469734	3					
ANR	3469760	Identifier	NULL		3469734	4					
ANR	3469761	IdentifierDeclStatement	"const char * list [ ] = { ""bc"" , ""de"" , ""hl"" , ""sp"" , NULL } ;"	554:1:12958:13014	3469734	2	True				
ANR	3469762	IdentifierDecl	"* list [ ] = { ""bc"" , ""de"" , ""hl"" , ""sp"" , NULL }"		3469734	0					
ANR	3469763	IdentifierDeclType	const char * [ ]		3469734	0					
ANR	3469764	Identifier	list		3469734	1					
ANR	3469765	AssignmentExpression	"* list [ ] = { ""bc"" , ""de"" , ""hl"" , ""sp"" , NULL }"		3469734	2		=			
ANR	3469766	Identifier	list		3469734	0					
ANR	3469767	InitializerList	"""bc"""		3469734	1					
ANR	3469768	PrimaryExpression	"""bc"""		3469734	0					
ANR	3469769	PrimaryExpression	"""de"""		3469734	1					
ANR	3469770	PrimaryExpression	"""hl"""		3469734	2					
ANR	3469771	PrimaryExpression	"""sp"""		3469734	3					
ANR	3469772	Identifier	NULL		3469734	4					
ANR	3469773	IfStatement	if ( indexed == 0xdd )		3469734	3					
ANR	3469774	Condition	indexed == 0xdd	557:5:13021:13035	3469734	0	True				
ANR	3469775	EqualityExpression	indexed == 0xdd		3469734	0		==			
ANR	3469776	Identifier	indexed		3469734	0					
ANR	3469777	PrimaryExpression	0xdd		3469734	1					
ANR	3469778	CompoundStatement		11:22:202:202	3469734	1					
ANR	3469779	ReturnStatement	"return indx ( p , listx , 1 , NULL ) ;"	558:2:13042:13073	3469734	0	True				
ANR	3469780	CallExpression	"indx ( p , listx , 1 , NULL )"		3469734	0					
ANR	3469781	Callee	indx		3469734	0					
ANR	3469782	Identifier	indx		3469734	0					
ANR	3469783	ArgumentList	p		3469734	1					
ANR	3469784	Argument	p		3469734	0					
ANR	3469785	Identifier	p		3469734	0					
ANR	3469786	Argument	listx		3469734	1					
ANR	3469787	Identifier	listx		3469734	0					
ANR	3469788	Argument	1		3469734	2					
ANR	3469789	PrimaryExpression	1		3469734	0					
ANR	3469790	Argument	NULL		3469734	3					
ANR	3469791	Identifier	NULL		3469734	0					
ANR	3469792	IfStatement	if ( indexed == 0xfd )		3469734	4					
ANR	3469793	Condition	indexed == 0xfd	560:5:13083:13097	3469734	0	True				
ANR	3469794	EqualityExpression	indexed == 0xfd		3469734	0		==			
ANR	3469795	Identifier	indexed		3469734	0					
ANR	3469796	PrimaryExpression	0xfd		3469734	1					
ANR	3469797	CompoundStatement		14:22:264:264	3469734	1					
ANR	3469798	ReturnStatement	"return indx ( p , listy , 1 , NULL ) ;"	561:2:13104:13135	3469734	0	True				
ANR	3469799	CallExpression	"indx ( p , listy , 1 , NULL )"		3469734	0					
ANR	3469800	Callee	indx		3469734	0					
ANR	3469801	Identifier	indx		3469734	0					
ANR	3469802	ArgumentList	p		3469734	1					
ANR	3469803	Argument	p		3469734	0					
ANR	3469804	Identifier	p		3469734	0					
ANR	3469805	Argument	listy		3469734	1					
ANR	3469806	Identifier	listy		3469734	0					
ANR	3469807	Argument	1		3469734	2					
ANR	3469808	PrimaryExpression	1		3469734	0					
ANR	3469809	Argument	NULL		3469734	3					
ANR	3469810	Identifier	NULL		3469734	0					
ANR	3469811	ReturnStatement	"return indx ( p , list , 1 , NULL ) ;"	563:1:13141:13171	3469734	5	True				
ANR	3469812	CallExpression	"indx ( p , list , 1 , NULL )"		3469734	0					
ANR	3469813	Callee	indx		3469734	0					
ANR	3469814	Identifier	indx		3469734	0					
ANR	3469815	ArgumentList	p		3469734	1					
ANR	3469816	Argument	p		3469734	0					
ANR	3469817	Identifier	p		3469734	0					
ANR	3469818	Argument	list		3469734	1					
ANR	3469819	Identifier	list		3469734	0					
ANR	3469820	Argument	1		3469734	2					
ANR	3469821	PrimaryExpression	1		3469734	0					
ANR	3469822	Argument	NULL		3469734	3					
ANR	3469823	Identifier	NULL		3469734	0					
ANR	3469824	ReturnType	static int		3469734	1					
ANR	3469825	Identifier	rd_rrxx		3469734	2					
ANR	3469826	ParameterList	const char * * p		3469734	3					
ANR	3469827	Parameter	const char * * p	547:19:12819:12832	3469734	0	True				
ANR	3469828	ParameterType	const char * *		3469734	0					
ANR	3469829	Identifier	p		3469734	1					
ANR	3469830	CFGEntryNode	ENTRY		3469734		True				
ANR	3469831	CFGExitNode	EXIT		3469734		True				
ANR	3469832	Symbol	p		3469734						
ANR	3469833	Symbol	NULL		3469734						
ANR	3469834	Symbol	indexed		3469734						
ANR	3469835	Symbol	listy		3469734						
ANR	3469836	Symbol	indx		3469734						
ANR	3469837	Symbol	listx		3469734						
ANR	3469838	Symbol	list		3469734						
ANR	3469839	Function	rd_r	568:0:13258:13739							
ANR	3469840	FunctionDef	rd_r (const char * * p)		3469839	0					
ANR	3469841	CompoundStatement		568:32:13290:13739	3469839	0					
ANR	3469842	IdentifierDeclStatement	int i ;	569:1:13293:13298	3469839	0	True				
ANR	3469843	IdentifierDecl	i		3469839	0					
ANR	3469844	IdentifierDeclType	int		3469839	0					
ANR	3469845	Identifier	i		3469839	1					
ANR	3469846	IdentifierDeclStatement	const char * nn ;	570:1:13301:13315	3469839	1	True				
ANR	3469847	IdentifierDecl	* nn		3469839	0					
ANR	3469848	IdentifierDeclType	const char *		3469839	0					
ANR	3469849	Identifier	nn		3469839	1					
ANR	3469850	IdentifierDeclStatement	"const char * list [ ] = { ""ixl"" , ""ixh"" , ""iyl"" , ""iyh"" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , ""*"" , NULL } ;"	571:1:13318:13452	3469839	2	True				
ANR	3469851	IdentifierDecl	"* list [ ] = { ""ixl"" , ""ixh"" , ""iyl"" , ""iyh"" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , ""*"" , NULL }"		3469839	0					
ANR	3469852	IdentifierDeclType	const char * [ ]		3469839	0					
ANR	3469853	Identifier	list		3469839	1					
ANR	3469854	AssignmentExpression	"* list [ ] = { ""ixl"" , ""ixh"" , ""iyl"" , ""iyh"" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , ""*"" , NULL }"		3469839	2		=			
ANR	3469855	Identifier	list		3469839	0					
ANR	3469856	InitializerList	"""ixl"""		3469839	1					
ANR	3469857	PrimaryExpression	"""ixl"""		3469839	0					
ANR	3469858	PrimaryExpression	"""ixh"""		3469839	1					
ANR	3469859	PrimaryExpression	"""iyl"""		3469839	2					
ANR	3469860	PrimaryExpression	"""iyh"""		3469839	3					
ANR	3469861	PrimaryExpression	"""b"""		3469839	4					
ANR	3469862	PrimaryExpression	"""c"""		3469839	5					
ANR	3469863	PrimaryExpression	"""d"""		3469839	6					
ANR	3469864	PrimaryExpression	"""e"""		3469839	7					
ANR	3469865	PrimaryExpression	"""h"""		3469839	8					
ANR	3469866	PrimaryExpression	"""l"""		3469839	9					
ANR	3469867	PrimaryExpression	"""( hl )"""		3469839	10					
ANR	3469868	PrimaryExpression	"""a"""		3469839	11					
ANR	3469869	PrimaryExpression	"""( ix +)"""		3469839	12					
ANR	3469870	PrimaryExpression	"""( iy +)"""		3469839	13					
ANR	3469871	PrimaryExpression	"""*"""		3469839	14					
ANR	3469872	Identifier	NULL		3469839	15					
ANR	3469873	ExpressionStatement	"i = indx ( p , list , 0 , & nn )"	575:1:13455:13481	3469839	3	True				
ANR	3469874	AssignmentExpression	"i = indx ( p , list , 0 , & nn )"		3469839	0		=			
ANR	3469875	Identifier	i		3469839	0					
ANR	3469876	CallExpression	"indx ( p , list , 0 , & nn )"		3469839	1					
ANR	3469877	Callee	indx		3469839	0					
ANR	3469878	Identifier	indx		3469839	0					
ANR	3469879	ArgumentList	p		3469839	1					
ANR	3469880	Argument	p		3469839	0					
ANR	3469881	Identifier	p		3469839	0					
ANR	3469882	Argument	list		3469839	1					
ANR	3469883	Identifier	list		3469839	0					
ANR	3469884	Argument	0		3469839	2					
ANR	3469885	PrimaryExpression	0		3469839	0					
ANR	3469886	Argument	& nn		3469839	3					
ANR	3469887	UnaryOperationExpression	& nn		3469839	0					
ANR	3469888	UnaryOperator	&		3469839	0					
ANR	3469889	Identifier	nn		3469839	1					
ANR	3469890	IfStatement	if ( i == 15 )		3469839	4					
ANR	3469891	Condition	i == 15	576:5:13488:13494	3469839	0	True				
ANR	3469892	EqualityExpression	i == 15		3469839	0		==			
ANR	3469893	Identifier	i		3469839	0					
ANR	3469894	PrimaryExpression	15		3469839	1					
ANR	3469895	CompoundStatement		9:14:206:206	3469839	1					
ANR	3469896	ExpressionStatement	readbyte = nn	577:2:13518:13531	3469839	0	True				
ANR	3469897	AssignmentExpression	readbyte = nn		3469839	0		=			
ANR	3469898	Identifier	readbyte		3469839	0					
ANR	3469899	Identifier	nn		3469839	1					
ANR	3469900	ExpressionStatement	writebyte = 1	578:2:13535:13548	3469839	1	True				
ANR	3469901	AssignmentExpression	writebyte = 1		3469839	0		=			
ANR	3469902	Identifier	writebyte		3469839	0					
ANR	3469903	PrimaryExpression	1		3469839	1					
ANR	3469904	ReturnStatement	return 7 ;	579:2:13552:13560	3469839	2	True				
ANR	3469905	PrimaryExpression	7		3469839	0					
ANR	3469906	IfStatement	if ( i <= 4 )		3469839	5					
ANR	3469907	Condition	i <= 4	581:5:13570:13575	3469839	0	True				
ANR	3469908	RelationalExpression	i <= 4		3469839	0		<=			
ANR	3469909	Identifier	i		3469839	0					
ANR	3469910	PrimaryExpression	4		3469839	1					
ANR	3469911	CompoundStatement		14:13:287:287	3469839	1					
ANR	3469912	ExpressionStatement	indexed = 0xdd + 0x20 * ( i > 2 )	582:2:13582:13613	3469839	0	True				
ANR	3469913	AssignmentExpression	indexed = 0xdd + 0x20 * ( i > 2 )		3469839	0		=			
ANR	3469914	Identifier	indexed		3469839	0					
ANR	3469915	AdditiveExpression	0xdd + 0x20 * ( i > 2 )		3469839	1		+			
ANR	3469916	PrimaryExpression	0xdd		3469839	0					
ANR	3469917	MultiplicativeExpression	0x20 * ( i > 2 )		3469839	1		*			
ANR	3469918	PrimaryExpression	0x20		3469839	0					
ANR	3469919	RelationalExpression	i > 2		3469839	1		>			
ANR	3469920	Identifier	i		3469839	0					
ANR	3469921	PrimaryExpression	2		3469839	1					
ANR	3469922	ReturnStatement	return 6 - ( i & 1 ) ;	583:2:13617:13635	3469839	1	True				
ANR	3469923	AdditiveExpression	6 - ( i & 1 )		3469839	0		-			
ANR	3469924	PrimaryExpression	6		3469839	0					
ANR	3469925	BitAndExpression	i & 1		3469839	1		&			
ANR	3469926	Identifier	i		3469839	0					
ANR	3469927	PrimaryExpression	1		3469839	1					
ANR	3469928	ExpressionStatement	i -= 4	585:1:13641:13647	3469839	6	True				
ANR	3469929	AssignmentExpression	i -= 4		3469839	0		-=			
ANR	3469930	Identifier	i		3469839	0					
ANR	3469931	PrimaryExpression	4		3469839	1					
ANR	3469932	IfStatement	if ( i < 9 )		3469839	7					
ANR	3469933	Condition	i < 9	586:5:13654:13658	3469839	0	True				
ANR	3469934	RelationalExpression	i < 9		3469839	0		<			
ANR	3469935	Identifier	i		3469839	0					
ANR	3469936	PrimaryExpression	9		3469839	1					
ANR	3469937	CompoundStatement		19:12:370:370	3469839	1					
ANR	3469938	ReturnStatement	return i ;	587:2:13665:13673	3469839	0	True				
ANR	3469939	Identifier	i		3469839	0					
ANR	3469940	ExpressionStatement	indexed = 0xDD + 0x20 * ( i - 9 )	589:1:13679:13710	3469839	8	True				
ANR	3469941	AssignmentExpression	indexed = 0xDD + 0x20 * ( i - 9 )		3469839	0		=			
ANR	3469942	Identifier	indexed		3469839	0					
ANR	3469943	AdditiveExpression	0xDD + 0x20 * ( i - 9 )		3469839	1		+			
ANR	3469944	PrimaryExpression	0xDD		3469839	0					
ANR	3469945	MultiplicativeExpression	0x20 * ( i - 9 )		3469839	1		*			
ANR	3469946	PrimaryExpression	0x20		3469839	0					
ANR	3469947	AdditiveExpression	i - 9		3469839	1		-			
ANR	3469948	Identifier	i		3469839	0					
ANR	3469949	PrimaryExpression	9		3469839	1					
ANR	3469950	ExpressionStatement	indexjmp = nn	590:1:13713:13726	3469839	9	True				
ANR	3469951	AssignmentExpression	indexjmp = nn		3469839	0		=			
ANR	3469952	Identifier	indexjmp		3469839	0					
ANR	3469953	Identifier	nn		3469839	1					
ANR	3469954	ReturnStatement	return 7 ;	591:1:13729:13737	3469839	10	True				
ANR	3469955	PrimaryExpression	7		3469839	0					
ANR	3469956	ReturnType	static int		3469839	1					
ANR	3469957	Identifier	rd_r		3469839	2					
ANR	3469958	ParameterList	const char * * p		3469839	3					
ANR	3469959	Parameter	const char * * p	568:16:13274:13287	3469839	0	True				
ANR	3469960	ParameterType	const char * *		3469839	0					
ANR	3469961	Identifier	p		3469839	1					
ANR	3469962	CFGEntryNode	ENTRY		3469839		True				
ANR	3469963	CFGExitNode	EXIT		3469839		True				
ANR	3469964	Symbol	p		3469839						
ANR	3469965	Symbol	nn		3469839						
ANR	3469966	Symbol	NULL		3469839						
ANR	3469967	Symbol	writebyte		3469839						
ANR	3469968	Symbol	indexed		3469839						
ANR	3469969	Symbol	indx		3469839						
ANR	3469970	Symbol	i		3469839						
ANR	3469971	Symbol	& nn		3469839						
ANR	3469972	Symbol	list		3469839						
ANR	3469973	Symbol	readbyte		3469839						
ANR	3469974	Symbol	indexjmp		3469839						
ANR	3469975	Function	rd_r_	595:0:13776:14030							
ANR	3469976	FunctionDef	rd_r_ (const char * * p)		3469975	0					
ANR	3469977	CompoundStatement		595:33:13809:14030	3469975	0					
ANR	3469978	IdentifierDeclStatement	int i ;	596:1:13812:13817	3469975	0	True				
ANR	3469979	IdentifierDecl	i		3469975	0					
ANR	3469980	IdentifierDeclType	int		3469975	0					
ANR	3469981	Identifier	i		3469975	1					
ANR	3469982	IdentifierDeclStatement	"const char * list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , NULL } ;"	597:1:13820:13919	3469975	1	True				
ANR	3469983	IdentifierDecl	"* list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , NULL }"		3469975	0					
ANR	3469984	IdentifierDeclType	const char * [ ]		3469975	0					
ANR	3469985	Identifier	list		3469975	1					
ANR	3469986	AssignmentExpression	"* list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , NULL }"		3469975	2		=			
ANR	3469987	Identifier	list		3469975	0					
ANR	3469988	InitializerList	"""b"""		3469975	1					
ANR	3469989	PrimaryExpression	"""b"""		3469975	0					
ANR	3469990	PrimaryExpression	"""c"""		3469975	1					
ANR	3469991	PrimaryExpression	"""d"""		3469975	2					
ANR	3469992	PrimaryExpression	"""e"""		3469975	3					
ANR	3469993	PrimaryExpression	"""h"""		3469975	4					
ANR	3469994	PrimaryExpression	"""l"""		3469975	5					
ANR	3469995	PrimaryExpression	"""( hl )"""		3469975	6					
ANR	3469996	PrimaryExpression	"""a"""		3469975	7					
ANR	3469997	PrimaryExpression	"""( ix +)"""		3469975	8					
ANR	3469998	PrimaryExpression	"""( iy +)"""		3469975	9					
ANR	3469999	Identifier	NULL		3469975	10					
ANR	3470000	ExpressionStatement	"i = indx ( p , list , 1 , & indexjmp )"	600:1:13922:13954	3469975	2	True				
ANR	3470001	AssignmentExpression	"i = indx ( p , list , 1 , & indexjmp )"		3469975	0		=			
ANR	3470002	Identifier	i		3469975	0					
ANR	3470003	CallExpression	"indx ( p , list , 1 , & indexjmp )"		3469975	1					
ANR	3470004	Callee	indx		3469975	0					
ANR	3470005	Identifier	indx		3469975	0					
ANR	3470006	ArgumentList	p		3469975	1					
ANR	3470007	Argument	p		3469975	0					
ANR	3470008	Identifier	p		3469975	0					
ANR	3470009	Argument	list		3469975	1					
ANR	3470010	Identifier	list		3469975	0					
ANR	3470011	Argument	1		3469975	2					
ANR	3470012	PrimaryExpression	1		3469975	0					
ANR	3470013	Argument	& indexjmp		3469975	3					
ANR	3470014	UnaryOperationExpression	& indexjmp		3469975	0					
ANR	3470015	UnaryOperator	&		3469975	0					
ANR	3470016	Identifier	indexjmp		3469975	1					
ANR	3470017	IfStatement	if ( i < 9 )		3469975	3					
ANR	3470018	Condition	i < 9	601:5:13961:13965	3469975	0	True				
ANR	3470019	RelationalExpression	i < 9		3469975	0		<			
ANR	3470020	Identifier	i		3469975	0					
ANR	3470021	PrimaryExpression	9		3469975	1					
ANR	3470022	CompoundStatement		7:12:158:158	3469975	1					
ANR	3470023	ReturnStatement	return i ;	602:2:13972:13980	3469975	0	True				
ANR	3470024	Identifier	i		3469975	0					
ANR	3470025	ExpressionStatement	indexed = 0xDD + 0x20 * ( i - 9 )	604:1:13986:14017	3469975	4	True				
ANR	3470026	AssignmentExpression	indexed = 0xDD + 0x20 * ( i - 9 )		3469975	0		=			
ANR	3470027	Identifier	indexed		3469975	0					
ANR	3470028	AdditiveExpression	0xDD + 0x20 * ( i - 9 )		3469975	1		+			
ANR	3470029	PrimaryExpression	0xDD		3469975	0					
ANR	3470030	MultiplicativeExpression	0x20 * ( i - 9 )		3469975	1		*			
ANR	3470031	PrimaryExpression	0x20		3469975	0					
ANR	3470032	AdditiveExpression	i - 9		3469975	1		-			
ANR	3470033	Identifier	i		3469975	0					
ANR	3470034	PrimaryExpression	9		3469975	1					
ANR	3470035	ReturnStatement	return 7 ;	605:1:14020:14028	3469975	5	True				
ANR	3470036	PrimaryExpression	7		3469975	0					
ANR	3470037	ReturnType	static int		3469975	1					
ANR	3470038	Identifier	rd_r_		3469975	2					
ANR	3470039	ParameterList	const char * * p		3469975	3					
ANR	3470040	Parameter	const char * * p	595:17:13793:13806	3469975	0	True				
ANR	3470041	ParameterType	const char * *		3469975	0					
ANR	3470042	Identifier	p		3469975	1					
ANR	3470043	CFGEntryNode	ENTRY		3469975		True				
ANR	3470044	CFGExitNode	EXIT		3469975		True				
ANR	3470045	Symbol	p		3469975						
ANR	3470046	Symbol	NULL		3469975						
ANR	3470047	Symbol	indexed		3469975						
ANR	3470048	Symbol	indx		3469975						
ANR	3470049	Symbol	i		3469975						
ANR	3470050	Symbol	list		3469975						
ANR	3470051	Symbol	& indexjmp		3469975						
ANR	3470052	Function	rd_0_7	609:0:14086:14221							
ANR	3470053	FunctionDef	rd_0_7 (const char * * p)		3470052	0					
ANR	3470054	CompoundStatement		609:34:14120:14221	3470052	0					
ANR	3470055	ExpressionStatement	* p = delspc ( * p )	610:1:14123:14139	3470052	0	True				
ANR	3470056	AssignmentExpression	* p = delspc ( * p )		3470052	0		=			
ANR	3470057	UnaryOperationExpression	* p		3470052	0					
ANR	3470058	UnaryOperator	*		3470052	0					
ANR	3470059	Identifier	p		3470052	1					
ANR	3470060	CallExpression	delspc ( * p )		3470052	1					
ANR	3470061	Callee	delspc		3470052	0					
ANR	3470062	Identifier	delspc		3470052	0					
ANR	3470063	ArgumentList	* p		3470052	1					
ANR	3470064	Argument	* p		3470052	0					
ANR	3470065	UnaryOperationExpression	* p		3470052	0					
ANR	3470066	UnaryOperator	*		3470052	0					
ANR	3470067	Identifier	p		3470052	1					
ANR	3470068	IfStatement	if ( * * p == 0 )		3470052	1					
ANR	3470069	Condition	* * p == 0	611:5:14146:14153	3470052	0	True				
ANR	3470070	EqualityExpression	* * p == 0		3470052	0		==			
ANR	3470071	UnaryOperationExpression	* * p		3470052	0					
ANR	3470072	UnaryOperator	*		3470052	0					
ANR	3470073	UnaryOperationExpression	* p		3470052	1					
ANR	3470074	UnaryOperator	*		3470052	0					
ANR	3470075	Identifier	p		3470052	1					
ANR	3470076	PrimaryExpression	0		3470052	1					
ANR	3470077	CompoundStatement		3:15:35:35	3470052	1					
ANR	3470078	ReturnStatement	return 0 ;	612:2:14160:14168	3470052	0	True				
ANR	3470079	PrimaryExpression	0		3470052	0					
ANR	3470080	ExpressionStatement	bitsetres = * p	614:1:14174:14188	3470052	2	True				
ANR	3470081	AssignmentExpression	bitsetres = * p		3470052	0		=			
ANR	3470082	Identifier	bitsetres		3470052	0					
ANR	3470083	UnaryOperationExpression	* p		3470052	1					
ANR	3470084	UnaryOperator	*		3470052	0					
ANR	3470085	Identifier	p		3470052	1					
ANR	3470086	ExpressionStatement	"skipword ( p , ',' )"	615:1:14191:14208	3470052	3	True				
ANR	3470087	CallExpression	"skipword ( p , ',' )"		3470052	0					
ANR	3470088	Callee	skipword		3470052	0					
ANR	3470089	Identifier	skipword		3470052	0					
ANR	3470090	ArgumentList	p		3470052	1					
ANR	3470091	Argument	p		3470052	0					
ANR	3470092	Identifier	p		3470052	0					
ANR	3470093	Argument	"','"		3470052	1					
ANR	3470094	PrimaryExpression	"','"		3470052	0					
ANR	3470095	ReturnStatement	return 1 ;	616:1:14211:14219	3470052	4	True				
ANR	3470096	PrimaryExpression	1		3470052	0					
ANR	3470097	ReturnType	static int		3470052	1					
ANR	3470098	Identifier	rd_0_7		3470052	2					
ANR	3470099	ParameterList	const char * * p		3470052	3					
ANR	3470100	Parameter	const char * * p	609:18:14104:14117	3470052	0	True				
ANR	3470101	ParameterType	const char * *		3470052	0					
ANR	3470102	Identifier	p		3470052	1					
ANR	3470103	CFGEntryNode	ENTRY		3470052		True				
ANR	3470104	CFGExitNode	EXIT		3470052		True				
ANR	3470105	Symbol	p		3470052						
ANR	3470106	Symbol	bitsetres		3470052						
ANR	3470107	Symbol	* p		3470052						
ANR	3470108	Symbol	* * p		3470052						
ANR	3470109	Symbol	delspc		3470052						
ANR	3470110	Function	rd_cc	620:0:14278:14425							
ANR	3470111	FunctionDef	rd_cc (const char * * p)		3470110	0					
ANR	3470112	CompoundStatement		620:33:14311:14425	3470110	0					
ANR	3470113	IdentifierDeclStatement	"const char * list [ ] = { ""nz"" , ""z"" , ""nc"" , ""c"" , ""po"" , ""pe"" , ""p"" , ""m"" , NULL } ;"	621:1:14314:14390	3470110	0	True				
ANR	3470114	IdentifierDecl	"* list [ ] = { ""nz"" , ""z"" , ""nc"" , ""c"" , ""po"" , ""pe"" , ""p"" , ""m"" , NULL }"		3470110	0					
ANR	3470115	IdentifierDeclType	const char * [ ]		3470110	0					
ANR	3470116	Identifier	list		3470110	1					
ANR	3470117	AssignmentExpression	"* list [ ] = { ""nz"" , ""z"" , ""nc"" , ""c"" , ""po"" , ""pe"" , ""p"" , ""m"" , NULL }"		3470110	2		=			
ANR	3470118	Identifier	list		3470110	0					
ANR	3470119	InitializerList	"""nz"""		3470110	1					
ANR	3470120	PrimaryExpression	"""nz"""		3470110	0					
ANR	3470121	PrimaryExpression	"""z"""		3470110	1					
ANR	3470122	PrimaryExpression	"""nc"""		3470110	2					
ANR	3470123	PrimaryExpression	"""c"""		3470110	3					
ANR	3470124	PrimaryExpression	"""po"""		3470110	4					
ANR	3470125	PrimaryExpression	"""pe"""		3470110	5					
ANR	3470126	PrimaryExpression	"""p"""		3470110	6					
ANR	3470127	PrimaryExpression	"""m"""		3470110	7					
ANR	3470128	Identifier	NULL		3470110	8					
ANR	3470129	ReturnStatement	"return indx ( p , list , 0 , NULL ) ;"	624:1:14393:14423	3470110	1	True				
ANR	3470130	CallExpression	"indx ( p , list , 0 , NULL )"		3470110	0					
ANR	3470131	Callee	indx		3470110	0					
ANR	3470132	Identifier	indx		3470110	0					
ANR	3470133	ArgumentList	p		3470110	1					
ANR	3470134	Argument	p		3470110	0					
ANR	3470135	Identifier	p		3470110	0					
ANR	3470136	Argument	list		3470110	1					
ANR	3470137	Identifier	list		3470110	0					
ANR	3470138	Argument	0		3470110	2					
ANR	3470139	PrimaryExpression	0		3470110	0					
ANR	3470140	Argument	NULL		3470110	3					
ANR	3470141	Identifier	NULL		3470110	0					
ANR	3470142	ReturnType	static int		3470110	1					
ANR	3470143	Identifier	rd_cc		3470110	2					
ANR	3470144	ParameterList	const char * * p		3470110	3					
ANR	3470145	Parameter	const char * * p	620:17:14295:14308	3470110	0	True				
ANR	3470146	ParameterType	const char * *		3470110	0					
ANR	3470147	Identifier	p		3470110	1					
ANR	3470148	CFGEntryNode	ENTRY		3470110		True				
ANR	3470149	CFGExitNode	EXIT		3470110		True				
ANR	3470150	Symbol	p		3470110						
ANR	3470151	Symbol	NULL		3470110						
ANR	3470152	Symbol	indx		3470110						
ANR	3470153	Symbol	list		3470110						
ANR	3470154	Function	rd_r_rr	628:0:14464:14869							
ANR	3470155	FunctionDef	rd_r_rr (const char * * p)		3470154	0					
ANR	3470156	CompoundStatement		628:35:14499:14869	3470154	0					
ANR	3470157	IdentifierDeclStatement	int i ;	629:1:14502:14507	3470154	0	True				
ANR	3470158	IdentifierDecl	i		3470154	0					
ANR	3470159	IdentifierDeclType	int		3470154	0					
ANR	3470160	Identifier	i		3470154	1					
ANR	3470161	IdentifierDeclStatement	"const char * list [ ] = { ""iy"" , ""ix"" , ""sp"" , ""hl"" , ""de"" , ""bc"" , """" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , NULL } ;"	630:1:14510:14651	3470154	1	True				
ANR	3470162	IdentifierDecl	"* list [ ] = { ""iy"" , ""ix"" , ""sp"" , ""hl"" , ""de"" , ""bc"" , """" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , NULL }"		3470154	0					
ANR	3470163	IdentifierDeclType	const char * [ ]		3470154	0					
ANR	3470164	Identifier	list		3470154	1					
ANR	3470165	AssignmentExpression	"* list [ ] = { ""iy"" , ""ix"" , ""sp"" , ""hl"" , ""de"" , ""bc"" , """" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , NULL }"		3470154	2		=			
ANR	3470166	Identifier	list		3470154	0					
ANR	3470167	InitializerList	"""iy"""		3470154	1					
ANR	3470168	PrimaryExpression	"""iy"""		3470154	0					
ANR	3470169	PrimaryExpression	"""ix"""		3470154	1					
ANR	3470170	PrimaryExpression	"""sp"""		3470154	2					
ANR	3470171	PrimaryExpression	"""hl"""		3470154	3					
ANR	3470172	PrimaryExpression	"""de"""		3470154	4					
ANR	3470173	PrimaryExpression	"""bc"""		3470154	5					
ANR	3470174	PrimaryExpression	""""""		3470154	6					
ANR	3470175	PrimaryExpression	"""b"""		3470154	7					
ANR	3470176	PrimaryExpression	"""c"""		3470154	8					
ANR	3470177	PrimaryExpression	"""d"""		3470154	9					
ANR	3470178	PrimaryExpression	"""e"""		3470154	10					
ANR	3470179	PrimaryExpression	"""h"""		3470154	11					
ANR	3470180	PrimaryExpression	"""l"""		3470154	12					
ANR	3470181	PrimaryExpression	"""( hl )"""		3470154	13					
ANR	3470182	PrimaryExpression	"""a"""		3470154	14					
ANR	3470183	PrimaryExpression	"""( ix +)"""		3470154	15					
ANR	3470184	PrimaryExpression	"""( iy +)"""		3470154	16					
ANR	3470185	Identifier	NULL		3470154	17					
ANR	3470186	ExpressionStatement	"i = indx ( p , list , 1 , & indexjmp )"	634:1:14654:14686	3470154	2	True				
ANR	3470187	AssignmentExpression	"i = indx ( p , list , 1 , & indexjmp )"		3470154	0		=			
ANR	3470188	Identifier	i		3470154	0					
ANR	3470189	CallExpression	"indx ( p , list , 1 , & indexjmp )"		3470154	1					
ANR	3470190	Callee	indx		3470154	0					
ANR	3470191	Identifier	indx		3470154	0					
ANR	3470192	ArgumentList	p		3470154	1					
ANR	3470193	Argument	p		3470154	0					
ANR	3470194	Identifier	p		3470154	0					
ANR	3470195	Argument	list		3470154	1					
ANR	3470196	Identifier	list		3470154	0					
ANR	3470197	Argument	1		3470154	2					
ANR	3470198	PrimaryExpression	1		3470154	0					
ANR	3470199	Argument	& indexjmp		3470154	3					
ANR	3470200	UnaryOperationExpression	& indexjmp		3470154	0					
ANR	3470201	UnaryOperator	&		3470154	0					
ANR	3470202	Identifier	indexjmp		3470154	1					
ANR	3470203	IfStatement	if ( ! i )		3470154	3					
ANR	3470204	Condition	! i	635:5:14693:14694	3470154	0	True				
ANR	3470205	UnaryOperationExpression	! i		3470154	0					
ANR	3470206	UnaryOperator	!		3470154	0					
ANR	3470207	Identifier	i		3470154	1					
ANR	3470208	CompoundStatement		8:9:197:197	3470154	1					
ANR	3470209	ReturnStatement	return 0 ;	636:2:14701:14709	3470154	0	True				
ANR	3470210	PrimaryExpression	0		3470154	0					
ANR	3470211	IfStatement	if ( i < 16 && i > 2 )		3470154	4					
ANR	3470212	Condition	i < 16 && i > 2	638:5:14719:14733	3470154	0	True				
ANR	3470213	AndExpression	i < 16 && i > 2		3470154	0		&&			
ANR	3470214	RelationalExpression	i < 16		3470154	0		<			
ANR	3470215	Identifier	i		3470154	0					
ANR	3470216	PrimaryExpression	16		3470154	1					
ANR	3470217	RelationalExpression	i > 2		3470154	1		>			
ANR	3470218	Identifier	i		3470154	0					
ANR	3470219	PrimaryExpression	2		3470154	1					
ANR	3470220	CompoundStatement		11:22:236:236	3470154	1					
ANR	3470221	ReturnStatement	return 7 - i ;	639:2:14740:14752	3470154	0	True				
ANR	3470222	AdditiveExpression	7 - i		3470154	0		-			
ANR	3470223	PrimaryExpression	7		3470154	0					
ANR	3470224	Identifier	i		3470154	1					
ANR	3470225	IfStatement	if ( i > 15 )		3470154	5					
ANR	3470226	Condition	i > 15	641:5:14762:14767	3470154	0	True				
ANR	3470227	RelationalExpression	i > 15		3470154	0		>			
ANR	3470228	Identifier	i		3470154	0					
ANR	3470229	PrimaryExpression	15		3470154	1					
ANR	3470230	CompoundStatement		14:13:270:270	3470154	1					
ANR	3470231	ExpressionStatement	indexed = 0xDD + ( i - 16 ) * 0x20	642:2:14774:14806	3470154	0	True				
ANR	3470232	AssignmentExpression	indexed = 0xDD + ( i - 16 ) * 0x20		3470154	0		=			
ANR	3470233	Identifier	indexed		3470154	0					
ANR	3470234	AdditiveExpression	0xDD + ( i - 16 ) * 0x20		3470154	1		+			
ANR	3470235	PrimaryExpression	0xDD		3470154	0					
ANR	3470236	MultiplicativeExpression	( i - 16 ) * 0x20		3470154	1		*			
ANR	3470237	AdditiveExpression	i - 16		3470154	0		-			
ANR	3470238	Identifier	i		3470154	0					
ANR	3470239	PrimaryExpression	16		3470154	1					
ANR	3470240	PrimaryExpression	0x20		3470154	1					
ANR	3470241	ReturnStatement	return - 7 ;	643:2:14810:14819	3470154	1	True				
ANR	3470242	UnaryOperationExpression	- 7		3470154	0					
ANR	3470243	UnaryOperator	-		3470154	0					
ANR	3470244	PrimaryExpression	7		3470154	1					
ANR	3470245	ExpressionStatement	indexed = 0xDD + ( 2 - i ) * 0x20	645:1:14825:14856	3470154	6	True				
ANR	3470246	AssignmentExpression	indexed = 0xDD + ( 2 - i ) * 0x20		3470154	0		=			
ANR	3470247	Identifier	indexed		3470154	0					
ANR	3470248	AdditiveExpression	0xDD + ( 2 - i ) * 0x20		3470154	1		+			
ANR	3470249	PrimaryExpression	0xDD		3470154	0					
ANR	3470250	MultiplicativeExpression	( 2 - i ) * 0x20		3470154	1		*			
ANR	3470251	AdditiveExpression	2 - i		3470154	0		-			
ANR	3470252	PrimaryExpression	2		3470154	0					
ANR	3470253	Identifier	i		3470154	1					
ANR	3470254	PrimaryExpression	0x20		3470154	1					
ANR	3470255	ReturnStatement	return 3 ;	646:1:14859:14867	3470154	7	True				
ANR	3470256	PrimaryExpression	3		3470154	0					
ANR	3470257	ReturnType	static int		3470154	1					
ANR	3470258	Identifier	rd_r_rr		3470154	2					
ANR	3470259	ParameterList	const char * * p		3470154	3					
ANR	3470260	Parameter	const char * * p	628:19:14483:14496	3470154	0	True				
ANR	3470261	ParameterType	const char * *		3470154	0					
ANR	3470262	Identifier	p		3470154	1					
ANR	3470263	CFGEntryNode	ENTRY		3470154		True				
ANR	3470264	CFGExitNode	EXIT		3470154		True				
ANR	3470265	Symbol	p		3470154						
ANR	3470266	Symbol	NULL		3470154						
ANR	3470267	Symbol	indexed		3470154						
ANR	3470268	Symbol	indx		3470154						
ANR	3470269	Symbol	i		3470154						
ANR	3470270	Symbol	list		3470154						
ANR	3470271	Symbol	& indexjmp		3470154						
ANR	3470272	Function	rd_hl	650:0:14886:14995							
ANR	3470273	FunctionDef	rd_hl (const char * * p)		3470272	0					
ANR	3470274	CompoundStatement		650:33:14919:14995	3470272	0					
ANR	3470275	IdentifierDeclStatement	"const char * list [ ] = { ""hl"" , NULL } ;"	651:1:14922:14960	3470272	0	True				
ANR	3470276	IdentifierDecl	"* list [ ] = { ""hl"" , NULL }"		3470272	0					
ANR	3470277	IdentifierDeclType	const char * [ ]		3470272	0					
ANR	3470278	Identifier	list		3470272	1					
ANR	3470279	AssignmentExpression	"* list [ ] = { ""hl"" , NULL }"		3470272	2		=			
ANR	3470280	Identifier	list		3470272	0					
ANR	3470281	InitializerList	"""hl"""		3470272	1					
ANR	3470282	PrimaryExpression	"""hl"""		3470272	0					
ANR	3470283	Identifier	NULL		3470272	1					
ANR	3470284	ReturnStatement	"return indx ( p , list , 1 , NULL ) ;"	654:1:14963:14993	3470272	1	True				
ANR	3470285	CallExpression	"indx ( p , list , 1 , NULL )"		3470272	0					
ANR	3470286	Callee	indx		3470272	0					
ANR	3470287	Identifier	indx		3470272	0					
ANR	3470288	ArgumentList	p		3470272	1					
ANR	3470289	Argument	p		3470272	0					
ANR	3470290	Identifier	p		3470272	0					
ANR	3470291	Argument	list		3470272	1					
ANR	3470292	Identifier	list		3470272	0					
ANR	3470293	Argument	1		3470272	2					
ANR	3470294	PrimaryExpression	1		3470272	0					
ANR	3470295	Argument	NULL		3470272	3					
ANR	3470296	Identifier	NULL		3470272	0					
ANR	3470297	ReturnType	static int		3470272	1					
ANR	3470298	Identifier	rd_hl		3470272	2					
ANR	3470299	ParameterList	const char * * p		3470272	3					
ANR	3470300	Parameter	const char * * p	650:17:14903:14916	3470272	0	True				
ANR	3470301	ParameterType	const char * *		3470272	0					
ANR	3470302	Identifier	p		3470272	1					
ANR	3470303	CFGEntryNode	ENTRY		3470272		True				
ANR	3470304	CFGExitNode	EXIT		3470272		True				
ANR	3470305	Symbol	p		3470272						
ANR	3470306	Symbol	NULL		3470272						
ANR	3470307	Symbol	indx		3470272						
ANR	3470308	Symbol	list		3470272						
ANR	3470309	Function	rd_hlx	658:0:15023:15224							
ANR	3470310	FunctionDef	rd_hlx (const char * * p)		3470309	0					
ANR	3470311	CompoundStatement		658:34:15057:15224	3470309	0					
ANR	3470312	IdentifierDeclStatement	int i ;	659:1:15060:15065	3470309	0	True				
ANR	3470313	IdentifierDecl	i		3470309	0					
ANR	3470314	IdentifierDeclType	int		3470309	0					
ANR	3470315	Identifier	i		3470309	1					
ANR	3470316	IdentifierDeclStatement	"const char * list [ ] = { ""hl"" , ""ix"" , ""iy"" , NULL } ;"	660:1:15068:15118	3470309	1	True				
ANR	3470317	IdentifierDecl	"* list [ ] = { ""hl"" , ""ix"" , ""iy"" , NULL }"		3470309	0					
ANR	3470318	IdentifierDeclType	const char * [ ]		3470309	0					
ANR	3470319	Identifier	list		3470309	1					
ANR	3470320	AssignmentExpression	"* list [ ] = { ""hl"" , ""ix"" , ""iy"" , NULL }"		3470309	2		=			
ANR	3470321	Identifier	list		3470309	0					
ANR	3470322	InitializerList	"""hl"""		3470309	1					
ANR	3470323	PrimaryExpression	"""hl"""		3470309	0					
ANR	3470324	PrimaryExpression	"""ix"""		3470309	1					
ANR	3470325	PrimaryExpression	"""iy"""		3470309	2					
ANR	3470326	Identifier	NULL		3470309	3					
ANR	3470327	ExpressionStatement	"i = indx ( p , list , 1 , NULL )"	663:1:15121:15148	3470309	2	True				
ANR	3470328	AssignmentExpression	"i = indx ( p , list , 1 , NULL )"		3470309	0		=			
ANR	3470329	Identifier	i		3470309	0					
ANR	3470330	CallExpression	"indx ( p , list , 1 , NULL )"		3470309	1					
ANR	3470331	Callee	indx		3470309	0					
ANR	3470332	Identifier	indx		3470309	0					
ANR	3470333	ArgumentList	p		3470309	1					
ANR	3470334	Argument	p		3470309	0					
ANR	3470335	Identifier	p		3470309	0					
ANR	3470336	Argument	list		3470309	1					
ANR	3470337	Identifier	list		3470309	0					
ANR	3470338	Argument	1		3470309	2					
ANR	3470339	PrimaryExpression	1		3470309	0					
ANR	3470340	Argument	NULL		3470309	3					
ANR	3470341	Identifier	NULL		3470309	0					
ANR	3470342	IfStatement	if ( i < 2 )		3470309	3					
ANR	3470343	Condition	i < 2	664:5:15155:15159	3470309	0	True				
ANR	3470344	RelationalExpression	i < 2		3470309	0		<			
ANR	3470345	Identifier	i		3470309	0					
ANR	3470346	PrimaryExpression	2		3470309	1					
ANR	3470347	CompoundStatement		7:12:104:104	3470309	1					
ANR	3470348	ReturnStatement	return i ;	665:2:15166:15174	3470309	0	True				
ANR	3470349	Identifier	i		3470309	0					
ANR	3470350	ExpressionStatement	indexed = 0xDD + 0x20 * ( i - 2 )	667:1:15180:15211	3470309	4	True				
ANR	3470351	AssignmentExpression	indexed = 0xDD + 0x20 * ( i - 2 )		3470309	0		=			
ANR	3470352	Identifier	indexed		3470309	0					
ANR	3470353	AdditiveExpression	0xDD + 0x20 * ( i - 2 )		3470309	1		+			
ANR	3470354	PrimaryExpression	0xDD		3470309	0					
ANR	3470355	MultiplicativeExpression	0x20 * ( i - 2 )		3470309	1		*			
ANR	3470356	PrimaryExpression	0x20		3470309	0					
ANR	3470357	AdditiveExpression	i - 2		3470309	1		-			
ANR	3470358	Identifier	i		3470309	0					
ANR	3470359	PrimaryExpression	2		3470309	1					
ANR	3470360	ReturnStatement	return 1 ;	668:1:15214:15222	3470309	5	True				
ANR	3470361	PrimaryExpression	1		3470309	0					
ANR	3470362	ReturnType	static int		3470309	1					
ANR	3470363	Identifier	rd_hlx		3470309	2					
ANR	3470364	ParameterList	const char * * p		3470309	3					
ANR	3470365	Parameter	const char * * p	658:18:15041:15054	3470309	0	True				
ANR	3470366	ParameterType	const char * *		3470309	0					
ANR	3470367	Identifier	p		3470309	1					
ANR	3470368	CFGEntryNode	ENTRY		3470309		True				
ANR	3470369	CFGExitNode	EXIT		3470309		True				
ANR	3470370	Symbol	p		3470309						
ANR	3470371	Symbol	NULL		3470309						
ANR	3470372	Symbol	indexed		3470309						
ANR	3470373	Symbol	indx		3470309						
ANR	3470374	Symbol	i		3470309						
ANR	3470375	Symbol	list		3470309						
ANR	3470376	Function	rd_af_	672:0:15242:15353							
ANR	3470377	FunctionDef	rd_af_ (const char * * p)		3470376	0					
ANR	3470378	CompoundStatement		672:34:15276:15353	3470376	0					
ANR	3470379	IdentifierDeclStatement	"const char * list [ ] = { ""af'"" , NULL } ;"	673:1:15279:15318	3470376	0	True				
ANR	3470380	IdentifierDecl	"* list [ ] = { ""af'"" , NULL }"		3470376	0					
ANR	3470381	IdentifierDeclType	const char * [ ]		3470376	0					
ANR	3470382	Identifier	list		3470376	1					
ANR	3470383	AssignmentExpression	"* list [ ] = { ""af'"" , NULL }"		3470376	2		=			
ANR	3470384	Identifier	list		3470376	0					
ANR	3470385	InitializerList	"""af'"""		3470376	1					
ANR	3470386	PrimaryExpression	"""af'"""		3470376	0					
ANR	3470387	Identifier	NULL		3470376	1					
ANR	3470388	ReturnStatement	"return indx ( p , list , 1 , NULL ) ;"	676:1:15321:15351	3470376	1	True				
ANR	3470389	CallExpression	"indx ( p , list , 1 , NULL )"		3470376	0					
ANR	3470390	Callee	indx		3470376	0					
ANR	3470391	Identifier	indx		3470376	0					
ANR	3470392	ArgumentList	p		3470376	1					
ANR	3470393	Argument	p		3470376	0					
ANR	3470394	Identifier	p		3470376	0					
ANR	3470395	Argument	list		3470376	1					
ANR	3470396	Identifier	list		3470376	0					
ANR	3470397	Argument	1		3470376	2					
ANR	3470398	PrimaryExpression	1		3470376	0					
ANR	3470399	Argument	NULL		3470376	3					
ANR	3470400	Identifier	NULL		3470376	0					
ANR	3470401	ReturnType	static int		3470376	1					
ANR	3470402	Identifier	rd_af_		3470376	2					
ANR	3470403	ParameterList	const char * * p		3470376	3					
ANR	3470404	Parameter	const char * * p	672:18:15260:15273	3470376	0	True				
ANR	3470405	ParameterType	const char * *		3470376	0					
ANR	3470406	Identifier	p		3470376	1					
ANR	3470407	CFGEntryNode	ENTRY		3470376		True				
ANR	3470408	CFGExitNode	EXIT		3470376		True				
ANR	3470409	Symbol	p		3470376						
ANR	3470410	Symbol	NULL		3470376						
ANR	3470411	Symbol	indx		3470376						
ANR	3470412	Symbol	list		3470376						
ANR	3470413	Function	rd_0_2	680:0:15387:15510							
ANR	3470414	FunctionDef	rd_0_2 (const char * * p)		3470413	0					
ANR	3470415	CompoundStatement		680:34:15421:15510	3470413	0					
ANR	3470416	IdentifierDeclStatement	"const char * list [ ] = { ""0"" , """" , ""1"" , ""2"" , NULL } ;"	681:1:15424:15475	3470413	0	True				
ANR	3470417	IdentifierDecl	"* list [ ] = { ""0"" , """" , ""1"" , ""2"" , NULL }"		3470413	0					
ANR	3470418	IdentifierDeclType	const char * [ ]		3470413	0					
ANR	3470419	Identifier	list		3470413	1					
ANR	3470420	AssignmentExpression	"* list [ ] = { ""0"" , """" , ""1"" , ""2"" , NULL }"		3470413	2		=			
ANR	3470421	Identifier	list		3470413	0					
ANR	3470422	InitializerList	"""0"""		3470413	1					
ANR	3470423	PrimaryExpression	"""0"""		3470413	0					
ANR	3470424	PrimaryExpression	""""""		3470413	1					
ANR	3470425	PrimaryExpression	"""1"""		3470413	2					
ANR	3470426	PrimaryExpression	"""2"""		3470413	3					
ANR	3470427	Identifier	NULL		3470413	4					
ANR	3470428	ReturnStatement	"return indx ( p , list , 1 , NULL ) ;"	684:1:15478:15508	3470413	1	True				
ANR	3470429	CallExpression	"indx ( p , list , 1 , NULL )"		3470413	0					
ANR	3470430	Callee	indx		3470413	0					
ANR	3470431	Identifier	indx		3470413	0					
ANR	3470432	ArgumentList	p		3470413	1					
ANR	3470433	Argument	p		3470413	0					
ANR	3470434	Identifier	p		3470413	0					
ANR	3470435	Argument	list		3470413	1					
ANR	3470436	Identifier	list		3470413	0					
ANR	3470437	Argument	1		3470413	2					
ANR	3470438	PrimaryExpression	1		3470413	0					
ANR	3470439	Argument	NULL		3470413	3					
ANR	3470440	Identifier	NULL		3470413	0					
ANR	3470441	ReturnType	static int		3470413	1					
ANR	3470442	Identifier	rd_0_2		3470413	2					
ANR	3470443	ParameterList	const char * * p		3470413	3					
ANR	3470444	Parameter	const char * * p	680:18:15405:15418	3470413	0	True				
ANR	3470445	ParameterType	const char * *		3470413	0					
ANR	3470446	Identifier	p		3470413	1					
ANR	3470447	CFGEntryNode	ENTRY		3470413		True				
ANR	3470448	CFGExitNode	EXIT		3470413		True				
ANR	3470449	Symbol	p		3470413						
ANR	3470450	Symbol	NULL		3470413						
ANR	3470451	Symbol	indx		3470413						
ANR	3470452	Symbol	list		3470413						
ANR	3470453	Function	rd_ld_hl	688:0:15545:15761							
ANR	3470454	FunctionDef	rd_ld_hl (const char * * p)		3470453	0					
ANR	3470455	CompoundStatement		688:36:15581:15761	3470453	0					
ANR	3470456	IdentifierDeclStatement	int i ;	689:1:15584:15589	3470453	0	True				
ANR	3470457	IdentifierDecl	i		3470453	0					
ANR	3470458	IdentifierDeclType	int		3470453	0					
ANR	3470459	Identifier	i		3470453	1					
ANR	3470460	IdentifierDeclStatement	"const char * list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , """" , ""a"" , ""*"" , NULL } ;"	690:1:15592:15668	3470453	1	True				
ANR	3470461	IdentifierDecl	"* list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , """" , ""a"" , ""*"" , NULL }"		3470453	0					
ANR	3470462	IdentifierDeclType	const char * [ ]		3470453	0					
ANR	3470463	Identifier	list		3470453	1					
ANR	3470464	AssignmentExpression	"* list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , """" , ""a"" , ""*"" , NULL }"		3470453	2		=			
ANR	3470465	Identifier	list		3470453	0					
ANR	3470466	InitializerList	"""b"""		3470453	1					
ANR	3470467	PrimaryExpression	"""b"""		3470453	0					
ANR	3470468	PrimaryExpression	"""c"""		3470453	1					
ANR	3470469	PrimaryExpression	"""d"""		3470453	2					
ANR	3470470	PrimaryExpression	"""e"""		3470453	3					
ANR	3470471	PrimaryExpression	"""h"""		3470453	4					
ANR	3470472	PrimaryExpression	"""l"""		3470453	5					
ANR	3470473	PrimaryExpression	""""""		3470453	6					
ANR	3470474	PrimaryExpression	"""a"""		3470453	7					
ANR	3470475	PrimaryExpression	"""*"""		3470453	8					
ANR	3470476	Identifier	NULL		3470453	9					
ANR	3470477	ExpressionStatement	"i = indx ( p , list , 0 , & readbyte )"	693:1:15671:15703	3470453	2	True				
ANR	3470478	AssignmentExpression	"i = indx ( p , list , 0 , & readbyte )"		3470453	0		=			
ANR	3470479	Identifier	i		3470453	0					
ANR	3470480	CallExpression	"indx ( p , list , 0 , & readbyte )"		3470453	1					
ANR	3470481	Callee	indx		3470453	0					
ANR	3470482	Identifier	indx		3470453	0					
ANR	3470483	ArgumentList	p		3470453	1					
ANR	3470484	Argument	p		3470453	0					
ANR	3470485	Identifier	p		3470453	0					
ANR	3470486	Argument	list		3470453	1					
ANR	3470487	Identifier	list		3470453	0					
ANR	3470488	Argument	0		3470453	2					
ANR	3470489	PrimaryExpression	0		3470453	0					
ANR	3470490	Argument	& readbyte		3470453	3					
ANR	3470491	UnaryOperationExpression	& readbyte		3470453	0					
ANR	3470492	UnaryOperator	&		3470453	0					
ANR	3470493	Identifier	readbyte		3470453	1					
ANR	3470494	IfStatement	if ( i < 9 )		3470453	3					
ANR	3470495	Condition	i < 9	694:5:15710:15714	3470453	0	True				
ANR	3470496	RelationalExpression	i < 9		3470453	0		<			
ANR	3470497	Identifier	i		3470453	0					
ANR	3470498	PrimaryExpression	9		3470453	1					
ANR	3470499	CompoundStatement		7:12:135:135	3470453	1					
ANR	3470500	ReturnStatement	return i ;	695:2:15721:15729	3470453	0	True				
ANR	3470501	Identifier	i		3470453	0					
ANR	3470502	ExpressionStatement	writebyte = 1	697:1:15735:15748	3470453	4	True				
ANR	3470503	AssignmentExpression	writebyte = 1		3470453	0		=			
ANR	3470504	Identifier	writebyte		3470453	0					
ANR	3470505	PrimaryExpression	1		3470453	1					
ANR	3470506	ReturnStatement	return 7 ;	698:1:15751:15759	3470453	5	True				
ANR	3470507	PrimaryExpression	7		3470453	0					
ANR	3470508	ReturnType	static int		3470453	1					
ANR	3470509	Identifier	rd_ld_hl		3470453	2					
ANR	3470510	ParameterList	const char * * p		3470453	3					
ANR	3470511	Parameter	const char * * p	688:20:15565:15578	3470453	0	True				
ANR	3470512	ParameterType	const char * *		3470453	0					
ANR	3470513	Identifier	p		3470453	1					
ANR	3470514	CFGEntryNode	ENTRY		3470453		True				
ANR	3470515	CFGExitNode	EXIT		3470453		True				
ANR	3470516	Symbol	p		3470453						
ANR	3470517	Symbol	NULL		3470453						
ANR	3470518	Symbol	writebyte		3470453						
ANR	3470519	Symbol	indx		3470453						
ANR	3470520	Symbol	i		3470453						
ANR	3470521	Symbol	list		3470453						
ANR	3470522	Symbol	& readbyte		3470453						
ANR	3470523	Function	rd_ld_nn	702:0:15798:16070							
ANR	3470524	FunctionDef	rd_ld_nn (const char * * p)		3470523	0					
ANR	3470525	CompoundStatement		702:36:15834:16070	3470523	0					
ANR	3470526	Statement	define	703:1:15837:15842	3470523	0	True				
ANR	3470527	Statement	ld_nnHL	703:8:15844:15850	3470523	1	True				
ANR	3470528	Statement	5	703:16:15852:15852	3470523	2	True				
ANR	3470529	Statement	define	704:1:15855:15860	3470523	3	True				
ANR	3470530	Statement	ld_nnA	704:8:15862:15867	3470523	4	True				
ANR	3470531	Statement	6	704:15:15869:15869	3470523	5	True				
ANR	3470532	IdentifierDeclStatement	int i ;	705:1:15872:15877	3470523	6	True				
ANR	3470533	IdentifierDecl	i		3470523	0					
ANR	3470534	IdentifierDeclType	int		3470523	0					
ANR	3470535	Identifier	i		3470523	1					
ANR	3470536	IdentifierDeclStatement	"const char * list [ ] = { ""bc"" , ""de"" , """" , ""sp"" , ""hl"" , ""a"" , ""ix"" , ""iy"" , NULL } ;"	706:1:15880:15957	3470523	7	True				
ANR	3470537	IdentifierDecl	"* list [ ] = { ""bc"" , ""de"" , """" , ""sp"" , ""hl"" , ""a"" , ""ix"" , ""iy"" , NULL }"		3470523	0					
ANR	3470538	IdentifierDeclType	const char * [ ]		3470523	0					
ANR	3470539	Identifier	list		3470523	1					
ANR	3470540	AssignmentExpression	"* list [ ] = { ""bc"" , ""de"" , """" , ""sp"" , ""hl"" , ""a"" , ""ix"" , ""iy"" , NULL }"		3470523	2		=			
ANR	3470541	Identifier	list		3470523	0					
ANR	3470542	InitializerList	"""bc"""		3470523	1					
ANR	3470543	PrimaryExpression	"""bc"""		3470523	0					
ANR	3470544	PrimaryExpression	"""de"""		3470523	1					
ANR	3470545	PrimaryExpression	""""""		3470523	2					
ANR	3470546	PrimaryExpression	"""sp"""		3470523	3					
ANR	3470547	PrimaryExpression	"""hl"""		3470523	4					
ANR	3470548	PrimaryExpression	"""a"""		3470523	5					
ANR	3470549	PrimaryExpression	"""ix"""		3470523	6					
ANR	3470550	PrimaryExpression	"""iy"""		3470523	7					
ANR	3470551	Identifier	NULL		3470523	8					
ANR	3470552	ExpressionStatement	"i = indx ( p , list , 1 , NULL )"	709:1:15960:15987	3470523	8	True				
ANR	3470553	AssignmentExpression	"i = indx ( p , list , 1 , NULL )"		3470523	0		=			
ANR	3470554	Identifier	i		3470523	0					
ANR	3470555	CallExpression	"indx ( p , list , 1 , NULL )"		3470523	1					
ANR	3470556	Callee	indx		3470523	0					
ANR	3470557	Identifier	indx		3470523	0					
ANR	3470558	ArgumentList	p		3470523	1					
ANR	3470559	Argument	p		3470523	0					
ANR	3470560	Identifier	p		3470523	0					
ANR	3470561	Argument	list		3470523	1					
ANR	3470562	Identifier	list		3470523	0					
ANR	3470563	Argument	1		3470523	2					
ANR	3470564	PrimaryExpression	1		3470523	0					
ANR	3470565	Argument	NULL		3470523	3					
ANR	3470566	Identifier	NULL		3470523	0					
ANR	3470567	IfStatement	if ( i < 7 )		3470523	9					
ANR	3470568	Condition	i < 7	710:5:15994:15998	3470523	0	True				
ANR	3470569	RelationalExpression	i < 7		3470523	0		<			
ANR	3470570	Identifier	i		3470523	0					
ANR	3470571	PrimaryExpression	7		3470523	1					
ANR	3470572	CompoundStatement		9:12:166:166	3470523	1					
ANR	3470573	ReturnStatement	return i ;	711:2:16005:16013	3470523	0	True				
ANR	3470574	Identifier	i		3470523	0					
ANR	3470575	ExpressionStatement	indexed = 0xdd + 0x20 * ( i == 8 )	713:1:16019:16051	3470523	10	True				
ANR	3470576	AssignmentExpression	indexed = 0xdd + 0x20 * ( i == 8 )		3470523	0		=			
ANR	3470577	Identifier	indexed		3470523	0					
ANR	3470578	AdditiveExpression	0xdd + 0x20 * ( i == 8 )		3470523	1		+			
ANR	3470579	PrimaryExpression	0xdd		3470523	0					
ANR	3470580	MultiplicativeExpression	0x20 * ( i == 8 )		3470523	1		*			
ANR	3470581	PrimaryExpression	0x20		3470523	0					
ANR	3470582	EqualityExpression	i == 8		3470523	1		==			
ANR	3470583	Identifier	i		3470523	0					
ANR	3470584	PrimaryExpression	8		3470523	1					
ANR	3470585	ReturnStatement	return ld_nnHL ;	714:1:16054:16068	3470523	11	True				
ANR	3470586	Identifier	ld_nnHL		3470523	0					
ANR	3470587	ReturnType	static int		3470523	1					
ANR	3470588	Identifier	rd_ld_nn		3470523	2					
ANR	3470589	ParameterList	const char * * p		3470523	3					
ANR	3470590	Parameter	const char * * p	702:20:15818:15831	3470523	0	True				
ANR	3470591	ParameterType	const char * *		3470523	0					
ANR	3470592	Identifier	p		3470523	1					
ANR	3470593	CFGEntryNode	ENTRY		3470523		True				
ANR	3470594	CFGExitNode	EXIT		3470523		True				
ANR	3470595	Symbol	p		3470523						
ANR	3470596	Symbol	NULL		3470523						
ANR	3470597	Symbol	indexed		3470523						
ANR	3470598	Symbol	indx		3470523						
ANR	3470599	Symbol	ld_nnHL		3470523						
ANR	3470600	Symbol	i		3470523						
ANR	3470601	Symbol	list		3470523						
ANR	3470602	Function	rd_lda	718:0:16102:16600							
ANR	3470603	FunctionDef	rd_lda (const char * * p)		3470602	0					
ANR	3470604	CompoundStatement		718:34:16136:16600	3470602	0					
ANR	3470605	Statement	define	719:1:16139:16144	3470602	0	True				
ANR	3470606	Statement	A_I	719:8:16146:16148	3470602	1	True				
ANR	3470607	Statement	9	719:12:16150:16150	3470602	2	True				
ANR	3470608	Statement	define	720:1:16153:16158	3470602	3	True				
ANR	3470609	Statement	A_R	720:8:16160:16162	3470602	4	True				
ANR	3470610	Statement	10	720:12:16164:16165	3470602	5	True				
ANR	3470611	Statement	define	721:1:16168:16173	3470602	6	True				
ANR	3470612	Statement	A_NN	721:8:16175:16178	3470602	7	True				
ANR	3470613	Statement	11	721:13:16180:16181	3470602	8	True				
ANR	3470614	IdentifierDeclStatement	int i ;	722:1:16184:16189	3470602	9	True				
ANR	3470615	IdentifierDecl	i		3470602	0					
ANR	3470616	IdentifierDeclType	int		3470602	0					
ANR	3470617	Identifier	i		3470602	1					
ANR	3470618	IdentifierDeclStatement	"const char * list [ ] = { ""( sp )"" , ""( iy +)"" , ""( de )"" , ""( bc )"" , ""( ix +)"" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""i"" , ""r"" , ""(*)"" , ""*"" , NULL } ;"	723:1:16192:16345	3470602	10	True				
ANR	3470619	IdentifierDecl	"* list [ ] = { ""( sp )"" , ""( iy +)"" , ""( de )"" , ""( bc )"" , ""( ix +)"" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""i"" , ""r"" , ""(*)"" , ""*"" , NULL }"		3470602	0					
ANR	3470620	IdentifierDeclType	const char * [ ]		3470602	0					
ANR	3470621	Identifier	list		3470602	1					
ANR	3470622	AssignmentExpression	"* list [ ] = { ""( sp )"" , ""( iy +)"" , ""( de )"" , ""( bc )"" , ""( ix +)"" , ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""i"" , ""r"" , ""(*)"" , ""*"" , NULL }"		3470602	2		=			
ANR	3470623	Identifier	list		3470602	0					
ANR	3470624	InitializerList	"""( sp )"""		3470602	1					
ANR	3470625	PrimaryExpression	"""( sp )"""		3470602	0					
ANR	3470626	PrimaryExpression	"""( iy +)"""		3470602	1					
ANR	3470627	PrimaryExpression	"""( de )"""		3470602	2					
ANR	3470628	PrimaryExpression	"""( bc )"""		3470602	3					
ANR	3470629	PrimaryExpression	"""( ix +)"""		3470602	4					
ANR	3470630	PrimaryExpression	"""b"""		3470602	5					
ANR	3470631	PrimaryExpression	"""c"""		3470602	6					
ANR	3470632	PrimaryExpression	"""d"""		3470602	7					
ANR	3470633	PrimaryExpression	"""e"""		3470602	8					
ANR	3470634	PrimaryExpression	"""h"""		3470602	9					
ANR	3470635	PrimaryExpression	"""l"""		3470602	10					
ANR	3470636	PrimaryExpression	"""( hl )"""		3470602	11					
ANR	3470637	PrimaryExpression	"""a"""		3470602	12					
ANR	3470638	PrimaryExpression	"""i"""		3470602	13					
ANR	3470639	PrimaryExpression	"""r"""		3470602	14					
ANR	3470640	PrimaryExpression	"""(*)"""		3470602	15					
ANR	3470641	PrimaryExpression	"""*"""		3470602	16					
ANR	3470642	Identifier	NULL		3470602	17					
ANR	3470643	IdentifierDeclStatement	const char * nn ;	727:1:16348:16362	3470602	11	True				
ANR	3470644	IdentifierDecl	* nn		3470602	0					
ANR	3470645	IdentifierDeclType	const char *		3470602	0					
ANR	3470646	Identifier	nn		3470602	1					
ANR	3470647	ExpressionStatement	"i = indx ( p , list , 0 , & nn )"	728:1:16365:16391	3470602	12	True				
ANR	3470648	AssignmentExpression	"i = indx ( p , list , 0 , & nn )"		3470602	0		=			
ANR	3470649	Identifier	i		3470602	0					
ANR	3470650	CallExpression	"indx ( p , list , 0 , & nn )"		3470602	1					
ANR	3470651	Callee	indx		3470602	0					
ANR	3470652	Identifier	indx		3470602	0					
ANR	3470653	ArgumentList	p		3470602	1					
ANR	3470654	Argument	p		3470602	0					
ANR	3470655	Identifier	p		3470602	0					
ANR	3470656	Argument	list		3470602	1					
ANR	3470657	Identifier	list		3470602	0					
ANR	3470658	Argument	0		3470602	2					
ANR	3470659	PrimaryExpression	0		3470602	0					
ANR	3470660	Argument	& nn		3470602	3					
ANR	3470661	UnaryOperationExpression	& nn		3470602	0					
ANR	3470662	UnaryOperator	&		3470602	0					
ANR	3470663	Identifier	nn		3470602	1					
ANR	3470664	IfStatement	if ( i == 2 || i == 5 )		3470602	13					
ANR	3470665	Condition	i == 2 || i == 5	729:5:16398:16413	3470602	0	True				
ANR	3470666	OrExpression	i == 2 || i == 5		3470602	0		||			
ANR	3470667	EqualityExpression	i == 2		3470602	0		==			
ANR	3470668	Identifier	i		3470602	0					
ANR	3470669	PrimaryExpression	2		3470602	1					
ANR	3470670	EqualityExpression	i == 5		3470602	1		==			
ANR	3470671	Identifier	i		3470602	0					
ANR	3470672	PrimaryExpression	5		3470602	1					
ANR	3470673	CompoundStatement		12:23:279:279	3470602	1					
ANR	3470674	ExpressionStatement	indexed = ( i == 2 ) ? 0xFD : 0xDD	730:2:16420:16450	3470602	0	True				
ANR	3470675	AssignmentExpression	indexed = ( i == 2 ) ? 0xFD : 0xDD		3470602	0		=			
ANR	3470676	Identifier	indexed		3470602	0					
ANR	3470677	ConditionalExpression	( i == 2 ) ? 0xFD : 0xDD		3470602	1					
ANR	3470678	Condition	i == 2		3470602	0					
ANR	3470679	EqualityExpression	i == 2		3470602	0		==			
ANR	3470680	Identifier	i		3470602	0					
ANR	3470681	PrimaryExpression	2		3470602	1					
ANR	3470682	PrimaryExpression	0xFD		3470602	1					
ANR	3470683	PrimaryExpression	0xDD		3470602	2					
ANR	3470684	ExpressionStatement	indexjmp = nn	731:2:16454:16467	3470602	1	True				
ANR	3470685	AssignmentExpression	indexjmp = nn		3470602	0		=			
ANR	3470686	Identifier	indexjmp		3470602	0					
ANR	3470687	Identifier	nn		3470602	1					
ANR	3470688	ReturnStatement	return 7 ;	732:2:16471:16479	3470602	2	True				
ANR	3470689	PrimaryExpression	7		3470602	0					
ANR	3470690	IfStatement	if ( i == 17 )		3470602	14					
ANR	3470691	Condition	i == 17	734:5:16489:16495	3470602	0	True				
ANR	3470692	EqualityExpression	i == 17		3470602	0		==			
ANR	3470693	Identifier	i		3470602	0					
ANR	3470694	PrimaryExpression	17		3470602	1					
ANR	3470695	CompoundStatement		17:14:361:361	3470602	1					
ANR	3470696	ExpressionStatement	readbyte = nn	735:2:16502:16515	3470602	0	True				
ANR	3470697	AssignmentExpression	readbyte = nn		3470602	0		=			
ANR	3470698	Identifier	readbyte		3470602	0					
ANR	3470699	Identifier	nn		3470602	1					
ANR	3470700	ExpressionStatement	writebyte = 1	736:2:16519:16532	3470602	1	True				
ANR	3470701	AssignmentExpression	writebyte = 1		3470602	0		=			
ANR	3470702	Identifier	writebyte		3470602	0					
ANR	3470703	PrimaryExpression	1		3470602	1					
ANR	3470704	ReturnStatement	return 7 ;	737:2:16536:16544	3470602	2	True				
ANR	3470705	PrimaryExpression	7		3470602	0					
ANR	3470706	IfStatement	if ( i == 16 )		3470602	15					
ANR	3470707	Condition	i == 16	739:5:16554:16560	3470602	0	True				
ANR	3470708	EqualityExpression	i == 16		3470602	0		==			
ANR	3470709	Identifier	i		3470602	0					
ANR	3470710	PrimaryExpression	16		3470602	1					
ANR	3470711	CompoundStatement		22:14:426:426	3470602	1					
ANR	3470712	ExpressionStatement	readword = nn	740:2:16567:16580	3470602	0	True				
ANR	3470713	AssignmentExpression	readword = nn		3470602	0		=			
ANR	3470714	Identifier	readword		3470602	0					
ANR	3470715	Identifier	nn		3470602	1					
ANR	3470716	ReturnStatement	return i - 5 ;	742:1:16586:16598	3470602	16	True				
ANR	3470717	AdditiveExpression	i - 5		3470602	0		-			
ANR	3470718	Identifier	i		3470602	0					
ANR	3470719	PrimaryExpression	5		3470602	1					
ANR	3470720	ReturnType	static int		3470602	1					
ANR	3470721	Identifier	rd_lda		3470602	2					
ANR	3470722	ParameterList	const char * * p		3470602	3					
ANR	3470723	Parameter	const char * * p	718:18:16120:16133	3470602	0	True				
ANR	3470724	ParameterType	const char * *		3470602	0					
ANR	3470725	Identifier	p		3470602	1					
ANR	3470726	CFGEntryNode	ENTRY		3470602		True				
ANR	3470727	CFGExitNode	EXIT		3470602		True				
ANR	3470728	Symbol	p		3470602						
ANR	3470729	Symbol	nn		3470602						
ANR	3470730	Symbol	NULL		3470602						
ANR	3470731	Symbol	writebyte		3470602						
ANR	3470732	Symbol	indexed		3470602						
ANR	3470733	Symbol	indx		3470602						
ANR	3470734	Symbol	i		3470602						
ANR	3470735	Symbol	readword		3470602						
ANR	3470736	Symbol	& nn		3470602						
ANR	3470737	Symbol	list		3470602						
ANR	3470738	Symbol	readbyte		3470602						
ANR	3470739	Symbol	indexjmp		3470602						
ANR	3470740	Function	rd_ldbcdehla	746:0:16641:17309							
ANR	3470741	FunctionDef	rd_ldbcdehla (const char * * p)		3470740	0					
ANR	3470742	CompoundStatement		746:40:16681:17309	3470740	0					
ANR	3470743	IdentifierDeclStatement	int i ;	747:1:16684:16689	3470740	0	True				
ANR	3470744	IdentifierDecl	i		3470740	0					
ANR	3470745	IdentifierDeclType	int		3470740	0					
ANR	3470746	Identifier	i		3470740	1					
ANR	3470747	IdentifierDeclStatement	"const char * list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , ""ixh"" , ""ixl"" , ""iyh"" , ""iyl"" , ""*"" , NULL } ;"	748:1:16692:16826	3470740	1	True				
ANR	3470748	IdentifierDecl	"* list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , ""ixh"" , ""ixl"" , ""iyh"" , ""iyl"" , ""*"" , NULL }"		3470740	0					
ANR	3470749	IdentifierDeclType	const char * [ ]		3470740	0					
ANR	3470750	Identifier	list		3470740	1					
ANR	3470751	AssignmentExpression	"* list [ ] = { ""b"" , ""c"" , ""d"" , ""e"" , ""h"" , ""l"" , ""( hl )"" , ""a"" , ""( ix +)"" , ""( iy +)"" , ""ixh"" , ""ixl"" , ""iyh"" , ""iyl"" , ""*"" , NULL }"		3470740	2		=			
ANR	3470752	Identifier	list		3470740	0					
ANR	3470753	InitializerList	"""b"""		3470740	1					
ANR	3470754	PrimaryExpression	"""b"""		3470740	0					
ANR	3470755	PrimaryExpression	"""c"""		3470740	1					
ANR	3470756	PrimaryExpression	"""d"""		3470740	2					
ANR	3470757	PrimaryExpression	"""e"""		3470740	3					
ANR	3470758	PrimaryExpression	"""h"""		3470740	4					
ANR	3470759	PrimaryExpression	"""l"""		3470740	5					
ANR	3470760	PrimaryExpression	"""( hl )"""		3470740	6					
ANR	3470761	PrimaryExpression	"""a"""		3470740	7					
ANR	3470762	PrimaryExpression	"""( ix +)"""		3470740	8					
ANR	3470763	PrimaryExpression	"""( iy +)"""		3470740	9					
ANR	3470764	PrimaryExpression	"""ixh"""		3470740	10					
ANR	3470765	PrimaryExpression	"""ixl"""		3470740	11					
ANR	3470766	PrimaryExpression	"""iyh"""		3470740	12					
ANR	3470767	PrimaryExpression	"""iyl"""		3470740	13					
ANR	3470768	PrimaryExpression	"""*"""		3470740	14					
ANR	3470769	Identifier	NULL		3470740	15					
ANR	3470770	IdentifierDeclStatement	const char * nn ;	752:1:16829:16843	3470740	2	True				
ANR	3470771	IdentifierDecl	* nn		3470740	0					
ANR	3470772	IdentifierDeclType	const char *		3470740	0					
ANR	3470773	Identifier	nn		3470740	1					
ANR	3470774	ExpressionStatement	"i = indx ( p , list , 0 , & nn )"	753:1:16846:16872	3470740	3	True				
ANR	3470775	AssignmentExpression	"i = indx ( p , list , 0 , & nn )"		3470740	0		=			
ANR	3470776	Identifier	i		3470740	0					
ANR	3470777	CallExpression	"indx ( p , list , 0 , & nn )"		3470740	1					
ANR	3470778	Callee	indx		3470740	0					
ANR	3470779	Identifier	indx		3470740	0					
ANR	3470780	ArgumentList	p		3470740	1					
ANR	3470781	Argument	p		3470740	0					
ANR	3470782	Identifier	p		3470740	0					
ANR	3470783	Argument	list		3470740	1					
ANR	3470784	Identifier	list		3470740	0					
ANR	3470785	Argument	0		3470740	2					
ANR	3470786	PrimaryExpression	0		3470740	0					
ANR	3470787	Argument	& nn		3470740	3					
ANR	3470788	UnaryOperationExpression	& nn		3470740	0					
ANR	3470789	UnaryOperator	&		3470740	0					
ANR	3470790	Identifier	nn		3470740	1					
ANR	3470791	IfStatement	if ( i == 15 )		3470740	4					
ANR	3470792	Condition	i == 15	754:5:16879:16885	3470740	0	True				
ANR	3470793	EqualityExpression	i == 15		3470740	0		==			
ANR	3470794	Identifier	i		3470740	0					
ANR	3470795	PrimaryExpression	15		3470740	1					
ANR	3470796	CompoundStatement		9:14:206:206	3470740	1					
ANR	3470797	ExpressionStatement	readbyte = nn	755:2:16892:16905	3470740	0	True				
ANR	3470798	AssignmentExpression	readbyte = nn		3470740	0		=			
ANR	3470799	Identifier	readbyte		3470740	0					
ANR	3470800	Identifier	nn		3470740	1					
ANR	3470801	ExpressionStatement	writebyte = 1	756:2:16909:16922	3470740	1	True				
ANR	3470802	AssignmentExpression	writebyte = 1		3470740	0		=			
ANR	3470803	Identifier	writebyte		3470740	0					
ANR	3470804	PrimaryExpression	1		3470740	1					
ANR	3470805	ReturnStatement	return 7 ;	757:2:16926:16934	3470740	2	True				
ANR	3470806	PrimaryExpression	7		3470740	0					
ANR	3470807	IfStatement	if ( i > 10 )		3470740	5					
ANR	3470808	Condition	i > 10	759:5:16944:16949	3470740	0	True				
ANR	3470809	RelationalExpression	i > 10		3470740	0		>			
ANR	3470810	Identifier	i		3470740	0					
ANR	3470811	PrimaryExpression	10		3470740	1					
ANR	3470812	CompoundStatement		15:2:274:279	3470740	1					
ANR	3470813	IdentifierDeclStatement	int x ;	760:2:16956:16961	3470740	0	True				
ANR	3470814	IdentifierDecl	x		3470740	0					
ANR	3470815	IdentifierDeclType	int		3470740	0					
ANR	3470816	Identifier	x		3470740	1					
ANR	3470817	ExpressionStatement	x = 0xdd + 0x20 * ( i > 12 )	761:2:16965:16991	3470740	1	True				
ANR	3470818	AssignmentExpression	x = 0xdd + 0x20 * ( i > 12 )		3470740	0		=			
ANR	3470819	Identifier	x		3470740	0					
ANR	3470820	AdditiveExpression	0xdd + 0x20 * ( i > 12 )		3470740	1		+			
ANR	3470821	PrimaryExpression	0xdd		3470740	0					
ANR	3470822	MultiplicativeExpression	0x20 * ( i > 12 )		3470740	1		*			
ANR	3470823	PrimaryExpression	0x20		3470740	0					
ANR	3470824	RelationalExpression	i > 12		3470740	1		>			
ANR	3470825	Identifier	i		3470740	0					
ANR	3470826	PrimaryExpression	12		3470740	1					
ANR	3470827	IfStatement	if ( indexed && indexed != x )		3470740	2					
ANR	3470828	Condition	indexed && indexed != x	762:6:16999:17021	3470740	0	True				
ANR	3470829	AndExpression	indexed && indexed != x		3470740	0		&&			
ANR	3470830	Identifier	indexed		3470740	0					
ANR	3470831	EqualityExpression	indexed != x		3470740	1		!=			
ANR	3470832	Identifier	indexed		3470740	0					
ANR	3470833	Identifier	x		3470740	1					
ANR	3470834	CompoundStatement		17:31:342:342	3470740	1					
ANR	3470835	ExpressionStatement	"eprintf ( ""illegal use of index registers\\n"" )"	763:3:17029:17073	3470740	0	True				
ANR	3470836	CallExpression	"eprintf ( ""illegal use of index registers\\n"" )"		3470740	0					
ANR	3470837	Callee	eprintf		3470740	0					
ANR	3470838	Identifier	eprintf		3470740	0					
ANR	3470839	ArgumentList	"""illegal use of index registers\\n"""		3470740	1					
ANR	3470840	Argument	"""illegal use of index registers\\n"""		3470740	0					
ANR	3470841	PrimaryExpression	"""illegal use of index registers\\n"""		3470740	0					
ANR	3470842	ReturnStatement	return 0 ;	764:3:17078:17086	3470740	1	True				
ANR	3470843	PrimaryExpression	0		3470740	0					
ANR	3470844	ExpressionStatement	indexed = x	766:2:17094:17105	3470740	3	True				
ANR	3470845	AssignmentExpression	indexed = x		3470740	0		=			
ANR	3470846	Identifier	indexed		3470740	0					
ANR	3470847	Identifier	x		3470740	1					
ANR	3470848	ReturnStatement	return 6 - ( i & 1 ) ;	767:2:17109:17127	3470740	4	True				
ANR	3470849	AdditiveExpression	6 - ( i & 1 )		3470740	0		-			
ANR	3470850	PrimaryExpression	6		3470740	0					
ANR	3470851	BitAndExpression	i & 1		3470740	1		&			
ANR	3470852	Identifier	i		3470740	0					
ANR	3470853	PrimaryExpression	1		3470740	1					
ANR	3470854	IfStatement	if ( i > 8 )		3470740	6					
ANR	3470855	Condition	i > 8	769:5:17137:17141	3470740	0	True				
ANR	3470856	RelationalExpression	i > 8		3470740	0		>			
ANR	3470857	Identifier	i		3470740	0					
ANR	3470858	PrimaryExpression	8		3470740	1					
ANR	3470859	CompoundStatement		24:12:462:462	3470740	1					
ANR	3470860	IfStatement	if ( indexed )		3470740	0					
ANR	3470861	Condition	indexed	770:6:17152:17158	3470740	0	True				
ANR	3470862	Identifier	indexed		3470740	0					
ANR	3470863	CompoundStatement		25:15:479:479	3470740	1					
ANR	3470864	ExpressionStatement	"eprintf ( ""illegal use of index registers\\n"" )"	771:3:17166:17210	3470740	0	True				
ANR	3470865	CallExpression	"eprintf ( ""illegal use of index registers\\n"" )"		3470740	0					
ANR	3470866	Callee	eprintf		3470740	0					
ANR	3470867	Identifier	eprintf		3470740	0					
ANR	3470868	ArgumentList	"""illegal use of index registers\\n"""		3470740	1					
ANR	3470869	Argument	"""illegal use of index registers\\n"""		3470740	0					
ANR	3470870	PrimaryExpression	"""illegal use of index registers\\n"""		3470740	0					
ANR	3470871	ReturnStatement	return 0 ;	772:3:17215:17223	3470740	1	True				
ANR	3470872	PrimaryExpression	0		3470740	0					
ANR	3470873	ExpressionStatement	indexed = 0xDD + 0x20 * ( i == 10 )	774:2:17231:17264	3470740	1	True				
ANR	3470874	AssignmentExpression	indexed = 0xDD + 0x20 * ( i == 10 )		3470740	0		=			
ANR	3470875	Identifier	indexed		3470740	0					
ANR	3470876	AdditiveExpression	0xDD + 0x20 * ( i == 10 )		3470740	1		+			
ANR	3470877	PrimaryExpression	0xDD		3470740	0					
ANR	3470878	MultiplicativeExpression	0x20 * ( i == 10 )		3470740	1		*			
ANR	3470879	PrimaryExpression	0x20		3470740	0					
ANR	3470880	EqualityExpression	i == 10		3470740	1		==			
ANR	3470881	Identifier	i		3470740	0					
ANR	3470882	PrimaryExpression	10		3470740	1					
ANR	3470883	ExpressionStatement	indexjmp = nn	775:2:17268:17281	3470740	2	True				
ANR	3470884	AssignmentExpression	indexjmp = nn		3470740	0		=			
ANR	3470885	Identifier	indexjmp		3470740	0					
ANR	3470886	Identifier	nn		3470740	1					
ANR	3470887	ReturnStatement	return 7 ;	776:2:17285:17293	3470740	3	True				
ANR	3470888	PrimaryExpression	7		3470740	0					
ANR	3470889	ReturnStatement	return i ;	778:1:17299:17307	3470740	7	True				
ANR	3470890	Identifier	i		3470740	0					
ANR	3470891	ReturnType	static int		3470740	1					
ANR	3470892	Identifier	rd_ldbcdehla		3470740	2					
ANR	3470893	ParameterList	const char * * p		3470740	3					
ANR	3470894	Parameter	const char * * p	746:24:16665:16678	3470740	0	True				
ANR	3470895	ParameterType	const char * *		3470740	0					
ANR	3470896	Identifier	p		3470740	1					
ANR	3470897	CFGEntryNode	ENTRY		3470740		True				
ANR	3470898	CFGExitNode	EXIT		3470740		True				
ANR	3470899	Symbol	p		3470740						
ANR	3470900	Symbol	nn		3470740						
ANR	3470901	Symbol	NULL		3470740						
ANR	3470902	Symbol	writebyte		3470740						
ANR	3470903	Symbol	indexed		3470740						
ANR	3470904	Symbol	indx		3470740						
ANR	3470905	Symbol	x		3470740						
ANR	3470906	Symbol	i		3470740						
ANR	3470907	Symbol	& nn		3470740						
ANR	3470908	Symbol	list		3470740						
ANR	3470909	Symbol	readbyte		3470740						
ANR	3470910	Symbol	indexjmp		3470740						
ANR	3470911	Function	rd_nn_nn	782:0:17339:17480							
ANR	3470912	FunctionDef	rd_nn_nn (const char * * p)		3470911	0					
ANR	3470913	CompoundStatement		782:36:17375:17480	3470911	0					
ANR	3470914	Statement	define	783:1:17378:17383	3470911	0	True				
ANR	3470915	Statement	_NN	783:8:17385:17387	3470911	1	True				
ANR	3470916	Statement	1	783:12:17389:17389	3470911	2	True				
ANR	3470917	IdentifierDeclStatement	"const char * list [ ] = { ""(*)"" , ""*"" , NULL } ;"	784:1:17392:17436	3470911	3	True				
ANR	3470918	IdentifierDecl	"* list [ ] = { ""(*)"" , ""*"" , NULL }"		3470911	0					
ANR	3470919	IdentifierDeclType	const char * [ ]		3470911	0					
ANR	3470920	Identifier	list		3470911	1					
ANR	3470921	AssignmentExpression	"* list [ ] = { ""(*)"" , ""*"" , NULL }"		3470911	2		=			
ANR	3470922	Identifier	list		3470911	0					
ANR	3470923	InitializerList	"""(*)"""		3470911	1					
ANR	3470924	PrimaryExpression	"""(*)"""		3470911	0					
ANR	3470925	PrimaryExpression	"""*"""		3470911	1					
ANR	3470926	Identifier	NULL		3470911	2					
ANR	3470927	ReturnStatement	"return 2 - indx ( p , list , 0 , & readword ) ;"	787:1:17439:17478	3470911	4	True				
ANR	3470928	AdditiveExpression	"2 - indx ( p , list , 0 , & readword )"		3470911	0		-			
ANR	3470929	PrimaryExpression	2		3470911	0					
ANR	3470930	CallExpression	"indx ( p , list , 0 , & readword )"		3470911	1					
ANR	3470931	Callee	indx		3470911	0					
ANR	3470932	Identifier	indx		3470911	0					
ANR	3470933	ArgumentList	p		3470911	1					
ANR	3470934	Argument	p		3470911	0					
ANR	3470935	Identifier	p		3470911	0					
ANR	3470936	Argument	list		3470911	1					
ANR	3470937	Identifier	list		3470911	0					
ANR	3470938	Argument	0		3470911	2					
ANR	3470939	PrimaryExpression	0		3470911	0					
ANR	3470940	Argument	& readword		3470911	3					
ANR	3470941	UnaryOperationExpression	& readword		3470911	0					
ANR	3470942	UnaryOperator	&		3470911	0					
ANR	3470943	Identifier	readword		3470911	1					
ANR	3470944	ReturnType	static int		3470911	1					
ANR	3470945	Identifier	rd_nn_nn		3470911	2					
ANR	3470946	ParameterList	const char * * p		3470911	3					
ANR	3470947	Parameter	const char * * p	782:20:17359:17372	3470911	0	True				
ANR	3470948	ParameterType	const char * *		3470911	0					
ANR	3470949	Identifier	p		3470911	1					
ANR	3470950	CFGEntryNode	ENTRY		3470911		True				
ANR	3470951	CFGExitNode	EXIT		3470911		True				
ANR	3470952	Symbol	p		3470911						
ANR	3470953	Symbol	NULL		3470911						
ANR	3470954	Symbol	& readword		3470911						
ANR	3470955	Symbol	indx		3470911						
ANR	3470956	Symbol	list		3470911						
ANR	3470957	Function	rd_sp	791:0:17521:17826							
ANR	3470958	FunctionDef	rd_sp (const char * * p)		3470957	0					
ANR	3470959	CompoundStatement		791:33:17554:17826	3470957	0					
ANR	3470960	Statement	define	792:1:17557:17562	3470957	0	True				
ANR	3470961	Statement	SPNN	792:8:17564:17567	3470957	1	True				
ANR	3470962	Statement	0	792:13:17569:17569	3470957	2	True				
ANR	3470963	Statement	define	793:1:17572:17577	3470957	3	True				
ANR	3470964	Statement	SPHL	793:8:17579:17582	3470957	4	True				
ANR	3470965	Statement	1	793:13:17584:17584	3470957	5	True				
ANR	3470966	IdentifierDeclStatement	int i ;	794:1:17587:17592	3470957	6	True				
ANR	3470967	IdentifierDecl	i		3470957	0					
ANR	3470968	IdentifierDeclType	int		3470957	0					
ANR	3470969	Identifier	i		3470957	1					
ANR	3470970	IdentifierDeclStatement	"const char * list [ ] = { ""hl"" , ""ix"" , ""iy"" , ""(*)"" , ""*"" , NULL } ;"	795:1:17595:17657	3470957	7	True				
ANR	3470971	IdentifierDecl	"* list [ ] = { ""hl"" , ""ix"" , ""iy"" , ""(*)"" , ""*"" , NULL }"		3470957	0					
ANR	3470972	IdentifierDeclType	const char * [ ]		3470957	0					
ANR	3470973	Identifier	list		3470957	1					
ANR	3470974	AssignmentExpression	"* list [ ] = { ""hl"" , ""ix"" , ""iy"" , ""(*)"" , ""*"" , NULL }"		3470957	2		=			
ANR	3470975	Identifier	list		3470957	0					
ANR	3470976	InitializerList	"""hl"""		3470957	1					
ANR	3470977	PrimaryExpression	"""hl"""		3470957	0					
ANR	3470978	PrimaryExpression	"""ix"""		3470957	1					
ANR	3470979	PrimaryExpression	"""iy"""		3470957	2					
ANR	3470980	PrimaryExpression	"""(*)"""		3470957	3					
ANR	3470981	PrimaryExpression	"""*"""		3470957	4					
ANR	3470982	Identifier	NULL		3470957	5					
ANR	3470983	IdentifierDeclStatement	const char * nn ;	798:1:17660:17674	3470957	8	True				
ANR	3470984	IdentifierDecl	* nn		3470957	0					
ANR	3470985	IdentifierDeclType	const char *		3470957	0					
ANR	3470986	Identifier	nn		3470957	1					
ANR	3470987	ExpressionStatement	"i = indx ( p , list , 0 , & nn )"	799:1:17677:17703	3470957	9	True				
ANR	3470988	AssignmentExpression	"i = indx ( p , list , 0 , & nn )"		3470957	0		=			
ANR	3470989	Identifier	i		3470957	0					
ANR	3470990	CallExpression	"indx ( p , list , 0 , & nn )"		3470957	1					
ANR	3470991	Callee	indx		3470957	0					
ANR	3470992	Identifier	indx		3470957	0					
ANR	3470993	ArgumentList	p		3470957	1					
ANR	3470994	Argument	p		3470957	0					
ANR	3470995	Identifier	p		3470957	0					
ANR	3470996	Argument	list		3470957	1					
ANR	3470997	Identifier	list		3470957	0					
ANR	3470998	Argument	0		3470957	2					
ANR	3470999	PrimaryExpression	0		3470957	0					
ANR	3471000	Argument	& nn		3470957	3					
ANR	3471001	UnaryOperationExpression	& nn		3470957	0					
ANR	3471002	UnaryOperator	&		3470957	0					
ANR	3471003	Identifier	nn		3470957	1					
ANR	3471004	IfStatement	if ( i > 3 )		3470957	10					
ANR	3471005	Condition	i > 3	800:5:17710:17714	3470957	0	True				
ANR	3471006	RelationalExpression	i > 3		3470957	0		>			
ANR	3471007	Identifier	i		3470957	0					
ANR	3471008	PrimaryExpression	3		3470957	1					
ANR	3471009	CompoundStatement		10:12:162:162	3470957	1					
ANR	3471010	ExpressionStatement	readword = nn	801:2:17721:17734	3470957	0	True				
ANR	3471011	AssignmentExpression	readword = nn		3470957	0		=			
ANR	3471012	Identifier	readword		3470957	0					
ANR	3471013	Identifier	nn		3470957	1					
ANR	3471014	ReturnStatement	return i == 4 ? 2 : 0 ;	802:2:17738:17757	3470957	1	True				
ANR	3471015	ConditionalExpression	i == 4 ? 2 : 0		3470957	0					
ANR	3471016	Condition	i == 4		3470957	0					
ANR	3471017	EqualityExpression	i == 4		3470957	0		==			
ANR	3471018	Identifier	i		3470957	0					
ANR	3471019	PrimaryExpression	4		3470957	1					
ANR	3471020	PrimaryExpression	2		3470957	1					
ANR	3471021	PrimaryExpression	0		3470957	2					
ANR	3471022	IfStatement	if ( i != 1 )		3470957	11					
ANR	3471023	Condition	i != 1	804:5:17767:17772	3470957	0	True				
ANR	3471024	EqualityExpression	i != 1		3470957	0		!=			
ANR	3471025	Identifier	i		3470957	0					
ANR	3471026	PrimaryExpression	1		3470957	1					
ANR	3471027	CompoundStatement		14:13:220:220	3470957	1					
ANR	3471028	ExpressionStatement	indexed = 0xDD + 0x20 * ( i - 2 )	805:2:17779:17810	3470957	0	True				
ANR	3471029	AssignmentExpression	indexed = 0xDD + 0x20 * ( i - 2 )		3470957	0		=			
ANR	3471030	Identifier	indexed		3470957	0					
ANR	3471031	AdditiveExpression	0xDD + 0x20 * ( i - 2 )		3470957	1		+			
ANR	3471032	PrimaryExpression	0xDD		3470957	0					
ANR	3471033	MultiplicativeExpression	0x20 * ( i - 2 )		3470957	1		*			
ANR	3471034	PrimaryExpression	0x20		3470957	0					
ANR	3471035	AdditiveExpression	i - 2		3470957	1		-			
ANR	3471036	Identifier	i		3470957	0					
ANR	3471037	PrimaryExpression	2		3470957	1					
ANR	3471038	ReturnStatement	return 1 ;	807:1:17816:17824	3470957	12	True				
ANR	3471039	PrimaryExpression	1		3470957	0					
ANR	3471040	ReturnType	static int		3470957	1					
ANR	3471041	Identifier	rd_sp		3470957	2					
ANR	3471042	ParameterList	const char * * p		3470957	3					
ANR	3471043	Parameter	const char * * p	791:17:17538:17551	3470957	0	True				
ANR	3471044	ParameterType	const char * *		3470957	0					
ANR	3471045	Identifier	p		3470957	1					
ANR	3471046	CFGEntryNode	ENTRY		3470957		True				
ANR	3471047	CFGExitNode	EXIT		3470957		True				
ANR	3471048	Symbol	p		3470957						
ANR	3471049	Symbol	nn		3470957						
ANR	3471050	Symbol	NULL		3470957						
ANR	3471051	Symbol	indexed		3470957						
ANR	3471052	Symbol	indx		3470957						
ANR	3471053	Symbol	i		3470957						
ANR	3471054	Symbol	readword		3470957						
ANR	3471055	Symbol	& nn		3470957						
ANR	3471056	Symbol	list		3470957						
ANR	3471057	Function	assemble	811:0:17854:29926							
ANR	3471058	FunctionDef	"assemble (const char * str , unsigned char * _obuf)"		3471057	0					
ANR	3471059	CompoundStatement		811:59:17913:29926	3471057	0					
ANR	3471060	IdentifierDeclStatement	"int ifcount = 0 , noifcount = 0 ;"	812:1:17916:17946	3471057	0	True				
ANR	3471061	IdentifierDecl	ifcount = 0		3471057	0					
ANR	3471062	IdentifierDeclType	int		3471057	0					
ANR	3471063	Identifier	ifcount		3471057	1					
ANR	3471064	AssignmentExpression	ifcount = 0		3471057	2		=			
ANR	3471065	Identifier	ifcount		3471057	0					
ANR	3471066	PrimaryExpression	0		3471057	1					
ANR	3471067	IdentifierDecl	noifcount = 0		3471057	1					
ANR	3471068	IdentifierDeclType	int		3471057	0					
ANR	3471069	Identifier	noifcount		3471057	1					
ANR	3471070	AssignmentExpression	noifcount = 0		3471057	2		=			
ANR	3471071	Identifier	noifcount		3471057	0					
ANR	3471072	PrimaryExpression	0		3471057	1					
ANR	3471073	IdentifierDeclStatement	const char * ptr ;	813:1:17949:17964	3471057	1	True				
ANR	3471074	IdentifierDecl	* ptr		3471057	0					
ANR	3471075	IdentifierDeclType	const char *		3471057	0					
ANR	3471076	Identifier	ptr		3471057	1					
ANR	3471077	IdentifierDeclStatement	char * bufptr ;	814:1:17967:17979	3471057	2	True				
ANR	3471078	IdentifierDecl	* bufptr		3471057	0					
ANR	3471079	IdentifierDeclType	char *		3471057	0					
ANR	3471080	Identifier	bufptr		3471057	1					
ANR	3471081	IdentifierDeclStatement	"int r , s ;"	815:1:17982:17990	3471057	3	True				
ANR	3471082	IdentifierDecl	r		3471057	0					
ANR	3471083	IdentifierDeclType	int		3471057	0					
ANR	3471084	Identifier	r		3471057	1					
ANR	3471085	IdentifierDecl	s		3471057	1					
ANR	3471086	IdentifierDeclType	int		3471057	0					
ANR	3471087	Identifier	s		3471057	1					
ANR	3471088	ExpressionStatement	obuflen = 0	817:1:18012:18023	3471057	4	True				
ANR	3471089	AssignmentExpression	obuflen = 0		3471057	0		=			
ANR	3471090	Identifier	obuflen		3471057	0					
ANR	3471091	PrimaryExpression	0		3471057	1					
ANR	3471092	ExpressionStatement	obuf = _obuf	818:1:18026:18038	3471057	5	True				
ANR	3471093	AssignmentExpression	obuf = _obuf		3471057	0		=			
ANR	3471094	Identifier	obuf		3471057	0					
ANR	3471095	Identifier	_obuf		3471057	1					
ANR	3471096	DoStatement	do		3471057	6					
ANR	3471097	CompoundStatement		50:2:1017:1034	3471057	0					
ANR	3471098	IdentifierDeclStatement	"int cmd , cont = 1 ;"	822:2:18156:18173	3471057	0	True				
ANR	3471099	IdentifierDecl	cmd		3471057	0					
ANR	3471100	IdentifierDeclType	int		3471057	0					
ANR	3471101	Identifier	cmd		3471057	1					
ANR	3471102	IdentifierDecl	cont = 1		3471057	1					
ANR	3471103	IdentifierDeclType	int		3471057	0					
ANR	3471104	Identifier	cont		3471057	1					
ANR	3471105	AssignmentExpression	cont = 1		3471057	2		=			
ANR	3471106	Identifier	cont		3471057	0					
ANR	3471107	PrimaryExpression	1		3471057	1					
ANR	3471108	ExpressionStatement	z80buffer = strdup ( str )	824:2:18197:18221	3471057	1	True				
ANR	3471109	AssignmentExpression	z80buffer = strdup ( str )		3471057	0		=			
ANR	3471110	Identifier	z80buffer		3471057	0					
ANR	3471111	CallExpression	strdup ( str )		3471057	1					
ANR	3471112	Callee	strdup		3471057	0					
ANR	3471113	Identifier	strdup		3471057	0					
ANR	3471114	ArgumentList	str		3471057	1					
ANR	3471115	Argument	str		3471057	0					
ANR	3471116	Identifier	str		3471057	0					
ANR	3471117	IfStatement	if ( ! cont )		3471057	2					
ANR	3471118	Condition	! cont	825:6:18229:18233	3471057	0	True				
ANR	3471119	UnaryOperationExpression	! cont		3471057	0					
ANR	3471120	UnaryOperator	!		3471057	0					
ANR	3471121	Identifier	cont		3471057	1					
ANR	3471122	CompoundStatement		15:13:322:322	3471057	1					
ANR	3471123	BreakStatement	break ;	826:3:18241:18246	3471057	0	True				
ANR	3471124	ForStatement	"for ( bufptr = z80buffer ; ( bufptr = strchr ( bufptr , '\\n' ) ) ; )"		3471057	3					
ANR	3471125	ForInit	bufptr = z80buffer ;	830:7:18350:18368	3471057	0	True				
ANR	3471126	AssignmentExpression	bufptr = z80buffer		3471057	0		=			
ANR	3471127	Identifier	bufptr		3471057	0					
ANR	3471128	Identifier	z80buffer		3471057	1					
ANR	3471129	Condition	"bufptr = strchr ( bufptr , '\\n' )"	830:27:18370:18401	3471057	1	True				
ANR	3471130	AssignmentExpression	"bufptr = strchr ( bufptr , '\\n' )"		3471057	0		=			
ANR	3471131	Identifier	bufptr		3471057	0					
ANR	3471132	CallExpression	"strchr ( bufptr , '\\n' )"		3471057	1					
ANR	3471133	Callee	strchr		3471057	0					
ANR	3471134	Identifier	strchr		3471057	0					
ANR	3471135	ArgumentList	bufptr		3471057	1					
ANR	3471136	Argument	bufptr		3471057	0					
ANR	3471137	Identifier	bufptr		3471057	0					
ANR	3471138	Argument	'\\n'		3471057	1					
ANR	3471139	PrimaryExpression	'\\n'		3471057	0					
ANR	3471140	CompoundStatement		20:62:491:491	3471057	2					
ANR	3471141	ExpressionStatement	* bufptr = ' '	831:3:18410:18423	3471057	0	True				
ANR	3471142	AssignmentExpression	* bufptr = ' '		3471057	0		=			
ANR	3471143	UnaryOperationExpression	* bufptr		3471057	0					
ANR	3471144	UnaryOperator	*		3471057	0					
ANR	3471145	Identifier	bufptr		3471057	1					
ANR	3471146	PrimaryExpression	' '		3471057	1					
ANR	3471147	ForStatement	"for ( bufptr = z80buffer ; ( bufptr = strchr ( bufptr , '\\r' ) ) ; )"		3471057	4					
ANR	3471148	ForInit	bufptr = z80buffer ;	833:7:18436:18454	3471057	0	True				
ANR	3471149	AssignmentExpression	bufptr = z80buffer		3471057	0		=			
ANR	3471150	Identifier	bufptr		3471057	0					
ANR	3471151	Identifier	z80buffer		3471057	1					
ANR	3471152	Condition	"bufptr = strchr ( bufptr , '\\r' )"	833:27:18456:18487	3471057	1	True				
ANR	3471153	AssignmentExpression	"bufptr = strchr ( bufptr , '\\r' )"		3471057	0		=			
ANR	3471154	Identifier	bufptr		3471057	0					
ANR	3471155	CallExpression	"strchr ( bufptr , '\\r' )"		3471057	1					
ANR	3471156	Callee	strchr		3471057	0					
ANR	3471157	Identifier	strchr		3471057	0					
ANR	3471158	ArgumentList	bufptr		3471057	1					
ANR	3471159	Argument	bufptr		3471057	0					
ANR	3471160	Identifier	bufptr		3471057	0					
ANR	3471161	Argument	'\\r'		3471057	1					
ANR	3471162	PrimaryExpression	'\\r'		3471057	0					
ANR	3471163	CompoundStatement		23:62:577:577	3471057	2					
ANR	3471164	ExpressionStatement	* bufptr = ' '	834:3:18496:18509	3471057	0	True				
ANR	3471165	AssignmentExpression	* bufptr = ' '		3471057	0		=			
ANR	3471166	UnaryOperationExpression	* bufptr		3471057	0					
ANR	3471167	UnaryOperator	*		3471057	0					
ANR	3471168	Identifier	bufptr		3471057	1					
ANR	3471169	PrimaryExpression	' '		3471057	1					
ANR	3471170	ExpressionStatement	ptr = z80buffer	836:2:18517:18532	3471057	5	True				
ANR	3471171	AssignmentExpression	ptr = z80buffer		3471057	0		=			
ANR	3471172	Identifier	ptr		3471057	0					
ANR	3471173	Identifier	z80buffer		3471057	1					
ANR	3471174	ExpressionStatement	baseaddr = addr	838:2:18559:18574	3471057	6	True				
ANR	3471175	AssignmentExpression	baseaddr = addr		3471057	0		=			
ANR	3471176	Identifier	baseaddr		3471057	0					
ANR	3471177	Identifier	addr		3471057	1					
ANR	3471178	ExpressionStatement	++ stack [ sp ] . line	839:2:18578:18594	3471057	7	True				
ANR	3471179	UnaryExpression	++ stack [ sp ] . line		3471057	0					
ANR	3471180	IncDec	++		3471057	0					
ANR	3471181	MemberAccess	stack [ sp ] . line		3471057	1					
ANR	3471182	ArrayIndexing	stack [ sp ]		3471057	0					
ANR	3471183	Identifier	stack		3471057	0					
ANR	3471184	Identifier	sp		3471057	1					
ANR	3471185	Identifier	line		3471057	1					
ANR	3471186	ExpressionStatement	ptr = delspc ( ptr )	840:2:18598:18616	3471057	8	True				
ANR	3471187	AssignmentExpression	ptr = delspc ( ptr )		3471057	0		=			
ANR	3471188	Identifier	ptr		3471057	0					
ANR	3471189	CallExpression	delspc ( ptr )		3471057	1					
ANR	3471190	Callee	delspc		3471057	0					
ANR	3471191	Identifier	delspc		3471057	0					
ANR	3471192	ArgumentList	ptr		3471057	1					
ANR	3471193	Argument	ptr		3471057	0					
ANR	3471194	Identifier	ptr		3471057	0					
ANR	3471195	IfStatement	if ( ! * ptr )		3471057	9					
ANR	3471196	Condition	! * ptr	841:6:18624:18628	3471057	0	True				
ANR	3471197	UnaryOperationExpression	! * ptr		3471057	0					
ANR	3471198	UnaryOperator	!		3471057	0					
ANR	3471199	UnaryOperationExpression	* ptr		3471057	1					
ANR	3471200	UnaryOperator	*		3471057	0					
ANR	3471201	Identifier	ptr		3471057	1					
ANR	3471202	CompoundStatement		31:13:717:717	3471057	1					
ANR	3471203	ContinueStatement	continue ;	842:3:18636:18644	3471057	0	True				
ANR	3471204	IfStatement	if ( ! noifcount && ! define_macro )		3471057	10					
ANR	3471205	Condition	! noifcount && ! define_macro	844:6:18656:18682	3471057	0	True				
ANR	3471206	AndExpression	! noifcount && ! define_macro		3471057	0		&&			
ANR	3471207	UnaryOperationExpression	! noifcount		3471057	0					
ANR	3471208	UnaryOperator	!		3471057	0					
ANR	3471209	Identifier	noifcount		3471057	1					
ANR	3471210	UnaryOperationExpression	! define_macro		3471057	1					
ANR	3471211	UnaryOperator	!		3471057	0					
ANR	3471212	Identifier	define_macro		3471057	1					
ANR	3471213	CompoundStatement		34:35:771:771	3471057	1					
ANR	3471214	ExpressionStatement	"readlabel ( & ptr , 1 )"	845:3:18690:18709	3471057	0	True				
ANR	3471215	CallExpression	"readlabel ( & ptr , 1 )"		3471057	0					
ANR	3471216	Callee	readlabel		3471057	0					
ANR	3471217	Identifier	readlabel		3471057	0					
ANR	3471218	ArgumentList	& ptr		3471057	1					
ANR	3471219	Argument	& ptr		3471057	0					
ANR	3471220	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471221	UnaryOperator	&		3471057	0					
ANR	3471222	Identifier	ptr		3471057	1					
ANR	3471223	Argument	1		3471057	1					
ANR	3471224	PrimaryExpression	1		3471057	0					
ANR	3471225	ElseStatement	else		3471057	0					
ANR	3471226	CompoundStatement		36:9:806:806	3471057	0					
ANR	3471227	ExpressionStatement	"readlabel ( & ptr , 0 )"	847:3:18725:18744	3471057	0	True				
ANR	3471228	CallExpression	"readlabel ( & ptr , 0 )"		3471057	0					
ANR	3471229	Callee	readlabel		3471057	0					
ANR	3471230	Identifier	readlabel		3471057	0					
ANR	3471231	ArgumentList	& ptr		3471057	1					
ANR	3471232	Argument	& ptr		3471057	0					
ANR	3471233	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471234	UnaryOperator	&		3471057	0					
ANR	3471235	Identifier	ptr		3471057	1					
ANR	3471236	Argument	0		3471057	1					
ANR	3471237	PrimaryExpression	0		3471057	0					
ANR	3471238	ExpressionStatement	ptr = delspc ( ptr )	849:2:18752:18770	3471057	11	True				
ANR	3471239	AssignmentExpression	ptr = delspc ( ptr )		3471057	0		=			
ANR	3471240	Identifier	ptr		3471057	0					
ANR	3471241	CallExpression	delspc ( ptr )		3471057	1					
ANR	3471242	Callee	delspc		3471057	0					
ANR	3471243	Identifier	delspc		3471057	0					
ANR	3471244	ArgumentList	ptr		3471057	1					
ANR	3471245	Argument	ptr		3471057	0					
ANR	3471246	Identifier	ptr		3471057	0					
ANR	3471247	IfStatement	if ( ! * ptr )		3471057	12					
ANR	3471248	Condition	! * ptr	850:6:18778:18782	3471057	0	True				
ANR	3471249	UnaryOperationExpression	! * ptr		3471057	0					
ANR	3471250	UnaryOperator	!		3471057	0					
ANR	3471251	UnaryOperationExpression	* ptr		3471057	1					
ANR	3471252	UnaryOperator	*		3471057	0					
ANR	3471253	Identifier	ptr		3471057	1					
ANR	3471254	CompoundStatement		40:13:871:871	3471057	1					
ANR	3471255	ContinueStatement	continue ;	851:3:18790:18798	3471057	0	True				
ANR	3471256	ExpressionStatement	comma = 0	853:2:18806:18815	3471057	13	True				
ANR	3471257	AssignmentExpression	comma = 0		3471057	0		=			
ANR	3471258	Identifier	comma		3471057	0					
ANR	3471259	PrimaryExpression	0		3471057	1					
ANR	3471260	ExpressionStatement	indexed = 0	854:2:18819:18830	3471057	14	True				
ANR	3471261	AssignmentExpression	indexed = 0		3471057	0		=			
ANR	3471262	Identifier	indexed		3471057	0					
ANR	3471263	PrimaryExpression	0		3471057	1					
ANR	3471264	ExpressionStatement	indexjmp = 0	855:2:18834:18846	3471057	15	True				
ANR	3471265	AssignmentExpression	indexjmp = 0		3471057	0		=			
ANR	3471266	Identifier	indexjmp		3471057	0					
ANR	3471267	PrimaryExpression	0		3471057	1					
ANR	3471268	ExpressionStatement	writebyte = 0	856:2:18850:18863	3471057	16	True				
ANR	3471269	AssignmentExpression	writebyte = 0		3471057	0		=			
ANR	3471270	Identifier	writebyte		3471057	0					
ANR	3471271	PrimaryExpression	0		3471057	1					
ANR	3471272	ExpressionStatement	readbyte = 0	857:2:18867:18879	3471057	17	True				
ANR	3471273	AssignmentExpression	readbyte = 0		3471057	0		=			
ANR	3471274	Identifier	readbyte		3471057	0					
ANR	3471275	PrimaryExpression	0		3471057	1					
ANR	3471276	ExpressionStatement	readword = 0	858:2:18883:18895	3471057	18	True				
ANR	3471277	AssignmentExpression	readword = 0		3471057	0		=			
ANR	3471278	Identifier	readword		3471057	0					
ANR	3471279	PrimaryExpression	0		3471057	1					
ANR	3471280	ExpressionStatement	cmd = readcommand ( & ptr ) - 1	859:2:18899:18927	3471057	19	True				
ANR	3471281	AssignmentExpression	cmd = readcommand ( & ptr ) - 1		3471057	0		=			
ANR	3471282	Identifier	cmd		3471057	0					
ANR	3471283	AdditiveExpression	readcommand ( & ptr ) - 1		3471057	1		-			
ANR	3471284	CallExpression	readcommand ( & ptr )		3471057	0					
ANR	3471285	Callee	readcommand		3471057	0					
ANR	3471286	Identifier	readcommand		3471057	0					
ANR	3471287	ArgumentList	& ptr		3471057	1					
ANR	3471288	Argument	& ptr		3471057	0					
ANR	3471289	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471290	UnaryOperator	&		3471057	0					
ANR	3471291	Identifier	ptr		3471057	1					
ANR	3471292	PrimaryExpression	1		3471057	1					
ANR	3471293	IdentifierDeclStatement	"int i , have_quote ;"	860:2:18931:18948	3471057	20	True				
ANR	3471294	IdentifierDecl	i		3471057	0					
ANR	3471295	IdentifierDeclType	int		3471057	0					
ANR	3471296	Identifier	i		3471057	1					
ANR	3471297	IdentifierDecl	have_quote		3471057	1					
ANR	3471298	IdentifierDeclType	int		3471057	0					
ANR	3471299	Identifier	have_quote		3471057	1					
ANR	3471300	SwitchStatement	switch ( cmd )		3471057	21					
ANR	3471301	Condition	cmd	861:10:18960:18962	3471057	0	True				
ANR	3471302	Identifier	cmd		3471057	0					
ANR	3471303	CompoundStatement		51:15:1051:1051	3471057	1					
ANR	3471304	Label	case Z80_ADC :	862:2:18969:18981	3471057	0	True				
ANR	3471305	Identifier	Z80_ADC		3471057	0					
ANR	3471306	IfStatement	if ( ! ( r = rd_a_hl ( & ptr ) ) )		3471057	1					
ANR	3471307	Condition	! ( r = rd_a_hl ( & ptr ) )	863:7:18990:19010	3471057	0	True				
ANR	3471308	UnaryOperationExpression	! ( r = rd_a_hl ( & ptr ) )		3471057	0					
ANR	3471309	UnaryOperator	!		3471057	0					
ANR	3471310	AssignmentExpression	r = rd_a_hl ( & ptr )		3471057	1		=			
ANR	3471311	Identifier	r		3471057	0					
ANR	3471312	CallExpression	rd_a_hl ( & ptr )		3471057	1					
ANR	3471313	Callee	rd_a_hl		3471057	0					
ANR	3471314	Identifier	rd_a_hl		3471057	0					
ANR	3471315	ArgumentList	& ptr		3471057	1					
ANR	3471316	Argument	& ptr		3471057	0					
ANR	3471317	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471318	UnaryOperator	&		3471057	0					
ANR	3471319	Identifier	ptr		3471057	1					
ANR	3471320	CompoundStatement		53:30:1099:1099	3471057	1					
ANR	3471321	BreakStatement	break ;	864:4:19019:19024	3471057	0	True				
ANR	3471322	IfStatement	if ( r == HL )		3471057	2					
ANR	3471323	Condition	r == HL	866:7:19038:19044	3471057	0	True				
ANR	3471324	EqualityExpression	r == HL		3471057	0		==			
ANR	3471325	Identifier	r		3471057	0					
ANR	3471326	Identifier	HL		3471057	1					
ANR	3471327	CompoundStatement		56:16:1133:1133	3471057	1					
ANR	3471328	IfStatement	if ( ! ( r = rd_rr_ ( & ptr ) ) )		3471057	0					
ANR	3471329	Condition	! ( r = rd_rr_ ( & ptr ) )	867:8:19057:19075	3471057	0	True				
ANR	3471330	UnaryOperationExpression	! ( r = rd_rr_ ( & ptr ) )		3471057	0					
ANR	3471331	UnaryOperator	!		3471057	0					
ANR	3471332	AssignmentExpression	r = rd_rr_ ( & ptr )		3471057	1		=			
ANR	3471333	Identifier	r		3471057	0					
ANR	3471334	CallExpression	rd_rr_ ( & ptr )		3471057	1					
ANR	3471335	Callee	rd_rr_		3471057	0					
ANR	3471336	Identifier	rd_rr_		3471057	0					
ANR	3471337	ArgumentList	& ptr		3471057	1					
ANR	3471338	Argument	& ptr		3471057	0					
ANR	3471339	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471340	UnaryOperator	&		3471057	0					
ANR	3471341	Identifier	ptr		3471057	1					
ANR	3471342	CompoundStatement		57:29:1164:1164	3471057	1					
ANR	3471343	BreakStatement	break ;	868:5:19085:19090	3471057	0	True				
ANR	3471344	ExpressionStatement	wrtb ( 0xED )	870:4:19102:19113	3471057	1	True				
ANR	3471345	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3471346	Callee	wrtb		3471057	0					
ANR	3471347	Identifier	wrtb		3471057	0					
ANR	3471348	ArgumentList	0xED		3471057	1					
ANR	3471349	Argument	0xED		3471057	0					
ANR	3471350	PrimaryExpression	0xED		3471057	0					
ANR	3471351	ExpressionStatement	wrtb ( 0x4A + 0x10 * -- r )	871:4:19119:19143	3471057	2	True				
ANR	3471352	CallExpression	wrtb ( 0x4A + 0x10 * -- r )		3471057	0					
ANR	3471353	Callee	wrtb		3471057	0					
ANR	3471354	Identifier	wrtb		3471057	0					
ANR	3471355	ArgumentList	0x4A + 0x10 * -- r		3471057	1					
ANR	3471356	Argument	0x4A + 0x10 * -- r		3471057	0					
ANR	3471357	AdditiveExpression	0x4A + 0x10 * -- r		3471057	0		+			
ANR	3471358	PrimaryExpression	0x4A		3471057	0					
ANR	3471359	MultiplicativeExpression	0x10 * -- r		3471057	1		*			
ANR	3471360	PrimaryExpression	0x10		3471057	0					
ANR	3471361	UnaryExpression	-- r		3471057	1					
ANR	3471362	IncDec	--		3471057	0					
ANR	3471363	Identifier	r		3471057	1					
ANR	3471364	BreakStatement	break ;	872:4:19149:19154	3471057	3	True				
ANR	3471365	IfStatement	if ( ! ( r = rd_r ( & ptr ) ) )		3471057	3					
ANR	3471366	Condition	! ( r = rd_r ( & ptr ) )	874:7:19168:19185	3471057	0	True				
ANR	3471367	UnaryOperationExpression	! ( r = rd_r ( & ptr ) )		3471057	0					
ANR	3471368	UnaryOperator	!		3471057	0					
ANR	3471369	AssignmentExpression	r = rd_r ( & ptr )		3471057	1		=			
ANR	3471370	Identifier	r		3471057	0					
ANR	3471371	CallExpression	rd_r ( & ptr )		3471057	1					
ANR	3471372	Callee	rd_r		3471057	0					
ANR	3471373	Identifier	rd_r		3471057	0					
ANR	3471374	ArgumentList	& ptr		3471057	1					
ANR	3471375	Argument	& ptr		3471057	0					
ANR	3471376	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471377	UnaryOperator	&		3471057	0					
ANR	3471378	Identifier	ptr		3471057	1					
ANR	3471379	CompoundStatement		64:27:1274:1274	3471057	1					
ANR	3471380	BreakStatement	break ;	875:4:19194:19199	3471057	0	True				
ANR	3471381	ExpressionStatement	wrtb ( 0x88 + -- r )	877:3:19209:19226	3471057	4	True				
ANR	3471382	CallExpression	wrtb ( 0x88 + -- r )		3471057	0					
ANR	3471383	Callee	wrtb		3471057	0					
ANR	3471384	Identifier	wrtb		3471057	0					
ANR	3471385	ArgumentList	0x88 + -- r		3471057	1					
ANR	3471386	Argument	0x88 + -- r		3471057	0					
ANR	3471387	AdditiveExpression	0x88 + -- r		3471057	0		+			
ANR	3471388	PrimaryExpression	0x88		3471057	0					
ANR	3471389	UnaryExpression	-- r		3471057	1					
ANR	3471390	IncDec	--		3471057	0					
ANR	3471391	Identifier	r		3471057	1					
ANR	3471392	BreakStatement	break ;	878:3:19231:19236	3471057	5	True				
ANR	3471393	Label	case Z80_ADD :	879:2:19240:19252	3471057	6	True				
ANR	3471394	Identifier	Z80_ADD		3471057	0					
ANR	3471395	IfStatement	if ( ! ( r = rd_r_add ( & ptr ) ) )		3471057	7					
ANR	3471396	Condition	! ( r = rd_r_add ( & ptr ) )	880:7:19261:19282	3471057	0	True				
ANR	3471397	UnaryOperationExpression	! ( r = rd_r_add ( & ptr ) )		3471057	0					
ANR	3471398	UnaryOperator	!		3471057	0					
ANR	3471399	AssignmentExpression	r = rd_r_add ( & ptr )		3471057	1		=			
ANR	3471400	Identifier	r		3471057	0					
ANR	3471401	CallExpression	rd_r_add ( & ptr )		3471057	1					
ANR	3471402	Callee	rd_r_add		3471057	0					
ANR	3471403	Identifier	rd_r_add		3471057	0					
ANR	3471404	ArgumentList	& ptr		3471057	1					
ANR	3471405	Argument	& ptr		3471057	0					
ANR	3471406	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471407	UnaryOperator	&		3471057	0					
ANR	3471408	Identifier	ptr		3471057	1					
ANR	3471409	CompoundStatement		70:31:1371:1371	3471057	1					
ANR	3471410	BreakStatement	break ;	881:4:19291:19296	3471057	0	True				
ANR	3471411	IfStatement	if ( r == addHL )		3471057	8					
ANR	3471412	Condition	r == addHL	883:7:19310:19319	3471057	0	True				
ANR	3471413	EqualityExpression	r == addHL		3471057	0		==			
ANR	3471414	Identifier	r		3471057	0					
ANR	3471415	Identifier	addHL		3471057	1					
ANR	3471416	CompoundStatement		73:19:1408:1408	3471057	1					
ANR	3471417	IfStatement	if ( ! ( r = rd_rrxx ( & ptr ) ) )		3471057	0					
ANR	3471418	Condition	! ( r = rd_rrxx ( & ptr ) )	884:8:19332:19352	3471057	0	True				
ANR	3471419	UnaryOperationExpression	! ( r = rd_rrxx ( & ptr ) )		3471057	0					
ANR	3471420	UnaryOperator	!		3471057	0					
ANR	3471421	AssignmentExpression	r = rd_rrxx ( & ptr )		3471057	1		=			
ANR	3471422	Identifier	r		3471057	0					
ANR	3471423	CallExpression	rd_rrxx ( & ptr )		3471057	1					
ANR	3471424	Callee	rd_rrxx		3471057	0					
ANR	3471425	Identifier	rd_rrxx		3471057	0					
ANR	3471426	ArgumentList	& ptr		3471057	1					
ANR	3471427	Argument	& ptr		3471057	0					
ANR	3471428	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471429	UnaryOperator	&		3471057	0					
ANR	3471430	Identifier	ptr		3471057	1					
ANR	3471431	CompoundStatement		74:31:1441:1441	3471057	1					
ANR	3471432	BreakStatement	break ;	885:5:19362:19367	3471057	0	True				
ANR	3471433	ExpressionStatement	wrtb ( 0x09 + 0x10 * -- r )	887:4:19379:19403	3471057	1	True				
ANR	3471434	CallExpression	wrtb ( 0x09 + 0x10 * -- r )		3471057	0					
ANR	3471435	Callee	wrtb		3471057	0					
ANR	3471436	Identifier	wrtb		3471057	0					
ANR	3471437	ArgumentList	0x09 + 0x10 * -- r		3471057	1					
ANR	3471438	Argument	0x09 + 0x10 * -- r		3471057	0					
ANR	3471439	AdditiveExpression	0x09 + 0x10 * -- r		3471057	0		+			
ANR	3471440	PrimaryExpression	0x09		3471057	0					
ANR	3471441	MultiplicativeExpression	0x10 * -- r		3471057	1		*			
ANR	3471442	PrimaryExpression	0x10		3471057	0					
ANR	3471443	UnaryExpression	-- r		3471057	1					
ANR	3471444	IncDec	--		3471057	0					
ANR	3471445	Identifier	r		3471057	1					
ANR	3471446	BreakStatement	break ;	888:4:19434:19439	3471057	2	True				
ANR	3471447	IfStatement	if ( has_argument ( & ptr ) )		3471057	9					
ANR	3471448	Condition	has_argument ( & ptr )	890:7:19453:19471	3471057	0	True				
ANR	3471449	CallExpression	has_argument ( & ptr )		3471057	0					
ANR	3471450	Callee	has_argument		3471057	0					
ANR	3471451	Identifier	has_argument		3471057	0					
ANR	3471452	ArgumentList	& ptr		3471057	1					
ANR	3471453	Argument	& ptr		3471057	0					
ANR	3471454	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471455	UnaryOperator	&		3471057	0					
ANR	3471456	Identifier	ptr		3471057	1					
ANR	3471457	CompoundStatement		80:28:1560:1560	3471057	1					
ANR	3471458	IfStatement	if ( r != A )		3471057	0					
ANR	3471459	Condition	r != A	891:8:19484:19489	3471057	0	True				
ANR	3471460	EqualityExpression	r != A		3471057	0		!=			
ANR	3471461	Identifier	r		3471057	0					
ANR	3471462	Identifier	A		3471057	1					
ANR	3471463	CompoundStatement		81:16:1578:1578	3471057	1					
ANR	3471464	ExpressionStatement	"eprintf ( ""parse error before: %s\\n"" , ptr )"	892:5:19499:19540	3471057	0	True				
ANR	3471465	CallExpression	"eprintf ( ""parse error before: %s\\n"" , ptr )"		3471057	0					
ANR	3471466	Callee	eprintf		3471057	0					
ANR	3471467	Identifier	eprintf		3471057	0					
ANR	3471468	ArgumentList	"""parse error before: %s\\n"""		3471057	1					
ANR	3471469	Argument	"""parse error before: %s\\n"""		3471057	0					
ANR	3471470	PrimaryExpression	"""parse error before: %s\\n"""		3471057	0					
ANR	3471471	Argument	ptr		3471057	1					
ANR	3471472	Identifier	ptr		3471057	0					
ANR	3471473	BreakStatement	break ;	893:5:19547:19552	3471057	1	True				
ANR	3471474	IfStatement	if ( ! ( r = rd_r ( & ptr ) ) )		3471057	1					
ANR	3471475	Condition	! ( r = rd_r ( & ptr ) )	895:8:19568:19585	3471057	0	True				
ANR	3471476	UnaryOperationExpression	! ( r = rd_r ( & ptr ) )		3471057	0					
ANR	3471477	UnaryOperator	!		3471057	0					
ANR	3471478	AssignmentExpression	r = rd_r ( & ptr )		3471057	1		=			
ANR	3471479	Identifier	r		3471057	0					
ANR	3471480	CallExpression	rd_r ( & ptr )		3471057	1					
ANR	3471481	Callee	rd_r		3471057	0					
ANR	3471482	Identifier	rd_r		3471057	0					
ANR	3471483	ArgumentList	& ptr		3471057	1					
ANR	3471484	Argument	& ptr		3471057	0					
ANR	3471485	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471486	UnaryOperator	&		3471057	0					
ANR	3471487	Identifier	ptr		3471057	1					
ANR	3471488	CompoundStatement		85:28:1674:1674	3471057	1					
ANR	3471489	BreakStatement	break ;	896:5:19595:19600	3471057	0	True				
ANR	3471490	ExpressionStatement	wrtb ( 0x80 + -- r )	898:4:19612:19629	3471057	2	True				
ANR	3471491	CallExpression	wrtb ( 0x80 + -- r )		3471057	0					
ANR	3471492	Callee	wrtb		3471057	0					
ANR	3471493	Identifier	wrtb		3471057	0					
ANR	3471494	ArgumentList	0x80 + -- r		3471057	1					
ANR	3471495	Argument	0x80 + -- r		3471057	0					
ANR	3471496	AdditiveExpression	0x80 + -- r		3471057	0		+			
ANR	3471497	PrimaryExpression	0x80		3471057	0					
ANR	3471498	UnaryExpression	-- r		3471057	1					
ANR	3471499	IncDec	--		3471057	0					
ANR	3471500	Identifier	r		3471057	1					
ANR	3471501	BreakStatement	break ;	899:4:19651:19656	3471057	3	True				
ANR	3471502	ExpressionStatement	wrtb ( 0x80 + -- r )	901:3:19666:19683	3471057	10	True				
ANR	3471503	CallExpression	wrtb ( 0x80 + -- r )		3471057	0					
ANR	3471504	Callee	wrtb		3471057	0					
ANR	3471505	Identifier	wrtb		3471057	0					
ANR	3471506	ArgumentList	0x80 + -- r		3471057	1					
ANR	3471507	Argument	0x80 + -- r		3471057	0					
ANR	3471508	AdditiveExpression	0x80 + -- r		3471057	0		+			
ANR	3471509	PrimaryExpression	0x80		3471057	0					
ANR	3471510	UnaryExpression	-- r		3471057	1					
ANR	3471511	IncDec	--		3471057	0					
ANR	3471512	Identifier	r		3471057	1					
ANR	3471513	BreakStatement	break ;	902:3:19702:19707	3471057	11	True				
ANR	3471514	Label	case Z80_AND :	903:2:19711:19723	3471057	12	True				
ANR	3471515	Identifier	Z80_AND		3471057	0					
ANR	3471516	IfStatement	if ( ! ( r = rd_r ( & ptr ) ) )		3471057	13					
ANR	3471517	Condition	! ( r = rd_r ( & ptr ) )	904:7:19732:19749	3471057	0	True				
ANR	3471518	UnaryOperationExpression	! ( r = rd_r ( & ptr ) )		3471057	0					
ANR	3471519	UnaryOperator	!		3471057	0					
ANR	3471520	AssignmentExpression	r = rd_r ( & ptr )		3471057	1		=			
ANR	3471521	Identifier	r		3471057	0					
ANR	3471522	CallExpression	rd_r ( & ptr )		3471057	1					
ANR	3471523	Callee	rd_r		3471057	0					
ANR	3471524	Identifier	rd_r		3471057	0					
ANR	3471525	ArgumentList	& ptr		3471057	1					
ANR	3471526	Argument	& ptr		3471057	0					
ANR	3471527	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471528	UnaryOperator	&		3471057	0					
ANR	3471529	Identifier	ptr		3471057	1					
ANR	3471530	CompoundStatement		94:27:1838:1838	3471057	1					
ANR	3471531	BreakStatement	break ;	905:4:19758:19763	3471057	0	True				
ANR	3471532	ExpressionStatement	wrtb ( 0xA0 + -- r )	907:3:19773:19790	3471057	14	True				
ANR	3471533	CallExpression	wrtb ( 0xA0 + -- r )		3471057	0					
ANR	3471534	Callee	wrtb		3471057	0					
ANR	3471535	Identifier	wrtb		3471057	0					
ANR	3471536	ArgumentList	0xA0 + -- r		3471057	1					
ANR	3471537	Argument	0xA0 + -- r		3471057	0					
ANR	3471538	AdditiveExpression	0xA0 + -- r		3471057	0		+			
ANR	3471539	PrimaryExpression	0xA0		3471057	0					
ANR	3471540	UnaryExpression	-- r		3471057	1					
ANR	3471541	IncDec	--		3471057	0					
ANR	3471542	Identifier	r		3471057	1					
ANR	3471543	BreakStatement	break ;	908:3:19795:19800	3471057	15	True				
ANR	3471544	Label	case Z80_BIT :	909:2:19804:19816	3471057	16	True				
ANR	3471545	Identifier	Z80_BIT		3471057	0					
ANR	3471546	IfStatement	if ( ! rd_0_7 ( & ptr ) )		3471057	17					
ANR	3471547	Condition	! rd_0_7 ( & ptr )	910:7:19825:19838	3471057	0	True				
ANR	3471548	UnaryOperationExpression	! rd_0_7 ( & ptr )		3471057	0					
ANR	3471549	UnaryOperator	!		3471057	0					
ANR	3471550	CallExpression	rd_0_7 ( & ptr )		3471057	1					
ANR	3471551	Callee	rd_0_7		3471057	0					
ANR	3471552	Identifier	rd_0_7		3471057	0					
ANR	3471553	ArgumentList	& ptr		3471057	1					
ANR	3471554	Argument	& ptr		3471057	0					
ANR	3471555	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471556	UnaryOperator	&		3471057	0					
ANR	3471557	Identifier	ptr		3471057	1					
ANR	3471558	CompoundStatement		100:23:1927:1927	3471057	1					
ANR	3471559	BreakStatement	break ;	911:4:19847:19852	3471057	0	True				
ANR	3471560	ExpressionStatement	rd_comma ( & ptr )	913:3:19862:19877	3471057	18	True				
ANR	3471561	CallExpression	rd_comma ( & ptr )		3471057	0					
ANR	3471562	Callee	rd_comma		3471057	0					
ANR	3471563	Identifier	rd_comma		3471057	0					
ANR	3471564	ArgumentList	& ptr		3471057	1					
ANR	3471565	Argument	& ptr		3471057	0					
ANR	3471566	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471567	UnaryOperator	&		3471057	0					
ANR	3471568	Identifier	ptr		3471057	1					
ANR	3471569	IfStatement	if ( ! ( r = rd_r_ ( & ptr ) ) )		3471057	19					
ANR	3471570	Condition	! ( r = rd_r_ ( & ptr ) )	914:7:19886:19903	3471057	0	True				
ANR	3471571	UnaryOperationExpression	! ( r = rd_r_ ( & ptr ) )		3471057	0					
ANR	3471572	UnaryOperator	!		3471057	0					
ANR	3471573	AssignmentExpression	r = rd_r_ ( & ptr )		3471057	1		=			
ANR	3471574	Identifier	r		3471057	0					
ANR	3471575	CallExpression	rd_r_ ( & ptr )		3471057	1					
ANR	3471576	Callee	rd_r_		3471057	0					
ANR	3471577	Identifier	rd_r_		3471057	0					
ANR	3471578	ArgumentList	& ptr		3471057	1					
ANR	3471579	Argument	& ptr		3471057	0					
ANR	3471580	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471581	UnaryOperator	&		3471057	0					
ANR	3471582	Identifier	ptr		3471057	1					
ANR	3471583	CompoundStatement		104:27:1992:1992	3471057	1					
ANR	3471584	BreakStatement	break ;	915:4:19912:19917	3471057	0	True				
ANR	3471585	ExpressionStatement	wrtb ( 0xCB )	917:3:19927:19938	3471057	20	True				
ANR	3471586	CallExpression	wrtb ( 0xCB )		3471057	0					
ANR	3471587	Callee	wrtb		3471057	0					
ANR	3471588	Identifier	wrtb		3471057	0					
ANR	3471589	ArgumentList	0xCB		3471057	1					
ANR	3471590	Argument	0xCB		3471057	0					
ANR	3471591	PrimaryExpression	0xCB		3471057	0					
ANR	3471592	ExpressionStatement	wrtb ( 0x40 + ( r - 1 ) )	918:3:19943:19964	3471057	21	True				
ANR	3471593	CallExpression	wrtb ( 0x40 + ( r - 1 ) )		3471057	0					
ANR	3471594	Callee	wrtb		3471057	0					
ANR	3471595	Identifier	wrtb		3471057	0					
ANR	3471596	ArgumentList	0x40 + ( r - 1 )		3471057	1					
ANR	3471597	Argument	0x40 + ( r - 1 )		3471057	0					
ANR	3471598	AdditiveExpression	0x40 + ( r - 1 )		3471057	0		+			
ANR	3471599	PrimaryExpression	0x40		3471057	0					
ANR	3471600	AdditiveExpression	r - 1		3471057	1		-			
ANR	3471601	Identifier	r		3471057	0					
ANR	3471602	PrimaryExpression	1		3471057	1					
ANR	3471603	BreakStatement	break ;	919:3:19969:19974	3471057	22	True				
ANR	3471604	Label	case Z80_CALL :	920:2:19978:19991	3471057	23	True				
ANR	3471605	Identifier	Z80_CALL		3471057	0					
ANR	3471606	IfStatement	if ( ( r = rd_cc ( & ptr ) ) )		3471057	24					
ANR	3471607	Condition	r = rd_cc ( & ptr )	921:7:20000:20017	3471057	0	True				
ANR	3471608	AssignmentExpression	r = rd_cc ( & ptr )		3471057	0		=			
ANR	3471609	Identifier	r		3471057	0					
ANR	3471610	CallExpression	rd_cc ( & ptr )		3471057	1					
ANR	3471611	Callee	rd_cc		3471057	0					
ANR	3471612	Identifier	rd_cc		3471057	0					
ANR	3471613	ArgumentList	& ptr		3471057	1					
ANR	3471614	Argument	& ptr		3471057	0					
ANR	3471615	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471616	UnaryOperator	&		3471057	0					
ANR	3471617	Identifier	ptr		3471057	1					
ANR	3471618	CompoundStatement		111:27:2106:2106	3471057	1					
ANR	3471619	ExpressionStatement	wrtb ( 0xC4 + 8 * -- r )	922:4:20026:20047	3471057	0	True				
ANR	3471620	CallExpression	wrtb ( 0xC4 + 8 * -- r )		3471057	0					
ANR	3471621	Callee	wrtb		3471057	0					
ANR	3471622	Identifier	wrtb		3471057	0					
ANR	3471623	ArgumentList	0xC4 + 8 * -- r		3471057	1					
ANR	3471624	Argument	0xC4 + 8 * -- r		3471057	0					
ANR	3471625	AdditiveExpression	0xC4 + 8 * -- r		3471057	0		+			
ANR	3471626	PrimaryExpression	0xC4		3471057	0					
ANR	3471627	MultiplicativeExpression	8 * -- r		3471057	1		*			
ANR	3471628	PrimaryExpression	8		3471057	0					
ANR	3471629	UnaryExpression	-- r		3471057	1					
ANR	3471630	IncDec	--		3471057	0					
ANR	3471631	Identifier	r		3471057	1					
ANR	3471632	ExpressionStatement	rd_comma ( & ptr )	923:4:20053:20068	3471057	1	True				
ANR	3471633	CallExpression	rd_comma ( & ptr )		3471057	0					
ANR	3471634	Callee	rd_comma		3471057	0					
ANR	3471635	Identifier	rd_comma		3471057	0					
ANR	3471636	ArgumentList	& ptr		3471057	1					
ANR	3471637	Argument	& ptr		3471057	0					
ANR	3471638	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471639	UnaryOperator	&		3471057	0					
ANR	3471640	Identifier	ptr		3471057	1					
ANR	3471641	ElseStatement	else		3471057	0					
ANR	3471642	CompoundStatement		114:10:2166:2166	3471057	0					
ANR	3471643	ExpressionStatement	wrtb ( 0xCD )	925:4:20086:20097	3471057	0	True				
ANR	3471644	CallExpression	wrtb ( 0xCD )		3471057	0					
ANR	3471645	Callee	wrtb		3471057	0					
ANR	3471646	Identifier	wrtb		3471057	0					
ANR	3471647	ArgumentList	0xCD		3471057	1					
ANR	3471648	Argument	0xCD		3471057	0					
ANR	3471649	PrimaryExpression	0xCD		3471057	0					
ANR	3471650	BreakStatement	break ;	927:3:20107:20112	3471057	25	True				
ANR	3471651	Label	case Z80_CCF :	928:2:20116:20128	3471057	26	True				
ANR	3471652	Identifier	Z80_CCF		3471057	0					
ANR	3471653	ExpressionStatement	wrtb ( 0x3F )	929:3:20133:20144	3471057	27	True				
ANR	3471654	CallExpression	wrtb ( 0x3F )		3471057	0					
ANR	3471655	Callee	wrtb		3471057	0					
ANR	3471656	Identifier	wrtb		3471057	0					
ANR	3471657	ArgumentList	0x3F		3471057	1					
ANR	3471658	Argument	0x3F		3471057	0					
ANR	3471659	PrimaryExpression	0x3F		3471057	0					
ANR	3471660	BreakStatement	break ;	930:3:20149:20154	3471057	28	True				
ANR	3471661	Label	case Z80_CP :	931:2:20158:20169	3471057	29	True				
ANR	3471662	Identifier	Z80_CP		3471057	0					
ANR	3471663	IfStatement	if ( ! ( r = rd_r ( & ptr ) ) )		3471057	30					
ANR	3471664	Condition	! ( r = rd_r ( & ptr ) )	932:7:20178:20195	3471057	0	True				
ANR	3471665	UnaryOperationExpression	! ( r = rd_r ( & ptr ) )		3471057	0					
ANR	3471666	UnaryOperator	!		3471057	0					
ANR	3471667	AssignmentExpression	r = rd_r ( & ptr )		3471057	1		=			
ANR	3471668	Identifier	r		3471057	0					
ANR	3471669	CallExpression	rd_r ( & ptr )		3471057	1					
ANR	3471670	Callee	rd_r		3471057	0					
ANR	3471671	Identifier	rd_r		3471057	0					
ANR	3471672	ArgumentList	& ptr		3471057	1					
ANR	3471673	Argument	& ptr		3471057	0					
ANR	3471674	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471675	UnaryOperator	&		3471057	0					
ANR	3471676	Identifier	ptr		3471057	1					
ANR	3471677	CompoundStatement		122:27:2284:2284	3471057	1					
ANR	3471678	BreakStatement	break ;	933:4:20204:20209	3471057	0	True				
ANR	3471679	ExpressionStatement	wrtb ( 0xB8 + -- r )	935:3:20219:20236	3471057	31	True				
ANR	3471680	CallExpression	wrtb ( 0xB8 + -- r )		3471057	0					
ANR	3471681	Callee	wrtb		3471057	0					
ANR	3471682	Identifier	wrtb		3471057	0					
ANR	3471683	ArgumentList	0xB8 + -- r		3471057	1					
ANR	3471684	Argument	0xB8 + -- r		3471057	0					
ANR	3471685	AdditiveExpression	0xB8 + -- r		3471057	0		+			
ANR	3471686	PrimaryExpression	0xB8		3471057	0					
ANR	3471687	UnaryExpression	-- r		3471057	1					
ANR	3471688	IncDec	--		3471057	0					
ANR	3471689	Identifier	r		3471057	1					
ANR	3471690	BreakStatement	break ;	936:3:20241:20246	3471057	32	True				
ANR	3471691	Label	case Z80_CPD :	937:2:20250:20262	3471057	33	True				
ANR	3471692	Identifier	Z80_CPD		3471057	0					
ANR	3471693	ExpressionStatement	wrtb ( 0xED )	938:3:20267:20278	3471057	34	True				
ANR	3471694	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3471695	Callee	wrtb		3471057	0					
ANR	3471696	Identifier	wrtb		3471057	0					
ANR	3471697	ArgumentList	0xED		3471057	1					
ANR	3471698	Argument	0xED		3471057	0					
ANR	3471699	PrimaryExpression	0xED		3471057	0					
ANR	3471700	ExpressionStatement	wrtb ( 0xA9 )	939:3:20283:20294	3471057	35	True				
ANR	3471701	CallExpression	wrtb ( 0xA9 )		3471057	0					
ANR	3471702	Callee	wrtb		3471057	0					
ANR	3471703	Identifier	wrtb		3471057	0					
ANR	3471704	ArgumentList	0xA9		3471057	1					
ANR	3471705	Argument	0xA9		3471057	0					
ANR	3471706	PrimaryExpression	0xA9		3471057	0					
ANR	3471707	BreakStatement	break ;	940:3:20299:20304	3471057	36	True				
ANR	3471708	Label	case Z80_CPDR :	941:2:20308:20321	3471057	37	True				
ANR	3471709	Identifier	Z80_CPDR		3471057	0					
ANR	3471710	ExpressionStatement	wrtb ( 0xED )	942:3:20326:20337	3471057	38	True				
ANR	3471711	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3471712	Callee	wrtb		3471057	0					
ANR	3471713	Identifier	wrtb		3471057	0					
ANR	3471714	ArgumentList	0xED		3471057	1					
ANR	3471715	Argument	0xED		3471057	0					
ANR	3471716	PrimaryExpression	0xED		3471057	0					
ANR	3471717	ExpressionStatement	wrtb ( 0xB9 )	943:3:20342:20353	3471057	39	True				
ANR	3471718	CallExpression	wrtb ( 0xB9 )		3471057	0					
ANR	3471719	Callee	wrtb		3471057	0					
ANR	3471720	Identifier	wrtb		3471057	0					
ANR	3471721	ArgumentList	0xB9		3471057	1					
ANR	3471722	Argument	0xB9		3471057	0					
ANR	3471723	PrimaryExpression	0xB9		3471057	0					
ANR	3471724	BreakStatement	break ;	944:3:20358:20363	3471057	40	True				
ANR	3471725	Label	case Z80_CPI :	945:2:20367:20379	3471057	41	True				
ANR	3471726	Identifier	Z80_CPI		3471057	0					
ANR	3471727	ExpressionStatement	wrtb ( 0xED )	946:3:20384:20395	3471057	42	True				
ANR	3471728	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3471729	Callee	wrtb		3471057	0					
ANR	3471730	Identifier	wrtb		3471057	0					
ANR	3471731	ArgumentList	0xED		3471057	1					
ANR	3471732	Argument	0xED		3471057	0					
ANR	3471733	PrimaryExpression	0xED		3471057	0					
ANR	3471734	ExpressionStatement	wrtb ( 0xA1 )	947:3:20400:20411	3471057	43	True				
ANR	3471735	CallExpression	wrtb ( 0xA1 )		3471057	0					
ANR	3471736	Callee	wrtb		3471057	0					
ANR	3471737	Identifier	wrtb		3471057	0					
ANR	3471738	ArgumentList	0xA1		3471057	1					
ANR	3471739	Argument	0xA1		3471057	0					
ANR	3471740	PrimaryExpression	0xA1		3471057	0					
ANR	3471741	BreakStatement	break ;	948:3:20416:20421	3471057	44	True				
ANR	3471742	Label	case Z80_CPIR :	949:2:20425:20438	3471057	45	True				
ANR	3471743	Identifier	Z80_CPIR		3471057	0					
ANR	3471744	ExpressionStatement	wrtb ( 0xED )	950:3:20443:20454	3471057	46	True				
ANR	3471745	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3471746	Callee	wrtb		3471057	0					
ANR	3471747	Identifier	wrtb		3471057	0					
ANR	3471748	ArgumentList	0xED		3471057	1					
ANR	3471749	Argument	0xED		3471057	0					
ANR	3471750	PrimaryExpression	0xED		3471057	0					
ANR	3471751	ExpressionStatement	wrtb ( 0xB1 )	951:3:20459:20470	3471057	47	True				
ANR	3471752	CallExpression	wrtb ( 0xB1 )		3471057	0					
ANR	3471753	Callee	wrtb		3471057	0					
ANR	3471754	Identifier	wrtb		3471057	0					
ANR	3471755	ArgumentList	0xB1		3471057	1					
ANR	3471756	Argument	0xB1		3471057	0					
ANR	3471757	PrimaryExpression	0xB1		3471057	0					
ANR	3471758	BreakStatement	break ;	952:3:20475:20480	3471057	48	True				
ANR	3471759	Label	case Z80_CPL :	953:2:20484:20496	3471057	49	True				
ANR	3471760	Identifier	Z80_CPL		3471057	0					
ANR	3471761	ExpressionStatement	wrtb ( 0x2F )	954:3:20501:20512	3471057	50	True				
ANR	3471762	CallExpression	wrtb ( 0x2F )		3471057	0					
ANR	3471763	Callee	wrtb		3471057	0					
ANR	3471764	Identifier	wrtb		3471057	0					
ANR	3471765	ArgumentList	0x2F		3471057	1					
ANR	3471766	Argument	0x2F		3471057	0					
ANR	3471767	PrimaryExpression	0x2F		3471057	0					
ANR	3471768	BreakStatement	break ;	955:3:20517:20522	3471057	51	True				
ANR	3471769	Label	case Z80_DAA :	956:2:20526:20538	3471057	52	True				
ANR	3471770	Identifier	Z80_DAA		3471057	0					
ANR	3471771	ExpressionStatement	wrtb ( 0x27 )	957:3:20543:20554	3471057	53	True				
ANR	3471772	CallExpression	wrtb ( 0x27 )		3471057	0					
ANR	3471773	Callee	wrtb		3471057	0					
ANR	3471774	Identifier	wrtb		3471057	0					
ANR	3471775	ArgumentList	0x27		3471057	1					
ANR	3471776	Argument	0x27		3471057	0					
ANR	3471777	PrimaryExpression	0x27		3471057	0					
ANR	3471778	BreakStatement	break ;	958:3:20559:20564	3471057	54	True				
ANR	3471779	Label	case Z80_DEC :	959:2:20568:20580	3471057	55	True				
ANR	3471780	Identifier	Z80_DEC		3471057	0					
ANR	3471781	IfStatement	if ( ! ( r = rd_r_rr ( & ptr ) ) )		3471057	56					
ANR	3471782	Condition	! ( r = rd_r_rr ( & ptr ) )	960:7:20589:20609	3471057	0	True				
ANR	3471783	UnaryOperationExpression	! ( r = rd_r_rr ( & ptr ) )		3471057	0					
ANR	3471784	UnaryOperator	!		3471057	0					
ANR	3471785	AssignmentExpression	r = rd_r_rr ( & ptr )		3471057	1		=			
ANR	3471786	Identifier	r		3471057	0					
ANR	3471787	CallExpression	rd_r_rr ( & ptr )		3471057	1					
ANR	3471788	Callee	rd_r_rr		3471057	0					
ANR	3471789	Identifier	rd_r_rr		3471057	0					
ANR	3471790	ArgumentList	& ptr		3471057	1					
ANR	3471791	Argument	& ptr		3471057	0					
ANR	3471792	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471793	UnaryOperator	&		3471057	0					
ANR	3471794	Identifier	ptr		3471057	1					
ANR	3471795	CompoundStatement		150:30:2698:2698	3471057	1					
ANR	3471796	BreakStatement	break ;	961:4:20618:20623	3471057	0	True				
ANR	3471797	IfStatement	if ( r < 0 )		3471057	57					
ANR	3471798	Condition	r < 0	963:7:20637:20641	3471057	0	True				
ANR	3471799	RelationalExpression	r < 0		3471057	0		<			
ANR	3471800	Identifier	r		3471057	0					
ANR	3471801	PrimaryExpression	0		3471057	1					
ANR	3471802	CompoundStatement		153:14:2730:2730	3471057	1					
ANR	3471803	ExpressionStatement	wrtb ( 0x05 - 8 * ++ r )	964:4:20650:20671	3471057	0	True				
ANR	3471804	CallExpression	wrtb ( 0x05 - 8 * ++ r )		3471057	0					
ANR	3471805	Callee	wrtb		3471057	0					
ANR	3471806	Identifier	wrtb		3471057	0					
ANR	3471807	ArgumentList	0x05 - 8 * ++ r		3471057	1					
ANR	3471808	Argument	0x05 - 8 * ++ r		3471057	0					
ANR	3471809	AdditiveExpression	0x05 - 8 * ++ r		3471057	0		-			
ANR	3471810	PrimaryExpression	0x05		3471057	0					
ANR	3471811	MultiplicativeExpression	8 * ++ r		3471057	1		*			
ANR	3471812	PrimaryExpression	8		3471057	0					
ANR	3471813	UnaryExpression	++ r		3471057	1					
ANR	3471814	IncDec	++		3471057	0					
ANR	3471815	Identifier	r		3471057	1					
ANR	3471816	BreakStatement	break ;	965:4:20677:20682	3471057	1	True				
ANR	3471817	ExpressionStatement	wrtb ( 0x0B + 0x10 * -- r )	967:3:20692:20716	3471057	58	True				
ANR	3471818	CallExpression	wrtb ( 0x0B + 0x10 * -- r )		3471057	0					
ANR	3471819	Callee	wrtb		3471057	0					
ANR	3471820	Identifier	wrtb		3471057	0					
ANR	3471821	ArgumentList	0x0B + 0x10 * -- r		3471057	1					
ANR	3471822	Argument	0x0B + 0x10 * -- r		3471057	0					
ANR	3471823	AdditiveExpression	0x0B + 0x10 * -- r		3471057	0		+			
ANR	3471824	PrimaryExpression	0x0B		3471057	0					
ANR	3471825	MultiplicativeExpression	0x10 * -- r		3471057	1		*			
ANR	3471826	PrimaryExpression	0x10		3471057	0					
ANR	3471827	UnaryExpression	-- r		3471057	1					
ANR	3471828	IncDec	--		3471057	0					
ANR	3471829	Identifier	r		3471057	1					
ANR	3471830	BreakStatement	break ;	968:3:20721:20726	3471057	59	True				
ANR	3471831	Label	case Z80_DI :	969:2:20730:20741	3471057	60	True				
ANR	3471832	Identifier	Z80_DI		3471057	0					
ANR	3471833	ExpressionStatement	wrtb ( 0xF3 )	970:3:20746:20757	3471057	61	True				
ANR	3471834	CallExpression	wrtb ( 0xF3 )		3471057	0					
ANR	3471835	Callee	wrtb		3471057	0					
ANR	3471836	Identifier	wrtb		3471057	0					
ANR	3471837	ArgumentList	0xF3		3471057	1					
ANR	3471838	Argument	0xF3		3471057	0					
ANR	3471839	PrimaryExpression	0xF3		3471057	0					
ANR	3471840	BreakStatement	break ;	971:3:20762:20767	3471057	62	True				
ANR	3471841	Label	case Z80_DJNZ :	972:2:20771:20784	3471057	63	True				
ANR	3471842	Identifier	Z80_DJNZ		3471057	0					
ANR	3471843	ExpressionStatement	wrtb ( 0x10 )	973:3:20789:20800	3471057	64	True				
ANR	3471844	CallExpression	wrtb ( 0x10 )		3471057	0					
ANR	3471845	Callee	wrtb		3471057	0					
ANR	3471846	Identifier	wrtb		3471057	0					
ANR	3471847	ArgumentList	0x10		3471057	1					
ANR	3471848	Argument	0x10		3471057	0					
ANR	3471849	PrimaryExpression	0x10		3471057	0					
ANR	3471850	BreakStatement	break ;	975:3:20835:20840	3471057	65	True				
ANR	3471851	Label	case Z80_EI :	976:2:20844:20855	3471057	66	True				
ANR	3471852	Identifier	Z80_EI		3471057	0					
ANR	3471853	ExpressionStatement	wrtb ( 0xFB )	977:3:20860:20871	3471057	67	True				
ANR	3471854	CallExpression	wrtb ( 0xFB )		3471057	0					
ANR	3471855	Callee	wrtb		3471057	0					
ANR	3471856	Identifier	wrtb		3471057	0					
ANR	3471857	ArgumentList	0xFB		3471057	1					
ANR	3471858	Argument	0xFB		3471057	0					
ANR	3471859	PrimaryExpression	0xFB		3471057	0					
ANR	3471860	BreakStatement	break ;	978:3:20876:20881	3471057	68	True				
ANR	3471861	Label	case Z80_EX :	979:2:20885:20896	3471057	69	True				
ANR	3471862	Identifier	Z80_EX		3471057	0					
ANR	3471863	IfStatement	if ( ! ( r = rd_ex1 ( & ptr ) ) )		3471057	70					
ANR	3471864	Condition	! ( r = rd_ex1 ( & ptr ) )	980:7:20905:20924	3471057	0	True				
ANR	3471865	UnaryOperationExpression	! ( r = rd_ex1 ( & ptr ) )		3471057	0					
ANR	3471866	UnaryOperator	!		3471057	0					
ANR	3471867	AssignmentExpression	r = rd_ex1 ( & ptr )		3471057	1		=			
ANR	3471868	Identifier	r		3471057	0					
ANR	3471869	CallExpression	rd_ex1 ( & ptr )		3471057	1					
ANR	3471870	Callee	rd_ex1		3471057	0					
ANR	3471871	Identifier	rd_ex1		3471057	0					
ANR	3471872	ArgumentList	& ptr		3471057	1					
ANR	3471873	Argument	& ptr		3471057	0					
ANR	3471874	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471875	UnaryOperator	&		3471057	0					
ANR	3471876	Identifier	ptr		3471057	1					
ANR	3471877	CompoundStatement		170:29:3013:3013	3471057	1					
ANR	3471878	BreakStatement	break ;	981:4:20933:20938	3471057	0	True				
ANR	3471879	SwitchStatement	switch ( r )		3471057	71					
ANR	3471880	Condition	r	983:11:20956:20956	3471057	0	True				
ANR	3471881	Identifier	r		3471057	0					
ANR	3471882	CompoundStatement		173:14:3045:3045	3471057	1					
ANR	3471883	Label	case DE :	984:3:20964:20971	3471057	0	True				
ANR	3471884	Identifier	DE		3471057	0					
ANR	3471885	IfStatement	if ( ! rd_hl ( & ptr ) )		3471057	1					
ANR	3471886	Condition	! rd_hl ( & ptr )	985:8:20981:20993	3471057	0	True				
ANR	3471887	UnaryOperationExpression	! rd_hl ( & ptr )		3471057	0					
ANR	3471888	UnaryOperator	!		3471057	0					
ANR	3471889	CallExpression	rd_hl ( & ptr )		3471057	1					
ANR	3471890	Callee	rd_hl		3471057	0					
ANR	3471891	Identifier	rd_hl		3471057	0					
ANR	3471892	ArgumentList	& ptr		3471057	1					
ANR	3471893	Argument	& ptr		3471057	0					
ANR	3471894	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471895	UnaryOperator	&		3471057	0					
ANR	3471896	Identifier	ptr		3471057	1					
ANR	3471897	CompoundStatement		175:23:3082:3082	3471057	1					
ANR	3471898	BreakStatement	break ;	986:5:21003:21008	3471057	0	True				
ANR	3471899	ExpressionStatement	wrtb ( 0xEB )	988:4:21020:21031	3471057	2	True				
ANR	3471900	CallExpression	wrtb ( 0xEB )		3471057	0					
ANR	3471901	Callee	wrtb		3471057	0					
ANR	3471902	Identifier	wrtb		3471057	0					
ANR	3471903	ArgumentList	0xEB		3471057	1					
ANR	3471904	Argument	0xEB		3471057	0					
ANR	3471905	PrimaryExpression	0xEB		3471057	0					
ANR	3471906	BreakStatement	break ;	989:4:21037:21042	3471057	3	True				
ANR	3471907	Label	case AF :	990:3:21047:21054	3471057	4	True				
ANR	3471908	Identifier	AF		3471057	0					
ANR	3471909	IfStatement	if ( ! rd_af_ ( & ptr ) )		3471057	5					
ANR	3471910	Condition	! rd_af_ ( & ptr )	991:8:21064:21076	3471057	0	True				
ANR	3471911	UnaryOperationExpression	! rd_af_ ( & ptr )		3471057	0					
ANR	3471912	UnaryOperator	!		3471057	0					
ANR	3471913	CallExpression	rd_af_ ( & ptr )		3471057	1					
ANR	3471914	Callee	rd_af_		3471057	0					
ANR	3471915	Identifier	rd_af_		3471057	0					
ANR	3471916	ArgumentList	& ptr		3471057	1					
ANR	3471917	Argument	& ptr		3471057	0					
ANR	3471918	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471919	UnaryOperator	&		3471057	0					
ANR	3471920	Identifier	ptr		3471057	1					
ANR	3471921	CompoundStatement		181:23:3165:3165	3471057	1					
ANR	3471922	BreakStatement	break ;	992:5:21086:21091	3471057	0	True				
ANR	3471923	ExpressionStatement	wrtb ( 0x08 )	994:4:21103:21114	3471057	6	True				
ANR	3471924	CallExpression	wrtb ( 0x08 )		3471057	0					
ANR	3471925	Callee	wrtb		3471057	0					
ANR	3471926	Identifier	wrtb		3471057	0					
ANR	3471927	ArgumentList	0x08		3471057	1					
ANR	3471928	Argument	0x08		3471057	0					
ANR	3471929	PrimaryExpression	0x08		3471057	0					
ANR	3471930	BreakStatement	break ;	995:4:21120:21125	3471057	7	True				
ANR	3471931	Label	default :	996:3:21130:21137	3471057	8	True				
ANR	3471932	Identifier	default		3471057	0					
ANR	3471933	IfStatement	if ( ! rd_hlx ( & ptr ) )		3471057	9					
ANR	3471934	Condition	! rd_hlx ( & ptr )	997:8:21147:21160	3471057	0	True				
ANR	3471935	UnaryOperationExpression	! rd_hlx ( & ptr )		3471057	0					
ANR	3471936	UnaryOperator	!		3471057	0					
ANR	3471937	CallExpression	rd_hlx ( & ptr )		3471057	1					
ANR	3471938	Callee	rd_hlx		3471057	0					
ANR	3471939	Identifier	rd_hlx		3471057	0					
ANR	3471940	ArgumentList	& ptr		3471057	1					
ANR	3471941	Argument	& ptr		3471057	0					
ANR	3471942	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471943	UnaryOperator	&		3471057	0					
ANR	3471944	Identifier	ptr		3471057	1					
ANR	3471945	CompoundStatement		187:24:3249:3249	3471057	1					
ANR	3471946	BreakStatement	break ;	998:5:21170:21175	3471057	0	True				
ANR	3471947	ExpressionStatement	wrtb ( 0xE3 )	1000:4:21187:21198	3471057	10	True				
ANR	3471948	CallExpression	wrtb ( 0xE3 )		3471057	0					
ANR	3471949	Callee	wrtb		3471057	0					
ANR	3471950	Identifier	wrtb		3471057	0					
ANR	3471951	ArgumentList	0xE3		3471057	1					
ANR	3471952	Argument	0xE3		3471057	0					
ANR	3471953	PrimaryExpression	0xE3		3471057	0					
ANR	3471954	BreakStatement	break ;	1002:3:21208:21213	3471057	72	True				
ANR	3471955	Label	case Z80_EXX :	1003:2:21217:21229	3471057	73	True				
ANR	3471956	Identifier	Z80_EXX		3471057	0					
ANR	3471957	ExpressionStatement	wrtb ( 0xD9 )	1004:3:21234:21245	3471057	74	True				
ANR	3471958	CallExpression	wrtb ( 0xD9 )		3471057	0					
ANR	3471959	Callee	wrtb		3471057	0					
ANR	3471960	Identifier	wrtb		3471057	0					
ANR	3471961	ArgumentList	0xD9		3471057	1					
ANR	3471962	Argument	0xD9		3471057	0					
ANR	3471963	PrimaryExpression	0xD9		3471057	0					
ANR	3471964	BreakStatement	break ;	1005:3:21250:21255	3471057	75	True				
ANR	3471965	Label	case Z80_HALT :	1006:2:21259:21272	3471057	76	True				
ANR	3471966	Identifier	Z80_HALT		3471057	0					
ANR	3471967	ExpressionStatement	wrtb ( 0x76 )	1007:3:21277:21288	3471057	77	True				
ANR	3471968	CallExpression	wrtb ( 0x76 )		3471057	0					
ANR	3471969	Callee	wrtb		3471057	0					
ANR	3471970	Identifier	wrtb		3471057	0					
ANR	3471971	ArgumentList	0x76		3471057	1					
ANR	3471972	Argument	0x76		3471057	0					
ANR	3471973	PrimaryExpression	0x76		3471057	0					
ANR	3471974	BreakStatement	break ;	1008:3:21293:21298	3471057	78	True				
ANR	3471975	Label	case Z80_IM :	1009:2:21302:21313	3471057	79	True				
ANR	3471976	Identifier	Z80_IM		3471057	0					
ANR	3471977	IfStatement	if ( ! ( r = rd_0_2 ( & ptr ) ) )		3471057	80					
ANR	3471978	Condition	! ( r = rd_0_2 ( & ptr ) )	1010:7:21322:21341	3471057	0	True				
ANR	3471979	UnaryOperationExpression	! ( r = rd_0_2 ( & ptr ) )		3471057	0					
ANR	3471980	UnaryOperator	!		3471057	0					
ANR	3471981	AssignmentExpression	r = rd_0_2 ( & ptr )		3471057	1		=			
ANR	3471982	Identifier	r		3471057	0					
ANR	3471983	CallExpression	rd_0_2 ( & ptr )		3471057	1					
ANR	3471984	Callee	rd_0_2		3471057	0					
ANR	3471985	Identifier	rd_0_2		3471057	0					
ANR	3471986	ArgumentList	& ptr		3471057	1					
ANR	3471987	Argument	& ptr		3471057	0					
ANR	3471988	UnaryOperationExpression	& ptr		3471057	0					
ANR	3471989	UnaryOperator	&		3471057	0					
ANR	3471990	Identifier	ptr		3471057	1					
ANR	3471991	CompoundStatement		200:29:3430:3430	3471057	1					
ANR	3471992	BreakStatement	break ;	1011:4:21350:21355	3471057	0	True				
ANR	3471993	ExpressionStatement	wrtb ( 0xED )	1013:3:21365:21376	3471057	81	True				
ANR	3471994	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3471995	Callee	wrtb		3471057	0					
ANR	3471996	Identifier	wrtb		3471057	0					
ANR	3471997	ArgumentList	0xED		3471057	1					
ANR	3471998	Argument	0xED		3471057	0					
ANR	3471999	PrimaryExpression	0xED		3471057	0					
ANR	3472000	ExpressionStatement	wrtb ( 0x46 + 8 * -- r )	1014:3:21381:21402	3471057	82	True				
ANR	3472001	CallExpression	wrtb ( 0x46 + 8 * -- r )		3471057	0					
ANR	3472002	Callee	wrtb		3471057	0					
ANR	3472003	Identifier	wrtb		3471057	0					
ANR	3472004	ArgumentList	0x46 + 8 * -- r		3471057	1					
ANR	3472005	Argument	0x46 + 8 * -- r		3471057	0					
ANR	3472006	AdditiveExpression	0x46 + 8 * -- r		3471057	0		+			
ANR	3472007	PrimaryExpression	0x46		3471057	0					
ANR	3472008	MultiplicativeExpression	8 * -- r		3471057	1		*			
ANR	3472009	PrimaryExpression	8		3471057	0					
ANR	3472010	UnaryExpression	-- r		3471057	1					
ANR	3472011	IncDec	--		3471057	0					
ANR	3472012	Identifier	r		3471057	1					
ANR	3472013	BreakStatement	break ;	1015:3:21407:21412	3471057	83	True				
ANR	3472014	Label	case Z80_IN :	1016:2:21416:21427	3471057	84	True				
ANR	3472015	Identifier	Z80_IN		3471057	0					
ANR	3472016	IfStatement	if ( ! ( r = rd_in ( & ptr ) ) )		3471057	85					
ANR	3472017	Condition	! ( r = rd_in ( & ptr ) )	1017:7:21436:21454	3471057	0	True				
ANR	3472018	UnaryOperationExpression	! ( r = rd_in ( & ptr ) )		3471057	0					
ANR	3472019	UnaryOperator	!		3471057	0					
ANR	3472020	AssignmentExpression	r = rd_in ( & ptr )		3471057	1		=			
ANR	3472021	Identifier	r		3471057	0					
ANR	3472022	CallExpression	rd_in ( & ptr )		3471057	1					
ANR	3472023	Callee	rd_in		3471057	0					
ANR	3472024	Identifier	rd_in		3471057	0					
ANR	3472025	ArgumentList	& ptr		3471057	1					
ANR	3472026	Argument	& ptr		3471057	0					
ANR	3472027	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472028	UnaryOperator	&		3471057	0					
ANR	3472029	Identifier	ptr		3471057	1					
ANR	3472030	CompoundStatement		207:28:3543:3543	3471057	1					
ANR	3472031	BreakStatement	break ;	1018:4:21463:21468	3471057	0	True				
ANR	3472032	IfStatement	if ( r == A )		3471057	86					
ANR	3472033	Condition	r == A	1020:7:21482:21487	3471057	0	True				
ANR	3472034	EqualityExpression	r == A		3471057	0		==			
ANR	3472035	Identifier	r		3471057	0					
ANR	3472036	Identifier	A		3471057	1					
ANR	3472037	CompoundStatement		210:15:3576:3576	3471057	1					
ANR	3472038	IfStatement	if ( ! ( r = rd_nnc ( & ptr ) ) )		3471057	0					
ANR	3472039	Condition	! ( r = rd_nnc ( & ptr ) )	1021:8:21500:21519	3471057	0	True				
ANR	3472040	UnaryOperationExpression	! ( r = rd_nnc ( & ptr ) )		3471057	0					
ANR	3472041	UnaryOperator	!		3471057	0					
ANR	3472042	AssignmentExpression	r = rd_nnc ( & ptr )		3471057	1		=			
ANR	3472043	Identifier	r		3471057	0					
ANR	3472044	CallExpression	rd_nnc ( & ptr )		3471057	1					
ANR	3472045	Callee	rd_nnc		3471057	0					
ANR	3472046	Identifier	rd_nnc		3471057	0					
ANR	3472047	ArgumentList	& ptr		3471057	1					
ANR	3472048	Argument	& ptr		3471057	0					
ANR	3472049	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472050	UnaryOperator	&		3471057	0					
ANR	3472051	Identifier	ptr		3471057	1					
ANR	3472052	CompoundStatement		211:30:3608:3608	3471057	1					
ANR	3472053	BreakStatement	break ;	1022:5:21529:21534	3471057	0	True				
ANR	3472054	IfStatement	if ( r == C )		3471057	1					
ANR	3472055	Condition	r == C	1024:8:21550:21555	3471057	0	True				
ANR	3472056	EqualityExpression	r == C		3471057	0		==			
ANR	3472057	Identifier	r		3471057	0					
ANR	3472058	Identifier	C		3471057	1					
ANR	3472059	CompoundStatement		214:16:3644:3644	3471057	1					
ANR	3472060	ExpressionStatement	wrtb ( 0xED )	1025:5:21565:21576	3471057	0	True				
ANR	3472061	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472062	Callee	wrtb		3471057	0					
ANR	3472063	Identifier	wrtb		3471057	0					
ANR	3472064	ArgumentList	0xED		3471057	1					
ANR	3472065	Argument	0xED		3471057	0					
ANR	3472066	PrimaryExpression	0xED		3471057	0					
ANR	3472067	ExpressionStatement	wrtb ( 0x40 + 8 * ( A - 1 ) )	1026:5:21583:21608	3471057	1	True				
ANR	3472068	CallExpression	wrtb ( 0x40 + 8 * ( A - 1 ) )		3471057	0					
ANR	3472069	Callee	wrtb		3471057	0					
ANR	3472070	Identifier	wrtb		3471057	0					
ANR	3472071	ArgumentList	0x40 + 8 * ( A - 1 )		3471057	1					
ANR	3472072	Argument	0x40 + 8 * ( A - 1 )		3471057	0					
ANR	3472073	AdditiveExpression	0x40 + 8 * ( A - 1 )		3471057	0		+			
ANR	3472074	PrimaryExpression	0x40		3471057	0					
ANR	3472075	MultiplicativeExpression	8 * ( A - 1 )		3471057	1		*			
ANR	3472076	PrimaryExpression	8		3471057	0					
ANR	3472077	AdditiveExpression	A - 1		3471057	1		-			
ANR	3472078	Identifier	A		3471057	0					
ANR	3472079	PrimaryExpression	1		3471057	1					
ANR	3472080	BreakStatement	break ;	1027:5:21615:21620	3471057	2	True				
ANR	3472081	ExpressionStatement	wrtb ( 0xDB )	1029:4:21632:21643	3471057	2	True				
ANR	3472082	CallExpression	wrtb ( 0xDB )		3471057	0					
ANR	3472083	Callee	wrtb		3471057	0					
ANR	3472084	Identifier	wrtb		3471057	0					
ANR	3472085	ArgumentList	0xDB		3471057	1					
ANR	3472086	Argument	0xDB		3471057	0					
ANR	3472087	PrimaryExpression	0xDB		3471057	0					
ANR	3472088	BreakStatement	break ;	1030:4:21649:21654	3471057	3	True				
ANR	3472089	IfStatement	if ( ! rd_c ( & ptr ) )		3471057	87					
ANR	3472090	Condition	! rd_c ( & ptr )	1032:7:21668:21679	3471057	0	True				
ANR	3472091	UnaryOperationExpression	! rd_c ( & ptr )		3471057	0					
ANR	3472092	UnaryOperator	!		3471057	0					
ANR	3472093	CallExpression	rd_c ( & ptr )		3471057	1					
ANR	3472094	Callee	rd_c		3471057	0					
ANR	3472095	Identifier	rd_c		3471057	0					
ANR	3472096	ArgumentList	& ptr		3471057	1					
ANR	3472097	Argument	& ptr		3471057	0					
ANR	3472098	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472099	UnaryOperator	&		3471057	0					
ANR	3472100	Identifier	ptr		3471057	1					
ANR	3472101	CompoundStatement		222:21:3768:3768	3471057	1					
ANR	3472102	BreakStatement	break ;	1033:4:21688:21693	3471057	0	True				
ANR	3472103	ExpressionStatement	wrtb ( 0xED )	1035:3:21703:21714	3471057	88	True				
ANR	3472104	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472105	Callee	wrtb		3471057	0					
ANR	3472106	Identifier	wrtb		3471057	0					
ANR	3472107	ArgumentList	0xED		3471057	1					
ANR	3472108	Argument	0xED		3471057	0					
ANR	3472109	PrimaryExpression	0xED		3471057	0					
ANR	3472110	ExpressionStatement	wrtb ( 0x40 + 8 * -- r )	1036:3:21719:21740	3471057	89	True				
ANR	3472111	CallExpression	wrtb ( 0x40 + 8 * -- r )		3471057	0					
ANR	3472112	Callee	wrtb		3471057	0					
ANR	3472113	Identifier	wrtb		3471057	0					
ANR	3472114	ArgumentList	0x40 + 8 * -- r		3471057	1					
ANR	3472115	Argument	0x40 + 8 * -- r		3471057	0					
ANR	3472116	AdditiveExpression	0x40 + 8 * -- r		3471057	0		+			
ANR	3472117	PrimaryExpression	0x40		3471057	0					
ANR	3472118	MultiplicativeExpression	8 * -- r		3471057	1		*			
ANR	3472119	PrimaryExpression	8		3471057	0					
ANR	3472120	UnaryExpression	-- r		3471057	1					
ANR	3472121	IncDec	--		3471057	0					
ANR	3472122	Identifier	r		3471057	1					
ANR	3472123	BreakStatement	break ;	1037:3:21745:21750	3471057	90	True				
ANR	3472124	Label	case Z80_INC :	1038:2:21754:21766	3471057	91	True				
ANR	3472125	Identifier	Z80_INC		3471057	0					
ANR	3472126	IfStatement	if ( ! ( r = rd_r_rr ( & ptr ) ) )		3471057	92					
ANR	3472127	Condition	! ( r = rd_r_rr ( & ptr ) )	1039:7:21775:21795	3471057	0	True				
ANR	3472128	UnaryOperationExpression	! ( r = rd_r_rr ( & ptr ) )		3471057	0					
ANR	3472129	UnaryOperator	!		3471057	0					
ANR	3472130	AssignmentExpression	r = rd_r_rr ( & ptr )		3471057	1		=			
ANR	3472131	Identifier	r		3471057	0					
ANR	3472132	CallExpression	rd_r_rr ( & ptr )		3471057	1					
ANR	3472133	Callee	rd_r_rr		3471057	0					
ANR	3472134	Identifier	rd_r_rr		3471057	0					
ANR	3472135	ArgumentList	& ptr		3471057	1					
ANR	3472136	Argument	& ptr		3471057	0					
ANR	3472137	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472138	UnaryOperator	&		3471057	0					
ANR	3472139	Identifier	ptr		3471057	1					
ANR	3472140	CompoundStatement		229:30:3884:3884	3471057	1					
ANR	3472141	BreakStatement	break ;	1040:4:21804:21809	3471057	0	True				
ANR	3472142	IfStatement	if ( r < 0 )		3471057	93					
ANR	3472143	Condition	r < 0	1042:7:21823:21827	3471057	0	True				
ANR	3472144	RelationalExpression	r < 0		3471057	0		<			
ANR	3472145	Identifier	r		3471057	0					
ANR	3472146	PrimaryExpression	0		3471057	1					
ANR	3472147	CompoundStatement		232:14:3916:3916	3471057	1					
ANR	3472148	ExpressionStatement	wrtb ( 0x04 - 8 * ++ r )	1043:4:21836:21857	3471057	0	True				
ANR	3472149	CallExpression	wrtb ( 0x04 - 8 * ++ r )		3471057	0					
ANR	3472150	Callee	wrtb		3471057	0					
ANR	3472151	Identifier	wrtb		3471057	0					
ANR	3472152	ArgumentList	0x04 - 8 * ++ r		3471057	1					
ANR	3472153	Argument	0x04 - 8 * ++ r		3471057	0					
ANR	3472154	AdditiveExpression	0x04 - 8 * ++ r		3471057	0		-			
ANR	3472155	PrimaryExpression	0x04		3471057	0					
ANR	3472156	MultiplicativeExpression	8 * ++ r		3471057	1		*			
ANR	3472157	PrimaryExpression	8		3471057	0					
ANR	3472158	UnaryExpression	++ r		3471057	1					
ANR	3472159	IncDec	++		3471057	0					
ANR	3472160	Identifier	r		3471057	1					
ANR	3472161	BreakStatement	break ;	1044:4:21863:21868	3471057	1	True				
ANR	3472162	ExpressionStatement	wrtb ( 0x03 + 0x10 * -- r )	1046:3:21878:21902	3471057	94	True				
ANR	3472163	CallExpression	wrtb ( 0x03 + 0x10 * -- r )		3471057	0					
ANR	3472164	Callee	wrtb		3471057	0					
ANR	3472165	Identifier	wrtb		3471057	0					
ANR	3472166	ArgumentList	0x03 + 0x10 * -- r		3471057	1					
ANR	3472167	Argument	0x03 + 0x10 * -- r		3471057	0					
ANR	3472168	AdditiveExpression	0x03 + 0x10 * -- r		3471057	0		+			
ANR	3472169	PrimaryExpression	0x03		3471057	0					
ANR	3472170	MultiplicativeExpression	0x10 * -- r		3471057	1		*			
ANR	3472171	PrimaryExpression	0x10		3471057	0					
ANR	3472172	UnaryExpression	-- r		3471057	1					
ANR	3472173	IncDec	--		3471057	0					
ANR	3472174	Identifier	r		3471057	1					
ANR	3472175	BreakStatement	break ;	1047:3:21907:21912	3471057	95	True				
ANR	3472176	Label	case Z80_IND :	1048:2:21916:21928	3471057	96	True				
ANR	3472177	Identifier	Z80_IND		3471057	0					
ANR	3472178	ExpressionStatement	wrtb ( 0xED )	1049:3:21933:21944	3471057	97	True				
ANR	3472179	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472180	Callee	wrtb		3471057	0					
ANR	3472181	Identifier	wrtb		3471057	0					
ANR	3472182	ArgumentList	0xED		3471057	1					
ANR	3472183	Argument	0xED		3471057	0					
ANR	3472184	PrimaryExpression	0xED		3471057	0					
ANR	3472185	ExpressionStatement	wrtb ( 0xAA )	1050:3:21949:21960	3471057	98	True				
ANR	3472186	CallExpression	wrtb ( 0xAA )		3471057	0					
ANR	3472187	Callee	wrtb		3471057	0					
ANR	3472188	Identifier	wrtb		3471057	0					
ANR	3472189	ArgumentList	0xAA		3471057	1					
ANR	3472190	Argument	0xAA		3471057	0					
ANR	3472191	PrimaryExpression	0xAA		3471057	0					
ANR	3472192	BreakStatement	break ;	1051:3:21965:21970	3471057	99	True				
ANR	3472193	Label	case Z80_INDR :	1052:2:21974:21987	3471057	100	True				
ANR	3472194	Identifier	Z80_INDR		3471057	0					
ANR	3472195	ExpressionStatement	wrtb ( 0xED )	1053:3:21992:22003	3471057	101	True				
ANR	3472196	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472197	Callee	wrtb		3471057	0					
ANR	3472198	Identifier	wrtb		3471057	0					
ANR	3472199	ArgumentList	0xED		3471057	1					
ANR	3472200	Argument	0xED		3471057	0					
ANR	3472201	PrimaryExpression	0xED		3471057	0					
ANR	3472202	ExpressionStatement	wrtb ( 0xBA )	1054:3:22008:22019	3471057	102	True				
ANR	3472203	CallExpression	wrtb ( 0xBA )		3471057	0					
ANR	3472204	Callee	wrtb		3471057	0					
ANR	3472205	Identifier	wrtb		3471057	0					
ANR	3472206	ArgumentList	0xBA		3471057	1					
ANR	3472207	Argument	0xBA		3471057	0					
ANR	3472208	PrimaryExpression	0xBA		3471057	0					
ANR	3472209	BreakStatement	break ;	1055:3:22024:22029	3471057	103	True				
ANR	3472210	Label	case Z80_INI :	1056:2:22033:22045	3471057	104	True				
ANR	3472211	Identifier	Z80_INI		3471057	0					
ANR	3472212	ExpressionStatement	wrtb ( 0xED )	1057:3:22050:22061	3471057	105	True				
ANR	3472213	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472214	Callee	wrtb		3471057	0					
ANR	3472215	Identifier	wrtb		3471057	0					
ANR	3472216	ArgumentList	0xED		3471057	1					
ANR	3472217	Argument	0xED		3471057	0					
ANR	3472218	PrimaryExpression	0xED		3471057	0					
ANR	3472219	ExpressionStatement	wrtb ( 0xA2 )	1058:3:22066:22077	3471057	106	True				
ANR	3472220	CallExpression	wrtb ( 0xA2 )		3471057	0					
ANR	3472221	Callee	wrtb		3471057	0					
ANR	3472222	Identifier	wrtb		3471057	0					
ANR	3472223	ArgumentList	0xA2		3471057	1					
ANR	3472224	Argument	0xA2		3471057	0					
ANR	3472225	PrimaryExpression	0xA2		3471057	0					
ANR	3472226	BreakStatement	break ;	1059:3:22082:22087	3471057	107	True				
ANR	3472227	Label	case Z80_INIR :	1060:2:22091:22104	3471057	108	True				
ANR	3472228	Identifier	Z80_INIR		3471057	0					
ANR	3472229	ExpressionStatement	wrtb ( 0xED )	1061:3:22109:22120	3471057	109	True				
ANR	3472230	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472231	Callee	wrtb		3471057	0					
ANR	3472232	Identifier	wrtb		3471057	0					
ANR	3472233	ArgumentList	0xED		3471057	1					
ANR	3472234	Argument	0xED		3471057	0					
ANR	3472235	PrimaryExpression	0xED		3471057	0					
ANR	3472236	ExpressionStatement	wrtb ( 0xB2 )	1062:3:22125:22136	3471057	110	True				
ANR	3472237	CallExpression	wrtb ( 0xB2 )		3471057	0					
ANR	3472238	Callee	wrtb		3471057	0					
ANR	3472239	Identifier	wrtb		3471057	0					
ANR	3472240	ArgumentList	0xB2		3471057	1					
ANR	3472241	Argument	0xB2		3471057	0					
ANR	3472242	PrimaryExpression	0xB2		3471057	0					
ANR	3472243	BreakStatement	break ;	1063:3:22141:22146	3471057	111	True				
ANR	3472244	Label	case Z80_JP :	1064:2:22150:22161	3471057	112	True				
ANR	3472245	Identifier	Z80_JP		3471057	0					
ANR	3472246	ExpressionStatement	r = rd_jp ( & ptr )	1065:3:22166:22182	3471057	113	True				
ANR	3472247	AssignmentExpression	r = rd_jp ( & ptr )		3471057	0		=			
ANR	3472248	Identifier	r		3471057	0					
ANR	3472249	CallExpression	rd_jp ( & ptr )		3471057	1					
ANR	3472250	Callee	rd_jp		3471057	0					
ANR	3472251	Identifier	rd_jp		3471057	0					
ANR	3472252	ArgumentList	& ptr		3471057	1					
ANR	3472253	Argument	& ptr		3471057	0					
ANR	3472254	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472255	UnaryOperator	&		3471057	0					
ANR	3472256	Identifier	ptr		3471057	1					
ANR	3472257	IfStatement	if ( r < 0 )		3471057	114					
ANR	3472258	Condition	r < 0	1066:7:22191:22195	3471057	0	True				
ANR	3472259	RelationalExpression	r < 0		3471057	0		<			
ANR	3472260	Identifier	r		3471057	0					
ANR	3472261	PrimaryExpression	0		3471057	1					
ANR	3472262	CompoundStatement		256:14:4284:4284	3471057	1					
ANR	3472263	ExpressionStatement	wrtb ( 0xE9 )	1067:4:22204:22215	3471057	0	True				
ANR	3472264	CallExpression	wrtb ( 0xE9 )		3471057	0					
ANR	3472265	Callee	wrtb		3471057	0					
ANR	3472266	Identifier	wrtb		3471057	0					
ANR	3472267	ArgumentList	0xE9		3471057	1					
ANR	3472268	Argument	0xE9		3471057	0					
ANR	3472269	PrimaryExpression	0xE9		3471057	0					
ANR	3472270	BreakStatement	break ;	1068:4:22221:22226	3471057	1	True				
ANR	3472271	IfStatement	if ( r )		3471057	115					
ANR	3472272	Condition	r	1070:7:22240:22240	3471057	0	True				
ANR	3472273	Identifier	r		3471057	0					
ANR	3472274	CompoundStatement		260:10:4329:4329	3471057	1					
ANR	3472275	ExpressionStatement	wrtb ( 0xC2 + 8 * -- r )	1071:4:22249:22270	3471057	0	True				
ANR	3472276	CallExpression	wrtb ( 0xC2 + 8 * -- r )		3471057	0					
ANR	3472277	Callee	wrtb		3471057	0					
ANR	3472278	Identifier	wrtb		3471057	0					
ANR	3472279	ArgumentList	0xC2 + 8 * -- r		3471057	1					
ANR	3472280	Argument	0xC2 + 8 * -- r		3471057	0					
ANR	3472281	AdditiveExpression	0xC2 + 8 * -- r		3471057	0		+			
ANR	3472282	PrimaryExpression	0xC2		3471057	0					
ANR	3472283	MultiplicativeExpression	8 * -- r		3471057	1		*			
ANR	3472284	PrimaryExpression	8		3471057	0					
ANR	3472285	UnaryExpression	-- r		3471057	1					
ANR	3472286	IncDec	--		3471057	0					
ANR	3472287	Identifier	r		3471057	1					
ANR	3472288	ExpressionStatement	rd_comma ( & ptr )	1072:4:22276:22291	3471057	1	True				
ANR	3472289	CallExpression	rd_comma ( & ptr )		3471057	0					
ANR	3472290	Callee	rd_comma		3471057	0					
ANR	3472291	Identifier	rd_comma		3471057	0					
ANR	3472292	ArgumentList	& ptr		3471057	1					
ANR	3472293	Argument	& ptr		3471057	0					
ANR	3472294	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472295	UnaryOperator	&		3471057	0					
ANR	3472296	Identifier	ptr		3471057	1					
ANR	3472297	ElseStatement	else		3471057	0					
ANR	3472298	CompoundStatement		263:10:4389:4389	3471057	0					
ANR	3472299	ExpressionStatement	wrtb ( 0xC3 )	1074:4:22309:22320	3471057	0	True				
ANR	3472300	CallExpression	wrtb ( 0xC3 )		3471057	0					
ANR	3472301	Callee	wrtb		3471057	0					
ANR	3472302	Identifier	wrtb		3471057	0					
ANR	3472303	ArgumentList	0xC3		3471057	1					
ANR	3472304	Argument	0xC3		3471057	0					
ANR	3472305	PrimaryExpression	0xC3		3471057	0					
ANR	3472306	BreakStatement	break ;	1076:3:22330:22335	3471057	116	True				
ANR	3472307	Label	case Z80_JR :	1077:2:22339:22350	3471057	117	True				
ANR	3472308	Identifier	Z80_JR		3471057	0					
ANR	3472309	ExpressionStatement	r = rd_jr ( & ptr )	1078:3:22355:22371	3471057	118	True				
ANR	3472310	AssignmentExpression	r = rd_jr ( & ptr )		3471057	0		=			
ANR	3472311	Identifier	r		3471057	0					
ANR	3472312	CallExpression	rd_jr ( & ptr )		3471057	1					
ANR	3472313	Callee	rd_jr		3471057	0					
ANR	3472314	Identifier	rd_jr		3471057	0					
ANR	3472315	ArgumentList	& ptr		3471057	1					
ANR	3472316	Argument	& ptr		3471057	0					
ANR	3472317	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472318	UnaryOperator	&		3471057	0					
ANR	3472319	Identifier	ptr		3471057	1					
ANR	3472320	IfStatement	if ( r )		3471057	119					
ANR	3472321	Condition	r	1079:7:22380:22380	3471057	0	True				
ANR	3472322	Identifier	r		3471057	0					
ANR	3472323	CompoundStatement		269:10:4469:4469	3471057	1					
ANR	3472324	ExpressionStatement	rd_comma ( & ptr )	1080:4:22389:22404	3471057	0	True				
ANR	3472325	CallExpression	rd_comma ( & ptr )		3471057	0					
ANR	3472326	Callee	rd_comma		3471057	0					
ANR	3472327	Identifier	rd_comma		3471057	0					
ANR	3472328	ArgumentList	& ptr		3471057	1					
ANR	3472329	Argument	& ptr		3471057	0					
ANR	3472330	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472331	UnaryOperator	&		3471057	0					
ANR	3472332	Identifier	ptr		3471057	1					
ANR	3472333	ExpressionStatement	wrtb ( 0x18 + 8 * r )	1082:3:22414:22433	3471057	120	True				
ANR	3472334	CallExpression	wrtb ( 0x18 + 8 * r )		3471057	0					
ANR	3472335	Callee	wrtb		3471057	0					
ANR	3472336	Identifier	wrtb		3471057	0					
ANR	3472337	ArgumentList	0x18 + 8 * r		3471057	1					
ANR	3472338	Argument	0x18 + 8 * r		3471057	0					
ANR	3472339	AdditiveExpression	0x18 + 8 * r		3471057	0		+			
ANR	3472340	PrimaryExpression	0x18		3471057	0					
ANR	3472341	MultiplicativeExpression	8 * r		3471057	1		*			
ANR	3472342	PrimaryExpression	8		3471057	0					
ANR	3472343	Identifier	r		3471057	1					
ANR	3472344	BreakStatement	break ;	1083:3:22438:22443	3471057	121	True				
ANR	3472345	Label	case Z80_LD :	1084:2:22447:22458	3471057	122	True				
ANR	3472346	Identifier	Z80_LD		3471057	0					
ANR	3472347	IfStatement	if ( ! ( r = rd_ld ( & ptr ) ) )		3471057	123					
ANR	3472348	Condition	! ( r = rd_ld ( & ptr ) )	1085:7:22467:22485	3471057	0	True				
ANR	3472349	UnaryOperationExpression	! ( r = rd_ld ( & ptr ) )		3471057	0					
ANR	3472350	UnaryOperator	!		3471057	0					
ANR	3472351	AssignmentExpression	r = rd_ld ( & ptr )		3471057	1		=			
ANR	3472352	Identifier	r		3471057	0					
ANR	3472353	CallExpression	rd_ld ( & ptr )		3471057	1					
ANR	3472354	Callee	rd_ld		3471057	0					
ANR	3472355	Identifier	rd_ld		3471057	0					
ANR	3472356	ArgumentList	& ptr		3471057	1					
ANR	3472357	Argument	& ptr		3471057	0					
ANR	3472358	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472359	UnaryOperator	&		3471057	0					
ANR	3472360	Identifier	ptr		3471057	1					
ANR	3472361	CompoundStatement		275:28:4574:4574	3471057	1					
ANR	3472362	BreakStatement	break ;	1086:4:22494:22499	3471057	0	True				
ANR	3472363	SwitchStatement	switch ( r )		3471057	124					
ANR	3472364	Condition	r	1088:11:22517:22517	3471057	0	True				
ANR	3472365	Identifier	r		3471057	0					
ANR	3472366	CompoundStatement		278:14:4606:4606	3471057	1					
ANR	3472367	Label	case ld_BC :	1089:3:22525:22535	3471057	0	True				
ANR	3472368	Identifier	ld_BC		3471057	0					
ANR	3472369	Label	case ld_DE :	1090:3:22540:22550	3471057	1	True				
ANR	3472370	Identifier	ld_DE		3471057	0					
ANR	3472371	IfStatement	if ( ! rd_a ( & ptr ) )		3471057	2					
ANR	3472372	Condition	! rd_a ( & ptr )	1091:8:22560:22571	3471057	0	True				
ANR	3472373	UnaryOperationExpression	! rd_a ( & ptr )		3471057	0					
ANR	3472374	UnaryOperator	!		3471057	0					
ANR	3472375	CallExpression	rd_a ( & ptr )		3471057	1					
ANR	3472376	Callee	rd_a		3471057	0					
ANR	3472377	Identifier	rd_a		3471057	0					
ANR	3472378	ArgumentList	& ptr		3471057	1					
ANR	3472379	Argument	& ptr		3471057	0					
ANR	3472380	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472381	UnaryOperator	&		3471057	0					
ANR	3472382	Identifier	ptr		3471057	1					
ANR	3472383	CompoundStatement		281:22:4660:4660	3471057	1					
ANR	3472384	BreakStatement	break ;	1092:5:22581:22586	3471057	0	True				
ANR	3472385	ExpressionStatement	wrtb ( 0x02 + 0x10 * ( r == ld_DE ) )	1094:4:22598:22631	3471057	3	True				
ANR	3472386	CallExpression	wrtb ( 0x02 + 0x10 * ( r == ld_DE ) )		3471057	0					
ANR	3472387	Callee	wrtb		3471057	0					
ANR	3472388	Identifier	wrtb		3471057	0					
ANR	3472389	ArgumentList	0x02 + 0x10 * ( r == ld_DE )		3471057	1					
ANR	3472390	Argument	0x02 + 0x10 * ( r == ld_DE )		3471057	0					
ANR	3472391	AdditiveExpression	0x02 + 0x10 * ( r == ld_DE )		3471057	0		+			
ANR	3472392	PrimaryExpression	0x02		3471057	0					
ANR	3472393	MultiplicativeExpression	0x10 * ( r == ld_DE )		3471057	1		*			
ANR	3472394	PrimaryExpression	0x10		3471057	0					
ANR	3472395	EqualityExpression	r == ld_DE		3471057	1		==			
ANR	3472396	Identifier	r		3471057	0					
ANR	3472397	Identifier	ld_DE		3471057	1					
ANR	3472398	BreakStatement	break ;	1095:4:22637:22642	3471057	4	True				
ANR	3472399	Label	case ld_HL :	1096:3:22647:22657	3471057	5	True				
ANR	3472400	Identifier	ld_HL		3471057	0					
ANR	3472401	ExpressionStatement	r = rd_ld_hl ( & ptr )	1097:4:22663:22682	3471057	6	True				
ANR	3472402	AssignmentExpression	r = rd_ld_hl ( & ptr )		3471057	0		=			
ANR	3472403	Identifier	r		3471057	0					
ANR	3472404	CallExpression	rd_ld_hl ( & ptr )		3471057	1					
ANR	3472405	Callee	rd_ld_hl		3471057	0					
ANR	3472406	Identifier	rd_ld_hl		3471057	0					
ANR	3472407	ArgumentList	& ptr		3471057	1					
ANR	3472408	Argument	& ptr		3471057	0					
ANR	3472409	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472410	UnaryOperator	&		3471057	0					
ANR	3472411	Identifier	ptr		3471057	1					
ANR	3472412	ExpressionStatement	wrtb ( 0x70 + -- r )	1098:4:22688:22705	3471057	7	True				
ANR	3472413	CallExpression	wrtb ( 0x70 + -- r )		3471057	0					
ANR	3472414	Callee	wrtb		3471057	0					
ANR	3472415	Identifier	wrtb		3471057	0					
ANR	3472416	ArgumentList	0x70 + -- r		3471057	1					
ANR	3472417	Argument	0x70 + -- r		3471057	0					
ANR	3472418	AdditiveExpression	0x70 + -- r		3471057	0		+			
ANR	3472419	PrimaryExpression	0x70		3471057	0					
ANR	3472420	UnaryExpression	-- r		3471057	1					
ANR	3472421	IncDec	--		3471057	0					
ANR	3472422	Identifier	r		3471057	1					
ANR	3472423	BreakStatement	break ;	1099:4:22711:22716	3471057	8	True				
ANR	3472424	Label	case ld_NN :	1100:3:22721:22731	3471057	9	True				
ANR	3472425	Identifier	ld_NN		3471057	0					
ANR	3472426	IfStatement	if ( ! ( r = rd_ld_nn ( & ptr ) ) )		3471057	10					
ANR	3472427	Condition	! ( r = rd_ld_nn ( & ptr ) )	1101:8:22741:22762	3471057	0	True				
ANR	3472428	UnaryOperationExpression	! ( r = rd_ld_nn ( & ptr ) )		3471057	0					
ANR	3472429	UnaryOperator	!		3471057	0					
ANR	3472430	AssignmentExpression	r = rd_ld_nn ( & ptr )		3471057	1		=			
ANR	3472431	Identifier	r		3471057	0					
ANR	3472432	CallExpression	rd_ld_nn ( & ptr )		3471057	1					
ANR	3472433	Callee	rd_ld_nn		3471057	0					
ANR	3472434	Identifier	rd_ld_nn		3471057	0					
ANR	3472435	ArgumentList	& ptr		3471057	1					
ANR	3472436	Argument	& ptr		3471057	0					
ANR	3472437	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472438	UnaryOperator	&		3471057	0					
ANR	3472439	Identifier	ptr		3471057	1					
ANR	3472440	CompoundStatement		291:32:4851:4851	3471057	1					
ANR	3472441	BreakStatement	break ;	1102:5:22772:22777	3471057	0	True				
ANR	3472442	IfStatement	if ( r == ld_nnA || r == ld_nnHL )		3471057	11					
ANR	3472443	Condition	r == ld_nnA || r == ld_nnHL	1104:8:22793:22819	3471057	0	True				
ANR	3472444	OrExpression	r == ld_nnA || r == ld_nnHL		3471057	0		||			
ANR	3472445	EqualityExpression	r == ld_nnA		3471057	0		==			
ANR	3472446	Identifier	r		3471057	0					
ANR	3472447	Identifier	ld_nnA		3471057	1					
ANR	3472448	EqualityExpression	r == ld_nnHL		3471057	1		==			
ANR	3472449	Identifier	r		3471057	0					
ANR	3472450	Identifier	ld_nnHL		3471057	1					
ANR	3472451	CompoundStatement		294:37:4908:4908	3471057	1					
ANR	3472452	ExpressionStatement	wrtb ( 0x22 + 0x10 * ( r == ld_nnA ) )	1105:5:22829:22863	3471057	0	True				
ANR	3472453	CallExpression	wrtb ( 0x22 + 0x10 * ( r == ld_nnA ) )		3471057	0					
ANR	3472454	Callee	wrtb		3471057	0					
ANR	3472455	Identifier	wrtb		3471057	0					
ANR	3472456	ArgumentList	0x22 + 0x10 * ( r == ld_nnA )		3471057	1					
ANR	3472457	Argument	0x22 + 0x10 * ( r == ld_nnA )		3471057	0					
ANR	3472458	AdditiveExpression	0x22 + 0x10 * ( r == ld_nnA )		3471057	0		+			
ANR	3472459	PrimaryExpression	0x22		3471057	0					
ANR	3472460	MultiplicativeExpression	0x10 * ( r == ld_nnA )		3471057	1		*			
ANR	3472461	PrimaryExpression	0x10		3471057	0					
ANR	3472462	EqualityExpression	r == ld_nnA		3471057	1		==			
ANR	3472463	Identifier	r		3471057	0					
ANR	3472464	Identifier	ld_nnA		3471057	1					
ANR	3472465	BreakStatement	break ;	1106:5:22870:22875	3471057	1	True				
ANR	3472466	ExpressionStatement	wrtb ( 0xED )	1108:4:22887:22898	3471057	12	True				
ANR	3472467	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472468	Callee	wrtb		3471057	0					
ANR	3472469	Identifier	wrtb		3471057	0					
ANR	3472470	ArgumentList	0xED		3471057	1					
ANR	3472471	Argument	0xED		3471057	0					
ANR	3472472	PrimaryExpression	0xED		3471057	0					
ANR	3472473	ExpressionStatement	wrtb ( 0x43 + 0x10 * -- r )	1109:4:22904:22928	3471057	13	True				
ANR	3472474	CallExpression	wrtb ( 0x43 + 0x10 * -- r )		3471057	0					
ANR	3472475	Callee	wrtb		3471057	0					
ANR	3472476	Identifier	wrtb		3471057	0					
ANR	3472477	ArgumentList	0x43 + 0x10 * -- r		3471057	1					
ANR	3472478	Argument	0x43 + 0x10 * -- r		3471057	0					
ANR	3472479	AdditiveExpression	0x43 + 0x10 * -- r		3471057	0		+			
ANR	3472480	PrimaryExpression	0x43		3471057	0					
ANR	3472481	MultiplicativeExpression	0x10 * -- r		3471057	1		*			
ANR	3472482	PrimaryExpression	0x10		3471057	0					
ANR	3472483	UnaryExpression	-- r		3471057	1					
ANR	3472484	IncDec	--		3471057	0					
ANR	3472485	Identifier	r		3471057	1					
ANR	3472486	BreakStatement	break ;	1110:4:22934:22939	3471057	14	True				
ANR	3472487	Label	case ldA :	1111:3:22944:22952	3471057	15	True				
ANR	3472488	Identifier	ldA		3471057	0					
ANR	3472489	IfStatement	if ( ! ( r = rd_lda ( & ptr ) ) )		3471057	16					
ANR	3472490	Condition	! ( r = rd_lda ( & ptr ) )	1112:8:22962:22981	3471057	0	True				
ANR	3472491	UnaryOperationExpression	! ( r = rd_lda ( & ptr ) )		3471057	0					
ANR	3472492	UnaryOperator	!		3471057	0					
ANR	3472493	AssignmentExpression	r = rd_lda ( & ptr )		3471057	1		=			
ANR	3472494	Identifier	r		3471057	0					
ANR	3472495	CallExpression	rd_lda ( & ptr )		3471057	1					
ANR	3472496	Callee	rd_lda		3471057	0					
ANR	3472497	Identifier	rd_lda		3471057	0					
ANR	3472498	ArgumentList	& ptr		3471057	1					
ANR	3472499	Argument	& ptr		3471057	0					
ANR	3472500	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472501	UnaryOperator	&		3471057	0					
ANR	3472502	Identifier	ptr		3471057	1					
ANR	3472503	CompoundStatement		302:30:5070:5070	3471057	1					
ANR	3472504	BreakStatement	break ;	1113:5:22991:22996	3471057	0	True				
ANR	3472505	IfStatement	if ( r == A_NN )		3471057	17					
ANR	3472506	Condition	r == A_NN	1115:8:23012:23020	3471057	0	True				
ANR	3472507	EqualityExpression	r == A_NN		3471057	0		==			
ANR	3472508	Identifier	r		3471057	0					
ANR	3472509	Identifier	A_NN		3471057	1					
ANR	3472510	CompoundStatement		305:19:5109:5109	3471057	1					
ANR	3472511	ExpressionStatement	wrtb ( 0x3A )	1116:5:23030:23041	3471057	0	True				
ANR	3472512	CallExpression	wrtb ( 0x3A )		3471057	0					
ANR	3472513	Callee	wrtb		3471057	0					
ANR	3472514	Identifier	wrtb		3471057	0					
ANR	3472515	ArgumentList	0x3A		3471057	1					
ANR	3472516	Argument	0x3A		3471057	0					
ANR	3472517	PrimaryExpression	0x3A		3471057	0					
ANR	3472518	BreakStatement	break ;	1117:5:23048:23053	3471057	1	True				
ANR	3472519	IfStatement	if ( r == A_I || r == A_R )		3471057	18					
ANR	3472520	Condition	r == A_I || r == A_R	1119:8:23069:23088	3471057	0	True				
ANR	3472521	OrExpression	r == A_I || r == A_R		3471057	0		||			
ANR	3472522	EqualityExpression	r == A_I		3471057	0		==			
ANR	3472523	Identifier	r		3471057	0					
ANR	3472524	Identifier	A_I		3471057	1					
ANR	3472525	EqualityExpression	r == A_R		3471057	1		==			
ANR	3472526	Identifier	r		3471057	0					
ANR	3472527	Identifier	A_R		3471057	1					
ANR	3472528	CompoundStatement		309:30:5177:5177	3471057	1					
ANR	3472529	ExpressionStatement	wrtb ( 0xED )	1120:5:23098:23109	3471057	0	True				
ANR	3472530	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472531	Callee	wrtb		3471057	0					
ANR	3472532	Identifier	wrtb		3471057	0					
ANR	3472533	ArgumentList	0xED		3471057	1					
ANR	3472534	Argument	0xED		3471057	0					
ANR	3472535	PrimaryExpression	0xED		3471057	0					
ANR	3472536	ExpressionStatement	wrtb ( 0x57 + 8 * ( r == A_R ) )	1121:5:23116:23144	3471057	1	True				
ANR	3472537	CallExpression	wrtb ( 0x57 + 8 * ( r == A_R ) )		3471057	0					
ANR	3472538	Callee	wrtb		3471057	0					
ANR	3472539	Identifier	wrtb		3471057	0					
ANR	3472540	ArgumentList	0x57 + 8 * ( r == A_R )		3471057	1					
ANR	3472541	Argument	0x57 + 8 * ( r == A_R )		3471057	0					
ANR	3472542	AdditiveExpression	0x57 + 8 * ( r == A_R )		3471057	0		+			
ANR	3472543	PrimaryExpression	0x57		3471057	0					
ANR	3472544	MultiplicativeExpression	8 * ( r == A_R )		3471057	1		*			
ANR	3472545	PrimaryExpression	8		3471057	0					
ANR	3472546	EqualityExpression	r == A_R		3471057	1		==			
ANR	3472547	Identifier	r		3471057	0					
ANR	3472548	Identifier	A_R		3471057	1					
ANR	3472549	BreakStatement	break ;	1122:5:23151:23156	3471057	2	True				
ANR	3472550	IfStatement	if ( r < 0 )		3471057	19					
ANR	3472551	Condition	r < 0	1124:8:23172:23176	3471057	0	True				
ANR	3472552	RelationalExpression	r < 0		3471057	0		<			
ANR	3472553	Identifier	r		3471057	0					
ANR	3472554	PrimaryExpression	0		3471057	1					
ANR	3472555	CompoundStatement		314:15:5265:5265	3471057	1					
ANR	3472556	ExpressionStatement	wrtb ( 0x0A - 0x10 * ++ r )	1125:5:23186:23210	3471057	0	True				
ANR	3472557	CallExpression	wrtb ( 0x0A - 0x10 * ++ r )		3471057	0					
ANR	3472558	Callee	wrtb		3471057	0					
ANR	3472559	Identifier	wrtb		3471057	0					
ANR	3472560	ArgumentList	0x0A - 0x10 * ++ r		3471057	1					
ANR	3472561	Argument	0x0A - 0x10 * ++ r		3471057	0					
ANR	3472562	AdditiveExpression	0x0A - 0x10 * ++ r		3471057	0		-			
ANR	3472563	PrimaryExpression	0x0A		3471057	0					
ANR	3472564	MultiplicativeExpression	0x10 * ++ r		3471057	1		*			
ANR	3472565	PrimaryExpression	0x10		3471057	0					
ANR	3472566	UnaryExpression	++ r		3471057	1					
ANR	3472567	IncDec	++		3471057	0					
ANR	3472568	Identifier	r		3471057	1					
ANR	3472569	BreakStatement	break ;	1126:5:23217:23222	3471057	1	True				
ANR	3472570	ExpressionStatement	wrtb ( 0x78 + -- r )	1128:4:23234:23251	3471057	20	True				
ANR	3472571	CallExpression	wrtb ( 0x78 + -- r )		3471057	0					
ANR	3472572	Callee	wrtb		3471057	0					
ANR	3472573	Identifier	wrtb		3471057	0					
ANR	3472574	ArgumentList	0x78 + -- r		3471057	1					
ANR	3472575	Argument	0x78 + -- r		3471057	0					
ANR	3472576	AdditiveExpression	0x78 + -- r		3471057	0		+			
ANR	3472577	PrimaryExpression	0x78		3471057	0					
ANR	3472578	UnaryExpression	-- r		3471057	1					
ANR	3472579	IncDec	--		3471057	0					
ANR	3472580	Identifier	r		3471057	1					
ANR	3472581	BreakStatement	break ;	1129:4:23257:23262	3471057	21	True				
ANR	3472582	Label	case ldB :	1130:3:23267:23275	3471057	22	True				
ANR	3472583	Identifier	ldB		3471057	0					
ANR	3472584	Label	case ldC :	1131:3:23280:23288	3471057	23	True				
ANR	3472585	Identifier	ldC		3471057	0					
ANR	3472586	Label	case ldD :	1132:3:23293:23301	3471057	24	True				
ANR	3472587	Identifier	ldD		3471057	0					
ANR	3472588	Label	case ldE :	1133:3:23306:23314	3471057	25	True				
ANR	3472589	Identifier	ldE		3471057	0					
ANR	3472590	Label	case ldH :	1134:3:23319:23327	3471057	26	True				
ANR	3472591	Identifier	ldH		3471057	0					
ANR	3472592	Label	case ldL :	1135:3:23332:23340	3471057	27	True				
ANR	3472593	Identifier	ldL		3471057	0					
ANR	3472594	IfStatement	if ( ! ( s = rd_ldbcdehla ( & ptr ) ) )		3471057	28					
ANR	3472595	Condition	! ( s = rd_ldbcdehla ( & ptr ) )	1136:8:23350:23375	3471057	0	True				
ANR	3472596	UnaryOperationExpression	! ( s = rd_ldbcdehla ( & ptr ) )		3471057	0					
ANR	3472597	UnaryOperator	!		3471057	0					
ANR	3472598	AssignmentExpression	s = rd_ldbcdehla ( & ptr )		3471057	1		=			
ANR	3472599	Identifier	s		3471057	0					
ANR	3472600	CallExpression	rd_ldbcdehla ( & ptr )		3471057	1					
ANR	3472601	Callee	rd_ldbcdehla		3471057	0					
ANR	3472602	Identifier	rd_ldbcdehla		3471057	0					
ANR	3472603	ArgumentList	& ptr		3471057	1					
ANR	3472604	Argument	& ptr		3471057	0					
ANR	3472605	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472606	UnaryOperator	&		3471057	0					
ANR	3472607	Identifier	ptr		3471057	1					
ANR	3472608	CompoundStatement		326:36:5464:5464	3471057	1					
ANR	3472609	BreakStatement	break ;	1137:5:23385:23390	3471057	0	True				
ANR	3472610	ExpressionStatement	wrtb ( 0x40 + 0x08 * ( r - 7 ) + ( s - 1 ) )	1139:4:23402:23440	3471057	29	True				
ANR	3472611	CallExpression	wrtb ( 0x40 + 0x08 * ( r - 7 ) + ( s - 1 ) )		3471057	0					
ANR	3472612	Callee	wrtb		3471057	0					
ANR	3472613	Identifier	wrtb		3471057	0					
ANR	3472614	ArgumentList	0x40 + 0x08 * ( r - 7 ) + ( s - 1 )		3471057	1					
ANR	3472615	Argument	0x40 + 0x08 * ( r - 7 ) + ( s - 1 )		3471057	0					
ANR	3472616	AdditiveExpression	0x40 + 0x08 * ( r - 7 ) + ( s - 1 )		3471057	0		+			
ANR	3472617	PrimaryExpression	0x40		3471057	0					
ANR	3472618	AdditiveExpression	0x08 * ( r - 7 ) + ( s - 1 )		3471057	1		+			
ANR	3472619	MultiplicativeExpression	0x08 * ( r - 7 )		3471057	0		*			
ANR	3472620	PrimaryExpression	0x08		3471057	0					
ANR	3472621	AdditiveExpression	r - 7		3471057	1		-			
ANR	3472622	Identifier	r		3471057	0					
ANR	3472623	PrimaryExpression	7		3471057	1					
ANR	3472624	AdditiveExpression	s - 1		3471057	1		-			
ANR	3472625	Identifier	s		3471057	0					
ANR	3472626	PrimaryExpression	1		3471057	1					
ANR	3472627	BreakStatement	break ;	1140:4:23446:23451	3471057	30	True				
ANR	3472628	Label	case ldBC :	1141:3:23456:23465	3471057	31	True				
ANR	3472629	Identifier	ldBC		3471057	0					
ANR	3472630	Label	case ldDE :	1142:3:23470:23479	3471057	32	True				
ANR	3472631	Identifier	ldDE		3471057	0					
ANR	3472632	ExpressionStatement	s = rd_nn_nn ( & ptr )	1143:4:23485:23504	3471057	33	True				
ANR	3472633	AssignmentExpression	s = rd_nn_nn ( & ptr )		3471057	0		=			
ANR	3472634	Identifier	s		3471057	0					
ANR	3472635	CallExpression	rd_nn_nn ( & ptr )		3471057	1					
ANR	3472636	Callee	rd_nn_nn		3471057	0					
ANR	3472637	Identifier	rd_nn_nn		3471057	0					
ANR	3472638	ArgumentList	& ptr		3471057	1					
ANR	3472639	Argument	& ptr		3471057	0					
ANR	3472640	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472641	UnaryOperator	&		3471057	0					
ANR	3472642	Identifier	ptr		3471057	1					
ANR	3472643	IfStatement	if ( s == _NN )		3471057	34					
ANR	3472644	Condition	s == _NN	1144:8:23514:23521	3471057	0	True				
ANR	3472645	EqualityExpression	s == _NN		3471057	0		==			
ANR	3472646	Identifier	s		3471057	0					
ANR	3472647	Identifier	_NN		3471057	1					
ANR	3472648	CompoundStatement		334:18:5610:5610	3471057	1					
ANR	3472649	ExpressionStatement	wrtb ( 0xED )	1145:5:23531:23542	3471057	0	True				
ANR	3472650	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472651	Callee	wrtb		3471057	0					
ANR	3472652	Identifier	wrtb		3471057	0					
ANR	3472653	ArgumentList	0xED		3471057	1					
ANR	3472654	Argument	0xED		3471057	0					
ANR	3472655	PrimaryExpression	0xED		3471057	0					
ANR	3472656	ExpressionStatement	wrtb ( 0x4B + 0x10 * ( r == ldDE ) )	1146:5:23549:23581	3471057	1	True				
ANR	3472657	CallExpression	wrtb ( 0x4B + 0x10 * ( r == ldDE ) )		3471057	0					
ANR	3472658	Callee	wrtb		3471057	0					
ANR	3472659	Identifier	wrtb		3471057	0					
ANR	3472660	ArgumentList	0x4B + 0x10 * ( r == ldDE )		3471057	1					
ANR	3472661	Argument	0x4B + 0x10 * ( r == ldDE )		3471057	0					
ANR	3472662	AdditiveExpression	0x4B + 0x10 * ( r == ldDE )		3471057	0		+			
ANR	3472663	PrimaryExpression	0x4B		3471057	0					
ANR	3472664	MultiplicativeExpression	0x10 * ( r == ldDE )		3471057	1		*			
ANR	3472665	PrimaryExpression	0x10		3471057	0					
ANR	3472666	EqualityExpression	r == ldDE		3471057	1		==			
ANR	3472667	Identifier	r		3471057	0					
ANR	3472668	Identifier	ldDE		3471057	1					
ANR	3472669	BreakStatement	break ;	1147:5:23588:23593	3471057	2	True				
ANR	3472670	ExpressionStatement	wrtb ( 0x01 + ( r == ldDE ) * 0x10 )	1149:4:23605:23637	3471057	35	True				
ANR	3472671	CallExpression	wrtb ( 0x01 + ( r == ldDE ) * 0x10 )		3471057	0					
ANR	3472672	Callee	wrtb		3471057	0					
ANR	3472673	Identifier	wrtb		3471057	0					
ANR	3472674	ArgumentList	0x01 + ( r == ldDE ) * 0x10		3471057	1					
ANR	3472675	Argument	0x01 + ( r == ldDE ) * 0x10		3471057	0					
ANR	3472676	AdditiveExpression	0x01 + ( r == ldDE ) * 0x10		3471057	0		+			
ANR	3472677	PrimaryExpression	0x01		3471057	0					
ANR	3472678	MultiplicativeExpression	( r == ldDE ) * 0x10		3471057	1		*			
ANR	3472679	EqualityExpression	r == ldDE		3471057	0		==			
ANR	3472680	Identifier	r		3471057	0					
ANR	3472681	Identifier	ldDE		3471057	1					
ANR	3472682	PrimaryExpression	0x10		3471057	1					
ANR	3472683	BreakStatement	break ;	1150:4:23643:23648	3471057	36	True				
ANR	3472684	Label	case ldHL :	1151:3:23653:23662	3471057	37	True				
ANR	3472685	Identifier	ldHL		3471057	0					
ANR	3472686	ExpressionStatement	r = rd_nn_nn ( & ptr )	1152:4:23668:23687	3471057	38	True				
ANR	3472687	AssignmentExpression	r = rd_nn_nn ( & ptr )		3471057	0		=			
ANR	3472688	Identifier	r		3471057	0					
ANR	3472689	CallExpression	rd_nn_nn ( & ptr )		3471057	1					
ANR	3472690	Callee	rd_nn_nn		3471057	0					
ANR	3472691	Identifier	rd_nn_nn		3471057	0					
ANR	3472692	ArgumentList	& ptr		3471057	1					
ANR	3472693	Argument	& ptr		3471057	0					
ANR	3472694	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472695	UnaryOperator	&		3471057	0					
ANR	3472696	Identifier	ptr		3471057	1					
ANR	3472697	ExpressionStatement	wrtb ( 0x21 + ( r == _NN ) * 9 )	1153:4:23693:23721	3471057	39	True				
ANR	3472698	CallExpression	wrtb ( 0x21 + ( r == _NN ) * 9 )		3471057	0					
ANR	3472699	Callee	wrtb		3471057	0					
ANR	3472700	Identifier	wrtb		3471057	0					
ANR	3472701	ArgumentList	0x21 + ( r == _NN ) * 9		3471057	1					
ANR	3472702	Argument	0x21 + ( r == _NN ) * 9		3471057	0					
ANR	3472703	AdditiveExpression	0x21 + ( r == _NN ) * 9		3471057	0		+			
ANR	3472704	PrimaryExpression	0x21		3471057	0					
ANR	3472705	MultiplicativeExpression	( r == _NN ) * 9		3471057	1		*			
ANR	3472706	EqualityExpression	r == _NN		3471057	0		==			
ANR	3472707	Identifier	r		3471057	0					
ANR	3472708	Identifier	_NN		3471057	1					
ANR	3472709	PrimaryExpression	9		3471057	1					
ANR	3472710	BreakStatement	break ;	1154:4:23727:23732	3471057	40	True				
ANR	3472711	Label	case ldI :	1155:3:23737:23745	3471057	41	True				
ANR	3472712	Identifier	ldI		3471057	0					
ANR	3472713	Label	case ldR :	1156:3:23750:23758	3471057	42	True				
ANR	3472714	Identifier	ldR		3471057	0					
ANR	3472715	IfStatement	if ( ! rd_a ( & ptr ) )		3471057	43					
ANR	3472716	Condition	! rd_a ( & ptr )	1157:8:23768:23779	3471057	0	True				
ANR	3472717	UnaryOperationExpression	! rd_a ( & ptr )		3471057	0					
ANR	3472718	UnaryOperator	!		3471057	0					
ANR	3472719	CallExpression	rd_a ( & ptr )		3471057	1					
ANR	3472720	Callee	rd_a		3471057	0					
ANR	3472721	Identifier	rd_a		3471057	0					
ANR	3472722	ArgumentList	& ptr		3471057	1					
ANR	3472723	Argument	& ptr		3471057	0					
ANR	3472724	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472725	UnaryOperator	&		3471057	0					
ANR	3472726	Identifier	ptr		3471057	1					
ANR	3472727	CompoundStatement		347:22:5868:5868	3471057	1					
ANR	3472728	BreakStatement	break ;	1158:5:23789:23794	3471057	0	True				
ANR	3472729	ExpressionStatement	wrtb ( 0xED )	1160:4:23806:23817	3471057	44	True				
ANR	3472730	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472731	Callee	wrtb		3471057	0					
ANR	3472732	Identifier	wrtb		3471057	0					
ANR	3472733	ArgumentList	0xED		3471057	1					
ANR	3472734	Argument	0xED		3471057	0					
ANR	3472735	PrimaryExpression	0xED		3471057	0					
ANR	3472736	ExpressionStatement	wrtb ( 0x47 + 0x08 * ( r == ldR ) )	1161:4:23823:23854	3471057	45	True				
ANR	3472737	CallExpression	wrtb ( 0x47 + 0x08 * ( r == ldR ) )		3471057	0					
ANR	3472738	Callee	wrtb		3471057	0					
ANR	3472739	Identifier	wrtb		3471057	0					
ANR	3472740	ArgumentList	0x47 + 0x08 * ( r == ldR )		3471057	1					
ANR	3472741	Argument	0x47 + 0x08 * ( r == ldR )		3471057	0					
ANR	3472742	AdditiveExpression	0x47 + 0x08 * ( r == ldR )		3471057	0		+			
ANR	3472743	PrimaryExpression	0x47		3471057	0					
ANR	3472744	MultiplicativeExpression	0x08 * ( r == ldR )		3471057	1		*			
ANR	3472745	PrimaryExpression	0x08		3471057	0					
ANR	3472746	EqualityExpression	r == ldR		3471057	1		==			
ANR	3472747	Identifier	r		3471057	0					
ANR	3472748	Identifier	ldR		3471057	1					
ANR	3472749	BreakStatement	break ;	1162:4:23860:23865	3471057	46	True				
ANR	3472750	Label	case ldSP :	1163:3:23870:23879	3471057	47	True				
ANR	3472751	Identifier	ldSP		3471057	0					
ANR	3472752	ExpressionStatement	r = rd_sp ( & ptr )	1164:4:23885:23901	3471057	48	True				
ANR	3472753	AssignmentExpression	r = rd_sp ( & ptr )		3471057	0		=			
ANR	3472754	Identifier	r		3471057	0					
ANR	3472755	CallExpression	rd_sp ( & ptr )		3471057	1					
ANR	3472756	Callee	rd_sp		3471057	0					
ANR	3472757	Identifier	rd_sp		3471057	0					
ANR	3472758	ArgumentList	& ptr		3471057	1					
ANR	3472759	Argument	& ptr		3471057	0					
ANR	3472760	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472761	UnaryOperator	&		3471057	0					
ANR	3472762	Identifier	ptr		3471057	1					
ANR	3472763	IfStatement	if ( r == SPHL )		3471057	49					
ANR	3472764	Condition	r == SPHL	1165:8:23911:23919	3471057	0	True				
ANR	3472765	EqualityExpression	r == SPHL		3471057	0		==			
ANR	3472766	Identifier	r		3471057	0					
ANR	3472767	Identifier	SPHL		3471057	1					
ANR	3472768	CompoundStatement		355:19:6008:6008	3471057	1					
ANR	3472769	ExpressionStatement	wrtb ( 0xF9 )	1166:5:23929:23940	3471057	0	True				
ANR	3472770	CallExpression	wrtb ( 0xF9 )		3471057	0					
ANR	3472771	Callee	wrtb		3471057	0					
ANR	3472772	Identifier	wrtb		3471057	0					
ANR	3472773	ArgumentList	0xF9		3471057	1					
ANR	3472774	Argument	0xF9		3471057	0					
ANR	3472775	PrimaryExpression	0xF9		3471057	0					
ANR	3472776	BreakStatement	break ;	1167:5:23947:23952	3471057	1	True				
ANR	3472777	IfStatement	if ( r == SPNN )		3471057	50					
ANR	3472778	Condition	r == SPNN	1169:8:23968:23976	3471057	0	True				
ANR	3472779	EqualityExpression	r == SPNN		3471057	0		==			
ANR	3472780	Identifier	r		3471057	0					
ANR	3472781	Identifier	SPNN		3471057	1					
ANR	3472782	CompoundStatement		359:19:6065:6065	3471057	1					
ANR	3472783	ExpressionStatement	wrtb ( 0x31 )	1170:5:23986:23997	3471057	0	True				
ANR	3472784	CallExpression	wrtb ( 0x31 )		3471057	0					
ANR	3472785	Callee	wrtb		3471057	0					
ANR	3472786	Identifier	wrtb		3471057	0					
ANR	3472787	ArgumentList	0x31		3471057	1					
ANR	3472788	Argument	0x31		3471057	0					
ANR	3472789	PrimaryExpression	0x31		3471057	0					
ANR	3472790	BreakStatement	break ;	1171:5:24004:24009	3471057	1	True				
ANR	3472791	ExpressionStatement	wrtb ( 0xED )	1173:4:24021:24032	3471057	51	True				
ANR	3472792	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472793	Callee	wrtb		3471057	0					
ANR	3472794	Identifier	wrtb		3471057	0					
ANR	3472795	ArgumentList	0xED		3471057	1					
ANR	3472796	Argument	0xED		3471057	0					
ANR	3472797	PrimaryExpression	0xED		3471057	0					
ANR	3472798	ExpressionStatement	wrtb ( 0x7B )	1174:4:24038:24049	3471057	52	True				
ANR	3472799	CallExpression	wrtb ( 0x7B )		3471057	0					
ANR	3472800	Callee	wrtb		3471057	0					
ANR	3472801	Identifier	wrtb		3471057	0					
ANR	3472802	ArgumentList	0x7B		3471057	1					
ANR	3472803	Argument	0x7B		3471057	0					
ANR	3472804	PrimaryExpression	0x7B		3471057	0					
ANR	3472805	BreakStatement	break ;	1175:4:24055:24060	3471057	53	True				
ANR	3472806	BreakStatement	break ;	1177:3:24070:24075	3471057	125	True				
ANR	3472807	Label	case Z80_LDD :	1178:2:24079:24091	3471057	126	True				
ANR	3472808	Identifier	Z80_LDD		3471057	0					
ANR	3472809	ExpressionStatement	wrtb ( 0xED )	1179:3:24096:24107	3471057	127	True				
ANR	3472810	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472811	Callee	wrtb		3471057	0					
ANR	3472812	Identifier	wrtb		3471057	0					
ANR	3472813	ArgumentList	0xED		3471057	1					
ANR	3472814	Argument	0xED		3471057	0					
ANR	3472815	PrimaryExpression	0xED		3471057	0					
ANR	3472816	ExpressionStatement	wrtb ( 0xA8 )	1180:3:24112:24123	3471057	128	True				
ANR	3472817	CallExpression	wrtb ( 0xA8 )		3471057	0					
ANR	3472818	Callee	wrtb		3471057	0					
ANR	3472819	Identifier	wrtb		3471057	0					
ANR	3472820	ArgumentList	0xA8		3471057	1					
ANR	3472821	Argument	0xA8		3471057	0					
ANR	3472822	PrimaryExpression	0xA8		3471057	0					
ANR	3472823	BreakStatement	break ;	1181:3:24128:24133	3471057	129	True				
ANR	3472824	Label	case Z80_LDDR :	1182:2:24137:24150	3471057	130	True				
ANR	3472825	Identifier	Z80_LDDR		3471057	0					
ANR	3472826	ExpressionStatement	wrtb ( 0xED )	1183:3:24155:24166	3471057	131	True				
ANR	3472827	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472828	Callee	wrtb		3471057	0					
ANR	3472829	Identifier	wrtb		3471057	0					
ANR	3472830	ArgumentList	0xED		3471057	1					
ANR	3472831	Argument	0xED		3471057	0					
ANR	3472832	PrimaryExpression	0xED		3471057	0					
ANR	3472833	ExpressionStatement	wrtb ( 0xB8 )	1184:3:24171:24182	3471057	132	True				
ANR	3472834	CallExpression	wrtb ( 0xB8 )		3471057	0					
ANR	3472835	Callee	wrtb		3471057	0					
ANR	3472836	Identifier	wrtb		3471057	0					
ANR	3472837	ArgumentList	0xB8		3471057	1					
ANR	3472838	Argument	0xB8		3471057	0					
ANR	3472839	PrimaryExpression	0xB8		3471057	0					
ANR	3472840	BreakStatement	break ;	1185:3:24187:24192	3471057	133	True				
ANR	3472841	Label	case Z80_LDI :	1186:2:24196:24208	3471057	134	True				
ANR	3472842	Identifier	Z80_LDI		3471057	0					
ANR	3472843	ExpressionStatement	wrtb ( 0xED )	1187:3:24213:24224	3471057	135	True				
ANR	3472844	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472845	Callee	wrtb		3471057	0					
ANR	3472846	Identifier	wrtb		3471057	0					
ANR	3472847	ArgumentList	0xED		3471057	1					
ANR	3472848	Argument	0xED		3471057	0					
ANR	3472849	PrimaryExpression	0xED		3471057	0					
ANR	3472850	ExpressionStatement	wrtb ( 0xA0 )	1188:3:24229:24240	3471057	136	True				
ANR	3472851	CallExpression	wrtb ( 0xA0 )		3471057	0					
ANR	3472852	Callee	wrtb		3471057	0					
ANR	3472853	Identifier	wrtb		3471057	0					
ANR	3472854	ArgumentList	0xA0		3471057	1					
ANR	3472855	Argument	0xA0		3471057	0					
ANR	3472856	PrimaryExpression	0xA0		3471057	0					
ANR	3472857	BreakStatement	break ;	1189:3:24245:24250	3471057	137	True				
ANR	3472858	Label	case Z80_LDIR :	1190:2:24254:24267	3471057	138	True				
ANR	3472859	Identifier	Z80_LDIR		3471057	0					
ANR	3472860	ExpressionStatement	wrtb ( 0xED )	1191:3:24272:24283	3471057	139	True				
ANR	3472861	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472862	Callee	wrtb		3471057	0					
ANR	3472863	Identifier	wrtb		3471057	0					
ANR	3472864	ArgumentList	0xED		3471057	1					
ANR	3472865	Argument	0xED		3471057	0					
ANR	3472866	PrimaryExpression	0xED		3471057	0					
ANR	3472867	ExpressionStatement	wrtb ( 0xB0 )	1192:3:24288:24299	3471057	140	True				
ANR	3472868	CallExpression	wrtb ( 0xB0 )		3471057	0					
ANR	3472869	Callee	wrtb		3471057	0					
ANR	3472870	Identifier	wrtb		3471057	0					
ANR	3472871	ArgumentList	0xB0		3471057	1					
ANR	3472872	Argument	0xB0		3471057	0					
ANR	3472873	PrimaryExpression	0xB0		3471057	0					
ANR	3472874	BreakStatement	break ;	1193:3:24304:24309	3471057	141	True				
ANR	3472875	Label	case Z80_NEG :	1194:2:24313:24325	3471057	142	True				
ANR	3472876	Identifier	Z80_NEG		3471057	0					
ANR	3472877	ExpressionStatement	wrtb ( 0xED )	1195:3:24330:24341	3471057	143	True				
ANR	3472878	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472879	Callee	wrtb		3471057	0					
ANR	3472880	Identifier	wrtb		3471057	0					
ANR	3472881	ArgumentList	0xED		3471057	1					
ANR	3472882	Argument	0xED		3471057	0					
ANR	3472883	PrimaryExpression	0xED		3471057	0					
ANR	3472884	ExpressionStatement	wrtb ( 0x44 )	1196:3:24346:24357	3471057	144	True				
ANR	3472885	CallExpression	wrtb ( 0x44 )		3471057	0					
ANR	3472886	Callee	wrtb		3471057	0					
ANR	3472887	Identifier	wrtb		3471057	0					
ANR	3472888	ArgumentList	0x44		3471057	1					
ANR	3472889	Argument	0x44		3471057	0					
ANR	3472890	PrimaryExpression	0x44		3471057	0					
ANR	3472891	BreakStatement	break ;	1197:3:24362:24367	3471057	145	True				
ANR	3472892	Label	case Z80_NOP :	1198:2:24371:24383	3471057	146	True				
ANR	3472893	Identifier	Z80_NOP		3471057	0					
ANR	3472894	ExpressionStatement	wrtb ( 0x00 )	1199:3:24388:24399	3471057	147	True				
ANR	3472895	CallExpression	wrtb ( 0x00 )		3471057	0					
ANR	3472896	Callee	wrtb		3471057	0					
ANR	3472897	Identifier	wrtb		3471057	0					
ANR	3472898	ArgumentList	0x00		3471057	1					
ANR	3472899	Argument	0x00		3471057	0					
ANR	3472900	PrimaryExpression	0x00		3471057	0					
ANR	3472901	BreakStatement	break ;	1200:3:24404:24409	3471057	148	True				
ANR	3472902	Label	case Z80_OR :	1201:2:24413:24424	3471057	149	True				
ANR	3472903	Identifier	Z80_OR		3471057	0					
ANR	3472904	IfStatement	if ( ! ( r = rd_r ( & ptr ) ) )		3471057	150					
ANR	3472905	Condition	! ( r = rd_r ( & ptr ) )	1202:7:24433:24450	3471057	0	True				
ANR	3472906	UnaryOperationExpression	! ( r = rd_r ( & ptr ) )		3471057	0					
ANR	3472907	UnaryOperator	!		3471057	0					
ANR	3472908	AssignmentExpression	r = rd_r ( & ptr )		3471057	1		=			
ANR	3472909	Identifier	r		3471057	0					
ANR	3472910	CallExpression	rd_r ( & ptr )		3471057	1					
ANR	3472911	Callee	rd_r		3471057	0					
ANR	3472912	Identifier	rd_r		3471057	0					
ANR	3472913	ArgumentList	& ptr		3471057	1					
ANR	3472914	Argument	& ptr		3471057	0					
ANR	3472915	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472916	UnaryOperator	&		3471057	0					
ANR	3472917	Identifier	ptr		3471057	1					
ANR	3472918	CompoundStatement		392:27:6539:6539	3471057	1					
ANR	3472919	BreakStatement	break ;	1203:4:24459:24464	3471057	0	True				
ANR	3472920	ExpressionStatement	wrtb ( 0xB0 + -- r )	1205:3:24474:24491	3471057	151	True				
ANR	3472921	CallExpression	wrtb ( 0xB0 + -- r )		3471057	0					
ANR	3472922	Callee	wrtb		3471057	0					
ANR	3472923	Identifier	wrtb		3471057	0					
ANR	3472924	ArgumentList	0xB0 + -- r		3471057	1					
ANR	3472925	Argument	0xB0 + -- r		3471057	0					
ANR	3472926	AdditiveExpression	0xB0 + -- r		3471057	0		+			
ANR	3472927	PrimaryExpression	0xB0		3471057	0					
ANR	3472928	UnaryExpression	-- r		3471057	1					
ANR	3472929	IncDec	--		3471057	0					
ANR	3472930	Identifier	r		3471057	1					
ANR	3472931	BreakStatement	break ;	1206:3:24496:24501	3471057	152	True				
ANR	3472932	Label	case Z80_OTDR :	1207:2:24505:24518	3471057	153	True				
ANR	3472933	Identifier	Z80_OTDR		3471057	0					
ANR	3472934	ExpressionStatement	wrtb ( 0xED )	1208:3:24523:24534	3471057	154	True				
ANR	3472935	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472936	Callee	wrtb		3471057	0					
ANR	3472937	Identifier	wrtb		3471057	0					
ANR	3472938	ArgumentList	0xED		3471057	1					
ANR	3472939	Argument	0xED		3471057	0					
ANR	3472940	PrimaryExpression	0xED		3471057	0					
ANR	3472941	ExpressionStatement	wrtb ( 0xBB )	1209:3:24539:24550	3471057	155	True				
ANR	3472942	CallExpression	wrtb ( 0xBB )		3471057	0					
ANR	3472943	Callee	wrtb		3471057	0					
ANR	3472944	Identifier	wrtb		3471057	0					
ANR	3472945	ArgumentList	0xBB		3471057	1					
ANR	3472946	Argument	0xBB		3471057	0					
ANR	3472947	PrimaryExpression	0xBB		3471057	0					
ANR	3472948	BreakStatement	break ;	1210:3:24555:24560	3471057	156	True				
ANR	3472949	Label	case Z80_OTIR :	1211:2:24564:24577	3471057	157	True				
ANR	3472950	Identifier	Z80_OTIR		3471057	0					
ANR	3472951	ExpressionStatement	wrtb ( 0xED )	1212:3:24582:24593	3471057	158	True				
ANR	3472952	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3472953	Callee	wrtb		3471057	0					
ANR	3472954	Identifier	wrtb		3471057	0					
ANR	3472955	ArgumentList	0xED		3471057	1					
ANR	3472956	Argument	0xED		3471057	0					
ANR	3472957	PrimaryExpression	0xED		3471057	0					
ANR	3472958	ExpressionStatement	wrtb ( 0xB3 )	1213:3:24598:24609	3471057	159	True				
ANR	3472959	CallExpression	wrtb ( 0xB3 )		3471057	0					
ANR	3472960	Callee	wrtb		3471057	0					
ANR	3472961	Identifier	wrtb		3471057	0					
ANR	3472962	ArgumentList	0xB3		3471057	1					
ANR	3472963	Argument	0xB3		3471057	0					
ANR	3472964	PrimaryExpression	0xB3		3471057	0					
ANR	3472965	BreakStatement	break ;	1214:3:24614:24619	3471057	160	True				
ANR	3472966	Label	case Z80_OUT :	1215:2:24623:24635	3471057	161	True				
ANR	3472967	Identifier	Z80_OUT		3471057	0					
ANR	3472968	IfStatement	if ( ! ( r = rd_nnc ( & ptr ) ) )		3471057	162					
ANR	3472969	Condition	! ( r = rd_nnc ( & ptr ) )	1216:7:24644:24663	3471057	0	True				
ANR	3472970	UnaryOperationExpression	! ( r = rd_nnc ( & ptr ) )		3471057	0					
ANR	3472971	UnaryOperator	!		3471057	0					
ANR	3472972	AssignmentExpression	r = rd_nnc ( & ptr )		3471057	1		=			
ANR	3472973	Identifier	r		3471057	0					
ANR	3472974	CallExpression	rd_nnc ( & ptr )		3471057	1					
ANR	3472975	Callee	rd_nnc		3471057	0					
ANR	3472976	Identifier	rd_nnc		3471057	0					
ANR	3472977	ArgumentList	& ptr		3471057	1					
ANR	3472978	Argument	& ptr		3471057	0					
ANR	3472979	UnaryOperationExpression	& ptr		3471057	0					
ANR	3472980	UnaryOperator	&		3471057	0					
ANR	3472981	Identifier	ptr		3471057	1					
ANR	3472982	CompoundStatement		406:29:6752:6752	3471057	1					
ANR	3472983	BreakStatement	break ;	1217:4:24672:24677	3471057	0	True				
ANR	3472984	IfStatement	if ( r == C )		3471057	163					
ANR	3472985	Condition	r == C	1219:7:24691:24696	3471057	0	True				
ANR	3472986	EqualityExpression	r == C		3471057	0		==			
ANR	3472987	Identifier	r		3471057	0					
ANR	3472988	Identifier	C		3471057	1					
ANR	3472989	CompoundStatement		409:15:6785:6785	3471057	1					
ANR	3472990	IfStatement	if ( ! ( r = rd_out ( & ptr ) ) )		3471057	0					
ANR	3472991	Condition	! ( r = rd_out ( & ptr ) )	1220:8:24709:24728	3471057	0	True				
ANR	3472992	UnaryOperationExpression	! ( r = rd_out ( & ptr ) )		3471057	0					
ANR	3472993	UnaryOperator	!		3471057	0					
ANR	3472994	AssignmentExpression	r = rd_out ( & ptr )		3471057	1		=			
ANR	3472995	Identifier	r		3471057	0					
ANR	3472996	CallExpression	rd_out ( & ptr )		3471057	1					
ANR	3472997	Callee	rd_out		3471057	0					
ANR	3472998	Identifier	rd_out		3471057	0					
ANR	3472999	ArgumentList	& ptr		3471057	1					
ANR	3473000	Argument	& ptr		3471057	0					
ANR	3473001	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473002	UnaryOperator	&		3471057	0					
ANR	3473003	Identifier	ptr		3471057	1					
ANR	3473004	CompoundStatement		410:30:6817:6817	3471057	1					
ANR	3473005	BreakStatement	break ;	1221:5:24738:24743	3471057	0	True				
ANR	3473006	ExpressionStatement	wrtb ( 0xED )	1223:4:24755:24766	3471057	1	True				
ANR	3473007	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3473008	Callee	wrtb		3471057	0					
ANR	3473009	Identifier	wrtb		3471057	0					
ANR	3473010	ArgumentList	0xED		3471057	1					
ANR	3473011	Argument	0xED		3471057	0					
ANR	3473012	PrimaryExpression	0xED		3471057	0					
ANR	3473013	ExpressionStatement	wrtb ( 0x41 + 8 * -- r )	1224:4:24772:24793	3471057	2	True				
ANR	3473014	CallExpression	wrtb ( 0x41 + 8 * -- r )		3471057	0					
ANR	3473015	Callee	wrtb		3471057	0					
ANR	3473016	Identifier	wrtb		3471057	0					
ANR	3473017	ArgumentList	0x41 + 8 * -- r		3471057	1					
ANR	3473018	Argument	0x41 + 8 * -- r		3471057	0					
ANR	3473019	AdditiveExpression	0x41 + 8 * -- r		3471057	0		+			
ANR	3473020	PrimaryExpression	0x41		3471057	0					
ANR	3473021	MultiplicativeExpression	8 * -- r		3471057	1		*			
ANR	3473022	PrimaryExpression	8		3471057	0					
ANR	3473023	UnaryExpression	-- r		3471057	1					
ANR	3473024	IncDec	--		3471057	0					
ANR	3473025	Identifier	r		3471057	1					
ANR	3473026	BreakStatement	break ;	1225:4:24799:24804	3471057	3	True				
ANR	3473027	IfStatement	if ( ! rd_a ( & ptr ) )		3471057	164					
ANR	3473028	Condition	! rd_a ( & ptr )	1227:7:24818:24829	3471057	0	True				
ANR	3473029	UnaryOperationExpression	! rd_a ( & ptr )		3471057	0					
ANR	3473030	UnaryOperator	!		3471057	0					
ANR	3473031	CallExpression	rd_a ( & ptr )		3471057	1					
ANR	3473032	Callee	rd_a		3471057	0					
ANR	3473033	Identifier	rd_a		3471057	0					
ANR	3473034	ArgumentList	& ptr		3471057	1					
ANR	3473035	Argument	& ptr		3471057	0					
ANR	3473036	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473037	UnaryOperator	&		3471057	0					
ANR	3473038	Identifier	ptr		3471057	1					
ANR	3473039	CompoundStatement		417:21:6918:6918	3471057	1					
ANR	3473040	BreakStatement	break ;	1228:4:24838:24843	3471057	0	True				
ANR	3473041	ExpressionStatement	wrtb ( 0xD3 )	1230:3:24853:24864	3471057	165	True				
ANR	3473042	CallExpression	wrtb ( 0xD3 )		3471057	0					
ANR	3473043	Callee	wrtb		3471057	0					
ANR	3473044	Identifier	wrtb		3471057	0					
ANR	3473045	ArgumentList	0xD3		3471057	1					
ANR	3473046	Argument	0xD3		3471057	0					
ANR	3473047	PrimaryExpression	0xD3		3471057	0					
ANR	3473048	BreakStatement	break ;	1231:3:24869:24874	3471057	166	True				
ANR	3473049	Label	case Z80_OUTD :	1232:2:24878:24891	3471057	167	True				
ANR	3473050	Identifier	Z80_OUTD		3471057	0					
ANR	3473051	ExpressionStatement	wrtb ( 0xED )	1233:3:24896:24907	3471057	168	True				
ANR	3473052	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3473053	Callee	wrtb		3471057	0					
ANR	3473054	Identifier	wrtb		3471057	0					
ANR	3473055	ArgumentList	0xED		3471057	1					
ANR	3473056	Argument	0xED		3471057	0					
ANR	3473057	PrimaryExpression	0xED		3471057	0					
ANR	3473058	ExpressionStatement	wrtb ( 0xAB )	1234:3:24912:24923	3471057	169	True				
ANR	3473059	CallExpression	wrtb ( 0xAB )		3471057	0					
ANR	3473060	Callee	wrtb		3471057	0					
ANR	3473061	Identifier	wrtb		3471057	0					
ANR	3473062	ArgumentList	0xAB		3471057	1					
ANR	3473063	Argument	0xAB		3471057	0					
ANR	3473064	PrimaryExpression	0xAB		3471057	0					
ANR	3473065	BreakStatement	break ;	1235:3:24928:24933	3471057	170	True				
ANR	3473066	Label	case Z80_OUTI :	1236:2:24937:24950	3471057	171	True				
ANR	3473067	Identifier	Z80_OUTI		3471057	0					
ANR	3473068	ExpressionStatement	wrtb ( 0xED )	1237:3:24955:24966	3471057	172	True				
ANR	3473069	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3473070	Callee	wrtb		3471057	0					
ANR	3473071	Identifier	wrtb		3471057	0					
ANR	3473072	ArgumentList	0xED		3471057	1					
ANR	3473073	Argument	0xED		3471057	0					
ANR	3473074	PrimaryExpression	0xED		3471057	0					
ANR	3473075	ExpressionStatement	wrtb ( 0xA3 )	1238:3:24971:24982	3471057	173	True				
ANR	3473076	CallExpression	wrtb ( 0xA3 )		3471057	0					
ANR	3473077	Callee	wrtb		3471057	0					
ANR	3473078	Identifier	wrtb		3471057	0					
ANR	3473079	ArgumentList	0xA3		3471057	1					
ANR	3473080	Argument	0xA3		3471057	0					
ANR	3473081	PrimaryExpression	0xA3		3471057	0					
ANR	3473082	BreakStatement	break ;	1239:3:24987:24992	3471057	174	True				
ANR	3473083	Label	case Z80_POP :	1240:2:24996:25008	3471057	175	True				
ANR	3473084	Identifier	Z80_POP		3471057	0					
ANR	3473085	IfStatement	if ( ! ( r = rd_stack ( & ptr ) ) )		3471057	176					
ANR	3473086	Condition	! ( r = rd_stack ( & ptr ) )	1241:7:25017:25038	3471057	0	True				
ANR	3473087	UnaryOperationExpression	! ( r = rd_stack ( & ptr ) )		3471057	0					
ANR	3473088	UnaryOperator	!		3471057	0					
ANR	3473089	AssignmentExpression	r = rd_stack ( & ptr )		3471057	1		=			
ANR	3473090	Identifier	r		3471057	0					
ANR	3473091	CallExpression	rd_stack ( & ptr )		3471057	1					
ANR	3473092	Callee	rd_stack		3471057	0					
ANR	3473093	Identifier	rd_stack		3471057	0					
ANR	3473094	ArgumentList	& ptr		3471057	1					
ANR	3473095	Argument	& ptr		3471057	0					
ANR	3473096	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473097	UnaryOperator	&		3471057	0					
ANR	3473098	Identifier	ptr		3471057	1					
ANR	3473099	CompoundStatement		431:31:7127:7127	3471057	1					
ANR	3473100	BreakStatement	break ;	1242:4:25047:25052	3471057	0	True				
ANR	3473101	ExpressionStatement	wrtb ( 0xC1 + 0x10 * -- r )	1244:3:25062:25086	3471057	177	True				
ANR	3473102	CallExpression	wrtb ( 0xC1 + 0x10 * -- r )		3471057	0					
ANR	3473103	Callee	wrtb		3471057	0					
ANR	3473104	Identifier	wrtb		3471057	0					
ANR	3473105	ArgumentList	0xC1 + 0x10 * -- r		3471057	1					
ANR	3473106	Argument	0xC1 + 0x10 * -- r		3471057	0					
ANR	3473107	AdditiveExpression	0xC1 + 0x10 * -- r		3471057	0		+			
ANR	3473108	PrimaryExpression	0xC1		3471057	0					
ANR	3473109	MultiplicativeExpression	0x10 * -- r		3471057	1		*			
ANR	3473110	PrimaryExpression	0x10		3471057	0					
ANR	3473111	UnaryExpression	-- r		3471057	1					
ANR	3473112	IncDec	--		3471057	0					
ANR	3473113	Identifier	r		3471057	1					
ANR	3473114	BreakStatement	break ;	1245:3:25091:25096	3471057	178	True				
ANR	3473115	Label	case Z80_PUSH :	1246:2:25100:25113	3471057	179	True				
ANR	3473116	Identifier	Z80_PUSH		3471057	0					
ANR	3473117	IfStatement	if ( ! ( r = rd_stack ( & ptr ) ) )		3471057	180					
ANR	3473118	Condition	! ( r = rd_stack ( & ptr ) )	1247:7:25122:25143	3471057	0	True				
ANR	3473119	UnaryOperationExpression	! ( r = rd_stack ( & ptr ) )		3471057	0					
ANR	3473120	UnaryOperator	!		3471057	0					
ANR	3473121	AssignmentExpression	r = rd_stack ( & ptr )		3471057	1		=			
ANR	3473122	Identifier	r		3471057	0					
ANR	3473123	CallExpression	rd_stack ( & ptr )		3471057	1					
ANR	3473124	Callee	rd_stack		3471057	0					
ANR	3473125	Identifier	rd_stack		3471057	0					
ANR	3473126	ArgumentList	& ptr		3471057	1					
ANR	3473127	Argument	& ptr		3471057	0					
ANR	3473128	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473129	UnaryOperator	&		3471057	0					
ANR	3473130	Identifier	ptr		3471057	1					
ANR	3473131	CompoundStatement		437:31:7232:7232	3471057	1					
ANR	3473132	BreakStatement	break ;	1248:4:25152:25157	3471057	0	True				
ANR	3473133	ExpressionStatement	wrtb ( 0xC5 + 0x10 * -- r )	1250:3:25167:25191	3471057	181	True				
ANR	3473134	CallExpression	wrtb ( 0xC5 + 0x10 * -- r )		3471057	0					
ANR	3473135	Callee	wrtb		3471057	0					
ANR	3473136	Identifier	wrtb		3471057	0					
ANR	3473137	ArgumentList	0xC5 + 0x10 * -- r		3471057	1					
ANR	3473138	Argument	0xC5 + 0x10 * -- r		3471057	0					
ANR	3473139	AdditiveExpression	0xC5 + 0x10 * -- r		3471057	0		+			
ANR	3473140	PrimaryExpression	0xC5		3471057	0					
ANR	3473141	MultiplicativeExpression	0x10 * -- r		3471057	1		*			
ANR	3473142	PrimaryExpression	0x10		3471057	0					
ANR	3473143	UnaryExpression	-- r		3471057	1					
ANR	3473144	IncDec	--		3471057	0					
ANR	3473145	Identifier	r		3471057	1					
ANR	3473146	BreakStatement	break ;	1251:3:25196:25201	3471057	182	True				
ANR	3473147	Label	case Z80_RES :	1252:2:25205:25217	3471057	183	True				
ANR	3473148	Identifier	Z80_RES		3471057	0					
ANR	3473149	IfStatement	if ( ! rd_0_7 ( & ptr ) )		3471057	184					
ANR	3473150	Condition	! rd_0_7 ( & ptr )	1253:7:25226:25239	3471057	0	True				
ANR	3473151	UnaryOperationExpression	! rd_0_7 ( & ptr )		3471057	0					
ANR	3473152	UnaryOperator	!		3471057	0					
ANR	3473153	CallExpression	rd_0_7 ( & ptr )		3471057	1					
ANR	3473154	Callee	rd_0_7		3471057	0					
ANR	3473155	Identifier	rd_0_7		3471057	0					
ANR	3473156	ArgumentList	& ptr		3471057	1					
ANR	3473157	Argument	& ptr		3471057	0					
ANR	3473158	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473159	UnaryOperator	&		3471057	0					
ANR	3473160	Identifier	ptr		3471057	1					
ANR	3473161	CompoundStatement		443:23:7328:7328	3471057	1					
ANR	3473162	BreakStatement	break ;	1254:4:25248:25253	3471057	0	True				
ANR	3473163	ExpressionStatement	rd_comma ( & ptr )	1256:3:25263:25278	3471057	185	True				
ANR	3473164	CallExpression	rd_comma ( & ptr )		3471057	0					
ANR	3473165	Callee	rd_comma		3471057	0					
ANR	3473166	Identifier	rd_comma		3471057	0					
ANR	3473167	ArgumentList	& ptr		3471057	1					
ANR	3473168	Argument	& ptr		3471057	0					
ANR	3473169	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473170	UnaryOperator	&		3471057	0					
ANR	3473171	Identifier	ptr		3471057	1					
ANR	3473172	IfStatement	if ( ! ( r = rd_r_ ( & ptr ) ) )		3471057	186					
ANR	3473173	Condition	! ( r = rd_r_ ( & ptr ) )	1257:7:25287:25304	3471057	0	True				
ANR	3473174	UnaryOperationExpression	! ( r = rd_r_ ( & ptr ) )		3471057	0					
ANR	3473175	UnaryOperator	!		3471057	0					
ANR	3473176	AssignmentExpression	r = rd_r_ ( & ptr )		3471057	1		=			
ANR	3473177	Identifier	r		3471057	0					
ANR	3473178	CallExpression	rd_r_ ( & ptr )		3471057	1					
ANR	3473179	Callee	rd_r_		3471057	0					
ANR	3473180	Identifier	rd_r_		3471057	0					
ANR	3473181	ArgumentList	& ptr		3471057	1					
ANR	3473182	Argument	& ptr		3471057	0					
ANR	3473183	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473184	UnaryOperator	&		3471057	0					
ANR	3473185	Identifier	ptr		3471057	1					
ANR	3473186	CompoundStatement		447:27:7393:7393	3471057	1					
ANR	3473187	BreakStatement	break ;	1258:4:25313:25318	3471057	0	True				
ANR	3473188	ExpressionStatement	wrtb ( 0xCB )	1260:3:25328:25339	3471057	187	True				
ANR	3473189	CallExpression	wrtb ( 0xCB )		3471057	0					
ANR	3473190	Callee	wrtb		3471057	0					
ANR	3473191	Identifier	wrtb		3471057	0					
ANR	3473192	ArgumentList	0xCB		3471057	1					
ANR	3473193	Argument	0xCB		3471057	0					
ANR	3473194	PrimaryExpression	0xCB		3471057	0					
ANR	3473195	ExpressionStatement	wrtb ( 0x80 + -- r )	1261:3:25344:25361	3471057	188	True				
ANR	3473196	CallExpression	wrtb ( 0x80 + -- r )		3471057	0					
ANR	3473197	Callee	wrtb		3471057	0					
ANR	3473198	Identifier	wrtb		3471057	0					
ANR	3473199	ArgumentList	0x80 + -- r		3471057	1					
ANR	3473200	Argument	0x80 + -- r		3471057	0					
ANR	3473201	AdditiveExpression	0x80 + -- r		3471057	0		+			
ANR	3473202	PrimaryExpression	0x80		3471057	0					
ANR	3473203	UnaryExpression	-- r		3471057	1					
ANR	3473204	IncDec	--		3471057	0					
ANR	3473205	Identifier	r		3471057	1					
ANR	3473206	BreakStatement	break ;	1262:3:25366:25371	3471057	189	True				
ANR	3473207	Label	case Z80_RET :	1263:2:25375:25387	3471057	190	True				
ANR	3473208	Identifier	Z80_RET		3471057	0					
ANR	3473209	IfStatement	if ( ! ( r = rd_cc ( & ptr ) ) )		3471057	191					
ANR	3473210	Condition	! ( r = rd_cc ( & ptr ) )	1264:7:25396:25414	3471057	0	True				
ANR	3473211	UnaryOperationExpression	! ( r = rd_cc ( & ptr ) )		3471057	0					
ANR	3473212	UnaryOperator	!		3471057	0					
ANR	3473213	AssignmentExpression	r = rd_cc ( & ptr )		3471057	1		=			
ANR	3473214	Identifier	r		3471057	0					
ANR	3473215	CallExpression	rd_cc ( & ptr )		3471057	1					
ANR	3473216	Callee	rd_cc		3471057	0					
ANR	3473217	Identifier	rd_cc		3471057	0					
ANR	3473218	ArgumentList	& ptr		3471057	1					
ANR	3473219	Argument	& ptr		3471057	0					
ANR	3473220	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473221	UnaryOperator	&		3471057	0					
ANR	3473222	Identifier	ptr		3471057	1					
ANR	3473223	CompoundStatement		454:28:7503:7503	3471057	1					
ANR	3473224	ExpressionStatement	wrtb ( 0xC9 )	1265:4:25423:25434	3471057	0	True				
ANR	3473225	CallExpression	wrtb ( 0xC9 )		3471057	0					
ANR	3473226	Callee	wrtb		3471057	0					
ANR	3473227	Identifier	wrtb		3471057	0					
ANR	3473228	ArgumentList	0xC9		3471057	1					
ANR	3473229	Argument	0xC9		3471057	0					
ANR	3473230	PrimaryExpression	0xC9		3471057	0					
ANR	3473231	BreakStatement	break ;	1266:4:25440:25445	3471057	1	True				
ANR	3473232	ExpressionStatement	wrtb ( 0xC0 + 8 * -- r )	1268:3:25455:25476	3471057	192	True				
ANR	3473233	CallExpression	wrtb ( 0xC0 + 8 * -- r )		3471057	0					
ANR	3473234	Callee	wrtb		3471057	0					
ANR	3473235	Identifier	wrtb		3471057	0					
ANR	3473236	ArgumentList	0xC0 + 8 * -- r		3471057	1					
ANR	3473237	Argument	0xC0 + 8 * -- r		3471057	0					
ANR	3473238	AdditiveExpression	0xC0 + 8 * -- r		3471057	0		+			
ANR	3473239	PrimaryExpression	0xC0		3471057	0					
ANR	3473240	MultiplicativeExpression	8 * -- r		3471057	1		*			
ANR	3473241	PrimaryExpression	8		3471057	0					
ANR	3473242	UnaryExpression	-- r		3471057	1					
ANR	3473243	IncDec	--		3471057	0					
ANR	3473244	Identifier	r		3471057	1					
ANR	3473245	BreakStatement	break ;	1269:3:25481:25486	3471057	193	True				
ANR	3473246	Label	case Z80_RETI :	1270:2:25490:25503	3471057	194	True				
ANR	3473247	Identifier	Z80_RETI		3471057	0					
ANR	3473248	ExpressionStatement	wrtb ( 0xED )	1271:3:25508:25519	3471057	195	True				
ANR	3473249	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3473250	Callee	wrtb		3471057	0					
ANR	3473251	Identifier	wrtb		3471057	0					
ANR	3473252	ArgumentList	0xED		3471057	1					
ANR	3473253	Argument	0xED		3471057	0					
ANR	3473254	PrimaryExpression	0xED		3471057	0					
ANR	3473255	ExpressionStatement	wrtb ( 0x4D )	1272:3:25524:25535	3471057	196	True				
ANR	3473256	CallExpression	wrtb ( 0x4D )		3471057	0					
ANR	3473257	Callee	wrtb		3471057	0					
ANR	3473258	Identifier	wrtb		3471057	0					
ANR	3473259	ArgumentList	0x4D		3471057	1					
ANR	3473260	Argument	0x4D		3471057	0					
ANR	3473261	PrimaryExpression	0x4D		3471057	0					
ANR	3473262	BreakStatement	break ;	1273:3:25540:25545	3471057	197	True				
ANR	3473263	Label	case Z80_RETN :	1274:2:25549:25562	3471057	198	True				
ANR	3473264	Identifier	Z80_RETN		3471057	0					
ANR	3473265	ExpressionStatement	wrtb ( 0xED )	1275:3:25567:25578	3471057	199	True				
ANR	3473266	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3473267	Callee	wrtb		3471057	0					
ANR	3473268	Identifier	wrtb		3471057	0					
ANR	3473269	ArgumentList	0xED		3471057	1					
ANR	3473270	Argument	0xED		3471057	0					
ANR	3473271	PrimaryExpression	0xED		3471057	0					
ANR	3473272	ExpressionStatement	wrtb ( 0x45 )	1276:3:25583:25594	3471057	200	True				
ANR	3473273	CallExpression	wrtb ( 0x45 )		3471057	0					
ANR	3473274	Callee	wrtb		3471057	0					
ANR	3473275	Identifier	wrtb		3471057	0					
ANR	3473276	ArgumentList	0x45		3471057	1					
ANR	3473277	Argument	0x45		3471057	0					
ANR	3473278	PrimaryExpression	0x45		3471057	0					
ANR	3473279	BreakStatement	break ;	1277:3:25599:25604	3471057	201	True				
ANR	3473280	Label	case Z80_RL :	1278:2:25608:25619	3471057	202	True				
ANR	3473281	Identifier	Z80_RL		3471057	0					
ANR	3473282	IfStatement	if ( ! ( r = rd_r_ ( & ptr ) ) )		3471057	203					
ANR	3473283	Condition	! ( r = rd_r_ ( & ptr ) )	1279:7:25628:25645	3471057	0	True				
ANR	3473284	UnaryOperationExpression	! ( r = rd_r_ ( & ptr ) )		3471057	0					
ANR	3473285	UnaryOperator	!		3471057	0					
ANR	3473286	AssignmentExpression	r = rd_r_ ( & ptr )		3471057	1		=			
ANR	3473287	Identifier	r		3471057	0					
ANR	3473288	CallExpression	rd_r_ ( & ptr )		3471057	1					
ANR	3473289	Callee	rd_r_		3471057	0					
ANR	3473290	Identifier	rd_r_		3471057	0					
ANR	3473291	ArgumentList	& ptr		3471057	1					
ANR	3473292	Argument	& ptr		3471057	0					
ANR	3473293	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473294	UnaryOperator	&		3471057	0					
ANR	3473295	Identifier	ptr		3471057	1					
ANR	3473296	CompoundStatement		469:27:7734:7734	3471057	1					
ANR	3473297	BreakStatement	break ;	1280:4:25654:25659	3471057	0	True				
ANR	3473298	ExpressionStatement	wrtb ( 0xCB )	1282:3:25669:25680	3471057	204	True				
ANR	3473299	CallExpression	wrtb ( 0xCB )		3471057	0					
ANR	3473300	Callee	wrtb		3471057	0					
ANR	3473301	Identifier	wrtb		3471057	0					
ANR	3473302	ArgumentList	0xCB		3471057	1					
ANR	3473303	Argument	0xCB		3471057	0					
ANR	3473304	PrimaryExpression	0xCB		3471057	0					
ANR	3473305	ExpressionStatement	wrtb ( 0x10 + -- r )	1283:3:25685:25702	3471057	205	True				
ANR	3473306	CallExpression	wrtb ( 0x10 + -- r )		3471057	0					
ANR	3473307	Callee	wrtb		3471057	0					
ANR	3473308	Identifier	wrtb		3471057	0					
ANR	3473309	ArgumentList	0x10 + -- r		3471057	1					
ANR	3473310	Argument	0x10 + -- r		3471057	0					
ANR	3473311	AdditiveExpression	0x10 + -- r		3471057	0		+			
ANR	3473312	PrimaryExpression	0x10		3471057	0					
ANR	3473313	UnaryExpression	-- r		3471057	1					
ANR	3473314	IncDec	--		3471057	0					
ANR	3473315	Identifier	r		3471057	1					
ANR	3473316	BreakStatement	break ;	1284:3:25707:25712	3471057	206	True				
ANR	3473317	Label	case Z80_RLA :	1285:2:25716:25728	3471057	207	True				
ANR	3473318	Identifier	Z80_RLA		3471057	0					
ANR	3473319	ExpressionStatement	wrtb ( 0x17 )	1286:3:25733:25744	3471057	208	True				
ANR	3473320	CallExpression	wrtb ( 0x17 )		3471057	0					
ANR	3473321	Callee	wrtb		3471057	0					
ANR	3473322	Identifier	wrtb		3471057	0					
ANR	3473323	ArgumentList	0x17		3471057	1					
ANR	3473324	Argument	0x17		3471057	0					
ANR	3473325	PrimaryExpression	0x17		3471057	0					
ANR	3473326	BreakStatement	break ;	1287:3:25749:25754	3471057	209	True				
ANR	3473327	Label	case Z80_RLC :	1288:2:25758:25770	3471057	210	True				
ANR	3473328	Identifier	Z80_RLC		3471057	0					
ANR	3473329	IfStatement	if ( ! ( r = rd_r_ ( & ptr ) ) )		3471057	211					
ANR	3473330	Condition	! ( r = rd_r_ ( & ptr ) )	1289:7:25779:25796	3471057	0	True				
ANR	3473331	UnaryOperationExpression	! ( r = rd_r_ ( & ptr ) )		3471057	0					
ANR	3473332	UnaryOperator	!		3471057	0					
ANR	3473333	AssignmentExpression	r = rd_r_ ( & ptr )		3471057	1		=			
ANR	3473334	Identifier	r		3471057	0					
ANR	3473335	CallExpression	rd_r_ ( & ptr )		3471057	1					
ANR	3473336	Callee	rd_r_		3471057	0					
ANR	3473337	Identifier	rd_r_		3471057	0					
ANR	3473338	ArgumentList	& ptr		3471057	1					
ANR	3473339	Argument	& ptr		3471057	0					
ANR	3473340	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473341	UnaryOperator	&		3471057	0					
ANR	3473342	Identifier	ptr		3471057	1					
ANR	3473343	CompoundStatement		479:27:7885:7885	3471057	1					
ANR	3473344	BreakStatement	break ;	1290:4:25805:25810	3471057	0	True				
ANR	3473345	ExpressionStatement	wrtb ( 0xCB )	1292:3:25820:25831	3471057	212	True				
ANR	3473346	CallExpression	wrtb ( 0xCB )		3471057	0					
ANR	3473347	Callee	wrtb		3471057	0					
ANR	3473348	Identifier	wrtb		3471057	0					
ANR	3473349	ArgumentList	0xCB		3471057	1					
ANR	3473350	Argument	0xCB		3471057	0					
ANR	3473351	PrimaryExpression	0xCB		3471057	0					
ANR	3473352	ExpressionStatement	wrtb ( 0x00 + -- r )	1293:3:25836:25853	3471057	213	True				
ANR	3473353	CallExpression	wrtb ( 0x00 + -- r )		3471057	0					
ANR	3473354	Callee	wrtb		3471057	0					
ANR	3473355	Identifier	wrtb		3471057	0					
ANR	3473356	ArgumentList	0x00 + -- r		3471057	1					
ANR	3473357	Argument	0x00 + -- r		3471057	0					
ANR	3473358	AdditiveExpression	0x00 + -- r		3471057	0		+			
ANR	3473359	PrimaryExpression	0x00		3471057	0					
ANR	3473360	UnaryExpression	-- r		3471057	1					
ANR	3473361	IncDec	--		3471057	0					
ANR	3473362	Identifier	r		3471057	1					
ANR	3473363	BreakStatement	break ;	1294:3:25858:25863	3471057	214	True				
ANR	3473364	Label	case Z80_RLCA :	1295:2:25867:25880	3471057	215	True				
ANR	3473365	Identifier	Z80_RLCA		3471057	0					
ANR	3473366	ExpressionStatement	wrtb ( 0x07 )	1296:3:25885:25896	3471057	216	True				
ANR	3473367	CallExpression	wrtb ( 0x07 )		3471057	0					
ANR	3473368	Callee	wrtb		3471057	0					
ANR	3473369	Identifier	wrtb		3471057	0					
ANR	3473370	ArgumentList	0x07		3471057	1					
ANR	3473371	Argument	0x07		3471057	0					
ANR	3473372	PrimaryExpression	0x07		3471057	0					
ANR	3473373	BreakStatement	break ;	1297:3:25901:25906	3471057	217	True				
ANR	3473374	Label	case Z80_RLD :	1298:2:25910:25922	3471057	218	True				
ANR	3473375	Identifier	Z80_RLD		3471057	0					
ANR	3473376	ExpressionStatement	wrtb ( 0xED )	1299:3:25927:25938	3471057	219	True				
ANR	3473377	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3473378	Callee	wrtb		3471057	0					
ANR	3473379	Identifier	wrtb		3471057	0					
ANR	3473380	ArgumentList	0xED		3471057	1					
ANR	3473381	Argument	0xED		3471057	0					
ANR	3473382	PrimaryExpression	0xED		3471057	0					
ANR	3473383	ExpressionStatement	wrtb ( 0x6F )	1300:3:25943:25954	3471057	220	True				
ANR	3473384	CallExpression	wrtb ( 0x6F )		3471057	0					
ANR	3473385	Callee	wrtb		3471057	0					
ANR	3473386	Identifier	wrtb		3471057	0					
ANR	3473387	ArgumentList	0x6F		3471057	1					
ANR	3473388	Argument	0x6F		3471057	0					
ANR	3473389	PrimaryExpression	0x6F		3471057	0					
ANR	3473390	BreakStatement	break ;	1301:3:25959:25964	3471057	221	True				
ANR	3473391	Label	case Z80_RR :	1302:2:25968:25979	3471057	222	True				
ANR	3473392	Identifier	Z80_RR		3471057	0					
ANR	3473393	IfStatement	if ( ! ( r = rd_r_ ( & ptr ) ) )		3471057	223					
ANR	3473394	Condition	! ( r = rd_r_ ( & ptr ) )	1303:7:25988:26005	3471057	0	True				
ANR	3473395	UnaryOperationExpression	! ( r = rd_r_ ( & ptr ) )		3471057	0					
ANR	3473396	UnaryOperator	!		3471057	0					
ANR	3473397	AssignmentExpression	r = rd_r_ ( & ptr )		3471057	1		=			
ANR	3473398	Identifier	r		3471057	0					
ANR	3473399	CallExpression	rd_r_ ( & ptr )		3471057	1					
ANR	3473400	Callee	rd_r_		3471057	0					
ANR	3473401	Identifier	rd_r_		3471057	0					
ANR	3473402	ArgumentList	& ptr		3471057	1					
ANR	3473403	Argument	& ptr		3471057	0					
ANR	3473404	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473405	UnaryOperator	&		3471057	0					
ANR	3473406	Identifier	ptr		3471057	1					
ANR	3473407	CompoundStatement		493:27:8094:8094	3471057	1					
ANR	3473408	BreakStatement	break ;	1304:4:26014:26019	3471057	0	True				
ANR	3473409	ExpressionStatement	wrtb ( 0xCB )	1306:3:26029:26040	3471057	224	True				
ANR	3473410	CallExpression	wrtb ( 0xCB )		3471057	0					
ANR	3473411	Callee	wrtb		3471057	0					
ANR	3473412	Identifier	wrtb		3471057	0					
ANR	3473413	ArgumentList	0xCB		3471057	1					
ANR	3473414	Argument	0xCB		3471057	0					
ANR	3473415	PrimaryExpression	0xCB		3471057	0					
ANR	3473416	ExpressionStatement	wrtb ( 0x18 + -- r )	1307:3:26045:26062	3471057	225	True				
ANR	3473417	CallExpression	wrtb ( 0x18 + -- r )		3471057	0					
ANR	3473418	Callee	wrtb		3471057	0					
ANR	3473419	Identifier	wrtb		3471057	0					
ANR	3473420	ArgumentList	0x18 + -- r		3471057	1					
ANR	3473421	Argument	0x18 + -- r		3471057	0					
ANR	3473422	AdditiveExpression	0x18 + -- r		3471057	0		+			
ANR	3473423	PrimaryExpression	0x18		3471057	0					
ANR	3473424	UnaryExpression	-- r		3471057	1					
ANR	3473425	IncDec	--		3471057	0					
ANR	3473426	Identifier	r		3471057	1					
ANR	3473427	BreakStatement	break ;	1308:3:26067:26072	3471057	226	True				
ANR	3473428	Label	case Z80_RRA :	1309:2:26076:26088	3471057	227	True				
ANR	3473429	Identifier	Z80_RRA		3471057	0					
ANR	3473430	ExpressionStatement	wrtb ( 0x1F )	1310:3:26093:26104	3471057	228	True				
ANR	3473431	CallExpression	wrtb ( 0x1F )		3471057	0					
ANR	3473432	Callee	wrtb		3471057	0					
ANR	3473433	Identifier	wrtb		3471057	0					
ANR	3473434	ArgumentList	0x1F		3471057	1					
ANR	3473435	Argument	0x1F		3471057	0					
ANR	3473436	PrimaryExpression	0x1F		3471057	0					
ANR	3473437	BreakStatement	break ;	1311:3:26109:26114	3471057	229	True				
ANR	3473438	Label	case Z80_RRC :	1312:2:26118:26130	3471057	230	True				
ANR	3473439	Identifier	Z80_RRC		3471057	0					
ANR	3473440	IfStatement	if ( ! ( r = rd_r_ ( & ptr ) ) )		3471057	231					
ANR	3473441	Condition	! ( r = rd_r_ ( & ptr ) )	1313:7:26139:26156	3471057	0	True				
ANR	3473442	UnaryOperationExpression	! ( r = rd_r_ ( & ptr ) )		3471057	0					
ANR	3473443	UnaryOperator	!		3471057	0					
ANR	3473444	AssignmentExpression	r = rd_r_ ( & ptr )		3471057	1		=			
ANR	3473445	Identifier	r		3471057	0					
ANR	3473446	CallExpression	rd_r_ ( & ptr )		3471057	1					
ANR	3473447	Callee	rd_r_		3471057	0					
ANR	3473448	Identifier	rd_r_		3471057	0					
ANR	3473449	ArgumentList	& ptr		3471057	1					
ANR	3473450	Argument	& ptr		3471057	0					
ANR	3473451	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473452	UnaryOperator	&		3471057	0					
ANR	3473453	Identifier	ptr		3471057	1					
ANR	3473454	CompoundStatement		503:27:8245:8245	3471057	1					
ANR	3473455	BreakStatement	break ;	1314:4:26165:26170	3471057	0	True				
ANR	3473456	ExpressionStatement	wrtb ( 0xCB )	1316:3:26180:26191	3471057	232	True				
ANR	3473457	CallExpression	wrtb ( 0xCB )		3471057	0					
ANR	3473458	Callee	wrtb		3471057	0					
ANR	3473459	Identifier	wrtb		3471057	0					
ANR	3473460	ArgumentList	0xCB		3471057	1					
ANR	3473461	Argument	0xCB		3471057	0					
ANR	3473462	PrimaryExpression	0xCB		3471057	0					
ANR	3473463	ExpressionStatement	wrtb ( 0x08 + -- r )	1317:3:26196:26213	3471057	233	True				
ANR	3473464	CallExpression	wrtb ( 0x08 + -- r )		3471057	0					
ANR	3473465	Callee	wrtb		3471057	0					
ANR	3473466	Identifier	wrtb		3471057	0					
ANR	3473467	ArgumentList	0x08 + -- r		3471057	1					
ANR	3473468	Argument	0x08 + -- r		3471057	0					
ANR	3473469	AdditiveExpression	0x08 + -- r		3471057	0		+			
ANR	3473470	PrimaryExpression	0x08		3471057	0					
ANR	3473471	UnaryExpression	-- r		3471057	1					
ANR	3473472	IncDec	--		3471057	0					
ANR	3473473	Identifier	r		3471057	1					
ANR	3473474	BreakStatement	break ;	1318:3:26218:26223	3471057	234	True				
ANR	3473475	Label	case Z80_RRCA :	1319:2:26227:26240	3471057	235	True				
ANR	3473476	Identifier	Z80_RRCA		3471057	0					
ANR	3473477	ExpressionStatement	wrtb ( 0x0F )	1320:3:26245:26256	3471057	236	True				
ANR	3473478	CallExpression	wrtb ( 0x0F )		3471057	0					
ANR	3473479	Callee	wrtb		3471057	0					
ANR	3473480	Identifier	wrtb		3471057	0					
ANR	3473481	ArgumentList	0x0F		3471057	1					
ANR	3473482	Argument	0x0F		3471057	0					
ANR	3473483	PrimaryExpression	0x0F		3471057	0					
ANR	3473484	BreakStatement	break ;	1321:3:26261:26266	3471057	237	True				
ANR	3473485	Label	case Z80_RRD :	1322:2:26270:26282	3471057	238	True				
ANR	3473486	Identifier	Z80_RRD		3471057	0					
ANR	3473487	ExpressionStatement	wrtb ( 0xED )	1323:3:26287:26298	3471057	239	True				
ANR	3473488	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3473489	Callee	wrtb		3471057	0					
ANR	3473490	Identifier	wrtb		3471057	0					
ANR	3473491	ArgumentList	0xED		3471057	1					
ANR	3473492	Argument	0xED		3471057	0					
ANR	3473493	PrimaryExpression	0xED		3471057	0					
ANR	3473494	ExpressionStatement	wrtb ( 0x67 )	1324:3:26303:26314	3471057	240	True				
ANR	3473495	CallExpression	wrtb ( 0x67 )		3471057	0					
ANR	3473496	Callee	wrtb		3471057	0					
ANR	3473497	Identifier	wrtb		3471057	0					
ANR	3473498	ArgumentList	0x67		3471057	1					
ANR	3473499	Argument	0x67		3471057	0					
ANR	3473500	PrimaryExpression	0x67		3471057	0					
ANR	3473501	BreakStatement	break ;	1325:3:26319:26324	3471057	241	True				
ANR	3473502	Label	case Z80_RST :	1326:2:26328:26340	3471057	242	True				
ANR	3473503	Identifier	Z80_RST		3471057	0					
ANR	3473504	ExpressionStatement	"ptr = """""	1327:3:26345:26353	3471057	243	True				
ANR	3473505	AssignmentExpression	"ptr = """""		3471057	0		=			
ANR	3473506	Identifier	ptr		3471057	0					
ANR	3473507	PrimaryExpression	""""""		3471057	1					
ANR	3473508	BreakStatement	break ;	1328:3:26358:26363	3471057	244	True				
ANR	3473509	Label	case Z80_SBC :	1329:2:26367:26379	3471057	245	True				
ANR	3473510	Identifier	Z80_SBC		3471057	0					
ANR	3473511	IfStatement	if ( ! ( r = rd_a_hl ( & ptr ) ) )		3471057	246					
ANR	3473512	Condition	! ( r = rd_a_hl ( & ptr ) )	1330:7:26388:26408	3471057	0	True				
ANR	3473513	UnaryOperationExpression	! ( r = rd_a_hl ( & ptr ) )		3471057	0					
ANR	3473514	UnaryOperator	!		3471057	0					
ANR	3473515	AssignmentExpression	r = rd_a_hl ( & ptr )		3471057	1		=			
ANR	3473516	Identifier	r		3471057	0					
ANR	3473517	CallExpression	rd_a_hl ( & ptr )		3471057	1					
ANR	3473518	Callee	rd_a_hl		3471057	0					
ANR	3473519	Identifier	rd_a_hl		3471057	0					
ANR	3473520	ArgumentList	& ptr		3471057	1					
ANR	3473521	Argument	& ptr		3471057	0					
ANR	3473522	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473523	UnaryOperator	&		3471057	0					
ANR	3473524	Identifier	ptr		3471057	1					
ANR	3473525	CompoundStatement		520:30:8497:8497	3471057	1					
ANR	3473526	BreakStatement	break ;	1331:4:26417:26422	3471057	0	True				
ANR	3473527	IfStatement	if ( r == HL )		3471057	247					
ANR	3473528	Condition	r == HL	1333:7:26436:26442	3471057	0	True				
ANR	3473529	EqualityExpression	r == HL		3471057	0		==			
ANR	3473530	Identifier	r		3471057	0					
ANR	3473531	Identifier	HL		3471057	1					
ANR	3473532	CompoundStatement		523:16:8531:8531	3471057	1					
ANR	3473533	IfStatement	if ( ! ( r = rd_rr_ ( & ptr ) ) )		3471057	0					
ANR	3473534	Condition	! ( r = rd_rr_ ( & ptr ) )	1334:8:26455:26473	3471057	0	True				
ANR	3473535	UnaryOperationExpression	! ( r = rd_rr_ ( & ptr ) )		3471057	0					
ANR	3473536	UnaryOperator	!		3471057	0					
ANR	3473537	AssignmentExpression	r = rd_rr_ ( & ptr )		3471057	1		=			
ANR	3473538	Identifier	r		3471057	0					
ANR	3473539	CallExpression	rd_rr_ ( & ptr )		3471057	1					
ANR	3473540	Callee	rd_rr_		3471057	0					
ANR	3473541	Identifier	rd_rr_		3471057	0					
ANR	3473542	ArgumentList	& ptr		3471057	1					
ANR	3473543	Argument	& ptr		3471057	0					
ANR	3473544	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473545	UnaryOperator	&		3471057	0					
ANR	3473546	Identifier	ptr		3471057	1					
ANR	3473547	CompoundStatement		524:29:8562:8562	3471057	1					
ANR	3473548	BreakStatement	break ;	1335:5:26483:26488	3471057	0	True				
ANR	3473549	ExpressionStatement	wrtb ( 0xED )	1337:4:26500:26511	3471057	1	True				
ANR	3473550	CallExpression	wrtb ( 0xED )		3471057	0					
ANR	3473551	Callee	wrtb		3471057	0					
ANR	3473552	Identifier	wrtb		3471057	0					
ANR	3473553	ArgumentList	0xED		3471057	1					
ANR	3473554	Argument	0xED		3471057	0					
ANR	3473555	PrimaryExpression	0xED		3471057	0					
ANR	3473556	ExpressionStatement	wrtb ( 0x42 + 0x10 * -- r )	1338:4:26517:26541	3471057	2	True				
ANR	3473557	CallExpression	wrtb ( 0x42 + 0x10 * -- r )		3471057	0					
ANR	3473558	Callee	wrtb		3471057	0					
ANR	3473559	Identifier	wrtb		3471057	0					
ANR	3473560	ArgumentList	0x42 + 0x10 * -- r		3471057	1					
ANR	3473561	Argument	0x42 + 0x10 * -- r		3471057	0					
ANR	3473562	AdditiveExpression	0x42 + 0x10 * -- r		3471057	0		+			
ANR	3473563	PrimaryExpression	0x42		3471057	0					
ANR	3473564	MultiplicativeExpression	0x10 * -- r		3471057	1		*			
ANR	3473565	PrimaryExpression	0x10		3471057	0					
ANR	3473566	UnaryExpression	-- r		3471057	1					
ANR	3473567	IncDec	--		3471057	0					
ANR	3473568	Identifier	r		3471057	1					
ANR	3473569	BreakStatement	break ;	1339:4:26547:26552	3471057	3	True				
ANR	3473570	IfStatement	if ( ! ( r = rd_r ( & ptr ) ) )		3471057	248					
ANR	3473571	Condition	! ( r = rd_r ( & ptr ) )	1341:7:26566:26583	3471057	0	True				
ANR	3473572	UnaryOperationExpression	! ( r = rd_r ( & ptr ) )		3471057	0					
ANR	3473573	UnaryOperator	!		3471057	0					
ANR	3473574	AssignmentExpression	r = rd_r ( & ptr )		3471057	1		=			
ANR	3473575	Identifier	r		3471057	0					
ANR	3473576	CallExpression	rd_r ( & ptr )		3471057	1					
ANR	3473577	Callee	rd_r		3471057	0					
ANR	3473578	Identifier	rd_r		3471057	0					
ANR	3473579	ArgumentList	& ptr		3471057	1					
ANR	3473580	Argument	& ptr		3471057	0					
ANR	3473581	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473582	UnaryOperator	&		3471057	0					
ANR	3473583	Identifier	ptr		3471057	1					
ANR	3473584	CompoundStatement		531:27:8672:8672	3471057	1					
ANR	3473585	BreakStatement	break ;	1342:4:26592:26597	3471057	0	True				
ANR	3473586	ExpressionStatement	wrtb ( 0x98 + -- r )	1344:3:26607:26624	3471057	249	True				
ANR	3473587	CallExpression	wrtb ( 0x98 + -- r )		3471057	0					
ANR	3473588	Callee	wrtb		3471057	0					
ANR	3473589	Identifier	wrtb		3471057	0					
ANR	3473590	ArgumentList	0x98 + -- r		3471057	1					
ANR	3473591	Argument	0x98 + -- r		3471057	0					
ANR	3473592	AdditiveExpression	0x98 + -- r		3471057	0		+			
ANR	3473593	PrimaryExpression	0x98		3471057	0					
ANR	3473594	UnaryExpression	-- r		3471057	1					
ANR	3473595	IncDec	--		3471057	0					
ANR	3473596	Identifier	r		3471057	1					
ANR	3473597	BreakStatement	break ;	1345:3:26629:26634	3471057	250	True				
ANR	3473598	Label	case Z80_SCF :	1346:2:26638:26650	3471057	251	True				
ANR	3473599	Identifier	Z80_SCF		3471057	0					
ANR	3473600	ExpressionStatement	wrtb ( 0x37 )	1347:3:26655:26666	3471057	252	True				
ANR	3473601	CallExpression	wrtb ( 0x37 )		3471057	0					
ANR	3473602	Callee	wrtb		3471057	0					
ANR	3473603	Identifier	wrtb		3471057	0					
ANR	3473604	ArgumentList	0x37		3471057	1					
ANR	3473605	Argument	0x37		3471057	0					
ANR	3473606	PrimaryExpression	0x37		3471057	0					
ANR	3473607	BreakStatement	break ;	1348:3:26671:26676	3471057	253	True				
ANR	3473608	Label	case Z80_SET :	1349:2:26680:26692	3471057	254	True				
ANR	3473609	Identifier	Z80_SET		3471057	0					
ANR	3473610	IfStatement	if ( ! rd_0_7 ( & ptr ) )		3471057	255					
ANR	3473611	Condition	! rd_0_7 ( & ptr )	1350:7:26701:26714	3471057	0	True				
ANR	3473612	UnaryOperationExpression	! rd_0_7 ( & ptr )		3471057	0					
ANR	3473613	UnaryOperator	!		3471057	0					
ANR	3473614	CallExpression	rd_0_7 ( & ptr )		3471057	1					
ANR	3473615	Callee	rd_0_7		3471057	0					
ANR	3473616	Identifier	rd_0_7		3471057	0					
ANR	3473617	ArgumentList	& ptr		3471057	1					
ANR	3473618	Argument	& ptr		3471057	0					
ANR	3473619	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473620	UnaryOperator	&		3471057	0					
ANR	3473621	Identifier	ptr		3471057	1					
ANR	3473622	CompoundStatement		540:23:8803:8803	3471057	1					
ANR	3473623	BreakStatement	break ;	1351:4:26723:26728	3471057	0	True				
ANR	3473624	ExpressionStatement	rd_comma ( & ptr )	1353:3:26738:26753	3471057	256	True				
ANR	3473625	CallExpression	rd_comma ( & ptr )		3471057	0					
ANR	3473626	Callee	rd_comma		3471057	0					
ANR	3473627	Identifier	rd_comma		3471057	0					
ANR	3473628	ArgumentList	& ptr		3471057	1					
ANR	3473629	Argument	& ptr		3471057	0					
ANR	3473630	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473631	UnaryOperator	&		3471057	0					
ANR	3473632	Identifier	ptr		3471057	1					
ANR	3473633	IfStatement	if ( ! ( r = rd_r_ ( & ptr ) ) )		3471057	257					
ANR	3473634	Condition	! ( r = rd_r_ ( & ptr ) )	1354:7:26762:26779	3471057	0	True				
ANR	3473635	UnaryOperationExpression	! ( r = rd_r_ ( & ptr ) )		3471057	0					
ANR	3473636	UnaryOperator	!		3471057	0					
ANR	3473637	AssignmentExpression	r = rd_r_ ( & ptr )		3471057	1		=			
ANR	3473638	Identifier	r		3471057	0					
ANR	3473639	CallExpression	rd_r_ ( & ptr )		3471057	1					
ANR	3473640	Callee	rd_r_		3471057	0					
ANR	3473641	Identifier	rd_r_		3471057	0					
ANR	3473642	ArgumentList	& ptr		3471057	1					
ANR	3473643	Argument	& ptr		3471057	0					
ANR	3473644	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473645	UnaryOperator	&		3471057	0					
ANR	3473646	Identifier	ptr		3471057	1					
ANR	3473647	CompoundStatement		544:27:8868:8868	3471057	1					
ANR	3473648	BreakStatement	break ;	1355:4:26788:26793	3471057	0	True				
ANR	3473649	ExpressionStatement	wrtb ( 0xCB )	1357:3:26803:26814	3471057	258	True				
ANR	3473650	CallExpression	wrtb ( 0xCB )		3471057	0					
ANR	3473651	Callee	wrtb		3471057	0					
ANR	3473652	Identifier	wrtb		3471057	0					
ANR	3473653	ArgumentList	0xCB		3471057	1					
ANR	3473654	Argument	0xCB		3471057	0					
ANR	3473655	PrimaryExpression	0xCB		3471057	0					
ANR	3473656	ExpressionStatement	wrtb ( 0xC0 + -- r )	1358:3:26819:26836	3471057	259	True				
ANR	3473657	CallExpression	wrtb ( 0xC0 + -- r )		3471057	0					
ANR	3473658	Callee	wrtb		3471057	0					
ANR	3473659	Identifier	wrtb		3471057	0					
ANR	3473660	ArgumentList	0xC0 + -- r		3471057	1					
ANR	3473661	Argument	0xC0 + -- r		3471057	0					
ANR	3473662	AdditiveExpression	0xC0 + -- r		3471057	0		+			
ANR	3473663	PrimaryExpression	0xC0		3471057	0					
ANR	3473664	UnaryExpression	-- r		3471057	1					
ANR	3473665	IncDec	--		3471057	0					
ANR	3473666	Identifier	r		3471057	1					
ANR	3473667	BreakStatement	break ;	1359:3:26841:26846	3471057	260	True				
ANR	3473668	Label	case Z80_SLA :	1360:2:26850:26862	3471057	261	True				
ANR	3473669	Identifier	Z80_SLA		3471057	0					
ANR	3473670	IfStatement	if ( ! ( r = rd_r_ ( & ptr ) ) )		3471057	262					
ANR	3473671	Condition	! ( r = rd_r_ ( & ptr ) )	1361:7:26871:26888	3471057	0	True				
ANR	3473672	UnaryOperationExpression	! ( r = rd_r_ ( & ptr ) )		3471057	0					
ANR	3473673	UnaryOperator	!		3471057	0					
ANR	3473674	AssignmentExpression	r = rd_r_ ( & ptr )		3471057	1		=			
ANR	3473675	Identifier	r		3471057	0					
ANR	3473676	CallExpression	rd_r_ ( & ptr )		3471057	1					
ANR	3473677	Callee	rd_r_		3471057	0					
ANR	3473678	Identifier	rd_r_		3471057	0					
ANR	3473679	ArgumentList	& ptr		3471057	1					
ANR	3473680	Argument	& ptr		3471057	0					
ANR	3473681	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473682	UnaryOperator	&		3471057	0					
ANR	3473683	Identifier	ptr		3471057	1					
ANR	3473684	CompoundStatement		551:27:8977:8977	3471057	1					
ANR	3473685	BreakStatement	break ;	1362:4:26897:26902	3471057	0	True				
ANR	3473686	ExpressionStatement	wrtb ( 0xCB )	1364:3:26912:26923	3471057	263	True				
ANR	3473687	CallExpression	wrtb ( 0xCB )		3471057	0					
ANR	3473688	Callee	wrtb		3471057	0					
ANR	3473689	Identifier	wrtb		3471057	0					
ANR	3473690	ArgumentList	0xCB		3471057	1					
ANR	3473691	Argument	0xCB		3471057	0					
ANR	3473692	PrimaryExpression	0xCB		3471057	0					
ANR	3473693	ExpressionStatement	wrtb ( 0x20 + -- r )	1365:3:26928:26945	3471057	264	True				
ANR	3473694	CallExpression	wrtb ( 0x20 + -- r )		3471057	0					
ANR	3473695	Callee	wrtb		3471057	0					
ANR	3473696	Identifier	wrtb		3471057	0					
ANR	3473697	ArgumentList	0x20 + -- r		3471057	1					
ANR	3473698	Argument	0x20 + -- r		3471057	0					
ANR	3473699	AdditiveExpression	0x20 + -- r		3471057	0		+			
ANR	3473700	PrimaryExpression	0x20		3471057	0					
ANR	3473701	UnaryExpression	-- r		3471057	1					
ANR	3473702	IncDec	--		3471057	0					
ANR	3473703	Identifier	r		3471057	1					
ANR	3473704	BreakStatement	break ;	1366:3:26950:26955	3471057	265	True				
ANR	3473705	Label	case Z80_SLI :	1367:2:26959:26971	3471057	266	True				
ANR	3473706	Identifier	Z80_SLI		3471057	0					
ANR	3473707	IfStatement	if ( ! ( r = rd_r_ ( & ptr ) ) )		3471057	267					
ANR	3473708	Condition	! ( r = rd_r_ ( & ptr ) )	1368:7:26980:26997	3471057	0	True				
ANR	3473709	UnaryOperationExpression	! ( r = rd_r_ ( & ptr ) )		3471057	0					
ANR	3473710	UnaryOperator	!		3471057	0					
ANR	3473711	AssignmentExpression	r = rd_r_ ( & ptr )		3471057	1		=			
ANR	3473712	Identifier	r		3471057	0					
ANR	3473713	CallExpression	rd_r_ ( & ptr )		3471057	1					
ANR	3473714	Callee	rd_r_		3471057	0					
ANR	3473715	Identifier	rd_r_		3471057	0					
ANR	3473716	ArgumentList	& ptr		3471057	1					
ANR	3473717	Argument	& ptr		3471057	0					
ANR	3473718	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473719	UnaryOperator	&		3471057	0					
ANR	3473720	Identifier	ptr		3471057	1					
ANR	3473721	CompoundStatement		558:27:9086:9086	3471057	1					
ANR	3473722	BreakStatement	break ;	1369:4:27006:27011	3471057	0	True				
ANR	3473723	ExpressionStatement	wrtb ( 0xCB )	1371:3:27021:27032	3471057	268	True				
ANR	3473724	CallExpression	wrtb ( 0xCB )		3471057	0					
ANR	3473725	Callee	wrtb		3471057	0					
ANR	3473726	Identifier	wrtb		3471057	0					
ANR	3473727	ArgumentList	0xCB		3471057	1					
ANR	3473728	Argument	0xCB		3471057	0					
ANR	3473729	PrimaryExpression	0xCB		3471057	0					
ANR	3473730	ExpressionStatement	wrtb ( 0x30 + -- r )	1372:3:27037:27054	3471057	269	True				
ANR	3473731	CallExpression	wrtb ( 0x30 + -- r )		3471057	0					
ANR	3473732	Callee	wrtb		3471057	0					
ANR	3473733	Identifier	wrtb		3471057	0					
ANR	3473734	ArgumentList	0x30 + -- r		3471057	1					
ANR	3473735	Argument	0x30 + -- r		3471057	0					
ANR	3473736	AdditiveExpression	0x30 + -- r		3471057	0		+			
ANR	3473737	PrimaryExpression	0x30		3471057	0					
ANR	3473738	UnaryExpression	-- r		3471057	1					
ANR	3473739	IncDec	--		3471057	0					
ANR	3473740	Identifier	r		3471057	1					
ANR	3473741	BreakStatement	break ;	1373:3:27059:27064	3471057	270	True				
ANR	3473742	Label	case Z80_SRA :	1374:2:27068:27080	3471057	271	True				
ANR	3473743	Identifier	Z80_SRA		3471057	0					
ANR	3473744	IfStatement	if ( ! ( r = rd_r_ ( & ptr ) ) )		3471057	272					
ANR	3473745	Condition	! ( r = rd_r_ ( & ptr ) )	1375:7:27089:27106	3471057	0	True				
ANR	3473746	UnaryOperationExpression	! ( r = rd_r_ ( & ptr ) )		3471057	0					
ANR	3473747	UnaryOperator	!		3471057	0					
ANR	3473748	AssignmentExpression	r = rd_r_ ( & ptr )		3471057	1		=			
ANR	3473749	Identifier	r		3471057	0					
ANR	3473750	CallExpression	rd_r_ ( & ptr )		3471057	1					
ANR	3473751	Callee	rd_r_		3471057	0					
ANR	3473752	Identifier	rd_r_		3471057	0					
ANR	3473753	ArgumentList	& ptr		3471057	1					
ANR	3473754	Argument	& ptr		3471057	0					
ANR	3473755	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473756	UnaryOperator	&		3471057	0					
ANR	3473757	Identifier	ptr		3471057	1					
ANR	3473758	CompoundStatement		565:27:9195:9195	3471057	1					
ANR	3473759	BreakStatement	break ;	1376:4:27115:27120	3471057	0	True				
ANR	3473760	ExpressionStatement	wrtb ( 0xCB )	1378:3:27130:27141	3471057	273	True				
ANR	3473761	CallExpression	wrtb ( 0xCB )		3471057	0					
ANR	3473762	Callee	wrtb		3471057	0					
ANR	3473763	Identifier	wrtb		3471057	0					
ANR	3473764	ArgumentList	0xCB		3471057	1					
ANR	3473765	Argument	0xCB		3471057	0					
ANR	3473766	PrimaryExpression	0xCB		3471057	0					
ANR	3473767	ExpressionStatement	wrtb ( 0x28 + -- r )	1379:3:27146:27163	3471057	274	True				
ANR	3473768	CallExpression	wrtb ( 0x28 + -- r )		3471057	0					
ANR	3473769	Callee	wrtb		3471057	0					
ANR	3473770	Identifier	wrtb		3471057	0					
ANR	3473771	ArgumentList	0x28 + -- r		3471057	1					
ANR	3473772	Argument	0x28 + -- r		3471057	0					
ANR	3473773	AdditiveExpression	0x28 + -- r		3471057	0		+			
ANR	3473774	PrimaryExpression	0x28		3471057	0					
ANR	3473775	UnaryExpression	-- r		3471057	1					
ANR	3473776	IncDec	--		3471057	0					
ANR	3473777	Identifier	r		3471057	1					
ANR	3473778	BreakStatement	break ;	1380:3:27168:27173	3471057	275	True				
ANR	3473779	Label	case Z80_SRL :	1381:2:27177:27189	3471057	276	True				
ANR	3473780	Identifier	Z80_SRL		3471057	0					
ANR	3473781	IfStatement	if ( ! ( r = rd_r_ ( & ptr ) ) )		3471057	277					
ANR	3473782	Condition	! ( r = rd_r_ ( & ptr ) )	1382:7:27198:27215	3471057	0	True				
ANR	3473783	UnaryOperationExpression	! ( r = rd_r_ ( & ptr ) )		3471057	0					
ANR	3473784	UnaryOperator	!		3471057	0					
ANR	3473785	AssignmentExpression	r = rd_r_ ( & ptr )		3471057	1		=			
ANR	3473786	Identifier	r		3471057	0					
ANR	3473787	CallExpression	rd_r_ ( & ptr )		3471057	1					
ANR	3473788	Callee	rd_r_		3471057	0					
ANR	3473789	Identifier	rd_r_		3471057	0					
ANR	3473790	ArgumentList	& ptr		3471057	1					
ANR	3473791	Argument	& ptr		3471057	0					
ANR	3473792	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473793	UnaryOperator	&		3471057	0					
ANR	3473794	Identifier	ptr		3471057	1					
ANR	3473795	CompoundStatement		572:27:9304:9304	3471057	1					
ANR	3473796	BreakStatement	break ;	1383:4:27224:27229	3471057	0	True				
ANR	3473797	ExpressionStatement	wrtb ( 0xCB )	1385:3:27239:27250	3471057	278	True				
ANR	3473798	CallExpression	wrtb ( 0xCB )		3471057	0					
ANR	3473799	Callee	wrtb		3471057	0					
ANR	3473800	Identifier	wrtb		3471057	0					
ANR	3473801	ArgumentList	0xCB		3471057	1					
ANR	3473802	Argument	0xCB		3471057	0					
ANR	3473803	PrimaryExpression	0xCB		3471057	0					
ANR	3473804	ExpressionStatement	wrtb ( 0x38 + -- r )	1386:3:27255:27272	3471057	279	True				
ANR	3473805	CallExpression	wrtb ( 0x38 + -- r )		3471057	0					
ANR	3473806	Callee	wrtb		3471057	0					
ANR	3473807	Identifier	wrtb		3471057	0					
ANR	3473808	ArgumentList	0x38 + -- r		3471057	1					
ANR	3473809	Argument	0x38 + -- r		3471057	0					
ANR	3473810	AdditiveExpression	0x38 + -- r		3471057	0		+			
ANR	3473811	PrimaryExpression	0x38		3471057	0					
ANR	3473812	UnaryExpression	-- r		3471057	1					
ANR	3473813	IncDec	--		3471057	0					
ANR	3473814	Identifier	r		3471057	1					
ANR	3473815	BreakStatement	break ;	1387:3:27277:27282	3471057	280	True				
ANR	3473816	Label	case Z80_SUB :	1388:2:27286:27298	3471057	281	True				
ANR	3473817	Identifier	Z80_SUB		3471057	0					
ANR	3473818	IfStatement	if ( ! ( r = rd_r ( & ptr ) ) )		3471057	282					
ANR	3473819	Condition	! ( r = rd_r ( & ptr ) )	1389:7:27307:27324	3471057	0	True				
ANR	3473820	UnaryOperationExpression	! ( r = rd_r ( & ptr ) )		3471057	0					
ANR	3473821	UnaryOperator	!		3471057	0					
ANR	3473822	AssignmentExpression	r = rd_r ( & ptr )		3471057	1		=			
ANR	3473823	Identifier	r		3471057	0					
ANR	3473824	CallExpression	rd_r ( & ptr )		3471057	1					
ANR	3473825	Callee	rd_r		3471057	0					
ANR	3473826	Identifier	rd_r		3471057	0					
ANR	3473827	ArgumentList	& ptr		3471057	1					
ANR	3473828	Argument	& ptr		3471057	0					
ANR	3473829	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473830	UnaryOperator	&		3471057	0					
ANR	3473831	Identifier	ptr		3471057	1					
ANR	3473832	CompoundStatement		579:27:9413:9413	3471057	1					
ANR	3473833	BreakStatement	break ;	1390:4:27333:27338	3471057	0	True				
ANR	3473834	IfStatement	if ( has_argument ( & ptr ) )		3471057	283					
ANR	3473835	Condition	has_argument ( & ptr )	1392:7:27352:27370	3471057	0	True				
ANR	3473836	CallExpression	has_argument ( & ptr )		3471057	0					
ANR	3473837	Callee	has_argument		3471057	0					
ANR	3473838	Identifier	has_argument		3471057	0					
ANR	3473839	ArgumentList	& ptr		3471057	1					
ANR	3473840	Argument	& ptr		3471057	0					
ANR	3473841	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473842	UnaryOperator	&		3471057	0					
ANR	3473843	Identifier	ptr		3471057	1					
ANR	3473844	CompoundStatement		582:28:9459:9459	3471057	1					
ANR	3473845	IfStatement	if ( r != A )		3471057	0					
ANR	3473846	Condition	r != A	1393:8:27401:27406	3471057	0	True				
ANR	3473847	EqualityExpression	r != A		3471057	0		!=			
ANR	3473848	Identifier	r		3471057	0					
ANR	3473849	Identifier	A		3471057	1					
ANR	3473850	CompoundStatement		583:16:9495:9495	3471057	1					
ANR	3473851	ExpressionStatement	"eprintf ( ""parse error before: %s\\n"" , ptr )"	1394:5:27416:27457	3471057	0	True				
ANR	3473852	CallExpression	"eprintf ( ""parse error before: %s\\n"" , ptr )"		3471057	0					
ANR	3473853	Callee	eprintf		3471057	0					
ANR	3473854	Identifier	eprintf		3471057	0					
ANR	3473855	ArgumentList	"""parse error before: %s\\n"""		3471057	1					
ANR	3473856	Argument	"""parse error before: %s\\n"""		3471057	0					
ANR	3473857	PrimaryExpression	"""parse error before: %s\\n"""		3471057	0					
ANR	3473858	Argument	ptr		3471057	1					
ANR	3473859	Identifier	ptr		3471057	0					
ANR	3473860	BreakStatement	break ;	1395:5:27464:27469	3471057	1	True				
ANR	3473861	IfStatement	if ( ! ( r = rd_r ( & ptr ) ) )		3471057	1					
ANR	3473862	Condition	! ( r = rd_r ( & ptr ) )	1397:8:27485:27502	3471057	0	True				
ANR	3473863	UnaryOperationExpression	! ( r = rd_r ( & ptr ) )		3471057	0					
ANR	3473864	UnaryOperator	!		3471057	0					
ANR	3473865	AssignmentExpression	r = rd_r ( & ptr )		3471057	1		=			
ANR	3473866	Identifier	r		3471057	0					
ANR	3473867	CallExpression	rd_r ( & ptr )		3471057	1					
ANR	3473868	Callee	rd_r		3471057	0					
ANR	3473869	Identifier	rd_r		3471057	0					
ANR	3473870	ArgumentList	& ptr		3471057	1					
ANR	3473871	Argument	& ptr		3471057	0					
ANR	3473872	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473873	UnaryOperator	&		3471057	0					
ANR	3473874	Identifier	ptr		3471057	1					
ANR	3473875	CompoundStatement		587:28:9591:9591	3471057	1					
ANR	3473876	BreakStatement	break ;	1398:5:27512:27517	3471057	0	True				
ANR	3473877	ExpressionStatement	wrtb ( 0x90 + -- r )	1401:3:27533:27550	3471057	284	True				
ANR	3473878	CallExpression	wrtb ( 0x90 + -- r )		3471057	0					
ANR	3473879	Callee	wrtb		3471057	0					
ANR	3473880	Identifier	wrtb		3471057	0					
ANR	3473881	ArgumentList	0x90 + -- r		3471057	1					
ANR	3473882	Argument	0x90 + -- r		3471057	0					
ANR	3473883	AdditiveExpression	0x90 + -- r		3471057	0		+			
ANR	3473884	PrimaryExpression	0x90		3471057	0					
ANR	3473885	UnaryExpression	-- r		3471057	1					
ANR	3473886	IncDec	--		3471057	0					
ANR	3473887	Identifier	r		3471057	1					
ANR	3473888	BreakStatement	break ;	1402:3:27555:27560	3471057	285	True				
ANR	3473889	Label	case Z80_XOR :	1403:2:27564:27576	3471057	286	True				
ANR	3473890	Identifier	Z80_XOR		3471057	0					
ANR	3473891	IfStatement	if ( ! ( r = rd_r ( & ptr ) ) )		3471057	287					
ANR	3473892	Condition	! ( r = rd_r ( & ptr ) )	1404:7:27585:27602	3471057	0	True				
ANR	3473893	UnaryOperationExpression	! ( r = rd_r ( & ptr ) )		3471057	0					
ANR	3473894	UnaryOperator	!		3471057	0					
ANR	3473895	AssignmentExpression	r = rd_r ( & ptr )		3471057	1		=			
ANR	3473896	Identifier	r		3471057	0					
ANR	3473897	CallExpression	rd_r ( & ptr )		3471057	1					
ANR	3473898	Callee	rd_r		3471057	0					
ANR	3473899	Identifier	rd_r		3471057	0					
ANR	3473900	ArgumentList	& ptr		3471057	1					
ANR	3473901	Argument	& ptr		3471057	0					
ANR	3473902	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473903	UnaryOperator	&		3471057	0					
ANR	3473904	Identifier	ptr		3471057	1					
ANR	3473905	CompoundStatement		594:27:9691:9691	3471057	1					
ANR	3473906	BreakStatement	break ;	1405:4:27611:27616	3471057	0	True				
ANR	3473907	ExpressionStatement	wrtb ( 0xA8 + -- r )	1407:3:27626:27643	3471057	288	True				
ANR	3473908	CallExpression	wrtb ( 0xA8 + -- r )		3471057	0					
ANR	3473909	Callee	wrtb		3471057	0					
ANR	3473910	Identifier	wrtb		3471057	0					
ANR	3473911	ArgumentList	0xA8 + -- r		3471057	1					
ANR	3473912	Argument	0xA8 + -- r		3471057	0					
ANR	3473913	AdditiveExpression	0xA8 + -- r		3471057	0		+			
ANR	3473914	PrimaryExpression	0xA8		3471057	0					
ANR	3473915	UnaryExpression	-- r		3471057	1					
ANR	3473916	IncDec	--		3471057	0					
ANR	3473917	Identifier	r		3471057	1					
ANR	3473918	BreakStatement	break ;	1408:3:27648:27653	3471057	289	True				
ANR	3473919	Label	case Z80_DEFB :	1409:2:27657:27670	3471057	290	True				
ANR	3473920	Identifier	Z80_DEFB		3471057	0					
ANR	3473921	Label	case Z80_DB :	1410:2:27674:27685	3471057	291	True				
ANR	3473922	Identifier	Z80_DB		3471057	0					
ANR	3473923	Label	case Z80_DEFM :	1411:2:27689:27702	3471057	292	True				
ANR	3473924	Identifier	Z80_DEFM		3471057	0					
ANR	3473925	Label	case Z80_DM :	1412:2:27706:27717	3471057	293	True				
ANR	3473926	Identifier	Z80_DM		3471057	0					
ANR	3473927	ExpressionStatement	ptr = delspc ( ptr )	1413:3:27722:27740	3471057	294	True				
ANR	3473928	AssignmentExpression	ptr = delspc ( ptr )		3471057	0		=			
ANR	3473929	Identifier	ptr		3471057	0					
ANR	3473930	CallExpression	delspc ( ptr )		3471057	1					
ANR	3473931	Callee	delspc		3471057	0					
ANR	3473932	Identifier	delspc		3471057	0					
ANR	3473933	ArgumentList	ptr		3471057	1					
ANR	3473934	Argument	ptr		3471057	0					
ANR	3473935	Identifier	ptr		3471057	0					
ANR	3473936	WhileStatement	while ( 1 )		3471057	295					
ANR	3473937	Condition	1	1414:10:27752:27752	3471057	0	True				
ANR	3473938	PrimaryExpression	1		3471057	0					
ANR	3473939	CompoundStatement		604:13:9841:9841	3471057	1					
ANR	3473940	ExpressionStatement	"have_quote = ( * ptr == '""' || * ptr == '\\'' )"	1415:4:27761:27803	3471057	0	True				
ANR	3473941	AssignmentExpression	"have_quote = ( * ptr == '""' || * ptr == '\\'' )"		3471057	0		=			
ANR	3473942	Identifier	have_quote		3471057	0					
ANR	3473943	OrExpression	"* ptr == '""' || * ptr == '\\''"		3471057	1		||			
ANR	3473944	EqualityExpression	"* ptr == '""'"		3471057	0		==			
ANR	3473945	UnaryOperationExpression	* ptr		3471057	0					
ANR	3473946	UnaryOperator	*		3471057	0					
ANR	3473947	Identifier	ptr		3471057	1					
ANR	3473948	PrimaryExpression	"'""'"		3471057	1					
ANR	3473949	EqualityExpression	* ptr == '\\''		3471057	1		==			
ANR	3473950	UnaryOperationExpression	* ptr		3471057	0					
ANR	3473951	UnaryOperator	*		3471057	0					
ANR	3473952	Identifier	ptr		3471057	1					
ANR	3473953	PrimaryExpression	'\\''		3471057	1					
ANR	3473954	IfStatement	if ( have_quote )		3471057	1					
ANR	3473955	Condition	have_quote	1416:8:27813:27822	3471057	0	True				
ANR	3473956	Identifier	have_quote		3471057	0					
ANR	3473957	CompoundStatement		608:5:9943:9959	3471057	1					
ANR	3473958	IdentifierDeclStatement	int quote = * ptr ;	1418:5:27857:27873	3471057	0	True				
ANR	3473959	IdentifierDecl	quote = * ptr		3471057	0					
ANR	3473960	IdentifierDeclType	int		3471057	0					
ANR	3473961	Identifier	quote		3471057	1					
ANR	3473962	AssignmentExpression	quote = * ptr		3471057	2		=			
ANR	3473963	Identifier	quote		3471057	0					
ANR	3473964	UnaryOperationExpression	* ptr		3471057	1					
ANR	3473965	UnaryOperator	*		3471057	0					
ANR	3473966	Identifier	ptr		3471057	1					
ANR	3473967	ExpressionStatement	++ ptr	1419:5:27880:27885	3471057	1	True				
ANR	3473968	UnaryExpression	++ ptr		3471057	0					
ANR	3473969	IncDec	++		3471057	0					
ANR	3473970	Identifier	ptr		3471057	1					
ANR	3473971	WhileStatement	while ( * ptr != quote )		3471057	2					
ANR	3473972	Condition	* ptr != quote	1420:12:27899:27911	3471057	0	True				
ANR	3473973	EqualityExpression	* ptr != quote		3471057	0		!=			
ANR	3473974	UnaryOperationExpression	* ptr		3471057	0					
ANR	3473975	UnaryOperator	*		3471057	0					
ANR	3473976	Identifier	ptr		3471057	1					
ANR	3473977	Identifier	quote		3471057	1					
ANR	3473978	CompoundStatement		610:27:10000:10000	3471057	1					
ANR	3473979	ExpressionStatement	"write_one_byte ( rd_character ( & ptr , NULL , 1 ) , 0 )"	1421:6:27922:27970	3471057	0	True				
ANR	3473980	CallExpression	"write_one_byte ( rd_character ( & ptr , NULL , 1 ) , 0 )"		3471057	0					
ANR	3473981	Callee	write_one_byte		3471057	0					
ANR	3473982	Identifier	write_one_byte		3471057	0					
ANR	3473983	ArgumentList	"rd_character ( & ptr , NULL , 1 )"		3471057	1					
ANR	3473984	Argument	"rd_character ( & ptr , NULL , 1 )"		3471057	0					
ANR	3473985	CallExpression	"rd_character ( & ptr , NULL , 1 )"		3471057	0					
ANR	3473986	Callee	rd_character		3471057	0					
ANR	3473987	Identifier	rd_character		3471057	0					
ANR	3473988	ArgumentList	& ptr		3471057	1					
ANR	3473989	Argument	& ptr		3471057	0					
ANR	3473990	UnaryOperationExpression	& ptr		3471057	0					
ANR	3473991	UnaryOperator	&		3471057	0					
ANR	3473992	Identifier	ptr		3471057	1					
ANR	3473993	Argument	NULL		3471057	1					
ANR	3473994	Identifier	NULL		3471057	0					
ANR	3473995	Argument	1		3471057	2					
ANR	3473996	PrimaryExpression	1		3471057	0					
ANR	3473997	Argument	0		3471057	1					
ANR	3473998	PrimaryExpression	0		3471057	0					
ANR	3473999	IfStatement	if ( * ptr == 0 )		3471057	1					
ANR	3474000	Condition	* ptr == 0	1422:10:27982:27990	3471057	0	True				
ANR	3474001	EqualityExpression	* ptr == 0		3471057	0		==			
ANR	3474002	UnaryOperationExpression	* ptr		3471057	0					
ANR	3474003	UnaryOperator	*		3471057	0					
ANR	3474004	Identifier	ptr		3471057	1					
ANR	3474005	PrimaryExpression	0		3471057	1					
ANR	3474006	CompoundStatement		612:21:10079:10079	3471057	1					
ANR	3474007	ExpressionStatement	"eprintf ( ""end of line in quoted string\\n"" )"	1423:7:28002:28044	3471057	0	True				
ANR	3474008	CallExpression	"eprintf ( ""end of line in quoted string\\n"" )"		3471057	0					
ANR	3474009	Callee	eprintf		3471057	0					
ANR	3474010	Identifier	eprintf		3471057	0					
ANR	3474011	ArgumentList	"""end of line in quoted string\\n"""		3471057	1					
ANR	3474012	Argument	"""end of line in quoted string\\n"""		3471057	0					
ANR	3474013	PrimaryExpression	"""end of line in quoted string\\n"""		3471057	0					
ANR	3474014	BreakStatement	break ;	1424:7:28053:28058	3471057	1	True				
ANR	3474015	ExpressionStatement	++ ptr	1427:5:28080:28085	3471057	3	True				
ANR	3474016	UnaryExpression	++ ptr		3471057	0					
ANR	3474017	IncDec	++		3471057	0					
ANR	3474018	Identifier	ptr		3471057	1					
ANR	3474019	ElseStatement	else		3471057	0					
ANR	3474020	CompoundStatement		618:11:10184:10184	3471057	0					
ANR	3474021	ExpressionStatement	"skipword ( & ptr , ',' )"	1430:5:28134:28154	3471057	0	True				
ANR	3474022	CallExpression	"skipword ( & ptr , ',' )"		3471057	0					
ANR	3474023	Callee	skipword		3471057	0					
ANR	3474024	Identifier	skipword		3471057	0					
ANR	3474025	ArgumentList	& ptr		3471057	1					
ANR	3474026	Argument	& ptr		3471057	0					
ANR	3474027	UnaryOperationExpression	& ptr		3471057	0					
ANR	3474028	UnaryOperator	&		3471057	0					
ANR	3474029	Identifier	ptr		3471057	1					
ANR	3474030	Argument	"','"		3471057	1					
ANR	3474031	PrimaryExpression	"','"		3471057	0					
ANR	3474032	ExpressionStatement	ptr = delspc ( ptr )	1432:4:28166:28184	3471057	2	True				
ANR	3474033	AssignmentExpression	ptr = delspc ( ptr )		3471057	0		=			
ANR	3474034	Identifier	ptr		3471057	0					
ANR	3474035	CallExpression	delspc ( ptr )		3471057	1					
ANR	3474036	Callee	delspc		3471057	0					
ANR	3474037	Identifier	delspc		3471057	0					
ANR	3474038	ArgumentList	ptr		3471057	1					
ANR	3474039	Argument	ptr		3471057	0					
ANR	3474040	Identifier	ptr		3471057	0					
ANR	3474041	IfStatement	"if ( * ptr == ',' )"		3471057	3					
ANR	3474042	Condition	"* ptr == ','"	1433:8:28194:28204	3471057	0	True				
ANR	3474043	EqualityExpression	"* ptr == ','"		3471057	0		==			
ANR	3474044	UnaryOperationExpression	* ptr		3471057	0					
ANR	3474045	UnaryOperator	*		3471057	0					
ANR	3474046	Identifier	ptr		3471057	1					
ANR	3474047	PrimaryExpression	"','"		3471057	1					
ANR	3474048	CompoundStatement		623:21:10293:10293	3471057	1					
ANR	3474049	ExpressionStatement	++ ptr	1434:5:28214:28219	3471057	0	True				
ANR	3474050	UnaryExpression	++ ptr		3471057	0					
ANR	3474051	IncDec	++		3471057	0					
ANR	3474052	Identifier	ptr		3471057	1					
ANR	3474053	ContinueStatement	continue ;	1435:5:28226:28234	3471057	1	True				
ANR	3474054	IfStatement	if ( * ptr != 0 )		3471057	4					
ANR	3474055	Condition	* ptr != 0	1437:8:28250:28258	3471057	0	True				
ANR	3474056	EqualityExpression	* ptr != 0		3471057	0		!=			
ANR	3474057	UnaryOperationExpression	* ptr		3471057	0					
ANR	3474058	UnaryOperator	*		3471057	0					
ANR	3474059	Identifier	ptr		3471057	1					
ANR	3474060	PrimaryExpression	0		3471057	1					
ANR	3474061	CompoundStatement		627:19:10347:10347	3471057	1					
ANR	3474062	ExpressionStatement	"eprintf ( ""junk in byte definition: %s\\n"" , ptr )"	1438:5:28268:28314	3471057	0	True				
ANR	3474063	CallExpression	"eprintf ( ""junk in byte definition: %s\\n"" , ptr )"		3471057	0					
ANR	3474064	Callee	eprintf		3471057	0					
ANR	3474065	Identifier	eprintf		3471057	0					
ANR	3474066	ArgumentList	"""junk in byte definition: %s\\n"""		3471057	1					
ANR	3474067	Argument	"""junk in byte definition: %s\\n"""		3471057	0					
ANR	3474068	PrimaryExpression	"""junk in byte definition: %s\\n"""		3471057	0					
ANR	3474069	Argument	ptr		3471057	1					
ANR	3474070	Identifier	ptr		3471057	0					
ANR	3474071	BreakStatement	break ;	1440:4:28326:28331	3471057	5	True				
ANR	3474072	BreakStatement	break ;	1442:3:28341:28346	3471057	296	True				
ANR	3474073	Label	case Z80_DEFW :	1443:2:28350:28363	3471057	297	True				
ANR	3474074	Identifier	Z80_DEFW		3471057	0					
ANR	3474075	Label	case Z80_DW :	1444:2:28367:28378	3471057	298	True				
ANR	3474076	Identifier	Z80_DW		3471057	0					
ANR	3474077	IfStatement	"if ( ! ( r = rd_word ( & ptr , ',' ) ) )"		3471057	299					
ANR	3474078	Condition	"! ( r = rd_word ( & ptr , ',' ) )"	1445:7:28387:28412	3471057	0	True				
ANR	3474079	UnaryOperationExpression	"! ( r = rd_word ( & ptr , ',' ) )"		3471057	0					
ANR	3474080	UnaryOperator	!		3471057	0					
ANR	3474081	AssignmentExpression	"r = rd_word ( & ptr , ',' )"		3471057	1		=			
ANR	3474082	Identifier	r		3471057	0					
ANR	3474083	CallExpression	"rd_word ( & ptr , ',' )"		3471057	1					
ANR	3474084	Callee	rd_word		3471057	0					
ANR	3474085	Identifier	rd_word		3471057	0					
ANR	3474086	ArgumentList	& ptr		3471057	1					
ANR	3474087	Argument	& ptr		3471057	0					
ANR	3474088	UnaryOperationExpression	& ptr		3471057	0					
ANR	3474089	UnaryOperator	&		3471057	0					
ANR	3474090	Identifier	ptr		3471057	1					
ANR	3474091	Argument	"','"		3471057	1					
ANR	3474092	PrimaryExpression	"','"		3471057	0					
ANR	3474093	CompoundStatement		635:35:10501:10501	3471057	1					
ANR	3474094	ExpressionStatement	"eprintf ( ""No data for word definition\\n"" )"	1446:4:28421:28462	3471057	0	True				
ANR	3474095	CallExpression	"eprintf ( ""No data for word definition\\n"" )"		3471057	0					
ANR	3474096	Callee	eprintf		3471057	0					
ANR	3474097	Identifier	eprintf		3471057	0					
ANR	3474098	ArgumentList	"""No data for word definition\\n"""		3471057	1					
ANR	3474099	Argument	"""No data for word definition\\n"""		3471057	0					
ANR	3474100	PrimaryExpression	"""No data for word definition\\n"""		3471057	0					
ANR	3474101	BreakStatement	break ;	1447:4:28468:28473	3471057	1	True				
ANR	3474102	WhileStatement	while ( 1 )		3471057	300					
ANR	3474103	Condition	1	1449:10:28490:28490	3471057	0	True				
ANR	3474104	PrimaryExpression	1		3471057	0					
ANR	3474105	CompoundStatement		639:13:10579:10579	3471057	1					
ANR	3474106	ExpressionStatement	ptr = delspc ( ptr )	1450:4:28499:28517	3471057	0	True				
ANR	3474107	AssignmentExpression	ptr = delspc ( ptr )		3471057	0		=			
ANR	3474108	Identifier	ptr		3471057	0					
ANR	3474109	CallExpression	delspc ( ptr )		3471057	1					
ANR	3474110	Callee	delspc		3471057	0					
ANR	3474111	Identifier	delspc		3471057	0					
ANR	3474112	ArgumentList	ptr		3471057	1					
ANR	3474113	Argument	ptr		3471057	0					
ANR	3474114	Identifier	ptr		3471057	0					
ANR	3474115	IfStatement	"if ( * ptr != ',' )"		3471057	1					
ANR	3474116	Condition	"* ptr != ','"	1451:8:28527:28537	3471057	0	True				
ANR	3474117	EqualityExpression	"* ptr != ','"		3471057	0		!=			
ANR	3474118	UnaryOperationExpression	* ptr		3471057	0					
ANR	3474119	UnaryOperator	*		3471057	0					
ANR	3474120	Identifier	ptr		3471057	1					
ANR	3474121	PrimaryExpression	"','"		3471057	1					
ANR	3474122	CompoundStatement		641:21:10626:10626	3471057	1					
ANR	3474123	BreakStatement	break ;	1452:5:28547:28552	3471057	0	True				
ANR	3474124	ExpressionStatement	++ ptr	1454:4:28564:28569	3471057	2	True				
ANR	3474125	UnaryExpression	++ ptr		3471057	0					
ANR	3474126	IncDec	++		3471057	0					
ANR	3474127	Identifier	ptr		3471057	1					
ANR	3474128	IfStatement	"if ( ! ( r = rd_word ( & ptr , ',' ) ) )"		3471057	3					
ANR	3474129	Condition	"! ( r = rd_word ( & ptr , ',' ) )"	1455:8:28579:28604	3471057	0	True				
ANR	3474130	UnaryOperationExpression	"! ( r = rd_word ( & ptr , ',' ) )"		3471057	0					
ANR	3474131	UnaryOperator	!		3471057	0					
ANR	3474132	AssignmentExpression	"r = rd_word ( & ptr , ',' )"		3471057	1		=			
ANR	3474133	Identifier	r		3471057	0					
ANR	3474134	CallExpression	"rd_word ( & ptr , ',' )"		3471057	1					
ANR	3474135	Callee	rd_word		3471057	0					
ANR	3474136	Identifier	rd_word		3471057	0					
ANR	3474137	ArgumentList	& ptr		3471057	1					
ANR	3474138	Argument	& ptr		3471057	0					
ANR	3474139	UnaryOperationExpression	& ptr		3471057	0					
ANR	3474140	UnaryOperator	&		3471057	0					
ANR	3474141	Identifier	ptr		3471057	1					
ANR	3474142	Argument	"','"		3471057	1					
ANR	3474143	PrimaryExpression	"','"		3471057	0					
ANR	3474144	CompoundStatement		645:36:10693:10693	3471057	1					
ANR	3474145	ExpressionStatement	"eprintf ( ""Missing expression in defw\\n"" )"	1456:5:28614:28654	3471057	0	True				
ANR	3474146	CallExpression	"eprintf ( ""Missing expression in defw\\n"" )"		3471057	0					
ANR	3474147	Callee	eprintf		3471057	0					
ANR	3474148	Identifier	eprintf		3471057	0					
ANR	3474149	ArgumentList	"""Missing expression in defw\\n"""		3471057	1					
ANR	3474150	Argument	"""Missing expression in defw\\n"""		3471057	0					
ANR	3474151	PrimaryExpression	"""Missing expression in defw\\n"""		3471057	0					
ANR	3474152	BreakStatement	break ;	1459:3:28670:28675	3471057	301	True				
ANR	3474153	Label	case Z80_DEFS :	1460:2:28679:28692	3471057	302	True				
ANR	3474154	Identifier	Z80_DEFS		3471057	0					
ANR	3474155	Label	case Z80_DS :	1461:2:28696:28707	3471057	303	True				
ANR	3474156	Identifier	Z80_DS		3471057	0					
ANR	3474157	ExpressionStatement	"r = rd_expr ( & ptr , ',' , NULL , sp , 1 )"	1462:3:28712:28748	3471057	304	True				
ANR	3474158	AssignmentExpression	"r = rd_expr ( & ptr , ',' , NULL , sp , 1 )"		3471057	0		=			
ANR	3474159	Identifier	r		3471057	0					
ANR	3474160	CallExpression	"rd_expr ( & ptr , ',' , NULL , sp , 1 )"		3471057	1					
ANR	3474161	Callee	rd_expr		3471057	0					
ANR	3474162	Identifier	rd_expr		3471057	0					
ANR	3474163	ArgumentList	& ptr		3471057	1					
ANR	3474164	Argument	& ptr		3471057	0					
ANR	3474165	UnaryOperationExpression	& ptr		3471057	0					
ANR	3474166	UnaryOperator	&		3471057	0					
ANR	3474167	Identifier	ptr		3471057	1					
ANR	3474168	Argument	"','"		3471057	1					
ANR	3474169	PrimaryExpression	"','"		3471057	0					
ANR	3474170	Argument	NULL		3471057	2					
ANR	3474171	Identifier	NULL		3471057	0					
ANR	3474172	Argument	sp		3471057	3					
ANR	3474173	Identifier	sp		3471057	0					
ANR	3474174	Argument	1		3471057	4					
ANR	3474175	PrimaryExpression	1		3471057	0					
ANR	3474176	IfStatement	if ( r < 0 )		3471057	305					
ANR	3474177	Condition	r < 0	1463:7:28757:28761	3471057	0	True				
ANR	3474178	RelationalExpression	r < 0		3471057	0		<			
ANR	3474179	Identifier	r		3471057	0					
ANR	3474180	PrimaryExpression	0		3471057	1					
ANR	3474181	CompoundStatement		653:14:10850:10850	3471057	1					
ANR	3474182	Statement	eprintf	1464:4:28770:28776	3471057	0	True				
ANR	3474183	Statement	(	1464:12:28778:28778	3471057	1	True				
ANR	3474184	Statement	"""ds should have its first argument >=0"""	1464:13:28779:28817	3471057	2	True				
ANR	3474185	Statement	""" (not -0x%x)\\n"""	1465:5:28824:28839	3471057	3	True				
ANR	3474186	Statement	","	1465:21:28840:28840	3471057	4	True				
ANR	3474187	Statement	-	1465:23:28842:28842	3471057	5	True				
ANR	3474188	Statement	r	1465:24:28843:28843	3471057	6	True				
ANR	3474189	Statement	)	1465:25:28844:28844	3471057	7	True				
ANR	3474190	ExpressionStatement		1465:26:28845:28845	3471057	8	True				
ANR	3474191	BreakStatement	break ;	1466:4:28851:28856	3471057	9	True				
ANR	3474192	ExpressionStatement	ptr = delspc ( ptr )	1468:3:28866:28884	3471057	306	True				
ANR	3474193	AssignmentExpression	ptr = delspc ( ptr )		3471057	0		=			
ANR	3474194	Identifier	ptr		3471057	0					
ANR	3474195	CallExpression	delspc ( ptr )		3471057	1					
ANR	3474196	Callee	delspc		3471057	0					
ANR	3474197	Identifier	delspc		3471057	0					
ANR	3474198	ArgumentList	ptr		3471057	1					
ANR	3474199	Argument	ptr		3471057	0					
ANR	3474200	Identifier	ptr		3471057	0					
ANR	3474201	IfStatement	if ( * ptr )		3471057	307					
ANR	3474202	Condition	* ptr	1469:7:28893:28896	3471057	0	True				
ANR	3474203	UnaryOperationExpression	* ptr		3471057	0					
ANR	3474204	UnaryOperator	*		3471057	0					
ANR	3474205	Identifier	ptr		3471057	1					
ANR	3474206	CompoundStatement		659:13:10985:10985	3471057	1					
ANR	3474207	ExpressionStatement	rd_comma ( & ptr )	1470:4:28905:28920	3471057	0	True				
ANR	3474208	CallExpression	rd_comma ( & ptr )		3471057	0					
ANR	3474209	Callee	rd_comma		3471057	0					
ANR	3474210	Identifier	rd_comma		3471057	0					
ANR	3474211	ArgumentList	& ptr		3471057	1					
ANR	3474212	Argument	& ptr		3471057	0					
ANR	3474213	UnaryOperationExpression	& ptr		3471057	0					
ANR	3474214	UnaryOperator	&		3471057	0					
ANR	3474215	Identifier	ptr		3471057	1					
ANR	3474216	ExpressionStatement	readbyte = 0	1471:4:28926:28938	3471057	1	True				
ANR	3474217	AssignmentExpression	readbyte = 0		3471057	0		=			
ANR	3474218	Identifier	readbyte		3471057	0					
ANR	3474219	PrimaryExpression	0		3471057	1					
ANR	3474220	ExpressionStatement	"rd_byte ( & ptr , '\\0' )"	1472:4:28944:28964	3471057	2	True				
ANR	3474221	CallExpression	"rd_byte ( & ptr , '\\0' )"		3471057	0					
ANR	3474222	Callee	rd_byte		3471057	0					
ANR	3474223	Identifier	rd_byte		3471057	0					
ANR	3474224	ArgumentList	& ptr		3471057	1					
ANR	3474225	Argument	& ptr		3471057	0					
ANR	3474226	UnaryOperationExpression	& ptr		3471057	0					
ANR	3474227	UnaryOperator	&		3471057	0					
ANR	3474228	Identifier	ptr		3471057	1					
ANR	3474229	Argument	'\\0'		3471057	1					
ANR	3474230	PrimaryExpression	'\\0'		3471057	0					
ANR	3474231	ExpressionStatement	writebyte = 0	1473:4:28970:28983	3471057	3	True				
ANR	3474232	AssignmentExpression	writebyte = 0		3471057	0		=			
ANR	3474233	Identifier	writebyte		3471057	0					
ANR	3474234	PrimaryExpression	0		3471057	1					
ANR	3474235	BreakStatement	break ;	1474:4:28989:28994	3471057	4	True				
ANR	3474236	ForStatement	for ( i = 0 ; i < r ; i ++ )		3471057	308					
ANR	3474237	ForInit	i = 0 ;	1476:8:29009:29014	3471057	0	True				
ANR	3474238	AssignmentExpression	i = 0		3471057	0		=			
ANR	3474239	Identifier	i		3471057	0					
ANR	3474240	PrimaryExpression	0		3471057	1					
ANR	3474241	Condition	i < r	1476:15:29016:29020	3471057	1	True				
ANR	3474242	RelationalExpression	i < r		3471057	0		<			
ANR	3474243	Identifier	i		3471057	0					
ANR	3474244	Identifier	r		3471057	1					
ANR	3474245	PostIncDecOperationExpression	i ++	1476:22:29023:29025	3471057	2	True				
ANR	3474246	Identifier	i		3471057	0					
ANR	3474247	IncDec	++		3471057	1					
ANR	3474248	CompoundStatement		666:27:11114:11114	3471057	3					
ANR	3474249	ExpressionStatement	"write_one_byte ( 0 , 0 )"	1477:4:29034:29055	3471057	0	True				
ANR	3474250	CallExpression	"write_one_byte ( 0 , 0 )"		3471057	0					
ANR	3474251	Callee	write_one_byte		3471057	0					
ANR	3474252	Identifier	write_one_byte		3471057	0					
ANR	3474253	ArgumentList	0		3471057	1					
ANR	3474254	Argument	0		3471057	0					
ANR	3474255	PrimaryExpression	0		3471057	0					
ANR	3474256	Argument	0		3471057	1					
ANR	3474257	PrimaryExpression	0		3471057	0					
ANR	3474258	BreakStatement	break ;	1479:3:29065:29070	3471057	309	True				
ANR	3474259	Label	case Z80_END :	1480:2:29074:29086	3471057	310	True				
ANR	3474260	Identifier	Z80_END		3471057	0					
ANR	3474261	BreakStatement	break ;	1481:3:29091:29096	3471057	311	True				
ANR	3474262	Label	case Z80_ORG :	1482:2:29100:29112	3471057	312	True				
ANR	3474263	Identifier	Z80_ORG		3471057	0					
ANR	3474264	ExpressionStatement	"addr = rd_expr ( & ptr , '\\0' , NULL , sp , 1 ) & 0xffff"	1483:3:29117:29166	3471057	313	True				
ANR	3474265	AssignmentExpression	"addr = rd_expr ( & ptr , '\\0' , NULL , sp , 1 ) & 0xffff"		3471057	0		=			
ANR	3474266	Identifier	addr		3471057	0					
ANR	3474267	BitAndExpression	"rd_expr ( & ptr , '\\0' , NULL , sp , 1 ) & 0xffff"		3471057	1		&			
ANR	3474268	CallExpression	"rd_expr ( & ptr , '\\0' , NULL , sp , 1 )"		3471057	0					
ANR	3474269	Callee	rd_expr		3471057	0					
ANR	3474270	Identifier	rd_expr		3471057	0					
ANR	3474271	ArgumentList	& ptr		3471057	1					
ANR	3474272	Argument	& ptr		3471057	0					
ANR	3474273	UnaryOperationExpression	& ptr		3471057	0					
ANR	3474274	UnaryOperator	&		3471057	0					
ANR	3474275	Identifier	ptr		3471057	1					
ANR	3474276	Argument	'\\0'		3471057	1					
ANR	3474277	PrimaryExpression	'\\0'		3471057	0					
ANR	3474278	Argument	NULL		3471057	2					
ANR	3474279	Identifier	NULL		3471057	0					
ANR	3474280	Argument	sp		3471057	3					
ANR	3474281	Identifier	sp		3471057	0					
ANR	3474282	Argument	1		3471057	4					
ANR	3474283	PrimaryExpression	1		3471057	0					
ANR	3474284	PrimaryExpression	0xffff		3471057	1					
ANR	3474285	BreakStatement	break ;	1484:3:29171:29176	3471057	314	True				
ANR	3474286	Label	case Z80_IF :	1485:2:29180:29191	3471057	315	True				
ANR	3474287	Identifier	Z80_IF		3471057	0					
ANR	3474288	IfStatement	"if ( rd_expr ( & ptr , '\\0' , NULL , sp , 1 ) )"		3471057	316					
ANR	3474289	Condition	"rd_expr ( & ptr , '\\0' , NULL , sp , 1 )"	1486:7:29200:29232	3471057	0	True				
ANR	3474290	CallExpression	"rd_expr ( & ptr , '\\0' , NULL , sp , 1 )"		3471057	0					
ANR	3474291	Callee	rd_expr		3471057	0					
ANR	3474292	Identifier	rd_expr		3471057	0					
ANR	3474293	ArgumentList	& ptr		3471057	1					
ANR	3474294	Argument	& ptr		3471057	0					
ANR	3474295	UnaryOperationExpression	& ptr		3471057	0					
ANR	3474296	UnaryOperator	&		3471057	0					
ANR	3474297	Identifier	ptr		3471057	1					
ANR	3474298	Argument	'\\0'		3471057	1					
ANR	3474299	PrimaryExpression	'\\0'		3471057	0					
ANR	3474300	Argument	NULL		3471057	2					
ANR	3474301	Identifier	NULL		3471057	0					
ANR	3474302	Argument	sp		3471057	3					
ANR	3474303	Identifier	sp		3471057	0					
ANR	3474304	Argument	1		3471057	4					
ANR	3474305	PrimaryExpression	1		3471057	0					
ANR	3474306	CompoundStatement		676:42:11321:11321	3471057	1					
ANR	3474307	ExpressionStatement	ifcount ++	1487:4:29241:29250	3471057	0	True				
ANR	3474308	PostIncDecOperationExpression	ifcount ++		3471057	0					
ANR	3474309	Identifier	ifcount		3471057	0					
ANR	3474310	IncDec	++		3471057	1					
ANR	3474311	ElseStatement	else		3471057	0					
ANR	3474312	CompoundStatement		678:10:11348:11348	3471057	0					
ANR	3474313	ExpressionStatement	noifcount ++	1489:4:29268:29279	3471057	0	True				
ANR	3474314	PostIncDecOperationExpression	noifcount ++		3471057	0					
ANR	3474315	Identifier	noifcount		3471057	0					
ANR	3474316	IncDec	++		3471057	1					
ANR	3474317	BreakStatement	break ;	1491:3:29289:29294	3471057	317	True				
ANR	3474318	Label	case Z80_ELSE :	1492:2:29298:29311	3471057	318	True				
ANR	3474319	Identifier	Z80_ELSE		3471057	0					
ANR	3474320	IfStatement	if ( ifcount == 0 )		3471057	319					
ANR	3474321	Condition	ifcount == 0	1493:7:29320:29331	3471057	0	True				
ANR	3474322	EqualityExpression	ifcount == 0		3471057	0		==			
ANR	3474323	Identifier	ifcount		3471057	0					
ANR	3474324	PrimaryExpression	0		3471057	1					
ANR	3474325	CompoundStatement		683:21:11420:11420	3471057	1					
ANR	3474326	ExpressionStatement	"eprintf ( ""else without if\\n"" )"	1494:4:29340:29369	3471057	0	True				
ANR	3474327	CallExpression	"eprintf ( ""else without if\\n"" )"		3471057	0					
ANR	3474328	Callee	eprintf		3471057	0					
ANR	3474329	Identifier	eprintf		3471057	0					
ANR	3474330	ArgumentList	"""else without if\\n"""		3471057	1					
ANR	3474331	Argument	"""else without if\\n"""		3471057	0					
ANR	3474332	PrimaryExpression	"""else without if\\n"""		3471057	0					
ANR	3474333	BreakStatement	break ;	1495:4:29375:29380	3471057	1	True				
ANR	3474334	ExpressionStatement	noifcount = 1	1497:3:29390:29403	3471057	320	True				
ANR	3474335	AssignmentExpression	noifcount = 1		3471057	0		=			
ANR	3474336	Identifier	noifcount		3471057	0					
ANR	3474337	PrimaryExpression	1		3471057	1					
ANR	3474338	ExpressionStatement	ifcount --	1498:3:29408:29417	3471057	321	True				
ANR	3474339	PostIncDecOperationExpression	ifcount --		3471057	0					
ANR	3474340	Identifier	ifcount		3471057	0					
ANR	3474341	IncDec	--		3471057	1					
ANR	3474342	BreakStatement	break ;	1499:3:29422:29427	3471057	322	True				
ANR	3474343	Label	case Z80_ENDIF :	1500:2:29431:29445	3471057	323	True				
ANR	3474344	Identifier	Z80_ENDIF		3471057	0					
ANR	3474345	IfStatement	if ( noifcount == 0 && ifcount == 0 )		3471057	324					
ANR	3474346	Condition	noifcount == 0 && ifcount == 0	1501:7:29454:29483	3471057	0	True				
ANR	3474347	AndExpression	noifcount == 0 && ifcount == 0		3471057	0		&&			
ANR	3474348	EqualityExpression	noifcount == 0		3471057	0		==			
ANR	3474349	Identifier	noifcount		3471057	0					
ANR	3474350	PrimaryExpression	0		3471057	1					
ANR	3474351	EqualityExpression	ifcount == 0		3471057	1		==			
ANR	3474352	Identifier	ifcount		3471057	0					
ANR	3474353	PrimaryExpression	0		3471057	1					
ANR	3474354	CompoundStatement		691:39:11572:11572	3471057	1					
ANR	3474355	ExpressionStatement	"eprintf ( ""endif without if\\n"" )"	1502:4:29492:29522	3471057	0	True				
ANR	3474356	CallExpression	"eprintf ( ""endif without if\\n"" )"		3471057	0					
ANR	3474357	Callee	eprintf		3471057	0					
ANR	3474358	Identifier	eprintf		3471057	0					
ANR	3474359	ArgumentList	"""endif without if\\n"""		3471057	1					
ANR	3474360	Argument	"""endif without if\\n"""		3471057	0					
ANR	3474361	PrimaryExpression	"""endif without if\\n"""		3471057	0					
ANR	3474362	BreakStatement	break ;	1503:4:29528:29533	3471057	1	True				
ANR	3474363	IfStatement	if ( noifcount )		3471057	325					
ANR	3474364	Condition	noifcount	1505:7:29547:29555	3471057	0	True				
ANR	3474365	Identifier	noifcount		3471057	0					
ANR	3474366	CompoundStatement		695:18:11644:11644	3471057	1					
ANR	3474367	ExpressionStatement	noifcount --	1506:4:29564:29575	3471057	0	True				
ANR	3474368	PostIncDecOperationExpression	noifcount --		3471057	0					
ANR	3474369	Identifier	noifcount		3471057	0					
ANR	3474370	IncDec	--		3471057	1					
ANR	3474371	ElseStatement	else		3471057	0					
ANR	3474372	CompoundStatement		697:10:11673:11673	3471057	0					
ANR	3474373	ExpressionStatement	ifcount --	1508:4:29593:29602	3471057	0	True				
ANR	3474374	PostIncDecOperationExpression	ifcount --		3471057	0					
ANR	3474375	Identifier	ifcount		3471057	0					
ANR	3474376	IncDec	--		3471057	1					
ANR	3474377	BreakStatement	break ;	1510:3:29612:29617	3471057	326	True				
ANR	3474378	Label	case Z80_ENDM :	1511:2:29621:29634	3471057	327	True				
ANR	3474379	Identifier	Z80_ENDM		3471057	0					
ANR	3474380	IfStatement	if ( stack [ sp ] . file )		3471057	328					
ANR	3474381	Condition	stack [ sp ] . file	1512:7:29643:29656	3471057	0	True				
ANR	3474382	MemberAccess	stack [ sp ] . file		3471057	0					
ANR	3474383	ArrayIndexing	stack [ sp ]		3471057	0					
ANR	3474384	Identifier	stack		3471057	0					
ANR	3474385	Identifier	sp		3471057	1					
ANR	3474386	Identifier	file		3471057	1					
ANR	3474387	CompoundStatement		702:23:11745:11745	3471057	1					
ANR	3474388	ExpressionStatement	"eprintf ( ""endm outside macro definition\\n"" )"	1513:4:29665:29708	3471057	0	True				
ANR	3474389	CallExpression	"eprintf ( ""endm outside macro definition\\n"" )"		3471057	0					
ANR	3474390	Callee	eprintf		3471057	0					
ANR	3474391	Identifier	eprintf		3471057	0					
ANR	3474392	ArgumentList	"""endm outside macro definition\\n"""		3471057	1					
ANR	3474393	Argument	"""endm outside macro definition\\n"""		3471057	0					
ANR	3474394	PrimaryExpression	"""endm outside macro definition\\n"""		3471057	0					
ANR	3474395	BreakStatement	break ;	1515:3:29718:29723	3471057	329	True				
ANR	3474396	Label	case Z80_SEEK :	1516:2:29727:29740	3471057	330	True				
ANR	3474397	Identifier	Z80_SEEK		3471057	0					
ANR	3474398	ExpressionStatement	"eprintf ( ""seek error\\n"" )"	1517:3:29745:29769	3471057	331	True				
ANR	3474399	CallExpression	"eprintf ( ""seek error\\n"" )"		3471057	0					
ANR	3474400	Callee	eprintf		3471057	0					
ANR	3474401	Identifier	eprintf		3471057	0					
ANR	3474402	ArgumentList	"""seek error\\n"""		3471057	1					
ANR	3474403	Argument	"""seek error\\n"""		3471057	0					
ANR	3474404	PrimaryExpression	"""seek error\\n"""		3471057	0					
ANR	3474405	BreakStatement	break ;	1518:3:29774:29779	3471057	332	True				
ANR	3474406	Label	default :	1519:2:29783:29790	3471057	333	True				
ANR	3474407	Identifier	default		3471057	0					
ANR	3474408	ReturnStatement	return 0 ;	1521:3:29858:29866	3471057	334	True				
ANR	3474409	PrimaryExpression	0		3471057	0					
ANR	3474410	Condition	false	1523:10:29882:29886	3471057	1	True				
ANR	3474411	Identifier	false		3471057	0					
ANR	3474412	ReturnStatement	return obuflen ;	1525:1:29910:29924	3471057	7	True				
ANR	3474413	Identifier	obuflen		3471057	0					
ANR	3474414	ReturnType	static int		3471057	1					
ANR	3474415	Identifier	assemble		3471057	2					
ANR	3474416	ParameterList	"const char * str , unsigned char * _obuf"		3471057	3					
ANR	3474417	Parameter	const char * str	811:20:17874:17888	3471057	0	True				
ANR	3474418	ParameterType	const char *		3471057	0					
ANR	3474419	Identifier	str		3471057	1					
ANR	3474420	Parameter	unsigned char * _obuf	811:37:17891:17910	3471057	1	True				
ANR	3474421	ParameterType	unsigned char *		3471057	0					
ANR	3474422	Identifier	_obuf		3471057	1					
ANR	3474423	CFGEntryNode	ENTRY		3471057		True				
ANR	3474424	CFGExitNode	EXIT		3471057		True				
ANR	3474425	Symbol	* sp		3471057						
ANR	3474426	Symbol	rd_r_rr		3471057						
ANR	3474427	Symbol	rd_jr		3471057						
ANR	3474428	Symbol	stack		3471057						
ANR	3474429	Symbol	HL		3471057						
ANR	3474430	Symbol	rd_jp		3471057						
ANR	3474431	Symbol	SPHL		3471057						
ANR	3474432	Symbol	ld_DE		3471057						
ANR	3474433	Symbol	strchr		3471057						
ANR	3474434	Symbol	have_quote		3471057						
ANR	3474435	Symbol	rd_r		3471057						
ANR	3474436	Symbol	quote		3471057						
ANR	3474437	Symbol	obuf		3471057						
ANR	3474438	Symbol	* ptr		3471057						
ANR	3474439	Symbol	ld_nnHL		3471057						
ANR	3474440	Symbol	cont		3471057						
ANR	3474441	Symbol	define_macro		3471057						
ANR	3474442	Symbol	rd_a_hl		3471057						
ANR	3474443	Symbol	noifcount		3471057						
ANR	3474444	Symbol	rd_ldbcdehla		3471057						
ANR	3474445	Symbol	rd_nnc		3471057						
ANR	3474446	Symbol	rd_a		3471057						
ANR	3474447	Symbol	rd_c		3471057						
ANR	3474448	Symbol	NULL		3471057						
ANR	3474449	Symbol	rd_rr_		3471057						
ANR	3474450	Symbol	indexed		3471057						
ANR	3474451	Symbol	rd_in		3471057						
ANR	3474452	Symbol	baseaddr		3471057						
ANR	3474453	Symbol	rd_ld_hl		3471057						
ANR	3474454	Symbol	readcommand		3471057						
ANR	3474455	Symbol	rd_r_		3471057						
ANR	3474456	Symbol	str		3471057						
ANR	3474457	Symbol	ifcount		3471057						
ANR	3474458	Symbol	rd_character		3471057						
ANR	3474459	Symbol	rd_rrxx		3471057						
ANR	3474460	Symbol	has_argument		3471057						
ANR	3474461	Symbol	cmd		3471057						
ANR	3474462	Symbol	bufptr		3471057						
ANR	3474463	Symbol	A		3471057						
ANR	3474464	Symbol	rd_nn_nn		3471057						
ANR	3474465	Symbol	rd_r_add		3471057						
ANR	3474466	Symbol	C		3471057						
ANR	3474467	Symbol	ld_nnA		3471057						
ANR	3474468	Symbol	rd_hl		3471057						
ANR	3474469	Symbol	stack [ sp ] . file		3471057						
ANR	3474470	Symbol	* bufptr		3471057						
ANR	3474471	Symbol	A_I		3471057						
ANR	3474472	Symbol	ldDE		3471057						
ANR	3474473	Symbol	readbyte		3471057						
ANR	3474474	Symbol	indexjmp		3471057						
ANR	3474475	Symbol	rd_ld		3471057						
ANR	3474476	Symbol	rd_hlx		3471057						
ANR	3474477	Symbol	& ptr		3471057						
ANR	3474478	Symbol	writebyte		3471057						
ANR	3474479	Symbol	A_R		3471057						
ANR	3474480	Symbol	z80buffer		3471057						
ANR	3474481	Symbol	ldR		3471057						
ANR	3474482	Symbol	addr		3471057						
ANR	3474483	Symbol	sp		3471057						
ANR	3474484	Symbol	delspc		3471057						
ANR	3474485	Symbol	obuflen		3471057						
ANR	3474486	Symbol	_NN		3471057						
ANR	3474487	Symbol	addHL		3471057						
ANR	3474488	Symbol	A_NN		3471057						
ANR	3474489	Symbol	rd_0_2		3471057						
ANR	3474490	Symbol	rd_ex1		3471057						
ANR	3474491	Symbol	rd_stack		3471057						
ANR	3474492	Symbol	false		3471057						
ANR	3474493	Symbol	rd_ld_nn		3471057						
ANR	3474494	Symbol	i		3471057						
ANR	3474495	Symbol	rd_lda		3471057						
ANR	3474496	Symbol	rd_word		3471057						
ANR	3474497	Symbol	_obuf		3471057						
ANR	3474498	Symbol	rd_0_7		3471057						
ANR	3474499	Symbol	ptr		3471057						
ANR	3474500	Symbol	r		3471057						
ANR	3474501	Symbol	comma		3471057						
ANR	3474502	Symbol	s		3471057						
ANR	3474503	Symbol	rd_out		3471057						
ANR	3474504	Symbol	rd_expr		3471057						
ANR	3474505	Symbol	rd_cc		3471057						
ANR	3474506	Symbol	* stack		3471057						
ANR	3474507	Symbol	readword		3471057						
ANR	3474508	Symbol	strdup		3471057						
ANR	3474509	Symbol	rd_af_		3471057						
ANR	3474510	Symbol	SPNN		3471057						
ANR	3474511	Symbol	rd_sp		3471057						
ANR	3474512	Function	z80asm	1529:0:29936:30025							
ANR	3474513	FunctionDef	"z80asm (unsigned char * outbuf , const char * s)"		3474512	0					
ANR	3474514	CompoundStatement		1529:57:29993:30025	3474512	0					
ANR	3474515	ReturnStatement	"return assemble ( s , outbuf ) ;"	1530:1:29996:30023	3474512	0	True				
ANR	3474516	CallExpression	"assemble ( s , outbuf )"		3474512	0					
ANR	3474517	Callee	assemble		3474512	0					
ANR	3474518	Identifier	assemble		3474512	0					
ANR	3474519	ArgumentList	s		3474512	1					
ANR	3474520	Argument	s		3474512	0					
ANR	3474521	Identifier	s		3474512	0					
ANR	3474522	Argument	outbuf		3474512	1					
ANR	3474523	Identifier	outbuf		3474512	0					
ANR	3474524	ReturnType	R_API_I int		3474512	1					
ANR	3474525	Identifier	z80asm		3474512	2					
ANR	3474526	ParameterList	"unsigned char * outbuf , const char * s"		3474512	3					
ANR	3474527	Parameter	unsigned char * outbuf	1529:19:29955:29975	3474512	0	True				
ANR	3474528	ParameterType	unsigned char *		3474512	0					
ANR	3474529	Identifier	outbuf		3474512	1					
ANR	3474530	Parameter	const char * s	1529:42:29978:29990	3474512	1	True				
ANR	3474531	ParameterType	const char *		3474512	0					
ANR	3474532	Identifier	s		3474512	1					
ANR	3474533	CFGEntryNode	ENTRY		3474512		True				
ANR	3474534	CFGExitNode	EXIT		3474512		True				
ANR	3474535	Symbol	s		3474512						
ANR	3474536	Symbol	outbuf		3474512						
ANR	3474537	Symbol	assemble		3474512						
ANR	3474538	Function	main	1534:0:30044:30531							
ANR	3474539	FunctionDef	"main (int argc , char * * argv)"		3474538	0					
ANR	3474540	CompoundStatement		1534:32:30076:30531	3474538	0					
ANR	3474541	IdentifierDeclStatement	int len ;	1535:1:30079:30086	3474538	0	True				
ANR	3474542	IdentifierDecl	len		3474538	0					
ANR	3474543	IdentifierDeclType	int		3474538	0					
ANR	3474544	Identifier	len		3474538	1					
ANR	3474545	IdentifierDeclStatement	unsigned char buf [ 4 ] ;	1536:1:30089:30109	3474538	1	True				
ANR	3474546	IdentifierDecl	buf [ 4 ]		3474538	0					
ANR	3474547	IdentifierDeclType	unsigned char [ 4 ]		3474538	0					
ANR	3474548	Identifier	buf		3474538	1					
ANR	3474549	PrimaryExpression	4		3474538	2					
ANR	3474550	ExpressionStatement	buf [ 0 ] = buf [ 1 ] = buf [ 2 ] = 0	1538:1:30113:30141	3474538	2	True				
ANR	3474551	AssignmentExpression	buf [ 0 ] = buf [ 1 ] = buf [ 2 ] = 0		3474538	0		=			
ANR	3474552	ArrayIndexing	buf [ 0 ]		3474538	0					
ANR	3474553	Identifier	buf		3474538	0					
ANR	3474554	PrimaryExpression	0		3474538	1					
ANR	3474555	AssignmentExpression	buf [ 1 ] = buf [ 2 ] = 0		3474538	1		=			
ANR	3474556	ArrayIndexing	buf [ 1 ]		3474538	0					
ANR	3474557	Identifier	buf		3474538	0					
ANR	3474558	PrimaryExpression	1		3474538	1					
ANR	3474559	AssignmentExpression	buf [ 2 ] = 0		3474538	1		=			
ANR	3474560	ArrayIndexing	buf [ 2 ]		3474538	0					
ANR	3474561	Identifier	buf		3474538	0					
ANR	3474562	PrimaryExpression	2		3474538	1					
ANR	3474563	PrimaryExpression	0		3474538	1					
ANR	3474564	ExpressionStatement	"len = z80asm ( buf , ""nop"" )"	1539:1:30144:30169	3474538	3	True				
ANR	3474565	AssignmentExpression	"len = z80asm ( buf , ""nop"" )"		3474538	0		=			
ANR	3474566	Identifier	len		3474538	0					
ANR	3474567	CallExpression	"z80asm ( buf , ""nop"" )"		3474538	1					
ANR	3474568	Callee	z80asm		3474538	0					
ANR	3474569	Identifier	z80asm		3474538	0					
ANR	3474570	ArgumentList	buf		3474538	1					
ANR	3474571	Argument	buf		3474538	0					
ANR	3474572	Identifier	buf		3474538	0					
ANR	3474573	Argument	"""nop"""		3474538	1					
ANR	3474574	PrimaryExpression	"""nop"""		3474538	0					
ANR	3474575	ExpressionStatement	"printf ( ""%d   %02x%02x%02x\\n"" , len , buf [ 0 ] , buf [ 1 ] , buf [ 2 ] )"	1540:1:30172:30231	3474538	4	True				
ANR	3474576	CallExpression	"printf ( ""%d   %02x%02x%02x\\n"" , len , buf [ 0 ] , buf [ 1 ] , buf [ 2 ] )"		3474538	0					
ANR	3474577	Callee	printf		3474538	0					
ANR	3474578	Identifier	printf		3474538	0					
ANR	3474579	ArgumentList	"""%d   %02x%02x%02x\\n"""		3474538	1					
ANR	3474580	Argument	"""%d   %02x%02x%02x\\n"""		3474538	0					
ANR	3474581	PrimaryExpression	"""%d   %02x%02x%02x\\n"""		3474538	0					
ANR	3474582	Argument	len		3474538	1					
ANR	3474583	Identifier	len		3474538	0					
ANR	3474584	Argument	buf [ 0 ]		3474538	2					
ANR	3474585	ArrayIndexing	buf [ 0 ]		3474538	0					
ANR	3474586	Identifier	buf		3474538	0					
ANR	3474587	PrimaryExpression	0		3474538	1					
ANR	3474588	Argument	buf [ 1 ]		3474538	3					
ANR	3474589	ArrayIndexing	buf [ 1 ]		3474538	0					
ANR	3474590	Identifier	buf		3474538	0					
ANR	3474591	PrimaryExpression	1		3474538	1					
ANR	3474592	Argument	buf [ 2 ]		3474538	4					
ANR	3474593	ArrayIndexing	buf [ 2 ]		3474538	0					
ANR	3474594	Identifier	buf		3474538	0					
ANR	3474595	PrimaryExpression	2		3474538	1					
ANR	3474596	ExpressionStatement	"len = z80asm ( buf , ""cp b"" )"	1542:1:30235:30261	3474538	5	True				
ANR	3474597	AssignmentExpression	"len = z80asm ( buf , ""cp b"" )"		3474538	0		=			
ANR	3474598	Identifier	len		3474538	0					
ANR	3474599	CallExpression	"z80asm ( buf , ""cp b"" )"		3474538	1					
ANR	3474600	Callee	z80asm		3474538	0					
ANR	3474601	Identifier	z80asm		3474538	0					
ANR	3474602	ArgumentList	buf		3474538	1					
ANR	3474603	Argument	buf		3474538	0					
ANR	3474604	Identifier	buf		3474538	0					
ANR	3474605	Argument	"""cp b"""		3474538	1					
ANR	3474606	PrimaryExpression	"""cp b"""		3474538	0					
ANR	3474607	ExpressionStatement	"printf ( ""%d   %02x%02x%02x\\n"" , len , buf [ 0 ] , buf [ 1 ] , buf [ 2 ] )"	1543:1:30264:30323	3474538	6	True				
ANR	3474608	CallExpression	"printf ( ""%d   %02x%02x%02x\\n"" , len , buf [ 0 ] , buf [ 1 ] , buf [ 2 ] )"		3474538	0					
ANR	3474609	Callee	printf		3474538	0					
ANR	3474610	Identifier	printf		3474538	0					
ANR	3474611	ArgumentList	"""%d   %02x%02x%02x\\n"""		3474538	1					
ANR	3474612	Argument	"""%d   %02x%02x%02x\\n"""		3474538	0					
ANR	3474613	PrimaryExpression	"""%d   %02x%02x%02x\\n"""		3474538	0					
ANR	3474614	Argument	len		3474538	1					
ANR	3474615	Identifier	len		3474538	0					
ANR	3474616	Argument	buf [ 0 ]		3474538	2					
ANR	3474617	ArrayIndexing	buf [ 0 ]		3474538	0					
ANR	3474618	Identifier	buf		3474538	0					
ANR	3474619	PrimaryExpression	0		3474538	1					
ANR	3474620	Argument	buf [ 1 ]		3474538	3					
ANR	3474621	ArrayIndexing	buf [ 1 ]		3474538	0					
ANR	3474622	Identifier	buf		3474538	0					
ANR	3474623	PrimaryExpression	1		3474538	1					
ANR	3474624	Argument	buf [ 2 ]		3474538	4					
ANR	3474625	ArrayIndexing	buf [ 2 ]		3474538	0					
ANR	3474626	Identifier	buf		3474538	0					
ANR	3474627	PrimaryExpression	2		3474538	1					
ANR	3474628	ExpressionStatement	"len = z80asm ( buf , ""call 0x123"" )"	1545:1:30327:30359	3474538	7	True				
ANR	3474629	AssignmentExpression	"len = z80asm ( buf , ""call 0x123"" )"		3474538	0		=			
ANR	3474630	Identifier	len		3474538	0					
ANR	3474631	CallExpression	"z80asm ( buf , ""call 0x123"" )"		3474538	1					
ANR	3474632	Callee	z80asm		3474538	0					
ANR	3474633	Identifier	z80asm		3474538	0					
ANR	3474634	ArgumentList	buf		3474538	1					
ANR	3474635	Argument	buf		3474538	0					
ANR	3474636	Identifier	buf		3474538	0					
ANR	3474637	Argument	"""call 0x123"""		3474538	1					
ANR	3474638	PrimaryExpression	"""call 0x123"""		3474538	0					
ANR	3474639	ExpressionStatement	"printf ( ""%d   %02x%02x%02x\\n"" , len , buf [ 0 ] , buf [ 1 ] , buf [ 2 ] )"	1546:1:30362:30421	3474538	8	True				
ANR	3474640	CallExpression	"printf ( ""%d   %02x%02x%02x\\n"" , len , buf [ 0 ] , buf [ 1 ] , buf [ 2 ] )"		3474538	0					
ANR	3474641	Callee	printf		3474538	0					
ANR	3474642	Identifier	printf		3474538	0					
ANR	3474643	ArgumentList	"""%d   %02x%02x%02x\\n"""		3474538	1					
ANR	3474644	Argument	"""%d   %02x%02x%02x\\n"""		3474538	0					
ANR	3474645	PrimaryExpression	"""%d   %02x%02x%02x\\n"""		3474538	0					
ANR	3474646	Argument	len		3474538	1					
ANR	3474647	Identifier	len		3474538	0					
ANR	3474648	Argument	buf [ 0 ]		3474538	2					
ANR	3474649	ArrayIndexing	buf [ 0 ]		3474538	0					
ANR	3474650	Identifier	buf		3474538	0					
ANR	3474651	PrimaryExpression	0		3474538	1					
ANR	3474652	Argument	buf [ 1 ]		3474538	3					
ANR	3474653	ArrayIndexing	buf [ 1 ]		3474538	0					
ANR	3474654	Identifier	buf		3474538	0					
ANR	3474655	PrimaryExpression	1		3474538	1					
ANR	3474656	Argument	buf [ 2 ]		3474538	4					
ANR	3474657	ArrayIndexing	buf [ 2 ]		3474538	0					
ANR	3474658	Identifier	buf		3474538	0					
ANR	3474659	PrimaryExpression	2		3474538	1					
ANR	3474660	ExpressionStatement	"len = z80asm ( buf , ""call bla"" )"	1548:1:30425:30455	3474538	9	True				
ANR	3474661	AssignmentExpression	"len = z80asm ( buf , ""call bla"" )"		3474538	0		=			
ANR	3474662	Identifier	len		3474538	0					
ANR	3474663	CallExpression	"z80asm ( buf , ""call bla"" )"		3474538	1					
ANR	3474664	Callee	z80asm		3474538	0					
ANR	3474665	Identifier	z80asm		3474538	0					
ANR	3474666	ArgumentList	buf		3474538	1					
ANR	3474667	Argument	buf		3474538	0					
ANR	3474668	Identifier	buf		3474538	0					
ANR	3474669	Argument	"""call bla"""		3474538	1					
ANR	3474670	PrimaryExpression	"""call bla"""		3474538	0					
ANR	3474671	ExpressionStatement	"printf ( ""%d   %02x%02x%02x\\n"" , len , buf [ 0 ] , buf [ 1 ] , buf [ 2 ] )"	1549:1:30458:30517	3474538	10	True				
ANR	3474672	CallExpression	"printf ( ""%d   %02x%02x%02x\\n"" , len , buf [ 0 ] , buf [ 1 ] , buf [ 2 ] )"		3474538	0					
ANR	3474673	Callee	printf		3474538	0					
ANR	3474674	Identifier	printf		3474538	0					
ANR	3474675	ArgumentList	"""%d   %02x%02x%02x\\n"""		3474538	1					
ANR	3474676	Argument	"""%d   %02x%02x%02x\\n"""		3474538	0					
ANR	3474677	PrimaryExpression	"""%d   %02x%02x%02x\\n"""		3474538	0					
ANR	3474678	Argument	len		3474538	1					
ANR	3474679	Identifier	len		3474538	0					
ANR	3474680	Argument	buf [ 0 ]		3474538	2					
ANR	3474681	ArrayIndexing	buf [ 0 ]		3474538	0					
ANR	3474682	Identifier	buf		3474538	0					
ANR	3474683	PrimaryExpression	0		3474538	1					
ANR	3474684	Argument	buf [ 1 ]		3474538	3					
ANR	3474685	ArrayIndexing	buf [ 1 ]		3474538	0					
ANR	3474686	Identifier	buf		3474538	0					
ANR	3474687	PrimaryExpression	1		3474538	1					
ANR	3474688	Argument	buf [ 2 ]		3474538	4					
ANR	3474689	ArrayIndexing	buf [ 2 ]		3474538	0					
ANR	3474690	Identifier	buf		3474538	0					
ANR	3474691	PrimaryExpression	2		3474538	1					
ANR	3474692	ReturnStatement	return 0 ;	1551:1:30521:30529	3474538	11	True				
ANR	3474693	PrimaryExpression	0		3474538	0					
ANR	3474694	ReturnType	int		3474538	1					
ANR	3474695	Identifier	main		3474538	2					
ANR	3474696	ParameterList	"int argc , char * * argv"		3474538	3					
ANR	3474697	Parameter	int argc	1534:9:30053:30060	3474538	0	True				
ANR	3474698	ParameterType	int		3474538	0					
ANR	3474699	Identifier	argc		3474538	1					
ANR	3474700	Parameter	char * * argv	1534:19:30063:30073	3474538	1	True				
ANR	3474701	ParameterType	char * *		3474538	0					
ANR	3474702	Identifier	argv		3474538	1					
ANR	3474703	CFGEntryNode	ENTRY		3474538		True				
ANR	3474704	CFGExitNode	EXIT		3474538		True				
ANR	3474705	Symbol	argc		3474538						
ANR	3474706	Symbol	buf		3474538						
ANR	3474707	Symbol	* buf		3474538						
ANR	3474708	Symbol	z80asm		3474538						
ANR	3474709	Symbol	len		3474538						
ANR	3474710	Symbol	argv		3474538						
