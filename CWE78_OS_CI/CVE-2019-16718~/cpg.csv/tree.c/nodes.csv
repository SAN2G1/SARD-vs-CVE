command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6357703	File	data/converged/CVE-2019-16718~_radare2/tree.c								
ANR	6357704	Function	tree_dfs_node	5:0:75:616							
ANR	6357705	FunctionDef	"tree_dfs_node (RTreeNode * r , RTreeVisitor * vis)"		6357704	0					
ANR	6357706	CompoundStatement		5:60:135:616	6357704	0					
ANR	6357707	IdentifierDeclStatement	RStack * s ;	6:1:138:147	6357704	0	True				
ANR	6357708	IdentifierDecl	* s		6357704	0					
ANR	6357709	IdentifierDeclType	RStack *		6357704	0					
ANR	6357710	Identifier	s		6357704	1					
ANR	6357711	IdentifierDeclStatement	RListIter * it ;	7:1:150:163	6357704	1	True				
ANR	6357712	IdentifierDecl	* it		6357704	0					
ANR	6357713	IdentifierDeclType	RListIter *		6357704	0					
ANR	6357714	Identifier	it		6357704	1					
ANR	6357715	IdentifierDeclStatement	RTreeNode * n ;	8:1:166:178	6357704	2	True				
ANR	6357716	IdentifierDecl	* n		6357704	0					
ANR	6357717	IdentifierDeclType	RTreeNode *		6357704	0					
ANR	6357718	Identifier	n		6357704	1					
ANR	6357719	ExpressionStatement	s = r_stack_new ( 16 )	10:1:182:202	6357704	3	True				
ANR	6357720	AssignmentExpression	s = r_stack_new ( 16 )		6357704	0		=			
ANR	6357721	Identifier	s		6357704	0					
ANR	6357722	CallExpression	r_stack_new ( 16 )		6357704	1					
ANR	6357723	Callee	r_stack_new		6357704	0					
ANR	6357724	Identifier	r_stack_new		6357704	0					
ANR	6357725	ArgumentList	16		6357704	1					
ANR	6357726	Argument	16		6357704	0					
ANR	6357727	PrimaryExpression	16		6357704	0					
ANR	6357728	IfStatement	if ( ! s )		6357704	4					
ANR	6357729	Condition	! s	11:5:209:210	6357704	0	True				
ANR	6357730	UnaryOperationExpression	! s		6357704	0					
ANR	6357731	UnaryOperator	!		6357704	0					
ANR	6357732	Identifier	s		6357704	1					
ANR	6357733	CompoundStatement		7:9:77:77	6357704	1					
ANR	6357734	ReturnStatement	return ;	12:2:217:223	6357704	0	True				
ANR	6357735	ExpressionStatement	"r_stack_push ( s , r )"	14:1:229:248	6357704	5	True				
ANR	6357736	CallExpression	"r_stack_push ( s , r )"		6357704	0					
ANR	6357737	Callee	r_stack_push		6357704	0					
ANR	6357738	Identifier	r_stack_push		6357704	0					
ANR	6357739	ArgumentList	s		6357704	1					
ANR	6357740	Argument	s		6357704	0					
ANR	6357741	Identifier	s		6357704	0					
ANR	6357742	Argument	r		6357704	1					
ANR	6357743	Identifier	r		6357704	0					
ANR	6357744	WhileStatement	while ( ! r_stack_is_empty ( s ) )		6357704	6					
ANR	6357745	Condition	! r_stack_is_empty ( s )	15:8:258:278	6357704	0	True				
ANR	6357746	UnaryOperationExpression	! r_stack_is_empty ( s )		6357704	0					
ANR	6357747	UnaryOperator	!		6357704	0					
ANR	6357748	CallExpression	r_stack_is_empty ( s )		6357704	1					
ANR	6357749	Callee	r_stack_is_empty		6357704	0					
ANR	6357750	Identifier	r_stack_is_empty		6357704	0					
ANR	6357751	ArgumentList	s		6357704	1					
ANR	6357752	Argument	s		6357704	0					
ANR	6357753	Identifier	s		6357704	0					
ANR	6357754	CompoundStatement		12:2:149:193	6357704	1					
ANR	6357755	IdentifierDeclStatement	RTreeNode * el = ( RTreeNode * ) r_stack_pop ( s ) ;	16:2:285:329	6357704	0	True				
ANR	6357756	IdentifierDecl	* el = ( RTreeNode * ) r_stack_pop ( s )		6357704	0					
ANR	6357757	IdentifierDeclType	RTreeNode *		6357704	0					
ANR	6357758	Identifier	el		6357704	1					
ANR	6357759	AssignmentExpression	* el = ( RTreeNode * ) r_stack_pop ( s )		6357704	2		=			
ANR	6357760	Identifier	el		6357704	0					
ANR	6357761	CastExpression	( RTreeNode * ) r_stack_pop ( s )		6357704	1					
ANR	6357762	CastTarget	RTreeNode *		6357704	0					
ANR	6357763	CallExpression	r_stack_pop ( s )		6357704	1					
ANR	6357764	Callee	r_stack_pop		6357704	0					
ANR	6357765	Identifier	r_stack_pop		6357704	0					
ANR	6357766	ArgumentList	s		6357704	1					
ANR	6357767	Argument	s		6357704	0					
ANR	6357768	Identifier	s		6357704	0					
ANR	6357769	IfStatement	if ( vis -> pre_visit )		6357704	1					
ANR	6357770	Condition	vis -> pre_visit	18:6:338:351	6357704	0	True				
ANR	6357771	PtrMemberAccess	vis -> pre_visit		6357704	0					
ANR	6357772	Identifier	vis		6357704	0					
ANR	6357773	Identifier	pre_visit		6357704	1					
ANR	6357774	CompoundStatement		14:22:218:218	6357704	1					
ANR	6357775	ExpressionStatement	"vis -> pre_visit ( el , vis )"	19:3:359:383	6357704	0	True				
ANR	6357776	CallExpression	"vis -> pre_visit ( el , vis )"		6357704	0					
ANR	6357777	Callee	vis -> pre_visit		6357704	0					
ANR	6357778	PtrMemberAccess	vis -> pre_visit		6357704	0					
ANR	6357779	Identifier	vis		6357704	0					
ANR	6357780	Identifier	pre_visit		6357704	1					
ANR	6357781	ArgumentList	el		6357704	1					
ANR	6357782	Argument	el		6357704	0					
ANR	6357783	Identifier	el		6357704	0					
ANR	6357784	Argument	vis		6357704	1					
ANR	6357785	Identifier	vis		6357704	0					
ANR	6357786	Statement	r_list_foreach_prev	22:2:392:410	6357704	2	True				
ANR	6357787	Statement	(	22:22:412:412	6357704	3	True				
ANR	6357788	Statement	el	22:23:413:414	6357704	4	True				
ANR	6357789	Statement	->	22:25:415:416	6357704	5	True				
ANR	6357790	Statement	children	22:27:417:424	6357704	6	True				
ANR	6357791	Statement	","	22:35:425:425	6357704	7	True				
ANR	6357792	Statement	it	22:37:427:428	6357704	8	True				
ANR	6357793	Statement	","	22:39:429:429	6357704	9	True				
ANR	6357794	Statement	n	22:41:431:431	6357704	10	True				
ANR	6357795	Statement	)	22:42:432:432	6357704	11	True				
ANR	6357796	CompoundStatement		18:44:298:298	6357704	12					
ANR	6357797	IfStatement	if ( vis -> discover_child )		6357704	0					
ANR	6357798	Condition	vis -> discover_child	23:7:443:461	6357704	0	True				
ANR	6357799	PtrMemberAccess	vis -> discover_child		6357704	0					
ANR	6357800	Identifier	vis		6357704	0					
ANR	6357801	Identifier	discover_child		6357704	1					
ANR	6357802	CompoundStatement		19:28:328:328	6357704	1					
ANR	6357803	ExpressionStatement	"vis -> discover_child ( n , vis )"	24:4:470:498	6357704	0	True				
ANR	6357804	CallExpression	"vis -> discover_child ( n , vis )"		6357704	0					
ANR	6357805	Callee	vis -> discover_child		6357704	0					
ANR	6357806	PtrMemberAccess	vis -> discover_child		6357704	0					
ANR	6357807	Identifier	vis		6357704	0					
ANR	6357808	Identifier	discover_child		6357704	1					
ANR	6357809	ArgumentList	n		6357704	1					
ANR	6357810	Argument	n		6357704	0					
ANR	6357811	Identifier	n		6357704	0					
ANR	6357812	Argument	vis		6357704	1					
ANR	6357813	Identifier	vis		6357704	0					
ANR	6357814	ExpressionStatement	"r_stack_push ( s , n )"	26:3:508:527	6357704	1	True				
ANR	6357815	CallExpression	"r_stack_push ( s , n )"		6357704	0					
ANR	6357816	Callee	r_stack_push		6357704	0					
ANR	6357817	Identifier	r_stack_push		6357704	0					
ANR	6357818	ArgumentList	s		6357704	1					
ANR	6357819	Argument	s		6357704	0					
ANR	6357820	Identifier	s		6357704	0					
ANR	6357821	Argument	n		6357704	1					
ANR	6357822	Identifier	n		6357704	0					
ANR	6357823	IfStatement	if ( vis -> post_visit )		6357704	13					
ANR	6357824	Condition	vis -> post_visit	29:6:540:554	6357704	0	True				
ANR	6357825	PtrMemberAccess	vis -> post_visit		6357704	0					
ANR	6357826	Identifier	vis		6357704	0					
ANR	6357827	Identifier	post_visit		6357704	1					
ANR	6357828	CompoundStatement		25:23:421:421	6357704	1					
ANR	6357829	ExpressionStatement	"vis -> post_visit ( el , vis )"	30:3:562:587	6357704	0	True				
ANR	6357830	CallExpression	"vis -> post_visit ( el , vis )"		6357704	0					
ANR	6357831	Callee	vis -> post_visit		6357704	0					
ANR	6357832	PtrMemberAccess	vis -> post_visit		6357704	0					
ANR	6357833	Identifier	vis		6357704	0					
ANR	6357834	Identifier	post_visit		6357704	1					
ANR	6357835	ArgumentList	el		6357704	1					
ANR	6357836	Argument	el		6357704	0					
ANR	6357837	Identifier	el		6357704	0					
ANR	6357838	Argument	vis		6357704	1					
ANR	6357839	Identifier	vis		6357704	0					
ANR	6357840	ExpressionStatement	r_stack_free ( s )	34:1:598:614	6357704	7	True				
ANR	6357841	CallExpression	r_stack_free ( s )		6357704	0					
ANR	6357842	Callee	r_stack_free		6357704	0					
ANR	6357843	Identifier	r_stack_free		6357704	0					
ANR	6357844	ArgumentList	s		6357704	1					
ANR	6357845	Argument	s		6357704	0					
ANR	6357846	Identifier	s		6357704	0					
ANR	6357847	ReturnType	static void		6357704	1					
ANR	6357848	Identifier	tree_dfs_node		6357704	2					
ANR	6357849	ParameterList	"RTreeNode * r , RTreeVisitor * vis"		6357704	3					
ANR	6357850	Parameter	RTreeNode * r	5:27:102:113	6357704	0	True				
ANR	6357851	ParameterType	RTreeNode *		6357704	0					
ANR	6357852	Identifier	r		6357704	1					
ANR	6357853	Parameter	RTreeVisitor * vis	5:41:116:132	6357704	1	True				
ANR	6357854	ParameterType	RTreeVisitor *		6357704	0					
ANR	6357855	Identifier	vis		6357704	1					
ANR	6357856	CFGEntryNode	ENTRY		6357704		True				
ANR	6357857	CFGExitNode	EXIT		6357704		True				
ANR	6357858	Symbol	vis		6357704						
ANR	6357859	Symbol	vis -> pre_visit		6357704						
ANR	6357860	Symbol	r_stack_new		6357704						
ANR	6357861	Symbol	el		6357704						
ANR	6357862	Symbol	* vis		6357704						
ANR	6357863	Symbol	it		6357704						
ANR	6357864	Symbol	n		6357704						
ANR	6357865	Symbol	vis -> discover_child		6357704						
ANR	6357866	Symbol	r		6357704						
ANR	6357867	Symbol	s		6357704						
ANR	6357868	Symbol	r_stack_pop		6357704						
ANR	6357869	Symbol	vis -> post_visit		6357704						
ANR	6357870	Symbol	r_stack_is_empty		6357704						
ANR	6357871	Function	r_tree_node_free	37:0:619:744							
ANR	6357872	FunctionDef	r_tree_node_free (RTreeNode * n)		6357871	0					
ANR	6357873	CompoundStatement		37:44:663:744	6357871	0					
ANR	6357874	ExpressionStatement	r_list_free ( n -> children )	38:1:666:691	6357871	0	True				
ANR	6357875	CallExpression	r_list_free ( n -> children )		6357871	0					
ANR	6357876	Callee	r_list_free		6357871	0					
ANR	6357877	Identifier	r_list_free		6357871	0					
ANR	6357878	ArgumentList	n -> children		6357871	1					
ANR	6357879	Argument	n -> children		6357871	0					
ANR	6357880	PtrMemberAccess	n -> children		6357871	0					
ANR	6357881	Identifier	n		6357871	0					
ANR	6357882	Identifier	children		6357871	1					
ANR	6357883	IfStatement	if ( n -> free )		6357871	1					
ANR	6357884	Condition	n -> free	39:5:698:704	6357871	0	True				
ANR	6357885	PtrMemberAccess	n -> free		6357871	0					
ANR	6357886	Identifier	n		6357871	0					
ANR	6357887	Identifier	free		6357871	1					
ANR	6357888	CompoundStatement		3:14:43:43	6357871	1					
ANR	6357889	ExpressionStatement	n -> free ( n -> data )	40:2:711:728	6357871	0	True				
ANR	6357890	CallExpression	n -> free ( n -> data )		6357871	0					
ANR	6357891	Callee	n -> free		6357871	0					
ANR	6357892	PtrMemberAccess	n -> free		6357871	0					
ANR	6357893	Identifier	n		6357871	0					
ANR	6357894	Identifier	free		6357871	1					
ANR	6357895	ArgumentList	n -> data		6357871	1					
ANR	6357896	Argument	n -> data		6357871	0					
ANR	6357897	PtrMemberAccess	n -> data		6357871	0					
ANR	6357898	Identifier	n		6357871	0					
ANR	6357899	Identifier	data		6357871	1					
ANR	6357900	ExpressionStatement	free ( n )	42:1:734:742	6357871	2	True				
ANR	6357901	CallExpression	free ( n )		6357871	0					
ANR	6357902	Callee	free		6357871	0					
ANR	6357903	Identifier	free		6357871	0					
ANR	6357904	ArgumentList	n		6357871	1					
ANR	6357905	Argument	n		6357871	0					
ANR	6357906	Identifier	n		6357871	0					
ANR	6357907	ReturnType	static void		6357871	1					
ANR	6357908	Identifier	r_tree_node_free		6357871	2					
ANR	6357909	ParameterList	RTreeNode * n		6357871	3					
ANR	6357910	Parameter	RTreeNode * n	37:30:649:660	6357871	0	True				
ANR	6357911	ParameterType	RTreeNode *		6357871	0					
ANR	6357912	Identifier	n		6357871	1					
ANR	6357913	CFGEntryNode	ENTRY		6357871		True				
ANR	6357914	CFGExitNode	EXIT		6357871		True				
ANR	6357915	Symbol	n -> data		6357871						
ANR	6357916	Symbol	* n		6357871						
ANR	6357917	Symbol	n -> children		6357871						
ANR	6357918	Symbol	n -> free		6357871						
ANR	6357919	Symbol	n		6357871						
ANR	6357920	Function	node_free	45:0:747:828							
ANR	6357921	FunctionDef	"node_free (RTreeNode * n , RTreeVisitor * vis)"		6357920	0					
ANR	6357922	CompoundStatement		45:56:803:828	6357920	0					
ANR	6357923	ExpressionStatement	r_tree_node_free ( n )	46:1:806:826	6357920	0	True				
ANR	6357924	CallExpression	r_tree_node_free ( n )		6357920	0					
ANR	6357925	Callee	r_tree_node_free		6357920	0					
ANR	6357926	Identifier	r_tree_node_free		6357920	0					
ANR	6357927	ArgumentList	n		6357920	1					
ANR	6357928	Argument	n		6357920	0					
ANR	6357929	Identifier	n		6357920	0					
ANR	6357930	ReturnType	static void		6357920	1					
ANR	6357931	Identifier	node_free		6357920	2					
ANR	6357932	ParameterList	"RTreeNode * n , RTreeVisitor * vis"		6357920	3					
ANR	6357933	Parameter	RTreeNode * n	45:23:770:781	6357920	0	True				
ANR	6357934	ParameterType	RTreeNode *		6357920	0					
ANR	6357935	Identifier	n		6357920	1					
ANR	6357936	Parameter	RTreeVisitor * vis	45:37:784:800	6357920	1	True				
ANR	6357937	ParameterType	RTreeVisitor *		6357920	0					
ANR	6357938	Identifier	vis		6357920	1					
ANR	6357939	CFGEntryNode	ENTRY		6357920		True				
ANR	6357940	CFGExitNode	EXIT		6357920		True				
ANR	6357941	Symbol	vis		6357920						
ANR	6357942	Symbol	n		6357920						
ANR	6357943	Function	free_all_children	49:0:831:971							
ANR	6357944	FunctionDef	free_all_children (RTree * t)		6357943	0					
ANR	6357945	CompoundStatement		49:41:872:971	6357943	0					
ANR	6357946	IdentifierDeclStatement	RTreeVisitor vis = { 0 } ;	50:1:875:899	6357943	0	True				
ANR	6357947	IdentifierDecl	vis = { 0 }		6357943	0					
ANR	6357948	IdentifierDeclType	RTreeVisitor		6357943	0					
ANR	6357949	Identifier	vis		6357943	1					
ANR	6357950	AssignmentExpression	vis = { 0 }		6357943	2		=			
ANR	6357951	Identifier	vis		6357943	0					
ANR	6357952	InitializerList	0		6357943	1					
ANR	6357953	PrimaryExpression	0		6357943	0					
ANR	6357954	ExpressionStatement	vis . post_visit = ( RTreeNodeVisitCb ) node_free	51:1:902:946	6357943	1	True				
ANR	6357955	AssignmentExpression	vis . post_visit = ( RTreeNodeVisitCb ) node_free		6357943	0		=			
ANR	6357956	MemberAccess	vis . post_visit		6357943	0					
ANR	6357957	Identifier	vis		6357943	0					
ANR	6357958	Identifier	post_visit		6357943	1					
ANR	6357959	CastExpression	( RTreeNodeVisitCb ) node_free		6357943	1					
ANR	6357960	CastTarget	RTreeNodeVisitCb		6357943	0					
ANR	6357961	Identifier	node_free		6357943	1					
ANR	6357962	ExpressionStatement	"r_tree_bfs ( t , & vis )"	52:1:949:969	6357943	2	True				
ANR	6357963	CallExpression	"r_tree_bfs ( t , & vis )"		6357943	0					
ANR	6357964	Callee	r_tree_bfs		6357943	0					
ANR	6357965	Identifier	r_tree_bfs		6357943	0					
ANR	6357966	ArgumentList	t		6357943	1					
ANR	6357967	Argument	t		6357943	0					
ANR	6357968	Identifier	t		6357943	0					
ANR	6357969	Argument	& vis		6357943	1					
ANR	6357970	UnaryOperationExpression	& vis		6357943	0					
ANR	6357971	UnaryOperator	&		6357943	0					
ANR	6357972	Identifier	vis		6357943	1					
ANR	6357973	ReturnType	static void		6357943	1					
ANR	6357974	Identifier	free_all_children		6357943	2					
ANR	6357975	ParameterList	RTree * t		6357943	3					
ANR	6357976	Parameter	RTree * t	49:31:862:869	6357943	0	True				
ANR	6357977	ParameterType	RTree *		6357943	0					
ANR	6357978	Identifier	t		6357943	1					
ANR	6357979	CFGEntryNode	ENTRY		6357943		True				
ANR	6357980	CFGExitNode	EXIT		6357943		True				
ANR	6357981	Symbol	vis		6357943						
ANR	6357982	Symbol	& vis		6357943						
ANR	6357983	Symbol	t		6357943						
ANR	6357984	Symbol	node_free		6357943						
ANR	6357985	Symbol	vis . post_visit		6357943						
ANR	6357986	Function	update_depth	55:0:974:1085							
ANR	6357987	FunctionDef	"update_depth (RTreeNode * n , RTreeVisitor * vis)"		6357986	0					
ANR	6357988	CompoundStatement		55:59:1033:1085	6357986	0					
ANR	6357989	ExpressionStatement	n -> depth = n -> parent ? n -> parent -> depth + 1 : 0	56:1:1036:1083	6357986	0	True				
ANR	6357990	AssignmentExpression	n -> depth = n -> parent ? n -> parent -> depth + 1 : 0		6357986	0		=			
ANR	6357991	PtrMemberAccess	n -> depth		6357986	0					
ANR	6357992	Identifier	n		6357986	0					
ANR	6357993	Identifier	depth		6357986	1					
ANR	6357994	ConditionalExpression	n -> parent ? n -> parent -> depth + 1 : 0		6357986	1					
ANR	6357995	Condition	n -> parent		6357986	0					
ANR	6357996	PtrMemberAccess	n -> parent		6357986	0					
ANR	6357997	Identifier	n		6357986	0					
ANR	6357998	Identifier	parent		6357986	1					
ANR	6357999	AdditiveExpression	n -> parent -> depth + 1		6357986	1		+			
ANR	6358000	PtrMemberAccess	n -> parent -> depth		6357986	0					
ANR	6358001	PtrMemberAccess	n -> parent		6357986	0					
ANR	6358002	Identifier	n		6357986	0					
ANR	6358003	Identifier	parent		6357986	1					
ANR	6358004	Identifier	depth		6357986	1					
ANR	6358005	PrimaryExpression	1		6357986	1					
ANR	6358006	PrimaryExpression	0		6357986	2					
ANR	6358007	ReturnType	static void		6357986	1					
ANR	6358008	Identifier	update_depth		6357986	2					
ANR	6358009	ParameterList	"RTreeNode * n , RTreeVisitor * vis"		6357986	3					
ANR	6358010	Parameter	RTreeNode * n	55:26:1000:1011	6357986	0	True				
ANR	6358011	ParameterType	RTreeNode *		6357986	0					
ANR	6358012	Identifier	n		6357986	1					
ANR	6358013	Parameter	RTreeVisitor * vis	55:40:1014:1030	6357986	1	True				
ANR	6358014	ParameterType	RTreeVisitor *		6357986	0					
ANR	6358015	Identifier	vis		6357986	1					
ANR	6358016	CFGEntryNode	ENTRY		6357986		True				
ANR	6358017	CFGExitNode	EXIT		6357986		True				
ANR	6358018	Symbol	vis		6357986						
ANR	6358019	Symbol	n -> parent		6357986						
ANR	6358020	Symbol	n -> parent -> depth		6357986						
ANR	6358021	Symbol	* n		6357986						
ANR	6358022	Symbol	* n -> parent		6357986						
ANR	6358023	Symbol	n -> depth		6357986						
ANR	6358024	Symbol	* * n		6357986						
ANR	6358025	Symbol	n		6357986						
ANR	6358026	Function	node_new	59:0:1088:1277							
ANR	6358027	FunctionDef	"node_new (RTree * t , void * data)"		6358026	0					
ANR	6358028	CompoundStatement		59:50:1138:1277	6358026	0					
ANR	6358029	IdentifierDeclStatement	RTreeNode * n = R_NEW0 ( RTreeNode ) ;	60:1:1141:1174	6358026	0	True				
ANR	6358030	IdentifierDecl	* n = R_NEW0 ( RTreeNode )		6358026	0					
ANR	6358031	IdentifierDeclType	RTreeNode *		6358026	0					
ANR	6358032	Identifier	n		6358026	1					
ANR	6358033	AssignmentExpression	* n = R_NEW0 ( RTreeNode )		6358026	2		=			
ANR	6358034	Identifier	n		6358026	0					
ANR	6358035	CallExpression	R_NEW0 ( RTreeNode )		6358026	1					
ANR	6358036	Callee	R_NEW0		6358026	0					
ANR	6358037	Identifier	R_NEW0		6358026	0					
ANR	6358038	ArgumentList	RTreeNode		6358026	1					
ANR	6358039	Argument	RTreeNode		6358026	0					
ANR	6358040	Identifier	RTreeNode		6358026	0					
ANR	6358041	IfStatement	if ( ! n )		6358026	1					
ANR	6358042	Condition	! n	61:5:1181:1182	6358026	0	True				
ANR	6358043	UnaryOperationExpression	! n		6358026	0					
ANR	6358044	UnaryOperator	!		6358026	0					
ANR	6358045	Identifier	n		6358026	1					
ANR	6358046	CompoundStatement		3:9:46:46	6358026	1					
ANR	6358047	ReturnStatement	return NULL ;	62:2:1189:1200	6358026	0	True				
ANR	6358048	Identifier	NULL		6358026	0					
ANR	6358049	ExpressionStatement	n -> children = r_list_new ( )	64:1:1206:1233	6358026	2	True				
ANR	6358050	AssignmentExpression	n -> children = r_list_new ( )		6358026	0		=			
ANR	6358051	PtrMemberAccess	n -> children		6358026	0					
ANR	6358052	Identifier	n		6358026	0					
ANR	6358053	Identifier	children		6358026	1					
ANR	6358054	CallExpression	r_list_new ( )		6358026	1					
ANR	6358055	Callee	r_list_new		6358026	0					
ANR	6358056	Identifier	r_list_new		6358026	0					
ANR	6358057	ArgumentList			6358026	1					
ANR	6358058	ExpressionStatement	n -> data = data	65:1:1236:1250	6358026	3	True				
ANR	6358059	AssignmentExpression	n -> data = data		6358026	0		=			
ANR	6358060	PtrMemberAccess	n -> data		6358026	0					
ANR	6358061	Identifier	n		6358026	0					
ANR	6358062	Identifier	data		6358026	1					
ANR	6358063	Identifier	data		6358026	1					
ANR	6358064	ExpressionStatement	n -> tree = t	66:1:1253:1264	6358026	4	True				
ANR	6358065	AssignmentExpression	n -> tree = t		6358026	0		=			
ANR	6358066	PtrMemberAccess	n -> tree		6358026	0					
ANR	6358067	Identifier	n		6358026	0					
ANR	6358068	Identifier	tree		6358026	1					
ANR	6358069	Identifier	t		6358026	1					
ANR	6358070	ReturnStatement	return n ;	67:1:1267:1275	6358026	5	True				
ANR	6358071	Identifier	n		6358026	0					
ANR	6358072	ReturnType	static RTreeNode *		6358026	1					
ANR	6358073	Identifier	node_new		6358026	2					
ANR	6358074	ParameterList	"RTree * t , void * data"		6358026	3					
ANR	6358075	Parameter	RTree * t	59:28:1116:1123	6358026	0	True				
ANR	6358076	ParameterType	RTree *		6358026	0					
ANR	6358077	Identifier	t		6358026	1					
ANR	6358078	Parameter	void * data	59:38:1126:1135	6358026	1	True				
ANR	6358079	ParameterType	void *		6358026	0					
ANR	6358080	Identifier	data		6358026	1					
ANR	6358081	CFGEntryNode	ENTRY		6358026		True				
ANR	6358082	CFGExitNode	EXIT		6358026		True				
ANR	6358083	Symbol	RTreeNode		6358026						
ANR	6358084	Symbol	n -> tree		6358026						
ANR	6358085	Symbol	R_NEW0		6358026						
ANR	6358086	Symbol	NULL		6358026						
ANR	6358087	Symbol	n -> data		6358026						
ANR	6358088	Symbol	t		6358026						
ANR	6358089	Symbol	data		6358026						
ANR	6358090	Symbol	* n		6358026						
ANR	6358091	Symbol	n -> children		6358026						
ANR	6358092	Symbol	n		6358026						
ANR	6358093	Symbol	r_list_new		6358026						
ANR	6358094	Function	r_tree_new	70:0:1280:1337							
ANR	6358095	FunctionDef	r_tree_new ()		6358094	0					
ANR	6358096	CompoundStatement		70:31:1311:1337	6358094	0					
ANR	6358097	ReturnStatement	return R_NEW0 ( RTree ) ;	71:1:1314:1335	6358094	0	True				
ANR	6358098	CallExpression	R_NEW0 ( RTree )		6358094	0					
ANR	6358099	Callee	R_NEW0		6358094	0					
ANR	6358100	Identifier	R_NEW0		6358094	0					
ANR	6358101	ArgumentList	RTree		6358094	1					
ANR	6358102	Argument	RTree		6358094	0					
ANR	6358103	Identifier	RTree		6358094	0					
ANR	6358104	ReturnType	R_API RTree *		6358094	1					
ANR	6358105	Identifier	r_tree_new		6358094	2					
ANR	6358106	ParameterList			6358094	3					
ANR	6358107	CFGEntryNode	ENTRY		6358094		True				
ANR	6358108	CFGExitNode	EXIT		6358094		True				
ANR	6358109	Symbol	R_NEW0		6358094						
ANR	6358110	Symbol	RTree		6358094						
ANR	6358111	Function	r_tree_free	74:0:1340:1436							
ANR	6358112	FunctionDef	r_tree_free (RTree * t)		6358111	0					
ANR	6358113	CompoundStatement		74:34:1374:1436	6358111	0					
ANR	6358114	IfStatement	if ( ! t )		6358111	0					
ANR	6358115	Condition	! t	75:5:1381:1382	6358111	0	True				
ANR	6358116	UnaryOperationExpression	! t		6358111	0					
ANR	6358117	UnaryOperator	!		6358111	0					
ANR	6358118	Identifier	t		6358111	1					
ANR	6358119	CompoundStatement		2:9:10:10	6358111	1					
ANR	6358120	ReturnStatement	return ;	76:2:1389:1395	6358111	0	True				
ANR	6358121	ExpressionStatement	free_all_children ( t )	79:1:1402:1423	6358111	1	True				
ANR	6358122	CallExpression	free_all_children ( t )		6358111	0					
ANR	6358123	Callee	free_all_children		6358111	0					
ANR	6358124	Identifier	free_all_children		6358111	0					
ANR	6358125	ArgumentList	t		6358111	1					
ANR	6358126	Argument	t		6358111	0					
ANR	6358127	Identifier	t		6358111	0					
ANR	6358128	ExpressionStatement	free ( t )	80:1:1426:1434	6358111	2	True				
ANR	6358129	CallExpression	free ( t )		6358111	0					
ANR	6358130	Callee	free		6358111	0					
ANR	6358131	Identifier	free		6358111	0					
ANR	6358132	ArgumentList	t		6358111	1					
ANR	6358133	Argument	t		6358111	0					
ANR	6358134	Identifier	t		6358111	0					
ANR	6358135	ReturnType	R_API void		6358111	1					
ANR	6358136	Identifier	r_tree_free		6358111	2					
ANR	6358137	ParameterList	RTree * t		6358111	3					
ANR	6358138	Parameter	RTree * t	74:24:1364:1371	6358111	0	True				
ANR	6358139	ParameterType	RTree *		6358111	0					
ANR	6358140	Identifier	t		6358111	1					
ANR	6358141	CFGEntryNode	ENTRY		6358111		True				
ANR	6358142	CFGExitNode	EXIT		6358111		True				
ANR	6358143	Symbol	t		6358111						
ANR	6358144	Function	r_tree_reset	83:0:1439:1542							
ANR	6358145	FunctionDef	r_tree_reset (RTree * t)		6358144	0					
ANR	6358146	CompoundStatement		83:35:1474:1542	6358144	0					
ANR	6358147	IfStatement	if ( ! t )		6358144	0					
ANR	6358148	Condition	! t	84:5:1481:1482	6358144	0	True				
ANR	6358149	UnaryOperationExpression	! t		6358144	0					
ANR	6358150	UnaryOperator	!		6358144	0					
ANR	6358151	Identifier	t		6358144	1					
ANR	6358152	CompoundStatement		2:9:10:10	6358144	1					
ANR	6358153	ReturnStatement	return ;	85:2:1489:1495	6358144	0	True				
ANR	6358154	ExpressionStatement	free_all_children ( t )	88:1:1502:1523	6358144	1	True				
ANR	6358155	CallExpression	free_all_children ( t )		6358144	0					
ANR	6358156	Callee	free_all_children		6358144	0					
ANR	6358157	Identifier	free_all_children		6358144	0					
ANR	6358158	ArgumentList	t		6358144	1					
ANR	6358159	Argument	t		6358144	0					
ANR	6358160	Identifier	t		6358144	0					
ANR	6358161	ExpressionStatement	t -> root = NULL	89:1:1526:1540	6358144	2	True				
ANR	6358162	AssignmentExpression	t -> root = NULL		6358144	0		=			
ANR	6358163	PtrMemberAccess	t -> root		6358144	0					
ANR	6358164	Identifier	t		6358144	0					
ANR	6358165	Identifier	root		6358144	1					
ANR	6358166	Identifier	NULL		6358144	1					
ANR	6358167	ReturnType	R_API void		6358144	1					
ANR	6358168	Identifier	r_tree_reset		6358144	2					
ANR	6358169	ParameterList	RTree * t		6358144	3					
ANR	6358170	Parameter	RTree * t	83:25:1464:1471	6358144	0	True				
ANR	6358171	ParameterType	RTree *		6358144	0					
ANR	6358172	Identifier	t		6358144	1					
ANR	6358173	CFGEntryNode	ENTRY		6358144		True				
ANR	6358174	CFGExitNode	EXIT		6358144		True				
ANR	6358175	Symbol	t -> root		6358144						
ANR	6358176	Symbol	NULL		6358144						
ANR	6358177	Symbol	t		6358144						
ANR	6358178	Symbol	* t		6358144						
ANR	6358179	Function	r_tree_add_node	97:0:1815:2396							
ANR	6358180	FunctionDef	"r_tree_add_node (RTree * t , RTreeNode * node , void * child_data)"		6358179	0					
ANR	6358181	CompoundStatement		97:79:1894:2396	6358179	0					
ANR	6358182	IdentifierDeclStatement	RTreeNode * child ;	98:1:1897:1913	6358179	0	True				
ANR	6358183	IdentifierDecl	* child		6358179	0					
ANR	6358184	IdentifierDeclType	RTreeNode *		6358179	0					
ANR	6358185	Identifier	child		6358179	1					
ANR	6358186	IdentifierDeclStatement	RTreeVisitor vis = { 0 } ;	99:1:1916:1940	6358179	1	True				
ANR	6358187	IdentifierDecl	vis = { 0 }		6358179	0					
ANR	6358188	IdentifierDeclType	RTreeVisitor		6358179	0					
ANR	6358189	Identifier	vis		6358179	1					
ANR	6358190	AssignmentExpression	vis = { 0 }		6358179	2		=			
ANR	6358191	Identifier	vis		6358179	0					
ANR	6358192	InitializerList	0		6358179	1					
ANR	6358193	PrimaryExpression	0		6358179	0					
ANR	6358194	IfStatement	if ( ! t || ( node && node -> tree != t ) || ( t -> root && ! node ) )		6358179	2					
ANR	6358195	Condition	! t || ( node && node -> tree != t ) || ( t -> root && ! node )	102:5:2015:2067	6358179	0	True				
ANR	6358196	OrExpression	! t || ( node && node -> tree != t ) || ( t -> root && ! node )		6358179	0		||			
ANR	6358197	UnaryOperationExpression	! t		6358179	0					
ANR	6358198	UnaryOperator	!		6358179	0					
ANR	6358199	Identifier	t		6358179	1					
ANR	6358200	OrExpression	( node && node -> tree != t ) || ( t -> root && ! node )		6358179	1		||			
ANR	6358201	AndExpression	node && node -> tree != t		6358179	0		&&			
ANR	6358202	Identifier	node		6358179	0					
ANR	6358203	EqualityExpression	node -> tree != t		6358179	1		!=			
ANR	6358204	PtrMemberAccess	node -> tree		6358179	0					
ANR	6358205	Identifier	node		6358179	0					
ANR	6358206	Identifier	tree		6358179	1					
ANR	6358207	Identifier	t		6358179	1					
ANR	6358208	AndExpression	t -> root && ! node		6358179	1		&&			
ANR	6358209	PtrMemberAccess	t -> root		6358179	0					
ANR	6358210	Identifier	t		6358179	0					
ANR	6358211	Identifier	root		6358179	1					
ANR	6358212	UnaryOperationExpression	! node		6358179	1					
ANR	6358213	UnaryOperator	!		6358179	0					
ANR	6358214	Identifier	node		6358179	1					
ANR	6358215	CompoundStatement		6:60:175:175	6358179	1					
ANR	6358216	ReturnStatement	return NULL ;	103:2:2074:2085	6358179	0	True				
ANR	6358217	Identifier	NULL		6358179	0					
ANR	6358218	ExpressionStatement	"child = node_new ( t , child_data )"	106:1:2092:2124	6358179	3	True				
ANR	6358219	AssignmentExpression	"child = node_new ( t , child_data )"		6358179	0		=			
ANR	6358220	Identifier	child		6358179	0					
ANR	6358221	CallExpression	"node_new ( t , child_data )"		6358179	1					
ANR	6358222	Callee	node_new		6358179	0					
ANR	6358223	Identifier	node_new		6358179	0					
ANR	6358224	ArgumentList	t		6358179	1					
ANR	6358225	Argument	t		6358179	0					
ANR	6358226	Identifier	t		6358179	0					
ANR	6358227	Argument	child_data		6358179	1					
ANR	6358228	Identifier	child_data		6358179	0					
ANR	6358229	IfStatement	if ( ! node && ! t -> root )		6358179	4					
ANR	6358230	Condition	! node && ! t -> root	107:5:2131:2147	6358179	0	True				
ANR	6358231	AndExpression	! node && ! t -> root		6358179	0		&&			
ANR	6358232	UnaryOperationExpression	! node		6358179	0					
ANR	6358233	UnaryOperator	!		6358179	0					
ANR	6358234	Identifier	node		6358179	1					
ANR	6358235	UnaryOperationExpression	! t -> root		6358179	1					
ANR	6358236	UnaryOperator	!		6358179	0					
ANR	6358237	PtrMemberAccess	t -> root		6358179	1					
ANR	6358238	Identifier	t		6358179	0					
ANR	6358239	Identifier	root		6358179	1					
ANR	6358240	CompoundStatement		11:24:255:255	6358179	1					
ANR	6358241	ExpressionStatement	t -> root = child	108:2:2154:2169	6358179	0	True				
ANR	6358242	AssignmentExpression	t -> root = child		6358179	0		=			
ANR	6358243	PtrMemberAccess	t -> root		6358179	0					
ANR	6358244	Identifier	t		6358179	0					
ANR	6358245	Identifier	root		6358179	1					
ANR	6358246	Identifier	child		6358179	1					
ANR	6358247	ElseStatement	else		6358179	0					
ANR	6358248	IfStatement	if ( node )		6358179	0					
ANR	6358249	Condition	node	109:12:2183:2186	6358179	0	True				
ANR	6358250	Identifier	node		6358179	0					
ANR	6358251	CompoundStatement		13:18:294:294	6358179	1					
ANR	6358252	ExpressionStatement	"r_list_append ( node -> children , child )"	110:2:2193:2230	6358179	0	True				
ANR	6358253	CallExpression	"r_list_append ( node -> children , child )"		6358179	0					
ANR	6358254	Callee	r_list_append		6358179	0					
ANR	6358255	Identifier	r_list_append		6358179	0					
ANR	6358256	ArgumentList	node -> children		6358179	1					
ANR	6358257	Argument	node -> children		6358179	0					
ANR	6358258	PtrMemberAccess	node -> children		6358179	0					
ANR	6358259	Identifier	node		6358179	0					
ANR	6358260	Identifier	children		6358179	1					
ANR	6358261	Argument	child		6358179	1					
ANR	6358262	Identifier	child		6358179	0					
ANR	6358263	ExpressionStatement	node -> n_children ++	111:2:2234:2252	6358179	1	True				
ANR	6358264	PostIncDecOperationExpression	node -> n_children ++		6358179	0					
ANR	6358265	PtrMemberAccess	node -> n_children		6358179	0					
ANR	6358266	Identifier	node		6358179	0					
ANR	6358267	Identifier	n_children		6358179	1					
ANR	6358268	IncDec	++		6358179	1					
ANR	6358269	ExpressionStatement	child -> parent = node	113:1:2258:2278	6358179	5	True				
ANR	6358270	AssignmentExpression	child -> parent = node		6358179	0		=			
ANR	6358271	PtrMemberAccess	child -> parent		6358179	0					
ANR	6358272	Identifier	child		6358179	0					
ANR	6358273	Identifier	parent		6358179	1					
ANR	6358274	Identifier	node		6358179	1					
ANR	6358275	ExpressionStatement	vis . pre_visit = ( RTreeNodeVisitCb ) update_depth	116:1:2302:2348	6358179	6	True				
ANR	6358276	AssignmentExpression	vis . pre_visit = ( RTreeNodeVisitCb ) update_depth		6358179	0		=			
ANR	6358277	MemberAccess	vis . pre_visit		6358179	0					
ANR	6358278	Identifier	vis		6358179	0					
ANR	6358279	Identifier	pre_visit		6358179	1					
ANR	6358280	CastExpression	( RTreeNodeVisitCb ) update_depth		6358179	1					
ANR	6358281	CastTarget	RTreeNodeVisitCb		6358179	0					
ANR	6358282	Identifier	update_depth		6358179	1					
ANR	6358283	ExpressionStatement	"tree_dfs_node ( child , & vis )"	117:1:2351:2378	6358179	7	True				
ANR	6358284	CallExpression	"tree_dfs_node ( child , & vis )"		6358179	0					
ANR	6358285	Callee	tree_dfs_node		6358179	0					
ANR	6358286	Identifier	tree_dfs_node		6358179	0					
ANR	6358287	ArgumentList	child		6358179	1					
ANR	6358288	Argument	child		6358179	0					
ANR	6358289	Identifier	child		6358179	0					
ANR	6358290	Argument	& vis		6358179	1					
ANR	6358291	UnaryOperationExpression	& vis		6358179	0					
ANR	6358292	UnaryOperator	&		6358179	0					
ANR	6358293	Identifier	vis		6358179	1					
ANR	6358294	ReturnStatement	return child ;	119:1:2382:2394	6358179	8	True				
ANR	6358295	Identifier	child		6358179	0					
ANR	6358296	ReturnType	R_API RTreeNode *		6358179	1					
ANR	6358297	Identifier	r_tree_add_node		6358179	2					
ANR	6358298	ParameterList	"RTree * t , RTreeNode * node , void * child_data"		6358179	3					
ANR	6358299	Parameter	RTree * t	97:34:1849:1856	6358179	0	True				
ANR	6358300	ParameterType	RTree *		6358179	0					
ANR	6358301	Identifier	t		6358179	1					
ANR	6358302	Parameter	RTreeNode * node	97:44:1859:1873	6358179	1	True				
ANR	6358303	ParameterType	RTreeNode *		6358179	0					
ANR	6358304	Identifier	node		6358179	1					
ANR	6358305	Parameter	void * child_data	97:61:1876:1891	6358179	2	True				
ANR	6358306	ParameterType	void *		6358179	0					
ANR	6358307	Identifier	child_data		6358179	1					
ANR	6358308	CFGEntryNode	ENTRY		6358179		True				
ANR	6358309	CFGExitNode	EXIT		6358179		True				
ANR	6358310	Symbol	t -> root		6358179						
ANR	6358311	Symbol	vis		6358179						
ANR	6358312	Symbol	& vis		6358179						
ANR	6358313	Symbol	* child		6358179						
ANR	6358314	Symbol	NULL		6358179						
ANR	6358315	Symbol	update_depth		6358179						
ANR	6358316	Symbol	node		6358179						
ANR	6358317	Symbol	child_data		6358179						
ANR	6358318	Symbol	t		6358179						
ANR	6358319	Symbol	node_new		6358179						
ANR	6358320	Symbol	vis . pre_visit		6358179						
ANR	6358321	Symbol	* node		6358179						
ANR	6358322	Symbol	node -> n_children		6358179						
ANR	6358323	Symbol	node -> tree		6358179						
ANR	6358324	Symbol	* t		6358179						
ANR	6358325	Symbol	node -> children		6358179						
ANR	6358326	Symbol	child		6358179						
ANR	6358327	Symbol	child -> parent		6358179						
ANR	6358328	Function	r_tree_dfs	122:0:2399:2521							
ANR	6358329	FunctionDef	"r_tree_dfs (RTree * t , RTreeVisitor * vis)"		6358328	0					
ANR	6358330	CompoundStatement		122:52:2451:2521	6358328	0					
ANR	6358331	IfStatement	if ( ! t || ! t -> root )		6358328	0					
ANR	6358332	Condition	! t || ! t -> root	123:5:2458:2471	6358328	0	True				
ANR	6358333	OrExpression	! t || ! t -> root		6358328	0		||			
ANR	6358334	UnaryOperationExpression	! t		6358328	0					
ANR	6358335	UnaryOperator	!		6358328	0					
ANR	6358336	Identifier	t		6358328	1					
ANR	6358337	UnaryOperationExpression	! t -> root		6358328	1					
ANR	6358338	UnaryOperator	!		6358328	0					
ANR	6358339	PtrMemberAccess	t -> root		6358328	1					
ANR	6358340	Identifier	t		6358328	0					
ANR	6358341	Identifier	root		6358328	1					
ANR	6358342	CompoundStatement		2:21:22:22	6358328	1					
ANR	6358343	ReturnStatement	return ;	124:2:2478:2484	6358328	0	True				
ANR	6358344	ExpressionStatement	"tree_dfs_node ( t -> root , vis )"	127:1:2491:2519	6358328	1	True				
ANR	6358345	CallExpression	"tree_dfs_node ( t -> root , vis )"		6358328	0					
ANR	6358346	Callee	tree_dfs_node		6358328	0					
ANR	6358347	Identifier	tree_dfs_node		6358328	0					
ANR	6358348	ArgumentList	t -> root		6358328	1					
ANR	6358349	Argument	t -> root		6358328	0					
ANR	6358350	PtrMemberAccess	t -> root		6358328	0					
ANR	6358351	Identifier	t		6358328	0					
ANR	6358352	Identifier	root		6358328	1					
ANR	6358353	Argument	vis		6358328	1					
ANR	6358354	Identifier	vis		6358328	0					
ANR	6358355	ReturnType	R_API void		6358328	1					
ANR	6358356	Identifier	r_tree_dfs		6358328	2					
ANR	6358357	ParameterList	"RTree * t , RTreeVisitor * vis"		6358328	3					
ANR	6358358	Parameter	RTree * t	122:23:2422:2429	6358328	0	True				
ANR	6358359	ParameterType	RTree *		6358328	0					
ANR	6358360	Identifier	t		6358328	1					
ANR	6358361	Parameter	RTreeVisitor * vis	122:33:2432:2448	6358328	1	True				
ANR	6358362	ParameterType	RTreeVisitor *		6358328	0					
ANR	6358363	Identifier	vis		6358328	1					
ANR	6358364	CFGEntryNode	ENTRY		6358328		True				
ANR	6358365	CFGExitNode	EXIT		6358328		True				
ANR	6358366	Symbol	t -> root		6358328						
ANR	6358367	Symbol	vis		6358328						
ANR	6358368	Symbol	t		6358328						
ANR	6358369	Symbol	* t		6358328						
ANR	6358370	Function	r_tree_bfs	130:0:2524:3175							
ANR	6358371	FunctionDef	"r_tree_bfs (RTree * t , RTreeVisitor * vis)"		6358370	0					
ANR	6358372	CompoundStatement		130:52:2576:3175	6358370	0					
ANR	6358373	IdentifierDeclStatement	RQueue * q ;	131:1:2579:2588	6358370	0	True				
ANR	6358374	IdentifierDecl	* q		6358370	0					
ANR	6358375	IdentifierDeclType	RQueue *		6358370	0					
ANR	6358376	Identifier	q		6358370	1					
ANR	6358377	IfStatement	if ( ! t || ! t -> root )		6358370	1					
ANR	6358378	Condition	! t || ! t -> root	133:5:2596:2609	6358370	0	True				
ANR	6358379	OrExpression	! t || ! t -> root		6358370	0		||			
ANR	6358380	UnaryOperationExpression	! t		6358370	0					
ANR	6358381	UnaryOperator	!		6358370	0					
ANR	6358382	Identifier	t		6358370	1					
ANR	6358383	UnaryOperationExpression	! t -> root		6358370	1					
ANR	6358384	UnaryOperator	!		6358370	0					
ANR	6358385	PtrMemberAccess	t -> root		6358370	1					
ANR	6358386	Identifier	t		6358370	0					
ANR	6358387	Identifier	root		6358370	1					
ANR	6358388	CompoundStatement		4:21:35:35	6358370	1					
ANR	6358389	ReturnStatement	return ;	134:2:2616:2622	6358370	0	True				
ANR	6358390	ExpressionStatement	q = r_queue_new ( 16 )	137:1:2629:2649	6358370	2	True				
ANR	6358391	AssignmentExpression	q = r_queue_new ( 16 )		6358370	0		=			
ANR	6358392	Identifier	q		6358370	0					
ANR	6358393	CallExpression	r_queue_new ( 16 )		6358370	1					
ANR	6358394	Callee	r_queue_new		6358370	0					
ANR	6358395	Identifier	r_queue_new		6358370	0					
ANR	6358396	ArgumentList	16		6358370	1					
ANR	6358397	Argument	16		6358370	0					
ANR	6358398	PrimaryExpression	16		6358370	0					
ANR	6358399	IfStatement	if ( ! q )		6358370	3					
ANR	6358400	Condition	! q	138:5:2656:2657	6358370	0	True				
ANR	6358401	UnaryOperationExpression	! q		6358370	0					
ANR	6358402	UnaryOperator	!		6358370	0					
ANR	6358403	Identifier	q		6358370	1					
ANR	6358404	CompoundStatement		9:9:83:83	6358370	1					
ANR	6358405	ReturnStatement	return ;	139:2:2664:2670	6358370	0	True				
ANR	6358406	ExpressionStatement	"r_queue_enqueue ( q , t -> root )"	141:1:2676:2704	6358370	4	True				
ANR	6358407	CallExpression	"r_queue_enqueue ( q , t -> root )"		6358370	0					
ANR	6358408	Callee	r_queue_enqueue		6358370	0					
ANR	6358409	Identifier	r_queue_enqueue		6358370	0					
ANR	6358410	ArgumentList	q		6358370	1					
ANR	6358411	Argument	q		6358370	0					
ANR	6358412	Identifier	q		6358370	0					
ANR	6358413	Argument	t -> root		6358370	1					
ANR	6358414	PtrMemberAccess	t -> root		6358370	0					
ANR	6358415	Identifier	t		6358370	0					
ANR	6358416	Identifier	root		6358370	1					
ANR	6358417	WhileStatement	while ( ! r_queue_is_empty ( q ) )		6358370	5					
ANR	6358418	Condition	! r_queue_is_empty ( q )	142:8:2714:2734	6358370	0	True				
ANR	6358419	UnaryOperationExpression	! r_queue_is_empty ( q )		6358370	0					
ANR	6358420	UnaryOperator	!		6358370	0					
ANR	6358421	CallExpression	r_queue_is_empty ( q )		6358370	1					
ANR	6358422	Callee	r_queue_is_empty		6358370	0					
ANR	6358423	Identifier	r_queue_is_empty		6358370	0					
ANR	6358424	ArgumentList	q		6358370	1					
ANR	6358425	Argument	q		6358370	0					
ANR	6358426	Identifier	q		6358370	0					
ANR	6358427	CompoundStatement		20:3:288:301	6358370	1					
ANR	6358428	IdentifierDeclStatement	RTreeNode * el = ( RTreeNode * ) r_queue_dequeue ( q ) ;	143:3:2742:2790	6358370	0	True				
ANR	6358429	IdentifierDecl	* el = ( RTreeNode * ) r_queue_dequeue ( q )		6358370	0					
ANR	6358430	IdentifierDeclType	RTreeNode *		6358370	0					
ANR	6358431	Identifier	el		6358370	1					
ANR	6358432	AssignmentExpression	* el = ( RTreeNode * ) r_queue_dequeue ( q )		6358370	2		=			
ANR	6358433	Identifier	el		6358370	0					
ANR	6358434	CastExpression	( RTreeNode * ) r_queue_dequeue ( q )		6358370	1					
ANR	6358435	CastTarget	RTreeNode *		6358370	0					
ANR	6358436	CallExpression	r_queue_dequeue ( q )		6358370	1					
ANR	6358437	Callee	r_queue_dequeue		6358370	0					
ANR	6358438	Identifier	r_queue_dequeue		6358370	0					
ANR	6358439	ArgumentList	q		6358370	1					
ANR	6358440	Argument	q		6358370	0					
ANR	6358441	Identifier	q		6358370	0					
ANR	6358442	IfStatement	if ( ! el )		6358370	1					
ANR	6358443	Condition	! el	144:7:2799:2801	6358370	0	True				
ANR	6358444	UnaryOperationExpression	! el		6358370	0					
ANR	6358445	UnaryOperator	!		6358370	0					
ANR	6358446	Identifier	el		6358370	1					
ANR	6358447	CompoundStatement		15:12:227:227	6358370	1					
ANR	6358448	ExpressionStatement	r_queue_free ( q )	145:4:2810:2826	6358370	0	True				
ANR	6358449	CallExpression	r_queue_free ( q )		6358370	0					
ANR	6358450	Callee	r_queue_free		6358370	0					
ANR	6358451	Identifier	r_queue_free		6358370	0					
ANR	6358452	ArgumentList	q		6358370	1					
ANR	6358453	Argument	q		6358370	0					
ANR	6358454	Identifier	q		6358370	0					
ANR	6358455	ReturnStatement	return ;	146:4:2832:2838	6358370	1	True				
ANR	6358456	IdentifierDeclStatement	RTreeNode * n ;	148:3:2848:2860	6358370	2	True				
ANR	6358457	IdentifierDecl	* n		6358370	0					
ANR	6358458	IdentifierDeclType	RTreeNode *		6358370	0					
ANR	6358459	Identifier	n		6358370	1					
ANR	6358460	IdentifierDeclStatement	RListIter * it ;	149:3:2865:2878	6358370	3	True				
ANR	6358461	IdentifierDecl	* it		6358370	0					
ANR	6358462	IdentifierDeclType	RListIter *		6358370	0					
ANR	6358463	Identifier	it		6358370	1					
ANR	6358464	IfStatement	if ( vis -> pre_visit )		6358370	4					
ANR	6358465	Condition	vis -> pre_visit	151:7:2888:2901	6358370	0	True				
ANR	6358466	PtrMemberAccess	vis -> pre_visit		6358370	0					
ANR	6358467	Identifier	vis		6358370	0					
ANR	6358468	Identifier	pre_visit		6358370	1					
ANR	6358469	CompoundStatement		22:23:327:327	6358370	1					
ANR	6358470	ExpressionStatement	"vis -> pre_visit ( el , vis )"	152:4:2910:2934	6358370	0	True				
ANR	6358471	CallExpression	"vis -> pre_visit ( el , vis )"		6358370	0					
ANR	6358472	Callee	vis -> pre_visit		6358370	0					
ANR	6358473	PtrMemberAccess	vis -> pre_visit		6358370	0					
ANR	6358474	Identifier	vis		6358370	0					
ANR	6358475	Identifier	pre_visit		6358370	1					
ANR	6358476	ArgumentList	el		6358370	1					
ANR	6358477	Argument	el		6358370	0					
ANR	6358478	Identifier	el		6358370	0					
ANR	6358479	Argument	vis		6358370	1					
ANR	6358480	Identifier	vis		6358370	0					
ANR	6358481	Statement	r_list_foreach	155:3:2945:2958	6358370	5	True				
ANR	6358482	Statement	(	155:18:2960:2960	6358370	6	True				
ANR	6358483	Statement	el	155:19:2961:2962	6358370	7	True				
ANR	6358484	Statement	->	155:21:2963:2964	6358370	8	True				
ANR	6358485	Statement	children	155:23:2965:2972	6358370	9	True				
ANR	6358486	Statement	","	155:31:2973:2973	6358370	10	True				
ANR	6358487	Statement	it	155:33:2975:2976	6358370	11	True				
ANR	6358488	Statement	","	155:35:2977:2977	6358370	12	True				
ANR	6358489	Statement	n	155:37:2979:2979	6358370	13	True				
ANR	6358490	Statement	)	155:38:2980:2980	6358370	14	True				
ANR	6358491	CompoundStatement		26:40:405:405	6358370	15					
ANR	6358492	IfStatement	if ( vis -> discover_child )		6358370	0					
ANR	6358493	Condition	vis -> discover_child	156:8:2992:3010	6358370	0	True				
ANR	6358494	PtrMemberAccess	vis -> discover_child		6358370	0					
ANR	6358495	Identifier	vis		6358370	0					
ANR	6358496	Identifier	discover_child		6358370	1					
ANR	6358497	CompoundStatement		27:29:436:436	6358370	1					
ANR	6358498	ExpressionStatement	"vis -> discover_child ( n , vis )"	157:5:3020:3048	6358370	0	True				
ANR	6358499	CallExpression	"vis -> discover_child ( n , vis )"		6358370	0					
ANR	6358500	Callee	vis -> discover_child		6358370	0					
ANR	6358501	PtrMemberAccess	vis -> discover_child		6358370	0					
ANR	6358502	Identifier	vis		6358370	0					
ANR	6358503	Identifier	discover_child		6358370	1					
ANR	6358504	ArgumentList	n		6358370	1					
ANR	6358505	Argument	n		6358370	0					
ANR	6358506	Identifier	n		6358370	0					
ANR	6358507	Argument	vis		6358370	1					
ANR	6358508	Identifier	vis		6358370	0					
ANR	6358509	ExpressionStatement	"r_queue_enqueue ( q , n )"	159:4:3060:3082	6358370	1	True				
ANR	6358510	CallExpression	"r_queue_enqueue ( q , n )"		6358370	0					
ANR	6358511	Callee	r_queue_enqueue		6358370	0					
ANR	6358512	Identifier	r_queue_enqueue		6358370	0					
ANR	6358513	ArgumentList	q		6358370	1					
ANR	6358514	Argument	q		6358370	0					
ANR	6358515	Identifier	q		6358370	0					
ANR	6358516	Argument	n		6358370	1					
ANR	6358517	Identifier	n		6358370	0					
ANR	6358518	IfStatement	if ( vis -> post_visit )		6358370	16					
ANR	6358519	Condition	vis -> post_visit	162:7:3097:3111	6358370	0	True				
ANR	6358520	PtrMemberAccess	vis -> post_visit		6358370	0					
ANR	6358521	Identifier	vis		6358370	0					
ANR	6358522	Identifier	post_visit		6358370	1					
ANR	6358523	CompoundStatement		33:24:537:537	6358370	1					
ANR	6358524	ExpressionStatement	"vis -> post_visit ( el , vis )"	163:4:3120:3145	6358370	0	True				
ANR	6358525	CallExpression	"vis -> post_visit ( el , vis )"		6358370	0					
ANR	6358526	Callee	vis -> post_visit		6358370	0					
ANR	6358527	PtrMemberAccess	vis -> post_visit		6358370	0					
ANR	6358528	Identifier	vis		6358370	0					
ANR	6358529	Identifier	post_visit		6358370	1					
ANR	6358530	ArgumentList	el		6358370	1					
ANR	6358531	Argument	el		6358370	0					
ANR	6358532	Identifier	el		6358370	0					
ANR	6358533	Argument	vis		6358370	1					
ANR	6358534	Identifier	vis		6358370	0					
ANR	6358535	ExpressionStatement	r_queue_free ( q )	167:1:3157:3173	6358370	6	True				
ANR	6358536	CallExpression	r_queue_free ( q )		6358370	0					
ANR	6358537	Callee	r_queue_free		6358370	0					
ANR	6358538	Identifier	r_queue_free		6358370	0					
ANR	6358539	ArgumentList	q		6358370	1					
ANR	6358540	Argument	q		6358370	0					
ANR	6358541	Identifier	q		6358370	0					
ANR	6358542	ReturnType	R_API void		6358370	1					
ANR	6358543	Identifier	r_tree_bfs		6358370	2					
ANR	6358544	ParameterList	"RTree * t , RTreeVisitor * vis"		6358370	3					
ANR	6358545	Parameter	RTree * t	130:23:2547:2554	6358370	0	True				
ANR	6358546	ParameterType	RTree *		6358370	0					
ANR	6358547	Identifier	t		6358370	1					
ANR	6358548	Parameter	RTreeVisitor * vis	130:33:2557:2573	6358370	1	True				
ANR	6358549	ParameterType	RTreeVisitor *		6358370	0					
ANR	6358550	Identifier	vis		6358370	1					
ANR	6358551	CFGEntryNode	ENTRY		6358370		True				
ANR	6358552	CFGExitNode	EXIT		6358370		True				
ANR	6358553	Symbol	t -> root		6358370						
ANR	6358554	Symbol	vis		6358370						
ANR	6358555	Symbol	vis -> pre_visit		6358370						
ANR	6358556	Symbol	el		6358370						
ANR	6358557	Symbol	r_queue_new		6358370						
ANR	6358558	Symbol	* vis		6358370						
ANR	6358559	Symbol	it		6358370						
ANR	6358560	Symbol	r_queue_dequeue		6358370						
ANR	6358561	Symbol	n		6358370						
ANR	6358562	Symbol	q		6358370						
ANR	6358563	Symbol	vis -> discover_child		6358370						
ANR	6358564	Symbol	t		6358370						
ANR	6358565	Symbol	vis -> post_visit		6358370						
ANR	6358566	Symbol	r_queue_is_empty		6358370						
ANR	6358567	Symbol	* t		6358370						
