command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6230952	File	data/converged/CVE-2019-16718~_radare2/spaces.c								
ANR	6230953	Function	r_spaces_new	5:0:88:253							
ANR	6230954	FunctionDef	r_spaces_new (const char * name)		6230953	0					
ANR	6230955	CompoundStatement		5:46:134:253	6230953	0					
ANR	6230956	IdentifierDeclStatement	RSpaces * sp = R_NEW0 ( RSpaces ) ;	6:1:137:167	6230953	0	True				
ANR	6230957	IdentifierDecl	* sp = R_NEW0 ( RSpaces )		6230953	0					
ANR	6230958	IdentifierDeclType	RSpaces *		6230953	0					
ANR	6230959	Identifier	sp		6230953	1					
ANR	6230960	AssignmentExpression	* sp = R_NEW0 ( RSpaces )		6230953	2		=			
ANR	6230961	Identifier	sp		6230953	0					
ANR	6230962	CallExpression	R_NEW0 ( RSpaces )		6230953	1					
ANR	6230963	Callee	R_NEW0		6230953	0					
ANR	6230964	Identifier	R_NEW0		6230953	0					
ANR	6230965	ArgumentList	RSpaces		6230953	1					
ANR	6230966	Argument	RSpaces		6230953	0					
ANR	6230967	Identifier	RSpaces		6230953	0					
ANR	6230968	IfStatement	"if ( ! sp || ! r_spaces_init ( sp , name ) )"		6230953	1					
ANR	6230969	Condition	"! sp || ! r_spaces_init ( sp , name )"	7:5:174:205	6230953	0	True				
ANR	6230970	OrExpression	"! sp || ! r_spaces_init ( sp , name )"		6230953	0		||			
ANR	6230971	UnaryOperationExpression	! sp		6230953	0					
ANR	6230972	UnaryOperator	!		6230953	0					
ANR	6230973	Identifier	sp		6230953	1					
ANR	6230974	UnaryOperationExpression	"! r_spaces_init ( sp , name )"		6230953	1					
ANR	6230975	UnaryOperator	!		6230953	0					
ANR	6230976	CallExpression	"r_spaces_init ( sp , name )"		6230953	1					
ANR	6230977	Callee	r_spaces_init		6230953	0					
ANR	6230978	Identifier	r_spaces_init		6230953	0					
ANR	6230979	ArgumentList	sp		6230953	1					
ANR	6230980	Argument	sp		6230953	0					
ANR	6230981	Identifier	sp		6230953	0					
ANR	6230982	Argument	name		6230953	1					
ANR	6230983	Identifier	name		6230953	0					
ANR	6230984	CompoundStatement		3:39:73:73	6230953	1					
ANR	6230985	ExpressionStatement	free ( sp )	8:2:212:221	6230953	0	True				
ANR	6230986	CallExpression	free ( sp )		6230953	0					
ANR	6230987	Callee	free		6230953	0					
ANR	6230988	Identifier	free		6230953	0					
ANR	6230989	ArgumentList	sp		6230953	1					
ANR	6230990	Argument	sp		6230953	0					
ANR	6230991	Identifier	sp		6230953	0					
ANR	6230992	ReturnStatement	return NULL ;	9:2:225:236	6230953	1	True				
ANR	6230993	Identifier	NULL		6230953	0					
ANR	6230994	ReturnStatement	return sp ;	11:1:242:251	6230953	2	True				
ANR	6230995	Identifier	sp		6230953	0					
ANR	6230996	ReturnType	R_API RSpaces *		6230953	1					
ANR	6230997	Identifier	r_spaces_new		6230953	2					
ANR	6230998	ParameterList	const char * name		6230953	3					
ANR	6230999	Parameter	const char * name	5:28:116:131	6230953	0	True				
ANR	6231000	ParameterType	const char *		6230953	0					
ANR	6231001	Identifier	name		6230953	1					
ANR	6231002	CFGEntryNode	ENTRY		6230953		True				
ANR	6231003	CFGExitNode	EXIT		6230953		True				
ANR	6231004	Symbol	R_NEW0		6230953						
ANR	6231005	Symbol	r_spaces_init		6230953						
ANR	6231006	Symbol	NULL		6230953						
ANR	6231007	Symbol	RSpaces		6230953						
ANR	6231008	Symbol	name		6230953						
ANR	6231009	Symbol	sp		6230953						
ANR	6231010	Function	r_spaces_init	14:0:256:658							
ANR	6231011	FunctionDef	"r_spaces_init (RSpaces * sp , const char * name)"		6231010	0					
ANR	6231012	CompoundStatement		14:56:312:658	6231010	0					
ANR	6231013	ExpressionStatement	"r_return_val_if_fail ( sp && name , false )"	15:1:315:355	6231010	0	True				
ANR	6231014	CallExpression	"r_return_val_if_fail ( sp && name , false )"		6231010	0					
ANR	6231015	Callee	r_return_val_if_fail		6231010	0					
ANR	6231016	Identifier	r_return_val_if_fail		6231010	0					
ANR	6231017	ArgumentList	sp && name		6231010	1					
ANR	6231018	Argument	sp && name		6231010	0					
ANR	6231019	AndExpression	sp && name		6231010	0		&&			
ANR	6231020	Identifier	sp		6231010	0					
ANR	6231021	Identifier	name		6231010	1					
ANR	6231022	Argument	false		6231010	1					
ANR	6231023	Identifier	false		6231010	0					
ANR	6231024	ExpressionStatement	sp -> name = strdup ( name )	16:1:358:382	6231010	1	True				
ANR	6231025	AssignmentExpression	sp -> name = strdup ( name )		6231010	0		=			
ANR	6231026	PtrMemberAccess	sp -> name		6231010	0					
ANR	6231027	Identifier	sp		6231010	0					
ANR	6231028	Identifier	name		6231010	1					
ANR	6231029	CallExpression	strdup ( name )		6231010	1					
ANR	6231030	Callee	strdup		6231010	0					
ANR	6231031	Identifier	strdup		6231010	0					
ANR	6231032	ArgumentList	name		6231010	1					
ANR	6231033	Argument	name		6231010	0					
ANR	6231034	Identifier	name		6231010	0					
ANR	6231035	IfStatement	if ( ! sp -> name )		6231010	2					
ANR	6231036	Condition	! sp -> name	17:5:389:397	6231010	0	True				
ANR	6231037	UnaryOperationExpression	! sp -> name		6231010	0					
ANR	6231038	UnaryOperator	!		6231010	0					
ANR	6231039	PtrMemberAccess	sp -> name		6231010	1					
ANR	6231040	Identifier	sp		6231010	0					
ANR	6231041	Identifier	name		6231010	1					
ANR	6231042	CompoundStatement		4:16:87:87	6231010	1					
ANR	6231043	GotoStatement	goto fail ;	18:2:404:413	6231010	0	True				
ANR	6231044	Identifier	fail		6231010	0					
ANR	6231045	ExpressionStatement	sp -> spaces = NULL	21:1:420:437	6231010	3	True				
ANR	6231046	AssignmentExpression	sp -> spaces = NULL		6231010	0		=			
ANR	6231047	PtrMemberAccess	sp -> spaces		6231010	0					
ANR	6231048	Identifier	sp		6231010	0					
ANR	6231049	Identifier	spaces		6231010	1					
ANR	6231050	Identifier	NULL		6231010	1					
ANR	6231051	ExpressionStatement	sp -> current = NULL	22:1:440:458	6231010	4	True				
ANR	6231052	AssignmentExpression	sp -> current = NULL		6231010	0		=			
ANR	6231053	PtrMemberAccess	sp -> current		6231010	0					
ANR	6231054	Identifier	sp		6231010	0					
ANR	6231055	Identifier	current		6231010	1					
ANR	6231056	Identifier	NULL		6231010	1					
ANR	6231057	ExpressionStatement	sp -> spacestack = r_list_new ( )	23:1:461:491	6231010	5	True				
ANR	6231058	AssignmentExpression	sp -> spacestack = r_list_new ( )		6231010	0		=			
ANR	6231059	PtrMemberAccess	sp -> spacestack		6231010	0					
ANR	6231060	Identifier	sp		6231010	0					
ANR	6231061	Identifier	spacestack		6231010	1					
ANR	6231062	CallExpression	r_list_new ( )		6231010	1					
ANR	6231063	Callee	r_list_new		6231010	0					
ANR	6231064	Identifier	r_list_new		6231010	0					
ANR	6231065	ArgumentList			6231010	1					
ANR	6231066	IfStatement	if ( ! sp -> spacestack )		6231010	6					
ANR	6231067	Condition	! sp -> spacestack	24:5:498:512	6231010	0	True				
ANR	6231068	UnaryOperationExpression	! sp -> spacestack		6231010	0					
ANR	6231069	UnaryOperator	!		6231010	0					
ANR	6231070	PtrMemberAccess	sp -> spacestack		6231010	1					
ANR	6231071	Identifier	sp		6231010	0					
ANR	6231072	Identifier	spacestack		6231010	1					
ANR	6231073	CompoundStatement		11:22:202:202	6231010	1					
ANR	6231074	GotoStatement	goto fail ;	25:2:519:528	6231010	0	True				
ANR	6231075	Identifier	fail		6231010	0					
ANR	6231076	ExpressionStatement	sp -> event = r_event_new ( sp )	28:1:535:563	6231010	7	True				
ANR	6231077	AssignmentExpression	sp -> event = r_event_new ( sp )		6231010	0		=			
ANR	6231078	PtrMemberAccess	sp -> event		6231010	0					
ANR	6231079	Identifier	sp		6231010	0					
ANR	6231080	Identifier	event		6231010	1					
ANR	6231081	CallExpression	r_event_new ( sp )		6231010	1					
ANR	6231082	Callee	r_event_new		6231010	0					
ANR	6231083	Identifier	r_event_new		6231010	0					
ANR	6231084	ArgumentList	sp		6231010	1					
ANR	6231085	Argument	sp		6231010	0					
ANR	6231086	Identifier	sp		6231010	0					
ANR	6231087	IfStatement	if ( ! sp -> event )		6231010	8					
ANR	6231088	Condition	! sp -> event	29:5:570:579	6231010	0	True				
ANR	6231089	UnaryOperationExpression	! sp -> event		6231010	0					
ANR	6231090	UnaryOperator	!		6231010	0					
ANR	6231091	PtrMemberAccess	sp -> event		6231010	1					
ANR	6231092	Identifier	sp		6231010	0					
ANR	6231093	Identifier	event		6231010	1					
ANR	6231094	CompoundStatement		16:17:269:269	6231010	1					
ANR	6231095	GotoStatement	goto fail ;	30:2:586:595	6231010	0	True				
ANR	6231096	Identifier	fail		6231010	0					
ANR	6231097	ReturnStatement	return true ;	33:1:602:613	6231010	9	True				
ANR	6231098	Identifier	true		6231010	0					
ANR	6231099	Label	fail :	35:0:616:620	6231010	10	True				
ANR	6231100	Identifier	fail		6231010	0					
ANR	6231101	ExpressionStatement	r_spaces_fini ( sp )	36:1:623:641	6231010	11	True				
ANR	6231102	CallExpression	r_spaces_fini ( sp )		6231010	0					
ANR	6231103	Callee	r_spaces_fini		6231010	0					
ANR	6231104	Identifier	r_spaces_fini		6231010	0					
ANR	6231105	ArgumentList	sp		6231010	1					
ANR	6231106	Argument	sp		6231010	0					
ANR	6231107	Identifier	sp		6231010	0					
ANR	6231108	ReturnStatement	return false ;	37:1:644:656	6231010	12	True				
ANR	6231109	Identifier	false		6231010	0					
ANR	6231110	ReturnType	R_API bool		6231010	1					
ANR	6231111	Identifier	r_spaces_init		6231010	2					
ANR	6231112	ParameterList	"RSpaces * sp , const char * name"		6231010	3					
ANR	6231113	Parameter	RSpaces * sp	14:25:281:291	6231010	0	True				
ANR	6231114	ParameterType	RSpaces *		6231010	0					
ANR	6231115	Identifier	sp		6231010	1					
ANR	6231116	Parameter	const char * name	14:38:294:309	6231010	1	True				
ANR	6231117	ParameterType	const char *		6231010	0					
ANR	6231118	Identifier	name		6231010	1					
ANR	6231119	CFGEntryNode	ENTRY		6231010		True				
ANR	6231120	CFGExitNode	EXIT		6231010		True				
ANR	6231121	Symbol	* sp		6231010						
ANR	6231122	Symbol	NULL		6231010						
ANR	6231123	Symbol	false		6231010						
ANR	6231124	Symbol	sp -> event		6231010						
ANR	6231125	Symbol	sp -> spaces		6231010						
ANR	6231126	Symbol	r_event_new		6231010						
ANR	6231127	Symbol	name		6231010						
ANR	6231128	Symbol	sp -> name		6231010						
ANR	6231129	Symbol	true		6231010						
ANR	6231130	Symbol	sp -> current		6231010						
ANR	6231131	Symbol	strdup		6231010						
ANR	6231132	Symbol	sp		6231010						
ANR	6231133	Symbol	sp -> spacestack		6231010						
ANR	6231134	Symbol	r_list_new		6231010						
ANR	6231135	Function	r_spaces_free	40:0:661:734							
ANR	6231136	FunctionDef	r_spaces_free (RSpaces * sp)		6231135	0					
ANR	6231137	CompoundStatement		40:38:699:734	6231135	0					
ANR	6231138	ExpressionStatement	r_spaces_fini ( sp )	41:1:702:720	6231135	0	True				
ANR	6231139	CallExpression	r_spaces_fini ( sp )		6231135	0					
ANR	6231140	Callee	r_spaces_fini		6231135	0					
ANR	6231141	Identifier	r_spaces_fini		6231135	0					
ANR	6231142	ArgumentList	sp		6231135	1					
ANR	6231143	Argument	sp		6231135	0					
ANR	6231144	Identifier	sp		6231135	0					
ANR	6231145	ExpressionStatement	free ( sp )	42:1:723:732	6231135	1	True				
ANR	6231146	CallExpression	free ( sp )		6231135	0					
ANR	6231147	Callee	free		6231135	0					
ANR	6231148	Identifier	free		6231135	0					
ANR	6231149	ArgumentList	sp		6231135	1					
ANR	6231150	Argument	sp		6231135	0					
ANR	6231151	Identifier	sp		6231135	0					
ANR	6231152	ReturnType	R_API void		6231135	1					
ANR	6231153	Identifier	r_spaces_free		6231135	2					
ANR	6231154	ParameterList	RSpaces * sp		6231135	3					
ANR	6231155	Parameter	RSpaces * sp	40:25:686:696	6231135	0	True				
ANR	6231156	ParameterType	RSpaces *		6231135	0					
ANR	6231157	Identifier	sp		6231135	1					
ANR	6231158	CFGEntryNode	ENTRY		6231135		True				
ANR	6231159	CFGExitNode	EXIT		6231135		True				
ANR	6231160	Symbol	sp		6231135						
ANR	6231161	Function	space_free	45:0:737:816							
ANR	6231162	FunctionDef	space_free (RSpace * s)		6231161	0					
ANR	6231163	CompoundStatement		45:34:771:816	6231161	0					
ANR	6231164	IfStatement	if ( s )		6231161	0					
ANR	6231165	Condition	s	46:5:778:778	6231161	0	True				
ANR	6231166	Identifier	s		6231161	0					
ANR	6231167	CompoundStatement		2:8:9:9	6231161	1					
ANR	6231168	ExpressionStatement	free ( s -> name )	47:2:785:799	6231161	0	True				
ANR	6231169	CallExpression	free ( s -> name )		6231161	0					
ANR	6231170	Callee	free		6231161	0					
ANR	6231171	Identifier	free		6231161	0					
ANR	6231172	ArgumentList	s -> name		6231161	1					
ANR	6231173	Argument	s -> name		6231161	0					
ANR	6231174	PtrMemberAccess	s -> name		6231161	0					
ANR	6231175	Identifier	s		6231161	0					
ANR	6231176	Identifier	name		6231161	1					
ANR	6231177	ExpressionStatement	free ( s )	48:2:803:811	6231161	1	True				
ANR	6231178	CallExpression	free ( s )		6231161	0					
ANR	6231179	Callee	free		6231161	0					
ANR	6231180	Identifier	free		6231161	0					
ANR	6231181	ArgumentList	s		6231161	1					
ANR	6231182	Argument	s		6231161	0					
ANR	6231183	Identifier	s		6231161	0					
ANR	6231184	ReturnType	static void		6231161	1					
ANR	6231185	Identifier	space_free		6231161	2					
ANR	6231186	ParameterList	RSpace * s		6231161	3					
ANR	6231187	Parameter	RSpace * s	45:23:760:768	6231161	0	True				
ANR	6231188	ParameterType	RSpace *		6231161	0					
ANR	6231189	Identifier	s		6231161	1					
ANR	6231190	CFGEntryNode	ENTRY		6231161		True				
ANR	6231191	CFGExitNode	EXIT		6231161		True				
ANR	6231192	Symbol	s		6231161						
ANR	6231193	Symbol	s -> name		6231161						
ANR	6231194	Symbol	* s		6231161						
ANR	6231195	Function	space_node_free	52:0:819:920							
ANR	6231196	FunctionDef	space_node_free (RBNode * n)		6231195	0					
ANR	6231197	CompoundStatement		52:39:858:920	6231195	0					
ANR	6231198	IdentifierDeclStatement	"RSpace * s = container_of ( n , RSpace , rb ) ;"	53:1:861:901	6231195	0	True				
ANR	6231199	IdentifierDecl	"* s = container_of ( n , RSpace , rb )"		6231195	0					
ANR	6231200	IdentifierDeclType	RSpace *		6231195	0					
ANR	6231201	Identifier	s		6231195	1					
ANR	6231202	AssignmentExpression	"* s = container_of ( n , RSpace , rb )"		6231195	2		=			
ANR	6231203	Identifier	s		6231195	0					
ANR	6231204	CallExpression	"container_of ( n , RSpace , rb )"		6231195	1					
ANR	6231205	Callee	container_of		6231195	0					
ANR	6231206	Identifier	container_of		6231195	0					
ANR	6231207	ArgumentList	n		6231195	1					
ANR	6231208	Argument	n		6231195	0					
ANR	6231209	Identifier	n		6231195	0					
ANR	6231210	Argument	RSpace		6231195	1					
ANR	6231211	Identifier	RSpace		6231195	0					
ANR	6231212	Argument	rb		6231195	2					
ANR	6231213	Identifier	rb		6231195	0					
ANR	6231214	ExpressionStatement	space_free ( s )	54:1:904:918	6231195	1	True				
ANR	6231215	CallExpression	space_free ( s )		6231195	0					
ANR	6231216	Callee	space_free		6231195	0					
ANR	6231217	Identifier	space_free		6231195	0					
ANR	6231218	ArgumentList	s		6231195	1					
ANR	6231219	Argument	s		6231195	0					
ANR	6231220	Identifier	s		6231195	0					
ANR	6231221	ReturnType	static void		6231195	1					
ANR	6231222	Identifier	space_node_free		6231195	2					
ANR	6231223	ParameterList	RBNode * n		6231195	3					
ANR	6231224	Parameter	RBNode * n	52:28:847:855	6231195	0	True				
ANR	6231225	ParameterType	RBNode *		6231195	0					
ANR	6231226	Identifier	n		6231195	1					
ANR	6231227	CFGEntryNode	ENTRY		6231195		True				
ANR	6231228	CFGExitNode	EXIT		6231195		True				
ANR	6231229	Symbol	rb		6231195						
ANR	6231230	Symbol	container_of		6231195						
ANR	6231231	Symbol	s		6231195						
ANR	6231232	Symbol	RSpace		6231195						
ANR	6231233	Symbol	n		6231195						
ANR	6231234	Function	r_spaces_fini	57:0:923:1171							
ANR	6231235	FunctionDef	r_spaces_fini (RSpaces * sp)		6231234	0					
ANR	6231236	CompoundStatement		57:38:961:1171	6231234	0					
ANR	6231237	ExpressionStatement	r_list_free ( sp -> spacestack )	58:1:964:992	6231234	0	True				
ANR	6231238	CallExpression	r_list_free ( sp -> spacestack )		6231234	0					
ANR	6231239	Callee	r_list_free		6231234	0					
ANR	6231240	Identifier	r_list_free		6231234	0					
ANR	6231241	ArgumentList	sp -> spacestack		6231234	1					
ANR	6231242	Argument	sp -> spacestack		6231234	0					
ANR	6231243	PtrMemberAccess	sp -> spacestack		6231234	0					
ANR	6231244	Identifier	sp		6231234	0					
ANR	6231245	Identifier	spacestack		6231234	1					
ANR	6231246	ExpressionStatement	sp -> spacestack = NULL	59:1:995:1016	6231234	1	True				
ANR	6231247	AssignmentExpression	sp -> spacestack = NULL		6231234	0		=			
ANR	6231248	PtrMemberAccess	sp -> spacestack		6231234	0					
ANR	6231249	Identifier	sp		6231234	0					
ANR	6231250	Identifier	spacestack		6231234	1					
ANR	6231251	Identifier	NULL		6231234	1					
ANR	6231252	ExpressionStatement	"r_rbtree_free ( sp -> spaces , space_node_free )"	60:1:1019:1062	6231234	2	True				
ANR	6231253	CallExpression	"r_rbtree_free ( sp -> spaces , space_node_free )"		6231234	0					
ANR	6231254	Callee	r_rbtree_free		6231234	0					
ANR	6231255	Identifier	r_rbtree_free		6231234	0					
ANR	6231256	ArgumentList	sp -> spaces		6231234	1					
ANR	6231257	Argument	sp -> spaces		6231234	0					
ANR	6231258	PtrMemberAccess	sp -> spaces		6231234	0					
ANR	6231259	Identifier	sp		6231234	0					
ANR	6231260	Identifier	spaces		6231234	1					
ANR	6231261	Argument	space_node_free		6231234	1					
ANR	6231262	Identifier	space_node_free		6231234	0					
ANR	6231263	ExpressionStatement	sp -> spaces = NULL	61:1:1065:1082	6231234	3	True				
ANR	6231264	AssignmentExpression	sp -> spaces = NULL		6231234	0		=			
ANR	6231265	PtrMemberAccess	sp -> spaces		6231234	0					
ANR	6231266	Identifier	sp		6231234	0					
ANR	6231267	Identifier	spaces		6231234	1					
ANR	6231268	Identifier	NULL		6231234	1					
ANR	6231269	ExpressionStatement	r_event_free ( sp -> event )	62:1:1085:1109	6231234	4	True				
ANR	6231270	CallExpression	r_event_free ( sp -> event )		6231234	0					
ANR	6231271	Callee	r_event_free		6231234	0					
ANR	6231272	Identifier	r_event_free		6231234	0					
ANR	6231273	ArgumentList	sp -> event		6231234	1					
ANR	6231274	Argument	sp -> event		6231234	0					
ANR	6231275	PtrMemberAccess	sp -> event		6231234	0					
ANR	6231276	Identifier	sp		6231234	0					
ANR	6231277	Identifier	event		6231234	1					
ANR	6231278	ExpressionStatement	sp -> event = NULL	63:1:1112:1128	6231234	5	True				
ANR	6231279	AssignmentExpression	sp -> event = NULL		6231234	0		=			
ANR	6231280	PtrMemberAccess	sp -> event		6231234	0					
ANR	6231281	Identifier	sp		6231234	0					
ANR	6231282	Identifier	event		6231234	1					
ANR	6231283	Identifier	NULL		6231234	1					
ANR	6231284	ExpressionStatement	sp -> current = NULL	64:1:1131:1149	6231234	6	True				
ANR	6231285	AssignmentExpression	sp -> current = NULL		6231234	0		=			
ANR	6231286	PtrMemberAccess	sp -> current		6231234	0					
ANR	6231287	Identifier	sp		6231234	0					
ANR	6231288	Identifier	current		6231234	1					
ANR	6231289	Identifier	NULL		6231234	1					
ANR	6231290	ExpressionStatement	R_FREE ( sp -> name )	65:1:1152:1169	6231234	7	True				
ANR	6231291	CallExpression	R_FREE ( sp -> name )		6231234	0					
ANR	6231292	Callee	R_FREE		6231234	0					
ANR	6231293	Identifier	R_FREE		6231234	0					
ANR	6231294	ArgumentList	sp -> name		6231234	1					
ANR	6231295	Argument	sp -> name		6231234	0					
ANR	6231296	PtrMemberAccess	sp -> name		6231234	0					
ANR	6231297	Identifier	sp		6231234	0					
ANR	6231298	Identifier	name		6231234	1					
ANR	6231299	ReturnType	R_API void		6231234	1					
ANR	6231300	Identifier	r_spaces_fini		6231234	2					
ANR	6231301	ParameterList	RSpaces * sp		6231234	3					
ANR	6231302	Parameter	RSpaces * sp	57:25:948:958	6231234	0	True				
ANR	6231303	ParameterType	RSpaces *		6231234	0					
ANR	6231304	Identifier	sp		6231234	1					
ANR	6231305	CFGEntryNode	ENTRY		6231234		True				
ANR	6231306	CFGExitNode	EXIT		6231234		True				
ANR	6231307	Symbol	* sp		6231234						
ANR	6231308	Symbol	NULL		6231234						
ANR	6231309	Symbol	sp -> name		6231234						
ANR	6231310	Symbol	space_node_free		6231234						
ANR	6231311	Symbol	sp -> event		6231234						
ANR	6231312	Symbol	sp -> current		6231234						
ANR	6231313	Symbol	sp		6231234						
ANR	6231314	Symbol	sp -> spacestack		6231234						
ANR	6231315	Symbol	sp -> spaces		6231234						
ANR	6231316	Function	name_space_cmp	68:0:1174:1334							
ANR	6231317	FunctionDef	"name_space_cmp (const void * incoming , const RBNode * rb)"		6231316	0					
ANR	6231318	CompoundStatement		68:66:1240:1334	6231316	0					
ANR	6231319	Statement	const	69:1:1243:1247	6231316	0	True				
ANR	6231320	Statement	RSpace	69:7:1249:1254	6231316	1	True				
ANR	6231321	Statement	*	69:14:1256:1256	6231316	2	True				
ANR	6231322	Statement	s	69:15:1257:1257	6231316	3	True				
ANR	6231323	Statement	=	69:17:1259:1259	6231316	4	True				
ANR	6231324	Statement	container_of	69:19:1261:1272	6231316	5	True				
ANR	6231325	Statement	(	69:32:1274:1274	6231316	6	True				
ANR	6231326	Statement	rb	69:33:1275:1276	6231316	7	True				
ANR	6231327	Statement	","	69:35:1277:1277	6231316	8	True				
ANR	6231328	Statement	const	69:37:1279:1283	6231316	9	True				
ANR	6231329	Statement	RSpace	69:43:1285:1290	6231316	10	True				
ANR	6231330	Statement	","	69:49:1291:1291	6231316	11	True				
ANR	6231331	Statement	rb	69:51:1293:1294	6231316	12	True				
ANR	6231332	Statement	)	69:53:1295:1295	6231316	13	True				
ANR	6231333	ExpressionStatement		69:54:1296:1296	6231316	14	True				
ANR	6231334	ReturnStatement	"return strcmp ( incoming , s -> name ) ;"	70:1:1299:1332	6231316	15	True				
ANR	6231335	CallExpression	"strcmp ( incoming , s -> name )"		6231316	0					
ANR	6231336	Callee	strcmp		6231316	0					
ANR	6231337	Identifier	strcmp		6231316	0					
ANR	6231338	ArgumentList	incoming		6231316	1					
ANR	6231339	Argument	incoming		6231316	0					
ANR	6231340	Identifier	incoming		6231316	0					
ANR	6231341	Argument	s -> name		6231316	1					
ANR	6231342	PtrMemberAccess	s -> name		6231316	0					
ANR	6231343	Identifier	s		6231316	0					
ANR	6231344	Identifier	name		6231316	1					
ANR	6231345	ReturnType	static int		6231316	1					
ANR	6231346	Identifier	name_space_cmp		6231316	2					
ANR	6231347	ParameterList	"const void * incoming , const RBNode * rb"		6231316	3					
ANR	6231348	Parameter	const void * incoming	68:26:1200:1219	6231316	0	True				
ANR	6231349	ParameterType	const void *		6231316	0					
ANR	6231350	Identifier	incoming		6231316	1					
ANR	6231351	Parameter	const RBNode * rb	68:48:1222:1237	6231316	1	True				
ANR	6231352	ParameterType	const RBNode *		6231316	0					
ANR	6231353	Identifier	rb		6231316	1					
ANR	6231354	CFGEntryNode	ENTRY		6231316		True				
ANR	6231355	CFGExitNode	EXIT		6231316		True				
ANR	6231356	Symbol	rb		6231316						
ANR	6231357	Symbol	strcmp		6231316						
ANR	6231358	Symbol	incoming		6231316						
ANR	6231359	Symbol	s -> name		6231316						
ANR	6231360	Symbol	s		6231316						
ANR	6231361	Symbol	* s		6231316						
ANR	6231362	Function	r_spaces_get	73:0:1337:1547							
ANR	6231363	FunctionDef	"r_spaces_get (RSpaces * sp , const char * name)"		6231362	0					
ANR	6231364	CompoundStatement		73:58:1395:1547	6231362	0					
ANR	6231365	IfStatement	if ( ! name )		6231362	0					
ANR	6231366	Condition	! name	74:5:1402:1406	6231362	0	True				
ANR	6231367	UnaryOperationExpression	! name		6231362	0					
ANR	6231368	UnaryOperator	!		6231362	0					
ANR	6231369	Identifier	name		6231362	1					
ANR	6231370	CompoundStatement		2:12:13:13	6231362	1					
ANR	6231371	ReturnStatement	return NULL ;	75:2:1413:1424	6231362	0	True				
ANR	6231372	Identifier	NULL		6231362	0					
ANR	6231373	IdentifierDeclStatement	"RBNode * n = r_rbtree_find ( sp -> spaces , ( void * ) name , name_space_cmp ) ;"	77:1:1430:1498	6231362	1	True				
ANR	6231374	IdentifierDecl	"* n = r_rbtree_find ( sp -> spaces , ( void * ) name , name_space_cmp )"		6231362	0					
ANR	6231375	IdentifierDeclType	RBNode *		6231362	0					
ANR	6231376	Identifier	n		6231362	1					
ANR	6231377	AssignmentExpression	"* n = r_rbtree_find ( sp -> spaces , ( void * ) name , name_space_cmp )"		6231362	2		=			
ANR	6231378	Identifier	n		6231362	0					
ANR	6231379	CallExpression	"r_rbtree_find ( sp -> spaces , ( void * ) name , name_space_cmp )"		6231362	1					
ANR	6231380	Callee	r_rbtree_find		6231362	0					
ANR	6231381	Identifier	r_rbtree_find		6231362	0					
ANR	6231382	ArgumentList	sp -> spaces		6231362	1					
ANR	6231383	Argument	sp -> spaces		6231362	0					
ANR	6231384	PtrMemberAccess	sp -> spaces		6231362	0					
ANR	6231385	Identifier	sp		6231362	0					
ANR	6231386	Identifier	spaces		6231362	1					
ANR	6231387	Argument	( void * ) name		6231362	1					
ANR	6231388	CastExpression	( void * ) name		6231362	0					
ANR	6231389	CastTarget	void *		6231362	0					
ANR	6231390	Identifier	name		6231362	1					
ANR	6231391	Argument	name_space_cmp		6231362	2					
ANR	6231392	Identifier	name_space_cmp		6231362	0					
ANR	6231393	ReturnStatement	"return n ? container_of ( n , RSpace , rb ) : NULL ;"	78:1:1501:1545	6231362	2	True				
ANR	6231394	ConditionalExpression	"n ? container_of ( n , RSpace , rb ) : NULL"		6231362	0					
ANR	6231395	Condition	n		6231362	0					
ANR	6231396	Identifier	n		6231362	0					
ANR	6231397	CallExpression	"container_of ( n , RSpace , rb )"		6231362	1					
ANR	6231398	Callee	container_of		6231362	0					
ANR	6231399	Identifier	container_of		6231362	0					
ANR	6231400	ArgumentList	n		6231362	1					
ANR	6231401	Argument	n		6231362	0					
ANR	6231402	Identifier	n		6231362	0					
ANR	6231403	Argument	RSpace		6231362	1					
ANR	6231404	Identifier	RSpace		6231362	0					
ANR	6231405	Argument	rb		6231362	2					
ANR	6231406	Identifier	rb		6231362	0					
ANR	6231407	Identifier	NULL		6231362	2					
ANR	6231408	ReturnType	R_API RSpace *		6231362	1					
ANR	6231409	Identifier	r_spaces_get		6231362	2					
ANR	6231410	ParameterList	"RSpaces * sp , const char * name"		6231362	3					
ANR	6231411	Parameter	RSpaces * sp	73:27:1364:1374	6231362	0	True				
ANR	6231412	ParameterType	RSpaces *		6231362	0					
ANR	6231413	Identifier	sp		6231362	1					
ANR	6231414	Parameter	const char * name	73:40:1377:1392	6231362	1	True				
ANR	6231415	ParameterType	const char *		6231362	0					
ANR	6231416	Identifier	name		6231362	1					
ANR	6231417	CFGEntryNode	ENTRY		6231362		True				
ANR	6231418	CFGExitNode	EXIT		6231362		True				
ANR	6231419	Symbol	* sp		6231362						
ANR	6231420	Symbol	rb		6231362						
ANR	6231421	Symbol	container_of		6231362						
ANR	6231422	Symbol	NULL		6231362						
ANR	6231423	Symbol	name_space_cmp		6231362						
ANR	6231424	Symbol	r_rbtree_find		6231362						
ANR	6231425	Symbol	RSpace		6231362						
ANR	6231426	Symbol	name		6231362						
ANR	6231427	Symbol	sp		6231362						
ANR	6231428	Symbol	n		6231362						
ANR	6231429	Symbol	sp -> spaces		6231362						
ANR	6231430	Function	space_cmp	81:0:1550:1749							
ANR	6231431	FunctionDef	"space_cmp (const void * incoming , const RBNode * rb)"		6231430	0					
ANR	6231432	CompoundStatement		81:61:1611:1749	6231430	0					
ANR	6231433	IdentifierDeclStatement	const RSpace * a = ( const RSpace * ) incoming ;	82:1:1614:1656	6231430	0	True				
ANR	6231434	IdentifierDecl	* a = ( const RSpace * ) incoming		6231430	0					
ANR	6231435	IdentifierDeclType	const RSpace *		6231430	0					
ANR	6231436	Identifier	a		6231430	1					
ANR	6231437	AssignmentExpression	* a = ( const RSpace * ) incoming		6231430	2		=			
ANR	6231438	Identifier	a		6231430	0					
ANR	6231439	CastExpression	( const RSpace * ) incoming		6231430	1					
ANR	6231440	CastTarget	const RSpace *		6231430	0					
ANR	6231441	Identifier	incoming		6231430	1					
ANR	6231442	Statement	const	83:1:1659:1663	6231430	1	True				
ANR	6231443	Statement	RSpace	83:7:1665:1670	6231430	2	True				
ANR	6231444	Statement	*	83:14:1672:1672	6231430	3	True				
ANR	6231445	Statement	b	83:15:1673:1673	6231430	4	True				
ANR	6231446	Statement	=	83:17:1675:1675	6231430	5	True				
ANR	6231447	Statement	container_of	83:19:1677:1688	6231430	6	True				
ANR	6231448	Statement	(	83:32:1690:1690	6231430	7	True				
ANR	6231449	Statement	rb	83:33:1691:1692	6231430	8	True				
ANR	6231450	Statement	","	83:35:1693:1693	6231430	9	True				
ANR	6231451	Statement	const	83:37:1695:1699	6231430	10	True				
ANR	6231452	Statement	RSpace	83:43:1701:1706	6231430	11	True				
ANR	6231453	Statement	","	83:49:1707:1707	6231430	12	True				
ANR	6231454	Statement	rb	83:51:1709:1710	6231430	13	True				
ANR	6231455	Statement	)	83:53:1711:1711	6231430	14	True				
ANR	6231456	ExpressionStatement		83:54:1712:1712	6231430	15	True				
ANR	6231457	ReturnStatement	"return strcmp ( a -> name , b -> name ) ;"	84:1:1715:1747	6231430	16	True				
ANR	6231458	CallExpression	"strcmp ( a -> name , b -> name )"		6231430	0					
ANR	6231459	Callee	strcmp		6231430	0					
ANR	6231460	Identifier	strcmp		6231430	0					
ANR	6231461	ArgumentList	a -> name		6231430	1					
ANR	6231462	Argument	a -> name		6231430	0					
ANR	6231463	PtrMemberAccess	a -> name		6231430	0					
ANR	6231464	Identifier	a		6231430	0					
ANR	6231465	Identifier	name		6231430	1					
ANR	6231466	Argument	b -> name		6231430	1					
ANR	6231467	PtrMemberAccess	b -> name		6231430	0					
ANR	6231468	Identifier	b		6231430	0					
ANR	6231469	Identifier	name		6231430	1					
ANR	6231470	ReturnType	static int		6231430	1					
ANR	6231471	Identifier	space_cmp		6231430	2					
ANR	6231472	ParameterList	"const void * incoming , const RBNode * rb"		6231430	3					
ANR	6231473	Parameter	const void * incoming	81:21:1571:1590	6231430	0	True				
ANR	6231474	ParameterType	const void *		6231430	0					
ANR	6231475	Identifier	incoming		6231430	1					
ANR	6231476	Parameter	const RBNode * rb	81:43:1593:1608	6231430	1	True				
ANR	6231477	ParameterType	const RBNode *		6231430	0					
ANR	6231478	Identifier	rb		6231430	1					
ANR	6231479	CFGEntryNode	ENTRY		6231430		True				
ANR	6231480	CFGExitNode	EXIT		6231430		True				
ANR	6231481	Symbol	rb		6231430						
ANR	6231482	Symbol	strcmp		6231430						
ANR	6231483	Symbol	incoming		6231430						
ANR	6231484	Symbol	a		6231430						
ANR	6231485	Symbol	b		6231430						
ANR	6231486	Symbol	a -> name		6231430						
ANR	6231487	Symbol	* a		6231430						
ANR	6231488	Symbol	* b		6231430						
ANR	6231489	Symbol	b -> name		6231430						
ANR	6231490	Function	r_spaces_add	87:0:1752:2160							
ANR	6231491	FunctionDef	"r_spaces_add (RSpaces * sp , const char * name)"		6231490	0					
ANR	6231492	CompoundStatement		87:58:1810:2160	6231490	0					
ANR	6231493	ExpressionStatement	"r_return_val_if_fail ( sp , NULL )"	88:1:1813:1844	6231490	0	True				
ANR	6231494	CallExpression	"r_return_val_if_fail ( sp , NULL )"		6231490	0					
ANR	6231495	Callee	r_return_val_if_fail		6231490	0					
ANR	6231496	Identifier	r_return_val_if_fail		6231490	0					
ANR	6231497	ArgumentList	sp		6231490	1					
ANR	6231498	Argument	sp		6231490	0					
ANR	6231499	Identifier	sp		6231490	0					
ANR	6231500	Argument	NULL		6231490	1					
ANR	6231501	Identifier	NULL		6231490	0					
ANR	6231502	IfStatement	if ( ! name || ! * name || * name == '*' )		6231490	1					
ANR	6231503	Condition	! name || ! * name || * name == '*'	89:5:1851:1881	6231490	0	True				
ANR	6231504	OrExpression	! name || ! * name || * name == '*'		6231490	0		||			
ANR	6231505	UnaryOperationExpression	! name		6231490	0					
ANR	6231506	UnaryOperator	!		6231490	0					
ANR	6231507	Identifier	name		6231490	1					
ANR	6231508	OrExpression	! * name || * name == '*'		6231490	1		||			
ANR	6231509	UnaryOperationExpression	! * name		6231490	0					
ANR	6231510	UnaryOperator	!		6231490	0					
ANR	6231511	UnaryOperationExpression	* name		6231490	1					
ANR	6231512	UnaryOperator	*		6231490	0					
ANR	6231513	Identifier	name		6231490	1					
ANR	6231514	EqualityExpression	* name == '*'		6231490	1		==			
ANR	6231515	UnaryOperationExpression	* name		6231490	0					
ANR	6231516	UnaryOperator	*		6231490	0					
ANR	6231517	Identifier	name		6231490	1					
ANR	6231518	PrimaryExpression	'*'		6231490	1					
ANR	6231519	CompoundStatement		3:38:73:73	6231490	1					
ANR	6231520	ReturnStatement	return NULL ;	90:2:1888:1899	6231490	0	True				
ANR	6231521	Identifier	NULL		6231490	0					
ANR	6231522	IdentifierDeclStatement	"RSpace * s = r_spaces_get ( sp , name ) ;"	93:1:1906:1941	6231490	2	True				
ANR	6231523	IdentifierDecl	"* s = r_spaces_get ( sp , name )"		6231490	0					
ANR	6231524	IdentifierDeclType	RSpace *		6231490	0					
ANR	6231525	Identifier	s		6231490	1					
ANR	6231526	AssignmentExpression	"* s = r_spaces_get ( sp , name )"		6231490	2		=			
ANR	6231527	Identifier	s		6231490	0					
ANR	6231528	CallExpression	"r_spaces_get ( sp , name )"		6231490	1					
ANR	6231529	Callee	r_spaces_get		6231490	0					
ANR	6231530	Identifier	r_spaces_get		6231490	0					
ANR	6231531	ArgumentList	sp		6231490	1					
ANR	6231532	Argument	sp		6231490	0					
ANR	6231533	Identifier	sp		6231490	0					
ANR	6231534	Argument	name		6231490	1					
ANR	6231535	Identifier	name		6231490	0					
ANR	6231536	IfStatement	if ( s )		6231490	3					
ANR	6231537	Condition	s	94:5:1948:1948	6231490	0	True				
ANR	6231538	Identifier	s		6231490	0					
ANR	6231539	CompoundStatement		8:8:140:140	6231490	1					
ANR	6231540	ReturnStatement	return s ;	95:2:1955:1963	6231490	0	True				
ANR	6231541	Identifier	s		6231490	0					
ANR	6231542	ExpressionStatement	s = R_NEW0 ( RSpace )	98:1:1970:1989	6231490	4	True				
ANR	6231543	AssignmentExpression	s = R_NEW0 ( RSpace )		6231490	0		=			
ANR	6231544	Identifier	s		6231490	0					
ANR	6231545	CallExpression	R_NEW0 ( RSpace )		6231490	1					
ANR	6231546	Callee	R_NEW0		6231490	0					
ANR	6231547	Identifier	R_NEW0		6231490	0					
ANR	6231548	ArgumentList	RSpace		6231490	1					
ANR	6231549	Argument	RSpace		6231490	0					
ANR	6231550	Identifier	RSpace		6231490	0					
ANR	6231551	IfStatement	if ( ! s )		6231490	5					
ANR	6231552	Condition	! s	99:5:1996:1997	6231490	0	True				
ANR	6231553	UnaryOperationExpression	! s		6231490	0					
ANR	6231554	UnaryOperator	!		6231490	0					
ANR	6231555	Identifier	s		6231490	1					
ANR	6231556	CompoundStatement		13:9:189:189	6231490	1					
ANR	6231557	ReturnStatement	return NULL ;	100:2:2004:2015	6231490	0	True				
ANR	6231558	Identifier	NULL		6231490	0					
ANR	6231559	ExpressionStatement	s -> name = strdup ( name )	103:1:2022:2045	6231490	6	True				
ANR	6231560	AssignmentExpression	s -> name = strdup ( name )		6231490	0		=			
ANR	6231561	PtrMemberAccess	s -> name		6231490	0					
ANR	6231562	Identifier	s		6231490	0					
ANR	6231563	Identifier	name		6231490	1					
ANR	6231564	CallExpression	strdup ( name )		6231490	1					
ANR	6231565	Callee	strdup		6231490	0					
ANR	6231566	Identifier	strdup		6231490	0					
ANR	6231567	ArgumentList	name		6231490	1					
ANR	6231568	Argument	name		6231490	0					
ANR	6231569	Identifier	name		6231490	0					
ANR	6231570	IfStatement	if ( ! s -> name )		6231490	7					
ANR	6231571	Condition	! s -> name	104:5:2052:2059	6231490	0	True				
ANR	6231572	UnaryOperationExpression	! s -> name		6231490	0					
ANR	6231573	UnaryOperator	!		6231490	0					
ANR	6231574	PtrMemberAccess	s -> name		6231490	1					
ANR	6231575	Identifier	s		6231490	0					
ANR	6231576	Identifier	name		6231490	1					
ANR	6231577	CompoundStatement		18:15:251:251	6231490	1					
ANR	6231578	ExpressionStatement	free ( s )	105:2:2066:2074	6231490	0	True				
ANR	6231579	CallExpression	free ( s )		6231490	0					
ANR	6231580	Callee	free		6231490	0					
ANR	6231581	Identifier	free		6231490	0					
ANR	6231582	ArgumentList	s		6231490	1					
ANR	6231583	Argument	s		6231490	0					
ANR	6231584	Identifier	s		6231490	0					
ANR	6231585	ReturnStatement	return NULL ;	106:2:2078:2089	6231490	1	True				
ANR	6231586	Identifier	NULL		6231490	0					
ANR	6231587	ExpressionStatement	"r_rbtree_insert ( & sp -> spaces , s , & s -> rb , space_cmp )"	109:1:2096:2147	6231490	8	True				
ANR	6231588	CallExpression	"r_rbtree_insert ( & sp -> spaces , s , & s -> rb , space_cmp )"		6231490	0					
ANR	6231589	Callee	r_rbtree_insert		6231490	0					
ANR	6231590	Identifier	r_rbtree_insert		6231490	0					
ANR	6231591	ArgumentList	& sp -> spaces		6231490	1					
ANR	6231592	Argument	& sp -> spaces		6231490	0					
ANR	6231593	UnaryOperationExpression	& sp -> spaces		6231490	0					
ANR	6231594	UnaryOperator	&		6231490	0					
ANR	6231595	PtrMemberAccess	sp -> spaces		6231490	1					
ANR	6231596	Identifier	sp		6231490	0					
ANR	6231597	Identifier	spaces		6231490	1					
ANR	6231598	Argument	s		6231490	1					
ANR	6231599	Identifier	s		6231490	0					
ANR	6231600	Argument	& s -> rb		6231490	2					
ANR	6231601	UnaryOperationExpression	& s -> rb		6231490	0					
ANR	6231602	UnaryOperator	&		6231490	0					
ANR	6231603	PtrMemberAccess	s -> rb		6231490	1					
ANR	6231604	Identifier	s		6231490	0					
ANR	6231605	Identifier	rb		6231490	1					
ANR	6231606	Argument	space_cmp		6231490	3					
ANR	6231607	Identifier	space_cmp		6231490	0					
ANR	6231608	ReturnStatement	return s ;	110:1:2150:2158	6231490	9	True				
ANR	6231609	Identifier	s		6231490	0					
ANR	6231610	ReturnType	R_API RSpace *		6231490	1					
ANR	6231611	Identifier	r_spaces_add		6231490	2					
ANR	6231612	ParameterList	"RSpaces * sp , const char * name"		6231490	3					
ANR	6231613	Parameter	RSpaces * sp	87:27:1779:1789	6231490	0	True				
ANR	6231614	ParameterType	RSpaces *		6231490	0					
ANR	6231615	Identifier	sp		6231490	1					
ANR	6231616	Parameter	const char * name	87:40:1792:1807	6231490	1	True				
ANR	6231617	ParameterType	const char *		6231490	0					
ANR	6231618	Identifier	name		6231490	1					
ANR	6231619	CFGEntryNode	ENTRY		6231490		True				
ANR	6231620	CFGExitNode	EXIT		6231490		True				
ANR	6231621	Symbol	* name		6231490						
ANR	6231622	Symbol	NULL		6231490						
ANR	6231623	Symbol	space_cmp		6231490						
ANR	6231624	Symbol	RSpace		6231490						
ANR	6231625	Symbol	r_spaces_get		6231490						
ANR	6231626	Symbol	& sp -> spaces		6231490						
ANR	6231627	Symbol	R_NEW0		6231490						
ANR	6231628	Symbol	s		6231490						
ANR	6231629	Symbol	s -> name		6231490						
ANR	6231630	Symbol	& s -> rb		6231490						
ANR	6231631	Symbol	name		6231490						
ANR	6231632	Symbol	strdup		6231490						
ANR	6231633	Symbol	sp		6231490						
ANR	6231634	Symbol	* s		6231490						
ANR	6231635	Function	r_spaces_set	113:0:2163:2284							
ANR	6231636	FunctionDef	"r_spaces_set (RSpaces * sp , const char * name)"		6231635	0					
ANR	6231637	CompoundStatement		113:58:2221:2284	6231635	0					
ANR	6231638	ExpressionStatement	"sp -> current = r_spaces_add ( sp , name )"	114:1:2224:2261	6231635	0	True				
ANR	6231639	AssignmentExpression	"sp -> current = r_spaces_add ( sp , name )"		6231635	0		=			
ANR	6231640	PtrMemberAccess	sp -> current		6231635	0					
ANR	6231641	Identifier	sp		6231635	0					
ANR	6231642	Identifier	current		6231635	1					
ANR	6231643	CallExpression	"r_spaces_add ( sp , name )"		6231635	1					
ANR	6231644	Callee	r_spaces_add		6231635	0					
ANR	6231645	Identifier	r_spaces_add		6231635	0					
ANR	6231646	ArgumentList	sp		6231635	1					
ANR	6231647	Argument	sp		6231635	0					
ANR	6231648	Identifier	sp		6231635	0					
ANR	6231649	Argument	name		6231635	1					
ANR	6231650	Identifier	name		6231635	0					
ANR	6231651	ReturnStatement	return sp -> current ;	115:1:2264:2282	6231635	1	True				
ANR	6231652	PtrMemberAccess	sp -> current		6231635	0					
ANR	6231653	Identifier	sp		6231635	0					
ANR	6231654	Identifier	current		6231635	1					
ANR	6231655	ReturnType	R_API RSpace *		6231635	1					
ANR	6231656	Identifier	r_spaces_set		6231635	2					
ANR	6231657	ParameterList	"RSpaces * sp , const char * name"		6231635	3					
ANR	6231658	Parameter	RSpaces * sp	113:27:2190:2200	6231635	0	True				
ANR	6231659	ParameterType	RSpaces *		6231635	0					
ANR	6231660	Identifier	sp		6231635	1					
ANR	6231661	Parameter	const char * name	113:40:2203:2218	6231635	1	True				
ANR	6231662	ParameterType	const char *		6231635	0					
ANR	6231663	Identifier	name		6231635	1					
ANR	6231664	CFGEntryNode	ENTRY		6231635		True				
ANR	6231665	CFGExitNode	EXIT		6231635		True				
ANR	6231666	Symbol	* sp		6231635						
ANR	6231667	Symbol	r_spaces_add		6231635						
ANR	6231668	Symbol	name		6231635						
ANR	6231669	Symbol	sp -> current		6231635						
ANR	6231670	Symbol	sp		6231635						
ANR	6231671	Function	spaces_unset_single	118:0:2287:2671							
ANR	6231672	FunctionDef	"spaces_unset_single (RSpaces * sp , const char * name)"		6231671	0					
ANR	6231673	CompoundStatement		118:63:2350:2671	6231671	0					
ANR	6231674	IdentifierDeclStatement	"RSpace * space = r_spaces_get ( sp , name ) ;"	119:1:2353:2392	6231671	0	True				
ANR	6231675	IdentifierDecl	"* space = r_spaces_get ( sp , name )"		6231671	0					
ANR	6231676	IdentifierDeclType	RSpace *		6231671	0					
ANR	6231677	Identifier	space		6231671	1					
ANR	6231678	AssignmentExpression	"* space = r_spaces_get ( sp , name )"		6231671	2		=			
ANR	6231679	Identifier	space		6231671	0					
ANR	6231680	CallExpression	"r_spaces_get ( sp , name )"		6231671	1					
ANR	6231681	Callee	r_spaces_get		6231671	0					
ANR	6231682	Identifier	r_spaces_get		6231671	0					
ANR	6231683	ArgumentList	sp		6231671	1					
ANR	6231684	Argument	sp		6231671	0					
ANR	6231685	Identifier	sp		6231671	0					
ANR	6231686	Argument	name		6231671	1					
ANR	6231687	Identifier	name		6231671	0					
ANR	6231688	IfStatement	if ( ! space )		6231671	1					
ANR	6231689	Condition	! space	120:5:2399:2404	6231671	0	True				
ANR	6231690	UnaryOperationExpression	! space		6231671	0					
ANR	6231691	UnaryOperator	!		6231671	0					
ANR	6231692	Identifier	space		6231671	1					
ANR	6231693	CompoundStatement		3:13:56:56	6231671	1					
ANR	6231694	ReturnStatement	return false ;	121:2:2411:2423	6231671	0	True				
ANR	6231695	Identifier	false		6231671	0					
ANR	6231696	Statement	RSpaceEvent	124:1:2430:2440	6231671	2	True				
ANR	6231697	Statement	ev	124:13:2442:2443	6231671	3	True				
ANR	6231698	Statement	=	124:16:2445:2445	6231671	4	True				
ANR	6231699	CompoundStatement		7:18:96:96	6231671	5					
ANR	6231700	Statement	.	124:20:2449:2449	6231671	0	True				
ANR	6231701	Statement	data	124:21:2450:2453	6231671	1	True				
ANR	6231702	Statement	.	124:25:2454:2454	6231671	2	True				
ANR	6231703	Statement	unset	124:26:2455:2459	6231671	3	True				
ANR	6231704	Statement	.	124:31:2460:2460	6231671	4	True				
ANR	6231705	Statement	space	124:32:2461:2465	6231671	5	True				
ANR	6231706	Statement	=	124:38:2467:2467	6231671	6	True				
ANR	6231707	Statement	space	124:40:2469:2473	6231671	7	True				
ANR	6231708	ExpressionStatement		124:47:2476:2476	6231671	6	True				
ANR	6231709	ExpressionStatement	"r_event_send ( sp -> event , R_SPACE_EVENT_UNSET , & ev )"	125:1:2479:2529	6231671	7	True				
ANR	6231710	CallExpression	"r_event_send ( sp -> event , R_SPACE_EVENT_UNSET , & ev )"		6231671	0					
ANR	6231711	Callee	r_event_send		6231671	0					
ANR	6231712	Identifier	r_event_send		6231671	0					
ANR	6231713	ArgumentList	sp -> event		6231671	1					
ANR	6231714	Argument	sp -> event		6231671	0					
ANR	6231715	PtrMemberAccess	sp -> event		6231671	0					
ANR	6231716	Identifier	sp		6231671	0					
ANR	6231717	Identifier	event		6231671	1					
ANR	6231718	Argument	R_SPACE_EVENT_UNSET		6231671	1					
ANR	6231719	Identifier	R_SPACE_EVENT_UNSET		6231671	0					
ANR	6231720	Argument	& ev		6231671	2					
ANR	6231721	UnaryOperationExpression	& ev		6231671	0					
ANR	6231722	UnaryOperator	&		6231671	0					
ANR	6231723	Identifier	ev		6231671	1					
ANR	6231724	IfStatement	if ( sp -> current == space )		6231671	8					
ANR	6231725	Condition	sp -> current == space	126:5:2536:2555	6231671	0	True				
ANR	6231726	EqualityExpression	sp -> current == space		6231671	0		==			
ANR	6231727	PtrMemberAccess	sp -> current		6231671	0					
ANR	6231728	Identifier	sp		6231671	0					
ANR	6231729	Identifier	current		6231671	1					
ANR	6231730	Identifier	space		6231671	1					
ANR	6231731	CompoundStatement		9:27:207:207	6231671	1					
ANR	6231732	ExpressionStatement	sp -> current = NULL	127:2:2562:2580	6231671	0	True				
ANR	6231733	AssignmentExpression	sp -> current = NULL		6231671	0		=			
ANR	6231734	PtrMemberAccess	sp -> current		6231671	0					
ANR	6231735	Identifier	sp		6231671	0					
ANR	6231736	Identifier	current		6231671	1					
ANR	6231737	Identifier	NULL		6231671	1					
ANR	6231738	ReturnStatement	"return r_rbtree_delete ( & sp -> spaces , ( void * ) name , name_space_cmp , space_node_free ) ;"	129:1:2586:2669	6231671	9	True				
ANR	6231739	CallExpression	"r_rbtree_delete ( & sp -> spaces , ( void * ) name , name_space_cmp , space_node_free )"		6231671	0					
ANR	6231740	Callee	r_rbtree_delete		6231671	0					
ANR	6231741	Identifier	r_rbtree_delete		6231671	0					
ANR	6231742	ArgumentList	& sp -> spaces		6231671	1					
ANR	6231743	Argument	& sp -> spaces		6231671	0					
ANR	6231744	UnaryOperationExpression	& sp -> spaces		6231671	0					
ANR	6231745	UnaryOperator	&		6231671	0					
ANR	6231746	PtrMemberAccess	sp -> spaces		6231671	1					
ANR	6231747	Identifier	sp		6231671	0					
ANR	6231748	Identifier	spaces		6231671	1					
ANR	6231749	Argument	( void * ) name		6231671	1					
ANR	6231750	CastExpression	( void * ) name		6231671	0					
ANR	6231751	CastTarget	void *		6231671	0					
ANR	6231752	Identifier	name		6231671	1					
ANR	6231753	Argument	name_space_cmp		6231671	2					
ANR	6231754	Identifier	name_space_cmp		6231671	0					
ANR	6231755	Argument	space_node_free		6231671	3					
ANR	6231756	Identifier	space_node_free		6231671	0					
ANR	6231757	ReturnType	static bool		6231671	1					
ANR	6231758	Identifier	spaces_unset_single		6231671	2					
ANR	6231759	ParameterList	"RSpaces * sp , const char * name"		6231671	3					
ANR	6231760	Parameter	RSpaces * sp	118:32:2319:2329	6231671	0	True				
ANR	6231761	ParameterType	RSpaces *		6231671	0					
ANR	6231762	Identifier	sp		6231671	1					
ANR	6231763	Parameter	const char * name	118:45:2332:2347	6231671	1	True				
ANR	6231764	ParameterType	const char *		6231671	0					
ANR	6231765	Identifier	name		6231671	1					
ANR	6231766	CFGEntryNode	ENTRY		6231671		True				
ANR	6231767	CFGExitNode	EXIT		6231671		True				
ANR	6231768	Symbol	* sp		6231671						
ANR	6231769	Symbol	NULL		6231671						
ANR	6231770	Symbol	name_space_cmp		6231671						
ANR	6231771	Symbol	false		6231671						
ANR	6231772	Symbol	sp -> event		6231671						
ANR	6231773	Symbol	R_SPACE_EVENT_UNSET		6231671						
ANR	6231774	Symbol	space		6231671						
ANR	6231775	Symbol	r_spaces_get		6231671						
ANR	6231776	Symbol	r_rbtree_delete		6231671						
ANR	6231777	Symbol	& sp -> spaces		6231671						
ANR	6231778	Symbol	name		6231671						
ANR	6231779	Symbol	& ev		6231671						
ANR	6231780	Symbol	sp -> current		6231671						
ANR	6231781	Symbol	space_node_free		6231671						
ANR	6231782	Symbol	sp		6231671						
ANR	6231783	Function	r_spaces_unset	132:0:2674:3138							
ANR	6231784	FunctionDef	"r_spaces_unset (RSpaces * sp , const char * name)"		6231783	0					
ANR	6231785	CompoundStatement		132:57:2731:3138	6231783	0					
ANR	6231786	IfStatement	if ( name )		6231783	0					
ANR	6231787	Condition	name	133:5:2738:2741	6231783	0	True				
ANR	6231788	Identifier	name		6231783	0					
ANR	6231789	CompoundStatement		2:11:12:12	6231783	1					
ANR	6231790	ReturnStatement	"return spaces_unset_single ( sp , name ) ;"	134:2:2748:2785	6231783	0	True				
ANR	6231791	CallExpression	"spaces_unset_single ( sp , name )"		6231783	0					
ANR	6231792	Callee	spaces_unset_single		6231783	0					
ANR	6231793	Identifier	spaces_unset_single		6231783	0					
ANR	6231794	ArgumentList	sp		6231783	1					
ANR	6231795	Argument	sp		6231783	0					
ANR	6231796	Identifier	sp		6231783	0					
ANR	6231797	Argument	name		6231783	1					
ANR	6231798	Identifier	name		6231783	0					
ANR	6231799	IdentifierDeclStatement	RList * names = r_list_newf ( ( RListFree ) free ) ;	137:1:2792:2836	6231783	1	True				
ANR	6231800	IdentifierDecl	* names = r_list_newf ( ( RListFree ) free )		6231783	0					
ANR	6231801	IdentifierDeclType	RList *		6231783	0					
ANR	6231802	Identifier	names		6231783	1					
ANR	6231803	AssignmentExpression	* names = r_list_newf ( ( RListFree ) free )		6231783	2		=			
ANR	6231804	Identifier	names		6231783	0					
ANR	6231805	CallExpression	r_list_newf ( ( RListFree ) free )		6231783	1					
ANR	6231806	Callee	r_list_newf		6231783	0					
ANR	6231807	Identifier	r_list_newf		6231783	0					
ANR	6231808	ArgumentList	( RListFree ) free		6231783	1					
ANR	6231809	Argument	( RListFree ) free		6231783	0					
ANR	6231810	CastExpression	( RListFree ) free		6231783	0					
ANR	6231811	CastTarget	RListFree		6231783	0					
ANR	6231812	Identifier	free		6231783	1					
ANR	6231813	IfStatement	if ( ! names )		6231783	2					
ANR	6231814	Condition	! names	138:5:2843:2848	6231783	0	True				
ANR	6231815	UnaryOperationExpression	! names		6231783	0					
ANR	6231816	UnaryOperator	!		6231783	0					
ANR	6231817	Identifier	names		6231783	1					
ANR	6231818	CompoundStatement		7:13:119:119	6231783	1					
ANR	6231819	ReturnStatement	return false ;	139:2:2855:2867	6231783	0	True				
ANR	6231820	Identifier	false		6231783	0					
ANR	6231821	IdentifierDeclStatement	RBIter it ;	142:1:2874:2883	6231783	3	True				
ANR	6231822	IdentifierDecl	it		6231783	0					
ANR	6231823	IdentifierDeclType	RBIter		6231783	0					
ANR	6231824	Identifier	it		6231783	1					
ANR	6231825	IdentifierDeclStatement	RSpace * s ;	143:1:2886:2895	6231783	4	True				
ANR	6231826	IdentifierDecl	* s		6231783	0					
ANR	6231827	IdentifierDeclType	RSpace *		6231783	0					
ANR	6231828	Identifier	s		6231783	1					
ANR	6231829	Statement	r_spaces_foreach	144:1:2898:2913	6231783	5	True				
ANR	6231830	Statement	(	144:18:2915:2915	6231783	6	True				
ANR	6231831	Statement	sp	144:19:2916:2917	6231783	7	True				
ANR	6231832	Statement	","	144:21:2918:2918	6231783	8	True				
ANR	6231833	Statement	it	144:23:2920:2921	6231783	9	True				
ANR	6231834	Statement	","	144:25:2922:2922	6231783	10	True				
ANR	6231835	Statement	s	144:27:2924:2924	6231783	11	True				
ANR	6231836	Statement	)	144:28:2925:2925	6231783	12	True				
ANR	6231837	CompoundStatement		13:30:195:195	6231783	13					
ANR	6231838	ExpressionStatement	"r_list_append ( names , strdup ( s -> name ) )"	145:2:2931:2970	6231783	0	True				
ANR	6231839	CallExpression	"r_list_append ( names , strdup ( s -> name ) )"		6231783	0					
ANR	6231840	Callee	r_list_append		6231783	0					
ANR	6231841	Identifier	r_list_append		6231783	0					
ANR	6231842	ArgumentList	names		6231783	1					
ANR	6231843	Argument	names		6231783	0					
ANR	6231844	Identifier	names		6231783	0					
ANR	6231845	Argument	strdup ( s -> name )		6231783	1					
ANR	6231846	CallExpression	strdup ( s -> name )		6231783	0					
ANR	6231847	Callee	strdup		6231783	0					
ANR	6231848	Identifier	strdup		6231783	0					
ANR	6231849	ArgumentList	s -> name		6231783	1					
ANR	6231850	Argument	s -> name		6231783	0					
ANR	6231851	PtrMemberAccess	s -> name		6231783	0					
ANR	6231852	Identifier	s		6231783	0					
ANR	6231853	Identifier	name		6231783	1					
ANR	6231854	IdentifierDeclStatement	RListIter * lit ;	148:1:2977:2991	6231783	14	True				
ANR	6231855	IdentifierDecl	* lit		6231783	0					
ANR	6231856	IdentifierDeclType	RListIter *		6231783	0					
ANR	6231857	Identifier	lit		6231783	1					
ANR	6231858	IdentifierDeclStatement	const char * n ;	149:1:2994:3007	6231783	15	True				
ANR	6231859	IdentifierDecl	* n		6231783	0					
ANR	6231860	IdentifierDeclType	const char *		6231783	0					
ANR	6231861	Identifier	n		6231783	1					
ANR	6231862	IdentifierDeclStatement	bool res = false ;	150:1:3010:3026	6231783	16	True				
ANR	6231863	IdentifierDecl	res = false		6231783	0					
ANR	6231864	IdentifierDeclType	bool		6231783	0					
ANR	6231865	Identifier	res		6231783	1					
ANR	6231866	AssignmentExpression	res = false		6231783	2		=			
ANR	6231867	Identifier	false		6231783	0					
ANR	6231868	Identifier	false		6231783	1					
ANR	6231869	Statement	r_list_foreach	151:1:3029:3042	6231783	17	True				
ANR	6231870	Statement	(	151:16:3044:3044	6231783	18	True				
ANR	6231871	Statement	names	151:17:3045:3049	6231783	19	True				
ANR	6231872	Statement	","	151:22:3050:3050	6231783	20	True				
ANR	6231873	Statement	lit	151:24:3052:3054	6231783	21	True				
ANR	6231874	Statement	","	151:27:3055:3055	6231783	22	True				
ANR	6231875	Statement	n	151:29:3057:3057	6231783	23	True				
ANR	6231876	Statement	)	151:30:3058:3058	6231783	24	True				
ANR	6231877	CompoundStatement		20:32:328:328	6231783	25					
ANR	6231878	ExpressionStatement	"res |= spaces_unset_single ( sp , n )"	152:2:3064:3098	6231783	0	True				
ANR	6231879	AssignmentExpression	"res |= spaces_unset_single ( sp , n )"		6231783	0		|=			
ANR	6231880	Identifier	res		6231783	0					
ANR	6231881	CallExpression	"spaces_unset_single ( sp , n )"		6231783	1					
ANR	6231882	Callee	spaces_unset_single		6231783	0					
ANR	6231883	Identifier	spaces_unset_single		6231783	0					
ANR	6231884	ArgumentList	sp		6231783	1					
ANR	6231885	Argument	sp		6231783	0					
ANR	6231886	Identifier	sp		6231783	0					
ANR	6231887	Argument	n		6231783	1					
ANR	6231888	Identifier	n		6231783	0					
ANR	6231889	ExpressionStatement	r_list_free ( names )	154:1:3104:3123	6231783	26	True				
ANR	6231890	CallExpression	r_list_free ( names )		6231783	0					
ANR	6231891	Callee	r_list_free		6231783	0					
ANR	6231892	Identifier	r_list_free		6231783	0					
ANR	6231893	ArgumentList	names		6231783	1					
ANR	6231894	Argument	names		6231783	0					
ANR	6231895	Identifier	names		6231783	0					
ANR	6231896	ReturnStatement	return res ;	155:1:3126:3136	6231783	27	True				
ANR	6231897	Identifier	res		6231783	0					
ANR	6231898	ReturnType	R_API bool		6231783	1					
ANR	6231899	Identifier	r_spaces_unset		6231783	2					
ANR	6231900	ParameterList	"RSpaces * sp , const char * name"		6231783	3					
ANR	6231901	Parameter	RSpaces * sp	132:26:2700:2710	6231783	0	True				
ANR	6231902	ParameterType	RSpaces *		6231783	0					
ANR	6231903	Identifier	sp		6231783	1					
ANR	6231904	Parameter	const char * name	132:39:2713:2728	6231783	1	True				
ANR	6231905	ParameterType	const char *		6231783	0					
ANR	6231906	Identifier	name		6231783	1					
ANR	6231907	CFGEntryNode	ENTRY		6231783		True				
ANR	6231908	CFGExitNode	EXIT		6231783		True				
ANR	6231909	Symbol	res		6231783						
ANR	6231910	Symbol	r_list_newf		6231783						
ANR	6231911	Symbol	spaces_unset_single		6231783						
ANR	6231912	Symbol	false		6231783						
ANR	6231913	Symbol	it		6231783						
ANR	6231914	Symbol	n		6231783						
ANR	6231915	Symbol	names		6231783						
ANR	6231916	Symbol	s		6231783						
ANR	6231917	Symbol	s -> name		6231783						
ANR	6231918	Symbol	lit		6231783						
ANR	6231919	Symbol	name		6231783						
ANR	6231920	Symbol	strdup		6231783						
ANR	6231921	Symbol	free		6231783						
ANR	6231922	Symbol	sp		6231783						
ANR	6231923	Symbol	* s		6231783						
ANR	6231924	Function	r_spaces_count	158:0:3141:3387							
ANR	6231925	FunctionDef	"r_spaces_count (RSpaces * sp , const char * name)"		6231924	0					
ANR	6231926	CompoundStatement		158:56:3197:3387	6231924	0					
ANR	6231927	IdentifierDeclStatement	"RSpace * s = r_spaces_get ( sp , name ) ;"	159:1:3200:3235	6231924	0	True				
ANR	6231928	IdentifierDecl	"* s = r_spaces_get ( sp , name )"		6231924	0					
ANR	6231929	IdentifierDeclType	RSpace *		6231924	0					
ANR	6231930	Identifier	s		6231924	1					
ANR	6231931	AssignmentExpression	"* s = r_spaces_get ( sp , name )"		6231924	2		=			
ANR	6231932	Identifier	s		6231924	0					
ANR	6231933	CallExpression	"r_spaces_get ( sp , name )"		6231924	1					
ANR	6231934	Callee	r_spaces_get		6231924	0					
ANR	6231935	Identifier	r_spaces_get		6231924	0					
ANR	6231936	ArgumentList	sp		6231924	1					
ANR	6231937	Argument	sp		6231924	0					
ANR	6231938	Identifier	sp		6231924	0					
ANR	6231939	Argument	name		6231924	1					
ANR	6231940	Identifier	name		6231924	0					
ANR	6231941	IfStatement	if ( ! s )		6231924	1					
ANR	6231942	Condition	! s	160:5:3242:3243	6231924	0	True				
ANR	6231943	UnaryOperationExpression	! s		6231924	0					
ANR	6231944	UnaryOperator	!		6231924	0					
ANR	6231945	Identifier	s		6231924	1					
ANR	6231946	CompoundStatement		3:9:48:48	6231924	1					
ANR	6231947	ReturnStatement	return 0 ;	161:2:3250:3258	6231924	0	True				
ANR	6231948	PrimaryExpression	0		6231924	0					
ANR	6231949	Statement	RSpaceEvent	163:1:3264:3274	6231924	2	True				
ANR	6231950	Statement	ev	163:13:3276:3277	6231924	3	True				
ANR	6231951	Statement	=	163:16:3279:3279	6231924	4	True				
ANR	6231952	CompoundStatement		6:18:83:83	6231924	5					
ANR	6231953	Statement	.	163:20:3283:3283	6231924	0	True				
ANR	6231954	Statement	data	163:21:3284:3287	6231924	1	True				
ANR	6231955	Statement	.	163:25:3288:3288	6231924	2	True				
ANR	6231956	Statement	count	163:26:3289:3293	6231924	3	True				
ANR	6231957	Statement	.	163:31:3294:3294	6231924	4	True				
ANR	6231958	Statement	space	163:32:3295:3299	6231924	5	True				
ANR	6231959	Statement	=	163:38:3301:3301	6231924	6	True				
ANR	6231960	Statement	s	163:40:3303:3303	6231924	7	True				
ANR	6231961	Statement	","	163:41:3304:3304	6231924	8	True				
ANR	6231962	Statement	.	163:43:3306:3306	6231924	9	True				
ANR	6231963	Statement	res	163:44:3307:3309	6231924	10	True				
ANR	6231964	Statement	=	163:48:3311:3311	6231924	11	True				
ANR	6231965	Statement	0	163:50:3313:3313	6231924	12	True				
ANR	6231966	ExpressionStatement		163:53:3316:3316	6231924	6	True				
ANR	6231967	ExpressionStatement	"r_event_send ( sp -> event , R_SPACE_EVENT_COUNT , & ev )"	164:1:3319:3369	6231924	7	True				
ANR	6231968	CallExpression	"r_event_send ( sp -> event , R_SPACE_EVENT_COUNT , & ev )"		6231924	0					
ANR	6231969	Callee	r_event_send		6231924	0					
ANR	6231970	Identifier	r_event_send		6231924	0					
ANR	6231971	ArgumentList	sp -> event		6231924	1					
ANR	6231972	Argument	sp -> event		6231924	0					
ANR	6231973	PtrMemberAccess	sp -> event		6231924	0					
ANR	6231974	Identifier	sp		6231924	0					
ANR	6231975	Identifier	event		6231924	1					
ANR	6231976	Argument	R_SPACE_EVENT_COUNT		6231924	1					
ANR	6231977	Identifier	R_SPACE_EVENT_COUNT		6231924	0					
ANR	6231978	Argument	& ev		6231924	2					
ANR	6231979	UnaryOperationExpression	& ev		6231924	0					
ANR	6231980	UnaryOperator	&		6231924	0					
ANR	6231981	Identifier	ev		6231924	1					
ANR	6231982	ReturnStatement	return ev . res ;	165:1:3372:3385	6231924	8	True				
ANR	6231983	MemberAccess	ev . res		6231924	0					
ANR	6231984	Identifier	ev		6231924	0					
ANR	6231985	Identifier	res		6231924	1					
ANR	6231986	ReturnType	R_API int		6231924	1					
ANR	6231987	Identifier	r_spaces_count		6231924	2					
ANR	6231988	ParameterList	"RSpaces * sp , const char * name"		6231924	3					
ANR	6231989	Parameter	RSpaces * sp	158:25:3166:3176	6231924	0	True				
ANR	6231990	ParameterType	RSpaces *		6231924	0					
ANR	6231991	Identifier	sp		6231924	1					
ANR	6231992	Parameter	const char * name	158:38:3179:3194	6231924	1	True				
ANR	6231993	ParameterType	const char *		6231924	0					
ANR	6231994	Identifier	name		6231924	1					
ANR	6231995	CFGEntryNode	ENTRY		6231924		True				
ANR	6231996	CFGExitNode	EXIT		6231924		True				
ANR	6231997	Symbol	* sp		6231924						
ANR	6231998	Symbol	ev		6231924						
ANR	6231999	Symbol	s		6231924						
ANR	6232000	Symbol	ev . res		6231924						
ANR	6232001	Symbol	name		6231924						
ANR	6232002	Symbol	sp -> event		6231924						
ANR	6232003	Symbol	& ev		6231924						
ANR	6232004	Symbol	R_SPACE_EVENT_COUNT		6231924						
ANR	6232005	Symbol	sp		6231924						
ANR	6232006	Symbol	r_spaces_get		6231924						
ANR	6232007	Function	r_spaces_push	168:0:3390:3592							
ANR	6232008	FunctionDef	"r_spaces_push (RSpaces * sp , const char * name)"		6232007	0					
ANR	6232009	CompoundStatement		168:56:3446:3592	6232007	0					
ANR	6232010	ExpressionStatement	"r_return_val_if_fail ( sp , false )"	169:1:3449:3481	6232007	0	True				
ANR	6232011	CallExpression	"r_return_val_if_fail ( sp , false )"		6232007	0					
ANR	6232012	Callee	r_return_val_if_fail		6232007	0					
ANR	6232013	Identifier	r_return_val_if_fail		6232007	0					
ANR	6232014	ArgumentList	sp		6232007	1					
ANR	6232015	Argument	sp		6232007	0					
ANR	6232016	Identifier	sp		6232007	0					
ANR	6232017	Argument	false		6232007	1					
ANR	6232018	Identifier	false		6232007	0					
ANR	6232019	ExpressionStatement	"r_list_push ( sp -> spacestack , sp -> current ? sp -> current -> name : ""*"" )"	171:1:3485:3550	6232007	1	True				
ANR	6232020	CallExpression	"r_list_push ( sp -> spacestack , sp -> current ? sp -> current -> name : ""*"" )"		6232007	0					
ANR	6232021	Callee	r_list_push		6232007	0					
ANR	6232022	Identifier	r_list_push		6232007	0					
ANR	6232023	ArgumentList	sp -> spacestack		6232007	1					
ANR	6232024	Argument	sp -> spacestack		6232007	0					
ANR	6232025	PtrMemberAccess	sp -> spacestack		6232007	0					
ANR	6232026	Identifier	sp		6232007	0					
ANR	6232027	Identifier	spacestack		6232007	1					
ANR	6232028	Argument	"sp -> current ? sp -> current -> name : ""*"""		6232007	1					
ANR	6232029	ConditionalExpression	"sp -> current ? sp -> current -> name : ""*"""		6232007	0					
ANR	6232030	Condition	sp -> current		6232007	0					
ANR	6232031	PtrMemberAccess	sp -> current		6232007	0					
ANR	6232032	Identifier	sp		6232007	0					
ANR	6232033	Identifier	current		6232007	1					
ANR	6232034	PtrMemberAccess	sp -> current -> name		6232007	1					
ANR	6232035	PtrMemberAccess	sp -> current		6232007	0					
ANR	6232036	Identifier	sp		6232007	0					
ANR	6232037	Identifier	current		6232007	1					
ANR	6232038	Identifier	name		6232007	1					
ANR	6232039	PrimaryExpression	"""*"""		6232007	2					
ANR	6232040	ExpressionStatement	"r_spaces_set ( sp , name )"	172:1:3553:3576	6232007	2	True				
ANR	6232041	CallExpression	"r_spaces_set ( sp , name )"		6232007	0					
ANR	6232042	Callee	r_spaces_set		6232007	0					
ANR	6232043	Identifier	r_spaces_set		6232007	0					
ANR	6232044	ArgumentList	sp		6232007	1					
ANR	6232045	Argument	sp		6232007	0					
ANR	6232046	Identifier	sp		6232007	0					
ANR	6232047	Argument	name		6232007	1					
ANR	6232048	Identifier	name		6232007	0					
ANR	6232049	ReturnStatement	return true ;	173:1:3579:3590	6232007	3	True				
ANR	6232050	Identifier	true		6232007	0					
ANR	6232051	ReturnType	R_API bool		6232007	1					
ANR	6232052	Identifier	r_spaces_push		6232007	2					
ANR	6232053	ParameterList	"RSpaces * sp , const char * name"		6232007	3					
ANR	6232054	Parameter	RSpaces * sp	168:25:3415:3425	6232007	0	True				
ANR	6232055	ParameterType	RSpaces *		6232007	0					
ANR	6232056	Identifier	sp		6232007	1					
ANR	6232057	Parameter	const char * name	168:38:3428:3443	6232007	1	True				
ANR	6232058	ParameterType	const char *		6232007	0					
ANR	6232059	Identifier	name		6232007	1					
ANR	6232060	CFGEntryNode	ENTRY		6232007		True				
ANR	6232061	CFGExitNode	EXIT		6232007		True				
ANR	6232062	Symbol	* sp		6232007						
ANR	6232063	Symbol	* sp -> current		6232007						
ANR	6232064	Symbol	name		6232007						
ANR	6232065	Symbol	false		6232007						
ANR	6232066	Symbol	true		6232007						
ANR	6232067	Symbol	sp -> current		6232007						
ANR	6232068	Symbol	* * sp		6232007						
ANR	6232069	Symbol	sp -> current -> name		6232007						
ANR	6232070	Symbol	sp		6232007						
ANR	6232071	Symbol	sp -> spacestack		6232007						
ANR	6232072	Function	r_spaces_pop	176:0:3595:3801							
ANR	6232073	FunctionDef	r_spaces_pop (RSpaces * sp)		6232072	0					
ANR	6232074	CompoundStatement		176:37:3632:3801	6232072	0					
ANR	6232075	IdentifierDeclStatement	char * name = r_list_pop ( sp -> spacestack ) ;	177:1:3635:3675	6232072	0	True				
ANR	6232076	IdentifierDecl	* name = r_list_pop ( sp -> spacestack )		6232072	0					
ANR	6232077	IdentifierDeclType	char *		6232072	0					
ANR	6232078	Identifier	name		6232072	1					
ANR	6232079	AssignmentExpression	* name = r_list_pop ( sp -> spacestack )		6232072	2		=			
ANR	6232080	Identifier	name		6232072	0					
ANR	6232081	CallExpression	r_list_pop ( sp -> spacestack )		6232072	1					
ANR	6232082	Callee	r_list_pop		6232072	0					
ANR	6232083	Identifier	r_list_pop		6232072	0					
ANR	6232084	ArgumentList	sp -> spacestack		6232072	1					
ANR	6232085	Argument	sp -> spacestack		6232072	0					
ANR	6232086	PtrMemberAccess	sp -> spacestack		6232072	0					
ANR	6232087	Identifier	sp		6232072	0					
ANR	6232088	Identifier	spacestack		6232072	1					
ANR	6232089	IfStatement	if ( ! name )		6232072	1					
ANR	6232090	Condition	! name	178:5:3682:3686	6232072	0	True				
ANR	6232091	UnaryOperationExpression	! name		6232072	0					
ANR	6232092	UnaryOperator	!		6232072	0					
ANR	6232093	Identifier	name		6232072	1					
ANR	6232094	CompoundStatement		3:12:56:56	6232072	1					
ANR	6232095	ReturnStatement	return false ;	179:2:3693:3705	6232072	0	True				
ANR	6232096	Identifier	false		6232072	0					
ANR	6232097	IdentifierDeclStatement	"RSpace * s = r_spaces_get ( sp , name ) ;"	182:1:3712:3747	6232072	2	True				
ANR	6232098	IdentifierDecl	"* s = r_spaces_get ( sp , name )"		6232072	0					
ANR	6232099	IdentifierDeclType	RSpace *		6232072	0					
ANR	6232100	Identifier	s		6232072	1					
ANR	6232101	AssignmentExpression	"* s = r_spaces_get ( sp , name )"		6232072	2		=			
ANR	6232102	Identifier	s		6232072	0					
ANR	6232103	CallExpression	"r_spaces_get ( sp , name )"		6232072	1					
ANR	6232104	Callee	r_spaces_get		6232072	0					
ANR	6232105	Identifier	r_spaces_get		6232072	0					
ANR	6232106	ArgumentList	sp		6232072	1					
ANR	6232107	Argument	sp		6232072	0					
ANR	6232108	Identifier	sp		6232072	0					
ANR	6232109	Argument	name		6232072	1					
ANR	6232110	Identifier	name		6232072	0					
ANR	6232111	ExpressionStatement	"r_spaces_set ( sp , s ? s -> name : NULL )"	183:1:3750:3785	6232072	3	True				
ANR	6232112	CallExpression	"r_spaces_set ( sp , s ? s -> name : NULL )"		6232072	0					
ANR	6232113	Callee	r_spaces_set		6232072	0					
ANR	6232114	Identifier	r_spaces_set		6232072	0					
ANR	6232115	ArgumentList	sp		6232072	1					
ANR	6232116	Argument	sp		6232072	0					
ANR	6232117	Identifier	sp		6232072	0					
ANR	6232118	Argument	s ? s -> name : NULL		6232072	1					
ANR	6232119	ConditionalExpression	s ? s -> name : NULL		6232072	0					
ANR	6232120	Condition	s		6232072	0					
ANR	6232121	Identifier	s		6232072	0					
ANR	6232122	PtrMemberAccess	s -> name		6232072	1					
ANR	6232123	Identifier	s		6232072	0					
ANR	6232124	Identifier	name		6232072	1					
ANR	6232125	Identifier	NULL		6232072	2					
ANR	6232126	ReturnStatement	return true ;	184:1:3788:3799	6232072	4	True				
ANR	6232127	Identifier	true		6232072	0					
ANR	6232128	ReturnType	R_API bool		6232072	1					
ANR	6232129	Identifier	r_spaces_pop		6232072	2					
ANR	6232130	ParameterList	RSpaces * sp		6232072	3					
ANR	6232131	Parameter	RSpaces * sp	176:24:3619:3629	6232072	0	True				
ANR	6232132	ParameterType	RSpaces *		6232072	0					
ANR	6232133	Identifier	sp		6232072	1					
ANR	6232134	CFGEntryNode	ENTRY		6232072		True				
ANR	6232135	CFGExitNode	EXIT		6232072		True				
ANR	6232136	Symbol	* sp		6232072						
ANR	6232137	Symbol	s		6232072						
ANR	6232138	Symbol	s -> name		6232072						
ANR	6232139	Symbol	NULL		6232072						
ANR	6232140	Symbol	name		6232072						
ANR	6232141	Symbol	false		6232072						
ANR	6232142	Symbol	true		6232072						
ANR	6232143	Symbol	sp		6232072						
ANR	6232144	Symbol	* s		6232072						
ANR	6232145	Symbol	r_list_pop		6232072						
ANR	6232146	Symbol	sp -> spacestack		6232072						
ANR	6232147	Symbol	r_spaces_get		6232072						
ANR	6232148	Function	r_spaces_rename	187:0:3804:4483							
ANR	6232149	FunctionDef	"r_spaces_rename (RSpaces * sp , const char * oname , const char * nname)"		6232148	0					
ANR	6232150	CompoundStatement		187:78:3882:4483	6232148	0					
ANR	6232151	IfStatement	if ( ! oname && ! sp -> current )		6232148	0					
ANR	6232152	Condition	! oname && ! sp -> current	188:5:3889:3910	6232148	0	True				
ANR	6232153	AndExpression	! oname && ! sp -> current		6232148	0		&&			
ANR	6232154	UnaryOperationExpression	! oname		6232148	0					
ANR	6232155	UnaryOperator	!		6232148	0					
ANR	6232156	Identifier	oname		6232148	1					
ANR	6232157	UnaryOperationExpression	! sp -> current		6232148	1					
ANR	6232158	UnaryOperator	!		6232148	0					
ANR	6232159	PtrMemberAccess	sp -> current		6232148	1					
ANR	6232160	Identifier	sp		6232148	0					
ANR	6232161	Identifier	current		6232148	1					
ANR	6232162	CompoundStatement		2:29:30:30	6232148	1					
ANR	6232163	ReturnStatement	return false ;	189:2:3917:3929	6232148	0	True				
ANR	6232164	Identifier	false		6232148	0					
ANR	6232165	IdentifierDeclStatement	RSpace * s ;	192:1:3936:3945	6232148	1	True				
ANR	6232166	IdentifierDecl	* s		6232148	0					
ANR	6232167	IdentifierDeclType	RSpace *		6232148	0					
ANR	6232168	Identifier	s		6232148	1					
ANR	6232169	IfStatement	if ( oname )		6232148	2					
ANR	6232170	Condition	oname	193:5:3952:3956	6232148	0	True				
ANR	6232171	Identifier	oname		6232148	0					
ANR	6232172	CompoundStatement		7:12:76:76	6232148	1					
ANR	6232173	ExpressionStatement	"s = r_spaces_get ( sp , oname )"	194:2:3963:3991	6232148	0	True				
ANR	6232174	AssignmentExpression	"s = r_spaces_get ( sp , oname )"		6232148	0		=			
ANR	6232175	Identifier	s		6232148	0					
ANR	6232176	CallExpression	"r_spaces_get ( sp , oname )"		6232148	1					
ANR	6232177	Callee	r_spaces_get		6232148	0					
ANR	6232178	Identifier	r_spaces_get		6232148	0					
ANR	6232179	ArgumentList	sp		6232148	1					
ANR	6232180	Argument	sp		6232148	0					
ANR	6232181	Identifier	sp		6232148	0					
ANR	6232182	Argument	oname		6232148	1					
ANR	6232183	Identifier	oname		6232148	0					
ANR	6232184	IfStatement	if ( ! s )		6232148	1					
ANR	6232185	Condition	! s	195:6:3999:4000	6232148	0	True				
ANR	6232186	UnaryOperationExpression	! s		6232148	0					
ANR	6232187	UnaryOperator	!		6232148	0					
ANR	6232188	Identifier	s		6232148	1					
ANR	6232189	CompoundStatement		9:10:120:120	6232148	1					
ANR	6232190	ReturnStatement	return false ;	196:3:4008:4020	6232148	0	True				
ANR	6232191	Identifier	false		6232148	0					
ANR	6232192	ElseStatement	else		6232148	0					
ANR	6232193	CompoundStatement		12:8:151:151	6232148	0					
ANR	6232194	ExpressionStatement	s = sp -> current	199:2:4038:4053	6232148	0	True				
ANR	6232195	AssignmentExpression	s = sp -> current		6232148	0		=			
ANR	6232196	Identifier	s		6232148	0					
ANR	6232197	PtrMemberAccess	sp -> current		6232148	1					
ANR	6232198	Identifier	sp		6232148	0					
ANR	6232199	Identifier	current		6232148	1					
ANR	6232200	IdentifierDeclStatement	"RSpace * sn = r_spaces_get ( sp , nname ) ;"	202:1:4060:4097	6232148	3	True				
ANR	6232201	IdentifierDecl	"* sn = r_spaces_get ( sp , nname )"		6232148	0					
ANR	6232202	IdentifierDeclType	RSpace *		6232148	0					
ANR	6232203	Identifier	sn		6232148	1					
ANR	6232204	AssignmentExpression	"* sn = r_spaces_get ( sp , nname )"		6232148	2		=			
ANR	6232205	Identifier	sn		6232148	0					
ANR	6232206	CallExpression	"r_spaces_get ( sp , nname )"		6232148	1					
ANR	6232207	Callee	r_spaces_get		6232148	0					
ANR	6232208	Identifier	r_spaces_get		6232148	0					
ANR	6232209	ArgumentList	sp		6232148	1					
ANR	6232210	Argument	sp		6232148	0					
ANR	6232211	Identifier	sp		6232148	0					
ANR	6232212	Argument	nname		6232148	1					
ANR	6232213	Identifier	nname		6232148	0					
ANR	6232214	IfStatement	if ( sn )		6232148	4					
ANR	6232215	Condition	sn	203:5:4104:4105	6232148	0	True				
ANR	6232216	Identifier	sn		6232148	0					
ANR	6232217	CompoundStatement		17:9:225:225	6232148	1					
ANR	6232218	ReturnStatement	return false ;	204:2:4112:4124	6232148	0	True				
ANR	6232219	Identifier	false		6232148	0					
ANR	6232220	Statement	RSpaceEvent	207:1:4131:4141	6232148	5	True				
ANR	6232221	Statement	ev	207:13:4143:4144	6232148	6	True				
ANR	6232222	Statement	=	207:16:4146:4146	6232148	7	True				
ANR	6232223	CompoundStatement		21:18:265:265	6232148	8					
ANR	6232224	Statement	.	208:2:4152:4152	6232148	0	True				
ANR	6232225	Statement	data	208:3:4153:4156	6232148	1	True				
ANR	6232226	Statement	.	208:7:4157:4157	6232148	2	True				
ANR	6232227	Statement	rename	208:8:4158:4163	6232148	3	True				
ANR	6232228	Statement	.	208:14:4164:4164	6232148	4	True				
ANR	6232229	Statement	oldname	208:15:4165:4171	6232148	5	True				
ANR	6232230	Statement	=	208:23:4173:4173	6232148	6	True				
ANR	6232231	Statement	s	208:25:4175:4175	6232148	7	True				
ANR	6232232	Statement	->	208:26:4176:4177	6232148	8	True				
ANR	6232233	Statement	name	208:28:4178:4181	6232148	9	True				
ANR	6232234	Statement	","	208:32:4182:4182	6232148	10	True				
ANR	6232235	Statement	.	209:2:4186:4186	6232148	11	True				
ANR	6232236	Statement	data	209:3:4187:4190	6232148	12	True				
ANR	6232237	Statement	.	209:7:4191:4191	6232148	13	True				
ANR	6232238	Statement	rename	209:8:4192:4197	6232148	14	True				
ANR	6232239	Statement	.	209:14:4198:4198	6232148	15	True				
ANR	6232240	Statement	newname	209:15:4199:4205	6232148	16	True				
ANR	6232241	Statement	=	209:23:4207:4207	6232148	17	True				
ANR	6232242	Statement	nname	209:25:4209:4213	6232148	18	True				
ANR	6232243	Statement	","	209:30:4214:4214	6232148	19	True				
ANR	6232244	Statement	.	210:2:4218:4218	6232148	20	True				
ANR	6232245	Statement	data	210:3:4219:4222	6232148	21	True				
ANR	6232246	Statement	.	210:7:4223:4223	6232148	22	True				
ANR	6232247	Statement	rename	210:8:4224:4229	6232148	23	True				
ANR	6232248	Statement	.	210:14:4230:4230	6232148	24	True				
ANR	6232249	Statement	space	210:15:4231:4235	6232148	25	True				
ANR	6232250	Statement	=	210:21:4237:4237	6232148	26	True				
ANR	6232251	Statement	s	210:23:4239:4239	6232148	27	True				
ANR	6232252	ExpressionStatement		211:2:4243:4243	6232148	9	True				
ANR	6232253	ExpressionStatement	"r_event_send ( sp -> event , R_SPACE_EVENT_RENAME , & ev )"	212:1:4246:4297	6232148	10	True				
ANR	6232254	CallExpression	"r_event_send ( sp -> event , R_SPACE_EVENT_RENAME , & ev )"		6232148	0					
ANR	6232255	Callee	r_event_send		6232148	0					
ANR	6232256	Identifier	r_event_send		6232148	0					
ANR	6232257	ArgumentList	sp -> event		6232148	1					
ANR	6232258	Argument	sp -> event		6232148	0					
ANR	6232259	PtrMemberAccess	sp -> event		6232148	0					
ANR	6232260	Identifier	sp		6232148	0					
ANR	6232261	Identifier	event		6232148	1					
ANR	6232262	Argument	R_SPACE_EVENT_RENAME		6232148	1					
ANR	6232263	Identifier	R_SPACE_EVENT_RENAME		6232148	0					
ANR	6232264	Argument	& ev		6232148	2					
ANR	6232265	UnaryOperationExpression	& ev		6232148	0					
ANR	6232266	UnaryOperator	&		6232148	0					
ANR	6232267	Identifier	ev		6232148	1					
ANR	6232268	ExpressionStatement	"r_rbtree_delete ( & sp -> spaces , ( void * ) s -> name , name_space_cmp , NULL )"	214:1:4301:4369	6232148	11	True				
ANR	6232269	CallExpression	"r_rbtree_delete ( & sp -> spaces , ( void * ) s -> name , name_space_cmp , NULL )"		6232148	0					
ANR	6232270	Callee	r_rbtree_delete		6232148	0					
ANR	6232271	Identifier	r_rbtree_delete		6232148	0					
ANR	6232272	ArgumentList	& sp -> spaces		6232148	1					
ANR	6232273	Argument	& sp -> spaces		6232148	0					
ANR	6232274	UnaryOperationExpression	& sp -> spaces		6232148	0					
ANR	6232275	UnaryOperator	&		6232148	0					
ANR	6232276	PtrMemberAccess	sp -> spaces		6232148	1					
ANR	6232277	Identifier	sp		6232148	0					
ANR	6232278	Identifier	spaces		6232148	1					
ANR	6232279	Argument	( void * ) s -> name		6232148	1					
ANR	6232280	CastExpression	( void * ) s -> name		6232148	0					
ANR	6232281	CastTarget	void *		6232148	0					
ANR	6232282	PtrMemberAccess	s -> name		6232148	1					
ANR	6232283	Identifier	s		6232148	0					
ANR	6232284	Identifier	name		6232148	1					
ANR	6232285	Argument	name_space_cmp		6232148	2					
ANR	6232286	Identifier	name_space_cmp		6232148	0					
ANR	6232287	Argument	NULL		6232148	3					
ANR	6232288	Identifier	NULL		6232148	0					
ANR	6232289	ExpressionStatement	free ( s -> name )	215:1:4372:4386	6232148	12	True				
ANR	6232290	CallExpression	free ( s -> name )		6232148	0					
ANR	6232291	Callee	free		6232148	0					
ANR	6232292	Identifier	free		6232148	0					
ANR	6232293	ArgumentList	s -> name		6232148	1					
ANR	6232294	Argument	s -> name		6232148	0					
ANR	6232295	PtrMemberAccess	s -> name		6232148	0					
ANR	6232296	Identifier	s		6232148	0					
ANR	6232297	Identifier	name		6232148	1					
ANR	6232298	ExpressionStatement	s -> name = strdup ( nname )	216:1:4389:4413	6232148	13	True				
ANR	6232299	AssignmentExpression	s -> name = strdup ( nname )		6232148	0		=			
ANR	6232300	PtrMemberAccess	s -> name		6232148	0					
ANR	6232301	Identifier	s		6232148	0					
ANR	6232302	Identifier	name		6232148	1					
ANR	6232303	CallExpression	strdup ( nname )		6232148	1					
ANR	6232304	Callee	strdup		6232148	0					
ANR	6232305	Identifier	strdup		6232148	0					
ANR	6232306	ArgumentList	nname		6232148	1					
ANR	6232307	Argument	nname		6232148	0					
ANR	6232308	Identifier	nname		6232148	0					
ANR	6232309	ExpressionStatement	"r_rbtree_insert ( & sp -> spaces , s , & s -> rb , space_cmp )"	217:1:4416:4467	6232148	14	True				
ANR	6232310	CallExpression	"r_rbtree_insert ( & sp -> spaces , s , & s -> rb , space_cmp )"		6232148	0					
ANR	6232311	Callee	r_rbtree_insert		6232148	0					
ANR	6232312	Identifier	r_rbtree_insert		6232148	0					
ANR	6232313	ArgumentList	& sp -> spaces		6232148	1					
ANR	6232314	Argument	& sp -> spaces		6232148	0					
ANR	6232315	UnaryOperationExpression	& sp -> spaces		6232148	0					
ANR	6232316	UnaryOperator	&		6232148	0					
ANR	6232317	PtrMemberAccess	sp -> spaces		6232148	1					
ANR	6232318	Identifier	sp		6232148	0					
ANR	6232319	Identifier	spaces		6232148	1					
ANR	6232320	Argument	s		6232148	1					
ANR	6232321	Identifier	s		6232148	0					
ANR	6232322	Argument	& s -> rb		6232148	2					
ANR	6232323	UnaryOperationExpression	& s -> rb		6232148	0					
ANR	6232324	UnaryOperator	&		6232148	0					
ANR	6232325	PtrMemberAccess	s -> rb		6232148	1					
ANR	6232326	Identifier	s		6232148	0					
ANR	6232327	Identifier	rb		6232148	1					
ANR	6232328	Argument	space_cmp		6232148	3					
ANR	6232329	Identifier	space_cmp		6232148	0					
ANR	6232330	ReturnStatement	return true ;	218:1:4470:4481	6232148	15	True				
ANR	6232331	Identifier	true		6232148	0					
ANR	6232332	ReturnType	R_API bool		6232148	1					
ANR	6232333	Identifier	r_spaces_rename		6232148	2					
ANR	6232334	ParameterList	"RSpaces * sp , const char * oname , const char * nname"		6232148	3					
ANR	6232335	Parameter	RSpaces * sp	187:27:3831:3841	6232148	0	True				
ANR	6232336	ParameterType	RSpaces *		6232148	0					
ANR	6232337	Identifier	sp		6232148	1					
ANR	6232338	Parameter	const char * oname	187:40:3844:3860	6232148	1	True				
ANR	6232339	ParameterType	const char *		6232148	0					
ANR	6232340	Identifier	oname		6232148	1					
ANR	6232341	Parameter	const char * nname	187:59:3863:3879	6232148	2	True				
ANR	6232342	ParameterType	const char *		6232148	0					
ANR	6232343	Identifier	nname		6232148	1					
ANR	6232344	CFGEntryNode	ENTRY		6232148		True				
ANR	6232345	CFGExitNode	EXIT		6232148		True				
ANR	6232346	Symbol	* sp		6232148						
ANR	6232347	Symbol	name_space_cmp		6232148						
ANR	6232348	Symbol	NULL		6232148						
ANR	6232349	Symbol	space_cmp		6232148						
ANR	6232350	Symbol	false		6232148						
ANR	6232351	Symbol	sp -> event		6232148						
ANR	6232352	Symbol	r_spaces_get		6232148						
ANR	6232353	Symbol	& sp -> spaces		6232148						
ANR	6232354	Symbol	R_SPACE_EVENT_RENAME		6232148						
ANR	6232355	Symbol	s		6232148						
ANR	6232356	Symbol	s -> name		6232148						
ANR	6232357	Symbol	& s -> rb		6232148						
ANR	6232358	Symbol	oname		6232148						
ANR	6232359	Symbol	nname		6232148						
ANR	6232360	Symbol	true		6232148						
ANR	6232361	Symbol	sp -> current		6232148						
ANR	6232362	Symbol	& ev		6232148						
ANR	6232363	Symbol	sn		6232148						
ANR	6232364	Symbol	strdup		6232148						
ANR	6232365	Symbol	sp		6232148						
ANR	6232366	Symbol	* s		6232148						
