command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4933227	File	data/converged/CVE-2019-16718~_radare2/libr_lang_p_c.c								
ANR	4933228	DeclStmt									
ANR	4933229	Decl							int	int	ac
ANR	4933230	DeclStmt									
ANR	4933231	Decl							const char	const char * *	av
ANR	4933232	Function	lang_c_set_argv	12:0:245:355							
ANR	4933233	FunctionDef	"lang_c_set_argv (RLang * lang , int argc , const char * * argv)"		4933232	0					
ANR	4933234	CompoundStatement		12:70:315:355	4933232	0					
ANR	4933235	ExpressionStatement	ac = argc	13:1:318:327	4933232	0	True				
ANR	4933236	AssignmentExpression	ac = argc		4933232	0		=			
ANR	4933237	Identifier	ac		4933232	0					
ANR	4933238	Identifier	argc		4933232	1					
ANR	4933239	ExpressionStatement	av = argv	14:1:330:339	4933232	1	True				
ANR	4933240	AssignmentExpression	av = argv		4933232	0		=			
ANR	4933241	Identifier	av		4933232	0					
ANR	4933242	Identifier	argv		4933232	1					
ANR	4933243	ReturnStatement	return true ;	15:1:342:353	4933232	2	True				
ANR	4933244	Identifier	true		4933232	0					
ANR	4933245	ReturnType	static bool		4933232	1					
ANR	4933246	Identifier	lang_c_set_argv		4933232	2					
ANR	4933247	ParameterList	"RLang * lang , int argc , const char * * argv"		4933232	3					
ANR	4933248	Parameter	RLang * lang	12:28:273:283	4933232	0	True				
ANR	4933249	ParameterType	RLang *		4933232	0					
ANR	4933250	Identifier	lang		4933232	1					
ANR	4933251	Parameter	int argc	12:41:286:293	4933232	1	True				
ANR	4933252	ParameterType	int		4933232	0					
ANR	4933253	Identifier	argc		4933232	1					
ANR	4933254	Parameter	const char * * argv	12:51:296:312	4933232	2	True				
ANR	4933255	ParameterType	const char * *		4933232	0					
ANR	4933256	Identifier	argv		4933232	1					
ANR	4933257	CFGEntryNode	ENTRY		4933232		True				
ANR	4933258	CFGExitNode	EXIT		4933232		True				
ANR	4933259	Symbol	argc		4933232						
ANR	4933260	Symbol	ac		4933232						
ANR	4933261	Symbol	av		4933232						
ANR	4933262	Symbol	true		4933232						
ANR	4933263	Symbol	lang		4933232						
ANR	4933264	Symbol	argv		4933232						
ANR	4933265	Function	lang_c_file	18:0:358:1758							
ANR	4933266	FunctionDef	"lang_c_file (RLang * lang , const char * file)"		4933265	0					
ANR	4933267	CompoundStatement		18:54:412:1758	4933265	0					
ANR	4933268	IdentifierDeclStatement	"char * a , * cc , * p , name [ 512 ] ;"	19:1:415:442	4933265	0	True				
ANR	4933269	IdentifierDecl	* a		4933265	0					
ANR	4933270	IdentifierDeclType	char *		4933265	0					
ANR	4933271	Identifier	a		4933265	1					
ANR	4933272	IdentifierDecl	* cc		4933265	1					
ANR	4933273	IdentifierDeclType	char *		4933265	0					
ANR	4933274	Identifier	cc		4933265	1					
ANR	4933275	IdentifierDecl	* p		4933265	2					
ANR	4933276	IdentifierDeclType	char *		4933265	0					
ANR	4933277	Identifier	p		4933265	1					
ANR	4933278	IdentifierDecl	name [ 512 ]		4933265	3					
ANR	4933279	IdentifierDeclType	char [ 512 ]		4933265	0					
ANR	4933280	Identifier	name		4933265	1					
ANR	4933281	PrimaryExpression	512		4933265	2					
ANR	4933282	IdentifierDeclStatement	"const char * libpath , * libname ;"	20:1:445:474	4933265	1	True				
ANR	4933283	IdentifierDecl	* libpath		4933265	0					
ANR	4933284	IdentifierDeclType	const char *		4933265	0					
ANR	4933285	Identifier	libpath		4933265	1					
ANR	4933286	IdentifierDecl	* libname		4933265	1					
ANR	4933287	IdentifierDeclType	const char *		4933265	0					
ANR	4933288	Identifier	libname		4933265	1					
ANR	4933289	IdentifierDeclStatement	void * lib ;	21:1:477:486	4933265	2	True				
ANR	4933290	IdentifierDecl	* lib		4933265	0					
ANR	4933291	IdentifierDeclType	void *		4933265	0					
ANR	4933292	Identifier	lib		4933265	1					
ANR	4933293	IfStatement	if ( strlen ( file ) > ( sizeof ( name ) - 10 ) )		4933265	3					
ANR	4933294	Condition	strlen ( file ) > ( sizeof ( name ) - 10 )	23:5:494:529	4933265	0	True				
ANR	4933295	RelationalExpression	strlen ( file ) > ( sizeof ( name ) - 10 )		4933265	0		>			
ANR	4933296	CallExpression	strlen ( file )		4933265	0					
ANR	4933297	Callee	strlen		4933265	0					
ANR	4933298	Identifier	strlen		4933265	0					
ANR	4933299	ArgumentList	file		4933265	1					
ANR	4933300	Argument	file		4933265	0					
ANR	4933301	Identifier	file		4933265	0					
ANR	4933302	AdditiveExpression	sizeof ( name ) - 10		4933265	1		-			
ANR	4933303	SizeofExpression	sizeof ( name )		4933265	0					
ANR	4933304	Sizeof	sizeof		4933265	0					
ANR	4933305	SizeofOperand	name		4933265	1					
ANR	4933306	PrimaryExpression	10		4933265	1					
ANR	4933307	CompoundStatement		6:43:119:119	4933265	1					
ANR	4933308	ReturnStatement	return false ;	24:2:536:548	4933265	0	True				
ANR	4933309	Identifier	false		4933265	0					
ANR	4933310	IfStatement	"if ( ! strstr ( file , "".c"" ) )"		4933265	4					
ANR	4933311	Condition	"! strstr ( file , "".c"" )"	26:5:558:577	4933265	0	True				
ANR	4933312	UnaryOperationExpression	"! strstr ( file , "".c"" )"		4933265	0					
ANR	4933313	UnaryOperator	!		4933265	0					
ANR	4933314	CallExpression	"strstr ( file , "".c"" )"		4933265	1					
ANR	4933315	Callee	strstr		4933265	0					
ANR	4933316	Identifier	strstr		4933265	0					
ANR	4933317	ArgumentList	file		4933265	1					
ANR	4933318	Argument	file		4933265	0					
ANR	4933319	Identifier	file		4933265	0					
ANR	4933320	Argument	""".c"""		4933265	1					
ANR	4933321	PrimaryExpression	""".c"""		4933265	0					
ANR	4933322	CompoundStatement		9:27:167:167	4933265	1					
ANR	4933323	ExpressionStatement	"sprintf ( name , ""%s.c"" , file )"	27:2:584:612	4933265	0	True				
ANR	4933324	CallExpression	"sprintf ( name , ""%s.c"" , file )"		4933265	0					
ANR	4933325	Callee	sprintf		4933265	0					
ANR	4933326	Identifier	sprintf		4933265	0					
ANR	4933327	ArgumentList	name		4933265	1					
ANR	4933328	Argument	name		4933265	0					
ANR	4933329	Identifier	name		4933265	0					
ANR	4933330	Argument	"""%s.c"""		4933265	1					
ANR	4933331	PrimaryExpression	"""%s.c"""		4933265	0					
ANR	4933332	Argument	file		4933265	2					
ANR	4933333	Identifier	file		4933265	0					
ANR	4933334	ElseStatement	else		4933265	0					
ANR	4933335	CompoundStatement		11:8:209:209	4933265	0					
ANR	4933336	ExpressionStatement	"strcpy ( name , file )"	29:2:626:645	4933265	0	True				
ANR	4933337	CallExpression	"strcpy ( name , file )"		4933265	0					
ANR	4933338	Callee	strcpy		4933265	0					
ANR	4933339	Identifier	strcpy		4933265	0					
ANR	4933340	ArgumentList	name		4933265	1					
ANR	4933341	Argument	name		4933265	0					
ANR	4933342	Identifier	name		4933265	0					
ANR	4933343	Argument	file		4933265	1					
ANR	4933344	Identifier	file		4933265	0					
ANR	4933345	IfStatement	if ( ! r_file_exists ( name ) )		4933265	5					
ANR	4933346	Condition	! r_file_exists ( name )	31:5:655:675	4933265	0	True				
ANR	4933347	UnaryOperationExpression	! r_file_exists ( name )		4933265	0					
ANR	4933348	UnaryOperator	!		4933265	0					
ANR	4933349	CallExpression	r_file_exists ( name )		4933265	1					
ANR	4933350	Callee	r_file_exists		4933265	0					
ANR	4933351	Identifier	r_file_exists		4933265	0					
ANR	4933352	ArgumentList	name		4933265	1					
ANR	4933353	Argument	name		4933265	0					
ANR	4933354	Identifier	name		4933265	0					
ANR	4933355	CompoundStatement		14:28:265:265	4933265	1					
ANR	4933356	ExpressionStatement	"eprintf ( ""file not found (%s)\\n"" , name )"	32:2:682:721	4933265	0	True				
ANR	4933357	CallExpression	"eprintf ( ""file not found (%s)\\n"" , name )"		4933265	0					
ANR	4933358	Callee	eprintf		4933265	0					
ANR	4933359	Identifier	eprintf		4933265	0					
ANR	4933360	ArgumentList	"""file not found (%s)\\n"""		4933265	1					
ANR	4933361	Argument	"""file not found (%s)\\n"""		4933265	0					
ANR	4933362	PrimaryExpression	"""file not found (%s)\\n"""		4933265	0					
ANR	4933363	Argument	name		4933265	1					
ANR	4933364	Identifier	name		4933265	0					
ANR	4933365	ReturnStatement	return false ;	33:2:725:737	4933265	1	True				
ANR	4933366	Identifier	false		4933265	0					
ANR	4933367	ExpressionStatement	"a = ( char * ) r_str_lchr ( name , '/' )"	36:1:744:777	4933265	6	True				
ANR	4933368	AssignmentExpression	"a = ( char * ) r_str_lchr ( name , '/' )"		4933265	0		=			
ANR	4933369	Identifier	a		4933265	0					
ANR	4933370	CastExpression	"( char * ) r_str_lchr ( name , '/' )"		4933265	1					
ANR	4933371	CastTarget	char *		4933265	0					
ANR	4933372	CallExpression	"r_str_lchr ( name , '/' )"		4933265	1					
ANR	4933373	Callee	r_str_lchr		4933265	0					
ANR	4933374	Identifier	r_str_lchr		4933265	0					
ANR	4933375	ArgumentList	name		4933265	1					
ANR	4933376	Argument	name		4933265	0					
ANR	4933377	Identifier	name		4933265	0					
ANR	4933378	Argument	'/'		4933265	1					
ANR	4933379	PrimaryExpression	'/'		4933265	0					
ANR	4933380	IfStatement	if ( a )		4933265	7					
ANR	4933381	Condition	a	37:5:784:784	4933265	0	True				
ANR	4933382	Identifier	a		4933265	0					
ANR	4933383	CompoundStatement		20:8:374:374	4933265	1					
ANR	4933384	ExpressionStatement	* a = 0	38:2:791:797	4933265	0	True				
ANR	4933385	AssignmentExpression	* a = 0		4933265	0		=			
ANR	4933386	UnaryOperationExpression	* a		4933265	0					
ANR	4933387	UnaryOperator	*		4933265	0					
ANR	4933388	Identifier	a		4933265	1					
ANR	4933389	PrimaryExpression	0		4933265	1					
ANR	4933390	ExpressionStatement	libpath = name	39:2:801:815	4933265	1	True				
ANR	4933391	AssignmentExpression	libpath = name		4933265	0		=			
ANR	4933392	Identifier	libpath		4933265	0					
ANR	4933393	Identifier	name		4933265	1					
ANR	4933394	ExpressionStatement	libname = a + 1	40:2:819:834	4933265	2	True				
ANR	4933395	AssignmentExpression	libname = a + 1		4933265	0		=			
ANR	4933396	Identifier	libname		4933265	0					
ANR	4933397	AdditiveExpression	a + 1		4933265	1		+			
ANR	4933398	Identifier	a		4933265	0					
ANR	4933399	PrimaryExpression	1		4933265	1					
ANR	4933400	ElseStatement	else		4933265	0					
ANR	4933401	CompoundStatement		24:8:431:431	4933265	0					
ANR	4933402	ExpressionStatement	"libpath = ""."""	42:2:848:861	4933265	0	True				
ANR	4933403	AssignmentExpression	"libpath = ""."""		4933265	0		=			
ANR	4933404	Identifier	libpath		4933265	0					
ANR	4933405	PrimaryExpression	"""."""		4933265	1					
ANR	4933406	ExpressionStatement	libname = name	43:2:865:879	4933265	1	True				
ANR	4933407	AssignmentExpression	libname = name		4933265	0		=			
ANR	4933408	Identifier	libname		4933265	0					
ANR	4933409	Identifier	name		4933265	1					
ANR	4933410	Statement	r_sys_setenv	45:1:885:896	4933265	8	True				
ANR	4933411	Statement	(	45:14:898:898	4933265	9	True				
ANR	4933412	Statement	"""PKG_CONFIG_PATH"""	45:15:899:915	4933265	10	True				
ANR	4933413	Statement	","	45:32:916:916	4933265	11	True				
ANR	4933414	Statement	R2_LIBDIR	45:34:918:926	4933265	12	True				
ANR	4933415	Statement	"""/pkgconfig"""	45:43:927:938	4933265	13	True				
ANR	4933416	Statement	)	45:55:939:939	4933265	14	True				
ANR	4933417	ExpressionStatement		45:56:940:940	4933265	15	True				
ANR	4933418	ExpressionStatement	"p = strstr ( name , "".c"" )"	46:1:943:966	4933265	16	True				
ANR	4933419	AssignmentExpression	"p = strstr ( name , "".c"" )"		4933265	0		=			
ANR	4933420	Identifier	p		4933265	0					
ANR	4933421	CallExpression	"strstr ( name , "".c"" )"		4933265	1					
ANR	4933422	Callee	strstr		4933265	0					
ANR	4933423	Identifier	strstr		4933265	0					
ANR	4933424	ArgumentList	name		4933265	1					
ANR	4933425	Argument	name		4933265	0					
ANR	4933426	Identifier	name		4933265	0					
ANR	4933427	Argument	""".c"""		4933265	1					
ANR	4933428	PrimaryExpression	""".c"""		4933265	0					
ANR	4933429	IfStatement	if ( p )		4933265	17					
ANR	4933430	Condition	p	47:5:973:973	4933265	0	True				
ANR	4933431	Identifier	p		4933265	0					
ANR	4933432	CompoundStatement		30:8:563:563	4933265	1					
ANR	4933433	ExpressionStatement	* p = 0	48:2:980:984	4933265	0	True				
ANR	4933434	AssignmentExpression	* p = 0		4933265	0		=			
ANR	4933435	UnaryOperationExpression	* p		4933265	0					
ANR	4933436	UnaryOperator	*		4933265	0					
ANR	4933437	Identifier	p		4933265	1					
ANR	4933438	PrimaryExpression	0		4933265	1					
ANR	4933439	ExpressionStatement	"cc = r_sys_getenv ( ""CC"" )"	50:1:990:1014	4933265	18	True				
ANR	4933440	AssignmentExpression	"cc = r_sys_getenv ( ""CC"" )"		4933265	0		=			
ANR	4933441	Identifier	cc		4933265	0					
ANR	4933442	CallExpression	"r_sys_getenv ( ""CC"" )"		4933265	1					
ANR	4933443	Callee	r_sys_getenv		4933265	0					
ANR	4933444	Identifier	r_sys_getenv		4933265	0					
ANR	4933445	ArgumentList	"""CC"""		4933265	1					
ANR	4933446	Argument	"""CC"""		4933265	0					
ANR	4933447	PrimaryExpression	"""CC"""		4933265	0					
ANR	4933448	IfStatement	if ( ! cc || ! * cc )		4933265	19					
ANR	4933449	Condition	! cc || ! * cc	51:5:1021:1031	4933265	0	True				
ANR	4933450	OrExpression	! cc || ! * cc		4933265	0		||			
ANR	4933451	UnaryOperationExpression	! cc		4933265	0					
ANR	4933452	UnaryOperator	!		4933265	0					
ANR	4933453	Identifier	cc		4933265	1					
ANR	4933454	UnaryOperationExpression	! * cc		4933265	1					
ANR	4933455	UnaryOperator	!		4933265	0					
ANR	4933456	UnaryOperationExpression	* cc		4933265	1					
ANR	4933457	UnaryOperator	*		4933265	0					
ANR	4933458	Identifier	cc		4933265	1					
ANR	4933459	CompoundStatement		34:18:621:621	4933265	1					
ANR	4933460	ExpressionStatement	"cc = strdup ( ""gcc"" )"	52:2:1038:1057	4933265	0	True				
ANR	4933461	AssignmentExpression	"cc = strdup ( ""gcc"" )"		4933265	0		=			
ANR	4933462	Identifier	cc		4933265	0					
ANR	4933463	CallExpression	"strdup ( ""gcc"" )"		4933265	1					
ANR	4933464	Callee	strdup		4933265	0					
ANR	4933465	Identifier	strdup		4933265	0					
ANR	4933466	ArgumentList	"""gcc"""		4933265	1					
ANR	4933467	Argument	"""gcc"""		4933265	0					
ANR	4933468	PrimaryExpression	"""gcc"""		4933265	0					
ANR	4933469	Statement	char	54:1:1063:1066	4933265	20	True				
ANR	4933470	Statement	*	54:6:1068:1068	4933265	21	True				
ANR	4933471	Statement	buf	54:7:1069:1071	4933265	22	True				
ANR	4933472	Statement	=	54:11:1073:1073	4933265	23	True				
ANR	4933473	Statement	r_str_newf	54:13:1075:1084	4933265	24	True				
ANR	4933474	Statement	(	54:24:1086:1086	4933265	25	True				
ANR	4933475	Statement	"""%s -fPIC -shared %s -o %s/lib%s."""	54:25:1087:1120	4933265	26	True				
ANR	4933476	Statement	R_LIB_EXT	54:59:1121:1129	4933265	27	True				
ANR	4933477	Statement	""" $(pkg-config --cflags --libs r_core)"""	55:2:1133:1171	4933265	28	True				
ANR	4933478	Statement	","	55:41:1172:1172	4933265	29	True				
ANR	4933479	Statement	cc	55:43:1174:1175	4933265	30	True				
ANR	4933480	Statement	","	55:45:1176:1176	4933265	31	True				
ANR	4933481	Statement	file	55:47:1178:1181	4933265	32	True				
ANR	4933482	Statement	","	55:51:1182:1182	4933265	33	True				
ANR	4933483	Statement	libpath	55:53:1184:1190	4933265	34	True				
ANR	4933484	Statement	","	55:60:1191:1191	4933265	35	True				
ANR	4933485	Statement	libname	55:62:1193:1199	4933265	36	True				
ANR	4933486	Statement	)	55:69:1200:1200	4933265	37	True				
ANR	4933487	ExpressionStatement		55:70:1201:1201	4933265	38	True				
ANR	4933488	ExpressionStatement	free ( cc )	56:1:1204:1213	4933265	39	True				
ANR	4933489	CallExpression	free ( cc )		4933265	0					
ANR	4933490	Callee	free		4933265	0					
ANR	4933491	Identifier	free		4933265	0					
ANR	4933492	ArgumentList	cc		4933265	1					
ANR	4933493	Argument	cc		4933265	0					
ANR	4933494	Identifier	cc		4933265	0					
ANR	4933495	IfStatement	"if ( r_sandbox_system ( buf , 1 ) != 0 )"		4933265	40					
ANR	4933496	Condition	"r_sandbox_system ( buf , 1 ) != 0"	57:5:1220:1249	4933265	0	True				
ANR	4933497	EqualityExpression	"r_sandbox_system ( buf , 1 ) != 0"		4933265	0		!=			
ANR	4933498	CallExpression	"r_sandbox_system ( buf , 1 )"		4933265	0					
ANR	4933499	Callee	r_sandbox_system		4933265	0					
ANR	4933500	Identifier	r_sandbox_system		4933265	0					
ANR	4933501	ArgumentList	buf		4933265	1					
ANR	4933502	Argument	buf		4933265	0					
ANR	4933503	Identifier	buf		4933265	0					
ANR	4933504	Argument	1		4933265	1					
ANR	4933505	PrimaryExpression	1		4933265	0					
ANR	4933506	PrimaryExpression	0		4933265	1					
ANR	4933507	CompoundStatement		40:37:839:839	4933265	1					
ANR	4933508	ExpressionStatement	free ( buf )	58:2:1256:1266	4933265	0	True				
ANR	4933509	CallExpression	free ( buf )		4933265	0					
ANR	4933510	Callee	free		4933265	0					
ANR	4933511	Identifier	free		4933265	0					
ANR	4933512	ArgumentList	buf		4933265	1					
ANR	4933513	Argument	buf		4933265	0					
ANR	4933514	Identifier	buf		4933265	0					
ANR	4933515	ReturnStatement	return false ;	59:2:1270:1282	4933265	1	True				
ANR	4933516	Identifier	false		4933265	0					
ANR	4933517	ExpressionStatement	free ( buf )	61:1:1288:1298	4933265	41	True				
ANR	4933518	CallExpression	free ( buf )		4933265	0					
ANR	4933519	Callee	free		4933265	0					
ANR	4933520	Identifier	free		4933265	0					
ANR	4933521	ArgumentList	buf		4933265	1					
ANR	4933522	Argument	buf		4933265	0					
ANR	4933523	Identifier	buf		4933265	0					
ANR	4933524	Statement	buf	62:1:1301:1303	4933265	42	True				
ANR	4933525	Statement	=	62:5:1305:1305	4933265	43	True				
ANR	4933526	Statement	r_str_newf	62:7:1307:1316	4933265	44	True				
ANR	4933527	Statement	(	62:18:1318:1318	4933265	45	True				
ANR	4933528	Statement	"""%s/lib%s."""	62:19:1319:1329	4933265	46	True				
ANR	4933529	Statement	R_LIB_EXT	62:30:1330:1338	4933265	47	True				
ANR	4933530	Statement	","	62:39:1339:1339	4933265	48	True				
ANR	4933531	Statement	libpath	62:41:1341:1347	4933265	49	True				
ANR	4933532	Statement	","	62:48:1348:1348	4933265	50	True				
ANR	4933533	Statement	libname	62:50:1350:1356	4933265	51	True				
ANR	4933534	Statement	)	62:57:1357:1357	4933265	52	True				
ANR	4933535	ExpressionStatement		62:58:1358:1358	4933265	53	True				
ANR	4933536	ExpressionStatement	lib = r_lib_dl_open ( buf )	63:1:1361:1386	4933265	54	True				
ANR	4933537	AssignmentExpression	lib = r_lib_dl_open ( buf )		4933265	0		=			
ANR	4933538	Identifier	lib		4933265	0					
ANR	4933539	CallExpression	r_lib_dl_open ( buf )		4933265	1					
ANR	4933540	Callee	r_lib_dl_open		4933265	0					
ANR	4933541	Identifier	r_lib_dl_open		4933265	0					
ANR	4933542	ArgumentList	buf		4933265	1					
ANR	4933543	Argument	buf		4933265	0					
ANR	4933544	Identifier	buf		4933265	0					
ANR	4933545	IfStatement	if ( lib )		4933265	55					
ANR	4933546	Condition	lib	64:5:1393:1395	4933265	0	True				
ANR	4933547	Identifier	lib		4933265	0					
ANR	4933548	CompoundStatement		48:2:989:1038	4933265	1					
ANR	4933549	IdentifierDeclStatement	"void ( * fcn ) ( RCore * , int argc , const char * * argv ) ;"	65:2:1402:1451	4933265	0	True				
ANR	4933550	IdentifierDecl	"( * fcn ) ( RCore * , int argc , const char * * argv )"		4933265	0					
ANR	4933551	IdentifierDeclType	"void ( * ) ( RCore * , int argc , const char * * argv )"		4933265	0					
ANR	4933552	Identifier	fcn		4933265	1					
ANR	4933553	Identifier	argv		4933265	2					
ANR	4933554	ExpressionStatement	"fcn = r_lib_dl_sym ( lib , ""entry"" )"	66:2:1455:1488	4933265	1	True				
ANR	4933555	AssignmentExpression	"fcn = r_lib_dl_sym ( lib , ""entry"" )"		4933265	0		=			
ANR	4933556	Identifier	fcn		4933265	0					
ANR	4933557	CallExpression	"r_lib_dl_sym ( lib , ""entry"" )"		4933265	1					
ANR	4933558	Callee	r_lib_dl_sym		4933265	0					
ANR	4933559	Identifier	r_lib_dl_sym		4933265	0					
ANR	4933560	ArgumentList	lib		4933265	1					
ANR	4933561	Argument	lib		4933265	0					
ANR	4933562	Identifier	lib		4933265	0					
ANR	4933563	Argument	"""entry"""		4933265	1					
ANR	4933564	PrimaryExpression	"""entry"""		4933265	0					
ANR	4933565	IfStatement	if ( fcn )		4933265	2					
ANR	4933566	Condition	fcn	67:6:1496:1498	4933265	0	True				
ANR	4933567	Identifier	fcn		4933265	0					
ANR	4933568	CompoundStatement		50:11:1088:1088	4933265	1					
ANR	4933569	ExpressionStatement	"fcn ( lang -> user , ac , av )"	68:3:1506:1530	4933265	0	True				
ANR	4933570	CallExpression	"fcn ( lang -> user , ac , av )"		4933265	0					
ANR	4933571	Callee	fcn		4933265	0					
ANR	4933572	Identifier	fcn		4933265	0					
ANR	4933573	ArgumentList	lang -> user		4933265	1					
ANR	4933574	Argument	lang -> user		4933265	0					
ANR	4933575	PtrMemberAccess	lang -> user		4933265	0					
ANR	4933576	Identifier	lang		4933265	0					
ANR	4933577	Identifier	user		4933265	1					
ANR	4933578	Argument	ac		4933265	1					
ANR	4933579	Identifier	ac		4933265	0					
ANR	4933580	Argument	av		4933265	2					
ANR	4933581	Identifier	av		4933265	0					
ANR	4933582	ExpressionStatement	ac = 0	69:3:1535:1541	4933265	1	True				
ANR	4933583	AssignmentExpression	ac = 0		4933265	0		=			
ANR	4933584	Identifier	ac		4933265	0					
ANR	4933585	PrimaryExpression	0		4933265	1					
ANR	4933586	ExpressionStatement	av = NULL	70:3:1546:1555	4933265	2	True				
ANR	4933587	AssignmentExpression	av = NULL		4933265	0		=			
ANR	4933588	Identifier	av		4933265	0					
ANR	4933589	Identifier	NULL		4933265	1					
ANR	4933590	ElseStatement	else		4933265	0					
ANR	4933591	CompoundStatement		54:9:1153:1153	4933265	0					
ANR	4933592	ExpressionStatement	"eprintf ( ""Cannot find 'entry' symbol in library\\n"" )"	72:3:1571:1622	4933265	0	True				
ANR	4933593	CallExpression	"eprintf ( ""Cannot find 'entry' symbol in library\\n"" )"		4933265	0					
ANR	4933594	Callee	eprintf		4933265	0					
ANR	4933595	Identifier	eprintf		4933265	0					
ANR	4933596	ArgumentList	"""Cannot find 'entry' symbol in library\\n"""		4933265	1					
ANR	4933597	Argument	"""Cannot find 'entry' symbol in library\\n"""		4933265	0					
ANR	4933598	PrimaryExpression	"""Cannot find 'entry' symbol in library\\n"""		4933265	0					
ANR	4933599	ExpressionStatement	r_lib_dl_close ( lib )	74:2:1630:1650	4933265	3	True				
ANR	4933600	CallExpression	r_lib_dl_close ( lib )		4933265	0					
ANR	4933601	Callee	r_lib_dl_close		4933265	0					
ANR	4933602	Identifier	r_lib_dl_close		4933265	0					
ANR	4933603	ArgumentList	lib		4933265	1					
ANR	4933604	Argument	lib		4933265	0					
ANR	4933605	Identifier	lib		4933265	0					
ANR	4933606	ElseStatement	else		4933265	0					
ANR	4933607	CompoundStatement		58:8:1247:1247	4933265	0					
ANR	4933608	ExpressionStatement	"eprintf ( ""Cannot open library\\n"" )"	76:2:1664:1697	4933265	0	True				
ANR	4933609	CallExpression	"eprintf ( ""Cannot open library\\n"" )"		4933265	0					
ANR	4933610	Callee	eprintf		4933265	0					
ANR	4933611	Identifier	eprintf		4933265	0					
ANR	4933612	ArgumentList	"""Cannot open library\\n"""		4933265	1					
ANR	4933613	Argument	"""Cannot open library\\n"""		4933265	0					
ANR	4933614	PrimaryExpression	"""Cannot open library\\n"""		4933265	0					
ANR	4933615	ExpressionStatement	r_file_rm ( buf )	78:1:1703:1718	4933265	56	True				
ANR	4933616	CallExpression	r_file_rm ( buf )		4933265	0					
ANR	4933617	Callee	r_file_rm		4933265	0					
ANR	4933618	Identifier	r_file_rm		4933265	0					
ANR	4933619	ArgumentList	buf		4933265	1					
ANR	4933620	Argument	buf		4933265	0					
ANR	4933621	Identifier	buf		4933265	0					
ANR	4933622	ExpressionStatement	free ( buf )	79:1:1735:1745	4933265	57	True				
ANR	4933623	CallExpression	free ( buf )		4933265	0					
ANR	4933624	Callee	free		4933265	0					
ANR	4933625	Identifier	free		4933265	0					
ANR	4933626	ArgumentList	buf		4933265	1					
ANR	4933627	Argument	buf		4933265	0					
ANR	4933628	Identifier	buf		4933265	0					
ANR	4933629	ReturnStatement	return 0 ;	80:1:1748:1756	4933265	58	True				
ANR	4933630	PrimaryExpression	0		4933265	0					
ANR	4933631	ReturnType	static int		4933265	1					
ANR	4933632	Identifier	lang_c_file		4933265	2					
ANR	4933633	ParameterList	"RLang * lang , const char * file"		4933265	3					
ANR	4933634	Parameter	RLang * lang	18:23:381:391	4933265	0	True				
ANR	4933635	ParameterType	RLang *		4933265	0					
ANR	4933636	Identifier	lang		4933265	1					
ANR	4933637	Parameter	const char * file	18:36:394:409	4933265	1	True				
ANR	4933638	ParameterType	const char *		4933265	0					
ANR	4933639	Identifier	file		4933265	1					
ANR	4933640	CFGEntryNode	ENTRY		4933265		True				
ANR	4933641	CFGExitNode	EXIT		4933265		True				
ANR	4933642	Symbol	lib		4933265						
ANR	4933643	Symbol	* cc		4933265						
ANR	4933644	Symbol	* lang		4933265						
ANR	4933645	Symbol	r_sys_getenv		4933265						
ANR	4933646	Symbol	libpath		4933265						
ANR	4933647	Symbol	fcn		4933265						
ANR	4933648	Symbol	strlen		4933265						
ANR	4933649	Symbol	r_lib_dl_open		4933265						
ANR	4933650	Symbol	file		4933265						
ANR	4933651	Symbol	r_lib_dl_sym		4933265						
ANR	4933652	Symbol	lang		4933265						
ANR	4933653	Symbol	cc		4933265						
ANR	4933654	Symbol	a		4933265						
ANR	4933655	Symbol	r_sandbox_system		4933265						
ANR	4933656	Symbol	ac		4933265						
ANR	4933657	Symbol	NULL		4933265						
ANR	4933658	Symbol	false		4933265						
ANR	4933659	Symbol	* a		4933265						
ANR	4933660	Symbol	p		4933265						
ANR	4933661	Symbol	buf		4933265						
ANR	4933662	Symbol	strstr		4933265						
ANR	4933663	Symbol	r_str_lchr		4933265						
ANR	4933664	Symbol	av		4933265						
ANR	4933665	Symbol	libname		4933265						
ANR	4933666	Symbol	name		4933265						
ANR	4933667	Symbol	* p		4933265						
ANR	4933668	Symbol	strdup		4933265						
ANR	4933669	Symbol	r_file_exists		4933265						
ANR	4933670	Symbol	lang -> user		4933265						
ANR	4933671	Function	lang_c_init	83:0:1761:1856							
ANR	4933672	FunctionDef	lang_c_init (void * user)		4933671	0					
ANR	4933673	CompoundStatement		83:35:1796:1856	4933671	0					
ANR	4933674	ReturnStatement	return true ;	85:1:1843:1854	4933671	0	True				
ANR	4933675	Identifier	true		4933671	0					
ANR	4933676	ReturnType	static int		4933671	1					
ANR	4933677	Identifier	lang_c_init		4933671	2					
ANR	4933678	ParameterList	void * user		4933671	3					
ANR	4933679	Parameter	void * user	83:23:1784:1793	4933671	0	True				
ANR	4933680	ParameterType	void *		4933671	0					
ANR	4933681	Identifier	user		4933671	1					
ANR	4933682	CFGEntryNode	ENTRY		4933671		True				
ANR	4933683	CFGExitNode	EXIT		4933671		True				
ANR	4933684	Symbol	true		4933671						
ANR	4933685	Symbol	user		4933671						
ANR	4933686	Function	lang_c_run	88:0:1859:2246							
ANR	4933687	FunctionDef	"lang_c_run (RLang * lang , const char * code , int len)"		4933686	0					
ANR	4933688	CompoundStatement		88:62:1921:2246	4933686	0					
ANR	4933689	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( "".tmp.c"" , ""w"" ) ;"	89:1:1924:1966	4933686	0	True				
ANR	4933690	IdentifierDecl	"* fd = r_sandbox_fopen ( "".tmp.c"" , ""w"" )"		4933686	0					
ANR	4933691	IdentifierDeclType	FILE *		4933686	0					
ANR	4933692	Identifier	fd		4933686	1					
ANR	4933693	AssignmentExpression	"* fd = r_sandbox_fopen ( "".tmp.c"" , ""w"" )"		4933686	2		=			
ANR	4933694	Identifier	fd		4933686	0					
ANR	4933695	CallExpression	"r_sandbox_fopen ( "".tmp.c"" , ""w"" )"		4933686	1					
ANR	4933696	Callee	r_sandbox_fopen		4933686	0					
ANR	4933697	Identifier	r_sandbox_fopen		4933686	0					
ANR	4933698	ArgumentList	""".tmp.c"""		4933686	1					
ANR	4933699	Argument	""".tmp.c"""		4933686	0					
ANR	4933700	PrimaryExpression	""".tmp.c"""		4933686	0					
ANR	4933701	Argument	"""w"""		4933686	1					
ANR	4933702	PrimaryExpression	"""w"""		4933686	0					
ANR	4933703	IfStatement	if ( fd )		4933686	1					
ANR	4933704	Condition	fd	90:5:1973:1974	4933686	0	True				
ANR	4933705	Identifier	fd		4933686	0					
ANR	4933706	CompoundStatement		3:9:55:55	4933686	1					
ANR	4933707	ExpressionStatement	"fputs ( ""#include <r_core.h>\\n\\nvoid entry(RCore *core, int argc, const char **argv) {\\n"" , fd )"	91:2:1981:2074	4933686	0	True				
ANR	4933708	CallExpression	"fputs ( ""#include <r_core.h>\\n\\nvoid entry(RCore *core, int argc, const char **argv) {\\n"" , fd )"		4933686	0					
ANR	4933709	Callee	fputs		4933686	0					
ANR	4933710	Identifier	fputs		4933686	0					
ANR	4933711	ArgumentList	"""#include <r_core.h>\\n\\nvoid entry(RCore *core, int argc, const char **argv) {\\n"""		4933686	1					
ANR	4933712	Argument	"""#include <r_core.h>\\n\\nvoid entry(RCore *core, int argc, const char **argv) {\\n"""		4933686	0					
ANR	4933713	PrimaryExpression	"""#include <r_core.h>\\n\\nvoid entry(RCore *core, int argc, const char **argv) {\\n"""		4933686	0					
ANR	4933714	Argument	fd		4933686	1					
ANR	4933715	Identifier	fd		4933686	0					
ANR	4933716	ExpressionStatement	"fputs ( code , fd )"	92:2:2078:2094	4933686	1	True				
ANR	4933717	CallExpression	"fputs ( code , fd )"		4933686	0					
ANR	4933718	Callee	fputs		4933686	0					
ANR	4933719	Identifier	fputs		4933686	0					
ANR	4933720	ArgumentList	code		4933686	1					
ANR	4933721	Argument	code		4933686	0					
ANR	4933722	Identifier	code		4933686	0					
ANR	4933723	Argument	fd		4933686	1					
ANR	4933724	Identifier	fd		4933686	0					
ANR	4933725	ExpressionStatement	"fputs ( ""\\n}\\n"" , fd )"	93:2:2098:2117	4933686	2	True				
ANR	4933726	CallExpression	"fputs ( ""\\n}\\n"" , fd )"		4933686	0					
ANR	4933727	Callee	fputs		4933686	0					
ANR	4933728	Identifier	fputs		4933686	0					
ANR	4933729	ArgumentList	"""\\n}\\n"""		4933686	1					
ANR	4933730	Argument	"""\\n}\\n"""		4933686	0					
ANR	4933731	PrimaryExpression	"""\\n}\\n"""		4933686	0					
ANR	4933732	Argument	fd		4933686	1					
ANR	4933733	Identifier	fd		4933686	0					
ANR	4933734	ExpressionStatement	fclose ( fd )	94:2:2121:2132	4933686	3	True				
ANR	4933735	CallExpression	fclose ( fd )		4933686	0					
ANR	4933736	Callee	fclose		4933686	0					
ANR	4933737	Identifier	fclose		4933686	0					
ANR	4933738	ArgumentList	fd		4933686	1					
ANR	4933739	Argument	fd		4933686	0					
ANR	4933740	Identifier	fd		4933686	0					
ANR	4933741	ExpressionStatement	"lang_c_file ( lang , "".tmp.c"" )"	95:2:2136:2164	4933686	4	True				
ANR	4933742	CallExpression	"lang_c_file ( lang , "".tmp.c"" )"		4933686	0					
ANR	4933743	Callee	lang_c_file		4933686	0					
ANR	4933744	Identifier	lang_c_file		4933686	0					
ANR	4933745	ArgumentList	lang		4933686	1					
ANR	4933746	Argument	lang		4933686	0					
ANR	4933747	Identifier	lang		4933686	0					
ANR	4933748	Argument	""".tmp.c"""		4933686	1					
ANR	4933749	PrimaryExpression	""".tmp.c"""		4933686	0					
ANR	4933750	ExpressionStatement	"r_file_rm ( "".tmp.c"" )"	96:2:2168:2188	4933686	5	True				
ANR	4933751	CallExpression	"r_file_rm ( "".tmp.c"" )"		4933686	0					
ANR	4933752	Callee	r_file_rm		4933686	0					
ANR	4933753	Identifier	r_file_rm		4933686	0					
ANR	4933754	ArgumentList	""".tmp.c"""		4933686	1					
ANR	4933755	Argument	""".tmp.c"""		4933686	0					
ANR	4933756	PrimaryExpression	""".tmp.c"""		4933686	0					
ANR	4933757	ElseStatement	else		4933686	0					
ANR	4933758	ExpressionStatement	"eprintf ( ""Cannot open .tmp.c\\n"" )"	97:8:2198:2230	4933686	0	True				
ANR	4933759	CallExpression	"eprintf ( ""Cannot open .tmp.c\\n"" )"		4933686	0					
ANR	4933760	Callee	eprintf		4933686	0					
ANR	4933761	Identifier	eprintf		4933686	0					
ANR	4933762	ArgumentList	"""Cannot open .tmp.c\\n"""		4933686	1					
ANR	4933763	Argument	"""Cannot open .tmp.c\\n"""		4933686	0					
ANR	4933764	PrimaryExpression	"""Cannot open .tmp.c\\n"""		4933686	0					
ANR	4933765	ReturnStatement	return true ;	98:1:2233:2244	4933686	2	True				
ANR	4933766	Identifier	true		4933686	0					
ANR	4933767	ReturnType	static int		4933686	1					
ANR	4933768	Identifier	lang_c_run		4933686	2					
ANR	4933769	ParameterList	"RLang * lang , const char * code , int len"		4933686	3					
ANR	4933770	Parameter	RLang * lang	88:22:1881:1891	4933686	0	True				
ANR	4933771	ParameterType	RLang *		4933686	0					
ANR	4933772	Identifier	lang		4933686	1					
ANR	4933773	Parameter	const char * code	88:35:1894:1909	4933686	1	True				
ANR	4933774	ParameterType	const char *		4933686	0					
ANR	4933775	Identifier	code		4933686	1					
ANR	4933776	Parameter	int len	88:53:1912:1918	4933686	2	True				
ANR	4933777	ParameterType	int		4933686	0					
ANR	4933778	Identifier	len		4933686	1					
ANR	4933779	CFGEntryNode	ENTRY		4933686		True				
ANR	4933780	CFGExitNode	EXIT		4933686		True				
ANR	4933781	Symbol	code		4933686						
ANR	4933782	Symbol	len		4933686						
ANR	4933783	Symbol	true		4933686						
ANR	4933784	Symbol	r_sandbox_fopen		4933686						
ANR	4933785	Symbol	lang		4933686						
ANR	4933786	Symbol	fd		4933686						
ANR	4933787	DeclStmt									
ANR	4933788	Decl							RLangPlugin	RLangPlugin	r_lang_plugin_c
