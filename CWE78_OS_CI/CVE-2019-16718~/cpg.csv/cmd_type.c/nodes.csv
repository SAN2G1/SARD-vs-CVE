command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1041064	File	data/converged/CVE-2019-16718~_radare2/cmd_type.c								
ANR	1041065	DeclStmt									
ANR	1041066	Decl							const char	const char * [ ]	help_msg_t
ANR	1041067	DeclStmt									
ANR	1041068	Decl							const char	const char * [ ]	help_msg_tcc
ANR	1041069	DeclStmt									
ANR	1041070	Decl							const char	const char * [ ]	help_msg_t_minus
ANR	1041071	DeclStmt									
ANR	1041072	Decl							const char	const char * [ ]	help_msg_ta
ANR	1041073	DeclStmt									
ANR	1041074	Decl							const char	const char * [ ]	help_msg_tf
ANR	1041075	DeclStmt									
ANR	1041076	Decl							const char	const char * [ ]	help_msg_to
ANR	1041077	DeclStmt									
ANR	1041078	Decl							const char	const char * [ ]	help_msg_tc
ANR	1041079	DeclStmt									
ANR	1041080	Decl							const char	const char * [ ]	help_msg_td
ANR	1041081	DeclStmt									
ANR	1041082	Decl							const char	const char * [ ]	help_msg_te
ANR	1041083	DeclStmt									
ANR	1041084	Decl							const char	const char * [ ]	help_msg_tt
ANR	1041085	DeclStmt									
ANR	1041086	Decl							const char	const char * [ ]	help_msg_tl
ANR	1041087	DeclStmt									
ANR	1041088	Decl							const char	const char * [ ]	help_msg_tn
ANR	1041089	DeclStmt									
ANR	1041090	Decl							const char	const char * [ ]	help_msg_ts
ANR	1041091	DeclStmt									
ANR	1041092	Decl							const char	const char * [ ]	help_msg_tu
ANR	1041093	Function	cmd_type_init	176:0:6628:7070							
ANR	1041094	FunctionDef	cmd_type_init (RCore * core)		1041093	0					
ANR	1041095	CompoundStatement		176:39:6667:7070	1041093	0					
ANR	1041096	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , t )"	177:1:6670:6701	1041093	0	True				
ANR	1041097	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , t )"		1041093	0					
ANR	1041098	Callee	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041099	Identifier	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041100	ArgumentList	core		1041093	1					
ANR	1041101	Argument	core		1041093	0					
ANR	1041102	Identifier	core		1041093	0					
ANR	1041103	Argument	t		1041093	1					
ANR	1041104	Identifier	t		1041093	0					
ANR	1041105	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	178:1:6704:6732	1041093	1	True				
ANR	1041106	Statement	(	178:31:6734:6734	1041093	2	True				
ANR	1041107	Statement	core	178:32:6735:6738	1041093	3	True				
ANR	1041108	Statement	","	178:36:6739:6739	1041093	4	True				
ANR	1041109	Statement	t	178:38:6741:6741	1041093	5	True				
ANR	1041110	Statement	-	178:39:6742:6742	1041093	6	True				
ANR	1041111	Statement	","	178:40:6743:6743	1041093	7	True				
ANR	1041112	Statement	t_minus	178:42:6745:6751	1041093	8	True				
ANR	1041113	Statement	)	178:49:6752:6752	1041093	9	True				
ANR	1041114	ExpressionStatement		178:50:6753:6753	1041093	10	True				
ANR	1041115	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ta )"	179:1:6756:6788	1041093	11	True				
ANR	1041116	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ta )"		1041093	0					
ANR	1041117	Callee	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041118	Identifier	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041119	ArgumentList	core		1041093	1					
ANR	1041120	Argument	core		1041093	0					
ANR	1041121	Identifier	core		1041093	0					
ANR	1041122	Argument	ta		1041093	1					
ANR	1041123	Identifier	ta		1041093	0					
ANR	1041124	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , tc )"	180:1:6791:6823	1041093	12	True				
ANR	1041125	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , tc )"		1041093	0					
ANR	1041126	Callee	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041127	Identifier	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041128	ArgumentList	core		1041093	1					
ANR	1041129	Argument	core		1041093	0					
ANR	1041130	Identifier	core		1041093	0					
ANR	1041131	Argument	tc		1041093	1					
ANR	1041132	Identifier	tc		1041093	0					
ANR	1041133	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , td )"	181:1:6826:6858	1041093	13	True				
ANR	1041134	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , td )"		1041093	0					
ANR	1041135	Callee	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041136	Identifier	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041137	ArgumentList	core		1041093	1					
ANR	1041138	Argument	core		1041093	0					
ANR	1041139	Identifier	core		1041093	0					
ANR	1041140	Argument	td		1041093	1					
ANR	1041141	Identifier	td		1041093	0					
ANR	1041142	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , te )"	182:1:6861:6893	1041093	14	True				
ANR	1041143	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , te )"		1041093	0					
ANR	1041144	Callee	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041145	Identifier	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041146	ArgumentList	core		1041093	1					
ANR	1041147	Argument	core		1041093	0					
ANR	1041148	Identifier	core		1041093	0					
ANR	1041149	Argument	te		1041093	1					
ANR	1041150	Identifier	te		1041093	0					
ANR	1041151	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , tl )"	183:1:6896:6928	1041093	15	True				
ANR	1041152	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , tl )"		1041093	0					
ANR	1041153	Callee	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041154	Identifier	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041155	ArgumentList	core		1041093	1					
ANR	1041156	Argument	core		1041093	0					
ANR	1041157	Identifier	core		1041093	0					
ANR	1041158	Argument	tl		1041093	1					
ANR	1041159	Identifier	tl		1041093	0					
ANR	1041160	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , tn )"	184:1:6931:6963	1041093	16	True				
ANR	1041161	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , tn )"		1041093	0					
ANR	1041162	Callee	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041163	Identifier	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041164	ArgumentList	core		1041093	1					
ANR	1041165	Argument	core		1041093	0					
ANR	1041166	Identifier	core		1041093	0					
ANR	1041167	Argument	tn		1041093	1					
ANR	1041168	Identifier	tn		1041093	0					
ANR	1041169	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ts )"	185:1:6966:6998	1041093	17	True				
ANR	1041170	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ts )"		1041093	0					
ANR	1041171	Callee	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041172	Identifier	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041173	ArgumentList	core		1041093	1					
ANR	1041174	Argument	core		1041093	0					
ANR	1041175	Identifier	core		1041093	0					
ANR	1041176	Argument	ts		1041093	1					
ANR	1041177	Identifier	ts		1041093	0					
ANR	1041178	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , tu )"	186:1:7001:7033	1041093	18	True				
ANR	1041179	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , tu )"		1041093	0					
ANR	1041180	Callee	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041181	Identifier	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041182	ArgumentList	core		1041093	1					
ANR	1041183	Argument	core		1041093	0					
ANR	1041184	Identifier	core		1041093	0					
ANR	1041185	Argument	tu		1041093	1					
ANR	1041186	Identifier	tu		1041093	0					
ANR	1041187	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , tt )"	187:1:7036:7068	1041093	19	True				
ANR	1041188	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , tt )"		1041093	0					
ANR	1041189	Callee	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041190	Identifier	DEFINE_CMD_DESCRIPTOR		1041093	0					
ANR	1041191	ArgumentList	core		1041093	1					
ANR	1041192	Argument	core		1041093	0					
ANR	1041193	Identifier	core		1041093	0					
ANR	1041194	Argument	tt		1041093	1					
ANR	1041195	Identifier	tt		1041093	0					
ANR	1041196	ReturnType	static void		1041093	1					
ANR	1041197	Identifier	cmd_type_init		1041093	2					
ANR	1041198	ParameterList	RCore * core		1041093	3					
ANR	1041199	Parameter	RCore * core	176:26:6654:6664	1041093	0	True				
ANR	1041200	ParameterType	RCore *		1041093	0					
ANR	1041201	Identifier	core		1041093	1					
ANR	1041202	CFGEntryNode	ENTRY		1041093		True				
ANR	1041203	CFGExitNode	EXIT		1041093		True				
ANR	1041204	Symbol	td		1041093						
ANR	1041205	Symbol	tt		1041093						
ANR	1041206	Symbol	core		1041093						
ANR	1041207	Symbol	te		1041093						
ANR	1041208	Symbol	tu		1041093						
ANR	1041209	Symbol	t		1041093						
ANR	1041210	Symbol	tl		1041093						
ANR	1041211	Symbol	tn		1041093						
ANR	1041212	Symbol	ta		1041093						
ANR	1041213	Symbol	tc		1041093						
ANR	1041214	Symbol	ts		1041093						
ANR	1041215	Function	show_help	190:0:7073:7147							
ANR	1041216	FunctionDef	show_help (RCore * core)		1041215	0					
ANR	1041217	CompoundStatement		190:35:7108:7147	1041215	0					
ANR	1041218	ExpressionStatement	"r_core_cmd_help ( core , help_msg_t )"	191:1:7111:7145	1041215	0	True				
ANR	1041219	CallExpression	"r_core_cmd_help ( core , help_msg_t )"		1041215	0					
ANR	1041220	Callee	r_core_cmd_help		1041215	0					
ANR	1041221	Identifier	r_core_cmd_help		1041215	0					
ANR	1041222	ArgumentList	core		1041215	1					
ANR	1041223	Argument	core		1041215	0					
ANR	1041224	Identifier	core		1041215	0					
ANR	1041225	Argument	help_msg_t		1041215	1					
ANR	1041226	Identifier	help_msg_t		1041215	0					
ANR	1041227	ReturnType	static void		1041215	1					
ANR	1041228	Identifier	show_help		1041215	2					
ANR	1041229	ParameterList	RCore * core		1041215	3					
ANR	1041230	Parameter	RCore * core	190:22:7095:7105	1041215	0	True				
ANR	1041231	ParameterType	RCore *		1041215	0					
ANR	1041232	Identifier	core		1041215	1					
ANR	1041233	CFGEntryNode	ENTRY		1041215		True				
ANR	1041234	CFGExitNode	EXIT		1041215		True				
ANR	1041235	Symbol	core		1041215						
ANR	1041236	Symbol	help_msg_t		1041215						
ANR	1041237	Function	__core_cmd_tcc	194:0:7150:8914							
ANR	1041238	FunctionDef	"__core_cmd_tcc (RCore * core , const char * input)"		1041237	0					
ANR	1041239	CompoundStatement		194:59:7209:8914	1041237	0					
ANR	1041240	SwitchStatement	switch ( * input )		1041237	0					
ANR	1041241	Condition	* input	195:9:7220:7225	1041237	0	True				
ANR	1041242	UnaryOperationExpression	* input		1041237	0					
ANR	1041243	UnaryOperator	*		1041237	0					
ANR	1041244	Identifier	input		1041237	1					
ANR	1041245	CompoundStatement		2:17:18:18	1041237	1					
ANR	1041246	Label	case '?' :	196:1:7231:7239	1041237	0	True				
ANR	1041247	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tcc )"	197:2:7243:7279	1041237	1	True				
ANR	1041248	CallExpression	"r_core_cmd_help ( core , help_msg_tcc )"		1041237	0					
ANR	1041249	Callee	r_core_cmd_help		1041237	0					
ANR	1041250	Identifier	r_core_cmd_help		1041237	0					
ANR	1041251	ArgumentList	core		1041237	1					
ANR	1041252	Argument	core		1041237	0					
ANR	1041253	Identifier	core		1041237	0					
ANR	1041254	Argument	help_msg_tcc		1041237	1					
ANR	1041255	Identifier	help_msg_tcc		1041237	0					
ANR	1041256	BreakStatement	break ;	198:2:7283:7288	1041237	2	True				
ANR	1041257	Label	case '-' :	199:1:7291:7299	1041237	3	True				
ANR	1041258	ExpressionStatement	"r_anal_cc_del ( core -> anal , r_str_trim_ro ( input + 1 ) )"	200:2:7303:7356	1041237	4	True				
ANR	1041259	CallExpression	"r_anal_cc_del ( core -> anal , r_str_trim_ro ( input + 1 ) )"		1041237	0					
ANR	1041260	Callee	r_anal_cc_del		1041237	0					
ANR	1041261	Identifier	r_anal_cc_del		1041237	0					
ANR	1041262	ArgumentList	core -> anal		1041237	1					
ANR	1041263	Argument	core -> anal		1041237	0					
ANR	1041264	PtrMemberAccess	core -> anal		1041237	0					
ANR	1041265	Identifier	core		1041237	0					
ANR	1041266	Identifier	anal		1041237	1					
ANR	1041267	Argument	r_str_trim_ro ( input + 1 )		1041237	1					
ANR	1041268	CallExpression	r_str_trim_ro ( input + 1 )		1041237	0					
ANR	1041269	Callee	r_str_trim_ro		1041237	0					
ANR	1041270	Identifier	r_str_trim_ro		1041237	0					
ANR	1041271	ArgumentList	input + 1		1041237	1					
ANR	1041272	Argument	input + 1		1041237	0					
ANR	1041273	AdditiveExpression	input + 1		1041237	0		+			
ANR	1041274	Identifier	input		1041237	0					
ANR	1041275	PrimaryExpression	1		1041237	1					
ANR	1041276	BreakStatement	break ;	201:2:7360:7365	1041237	5	True				
ANR	1041277	Label	case 0 :	202:1:7368:7374	1041237	6	True				
ANR	1041278	ExpressionStatement	"r_core_cmd0 ( core , ""afcl"" )"	203:2:7378:7404	1041237	7	True				
ANR	1041279	CallExpression	"r_core_cmd0 ( core , ""afcl"" )"		1041237	0					
ANR	1041280	Callee	r_core_cmd0		1041237	0					
ANR	1041281	Identifier	r_core_cmd0		1041237	0					
ANR	1041282	ArgumentList	core		1041237	1					
ANR	1041283	Argument	core		1041237	0					
ANR	1041284	Identifier	core		1041237	0					
ANR	1041285	Argument	"""afcl"""		1041237	1					
ANR	1041286	PrimaryExpression	"""afcl"""		1041237	0					
ANR	1041287	BreakStatement	break ;	204:2:7408:7413	1041237	8	True				
ANR	1041288	Label	case 'j' :	205:1:7416:7424	1041237	9	True				
ANR	1041289	CompoundStatement		18:3:359:377	1041237	10					
ANR	1041290	IdentifierDeclStatement	"char * ccs = r_core_cmd_strf ( core , ""afcl"" ) ;"	207:3:7433:7475	1041237	0	True				
ANR	1041291	IdentifierDecl	"* ccs = r_core_cmd_strf ( core , ""afcl"" )"		1041237	0					
ANR	1041292	IdentifierDeclType	char *		1041237	0					
ANR	1041293	Identifier	ccs		1041237	1					
ANR	1041294	AssignmentExpression	"* ccs = r_core_cmd_strf ( core , ""afcl"" )"		1041237	2		=			
ANR	1041295	Identifier	ccs		1041237	0					
ANR	1041296	CallExpression	"r_core_cmd_strf ( core , ""afcl"" )"		1041237	1					
ANR	1041297	Callee	r_core_cmd_strf		1041237	0					
ANR	1041298	Identifier	r_core_cmd_strf		1041237	0					
ANR	1041299	ArgumentList	core		1041237	1					
ANR	1041300	Argument	core		1041237	0					
ANR	1041301	Identifier	core		1041237	0					
ANR	1041302	Argument	"""afcl"""		1041237	1					
ANR	1041303	PrimaryExpression	"""afcl"""		1041237	0					
ANR	1041304	IdentifierDeclStatement	"RList * list = r_str_split_list ( ccs , ""\\n"" , 0 ) ;"	208:3:7480:7525	1041237	1	True				
ANR	1041305	IdentifierDecl	"* list = r_str_split_list ( ccs , ""\\n"" , 0 )"		1041237	0					
ANR	1041306	IdentifierDeclType	RList *		1041237	0					
ANR	1041307	Identifier	list		1041237	1					
ANR	1041308	AssignmentExpression	"* list = r_str_split_list ( ccs , ""\\n"" , 0 )"		1041237	2		=			
ANR	1041309	Identifier	list		1041237	0					
ANR	1041310	CallExpression	"r_str_split_list ( ccs , ""\\n"" , 0 )"		1041237	1					
ANR	1041311	Callee	r_str_split_list		1041237	0					
ANR	1041312	Identifier	r_str_split_list		1041237	0					
ANR	1041313	ArgumentList	ccs		1041237	1					
ANR	1041314	Argument	ccs		1041237	0					
ANR	1041315	Identifier	ccs		1041237	0					
ANR	1041316	Argument	"""\\n"""		1041237	1					
ANR	1041317	PrimaryExpression	"""\\n"""		1041237	0					
ANR	1041318	Argument	0		1041237	2					
ANR	1041319	PrimaryExpression	0		1041237	0					
ANR	1041320	IdentifierDeclStatement	RListIter * iter ;	209:3:7530:7545	1041237	2	True				
ANR	1041321	IdentifierDecl	* iter		1041237	0					
ANR	1041322	IdentifierDeclType	RListIter *		1041237	0					
ANR	1041323	Identifier	iter		1041237	1					
ANR	1041324	IdentifierDeclStatement	const char * cc ;	210:3:7550:7564	1041237	3	True				
ANR	1041325	IdentifierDecl	* cc		1041237	0					
ANR	1041326	IdentifierDeclType	const char *		1041237	0					
ANR	1041327	Identifier	cc		1041237	1					
ANR	1041328	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	211:3:7569:7587	1041237	4	True				
ANR	1041329	IdentifierDecl	* pj = pj_new ( )		1041237	0					
ANR	1041330	IdentifierDeclType	PJ *		1041237	0					
ANR	1041331	Identifier	pj		1041237	1					
ANR	1041332	AssignmentExpression	* pj = pj_new ( )		1041237	2		=			
ANR	1041333	Identifier	pj		1041237	0					
ANR	1041334	CallExpression	pj_new ( )		1041237	1					
ANR	1041335	Callee	pj_new		1041237	0					
ANR	1041336	Identifier	pj_new		1041237	0					
ANR	1041337	ArgumentList			1041237	1					
ANR	1041338	ExpressionStatement	pj_a ( pj )	212:3:7592:7601	1041237	5	True				
ANR	1041339	CallExpression	pj_a ( pj )		1041237	0					
ANR	1041340	Callee	pj_a		1041237	0					
ANR	1041341	Identifier	pj_a		1041237	0					
ANR	1041342	ArgumentList	pj		1041237	1					
ANR	1041343	Argument	pj		1041237	0					
ANR	1041344	Identifier	pj		1041237	0					
ANR	1041345	Statement	r_list_foreach	213:3:7606:7619	1041237	6	True				
ANR	1041346	Statement	(	213:18:7621:7621	1041237	7	True				
ANR	1041347	Statement	list	213:19:7622:7625	1041237	8	True				
ANR	1041348	Statement	","	213:23:7626:7626	1041237	9	True				
ANR	1041349	Statement	iter	213:25:7628:7631	1041237	10	True				
ANR	1041350	Statement	","	213:29:7632:7632	1041237	11	True				
ANR	1041351	Statement	cc	213:31:7634:7635	1041237	12	True				
ANR	1041352	Statement	)	213:33:7636:7636	1041237	13	True				
ANR	1041353	CompoundStatement		21:4:434:479	1041237	14					
ANR	1041354	IdentifierDeclStatement	"char * ccexpr = r_anal_cc_get ( core -> anal , cc ) ;"	214:4:7644:7689	1041237	0	True				
ANR	1041355	IdentifierDecl	"* ccexpr = r_anal_cc_get ( core -> anal , cc )"		1041237	0					
ANR	1041356	IdentifierDeclType	char *		1041237	0					
ANR	1041357	Identifier	ccexpr		1041237	1					
ANR	1041358	AssignmentExpression	"* ccexpr = r_anal_cc_get ( core -> anal , cc )"		1041237	2		=			
ANR	1041359	Identifier	ccexpr		1041237	0					
ANR	1041360	CallExpression	"r_anal_cc_get ( core -> anal , cc )"		1041237	1					
ANR	1041361	Callee	r_anal_cc_get		1041237	0					
ANR	1041362	Identifier	r_anal_cc_get		1041237	0					
ANR	1041363	ArgumentList	core -> anal		1041237	1					
ANR	1041364	Argument	core -> anal		1041237	0					
ANR	1041365	PtrMemberAccess	core -> anal		1041237	0					
ANR	1041366	Identifier	core		1041237	0					
ANR	1041367	Identifier	anal		1041237	1					
ANR	1041368	Argument	cc		1041237	1					
ANR	1041369	Identifier	cc		1041237	0					
ANR	1041370	ExpressionStatement	"pj_s ( pj , ccexpr )"	216:4:7763:7780	1041237	1	True				
ANR	1041371	CallExpression	"pj_s ( pj , ccexpr )"		1041237	0					
ANR	1041372	Callee	pj_s		1041237	0					
ANR	1041373	Identifier	pj_s		1041237	0					
ANR	1041374	ArgumentList	pj		1041237	1					
ANR	1041375	Argument	pj		1041237	0					
ANR	1041376	Identifier	pj		1041237	0					
ANR	1041377	Argument	ccexpr		1041237	1					
ANR	1041378	Identifier	ccexpr		1041237	0					
ANR	1041379	ExpressionStatement	free ( ccexpr )	217:4:7786:7799	1041237	2	True				
ANR	1041380	CallExpression	free ( ccexpr )		1041237	0					
ANR	1041381	Callee	free		1041237	0					
ANR	1041382	Identifier	free		1041237	0					
ANR	1041383	ArgumentList	ccexpr		1041237	1					
ANR	1041384	Argument	ccexpr		1041237	0					
ANR	1041385	Identifier	ccexpr		1041237	0					
ANR	1041386	ExpressionStatement	pj_end ( pj )	219:3:7809:7820	1041237	15	True				
ANR	1041387	CallExpression	pj_end ( pj )		1041237	0					
ANR	1041388	Callee	pj_end		1041237	0					
ANR	1041389	Identifier	pj_end		1041237	0					
ANR	1041390	ArgumentList	pj		1041237	1					
ANR	1041391	Argument	pj		1041237	0					
ANR	1041392	Identifier	pj		1041237	0					
ANR	1041393	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	220:3:7825:7863	1041237	16	True				
ANR	1041394	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		1041237	0					
ANR	1041395	Callee	r_cons_printf		1041237	0					
ANR	1041396	Identifier	r_cons_printf		1041237	0					
ANR	1041397	ArgumentList	"""%s\\n"""		1041237	1					
ANR	1041398	Argument	"""%s\\n"""		1041237	0					
ANR	1041399	PrimaryExpression	"""%s\\n"""		1041237	0					
ANR	1041400	Argument	pj_string ( pj )		1041237	1					
ANR	1041401	CallExpression	pj_string ( pj )		1041237	0					
ANR	1041402	Callee	pj_string		1041237	0					
ANR	1041403	Identifier	pj_string		1041237	0					
ANR	1041404	ArgumentList	pj		1041237	1					
ANR	1041405	Argument	pj		1041237	0					
ANR	1041406	Identifier	pj		1041237	0					
ANR	1041407	ExpressionStatement	pj_free ( pj )	221:3:7868:7880	1041237	17	True				
ANR	1041408	CallExpression	pj_free ( pj )		1041237	0					
ANR	1041409	Callee	pj_free		1041237	0					
ANR	1041410	Identifier	pj_free		1041237	0					
ANR	1041411	ArgumentList	pj		1041237	1					
ANR	1041412	Argument	pj		1041237	0					
ANR	1041413	Identifier	pj		1041237	0					
ANR	1041414	ExpressionStatement	r_list_free ( list )	222:3:7885:7903	1041237	18	True				
ANR	1041415	CallExpression	r_list_free ( list )		1041237	0					
ANR	1041416	Callee	r_list_free		1041237	0					
ANR	1041417	Identifier	r_list_free		1041237	0					
ANR	1041418	ArgumentList	list		1041237	1					
ANR	1041419	Argument	list		1041237	0					
ANR	1041420	Identifier	list		1041237	0					
ANR	1041421	ExpressionStatement	free ( ccs )	223:3:7908:7918	1041237	19	True				
ANR	1041422	CallExpression	free ( ccs )		1041237	0					
ANR	1041423	Callee	free		1041237	0					
ANR	1041424	Identifier	free		1041237	0					
ANR	1041425	ArgumentList	ccs		1041237	1					
ANR	1041426	Argument	ccs		1041237	0					
ANR	1041427	Identifier	ccs		1041237	0					
ANR	1041428	BreakStatement	break ;	225:2:7926:7931	1041237	11	True				
ANR	1041429	Label	case 'l' :	226:1:7934:7942	1041237	12	True				
ANR	1041430	CompoundStatement		38:3:858:872	1041237	13					
ANR	1041431	IdentifierDeclStatement	"char * ccs = r_core_cmd_strf ( core , ""afcl"" ) ;"	228:3:7951:7993	1041237	0	True				
ANR	1041432	IdentifierDecl	"* ccs = r_core_cmd_strf ( core , ""afcl"" )"		1041237	0					
ANR	1041433	IdentifierDeclType	char *		1041237	0					
ANR	1041434	Identifier	ccs		1041237	1					
ANR	1041435	AssignmentExpression	"* ccs = r_core_cmd_strf ( core , ""afcl"" )"		1041237	2		=			
ANR	1041436	Identifier	ccs		1041237	0					
ANR	1041437	CallExpression	"r_core_cmd_strf ( core , ""afcl"" )"		1041237	1					
ANR	1041438	Callee	r_core_cmd_strf		1041237	0					
ANR	1041439	Identifier	r_core_cmd_strf		1041237	0					
ANR	1041440	ArgumentList	core		1041237	1					
ANR	1041441	Argument	core		1041237	0					
ANR	1041442	Identifier	core		1041237	0					
ANR	1041443	Argument	"""afcl"""		1041237	1					
ANR	1041444	PrimaryExpression	"""afcl"""		1041237	0					
ANR	1041445	IdentifierDeclStatement	"RList * list = r_str_split_list ( ccs , ""\\n"" , 0 ) ;"	229:3:7998:8043	1041237	1	True				
ANR	1041446	IdentifierDecl	"* list = r_str_split_list ( ccs , ""\\n"" , 0 )"		1041237	0					
ANR	1041447	IdentifierDeclType	RList *		1041237	0					
ANR	1041448	Identifier	list		1041237	1					
ANR	1041449	AssignmentExpression	"* list = r_str_split_list ( ccs , ""\\n"" , 0 )"		1041237	2		=			
ANR	1041450	Identifier	list		1041237	0					
ANR	1041451	CallExpression	"r_str_split_list ( ccs , ""\\n"" , 0 )"		1041237	1					
ANR	1041452	Callee	r_str_split_list		1041237	0					
ANR	1041453	Identifier	r_str_split_list		1041237	0					
ANR	1041454	ArgumentList	ccs		1041237	1					
ANR	1041455	Argument	ccs		1041237	0					
ANR	1041456	Identifier	ccs		1041237	0					
ANR	1041457	Argument	"""\\n"""		1041237	1					
ANR	1041458	PrimaryExpression	"""\\n"""		1041237	0					
ANR	1041459	Argument	0		1041237	2					
ANR	1041460	PrimaryExpression	0		1041237	0					
ANR	1041461	IdentifierDeclStatement	RListIter * iter ;	230:3:8048:8063	1041237	2	True				
ANR	1041462	IdentifierDecl	* iter		1041237	0					
ANR	1041463	IdentifierDeclType	RListIter *		1041237	0					
ANR	1041464	Identifier	iter		1041237	1					
ANR	1041465	IdentifierDeclStatement	const char * cc ;	231:3:8068:8082	1041237	3	True				
ANR	1041466	IdentifierDecl	* cc		1041237	0					
ANR	1041467	IdentifierDeclType	const char *		1041237	0					
ANR	1041468	Identifier	cc		1041237	1					
ANR	1041469	Statement	r_list_foreach	232:3:8087:8100	1041237	4	True				
ANR	1041470	Statement	(	232:18:8102:8102	1041237	5	True				
ANR	1041471	Statement	list	232:19:8103:8106	1041237	6	True				
ANR	1041472	Statement	","	232:23:8107:8107	1041237	7	True				
ANR	1041473	Statement	iter	232:25:8109:8112	1041237	8	True				
ANR	1041474	Statement	","	232:29:8113:8113	1041237	9	True				
ANR	1041475	Statement	cc	232:31:8115:8116	1041237	10	True				
ANR	1041476	Statement	)	232:33:8117:8117	1041237	11	True				
ANR	1041477	CompoundStatement		40:4:915:960	1041237	12					
ANR	1041478	IdentifierDeclStatement	"char * ccexpr = r_anal_cc_get ( core -> anal , cc ) ;"	233:4:8125:8170	1041237	0	True				
ANR	1041479	IdentifierDecl	"* ccexpr = r_anal_cc_get ( core -> anal , cc )"		1041237	0					
ANR	1041480	IdentifierDeclType	char *		1041237	0					
ANR	1041481	Identifier	ccexpr		1041237	1					
ANR	1041482	AssignmentExpression	"* ccexpr = r_anal_cc_get ( core -> anal , cc )"		1041237	2		=			
ANR	1041483	Identifier	ccexpr		1041237	0					
ANR	1041484	CallExpression	"r_anal_cc_get ( core -> anal , cc )"		1041237	1					
ANR	1041485	Callee	r_anal_cc_get		1041237	0					
ANR	1041486	Identifier	r_anal_cc_get		1041237	0					
ANR	1041487	ArgumentList	core -> anal		1041237	1					
ANR	1041488	Argument	core -> anal		1041237	0					
ANR	1041489	PtrMemberAccess	core -> anal		1041237	0					
ANR	1041490	Identifier	core		1041237	0					
ANR	1041491	Identifier	anal		1041237	1					
ANR	1041492	Argument	cc		1041237	1					
ANR	1041493	Identifier	cc		1041237	0					
ANR	1041494	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , ccexpr )"	234:4:8176:8206	1041237	1	True				
ANR	1041495	CallExpression	"r_cons_printf ( ""%s\\n"" , ccexpr )"		1041237	0					
ANR	1041496	Callee	r_cons_printf		1041237	0					
ANR	1041497	Identifier	r_cons_printf		1041237	0					
ANR	1041498	ArgumentList	"""%s\\n"""		1041237	1					
ANR	1041499	Argument	"""%s\\n"""		1041237	0					
ANR	1041500	PrimaryExpression	"""%s\\n"""		1041237	0					
ANR	1041501	Argument	ccexpr		1041237	1					
ANR	1041502	Identifier	ccexpr		1041237	0					
ANR	1041503	ExpressionStatement	free ( ccexpr )	235:4:8212:8225	1041237	2	True				
ANR	1041504	CallExpression	free ( ccexpr )		1041237	0					
ANR	1041505	Callee	free		1041237	0					
ANR	1041506	Identifier	free		1041237	0					
ANR	1041507	ArgumentList	ccexpr		1041237	1					
ANR	1041508	Argument	ccexpr		1041237	0					
ANR	1041509	Identifier	ccexpr		1041237	0					
ANR	1041510	ExpressionStatement	r_list_free ( list )	237:3:8235:8253	1041237	13	True				
ANR	1041511	CallExpression	r_list_free ( list )		1041237	0					
ANR	1041512	Callee	r_list_free		1041237	0					
ANR	1041513	Identifier	r_list_free		1041237	0					
ANR	1041514	ArgumentList	list		1041237	1					
ANR	1041515	Argument	list		1041237	0					
ANR	1041516	Identifier	list		1041237	0					
ANR	1041517	ExpressionStatement	free ( ccs )	238:3:8258:8268	1041237	14	True				
ANR	1041518	CallExpression	free ( ccs )		1041237	0					
ANR	1041519	Callee	free		1041237	0					
ANR	1041520	Identifier	free		1041237	0					
ANR	1041521	ArgumentList	ccs		1041237	1					
ANR	1041522	Argument	ccs		1041237	0					
ANR	1041523	Identifier	ccs		1041237	0					
ANR	1041524	BreakStatement	break ;	240:2:8276:8281	1041237	14	True				
ANR	1041525	Label	case '*' :	241:1:8284:8292	1041237	15	True				
ANR	1041526	CompoundStatement		53:3:1208:1222	1041237	16					
ANR	1041527	IdentifierDeclStatement	"char * ccs = r_core_cmd_strf ( core , ""afcl"" ) ;"	243:3:8301:8343	1041237	0	True				
ANR	1041528	IdentifierDecl	"* ccs = r_core_cmd_strf ( core , ""afcl"" )"		1041237	0					
ANR	1041529	IdentifierDeclType	char *		1041237	0					
ANR	1041530	Identifier	ccs		1041237	1					
ANR	1041531	AssignmentExpression	"* ccs = r_core_cmd_strf ( core , ""afcl"" )"		1041237	2		=			
ANR	1041532	Identifier	ccs		1041237	0					
ANR	1041533	CallExpression	"r_core_cmd_strf ( core , ""afcl"" )"		1041237	1					
ANR	1041534	Callee	r_core_cmd_strf		1041237	0					
ANR	1041535	Identifier	r_core_cmd_strf		1041237	0					
ANR	1041536	ArgumentList	core		1041237	1					
ANR	1041537	Argument	core		1041237	0					
ANR	1041538	Identifier	core		1041237	0					
ANR	1041539	Argument	"""afcl"""		1041237	1					
ANR	1041540	PrimaryExpression	"""afcl"""		1041237	0					
ANR	1041541	IdentifierDeclStatement	"RList * list = r_str_split_list ( ccs , ""\\n"" , 0 ) ;"	244:3:8348:8393	1041237	1	True				
ANR	1041542	IdentifierDecl	"* list = r_str_split_list ( ccs , ""\\n"" , 0 )"		1041237	0					
ANR	1041543	IdentifierDeclType	RList *		1041237	0					
ANR	1041544	Identifier	list		1041237	1					
ANR	1041545	AssignmentExpression	"* list = r_str_split_list ( ccs , ""\\n"" , 0 )"		1041237	2		=			
ANR	1041546	Identifier	list		1041237	0					
ANR	1041547	CallExpression	"r_str_split_list ( ccs , ""\\n"" , 0 )"		1041237	1					
ANR	1041548	Callee	r_str_split_list		1041237	0					
ANR	1041549	Identifier	r_str_split_list		1041237	0					
ANR	1041550	ArgumentList	ccs		1041237	1					
ANR	1041551	Argument	ccs		1041237	0					
ANR	1041552	Identifier	ccs		1041237	0					
ANR	1041553	Argument	"""\\n"""		1041237	1					
ANR	1041554	PrimaryExpression	"""\\n"""		1041237	0					
ANR	1041555	Argument	0		1041237	2					
ANR	1041556	PrimaryExpression	0		1041237	0					
ANR	1041557	IdentifierDeclStatement	RListIter * iter ;	245:3:8398:8413	1041237	2	True				
ANR	1041558	IdentifierDecl	* iter		1041237	0					
ANR	1041559	IdentifierDeclType	RListIter *		1041237	0					
ANR	1041560	Identifier	iter		1041237	1					
ANR	1041561	IdentifierDeclStatement	const char * cc ;	246:3:8418:8432	1041237	3	True				
ANR	1041562	IdentifierDecl	* cc		1041237	0					
ANR	1041563	IdentifierDeclType	const char *		1041237	0					
ANR	1041564	Identifier	cc		1041237	1					
ANR	1041565	Statement	r_list_foreach	247:3:8437:8450	1041237	4	True				
ANR	1041566	Statement	(	247:18:8452:8452	1041237	5	True				
ANR	1041567	Statement	list	247:19:8453:8456	1041237	6	True				
ANR	1041568	Statement	","	247:23:8457:8457	1041237	7	True				
ANR	1041569	Statement	iter	247:25:8459:8462	1041237	8	True				
ANR	1041570	Statement	","	247:29:8463:8463	1041237	9	True				
ANR	1041571	Statement	cc	247:31:8465:8466	1041237	10	True				
ANR	1041572	Statement	)	247:33:8467:8467	1041237	11	True				
ANR	1041573	CompoundStatement		55:4:1265:1310	1041237	12					
ANR	1041574	IdentifierDeclStatement	"char * ccexpr = r_anal_cc_get ( core -> anal , cc ) ;"	248:4:8475:8520	1041237	0	True				
ANR	1041575	IdentifierDecl	"* ccexpr = r_anal_cc_get ( core -> anal , cc )"		1041237	0					
ANR	1041576	IdentifierDeclType	char *		1041237	0					
ANR	1041577	Identifier	ccexpr		1041237	1					
ANR	1041578	AssignmentExpression	"* ccexpr = r_anal_cc_get ( core -> anal , cc )"		1041237	2		=			
ANR	1041579	Identifier	ccexpr		1041237	0					
ANR	1041580	CallExpression	"r_anal_cc_get ( core -> anal , cc )"		1041237	1					
ANR	1041581	Callee	r_anal_cc_get		1041237	0					
ANR	1041582	Identifier	r_anal_cc_get		1041237	0					
ANR	1041583	ArgumentList	core -> anal		1041237	1					
ANR	1041584	Argument	core -> anal		1041237	0					
ANR	1041585	PtrMemberAccess	core -> anal		1041237	0					
ANR	1041586	Identifier	core		1041237	0					
ANR	1041587	Identifier	anal		1041237	1					
ANR	1041588	Argument	cc		1041237	1					
ANR	1041589	Identifier	cc		1041237	0					
ANR	1041590	ExpressionStatement	"r_cons_printf ( ""tfc %s\\n"" , ccexpr )"	249:4:8526:8560	1041237	1	True				
ANR	1041591	CallExpression	"r_cons_printf ( ""tfc %s\\n"" , ccexpr )"		1041237	0					
ANR	1041592	Callee	r_cons_printf		1041237	0					
ANR	1041593	Identifier	r_cons_printf		1041237	0					
ANR	1041594	ArgumentList	"""tfc %s\\n"""		1041237	1					
ANR	1041595	Argument	"""tfc %s\\n"""		1041237	0					
ANR	1041596	PrimaryExpression	"""tfc %s\\n"""		1041237	0					
ANR	1041597	Argument	ccexpr		1041237	1					
ANR	1041598	Identifier	ccexpr		1041237	0					
ANR	1041599	ExpressionStatement	free ( ccexpr )	250:4:8566:8579	1041237	2	True				
ANR	1041600	CallExpression	free ( ccexpr )		1041237	0					
ANR	1041601	Callee	free		1041237	0					
ANR	1041602	Identifier	free		1041237	0					
ANR	1041603	ArgumentList	ccexpr		1041237	1					
ANR	1041604	Argument	ccexpr		1041237	0					
ANR	1041605	Identifier	ccexpr		1041237	0					
ANR	1041606	ExpressionStatement	r_list_free ( list )	252:3:8589:8607	1041237	13	True				
ANR	1041607	CallExpression	r_list_free ( list )		1041237	0					
ANR	1041608	Callee	r_list_free		1041237	0					
ANR	1041609	Identifier	r_list_free		1041237	0					
ANR	1041610	ArgumentList	list		1041237	1					
ANR	1041611	Argument	list		1041237	0					
ANR	1041612	Identifier	list		1041237	0					
ANR	1041613	ExpressionStatement	free ( ccs )	253:3:8612:8622	1041237	14	True				
ANR	1041614	CallExpression	free ( ccs )		1041237	0					
ANR	1041615	Callee	free		1041237	0					
ANR	1041616	Identifier	free		1041237	0					
ANR	1041617	ArgumentList	ccs		1041237	1					
ANR	1041618	Argument	ccs		1041237	0					
ANR	1041619	Identifier	ccs		1041237	0					
ANR	1041620	BreakStatement	break ;	255:2:8630:8635	1041237	17	True				
ANR	1041621	Label	case 'k' :	256:1:8638:8646	1041237	18	True				
ANR	1041622	ExpressionStatement	"r_core_cmd0 ( core , ""afck"" )"	257:2:8650:8676	1041237	19	True				
ANR	1041623	CallExpression	"r_core_cmd0 ( core , ""afck"" )"		1041237	0					
ANR	1041624	Callee	r_core_cmd0		1041237	0					
ANR	1041625	Identifier	r_core_cmd0		1041237	0					
ANR	1041626	ArgumentList	core		1041237	1					
ANR	1041627	Argument	core		1041237	0					
ANR	1041628	Identifier	core		1041237	0					
ANR	1041629	Argument	"""afck"""		1041237	1					
ANR	1041630	PrimaryExpression	"""afck"""		1041237	0					
ANR	1041631	BreakStatement	break ;	258:2:8680:8685	1041237	20	True				
ANR	1041632	Label	case ' ' :	259:1:8688:8696	1041237	21	True				
ANR	1041633	IfStatement	"if ( strchr ( input , '(' ) )"		1041237	22					
ANR	1041634	Condition	"strchr ( input , '(' )"	260:6:8704:8722	1041237	0	True				
ANR	1041635	CallExpression	"strchr ( input , '(' )"		1041237	0					
ANR	1041636	Callee	strchr		1041237	0					
ANR	1041637	Identifier	strchr		1041237	0					
ANR	1041638	ArgumentList	input		1041237	1					
ANR	1041639	Argument	input		1041237	0					
ANR	1041640	Identifier	input		1041237	0					
ANR	1041641	Argument	'('		1041237	1					
ANR	1041642	PrimaryExpression	'('		1041237	0					
ANR	1041643	CompoundStatement		67:27:1515:1515	1041237	1					
ANR	1041644	ExpressionStatement	"r_anal_cc_set ( core -> anal , input + 1 )"	261:3:8730:8767	1041237	0	True				
ANR	1041645	CallExpression	"r_anal_cc_set ( core -> anal , input + 1 )"		1041237	0					
ANR	1041646	Callee	r_anal_cc_set		1041237	0					
ANR	1041647	Identifier	r_anal_cc_set		1041237	0					
ANR	1041648	ArgumentList	core -> anal		1041237	1					
ANR	1041649	Argument	core -> anal		1041237	0					
ANR	1041650	PtrMemberAccess	core -> anal		1041237	0					
ANR	1041651	Identifier	core		1041237	0					
ANR	1041652	Identifier	anal		1041237	1					
ANR	1041653	Argument	input + 1		1041237	1					
ANR	1041654	AdditiveExpression	input + 1		1041237	0		+			
ANR	1041655	Identifier	input		1041237	0					
ANR	1041656	PrimaryExpression	1		1041237	1					
ANR	1041657	ElseStatement	else		1041237	0					
ANR	1041658	CompoundStatement		70:3:1573:1621	1041237	0					
ANR	1041659	IdentifierDeclStatement	"char * cc = r_anal_cc_get ( core -> anal , input + 1 ) ;"	263:3:8783:8831	1041237	0	True				
ANR	1041660	IdentifierDecl	"* cc = r_anal_cc_get ( core -> anal , input + 1 )"		1041237	0					
ANR	1041661	IdentifierDeclType	char *		1041237	0					
ANR	1041662	Identifier	cc		1041237	1					
ANR	1041663	AssignmentExpression	"* cc = r_anal_cc_get ( core -> anal , input + 1 )"		1041237	2		=			
ANR	1041664	Identifier	cc		1041237	0					
ANR	1041665	CallExpression	"r_anal_cc_get ( core -> anal , input + 1 )"		1041237	1					
ANR	1041666	Callee	r_anal_cc_get		1041237	0					
ANR	1041667	Identifier	r_anal_cc_get		1041237	0					
ANR	1041668	ArgumentList	core -> anal		1041237	1					
ANR	1041669	Argument	core -> anal		1041237	0					
ANR	1041670	PtrMemberAccess	core -> anal		1041237	0					
ANR	1041671	Identifier	core		1041237	0					
ANR	1041672	Identifier	anal		1041237	1					
ANR	1041673	Argument	input + 1		1041237	1					
ANR	1041674	AdditiveExpression	input + 1		1041237	0		+			
ANR	1041675	Identifier	input		1041237	0					
ANR	1041676	PrimaryExpression	1		1041237	1					
ANR	1041677	IfStatement	if ( cc )		1041237	1					
ANR	1041678	Condition	cc	264:7:8840:8841	1041237	0	True				
ANR	1041679	Identifier	cc		1041237	0					
ANR	1041680	CompoundStatement		71:11:1634:1634	1041237	1					
ANR	1041681	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , cc )"	265:4:8850:8876	1041237	0	True				
ANR	1041682	CallExpression	"r_cons_printf ( ""%s\\n"" , cc )"		1041237	0					
ANR	1041683	Callee	r_cons_printf		1041237	0					
ANR	1041684	Identifier	r_cons_printf		1041237	0					
ANR	1041685	ArgumentList	"""%s\\n"""		1041237	1					
ANR	1041686	Argument	"""%s\\n"""		1041237	0					
ANR	1041687	PrimaryExpression	"""%s\\n"""		1041237	0					
ANR	1041688	Argument	cc		1041237	1					
ANR	1041689	Identifier	cc		1041237	0					
ANR	1041690	ExpressionStatement	free ( cc )	266:4:8882:8891	1041237	1	True				
ANR	1041691	CallExpression	free ( cc )		1041237	0					
ANR	1041692	Callee	free		1041237	0					
ANR	1041693	Identifier	free		1041237	0					
ANR	1041694	ArgumentList	cc		1041237	1					
ANR	1041695	Argument	cc		1041237	0					
ANR	1041696	Identifier	cc		1041237	0					
ANR	1041697	BreakStatement	break ;	269:2:8904:8909	1041237	23	True				
ANR	1041698	ReturnType	static void		1041237	1					
ANR	1041699	Identifier	__core_cmd_tcc		1041237	2					
ANR	1041700	ParameterList	"RCore * core , const char * input"		1041237	3					
ANR	1041701	Parameter	RCore * core	194:27:7177:7187	1041237	0	True				
ANR	1041702	ParameterType	RCore *		1041237	0					
ANR	1041703	Identifier	core		1041237	1					
ANR	1041704	Parameter	const char * input	194:40:7190:7206	1041237	1	True				
ANR	1041705	ParameterType	const char *		1041237	0					
ANR	1041706	Identifier	input		1041237	1					
ANR	1041707	CFGEntryNode	ENTRY		1041237		True				
ANR	1041708	CFGExitNode	EXIT		1041237		True				
ANR	1041709	Symbol	cc		1041237						
ANR	1041710	Symbol	pj_string		1041237						
ANR	1041711	Symbol	help_msg_tcc		1041237						
ANR	1041712	Symbol	ccexpr		1041237						
ANR	1041713	Symbol	* input		1041237						
ANR	1041714	Symbol	* core		1041237						
ANR	1041715	Symbol	r_str_split_list		1041237						
ANR	1041716	Symbol	iter		1041237						
ANR	1041717	Symbol	strchr		1041237						
ANR	1041718	Symbol	list		1041237						
ANR	1041719	Symbol	core -> anal		1041237						
ANR	1041720	Symbol	core		1041237						
ANR	1041721	Symbol	input		1041237						
ANR	1041722	Symbol	r_core_cmd_strf		1041237						
ANR	1041723	Symbol	ccs		1041237						
ANR	1041724	Symbol	r_str_trim_ro		1041237						
ANR	1041725	Symbol	r_anal_cc_get		1041237						
ANR	1041726	Symbol	pj		1041237						
ANR	1041727	Symbol	pj_new		1041237						
ANR	1041728	Function	showFormat	273:0:8917:9671							
ANR	1041729	FunctionDef	"showFormat (RCore * core , const char * name , int mode)"		1041728	0					
ANR	1041730	CompoundStatement		273:64:8981:9671	1041728	0					
ANR	1041731	IdentifierDeclStatement	"const char * isenum = sdb_const_get ( core -> anal -> sdb_types , name , 0 ) ;"	274:1:8984:9051	1041728	0	True				
ANR	1041732	IdentifierDecl	"* isenum = sdb_const_get ( core -> anal -> sdb_types , name , 0 )"		1041728	0					
ANR	1041733	IdentifierDeclType	const char *		1041728	0					
ANR	1041734	Identifier	isenum		1041728	1					
ANR	1041735	AssignmentExpression	"* isenum = sdb_const_get ( core -> anal -> sdb_types , name , 0 )"		1041728	2		=			
ANR	1041736	Identifier	isenum		1041728	0					
ANR	1041737	CallExpression	"sdb_const_get ( core -> anal -> sdb_types , name , 0 )"		1041728	1					
ANR	1041738	Callee	sdb_const_get		1041728	0					
ANR	1041739	Identifier	sdb_const_get		1041728	0					
ANR	1041740	ArgumentList	core -> anal -> sdb_types		1041728	1					
ANR	1041741	Argument	core -> anal -> sdb_types		1041728	0					
ANR	1041742	PtrMemberAccess	core -> anal -> sdb_types		1041728	0					
ANR	1041743	PtrMemberAccess	core -> anal		1041728	0					
ANR	1041744	Identifier	core		1041728	0					
ANR	1041745	Identifier	anal		1041728	1					
ANR	1041746	Identifier	sdb_types		1041728	1					
ANR	1041747	Argument	name		1041728	1					
ANR	1041748	Identifier	name		1041728	0					
ANR	1041749	Argument	0		1041728	2					
ANR	1041750	PrimaryExpression	0		1041728	0					
ANR	1041751	IfStatement	"if ( isenum && ! strcmp ( isenum , ""enum"" ) )"		1041728	1					
ANR	1041752	Condition	"isenum && ! strcmp ( isenum , ""enum"" )"	275:5:9058:9091	1041728	0	True				
ANR	1041753	AndExpression	"isenum && ! strcmp ( isenum , ""enum"" )"		1041728	0		&&			
ANR	1041754	Identifier	isenum		1041728	0					
ANR	1041755	UnaryOperationExpression	"! strcmp ( isenum , ""enum"" )"		1041728	1					
ANR	1041756	UnaryOperator	!		1041728	0					
ANR	1041757	CallExpression	"strcmp ( isenum , ""enum"" )"		1041728	1					
ANR	1041758	Callee	strcmp		1041728	0					
ANR	1041759	Identifier	strcmp		1041728	0					
ANR	1041760	ArgumentList	isenum		1041728	1					
ANR	1041761	Argument	isenum		1041728	0					
ANR	1041762	Identifier	isenum		1041728	0					
ANR	1041763	Argument	"""enum"""		1041728	1					
ANR	1041764	PrimaryExpression	"""enum"""		1041728	0					
ANR	1041765	CompoundStatement		3:41:112:112	1041728	1					
ANR	1041766	ExpressionStatement	"eprintf ( ""IS ENUM\\n"" )"	276:2:9098:9119	1041728	0	True				
ANR	1041767	CallExpression	"eprintf ( ""IS ENUM\\n"" )"		1041728	0					
ANR	1041768	Callee	eprintf		1041728	0					
ANR	1041769	Identifier	eprintf		1041728	0					
ANR	1041770	ArgumentList	"""IS ENUM\\n"""		1041728	1					
ANR	1041771	Argument	"""IS ENUM\\n"""		1041728	0					
ANR	1041772	PrimaryExpression	"""IS ENUM\\n"""		1041728	0					
ANR	1041773	ElseStatement	else		1041728	0					
ANR	1041774	CompoundStatement		6:2:151:206	1041728	0					
ANR	1041775	IdentifierDeclStatement	"char * fmt = r_type_format ( core -> anal -> sdb_types , name ) ;"	278:2:9133:9188	1041728	0	True				
ANR	1041776	IdentifierDecl	"* fmt = r_type_format ( core -> anal -> sdb_types , name )"		1041728	0					
ANR	1041777	IdentifierDeclType	char *		1041728	0					
ANR	1041778	Identifier	fmt		1041728	1					
ANR	1041779	AssignmentExpression	"* fmt = r_type_format ( core -> anal -> sdb_types , name )"		1041728	2		=			
ANR	1041780	Identifier	fmt		1041728	0					
ANR	1041781	CallExpression	"r_type_format ( core -> anal -> sdb_types , name )"		1041728	1					
ANR	1041782	Callee	r_type_format		1041728	0					
ANR	1041783	Identifier	r_type_format		1041728	0					
ANR	1041784	ArgumentList	core -> anal -> sdb_types		1041728	1					
ANR	1041785	Argument	core -> anal -> sdb_types		1041728	0					
ANR	1041786	PtrMemberAccess	core -> anal -> sdb_types		1041728	0					
ANR	1041787	PtrMemberAccess	core -> anal		1041728	0					
ANR	1041788	Identifier	core		1041728	0					
ANR	1041789	Identifier	anal		1041728	1					
ANR	1041790	Identifier	sdb_types		1041728	1					
ANR	1041791	Argument	name		1041728	1					
ANR	1041792	Identifier	name		1041728	0					
ANR	1041793	IfStatement	if ( fmt )		1041728	1					
ANR	1041794	Condition	fmt	279:6:9196:9198	1041728	0	True				
ANR	1041795	Identifier	fmt		1041728	0					
ANR	1041796	CompoundStatement		7:11:219:219	1041728	1					
ANR	1041797	ExpressionStatement	r_str_trim ( fmt )	280:3:9206:9222	1041728	0	True				
ANR	1041798	CallExpression	r_str_trim ( fmt )		1041728	0					
ANR	1041799	Callee	r_str_trim		1041728	0					
ANR	1041800	Identifier	r_str_trim		1041728	0					
ANR	1041801	ArgumentList	fmt		1041728	1					
ANR	1041802	Argument	fmt		1041728	0					
ANR	1041803	Identifier	fmt		1041728	0					
ANR	1041804	IfStatement	if ( mode == 'j' )		1041728	1					
ANR	1041805	Condition	mode == 'j'	281:7:9231:9241	1041728	0	True				
ANR	1041806	EqualityExpression	mode == 'j'		1041728	0		==			
ANR	1041807	Identifier	mode		1041728	0					
ANR	1041808	PrimaryExpression	'j'		1041728	1					
ANR	1041809	CompoundStatement		10:4:268:286	1041728	1					
ANR	1041810	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	282:4:9250:9268	1041728	0	True				
ANR	1041811	IdentifierDecl	* pj = pj_new ( )		1041728	0					
ANR	1041812	IdentifierDeclType	PJ *		1041728	0					
ANR	1041813	Identifier	pj		1041728	1					
ANR	1041814	AssignmentExpression	* pj = pj_new ( )		1041728	2		=			
ANR	1041815	Identifier	pj		1041728	0					
ANR	1041816	CallExpression	pj_new ( )		1041728	1					
ANR	1041817	Callee	pj_new		1041728	0					
ANR	1041818	Identifier	pj_new		1041728	0					
ANR	1041819	ArgumentList			1041728	1					
ANR	1041820	IfStatement	if ( ! pj )		1041728	1					
ANR	1041821	Condition	! pj	283:8:9278:9280	1041728	0	True				
ANR	1041822	UnaryOperationExpression	! pj		1041728	0					
ANR	1041823	UnaryOperator	!		1041728	0					
ANR	1041824	Identifier	pj		1041728	1					
ANR	1041825	CompoundStatement		11:13:301:301	1041728	1					
ANR	1041826	ReturnStatement	return ;	284:5:9290:9296	1041728	0	True				
ANR	1041827	ExpressionStatement	pj_o ( pj )	286:4:9308:9317	1041728	2	True				
ANR	1041828	CallExpression	pj_o ( pj )		1041728	0					
ANR	1041829	Callee	pj_o		1041728	0					
ANR	1041830	Identifier	pj_o		1041728	0					
ANR	1041831	ArgumentList	pj		1041728	1					
ANR	1041832	Argument	pj		1041728	0					
ANR	1041833	Identifier	pj		1041728	0					
ANR	1041834	ExpressionStatement	"pj_ks ( pj , ""name"" , name )"	287:4:9323:9347	1041728	3	True				
ANR	1041835	CallExpression	"pj_ks ( pj , ""name"" , name )"		1041728	0					
ANR	1041836	Callee	pj_ks		1041728	0					
ANR	1041837	Identifier	pj_ks		1041728	0					
ANR	1041838	ArgumentList	pj		1041728	1					
ANR	1041839	Argument	pj		1041728	0					
ANR	1041840	Identifier	pj		1041728	0					
ANR	1041841	Argument	"""name"""		1041728	1					
ANR	1041842	PrimaryExpression	"""name"""		1041728	0					
ANR	1041843	Argument	name		1041728	2					
ANR	1041844	Identifier	name		1041728	0					
ANR	1041845	ExpressionStatement	"pj_ks ( pj , ""format"" , fmt )"	288:4:9353:9378	1041728	4	True				
ANR	1041846	CallExpression	"pj_ks ( pj , ""format"" , fmt )"		1041728	0					
ANR	1041847	Callee	pj_ks		1041728	0					
ANR	1041848	Identifier	pj_ks		1041728	0					
ANR	1041849	ArgumentList	pj		1041728	1					
ANR	1041850	Argument	pj		1041728	0					
ANR	1041851	Identifier	pj		1041728	0					
ANR	1041852	Argument	"""format"""		1041728	1					
ANR	1041853	PrimaryExpression	"""format"""		1041728	0					
ANR	1041854	Argument	fmt		1041728	2					
ANR	1041855	Identifier	fmt		1041728	0					
ANR	1041856	ExpressionStatement	pj_end ( pj )	289:4:9384:9395	1041728	5	True				
ANR	1041857	CallExpression	pj_end ( pj )		1041728	0					
ANR	1041858	Callee	pj_end		1041728	0					
ANR	1041859	Identifier	pj_end		1041728	0					
ANR	1041860	ArgumentList	pj		1041728	1					
ANR	1041861	Argument	pj		1041728	0					
ANR	1041862	Identifier	pj		1041728	0					
ANR	1041863	ExpressionStatement	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"	290:4:9401:9437	1041728	6	True				
ANR	1041864	CallExpression	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"		1041728	0					
ANR	1041865	Callee	r_cons_printf		1041728	0					
ANR	1041866	Identifier	r_cons_printf		1041728	0					
ANR	1041867	ArgumentList	"""%s"""		1041728	1					
ANR	1041868	Argument	"""%s"""		1041728	0					
ANR	1041869	PrimaryExpression	"""%s"""		1041728	0					
ANR	1041870	Argument	pj_string ( pj )		1041728	1					
ANR	1041871	CallExpression	pj_string ( pj )		1041728	0					
ANR	1041872	Callee	pj_string		1041728	0					
ANR	1041873	Identifier	pj_string		1041728	0					
ANR	1041874	ArgumentList	pj		1041728	1					
ANR	1041875	Argument	pj		1041728	0					
ANR	1041876	Identifier	pj		1041728	0					
ANR	1041877	ExpressionStatement	pj_free ( pj )	291:4:9443:9455	1041728	7	True				
ANR	1041878	CallExpression	pj_free ( pj )		1041728	0					
ANR	1041879	Callee	pj_free		1041728	0					
ANR	1041880	Identifier	pj_free		1041728	0					
ANR	1041881	ArgumentList	pj		1041728	1					
ANR	1041882	Argument	pj		1041728	0					
ANR	1041883	Identifier	pj		1041728	0					
ANR	1041884	ElseStatement	else		1041728	0					
ANR	1041885	CompoundStatement		20:10:485:485	1041728	0					
ANR	1041886	IfStatement	if ( mode )		1041728	0					
ANR	1041887	Condition	mode	293:8:9477:9480	1041728	0	True				
ANR	1041888	Identifier	mode		1041728	0					
ANR	1041889	CompoundStatement		21:14:501:501	1041728	1					
ANR	1041890	ExpressionStatement	"r_cons_printf ( ""pf.%s %s\\n"" , name , fmt )"	294:5:9490:9529	1041728	0	True				
ANR	1041891	CallExpression	"r_cons_printf ( ""pf.%s %s\\n"" , name , fmt )"		1041728	0					
ANR	1041892	Callee	r_cons_printf		1041728	0					
ANR	1041893	Identifier	r_cons_printf		1041728	0					
ANR	1041894	ArgumentList	"""pf.%s %s\\n"""		1041728	1					
ANR	1041895	Argument	"""pf.%s %s\\n"""		1041728	0					
ANR	1041896	PrimaryExpression	"""pf.%s %s\\n"""		1041728	0					
ANR	1041897	Argument	name		1041728	1					
ANR	1041898	Identifier	name		1041728	0					
ANR	1041899	Argument	fmt		1041728	2					
ANR	1041900	Identifier	fmt		1041728	0					
ANR	1041901	ElseStatement	else		1041728	0					
ANR	1041902	CompoundStatement		23:11:560:560	1041728	0					
ANR	1041903	ExpressionStatement	"r_cons_printf ( ""pf %s\\n"" , fmt )"	296:5:9549:9579	1041728	0	True				
ANR	1041904	CallExpression	"r_cons_printf ( ""pf %s\\n"" , fmt )"		1041728	0					
ANR	1041905	Callee	r_cons_printf		1041728	0					
ANR	1041906	Identifier	r_cons_printf		1041728	0					
ANR	1041907	ArgumentList	"""pf %s\\n"""		1041728	1					
ANR	1041908	Argument	"""pf %s\\n"""		1041728	0					
ANR	1041909	PrimaryExpression	"""pf %s\\n"""		1041728	0					
ANR	1041910	Argument	fmt		1041728	1					
ANR	1041911	Identifier	fmt		1041728	0					
ANR	1041912	ExpressionStatement	free ( fmt )	299:3:9595:9605	1041728	2	True				
ANR	1041913	CallExpression	free ( fmt )		1041728	0					
ANR	1041914	Callee	free		1041728	0					
ANR	1041915	Identifier	free		1041728	0					
ANR	1041916	ArgumentList	fmt		1041728	1					
ANR	1041917	Argument	fmt		1041728	0					
ANR	1041918	Identifier	fmt		1041728	0					
ANR	1041919	ElseStatement	else		1041728	0					
ANR	1041920	CompoundStatement		28:9:634:634	1041728	0					
ANR	1041921	ExpressionStatement	"eprintf ( ""Cannot find '%s' type\\n"" , name )"	301:3:9621:9662	1041728	0	True				
ANR	1041922	CallExpression	"eprintf ( ""Cannot find '%s' type\\n"" , name )"		1041728	0					
ANR	1041923	Callee	eprintf		1041728	0					
ANR	1041924	Identifier	eprintf		1041728	0					
ANR	1041925	ArgumentList	"""Cannot find '%s' type\\n"""		1041728	1					
ANR	1041926	Argument	"""Cannot find '%s' type\\n"""		1041728	0					
ANR	1041927	PrimaryExpression	"""Cannot find '%s' type\\n"""		1041728	0					
ANR	1041928	Argument	name		1041728	1					
ANR	1041929	Identifier	name		1041728	0					
ANR	1041930	ReturnType	static void		1041728	1					
ANR	1041931	Identifier	showFormat		1041728	2					
ANR	1041932	ParameterList	"RCore * core , const char * name , int mode"		1041728	3					
ANR	1041933	Parameter	RCore * core	273:23:8940:8950	1041728	0	True				
ANR	1041934	ParameterType	RCore *		1041728	0					
ANR	1041935	Identifier	core		1041728	1					
ANR	1041936	Parameter	const char * name	273:36:8953:8968	1041728	1	True				
ANR	1041937	ParameterType	const char *		1041728	0					
ANR	1041938	Identifier	name		1041728	1					
ANR	1041939	Parameter	int mode	273:54:8971:8978	1041728	2	True				
ANR	1041940	ParameterType	int		1041728	0					
ANR	1041941	Identifier	mode		1041728	1					
ANR	1041942	CFGEntryNode	ENTRY		1041728		True				
ANR	1041943	CFGExitNode	EXIT		1041728		True				
ANR	1041944	Symbol	strcmp		1041728						
ANR	1041945	Symbol	pj_string		1041728						
ANR	1041946	Symbol	* core		1041728						
ANR	1041947	Symbol	core -> anal -> sdb_types		1041728						
ANR	1041948	Symbol	fmt		1041728						
ANR	1041949	Symbol	sdb_const_get		1041728						
ANR	1041950	Symbol	core -> anal		1041728						
ANR	1041951	Symbol	mode		1041728						
ANR	1041952	Symbol	core		1041728						
ANR	1041953	Symbol	* core -> anal		1041728						
ANR	1041954	Symbol	name		1041728						
ANR	1041955	Symbol	pj		1041728						
ANR	1041956	Symbol	pj_new		1041728						
ANR	1041957	Symbol	isenum		1041728						
ANR	1041958	Symbol	r_type_format		1041728						
ANR	1041959	Symbol	* * core		1041728						
ANR	1041960	Function	cmd_tail	306:0:9674:10529							
ANR	1041961	FunctionDef	"cmd_tail (void * data , const char * _input)"		1041960	0					
ANR	1041962	CompoundStatement		306:52:9726:10529	1041960	0					
ANR	1041963	IdentifierDeclStatement	char * input = strdup ( _input ) ;	307:1:9739:9768	1041960	0	True				
ANR	1041964	IdentifierDecl	* input = strdup ( _input )		1041960	0					
ANR	1041965	IdentifierDeclType	char *		1041960	0					
ANR	1041966	Identifier	input		1041960	1					
ANR	1041967	AssignmentExpression	* input = strdup ( _input )		1041960	2		=			
ANR	1041968	Identifier	input		1041960	0					
ANR	1041969	CallExpression	strdup ( _input )		1041960	1					
ANR	1041970	Callee	strdup		1041960	0					
ANR	1041971	Identifier	strdup		1041960	0					
ANR	1041972	ArgumentList	_input		1041960	1					
ANR	1041973	Argument	_input		1041960	0					
ANR	1041974	Identifier	_input		1041960	0					
ANR	1041975	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	308:1:9771:9798	1041960	1	True				
ANR	1041976	IdentifierDecl	* core = ( RCore * ) data		1041960	0					
ANR	1041977	IdentifierDeclType	RCore *		1041960	0					
ANR	1041978	Identifier	core		1041960	1					
ANR	1041979	AssignmentExpression	* core = ( RCore * ) data		1041960	2		=			
ANR	1041980	Identifier	core		1041960	0					
ANR	1041981	CastExpression	( RCore * ) data		1041960	1					
ANR	1041982	CastTarget	RCore *		1041960	0					
ANR	1041983	Identifier	data		1041960	1					
ANR	1041984	IdentifierDeclStatement	int lines = 5 ;	309:1:9801:9814	1041960	2	True				
ANR	1041985	IdentifierDecl	lines = 5		1041960	0					
ANR	1041986	IdentifierDeclType	int		1041960	0					
ANR	1041987	Identifier	lines		1041960	1					
ANR	1041988	AssignmentExpression	lines = 5		1041960	2		=			
ANR	1041989	Identifier	lines		1041960	0					
ANR	1041990	PrimaryExpression	5		1041960	1					
ANR	1041991	IdentifierDeclStatement	"char * arg = strchr ( input , ' ' ) ;"	310:1:9817:9848	1041960	3	True				
ANR	1041992	IdentifierDecl	"* arg = strchr ( input , ' ' )"		1041960	0					
ANR	1041993	IdentifierDeclType	char *		1041960	0					
ANR	1041994	Identifier	arg		1041960	1					
ANR	1041995	AssignmentExpression	"* arg = strchr ( input , ' ' )"		1041960	2		=			
ANR	1041996	Identifier	arg		1041960	0					
ANR	1041997	CallExpression	"strchr ( input , ' ' )"		1041960	1					
ANR	1041998	Callee	strchr		1041960	0					
ANR	1041999	Identifier	strchr		1041960	0					
ANR	1042000	ArgumentList	input		1041960	1					
ANR	1042001	Argument	input		1041960	0					
ANR	1042002	Identifier	input		1041960	0					
ANR	1042003	Argument	' '		1041960	1					
ANR	1042004	PrimaryExpression	' '		1041960	0					
ANR	1042005	IdentifierDeclStatement	"char * tmp , * count ;"	311:1:9851:9868	1041960	4	True				
ANR	1042006	IdentifierDecl	* tmp		1041960	0					
ANR	1042007	IdentifierDeclType	char *		1041960	0					
ANR	1042008	Identifier	tmp		1041960	1					
ANR	1042009	IdentifierDecl	* count		1041960	1					
ANR	1042010	IdentifierDeclType	char *		1041960	0					
ANR	1042011	Identifier	count		1041960	1					
ANR	1042012	IfStatement	if ( arg )		1041960	5					
ANR	1042013	Condition	arg	312:5:9875:9877	1041960	0	True				
ANR	1042014	Identifier	arg		1041960	0					
ANR	1042015	CompoundStatement		7:10:153:153	1041960	1					
ANR	1042016	ExpressionStatement	arg = ( char * ) r_str_trim_ro ( arg + 1 )	313:2:9884:9921	1041960	0	True				
ANR	1042017	AssignmentExpression	arg = ( char * ) r_str_trim_ro ( arg + 1 )		1041960	0		=			
ANR	1042018	Identifier	arg		1041960	0					
ANR	1042019	CastExpression	( char * ) r_str_trim_ro ( arg + 1 )		1041960	1					
ANR	1042020	CastTarget	char *		1041960	0					
ANR	1042021	CallExpression	r_str_trim_ro ( arg + 1 )		1041960	1					
ANR	1042022	Callee	r_str_trim_ro		1041960	0					
ANR	1042023	Identifier	r_str_trim_ro		1041960	0					
ANR	1042024	ArgumentList	arg + 1		1041960	1					
ANR	1042025	Argument	arg + 1		1041960	0					
ANR	1042026	AdditiveExpression	arg + 1		1041960	0		+			
ANR	1042027	Identifier	arg		1041960	0					
ANR	1042028	PrimaryExpression	1		1041960	1					
ANR	1042029	ExpressionStatement	"count = strchr ( arg , ' ' )"	314:2:9955:9980	1041960	1	True				
ANR	1042030	AssignmentExpression	"count = strchr ( arg , ' ' )"		1041960	0		=			
ANR	1042031	Identifier	count		1041960	0					
ANR	1042032	CallExpression	"strchr ( arg , ' ' )"		1041960	1					
ANR	1042033	Callee	strchr		1041960	0					
ANR	1042034	Identifier	strchr		1041960	0					
ANR	1042035	ArgumentList	arg		1041960	1					
ANR	1042036	Argument	arg		1041960	0					
ANR	1042037	Identifier	arg		1041960	0					
ANR	1042038	Argument	' '		1041960	1					
ANR	1042039	PrimaryExpression	' '		1041960	0					
ANR	1042040	IfStatement	if ( count )		1041960	2					
ANR	1042041	Condition	count	315:6:9988:9992	1041960	0	True				
ANR	1042042	Identifier	count		1041960	0					
ANR	1042043	CompoundStatement		10:13:268:268	1041960	1					
ANR	1042044	ExpressionStatement	* count = 0	316:3:10000:10010	1041960	0	True				
ANR	1042045	AssignmentExpression	* count = 0		1041960	0		=			
ANR	1042046	UnaryOperationExpression	* count		1041960	0					
ANR	1042047	UnaryOperator	*		1041960	0					
ANR	1042048	Identifier	count		1041960	1					
ANR	1042049	PrimaryExpression	0		1041960	1					
ANR	1042050	ExpressionStatement	tmp = ( char * ) r_str_trim_ro ( count + 1 )	317:3:10048:10087	1041960	1	True				
ANR	1042051	AssignmentExpression	tmp = ( char * ) r_str_trim_ro ( count + 1 )		1041960	0		=			
ANR	1042052	Identifier	tmp		1041960	0					
ANR	1042053	CastExpression	( char * ) r_str_trim_ro ( count + 1 )		1041960	1					
ANR	1042054	CastTarget	char *		1041960	0					
ANR	1042055	CallExpression	r_str_trim_ro ( count + 1 )		1041960	1					
ANR	1042056	Callee	r_str_trim_ro		1041960	0					
ANR	1042057	Identifier	r_str_trim_ro		1041960	0					
ANR	1042058	ArgumentList	count + 1		1041960	1					
ANR	1042059	Argument	count + 1		1041960	0					
ANR	1042060	AdditiveExpression	count + 1		1041960	0		+			
ANR	1042061	Identifier	count		1041960	0					
ANR	1042062	PrimaryExpression	1		1041960	1					
ANR	1042063	ExpressionStatement	lines = atoi ( arg )	318:3:10092:10110	1041960	2	True				
ANR	1042064	AssignmentExpression	lines = atoi ( arg )		1041960	0		=			
ANR	1042065	Identifier	lines		1041960	0					
ANR	1042066	CallExpression	atoi ( arg )		1041960	1					
ANR	1042067	Callee	atoi		1041960	0					
ANR	1042068	Identifier	atoi		1041960	0					
ANR	1042069	ArgumentList	arg		1041960	1					
ANR	1042070	Argument	arg		1041960	0					
ANR	1042071	Identifier	arg		1041960	0					
ANR	1042072	ExpressionStatement	arg = tmp	319:3:10115:10124	1041960	3	True				
ANR	1042073	AssignmentExpression	arg = tmp		1041960	0		=			
ANR	1042074	Identifier	arg		1041960	0					
ANR	1042075	Identifier	tmp		1041960	1					
ANR	1042076	SwitchStatement	switch ( * input )		1041960	6					
ANR	1042077	Condition	* input	322:9:10142:10147	1041960	0	True				
ANR	1042078	UnaryOperationExpression	* input		1041960	0					
ANR	1042079	UnaryOperator	*		1041960	0					
ANR	1042080	Identifier	input		1041960	1					
ANR	1042081	CompoundStatement		17:17:423:423	1041960	1					
ANR	1042082	Label	case '?' :	323:1:10153:10161	1041960	0	True				
ANR	1042083	ExpressionStatement	"eprintf ( ""Usage: tail [file] # to list last n lines in file\\n"" )"	324:2:10176:10239	1041960	1	True				
ANR	1042084	CallExpression	"eprintf ( ""Usage: tail [file] # to list last n lines in file\\n"" )"		1041960	0					
ANR	1042085	Callee	eprintf		1041960	0					
ANR	1042086	Identifier	eprintf		1041960	0					
ANR	1042087	ArgumentList	"""Usage: tail [file] # to list last n lines in file\\n"""		1041960	1					
ANR	1042088	Argument	"""Usage: tail [file] # to list last n lines in file\\n"""		1041960	0					
ANR	1042089	PrimaryExpression	"""Usage: tail [file] # to list last n lines in file\\n"""		1041960	0					
ANR	1042090	BreakStatement	break ;	325:2:10243:10248	1041960	2	True				
ANR	1042091	Label	default :	326:1:10251:10258	1041960	3	True				
ANR	1042092	Identifier	default		1041960	0					
ANR	1042093	IfStatement	if ( ! arg )		1041960	4					
ANR	1042094	Condition	! arg	327:6:10276:10279	1041960	0	True				
ANR	1042095	UnaryOperationExpression	! arg		1041960	0					
ANR	1042096	UnaryOperator	!		1041960	0					
ANR	1042097	Identifier	arg		1041960	1					
ANR	1042098	CompoundStatement		22:12:555:555	1041960	1					
ANR	1042099	ExpressionStatement	"arg = """""	328:3:10287:10295	1041960	0	True				
ANR	1042100	AssignmentExpression	"arg = """""		1041960	0		=			
ANR	1042101	Identifier	arg		1041960	0					
ANR	1042102	PrimaryExpression	""""""		1041960	1					
ANR	1042103	IfStatement	"if ( r_fs_check ( core -> fs , arg ) )"		1041960	5					
ANR	1042104	Condition	"r_fs_check ( core -> fs , arg )"	330:6:10307:10332	1041960	0	True				
ANR	1042105	CallExpression	"r_fs_check ( core -> fs , arg )"		1041960	0					
ANR	1042106	Callee	r_fs_check		1041960	0					
ANR	1042107	Identifier	r_fs_check		1041960	0					
ANR	1042108	ArgumentList	core -> fs		1041960	1					
ANR	1042109	Argument	core -> fs		1041960	0					
ANR	1042110	PtrMemberAccess	core -> fs		1041960	0					
ANR	1042111	Identifier	core		1041960	0					
ANR	1042112	Identifier	fs		1041960	1					
ANR	1042113	Argument	arg		1041960	1					
ANR	1042114	Identifier	arg		1041960	0					
ANR	1042115	CompoundStatement		25:34:608:608	1041960	1					
ANR	1042116	ExpressionStatement	"r_core_cmdf ( core , ""md %s"" , arg )"	331:3:10340:10372	1041960	0	True				
ANR	1042117	CallExpression	"r_core_cmdf ( core , ""md %s"" , arg )"		1041960	0					
ANR	1042118	Callee	r_core_cmdf		1041960	0					
ANR	1042119	Identifier	r_core_cmdf		1041960	0					
ANR	1042120	ArgumentList	core		1041960	1					
ANR	1042121	Argument	core		1041960	0					
ANR	1042122	Identifier	core		1041960	0					
ANR	1042123	Argument	"""md %s"""		1041960	1					
ANR	1042124	PrimaryExpression	"""md %s"""		1041960	0					
ANR	1042125	Argument	arg		1041960	2					
ANR	1042126	Identifier	arg		1041960	0					
ANR	1042127	ElseStatement	else		1041960	0					
ANR	1042128	CompoundStatement		28:3:661:699	1041960	0					
ANR	1042129	IdentifierDeclStatement	"char * res = r_syscmd_tail ( arg , lines ) ;"	333:3:10388:10426	1041960	0	True				
ANR	1042130	IdentifierDecl	"* res = r_syscmd_tail ( arg , lines )"		1041960	0					
ANR	1042131	IdentifierDeclType	char *		1041960	0					
ANR	1042132	Identifier	res		1041960	1					
ANR	1042133	AssignmentExpression	"* res = r_syscmd_tail ( arg , lines )"		1041960	2		=			
ANR	1042134	Identifier	res		1041960	0					
ANR	1042135	CallExpression	"r_syscmd_tail ( arg , lines )"		1041960	1					
ANR	1042136	Callee	r_syscmd_tail		1041960	0					
ANR	1042137	Identifier	r_syscmd_tail		1041960	0					
ANR	1042138	ArgumentList	arg		1041960	1					
ANR	1042139	Argument	arg		1041960	0					
ANR	1042140	Identifier	arg		1041960	0					
ANR	1042141	Argument	lines		1041960	1					
ANR	1042142	Identifier	lines		1041960	0					
ANR	1042143	IfStatement	if ( res )		1041960	1					
ANR	1042144	Condition	res	334:7:10435:10437	1041960	0	True				
ANR	1042145	Identifier	res		1041960	0					
ANR	1042146	CompoundStatement		29:12:713:713	1041960	1					
ANR	1042147	ExpressionStatement	r_cons_print ( res )	335:4:10446:10464	1041960	0	True				
ANR	1042148	CallExpression	r_cons_print ( res )		1041960	0					
ANR	1042149	Callee	r_cons_print		1041960	0					
ANR	1042150	Identifier	r_cons_print		1041960	0					
ANR	1042151	ArgumentList	res		1041960	1					
ANR	1042152	Argument	res		1041960	0					
ANR	1042153	Identifier	res		1041960	0					
ANR	1042154	ExpressionStatement	free ( res )	336:4:10470:10480	1041960	1	True				
ANR	1042155	CallExpression	free ( res )		1041960	0					
ANR	1042156	Callee	free		1041960	0					
ANR	1042157	Identifier	free		1041960	0					
ANR	1042158	ArgumentList	res		1041960	1					
ANR	1042159	Argument	res		1041960	0					
ANR	1042160	Identifier	res		1041960	0					
ANR	1042161	BreakStatement	break ;	339:2:10493:10498	1041960	6	True				
ANR	1042162	ExpressionStatement	free ( input )	341:1:10504:10516	1041960	7	True				
ANR	1042163	CallExpression	free ( input )		1041960	0					
ANR	1042164	Callee	free		1041960	0					
ANR	1042165	Identifier	free		1041960	0					
ANR	1042166	ArgumentList	input		1041960	1					
ANR	1042167	Argument	input		1041960	0					
ANR	1042168	Identifier	input		1041960	0					
ANR	1042169	ReturnStatement	return 0 ;	342:1:10519:10527	1041960	8	True				
ANR	1042170	PrimaryExpression	0		1041960	0					
ANR	1042171	ReturnType	static int		1041960	1					
ANR	1042172	Identifier	cmd_tail		1041960	2					
ANR	1042173	ParameterList	"void * data , const char * _input"		1041960	3					
ANR	1042174	Parameter	void * data	306:20:9694:9703	1041960	0	True				
ANR	1042175	ParameterType	void *		1041960	0					
ANR	1042176	Identifier	data		1041960	1					
ANR	1042177	Parameter	const char * _input	306:32:9706:9723	1041960	1	True				
ANR	1042178	ParameterType	const char *		1041960	0					
ANR	1042179	Identifier	_input		1041960	1					
ANR	1042180	CFGEntryNode	ENTRY		1041960		True				
ANR	1042181	CFGExitNode	EXIT		1041960		True				
ANR	1042182	Symbol	atoi		1041960						
ANR	1042183	Symbol	res		1041960						
ANR	1042184	Symbol	data		1041960						
ANR	1042185	Symbol	count		1041960						
ANR	1042186	Symbol	* input		1041960						
ANR	1042187	Symbol	* core		1041960						
ANR	1042188	Symbol	strchr		1041960						
ANR	1042189	Symbol	input		1041960						
ANR	1042190	Symbol	core		1041960						
ANR	1042191	Symbol	* count		1041960						
ANR	1042192	Symbol	r_syscmd_tail		1041960						
ANR	1042193	Symbol	tmp		1041960						
ANR	1042194	Symbol	arg		1041960						
ANR	1042195	Symbol	r_str_trim_ro		1041960						
ANR	1042196	Symbol	strdup		1041960						
ANR	1042197	Symbol	core -> fs		1041960						
ANR	1042198	Symbol	_input		1041960						
ANR	1042199	Symbol	lines		1041960						
ANR	1042200	Symbol	r_fs_check		1041960						
ANR	1042201	Function	cmd_type_noreturn	345:0:10532:11834							
ANR	1042202	FunctionDef	"cmd_type_noreturn (RCore * core , const char * input)"		1042201	0					
ANR	1042203	CompoundStatement		345:62:10594:11834	1042201	0					
ANR	1042204	SwitchStatement	switch ( input [ 0 ] )		1042201	0					
ANR	1042205	Condition	input [ 0 ]	346:9:10605:10612	1042201	0	True				
ANR	1042206	ArrayIndexing	input [ 0 ]		1042201	0					
ANR	1042207	Identifier	input		1042201	0					
ANR	1042208	PrimaryExpression	0		1042201	1					
ANR	1042209	CompoundStatement		2:19:20:20	1042201	1					
ANR	1042210	Label	case '-' :	347:1:10618:10626	1042201	0	True				
ANR	1042211	IfStatement	if ( input [ 1 ] == '*' )		1042201	1					
ANR	1042212	Condition	input [ 1 ] == '*'	348:6:10643:10657	1042201	0	True				
ANR	1042213	EqualityExpression	input [ 1 ] == '*'		1042201	0		==			
ANR	1042214	ArrayIndexing	input [ 1 ]		1042201	0					
ANR	1042215	Identifier	input		1042201	0					
ANR	1042216	PrimaryExpression	1		1042201	1					
ANR	1042217	PrimaryExpression	'*'		1042201	1					
ANR	1042218	CompoundStatement		4:23:65:65	1042201	1					
ANR	1042219	ExpressionStatement	"r_core_cmd0 ( core , ""tn-`tn`"" )"	349:3:10665:10694	1042201	0	True				
ANR	1042220	CallExpression	"r_core_cmd0 ( core , ""tn-`tn`"" )"		1042201	0					
ANR	1042221	Callee	r_core_cmd0		1042201	0					
ANR	1042222	Identifier	r_core_cmd0		1042201	0					
ANR	1042223	ArgumentList	core		1042201	1					
ANR	1042224	Argument	core		1042201	0					
ANR	1042225	Identifier	core		1042201	0					
ANR	1042226	Argument	"""tn-`tn`"""		1042201	1					
ANR	1042227	PrimaryExpression	"""tn-`tn`"""		1042201	0					
ANR	1042228	ElseStatement	else		1042201	0					
ANR	1042229	CompoundStatement		10:3:196:238	1042201	0					
ANR	1042230	IdentifierDeclStatement	char * s = strdup ( r_str_trim_ro ( input + 1 ) ) ;	351:3:10710:10754	1042201	0	True				
ANR	1042231	IdentifierDecl	* s = strdup ( r_str_trim_ro ( input + 1 ) )		1042201	0					
ANR	1042232	IdentifierDeclType	char *		1042201	0					
ANR	1042233	Identifier	s		1042201	1					
ANR	1042234	AssignmentExpression	* s = strdup ( r_str_trim_ro ( input + 1 ) )		1042201	2		=			
ANR	1042235	Identifier	s		1042201	0					
ANR	1042236	CallExpression	strdup ( r_str_trim_ro ( input + 1 ) )		1042201	1					
ANR	1042237	Callee	strdup		1042201	0					
ANR	1042238	Identifier	strdup		1042201	0					
ANR	1042239	ArgumentList	r_str_trim_ro ( input + 1 )		1042201	1					
ANR	1042240	Argument	r_str_trim_ro ( input + 1 )		1042201	0					
ANR	1042241	CallExpression	r_str_trim_ro ( input + 1 )		1042201	0					
ANR	1042242	Callee	r_str_trim_ro		1042201	0					
ANR	1042243	Identifier	r_str_trim_ro		1042201	0					
ANR	1042244	ArgumentList	input + 1		1042201	1					
ANR	1042245	Argument	input + 1		1042201	0					
ANR	1042246	AdditiveExpression	input + 1		1042201	0		+			
ANR	1042247	Identifier	input		1042201	0					
ANR	1042248	PrimaryExpression	1		1042201	1					
ANR	1042249	IdentifierDeclStatement	RListIter * iter ;	352:3:10759:10774	1042201	1	True				
ANR	1042250	IdentifierDecl	* iter		1042201	0					
ANR	1042251	IdentifierDeclType	RListIter *		1042201	0					
ANR	1042252	Identifier	iter		1042201	1					
ANR	1042253	IdentifierDeclStatement	char * k ;	353:3:10779:10786	1042201	2	True				
ANR	1042254	IdentifierDecl	* k		1042201	0					
ANR	1042255	IdentifierDeclType	char *		1042201	0					
ANR	1042256	Identifier	k		1042201	1					
ANR	1042257	IdentifierDeclStatement	"RList * list = r_str_split_list ( s , "" "" , 0 ) ;"	354:3:10791:10833	1042201	3	True				
ANR	1042258	IdentifierDecl	"* list = r_str_split_list ( s , "" "" , 0 )"		1042201	0					
ANR	1042259	IdentifierDeclType	RList *		1042201	0					
ANR	1042260	Identifier	list		1042201	1					
ANR	1042261	AssignmentExpression	"* list = r_str_split_list ( s , "" "" , 0 )"		1042201	2		=			
ANR	1042262	Identifier	list		1042201	0					
ANR	1042263	CallExpression	"r_str_split_list ( s , "" "" , 0 )"		1042201	1					
ANR	1042264	Callee	r_str_split_list		1042201	0					
ANR	1042265	Identifier	r_str_split_list		1042201	0					
ANR	1042266	ArgumentList	s		1042201	1					
ANR	1042267	Argument	s		1042201	0					
ANR	1042268	Identifier	s		1042201	0					
ANR	1042269	Argument	""" """		1042201	1					
ANR	1042270	PrimaryExpression	""" """		1042201	0					
ANR	1042271	Argument	0		1042201	2					
ANR	1042272	PrimaryExpression	0		1042201	0					
ANR	1042273	Statement	r_list_foreach	355:3:10838:10851	1042201	4	True				
ANR	1042274	Statement	(	355:18:10853:10853	1042201	5	True				
ANR	1042275	Statement	list	355:19:10854:10857	1042201	6	True				
ANR	1042276	Statement	","	355:23:10858:10858	1042201	7	True				
ANR	1042277	Statement	iter	355:25:10860:10863	1042201	8	True				
ANR	1042278	Statement	","	355:29:10864:10864	1042201	9	True				
ANR	1042279	Statement	k	355:31:10866:10866	1042201	10	True				
ANR	1042280	Statement	)	355:32:10867:10867	1042201	11	True				
ANR	1042281	CompoundStatement		11:34:274:274	1042201	12					
ANR	1042282	ExpressionStatement	"r_anal_noreturn_drop ( core -> anal , k )"	356:4:10875:10911	1042201	0	True				
ANR	1042283	CallExpression	"r_anal_noreturn_drop ( core -> anal , k )"		1042201	0					
ANR	1042284	Callee	r_anal_noreturn_drop		1042201	0					
ANR	1042285	Identifier	r_anal_noreturn_drop		1042201	0					
ANR	1042286	ArgumentList	core -> anal		1042201	1					
ANR	1042287	Argument	core -> anal		1042201	0					
ANR	1042288	PtrMemberAccess	core -> anal		1042201	0					
ANR	1042289	Identifier	core		1042201	0					
ANR	1042290	Identifier	anal		1042201	1					
ANR	1042291	Argument	k		1042201	1					
ANR	1042292	Identifier	k		1042201	0					
ANR	1042293	ExpressionStatement	r_list_free ( list )	358:3:10921:10939	1042201	13	True				
ANR	1042294	CallExpression	r_list_free ( list )		1042201	0					
ANR	1042295	Callee	r_list_free		1042201	0					
ANR	1042296	Identifier	r_list_free		1042201	0					
ANR	1042297	ArgumentList	list		1042201	1					
ANR	1042298	Argument	list		1042201	0					
ANR	1042299	Identifier	list		1042201	0					
ANR	1042300	ExpressionStatement	free ( s )	359:3:10944:10952	1042201	14	True				
ANR	1042301	CallExpression	free ( s )		1042201	0					
ANR	1042302	Callee	free		1042201	0					
ANR	1042303	Identifier	free		1042201	0					
ANR	1042304	ArgumentList	s		1042201	1					
ANR	1042305	Argument	s		1042201	0					
ANR	1042306	Identifier	s		1042201	0					
ANR	1042307	BreakStatement	break ;	361:2:10960:10965	1042201	2	True				
ANR	1042308	Label	case ' ' :	362:1:10968:10976	1042201	3	True				
ANR	1042309	CompoundStatement		21:3:446:482	1042201	4					
ANR	1042310	IdentifierDeclStatement	const char * arg = r_str_trim_ro ( input + 1 ) ;	364:3:10993:11036	1042201	0	True				
ANR	1042311	IdentifierDecl	* arg = r_str_trim_ro ( input + 1 )		1042201	0					
ANR	1042312	IdentifierDeclType	const char *		1042201	0					
ANR	1042313	Identifier	arg		1042201	1					
ANR	1042314	AssignmentExpression	* arg = r_str_trim_ro ( input + 1 )		1042201	2		=			
ANR	1042315	Identifier	arg		1042201	0					
ANR	1042316	CallExpression	r_str_trim_ro ( input + 1 )		1042201	1					
ANR	1042317	Callee	r_str_trim_ro		1042201	0					
ANR	1042318	Identifier	r_str_trim_ro		1042201	0					
ANR	1042319	ArgumentList	input + 1		1042201	1					
ANR	1042320	Argument	input + 1		1042201	0					
ANR	1042321	AdditiveExpression	input + 1		1042201	0		+			
ANR	1042322	Identifier	input		1042201	0					
ANR	1042323	PrimaryExpression	1		1042201	1					
ANR	1042324	IdentifierDeclStatement	"ut64 n = r_num_math ( core -> num , arg ) ;"	365:3:11041:11077	1042201	1	True				
ANR	1042325	IdentifierDecl	"n = r_num_math ( core -> num , arg )"		1042201	0					
ANR	1042326	IdentifierDeclType	ut64		1042201	0					
ANR	1042327	Identifier	n		1042201	1					
ANR	1042328	AssignmentExpression	"n = r_num_math ( core -> num , arg )"		1042201	2		=			
ANR	1042329	Identifier	n		1042201	0					
ANR	1042330	CallExpression	"r_num_math ( core -> num , arg )"		1042201	1					
ANR	1042331	Callee	r_num_math		1042201	0					
ANR	1042332	Identifier	r_num_math		1042201	0					
ANR	1042333	ArgumentList	core -> num		1042201	1					
ANR	1042334	Argument	core -> num		1042201	0					
ANR	1042335	PtrMemberAccess	core -> num		1042201	0					
ANR	1042336	Identifier	core		1042201	0					
ANR	1042337	Identifier	num		1042201	1					
ANR	1042338	Argument	arg		1042201	1					
ANR	1042339	Identifier	arg		1042201	0					
ANR	1042340	IfStatement	if ( n )		1042201	2					
ANR	1042341	Condition	n	366:7:11086:11086	1042201	0	True				
ANR	1042342	Identifier	n		1042201	0					
ANR	1042343	CompoundStatement		22:10:494:494	1042201	1					
ANR	1042344	ExpressionStatement	"r_anal_noreturn_add ( core -> anal , arg , n )"	367:4:11095:11135	1042201	0	True				
ANR	1042345	CallExpression	"r_anal_noreturn_add ( core -> anal , arg , n )"		1042201	0					
ANR	1042346	Callee	r_anal_noreturn_add		1042201	0					
ANR	1042347	Identifier	r_anal_noreturn_add		1042201	0					
ANR	1042348	ArgumentList	core -> anal		1042201	1					
ANR	1042349	Argument	core -> anal		1042201	0					
ANR	1042350	PtrMemberAccess	core -> anal		1042201	0					
ANR	1042351	Identifier	core		1042201	0					
ANR	1042352	Identifier	anal		1042201	1					
ANR	1042353	Argument	arg		1042201	1					
ANR	1042354	Identifier	arg		1042201	0					
ANR	1042355	Argument	n		1042201	2					
ANR	1042356	Identifier	n		1042201	0					
ANR	1042357	ElseStatement	else		1042201	0					
ANR	1042358	CompoundStatement		24:10:552:552	1042201	0					
ANR	1042359	ExpressionStatement	"r_anal_noreturn_add ( core -> anal , arg , UT64_MAX )"	369:4:11153:11200	1042201	0	True				
ANR	1042360	CallExpression	"r_anal_noreturn_add ( core -> anal , arg , UT64_MAX )"		1042201	0					
ANR	1042361	Callee	r_anal_noreturn_add		1042201	0					
ANR	1042362	Identifier	r_anal_noreturn_add		1042201	0					
ANR	1042363	ArgumentList	core -> anal		1042201	1					
ANR	1042364	Argument	core -> anal		1042201	0					
ANR	1042365	PtrMemberAccess	core -> anal		1042201	0					
ANR	1042366	Identifier	core		1042201	0					
ANR	1042367	Identifier	anal		1042201	1					
ANR	1042368	Argument	arg		1042201	1					
ANR	1042369	Identifier	arg		1042201	0					
ANR	1042370	Argument	UT64_MAX		1042201	2					
ANR	1042371	Identifier	UT64_MAX		1042201	0					
ANR	1042372	BreakStatement	break ;	372:2:11213:11218	1042201	5	True				
ANR	1042373	Label	case 'a' :	373:1:11221:11229	1042201	6	True				
ANR	1042374	IfStatement	if ( input [ 1 ] == ' ' )		1042201	7					
ANR	1042375	Condition	input [ 1 ] == ' '	374:6:11246:11260	1042201	0	True				
ANR	1042376	EqualityExpression	input [ 1 ] == ' '		1042201	0		==			
ANR	1042377	ArrayIndexing	input [ 1 ]		1042201	0					
ANR	1042378	Identifier	input		1042201	0					
ANR	1042379	PrimaryExpression	1		1042201	1					
ANR	1042380	PrimaryExpression	' '		1042201	1					
ANR	1042381	CompoundStatement		30:23:668:668	1042201	1					
ANR	1042382	ExpressionStatement	"r_anal_noreturn_add ( core -> anal , NULL , r_num_math ( core -> num , input + 1 ) )"	375:3:11268:11346	1042201	0	True				
ANR	1042383	CallExpression	"r_anal_noreturn_add ( core -> anal , NULL , r_num_math ( core -> num , input + 1 ) )"		1042201	0					
ANR	1042384	Callee	r_anal_noreturn_add		1042201	0					
ANR	1042385	Identifier	r_anal_noreturn_add		1042201	0					
ANR	1042386	ArgumentList	core -> anal		1042201	1					
ANR	1042387	Argument	core -> anal		1042201	0					
ANR	1042388	PtrMemberAccess	core -> anal		1042201	0					
ANR	1042389	Identifier	core		1042201	0					
ANR	1042390	Identifier	anal		1042201	1					
ANR	1042391	Argument	NULL		1042201	1					
ANR	1042392	Identifier	NULL		1042201	0					
ANR	1042393	Argument	"r_num_math ( core -> num , input + 1 )"		1042201	2					
ANR	1042394	CallExpression	"r_num_math ( core -> num , input + 1 )"		1042201	0					
ANR	1042395	Callee	r_num_math		1042201	0					
ANR	1042396	Identifier	r_num_math		1042201	0					
ANR	1042397	ArgumentList	core -> num		1042201	1					
ANR	1042398	Argument	core -> num		1042201	0					
ANR	1042399	PtrMemberAccess	core -> num		1042201	0					
ANR	1042400	Identifier	core		1042201	0					
ANR	1042401	Identifier	num		1042201	1					
ANR	1042402	Argument	input + 1		1042201	1					
ANR	1042403	AdditiveExpression	input + 1		1042201	0		+			
ANR	1042404	Identifier	input		1042201	0					
ANR	1042405	PrimaryExpression	1		1042201	1					
ANR	1042406	ElseStatement	else		1042201	0					
ANR	1042407	CompoundStatement		33:9:762:762	1042201	0					
ANR	1042408	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tn )"	378:3:11362:11397	1042201	0	True				
ANR	1042409	CallExpression	"r_core_cmd_help ( core , help_msg_tn )"		1042201	0					
ANR	1042410	Callee	r_core_cmd_help		1042201	0					
ANR	1042411	Identifier	r_core_cmd_help		1042201	0					
ANR	1042412	ArgumentList	core		1042201	1					
ANR	1042413	Argument	core		1042201	0					
ANR	1042414	Identifier	core		1042201	0					
ANR	1042415	Argument	help_msg_tn		1042201	1					
ANR	1042416	Identifier	help_msg_tn		1042201	0					
ANR	1042417	BreakStatement	break ;	380:2:11405:11410	1042201	8	True				
ANR	1042418	Label	case 'n' :	381:1:11413:11421	1042201	9	True				
ANR	1042419	IfStatement	if ( input [ 1 ] == ' ' )		1042201	10					
ANR	1042420	Condition	input [ 1 ] == ' '	382:6:11438:11452	1042201	0	True				
ANR	1042421	EqualityExpression	input [ 1 ] == ' '		1042201	0		==			
ANR	1042422	ArrayIndexing	input [ 1 ]		1042201	0					
ANR	1042423	Identifier	input		1042201	0					
ANR	1042424	PrimaryExpression	1		1042201	1					
ANR	1042425	PrimaryExpression	' '		1042201	1					
ANR	1042426	CompoundStatement		38:23:860:860	1042201	1					
ANR	1042427	ExpressionStatement	"r_anal_noreturn_add ( core -> anal , r_str_trim_ro ( input + 2 ) , UT64_MAX )"	384:3:11481:11550	1042201	0	True				
ANR	1042428	CallExpression	"r_anal_noreturn_add ( core -> anal , r_str_trim_ro ( input + 2 ) , UT64_MAX )"		1042201	0					
ANR	1042429	Callee	r_anal_noreturn_add		1042201	0					
ANR	1042430	Identifier	r_anal_noreturn_add		1042201	0					
ANR	1042431	ArgumentList	core -> anal		1042201	1					
ANR	1042432	Argument	core -> anal		1042201	0					
ANR	1042433	PtrMemberAccess	core -> anal		1042201	0					
ANR	1042434	Identifier	core		1042201	0					
ANR	1042435	Identifier	anal		1042201	1					
ANR	1042436	Argument	r_str_trim_ro ( input + 2 )		1042201	1					
ANR	1042437	CallExpression	r_str_trim_ro ( input + 2 )		1042201	0					
ANR	1042438	Callee	r_str_trim_ro		1042201	0					
ANR	1042439	Identifier	r_str_trim_ro		1042201	0					
ANR	1042440	ArgumentList	input + 2		1042201	1					
ANR	1042441	Argument	input + 2		1042201	0					
ANR	1042442	AdditiveExpression	input + 2		1042201	0		+			
ANR	1042443	Identifier	input		1042201	0					
ANR	1042444	PrimaryExpression	2		1042201	1					
ANR	1042445	Argument	UT64_MAX		1042201	2					
ANR	1042446	Identifier	UT64_MAX		1042201	0					
ANR	1042447	ElseStatement	else		1042201	0					
ANR	1042448	CompoundStatement		41:9:966:966	1042201	0					
ANR	1042449	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tn )"	386:3:11566:11601	1042201	0	True				
ANR	1042450	CallExpression	"r_core_cmd_help ( core , help_msg_tn )"		1042201	0					
ANR	1042451	Callee	r_core_cmd_help		1042201	0					
ANR	1042452	Identifier	r_core_cmd_help		1042201	0					
ANR	1042453	ArgumentList	core		1042201	1					
ANR	1042454	Argument	core		1042201	0					
ANR	1042455	Identifier	core		1042201	0					
ANR	1042456	Argument	help_msg_tn		1042201	1					
ANR	1042457	Identifier	help_msg_tn		1042201	0					
ANR	1042458	BreakStatement	break ;	388:2:11609:11614	1042201	11	True				
ANR	1042459	Label	case '*' :	389:1:11617:11625	1042201	12	True				
ANR	1042460	Label	case 'r' :	390:1:11628:11636	1042201	13	True				
ANR	1042461	ExpressionStatement	"r_anal_noreturn_list ( core -> anal , 1 )"	391:2:11649:11685	1042201	14	True				
ANR	1042462	CallExpression	"r_anal_noreturn_list ( core -> anal , 1 )"		1042201	0					
ANR	1042463	Callee	r_anal_noreturn_list		1042201	0					
ANR	1042464	Identifier	r_anal_noreturn_list		1042201	0					
ANR	1042465	ArgumentList	core -> anal		1042201	1					
ANR	1042466	Argument	core -> anal		1042201	0					
ANR	1042467	PtrMemberAccess	core -> anal		1042201	0					
ANR	1042468	Identifier	core		1042201	0					
ANR	1042469	Identifier	anal		1042201	1					
ANR	1042470	Argument	1		1042201	1					
ANR	1042471	PrimaryExpression	1		1042201	0					
ANR	1042472	BreakStatement	break ;	392:2:11689:11694	1042201	15	True				
ANR	1042473	Label	case 0 :	393:1:11697:11703	1042201	16	True				
ANR	1042474	ExpressionStatement	"r_anal_noreturn_list ( core -> anal , 0 )"	394:2:11715:11751	1042201	17	True				
ANR	1042475	CallExpression	"r_anal_noreturn_list ( core -> anal , 0 )"		1042201	0					
ANR	1042476	Callee	r_anal_noreturn_list		1042201	0					
ANR	1042477	Identifier	r_anal_noreturn_list		1042201	0					
ANR	1042478	ArgumentList	core -> anal		1042201	1					
ANR	1042479	Argument	core -> anal		1042201	0					
ANR	1042480	PtrMemberAccess	core -> anal		1042201	0					
ANR	1042481	Identifier	core		1042201	0					
ANR	1042482	Identifier	anal		1042201	1					
ANR	1042483	Argument	0		1042201	1					
ANR	1042484	PrimaryExpression	0		1042201	0					
ANR	1042485	BreakStatement	break ;	395:2:11755:11760	1042201	18	True				
ANR	1042486	Label	default :	396:1:11763:11770	1042201	19	True				
ANR	1042487	Identifier	default		1042201	0					
ANR	1042488	Label	case '?' :	397:1:11773:11781	1042201	20	True				
ANR	1042489	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tn )"	398:2:11785:11820	1042201	21	True				
ANR	1042490	CallExpression	"r_core_cmd_help ( core , help_msg_tn )"		1042201	0					
ANR	1042491	Callee	r_core_cmd_help		1042201	0					
ANR	1042492	Identifier	r_core_cmd_help		1042201	0					
ANR	1042493	ArgumentList	core		1042201	1					
ANR	1042494	Argument	core		1042201	0					
ANR	1042495	Identifier	core		1042201	0					
ANR	1042496	Argument	help_msg_tn		1042201	1					
ANR	1042497	Identifier	help_msg_tn		1042201	0					
ANR	1042498	BreakStatement	break ;	399:2:11824:11829	1042201	22	True				
ANR	1042499	ReturnType	static void		1042201	1					
ANR	1042500	Identifier	cmd_type_noreturn		1042201	2					
ANR	1042501	ParameterList	"RCore * core , const char * input"		1042201	3					
ANR	1042502	Parameter	RCore * core	345:30:10562:10572	1042201	0	True				
ANR	1042503	ParameterType	RCore *		1042201	0					
ANR	1042504	Identifier	core		1042201	1					
ANR	1042505	Parameter	const char * input	345:43:10575:10591	1042201	1	True				
ANR	1042506	ParameterType	const char *		1042201	0					
ANR	1042507	Identifier	input		1042201	1					
ANR	1042508	CFGEntryNode	ENTRY		1042201		True				
ANR	1042509	CFGExitNode	EXIT		1042201		True				
ANR	1042510	Symbol	NULL		1042201						
ANR	1042511	Symbol	* input		1042201						
ANR	1042512	Symbol	r_str_split_list		1042201						
ANR	1042513	Symbol	* core		1042201						
ANR	1042514	Symbol	iter		1042201						
ANR	1042515	Symbol	k		1042201						
ANR	1042516	Symbol	list		1042201						
ANR	1042517	Symbol	core -> anal		1042201						
ANR	1042518	Symbol	n		1042201						
ANR	1042519	Symbol	r_num_math		1042201						
ANR	1042520	Symbol	help_msg_tn		1042201						
ANR	1042521	Symbol	core		1042201						
ANR	1042522	Symbol	input		1042201						
ANR	1042523	Symbol	s		1042201						
ANR	1042524	Symbol	arg		1042201						
ANR	1042525	Symbol	r_str_trim_ro		1042201						
ANR	1042526	Symbol	strdup		1042201						
ANR	1042527	Symbol	core -> num		1042201						
ANR	1042528	Symbol	UT64_MAX		1042201						
ANR	1042529	DeclStmt									
ANR	1042530	Decl							Sdb	Sdb *	TDB_
ANR	1042531	Function	stdifstruct	405:0:11871:12261							
ANR	1042532	FunctionDef	"stdifstruct (void * user , const char * k , const char * v)"		1042531	0					
ANR	1042533	CompoundStatement		405:65:11936:12261	1042531	0					
ANR	1042534	ExpressionStatement	"r_return_val_if_fail ( TDB_ , false )"	406:1:11939:11973	1042531	0	True				
ANR	1042535	CallExpression	"r_return_val_if_fail ( TDB_ , false )"		1042531	0					
ANR	1042536	Callee	r_return_val_if_fail		1042531	0					
ANR	1042537	Identifier	r_return_val_if_fail		1042531	0					
ANR	1042538	ArgumentList	TDB_		1042531	1					
ANR	1042539	Argument	TDB_		1042531	0					
ANR	1042540	Identifier	TDB_		1042531	0					
ANR	1042541	Argument	false		1042531	1					
ANR	1042542	Identifier	false		1042531	0					
ANR	1042543	IfStatement	"if ( ! strcmp ( v , ""struct"" ) )"		1042531	1					
ANR	1042544	Condition	"! strcmp ( v , ""struct"" )"	407:5:11980:12000	1042531	0	True				
ANR	1042545	UnaryOperationExpression	"! strcmp ( v , ""struct"" )"		1042531	0					
ANR	1042546	UnaryOperator	!		1042531	0					
ANR	1042547	CallExpression	"strcmp ( v , ""struct"" )"		1042531	1					
ANR	1042548	Callee	strcmp		1042531	0					
ANR	1042549	Identifier	strcmp		1042531	0					
ANR	1042550	ArgumentList	v		1042531	1					
ANR	1042551	Argument	v		1042531	0					
ANR	1042552	Identifier	v		1042531	0					
ANR	1042553	Argument	"""struct"""		1042531	1					
ANR	1042554	PrimaryExpression	"""struct"""		1042531	0					
ANR	1042555	CompoundStatement		3:28:66:66	1042531	1					
ANR	1042556	ReturnStatement	return true ;	408:2:12007:12018	1042531	0	True				
ANR	1042557	Identifier	true		1042531	0					
ANR	1042558	IfStatement	"if ( ! strcmp ( v , ""typedef"" ) )"		1042531	2					
ANR	1042559	Condition	"! strcmp ( v , ""typedef"" )"	410:5:12028:12049	1042531	0	True				
ANR	1042560	UnaryOperationExpression	"! strcmp ( v , ""typedef"" )"		1042531	0					
ANR	1042561	UnaryOperator	!		1042531	0					
ANR	1042562	CallExpression	"strcmp ( v , ""typedef"" )"		1042531	1					
ANR	1042563	Callee	strcmp		1042531	0					
ANR	1042564	Identifier	strcmp		1042531	0					
ANR	1042565	ArgumentList	v		1042531	1					
ANR	1042566	Argument	v		1042531	0					
ANR	1042567	Identifier	v		1042531	0					
ANR	1042568	Argument	"""typedef"""		1042531	1					
ANR	1042569	PrimaryExpression	"""typedef"""		1042531	0					
ANR	1042570	CompoundStatement		8:2:174:232	1042531	1					
ANR	1042571	IdentifierDeclStatement	"const char * typedef_key = sdb_fmt ( ""typedef.%s"" , k ) ;"	411:2:12056:12107	1042531	0	True				
ANR	1042572	IdentifierDecl	"* typedef_key = sdb_fmt ( ""typedef.%s"" , k )"		1042531	0					
ANR	1042573	IdentifierDeclType	const char *		1042531	0					
ANR	1042574	Identifier	typedef_key		1042531	1					
ANR	1042575	AssignmentExpression	"* typedef_key = sdb_fmt ( ""typedef.%s"" , k )"		1042531	2		=			
ANR	1042576	Identifier	typedef_key		1042531	0					
ANR	1042577	CallExpression	"sdb_fmt ( ""typedef.%s"" , k )"		1042531	1					
ANR	1042578	Callee	sdb_fmt		1042531	0					
ANR	1042579	Identifier	sdb_fmt		1042531	0					
ANR	1042580	ArgumentList	"""typedef.%s"""		1042531	1					
ANR	1042581	Argument	"""typedef.%s"""		1042531	0					
ANR	1042582	PrimaryExpression	"""typedef.%s"""		1042531	0					
ANR	1042583	Argument	k		1042531	1					
ANR	1042584	Identifier	k		1042531	0					
ANR	1042585	IdentifierDeclStatement	"const char * type = sdb_const_get ( TDB_ , typedef_key , NULL ) ;"	412:2:12111:12169	1042531	1	True				
ANR	1042586	IdentifierDecl	"* type = sdb_const_get ( TDB_ , typedef_key , NULL )"		1042531	0					
ANR	1042587	IdentifierDeclType	const char *		1042531	0					
ANR	1042588	Identifier	type		1042531	1					
ANR	1042589	AssignmentExpression	"* type = sdb_const_get ( TDB_ , typedef_key , NULL )"		1042531	2		=			
ANR	1042590	Identifier	type		1042531	0					
ANR	1042591	CallExpression	"sdb_const_get ( TDB_ , typedef_key , NULL )"		1042531	1					
ANR	1042592	Callee	sdb_const_get		1042531	0					
ANR	1042593	Identifier	sdb_const_get		1042531	0					
ANR	1042594	ArgumentList	TDB_		1042531	1					
ANR	1042595	Argument	TDB_		1042531	0					
ANR	1042596	Identifier	TDB_		1042531	0					
ANR	1042597	Argument	typedef_key		1042531	1					
ANR	1042598	Identifier	typedef_key		1042531	0					
ANR	1042599	Argument	NULL		1042531	2					
ANR	1042600	Identifier	NULL		1042531	0					
ANR	1042601	IfStatement	"if ( type && r_str_startswith ( type , ""struct "" ) )"		1042531	2					
ANR	1042602	Condition	"type && r_str_startswith ( type , ""struct "" )"	413:6:12177:12218	1042531	0	True				
ANR	1042603	AndExpression	"type && r_str_startswith ( type , ""struct "" )"		1042531	0		&&			
ANR	1042604	Identifier	type		1042531	0					
ANR	1042605	CallExpression	"r_str_startswith ( type , ""struct "" )"		1042531	1					
ANR	1042606	Callee	r_str_startswith		1042531	0					
ANR	1042607	Identifier	r_str_startswith		1042531	0					
ANR	1042608	ArgumentList	type		1042531	1					
ANR	1042609	Argument	type		1042531	0					
ANR	1042610	Identifier	type		1042531	0					
ANR	1042611	Argument	"""struct """		1042531	1					
ANR	1042612	PrimaryExpression	"""struct """		1042531	0					
ANR	1042613	CompoundStatement		9:50:284:284	1042531	1					
ANR	1042614	ReturnStatement	return true ;	414:3:12226:12237	1042531	0	True				
ANR	1042615	Identifier	true		1042531	0					
ANR	1042616	ReturnStatement	return false ;	417:1:12247:12259	1042531	3	True				
ANR	1042617	Identifier	false		1042531	0					
ANR	1042618	ReturnType	static int		1042531	1					
ANR	1042619	Identifier	stdifstruct		1042531	2					
ANR	1042620	ParameterList	"void * user , const char * k , const char * v"		1042531	3					
ANR	1042621	Parameter	void * user	405:23:11894:11903	1042531	0	True				
ANR	1042622	ParameterType	void *		1042531	0					
ANR	1042623	Identifier	user		1042531	1					
ANR	1042624	Parameter	const char * k	405:35:11906:11918	1042531	1	True				
ANR	1042625	ParameterType	const char *		1042531	0					
ANR	1042626	Identifier	k		1042531	1					
ANR	1042627	Parameter	const char * v	405:50:11921:11933	1042531	2	True				
ANR	1042628	ParameterType	const char *		1042531	0					
ANR	1042629	Identifier	v		1042531	1					
ANR	1042630	CFGEntryNode	ENTRY		1042531		True				
ANR	1042631	CFGExitNode	EXIT		1042531		True				
ANR	1042632	Symbol	strcmp		1042531						
ANR	1042633	Symbol	r_str_startswith		1042531						
ANR	1042634	Symbol	NULL		1042531						
ANR	1042635	Symbol	false		1042531						
ANR	1042636	Symbol	TDB_		1042531						
ANR	1042637	Symbol	k		1042531						
ANR	1042638	Symbol	type		1042531						
ANR	1042639	Symbol	sdb_const_get		1042531						
ANR	1042640	Symbol	v		1042531						
ANR	1042641	Symbol	true		1042531						
ANR	1042642	Symbol	typedef_key		1042531						
ANR	1042643	Symbol	user		1042531						
ANR	1042644	Symbol	sdb_fmt		1042531						
ANR	1042645	Function	print_struct_union_list_json	426:0:12462:13267							
ANR	1042646	FunctionDef	"print_struct_union_list_json (Sdb * TDB , SdbForeachCallback filter)"		1042645	0					
ANR	1042647	CompoundStatement		426:77:12539:13267	1042645	0					
ANR	1042648	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	427:1:12542:12560	1042645	0	True				
ANR	1042649	IdentifierDecl	* pj = pj_new ( )		1042645	0					
ANR	1042650	IdentifierDeclType	PJ *		1042645	0					
ANR	1042651	Identifier	pj		1042645	1					
ANR	1042652	AssignmentExpression	* pj = pj_new ( )		1042645	2		=			
ANR	1042653	Identifier	pj		1042645	0					
ANR	1042654	CallExpression	pj_new ( )		1042645	1					
ANR	1042655	Callee	pj_new		1042645	0					
ANR	1042656	Identifier	pj_new		1042645	0					
ANR	1042657	ArgumentList			1042645	1					
ANR	1042658	IfStatement	if ( ! pj )		1042645	1					
ANR	1042659	Condition	! pj	428:5:12567:12569	1042645	0	True				
ANR	1042660	UnaryOperationExpression	! pj		1042645	0					
ANR	1042661	UnaryOperator	!		1042645	0					
ANR	1042662	Identifier	pj		1042645	1					
ANR	1042663	CompoundStatement		3:10:32:32	1042645	1					
ANR	1042664	ReturnStatement	return 0 ;	429:2:12576:12584	1042645	0	True				
ANR	1042665	PrimaryExpression	0		1042645	0					
ANR	1042666	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list_filter ( TDB , filter , true ) ;"	431:1:12590:12646	1042645	2	True				
ANR	1042667	IdentifierDecl	"* l = sdb_foreach_list_filter ( TDB , filter , true )"		1042645	0					
ANR	1042668	IdentifierDeclType	SdbList *		1042645	0					
ANR	1042669	Identifier	l		1042645	1					
ANR	1042670	AssignmentExpression	"* l = sdb_foreach_list_filter ( TDB , filter , true )"		1042645	2		=			
ANR	1042671	Identifier	l		1042645	0					
ANR	1042672	CallExpression	"sdb_foreach_list_filter ( TDB , filter , true )"		1042645	1					
ANR	1042673	Callee	sdb_foreach_list_filter		1042645	0					
ANR	1042674	Identifier	sdb_foreach_list_filter		1042645	0					
ANR	1042675	ArgumentList	TDB		1042645	1					
ANR	1042676	Argument	TDB		1042645	0					
ANR	1042677	Identifier	TDB		1042645	0					
ANR	1042678	Argument	filter		1042645	1					
ANR	1042679	Identifier	filter		1042645	0					
ANR	1042680	Argument	true		1042645	2					
ANR	1042681	Identifier	true		1042645	0					
ANR	1042682	IdentifierDeclStatement	SdbListIter * it ;	432:1:12649:12664	1042645	3	True				
ANR	1042683	IdentifierDecl	* it		1042645	0					
ANR	1042684	IdentifierDeclType	SdbListIter *		1042645	0					
ANR	1042685	Identifier	it		1042645	1					
ANR	1042686	IdentifierDeclStatement	SdbKv * kv ;	433:1:12667:12676	1042645	4	True				
ANR	1042687	IdentifierDecl	* kv		1042645	0					
ANR	1042688	IdentifierDeclType	SdbKv *		1042645	0					
ANR	1042689	Identifier	kv		1042645	1					
ANR	1042690	ExpressionStatement	pj_a ( pj )	435:1:12680:12689	1042645	5	True				
ANR	1042691	CallExpression	pj_a ( pj )		1042645	0					
ANR	1042692	Callee	pj_a		1042645	0					
ANR	1042693	Identifier	pj_a		1042645	0					
ANR	1042694	ArgumentList	pj		1042645	1					
ANR	1042695	Argument	pj		1042645	0					
ANR	1042696	Identifier	pj		1042645	0					
ANR	1042697	Statement	ls_foreach	436:1:12697:12706	1042645	6	True				
ANR	1042698	Statement	(	436:12:12708:12708	1042645	7	True				
ANR	1042699	Statement	l	436:13:12709:12709	1042645	8	True				
ANR	1042700	Statement	","	436:14:12710:12710	1042645	9	True				
ANR	1042701	Statement	it	436:16:12712:12713	1042645	10	True				
ANR	1042702	Statement	","	436:18:12714:12714	1042645	11	True				
ANR	1042703	Statement	kv	436:20:12716:12717	1042645	12	True				
ANR	1042704	Statement	)	436:22:12718:12718	1042645	13	True				
ANR	1042705	CompoundStatement		22:2:372:422	1042645	14					
ANR	1042706	IdentifierDeclStatement	const char * k = sdbkv_key ( kv ) ;	437:2:12724:12754	1042645	0	True				
ANR	1042707	IdentifierDecl	* k = sdbkv_key ( kv )		1042645	0					
ANR	1042708	IdentifierDeclType	const char *		1042645	0					
ANR	1042709	Identifier	k		1042645	1					
ANR	1042710	AssignmentExpression	* k = sdbkv_key ( kv )		1042645	2		=			
ANR	1042711	Identifier	k		1042645	0					
ANR	1042712	CallExpression	sdbkv_key ( kv )		1042645	1					
ANR	1042713	Callee	sdbkv_key		1042645	0					
ANR	1042714	Identifier	sdbkv_key		1042645	0					
ANR	1042715	ArgumentList	kv		1042645	1					
ANR	1042716	Argument	kv		1042645	0					
ANR	1042717	Identifier	kv		1042645	0					
ANR	1042718	IfStatement	if ( ! k || ! * k )		1042645	1					
ANR	1042719	Condition	! k || ! * k	438:6:12762:12770	1042645	0	True				
ANR	1042720	OrExpression	! k || ! * k		1042645	0		||			
ANR	1042721	UnaryOperationExpression	! k		1042645	0					
ANR	1042722	UnaryOperator	!		1042645	0					
ANR	1042723	Identifier	k		1042645	1					
ANR	1042724	UnaryOperationExpression	! * k		1042645	1					
ANR	1042725	UnaryOperator	!		1042645	0					
ANR	1042726	UnaryOperationExpression	* k		1042645	1					
ANR	1042727	UnaryOperator	*		1042645	0					
ANR	1042728	Identifier	k		1042645	1					
ANR	1042729	CompoundStatement		13:17:233:233	1042645	1					
ANR	1042730	ContinueStatement	continue ;	439:3:12778:12786	1042645	0	True				
ANR	1042731	ExpressionStatement	pj_o ( pj )	442:2:12795:12804	1042645	2	True				
ANR	1042732	CallExpression	pj_o ( pj )		1042645	0					
ANR	1042733	Callee	pj_o		1042645	0					
ANR	1042734	Identifier	pj_o		1042645	0					
ANR	1042735	ArgumentList	pj		1042645	1					
ANR	1042736	Argument	pj		1042645	0					
ANR	1042737	Identifier	pj		1042645	0					
ANR	1042738	IdentifierDeclStatement	"char * sizecmd = r_str_newf ( ""%s.%s.!size"" , sdbkv_value ( kv ) , k ) ;"	443:2:12813:12876	1042645	3	True				
ANR	1042739	IdentifierDecl	"* sizecmd = r_str_newf ( ""%s.%s.!size"" , sdbkv_value ( kv ) , k )"		1042645	0					
ANR	1042740	IdentifierDeclType	char *		1042645	0					
ANR	1042741	Identifier	sizecmd		1042645	1					
ANR	1042742	AssignmentExpression	"* sizecmd = r_str_newf ( ""%s.%s.!size"" , sdbkv_value ( kv ) , k )"		1042645	2		=			
ANR	1042743	Identifier	sizecmd		1042645	0					
ANR	1042744	CallExpression	"r_str_newf ( ""%s.%s.!size"" , sdbkv_value ( kv ) , k )"		1042645	1					
ANR	1042745	Callee	r_str_newf		1042645	0					
ANR	1042746	Identifier	r_str_newf		1042645	0					
ANR	1042747	ArgumentList	"""%s.%s.!size"""		1042645	1					
ANR	1042748	Argument	"""%s.%s.!size"""		1042645	0					
ANR	1042749	PrimaryExpression	"""%s.%s.!size"""		1042645	0					
ANR	1042750	Argument	sdbkv_value ( kv )		1042645	1					
ANR	1042751	CallExpression	sdbkv_value ( kv )		1042645	0					
ANR	1042752	Callee	sdbkv_value		1042645	0					
ANR	1042753	Identifier	sdbkv_value		1042645	0					
ANR	1042754	ArgumentList	kv		1042645	1					
ANR	1042755	Argument	kv		1042645	0					
ANR	1042756	Identifier	kv		1042645	0					
ANR	1042757	Argument	k		1042645	2					
ANR	1042758	Identifier	k		1042645	0					
ANR	1042759	IfStatement	if ( ! sizecmd )		1042645	4					
ANR	1042760	Condition	! sizecmd	444:6:12884:12891	1042645	0	True				
ANR	1042761	UnaryOperationExpression	! sizecmd		1042645	0					
ANR	1042762	UnaryOperator	!		1042645	0					
ANR	1042763	Identifier	sizecmd		1042645	1					
ANR	1042764	CompoundStatement		19:16:354:354	1042645	1					
ANR	1042765	BreakStatement	break ;	445:3:12899:12904	1042645	0	True				
ANR	1042766	IdentifierDeclStatement	"char * size_s = sdb_querys ( TDB , NULL , - 1 , sizecmd ) ;"	447:2:12912:12962	1042645	5	True				
ANR	1042767	IdentifierDecl	"* size_s = sdb_querys ( TDB , NULL , - 1 , sizecmd )"		1042645	0					
ANR	1042768	IdentifierDeclType	char *		1042645	0					
ANR	1042769	Identifier	size_s		1042645	1					
ANR	1042770	AssignmentExpression	"* size_s = sdb_querys ( TDB , NULL , - 1 , sizecmd )"		1042645	2		=			
ANR	1042771	Identifier	size_s		1042645	0					
ANR	1042772	CallExpression	"sdb_querys ( TDB , NULL , - 1 , sizecmd )"		1042645	1					
ANR	1042773	Callee	sdb_querys		1042645	0					
ANR	1042774	Identifier	sdb_querys		1042645	0					
ANR	1042775	ArgumentList	TDB		1042645	1					
ANR	1042776	Argument	TDB		1042645	0					
ANR	1042777	Identifier	TDB		1042645	0					
ANR	1042778	Argument	NULL		1042645	1					
ANR	1042779	Identifier	NULL		1042645	0					
ANR	1042780	Argument	- 1		1042645	2					
ANR	1042781	UnaryOperationExpression	- 1		1042645	0					
ANR	1042782	UnaryOperator	-		1042645	0					
ANR	1042783	PrimaryExpression	1		1042645	1					
ANR	1042784	Argument	sizecmd		1042645	3					
ANR	1042785	Identifier	sizecmd		1042645	0					
ANR	1042786	ExpressionStatement	"pj_ks ( pj , ""type"" , k )"	448:2:12966:12987	1042645	6	True				
ANR	1042787	CallExpression	"pj_ks ( pj , ""type"" , k )"		1042645	0					
ANR	1042788	Callee	pj_ks		1042645	0					
ANR	1042789	Identifier	pj_ks		1042645	0					
ANR	1042790	ArgumentList	pj		1042645	1					
ANR	1042791	Argument	pj		1042645	0					
ANR	1042792	Identifier	pj		1042645	0					
ANR	1042793	Argument	"""type"""		1042645	1					
ANR	1042794	PrimaryExpression	"""type"""		1042645	0					
ANR	1042795	Argument	k		1042645	2					
ANR	1042796	Identifier	k		1042645	0					
ANR	1042797	ExpressionStatement	"pj_ki ( pj , ""size"" , size_s ? atoi ( size_s ) : 0 )"	449:2:13030:13076	1042645	7	True				
ANR	1042798	CallExpression	"pj_ki ( pj , ""size"" , size_s ? atoi ( size_s ) : 0 )"		1042645	0					
ANR	1042799	Callee	pj_ki		1042645	0					
ANR	1042800	Identifier	pj_ki		1042645	0					
ANR	1042801	ArgumentList	pj		1042645	1					
ANR	1042802	Argument	pj		1042645	0					
ANR	1042803	Identifier	pj		1042645	0					
ANR	1042804	Argument	"""size"""		1042645	1					
ANR	1042805	PrimaryExpression	"""size"""		1042645	0					
ANR	1042806	Argument	size_s ? atoi ( size_s ) : 0		1042645	2					
ANR	1042807	ConditionalExpression	size_s ? atoi ( size_s ) : 0		1042645	0					
ANR	1042808	Condition	size_s		1042645	0					
ANR	1042809	Identifier	size_s		1042645	0					
ANR	1042810	CallExpression	atoi ( size_s )		1042645	1					
ANR	1042811	Callee	atoi		1042645	0					
ANR	1042812	Identifier	atoi		1042645	0					
ANR	1042813	ArgumentList	size_s		1042645	1					
ANR	1042814	Argument	size_s		1042645	0					
ANR	1042815	Identifier	size_s		1042645	0					
ANR	1042816	PrimaryExpression	0		1042645	2					
ANR	1042817	ExpressionStatement	pj_end ( pj )	450:2:13116:13127	1042645	8	True				
ANR	1042818	CallExpression	pj_end ( pj )		1042645	0					
ANR	1042819	Callee	pj_end		1042645	0					
ANR	1042820	Identifier	pj_end		1042645	0					
ANR	1042821	ArgumentList	pj		1042645	1					
ANR	1042822	Argument	pj		1042645	0					
ANR	1042823	Identifier	pj		1042645	0					
ANR	1042824	ExpressionStatement	free ( sizecmd )	452:2:13137:13151	1042645	9	True				
ANR	1042825	CallExpression	free ( sizecmd )		1042645	0					
ANR	1042826	Callee	free		1042645	0					
ANR	1042827	Identifier	free		1042645	0					
ANR	1042828	ArgumentList	sizecmd		1042645	1					
ANR	1042829	Argument	sizecmd		1042645	0					
ANR	1042830	Identifier	sizecmd		1042645	0					
ANR	1042831	ExpressionStatement	free ( size_s )	453:2:13155:13168	1042645	10	True				
ANR	1042832	CallExpression	free ( size_s )		1042645	0					
ANR	1042833	Callee	free		1042645	0					
ANR	1042834	Identifier	free		1042645	0					
ANR	1042835	ArgumentList	size_s		1042645	1					
ANR	1042836	Argument	size_s		1042645	0					
ANR	1042837	Identifier	size_s		1042645	0					
ANR	1042838	ExpressionStatement	pj_end ( pj )	455:1:13174:13185	1042645	15	True				
ANR	1042839	CallExpression	pj_end ( pj )		1042645	0					
ANR	1042840	Callee	pj_end		1042645	0					
ANR	1042841	Identifier	pj_end		1042645	0					
ANR	1042842	ArgumentList	pj		1042645	1					
ANR	1042843	Argument	pj		1042645	0					
ANR	1042844	Identifier	pj		1042645	0					
ANR	1042845	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	457:1:13194:13225	1042645	16	True				
ANR	1042846	CallExpression	r_cons_println ( pj_string ( pj ) )		1042645	0					
ANR	1042847	Callee	r_cons_println		1042645	0					
ANR	1042848	Identifier	r_cons_println		1042645	0					
ANR	1042849	ArgumentList	pj_string ( pj )		1042645	1					
ANR	1042850	Argument	pj_string ( pj )		1042645	0					
ANR	1042851	CallExpression	pj_string ( pj )		1042645	0					
ANR	1042852	Callee	pj_string		1042645	0					
ANR	1042853	Identifier	pj_string		1042645	0					
ANR	1042854	ArgumentList	pj		1042645	1					
ANR	1042855	Argument	pj		1042645	0					
ANR	1042856	Identifier	pj		1042645	0					
ANR	1042857	ExpressionStatement	pj_free ( pj )	458:1:13228:13240	1042645	17	True				
ANR	1042858	CallExpression	pj_free ( pj )		1042645	0					
ANR	1042859	Callee	pj_free		1042645	0					
ANR	1042860	Identifier	pj_free		1042645	0					
ANR	1042861	ArgumentList	pj		1042645	1					
ANR	1042862	Argument	pj		1042645	0					
ANR	1042863	Identifier	pj		1042645	0					
ANR	1042864	ExpressionStatement	ls_free ( l )	459:1:13243:13254	1042645	18	True				
ANR	1042865	CallExpression	ls_free ( l )		1042645	0					
ANR	1042866	Callee	ls_free		1042645	0					
ANR	1042867	Identifier	ls_free		1042645	0					
ANR	1042868	ArgumentList	l		1042645	1					
ANR	1042869	Argument	l		1042645	0					
ANR	1042870	Identifier	l		1042645	0					
ANR	1042871	ReturnStatement	return 1 ;	460:1:13257:13265	1042645	19	True				
ANR	1042872	PrimaryExpression	1		1042645	0					
ANR	1042873	ReturnType	static int		1042645	1					
ANR	1042874	Identifier	print_struct_union_list_json		1042645	2					
ANR	1042875	ParameterList	"Sdb * TDB , SdbForeachCallback filter"		1042645	3					
ANR	1042876	Parameter	Sdb * TDB	426:40:12502:12509	1042645	0	True				
ANR	1042877	ParameterType	Sdb *		1042645	0					
ANR	1042878	Identifier	TDB		1042645	1					
ANR	1042879	Parameter	SdbForeachCallback filter	426:50:12512:12536	1042645	1	True				
ANR	1042880	ParameterType	SdbForeachCallback		1042645	0					
ANR	1042881	Identifier	filter		1042645	1					
ANR	1042882	CFGEntryNode	ENTRY		1042645		True				
ANR	1042883	CFGExitNode	EXIT		1042645		True				
ANR	1042884	CFGErrorNode	ERROR		1042645		True				
ANR	1042885	Symbol	atoi		1042645						
ANR	1042886	Symbol	NULL		1042645						
ANR	1042887	Symbol	sdbkv_key		1042645						
ANR	1042888	Symbol	pj_string		1042645						
ANR	1042889	Symbol	size_s		1042645						
ANR	1042890	Symbol	sdb_foreach_list_filter		1042645						
ANR	1042891	Symbol	sdb_querys		1042645						
ANR	1042892	Symbol	it		1042645						
ANR	1042893	Symbol	kv		1042645						
ANR	1042894	Symbol	k		1042645						
ANR	1042895	Symbol	sdbkv_value		1042645						
ANR	1042896	Symbol	r_str_newf		1042645						
ANR	1042897	Symbol	l		1042645						
ANR	1042898	Symbol	filter		1042645						
ANR	1042899	Symbol	TDB		1042645						
ANR	1042900	Symbol	* k		1042645						
ANR	1042901	Symbol	true		1042645						
ANR	1042902	Symbol	sizecmd		1042645						
ANR	1042903	Symbol	pj		1042645						
ANR	1042904	Symbol	pj_new		1042645						
ANR	1042905	Function	print_struct_union_in_c_format	463:0:13270:14615							
ANR	1042906	FunctionDef	"print_struct_union_in_c_format (Sdb * TDB , SdbForeachCallback filter , const char * arg , bool multiline)"		1042905	0					
ANR	1042907	CompoundStatement		463:113:13383:14615	1042905	0					
ANR	1042908	IdentifierDeclStatement	char * name = NULL ;	464:1:13386:13403	1042905	0	True				
ANR	1042909	IdentifierDecl	* name = NULL		1042905	0					
ANR	1042910	IdentifierDeclType	char *		1042905	0					
ANR	1042911	Identifier	name		1042905	1					
ANR	1042912	AssignmentExpression	* name = NULL		1042905	2		=			
ANR	1042913	Identifier	NULL		1042905	0					
ANR	1042914	Identifier	NULL		1042905	1					
ANR	1042915	IdentifierDeclStatement	SdbKv * kv ;	465:1:13406:13415	1042905	1	True				
ANR	1042916	IdentifierDecl	* kv		1042905	0					
ANR	1042917	IdentifierDeclType	SdbKv *		1042905	0					
ANR	1042918	Identifier	kv		1042905	1					
ANR	1042919	IdentifierDeclStatement	SdbListIter * iter ;	466:1:13418:13435	1042905	2	True				
ANR	1042920	IdentifierDecl	* iter		1042905	0					
ANR	1042921	IdentifierDeclType	SdbListIter *		1042905	0					
ANR	1042922	Identifier	iter		1042905	1					
ANR	1042923	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list_filter ( TDB , filter , true ) ;"	467:1:13438:13494	1042905	3	True				
ANR	1042924	IdentifierDecl	"* l = sdb_foreach_list_filter ( TDB , filter , true )"		1042905	0					
ANR	1042925	IdentifierDeclType	SdbList *		1042905	0					
ANR	1042926	Identifier	l		1042905	1					
ANR	1042927	AssignmentExpression	"* l = sdb_foreach_list_filter ( TDB , filter , true )"		1042905	2		=			
ANR	1042928	Identifier	l		1042905	0					
ANR	1042929	CallExpression	"sdb_foreach_list_filter ( TDB , filter , true )"		1042905	1					
ANR	1042930	Callee	sdb_foreach_list_filter		1042905	0					
ANR	1042931	Identifier	sdb_foreach_list_filter		1042905	0					
ANR	1042932	ArgumentList	TDB		1042905	1					
ANR	1042933	Argument	TDB		1042905	0					
ANR	1042934	Identifier	TDB		1042905	0					
ANR	1042935	Argument	filter		1042905	1					
ANR	1042936	Identifier	filter		1042905	0					
ANR	1042937	Argument	true		1042905	2					
ANR	1042938	Identifier	true		1042905	0					
ANR	1042939	IdentifierDeclStatement	"const char * space = """" ;"	468:1:13497:13519	1042905	4	True				
ANR	1042940	IdentifierDecl	"* space = """""		1042905	0					
ANR	1042941	IdentifierDeclType	const char *		1042905	0					
ANR	1042942	Identifier	space		1042905	1					
ANR	1042943	AssignmentExpression	"* space = """""		1042905	2		=			
ANR	1042944	Identifier	space		1042905	0					
ANR	1042945	PrimaryExpression	""""""		1042905	1					
ANR	1042946	IdentifierDeclStatement	bool match = false ;	469:1:13522:13540	1042905	5	True				
ANR	1042947	IdentifierDecl	match = false		1042905	0					
ANR	1042948	IdentifierDeclType	bool		1042905	0					
ANR	1042949	Identifier	match		1042905	1					
ANR	1042950	AssignmentExpression	match = false		1042905	2		=			
ANR	1042951	Identifier	false		1042905	0					
ANR	1042952	Identifier	false		1042905	1					
ANR	1042953	Statement	ls_foreach	471:1:13544:13553	1042905	6	True				
ANR	1042954	Statement	(	471:12:13555:13555	1042905	7	True				
ANR	1042955	Statement	l	471:13:13556:13556	1042905	8	True				
ANR	1042956	Statement	","	471:14:13557:13557	1042905	9	True				
ANR	1042957	Statement	iter	471:16:13559:13562	1042905	10	True				
ANR	1042958	Statement	","	471:20:13563:13563	1042905	11	True				
ANR	1042959	Statement	kv	471:22:13565:13566	1042905	12	True				
ANR	1042960	Statement	)	471:24:13567:13567	1042905	13	True				
ANR	1042961	CompoundStatement		24:2:504:564	1042905	14					
ANR	1042962	IfStatement	"if ( name && ! strcmp ( sdbkv_value ( kv ) , name ) )"		1042905	0					
ANR	1042963	Condition	"name && ! strcmp ( sdbkv_value ( kv ) , name )"	472:6:13577:13616	1042905	0	True				
ANR	1042964	AndExpression	"name && ! strcmp ( sdbkv_value ( kv ) , name )"		1042905	0		&&			
ANR	1042965	Identifier	name		1042905	0					
ANR	1042966	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , name )"		1042905	1					
ANR	1042967	UnaryOperator	!		1042905	0					
ANR	1042968	CallExpression	"strcmp ( sdbkv_value ( kv ) , name )"		1042905	1					
ANR	1042969	Callee	strcmp		1042905	0					
ANR	1042970	Identifier	strcmp		1042905	0					
ANR	1042971	ArgumentList	sdbkv_value ( kv )		1042905	1					
ANR	1042972	Argument	sdbkv_value ( kv )		1042905	0					
ANR	1042973	CallExpression	sdbkv_value ( kv )		1042905	0					
ANR	1042974	Callee	sdbkv_value		1042905	0					
ANR	1042975	Identifier	sdbkv_value		1042905	0					
ANR	1042976	ArgumentList	kv		1042905	1					
ANR	1042977	Argument	kv		1042905	0					
ANR	1042978	Identifier	kv		1042905	0					
ANR	1042979	Argument	name		1042905	1					
ANR	1042980	Identifier	name		1042905	0					
ANR	1042981	CompoundStatement		10:48:235:235	1042905	1					
ANR	1042982	ContinueStatement	continue ;	473:3:13624:13632	1042905	0	True				
ANR	1042983	ExpressionStatement	free ( name )	475:2:13640:13651	1042905	1	True				
ANR	1042984	CallExpression	free ( name )		1042905	0					
ANR	1042985	Callee	free		1042905	0					
ANR	1042986	Identifier	free		1042905	0					
ANR	1042987	ArgumentList	name		1042905	1					
ANR	1042988	Argument	name		1042905	0					
ANR	1042989	Identifier	name		1042905	0					
ANR	1042990	IdentifierDeclStatement	int n ;	476:2:13655:13660	1042905	2	True				
ANR	1042991	IdentifierDecl	n		1042905	0					
ANR	1042992	IdentifierDeclType	int		1042905	0					
ANR	1042993	Identifier	n		1042905	1					
ANR	1042994	ExpressionStatement	name = strdup ( sdbkv_key ( kv ) )	477:2:13664:13694	1042905	3	True				
ANR	1042995	AssignmentExpression	name = strdup ( sdbkv_key ( kv ) )		1042905	0		=			
ANR	1042996	Identifier	name		1042905	0					
ANR	1042997	CallExpression	strdup ( sdbkv_key ( kv ) )		1042905	1					
ANR	1042998	Callee	strdup		1042905	0					
ANR	1042999	Identifier	strdup		1042905	0					
ANR	1043000	ArgumentList	sdbkv_key ( kv )		1042905	1					
ANR	1043001	Argument	sdbkv_key ( kv )		1042905	0					
ANR	1043002	CallExpression	sdbkv_key ( kv )		1042905	0					
ANR	1043003	Callee	sdbkv_key		1042905	0					
ANR	1043004	Identifier	sdbkv_key		1042905	0					
ANR	1043005	ArgumentList	kv		1042905	1					
ANR	1043006	Argument	kv		1042905	0					
ANR	1043007	Identifier	kv		1042905	0					
ANR	1043008	IfStatement	if ( name && ( arg && * arg ) )		1042905	4					
ANR	1043009	Condition	name && ( arg && * arg )	478:6:13702:13722	1042905	0	True				
ANR	1043010	AndExpression	name && ( arg && * arg )		1042905	0		&&			
ANR	1043011	Identifier	name		1042905	0					
ANR	1043012	AndExpression	arg && * arg		1042905	1		&&			
ANR	1043013	Identifier	arg		1042905	0					
ANR	1043014	UnaryOperationExpression	* arg		1042905	1					
ANR	1043015	UnaryOperator	*		1042905	0					
ANR	1043016	Identifier	arg		1042905	1					
ANR	1043017	CompoundStatement		16:29:341:341	1042905	1					
ANR	1043018	IfStatement	"if ( ! strcmp ( arg , name ) )"		1042905	0					
ANR	1043019	Condition	"! strcmp ( arg , name )"	479:7:13734:13752	1042905	0	True				
ANR	1043020	UnaryOperationExpression	"! strcmp ( arg , name )"		1042905	0					
ANR	1043021	UnaryOperator	!		1042905	0					
ANR	1043022	CallExpression	"strcmp ( arg , name )"		1042905	1					
ANR	1043023	Callee	strcmp		1042905	0					
ANR	1043024	Identifier	strcmp		1042905	0					
ANR	1043025	ArgumentList	arg		1042905	1					
ANR	1043026	Argument	arg		1042905	0					
ANR	1043027	Identifier	arg		1042905	0					
ANR	1043028	Argument	name		1042905	1					
ANR	1043029	Identifier	name		1042905	0					
ANR	1043030	CompoundStatement		17:28:371:371	1042905	1					
ANR	1043031	ExpressionStatement	match = true	480:4:13761:13773	1042905	0	True				
ANR	1043032	AssignmentExpression	match = true		1042905	0		=			
ANR	1043033	Identifier	match		1042905	0					
ANR	1043034	Identifier	true		1042905	1					
ANR	1043035	ElseStatement	else		1042905	0					
ANR	1043036	CompoundStatement		19:10:401:401	1042905	0					
ANR	1043037	ContinueStatement	continue ;	482:4:13791:13799	1042905	0	True				
ANR	1043038	ExpressionStatement	"r_cons_printf ( ""%s %s {%s"" , sdbkv_value ( kv ) , name , multiline ? ""\\n"" : """" )"	485:2:13812:13884	1042905	5	True				
ANR	1043039	CallExpression	"r_cons_printf ( ""%s %s {%s"" , sdbkv_value ( kv ) , name , multiline ? ""\\n"" : """" )"		1042905	0					
ANR	1043040	Callee	r_cons_printf		1042905	0					
ANR	1043041	Identifier	r_cons_printf		1042905	0					
ANR	1043042	ArgumentList	"""%s %s {%s"""		1042905	1					
ANR	1043043	Argument	"""%s %s {%s"""		1042905	0					
ANR	1043044	PrimaryExpression	"""%s %s {%s"""		1042905	0					
ANR	1043045	Argument	sdbkv_value ( kv )		1042905	1					
ANR	1043046	CallExpression	sdbkv_value ( kv )		1042905	0					
ANR	1043047	Callee	sdbkv_value		1042905	0					
ANR	1043048	Identifier	sdbkv_value		1042905	0					
ANR	1043049	ArgumentList	kv		1042905	1					
ANR	1043050	Argument	kv		1042905	0					
ANR	1043051	Identifier	kv		1042905	0					
ANR	1043052	Argument	name		1042905	2					
ANR	1043053	Identifier	name		1042905	0					
ANR	1043054	Argument	"multiline ? ""\\n"" : """""		1042905	3					
ANR	1043055	ConditionalExpression	"multiline ? ""\\n"" : """""		1042905	0					
ANR	1043056	Condition	multiline		1042905	0					
ANR	1043057	Identifier	multiline		1042905	0					
ANR	1043058	PrimaryExpression	"""\\n"""		1042905	1					
ANR	1043059	PrimaryExpression	""""""		1042905	2					
ANR	1043060	IdentifierDeclStatement	"char * p , * var = r_str_newf ( ""%s.%s"" , sdbkv_value ( kv ) , name ) ;"	486:2:13888:13948	1042905	6	True				
ANR	1043061	IdentifierDecl	* p		1042905	0					
ANR	1043062	IdentifierDeclType	char *		1042905	0					
ANR	1043063	Identifier	p		1042905	1					
ANR	1043064	IdentifierDecl	"* var = r_str_newf ( ""%s.%s"" , sdbkv_value ( kv ) , name )"		1042905	1					
ANR	1043065	IdentifierDeclType	char *		1042905	0					
ANR	1043066	Identifier	var		1042905	1					
ANR	1043067	AssignmentExpression	"* var = r_str_newf ( ""%s.%s"" , sdbkv_value ( kv ) , name )"		1042905	2		=			
ANR	1043068	Identifier	var		1042905	0					
ANR	1043069	CallExpression	"r_str_newf ( ""%s.%s"" , sdbkv_value ( kv ) , name )"		1042905	1					
ANR	1043070	Callee	r_str_newf		1042905	0					
ANR	1043071	Identifier	r_str_newf		1042905	0					
ANR	1043072	ArgumentList	"""%s.%s"""		1042905	1					
ANR	1043073	Argument	"""%s.%s"""		1042905	0					
ANR	1043074	PrimaryExpression	"""%s.%s"""		1042905	0					
ANR	1043075	Argument	sdbkv_value ( kv )		1042905	1					
ANR	1043076	CallExpression	sdbkv_value ( kv )		1042905	0					
ANR	1043077	Callee	sdbkv_value		1042905	0					
ANR	1043078	Identifier	sdbkv_value		1042905	0					
ANR	1043079	ArgumentList	kv		1042905	1					
ANR	1043080	Argument	kv		1042905	0					
ANR	1043081	Identifier	kv		1042905	0					
ANR	1043082	Argument	name		1042905	2					
ANR	1043083	Identifier	name		1042905	0					
ANR	1043084	ForStatement	"for ( n = 0 ; ( p = sdb_array_get ( TDB , var , n , NULL ) ) ; n ++ )"		1042905	7					
ANR	1043085	ForInit	n = 0 ;	487:7:13957:13962	1042905	0	True				
ANR	1043086	AssignmentExpression	n = 0		1042905	0		=			
ANR	1043087	Identifier	n		1042905	0					
ANR	1043088	PrimaryExpression	0		1042905	1					
ANR	1043089	Condition	"p = sdb_array_get ( TDB , var , n , NULL )"	487:14:13964:14002	1042905	1	True				
ANR	1043090	AssignmentExpression	"p = sdb_array_get ( TDB , var , n , NULL )"		1042905	0		=			
ANR	1043091	Identifier	p		1042905	0					
ANR	1043092	CallExpression	"sdb_array_get ( TDB , var , n , NULL )"		1042905	1					
ANR	1043093	Callee	sdb_array_get		1042905	0					
ANR	1043094	Identifier	sdb_array_get		1042905	0					
ANR	1043095	ArgumentList	TDB		1042905	1					
ANR	1043096	Argument	TDB		1042905	0					
ANR	1043097	Identifier	TDB		1042905	0					
ANR	1043098	Argument	var		1042905	1					
ANR	1043099	Identifier	var		1042905	0					
ANR	1043100	Argument	n		1042905	2					
ANR	1043101	Identifier	n		1042905	0					
ANR	1043102	Argument	NULL		1042905	3					
ANR	1043103	Identifier	NULL		1042905	0					
ANR	1043104	PostIncDecOperationExpression	n ++	487:55:14005:14007	1042905	2	True				
ANR	1043105	Identifier	n		1042905	0					
ANR	1043106	IncDec	++		1042905	1					
ANR	1043107	CompoundStatement		26:3:631:672	1042905	3					
ANR	1043108	IdentifierDeclStatement	"char * var2 = r_str_newf ( ""%s.%s"" , var , p ) ;"	488:3:14015:14056	1042905	0	True				
ANR	1043109	IdentifierDecl	"* var2 = r_str_newf ( ""%s.%s"" , var , p )"		1042905	0					
ANR	1043110	IdentifierDeclType	char *		1042905	0					
ANR	1043111	Identifier	var2		1042905	1					
ANR	1043112	AssignmentExpression	"* var2 = r_str_newf ( ""%s.%s"" , var , p )"		1042905	2		=			
ANR	1043113	Identifier	var2		1042905	0					
ANR	1043114	CallExpression	"r_str_newf ( ""%s.%s"" , var , p )"		1042905	1					
ANR	1043115	Callee	r_str_newf		1042905	0					
ANR	1043116	Identifier	r_str_newf		1042905	0					
ANR	1043117	ArgumentList	"""%s.%s"""		1042905	1					
ANR	1043118	Argument	"""%s.%s"""		1042905	0					
ANR	1043119	PrimaryExpression	"""%s.%s"""		1042905	0					
ANR	1043120	Argument	var		1042905	1					
ANR	1043121	Identifier	var		1042905	0					
ANR	1043122	Argument	p		1042905	2					
ANR	1043123	Identifier	p		1042905	0					
ANR	1043124	IfStatement	if ( var2 )		1042905	1					
ANR	1043125	Condition	var2	489:7:14065:14068	1042905	0	True				
ANR	1043126	Identifier	var2		1042905	0					
ANR	1043127	CompoundStatement		28:4:693:739	1042905	1					
ANR	1043128	IdentifierDeclStatement	"char * val = sdb_array_get ( TDB , var2 , 0 , NULL ) ;"	490:4:14077:14123	1042905	0	True				
ANR	1043129	IdentifierDecl	"* val = sdb_array_get ( TDB , var2 , 0 , NULL )"		1042905	0					
ANR	1043130	IdentifierDeclType	char *		1042905	0					
ANR	1043131	Identifier	val		1042905	1					
ANR	1043132	AssignmentExpression	"* val = sdb_array_get ( TDB , var2 , 0 , NULL )"		1042905	2		=			
ANR	1043133	Identifier	val		1042905	0					
ANR	1043134	CallExpression	"sdb_array_get ( TDB , var2 , 0 , NULL )"		1042905	1					
ANR	1043135	Callee	sdb_array_get		1042905	0					
ANR	1043136	Identifier	sdb_array_get		1042905	0					
ANR	1043137	ArgumentList	TDB		1042905	1					
ANR	1043138	Argument	TDB		1042905	0					
ANR	1043139	Identifier	TDB		1042905	0					
ANR	1043140	Argument	var2		1042905	1					
ANR	1043141	Identifier	var2		1042905	0					
ANR	1043142	Argument	0		1042905	2					
ANR	1043143	PrimaryExpression	0		1042905	0					
ANR	1043144	Argument	NULL		1042905	3					
ANR	1043145	Identifier	NULL		1042905	0					
ANR	1043146	IfStatement	if ( val )		1042905	1					
ANR	1043147	Condition	val	491:8:14133:14135	1042905	0	True				
ANR	1043148	Identifier	val		1042905	0					
ANR	1043149	CompoundStatement		29:13:754:754	1042905	1					
ANR	1043150	IfStatement	if ( multiline )		1042905	0					
ANR	1043151	Condition	multiline	492:9:14149:14157	1042905	0	True				
ANR	1043152	Identifier	multiline		1042905	0					
ANR	1043153	CompoundStatement		30:20:776:776	1042905	1					
ANR	1043154	ExpressionStatement	"r_cons_printf ( ""\\t%s"" , val )"	493:6:14168:14195	1042905	0	True				
ANR	1043155	CallExpression	"r_cons_printf ( ""\\t%s"" , val )"		1042905	0					
ANR	1043156	Callee	r_cons_printf		1042905	0					
ANR	1043157	Identifier	r_cons_printf		1042905	0					
ANR	1043158	ArgumentList	"""\\t%s"""		1042905	1					
ANR	1043159	Argument	"""\\t%s"""		1042905	0					
ANR	1043160	PrimaryExpression	"""\\t%s"""		1042905	0					
ANR	1043161	Argument	val		1042905	1					
ANR	1043162	Identifier	val		1042905	0					
ANR	1043163	IfStatement	if ( p && p [ 0 ] != '\\0' )		1042905	1					
ANR	1043164	Condition	p && p [ 0 ] != '\\0'	494:10:14207:14223	1042905	0	True				
ANR	1043165	AndExpression	p && p [ 0 ] != '\\0'		1042905	0		&&			
ANR	1043166	Identifier	p		1042905	0					
ANR	1043167	EqualityExpression	p [ 0 ] != '\\0'		1042905	1		!=			
ANR	1043168	ArrayIndexing	p [ 0 ]		1042905	0					
ANR	1043169	Identifier	p		1042905	0					
ANR	1043170	PrimaryExpression	0		1042905	1					
ANR	1043171	PrimaryExpression	'\\0'		1042905	1					
ANR	1043172	CompoundStatement		32:29:842:842	1042905	1					
ANR	1043173	ExpressionStatement	"r_cons_printf ( ""%s%s"" , strstr ( val , "" *"" ) ? """" : "" "" , p )"	495:7:14235:14289	1042905	0	True				
ANR	1043174	CallExpression	"r_cons_printf ( ""%s%s"" , strstr ( val , "" *"" ) ? """" : "" "" , p )"		1042905	0					
ANR	1043175	Callee	r_cons_printf		1042905	0					
ANR	1043176	Identifier	r_cons_printf		1042905	0					
ANR	1043177	ArgumentList	"""%s%s"""		1042905	1					
ANR	1043178	Argument	"""%s%s"""		1042905	0					
ANR	1043179	PrimaryExpression	"""%s%s"""		1042905	0					
ANR	1043180	Argument	"strstr ( val , "" *"" ) ? """" : "" """		1042905	1					
ANR	1043181	ConditionalExpression	"strstr ( val , "" *"" ) ? """" : "" """		1042905	0					
ANR	1043182	Condition	"strstr ( val , "" *"" )"		1042905	0					
ANR	1043183	CallExpression	"strstr ( val , "" *"" )"		1042905	0					
ANR	1043184	Callee	strstr		1042905	0					
ANR	1043185	Identifier	strstr		1042905	0					
ANR	1043186	ArgumentList	val		1042905	1					
ANR	1043187	Argument	val		1042905	0					
ANR	1043188	Identifier	val		1042905	0					
ANR	1043189	Argument	""" *"""		1042905	1					
ANR	1043190	PrimaryExpression	""" *"""		1042905	0					
ANR	1043191	PrimaryExpression	""""""		1042905	1					
ANR	1043192	PrimaryExpression	""" """		1042905	2					
ANR	1043193	Argument	p		1042905	2					
ANR	1043194	Identifier	p		1042905	0					
ANR	1043195	ElseStatement	else		1042905	0					
ANR	1043196	CompoundStatement		35:12:927:927	1042905	0					
ANR	1043197	ExpressionStatement	"r_cons_printf ( ""%s%s %s;"" , space , val , p )"	498:6:14319:14360	1042905	0	True				
ANR	1043198	CallExpression	"r_cons_printf ( ""%s%s %s;"" , space , val , p )"		1042905	0					
ANR	1043199	Callee	r_cons_printf		1042905	0					
ANR	1043200	Identifier	r_cons_printf		1042905	0					
ANR	1043201	ArgumentList	"""%s%s %s;"""		1042905	1					
ANR	1043202	Argument	"""%s%s %s;"""		1042905	0					
ANR	1043203	PrimaryExpression	"""%s%s %s;"""		1042905	0					
ANR	1043204	Argument	space		1042905	1					
ANR	1043205	Identifier	space		1042905	0					
ANR	1043206	Argument	val		1042905	2					
ANR	1043207	Identifier	val		1042905	0					
ANR	1043208	Argument	p		1042905	3					
ANR	1043209	Identifier	p		1042905	0					
ANR	1043210	ExpressionStatement	"space = "" """	499:6:14368:14379	1042905	1	True				
ANR	1043211	AssignmentExpression	"space = "" """		1042905	0		=			
ANR	1043212	Identifier	space		1042905	0					
ANR	1043213	PrimaryExpression	""" """		1042905	1					
ANR	1043214	IfStatement	if ( multiline )		1042905	2					
ANR	1043215	Condition	multiline	502:8:14402:14410	1042905	0	True				
ANR	1043216	Identifier	multiline		1042905	0					
ANR	1043217	CompoundStatement		40:19:1029:1029	1042905	1					
ANR	1043218	ExpressionStatement	"r_cons_println ( "";"" )"	503:5:14420:14440	1042905	0	True				
ANR	1043219	CallExpression	"r_cons_println ( "";"" )"		1042905	0					
ANR	1043220	Callee	r_cons_println		1042905	0					
ANR	1043221	Identifier	r_cons_println		1042905	0					
ANR	1043222	ArgumentList	""";"""		1042905	1					
ANR	1043223	Argument	""";"""		1042905	0					
ANR	1043224	PrimaryExpression	""";"""		1042905	0					
ANR	1043225	ExpressionStatement	free ( val )	505:4:14452:14462	1042905	3	True				
ANR	1043226	CallExpression	free ( val )		1042905	0					
ANR	1043227	Callee	free		1042905	0					
ANR	1043228	Identifier	free		1042905	0					
ANR	1043229	ArgumentList	val		1042905	1					
ANR	1043230	Argument	val		1042905	0					
ANR	1043231	Identifier	val		1042905	0					
ANR	1043232	ExpressionStatement	free ( var2 )	507:3:14472:14483	1042905	2	True				
ANR	1043233	CallExpression	free ( var2 )		1042905	0					
ANR	1043234	Callee	free		1042905	0					
ANR	1043235	Identifier	free		1042905	0					
ANR	1043236	ArgumentList	var2		1042905	1					
ANR	1043237	Argument	var2		1042905	0					
ANR	1043238	Identifier	var2		1042905	0					
ANR	1043239	ExpressionStatement	free ( p )	508:3:14488:14496	1042905	3	True				
ANR	1043240	CallExpression	free ( p )		1042905	0					
ANR	1043241	Callee	free		1042905	0					
ANR	1043242	Identifier	free		1042905	0					
ANR	1043243	ArgumentList	p		1042905	1					
ANR	1043244	Argument	p		1042905	0					
ANR	1043245	Identifier	p		1042905	0					
ANR	1043246	ExpressionStatement	free ( var )	510:2:14504:14514	1042905	8	True				
ANR	1043247	CallExpression	free ( var )		1042905	0					
ANR	1043248	Callee	free		1042905	0					
ANR	1043249	Identifier	free		1042905	0					
ANR	1043250	ArgumentList	var		1042905	1					
ANR	1043251	Argument	var		1042905	0					
ANR	1043252	Identifier	var		1042905	0					
ANR	1043253	ExpressionStatement	"r_cons_println ( ""};"" )"	511:2:14518:14539	1042905	9	True				
ANR	1043254	CallExpression	"r_cons_println ( ""};"" )"		1042905	0					
ANR	1043255	Callee	r_cons_println		1042905	0					
ANR	1043256	Identifier	r_cons_println		1042905	0					
ANR	1043257	ArgumentList	"""};"""		1042905	1					
ANR	1043258	Argument	"""};"""		1042905	0					
ANR	1043259	PrimaryExpression	"""};"""		1042905	0					
ANR	1043260	ExpressionStatement	"space = """""	512:2:14543:14553	1042905	10	True				
ANR	1043261	AssignmentExpression	"space = """""		1042905	0		=			
ANR	1043262	Identifier	space		1042905	0					
ANR	1043263	PrimaryExpression	""""""		1042905	1					
ANR	1043264	IfStatement	if ( match )		1042905	11					
ANR	1043265	Condition	match	513:6:14561:14565	1042905	0	True				
ANR	1043266	Identifier	match		1042905	0					
ANR	1043267	CompoundStatement		51:13:1184:1184	1042905	1					
ANR	1043268	BreakStatement	break ;	514:3:14573:14578	1042905	0	True				
ANR	1043269	ExpressionStatement	free ( name )	517:1:14588:14599	1042905	15	True				
ANR	1043270	CallExpression	free ( name )		1042905	0					
ANR	1043271	Callee	free		1042905	0					
ANR	1043272	Identifier	free		1042905	0					
ANR	1043273	ArgumentList	name		1042905	1					
ANR	1043274	Argument	name		1042905	0					
ANR	1043275	Identifier	name		1042905	0					
ANR	1043276	ExpressionStatement	ls_free ( l )	518:1:14602:14613	1042905	16	True				
ANR	1043277	CallExpression	ls_free ( l )		1042905	0					
ANR	1043278	Callee	ls_free		1042905	0					
ANR	1043279	Identifier	ls_free		1042905	0					
ANR	1043280	ArgumentList	l		1042905	1					
ANR	1043281	Argument	l		1042905	0					
ANR	1043282	Identifier	l		1042905	0					
ANR	1043283	ReturnType	static void		1042905	1					
ANR	1043284	Identifier	print_struct_union_in_c_format		1042905	2					
ANR	1043285	ParameterList	"Sdb * TDB , SdbForeachCallback filter , const char * arg , bool multiline"		1042905	3					
ANR	1043286	Parameter	Sdb * TDB	463:43:13313:13320	1042905	0	True				
ANR	1043287	ParameterType	Sdb *		1042905	0					
ANR	1043288	Identifier	TDB		1042905	1					
ANR	1043289	Parameter	SdbForeachCallback filter	463:53:13323:13347	1042905	1	True				
ANR	1043290	ParameterType	SdbForeachCallback		1042905	0					
ANR	1043291	Identifier	filter		1042905	1					
ANR	1043292	Parameter	const char * arg	463:80:13350:13364	1042905	2	True				
ANR	1043293	ParameterType	const char *		1042905	0					
ANR	1043294	Identifier	arg		1042905	1					
ANR	1043295	Parameter	bool multiline	463:97:13367:13380	1042905	3	True				
ANR	1043296	ParameterType	bool		1042905	0					
ANR	1043297	Identifier	multiline		1042905	1					
ANR	1043298	CFGEntryNode	ENTRY		1042905		True				
ANR	1043299	CFGExitNode	EXIT		1042905		True				
ANR	1043300	CFGErrorNode	ERROR		1042905		True				
ANR	1043301	Symbol	sdb_array_get		1042905						
ANR	1043302	Symbol	r_str_newf		1042905						
ANR	1043303	Symbol	space		1042905						
ANR	1043304	Symbol	TDB		1042905						
ANR	1043305	Symbol	arg		1042905						
ANR	1043306	Symbol	var2		1042905						
ANR	1043307	Symbol	strcmp		1042905						
ANR	1043308	Symbol	val		1042905						
ANR	1043309	Symbol	NULL		1042905						
ANR	1043310	Symbol	sdbkv_key		1042905						
ANR	1043311	Symbol	var		1042905						
ANR	1043312	Symbol	false		1042905						
ANR	1043313	Symbol	match		1042905						
ANR	1043314	Symbol	iter		1042905						
ANR	1043315	Symbol	sdb_foreach_list_filter		1042905						
ANR	1043316	Symbol	kv		1042905						
ANR	1043317	Symbol	sdbkv_value		1042905						
ANR	1043318	Symbol	l		1042905						
ANR	1043319	Symbol	n		1042905						
ANR	1043320	Symbol	filter		1042905						
ANR	1043321	Symbol	p		1042905						
ANR	1043322	Symbol	strstr		1042905						
ANR	1043323	Symbol	multiline		1042905						
ANR	1043324	Symbol	name		1042905						
ANR	1043325	Symbol	true		1042905						
ANR	1043326	Symbol	* p		1042905						
ANR	1043327	Symbol	strdup		1042905						
ANR	1043328	Symbol	* arg		1042905						
ANR	1043329	Function	print_enum_in_c_format	521:0:14618:15757							
ANR	1043330	FunctionDef	"print_enum_in_c_format (Sdb * TDB , const char * arg , bool multiline)"		1043329	0					
ANR	1043331	CompoundStatement		521:78:14696:15757	1043329	0					
ANR	1043332	IdentifierDeclStatement	char * name = NULL ;	522:1:14699:14716	1043329	0	True				
ANR	1043333	IdentifierDecl	* name = NULL		1043329	0					
ANR	1043334	IdentifierDeclType	char *		1043329	0					
ANR	1043335	Identifier	name		1043329	1					
ANR	1043336	AssignmentExpression	* name = NULL		1043329	2		=			
ANR	1043337	Identifier	NULL		1043329	0					
ANR	1043338	Identifier	NULL		1043329	1					
ANR	1043339	IdentifierDeclStatement	SdbKv * kv ;	523:1:14719:14728	1043329	1	True				
ANR	1043340	IdentifierDecl	* kv		1043329	0					
ANR	1043341	IdentifierDeclType	SdbKv *		1043329	0					
ANR	1043342	Identifier	kv		1043329	1					
ANR	1043343	IdentifierDeclStatement	SdbListIter * iter ;	524:1:14731:14748	1043329	2	True				
ANR	1043344	IdentifierDecl	* iter		1043329	0					
ANR	1043345	IdentifierDeclType	SdbListIter *		1043329	0					
ANR	1043346	Identifier	iter		1043329	1					
ANR	1043347	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( TDB , true ) ;"	525:1:14751:14792	1043329	3	True				
ANR	1043348	IdentifierDecl	"* l = sdb_foreach_list ( TDB , true )"		1043329	0					
ANR	1043349	IdentifierDeclType	SdbList *		1043329	0					
ANR	1043350	Identifier	l		1043329	1					
ANR	1043351	AssignmentExpression	"* l = sdb_foreach_list ( TDB , true )"		1043329	2		=			
ANR	1043352	Identifier	l		1043329	0					
ANR	1043353	CallExpression	"sdb_foreach_list ( TDB , true )"		1043329	1					
ANR	1043354	Callee	sdb_foreach_list		1043329	0					
ANR	1043355	Identifier	sdb_foreach_list		1043329	0					
ANR	1043356	ArgumentList	TDB		1043329	1					
ANR	1043357	Argument	TDB		1043329	0					
ANR	1043358	Identifier	TDB		1043329	0					
ANR	1043359	Argument	true		1043329	1					
ANR	1043360	Identifier	true		1043329	0					
ANR	1043361	IdentifierDeclStatement	"const char * separator = """" ;"	526:1:14795:14821	1043329	4	True				
ANR	1043362	IdentifierDecl	"* separator = """""		1043329	0					
ANR	1043363	IdentifierDeclType	const char *		1043329	0					
ANR	1043364	Identifier	separator		1043329	1					
ANR	1043365	AssignmentExpression	"* separator = """""		1043329	2		=			
ANR	1043366	Identifier	separator		1043329	0					
ANR	1043367	PrimaryExpression	""""""		1043329	1					
ANR	1043368	IdentifierDeclStatement	bool match = false ;	527:1:14824:14842	1043329	5	True				
ANR	1043369	IdentifierDecl	match = false		1043329	0					
ANR	1043370	IdentifierDeclType	bool		1043329	0					
ANR	1043371	Identifier	match		1043329	1					
ANR	1043372	AssignmentExpression	match = false		1043329	2		=			
ANR	1043373	Identifier	false		1043329	0					
ANR	1043374	Identifier	false		1043329	1					
ANR	1043375	Statement	ls_foreach	528:1:14845:14854	1043329	6	True				
ANR	1043376	Statement	(	528:12:14856:14856	1043329	7	True				
ANR	1043377	Statement	l	528:13:14857:14857	1043329	8	True				
ANR	1043378	Statement	","	528:14:14858:14858	1043329	9	True				
ANR	1043379	Statement	iter	528:16:14860:14863	1043329	10	True				
ANR	1043380	Statement	","	528:20:14864:14864	1043329	11	True				
ANR	1043381	Statement	kv	528:22:14866:14867	1043329	12	True				
ANR	1043382	Statement	)	528:24:14868:14868	1043329	13	True				
ANR	1043383	CompoundStatement		8:26:173:173	1043329	14					
ANR	1043384	IfStatement	"if ( ! strcmp ( sdbkv_value ( kv ) , ""enum"" ) )"		1043329	0					
ANR	1043385	Condition	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"	529:6:14878:14911	1043329	0	True				
ANR	1043386	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"		1043329	0					
ANR	1043387	UnaryOperator	!		1043329	0					
ANR	1043388	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""enum"" )"		1043329	1					
ANR	1043389	Callee	strcmp		1043329	0					
ANR	1043390	Identifier	strcmp		1043329	0					
ANR	1043391	ArgumentList	sdbkv_value ( kv )		1043329	1					
ANR	1043392	Argument	sdbkv_value ( kv )		1043329	0					
ANR	1043393	CallExpression	sdbkv_value ( kv )		1043329	0					
ANR	1043394	Callee	sdbkv_value		1043329	0					
ANR	1043395	Identifier	sdbkv_value		1043329	0					
ANR	1043396	ArgumentList	kv		1043329	1					
ANR	1043397	Argument	kv		1043329	0					
ANR	1043398	Identifier	kv		1043329	0					
ANR	1043399	Argument	"""enum"""		1043329	1					
ANR	1043400	PrimaryExpression	"""enum"""		1043329	0					
ANR	1043401	CompoundStatement		9:42:217:217	1043329	1					
ANR	1043402	IfStatement	"if ( ! name || strcmp ( sdbkv_value ( kv ) , name ) )"		1043329	0					
ANR	1043403	Condition	"! name || strcmp ( sdbkv_value ( kv ) , name )"	530:7:14923:14962	1043329	0	True				
ANR	1043404	OrExpression	"! name || strcmp ( sdbkv_value ( kv ) , name )"		1043329	0		||			
ANR	1043405	UnaryOperationExpression	! name		1043329	0					
ANR	1043406	UnaryOperator	!		1043329	0					
ANR	1043407	Identifier	name		1043329	1					
ANR	1043408	CallExpression	"strcmp ( sdbkv_value ( kv ) , name )"		1043329	1					
ANR	1043409	Callee	strcmp		1043329	0					
ANR	1043410	Identifier	strcmp		1043329	0					
ANR	1043411	ArgumentList	sdbkv_value ( kv )		1043329	1					
ANR	1043412	Argument	sdbkv_value ( kv )		1043329	0					
ANR	1043413	CallExpression	sdbkv_value ( kv )		1043329	0					
ANR	1043414	Callee	sdbkv_value		1043329	0					
ANR	1043415	Identifier	sdbkv_value		1043329	0					
ANR	1043416	ArgumentList	kv		1043329	1					
ANR	1043417	Argument	kv		1043329	0					
ANR	1043418	Identifier	kv		1043329	0					
ANR	1043419	Argument	name		1043329	1					
ANR	1043420	Identifier	name		1043329	0					
ANR	1043421	CompoundStatement		10:49:268:268	1043329	1					
ANR	1043422	ExpressionStatement	free ( name )	531:4:14971:14982	1043329	0	True				
ANR	1043423	CallExpression	free ( name )		1043329	0					
ANR	1043424	Callee	free		1043329	0					
ANR	1043425	Identifier	free		1043329	0					
ANR	1043426	ArgumentList	name		1043329	1					
ANR	1043427	Argument	name		1043329	0					
ANR	1043428	Identifier	name		1043329	0					
ANR	1043429	ExpressionStatement	name = strdup ( sdbkv_key ( kv ) )	532:4:14988:15018	1043329	1	True				
ANR	1043430	AssignmentExpression	name = strdup ( sdbkv_key ( kv ) )		1043329	0		=			
ANR	1043431	Identifier	name		1043329	0					
ANR	1043432	CallExpression	strdup ( sdbkv_key ( kv ) )		1043329	1					
ANR	1043433	Callee	strdup		1043329	0					
ANR	1043434	Identifier	strdup		1043329	0					
ANR	1043435	ArgumentList	sdbkv_key ( kv )		1043329	1					
ANR	1043436	Argument	sdbkv_key ( kv )		1043329	0					
ANR	1043437	CallExpression	sdbkv_key ( kv )		1043329	0					
ANR	1043438	Callee	sdbkv_key		1043329	0					
ANR	1043439	Identifier	sdbkv_key		1043329	0					
ANR	1043440	ArgumentList	kv		1043329	1					
ANR	1043441	Argument	kv		1043329	0					
ANR	1043442	Identifier	kv		1043329	0					
ANR	1043443	IfStatement	if ( name && ( arg && * arg ) )		1043329	2					
ANR	1043444	Condition	name && ( arg && * arg )	533:8:15028:15048	1043329	0	True				
ANR	1043445	AndExpression	name && ( arg && * arg )		1043329	0		&&			
ANR	1043446	Identifier	name		1043329	0					
ANR	1043447	AndExpression	arg && * arg		1043329	1		&&			
ANR	1043448	Identifier	arg		1043329	0					
ANR	1043449	UnaryOperationExpression	* arg		1043329	1					
ANR	1043450	UnaryOperator	*		1043329	0					
ANR	1043451	Identifier	arg		1043329	1					
ANR	1043452	CompoundStatement		13:31:354:354	1043329	1					
ANR	1043453	IfStatement	"if ( ! strcmp ( arg , name ) )"		1043329	0					
ANR	1043454	Condition	"! strcmp ( arg , name )"	534:9:15062:15080	1043329	0	True				
ANR	1043455	UnaryOperationExpression	"! strcmp ( arg , name )"		1043329	0					
ANR	1043456	UnaryOperator	!		1043329	0					
ANR	1043457	CallExpression	"strcmp ( arg , name )"		1043329	1					
ANR	1043458	Callee	strcmp		1043329	0					
ANR	1043459	Identifier	strcmp		1043329	0					
ANR	1043460	ArgumentList	arg		1043329	1					
ANR	1043461	Argument	arg		1043329	0					
ANR	1043462	Identifier	arg		1043329	0					
ANR	1043463	Argument	name		1043329	1					
ANR	1043464	Identifier	name		1043329	0					
ANR	1043465	CompoundStatement		14:30:386:386	1043329	1					
ANR	1043466	ExpressionStatement	match = true	535:6:15091:15103	1043329	0	True				
ANR	1043467	AssignmentExpression	match = true		1043329	0		=			
ANR	1043468	Identifier	match		1043329	0					
ANR	1043469	Identifier	true		1043329	1					
ANR	1043470	ElseStatement	else		1043329	0					
ANR	1043471	CompoundStatement		16:12:420:420	1043329	0					
ANR	1043472	ContinueStatement	continue ;	537:6:15125:15133	1043329	0	True				
ANR	1043473	ExpressionStatement	"r_cons_printf ( ""%s %s {%s"" , sdbkv_value ( kv ) , name , multiline ? ""\\n"" : """" )"	540:4:15152:15224	1043329	3	True				
ANR	1043474	CallExpression	"r_cons_printf ( ""%s %s {%s"" , sdbkv_value ( kv ) , name , multiline ? ""\\n"" : """" )"		1043329	0					
ANR	1043475	Callee	r_cons_printf		1043329	0					
ANR	1043476	Identifier	r_cons_printf		1043329	0					
ANR	1043477	ArgumentList	"""%s %s {%s"""		1043329	1					
ANR	1043478	Argument	"""%s %s {%s"""		1043329	0					
ANR	1043479	PrimaryExpression	"""%s %s {%s"""		1043329	0					
ANR	1043480	Argument	sdbkv_value ( kv )		1043329	1					
ANR	1043481	CallExpression	sdbkv_value ( kv )		1043329	0					
ANR	1043482	Callee	sdbkv_value		1043329	0					
ANR	1043483	Identifier	sdbkv_value		1043329	0					
ANR	1043484	ArgumentList	kv		1043329	1					
ANR	1043485	Argument	kv		1043329	0					
ANR	1043486	Identifier	kv		1043329	0					
ANR	1043487	Argument	name		1043329	2					
ANR	1043488	Identifier	name		1043329	0					
ANR	1043489	Argument	"multiline ? ""\\n"" : """""		1043329	3					
ANR	1043490	ConditionalExpression	"multiline ? ""\\n"" : """""		1043329	0					
ANR	1043491	Condition	multiline		1043329	0					
ANR	1043492	Identifier	multiline		1043329	0					
ANR	1043493	PrimaryExpression	"""\\n"""		1043329	1					
ANR	1043494	PrimaryExpression	""""""		1043329	2					
ANR	1043495	CompoundStatement		22:5:540:581	1043329	4					
ANR	1043496	IdentifierDeclStatement	"RList * list = r_type_get_enum ( TDB , name ) ;"	542:5:15237:15278	1043329	0	True				
ANR	1043497	IdentifierDecl	"* list = r_type_get_enum ( TDB , name )"		1043329	0					
ANR	1043498	IdentifierDeclType	RList *		1043329	0					
ANR	1043499	Identifier	list		1043329	1					
ANR	1043500	AssignmentExpression	"* list = r_type_get_enum ( TDB , name )"		1043329	2		=			
ANR	1043501	Identifier	list		1043329	0					
ANR	1043502	CallExpression	"r_type_get_enum ( TDB , name )"		1043329	1					
ANR	1043503	Callee	r_type_get_enum		1043329	0					
ANR	1043504	Identifier	r_type_get_enum		1043329	0					
ANR	1043505	ArgumentList	TDB		1043329	1					
ANR	1043506	Argument	TDB		1043329	0					
ANR	1043507	Identifier	TDB		1043329	0					
ANR	1043508	Argument	name		1043329	1					
ANR	1043509	Identifier	name		1043329	0					
ANR	1043510	IfStatement	if ( list && ! r_list_empty ( list ) )		1043329	1					
ANR	1043511	Condition	list && ! r_list_empty ( list )	543:9:15289:15316	1043329	0	True				
ANR	1043512	AndExpression	list && ! r_list_empty ( list )		1043329	0		&&			
ANR	1043513	Identifier	list		1043329	0					
ANR	1043514	UnaryOperationExpression	! r_list_empty ( list )		1043329	1					
ANR	1043515	UnaryOperator	!		1043329	0					
ANR	1043516	CallExpression	r_list_empty ( list )		1043329	1					
ANR	1043517	Callee	r_list_empty		1043329	0					
ANR	1043518	Identifier	r_list_empty		1043329	0					
ANR	1043519	ArgumentList	list		1043329	1					
ANR	1043520	Argument	list		1043329	0					
ANR	1043521	Identifier	list		1043329	0					
ANR	1043522	CompoundStatement		25:6:653:670	1043329	1					
ANR	1043523	IdentifierDeclStatement	RListIter * iter ;	544:6:15327:15342	1043329	0	True				
ANR	1043524	IdentifierDecl	* iter		1043329	0					
ANR	1043525	IdentifierDeclType	RListIter *		1043329	0					
ANR	1043526	Identifier	iter		1043329	1					
ANR	1043527	IdentifierDeclStatement	RTypeEnum * member ;	545:6:15350:15367	1043329	1	True				
ANR	1043528	IdentifierDecl	* member		1043329	0					
ANR	1043529	IdentifierDeclType	RTypeEnum *		1043329	0					
ANR	1043530	Identifier	member		1043329	1					
ANR	1043531	ExpressionStatement	"separator = multiline ? ""\\t"" : """""	546:6:15375:15406	1043329	2	True				
ANR	1043532	AssignmentExpression	"separator = multiline ? ""\\t"" : """""		1043329	0		=			
ANR	1043533	Identifier	separator		1043329	0					
ANR	1043534	ConditionalExpression	"multiline ? ""\\t"" : """""		1043329	1					
ANR	1043535	Condition	multiline		1043329	0					
ANR	1043536	Identifier	multiline		1043329	0					
ANR	1043537	PrimaryExpression	"""\\t"""		1043329	1					
ANR	1043538	PrimaryExpression	""""""		1043329	2					
ANR	1043539	Statement	r_list_foreach	547:6:15414:15427	1043329	3	True				
ANR	1043540	Statement	(	547:21:15429:15429	1043329	4	True				
ANR	1043541	Statement	list	547:22:15430:15433	1043329	5	True				
ANR	1043542	Statement	","	547:26:15434:15434	1043329	6	True				
ANR	1043543	Statement	iter	547:28:15436:15439	1043329	7	True				
ANR	1043544	Statement	","	547:32:15440:15440	1043329	8	True				
ANR	1043545	Statement	member	547:34:15442:15447	1043329	9	True				
ANR	1043546	Statement	)	547:40:15448:15448	1043329	10	True				
ANR	1043547	CompoundStatement		27:42:753:753	1043329	11					
ANR	1043548	ExpressionStatement	"r_cons_printf ( ""%s%s = %d"" , separator , member -> name , r_num_math ( NULL , member -> val ) )"	548:7:15459:15543	1043329	0	True				
ANR	1043549	CallExpression	"r_cons_printf ( ""%s%s = %d"" , separator , member -> name , r_num_math ( NULL , member -> val ) )"		1043329	0					
ANR	1043550	Callee	r_cons_printf		1043329	0					
ANR	1043551	Identifier	r_cons_printf		1043329	0					
ANR	1043552	ArgumentList	"""%s%s = %d"""		1043329	1					
ANR	1043553	Argument	"""%s%s = %d"""		1043329	0					
ANR	1043554	PrimaryExpression	"""%s%s = %d"""		1043329	0					
ANR	1043555	Argument	separator		1043329	1					
ANR	1043556	Identifier	separator		1043329	0					
ANR	1043557	Argument	member -> name		1043329	2					
ANR	1043558	PtrMemberAccess	member -> name		1043329	0					
ANR	1043559	Identifier	member		1043329	0					
ANR	1043560	Identifier	name		1043329	1					
ANR	1043561	Argument	"r_num_math ( NULL , member -> val )"		1043329	3					
ANR	1043562	CallExpression	"r_num_math ( NULL , member -> val )"		1043329	0					
ANR	1043563	Callee	r_num_math		1043329	0					
ANR	1043564	Identifier	r_num_math		1043329	0					
ANR	1043565	ArgumentList	NULL		1043329	1					
ANR	1043566	Argument	NULL		1043329	0					
ANR	1043567	Identifier	NULL		1043329	0					
ANR	1043568	Argument	member -> val		1043329	1					
ANR	1043569	PtrMemberAccess	member -> val		1043329	0					
ANR	1043570	Identifier	member		1043329	0					
ANR	1043571	Identifier	val		1043329	1					
ANR	1043572	ExpressionStatement	"separator = multiline ? "",\\n\\t"" : "", """	549:7:15552:15588	1043329	1	True				
ANR	1043573	AssignmentExpression	"separator = multiline ? "",\\n\\t"" : "", """		1043329	0		=			
ANR	1043574	Identifier	separator		1043329	0					
ANR	1043575	ConditionalExpression	"multiline ? "",\\n\\t"" : "", """		1043329	1					
ANR	1043576	Condition	multiline		1043329	0					
ANR	1043577	Identifier	multiline		1043329	0					
ANR	1043578	PrimaryExpression	""",\\n\\t"""		1043329	1					
ANR	1043579	PrimaryExpression	""", """		1043329	2					
ANR	1043580	ExpressionStatement	r_list_free ( list )	552:5:15610:15628	1043329	2	True				
ANR	1043581	CallExpression	r_list_free ( list )		1043329	0					
ANR	1043582	Callee	r_list_free		1043329	0					
ANR	1043583	Identifier	r_list_free		1043329	0					
ANR	1043584	ArgumentList	list		1043329	1					
ANR	1043585	Argument	list		1043329	0					
ANR	1043586	Identifier	list		1043329	0					
ANR	1043587	ExpressionStatement	"r_cons_println ( multiline ? ""\\n};"" : ""};"" )"	554:4:15640:15680	1043329	5	True				
ANR	1043588	CallExpression	"r_cons_println ( multiline ? ""\\n};"" : ""};"" )"		1043329	0					
ANR	1043589	Callee	r_cons_println		1043329	0					
ANR	1043590	Identifier	r_cons_println		1043329	0					
ANR	1043591	ArgumentList	"multiline ? ""\\n};"" : ""};"""		1043329	1					
ANR	1043592	Argument	"multiline ? ""\\n};"" : ""};"""		1043329	0					
ANR	1043593	ConditionalExpression	"multiline ? ""\\n};"" : ""};"""		1043329	0					
ANR	1043594	Condition	multiline		1043329	0					
ANR	1043595	Identifier	multiline		1043329	0					
ANR	1043596	PrimaryExpression	"""\\n};"""		1043329	1					
ANR	1043597	PrimaryExpression	"""};"""		1043329	2					
ANR	1043598	IfStatement	if ( match )		1043329	6					
ANR	1043599	Condition	match	555:8:15690:15694	1043329	0	True				
ANR	1043600	Identifier	match		1043329	0					
ANR	1043601	CompoundStatement		35:15:1000:1000	1043329	1					
ANR	1043602	BreakStatement	break ;	556:5:15704:15709	1043329	0	True				
ANR	1043603	ExpressionStatement	free ( name )	561:1:15730:15741	1043329	15	True				
ANR	1043604	CallExpression	free ( name )		1043329	0					
ANR	1043605	Callee	free		1043329	0					
ANR	1043606	Identifier	free		1043329	0					
ANR	1043607	ArgumentList	name		1043329	1					
ANR	1043608	Argument	name		1043329	0					
ANR	1043609	Identifier	name		1043329	0					
ANR	1043610	ExpressionStatement	ls_free ( l )	562:1:15744:15755	1043329	16	True				
ANR	1043611	CallExpression	ls_free ( l )		1043329	0					
ANR	1043612	Callee	ls_free		1043329	0					
ANR	1043613	Identifier	ls_free		1043329	0					
ANR	1043614	ArgumentList	l		1043329	1					
ANR	1043615	Argument	l		1043329	0					
ANR	1043616	Identifier	l		1043329	0					
ANR	1043617	ReturnType	static void		1043329	1					
ANR	1043618	Identifier	print_enum_in_c_format		1043329	2					
ANR	1043619	ParameterList	"Sdb * TDB , const char * arg , bool multiline"		1043329	3					
ANR	1043620	Parameter	Sdb * TDB	521:35:14653:14660	1043329	0	True				
ANR	1043621	ParameterType	Sdb *		1043329	0					
ANR	1043622	Identifier	TDB		1043329	1					
ANR	1043623	Parameter	const char * arg	521:45:14663:14677	1043329	1	True				
ANR	1043624	ParameterType	const char *		1043329	0					
ANR	1043625	Identifier	arg		1043329	1					
ANR	1043626	Parameter	bool multiline	521:62:14680:14693	1043329	2	True				
ANR	1043627	ParameterType	bool		1043329	0					
ANR	1043628	Identifier	multiline		1043329	1					
ANR	1043629	CFGEntryNode	ENTRY		1043329		True				
ANR	1043630	CFGExitNode	EXIT		1043329		True				
ANR	1043631	CFGErrorNode	ERROR		1043329		True				
ANR	1043632	Symbol	r_num_math		1043329						
ANR	1043633	Symbol	TDB		1043329						
ANR	1043634	Symbol	member -> val		1043329						
ANR	1043635	Symbol	arg		1043329						
ANR	1043636	Symbol	member		1043329						
ANR	1043637	Symbol	strcmp		1043329						
ANR	1043638	Symbol	NULL		1043329						
ANR	1043639	Symbol	sdbkv_key		1043329						
ANR	1043640	Symbol	false		1043329						
ANR	1043641	Symbol	match		1043329						
ANR	1043642	Symbol	iter		1043329						
ANR	1043643	Symbol	sdb_foreach_list		1043329						
ANR	1043644	Symbol	kv		1043329						
ANR	1043645	Symbol	sdbkv_value		1043329						
ANR	1043646	Symbol	* member		1043329						
ANR	1043647	Symbol	l		1043329						
ANR	1043648	Symbol	list		1043329						
ANR	1043649	Symbol	separator		1043329						
ANR	1043650	Symbol	member -> name		1043329						
ANR	1043651	Symbol	r_type_get_enum		1043329						
ANR	1043652	Symbol	multiline		1043329						
ANR	1043653	Symbol	name		1043329						
ANR	1043654	Symbol	true		1043329						
ANR	1043655	Symbol	r_list_empty		1043329						
ANR	1043656	Symbol	strdup		1043329						
ANR	1043657	Symbol	* arg		1043329						
ANR	1043658	Function	printkey_cb	565:0:15760:15859							
ANR	1043659	FunctionDef	"printkey_cb (void * user , const char * k , const char * v)"		1043658	0					
ANR	1043660	CompoundStatement		565:65:15825:15859	1043658	0					
ANR	1043661	ExpressionStatement	r_cons_println ( k )	566:1:15828:15846	1043658	0	True				
ANR	1043662	CallExpression	r_cons_println ( k )		1043658	0					
ANR	1043663	Callee	r_cons_println		1043658	0					
ANR	1043664	Identifier	r_cons_println		1043658	0					
ANR	1043665	ArgumentList	k		1043658	1					
ANR	1043666	Argument	k		1043658	0					
ANR	1043667	Identifier	k		1043658	0					
ANR	1043668	ReturnStatement	return 1 ;	567:1:15849:15857	1043658	1	True				
ANR	1043669	PrimaryExpression	1		1043658	0					
ANR	1043670	ReturnType	static int		1043658	1					
ANR	1043671	Identifier	printkey_cb		1043658	2					
ANR	1043672	ParameterList	"void * user , const char * k , const char * v"		1043658	3					
ANR	1043673	Parameter	void * user	565:23:15783:15792	1043658	0	True				
ANR	1043674	ParameterType	void *		1043658	0					
ANR	1043675	Identifier	user		1043658	1					
ANR	1043676	Parameter	const char * k	565:35:15795:15807	1043658	1	True				
ANR	1043677	ParameterType	const char *		1043658	0					
ANR	1043678	Identifier	k		1043658	1					
ANR	1043679	Parameter	const char * v	565:50:15810:15822	1043658	2	True				
ANR	1043680	ParameterType	const char *		1043658	0					
ANR	1043681	Identifier	v		1043658	1					
ANR	1043682	CFGEntryNode	ENTRY		1043658		True				
ANR	1043683	CFGExitNode	EXIT		1043658		True				
ANR	1043684	Symbol	v		1043658						
ANR	1043685	Symbol	k		1043658						
ANR	1043686	Symbol	user		1043658						
ANR	1043687	Function	printFunctionTypeC	571:0:15931:16670							
ANR	1043688	FunctionDef	"printFunctionTypeC (RCore * core , const char * input)"		1043687	0					
ANR	1043689	CompoundStatement		571:63:15994:16670	1043687	0					
ANR	1043690	IdentifierDeclStatement	Sdb * TDB = core -> anal -> sdb_types ;	572:1:15997:16029	1043687	0	True				
ANR	1043691	IdentifierDecl	* TDB = core -> anal -> sdb_types		1043687	0					
ANR	1043692	IdentifierDeclType	Sdb *		1043687	0					
ANR	1043693	Identifier	TDB		1043687	1					
ANR	1043694	AssignmentExpression	* TDB = core -> anal -> sdb_types		1043687	2		=			
ANR	1043695	Identifier	TDB		1043687	0					
ANR	1043696	PtrMemberAccess	core -> anal -> sdb_types		1043687	1					
ANR	1043697	PtrMemberAccess	core -> anal		1043687	0					
ANR	1043698	Identifier	core		1043687	0					
ANR	1043699	Identifier	anal		1043687	1					
ANR	1043700	Identifier	sdb_types		1043687	1					
ANR	1043701	IdentifierDeclStatement	"char * res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) ) ;"	573:1:16032:16103	1043687	1	True				
ANR	1043702	IdentifierDecl	"* res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) )"		1043687	0					
ANR	1043703	IdentifierDeclType	char *		1043687	0					
ANR	1043704	Identifier	res		1043687	1					
ANR	1043705	AssignmentExpression	"* res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) )"		1043687	2		=			
ANR	1043706	Identifier	res		1043687	0					
ANR	1043707	CallExpression	"sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) )"		1043687	1					
ANR	1043708	Callee	sdb_querys		1043687	0					
ANR	1043709	Identifier	sdb_querys		1043687	0					
ANR	1043710	ArgumentList	TDB		1043687	1					
ANR	1043711	Argument	TDB		1043687	0					
ANR	1043712	Identifier	TDB		1043687	0					
ANR	1043713	Argument	NULL		1043687	1					
ANR	1043714	Identifier	NULL		1043687	0					
ANR	1043715	Argument	- 1		1043687	2					
ANR	1043716	UnaryOperationExpression	- 1		1043687	0					
ANR	1043717	UnaryOperator	-		1043687	0					
ANR	1043718	PrimaryExpression	1		1043687	1					
ANR	1043719	Argument	"sdb_fmt ( ""func.%s.args"" , input )"		1043687	3					
ANR	1043720	CallExpression	"sdb_fmt ( ""func.%s.args"" , input )"		1043687	0					
ANR	1043721	Callee	sdb_fmt		1043687	0					
ANR	1043722	Identifier	sdb_fmt		1043687	0					
ANR	1043723	ArgumentList	"""func.%s.args"""		1043687	1					
ANR	1043724	Argument	"""func.%s.args"""		1043687	0					
ANR	1043725	PrimaryExpression	"""func.%s.args"""		1043687	0					
ANR	1043726	Argument	input		1043687	1					
ANR	1043727	Identifier	input		1043687	0					
ANR	1043728	IdentifierDeclStatement	const char * name = r_str_trim_ro ( input ) ;	574:1:16106:16146	1043687	2	True				
ANR	1043729	IdentifierDecl	* name = r_str_trim_ro ( input )		1043687	0					
ANR	1043730	IdentifierDeclType	const char *		1043687	0					
ANR	1043731	Identifier	name		1043687	1					
ANR	1043732	AssignmentExpression	* name = r_str_trim_ro ( input )		1043687	2		=			
ANR	1043733	Identifier	name		1043687	0					
ANR	1043734	CallExpression	r_str_trim_ro ( input )		1043687	1					
ANR	1043735	Callee	r_str_trim_ro		1043687	0					
ANR	1043736	Identifier	r_str_trim_ro		1043687	0					
ANR	1043737	ArgumentList	input		1043687	1					
ANR	1043738	Argument	input		1043687	0					
ANR	1043739	Identifier	input		1043687	0					
ANR	1043740	IdentifierDeclStatement	"int i , args = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 ) ;"	575:1:16149:16215	1043687	3	True				
ANR	1043741	IdentifierDecl	i		1043687	0					
ANR	1043742	IdentifierDeclType	int		1043687	0					
ANR	1043743	Identifier	i		1043687	1					
ANR	1043744	IdentifierDecl	"args = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		1043687	1					
ANR	1043745	IdentifierDeclType	int		1043687	0					
ANR	1043746	Identifier	args		1043687	1					
ANR	1043747	AssignmentExpression	"args = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		1043687	2		=			
ANR	1043748	Identifier	args		1043687	0					
ANR	1043749	CallExpression	"sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		1043687	1					
ANR	1043750	Callee	sdb_num_get		1043687	0					
ANR	1043751	Identifier	sdb_num_get		1043687	0					
ANR	1043752	ArgumentList	TDB		1043687	1					
ANR	1043753	Argument	TDB		1043687	0					
ANR	1043754	Identifier	TDB		1043687	0					
ANR	1043755	Argument	"sdb_fmt ( ""func.%s.args"" , name )"		1043687	1					
ANR	1043756	CallExpression	"sdb_fmt ( ""func.%s.args"" , name )"		1043687	0					
ANR	1043757	Callee	sdb_fmt		1043687	0					
ANR	1043758	Identifier	sdb_fmt		1043687	0					
ANR	1043759	ArgumentList	"""func.%s.args"""		1043687	1					
ANR	1043760	Argument	"""func.%s.args"""		1043687	0					
ANR	1043761	PrimaryExpression	"""func.%s.args"""		1043687	0					
ANR	1043762	Argument	name		1043687	1					
ANR	1043763	Identifier	name		1043687	0					
ANR	1043764	Argument	0		1043687	2					
ANR	1043765	PrimaryExpression	0		1043687	0					
ANR	1043766	IdentifierDeclStatement	"const char * ret = sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 ) ;"	576:1:16218:16289	1043687	4	True				
ANR	1043767	IdentifierDecl	"* ret = sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 )"		1043687	0					
ANR	1043768	IdentifierDeclType	const char *		1043687	0					
ANR	1043769	Identifier	ret		1043687	1					
ANR	1043770	AssignmentExpression	"* ret = sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 )"		1043687	2		=			
ANR	1043771	Identifier	ret		1043687	0					
ANR	1043772	CallExpression	"sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 )"		1043687	1					
ANR	1043773	Callee	sdb_const_get		1043687	0					
ANR	1043774	Identifier	sdb_const_get		1043687	0					
ANR	1043775	ArgumentList	TDB		1043687	1					
ANR	1043776	Argument	TDB		1043687	0					
ANR	1043777	Identifier	TDB		1043687	0					
ANR	1043778	Argument	"sdb_fmt ( ""func.%s.ret"" , name )"		1043687	1					
ANR	1043779	CallExpression	"sdb_fmt ( ""func.%s.ret"" , name )"		1043687	0					
ANR	1043780	Callee	sdb_fmt		1043687	0					
ANR	1043781	Identifier	sdb_fmt		1043687	0					
ANR	1043782	ArgumentList	"""func.%s.ret"""		1043687	1					
ANR	1043783	Argument	"""func.%s.ret"""		1043687	0					
ANR	1043784	PrimaryExpression	"""func.%s.ret"""		1043687	0					
ANR	1043785	Argument	name		1043687	1					
ANR	1043786	Identifier	name		1043687	0					
ANR	1043787	Argument	0		1043687	2					
ANR	1043788	PrimaryExpression	0		1043687	0					
ANR	1043789	IfStatement	if ( ! ret || ! name )		1043687	5					
ANR	1043790	Condition	! ret || ! name	577:5:16296:16308	1043687	0	True				
ANR	1043791	OrExpression	! ret || ! name		1043687	0		||			
ANR	1043792	UnaryOperationExpression	! ret		1043687	0					
ANR	1043793	UnaryOperator	!		1043687	0					
ANR	1043794	Identifier	ret		1043687	1					
ANR	1043795	UnaryOperationExpression	! name		1043687	1					
ANR	1043796	UnaryOperator	!		1043687	0					
ANR	1043797	Identifier	name		1043687	1					
ANR	1043798	CompoundStatement		7:20:316:316	1043687	1					
ANR	1043799	ReturnStatement	return ;	579:2:16352:16358	1043687	0	True				
ANR	1043800	ExpressionStatement	"r_cons_printf ( ""%s %s ("" , ret , name )"	582:1:16365:16401	1043687	6	True				
ANR	1043801	CallExpression	"r_cons_printf ( ""%s %s ("" , ret , name )"		1043687	0					
ANR	1043802	Callee	r_cons_printf		1043687	0					
ANR	1043803	Identifier	r_cons_printf		1043687	0					
ANR	1043804	ArgumentList	"""%s %s ("""		1043687	1					
ANR	1043805	Argument	"""%s %s ("""		1043687	0					
ANR	1043806	PrimaryExpression	"""%s %s ("""		1043687	0					
ANR	1043807	Argument	ret		1043687	1					
ANR	1043808	Identifier	ret		1043687	0					
ANR	1043809	Argument	name		1043687	2					
ANR	1043810	Identifier	name		1043687	0					
ANR	1043811	ForStatement	for ( i = 0 ; i < args ; i ++ )		1043687	7					
ANR	1043812	ForInit	i = 0 ;	583:6:16409:16414	1043687	0	True				
ANR	1043813	AssignmentExpression	i = 0		1043687	0		=			
ANR	1043814	Identifier	i		1043687	0					
ANR	1043815	PrimaryExpression	0		1043687	1					
ANR	1043816	Condition	i < args	583:13:16416:16423	1043687	1	True				
ANR	1043817	RelationalExpression	i < args		1043687	0		<			
ANR	1043818	Identifier	i		1043687	0					
ANR	1043819	Identifier	args		1043687	1					
ANR	1043820	PostIncDecOperationExpression	i ++	583:23:16426:16428	1043687	2	True				
ANR	1043821	Identifier	i		1043687	0					
ANR	1043822	IncDec	++		1043687	1					
ANR	1043823	CompoundStatement		15:2:510:541	1043687	3					
ANR	1043824	IdentifierDeclStatement	"char * type = sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 ) ;"	584:2:16435:16501	1043687	0	True				
ANR	1043825	IdentifierDecl	"* type = sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		1043687	0					
ANR	1043826	IdentifierDeclType	char *		1043687	0					
ANR	1043827	Identifier	type		1043687	1					
ANR	1043828	AssignmentExpression	"* type = sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		1043687	2		=			
ANR	1043829	Identifier	type		1043687	0					
ANR	1043830	CallExpression	"sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		1043687	1					
ANR	1043831	Callee	sdb_get		1043687	0					
ANR	1043832	Identifier	sdb_get		1043687	0					
ANR	1043833	ArgumentList	TDB		1043687	1					
ANR	1043834	Argument	TDB		1043687	0					
ANR	1043835	Identifier	TDB		1043687	0					
ANR	1043836	Argument	"sdb_fmt ( ""func.%s.arg.%d"" , name , i )"		1043687	1					
ANR	1043837	CallExpression	"sdb_fmt ( ""func.%s.arg.%d"" , name , i )"		1043687	0					
ANR	1043838	Callee	sdb_fmt		1043687	0					
ANR	1043839	Identifier	sdb_fmt		1043687	0					
ANR	1043840	ArgumentList	"""func.%s.arg.%d"""		1043687	1					
ANR	1043841	Argument	"""func.%s.arg.%d"""		1043687	0					
ANR	1043842	PrimaryExpression	"""func.%s.arg.%d"""		1043687	0					
ANR	1043843	Argument	name		1043687	1					
ANR	1043844	Identifier	name		1043687	0					
ANR	1043845	Argument	i		1043687	2					
ANR	1043846	Identifier	i		1043687	0					
ANR	1043847	Argument	0		1043687	2					
ANR	1043848	PrimaryExpression	0		1043687	0					
ANR	1043849	IdentifierDeclStatement	"char * name = strchr ( type , ',' ) ;"	585:2:16505:16536	1043687	1	True				
ANR	1043850	IdentifierDecl	"* name = strchr ( type , ',' )"		1043687	0					
ANR	1043851	IdentifierDeclType	char *		1043687	0					
ANR	1043852	Identifier	name		1043687	1					
ANR	1043853	AssignmentExpression	"* name = strchr ( type , ',' )"		1043687	2		=			
ANR	1043854	Identifier	name		1043687	0					
ANR	1043855	CallExpression	"strchr ( type , ',' )"		1043687	1					
ANR	1043856	Callee	strchr		1043687	0					
ANR	1043857	Identifier	strchr		1043687	0					
ANR	1043858	ArgumentList	type		1043687	1					
ANR	1043859	Argument	type		1043687	0					
ANR	1043860	Identifier	type		1043687	0					
ANR	1043861	Argument	"','"		1043687	1					
ANR	1043862	PrimaryExpression	"','"		1043687	0					
ANR	1043863	IfStatement	if ( name )		1043687	2					
ANR	1043864	Condition	name	586:6:16544:16547	1043687	0	True				
ANR	1043865	Identifier	name		1043687	0					
ANR	1043866	CompoundStatement		16:12:555:555	1043687	1					
ANR	1043867	ExpressionStatement	* name ++ = 0	587:3:16555:16566	1043687	0	True				
ANR	1043868	AssignmentExpression	* name ++ = 0		1043687	0		=			
ANR	1043869	UnaryOperationExpression	* name ++		1043687	0					
ANR	1043870	UnaryOperator	*		1043687	0					
ANR	1043871	PostIncDecOperationExpression	name ++		1043687	1					
ANR	1043872	Identifier	name		1043687	0					
ANR	1043873	IncDec	++		1043687	1					
ANR	1043874	PrimaryExpression	0		1043687	1					
ANR	1043875	ExpressionStatement	"r_cons_printf ( ""%s%s %s"" , i == 0 ? """" : "", "" , type , name )"	589:2:16574:16627	1043687	3	True				
ANR	1043876	CallExpression	"r_cons_printf ( ""%s%s %s"" , i == 0 ? """" : "", "" , type , name )"		1043687	0					
ANR	1043877	Callee	r_cons_printf		1043687	0					
ANR	1043878	Identifier	r_cons_printf		1043687	0					
ANR	1043879	ArgumentList	"""%s%s %s"""		1043687	1					
ANR	1043880	Argument	"""%s%s %s"""		1043687	0					
ANR	1043881	PrimaryExpression	"""%s%s %s"""		1043687	0					
ANR	1043882	Argument	"i == 0 ? """" : "", """		1043687	1					
ANR	1043883	ConditionalExpression	"i == 0 ? """" : "", """		1043687	0					
ANR	1043884	Condition	i == 0		1043687	0					
ANR	1043885	EqualityExpression	i == 0		1043687	0		==			
ANR	1043886	Identifier	i		1043687	0					
ANR	1043887	PrimaryExpression	0		1043687	1					
ANR	1043888	PrimaryExpression	""""""		1043687	1					
ANR	1043889	PrimaryExpression	""", """		1043687	2					
ANR	1043890	Argument	type		1043687	2					
ANR	1043891	Identifier	type		1043687	0					
ANR	1043892	Argument	name		1043687	3					
ANR	1043893	Identifier	name		1043687	0					
ANR	1043894	ExpressionStatement	"r_cons_printf ( "");\\n"" )"	591:1:16633:16655	1043687	8	True				
ANR	1043895	CallExpression	"r_cons_printf ( "");\\n"" )"		1043687	0					
ANR	1043896	Callee	r_cons_printf		1043687	0					
ANR	1043897	Identifier	r_cons_printf		1043687	0					
ANR	1043898	ArgumentList	""");\\n"""		1043687	1					
ANR	1043899	Argument	""");\\n"""		1043687	0					
ANR	1043900	PrimaryExpression	""");\\n"""		1043687	0					
ANR	1043901	ExpressionStatement	free ( res )	592:1:16658:16668	1043687	9	True				
ANR	1043902	CallExpression	free ( res )		1043687	0					
ANR	1043903	Callee	free		1043687	0					
ANR	1043904	Identifier	free		1043687	0					
ANR	1043905	ArgumentList	res		1043687	1					
ANR	1043906	Argument	res		1043687	0					
ANR	1043907	Identifier	res		1043687	0					
ANR	1043908	ReturnType	static void		1043687	1					
ANR	1043909	Identifier	printFunctionTypeC		1043687	2					
ANR	1043910	ParameterList	"RCore * core , const char * input"		1043687	3					
ANR	1043911	Parameter	RCore * core	571:31:15962:15972	1043687	0	True				
ANR	1043912	ParameterType	RCore *		1043687	0					
ANR	1043913	Identifier	core		1043687	1					
ANR	1043914	Parameter	const char * input	571:44:15975:15991	1043687	1	True				
ANR	1043915	ParameterType	const char *		1043687	0					
ANR	1043916	Identifier	input		1043687	1					
ANR	1043917	CFGEntryNode	ENTRY		1043687		True				
ANR	1043918	CFGExitNode	EXIT		1043687		True				
ANR	1043919	Symbol	sdb_num_get		1043687						
ANR	1043920	Symbol	ret		1043687						
ANR	1043921	Symbol	res		1043687						
ANR	1043922	Symbol	NULL		1043687						
ANR	1043923	Symbol	* core		1043687						
ANR	1043924	Symbol	sdb_querys		1043687						
ANR	1043925	Symbol	i		1043687						
ANR	1043926	Symbol	strchr		1043687						
ANR	1043927	Symbol	sdb_get		1043687						
ANR	1043928	Symbol	core -> anal -> sdb_types		1043687						
ANR	1043929	Symbol	type		1043687						
ANR	1043930	Symbol	core -> anal		1043687						
ANR	1043931	Symbol	sdb_const_get		1043687						
ANR	1043932	Symbol	args		1043687						
ANR	1043933	Symbol	core		1043687						
ANR	1043934	Symbol	input		1043687						
ANR	1043935	Symbol	TDB		1043687						
ANR	1043936	Symbol	* core -> anal		1043687						
ANR	1043937	Symbol	r_str_trim_ro		1043687						
ANR	1043938	Symbol	name		1043687						
ANR	1043939	Symbol	sdb_fmt		1043687						
ANR	1043940	Symbol	* * core		1043687						
ANR	1043941	Symbol	* name ++		1043687						
ANR	1043942	Function	printFunctionType	595:0:16673:17596							
ANR	1043943	FunctionDef	"printFunctionType (RCore * core , const char * input)"		1043942	0					
ANR	1043944	CompoundStatement		595:62:16735:17596	1043942	0					
ANR	1043945	IdentifierDeclStatement	Sdb * TDB = core -> anal -> sdb_types ;	596:1:16738:16770	1043942	0	True				
ANR	1043946	IdentifierDecl	* TDB = core -> anal -> sdb_types		1043942	0					
ANR	1043947	IdentifierDeclType	Sdb *		1043942	0					
ANR	1043948	Identifier	TDB		1043942	1					
ANR	1043949	AssignmentExpression	* TDB = core -> anal -> sdb_types		1043942	2		=			
ANR	1043950	Identifier	TDB		1043942	0					
ANR	1043951	PtrMemberAccess	core -> anal -> sdb_types		1043942	1					
ANR	1043952	PtrMemberAccess	core -> anal		1043942	0					
ANR	1043953	Identifier	core		1043942	0					
ANR	1043954	Identifier	anal		1043942	1					
ANR	1043955	Identifier	sdb_types		1043942	1					
ANR	1043956	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	597:1:16773:16791	1043942	1	True				
ANR	1043957	IdentifierDecl	* pj = pj_new ( )		1043942	0					
ANR	1043958	IdentifierDeclType	PJ *		1043942	0					
ANR	1043959	Identifier	pj		1043942	1					
ANR	1043960	AssignmentExpression	* pj = pj_new ( )		1043942	2		=			
ANR	1043961	Identifier	pj		1043942	0					
ANR	1043962	CallExpression	pj_new ( )		1043942	1					
ANR	1043963	Callee	pj_new		1043942	0					
ANR	1043964	Identifier	pj_new		1043942	0					
ANR	1043965	ArgumentList			1043942	1					
ANR	1043966	IfStatement	if ( ! pj )		1043942	2					
ANR	1043967	Condition	! pj	598:5:16798:16800	1043942	0	True				
ANR	1043968	UnaryOperationExpression	! pj		1043942	0					
ANR	1043969	UnaryOperator	!		1043942	0					
ANR	1043970	Identifier	pj		1043942	1					
ANR	1043971	CompoundStatement		4:10:67:67	1043942	1					
ANR	1043972	ReturnStatement	return ;	599:2:16807:16813	1043942	0	True				
ANR	1043973	ExpressionStatement	pj_o ( pj )	601:1:16819:16828	1043942	3	True				
ANR	1043974	CallExpression	pj_o ( pj )		1043942	0					
ANR	1043975	Callee	pj_o		1043942	0					
ANR	1043976	Identifier	pj_o		1043942	0					
ANR	1043977	ArgumentList	pj		1043942	1					
ANR	1043978	Argument	pj		1043942	0					
ANR	1043979	Identifier	pj		1043942	0					
ANR	1043980	IdentifierDeclStatement	"char * res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) ) ;"	602:1:16831:16902	1043942	4	True				
ANR	1043981	IdentifierDecl	"* res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) )"		1043942	0					
ANR	1043982	IdentifierDeclType	char *		1043942	0					
ANR	1043983	Identifier	res		1043942	1					
ANR	1043984	AssignmentExpression	"* res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) )"		1043942	2		=			
ANR	1043985	Identifier	res		1043942	0					
ANR	1043986	CallExpression	"sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""func.%s.args"" , input ) )"		1043942	1					
ANR	1043987	Callee	sdb_querys		1043942	0					
ANR	1043988	Identifier	sdb_querys		1043942	0					
ANR	1043989	ArgumentList	TDB		1043942	1					
ANR	1043990	Argument	TDB		1043942	0					
ANR	1043991	Identifier	TDB		1043942	0					
ANR	1043992	Argument	NULL		1043942	1					
ANR	1043993	Identifier	NULL		1043942	0					
ANR	1043994	Argument	- 1		1043942	2					
ANR	1043995	UnaryOperationExpression	- 1		1043942	0					
ANR	1043996	UnaryOperator	-		1043942	0					
ANR	1043997	PrimaryExpression	1		1043942	1					
ANR	1043998	Argument	"sdb_fmt ( ""func.%s.args"" , input )"		1043942	3					
ANR	1043999	CallExpression	"sdb_fmt ( ""func.%s.args"" , input )"		1043942	0					
ANR	1044000	Callee	sdb_fmt		1043942	0					
ANR	1044001	Identifier	sdb_fmt		1043942	0					
ANR	1044002	ArgumentList	"""func.%s.args"""		1043942	1					
ANR	1044003	Argument	"""func.%s.args"""		1043942	0					
ANR	1044004	PrimaryExpression	"""func.%s.args"""		1043942	0					
ANR	1044005	Argument	input		1043942	1					
ANR	1044006	Identifier	input		1043942	0					
ANR	1044007	IdentifierDeclStatement	const char * name = r_str_trim_ro ( input ) ;	603:1:16905:16945	1043942	5	True				
ANR	1044008	IdentifierDecl	* name = r_str_trim_ro ( input )		1043942	0					
ANR	1044009	IdentifierDeclType	const char *		1043942	0					
ANR	1044010	Identifier	name		1043942	1					
ANR	1044011	AssignmentExpression	* name = r_str_trim_ro ( input )		1043942	2		=			
ANR	1044012	Identifier	name		1043942	0					
ANR	1044013	CallExpression	r_str_trim_ro ( input )		1043942	1					
ANR	1044014	Callee	r_str_trim_ro		1043942	0					
ANR	1044015	Identifier	r_str_trim_ro		1043942	0					
ANR	1044016	ArgumentList	input		1043942	1					
ANR	1044017	Argument	input		1043942	0					
ANR	1044018	Identifier	input		1043942	0					
ANR	1044019	IdentifierDeclStatement	"int i , args = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 ) ;"	604:1:16948:17014	1043942	6	True				
ANR	1044020	IdentifierDecl	i		1043942	0					
ANR	1044021	IdentifierDeclType	int		1043942	0					
ANR	1044022	Identifier	i		1043942	1					
ANR	1044023	IdentifierDecl	"args = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		1043942	1					
ANR	1044024	IdentifierDeclType	int		1043942	0					
ANR	1044025	Identifier	args		1043942	1					
ANR	1044026	AssignmentExpression	"args = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		1043942	2		=			
ANR	1044027	Identifier	args		1043942	0					
ANR	1044028	CallExpression	"sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		1043942	1					
ANR	1044029	Callee	sdb_num_get		1043942	0					
ANR	1044030	Identifier	sdb_num_get		1043942	0					
ANR	1044031	ArgumentList	TDB		1043942	1					
ANR	1044032	Argument	TDB		1043942	0					
ANR	1044033	Identifier	TDB		1043942	0					
ANR	1044034	Argument	"sdb_fmt ( ""func.%s.args"" , name )"		1043942	1					
ANR	1044035	CallExpression	"sdb_fmt ( ""func.%s.args"" , name )"		1043942	0					
ANR	1044036	Callee	sdb_fmt		1043942	0					
ANR	1044037	Identifier	sdb_fmt		1043942	0					
ANR	1044038	ArgumentList	"""func.%s.args"""		1043942	1					
ANR	1044039	Argument	"""func.%s.args"""		1043942	0					
ANR	1044040	PrimaryExpression	"""func.%s.args"""		1043942	0					
ANR	1044041	Argument	name		1043942	1					
ANR	1044042	Identifier	name		1043942	0					
ANR	1044043	Argument	0		1043942	2					
ANR	1044044	PrimaryExpression	0		1043942	0					
ANR	1044045	ExpressionStatement	"pj_ks ( pj , ""name"" , name )"	605:1:17017:17041	1043942	7	True				
ANR	1044046	CallExpression	"pj_ks ( pj , ""name"" , name )"		1043942	0					
ANR	1044047	Callee	pj_ks		1043942	0					
ANR	1044048	Identifier	pj_ks		1043942	0					
ANR	1044049	ArgumentList	pj		1043942	1					
ANR	1044050	Argument	pj		1043942	0					
ANR	1044051	Identifier	pj		1043942	0					
ANR	1044052	Argument	"""name"""		1043942	1					
ANR	1044053	PrimaryExpression	"""name"""		1043942	0					
ANR	1044054	Argument	name		1043942	2					
ANR	1044055	Identifier	name		1043942	0					
ANR	1044056	ExpressionStatement	"pj_ks ( pj , ""ret"" , sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 ) )"	606:1:17044:17116	1043942	8	True				
ANR	1044057	CallExpression	"pj_ks ( pj , ""ret"" , sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 ) )"		1043942	0					
ANR	1044058	Callee	pj_ks		1043942	0					
ANR	1044059	Identifier	pj_ks		1043942	0					
ANR	1044060	ArgumentList	pj		1043942	1					
ANR	1044061	Argument	pj		1043942	0					
ANR	1044062	Identifier	pj		1043942	0					
ANR	1044063	Argument	"""ret"""		1043942	1					
ANR	1044064	PrimaryExpression	"""ret"""		1043942	0					
ANR	1044065	Argument	"sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 )"		1043942	2					
ANR	1044066	CallExpression	"sdb_const_get ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 )"		1043942	0					
ANR	1044067	Callee	sdb_const_get		1043942	0					
ANR	1044068	Identifier	sdb_const_get		1043942	0					
ANR	1044069	ArgumentList	TDB		1043942	1					
ANR	1044070	Argument	TDB		1043942	0					
ANR	1044071	Identifier	TDB		1043942	0					
ANR	1044072	Argument	"sdb_fmt ( ""func.%s.ret"" , name )"		1043942	1					
ANR	1044073	CallExpression	"sdb_fmt ( ""func.%s.ret"" , name )"		1043942	0					
ANR	1044074	Callee	sdb_fmt		1043942	0					
ANR	1044075	Identifier	sdb_fmt		1043942	0					
ANR	1044076	ArgumentList	"""func.%s.ret"""		1043942	1					
ANR	1044077	Argument	"""func.%s.ret"""		1043942	0					
ANR	1044078	PrimaryExpression	"""func.%s.ret"""		1043942	0					
ANR	1044079	Argument	name		1043942	1					
ANR	1044080	Identifier	name		1043942	0					
ANR	1044081	Argument	0		1043942	2					
ANR	1044082	PrimaryExpression	0		1043942	0					
ANR	1044083	ExpressionStatement	"pj_k ( pj , ""args"" )"	607:1:17119:17136	1043942	9	True				
ANR	1044084	CallExpression	"pj_k ( pj , ""args"" )"		1043942	0					
ANR	1044085	Callee	pj_k		1043942	0					
ANR	1044086	Identifier	pj_k		1043942	0					
ANR	1044087	ArgumentList	pj		1043942	1					
ANR	1044088	Argument	pj		1043942	0					
ANR	1044089	Identifier	pj		1043942	0					
ANR	1044090	Argument	"""args"""		1043942	1					
ANR	1044091	PrimaryExpression	"""args"""		1043942	0					
ANR	1044092	ExpressionStatement	pj_a ( pj )	608:1:17139:17148	1043942	10	True				
ANR	1044093	CallExpression	pj_a ( pj )		1043942	0					
ANR	1044094	Callee	pj_a		1043942	0					
ANR	1044095	Identifier	pj_a		1043942	0					
ANR	1044096	ArgumentList	pj		1043942	1					
ANR	1044097	Argument	pj		1043942	0					
ANR	1044098	Identifier	pj		1043942	0					
ANR	1044099	ForStatement	for ( i = 0 ; i < args ; i ++ )		1043942	11					
ANR	1044100	ForInit	i = 0 ;	609:6:17156:17161	1043942	0	True				
ANR	1044101	AssignmentExpression	i = 0		1043942	0		=			
ANR	1044102	Identifier	i		1043942	0					
ANR	1044103	PrimaryExpression	0		1043942	1					
ANR	1044104	Condition	i < args	609:13:17163:17170	1043942	1	True				
ANR	1044105	RelationalExpression	i < args		1043942	0		<			
ANR	1044106	Identifier	i		1043942	0					
ANR	1044107	Identifier	args		1043942	1					
ANR	1044108	PostIncDecOperationExpression	i ++	609:23:17173:17175	1043942	2	True				
ANR	1044109	Identifier	i		1043942	0					
ANR	1044110	IncDec	++		1043942	1					
ANR	1044111	CompoundStatement		20:2:548:579	1043942	3					
ANR	1044112	IdentifierDeclStatement	"char * type = sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 ) ;"	610:2:17182:17248	1043942	0	True				
ANR	1044113	IdentifierDecl	"* type = sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		1043942	0					
ANR	1044114	IdentifierDeclType	char *		1043942	0					
ANR	1044115	Identifier	type		1043942	1					
ANR	1044116	AssignmentExpression	"* type = sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		1043942	2		=			
ANR	1044117	Identifier	type		1043942	0					
ANR	1044118	CallExpression	"sdb_get ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		1043942	1					
ANR	1044119	Callee	sdb_get		1043942	0					
ANR	1044120	Identifier	sdb_get		1043942	0					
ANR	1044121	ArgumentList	TDB		1043942	1					
ANR	1044122	Argument	TDB		1043942	0					
ANR	1044123	Identifier	TDB		1043942	0					
ANR	1044124	Argument	"sdb_fmt ( ""func.%s.arg.%d"" , name , i )"		1043942	1					
ANR	1044125	CallExpression	"sdb_fmt ( ""func.%s.arg.%d"" , name , i )"		1043942	0					
ANR	1044126	Callee	sdb_fmt		1043942	0					
ANR	1044127	Identifier	sdb_fmt		1043942	0					
ANR	1044128	ArgumentList	"""func.%s.arg.%d"""		1043942	1					
ANR	1044129	Argument	"""func.%s.arg.%d"""		1043942	0					
ANR	1044130	PrimaryExpression	"""func.%s.arg.%d"""		1043942	0					
ANR	1044131	Argument	name		1043942	1					
ANR	1044132	Identifier	name		1043942	0					
ANR	1044133	Argument	i		1043942	2					
ANR	1044134	Identifier	i		1043942	0					
ANR	1044135	Argument	0		1043942	2					
ANR	1044136	PrimaryExpression	0		1043942	0					
ANR	1044137	IfStatement	if ( ! type )		1043942	1					
ANR	1044138	Condition	! type	611:6:17256:17260	1043942	0	True				
ANR	1044139	UnaryOperationExpression	! type		1043942	0					
ANR	1044140	UnaryOperator	!		1043942	0					
ANR	1044141	Identifier	type		1043942	1					
ANR	1044142	CompoundStatement		17:13:527:527	1043942	1					
ANR	1044143	ContinueStatement	continue ;	612:3:17268:17276	1043942	0	True				
ANR	1044144	IdentifierDeclStatement	"char * name = strchr ( type , ',' ) ;"	614:2:17284:17315	1043942	2	True				
ANR	1044145	IdentifierDecl	"* name = strchr ( type , ',' )"		1043942	0					
ANR	1044146	IdentifierDeclType	char *		1043942	0					
ANR	1044147	Identifier	name		1043942	1					
ANR	1044148	AssignmentExpression	"* name = strchr ( type , ',' )"		1043942	2		=			
ANR	1044149	Identifier	name		1043942	0					
ANR	1044150	CallExpression	"strchr ( type , ',' )"		1043942	1					
ANR	1044151	Callee	strchr		1043942	0					
ANR	1044152	Identifier	strchr		1043942	0					
ANR	1044153	ArgumentList	type		1043942	1					
ANR	1044154	Argument	type		1043942	0					
ANR	1044155	Identifier	type		1043942	0					
ANR	1044156	Argument	"','"		1043942	1					
ANR	1044157	PrimaryExpression	"','"		1043942	0					
ANR	1044158	IfStatement	if ( name )		1043942	3					
ANR	1044159	Condition	name	615:6:17323:17326	1043942	0	True				
ANR	1044160	Identifier	name		1043942	0					
ANR	1044161	CompoundStatement		21:12:593:593	1043942	1					
ANR	1044162	ExpressionStatement	* name ++ = 0	616:3:17334:17345	1043942	0	True				
ANR	1044163	AssignmentExpression	* name ++ = 0		1043942	0		=			
ANR	1044164	UnaryOperationExpression	* name ++		1043942	0					
ANR	1044165	UnaryOperator	*		1043942	0					
ANR	1044166	PostIncDecOperationExpression	name ++		1043942	1					
ANR	1044167	Identifier	name		1043942	0					
ANR	1044168	IncDec	++		1043942	1					
ANR	1044169	PrimaryExpression	0		1043942	1					
ANR	1044170	ExpressionStatement	pj_o ( pj )	618:2:17353:17362	1043942	4	True				
ANR	1044171	CallExpression	pj_o ( pj )		1043942	0					
ANR	1044172	Callee	pj_o		1043942	0					
ANR	1044173	Identifier	pj_o		1043942	0					
ANR	1044174	ArgumentList	pj		1043942	1					
ANR	1044175	Argument	pj		1043942	0					
ANR	1044176	Identifier	pj		1043942	0					
ANR	1044177	ExpressionStatement	"pj_ks ( pj , ""type"" , type )"	619:2:17366:17390	1043942	5	True				
ANR	1044178	CallExpression	"pj_ks ( pj , ""type"" , type )"		1043942	0					
ANR	1044179	Callee	pj_ks		1043942	0					
ANR	1044180	Identifier	pj_ks		1043942	0					
ANR	1044181	ArgumentList	pj		1043942	1					
ANR	1044182	Argument	pj		1043942	0					
ANR	1044183	Identifier	pj		1043942	0					
ANR	1044184	Argument	"""type"""		1043942	1					
ANR	1044185	PrimaryExpression	"""type"""		1043942	0					
ANR	1044186	Argument	type		1043942	2					
ANR	1044187	Identifier	type		1043942	0					
ANR	1044188	IfStatement	if ( name )		1043942	6					
ANR	1044189	Condition	name	620:6:17398:17401	1043942	0	True				
ANR	1044190	Identifier	name		1043942	0					
ANR	1044191	CompoundStatement		26:12:668:668	1043942	1					
ANR	1044192	ExpressionStatement	"pj_ks ( pj , ""name"" , name )"	621:3:17409:17433	1043942	0	True				
ANR	1044193	CallExpression	"pj_ks ( pj , ""name"" , name )"		1043942	0					
ANR	1044194	Callee	pj_ks		1043942	0					
ANR	1044195	Identifier	pj_ks		1043942	0					
ANR	1044196	ArgumentList	pj		1043942	1					
ANR	1044197	Argument	pj		1043942	0					
ANR	1044198	Identifier	pj		1043942	0					
ANR	1044199	Argument	"""name"""		1043942	1					
ANR	1044200	PrimaryExpression	"""name"""		1043942	0					
ANR	1044201	Argument	name		1043942	2					
ANR	1044202	Identifier	name		1043942	0					
ANR	1044203	ElseStatement	else		1043942	0					
ANR	1044204	CompoundStatement		28:9:708:708	1043942	0					
ANR	1044205	ExpressionStatement	"pj_ks ( pj , ""name"" , ""(null)"" )"	623:3:17449:17477	1043942	0	True				
ANR	1044206	CallExpression	"pj_ks ( pj , ""name"" , ""(null)"" )"		1043942	0					
ANR	1044207	Callee	pj_ks		1043942	0					
ANR	1044208	Identifier	pj_ks		1043942	0					
ANR	1044209	ArgumentList	pj		1043942	1					
ANR	1044210	Argument	pj		1043942	0					
ANR	1044211	Identifier	pj		1043942	0					
ANR	1044212	Argument	"""name"""		1043942	1					
ANR	1044213	PrimaryExpression	"""name"""		1043942	0					
ANR	1044214	Argument	"""(null)"""		1043942	2					
ANR	1044215	PrimaryExpression	"""(null)"""		1043942	0					
ANR	1044216	ExpressionStatement	pj_end ( pj )	625:2:17485:17496	1043942	7	True				
ANR	1044217	CallExpression	pj_end ( pj )		1043942	0					
ANR	1044218	Callee	pj_end		1043942	0					
ANR	1044219	Identifier	pj_end		1043942	0					
ANR	1044220	ArgumentList	pj		1043942	1					
ANR	1044221	Argument	pj		1043942	0					
ANR	1044222	Identifier	pj		1043942	0					
ANR	1044223	ExpressionStatement	pj_end ( pj )	627:1:17502:17513	1043942	12	True				
ANR	1044224	CallExpression	pj_end ( pj )		1043942	0					
ANR	1044225	Callee	pj_end		1043942	0					
ANR	1044226	Identifier	pj_end		1043942	0					
ANR	1044227	ArgumentList	pj		1043942	1					
ANR	1044228	Argument	pj		1043942	0					
ANR	1044229	Identifier	pj		1043942	0					
ANR	1044230	ExpressionStatement	pj_end ( pj )	628:1:17516:17527	1043942	13	True				
ANR	1044231	CallExpression	pj_end ( pj )		1043942	0					
ANR	1044232	Callee	pj_end		1043942	0					
ANR	1044233	Identifier	pj_end		1043942	0					
ANR	1044234	ArgumentList	pj		1043942	1					
ANR	1044235	Argument	pj		1043942	0					
ANR	1044236	Identifier	pj		1043942	0					
ANR	1044237	ExpressionStatement	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"	629:1:17530:17566	1043942	14	True				
ANR	1044238	CallExpression	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"		1043942	0					
ANR	1044239	Callee	r_cons_printf		1043942	0					
ANR	1044240	Identifier	r_cons_printf		1043942	0					
ANR	1044241	ArgumentList	"""%s"""		1043942	1					
ANR	1044242	Argument	"""%s"""		1043942	0					
ANR	1044243	PrimaryExpression	"""%s"""		1043942	0					
ANR	1044244	Argument	pj_string ( pj )		1043942	1					
ANR	1044245	CallExpression	pj_string ( pj )		1043942	0					
ANR	1044246	Callee	pj_string		1043942	0					
ANR	1044247	Identifier	pj_string		1043942	0					
ANR	1044248	ArgumentList	pj		1043942	1					
ANR	1044249	Argument	pj		1043942	0					
ANR	1044250	Identifier	pj		1043942	0					
ANR	1044251	ExpressionStatement	pj_free ( pj )	630:1:17569:17581	1043942	15	True				
ANR	1044252	CallExpression	pj_free ( pj )		1043942	0					
ANR	1044253	Callee	pj_free		1043942	0					
ANR	1044254	Identifier	pj_free		1043942	0					
ANR	1044255	ArgumentList	pj		1043942	1					
ANR	1044256	Argument	pj		1043942	0					
ANR	1044257	Identifier	pj		1043942	0					
ANR	1044258	ExpressionStatement	free ( res )	631:1:17584:17594	1043942	16	True				
ANR	1044259	CallExpression	free ( res )		1043942	0					
ANR	1044260	Callee	free		1043942	0					
ANR	1044261	Identifier	free		1043942	0					
ANR	1044262	ArgumentList	res		1043942	1					
ANR	1044263	Argument	res		1043942	0					
ANR	1044264	Identifier	res		1043942	0					
ANR	1044265	ReturnType	static void		1043942	1					
ANR	1044266	Identifier	printFunctionType		1043942	2					
ANR	1044267	ParameterList	"RCore * core , const char * input"		1043942	3					
ANR	1044268	Parameter	RCore * core	595:30:16703:16713	1043942	0	True				
ANR	1044269	ParameterType	RCore *		1043942	0					
ANR	1044270	Identifier	core		1043942	1					
ANR	1044271	Parameter	const char * input	595:43:16716:16732	1043942	1	True				
ANR	1044272	ParameterType	const char *		1043942	0					
ANR	1044273	Identifier	input		1043942	1					
ANR	1044274	CFGEntryNode	ENTRY		1043942		True				
ANR	1044275	CFGExitNode	EXIT		1043942		True				
ANR	1044276	Symbol	pj_string		1043942						
ANR	1044277	Symbol	* core		1043942						
ANR	1044278	Symbol	strchr		1043942						
ANR	1044279	Symbol	core -> anal -> sdb_types		1043942						
ANR	1044280	Symbol	type		1043942						
ANR	1044281	Symbol	core -> anal		1043942						
ANR	1044282	Symbol	sdb_const_get		1043942						
ANR	1044283	Symbol	TDB		1043942						
ANR	1044284	Symbol	sdb_fmt		1043942						
ANR	1044285	Symbol	* * core		1043942						
ANR	1044286	Symbol	* name ++		1043942						
ANR	1044287	Symbol	sdb_num_get		1043942						
ANR	1044288	Symbol	res		1043942						
ANR	1044289	Symbol	NULL		1043942						
ANR	1044290	Symbol	sdb_querys		1043942						
ANR	1044291	Symbol	i		1043942						
ANR	1044292	Symbol	sdb_get		1043942						
ANR	1044293	Symbol	args		1043942						
ANR	1044294	Symbol	core		1043942						
ANR	1044295	Symbol	input		1043942						
ANR	1044296	Symbol	* core -> anal		1043942						
ANR	1044297	Symbol	r_str_trim_ro		1043942						
ANR	1044298	Symbol	name		1043942						
ANR	1044299	Symbol	pj		1043942						
ANR	1044300	Symbol	pj_new		1043942						
ANR	1044301	Function	printfunc_json_cb	634:0:17599:17722							
ANR	1044302	FunctionDef	"printfunc_json_cb (void * user , const char * k , const char * v)"		1044301	0					
ANR	1044303	CompoundStatement		634:71:17670:17722	1044301	0					
ANR	1044304	ExpressionStatement	"printFunctionType ( ( RCore * ) user , k )"	635:1:17673:17709	1044301	0	True				
ANR	1044305	CallExpression	"printFunctionType ( ( RCore * ) user , k )"		1044301	0					
ANR	1044306	Callee	printFunctionType		1044301	0					
ANR	1044307	Identifier	printFunctionType		1044301	0					
ANR	1044308	ArgumentList	( RCore * ) user		1044301	1					
ANR	1044309	Argument	( RCore * ) user		1044301	0					
ANR	1044310	CastExpression	( RCore * ) user		1044301	0					
ANR	1044311	CastTarget	RCore *		1044301	0					
ANR	1044312	Identifier	user		1044301	1					
ANR	1044313	Argument	k		1044301	1					
ANR	1044314	Identifier	k		1044301	0					
ANR	1044315	ReturnStatement	return 1 ;	636:1:17712:17720	1044301	1	True				
ANR	1044316	PrimaryExpression	1		1044301	0					
ANR	1044317	ReturnType	static int		1044301	1					
ANR	1044318	Identifier	printfunc_json_cb		1044301	2					
ANR	1044319	ParameterList	"void * user , const char * k , const char * v"		1044301	3					
ANR	1044320	Parameter	void * user	634:29:17628:17637	1044301	0	True				
ANR	1044321	ParameterType	void *		1044301	0					
ANR	1044322	Identifier	user		1044301	1					
ANR	1044323	Parameter	const char * k	634:41:17640:17652	1044301	1	True				
ANR	1044324	ParameterType	const char *		1044301	0					
ANR	1044325	Identifier	k		1044301	1					
ANR	1044326	Parameter	const char * v	634:56:17655:17667	1044301	2	True				
ANR	1044327	ParameterType	const char *		1044301	0					
ANR	1044328	Identifier	v		1044301	1					
ANR	1044329	CFGEntryNode	ENTRY		1044301		True				
ANR	1044330	CFGExitNode	EXIT		1044301		True				
ANR	1044331	Symbol	v		1044301						
ANR	1044332	Symbol	k		1044301						
ANR	1044333	Symbol	user		1044301						
ANR	1044334	Function	stdiffunc	639:0:17725:17838							
ANR	1044335	FunctionDef	"stdiffunc (void * p , const char * k , const char * v)"		1044334	0					
ANR	1044336	CompoundStatement		639:60:17785:17838	1044334	0					
ANR	1044337	ReturnStatement	"return ! strncmp ( v , ""func"" , strlen ( ""func"" ) + 1 ) ;"	640:1:17788:17836	1044334	0	True				
ANR	1044338	UnaryOperationExpression	"! strncmp ( v , ""func"" , strlen ( ""func"" ) + 1 )"		1044334	0					
ANR	1044339	UnaryOperator	!		1044334	0					
ANR	1044340	CallExpression	"strncmp ( v , ""func"" , strlen ( ""func"" ) + 1 )"		1044334	1					
ANR	1044341	Callee	strncmp		1044334	0					
ANR	1044342	Identifier	strncmp		1044334	0					
ANR	1044343	ArgumentList	v		1044334	1					
ANR	1044344	Argument	v		1044334	0					
ANR	1044345	Identifier	v		1044334	0					
ANR	1044346	Argument	"""func"""		1044334	1					
ANR	1044347	PrimaryExpression	"""func"""		1044334	0					
ANR	1044348	Argument	"strlen ( ""func"" ) + 1"		1044334	2					
ANR	1044349	AdditiveExpression	"strlen ( ""func"" ) + 1"		1044334	0		+			
ANR	1044350	CallExpression	"strlen ( ""func"" )"		1044334	0					
ANR	1044351	Callee	strlen		1044334	0					
ANR	1044352	Identifier	strlen		1044334	0					
ANR	1044353	ArgumentList	"""func"""		1044334	1					
ANR	1044354	Argument	"""func"""		1044334	0					
ANR	1044355	PrimaryExpression	"""func"""		1044334	0					
ANR	1044356	PrimaryExpression	1		1044334	1					
ANR	1044357	ReturnType	static int		1044334	1					
ANR	1044358	Identifier	stdiffunc		1044334	2					
ANR	1044359	ParameterList	"void * p , const char * k , const char * v"		1044334	3					
ANR	1044360	Parameter	void * p	639:21:17746:17752	1044334	0	True				
ANR	1044361	ParameterType	void *		1044334	0					
ANR	1044362	Identifier	p		1044334	1					
ANR	1044363	Parameter	const char * k	639:30:17755:17767	1044334	1	True				
ANR	1044364	ParameterType	const char *		1044334	0					
ANR	1044365	Identifier	k		1044334	1					
ANR	1044366	Parameter	const char * v	639:45:17770:17782	1044334	2	True				
ANR	1044367	ParameterType	const char *		1044334	0					
ANR	1044368	Identifier	v		1044334	1					
ANR	1044369	CFGEntryNode	ENTRY		1044334		True				
ANR	1044370	CFGExitNode	EXIT		1044334		True				
ANR	1044371	Symbol	p		1044334						
ANR	1044372	Symbol	strncmp		1044334						
ANR	1044373	Symbol	strlen		1044334						
ANR	1044374	Symbol	v		1044334						
ANR	1044375	Symbol	k		1044334						
ANR	1044376	Function	stdifunion	643:0:17841:17957							
ANR	1044377	FunctionDef	"stdifunion (void * p , const char * k , const char * v)"		1044376	0					
ANR	1044378	CompoundStatement		643:61:17902:17957	1044376	0					
ANR	1044379	ReturnStatement	"return ! strncmp ( v , ""union"" , strlen ( ""union"" ) + 1 ) ;"	644:1:17905:17955	1044376	0	True				
ANR	1044380	UnaryOperationExpression	"! strncmp ( v , ""union"" , strlen ( ""union"" ) + 1 )"		1044376	0					
ANR	1044381	UnaryOperator	!		1044376	0					
ANR	1044382	CallExpression	"strncmp ( v , ""union"" , strlen ( ""union"" ) + 1 )"		1044376	1					
ANR	1044383	Callee	strncmp		1044376	0					
ANR	1044384	Identifier	strncmp		1044376	0					
ANR	1044385	ArgumentList	v		1044376	1					
ANR	1044386	Argument	v		1044376	0					
ANR	1044387	Identifier	v		1044376	0					
ANR	1044388	Argument	"""union"""		1044376	1					
ANR	1044389	PrimaryExpression	"""union"""		1044376	0					
ANR	1044390	Argument	"strlen ( ""union"" ) + 1"		1044376	2					
ANR	1044391	AdditiveExpression	"strlen ( ""union"" ) + 1"		1044376	0		+			
ANR	1044392	CallExpression	"strlen ( ""union"" )"		1044376	0					
ANR	1044393	Callee	strlen		1044376	0					
ANR	1044394	Identifier	strlen		1044376	0					
ANR	1044395	ArgumentList	"""union"""		1044376	1					
ANR	1044396	Argument	"""union"""		1044376	0					
ANR	1044397	PrimaryExpression	"""union"""		1044376	0					
ANR	1044398	PrimaryExpression	1		1044376	1					
ANR	1044399	ReturnType	static int		1044376	1					
ANR	1044400	Identifier	stdifunion		1044376	2					
ANR	1044401	ParameterList	"void * p , const char * k , const char * v"		1044376	3					
ANR	1044402	Parameter	void * p	643:22:17863:17869	1044376	0	True				
ANR	1044403	ParameterType	void *		1044376	0					
ANR	1044404	Identifier	p		1044376	1					
ANR	1044405	Parameter	const char * k	643:31:17872:17884	1044376	1	True				
ANR	1044406	ParameterType	const char *		1044376	0					
ANR	1044407	Identifier	k		1044376	1					
ANR	1044408	Parameter	const char * v	643:46:17887:17899	1044376	2	True				
ANR	1044409	ParameterType	const char *		1044376	0					
ANR	1044410	Identifier	v		1044376	1					
ANR	1044411	CFGEntryNode	ENTRY		1044376		True				
ANR	1044412	CFGExitNode	EXIT		1044376		True				
ANR	1044413	Symbol	p		1044376						
ANR	1044414	Symbol	strncmp		1044376						
ANR	1044415	Symbol	strlen		1044376						
ANR	1044416	Symbol	v		1044376						
ANR	1044417	Symbol	k		1044376						
ANR	1044418	Function	sdbdeletelink	647:0:17960:18156							
ANR	1044419	FunctionDef	"sdbdeletelink (void * p , const char * k , const char * v)"		1044418	0					
ANR	1044420	CompoundStatement		647:64:18024:18156	1044418	0					
ANR	1044421	IdentifierDeclStatement	RCore * core = ( RCore * ) p ;	648:1:18027:18051	1044418	0	True				
ANR	1044422	IdentifierDecl	* core = ( RCore * ) p		1044418	0					
ANR	1044423	IdentifierDeclType	RCore *		1044418	0					
ANR	1044424	Identifier	core		1044418	1					
ANR	1044425	AssignmentExpression	* core = ( RCore * ) p		1044418	2		=			
ANR	1044426	Identifier	core		1044418	0					
ANR	1044427	CastExpression	( RCore * ) p		1044418	1					
ANR	1044428	CastTarget	RCore *		1044418	0					
ANR	1044429	Identifier	p		1044418	1					
ANR	1044430	IfStatement	"if ( ! strncmp ( k , ""link."" , strlen ( ""link."" ) ) )"		1044418	1					
ANR	1044431	Condition	"! strncmp ( k , ""link."" , strlen ( ""link."" ) )"	649:5:18058:18096	1044418	0	True				
ANR	1044432	UnaryOperationExpression	"! strncmp ( k , ""link."" , strlen ( ""link."" ) )"		1044418	0					
ANR	1044433	UnaryOperator	!		1044418	0					
ANR	1044434	CallExpression	"strncmp ( k , ""link."" , strlen ( ""link."" ) )"		1044418	1					
ANR	1044435	Callee	strncmp		1044418	0					
ANR	1044436	Identifier	strncmp		1044418	0					
ANR	1044437	ArgumentList	k		1044418	1					
ANR	1044438	Argument	k		1044418	0					
ANR	1044439	Identifier	k		1044418	0					
ANR	1044440	Argument	"""link."""		1044418	1					
ANR	1044441	PrimaryExpression	"""link."""		1044418	0					
ANR	1044442	Argument	"strlen ( ""link."" )"		1044418	2					
ANR	1044443	CallExpression	"strlen ( ""link."" )"		1044418	0					
ANR	1044444	Callee	strlen		1044418	0					
ANR	1044445	Identifier	strlen		1044418	0					
ANR	1044446	ArgumentList	"""link."""		1044418	1					
ANR	1044447	Argument	"""link."""		1044418	0					
ANR	1044448	PrimaryExpression	"""link."""		1044418	0					
ANR	1044449	CompoundStatement		3:46:74:74	1044418	1					
ANR	1044450	ExpressionStatement	"r_type_del ( core -> anal -> sdb_types , k )"	650:2:18103:18140	1044418	0	True				
ANR	1044451	CallExpression	"r_type_del ( core -> anal -> sdb_types , k )"		1044418	0					
ANR	1044452	Callee	r_type_del		1044418	0					
ANR	1044453	Identifier	r_type_del		1044418	0					
ANR	1044454	ArgumentList	core -> anal -> sdb_types		1044418	1					
ANR	1044455	Argument	core -> anal -> sdb_types		1044418	0					
ANR	1044456	PtrMemberAccess	core -> anal -> sdb_types		1044418	0					
ANR	1044457	PtrMemberAccess	core -> anal		1044418	0					
ANR	1044458	Identifier	core		1044418	0					
ANR	1044459	Identifier	anal		1044418	1					
ANR	1044460	Identifier	sdb_types		1044418	1					
ANR	1044461	Argument	k		1044418	1					
ANR	1044462	Identifier	k		1044418	0					
ANR	1044463	ReturnStatement	return 1 ;	652:1:18146:18154	1044418	2	True				
ANR	1044464	PrimaryExpression	1		1044418	0					
ANR	1044465	ReturnType	static int		1044418	1					
ANR	1044466	Identifier	sdbdeletelink		1044418	2					
ANR	1044467	ParameterList	"void * p , const char * k , const char * v"		1044418	3					
ANR	1044468	Parameter	void * p	647:25:17985:17991	1044418	0	True				
ANR	1044469	ParameterType	void *		1044418	0					
ANR	1044470	Identifier	p		1044418	1					
ANR	1044471	Parameter	const char * k	647:34:17994:18006	1044418	1	True				
ANR	1044472	ParameterType	const char *		1044418	0					
ANR	1044473	Identifier	k		1044418	1					
ANR	1044474	Parameter	const char * v	647:49:18009:18021	1044418	2	True				
ANR	1044475	ParameterType	const char *		1044418	0					
ANR	1044476	Identifier	v		1044418	1					
ANR	1044477	CFGEntryNode	ENTRY		1044418		True				
ANR	1044478	CFGExitNode	EXIT		1044418		True				
ANR	1044479	Symbol	p		1044418						
ANR	1044480	Symbol	core		1044418						
ANR	1044481	Symbol	strncmp		1044418						
ANR	1044482	Symbol	strlen		1044418						
ANR	1044483	Symbol	* core -> anal		1044418						
ANR	1044484	Symbol	v		1044418						
ANR	1044485	Symbol	* core		1044418						
ANR	1044486	Symbol	k		1044418						
ANR	1044487	Symbol	core -> anal -> sdb_types		1044418						
ANR	1044488	Symbol	core -> anal		1044418						
ANR	1044489	Symbol	* * core		1044418						
ANR	1044490	Function	stdiflink	655:0:18159:18270							
ANR	1044491	FunctionDef	"stdiflink (void * p , const char * k , const char * v)"		1044490	0					
ANR	1044492	CompoundStatement		655:60:18219:18270	1044490	0					
ANR	1044493	ReturnStatement	"return ! strncmp ( k , ""link."" , strlen ( ""link."" ) ) ;"	656:1:18222:18268	1044490	0	True				
ANR	1044494	UnaryOperationExpression	"! strncmp ( k , ""link."" , strlen ( ""link."" ) )"		1044490	0					
ANR	1044495	UnaryOperator	!		1044490	0					
ANR	1044496	CallExpression	"strncmp ( k , ""link."" , strlen ( ""link."" ) )"		1044490	1					
ANR	1044497	Callee	strncmp		1044490	0					
ANR	1044498	Identifier	strncmp		1044490	0					
ANR	1044499	ArgumentList	k		1044490	1					
ANR	1044500	Argument	k		1044490	0					
ANR	1044501	Identifier	k		1044490	0					
ANR	1044502	Argument	"""link."""		1044490	1					
ANR	1044503	PrimaryExpression	"""link."""		1044490	0					
ANR	1044504	Argument	"strlen ( ""link."" )"		1044490	2					
ANR	1044505	CallExpression	"strlen ( ""link."" )"		1044490	0					
ANR	1044506	Callee	strlen		1044490	0					
ANR	1044507	Identifier	strlen		1044490	0					
ANR	1044508	ArgumentList	"""link."""		1044490	1					
ANR	1044509	Argument	"""link."""		1044490	0					
ANR	1044510	PrimaryExpression	"""link."""		1044490	0					
ANR	1044511	ReturnType	static int		1044490	1					
ANR	1044512	Identifier	stdiflink		1044490	2					
ANR	1044513	ParameterList	"void * p , const char * k , const char * v"		1044490	3					
ANR	1044514	Parameter	void * p	655:21:18180:18186	1044490	0	True				
ANR	1044515	ParameterType	void *		1044490	0					
ANR	1044516	Identifier	p		1044490	1					
ANR	1044517	Parameter	const char * k	655:30:18189:18201	1044490	1	True				
ANR	1044518	ParameterType	const char *		1044490	0					
ANR	1044519	Identifier	k		1044490	1					
ANR	1044520	Parameter	const char * v	655:45:18204:18216	1044490	2	True				
ANR	1044521	ParameterType	const char *		1044490	0					
ANR	1044522	Identifier	v		1044490	1					
ANR	1044523	CFGEntryNode	ENTRY		1044490		True				
ANR	1044524	CFGExitNode	EXIT		1044490		True				
ANR	1044525	Symbol	p		1044490						
ANR	1044526	Symbol	strncmp		1044490						
ANR	1044527	Symbol	strlen		1044490						
ANR	1044528	Symbol	v		1044490						
ANR	1044529	Symbol	k		1044490						
ANR	1044530	Function	print_link_cb	659:0:18273:18407							
ANR	1044531	FunctionDef	"print_link_cb (void * p , const char * k , const char * v)"		1044530	0					
ANR	1044532	CompoundStatement		659:64:18337:18407	1044530	0					
ANR	1044533	ExpressionStatement	"r_cons_printf ( ""0x%s = %s\\n"" , k + strlen ( ""link."" ) , v )"	660:1:18340:18394	1044530	0	True				
ANR	1044534	CallExpression	"r_cons_printf ( ""0x%s = %s\\n"" , k + strlen ( ""link."" ) , v )"		1044530	0					
ANR	1044535	Callee	r_cons_printf		1044530	0					
ANR	1044536	Identifier	r_cons_printf		1044530	0					
ANR	1044537	ArgumentList	"""0x%s = %s\\n"""		1044530	1					
ANR	1044538	Argument	"""0x%s = %s\\n"""		1044530	0					
ANR	1044539	PrimaryExpression	"""0x%s = %s\\n"""		1044530	0					
ANR	1044540	Argument	"k + strlen ( ""link."" )"		1044530	1					
ANR	1044541	AdditiveExpression	"k + strlen ( ""link."" )"		1044530	0		+			
ANR	1044542	Identifier	k		1044530	0					
ANR	1044543	CallExpression	"strlen ( ""link."" )"		1044530	1					
ANR	1044544	Callee	strlen		1044530	0					
ANR	1044545	Identifier	strlen		1044530	0					
ANR	1044546	ArgumentList	"""link."""		1044530	1					
ANR	1044547	Argument	"""link."""		1044530	0					
ANR	1044548	PrimaryExpression	"""link."""		1044530	0					
ANR	1044549	Argument	v		1044530	2					
ANR	1044550	Identifier	v		1044530	0					
ANR	1044551	ReturnStatement	return 1 ;	661:1:18397:18405	1044530	1	True				
ANR	1044552	PrimaryExpression	1		1044530	0					
ANR	1044553	ReturnType	static int		1044530	1					
ANR	1044554	Identifier	print_link_cb		1044530	2					
ANR	1044555	ParameterList	"void * p , const char * k , const char * v"		1044530	3					
ANR	1044556	Parameter	void * p	659:25:18298:18304	1044530	0	True				
ANR	1044557	ParameterType	void *		1044530	0					
ANR	1044558	Identifier	p		1044530	1					
ANR	1044559	Parameter	const char * k	659:34:18307:18319	1044530	1	True				
ANR	1044560	ParameterType	const char *		1044530	0					
ANR	1044561	Identifier	k		1044530	1					
ANR	1044562	Parameter	const char * v	659:49:18322:18334	1044530	2	True				
ANR	1044563	ParameterType	const char *		1044530	0					
ANR	1044564	Identifier	v		1044530	1					
ANR	1044565	CFGEntryNode	ENTRY		1044530		True				
ANR	1044566	CFGExitNode	EXIT		1044530		True				
ANR	1044567	Symbol	p		1044530						
ANR	1044568	Symbol	strlen		1044530						
ANR	1044569	Symbol	v		1044530						
ANR	1044570	Symbol	k		1044530						
ANR	1044571	Function	print_link_json_cb	664:0:18410:18555							
ANR	1044572	FunctionDef	"print_link_json_cb (void * p , const char * k , const char * v)"		1044571	0					
ANR	1044573	CompoundStatement		664:69:18479:18555	1044571	0					
ANR	1044574	ExpressionStatement	"r_cons_printf ( ""{\\""0x%s\\"":\\""%s\\""}"" , k + strlen ( ""link."" ) , v )"	665:1:18482:18542	1044571	0	True				
ANR	1044575	CallExpression	"r_cons_printf ( ""{\\""0x%s\\"":\\""%s\\""}"" , k + strlen ( ""link."" ) , v )"		1044571	0					
ANR	1044576	Callee	r_cons_printf		1044571	0					
ANR	1044577	Identifier	r_cons_printf		1044571	0					
ANR	1044578	ArgumentList	"""{\\""0x%s\\"":\\""%s\\""}"""		1044571	1					
ANR	1044579	Argument	"""{\\""0x%s\\"":\\""%s\\""}"""		1044571	0					
ANR	1044580	PrimaryExpression	"""{\\""0x%s\\"":\\""%s\\""}"""		1044571	0					
ANR	1044581	Argument	"k + strlen ( ""link."" )"		1044571	1					
ANR	1044582	AdditiveExpression	"k + strlen ( ""link."" )"		1044571	0		+			
ANR	1044583	Identifier	k		1044571	0					
ANR	1044584	CallExpression	"strlen ( ""link."" )"		1044571	1					
ANR	1044585	Callee	strlen		1044571	0					
ANR	1044586	Identifier	strlen		1044571	0					
ANR	1044587	ArgumentList	"""link."""		1044571	1					
ANR	1044588	Argument	"""link."""		1044571	0					
ANR	1044589	PrimaryExpression	"""link."""		1044571	0					
ANR	1044590	Argument	v		1044571	2					
ANR	1044591	Identifier	v		1044571	0					
ANR	1044592	ReturnStatement	return 1 ;	666:1:18545:18553	1044571	1	True				
ANR	1044593	PrimaryExpression	1		1044571	0					
ANR	1044594	ReturnType	static int		1044571	1					
ANR	1044595	Identifier	print_link_json_cb		1044571	2					
ANR	1044596	ParameterList	"void * p , const char * k , const char * v"		1044571	3					
ANR	1044597	Parameter	void * p	664:30:18440:18446	1044571	0	True				
ANR	1044598	ParameterType	void *		1044571	0					
ANR	1044599	Identifier	p		1044571	1					
ANR	1044600	Parameter	const char * k	664:39:18449:18461	1044571	1	True				
ANR	1044601	ParameterType	const char *		1044571	0					
ANR	1044602	Identifier	k		1044571	1					
ANR	1044603	Parameter	const char * v	664:54:18464:18476	1044571	2	True				
ANR	1044604	ParameterType	const char *		1044571	0					
ANR	1044605	Identifier	v		1044571	1					
ANR	1044606	CFGEntryNode	ENTRY		1044571		True				
ANR	1044607	CFGExitNode	EXIT		1044571		True				
ANR	1044608	Symbol	p		1044571						
ANR	1044609	Symbol	strlen		1044571						
ANR	1044610	Symbol	v		1044571						
ANR	1044611	Symbol	k		1044571						
ANR	1044612	Function	print_link_r_cb	669:0:18558:18697							
ANR	1044613	FunctionDef	"print_link_r_cb (void * p , const char * k , const char * v)"		1044612	0					
ANR	1044614	CompoundStatement		669:66:18624:18697	1044612	0					
ANR	1044615	ExpressionStatement	"r_cons_printf ( ""tl %s = 0x%s\\n"" , v , k + strlen ( ""link."" ) )"	670:1:18627:18684	1044612	0	True				
ANR	1044616	CallExpression	"r_cons_printf ( ""tl %s = 0x%s\\n"" , v , k + strlen ( ""link."" ) )"		1044612	0					
ANR	1044617	Callee	r_cons_printf		1044612	0					
ANR	1044618	Identifier	r_cons_printf		1044612	0					
ANR	1044619	ArgumentList	"""tl %s = 0x%s\\n"""		1044612	1					
ANR	1044620	Argument	"""tl %s = 0x%s\\n"""		1044612	0					
ANR	1044621	PrimaryExpression	"""tl %s = 0x%s\\n"""		1044612	0					
ANR	1044622	Argument	v		1044612	1					
ANR	1044623	Identifier	v		1044612	0					
ANR	1044624	Argument	"k + strlen ( ""link."" )"		1044612	2					
ANR	1044625	AdditiveExpression	"k + strlen ( ""link."" )"		1044612	0		+			
ANR	1044626	Identifier	k		1044612	0					
ANR	1044627	CallExpression	"strlen ( ""link."" )"		1044612	1					
ANR	1044628	Callee	strlen		1044612	0					
ANR	1044629	Identifier	strlen		1044612	0					
ANR	1044630	ArgumentList	"""link."""		1044612	1					
ANR	1044631	Argument	"""link."""		1044612	0					
ANR	1044632	PrimaryExpression	"""link."""		1044612	0					
ANR	1044633	ReturnStatement	return 1 ;	671:1:18687:18695	1044612	1	True				
ANR	1044634	PrimaryExpression	1		1044612	0					
ANR	1044635	ReturnType	static int		1044612	1					
ANR	1044636	Identifier	print_link_r_cb		1044612	2					
ANR	1044637	ParameterList	"void * p , const char * k , const char * v"		1044612	3					
ANR	1044638	Parameter	void * p	669:27:18585:18591	1044612	0	True				
ANR	1044639	ParameterType	void *		1044612	0					
ANR	1044640	Identifier	p		1044612	1					
ANR	1044641	Parameter	const char * k	669:36:18594:18606	1044612	1	True				
ANR	1044642	ParameterType	const char *		1044612	0					
ANR	1044643	Identifier	k		1044612	1					
ANR	1044644	Parameter	const char * v	669:51:18609:18621	1044612	2	True				
ANR	1044645	ParameterType	const char *		1044612	0					
ANR	1044646	Identifier	v		1044612	1					
ANR	1044647	CFGEntryNode	ENTRY		1044612		True				
ANR	1044648	CFGExitNode	EXIT		1044612		True				
ANR	1044649	Symbol	p		1044612						
ANR	1044650	Symbol	strlen		1044612						
ANR	1044651	Symbol	v		1044612						
ANR	1044652	Symbol	k		1044612						
ANR	1044653	Function	print_link_readable_cb	674:0:18700:19029							
ANR	1044654	FunctionDef	"print_link_readable_cb (void * p , const char * k , const char * v)"		1044653	0					
ANR	1044655	CompoundStatement		674:73:18773:19029	1044653	0					
ANR	1044656	IdentifierDeclStatement	RCore * core = ( RCore * ) p ;	675:1:18776:18800	1044653	0	True				
ANR	1044657	IdentifierDecl	* core = ( RCore * ) p		1044653	0					
ANR	1044658	IdentifierDeclType	RCore *		1044653	0					
ANR	1044659	Identifier	core		1044653	1					
ANR	1044660	AssignmentExpression	* core = ( RCore * ) p		1044653	2		=			
ANR	1044661	Identifier	core		1044653	0					
ANR	1044662	CastExpression	( RCore * ) p		1044653	1					
ANR	1044663	CastTarget	RCore *		1044653	0					
ANR	1044664	Identifier	p		1044653	1					
ANR	1044665	IdentifierDeclStatement	"char * fmt = r_type_format ( core -> anal -> sdb_types , v ) ;"	676:1:18803:18855	1044653	1	True				
ANR	1044666	IdentifierDecl	"* fmt = r_type_format ( core -> anal -> sdb_types , v )"		1044653	0					
ANR	1044667	IdentifierDeclType	char *		1044653	0					
ANR	1044668	Identifier	fmt		1044653	1					
ANR	1044669	AssignmentExpression	"* fmt = r_type_format ( core -> anal -> sdb_types , v )"		1044653	2		=			
ANR	1044670	Identifier	fmt		1044653	0					
ANR	1044671	CallExpression	"r_type_format ( core -> anal -> sdb_types , v )"		1044653	1					
ANR	1044672	Callee	r_type_format		1044653	0					
ANR	1044673	Identifier	r_type_format		1044653	0					
ANR	1044674	ArgumentList	core -> anal -> sdb_types		1044653	1					
ANR	1044675	Argument	core -> anal -> sdb_types		1044653	0					
ANR	1044676	PtrMemberAccess	core -> anal -> sdb_types		1044653	0					
ANR	1044677	PtrMemberAccess	core -> anal		1044653	0					
ANR	1044678	Identifier	core		1044653	0					
ANR	1044679	Identifier	anal		1044653	1					
ANR	1044680	Identifier	sdb_types		1044653	1					
ANR	1044681	Argument	v		1044653	1					
ANR	1044682	Identifier	v		1044653	0					
ANR	1044683	IfStatement	if ( ! fmt )		1044653	2					
ANR	1044684	Condition	! fmt	677:5:18862:18865	1044653	0	True				
ANR	1044685	UnaryOperationExpression	! fmt		1044653	0					
ANR	1044686	UnaryOperator	!		1044653	0					
ANR	1044687	Identifier	fmt		1044653	1					
ANR	1044688	CompoundStatement		4:11:94:94	1044653	1					
ANR	1044689	ExpressionStatement	"eprintf ( ""Can't fint type %s"" , v )"	678:2:18872:18905	1044653	0	True				
ANR	1044690	CallExpression	"eprintf ( ""Can't fint type %s"" , v )"		1044653	0					
ANR	1044691	Callee	eprintf		1044653	0					
ANR	1044692	Identifier	eprintf		1044653	0					
ANR	1044693	ArgumentList	"""Can't fint type %s"""		1044653	1					
ANR	1044694	Argument	"""Can't fint type %s"""		1044653	0					
ANR	1044695	PrimaryExpression	"""Can't fint type %s"""		1044653	0					
ANR	1044696	Argument	v		1044653	1					
ANR	1044697	Identifier	v		1044653	0					
ANR	1044698	ReturnStatement	return 1 ;	679:2:18909:18917	1044653	1	True				
ANR	1044699	PrimaryExpression	1		1044653	0					
ANR	1044700	ExpressionStatement	"r_cons_printf ( ""(%s)\\n"" , v )"	681:1:18923:18950	1044653	3	True				
ANR	1044701	CallExpression	"r_cons_printf ( ""(%s)\\n"" , v )"		1044653	0					
ANR	1044702	Callee	r_cons_printf		1044653	0					
ANR	1044703	Identifier	r_cons_printf		1044653	0					
ANR	1044704	ArgumentList	"""(%s)\\n"""		1044653	1					
ANR	1044705	Argument	"""(%s)\\n"""		1044653	0					
ANR	1044706	PrimaryExpression	"""(%s)\\n"""		1044653	0					
ANR	1044707	Argument	v		1044653	1					
ANR	1044708	Identifier	v		1044653	0					
ANR	1044709	ExpressionStatement	"r_core_cmdf ( core , ""pf %s @ 0x%s\\n"" , fmt , k + strlen ( ""link."" ) )"	682:1:18953:19016	1044653	4	True				
ANR	1044710	CallExpression	"r_core_cmdf ( core , ""pf %s @ 0x%s\\n"" , fmt , k + strlen ( ""link."" ) )"		1044653	0					
ANR	1044711	Callee	r_core_cmdf		1044653	0					
ANR	1044712	Identifier	r_core_cmdf		1044653	0					
ANR	1044713	ArgumentList	core		1044653	1					
ANR	1044714	Argument	core		1044653	0					
ANR	1044715	Identifier	core		1044653	0					
ANR	1044716	Argument	"""pf %s @ 0x%s\\n"""		1044653	1					
ANR	1044717	PrimaryExpression	"""pf %s @ 0x%s\\n"""		1044653	0					
ANR	1044718	Argument	fmt		1044653	2					
ANR	1044719	Identifier	fmt		1044653	0					
ANR	1044720	Argument	"k + strlen ( ""link."" )"		1044653	3					
ANR	1044721	AdditiveExpression	"k + strlen ( ""link."" )"		1044653	0		+			
ANR	1044722	Identifier	k		1044653	0					
ANR	1044723	CallExpression	"strlen ( ""link."" )"		1044653	1					
ANR	1044724	Callee	strlen		1044653	0					
ANR	1044725	Identifier	strlen		1044653	0					
ANR	1044726	ArgumentList	"""link."""		1044653	1					
ANR	1044727	Argument	"""link."""		1044653	0					
ANR	1044728	PrimaryExpression	"""link."""		1044653	0					
ANR	1044729	ReturnStatement	return 1 ;	683:1:19019:19027	1044653	5	True				
ANR	1044730	PrimaryExpression	1		1044653	0					
ANR	1044731	ReturnType	static int		1044653	1					
ANR	1044732	Identifier	print_link_readable_cb		1044653	2					
ANR	1044733	ParameterList	"void * p , const char * k , const char * v"		1044653	3					
ANR	1044734	Parameter	void * p	674:34:18734:18740	1044653	0	True				
ANR	1044735	ParameterType	void *		1044653	0					
ANR	1044736	Identifier	p		1044653	1					
ANR	1044737	Parameter	const char * k	674:43:18743:18755	1044653	1	True				
ANR	1044738	ParameterType	const char *		1044653	0					
ANR	1044739	Identifier	k		1044653	1					
ANR	1044740	Parameter	const char * v	674:58:18758:18770	1044653	2	True				
ANR	1044741	ParameterType	const char *		1044653	0					
ANR	1044742	Identifier	v		1044653	1					
ANR	1044743	CFGEntryNode	ENTRY		1044653		True				
ANR	1044744	CFGExitNode	EXIT		1044653		True				
ANR	1044745	Symbol	p		1044653						
ANR	1044746	Symbol	core		1044653						
ANR	1044747	Symbol	strlen		1044653						
ANR	1044748	Symbol	* core -> anal		1044653						
ANR	1044749	Symbol	v		1044653						
ANR	1044750	Symbol	* core		1044653						
ANR	1044751	Symbol	k		1044653						
ANR	1044752	Symbol	core -> anal -> sdb_types		1044653						
ANR	1044753	Symbol	fmt		1044653						
ANR	1044754	Symbol	r_type_format		1044653						
ANR	1044755	Symbol	core -> anal		1044653						
ANR	1044756	Symbol	* * core		1044653						
ANR	1044757	Function	print_link_readable_json_cb	686:0:19032:19391							
ANR	1044758	FunctionDef	"print_link_readable_json_cb (void * p , const char * k , const char * v)"		1044757	0					
ANR	1044759	CompoundStatement		686:78:19110:19391	1044757	0					
ANR	1044760	IdentifierDeclStatement	RCore * core = ( RCore * ) p ;	687:1:19113:19137	1044757	0	True				
ANR	1044761	IdentifierDecl	* core = ( RCore * ) p		1044757	0					
ANR	1044762	IdentifierDeclType	RCore *		1044757	0					
ANR	1044763	Identifier	core		1044757	1					
ANR	1044764	AssignmentExpression	* core = ( RCore * ) p		1044757	2		=			
ANR	1044765	Identifier	core		1044757	0					
ANR	1044766	CastExpression	( RCore * ) p		1044757	1					
ANR	1044767	CastTarget	RCore *		1044757	0					
ANR	1044768	Identifier	p		1044757	1					
ANR	1044769	IdentifierDeclStatement	"char * fmt = r_type_format ( core -> anal -> sdb_types , v ) ;"	688:1:19140:19192	1044757	1	True				
ANR	1044770	IdentifierDecl	"* fmt = r_type_format ( core -> anal -> sdb_types , v )"		1044757	0					
ANR	1044771	IdentifierDeclType	char *		1044757	0					
ANR	1044772	Identifier	fmt		1044757	1					
ANR	1044773	AssignmentExpression	"* fmt = r_type_format ( core -> anal -> sdb_types , v )"		1044757	2		=			
ANR	1044774	Identifier	fmt		1044757	0					
ANR	1044775	CallExpression	"r_type_format ( core -> anal -> sdb_types , v )"		1044757	1					
ANR	1044776	Callee	r_type_format		1044757	0					
ANR	1044777	Identifier	r_type_format		1044757	0					
ANR	1044778	ArgumentList	core -> anal -> sdb_types		1044757	1					
ANR	1044779	Argument	core -> anal -> sdb_types		1044757	0					
ANR	1044780	PtrMemberAccess	core -> anal -> sdb_types		1044757	0					
ANR	1044781	PtrMemberAccess	core -> anal		1044757	0					
ANR	1044782	Identifier	core		1044757	0					
ANR	1044783	Identifier	anal		1044757	1					
ANR	1044784	Identifier	sdb_types		1044757	1					
ANR	1044785	Argument	v		1044757	1					
ANR	1044786	Identifier	v		1044757	0					
ANR	1044787	IfStatement	if ( ! fmt )		1044757	2					
ANR	1044788	Condition	! fmt	689:5:19199:19202	1044757	0	True				
ANR	1044789	UnaryOperationExpression	! fmt		1044757	0					
ANR	1044790	UnaryOperator	!		1044757	0					
ANR	1044791	Identifier	fmt		1044757	1					
ANR	1044792	CompoundStatement		4:11:94:94	1044757	1					
ANR	1044793	ExpressionStatement	"eprintf ( ""Can't fint type %s"" , v )"	690:2:19209:19242	1044757	0	True				
ANR	1044794	CallExpression	"eprintf ( ""Can't fint type %s"" , v )"		1044757	0					
ANR	1044795	Callee	eprintf		1044757	0					
ANR	1044796	Identifier	eprintf		1044757	0					
ANR	1044797	ArgumentList	"""Can't fint type %s"""		1044757	1					
ANR	1044798	Argument	"""Can't fint type %s"""		1044757	0					
ANR	1044799	PrimaryExpression	"""Can't fint type %s"""		1044757	0					
ANR	1044800	Argument	v		1044757	1					
ANR	1044801	Identifier	v		1044757	0					
ANR	1044802	ReturnStatement	return 1 ;	691:2:19246:19254	1044757	1	True				
ANR	1044803	PrimaryExpression	1		1044757	0					
ANR	1044804	ExpressionStatement	"r_cons_printf ( ""{\\""%s\\"":"" , v )"	693:1:19260:19289	1044757	3	True				
ANR	1044805	CallExpression	"r_cons_printf ( ""{\\""%s\\"":"" , v )"		1044757	0					
ANR	1044806	Callee	r_cons_printf		1044757	0					
ANR	1044807	Identifier	r_cons_printf		1044757	0					
ANR	1044808	ArgumentList	"""{\\""%s\\"":"""		1044757	1					
ANR	1044809	Argument	"""{\\""%s\\"":"""		1044757	0					
ANR	1044810	PrimaryExpression	"""{\\""%s\\"":"""		1044757	0					
ANR	1044811	Argument	v		1044757	1					
ANR	1044812	Identifier	v		1044757	0					
ANR	1044813	ExpressionStatement	"r_core_cmdf ( core , ""pfj %s @ 0x%s\\n"" , fmt , k + strlen ( ""link."" ) )"	694:1:19292:19356	1044757	4	True				
ANR	1044814	CallExpression	"r_core_cmdf ( core , ""pfj %s @ 0x%s\\n"" , fmt , k + strlen ( ""link."" ) )"		1044757	0					
ANR	1044815	Callee	r_core_cmdf		1044757	0					
ANR	1044816	Identifier	r_core_cmdf		1044757	0					
ANR	1044817	ArgumentList	core		1044757	1					
ANR	1044818	Argument	core		1044757	0					
ANR	1044819	Identifier	core		1044757	0					
ANR	1044820	Argument	"""pfj %s @ 0x%s\\n"""		1044757	1					
ANR	1044821	PrimaryExpression	"""pfj %s @ 0x%s\\n"""		1044757	0					
ANR	1044822	Argument	fmt		1044757	2					
ANR	1044823	Identifier	fmt		1044757	0					
ANR	1044824	Argument	"k + strlen ( ""link."" )"		1044757	3					
ANR	1044825	AdditiveExpression	"k + strlen ( ""link."" )"		1044757	0		+			
ANR	1044826	Identifier	k		1044757	0					
ANR	1044827	CallExpression	"strlen ( ""link."" )"		1044757	1					
ANR	1044828	Callee	strlen		1044757	0					
ANR	1044829	Identifier	strlen		1044757	0					
ANR	1044830	ArgumentList	"""link."""		1044757	1					
ANR	1044831	Argument	"""link."""		1044757	0					
ANR	1044832	PrimaryExpression	"""link."""		1044757	0					
ANR	1044833	ExpressionStatement	"r_cons_printf ( ""}"" )"	695:1:19359:19378	1044757	5	True				
ANR	1044834	CallExpression	"r_cons_printf ( ""}"" )"		1044757	0					
ANR	1044835	Callee	r_cons_printf		1044757	0					
ANR	1044836	Identifier	r_cons_printf		1044757	0					
ANR	1044837	ArgumentList	"""}"""		1044757	1					
ANR	1044838	Argument	"""}"""		1044757	0					
ANR	1044839	PrimaryExpression	"""}"""		1044757	0					
ANR	1044840	ReturnStatement	return 1 ;	696:1:19381:19389	1044757	6	True				
ANR	1044841	PrimaryExpression	1		1044757	0					
ANR	1044842	ReturnType	static int		1044757	1					
ANR	1044843	Identifier	print_link_readable_json_cb		1044757	2					
ANR	1044844	ParameterList	"void * p , const char * k , const char * v"		1044757	3					
ANR	1044845	Parameter	void * p	686:39:19071:19077	1044757	0	True				
ANR	1044846	ParameterType	void *		1044757	0					
ANR	1044847	Identifier	p		1044757	1					
ANR	1044848	Parameter	const char * k	686:48:19080:19092	1044757	1	True				
ANR	1044849	ParameterType	const char *		1044757	0					
ANR	1044850	Identifier	k		1044757	1					
ANR	1044851	Parameter	const char * v	686:63:19095:19107	1044757	2	True				
ANR	1044852	ParameterType	const char *		1044757	0					
ANR	1044853	Identifier	v		1044757	1					
ANR	1044854	CFGEntryNode	ENTRY		1044757		True				
ANR	1044855	CFGExitNode	EXIT		1044757		True				
ANR	1044856	Symbol	p		1044757						
ANR	1044857	Symbol	core		1044757						
ANR	1044858	Symbol	strlen		1044757						
ANR	1044859	Symbol	* core -> anal		1044757						
ANR	1044860	Symbol	v		1044757						
ANR	1044861	Symbol	* core		1044757						
ANR	1044862	Symbol	k		1044757						
ANR	1044863	Symbol	core -> anal -> sdb_types		1044757						
ANR	1044864	Symbol	fmt		1044757						
ANR	1044865	Symbol	r_type_format		1044757						
ANR	1044866	Symbol	core -> anal		1044757						
ANR	1044867	Symbol	* * core		1044757						
ANR	1044868	Function	stdiftype	699:0:19394:19507							
ANR	1044869	FunctionDef	"stdiftype (void * p , const char * k , const char * v)"		1044868	0					
ANR	1044870	CompoundStatement		699:60:19454:19507	1044868	0					
ANR	1044871	ReturnStatement	"return ! strncmp ( v , ""type"" , strlen ( ""type"" ) + 1 ) ;"	700:1:19457:19505	1044868	0	True				
ANR	1044872	UnaryOperationExpression	"! strncmp ( v , ""type"" , strlen ( ""type"" ) + 1 )"		1044868	0					
ANR	1044873	UnaryOperator	!		1044868	0					
ANR	1044874	CallExpression	"strncmp ( v , ""type"" , strlen ( ""type"" ) + 1 )"		1044868	1					
ANR	1044875	Callee	strncmp		1044868	0					
ANR	1044876	Identifier	strncmp		1044868	0					
ANR	1044877	ArgumentList	v		1044868	1					
ANR	1044878	Argument	v		1044868	0					
ANR	1044879	Identifier	v		1044868	0					
ANR	1044880	Argument	"""type"""		1044868	1					
ANR	1044881	PrimaryExpression	"""type"""		1044868	0					
ANR	1044882	Argument	"strlen ( ""type"" ) + 1"		1044868	2					
ANR	1044883	AdditiveExpression	"strlen ( ""type"" ) + 1"		1044868	0		+			
ANR	1044884	CallExpression	"strlen ( ""type"" )"		1044868	0					
ANR	1044885	Callee	strlen		1044868	0					
ANR	1044886	Identifier	strlen		1044868	0					
ANR	1044887	ArgumentList	"""type"""		1044868	1					
ANR	1044888	Argument	"""type"""		1044868	0					
ANR	1044889	PrimaryExpression	"""type"""		1044868	0					
ANR	1044890	PrimaryExpression	1		1044868	1					
ANR	1044891	ReturnType	static int		1044868	1					
ANR	1044892	Identifier	stdiftype		1044868	2					
ANR	1044893	ParameterList	"void * p , const char * k , const char * v"		1044868	3					
ANR	1044894	Parameter	void * p	699:21:19415:19421	1044868	0	True				
ANR	1044895	ParameterType	void *		1044868	0					
ANR	1044896	Identifier	p		1044868	1					
ANR	1044897	Parameter	const char * k	699:30:19424:19436	1044868	1	True				
ANR	1044898	ParameterType	const char *		1044868	0					
ANR	1044899	Identifier	k		1044868	1					
ANR	1044900	Parameter	const char * v	699:45:19439:19451	1044868	2	True				
ANR	1044901	ParameterType	const char *		1044868	0					
ANR	1044902	Identifier	v		1044868	1					
ANR	1044903	CFGEntryNode	ENTRY		1044868		True				
ANR	1044904	CFGExitNode	EXIT		1044868		True				
ANR	1044905	Symbol	p		1044868						
ANR	1044906	Symbol	strncmp		1044868						
ANR	1044907	Symbol	strlen		1044868						
ANR	1044908	Symbol	v		1044868						
ANR	1044909	Symbol	k		1044868						
ANR	1044910	Function	print_typelist_r_cb	703:0:19510:19630							
ANR	1044911	FunctionDef	"print_typelist_r_cb (void * p , const char * k , const char * v)"		1044910	0					
ANR	1044912	CompoundStatement		703:70:19580:19630	1044910	0					
ANR	1044913	ExpressionStatement	"r_cons_printf ( ""tk %s=%s\\n"" , k , v )"	704:1:19583:19617	1044910	0	True				
ANR	1044914	CallExpression	"r_cons_printf ( ""tk %s=%s\\n"" , k , v )"		1044910	0					
ANR	1044915	Callee	r_cons_printf		1044910	0					
ANR	1044916	Identifier	r_cons_printf		1044910	0					
ANR	1044917	ArgumentList	"""tk %s=%s\\n"""		1044910	1					
ANR	1044918	Argument	"""tk %s=%s\\n"""		1044910	0					
ANR	1044919	PrimaryExpression	"""tk %s=%s\\n"""		1044910	0					
ANR	1044920	Argument	k		1044910	1					
ANR	1044921	Identifier	k		1044910	0					
ANR	1044922	Argument	v		1044910	2					
ANR	1044923	Identifier	v		1044910	0					
ANR	1044924	ReturnStatement	return 1 ;	705:1:19620:19628	1044910	1	True				
ANR	1044925	PrimaryExpression	1		1044910	0					
ANR	1044926	ReturnType	static int		1044910	1					
ANR	1044927	Identifier	print_typelist_r_cb		1044910	2					
ANR	1044928	ParameterList	"void * p , const char * k , const char * v"		1044910	3					
ANR	1044929	Parameter	void * p	703:31:19541:19547	1044910	0	True				
ANR	1044930	ParameterType	void *		1044910	0					
ANR	1044931	Identifier	p		1044910	1					
ANR	1044932	Parameter	const char * k	703:40:19550:19562	1044910	1	True				
ANR	1044933	ParameterType	const char *		1044910	0					
ANR	1044934	Identifier	k		1044910	1					
ANR	1044935	Parameter	const char * v	703:55:19565:19577	1044910	2	True				
ANR	1044936	ParameterType	const char *		1044910	0					
ANR	1044937	Identifier	v		1044910	1					
ANR	1044938	CFGEntryNode	ENTRY		1044910		True				
ANR	1044939	CFGExitNode	EXIT		1044910		True				
ANR	1044940	Symbol	p		1044910						
ANR	1044941	Symbol	v		1044910						
ANR	1044942	Symbol	k		1044910						
ANR	1044943	Function	print_typelist_json_cb	708:0:19633:20288							
ANR	1044944	FunctionDef	"print_typelist_json_cb (void * p , const char * k , const char * v)"		1044943	0					
ANR	1044945	CompoundStatement		708:73:19706:20288	1044943	0					
ANR	1044946	IdentifierDeclStatement	RCore * core = ( RCore * ) p ;	709:1:19709:19733	1044943	0	True				
ANR	1044947	IdentifierDecl	* core = ( RCore * ) p		1044943	0					
ANR	1044948	IdentifierDeclType	RCore *		1044943	0					
ANR	1044949	Identifier	core		1044943	1					
ANR	1044950	AssignmentExpression	* core = ( RCore * ) p		1044943	2		=			
ANR	1044951	Identifier	core		1044943	0					
ANR	1044952	CastExpression	( RCore * ) p		1044943	1					
ANR	1044953	CastTarget	RCore *		1044943	0					
ANR	1044954	Identifier	p		1044943	1					
ANR	1044955	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	710:1:19736:19754	1044943	1	True				
ANR	1044956	IdentifierDecl	* pj = pj_new ( )		1044943	0					
ANR	1044957	IdentifierDeclType	PJ *		1044943	0					
ANR	1044958	Identifier	pj		1044943	1					
ANR	1044959	AssignmentExpression	* pj = pj_new ( )		1044943	2		=			
ANR	1044960	Identifier	pj		1044943	0					
ANR	1044961	CallExpression	pj_new ( )		1044943	1					
ANR	1044962	Callee	pj_new		1044943	0					
ANR	1044963	Identifier	pj_new		1044943	0					
ANR	1044964	ArgumentList			1044943	1					
ANR	1044965	ExpressionStatement	pj_o ( pj )	711:1:19757:19766	1044943	2	True				
ANR	1044966	CallExpression	pj_o ( pj )		1044943	0					
ANR	1044967	Callee	pj_o		1044943	0					
ANR	1044968	Identifier	pj_o		1044943	0					
ANR	1044969	ArgumentList	pj		1044943	1					
ANR	1044970	Argument	pj		1044943	0					
ANR	1044971	Identifier	pj		1044943	0					
ANR	1044972	IdentifierDeclStatement	Sdb * sdb = core -> anal -> sdb_types ;	712:1:19769:19801	1044943	3	True				
ANR	1044973	IdentifierDecl	* sdb = core -> anal -> sdb_types		1044943	0					
ANR	1044974	IdentifierDeclType	Sdb *		1044943	0					
ANR	1044975	Identifier	sdb		1044943	1					
ANR	1044976	AssignmentExpression	* sdb = core -> anal -> sdb_types		1044943	2		=			
ANR	1044977	Identifier	sdb		1044943	0					
ANR	1044978	PtrMemberAccess	core -> anal -> sdb_types		1044943	1					
ANR	1044979	PtrMemberAccess	core -> anal		1044943	0					
ANR	1044980	Identifier	core		1044943	0					
ANR	1044981	Identifier	anal		1044943	1					
ANR	1044982	Identifier	sdb_types		1044943	1					
ANR	1044983	IdentifierDeclStatement	"char * sizecmd = r_str_newf ( ""type.%s.size"" , k ) ;"	713:1:19804:19850	1044943	4	True				
ANR	1044984	IdentifierDecl	"* sizecmd = r_str_newf ( ""type.%s.size"" , k )"		1044943	0					
ANR	1044985	IdentifierDeclType	char *		1044943	0					
ANR	1044986	Identifier	sizecmd		1044943	1					
ANR	1044987	AssignmentExpression	"* sizecmd = r_str_newf ( ""type.%s.size"" , k )"		1044943	2		=			
ANR	1044988	Identifier	sizecmd		1044943	0					
ANR	1044989	CallExpression	"r_str_newf ( ""type.%s.size"" , k )"		1044943	1					
ANR	1044990	Callee	r_str_newf		1044943	0					
ANR	1044991	Identifier	r_str_newf		1044943	0					
ANR	1044992	ArgumentList	"""type.%s.size"""		1044943	1					
ANR	1044993	Argument	"""type.%s.size"""		1044943	0					
ANR	1044994	PrimaryExpression	"""type.%s.size"""		1044943	0					
ANR	1044995	Argument	k		1044943	1					
ANR	1044996	Identifier	k		1044943	0					
ANR	1044997	IdentifierDeclStatement	"char * size_s = sdb_querys ( sdb , NULL , - 1 , sizecmd ) ;"	714:1:19853:19903	1044943	5	True				
ANR	1044998	IdentifierDecl	"* size_s = sdb_querys ( sdb , NULL , - 1 , sizecmd )"		1044943	0					
ANR	1044999	IdentifierDeclType	char *		1044943	0					
ANR	1045000	Identifier	size_s		1044943	1					
ANR	1045001	AssignmentExpression	"* size_s = sdb_querys ( sdb , NULL , - 1 , sizecmd )"		1044943	2		=			
ANR	1045002	Identifier	size_s		1044943	0					
ANR	1045003	CallExpression	"sdb_querys ( sdb , NULL , - 1 , sizecmd )"		1044943	1					
ANR	1045004	Callee	sdb_querys		1044943	0					
ANR	1045005	Identifier	sdb_querys		1044943	0					
ANR	1045006	ArgumentList	sdb		1044943	1					
ANR	1045007	Argument	sdb		1044943	0					
ANR	1045008	Identifier	sdb		1044943	0					
ANR	1045009	Argument	NULL		1044943	1					
ANR	1045010	Identifier	NULL		1044943	0					
ANR	1045011	Argument	- 1		1044943	2					
ANR	1045012	UnaryOperationExpression	- 1		1044943	0					
ANR	1045013	UnaryOperator	-		1044943	0					
ANR	1045014	PrimaryExpression	1		1044943	1					
ANR	1045015	Argument	sizecmd		1044943	3					
ANR	1045016	Identifier	sizecmd		1044943	0					
ANR	1045017	IdentifierDeclStatement	"char * formatcmd = r_str_newf ( ""type.%s"" , k ) ;"	715:1:19906:19949	1044943	6	True				
ANR	1045018	IdentifierDecl	"* formatcmd = r_str_newf ( ""type.%s"" , k )"		1044943	0					
ANR	1045019	IdentifierDeclType	char *		1044943	0					
ANR	1045020	Identifier	formatcmd		1044943	1					
ANR	1045021	AssignmentExpression	"* formatcmd = r_str_newf ( ""type.%s"" , k )"		1044943	2		=			
ANR	1045022	Identifier	formatcmd		1044943	0					
ANR	1045023	CallExpression	"r_str_newf ( ""type.%s"" , k )"		1044943	1					
ANR	1045024	Callee	r_str_newf		1044943	0					
ANR	1045025	Identifier	r_str_newf		1044943	0					
ANR	1045026	ArgumentList	"""type.%s"""		1044943	1					
ANR	1045027	Argument	"""type.%s"""		1044943	0					
ANR	1045028	PrimaryExpression	"""type.%s"""		1044943	0					
ANR	1045029	Argument	k		1044943	1					
ANR	1045030	Identifier	k		1044943	0					
ANR	1045031	IdentifierDeclStatement	"char * format_s = sdb_querys ( sdb , NULL , - 1 , formatcmd ) ;"	716:1:19952:20006	1044943	7	True				
ANR	1045032	IdentifierDecl	"* format_s = sdb_querys ( sdb , NULL , - 1 , formatcmd )"		1044943	0					
ANR	1045033	IdentifierDeclType	char *		1044943	0					
ANR	1045034	Identifier	format_s		1044943	1					
ANR	1045035	AssignmentExpression	"* format_s = sdb_querys ( sdb , NULL , - 1 , formatcmd )"		1044943	2		=			
ANR	1045036	Identifier	format_s		1044943	0					
ANR	1045037	CallExpression	"sdb_querys ( sdb , NULL , - 1 , formatcmd )"		1044943	1					
ANR	1045038	Callee	sdb_querys		1044943	0					
ANR	1045039	Identifier	sdb_querys		1044943	0					
ANR	1045040	ArgumentList	sdb		1044943	1					
ANR	1045041	Argument	sdb		1044943	0					
ANR	1045042	Identifier	sdb		1044943	0					
ANR	1045043	Argument	NULL		1044943	1					
ANR	1045044	Identifier	NULL		1044943	0					
ANR	1045045	Argument	- 1		1044943	2					
ANR	1045046	UnaryOperationExpression	- 1		1044943	0					
ANR	1045047	UnaryOperator	-		1044943	0					
ANR	1045048	PrimaryExpression	1		1044943	1					
ANR	1045049	Argument	formatcmd		1044943	3					
ANR	1045050	Identifier	formatcmd		1044943	0					
ANR	1045051	ExpressionStatement	r_str_trim ( format_s )	717:1:20009:20030	1044943	8	True				
ANR	1045052	CallExpression	r_str_trim ( format_s )		1044943	0					
ANR	1045053	Callee	r_str_trim		1044943	0					
ANR	1045054	Identifier	r_str_trim		1044943	0					
ANR	1045055	ArgumentList	format_s		1044943	1					
ANR	1045056	Argument	format_s		1044943	0					
ANR	1045057	Identifier	format_s		1044943	0					
ANR	1045058	ExpressionStatement	"pj_ks ( pj , ""type"" , k )"	718:1:20033:20054	1044943	9	True				
ANR	1045059	CallExpression	"pj_ks ( pj , ""type"" , k )"		1044943	0					
ANR	1045060	Callee	pj_ks		1044943	0					
ANR	1045061	Identifier	pj_ks		1044943	0					
ANR	1045062	ArgumentList	pj		1044943	1					
ANR	1045063	Argument	pj		1044943	0					
ANR	1045064	Identifier	pj		1044943	0					
ANR	1045065	Argument	"""type"""		1044943	1					
ANR	1045066	PrimaryExpression	"""type"""		1044943	0					
ANR	1045067	Argument	k		1044943	2					
ANR	1045068	Identifier	k		1044943	0					
ANR	1045069	ExpressionStatement	"pj_ki ( pj , ""size"" , size_s ? atoi ( size_s ) : - 1 )"	719:1:20057:20104	1044943	10	True				
ANR	1045070	CallExpression	"pj_ki ( pj , ""size"" , size_s ? atoi ( size_s ) : - 1 )"		1044943	0					
ANR	1045071	Callee	pj_ki		1044943	0					
ANR	1045072	Identifier	pj_ki		1044943	0					
ANR	1045073	ArgumentList	pj		1044943	1					
ANR	1045074	Argument	pj		1044943	0					
ANR	1045075	Identifier	pj		1044943	0					
ANR	1045076	Argument	"""size"""		1044943	1					
ANR	1045077	PrimaryExpression	"""size"""		1044943	0					
ANR	1045078	Argument	size_s ? atoi ( size_s ) : - 1		1044943	2					
ANR	1045079	ConditionalExpression	size_s ? atoi ( size_s ) : - 1		1044943	0					
ANR	1045080	Condition	size_s		1044943	0					
ANR	1045081	Identifier	size_s		1044943	0					
ANR	1045082	CallExpression	atoi ( size_s )		1044943	1					
ANR	1045083	Callee	atoi		1044943	0					
ANR	1045084	Identifier	atoi		1044943	0					
ANR	1045085	ArgumentList	size_s		1044943	1					
ANR	1045086	Argument	size_s		1044943	0					
ANR	1045087	Identifier	size_s		1044943	0					
ANR	1045088	UnaryOperationExpression	- 1		1044943	2					
ANR	1045089	UnaryOperator	-		1044943	0					
ANR	1045090	PrimaryExpression	1		1044943	1					
ANR	1045091	ExpressionStatement	"pj_ks ( pj , ""format"" , format_s )"	720:1:20107:20137	1044943	11	True				
ANR	1045092	CallExpression	"pj_ks ( pj , ""format"" , format_s )"		1044943	0					
ANR	1045093	Callee	pj_ks		1044943	0					
ANR	1045094	Identifier	pj_ks		1044943	0					
ANR	1045095	ArgumentList	pj		1044943	1					
ANR	1045096	Argument	pj		1044943	0					
ANR	1045097	Identifier	pj		1044943	0					
ANR	1045098	Argument	"""format"""		1044943	1					
ANR	1045099	PrimaryExpression	"""format"""		1044943	0					
ANR	1045100	Argument	format_s		1044943	2					
ANR	1045101	Identifier	format_s		1044943	0					
ANR	1045102	ExpressionStatement	pj_end ( pj )	721:1:20140:20151	1044943	12	True				
ANR	1045103	CallExpression	pj_end ( pj )		1044943	0					
ANR	1045104	Callee	pj_end		1044943	0					
ANR	1045105	Identifier	pj_end		1044943	0					
ANR	1045106	ArgumentList	pj		1044943	1					
ANR	1045107	Argument	pj		1044943	0					
ANR	1045108	Identifier	pj		1044943	0					
ANR	1045109	ExpressionStatement	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"	722:1:20154:20190	1044943	13	True				
ANR	1045110	CallExpression	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"		1044943	0					
ANR	1045111	Callee	r_cons_printf		1044943	0					
ANR	1045112	Identifier	r_cons_printf		1044943	0					
ANR	1045113	ArgumentList	"""%s"""		1044943	1					
ANR	1045114	Argument	"""%s"""		1044943	0					
ANR	1045115	PrimaryExpression	"""%s"""		1044943	0					
ANR	1045116	Argument	pj_string ( pj )		1044943	1					
ANR	1045117	CallExpression	pj_string ( pj )		1044943	0					
ANR	1045118	Callee	pj_string		1044943	0					
ANR	1045119	Identifier	pj_string		1044943	0					
ANR	1045120	ArgumentList	pj		1044943	1					
ANR	1045121	Argument	pj		1044943	0					
ANR	1045122	Identifier	pj		1044943	0					
ANR	1045123	ExpressionStatement	pj_free ( pj )	723:1:20193:20205	1044943	14	True				
ANR	1045124	CallExpression	pj_free ( pj )		1044943	0					
ANR	1045125	Callee	pj_free		1044943	0					
ANR	1045126	Identifier	pj_free		1044943	0					
ANR	1045127	ArgumentList	pj		1044943	1					
ANR	1045128	Argument	pj		1044943	0					
ANR	1045129	Identifier	pj		1044943	0					
ANR	1045130	ExpressionStatement	free ( size_s )	724:1:20208:20221	1044943	15	True				
ANR	1045131	CallExpression	free ( size_s )		1044943	0					
ANR	1045132	Callee	free		1044943	0					
ANR	1045133	Identifier	free		1044943	0					
ANR	1045134	ArgumentList	size_s		1044943	1					
ANR	1045135	Argument	size_s		1044943	0					
ANR	1045136	Identifier	size_s		1044943	0					
ANR	1045137	ExpressionStatement	free ( format_s )	725:1:20224:20239	1044943	16	True				
ANR	1045138	CallExpression	free ( format_s )		1044943	0					
ANR	1045139	Callee	free		1044943	0					
ANR	1045140	Identifier	free		1044943	0					
ANR	1045141	ArgumentList	format_s		1044943	1					
ANR	1045142	Argument	format_s		1044943	0					
ANR	1045143	Identifier	format_s		1044943	0					
ANR	1045144	ExpressionStatement	free ( sizecmd )	726:1:20242:20256	1044943	17	True				
ANR	1045145	CallExpression	free ( sizecmd )		1044943	0					
ANR	1045146	Callee	free		1044943	0					
ANR	1045147	Identifier	free		1044943	0					
ANR	1045148	ArgumentList	sizecmd		1044943	1					
ANR	1045149	Argument	sizecmd		1044943	0					
ANR	1045150	Identifier	sizecmd		1044943	0					
ANR	1045151	ExpressionStatement	free ( formatcmd )	727:1:20259:20275	1044943	18	True				
ANR	1045152	CallExpression	free ( formatcmd )		1044943	0					
ANR	1045153	Callee	free		1044943	0					
ANR	1045154	Identifier	free		1044943	0					
ANR	1045155	ArgumentList	formatcmd		1044943	1					
ANR	1045156	Argument	formatcmd		1044943	0					
ANR	1045157	Identifier	formatcmd		1044943	0					
ANR	1045158	ReturnStatement	return 1 ;	728:1:20278:20286	1044943	19	True				
ANR	1045159	PrimaryExpression	1		1044943	0					
ANR	1045160	ReturnType	static int		1044943	1					
ANR	1045161	Identifier	print_typelist_json_cb		1044943	2					
ANR	1045162	ParameterList	"void * p , const char * k , const char * v"		1044943	3					
ANR	1045163	Parameter	void * p	708:34:19667:19673	1044943	0	True				
ANR	1045164	ParameterType	void *		1044943	0					
ANR	1045165	Identifier	p		1044943	1					
ANR	1045166	Parameter	const char * k	708:43:19676:19688	1044943	1	True				
ANR	1045167	ParameterType	const char *		1044943	0					
ANR	1045168	Identifier	k		1044943	1					
ANR	1045169	Parameter	const char * v	708:58:19691:19703	1044943	2	True				
ANR	1045170	ParameterType	const char *		1044943	0					
ANR	1045171	Identifier	v		1044943	1					
ANR	1045172	CFGEntryNode	ENTRY		1044943		True				
ANR	1045173	CFGExitNode	EXIT		1044943		True				
ANR	1045174	Symbol	atoi		1044943						
ANR	1045175	Symbol	NULL		1044943						
ANR	1045176	Symbol	pj_string		1044943						
ANR	1045177	Symbol	* core		1044943						
ANR	1045178	Symbol	size_s		1044943						
ANR	1045179	Symbol	sdb_querys		1044943						
ANR	1045180	Symbol	format_s		1044943						
ANR	1045181	Symbol	k		1044943						
ANR	1045182	Symbol	core -> anal -> sdb_types		1044943						
ANR	1045183	Symbol	r_str_newf		1044943						
ANR	1045184	Symbol	core -> anal		1044943						
ANR	1045185	Symbol	p		1044943						
ANR	1045186	Symbol	sdb		1044943						
ANR	1045187	Symbol	core		1044943						
ANR	1045188	Symbol	* core -> anal		1044943						
ANR	1045189	Symbol	v		1044943						
ANR	1045190	Symbol	sizecmd		1044943						
ANR	1045191	Symbol	formatcmd		1044943						
ANR	1045192	Symbol	pj_new		1044943						
ANR	1045193	Symbol	pj		1044943						
ANR	1045194	Symbol	* * core		1044943						
ANR	1045195	Function	print_keys	731:0:20291:20837							
ANR	1045196	FunctionDef	"print_keys (Sdb * TDB , RCore * core , SdbForeachCallback filter , SdbForeachCallback printfn_cb , bool json)"		1045195	0					
ANR	1045197	CompoundStatement		731:115:20406:20837	1045195	0					
ANR	1045198	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list_filter ( TDB , filter , true ) ;"	732:1:20409:20465	1045195	0	True				
ANR	1045199	IdentifierDecl	"* l = sdb_foreach_list_filter ( TDB , filter , true )"		1045195	0					
ANR	1045200	IdentifierDeclType	SdbList *		1045195	0					
ANR	1045201	Identifier	l		1045195	1					
ANR	1045202	AssignmentExpression	"* l = sdb_foreach_list_filter ( TDB , filter , true )"		1045195	2		=			
ANR	1045203	Identifier	l		1045195	0					
ANR	1045204	CallExpression	"sdb_foreach_list_filter ( TDB , filter , true )"		1045195	1					
ANR	1045205	Callee	sdb_foreach_list_filter		1045195	0					
ANR	1045206	Identifier	sdb_foreach_list_filter		1045195	0					
ANR	1045207	ArgumentList	TDB		1045195	1					
ANR	1045208	Argument	TDB		1045195	0					
ANR	1045209	Identifier	TDB		1045195	0					
ANR	1045210	Argument	filter		1045195	1					
ANR	1045211	Identifier	filter		1045195	0					
ANR	1045212	Argument	true		1045195	2					
ANR	1045213	Identifier	true		1045195	0					
ANR	1045214	IdentifierDeclStatement	SdbListIter * it ;	733:1:20468:20483	1045195	1	True				
ANR	1045215	IdentifierDecl	* it		1045195	0					
ANR	1045216	IdentifierDeclType	SdbListIter *		1045195	0					
ANR	1045217	Identifier	it		1045195	1					
ANR	1045218	IdentifierDeclStatement	SdbKv * kv ;	734:1:20486:20495	1045195	2	True				
ANR	1045219	IdentifierDecl	* kv		1045195	0					
ANR	1045220	IdentifierDeclType	SdbKv *		1045195	0					
ANR	1045221	Identifier	kv		1045195	1					
ANR	1045222	IdentifierDeclStatement	"const char * comma = """" ;"	735:1:20498:20520	1045195	3	True				
ANR	1045223	IdentifierDecl	"* comma = """""		1045195	0					
ANR	1045224	IdentifierDeclType	const char *		1045195	0					
ANR	1045225	Identifier	comma		1045195	1					
ANR	1045226	AssignmentExpression	"* comma = """""		1045195	2		=			
ANR	1045227	Identifier	comma		1045195	0					
ANR	1045228	PrimaryExpression	""""""		1045195	1					
ANR	1045229	IfStatement	if ( json )		1045195	4					
ANR	1045230	Condition	json	737:5:20528:20531	1045195	0	True				
ANR	1045231	Identifier	json		1045195	0					
ANR	1045232	CompoundStatement		7:11:127:127	1045195	1					
ANR	1045233	ExpressionStatement	"r_cons_printf ( ""["" )"	738:2:20538:20557	1045195	0	True				
ANR	1045234	CallExpression	"r_cons_printf ( ""["" )"		1045195	0					
ANR	1045235	Callee	r_cons_printf		1045195	0					
ANR	1045236	Identifier	r_cons_printf		1045195	0					
ANR	1045237	ArgumentList	"""["""		1045195	1					
ANR	1045238	Argument	"""["""		1045195	0					
ANR	1045239	PrimaryExpression	"""["""		1045195	0					
ANR	1045240	Statement	ls_foreach	740:1:20563:20572	1045195	5	True				
ANR	1045241	Statement	(	740:12:20574:20574	1045195	6	True				
ANR	1045242	Statement	l	740:13:20575:20575	1045195	7	True				
ANR	1045243	Statement	","	740:14:20576:20576	1045195	8	True				
ANR	1045244	Statement	it	740:16:20578:20579	1045195	9	True				
ANR	1045245	Statement	","	740:18:20580:20580	1045195	10	True				
ANR	1045246	Statement	kv	740:20:20582:20583	1045195	11	True				
ANR	1045247	Statement	)	740:22:20584:20584	1045195	12	True				
ANR	1045248	CompoundStatement		11:2:183:213	1045195	13					
ANR	1045249	IdentifierDeclStatement	const char * k = sdbkv_key ( kv ) ;	741:2:20590:20620	1045195	0	True				
ANR	1045250	IdentifierDecl	* k = sdbkv_key ( kv )		1045195	0					
ANR	1045251	IdentifierDeclType	const char *		1045195	0					
ANR	1045252	Identifier	k		1045195	1					
ANR	1045253	AssignmentExpression	* k = sdbkv_key ( kv )		1045195	2		=			
ANR	1045254	Identifier	k		1045195	0					
ANR	1045255	CallExpression	sdbkv_key ( kv )		1045195	1					
ANR	1045256	Callee	sdbkv_key		1045195	0					
ANR	1045257	Identifier	sdbkv_key		1045195	0					
ANR	1045258	ArgumentList	kv		1045195	1					
ANR	1045259	Argument	kv		1045195	0					
ANR	1045260	Identifier	kv		1045195	0					
ANR	1045261	IfStatement	if ( ! k || ! * k )		1045195	1					
ANR	1045262	Condition	! k || ! * k	742:6:20628:20636	1045195	0	True				
ANR	1045263	OrExpression	! k || ! * k		1045195	0		||			
ANR	1045264	UnaryOperationExpression	! k		1045195	0					
ANR	1045265	UnaryOperator	!		1045195	0					
ANR	1045266	Identifier	k		1045195	1					
ANR	1045267	UnaryOperationExpression	! * k		1045195	1					
ANR	1045268	UnaryOperator	!		1045195	0					
ANR	1045269	UnaryOperationExpression	* k		1045195	1					
ANR	1045270	UnaryOperator	*		1045195	0					
ANR	1045271	Identifier	k		1045195	1					
ANR	1045272	CompoundStatement		12:17:232:232	1045195	1					
ANR	1045273	ContinueStatement	continue ;	743:3:20644:20652	1045195	0	True				
ANR	1045274	IfStatement	if ( json )		1045195	2					
ANR	1045275	Condition	json	745:6:20664:20667	1045195	0	True				
ANR	1045276	Identifier	json		1045195	0					
ANR	1045277	CompoundStatement		15:12:263:263	1045195	1					
ANR	1045278	ExpressionStatement	"r_cons_printf ( ""%s"" , comma )"	746:3:20675:20702	1045195	0	True				
ANR	1045279	CallExpression	"r_cons_printf ( ""%s"" , comma )"		1045195	0					
ANR	1045280	Callee	r_cons_printf		1045195	0					
ANR	1045281	Identifier	r_cons_printf		1045195	0					
ANR	1045282	ArgumentList	"""%s"""		1045195	1					
ANR	1045283	Argument	"""%s"""		1045195	0					
ANR	1045284	PrimaryExpression	"""%s"""		1045195	0					
ANR	1045285	Argument	comma		1045195	1					
ANR	1045286	Identifier	comma		1045195	0					
ANR	1045287	ExpressionStatement	"comma = "","""	747:3:20707:20718	1045195	1	True				
ANR	1045288	AssignmentExpression	"comma = "","""		1045195	0		=			
ANR	1045289	Identifier	comma		1045195	0					
ANR	1045290	PrimaryExpression	""","""		1045195	1					
ANR	1045291	ExpressionStatement	"printfn_cb ( core , sdbkv_key ( kv ) , sdbkv_value ( kv ) )"	749:2:20726:20777	1045195	3	True				
ANR	1045292	CallExpression	"printfn_cb ( core , sdbkv_key ( kv ) , sdbkv_value ( kv ) )"		1045195	0					
ANR	1045293	Callee	printfn_cb		1045195	0					
ANR	1045294	Identifier	printfn_cb		1045195	0					
ANR	1045295	ArgumentList	core		1045195	1					
ANR	1045296	Argument	core		1045195	0					
ANR	1045297	Identifier	core		1045195	0					
ANR	1045298	Argument	sdbkv_key ( kv )		1045195	1					
ANR	1045299	CallExpression	sdbkv_key ( kv )		1045195	0					
ANR	1045300	Callee	sdbkv_key		1045195	0					
ANR	1045301	Identifier	sdbkv_key		1045195	0					
ANR	1045302	ArgumentList	kv		1045195	1					
ANR	1045303	Argument	kv		1045195	0					
ANR	1045304	Identifier	kv		1045195	0					
ANR	1045305	Argument	sdbkv_value ( kv )		1045195	2					
ANR	1045306	CallExpression	sdbkv_value ( kv )		1045195	0					
ANR	1045307	Callee	sdbkv_value		1045195	0					
ANR	1045308	Identifier	sdbkv_value		1045195	0					
ANR	1045309	ArgumentList	kv		1045195	1					
ANR	1045310	Argument	kv		1045195	0					
ANR	1045311	Identifier	kv		1045195	0					
ANR	1045312	IfStatement	if ( json )		1045195	14					
ANR	1045313	Condition	json	751:5:20787:20790	1045195	0	True				
ANR	1045314	Identifier	json		1045195	0					
ANR	1045315	CompoundStatement		21:11:386:386	1045195	1					
ANR	1045316	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	752:2:20797:20818	1045195	0	True				
ANR	1045317	CallExpression	"r_cons_printf ( ""]\\n"" )"		1045195	0					
ANR	1045318	Callee	r_cons_printf		1045195	0					
ANR	1045319	Identifier	r_cons_printf		1045195	0					
ANR	1045320	ArgumentList	"""]\\n"""		1045195	1					
ANR	1045321	Argument	"""]\\n"""		1045195	0					
ANR	1045322	PrimaryExpression	"""]\\n"""		1045195	0					
ANR	1045323	ExpressionStatement	ls_free ( l )	754:1:20824:20835	1045195	15	True				
ANR	1045324	CallExpression	ls_free ( l )		1045195	0					
ANR	1045325	Callee	ls_free		1045195	0					
ANR	1045326	Identifier	ls_free		1045195	0					
ANR	1045327	ArgumentList	l		1045195	1					
ANR	1045328	Argument	l		1045195	0					
ANR	1045329	Identifier	l		1045195	0					
ANR	1045330	ReturnType	static void		1045195	1					
ANR	1045331	Identifier	print_keys		1045195	2					
ANR	1045332	ParameterList	"Sdb * TDB , RCore * core , SdbForeachCallback filter , SdbForeachCallback printfn_cb , bool json"		1045195	3					
ANR	1045333	Parameter	Sdb * TDB	731:23:20314:20321	1045195	0	True				
ANR	1045334	ParameterType	Sdb *		1045195	0					
ANR	1045335	Identifier	TDB		1045195	1					
ANR	1045336	Parameter	RCore * core	731:33:20324:20334	1045195	1	True				
ANR	1045337	ParameterType	RCore *		1045195	0					
ANR	1045338	Identifier	core		1045195	1					
ANR	1045339	Parameter	SdbForeachCallback filter	731:46:20337:20361	1045195	2	True				
ANR	1045340	ParameterType	SdbForeachCallback		1045195	0					
ANR	1045341	Identifier	filter		1045195	1					
ANR	1045342	Parameter	SdbForeachCallback printfn_cb	731:73:20364:20392	1045195	3	True				
ANR	1045343	ParameterType	SdbForeachCallback		1045195	0					
ANR	1045344	Identifier	printfn_cb		1045195	1					
ANR	1045345	Parameter	bool json	731:104:20395:20403	1045195	4	True				
ANR	1045346	ParameterType	bool		1045195	0					
ANR	1045347	Identifier	json		1045195	1					
ANR	1045348	CFGEntryNode	ENTRY		1045195		True				
ANR	1045349	CFGExitNode	EXIT		1045195		True				
ANR	1045350	CFGErrorNode	ERROR		1045195		True				
ANR	1045351	Symbol	sdbkv_key		1045195						
ANR	1045352	Symbol	sdb_foreach_list_filter		1045195						
ANR	1045353	Symbol	it		1045195						
ANR	1045354	Symbol	kv		1045195						
ANR	1045355	Symbol	k		1045195						
ANR	1045356	Symbol	sdbkv_value		1045195						
ANR	1045357	Symbol	l		1045195						
ANR	1045358	Symbol	printfn_cb		1045195						
ANR	1045359	Symbol	filter		1045195						
ANR	1045360	Symbol	core		1045195						
ANR	1045361	Symbol	comma		1045195						
ANR	1045362	Symbol	TDB		1045195						
ANR	1045363	Symbol	* k		1045195						
ANR	1045364	Symbol	true		1045195						
ANR	1045365	Symbol	json		1045195						
ANR	1045366	Function	typesList	757:0:20840:21213							
ANR	1045367	FunctionDef	"typesList (RCore * core , int mode)"		1045366	0					
ANR	1045368	CompoundStatement		757:45:20885:21213	1045366	0					
ANR	1045369	SwitchStatement	switch ( mode )		1045366	0					
ANR	1045370	Condition	mode	758:9:20896:20899	1045366	0	True				
ANR	1045371	Identifier	mode		1045366	0					
ANR	1045372	CompoundStatement		2:15:16:16	1045366	1					
ANR	1045373	Label	case 1 :	759:1:20905:20911	1045366	0	True				
ANR	1045374	Label	case '*' :	760:1:20914:20922	1045366	1	True				
ANR	1045375	ExpressionStatement	"print_keys ( core -> anal -> sdb_types , core , NULL , print_typelist_r_cb , false )"	761:2:20926:21000	1045366	2	True				
ANR	1045376	CallExpression	"print_keys ( core -> anal -> sdb_types , core , NULL , print_typelist_r_cb , false )"		1045366	0					
ANR	1045377	Callee	print_keys		1045366	0					
ANR	1045378	Identifier	print_keys		1045366	0					
ANR	1045379	ArgumentList	core -> anal -> sdb_types		1045366	1					
ANR	1045380	Argument	core -> anal -> sdb_types		1045366	0					
ANR	1045381	PtrMemberAccess	core -> anal -> sdb_types		1045366	0					
ANR	1045382	PtrMemberAccess	core -> anal		1045366	0					
ANR	1045383	Identifier	core		1045366	0					
ANR	1045384	Identifier	anal		1045366	1					
ANR	1045385	Identifier	sdb_types		1045366	1					
ANR	1045386	Argument	core		1045366	1					
ANR	1045387	Identifier	core		1045366	0					
ANR	1045388	Argument	NULL		1045366	2					
ANR	1045389	Identifier	NULL		1045366	0					
ANR	1045390	Argument	print_typelist_r_cb		1045366	3					
ANR	1045391	Identifier	print_typelist_r_cb		1045366	0					
ANR	1045392	Argument	false		1045366	4					
ANR	1045393	Identifier	false		1045366	0					
ANR	1045394	BreakStatement	break ;	762:2:21004:21009	1045366	3	True				
ANR	1045395	Label	case 'j' :	763:1:21012:21020	1045366	4	True				
ANR	1045396	ExpressionStatement	"print_keys ( core -> anal -> sdb_types , core , stdiftype , print_typelist_json_cb , true )"	764:2:21024:21105	1045366	5	True				
ANR	1045397	CallExpression	"print_keys ( core -> anal -> sdb_types , core , stdiftype , print_typelist_json_cb , true )"		1045366	0					
ANR	1045398	Callee	print_keys		1045366	0					
ANR	1045399	Identifier	print_keys		1045366	0					
ANR	1045400	ArgumentList	core -> anal -> sdb_types		1045366	1					
ANR	1045401	Argument	core -> anal -> sdb_types		1045366	0					
ANR	1045402	PtrMemberAccess	core -> anal -> sdb_types		1045366	0					
ANR	1045403	PtrMemberAccess	core -> anal		1045366	0					
ANR	1045404	Identifier	core		1045366	0					
ANR	1045405	Identifier	anal		1045366	1					
ANR	1045406	Identifier	sdb_types		1045366	1					
ANR	1045407	Argument	core		1045366	1					
ANR	1045408	Identifier	core		1045366	0					
ANR	1045409	Argument	stdiftype		1045366	2					
ANR	1045410	Identifier	stdiftype		1045366	0					
ANR	1045411	Argument	print_typelist_json_cb		1045366	3					
ANR	1045412	Identifier	print_typelist_json_cb		1045366	0					
ANR	1045413	Argument	true		1045366	4					
ANR	1045414	Identifier	true		1045366	0					
ANR	1045415	BreakStatement	break ;	765:2:21109:21114	1045366	6	True				
ANR	1045416	Label	default :	766:1:21117:21124	1045366	7	True				
ANR	1045417	Identifier	default		1045366	0					
ANR	1045418	ExpressionStatement	"print_keys ( core -> anal -> sdb_types , core , stdiftype , printkey_cb , false )"	767:2:21128:21199	1045366	8	True				
ANR	1045419	CallExpression	"print_keys ( core -> anal -> sdb_types , core , stdiftype , printkey_cb , false )"		1045366	0					
ANR	1045420	Callee	print_keys		1045366	0					
ANR	1045421	Identifier	print_keys		1045366	0					
ANR	1045422	ArgumentList	core -> anal -> sdb_types		1045366	1					
ANR	1045423	Argument	core -> anal -> sdb_types		1045366	0					
ANR	1045424	PtrMemberAccess	core -> anal -> sdb_types		1045366	0					
ANR	1045425	PtrMemberAccess	core -> anal		1045366	0					
ANR	1045426	Identifier	core		1045366	0					
ANR	1045427	Identifier	anal		1045366	1					
ANR	1045428	Identifier	sdb_types		1045366	1					
ANR	1045429	Argument	core		1045366	1					
ANR	1045430	Identifier	core		1045366	0					
ANR	1045431	Argument	stdiftype		1045366	2					
ANR	1045432	Identifier	stdiftype		1045366	0					
ANR	1045433	Argument	printkey_cb		1045366	3					
ANR	1045434	Identifier	printkey_cb		1045366	0					
ANR	1045435	Argument	false		1045366	4					
ANR	1045436	Identifier	false		1045366	0					
ANR	1045437	BreakStatement	break ;	768:2:21203:21208	1045366	9	True				
ANR	1045438	ReturnType	static void		1045366	1					
ANR	1045439	Identifier	typesList		1045366	2					
ANR	1045440	ParameterList	"RCore * core , int mode"		1045366	3					
ANR	1045441	Parameter	RCore * core	757:22:20862:20872	1045366	0	True				
ANR	1045442	ParameterType	RCore *		1045366	0					
ANR	1045443	Identifier	core		1045366	1					
ANR	1045444	Parameter	int mode	757:35:20875:20882	1045366	1	True				
ANR	1045445	ParameterType	int		1045366	0					
ANR	1045446	Identifier	mode		1045366	1					
ANR	1045447	CFGEntryNode	ENTRY		1045366		True				
ANR	1045448	CFGExitNode	EXIT		1045366		True				
ANR	1045449	Symbol	NULL		1045366						
ANR	1045450	Symbol	* core		1045366						
ANR	1045451	Symbol	false		1045366						
ANR	1045452	Symbol	printkey_cb		1045366						
ANR	1045453	Symbol	core -> anal -> sdb_types		1045366						
ANR	1045454	Symbol	stdiftype		1045366						
ANR	1045455	Symbol	core -> anal		1045366						
ANR	1045456	Symbol	mode		1045366						
ANR	1045457	Symbol	print_typelist_json_cb		1045366						
ANR	1045458	Symbol	core		1045366						
ANR	1045459	Symbol	* core -> anal		1045366						
ANR	1045460	Symbol	true		1045366						
ANR	1045461	Symbol	print_typelist_r_cb		1045366						
ANR	1045462	Symbol	* * core		1045366						
ANR	1045463	Function	set_offset_hint	772:0:21216:21796							
ANR	1045464	FunctionDef	"set_offset_hint (RCore * core , RAnalOp op , const char * type , ut64 laddr , ut64 at , int offimm)"		1045463	0					
ANR	1045465	CompoundStatement		772:104:21320:21796	1045463	0					
ANR	1045466	IdentifierDeclStatement	"char * res = r_type_get_struct_memb ( core -> anal -> sdb_types , type , offimm ) ;"	773:1:21323:21395	1045463	0	True				
ANR	1045467	IdentifierDecl	"* res = r_type_get_struct_memb ( core -> anal -> sdb_types , type , offimm )"		1045463	0					
ANR	1045468	IdentifierDeclType	char *		1045463	0					
ANR	1045469	Identifier	res		1045463	1					
ANR	1045470	AssignmentExpression	"* res = r_type_get_struct_memb ( core -> anal -> sdb_types , type , offimm )"		1045463	2		=			
ANR	1045471	Identifier	res		1045463	0					
ANR	1045472	CallExpression	"r_type_get_struct_memb ( core -> anal -> sdb_types , type , offimm )"		1045463	1					
ANR	1045473	Callee	r_type_get_struct_memb		1045463	0					
ANR	1045474	Identifier	r_type_get_struct_memb		1045463	0					
ANR	1045475	ArgumentList	core -> anal -> sdb_types		1045463	1					
ANR	1045476	Argument	core -> anal -> sdb_types		1045463	0					
ANR	1045477	PtrMemberAccess	core -> anal -> sdb_types		1045463	0					
ANR	1045478	PtrMemberAccess	core -> anal		1045463	0					
ANR	1045479	Identifier	core		1045463	0					
ANR	1045480	Identifier	anal		1045463	1					
ANR	1045481	Identifier	sdb_types		1045463	1					
ANR	1045482	Argument	type		1045463	1					
ANR	1045483	Identifier	type		1045463	0					
ANR	1045484	Argument	offimm		1045463	2					
ANR	1045485	Identifier	offimm		1045463	0					
ANR	1045486	IdentifierDeclStatement	const char * cmt = ( ( offimm == 0 ) && res ) ? res : type ;	774:1:21398:21449	1045463	1	True				
ANR	1045487	IdentifierDecl	* cmt = ( ( offimm == 0 ) && res ) ? res : type		1045463	0					
ANR	1045488	IdentifierDeclType	const char *		1045463	0					
ANR	1045489	Identifier	cmt		1045463	1					
ANR	1045490	AssignmentExpression	* cmt = ( ( offimm == 0 ) && res ) ? res : type		1045463	2		=			
ANR	1045491	Identifier	cmt		1045463	0					
ANR	1045492	ConditionalExpression	( ( offimm == 0 ) && res ) ? res : type		1045463	1					
ANR	1045493	Condition	( offimm == 0 ) && res		1045463	0					
ANR	1045494	AndExpression	( offimm == 0 ) && res		1045463	0		&&			
ANR	1045495	EqualityExpression	offimm == 0		1045463	0		==			
ANR	1045496	Identifier	offimm		1045463	0					
ANR	1045497	PrimaryExpression	0		1045463	1					
ANR	1045498	Identifier	res		1045463	1					
ANR	1045499	Identifier	res		1045463	1					
ANR	1045500	Identifier	type		1045463	2					
ANR	1045501	IfStatement	if ( offimm > 0 )		1045463	2					
ANR	1045502	Condition	offimm > 0	775:5:21456:21465	1045463	0	True				
ANR	1045503	RelationalExpression	offimm > 0		1045463	0		>			
ANR	1045504	Identifier	offimm		1045463	0					
ANR	1045505	PrimaryExpression	0		1045463	1					
ANR	1045506	CompoundStatement		4:17:147:147	1045463	1					
ANR	1045507	Statement	char	777:2:21510:21513	1045463	0	True				
ANR	1045508	Statement	*	777:6:21514:21514	1045463	1	True				
ANR	1045509	Statement	query	777:8:21516:21520	1045463	2	True				
ANR	1045510	Statement	=	777:14:21522:21522	1045463	3	True				
ANR	1045511	Statement	sdb_fmt	777:16:21524:21530	1045463	4	True				
ANR	1045512	Statement	(	777:24:21532:21532	1045463	5	True				
ANR	1045513	Statement	"""link.%08"""	777:25:21533:21542	1045463	6	True				
ANR	1045514	Statement	PFMT64x	777:35:21543:21549	1045463	7	True				
ANR	1045515	Statement	","	777:42:21550:21550	1045463	8	True				
ANR	1045516	Statement	laddr	777:44:21552:21556	1045463	9	True				
ANR	1045517	Statement	)	777:49:21557:21557	1045463	10	True				
ANR	1045518	ExpressionStatement		777:50:21558:21558	1045463	11	True				
ANR	1045519	IfStatement	"if ( res && sdb_const_get ( core -> anal -> sdb_types , query , 0 ) )"		1045463	12					
ANR	1045520	Condition	"res && sdb_const_get ( core -> anal -> sdb_types , query , 0 )"	778:6:21566:21619	1045463	0	True				
ANR	1045521	AndExpression	"res && sdb_const_get ( core -> anal -> sdb_types , query , 0 )"		1045463	0		&&			
ANR	1045522	Identifier	res		1045463	0					
ANR	1045523	CallExpression	"sdb_const_get ( core -> anal -> sdb_types , query , 0 )"		1045463	1					
ANR	1045524	Callee	sdb_const_get		1045463	0					
ANR	1045525	Identifier	sdb_const_get		1045463	0					
ANR	1045526	ArgumentList	core -> anal -> sdb_types		1045463	1					
ANR	1045527	Argument	core -> anal -> sdb_types		1045463	0					
ANR	1045528	PtrMemberAccess	core -> anal -> sdb_types		1045463	0					
ANR	1045529	PtrMemberAccess	core -> anal		1045463	0					
ANR	1045530	Identifier	core		1045463	0					
ANR	1045531	Identifier	anal		1045463	1					
ANR	1045532	Identifier	sdb_types		1045463	1					
ANR	1045533	Argument	query		1045463	1					
ANR	1045534	Identifier	query		1045463	0					
ANR	1045535	Argument	0		1045463	2					
ANR	1045536	PrimaryExpression	0		1045463	0					
ANR	1045537	CompoundStatement		7:62:301:301	1045463	1					
ANR	1045538	ExpressionStatement	"r_anal_hint_set_offset ( core -> anal , at , res )"	779:3:21627:21671	1045463	0	True				
ANR	1045539	CallExpression	"r_anal_hint_set_offset ( core -> anal , at , res )"		1045463	0					
ANR	1045540	Callee	r_anal_hint_set_offset		1045463	0					
ANR	1045541	Identifier	r_anal_hint_set_offset		1045463	0					
ANR	1045542	ArgumentList	core -> anal		1045463	1					
ANR	1045543	Argument	core -> anal		1045463	0					
ANR	1045544	PtrMemberAccess	core -> anal		1045463	0					
ANR	1045545	Identifier	core		1045463	0					
ANR	1045546	Identifier	anal		1045463	1					
ANR	1045547	Argument	at		1045463	1					
ANR	1045548	Identifier	at		1045463	0					
ANR	1045549	Argument	res		1045463	2					
ANR	1045550	Identifier	res		1045463	0					
ANR	1045551	ElseStatement	else		1045463	0					
ANR	1045552	IfStatement	if ( cmt && r_anal_op_ismemref ( op . type ) )		1045463	0					
ANR	1045553	Condition	cmt && r_anal_op_ismemref ( op . type )	781:12:21689:21723	1045463	0	True				
ANR	1045554	AndExpression	cmt && r_anal_op_ismemref ( op . type )		1045463	0		&&			
ANR	1045555	Identifier	cmt		1045463	0					
ANR	1045556	CallExpression	r_anal_op_ismemref ( op . type )		1045463	1					
ANR	1045557	Callee	r_anal_op_ismemref		1045463	0					
ANR	1045558	Identifier	r_anal_op_ismemref		1045463	0					
ANR	1045559	ArgumentList	op . type		1045463	1					
ANR	1045560	Argument	op . type		1045463	0					
ANR	1045561	MemberAccess	op . type		1045463	0					
ANR	1045562	Identifier	op		1045463	0					
ANR	1045563	Identifier	type		1045463	1					
ANR	1045564	CompoundStatement		10:49:405:405	1045463	1					
ANR	1045565	ExpressionStatement	"r_meta_set_string ( core -> anal , R_META_TYPE_VARTYPE , at , cmt )"	782:3:21731:21791	1045463	0	True				
ANR	1045566	CallExpression	"r_meta_set_string ( core -> anal , R_META_TYPE_VARTYPE , at , cmt )"		1045463	0					
ANR	1045567	Callee	r_meta_set_string		1045463	0					
ANR	1045568	Identifier	r_meta_set_string		1045463	0					
ANR	1045569	ArgumentList	core -> anal		1045463	1					
ANR	1045570	Argument	core -> anal		1045463	0					
ANR	1045571	PtrMemberAccess	core -> anal		1045463	0					
ANR	1045572	Identifier	core		1045463	0					
ANR	1045573	Identifier	anal		1045463	1					
ANR	1045574	Argument	R_META_TYPE_VARTYPE		1045463	1					
ANR	1045575	Identifier	R_META_TYPE_VARTYPE		1045463	0					
ANR	1045576	Argument	at		1045463	2					
ANR	1045577	Identifier	at		1045463	0					
ANR	1045578	Argument	cmt		1045463	3					
ANR	1045579	Identifier	cmt		1045463	0					
ANR	1045580	ReturnType	static void		1045463	1					
ANR	1045581	Identifier	set_offset_hint		1045463	2					
ANR	1045582	ParameterList	"RCore * core , RAnalOp op , const char * type , ut64 laddr , ut64 at , int offimm"		1045463	3					
ANR	1045583	Parameter	RCore * core	772:28:21244:21254	1045463	0	True				
ANR	1045584	ParameterType	RCore *		1045463	0					
ANR	1045585	Identifier	core		1045463	1					
ANR	1045586	Parameter	RAnalOp op	772:41:21257:21266	1045463	1	True				
ANR	1045587	ParameterType	RAnalOp		1045463	0					
ANR	1045588	Identifier	op		1045463	1					
ANR	1045589	Parameter	const char * type	772:53:21269:21284	1045463	2	True				
ANR	1045590	ParameterType	const char *		1045463	0					
ANR	1045591	Identifier	type		1045463	1					
ANR	1045592	Parameter	ut64 laddr	772:71:21287:21296	1045463	3	True				
ANR	1045593	ParameterType	ut64		1045463	0					
ANR	1045594	Identifier	laddr		1045463	1					
ANR	1045595	Parameter	ut64 at	772:83:21299:21305	1045463	4	True				
ANR	1045596	ParameterType	ut64		1045463	0					
ANR	1045597	Identifier	at		1045463	1					
ANR	1045598	Parameter	int offimm	772:92:21308:21317	1045463	5	True				
ANR	1045599	ParameterType	int		1045463	0					
ANR	1045600	Identifier	offimm		1045463	1					
ANR	1045601	CFGEntryNode	ENTRY		1045463		True				
ANR	1045602	CFGExitNode	EXIT		1045463		True				
ANR	1045603	Symbol	op		1045463						
ANR	1045604	Symbol	res		1045463						
ANR	1045605	Symbol	laddr		1045463						
ANR	1045606	Symbol	op . type		1045463						
ANR	1045607	Symbol	query		1045463						
ANR	1045608	Symbol	* core		1045463						
ANR	1045609	Symbol	r_anal_op_ismemref		1045463						
ANR	1045610	Symbol	core -> anal -> sdb_types		1045463						
ANR	1045611	Symbol	cmt		1045463						
ANR	1045612	Symbol	type		1045463						
ANR	1045613	Symbol	offimm		1045463						
ANR	1045614	Symbol	core -> anal		1045463						
ANR	1045615	Symbol	sdb_const_get		1045463						
ANR	1045616	Symbol	core		1045463						
ANR	1045617	Symbol	at		1045463						
ANR	1045618	Symbol	* core -> anal		1045463						
ANR	1045619	Symbol	R_META_TYPE_VARTYPE		1045463						
ANR	1045620	Symbol	* * core		1045463						
ANR	1045621	Symbol	r_type_get_struct_memb		1045463						
ANR	1045622	Function	r_core_get_stacksz	786:0:21799:22446							
ANR	1045623	FunctionDef	"r_core_get_stacksz (RCore * core , ut64 from , ut64 to)"		1045622	0					
ANR	1045624	CompoundStatement		786:63:21862:22446	1045622	0					
ANR	1045625	IdentifierDeclStatement	"int stack = 0 , maxstack = 0 ;"	787:1:21865:21892	1045622	0	True				
ANR	1045626	IdentifierDecl	stack = 0		1045622	0					
ANR	1045627	IdentifierDeclType	int		1045622	0					
ANR	1045628	Identifier	stack		1045622	1					
ANR	1045629	AssignmentExpression	stack = 0		1045622	2		=			
ANR	1045630	Identifier	stack		1045622	0					
ANR	1045631	PrimaryExpression	0		1045622	1					
ANR	1045632	IdentifierDecl	maxstack = 0		1045622	1					
ANR	1045633	IdentifierDeclType	int		1045622	0					
ANR	1045634	Identifier	maxstack		1045622	1					
ANR	1045635	AssignmentExpression	maxstack = 0		1045622	2		=			
ANR	1045636	Identifier	maxstack		1045622	0					
ANR	1045637	PrimaryExpression	0		1045622	1					
ANR	1045638	IdentifierDeclStatement	ut64 at = from ;	788:1:21895:21909	1045622	1	True				
ANR	1045639	IdentifierDecl	at = from		1045622	0					
ANR	1045640	IdentifierDeclType	ut64		1045622	0					
ANR	1045641	Identifier	at		1045622	1					
ANR	1045642	AssignmentExpression	at = from		1045622	2		=			
ANR	1045643	Identifier	from		1045622	0					
ANR	1045644	Identifier	from		1045622	1					
ANR	1045645	IfStatement	if ( from >= to )		1045622	2					
ANR	1045646	Condition	from >= to	790:5:21917:21926	1045622	0	True				
ANR	1045647	RelationalExpression	from >= to		1045622	0		>=			
ANR	1045648	Identifier	from		1045622	0					
ANR	1045649	Identifier	to		1045622	1					
ANR	1045650	CompoundStatement		5:17:66:66	1045622	1					
ANR	1045651	ReturnStatement	return 0 ;	791:2:21933:21941	1045622	0	True				
ANR	1045652	PrimaryExpression	0		1045622	0					
ANR	1045653	IdentifierDeclStatement	"const int mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE ) ;"	793:1:21947:22027	1045622	3	True				
ANR	1045654	IdentifierDecl	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1045622	0					
ANR	1045655	IdentifierDeclType	const int		1045622	0					
ANR	1045656	Identifier	mininstrsz		1045622	1					
ANR	1045657	AssignmentExpression	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1045622	2		=			
ANR	1045658	Identifier	mininstrsz		1045622	0					
ANR	1045659	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1045622	1					
ANR	1045660	Callee	r_anal_archinfo		1045622	0					
ANR	1045661	Identifier	r_anal_archinfo		1045622	0					
ANR	1045662	ArgumentList	core -> anal		1045622	1					
ANR	1045663	Argument	core -> anal		1045622	0					
ANR	1045664	PtrMemberAccess	core -> anal		1045622	0					
ANR	1045665	Identifier	core		1045622	0					
ANR	1045666	Identifier	anal		1045622	1					
ANR	1045667	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		1045622	1					
ANR	1045668	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		1045622	0					
ANR	1045669	IdentifierDeclStatement	"const int minopcode = R_MAX ( 1 , mininstrsz ) ;"	794:1:22030:22073	1045622	4	True				
ANR	1045670	IdentifierDecl	"minopcode = R_MAX ( 1 , mininstrsz )"		1045622	0					
ANR	1045671	IdentifierDeclType	const int		1045622	0					
ANR	1045672	Identifier	minopcode		1045622	1					
ANR	1045673	AssignmentExpression	"minopcode = R_MAX ( 1 , mininstrsz )"		1045622	2		=			
ANR	1045674	Identifier	minopcode		1045622	0					
ANR	1045675	CallExpression	"R_MAX ( 1 , mininstrsz )"		1045622	1					
ANR	1045676	Callee	R_MAX		1045622	0					
ANR	1045677	Identifier	R_MAX		1045622	0					
ANR	1045678	ArgumentList	1		1045622	1					
ANR	1045679	Argument	1		1045622	0					
ANR	1045680	PrimaryExpression	1		1045622	0					
ANR	1045681	Argument	mininstrsz		1045622	1					
ANR	1045682	Identifier	mininstrsz		1045622	0					
ANR	1045683	WhileStatement	while ( at < to )		1045622	5					
ANR	1045684	Condition	at < to	795:8:22083:22089	1045622	0	True				
ANR	1045685	RelationalExpression	at < to		1045622	0		<			
ANR	1045686	Identifier	at		1045622	0					
ANR	1045687	Identifier	to		1045622	1					
ANR	1045688	CompoundStatement		11:2:233:294	1045622	1					
ANR	1045689	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , at , R_ANAL_OP_MASK_BASIC ) ;"	796:2:22096:22157	1045622	0	True				
ANR	1045690	IdentifierDecl	"* op = r_core_anal_op ( core , at , R_ANAL_OP_MASK_BASIC )"		1045622	0					
ANR	1045691	IdentifierDeclType	RAnalOp *		1045622	0					
ANR	1045692	Identifier	op		1045622	1					
ANR	1045693	AssignmentExpression	"* op = r_core_anal_op ( core , at , R_ANAL_OP_MASK_BASIC )"		1045622	2		=			
ANR	1045694	Identifier	op		1045622	0					
ANR	1045695	CallExpression	"r_core_anal_op ( core , at , R_ANAL_OP_MASK_BASIC )"		1045622	1					
ANR	1045696	Callee	r_core_anal_op		1045622	0					
ANR	1045697	Identifier	r_core_anal_op		1045622	0					
ANR	1045698	ArgumentList	core		1045622	1					
ANR	1045699	Argument	core		1045622	0					
ANR	1045700	Identifier	core		1045622	0					
ANR	1045701	Argument	at		1045622	1					
ANR	1045702	Identifier	at		1045622	0					
ANR	1045703	Argument	R_ANAL_OP_MASK_BASIC		1045622	2					
ANR	1045704	Identifier	R_ANAL_OP_MASK_BASIC		1045622	0					
ANR	1045705	IfStatement	if ( ! op || op -> size <= 0 )		1045622	1					
ANR	1045706	Condition	! op || op -> size <= 0	797:6:22165:22184	1045622	0	True				
ANR	1045707	OrExpression	! op || op -> size <= 0		1045622	0		||			
ANR	1045708	UnaryOperationExpression	! op		1045622	0					
ANR	1045709	UnaryOperator	!		1045622	0					
ANR	1045710	Identifier	op		1045622	1					
ANR	1045711	RelationalExpression	op -> size <= 0		1045622	1		<=			
ANR	1045712	PtrMemberAccess	op -> size		1045622	0					
ANR	1045713	Identifier	op		1045622	0					
ANR	1045714	Identifier	size		1045622	1					
ANR	1045715	PrimaryExpression	0		1045622	1					
ANR	1045716	CompoundStatement		12:28:324:324	1045622	1					
ANR	1045717	ExpressionStatement	at += minopcode	798:3:22192:22207	1045622	0	True				
ANR	1045718	AssignmentExpression	at += minopcode		1045622	0		+=			
ANR	1045719	Identifier	at		1045622	0					
ANR	1045720	Identifier	minopcode		1045622	1					
ANR	1045721	ContinueStatement	continue ;	799:3:22212:22220	1045622	1	True				
ANR	1045722	IfStatement	if ( ( op -> stackop == R_ANAL_STACK_INC ) && R_ABS ( op -> stackptr ) < 8096 )		1045622	2					
ANR	1045723	Condition	( op -> stackop == R_ANAL_STACK_INC ) && R_ABS ( op -> stackptr ) < 8096	801:6:22232:22295	1045622	0	True				
ANR	1045724	AndExpression	( op -> stackop == R_ANAL_STACK_INC ) && R_ABS ( op -> stackptr ) < 8096		1045622	0		&&			
ANR	1045725	EqualityExpression	op -> stackop == R_ANAL_STACK_INC		1045622	0		==			
ANR	1045726	PtrMemberAccess	op -> stackop		1045622	0					
ANR	1045727	Identifier	op		1045622	0					
ANR	1045728	Identifier	stackop		1045622	1					
ANR	1045729	Identifier	R_ANAL_STACK_INC		1045622	1					
ANR	1045730	RelationalExpression	R_ABS ( op -> stackptr ) < 8096		1045622	1		<			
ANR	1045731	CallExpression	R_ABS ( op -> stackptr )		1045622	0					
ANR	1045732	Callee	R_ABS		1045622	0					
ANR	1045733	Identifier	R_ABS		1045622	0					
ANR	1045734	ArgumentList	op -> stackptr		1045622	1					
ANR	1045735	Argument	op -> stackptr		1045622	0					
ANR	1045736	PtrMemberAccess	op -> stackptr		1045622	0					
ANR	1045737	Identifier	op		1045622	0					
ANR	1045738	Identifier	stackptr		1045622	1					
ANR	1045739	PrimaryExpression	8096		1045622	1					
ANR	1045740	CompoundStatement		16:72:435:435	1045622	1					
ANR	1045741	ExpressionStatement	stack += op -> stackptr	802:3:22303:22324	1045622	0	True				
ANR	1045742	AssignmentExpression	stack += op -> stackptr		1045622	0		+=			
ANR	1045743	Identifier	stack		1045622	0					
ANR	1045744	PtrMemberAccess	op -> stackptr		1045622	1					
ANR	1045745	Identifier	op		1045622	0					
ANR	1045746	Identifier	stackptr		1045622	1					
ANR	1045747	IfStatement	if ( stack > maxstack )		1045622	1					
ANR	1045748	Condition	stack > maxstack	803:7:22333:22348	1045622	0	True				
ANR	1045749	RelationalExpression	stack > maxstack		1045622	0		>			
ANR	1045750	Identifier	stack		1045622	0					
ANR	1045751	Identifier	maxstack		1045622	1					
ANR	1045752	CompoundStatement		18:25:488:488	1045622	1					
ANR	1045753	ExpressionStatement	maxstack = stack	804:4:22357:22373	1045622	0	True				
ANR	1045754	AssignmentExpression	maxstack = stack		1045622	0		=			
ANR	1045755	Identifier	maxstack		1045622	0					
ANR	1045756	Identifier	stack		1045622	1					
ANR	1045757	ExpressionStatement	at += op -> size	807:2:22386:22400	1045622	3	True				
ANR	1045758	AssignmentExpression	at += op -> size		1045622	0		+=			
ANR	1045759	Identifier	at		1045622	0					
ANR	1045760	PtrMemberAccess	op -> size		1045622	1					
ANR	1045761	Identifier	op		1045622	0					
ANR	1045762	Identifier	size		1045622	1					
ANR	1045763	ExpressionStatement	r_anal_op_free ( op )	808:2:22404:22423	1045622	4	True				
ANR	1045764	CallExpression	r_anal_op_free ( op )		1045622	0					
ANR	1045765	Callee	r_anal_op_free		1045622	0					
ANR	1045766	Identifier	r_anal_op_free		1045622	0					
ANR	1045767	ArgumentList	op		1045622	1					
ANR	1045768	Argument	op		1045622	0					
ANR	1045769	Identifier	op		1045622	0					
ANR	1045770	ReturnStatement	return maxstack ;	810:1:22429:22444	1045622	6	True				
ANR	1045771	Identifier	maxstack		1045622	0					
ANR	1045772	ReturnType	R_API int		1045622	1					
ANR	1045773	Identifier	r_core_get_stacksz		1045622	2					
ANR	1045774	ParameterList	"RCore * core , ut64 from , ut64 to"		1045622	3					
ANR	1045775	Parameter	RCore * core	786:30:21829:21839	1045622	0	True				
ANR	1045776	ParameterType	RCore *		1045622	0					
ANR	1045777	Identifier	core		1045622	1					
ANR	1045778	Parameter	ut64 from	786:43:21842:21850	1045622	1	True				
ANR	1045779	ParameterType	ut64		1045622	0					
ANR	1045780	Identifier	from		1045622	1					
ANR	1045781	Parameter	ut64 to	786:54:21853:21859	1045622	2	True				
ANR	1045782	ParameterType	ut64		1045622	0					
ANR	1045783	Identifier	to		1045622	1					
ANR	1045784	CFGEntryNode	ENTRY		1045622		True				
ANR	1045785	CFGExitNode	EXIT		1045622		True				
ANR	1045786	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		1045622						
ANR	1045787	Symbol	op		1045622						
ANR	1045788	Symbol	R_ANAL_STACK_INC		1045622						
ANR	1045789	Symbol	stack		1045622						
ANR	1045790	Symbol	* op		1045622						
ANR	1045791	Symbol	mininstrsz		1045622						
ANR	1045792	Symbol	r_anal_archinfo		1045622						
ANR	1045793	Symbol	maxstack		1045622						
ANR	1045794	Symbol	* core		1045622						
ANR	1045795	Symbol	R_ABS		1045622						
ANR	1045796	Symbol	r_core_anal_op		1045622						
ANR	1045797	Symbol	core -> anal		1045622						
ANR	1045798	Symbol	R_ANAL_OP_MASK_BASIC		1045622						
ANR	1045799	Symbol	minopcode		1045622						
ANR	1045800	Symbol	core		1045622						
ANR	1045801	Symbol	at		1045622						
ANR	1045802	Symbol	op -> stackptr		1045622						
ANR	1045803	Symbol	R_MAX		1045622						
ANR	1045804	Symbol	from		1045622						
ANR	1045805	Symbol	op -> size		1045622						
ANR	1045806	Symbol	to		1045622						
ANR	1045807	Symbol	op -> stackop		1045622						
ANR	1045808	Function	set_retval	813:0:22449:23014							
ANR	1045809	FunctionDef	"set_retval (RCore * core , ut64 at)"		1045808	0					
ANR	1045810	CompoundStatement		813:46:22495:23014	1045808	0					
ANR	1045811	IdentifierDeclStatement	RAnal * anal = core -> anal ;	814:1:22498:22522	1045808	0	True				
ANR	1045812	IdentifierDecl	* anal = core -> anal		1045808	0					
ANR	1045813	IdentifierDeclType	RAnal *		1045808	0					
ANR	1045814	Identifier	anal		1045808	1					
ANR	1045815	AssignmentExpression	* anal = core -> anal		1045808	2		=			
ANR	1045816	Identifier	anal		1045808	0					
ANR	1045817	PtrMemberAccess	core -> anal		1045808	1					
ANR	1045818	Identifier	core		1045808	0					
ANR	1045819	Identifier	anal		1045808	1					
ANR	1045820	IdentifierDeclStatement	"RAnalHint * hint = r_anal_hint_get ( anal , at ) ;"	815:1:22525:22569	1045808	1	True				
ANR	1045821	IdentifierDecl	"* hint = r_anal_hint_get ( anal , at )"		1045808	0					
ANR	1045822	IdentifierDeclType	RAnalHint *		1045808	0					
ANR	1045823	Identifier	hint		1045808	1					
ANR	1045824	AssignmentExpression	"* hint = r_anal_hint_get ( anal , at )"		1045808	2		=			
ANR	1045825	Identifier	hint		1045808	0					
ANR	1045826	CallExpression	"r_anal_hint_get ( anal , at )"		1045808	1					
ANR	1045827	Callee	r_anal_hint_get		1045808	0					
ANR	1045828	Identifier	r_anal_hint_get		1045808	0					
ANR	1045829	ArgumentList	anal		1045808	1					
ANR	1045830	Argument	anal		1045808	0					
ANR	1045831	Identifier	anal		1045808	0					
ANR	1045832	Argument	at		1045808	1					
ANR	1045833	Identifier	at		1045808	0					
ANR	1045834	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( anal , at , 0 ) ;"	816:1:22572:22624	1045808	2	True				
ANR	1045835	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( anal , at , 0 )"		1045808	0					
ANR	1045836	IdentifierDeclType	RAnalFunction *		1045808	0					
ANR	1045837	Identifier	fcn		1045808	1					
ANR	1045838	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( anal , at , 0 )"		1045808	2		=			
ANR	1045839	Identifier	fcn		1045808	0					
ANR	1045840	CallExpression	"r_anal_get_fcn_in ( anal , at , 0 )"		1045808	1					
ANR	1045841	Callee	r_anal_get_fcn_in		1045808	0					
ANR	1045842	Identifier	r_anal_get_fcn_in		1045808	0					
ANR	1045843	ArgumentList	anal		1045808	1					
ANR	1045844	Argument	anal		1045808	0					
ANR	1045845	Identifier	anal		1045808	0					
ANR	1045846	Argument	at		1045808	1					
ANR	1045847	Identifier	at		1045808	0					
ANR	1045848	Argument	0		1045808	2					
ANR	1045849	PrimaryExpression	0		1045808	0					
ANR	1045850	IfStatement	if ( ! hint || ! fcn || ! fcn -> name )		1045808	3					
ANR	1045851	Condition	! hint || ! fcn || ! fcn -> name	818:5:22632:22658	1045808	0	True				
ANR	1045852	OrExpression	! hint || ! fcn || ! fcn -> name		1045808	0		||			
ANR	1045853	UnaryOperationExpression	! hint		1045808	0					
ANR	1045854	UnaryOperator	!		1045808	0					
ANR	1045855	Identifier	hint		1045808	1					
ANR	1045856	OrExpression	! fcn || ! fcn -> name		1045808	1		||			
ANR	1045857	UnaryOperationExpression	! fcn		1045808	0					
ANR	1045858	UnaryOperator	!		1045808	0					
ANR	1045859	Identifier	fcn		1045808	1					
ANR	1045860	UnaryOperationExpression	! fcn -> name		1045808	1					
ANR	1045861	UnaryOperator	!		1045808	0					
ANR	1045862	PtrMemberAccess	fcn -> name		1045808	1					
ANR	1045863	Identifier	fcn		1045808	0					
ANR	1045864	Identifier	name		1045808	1					
ANR	1045865	CompoundStatement		6:34:165:165	1045808	1					
ANR	1045866	GotoStatement	goto beach ;	819:2:22665:22675	1045808	0	True				
ANR	1045867	Identifier	beach		1045808	0					
ANR	1045868	IfStatement	if ( hint -> ret == UT64_MAX )		1045808	4					
ANR	1045869	Condition	hint -> ret == UT64_MAX	821:5:22685:22705	1045808	0	True				
ANR	1045870	EqualityExpression	hint -> ret == UT64_MAX		1045808	0		==			
ANR	1045871	PtrMemberAccess	hint -> ret		1045808	0					
ANR	1045872	Identifier	hint		1045808	0					
ANR	1045873	Identifier	ret		1045808	1					
ANR	1045874	Identifier	UT64_MAX		1045808	1					
ANR	1045875	CompoundStatement		9:28:212:212	1045808	1					
ANR	1045876	GotoStatement	goto beach ;	822:2:22712:22722	1045808	0	True				
ANR	1045877	Identifier	beach		1045808	0					
ANR	1045878	IdentifierDeclStatement	"const char * cc = r_anal_cc_func ( core -> anal , fcn -> name ) ;"	824:1:22728:22783	1045808	5	True				
ANR	1045879	IdentifierDecl	"* cc = r_anal_cc_func ( core -> anal , fcn -> name )"		1045808	0					
ANR	1045880	IdentifierDeclType	const char *		1045808	0					
ANR	1045881	Identifier	cc		1045808	1					
ANR	1045882	AssignmentExpression	"* cc = r_anal_cc_func ( core -> anal , fcn -> name )"		1045808	2		=			
ANR	1045883	Identifier	cc		1045808	0					
ANR	1045884	CallExpression	"r_anal_cc_func ( core -> anal , fcn -> name )"		1045808	1					
ANR	1045885	Callee	r_anal_cc_func		1045808	0					
ANR	1045886	Identifier	r_anal_cc_func		1045808	0					
ANR	1045887	ArgumentList	core -> anal		1045808	1					
ANR	1045888	Argument	core -> anal		1045808	0					
ANR	1045889	PtrMemberAccess	core -> anal		1045808	0					
ANR	1045890	Identifier	core		1045808	0					
ANR	1045891	Identifier	anal		1045808	1					
ANR	1045892	Argument	fcn -> name		1045808	1					
ANR	1045893	PtrMemberAccess	fcn -> name		1045808	0					
ANR	1045894	Identifier	fcn		1045808	0					
ANR	1045895	Identifier	name		1045808	1					
ANR	1045896	IdentifierDeclStatement	"const char * regname = r_anal_cc_ret ( anal , cc ) ;"	825:1:22786:22832	1045808	6	True				
ANR	1045897	IdentifierDecl	"* regname = r_anal_cc_ret ( anal , cc )"		1045808	0					
ANR	1045898	IdentifierDeclType	const char *		1045808	0					
ANR	1045899	Identifier	regname		1045808	1					
ANR	1045900	AssignmentExpression	"* regname = r_anal_cc_ret ( anal , cc )"		1045808	2		=			
ANR	1045901	Identifier	regname		1045808	0					
ANR	1045902	CallExpression	"r_anal_cc_ret ( anal , cc )"		1045808	1					
ANR	1045903	Callee	r_anal_cc_ret		1045808	0					
ANR	1045904	Identifier	r_anal_cc_ret		1045808	0					
ANR	1045905	ArgumentList	anal		1045808	1					
ANR	1045906	Argument	anal		1045808	0					
ANR	1045907	Identifier	anal		1045808	0					
ANR	1045908	Argument	cc		1045808	1					
ANR	1045909	Identifier	cc		1045808	0					
ANR	1045910	IfStatement	if ( regname )		1045808	7					
ANR	1045911	Condition	regname	826:5:22839:22845	1045808	0	True				
ANR	1045912	Identifier	regname		1045808	0					
ANR	1045913	CompoundStatement		15:2:356:406	1045808	1					
ANR	1045914	IdentifierDeclStatement	"RRegItem * reg = r_reg_get ( anal -> reg , regname , - 1 ) ;"	827:2:22852:22902	1045808	0	True				
ANR	1045915	IdentifierDecl	"* reg = r_reg_get ( anal -> reg , regname , - 1 )"		1045808	0					
ANR	1045916	IdentifierDeclType	RRegItem *		1045808	0					
ANR	1045917	Identifier	reg		1045808	1					
ANR	1045918	AssignmentExpression	"* reg = r_reg_get ( anal -> reg , regname , - 1 )"		1045808	2		=			
ANR	1045919	Identifier	reg		1045808	0					
ANR	1045920	CallExpression	"r_reg_get ( anal -> reg , regname , - 1 )"		1045808	1					
ANR	1045921	Callee	r_reg_get		1045808	0					
ANR	1045922	Identifier	r_reg_get		1045808	0					
ANR	1045923	ArgumentList	anal -> reg		1045808	1					
ANR	1045924	Argument	anal -> reg		1045808	0					
ANR	1045925	PtrMemberAccess	anal -> reg		1045808	0					
ANR	1045926	Identifier	anal		1045808	0					
ANR	1045927	Identifier	reg		1045808	1					
ANR	1045928	Argument	regname		1045808	1					
ANR	1045929	Identifier	regname		1045808	0					
ANR	1045930	Argument	- 1		1045808	2					
ANR	1045931	UnaryOperationExpression	- 1		1045808	0					
ANR	1045932	UnaryOperator	-		1045808	0					
ANR	1045933	PrimaryExpression	1		1045808	1					
ANR	1045934	IfStatement	if ( reg )		1045808	1					
ANR	1045935	Condition	reg	828:6:22910:22912	1045808	0	True				
ANR	1045936	Identifier	reg		1045808	0					
ANR	1045937	CompoundStatement		16:11:419:419	1045808	1					
ANR	1045938	ExpressionStatement	"r_reg_set_value ( anal -> reg , reg , hint -> ret )"	829:3:22920:22963	1045808	0	True				
ANR	1045939	CallExpression	"r_reg_set_value ( anal -> reg , reg , hint -> ret )"		1045808	0					
ANR	1045940	Callee	r_reg_set_value		1045808	0					
ANR	1045941	Identifier	r_reg_set_value		1045808	0					
ANR	1045942	ArgumentList	anal -> reg		1045808	1					
ANR	1045943	Argument	anal -> reg		1045808	0					
ANR	1045944	PtrMemberAccess	anal -> reg		1045808	0					
ANR	1045945	Identifier	anal		1045808	0					
ANR	1045946	Identifier	reg		1045808	1					
ANR	1045947	Argument	reg		1045808	1					
ANR	1045948	Identifier	reg		1045808	0					
ANR	1045949	Argument	hint -> ret		1045808	2					
ANR	1045950	PtrMemberAccess	hint -> ret		1045808	0					
ANR	1045951	Identifier	hint		1045808	0					
ANR	1045952	Identifier	ret		1045808	1					
ANR	1045953	Label	beach :	832:0:22972:22977	1045808	8	True				
ANR	1045954	Identifier	beach		1045808	0					
ANR	1045955	ExpressionStatement	r_anal_hint_free ( hint )	833:1:22980:23003	1045808	9	True				
ANR	1045956	CallExpression	r_anal_hint_free ( hint )		1045808	0					
ANR	1045957	Callee	r_anal_hint_free		1045808	0					
ANR	1045958	Identifier	r_anal_hint_free		1045808	0					
ANR	1045959	ArgumentList	hint		1045808	1					
ANR	1045960	Argument	hint		1045808	0					
ANR	1045961	Identifier	hint		1045808	0					
ANR	1045962	ReturnStatement	return ;	834:1:23006:23012	1045808	10	True				
ANR	1045963	ReturnType	static void		1045808	1					
ANR	1045964	Identifier	set_retval		1045808	2					
ANR	1045965	ParameterList	"RCore * core , ut64 at"		1045808	3					
ANR	1045966	Parameter	RCore * core	813:24:22473:22483	1045808	0	True				
ANR	1045967	ParameterType	RCore *		1045808	0					
ANR	1045968	Identifier	core		1045808	1					
ANR	1045969	Parameter	ut64 at	813:37:22486:22492	1045808	1	True				
ANR	1045970	ParameterType	ut64		1045808	0					
ANR	1045971	Identifier	at		1045808	1					
ANR	1045972	CFGEntryNode	ENTRY		1045808		True				
ANR	1045973	CFGExitNode	EXIT		1045808		True				
ANR	1045974	Symbol	cc		1045808						
ANR	1045975	Symbol	regname		1045808						
ANR	1045976	Symbol	* hint		1045808						
ANR	1045977	Symbol	anal -> reg		1045808						
ANR	1045978	Symbol	* fcn		1045808						
ANR	1045979	Symbol	fcn -> name		1045808						
ANR	1045980	Symbol	* core		1045808						
ANR	1045981	Symbol	hint -> ret		1045808						
ANR	1045982	Symbol	r_anal_hint_get		1045808						
ANR	1045983	Symbol	core -> anal		1045808						
ANR	1045984	Symbol	fcn		1045808						
ANR	1045985	Symbol	core		1045808						
ANR	1045986	Symbol	* anal		1045808						
ANR	1045987	Symbol	at		1045808						
ANR	1045988	Symbol	r_anal_get_fcn_in		1045808						
ANR	1045989	Symbol	r_anal_cc_func		1045808						
ANR	1045990	Symbol	r_anal_cc_ret		1045808						
ANR	1045991	Symbol	anal		1045808						
ANR	1045992	Symbol	reg		1045808						
ANR	1045993	Symbol	hint		1045808						
ANR	1045994	Symbol	UT64_MAX		1045808						
ANR	1045995	Symbol	r_reg_get		1045808						
ANR	1045996	Function	link_struct_offset	837:0:23017:27839							
ANR	1045997	FunctionDef	"link_struct_offset (RCore * core , RAnalFunction * fcn)"		1045996	0					
ANR	1045998	CompoundStatement		837:64:23081:27839	1045996	0					
ANR	1045999	IdentifierDeclStatement	RAnalBlock * bb ;	838:1:23084:23098	1045996	0	True				
ANR	1046000	IdentifierDecl	* bb		1045996	0					
ANR	1046001	IdentifierDeclType	RAnalBlock *		1045996	0					
ANR	1046002	Identifier	bb		1045996	1					
ANR	1046003	IdentifierDeclStatement	RListIter * it ;	839:1:23101:23114	1045996	1	True				
ANR	1046004	IdentifierDecl	* it		1045996	0					
ANR	1046005	IdentifierDeclType	RListIter *		1045996	0					
ANR	1046006	Identifier	it		1045996	1					
ANR	1046007	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	840:1:23117:23134	1045996	2	True				
ANR	1046008	IdentifierDecl	aop = { 0 }		1045996	0					
ANR	1046009	IdentifierDeclType	RAnalOp		1045996	0					
ANR	1046010	Identifier	aop		1045996	1					
ANR	1046011	AssignmentExpression	aop = { 0 }		1045996	2		=			
ANR	1046012	Identifier	aop		1045996	0					
ANR	1046013	InitializerList	0		1045996	1					
ANR	1046014	PrimaryExpression	0		1045996	0					
ANR	1046015	IdentifierDeclStatement	"bool ioCache = r_config_get_i ( core -> config , ""io.cache"" ) ;"	841:1:23137:23193	1045996	3	True				
ANR	1046016	IdentifierDecl	"ioCache = r_config_get_i ( core -> config , ""io.cache"" )"		1045996	0					
ANR	1046017	IdentifierDeclType	bool		1045996	0					
ANR	1046018	Identifier	ioCache		1045996	1					
ANR	1046019	AssignmentExpression	"ioCache = r_config_get_i ( core -> config , ""io.cache"" )"		1045996	2		=			
ANR	1046020	Identifier	ioCache		1045996	0					
ANR	1046021	CallExpression	"r_config_get_i ( core -> config , ""io.cache"" )"		1045996	1					
ANR	1046022	Callee	r_config_get_i		1045996	0					
ANR	1046023	Identifier	r_config_get_i		1045996	0					
ANR	1046024	ArgumentList	core -> config		1045996	1					
ANR	1046025	Argument	core -> config		1045996	0					
ANR	1046026	PtrMemberAccess	core -> config		1045996	0					
ANR	1046027	Identifier	core		1045996	0					
ANR	1046028	Identifier	config		1045996	1					
ANR	1046029	Argument	"""io.cache"""		1045996	1					
ANR	1046030	PrimaryExpression	"""io.cache"""		1045996	0					
ANR	1046031	IdentifierDeclStatement	bool stack_set = false ;	842:1:23196:23218	1045996	4	True				
ANR	1046032	IdentifierDecl	stack_set = false		1045996	0					
ANR	1046033	IdentifierDeclType	bool		1045996	0					
ANR	1046034	Identifier	stack_set		1045996	1					
ANR	1046035	AssignmentExpression	stack_set = false		1045996	2		=			
ANR	1046036	Identifier	false		1045996	0					
ANR	1046037	Identifier	false		1045996	1					
ANR	1046038	IdentifierDeclStatement	bool resolved = false ;	843:1:23221:23242	1045996	5	True				
ANR	1046039	IdentifierDecl	resolved = false		1045996	0					
ANR	1046040	IdentifierDeclType	bool		1045996	0					
ANR	1046041	Identifier	resolved		1045996	1					
ANR	1046042	AssignmentExpression	resolved = false		1045996	2		=			
ANR	1046043	Identifier	false		1045996	0					
ANR	1046044	Identifier	false		1045996	1					
ANR	1046045	IdentifierDeclStatement	const char * varpfx ;	844:1:23245:23263	1045996	6	True				
ANR	1046046	IdentifierDecl	* varpfx		1045996	0					
ANR	1046047	IdentifierDeclType	const char *		1045996	0					
ANR	1046048	Identifier	varpfx		1045996	1					
ANR	1046049	IdentifierDeclStatement	"int dbg_follow = r_config_get_i ( core -> config , ""dbg.follow"" ) ;"	845:1:23266:23326	1045996	7	True				
ANR	1046050	IdentifierDecl	"dbg_follow = r_config_get_i ( core -> config , ""dbg.follow"" )"		1045996	0					
ANR	1046051	IdentifierDeclType	int		1045996	0					
ANR	1046052	Identifier	dbg_follow		1045996	1					
ANR	1046053	AssignmentExpression	"dbg_follow = r_config_get_i ( core -> config , ""dbg.follow"" )"		1045996	2		=			
ANR	1046054	Identifier	dbg_follow		1045996	0					
ANR	1046055	CallExpression	"r_config_get_i ( core -> config , ""dbg.follow"" )"		1045996	1					
ANR	1046056	Callee	r_config_get_i		1045996	0					
ANR	1046057	Identifier	r_config_get_i		1045996	0					
ANR	1046058	ArgumentList	core -> config		1045996	1					
ANR	1046059	Argument	core -> config		1045996	0					
ANR	1046060	PtrMemberAccess	core -> config		1045996	0					
ANR	1046061	Identifier	core		1045996	0					
ANR	1046062	Identifier	config		1045996	1					
ANR	1046063	Argument	"""dbg.follow"""		1045996	1					
ANR	1046064	PrimaryExpression	"""dbg.follow"""		1045996	0					
ANR	1046065	IdentifierDeclStatement	Sdb * TDB = core -> anal -> sdb_types ;	846:1:23329:23361	1045996	8	True				
ANR	1046066	IdentifierDecl	* TDB = core -> anal -> sdb_types		1045996	0					
ANR	1046067	IdentifierDeclType	Sdb *		1045996	0					
ANR	1046068	Identifier	TDB		1045996	1					
ANR	1046069	AssignmentExpression	* TDB = core -> anal -> sdb_types		1045996	2		=			
ANR	1046070	Identifier	TDB		1045996	0					
ANR	1046071	PtrMemberAccess	core -> anal -> sdb_types		1045996	1					
ANR	1046072	PtrMemberAccess	core -> anal		1045996	0					
ANR	1046073	Identifier	core		1045996	0					
ANR	1046074	Identifier	anal		1045996	1					
ANR	1046075	Identifier	sdb_types		1045996	1					
ANR	1046076	IdentifierDeclStatement	RAnalEsil * esil ;	847:1:23364:23379	1045996	9	True				
ANR	1046077	IdentifierDecl	* esil		1045996	0					
ANR	1046078	IdentifierDeclType	RAnalEsil *		1045996	0					
ANR	1046079	Identifier	esil		1045996	1					
ANR	1046080	IdentifierDeclStatement	"int iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	848:1:23382:23439	1045996	10	True				
ANR	1046081	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		1045996	0					
ANR	1046082	IdentifierDeclType	int		1045996	0					
ANR	1046083	Identifier	iotrap		1045996	1					
ANR	1046084	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		1045996	2		=			
ANR	1046085	Identifier	iotrap		1045996	0					
ANR	1046086	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		1045996	1					
ANR	1046087	Callee	r_config_get_i		1045996	0					
ANR	1046088	Identifier	r_config_get_i		1045996	0					
ANR	1046089	ArgumentList	core -> config		1045996	1					
ANR	1046090	Argument	core -> config		1045996	0					
ANR	1046091	PtrMemberAccess	core -> config		1045996	0					
ANR	1046092	Identifier	core		1045996	0					
ANR	1046093	Identifier	config		1045996	1					
ANR	1046094	Argument	"""esil.iotrap"""		1045996	1					
ANR	1046095	PrimaryExpression	"""esil.iotrap"""		1045996	0					
ANR	1046096	IdentifierDeclStatement	"int stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" ) ;"	849:1:23442:23507	1045996	11	True				
ANR	1046097	IdentifierDecl	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		1045996	0					
ANR	1046098	IdentifierDeclType	int		1045996	0					
ANR	1046099	Identifier	stacksize		1045996	1					
ANR	1046100	AssignmentExpression	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		1045996	2		=			
ANR	1046101	Identifier	stacksize		1045996	0					
ANR	1046102	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.depth"" )"		1045996	1					
ANR	1046103	Callee	r_config_get_i		1045996	0					
ANR	1046104	Identifier	r_config_get_i		1045996	0					
ANR	1046105	ArgumentList	core -> config		1045996	1					
ANR	1046106	Argument	core -> config		1045996	0					
ANR	1046107	PtrMemberAccess	core -> config		1045996	0					
ANR	1046108	Identifier	core		1045996	0					
ANR	1046109	Identifier	config		1045996	1					
ANR	1046110	Argument	"""esil.stack.depth"""		1045996	1					
ANR	1046111	PrimaryExpression	"""esil.stack.depth"""		1045996	0					
ANR	1046112	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	850:1:23510:23581	1045996	12	True				
ANR	1046113	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		1045996	0					
ANR	1046114	IdentifierDeclType	unsigned int		1045996	0					
ANR	1046115	Identifier	addrsize		1045996	1					
ANR	1046116	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		1045996	2		=			
ANR	1046117	Identifier	addrsize		1045996	0					
ANR	1046118	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		1045996	1					
ANR	1046119	Callee	r_config_get_i		1045996	0					
ANR	1046120	Identifier	r_config_get_i		1045996	0					
ANR	1046121	ArgumentList	core -> config		1045996	1					
ANR	1046122	Argument	core -> config		1045996	0					
ANR	1046123	PtrMemberAccess	core -> config		1045996	0					
ANR	1046124	Identifier	core		1045996	0					
ANR	1046125	Identifier	config		1045996	1					
ANR	1046126	Argument	"""esil.addr.size"""		1045996	1					
ANR	1046127	PrimaryExpression	"""esil.addr.size"""		1045996	0					
ANR	1046128	IdentifierDeclStatement	"const char * pc_name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	851:1:23584:23653	1045996	13	True				
ANR	1046129	IdentifierDecl	"* pc_name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		1045996	0					
ANR	1046130	IdentifierDeclType	const char *		1045996	0					
ANR	1046131	Identifier	pc_name		1045996	1					
ANR	1046132	AssignmentExpression	"* pc_name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		1045996	2		=			
ANR	1046133	Identifier	pc_name		1045996	0					
ANR	1046134	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		1045996	1					
ANR	1046135	Callee	r_reg_get_name		1045996	0					
ANR	1046136	Identifier	r_reg_get_name		1045996	0					
ANR	1046137	ArgumentList	core -> anal -> reg		1045996	1					
ANR	1046138	Argument	core -> anal -> reg		1045996	0					
ANR	1046139	PtrMemberAccess	core -> anal -> reg		1045996	0					
ANR	1046140	PtrMemberAccess	core -> anal		1045996	0					
ANR	1046141	Identifier	core		1045996	0					
ANR	1046142	Identifier	anal		1045996	1					
ANR	1046143	Identifier	reg		1045996	1					
ANR	1046144	Argument	R_REG_NAME_PC		1045996	1					
ANR	1046145	Identifier	R_REG_NAME_PC		1045996	0					
ANR	1046146	IdentifierDeclStatement	"const char * sp_name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP ) ;"	852:1:23656:23725	1045996	14	True				
ANR	1046147	IdentifierDecl	"* sp_name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		1045996	0					
ANR	1046148	IdentifierDeclType	const char *		1045996	0					
ANR	1046149	Identifier	sp_name		1045996	1					
ANR	1046150	AssignmentExpression	"* sp_name = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		1045996	2		=			
ANR	1046151	Identifier	sp_name		1045996	0					
ANR	1046152	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		1045996	1					
ANR	1046153	Callee	r_reg_get_name		1045996	0					
ANR	1046154	Identifier	r_reg_get_name		1045996	0					
ANR	1046155	ArgumentList	core -> anal -> reg		1045996	1					
ANR	1046156	Argument	core -> anal -> reg		1045996	0					
ANR	1046157	PtrMemberAccess	core -> anal -> reg		1045996	0					
ANR	1046158	PtrMemberAccess	core -> anal		1045996	0					
ANR	1046159	Identifier	core		1045996	0					
ANR	1046160	Identifier	anal		1045996	1					
ANR	1046161	Identifier	reg		1045996	1					
ANR	1046162	Argument	R_REG_NAME_SP		1045996	1					
ANR	1046163	Identifier	R_REG_NAME_SP		1045996	0					
ANR	1046164	IdentifierDeclStatement	"RRegItem * pc = r_reg_get ( core -> anal -> reg , pc_name , - 1 ) ;"	853:1:23728:23783	1045996	15	True				
ANR	1046165	IdentifierDecl	"* pc = r_reg_get ( core -> anal -> reg , pc_name , - 1 )"		1045996	0					
ANR	1046166	IdentifierDeclType	RRegItem *		1045996	0					
ANR	1046167	Identifier	pc		1045996	1					
ANR	1046168	AssignmentExpression	"* pc = r_reg_get ( core -> anal -> reg , pc_name , - 1 )"		1045996	2		=			
ANR	1046169	Identifier	pc		1045996	0					
ANR	1046170	CallExpression	"r_reg_get ( core -> anal -> reg , pc_name , - 1 )"		1045996	1					
ANR	1046171	Callee	r_reg_get		1045996	0					
ANR	1046172	Identifier	r_reg_get		1045996	0					
ANR	1046173	ArgumentList	core -> anal -> reg		1045996	1					
ANR	1046174	Argument	core -> anal -> reg		1045996	0					
ANR	1046175	PtrMemberAccess	core -> anal -> reg		1045996	0					
ANR	1046176	PtrMemberAccess	core -> anal		1045996	0					
ANR	1046177	Identifier	core		1045996	0					
ANR	1046178	Identifier	anal		1045996	1					
ANR	1046179	Identifier	reg		1045996	1					
ANR	1046180	Argument	pc_name		1045996	1					
ANR	1046181	Identifier	pc_name		1045996	0					
ANR	1046182	Argument	- 1		1045996	2					
ANR	1046183	UnaryOperationExpression	- 1		1045996	0					
ANR	1046184	UnaryOperator	-		1045996	0					
ANR	1046185	PrimaryExpression	1		1045996	1					
ANR	1046186	IfStatement	if ( ! fcn )		1045996	16					
ANR	1046187	Condition	! fcn	855:5:23791:23794	1045996	0	True				
ANR	1046188	UnaryOperationExpression	! fcn		1045996	0					
ANR	1046189	UnaryOperator	!		1045996	0					
ANR	1046190	Identifier	fcn		1045996	1					
ANR	1046191	CompoundStatement		19:11:715:715	1045996	1					
ANR	1046192	ReturnStatement	return ;	856:2:23801:23807	1045996	0	True				
ANR	1046193	IfStatement	"if ( ! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) ) )"		1045996	17					
ANR	1046194	Condition	"! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"	858:5:23817:23871	1045996	0	True				
ANR	1046195	UnaryOperationExpression	"! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"		1045996	0					
ANR	1046196	UnaryOperator	!		1045996	0					
ANR	1046197	AssignmentExpression	"esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		1045996	1		=			
ANR	1046198	Identifier	esil		1045996	0					
ANR	1046199	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		1045996	1					
ANR	1046200	Callee	r_anal_esil_new		1045996	0					
ANR	1046201	Identifier	r_anal_esil_new		1045996	0					
ANR	1046202	ArgumentList	stacksize		1045996	1					
ANR	1046203	Argument	stacksize		1045996	0					
ANR	1046204	Identifier	stacksize		1045996	0					
ANR	1046205	Argument	iotrap		1045996	1					
ANR	1046206	Identifier	iotrap		1045996	0					
ANR	1046207	Argument	addrsize		1045996	2					
ANR	1046208	Identifier	addrsize		1045996	0					
ANR	1046209	CompoundStatement		22:62:792:792	1045996	1					
ANR	1046210	ReturnStatement	return ;	859:2:23878:23884	1045996	0	True				
ANR	1046211	ExpressionStatement	"r_anal_esil_setup ( esil , core -> anal , 0 , 0 , 0 )"	861:1:23890:23935	1045996	18	True				
ANR	1046212	CallExpression	"r_anal_esil_setup ( esil , core -> anal , 0 , 0 , 0 )"		1045996	0					
ANR	1046213	Callee	r_anal_esil_setup		1045996	0					
ANR	1046214	Identifier	r_anal_esil_setup		1045996	0					
ANR	1046215	ArgumentList	esil		1045996	1					
ANR	1046216	Argument	esil		1045996	0					
ANR	1046217	Identifier	esil		1045996	0					
ANR	1046218	Argument	core -> anal		1045996	1					
ANR	1046219	PtrMemberAccess	core -> anal		1045996	0					
ANR	1046220	Identifier	core		1045996	0					
ANR	1046221	Identifier	anal		1045996	1					
ANR	1046222	Argument	0		1045996	2					
ANR	1046223	PrimaryExpression	0		1045996	0					
ANR	1046224	Argument	0		1045996	3					
ANR	1046225	PrimaryExpression	0		1045996	0					
ANR	1046226	Argument	0		1045996	4					
ANR	1046227	PrimaryExpression	0		1045996	0					
ANR	1046228	IdentifierDeclStatement	"int i , ret , bsize = R_MAX ( 64 , core -> blocksize ) ;"	862:1:23938:23985	1045996	19	True				
ANR	1046229	IdentifierDecl	i		1045996	0					
ANR	1046230	IdentifierDeclType	int		1045996	0					
ANR	1046231	Identifier	i		1045996	1					
ANR	1046232	IdentifierDecl	ret		1045996	1					
ANR	1046233	IdentifierDeclType	int		1045996	0					
ANR	1046234	Identifier	ret		1045996	1					
ANR	1046235	IdentifierDecl	"bsize = R_MAX ( 64 , core -> blocksize )"		1045996	2					
ANR	1046236	IdentifierDeclType	int		1045996	0					
ANR	1046237	Identifier	bsize		1045996	1					
ANR	1046238	AssignmentExpression	"bsize = R_MAX ( 64 , core -> blocksize )"		1045996	2		=			
ANR	1046239	Identifier	bsize		1045996	0					
ANR	1046240	CallExpression	"R_MAX ( 64 , core -> blocksize )"		1045996	1					
ANR	1046241	Callee	R_MAX		1045996	0					
ANR	1046242	Identifier	R_MAX		1045996	0					
ANR	1046243	ArgumentList	64		1045996	1					
ANR	1046244	Argument	64		1045996	0					
ANR	1046245	PrimaryExpression	64		1045996	0					
ANR	1046246	Argument	core -> blocksize		1045996	1					
ANR	1046247	PtrMemberAccess	core -> blocksize		1045996	0					
ANR	1046248	Identifier	core		1045996	0					
ANR	1046249	Identifier	blocksize		1045996	1					
ANR	1046250	IdentifierDeclStatement	"const int mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE ) ;"	863:1:23988:24068	1045996	20	True				
ANR	1046251	IdentifierDecl	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1045996	0					
ANR	1046252	IdentifierDeclType	const int		1045996	0					
ANR	1046253	Identifier	mininstrsz		1045996	1					
ANR	1046254	AssignmentExpression	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1045996	2		=			
ANR	1046255	Identifier	mininstrsz		1045996	0					
ANR	1046256	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1045996	1					
ANR	1046257	Callee	r_anal_archinfo		1045996	0					
ANR	1046258	Identifier	r_anal_archinfo		1045996	0					
ANR	1046259	ArgumentList	core -> anal		1045996	1					
ANR	1046260	Argument	core -> anal		1045996	0					
ANR	1046261	PtrMemberAccess	core -> anal		1045996	0					
ANR	1046262	Identifier	core		1045996	0					
ANR	1046263	Identifier	anal		1045996	1					
ANR	1046264	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		1045996	1					
ANR	1046265	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		1045996	0					
ANR	1046266	IdentifierDeclStatement	"const int minopcode = R_MAX ( 1 , mininstrsz ) ;"	864:1:24071:24114	1045996	21	True				
ANR	1046267	IdentifierDecl	"minopcode = R_MAX ( 1 , mininstrsz )"		1045996	0					
ANR	1046268	IdentifierDeclType	const int		1045996	0					
ANR	1046269	Identifier	minopcode		1045996	1					
ANR	1046270	AssignmentExpression	"minopcode = R_MAX ( 1 , mininstrsz )"		1045996	2		=			
ANR	1046271	Identifier	minopcode		1045996	0					
ANR	1046272	CallExpression	"R_MAX ( 1 , mininstrsz )"		1045996	1					
ANR	1046273	Callee	R_MAX		1045996	0					
ANR	1046274	Identifier	R_MAX		1045996	0					
ANR	1046275	ArgumentList	1		1045996	1					
ANR	1046276	Argument	1		1045996	0					
ANR	1046277	PrimaryExpression	1		1045996	0					
ANR	1046278	Argument	mininstrsz		1045996	1					
ANR	1046279	Identifier	mininstrsz		1045996	0					
ANR	1046280	IdentifierDeclStatement	ut8 * buf = malloc ( bsize ) ;	865:1:24117:24142	1045996	22	True				
ANR	1046281	IdentifierDecl	* buf = malloc ( bsize )		1045996	0					
ANR	1046282	IdentifierDeclType	ut8 *		1045996	0					
ANR	1046283	Identifier	buf		1045996	1					
ANR	1046284	AssignmentExpression	* buf = malloc ( bsize )		1045996	2		=			
ANR	1046285	Identifier	buf		1045996	0					
ANR	1046286	CallExpression	malloc ( bsize )		1045996	1					
ANR	1046287	Callee	malloc		1045996	0					
ANR	1046288	Identifier	malloc		1045996	0					
ANR	1046289	ArgumentList	bsize		1045996	1					
ANR	1046290	Argument	bsize		1045996	0					
ANR	1046291	Identifier	bsize		1045996	0					
ANR	1046292	IfStatement	if ( ! buf )		1045996	23					
ANR	1046293	Condition	! buf	866:5:24149:24152	1045996	0	True				
ANR	1046294	UnaryOperationExpression	! buf		1045996	0					
ANR	1046295	UnaryOperator	!		1045996	0					
ANR	1046296	Identifier	buf		1045996	1					
ANR	1046297	CompoundStatement		30:11:1073:1073	1045996	1					
ANR	1046298	ExpressionStatement	free ( buf )	867:2:24159:24169	1045996	0	True				
ANR	1046299	CallExpression	free ( buf )		1045996	0					
ANR	1046300	Callee	free		1045996	0					
ANR	1046301	Identifier	free		1045996	0					
ANR	1046302	ArgumentList	buf		1045996	1					
ANR	1046303	Argument	buf		1045996	0					
ANR	1046304	Identifier	buf		1045996	0					
ANR	1046305	ExpressionStatement	r_anal_esil_free ( esil )	868:2:24173:24196	1045996	1	True				
ANR	1046306	CallExpression	r_anal_esil_free ( esil )		1045996	0					
ANR	1046307	Callee	r_anal_esil_free		1045996	0					
ANR	1046308	Identifier	r_anal_esil_free		1045996	0					
ANR	1046309	ArgumentList	esil		1045996	1					
ANR	1046310	Argument	esil		1045996	0					
ANR	1046311	Identifier	esil		1045996	0					
ANR	1046312	ReturnStatement	return ;	869:2:24200:24206	1045996	2	True				
ANR	1046313	ExpressionStatement	r_reg_arena_push ( core -> anal -> reg )	871:1:24212:24246	1045996	24	True				
ANR	1046314	CallExpression	r_reg_arena_push ( core -> anal -> reg )		1045996	0					
ANR	1046315	Callee	r_reg_arena_push		1045996	0					
ANR	1046316	Identifier	r_reg_arena_push		1045996	0					
ANR	1046317	ArgumentList	core -> anal -> reg		1045996	1					
ANR	1046318	Argument	core -> anal -> reg		1045996	0					
ANR	1046319	PtrMemberAccess	core -> anal -> reg		1045996	0					
ANR	1046320	PtrMemberAccess	core -> anal		1045996	0					
ANR	1046321	Identifier	core		1045996	0					
ANR	1046322	Identifier	anal		1045996	1					
ANR	1046323	Identifier	reg		1045996	1					
ANR	1046324	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"	872:1:24249:24299	1045996	25	True				
ANR	1046325	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"		1045996	0					
ANR	1046326	Callee	r_debug_reg_sync		1045996	0					
ANR	1046327	Identifier	r_debug_reg_sync		1045996	0					
ANR	1046328	ArgumentList	core -> dbg		1045996	1					
ANR	1046329	Argument	core -> dbg		1045996	0					
ANR	1046330	PtrMemberAccess	core -> dbg		1045996	0					
ANR	1046331	Identifier	core		1045996	0					
ANR	1046332	Identifier	dbg		1045996	1					
ANR	1046333	Argument	R_REG_TYPE_ALL		1045996	1					
ANR	1046334	Identifier	R_REG_TYPE_ALL		1045996	0					
ANR	1046335	Argument	true		1045996	2					
ANR	1046336	Identifier	true		1045996	0					
ANR	1046337	IdentifierDeclStatement	"ut64 spval = r_reg_getv ( esil -> anal -> reg , sp_name ) ;"	873:1:24302:24352	1045996	26	True				
ANR	1046338	IdentifierDecl	"spval = r_reg_getv ( esil -> anal -> reg , sp_name )"		1045996	0					
ANR	1046339	IdentifierDeclType	ut64		1045996	0					
ANR	1046340	Identifier	spval		1045996	1					
ANR	1046341	AssignmentExpression	"spval = r_reg_getv ( esil -> anal -> reg , sp_name )"		1045996	2		=			
ANR	1046342	Identifier	spval		1045996	0					
ANR	1046343	CallExpression	"r_reg_getv ( esil -> anal -> reg , sp_name )"		1045996	1					
ANR	1046344	Callee	r_reg_getv		1045996	0					
ANR	1046345	Identifier	r_reg_getv		1045996	0					
ANR	1046346	ArgumentList	esil -> anal -> reg		1045996	1					
ANR	1046347	Argument	esil -> anal -> reg		1045996	0					
ANR	1046348	PtrMemberAccess	esil -> anal -> reg		1045996	0					
ANR	1046349	PtrMemberAccess	esil -> anal		1045996	0					
ANR	1046350	Identifier	esil		1045996	0					
ANR	1046351	Identifier	anal		1045996	1					
ANR	1046352	Identifier	reg		1045996	1					
ANR	1046353	Argument	sp_name		1045996	1					
ANR	1046354	Identifier	sp_name		1045996	0					
ANR	1046355	IfStatement	if ( spval )		1045996	27					
ANR	1046356	Condition	spval	874:5:24359:24363	1045996	0	True				
ANR	1046357	Identifier	spval		1045996	0					
ANR	1046358	CompoundStatement		42:2:1443:1500	1045996	1					
ANR	1046359	IdentifierDeclStatement	"RRegItem * sp = r_reg_get ( esil -> anal -> reg , sp_name , - 1 ) ;"	876:2:24412:24467	1045996	0	True				
ANR	1046360	IdentifierDecl	"* sp = r_reg_get ( esil -> anal -> reg , sp_name , - 1 )"		1045996	0					
ANR	1046361	IdentifierDeclType	RRegItem *		1045996	0					
ANR	1046362	Identifier	sp		1045996	1					
ANR	1046363	AssignmentExpression	"* sp = r_reg_get ( esil -> anal -> reg , sp_name , - 1 )"		1045996	2		=			
ANR	1046364	Identifier	sp		1045996	0					
ANR	1046365	CallExpression	"r_reg_get ( esil -> anal -> reg , sp_name , - 1 )"		1045996	1					
ANR	1046366	Callee	r_reg_get		1045996	0					
ANR	1046367	Identifier	r_reg_get		1045996	0					
ANR	1046368	ArgumentList	esil -> anal -> reg		1045996	1					
ANR	1046369	Argument	esil -> anal -> reg		1045996	0					
ANR	1046370	PtrMemberAccess	esil -> anal -> reg		1045996	0					
ANR	1046371	PtrMemberAccess	esil -> anal		1045996	0					
ANR	1046372	Identifier	esil		1045996	0					
ANR	1046373	Identifier	anal		1045996	1					
ANR	1046374	Identifier	reg		1045996	1					
ANR	1046375	Argument	sp_name		1045996	1					
ANR	1046376	Identifier	sp_name		1045996	0					
ANR	1046377	Argument	- 1		1045996	2					
ANR	1046378	UnaryOperationExpression	- 1		1045996	0					
ANR	1046379	UnaryOperator	-		1045996	0					
ANR	1046380	PrimaryExpression	1		1045996	1					
ANR	1046381	IdentifierDeclStatement	"ut64 curpc = r_reg_getv ( esil -> anal -> reg , pc_name ) ;"	877:2:24471:24521	1045996	1	True				
ANR	1046382	IdentifierDecl	"curpc = r_reg_getv ( esil -> anal -> reg , pc_name )"		1045996	0					
ANR	1046383	IdentifierDeclType	ut64		1045996	0					
ANR	1046384	Identifier	curpc		1045996	1					
ANR	1046385	AssignmentExpression	"curpc = r_reg_getv ( esil -> anal -> reg , pc_name )"		1045996	2		=			
ANR	1046386	Identifier	curpc		1045996	0					
ANR	1046387	CallExpression	"r_reg_getv ( esil -> anal -> reg , pc_name )"		1045996	1					
ANR	1046388	Callee	r_reg_getv		1045996	0					
ANR	1046389	Identifier	r_reg_getv		1045996	0					
ANR	1046390	ArgumentList	esil -> anal -> reg		1045996	1					
ANR	1046391	Argument	esil -> anal -> reg		1045996	0					
ANR	1046392	PtrMemberAccess	esil -> anal -> reg		1045996	0					
ANR	1046393	PtrMemberAccess	esil -> anal		1045996	0					
ANR	1046394	Identifier	esil		1045996	0					
ANR	1046395	Identifier	anal		1045996	1					
ANR	1046396	Identifier	reg		1045996	1					
ANR	1046397	Argument	pc_name		1045996	1					
ANR	1046398	Identifier	pc_name		1045996	0					
ANR	1046399	IdentifierDeclStatement	"int stacksz = r_core_get_stacksz ( core , fcn -> addr , curpc ) ;"	878:2:24525:24582	1045996	2	True				
ANR	1046400	IdentifierDecl	"stacksz = r_core_get_stacksz ( core , fcn -> addr , curpc )"		1045996	0					
ANR	1046401	IdentifierDeclType	int		1045996	0					
ANR	1046402	Identifier	stacksz		1045996	1					
ANR	1046403	AssignmentExpression	"stacksz = r_core_get_stacksz ( core , fcn -> addr , curpc )"		1045996	2		=			
ANR	1046404	Identifier	stacksz		1045996	0					
ANR	1046405	CallExpression	"r_core_get_stacksz ( core , fcn -> addr , curpc )"		1045996	1					
ANR	1046406	Callee	r_core_get_stacksz		1045996	0					
ANR	1046407	Identifier	r_core_get_stacksz		1045996	0					
ANR	1046408	ArgumentList	core		1045996	1					
ANR	1046409	Argument	core		1045996	0					
ANR	1046410	Identifier	core		1045996	0					
ANR	1046411	Argument	fcn -> addr		1045996	1					
ANR	1046412	PtrMemberAccess	fcn -> addr		1045996	0					
ANR	1046413	Identifier	fcn		1045996	0					
ANR	1046414	Identifier	addr		1045996	1					
ANR	1046415	Argument	curpc		1045996	2					
ANR	1046416	Identifier	curpc		1045996	0					
ANR	1046417	IfStatement	if ( stacksz > 0 )		1045996	3					
ANR	1046418	Condition	stacksz > 0	879:6:24590:24600	1045996	0	True				
ANR	1046419	RelationalExpression	stacksz > 0		1045996	0		>			
ANR	1046420	Identifier	stacksz		1045996	0					
ANR	1046421	PrimaryExpression	0		1045996	1					
ANR	1046422	CompoundStatement		43:19:1521:1521	1045996	1					
ANR	1046423	ExpressionStatement	r_reg_arena_zero ( esil -> anal -> reg )	880:3:24608:24642	1045996	0	True				
ANR	1046424	CallExpression	r_reg_arena_zero ( esil -> anal -> reg )		1045996	0					
ANR	1046425	Callee	r_reg_arena_zero		1045996	0					
ANR	1046426	Identifier	r_reg_arena_zero		1045996	0					
ANR	1046427	ArgumentList	esil -> anal -> reg		1045996	1					
ANR	1046428	Argument	esil -> anal -> reg		1045996	0					
ANR	1046429	PtrMemberAccess	esil -> anal -> reg		1045996	0					
ANR	1046430	PtrMemberAccess	esil -> anal		1045996	0					
ANR	1046431	Identifier	esil		1045996	0					
ANR	1046432	Identifier	anal		1045996	1					
ANR	1046433	Identifier	reg		1045996	1					
ANR	1046434	ExpressionStatement	"r_reg_set_value ( esil -> anal -> reg , sp , spval + stacksz )"	881:3:24672:24726	1045996	1	True				
ANR	1046435	CallExpression	"r_reg_set_value ( esil -> anal -> reg , sp , spval + stacksz )"		1045996	0					
ANR	1046436	Callee	r_reg_set_value		1045996	0					
ANR	1046437	Identifier	r_reg_set_value		1045996	0					
ANR	1046438	ArgumentList	esil -> anal -> reg		1045996	1					
ANR	1046439	Argument	esil -> anal -> reg		1045996	0					
ANR	1046440	PtrMemberAccess	esil -> anal -> reg		1045996	0					
ANR	1046441	PtrMemberAccess	esil -> anal		1045996	0					
ANR	1046442	Identifier	esil		1045996	0					
ANR	1046443	Identifier	anal		1045996	1					
ANR	1046444	Identifier	reg		1045996	1					
ANR	1046445	Argument	sp		1045996	1					
ANR	1046446	Identifier	sp		1045996	0					
ANR	1046447	Argument	spval + stacksz		1045996	2					
ANR	1046448	AdditiveExpression	spval + stacksz		1045996	0		+			
ANR	1046449	Identifier	spval		1045996	0					
ANR	1046450	Identifier	stacksz		1045996	1					
ANR	1046451	ElseStatement	else		1045996	0					
ANR	1046452	CompoundStatement		47:8:1658:1658	1045996	0					
ANR	1046453	ExpressionStatement	"r_core_cmd0 ( core , ""aeim"" )"	885:2:24766:24792	1045996	0	True				
ANR	1046454	CallExpression	"r_core_cmd0 ( core , ""aeim"" )"		1045996	0					
ANR	1046455	Callee	r_core_cmd0		1045996	0					
ANR	1046456	Identifier	r_core_cmd0		1045996	0					
ANR	1046457	ArgumentList	core		1045996	1					
ANR	1046458	Argument	core		1045996	0					
ANR	1046459	Identifier	core		1045996	0					
ANR	1046460	Argument	"""aeim"""		1045996	1					
ANR	1046461	PrimaryExpression	"""aeim"""		1045996	0					
ANR	1046462	ExpressionStatement	stack_set = true	886:2:24796:24812	1045996	1	True				
ANR	1046463	AssignmentExpression	stack_set = true		1045996	0		=			
ANR	1046464	Identifier	stack_set		1045996	0					
ANR	1046465	Identifier	true		1045996	1					
ANR	1046466	ExpressionStatement	"r_config_set_i ( core -> config , ""io.cache"" , 1 )"	888:1:24818:24862	1045996	28	True				
ANR	1046467	CallExpression	"r_config_set_i ( core -> config , ""io.cache"" , 1 )"		1045996	0					
ANR	1046468	Callee	r_config_set_i		1045996	0					
ANR	1046469	Identifier	r_config_set_i		1045996	0					
ANR	1046470	ArgumentList	core -> config		1045996	1					
ANR	1046471	Argument	core -> config		1045996	0					
ANR	1046472	PtrMemberAccess	core -> config		1045996	0					
ANR	1046473	Identifier	core		1045996	0					
ANR	1046474	Identifier	config		1045996	1					
ANR	1046475	Argument	"""io.cache"""		1045996	1					
ANR	1046476	PrimaryExpression	"""io.cache"""		1045996	0					
ANR	1046477	Argument	1		1045996	2					
ANR	1046478	PrimaryExpression	1		1045996	0					
ANR	1046479	ExpressionStatement	"r_config_set_i ( core -> config , ""dbg.follow"" , 0 )"	889:1:24865:24911	1045996	29	True				
ANR	1046480	CallExpression	"r_config_set_i ( core -> config , ""dbg.follow"" , 0 )"		1045996	0					
ANR	1046481	Callee	r_config_set_i		1045996	0					
ANR	1046482	Identifier	r_config_set_i		1045996	0					
ANR	1046483	ArgumentList	core -> config		1045996	1					
ANR	1046484	Argument	core -> config		1045996	0					
ANR	1046485	PtrMemberAccess	core -> config		1045996	0					
ANR	1046486	Identifier	core		1045996	0					
ANR	1046487	Identifier	config		1045996	1					
ANR	1046488	Argument	"""dbg.follow"""		1045996	1					
ANR	1046489	PrimaryExpression	"""dbg.follow"""		1045996	0					
ANR	1046490	Argument	0		1045996	2					
ANR	1046491	PrimaryExpression	0		1045996	0					
ANR	1046492	IdentifierDeclStatement	ut64 oldoff = core -> offset ;	890:1:24914:24940	1045996	30	True				
ANR	1046493	IdentifierDecl	oldoff = core -> offset		1045996	0					
ANR	1046494	IdentifierDeclType	ut64		1045996	0					
ANR	1046495	Identifier	oldoff		1045996	1					
ANR	1046496	AssignmentExpression	oldoff = core -> offset		1045996	2		=			
ANR	1046497	Identifier	oldoff		1045996	0					
ANR	1046498	PtrMemberAccess	core -> offset		1045996	1					
ANR	1046499	Identifier	core		1045996	0					
ANR	1046500	Identifier	offset		1045996	1					
ANR	1046501	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	891:1:24943:24973	1045996	31	True				
ANR	1046502	CallExpression	"r_cons_break_push ( NULL , NULL )"		1045996	0					
ANR	1046503	Callee	r_cons_break_push		1045996	0					
ANR	1046504	Identifier	r_cons_break_push		1045996	0					
ANR	1046505	ArgumentList	NULL		1045996	1					
ANR	1046506	Argument	NULL		1045996	0					
ANR	1046507	Identifier	NULL		1045996	0					
ANR	1046508	Argument	NULL		1045996	1					
ANR	1046509	Identifier	NULL		1045996	0					
ANR	1046510	Statement	r_list_foreach	892:1:24976:24989	1045996	32	True				
ANR	1046511	Statement	(	892:16:24991:24991	1045996	33	True				
ANR	1046512	Statement	fcn	892:17:24992:24994	1045996	34	True				
ANR	1046513	Statement	->	892:20:24995:24996	1045996	35	True				
ANR	1046514	Statement	bbs	892:22:24997:24999	1045996	36	True				
ANR	1046515	Statement	","	892:25:25000:25000	1045996	37	True				
ANR	1046516	Statement	it	892:27:25002:25003	1045996	38	True				
ANR	1046517	Statement	","	892:29:25004:25004	1045996	39	True				
ANR	1046518	Statement	bb	892:31:25006:25007	1045996	40	True				
ANR	1046519	Statement	)	892:33:25008:25008	1045996	41	True				
ANR	1046520	CompoundStatement		58:2:1954:1983	1045996	42					
ANR	1046521	IdentifierDeclStatement	ut64 at = bb -> addr ;	893:2:25014:25032	1045996	0	True				
ANR	1046522	IdentifierDecl	at = bb -> addr		1045996	0					
ANR	1046523	IdentifierDeclType	ut64		1045996	0					
ANR	1046524	Identifier	at		1045996	1					
ANR	1046525	AssignmentExpression	at = bb -> addr		1045996	2		=			
ANR	1046526	Identifier	at		1045996	0					
ANR	1046527	PtrMemberAccess	bb -> addr		1045996	1					
ANR	1046528	Identifier	bb		1045996	0					
ANR	1046529	Identifier	addr		1045996	1					
ANR	1046530	IdentifierDeclStatement	ut64 to = bb -> addr + bb -> size ;	894:2:25036:25065	1045996	1	True				
ANR	1046531	IdentifierDecl	to = bb -> addr + bb -> size		1045996	0					
ANR	1046532	IdentifierDeclType	ut64		1045996	0					
ANR	1046533	Identifier	to		1045996	1					
ANR	1046534	AssignmentExpression	to = bb -> addr + bb -> size		1045996	2		=			
ANR	1046535	Identifier	to		1045996	0					
ANR	1046536	AdditiveExpression	bb -> addr + bb -> size		1045996	1		+			
ANR	1046537	PtrMemberAccess	bb -> addr		1045996	0					
ANR	1046538	Identifier	bb		1045996	0					
ANR	1046539	Identifier	addr		1045996	1					
ANR	1046540	PtrMemberAccess	bb -> size		1045996	1					
ANR	1046541	Identifier	bb		1045996	0					
ANR	1046542	Identifier	size		1045996	1					
ANR	1046543	ExpressionStatement	"r_reg_set_value ( esil -> anal -> reg , pc , at )"	895:2:25069:25110	1045996	2	True				
ANR	1046544	CallExpression	"r_reg_set_value ( esil -> anal -> reg , pc , at )"		1045996	0					
ANR	1046545	Callee	r_reg_set_value		1045996	0					
ANR	1046546	Identifier	r_reg_set_value		1045996	0					
ANR	1046547	ArgumentList	esil -> anal -> reg		1045996	1					
ANR	1046548	Argument	esil -> anal -> reg		1045996	0					
ANR	1046549	PtrMemberAccess	esil -> anal -> reg		1045996	0					
ANR	1046550	PtrMemberAccess	esil -> anal		1045996	0					
ANR	1046551	Identifier	esil		1045996	0					
ANR	1046552	Identifier	anal		1045996	1					
ANR	1046553	Identifier	reg		1045996	1					
ANR	1046554	Argument	pc		1045996	1					
ANR	1046555	Identifier	pc		1045996	0					
ANR	1046556	Argument	at		1045996	2					
ANR	1046557	Identifier	at		1045996	0					
ANR	1046558	ForStatement	for ( i = 0 ; at < to ; i ++ )		1045996	3					
ANR	1046559	ForInit	i = 0 ;	896:7:25119:25124	1045996	0	True				
ANR	1046560	AssignmentExpression	i = 0		1045996	0		=			
ANR	1046561	Identifier	i		1045996	0					
ANR	1046562	PrimaryExpression	0		1045996	1					
ANR	1046563	Condition	at < to	896:14:25126:25132	1045996	1	True				
ANR	1046564	RelationalExpression	at < to		1045996	0		<			
ANR	1046565	Identifier	at		1045996	0					
ANR	1046566	Identifier	to		1045996	1					
ANR	1046567	PostIncDecOperationExpression	i ++	896:23:25135:25137	1045996	2	True				
ANR	1046568	Identifier	i		1045996	0					
ANR	1046569	IncDec	++		1045996	1					
ANR	1046570	CompoundStatement		102:3:3201:3245	1045996	3					
ANR	1046571	IfStatement	if ( r_cons_is_breaked ( ) )		1045996	0					
ANR	1046572	Condition	r_cons_is_breaked ( )	897:7:25149:25168	1045996	0	True				
ANR	1046573	CallExpression	r_cons_is_breaked ( )		1045996	0					
ANR	1046574	Callee	r_cons_is_breaked		1045996	0					
ANR	1046575	Identifier	r_cons_is_breaked		1045996	0					
ANR	1046576	ArgumentList			1045996	1					
ANR	1046577	CompoundStatement		61:29:2089:2089	1045996	1					
ANR	1046578	GotoStatement	goto beach ;	898:4:25177:25187	1045996	0	True				
ANR	1046579	Identifier	beach		1045996	0					
ANR	1046580	IfStatement	if ( at < bb -> addr )		1045996	1					
ANR	1046581	Condition	at < bb -> addr	900:7:25201:25213	1045996	0	True				
ANR	1046582	RelationalExpression	at < bb -> addr		1045996	0		<			
ANR	1046583	Identifier	at		1045996	0					
ANR	1046584	PtrMemberAccess	bb -> addr		1045996	1					
ANR	1046585	Identifier	bb		1045996	0					
ANR	1046586	Identifier	addr		1045996	1					
ANR	1046587	CompoundStatement		64:22:2134:2134	1045996	1					
ANR	1046588	BreakStatement	break ;	901:4:25222:25227	1045996	0	True				
ANR	1046589	IfStatement	if ( i >= ( bsize - 32 ) )		1045996	2					
ANR	1046590	Condition	i >= ( bsize - 32 )	903:7:25241:25257	1045996	0	True				
ANR	1046591	RelationalExpression	i >= ( bsize - 32 )		1045996	0		>=			
ANR	1046592	Identifier	i		1045996	0					
ANR	1046593	AdditiveExpression	bsize - 32		1045996	1		-			
ANR	1046594	Identifier	bsize		1045996	0					
ANR	1046595	PrimaryExpression	32		1045996	1					
ANR	1046596	CompoundStatement		67:26:2178:2178	1045996	1					
ANR	1046597	ExpressionStatement	i = 0	904:4:25266:25271	1045996	0	True				
ANR	1046598	AssignmentExpression	i = 0		1045996	0		=			
ANR	1046599	Identifier	i		1045996	0					
ANR	1046600	PrimaryExpression	0		1045996	1					
ANR	1046601	IfStatement	if ( ! i )		1045996	3					
ANR	1046602	Condition	! i	906:7:25285:25286	1045996	0	True				
ANR	1046603	UnaryOperationExpression	! i		1045996	0					
ANR	1046604	UnaryOperator	!		1045996	0					
ANR	1046605	Identifier	i		1045996	1					
ANR	1046606	CompoundStatement		70:11:2207:2207	1045996	1					
ANR	1046607	ExpressionStatement	"r_io_read_at ( core -> io , at , buf , bsize )"	907:4:25295:25334	1045996	0	True				
ANR	1046608	CallExpression	"r_io_read_at ( core -> io , at , buf , bsize )"		1045996	0					
ANR	1046609	Callee	r_io_read_at		1045996	0					
ANR	1046610	Identifier	r_io_read_at		1045996	0					
ANR	1046611	ArgumentList	core -> io		1045996	1					
ANR	1046612	Argument	core -> io		1045996	0					
ANR	1046613	PtrMemberAccess	core -> io		1045996	0					
ANR	1046614	Identifier	core		1045996	0					
ANR	1046615	Identifier	io		1045996	1					
ANR	1046616	Argument	at		1045996	1					
ANR	1046617	Identifier	at		1045996	0					
ANR	1046618	Argument	buf		1045996	2					
ANR	1046619	Identifier	buf		1045996	0					
ANR	1046620	Argument	bsize		1045996	3					
ANR	1046621	Identifier	bsize		1045996	0					
ANR	1046622	ExpressionStatement	"ret = r_anal_op ( core -> anal , & aop , at , buf + i , bsize - i , R_ANAL_OP_MASK_VAL )"	909:3:25344:25422	1045996	4	True				
ANR	1046623	AssignmentExpression	"ret = r_anal_op ( core -> anal , & aop , at , buf + i , bsize - i , R_ANAL_OP_MASK_VAL )"		1045996	0		=			
ANR	1046624	Identifier	ret		1045996	0					
ANR	1046625	CallExpression	"r_anal_op ( core -> anal , & aop , at , buf + i , bsize - i , R_ANAL_OP_MASK_VAL )"		1045996	1					
ANR	1046626	Callee	r_anal_op		1045996	0					
ANR	1046627	Identifier	r_anal_op		1045996	0					
ANR	1046628	ArgumentList	core -> anal		1045996	1					
ANR	1046629	Argument	core -> anal		1045996	0					
ANR	1046630	PtrMemberAccess	core -> anal		1045996	0					
ANR	1046631	Identifier	core		1045996	0					
ANR	1046632	Identifier	anal		1045996	1					
ANR	1046633	Argument	& aop		1045996	1					
ANR	1046634	UnaryOperationExpression	& aop		1045996	0					
ANR	1046635	UnaryOperator	&		1045996	0					
ANR	1046636	Identifier	aop		1045996	1					
ANR	1046637	Argument	at		1045996	2					
ANR	1046638	Identifier	at		1045996	0					
ANR	1046639	Argument	buf + i		1045996	3					
ANR	1046640	AdditiveExpression	buf + i		1045996	0		+			
ANR	1046641	Identifier	buf		1045996	0					
ANR	1046642	Identifier	i		1045996	1					
ANR	1046643	Argument	bsize - i		1045996	4					
ANR	1046644	AdditiveExpression	bsize - i		1045996	0		-			
ANR	1046645	Identifier	bsize		1045996	0					
ANR	1046646	Identifier	i		1045996	1					
ANR	1046647	Argument	R_ANAL_OP_MASK_VAL		1045996	5					
ANR	1046648	Identifier	R_ANAL_OP_MASK_VAL		1045996	0					
ANR	1046649	IfStatement	if ( ret <= 0 )		1045996	5					
ANR	1046650	Condition	ret <= 0	910:7:25431:25438	1045996	0	True				
ANR	1046651	RelationalExpression	ret <= 0		1045996	0		<=			
ANR	1046652	Identifier	ret		1045996	0					
ANR	1046653	PrimaryExpression	0		1045996	1					
ANR	1046654	CompoundStatement		74:17:2359:2359	1045996	1					
ANR	1046655	ExpressionStatement	i += minopcode	911:4:25447:25461	1045996	0	True				
ANR	1046656	AssignmentExpression	i += minopcode		1045996	0		+=			
ANR	1046657	Identifier	i		1045996	0					
ANR	1046658	Identifier	minopcode		1045996	1					
ANR	1046659	ExpressionStatement	at += minopcode	912:4:25467:25482	1045996	1	True				
ANR	1046660	AssignmentExpression	at += minopcode		1045996	0		+=			
ANR	1046661	Identifier	at		1045996	0					
ANR	1046662	Identifier	minopcode		1045996	1					
ANR	1046663	ExpressionStatement	r_anal_op_fini ( & aop )	913:4:25488:25509	1045996	2	True				
ANR	1046664	CallExpression	r_anal_op_fini ( & aop )		1045996	0					
ANR	1046665	Callee	r_anal_op_fini		1045996	0					
ANR	1046666	Identifier	r_anal_op_fini		1045996	0					
ANR	1046667	ArgumentList	& aop		1045996	1					
ANR	1046668	Argument	& aop		1045996	0					
ANR	1046669	UnaryOperationExpression	& aop		1045996	0					
ANR	1046670	UnaryOperator	&		1045996	0					
ANR	1046671	Identifier	aop		1045996	1					
ANR	1046672	ContinueStatement	continue ;	914:4:25515:25523	1045996	3	True				
ANR	1046673	ExpressionStatement	i += ret - 1	916:3:25533:25545	1045996	6	True				
ANR	1046674	AssignmentExpression	i += ret - 1		1045996	0		+=			
ANR	1046675	Identifier	i		1045996	0					
ANR	1046676	AdditiveExpression	ret - 1		1045996	1		-			
ANR	1046677	Identifier	ret		1045996	0					
ANR	1046678	PrimaryExpression	1		1045996	1					
ANR	1046679	ExpressionStatement	at += ret	917:3:25550:25559	1045996	7	True				
ANR	1046680	AssignmentExpression	at += ret		1045996	0		+=			
ANR	1046681	Identifier	at		1045996	0					
ANR	1046682	Identifier	ret		1045996	1					
ANR	1046683	IdentifierDeclStatement	int index = 0 ;	918:3:25564:25577	1045996	8	True				
ANR	1046684	IdentifierDecl	index = 0		1045996	0					
ANR	1046685	IdentifierDeclType	int		1045996	0					
ANR	1046686	Identifier	index		1045996	1					
ANR	1046687	AssignmentExpression	index = 0		1045996	2		=			
ANR	1046688	Identifier	index		1045996	0					
ANR	1046689	PrimaryExpression	0		1045996	1					
ANR	1046690	IfStatement	if ( aop . ireg )		1045996	9					
ANR	1046691	Condition	aop . ireg	919:7:25586:25593	1045996	0	True				
ANR	1046692	MemberAccess	aop . ireg		1045996	0					
ANR	1046693	Identifier	aop		1045996	0					
ANR	1046694	Identifier	ireg		1045996	1					
ANR	1046695	CompoundStatement		83:17:2514:2514	1045996	1					
ANR	1046696	ExpressionStatement	"index = r_reg_getv ( esil -> anal -> reg , aop . ireg ) * aop . scale"	920:4:25602:25660	1045996	0	True				
ANR	1046697	AssignmentExpression	"index = r_reg_getv ( esil -> anal -> reg , aop . ireg ) * aop . scale"		1045996	0		=			
ANR	1046698	Identifier	index		1045996	0					
ANR	1046699	MultiplicativeExpression	"r_reg_getv ( esil -> anal -> reg , aop . ireg ) * aop . scale"		1045996	1		*			
ANR	1046700	CallExpression	"r_reg_getv ( esil -> anal -> reg , aop . ireg )"		1045996	0					
ANR	1046701	Callee	r_reg_getv		1045996	0					
ANR	1046702	Identifier	r_reg_getv		1045996	0					
ANR	1046703	ArgumentList	esil -> anal -> reg		1045996	1					
ANR	1046704	Argument	esil -> anal -> reg		1045996	0					
ANR	1046705	PtrMemberAccess	esil -> anal -> reg		1045996	0					
ANR	1046706	PtrMemberAccess	esil -> anal		1045996	0					
ANR	1046707	Identifier	esil		1045996	0					
ANR	1046708	Identifier	anal		1045996	1					
ANR	1046709	Identifier	reg		1045996	1					
ANR	1046710	Argument	aop . ireg		1045996	1					
ANR	1046711	MemberAccess	aop . ireg		1045996	0					
ANR	1046712	Identifier	aop		1045996	0					
ANR	1046713	Identifier	ireg		1045996	1					
ANR	1046714	MemberAccess	aop . scale		1045996	1					
ANR	1046715	Identifier	aop		1045996	0					
ANR	1046716	Identifier	scale		1045996	1					
ANR	1046717	IdentifierDeclStatement	"int j , src_imm = - 1 , dst_imm = - 1 ;"	922:3:25670:25703	1045996	10	True				
ANR	1046718	IdentifierDecl	j		1045996	0					
ANR	1046719	IdentifierDeclType	int		1045996	0					
ANR	1046720	Identifier	j		1045996	1					
ANR	1046721	IdentifierDecl	src_imm = - 1		1045996	1					
ANR	1046722	IdentifierDeclType	int		1045996	0					
ANR	1046723	Identifier	src_imm		1045996	1					
ANR	1046724	AssignmentExpression	src_imm = - 1		1045996	2		=			
ANR	1046725	Identifier	src_imm		1045996	0					
ANR	1046726	UnaryOperationExpression	- 1		1045996	1					
ANR	1046727	UnaryOperator	-		1045996	0					
ANR	1046728	PrimaryExpression	1		1045996	1					
ANR	1046729	IdentifierDecl	dst_imm = - 1		1045996	2					
ANR	1046730	IdentifierDeclType	int		1045996	0					
ANR	1046731	Identifier	dst_imm		1045996	1					
ANR	1046732	AssignmentExpression	dst_imm = - 1		1045996	2		=			
ANR	1046733	Identifier	dst_imm		1045996	0					
ANR	1046734	UnaryOperationExpression	- 1		1045996	1					
ANR	1046735	UnaryOperator	-		1045996	0					
ANR	1046736	PrimaryExpression	1		1045996	1					
ANR	1046737	IdentifierDeclStatement	ut64 src_addr = UT64_MAX ;	923:3:25708:25732	1045996	11	True				
ANR	1046738	IdentifierDecl	src_addr = UT64_MAX		1045996	0					
ANR	1046739	IdentifierDeclType	ut64		1045996	0					
ANR	1046740	Identifier	src_addr		1045996	1					
ANR	1046741	AssignmentExpression	src_addr = UT64_MAX		1045996	2		=			
ANR	1046742	Identifier	UT64_MAX		1045996	0					
ANR	1046743	Identifier	UT64_MAX		1045996	1					
ANR	1046744	IdentifierDeclStatement	ut64 dst_addr = UT64_MAX ;	924:3:25737:25761	1045996	12	True				
ANR	1046745	IdentifierDecl	dst_addr = UT64_MAX		1045996	0					
ANR	1046746	IdentifierDeclType	ut64		1045996	0					
ANR	1046747	Identifier	dst_addr		1045996	1					
ANR	1046748	AssignmentExpression	dst_addr = UT64_MAX		1045996	2		=			
ANR	1046749	Identifier	UT64_MAX		1045996	0					
ANR	1046750	Identifier	UT64_MAX		1045996	1					
ANR	1046751	ForStatement	for ( j = 0 ; j < 3 ; j ++ )		1045996	13					
ANR	1046752	ForInit	j = 0 ;	925:8:25771:25776	1045996	0	True				
ANR	1046753	AssignmentExpression	j = 0		1045996	0		=			
ANR	1046754	Identifier	j		1045996	0					
ANR	1046755	PrimaryExpression	0		1045996	1					
ANR	1046756	Condition	j < 3	925:15:25778:25782	1045996	1	True				
ANR	1046757	RelationalExpression	j < 3		1045996	0		<			
ANR	1046758	Identifier	j		1045996	0					
ANR	1046759	PrimaryExpression	3		1045996	1					
ANR	1046760	PostIncDecOperationExpression	j ++	925:22:25785:25787	1045996	2	True				
ANR	1046761	Identifier	j		1045996	0					
ANR	1046762	IncDec	++		1045996	1					
ANR	1046763	CompoundStatement		89:27:2708:2708	1045996	3					
ANR	1046764	IfStatement	if ( aop . src [ j ] && aop . src [ j ] -> reg && aop . src [ j ] -> reg -> name )		1045996	0					
ANR	1046765	Condition	aop . src [ j ] && aop . src [ j ] -> reg && aop . src [ j ] -> reg -> name	926:8:25800:25853	1045996	0	True				
ANR	1046766	AndExpression	aop . src [ j ] && aop . src [ j ] -> reg && aop . src [ j ] -> reg -> name		1045996	0		&&			
ANR	1046767	ArrayIndexing	aop . src [ j ]		1045996	0					
ANR	1046768	MemberAccess	aop . src		1045996	0					
ANR	1046769	Identifier	aop		1045996	0					
ANR	1046770	Identifier	src		1045996	1					
ANR	1046771	Identifier	j		1045996	1					
ANR	1046772	AndExpression	aop . src [ j ] -> reg && aop . src [ j ] -> reg -> name		1045996	1		&&			
ANR	1046773	PtrMemberAccess	aop . src [ j ] -> reg		1045996	0					
ANR	1046774	ArrayIndexing	aop . src [ j ]		1045996	0					
ANR	1046775	MemberAccess	aop . src		1045996	0					
ANR	1046776	Identifier	aop		1045996	0					
ANR	1046777	Identifier	src		1045996	1					
ANR	1046778	Identifier	j		1045996	1					
ANR	1046779	Identifier	reg		1045996	1					
ANR	1046780	PtrMemberAccess	aop . src [ j ] -> reg -> name		1045996	1					
ANR	1046781	PtrMemberAccess	aop . src [ j ] -> reg		1045996	0					
ANR	1046782	ArrayIndexing	aop . src [ j ]		1045996	0					
ANR	1046783	MemberAccess	aop . src		1045996	0					
ANR	1046784	Identifier	aop		1045996	0					
ANR	1046785	Identifier	src		1045996	1					
ANR	1046786	Identifier	j		1045996	1					
ANR	1046787	Identifier	reg		1045996	1					
ANR	1046788	Identifier	name		1045996	1					
ANR	1046789	CompoundStatement		90:64:2774:2774	1045996	1					
ANR	1046790	ExpressionStatement	"src_addr = r_reg_getv ( esil -> anal -> reg , aop . src [ j ] -> reg -> name ) + index"	927:5:25863:25933	1045996	0	True				
ANR	1046791	AssignmentExpression	"src_addr = r_reg_getv ( esil -> anal -> reg , aop . src [ j ] -> reg -> name ) + index"		1045996	0		=			
ANR	1046792	Identifier	src_addr		1045996	0					
ANR	1046793	AdditiveExpression	"r_reg_getv ( esil -> anal -> reg , aop . src [ j ] -> reg -> name ) + index"		1045996	1		+			
ANR	1046794	CallExpression	"r_reg_getv ( esil -> anal -> reg , aop . src [ j ] -> reg -> name )"		1045996	0					
ANR	1046795	Callee	r_reg_getv		1045996	0					
ANR	1046796	Identifier	r_reg_getv		1045996	0					
ANR	1046797	ArgumentList	esil -> anal -> reg		1045996	1					
ANR	1046798	Argument	esil -> anal -> reg		1045996	0					
ANR	1046799	PtrMemberAccess	esil -> anal -> reg		1045996	0					
ANR	1046800	PtrMemberAccess	esil -> anal		1045996	0					
ANR	1046801	Identifier	esil		1045996	0					
ANR	1046802	Identifier	anal		1045996	1					
ANR	1046803	Identifier	reg		1045996	1					
ANR	1046804	Argument	aop . src [ j ] -> reg -> name		1045996	1					
ANR	1046805	PtrMemberAccess	aop . src [ j ] -> reg -> name		1045996	0					
ANR	1046806	PtrMemberAccess	aop . src [ j ] -> reg		1045996	0					
ANR	1046807	ArrayIndexing	aop . src [ j ]		1045996	0					
ANR	1046808	MemberAccess	aop . src		1045996	0					
ANR	1046809	Identifier	aop		1045996	0					
ANR	1046810	Identifier	src		1045996	1					
ANR	1046811	Identifier	j		1045996	1					
ANR	1046812	Identifier	reg		1045996	1					
ANR	1046813	Identifier	name		1045996	1					
ANR	1046814	Identifier	index		1045996	1					
ANR	1046815	ExpressionStatement	src_imm = aop . src [ j ] -> delta	928:5:25940:25967	1045996	1	True				
ANR	1046816	AssignmentExpression	src_imm = aop . src [ j ] -> delta		1045996	0		=			
ANR	1046817	Identifier	src_imm		1045996	0					
ANR	1046818	PtrMemberAccess	aop . src [ j ] -> delta		1045996	1					
ANR	1046819	ArrayIndexing	aop . src [ j ]		1045996	0					
ANR	1046820	MemberAccess	aop . src		1045996	0					
ANR	1046821	Identifier	aop		1045996	0					
ANR	1046822	Identifier	src		1045996	1					
ANR	1046823	Identifier	j		1045996	1					
ANR	1046824	Identifier	delta		1045996	1					
ANR	1046825	IfStatement	if ( aop . dst && aop . dst -> reg && aop . dst -> reg -> name )		1045996	14					
ANR	1046826	Condition	aop . dst && aop . dst -> reg && aop . dst -> reg -> name	931:7:25987:26031	1045996	0	True				
ANR	1046827	AndExpression	aop . dst && aop . dst -> reg && aop . dst -> reg -> name		1045996	0		&&			
ANR	1046828	MemberAccess	aop . dst		1045996	0					
ANR	1046829	Identifier	aop		1045996	0					
ANR	1046830	Identifier	dst		1045996	1					
ANR	1046831	AndExpression	aop . dst -> reg && aop . dst -> reg -> name		1045996	1		&&			
ANR	1046832	PtrMemberAccess	aop . dst -> reg		1045996	0					
ANR	1046833	MemberAccess	aop . dst		1045996	0					
ANR	1046834	Identifier	aop		1045996	0					
ANR	1046835	Identifier	dst		1045996	1					
ANR	1046836	Identifier	reg		1045996	1					
ANR	1046837	PtrMemberAccess	aop . dst -> reg -> name		1045996	1					
ANR	1046838	PtrMemberAccess	aop . dst -> reg		1045996	0					
ANR	1046839	MemberAccess	aop . dst		1045996	0					
ANR	1046840	Identifier	aop		1045996	0					
ANR	1046841	Identifier	dst		1045996	1					
ANR	1046842	Identifier	reg		1045996	1					
ANR	1046843	Identifier	name		1045996	1					
ANR	1046844	CompoundStatement		95:54:2952:2952	1045996	1					
ANR	1046845	ExpressionStatement	"dst_addr = r_reg_getv ( esil -> anal -> reg , aop . dst -> reg -> name ) + index"	932:4:26040:26107	1045996	0	True				
ANR	1046846	AssignmentExpression	"dst_addr = r_reg_getv ( esil -> anal -> reg , aop . dst -> reg -> name ) + index"		1045996	0		=			
ANR	1046847	Identifier	dst_addr		1045996	0					
ANR	1046848	AdditiveExpression	"r_reg_getv ( esil -> anal -> reg , aop . dst -> reg -> name ) + index"		1045996	1		+			
ANR	1046849	CallExpression	"r_reg_getv ( esil -> anal -> reg , aop . dst -> reg -> name )"		1045996	0					
ANR	1046850	Callee	r_reg_getv		1045996	0					
ANR	1046851	Identifier	r_reg_getv		1045996	0					
ANR	1046852	ArgumentList	esil -> anal -> reg		1045996	1					
ANR	1046853	Argument	esil -> anal -> reg		1045996	0					
ANR	1046854	PtrMemberAccess	esil -> anal -> reg		1045996	0					
ANR	1046855	PtrMemberAccess	esil -> anal		1045996	0					
ANR	1046856	Identifier	esil		1045996	0					
ANR	1046857	Identifier	anal		1045996	1					
ANR	1046858	Identifier	reg		1045996	1					
ANR	1046859	Argument	aop . dst -> reg -> name		1045996	1					
ANR	1046860	PtrMemberAccess	aop . dst -> reg -> name		1045996	0					
ANR	1046861	PtrMemberAccess	aop . dst -> reg		1045996	0					
ANR	1046862	MemberAccess	aop . dst		1045996	0					
ANR	1046863	Identifier	aop		1045996	0					
ANR	1046864	Identifier	dst		1045996	1					
ANR	1046865	Identifier	reg		1045996	1					
ANR	1046866	Identifier	name		1045996	1					
ANR	1046867	Identifier	index		1045996	1					
ANR	1046868	ExpressionStatement	dst_imm = aop . dst -> delta	933:4:26113:26137	1045996	1	True				
ANR	1046869	AssignmentExpression	dst_imm = aop . dst -> delta		1045996	0		=			
ANR	1046870	Identifier	dst_imm		1045996	0					
ANR	1046871	PtrMemberAccess	aop . dst -> delta		1045996	1					
ANR	1046872	MemberAccess	aop . dst		1045996	0					
ANR	1046873	Identifier	aop		1045996	0					
ANR	1046874	Identifier	dst		1045996	1					
ANR	1046875	Identifier	delta		1045996	1					
ANR	1046876	IdentifierDeclStatement	RAnalVar * var = aop . var ;	935:3:26147:26170	1045996	15	True				
ANR	1046877	IdentifierDecl	* var = aop . var		1045996	0					
ANR	1046878	IdentifierDeclType	RAnalVar *		1045996	0					
ANR	1046879	Identifier	var		1045996	1					
ANR	1046880	AssignmentExpression	* var = aop . var		1045996	2		=			
ANR	1046881	Identifier	var		1045996	0					
ANR	1046882	MemberAccess	aop . var		1045996	1					
ANR	1046883	Identifier	aop		1045996	0					
ANR	1046884	Identifier	var		1045996	1					
ANR	1046885	IdentifierDeclStatement	"char * slink = r_type_link_at ( TDB , src_addr ) ;"	936:3:26175:26219	1045996	16	True				
ANR	1046886	IdentifierDecl	"* slink = r_type_link_at ( TDB , src_addr )"		1045996	0					
ANR	1046887	IdentifierDeclType	char *		1045996	0					
ANR	1046888	Identifier	slink		1045996	1					
ANR	1046889	AssignmentExpression	"* slink = r_type_link_at ( TDB , src_addr )"		1045996	2		=			
ANR	1046890	Identifier	slink		1045996	0					
ANR	1046891	CallExpression	"r_type_link_at ( TDB , src_addr )"		1045996	1					
ANR	1046892	Callee	r_type_link_at		1045996	0					
ANR	1046893	Identifier	r_type_link_at		1045996	0					
ANR	1046894	ArgumentList	TDB		1045996	1					
ANR	1046895	Argument	TDB		1045996	0					
ANR	1046896	Identifier	TDB		1045996	0					
ANR	1046897	Argument	src_addr		1045996	1					
ANR	1046898	Identifier	src_addr		1045996	0					
ANR	1046899	IdentifierDeclStatement	"char * vlink = r_type_link_at ( TDB , src_addr + src_imm ) ;"	937:3:26224:26278	1045996	17	True				
ANR	1046900	IdentifierDecl	"* vlink = r_type_link_at ( TDB , src_addr + src_imm )"		1045996	0					
ANR	1046901	IdentifierDeclType	char *		1045996	0					
ANR	1046902	Identifier	vlink		1045996	1					
ANR	1046903	AssignmentExpression	"* vlink = r_type_link_at ( TDB , src_addr + src_imm )"		1045996	2		=			
ANR	1046904	Identifier	vlink		1045996	0					
ANR	1046905	CallExpression	"r_type_link_at ( TDB , src_addr + src_imm )"		1045996	1					
ANR	1046906	Callee	r_type_link_at		1045996	0					
ANR	1046907	Identifier	r_type_link_at		1045996	0					
ANR	1046908	ArgumentList	TDB		1045996	1					
ANR	1046909	Argument	TDB		1045996	0					
ANR	1046910	Identifier	TDB		1045996	0					
ANR	1046911	Argument	src_addr + src_imm		1045996	1					
ANR	1046912	AdditiveExpression	src_addr + src_imm		1045996	0		+			
ANR	1046913	Identifier	src_addr		1045996	0					
ANR	1046914	Identifier	src_imm		1045996	1					
ANR	1046915	IdentifierDeclStatement	"char * dlink = r_type_link_at ( TDB , dst_addr ) ;"	938:3:26283:26327	1045996	18	True				
ANR	1046916	IdentifierDecl	"* dlink = r_type_link_at ( TDB , dst_addr )"		1045996	0					
ANR	1046917	IdentifierDeclType	char *		1045996	0					
ANR	1046918	Identifier	dlink		1045996	1					
ANR	1046919	AssignmentExpression	"* dlink = r_type_link_at ( TDB , dst_addr )"		1045996	2		=			
ANR	1046920	Identifier	dlink		1045996	0					
ANR	1046921	CallExpression	"r_type_link_at ( TDB , dst_addr )"		1045996	1					
ANR	1046922	Callee	r_type_link_at		1045996	0					
ANR	1046923	Identifier	r_type_link_at		1045996	0					
ANR	1046924	ArgumentList	TDB		1045996	1					
ANR	1046925	Argument	TDB		1045996	0					
ANR	1046926	Identifier	TDB		1045996	0					
ANR	1046927	Argument	dst_addr		1045996	1					
ANR	1046928	Identifier	dst_addr		1045996	0					
ANR	1046929	IfStatement	if ( vlink && var && var -> kind != 'r' )		1045996	19					
ANR	1046930	Condition	vlink && var && var -> kind != 'r'	940:7:26402:26433	1045996	0	True				
ANR	1046931	AndExpression	vlink && var && var -> kind != 'r'		1045996	0		&&			
ANR	1046932	Identifier	vlink		1045996	0					
ANR	1046933	AndExpression	var && var -> kind != 'r'		1045996	1		&&			
ANR	1046934	Identifier	var		1045996	0					
ANR	1046935	EqualityExpression	var -> kind != 'r'		1045996	1		!=			
ANR	1046936	PtrMemberAccess	var -> kind		1045996	0					
ANR	1046937	Identifier	var		1045996	0					
ANR	1046938	Identifier	kind		1045996	1					
ANR	1046939	PrimaryExpression	'r'		1045996	1					
ANR	1046940	CompoundStatement		104:41:3354:3354	1045996	1					
ANR	1046941	IfStatement	"if ( r_type_kind ( TDB , vlink ) == R_TYPE_UNION )"		1045996	0					
ANR	1046942	Condition	"r_type_kind ( TDB , vlink ) == R_TYPE_UNION"	941:8:26446:26485	1045996	0	True				
ANR	1046943	EqualityExpression	"r_type_kind ( TDB , vlink ) == R_TYPE_UNION"		1045996	0		==			
ANR	1046944	CallExpression	"r_type_kind ( TDB , vlink )"		1045996	0					
ANR	1046945	Callee	r_type_kind		1045996	0					
ANR	1046946	Identifier	r_type_kind		1045996	0					
ANR	1046947	ArgumentList	TDB		1045996	1					
ANR	1046948	Argument	TDB		1045996	0					
ANR	1046949	Identifier	TDB		1045996	0					
ANR	1046950	Argument	vlink		1045996	1					
ANR	1046951	Identifier	vlink		1045996	0					
ANR	1046952	Identifier	R_TYPE_UNION		1045996	1					
ANR	1046953	CompoundStatement		105:50:3406:3406	1045996	1					
ANR	1046954	ExpressionStatement	"varpfx = ""union"""	942:5:26495:26511	1045996	0	True				
ANR	1046955	AssignmentExpression	"varpfx = ""union"""		1045996	0		=			
ANR	1046956	Identifier	varpfx		1045996	0					
ANR	1046957	PrimaryExpression	"""union"""		1045996	1					
ANR	1046958	ElseStatement	else		1045996	0					
ANR	1046959	CompoundStatement		107:11:3442:3442	1045996	0					
ANR	1046960	ExpressionStatement	"varpfx = ""struct"""	944:5:26531:26548	1045996	0	True				
ANR	1046961	AssignmentExpression	"varpfx = ""struct"""		1045996	0		=			
ANR	1046962	Identifier	varpfx		1045996	0					
ANR	1046963	PrimaryExpression	"""struct"""		1045996	1					
ANR	1046964	IfStatement	"if ( strcmp ( var -> name , vlink ) && ! resolved )"		1045996	1					
ANR	1046965	Condition	"strcmp ( var -> name , vlink ) && ! resolved"	948:8:26677:26715	1045996	0	True				
ANR	1046966	AndExpression	"strcmp ( var -> name , vlink ) && ! resolved"		1045996	0		&&			
ANR	1046967	CallExpression	"strcmp ( var -> name , vlink )"		1045996	0					
ANR	1046968	Callee	strcmp		1045996	0					
ANR	1046969	Identifier	strcmp		1045996	0					
ANR	1046970	ArgumentList	var -> name		1045996	1					
ANR	1046971	Argument	var -> name		1045996	0					
ANR	1046972	PtrMemberAccess	var -> name		1045996	0					
ANR	1046973	Identifier	var		1045996	0					
ANR	1046974	Identifier	name		1045996	1					
ANR	1046975	Argument	vlink		1045996	1					
ANR	1046976	Identifier	vlink		1045996	0					
ANR	1046977	UnaryOperationExpression	! resolved		1045996	1					
ANR	1046978	UnaryOperator	!		1045996	0					
ANR	1046979	Identifier	resolved		1045996	1					
ANR	1046980	CompoundStatement		112:49:3636:3636	1045996	1					
ANR	1046981	ExpressionStatement	resolved = true	949:5:26725:26740	1045996	0	True				
ANR	1046982	AssignmentExpression	resolved = true		1045996	0		=			
ANR	1046983	Identifier	resolved		1045996	0					
ANR	1046984	Identifier	true		1045996	1					
ANR	1046985	ExpressionStatement	"r_anal_var_retype ( core -> anal , fcn -> addr , R_ANAL_VAR_SCOPE_LOCAL , - 1 , var -> kind , varpfx , - 1 , var -> isarg , var -> name )"	950:5:26747:26869	1045996	1	True				
ANR	1046986	CallExpression	"r_anal_var_retype ( core -> anal , fcn -> addr , R_ANAL_VAR_SCOPE_LOCAL , - 1 , var -> kind , varpfx , - 1 , var -> isarg , var -> name )"		1045996	0					
ANR	1046987	Callee	r_anal_var_retype		1045996	0					
ANR	1046988	Identifier	r_anal_var_retype		1045996	0					
ANR	1046989	ArgumentList	core -> anal		1045996	1					
ANR	1046990	Argument	core -> anal		1045996	0					
ANR	1046991	PtrMemberAccess	core -> anal		1045996	0					
ANR	1046992	Identifier	core		1045996	0					
ANR	1046993	Identifier	anal		1045996	1					
ANR	1046994	Argument	fcn -> addr		1045996	1					
ANR	1046995	PtrMemberAccess	fcn -> addr		1045996	0					
ANR	1046996	Identifier	fcn		1045996	0					
ANR	1046997	Identifier	addr		1045996	1					
ANR	1046998	Argument	R_ANAL_VAR_SCOPE_LOCAL		1045996	2					
ANR	1046999	Identifier	R_ANAL_VAR_SCOPE_LOCAL		1045996	0					
ANR	1047000	Argument	- 1		1045996	3					
ANR	1047001	UnaryOperationExpression	- 1		1045996	0					
ANR	1047002	UnaryOperator	-		1045996	0					
ANR	1047003	PrimaryExpression	1		1045996	1					
ANR	1047004	Argument	var -> kind		1045996	4					
ANR	1047005	PtrMemberAccess	var -> kind		1045996	0					
ANR	1047006	Identifier	var		1045996	0					
ANR	1047007	Identifier	kind		1045996	1					
ANR	1047008	Argument	varpfx		1045996	5					
ANR	1047009	Identifier	varpfx		1045996	0					
ANR	1047010	Argument	- 1		1045996	6					
ANR	1047011	UnaryOperationExpression	- 1		1045996	0					
ANR	1047012	UnaryOperator	-		1045996	0					
ANR	1047013	PrimaryExpression	1		1045996	1					
ANR	1047014	Argument	var -> isarg		1045996	7					
ANR	1047015	PtrMemberAccess	var -> isarg		1045996	0					
ANR	1047016	Identifier	var		1045996	0					
ANR	1047017	Identifier	isarg		1045996	1					
ANR	1047018	Argument	var -> name		1045996	8					
ANR	1047019	PtrMemberAccess	var -> name		1045996	0					
ANR	1047020	Identifier	var		1045996	0					
ANR	1047021	Identifier	name		1045996	1					
ANR	1047022	ExpressionStatement	"r_anal_var_rename ( core -> anal , fcn -> addr , R_ANAL_VAR_SCOPE_LOCAL , var -> kind , var -> name , vlink , false )"	952:5:26876:26984	1045996	2	True				
ANR	1047023	CallExpression	"r_anal_var_rename ( core -> anal , fcn -> addr , R_ANAL_VAR_SCOPE_LOCAL , var -> kind , var -> name , vlink , false )"		1045996	0					
ANR	1047024	Callee	r_anal_var_rename		1045996	0					
ANR	1047025	Identifier	r_anal_var_rename		1045996	0					
ANR	1047026	ArgumentList	core -> anal		1045996	1					
ANR	1047027	Argument	core -> anal		1045996	0					
ANR	1047028	PtrMemberAccess	core -> anal		1045996	0					
ANR	1047029	Identifier	core		1045996	0					
ANR	1047030	Identifier	anal		1045996	1					
ANR	1047031	Argument	fcn -> addr		1045996	1					
ANR	1047032	PtrMemberAccess	fcn -> addr		1045996	0					
ANR	1047033	Identifier	fcn		1045996	0					
ANR	1047034	Identifier	addr		1045996	1					
ANR	1047035	Argument	R_ANAL_VAR_SCOPE_LOCAL		1045996	2					
ANR	1047036	Identifier	R_ANAL_VAR_SCOPE_LOCAL		1045996	0					
ANR	1047037	Argument	var -> kind		1045996	3					
ANR	1047038	PtrMemberAccess	var -> kind		1045996	0					
ANR	1047039	Identifier	var		1045996	0					
ANR	1047040	Identifier	kind		1045996	1					
ANR	1047041	Argument	var -> name		1045996	4					
ANR	1047042	PtrMemberAccess	var -> name		1045996	0					
ANR	1047043	Identifier	var		1045996	0					
ANR	1047044	Identifier	name		1045996	1					
ANR	1047045	Argument	vlink		1045996	5					
ANR	1047046	Identifier	vlink		1045996	0					
ANR	1047047	Argument	false		1045996	6					
ANR	1047048	Identifier	false		1045996	0					
ANR	1047049	ElseStatement	else		1045996	0					
ANR	1047050	IfStatement	if ( slink )		1045996	0					
ANR	1047051	Condition	slink	955:14:27006:27010	1045996	0	True				
ANR	1047052	Identifier	slink		1045996	0					
ANR	1047053	CompoundStatement		119:21:3931:3931	1045996	1					
ANR	1047054	ExpressionStatement	"set_offset_hint ( core , aop , slink , src_addr , at - ret , src_imm )"	956:4:27019:27082	1045996	0	True				
ANR	1047055	CallExpression	"set_offset_hint ( core , aop , slink , src_addr , at - ret , src_imm )"		1045996	0					
ANR	1047056	Callee	set_offset_hint		1045996	0					
ANR	1047057	Identifier	set_offset_hint		1045996	0					
ANR	1047058	ArgumentList	core		1045996	1					
ANR	1047059	Argument	core		1045996	0					
ANR	1047060	Identifier	core		1045996	0					
ANR	1047061	Argument	aop		1045996	1					
ANR	1047062	Identifier	aop		1045996	0					
ANR	1047063	Argument	slink		1045996	2					
ANR	1047064	Identifier	slink		1045996	0					
ANR	1047065	Argument	src_addr		1045996	3					
ANR	1047066	Identifier	src_addr		1045996	0					
ANR	1047067	Argument	at - ret		1045996	4					
ANR	1047068	AdditiveExpression	at - ret		1045996	0		-			
ANR	1047069	Identifier	at		1045996	0					
ANR	1047070	Identifier	ret		1045996	1					
ANR	1047071	Argument	src_imm		1045996	5					
ANR	1047072	Identifier	src_imm		1045996	0					
ANR	1047073	ElseStatement	else		1045996	0					
ANR	1047074	IfStatement	if ( dlink )		1045996	0					
ANR	1047075	Condition	dlink	957:14:27098:27102	1045996	0	True				
ANR	1047076	Identifier	dlink		1045996	0					
ANR	1047077	CompoundStatement		121:21:4023:4023	1045996	1					
ANR	1047078	ExpressionStatement	"set_offset_hint ( core , aop , dlink , dst_addr , at - ret , dst_imm )"	958:4:27111:27174	1045996	0	True				
ANR	1047079	CallExpression	"set_offset_hint ( core , aop , dlink , dst_addr , at - ret , dst_imm )"		1045996	0					
ANR	1047080	Callee	set_offset_hint		1045996	0					
ANR	1047081	Identifier	set_offset_hint		1045996	0					
ANR	1047082	ArgumentList	core		1045996	1					
ANR	1047083	Argument	core		1045996	0					
ANR	1047084	Identifier	core		1045996	0					
ANR	1047085	Argument	aop		1045996	1					
ANR	1047086	Identifier	aop		1045996	0					
ANR	1047087	Argument	dlink		1045996	2					
ANR	1047088	Identifier	dlink		1045996	0					
ANR	1047089	Argument	dst_addr		1045996	3					
ANR	1047090	Identifier	dst_addr		1045996	0					
ANR	1047091	Argument	at - ret		1045996	4					
ANR	1047092	AdditiveExpression	at - ret		1045996	0		-			
ANR	1047093	Identifier	at		1045996	0					
ANR	1047094	Identifier	ret		1045996	1					
ANR	1047095	Argument	dst_imm		1045996	5					
ANR	1047096	Identifier	dst_imm		1045996	0					
ANR	1047097	IfStatement	if ( r_anal_op_nonlinear ( aop . type ) )		1045996	20					
ANR	1047098	Condition	r_anal_op_nonlinear ( aop . type )	960:7:27188:27217	1045996	0	True				
ANR	1047099	CallExpression	r_anal_op_nonlinear ( aop . type )		1045996	0					
ANR	1047100	Callee	r_anal_op_nonlinear		1045996	0					
ANR	1047101	Identifier	r_anal_op_nonlinear		1045996	0					
ANR	1047102	ArgumentList	aop . type		1045996	1					
ANR	1047103	Argument	aop . type		1045996	0					
ANR	1047104	MemberAccess	aop . type		1045996	0					
ANR	1047105	Identifier	aop		1045996	0					
ANR	1047106	Identifier	type		1045996	1					
ANR	1047107	CompoundStatement		124:39:4138:4138	1045996	1					
ANR	1047108	ExpressionStatement	"r_reg_set_value ( esil -> anal -> reg , pc , at )"	961:4:27226:27267	1045996	0	True				
ANR	1047109	CallExpression	"r_reg_set_value ( esil -> anal -> reg , pc , at )"		1045996	0					
ANR	1047110	Callee	r_reg_set_value		1045996	0					
ANR	1047111	Identifier	r_reg_set_value		1045996	0					
ANR	1047112	ArgumentList	esil -> anal -> reg		1045996	1					
ANR	1047113	Argument	esil -> anal -> reg		1045996	0					
ANR	1047114	PtrMemberAccess	esil -> anal -> reg		1045996	0					
ANR	1047115	PtrMemberAccess	esil -> anal		1045996	0					
ANR	1047116	Identifier	esil		1045996	0					
ANR	1047117	Identifier	anal		1045996	1					
ANR	1047118	Identifier	reg		1045996	1					
ANR	1047119	Argument	pc		1045996	1					
ANR	1047120	Identifier	pc		1045996	0					
ANR	1047121	Argument	at		1045996	2					
ANR	1047122	Identifier	at		1045996	0					
ANR	1047123	ExpressionStatement	"set_retval ( core , at - ret )"	962:4:27273:27300	1045996	1	True				
ANR	1047124	CallExpression	"set_retval ( core , at - ret )"		1045996	0					
ANR	1047125	Callee	set_retval		1045996	0					
ANR	1047126	Identifier	set_retval		1045996	0					
ANR	1047127	ArgumentList	core		1045996	1					
ANR	1047128	Argument	core		1045996	0					
ANR	1047129	Identifier	core		1045996	0					
ANR	1047130	Argument	at - ret		1045996	1					
ANR	1047131	AdditiveExpression	at - ret		1045996	0		-			
ANR	1047132	Identifier	at		1045996	0					
ANR	1047133	Identifier	ret		1045996	1					
ANR	1047134	ElseStatement	else		1045996	0					
ANR	1047135	CompoundStatement		127:10:4230:4230	1045996	0					
ANR	1047136	ExpressionStatement	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"	964:4:27318:27370	1045996	0	True				
ANR	1047137	CallExpression	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"		1045996	0					
ANR	1047138	Callee	r_core_esil_step		1045996	0					
ANR	1047139	Identifier	r_core_esil_step		1045996	0					
ANR	1047140	ArgumentList	core		1045996	1					
ANR	1047141	Argument	core		1045996	0					
ANR	1047142	Identifier	core		1045996	0					
ANR	1047143	Argument	UT64_MAX		1045996	1					
ANR	1047144	Identifier	UT64_MAX		1045996	0					
ANR	1047145	Argument	NULL		1045996	2					
ANR	1047146	Identifier	NULL		1045996	0					
ANR	1047147	Argument	NULL		1045996	3					
ANR	1047148	Identifier	NULL		1045996	0					
ANR	1047149	Argument	false		1045996	4					
ANR	1047150	Identifier	false		1045996	0					
ANR	1047151	ExpressionStatement	free ( dlink )	966:3:27380:27392	1045996	21	True				
ANR	1047152	CallExpression	free ( dlink )		1045996	0					
ANR	1047153	Callee	free		1045996	0					
ANR	1047154	Identifier	free		1045996	0					
ANR	1047155	ArgumentList	dlink		1045996	1					
ANR	1047156	Argument	dlink		1045996	0					
ANR	1047157	Identifier	dlink		1045996	0					
ANR	1047158	ExpressionStatement	free ( vlink )	967:3:27397:27409	1045996	22	True				
ANR	1047159	CallExpression	free ( vlink )		1045996	0					
ANR	1047160	Callee	free		1045996	0					
ANR	1047161	Identifier	free		1045996	0					
ANR	1047162	ArgumentList	vlink		1045996	1					
ANR	1047163	Argument	vlink		1045996	0					
ANR	1047164	Identifier	vlink		1045996	0					
ANR	1047165	ExpressionStatement	free ( slink )	968:3:27414:27426	1045996	23	True				
ANR	1047166	CallExpression	free ( slink )		1045996	0					
ANR	1047167	Callee	free		1045996	0					
ANR	1047168	Identifier	free		1045996	0					
ANR	1047169	ArgumentList	slink		1045996	1					
ANR	1047170	Argument	slink		1045996	0					
ANR	1047171	Identifier	slink		1045996	0					
ANR	1047172	ExpressionStatement	r_anal_op_fini ( & aop )	969:3:27431:27452	1045996	24	True				
ANR	1047173	CallExpression	r_anal_op_fini ( & aop )		1045996	0					
ANR	1047174	Callee	r_anal_op_fini		1045996	0					
ANR	1047175	Identifier	r_anal_op_fini		1045996	0					
ANR	1047176	ArgumentList	& aop		1045996	1					
ANR	1047177	Argument	& aop		1045996	0					
ANR	1047178	UnaryOperationExpression	& aop		1045996	0					
ANR	1047179	UnaryOperator	&		1045996	0					
ANR	1047180	Identifier	aop		1045996	1					
ANR	1047181	Label	beach :	972:0:27461:27466	1045996	43	True				
ANR	1047182	Identifier	beach		1045996	0					
ANR	1047183	ExpressionStatement	"r_core_cmd0 ( core , ""wc-*"" )"	973:1:27469:27495	1045996	44	True				
ANR	1047184	CallExpression	"r_core_cmd0 ( core , ""wc-*"" )"		1045996	0					
ANR	1047185	Callee	r_core_cmd0		1045996	0					
ANR	1047186	Identifier	r_core_cmd0		1045996	0					
ANR	1047187	ArgumentList	core		1045996	1					
ANR	1047188	Argument	core		1045996	0					
ANR	1047189	Identifier	core		1045996	0					
ANR	1047190	Argument	"""wc-*"""		1045996	1					
ANR	1047191	PrimaryExpression	"""wc-*"""		1045996	0					
ANR	1047192	ExpressionStatement	"r_config_set_i ( core -> config , ""io.cache"" , ioCache )"	974:1:27519:27569	1045996	45	True				
ANR	1047193	CallExpression	"r_config_set_i ( core -> config , ""io.cache"" , ioCache )"		1045996	0					
ANR	1047194	Callee	r_config_set_i		1045996	0					
ANR	1047195	Identifier	r_config_set_i		1045996	0					
ANR	1047196	ArgumentList	core -> config		1045996	1					
ANR	1047197	Argument	core -> config		1045996	0					
ANR	1047198	PtrMemberAccess	core -> config		1045996	0					
ANR	1047199	Identifier	core		1045996	0					
ANR	1047200	Identifier	config		1045996	1					
ANR	1047201	Argument	"""io.cache"""		1045996	1					
ANR	1047202	PrimaryExpression	"""io.cache"""		1045996	0					
ANR	1047203	Argument	ioCache		1045996	2					
ANR	1047204	Identifier	ioCache		1045996	0					
ANR	1047205	ExpressionStatement	"r_config_set_i ( core -> config , ""dbg.follow"" , dbg_follow )"	975:1:27572:27627	1045996	46	True				
ANR	1047206	CallExpression	"r_config_set_i ( core -> config , ""dbg.follow"" , dbg_follow )"		1045996	0					
ANR	1047207	Callee	r_config_set_i		1045996	0					
ANR	1047208	Identifier	r_config_set_i		1045996	0					
ANR	1047209	ArgumentList	core -> config		1045996	1					
ANR	1047210	Argument	core -> config		1045996	0					
ANR	1047211	PtrMemberAccess	core -> config		1045996	0					
ANR	1047212	Identifier	core		1045996	0					
ANR	1047213	Identifier	config		1045996	1					
ANR	1047214	Argument	"""dbg.follow"""		1045996	1					
ANR	1047215	PrimaryExpression	"""dbg.follow"""		1045996	0					
ANR	1047216	Argument	dbg_follow		1045996	2					
ANR	1047217	Identifier	dbg_follow		1045996	0					
ANR	1047218	IfStatement	if ( stack_set )		1045996	47					
ANR	1047219	Condition	stack_set	976:5:27634:27642	1045996	0	True				
ANR	1047220	Identifier	stack_set		1045996	0					
ANR	1047221	CompoundStatement		140:16:4563:4563	1045996	1					
ANR	1047222	ExpressionStatement	"r_core_cmd0 ( core , ""aeim-"" )"	977:2:27649:27676	1045996	0	True				
ANR	1047223	CallExpression	"r_core_cmd0 ( core , ""aeim-"" )"		1045996	0					
ANR	1047224	Callee	r_core_cmd0		1045996	0					
ANR	1047225	Identifier	r_core_cmd0		1045996	0					
ANR	1047226	ArgumentList	core		1045996	1					
ANR	1047227	Argument	core		1045996	0					
ANR	1047228	Identifier	core		1045996	0					
ANR	1047229	Argument	"""aeim-"""		1045996	1					
ANR	1047230	PrimaryExpression	"""aeim-"""		1045996	0					
ANR	1047231	ExpressionStatement	"r_core_seek ( core , oldoff , 1 )"	979:1:27682:27711	1045996	48	True				
ANR	1047232	CallExpression	"r_core_seek ( core , oldoff , 1 )"		1045996	0					
ANR	1047233	Callee	r_core_seek		1045996	0					
ANR	1047234	Identifier	r_core_seek		1045996	0					
ANR	1047235	ArgumentList	core		1045996	1					
ANR	1047236	Argument	core		1045996	0					
ANR	1047237	Identifier	core		1045996	0					
ANR	1047238	Argument	oldoff		1045996	1					
ANR	1047239	Identifier	oldoff		1045996	0					
ANR	1047240	Argument	1		1045996	2					
ANR	1047241	PrimaryExpression	1		1045996	0					
ANR	1047242	ExpressionStatement	r_anal_esil_free ( esil )	980:1:27714:27737	1045996	49	True				
ANR	1047243	CallExpression	r_anal_esil_free ( esil )		1045996	0					
ANR	1047244	Callee	r_anal_esil_free		1045996	0					
ANR	1047245	Identifier	r_anal_esil_free		1045996	0					
ANR	1047246	ArgumentList	esil		1045996	1					
ANR	1047247	Argument	esil		1045996	0					
ANR	1047248	Identifier	esil		1045996	0					
ANR	1047249	ExpressionStatement	r_reg_arena_pop ( core -> anal -> reg )	981:1:27740:27773	1045996	50	True				
ANR	1047250	CallExpression	r_reg_arena_pop ( core -> anal -> reg )		1045996	0					
ANR	1047251	Callee	r_reg_arena_pop		1045996	0					
ANR	1047252	Identifier	r_reg_arena_pop		1045996	0					
ANR	1047253	ArgumentList	core -> anal -> reg		1045996	1					
ANR	1047254	Argument	core -> anal -> reg		1045996	0					
ANR	1047255	PtrMemberAccess	core -> anal -> reg		1045996	0					
ANR	1047256	PtrMemberAccess	core -> anal		1045996	0					
ANR	1047257	Identifier	core		1045996	0					
ANR	1047258	Identifier	anal		1045996	1					
ANR	1047259	Identifier	reg		1045996	1					
ANR	1047260	ExpressionStatement	"r_core_cmd0 ( core , "".ar*"" )"	982:1:27776:27802	1045996	51	True				
ANR	1047261	CallExpression	"r_core_cmd0 ( core , "".ar*"" )"		1045996	0					
ANR	1047262	Callee	r_core_cmd0		1045996	0					
ANR	1047263	Identifier	r_core_cmd0		1045996	0					
ANR	1047264	ArgumentList	core		1045996	1					
ANR	1047265	Argument	core		1045996	0					
ANR	1047266	Identifier	core		1045996	0					
ANR	1047267	Argument	""".ar*"""		1045996	1					
ANR	1047268	PrimaryExpression	""".ar*"""		1045996	0					
ANR	1047269	ExpressionStatement	r_cons_break_pop ( )	983:1:27805:27824	1045996	52	True				
ANR	1047270	CallExpression	r_cons_break_pop ( )		1045996	0					
ANR	1047271	Callee	r_cons_break_pop		1045996	0					
ANR	1047272	Identifier	r_cons_break_pop		1045996	0					
ANR	1047273	ArgumentList			1045996	1					
ANR	1047274	ExpressionStatement	free ( buf )	984:1:27827:27837	1045996	53	True				
ANR	1047275	CallExpression	free ( buf )		1045996	0					
ANR	1047276	Callee	free		1045996	0					
ANR	1047277	Identifier	free		1045996	0					
ANR	1047278	ArgumentList	buf		1045996	1					
ANR	1047279	Argument	buf		1045996	0					
ANR	1047280	Identifier	buf		1045996	0					
ANR	1047281	ReturnType	static void		1045996	1					
ANR	1047282	Identifier	link_struct_offset		1045996	2					
ANR	1047283	ParameterList	"RCore * core , RAnalFunction * fcn"		1045996	3					
ANR	1047284	Parameter	RCore * core	837:31:23048:23058	1045996	0	True				
ANR	1047285	ParameterType	RCore *		1045996	0					
ANR	1047286	Identifier	core		1045996	1					
ANR	1047287	Parameter	RAnalFunction * fcn	837:44:23061:23078	1045996	1	True				
ANR	1047288	ParameterType	RAnalFunction *		1045996	0					
ANR	1047289	Identifier	fcn		1045996	1					
ANR	1047290	CFGEntryNode	ENTRY		1045996		True				
ANR	1047291	CFGExitNode	EXIT		1045996		True				
ANR	1047292	Symbol	aop		1045996						
ANR	1047293	Symbol	* fcn		1045996						
ANR	1047294	Symbol	R_REG_NAME_PC		1045996						
ANR	1047295	Symbol	mininstrsz		1045996						
ANR	1047296	Symbol	core -> offset		1045996						
ANR	1047297	Symbol	stacksz		1045996						
ANR	1047298	Symbol	aop . src [ j ] -> delta		1045996						
ANR	1047299	Symbol	* * aop . src		1045996						
ANR	1047300	Symbol	minopcode		1045996						
ANR	1047301	Symbol	addrsize		1045996						
ANR	1047302	Symbol	esil -> anal -> reg		1045996						
ANR	1047303	Symbol	aop . dst -> delta		1045996						
ANR	1047304	Symbol	* esil		1045996						
ANR	1047305	Symbol	r_anal_op		1045996						
ANR	1047306	Symbol	core -> blocksize		1045996						
ANR	1047307	Symbol	aop . ireg		1045996						
ANR	1047308	Symbol	aop . dst -> reg		1045996						
ANR	1047309	Symbol	var		1045996						
ANR	1047310	Symbol	stack_set		1045996						
ANR	1047311	Symbol	index		1045996						
ANR	1047312	Symbol	aop . src		1045996						
ANR	1047313	Symbol	it		1045996						
ANR	1047314	Symbol	iotrap		1045996						
ANR	1047315	Symbol	* * aop . dst		1045996						
ANR	1047316	Symbol	spval		1045996						
ANR	1047317	Symbol	var -> isarg		1045996						
ANR	1047318	Symbol	& aop		1045996						
ANR	1047319	Symbol	at		1045996						
ANR	1047320	Symbol	r_config_get_i		1045996						
ANR	1047321	Symbol	* * * j		1045996						
ANR	1047322	Symbol	bb		1045996						
ANR	1047323	Symbol	pc_name		1045996						
ANR	1047324	Symbol	* core		1045996						
ANR	1047325	Symbol	aop . dst		1045996						
ANR	1047326	Symbol	ioCache		1045996						
ANR	1047327	Symbol	* aop . src [ j ] -> reg		1045996						
ANR	1047328	Symbol	core -> anal		1045996						
ANR	1047329	Symbol	dbg_follow		1045996						
ANR	1047330	Symbol	fcn		1045996						
ANR	1047331	Symbol	* var		1045996						
ANR	1047332	Symbol	r_cons_is_breaked		1045996						
ANR	1047333	Symbol	varpfx		1045996						
ANR	1047334	Symbol	* aop		1045996						
ANR	1047335	Symbol	core -> io		1045996						
ANR	1047336	Symbol	R_REG_TYPE_ALL		1045996						
ANR	1047337	Symbol	* * aop		1045996						
ANR	1047338	Symbol	sp		1045996						
ANR	1047339	Symbol	resolved		1045996						
ANR	1047340	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		1045996						
ANR	1047341	Symbol	malloc		1045996						
ANR	1047342	Symbol	* esil -> anal		1045996						
ANR	1047343	Symbol	oldoff		1045996						
ANR	1047344	Symbol	i		1045996						
ANR	1047345	Symbol	src_addr		1045996						
ANR	1047346	Symbol	j		1045996						
ANR	1047347	Symbol	slink		1045996						
ANR	1047348	Symbol	* * esil		1045996						
ANR	1047349	Symbol	buf		1045996						
ANR	1047350	Symbol	* core -> anal		1045996						
ANR	1047351	Symbol	esil -> anal		1045996						
ANR	1047352	Symbol	R_TYPE_UNION		1045996						
ANR	1047353	Symbol	R_MAX		1045996						
ANR	1047354	Symbol	r_anal_esil_new		1045996						
ANR	1047355	Symbol	fcn -> addr		1045996						
ANR	1047356	Symbol	r_type_link_at		1045996						
ANR	1047357	Symbol	src_imm		1045996						
ANR	1047358	Symbol	r_anal_op_nonlinear		1045996						
ANR	1047359	Symbol	to		1045996						
ANR	1047360	Symbol	esil		1045996						
ANR	1047361	Symbol	* * * aop		1045996						
ANR	1047362	Symbol	core -> anal -> reg		1045996						
ANR	1047363	Symbol	bb -> size		1045996						
ANR	1047364	Symbol	stacksize		1045996						
ANR	1047365	Symbol	r_anal_archinfo		1045996						
ANR	1047366	Symbol	aop . type		1045996						
ANR	1047367	Symbol	bb -> addr		1045996						
ANR	1047368	Symbol	aop . src [ j ] -> reg -> name		1045996						
ANR	1047369	Symbol	* aop . dst		1045996						
ANR	1047370	Symbol	dst_addr		1045996						
ANR	1047371	Symbol	aop . src [ j ] -> reg		1045996						
ANR	1047372	Symbol	curpc		1045996						
ANR	1047373	Symbol	R_ANAL_VAR_SCOPE_LOCAL		1045996						
ANR	1047374	Symbol	r_reg_get		1045996						
ANR	1047375	Symbol	ret		1045996						
ANR	1047376	Symbol	strcmp		1045996						
ANR	1047377	Symbol	* * j		1045996						
ANR	1047378	Symbol	NULL		1045996						
ANR	1047379	Symbol	R_ANAL_OP_MASK_VAL		1045996						
ANR	1047380	Symbol	aop . scale		1045996						
ANR	1047381	Symbol	core		1045996						
ANR	1047382	Symbol	R_REG_NAME_SP		1045996						
ANR	1047383	Symbol	r_reg_get_name		1045996						
ANR	1047384	Symbol	true		1045996						
ANR	1047385	Symbol	var -> name		1045996						
ANR	1047386	Symbol	r_reg_getv		1045996						
ANR	1047387	Symbol	var -> kind		1045996						
ANR	1047388	Symbol	vlink		1045996						
ANR	1047389	Symbol	core -> anal -> sdb_types		1045996						
ANR	1047390	Symbol	TDB		1045996						
ANR	1047391	Symbol	sp_name		1045996						
ANR	1047392	Symbol	* aop . dst -> reg		1045996						
ANR	1047393	Symbol	UT64_MAX		1045996						
ANR	1047394	Symbol	* * core		1045996						
ANR	1047395	Symbol	core -> config		1045996						
ANR	1047396	Symbol	* bb		1045996						
ANR	1047397	Symbol	r_type_kind		1045996						
ANR	1047398	Symbol	false		1045996						
ANR	1047399	Symbol	aop . var		1045996						
ANR	1047400	Symbol	dlink		1045996						
ANR	1047401	Symbol	* aop . src		1045996						
ANR	1047402	Symbol	* * * aop . src		1045996						
ANR	1047403	Symbol	r_core_get_stacksz		1045996						
ANR	1047404	Symbol	pc		1045996						
ANR	1047405	Symbol	dst_imm		1045996						
ANR	1047406	Symbol	* j		1045996						
ANR	1047407	Symbol	aop . dst -> reg -> name		1045996						
ANR	1047408	Symbol	bsize		1045996						
ANR	1047409	Symbol	core -> dbg		1045996						
ANR	1047410	Function	typecmp	987:0:27842:27979							
ANR	1047411	FunctionDef	"typecmp (const void * a , const void * b)"		1047410	0					
ANR	1047412	CompoundStatement		987:49:27891:27979	1047410	0					
ANR	1047413	IdentifierDeclStatement	char * type1 = ( char * ) a ;	988:1:27894:27918	1047410	0	True				
ANR	1047414	IdentifierDecl	* type1 = ( char * ) a		1047410	0					
ANR	1047415	IdentifierDeclType	char *		1047410	0					
ANR	1047416	Identifier	type1		1047410	1					
ANR	1047417	AssignmentExpression	* type1 = ( char * ) a		1047410	2		=			
ANR	1047418	Identifier	type1		1047410	0					
ANR	1047419	CastExpression	( char * ) a		1047410	1					
ANR	1047420	CastTarget	char *		1047410	0					
ANR	1047421	Identifier	a		1047410	1					
ANR	1047422	IdentifierDeclStatement	char * type2 = ( char * ) b ;	989:1:27921:27945	1047410	1	True				
ANR	1047423	IdentifierDecl	* type2 = ( char * ) b		1047410	0					
ANR	1047424	IdentifierDeclType	char *		1047410	0					
ANR	1047425	Identifier	type2		1047410	1					
ANR	1047426	AssignmentExpression	* type2 = ( char * ) b		1047410	2		=			
ANR	1047427	Identifier	type2		1047410	0					
ANR	1047428	CastExpression	( char * ) b		1047410	1					
ANR	1047429	CastTarget	char *		1047410	0					
ANR	1047430	Identifier	b		1047410	1					
ANR	1047431	ReturnStatement	"return strcmp ( type1 , type2 ) ;"	990:1:27948:27977	1047410	2	True				
ANR	1047432	CallExpression	"strcmp ( type1 , type2 )"		1047410	0					
ANR	1047433	Callee	strcmp		1047410	0					
ANR	1047434	Identifier	strcmp		1047410	0					
ANR	1047435	ArgumentList	type1		1047410	1					
ANR	1047436	Argument	type1		1047410	0					
ANR	1047437	Identifier	type1		1047410	0					
ANR	1047438	Argument	type2		1047410	1					
ANR	1047439	Identifier	type2		1047410	0					
ANR	1047440	ReturnType	static int		1047410	1					
ANR	1047441	Identifier	typecmp		1047410	2					
ANR	1047442	ParameterList	"const void * a , const void * b"		1047410	3					
ANR	1047443	Parameter	const void * a	987:19:27861:27873	1047410	0	True				
ANR	1047444	ParameterType	const void *		1047410	0					
ANR	1047445	Identifier	a		1047410	1					
ANR	1047446	Parameter	const void * b	987:34:27876:27888	1047410	1	True				
ANR	1047447	ParameterType	const void *		1047410	0					
ANR	1047448	Identifier	b		1047410	1					
ANR	1047449	CFGEntryNode	ENTRY		1047410		True				
ANR	1047450	CFGExitNode	EXIT		1047410		True				
ANR	1047451	Symbol	strcmp		1047410						
ANR	1047452	Symbol	a		1047410						
ANR	1047453	Symbol	b		1047410						
ANR	1047454	Symbol	type2		1047410						
ANR	1047455	Symbol	type1		1047410						
ANR	1047456	Function	get_uniq_type	993:0:27982:28359							
ANR	1047457	FunctionDef	"get_uniq_type (RCore * core , RAnalFunction * fcn)"		1047456	0					
ANR	1047458	CompoundStatement		993:61:28043:28359	1047456	0					
ANR	1047459	IdentifierDeclStatement	RListIter * iter ;	994:1:28046:28061	1047456	0	True				
ANR	1047460	IdentifierDecl	* iter		1047456	0					
ANR	1047461	IdentifierDeclType	RListIter *		1047456	0					
ANR	1047462	Identifier	iter		1047456	1					
ANR	1047463	IdentifierDeclStatement	RAnalVar * var ;	995:1:28064:28077	1047456	1	True				
ANR	1047464	IdentifierDecl	* var		1047456	0					
ANR	1047465	IdentifierDeclType	RAnalVar *		1047456	0					
ANR	1047466	Identifier	var		1047456	1					
ANR	1047467	IdentifierDeclStatement	"RList * list = r_anal_var_all_list ( core -> anal , fcn ) ;"	996:1:28080:28131	1047456	2	True				
ANR	1047468	IdentifierDecl	"* list = r_anal_var_all_list ( core -> anal , fcn )"		1047456	0					
ANR	1047469	IdentifierDeclType	RList *		1047456	0					
ANR	1047470	Identifier	list		1047456	1					
ANR	1047471	AssignmentExpression	"* list = r_anal_var_all_list ( core -> anal , fcn )"		1047456	2		=			
ANR	1047472	Identifier	list		1047456	0					
ANR	1047473	CallExpression	"r_anal_var_all_list ( core -> anal , fcn )"		1047456	1					
ANR	1047474	Callee	r_anal_var_all_list		1047456	0					
ANR	1047475	Identifier	r_anal_var_all_list		1047456	0					
ANR	1047476	ArgumentList	core -> anal		1047456	1					
ANR	1047477	Argument	core -> anal		1047456	0					
ANR	1047478	PtrMemberAccess	core -> anal		1047456	0					
ANR	1047479	Identifier	core		1047456	0					
ANR	1047480	Identifier	anal		1047456	1					
ANR	1047481	Argument	fcn		1047456	1					
ANR	1047482	Identifier	fcn		1047456	0					
ANR	1047483	IdentifierDeclStatement	RList * type_used = r_list_new ( ) ;	997:8:28141:28173	1047456	3	True				
ANR	1047484	IdentifierDecl	* type_used = r_list_new ( )		1047456	0					
ANR	1047485	IdentifierDeclType	RList *		1047456	0					
ANR	1047486	Identifier	type_used		1047456	1					
ANR	1047487	AssignmentExpression	* type_used = r_list_new ( )		1047456	2		=			
ANR	1047488	Identifier	type_used		1047456	0					
ANR	1047489	CallExpression	r_list_new ( )		1047456	1					
ANR	1047490	Callee	r_list_new		1047456	0					
ANR	1047491	Identifier	r_list_new		1047456	0					
ANR	1047492	ArgumentList			1047456	1					
ANR	1047493	Statement	r_list_foreach	998:8:28183:28196	1047456	4	True				
ANR	1047494	Statement	(	998:23:28198:28198	1047456	5	True				
ANR	1047495	Statement	list	998:24:28199:28202	1047456	6	True				
ANR	1047496	Statement	","	998:28:28203:28203	1047456	7	True				
ANR	1047497	Statement	iter	998:30:28205:28208	1047456	8	True				
ANR	1047498	Statement	","	998:34:28209:28209	1047456	9	True				
ANR	1047499	Statement	var	998:36:28211:28213	1047456	10	True				
ANR	1047500	Statement	)	998:39:28214:28214	1047456	11	True				
ANR	1047501	CompoundStatement		6:41:172:172	1047456	12					
ANR	1047502	ExpressionStatement	"r_list_append ( type_used , var -> type )"	999:2:28220:28257	1047456	0	True				
ANR	1047503	CallExpression	"r_list_append ( type_used , var -> type )"		1047456	0					
ANR	1047504	Callee	r_list_append		1047456	0					
ANR	1047505	Identifier	r_list_append		1047456	0					
ANR	1047506	ArgumentList	type_used		1047456	1					
ANR	1047507	Argument	type_used		1047456	0					
ANR	1047508	Identifier	type_used		1047456	0					
ANR	1047509	Argument	var -> type		1047456	1					
ANR	1047510	PtrMemberAccess	var -> type		1047456	0					
ANR	1047511	Identifier	var		1047456	0					
ANR	1047512	Identifier	type		1047456	1					
ANR	1047513	IdentifierDeclStatement	"RList * uniq = r_list_uniq ( type_used , typecmp ) ;"	1001:1:28270:28317	1047456	13	True				
ANR	1047514	IdentifierDecl	"* uniq = r_list_uniq ( type_used , typecmp )"		1047456	0					
ANR	1047515	IdentifierDeclType	RList *		1047456	0					
ANR	1047516	Identifier	uniq		1047456	1					
ANR	1047517	AssignmentExpression	"* uniq = r_list_uniq ( type_used , typecmp )"		1047456	2		=			
ANR	1047518	Identifier	uniq		1047456	0					
ANR	1047519	CallExpression	"r_list_uniq ( type_used , typecmp )"		1047456	1					
ANR	1047520	Callee	r_list_uniq		1047456	0					
ANR	1047521	Identifier	r_list_uniq		1047456	0					
ANR	1047522	ArgumentList	type_used		1047456	1					
ANR	1047523	Argument	type_used		1047456	0					
ANR	1047524	Identifier	type_used		1047456	0					
ANR	1047525	Argument	typecmp		1047456	1					
ANR	1047526	Identifier	typecmp		1047456	0					
ANR	1047527	ExpressionStatement	r_list_free ( type_used )	1002:1:28320:28343	1047456	14	True				
ANR	1047528	CallExpression	r_list_free ( type_used )		1047456	0					
ANR	1047529	Callee	r_list_free		1047456	0					
ANR	1047530	Identifier	r_list_free		1047456	0					
ANR	1047531	ArgumentList	type_used		1047456	1					
ANR	1047532	Argument	type_used		1047456	0					
ANR	1047533	Identifier	type_used		1047456	0					
ANR	1047534	ReturnStatement	return uniq ;	1003:1:28346:28357	1047456	15	True				
ANR	1047535	Identifier	uniq		1047456	0					
ANR	1047536	ReturnType	static RList *		1047456	1					
ANR	1047537	Identifier	get_uniq_type		1047456	2					
ANR	1047538	ParameterList	"RCore * core , RAnalFunction * fcn"		1047456	3					
ANR	1047539	Parameter	RCore * core	993:28:28010:28020	1047456	0	True				
ANR	1047540	ParameterType	RCore *		1047456	0					
ANR	1047541	Identifier	core		1047456	1					
ANR	1047542	Parameter	RAnalFunction * fcn	993:41:28023:28040	1047456	1	True				
ANR	1047543	ParameterType	RAnalFunction *		1047456	0					
ANR	1047544	Identifier	fcn		1047456	1					
ANR	1047545	CFGEntryNode	ENTRY		1047456		True				
ANR	1047546	CFGExitNode	EXIT		1047456		True				
ANR	1047547	Symbol	r_anal_var_all_list		1047456						
ANR	1047548	Symbol	var		1047456						
ANR	1047549	Symbol	* core		1047456						
ANR	1047550	Symbol	iter		1047456						
ANR	1047551	Symbol	typecmp		1047456						
ANR	1047552	Symbol	var -> type		1047456						
ANR	1047553	Symbol	list		1047456						
ANR	1047554	Symbol	core -> anal		1047456						
ANR	1047555	Symbol	fcn		1047456						
ANR	1047556	Symbol	core		1047456						
ANR	1047557	Symbol	* var		1047456						
ANR	1047558	Symbol	r_list_uniq		1047456						
ANR	1047559	Symbol	type_used		1047456						
ANR	1047560	Symbol	uniq		1047456						
ANR	1047561	Symbol	r_list_new		1047456						
ANR	1047562	Function	cmd_type	1006:0:28362:50716							
ANR	1047563	FunctionDef	"cmd_type (void * data , const char * input)"		1047562	0					
ANR	1047564	CompoundStatement		1006:51:28413:50716	1047562	0					
ANR	1047565	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1007:1:28416:28443	1047562	0	True				
ANR	1047566	IdentifierDecl	* core = ( RCore * ) data		1047562	0					
ANR	1047567	IdentifierDeclType	RCore *		1047562	0					
ANR	1047568	Identifier	core		1047562	1					
ANR	1047569	AssignmentExpression	* core = ( RCore * ) data		1047562	2		=			
ANR	1047570	Identifier	core		1047562	0					
ANR	1047571	CastExpression	( RCore * ) data		1047562	1					
ANR	1047572	CastTarget	RCore *		1047562	0					
ANR	1047573	Identifier	data		1047562	1					
ANR	1047574	IdentifierDeclStatement	Sdb * TDB = core -> anal -> sdb_types ;	1008:1:28446:28478	1047562	1	True				
ANR	1047575	IdentifierDecl	* TDB = core -> anal -> sdb_types		1047562	0					
ANR	1047576	IdentifierDeclType	Sdb *		1047562	0					
ANR	1047577	Identifier	TDB		1047562	1					
ANR	1047578	AssignmentExpression	* TDB = core -> anal -> sdb_types		1047562	2		=			
ANR	1047579	Identifier	TDB		1047562	0					
ANR	1047580	PtrMemberAccess	core -> anal -> sdb_types		1047562	1					
ANR	1047581	PtrMemberAccess	core -> anal		1047562	0					
ANR	1047582	Identifier	core		1047562	0					
ANR	1047583	Identifier	anal		1047562	1					
ANR	1047584	Identifier	sdb_types		1047562	1					
ANR	1047585	IdentifierDeclStatement	char * res ;	1009:1:28481:28490	1047562	2	True				
ANR	1047586	IdentifierDecl	* res		1047562	0					
ANR	1047587	IdentifierDeclType	char *		1047562	0					
ANR	1047588	Identifier	res		1047562	1					
ANR	1047589	ExpressionStatement	TDB_ = TDB	1010:1:28493:28503	1047562	3	True				
ANR	1047590	AssignmentExpression	TDB_ = TDB		1047562	0		=			
ANR	1047591	Identifier	TDB_		1047562	0					
ANR	1047592	Identifier	TDB		1047562	1					
ANR	1047593	SwitchStatement	switch ( input [ 0 ] )		1047562	4					
ANR	1047594	Condition	input [ 0 ]	1012:9:28523:28530	1047562	0	True				
ANR	1047595	ArrayIndexing	input [ 0 ]		1047562	0					
ANR	1047596	Identifier	input		1047562	0					
ANR	1047597	PrimaryExpression	0		1047562	1					
ANR	1047598	CompoundStatement		7:19:119:119	1047562	1					
ANR	1047599	Label	case 'n' :	1013:1:28536:28544	1047562	0	True				
ANR	1047600	ExpressionStatement	"cmd_type_noreturn ( core , input + 1 )"	1014:2:28556:28591	1047562	1	True				
ANR	1047601	CallExpression	"cmd_type_noreturn ( core , input + 1 )"		1047562	0					
ANR	1047602	Callee	cmd_type_noreturn		1047562	0					
ANR	1047603	Identifier	cmd_type_noreturn		1047562	0					
ANR	1047604	ArgumentList	core		1047562	1					
ANR	1047605	Argument	core		1047562	0					
ANR	1047606	Identifier	core		1047562	0					
ANR	1047607	Argument	input + 1		1047562	1					
ANR	1047608	AdditiveExpression	input + 1		1047562	0		+			
ANR	1047609	Identifier	input		1047562	0					
ANR	1047610	PrimaryExpression	1		1047562	1					
ANR	1047611	BreakStatement	break ;	1015:2:28595:28600	1047562	2	True				
ANR	1047612	Label	case 'u' :	1017:1:28650:28658	1047562	3	True				
ANR	1047613	CompoundStatement		12:11:246:246	1047562	4					
ANR	1047614	SwitchStatement	switch ( input [ 1 ] )		1047562	0					
ANR	1047615	Condition	input [ 1 ]	1018:10:28680:28687	1047562	0	True				
ANR	1047616	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1047617	Identifier	input		1047562	0					
ANR	1047618	PrimaryExpression	1		1047562	1					
ANR	1047619	CompoundStatement		13:20:276:276	1047562	1					
ANR	1047620	Label	case '?' :	1019:2:28694:28702	1047562	0	True				
ANR	1047621	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tu )"	1020:3:28707:28742	1047562	1	True				
ANR	1047622	CallExpression	"r_core_cmd_help ( core , help_msg_tu )"		1047562	0					
ANR	1047623	Callee	r_core_cmd_help		1047562	0					
ANR	1047624	Identifier	r_core_cmd_help		1047562	0					
ANR	1047625	ArgumentList	core		1047562	1					
ANR	1047626	Argument	core		1047562	0					
ANR	1047627	Identifier	core		1047562	0					
ANR	1047628	Argument	help_msg_tu		1047562	1					
ANR	1047629	Identifier	help_msg_tu		1047562	0					
ANR	1047630	BreakStatement	break ;	1021:3:28747:28752	1047562	2	True				
ANR	1047631	Label	case '*' :	1022:2:28756:28764	1047562	3	True				
ANR	1047632	IfStatement	if ( input [ 2 ] == ' ' )		1047562	4					
ANR	1047633	Condition	input [ 2 ] == ' '	1023:7:28773:28787	1047562	0	True				
ANR	1047634	EqualityExpression	input [ 2 ] == ' '		1047562	0		==			
ANR	1047635	ArrayIndexing	input [ 2 ]		1047562	0					
ANR	1047636	Identifier	input		1047562	0					
ANR	1047637	PrimaryExpression	2		1047562	1					
ANR	1047638	PrimaryExpression	' '		1047562	1					
ANR	1047639	CompoundStatement		18:24:376:376	1047562	1					
ANR	1047640	ExpressionStatement	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 1 )"	1024:4:28796:28843	1047562	0	True				
ANR	1047641	CallExpression	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 1 )"		1047562	0					
ANR	1047642	Callee	showFormat		1047562	0					
ANR	1047643	Identifier	showFormat		1047562	0					
ANR	1047644	ArgumentList	core		1047562	1					
ANR	1047645	Argument	core		1047562	0					
ANR	1047646	Identifier	core		1047562	0					
ANR	1047647	Argument	r_str_trim_ro ( input + 2 )		1047562	1					
ANR	1047648	CallExpression	r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1047649	Callee	r_str_trim_ro		1047562	0					
ANR	1047650	Identifier	r_str_trim_ro		1047562	0					
ANR	1047651	ArgumentList	input + 2		1047562	1					
ANR	1047652	Argument	input + 2		1047562	0					
ANR	1047653	AdditiveExpression	input + 2		1047562	0		+			
ANR	1047654	Identifier	input		1047562	0					
ANR	1047655	PrimaryExpression	2		1047562	1					
ANR	1047656	Argument	1		1047562	2					
ANR	1047657	PrimaryExpression	1		1047562	0					
ANR	1047658	ElseStatement	else		1047562	0					
ANR	1047659	CompoundStatement		23:4:534:543	1047562	0					
ANR	1047660	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list_filter ( TDB , stdifunion , true ) ;"	1026:4:28861:28921	1047562	0	True				
ANR	1047661	IdentifierDecl	"* l = sdb_foreach_list_filter ( TDB , stdifunion , true )"		1047562	0					
ANR	1047662	IdentifierDeclType	SdbList *		1047562	0					
ANR	1047663	Identifier	l		1047562	1					
ANR	1047664	AssignmentExpression	"* l = sdb_foreach_list_filter ( TDB , stdifunion , true )"		1047562	2		=			
ANR	1047665	Identifier	l		1047562	0					
ANR	1047666	CallExpression	"sdb_foreach_list_filter ( TDB , stdifunion , true )"		1047562	1					
ANR	1047667	Callee	sdb_foreach_list_filter		1047562	0					
ANR	1047668	Identifier	sdb_foreach_list_filter		1047562	0					
ANR	1047669	ArgumentList	TDB		1047562	1					
ANR	1047670	Argument	TDB		1047562	0					
ANR	1047671	Identifier	TDB		1047562	0					
ANR	1047672	Argument	stdifunion		1047562	1					
ANR	1047673	Identifier	stdifunion		1047562	0					
ANR	1047674	Argument	true		1047562	2					
ANR	1047675	Identifier	true		1047562	0					
ANR	1047676	IdentifierDeclStatement	SdbListIter * it ;	1027:4:28927:28942	1047562	1	True				
ANR	1047677	IdentifierDecl	* it		1047562	0					
ANR	1047678	IdentifierDeclType	SdbListIter *		1047562	0					
ANR	1047679	Identifier	it		1047562	1					
ANR	1047680	IdentifierDeclStatement	SdbKv * kv ;	1028:4:28948:28957	1047562	2	True				
ANR	1047681	IdentifierDecl	* kv		1047562	0					
ANR	1047682	IdentifierDeclType	SdbKv *		1047562	0					
ANR	1047683	Identifier	kv		1047562	1					
ANR	1047684	Statement	ls_foreach	1029:4:28963:28972	1047562	3	True				
ANR	1047685	Statement	(	1029:15:28974:28974	1047562	4	True				
ANR	1047686	Statement	l	1029:16:28975:28975	1047562	5	True				
ANR	1047687	Statement	","	1029:17:28976:28976	1047562	6	True				
ANR	1047688	Statement	it	1029:19:28978:28979	1047562	7	True				
ANR	1047689	Statement	","	1029:21:28980:28980	1047562	8	True				
ANR	1047690	Statement	kv	1029:23:28982:28983	1047562	9	True				
ANR	1047691	Statement	)	1029:25:28984:28984	1047562	10	True				
ANR	1047692	CompoundStatement		24:27:572:572	1047562	11					
ANR	1047693	ExpressionStatement	"showFormat ( core , sdbkv_key ( kv ) , 1 )"	1030:5:28993:29029	1047562	0	True				
ANR	1047694	CallExpression	"showFormat ( core , sdbkv_key ( kv ) , 1 )"		1047562	0					
ANR	1047695	Callee	showFormat		1047562	0					
ANR	1047696	Identifier	showFormat		1047562	0					
ANR	1047697	ArgumentList	core		1047562	1					
ANR	1047698	Argument	core		1047562	0					
ANR	1047699	Identifier	core		1047562	0					
ANR	1047700	Argument	sdbkv_key ( kv )		1047562	1					
ANR	1047701	CallExpression	sdbkv_key ( kv )		1047562	0					
ANR	1047702	Callee	sdbkv_key		1047562	0					
ANR	1047703	Identifier	sdbkv_key		1047562	0					
ANR	1047704	ArgumentList	kv		1047562	1					
ANR	1047705	Argument	kv		1047562	0					
ANR	1047706	Identifier	kv		1047562	0					
ANR	1047707	Argument	1		1047562	2					
ANR	1047708	PrimaryExpression	1		1047562	0					
ANR	1047709	ExpressionStatement	ls_free ( l )	1032:4:29041:29052	1047562	12	True				
ANR	1047710	CallExpression	ls_free ( l )		1047562	0					
ANR	1047711	Callee	ls_free		1047562	0					
ANR	1047712	Identifier	ls_free		1047562	0					
ANR	1047713	ArgumentList	l		1047562	1					
ANR	1047714	Argument	l		1047562	0					
ANR	1047715	Identifier	l		1047562	0					
ANR	1047716	BreakStatement	break ;	1034:3:29062:29067	1047562	5	True				
ANR	1047717	Label	case 'j' :	1035:2:29071:29079	1047562	6	True				
ANR	1047718	IfStatement	if ( input [ 2 ] )		1047562	7					
ANR	1047719	Condition	input [ 2 ]	1036:7:29097:29104	1047562	0	True				
ANR	1047720	ArrayIndexing	input [ 2 ]		1047562	0					
ANR	1047721	Identifier	input		1047562	0					
ANR	1047722	PrimaryExpression	2		1047562	1					
ANR	1047723	CompoundStatement		31:17:693:693	1047562	1					
ANR	1047724	ExpressionStatement	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 'j' )"	1037:4:29113:29162	1047562	0	True				
ANR	1047725	CallExpression	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 'j' )"		1047562	0					
ANR	1047726	Callee	showFormat		1047562	0					
ANR	1047727	Identifier	showFormat		1047562	0					
ANR	1047728	ArgumentList	core		1047562	1					
ANR	1047729	Argument	core		1047562	0					
ANR	1047730	Identifier	core		1047562	0					
ANR	1047731	Argument	r_str_trim_ro ( input + 2 )		1047562	1					
ANR	1047732	CallExpression	r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1047733	Callee	r_str_trim_ro		1047562	0					
ANR	1047734	Identifier	r_str_trim_ro		1047562	0					
ANR	1047735	ArgumentList	input + 2		1047562	1					
ANR	1047736	Argument	input + 2		1047562	0					
ANR	1047737	AdditiveExpression	input + 2		1047562	0		+			
ANR	1047738	Identifier	input		1047562	0					
ANR	1047739	PrimaryExpression	2		1047562	1					
ANR	1047740	Argument	'j'		1047562	2					
ANR	1047741	PrimaryExpression	'j'		1047562	0					
ANR	1047742	ExpressionStatement	r_cons_newline ( )	1038:4:29168:29185	1047562	1	True				
ANR	1047743	CallExpression	r_cons_newline ( )		1047562	0					
ANR	1047744	Callee	r_cons_newline		1047562	0					
ANR	1047745	Identifier	r_cons_newline		1047562	0					
ANR	1047746	ArgumentList			1047562	1					
ANR	1047747	ElseStatement	else		1047562	0					
ANR	1047748	CompoundStatement		34:10:783:783	1047562	0					
ANR	1047749	ExpressionStatement	"print_struct_union_list_json ( TDB , stdifunion )"	1040:4:29203:29249	1047562	0	True				
ANR	1047750	CallExpression	"print_struct_union_list_json ( TDB , stdifunion )"		1047562	0					
ANR	1047751	Callee	print_struct_union_list_json		1047562	0					
ANR	1047752	Identifier	print_struct_union_list_json		1047562	0					
ANR	1047753	ArgumentList	TDB		1047562	1					
ANR	1047754	Argument	TDB		1047562	0					
ANR	1047755	Identifier	TDB		1047562	0					
ANR	1047756	Argument	stdifunion		1047562	1					
ANR	1047757	Identifier	stdifunion		1047562	0					
ANR	1047758	BreakStatement	break ;	1042:3:29259:29264	1047562	8	True				
ANR	1047759	Label	case 'c' :	1043:2:29268:29276	1047562	9	True				
ANR	1047760	ExpressionStatement	"print_struct_union_in_c_format ( TDB , stdifunion , r_str_trim_ro ( input + 2 ) , true )"	1044:3:29281:29362	1047562	10	True				
ANR	1047761	CallExpression	"print_struct_union_in_c_format ( TDB , stdifunion , r_str_trim_ro ( input + 2 ) , true )"		1047562	0					
ANR	1047762	Callee	print_struct_union_in_c_format		1047562	0					
ANR	1047763	Identifier	print_struct_union_in_c_format		1047562	0					
ANR	1047764	ArgumentList	TDB		1047562	1					
ANR	1047765	Argument	TDB		1047562	0					
ANR	1047766	Identifier	TDB		1047562	0					
ANR	1047767	Argument	stdifunion		1047562	1					
ANR	1047768	Identifier	stdifunion		1047562	0					
ANR	1047769	Argument	r_str_trim_ro ( input + 2 )		1047562	2					
ANR	1047770	CallExpression	r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1047771	Callee	r_str_trim_ro		1047562	0					
ANR	1047772	Identifier	r_str_trim_ro		1047562	0					
ANR	1047773	ArgumentList	input + 2		1047562	1					
ANR	1047774	Argument	input + 2		1047562	0					
ANR	1047775	AdditiveExpression	input + 2		1047562	0		+			
ANR	1047776	Identifier	input		1047562	0					
ANR	1047777	PrimaryExpression	2		1047562	1					
ANR	1047778	Argument	true		1047562	3					
ANR	1047779	Identifier	true		1047562	0					
ANR	1047780	BreakStatement	break ;	1045:3:29367:29372	1047562	11	True				
ANR	1047781	Label	case 'd' :	1046:2:29376:29384	1047562	12	True				
ANR	1047782	ExpressionStatement	"print_struct_union_in_c_format ( TDB , stdifunion , r_str_trim_ro ( input + 2 ) , false )"	1047:3:29389:29471	1047562	13	True				
ANR	1047783	CallExpression	"print_struct_union_in_c_format ( TDB , stdifunion , r_str_trim_ro ( input + 2 ) , false )"		1047562	0					
ANR	1047784	Callee	print_struct_union_in_c_format		1047562	0					
ANR	1047785	Identifier	print_struct_union_in_c_format		1047562	0					
ANR	1047786	ArgumentList	TDB		1047562	1					
ANR	1047787	Argument	TDB		1047562	0					
ANR	1047788	Identifier	TDB		1047562	0					
ANR	1047789	Argument	stdifunion		1047562	1					
ANR	1047790	Identifier	stdifunion		1047562	0					
ANR	1047791	Argument	r_str_trim_ro ( input + 2 )		1047562	2					
ANR	1047792	CallExpression	r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1047793	Callee	r_str_trim_ro		1047562	0					
ANR	1047794	Identifier	r_str_trim_ro		1047562	0					
ANR	1047795	ArgumentList	input + 2		1047562	1					
ANR	1047796	Argument	input + 2		1047562	0					
ANR	1047797	AdditiveExpression	input + 2		1047562	0		+			
ANR	1047798	Identifier	input		1047562	0					
ANR	1047799	PrimaryExpression	2		1047562	1					
ANR	1047800	Argument	false		1047562	3					
ANR	1047801	Identifier	false		1047562	0					
ANR	1047802	BreakStatement	break ;	1048:3:29476:29481	1047562	14	True				
ANR	1047803	Label	case ' ' :	1049:2:29486:29494	1047562	15	True				
ANR	1047804	ExpressionStatement	"showFormat ( core , r_str_trim_ro ( input + 1 ) , 0 )"	1050:3:29499:29546	1047562	16	True				
ANR	1047805	CallExpression	"showFormat ( core , r_str_trim_ro ( input + 1 ) , 0 )"		1047562	0					
ANR	1047806	Callee	showFormat		1047562	0					
ANR	1047807	Identifier	showFormat		1047562	0					
ANR	1047808	ArgumentList	core		1047562	1					
ANR	1047809	Argument	core		1047562	0					
ANR	1047810	Identifier	core		1047562	0					
ANR	1047811	Argument	r_str_trim_ro ( input + 1 )		1047562	1					
ANR	1047812	CallExpression	r_str_trim_ro ( input + 1 )		1047562	0					
ANR	1047813	Callee	r_str_trim_ro		1047562	0					
ANR	1047814	Identifier	r_str_trim_ro		1047562	0					
ANR	1047815	ArgumentList	input + 1		1047562	1					
ANR	1047816	Argument	input + 1		1047562	0					
ANR	1047817	AdditiveExpression	input + 1		1047562	0		+			
ANR	1047818	Identifier	input		1047562	0					
ANR	1047819	PrimaryExpression	1		1047562	1					
ANR	1047820	Argument	0		1047562	2					
ANR	1047821	PrimaryExpression	0		1047562	0					
ANR	1047822	BreakStatement	break ;	1051:3:29551:29556	1047562	17	True				
ANR	1047823	Label	case 0 :	1052:2:29560:29566	1047562	18	True				
ANR	1047824	ExpressionStatement	"print_keys ( TDB , core , stdifunion , printkey_cb , false )"	1053:3:29571:29625	1047562	19	True				
ANR	1047825	CallExpression	"print_keys ( TDB , core , stdifunion , printkey_cb , false )"		1047562	0					
ANR	1047826	Callee	print_keys		1047562	0					
ANR	1047827	Identifier	print_keys		1047562	0					
ANR	1047828	ArgumentList	TDB		1047562	1					
ANR	1047829	Argument	TDB		1047562	0					
ANR	1047830	Identifier	TDB		1047562	0					
ANR	1047831	Argument	core		1047562	1					
ANR	1047832	Identifier	core		1047562	0					
ANR	1047833	Argument	stdifunion		1047562	2					
ANR	1047834	Identifier	stdifunion		1047562	0					
ANR	1047835	Argument	printkey_cb		1047562	3					
ANR	1047836	Identifier	printkey_cb		1047562	0					
ANR	1047837	Argument	false		1047562	4					
ANR	1047838	Identifier	false		1047562	0					
ANR	1047839	BreakStatement	break ;	1054:3:29630:29635	1047562	20	True				
ANR	1047840	BreakStatement	break ;	1056:3:29644:29649	1047562	5	True				
ANR	1047841	Label	case 'k' :	1057:1:29652:29660	1047562	6	True				
ANR	1047842	ExpressionStatement	"res = ( input [ 1 ] == ' ' ) ? sdb_querys ( TDB , NULL , - 1 , input + 2 ) : sdb_querys ( TDB , NULL , - 1 , ""*"" )"	1058:2:29672:29775	1047562	7	True				
ANR	1047843	AssignmentExpression	"res = ( input [ 1 ] == ' ' ) ? sdb_querys ( TDB , NULL , - 1 , input + 2 ) : sdb_querys ( TDB , NULL , - 1 , ""*"" )"		1047562	0		=			
ANR	1047844	Identifier	res		1047562	0					
ANR	1047845	ConditionalExpression	"( input [ 1 ] == ' ' ) ? sdb_querys ( TDB , NULL , - 1 , input + 2 ) : sdb_querys ( TDB , NULL , - 1 , ""*"" )"		1047562	1					
ANR	1047846	Condition	input [ 1 ] == ' '		1047562	0					
ANR	1047847	EqualityExpression	input [ 1 ] == ' '		1047562	0		==			
ANR	1047848	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1047849	Identifier	input		1047562	0					
ANR	1047850	PrimaryExpression	1		1047562	1					
ANR	1047851	PrimaryExpression	' '		1047562	1					
ANR	1047852	CallExpression	"sdb_querys ( TDB , NULL , - 1 , input + 2 )"		1047562	1					
ANR	1047853	Callee	sdb_querys		1047562	0					
ANR	1047854	Identifier	sdb_querys		1047562	0					
ANR	1047855	ArgumentList	TDB		1047562	1					
ANR	1047856	Argument	TDB		1047562	0					
ANR	1047857	Identifier	TDB		1047562	0					
ANR	1047858	Argument	NULL		1047562	1					
ANR	1047859	Identifier	NULL		1047562	0					
ANR	1047860	Argument	- 1		1047562	2					
ANR	1047861	UnaryOperationExpression	- 1		1047562	0					
ANR	1047862	UnaryOperator	-		1047562	0					
ANR	1047863	PrimaryExpression	1		1047562	1					
ANR	1047864	Argument	input + 2		1047562	3					
ANR	1047865	AdditiveExpression	input + 2		1047562	0		+			
ANR	1047866	Identifier	input		1047562	0					
ANR	1047867	PrimaryExpression	2		1047562	1					
ANR	1047868	CallExpression	"sdb_querys ( TDB , NULL , - 1 , ""*"" )"		1047562	2					
ANR	1047869	Callee	sdb_querys		1047562	0					
ANR	1047870	Identifier	sdb_querys		1047562	0					
ANR	1047871	ArgumentList	TDB		1047562	1					
ANR	1047872	Argument	TDB		1047562	0					
ANR	1047873	Identifier	TDB		1047562	0					
ANR	1047874	Argument	NULL		1047562	1					
ANR	1047875	Identifier	NULL		1047562	0					
ANR	1047876	Argument	- 1		1047562	2					
ANR	1047877	UnaryOperationExpression	- 1		1047562	0					
ANR	1047878	UnaryOperator	-		1047562	0					
ANR	1047879	PrimaryExpression	1		1047562	1					
ANR	1047880	Argument	"""*"""		1047562	3					
ANR	1047881	PrimaryExpression	"""*"""		1047562	0					
ANR	1047882	IfStatement	if ( res )		1047562	8					
ANR	1047883	Condition	res	1061:6:29783:29785	1047562	0	True				
ANR	1047884	Identifier	res		1047562	0					
ANR	1047885	CompoundStatement		56:11:1374:1374	1047562	1					
ANR	1047886	ExpressionStatement	r_cons_print ( res )	1062:3:29793:29811	1047562	0	True				
ANR	1047887	CallExpression	r_cons_print ( res )		1047562	0					
ANR	1047888	Callee	r_cons_print		1047562	0					
ANR	1047889	Identifier	r_cons_print		1047562	0					
ANR	1047890	ArgumentList	res		1047562	1					
ANR	1047891	Argument	res		1047562	0					
ANR	1047892	Identifier	res		1047562	0					
ANR	1047893	ExpressionStatement	free ( res )	1063:3:29816:29826	1047562	1	True				
ANR	1047894	CallExpression	free ( res )		1047562	0					
ANR	1047895	Callee	free		1047562	0					
ANR	1047896	Identifier	free		1047562	0					
ANR	1047897	ArgumentList	res		1047562	1					
ANR	1047898	Argument	res		1047562	0					
ANR	1047899	Identifier	res		1047562	0					
ANR	1047900	BreakStatement	break ;	1065:2:29834:29839	1047562	9	True				
ANR	1047901	Label	case 'c' :	1066:1:29842:29850	1047562	10	True				
ANR	1047902	SwitchStatement	switch ( input [ 1 ] )		1047562	11					
ANR	1047903	Condition	input [ 1 ]	1067:10:29870:29877	1047562	0	True				
ANR	1047904	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1047905	Identifier	input		1047562	0					
ANR	1047906	PrimaryExpression	1		1047562	1					
ANR	1047907	CompoundStatement		62:20:1466:1466	1047562	1					
ANR	1047908	Label	case 'c' :	1068:2:29884:29892	1047562	0	True				
ANR	1047909	ExpressionStatement	"__core_cmd_tcc ( core , input + 2 )"	1069:3:29929:29961	1047562	1	True				
ANR	1047910	CallExpression	"__core_cmd_tcc ( core , input + 2 )"		1047562	0					
ANR	1047911	Callee	__core_cmd_tcc		1047562	0					
ANR	1047912	Identifier	__core_cmd_tcc		1047562	0					
ANR	1047913	ArgumentList	core		1047562	1					
ANR	1047914	Argument	core		1047562	0					
ANR	1047915	Identifier	core		1047562	0					
ANR	1047916	Argument	input + 2		1047562	1					
ANR	1047917	AdditiveExpression	input + 2		1047562	0		+			
ANR	1047918	Identifier	input		1047562	0					
ANR	1047919	PrimaryExpression	2		1047562	1					
ANR	1047920	BreakStatement	break ;	1070:3:29966:29971	1047562	2	True				
ANR	1047921	Label	case '?' :	1071:2:29975:29983	1047562	3	True				
ANR	1047922	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tc )"	1072:3:29996:30031	1047562	4	True				
ANR	1047923	CallExpression	"r_core_cmd_help ( core , help_msg_tc )"		1047562	0					
ANR	1047924	Callee	r_core_cmd_help		1047562	0					
ANR	1047925	Identifier	r_core_cmd_help		1047562	0					
ANR	1047926	ArgumentList	core		1047562	1					
ANR	1047927	Argument	core		1047562	0					
ANR	1047928	Identifier	core		1047562	0					
ANR	1047929	Argument	help_msg_tc		1047562	1					
ANR	1047930	Identifier	help_msg_tc		1047562	0					
ANR	1047931	BreakStatement	break ;	1073:3:30036:30041	1047562	5	True				
ANR	1047932	Label	case ' ' :	1074:2:30045:30053	1047562	6	True				
ANR	1047933	CompoundStatement		71:3:1695:1749	1047562	7					
ANR	1047934	IdentifierDeclStatement	const char * type = r_str_trim_ro ( input + 1 ) ;	1075:3:30060:30104	1047562	0	True				
ANR	1047935	IdentifierDecl	* type = r_str_trim_ro ( input + 1 )		1047562	0					
ANR	1047936	IdentifierDeclType	const char *		1047562	0					
ANR	1047937	Identifier	type		1047562	1					
ANR	1047938	AssignmentExpression	* type = r_str_trim_ro ( input + 1 )		1047562	2		=			
ANR	1047939	Identifier	type		1047562	0					
ANR	1047940	CallExpression	r_str_trim_ro ( input + 1 )		1047562	1					
ANR	1047941	Callee	r_str_trim_ro		1047562	0					
ANR	1047942	Identifier	r_str_trim_ro		1047562	0					
ANR	1047943	ArgumentList	input + 1		1047562	1					
ANR	1047944	Argument	input + 1		1047562	0					
ANR	1047945	AdditiveExpression	input + 1		1047562	0		+			
ANR	1047946	Identifier	input		1047562	0					
ANR	1047947	PrimaryExpression	1		1047562	1					
ANR	1047948	IdentifierDeclStatement	"const char * name = type ? strchr ( type , '.' ) + 1 : NULL ;"	1076:3:30109:30163	1047562	1	True				
ANR	1047949	IdentifierDecl	"* name = type ? strchr ( type , '.' ) + 1 : NULL"		1047562	0					
ANR	1047950	IdentifierDeclType	const char *		1047562	0					
ANR	1047951	Identifier	name		1047562	1					
ANR	1047952	AssignmentExpression	"* name = type ? strchr ( type , '.' ) + 1 : NULL"		1047562	2		=			
ANR	1047953	Identifier	name		1047562	0					
ANR	1047954	ConditionalExpression	"type ? strchr ( type , '.' ) + 1 : NULL"		1047562	1					
ANR	1047955	Condition	type		1047562	0					
ANR	1047956	Identifier	type		1047562	0					
ANR	1047957	AdditiveExpression	"strchr ( type , '.' ) + 1"		1047562	1		+			
ANR	1047958	CallExpression	"strchr ( type , '.' )"		1047562	0					
ANR	1047959	Callee	strchr		1047562	0					
ANR	1047960	Identifier	strchr		1047562	0					
ANR	1047961	ArgumentList	type		1047562	1					
ANR	1047962	Argument	type		1047562	0					
ANR	1047963	Identifier	type		1047562	0					
ANR	1047964	Argument	'.'		1047562	1					
ANR	1047965	PrimaryExpression	'.'		1047562	0					
ANR	1047966	PrimaryExpression	1		1047562	1					
ANR	1047967	Identifier	NULL		1047562	2					
ANR	1047968	IfStatement	if ( name && type )		1047562	2					
ANR	1047969	Condition	name && type	1077:7:30172:30183	1047562	0	True				
ANR	1047970	AndExpression	name && type		1047562	0		&&			
ANR	1047971	Identifier	name		1047562	0					
ANR	1047972	Identifier	type		1047562	1					
ANR	1047973	CompoundStatement		72:21:1772:1772	1047562	1					
ANR	1047974	IfStatement	"if ( r_str_startswith ( type , ""struct"" ) )"		1047562	0					
ANR	1047975	Condition	"r_str_startswith ( type , ""struct"" )"	1078:8:30196:30228	1047562	0	True				
ANR	1047976	CallExpression	"r_str_startswith ( type , ""struct"" )"		1047562	0					
ANR	1047977	Callee	r_str_startswith		1047562	0					
ANR	1047978	Identifier	r_str_startswith		1047562	0					
ANR	1047979	ArgumentList	type		1047562	1					
ANR	1047980	Argument	type		1047562	0					
ANR	1047981	Identifier	type		1047562	0					
ANR	1047982	Argument	"""struct"""		1047562	1					
ANR	1047983	PrimaryExpression	"""struct"""		1047562	0					
ANR	1047984	CompoundStatement		73:43:1817:1817	1047562	1					
ANR	1047985	ExpressionStatement	"r_core_cmdf ( core , ""tsc %s"" , name )"	1079:5:30238:30272	1047562	0	True				
ANR	1047986	CallExpression	"r_core_cmdf ( core , ""tsc %s"" , name )"		1047562	0					
ANR	1047987	Callee	r_core_cmdf		1047562	0					
ANR	1047988	Identifier	r_core_cmdf		1047562	0					
ANR	1047989	ArgumentList	core		1047562	1					
ANR	1047990	Argument	core		1047562	0					
ANR	1047991	Identifier	core		1047562	0					
ANR	1047992	Argument	"""tsc %s"""		1047562	1					
ANR	1047993	PrimaryExpression	"""tsc %s"""		1047562	0					
ANR	1047994	Argument	name		1047562	2					
ANR	1047995	Identifier	name		1047562	0					
ANR	1047996	ElseStatement	else		1047562	0					
ANR	1047997	IfStatement	"if ( r_str_startswith ( type , ""union"" ) )"		1047562	0					
ANR	1047998	Condition	"r_str_startswith ( type , ""union"" )"	1080:15:30289:30320	1047562	0	True				
ANR	1047999	CallExpression	"r_str_startswith ( type , ""union"" )"		1047562	0					
ANR	1048000	Callee	r_str_startswith		1047562	0					
ANR	1048001	Identifier	r_str_startswith		1047562	0					
ANR	1048002	ArgumentList	type		1047562	1					
ANR	1048003	Argument	type		1047562	0					
ANR	1048004	Identifier	type		1047562	0					
ANR	1048005	Argument	"""union"""		1047562	1					
ANR	1048006	PrimaryExpression	"""union"""		1047562	0					
ANR	1048007	CompoundStatement		75:49:1909:1909	1047562	1					
ANR	1048008	ExpressionStatement	"r_core_cmdf ( core , ""tuc %s"" , name )"	1081:5:30330:30364	1047562	0	True				
ANR	1048009	CallExpression	"r_core_cmdf ( core , ""tuc %s"" , name )"		1047562	0					
ANR	1048010	Callee	r_core_cmdf		1047562	0					
ANR	1048011	Identifier	r_core_cmdf		1047562	0					
ANR	1048012	ArgumentList	core		1047562	1					
ANR	1048013	Argument	core		1047562	0					
ANR	1048014	Identifier	core		1047562	0					
ANR	1048015	Argument	"""tuc %s"""		1047562	1					
ANR	1048016	PrimaryExpression	"""tuc %s"""		1047562	0					
ANR	1048017	Argument	name		1047562	2					
ANR	1048018	Identifier	name		1047562	0					
ANR	1048019	ElseStatement	else		1047562	0					
ANR	1048020	IfStatement	"if ( r_str_startswith ( type , ""enum"" ) )"		1047562	0					
ANR	1048021	Condition	"r_str_startswith ( type , ""enum"" )"	1082:15:30381:30411	1047562	0	True				
ANR	1048022	CallExpression	"r_str_startswith ( type , ""enum"" )"		1047562	0					
ANR	1048023	Callee	r_str_startswith		1047562	0					
ANR	1048024	Identifier	r_str_startswith		1047562	0					
ANR	1048025	ArgumentList	type		1047562	1					
ANR	1048026	Argument	type		1047562	0					
ANR	1048027	Identifier	type		1047562	0					
ANR	1048028	Argument	"""enum"""		1047562	1					
ANR	1048029	PrimaryExpression	"""enum"""		1047562	0					
ANR	1048030	CompoundStatement		77:48:2000:2000	1047562	1					
ANR	1048031	ExpressionStatement	"r_core_cmdf ( core , ""tec %s"" , name )"	1083:5:30421:30455	1047562	0	True				
ANR	1048032	CallExpression	"r_core_cmdf ( core , ""tec %s"" , name )"		1047562	0					
ANR	1048033	Callee	r_core_cmdf		1047562	0					
ANR	1048034	Identifier	r_core_cmdf		1047562	0					
ANR	1048035	ArgumentList	core		1047562	1					
ANR	1048036	Argument	core		1047562	0					
ANR	1048037	Identifier	core		1047562	0					
ANR	1048038	Argument	"""tec %s"""		1047562	1					
ANR	1048039	PrimaryExpression	"""tec %s"""		1047562	0					
ANR	1048040	Argument	name		1047562	2					
ANR	1048041	Identifier	name		1047562	0					
ANR	1048042	ElseStatement	else		1047562	0					
ANR	1048043	IfStatement	"if ( r_str_startswith ( type , ""typedef"" ) )"		1047562	0					
ANR	1048044	Condition	"r_str_startswith ( type , ""typedef"" )"	1084:15:30472:30505	1047562	0	True				
ANR	1048045	CallExpression	"r_str_startswith ( type , ""typedef"" )"		1047562	0					
ANR	1048046	Callee	r_str_startswith		1047562	0					
ANR	1048047	Identifier	r_str_startswith		1047562	0					
ANR	1048048	ArgumentList	type		1047562	1					
ANR	1048049	Argument	type		1047562	0					
ANR	1048050	Identifier	type		1047562	0					
ANR	1048051	Argument	"""typedef"""		1047562	1					
ANR	1048052	PrimaryExpression	"""typedef"""		1047562	0					
ANR	1048053	CompoundStatement		79:51:2094:2094	1047562	1					
ANR	1048054	ExpressionStatement	"r_core_cmdf ( core , ""ttc %s"" , name )"	1085:5:30515:30549	1047562	0	True				
ANR	1048055	CallExpression	"r_core_cmdf ( core , ""ttc %s"" , name )"		1047562	0					
ANR	1048056	Callee	r_core_cmdf		1047562	0					
ANR	1048057	Identifier	r_core_cmdf		1047562	0					
ANR	1048058	ArgumentList	core		1047562	1					
ANR	1048059	Argument	core		1047562	0					
ANR	1048060	Identifier	core		1047562	0					
ANR	1048061	Argument	"""ttc %s"""		1047562	1					
ANR	1048062	PrimaryExpression	"""ttc %s"""		1047562	0					
ANR	1048063	Argument	name		1047562	2					
ANR	1048064	Identifier	name		1047562	0					
ANR	1048065	ElseStatement	else		1047562	0					
ANR	1048066	IfStatement	"if ( r_str_startswith ( type , ""func"" ) )"		1047562	0					
ANR	1048067	Condition	"r_str_startswith ( type , ""func"" )"	1086:15:30566:30596	1047562	0	True				
ANR	1048068	CallExpression	"r_str_startswith ( type , ""func"" )"		1047562	0					
ANR	1048069	Callee	r_str_startswith		1047562	0					
ANR	1048070	Identifier	r_str_startswith		1047562	0					
ANR	1048071	ArgumentList	type		1047562	1					
ANR	1048072	Argument	type		1047562	0					
ANR	1048073	Identifier	type		1047562	0					
ANR	1048074	Argument	"""func"""		1047562	1					
ANR	1048075	PrimaryExpression	"""func"""		1047562	0					
ANR	1048076	CompoundStatement		81:48:2185:2185	1047562	1					
ANR	1048077	ExpressionStatement	"r_core_cmdf ( core , ""tfc %s"" , name )"	1087:5:30606:30640	1047562	0	True				
ANR	1048078	CallExpression	"r_core_cmdf ( core , ""tfc %s"" , name )"		1047562	0					
ANR	1048079	Callee	r_core_cmdf		1047562	0					
ANR	1048080	Identifier	r_core_cmdf		1047562	0					
ANR	1048081	ArgumentList	core		1047562	1					
ANR	1048082	Argument	core		1047562	0					
ANR	1048083	Identifier	core		1047562	0					
ANR	1048084	Argument	"""tfc %s"""		1047562	1					
ANR	1048085	PrimaryExpression	"""tfc %s"""		1047562	0					
ANR	1048086	Argument	name		1047562	2					
ANR	1048087	Identifier	name		1047562	0					
ANR	1048088	BreakStatement	break ;	1090:3:30656:30661	1047562	3	True				
ANR	1048089	Label	case 0 :	1092:2:30669:30675	1047562	8	True				
ANR	1048090	ExpressionStatement	"r_core_cmd0 ( core , ""tfc;tuc;tsc;ttc;tec"" )"	1093:3:30680:30721	1047562	9	True				
ANR	1048091	CallExpression	"r_core_cmd0 ( core , ""tfc;tuc;tsc;ttc;tec"" )"		1047562	0					
ANR	1048092	Callee	r_core_cmd0		1047562	0					
ANR	1048093	Identifier	r_core_cmd0		1047562	0					
ANR	1048094	ArgumentList	core		1047562	1					
ANR	1048095	Argument	core		1047562	0					
ANR	1048096	Identifier	core		1047562	0					
ANR	1048097	Argument	"""tfc;tuc;tsc;ttc;tec"""		1047562	1					
ANR	1048098	PrimaryExpression	"""tfc;tuc;tsc;ttc;tec"""		1047562	0					
ANR	1048099	BreakStatement	break ;	1094:3:30726:30731	1047562	10	True				
ANR	1048100	Label	case 'd' :	1095:2:30735:30743	1047562	11	True				
ANR	1048101	ExpressionStatement	"r_core_cmd0 ( core , ""tud;tsd;ttc;ted"" )"	1096:3:30748:30785	1047562	12	True				
ANR	1048102	CallExpression	"r_core_cmd0 ( core , ""tud;tsd;ttc;ted"" )"		1047562	0					
ANR	1048103	Callee	r_core_cmd0		1047562	0					
ANR	1048104	Identifier	r_core_cmd0		1047562	0					
ANR	1048105	ArgumentList	core		1047562	1					
ANR	1048106	Argument	core		1047562	0					
ANR	1048107	Identifier	core		1047562	0					
ANR	1048108	Argument	"""tud;tsd;ttc;ted"""		1047562	1					
ANR	1048109	PrimaryExpression	"""tud;tsd;ttc;ted"""		1047562	0					
ANR	1048110	BreakStatement	break ;	1097:3:30790:30795	1047562	13	True				
ANR	1048111	Label	default :	1098:2:30799:30806	1047562	14	True				
ANR	1048112	Identifier	default		1047562	0					
ANR	1048113	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tc )"	1099:3:30811:30846	1047562	15	True				
ANR	1048114	CallExpression	"r_core_cmd_help ( core , help_msg_tc )"		1047562	0					
ANR	1048115	Callee	r_core_cmd_help		1047562	0					
ANR	1048116	Identifier	r_core_cmd_help		1047562	0					
ANR	1048117	ArgumentList	core		1047562	1					
ANR	1048118	Argument	core		1047562	0					
ANR	1048119	Identifier	core		1047562	0					
ANR	1048120	Argument	help_msg_tc		1047562	1					
ANR	1048121	Identifier	help_msg_tc		1047562	0					
ANR	1048122	BreakStatement	break ;	1100:3:30851:30856	1047562	16	True				
ANR	1048123	BreakStatement	break ;	1102:2:30864:30869	1047562	12	True				
ANR	1048124	Label	case 's' :	1103:1:30872:30880	1047562	13	True				
ANR	1048125	CompoundStatement		98:11:2468:2468	1047562	14					
ANR	1048126	SwitchStatement	switch ( input [ 1 ] )		1047562	0					
ANR	1048127	Condition	input [ 1 ]	1104:10:30902:30909	1047562	0	True				
ANR	1048128	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1048129	Identifier	input		1047562	0					
ANR	1048130	PrimaryExpression	1		1047562	1					
ANR	1048131	CompoundStatement		99:20:2498:2498	1047562	1					
ANR	1048132	Label	case '?' :	1105:2:30916:30924	1047562	0	True				
ANR	1048133	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ts )"	1106:3:30929:30964	1047562	1	True				
ANR	1048134	CallExpression	"r_core_cmd_help ( core , help_msg_ts )"		1047562	0					
ANR	1048135	Callee	r_core_cmd_help		1047562	0					
ANR	1048136	Identifier	r_core_cmd_help		1047562	0					
ANR	1048137	ArgumentList	core		1047562	1					
ANR	1048138	Argument	core		1047562	0					
ANR	1048139	Identifier	core		1047562	0					
ANR	1048140	Argument	help_msg_ts		1047562	1					
ANR	1048141	Identifier	help_msg_ts		1047562	0					
ANR	1048142	BreakStatement	break ;	1107:3:30969:30974	1047562	2	True				
ANR	1048143	Label	case '*' :	1108:2:30978:30986	1047562	3	True				
ANR	1048144	IfStatement	if ( input [ 2 ] == ' ' )		1047562	4					
ANR	1048145	Condition	input [ 2 ] == ' '	1109:7:30995:31009	1047562	0	True				
ANR	1048146	EqualityExpression	input [ 2 ] == ' '		1047562	0		==			
ANR	1048147	ArrayIndexing	input [ 2 ]		1047562	0					
ANR	1048148	Identifier	input		1047562	0					
ANR	1048149	PrimaryExpression	2		1047562	1					
ANR	1048150	PrimaryExpression	' '		1047562	1					
ANR	1048151	CompoundStatement		104:24:2598:2598	1047562	1					
ANR	1048152	ExpressionStatement	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 1 )"	1110:4:31018:31065	1047562	0	True				
ANR	1048153	CallExpression	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 1 )"		1047562	0					
ANR	1048154	Callee	showFormat		1047562	0					
ANR	1048155	Identifier	showFormat		1047562	0					
ANR	1048156	ArgumentList	core		1047562	1					
ANR	1048157	Argument	core		1047562	0					
ANR	1048158	Identifier	core		1047562	0					
ANR	1048159	Argument	r_str_trim_ro ( input + 2 )		1047562	1					
ANR	1048160	CallExpression	r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1048161	Callee	r_str_trim_ro		1047562	0					
ANR	1048162	Identifier	r_str_trim_ro		1047562	0					
ANR	1048163	ArgumentList	input + 2		1047562	1					
ANR	1048164	Argument	input + 2		1047562	0					
ANR	1048165	AdditiveExpression	input + 2		1047562	0		+			
ANR	1048166	Identifier	input		1047562	0					
ANR	1048167	PrimaryExpression	2		1047562	1					
ANR	1048168	Argument	1		1047562	2					
ANR	1048169	PrimaryExpression	1		1047562	0					
ANR	1048170	ElseStatement	else		1047562	0					
ANR	1048171	CompoundStatement		109:4:2757:2766	1047562	0					
ANR	1048172	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list_filter ( TDB , stdifstruct , true ) ;"	1112:4:31083:31144	1047562	0	True				
ANR	1048173	IdentifierDecl	"* l = sdb_foreach_list_filter ( TDB , stdifstruct , true )"		1047562	0					
ANR	1048174	IdentifierDeclType	SdbList *		1047562	0					
ANR	1048175	Identifier	l		1047562	1					
ANR	1048176	AssignmentExpression	"* l = sdb_foreach_list_filter ( TDB , stdifstruct , true )"		1047562	2		=			
ANR	1048177	Identifier	l		1047562	0					
ANR	1048178	CallExpression	"sdb_foreach_list_filter ( TDB , stdifstruct , true )"		1047562	1					
ANR	1048179	Callee	sdb_foreach_list_filter		1047562	0					
ANR	1048180	Identifier	sdb_foreach_list_filter		1047562	0					
ANR	1048181	ArgumentList	TDB		1047562	1					
ANR	1048182	Argument	TDB		1047562	0					
ANR	1048183	Identifier	TDB		1047562	0					
ANR	1048184	Argument	stdifstruct		1047562	1					
ANR	1048185	Identifier	stdifstruct		1047562	0					
ANR	1048186	Argument	true		1047562	2					
ANR	1048187	Identifier	true		1047562	0					
ANR	1048188	IdentifierDeclStatement	SdbListIter * it ;	1113:4:31150:31165	1047562	1	True				
ANR	1048189	IdentifierDecl	* it		1047562	0					
ANR	1048190	IdentifierDeclType	SdbListIter *		1047562	0					
ANR	1048191	Identifier	it		1047562	1					
ANR	1048192	IdentifierDeclStatement	SdbKv * kv ;	1114:4:31171:31180	1047562	2	True				
ANR	1048193	IdentifierDecl	* kv		1047562	0					
ANR	1048194	IdentifierDeclType	SdbKv *		1047562	0					
ANR	1048195	Identifier	kv		1047562	1					
ANR	1048196	Statement	ls_foreach	1116:4:31187:31196	1047562	3	True				
ANR	1048197	Statement	(	1116:15:31198:31198	1047562	4	True				
ANR	1048198	Statement	l	1116:16:31199:31199	1047562	5	True				
ANR	1048199	Statement	","	1116:17:31200:31200	1047562	6	True				
ANR	1048200	Statement	it	1116:19:31202:31203	1047562	7	True				
ANR	1048201	Statement	","	1116:21:31204:31204	1047562	8	True				
ANR	1048202	Statement	kv	1116:23:31206:31207	1047562	9	True				
ANR	1048203	Statement	)	1116:25:31208:31208	1047562	10	True				
ANR	1048204	CompoundStatement		111:27:2796:2796	1047562	11					
ANR	1048205	ExpressionStatement	"showFormat ( core , sdbkv_key ( kv ) , 1 )"	1117:5:31217:31253	1047562	0	True				
ANR	1048206	CallExpression	"showFormat ( core , sdbkv_key ( kv ) , 1 )"		1047562	0					
ANR	1048207	Callee	showFormat		1047562	0					
ANR	1048208	Identifier	showFormat		1047562	0					
ANR	1048209	ArgumentList	core		1047562	1					
ANR	1048210	Argument	core		1047562	0					
ANR	1048211	Identifier	core		1047562	0					
ANR	1048212	Argument	sdbkv_key ( kv )		1047562	1					
ANR	1048213	CallExpression	sdbkv_key ( kv )		1047562	0					
ANR	1048214	Callee	sdbkv_key		1047562	0					
ANR	1048215	Identifier	sdbkv_key		1047562	0					
ANR	1048216	ArgumentList	kv		1047562	1					
ANR	1048217	Argument	kv		1047562	0					
ANR	1048218	Identifier	kv		1047562	0					
ANR	1048219	Argument	1		1047562	2					
ANR	1048220	PrimaryExpression	1		1047562	0					
ANR	1048221	ExpressionStatement	ls_free ( l )	1119:4:31265:31276	1047562	12	True				
ANR	1048222	CallExpression	ls_free ( l )		1047562	0					
ANR	1048223	Callee	ls_free		1047562	0					
ANR	1048224	Identifier	ls_free		1047562	0					
ANR	1048225	ArgumentList	l		1047562	1					
ANR	1048226	Argument	l		1047562	0					
ANR	1048227	Identifier	l		1047562	0					
ANR	1048228	BreakStatement	break ;	1121:3:31286:31291	1047562	5	True				
ANR	1048229	Label	case ' ' :	1122:2:31295:31303	1047562	6	True				
ANR	1048230	ExpressionStatement	"showFormat ( core , r_str_trim_ro ( input + 1 ) , 0 )"	1123:3:31308:31355	1047562	7	True				
ANR	1048231	CallExpression	"showFormat ( core , r_str_trim_ro ( input + 1 ) , 0 )"		1047562	0					
ANR	1048232	Callee	showFormat		1047562	0					
ANR	1048233	Identifier	showFormat		1047562	0					
ANR	1048234	ArgumentList	core		1047562	1					
ANR	1048235	Argument	core		1047562	0					
ANR	1048236	Identifier	core		1047562	0					
ANR	1048237	Argument	r_str_trim_ro ( input + 1 )		1047562	1					
ANR	1048238	CallExpression	r_str_trim_ro ( input + 1 )		1047562	0					
ANR	1048239	Callee	r_str_trim_ro		1047562	0					
ANR	1048240	Identifier	r_str_trim_ro		1047562	0					
ANR	1048241	ArgumentList	input + 1		1047562	1					
ANR	1048242	Argument	input + 1		1047562	0					
ANR	1048243	AdditiveExpression	input + 1		1047562	0		+			
ANR	1048244	Identifier	input		1047562	0					
ANR	1048245	PrimaryExpression	1		1047562	1					
ANR	1048246	Argument	0		1047562	2					
ANR	1048247	PrimaryExpression	0		1047562	0					
ANR	1048248	BreakStatement	break ;	1124:3:31360:31365	1047562	8	True				
ANR	1048249	Label	case 's' :	1125:2:31369:31377	1047562	9	True				
ANR	1048250	IfStatement	if ( input [ 2 ] == ' ' )		1047562	10					
ANR	1048251	Condition	input [ 2 ] == ' '	1126:7:31386:31400	1047562	0	True				
ANR	1048252	EqualityExpression	input [ 2 ] == ' '		1047562	0		==			
ANR	1048253	ArrayIndexing	input [ 2 ]		1047562	0					
ANR	1048254	Identifier	input		1047562	0					
ANR	1048255	PrimaryExpression	2		1047562	1					
ANR	1048256	PrimaryExpression	' '		1047562	1					
ANR	1048257	CompoundStatement		121:24:2989:2989	1047562	1					
ANR	1048258	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , ( r_type_get_bitsize ( TDB , input + 3 ) / 8 ) )"	1127:4:31409:31474	1047562	0	True				
ANR	1048259	CallExpression	"r_cons_printf ( ""%d\\n"" , ( r_type_get_bitsize ( TDB , input + 3 ) / 8 ) )"		1047562	0					
ANR	1048260	Callee	r_cons_printf		1047562	0					
ANR	1048261	Identifier	r_cons_printf		1047562	0					
ANR	1048262	ArgumentList	"""%d\\n"""		1047562	1					
ANR	1048263	Argument	"""%d\\n"""		1047562	0					
ANR	1048264	PrimaryExpression	"""%d\\n"""		1047562	0					
ANR	1048265	Argument	"r_type_get_bitsize ( TDB , input + 3 ) / 8"		1047562	1					
ANR	1048266	MultiplicativeExpression	"r_type_get_bitsize ( TDB , input + 3 ) / 8"		1047562	0		/			
ANR	1048267	CallExpression	"r_type_get_bitsize ( TDB , input + 3 )"		1047562	0					
ANR	1048268	Callee	r_type_get_bitsize		1047562	0					
ANR	1048269	Identifier	r_type_get_bitsize		1047562	0					
ANR	1048270	ArgumentList	TDB		1047562	1					
ANR	1048271	Argument	TDB		1047562	0					
ANR	1048272	Identifier	TDB		1047562	0					
ANR	1048273	Argument	input + 3		1047562	1					
ANR	1048274	AdditiveExpression	input + 3		1047562	0		+			
ANR	1048275	Identifier	input		1047562	0					
ANR	1048276	PrimaryExpression	3		1047562	1					
ANR	1048277	PrimaryExpression	8		1047562	1					
ANR	1048278	ElseStatement	else		1047562	0					
ANR	1048279	CompoundStatement		123:10:3072:3072	1047562	0					
ANR	1048280	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ts )"	1129:4:31492:31527	1047562	0	True				
ANR	1048281	CallExpression	"r_core_cmd_help ( core , help_msg_ts )"		1047562	0					
ANR	1048282	Callee	r_core_cmd_help		1047562	0					
ANR	1048283	Identifier	r_core_cmd_help		1047562	0					
ANR	1048284	ArgumentList	core		1047562	1					
ANR	1048285	Argument	core		1047562	0					
ANR	1048286	Identifier	core		1047562	0					
ANR	1048287	Argument	help_msg_ts		1047562	1					
ANR	1048288	Identifier	help_msg_ts		1047562	0					
ANR	1048289	BreakStatement	break ;	1131:3:31537:31542	1047562	11	True				
ANR	1048290	Label	case 0 :	1132:2:31546:31552	1047562	12	True				
ANR	1048291	ExpressionStatement	"print_keys ( TDB , core , stdifstruct , printkey_cb , false )"	1133:3:31557:31612	1047562	13	True				
ANR	1048292	CallExpression	"print_keys ( TDB , core , stdifstruct , printkey_cb , false )"		1047562	0					
ANR	1048293	Callee	print_keys		1047562	0					
ANR	1048294	Identifier	print_keys		1047562	0					
ANR	1048295	ArgumentList	TDB		1047562	1					
ANR	1048296	Argument	TDB		1047562	0					
ANR	1048297	Identifier	TDB		1047562	0					
ANR	1048298	Argument	core		1047562	1					
ANR	1048299	Identifier	core		1047562	0					
ANR	1048300	Argument	stdifstruct		1047562	2					
ANR	1048301	Identifier	stdifstruct		1047562	0					
ANR	1048302	Argument	printkey_cb		1047562	3					
ANR	1048303	Identifier	printkey_cb		1047562	0					
ANR	1048304	Argument	false		1047562	4					
ANR	1048305	Identifier	false		1047562	0					
ANR	1048306	BreakStatement	break ;	1134:3:31617:31622	1047562	14	True				
ANR	1048307	Label	case 'c' :	1135:2:31626:31634	1047562	15	True				
ANR	1048308	ExpressionStatement	"print_struct_union_in_c_format ( TDB , stdifstruct , r_str_trim_ro ( input + 2 ) , true )"	1136:3:31639:31721	1047562	16	True				
ANR	1048309	CallExpression	"print_struct_union_in_c_format ( TDB , stdifstruct , r_str_trim_ro ( input + 2 ) , true )"		1047562	0					
ANR	1048310	Callee	print_struct_union_in_c_format		1047562	0					
ANR	1048311	Identifier	print_struct_union_in_c_format		1047562	0					
ANR	1048312	ArgumentList	TDB		1047562	1					
ANR	1048313	Argument	TDB		1047562	0					
ANR	1048314	Identifier	TDB		1047562	0					
ANR	1048315	Argument	stdifstruct		1047562	1					
ANR	1048316	Identifier	stdifstruct		1047562	0					
ANR	1048317	Argument	r_str_trim_ro ( input + 2 )		1047562	2					
ANR	1048318	CallExpression	r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1048319	Callee	r_str_trim_ro		1047562	0					
ANR	1048320	Identifier	r_str_trim_ro		1047562	0					
ANR	1048321	ArgumentList	input + 2		1047562	1					
ANR	1048322	Argument	input + 2		1047562	0					
ANR	1048323	AdditiveExpression	input + 2		1047562	0		+			
ANR	1048324	Identifier	input		1047562	0					
ANR	1048325	PrimaryExpression	2		1047562	1					
ANR	1048326	Argument	true		1047562	3					
ANR	1048327	Identifier	true		1047562	0					
ANR	1048328	BreakStatement	break ;	1137:3:31726:31731	1047562	17	True				
ANR	1048329	Label	case 'd' :	1138:2:31735:31743	1047562	18	True				
ANR	1048330	ExpressionStatement	"print_struct_union_in_c_format ( TDB , stdifstruct , r_str_trim_ro ( input + 2 ) , false )"	1139:3:31748:31831	1047562	19	True				
ANR	1048331	CallExpression	"print_struct_union_in_c_format ( TDB , stdifstruct , r_str_trim_ro ( input + 2 ) , false )"		1047562	0					
ANR	1048332	Callee	print_struct_union_in_c_format		1047562	0					
ANR	1048333	Identifier	print_struct_union_in_c_format		1047562	0					
ANR	1048334	ArgumentList	TDB		1047562	1					
ANR	1048335	Argument	TDB		1047562	0					
ANR	1048336	Identifier	TDB		1047562	0					
ANR	1048337	Argument	stdifstruct		1047562	1					
ANR	1048338	Identifier	stdifstruct		1047562	0					
ANR	1048339	Argument	r_str_trim_ro ( input + 2 )		1047562	2					
ANR	1048340	CallExpression	r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1048341	Callee	r_str_trim_ro		1047562	0					
ANR	1048342	Identifier	r_str_trim_ro		1047562	0					
ANR	1048343	ArgumentList	input + 2		1047562	1					
ANR	1048344	Argument	input + 2		1047562	0					
ANR	1048345	AdditiveExpression	input + 2		1047562	0		+			
ANR	1048346	Identifier	input		1047562	0					
ANR	1048347	PrimaryExpression	2		1047562	1					
ANR	1048348	Argument	false		1047562	3					
ANR	1048349	Identifier	false		1047562	0					
ANR	1048350	BreakStatement	break ;	1140:3:31836:31841	1047562	20	True				
ANR	1048351	Label	case 'j' :	1141:2:31845:31853	1047562	21	True				
ANR	1048352	IfStatement	if ( input [ 2 ] )		1047562	22					
ANR	1048353	Condition	input [ 2 ]	1143:7:31937:31944	1047562	0	True				
ANR	1048354	ArrayIndexing	input [ 2 ]		1047562	0					
ANR	1048355	Identifier	input		1047562	0					
ANR	1048356	PrimaryExpression	2		1047562	1					
ANR	1048357	CompoundStatement		138:17:3533:3533	1047562	1					
ANR	1048358	ExpressionStatement	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 'j' )"	1144:4:31953:32002	1047562	0	True				
ANR	1048359	CallExpression	"showFormat ( core , r_str_trim_ro ( input + 2 ) , 'j' )"		1047562	0					
ANR	1048360	Callee	showFormat		1047562	0					
ANR	1048361	Identifier	showFormat		1047562	0					
ANR	1048362	ArgumentList	core		1047562	1					
ANR	1048363	Argument	core		1047562	0					
ANR	1048364	Identifier	core		1047562	0					
ANR	1048365	Argument	r_str_trim_ro ( input + 2 )		1047562	1					
ANR	1048366	CallExpression	r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1048367	Callee	r_str_trim_ro		1047562	0					
ANR	1048368	Identifier	r_str_trim_ro		1047562	0					
ANR	1048369	ArgumentList	input + 2		1047562	1					
ANR	1048370	Argument	input + 2		1047562	0					
ANR	1048371	AdditiveExpression	input + 2		1047562	0		+			
ANR	1048372	Identifier	input		1047562	0					
ANR	1048373	PrimaryExpression	2		1047562	1					
ANR	1048374	Argument	'j'		1047562	2					
ANR	1048375	PrimaryExpression	'j'		1047562	0					
ANR	1048376	ExpressionStatement	r_cons_newline ( )	1145:4:32008:32025	1047562	1	True				
ANR	1048377	CallExpression	r_cons_newline ( )		1047562	0					
ANR	1048378	Callee	r_cons_newline		1047562	0					
ANR	1048379	Identifier	r_cons_newline		1047562	0					
ANR	1048380	ArgumentList			1047562	1					
ANR	1048381	ElseStatement	else		1047562	0					
ANR	1048382	CompoundStatement		141:10:3623:3623	1047562	0					
ANR	1048383	ExpressionStatement	"print_struct_union_list_json ( TDB , stdifstruct )"	1147:4:32043:32090	1047562	0	True				
ANR	1048384	CallExpression	"print_struct_union_list_json ( TDB , stdifstruct )"		1047562	0					
ANR	1048385	Callee	print_struct_union_list_json		1047562	0					
ANR	1048386	Identifier	print_struct_union_list_json		1047562	0					
ANR	1048387	ArgumentList	TDB		1047562	1					
ANR	1048388	Argument	TDB		1047562	0					
ANR	1048389	Identifier	TDB		1047562	0					
ANR	1048390	Argument	stdifstruct		1047562	1					
ANR	1048391	Identifier	stdifstruct		1047562	0					
ANR	1048392	BreakStatement	break ;	1149:3:32100:32105	1047562	23	True				
ANR	1048393	BreakStatement	break ;	1151:3:32114:32119	1047562	15	True				
ANR	1048394	Label	case 'e' :	1152:1:32122:32130	1047562	16	True				
ANR	1048395	CompoundStatement		151:2:3862:3913	1047562	17					
ANR	1048396	IdentifierDeclStatement	"char * res = NULL , * temp = strchr ( input , ' ' ) ;"	1153:2:32144:32189	1047562	0	True				
ANR	1048397	IdentifierDecl	* res = NULL		1047562	0					
ANR	1048398	IdentifierDeclType	char *		1047562	0					
ANR	1048399	Identifier	res		1047562	1					
ANR	1048400	AssignmentExpression	* res = NULL		1047562	2		=			
ANR	1048401	Identifier	NULL		1047562	0					
ANR	1048402	Identifier	NULL		1047562	1					
ANR	1048403	IdentifierDecl	"* temp = strchr ( input , ' ' )"		1047562	1					
ANR	1048404	IdentifierDeclType	char *		1047562	0					
ANR	1048405	Identifier	temp		1047562	1					
ANR	1048406	AssignmentExpression	"* temp = strchr ( input , ' ' )"		1047562	2		=			
ANR	1048407	Identifier	temp		1047562	0					
ANR	1048408	CallExpression	"strchr ( input , ' ' )"		1047562	1					
ANR	1048409	Callee	strchr		1047562	0					
ANR	1048410	Identifier	strchr		1047562	0					
ANR	1048411	ArgumentList	input		1047562	1					
ANR	1048412	Argument	input		1047562	0					
ANR	1048413	Identifier	input		1047562	0					
ANR	1048414	Argument	' '		1047562	1					
ANR	1048415	PrimaryExpression	' '		1047562	0					
ANR	1048416	IdentifierDeclStatement	Sdb * TDB = core -> anal -> sdb_types ;	1154:2:32193:32225	1047562	1	True				
ANR	1048417	IdentifierDecl	* TDB = core -> anal -> sdb_types		1047562	0					
ANR	1048418	IdentifierDeclType	Sdb *		1047562	0					
ANR	1048419	Identifier	TDB		1047562	1					
ANR	1048420	AssignmentExpression	* TDB = core -> anal -> sdb_types		1047562	2		=			
ANR	1048421	Identifier	TDB		1047562	0					
ANR	1048422	PtrMemberAccess	core -> anal -> sdb_types		1047562	1					
ANR	1048423	PtrMemberAccess	core -> anal		1047562	0					
ANR	1048424	Identifier	core		1047562	0					
ANR	1048425	Identifier	anal		1047562	1					
ANR	1048426	Identifier	sdb_types		1047562	1					
ANR	1048427	IdentifierDeclStatement	char * name = temp ? strdup ( temp + 1 ) : NULL ;	1155:2:32229:32272	1047562	2	True				
ANR	1048428	IdentifierDecl	* name = temp ? strdup ( temp + 1 ) : NULL		1047562	0					
ANR	1048429	IdentifierDeclType	char *		1047562	0					
ANR	1048430	Identifier	name		1047562	1					
ANR	1048431	AssignmentExpression	* name = temp ? strdup ( temp + 1 ) : NULL		1047562	2		=			
ANR	1048432	Identifier	name		1047562	0					
ANR	1048433	ConditionalExpression	temp ? strdup ( temp + 1 ) : NULL		1047562	1					
ANR	1048434	Condition	temp		1047562	0					
ANR	1048435	Identifier	temp		1047562	0					
ANR	1048436	CallExpression	strdup ( temp + 1 )		1047562	1					
ANR	1048437	Callee	strdup		1047562	0					
ANR	1048438	Identifier	strdup		1047562	0					
ANR	1048439	ArgumentList	temp + 1		1047562	1					
ANR	1048440	Argument	temp + 1		1047562	0					
ANR	1048441	AdditiveExpression	temp + 1		1047562	0		+			
ANR	1048442	Identifier	temp		1047562	0					
ANR	1048443	PrimaryExpression	1		1047562	1					
ANR	1048444	Identifier	NULL		1047562	2					
ANR	1048445	IdentifierDeclStatement	"char * member_name = name ? strchr ( name , ' ' ) : NULL ;"	1156:2:32276:32327	1047562	3	True				
ANR	1048446	IdentifierDecl	"* member_name = name ? strchr ( name , ' ' ) : NULL"		1047562	0					
ANR	1048447	IdentifierDeclType	char *		1047562	0					
ANR	1048448	Identifier	member_name		1047562	1					
ANR	1048449	AssignmentExpression	"* member_name = name ? strchr ( name , ' ' ) : NULL"		1047562	2		=			
ANR	1048450	Identifier	member_name		1047562	0					
ANR	1048451	ConditionalExpression	"name ? strchr ( name , ' ' ) : NULL"		1047562	1					
ANR	1048452	Condition	name		1047562	0					
ANR	1048453	Identifier	name		1047562	0					
ANR	1048454	CallExpression	"strchr ( name , ' ' )"		1047562	1					
ANR	1048455	Callee	strchr		1047562	0					
ANR	1048456	Identifier	strchr		1047562	0					
ANR	1048457	ArgumentList	name		1047562	1					
ANR	1048458	Argument	name		1047562	0					
ANR	1048459	Identifier	name		1047562	0					
ANR	1048460	Argument	' '		1047562	1					
ANR	1048461	PrimaryExpression	' '		1047562	0					
ANR	1048462	Identifier	NULL		1047562	2					
ANR	1048463	IfStatement	if ( member_name )		1047562	4					
ANR	1048464	Condition	member_name	1158:6:32336:32346	1047562	0	True				
ANR	1048465	Identifier	member_name		1047562	0					
ANR	1048466	CompoundStatement		153:19:3935:3935	1047562	1					
ANR	1048467	ExpressionStatement	* member_name ++ = 0	1159:3:32354:32372	1047562	0	True				
ANR	1048468	AssignmentExpression	* member_name ++ = 0		1047562	0		=			
ANR	1048469	UnaryOperationExpression	* member_name ++		1047562	0					
ANR	1048470	UnaryOperator	*		1047562	0					
ANR	1048471	PostIncDecOperationExpression	member_name ++		1047562	1					
ANR	1048472	Identifier	member_name		1047562	0					
ANR	1048473	IncDec	++		1047562	1					
ANR	1048474	PrimaryExpression	0		1047562	1					
ANR	1048475	IfStatement	"if ( name && ( r_type_kind ( TDB , name ) != R_TYPE_ENUM ) )"		1047562	5					
ANR	1048476	Condition	"name && ( r_type_kind ( TDB , name ) != R_TYPE_ENUM )"	1161:6:32384:32431	1047562	0	True				
ANR	1048477	AndExpression	"name && ( r_type_kind ( TDB , name ) != R_TYPE_ENUM )"		1047562	0		&&			
ANR	1048478	Identifier	name		1047562	0					
ANR	1048479	EqualityExpression	"r_type_kind ( TDB , name ) != R_TYPE_ENUM"		1047562	1		!=			
ANR	1048480	CallExpression	"r_type_kind ( TDB , name )"		1047562	0					
ANR	1048481	Callee	r_type_kind		1047562	0					
ANR	1048482	Identifier	r_type_kind		1047562	0					
ANR	1048483	ArgumentList	TDB		1047562	1					
ANR	1048484	Argument	TDB		1047562	0					
ANR	1048485	Identifier	TDB		1047562	0					
ANR	1048486	Argument	name		1047562	1					
ANR	1048487	Identifier	name		1047562	0					
ANR	1048488	Identifier	R_TYPE_ENUM		1047562	1					
ANR	1048489	CompoundStatement		156:56:4020:4020	1047562	1					
ANR	1048490	ExpressionStatement	"eprintf ( ""%s is not an enum\\n"" , name )"	1162:3:32439:32476	1047562	0	True				
ANR	1048491	CallExpression	"eprintf ( ""%s is not an enum\\n"" , name )"		1047562	0					
ANR	1048492	Callee	eprintf		1047562	0					
ANR	1048493	Identifier	eprintf		1047562	0					
ANR	1048494	ArgumentList	"""%s is not an enum\\n"""		1047562	1					
ANR	1048495	Argument	"""%s is not an enum\\n"""		1047562	0					
ANR	1048496	PrimaryExpression	"""%s is not an enum\\n"""		1047562	0					
ANR	1048497	Argument	name		1047562	1					
ANR	1048498	Identifier	name		1047562	0					
ANR	1048499	ExpressionStatement	free ( name )	1163:3:32481:32492	1047562	1	True				
ANR	1048500	CallExpression	free ( name )		1047562	0					
ANR	1048501	Callee	free		1047562	0					
ANR	1048502	Identifier	free		1047562	0					
ANR	1048503	ArgumentList	name		1047562	1					
ANR	1048504	Argument	name		1047562	0					
ANR	1048505	Identifier	name		1047562	0					
ANR	1048506	BreakStatement	break ;	1164:3:32497:32502	1047562	2	True				
ANR	1048507	SwitchStatement	switch ( input [ 1 ] )		1047562	6					
ANR	1048508	Condition	input [ 1 ]	1166:10:32518:32525	1047562	0	True				
ANR	1048509	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1048510	Identifier	input		1047562	0					
ANR	1048511	PrimaryExpression	1		1047562	1					
ANR	1048512	CompoundStatement		161:20:4114:4114	1047562	1					
ANR	1048513	Label	case '?' :	1167:2:32532:32540	1047562	0	True				
ANR	1048514	ExpressionStatement	"r_core_cmd_help ( core , help_msg_te )"	1168:3:32545:32580	1047562	1	True				
ANR	1048515	CallExpression	"r_core_cmd_help ( core , help_msg_te )"		1047562	0					
ANR	1048516	Callee	r_core_cmd_help		1047562	0					
ANR	1048517	Identifier	r_core_cmd_help		1047562	0					
ANR	1048518	ArgumentList	core		1047562	1					
ANR	1048519	Argument	core		1047562	0					
ANR	1048520	Identifier	core		1047562	0					
ANR	1048521	Argument	help_msg_te		1047562	1					
ANR	1048522	Identifier	help_msg_te		1047562	0					
ANR	1048523	BreakStatement	break ;	1169:3:32585:32590	1047562	2	True				
ANR	1048524	Label	case 'j' :	1170:2:32594:32602	1047562	3	True				
ANR	1048525	IfStatement	if ( input [ 2 ] == 0 )		1047562	4					
ANR	1048526	Condition	input [ 2 ] == 0	1171:7:32620:32632	1047562	0	True				
ANR	1048527	EqualityExpression	input [ 2 ] == 0		1047562	0		==			
ANR	1048528	ArrayIndexing	input [ 2 ]		1047562	0					
ANR	1048529	Identifier	input		1047562	0					
ANR	1048530	PrimaryExpression	2		1047562	1					
ANR	1048531	PrimaryExpression	0		1047562	1					
ANR	1048532	CompoundStatement		171:4:4344:4362	1047562	1					
ANR	1048533	IdentifierDeclStatement	char * name = NULL ;	1172:4:32650:32667	1047562	0	True				
ANR	1048534	IdentifierDecl	* name = NULL		1047562	0					
ANR	1048535	IdentifierDeclType	char *		1047562	0					
ANR	1048536	Identifier	name		1047562	1					
ANR	1048537	AssignmentExpression	* name = NULL		1047562	2		=			
ANR	1048538	Identifier	NULL		1047562	0					
ANR	1048539	Identifier	NULL		1047562	1					
ANR	1048540	IdentifierDeclStatement	SdbKv * kv ;	1173:4:32673:32682	1047562	1	True				
ANR	1048541	IdentifierDecl	* kv		1047562	0					
ANR	1048542	IdentifierDeclType	SdbKv *		1047562	0					
ANR	1048543	Identifier	kv		1047562	1					
ANR	1048544	IdentifierDeclStatement	SdbListIter * iter ;	1174:4:32688:32705	1047562	2	True				
ANR	1048545	IdentifierDecl	* iter		1047562	0					
ANR	1048546	IdentifierDeclType	SdbListIter *		1047562	0					
ANR	1048547	Identifier	iter		1047562	1					
ANR	1048548	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( TDB , true ) ;"	1175:4:32711:32752	1047562	3	True				
ANR	1048549	IdentifierDecl	"* l = sdb_foreach_list ( TDB , true )"		1047562	0					
ANR	1048550	IdentifierDeclType	SdbList *		1047562	0					
ANR	1048551	Identifier	l		1047562	1					
ANR	1048552	AssignmentExpression	"* l = sdb_foreach_list ( TDB , true )"		1047562	2		=			
ANR	1048553	Identifier	l		1047562	0					
ANR	1048554	CallExpression	"sdb_foreach_list ( TDB , true )"		1047562	1					
ANR	1048555	Callee	sdb_foreach_list		1047562	0					
ANR	1048556	Identifier	sdb_foreach_list		1047562	0					
ANR	1048557	ArgumentList	TDB		1047562	1					
ANR	1048558	Argument	TDB		1047562	0					
ANR	1048559	Identifier	TDB		1047562	0					
ANR	1048560	Argument	true		1047562	1					
ANR	1048561	Identifier	true		1047562	0					
ANR	1048562	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1176:4:32758:32776	1047562	4	True				
ANR	1048563	IdentifierDecl	* pj = pj_new ( )		1047562	0					
ANR	1048564	IdentifierDeclType	PJ *		1047562	0					
ANR	1048565	Identifier	pj		1047562	1					
ANR	1048566	AssignmentExpression	* pj = pj_new ( )		1047562	2		=			
ANR	1048567	Identifier	pj		1047562	0					
ANR	1048568	CallExpression	pj_new ( )		1047562	1					
ANR	1048569	Callee	pj_new		1047562	0					
ANR	1048570	Identifier	pj_new		1047562	0					
ANR	1048571	ArgumentList			1047562	1					
ANR	1048572	ExpressionStatement	pj_o ( pj )	1177:4:32782:32791	1047562	5	True				
ANR	1048573	CallExpression	pj_o ( pj )		1047562	0					
ANR	1048574	Callee	pj_o		1047562	0					
ANR	1048575	Identifier	pj_o		1047562	0					
ANR	1048576	ArgumentList	pj		1047562	1					
ANR	1048577	Argument	pj		1047562	0					
ANR	1048578	Identifier	pj		1047562	0					
ANR	1048579	Statement	ls_foreach	1178:4:32797:32806	1047562	6	True				
ANR	1048580	Statement	(	1178:15:32808:32808	1047562	7	True				
ANR	1048581	Statement	l	1178:16:32809:32809	1047562	8	True				
ANR	1048582	Statement	","	1178:17:32810:32810	1047562	9	True				
ANR	1048583	Statement	iter	1178:19:32812:32815	1047562	10	True				
ANR	1048584	Statement	","	1178:23:32816:32816	1047562	11	True				
ANR	1048585	Statement	kv	1178:25:32818:32819	1047562	12	True				
ANR	1048586	Statement	)	1178:27:32820:32820	1047562	13	True				
ANR	1048587	CompoundStatement		173:29:4408:4408	1047562	14					
ANR	1048588	IfStatement	"if ( ! strcmp ( sdbkv_value ( kv ) , ""enum"" ) )"		1047562	0					
ANR	1048589	Condition	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"	1179:9:32833:32866	1047562	0	True				
ANR	1048590	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"		1047562	0					
ANR	1048591	UnaryOperator	!		1047562	0					
ANR	1048592	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""enum"" )"		1047562	1					
ANR	1048593	Callee	strcmp		1047562	0					
ANR	1048594	Identifier	strcmp		1047562	0					
ANR	1048595	ArgumentList	sdbkv_value ( kv )		1047562	1					
ANR	1048596	Argument	sdbkv_value ( kv )		1047562	0					
ANR	1048597	CallExpression	sdbkv_value ( kv )		1047562	0					
ANR	1048598	Callee	sdbkv_value		1047562	0					
ANR	1048599	Identifier	sdbkv_value		1047562	0					
ANR	1048600	ArgumentList	kv		1047562	1					
ANR	1048601	Argument	kv		1047562	0					
ANR	1048602	Identifier	kv		1047562	0					
ANR	1048603	Argument	"""enum"""		1047562	1					
ANR	1048604	PrimaryExpression	"""enum"""		1047562	0					
ANR	1048605	CompoundStatement		174:45:4455:4455	1047562	1					
ANR	1048606	IfStatement	"if ( ! name || strcmp ( sdbkv_value ( kv ) , name ) )"		1047562	0					
ANR	1048607	Condition	"! name || strcmp ( sdbkv_value ( kv ) , name )"	1180:10:32881:32920	1047562	0	True				
ANR	1048608	OrExpression	"! name || strcmp ( sdbkv_value ( kv ) , name )"		1047562	0		||			
ANR	1048609	UnaryOperationExpression	! name		1047562	0					
ANR	1048610	UnaryOperator	!		1047562	0					
ANR	1048611	Identifier	name		1047562	1					
ANR	1048612	CallExpression	"strcmp ( sdbkv_value ( kv ) , name )"		1047562	1					
ANR	1048613	Callee	strcmp		1047562	0					
ANR	1048614	Identifier	strcmp		1047562	0					
ANR	1048615	ArgumentList	sdbkv_value ( kv )		1047562	1					
ANR	1048616	Argument	sdbkv_value ( kv )		1047562	0					
ANR	1048617	CallExpression	sdbkv_value ( kv )		1047562	0					
ANR	1048618	Callee	sdbkv_value		1047562	0					
ANR	1048619	Identifier	sdbkv_value		1047562	0					
ANR	1048620	ArgumentList	kv		1047562	1					
ANR	1048621	Argument	kv		1047562	0					
ANR	1048622	Identifier	kv		1047562	0					
ANR	1048623	Argument	name		1047562	1					
ANR	1048624	Identifier	name		1047562	0					
ANR	1048625	CompoundStatement		175:52:4509:4509	1047562	1					
ANR	1048626	ExpressionStatement	free ( name )	1181:7:32932:32943	1047562	0	True				
ANR	1048627	CallExpression	free ( name )		1047562	0					
ANR	1048628	Callee	free		1047562	0					
ANR	1048629	Identifier	free		1047562	0					
ANR	1048630	ArgumentList	name		1047562	1					
ANR	1048631	Argument	name		1047562	0					
ANR	1048632	Identifier	name		1047562	0					
ANR	1048633	ExpressionStatement	name = strdup ( sdbkv_key ( kv ) )	1182:7:32952:32982	1047562	1	True				
ANR	1048634	AssignmentExpression	name = strdup ( sdbkv_key ( kv ) )		1047562	0		=			
ANR	1048635	Identifier	name		1047562	0					
ANR	1048636	CallExpression	strdup ( sdbkv_key ( kv ) )		1047562	1					
ANR	1048637	Callee	strdup		1047562	0					
ANR	1048638	Identifier	strdup		1047562	0					
ANR	1048639	ArgumentList	sdbkv_key ( kv )		1047562	1					
ANR	1048640	Argument	sdbkv_key ( kv )		1047562	0					
ANR	1048641	CallExpression	sdbkv_key ( kv )		1047562	0					
ANR	1048642	Callee	sdbkv_key		1047562	0					
ANR	1048643	Identifier	sdbkv_key		1047562	0					
ANR	1048644	ArgumentList	kv		1047562	1					
ANR	1048645	Argument	kv		1047562	0					
ANR	1048646	Identifier	kv		1047562	0					
ANR	1048647	ExpressionStatement	"pj_k ( pj , name )"	1183:7:32991:33006	1047562	2	True				
ANR	1048648	CallExpression	"pj_k ( pj , name )"		1047562	0					
ANR	1048649	Callee	pj_k		1047562	0					
ANR	1048650	Identifier	pj_k		1047562	0					
ANR	1048651	ArgumentList	pj		1047562	1					
ANR	1048652	Argument	pj		1047562	0					
ANR	1048653	Identifier	pj		1047562	0					
ANR	1048654	Argument	name		1047562	1					
ANR	1048655	Identifier	name		1047562	0					
ANR	1048656	CompoundStatement		180:8:4611:4652	1047562	3					
ANR	1048657	IdentifierDeclStatement	"RList * list = r_type_get_enum ( TDB , name ) ;"	1185:8:33025:33066	1047562	0	True				
ANR	1048658	IdentifierDecl	"* list = r_type_get_enum ( TDB , name )"		1047562	0					
ANR	1048659	IdentifierDeclType	RList *		1047562	0					
ANR	1048660	Identifier	list		1047562	1					
ANR	1048661	AssignmentExpression	"* list = r_type_get_enum ( TDB , name )"		1047562	2		=			
ANR	1048662	Identifier	list		1047562	0					
ANR	1048663	CallExpression	"r_type_get_enum ( TDB , name )"		1047562	1					
ANR	1048664	Callee	r_type_get_enum		1047562	0					
ANR	1048665	Identifier	r_type_get_enum		1047562	0					
ANR	1048666	ArgumentList	TDB		1047562	1					
ANR	1048667	Argument	TDB		1047562	0					
ANR	1048668	Identifier	TDB		1047562	0					
ANR	1048669	Argument	name		1047562	1					
ANR	1048670	Identifier	name		1047562	0					
ANR	1048671	IfStatement	if ( list && ! r_list_empty ( list ) )		1047562	1					
ANR	1048672	Condition	list && ! r_list_empty ( list )	1186:12:33080:33107	1047562	0	True				
ANR	1048673	AndExpression	list && ! r_list_empty ( list )		1047562	0		&&			
ANR	1048674	Identifier	list		1047562	0					
ANR	1048675	UnaryOperationExpression	! r_list_empty ( list )		1047562	1					
ANR	1048676	UnaryOperator	!		1047562	0					
ANR	1048677	CallExpression	r_list_empty ( list )		1047562	1					
ANR	1048678	Callee	r_list_empty		1047562	0					
ANR	1048679	Identifier	r_list_empty		1047562	0					
ANR	1048680	ArgumentList	list		1047562	1					
ANR	1048681	Argument	list		1047562	0					
ANR	1048682	Identifier	list		1047562	0					
ANR	1048683	CompoundStatement		184:9:4753:4770	1047562	1					
ANR	1048684	ExpressionStatement	pj_o ( pj )	1187:9:33121:33130	1047562	0	True				
ANR	1048685	CallExpression	pj_o ( pj )		1047562	0					
ANR	1048686	Callee	pj_o		1047562	0					
ANR	1048687	Identifier	pj_o		1047562	0					
ANR	1048688	ArgumentList	pj		1047562	1					
ANR	1048689	Argument	pj		1047562	0					
ANR	1048690	Identifier	pj		1047562	0					
ANR	1048691	IdentifierDeclStatement	RListIter * iter ;	1188:9:33141:33156	1047562	1	True				
ANR	1048692	IdentifierDecl	* iter		1047562	0					
ANR	1048693	IdentifierDeclType	RListIter *		1047562	0					
ANR	1048694	Identifier	iter		1047562	1					
ANR	1048695	IdentifierDeclStatement	RTypeEnum * member ;	1189:9:33167:33184	1047562	2	True				
ANR	1048696	IdentifierDecl	* member		1047562	0					
ANR	1048697	IdentifierDeclType	RTypeEnum *		1047562	0					
ANR	1048698	Identifier	member		1047562	1					
ANR	1048699	Statement	r_list_foreach	1190:9:33195:33208	1047562	3	True				
ANR	1048700	Statement	(	1190:24:33210:33210	1047562	4	True				
ANR	1048701	Statement	list	1190:25:33211:33214	1047562	5	True				
ANR	1048702	Statement	","	1190:29:33215:33215	1047562	6	True				
ANR	1048703	Statement	iter	1190:31:33217:33220	1047562	7	True				
ANR	1048704	Statement	","	1190:35:33221:33221	1047562	8	True				
ANR	1048705	Statement	member	1190:37:33223:33228	1047562	9	True				
ANR	1048706	Statement	)	1190:43:33229:33229	1047562	10	True				
ANR	1048707	CompoundStatement		185:45:4817:4817	1047562	11					
ANR	1048708	ExpressionStatement	"pj_kn ( pj , member -> name , r_num_math ( NULL , member -> val ) )"	1191:10:33243:33299	1047562	0	True				
ANR	1048709	CallExpression	"pj_kn ( pj , member -> name , r_num_math ( NULL , member -> val ) )"		1047562	0					
ANR	1048710	Callee	pj_kn		1047562	0					
ANR	1048711	Identifier	pj_kn		1047562	0					
ANR	1048712	ArgumentList	pj		1047562	1					
ANR	1048713	Argument	pj		1047562	0					
ANR	1048714	Identifier	pj		1047562	0					
ANR	1048715	Argument	member -> name		1047562	1					
ANR	1048716	PtrMemberAccess	member -> name		1047562	0					
ANR	1048717	Identifier	member		1047562	0					
ANR	1048718	Identifier	name		1047562	1					
ANR	1048719	Argument	"r_num_math ( NULL , member -> val )"		1047562	2					
ANR	1048720	CallExpression	"r_num_math ( NULL , member -> val )"		1047562	0					
ANR	1048721	Callee	r_num_math		1047562	0					
ANR	1048722	Identifier	r_num_math		1047562	0					
ANR	1048723	ArgumentList	NULL		1047562	1					
ANR	1048724	Argument	NULL		1047562	0					
ANR	1048725	Identifier	NULL		1047562	0					
ANR	1048726	Argument	member -> val		1047562	1					
ANR	1048727	PtrMemberAccess	member -> val		1047562	0					
ANR	1048728	Identifier	member		1047562	0					
ANR	1048729	Identifier	val		1047562	1					
ANR	1048730	ExpressionStatement	pj_end ( pj )	1193:9:33321:33332	1047562	12	True				
ANR	1048731	CallExpression	pj_end ( pj )		1047562	0					
ANR	1048732	Callee	pj_end		1047562	0					
ANR	1048733	Identifier	pj_end		1047562	0					
ANR	1048734	ArgumentList	pj		1047562	1					
ANR	1048735	Argument	pj		1047562	0					
ANR	1048736	Identifier	pj		1047562	0					
ANR	1048737	ExpressionStatement	r_list_free ( list )	1195:8:33352:33370	1047562	2	True				
ANR	1048738	CallExpression	r_list_free ( list )		1047562	0					
ANR	1048739	Callee	r_list_free		1047562	0					
ANR	1048740	Identifier	r_list_free		1047562	0					
ANR	1048741	ArgumentList	list		1047562	1					
ANR	1048742	Argument	list		1047562	0					
ANR	1048743	Identifier	list		1047562	0					
ANR	1048744	ExpressionStatement	pj_end ( pj )	1200:4:33406:33417	1047562	15	True				
ANR	1048745	CallExpression	pj_end ( pj )		1047562	0					
ANR	1048746	Callee	pj_end		1047562	0					
ANR	1048747	Identifier	pj_end		1047562	0					
ANR	1048748	ArgumentList	pj		1047562	1					
ANR	1048749	Argument	pj		1047562	0					
ANR	1048750	Identifier	pj		1047562	0					
ANR	1048751	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	1201:4:33423:33461	1047562	16	True				
ANR	1048752	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		1047562	0					
ANR	1048753	Callee	r_cons_printf		1047562	0					
ANR	1048754	Identifier	r_cons_printf		1047562	0					
ANR	1048755	ArgumentList	"""%s\\n"""		1047562	1					
ANR	1048756	Argument	"""%s\\n"""		1047562	0					
ANR	1048757	PrimaryExpression	"""%s\\n"""		1047562	0					
ANR	1048758	Argument	pj_string ( pj )		1047562	1					
ANR	1048759	CallExpression	pj_string ( pj )		1047562	0					
ANR	1048760	Callee	pj_string		1047562	0					
ANR	1048761	Identifier	pj_string		1047562	0					
ANR	1048762	ArgumentList	pj		1047562	1					
ANR	1048763	Argument	pj		1047562	0					
ANR	1048764	Identifier	pj		1047562	0					
ANR	1048765	ExpressionStatement	pj_free ( pj )	1202:4:33467:33479	1047562	17	True				
ANR	1048766	CallExpression	pj_free ( pj )		1047562	0					
ANR	1048767	Callee	pj_free		1047562	0					
ANR	1048768	Identifier	pj_free		1047562	0					
ANR	1048769	ArgumentList	pj		1047562	1					
ANR	1048770	Argument	pj		1047562	0					
ANR	1048771	Identifier	pj		1047562	0					
ANR	1048772	ExpressionStatement	free ( name )	1203:4:33485:33496	1047562	18	True				
ANR	1048773	CallExpression	free ( name )		1047562	0					
ANR	1048774	Callee	free		1047562	0					
ANR	1048775	Identifier	free		1047562	0					
ANR	1048776	ArgumentList	name		1047562	1					
ANR	1048777	Argument	name		1047562	0					
ANR	1048778	Identifier	name		1047562	0					
ANR	1048779	ExpressionStatement	ls_free ( l )	1204:4:33502:33513	1047562	19	True				
ANR	1048780	CallExpression	ls_free ( l )		1047562	0					
ANR	1048781	Callee	ls_free		1047562	0					
ANR	1048782	Identifier	ls_free		1047562	0					
ANR	1048783	ArgumentList	l		1047562	1					
ANR	1048784	Argument	l		1047562	0					
ANR	1048785	Identifier	l		1047562	0					
ANR	1048786	ElseStatement	else		1047562	0					
ANR	1048787	CompoundStatement		203:4:5176:5193	1047562	0					
ANR	1048788	IdentifierDeclStatement	RListIter * iter ;	1206:4:33545:33560	1047562	0	True				
ANR	1048789	IdentifierDecl	* iter		1047562	0					
ANR	1048790	IdentifierDeclType	RListIter *		1047562	0					
ANR	1048791	Identifier	iter		1047562	1					
ANR	1048792	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1207:4:33566:33584	1047562	1	True				
ANR	1048793	IdentifierDecl	* pj = pj_new ( )		1047562	0					
ANR	1048794	IdentifierDeclType	PJ *		1047562	0					
ANR	1048795	Identifier	pj		1047562	1					
ANR	1048796	AssignmentExpression	* pj = pj_new ( )		1047562	2		=			
ANR	1048797	Identifier	pj		1047562	0					
ANR	1048798	CallExpression	pj_new ( )		1047562	1					
ANR	1048799	Callee	pj_new		1047562	0					
ANR	1048800	Identifier	pj_new		1047562	0					
ANR	1048801	ArgumentList			1047562	1					
ANR	1048802	IdentifierDeclStatement	RTypeEnum * member ;	1208:4:33590:33607	1047562	2	True				
ANR	1048803	IdentifierDecl	* member		1047562	0					
ANR	1048804	IdentifierDeclType	RTypeEnum *		1047562	0					
ANR	1048805	Identifier	member		1047562	1					
ANR	1048806	ExpressionStatement	pj_o ( pj )	1209:4:33613:33622	1047562	3	True				
ANR	1048807	CallExpression	pj_o ( pj )		1047562	0					
ANR	1048808	Callee	pj_o		1047562	0					
ANR	1048809	Identifier	pj_o		1047562	0					
ANR	1048810	ArgumentList	pj		1047562	1					
ANR	1048811	Argument	pj		1047562	0					
ANR	1048812	Identifier	pj		1047562	0					
ANR	1048813	IfStatement	if ( member_name )		1047562	4					
ANR	1048814	Condition	member_name	1210:8:33632:33642	1047562	0	True				
ANR	1048815	Identifier	member_name		1047562	0					
ANR	1048816	CompoundStatement		205:21:5231:5231	1047562	1					
ANR	1048817	ExpressionStatement	"res = r_type_enum_member ( TDB , name , NULL , r_num_math ( core -> num , member_name ) )"	1211:5:33652:33731	1047562	0	True				
ANR	1048818	AssignmentExpression	"res = r_type_enum_member ( TDB , name , NULL , r_num_math ( core -> num , member_name ) )"		1047562	0		=			
ANR	1048819	Identifier	res		1047562	0					
ANR	1048820	CallExpression	"r_type_enum_member ( TDB , name , NULL , r_num_math ( core -> num , member_name ) )"		1047562	1					
ANR	1048821	Callee	r_type_enum_member		1047562	0					
ANR	1048822	Identifier	r_type_enum_member		1047562	0					
ANR	1048823	ArgumentList	TDB		1047562	1					
ANR	1048824	Argument	TDB		1047562	0					
ANR	1048825	Identifier	TDB		1047562	0					
ANR	1048826	Argument	name		1047562	1					
ANR	1048827	Identifier	name		1047562	0					
ANR	1048828	Argument	NULL		1047562	2					
ANR	1048829	Identifier	NULL		1047562	0					
ANR	1048830	Argument	"r_num_math ( core -> num , member_name )"		1047562	3					
ANR	1048831	CallExpression	"r_num_math ( core -> num , member_name )"		1047562	0					
ANR	1048832	Callee	r_num_math		1047562	0					
ANR	1048833	Identifier	r_num_math		1047562	0					
ANR	1048834	ArgumentList	core -> num		1047562	1					
ANR	1048835	Argument	core -> num		1047562	0					
ANR	1048836	PtrMemberAccess	core -> num		1047562	0					
ANR	1048837	Identifier	core		1047562	0					
ANR	1048838	Identifier	num		1047562	1					
ANR	1048839	Argument	member_name		1047562	1					
ANR	1048840	Identifier	member_name		1047562	0					
ANR	1048841	ElseStatement	else		1047562	0					
ANR	1048842	CompoundStatement		209:5:5359:5400	1047562	0					
ANR	1048843	IdentifierDeclStatement	"RList * list = r_type_get_enum ( TDB , name ) ;"	1214:5:33773:33814	1047562	0	True				
ANR	1048844	IdentifierDecl	"* list = r_type_get_enum ( TDB , name )"		1047562	0					
ANR	1048845	IdentifierDeclType	RList *		1047562	0					
ANR	1048846	Identifier	list		1047562	1					
ANR	1048847	AssignmentExpression	"* list = r_type_get_enum ( TDB , name )"		1047562	2		=			
ANR	1048848	Identifier	list		1047562	0					
ANR	1048849	CallExpression	"r_type_get_enum ( TDB , name )"		1047562	1					
ANR	1048850	Callee	r_type_get_enum		1047562	0					
ANR	1048851	Identifier	r_type_get_enum		1047562	0					
ANR	1048852	ArgumentList	TDB		1047562	1					
ANR	1048853	Argument	TDB		1047562	0					
ANR	1048854	Identifier	TDB		1047562	0					
ANR	1048855	Argument	name		1047562	1					
ANR	1048856	Identifier	name		1047562	0					
ANR	1048857	IfStatement	if ( list && ! r_list_empty ( list ) )		1047562	1					
ANR	1048858	Condition	list && ! r_list_empty ( list )	1215:9:33825:33852	1047562	0	True				
ANR	1048859	AndExpression	list && ! r_list_empty ( list )		1047562	0		&&			
ANR	1048860	Identifier	list		1047562	0					
ANR	1048861	UnaryOperationExpression	! r_list_empty ( list )		1047562	1					
ANR	1048862	UnaryOperator	!		1047562	0					
ANR	1048863	CallExpression	r_list_empty ( list )		1047562	1					
ANR	1048864	Callee	r_list_empty		1047562	0					
ANR	1048865	Identifier	r_list_empty		1047562	0					
ANR	1048866	ArgumentList	list		1047562	1					
ANR	1048867	Argument	list		1047562	0					
ANR	1048868	Identifier	list		1047562	0					
ANR	1048869	CompoundStatement		210:39:5441:5441	1047562	1					
ANR	1048870	ExpressionStatement	"pj_ks ( pj , ""name"" , name )"	1216:6:33863:33887	1047562	0	True				
ANR	1048871	CallExpression	"pj_ks ( pj , ""name"" , name )"		1047562	0					
ANR	1048872	Callee	pj_ks		1047562	0					
ANR	1048873	Identifier	pj_ks		1047562	0					
ANR	1048874	ArgumentList	pj		1047562	1					
ANR	1048875	Argument	pj		1047562	0					
ANR	1048876	Identifier	pj		1047562	0					
ANR	1048877	Argument	"""name"""		1047562	1					
ANR	1048878	PrimaryExpression	"""name"""		1047562	0					
ANR	1048879	Argument	name		1047562	2					
ANR	1048880	Identifier	name		1047562	0					
ANR	1048881	ExpressionStatement	"pj_k ( pj , ""values"" )"	1217:6:33895:33914	1047562	1	True				
ANR	1048882	CallExpression	"pj_k ( pj , ""values"" )"		1047562	0					
ANR	1048883	Callee	pj_k		1047562	0					
ANR	1048884	Identifier	pj_k		1047562	0					
ANR	1048885	ArgumentList	pj		1047562	1					
ANR	1048886	Argument	pj		1047562	0					
ANR	1048887	Identifier	pj		1047562	0					
ANR	1048888	Argument	"""values"""		1047562	1					
ANR	1048889	PrimaryExpression	"""values"""		1047562	0					
ANR	1048890	ExpressionStatement	pj_o ( pj )	1218:6:33922:33931	1047562	2	True				
ANR	1048891	CallExpression	pj_o ( pj )		1047562	0					
ANR	1048892	Callee	pj_o		1047562	0					
ANR	1048893	Identifier	pj_o		1047562	0					
ANR	1048894	ArgumentList	pj		1047562	1					
ANR	1048895	Argument	pj		1047562	0					
ANR	1048896	Identifier	pj		1047562	0					
ANR	1048897	Statement	r_list_foreach	1219:6:33939:33952	1047562	3	True				
ANR	1048898	Statement	(	1219:21:33954:33954	1047562	4	True				
ANR	1048899	Statement	list	1219:22:33955:33958	1047562	5	True				
ANR	1048900	Statement	","	1219:26:33959:33959	1047562	6	True				
ANR	1048901	Statement	iter	1219:28:33961:33964	1047562	7	True				
ANR	1048902	Statement	","	1219:32:33965:33965	1047562	8	True				
ANR	1048903	Statement	member	1219:34:33967:33972	1047562	9	True				
ANR	1048904	Statement	)	1219:40:33973:33973	1047562	10	True				
ANR	1048905	CompoundStatement		214:42:5561:5561	1047562	11					
ANR	1048906	ExpressionStatement	"pj_kn ( pj , member -> name , r_num_math ( NULL , member -> val ) )"	1220:7:33984:34040	1047562	0	True				
ANR	1048907	CallExpression	"pj_kn ( pj , member -> name , r_num_math ( NULL , member -> val ) )"		1047562	0					
ANR	1048908	Callee	pj_kn		1047562	0					
ANR	1048909	Identifier	pj_kn		1047562	0					
ANR	1048910	ArgumentList	pj		1047562	1					
ANR	1048911	Argument	pj		1047562	0					
ANR	1048912	Identifier	pj		1047562	0					
ANR	1048913	Argument	member -> name		1047562	1					
ANR	1048914	PtrMemberAccess	member -> name		1047562	0					
ANR	1048915	Identifier	member		1047562	0					
ANR	1048916	Identifier	name		1047562	1					
ANR	1048917	Argument	"r_num_math ( NULL , member -> val )"		1047562	2					
ANR	1048918	CallExpression	"r_num_math ( NULL , member -> val )"		1047562	0					
ANR	1048919	Callee	r_num_math		1047562	0					
ANR	1048920	Identifier	r_num_math		1047562	0					
ANR	1048921	ArgumentList	NULL		1047562	1					
ANR	1048922	Argument	NULL		1047562	0					
ANR	1048923	Identifier	NULL		1047562	0					
ANR	1048924	Argument	member -> val		1047562	1					
ANR	1048925	PtrMemberAccess	member -> val		1047562	0					
ANR	1048926	Identifier	member		1047562	0					
ANR	1048927	Identifier	val		1047562	1					
ANR	1048928	ExpressionStatement	pj_end ( pj )	1222:6:34056:34067	1047562	12	True				
ANR	1048929	CallExpression	pj_end ( pj )		1047562	0					
ANR	1048930	Callee	pj_end		1047562	0					
ANR	1048931	Identifier	pj_end		1047562	0					
ANR	1048932	ArgumentList	pj		1047562	1					
ANR	1048933	Argument	pj		1047562	0					
ANR	1048934	Identifier	pj		1047562	0					
ANR	1048935	ExpressionStatement	pj_end ( pj )	1223:6:34075:34086	1047562	13	True				
ANR	1048936	CallExpression	pj_end ( pj )		1047562	0					
ANR	1048937	Callee	pj_end		1047562	0					
ANR	1048938	Identifier	pj_end		1047562	0					
ANR	1048939	ArgumentList	pj		1047562	1					
ANR	1048940	Argument	pj		1047562	0					
ANR	1048941	Identifier	pj		1047562	0					
ANR	1048942	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	1225:5:34100:34138	1047562	2	True				
ANR	1048943	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		1047562	0					
ANR	1048944	Callee	r_cons_printf		1047562	0					
ANR	1048945	Identifier	r_cons_printf		1047562	0					
ANR	1048946	ArgumentList	"""%s\\n"""		1047562	1					
ANR	1048947	Argument	"""%s\\n"""		1047562	0					
ANR	1048948	PrimaryExpression	"""%s\\n"""		1047562	0					
ANR	1048949	Argument	pj_string ( pj )		1047562	1					
ANR	1048950	CallExpression	pj_string ( pj )		1047562	0					
ANR	1048951	Callee	pj_string		1047562	0					
ANR	1048952	Identifier	pj_string		1047562	0					
ANR	1048953	ArgumentList	pj		1047562	1					
ANR	1048954	Argument	pj		1047562	0					
ANR	1048955	Identifier	pj		1047562	0					
ANR	1048956	ExpressionStatement	pj_free ( pj )	1226:5:34145:34157	1047562	3	True				
ANR	1048957	CallExpression	pj_free ( pj )		1047562	0					
ANR	1048958	Callee	pj_free		1047562	0					
ANR	1048959	Identifier	pj_free		1047562	0					
ANR	1048960	ArgumentList	pj		1047562	1					
ANR	1048961	Argument	pj		1047562	0					
ANR	1048962	Identifier	pj		1047562	0					
ANR	1048963	ExpressionStatement	r_list_free ( list )	1227:5:34164:34182	1047562	4	True				
ANR	1048964	CallExpression	r_list_free ( list )		1047562	0					
ANR	1048965	Callee	r_list_free		1047562	0					
ANR	1048966	Identifier	r_list_free		1047562	0					
ANR	1048967	ArgumentList	list		1047562	1					
ANR	1048968	Argument	list		1047562	0					
ANR	1048969	Identifier	list		1047562	0					
ANR	1048970	BreakStatement	break ;	1230:3:34198:34203	1047562	5	True				
ANR	1048971	Label	case 'b' :	1231:2:34207:34215	1047562	6	True				
ANR	1048972	ExpressionStatement	"res = r_type_enum_member ( TDB , name , member_name , 0 )"	1232:3:34229:34281	1047562	7	True				
ANR	1048973	AssignmentExpression	"res = r_type_enum_member ( TDB , name , member_name , 0 )"		1047562	0		=			
ANR	1048974	Identifier	res		1047562	0					
ANR	1048975	CallExpression	"r_type_enum_member ( TDB , name , member_name , 0 )"		1047562	1					
ANR	1048976	Callee	r_type_enum_member		1047562	0					
ANR	1048977	Identifier	r_type_enum_member		1047562	0					
ANR	1048978	ArgumentList	TDB		1047562	1					
ANR	1048979	Argument	TDB		1047562	0					
ANR	1048980	Identifier	TDB		1047562	0					
ANR	1048981	Argument	name		1047562	1					
ANR	1048982	Identifier	name		1047562	0					
ANR	1048983	Argument	member_name		1047562	2					
ANR	1048984	Identifier	member_name		1047562	0					
ANR	1048985	Argument	0		1047562	3					
ANR	1048986	PrimaryExpression	0		1047562	0					
ANR	1048987	BreakStatement	break ;	1233:3:34286:34291	1047562	8	True				
ANR	1048988	Label	case 'c' :	1234:2:34295:34303	1047562	9	True				
ANR	1048989	ExpressionStatement	"print_enum_in_c_format ( TDB , r_str_trim_ro ( input + 2 ) , true )"	1235:3:34317:34377	1047562	10	True				
ANR	1048990	CallExpression	"print_enum_in_c_format ( TDB , r_str_trim_ro ( input + 2 ) , true )"		1047562	0					
ANR	1048991	Callee	print_enum_in_c_format		1047562	0					
ANR	1048992	Identifier	print_enum_in_c_format		1047562	0					
ANR	1048993	ArgumentList	TDB		1047562	1					
ANR	1048994	Argument	TDB		1047562	0					
ANR	1048995	Identifier	TDB		1047562	0					
ANR	1048996	Argument	r_str_trim_ro ( input + 2 )		1047562	1					
ANR	1048997	CallExpression	r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1048998	Callee	r_str_trim_ro		1047562	0					
ANR	1048999	Identifier	r_str_trim_ro		1047562	0					
ANR	1049000	ArgumentList	input + 2		1047562	1					
ANR	1049001	Argument	input + 2		1047562	0					
ANR	1049002	AdditiveExpression	input + 2		1047562	0		+			
ANR	1049003	Identifier	input		1047562	0					
ANR	1049004	PrimaryExpression	2		1047562	1					
ANR	1049005	Argument	true		1047562	2					
ANR	1049006	Identifier	true		1047562	0					
ANR	1049007	BreakStatement	break ;	1236:3:34382:34387	1047562	11	True				
ANR	1049008	Label	case 'd' :	1237:2:34391:34399	1047562	12	True				
ANR	1049009	ExpressionStatement	"print_enum_in_c_format ( TDB , r_str_trim_ro ( input + 2 ) , false )"	1238:3:34404:34465	1047562	13	True				
ANR	1049010	CallExpression	"print_enum_in_c_format ( TDB , r_str_trim_ro ( input + 2 ) , false )"		1047562	0					
ANR	1049011	Callee	print_enum_in_c_format		1047562	0					
ANR	1049012	Identifier	print_enum_in_c_format		1047562	0					
ANR	1049013	ArgumentList	TDB		1047562	1					
ANR	1049014	Argument	TDB		1047562	0					
ANR	1049015	Identifier	TDB		1047562	0					
ANR	1049016	Argument	r_str_trim_ro ( input + 2 )		1047562	1					
ANR	1049017	CallExpression	r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1049018	Callee	r_str_trim_ro		1047562	0					
ANR	1049019	Identifier	r_str_trim_ro		1047562	0					
ANR	1049020	ArgumentList	input + 2		1047562	1					
ANR	1049021	Argument	input + 2		1047562	0					
ANR	1049022	AdditiveExpression	input + 2		1047562	0		+			
ANR	1049023	Identifier	input		1047562	0					
ANR	1049024	PrimaryExpression	2		1047562	1					
ANR	1049025	Argument	false		1047562	2					
ANR	1049026	Identifier	false		1047562	0					
ANR	1049027	BreakStatement	break ;	1239:3:34470:34475	1047562	14	True				
ANR	1049028	Label	case ' ' :	1240:2:34479:34487	1047562	15	True				
ANR	1049029	IfStatement	if ( member_name )		1047562	16					
ANR	1049030	Condition	member_name	1241:7:34496:34506	1047562	0	True				
ANR	1049031	Identifier	member_name		1047562	0					
ANR	1049032	CompoundStatement		236:20:6095:6095	1047562	1					
ANR	1049033	ExpressionStatement	"res = r_type_enum_member ( TDB , name , NULL , r_num_math ( core -> num , member_name ) )"	1242:4:34515:34594	1047562	0	True				
ANR	1049034	AssignmentExpression	"res = r_type_enum_member ( TDB , name , NULL , r_num_math ( core -> num , member_name ) )"		1047562	0		=			
ANR	1049035	Identifier	res		1047562	0					
ANR	1049036	CallExpression	"r_type_enum_member ( TDB , name , NULL , r_num_math ( core -> num , member_name ) )"		1047562	1					
ANR	1049037	Callee	r_type_enum_member		1047562	0					
ANR	1049038	Identifier	r_type_enum_member		1047562	0					
ANR	1049039	ArgumentList	TDB		1047562	1					
ANR	1049040	Argument	TDB		1047562	0					
ANR	1049041	Identifier	TDB		1047562	0					
ANR	1049042	Argument	name		1047562	1					
ANR	1049043	Identifier	name		1047562	0					
ANR	1049044	Argument	NULL		1047562	2					
ANR	1049045	Identifier	NULL		1047562	0					
ANR	1049046	Argument	"r_num_math ( core -> num , member_name )"		1047562	3					
ANR	1049047	CallExpression	"r_num_math ( core -> num , member_name )"		1047562	0					
ANR	1049048	Callee	r_num_math		1047562	0					
ANR	1049049	Identifier	r_num_math		1047562	0					
ANR	1049050	ArgumentList	core -> num		1047562	1					
ANR	1049051	Argument	core -> num		1047562	0					
ANR	1049052	PtrMemberAccess	core -> num		1047562	0					
ANR	1049053	Identifier	core		1047562	0					
ANR	1049054	Identifier	num		1047562	1					
ANR	1049055	Argument	member_name		1047562	1					
ANR	1049056	Identifier	member_name		1047562	0					
ANR	1049057	ElseStatement	else		1047562	0					
ANR	1049058	CompoundStatement		241:4:6266:6283	1047562	0					
ANR	1049059	IdentifierDeclStatement	"RList * list = r_type_get_enum ( TDB , name ) ;"	1244:4:34612:34653	1047562	0	True				
ANR	1049060	IdentifierDecl	"* list = r_type_get_enum ( TDB , name )"		1047562	0					
ANR	1049061	IdentifierDeclType	RList *		1047562	0					
ANR	1049062	Identifier	list		1047562	1					
ANR	1049063	AssignmentExpression	"* list = r_type_get_enum ( TDB , name )"		1047562	2		=			
ANR	1049064	Identifier	list		1047562	0					
ANR	1049065	CallExpression	"r_type_get_enum ( TDB , name )"		1047562	1					
ANR	1049066	Callee	r_type_get_enum		1047562	0					
ANR	1049067	Identifier	r_type_get_enum		1047562	0					
ANR	1049068	ArgumentList	TDB		1047562	1					
ANR	1049069	Argument	TDB		1047562	0					
ANR	1049070	Identifier	TDB		1047562	0					
ANR	1049071	Argument	name		1047562	1					
ANR	1049072	Identifier	name		1047562	0					
ANR	1049073	IdentifierDeclStatement	RListIter * iter ;	1245:4:34659:34674	1047562	1	True				
ANR	1049074	IdentifierDecl	* iter		1047562	0					
ANR	1049075	IdentifierDeclType	RListIter *		1047562	0					
ANR	1049076	Identifier	iter		1047562	1					
ANR	1049077	IdentifierDeclStatement	RTypeEnum * member ;	1246:4:34680:34697	1047562	2	True				
ANR	1049078	IdentifierDecl	* member		1047562	0					
ANR	1049079	IdentifierDeclType	RTypeEnum *		1047562	0					
ANR	1049080	Identifier	member		1047562	1					
ANR	1049081	Statement	r_list_foreach	1247:4:34703:34716	1047562	3	True				
ANR	1049082	Statement	(	1247:19:34718:34718	1047562	4	True				
ANR	1049083	Statement	list	1247:20:34719:34722	1047562	5	True				
ANR	1049084	Statement	","	1247:24:34723:34723	1047562	6	True				
ANR	1049085	Statement	iter	1247:26:34725:34728	1047562	7	True				
ANR	1049086	Statement	","	1247:30:34729:34729	1047562	8	True				
ANR	1049087	Statement	member	1247:32:34731:34736	1047562	9	True				
ANR	1049088	Statement	)	1247:38:34737:34737	1047562	10	True				
ANR	1049089	CompoundStatement		242:40:6325:6325	1047562	11					
ANR	1049090	ExpressionStatement	"r_cons_printf ( ""%s = %s\\n"" , member -> name , member -> val )"	1248:5:34746:34800	1047562	0	True				
ANR	1049091	CallExpression	"r_cons_printf ( ""%s = %s\\n"" , member -> name , member -> val )"		1047562	0					
ANR	1049092	Callee	r_cons_printf		1047562	0					
ANR	1049093	Identifier	r_cons_printf		1047562	0					
ANR	1049094	ArgumentList	"""%s = %s\\n"""		1047562	1					
ANR	1049095	Argument	"""%s = %s\\n"""		1047562	0					
ANR	1049096	PrimaryExpression	"""%s = %s\\n"""		1047562	0					
ANR	1049097	Argument	member -> name		1047562	1					
ANR	1049098	PtrMemberAccess	member -> name		1047562	0					
ANR	1049099	Identifier	member		1047562	0					
ANR	1049100	Identifier	name		1047562	1					
ANR	1049101	Argument	member -> val		1047562	2					
ANR	1049102	PtrMemberAccess	member -> val		1047562	0					
ANR	1049103	Identifier	member		1047562	0					
ANR	1049104	Identifier	val		1047562	1					
ANR	1049105	ExpressionStatement	r_list_free ( list )	1250:4:34812:34830	1047562	12	True				
ANR	1049106	CallExpression	r_list_free ( list )		1047562	0					
ANR	1049107	Callee	r_list_free		1047562	0					
ANR	1049108	Identifier	r_list_free		1047562	0					
ANR	1049109	ArgumentList	list		1047562	1					
ANR	1049110	Argument	list		1047562	0					
ANR	1049111	Identifier	list		1047562	0					
ANR	1049112	BreakStatement	break ;	1252:3:34840:34845	1047562	17	True				
ANR	1049113	Label	case '\\0' :	1253:2:34849:34858	1047562	18	True				
ANR	1049114	CompoundStatement		252:3:6509:6550	1047562	19					
ANR	1049115	IdentifierDeclStatement	char * name = NULL ;	1254:3:34865:34882	1047562	0	True				
ANR	1049116	IdentifierDecl	* name = NULL		1047562	0					
ANR	1049117	IdentifierDeclType	char *		1047562	0					
ANR	1049118	Identifier	name		1047562	1					
ANR	1049119	AssignmentExpression	* name = NULL		1047562	2		=			
ANR	1049120	Identifier	NULL		1047562	0					
ANR	1049121	Identifier	NULL		1047562	1					
ANR	1049122	IdentifierDeclStatement	SdbKv * kv ;	1255:3:34887:34896	1047562	1	True				
ANR	1049123	IdentifierDecl	* kv		1047562	0					
ANR	1049124	IdentifierDeclType	SdbKv *		1047562	0					
ANR	1049125	Identifier	kv		1047562	1					
ANR	1049126	IdentifierDeclStatement	SdbListIter * iter ;	1256:3:34901:34918	1047562	2	True				
ANR	1049127	IdentifierDecl	* iter		1047562	0					
ANR	1049128	IdentifierDeclType	SdbListIter *		1047562	0					
ANR	1049129	Identifier	iter		1047562	1					
ANR	1049130	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( TDB , true ) ;"	1257:3:34923:34964	1047562	3	True				
ANR	1049131	IdentifierDecl	"* l = sdb_foreach_list ( TDB , true )"		1047562	0					
ANR	1049132	IdentifierDeclType	SdbList *		1047562	0					
ANR	1049133	Identifier	l		1047562	1					
ANR	1049134	AssignmentExpression	"* l = sdb_foreach_list ( TDB , true )"		1047562	2		=			
ANR	1049135	Identifier	l		1047562	0					
ANR	1049136	CallExpression	"sdb_foreach_list ( TDB , true )"		1047562	1					
ANR	1049137	Callee	sdb_foreach_list		1047562	0					
ANR	1049138	Identifier	sdb_foreach_list		1047562	0					
ANR	1049139	ArgumentList	TDB		1047562	1					
ANR	1049140	Argument	TDB		1047562	0					
ANR	1049141	Identifier	TDB		1047562	0					
ANR	1049142	Argument	true		1047562	1					
ANR	1049143	Identifier	true		1047562	0					
ANR	1049144	Statement	ls_foreach	1258:3:34969:34978	1047562	4	True				
ANR	1049145	Statement	(	1258:14:34980:34980	1047562	5	True				
ANR	1049146	Statement	l	1258:15:34981:34981	1047562	6	True				
ANR	1049147	Statement	","	1258:16:34982:34982	1047562	7	True				
ANR	1049148	Statement	iter	1258:18:34984:34987	1047562	8	True				
ANR	1049149	Statement	","	1258:22:34988:34988	1047562	9	True				
ANR	1049150	Statement	kv	1258:24:34990:34991	1047562	10	True				
ANR	1049151	Statement	)	1258:26:34992:34992	1047562	11	True				
ANR	1049152	CompoundStatement		253:28:6580:6580	1047562	12					
ANR	1049153	IfStatement	"if ( ! strcmp ( sdbkv_value ( kv ) , ""enum"" ) )"		1047562	0					
ANR	1049154	Condition	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"	1259:8:35004:35037	1047562	0	True				
ANR	1049155	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"		1047562	0					
ANR	1049156	UnaryOperator	!		1047562	0					
ANR	1049157	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""enum"" )"		1047562	1					
ANR	1049158	Callee	strcmp		1047562	0					
ANR	1049159	Identifier	strcmp		1047562	0					
ANR	1049160	ArgumentList	sdbkv_value ( kv )		1047562	1					
ANR	1049161	Argument	sdbkv_value ( kv )		1047562	0					
ANR	1049162	CallExpression	sdbkv_value ( kv )		1047562	0					
ANR	1049163	Callee	sdbkv_value		1047562	0					
ANR	1049164	Identifier	sdbkv_value		1047562	0					
ANR	1049165	ArgumentList	kv		1047562	1					
ANR	1049166	Argument	kv		1047562	0					
ANR	1049167	Identifier	kv		1047562	0					
ANR	1049168	Argument	"""enum"""		1047562	1					
ANR	1049169	PrimaryExpression	"""enum"""		1047562	0					
ANR	1049170	CompoundStatement		254:44:6626:6626	1047562	1					
ANR	1049171	IfStatement	"if ( ! name || strcmp ( sdbkv_value ( kv ) , name ) )"		1047562	0					
ANR	1049172	Condition	"! name || strcmp ( sdbkv_value ( kv ) , name )"	1260:9:35051:35090	1047562	0	True				
ANR	1049173	OrExpression	"! name || strcmp ( sdbkv_value ( kv ) , name )"		1047562	0		||			
ANR	1049174	UnaryOperationExpression	! name		1047562	0					
ANR	1049175	UnaryOperator	!		1047562	0					
ANR	1049176	Identifier	name		1047562	1					
ANR	1049177	CallExpression	"strcmp ( sdbkv_value ( kv ) , name )"		1047562	1					
ANR	1049178	Callee	strcmp		1047562	0					
ANR	1049179	Identifier	strcmp		1047562	0					
ANR	1049180	ArgumentList	sdbkv_value ( kv )		1047562	1					
ANR	1049181	Argument	sdbkv_value ( kv )		1047562	0					
ANR	1049182	CallExpression	sdbkv_value ( kv )		1047562	0					
ANR	1049183	Callee	sdbkv_value		1047562	0					
ANR	1049184	Identifier	sdbkv_value		1047562	0					
ANR	1049185	ArgumentList	kv		1047562	1					
ANR	1049186	Argument	kv		1047562	0					
ANR	1049187	Identifier	kv		1047562	0					
ANR	1049188	Argument	name		1047562	1					
ANR	1049189	Identifier	name		1047562	0					
ANR	1049190	CompoundStatement		255:51:6679:6679	1047562	1					
ANR	1049191	ExpressionStatement	free ( name )	1261:6:35101:35112	1047562	0	True				
ANR	1049192	CallExpression	free ( name )		1047562	0					
ANR	1049193	Callee	free		1047562	0					
ANR	1049194	Identifier	free		1047562	0					
ANR	1049195	ArgumentList	name		1047562	1					
ANR	1049196	Argument	name		1047562	0					
ANR	1049197	Identifier	name		1047562	0					
ANR	1049198	ExpressionStatement	name = strdup ( sdbkv_key ( kv ) )	1262:6:35120:35150	1047562	1	True				
ANR	1049199	AssignmentExpression	name = strdup ( sdbkv_key ( kv ) )		1047562	0		=			
ANR	1049200	Identifier	name		1047562	0					
ANR	1049201	CallExpression	strdup ( sdbkv_key ( kv ) )		1047562	1					
ANR	1049202	Callee	strdup		1047562	0					
ANR	1049203	Identifier	strdup		1047562	0					
ANR	1049204	ArgumentList	sdbkv_key ( kv )		1047562	1					
ANR	1049205	Argument	sdbkv_key ( kv )		1047562	0					
ANR	1049206	CallExpression	sdbkv_key ( kv )		1047562	0					
ANR	1049207	Callee	sdbkv_key		1047562	0					
ANR	1049208	Identifier	sdbkv_key		1047562	0					
ANR	1049209	ArgumentList	kv		1047562	1					
ANR	1049210	Argument	kv		1047562	0					
ANR	1049211	Identifier	kv		1047562	0					
ANR	1049212	ExpressionStatement	r_cons_println ( name )	1263:6:35158:35179	1047562	2	True				
ANR	1049213	CallExpression	r_cons_println ( name )		1047562	0					
ANR	1049214	Callee	r_cons_println		1047562	0					
ANR	1049215	Identifier	r_cons_println		1047562	0					
ANR	1049216	ArgumentList	name		1047562	1					
ANR	1049217	Argument	name		1047562	0					
ANR	1049218	Identifier	name		1047562	0					
ANR	1049219	ExpressionStatement	free ( name )	1267:3:35202:35213	1047562	13	True				
ANR	1049220	CallExpression	free ( name )		1047562	0					
ANR	1049221	Callee	free		1047562	0					
ANR	1049222	Identifier	free		1047562	0					
ANR	1049223	ArgumentList	name		1047562	1					
ANR	1049224	Argument	name		1047562	0					
ANR	1049225	Identifier	name		1047562	0					
ANR	1049226	ExpressionStatement	ls_free ( l )	1268:3:35218:35229	1047562	14	True				
ANR	1049227	CallExpression	ls_free ( l )		1047562	0					
ANR	1049228	Callee	ls_free		1047562	0					
ANR	1049229	Identifier	ls_free		1047562	0					
ANR	1049230	ArgumentList	l		1047562	1					
ANR	1049231	Argument	l		1047562	0					
ANR	1049232	Identifier	l		1047562	0					
ANR	1049233	BreakStatement	break ;	1269:4:35235:35240	1047562	20	True				
ANR	1049234	ExpressionStatement	free ( name )	1271:2:35248:35259	1047562	7	True				
ANR	1049235	CallExpression	free ( name )		1047562	0					
ANR	1049236	Callee	free		1047562	0					
ANR	1049237	Identifier	free		1047562	0					
ANR	1049238	ArgumentList	name		1047562	1					
ANR	1049239	Argument	name		1047562	0					
ANR	1049240	Identifier	name		1047562	0					
ANR	1049241	IfStatement	if ( res )		1047562	8					
ANR	1049242	Condition	res	1272:6:35267:35269	1047562	0	True				
ANR	1049243	Identifier	res		1047562	0					
ANR	1049244	CompoundStatement		267:11:6858:6858	1047562	1					
ANR	1049245	ExpressionStatement	r_cons_println ( res )	1273:3:35277:35297	1047562	0	True				
ANR	1049246	CallExpression	r_cons_println ( res )		1047562	0					
ANR	1049247	Callee	r_cons_println		1047562	0					
ANR	1049248	Identifier	r_cons_println		1047562	0					
ANR	1049249	ArgumentList	res		1047562	1					
ANR	1049250	Argument	res		1047562	0					
ANR	1049251	Identifier	res		1047562	0					
ANR	1049252	ElseStatement	else		1047562	0					
ANR	1049253	IfStatement	if ( member_name )		1047562	0					
ANR	1049254	Condition	member_name	1274:13:35312:35322	1047562	0	True				
ANR	1049255	Identifier	member_name		1047562	0					
ANR	1049256	CompoundStatement		269:26:6911:6911	1047562	1					
ANR	1049257	ExpressionStatement	"eprintf ( ""Invalid enum member\\n"" )"	1275:3:35330:35363	1047562	0	True				
ANR	1049258	CallExpression	"eprintf ( ""Invalid enum member\\n"" )"		1047562	0					
ANR	1049259	Callee	eprintf		1047562	0					
ANR	1049260	Identifier	eprintf		1047562	0					
ANR	1049261	ArgumentList	"""Invalid enum member\\n"""		1047562	1					
ANR	1049262	Argument	"""Invalid enum member\\n"""		1047562	0					
ANR	1049263	PrimaryExpression	"""Invalid enum member\\n"""		1047562	0					
ANR	1049264	BreakStatement	break ;	1277:3:35372:35377	1047562	18	True				
ANR	1049265	Label	case ' ' :	1278:1:35380:35388	1047562	19	True				
ANR	1049266	ExpressionStatement	"showFormat ( core , input + 1 , 0 )"	1279:2:35392:35423	1047562	20	True				
ANR	1049267	CallExpression	"showFormat ( core , input + 1 , 0 )"		1047562	0					
ANR	1049268	Callee	showFormat		1047562	0					
ANR	1049269	Identifier	showFormat		1047562	0					
ANR	1049270	ArgumentList	core		1047562	1					
ANR	1049271	Argument	core		1047562	0					
ANR	1049272	Identifier	core		1047562	0					
ANR	1049273	Argument	input + 1		1047562	1					
ANR	1049274	AdditiveExpression	input + 1		1047562	0		+			
ANR	1049275	Identifier	input		1047562	0					
ANR	1049276	PrimaryExpression	1		1047562	1					
ANR	1049277	Argument	0		1047562	2					
ANR	1049278	PrimaryExpression	0		1047562	0					
ANR	1049279	BreakStatement	break ;	1280:2:35427:35432	1047562	21	True				
ANR	1049280	Label	case 'j' :	1282:1:35474:35482	1047562	22	True				
ANR	1049281	Label	case '*' :	1283:1:35493:35501	1047562	23	True				
ANR	1049282	Label	case 0 :	1284:1:35512:35518	1047562	24	True				
ANR	1049283	ExpressionStatement	"typesList ( core , input [ 0 ] )"	1285:2:35529:35555	1047562	25	True				
ANR	1049284	CallExpression	"typesList ( core , input [ 0 ] )"		1047562	0					
ANR	1049285	Callee	typesList		1047562	0					
ANR	1049286	Identifier	typesList		1047562	0					
ANR	1049287	ArgumentList	core		1047562	1					
ANR	1049288	Argument	core		1047562	0					
ANR	1049289	Identifier	core		1047562	0					
ANR	1049290	Argument	input [ 0 ]		1047562	1					
ANR	1049291	ArrayIndexing	input [ 0 ]		1047562	0					
ANR	1049292	Identifier	input		1047562	0					
ANR	1049293	PrimaryExpression	0		1047562	1					
ANR	1049294	BreakStatement	break ;	1286:2:35559:35564	1047562	26	True				
ANR	1049295	Label	case 'o' :	1287:1:35567:35575	1047562	27	True				
ANR	1049296	IfStatement	if ( input [ 1 ] == '?' )		1047562	28					
ANR	1049297	Condition	input [ 1 ] == '?'	1288:6:35591:35605	1047562	0	True				
ANR	1049298	EqualityExpression	input [ 1 ] == '?'		1047562	0		==			
ANR	1049299	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1049300	Identifier	input		1047562	0					
ANR	1049301	PrimaryExpression	1		1047562	1					
ANR	1049302	PrimaryExpression	'?'		1047562	1					
ANR	1049303	CompoundStatement		283:23:7194:7194	1047562	1					
ANR	1049304	ExpressionStatement	"r_core_cmd_help ( core , help_msg_to )"	1289:3:35613:35648	1047562	0	True				
ANR	1049305	CallExpression	"r_core_cmd_help ( core , help_msg_to )"		1047562	0					
ANR	1049306	Callee	r_core_cmd_help		1047562	0					
ANR	1049307	Identifier	r_core_cmd_help		1047562	0					
ANR	1049308	ArgumentList	core		1047562	1					
ANR	1049309	Argument	core		1047562	0					
ANR	1049310	Identifier	core		1047562	0					
ANR	1049311	Argument	help_msg_to		1047562	1					
ANR	1049312	Identifier	help_msg_to		1047562	0					
ANR	1049313	ElseStatement	else		1047562	0					
ANR	1049314	IfStatement	if ( ! r_sandbox_enable ( 0 ) )		1047562	0					
ANR	1049315	Condition	! r_sandbox_enable ( 0 )	1290:13:35663:35683	1047562	0	True				
ANR	1049316	UnaryOperationExpression	! r_sandbox_enable ( 0 )		1047562	0					
ANR	1049317	UnaryOperator	!		1047562	0					
ANR	1049318	CallExpression	r_sandbox_enable ( 0 )		1047562	1					
ANR	1049319	Callee	r_sandbox_enable		1047562	0					
ANR	1049320	Identifier	r_sandbox_enable		1047562	0					
ANR	1049321	ArgumentList	0		1047562	1					
ANR	1049322	Argument	0		1047562	0					
ANR	1049323	PrimaryExpression	0		1047562	0					
ANR	1049324	CompoundStatement		285:36:7272:7272	1047562	1					
ANR	1049325	IfStatement	if ( input [ 1 ] == ' ' )		1047562	0					
ANR	1049326	Condition	input [ 1 ] == ' '	1291:7:35695:35709	1047562	0	True				
ANR	1049327	EqualityExpression	input [ 1 ] == ' '		1047562	0		==			
ANR	1049328	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1049329	Identifier	input		1047562	0					
ANR	1049330	PrimaryExpression	1		1047562	1					
ANR	1049331	PrimaryExpression	' '		1047562	1					
ANR	1049332	CompoundStatement		289:4:7406:7427	1047562	1					
ANR	1049333	IdentifierDeclStatement	"const char * dir = r_config_get ( core -> config , ""dir.types"" ) ;"	1292:4:35718:35776	1047562	0	True				
ANR	1049334	IdentifierDecl	"* dir = r_config_get ( core -> config , ""dir.types"" )"		1047562	0					
ANR	1049335	IdentifierDeclType	const char *		1047562	0					
ANR	1049336	Identifier	dir		1047562	1					
ANR	1049337	AssignmentExpression	"* dir = r_config_get ( core -> config , ""dir.types"" )"		1047562	2		=			
ANR	1049338	Identifier	dir		1047562	0					
ANR	1049339	CallExpression	"r_config_get ( core -> config , ""dir.types"" )"		1047562	1					
ANR	1049340	Callee	r_config_get		1047562	0					
ANR	1049341	Identifier	r_config_get		1047562	0					
ANR	1049342	ArgumentList	core -> config		1047562	1					
ANR	1049343	Argument	core -> config		1047562	0					
ANR	1049344	PtrMemberAccess	core -> config		1047562	0					
ANR	1049345	Identifier	core		1047562	0					
ANR	1049346	Identifier	config		1047562	1					
ANR	1049347	Argument	"""dir.types"""		1047562	1					
ANR	1049348	PrimaryExpression	"""dir.types"""		1047562	0					
ANR	1049349	IdentifierDeclStatement	const char * filename = input + 2 ;	1293:4:35782:35814	1047562	1	True				
ANR	1049350	IdentifierDecl	* filename = input + 2		1047562	0					
ANR	1049351	IdentifierDeclType	const char *		1047562	0					
ANR	1049352	Identifier	filename		1047562	1					
ANR	1049353	AssignmentExpression	* filename = input + 2		1047562	2		=			
ANR	1049354	Identifier	filename		1047562	0					
ANR	1049355	AdditiveExpression	input + 2		1047562	1		+			
ANR	1049356	Identifier	input		1047562	0					
ANR	1049357	PrimaryExpression	2		1047562	1					
ANR	1049358	IdentifierDeclStatement	char * homefile = NULL ;	1294:4:35820:35841	1047562	2	True				
ANR	1049359	IdentifierDecl	* homefile = NULL		1047562	0					
ANR	1049360	IdentifierDeclType	char *		1047562	0					
ANR	1049361	Identifier	homefile		1047562	1					
ANR	1049362	AssignmentExpression	* homefile = NULL		1047562	2		=			
ANR	1049363	Identifier	NULL		1047562	0					
ANR	1049364	Identifier	NULL		1047562	1					
ANR	1049365	IfStatement	if ( * filename == '~' )		1047562	3					
ANR	1049366	Condition	* filename == '~'	1295:8:35851:35866	1047562	0	True				
ANR	1049367	EqualityExpression	* filename == '~'		1047562	0		==			
ANR	1049368	UnaryOperationExpression	* filename		1047562	0					
ANR	1049369	UnaryOperator	*		1047562	0					
ANR	1049370	Identifier	filename		1047562	1					
ANR	1049371	PrimaryExpression	'~'		1047562	1					
ANR	1049372	CompoundStatement		290:26:7455:7455	1047562	1					
ANR	1049373	IfStatement	if ( filename [ 1 ] && filename [ 2 ] )		1047562	0					
ANR	1049374	Condition	filename [ 1 ] && filename [ 2 ]	1296:9:35880:35905	1047562	0	True				
ANR	1049375	AndExpression	filename [ 1 ] && filename [ 2 ]		1047562	0		&&			
ANR	1049376	ArrayIndexing	filename [ 1 ]		1047562	0					
ANR	1049377	Identifier	filename		1047562	0					
ANR	1049378	PrimaryExpression	1		1047562	1					
ANR	1049379	ArrayIndexing	filename [ 2 ]		1047562	1					
ANR	1049380	Identifier	filename		1047562	0					
ANR	1049381	PrimaryExpression	2		1047562	1					
ANR	1049382	CompoundStatement		291:37:7494:7494	1047562	1					
ANR	1049383	ExpressionStatement	homefile = r_str_home ( filename + 2 )	1297:6:35916:35952	1047562	0	True				
ANR	1049384	AssignmentExpression	homefile = r_str_home ( filename + 2 )		1047562	0		=			
ANR	1049385	Identifier	homefile		1047562	0					
ANR	1049386	CallExpression	r_str_home ( filename + 2 )		1047562	1					
ANR	1049387	Callee	r_str_home		1047562	0					
ANR	1049388	Identifier	r_str_home		1047562	0					
ANR	1049389	ArgumentList	filename + 2		1047562	1					
ANR	1049390	Argument	filename + 2		1047562	0					
ANR	1049391	AdditiveExpression	filename + 2		1047562	0		+			
ANR	1049392	Identifier	filename		1047562	0					
ANR	1049393	PrimaryExpression	2		1047562	1					
ANR	1049394	ExpressionStatement	filename = homefile	1298:6:35960:35979	1047562	1	True				
ANR	1049395	AssignmentExpression	filename = homefile		1047562	0		=			
ANR	1049396	Identifier	filename		1047562	0					
ANR	1049397	Identifier	homefile		1047562	1					
ANR	1049398	IfStatement	"if ( ! strcmp ( filename , ""-"" ) )"		1047562	4					
ANR	1049399	Condition	"! strcmp ( filename , ""-"" )"	1301:8:36002:36024	1047562	0	True				
ANR	1049400	UnaryOperationExpression	"! strcmp ( filename , ""-"" )"		1047562	0					
ANR	1049401	UnaryOperator	!		1047562	0					
ANR	1049402	CallExpression	"strcmp ( filename , ""-"" )"		1047562	1					
ANR	1049403	Callee	strcmp		1047562	0					
ANR	1049404	Identifier	strcmp		1047562	0					
ANR	1049405	ArgumentList	filename		1047562	1					
ANR	1049406	Argument	filename		1047562	0					
ANR	1049407	Identifier	filename		1047562	0					
ANR	1049408	Argument	"""-"""		1047562	1					
ANR	1049409	PrimaryExpression	"""-"""		1047562	0					
ANR	1049410	CompoundStatement		297:5:7620:7663	1047562	1					
ANR	1049411	IdentifierDeclStatement	"char * tmp = r_core_editor ( core , ""*.h"" , """" ) ;"	1302:5:36034:36077	1047562	0	True				
ANR	1049412	IdentifierDecl	"* tmp = r_core_editor ( core , ""*.h"" , """" )"		1047562	0					
ANR	1049413	IdentifierDeclType	char *		1047562	0					
ANR	1049414	Identifier	tmp		1047562	1					
ANR	1049415	AssignmentExpression	"* tmp = r_core_editor ( core , ""*.h"" , """" )"		1047562	2		=			
ANR	1049416	Identifier	tmp		1047562	0					
ANR	1049417	CallExpression	"r_core_editor ( core , ""*.h"" , """" )"		1047562	1					
ANR	1049418	Callee	r_core_editor		1047562	0					
ANR	1049419	Identifier	r_core_editor		1047562	0					
ANR	1049420	ArgumentList	core		1047562	1					
ANR	1049421	Argument	core		1047562	0					
ANR	1049422	Identifier	core		1047562	0					
ANR	1049423	Argument	"""*.h"""		1047562	1					
ANR	1049424	PrimaryExpression	"""*.h"""		1047562	0					
ANR	1049425	Argument	""""""		1047562	2					
ANR	1049426	PrimaryExpression	""""""		1047562	0					
ANR	1049427	IfStatement	if ( tmp )		1047562	1					
ANR	1049428	Condition	tmp	1303:9:36088:36090	1047562	0	True				
ANR	1049429	Identifier	tmp		1047562	0					
ANR	1049430	CompoundStatement		300:6:7717:7775	1047562	1					
ANR	1049431	IdentifierDeclStatement	char * error_msg = NULL ;	1304:6:36101:36123	1047562	0	True				
ANR	1049432	IdentifierDecl	* error_msg = NULL		1047562	0					
ANR	1049433	IdentifierDeclType	char *		1047562	0					
ANR	1049434	Identifier	error_msg		1047562	1					
ANR	1049435	AssignmentExpression	* error_msg = NULL		1047562	2		=			
ANR	1049436	Identifier	NULL		1047562	0					
ANR	1049437	Identifier	NULL		1047562	1					
ANR	1049438	IdentifierDeclStatement	"char * out = r_parse_c_string ( core -> anal , tmp , & error_msg ) ;"	1305:6:36131:36189	1047562	1	True				
ANR	1049439	IdentifierDecl	"* out = r_parse_c_string ( core -> anal , tmp , & error_msg )"		1047562	0					
ANR	1049440	IdentifierDeclType	char *		1047562	0					
ANR	1049441	Identifier	out		1047562	1					
ANR	1049442	AssignmentExpression	"* out = r_parse_c_string ( core -> anal , tmp , & error_msg )"		1047562	2		=			
ANR	1049443	Identifier	out		1047562	0					
ANR	1049444	CallExpression	"r_parse_c_string ( core -> anal , tmp , & error_msg )"		1047562	1					
ANR	1049445	Callee	r_parse_c_string		1047562	0					
ANR	1049446	Identifier	r_parse_c_string		1047562	0					
ANR	1049447	ArgumentList	core -> anal		1047562	1					
ANR	1049448	Argument	core -> anal		1047562	0					
ANR	1049449	PtrMemberAccess	core -> anal		1047562	0					
ANR	1049450	Identifier	core		1047562	0					
ANR	1049451	Identifier	anal		1047562	1					
ANR	1049452	Argument	tmp		1047562	1					
ANR	1049453	Identifier	tmp		1047562	0					
ANR	1049454	Argument	& error_msg		1047562	2					
ANR	1049455	UnaryOperationExpression	& error_msg		1047562	0					
ANR	1049456	UnaryOperator	&		1047562	0					
ANR	1049457	Identifier	error_msg		1047562	1					
ANR	1049458	IfStatement	if ( out )		1047562	2					
ANR	1049459	Condition	out	1306:10:36201:36203	1047562	0	True				
ANR	1049460	Identifier	out		1047562	0					
ANR	1049461	CompoundStatement		301:15:7792:7792	1047562	1					
ANR	1049462	ExpressionStatement	"r_anal_save_parsed_type ( core -> anal , out )"	1308:7:36247:36288	1047562	0	True				
ANR	1049463	CallExpression	"r_anal_save_parsed_type ( core -> anal , out )"		1047562	0					
ANR	1049464	Callee	r_anal_save_parsed_type		1047562	0					
ANR	1049465	Identifier	r_anal_save_parsed_type		1047562	0					
ANR	1049466	ArgumentList	core -> anal		1047562	1					
ANR	1049467	Argument	core -> anal		1047562	0					
ANR	1049468	PtrMemberAccess	core -> anal		1047562	0					
ANR	1049469	Identifier	core		1047562	0					
ANR	1049470	Identifier	anal		1047562	1					
ANR	1049471	Argument	out		1047562	1					
ANR	1049472	Identifier	out		1047562	0					
ANR	1049473	ExpressionStatement	free ( out )	1309:7:36297:36307	1047562	1	True				
ANR	1049474	CallExpression	free ( out )		1047562	0					
ANR	1049475	Callee	free		1047562	0					
ANR	1049476	Identifier	free		1047562	0					
ANR	1049477	ArgumentList	out		1047562	1					
ANR	1049478	Argument	out		1047562	0					
ANR	1049479	Identifier	out		1047562	0					
ANR	1049480	IfStatement	if ( error_msg )		1047562	3					
ANR	1049481	Condition	error_msg	1311:10:36327:36335	1047562	0	True				
ANR	1049482	Identifier	error_msg		1047562	0					
ANR	1049483	CompoundStatement		306:21:7924:7924	1047562	1					
ANR	1049484	ExpressionStatement	"fprintf ( stderr , ""%s"" , error_msg )"	1312:7:36347:36380	1047562	0	True				
ANR	1049485	CallExpression	"fprintf ( stderr , ""%s"" , error_msg )"		1047562	0					
ANR	1049486	Callee	fprintf		1047562	0					
ANR	1049487	Identifier	fprintf		1047562	0					
ANR	1049488	ArgumentList	stderr		1047562	1					
ANR	1049489	Argument	stderr		1047562	0					
ANR	1049490	Identifier	stderr		1047562	0					
ANR	1049491	Argument	"""%s"""		1047562	1					
ANR	1049492	PrimaryExpression	"""%s"""		1047562	0					
ANR	1049493	Argument	error_msg		1047562	2					
ANR	1049494	Identifier	error_msg		1047562	0					
ANR	1049495	ExpressionStatement	free ( error_msg )	1313:7:36389:36405	1047562	1	True				
ANR	1049496	CallExpression	free ( error_msg )		1047562	0					
ANR	1049497	Callee	free		1047562	0					
ANR	1049498	Identifier	free		1047562	0					
ANR	1049499	ArgumentList	error_msg		1047562	1					
ANR	1049500	Argument	error_msg		1047562	0					
ANR	1049501	Identifier	error_msg		1047562	0					
ANR	1049502	ExpressionStatement	free ( tmp )	1315:6:36421:36431	1047562	4	True				
ANR	1049503	CallExpression	free ( tmp )		1047562	0					
ANR	1049504	Callee	free		1047562	0					
ANR	1049505	Identifier	free		1047562	0					
ANR	1049506	ArgumentList	tmp		1047562	1					
ANR	1049507	Argument	tmp		1047562	0					
ANR	1049508	Identifier	tmp		1047562	0					
ANR	1049509	ElseStatement	else		1047562	0					
ANR	1049510	CompoundStatement		314:5:8073:8139	1047562	0					
ANR	1049511	IdentifierDeclStatement	char * error_msg = NULL ;	1318:5:36458:36480	1047562	0	True				
ANR	1049512	IdentifierDecl	* error_msg = NULL		1047562	0					
ANR	1049513	IdentifierDeclType	char *		1047562	0					
ANR	1049514	Identifier	error_msg		1047562	1					
ANR	1049515	AssignmentExpression	* error_msg = NULL		1047562	2		=			
ANR	1049516	Identifier	NULL		1047562	0					
ANR	1049517	Identifier	NULL		1047562	1					
ANR	1049518	IdentifierDeclStatement	"char * out = r_parse_c_file ( core -> anal , filename , dir , & error_msg ) ;"	1319:5:36487:36553	1047562	1	True				
ANR	1049519	IdentifierDecl	"* out = r_parse_c_file ( core -> anal , filename , dir , & error_msg )"		1047562	0					
ANR	1049520	IdentifierDeclType	char *		1047562	0					
ANR	1049521	Identifier	out		1047562	1					
ANR	1049522	AssignmentExpression	"* out = r_parse_c_file ( core -> anal , filename , dir , & error_msg )"		1047562	2		=			
ANR	1049523	Identifier	out		1047562	0					
ANR	1049524	CallExpression	"r_parse_c_file ( core -> anal , filename , dir , & error_msg )"		1047562	1					
ANR	1049525	Callee	r_parse_c_file		1047562	0					
ANR	1049526	Identifier	r_parse_c_file		1047562	0					
ANR	1049527	ArgumentList	core -> anal		1047562	1					
ANR	1049528	Argument	core -> anal		1047562	0					
ANR	1049529	PtrMemberAccess	core -> anal		1047562	0					
ANR	1049530	Identifier	core		1047562	0					
ANR	1049531	Identifier	anal		1047562	1					
ANR	1049532	Argument	filename		1047562	1					
ANR	1049533	Identifier	filename		1047562	0					
ANR	1049534	Argument	dir		1047562	2					
ANR	1049535	Identifier	dir		1047562	0					
ANR	1049536	Argument	& error_msg		1047562	3					
ANR	1049537	UnaryOperationExpression	& error_msg		1047562	0					
ANR	1049538	UnaryOperator	&		1047562	0					
ANR	1049539	Identifier	error_msg		1047562	1					
ANR	1049540	IfStatement	if ( out )		1047562	2					
ANR	1049541	Condition	out	1320:9:36564:36566	1047562	0	True				
ANR	1049542	Identifier	out		1047562	0					
ANR	1049543	CompoundStatement		315:14:8155:8155	1047562	1					
ANR	1049544	ExpressionStatement	"r_anal_save_parsed_type ( core -> anal , out )"	1322:6:36606:36647	1047562	0	True				
ANR	1049545	CallExpression	"r_anal_save_parsed_type ( core -> anal , out )"		1047562	0					
ANR	1049546	Callee	r_anal_save_parsed_type		1047562	0					
ANR	1049547	Identifier	r_anal_save_parsed_type		1047562	0					
ANR	1049548	ArgumentList	core -> anal		1047562	1					
ANR	1049549	Argument	core -> anal		1047562	0					
ANR	1049550	PtrMemberAccess	core -> anal		1047562	0					
ANR	1049551	Identifier	core		1047562	0					
ANR	1049552	Identifier	anal		1047562	1					
ANR	1049553	Argument	out		1047562	1					
ANR	1049554	Identifier	out		1047562	0					
ANR	1049555	ExpressionStatement	free ( out )	1323:6:36655:36665	1047562	1	True				
ANR	1049556	CallExpression	free ( out )		1047562	0					
ANR	1049557	Callee	free		1047562	0					
ANR	1049558	Identifier	free		1047562	0					
ANR	1049559	ArgumentList	out		1047562	1					
ANR	1049560	Argument	out		1047562	0					
ANR	1049561	Identifier	out		1047562	0					
ANR	1049562	IfStatement	if ( error_msg )		1047562	3					
ANR	1049563	Condition	error_msg	1325:9:36683:36691	1047562	0	True				
ANR	1049564	Identifier	error_msg		1047562	0					
ANR	1049565	CompoundStatement		320:20:8280:8280	1047562	1					
ANR	1049566	ExpressionStatement	"fprintf ( stderr , ""%s"" , error_msg )"	1326:6:36702:36735	1047562	0	True				
ANR	1049567	CallExpression	"fprintf ( stderr , ""%s"" , error_msg )"		1047562	0					
ANR	1049568	Callee	fprintf		1047562	0					
ANR	1049569	Identifier	fprintf		1047562	0					
ANR	1049570	ArgumentList	stderr		1047562	1					
ANR	1049571	Argument	stderr		1047562	0					
ANR	1049572	Identifier	stderr		1047562	0					
ANR	1049573	Argument	"""%s"""		1047562	1					
ANR	1049574	PrimaryExpression	"""%s"""		1047562	0					
ANR	1049575	Argument	error_msg		1047562	2					
ANR	1049576	Identifier	error_msg		1047562	0					
ANR	1049577	ExpressionStatement	free ( error_msg )	1327:6:36743:36759	1047562	1	True				
ANR	1049578	CallExpression	free ( error_msg )		1047562	0					
ANR	1049579	Callee	free		1047562	0					
ANR	1049580	Identifier	free		1047562	0					
ANR	1049581	ArgumentList	error_msg		1047562	1					
ANR	1049582	Argument	error_msg		1047562	0					
ANR	1049583	Identifier	error_msg		1047562	0					
ANR	1049584	ExpressionStatement	free ( homefile )	1330:4:36778:36793	1047562	5	True				
ANR	1049585	CallExpression	free ( homefile )		1047562	0					
ANR	1049586	Callee	free		1047562	0					
ANR	1049587	Identifier	free		1047562	0					
ANR	1049588	ArgumentList	homefile		1047562	1					
ANR	1049589	Argument	homefile		1047562	0					
ANR	1049590	Identifier	homefile		1047562	0					
ANR	1049591	ElseStatement	else		1047562	0					
ANR	1049592	IfStatement	if ( input [ 1 ] == 's' )		1047562	0					
ANR	1049593	Condition	input [ 1 ] == 's'	1331:14:36809:36823	1047562	0	True				
ANR	1049594	EqualityExpression	input [ 1 ] == 's'		1047562	0		==			
ANR	1049595	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1049596	Identifier	input		1047562	0					
ANR	1049597	PrimaryExpression	1		1047562	1					
ANR	1049598	PrimaryExpression	's'		1047562	1					
ANR	1049599	CompoundStatement		327:4:8418:8448	1047562	1					
ANR	1049600	IdentifierDeclStatement	const char * dbpath = input + 3 ;	1332:4:36832:36862	1047562	0	True				
ANR	1049601	IdentifierDecl	* dbpath = input + 3		1047562	0					
ANR	1049602	IdentifierDeclType	const char *		1047562	0					
ANR	1049603	Identifier	dbpath		1047562	1					
ANR	1049604	AssignmentExpression	* dbpath = input + 3		1047562	2		=			
ANR	1049605	Identifier	dbpath		1047562	0					
ANR	1049606	AdditiveExpression	input + 3		1047562	1		+			
ANR	1049607	Identifier	input		1047562	0					
ANR	1049608	PrimaryExpression	3		1047562	1					
ANR	1049609	IfStatement	if ( r_file_exists ( dbpath ) )		1047562	1					
ANR	1049610	Condition	r_file_exists ( dbpath )	1333:8:36872:36893	1047562	0	True				
ANR	1049611	CallExpression	r_file_exists ( dbpath )		1047562	0					
ANR	1049612	Callee	r_file_exists		1047562	0					
ANR	1049613	Identifier	r_file_exists		1047562	0					
ANR	1049614	ArgumentList	dbpath		1047562	1					
ANR	1049615	Argument	dbpath		1047562	0					
ANR	1049616	Identifier	dbpath		1047562	0					
ANR	1049617	CompoundStatement		329:5:8489:8525	1047562	1					
ANR	1049618	IdentifierDeclStatement	"Sdb * db_tmp = sdb_new ( 0 , dbpath , 0 ) ;"	1334:5:36903:36939	1047562	0	True				
ANR	1049619	IdentifierDecl	"* db_tmp = sdb_new ( 0 , dbpath , 0 )"		1047562	0					
ANR	1049620	IdentifierDeclType	Sdb *		1047562	0					
ANR	1049621	Identifier	db_tmp		1047562	1					
ANR	1049622	AssignmentExpression	"* db_tmp = sdb_new ( 0 , dbpath , 0 )"		1047562	2		=			
ANR	1049623	Identifier	db_tmp		1047562	0					
ANR	1049624	CallExpression	"sdb_new ( 0 , dbpath , 0 )"		1047562	1					
ANR	1049625	Callee	sdb_new		1047562	0					
ANR	1049626	Identifier	sdb_new		1047562	0					
ANR	1049627	ArgumentList	0		1047562	1					
ANR	1049628	Argument	0		1047562	0					
ANR	1049629	PrimaryExpression	0		1047562	0					
ANR	1049630	Argument	dbpath		1047562	1					
ANR	1049631	Identifier	dbpath		1047562	0					
ANR	1049632	Argument	0		1047562	2					
ANR	1049633	PrimaryExpression	0		1047562	0					
ANR	1049634	ExpressionStatement	"sdb_merge ( TDB , db_tmp )"	1335:5:36946:36969	1047562	1	True				
ANR	1049635	CallExpression	"sdb_merge ( TDB , db_tmp )"		1047562	0					
ANR	1049636	Callee	sdb_merge		1047562	0					
ANR	1049637	Identifier	sdb_merge		1047562	0					
ANR	1049638	ArgumentList	TDB		1047562	1					
ANR	1049639	Argument	TDB		1047562	0					
ANR	1049640	Identifier	TDB		1047562	0					
ANR	1049641	Argument	db_tmp		1047562	1					
ANR	1049642	Identifier	db_tmp		1047562	0					
ANR	1049643	ExpressionStatement	sdb_close ( db_tmp )	1336:5:36976:36994	1047562	2	True				
ANR	1049644	CallExpression	sdb_close ( db_tmp )		1047562	0					
ANR	1049645	Callee	sdb_close		1047562	0					
ANR	1049646	Identifier	sdb_close		1047562	0					
ANR	1049647	ArgumentList	db_tmp		1047562	1					
ANR	1049648	Argument	db_tmp		1047562	0					
ANR	1049649	Identifier	db_tmp		1047562	0					
ANR	1049650	ExpressionStatement	sdb_free ( db_tmp )	1337:5:37001:37018	1047562	3	True				
ANR	1049651	CallExpression	sdb_free ( db_tmp )		1047562	0					
ANR	1049652	Callee	sdb_free		1047562	0					
ANR	1049653	Identifier	sdb_free		1047562	0					
ANR	1049654	ArgumentList	db_tmp		1047562	1					
ANR	1049655	Argument	db_tmp		1047562	0					
ANR	1049656	Identifier	db_tmp		1047562	0					
ANR	1049657	ElseStatement	else		1047562	0					
ANR	1049658	IfStatement	if ( input [ 1 ] == 'e' )		1047562	0					
ANR	1049659	Condition	input [ 1 ] == 'e'	1339:15:37041:37055	1047562	0	True				
ANR	1049660	EqualityExpression	input [ 1 ] == 'e'		1047562	0		==			
ANR	1049661	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1049662	Identifier	input		1047562	0					
ANR	1049663	PrimaryExpression	1		1047562	1					
ANR	1049664	PrimaryExpression	'e'		1047562	1					
ANR	1049665	CompoundStatement		336:4:8720:8764	1047562	1					
ANR	1049666	IdentifierDeclStatement	"char * str = r_core_cmd_strf ( core , ""tc %s"" , input + 2 ) ;"	1340:4:37073:37128	1047562	0	True				
ANR	1049667	IdentifierDecl	"* str = r_core_cmd_strf ( core , ""tc %s"" , input + 2 )"		1047562	0					
ANR	1049668	IdentifierDeclType	char *		1047562	0					
ANR	1049669	Identifier	str		1047562	1					
ANR	1049670	AssignmentExpression	"* str = r_core_cmd_strf ( core , ""tc %s"" , input + 2 )"		1047562	2		=			
ANR	1049671	Identifier	str		1047562	0					
ANR	1049672	CallExpression	"r_core_cmd_strf ( core , ""tc %s"" , input + 2 )"		1047562	1					
ANR	1049673	Callee	r_core_cmd_strf		1047562	0					
ANR	1049674	Identifier	r_core_cmd_strf		1047562	0					
ANR	1049675	ArgumentList	core		1047562	1					
ANR	1049676	Argument	core		1047562	0					
ANR	1049677	Identifier	core		1047562	0					
ANR	1049678	Argument	"""tc %s"""		1047562	1					
ANR	1049679	PrimaryExpression	"""tc %s"""		1047562	0					
ANR	1049680	Argument	input + 2		1047562	2					
ANR	1049681	AdditiveExpression	input + 2		1047562	0		+			
ANR	1049682	Identifier	input		1047562	0					
ANR	1049683	PrimaryExpression	2		1047562	1					
ANR	1049684	IdentifierDeclStatement	"char * tmp = r_core_editor ( core , ""*.h"" , str ) ;"	1341:4:37134:37178	1047562	1	True				
ANR	1049685	IdentifierDecl	"* tmp = r_core_editor ( core , ""*.h"" , str )"		1047562	0					
ANR	1049686	IdentifierDeclType	char *		1047562	0					
ANR	1049687	Identifier	tmp		1047562	1					
ANR	1049688	AssignmentExpression	"* tmp = r_core_editor ( core , ""*.h"" , str )"		1047562	2		=			
ANR	1049689	Identifier	tmp		1047562	0					
ANR	1049690	CallExpression	"r_core_editor ( core , ""*.h"" , str )"		1047562	1					
ANR	1049691	Callee	r_core_editor		1047562	0					
ANR	1049692	Identifier	r_core_editor		1047562	0					
ANR	1049693	ArgumentList	core		1047562	1					
ANR	1049694	Argument	core		1047562	0					
ANR	1049695	Identifier	core		1047562	0					
ANR	1049696	Argument	"""*.h"""		1047562	1					
ANR	1049697	PrimaryExpression	"""*.h"""		1047562	0					
ANR	1049698	Argument	str		1047562	2					
ANR	1049699	Identifier	str		1047562	0					
ANR	1049700	IfStatement	if ( tmp )		1047562	2					
ANR	1049701	Condition	tmp	1342:8:37188:37190	1047562	0	True				
ANR	1049702	Identifier	tmp		1047562	0					
ANR	1049703	CompoundStatement		339:5:8815:8873	1047562	1					
ANR	1049704	IdentifierDeclStatement	char * error_msg = NULL ;	1343:5:37200:37222	1047562	0	True				
ANR	1049705	IdentifierDecl	* error_msg = NULL		1047562	0					
ANR	1049706	IdentifierDeclType	char *		1047562	0					
ANR	1049707	Identifier	error_msg		1047562	1					
ANR	1049708	AssignmentExpression	* error_msg = NULL		1047562	2		=			
ANR	1049709	Identifier	NULL		1047562	0					
ANR	1049710	Identifier	NULL		1047562	1					
ANR	1049711	IdentifierDeclStatement	"char * out = r_parse_c_string ( core -> anal , tmp , & error_msg ) ;"	1344:5:37229:37287	1047562	1	True				
ANR	1049712	IdentifierDecl	"* out = r_parse_c_string ( core -> anal , tmp , & error_msg )"		1047562	0					
ANR	1049713	IdentifierDeclType	char *		1047562	0					
ANR	1049714	Identifier	out		1047562	1					
ANR	1049715	AssignmentExpression	"* out = r_parse_c_string ( core -> anal , tmp , & error_msg )"		1047562	2		=			
ANR	1049716	Identifier	out		1047562	0					
ANR	1049717	CallExpression	"r_parse_c_string ( core -> anal , tmp , & error_msg )"		1047562	1					
ANR	1049718	Callee	r_parse_c_string		1047562	0					
ANR	1049719	Identifier	r_parse_c_string		1047562	0					
ANR	1049720	ArgumentList	core -> anal		1047562	1					
ANR	1049721	Argument	core -> anal		1047562	0					
ANR	1049722	PtrMemberAccess	core -> anal		1047562	0					
ANR	1049723	Identifier	core		1047562	0					
ANR	1049724	Identifier	anal		1047562	1					
ANR	1049725	Argument	tmp		1047562	1					
ANR	1049726	Identifier	tmp		1047562	0					
ANR	1049727	Argument	& error_msg		1047562	2					
ANR	1049728	UnaryOperationExpression	& error_msg		1047562	0					
ANR	1049729	UnaryOperator	&		1047562	0					
ANR	1049730	Identifier	error_msg		1047562	1					
ANR	1049731	IfStatement	if ( out )		1047562	2					
ANR	1049732	Condition	out	1345:9:37298:37300	1047562	0	True				
ANR	1049733	Identifier	out		1047562	0					
ANR	1049734	CompoundStatement		340:14:8889:8889	1047562	1					
ANR	1049735	ExpressionStatement	sdb_reset ( TDB )	1347:6:37368:37383	1047562	0	True				
ANR	1049736	CallExpression	sdb_reset ( TDB )		1047562	0					
ANR	1049737	Callee	sdb_reset		1047562	0					
ANR	1049738	Identifier	sdb_reset		1047562	0					
ANR	1049739	ArgumentList	TDB		1047562	1					
ANR	1049740	Argument	TDB		1047562	0					
ANR	1049741	Identifier	TDB		1047562	0					
ANR	1049742	ExpressionStatement	r_parse_c_reset ( core -> parser )	1348:6:37391:37421	1047562	1	True				
ANR	1049743	CallExpression	r_parse_c_reset ( core -> parser )		1047562	0					
ANR	1049744	Callee	r_parse_c_reset		1047562	0					
ANR	1049745	Identifier	r_parse_c_reset		1047562	0					
ANR	1049746	ArgumentList	core -> parser		1047562	1					
ANR	1049747	Argument	core -> parser		1047562	0					
ANR	1049748	PtrMemberAccess	core -> parser		1047562	0					
ANR	1049749	Identifier	core		1047562	0					
ANR	1049750	Identifier	parser		1047562	1					
ANR	1049751	ExpressionStatement	"r_anal_save_parsed_type ( core -> anal , out )"	1349:6:37429:37470	1047562	2	True				
ANR	1049752	CallExpression	"r_anal_save_parsed_type ( core -> anal , out )"		1047562	0					
ANR	1049753	Callee	r_anal_save_parsed_type		1047562	0					
ANR	1049754	Identifier	r_anal_save_parsed_type		1047562	0					
ANR	1049755	ArgumentList	core -> anal		1047562	1					
ANR	1049756	Argument	core -> anal		1047562	0					
ANR	1049757	PtrMemberAccess	core -> anal		1047562	0					
ANR	1049758	Identifier	core		1047562	0					
ANR	1049759	Identifier	anal		1047562	1					
ANR	1049760	Argument	out		1047562	1					
ANR	1049761	Identifier	out		1047562	0					
ANR	1049762	ExpressionStatement	free ( out )	1350:6:37478:37488	1047562	3	True				
ANR	1049763	CallExpression	free ( out )		1047562	0					
ANR	1049764	Callee	free		1047562	0					
ANR	1049765	Identifier	free		1047562	0					
ANR	1049766	ArgumentList	out		1047562	1					
ANR	1049767	Argument	out		1047562	0					
ANR	1049768	Identifier	out		1047562	0					
ANR	1049769	IfStatement	if ( error_msg )		1047562	3					
ANR	1049770	Condition	error_msg	1352:9:37506:37514	1047562	0	True				
ANR	1049771	Identifier	error_msg		1047562	0					
ANR	1049772	CompoundStatement		347:20:9103:9103	1047562	1					
ANR	1049773	ExpressionStatement	"eprintf ( ""%s\\n"" , error_msg )"	1353:6:37525:37552	1047562	0	True				
ANR	1049774	CallExpression	"eprintf ( ""%s\\n"" , error_msg )"		1047562	0					
ANR	1049775	Callee	eprintf		1047562	0					
ANR	1049776	Identifier	eprintf		1047562	0					
ANR	1049777	ArgumentList	"""%s\\n"""		1047562	1					
ANR	1049778	Argument	"""%s\\n"""		1047562	0					
ANR	1049779	PrimaryExpression	"""%s\\n"""		1047562	0					
ANR	1049780	Argument	error_msg		1047562	1					
ANR	1049781	Identifier	error_msg		1047562	0					
ANR	1049782	ExpressionStatement	free ( error_msg )	1354:6:37560:37576	1047562	1	True				
ANR	1049783	CallExpression	free ( error_msg )		1047562	0					
ANR	1049784	Callee	free		1047562	0					
ANR	1049785	Identifier	free		1047562	0					
ANR	1049786	ArgumentList	error_msg		1047562	1					
ANR	1049787	Argument	error_msg		1047562	0					
ANR	1049788	Identifier	error_msg		1047562	0					
ANR	1049789	ExpressionStatement	free ( tmp )	1356:5:37590:37600	1047562	4	True				
ANR	1049790	CallExpression	free ( tmp )		1047562	0					
ANR	1049791	Callee	free		1047562	0					
ANR	1049792	Identifier	free		1047562	0					
ANR	1049793	ArgumentList	tmp		1047562	1					
ANR	1049794	Argument	tmp		1047562	0					
ANR	1049795	Identifier	tmp		1047562	0					
ANR	1049796	ExpressionStatement	free ( str )	1358:4:37612:37622	1047562	3	True				
ANR	1049797	CallExpression	free ( str )		1047562	0					
ANR	1049798	Callee	free		1047562	0					
ANR	1049799	Identifier	free		1047562	0					
ANR	1049800	ArgumentList	str		1047562	1					
ANR	1049801	Argument	str		1047562	0					
ANR	1049802	Identifier	str		1047562	0					
ANR	1049803	ElseStatement	else		1047562	0					
ANR	1049804	CompoundStatement		355:9:9224:9224	1047562	0					
ANR	1049805	ExpressionStatement	"eprintf ( ""Sandbox: system call disabled\\n"" )"	1361:3:37643:37686	1047562	0	True				
ANR	1049806	CallExpression	"eprintf ( ""Sandbox: system call disabled\\n"" )"		1047562	0					
ANR	1049807	Callee	eprintf		1047562	0					
ANR	1049808	Identifier	eprintf		1047562	0					
ANR	1049809	ArgumentList	"""Sandbox: system call disabled\\n"""		1047562	1					
ANR	1049810	Argument	"""Sandbox: system call disabled\\n"""		1047562	0					
ANR	1049811	PrimaryExpression	"""Sandbox: system call disabled\\n"""		1047562	0					
ANR	1049812	BreakStatement	break ;	1363:2:37694:37699	1047562	29	True				
ANR	1049813	Label	case 'd' :	1365:1:37766:37774	1047562	30	True				
ANR	1049814	IfStatement	if ( input [ 1 ] == '?' )		1047562	31					
ANR	1049815	Condition	input [ 1 ] == '?'	1366:6:37790:37804	1047562	0	True				
ANR	1049816	EqualityExpression	input [ 1 ] == '?'		1047562	0		==			
ANR	1049817	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1049818	Identifier	input		1047562	0					
ANR	1049819	PrimaryExpression	1		1047562	1					
ANR	1049820	PrimaryExpression	'?'		1047562	1					
ANR	1049821	CompoundStatement		361:23:9393:9393	1047562	1					
ANR	1049822	ExpressionStatement	"r_core_cmd_help ( core , help_msg_td )"	1368:3:37859:37894	1047562	0	True				
ANR	1049823	CallExpression	"r_core_cmd_help ( core , help_msg_td )"		1047562	0					
ANR	1049824	Callee	r_core_cmd_help		1047562	0					
ANR	1049825	Identifier	r_core_cmd_help		1047562	0					
ANR	1049826	ArgumentList	core		1047562	1					
ANR	1049827	Argument	core		1047562	0					
ANR	1049828	Identifier	core		1047562	0					
ANR	1049829	Argument	help_msg_td		1047562	1					
ANR	1049830	Identifier	help_msg_td		1047562	0					
ANR	1049831	Statement	r_cons_printf	1369:3:37899:37911	1047562	1	True				
ANR	1049832	Statement	(	1369:17:37913:37913	1047562	2	True				
ANR	1049833	Statement	"""Note: The td command should be put between double quotes\\n"""	1369:18:37914:37973	1047562	3	True				
ANR	1049834	Statement	"""Example: \\""td struct foo {int bar;int cow;};\\"""""	1370:4:37979:38026	1047562	4	True				
ANR	1049835	Statement	"""\\nt"""	1371:4:38032:38036	1047562	5	True				
ANR	1049836	Statement	)	1371:9:38037:38037	1047562	6	True				
ANR	1049837	ExpressionStatement		1371:10:38038:38038	1047562	7	True				
ANR	1049838	ElseStatement	else		1047562	0					
ANR	1049839	IfStatement	if ( input [ 1 ] == ' ' )		1047562	0					
ANR	1049840	Condition	input [ 1 ] == ' '	1373:13:38054:38068	1047562	0	True				
ANR	1049841	EqualityExpression	input [ 1 ] == ' '		1047562	0		==			
ANR	1049842	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1049843	Identifier	input		1047562	0					
ANR	1049844	PrimaryExpression	1		1047562	1					
ANR	1049845	PrimaryExpression	' '		1047562	1					
ANR	1049846	CompoundStatement		374:3:9766:9824	1047562	1					
ANR	1049847	IdentifierDeclStatement	"char * tmp = r_str_newf ( ""%s;"" , input + 2 ) ;"	1374:3:38076:38117	1047562	0	True				
ANR	1049848	IdentifierDecl	"* tmp = r_str_newf ( ""%s;"" , input + 2 )"		1047562	0					
ANR	1049849	IdentifierDeclType	char *		1047562	0					
ANR	1049850	Identifier	tmp		1047562	1					
ANR	1049851	AssignmentExpression	"* tmp = r_str_newf ( ""%s;"" , input + 2 )"		1047562	2		=			
ANR	1049852	Identifier	tmp		1047562	0					
ANR	1049853	CallExpression	"r_str_newf ( ""%s;"" , input + 2 )"		1047562	1					
ANR	1049854	Callee	r_str_newf		1047562	0					
ANR	1049855	Identifier	r_str_newf		1047562	0					
ANR	1049856	ArgumentList	"""%s;"""		1047562	1					
ANR	1049857	Argument	"""%s;"""		1047562	0					
ANR	1049858	PrimaryExpression	"""%s;"""		1047562	0					
ANR	1049859	Argument	input + 2		1047562	1					
ANR	1049860	AdditiveExpression	input + 2		1047562	0		+			
ANR	1049861	Identifier	input		1047562	0					
ANR	1049862	PrimaryExpression	2		1047562	1					
ANR	1049863	IfStatement	if ( ! tmp )		1047562	1					
ANR	1049864	Condition	! tmp	1375:7:38126:38129	1047562	0	True				
ANR	1049865	UnaryOperationExpression	! tmp		1047562	0					
ANR	1049866	UnaryOperator	!		1047562	0					
ANR	1049867	Identifier	tmp		1047562	1					
ANR	1049868	CompoundStatement		370:13:9718:9718	1047562	1					
ANR	1049869	BreakStatement	break ;	1376:4:38138:38143	1047562	0	True				
ANR	1049870	IdentifierDeclStatement	char * error_msg = NULL ;	1378:3:38153:38175	1047562	2	True				
ANR	1049871	IdentifierDecl	* error_msg = NULL		1047562	0					
ANR	1049872	IdentifierDeclType	char *		1047562	0					
ANR	1049873	Identifier	error_msg		1047562	1					
ANR	1049874	AssignmentExpression	* error_msg = NULL		1047562	2		=			
ANR	1049875	Identifier	NULL		1047562	0					
ANR	1049876	Identifier	NULL		1047562	1					
ANR	1049877	IdentifierDeclStatement	"char * out = r_parse_c_string ( core -> anal , tmp , & error_msg ) ;"	1379:3:38180:38238	1047562	3	True				
ANR	1049878	IdentifierDecl	"* out = r_parse_c_string ( core -> anal , tmp , & error_msg )"		1047562	0					
ANR	1049879	IdentifierDeclType	char *		1047562	0					
ANR	1049880	Identifier	out		1047562	1					
ANR	1049881	AssignmentExpression	"* out = r_parse_c_string ( core -> anal , tmp , & error_msg )"		1047562	2		=			
ANR	1049882	Identifier	out		1047562	0					
ANR	1049883	CallExpression	"r_parse_c_string ( core -> anal , tmp , & error_msg )"		1047562	1					
ANR	1049884	Callee	r_parse_c_string		1047562	0					
ANR	1049885	Identifier	r_parse_c_string		1047562	0					
ANR	1049886	ArgumentList	core -> anal		1047562	1					
ANR	1049887	Argument	core -> anal		1047562	0					
ANR	1049888	PtrMemberAccess	core -> anal		1047562	0					
ANR	1049889	Identifier	core		1047562	0					
ANR	1049890	Identifier	anal		1047562	1					
ANR	1049891	Argument	tmp		1047562	1					
ANR	1049892	Identifier	tmp		1047562	0					
ANR	1049893	Argument	& error_msg		1047562	2					
ANR	1049894	UnaryOperationExpression	& error_msg		1047562	0					
ANR	1049895	UnaryOperator	&		1047562	0					
ANR	1049896	Identifier	error_msg		1047562	1					
ANR	1049897	ExpressionStatement	free ( tmp )	1380:3:38243:38253	1047562	4	True				
ANR	1049898	CallExpression	free ( tmp )		1047562	0					
ANR	1049899	Callee	free		1047562	0					
ANR	1049900	Identifier	free		1047562	0					
ANR	1049901	ArgumentList	tmp		1047562	1					
ANR	1049902	Argument	tmp		1047562	0					
ANR	1049903	Identifier	tmp		1047562	0					
ANR	1049904	IfStatement	if ( out )		1047562	5					
ANR	1049905	Condition	out	1381:7:38262:38264	1047562	0	True				
ANR	1049906	Identifier	out		1047562	0					
ANR	1049907	CompoundStatement		376:12:9853:9853	1047562	1					
ANR	1049908	ExpressionStatement	"r_anal_save_parsed_type ( core -> anal , out )"	1382:4:38273:38314	1047562	0	True				
ANR	1049909	CallExpression	"r_anal_save_parsed_type ( core -> anal , out )"		1047562	0					
ANR	1049910	Callee	r_anal_save_parsed_type		1047562	0					
ANR	1049911	Identifier	r_anal_save_parsed_type		1047562	0					
ANR	1049912	ArgumentList	core -> anal		1047562	1					
ANR	1049913	Argument	core -> anal		1047562	0					
ANR	1049914	PtrMemberAccess	core -> anal		1047562	0					
ANR	1049915	Identifier	core		1047562	0					
ANR	1049916	Identifier	anal		1047562	1					
ANR	1049917	Argument	out		1047562	1					
ANR	1049918	Identifier	out		1047562	0					
ANR	1049919	ExpressionStatement	free ( out )	1383:4:38320:38330	1047562	1	True				
ANR	1049920	CallExpression	free ( out )		1047562	0					
ANR	1049921	Callee	free		1047562	0					
ANR	1049922	Identifier	free		1047562	0					
ANR	1049923	ArgumentList	out		1047562	1					
ANR	1049924	Argument	out		1047562	0					
ANR	1049925	Identifier	out		1047562	0					
ANR	1049926	IfStatement	if ( error_msg )		1047562	6					
ANR	1049927	Condition	error_msg	1385:7:38344:38352	1047562	0	True				
ANR	1049928	Identifier	error_msg		1047562	0					
ANR	1049929	CompoundStatement		380:18:9941:9941	1047562	1					
ANR	1049930	ExpressionStatement	"fprintf ( stderr , ""%s"" , error_msg )"	1386:4:38361:38394	1047562	0	True				
ANR	1049931	CallExpression	"fprintf ( stderr , ""%s"" , error_msg )"		1047562	0					
ANR	1049932	Callee	fprintf		1047562	0					
ANR	1049933	Identifier	fprintf		1047562	0					
ANR	1049934	ArgumentList	stderr		1047562	1					
ANR	1049935	Argument	stderr		1047562	0					
ANR	1049936	Identifier	stderr		1047562	0					
ANR	1049937	Argument	"""%s"""		1047562	1					
ANR	1049938	PrimaryExpression	"""%s"""		1047562	0					
ANR	1049939	Argument	error_msg		1047562	2					
ANR	1049940	Identifier	error_msg		1047562	0					
ANR	1049941	ExpressionStatement	free ( error_msg )	1387:4:38400:38416	1047562	1	True				
ANR	1049942	CallExpression	free ( error_msg )		1047562	0					
ANR	1049943	Callee	free		1047562	0					
ANR	1049944	Identifier	free		1047562	0					
ANR	1049945	ArgumentList	error_msg		1047562	1					
ANR	1049946	Argument	error_msg		1047562	0					
ANR	1049947	Identifier	error_msg		1047562	0					
ANR	1049948	ElseStatement	else		1047562	0					
ANR	1049949	CompoundStatement		384:9:10018:10018	1047562	0					
ANR	1049950	ExpressionStatement	"eprintf ( ""Invalid use of td. See td? for help\\n"" )"	1390:3:38437:38486	1047562	0	True				
ANR	1049951	CallExpression	"eprintf ( ""Invalid use of td. See td? for help\\n"" )"		1047562	0					
ANR	1049952	Callee	eprintf		1047562	0					
ANR	1049953	Identifier	eprintf		1047562	0					
ANR	1049954	ArgumentList	"""Invalid use of td. See td? for help\\n"""		1047562	1					
ANR	1049955	Argument	"""Invalid use of td. See td? for help\\n"""		1047562	0					
ANR	1049956	PrimaryExpression	"""Invalid use of td. See td? for help\\n"""		1047562	0					
ANR	1049957	BreakStatement	break ;	1392:2:38494:38499	1047562	32	True				
ANR	1049958	Label	case 'x' :	1393:1:38502:38510	1047562	33	True				
ANR	1049959	CompoundStatement		391:4:10155:10173	1047562	34					
ANR	1049960	IdentifierDeclStatement	"char * type , * type2 ;"	1394:4:38518:38536	1047562	0	True				
ANR	1049961	IdentifierDecl	* type		1047562	0					
ANR	1049962	IdentifierDeclType	char *		1047562	0					
ANR	1049963	Identifier	type		1047562	1					
ANR	1049964	IdentifierDecl	* type2		1047562	1					
ANR	1049965	IdentifierDeclType	char *		1047562	0					
ANR	1049966	Identifier	type2		1047562	1					
ANR	1049967	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	1395:2:38540:38563	1047562	1	True				
ANR	1049968	IdentifierDecl	* iter		1047562	0					
ANR	1049969	IdentifierDeclType	RListIter *		1047562	0					
ANR	1049970	Identifier	iter		1047562	1					
ANR	1049971	IdentifierDecl	* iter2		1047562	1					
ANR	1049972	IdentifierDeclType	RListIter *		1047562	0					
ANR	1049973	Identifier	iter2		1047562	1					
ANR	1049974	IdentifierDeclStatement	RAnalFunction * fcn ;	1396:4:38569:38587	1047562	2	True				
ANR	1049975	IdentifierDecl	* fcn		1047562	0					
ANR	1049976	IdentifierDeclType	RAnalFunction *		1047562	0					
ANR	1049977	Identifier	fcn		1047562	1					
ANR	1049978	SwitchStatement	switch ( input [ 1 ] )		1047562	3					
ANR	1049979	Condition	input [ 1 ]	1397:10:38599:38606	1047562	0	True				
ANR	1049980	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1049981	Identifier	input		1047562	0					
ANR	1049982	PrimaryExpression	1		1047562	1					
ANR	1049983	CompoundStatement		392:20:10195:10195	1047562	1					
ANR	1049984	Label	case '.' :	1398:2:38613:38621	1047562	0	True				
ANR	1049985	Label	case 'f' :	1399:2:38646:38654	1047562	1	True				
ANR	1049986	ExpressionStatement	"fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"	1400:3:38680:38734	1047562	2	True				
ANR	1049987	AssignmentExpression	"fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		1047562	0		=			
ANR	1049988	Identifier	fcn		1047562	0					
ANR	1049989	CallExpression	"r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		1047562	1					
ANR	1049990	Callee	r_anal_get_fcn_at		1047562	0					
ANR	1049991	Identifier	r_anal_get_fcn_at		1047562	0					
ANR	1049992	ArgumentList	core -> anal		1047562	1					
ANR	1049993	Argument	core -> anal		1047562	0					
ANR	1049994	PtrMemberAccess	core -> anal		1047562	0					
ANR	1049995	Identifier	core		1047562	0					
ANR	1049996	Identifier	anal		1047562	1					
ANR	1049997	Argument	core -> offset		1047562	1					
ANR	1049998	PtrMemberAccess	core -> offset		1047562	0					
ANR	1049999	Identifier	core		1047562	0					
ANR	1050000	Identifier	offset		1047562	1					
ANR	1050001	Argument	0		1047562	2					
ANR	1050002	PrimaryExpression	0		1047562	0					
ANR	1050003	IfStatement	if ( fcn )		1047562	3					
ANR	1050004	Condition	fcn	1401:7:38743:38745	1047562	0	True				
ANR	1050005	Identifier	fcn		1047562	0					
ANR	1050006	CompoundStatement		397:4:10340:10379	1047562	1					
ANR	1050007	IdentifierDeclStatement	"RList * uniq = get_uniq_type ( core , fcn ) ;"	1402:4:38754:38793	1047562	0	True				
ANR	1050008	IdentifierDecl	"* uniq = get_uniq_type ( core , fcn )"		1047562	0					
ANR	1050009	IdentifierDeclType	RList *		1047562	0					
ANR	1050010	Identifier	uniq		1047562	1					
ANR	1050011	AssignmentExpression	"* uniq = get_uniq_type ( core , fcn )"		1047562	2		=			
ANR	1050012	Identifier	uniq		1047562	0					
ANR	1050013	CallExpression	"get_uniq_type ( core , fcn )"		1047562	1					
ANR	1050014	Callee	get_uniq_type		1047562	0					
ANR	1050015	Identifier	get_uniq_type		1047562	0					
ANR	1050016	ArgumentList	core		1047562	1					
ANR	1050017	Argument	core		1047562	0					
ANR	1050018	Identifier	core		1047562	0					
ANR	1050019	Argument	fcn		1047562	1					
ANR	1050020	Identifier	fcn		1047562	0					
ANR	1050021	Statement	r_list_foreach	1403:4:38799:38812	1047562	1	True				
ANR	1050022	Statement	(	1403:19:38814:38814	1047562	2	True				
ANR	1050023	Statement	uniq	1403:20:38815:38818	1047562	3	True				
ANR	1050024	Statement	","	1403:25:38820:38820	1047562	4	True				
ANR	1050025	Statement	iter	1403:27:38822:38825	1047562	5	True				
ANR	1050026	Statement	","	1403:32:38827:38827	1047562	6	True				
ANR	1050027	Statement	type	1403:34:38829:38832	1047562	7	True				
ANR	1050028	Statement	)	1403:38:38833:38833	1047562	8	True				
ANR	1050029	CompoundStatement		398:40:10421:10421	1047562	9					
ANR	1050030	ExpressionStatement	r_cons_println ( type )	1404:5:38842:38863	1047562	0	True				
ANR	1050031	CallExpression	r_cons_println ( type )		1047562	0					
ANR	1050032	Callee	r_cons_println		1047562	0					
ANR	1050033	Identifier	r_cons_println		1047562	0					
ANR	1050034	ArgumentList	type		1047562	1					
ANR	1050035	Argument	type		1047562	0					
ANR	1050036	Identifier	type		1047562	0					
ANR	1050037	ExpressionStatement	r_list_free ( uniq )	1406:4:38875:38893	1047562	10	True				
ANR	1050038	CallExpression	r_list_free ( uniq )		1047562	0					
ANR	1050039	Callee	r_list_free		1047562	0					
ANR	1050040	Identifier	r_list_free		1047562	0					
ANR	1050041	ArgumentList	uniq		1047562	1					
ANR	1050042	Argument	uniq		1047562	0					
ANR	1050043	Identifier	uniq		1047562	0					
ANR	1050044	ElseStatement	else		1047562	0					
ANR	1050045	CompoundStatement		402:10:10491:10491	1047562	0					
ANR	1050046	Statement	eprintf	1408:4:38911:38917	1047562	0	True				
ANR	1050047	Statement	(	1408:12:38919:38919	1047562	1	True				
ANR	1050048	Statement	"""cannot find function at 0x%08"""	1408:13:38920:38950	1047562	2	True				
ANR	1050049	Statement	PFMT64x	1408:44:38951:38957	1047562	3	True				
ANR	1050050	Statement	"""\\n"""	1408:51:38958:38961	1047562	4	True				
ANR	1050051	Statement	","	1408:55:38962:38962	1047562	5	True				
ANR	1050052	Statement	core	1408:57:38964:38967	1047562	6	True				
ANR	1050053	Statement	->	1408:61:38968:38969	1047562	7	True				
ANR	1050054	Statement	offset	1408:63:38970:38975	1047562	8	True				
ANR	1050055	Statement	)	1408:69:38976:38976	1047562	9	True				
ANR	1050056	ExpressionStatement		1408:70:38977:38977	1047562	10	True				
ANR	1050057	BreakStatement	break ;	1410:3:38987:38992	1047562	4	True				
ANR	1050058	Label	case 0 :	1411:2:38996:39002	1047562	5	True				
ANR	1050059	Statement	r_list_foreach	1412:3:39015:39028	1047562	6	True				
ANR	1050060	Statement	(	1412:18:39030:39030	1047562	7	True				
ANR	1050061	Statement	core	1412:19:39031:39034	1047562	8	True				
ANR	1050062	Statement	->	1412:23:39035:39036	1047562	9	True				
ANR	1050063	Statement	anal	1412:25:39037:39040	1047562	10	True				
ANR	1050064	Statement	->	1412:29:39041:39042	1047562	11	True				
ANR	1050065	Statement	fcns	1412:31:39043:39046	1047562	12	True				
ANR	1050066	Statement	","	1412:35:39047:39047	1047562	13	True				
ANR	1050067	Statement	iter	1412:37:39049:39052	1047562	14	True				
ANR	1050068	Statement	","	1412:41:39053:39053	1047562	15	True				
ANR	1050069	Statement	fcn	1412:43:39055:39057	1047562	16	True				
ANR	1050070	Statement	)	1412:46:39058:39058	1047562	17	True				
ANR	1050071	CompoundStatement		408:4:10652:10691	1047562	18					
ANR	1050072	IdentifierDeclStatement	"RList * uniq = get_uniq_type ( core , fcn ) ;"	1413:4:39066:39105	1047562	0	True				
ANR	1050073	IdentifierDecl	"* uniq = get_uniq_type ( core , fcn )"		1047562	0					
ANR	1050074	IdentifierDeclType	RList *		1047562	0					
ANR	1050075	Identifier	uniq		1047562	1					
ANR	1050076	AssignmentExpression	"* uniq = get_uniq_type ( core , fcn )"		1047562	2		=			
ANR	1050077	Identifier	uniq		1047562	0					
ANR	1050078	CallExpression	"get_uniq_type ( core , fcn )"		1047562	1					
ANR	1050079	Callee	get_uniq_type		1047562	0					
ANR	1050080	Identifier	get_uniq_type		1047562	0					
ANR	1050081	ArgumentList	core		1047562	1					
ANR	1050082	Argument	core		1047562	0					
ANR	1050083	Identifier	core		1047562	0					
ANR	1050084	Argument	fcn		1047562	1					
ANR	1050085	Identifier	fcn		1047562	0					
ANR	1050086	IfStatement	if ( r_list_length ( uniq ) )		1047562	1					
ANR	1050087	Condition	r_list_length ( uniq )	1414:8:39115:39134	1047562	0	True				
ANR	1050088	CallExpression	r_list_length ( uniq )		1047562	0					
ANR	1050089	Callee	r_list_length		1047562	0					
ANR	1050090	Identifier	r_list_length		1047562	0					
ANR	1050091	ArgumentList	uniq		1047562	1					
ANR	1050092	Argument	uniq		1047562	0					
ANR	1050093	Identifier	uniq		1047562	0					
ANR	1050094	CompoundStatement		409:30:10723:10723	1047562	1					
ANR	1050095	ExpressionStatement	"r_cons_printf ( ""%s: "" , fcn -> name )"	1415:5:39144:39177	1047562	0	True				
ANR	1050096	CallExpression	"r_cons_printf ( ""%s: "" , fcn -> name )"		1047562	0					
ANR	1050097	Callee	r_cons_printf		1047562	0					
ANR	1050098	Identifier	r_cons_printf		1047562	0					
ANR	1050099	ArgumentList	"""%s: """		1047562	1					
ANR	1050100	Argument	"""%s: """		1047562	0					
ANR	1050101	PrimaryExpression	"""%s: """		1047562	0					
ANR	1050102	Argument	fcn -> name		1047562	1					
ANR	1050103	PtrMemberAccess	fcn -> name		1047562	0					
ANR	1050104	Identifier	fcn		1047562	0					
ANR	1050105	Identifier	name		1047562	1					
ANR	1050106	Statement	r_list_foreach	1417:4:39189:39202	1047562	2	True				
ANR	1050107	Statement	(	1417:19:39204:39204	1047562	3	True				
ANR	1050108	Statement	uniq	1417:20:39205:39208	1047562	4	True				
ANR	1050109	Statement	","	1417:25:39210:39210	1047562	5	True				
ANR	1050110	Statement	iter2	1417:27:39212:39216	1047562	6	True				
ANR	1050111	Statement	","	1417:32:39217:39217	1047562	7	True				
ANR	1050112	Statement	type	1417:34:39219:39222	1047562	8	True				
ANR	1050113	Statement	)	1417:38:39223:39223	1047562	9	True				
ANR	1050114	CompoundStatement		412:40:10811:10811	1047562	10					
ANR	1050115	ExpressionStatement	"r_cons_printf ( ""%s%s"" , type , iter2 -> n ? "","" : ""\\n"" )"	1418:5:39232:39281	1047562	0	True				
ANR	1050116	CallExpression	"r_cons_printf ( ""%s%s"" , type , iter2 -> n ? "","" : ""\\n"" )"		1047562	0					
ANR	1050117	Callee	r_cons_printf		1047562	0					
ANR	1050118	Identifier	r_cons_printf		1047562	0					
ANR	1050119	ArgumentList	"""%s%s"""		1047562	1					
ANR	1050120	Argument	"""%s%s"""		1047562	0					
ANR	1050121	PrimaryExpression	"""%s%s"""		1047562	0					
ANR	1050122	Argument	type		1047562	1					
ANR	1050123	Identifier	type		1047562	0					
ANR	1050124	Argument	"iter2 -> n ? "","" : ""\\n"""		1047562	2					
ANR	1050125	ConditionalExpression	"iter2 -> n ? "","" : ""\\n"""		1047562	0					
ANR	1050126	Condition	iter2 -> n		1047562	0					
ANR	1050127	PtrMemberAccess	iter2 -> n		1047562	0					
ANR	1050128	Identifier	iter2		1047562	0					
ANR	1050129	Identifier	n		1047562	1					
ANR	1050130	PrimaryExpression	""","""		1047562	1					
ANR	1050131	PrimaryExpression	"""\\n"""		1047562	2					
ANR	1050132	BreakStatement	break ;	1421:3:39297:39302	1047562	19	True				
ANR	1050133	Label	case 'g' :	1422:2:39306:39314	1047562	20	True				
ANR	1050134	CompoundStatement		418:3:10914:10914	1047562	21					
ANR	1050135	Statement	r_list_foreach	1424:4:39334:39347	1047562	0	True				
ANR	1050136	Statement	(	1424:19:39349:39349	1047562	1	True				
ANR	1050137	Statement	core	1424:20:39350:39353	1047562	2	True				
ANR	1050138	Statement	->	1424:24:39354:39355	1047562	3	True				
ANR	1050139	Statement	anal	1424:26:39356:39359	1047562	4	True				
ANR	1050140	Statement	->	1424:30:39360:39361	1047562	5	True				
ANR	1050141	Statement	fcns	1424:32:39362:39365	1047562	6	True				
ANR	1050142	Statement	","	1424:36:39366:39366	1047562	7	True				
ANR	1050143	Statement	iter	1424:38:39368:39371	1047562	8	True				
ANR	1050144	Statement	","	1424:42:39372:39372	1047562	9	True				
ANR	1050145	Statement	fcn	1424:44:39374:39376	1047562	10	True				
ANR	1050146	Statement	)	1424:47:39377:39377	1047562	11	True				
ANR	1050147	CompoundStatement		420:5:10972:11011	1047562	12					
ANR	1050148	IdentifierDeclStatement	"RList * uniq = get_uniq_type ( core , fcn ) ;"	1425:5:39386:39425	1047562	0	True				
ANR	1050149	IdentifierDecl	"* uniq = get_uniq_type ( core , fcn )"		1047562	0					
ANR	1050150	IdentifierDeclType	RList *		1047562	0					
ANR	1050151	Identifier	uniq		1047562	1					
ANR	1050152	AssignmentExpression	"* uniq = get_uniq_type ( core , fcn )"		1047562	2		=			
ANR	1050153	Identifier	uniq		1047562	0					
ANR	1050154	CallExpression	"get_uniq_type ( core , fcn )"		1047562	1					
ANR	1050155	Callee	get_uniq_type		1047562	0					
ANR	1050156	Identifier	get_uniq_type		1047562	0					
ANR	1050157	ArgumentList	core		1047562	1					
ANR	1050158	Argument	core		1047562	0					
ANR	1050159	Identifier	core		1047562	0					
ANR	1050160	Argument	fcn		1047562	1					
ANR	1050161	Identifier	fcn		1047562	0					
ANR	1050162	IfStatement	if ( r_list_length ( uniq ) )		1047562	1					
ANR	1050163	Condition	r_list_length ( uniq )	1426:9:39436:39455	1047562	0	True				
ANR	1050164	CallExpression	r_list_length ( uniq )		1047562	0					
ANR	1050165	Callee	r_list_length		1047562	0					
ANR	1050166	Identifier	r_list_length		1047562	0					
ANR	1050167	ArgumentList	uniq		1047562	1					
ANR	1050168	Argument	uniq		1047562	0					
ANR	1050169	Identifier	uniq		1047562	0					
ANR	1050170	CompoundStatement		421:31:11044:11044	1047562	1					
ANR	1050171	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , fcn -> name )"	1427:6:39466:39503	1047562	0	True				
ANR	1050172	CallExpression	"r_cons_printf ( ""agn %s\\n"" , fcn -> name )"		1047562	0					
ANR	1050173	Callee	r_cons_printf		1047562	0					
ANR	1050174	Identifier	r_cons_printf		1047562	0					
ANR	1050175	ArgumentList	"""agn %s\\n"""		1047562	1					
ANR	1050176	Argument	"""agn %s\\n"""		1047562	0					
ANR	1050177	PrimaryExpression	"""agn %s\\n"""		1047562	0					
ANR	1050178	Argument	fcn -> name		1047562	1					
ANR	1050179	PtrMemberAccess	fcn -> name		1047562	0					
ANR	1050180	Identifier	fcn		1047562	0					
ANR	1050181	Identifier	name		1047562	1					
ANR	1050182	Statement	r_list_foreach	1429:5:39517:39530	1047562	2	True				
ANR	1050183	Statement	(	1429:20:39532:39532	1047562	3	True				
ANR	1050184	Statement	uniq	1429:21:39533:39536	1047562	4	True				
ANR	1050185	Statement	","	1429:26:39538:39538	1047562	5	True				
ANR	1050186	Statement	iter2	1429:28:39540:39544	1047562	6	True				
ANR	1050187	Statement	","	1429:33:39545:39545	1047562	7	True				
ANR	1050188	Statement	type	1429:35:39547:39550	1047562	8	True				
ANR	1050189	Statement	)	1429:39:39551:39551	1047562	9	True				
ANR	1050190	CompoundStatement		425:6:11147:11175	1047562	10					
ANR	1050191	IdentifierDeclStatement	char * myType = strdup ( type ) ;	1430:6:39561:39589	1047562	0	True				
ANR	1050192	IdentifierDecl	* myType = strdup ( type )		1047562	0					
ANR	1050193	IdentifierDeclType	char *		1047562	0					
ANR	1050194	Identifier	myType		1047562	1					
ANR	1050195	AssignmentExpression	* myType = strdup ( type )		1047562	2		=			
ANR	1050196	Identifier	myType		1047562	0					
ANR	1050197	CallExpression	strdup ( type )		1047562	1					
ANR	1050198	Callee	strdup		1047562	0					
ANR	1050199	Identifier	strdup		1047562	0					
ANR	1050200	ArgumentList	type		1047562	1					
ANR	1050201	Argument	type		1047562	0					
ANR	1050202	Identifier	type		1047562	0					
ANR	1050203	ExpressionStatement	"r_str_replace_ch ( myType , ' ' , '_' , true )"	1431:6:39597:39638	1047562	1	True				
ANR	1050204	CallExpression	"r_str_replace_ch ( myType , ' ' , '_' , true )"		1047562	0					
ANR	1050205	Callee	r_str_replace_ch		1047562	0					
ANR	1050206	Identifier	r_str_replace_ch		1047562	0					
ANR	1050207	ArgumentList	myType		1047562	1					
ANR	1050208	Argument	myType		1047562	0					
ANR	1050209	Identifier	myType		1047562	0					
ANR	1050210	Argument	' '		1047562	1					
ANR	1050211	PrimaryExpression	' '		1047562	0					
ANR	1050212	Argument	'_'		1047562	2					
ANR	1050213	PrimaryExpression	'_'		1047562	0					
ANR	1050214	Argument	true		1047562	3					
ANR	1050215	Identifier	true		1047562	0					
ANR	1050216	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , myType )"	1432:6:39646:39680	1047562	2	True				
ANR	1050217	CallExpression	"r_cons_printf ( ""agn %s\\n"" , myType )"		1047562	0					
ANR	1050218	Callee	r_cons_printf		1047562	0					
ANR	1050219	Identifier	r_cons_printf		1047562	0					
ANR	1050220	ArgumentList	"""agn %s\\n"""		1047562	1					
ANR	1050221	Argument	"""agn %s\\n"""		1047562	0					
ANR	1050222	PrimaryExpression	"""agn %s\\n"""		1047562	0					
ANR	1050223	Argument	myType		1047562	1					
ANR	1050224	Identifier	myType		1047562	0					
ANR	1050225	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , myType , fcn -> name )"	1433:6:39688:39736	1047562	3	True				
ANR	1050226	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , myType , fcn -> name )"		1047562	0					
ANR	1050227	Callee	r_cons_printf		1047562	0					
ANR	1050228	Identifier	r_cons_printf		1047562	0					
ANR	1050229	ArgumentList	"""age %s %s\\n"""		1047562	1					
ANR	1050230	Argument	"""age %s %s\\n"""		1047562	0					
ANR	1050231	PrimaryExpression	"""age %s %s\\n"""		1047562	0					
ANR	1050232	Argument	myType		1047562	1					
ANR	1050233	Identifier	myType		1047562	0					
ANR	1050234	Argument	fcn -> name		1047562	2					
ANR	1050235	PtrMemberAccess	fcn -> name		1047562	0					
ANR	1050236	Identifier	fcn		1047562	0					
ANR	1050237	Identifier	name		1047562	1					
ANR	1050238	ExpressionStatement	free ( myType )	1434:6:39744:39757	1047562	4	True				
ANR	1050239	CallExpression	free ( myType )		1047562	0					
ANR	1050240	Callee	free		1047562	0					
ANR	1050241	Identifier	free		1047562	0					
ANR	1050242	ArgumentList	myType		1047562	1					
ANR	1050243	Argument	myType		1047562	0					
ANR	1050244	Identifier	myType		1047562	0					
ANR	1050245	BreakStatement	break ;	1438:3:39780:39785	1047562	22	True				
ANR	1050246	Label	case 'l' :	1439:2:39789:39797	1047562	23	True				
ANR	1050247	CompoundStatement		436:4:11403:11439	1047562	24					
ANR	1050248	IdentifierDeclStatement	RList * uniqList = r_list_newf ( free ) ;	1441:4:39817:39853	1047562	0	True				
ANR	1050249	IdentifierDecl	* uniqList = r_list_newf ( free )		1047562	0					
ANR	1050250	IdentifierDeclType	RList *		1047562	0					
ANR	1050251	Identifier	uniqList		1047562	1					
ANR	1050252	AssignmentExpression	* uniqList = r_list_newf ( free )		1047562	2		=			
ANR	1050253	Identifier	uniqList		1047562	0					
ANR	1050254	CallExpression	r_list_newf ( free )		1047562	1					
ANR	1050255	Callee	r_list_newf		1047562	0					
ANR	1050256	Identifier	r_list_newf		1047562	0					
ANR	1050257	ArgumentList	free		1047562	1					
ANR	1050258	Argument	free		1047562	0					
ANR	1050259	Identifier	free		1047562	0					
ANR	1050260	Statement	r_list_foreach	1442:4:39859:39872	1047562	1	True				
ANR	1050261	Statement	(	1442:19:39874:39874	1047562	2	True				
ANR	1050262	Statement	core	1442:20:39875:39878	1047562	3	True				
ANR	1050263	Statement	->	1442:24:39879:39880	1047562	4	True				
ANR	1050264	Statement	anal	1442:26:39881:39884	1047562	5	True				
ANR	1050265	Statement	->	1442:30:39885:39886	1047562	6	True				
ANR	1050266	Statement	fcns	1442:32:39887:39890	1047562	7	True				
ANR	1050267	Statement	","	1442:36:39891:39891	1047562	8	True				
ANR	1050268	Statement	iter	1442:38:39893:39896	1047562	9	True				
ANR	1050269	Statement	","	1442:42:39897:39897	1047562	10	True				
ANR	1050270	Statement	fcn	1442:44:39899:39901	1047562	11	True				
ANR	1050271	Statement	)	1442:47:39902:39902	1047562	12	True				
ANR	1050272	CompoundStatement		438:5:11497:11536	1047562	13					
ANR	1050273	IdentifierDeclStatement	"RList * uniq = get_uniq_type ( core , fcn ) ;"	1443:5:39911:39950	1047562	0	True				
ANR	1050274	IdentifierDecl	"* uniq = get_uniq_type ( core , fcn )"		1047562	0					
ANR	1050275	IdentifierDeclType	RList *		1047562	0					
ANR	1050276	Identifier	uniq		1047562	1					
ANR	1050277	AssignmentExpression	"* uniq = get_uniq_type ( core , fcn )"		1047562	2		=			
ANR	1050278	Identifier	uniq		1047562	0					
ANR	1050279	CallExpression	"get_uniq_type ( core , fcn )"		1047562	1					
ANR	1050280	Callee	get_uniq_type		1047562	0					
ANR	1050281	Identifier	get_uniq_type		1047562	0					
ANR	1050282	ArgumentList	core		1047562	1					
ANR	1050283	Argument	core		1047562	0					
ANR	1050284	Identifier	core		1047562	0					
ANR	1050285	Argument	fcn		1047562	1					
ANR	1050286	Identifier	fcn		1047562	0					
ANR	1050287	Statement	r_list_foreach	1444:5:39957:39970	1047562	1	True				
ANR	1050288	Statement	(	1444:20:39972:39972	1047562	2	True				
ANR	1050289	Statement	uniq	1444:21:39973:39976	1047562	3	True				
ANR	1050290	Statement	","	1444:26:39978:39978	1047562	4	True				
ANR	1050291	Statement	iter2	1444:28:39980:39984	1047562	5	True				
ANR	1050292	Statement	","	1444:33:39985:39985	1047562	6	True				
ANR	1050293	Statement	type	1444:35:39987:39990	1047562	7	True				
ANR	1050294	Statement	)	1444:39:39991:39991	1047562	8	True				
ANR	1050295	CompoundStatement		439:41:11579:11579	1047562	9					
ANR	1050296	IfStatement	"if ( ! r_list_find ( uniqList , type , ( RListComparator ) strcmp ) )"		1047562	0					
ANR	1050297	Condition	"! r_list_find ( uniqList , type , ( RListComparator ) strcmp )"	1445:10:40005:40058	1047562	0	True				
ANR	1050298	UnaryOperationExpression	"! r_list_find ( uniqList , type , ( RListComparator ) strcmp )"		1047562	0					
ANR	1050299	UnaryOperator	!		1047562	0					
ANR	1050300	CallExpression	"r_list_find ( uniqList , type , ( RListComparator ) strcmp )"		1047562	1					
ANR	1050301	Callee	r_list_find		1047562	0					
ANR	1050302	Identifier	r_list_find		1047562	0					
ANR	1050303	ArgumentList	uniqList		1047562	1					
ANR	1050304	Argument	uniqList		1047562	0					
ANR	1050305	Identifier	uniqList		1047562	0					
ANR	1050306	Argument	type		1047562	1					
ANR	1050307	Identifier	type		1047562	0					
ANR	1050308	Argument	( RListComparator ) strcmp		1047562	2					
ANR	1050309	CastExpression	( RListComparator ) strcmp		1047562	0					
ANR	1050310	CastTarget	RListComparator		1047562	0					
ANR	1050311	Identifier	strcmp		1047562	1					
ANR	1050312	CompoundStatement		440:66:11647:11647	1047562	1					
ANR	1050313	ExpressionStatement	"r_list_push ( uniqList , strdup ( type ) )"	1446:7:40070:40107	1047562	0	True				
ANR	1050314	CallExpression	"r_list_push ( uniqList , strdup ( type ) )"		1047562	0					
ANR	1050315	Callee	r_list_push		1047562	0					
ANR	1050316	Identifier	r_list_push		1047562	0					
ANR	1050317	ArgumentList	uniqList		1047562	1					
ANR	1050318	Argument	uniqList		1047562	0					
ANR	1050319	Identifier	uniqList		1047562	0					
ANR	1050320	Argument	strdup ( type )		1047562	1					
ANR	1050321	CallExpression	strdup ( type )		1047562	0					
ANR	1050322	Callee	strdup		1047562	0					
ANR	1050323	Identifier	strdup		1047562	0					
ANR	1050324	ArgumentList	type		1047562	1					
ANR	1050325	Argument	type		1047562	0					
ANR	1050326	Identifier	type		1047562	0					
ANR	1050327	ExpressionStatement	"r_list_sort ( uniqList , ( RListComparator ) strcmp )"	1450:4:40134:40181	1047562	14	True				
ANR	1050328	CallExpression	"r_list_sort ( uniqList , ( RListComparator ) strcmp )"		1047562	0					
ANR	1050329	Callee	r_list_sort		1047562	0					
ANR	1050330	Identifier	r_list_sort		1047562	0					
ANR	1050331	ArgumentList	uniqList		1047562	1					
ANR	1050332	Argument	uniqList		1047562	0					
ANR	1050333	Identifier	uniqList		1047562	0					
ANR	1050334	Argument	( RListComparator ) strcmp		1047562	1					
ANR	1050335	CastExpression	( RListComparator ) strcmp		1047562	0					
ANR	1050336	CastTarget	RListComparator		1047562	0					
ANR	1050337	Identifier	strcmp		1047562	1					
ANR	1050338	Statement	r_list_foreach	1451:4:40187:40200	1047562	15	True				
ANR	1050339	Statement	(	1451:19:40202:40202	1047562	16	True				
ANR	1050340	Statement	uniqList	1451:20:40203:40210	1047562	17	True				
ANR	1050341	Statement	","	1451:28:40211:40211	1047562	18	True				
ANR	1050342	Statement	iter	1451:30:40213:40216	1047562	19	True				
ANR	1050343	Statement	","	1451:34:40217:40217	1047562	20	True				
ANR	1050344	Statement	type	1451:36:40219:40222	1047562	21	True				
ANR	1050345	Statement	)	1451:40:40223:40223	1047562	22	True				
ANR	1050346	CompoundStatement		446:42:11811:11811	1047562	23					
ANR	1050347	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , type )"	1452:5:40232:40260	1047562	0	True				
ANR	1050348	CallExpression	"r_cons_printf ( ""%s\\n"" , type )"		1047562	0					
ANR	1050349	Callee	r_cons_printf		1047562	0					
ANR	1050350	Identifier	r_cons_printf		1047562	0					
ANR	1050351	ArgumentList	"""%s\\n"""		1047562	1					
ANR	1050352	Argument	"""%s\\n"""		1047562	0					
ANR	1050353	PrimaryExpression	"""%s\\n"""		1047562	0					
ANR	1050354	Argument	type		1047562	1					
ANR	1050355	Identifier	type		1047562	0					
ANR	1050356	ExpressionStatement	r_list_free ( uniqList )	1454:4:40272:40294	1047562	24	True				
ANR	1050357	CallExpression	r_list_free ( uniqList )		1047562	0					
ANR	1050358	Callee	r_list_free		1047562	0					
ANR	1050359	Identifier	r_list_free		1047562	0					
ANR	1050360	ArgumentList	uniqList		1047562	1					
ANR	1050361	Argument	uniqList		1047562	0					
ANR	1050362	Identifier	uniqList		1047562	0					
ANR	1050363	BreakStatement	break ;	1456:3:40304:40309	1047562	25	True				
ANR	1050364	Label	case ' ' :	1457:2:40313:40321	1047562	26	True				
ANR	1050365	ExpressionStatement	type = ( char * ) r_str_trim_ro ( input + 2 )	1458:3:40373:40413	1047562	27	True				
ANR	1050366	AssignmentExpression	type = ( char * ) r_str_trim_ro ( input + 2 )		1047562	0		=			
ANR	1050367	Identifier	type		1047562	0					
ANR	1050368	CastExpression	( char * ) r_str_trim_ro ( input + 2 )		1047562	1					
ANR	1050369	CastTarget	char *		1047562	0					
ANR	1050370	CallExpression	r_str_trim_ro ( input + 2 )		1047562	1					
ANR	1050371	Callee	r_str_trim_ro		1047562	0					
ANR	1050372	Identifier	r_str_trim_ro		1047562	0					
ANR	1050373	ArgumentList	input + 2		1047562	1					
ANR	1050374	Argument	input + 2		1047562	0					
ANR	1050375	AdditiveExpression	input + 2		1047562	0		+			
ANR	1050376	Identifier	input		1047562	0					
ANR	1050377	PrimaryExpression	2		1047562	1					
ANR	1050378	Statement	r_list_foreach	1459:3:40418:40431	1047562	28	True				
ANR	1050379	Statement	(	1459:18:40433:40433	1047562	29	True				
ANR	1050380	Statement	core	1459:19:40434:40437	1047562	30	True				
ANR	1050381	Statement	->	1459:23:40438:40439	1047562	31	True				
ANR	1050382	Statement	anal	1459:25:40440:40443	1047562	32	True				
ANR	1050383	Statement	->	1459:29:40444:40445	1047562	33	True				
ANR	1050384	Statement	fcns	1459:31:40446:40449	1047562	34	True				
ANR	1050385	Statement	","	1459:35:40450:40450	1047562	35	True				
ANR	1050386	Statement	iter	1459:37:40452:40455	1047562	36	True				
ANR	1050387	Statement	","	1459:41:40456:40456	1047562	37	True				
ANR	1050388	Statement	fcn	1459:43:40458:40460	1047562	38	True				
ANR	1050389	Statement	)	1459:46:40461:40461	1047562	39	True				
ANR	1050390	CompoundStatement		455:4:12055:12094	1047562	40					
ANR	1050391	IdentifierDeclStatement	"RList * uniq = get_uniq_type ( core , fcn ) ;"	1460:4:40469:40508	1047562	0	True				
ANR	1050392	IdentifierDecl	"* uniq = get_uniq_type ( core , fcn )"		1047562	0					
ANR	1050393	IdentifierDeclType	RList *		1047562	0					
ANR	1050394	Identifier	uniq		1047562	1					
ANR	1050395	AssignmentExpression	"* uniq = get_uniq_type ( core , fcn )"		1047562	2		=			
ANR	1050396	Identifier	uniq		1047562	0					
ANR	1050397	CallExpression	"get_uniq_type ( core , fcn )"		1047562	1					
ANR	1050398	Callee	get_uniq_type		1047562	0					
ANR	1050399	Identifier	get_uniq_type		1047562	0					
ANR	1050400	ArgumentList	core		1047562	1					
ANR	1050401	Argument	core		1047562	0					
ANR	1050402	Identifier	core		1047562	0					
ANR	1050403	Argument	fcn		1047562	1					
ANR	1050404	Identifier	fcn		1047562	0					
ANR	1050405	Statement	r_list_foreach	1461:4:40514:40527	1047562	1	True				
ANR	1050406	Statement	(	1461:19:40529:40529	1047562	2	True				
ANR	1050407	Statement	uniq	1461:20:40530:40533	1047562	3	True				
ANR	1050408	Statement	","	1461:25:40535:40535	1047562	4	True				
ANR	1050409	Statement	iter2	1461:27:40537:40541	1047562	5	True				
ANR	1050410	Statement	","	1461:32:40542:40542	1047562	6	True				
ANR	1050411	Statement	type2	1461:34:40544:40548	1047562	7	True				
ANR	1050412	Statement	)	1461:39:40549:40549	1047562	8	True				
ANR	1050413	CompoundStatement		456:41:12137:12137	1047562	9					
ANR	1050414	IfStatement	"if ( ! strcmp ( type2 , type ) )"		1047562	0					
ANR	1050415	Condition	"! strcmp ( type2 , type )"	1462:9:40562:40582	1047562	0	True				
ANR	1050416	UnaryOperationExpression	"! strcmp ( type2 , type )"		1047562	0					
ANR	1050417	UnaryOperator	!		1047562	0					
ANR	1050418	CallExpression	"strcmp ( type2 , type )"		1047562	1					
ANR	1050419	Callee	strcmp		1047562	0					
ANR	1050420	Identifier	strcmp		1047562	0					
ANR	1050421	ArgumentList	type2		1047562	1					
ANR	1050422	Argument	type2		1047562	0					
ANR	1050423	Identifier	type2		1047562	0					
ANR	1050424	Argument	type		1047562	1					
ANR	1050425	Identifier	type		1047562	0					
ANR	1050426	CompoundStatement		457:32:12171:12171	1047562	1					
ANR	1050427	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , fcn -> name )"	1463:6:40593:40626	1047562	0	True				
ANR	1050428	CallExpression	"r_cons_printf ( ""%s\\n"" , fcn -> name )"		1047562	0					
ANR	1050429	Callee	r_cons_printf		1047562	0					
ANR	1050430	Identifier	r_cons_printf		1047562	0					
ANR	1050431	ArgumentList	"""%s\\n"""		1047562	1					
ANR	1050432	Argument	"""%s\\n"""		1047562	0					
ANR	1050433	PrimaryExpression	"""%s\\n"""		1047562	0					
ANR	1050434	Argument	fcn -> name		1047562	1					
ANR	1050435	PtrMemberAccess	fcn -> name		1047562	0					
ANR	1050436	Identifier	fcn		1047562	0					
ANR	1050437	Identifier	name		1047562	1					
ANR	1050438	BreakStatement	break ;	1464:6:40634:40639	1047562	1	True				
ANR	1050439	BreakStatement	break ;	1468:3:40662:40667	1047562	41	True				
ANR	1050440	Label	default :	1469:2:40671:40678	1047562	42	True				
ANR	1050441	Identifier	default		1047562	0					
ANR	1050442	ExpressionStatement	"eprintf ( ""Usage: tx[flg] [...]\\n"" )"	1470:3:40683:40717	1047562	43	True				
ANR	1050443	CallExpression	"eprintf ( ""Usage: tx[flg] [...]\\n"" )"		1047562	0					
ANR	1050444	Callee	eprintf		1047562	0					
ANR	1050445	Identifier	eprintf		1047562	0					
ANR	1050446	ArgumentList	"""Usage: tx[flg] [...]\\n"""		1047562	1					
ANR	1050447	Argument	"""Usage: tx[flg] [...]\\n"""		1047562	0					
ANR	1050448	PrimaryExpression	"""Usage: tx[flg] [...]\\n"""		1047562	0					
ANR	1050449	ExpressionStatement	"eprintf ( "" txf | tx.      list all types used in this function\\n"" )"	1471:3:40722:40788	1047562	44	True				
ANR	1050450	CallExpression	"eprintf ( "" txf | tx.      list all types used in this function\\n"" )"		1047562	0					
ANR	1050451	Callee	eprintf		1047562	0					
ANR	1050452	Identifier	eprintf		1047562	0					
ANR	1050453	ArgumentList	""" txf | tx.      list all types used in this function\\n"""		1047562	1					
ANR	1050454	Argument	""" txf | tx.      list all types used in this function\\n"""		1047562	0					
ANR	1050455	PrimaryExpression	""" txf | tx.      list all types used in this function\\n"""		1047562	0					
ANR	1050456	ExpressionStatement	"eprintf ( "" txl            list all types used by any function\\n"" )"	1472:3:40793:40858	1047562	45	True				
ANR	1050457	CallExpression	"eprintf ( "" txl            list all types used by any function\\n"" )"		1047562	0					
ANR	1050458	Callee	eprintf		1047562	0					
ANR	1050459	Identifier	eprintf		1047562	0					
ANR	1050460	ArgumentList	""" txl            list all types used by any function\\n"""		1047562	1					
ANR	1050461	Argument	""" txl            list all types used by any function\\n"""		1047562	0					
ANR	1050462	PrimaryExpression	""" txl            list all types used by any function\\n"""		1047562	0					
ANR	1050463	ExpressionStatement	"eprintf ( "" txg            render the type xrefs graph\\n"" )"	1473:3:40863:40920	1047562	46	True				
ANR	1050464	CallExpression	"eprintf ( "" txg            render the type xrefs graph\\n"" )"		1047562	0					
ANR	1050465	Callee	eprintf		1047562	0					
ANR	1050466	Identifier	eprintf		1047562	0					
ANR	1050467	ArgumentList	""" txg            render the type xrefs graph\\n"""		1047562	1					
ANR	1050468	Argument	""" txg            render the type xrefs graph\\n"""		1047562	0					
ANR	1050469	PrimaryExpression	""" txg            render the type xrefs graph\\n"""		1047562	0					
ANR	1050470	ExpressionStatement	"eprintf ( "" tx  int32_t    list functions names using this type\\n"" )"	1474:3:40925:40991	1047562	47	True				
ANR	1050471	CallExpression	"eprintf ( "" tx  int32_t    list functions names using this type\\n"" )"		1047562	0					
ANR	1050472	Callee	eprintf		1047562	0					
ANR	1050473	Identifier	eprintf		1047562	0					
ANR	1050474	ArgumentList	""" tx  int32_t    list functions names using this type\\n"""		1047562	1					
ANR	1050475	Argument	""" tx  int32_t    list functions names using this type\\n"""		1047562	0					
ANR	1050476	PrimaryExpression	""" tx  int32_t    list functions names using this type\\n"""		1047562	0					
ANR	1050477	ExpressionStatement	"eprintf ( "" tx             list functions and the types they use\\n"" )"	1475:3:40996:41063	1047562	48	True				
ANR	1050478	CallExpression	"eprintf ( "" tx             list functions and the types they use\\n"" )"		1047562	0					
ANR	1050479	Callee	eprintf		1047562	0					
ANR	1050480	Identifier	eprintf		1047562	0					
ANR	1050481	ArgumentList	""" tx             list functions and the types they use\\n"""		1047562	1					
ANR	1050482	Argument	""" tx             list functions and the types they use\\n"""		1047562	0					
ANR	1050483	PrimaryExpression	""" tx             list functions and the types they use\\n"""		1047562	0					
ANR	1050484	BreakStatement	break ;	1476:3:41068:41073	1047562	49	True				
ANR	1050485	BreakStatement	break ;	1478:3:41082:41087	1047562	35	True				
ANR	1050486	Label	case 'a' :	1480:1:41140:41148	1047562	36	True				
ANR	1050487	SwitchStatement	switch ( input [ 1 ] )		1047562	37					
ANR	1050488	Condition	input [ 1 ]	1481:10:41168:41175	1047562	0	True				
ANR	1050489	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1050490	Identifier	input		1047562	0					
ANR	1050491	PrimaryExpression	1		1047562	1					
ANR	1050492	CompoundStatement		476:20:12764:12764	1047562	1					
ANR	1050493	Label	case 's' :	1482:2:41182:41190	1047562	0	True				
ANR	1050494	CompoundStatement		480:3:12848:12881	1047562	1					
ANR	1050495	IdentifierDeclStatement	char * off = strdup ( input + 2 ) ;	1483:3:41206:41236	1047562	0	True				
ANR	1050496	IdentifierDecl	* off = strdup ( input + 2 )		1047562	0					
ANR	1050497	IdentifierDeclType	char *		1047562	0					
ANR	1050498	Identifier	off		1047562	1					
ANR	1050499	AssignmentExpression	* off = strdup ( input + 2 )		1047562	2		=			
ANR	1050500	Identifier	off		1047562	0					
ANR	1050501	CallExpression	strdup ( input + 2 )		1047562	1					
ANR	1050502	Callee	strdup		1047562	0					
ANR	1050503	Identifier	strdup		1047562	0					
ANR	1050504	ArgumentList	input + 2		1047562	1					
ANR	1050505	Argument	input + 2		1047562	0					
ANR	1050506	AdditiveExpression	input + 2		1047562	0		+			
ANR	1050507	Identifier	input		1047562	0					
ANR	1050508	PrimaryExpression	2		1047562	1					
ANR	1050509	ExpressionStatement	r_str_trim ( off )	1484:3:41241:41257	1047562	1	True				
ANR	1050510	CallExpression	r_str_trim ( off )		1047562	0					
ANR	1050511	Callee	r_str_trim		1047562	0					
ANR	1050512	Identifier	r_str_trim		1047562	0					
ANR	1050513	ArgumentList	off		1047562	1					
ANR	1050514	Argument	off		1047562	0					
ANR	1050515	Identifier	off		1047562	0					
ANR	1050516	IdentifierDeclStatement	"int toff = r_num_math ( NULL , off ) ;"	1485:3:41262:41295	1047562	2	True				
ANR	1050517	IdentifierDecl	"toff = r_num_math ( NULL , off )"		1047562	0					
ANR	1050518	IdentifierDeclType	int		1047562	0					
ANR	1050519	Identifier	toff		1047562	1					
ANR	1050520	AssignmentExpression	"toff = r_num_math ( NULL , off )"		1047562	2		=			
ANR	1050521	Identifier	toff		1047562	0					
ANR	1050522	CallExpression	"r_num_math ( NULL , off )"		1047562	1					
ANR	1050523	Callee	r_num_math		1047562	0					
ANR	1050524	Identifier	r_num_math		1047562	0					
ANR	1050525	ArgumentList	NULL		1047562	1					
ANR	1050526	Argument	NULL		1047562	0					
ANR	1050527	Identifier	NULL		1047562	0					
ANR	1050528	Argument	off		1047562	1					
ANR	1050529	Identifier	off		1047562	0					
ANR	1050530	IfStatement	if ( toff )		1047562	3					
ANR	1050531	Condition	toff	1486:7:41304:41307	1047562	0	True				
ANR	1050532	Identifier	toff		1047562	0					
ANR	1050533	CompoundStatement		484:4:12979:12987	1047562	1					
ANR	1050534	IdentifierDeclStatement	"RList * typeoffs = r_type_get_by_offset ( TDB , toff ) ;"	1487:4:41316:41366	1047562	0	True				
ANR	1050535	IdentifierDecl	"* typeoffs = r_type_get_by_offset ( TDB , toff )"		1047562	0					
ANR	1050536	IdentifierDeclType	RList *		1047562	0					
ANR	1050537	Identifier	typeoffs		1047562	1					
ANR	1050538	AssignmentExpression	"* typeoffs = r_type_get_by_offset ( TDB , toff )"		1047562	2		=			
ANR	1050539	Identifier	typeoffs		1047562	0					
ANR	1050540	CallExpression	"r_type_get_by_offset ( TDB , toff )"		1047562	1					
ANR	1050541	Callee	r_type_get_by_offset		1047562	0					
ANR	1050542	Identifier	r_type_get_by_offset		1047562	0					
ANR	1050543	ArgumentList	TDB		1047562	1					
ANR	1050544	Argument	TDB		1047562	0					
ANR	1050545	Identifier	TDB		1047562	0					
ANR	1050546	Argument	toff		1047562	1					
ANR	1050547	Identifier	toff		1047562	0					
ANR	1050548	IdentifierDeclStatement	RListIter * iter ;	1488:4:41372:41387	1047562	1	True				
ANR	1050549	IdentifierDecl	* iter		1047562	0					
ANR	1050550	IdentifierDeclType	RListIter *		1047562	0					
ANR	1050551	Identifier	iter		1047562	1					
ANR	1050552	IdentifierDeclStatement	char * ty ;	1489:4:41393:41401	1047562	2	True				
ANR	1050553	IdentifierDecl	* ty		1047562	0					
ANR	1050554	IdentifierDeclType	char *		1047562	0					
ANR	1050555	Identifier	ty		1047562	1					
ANR	1050556	Statement	r_list_foreach	1490:4:41407:41420	1047562	3	True				
ANR	1050557	Statement	(	1490:19:41422:41422	1047562	4	True				
ANR	1050558	Statement	typeoffs	1490:20:41423:41430	1047562	5	True				
ANR	1050559	Statement	","	1490:28:41431:41431	1047562	6	True				
ANR	1050560	Statement	iter	1490:30:41433:41436	1047562	7	True				
ANR	1050561	Statement	","	1490:34:41437:41437	1047562	8	True				
ANR	1050562	Statement	ty	1490:36:41439:41440	1047562	9	True				
ANR	1050563	Statement	)	1490:38:41441:41441	1047562	10	True				
ANR	1050564	CompoundStatement		485:40:13029:13029	1047562	11					
ANR	1050565	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , ty )"	1491:5:41450:41476	1047562	0	True				
ANR	1050566	CallExpression	"r_cons_printf ( ""%s\\n"" , ty )"		1047562	0					
ANR	1050567	Callee	r_cons_printf		1047562	0					
ANR	1050568	Identifier	r_cons_printf		1047562	0					
ANR	1050569	ArgumentList	"""%s\\n"""		1047562	1					
ANR	1050570	Argument	"""%s\\n"""		1047562	0					
ANR	1050571	PrimaryExpression	"""%s\\n"""		1047562	0					
ANR	1050572	Argument	ty		1047562	1					
ANR	1050573	Identifier	ty		1047562	0					
ANR	1050574	ExpressionStatement	r_list_free ( typeoffs )	1493:4:41488:41510	1047562	12	True				
ANR	1050575	CallExpression	r_list_free ( typeoffs )		1047562	0					
ANR	1050576	Callee	r_list_free		1047562	0					
ANR	1050577	Identifier	r_list_free		1047562	0					
ANR	1050578	ArgumentList	typeoffs		1047562	1					
ANR	1050579	Argument	typeoffs		1047562	0					
ANR	1050580	Identifier	typeoffs		1047562	0					
ANR	1050581	ExpressionStatement	free ( off )	1495:3:41520:41530	1047562	4	True				
ANR	1050582	CallExpression	free ( off )		1047562	0					
ANR	1050583	Callee	free		1047562	0					
ANR	1050584	Identifier	free		1047562	0					
ANR	1050585	ArgumentList	off		1047562	1					
ANR	1050586	Argument	off		1047562	0					
ANR	1050587	Identifier	off		1047562	0					
ANR	1050588	BreakStatement	break ;	1496:3:41535:41540	1047562	5	True				
ANR	1050589	Label	case 'i' :	1498:2:41548:41556	1047562	2	True				
ANR	1050590	CompoundStatement		493:12:13144:13144	1047562	3					
ANR	1050591	IfStatement	if ( input [ 2 ] == 'l' )		1047562	0					
ANR	1050592	Condition	input [ 2 ] == 'l'	1499:7:41576:41590	1047562	0	True				
ANR	1050593	EqualityExpression	input [ 2 ] == 'l'		1047562	0		==			
ANR	1050594	ArrayIndexing	input [ 2 ]		1047562	0					
ANR	1050595	Identifier	input		1047562	0					
ANR	1050596	PrimaryExpression	2		1047562	1					
ANR	1050597	PrimaryExpression	'l'		1047562	1					
ANR	1050598	CompoundStatement		494:24:13179:13179	1047562	1					
ANR	1050599	ExpressionStatement	"cmd_tail ( core , input )"	1500:4:41599:41621	1047562	0	True				
ANR	1050600	CallExpression	"cmd_tail ( core , input )"		1047562	0					
ANR	1050601	Callee	cmd_tail		1047562	0					
ANR	1050602	Identifier	cmd_tail		1047562	0					
ANR	1050603	ArgumentList	core		1047562	1					
ANR	1050604	Argument	core		1047562	0					
ANR	1050605	Identifier	core		1047562	0					
ANR	1050606	Argument	input		1047562	1					
ANR	1050607	Identifier	input		1047562	0					
ANR	1050608	BreakStatement	break ;	1502:3:41631:41636	1047562	1	True				
ANR	1050609	Label	case 'a' :	1504:2:41644:41652	1047562	4	True				
ANR	1050610	CompoundStatement		502:3:13320:13333	1047562	5					
ANR	1050611	IdentifierDeclStatement	char * off = r_str_trim_dup ( input + 2 ) ;	1505:3:41668:41706	1047562	0	True				
ANR	1050612	IdentifierDecl	* off = r_str_trim_dup ( input + 2 )		1047562	0					
ANR	1050613	IdentifierDeclType	char *		1047562	0					
ANR	1050614	Identifier	off		1047562	1					
ANR	1050615	AssignmentExpression	* off = r_str_trim_dup ( input + 2 )		1047562	2		=			
ANR	1050616	Identifier	off		1047562	0					
ANR	1050617	CallExpression	r_str_trim_dup ( input + 2 )		1047562	1					
ANR	1050618	Callee	r_str_trim_dup		1047562	0					
ANR	1050619	Identifier	r_str_trim_dup		1047562	0					
ANR	1050620	ArgumentList	input + 2		1047562	1					
ANR	1050621	Argument	input + 2		1047562	0					
ANR	1050622	AdditiveExpression	input + 2		1047562	0		+			
ANR	1050623	Identifier	input		1047562	0					
ANR	1050624	PrimaryExpression	2		1047562	1					
ANR	1050625	IdentifierDeclStatement	RAnalFunction * fcn ;	1506:3:41711:41729	1047562	1	True				
ANR	1050626	IdentifierDecl	* fcn		1047562	0					
ANR	1050627	IdentifierDeclType	RAnalFunction *		1047562	0					
ANR	1050628	Identifier	fcn		1047562	1					
ANR	1050629	IdentifierDeclStatement	RListIter * it ;	1507:3:41734:41747	1047562	2	True				
ANR	1050630	IdentifierDecl	* it		1047562	0					
ANR	1050631	IdentifierDeclType	RListIter *		1047562	0					
ANR	1050632	Identifier	it		1047562	1					
ANR	1050633	IfStatement	if ( off && * off )		1047562	3					
ANR	1050634	Condition	off && * off	1508:7:41756:41766	1047562	0	True				
ANR	1050635	AndExpression	off && * off		1047562	0		&&			
ANR	1050636	Identifier	off		1047562	0					
ANR	1050637	UnaryOperationExpression	* off		1047562	1					
ANR	1050638	UnaryOperator	*		1047562	0					
ANR	1050639	Identifier	off		1047562	1					
ANR	1050640	CompoundStatement		504:4:13361:13395	1047562	1					
ANR	1050641	IdentifierDeclStatement	"ut64 addr = r_num_math ( NULL , off ) ;"	1509:4:41775:41809	1047562	0	True				
ANR	1050642	IdentifierDecl	"addr = r_num_math ( NULL , off )"		1047562	0					
ANR	1050643	IdentifierDeclType	ut64		1047562	0					
ANR	1050644	Identifier	addr		1047562	1					
ANR	1050645	AssignmentExpression	"addr = r_num_math ( NULL , off )"		1047562	2		=			
ANR	1050646	Identifier	addr		1047562	0					
ANR	1050647	CallExpression	"r_num_math ( NULL , off )"		1047562	1					
ANR	1050648	Callee	r_num_math		1047562	0					
ANR	1050649	Identifier	r_num_math		1047562	0					
ANR	1050650	ArgumentList	NULL		1047562	1					
ANR	1050651	Argument	NULL		1047562	0					
ANR	1050652	Identifier	NULL		1047562	0					
ANR	1050653	Argument	off		1047562	1					
ANR	1050654	Identifier	off		1047562	0					
ANR	1050655	ExpressionStatement	"fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"	1510:4:41815:41868	1047562	1	True				
ANR	1050656	AssignmentExpression	"fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		1047562	0		=			
ANR	1050657	Identifier	fcn		1047562	0					
ANR	1050658	CallExpression	"r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		1047562	1					
ANR	1050659	Callee	r_anal_get_fcn_at		1047562	0					
ANR	1050660	Identifier	r_anal_get_fcn_at		1047562	0					
ANR	1050661	ArgumentList	core -> anal		1047562	1					
ANR	1050662	Argument	core -> anal		1047562	0					
ANR	1050663	PtrMemberAccess	core -> anal		1047562	0					
ANR	1050664	Identifier	core		1047562	0					
ANR	1050665	Identifier	anal		1047562	1					
ANR	1050666	Argument	core -> offset		1047562	1					
ANR	1050667	PtrMemberAccess	core -> offset		1047562	0					
ANR	1050668	Identifier	core		1047562	0					
ANR	1050669	Identifier	offset		1047562	1					
ANR	1050670	Argument	0		1047562	2					
ANR	1050671	PrimaryExpression	0		1047562	0					
ANR	1050672	IfStatement	if ( fcn )		1047562	2					
ANR	1050673	Condition	fcn	1511:8:41878:41880	1047562	0	True				
ANR	1050674	Identifier	fcn		1047562	0					
ANR	1050675	CompoundStatement		506:13:13469:13469	1047562	1					
ANR	1050676	ExpressionStatement	"link_struct_offset ( core , fcn )"	1512:5:41890:41920	1047562	0	True				
ANR	1050677	CallExpression	"link_struct_offset ( core , fcn )"		1047562	0					
ANR	1050678	Callee	link_struct_offset		1047562	0					
ANR	1050679	Identifier	link_struct_offset		1047562	0					
ANR	1050680	ArgumentList	core		1047562	1					
ANR	1050681	Argument	core		1047562	0					
ANR	1050682	Identifier	core		1047562	0					
ANR	1050683	Argument	fcn		1047562	1					
ANR	1050684	Identifier	fcn		1047562	0					
ANR	1050685	ElseStatement	else		1047562	0					
ANR	1050686	CompoundStatement		508:11:13519:13519	1047562	0					
ANR	1050687	Statement	eprintf	1514:5:41940:41946	1047562	0	True				
ANR	1050688	Statement	(	1514:13:41948:41948	1047562	1	True				
ANR	1050689	Statement	"""cannot find function at %08"""	1514:14:41949:41977	1047562	2	True				
ANR	1050690	Statement	PFMT64x	1514:43:41978:41984	1047562	3	True				
ANR	1050691	Statement	"""\\n"""	1514:50:41985:41988	1047562	4	True				
ANR	1050692	Statement	","	1514:54:41989:41989	1047562	5	True				
ANR	1050693	Statement	addr	1514:56:41991:41994	1047562	6	True				
ANR	1050694	Statement	)	1514:60:41995:41995	1047562	7	True				
ANR	1050695	ExpressionStatement		1514:61:41996:41996	1047562	8	True				
ANR	1050696	ElseStatement	else		1047562	0					
ANR	1050697	CompoundStatement		511:10:13600:13600	1047562	0					
ANR	1050698	IfStatement	if ( r_list_length ( core -> anal -> fcns ) == 0 )		1047562	0					
ANR	1050699	Condition	r_list_length ( core -> anal -> fcns ) == 0	1517:8:42024:42060	1047562	0	True				
ANR	1050700	EqualityExpression	r_list_length ( core -> anal -> fcns ) == 0		1047562	0		==			
ANR	1050701	CallExpression	r_list_length ( core -> anal -> fcns )		1047562	0					
ANR	1050702	Callee	r_list_length		1047562	0					
ANR	1050703	Identifier	r_list_length		1047562	0					
ANR	1050704	ArgumentList	core -> anal -> fcns		1047562	1					
ANR	1050705	Argument	core -> anal -> fcns		1047562	0					
ANR	1050706	PtrMemberAccess	core -> anal -> fcns		1047562	0					
ANR	1050707	PtrMemberAccess	core -> anal		1047562	0					
ANR	1050708	Identifier	core		1047562	0					
ANR	1050709	Identifier	anal		1047562	1					
ANR	1050710	Identifier	fcns		1047562	1					
ANR	1050711	PrimaryExpression	0		1047562	1					
ANR	1050712	CompoundStatement		512:47:13649:13649	1047562	1					
ANR	1050713	ExpressionStatement	"eprintf ( ""couldn't find any functions\\n"" )"	1518:5:42070:42111	1047562	0	True				
ANR	1050714	CallExpression	"eprintf ( ""couldn't find any functions\\n"" )"		1047562	0					
ANR	1050715	Callee	eprintf		1047562	0					
ANR	1050716	Identifier	eprintf		1047562	0					
ANR	1050717	ArgumentList	"""couldn't find any functions\\n"""		1047562	1					
ANR	1050718	Argument	"""couldn't find any functions\\n"""		1047562	0					
ANR	1050719	PrimaryExpression	"""couldn't find any functions\\n"""		1047562	0					
ANR	1050720	BreakStatement	break ;	1519:5:42118:42123	1047562	1	True				
ANR	1050721	Statement	r_list_foreach	1521:4:42135:42148	1047562	1	True				
ANR	1050722	Statement	(	1521:19:42150:42150	1047562	2	True				
ANR	1050723	Statement	core	1521:20:42151:42154	1047562	3	True				
ANR	1050724	Statement	->	1521:24:42155:42156	1047562	4	True				
ANR	1050725	Statement	anal	1521:26:42157:42160	1047562	5	True				
ANR	1050726	Statement	->	1521:30:42161:42162	1047562	6	True				
ANR	1050727	Statement	fcns	1521:32:42163:42166	1047562	7	True				
ANR	1050728	Statement	","	1521:36:42167:42167	1047562	8	True				
ANR	1050729	Statement	it	1521:38:42169:42170	1047562	9	True				
ANR	1050730	Statement	","	1521:40:42171:42171	1047562	10	True				
ANR	1050731	Statement	fcn	1521:42:42173:42175	1047562	11	True				
ANR	1050732	Statement	)	1521:45:42176:42176	1047562	12	True				
ANR	1050733	CompoundStatement		516:47:13764:13764	1047562	13					
ANR	1050734	IfStatement	if ( r_cons_is_breaked ( ) )		1047562	0					
ANR	1050735	Condition	r_cons_is_breaked ( )	1522:9:42189:42208	1047562	0	True				
ANR	1050736	CallExpression	r_cons_is_breaked ( )		1047562	0					
ANR	1050737	Callee	r_cons_is_breaked		1047562	0					
ANR	1050738	Identifier	r_cons_is_breaked		1047562	0					
ANR	1050739	ArgumentList			1047562	1					
ANR	1050740	CompoundStatement		517:31:13797:13797	1047562	1					
ANR	1050741	BreakStatement	break ;	1523:6:42219:42224	1047562	0	True				
ANR	1050742	ExpressionStatement	"link_struct_offset ( core , fcn )"	1525:5:42238:42268	1047562	1	True				
ANR	1050743	CallExpression	"link_struct_offset ( core , fcn )"		1047562	0					
ANR	1050744	Callee	link_struct_offset		1047562	0					
ANR	1050745	Identifier	link_struct_offset		1047562	0					
ANR	1050746	ArgumentList	core		1047562	1					
ANR	1050747	Argument	core		1047562	0					
ANR	1050748	Identifier	core		1047562	0					
ANR	1050749	Argument	fcn		1047562	1					
ANR	1050750	Identifier	fcn		1047562	0					
ANR	1050751	ExpressionStatement	free ( off )	1528:3:42284:42294	1047562	4	True				
ANR	1050752	CallExpression	free ( off )		1047562	0					
ANR	1050753	Callee	free		1047562	0					
ANR	1050754	Identifier	free		1047562	0					
ANR	1050755	ArgumentList	off		1047562	1					
ANR	1050756	Argument	off		1047562	0					
ANR	1050757	Identifier	off		1047562	0					
ANR	1050758	BreakStatement	break ;	1529:4:42300:42305	1047562	6	True				
ANR	1050759	Label	case ' ' :	1530:2:42309:42317	1047562	7	True				
ANR	1050760	CompoundStatement		558:3:14679:14773	1047562	8					
ANR	1050761	IdentifierDeclStatement	const char * off = NULL ;	1531:3:42324:42346	1047562	0	True				
ANR	1050762	IdentifierDecl	* off = NULL		1047562	0					
ANR	1050763	IdentifierDeclType	const char *		1047562	0					
ANR	1050764	Identifier	off		1047562	1					
ANR	1050765	AssignmentExpression	* off = NULL		1047562	2		=			
ANR	1050766	Identifier	NULL		1047562	0					
ANR	1050767	Identifier	NULL		1047562	1					
ANR	1050768	IdentifierDeclStatement	char * type = strdup ( r_str_trim_ro ( input + 2 ) ) ;	1532:3:42351:42398	1047562	1	True				
ANR	1050769	IdentifierDecl	* type = strdup ( r_str_trim_ro ( input + 2 ) )		1047562	0					
ANR	1050770	IdentifierDeclType	char *		1047562	0					
ANR	1050771	Identifier	type		1047562	1					
ANR	1050772	AssignmentExpression	* type = strdup ( r_str_trim_ro ( input + 2 ) )		1047562	2		=			
ANR	1050773	Identifier	type		1047562	0					
ANR	1050774	CallExpression	strdup ( r_str_trim_ro ( input + 2 ) )		1047562	1					
ANR	1050775	Callee	strdup		1047562	0					
ANR	1050776	Identifier	strdup		1047562	0					
ANR	1050777	ArgumentList	r_str_trim_ro ( input + 2 )		1047562	1					
ANR	1050778	Argument	r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1050779	CallExpression	r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1050780	Callee	r_str_trim_ro		1047562	0					
ANR	1050781	Identifier	r_str_trim_ro		1047562	0					
ANR	1050782	ArgumentList	input + 2		1047562	1					
ANR	1050783	Argument	input + 2		1047562	0					
ANR	1050784	AdditiveExpression	input + 2		1047562	0		+			
ANR	1050785	Identifier	input		1047562	0					
ANR	1050786	PrimaryExpression	2		1047562	1					
ANR	1050787	IdentifierDeclStatement	"char * idx = strchr ( type , ' ' ) ;"	1533:3:42403:42433	1047562	2	True				
ANR	1050788	IdentifierDecl	"* idx = strchr ( type , ' ' )"		1047562	0					
ANR	1050789	IdentifierDeclType	char *		1047562	0					
ANR	1050790	Identifier	idx		1047562	1					
ANR	1050791	AssignmentExpression	"* idx = strchr ( type , ' ' )"		1047562	2		=			
ANR	1050792	Identifier	idx		1047562	0					
ANR	1050793	CallExpression	"strchr ( type , ' ' )"		1047562	1					
ANR	1050794	Callee	strchr		1047562	0					
ANR	1050795	Identifier	strchr		1047562	0					
ANR	1050796	ArgumentList	type		1047562	1					
ANR	1050797	Argument	type		1047562	0					
ANR	1050798	Identifier	type		1047562	0					
ANR	1050799	Argument	' '		1047562	1					
ANR	1050800	PrimaryExpression	' '		1047562	0					
ANR	1050801	IfStatement	if ( idx )		1047562	3					
ANR	1050802	Condition	idx	1534:7:42442:42444	1047562	0	True				
ANR	1050803	Identifier	idx		1047562	0					
ANR	1050804	CompoundStatement		529:12:14033:14033	1047562	1					
ANR	1050805	ExpressionStatement	* idx ++ = 0	1535:4:42453:42463	1047562	0	True				
ANR	1050806	AssignmentExpression	* idx ++ = 0		1047562	0		=			
ANR	1050807	UnaryOperationExpression	* idx ++		1047562	0					
ANR	1050808	UnaryOperator	*		1047562	0					
ANR	1050809	PostIncDecOperationExpression	idx ++		1047562	1					
ANR	1050810	Identifier	idx		1047562	0					
ANR	1050811	IncDec	++		1047562	1					
ANR	1050812	PrimaryExpression	0		1047562	1					
ANR	1050813	ExpressionStatement	off = idx	1536:4:42469:42478	1047562	1	True				
ANR	1050814	AssignmentExpression	off = idx		1047562	0		=			
ANR	1050815	Identifier	off		1047562	0					
ANR	1050816	Identifier	idx		1047562	1					
ANR	1050817	IdentifierDeclStatement	"char * ptr = strchr ( type , '=' ) ;"	1538:3:42488:42518	1047562	4	True				
ANR	1050818	IdentifierDecl	"* ptr = strchr ( type , '=' )"		1047562	0					
ANR	1050819	IdentifierDeclType	char *		1047562	0					
ANR	1050820	Identifier	ptr		1047562	1					
ANR	1050821	AssignmentExpression	"* ptr = strchr ( type , '=' )"		1047562	2		=			
ANR	1050822	Identifier	ptr		1047562	0					
ANR	1050823	CallExpression	"strchr ( type , '=' )"		1047562	1					
ANR	1050824	Callee	strchr		1047562	0					
ANR	1050825	Identifier	strchr		1047562	0					
ANR	1050826	ArgumentList	type		1047562	1					
ANR	1050827	Argument	type		1047562	0					
ANR	1050828	Identifier	type		1047562	0					
ANR	1050829	Argument	'='		1047562	1					
ANR	1050830	PrimaryExpression	'='		1047562	0					
ANR	1050831	IdentifierDeclStatement	ut64 offimm = 0 ;	1539:3:42523:42538	1047562	5	True				
ANR	1050832	IdentifierDecl	offimm = 0		1047562	0					
ANR	1050833	IdentifierDeclType	ut64		1047562	0					
ANR	1050834	Identifier	offimm		1047562	1					
ANR	1050835	AssignmentExpression	offimm = 0		1047562	2		=			
ANR	1050836	Identifier	offimm		1047562	0					
ANR	1050837	PrimaryExpression	0		1047562	1					
ANR	1050838	IdentifierDeclStatement	int i = 0 ;	1540:3:42543:42552	1047562	6	True				
ANR	1050839	IdentifierDecl	i = 0		1047562	0					
ANR	1050840	IdentifierDeclType	int		1047562	0					
ANR	1050841	Identifier	i		1047562	1					
ANR	1050842	AssignmentExpression	i = 0		1047562	2		=			
ANR	1050843	Identifier	i		1047562	0					
ANR	1050844	PrimaryExpression	0		1047562	1					
ANR	1050845	IdentifierDeclStatement	ut64 addr ;	1541:3:42557:42566	1047562	7	True				
ANR	1050846	IdentifierDecl	addr		1047562	0					
ANR	1050847	IdentifierDeclType	ut64		1047562	0					
ANR	1050848	Identifier	addr		1047562	1					
ANR	1050849	IfStatement	if ( ptr )		1047562	8					
ANR	1050850	Condition	ptr	1543:7:42576:42578	1047562	0	True				
ANR	1050851	Identifier	ptr		1047562	0					
ANR	1050852	CompoundStatement		538:12:14167:14167	1047562	1					
ANR	1050853	ExpressionStatement	* ptr ++ = 0	1544:4:42587:42597	1047562	0	True				
ANR	1050854	AssignmentExpression	* ptr ++ = 0		1047562	0		=			
ANR	1050855	UnaryOperationExpression	* ptr ++		1047562	0					
ANR	1050856	UnaryOperator	*		1047562	0					
ANR	1050857	PostIncDecOperationExpression	ptr ++		1047562	1					
ANR	1050858	Identifier	ptr		1047562	0					
ANR	1050859	IncDec	++		1047562	1					
ANR	1050860	PrimaryExpression	0		1047562	1					
ANR	1050861	ExpressionStatement	r_str_trim ( ptr )	1545:4:42603:42619	1047562	1	True				
ANR	1050862	CallExpression	r_str_trim ( ptr )		1047562	0					
ANR	1050863	Callee	r_str_trim		1047562	0					
ANR	1050864	Identifier	r_str_trim		1047562	0					
ANR	1050865	ArgumentList	ptr		1047562	1					
ANR	1050866	Argument	ptr		1047562	0					
ANR	1050867	Identifier	ptr		1047562	0					
ANR	1050868	IfStatement	if ( ptr && * ptr )		1047562	2					
ANR	1050869	Condition	ptr && * ptr	1546:8:42629:42639	1047562	0	True				
ANR	1050870	AndExpression	ptr && * ptr		1047562	0		&&			
ANR	1050871	Identifier	ptr		1047562	0					
ANR	1050872	UnaryOperationExpression	* ptr		1047562	1					
ANR	1050873	UnaryOperator	*		1047562	0					
ANR	1050874	Identifier	ptr		1047562	1					
ANR	1050875	CompoundStatement		541:21:14228:14228	1047562	1					
ANR	1050876	ExpressionStatement	"addr = r_num_math ( core -> num , ptr )"	1547:5:42649:42683	1047562	0	True				
ANR	1050877	AssignmentExpression	"addr = r_num_math ( core -> num , ptr )"		1047562	0		=			
ANR	1050878	Identifier	addr		1047562	0					
ANR	1050879	CallExpression	"r_num_math ( core -> num , ptr )"		1047562	1					
ANR	1050880	Callee	r_num_math		1047562	0					
ANR	1050881	Identifier	r_num_math		1047562	0					
ANR	1050882	ArgumentList	core -> num		1047562	1					
ANR	1050883	Argument	core -> num		1047562	0					
ANR	1050884	PtrMemberAccess	core -> num		1047562	0					
ANR	1050885	Identifier	core		1047562	0					
ANR	1050886	Identifier	num		1047562	1					
ANR	1050887	Argument	ptr		1047562	1					
ANR	1050888	Identifier	ptr		1047562	0					
ANR	1050889	ElseStatement	else		1047562	0					
ANR	1050890	CompoundStatement		543:11:14282:14282	1047562	0					
ANR	1050891	ExpressionStatement	"eprintf ( ""address is unvalid\\n"" )"	1549:5:42703:42735	1047562	0	True				
ANR	1050892	CallExpression	"eprintf ( ""address is unvalid\\n"" )"		1047562	0					
ANR	1050893	Callee	eprintf		1047562	0					
ANR	1050894	Identifier	eprintf		1047562	0					
ANR	1050895	ArgumentList	"""address is unvalid\\n"""		1047562	1					
ANR	1050896	Argument	"""address is unvalid\\n"""		1047562	0					
ANR	1050897	PrimaryExpression	"""address is unvalid\\n"""		1047562	0					
ANR	1050898	ExpressionStatement	free ( type )	1550:5:42742:42753	1047562	1	True				
ANR	1050899	CallExpression	free ( type )		1047562	0					
ANR	1050900	Callee	free		1047562	0					
ANR	1050901	Identifier	free		1047562	0					
ANR	1050902	ArgumentList	type		1047562	1					
ANR	1050903	Argument	type		1047562	0					
ANR	1050904	Identifier	type		1047562	0					
ANR	1050905	BreakStatement	break ;	1551:5:42760:42765	1047562	2	True				
ANR	1050906	ElseStatement	else		1047562	0					
ANR	1050907	CompoundStatement		548:10:14369:14369	1047562	0					
ANR	1050908	ExpressionStatement	addr = core -> offset	1554:4:42789:42808	1047562	0	True				
ANR	1050909	AssignmentExpression	addr = core -> offset		1047562	0		=			
ANR	1050910	Identifier	addr		1047562	0					
ANR	1050911	PtrMemberAccess	core -> offset		1047562	1					
ANR	1050912	Identifier	core		1047562	0					
ANR	1050913	Identifier	offset		1047562	1					
ANR	1050914	ExpressionStatement	r_str_trim ( type )	1556:3:42818:42835	1047562	9	True				
ANR	1050915	CallExpression	r_str_trim ( type )		1047562	0					
ANR	1050916	Callee	r_str_trim		1047562	0					
ANR	1050917	Identifier	r_str_trim		1047562	0					
ANR	1050918	ArgumentList	type		1047562	1					
ANR	1050919	Argument	type		1047562	0					
ANR	1050920	Identifier	type		1047562	0					
ANR	1050921	IdentifierDeclStatement	RAsmOp asmop ;	1557:3:42840:42852	1047562	10	True				
ANR	1050922	IdentifierDecl	asmop		1047562	0					
ANR	1050923	IdentifierDeclType	RAsmOp		1047562	0					
ANR	1050924	Identifier	asmop		1047562	1					
ANR	1050925	IdentifierDeclStatement	RAnalOp op = { 0 } ;	1558:3:42857:42875	1047562	11	True				
ANR	1050926	IdentifierDecl	op = { 0 }		1047562	0					
ANR	1050927	IdentifierDeclType	RAnalOp		1047562	0					
ANR	1050928	Identifier	op		1047562	1					
ANR	1050929	AssignmentExpression	op = { 0 }		1047562	2		=			
ANR	1050930	Identifier	op		1047562	0					
ANR	1050931	InitializerList	0		1047562	1					
ANR	1050932	PrimaryExpression	0		1047562	0					
ANR	1050933	IdentifierDeclStatement	ut8 code [ 128 ] = { 0 } ;	1559:3:42880:42901	1047562	12	True				
ANR	1050934	IdentifierDecl	code [ 128 ] = { 0 }		1047562	0					
ANR	1050935	IdentifierDeclType	ut8 [ 128 ]		1047562	0					
ANR	1050936	Identifier	code		1047562	1					
ANR	1050937	PrimaryExpression	128		1047562	2					
ANR	1050938	AssignmentExpression	code [ 128 ] = { 0 }		1047562	3		=			
ANR	1050939	Identifier	code		1047562	0					
ANR	1050940	InitializerList	0		1047562	1					
ANR	1050941	PrimaryExpression	0		1047562	0					
ANR	1050942	ExpressionStatement	"( void ) r_io_read_at ( core -> io , core -> offset , code , sizeof ( code ) )"	1560:3:42906:42970	1047562	13	True				
ANR	1050943	CastExpression	"( void ) r_io_read_at ( core -> io , core -> offset , code , sizeof ( code ) )"		1047562	0					
ANR	1050944	CastTarget	void		1047562	0					
ANR	1050945	CallExpression	"r_io_read_at ( core -> io , core -> offset , code , sizeof ( code ) )"		1047562	1					
ANR	1050946	Callee	r_io_read_at		1047562	0					
ANR	1050947	Identifier	r_io_read_at		1047562	0					
ANR	1050948	ArgumentList	core -> io		1047562	1					
ANR	1050949	Argument	core -> io		1047562	0					
ANR	1050950	PtrMemberAccess	core -> io		1047562	0					
ANR	1050951	Identifier	core		1047562	0					
ANR	1050952	Identifier	io		1047562	1					
ANR	1050953	Argument	core -> offset		1047562	1					
ANR	1050954	PtrMemberAccess	core -> offset		1047562	0					
ANR	1050955	Identifier	core		1047562	0					
ANR	1050956	Identifier	offset		1047562	1					
ANR	1050957	Argument	code		1047562	2					
ANR	1050958	Identifier	code		1047562	0					
ANR	1050959	Argument	sizeof ( code )		1047562	3					
ANR	1050960	SizeofExpression	sizeof ( code )		1047562	0					
ANR	1050961	Sizeof	sizeof		1047562	0					
ANR	1050962	SizeofOperand	code		1047562	1					
ANR	1050963	ExpressionStatement	"r_asm_set_pc ( core -> assembler , addr )"	1561:3:42975:43011	1047562	14	True				
ANR	1050964	CallExpression	"r_asm_set_pc ( core -> assembler , addr )"		1047562	0					
ANR	1050965	Callee	r_asm_set_pc		1047562	0					
ANR	1050966	Identifier	r_asm_set_pc		1047562	0					
ANR	1050967	ArgumentList	core -> assembler		1047562	1					
ANR	1050968	Argument	core -> assembler		1047562	0					
ANR	1050969	PtrMemberAccess	core -> assembler		1047562	0					
ANR	1050970	Identifier	core		1047562	0					
ANR	1050971	Identifier	assembler		1047562	1					
ANR	1050972	Argument	addr		1047562	1					
ANR	1050973	Identifier	addr		1047562	0					
ANR	1050974	ExpressionStatement	"( void ) r_asm_disassemble ( core -> assembler , & asmop , code , core -> blocksize )"	1562:3:43016:43088	1047562	15	True				
ANR	1050975	CastExpression	"( void ) r_asm_disassemble ( core -> assembler , & asmop , code , core -> blocksize )"		1047562	0					
ANR	1050976	CastTarget	void		1047562	0					
ANR	1050977	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , code , core -> blocksize )"		1047562	1					
ANR	1050978	Callee	r_asm_disassemble		1047562	0					
ANR	1050979	Identifier	r_asm_disassemble		1047562	0					
ANR	1050980	ArgumentList	core -> assembler		1047562	1					
ANR	1050981	Argument	core -> assembler		1047562	0					
ANR	1050982	PtrMemberAccess	core -> assembler		1047562	0					
ANR	1050983	Identifier	core		1047562	0					
ANR	1050984	Identifier	assembler		1047562	1					
ANR	1050985	Argument	& asmop		1047562	1					
ANR	1050986	UnaryOperationExpression	& asmop		1047562	0					
ANR	1050987	UnaryOperator	&		1047562	0					
ANR	1050988	Identifier	asmop		1047562	1					
ANR	1050989	Argument	code		1047562	2					
ANR	1050990	Identifier	code		1047562	0					
ANR	1050991	Argument	core -> blocksize		1047562	3					
ANR	1050992	PtrMemberAccess	core -> blocksize		1047562	0					
ANR	1050993	Identifier	core		1047562	0					
ANR	1050994	Identifier	blocksize		1047562	1					
ANR	1050995	IdentifierDeclStatement	"int ret = r_anal_op ( core -> anal , & op , core -> offset , code , core -> blocksize , R_ANAL_OP_MASK_VAL ) ;"	1563:3:43093:43187	1047562	16	True				
ANR	1050996	IdentifierDecl	"ret = r_anal_op ( core -> anal , & op , core -> offset , code , core -> blocksize , R_ANAL_OP_MASK_VAL )"		1047562	0					
ANR	1050997	IdentifierDeclType	int		1047562	0					
ANR	1050998	Identifier	ret		1047562	1					
ANR	1050999	AssignmentExpression	"ret = r_anal_op ( core -> anal , & op , core -> offset , code , core -> blocksize , R_ANAL_OP_MASK_VAL )"		1047562	2		=			
ANR	1051000	Identifier	ret		1047562	0					
ANR	1051001	CallExpression	"r_anal_op ( core -> anal , & op , core -> offset , code , core -> blocksize , R_ANAL_OP_MASK_VAL )"		1047562	1					
ANR	1051002	Callee	r_anal_op		1047562	0					
ANR	1051003	Identifier	r_anal_op		1047562	0					
ANR	1051004	ArgumentList	core -> anal		1047562	1					
ANR	1051005	Argument	core -> anal		1047562	0					
ANR	1051006	PtrMemberAccess	core -> anal		1047562	0					
ANR	1051007	Identifier	core		1047562	0					
ANR	1051008	Identifier	anal		1047562	1					
ANR	1051009	Argument	& op		1047562	1					
ANR	1051010	UnaryOperationExpression	& op		1047562	0					
ANR	1051011	UnaryOperator	&		1047562	0					
ANR	1051012	Identifier	op		1047562	1					
ANR	1051013	Argument	core -> offset		1047562	2					
ANR	1051014	PtrMemberAccess	core -> offset		1047562	0					
ANR	1051015	Identifier	core		1047562	0					
ANR	1051016	Identifier	offset		1047562	1					
ANR	1051017	Argument	code		1047562	3					
ANR	1051018	Identifier	code		1047562	0					
ANR	1051019	Argument	core -> blocksize		1047562	4					
ANR	1051020	PtrMemberAccess	core -> blocksize		1047562	0					
ANR	1051021	Identifier	core		1047562	0					
ANR	1051022	Identifier	blocksize		1047562	1					
ANR	1051023	Argument	R_ANAL_OP_MASK_VAL		1047562	5					
ANR	1051024	Identifier	R_ANAL_OP_MASK_VAL		1047562	0					
ANR	1051025	IfStatement	if ( ret >= 0 )		1047562	17					
ANR	1051026	Condition	ret >= 0	1564:7:43196:43203	1047562	0	True				
ANR	1051027	RelationalExpression	ret >= 0		1047562	0		>=			
ANR	1051028	Identifier	ret		1047562	0					
ANR	1051029	PrimaryExpression	0		1047562	1					
ANR	1051030	CompoundStatement		559:17:14792:14792	1047562	1					
ANR	1051031	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		1047562	0					
ANR	1051032	ForInit	i = 0 ;	1566:9:43267:43272	1047562	0	True				
ANR	1051033	AssignmentExpression	i = 0		1047562	0		=			
ANR	1051034	Identifier	i		1047562	0					
ANR	1051035	PrimaryExpression	0		1047562	1					
ANR	1051036	Condition	i < 3	1566:16:43274:43278	1047562	1	True				
ANR	1051037	RelationalExpression	i < 3		1047562	0		<			
ANR	1051038	Identifier	i		1047562	0					
ANR	1051039	PrimaryExpression	3		1047562	1					
ANR	1051040	PostIncDecOperationExpression	i ++	1566:23:43281:43283	1047562	2	True				
ANR	1051041	Identifier	i		1047562	0					
ANR	1051042	IncDec	++		1047562	1					
ANR	1051043	CompoundStatement		561:28:14872:14872	1047562	3					
ANR	1051044	IfStatement	if ( op . src [ i ] )		1047562	0					
ANR	1051045	Condition	op . src [ i ]	1567:9:43297:43305	1047562	0	True				
ANR	1051046	ArrayIndexing	op . src [ i ]		1047562	0					
ANR	1051047	MemberAccess	op . src		1047562	0					
ANR	1051048	Identifier	op		1047562	0					
ANR	1051049	Identifier	src		1047562	1					
ANR	1051050	Identifier	i		1047562	1					
ANR	1051051	CompoundStatement		562:20:14894:14894	1047562	1					
ANR	1051052	IfStatement	if ( op . src [ i ] -> imm )		1047562	0					
ANR	1051053	Condition	op . src [ i ] -> imm	1568:10:43320:43333	1047562	0	True				
ANR	1051054	PtrMemberAccess	op . src [ i ] -> imm		1047562	0					
ANR	1051055	ArrayIndexing	op . src [ i ]		1047562	0					
ANR	1051056	MemberAccess	op . src		1047562	0					
ANR	1051057	Identifier	op		1047562	0					
ANR	1051058	Identifier	src		1047562	1					
ANR	1051059	Identifier	i		1047562	1					
ANR	1051060	Identifier	imm		1047562	1					
ANR	1051061	CompoundStatement		563:26:14922:14922	1047562	1					
ANR	1051062	ExpressionStatement	offimm = op . src [ i ] -> imm	1569:7:43345:43368	1047562	0	True				
ANR	1051063	AssignmentExpression	offimm = op . src [ i ] -> imm		1047562	0		=			
ANR	1051064	Identifier	offimm		1047562	0					
ANR	1051065	PtrMemberAccess	op . src [ i ] -> imm		1047562	1					
ANR	1051066	ArrayIndexing	op . src [ i ]		1047562	0					
ANR	1051067	MemberAccess	op . src		1047562	0					
ANR	1051068	Identifier	op		1047562	0					
ANR	1051069	Identifier	src		1047562	1					
ANR	1051070	Identifier	i		1047562	1					
ANR	1051071	Identifier	imm		1047562	1					
ANR	1051072	ElseStatement	else		1047562	0					
ANR	1051073	IfStatement	if ( op . src [ i ] -> delta )		1047562	0					
ANR	1051074	Condition	op . src [ i ] -> delta	1570:17:43387:43402	1047562	0	True				
ANR	1051075	PtrMemberAccess	op . src [ i ] -> delta		1047562	0					
ANR	1051076	ArrayIndexing	op . src [ i ]		1047562	0					
ANR	1051077	MemberAccess	op . src		1047562	0					
ANR	1051078	Identifier	op		1047562	0					
ANR	1051079	Identifier	src		1047562	1					
ANR	1051080	Identifier	i		1047562	1					
ANR	1051081	Identifier	delta		1047562	1					
ANR	1051082	CompoundStatement		565:35:14991:14991	1047562	1					
ANR	1051083	ExpressionStatement	offimm = op . src [ i ] -> delta	1571:7:43414:43439	1047562	0	True				
ANR	1051084	AssignmentExpression	offimm = op . src [ i ] -> delta		1047562	0		=			
ANR	1051085	Identifier	offimm		1047562	0					
ANR	1051086	PtrMemberAccess	op . src [ i ] -> delta		1047562	1					
ANR	1051087	ArrayIndexing	op . src [ i ]		1047562	0					
ANR	1051088	MemberAccess	op . src		1047562	0					
ANR	1051089	Identifier	op		1047562	0					
ANR	1051090	Identifier	src		1047562	1					
ANR	1051091	Identifier	i		1047562	1					
ANR	1051092	Identifier	delta		1047562	1					
ANR	1051093	IfStatement	if ( ! offimm && op . dst )		1047562	1					
ANR	1051094	Condition	! offimm && op . dst	1575:8:43470:43486	1047562	0	True				
ANR	1051095	AndExpression	! offimm && op . dst		1047562	0		&&			
ANR	1051096	UnaryOperationExpression	! offimm		1047562	0					
ANR	1051097	UnaryOperator	!		1047562	0					
ANR	1051098	Identifier	offimm		1047562	1					
ANR	1051099	MemberAccess	op . dst		1047562	1					
ANR	1051100	Identifier	op		1047562	0					
ANR	1051101	Identifier	dst		1047562	1					
ANR	1051102	CompoundStatement		570:27:15075:15075	1047562	1					
ANR	1051103	IfStatement	if ( op . dst -> imm )		1047562	0					
ANR	1051104	Condition	op . dst -> imm	1576:9:43500:43510	1047562	0	True				
ANR	1051105	PtrMemberAccess	op . dst -> imm		1047562	0					
ANR	1051106	MemberAccess	op . dst		1047562	0					
ANR	1051107	Identifier	op		1047562	0					
ANR	1051108	Identifier	dst		1047562	1					
ANR	1051109	Identifier	imm		1047562	1					
ANR	1051110	CompoundStatement		571:22:15099:15099	1047562	1					
ANR	1051111	ExpressionStatement	offimm = op . dst -> imm	1577:6:43521:43541	1047562	0	True				
ANR	1051112	AssignmentExpression	offimm = op . dst -> imm		1047562	0		=			
ANR	1051113	Identifier	offimm		1047562	0					
ANR	1051114	PtrMemberAccess	op . dst -> imm		1047562	1					
ANR	1051115	MemberAccess	op . dst		1047562	0					
ANR	1051116	Identifier	op		1047562	0					
ANR	1051117	Identifier	dst		1047562	1					
ANR	1051118	Identifier	imm		1047562	1					
ANR	1051119	ElseStatement	else		1047562	0					
ANR	1051120	IfStatement	if ( op . dst -> delta )		1047562	0					
ANR	1051121	Condition	op . dst -> delta	1578:16:43559:43571	1047562	0	True				
ANR	1051122	PtrMemberAccess	op . dst -> delta		1047562	0					
ANR	1051123	MemberAccess	op . dst		1047562	0					
ANR	1051124	Identifier	op		1047562	0					
ANR	1051125	Identifier	dst		1047562	1					
ANR	1051126	Identifier	delta		1047562	1					
ANR	1051127	CompoundStatement		573:31:15160:15160	1047562	1					
ANR	1051128	ExpressionStatement	offimm = op . dst -> delta	1579:6:43582:43604	1047562	0	True				
ANR	1051129	AssignmentExpression	offimm = op . dst -> delta		1047562	0		=			
ANR	1051130	Identifier	offimm		1047562	0					
ANR	1051131	PtrMemberAccess	op . dst -> delta		1047562	1					
ANR	1051132	MemberAccess	op . dst		1047562	0					
ANR	1051133	Identifier	op		1047562	0					
ANR	1051134	Identifier	dst		1047562	1					
ANR	1051135	Identifier	delta		1047562	1					
ANR	1051136	IfStatement	if ( offimm != 0 )		1047562	2					
ANR	1051137	Condition	offimm != 0	1582:8:43627:43637	1047562	0	True				
ANR	1051138	EqualityExpression	offimm != 0		1047562	0		!=			
ANR	1051139	Identifier	offimm		1047562	0					
ANR	1051140	PrimaryExpression	0		1047562	1					
ANR	1051141	CompoundStatement		584:5:15427:15445	1047562	1					
ANR	1051142	IfStatement	if ( off )		1047562	0					
ANR	1051143	Condition	off	1583:9:43651:43653	1047562	0	True				
ANR	1051144	Identifier	off		1047562	0					
ANR	1051145	CompoundStatement		578:14:15242:15242	1047562	1					
ANR	1051146	ExpressionStatement	"offimm += r_num_math ( NULL , off )"	1584:6:43664:43696	1047562	0	True				
ANR	1051147	AssignmentExpression	"offimm += r_num_math ( NULL , off )"		1047562	0		+=			
ANR	1051148	Identifier	offimm		1047562	0					
ANR	1051149	CallExpression	"r_num_math ( NULL , off )"		1047562	1					
ANR	1051150	Callee	r_num_math		1047562	0					
ANR	1051151	Identifier	r_num_math		1047562	0					
ANR	1051152	ArgumentList	NULL		1047562	1					
ANR	1051153	Argument	NULL		1047562	0					
ANR	1051154	Identifier	NULL		1047562	0					
ANR	1051155	Argument	off		1047562	1					
ANR	1051156	Identifier	off		1047562	0					
ANR	1051157	IdentifierDeclStatement	"RList * otypes = r_type_get_by_offset ( TDB , offimm ) ;"	1587:5:43762:43812	1047562	1	True				
ANR	1051158	IdentifierDecl	"* otypes = r_type_get_by_offset ( TDB , offimm )"		1047562	0					
ANR	1051159	IdentifierDeclType	RList *		1047562	0					
ANR	1051160	Identifier	otypes		1047562	1					
ANR	1051161	AssignmentExpression	"* otypes = r_type_get_by_offset ( TDB , offimm )"		1047562	2		=			
ANR	1051162	Identifier	otypes		1047562	0					
ANR	1051163	CallExpression	"r_type_get_by_offset ( TDB , offimm )"		1047562	1					
ANR	1051164	Callee	r_type_get_by_offset		1047562	0					
ANR	1051165	Identifier	r_type_get_by_offset		1047562	0					
ANR	1051166	ArgumentList	TDB		1047562	1					
ANR	1051167	Argument	TDB		1047562	0					
ANR	1051168	Identifier	TDB		1047562	0					
ANR	1051169	Argument	offimm		1047562	1					
ANR	1051170	Identifier	offimm		1047562	0					
ANR	1051171	IdentifierDeclStatement	RListIter * iter ;	1588:5:43819:43834	1047562	2	True				
ANR	1051172	IdentifierDecl	* iter		1047562	0					
ANR	1051173	IdentifierDeclType	RListIter *		1047562	0					
ANR	1051174	Identifier	iter		1047562	1					
ANR	1051175	IdentifierDeclStatement	char * otype = NULL ;	1589:5:43841:43859	1047562	3	True				
ANR	1051176	IdentifierDecl	* otype = NULL		1047562	0					
ANR	1051177	IdentifierDeclType	char *		1047562	0					
ANR	1051178	Identifier	otype		1047562	1					
ANR	1051179	AssignmentExpression	* otype = NULL		1047562	2		=			
ANR	1051180	Identifier	NULL		1047562	0					
ANR	1051181	Identifier	NULL		1047562	1					
ANR	1051182	Statement	r_list_foreach	1590:5:43866:43879	1047562	4	True				
ANR	1051183	Statement	(	1590:20:43881:43881	1047562	5	True				
ANR	1051184	Statement	otypes	1590:21:43882:43887	1047562	6	True				
ANR	1051185	Statement	","	1590:27:43888:43888	1047562	7	True				
ANR	1051186	Statement	iter	1590:29:43890:43893	1047562	8	True				
ANR	1051187	Statement	","	1590:33:43894:43894	1047562	9	True				
ANR	1051188	Statement	otype	1590:35:43896:43900	1047562	10	True				
ANR	1051189	Statement	)	1590:40:43901:43901	1047562	11	True				
ANR	1051190	CompoundStatement		585:42:15489:15489	1047562	12					
ANR	1051191	IfStatement	"if ( ! strcmp ( type , otype ) )"		1047562	0					
ANR	1051192	Condition	"! strcmp ( type , otype )"	1592:10:43986:44006	1047562	0	True				
ANR	1051193	UnaryOperationExpression	"! strcmp ( type , otype )"		1047562	0					
ANR	1051194	UnaryOperator	!		1047562	0					
ANR	1051195	CallExpression	"strcmp ( type , otype )"		1047562	1					
ANR	1051196	Callee	strcmp		1047562	0					
ANR	1051197	Identifier	strcmp		1047562	0					
ANR	1051198	ArgumentList	type		1047562	1					
ANR	1051199	Argument	type		1047562	0					
ANR	1051200	Identifier	type		1047562	0					
ANR	1051201	Argument	otype		1047562	1					
ANR	1051202	Identifier	otype		1047562	0					
ANR	1051203	CompoundStatement		587:33:15595:15595	1047562	1					
ANR	1051204	ExpressionStatement	"r_type_link_offset ( TDB , type , addr )"	1594:7:44070:44106	1047562	0	True				
ANR	1051205	CallExpression	"r_type_link_offset ( TDB , type , addr )"		1047562	0					
ANR	1051206	Callee	r_type_link_offset		1047562	0					
ANR	1051207	Identifier	r_type_link_offset		1047562	0					
ANR	1051208	ArgumentList	TDB		1047562	1					
ANR	1051209	Argument	TDB		1047562	0					
ANR	1051210	Identifier	TDB		1047562	0					
ANR	1051211	Argument	type		1047562	1					
ANR	1051212	Identifier	type		1047562	0					
ANR	1051213	Argument	addr		1047562	2					
ANR	1051214	Identifier	addr		1047562	0					
ANR	1051215	ExpressionStatement	"r_anal_hint_set_offset ( core -> anal , addr , otype )"	1595:7:44115:44163	1047562	1	True				
ANR	1051216	CallExpression	"r_anal_hint_set_offset ( core -> anal , addr , otype )"		1047562	0					
ANR	1051217	Callee	r_anal_hint_set_offset		1047562	0					
ANR	1051218	Identifier	r_anal_hint_set_offset		1047562	0					
ANR	1051219	ArgumentList	core -> anal		1047562	1					
ANR	1051220	Argument	core -> anal		1047562	0					
ANR	1051221	PtrMemberAccess	core -> anal		1047562	0					
ANR	1051222	Identifier	core		1047562	0					
ANR	1051223	Identifier	anal		1047562	1					
ANR	1051224	Argument	addr		1047562	1					
ANR	1051225	Identifier	addr		1047562	0					
ANR	1051226	Argument	otype		1047562	2					
ANR	1051227	Identifier	otype		1047562	0					
ANR	1051228	BreakStatement	break ;	1596:7:44172:44177	1047562	2	True				
ANR	1051229	IfStatement	if ( ! otype )		1047562	13					
ANR	1051230	Condition	! otype	1599:9:44203:44208	1047562	0	True				
ANR	1051231	UnaryOperationExpression	! otype		1047562	0					
ANR	1051232	UnaryOperator	!		1047562	0					
ANR	1051233	Identifier	otype		1047562	1					
ANR	1051234	CompoundStatement		594:17:15797:15797	1047562	1					
ANR	1051235	ExpressionStatement	"eprintf ( ""wrong type for opcode offset\\n"" )"	1600:6:44219:44261	1047562	0	True				
ANR	1051236	CallExpression	"eprintf ( ""wrong type for opcode offset\\n"" )"		1047562	0					
ANR	1051237	Callee	eprintf		1047562	0					
ANR	1051238	Identifier	eprintf		1047562	0					
ANR	1051239	ArgumentList	"""wrong type for opcode offset\\n"""		1047562	1					
ANR	1051240	Argument	"""wrong type for opcode offset\\n"""		1047562	0					
ANR	1051241	PrimaryExpression	"""wrong type for opcode offset\\n"""		1047562	0					
ANR	1051242	ExpressionStatement	r_list_free ( otypes )	1602:5:44275:44295	1047562	14	True				
ANR	1051243	CallExpression	r_list_free ( otypes )		1047562	0					
ANR	1051244	Callee	r_list_free		1047562	0					
ANR	1051245	Identifier	r_list_free		1047562	0					
ANR	1051246	ArgumentList	otypes		1047562	1					
ANR	1051247	Argument	otypes		1047562	0					
ANR	1051248	Identifier	otypes		1047562	0					
ANR	1051249	ExpressionStatement	r_anal_op_fini ( & op )	1605:3:44311:44331	1047562	18	True				
ANR	1051250	CallExpression	r_anal_op_fini ( & op )		1047562	0					
ANR	1051251	Callee	r_anal_op_fini		1047562	0					
ANR	1051252	Identifier	r_anal_op_fini		1047562	0					
ANR	1051253	ArgumentList	& op		1047562	1					
ANR	1051254	Argument	& op		1047562	0					
ANR	1051255	UnaryOperationExpression	& op		1047562	0					
ANR	1051256	UnaryOperator	&		1047562	0					
ANR	1051257	Identifier	op		1047562	1					
ANR	1051258	ExpressionStatement	free ( type )	1606:3:44336:44347	1047562	19	True				
ANR	1051259	CallExpression	free ( type )		1047562	0					
ANR	1051260	Callee	free		1047562	0					
ANR	1051261	Identifier	free		1047562	0					
ANR	1051262	ArgumentList	type		1047562	1					
ANR	1051263	Argument	type		1047562	0					
ANR	1051264	Identifier	type		1047562	0					
ANR	1051265	BreakStatement	break ;	1608:2:44355:44360	1047562	9	True				
ANR	1051266	Label	case '?' :	1609:2:44364:44372	1047562	10	True				
ANR	1051267	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ta )"	1610:3:44377:44412	1047562	11	True				
ANR	1051268	CallExpression	"r_core_cmd_help ( core , help_msg_ta )"		1047562	0					
ANR	1051269	Callee	r_core_cmd_help		1047562	0					
ANR	1051270	Identifier	r_core_cmd_help		1047562	0					
ANR	1051271	ArgumentList	core		1047562	1					
ANR	1051272	Argument	core		1047562	0					
ANR	1051273	Identifier	core		1047562	0					
ANR	1051274	Argument	help_msg_ta		1047562	1					
ANR	1051275	Identifier	help_msg_ta		1047562	0					
ANR	1051276	BreakStatement	break ;	1611:3:44417:44422	1047562	12	True				
ANR	1051277	BreakStatement	break ;	1613:2:44430:44435	1047562	38	True				
ANR	1051278	Label	case 'l' :	1615:1:44473:44481	1047562	39	True				
ANR	1051279	SwitchStatement	switch ( input [ 1 ] )		1047562	40					
ANR	1051280	Condition	input [ 1 ]	1616:10:44501:44508	1047562	0	True				
ANR	1051281	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1051282	Identifier	input		1047562	0					
ANR	1051283	PrimaryExpression	1		1047562	1					
ANR	1051284	CompoundStatement		611:20:16097:16097	1047562	1					
ANR	1051285	Label	case '?' :	1617:2:44515:44523	1047562	0	True				
ANR	1051286	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tl )"	1618:3:44528:44563	1047562	1	True				
ANR	1051287	CallExpression	"r_core_cmd_help ( core , help_msg_tl )"		1047562	0					
ANR	1051288	Callee	r_core_cmd_help		1047562	0					
ANR	1051289	Identifier	r_core_cmd_help		1047562	0					
ANR	1051290	ArgumentList	core		1047562	1					
ANR	1051291	Argument	core		1047562	0					
ANR	1051292	Identifier	core		1047562	0					
ANR	1051293	Argument	help_msg_tl		1047562	1					
ANR	1051294	Identifier	help_msg_tl		1047562	0					
ANR	1051295	BreakStatement	break ;	1619:3:44568:44573	1047562	2	True				
ANR	1051296	Label	case ' ' :	1620:2:44577:44585	1047562	3	True				
ANR	1051297	CompoundStatement		634:3:16532:16566	1047562	4					
ANR	1051298	IdentifierDeclStatement	char * type = strdup ( input + 2 ) ;	1621:3:44592:44623	1047562	0	True				
ANR	1051299	IdentifierDecl	* type = strdup ( input + 2 )		1047562	0					
ANR	1051300	IdentifierDeclType	char *		1047562	0					
ANR	1051301	Identifier	type		1047562	1					
ANR	1051302	AssignmentExpression	* type = strdup ( input + 2 )		1047562	2		=			
ANR	1051303	Identifier	type		1047562	0					
ANR	1051304	CallExpression	strdup ( input + 2 )		1047562	1					
ANR	1051305	Callee	strdup		1047562	0					
ANR	1051306	Identifier	strdup		1047562	0					
ANR	1051307	ArgumentList	input + 2		1047562	1					
ANR	1051308	Argument	input + 2		1047562	0					
ANR	1051309	AdditiveExpression	input + 2		1047562	0		+			
ANR	1051310	Identifier	input		1047562	0					
ANR	1051311	PrimaryExpression	2		1047562	1					
ANR	1051312	IdentifierDeclStatement	"char * ptr = strchr ( type , '=' ) ;"	1622:3:44628:44658	1047562	1	True				
ANR	1051313	IdentifierDecl	"* ptr = strchr ( type , '=' )"		1047562	0					
ANR	1051314	IdentifierDeclType	char *		1047562	0					
ANR	1051315	Identifier	ptr		1047562	1					
ANR	1051316	AssignmentExpression	"* ptr = strchr ( type , '=' )"		1047562	2		=			
ANR	1051317	Identifier	ptr		1047562	0					
ANR	1051318	CallExpression	"strchr ( type , '=' )"		1047562	1					
ANR	1051319	Callee	strchr		1047562	0					
ANR	1051320	Identifier	strchr		1047562	0					
ANR	1051321	ArgumentList	type		1047562	1					
ANR	1051322	Argument	type		1047562	0					
ANR	1051323	Identifier	type		1047562	0					
ANR	1051324	Argument	'='		1047562	1					
ANR	1051325	PrimaryExpression	'='		1047562	0					
ANR	1051326	IdentifierDeclStatement	ut64 addr ;	1623:3:44663:44672	1047562	2	True				
ANR	1051327	IdentifierDecl	addr		1047562	0					
ANR	1051328	IdentifierDeclType	ut64		1047562	0					
ANR	1051329	Identifier	addr		1047562	1					
ANR	1051330	IfStatement	if ( ptr )		1047562	3					
ANR	1051331	Condition	ptr	1625:7:44682:44684	1047562	0	True				
ANR	1051332	Identifier	ptr		1047562	0					
ANR	1051333	CompoundStatement		620:12:16273:16273	1047562	1					
ANR	1051334	ExpressionStatement	* ptr ++ = 0	1626:4:44693:44703	1047562	0	True				
ANR	1051335	AssignmentExpression	* ptr ++ = 0		1047562	0		=			
ANR	1051336	UnaryOperationExpression	* ptr ++		1047562	0					
ANR	1051337	UnaryOperator	*		1047562	0					
ANR	1051338	PostIncDecOperationExpression	ptr ++		1047562	1					
ANR	1051339	Identifier	ptr		1047562	0					
ANR	1051340	IncDec	++		1047562	1					
ANR	1051341	PrimaryExpression	0		1047562	1					
ANR	1051342	ExpressionStatement	r_str_trim ( ptr )	1627:4:44709:44725	1047562	1	True				
ANR	1051343	CallExpression	r_str_trim ( ptr )		1047562	0					
ANR	1051344	Callee	r_str_trim		1047562	0					
ANR	1051345	Identifier	r_str_trim		1047562	0					
ANR	1051346	ArgumentList	ptr		1047562	1					
ANR	1051347	Argument	ptr		1047562	0					
ANR	1051348	Identifier	ptr		1047562	0					
ANR	1051349	IfStatement	if ( ptr && * ptr )		1047562	2					
ANR	1051350	Condition	ptr && * ptr	1628:8:44735:44745	1047562	0	True				
ANR	1051351	AndExpression	ptr && * ptr		1047562	0		&&			
ANR	1051352	Identifier	ptr		1047562	0					
ANR	1051353	UnaryOperationExpression	* ptr		1047562	1					
ANR	1051354	UnaryOperator	*		1047562	0					
ANR	1051355	Identifier	ptr		1047562	1					
ANR	1051356	CompoundStatement		623:21:16334:16334	1047562	1					
ANR	1051357	ExpressionStatement	"addr = r_num_math ( core -> num , ptr )"	1629:5:44755:44789	1047562	0	True				
ANR	1051358	AssignmentExpression	"addr = r_num_math ( core -> num , ptr )"		1047562	0		=			
ANR	1051359	Identifier	addr		1047562	0					
ANR	1051360	CallExpression	"r_num_math ( core -> num , ptr )"		1047562	1					
ANR	1051361	Callee	r_num_math		1047562	0					
ANR	1051362	Identifier	r_num_math		1047562	0					
ANR	1051363	ArgumentList	core -> num		1047562	1					
ANR	1051364	Argument	core -> num		1047562	0					
ANR	1051365	PtrMemberAccess	core -> num		1047562	0					
ANR	1051366	Identifier	core		1047562	0					
ANR	1051367	Identifier	num		1047562	1					
ANR	1051368	Argument	ptr		1047562	1					
ANR	1051369	Identifier	ptr		1047562	0					
ANR	1051370	ElseStatement	else		1047562	0					
ANR	1051371	CompoundStatement		625:11:16388:16388	1047562	0					
ANR	1051372	ExpressionStatement	"eprintf ( ""address is unvalid\\n"" )"	1631:5:44809:44841	1047562	0	True				
ANR	1051373	CallExpression	"eprintf ( ""address is unvalid\\n"" )"		1047562	0					
ANR	1051374	Callee	eprintf		1047562	0					
ANR	1051375	Identifier	eprintf		1047562	0					
ANR	1051376	ArgumentList	"""address is unvalid\\n"""		1047562	1					
ANR	1051377	Argument	"""address is unvalid\\n"""		1047562	0					
ANR	1051378	PrimaryExpression	"""address is unvalid\\n"""		1047562	0					
ANR	1051379	ExpressionStatement	free ( type )	1632:5:44848:44859	1047562	1	True				
ANR	1051380	CallExpression	free ( type )		1047562	0					
ANR	1051381	Callee	free		1047562	0					
ANR	1051382	Identifier	free		1047562	0					
ANR	1051383	ArgumentList	type		1047562	1					
ANR	1051384	Argument	type		1047562	0					
ANR	1051385	Identifier	type		1047562	0					
ANR	1051386	BreakStatement	break ;	1633:5:44866:44871	1047562	2	True				
ANR	1051387	ElseStatement	else		1047562	0					
ANR	1051388	CompoundStatement		630:10:16475:16475	1047562	0					
ANR	1051389	ExpressionStatement	addr = core -> offset	1636:4:44895:44914	1047562	0	True				
ANR	1051390	AssignmentExpression	addr = core -> offset		1047562	0		=			
ANR	1051391	Identifier	addr		1047562	0					
ANR	1051392	PtrMemberAccess	core -> offset		1047562	1					
ANR	1051393	Identifier	core		1047562	0					
ANR	1051394	Identifier	offset		1047562	1					
ANR	1051395	ExpressionStatement	r_str_trim ( type )	1638:3:44924:44941	1047562	4	True				
ANR	1051396	CallExpression	r_str_trim ( type )		1047562	0					
ANR	1051397	Callee	r_str_trim		1047562	0					
ANR	1051398	Identifier	r_str_trim		1047562	0					
ANR	1051399	ArgumentList	type		1047562	1					
ANR	1051400	Argument	type		1047562	0					
ANR	1051401	Identifier	type		1047562	0					
ANR	1051402	IdentifierDeclStatement	"char * tmp = sdb_get ( TDB , type , 0 ) ;"	1639:3:44946:44980	1047562	5	True				
ANR	1051403	IdentifierDecl	"* tmp = sdb_get ( TDB , type , 0 )"		1047562	0					
ANR	1051404	IdentifierDeclType	char *		1047562	0					
ANR	1051405	Identifier	tmp		1047562	1					
ANR	1051406	AssignmentExpression	"* tmp = sdb_get ( TDB , type , 0 )"		1047562	2		=			
ANR	1051407	Identifier	tmp		1047562	0					
ANR	1051408	CallExpression	"sdb_get ( TDB , type , 0 )"		1047562	1					
ANR	1051409	Callee	sdb_get		1047562	0					
ANR	1051410	Identifier	sdb_get		1047562	0					
ANR	1051411	ArgumentList	TDB		1047562	1					
ANR	1051412	Argument	TDB		1047562	0					
ANR	1051413	Identifier	TDB		1047562	0					
ANR	1051414	Argument	type		1047562	1					
ANR	1051415	Identifier	type		1047562	0					
ANR	1051416	Argument	0		1047562	2					
ANR	1051417	PrimaryExpression	0		1047562	0					
ANR	1051418	IfStatement	if ( tmp && * tmp )		1047562	6					
ANR	1051419	Condition	tmp && * tmp	1640:7:44989:44999	1047562	0	True				
ANR	1051420	AndExpression	tmp && * tmp		1047562	0		&&			
ANR	1051421	Identifier	tmp		1047562	0					
ANR	1051422	UnaryOperationExpression	* tmp		1047562	1					
ANR	1051423	UnaryOperator	*		1047562	0					
ANR	1051424	Identifier	tmp		1047562	1					
ANR	1051425	CompoundStatement		637:4:16633:16701	1047562	1					
ANR	1051426	ExpressionStatement	"r_type_set_link ( TDB , type , addr )"	1641:4:45008:45041	1047562	0	True				
ANR	1051427	CallExpression	"r_type_set_link ( TDB , type , addr )"		1047562	0					
ANR	1051428	Callee	r_type_set_link		1047562	0					
ANR	1051429	Identifier	r_type_set_link		1047562	0					
ANR	1051430	ArgumentList	TDB		1047562	1					
ANR	1051431	Argument	TDB		1047562	0					
ANR	1051432	Identifier	TDB		1047562	0					
ANR	1051433	Argument	type		1047562	1					
ANR	1051434	Identifier	type		1047562	0					
ANR	1051435	Argument	addr		1047562	2					
ANR	1051436	Identifier	addr		1047562	0					
ANR	1051437	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	1642:4:45047:45115	1047562	1	True				
ANR	1051438	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1047562	0					
ANR	1051439	IdentifierDeclType	RAnalFunction *		1047562	0					
ANR	1051440	Identifier	fcn		1047562	1					
ANR	1051441	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1047562	2		=			
ANR	1051442	Identifier	fcn		1047562	0					
ANR	1051443	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1047562	1					
ANR	1051444	Callee	r_anal_get_fcn_in		1047562	0					
ANR	1051445	Identifier	r_anal_get_fcn_in		1047562	0					
ANR	1051446	ArgumentList	core -> anal		1047562	1					
ANR	1051447	Argument	core -> anal		1047562	0					
ANR	1051448	PtrMemberAccess	core -> anal		1047562	0					
ANR	1051449	Identifier	core		1047562	0					
ANR	1051450	Identifier	anal		1047562	1					
ANR	1051451	Argument	core -> offset		1047562	1					
ANR	1051452	PtrMemberAccess	core -> offset		1047562	0					
ANR	1051453	Identifier	core		1047562	0					
ANR	1051454	Identifier	offset		1047562	1					
ANR	1051455	Argument	0		1047562	2					
ANR	1051456	PrimaryExpression	0		1047562	0					
ANR	1051457	IfStatement	if ( fcn )		1047562	2					
ANR	1051458	Condition	fcn	1643:8:45125:45127	1047562	0	True				
ANR	1051459	Identifier	fcn		1047562	0					
ANR	1051460	CompoundStatement		638:13:16716:16716	1047562	1					
ANR	1051461	ExpressionStatement	"link_struct_offset ( core , fcn )"	1644:5:45137:45167	1047562	0	True				
ANR	1051462	CallExpression	"link_struct_offset ( core , fcn )"		1047562	0					
ANR	1051463	Callee	link_struct_offset		1047562	0					
ANR	1051464	Identifier	link_struct_offset		1047562	0					
ANR	1051465	ArgumentList	core		1047562	1					
ANR	1051466	Argument	core		1047562	0					
ANR	1051467	Identifier	core		1047562	0					
ANR	1051468	Argument	fcn		1047562	1					
ANR	1051469	Identifier	fcn		1047562	0					
ANR	1051470	ExpressionStatement	free ( tmp )	1646:4:45179:45189	1047562	3	True				
ANR	1051471	CallExpression	free ( tmp )		1047562	0					
ANR	1051472	Callee	free		1047562	0					
ANR	1051473	Identifier	free		1047562	0					
ANR	1051474	ArgumentList	tmp		1047562	1					
ANR	1051475	Argument	tmp		1047562	0					
ANR	1051476	Identifier	tmp		1047562	0					
ANR	1051477	ElseStatement	else		1047562	0					
ANR	1051478	CompoundStatement		642:10:16787:16787	1047562	0					
ANR	1051479	ExpressionStatement	"eprintf ( ""unknown type %s\\n"" , type )"	1648:4:45207:45242	1047562	0	True				
ANR	1051480	CallExpression	"eprintf ( ""unknown type %s\\n"" , type )"		1047562	0					
ANR	1051481	Callee	eprintf		1047562	0					
ANR	1051482	Identifier	eprintf		1047562	0					
ANR	1051483	ArgumentList	"""unknown type %s\\n"""		1047562	1					
ANR	1051484	Argument	"""unknown type %s\\n"""		1047562	0					
ANR	1051485	PrimaryExpression	"""unknown type %s\\n"""		1047562	0					
ANR	1051486	Argument	type		1047562	1					
ANR	1051487	Identifier	type		1047562	0					
ANR	1051488	ExpressionStatement	free ( type )	1650:3:45252:45263	1047562	7	True				
ANR	1051489	CallExpression	free ( type )		1047562	0					
ANR	1051490	Callee	free		1047562	0					
ANR	1051491	Identifier	free		1047562	0					
ANR	1051492	ArgumentList	type		1047562	1					
ANR	1051493	Argument	type		1047562	0					
ANR	1051494	Identifier	type		1047562	0					
ANR	1051495	BreakStatement	break ;	1651:3:45268:45273	1047562	8	True				
ANR	1051496	Label	case 's' :	1653:2:45281:45289	1047562	5	True				
ANR	1051497	CompoundStatement		652:3:17023:17071	1047562	6					
ANR	1051498	IdentifierDeclStatement	char * ptr = r_str_trim_dup ( input + 2 ) ;	1654:3:45296:45334	1047562	0	True				
ANR	1051499	IdentifierDecl	* ptr = r_str_trim_dup ( input + 2 )		1047562	0					
ANR	1051500	IdentifierDeclType	char *		1047562	0					
ANR	1051501	Identifier	ptr		1047562	1					
ANR	1051502	AssignmentExpression	* ptr = r_str_trim_dup ( input + 2 )		1047562	2		=			
ANR	1051503	Identifier	ptr		1047562	0					
ANR	1051504	CallExpression	r_str_trim_dup ( input + 2 )		1047562	1					
ANR	1051505	Callee	r_str_trim_dup		1047562	0					
ANR	1051506	Identifier	r_str_trim_dup		1047562	0					
ANR	1051507	ArgumentList	input + 2		1047562	1					
ANR	1051508	Argument	input + 2		1047562	0					
ANR	1051509	AdditiveExpression	input + 2		1047562	0		+			
ANR	1051510	Identifier	input		1047562	0					
ANR	1051511	PrimaryExpression	2		1047562	1					
ANR	1051512	IdentifierDeclStatement	"ut64 addr = r_num_math ( NULL , ptr ) ;"	1655:3:45339:45373	1047562	1	True				
ANR	1051513	IdentifierDecl	"addr = r_num_math ( NULL , ptr )"		1047562	0					
ANR	1051514	IdentifierDeclType	ut64		1047562	0					
ANR	1051515	Identifier	addr		1047562	1					
ANR	1051516	AssignmentExpression	"addr = r_num_math ( NULL , ptr )"		1047562	2		=			
ANR	1051517	Identifier	addr		1047562	0					
ANR	1051518	CallExpression	"r_num_math ( NULL , ptr )"		1047562	1					
ANR	1051519	Callee	r_num_math		1047562	0					
ANR	1051520	Identifier	r_num_math		1047562	0					
ANR	1051521	ArgumentList	NULL		1047562	1					
ANR	1051522	Argument	NULL		1047562	0					
ANR	1051523	Identifier	NULL		1047562	0					
ANR	1051524	Argument	ptr		1047562	1					
ANR	1051525	Identifier	ptr		1047562	0					
ANR	1051526	Statement	const	1656:3:45378:45382	1047562	2	True				
ANR	1051527	Statement	char	1656:9:45384:45387	1047562	3	True				
ANR	1051528	Statement	*	1656:14:45389:45389	1047562	4	True				
ANR	1051529	Statement	query	1656:15:45390:45394	1047562	5	True				
ANR	1051530	Statement	=	1656:21:45396:45396	1047562	6	True				
ANR	1051531	Statement	sdb_fmt	1656:23:45398:45404	1047562	7	True				
ANR	1051532	Statement	(	1656:31:45406:45406	1047562	8	True				
ANR	1051533	Statement	"""link.%08"""	1656:32:45407:45416	1047562	9	True				
ANR	1051534	Statement	PFMT64x	1656:43:45418:45424	1047562	10	True				
ANR	1051535	Statement	","	1656:50:45425:45425	1047562	11	True				
ANR	1051536	Statement	addr	1656:52:45427:45430	1047562	12	True				
ANR	1051537	Statement	)	1656:56:45431:45431	1047562	13	True				
ANR	1051538	ExpressionStatement		1656:57:45432:45432	1047562	14	True				
ANR	1051539	IdentifierDeclStatement	"const char * link = sdb_const_get ( TDB , query , 0 ) ;"	1657:3:45437:45485	1047562	15	True				
ANR	1051540	IdentifierDecl	"* link = sdb_const_get ( TDB , query , 0 )"		1047562	0					
ANR	1051541	IdentifierDeclType	const char *		1047562	0					
ANR	1051542	Identifier	link		1047562	1					
ANR	1051543	AssignmentExpression	"* link = sdb_const_get ( TDB , query , 0 )"		1047562	2		=			
ANR	1051544	Identifier	link		1047562	0					
ANR	1051545	CallExpression	"sdb_const_get ( TDB , query , 0 )"		1047562	1					
ANR	1051546	Callee	sdb_const_get		1047562	0					
ANR	1051547	Identifier	sdb_const_get		1047562	0					
ANR	1051548	ArgumentList	TDB		1047562	1					
ANR	1051549	Argument	TDB		1047562	0					
ANR	1051550	Identifier	TDB		1047562	0					
ANR	1051551	Argument	query		1047562	1					
ANR	1051552	Identifier	query		1047562	0					
ANR	1051553	Argument	0		1047562	2					
ANR	1051554	PrimaryExpression	0		1047562	0					
ANR	1051555	IfStatement	if ( link )		1047562	16					
ANR	1051556	Condition	link	1658:7:45494:45497	1047562	0	True				
ANR	1051557	Identifier	link		1047562	0					
ANR	1051558	CompoundStatement		653:13:17086:17086	1047562	1					
ANR	1051559	ExpressionStatement	"print_link_readable_cb ( core , query , link )"	1659:4:45506:45548	1047562	0	True				
ANR	1051560	CallExpression	"print_link_readable_cb ( core , query , link )"		1047562	0					
ANR	1051561	Callee	print_link_readable_cb		1047562	0					
ANR	1051562	Identifier	print_link_readable_cb		1047562	0					
ANR	1051563	ArgumentList	core		1047562	1					
ANR	1051564	Argument	core		1047562	0					
ANR	1051565	Identifier	core		1047562	0					
ANR	1051566	Argument	query		1047562	1					
ANR	1051567	Identifier	query		1047562	0					
ANR	1051568	Argument	link		1047562	2					
ANR	1051569	Identifier	link		1047562	0					
ANR	1051570	ExpressionStatement	free ( ptr )	1661:3:45558:45568	1047562	17	True				
ANR	1051571	CallExpression	free ( ptr )		1047562	0					
ANR	1051572	Callee	free		1047562	0					
ANR	1051573	Identifier	free		1047562	0					
ANR	1051574	ArgumentList	ptr		1047562	1					
ANR	1051575	Argument	ptr		1047562	0					
ANR	1051576	Identifier	ptr		1047562	0					
ANR	1051577	BreakStatement	break ;	1662:3:45573:45578	1047562	18	True				
ANR	1051578	Label	case '-' :	1664:2:45586:45594	1047562	7	True				
ANR	1051579	SwitchStatement	switch ( input [ 2 ] )		1047562	8					
ANR	1051580	Condition	input [ 2 ]	1665:11:45607:45614	1047562	0	True				
ANR	1051581	ArrayIndexing	input [ 2 ]		1047562	0					
ANR	1051582	Identifier	input		1047562	0					
ANR	1051583	PrimaryExpression	2		1047562	1					
ANR	1051584	CompoundStatement		660:21:17203:17203	1047562	1					
ANR	1051585	Label	case '*' :	1666:3:45622:45630	1047562	0	True				
ANR	1051586	ExpressionStatement	"sdb_foreach ( TDB , sdbdeletelink , core )"	1667:4:45636:45674	1047562	1	True				
ANR	1051587	CallExpression	"sdb_foreach ( TDB , sdbdeletelink , core )"		1047562	0					
ANR	1051588	Callee	sdb_foreach		1047562	0					
ANR	1051589	Identifier	sdb_foreach		1047562	0					
ANR	1051590	ArgumentList	TDB		1047562	1					
ANR	1051591	Argument	TDB		1047562	0					
ANR	1051592	Identifier	TDB		1047562	0					
ANR	1051593	Argument	sdbdeletelink		1047562	1					
ANR	1051594	Identifier	sdbdeletelink		1047562	0					
ANR	1051595	Argument	core		1047562	2					
ANR	1051596	Identifier	core		1047562	0					
ANR	1051597	BreakStatement	break ;	1668:4:45680:45685	1047562	2	True				
ANR	1051598	Label	case ' ' :	1669:3:45690:45698	1047562	3	True				
ANR	1051599	CompoundStatement		666:4:17325:17364	1047562	4					
ANR	1051600	IdentifierDeclStatement	const char * ptr = input + 3 ;	1670:4:45706:45733	1047562	0	True				
ANR	1051601	IdentifierDecl	* ptr = input + 3		1047562	0					
ANR	1051602	IdentifierDeclType	const char *		1047562	0					
ANR	1051603	Identifier	ptr		1047562	1					
ANR	1051604	AssignmentExpression	* ptr = input + 3		1047562	2		=			
ANR	1051605	Identifier	ptr		1047562	0					
ANR	1051606	AdditiveExpression	input + 3		1047562	1		+			
ANR	1051607	Identifier	input		1047562	0					
ANR	1051608	PrimaryExpression	3		1047562	1					
ANR	1051609	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , ptr ) ;"	1671:4:45739:45778	1047562	1	True				
ANR	1051610	IdentifierDecl	"addr = r_num_math ( core -> num , ptr )"		1047562	0					
ANR	1051611	IdentifierDeclType	ut64		1047562	0					
ANR	1051612	Identifier	addr		1047562	1					
ANR	1051613	AssignmentExpression	"addr = r_num_math ( core -> num , ptr )"		1047562	2		=			
ANR	1051614	Identifier	addr		1047562	0					
ANR	1051615	CallExpression	"r_num_math ( core -> num , ptr )"		1047562	1					
ANR	1051616	Callee	r_num_math		1047562	0					
ANR	1051617	Identifier	r_num_math		1047562	0					
ANR	1051618	ArgumentList	core -> num		1047562	1					
ANR	1051619	Argument	core -> num		1047562	0					
ANR	1051620	PtrMemberAccess	core -> num		1047562	0					
ANR	1051621	Identifier	core		1047562	0					
ANR	1051622	Identifier	num		1047562	1					
ANR	1051623	Argument	ptr		1047562	1					
ANR	1051624	Identifier	ptr		1047562	0					
ANR	1051625	ExpressionStatement	"r_type_unlink ( TDB , addr )"	1672:4:45784:45809	1047562	2	True				
ANR	1051626	CallExpression	"r_type_unlink ( TDB , addr )"		1047562	0					
ANR	1051627	Callee	r_type_unlink		1047562	0					
ANR	1051628	Identifier	r_type_unlink		1047562	0					
ANR	1051629	ArgumentList	TDB		1047562	1					
ANR	1051630	Argument	TDB		1047562	0					
ANR	1051631	Identifier	TDB		1047562	0					
ANR	1051632	Argument	addr		1047562	1					
ANR	1051633	Identifier	addr		1047562	0					
ANR	1051634	BreakStatement	break ;	1673:4:45815:45820	1047562	3	True				
ANR	1051635	BreakStatement	break ;	1676:3:45835:45840	1047562	9	True				
ANR	1051636	Label	case '*' :	1677:2:45844:45852	1047562	10	True				
ANR	1051637	ExpressionStatement	"print_keys ( TDB , core , stdiflink , print_link_r_cb , false )"	1678:3:45857:45914	1047562	11	True				
ANR	1051638	CallExpression	"print_keys ( TDB , core , stdiflink , print_link_r_cb , false )"		1047562	0					
ANR	1051639	Callee	print_keys		1047562	0					
ANR	1051640	Identifier	print_keys		1047562	0					
ANR	1051641	ArgumentList	TDB		1047562	1					
ANR	1051642	Argument	TDB		1047562	0					
ANR	1051643	Identifier	TDB		1047562	0					
ANR	1051644	Argument	core		1047562	1					
ANR	1051645	Identifier	core		1047562	0					
ANR	1051646	Argument	stdiflink		1047562	2					
ANR	1051647	Identifier	stdiflink		1047562	0					
ANR	1051648	Argument	print_link_r_cb		1047562	3					
ANR	1051649	Identifier	print_link_r_cb		1047562	0					
ANR	1051650	Argument	false		1047562	4					
ANR	1051651	Identifier	false		1047562	0					
ANR	1051652	BreakStatement	break ;	1679:3:45919:45924	1047562	12	True				
ANR	1051653	Label	case 'l' :	1680:2:45928:45936	1047562	13	True				
ANR	1051654	SwitchStatement	switch ( input [ 2 ] )		1047562	14					
ANR	1051655	Condition	input [ 2 ]	1681:11:45949:45956	1047562	0	True				
ANR	1051656	ArrayIndexing	input [ 2 ]		1047562	0					
ANR	1051657	Identifier	input		1047562	0					
ANR	1051658	PrimaryExpression	2		1047562	1					
ANR	1051659	CompoundStatement		676:21:17545:17545	1047562	1					
ANR	1051660	Label	case 'j' :	1682:3:45964:45972	1047562	0	True				
ANR	1051661	ExpressionStatement	"print_keys ( TDB , core , stdiflink , print_link_readable_json_cb , true )"	1683:4:45978:46046	1047562	1	True				
ANR	1051662	CallExpression	"print_keys ( TDB , core , stdiflink , print_link_readable_json_cb , true )"		1047562	0					
ANR	1051663	Callee	print_keys		1047562	0					
ANR	1051664	Identifier	print_keys		1047562	0					
ANR	1051665	ArgumentList	TDB		1047562	1					
ANR	1051666	Argument	TDB		1047562	0					
ANR	1051667	Identifier	TDB		1047562	0					
ANR	1051668	Argument	core		1047562	1					
ANR	1051669	Identifier	core		1047562	0					
ANR	1051670	Argument	stdiflink		1047562	2					
ANR	1051671	Identifier	stdiflink		1047562	0					
ANR	1051672	Argument	print_link_readable_json_cb		1047562	3					
ANR	1051673	Identifier	print_link_readable_json_cb		1047562	0					
ANR	1051674	Argument	true		1047562	4					
ANR	1051675	Identifier	true		1047562	0					
ANR	1051676	BreakStatement	break ;	1684:4:46052:46057	1047562	2	True				
ANR	1051677	Label	default :	1685:3:46062:46069	1047562	3	True				
ANR	1051678	Identifier	default		1047562	0					
ANR	1051679	ExpressionStatement	"print_keys ( TDB , core , stdiflink , print_link_readable_cb , false )"	1686:4:46075:46139	1047562	4	True				
ANR	1051680	CallExpression	"print_keys ( TDB , core , stdiflink , print_link_readable_cb , false )"		1047562	0					
ANR	1051681	Callee	print_keys		1047562	0					
ANR	1051682	Identifier	print_keys		1047562	0					
ANR	1051683	ArgumentList	TDB		1047562	1					
ANR	1051684	Argument	TDB		1047562	0					
ANR	1051685	Identifier	TDB		1047562	0					
ANR	1051686	Argument	core		1047562	1					
ANR	1051687	Identifier	core		1047562	0					
ANR	1051688	Argument	stdiflink		1047562	2					
ANR	1051689	Identifier	stdiflink		1047562	0					
ANR	1051690	Argument	print_link_readable_cb		1047562	3					
ANR	1051691	Identifier	print_link_readable_cb		1047562	0					
ANR	1051692	Argument	false		1047562	4					
ANR	1051693	Identifier	false		1047562	0					
ANR	1051694	BreakStatement	break ;	1687:4:46145:46150	1047562	5	True				
ANR	1051695	BreakStatement	break ;	1689:3:46160:46165	1047562	15	True				
ANR	1051696	Label	case 'j' :	1690:2:46169:46177	1047562	16	True				
ANR	1051697	ExpressionStatement	"print_keys ( TDB , core , stdiflink , print_link_json_cb , true )"	1691:3:46182:46241	1047562	17	True				
ANR	1051698	CallExpression	"print_keys ( TDB , core , stdiflink , print_link_json_cb , true )"		1047562	0					
ANR	1051699	Callee	print_keys		1047562	0					
ANR	1051700	Identifier	print_keys		1047562	0					
ANR	1051701	ArgumentList	TDB		1047562	1					
ANR	1051702	Argument	TDB		1047562	0					
ANR	1051703	Identifier	TDB		1047562	0					
ANR	1051704	Argument	core		1047562	1					
ANR	1051705	Identifier	core		1047562	0					
ANR	1051706	Argument	stdiflink		1047562	2					
ANR	1051707	Identifier	stdiflink		1047562	0					
ANR	1051708	Argument	print_link_json_cb		1047562	3					
ANR	1051709	Identifier	print_link_json_cb		1047562	0					
ANR	1051710	Argument	true		1047562	4					
ANR	1051711	Identifier	true		1047562	0					
ANR	1051712	BreakStatement	break ;	1692:3:46246:46251	1047562	18	True				
ANR	1051713	Label	case '\\0' :	1693:2:46255:46264	1047562	19	True				
ANR	1051714	ExpressionStatement	"print_keys ( TDB , core , stdiflink , print_link_cb , false )"	1694:3:46269:46324	1047562	20	True				
ANR	1051715	CallExpression	"print_keys ( TDB , core , stdiflink , print_link_cb , false )"		1047562	0					
ANR	1051716	Callee	print_keys		1047562	0					
ANR	1051717	Identifier	print_keys		1047562	0					
ANR	1051718	ArgumentList	TDB		1047562	1					
ANR	1051719	Argument	TDB		1047562	0					
ANR	1051720	Identifier	TDB		1047562	0					
ANR	1051721	Argument	core		1047562	1					
ANR	1051722	Identifier	core		1047562	0					
ANR	1051723	Argument	stdiflink		1047562	2					
ANR	1051724	Identifier	stdiflink		1047562	0					
ANR	1051725	Argument	print_link_cb		1047562	3					
ANR	1051726	Identifier	print_link_cb		1047562	0					
ANR	1051727	Argument	false		1047562	4					
ANR	1051728	Identifier	false		1047562	0					
ANR	1051729	BreakStatement	break ;	1695:3:46329:46334	1047562	21	True				
ANR	1051730	BreakStatement	break ;	1697:2:46342:46347	1047562	41	True				
ANR	1051731	Label	case 'p' :	1698:1:46350:46358	1047562	42	True				
ANR	1051732	IfStatement	if ( input [ 1 ] == '?' )		1047562	43					
ANR	1051733	Condition	input [ 1 ] == '?'	1699:6:46375:46389	1047562	0	True				
ANR	1051734	EqualityExpression	input [ 1 ] == '?'		1047562	0		==			
ANR	1051735	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1051736	Identifier	input		1047562	0					
ANR	1051737	PrimaryExpression	1		1047562	1					
ANR	1051738	PrimaryExpression	'?'		1047562	1					
ANR	1051739	CompoundStatement		694:23:17978:17978	1047562	1					
ANR	1051740	ExpressionStatement	"r_core_cmd0 ( core , ""t?~tp\\n"" )"	1700:3:46406:46435	1047562	0	True				
ANR	1051741	CallExpression	"r_core_cmd0 ( core , ""t?~tp\\n"" )"		1047562	0					
ANR	1051742	Callee	r_core_cmd0		1047562	0					
ANR	1051743	Identifier	r_core_cmd0		1047562	0					
ANR	1051744	ArgumentList	core		1047562	1					
ANR	1051745	Argument	core		1047562	0					
ANR	1051746	Identifier	core		1047562	0					
ANR	1051747	Argument	"""t?~tp\\n"""		1047562	1					
ANR	1051748	PrimaryExpression	"""t?~tp\\n"""		1047562	0					
ANR	1051749	ElseStatement	else		1047562	0					
ANR	1051750	CompoundStatement		703:3:18162:18195	1047562	0					
ANR	1051751	IdentifierDeclStatement	char * tmp = strdup ( input ) ;	1702:3:46459:46485	1047562	0	True				
ANR	1051752	IdentifierDecl	* tmp = strdup ( input )		1047562	0					
ANR	1051753	IdentifierDeclType	char *		1047562	0					
ANR	1051754	Identifier	tmp		1047562	1					
ANR	1051755	AssignmentExpression	* tmp = strdup ( input )		1047562	2		=			
ANR	1051756	Identifier	tmp		1047562	0					
ANR	1051757	CallExpression	strdup ( input )		1047562	1					
ANR	1051758	Callee	strdup		1047562	0					
ANR	1051759	Identifier	strdup		1047562	0					
ANR	1051760	ArgumentList	input		1047562	1					
ANR	1051761	Argument	input		1047562	0					
ANR	1051762	Identifier	input		1047562	0					
ANR	1051763	IdentifierDeclStatement	"char * ptr = strchr ( tmp , ' ' ) ;"	1703:3:46490:46519	1047562	1	True				
ANR	1051764	IdentifierDecl	"* ptr = strchr ( tmp , ' ' )"		1047562	0					
ANR	1051765	IdentifierDeclType	char *		1047562	0					
ANR	1051766	Identifier	ptr		1047562	1					
ANR	1051767	AssignmentExpression	"* ptr = strchr ( tmp , ' ' )"		1047562	2		=			
ANR	1051768	Identifier	ptr		1047562	0					
ANR	1051769	CallExpression	"strchr ( tmp , ' ' )"		1047562	1					
ANR	1051770	Callee	strchr		1047562	0					
ANR	1051771	Identifier	strchr		1047562	0					
ANR	1051772	ArgumentList	tmp		1047562	1					
ANR	1051773	Argument	tmp		1047562	0					
ANR	1051774	Identifier	tmp		1047562	0					
ANR	1051775	Argument	' '		1047562	1					
ANR	1051776	PrimaryExpression	' '		1047562	0					
ANR	1051777	IfStatement	if ( ! ptr )		1047562	2					
ANR	1051778	Condition	! ptr	1704:7:46528:46531	1047562	0	True				
ANR	1051779	UnaryOperationExpression	! ptr		1047562	0					
ANR	1051780	UnaryOperator	!		1047562	0					
ANR	1051781	Identifier	ptr		1047562	1					
ANR	1051782	CompoundStatement		699:13:18120:18120	1047562	1					
ANR	1051783	BreakStatement	break ;	1705:4:46540:46545	1047562	0	True				
ANR	1051784	ExpressionStatement	r_str_trim ( ptr )	1707:3:46555:46571	1047562	3	True				
ANR	1051785	CallExpression	r_str_trim ( ptr )		1047562	0					
ANR	1051786	Callee	r_str_trim		1047562	0					
ANR	1051787	Identifier	r_str_trim		1047562	0					
ANR	1051788	ArgumentList	ptr		1047562	1					
ANR	1051789	Argument	ptr		1047562	0					
ANR	1051790	Identifier	ptr		1047562	0					
ANR	1051791	IdentifierDeclStatement	int nargs = r_str_word_set0 ( ptr ) ;	1708:3:46576:46609	1047562	4	True				
ANR	1051792	IdentifierDecl	nargs = r_str_word_set0 ( ptr )		1047562	0					
ANR	1051793	IdentifierDeclType	int		1047562	0					
ANR	1051794	Identifier	nargs		1047562	1					
ANR	1051795	AssignmentExpression	nargs = r_str_word_set0 ( ptr )		1047562	2		=			
ANR	1051796	Identifier	nargs		1047562	0					
ANR	1051797	CallExpression	r_str_word_set0 ( ptr )		1047562	1					
ANR	1051798	Callee	r_str_word_set0		1047562	0					
ANR	1051799	Identifier	r_str_word_set0		1047562	0					
ANR	1051800	ArgumentList	ptr		1047562	1					
ANR	1051801	Argument	ptr		1047562	0					
ANR	1051802	Identifier	ptr		1047562	0					
ANR	1051803	IfStatement	if ( nargs > 0 )		1047562	5					
ANR	1051804	Condition	nargs > 0	1709:7:46618:46626	1047562	0	True				
ANR	1051805	RelationalExpression	nargs > 0		1047562	0		>			
ANR	1051806	Identifier	nargs		1047562	0					
ANR	1051807	PrimaryExpression	0		1047562	1					
ANR	1051808	CompoundStatement		707:4:18337:18374	1047562	1					
ANR	1051809	IdentifierDeclStatement	"const char * type = r_str_word_get0 ( ptr , 0 ) ;"	1710:4:46635:46678	1047562	0	True				
ANR	1051810	IdentifierDecl	"* type = r_str_word_get0 ( ptr , 0 )"		1047562	0					
ANR	1051811	IdentifierDeclType	const char *		1047562	0					
ANR	1051812	Identifier	type		1047562	1					
ANR	1051813	AssignmentExpression	"* type = r_str_word_get0 ( ptr , 0 )"		1047562	2		=			
ANR	1051814	Identifier	type		1047562	0					
ANR	1051815	CallExpression	"r_str_word_get0 ( ptr , 0 )"		1047562	1					
ANR	1051816	Callee	r_str_word_get0		1047562	0					
ANR	1051817	Identifier	r_str_word_get0		1047562	0					
ANR	1051818	ArgumentList	ptr		1047562	1					
ANR	1051819	Argument	ptr		1047562	0					
ANR	1051820	Identifier	ptr		1047562	0					
ANR	1051821	Argument	0		1047562	1					
ANR	1051822	PrimaryExpression	0		1047562	0					
ANR	1051823	IdentifierDeclStatement	"const char * arg = ( nargs > 1 ) ? r_str_word_get0 ( ptr , 1 ) : NULL ;"	1711:4:46684:46745	1047562	1	True				
ANR	1051824	IdentifierDecl	"* arg = ( nargs > 1 ) ? r_str_word_get0 ( ptr , 1 ) : NULL"		1047562	0					
ANR	1051825	IdentifierDeclType	const char *		1047562	0					
ANR	1051826	Identifier	arg		1047562	1					
ANR	1051827	AssignmentExpression	"* arg = ( nargs > 1 ) ? r_str_word_get0 ( ptr , 1 ) : NULL"		1047562	2		=			
ANR	1051828	Identifier	arg		1047562	0					
ANR	1051829	ConditionalExpression	"( nargs > 1 ) ? r_str_word_get0 ( ptr , 1 ) : NULL"		1047562	1					
ANR	1051830	Condition	nargs > 1		1047562	0					
ANR	1051831	RelationalExpression	nargs > 1		1047562	0		>			
ANR	1051832	Identifier	nargs		1047562	0					
ANR	1051833	PrimaryExpression	1		1047562	1					
ANR	1051834	CallExpression	"r_str_word_get0 ( ptr , 1 )"		1047562	1					
ANR	1051835	Callee	r_str_word_get0		1047562	0					
ANR	1051836	Identifier	r_str_word_get0		1047562	0					
ANR	1051837	ArgumentList	ptr		1047562	1					
ANR	1051838	Argument	ptr		1047562	0					
ANR	1051839	Identifier	ptr		1047562	0					
ANR	1051840	Argument	1		1047562	1					
ANR	1051841	PrimaryExpression	1		1047562	0					
ANR	1051842	Identifier	NULL		1047562	2					
ANR	1051843	IdentifierDeclStatement	"char * fmt = r_type_format ( TDB , type ) ;"	1712:4:46751:46788	1047562	2	True				
ANR	1051844	IdentifierDecl	"* fmt = r_type_format ( TDB , type )"		1047562	0					
ANR	1051845	IdentifierDeclType	char *		1047562	0					
ANR	1051846	Identifier	fmt		1047562	1					
ANR	1051847	AssignmentExpression	"* fmt = r_type_format ( TDB , type )"		1047562	2		=			
ANR	1051848	Identifier	fmt		1047562	0					
ANR	1051849	CallExpression	"r_type_format ( TDB , type )"		1047562	1					
ANR	1051850	Callee	r_type_format		1047562	0					
ANR	1051851	Identifier	r_type_format		1047562	0					
ANR	1051852	ArgumentList	TDB		1047562	1					
ANR	1051853	Argument	TDB		1047562	0					
ANR	1051854	Identifier	TDB		1047562	0					
ANR	1051855	Argument	type		1047562	1					
ANR	1051856	Identifier	type		1047562	0					
ANR	1051857	IfStatement	if ( ! fmt )		1047562	3					
ANR	1051858	Condition	! fmt	1713:8:46798:46801	1047562	0	True				
ANR	1051859	UnaryOperationExpression	! fmt		1047562	0					
ANR	1051860	UnaryOperator	!		1047562	0					
ANR	1051861	Identifier	fmt		1047562	1					
ANR	1051862	CompoundStatement		708:14:18390:18390	1047562	1					
ANR	1051863	ExpressionStatement	"eprintf ( ""Cannot find '%s' type\\n"" , type )"	1714:5:46811:46852	1047562	0	True				
ANR	1051864	CallExpression	"eprintf ( ""Cannot find '%s' type\\n"" , type )"		1047562	0					
ANR	1051865	Callee	eprintf		1047562	0					
ANR	1051866	Identifier	eprintf		1047562	0					
ANR	1051867	ArgumentList	"""Cannot find '%s' type\\n"""		1047562	1					
ANR	1051868	Argument	"""Cannot find '%s' type\\n"""		1047562	0					
ANR	1051869	PrimaryExpression	"""Cannot find '%s' type\\n"""		1047562	0					
ANR	1051870	Argument	type		1047562	1					
ANR	1051871	Identifier	type		1047562	0					
ANR	1051872	BreakStatement	break ;	1715:5:46859:46864	1047562	1	True				
ANR	1051873	IfStatement	if ( input [ 1 ] == 'x' && arg )		1047562	4					
ANR	1051874	Condition	input [ 1 ] == 'x' && arg	1717:8:46880:46901	1047562	0	True				
ANR	1051875	AndExpression	input [ 1 ] == 'x' && arg		1047562	0		&&			
ANR	1051876	EqualityExpression	input [ 1 ] == 'x'		1047562	0		==			
ANR	1051877	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1051878	Identifier	input		1047562	0					
ANR	1051879	PrimaryExpression	1		1047562	1					
ANR	1051880	PrimaryExpression	'x'		1047562	1					
ANR	1051881	Identifier	arg		1047562	1					
ANR	1051882	CompoundStatement		712:32:18490:18490	1047562	1					
ANR	1051883	ExpressionStatement	"r_core_cmdf ( core , ""pf %s @x:%s"" , fmt , arg )"	1718:5:46920:46963	1047562	0	True				
ANR	1051884	CallExpression	"r_core_cmdf ( core , ""pf %s @x:%s"" , fmt , arg )"		1047562	0					
ANR	1051885	Callee	r_core_cmdf		1047562	0					
ANR	1051886	Identifier	r_core_cmdf		1047562	0					
ANR	1051887	ArgumentList	core		1047562	1					
ANR	1051888	Argument	core		1047562	0					
ANR	1051889	Identifier	core		1047562	0					
ANR	1051890	Argument	"""pf %s @x:%s"""		1047562	1					
ANR	1051891	PrimaryExpression	"""pf %s @x:%s"""		1047562	0					
ANR	1051892	Argument	fmt		1047562	2					
ANR	1051893	Identifier	fmt		1047562	0					
ANR	1051894	Argument	arg		1047562	3					
ANR	1051895	Identifier	arg		1047562	0					
ANR	1051896	ExpressionStatement	"eprintf ( ""pf %s @x:%s"" , fmt , arg )"	1719:5:46970:47003	1047562	1	True				
ANR	1051897	CallExpression	"eprintf ( ""pf %s @x:%s"" , fmt , arg )"		1047562	0					
ANR	1051898	Callee	eprintf		1047562	0					
ANR	1051899	Identifier	eprintf		1047562	0					
ANR	1051900	ArgumentList	"""pf %s @x:%s"""		1047562	1					
ANR	1051901	Argument	"""pf %s @x:%s"""		1047562	0					
ANR	1051902	PrimaryExpression	"""pf %s @x:%s"""		1047562	0					
ANR	1051903	Argument	fmt		1047562	1					
ANR	1051904	Identifier	fmt		1047562	0					
ANR	1051905	Argument	arg		1047562	2					
ANR	1051906	Identifier	arg		1047562	0					
ANR	1051907	ElseStatement	else		1047562	0					
ANR	1051908	CompoundStatement		716:5:18609:18668	1047562	0					
ANR	1051909	IdentifierDeclStatement	"ut64 addr = arg ? r_num_math ( core -> num , arg ) : core -> offset ;"	1721:5:47023:47082	1047562	0	True				
ANR	1051910	IdentifierDecl	"addr = arg ? r_num_math ( core -> num , arg ) : core -> offset"		1047562	0					
ANR	1051911	IdentifierDeclType	ut64		1047562	0					
ANR	1051912	Identifier	addr		1047562	1					
ANR	1051913	AssignmentExpression	"addr = arg ? r_num_math ( core -> num , arg ) : core -> offset"		1047562	2		=			
ANR	1051914	Identifier	addr		1047562	0					
ANR	1051915	ConditionalExpression	"arg ? r_num_math ( core -> num , arg ) : core -> offset"		1047562	1					
ANR	1051916	Condition	arg		1047562	0					
ANR	1051917	Identifier	arg		1047562	0					
ANR	1051918	CallExpression	"r_num_math ( core -> num , arg )"		1047562	1					
ANR	1051919	Callee	r_num_math		1047562	0					
ANR	1051920	Identifier	r_num_math		1047562	0					
ANR	1051921	ArgumentList	core -> num		1047562	1					
ANR	1051922	Argument	core -> num		1047562	0					
ANR	1051923	PtrMemberAccess	core -> num		1047562	0					
ANR	1051924	Identifier	core		1047562	0					
ANR	1051925	Identifier	num		1047562	1					
ANR	1051926	Argument	arg		1047562	1					
ANR	1051927	Identifier	arg		1047562	0					
ANR	1051928	PtrMemberAccess	core -> offset		1047562	2					
ANR	1051929	Identifier	core		1047562	0					
ANR	1051930	Identifier	offset		1047562	1					
ANR	1051931	IfStatement	if ( ! addr && arg )		1047562	1					
ANR	1051932	Condition	! addr && arg	1722:9:47093:47104	1047562	0	True				
ANR	1051933	AndExpression	! addr && arg		1047562	0		&&			
ANR	1051934	UnaryOperationExpression	! addr		1047562	0					
ANR	1051935	UnaryOperator	!		1047562	0					
ANR	1051936	Identifier	addr		1047562	1					
ANR	1051937	Identifier	arg		1047562	1					
ANR	1051938	CompoundStatement		718:6:18701:18770	1047562	1					
ANR	1051939	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 ) ;"	1723:6:47115:47184	1047562	0	True				
ANR	1051940	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		1047562	0					
ANR	1051941	IdentifierDeclType	RAnalFunction *		1047562	0					
ANR	1051942	Identifier	fcn		1047562	1					
ANR	1051943	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		1047562	2		=			
ANR	1051944	Identifier	fcn		1047562	0					
ANR	1051945	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , - 1 )"		1047562	1					
ANR	1051946	Callee	r_anal_get_fcn_in		1047562	0					
ANR	1051947	Identifier	r_anal_get_fcn_in		1047562	0					
ANR	1051948	ArgumentList	core -> anal		1047562	1					
ANR	1051949	Argument	core -> anal		1047562	0					
ANR	1051950	PtrMemberAccess	core -> anal		1047562	0					
ANR	1051951	Identifier	core		1047562	0					
ANR	1051952	Identifier	anal		1047562	1					
ANR	1051953	Argument	core -> offset		1047562	1					
ANR	1051954	PtrMemberAccess	core -> offset		1047562	0					
ANR	1051955	Identifier	core		1047562	0					
ANR	1051956	Identifier	offset		1047562	1					
ANR	1051957	Argument	- 1		1047562	2					
ANR	1051958	UnaryOperationExpression	- 1		1047562	0					
ANR	1051959	UnaryOperator	-		1047562	0					
ANR	1051960	PrimaryExpression	1		1047562	1					
ANR	1051961	ExpressionStatement	"addr = r_anal_var_addr ( core -> anal , fcn , arg )"	1724:6:47192:47237	1047562	1	True				
ANR	1051962	AssignmentExpression	"addr = r_anal_var_addr ( core -> anal , fcn , arg )"		1047562	0		=			
ANR	1051963	Identifier	addr		1047562	0					
ANR	1051964	CallExpression	"r_anal_var_addr ( core -> anal , fcn , arg )"		1047562	1					
ANR	1051965	Callee	r_anal_var_addr		1047562	0					
ANR	1051966	Identifier	r_anal_var_addr		1047562	0					
ANR	1051967	ArgumentList	core -> anal		1047562	1					
ANR	1051968	Argument	core -> anal		1047562	0					
ANR	1051969	PtrMemberAccess	core -> anal		1047562	0					
ANR	1051970	Identifier	core		1047562	0					
ANR	1051971	Identifier	anal		1047562	1					
ANR	1051972	Argument	fcn		1047562	1					
ANR	1051973	Identifier	fcn		1047562	0					
ANR	1051974	Argument	arg		1047562	2					
ANR	1051975	Identifier	arg		1047562	0					
ANR	1051976	IfStatement	if ( addr != UT64_MAX )		1047562	2					
ANR	1051977	Condition	addr != UT64_MAX	1726:9:47255:47270	1047562	0	True				
ANR	1051978	EqualityExpression	addr != UT64_MAX		1047562	0		!=			
ANR	1051979	Identifier	addr		1047562	0					
ANR	1051980	Identifier	UT64_MAX		1047562	1					
ANR	1051981	CompoundStatement		721:27:18859:18859	1047562	1					
ANR	1051982	Statement	r_core_cmdf	1727:6:47281:47291	1047562	0	True				
ANR	1051983	Statement	(	1727:18:47293:47293	1047562	1	True				
ANR	1051984	Statement	core	1727:19:47294:47297	1047562	2	True				
ANR	1051985	Statement	","	1727:23:47298:47298	1047562	3	True				
ANR	1051986	Statement	"""pf %s @ 0x%08"""	1727:25:47300:47314	1047562	4	True				
ANR	1051987	Statement	PFMT64x	1727:41:47316:47322	1047562	5	True				
ANR	1051988	Statement	"""\\n"""	1727:49:47324:47327	1047562	6	True				
ANR	1051989	Statement	","	1727:53:47328:47328	1047562	7	True				
ANR	1051990	Statement	fmt	1727:55:47330:47332	1047562	8	True				
ANR	1051991	Statement	","	1727:58:47333:47333	1047562	9	True				
ANR	1051992	Statement	addr	1727:60:47335:47338	1047562	10	True				
ANR	1051993	Statement	)	1727:64:47339:47339	1047562	11	True				
ANR	1051994	ExpressionStatement		1727:65:47340:47340	1047562	12	True				
ANR	1051995	ExpressionStatement	free ( fmt )	1730:4:47359:47369	1047562	5	True				
ANR	1051996	CallExpression	free ( fmt )		1047562	0					
ANR	1051997	Callee	free		1047562	0					
ANR	1051998	Identifier	free		1047562	0					
ANR	1051999	ArgumentList	fmt		1047562	1					
ANR	1052000	Argument	fmt		1047562	0					
ANR	1052001	Identifier	fmt		1047562	0					
ANR	1052002	ElseStatement	else		1047562	0					
ANR	1052003	CompoundStatement		726:10:18967:18967	1047562	0					
ANR	1052004	ExpressionStatement	"eprintf ( ""see t?\\n"" )"	1732:4:47387:47407	1047562	0	True				
ANR	1052005	CallExpression	"eprintf ( ""see t?\\n"" )"		1047562	0					
ANR	1052006	Callee	eprintf		1047562	0					
ANR	1052007	Identifier	eprintf		1047562	0					
ANR	1052008	ArgumentList	"""see t?\\n"""		1047562	1					
ANR	1052009	Argument	"""see t?\\n"""		1047562	0					
ANR	1052010	PrimaryExpression	"""see t?\\n"""		1047562	0					
ANR	1052011	BreakStatement	break ;	1733:4:47413:47418	1047562	1	True				
ANR	1052012	ExpressionStatement	free ( tmp )	1735:3:47428:47438	1047562	6	True				
ANR	1052013	CallExpression	free ( tmp )		1047562	0					
ANR	1052014	Callee	free		1047562	0					
ANR	1052015	Identifier	free		1047562	0					
ANR	1052016	ArgumentList	tmp		1047562	1					
ANR	1052017	Argument	tmp		1047562	0					
ANR	1052018	Identifier	tmp		1047562	0					
ANR	1052019	BreakStatement	break ;	1737:2:47446:47451	1047562	44	True				
ANR	1052020	Label	case '-' :	1738:1:47454:47462	1047562	45	True				
ANR	1052021	IfStatement	if ( input [ 1 ] == '?' )		1047562	46					
ANR	1052022	Condition	input [ 1 ] == '?'	1739:6:47478:47492	1047562	0	True				
ANR	1052023	EqualityExpression	input [ 1 ] == '?'		1047562	0		==			
ANR	1052024	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1052025	Identifier	input		1047562	0					
ANR	1052026	PrimaryExpression	1		1047562	1					
ANR	1052027	PrimaryExpression	'?'		1047562	1					
ANR	1052028	CompoundStatement		734:23:19081:19081	1047562	1					
ANR	1052029	ExpressionStatement	"r_core_cmd_help ( core , help_msg_t_minus )"	1740:3:47500:47540	1047562	0	True				
ANR	1052030	CallExpression	"r_core_cmd_help ( core , help_msg_t_minus )"		1047562	0					
ANR	1052031	Callee	r_core_cmd_help		1047562	0					
ANR	1052032	Identifier	r_core_cmd_help		1047562	0					
ANR	1052033	ArgumentList	core		1047562	1					
ANR	1052034	Argument	core		1047562	0					
ANR	1052035	Identifier	core		1047562	0					
ANR	1052036	Argument	help_msg_t_minus		1047562	1					
ANR	1052037	Identifier	help_msg_t_minus		1047562	0					
ANR	1052038	ElseStatement	else		1047562	0					
ANR	1052039	IfStatement	if ( input [ 1 ] == '*' )		1047562	0					
ANR	1052040	Condition	input [ 1 ] == '*'	1741:13:47555:47569	1047562	0	True				
ANR	1052041	EqualityExpression	input [ 1 ] == '*'		1047562	0		==			
ANR	1052042	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1052043	Identifier	input		1047562	0					
ANR	1052044	PrimaryExpression	1		1047562	1					
ANR	1052045	PrimaryExpression	'*'		1047562	1					
ANR	1052046	CompoundStatement		736:30:19158:19158	1047562	1					
ANR	1052047	ExpressionStatement	sdb_reset ( TDB )	1742:3:47577:47592	1047562	0	True				
ANR	1052048	CallExpression	sdb_reset ( TDB )		1047562	0					
ANR	1052049	Callee	sdb_reset		1047562	0					
ANR	1052050	Identifier	sdb_reset		1047562	0					
ANR	1052051	ArgumentList	TDB		1047562	1					
ANR	1052052	Argument	TDB		1047562	0					
ANR	1052053	Identifier	TDB		1047562	0					
ANR	1052054	ExpressionStatement	r_parse_c_reset ( core -> parser )	1743:3:47597:47627	1047562	1	True				
ANR	1052055	CallExpression	r_parse_c_reset ( core -> parser )		1047562	0					
ANR	1052056	Callee	r_parse_c_reset		1047562	0					
ANR	1052057	Identifier	r_parse_c_reset		1047562	0					
ANR	1052058	ArgumentList	core -> parser		1047562	1					
ANR	1052059	Argument	core -> parser		1047562	0					
ANR	1052060	PtrMemberAccess	core -> parser		1047562	0					
ANR	1052061	Identifier	core		1047562	0					
ANR	1052062	Identifier	parser		1047562	1					
ANR	1052063	ElseStatement	else		1047562	0					
ANR	1052064	CompoundStatement		740:3:19229:19257	1047562	0					
ANR	1052065	IdentifierDeclStatement	const char * name = input + 1 ;	1745:3:47643:47671	1047562	0	True				
ANR	1052066	IdentifierDecl	* name = input + 1		1047562	0					
ANR	1052067	IdentifierDeclType	const char *		1047562	0					
ANR	1052068	Identifier	name		1047562	1					
ANR	1052069	AssignmentExpression	* name = input + 1		1047562	2		=			
ANR	1052070	Identifier	name		1047562	0					
ANR	1052071	AdditiveExpression	input + 1		1047562	1		+			
ANR	1052072	Identifier	input		1047562	0					
ANR	1052073	PrimaryExpression	1		1047562	1					
ANR	1052074	WhileStatement	while ( IS_WHITESPACE ( * name ) )		1047562	1					
ANR	1052075	Condition	IS_WHITESPACE ( * name )	1746:10:47683:47703	1047562	0	True				
ANR	1052076	CallExpression	IS_WHITESPACE ( * name )		1047562	0					
ANR	1052077	Callee	IS_WHITESPACE		1047562	0					
ANR	1052078	Identifier	IS_WHITESPACE		1047562	0					
ANR	1052079	ArgumentList	* name		1047562	1					
ANR	1052080	Argument	* name		1047562	0					
ANR	1052081	UnaryOperationExpression	* name		1047562	0					
ANR	1052082	UnaryOperator	*		1047562	0					
ANR	1052083	Identifier	name		1047562	1					
ANR	1052084	ExpressionStatement	name ++	1746:33:47706:47712	1047562	1	True				
ANR	1052085	PostIncDecOperationExpression	name ++		1047562	0					
ANR	1052086	Identifier	name		1047562	0					
ANR	1052087	IncDec	++		1047562	1					
ANR	1052088	IfStatement	if ( * name )		1047562	2					
ANR	1052089	Condition	* name	1747:7:47721:47725	1047562	0	True				
ANR	1052090	UnaryOperationExpression	* name		1047562	0					
ANR	1052091	UnaryOperator	*		1047562	0					
ANR	1052092	Identifier	name		1047562	1					
ANR	1052093	CompoundStatement		742:14:19314:19314	1047562	1					
ANR	1052094	ExpressionStatement	"r_anal_remove_parsed_type ( core -> anal , name )"	1748:4:47734:47778	1047562	0	True				
ANR	1052095	CallExpression	"r_anal_remove_parsed_type ( core -> anal , name )"		1047562	0					
ANR	1052096	Callee	r_anal_remove_parsed_type		1047562	0					
ANR	1052097	Identifier	r_anal_remove_parsed_type		1047562	0					
ANR	1052098	ArgumentList	core -> anal		1047562	1					
ANR	1052099	Argument	core -> anal		1047562	0					
ANR	1052100	PtrMemberAccess	core -> anal		1047562	0					
ANR	1052101	Identifier	core		1047562	0					
ANR	1052102	Identifier	anal		1047562	1					
ANR	1052103	Argument	name		1047562	1					
ANR	1052104	Identifier	name		1047562	0					
ANR	1052105	ElseStatement	else		1047562	0					
ANR	1052106	CompoundStatement		744:10:19376:19376	1047562	0					
ANR	1052107	ExpressionStatement	"eprintf ( ""Invalid use of t- . See t-? for help.\\n"" )"	1750:4:47796:47847	1047562	0	True				
ANR	1052108	CallExpression	"eprintf ( ""Invalid use of t- . See t-? for help.\\n"" )"		1047562	0					
ANR	1052109	Callee	eprintf		1047562	0					
ANR	1052110	Identifier	eprintf		1047562	0					
ANR	1052111	ArgumentList	"""Invalid use of t- . See t-? for help.\\n"""		1047562	1					
ANR	1052112	Argument	"""Invalid use of t- . See t-? for help.\\n"""		1047562	0					
ANR	1052113	PrimaryExpression	"""Invalid use of t- . See t-? for help.\\n"""		1047562	0					
ANR	1052114	BreakStatement	break ;	1753:2:47860:47865	1047562	47	True				
ANR	1052115	Label	case 'f' :	1755:1:47922:47930	1047562	48	True				
ANR	1052116	SwitchStatement	switch ( input [ 1 ] )		1047562	49					
ANR	1052117	Condition	input [ 1 ]	1756:10:47950:47957	1047562	0	True				
ANR	1052118	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1052119	Identifier	input		1047562	0					
ANR	1052120	PrimaryExpression	1		1047562	1					
ANR	1052121	CompoundStatement		751:20:19546:19546	1047562	1					
ANR	1052122	Label	case 0 :	1757:2:47964:47970	1047562	0	True				
ANR	1052123	ExpressionStatement	"print_keys ( TDB , core , stdiffunc , printkey_cb , false )"	1758:3:47975:48028	1047562	1	True				
ANR	1052124	CallExpression	"print_keys ( TDB , core , stdiffunc , printkey_cb , false )"		1047562	0					
ANR	1052125	Callee	print_keys		1047562	0					
ANR	1052126	Identifier	print_keys		1047562	0					
ANR	1052127	ArgumentList	TDB		1047562	1					
ANR	1052128	Argument	TDB		1047562	0					
ANR	1052129	Identifier	TDB		1047562	0					
ANR	1052130	Argument	core		1047562	1					
ANR	1052131	Identifier	core		1047562	0					
ANR	1052132	Argument	stdiffunc		1047562	2					
ANR	1052133	Identifier	stdiffunc		1047562	0					
ANR	1052134	Argument	printkey_cb		1047562	3					
ANR	1052135	Identifier	printkey_cb		1047562	0					
ANR	1052136	Argument	false		1047562	4					
ANR	1052137	Identifier	false		1047562	0					
ANR	1052138	BreakStatement	break ;	1759:3:48033:48038	1047562	2	True				
ANR	1052139	Label	case 'c' :	1760:2:48042:48050	1047562	3	True				
ANR	1052140	ExpressionStatement	"printFunctionTypeC ( core , input + 2 )"	1761:3:48064:48100	1047562	4	True				
ANR	1052141	CallExpression	"printFunctionTypeC ( core , input + 2 )"		1047562	0					
ANR	1052142	Callee	printFunctionTypeC		1047562	0					
ANR	1052143	Identifier	printFunctionTypeC		1047562	0					
ANR	1052144	ArgumentList	core		1047562	1					
ANR	1052145	Argument	core		1047562	0					
ANR	1052146	Identifier	core		1047562	0					
ANR	1052147	Argument	input + 2		1047562	1					
ANR	1052148	AdditiveExpression	input + 2		1047562	0		+			
ANR	1052149	Identifier	input		1047562	0					
ANR	1052150	PrimaryExpression	2		1047562	1					
ANR	1052151	BreakStatement	break ;	1762:3:48105:48110	1047562	5	True				
ANR	1052152	Label	case 'j' :	1763:2:48114:48122	1047562	6	True				
ANR	1052153	IfStatement	if ( input [ 2 ] == ' ' )		1047562	7					
ANR	1052154	Condition	input [ 2 ] == ' '	1764:7:48131:48145	1047562	0	True				
ANR	1052155	EqualityExpression	input [ 2 ] == ' '		1047562	0		==			
ANR	1052156	ArrayIndexing	input [ 2 ]		1047562	0					
ANR	1052157	Identifier	input		1047562	0					
ANR	1052158	PrimaryExpression	2		1047562	1					
ANR	1052159	PrimaryExpression	' '		1047562	1					
ANR	1052160	CompoundStatement		759:24:19734:19734	1047562	1					
ANR	1052161	ExpressionStatement	"printFunctionType ( core , input + 2 )"	1765:4:48154:48189	1047562	0	True				
ANR	1052162	CallExpression	"printFunctionType ( core , input + 2 )"		1047562	0					
ANR	1052163	Callee	printFunctionType		1047562	0					
ANR	1052164	Identifier	printFunctionType		1047562	0					
ANR	1052165	ArgumentList	core		1047562	1					
ANR	1052166	Argument	core		1047562	0					
ANR	1052167	Identifier	core		1047562	0					
ANR	1052168	Argument	input + 2		1047562	1					
ANR	1052169	AdditiveExpression	input + 2		1047562	0		+			
ANR	1052170	Identifier	input		1047562	0					
ANR	1052171	PrimaryExpression	2		1047562	1					
ANR	1052172	ExpressionStatement	"r_cons_printf ( ""\\n"" )"	1766:4:48195:48215	1047562	1	True				
ANR	1052173	CallExpression	"r_cons_printf ( ""\\n"" )"		1047562	0					
ANR	1052174	Callee	r_cons_printf		1047562	0					
ANR	1052175	Identifier	r_cons_printf		1047562	0					
ANR	1052176	ArgumentList	"""\\n"""		1047562	1					
ANR	1052177	Argument	"""\\n"""		1047562	0					
ANR	1052178	PrimaryExpression	"""\\n"""		1047562	0					
ANR	1052179	ElseStatement	else		1047562	0					
ANR	1052180	CompoundStatement		762:10:19813:19813	1047562	0					
ANR	1052181	ExpressionStatement	"print_keys ( TDB , core , stdiffunc , printfunc_json_cb , true )"	1768:4:48233:48291	1047562	0	True				
ANR	1052182	CallExpression	"print_keys ( TDB , core , stdiffunc , printfunc_json_cb , true )"		1047562	0					
ANR	1052183	Callee	print_keys		1047562	0					
ANR	1052184	Identifier	print_keys		1047562	0					
ANR	1052185	ArgumentList	TDB		1047562	1					
ANR	1052186	Argument	TDB		1047562	0					
ANR	1052187	Identifier	TDB		1047562	0					
ANR	1052188	Argument	core		1047562	1					
ANR	1052189	Identifier	core		1047562	0					
ANR	1052190	Argument	stdiffunc		1047562	2					
ANR	1052191	Identifier	stdiffunc		1047562	0					
ANR	1052192	Argument	printfunc_json_cb		1047562	3					
ANR	1052193	Identifier	printfunc_json_cb		1047562	0					
ANR	1052194	Argument	true		1047562	4					
ANR	1052195	Identifier	true		1047562	0					
ANR	1052196	BreakStatement	break ;	1770:3:48301:48306	1047562	8	True				
ANR	1052197	Label	case ' ' :	1771:2:48310:48318	1047562	9	True				
ANR	1052198	CompoundStatement		767:3:19911:19983	1047562	10					
ANR	1052199	IdentifierDeclStatement	"char * res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""~~func.%s"" , input + 2 ) ) ;"	1772:3:48325:48397	1047562	0	True				
ANR	1052200	IdentifierDecl	"* res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""~~func.%s"" , input + 2 ) )"		1047562	0					
ANR	1052201	IdentifierDeclType	char *		1047562	0					
ANR	1052202	Identifier	res		1047562	1					
ANR	1052203	AssignmentExpression	"* res = sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""~~func.%s"" , input + 2 ) )"		1047562	2		=			
ANR	1052204	Identifier	res		1047562	0					
ANR	1052205	CallExpression	"sdb_querys ( TDB , NULL , - 1 , sdb_fmt ( ""~~func.%s"" , input + 2 ) )"		1047562	1					
ANR	1052206	Callee	sdb_querys		1047562	0					
ANR	1052207	Identifier	sdb_querys		1047562	0					
ANR	1052208	ArgumentList	TDB		1047562	1					
ANR	1052209	Argument	TDB		1047562	0					
ANR	1052210	Identifier	TDB		1047562	0					
ANR	1052211	Argument	NULL		1047562	1					
ANR	1052212	Identifier	NULL		1047562	0					
ANR	1052213	Argument	- 1		1047562	2					
ANR	1052214	UnaryOperationExpression	- 1		1047562	0					
ANR	1052215	UnaryOperator	-		1047562	0					
ANR	1052216	PrimaryExpression	1		1047562	1					
ANR	1052217	Argument	"sdb_fmt ( ""~~func.%s"" , input + 2 )"		1047562	3					
ANR	1052218	CallExpression	"sdb_fmt ( ""~~func.%s"" , input + 2 )"		1047562	0					
ANR	1052219	Callee	sdb_fmt		1047562	0					
ANR	1052220	Identifier	sdb_fmt		1047562	0					
ANR	1052221	ArgumentList	"""~~func.%s"""		1047562	1					
ANR	1052222	Argument	"""~~func.%s"""		1047562	0					
ANR	1052223	PrimaryExpression	"""~~func.%s"""		1047562	0					
ANR	1052224	Argument	input + 2		1047562	1					
ANR	1052225	AdditiveExpression	input + 2		1047562	0		+			
ANR	1052226	Identifier	input		1047562	0					
ANR	1052227	PrimaryExpression	2		1047562	1					
ANR	1052228	IfStatement	if ( res )		1047562	1					
ANR	1052229	Condition	res	1773:7:48406:48408	1047562	0	True				
ANR	1052230	Identifier	res		1047562	0					
ANR	1052231	CompoundStatement		768:12:19997:19997	1047562	1					
ANR	1052232	ExpressionStatement	"r_cons_printf ( ""%s"" , res )"	1774:4:48417:48442	1047562	0	True				
ANR	1052233	CallExpression	"r_cons_printf ( ""%s"" , res )"		1047562	0					
ANR	1052234	Callee	r_cons_printf		1047562	0					
ANR	1052235	Identifier	r_cons_printf		1047562	0					
ANR	1052236	ArgumentList	"""%s"""		1047562	1					
ANR	1052237	Argument	"""%s"""		1047562	0					
ANR	1052238	PrimaryExpression	"""%s"""		1047562	0					
ANR	1052239	Argument	res		1047562	1					
ANR	1052240	Identifier	res		1047562	0					
ANR	1052241	ExpressionStatement	free ( res )	1775:4:48448:48458	1047562	1	True				
ANR	1052242	CallExpression	free ( res )		1047562	0					
ANR	1052243	Callee	free		1047562	0					
ANR	1052244	Identifier	free		1047562	0					
ANR	1052245	ArgumentList	res		1047562	1					
ANR	1052246	Argument	res		1047562	0					
ANR	1052247	Identifier	res		1047562	0					
ANR	1052248	BreakStatement	break ;	1777:3:48468:48473	1047562	2	True				
ANR	1052249	Label	default :	1779:2:48481:48488	1047562	11	True				
ANR	1052250	Identifier	default		1047562	0					
ANR	1052251	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tf )"	1780:3:48493:48528	1047562	12	True				
ANR	1052252	CallExpression	"r_core_cmd_help ( core , help_msg_tf )"		1047562	0					
ANR	1052253	Callee	r_core_cmd_help		1047562	0					
ANR	1052254	Identifier	r_core_cmd_help		1047562	0					
ANR	1052255	ArgumentList	core		1047562	1					
ANR	1052256	Argument	core		1047562	0					
ANR	1052257	Identifier	core		1047562	0					
ANR	1052258	Argument	help_msg_tf		1047562	1					
ANR	1052259	Identifier	help_msg_tf		1047562	0					
ANR	1052260	BreakStatement	break ;	1781:3:48533:48538	1047562	13	True				
ANR	1052261	BreakStatement	break ;	1783:2:48546:48551	1047562	50	True				
ANR	1052262	Label	case 't' :	1784:1:48554:48562	1047562	51	True				
ANR	1052263	CompoundStatement		855:2:21914:21935	1047562	52					
ANR	1052264	IfStatement	if ( ! input [ 1 ] || input [ 1 ] == 'j' )		1047562	0					
ANR	1052265	Condition	! input [ 1 ] || input [ 1 ] == 'j'	1785:6:48572:48599	1047562	0	True				
ANR	1052266	OrExpression	! input [ 1 ] || input [ 1 ] == 'j'		1047562	0		||			
ANR	1052267	UnaryOperationExpression	! input [ 1 ]		1047562	0					
ANR	1052268	UnaryOperator	!		1047562	0					
ANR	1052269	ArrayIndexing	input [ 1 ]		1047562	1					
ANR	1052270	Identifier	input		1047562	0					
ANR	1052271	PrimaryExpression	1		1047562	1					
ANR	1052272	EqualityExpression	input [ 1 ] == 'j'		1047562	1		==			
ANR	1052273	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1052274	Identifier	input		1047562	0					
ANR	1052275	PrimaryExpression	1		1047562	1					
ANR	1052276	PrimaryExpression	'j'		1047562	1					
ANR	1052277	CompoundStatement		789:3:20335:20376	1047562	1					
ANR	1052278	IdentifierDeclStatement	PJ * pj = NULL ;	1786:3:48607:48620	1047562	0	True				
ANR	1052279	IdentifierDecl	* pj = NULL		1047562	0					
ANR	1052280	IdentifierDeclType	PJ *		1047562	0					
ANR	1052281	Identifier	pj		1047562	1					
ANR	1052282	AssignmentExpression	* pj = NULL		1047562	2		=			
ANR	1052283	Identifier	NULL		1047562	0					
ANR	1052284	Identifier	NULL		1047562	1					
ANR	1052285	IfStatement	if ( input [ 1 ] == 'j' )		1047562	1					
ANR	1052286	Condition	input [ 1 ] == 'j'	1787:7:48629:48643	1047562	0	True				
ANR	1052287	EqualityExpression	input [ 1 ] == 'j'		1047562	0		==			
ANR	1052288	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1052289	Identifier	input		1047562	0					
ANR	1052290	PrimaryExpression	1		1047562	1					
ANR	1052291	PrimaryExpression	'j'		1047562	1					
ANR	1052292	CompoundStatement		782:24:20232:20232	1047562	1					
ANR	1052293	ExpressionStatement	pj = pj_new ( )	1788:4:48652:48666	1047562	0	True				
ANR	1052294	AssignmentExpression	pj = pj_new ( )		1047562	0		=			
ANR	1052295	Identifier	pj		1047562	0					
ANR	1052296	CallExpression	pj_new ( )		1047562	1					
ANR	1052297	Callee	pj_new		1047562	0					
ANR	1052298	Identifier	pj_new		1047562	0					
ANR	1052299	ArgumentList			1047562	1					
ANR	1052300	ExpressionStatement	pj_o ( pj )	1789:4:48672:48681	1047562	1	True				
ANR	1052301	CallExpression	pj_o ( pj )		1047562	0					
ANR	1052302	Callee	pj_o		1047562	0					
ANR	1052303	Identifier	pj_o		1047562	0					
ANR	1052304	ArgumentList	pj		1047562	1					
ANR	1052305	Argument	pj		1047562	0					
ANR	1052306	Identifier	pj		1047562	0					
ANR	1052307	IdentifierDeclStatement	char * name = NULL ;	1791:3:48691:48708	1047562	2	True				
ANR	1052308	IdentifierDecl	* name = NULL		1047562	0					
ANR	1052309	IdentifierDeclType	char *		1047562	0					
ANR	1052310	Identifier	name		1047562	1					
ANR	1052311	AssignmentExpression	* name = NULL		1047562	2		=			
ANR	1052312	Identifier	NULL		1047562	0					
ANR	1052313	Identifier	NULL		1047562	1					
ANR	1052314	IdentifierDeclStatement	SdbKv * kv ;	1792:3:48713:48722	1047562	3	True				
ANR	1052315	IdentifierDecl	* kv		1047562	0					
ANR	1052316	IdentifierDeclType	SdbKv *		1047562	0					
ANR	1052317	Identifier	kv		1047562	1					
ANR	1052318	IdentifierDeclStatement	SdbListIter * iter ;	1793:3:48727:48744	1047562	4	True				
ANR	1052319	IdentifierDecl	* iter		1047562	0					
ANR	1052320	IdentifierDeclType	SdbListIter *		1047562	0					
ANR	1052321	Identifier	iter		1047562	1					
ANR	1052322	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( TDB , true ) ;"	1794:3:48749:48790	1047562	5	True				
ANR	1052323	IdentifierDecl	"* l = sdb_foreach_list ( TDB , true )"		1047562	0					
ANR	1052324	IdentifierDeclType	SdbList *		1047562	0					
ANR	1052325	Identifier	l		1047562	1					
ANR	1052326	AssignmentExpression	"* l = sdb_foreach_list ( TDB , true )"		1047562	2		=			
ANR	1052327	Identifier	l		1047562	0					
ANR	1052328	CallExpression	"sdb_foreach_list ( TDB , true )"		1047562	1					
ANR	1052329	Callee	sdb_foreach_list		1047562	0					
ANR	1052330	Identifier	sdb_foreach_list		1047562	0					
ANR	1052331	ArgumentList	TDB		1047562	1					
ANR	1052332	Argument	TDB		1047562	0					
ANR	1052333	Identifier	TDB		1047562	0					
ANR	1052334	Argument	true		1047562	1					
ANR	1052335	Identifier	true		1047562	0					
ANR	1052336	Statement	ls_foreach	1795:3:48795:48804	1047562	6	True				
ANR	1052337	Statement	(	1795:14:48806:48806	1047562	7	True				
ANR	1052338	Statement	l	1795:15:48807:48807	1047562	8	True				
ANR	1052339	Statement	","	1795:16:48808:48808	1047562	9	True				
ANR	1052340	Statement	iter	1795:18:48810:48813	1047562	10	True				
ANR	1052341	Statement	","	1795:22:48814:48814	1047562	11	True				
ANR	1052342	Statement	kv	1795:24:48816:48817	1047562	12	True				
ANR	1052343	Statement	)	1795:26:48818:48818	1047562	13	True				
ANR	1052344	CompoundStatement		790:28:20406:20406	1047562	14					
ANR	1052345	IfStatement	"if ( ! strcmp ( sdbkv_value ( kv ) , ""typedef"" ) )"		1047562	0					
ANR	1052346	Condition	"! strcmp ( sdbkv_value ( kv ) , ""typedef"" )"	1796:8:48830:48866	1047562	0	True				
ANR	1052347	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""typedef"" )"		1047562	0					
ANR	1052348	UnaryOperator	!		1047562	0					
ANR	1052349	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""typedef"" )"		1047562	1					
ANR	1052350	Callee	strcmp		1047562	0					
ANR	1052351	Identifier	strcmp		1047562	0					
ANR	1052352	ArgumentList	sdbkv_value ( kv )		1047562	1					
ANR	1052353	Argument	sdbkv_value ( kv )		1047562	0					
ANR	1052354	CallExpression	sdbkv_value ( kv )		1047562	0					
ANR	1052355	Callee	sdbkv_value		1047562	0					
ANR	1052356	Identifier	sdbkv_value		1047562	0					
ANR	1052357	ArgumentList	kv		1047562	1					
ANR	1052358	Argument	kv		1047562	0					
ANR	1052359	Identifier	kv		1047562	0					
ANR	1052360	Argument	"""typedef"""		1047562	1					
ANR	1052361	PrimaryExpression	"""typedef"""		1047562	0					
ANR	1052362	CompoundStatement		791:47:20455:20455	1047562	1					
ANR	1052363	IfStatement	"if ( ! name || strcmp ( sdbkv_value ( kv ) , name ) )"		1047562	0					
ANR	1052364	Condition	"! name || strcmp ( sdbkv_value ( kv ) , name )"	1797:9:48880:48919	1047562	0	True				
ANR	1052365	OrExpression	"! name || strcmp ( sdbkv_value ( kv ) , name )"		1047562	0		||			
ANR	1052366	UnaryOperationExpression	! name		1047562	0					
ANR	1052367	UnaryOperator	!		1047562	0					
ANR	1052368	Identifier	name		1047562	1					
ANR	1052369	CallExpression	"strcmp ( sdbkv_value ( kv ) , name )"		1047562	1					
ANR	1052370	Callee	strcmp		1047562	0					
ANR	1052371	Identifier	strcmp		1047562	0					
ANR	1052372	ArgumentList	sdbkv_value ( kv )		1047562	1					
ANR	1052373	Argument	sdbkv_value ( kv )		1047562	0					
ANR	1052374	CallExpression	sdbkv_value ( kv )		1047562	0					
ANR	1052375	Callee	sdbkv_value		1047562	0					
ANR	1052376	Identifier	sdbkv_value		1047562	0					
ANR	1052377	ArgumentList	kv		1047562	1					
ANR	1052378	Argument	kv		1047562	0					
ANR	1052379	Identifier	kv		1047562	0					
ANR	1052380	Argument	name		1047562	1					
ANR	1052381	Identifier	name		1047562	0					
ANR	1052382	CompoundStatement		792:51:20508:20508	1047562	1					
ANR	1052383	ExpressionStatement	free ( name )	1798:6:48930:48941	1047562	0	True				
ANR	1052384	CallExpression	free ( name )		1047562	0					
ANR	1052385	Callee	free		1047562	0					
ANR	1052386	Identifier	free		1047562	0					
ANR	1052387	ArgumentList	name		1047562	1					
ANR	1052388	Argument	name		1047562	0					
ANR	1052389	Identifier	name		1047562	0					
ANR	1052390	ExpressionStatement	name = strdup ( sdbkv_key ( kv ) )	1799:6:48949:48979	1047562	1	True				
ANR	1052391	AssignmentExpression	name = strdup ( sdbkv_key ( kv ) )		1047562	0		=			
ANR	1052392	Identifier	name		1047562	0					
ANR	1052393	CallExpression	strdup ( sdbkv_key ( kv ) )		1047562	1					
ANR	1052394	Callee	strdup		1047562	0					
ANR	1052395	Identifier	strdup		1047562	0					
ANR	1052396	ArgumentList	sdbkv_key ( kv )		1047562	1					
ANR	1052397	Argument	sdbkv_key ( kv )		1047562	0					
ANR	1052398	CallExpression	sdbkv_key ( kv )		1047562	0					
ANR	1052399	Callee	sdbkv_key		1047562	0					
ANR	1052400	Identifier	sdbkv_key		1047562	0					
ANR	1052401	ArgumentList	kv		1047562	1					
ANR	1052402	Argument	kv		1047562	0					
ANR	1052403	Identifier	kv		1047562	0					
ANR	1052404	IfStatement	if ( ! input [ 1 ] )		1047562	2					
ANR	1052405	Condition	! input [ 1 ]	1800:10:48991:48999	1047562	0	True				
ANR	1052406	UnaryOperationExpression	! input [ 1 ]		1047562	0					
ANR	1052407	UnaryOperator	!		1047562	0					
ANR	1052408	ArrayIndexing	input [ 1 ]		1047562	1					
ANR	1052409	Identifier	input		1047562	0					
ANR	1052410	PrimaryExpression	1		1047562	1					
ANR	1052411	CompoundStatement		795:21:20588:20588	1047562	1					
ANR	1052412	ExpressionStatement	r_cons_println ( name )	1801:7:49011:49032	1047562	0	True				
ANR	1052413	CallExpression	r_cons_println ( name )		1047562	0					
ANR	1052414	Callee	r_cons_println		1047562	0					
ANR	1052415	Identifier	r_cons_println		1047562	0					
ANR	1052416	ArgumentList	name		1047562	1					
ANR	1052417	Argument	name		1047562	0					
ANR	1052418	Identifier	name		1047562	0					
ANR	1052419	ElseStatement	else		1047562	0					
ANR	1052420	CompoundStatement		799:7:20695:20738	1047562	0					
ANR	1052421	IdentifierDeclStatement	"const char * q = sdb_fmt ( ""typedef.%s"" , name ) ;"	1803:7:49056:49100	1047562	0	True				
ANR	1052422	IdentifierDecl	"* q = sdb_fmt ( ""typedef.%s"" , name )"		1047562	0					
ANR	1052423	IdentifierDeclType	const char *		1047562	0					
ANR	1052424	Identifier	q		1047562	1					
ANR	1052425	AssignmentExpression	"* q = sdb_fmt ( ""typedef.%s"" , name )"		1047562	2		=			
ANR	1052426	Identifier	q		1047562	0					
ANR	1052427	CallExpression	"sdb_fmt ( ""typedef.%s"" , name )"		1047562	1					
ANR	1052428	Callee	sdb_fmt		1047562	0					
ANR	1052429	Identifier	sdb_fmt		1047562	0					
ANR	1052430	ArgumentList	"""typedef.%s"""		1047562	1					
ANR	1052431	Argument	"""typedef.%s"""		1047562	0					
ANR	1052432	PrimaryExpression	"""typedef.%s"""		1047562	0					
ANR	1052433	Argument	name		1047562	1					
ANR	1052434	Identifier	name		1047562	0					
ANR	1052435	IdentifierDeclStatement	"const char * res = sdb_const_get ( TDB , q , 0 ) ;"	1804:7:49109:49152	1047562	1	True				
ANR	1052436	IdentifierDecl	"* res = sdb_const_get ( TDB , q , 0 )"		1047562	0					
ANR	1052437	IdentifierDeclType	const char *		1047562	0					
ANR	1052438	Identifier	res		1047562	1					
ANR	1052439	AssignmentExpression	"* res = sdb_const_get ( TDB , q , 0 )"		1047562	2		=			
ANR	1052440	Identifier	res		1047562	0					
ANR	1052441	CallExpression	"sdb_const_get ( TDB , q , 0 )"		1047562	1					
ANR	1052442	Callee	sdb_const_get		1047562	0					
ANR	1052443	Identifier	sdb_const_get		1047562	0					
ANR	1052444	ArgumentList	TDB		1047562	1					
ANR	1052445	Argument	TDB		1047562	0					
ANR	1052446	Identifier	TDB		1047562	0					
ANR	1052447	Argument	q		1047562	1					
ANR	1052448	Identifier	q		1047562	0					
ANR	1052449	Argument	0		1047562	2					
ANR	1052450	PrimaryExpression	0		1047562	0					
ANR	1052451	ExpressionStatement	"pj_ks ( pj , name , res )"	1805:7:49161:49182	1047562	2	True				
ANR	1052452	CallExpression	"pj_ks ( pj , name , res )"		1047562	0					
ANR	1052453	Callee	pj_ks		1047562	0					
ANR	1052454	Identifier	pj_ks		1047562	0					
ANR	1052455	ArgumentList	pj		1047562	1					
ANR	1052456	Argument	pj		1047562	0					
ANR	1052457	Identifier	pj		1047562	0					
ANR	1052458	Argument	name		1047562	1					
ANR	1052459	Identifier	name		1047562	0					
ANR	1052460	Argument	res		1047562	2					
ANR	1052461	Identifier	res		1047562	0					
ANR	1052462	IfStatement	if ( input [ 1 ] == 'j' )		1047562	15					
ANR	1052463	Condition	input [ 1 ] == 'j'	1810:7:49217:49231	1047562	0	True				
ANR	1052464	EqualityExpression	input [ 1 ] == 'j'		1047562	0		==			
ANR	1052465	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1052466	Identifier	input		1047562	0					
ANR	1052467	PrimaryExpression	1		1047562	1					
ANR	1052468	PrimaryExpression	'j'		1047562	1					
ANR	1052469	CompoundStatement		805:24:20820:20820	1047562	1					
ANR	1052470	ExpressionStatement	pj_end ( pj )	1811:4:49240:49251	1047562	0	True				
ANR	1052471	CallExpression	pj_end ( pj )		1047562	0					
ANR	1052472	Callee	pj_end		1047562	0					
ANR	1052473	Identifier	pj_end		1047562	0					
ANR	1052474	ArgumentList	pj		1047562	1					
ANR	1052475	Argument	pj		1047562	0					
ANR	1052476	Identifier	pj		1047562	0					
ANR	1052477	IfStatement	if ( pj )		1047562	16					
ANR	1052478	Condition	pj	1813:7:49265:49266	1047562	0	True				
ANR	1052479	Identifier	pj		1047562	0					
ANR	1052480	CompoundStatement		808:11:20855:20855	1047562	1					
ANR	1052481	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	1814:4:49275:49313	1047562	0	True				
ANR	1052482	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		1047562	0					
ANR	1052483	Callee	r_cons_printf		1047562	0					
ANR	1052484	Identifier	r_cons_printf		1047562	0					
ANR	1052485	ArgumentList	"""%s\\n"""		1047562	1					
ANR	1052486	Argument	"""%s\\n"""		1047562	0					
ANR	1052487	PrimaryExpression	"""%s\\n"""		1047562	0					
ANR	1052488	Argument	pj_string ( pj )		1047562	1					
ANR	1052489	CallExpression	pj_string ( pj )		1047562	0					
ANR	1052490	Callee	pj_string		1047562	0					
ANR	1052491	Identifier	pj_string		1047562	0					
ANR	1052492	ArgumentList	pj		1047562	1					
ANR	1052493	Argument	pj		1047562	0					
ANR	1052494	Identifier	pj		1047562	0					
ANR	1052495	ExpressionStatement	pj_free ( pj )	1815:4:49319:49331	1047562	1	True				
ANR	1052496	CallExpression	pj_free ( pj )		1047562	0					
ANR	1052497	Callee	pj_free		1047562	0					
ANR	1052498	Identifier	pj_free		1047562	0					
ANR	1052499	ArgumentList	pj		1047562	1					
ANR	1052500	Argument	pj		1047562	0					
ANR	1052501	Identifier	pj		1047562	0					
ANR	1052502	ExpressionStatement	free ( name )	1817:3:49341:49352	1047562	17	True				
ANR	1052503	CallExpression	free ( name )		1047562	0					
ANR	1052504	Callee	free		1047562	0					
ANR	1052505	Identifier	free		1047562	0					
ANR	1052506	ArgumentList	name		1047562	1					
ANR	1052507	Argument	name		1047562	0					
ANR	1052508	Identifier	name		1047562	0					
ANR	1052509	ExpressionStatement	ls_free ( l )	1818:3:49357:49368	1047562	18	True				
ANR	1052510	CallExpression	ls_free ( l )		1047562	0					
ANR	1052511	Callee	ls_free		1047562	0					
ANR	1052512	Identifier	ls_free		1047562	0					
ANR	1052513	ArgumentList	l		1047562	1					
ANR	1052514	Argument	l		1047562	0					
ANR	1052515	Identifier	l		1047562	0					
ANR	1052516	BreakStatement	break ;	1819:3:49373:49378	1047562	19	True				
ANR	1052517	IfStatement	if ( input [ 1 ] == 'c' )		1047562	1					
ANR	1052518	Condition	input [ 1 ] == 'c'	1821:6:49390:49404	1047562	0	True				
ANR	1052519	EqualityExpression	input [ 1 ] == 'c'		1047562	0		==			
ANR	1052520	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1052521	Identifier	input		1047562	0					
ANR	1052522	PrimaryExpression	1		1047562	1					
ANR	1052523	PrimaryExpression	'c'		1047562	1					
ANR	1052524	CompoundStatement		822:3:21150:21168	1047562	1					
ANR	1052525	IdentifierDeclStatement	char * name = NULL ;	1822:3:49412:49429	1047562	0	True				
ANR	1052526	IdentifierDecl	* name = NULL		1047562	0					
ANR	1052527	IdentifierDeclType	char *		1047562	0					
ANR	1052528	Identifier	name		1047562	1					
ANR	1052529	AssignmentExpression	* name = NULL		1047562	2		=			
ANR	1052530	Identifier	NULL		1047562	0					
ANR	1052531	Identifier	NULL		1047562	1					
ANR	1052532	IdentifierDeclStatement	SdbKv * kv ;	1823:3:49434:49443	1047562	1	True				
ANR	1052533	IdentifierDecl	* kv		1047562	0					
ANR	1052534	IdentifierDeclType	SdbKv *		1047562	0					
ANR	1052535	Identifier	kv		1047562	1					
ANR	1052536	IdentifierDeclStatement	SdbListIter * iter ;	1824:3:49448:49465	1047562	2	True				
ANR	1052537	IdentifierDecl	* iter		1047562	0					
ANR	1052538	IdentifierDeclType	SdbListIter *		1047562	0					
ANR	1052539	Identifier	iter		1047562	1					
ANR	1052540	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( TDB , true ) ;"	1825:3:49470:49511	1047562	3	True				
ANR	1052541	IdentifierDecl	"* l = sdb_foreach_list ( TDB , true )"		1047562	0					
ANR	1052542	IdentifierDeclType	SdbList *		1047562	0					
ANR	1052543	Identifier	l		1047562	1					
ANR	1052544	AssignmentExpression	"* l = sdb_foreach_list ( TDB , true )"		1047562	2		=			
ANR	1052545	Identifier	l		1047562	0					
ANR	1052546	CallExpression	"sdb_foreach_list ( TDB , true )"		1047562	1					
ANR	1052547	Callee	sdb_foreach_list		1047562	0					
ANR	1052548	Identifier	sdb_foreach_list		1047562	0					
ANR	1052549	ArgumentList	TDB		1047562	1					
ANR	1052550	Argument	TDB		1047562	0					
ANR	1052551	Identifier	TDB		1047562	0					
ANR	1052552	Argument	true		1047562	1					
ANR	1052553	Identifier	true		1047562	0					
ANR	1052554	IdentifierDeclStatement	const char * arg = r_str_trim_ro ( input + 2 ) ;	1826:3:49516:49559	1047562	4	True				
ANR	1052555	IdentifierDecl	* arg = r_str_trim_ro ( input + 2 )		1047562	0					
ANR	1052556	IdentifierDeclType	const char *		1047562	0					
ANR	1052557	Identifier	arg		1047562	1					
ANR	1052558	AssignmentExpression	* arg = r_str_trim_ro ( input + 2 )		1047562	2		=			
ANR	1052559	Identifier	arg		1047562	0					
ANR	1052560	CallExpression	r_str_trim_ro ( input + 2 )		1047562	1					
ANR	1052561	Callee	r_str_trim_ro		1047562	0					
ANR	1052562	Identifier	r_str_trim_ro		1047562	0					
ANR	1052563	ArgumentList	input + 2		1047562	1					
ANR	1052564	Argument	input + 2		1047562	0					
ANR	1052565	AdditiveExpression	input + 2		1047562	0		+			
ANR	1052566	Identifier	input		1047562	0					
ANR	1052567	PrimaryExpression	2		1047562	1					
ANR	1052568	IdentifierDeclStatement	bool match = false ;	1827:3:49564:49582	1047562	5	True				
ANR	1052569	IdentifierDecl	match = false		1047562	0					
ANR	1052570	IdentifierDeclType	bool		1047562	0					
ANR	1052571	Identifier	match		1047562	1					
ANR	1052572	AssignmentExpression	match = false		1047562	2		=			
ANR	1052573	Identifier	false		1047562	0					
ANR	1052574	Identifier	false		1047562	1					
ANR	1052575	Statement	ls_foreach	1828:3:49587:49596	1047562	6	True				
ANR	1052576	Statement	(	1828:14:49598:49598	1047562	7	True				
ANR	1052577	Statement	l	1828:15:49599:49599	1047562	8	True				
ANR	1052578	Statement	","	1828:16:49600:49600	1047562	9	True				
ANR	1052579	Statement	iter	1828:18:49602:49605	1047562	10	True				
ANR	1052580	Statement	","	1828:22:49606:49606	1047562	11	True				
ANR	1052581	Statement	kv	1828:24:49608:49609	1047562	12	True				
ANR	1052582	Statement	)	1828:26:49610:49610	1047562	13	True				
ANR	1052583	CompoundStatement		823:28:21198:21198	1047562	14					
ANR	1052584	IfStatement	"if ( ! strcmp ( sdbkv_value ( kv ) , ""typedef"" ) )"		1047562	0					
ANR	1052585	Condition	"! strcmp ( sdbkv_value ( kv ) , ""typedef"" )"	1829:8:49622:49658	1047562	0	True				
ANR	1052586	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""typedef"" )"		1047562	0					
ANR	1052587	UnaryOperator	!		1047562	0					
ANR	1052588	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""typedef"" )"		1047562	1					
ANR	1052589	Callee	strcmp		1047562	0					
ANR	1052590	Identifier	strcmp		1047562	0					
ANR	1052591	ArgumentList	sdbkv_value ( kv )		1047562	1					
ANR	1052592	Argument	sdbkv_value ( kv )		1047562	0					
ANR	1052593	CallExpression	sdbkv_value ( kv )		1047562	0					
ANR	1052594	Callee	sdbkv_value		1047562	0					
ANR	1052595	Identifier	sdbkv_value		1047562	0					
ANR	1052596	ArgumentList	kv		1047562	1					
ANR	1052597	Argument	kv		1047562	0					
ANR	1052598	Identifier	kv		1047562	0					
ANR	1052599	Argument	"""typedef"""		1047562	1					
ANR	1052600	PrimaryExpression	"""typedef"""		1047562	0					
ANR	1052601	CompoundStatement		824:47:21247:21247	1047562	1					
ANR	1052602	IfStatement	"if ( ! name || strcmp ( sdbkv_value ( kv ) , name ) )"		1047562	0					
ANR	1052603	Condition	"! name || strcmp ( sdbkv_value ( kv ) , name )"	1830:9:49672:49711	1047562	0	True				
ANR	1052604	OrExpression	"! name || strcmp ( sdbkv_value ( kv ) , name )"		1047562	0		||			
ANR	1052605	UnaryOperationExpression	! name		1047562	0					
ANR	1052606	UnaryOperator	!		1047562	0					
ANR	1052607	Identifier	name		1047562	1					
ANR	1052608	CallExpression	"strcmp ( sdbkv_value ( kv ) , name )"		1047562	1					
ANR	1052609	Callee	strcmp		1047562	0					
ANR	1052610	Identifier	strcmp		1047562	0					
ANR	1052611	ArgumentList	sdbkv_value ( kv )		1047562	1					
ANR	1052612	Argument	sdbkv_value ( kv )		1047562	0					
ANR	1052613	CallExpression	sdbkv_value ( kv )		1047562	0					
ANR	1052614	Callee	sdbkv_value		1047562	0					
ANR	1052615	Identifier	sdbkv_value		1047562	0					
ANR	1052616	ArgumentList	kv		1047562	1					
ANR	1052617	Argument	kv		1047562	0					
ANR	1052618	Identifier	kv		1047562	0					
ANR	1052619	Argument	name		1047562	1					
ANR	1052620	Identifier	name		1047562	0					
ANR	1052621	CompoundStatement		836:6:21559:21602	1047562	1					
ANR	1052622	ExpressionStatement	free ( name )	1831:6:49722:49733	1047562	0	True				
ANR	1052623	CallExpression	free ( name )		1047562	0					
ANR	1052624	Callee	free		1047562	0					
ANR	1052625	Identifier	free		1047562	0					
ANR	1052626	ArgumentList	name		1047562	1					
ANR	1052627	Argument	name		1047562	0					
ANR	1052628	Identifier	name		1047562	0					
ANR	1052629	ExpressionStatement	name = strdup ( sdbkv_key ( kv ) )	1832:6:49741:49771	1047562	1	True				
ANR	1052630	AssignmentExpression	name = strdup ( sdbkv_key ( kv ) )		1047562	0		=			
ANR	1052631	Identifier	name		1047562	0					
ANR	1052632	CallExpression	strdup ( sdbkv_key ( kv ) )		1047562	1					
ANR	1052633	Callee	strdup		1047562	0					
ANR	1052634	Identifier	strdup		1047562	0					
ANR	1052635	ArgumentList	sdbkv_key ( kv )		1047562	1					
ANR	1052636	Argument	sdbkv_key ( kv )		1047562	0					
ANR	1052637	CallExpression	sdbkv_key ( kv )		1047562	0					
ANR	1052638	Callee	sdbkv_key		1047562	0					
ANR	1052639	Identifier	sdbkv_key		1047562	0					
ANR	1052640	ArgumentList	kv		1047562	1					
ANR	1052641	Argument	kv		1047562	0					
ANR	1052642	Identifier	kv		1047562	0					
ANR	1052643	IfStatement	if ( name && ( arg && * arg ) )		1047562	2					
ANR	1052644	Condition	name && ( arg && * arg )	1833:10:49783:49803	1047562	0	True				
ANR	1052645	AndExpression	name && ( arg && * arg )		1047562	0		&&			
ANR	1052646	Identifier	name		1047562	0					
ANR	1052647	AndExpression	arg && * arg		1047562	1		&&			
ANR	1052648	Identifier	arg		1047562	0					
ANR	1052649	UnaryOperationExpression	* arg		1047562	1					
ANR	1052650	UnaryOperator	*		1047562	0					
ANR	1052651	Identifier	arg		1047562	1					
ANR	1052652	CompoundStatement		828:33:21392:21392	1047562	1					
ANR	1052653	IfStatement	"if ( ! strcmp ( arg , name ) )"		1047562	0					
ANR	1052654	Condition	"! strcmp ( arg , name )"	1834:11:49819:49837	1047562	0	True				
ANR	1052655	UnaryOperationExpression	"! strcmp ( arg , name )"		1047562	0					
ANR	1052656	UnaryOperator	!		1047562	0					
ANR	1052657	CallExpression	"strcmp ( arg , name )"		1047562	1					
ANR	1052658	Callee	strcmp		1047562	0					
ANR	1052659	Identifier	strcmp		1047562	0					
ANR	1052660	ArgumentList	arg		1047562	1					
ANR	1052661	Argument	arg		1047562	0					
ANR	1052662	Identifier	arg		1047562	0					
ANR	1052663	Argument	name		1047562	1					
ANR	1052664	Identifier	name		1047562	0					
ANR	1052665	CompoundStatement		829:32:21426:21426	1047562	1					
ANR	1052666	ExpressionStatement	match = true	1835:8:49850:49862	1047562	0	True				
ANR	1052667	AssignmentExpression	match = true		1047562	0		=			
ANR	1052668	Identifier	match		1047562	0					
ANR	1052669	Identifier	true		1047562	1					
ANR	1052670	ElseStatement	else		1047562	0					
ANR	1052671	CompoundStatement		831:14:21464:21464	1047562	0					
ANR	1052672	ContinueStatement	continue ;	1837:8:49888:49896	1047562	0	True				
ANR	1052673	IdentifierDeclStatement	"const char * q = sdb_fmt ( ""typedef.%s"" , name ) ;"	1840:6:49921:49965	1047562	3	True				
ANR	1052674	IdentifierDecl	"* q = sdb_fmt ( ""typedef.%s"" , name )"		1047562	0					
ANR	1052675	IdentifierDeclType	const char *		1047562	0					
ANR	1052676	Identifier	q		1047562	1					
ANR	1052677	AssignmentExpression	"* q = sdb_fmt ( ""typedef.%s"" , name )"		1047562	2		=			
ANR	1052678	Identifier	q		1047562	0					
ANR	1052679	CallExpression	"sdb_fmt ( ""typedef.%s"" , name )"		1047562	1					
ANR	1052680	Callee	sdb_fmt		1047562	0					
ANR	1052681	Identifier	sdb_fmt		1047562	0					
ANR	1052682	ArgumentList	"""typedef.%s"""		1047562	1					
ANR	1052683	Argument	"""typedef.%s"""		1047562	0					
ANR	1052684	PrimaryExpression	"""typedef.%s"""		1047562	0					
ANR	1052685	Argument	name		1047562	1					
ANR	1052686	Identifier	name		1047562	0					
ANR	1052687	IdentifierDeclStatement	"const char * res = sdb_const_get ( TDB , q , 0 ) ;"	1841:6:49973:50016	1047562	4	True				
ANR	1052688	IdentifierDecl	"* res = sdb_const_get ( TDB , q , 0 )"		1047562	0					
ANR	1052689	IdentifierDeclType	const char *		1047562	0					
ANR	1052690	Identifier	res		1047562	1					
ANR	1052691	AssignmentExpression	"* res = sdb_const_get ( TDB , q , 0 )"		1047562	2		=			
ANR	1052692	Identifier	res		1047562	0					
ANR	1052693	CallExpression	"sdb_const_get ( TDB , q , 0 )"		1047562	1					
ANR	1052694	Callee	sdb_const_get		1047562	0					
ANR	1052695	Identifier	sdb_const_get		1047562	0					
ANR	1052696	ArgumentList	TDB		1047562	1					
ANR	1052697	Argument	TDB		1047562	0					
ANR	1052698	Identifier	TDB		1047562	0					
ANR	1052699	Argument	q		1047562	1					
ANR	1052700	Identifier	q		1047562	0					
ANR	1052701	Argument	0		1047562	2					
ANR	1052702	PrimaryExpression	0		1047562	0					
ANR	1052703	IfStatement	if ( res )		1047562	5					
ANR	1052704	Condition	res	1842:10:50028:50030	1047562	0	True				
ANR	1052705	Identifier	res		1047562	0					
ANR	1052706	CompoundStatement		837:15:21619:21619	1047562	1					
ANR	1052707	ExpressionStatement	"r_cons_printf ( ""%s %s %s;\\n"" , sdbkv_value ( kv ) , res , name )"	1843:7:50042:50100	1047562	0	True				
ANR	1052708	CallExpression	"r_cons_printf ( ""%s %s %s;\\n"" , sdbkv_value ( kv ) , res , name )"		1047562	0					
ANR	1052709	Callee	r_cons_printf		1047562	0					
ANR	1052710	Identifier	r_cons_printf		1047562	0					
ANR	1052711	ArgumentList	"""%s %s %s;\\n"""		1047562	1					
ANR	1052712	Argument	"""%s %s %s;\\n"""		1047562	0					
ANR	1052713	PrimaryExpression	"""%s %s %s;\\n"""		1047562	0					
ANR	1052714	Argument	sdbkv_value ( kv )		1047562	1					
ANR	1052715	CallExpression	sdbkv_value ( kv )		1047562	0					
ANR	1052716	Callee	sdbkv_value		1047562	0					
ANR	1052717	Identifier	sdbkv_value		1047562	0					
ANR	1052718	ArgumentList	kv		1047562	1					
ANR	1052719	Argument	kv		1047562	0					
ANR	1052720	Identifier	kv		1047562	0					
ANR	1052721	Argument	res		1047562	2					
ANR	1052722	Identifier	res		1047562	0					
ANR	1052723	Argument	name		1047562	3					
ANR	1052724	Identifier	name		1047562	0					
ANR	1052725	IfStatement	if ( match )		1047562	6					
ANR	1052726	Condition	match	1845:10:50120:50124	1047562	0	True				
ANR	1052727	Identifier	match		1047562	0					
ANR	1052728	CompoundStatement		840:17:21713:21713	1047562	1					
ANR	1052729	BreakStatement	break ;	1846:7:50136:50141	1047562	0	True				
ANR	1052730	ExpressionStatement	free ( name )	1851:3:50172:50183	1047562	15	True				
ANR	1052731	CallExpression	free ( name )		1047562	0					
ANR	1052732	Callee	free		1047562	0					
ANR	1052733	Identifier	free		1047562	0					
ANR	1052734	ArgumentList	name		1047562	1					
ANR	1052735	Argument	name		1047562	0					
ANR	1052736	Identifier	name		1047562	0					
ANR	1052737	ExpressionStatement	ls_free ( l )	1852:3:50188:50199	1047562	16	True				
ANR	1052738	CallExpression	ls_free ( l )		1047562	0					
ANR	1052739	Callee	ls_free		1047562	0					
ANR	1052740	Identifier	ls_free		1047562	0					
ANR	1052741	ArgumentList	l		1047562	1					
ANR	1052742	Argument	l		1047562	0					
ANR	1052743	Identifier	l		1047562	0					
ANR	1052744	BreakStatement	break ;	1853:3:50204:50209	1047562	17	True				
ANR	1052745	IfStatement	if ( input [ 1 ] == '?' )		1047562	2					
ANR	1052746	Condition	input [ 1 ] == '?'	1855:6:50221:50235	1047562	0	True				
ANR	1052747	EqualityExpression	input [ 1 ] == '?'		1047562	0		==			
ANR	1052748	ArrayIndexing	input [ 1 ]		1047562	0					
ANR	1052749	Identifier	input		1047562	0					
ANR	1052750	PrimaryExpression	1		1047562	1					
ANR	1052751	PrimaryExpression	'?'		1047562	1					
ANR	1052752	CompoundStatement		850:23:21824:21824	1047562	1					
ANR	1052753	ExpressionStatement	"r_core_cmd_help ( core , help_msg_tt )"	1856:3:50243:50278	1047562	0	True				
ANR	1052754	CallExpression	"r_core_cmd_help ( core , help_msg_tt )"		1047562	0					
ANR	1052755	Callee	r_core_cmd_help		1047562	0					
ANR	1052756	Identifier	r_core_cmd_help		1047562	0					
ANR	1052757	ArgumentList	core		1047562	1					
ANR	1052758	Argument	core		1047562	0					
ANR	1052759	Identifier	core		1047562	0					
ANR	1052760	Argument	help_msg_tt		1047562	1					
ANR	1052761	Identifier	help_msg_tt		1047562	0					
ANR	1052762	BreakStatement	break ;	1857:3:50283:50288	1047562	1	True				
ANR	1052763	IdentifierDeclStatement	char * s = strdup ( input + 2 ) ;	1859:2:50296:50324	1047562	3	True				
ANR	1052764	IdentifierDecl	* s = strdup ( input + 2 )		1047562	0					
ANR	1052765	IdentifierDeclType	char *		1047562	0					
ANR	1052766	Identifier	s		1047562	1					
ANR	1052767	AssignmentExpression	* s = strdup ( input + 2 )		1047562	2		=			
ANR	1052768	Identifier	s		1047562	0					
ANR	1052769	CallExpression	strdup ( input + 2 )		1047562	1					
ANR	1052770	Callee	strdup		1047562	0					
ANR	1052771	Identifier	strdup		1047562	0					
ANR	1052772	ArgumentList	input + 2		1047562	1					
ANR	1052773	Argument	input + 2		1047562	0					
ANR	1052774	AdditiveExpression	input + 2		1047562	0		+			
ANR	1052775	Identifier	input		1047562	0					
ANR	1052776	PrimaryExpression	2		1047562	1					
ANR	1052777	IdentifierDeclStatement	const char * istypedef ;	1860:2:50328:50349	1047562	4	True				
ANR	1052778	IdentifierDecl	* istypedef		1047562	0					
ANR	1052779	IdentifierDeclType	const char *		1047562	0					
ANR	1052780	Identifier	istypedef		1047562	1					
ANR	1052781	ExpressionStatement	"istypedef = sdb_const_get ( TDB , s , 0 )"	1861:2:50353:50390	1047562	5	True				
ANR	1052782	AssignmentExpression	"istypedef = sdb_const_get ( TDB , s , 0 )"		1047562	0		=			
ANR	1052783	Identifier	istypedef		1047562	0					
ANR	1052784	CallExpression	"sdb_const_get ( TDB , s , 0 )"		1047562	1					
ANR	1052785	Callee	sdb_const_get		1047562	0					
ANR	1052786	Identifier	sdb_const_get		1047562	0					
ANR	1052787	ArgumentList	TDB		1047562	1					
ANR	1052788	Argument	TDB		1047562	0					
ANR	1052789	Identifier	TDB		1047562	0					
ANR	1052790	Argument	s		1047562	1					
ANR	1052791	Identifier	s		1047562	0					
ANR	1052792	Argument	0		1047562	2					
ANR	1052793	PrimaryExpression	0		1047562	0					
ANR	1052794	IfStatement	"if ( istypedef && ! strncmp ( istypedef , ""typedef"" , 7 ) )"		1047562	6					
ANR	1052795	Condition	"istypedef && ! strncmp ( istypedef , ""typedef"" , 7 )"	1862:6:50398:50444	1047562	0	True				
ANR	1052796	AndExpression	"istypedef && ! strncmp ( istypedef , ""typedef"" , 7 )"		1047562	0		&&			
ANR	1052797	Identifier	istypedef		1047562	0					
ANR	1052798	UnaryOperationExpression	"! strncmp ( istypedef , ""typedef"" , 7 )"		1047562	1					
ANR	1052799	UnaryOperator	!		1047562	0					
ANR	1052800	CallExpression	"strncmp ( istypedef , ""typedef"" , 7 )"		1047562	1					
ANR	1052801	Callee	strncmp		1047562	0					
ANR	1052802	Identifier	strncmp		1047562	0					
ANR	1052803	ArgumentList	istypedef		1047562	1					
ANR	1052804	Argument	istypedef		1047562	0					
ANR	1052805	Identifier	istypedef		1047562	0					
ANR	1052806	Argument	"""typedef"""		1047562	1					
ANR	1052807	PrimaryExpression	"""typedef"""		1047562	0					
ANR	1052808	Argument	7		1047562	2					
ANR	1052809	PrimaryExpression	7		1047562	0					
ANR	1052810	CompoundStatement		859:3:22084:22127	1047562	1					
ANR	1052811	IdentifierDeclStatement	"const char * q = sdb_fmt ( ""typedef.%s"" , s ) ;"	1863:3:50452:50493	1047562	0	True				
ANR	1052812	IdentifierDecl	"* q = sdb_fmt ( ""typedef.%s"" , s )"		1047562	0					
ANR	1052813	IdentifierDeclType	const char *		1047562	0					
ANR	1052814	Identifier	q		1047562	1					
ANR	1052815	AssignmentExpression	"* q = sdb_fmt ( ""typedef.%s"" , s )"		1047562	2		=			
ANR	1052816	Identifier	q		1047562	0					
ANR	1052817	CallExpression	"sdb_fmt ( ""typedef.%s"" , s )"		1047562	1					
ANR	1052818	Callee	sdb_fmt		1047562	0					
ANR	1052819	Identifier	sdb_fmt		1047562	0					
ANR	1052820	ArgumentList	"""typedef.%s"""		1047562	1					
ANR	1052821	Argument	"""typedef.%s"""		1047562	0					
ANR	1052822	PrimaryExpression	"""typedef.%s"""		1047562	0					
ANR	1052823	Argument	s		1047562	1					
ANR	1052824	Identifier	s		1047562	0					
ANR	1052825	IdentifierDeclStatement	"const char * res = sdb_const_get ( TDB , q , 0 ) ;"	1864:3:50498:50541	1047562	1	True				
ANR	1052826	IdentifierDecl	"* res = sdb_const_get ( TDB , q , 0 )"		1047562	0					
ANR	1052827	IdentifierDeclType	const char *		1047562	0					
ANR	1052828	Identifier	res		1047562	1					
ANR	1052829	AssignmentExpression	"* res = sdb_const_get ( TDB , q , 0 )"		1047562	2		=			
ANR	1052830	Identifier	res		1047562	0					
ANR	1052831	CallExpression	"sdb_const_get ( TDB , q , 0 )"		1047562	1					
ANR	1052832	Callee	sdb_const_get		1047562	0					
ANR	1052833	Identifier	sdb_const_get		1047562	0					
ANR	1052834	ArgumentList	TDB		1047562	1					
ANR	1052835	Argument	TDB		1047562	0					
ANR	1052836	Identifier	TDB		1047562	0					
ANR	1052837	Argument	q		1047562	1					
ANR	1052838	Identifier	q		1047562	0					
ANR	1052839	Argument	0		1047562	2					
ANR	1052840	PrimaryExpression	0		1047562	0					
ANR	1052841	IfStatement	if ( res )		1047562	2					
ANR	1052842	Condition	res	1865:7:50550:50552	1047562	0	True				
ANR	1052843	Identifier	res		1047562	0					
ANR	1052844	ExpressionStatement	r_cons_println ( res )	1866:4:50559:50579	1047562	1	True				
ANR	1052845	CallExpression	r_cons_println ( res )		1047562	0					
ANR	1052846	Callee	r_cons_println		1047562	0					
ANR	1052847	Identifier	r_cons_println		1047562	0					
ANR	1052848	ArgumentList	res		1047562	1					
ANR	1052849	Argument	res		1047562	0					
ANR	1052850	Identifier	res		1047562	0					
ANR	1052851	ElseStatement	else		1047562	0					
ANR	1052852	CompoundStatement		862:9:22176:22176	1047562	0					
ANR	1052853	ExpressionStatement	"eprintf ( ""This is not an typedef\\n"" )"	1868:3:50595:50631	1047562	0	True				
ANR	1052854	CallExpression	"eprintf ( ""This is not an typedef\\n"" )"		1047562	0					
ANR	1052855	Callee	eprintf		1047562	0					
ANR	1052856	Identifier	eprintf		1047562	0					
ANR	1052857	ArgumentList	"""This is not an typedef\\n"""		1047562	1					
ANR	1052858	Argument	"""This is not an typedef\\n"""		1047562	0					
ANR	1052859	PrimaryExpression	"""This is not an typedef\\n"""		1047562	0					
ANR	1052860	ExpressionStatement	free ( s )	1870:2:50639:50647	1047562	7	True				
ANR	1052861	CallExpression	free ( s )		1047562	0					
ANR	1052862	Callee	free		1047562	0					
ANR	1052863	Identifier	free		1047562	0					
ANR	1052864	ArgumentList	s		1047562	1					
ANR	1052865	Argument	s		1047562	0					
ANR	1052866	Identifier	s		1047562	0					
ANR	1052867	BreakStatement	break ;	1871:3:50652:50657	1047562	53	True				
ANR	1052868	Label	case '?' :	1872:1:50660:50668	1047562	54	True				
ANR	1052869	ExpressionStatement	show_help ( core )	1873:2:50672:50688	1047562	55	True				
ANR	1052870	CallExpression	show_help ( core )		1047562	0					
ANR	1052871	Callee	show_help		1047562	0					
ANR	1052872	Identifier	show_help		1047562	0					
ANR	1052873	ArgumentList	core		1047562	1					
ANR	1052874	Argument	core		1047562	0					
ANR	1052875	Identifier	core		1047562	0					
ANR	1052876	BreakStatement	break ;	1874:2:50692:50697	1047562	56	True				
ANR	1052877	ReturnStatement	return true ;	1876:1:50703:50714	1047562	5	True				
ANR	1052878	Identifier	true		1047562	0					
ANR	1052879	ReturnType	static int		1047562	1					
ANR	1052880	Identifier	cmd_type		1047562	2					
ANR	1052881	ParameterList	"void * data , const char * input"		1047562	3					
ANR	1052882	Parameter	void * data	1006:20:28382:28391	1047562	0	True				
ANR	1052883	ParameterType	void *		1047562	0					
ANR	1052884	Identifier	data		1047562	1					
ANR	1052885	Parameter	const char * input	1006:32:28394:28410	1047562	1	True				
ANR	1052886	ParameterType	const char *		1047562	0					
ANR	1052887	Identifier	input		1047562	1					
ANR	1052888	CFGEntryNode	ENTRY		1047562		True				
ANR	1052889	CFGExitNode	EXIT		1047562		True				
ANR	1052890	CFGErrorNode	ERROR		1047562		True				
ANR	1052891	Symbol	* op . src		1047562						
ANR	1052892	Symbol	* fcn		1047562						
ANR	1052893	Symbol	* input		1047562						
ANR	1052894	Symbol	strchr		1047562						
ANR	1052895	Symbol	core -> offset		1047562						
ANR	1052896	Symbol	& op		1047562						
ANR	1052897	Symbol	type		1047562						
ANR	1052898	Symbol	r_str_word_set0		1047562						
ANR	1052899	Symbol	sdb_const_get		1047562						
ANR	1052900	Symbol	asmop		1047562						
ANR	1052901	Symbol	strncmp		1047562						
ANR	1052902	Symbol	sdbdeletelink		1047562						
ANR	1052903	Symbol	tmp		1047562						
ANR	1052904	Symbol	* off		1047562						
ANR	1052905	Symbol	r_anal_op		1047562						
ANR	1052906	Symbol	core -> blocksize		1047562						
ANR	1052907	Symbol	* op . dst		1047562						
ANR	1052908	Symbol	r_list_newf		1047562						
ANR	1052909	Symbol	print_link_json_cb		1047562						
ANR	1052910	Symbol	iter		1047562						
ANR	1052911	Symbol	op . dst -> imm		1047562						
ANR	1052912	Symbol	it		1047562						
ANR	1052913	Symbol	* member		1047562						
ANR	1052914	Symbol	core -> anal -> fcns		1047562						
ANR	1052915	Symbol	r_type_get_by_offset		1047562						
ANR	1052916	Symbol	member -> name		1047562						
ANR	1052917	Symbol	str		1047562						
ANR	1052918	Symbol	input		1047562						
ANR	1052919	Symbol	sdb_new		1047562						
ANR	1052920	Symbol	core -> parser		1047562						
ANR	1052921	Symbol	r_list_find		1047562						
ANR	1052922	Symbol	r_type_get_enum		1047562						
ANR	1052923	Symbol	filename		1047562						
ANR	1052924	Symbol	r_str_trim_ro		1047562						
ANR	1052925	Symbol	r_list_empty		1047562						
ANR	1052926	Symbol	* * op . src		1047562						
ANR	1052927	Symbol	* arg		1047562						
ANR	1052928	Symbol	* tmp		1047562						
ANR	1052929	Symbol	op . src [ i ] -> imm		1047562						
ANR	1052930	Symbol	r_parse_c_file		1047562						
ANR	1052931	Symbol	* core		1047562						
ANR	1052932	Symbol	r_config_get		1047562						
ANR	1052933	Symbol	core -> assembler		1047562						
ANR	1052934	Symbol	core -> anal		1047562						
ANR	1052935	Symbol	toff		1047562						
ANR	1052936	Symbol	out		1047562						
ANR	1052937	Symbol	* * op		1047562						
ANR	1052938	Symbol	fcn		1047562						
ANR	1052939	Symbol	r_cons_is_breaked		1047562						
ANR	1052940	Symbol	core -> io		1047562						
ANR	1052941	Symbol	arg		1047562						
ANR	1052942	Symbol	member		1047562						
ANR	1052943	Symbol	stdifunion		1047562						
ANR	1052944	Symbol	op . dst		1047562						
ANR	1052945	Symbol	free		1047562						
ANR	1052946	Symbol	r_str_startswith		1047562						
ANR	1052947	Symbol	* name		1047562						
ANR	1052948	Symbol	error_msg		1047562						
ANR	1052949	Symbol	sdb_foreach_list		1047562						
ANR	1052950	Symbol	i		1047562						
ANR	1052951	Symbol	printkey_cb		1047562						
ANR	1052952	Symbol	r_str_word_get0		1047562						
ANR	1052953	Symbol	kv		1047562						
ANR	1052954	Symbol	sdbkv_value		1047562						
ANR	1052955	Symbol	l		1047562						
ANR	1052956	Symbol	member_name		1047562						
ANR	1052957	Symbol	off		1047562						
ANR	1052958	Symbol	otypes		1047562						
ANR	1052959	Symbol	nargs		1047562						
ANR	1052960	Symbol	q		1047562						
ANR	1052961	Symbol	R_TYPE_ENUM		1047562						
ANR	1052962	Symbol	* core -> anal		1047562						
ANR	1052963	Symbol	s		1047562						
ANR	1052964	Symbol	* member_name ++		1047562						
ANR	1052965	Symbol	& asmop		1047562						
ANR	1052966	Symbol	r_parse_c_string		1047562						
ANR	1052967	Symbol	op . src [ i ] -> delta		1047562						
ANR	1052968	Symbol	otype		1047562						
ANR	1052969	Symbol	op . src		1047562						
ANR	1052970	Symbol	r_type_format		1047562						
ANR	1052971	Symbol	printfunc_json_cb		1047562						
ANR	1052972	Symbol	r_list_length		1047562						
ANR	1052973	Symbol	istypedef		1047562						
ANR	1052974	Symbol	help_msg_ts		1047562						
ANR	1052975	Symbol	data		1047562						
ANR	1052976	Symbol	help_msg_tu		1047562						
ANR	1052977	Symbol	pj_string		1047562						
ANR	1052978	Symbol	* op		1047562						
ANR	1052979	Symbol	fcn -> name		1047562						
ANR	1052980	Symbol	ty		1047562						
ANR	1052981	Symbol	help_msg_tt		1047562						
ANR	1052982	Symbol	dir		1047562						
ANR	1052983	Symbol	fmt		1047562						
ANR	1052984	Symbol	help_msg_tl		1047562						
ANR	1052985	Symbol	IS_WHITESPACE		1047562						
ANR	1052986	Symbol	help_msg_to		1047562						
ANR	1052987	Symbol	r_str_trim_dup		1047562						
ANR	1052988	Symbol	help_msg_ta		1047562						
ANR	1052989	Symbol	help_msg_tc		1047562						
ANR	1052990	Symbol	help_msg_t_minus		1047562						
ANR	1052991	Symbol	help_msg_te		1047562						
ANR	1052992	Symbol	help_msg_td		1047562						
ANR	1052993	Symbol	help_msg_tf		1047562						
ANR	1052994	Symbol	* ptr		1047562						
ANR	1052995	Symbol	r_core_editor		1047562						
ANR	1052996	Symbol	& error_msg		1047562						
ANR	1052997	Symbol	core -> num		1047562						
ANR	1052998	Symbol	dbpath		1047562						
ANR	1052999	Symbol	strcmp		1047562						
ANR	1053000	Symbol	ret		1047562						
ANR	1053001	Symbol	print_link_readable_json_cb		1047562						
ANR	1053002	Symbol	res		1047562						
ANR	1053003	Symbol	typeoffs		1047562						
ANR	1053004	Symbol	* * i		1047562						
ANR	1053005	Symbol	NULL		1047562						
ANR	1053006	Symbol	type2		1047562						
ANR	1053007	Symbol	r_type_get_bitsize		1047562						
ANR	1053008	Symbol	R_ANAL_OP_MASK_VAL		1047562						
ANR	1053009	Symbol	query		1047562						
ANR	1053010	Symbol	sdb_querys		1047562						
ANR	1053011	Symbol	list		1047562						
ANR	1053012	Symbol	stderr		1047562						
ANR	1053013	Symbol	iter2 -> n		1047562						
ANR	1053014	Symbol	core		1047562						
ANR	1053015	Symbol	uniq		1047562						
ANR	1053016	Symbol	print_link_readable_cb		1047562						
ANR	1053017	Symbol	true		1047562						
ANR	1053018	Symbol	name		1047562						
ANR	1053019	Symbol	print_link_r_cb		1047562						
ANR	1053020	Symbol	idx		1047562						
ANR	1053021	Symbol	r_anal_var_addr		1047562						
ANR	1053022	Symbol	r_anal_get_fcn_at		1047562						
ANR	1053023	Symbol	code		1047562						
ANR	1053024	Symbol	* idx ++		1047562						
ANR	1053025	Symbol	r_sandbox_enable		1047562						
ANR	1053026	Symbol	link		1047562						
ANR	1053027	Symbol	stdiflink		1047562						
ANR	1053028	Symbol	core -> anal -> sdb_types		1047562						
ANR	1053029	Symbol	r_str_newf		1047562						
ANR	1053030	Symbol	offimm		1047562						
ANR	1053031	Symbol	r_num_math		1047562						
ANR	1053032	Symbol	r_core_cmd_strf		1047562						
ANR	1053033	Symbol	TDB		1047562						
ANR	1053034	Symbol	member -> val		1047562						
ANR	1053035	Symbol	r_type_enum_member		1047562						
ANR	1053036	Symbol	homefile		1047562						
ANR	1053037	Symbol	myType		1047562						
ANR	1053038	Symbol	print_link_cb		1047562						
ANR	1053039	Symbol	addr		1047562						
ANR	1053040	Symbol	UT64_MAX		1047562						
ANR	1053041	Symbol	r_str_home		1047562						
ANR	1053042	Symbol	sdb_fmt		1047562						
ANR	1053043	Symbol	* * core		1047562						
ANR	1053044	Symbol	uniqList		1047562						
ANR	1053045	Symbol	core -> config		1047562						
ANR	1053046	Symbol	db_tmp		1047562						
ANR	1053047	Symbol	op		1047562						
ANR	1053048	Symbol	temp		1047562						
ANR	1053049	Symbol	sdbkv_key		1047562						
ANR	1053050	Symbol	get_uniq_type		1047562						
ANR	1053051	Symbol	r_type_kind		1047562						
ANR	1053052	Symbol	* ptr ++		1047562						
ANR	1053053	Symbol	iter2		1047562						
ANR	1053054	Symbol	false		1047562						
ANR	1053055	Symbol	match		1047562						
ANR	1053056	Symbol	sdb_foreach_list_filter		1047562						
ANR	1053057	Symbol	TDB_		1047562						
ANR	1053058	Symbol	sdb_get		1047562						
ANR	1053059	Symbol	stdiffunc		1047562						
ANR	1053060	Symbol	op . dst -> delta		1047562						
ANR	1053061	Symbol	ptr		1047562						
ANR	1053062	Symbol	* filename		1047562						
ANR	1053063	Symbol	* i		1047562						
ANR	1053064	Symbol	r_anal_get_fcn_in		1047562						
ANR	1053065	Symbol	pj		1047562						
ANR	1053066	Symbol	pj_new		1047562						
ANR	1053067	Symbol	* iter2		1047562						
ANR	1053068	Symbol	strdup		1047562						
ANR	1053069	Symbol	r_file_exists		1047562						
ANR	1053070	Symbol	stdifstruct		1047562						
